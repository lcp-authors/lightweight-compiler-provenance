
../repos/oor/oor/oor:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x60fe9]        # 463ff8 <strcmp@plt+0x60870>
  40300f:	test   rax,rax
  403012:	je     403016 <xmlReadMemory@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <xmlReadMemory@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x60fe2]        # 464008 <strcmp@plt+0x60880>
  403026:	jmp    QWORD PTR [rip+0x60fe4]        # 464010 <strcmp@plt+0x60888>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <xmlReadMemory@plt>:
  403030:	jmp    QWORD PTR [rip+0x60fe2]        # 464018 <strcmp@plt+0x60890>
  403036:	push   0x0
  40303b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403040 <__errno_location@plt>:
  403040:	jmp    QWORD PTR [rip+0x60fda]        # 464020 <strcmp@plt+0x60898>
  403046:	push   0x1
  40304b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403050 <printf@plt>:
  403050:	jmp    QWORD PTR [rip+0x60fd2]        # 464028 <strcmp@plt+0x608a0>
  403056:	push   0x2
  40305b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403060 <sendto@plt>:
  403060:	jmp    QWORD PTR [rip+0x60fca]        # 464030 <strcmp@plt+0x608a8>
  403066:	push   0x3
  40306b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403070 <syslog@plt>:
  403070:	jmp    QWORD PTR [rip+0x60fc2]        # 464038 <strcmp@plt+0x608b0>
  403076:	push   0x4
  40307b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403080 <__ctype_toupper_loc@plt>:
  403080:	jmp    QWORD PTR [rip+0x60fba]        # 464040 <strcmp@plt+0x608b8>
  403086:	push   0x5
  40308b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403090 <bind@plt>:
  403090:	jmp    QWORD PTR [rip+0x60fb2]        # 464048 <strcmp@plt+0x608c0>
  403096:	push   0x6
  40309b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004030a0 <__ctype_tolower_loc@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x60faa]        # 464050 <strcmp@plt+0x608c8>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004030b0 <sprintf@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x60fa2]        # 464058 <strcmp@plt+0x608d0>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004030c0 <if_nametoindex@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x60f9a]        # 464060 <strcmp@plt+0x608d8>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004030d0 <strstr@plt>:
  4030d0:	jmp    QWORD PTR [rip+0x60f92]        # 464068 <strcmp@plt+0x608e0>
  4030d6:	push   0xa
  4030db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004030e0 <srandom@plt>:
  4030e0:	jmp    QWORD PTR [rip+0x60f8a]        # 464070 <strcmp@plt+0x608e8>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004030f0 <socket@plt>:
  4030f0:	jmp    QWORD PTR [rip+0x60f82]        # 464078 <strcmp@plt+0x608f0>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403100 <zmq_strerror@plt>:
  403100:	jmp    QWORD PTR [rip+0x60f7a]        # 464080 <strcmp@plt+0x608f8>
  403106:	push   0xd
  40310b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403110 <fork@plt>:
  403110:	jmp    QWORD PTR [rip+0x60f72]        # 464088 <strcmp@plt+0x60900>
  403116:	push   0xe
  40311b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403120 <cfg_getnstr@plt>:
  403120:	jmp    QWORD PTR [rip+0x60f6a]        # 464090 <strcmp@plt+0x60908>
  403126:	push   0xf
  40312b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403130 <recvmsg@plt>:
  403130:	jmp    QWORD PTR [rip+0x60f62]        # 464098 <strcmp@plt+0x60910>
  403136:	push   0x10
  40313b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403140 <nanosleep@plt>:
  403140:	jmp    QWORD PTR [rip+0x60f5a]        # 4640a0 <strcmp@plt+0x60918>
  403146:	push   0x11
  40314b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403150 <cfg_free@plt>:
  403150:	jmp    QWORD PTR [rip+0x60f52]        # 4640a8 <strcmp@plt+0x60920>
  403156:	push   0x12
  40315b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403160 <recv@plt>:
  403160:	jmp    QWORD PTR [rip+0x60f4a]        # 4640b0 <strcmp@plt+0x60928>
  403166:	push   0x13
  40316b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403170 <strerror@plt>:
  403170:	jmp    QWORD PTR [rip+0x60f42]        # 4640b8 <strcmp@plt+0x60930>
  403176:	push   0x14
  40317b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403180 <write@plt>:
  403180:	jmp    QWORD PTR [rip+0x60f3a]        # 4640c0 <strcmp@plt+0x60938>
  403186:	push   0x15
  40318b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403190 <strchr@plt>:
  403190:	jmp    QWORD PTR [rip+0x60f32]        # 4640c8 <strcmp@plt+0x60940>
  403196:	push   0x16
  40319b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004031a0 <fgets_unlocked@plt>:
  4031a0:	jmp    QWORD PTR [rip+0x60f2a]        # 4640d0 <strcmp@plt+0x60948>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004031b0 <cfg_getint@plt>:
  4031b0:	jmp    QWORD PTR [rip+0x60f22]        # 4640d8 <strcmp@plt+0x60950>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004031c0 <getprotobyname@plt>:
  4031c0:	jmp    QWORD PTR [rip+0x60f1a]        # 4640e0 <strcmp@plt+0x60958>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004031d0 <dirname@plt>:
  4031d0:	jmp    QWORD PTR [rip+0x60f12]        # 4640e8 <strcmp@plt+0x60960>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004031e0 <strlen@plt>:
  4031e0:	jmp    QWORD PTR [rip+0x60f0a]        # 4640f0 <strcmp@plt+0x60968>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004031f0 <cfg_getnsec@plt>:
  4031f0:	jmp    QWORD PTR [rip+0x60f02]        # 4640f8 <strcmp@plt+0x60970>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403200 <memcmp@plt>:
  403200:	jmp    QWORD PTR [rip+0x60efa]        # 464100 <strcmp@plt+0x60978>
  403206:	push   0x1d
  40320b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403210 <xmlNextElementSibling@plt>:
  403210:	jmp    QWORD PTR [rip+0x60ef2]        # 464108 <strcmp@plt+0x60980>
  403216:	push   0x1e
  40321b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403220 <strncmp@plt>:
  403220:	jmp    QWORD PTR [rip+0x60eea]        # 464110 <strcmp@plt+0x60988>
  403226:	push   0x1f
  40322b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403230 <send@plt>:
  403230:	jmp    QWORD PTR [rip+0x60ee2]        # 464118 <strcmp@plt+0x60990>
  403236:	push   0x20
  40323b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403240 <random@plt>:
  403240:	jmp    QWORD PTR [rip+0x60eda]        # 464120 <strcmp@plt+0x60998>
  403246:	push   0x21
  40324b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403250 <strncpy@plt>:
  403250:	jmp    QWORD PTR [rip+0x60ed2]        # 464128 <strcmp@plt+0x609a0>
  403256:	push   0x22
  40325b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403260 <memset@plt>:
  403260:	jmp    QWORD PTR [rip+0x60eca]        # 464130 <strcmp@plt+0x609a8>
  403266:	push   0x23
  40326b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403270 <abort@plt>:
  403270:	jmp    QWORD PTR [rip+0x60ec2]        # 464138 <strcmp@plt+0x609b0>
  403276:	push   0x24
  40327b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403280 <cfg_getsec@plt>:
  403280:	jmp    QWORD PTR [rip+0x60eba]        # 464140 <strcmp@plt+0x609b8>
  403286:	push   0x25
  40328b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403290 <fcntl@plt>:
  403290:	jmp    QWORD PTR [rip+0x60eb2]        # 464148 <strcmp@plt+0x609c0>
  403296:	push   0x26
  40329b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004032a0 <getnameinfo@plt>:
  4032a0:	jmp    QWORD PTR [rip+0x60eaa]        # 464150 <strcmp@plt+0x609c8>
  4032a6:	push   0x27
  4032ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004032b0 <__assert_fail@plt>:
  4032b0:	jmp    QWORD PTR [rip+0x60ea2]        # 464158 <strcmp@plt+0x609d0>
  4032b6:	push   0x28
  4032bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004032c0 <cfg_getstr@plt>:
  4032c0:	jmp    QWORD PTR [rip+0x60e9a]        # 464160 <strcmp@plt+0x609d8>
  4032c6:	push   0x29
  4032cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004032d0 <calloc@plt>:
  4032d0:	jmp    QWORD PTR [rip+0x60e92]        # 464168 <strcmp@plt+0x609e0>
  4032d6:	push   0x2a
  4032db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004032e0 <zmq_bind@plt>:
  4032e0:	jmp    QWORD PTR [rip+0x60e8a]        # 464170 <strcmp@plt+0x609e8>
  4032e6:	push   0x2b
  4032eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004032f0 <open@plt>:
  4032f0:	jmp    QWORD PTR [rip+0x60e82]        # 464178 <strcmp@plt+0x609f0>
  4032f6:	push   0x2c
  4032fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403300 <localtime@plt>:
  403300:	jmp    QWORD PTR [rip+0x60e7a]        # 464180 <strcmp@plt+0x609f8>
  403306:	push   0x2d
  40330b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403310 <xmlFirstElementChild@plt>:
  403310:	jmp    QWORD PTR [rip+0x60e72]        # 464188 <strcmp@plt+0x60a00>
  403316:	push   0x2e
  40331b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403320 <strftime@plt>:
  403320:	jmp    QWORD PTR [rip+0x60e6a]        # 464190 <strcmp@plt+0x60a08>
  403326:	push   0x2f
  40332b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403330 <memcpy@plt>:
  403330:	jmp    QWORD PTR [rip+0x60e62]        # 464198 <strcmp@plt+0x60a10>
  403336:	push   0x30
  40333b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403340 <timer_settime@plt>:
  403340:	jmp    QWORD PTR [rip+0x60e5a]        # 4641a0 <strcmp@plt+0x60a18>
  403346:	push   0x31
  40334b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403350 <cfg_getbool@plt>:
  403350:	jmp    QWORD PTR [rip+0x60e52]        # 4641a8 <strcmp@plt+0x60a20>
  403356:	push   0x32
  40335b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403360 <clock_gettime@plt>:
  403360:	jmp    QWORD PTR [rip+0x60e4a]        # 4641b0 <strcmp@plt+0x60a28>
  403366:	push   0x33
  40336b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403370 <time@plt>:
  403370:	jmp    QWORD PTR [rip+0x60e42]        # 4641b8 <strcmp@plt+0x60a30>
  403376:	push   0x34
  40337b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403380 <getsockname@plt>:
  403380:	jmp    QWORD PTR [rip+0x60e3a]        # 4641c0 <strcmp@plt+0x60a38>
  403386:	push   0x35
  40338b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403390 <strcpy@plt>:
  403390:	jmp    QWORD PTR [rip+0x60e32]        # 4641c8 <strcmp@plt+0x60a40>
  403396:	push   0x36
  40339b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004033a0 <cfg_init@plt>:
  4033a0:	jmp    QWORD PTR [rip+0x60e2a]        # 4641d0 <strcmp@plt+0x60a48>
  4033a6:	push   0x37
  4033ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004033b0 <select@plt>:
  4033b0:	jmp    QWORD PTR [rip+0x60e22]        # 4641d8 <strcmp@plt+0x60a50>
  4033b6:	push   0x38
  4033bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004033c0 <zmq_connect@plt>:
  4033c0:	jmp    QWORD PTR [rip+0x60e1a]        # 4641e0 <strcmp@plt+0x60a58>
  4033c6:	push   0x39
  4033cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004033d0 <zmq_send@plt>:
  4033d0:	jmp    QWORD PTR [rip+0x60e12]        # 4641e8 <strcmp@plt+0x60a60>
  4033d6:	push   0x3a
  4033db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004033e0 <fclose@plt>:
  4033e0:	jmp    QWORD PTR [rip+0x60e0a]        # 4641f0 <strcmp@plt+0x60a68>
  4033e6:	push   0x3b
  4033eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004033f0 <inet_ntop@plt>:
  4033f0:	jmp    QWORD PTR [rip+0x60e02]        # 4641f8 <strcmp@plt+0x60a70>
  4033f6:	push   0x3c
  4033fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403400 <zmq_poll@plt>:
  403400:	jmp    QWORD PTR [rip+0x60dfa]        # 464200 <strcmp@plt+0x60a78>
  403406:	push   0x3d
  40340b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403410 <freopen@plt>:
  403410:	jmp    QWORD PTR [rip+0x60df2]        # 464208 <strcmp@plt+0x60a80>
  403416:	push   0x3e
  40341b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403420 <__ctype_b_loc@plt>:
  403420:	jmp    QWORD PTR [rip+0x60dea]        # 464210 <strcmp@plt+0x60a88>
  403426:	push   0x3f
  40342b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403430 <xmlNodeGetContent@plt>:
  403430:	jmp    QWORD PTR [rip+0x60de2]        # 464218 <strcmp@plt+0x60a90>
  403436:	push   0x40
  40343b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403440 <setsid@plt>:
  403440:	jmp    QWORD PTR [rip+0x60dda]        # 464220 <strcmp@plt+0x60a98>
  403446:	push   0x41
  40344b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403450 <fputs@plt>:
  403450:	jmp    QWORD PTR [rip+0x60dd2]        # 464228 <strcmp@plt+0x60aa0>
  403456:	push   0x42
  40345b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403460 <fflush@plt>:
  403460:	jmp    QWORD PTR [rip+0x60dca]        # 464230 <strcmp@plt+0x60aa8>
  403466:	push   0x43
  40346b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403470 <capget@plt>:
  403470:	jmp    QWORD PTR [rip+0x60dc2]        # 464238 <strcmp@plt+0x60ab0>
  403476:	push   0x44
  40347b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403480 <fopen@plt>:
  403480:	jmp    QWORD PTR [rip+0x60dba]        # 464240 <strcmp@plt+0x60ab8>
  403486:	push   0x45
  40348b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403490 <signal@plt>:
  403490:	jmp    QWORD PTR [rip+0x60db2]        # 464248 <strcmp@plt+0x60ac0>
  403496:	push   0x46
  40349b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004034a0 <exit@plt>:
  4034a0:	jmp    QWORD PTR [rip+0x60daa]        # 464250 <strcmp@plt+0x60ac8>
  4034a6:	push   0x47
  4034ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004034b0 <timer_delete@plt>:
  4034b0:	jmp    QWORD PTR [rip+0x60da2]        # 464258 <strcmp@plt+0x60ad0>
  4034b6:	push   0x48
  4034bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004034c0 <fputc@plt>:
  4034c0:	jmp    QWORD PTR [rip+0x60d9a]        # 464260 <strcmp@plt+0x60ad8>
  4034c6:	push   0x49
  4034cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004034d0 <sigemptyset@plt>:
  4034d0:	jmp    QWORD PTR [rip+0x60d92]        # 464268 <strcmp@plt+0x60ae0>
  4034d6:	push   0x4a
  4034db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004034e0 <sigaction@plt>:
  4034e0:	jmp    QWORD PTR [rip+0x60d8a]        # 464270 <strcmp@plt+0x60ae8>
  4034e6:	push   0x4b
  4034eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004034f0 <getaddrinfo@plt>:
  4034f0:	jmp    QWORD PTR [rip+0x60d82]        # 464278 <strcmp@plt+0x60af0>
  4034f6:	push   0x4c
  4034fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403500 <freeaddrinfo@plt>:
  403500:	jmp    QWORD PTR [rip+0x60d7a]        # 464280 <strcmp@plt+0x60af8>
  403506:	push   0x4d
  40350b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403510 <malloc@plt>:
  403510:	jmp    QWORD PTR [rip+0x60d72]        # 464288 <strcmp@plt+0x60b00>
  403516:	push   0x4e
  40351b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403520 <vfprintf@plt>:
  403520:	jmp    QWORD PTR [rip+0x60d6a]        # 464290 <strcmp@plt+0x60b08>
  403526:	push   0x4f
  40352b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403530 <pipe@plt>:
  403530:	jmp    QWORD PTR [rip+0x60d62]        # 464298 <strcmp@plt+0x60b10>
  403536:	push   0x50
  40353b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403540 <zmq_recv@plt>:
  403540:	jmp    QWORD PTR [rip+0x60d5a]        # 4642a0 <strcmp@plt+0x60b18>
  403546:	push   0x51
  40354b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403550 <gai_strerror@plt>:
  403550:	jmp    QWORD PTR [rip+0x60d52]        # 4642a8 <strcmp@plt+0x60b20>
  403556:	push   0x52
  40355b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403560 <putchar@plt>:
  403560:	jmp    QWORD PTR [rip+0x60d4a]        # 4642b0 <strcmp@plt+0x60b28>
  403566:	push   0x53
  40356b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403570 <strtol@plt>:
  403570:	jmp    QWORD PTR [rip+0x60d42]        # 4642b8 <strcmp@plt+0x60b30>
  403576:	push   0x54
  40357b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403580 <ioctl@plt>:
  403580:	jmp    QWORD PTR [rip+0x60d3a]        # 4642c0 <strcmp@plt+0x60b38>
  403586:	push   0x55
  40358b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403590 <fprintf@plt>:
  403590:	jmp    QWORD PTR [rip+0x60d32]        # 4642c8 <strcmp@plt+0x60b40>
  403596:	push   0x56
  40359b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004035a0 <read@plt>:
  4035a0:	jmp    QWORD PTR [rip+0x60d2a]        # 4642d0 <strcmp@plt+0x60b48>
  4035a6:	push   0x57
  4035ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004035b0 <xmlCharStrdup@plt>:
  4035b0:	jmp    QWORD PTR [rip+0x60d22]        # 4642d8 <strcmp@plt+0x60b50>
  4035b6:	push   0x58
  4035bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004035c0 <getpid@plt>:
  4035c0:	jmp    QWORD PTR [rip+0x60d1a]        # 4642e0 <strcmp@plt+0x60b58>
  4035c6:	push   0x59
  4035cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004035d0 <zmq_close@plt>:
  4035d0:	jmp    QWORD PTR [rip+0x60d12]        # 4642e8 <strcmp@plt+0x60b60>
  4035d6:	push   0x5a
  4035db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004035e0 <chdir@plt>:
  4035e0:	jmp    QWORD PTR [rip+0x60d0a]        # 4642f0 <strcmp@plt+0x60b68>
  4035e6:	push   0x5b
  4035eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004035f0 <xmlDocGetRootElement@plt>:
  4035f0:	jmp    QWORD PTR [rip+0x60d02]        # 4642f8 <strcmp@plt+0x60b70>
  4035f6:	push   0x5c
  4035fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403600 <puts@plt>:
  403600:	jmp    QWORD PTR [rip+0x60cfa]        # 464300 <strcmp@plt+0x60b78>
  403606:	push   0x5d
  40360b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403610 <strtok@plt>:
  403610:	jmp    QWORD PTR [rip+0x60cf2]        # 464308 <strcmp@plt+0x60b80>
  403616:	push   0x5e
  40361b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403620 <snprintf@plt>:
  403620:	jmp    QWORD PTR [rip+0x60cea]        # 464310 <strcmp@plt+0x60b88>
  403626:	push   0x5f
  40362b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403630 <zmq_ctx_destroy@plt>:
  403630:	jmp    QWORD PTR [rip+0x60ce2]        # 464318 <strcmp@plt+0x60b90>
  403636:	push   0x60
  40363b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403640 <gettimeofday@plt>:
  403640:	jmp    QWORD PTR [rip+0x60cda]        # 464320 <strcmp@plt+0x60b98>
  403646:	push   0x61
  40364b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403650 <realloc@plt>:
  403650:	jmp    QWORD PTR [rip+0x60cd2]        # 464328 <strcmp@plt+0x60ba0>
  403656:	push   0x62
  40365b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403660 <getopt_long@plt>:
  403660:	jmp    QWORD PTR [rip+0x60cca]        # 464330 <strcmp@plt+0x60ba8>
  403666:	push   0x63
  40366b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403670 <access@plt>:
  403670:	jmp    QWORD PTR [rip+0x60cc2]        # 464338 <strcmp@plt+0x60bb0>
  403676:	push   0x64
  40367b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403680 <timer_create@plt>:
  403680:	jmp    QWORD PTR [rip+0x60cba]        # 464340 <strcmp@plt+0x60bb8>
  403686:	push   0x65
  40368b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403690 <zmq_ctx_new@plt>:
  403690:	jmp    QWORD PTR [rip+0x60cb2]        # 464348 <strcmp@plt+0x60bc0>
  403696:	push   0x66
  40369b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004036a0 <freeifaddrs@plt>:
  4036a0:	jmp    QWORD PTR [rip+0x60caa]        # 464350 <strcmp@plt+0x60bc8>
  4036a6:	push   0x67
  4036ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004036b0 <cfg_parse@plt>:
  4036b0:	jmp    QWORD PTR [rip+0x60ca2]        # 464358 <strcmp@plt+0x60bd0>
  4036b6:	push   0x68
  4036bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004036c0 <vsyslog@plt>:
  4036c0:	jmp    QWORD PTR [rip+0x60c9a]        # 464360 <strcmp@plt+0x60bd8>
  4036c6:	push   0x69
  4036cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004036d0 <umask@plt>:
  4036d0:	jmp    QWORD PTR [rip+0x60c92]        # 464368 <strcmp@plt+0x60be0>
  4036d6:	push   0x6a
  4036db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004036e0 <zmq_socket@plt>:
  4036e0:	jmp    QWORD PTR [rip+0x60c8a]        # 464370 <strcmp@plt+0x60be8>
  4036e6:	push   0x6b
  4036eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004036f0 <setsockopt@plt>:
  4036f0:	jmp    QWORD PTR [rip+0x60c82]        # 464378 <strcmp@plt+0x60bf0>
  4036f6:	push   0x6c
  4036fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403700 <strdup@plt>:
  403700:	jmp    QWORD PTR [rip+0x60c7a]        # 464380 <strcmp@plt+0x60bf8>
  403706:	push   0x6d
  40370b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403710 <xmlFreeDoc@plt>:
  403710:	jmp    QWORD PTR [rip+0x60c72]        # 464388 <strcmp@plt+0x60c00>
  403716:	push   0x6e
  40371b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403720 <cfg_size@plt>:
  403720:	jmp    QWORD PTR [rip+0x60c6a]        # 464390 <strcmp@plt+0x60c08>
  403726:	push   0x6f
  40372b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403730 <if_indextoname@plt>:
  403730:	jmp    QWORD PTR [rip+0x60c62]        # 464398 <strcmp@plt+0x60c10>
  403736:	push   0x70
  40373b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403740 <getifaddrs@plt>:
  403740:	jmp    QWORD PTR [rip+0x60c5a]        # 4643a0 <strcmp@plt+0x60c18>
  403746:	push   0x71
  40374b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403750 <inet_pton@plt>:
  403750:	jmp    QWORD PTR [rip+0x60c52]        # 4643a8 <strcmp@plt+0x60c20>
  403756:	push   0x72
  40375b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403760 <close@plt>:
  403760:	jmp    QWORD PTR [rip+0x60c4a]        # 4643b0 <strcmp@plt+0x60c28>
  403766:	push   0x73
  40376b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403770 <xmlStrEqual@plt>:
  403770:	jmp    QWORD PTR [rip+0x60c42]        # 4643b8 <strcmp@plt+0x60c30>
  403776:	push   0x74
  40377b:	jmp    403020 <xmlReadMemory@plt-0x10>

Disassembly of section .plt.got:

0000000000403780 <free@plt>:
  403780:	jmp    QWORD PTR [rip+0x60822]        # 463fa8 <strcmp@plt+0x60820>
  403786:	xchg   ax,ax

0000000000403788 <strcmp@plt>:
  403788:	jmp    QWORD PTR [rip+0x60832]        # 463fc0 <strcmp@plt+0x60838>
  40378e:	xchg   ax,ax

Disassembly of section .text:

0000000000403790 <.text>:
  403790:	endbr64 
  403794:	xor    ebp,ebp
  403796:	mov    r9,rdx
  403799:	pop    rsi
  40379a:	mov    rdx,rsp
  40379d:	and    rsp,0xfffffffffffffff0
  4037a1:	push   rax
  4037a2:	push   rsp
  4037a3:	mov    r8,0x441dc0
  4037aa:	mov    rcx,0x441d50
  4037b1:	mov    rdi,0x43b4e0
  4037b8:	call   QWORD PTR [rip+0x60832]        # 463ff0 <strcmp@plt+0x60868>
  4037be:	hlt    
  4037bf:	nop
  4037c0:	endbr64 
  4037c4:	ret    
  4037c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037cf:	nop
  4037d0:	mov    eax,0x4680f0
  4037d5:	cmp    rax,0x4680f0
  4037db:	je     4037f0 <strcmp@plt+0x68>
  4037dd:	mov    eax,0x0
  4037e2:	test   rax,rax
  4037e5:	je     4037f0 <strcmp@plt+0x68>
  4037e7:	mov    edi,0x4680f0
  4037ec:	jmp    rax
  4037ee:	xchg   ax,ax
  4037f0:	ret    
  4037f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4037fc:	nop    DWORD PTR [rax+0x0]
  403800:	mov    esi,0x4680f0
  403805:	sub    rsi,0x4680f0
  40380c:	mov    rax,rsi
  40380f:	shr    rsi,0x3f
  403813:	sar    rax,0x3
  403817:	add    rsi,rax
  40381a:	sar    rsi,1
  40381d:	je     403830 <strcmp@plt+0xa8>
  40381f:	mov    eax,0x0
  403824:	test   rax,rax
  403827:	je     403830 <strcmp@plt+0xa8>
  403829:	mov    edi,0x4680f0
  40382e:	jmp    rax
  403830:	ret    
  403831:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40383c:	nop    DWORD PTR [rax+0x0]
  403840:	endbr64 
  403844:	cmp    BYTE PTR [rip+0x648a5],0x0        # 4680f0 <strcmp@plt+0x64968>
  40384b:	jne    403860 <strcmp@plt+0xd8>
  40384d:	push   rbp
  40384e:	mov    rbp,rsp
  403851:	call   4037d0 <strcmp@plt+0x48>
  403856:	mov    BYTE PTR [rip+0x64893],0x1        # 4680f0 <strcmp@plt+0x64968>
  40385d:	pop    rbp
  40385e:	ret    
  40385f:	nop
  403860:	ret    
  403861:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40386c:	nop    DWORD PTR [rax+0x0]
  403870:	endbr64 
  403874:	jmp    403800 <strcmp@plt+0x78>
  403876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403880:	push   rax
  403881:	lea    rdi,[rip+0x3ea2e]        # 4422b6 <strcmp@plt+0x3eb2e>
  403888:	lea    rsi,[rip+0x3e9ed]        # 44227c <strcmp@plt+0x3eaf4>
  40388f:	lea    rdx,[rip+0x4b3e6]        # 44ec7c <strcmp@plt+0x4b4f4>
  403896:	xor    eax,eax
  403898:	call   403050 <printf@plt>
  40389d:	lea    rax,[rip+0x60b3c]        # 4643e0 <strcmp@plt+0x60c58>
  4038a4:	mov    rsi,QWORD PTR [rax]
  4038a7:	cmp    BYTE PTR [rsi],0x0
  4038aa:	je     4038bb <strcmp@plt+0x133>
  4038ac:	lea    rdi,[rip+0x48be0]        # 44c493 <strcmp@plt+0x48d0b>
  4038b3:	xor    eax,eax
  4038b5:	pop    rcx
  4038b6:	jmp    403050 <printf@plt>
  4038bb:	pop    rax
  4038bc:	ret    
  4038bd:	nop    DWORD PTR [rax]
  4038c0:	push   rbp
  4038c1:	push   r14
  4038c3:	push   rbx
  4038c4:	lea    r14,[rip+0x60b05]        # 4643d0 <strcmp@plt+0x60c48>
  4038cb:	mov    rax,QWORD PTR [r14]
  4038ce:	mov    bpl,BYTE PTR [rax]
  4038d1:	lea    rax,[rip+0x60b00]        # 4643d8 <strcmp@plt+0x60c50>
  4038d8:	mov    rdi,QWORD PTR [rax]
  4038db:	mov    bl,BYTE PTR [rdi]
  4038dd:	test   bl,bl
  4038df:	je     4038e6 <strcmp@plt+0x15e>
  4038e1:	call   403600 <puts@plt>
  4038e6:	test   bpl,bpl
  4038e9:	je     4038f3 <strcmp@plt+0x16b>
  4038eb:	mov    rdi,QWORD PTR [r14]
  4038ee:	call   403600 <puts@plt>
  4038f3:	or     bl,bpl
  4038f6:	je     403902 <strcmp@plt+0x17a>
  4038f8:	mov    edi,0xa
  4038fd:	call   403560 <putchar@plt>
  403902:	lea    rax,[rip+0x60adf]        # 4643e8 <strcmp@plt+0x60c60>
  403909:	mov    rsi,QWORD PTR [rax]
  40390c:	cmp    BYTE PTR [rsi],0x0
  40390f:	je     40391f <strcmp@plt+0x197>
  403911:	lea    rdi,[rip+0x3ea0b]        # 442323 <strcmp@plt+0x3eb9b>
  403918:	xor    eax,eax
  40391a:	call   403050 <printf@plt>
  40391f:	lea    rbx,[rip+0x60aca]        # 4643f0 <strcmp@plt+0x60c68>
  403926:	mov    rdi,QWORD PTR [rbx]
  403929:	test   rdi,rdi
  40392c:	je     403951 <strcmp@plt+0x1c9>
  40392e:	add    rbx,0x8
  403932:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40393c:	nop    DWORD PTR [rax+0x0]
  403940:	call   403600 <puts@plt>
  403945:	mov    rdi,QWORD PTR [rbx]
  403948:	add    rbx,0x8
  40394c:	test   rdi,rdi
  40394f:	jne    403940 <strcmp@plt+0x1b8>
  403951:	pop    rbx
  403952:	pop    r14
  403954:	pop    rbp
  403955:	ret    
  403956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403960:	vxorps xmm0,xmm0,xmm0
  403964:	vmovups XMMWORD PTR [rdi+0x6c],xmm0
  403969:	vmovups XMMWORD PTR [rdi+0x60],xmm0
  40396e:	mov    DWORD PTR [rdi+0x10],0xffffffff
  403975:	mov    QWORD PTR [rdi+0x18],0x0
  40397d:	mov    DWORD PTR [rdi+0x28],0xffffffff
  403984:	mov    QWORD PTR [rdi+0x30],0x0
  40398c:	vmovups XMMWORD PTR [rdi+0x48],xmm0
  403991:	lea    rax,[rip+0x60a58]        # 4643f0 <strcmp@plt+0x60c68>
  403998:	mov    rcx,QWORD PTR [rax]
  40399b:	mov    QWORD PTR [rdi],rcx
  40399e:	mov    rcx,QWORD PTR [rax+0x8]
  4039a2:	mov    QWORD PTR [rdi+0x8],rcx
  4039a6:	mov    rcx,QWORD PTR [rax+0x18]
  4039aa:	mov    QWORD PTR [rdi+0x20],rcx
  4039ae:	vmovaps xmm0,XMMWORD PTR [rax+0x20]
  4039b3:	vmovups XMMWORD PTR [rdi+0x38],xmm0
  4039b8:	mov    rax,QWORD PTR [rax+0x30]
  4039bc:	mov    QWORD PTR [rdi+0x58],rax
  4039c0:	ret    
  4039c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4039d0:	test   rdi,rdi
  4039d3:	je     4039e8 <strcmp@plt+0x260>
  4039d5:	vmovaps xmm0,XMMWORD PTR [rip+0x3e633]        # 442010 <strcmp@plt+0x3e888>
  4039dd:	vmovups XMMWORD PTR [rdi],xmm0
  4039e1:	mov    DWORD PTR [rdi+0x10],0x1
  4039e8:	ret    
  4039e9:	nop    DWORD PTR [rax+0x0]
  4039f0:	push   rax
  4039f1:	mov    edi,0x14
  4039f6:	call   403510 <malloc@plt>
  4039fb:	test   rax,rax
  4039fe:	je     403a13 <strcmp@plt+0x28b>
  403a00:	vmovaps xmm0,XMMWORD PTR [rip+0x3e608]        # 442010 <strcmp@plt+0x3e888>
  403a08:	vmovups XMMWORD PTR [rax],xmm0
  403a0c:	mov    DWORD PTR [rax+0x10],0x1
  403a13:	pop    rcx
  403a14:	ret    
  403a15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a1f:	nop
  403a20:	push   rbp
  403a21:	push   r15
  403a23:	push   r14
  403a25:	push   r13
  403a27:	push   r12
  403a29:	push   rbx
  403a2a:	sub    rsp,0x18
  403a2e:	test   rdi,rdi
  403a31:	je     403c75 <strcmp@plt+0x4ed>
  403a37:	mov    rbp,rsi
  403a3a:	mov    r15,rdi
  403a3d:	cmp    DWORD PTR [rsi+0x60],0x0
  403a41:	je     403a5b <strcmp@plt+0x2d3>
  403a43:	lea    rsi,[rip+0x48a4a]        # 44c494 <strcmp@plt+0x48d0c>
  403a4a:	lea    rdx,[rip+0x3e88f]        # 4422e0 <strcmp@plt+0x3eb58>
  403a51:	xor    eax,eax
  403a53:	mov    rdi,r15
  403a56:	call   403590 <fprintf@plt>
  403a5b:	cmp    DWORD PTR [rbp+0x64],0x0
  403a5f:	je     403a79 <strcmp@plt+0x2f1>
  403a61:	lea    rsi,[rip+0x48a2c]        # 44c494 <strcmp@plt+0x48d0c>
  403a68:	lea    rdx,[rip+0x4ccff]        # 45076e <strcmp@plt+0x4cfe6>
  403a6f:	xor    eax,eax
  403a71:	mov    rdi,r15
  403a74:	call   403590 <fprintf@plt>
  403a79:	cmp    DWORD PTR [rbp+0x68],0x0
  403a7d:	je     403b7a <strcmp@plt+0x3f2>
  403a83:	mov    r12,QWORD PTR [rbp+0x18]
  403a87:	test   r12,r12
  403a8a:	je     403b62 <strcmp@plt+0x3da>
  403a90:	mov    rdi,r12
  403a93:	call   4031e0 <strlen@plt>
  403a98:	mov    r13,rax
  403a9b:	lea    rax,[rip+0x6098e]        # 464430 <strcmp@plt+0x60ca8>
  403aa2:	mov    rbx,QWORD PTR [rax]
  403aa5:	test   rbx,rbx
  403aa8:	je     403cae <strcmp@plt+0x526>
  403aae:	mov    QWORD PTR [rsp+0x8],r15
  403ab3:	xor    r14d,r14d
  403ab6:	mov    DWORD PTR [rsp+0x10],0x0
  403abe:	xor    r15d,r15d
  403ac1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403acb:	nop    DWORD PTR [rax+rax*1+0x0]
  403ad0:	mov    rdi,r12
  403ad3:	mov    rsi,rbx
  403ad6:	mov    rdx,r13
  403ad9:	call   403220 <strncmp@plt>
  403ade:	test   eax,eax
  403ae0:	jne    403aff <strcmp@plt+0x377>
  403ae2:	mov    rdi,rbx
  403ae5:	call   4031e0 <strlen@plt>
  403aea:	cmp    rax,r13
  403aed:	je     403c9e <strcmp@plt+0x516>
  403af3:	add    r15d,0x1
  403af7:	mov    eax,r14d
  403afa:	mov    DWORD PTR [rsp+0x10],r14d
  403aff:	lea    rax,[rip+0x6092a]        # 464430 <strcmp@plt+0x60ca8>
  403b06:	mov    rbx,QWORD PTR [rax+r14*8+0x8]
  403b0b:	add    r14,0x1
  403b0f:	test   rbx,rbx
  403b12:	jne    403ad0 <strcmp@plt+0x348>
  403b14:	cmp    r15d,0x1
  403b18:	mov    r15,QWORD PTR [rsp+0x8]
  403b1d:	mov    eax,DWORD PTR [rsp+0x10]
  403b21:	jne    403cae <strcmp@plt+0x526>
  403b27:	test   eax,eax
  403b29:	js     403cae <strcmp@plt+0x526>
  403b2f:	cdqe   
  403b31:	lea    rcx,[rip+0x608f8]        # 464430 <strcmp@plt+0x60ca8>
  403b38:	mov    r8,QWORD PTR [rcx+rax*8]
  403b3c:	lea    rsi,[rip+0x3e7e5]        # 442328 <strcmp@plt+0x3eba0>
  403b43:	lea    rdx,[rip+0x4d5be]        # 451108 <strcmp@plt+0x4d980>
  403b4a:	xor    eax,eax
  403b4c:	mov    rdi,r15
  403b4f:	mov    rcx,r12
  403b52:	call   403590 <fprintf@plt>
  403b57:	cmp    DWORD PTR [rbp+0x6c],0x0
  403b5b:	jne    403b84 <strcmp@plt+0x3fc>
  403b5d:	jmp    403cd3 <strcmp@plt+0x54b>
  403b62:	lea    rsi,[rip+0x4892b]        # 44c494 <strcmp@plt+0x48d0c>
  403b69:	lea    rdx,[rip+0x4d598]        # 451108 <strcmp@plt+0x4d980>
  403b70:	xor    eax,eax
  403b72:	mov    rdi,r15
  403b75:	call   403590 <fprintf@plt>
  403b7a:	cmp    DWORD PTR [rbp+0x6c],0x0
  403b7e:	je     403cd3 <strcmp@plt+0x54b>
  403b84:	mov    r12,QWORD PTR [rbp+0x30]
  403b88:	test   r12,r12
  403b8b:	je     403c55 <strcmp@plt+0x4cd>
  403b91:	mov    QWORD PTR [rsp+0x10],rbp
  403b96:	mov    rdi,r12
  403b99:	call   4031e0 <strlen@plt>
  403b9e:	mov    r13,rax
  403ba1:	lea    rax,[rip+0x608b8]        # 464460 <strcmp@plt+0x60cd8>
  403ba8:	mov    rbx,QWORD PTR [rax]
  403bab:	test   rbx,rbx
  403bae:	je     403d5c <strcmp@plt+0x5d4>
  403bb4:	mov    QWORD PTR [rsp+0x8],r15
  403bb9:	xor    ebp,ebp
  403bbb:	xor    r14d,r14d
  403bbe:	xor    r15d,r15d
  403bc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  403bd0:	mov    rdi,r12
  403bd3:	mov    rsi,rbx
  403bd6:	mov    rdx,r13
  403bd9:	call   403220 <strncmp@plt>
  403bde:	test   eax,eax
  403be0:	jne    403bfa <strcmp@plt+0x472>
  403be2:	mov    rdi,rbx
  403be5:	call   4031e0 <strlen@plt>
  403bea:	cmp    rax,r13
  403bed:	je     403d4b <strcmp@plt+0x5c3>
  403bf3:	add    r15d,0x1
  403bf7:	mov    r14d,ebp
  403bfa:	lea    rax,[rip+0x6085f]        # 464460 <strcmp@plt+0x60cd8>
  403c01:	mov    rbx,QWORD PTR [rax+rbp*8+0x8]
  403c06:	add    rbp,0x1
  403c0a:	test   rbx,rbx
  403c0d:	jne    403bd0 <strcmp@plt+0x448>
  403c0f:	cmp    r15d,0x1
  403c13:	mov    r15,QWORD PTR [rsp+0x8]
  403c18:	jne    403d5c <strcmp@plt+0x5d4>
  403c1e:	test   r14d,r14d
  403c21:	js     403d5c <strcmp@plt+0x5d4>
  403c27:	movsxd rax,r14d
  403c2a:	lea    rcx,[rip+0x6082f]        # 464460 <strcmp@plt+0x60cd8>
  403c31:	mov    r8,QWORD PTR [rcx+rax*8]
  403c35:	lea    rsi,[rip+0x3e6ec]        # 442328 <strcmp@plt+0x3eba0>
  403c3c:	lea    rdx,[rip+0x45077]        # 448cba <strcmp@plt+0x45532>
  403c43:	xor    eax,eax
  403c45:	mov    rdi,r15
  403c48:	mov    rcx,r12
  403c4b:	call   403590 <fprintf@plt>
  403c50:	jmp    403d77 <strcmp@plt+0x5ef>
  403c55:	lea    rsi,[rip+0x48838]        # 44c494 <strcmp@plt+0x48d0c>
  403c5c:	lea    rdx,[rip+0x45057]        # 448cba <strcmp@plt+0x45532>
  403c63:	xor    eax,eax
  403c65:	mov    rdi,r15
  403c68:	call   403590 <fprintf@plt>
  403c6d:	cmp    DWORD PTR [rbp+0x70],0x0
  403c71:	jne    403cd9 <strcmp@plt+0x551>
  403c73:	jmp    403cf1 <strcmp@plt+0x569>
  403c75:	mov    rax,QWORD PTR [rip+0x60334]        # 463fb0 <strcmp@plt+0x60828>
  403c7c:	mov    rdi,QWORD PTR [rax]
  403c7f:	lea    rsi,[rip+0x3e637]        # 4422bd <strcmp@plt+0x3eb35>
  403c86:	lea    rdx,[rip+0x3e5ef]        # 44227c <strcmp@plt+0x3eaf4>
  403c8d:	xor    eax,eax
  403c8f:	call   403590 <fprintf@plt>
  403c94:	mov    ebx,0x1
  403c99:	jmp    403d3a <strcmp@plt+0x5b2>
  403c9e:	mov    eax,r14d
  403ca1:	mov    r15,QWORD PTR [rsp+0x8]
  403ca6:	test   eax,eax
  403ca8:	jns    403b2f <strcmp@plt+0x3a7>
  403cae:	lea    rsi,[rip+0x3e681]        # 442336 <strcmp@plt+0x3ebae>
  403cb5:	lea    rdx,[rip+0x4d44c]        # 451108 <strcmp@plt+0x4d980>
  403cbc:	xor    eax,eax
  403cbe:	mov    rdi,r15
  403cc1:	mov    rcx,r12
  403cc4:	call   403590 <fprintf@plt>
  403cc9:	cmp    DWORD PTR [rbp+0x6c],0x0
  403ccd:	jne    403b84 <strcmp@plt+0x3fc>
  403cd3:	cmp    DWORD PTR [rbp+0x70],0x0
  403cd7:	je     403cf1 <strcmp@plt+0x569>
  403cd9:	lea    rsi,[rip+0x487b4]        # 44c494 <strcmp@plt+0x48d0c>
  403ce0:	lea    rdx,[rip+0x3e5fe]        # 4422e5 <strcmp@plt+0x3eb5d>
  403ce7:	xor    eax,eax
  403ce9:	mov    rdi,r15
  403cec:	call   403590 <fprintf@plt>
  403cf1:	cmp    DWORD PTR [rbp+0x74],0x0
  403cf5:	je     403d1c <strcmp@plt+0x594>
  403cf7:	mov    rcx,QWORD PTR [rbp+0x50]
  403cfb:	test   rcx,rcx
  403cfe:	je     403d20 <strcmp@plt+0x598>
  403d00:	lea    rsi,[rip+0x3e62f]        # 442336 <strcmp@plt+0x3ebae>
  403d07:	lea    rdx,[rip+0x3e5e1]        # 4422ef <strcmp@plt+0x3eb67>
  403d0e:	xor    ebx,ebx
  403d10:	xor    eax,eax
  403d12:	mov    rdi,r15
  403d15:	call   403590 <fprintf@plt>
  403d1a:	jmp    403d3a <strcmp@plt+0x5b2>
  403d1c:	xor    ebx,ebx
  403d1e:	jmp    403d3a <strcmp@plt+0x5b2>
  403d20:	lea    rsi,[rip+0x4876d]        # 44c494 <strcmp@plt+0x48d0c>
  403d27:	lea    rdx,[rip+0x3e5c1]        # 4422ef <strcmp@plt+0x3eb67>
  403d2e:	xor    ebx,ebx
  403d30:	xor    eax,eax
  403d32:	mov    rdi,r15
  403d35:	call   403590 <fprintf@plt>
  403d3a:	mov    eax,ebx
  403d3c:	add    rsp,0x18
  403d40:	pop    rbx
  403d41:	pop    r12
  403d43:	pop    r13
  403d45:	pop    r14
  403d47:	pop    r15
  403d49:	pop    rbp
  403d4a:	ret    
  403d4b:	mov    r14d,ebp
  403d4e:	mov    r15,QWORD PTR [rsp+0x8]
  403d53:	test   r14d,r14d
  403d56:	jns    403c27 <strcmp@plt+0x49f>
  403d5c:	lea    rsi,[rip+0x3e5d3]        # 442336 <strcmp@plt+0x3ebae>
  403d63:	lea    rdx,[rip+0x44f50]        # 448cba <strcmp@plt+0x45532>
  403d6a:	xor    eax,eax
  403d6c:	mov    rdi,r15
  403d6f:	mov    rcx,r12
  403d72:	call   403590 <fprintf@plt>
  403d77:	mov    rbp,QWORD PTR [rsp+0x10]
  403d7c:	cmp    DWORD PTR [rbp+0x70],0x0
  403d80:	jne    403cd9 <strcmp@plt+0x551>
  403d86:	jmp    403cf1 <strcmp@plt+0x569>
  403d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  403d90:	push   rbp
  403d91:	push   r15
  403d93:	push   r14
  403d95:	push   rbx
  403d96:	push   rax
  403d97:	mov    r14,rsi
  403d9a:	mov    r15,rdi
  403d9d:	lea    rsi,[rip+0x3e557]        # 4422fb <strcmp@plt+0x3eb73>
  403da4:	call   403480 <fopen@plt>
  403da9:	test   rax,rax
  403dac:	je     403dca <strcmp@plt+0x642>
  403dae:	mov    rbx,rax
  403db1:	mov    rdi,rax
  403db4:	mov    rsi,r14
  403db7:	call   403a20 <strcmp@plt+0x298>
  403dbc:	mov    ebp,eax
  403dbe:	mov    rdi,rbx
  403dc1:	call   4033e0 <fclose@plt>
  403dc6:	mov    eax,ebp
  403dc8:	jmp    403df1 <strcmp@plt+0x669>
  403dca:	mov    rax,QWORD PTR [rip+0x601df]        # 463fb0 <strcmp@plt+0x60828>
  403dd1:	mov    rdi,QWORD PTR [rax]
  403dd4:	lea    rsi,[rip+0x3e522]        # 4422fd <strcmp@plt+0x3eb75>
  403ddb:	lea    rdx,[rip+0x3e49a]        # 44227c <strcmp@plt+0x3eaf4>
  403de2:	xor    eax,eax
  403de4:	mov    rcx,r15
  403de7:	call   403590 <fprintf@plt>
  403dec:	mov    eax,0x1
  403df1:	add    rsp,0x8
  403df5:	pop    rbx
  403df6:	pop    r14
  403df8:	pop    r15
  403dfa:	pop    rbp
  403dfb:	ret    
  403dfc:	nop    DWORD PTR [rax+0x0]
  403e00:	push   rbx
  403e01:	mov    rbx,rdi
  403e04:	mov    rdi,QWORD PTR [rdi+0x18]
  403e08:	test   rdi,rdi
  403e0b:	je     403e1a <strcmp@plt+0x692>
  403e0d:	call   403780 <free@plt>
  403e12:	mov    QWORD PTR [rbx+0x18],0x0
  403e1a:	mov    rdi,QWORD PTR [rbx+0x30]
  403e1e:	test   rdi,rdi
  403e21:	je     403e30 <strcmp@plt+0x6a8>
  403e23:	call   403780 <free@plt>
  403e28:	mov    QWORD PTR [rbx+0x30],0x0
  403e30:	mov    rdi,QWORD PTR [rbx+0x48]
  403e34:	test   rdi,rdi
  403e37:	je     403e46 <strcmp@plt+0x6be>
  403e39:	call   403780 <free@plt>
  403e3e:	mov    QWORD PTR [rbx+0x48],0x0
  403e46:	mov    rdi,QWORD PTR [rbx+0x50]
  403e4a:	test   rdi,rdi
  403e4d:	je     403e5c <strcmp@plt+0x6d4>
  403e4f:	call   403780 <free@plt>
  403e54:	mov    QWORD PTR [rbx+0x50],0x0
  403e5c:	vxorps xmm0,xmm0,xmm0
  403e60:	vmovups XMMWORD PTR [rbx+0x6c],xmm0
  403e65:	vmovups XMMWORD PTR [rbx+0x60],xmm0
  403e6a:	pop    rbx
  403e6b:	ret    
  403e6c:	nop    DWORD PTR [rax+0x0]
  403e70:	push   rbx
  403e71:	sub    rsp,0x20
  403e75:	mov    rbx,rdx
  403e78:	vmovaps xmm0,XMMWORD PTR [rip+0x3e190]        # 442010 <strcmp@plt+0x3e888>
  403e80:	vmovaps XMMWORD PTR [rsp],xmm0
  403e85:	mov    DWORD PTR [rsp+0x10],0x1
  403e8d:	mov    rcx,rsp
  403e90:	call   403f40 <strcmp@plt+0x7b8>
  403e95:	cmp    eax,0x1
  403e98:	je     403ea0 <strcmp@plt+0x718>
  403e9a:	add    rsp,0x20
  403e9e:	pop    rbx
  403e9f:	ret    
  403ea0:	mov    rdi,rbx
  403ea3:	call   403e00 <strcmp@plt+0x678>
  403ea8:	mov    edi,0x1
  403ead:	call   4034a0 <exit@plt>
  403eb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ebc:	nop    DWORD PTR [rax+0x0]
  403ec0:	push   rbx
  403ec1:	sub    rsp,0x20
  403ec5:	mov    rbx,rdx
  403ec8:	mov    DWORD PTR [rsp+0x8],ecx
  403ecc:	mov    DWORD PTR [rsp+0xc],r8d
  403ed1:	mov    DWORD PTR [rsp+0x10],r9d
  403ed6:	movabs rax,0x100000000
  403ee0:	mov    QWORD PTR [rsp+0x14],rax
  403ee5:	lea    rcx,[rsp+0x8]
  403eea:	call   403f40 <strcmp@plt+0x7b8>
  403eef:	cmp    eax,0x1
  403ef2:	je     403efa <strcmp@plt+0x772>
  403ef4:	add    rsp,0x20
  403ef8:	pop    rbx
  403ef9:	ret    
  403efa:	mov    rdi,rbx
  403efd:	call   403e00 <strcmp@plt+0x678>
  403f02:	mov    edi,0x1
  403f07:	call   4034a0 <exit@plt>
  403f0c:	nop    DWORD PTR [rax+0x0]
  403f10:	push   rbx
  403f11:	mov    rbx,rdx
  403f14:	call   403f40 <strcmp@plt+0x7b8>
  403f19:	cmp    eax,0x1
  403f1c:	je     403f20 <strcmp@plt+0x798>
  403f1e:	pop    rbx
  403f1f:	ret    
  403f20:	mov    rdi,rbx
  403f23:	call   403e00 <strcmp@plt+0x678>
  403f28:	mov    edi,0x1
  403f2d:	call   4034a0 <exit@plt>
  403f32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f3c:	nop    DWORD PTR [rax+0x0]
  403f40:	push   rbp
  403f41:	push   r15
  403f43:	push   r14
  403f45:	push   r13
  403f47:	push   r12
  403f49:	push   rbx
  403f4a:	sub    rsp,0xe8
  403f51:	mov    rbx,rdx
  403f54:	mov    r14,rsi
  403f57:	mov    DWORD PTR [rsp+0x10],edi
  403f5b:	mov    rax,QWORD PTR [rsi]
  403f5e:	mov    QWORD PTR [rip+0x64193],rax        # 4680f8 <strcmp@plt+0x64970>
  403f65:	mov    eax,DWORD PTR [rcx]
  403f67:	mov    QWORD PTR [rsp],rax
  403f6b:	mov    eax,DWORD PTR [rcx+0xc]
  403f6e:	mov    QWORD PTR [rsp+0x8],rax
  403f73:	cmp    DWORD PTR [rcx+0x4],0x0
  403f77:	je     40400c <strcmp@plt+0x884>
  403f7d:	vxorps xmm0,xmm0,xmm0
  403f81:	vmovups XMMWORD PTR [rbx+0x6c],xmm0
  403f86:	vmovups XMMWORD PTR [rbx+0x60],xmm0
  403f8b:	lea    rax,[rbx+0x10]
  403f8f:	mov    QWORD PTR [rsp+0x38],rax
  403f94:	mov    DWORD PTR [rbx+0x10],0xffffffff
  403f9b:	lea    rax,[rbx+0x18]
  403f9f:	mov    QWORD PTR [rsp+0x30],rax
  403fa4:	mov    QWORD PTR [rbx+0x18],0x0
  403fac:	lea    rax,[rbx+0x28]
  403fb0:	mov    QWORD PTR [rsp+0x28],rax
  403fb5:	mov    DWORD PTR [rbx+0x28],0xffffffff
  403fbc:	lea    rax,[rbx+0x30]
  403fc0:	mov    QWORD PTR [rsp+0x20],rax
  403fc5:	mov    QWORD PTR [rbx+0x30],0x0
  403fcd:	lea    rax,[rbx+0x48]
  403fd1:	mov    QWORD PTR [rsp+0x18],rax
  403fd6:	vmovups XMMWORD PTR [rbx+0x48],xmm0
  403fdb:	lea    rdx,[rip+0x6040e]        # 4643f0 <strcmp@plt+0x60c68>
  403fe2:	mov    rax,QWORD PTR [rdx]
  403fe5:	mov    QWORD PTR [rbx],rax
  403fe8:	mov    rax,QWORD PTR [rdx+0x8]
  403fec:	mov    QWORD PTR [rbx+0x8],rax
  403ff0:	mov    rax,QWORD PTR [rdx+0x18]
  403ff4:	mov    QWORD PTR [rbx+0x20],rax
  403ff8:	vmovaps xmm0,XMMWORD PTR [rdx+0x20]
  403ffd:	vmovups XMMWORD PTR [rbx+0x38],xmm0
  404002:	mov    rdx,QWORD PTR [rdx+0x30]
  404006:	mov    QWORD PTR [rbx+0x58],rdx
  40400a:	jmp    40404d <strcmp@plt+0x8c5>
  40400c:	lea    rdx,[rip+0x603dd]        # 4643f0 <strcmp@plt+0x60c68>
  404013:	mov    rax,QWORD PTR [rdx+0x18]
  404017:	vmovaps xmm0,XMMWORD PTR [rdx+0x20]
  40401c:	mov    rdx,QWORD PTR [rdx+0x30]
  404020:	lea    rsi,[rbx+0x10]
  404024:	mov    QWORD PTR [rsp+0x38],rsi
  404029:	lea    rsi,[rbx+0x18]
  40402d:	mov    QWORD PTR [rsp+0x30],rsi
  404032:	lea    rsi,[rbx+0x28]
  404036:	mov    QWORD PTR [rsp+0x28],rsi
  40403b:	lea    rsi,[rbx+0x30]
  40403f:	mov    QWORD PTR [rsp+0x20],rsi
  404044:	lea    rsi,[rbx+0x48]
  404048:	mov    QWORD PTR [rsp+0x18],rsi
  40404d:	vxorps xmm1,xmm1,xmm1
  404051:	vmovups XMMWORD PTR [rsp+0xac],xmm1
  40405a:	vmovaps XMMWORD PTR [rsp+0xa0],xmm1
  404063:	mov    DWORD PTR [rsp+0x50],0xffffffff
  40406b:	mov    QWORD PTR [rsp+0x58],0x0
  404074:	mov    DWORD PTR [rsp+0x68],0xffffffff
  40407c:	mov    QWORD PTR [rsp+0x70],0x0
  404085:	vmovups XMMWORD PTR [rsp+0x88],xmm1
  40408e:	lea    rsi,[rip+0x6035b]        # 4643f0 <strcmp@plt+0x60c68>
  404095:	vmovaps xmm1,XMMWORD PTR [rsi]
  404099:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  40409f:	mov    QWORD PTR [rsp+0x60],rax
  4040a4:	vmovups XMMWORD PTR [rsp+0x78],xmm0
  4040aa:	mov    QWORD PTR [rsp+0x98],rdx
  4040b2:	mov    rax,QWORD PTR [rip+0x5fedf]        # 463f98 <strcmp@plt+0x60810>
  4040b9:	mov    QWORD PTR [rax],0x0
  4040c0:	mov    rax,QWORD PTR [rip+0x5fef1]        # 463fb8 <strcmp@plt+0x60830>
  4040c7:	mov    DWORD PTR [rax],0x0
  4040cd:	mov    eax,DWORD PTR [rcx+0x10]
  4040d0:	mov    rcx,QWORD PTR [rip+0x5fef9]        # 463fd0 <strcmp@plt+0x60848>
  4040d7:	mov    DWORD PTR [rcx],eax
  4040d9:	mov    rax,QWORD PTR [rip+0x5fec0]        # 463fa0 <strcmp@plt+0x60818>
  4040e0:	mov    DWORD PTR [rax],0x3f
  4040e6:	lea    rax,[rbx+0x68]
  4040ea:	mov    QWORD PTR [rsp+0xe0],rax
  4040f2:	lea    rax,[rbx+0x6c]
  4040f6:	mov    QWORD PTR [rsp+0xd8],rax
  4040fe:	lea    rax,[rbx+0x50]
  404102:	mov    QWORD PTR [rsp+0xd0],rax
  40410a:	lea    rax,[rbx+0x74]
  40410e:	mov    QWORD PTR [rsp+0xc8],rax
  404116:	lea    rax,[rip+0x3e222]        # 44233f <strcmp@plt+0x3ebb7>
  40411d:	lea    rcx,[rip+0x6035c]        # 464480 <strcmp@plt+0x60cf8>
  404124:	lea    rbp,[rsp+0x14]
  404129:	jmp    404139 <strcmp@plt+0x9b1>
  40412b:	nop    DWORD PTR [rax+rax*1+0x0]
  404130:	mov    rax,r12
  404133:	mov    rcx,r13
  404136:	mov    rbp,r15
  404139:	mov    DWORD PTR [rsp+0x14],0x0
  404141:	mov    edi,DWORD PTR [rsp+0x10]
  404145:	mov    rsi,r14
  404148:	mov    r12,rax
  40414b:	mov    rdx,rax
  40414e:	mov    r13,rcx
  404151:	mov    r15,rbp
  404154:	mov    r8,rbp
  404157:	call   403660 <getopt_long@plt>
  40415c:	mov    ecx,eax
  40415e:	lea    eax,[rcx-0x3f]
  404161:	cmp    eax,0x29
  404164:	ja     4042ba <strcmp@plt+0xb32>
  40416a:	lea    rdx,[rip+0x3deaf]        # 442020 <strcmp@plt+0x3e898>
  404171:	movsxd rax,DWORD PTR [rdx+rax*4]
  404175:	add    rax,rdx
  404178:	jmp    rax
  40417a:	add    DWORD PTR [rbx+0x78],0x1
  40417e:	cmp    DWORD PTR [rsp+0xb0],0x0
  404186:	jne    4043eb <strcmp@plt+0xc63>
  40418c:	mov    eax,DWORD PTR [rbx+0x70]
  40418f:	cmp    DWORD PTR [rsp+0x8],0x0
  404194:	je     4042a3 <strcmp@plt+0xb1b>
  40419a:	test   eax,eax
  40419c:	mov    eax,0x0
  4041a1:	jne    4043eb <strcmp@plt+0xc63>
  4041a7:	mov    DWORD PTR [rsp+0xb0],0x1
  4041b2:	add    eax,0x1
  4041b5:	mov    DWORD PTR [rbx+0x70],eax
  4041b8:	jmp    404130 <strcmp@plt+0x9a8>
  4041bd:	add    DWORD PTR [rbx+0x78],0x1
  4041c1:	mov    rax,QWORD PTR [rip+0x5fdd0]        # 463f98 <strcmp@plt+0x60810>
  4041c8:	mov    r8,QWORD PTR [rax]
  4041cb:	sub    rsp,0x8
  4041cf:	mov    rdi,QWORD PTR [rsp+0x30]
  4041d4:	mov    rsi,QWORD PTR [rsp+0x28]
  4041d9:	mov    rdx,QWORD PTR [rsp+0xe0]
  4041e1:	lea    rcx,[rsp+0xb4]
  4041e9:	lea    r9,[rip+0x60270]        # 464460 <strcmp@plt+0x60cd8>
  4041f0:	push   0x61
  4041f2:	lea    rax,[rip+0x44ac1]        # 448cba <strcmp@plt+0x45532>
  4041f9:	jmp    404285 <strcmp@plt+0xafd>
  4041fe:	add    DWORD PTR [rbx+0x78],0x1
  404202:	mov    rax,QWORD PTR [rip+0x5fd8f]        # 463f98 <strcmp@plt+0x60810>
  404209:	mov    r8,QWORD PTR [rax]
  40420c:	sub    rsp,0x8
  404210:	mov    r9d,0x0
  404216:	mov    rdi,QWORD PTR [rsp+0x20]
  40421b:	mov    rsi,QWORD PTR [rsp+0xd8]
  404223:	mov    rdx,QWORD PTR [rsp+0xd0]
  40422b:	lea    rcx,[rsp+0xbc]
  404233:	push   0x66
  404235:	lea    rax,[rip+0x3e0b3]        # 4422ef <strcmp@plt+0x3eb67>
  40423c:	push   rax
  40423d:	push   QWORD PTR [rsp+0x18]
  404241:	push   QWORD PTR [rsp+0x28]
  404245:	push   0x1
  404247:	jmp    404290 <strcmp@plt+0xb08>
  404249:	add    DWORD PTR [rbx+0x78],0x1
  40424d:	mov    rax,QWORD PTR [rip+0x5fd44]        # 463f98 <strcmp@plt+0x60810>
  404254:	mov    r8,QWORD PTR [rax]
  404257:	sub    rsp,0x8
  40425b:	mov    rdi,QWORD PTR [rsp+0x40]
  404260:	mov    rsi,QWORD PTR [rsp+0x38]
  404265:	mov    rdx,QWORD PTR [rsp+0xe8]
  40426d:	lea    rcx,[rsp+0xb0]
  404275:	lea    r9,[rip+0x601b4]        # 464430 <strcmp@plt+0x60ca8>
  40427c:	push   0x64
  40427e:	lea    rax,[rip+0x4ce83]        # 451108 <strcmp@plt+0x4d980>
  404285:	push   rax
  404286:	push   QWORD PTR [rsp+0x18]
  40428a:	push   QWORD PTR [rsp+0x28]
  40428e:	push   0x2
  404290:	call   404480 <strcmp@plt+0xcf8>
  404295:	add    rsp,0x30
  404299:	test   eax,eax
  40429b:	je     404130 <strcmp@plt+0x9a8>
  4042a1:	jmp    4042cb <strcmp@plt+0xb43>
  4042a3:	cmp    DWORD PTR [rsp],0x0
  4042a7:	jne    4041a7 <strcmp@plt+0xa1f>
  4042ad:	test   eax,eax
  4042af:	jne    404130 <strcmp@plt+0x9a8>
  4042b5:	jmp    4041a7 <strcmp@plt+0xa1f>
  4042ba:	cmp    ecx,0xffffffff
  4042bd:	je     404356 <strcmp@plt+0xbce>
  4042c3:	test   ecx,ecx
  4042c5:	jne    404423 <strcmp@plt+0xc9b>
  4042cb:	mov    rdi,QWORD PTR [rsp+0x58]
  4042d0:	test   rdi,rdi
  4042d3:	je     4042e3 <strcmp@plt+0xb5b>
  4042d5:	call   403780 <free@plt>
  4042da:	mov    QWORD PTR [rsp+0x58],0x0
  4042e3:	mov    rdi,QWORD PTR [rsp+0x70]
  4042e8:	test   rdi,rdi
  4042eb:	je     4042fb <strcmp@plt+0xb73>
  4042ed:	call   403780 <free@plt>
  4042f2:	mov    QWORD PTR [rsp+0x70],0x0
  4042fb:	mov    rdi,QWORD PTR [rsp+0x88]
  404303:	test   rdi,rdi
  404306:	je     404319 <strcmp@plt+0xb91>
  404308:	call   403780 <free@plt>
  40430d:	mov    QWORD PTR [rsp+0x88],0x0
  404319:	mov    rdi,QWORD PTR [rsp+0x90]
  404321:	test   rdi,rdi
  404324:	je     404337 <strcmp@plt+0xbaf>
  404326:	call   403780 <free@plt>
  40432b:	mov    QWORD PTR [rsp+0x90],0x0
  404337:	vxorps xmm0,xmm0,xmm0
  40433b:	lea    rax,[rsp+0xa0]
  404343:	vmovups XMMWORD PTR [rax+0xc],xmm0
  404348:	vmovaps XMMWORD PTR [rax],xmm0
  40434c:	mov    eax,0x1
  404351:	jmp    4043d9 <strcmp@plt+0xc51>
  404356:	mov    rdi,QWORD PTR [rsp+0x58]
  40435b:	test   rdi,rdi
  40435e:	je     40436e <strcmp@plt+0xbe6>
  404360:	call   403780 <free@plt>
  404365:	mov    QWORD PTR [rsp+0x58],0x0
  40436e:	mov    rdi,QWORD PTR [rsp+0x70]
  404373:	test   rdi,rdi
  404376:	je     404386 <strcmp@plt+0xbfe>
  404378:	call   403780 <free@plt>
  40437d:	mov    QWORD PTR [rsp+0x70],0x0
  404386:	mov    rdi,QWORD PTR [rsp+0x88]
  40438e:	test   rdi,rdi
  404391:	je     4043a4 <strcmp@plt+0xc1c>
  404393:	call   403780 <free@plt>
  404398:	mov    QWORD PTR [rsp+0x88],0x0
  4043a4:	mov    rdi,QWORD PTR [rsp+0x90]
  4043ac:	test   rdi,rdi
  4043af:	je     4043c2 <strcmp@plt+0xc3a>
  4043b1:	call   403780 <free@plt>
  4043b6:	mov    QWORD PTR [rsp+0x90],0x0
  4043c2:	vxorps xmm0,xmm0,xmm0
  4043c6:	lea    rax,[rsp+0xa0]
  4043ce:	vmovups XMMWORD PTR [rax+0xc],xmm0
  4043d3:	vmovaps XMMWORD PTR [rax],xmm0
  4043d7:	xor    eax,eax
  4043d9:	add    rsp,0xe8
  4043e0:	pop    rbx
  4043e1:	pop    r12
  4043e3:	pop    r13
  4043e5:	pop    r14
  4043e7:	pop    r15
  4043e9:	pop    rbp
  4043ea:	ret    
  4043eb:	mov    rax,QWORD PTR [rip+0x5fbbe]        # 463fb0 <strcmp@plt+0x60828>
  4043f2:	mov    rdi,QWORD PTR [rax]
  4043f5:	mov    rdx,QWORD PTR [rip+0x63cfc]        # 4680f8 <strcmp@plt+0x64970>
  4043fc:	lea    rsi,[rip+0x3df60]        # 442363 <strcmp@plt+0x3ebdb>
  404403:	lea    rcx,[rip+0x3dedb]        # 4422e5 <strcmp@plt+0x3eb5d>
  40440a:	lea    r9,[rip+0x4a869]        # 44ec7a <strcmp@plt+0x4b4f2>
  404411:	mov    r8d,0x44
  404417:	xor    eax,eax
  404419:	call   403590 <fprintf@plt>
  40441e:	jmp    4042cb <strcmp@plt+0xb43>
  404423:	mov    rax,QWORD PTR [rip+0x5fb86]        # 463fb0 <strcmp@plt+0x60828>
  40442a:	mov    rdi,QWORD PTR [rax]
  40442d:	lea    rsi,[rip+0x3df15]        # 442349 <strcmp@plt+0x3ebc1>
  404434:	lea    rdx,[rip+0x3de41]        # 44227c <strcmp@plt+0x3eaf4>
  40443b:	lea    r8,[rip+0x4a838]        # 44ec7a <strcmp@plt+0x4b4f2>
  404442:	xor    eax,eax
  404444:	call   403590 <fprintf@plt>
  404449:	call   403270 <abort@plt>
  40444e:	call   403880 <strcmp@plt+0xf8>
  404453:	jmp    40445a <strcmp@plt+0xcd2>
  404455:	call   4038c0 <strcmp@plt+0x138>
  40445a:	lea    rdi,[rsp+0x40]
  40445f:	call   403e00 <strcmp@plt+0x678>
  404464:	xor    edi,edi
  404466:	call   4034a0 <exit@plt>
  40446b:	nop    DWORD PTR [rax+rax*1+0x0]
  404470:	xor    eax,eax
  404472:	ret    
  404473:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40447d:	nop    DWORD PTR [rax]
  404480:	push   rbp
  404481:	push   r15
  404483:	push   r14
  404485:	push   r13
  404487:	push   r12
  404489:	push   rbx
  40448a:	sub    rsp,0x28
  40448e:	mov    r14,r9
  404491:	mov    r13,r8
  404494:	mov    rbp,rcx
  404497:	mov    r15,rsi
  40449a:	mov    r12,rdi
  40449d:	mov    bl,BYTE PTR [rsp+0x80]
  4044a4:	mov    rcx,QWORD PTR [rsp+0x78]
  4044a9:	test   rbp,rbp
  4044ac:	je     4044c9 <strcmp@plt+0xd41>
  4044ae:	cmp    DWORD PTR [rbp+0x0],0x0
  4044b2:	jne    4046f2 <strcmp@plt+0xf6a>
  4044b8:	mov    eax,DWORD PTR [rsp+0x68]
  4044bc:	test   eax,eax
  4044be:	je     4044c9 <strcmp@plt+0xd41>
  4044c0:	cmp    DWORD PTR [rdx],0x0
  4044c3:	jne    4046f2 <strcmp@plt+0xf6a>
  4044c9:	test   r14,r14
  4044cc:	mov    QWORD PTR [rsp+0x8],r12
  4044d1:	je     40458c <strcmp@plt+0xe04>
  4044d7:	mov    QWORD PTR [rsp+0x18],rbp
  4044dc:	mov    QWORD PTR [rsp+0x20],rdx
  4044e1:	test   r13,r13
  4044e4:	je     404742 <strcmp@plt+0xfba>
  4044ea:	mov    rdi,r13
  4044ed:	call   4031e0 <strlen@plt>
  4044f2:	mov    rbx,QWORD PTR [r14]
  4044f5:	test   rbx,rbx
  4044f8:	je     404742 <strcmp@plt+0xfba>
  4044fe:	mov    rbp,rax
  404501:	mov    QWORD PTR [rsp+0x10],r15
  404506:	mov    r15,r13
  404509:	xor    r12d,r12d
  40450c:	mov    DWORD PTR [rsp+0x4],0x0
  404514:	xor    r13d,r13d
  404517:	nop    WORD PTR [rax+rax*1+0x0]
  404520:	mov    rdi,r15
  404523:	mov    rsi,rbx
  404526:	mov    rdx,rbp
  404529:	call   403220 <strncmp@plt>
  40452e:	test   eax,eax
  404530:	jne    40454f <strcmp@plt+0xdc7>
  404532:	mov    rdi,rbx
  404535:	call   4031e0 <strlen@plt>
  40453a:	cmp    rax,rbp
  40453d:	je     4045ff <strcmp@plt+0xe77>
  404543:	add    r13d,0x1
  404547:	mov    eax,r12d
  40454a:	mov    DWORD PTR [rsp+0x4],r12d
  40454f:	mov    rbx,QWORD PTR [r14+r12*8+0x8]
  404554:	add    r12,0x1
  404558:	test   rbx,rbx
  40455b:	jne    404520 <strcmp@plt+0xd98>
  40455d:	cmp    r13d,0x1
  404561:	mov    ecx,DWORD PTR [rsp+0x4]
  404565:	jne    40473a <strcmp@plt+0xfb2>
  40456b:	test   ecx,ecx
  40456d:	js     40460a <strcmp@plt+0xe82>
  404573:	mov    r13,r15
  404576:	mov    r15,QWORD PTR [rsp+0x10]
  40457b:	mov    rdx,QWORD PTR [rsp+0x20]
  404580:	mov    rbp,QWORD PTR [rsp+0x18]
  404585:	test   rdx,rdx
  404588:	jne    404593 <strcmp@plt+0xe0b>
  40458a:	jmp    4045a8 <strcmp@plt+0xe20>
  40458c:	xor    ecx,ecx
  40458e:	test   rdx,rdx
  404591:	je     4045a8 <strcmp@plt+0xe20>
  404593:	mov    eax,DWORD PTR [rsp+0x70]
  404597:	test   eax,eax
  404599:	jne    4045a8 <strcmp@plt+0xe20>
  40459b:	mov    eax,DWORD PTR [rdx]
  40459d:	xor    r12d,r12d
  4045a0:	test   eax,eax
  4045a2:	jne    404798 <strcmp@plt+0x1010>
  4045a8:	test   rbp,rbp
  4045ab:	je     4045b1 <strcmp@plt+0xe29>
  4045ad:	add    DWORD PTR [rbp+0x0],0x1
  4045b1:	test   rdx,rdx
  4045b4:	je     4045b9 <strcmp@plt+0xe31>
  4045b6:	add    DWORD PTR [rdx],0x1
  4045b9:	mov    r12d,DWORD PTR [rsp+0x60]
  4045be:	mov    rbp,r13
  4045c1:	test   r14,r14
  4045c4:	je     4045cd <strcmp@plt+0xe45>
  4045c6:	movsxd rax,ecx
  4045c9:	mov    rbp,QWORD PTR [r14+rax*8]
  4045cd:	test   r12d,r12d
  4045d0:	je     404798 <strcmp@plt+0x1010>
  4045d6:	cmp    r12d,0x1
  4045da:	je     404666 <strcmp@plt+0xede>
  4045e0:	cmp    r12d,0x2
  4045e4:	jne    4046a4 <strcmp@plt+0xf1c>
  4045ea:	test   rbp,rbp
  4045ed:	je     4046a4 <strcmp@plt+0xf1c>
  4045f3:	mov    rax,QWORD PTR [rsp+0x8]
  4045f8:	mov    DWORD PTR [rax],ecx
  4045fa:	jmp    4046a4 <strcmp@plt+0xf1c>
  4045ff:	mov    ecx,r12d
  404602:	test   ecx,ecx
  404604:	jns    404573 <strcmp@plt+0xdeb>
  40460a:	cmp    ecx,0xfffffffe
  40460d:	lea    rax,[rip+0x3dddf]        # 4423f3 <strcmp@plt+0x3ec6b>
  404614:	lea    rcx,[rip+0x3fce5]        # 444300 <strcmp@plt+0x40b78>
  40461b:	cmove  rcx,rax
  40461f:	mov    rax,QWORD PTR [rip+0x5f98a]        # 463fb0 <strcmp@plt+0x60828>
  404626:	mov    rdi,QWORD PTR [rax]
  404629:	mov    rdx,QWORD PTR [rip+0x63ac8]        # 4680f8 <strcmp@plt+0x64970>
  404630:	mov    al,BYTE PTR [rsp+0x80]
  404637:	cmp    al,0x2d
  404639:	mov    r13,r15
  40463c:	je     404769 <strcmp@plt+0xfe1>
  404642:	movsx  ebp,al
  404645:	lea    rbx,[rip+0x4a62e]        # 44ec7a <strcmp@plt+0x4b4f2>
  40464c:	lea    rsi,[rip+0x3dd6c]        # 4423bf <strcmp@plt+0x3ec37>
  404653:	mov    eax,0x0
  404658:	mov    r8,r13
  40465b:	mov    r9,QWORD PTR [rsp+0x78]
  404660:	push   rbx
  404661:	jmp    404788 <strcmp@plt+0x1000>
  404666:	test   rbp,rbp
  404669:	je     4046a4 <strcmp@plt+0xf1c>
  40466b:	mov    r14,QWORD PTR [rsp+0x8]
  404670:	mov    rdi,QWORD PTR [r14]
  404673:	test   rdi,rdi
  404676:	je     40467d <strcmp@plt+0xef5>
  404678:	call   403780 <free@plt>
  40467d:	mov    rdi,rbp
  404680:	call   4031e0 <strlen@plt>
  404685:	lea    rdi,[rax+0x1]
  404689:	call   403510 <malloc@plt>
  40468e:	mov    rbx,rax
  404691:	test   rax,rax
  404694:	je     4046a1 <strcmp@plt+0xf19>
  404696:	mov    rdi,rbx
  404699:	mov    rsi,rbp
  40469c:	call   403390 <strcpy@plt>
  4046a1:	mov    QWORD PTR [r14],rbx
  4046a4:	xor    r12d,r12d
  4046a7:	test   r15,r15
  4046aa:	je     404798 <strcmp@plt+0x1010>
  4046b0:	test   r13,r13
  4046b3:	je     404798 <strcmp@plt+0x1010>
  4046b9:	mov    rdi,QWORD PTR [r15]
  4046bc:	test   rdi,rdi
  4046bf:	je     4046c6 <strcmp@plt+0xf3e>
  4046c1:	call   403780 <free@plt>
  4046c6:	mov    rdi,r13
  4046c9:	call   4031e0 <strlen@plt>
  4046ce:	lea    rdi,[rax+0x1]
  4046d2:	call   403510 <malloc@plt>
  4046d7:	mov    rbx,rax
  4046da:	test   rax,rax
  4046dd:	je     4046ea <strcmp@plt+0xf62>
  4046df:	mov    rdi,rbx
  4046e2:	mov    rsi,r13
  4046e5:	call   403390 <strcpy@plt>
  4046ea:	mov    QWORD PTR [r15],rbx
  4046ed:	jmp    404798 <strcmp@plt+0x1010>
  4046f2:	mov    rax,QWORD PTR [rip+0x5f8b7]        # 463fb0 <strcmp@plt+0x60828>
  4046f9:	mov    rdi,QWORD PTR [rax]
  4046fc:	mov    rdx,QWORD PTR [rip+0x639f5]        # 4680f8 <strcmp@plt+0x64970>
  404703:	cmp    bl,0x2d
  404706:	jne    40471f <strcmp@plt+0xf97>
  404708:	lea    rsi,[rip+0x3dc86]        # 442395 <strcmp@plt+0x3ec0d>
  40470f:	lea    r8,[rip+0x4a564]        # 44ec7a <strcmp@plt+0x4b4f2>
  404716:	xor    eax,eax
  404718:	call   403590 <fprintf@plt>
  40471d:	jmp    404792 <strcmp@plt+0x100a>
  40471f:	movsx  r8d,bl
  404723:	lea    rsi,[rip+0x3dc39]        # 442363 <strcmp@plt+0x3ebdb>
  40472a:	lea    r9,[rip+0x4a549]        # 44ec7a <strcmp@plt+0x4b4f2>
  404731:	xor    eax,eax
  404733:	call   403590 <fprintf@plt>
  404738:	jmp    404792 <strcmp@plt+0x100a>
  40473a:	test   r13d,r13d
  40473d:	mov    r13,r15
  404740:	jne    4047aa <strcmp@plt+0x1022>
  404742:	mov    rax,QWORD PTR [rip+0x5f867]        # 463fb0 <strcmp@plt+0x60828>
  404749:	mov    rdi,QWORD PTR [rax]
  40474c:	lea    rcx,[rip+0x3fbad]        # 444300 <strcmp@plt+0x40b78>
  404753:	mov    rdx,QWORD PTR [rip+0x6399e]        # 4680f8 <strcmp@plt+0x64970>
  40475a:	mov    al,BYTE PTR [rsp+0x80]
  404761:	cmp    al,0x2d
  404763:	jne    404642 <strcmp@plt+0xeba>
  404769:	sub    rsp,0x8
  40476d:	lea    rbp,[rip+0x4a506]        # 44ec7a <strcmp@plt+0x4b4f2>
  404774:	lea    rsi,[rip+0x3dc82]        # 4423fd <strcmp@plt+0x3ec75>
  40477b:	xor    eax,eax
  40477d:	mov    r8,r13
  404780:	mov    r9,QWORD PTR [rsp+0x80]
  404788:	push   rbp
  404789:	call   403590 <fprintf@plt>
  40478e:	add    rsp,0x10
  404792:	mov    r12d,0x1
  404798:	mov    eax,r12d
  40479b:	add    rsp,0x28
  40479f:	pop    rbx
  4047a0:	pop    r12
  4047a2:	pop    r13
  4047a4:	pop    r14
  4047a6:	pop    r15
  4047a8:	pop    rbp
  4047a9:	ret    
  4047aa:	mov    rax,QWORD PTR [rip+0x5f7ff]        # 463fb0 <strcmp@plt+0x60828>
  4047b1:	mov    rdi,QWORD PTR [rax]
  4047b4:	lea    rcx,[rip+0x3dc38]        # 4423f3 <strcmp@plt+0x3ec6b>
  4047bb:	jmp    404753 <strcmp@plt+0xfcb>
  4047bd:	nop    DWORD PTR [rax]
  4047c0:	push   rbx
  4047c1:	mov    edi,0x20
  4047c6:	call   432070 <strcmp@plt+0x2e8e8>
  4047cb:	test   rax,rax
  4047ce:	je     4047fc <strcmp@plt+0x1074>
  4047d0:	mov    rbx,rax
  4047d3:	mov    QWORD PTR [rax],0x0
  4047da:	lea    rdi,[rip+0x3f]        # 404820 <strcmp@plt+0x1098>
  4047e1:	call   42bc00 <strcmp@plt+0x28478>
  4047e6:	mov    QWORD PTR [rbx+0x10],rax
  4047ea:	lea    rdi,[rip+0x4f]        # 404840 <strcmp@plt+0x10b8>
  4047f1:	call   42bc00 <strcmp@plt+0x28478>
  4047f6:	mov    QWORD PTR [rbx+0x18],rax
  4047fa:	jmp    404811 <strcmp@plt+0x1089>
  4047fc:	lea    rsi,[rip+0x3dc3d]        # 442440 <strcmp@plt+0x3ecb8>
  404803:	xor    ebx,ebx
  404805:	mov    edi,0x3
  40480a:	xor    eax,eax
  40480c:	call   42e800 <strcmp@plt+0x2b078>
  404811:	mov    rax,rbx
  404814:	pop    rbx
  404815:	ret    
  404816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404820:	test   rdi,rdi
  404823:	je     40483a <strcmp@plt+0x10b2>
  404825:	push   rbx
  404826:	mov    rbx,rdi
  404829:	mov    rdi,QWORD PTR [rdi]
  40482c:	call   403780 <free@plt>
  404831:	mov    rdi,rbx
  404834:	pop    rbx
  404835:	jmp    403780 <free@plt>
  40483a:	ret    
  40483b:	nop    DWORD PTR [rax+rax*1+0x0]
  404840:	test   rdi,rdi
  404843:	je     40485a <strcmp@plt+0x10d2>
  404845:	push   rbx
  404846:	mov    rbx,rdi
  404849:	mov    rdi,QWORD PTR [rdi]
  40484c:	call   403780 <free@plt>
  404851:	mov    rdi,rbx
  404854:	pop    rbx
  404855:	jmp    403780 <free@plt>
  40485a:	ret    
  40485b:	nop    DWORD PTR [rax+rax*1+0x0]
  404860:	test   rdi,rdi
  404863:	je     40488c <strcmp@plt+0x1104>
  404865:	push   rbx
  404866:	mov    rbx,rdi
  404869:	mov    rdi,QWORD PTR [rdi+0x10]
  40486d:	call   42c250 <strcmp@plt+0x28ac8>
  404872:	mov    rdi,QWORD PTR [rbx+0x18]
  404876:	call   42c250 <strcmp@plt+0x28ac8>
  40487b:	mov    rdi,QWORD PTR [rbx]
  40487e:	call   403780 <free@plt>
  404883:	mov    rdi,rbx
  404886:	pop    rbx
  404887:	jmp    403780 <free@plt>
  40488c:	ret    
  40488d:	nop    DWORD PTR [rax]
  404890:	push   rbp
  404891:	push   r15
  404893:	push   r14
  404895:	push   r13
  404897:	push   r12
  404899:	push   rbx
  40489a:	sub    rsp,0x7e8
  4048a1:	mov    r12,rdi
  4048a4:	cmp    esi,0x5
  4048a7:	jl     4048bd <strcmp@plt+0x1135>
  4048a9:	lea    rax,[rip+0x60500]        # 464db0 <strcmp@plt+0x61628>
  4048b0:	mov    eax,DWORD PTR [rax]
  4048b2:	add    eax,0x4
  4048b5:	cmp    eax,esi
  4048b7:	jl     404a3d <strcmp@plt+0x12b5>
  4048bd:	mov    DWORD PTR [rsp+0xc],esi
  4048c1:	mov    rcx,QWORD PTR [r12]
  4048c5:	mov    r8d,DWORD PTR [r12+0x8]
  4048ca:	lea    rdx,[rip+0x3dbb9]        # 44248a <strcmp@plt+0x3ed02>
  4048d1:	lea    rdi,[rsp+0x10]
  4048d6:	mov    esi,0x7d0
  4048db:	xor    eax,eax
  4048dd:	call   403620 <snprintf@plt>
  4048e2:	mov    rax,QWORD PTR [r12+0x10]
  4048e7:	mov    rbx,QWORD PTR [rax+0x8]
  4048eb:	cmp    rbx,rax
  4048ee:	je     404989 <strcmp@plt+0x1201>
  4048f4:	lea    rbp,[rip+0x63805]        # 468100 <strcmp@plt+0x64978>
  4048fb:	nop    DWORD PTR [rax+rax*1+0x0]
  404900:	mov    r13,QWORD PTR [rbx+0x10]
  404904:	lea    rdi,[rsp+0x10]
  404909:	call   4031e0 <strlen@plt>
  40490e:	lea    r14,[rsp+rax*1]
  404912:	add    r14,0x10
  404916:	mov    r15d,0x7d0
  40491c:	sub    r15,rax
  40491f:	mov    BYTE PTR [rip+0x637da],0x0        # 468100 <strcmp@plt+0x64978>
  404926:	mov    rcx,QWORD PTR [r13+0x0]
  40492a:	mov    r8d,DWORD PTR [r13+0x8]
  40492e:	mov    r9d,DWORD PTR [r13+0xc]
  404932:	cmp    BYTE PTR [r13+0x18],0x0
  404937:	lea    rax,[rip+0x3dc1c]        # 44255a <strcmp@plt+0x3edd2>
  40493e:	lea    rdx,[rip+0x3dc1a]        # 44255f <strcmp@plt+0x3edd7>
  404945:	cmove  rax,rdx
  404949:	mov    QWORD PTR [rsp],rax
  40494d:	mov    esi,0x72
  404952:	xor    eax,eax
  404954:	mov    rdi,rbp
  404957:	lea    rdx,[rip+0x3dbc3]        # 442521 <strcmp@plt+0x3ed99>
  40495e:	call   403620 <snprintf@plt>
  404963:	xor    eax,eax
  404965:	mov    rdi,r14
  404968:	mov    rsi,r15
  40496b:	lea    rdx,[rip+0x3db2a]        # 44249c <strcmp@plt+0x3ed14>
  404972:	mov    rcx,rbp
  404975:	call   403620 <snprintf@plt>
  40497a:	mov    rbx,QWORD PTR [rbx+0x8]
  40497e:	cmp    rbx,QWORD PTR [r12+0x10]
  404983:	jne    404900 <strcmp@plt+0x1178>
  404989:	mov    rax,QWORD PTR [r12+0x18]
  40498e:	mov    r14,QWORD PTR [rax+0x8]
  404992:	cmp    r14,rax
  404995:	je     404a11 <strcmp@plt+0x1289>
  404997:	lea    rbp,[rip+0x637e2]        # 468180 <strcmp@plt+0x649f8>
  40499e:	xchg   ax,ax
  4049a0:	mov    r13,QWORD PTR [r14+0x10]
  4049a4:	lea    rdi,[rsp+0x10]
  4049a9:	call   4031e0 <strlen@plt>
  4049ae:	lea    rbx,[rsp+rax*1]
  4049b2:	add    rbx,0x10
  4049b6:	mov    r15d,0x7d0
  4049bc:	sub    r15,rax
  4049bf:	mov    BYTE PTR [rip+0x637ba],0x0        # 468180 <strcmp@plt+0x649f8>
  4049c6:	mov    rcx,QWORD PTR [r13+0x0]
  4049ca:	mov    r8d,DWORD PTR [r13+0x8]
  4049ce:	mov    r9d,DWORD PTR [r13+0xc]
  4049d2:	mov    eax,DWORD PTR [r13+0x10]
  4049d6:	mov    DWORD PTR [rsp],eax
  4049d9:	mov    esi,0x64
  4049de:	xor    eax,eax
  4049e0:	mov    rdi,rbp
  4049e3:	lea    rdx,[rip+0x3dc6a]        # 442654 <strcmp@plt+0x3eecc>
  4049ea:	call   403620 <snprintf@plt>
  4049ef:	xor    eax,eax
  4049f1:	mov    rdi,rbx
  4049f4:	mov    rsi,r15
  4049f7:	lea    rdx,[rip+0x3da9e]        # 44249c <strcmp@plt+0x3ed14>
  4049fe:	mov    rcx,rbp
  404a01:	call   403620 <snprintf@plt>
  404a06:	mov    r14,QWORD PTR [r14+0x8]
  404a0a:	cmp    r14,QWORD PTR [r12+0x18]
  404a0f:	jne    4049a0 <strcmp@plt+0x1218>
  404a11:	mov    edi,DWORD PTR [rsp+0xc]
  404a15:	cmp    edi,0x5
  404a18:	jl     404a2a <strcmp@plt+0x12a2>
  404a1a:	lea    rax,[rip+0x6038f]        # 464db0 <strcmp@plt+0x61628>
  404a21:	mov    eax,DWORD PTR [rax]
  404a23:	add    eax,0x4
  404a26:	cmp    eax,edi
  404a28:	jl     404a3d <strcmp@plt+0x12b5>
  404a2a:	lea    rsi,[rip+0x47a63]        # 44c494 <strcmp@plt+0x48d0c>
  404a31:	lea    rdx,[rsp+0x10]
  404a36:	xor    eax,eax
  404a38:	call   42e800 <strcmp@plt+0x2b078>
  404a3d:	add    rsp,0x7e8
  404a44:	pop    rbx
  404a45:	pop    r12
  404a47:	pop    r13
  404a49:	pop    r14
  404a4b:	pop    r15
  404a4d:	pop    rbp
  404a4e:	ret    
  404a4f:	nop
  404a50:	push   rbx
  404a51:	sub    rsp,0x10
  404a55:	mov    BYTE PTR [rip+0x636a4],0x0        # 468100 <strcmp@plt+0x64978>
  404a5c:	lea    rbx,[rip+0x6369d]        # 468100 <strcmp@plt+0x64978>
  404a63:	mov    rcx,QWORD PTR [rdi]
  404a66:	mov    r8d,DWORD PTR [rdi+0x8]
  404a6a:	mov    r9d,DWORD PTR [rdi+0xc]
  404a6e:	cmp    BYTE PTR [rdi+0x18],0x0
  404a72:	lea    rax,[rip+0x3dae6]        # 44255f <strcmp@plt+0x3edd7>
  404a79:	lea    rdx,[rip+0x3dada]        # 44255a <strcmp@plt+0x3edd2>
  404a80:	cmove  rdx,rax
  404a84:	mov    QWORD PTR [rsp],rdx
  404a88:	lea    rdx,[rip+0x3da92]        # 442521 <strcmp@plt+0x3ed99>
  404a8f:	mov    esi,0x72
  404a94:	xor    eax,eax
  404a96:	mov    rdi,rbx
  404a99:	call   403620 <snprintf@plt>
  404a9e:	mov    rax,rbx
  404aa1:	add    rsp,0x10
  404aa5:	pop    rbx
  404aa6:	ret    
  404aa7:	nop    WORD PTR [rax+rax*1+0x0]
  404ab0:	push   rbx
  404ab1:	sub    rsp,0x10
  404ab5:	mov    BYTE PTR [rip+0x636c4],0x0        # 468180 <strcmp@plt+0x649f8>
  404abc:	lea    rbx,[rip+0x636bd]        # 468180 <strcmp@plt+0x649f8>
  404ac3:	mov    rcx,QWORD PTR [rdi]
  404ac6:	mov    r8d,DWORD PTR [rdi+0x8]
  404aca:	mov    r9d,DWORD PTR [rdi+0xc]
  404ace:	mov    eax,DWORD PTR [rdi+0x10]
  404ad1:	mov    DWORD PTR [rsp],eax
  404ad4:	lea    rdx,[rip+0x3db79]        # 442654 <strcmp@plt+0x3eecc>
  404adb:	mov    esi,0x64
  404ae0:	xor    eax,eax
  404ae2:	mov    rdi,rbx
  404ae5:	call   403620 <snprintf@plt>
  404aea:	mov    rax,rbx
  404aed:	add    rsp,0x10
  404af1:	pop    rbx
  404af2:	ret    
  404af3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404afd:	nop    DWORD PTR [rax]
  404b00:	push   rbp
  404b01:	push   rbx
  404b02:	push   rax
  404b03:	mov    rbx,rsi
  404b06:	mov    ebp,edi
  404b08:	mov    edi,0x10
  404b0d:	call   432070 <strcmp@plt+0x2e8e8>
  404b12:	test   rax,rax
  404b15:	je     404b1f <strcmp@plt+0x1397>
  404b17:	mov    DWORD PTR [rax],ebp
  404b19:	mov    QWORD PTR [rax+0x8],rbx
  404b1d:	jmp    404b21 <strcmp@plt+0x1399>
  404b1f:	xor    eax,eax
  404b21:	add    rsp,0x8
  404b25:	pop    rbx
  404b26:	pop    rbp
  404b27:	ret    
  404b28:	nop    DWORD PTR [rax+rax*1+0x0]
  404b30:	test   rdi,rdi
  404b33:	je     404b6f <strcmp@plt+0x13e7>
  404b35:	push   r14
  404b37:	push   rbx
  404b38:	push   rax
  404b39:	mov    rbx,rdi
  404b3c:	mov    eax,DWORD PTR [rdi]
  404b3e:	cmp    eax,0x1
  404b41:	je     404b47 <strcmp@plt+0x13bf>
  404b43:	test   eax,eax
  404b45:	jne    404b60 <strcmp@plt+0x13d8>
  404b47:	mov    r14,QWORD PTR [rbx+0x8]
  404b4b:	test   r14,r14
  404b4e:	je     404b60 <strcmp@plt+0x13d8>
  404b50:	mov    rdi,QWORD PTR [r14]
  404b53:	call   403780 <free@plt>
  404b58:	mov    rdi,r14
  404b5b:	call   403780 <free@plt>
  404b60:	mov    rdi,rbx
  404b63:	add    rsp,0x8
  404b67:	pop    rbx
  404b68:	pop    r14
  404b6a:	jmp    403780 <free@plt>
  404b6f:	ret    
  404b70:	push   rbp
  404b71:	push   r15
  404b73:	push   r14
  404b75:	push   r13
  404b77:	push   r12
  404b79:	push   rbx
  404b7a:	push   rax
  404b7b:	mov    DWORD PTR [rsp+0x4],r9d
  404b80:	mov    r15d,r8d
  404b83:	mov    r12d,ecx
  404b86:	mov    r13d,edx
  404b89:	mov    ebx,esi
  404b8b:	mov    r14,rdi
  404b8e:	test   rdi,rdi
  404b91:	jne    404ba6 <strcmp@plt+0x141e>
  404b93:	lea    rsi,[rip+0x3d908]        # 4424a2 <strcmp@plt+0x3ed1a>
  404b9a:	mov    edi,0x2
  404b9f:	xor    eax,eax
  404ba1:	call   42e800 <strcmp@plt+0x2b078>
  404ba6:	mov    edi,0x20
  404bab:	call   432070 <strcmp@plt+0x2e8e8>
  404bb0:	test   rax,rax
  404bb3:	je     404bfc <strcmp@plt+0x1474>
  404bb5:	mov    rbp,rax
  404bb8:	mov    rdi,r14
  404bbb:	call   403700 <strdup@plt>
  404bc0:	mov    QWORD PTR [rbp+0x0],rax
  404bc4:	movzx  eax,r13b
  404bc8:	movzx  ecx,bl
  404bcb:	vmovd  xmm0,ecx
  404bcf:	vpinsrb xmm0,xmm0,eax,0x1
  404bd5:	movzx  eax,r12b
  404bd9:	vpinsrb xmm0,xmm0,eax,0x2
  404bdf:	movzx  eax,r15b
  404be3:	vpinsrb xmm0,xmm0,eax,0x3
  404be9:	vpmovzxbd xmm0,xmm0
  404bee:	vmovdqu XMMWORD PTR [rbp+0x8],xmm0
  404bf3:	mov    eax,DWORD PTR [rsp+0x4]
  404bf7:	mov    BYTE PTR [rbp+0x18],al
  404bfa:	jmp    404c11 <strcmp@plt+0x1489>
  404bfc:	lea    rsi,[rip+0x3d8d7]        # 4424da <strcmp@plt+0x3ed52>
  404c03:	xor    ebp,ebp
  404c05:	mov    edi,0x3
  404c0a:	xor    eax,eax
  404c0c:	call   42e800 <strcmp@plt+0x2b078>
  404c11:	mov    rax,rbp
  404c14:	add    rsp,0x8
  404c18:	pop    rbx
  404c19:	pop    r12
  404c1b:	pop    r13
  404c1d:	pop    r14
  404c1f:	pop    r15
  404c21:	pop    rbp
  404c22:	ret    
  404c23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c2d:	nop    DWORD PTR [rax]
  404c30:	push   rbp
  404c31:	push   r14
  404c33:	push   rbx
  404c34:	sub    rsp,0x10
  404c38:	mov    r14,QWORD PTR [rdi]
  404c3b:	vmovups xmm0,XMMWORD PTR [rdi+0x8]
  404c40:	vmovaps XMMWORD PTR [rsp],xmm0
  404c45:	mov    bpl,BYTE PTR [rdi+0x18]
  404c49:	test   r14,r14
  404c4c:	jne    404c61 <strcmp@plt+0x14d9>
  404c4e:	lea    rsi,[rip+0x3d84d]        # 4424a2 <strcmp@plt+0x3ed1a>
  404c55:	mov    edi,0x2
  404c5a:	xor    eax,eax
  404c5c:	call   42e800 <strcmp@plt+0x2b078>
  404c61:	mov    edi,0x20
  404c66:	call   432070 <strcmp@plt+0x2e8e8>
  404c6b:	test   rax,rax
  404c6e:	je     404c96 <strcmp@plt+0x150e>
  404c70:	mov    rbx,rax
  404c73:	mov    rdi,r14
  404c76:	call   403700 <strdup@plt>
  404c7b:	mov    QWORD PTR [rbx],rax
  404c7e:	vmovaps xmm0,XMMWORD PTR [rsp]
  404c83:	vandps xmm0,xmm0,XMMWORD PTR [rip+0x3d7a5]        # 442430 <strcmp@plt+0x3eca8>
  404c8b:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  404c90:	mov    BYTE PTR [rbx+0x18],bpl
  404c94:	jmp    404cab <strcmp@plt+0x1523>
  404c96:	lea    rsi,[rip+0x3d83d]        # 4424da <strcmp@plt+0x3ed52>
  404c9d:	xor    ebx,ebx
  404c9f:	mov    edi,0x3
  404ca4:	xor    eax,eax
  404ca6:	call   42e800 <strcmp@plt+0x2b078>
  404cab:	mov    rax,rbx
  404cae:	add    rsp,0x10
  404cb2:	pop    rbx
  404cb3:	pop    r14
  404cb5:	pop    rbp
  404cb6:	ret    
  404cb7:	nop    WORD PTR [rax+rax*1+0x0]
  404cc0:	push   rbp
  404cc1:	push   r15
  404cc3:	push   r14
  404cc5:	push   r13
  404cc7:	push   r12
  404cc9:	push   rbx
  404cca:	push   rax
  404ccb:	test   rdi,rdi
  404cce:	je     404cf5 <strcmp@plt+0x156d>
  404cd0:	mov    r14d,r9d
  404cd3:	mov    r15d,r8d
  404cd6:	mov    r12d,ecx
  404cd9:	mov    r13d,edx
  404cdc:	mov    ecx,esi
  404cde:	mov    rbp,rdi
  404ce1:	cmp    esi,0x4
  404ce4:	je     404d08 <strcmp@plt+0x1580>
  404ce6:	cmp    ecx,0x6
  404ce9:	jne    404d66 <strcmp@plt+0x15de>
  404ceb:	mov    DWORD PTR [rsp+0x4],0xa
  404cf3:	jmp    404d10 <strcmp@plt+0x1588>
  404cf5:	lea    rsi,[rip+0x3d869]        # 442565 <strcmp@plt+0x3eddd>
  404cfc:	xor    ebx,ebx
  404cfe:	mov    edi,0x2
  404d03:	jmp    404d8d <strcmp@plt+0x1605>
  404d08:	mov    DWORD PTR [rsp+0x4],0x2
  404d10:	mov    edi,0x20
  404d15:	call   432070 <strcmp@plt+0x2e8e8>
  404d1a:	test   rax,rax
  404d1d:	je     404d7f <strcmp@plt+0x15f7>
  404d1f:	mov    rbx,rax
  404d22:	mov    rdi,rbp
  404d25:	call   403700 <strdup@plt>
  404d2a:	mov    QWORD PTR [rbx],rax
  404d2d:	mov    eax,DWORD PTR [rsp+0x4]
  404d31:	mov    DWORD PTR [rbx+0x8],eax
  404d34:	movzx  eax,r12b
  404d38:	movzx  ecx,r13b
  404d3c:	vmovd  xmm0,ecx
  404d40:	vpinsrb xmm0,xmm0,eax,0x1
  404d46:	movzx  eax,r15b
  404d4a:	vpinsrb xmm0,xmm0,eax,0x2
  404d50:	movzx  eax,r14b
  404d54:	vpinsrb xmm0,xmm0,eax,0x3
  404d5a:	vpmovzxbd xmm0,xmm0
  404d5f:	vmovdqu XMMWORD PTR [rbx+0xc],xmm0
  404d64:	jmp    404d94 <strcmp@plt+0x160c>
  404d66:	lea    rsi,[rip+0x3d83c]        # 4425a9 <strcmp@plt+0x3ee21>
  404d6d:	xor    ebx,ebx
  404d6f:	mov    edi,0x2
  404d74:	xor    eax,eax
  404d76:	mov    edx,ecx
  404d78:	call   42e800 <strcmp@plt+0x2b078>
  404d7d:	jmp    404d94 <strcmp@plt+0x160c>
  404d7f:	lea    rsi,[rip+0x3d87b]        # 442601 <strcmp@plt+0x3ee79>
  404d86:	xor    ebx,ebx
  404d88:	mov    edi,0x3
  404d8d:	xor    eax,eax
  404d8f:	call   42e800 <strcmp@plt+0x2b078>
  404d94:	mov    rax,rbx
  404d97:	add    rsp,0x8
  404d9b:	pop    rbx
  404d9c:	pop    r12
  404d9e:	pop    r13
  404da0:	pop    r14
  404da2:	pop    r15
  404da4:	pop    rbp
  404da5:	ret    
  404da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404db0:	push   rbp
  404db1:	push   r14
  404db3:	push   rbx
  404db4:	sub    rsp,0x10
  404db8:	mov    r14,QWORD PTR [rdi]
  404dbb:	test   r14,r14
  404dbe:	je     404e10 <strcmp@plt+0x1688>
  404dc0:	vmovups xmm0,XMMWORD PTR [rdi+0xc]
  404dc5:	vmovaps XMMWORD PTR [rsp],xmm0
  404dca:	mov    ebp,DWORD PTR [rdi+0x8]
  404dcd:	mov    edi,0x20
  404dd2:	call   432070 <strcmp@plt+0x2e8e8>
  404dd7:	test   rax,rax
  404dda:	je     404e20 <strcmp@plt+0x1698>
  404ddc:	mov    rbx,rax
  404ddf:	xor    eax,eax
  404de1:	cmp    ebp,0x2
  404de4:	setne  al
  404de7:	lea    ebp,[rax*8+0x2]
  404dee:	mov    rdi,r14
  404df1:	call   403700 <strdup@plt>
  404df6:	mov    QWORD PTR [rbx],rax
  404df9:	mov    DWORD PTR [rbx+0x8],ebp
  404dfc:	vmovaps xmm0,XMMWORD PTR [rsp]
  404e01:	vandps xmm0,xmm0,XMMWORD PTR [rip+0x3d627]        # 442430 <strcmp@plt+0x3eca8>
  404e09:	vmovups XMMWORD PTR [rbx+0xc],xmm0
  404e0e:	jmp    404e35 <strcmp@plt+0x16ad>
  404e10:	lea    rsi,[rip+0x3d74e]        # 442565 <strcmp@plt+0x3eddd>
  404e17:	xor    ebx,ebx
  404e19:	mov    edi,0x2
  404e1e:	jmp    404e2e <strcmp@plt+0x16a6>
  404e20:	lea    rsi,[rip+0x3d7da]        # 442601 <strcmp@plt+0x3ee79>
  404e27:	xor    ebx,ebx
  404e29:	mov    edi,0x3
  404e2e:	xor    eax,eax
  404e30:	call   42e800 <strcmp@plt+0x2b078>
  404e35:	mov    rax,rbx
  404e38:	add    rsp,0x10
  404e3c:	pop    rbx
  404e3d:	pop    r14
  404e3f:	pop    rbp
  404e40:	ret    
  404e41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  404e50:	push   rbp
  404e51:	push   r15
  404e53:	push   r14
  404e55:	push   rbx
  404e56:	push   rax
  404e57:	mov    r14d,edx
  404e5a:	mov    r15,rsi
  404e5d:	mov    rbp,rdi
  404e60:	mov    edi,0x18
  404e65:	call   432070 <strcmp@plt+0x2e8e8>
  404e6a:	test   rax,rax
  404e6d:	je     404e87 <strcmp@plt+0x16ff>
  404e6f:	mov    rbx,rax
  404e72:	mov    QWORD PTR [rax],rbp
  404e75:	mov    rdi,r15
  404e78:	call   403700 <strdup@plt>
  404e7d:	mov    QWORD PTR [rbx+0x8],rax
  404e81:	mov    DWORD PTR [rbx+0x10],r14d
  404e85:	jmp    404e89 <strcmp@plt+0x1701>
  404e87:	xor    ebx,ebx
  404e89:	mov    rax,rbx
  404e8c:	add    rsp,0x8
  404e90:	pop    rbx
  404e91:	pop    r14
  404e93:	pop    r15
  404e95:	pop    rbp
  404e96:	ret    
  404e97:	nop    WORD PTR [rax+rax*1+0x0]
  404ea0:	push   rbx
  404ea1:	mov    rbx,rdi
  404ea4:	mov    rdi,QWORD PTR [rdi+0x8]
  404ea8:	call   403780 <free@plt>
  404ead:	mov    rdi,rbx
  404eb0:	pop    rbx
  404eb1:	jmp    403780 <free@plt>
  404eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ec0:	mov    rcx,QWORD PTR [rdi+0x8]
  404ec4:	xor    eax,eax
  404ec6:	cmp    rcx,rdi
  404ec9:	jne    404ed9 <strcmp@plt+0x1751>
  404ecb:	ret    
  404ecc:	nop    DWORD PTR [rax+0x0]
  404ed0:	mov    rcx,QWORD PTR [rcx+0x8]
  404ed4:	cmp    rcx,rdi
  404ed7:	je     404ecb <strcmp@plt+0x1743>
  404ed9:	mov    rdx,QWORD PTR [rcx+0x10]
  404edd:	cmp    QWORD PTR [rdx],rsi
  404ee0:	jne    404ed0 <strcmp@plt+0x1748>
  404ee2:	mov    rax,rdx
  404ee5:	ret    
  404ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ef0:	push   r15
  404ef2:	push   r14
  404ef4:	push   rbx
  404ef5:	mov    r14,rdx
  404ef8:	mov    r15,rsi
  404efb:	mov    rbx,rdi
  404efe:	mov    edx,DWORD PTR [rdi]
  404f00:	test   edx,edx
  404f02:	js     404f30 <strcmp@plt+0x17a8>
  404f04:	lea    rax,[rip+0x5fea5]        # 464db0 <strcmp@plt+0x61628>
  404f0b:	mov    eax,DWORD PTR [rax]
  404f0d:	je     404f47 <strcmp@plt+0x17bf>
  404f0f:	test   eax,eax
  404f11:	jle    404f5e <strcmp@plt+0x17d6>
  404f13:	lea    rsi,[rip+0x3d773]        # 44268d <strcmp@plt+0x3ef05>
  404f1a:	mov    edi,0x5
  404f1f:	xor    eax,eax
  404f21:	call   42e800 <strcmp@plt+0x2b078>
  404f26:	cmp    DWORD PTR [rbx],0x0
  404f29:	jne    404f67 <strcmp@plt+0x17df>
  404f2b:	jmp    404fea <strcmp@plt+0x1862>
  404f30:	mov    DWORD PTR [rbx],0x0
  404f36:	lea    rax,[rip+0x5fe73]        # 464db0 <strcmp@plt+0x61628>
  404f3d:	cmp    DWORD PTR [rax],0x0
  404f40:	jg     404f4b <strcmp@plt+0x17c3>
  404f42:	jmp    404fea <strcmp@plt+0x1862>
  404f47:	test   eax,eax
  404f49:	jle    404f5e <strcmp@plt+0x17d6>
  404f4b:	lea    rsi,[rip+0x3d755]        # 4426a7 <strcmp@plt+0x3ef1f>
  404f52:	mov    edi,0x5
  404f57:	xor    eax,eax
  404f59:	call   42e800 <strcmp@plt+0x2b078>
  404f5e:	cmp    DWORD PTR [rbx],0x0
  404f61:	je     404fea <strcmp@plt+0x1862>
  404f67:	mov    eax,DWORD PTR [r15]
  404f6a:	cmp    eax,0x6
  404f6d:	jl     404f95 <strcmp@plt+0x180d>
  404f6f:	mov    DWORD PTR [r15],0x5
  404f76:	lea    rsi,[rip+0x3d740]        # 4426bd <strcmp@plt+0x3ef35>
  404f7d:	mov    edi,0x3
  404f82:	mov    edx,0x5
  404f87:	mov    ecx,0x5
  404f8c:	xor    eax,eax
  404f8e:	call   42e800 <strcmp@plt+0x2b078>
  404f93:	jmp    404fbe <strcmp@plt+0x1836>
  404f95:	test   eax,eax
  404f97:	js     404f9f <strcmp@plt+0x1817>
  404f99:	test   eax,eax
  404f9b:	jg     404fc5 <strcmp@plt+0x183d>
  404f9d:	jmp    404fea <strcmp@plt+0x1862>
  404f9f:	mov    DWORD PTR [r15],0x0
  404fa6:	lea    rsi,[rip+0x3d752]        # 4426ff <strcmp@plt+0x3ef77>
  404fad:	mov    edi,0x3
  404fb2:	mov    edx,0x5
  404fb7:	xor    eax,eax
  404fb9:	call   42e800 <strcmp@plt+0x2b078>
  404fbe:	mov    eax,DWORD PTR [r15]
  404fc1:	test   eax,eax
  404fc3:	jle    404fea <strcmp@plt+0x1862>
  404fc5:	mov    eax,DWORD PTR [r14]
  404fc8:	test   eax,eax
  404fca:	jle    404ff0 <strcmp@plt+0x1868>
  404fcc:	mov    ecx,DWORD PTR [rbx]
  404fce:	cmp    eax,ecx
  404fd0:	jle    404fea <strcmp@plt+0x1862>
  404fd2:	mov    DWORD PTR [r14],ecx
  404fd5:	mov    ecx,DWORD PTR [rbx]
  404fd7:	lea    rsi,[rip+0x3d762]        # 442740 <strcmp@plt+0x3efb8>
  404fde:	mov    edi,0x3
  404fe3:	mov    edx,0x1
  404fe8:	jmp    40500d <strcmp@plt+0x1885>
  404fea:	pop    rbx
  404feb:	pop    r14
  404fed:	pop    r15
  404fef:	ret    
  404ff0:	mov    DWORD PTR [r14],0x1
  404ff7:	lea    rsi,[rip+0x3d742]        # 442740 <strcmp@plt+0x3efb8>
  404ffe:	mov    edi,0x3
  405003:	mov    edx,0x1
  405008:	mov    ecx,0x1
  40500d:	xor    eax,eax
  40500f:	pop    rbx
  405010:	pop    r14
  405012:	pop    r15
  405014:	jmp    42e800 <strcmp@plt+0x2b078>
  405019:	nop    DWORD PTR [rax+0x0]
  405020:	push   rbx
  405021:	mov    edx,edi
  405023:	lea    eax,[rdx+0x1]
  405026:	cmp    eax,0x101
  40502b:	jb     405045 <strcmp@plt+0x18bd>
  40502d:	lea    rsi,[rip+0x3d76b]        # 44279f <strcmp@plt+0x3f017>
  405034:	xor    ebx,ebx
  405036:	mov    edi,0x2
  40503b:	xor    ecx,ecx
  40503d:	mov    r8d,0xfe
  405043:	jmp    405068 <strcmp@plt+0x18e0>
  405045:	mov    ebx,0x1
  40504a:	cmp    esi,0x100
  405050:	jb     40506f <strcmp@plt+0x18e7>
  405052:	lea    rsi,[rip+0x3d77c]        # 4427d5 <strcmp@plt+0x3f04d>
  405059:	xor    ebx,ebx
  40505b:	mov    edi,0x2
  405060:	xor    ecx,ecx
  405062:	mov    r8d,0xff
  405068:	xor    eax,eax
  40506a:	call   42e800 <strcmp@plt+0x2b078>
  40506f:	mov    eax,ebx
  405071:	pop    rbx
  405072:	ret    
  405073:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40507d:	nop    DWORD PTR [rax]
  405080:	push   rbp
  405081:	push   r15
  405083:	push   r14
  405085:	push   r13
  405087:	push   r12
  405089:	push   rbx
  40508a:	push   rax
  40508b:	mov    r15,rsi
  40508e:	mov    rbp,rdi
  405091:	call   405180 <strcmp@plt+0x19f8>
  405096:	test   rax,rax
  405099:	je     40514f <strcmp@plt+0x19c7>
  40509f:	mov    rbx,rax
  4050a2:	mov    QWORD PTR [rsp],rbp
  4050a6:	mov    r13,QWORD PTR [rax+0x8]
  4050aa:	cmp    r13,rax
  4050ad:	je     405140 <strcmp@plt+0x19b8>
  4050b3:	lea    r12,[rip+0x6b446]        # 470500 <strcmp@plt+0x6cd78>
  4050ba:	nop    WORD PTR [rax+rax*1+0x0]
  4050c0:	mov    rbp,QWORD PTR [r13+0x10]
  4050c4:	mov    r14d,DWORD PTR [r12]
  4050c8:	test   r14d,r14d
  4050cb:	je     4050dd <strcmp@plt+0x1955>
  4050cd:	mov    rdi,rbp
  4050d0:	call   423200 <strcmp@plt+0x1fa78>
  4050d5:	movzx  eax,ax
  4050d8:	cmp    r14d,eax
  4050db:	jne    405120 <strcmp@plt+0x1998>
  4050dd:	mov    rdi,rbp
  4050e0:	call   423740 <strcmp@plt+0x1ffb8>
  4050e5:	mov    rdi,rax
  4050e8:	mov    rsi,r15
  4050eb:	call   42be30 <strcmp@plt+0x286a8>
  4050f0:	lea    rax,[rip+0x5fcb9]        # 464db0 <strcmp@plt+0x61628>
  4050f7:	cmp    DWORD PTR [rax],0x3
  4050fa:	jl     405137 <strcmp@plt+0x19af>
  4050fc:	mov    rdi,rbp
  4050ff:	call   423130 <strcmp@plt+0x1f9a8>
  405104:	mov    rcx,rax
  405107:	mov    edi,0x7
  40510c:	xor    eax,eax
  40510e:	lea    rsi,[rip+0x3d77c]        # 442891 <strcmp@plt+0x3f109>
  405115:	mov    rdx,rcx
  405118:	jmp    405132 <strcmp@plt+0x19aa>
  40511a:	nop    WORD PTR [rax+rax*1+0x0]
  405120:	mov    edi,0x3
  405125:	xor    eax,eax
  405127:	lea    rsi,[rip+0x3d712]        # 442840 <strcmp@plt+0x3f0b8>
  40512e:	mov    rdx,QWORD PTR [rsp]
  405132:	call   42e800 <strcmp@plt+0x2b078>
  405137:	mov    r13,QWORD PTR [r13+0x8]
  40513b:	cmp    r13,rbx
  40513e:	jne    4050c0 <strcmp@plt+0x1938>
  405140:	mov    rdi,rbx
  405143:	call   42c250 <strcmp@plt+0x28ac8>
  405148:	mov    ebx,0x1
  40514d:	jmp    405167 <strcmp@plt+0x19df>
  40514f:	lea    rsi,[rip+0x3d6b3]        # 442809 <strcmp@plt+0x3f081>
  405156:	xor    ebx,ebx
  405158:	mov    edi,0x2
  40515d:	xor    eax,eax
  40515f:	mov    rdx,rbp
  405162:	call   42e800 <strcmp@plt+0x2b078>
  405167:	mov    eax,ebx
  405169:	add    rsp,0x8
  40516d:	pop    rbx
  40516e:	pop    r12
  405170:	pop    r13
  405172:	pop    r14
  405174:	pop    r15
  405176:	pop    rbp
  405177:	ret    
  405178:	nop    DWORD PTR [rax+rax*1+0x0]
  405180:	push   r15
  405182:	push   r14
  405184:	push   rbx
  405185:	mov    r14,rdi
  405188:	xor    eax,eax
  40518a:	call   422f90 <strcmp@plt+0x1f808>
  40518f:	mov    r15,rax
  405192:	mov    rdi,r14
  405195:	mov    rsi,rax
  405198:	call   423c40 <strcmp@plt+0x204b8>
  40519d:	cmp    eax,0x1
  4051a0:	jne    4051c9 <strcmp@plt+0x1a41>
  4051a2:	lea    rdi,[rip+0x1ddf7]        # 422fa0 <strcmp@plt+0x1f818>
  4051a9:	call   42bc00 <strcmp@plt+0x28478>
  4051ae:	test   rax,rax
  4051b1:	je     4051f2 <strcmp@plt+0x1a6a>
  4051b3:	mov    rbx,rax
  4051b6:	mov    rdi,r15
  4051b9:	mov    rsi,rax
  4051bc:	call   42bcf0 <strcmp@plt+0x28568>
  4051c1:	cmp    DWORD PTR [rbx+0x18],0x0
  4051c5:	jne    40520a <strcmp@plt+0x1a82>
  4051c7:	jmp    4051f4 <strcmp@plt+0x1a6c>
  4051c9:	mov    rdi,r15
  4051cc:	call   422fa0 <strcmp@plt+0x1f818>
  4051d1:	lea    rax,[rip+0x6b328]        # 470500 <strcmp@plt+0x6cd78>
  4051d8:	mov    esi,DWORD PTR [rax]
  4051da:	mov    rdi,r14
  4051dd:	call   405e10 <strcmp@plt+0x2688>
  4051e2:	mov    rbx,rax
  4051e5:	test   rax,rax
  4051e8:	je     4051f2 <strcmp@plt+0x1a6a>
  4051ea:	cmp    DWORD PTR [rbx+0x18],0x0
  4051ee:	jne    40520a <strcmp@plt+0x1a82>
  4051f0:	jmp    4051f4 <strcmp@plt+0x1a6c>
  4051f2:	xor    ebx,ebx
  4051f4:	lea    rsi,[rip+0x3db10]        # 442d0b <strcmp@plt+0x3f583>
  4051fb:	mov    edi,0x2
  405200:	xor    eax,eax
  405202:	mov    rdx,r14
  405205:	call   42e800 <strcmp@plt+0x2b078>
  40520a:	mov    rax,rbx
  40520d:	pop    rbx
  40520e:	pop    r14
  405210:	pop    r15
  405212:	ret    
  405213:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40521d:	nop    DWORD PTR [rax]
  405220:	push   rbp
  405221:	push   r15
  405223:	push   r14
  405225:	push   r13
  405227:	push   r12
  405229:	push   rbx
  40522a:	sub    rsp,0x18
  40522e:	mov    r12d,r8d
  405231:	mov    QWORD PTR [rsp],rcx
  405235:	mov    r15d,edx
  405238:	mov    rbp,rsi
  40523b:	mov    QWORD PTR [rsp+0x10],rdi
  405240:	test   rsi,rsi
  405243:	je     405251 <strcmp@plt+0x1ac9>
  405245:	test   r15d,r15d
  405248:	je     405251 <strcmp@plt+0x1ac9>
  40524a:	cmp    QWORD PTR [rsp],0x0
  40524f:	jne    40526b <strcmp@plt+0x1ae3>
  405251:	lea    rsi,[rip+0x3d662]        # 4428ba <strcmp@plt+0x3f132>
  405258:	mov    edi,0x2
  40525d:	xor    eax,eax
  40525f:	call   42e800 <strcmp@plt+0x2b078>
  405264:	xor    eax,eax
  405266:	call   43b420 <strcmp@plt+0x37c98>
  40526b:	cmp    r15d,0x1
  40526f:	je     40528b <strcmp@plt+0x1b03>
  405271:	lea    rsi,[rip+0x3d68f]        # 442907 <strcmp@plt+0x3f17f>
  405278:	mov    edi,0x2
  40527d:	xor    eax,eax
  40527f:	call   42e800 <strcmp@plt+0x2b078>
  405284:	xor    eax,eax
  405286:	call   43b420 <strcmp@plt+0x37c98>
  40528b:	mov    rdi,rbp
  40528e:	call   405180 <strcmp@plt+0x19f8>
  405293:	test   rax,rax
  405296:	je     405340 <strcmp@plt+0x1bb8>
  40529c:	mov    rbx,rax
  40529f:	mov    QWORD PTR [rsp+0x8],rbp
  4052a4:	mov    r14,QWORD PTR [rax+0x8]
  4052a8:	cmp    r14,rax
  4052ab:	je     405331 <strcmp@plt+0x1ba9>
  4052b1:	movzx  r13d,r15b
  4052b5:	movzx  ebp,r12b
  4052b9:	nop    DWORD PTR [rax+0x0]
  4052c0:	mov    r15,QWORD PTR [r14+0x10]
  4052c4:	lea    rax,[rip+0x6b235]        # 470500 <strcmp@plt+0x6cd78>
  4052cb:	mov    r12d,DWORD PTR [rax]
  4052ce:	test   r12d,r12d
  4052d1:	je     4052e3 <strcmp@plt+0x1b5b>
  4052d3:	mov    rdi,r15
  4052d6:	call   423200 <strcmp@plt+0x1fa78>
  4052db:	movzx  eax,ax
  4052de:	cmp    r12d,eax
  4052e1:	jne    405310 <strcmp@plt+0x1b88>
  4052e3:	mov    rdi,r15
  4052e6:	mov    esi,r13d
  4052e9:	mov    rdx,QWORD PTR [rsp]
  4052ed:	mov    ecx,ebp
  4052ef:	call   40fe80 <strcmp@plt+0xc6f8>
  4052f4:	test   rax,rax
  4052f7:	je     405328 <strcmp@plt+0x1ba0>
  4052f9:	mov    rdi,rax
  4052fc:	mov    rsi,QWORD PTR [rsp+0x10]
  405301:	call   42bcf0 <strcmp@plt+0x28568>
  405306:	jmp    405328 <strcmp@plt+0x1ba0>
  405308:	nop    DWORD PTR [rax+rax*1+0x0]
  405310:	mov    edi,0x3
  405315:	xor    eax,eax
  405317:	lea    rsi,[rip+0x3d656]        # 442974 <strcmp@plt+0x3f1ec>
  40531e:	mov    rdx,QWORD PTR [rsp+0x8]
  405323:	call   42e800 <strcmp@plt+0x2b078>
  405328:	mov    r14,QWORD PTR [r14+0x8]
  40532c:	cmp    r14,rbx
  40532f:	jne    4052c0 <strcmp@plt+0x1b38>
  405331:	mov    rdi,rbx
  405334:	call   42c250 <strcmp@plt+0x28ac8>
  405339:	mov    ebx,0x1
  40533e:	jmp    405358 <strcmp@plt+0x1bd0>
  405340:	lea    rsi,[rip+0x3d5ff]        # 442946 <strcmp@plt+0x3f1be>
  405347:	xor    ebx,ebx
  405349:	mov    edi,0x2
  40534e:	xor    eax,eax
  405350:	mov    rdx,rbp
  405353:	call   42e800 <strcmp@plt+0x2b078>
  405358:	mov    eax,ebx
  40535a:	add    rsp,0x18
  40535e:	pop    rbx
  40535f:	pop    r12
  405361:	pop    r13
  405363:	pop    r14
  405365:	pop    r15
  405367:	pop    rbp
  405368:	ret    
  405369:	nop    DWORD PTR [rax+0x0]
  405370:	push   rbp
  405371:	push   r15
  405373:	push   r14
  405375:	push   r13
  405377:	push   r12
  405379:	push   rbx
  40537a:	sub    rsp,0x18
  40537e:	test   rsi,rsi
  405381:	je     4053a7 <strcmp@plt+0x1c1f>
  405383:	mov    ebp,edx
  405385:	lea    eax,[rbp+0x1]
  405388:	cmp    eax,0x101
  40538d:	jb     4053be <strcmp@plt+0x1c36>
  40538f:	lea    rsi,[rip+0x3d409]        # 44279f <strcmp@plt+0x3f017>
  405396:	xor    ebx,ebx
  405398:	mov    edi,0x2
  40539d:	xor    ecx,ecx
  40539f:	mov    r8d,0xfe
  4053a5:	jmp    4053df <strcmp@plt+0x1c57>
  4053a7:	lea    rsi,[rip+0x3d61b]        # 4429c9 <strcmp@plt+0x3f241>
  4053ae:	xor    ebx,ebx
  4053b0:	mov    edi,0x2
  4053b5:	xor    eax,eax
  4053b7:	call   42e800 <strcmp@plt+0x2b078>
  4053bc:	jmp    4053e8 <strcmp@plt+0x1c60>
  4053be:	mov    r12d,ecx
  4053c1:	cmp    ecx,0x100
  4053c7:	jb     4053f9 <strcmp@plt+0x1c71>
  4053c9:	lea    rsi,[rip+0x3d405]        # 4427d5 <strcmp@plt+0x3f04d>
  4053d0:	xor    ebx,ebx
  4053d2:	mov    edi,0x2
  4053d7:	xor    ecx,ecx
  4053d9:	mov    r8d,0xff
  4053df:	xor    eax,eax
  4053e1:	mov    edx,ebp
  4053e3:	call   42e800 <strcmp@plt+0x2b078>
  4053e8:	mov    eax,ebx
  4053ea:	add    rsp,0x18
  4053ee:	pop    rbx
  4053ef:	pop    r12
  4053f1:	pop    r13
  4053f3:	pop    r14
  4053f5:	pop    r15
  4053f7:	pop    rbp
  4053f8:	ret    
  4053f9:	mov    r15,rsi
  4053fc:	mov    rbx,rdi
  4053ff:	mov    rdi,rsi
  405402:	call   405180 <strcmp@plt+0x19f8>
  405407:	test   rax,rax
  40540a:	je     4054f5 <strcmp@plt+0x1d6d>
  405410:	mov    r13,rax
  405413:	mov    QWORD PTR [rsp+0x10],rbx
  405418:	mov    r14,QWORD PTR [rax+0x8]
  40541c:	cmp    r14,rax
  40541f:	je     4054e3 <strcmp@plt+0x1d5b>
  405425:	movzx  eax,bpl
  405429:	mov    DWORD PTR [rsp+0xc],eax
  40542d:	movzx  ebp,r12b
  405431:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40543b:	nop    DWORD PTR [rax+rax*1+0x0]
  405440:	mov    rbx,QWORD PTR [r14+0x10]
  405444:	lea    rax,[rip+0x6b0b5]        # 470500 <strcmp@plt+0x6cd78>
  40544b:	mov    r12d,DWORD PTR [rax]
  40544e:	test   r12d,r12d
  405451:	je     405463 <strcmp@plt+0x1cdb>
  405453:	mov    rdi,rbx
  405456:	call   423200 <strcmp@plt+0x1fa78>
  40545b:	movzx  eax,ax
  40545e:	cmp    r12d,eax
  405461:	jne    4054c0 <strcmp@plt+0x1d38>
  405463:	mov    esi,0x1
  405468:	xor    edx,edx
  40546a:	mov    ecx,0x1
  40546f:	mov    rdi,rbx
  405472:	mov    r8d,DWORD PTR [rsp+0xc]
  405477:	mov    r9d,ebp
  40547a:	push   0x0
  40547c:	push   0xff
  405481:	call   428660 <strcmp@plt+0x24ed8>
  405486:	add    rsp,0x10
  40548a:	test   rax,rax
  40548d:	je     4054d6 <strcmp@plt+0x1d4e>
  40548f:	mov    rbx,rax
  405492:	mov    rax,QWORD PTR [rsp+0x10]
  405497:	mov    rdi,QWORD PTR [rax+0x8]
  40549b:	mov    rsi,rbx
  40549e:	call   4291e0 <strcmp@plt+0x25a58>
  4054a3:	cmp    eax,0x1
  4054a6:	je     4054d6 <strcmp@plt+0x1d4e>
  4054a8:	mov    rdi,rbx
  4054ab:	call   428960 <strcmp@plt+0x251d8>
  4054b0:	jmp    4054d6 <strcmp@plt+0x1d4e>
  4054b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054bc:	nop    DWORD PTR [rax+0x0]
  4054c0:	mov    edi,0x3
  4054c5:	xor    eax,eax
  4054c7:	lea    rsi,[rip+0x3d56e]        # 442a3c <strcmp@plt+0x3f2b4>
  4054ce:	mov    rdx,r15
  4054d1:	call   42e800 <strcmp@plt+0x2b078>
  4054d6:	mov    r14,QWORD PTR [r14+0x8]
  4054da:	cmp    r14,r13
  4054dd:	jne    405440 <strcmp@plt+0x1cb8>
  4054e3:	mov    rdi,r13
  4054e6:	call   42c250 <strcmp@plt+0x28ac8>
  4054eb:	mov    ebx,0x1
  4054f0:	jmp    4053e8 <strcmp@plt+0x1c60>
  4054f5:	lea    rsi,[rip+0x3d50e]        # 442a0a <strcmp@plt+0x3f282>
  4054fc:	xor    ebx,ebx
  4054fe:	mov    edi,0x2
  405503:	xor    eax,eax
  405505:	mov    rdx,r15
  405508:	call   42e800 <strcmp@plt+0x2b078>
  40550d:	jmp    4053e8 <strcmp@plt+0x1c60>
  405512:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40551c:	nop    DWORD PTR [rax+0x0]
  405520:	push   rbp
  405521:	push   r15
  405523:	push   r14
  405525:	push   r13
  405527:	push   r12
  405529:	push   rbx
  40552a:	push   rax
  40552b:	mov    r12d,r9d
  40552e:	mov    ebx,r8d
  405531:	mov    r13d,ecx
  405534:	mov    r14,rdx
  405537:	mov    r15,rsi
  40553a:	mov    rbp,rdi
  40553d:	mov    rdi,rdx
  405540:	call   431ad0 <strcmp@plt+0x2e348>
  405545:	mov    QWORD PTR [rsp],rax
  405549:	mov    rsi,QWORD PTR [r15+0x8]
  40554d:	mov    rdi,r14
  405550:	call   42be80 <strcmp@plt+0x286f8>
  405555:	test   al,al
  405557:	je     4055b6 <strcmp@plt+0x1e2e>
  405559:	test   ebx,ebx
  40555b:	js     405619 <strcmp@plt+0x1e91>
  405561:	cmp    r13d,0x2
  405565:	jne    4055c8 <strcmp@plt+0x1e40>
  405567:	mov    rdi,QWORD PTR [rbp+0x10]
  40556b:	movzx  esi,BYTE PTR [rbp+0xc]
  40556f:	movzx  r8d,bl
  405573:	movzx  r9d,r12b
  405577:	mov    edx,0x1
  40557c:	mov    ecx,0x1
  405581:	push   0x0
  405583:	push   0xff
  405588:	call   428660 <strcmp@plt+0x24ed8>
  40558d:	add    rsp,0x10
  405591:	xor    ebp,ebp
  405593:	test   rax,rax
  405596:	je     405628 <strcmp@plt+0x1ea0>
  40559c:	mov    rbx,rax
  40559f:	mov    rdi,QWORD PTR [rsp]
  4055a3:	mov    rsi,rax
  4055a6:	call   4291e0 <strcmp@plt+0x25a58>
  4055ab:	cmp    eax,0x1
  4055ae:	jne    405620 <strcmp@plt+0x1e98>
  4055b0:	mov    rsi,QWORD PTR [r15+0x10]
  4055b4:	jmp    405611 <strcmp@plt+0x1e89>
  4055b6:	mov    rsi,QWORD PTR [r15+0x8]
  4055ba:	mov    rdi,r14
  4055bd:	call   42bcf0 <strcmp@plt+0x28568>
  4055c2:	test   ebx,ebx
  4055c4:	jns    405561 <strcmp@plt+0x1dd9>
  4055c6:	jmp    405619 <strcmp@plt+0x1e91>
  4055c8:	mov    rdi,QWORD PTR [rbp+0x18]
  4055cc:	movzx  esi,BYTE PTR [rbp+0xc]
  4055d0:	movzx  r8d,bl
  4055d4:	movzx  r9d,r12b
  4055d8:	mov    edx,0x1
  4055dd:	mov    ecx,0x1
  4055e2:	push   0x0
  4055e4:	push   0xff
  4055e9:	call   428660 <strcmp@plt+0x24ed8>
  4055ee:	add    rsp,0x10
  4055f2:	xor    ebp,ebp
  4055f4:	test   rax,rax
  4055f7:	je     405628 <strcmp@plt+0x1ea0>
  4055f9:	mov    rbx,rax
  4055fc:	mov    rdi,QWORD PTR [rsp]
  405600:	mov    rsi,rax
  405603:	call   4291e0 <strcmp@plt+0x25a58>
  405608:	cmp    eax,0x1
  40560b:	jne    405620 <strcmp@plt+0x1e98>
  40560d:	mov    rsi,QWORD PTR [r15+0x18]
  405611:	mov    rdi,rbx
  405614:	call   42bcf0 <strcmp@plt+0x28568>
  405619:	mov    ebp,0x1
  40561e:	jmp    405628 <strcmp@plt+0x1ea0>
  405620:	mov    rdi,rbx
  405623:	call   428960 <strcmp@plt+0x251d8>
  405628:	mov    eax,ebp
  40562a:	add    rsp,0x8
  40562e:	pop    rbx
  40562f:	pop    r12
  405631:	pop    r13
  405633:	pop    r14
  405635:	pop    r15
  405637:	pop    rbp
  405638:	ret    
  405639:	nop    DWORD PTR [rax+0x0]
  405640:	push   rbp
  405641:	push   r15
  405643:	push   r14
  405645:	push   r13
  405647:	push   r12
  405649:	push   rbx
  40564a:	sub    rsp,0x18
  40564e:	test   rsi,rsi
  405651:	je     40567a <strcmp@plt+0x1ef2>
  405653:	mov    r12d,ecx
  405656:	lea    eax,[r12+0x1]
  40565b:	cmp    eax,0x101
  405660:	jb     405691 <strcmp@plt+0x1f09>
  405662:	lea    rsi,[rip+0x3d136]        # 44279f <strcmp@plt+0x3f017>
  405669:	xor    ebx,ebx
  40566b:	mov    edi,0x2
  405670:	xor    ecx,ecx
  405672:	mov    r8d,0xfe
  405678:	jmp    4056b3 <strcmp@plt+0x1f2b>
  40567a:	lea    rsi,[rip+0x3d403]        # 442a84 <strcmp@plt+0x3f2fc>
  405681:	xor    ebx,ebx
  405683:	mov    edi,0x2
  405688:	xor    eax,eax
  40568a:	call   42e800 <strcmp@plt+0x2b078>
  40568f:	jmp    4056bd <strcmp@plt+0x1f35>
  405691:	mov    r15d,r8d
  405694:	cmp    r8d,0x100
  40569b:	jb     4056ce <strcmp@plt+0x1f46>
  40569d:	lea    rsi,[rip+0x3d131]        # 4427d5 <strcmp@plt+0x3f04d>
  4056a4:	xor    ebx,ebx
  4056a6:	mov    edi,0x2
  4056ab:	xor    ecx,ecx
  4056ad:	mov    r8d,0xff
  4056b3:	xor    eax,eax
  4056b5:	mov    edx,r12d
  4056b8:	call   42e800 <strcmp@plt+0x2b078>
  4056bd:	mov    eax,ebx
  4056bf:	add    rsp,0x18
  4056c3:	pop    rbx
  4056c4:	pop    r12
  4056c6:	pop    r13
  4056c8:	pop    r14
  4056ca:	pop    r15
  4056cc:	pop    rbp
  4056cd:	ret    
  4056ce:	mov    ecx,edx
  4056d0:	mov    rbp,rsi
  4056d3:	test   r12d,r12d
  4056d6:	js     4057d6 <strcmp@plt+0x204e>
  4056dc:	mov    eax,ecx
  4056de:	or     eax,0x2
  4056e1:	cmp    eax,0x6
  4056e4:	jne    4057f6 <strcmp@plt+0x206e>
  4056ea:	mov    r14,rdi
  4056ed:	xor    ebx,ebx
  4056ef:	cmp    ecx,0x4
  4056f2:	setne  r13b
  4056f6:	mov    rdi,rbp
  4056f9:	call   43ae20 <strcmp@plt+0x37698>
  4056fe:	test   rax,rax
  405701:	jne    405714 <strcmp@plt+0x1f8c>
  405703:	mov    rdi,rbp
  405706:	call   43ad30 <strcmp@plt+0x375a8>
  40570b:	test   rax,rax
  40570e:	je     40580b <strcmp@plt+0x2083>
  405714:	mov    bl,r13b
  405717:	lea    ebx,[rbx*8+0x2]
  40571e:	mov    rdi,rax
  405721:	mov    esi,ebx
  405723:	mov    r13,rax
  405726:	call   43a8b0 <strcmp@plt+0x37128>
  40572b:	cmp    eax,0x1
  40572e:	jne    405802 <strcmp@plt+0x207a>
  405734:	mov    DWORD PTR [rsp+0xc],ebx
  405738:	mov    QWORD PTR [rsp+0x10],r13
  40573d:	mov    rdi,QWORD PTR [r14+0x50]
  405741:	mov    rsi,rbp
  405744:	call   436750 <strcmp@plt+0x32fc8>
  405749:	mov    r13,rax
  40574c:	test   rax,rax
  40574f:	jne    405776 <strcmp@plt+0x1fee>
  405751:	mov    rdi,rbp
  405754:	call   42ccb0 <strcmp@plt+0x29528>
  405759:	mov    r13,rax
  40575c:	mov    rbx,QWORD PTR [r14+0x50]
  405760:	mov    rdi,rbp
  405763:	call   403700 <strdup@plt>
  405768:	mov    rdi,rbx
  40576b:	mov    rsi,rax
  40576e:	mov    rdx,r13
  405771:	call   4362a0 <strcmp@plt+0x32b18>
  405776:	mov    rax,QWORD PTR [r14+0x68]
  40577a:	cmp    QWORD PTR [rax+0x8],0x0
  40577f:	jne    4057a0 <strcmp@plt+0x2018>
  405781:	mov    rcx,QWORD PTR [r14+0x38]
  405785:	mov    rdi,QWORD PTR [r14+0x40]
  405789:	xor    ebx,ebx
  40578b:	xor    edx,edx
  40578d:	mov    rsi,rax
  405790:	call   QWORD PTR [rcx+0x10]
  405793:	cmp    eax,0x1
  405796:	jne    405828 <strcmp@plt+0x20a0>
  40579c:	mov    rax,QWORD PTR [r14+0x68]
  4057a0:	mov    rdi,QWORD PTR [rsp+0x10]
  4057a5:	mov    rsi,r13
  4057a8:	mov    rdx,rax
  4057ab:	mov    ecx,DWORD PTR [rsp+0xc]
  4057af:	mov    r8d,r12d
  4057b2:	mov    r9d,r15d
  4057b5:	call   405520 <strcmp@plt+0x1d98>
  4057ba:	xor    ebx,ebx
  4057bc:	cmp    eax,0x1
  4057bf:	jne    4056bd <strcmp@plt+0x1f35>
  4057c5:	mov    rax,QWORD PTR [r14+0x38]
  4057c9:	mov    rdi,QWORD PTR [r14+0x40]
  4057cd:	mov    rsi,QWORD PTR [r14+0x68]
  4057d1:	call   QWORD PTR [rax+0x30]
  4057d4:	jmp    4057ec <strcmp@plt+0x2064>
  4057d6:	lea    rsi,[rip+0x3d2e7]        # 442ac4 <strcmp@plt+0x3f33c>
  4057dd:	mov    edi,0x2
  4057e2:	xor    eax,eax
  4057e4:	mov    rdx,rbp
  4057e7:	call   42e800 <strcmp@plt+0x2b078>
  4057ec:	mov    ebx,0x1
  4057f1:	jmp    4056bd <strcmp@plt+0x1f35>
  4057f6:	lea    rsi,[rip+0x3d32b]        # 442b28 <strcmp@plt+0x3f3a0>
  4057fd:	jmp    405681 <strcmp@plt+0x1ef9>
  405802:	lea    rsi,[rip+0x3d3a1]        # 442baa <strcmp@plt+0x3f422>
  405809:	jmp    405812 <strcmp@plt+0x208a>
  40580b:	lea    rsi,[rip+0x3d36f]        # 442b81 <strcmp@plt+0x3f3f9>
  405812:	xor    ebx,ebx
  405814:	mov    edi,0x3
  405819:	xor    eax,eax
  40581b:	mov    rdx,rbp
  40581e:	call   42e800 <strcmp@plt+0x2b078>
  405823:	jmp    4056bd <strcmp@plt+0x1f35>
  405828:	lea    rsi,[rip+0x3d3b4]        # 442be3 <strcmp@plt+0x3f45b>
  40582f:	mov    edi,0x2
  405834:	xor    eax,eax
  405836:	call   42e800 <strcmp@plt+0x2b078>
  40583b:	mov    rdi,QWORD PTR [r14+0x68]
  40583f:	call   431c10 <strcmp@plt+0x2e488>
  405844:	jmp    4056bd <strcmp@plt+0x1f35>
  405849:	nop    DWORD PTR [rax+0x0]
  405850:	push   rbp
  405851:	push   r15
  405853:	push   r14
  405855:	push   r13
  405857:	push   r12
  405859:	push   rbx
  40585a:	sub    rsp,0x18
  40585e:	mov    r14d,r9d
  405861:	mov    QWORD PTR [rsp+0x10],r8
  405866:	mov    r13d,ecx
  405869:	mov    ebp,edx
  40586b:	mov    r15,rsi
  40586e:	cmp    edx,0x1000000
  405874:	jb     405892 <strcmp@plt+0x210a>
  405876:	lea    rsi,[rip+0x3d39f]        # 442c1c <strcmp@plt+0x3f494>
  40587d:	mov    edi,0x2
  405882:	mov    ecx,0xffffff
  405887:	xor    eax,eax
  405889:	mov    edx,ebp
  40588b:	call   42e800 <strcmp@plt+0x2b078>
  405890:	xor    ebp,ebp
  405892:	mov    r12,QWORD PTR [rsp+0x70]
  405897:	xor    eax,eax
  405899:	call   422f90 <strcmp@plt+0x1f808>
  40589e:	mov    rbx,rax
  4058a1:	mov    rdi,r15
  4058a4:	mov    rsi,rax
  4058a7:	call   423c60 <strcmp@plt+0x204d8>
  4058ac:	cmp    eax,0x1
  4058af:	je     4058d8 <strcmp@plt+0x2150>
  4058b1:	mov    rdi,rbx
  4058b4:	call   422fa0 <strcmp@plt+0x1f818>
  4058b9:	mov    rdi,r12
  4058bc:	mov    rsi,r15
  4058bf:	call   436750 <strcmp@plt+0x32fc8>
  4058c4:	test   rax,rax
  4058c7:	je     405983 <strcmp@plt+0x21fb>
  4058cd:	mov    rdi,rax
  4058d0:	call   423740 <strcmp@plt+0x1ffb8>
  4058d5:	mov    rbx,rax
  4058d8:	mov    r15,QWORD PTR [rsp+0x68]
  4058dd:	mov    rdi,rbx
  4058e0:	call   4343f0 <strcmp@plt+0x30c68>
  4058e5:	movzx  eax,BYTE PTR [rsp+0x58]
  4058ea:	mov    DWORD PTR [rsp],eax
  4058ed:	movzx  r8d,r14b
  4058f1:	movzx  r9d,BYTE PTR [rsp+0x50]
  4058f7:	mov    QWORD PTR [rsp+0x8],rbx
  4058fc:	mov    rdi,rbx
  4058ff:	mov    esi,ebp
  405901:	mov    edx,r13d
  405904:	mov    rcx,QWORD PTR [rsp+0x10]
  405909:	call   42e6d0 <strcmp@plt+0x2af48>
  40590e:	mov    rbp,rax
  405911:	mov    al,BYTE PTR [rsp+0x60]
  405915:	mov    BYTE PTR [rbp+0x19],al
  405918:	mov    r13,QWORD PTR [r15+0x8]
  40591c:	cmp    r13,r15
  40591f:	jne    405941 <strcmp@plt+0x21b9>
  405921:	jmp    405977 <strcmp@plt+0x21ef>
  405923:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40592d:	nop    DWORD PTR [rax]
  405930:	mov    rdi,rbx
  405933:	call   42c250 <strcmp@plt+0x28ac8>
  405938:	mov    r13,QWORD PTR [r13+0x8]
  40593c:	cmp    r13,r15
  40593f:	je     405977 <strcmp@plt+0x21ef>
  405941:	mov    rdi,QWORD PTR [r13+0x10]
  405945:	mov    rsi,r12
  405948:	call   4059b0 <strcmp@plt+0x2228>
  40594d:	mov    rbx,rax
  405950:	mov    r14,QWORD PTR [rax+0x8]
  405954:	cmp    r14,rax
  405957:	je     405930 <strcmp@plt+0x21a8>
  405959:	nop    DWORD PTR [rax+0x0]
  405960:	mov    rsi,QWORD PTR [r14+0x10]
  405964:	mov    rdi,rbp
  405967:	call   42e770 <strcmp@plt+0x2afe8>
  40596c:	mov    r14,QWORD PTR [r14+0x8]
  405970:	cmp    r14,rbx
  405973:	jne    405960 <strcmp@plt+0x21d8>
  405975:	jmp    405930 <strcmp@plt+0x21a8>
  405977:	mov    rdi,QWORD PTR [rsp+0x8]
  40597c:	call   422fa0 <strcmp@plt+0x1f818>
  405981:	jmp    40599b <strcmp@plt+0x2213>
  405983:	lea    rsi,[rip+0x3d2d8]        # 442c62 <strcmp@plt+0x3f4da>
  40598a:	xor    ebp,ebp
  40598c:	mov    edi,0x2
  405991:	xor    eax,eax
  405993:	mov    rdx,r15
  405996:	call   42e800 <strcmp@plt+0x2b078>
  40599b:	mov    rax,rbp
  40599e:	add    rsp,0x18
  4059a2:	pop    rbx
  4059a3:	pop    r12
  4059a5:	pop    r13
  4059a7:	pop    r14
  4059a9:	pop    r15
  4059ab:	pop    rbp
  4059ac:	ret    
  4059ad:	nop    DWORD PTR [rax]
  4059b0:	push   r15
  4059b2:	push   r14
  4059b4:	push   r12
  4059b6:	push   rbx
  4059b7:	push   rax
  4059b8:	mov    r15,rsi
  4059bb:	mov    r14,rdi
  4059be:	xor    eax,eax
  4059c0:	call   422f90 <strcmp@plt+0x1f808>
  4059c5:	mov    r12,rax
  4059c8:	mov    esi,0x2f
  4059cd:	mov    rdi,r14
  4059d0:	call   403190 <strchr@plt>
  4059d5:	mov    rdi,r14
  4059d8:	mov    rsi,r12
  4059db:	test   rax,rax
  4059de:	je     4059f1 <strcmp@plt+0x2269>
  4059e0:	call   423c60 <strcmp@plt+0x204d8>
  4059e5:	cmp    eax,0x1
  4059e8:	jne    4059fb <strcmp@plt+0x2273>
  4059ea:	test   r12,r12
  4059ed:	jne    405a23 <strcmp@plt+0x229b>
  4059ef:	jmp    405a4a <strcmp@plt+0x22c2>
  4059f1:	call   423c40 <strcmp@plt+0x204b8>
  4059f6:	cmp    eax,0x1
  4059f9:	je     4059ea <strcmp@plt+0x2262>
  4059fb:	mov    rdi,r12
  4059fe:	call   422fa0 <strcmp@plt+0x1f818>
  405a03:	mov    rdi,r15
  405a06:	mov    rsi,r14
  405a09:	call   436750 <strcmp@plt+0x32fc8>
  405a0e:	test   rax,rax
  405a11:	je     405a4a <strcmp@plt+0x22c2>
  405a13:	mov    rdi,rax
  405a16:	call   423740 <strcmp@plt+0x1ffb8>
  405a1b:	mov    r12,rax
  405a1e:	test   r12,r12
  405a21:	je     405a4a <strcmp@plt+0x22c2>
  405a23:	lea    rdi,[rip+0x1d576]        # 422fa0 <strcmp@plt+0x1f818>
  405a2a:	call   42bc00 <strcmp@plt+0x28478>
  405a2f:	test   rax,rax
  405a32:	je     405a6b <strcmp@plt+0x22e3>
  405a34:	mov    rbx,rax
  405a37:	mov    rdi,r12
  405a3a:	mov    rsi,rax
  405a3d:	call   42bcf0 <strcmp@plt+0x28568>
  405a42:	cmp    DWORD PTR [rbx+0x18],0x0
  405a46:	jne    405a83 <strcmp@plt+0x22fb>
  405a48:	jmp    405a6d <strcmp@plt+0x22e5>
  405a4a:	lea    rax,[rip+0x6aaaf]        # 470500 <strcmp@plt+0x6cd78>
  405a51:	mov    esi,DWORD PTR [rax]
  405a53:	mov    rdi,r14
  405a56:	call   405e10 <strcmp@plt+0x2688>
  405a5b:	mov    rbx,rax
  405a5e:	test   rax,rax
  405a61:	je     405a6b <strcmp@plt+0x22e3>
  405a63:	cmp    DWORD PTR [rbx+0x18],0x0
  405a67:	jne    405a83 <strcmp@plt+0x22fb>
  405a69:	jmp    405a6d <strcmp@plt+0x22e5>
  405a6b:	xor    ebx,ebx
  405a6d:	lea    rsi,[rip+0x3d26a]        # 442cde <strcmp@plt+0x3f556>
  405a74:	mov    edi,0x2
  405a79:	xor    eax,eax
  405a7b:	mov    rdx,r14
  405a7e:	call   42e800 <strcmp@plt+0x2b078>
  405a83:	mov    rax,rbx
  405a86:	add    rsp,0x8
  405a8a:	pop    rbx
  405a8b:	pop    r12
  405a8d:	pop    r14
  405a8f:	pop    r15
  405a91:	ret    
  405a92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a9c:	nop    DWORD PTR [rax+0x0]
  405aa0:	push   rbp
  405aa1:	push   r15
  405aa3:	push   r14
  405aa5:	push   rbx
  405aa6:	push   rax
  405aa7:	mov    r15,rcx
  405aaa:	mov    ebp,edx
  405aac:	mov    r14,rsi
  405aaf:	cmp    edx,0x1000000
  405ab5:	jb     405ad3 <strcmp@plt+0x234b>
  405ab7:	lea    rsi,[rip+0x3d15e]        # 442c1c <strcmp@plt+0x3f494>
  405abe:	mov    edi,0x2
  405ac3:	mov    ecx,0xffffff
  405ac8:	xor    eax,eax
  405aca:	mov    edx,ebp
  405acc:	call   42e800 <strcmp@plt+0x2b078>
  405ad1:	xor    ebp,ebp
  405ad3:	xor    eax,eax
  405ad5:	call   422f90 <strcmp@plt+0x1f808>
  405ada:	mov    rbx,rax
  405add:	mov    rdi,r14
  405ae0:	mov    rsi,rax
  405ae3:	call   423c60 <strcmp@plt+0x204d8>
  405ae8:	cmp    eax,0x1
  405aeb:	je     405b10 <strcmp@plt+0x2388>
  405aed:	mov    rdi,rbx
  405af0:	call   422fa0 <strcmp@plt+0x1f818>
  405af5:	mov    rdi,r15
  405af8:	mov    rsi,r14
  405afb:	call   436750 <strcmp@plt+0x32fc8>
  405b00:	test   rax,rax
  405b03:	je     405b32 <strcmp@plt+0x23aa>
  405b05:	mov    rdi,rax
  405b08:	call   423740 <strcmp@plt+0x1ffb8>
  405b0d:	mov    rbx,rax
  405b10:	mov    rdi,rbx
  405b13:	call   4343f0 <strcmp@plt+0x30c68>
  405b18:	mov    rdi,rbx
  405b1b:	mov    esi,ebp
  405b1d:	call   4147e0 <strcmp@plt+0x11058>
  405b22:	mov    rbp,rax
  405b25:	mov    rdi,rbx
  405b28:	call   422fa0 <strcmp@plt+0x1f818>
  405b2d:	mov    rax,rbp
  405b30:	jmp    405b4a <strcmp@plt+0x23c2>
  405b32:	lea    rsi,[rip+0x3d129]        # 442c62 <strcmp@plt+0x3f4da>
  405b39:	mov    edi,0x2
  405b3e:	xor    eax,eax
  405b40:	mov    rdx,r14
  405b43:	call   42e800 <strcmp@plt+0x2b078>
  405b48:	xor    eax,eax
  405b4a:	add    rsp,0x8
  405b4e:	pop    rbx
  405b4f:	pop    r14
  405b51:	pop    r15
  405b53:	pop    rbp
  405b54:	ret    
  405b55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b5f:	nop
  405b60:	push   rbp
  405b61:	push   r15
  405b63:	push   r14
  405b65:	push   r13
  405b67:	push   r12
  405b69:	push   rbx
  405b6a:	sub    rsp,0x18
  405b6e:	mov    r15,r9
  405b71:	mov    r12,r8
  405b74:	mov    DWORD PTR [rsp+0xc],ecx
  405b78:	mov    ebp,edx
  405b7a:	mov    rbx,rsi
  405b7d:	lea    rdi,[rip+0x1d41c]        # 422fa0 <strcmp@plt+0x1f818>
  405b84:	call   42bc00 <strcmp@plt+0x28478>
  405b89:	mov    r14,rax
  405b8c:	cmp    ebp,0x1000000
  405b92:	jb     405bb0 <strcmp@plt+0x2428>
  405b94:	lea    rsi,[rip+0x3d081]        # 442c1c <strcmp@plt+0x3f494>
  405b9b:	mov    edi,0x2
  405ba0:	mov    ecx,0xffffff
  405ba5:	xor    eax,eax
  405ba7:	mov    edx,ebp
  405ba9:	call   42e800 <strcmp@plt+0x2b078>
  405bae:	xor    ebp,ebp
  405bb0:	xor    eax,eax
  405bb2:	call   422f90 <strcmp@plt+0x1f808>
  405bb7:	mov    r13,rax
  405bba:	mov    rdi,rbx
  405bbd:	mov    rsi,rax
  405bc0:	call   423c60 <strcmp@plt+0x204d8>
  405bc5:	cmp    eax,0x1
  405bc8:	jne    405bd3 <strcmp@plt+0x244b>
  405bca:	mov    DWORD PTR [rsp+0x8],ebp
  405bce:	mov    rdi,r13
  405bd1:	jmp    405bfe <strcmp@plt+0x2476>
  405bd3:	mov    rdi,r13
  405bd6:	call   422fa0 <strcmp@plt+0x1f818>
  405bdb:	mov    rdi,r15
  405bde:	mov    rsi,rbx
  405be1:	call   436750 <strcmp@plt+0x32fc8>
  405be6:	test   rax,rax
  405be9:	je     405c9f <strcmp@plt+0x2517>
  405bef:	mov    DWORD PTR [rsp+0x8],ebp
  405bf3:	mov    rdi,rax
  405bf6:	call   423740 <strcmp@plt+0x1ffb8>
  405bfb:	mov    rdi,rax
  405bfe:	mov    QWORD PTR [rsp+0x10],rdi
  405c03:	call   4343f0 <strcmp@plt+0x30c68>
  405c08:	mov    rbx,QWORD PTR [r12+0x8]
  405c0d:	cmp    rbx,r12
  405c10:	jne    405c31 <strcmp@plt+0x24a9>
  405c12:	jmp    405c6f <strcmp@plt+0x24e7>
  405c14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c1e:	xchg   ax,ax
  405c20:	mov    rdi,rbp
  405c23:	call   42c250 <strcmp@plt+0x28ac8>
  405c28:	mov    rbx,QWORD PTR [rbx+0x8]
  405c2c:	cmp    rbx,r12
  405c2f:	je     405c6f <strcmp@plt+0x24e7>
  405c31:	mov    rdi,QWORD PTR [rbx+0x10]
  405c35:	mov    rsi,r15
  405c38:	call   4059b0 <strcmp@plt+0x2228>
  405c3d:	mov    rbp,rax
  405c40:	cmp    DWORD PTR [rax+0x18],0x0
  405c44:	jle    405c20 <strcmp@plt+0x2498>
  405c46:	mov    r13,QWORD PTR [rbp+0x8]
  405c4a:	cmp    r13,rbp
  405c4d:	je     405c20 <strcmp@plt+0x2498>
  405c4f:	nop
  405c50:	mov    rdi,QWORD PTR [r13+0x10]
  405c54:	call   423740 <strcmp@plt+0x1ffb8>
  405c59:	mov    rdi,rax
  405c5c:	mov    rsi,r14
  405c5f:	call   42be30 <strcmp@plt+0x286a8>
  405c64:	mov    r13,QWORD PTR [r13+0x8]
  405c68:	cmp    r13,rbp
  405c6b:	jne    405c50 <strcmp@plt+0x24c8>
  405c6d:	jmp    405c20 <strcmp@plt+0x2498>
  405c6f:	mov    rbx,QWORD PTR [rsp+0x10]
  405c74:	mov    rdi,rbx
  405c77:	mov    esi,DWORD PTR [rsp+0x8]
  405c7b:	mov    edx,DWORD PTR [rsp+0xc]
  405c7f:	mov    rcx,r14
  405c82:	call   414830 <strcmp@plt+0x110a8>
  405c87:	mov    rbp,rax
  405c8a:	mov    rdi,rbx
  405c8d:	call   422fa0 <strcmp@plt+0x1f818>
  405c92:	mov    rdi,r14
  405c95:	call   42c250 <strcmp@plt+0x28ac8>
  405c9a:	mov    rax,rbp
  405c9d:	jmp    405cb7 <strcmp@plt+0x252f>
  405c9f:	lea    rsi,[rip+0x3cfbc]        # 442c62 <strcmp@plt+0x3f4da>
  405ca6:	mov    edi,0x2
  405cab:	xor    eax,eax
  405cad:	mov    rdx,rbx
  405cb0:	call   42e800 <strcmp@plt+0x2b078>
  405cb5:	xor    eax,eax
  405cb7:	add    rsp,0x18
  405cbb:	pop    rbx
  405cbc:	pop    r12
  405cbe:	pop    r13
  405cc0:	pop    r14
  405cc2:	pop    r15
  405cc4:	pop    rbp
  405cc5:	ret    
  405cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cd0:	push   rbp
  405cd1:	push   r15
  405cd3:	push   r14
  405cd5:	push   r13
  405cd7:	push   r12
  405cd9:	push   rbx
  405cda:	sub    rsp,0x28
  405cde:	mov    r12,rdx
  405ce1:	mov    r13,rsi
  405ce4:	mov    QWORD PTR [rsp+0x20],rdi
  405ce9:	lea    rdi,[rip+0x1d2b0]        # 422fa0 <strcmp@plt+0x1f818>
  405cf0:	call   42bc00 <strcmp@plt+0x28478>
  405cf5:	mov    rbx,rax
  405cf8:	xor    eax,eax
  405cfa:	call   422f90 <strcmp@plt+0x1f808>
  405cff:	mov    QWORD PTR [rsp+0x18],rax
  405d04:	mov    r14,QWORD PTR [r13+0x8]
  405d08:	cmp    r14,r13
  405d0b:	jne    405d21 <strcmp@plt+0x2599>
  405d0d:	jmp    405d5f <strcmp@plt+0x25d7>
  405d0f:	nop
  405d10:	mov    rdi,rbp
  405d13:	call   42c250 <strcmp@plt+0x28ac8>
  405d18:	mov    r14,QWORD PTR [r14+0x8]
  405d1c:	cmp    r14,r13
  405d1f:	je     405d5f <strcmp@plt+0x25d7>
  405d21:	mov    rdi,QWORD PTR [r14+0x10]
  405d25:	mov    rsi,r12
  405d28:	call   4059b0 <strcmp@plt+0x2228>
  405d2d:	mov    rbp,rax
  405d30:	cmp    DWORD PTR [rax+0x18],0x0
  405d34:	jle    405d10 <strcmp@plt+0x2588>
  405d36:	mov    r15,QWORD PTR [rbp+0x8]
  405d3a:	cmp    r15,rbp
  405d3d:	je     405d10 <strcmp@plt+0x2588>
  405d3f:	nop
  405d40:	mov    rdi,QWORD PTR [r15+0x10]
  405d44:	call   423740 <strcmp@plt+0x1ffb8>
  405d49:	mov    rdi,rax
  405d4c:	mov    rsi,rbx
  405d4f:	call   42be30 <strcmp@plt+0x286a8>
  405d54:	mov    r15,QWORD PTR [r15+0x8]
  405d58:	cmp    r15,rbp
  405d5b:	jne    405d40 <strcmp@plt+0x25b8>
  405d5d:	jmp    405d10 <strcmp@plt+0x2588>
  405d5f:	cmp    DWORD PTR [rbx+0x18],0x0
  405d63:	jle    405dd9 <strcmp@plt+0x2651>
  405d65:	lea    rdi,[rip+0x3cf68]        # 442cd4 <strcmp@plt+0x3f54c>
  405d6c:	mov    r14,QWORD PTR [rsp+0x18]
  405d71:	mov    rsi,r14
  405d74:	call   423c60 <strcmp@plt+0x204d8>
  405d79:	vxorps xmm0,xmm0,xmm0
  405d7d:	vmovups XMMWORD PTR [rsp],xmm0
  405d82:	mov    r12d,0x1
  405d88:	mov    esi,0x5a0
  405d8d:	xor    edx,edx
  405d8f:	mov    ecx,0x1
  405d94:	xor    r8d,r8d
  405d97:	mov    rdi,r14
  405d9a:	mov    r9,rbx
  405d9d:	call   429ac0 <strcmp@plt+0x26338>
  405da2:	mov    r13,rax
  405da5:	xor    eax,eax
  405da7:	call   430ca0 <strcmp@plt+0x2d518>
  405dac:	mov    rbp,rax
  405daf:	mov    rdi,rax
  405db2:	mov    rsi,r13
  405db5:	call   430cd0 <strcmp@plt+0x2d548>
  405dba:	mov    rdi,QWORD PTR [rsp+0x20]
  405dbf:	mov    rsi,rbp
  405dc2:	call   416000 <strcmp@plt+0x12878>
  405dc7:	mov    rdi,r14
  405dca:	call   422fa0 <strcmp@plt+0x1f818>
  405dcf:	mov    rdi,rbx
  405dd2:	call   42c250 <strcmp@plt+0x28ac8>
  405dd7:	jmp    405def <strcmp@plt+0x2667>
  405dd9:	lea    rsi,[rip+0x3ceb2]        # 442c92 <strcmp@plt+0x3f50a>
  405de0:	xor    r12d,r12d
  405de3:	mov    edi,0x2
  405de8:	xor    eax,eax
  405dea:	call   42e800 <strcmp@plt+0x2b078>
  405def:	mov    eax,r12d
  405df2:	add    rsp,0x28
  405df6:	pop    rbx
  405df7:	pop    r12
  405df9:	pop    r13
  405dfb:	pop    r14
  405dfd:	pop    r15
  405dff:	pop    rbp
  405e00:	ret    
  405e01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  405e10:	push   rbp
  405e11:	push   r15
  405e13:	push   r14
  405e15:	push   r13
  405e17:	push   r12
  405e19:	push   rbx
  405e1a:	sub    rsp,0x38
  405e1e:	mov    ebx,esi
  405e20:	mov    r14,rdi
  405e23:	mov    QWORD PTR [rsp],0x0
  405e2b:	lea    rdi,[rip+0x1d16e]        # 422fa0 <strcmp@plt+0x1f818>
  405e32:	call   42bc00 <strcmp@plt+0x28478>
  405e37:	mov    r13,rax
  405e3a:	vxorps xmm0,xmm0,xmm0
  405e3e:	vmovups YMMWORD PTR [rsp+0x10],ymm0
  405e44:	mov    QWORD PTR [rsp+0x30],0x0
  405e4d:	mov    DWORD PTR [rsp+0xc],ebx
  405e51:	mov    DWORD PTR [rsp+0x8],0x1
  405e59:	mov    DWORD PTR [rsp+0x14],0x11
  405e61:	lea    rdx,[rsp+0x8]
  405e66:	mov    rcx,rsp
  405e69:	xor    esi,esi
  405e6b:	mov    rdi,r14
  405e6e:	vzeroupper 
  405e71:	call   4034f0 <getaddrinfo@plt>
  405e76:	test   eax,eax
  405e78:	je     405ea2 <strcmp@plt+0x271a>
  405e7a:	mov    edi,eax
  405e7c:	call   403550 <gai_strerror@plt>
  405e81:	mov    rcx,rax
  405e84:	lea    rsi,[rip+0x3ceb1]        # 442d3c <strcmp@plt+0x3f5b4>
  405e8b:	xor    r13d,r13d
  405e8e:	mov    edi,0x3
  405e93:	xor    eax,eax
  405e95:	mov    rdx,rcx
  405e98:	call   42e800 <strcmp@plt+0x2b078>
  405e9d:	jmp    405f79 <strcmp@plt+0x27f1>
  405ea2:	mov    rbp,QWORD PTR [rsp]
  405ea6:	test   rbp,rbp
  405ea9:	je     405f72 <strcmp@plt+0x27ea>
  405eaf:	lea    r15,[rip+0x5eefa]        # 464db0 <strcmp@plt+0x61628>
  405eb6:	lea    r12,[rip+0x3ced2]        # 442d8f <strcmp@plt+0x3f607>
  405ebd:	nop    DWORD PTR [rax]
  405ec0:	mov    edi,0x1
  405ec5:	call   422ef0 <strcmp@plt+0x1f768>
  405eca:	test   rax,rax
  405ecd:	je     405f00 <strcmp@plt+0x2778>
  405ecf:	mov    rbx,rax
  405ed2:	mov    rsi,QWORD PTR [rbp+0x18]
  405ed6:	movzx  eax,WORD PTR [rsi]
  405ed9:	cmp    eax,0xa
  405edc:	je     405f20 <strcmp@plt+0x2798>
  405ede:	movzx  eax,ax
  405ee1:	cmp    eax,0x2
  405ee4:	jne    405f31 <strcmp@plt+0x27a9>
  405ee6:	add    rsi,0x4
  405eea:	mov    edx,0x2
  405eef:	jmp    405f29 <strcmp@plt+0x27a1>
  405ef1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405efb:	nop    DWORD PTR [rax+rax*1+0x0]
  405f00:	mov    edi,0x3
  405f05:	xor    eax,eax
  405f07:	lea    rsi,[rip+0x3ce44]        # 442d52 <strcmp@plt+0x3f5ca>
  405f0e:	call   42e800 <strcmp@plt+0x2b078>
  405f13:	jmp    405f5f <strcmp@plt+0x27d7>
  405f15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f1f:	nop
  405f20:	add    rsi,0x8
  405f24:	mov    edx,0xa
  405f29:	mov    rdi,rbx
  405f2c:	call   423ef0 <strcmp@plt+0x20768>
  405f31:	cmp    DWORD PTR [r15],0x0
  405f35:	jle    405f54 <strcmp@plt+0x27cc>
  405f37:	mov    rdi,rbx
  405f3a:	call   423130 <strcmp@plt+0x1f9a8>
  405f3f:	mov    rcx,rax
  405f42:	mov    edi,0x5
  405f47:	xor    eax,eax
  405f49:	mov    rsi,r12
  405f4c:	mov    rdx,r14
  405f4f:	call   42e800 <strcmp@plt+0x2b078>
  405f54:	mov    rdi,rbx
  405f57:	mov    rsi,r13
  405f5a:	call   42bcf0 <strcmp@plt+0x28568>
  405f5f:	mov    rbp,QWORD PTR [rbp+0x28]
  405f63:	test   rbp,rbp
  405f66:	jne    405ec0 <strcmp@plt+0x2738>
  405f6c:	mov    rdi,QWORD PTR [rsp]
  405f70:	jmp    405f74 <strcmp@plt+0x27ec>
  405f72:	xor    edi,edi
  405f74:	call   403500 <freeaddrinfo@plt>
  405f79:	mov    rax,r13
  405f7c:	add    rsp,0x38
  405f80:	pop    rbx
  405f81:	pop    r12
  405f83:	pop    r13
  405f85:	pop    r14
  405f87:	pop    r15
  405f89:	pop    rbp
  405f8a:	ret    
  405f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  405f90:	push   rbp
  405f91:	push   r15
  405f93:	push   r14
  405f95:	push   r13
  405f97:	push   r12
  405f99:	push   rbx
  405f9a:	sub    rsp,0x68
  405f9e:	mov    DWORD PTR [rsp+0x1c],ecx
  405fa2:	mov    rbx,rdx
  405fa5:	mov    rbp,rsi
  405fa8:	mov    r15,rdi
  405fab:	mov    eax,DWORD PTR [rdi]
  405fad:	cmp    eax,0x3
  405fb0:	je     405fb6 <strcmp@plt+0x282e>
  405fb2:	test   eax,eax
  405fb4:	jne    405fc7 <strcmp@plt+0x283f>
  405fb6:	lea    rax,[rip+0x6a5db]        # 470598 <strcmp@plt+0x6ce10>
  405fbd:	mov    rdi,QWORD PTR [rax]
  405fc0:	call   40e9a0 <strcmp@plt+0xb218>
  405fc5:	jmp    405fc9 <strcmp@plt+0x2841>
  405fc7:	xor    eax,eax
  405fc9:	mov    QWORD PTR [rsp+0x20],rax
  405fce:	mov    rdi,QWORD PTR [rbx]
  405fd1:	mov    QWORD PTR [rsp+0x50],rbp
  405fd6:	mov    rsi,rbp
  405fd9:	call   4059b0 <strcmp@plt+0x2228>
  405fde:	test   rax,rax
  405fe1:	je     406a25 <strcmp@plt+0x329d>
  405fe7:	mov    rbp,rax
  405fea:	cmp    DWORD PTR [rax+0x18],0x1
  405fee:	jne    406a25 <strcmp@plt+0x329d>
  405ff4:	mov    rax,QWORD PTR [rbp+0x8]
  405ff8:	mov    r14,QWORD PTR [rax+0x10]
  405ffc:	mov    rdi,r14
  405fff:	call   4343f0 <strcmp@plt+0x30c68>
  406004:	mov    r8d,DWORD PTR [rbx+0xc]
  406008:	cmp    r8d,0x1000000
  40600f:	mov    QWORD PTR [rsp+0x10],rbx
  406014:	jb     40603a <strcmp@plt+0x28b2>
  406016:	lea    rsi,[rip+0x3cd9a]        # 442db7 <strcmp@plt+0x3f62f>
  40601d:	mov    edi,0x2
  406022:	mov    ecx,0xffffff
  406027:	xor    eax,eax
  406029:	mov    edx,r8d
  40602c:	call   42e800 <strcmp@plt+0x2b078>
  406031:	mov    DWORD PTR [rbx+0xc],0x0
  406038:	jmp    406051 <strcmp@plt+0x28c9>
  40603a:	test   r8d,r8d
  40603d:	je     406051 <strcmp@plt+0x28c9>
  40603f:	mov    edx,0x20
  406044:	mov    edi,r8d
  406047:	mov    rsi,r14
  40604a:	call   427b10 <strcmp@plt+0x24388>
  40604f:	jmp    406059 <strcmp@plt+0x28d1>
  406051:	mov    rdi,r14
  406054:	call   423740 <strcmp@plt+0x1ffb8>
  406059:	mov    rbx,rax
  40605c:	mov    rax,QWORD PTR [rsp+0x10]
  406061:	cmp    DWORD PTR [rax+0x8],0x0
  406065:	jg     406086 <strcmp@plt+0x28fe>
  406067:	mov    rax,QWORD PTR [rsp+0x10]
  40606c:	mov    DWORD PTR [rax+0x8],0x1
  406073:	lea    rsi,[rip+0x3cd82]        # 442dfc <strcmp@plt+0x3f674>
  40607a:	mov    edi,0x3
  40607f:	xor    eax,eax
  406081:	call   42e800 <strcmp@plt+0x2b078>
  406086:	mov    rdi,rbx
  406089:	call   428e20 <strcmp@plt+0x25698>
  40608e:	test   rax,rax
  406091:	je     406a25 <strcmp@plt+0x329d>
  406097:	mov    r13,rax
  40609a:	mov    QWORD PTR [rsp+0x58],r15
  40609f:	mov    rax,QWORD PTR [rsp+0x10]
  4060a4:	mov    eax,DWORD PTR [rax+0x8]
  4060a7:	mov    DWORD PTR [r13+0x30],eax
  4060ab:	cmp    BYTE PTR [rsp+0x1c],0x0
  4060b0:	je     4060b7 <strcmp@plt+0x292f>
  4060b2:	mov    BYTE PTR [r13+0x35],0x1
  4060b7:	mov    rdi,rbx
  4060ba:	call   422fa0 <strcmp@plt+0x1f818>
  4060bf:	mov    rdi,rbp
  4060c2:	call   42c250 <strcmp@plt+0x28ac8>
  4060c7:	mov    rbx,QWORD PTR [rsp+0x10]
  4060cc:	mov    rax,QWORD PTR [rbx+0x10]
  4060d0:	mov    r12,QWORD PTR [rax+0x8]
  4060d4:	cmp    r12,rax
  4060d7:	mov    QWORD PTR [rsp+0x38],r13
  4060dc:	mov    rbp,QWORD PTR [rsp+0x50]
  4060e1:	je     406704 <strcmp@plt+0x2f7c>
  4060e7:	cmp    BYTE PTR [rsp+0x1c],0x0
  4060ec:	sete   al
  4060ef:	cmp    QWORD PTR [rsp+0x20],0x0
  4060f5:	sete   cl
  4060f8:	or     cl,al
  4060fa:	mov    BYTE PTR [rsp+0xf],cl
  4060fe:	lea    r14,[rip+0x6a3fb]        # 470500 <strcmp@plt+0x6cd78>
  406105:	jmp    4066a0 <strcmp@plt+0x2f18>
  40610a:	nop    WORD PTR [rax+rax*1+0x0]
  406110:	mov    rdi,QWORD PTR [r15]
  406113:	mov    rsi,rbp
  406116:	call   4059b0 <strcmp@plt+0x2228>
  40611b:	test   rax,rax
  40611e:	je     4066f9 <strcmp@plt+0x2f71>
  406124:	cmp    DWORD PTR [rax+0x18],0x0
  406128:	je     4066f9 <strcmp@plt+0x2f71>
  40612e:	mov    QWORD PTR [rsp+0x60],rax
  406133:	call   42bbd0 <strcmp@plt+0x28448>
  406138:	mov    QWORD PTR [rsp+0x48],rax
  40613d:	test   rax,rax
  406140:	mov    rdi,QWORD PTR [rsp+0x60]
  406145:	je     4066f9 <strcmp@plt+0x2f71>
  40614b:	mov    rbx,QWORD PTR [rdi+0x8]
  40614f:	cmp    rbx,rdi
  406152:	jne    4061a0 <strcmp@plt+0x2a18>
  406154:	jmp    40653f <strcmp@plt+0x2db7>
  406159:	mov    edi,0x2
  40615e:	xor    eax,eax
  406160:	lea    rsi,[rip+0x3d439]        # 4435a0 <strcmp@plt+0x3fe18>
  406167:	mov    rdx,r13
  40616a:	call   42e800 <strcmp@plt+0x2b078>
  40616f:	lea    r14,[rip+0x6a38a]        # 470500 <strcmp@plt+0x6cd78>
  406176:	jmp    406528 <strcmp@plt+0x2da0>
  40617b:	mov    rsi,QWORD PTR [r14+0x18]
  40617f:	mov    rdi,rbp
  406182:	call   42bcf0 <strcmp@plt+0x28568>
  406187:	lea    r14,[rip+0x6a372]        # 470500 <strcmp@plt+0x6cd78>
  40618e:	jmp    406314 <strcmp@plt+0x2b8c>
  406193:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40619d:	nop    DWORD PTR [rax]
  4061a0:	mov    rbp,QWORD PTR [rbx+0x10]
  4061a4:	cmp    DWORD PTR [r14],0x0
  4061a8:	je     4061c6 <strcmp@plt+0x2a3e>
  4061aa:	mov    rdi,rbp
  4061ad:	call   4232e0 <strcmp@plt+0x1fb58>
  4061b2:	mov    rdi,rax
  4061b5:	call   423200 <strcmp@plt+0x1fa78>
  4061ba:	movzx  eax,ax
  4061bd:	cmp    DWORD PTR [r14],eax
  4061c0:	jne    4062b0 <strcmp@plt+0x2b28>
  4061c6:	mov    edx,DWORD PTR [rbp+0x18]
  4061c9:	cmp    edx,0x2
  4061cc:	jne    4061f0 <strcmp@plt+0x2a68>
  4061ce:	mov    rdi,rbp
  4061d1:	call   423130 <strcmp@plt+0x1f9a8>
  4061d6:	mov    rcx,rax
  4061d9:	mov    edi,0x2
  4061de:	xor    eax,eax
  4061e0:	lea    rsi,[rip+0x3d233]        # 44341a <strcmp@plt+0x3fc92>
  4061e7:	jmp    406520 <strcmp@plt+0x2d98>
  4061ec:	nop    DWORD PTR [rax+0x0]
  4061f0:	movzx  ecx,BYTE PTR [r15+0x18]
  4061f5:	cmp    BYTE PTR [rsp+0x1c],0x0
  4061fa:	je     4062de <strcmp@plt+0x2b56>
  406200:	test   cl,cl
  406202:	je     4062de <strcmp@plt+0x2b56>
  406208:	mov    rax,rbp
  40620b:	cmp    edx,0x3
  40620e:	jne    406221 <strcmp@plt+0x2a99>
  406210:	mov    rdi,rbp
  406213:	call   4232e0 <strcmp@plt+0x1fb58>
  406218:	test   rax,rax
  40621b:	je     406668 <strcmp@plt+0x2ee0>
  406221:	mov    QWORD PTR [rsp+0x30],rax
  406226:	mov    rdi,rax
  406229:	call   423200 <strcmp@plt+0x1fa78>
  40622e:	movzx  eax,ax
  406231:	mov    DWORD PTR [rsp+0x28],eax
  406235:	cmp    eax,0xa
  406238:	jne    406380 <strcmp@plt+0x2bf8>
  40623e:	lea    rax,[rip+0x698db]        # 46fb20 <strcmp@plt+0x6c398>
  406245:	mov    eax,DWORD PTR [rax]
  406247:	test   eax,eax
  406249:	je     40634f <strcmp@plt+0x2bc7>
  40624f:	cmp    eax,0x1
  406252:	jne    406380 <strcmp@plt+0x2bf8>
  406258:	mov    rdi,QWORD PTR [rsp+0x30]
  40625d:	call   423d60 <strcmp@plt+0x205d8>
  406262:	mov    eax,DWORD PTR [rax]
  406264:	mov    ecx,eax
  406266:	and    ecx,0xc0ff
  40626c:	cmp    ecx,0xc0fe
  406272:	je     406380 <strcmp@plt+0x2bf8>
  406278:	and    eax,0xfe
  40627d:	cmp    eax,0xfc
  406282:	je     406380 <strcmp@plt+0x2bf8>
  406288:	mov    rdi,QWORD PTR [rsp+0x30]
  40628d:	call   423130 <strcmp@plt+0x1f9a8>
  406292:	mov    rcx,rax
  406295:	mov    edi,0x2
  40629a:	xor    eax,eax
  40629c:	lea    rsi,[rip+0x3d256]        # 4434f9 <strcmp@plt+0x3fd71>
  4062a3:	jmp    406520 <strcmp@plt+0x2d98>
  4062a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4062b0:	lea    rax,[rip+0x5eaf9]        # 464db0 <strcmp@plt+0x61628>
  4062b7:	cmp    DWORD PTR [rax],0x0
  4062ba:	jle    406528 <strcmp@plt+0x2da0>
  4062c0:	mov    rdi,rbp
  4062c3:	call   423130 <strcmp@plt+0x1f9a8>
  4062c8:	mov    rcx,rax
  4062cb:	mov    edi,0x5
  4062d0:	xor    eax,eax
  4062d2:	lea    rsi,[rip+0x3d0db]        # 4433b4 <strcmp@plt+0x3fc2c>
  4062d9:	jmp    406520 <strcmp@plt+0x2d98>
  4062de:	movzx  r8d,BYTE PTR [r15+0x8]
  4062e3:	movzx  r9d,BYTE PTR [r15+0xc]
  4062e8:	movzx  edx,cl
  4062eb:	mov    esi,0x1
  4062f0:	mov    ecx,0x1
  4062f5:	mov    rdi,rbp
  4062f8:	push   0x0
  4062fa:	push   0xff
  4062ff:	call   428660 <strcmp@plt+0x24ed8>
  406304:	add    rsp,0x10
  406308:	mov    rbp,rax
  40630b:	test   rax,rax
  40630e:	je     406528 <strcmp@plt+0x2da0>
  406314:	mov    rdi,rbp
  406317:	mov    rsi,QWORD PTR [rsp+0x48]
  40631c:	call   42bcf0 <strcmp@plt+0x28568>
  406321:	lea    rax,[rip+0x5ea88]        # 464db0 <strcmp@plt+0x61628>
  406328:	cmp    DWORD PTR [rax],0x2
  40632b:	jl     406528 <strcmp@plt+0x2da0>
  406331:	mov    rdi,rbp
  406334:	call   4286e0 <strcmp@plt+0x24f58>
  406339:	mov    rcx,rax
  40633c:	mov    edi,0x6
  406341:	xor    eax,eax
  406343:	lea    rsi,[rip+0x3d33a]        # 443684 <strcmp@plt+0x3fefc>
  40634a:	jmp    406520 <strcmp@plt+0x2d98>
  40634f:	mov    r13,QWORD PTR [rsp+0x30]
  406354:	mov    rdi,r13
  406357:	call   423d60 <strcmp@plt+0x205d8>
  40635c:	mov    eax,DWORD PTR [rax]
  40635e:	mov    ecx,0xe0
  406363:	and    eax,ecx
  406365:	cmp    eax,0x20
  406368:	jne    4064f8 <strcmp@plt+0x2d70>
  40636e:	lea    rax,[rip+0x697ab]        # 46fb20 <strcmp@plt+0x6c398>
  406375:	mov    eax,DWORD PTR [rax]
  406377:	cmp    eax,0x1
  40637a:	je     406258 <strcmp@plt+0x2ad0>
  406380:	mov    r13,QWORD PTR [rsp+0x30]
  406385:	mov    rdi,r13
  406388:	call   43b2b0 <strcmp@plt+0x37b28>
  40638d:	test   rax,rax
  406390:	je     406405 <strcmp@plt+0x2c7d>
  406392:	mov    rdi,rax
  406395:	mov    r13,rax
  406398:	call   43ae20 <strcmp@plt+0x37698>
  40639d:	mov    r14,rax
  4063a0:	test   rax,rax
  4063a3:	jne    4063b9 <strcmp@plt+0x2c31>
  4063a5:	mov    rdi,r13
  4063a8:	call   43ad30 <strcmp@plt+0x375a8>
  4063ad:	mov    r14,rax
  4063b0:	test   rax,rax
  4063b3:	je     406159 <strcmp@plt+0x29d1>
  4063b9:	mov    QWORD PTR [rsp+0x40],r13
  4063be:	mov    rdi,r14
  4063c1:	mov    r13d,DWORD PTR [rsp+0x28]
  4063c6:	mov    esi,r13d
  4063c9:	call   43a8b0 <strcmp@plt+0x37128>
  4063ce:	mov    rdi,r14
  4063d1:	mov    esi,r13d
  4063d4:	call   43abd0 <strcmp@plt+0x37448>
  4063d9:	mov    r13,QWORD PTR [rsp+0x30]
  4063de:	mov    rdi,r13
  4063e1:	mov    rsi,rax
  4063e4:	call   423970 <strcmp@plt+0x201e8>
  4063e9:	test   eax,eax
  4063eb:	je     406423 <strcmp@plt+0x2c9b>
  4063ed:	mov    edi,0x2
  4063f2:	xor    eax,eax
  4063f4:	lea    rsi,[rip+0x3d1da]        # 4435d5 <strcmp@plt+0x3fe4d>
  4063fb:	mov    rdx,QWORD PTR [rsp+0x40]
  406400:	jmp    40616a <strcmp@plt+0x29e2>
  406405:	mov    rdi,r13
  406408:	call   423130 <strcmp@plt+0x1f9a8>
  40640d:	mov    rcx,rax
  406410:	mov    edi,0x2
  406415:	xor    eax,eax
  406417:	lea    rsi,[rip+0x3d14d]        # 44356b <strcmp@plt+0x3fde3>
  40641e:	jmp    406520 <strcmp@plt+0x2d98>
  406423:	movzx  esi,BYTE PTR [r14+0xc]
  406428:	movzx  r8d,BYTE PTR [r15+0x8]
  40642d:	movzx  r9d,BYTE PTR [r15+0xc]
  406432:	movzx  r10d,BYTE PTR [r15+0x10]
  406437:	movzx  eax,BYTE PTR [r15+0x14]
  40643c:	mov    edx,0x1
  406441:	mov    ecx,0x1
  406446:	mov    rdi,rbp
  406449:	push   rax
  40644a:	push   r10
  40644c:	call   428660 <strcmp@plt+0x24ed8>
  406451:	add    rsp,0x10
  406455:	test   rax,rax
  406458:	lea    r14,[rip+0x6a0a1]        # 470500 <strcmp@plt+0x6cd78>
  40645f:	je     406528 <strcmp@plt+0x2da0>
  406465:	mov    rbp,rax
  406468:	mov    rax,QWORD PTR [rsp+0x58]
  40646d:	mov    eax,DWORD PTR [rax]
  40646f:	cmp    eax,0x3
  406472:	je     40647c <strcmp@plt+0x2cf4>
  406474:	test   eax,eax
  406476:	jne    406314 <strcmp@plt+0x2b8c>
  40647c:	lea    rax,[rip+0x6a115]        # 470598 <strcmp@plt+0x6ce10>
  406483:	mov    rdi,QWORD PTR [rax]
  406486:	call   40e9a0 <strcmp@plt+0xb218>
  40648b:	mov    QWORD PTR [rsp+0x28],rax
  406490:	mov    rdi,QWORD PTR [rax+0x50]
  406494:	mov    rsi,QWORD PTR [rsp+0x40]
  406499:	call   436750 <strcmp@plt+0x32fc8>
  40649e:	mov    r14,rax
  4064a1:	test   rax,rax
  4064a4:	jne    4064db <strcmp@plt+0x2d53>
  4064a6:	mov    rdi,QWORD PTR [rsp+0x40]
  4064ab:	call   42ccb0 <strcmp@plt+0x29528>
  4064b0:	mov    r14,rax
  4064b3:	mov    rax,QWORD PTR [rsp+0x28]
  4064b8:	mov    rax,QWORD PTR [rax+0x50]
  4064bc:	mov    QWORD PTR [rsp+0x28],rax
  4064c1:	mov    rdi,QWORD PTR [rsp+0x40]
  4064c6:	call   403700 <strdup@plt>
  4064cb:	mov    rdi,QWORD PTR [rsp+0x28]
  4064d0:	mov    rsi,rax
  4064d3:	mov    rdx,r14
  4064d6:	call   4362a0 <strcmp@plt+0x32b18>
  4064db:	mov    rdi,r13
  4064de:	call   423200 <strcmp@plt+0x1fa78>
  4064e3:	movzx  eax,ax
  4064e6:	cmp    eax,0x2
  4064e9:	jne    40617b <strcmp@plt+0x29f3>
  4064ef:	mov    rsi,QWORD PTR [r14+0x10]
  4064f3:	jmp    40617f <strcmp@plt+0x29f7>
  4064f8:	mov    rdi,r13
  4064fb:	call   423130 <strcmp@plt+0x1f9a8>
  406500:	mov    rcx,rax
  406503:	mov    edi,0x2
  406508:	xor    eax,eax
  40650a:	lea    rsi,[rip+0x3cf7c]        # 44348d <strcmp@plt+0x3fd05>
  406511:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40651b:	nop    DWORD PTR [rax+rax*1+0x0]
  406520:	mov    rdx,rcx
  406523:	call   42e800 <strcmp@plt+0x2b078>
  406528:	mov    rbx,QWORD PTR [rbx+0x8]
  40652c:	mov    rdi,QWORD PTR [rsp+0x60]
  406531:	cmp    rbx,rdi
  406534:	mov    r13,QWORD PTR [rsp+0x38]
  406539:	jne    4061a0 <strcmp@plt+0x2a18>
  40653f:	call   42c250 <strcmp@plt+0x28ac8>
  406544:	mov    r15,QWORD PTR [rsp+0x20]
  406549:	mov    rax,QWORD PTR [rsp+0x48]
  40654e:	mov    rbx,QWORD PTR [rax+0x8]
  406552:	cmp    rbx,rax
  406555:	je     40664f <strcmp@plt+0x2ec7>
  40655b:	nop    DWORD PTR [rax+rax*1+0x0]
  406560:	mov    rbp,QWORD PTR [rbx+0x10]
  406564:	test   rbp,rbp
  406567:	je     406640 <strcmp@plt+0x2eb8>
  40656d:	mov    rsi,QWORD PTR [rbp+0x0]
  406571:	mov    rdi,r13
  406574:	call   4293a0 <strcmp@plt+0x25c18>
  406579:	test   rax,rax
  40657c:	je     4065d0 <strcmp@plt+0x2e48>
  40657e:	mov    rdi,QWORD PTR [rbp+0x0]
  406582:	call   423130 <strcmp@plt+0x1f9a8>
  406587:	mov    r14,rax
  40658a:	mov    rdi,r13
  40658d:	call   423130 <strcmp@plt+0x1f9a8>
  406592:	mov    rcx,rax
  406595:	mov    edi,0x2
  40659a:	xor    eax,eax
  40659c:	lea    rsi,[rip+0x3c892]        # 442e35 <strcmp@plt+0x3f6ad>
  4065a3:	mov    rdx,r14
  4065a6:	call   42e800 <strcmp@plt+0x2b078>
  4065ab:	cmp    BYTE PTR [rsp+0xf],0x0
  4065b0:	jne    4065be <strcmp@plt+0x2e36>
  4065b2:	mov    rdi,QWORD PTR [r15+0x50]
  4065b6:	mov    rsi,rbp
  4065b9:	call   42cff0 <strcmp@plt+0x29868>
  4065be:	mov    rdi,rbp
  4065c1:	call   428960 <strcmp@plt+0x251d8>
  4065c6:	lea    r14,[rip+0x69f33]        # 470500 <strcmp@plt+0x6cd78>
  4065cd:	jmp    406640 <strcmp@plt+0x2eb8>
  4065cf:	nop
  4065d0:	mov    rdi,r13
  4065d3:	mov    rsi,rbp
  4065d6:	call   4291e0 <strcmp@plt+0x25a58>
  4065db:	cmp    eax,0x1
  4065de:	je     406640 <strcmp@plt+0x2eb8>
  4065e0:	lea    rax,[rip+0x5e7c9]        # 464db0 <strcmp@plt+0x61628>
  4065e7:	cmp    DWORD PTR [rax],0x0
  4065ea:	jle    406620 <strcmp@plt+0x2e98>
  4065ec:	mov    rdi,QWORD PTR [rbp+0x0]
  4065f0:	call   423130 <strcmp@plt+0x1f9a8>
  4065f5:	mov    r14,rax
  4065f8:	mov    rdi,r13
  4065fb:	call   423130 <strcmp@plt+0x1f9a8>
  406600:	mov    rcx,rax
  406603:	mov    edi,0x5
  406608:	xor    eax,eax
  40660a:	lea    rsi,[rip+0x3c879]        # 442e8a <strcmp@plt+0x3f702>
  406611:	mov    rdx,r14
  406614:	lea    r14,[rip+0x69ee5]        # 470500 <strcmp@plt+0x6cd78>
  40661b:	call   42e800 <strcmp@plt+0x2b078>
  406620:	cmp    BYTE PTR [rsp+0xf],0x0
  406625:	jne    406633 <strcmp@plt+0x2eab>
  406627:	mov    rdi,QWORD PTR [r15+0x50]
  40662b:	mov    rsi,rbp
  40662e:	call   42cff0 <strcmp@plt+0x29868>
  406633:	mov    rdi,rbp
  406636:	call   428960 <strcmp@plt+0x251d8>
  40663b:	nop    DWORD PTR [rax+rax*1+0x0]
  406640:	mov    rbx,QWORD PTR [rbx+0x8]
  406644:	cmp    rbx,QWORD PTR [rsp+0x48]
  406649:	jne    406560 <strcmp@plt+0x2dd8>
  40664f:	mov    rdi,QWORD PTR [rsp+0x48]
  406654:	call   42c250 <strcmp@plt+0x28ac8>
  406659:	mov    rbx,QWORD PTR [rsp+0x10]
  40665e:	mov    rbp,QWORD PTR [rsp+0x50]
  406663:	jmp    4066f9 <strcmp@plt+0x2f71>
  406668:	mov    rdi,rbp
  40666b:	call   423130 <strcmp@plt+0x1f9a8>
  406670:	mov    rcx,rax
  406673:	mov    edi,0x2
  406678:	xor    eax,eax
  40667a:	lea    rsi,[rip+0x3cdd3]        # 443454 <strcmp@plt+0x3fccc>
  406681:	mov    rdx,rcx
  406684:	call   42e800 <strcmp@plt+0x2b078>
  406689:	mov    rbx,QWORD PTR [rsp+0x10]
  40668e:	mov    r13,QWORD PTR [rsp+0x38]
  406693:	jmp    40665e <strcmp@plt+0x2ed6>
  406695:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40669f:	nop
  4066a0:	mov    r15,QWORD PTR [r12+0x10]
  4066a5:	mov    edx,DWORD PTR [r15+0x8]
  4066a9:	lea    eax,[rdx+0x1]
  4066ac:	cmp    eax,0x101
  4066b1:	jb     4066d0 <strcmp@plt+0x2f48>
  4066b3:	mov    edi,0x2
  4066b8:	xor    ecx,ecx
  4066ba:	mov    r8d,0xfe
  4066c0:	xor    eax,eax
  4066c2:	lea    rsi,[rip+0x3c0d6]        # 44279f <strcmp@plt+0x3f017>
  4066c9:	jmp    4066f4 <strcmp@plt+0x2f6c>
  4066cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4066d0:	cmp    DWORD PTR [r15+0xc],0x100
  4066d8:	jb     406110 <strcmp@plt+0x2988>
  4066de:	mov    edi,0x2
  4066e3:	xor    ecx,ecx
  4066e5:	mov    r8d,0xff
  4066eb:	xor    eax,eax
  4066ed:	lea    rsi,[rip+0x3c0e1]        # 4427d5 <strcmp@plt+0x3f04d>
  4066f4:	call   42e800 <strcmp@plt+0x2b078>
  4066f9:	mov    r12,QWORD PTR [r12+0x8]
  4066fe:	cmp    r12,QWORD PTR [rbx+0x10]
  406702:	jne    4066a0 <strcmp@plt+0x2f18>
  406704:	cmp    BYTE PTR [rsp+0x1c],0x0
  406709:	je     406a28 <strcmp@plt+0x32a0>
  40670f:	mov    rax,QWORD PTR [rbx+0x18]
  406713:	mov    r14,QWORD PTR [rax+0x8]
  406717:	cmp    r14,rax
  40671a:	je     406a28 <strcmp@plt+0x32a0>
  406720:	lea    rbp,[rip+0x5e689]        # 464db0 <strcmp@plt+0x61628>
  406727:	nop    WORD PTR [rax+rax*1+0x0]
  406730:	mov    r12,QWORD PTR [r14+0x10]
  406734:	test   r12,r12
  406737:	je     406a10 <strcmp@plt+0x3288>
  40673d:	lea    rax,[rip+0x69dbc]        # 470500 <strcmp@plt+0x6cd78>
  406744:	mov    eax,DWORD PTR [rax]
  406746:	test   eax,eax
  406748:	je     406751 <strcmp@plt+0x2fc9>
  40674a:	cmp    DWORD PTR [r12+0x8],eax
  40674f:	jne    4067ab <strcmp@plt+0x3023>
  406751:	mov    edx,DWORD PTR [r12+0xc]
  406756:	lea    eax,[rdx+0x1]
  406759:	cmp    eax,0x101
  40675e:	jb     406780 <strcmp@plt+0x2ff8>
  406760:	mov    edi,0x2
  406765:	xor    ecx,ecx
  406767:	mov    r8d,0xfe
  40676d:	xor    eax,eax
  40676f:	lea    rsi,[rip+0x3c029]        # 44279f <strcmp@plt+0x3f017>
  406776:	jmp    4067a1 <strcmp@plt+0x3019>
  406778:	nop    DWORD PTR [rax+rax*1+0x0]
  406780:	cmp    DWORD PTR [r12+0x10],0x100
  406789:	jb     4067d1 <strcmp@plt+0x3049>
  40678b:	mov    edi,0x2
  406790:	xor    ecx,ecx
  406792:	mov    r8d,0xff
  406798:	xor    eax,eax
  40679a:	lea    rsi,[rip+0x3c034]        # 4427d5 <strcmp@plt+0x3f04d>
  4067a1:	call   42e800 <strcmp@plt+0x2b078>
  4067a6:	jmp    406a10 <strcmp@plt+0x3288>
  4067ab:	cmp    DWORD PTR [rbp+0x0],0x0
  4067af:	jle    406a10 <strcmp@plt+0x3288>
  4067b5:	mov    rdx,QWORD PTR [r12]
  4067b9:	mov    edi,0x5
  4067be:	xor    eax,eax
  4067c0:	lea    rsi,[rip+0x3cef1]        # 4436b8 <strcmp@plt+0x3ff30>
  4067c7:	call   42e800 <strcmp@plt+0x2b078>
  4067cc:	jmp    406a10 <strcmp@plt+0x3288>
  4067d1:	mov    rdi,QWORD PTR [r12]
  4067d5:	call   43ae20 <strcmp@plt+0x37698>
  4067da:	mov    rbx,rax
  4067dd:	test   rax,rax
  4067e0:	jne    4067f7 <strcmp@plt+0x306f>
  4067e2:	mov    rdi,QWORD PTR [r12]
  4067e6:	call   43ad30 <strcmp@plt+0x375a8>
  4067eb:	mov    rbx,rax
  4067ee:	test   rax,rax
  4067f1:	je     4068cd <strcmp@plt+0x3145>
  4067f7:	mov    esi,DWORD PTR [r12+0x8]
  4067fc:	mov    rdi,rbx
  4067ff:	call   43a8b0 <strcmp@plt+0x37128>
  406804:	xor    eax,eax
  406806:	cmp    DWORD PTR [r12+0x8],0x2
  40680c:	setne  al
  40680f:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  406814:	movzx  esi,BYTE PTR [rbx+0xc]
  406818:	movzx  r8d,BYTE PTR [r12+0xc]
  40681e:	movzx  r9d,BYTE PTR [r12+0x10]
  406824:	movzx  eax,BYTE PTR [r12+0x14]
  40682a:	mov    r13,rbp
  40682d:	movzx  ebp,BYTE PTR [r12+0x18]
  406833:	mov    edx,0x1
  406838:	mov    ecx,0x1
  40683d:	push   rbp
  40683e:	mov    rbp,r13
  406841:	push   rax
  406842:	call   428660 <strcmp@plt+0x24ed8>
  406847:	add    rsp,0x10
  40684b:	mov    r15,rax
  40684e:	cmp    DWORD PTR [r13+0x0],0x2
  406853:	jl     406876 <strcmp@plt+0x30ee>
  406855:	mov    rdi,r15
  406858:	call   4286e0 <strcmp@plt+0x24f58>
  40685d:	mov    rcx,rax
  406860:	mov    edi,0x6
  406865:	xor    eax,eax
  406867:	lea    rsi,[rip+0x3ce16]        # 443684 <strcmp@plt+0x3fefc>
  40686e:	mov    rdx,rcx
  406871:	call   42e800 <strcmp@plt+0x2b078>
  406876:	test   r15,r15
  406879:	mov    rbx,QWORD PTR [rsp+0x10]
  40687e:	je     406a10 <strcmp@plt+0x3288>
  406884:	mov    rax,QWORD PTR [rsp+0x58]
  406889:	mov    eax,DWORD PTR [rax]
  40688b:	cmp    eax,0x3
  40688e:	je     406898 <strcmp@plt+0x3110>
  406890:	test   eax,eax
  406892:	jne    406938 <strcmp@plt+0x31b0>
  406898:	lea    rax,[rip+0x69cf9]        # 470598 <strcmp@plt+0x6ce10>
  40689f:	mov    rdi,QWORD PTR [rax]
  4068a2:	call   40e9a0 <strcmp@plt+0xb218>
  4068a7:	mov    rbp,rax
  4068aa:	mov    rdi,QWORD PTR [rax+0x50]
  4068ae:	mov    rsi,QWORD PTR [r12]
  4068b2:	call   436750 <strcmp@plt+0x32fc8>
  4068b7:	mov    rbx,rax
  4068ba:	test   rax,rax
  4068bd:	je     4068f8 <strcmp@plt+0x3170>
  4068bf:	cmp    DWORD PTR [r12+0x8],0x2
  4068c5:	jne    406927 <strcmp@plt+0x319f>
  4068c7:	mov    rsi,QWORD PTR [rbx+0x10]
  4068cb:	jmp    40692b <strcmp@plt+0x31a3>
  4068cd:	cmp    DWORD PTR [rbp+0x0],0x0
  4068d1:	mov    rbx,QWORD PTR [rsp+0x10]
  4068d6:	jle    406a10 <strcmp@plt+0x3288>
  4068dc:	mov    rdx,QWORD PTR [r12]
  4068e0:	mov    edi,0x5
  4068e5:	xor    eax,eax
  4068e7:	lea    rsi,[rip+0x3ce39]        # 443727 <strcmp@plt+0x3ff9f>
  4068ee:	call   42e800 <strcmp@plt+0x2b078>
  4068f3:	jmp    406a10 <strcmp@plt+0x3288>
  4068f8:	mov    rdi,QWORD PTR [r12]
  4068fc:	call   42ccb0 <strcmp@plt+0x29528>
  406901:	mov    rbx,rax
  406904:	mov    rbp,QWORD PTR [rbp+0x50]
  406908:	mov    rdi,QWORD PTR [r12]
  40690c:	call   403700 <strdup@plt>
  406911:	mov    rdi,rbp
  406914:	mov    rsi,rax
  406917:	mov    rdx,rbx
  40691a:	call   4362a0 <strcmp@plt+0x32b18>
  40691f:	cmp    DWORD PTR [r12+0x8],0x2
  406925:	je     4068c7 <strcmp@plt+0x313f>
  406927:	mov    rsi,QWORD PTR [rbx+0x18]
  40692b:	mov    rdi,r15
  40692e:	call   42bcf0 <strcmp@plt+0x28568>
  406933:	mov    rbx,QWORD PTR [rsp+0x10]
  406938:	mov    rsi,QWORD PTR [r15]
  40693b:	mov    rbp,QWORD PTR [rsp+0x38]
  406940:	mov    rdi,rbp
  406943:	call   4293a0 <strcmp@plt+0x25c18>
  406948:	test   rax,rax
  40694b:	je     4069a1 <strcmp@plt+0x3219>
  40694d:	mov    rdi,QWORD PTR [r15]
  406950:	call   423130 <strcmp@plt+0x1f9a8>
  406955:	mov    rbx,rax
  406958:	mov    rdi,rbp
  40695b:	call   423130 <strcmp@plt+0x1f9a8>
  406960:	mov    rcx,rax
  406963:	mov    edi,0x2
  406968:	xor    eax,eax
  40696a:	lea    rsi,[rip+0x3c4c4]        # 442e35 <strcmp@plt+0x3f6ad>
  406971:	mov    rdx,rbx
  406974:	call   42e800 <strcmp@plt+0x2b078>
  406979:	mov    rax,QWORD PTR [rsp+0x20]
  40697e:	test   rax,rax
  406981:	je     40698f <strcmp@plt+0x3207>
  406983:	mov    rdi,QWORD PTR [rax+0x50]
  406987:	mov    rsi,r15
  40698a:	call   42cff0 <strcmp@plt+0x29868>
  40698f:	mov    rdi,r15
  406992:	call   428960 <strcmp@plt+0x251d8>
  406997:	mov    rbx,QWORD PTR [rsp+0x10]
  40699c:	mov    rbp,r13
  40699f:	jmp    406a10 <strcmp@plt+0x3288>
  4069a1:	mov    rdi,rbp
  4069a4:	mov    rsi,r15
  4069a7:	call   4291e0 <strcmp@plt+0x25a58>
  4069ac:	cmp    eax,0x1
  4069af:	mov    rbp,r13
  4069b2:	je     406a10 <strcmp@plt+0x3288>
  4069b4:	cmp    DWORD PTR [rbp+0x0],0x0
  4069b8:	jle    4069ed <strcmp@plt+0x3265>
  4069ba:	mov    rdi,QWORD PTR [r15]
  4069bd:	call   423130 <strcmp@plt+0x1f9a8>
  4069c2:	mov    rbx,rax
  4069c5:	mov    rdi,QWORD PTR [rsp+0x38]
  4069ca:	call   423130 <strcmp@plt+0x1f9a8>
  4069cf:	mov    rcx,rax
  4069d2:	mov    edi,0x5
  4069d7:	xor    eax,eax
  4069d9:	lea    rsi,[rip+0x3c4aa]        # 442e8a <strcmp@plt+0x3f702>
  4069e0:	mov    rdx,rbx
  4069e3:	mov    rbx,QWORD PTR [rsp+0x10]
  4069e8:	call   42e800 <strcmp@plt+0x2b078>
  4069ed:	mov    rax,QWORD PTR [rsp+0x20]
  4069f2:	test   rax,rax
  4069f5:	je     406a03 <strcmp@plt+0x327b>
  4069f7:	mov    rdi,QWORD PTR [rax+0x50]
  4069fb:	mov    rsi,r15
  4069fe:	call   42cff0 <strcmp@plt+0x29868>
  406a03:	mov    rdi,r15
  406a06:	call   428960 <strcmp@plt+0x251d8>
  406a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  406a10:	mov    r14,QWORD PTR [r14+0x8]
  406a14:	cmp    r14,QWORD PTR [rbx+0x18]
  406a18:	jne    406730 <strcmp@plt+0x2fa8>
  406a1e:	mov    r13,QWORD PTR [rsp+0x38]
  406a23:	jmp    406a28 <strcmp@plt+0x32a0>
  406a25:	xor    r13d,r13d
  406a28:	mov    rax,r13
  406a2b:	add    rsp,0x68
  406a2f:	pop    rbx
  406a30:	pop    r12
  406a32:	pop    r13
  406a34:	pop    r14
  406a36:	pop    r15
  406a38:	pop    rbp
  406a39:	ret    
  406a3a:	nop    WORD PTR [rax+rax*1+0x0]
  406a40:	push   r15
  406a42:	push   r14
  406a44:	push   rbx
  406a45:	mov    r14,rsi
  406a48:	mov    r15,rdi
  406a4b:	call   431b40 <strcmp@plt+0x2e3b8>
  406a50:	test   r15,r15
  406a53:	je     406a7d <strcmp@plt+0x32f5>
  406a55:	mov    rbx,rax
  406a58:	mov    rdi,QWORD PTR [r14+0x70]
  406a5c:	mov    rsi,rax
  406a5f:	call   407f30 <strcmp@plt+0x47a8>
  406a64:	test   rax,rax
  406a67:	je     406a97 <strcmp@plt+0x330f>
  406a69:	mov    rdi,rbx
  406a6c:	call   423130 <strcmp@plt+0x1f9a8>
  406a71:	mov    rcx,rax
  406a74:	lea    rsi,[rip+0x3c4d6]        # 442f51 <strcmp@plt+0x3f7c9>
  406a7b:	jmp    406afa <strcmp@plt+0x3372>
  406a7d:	lea    rsi,[rip+0x3c468]        # 442eec <strcmp@plt+0x3f764>
  406a84:	xor    ebx,ebx
  406a86:	mov    edi,0x2
  406a8b:	xor    eax,eax
  406a8d:	call   42e800 <strcmp@plt+0x2b078>
  406a92:	jmp    406b17 <strcmp@plt+0x338f>
  406a97:	mov    rdi,QWORD PTR [r14+0x70]
  406a9b:	mov    rsi,r15
  406a9e:	call   407d80 <strcmp@plt+0x45f8>
  406aa3:	cmp    eax,0x1
  406aa6:	jne    406ae8 <strcmp@plt+0x3360>
  406aa8:	lea    rax,[rip+0x5e301]        # 464db0 <strcmp@plt+0x61628>
  406aaf:	cmp    DWORD PTR [rax],0x0
  406ab2:	jle    406ad5 <strcmp@plt+0x334d>
  406ab4:	mov    rdi,rbx
  406ab7:	call   423130 <strcmp@plt+0x1f9a8>
  406abc:	mov    rcx,rax
  406abf:	lea    rsi,[rip+0x3c43f]        # 442f05 <strcmp@plt+0x3f77d>
  406ac6:	mov    edi,0x5
  406acb:	xor    eax,eax
  406acd:	mov    rdx,rcx
  406ad0:	call   42e800 <strcmp@plt+0x2b078>
  406ad5:	mov    rdi,QWORD PTR [r14+0x50]
  406ad9:	mov    rsi,r15
  406adc:	call   42cd60 <strcmp@plt+0x295d8>
  406ae1:	mov    ebx,0x1
  406ae6:	jmp    406b17 <strcmp@plt+0x338f>
  406ae8:	mov    rdi,rbx
  406aeb:	call   423130 <strcmp@plt+0x1f9a8>
  406af0:	mov    rcx,rax
  406af3:	lea    rsi,[rip+0x3c430]        # 442f2a <strcmp@plt+0x3f7a2>
  406afa:	mov    edi,0x2
  406aff:	xor    eax,eax
  406b01:	mov    rdx,rcx
  406b04:	call   42e800 <strcmp@plt+0x2b078>
  406b09:	mov    rdi,QWORD PTR [r14+0x50]
  406b0d:	mov    rsi,r15
  406b10:	call   42cf40 <strcmp@plt+0x297b8>
  406b15:	xor    ebx,ebx
  406b17:	mov    eax,ebx
  406b19:	pop    rbx
  406b1a:	pop    r14
  406b1c:	pop    r15
  406b1e:	ret    
  406b1f:	nop
  406b20:	push   rbp
  406b21:	push   r15
  406b23:	push   r14
  406b25:	push   r13
  406b27:	push   r12
  406b29:	push   rbx
  406b2a:	push   rax
  406b2b:	test   rsi,rsi
  406b2e:	je     406b6f <strcmp@plt+0x33e7>
  406b30:	mov    rbp,rdx
  406b33:	test   rdx,rdx
  406b36:	je     406b6f <strcmp@plt+0x33e7>
  406b38:	mov    r12,rcx
  406b3b:	test   rcx,rcx
  406b3e:	je     406b6f <strcmp@plt+0x33e7>
  406b40:	mov    rbx,rsi
  406b43:	mov    r14,rdi
  406b46:	mov    rdi,QWORD PTR [rdi+0x30]
  406b4a:	call   436750 <strcmp@plt+0x32fc8>
  406b4f:	test   rax,rax
  406b52:	je     406b97 <strcmp@plt+0x340f>
  406b54:	lea    rsi,[rip+0x3c472]        # 442fcd <strcmp@plt+0x3f845>
  406b5b:	xor    r14d,r14d
  406b5e:	mov    edi,0x2
  406b63:	xor    eax,eax
  406b65:	mov    rdx,rbx
  406b68:	call   42e800 <strcmp@plt+0x2b078>
  406b6d:	jmp    406b85 <strcmp@plt+0x33fd>
  406b6f:	lea    rsi,[rip+0x3c417]        # 442f8d <strcmp@plt+0x3f805>
  406b76:	xor    r14d,r14d
  406b79:	mov    edi,0x2
  406b7e:	xor    eax,eax
  406b80:	call   42e800 <strcmp@plt+0x2b078>
  406b85:	mov    eax,r14d
  406b88:	add    rsp,0x8
  406b8c:	pop    rbx
  406b8d:	pop    r12
  406b8f:	pop    r13
  406b91:	pop    r14
  406b93:	pop    r15
  406b95:	pop    rbp
  406b96:	ret    
  406b97:	mov    rdi,rbp
  406b9a:	call   405180 <strcmp@plt+0x19f8>
  406b9f:	mov    r15,rax
  406ba2:	test   rax,rax
  406ba5:	je     406bd7 <strcmp@plt+0x344f>
  406ba7:	mov    eax,DWORD PTR [r15+0x18]
  406bab:	test   eax,eax
  406bad:	je     406bd7 <strcmp@plt+0x344f>
  406baf:	cmp    eax,0x2
  406bb2:	jl     406be4 <strcmp@plt+0x345c>
  406bb4:	lea    rsi,[rip+0x3c432]        # 442fed <strcmp@plt+0x3f865>
  406bbb:	xor    r14d,r14d
  406bbe:	mov    edi,0x2
  406bc3:	xor    eax,eax
  406bc5:	mov    rdx,rbp
  406bc8:	call   42e800 <strcmp@plt+0x2b078>
  406bcd:	mov    rdi,r15
  406bd0:	call   42c250 <strcmp@plt+0x28ac8>
  406bd5:	jmp    406b85 <strcmp@plt+0x33fd>
  406bd7:	mov    rdi,r15
  406bda:	call   42c250 <strcmp@plt+0x28ac8>
  406bdf:	xor    r14d,r14d
  406be2:	jmp    406b85 <strcmp@plt+0x33fd>
  406be4:	mov    rax,QWORD PTR [r15+0x8]
  406be8:	mov    rbp,QWORD PTR [rax+0x10]
  406bec:	mov    r13,QWORD PTR [r14+0x38]
  406bf0:	mov    rdi,rbp
  406bf3:	call   423130 <strcmp@plt+0x1f9a8>
  406bf8:	mov    rdi,r13
  406bfb:	mov    rsi,rax
  406bfe:	call   436750 <strcmp@plt+0x32fc8>
  406c03:	test   rax,rax
  406c06:	je     406c31 <strcmp@plt+0x34a9>
  406c08:	mov    rdi,rbp
  406c0b:	call   423130 <strcmp@plt+0x1f9a8>
  406c10:	mov    rcx,rax
  406c13:	lea    rsi,[rip+0x3c42d]        # 443047 <strcmp@plt+0x3f8bf>
  406c1a:	xor    r14d,r14d
  406c1d:	mov    edi,0x2
  406c22:	xor    eax,eax
  406c24:	mov    rdx,rcx
  406c27:	call   42e800 <strcmp@plt+0x2b078>
  406c2c:	jmp    406b85 <strcmp@plt+0x33fd>
  406c31:	mov    rdi,rbx
  406c34:	mov    rsi,rbp
  406c37:	mov    rdx,r12
  406c3a:	call   412f00 <strcmp@plt+0xf778>
  406c3f:	mov    rbx,rax
  406c42:	mov    rdi,r15
  406c45:	call   42c250 <strcmp@plt+0x28ac8>
  406c4a:	test   rbx,rbx
  406c4d:	je     406ccc <strcmp@plt+0x3544>
  406c4f:	mov    rbp,QWORD PTR [r14+0x30]
  406c53:	mov    rdi,QWORD PTR [rbx]
  406c56:	call   403700 <strdup@plt>
  406c5b:	mov    rdi,rbp
  406c5e:	mov    rsi,rax
  406c61:	mov    rdx,rbx
  406c64:	call   4362a0 <strcmp@plt+0x32b18>
  406c69:	mov    rbp,QWORD PTR [r14+0x38]
  406c6d:	mov    rdi,QWORD PTR [rbx+0x8]
  406c71:	call   423130 <strcmp@plt+0x1f9a8>
  406c76:	mov    rdi,rax
  406c79:	call   403700 <strdup@plt>
  406c7e:	mov    rdi,rbp
  406c81:	mov    rsi,rax
  406c84:	mov    rdx,rbx
  406c87:	call   4362a0 <strcmp@plt+0x32b18>
  406c8c:	lea    rax,[rip+0x5e11d]        # 464db0 <strcmp@plt+0x61628>
  406c93:	mov    r14d,0x1
  406c99:	cmp    DWORD PTR [rax],0x0
  406c9c:	jle    406b85 <strcmp@plt+0x33fd>
  406ca2:	mov    rbp,QWORD PTR [rbx]
  406ca5:	mov    rdi,QWORD PTR [rbx+0x8]
  406ca9:	call   423130 <strcmp@plt+0x1f9a8>
  406cae:	mov    rcx,rax
  406cb1:	lea    rsi,[rip+0x3c3bc]        # 443074 <strcmp@plt+0x3f8ec>
  406cb8:	mov    edi,0x5
  406cbd:	xor    eax,eax
  406cbf:	mov    rdx,rbp
  406cc2:	call   42e800 <strcmp@plt+0x2b078>
  406cc7:	jmp    406b85 <strcmp@plt+0x33fd>
  406ccc:	xor    r14d,r14d
  406ccf:	jmp    406b85 <strcmp@plt+0x33fd>
  406cd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cde:	xchg   ax,ax
  406ce0:	push   rbp
  406ce1:	push   r15
  406ce3:	push   r14
  406ce5:	push   r13
  406ce7:	push   r12
  406ce9:	push   rbx
  406cea:	push   rax
  406ceb:	test   rsi,rsi
  406cee:	je     406d23 <strcmp@plt+0x359b>
  406cf0:	mov    r15,rcx
  406cf3:	mov    ebp,edx
  406cf5:	mov    r12,rsi
  406cf8:	mov    r13,rdi
  406cfb:	mov    rdi,QWORD PTR [rdi+0x28]
  406cff:	call   436750 <strcmp@plt+0x32fc8>
  406d04:	test   rax,rax
  406d07:	je     406d49 <strcmp@plt+0x35c1>
  406d09:	lea    rsi,[rip+0x3c3af]        # 4430bf <strcmp@plt+0x3f937>
  406d10:	xor    ebx,ebx
  406d12:	mov    edi,0x2
  406d17:	xor    eax,eax
  406d19:	mov    rdx,r12
  406d1c:	call   42e800 <strcmp@plt+0x2b078>
  406d21:	jmp    406d38 <strcmp@plt+0x35b0>
  406d23:	lea    rsi,[rip+0x3c375]        # 44309f <strcmp@plt+0x3f917>
  406d2a:	xor    ebx,ebx
  406d2c:	mov    edi,0x2
  406d31:	xor    eax,eax
  406d33:	call   42e800 <strcmp@plt+0x2b078>
  406d38:	mov    eax,ebx
  406d3a:	add    rsp,0x8
  406d3e:	pop    rbx
  406d3f:	pop    r12
  406d41:	pop    r13
  406d43:	pop    r14
  406d45:	pop    r15
  406d47:	pop    rbp
  406d48:	ret    
  406d49:	cmp    DWORD PTR [r15+0x18],0x0
  406d4e:	je     406dd2 <strcmp@plt+0x364a>
  406d54:	test   ebp,ebp
  406d56:	jle    406dde <strcmp@plt+0x3656>
  406d5c:	mov    rdi,r12
  406d5f:	mov    esi,ebp
  406d61:	call   412fc0 <strcmp@plt+0xf838>
  406d66:	test   rax,rax
  406d69:	je     406e3a <strcmp@plt+0x36b2>
  406d6f:	mov    r14,rax
  406d72:	mov    rbx,QWORD PTR [r15+0x8]
  406d76:	cmp    rbx,r15
  406d79:	jne    406d95 <strcmp@plt+0x360d>
  406d7b:	jmp    406dea <strcmp@plt+0x3662>
  406d7d:	nop    DWORD PTR [rax]
  406d80:	mov    rsi,QWORD PTR [r14+0x10]
  406d84:	mov    rdi,rax
  406d87:	call   42bcf0 <strcmp@plt+0x28568>
  406d8c:	mov    rbx,QWORD PTR [rbx+0x8]
  406d90:	cmp    rbx,r15
  406d93:	je     406dea <strcmp@plt+0x3662>
  406d95:	mov    rbp,QWORD PTR [rbx+0x10]
  406d99:	mov    rdi,QWORD PTR [r13+0x30]
  406d9d:	mov    rsi,rbp
  406da0:	call   436750 <strcmp@plt+0x32fc8>
  406da5:	test   rax,rax
  406da8:	jne    406d80 <strcmp@plt+0x35f8>
  406daa:	lea    rsi,[rip+0x3c38a]        # 44313b <strcmp@plt+0x3f9b3>
  406db1:	xor    ebx,ebx
  406db3:	mov    edi,0x2
  406db8:	xor    eax,eax
  406dba:	mov    rdx,rbp
  406dbd:	mov    rcx,r12
  406dc0:	call   42e800 <strcmp@plt+0x2b078>
  406dc5:	mov    rdi,r14
  406dc8:	call   413030 <strcmp@plt+0xf8a8>
  406dcd:	jmp    406d38 <strcmp@plt+0x35b0>
  406dd2:	lea    rsi,[rip+0x3c305]        # 4430de <strcmp@plt+0x3f956>
  406dd9:	jmp    406d10 <strcmp@plt+0x3588>
  406dde:	lea    rsi,[rip+0x3c327]        # 44310c <strcmp@plt+0x3f984>
  406de5:	jmp    406d10 <strcmp@plt+0x3588>
  406dea:	mov    rbx,QWORD PTR [r13+0x28]
  406dee:	mov    rdi,r12
  406df1:	call   403700 <strdup@plt>
  406df6:	mov    rdi,rbx
  406df9:	mov    rsi,rax
  406dfc:	mov    rdx,r14
  406dff:	call   4362a0 <strcmp@plt+0x32b18>
  406e04:	lea    rax,[rip+0x5dfa5]        # 464db0 <strcmp@plt+0x61628>
  406e0b:	cmp    DWORD PTR [rax],0x0
  406e0e:	jle    406e23 <strcmp@plt+0x369b>
  406e10:	lea    rsi,[rip+0x3c360]        # 443177 <strcmp@plt+0x3f9ef>
  406e17:	mov    edi,0x5
  406e1c:	xor    eax,eax
  406e1e:	call   42e800 <strcmp@plt+0x2b078>
  406e23:	mov    esi,0x5
  406e28:	mov    rdi,r14
  406e2b:	call   411540 <strcmp@plt+0xddb8>
  406e30:	mov    ebx,0x1
  406e35:	jmp    406d38 <strcmp@plt+0x35b0>
  406e3a:	xor    ebx,ebx
  406e3c:	jmp    406d38 <strcmp@plt+0x35b0>
  406e41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  406e50:	push   rbp
  406e51:	push   rbx
  406e52:	push   rax
  406e53:	mov    rbp,rdi
  406e56:	test   rsi,rsi
  406e59:	je     406e8f <strcmp@plt+0x3707>
  406e5b:	mov    rbx,rsi
  406e5e:	mov    rdi,QWORD PTR [rbp+0x28]
  406e62:	call   436750 <strcmp@plt+0x32fc8>
  406e67:	mov    QWORD PTR [rbp+0x40],rax
  406e6b:	mov    ebp,0x1
  406e70:	test   rax,rax
  406e73:	jne    406ebb <strcmp@plt+0x3733>
  406e75:	lea    rsi,[rip+0x3c328]        # 4431a4 <strcmp@plt+0x3fa1c>
  406e7c:	xor    ebp,ebp
  406e7e:	mov    edi,0x2
  406e83:	xor    eax,eax
  406e85:	mov    rdx,rbx
  406e88:	call   42e800 <strcmp@plt+0x2b078>
  406e8d:	jmp    406ebb <strcmp@plt+0x3733>
  406e8f:	mov    QWORD PTR [rbp+0x40],0x0
  406e97:	lea    rax,[rip+0x5df12]        # 464db0 <strcmp@plt+0x61628>
  406e9e:	mov    ebp,0x1
  406ea3:	cmp    DWORD PTR [rax],0x0
  406ea6:	jle    406ebb <strcmp@plt+0x3733>
  406ea8:	lea    rsi,[rip+0x3c2db]        # 44318a <strcmp@plt+0x3fa02>
  406eaf:	mov    edi,0x5
  406eb4:	xor    eax,eax
  406eb6:	call   42e800 <strcmp@plt+0x2b078>
  406ebb:	mov    eax,ebp
  406ebd:	add    rsp,0x8
  406ec1:	pop    rbx
  406ec2:	pop    rbp
  406ec3:	ret    
  406ec4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ece:	xchg   ax,ax
  406ed0:	push   rbp
  406ed1:	push   r15
  406ed3:	push   r14
  406ed5:	push   r12
  406ed7:	push   rbx
  406ed8:	test   rsi,rsi
  406edb:	je     406f2f <strcmp@plt+0x37a7>
  406edd:	mov    r15,rdx
  406ee0:	test   rdx,rdx
  406ee3:	je     406f2f <strcmp@plt+0x37a7>
  406ee5:	mov    rbp,rcx
  406ee8:	mov    rbx,rsi
  406eeb:	mov    r14,rdi
  406eee:	lea    rsi,[rip+0x3c330]        # 443225 <strcmp@plt+0x3fa9d>
  406ef5:	mov    rdi,rcx
  406ef8:	call   403788 <strcmp@plt>
  406efd:	test   eax,eax
  406eff:	je     406f47 <strcmp@plt+0x37bf>
  406f01:	lea    rsi,[rip+0x3c321]        # 443229 <strcmp@plt+0x3faa1>
  406f08:	mov    rdi,rbp
  406f0b:	call   403788 <strcmp@plt>
  406f10:	test   eax,eax
  406f12:	je     406f4c <strcmp@plt+0x37c4>
  406f14:	lea    rsi,[rip+0x3c312]        # 44322d <strcmp@plt+0x3faa5>
  406f1b:	xor    r14d,r14d
  406f1e:	mov    edi,0x2
  406f23:	xor    eax,eax
  406f25:	mov    rdx,rbp
  406f28:	call   42e800 <strcmp@plt+0x2b078>
  406f2d:	jmp    406f9c <strcmp@plt+0x3814>
  406f2f:	lea    rsi,[rip+0x3c2a3]        # 4431d9 <strcmp@plt+0x3fa51>
  406f36:	xor    r14d,r14d
  406f39:	mov    edi,0x2
  406f3e:	xor    eax,eax
  406f40:	call   42e800 <strcmp@plt+0x2b078>
  406f45:	jmp    406f9c <strcmp@plt+0x3814>
  406f47:	xor    r12d,r12d
  406f4a:	jmp    406f52 <strcmp@plt+0x37ca>
  406f4c:	mov    r12d,0x1
  406f52:	mov    rdi,rbx
  406f55:	call   405180 <strcmp@plt+0x19f8>
  406f5a:	mov    rbp,rax
  406f5d:	test   rax,rax
  406f60:	je     406f91 <strcmp@plt+0x3809>
  406f62:	mov    eax,DWORD PTR [rbp+0x18]
  406f65:	test   eax,eax
  406f67:	je     406f91 <strcmp@plt+0x3809>
  406f69:	cmp    eax,0x2
  406f6c:	jl     406fa8 <strcmp@plt+0x3820>
  406f6e:	lea    rsi,[rip+0x3c2db]        # 443250 <strcmp@plt+0x3fac8>
  406f75:	xor    r14d,r14d
  406f78:	mov    edi,0x2
  406f7d:	xor    eax,eax
  406f7f:	mov    rdx,rbx
  406f82:	call   42e800 <strcmp@plt+0x2b078>
  406f87:	mov    rdi,rbp
  406f8a:	call   42c250 <strcmp@plt+0x28ac8>
  406f8f:	jmp    406f9c <strcmp@plt+0x3814>
  406f91:	mov    rdi,rbp
  406f94:	call   42c250 <strcmp@plt+0x28ac8>
  406f99:	xor    r14d,r14d
  406f9c:	mov    eax,r14d
  406f9f:	pop    rbx
  406fa0:	pop    r12
  406fa2:	pop    r14
  406fa4:	pop    r15
  406fa6:	pop    rbp
  406fa7:	ret    
  406fa8:	mov    rax,QWORD PTR [rbp+0x8]
  406fac:	mov    rdi,QWORD PTR [rax+0x10]
  406fb0:	mov    rsi,r15
  406fb3:	mov    edx,r12d
  406fb6:	call   40a3c0 <strcmp@plt+0x6c38>
  406fbb:	mov    rbx,rax
  406fbe:	mov    rdi,rbp
  406fc1:	call   42c250 <strcmp@plt+0x28ac8>
  406fc6:	test   rbx,rbx
  406fc9:	je     406f99 <strcmp@plt+0x3811>
  406fcb:	mov    rbp,QWORD PTR [r14+0x70]
  406fcf:	mov    rdi,QWORD PTR [rbx]
  406fd2:	call   423130 <strcmp@plt+0x1f9a8>
  406fd7:	mov    rdi,rax
  406fda:	call   403700 <strdup@plt>
  406fdf:	mov    rdi,rbp
  406fe2:	mov    rsi,rax
  406fe5:	mov    rdx,rbx
  406fe8:	call   4362a0 <strcmp@plt+0x32b18>
  406fed:	lea    rax,[rip+0x5ddbc]        # 464db0 <strcmp@plt+0x61628>
  406ff4:	mov    r14d,0x1
  406ffa:	cmp    DWORD PTR [rax],0x0
  406ffd:	jle    406f9c <strcmp@plt+0x3814>
  406fff:	mov    rdi,rbx
  407002:	call   40a450 <strcmp@plt+0x6cc8>
  407007:	mov    rcx,rax
  40700a:	lea    rsi,[rip+0x3c29c]        # 4432ad <strcmp@plt+0x3fb25>
  407011:	mov    edi,0x5
  407016:	xor    eax,eax
  407018:	mov    rdx,rcx
  40701b:	jmp    406f28 <strcmp@plt+0x37a0>
  407020:	mov    QWORD PTR [rdi+0x88],rsi
  407027:	ret    
  407028:	nop    DWORD PTR [rax+rax*1+0x0]
  407030:	push   rbp
  407031:	push   r15
  407033:	push   r14
  407035:	push   r12
  407037:	push   rbx
  407038:	sub    rsp,0x130
  40703f:	mov    r12,rdi
  407042:	lea    rax,[rip+0x694af]        # 4704f8 <strcmp@plt+0x6cd70>
  407049:	mov    rdi,QWORD PTR [rax]
  40704c:	call   4031d0 <dirname@plt>
  407051:	mov    rcx,rax
  407054:	lea    rdx,[rip+0x3c27e]        # 4432d9 <strcmp@plt+0x3fb51>
  40705b:	lea    r8,[rip+0x3c27d]        # 4432df <strcmp@plt+0x3fb57>
  407062:	xor    ebp,ebp
  407064:	lea    rdi,[rsp+0x60]
  407069:	mov    esi,0xc8
  40706e:	xor    eax,eax
  407070:	call   403620 <snprintf@plt>
  407075:	cmp    eax,0xc8
  40707a:	jb     407094 <strcmp@plt+0x390c>
  40707c:	lea    rsi,[rip+0x3c263]        # 4432e6 <strcmp@plt+0x3fb5e>
  407083:	mov    edi,0x2
  407088:	xor    eax,eax
  40708a:	call   42e800 <strcmp@plt+0x2b078>
  40708f:	jmp    4072be <strcmp@plt+0x3b36>
  407094:	lea    r14,[r12+0x90]
  40709c:	lea    rsi,[rip+0x432f5]        # 44a398 <strcmp@plt+0x46c10>
  4070a3:	lea    rdi,[rsp+0x60]
  4070a8:	call   403480 <fopen@plt>
  4070ad:	test   rax,rax
  4070b0:	je     407159 <strcmp@plt+0x39d1>
  4070b6:	mov    r15,rax
  4070b9:	lea    rdi,[rsp+0x10]
  4070be:	mov    esi,0x50
  4070c3:	mov    rdx,rax
  4070c6:	call   4031a0 <fgets_unlocked@plt>
  4070cb:	test   rax,rax
  4070ce:	je     407120 <strcmp@plt+0x3998>
  4070d0:	lea    rdi,[rsp+0x10]
  4070d5:	call   4031e0 <strlen@plt>
  4070da:	cmp    rax,0x20
  4070de:	jne    407120 <strcmp@plt+0x3998>
  4070e0:	mov    BYTE PTR [rsp+0xf],0x0
  4070e5:	xor    ebx,ebx
  4070e7:	lea    rbp,[rsp+0xd]
  4070ec:	nop    DWORD PTR [rax+0x0]
  4070f0:	movzx  eax,WORD PTR [rsp+rbx*2+0x10]
  4070f5:	mov    WORD PTR [rsp+0xd],ax
  4070fa:	xor    esi,esi
  4070fc:	mov    edx,0x10
  407101:	mov    rdi,rbp
  407104:	call   403570 <strtol@plt>
  407109:	mov    BYTE PTR [r12+rbx*1+0x90],al
  407111:	add    rbx,0x1
  407115:	cmp    rbx,0x10
  407119:	jne    4070f0 <strcmp@plt+0x3968>
  40711b:	jmp    407259 <strcmp@plt+0x3ad1>
  407120:	mov    rdi,r15
  407123:	call   4033e0 <fclose@plt>
  407128:	lea    rsi,[rip+0x3b1cc]        # 4422fb <strcmp@plt+0x3eb73>
  40712f:	lea    rdi,[rsp+0x60]
  407134:	call   403480 <fopen@plt>
  407139:	test   rax,rax
  40713c:	jne    407173 <strcmp@plt+0x39eb>
  40713e:	call   403040 <__errno_location@plt>
  407143:	mov    edi,DWORD PTR [rax]
  407145:	call   403170 <strerror@plt>
  40714a:	mov    rcx,rax
  40714d:	lea    rsi,[rip+0x3c1d5]        # 443329 <strcmp@plt+0x3fba1>
  407154:	jmp    4072ab <strcmp@plt+0x3b23>
  407159:	lea    rsi,[rip+0x3b19b]        # 4422fb <strcmp@plt+0x3eb73>
  407160:	lea    rdi,[rsp+0x60]
  407165:	call   403480 <fopen@plt>
  40716a:	test   rax,rax
  40716d:	je     407295 <strcmp@plt+0x3b0d>
  407173:	mov    r15,rax
  407176:	call   403240 <random@plt>
  40717b:	mov    BYTE PTR [r12+0x90],al
  407183:	call   403240 <random@plt>
  407188:	mov    BYTE PTR [r12+0x91],al
  407190:	call   403240 <random@plt>
  407195:	mov    BYTE PTR [r12+0x92],al
  40719d:	call   403240 <random@plt>
  4071a2:	mov    BYTE PTR [r12+0x93],al
  4071aa:	call   403240 <random@plt>
  4071af:	mov    BYTE PTR [r12+0x94],al
  4071b7:	call   403240 <random@plt>
  4071bc:	mov    BYTE PTR [r12+0x95],al
  4071c4:	call   403240 <random@plt>
  4071c9:	mov    BYTE PTR [r12+0x96],al
  4071d1:	call   403240 <random@plt>
  4071d6:	mov    BYTE PTR [r12+0x97],al
  4071de:	call   403240 <random@plt>
  4071e3:	mov    BYTE PTR [r12+0x98],al
  4071eb:	call   403240 <random@plt>
  4071f0:	mov    BYTE PTR [r12+0x99],al
  4071f8:	call   403240 <random@plt>
  4071fd:	mov    BYTE PTR [r12+0x9a],al
  407205:	call   403240 <random@plt>
  40720a:	mov    BYTE PTR [r12+0x9b],al
  407212:	call   403240 <random@plt>
  407217:	mov    BYTE PTR [r12+0x9c],al
  40721f:	call   403240 <random@plt>
  407224:	mov    BYTE PTR [r12+0x9d],al
  40722c:	call   403240 <random@plt>
  407231:	mov    BYTE PTR [r12+0x9e],al
  407239:	call   403240 <random@plt>
  40723e:	mov    BYTE PTR [r12+0x9f],al
  407246:	mov    rdi,r14
  407249:	call   437ac0 <strcmp@plt+0x34338>
  40724e:	mov    rdi,rax
  407251:	mov    rsi,r15
  407254:	call   403450 <fputs@plt>
  407259:	mov    rdi,r15
  40725c:	call   4033e0 <fclose@plt>
  407261:	lea    rax,[rip+0x5db48]        # 464db0 <strcmp@plt+0x61628>
  407268:	mov    ebp,0x1
  40726d:	cmp    DWORD PTR [rax],0x2
  407270:	jl     4072be <strcmp@plt+0x3b36>
  407272:	mov    rdi,r14
  407275:	call   437ac0 <strcmp@plt+0x34338>
  40727a:	mov    rcx,rax
  40727d:	lea    rsi,[rip+0x3c0df]        # 443363 <strcmp@plt+0x3fbdb>
  407284:	mov    edi,0x6
  407289:	xor    eax,eax
  40728b:	mov    rdx,rcx
  40728e:	call   42e800 <strcmp@plt+0x2b078>
  407293:	jmp    4072be <strcmp@plt+0x3b36>
  407295:	call   403040 <__errno_location@plt>
  40729a:	mov    edi,DWORD PTR [rax]
  40729c:	call   403170 <strerror@plt>
  4072a1:	mov    rcx,rax
  4072a4:	lea    rsi,[rip+0x3c053]        # 4432fe <strcmp@plt+0x3fb76>
  4072ab:	xor    ebp,ebp
  4072ad:	lea    rdx,[rsp+0x60]
  4072b2:	mov    edi,0x2
  4072b7:	xor    eax,eax
  4072b9:	call   42e800 <strcmp@plt+0x2b078>
  4072be:	mov    eax,ebp
  4072c0:	add    rsp,0x130
  4072c7:	pop    rbx
  4072c8:	pop    r12
  4072ca:	pop    r14
  4072cc:	pop    r15
  4072ce:	pop    rbp
  4072cf:	ret    
  4072d0:	push   r14
  4072d2:	push   rbx
  4072d3:	push   rax
  4072d4:	mov    r14,QWORD PTR [rdi+0x48]
  4072d8:	xor    eax,eax
  4072da:	call   422f90 <strcmp@plt+0x1f808>
  4072df:	mov    rbx,rax
  4072e2:	lea    rdi,[rip+0x3c0ac]        # 443395 <strcmp@plt+0x3fc0d>
  4072e9:	mov    rsi,rax
  4072ec:	call   423c60 <strcmp@plt+0x204d8>
  4072f1:	mov    rdi,rbx
  4072f4:	mov    rsi,r14
  4072f7:	call   42bcf0 <strcmp@plt+0x28568>
  4072fc:	xor    eax,eax
  4072fe:	call   422f90 <strcmp@plt+0x1f808>
  407303:	mov    rbx,rax
  407306:	lea    rdi,[rip+0x3c092]        # 44339f <strcmp@plt+0x3fc17>
  40730d:	mov    rsi,rax
  407310:	call   423c60 <strcmp@plt+0x204d8>
  407315:	mov    rdi,rbx
  407318:	mov    rsi,r14
  40731b:	call   42bcf0 <strcmp@plt+0x28568>
  407320:	xor    eax,eax
  407322:	call   422f90 <strcmp@plt+0x1f808>
  407327:	mov    rbx,rax
  40732a:	lea    rdi,[rip+0x3c07e]        # 4433af <strcmp@plt+0x3fc27>
  407331:	mov    rsi,rax
  407334:	call   423c60 <strcmp@plt+0x204d8>
  407339:	mov    rdi,rbx
  40733c:	mov    rsi,r14
  40733f:	call   42bcf0 <strcmp@plt+0x28568>
  407344:	xor    eax,eax
  407346:	call   422f90 <strcmp@plt+0x1f808>
  40734b:	mov    rbx,rax
  40734e:	lea    rdi,[rip+0x3c056]        # 4433ab <strcmp@plt+0x3fc23>
  407355:	mov    rsi,rax
  407358:	call   423c60 <strcmp@plt+0x204d8>
  40735d:	mov    rdi,rbx
  407360:	mov    rsi,r14
  407363:	add    rsp,0x8
  407367:	pop    rbx
  407368:	pop    r14
  40736a:	jmp    42bcf0 <strcmp@plt+0x28568>
  40736f:	nop
  407370:	push   rbx
  407371:	mov    edi,0x30
  407376:	call   432070 <strcmp@plt+0x2e8e8>
  40737b:	test   rax,rax
  40737e:	je     4073cd <strcmp@plt+0x3c45>
  407380:	mov    rbx,rax
  407383:	lea    rdi,[rip+0x706]        # 407a90 <strcmp@plt+0x4308>
  40738a:	call   42bc00 <strcmp@plt+0x28478>
  40738f:	mov    QWORD PTR [rbx],rax
  407392:	call   42bbd0 <strcmp@plt+0x28448>
  407397:	mov    QWORD PTR [rbx+0x10],rax
  40739b:	call   42bbd0 <strcmp@plt+0x28448>
  4073a0:	mov    QWORD PTR [rbx+0x18],rax
  4073a4:	call   42bbd0 <strcmp@plt+0x28448>
  4073a9:	mov    QWORD PTR [rbx+0x20],rax
  4073ad:	xor    eax,eax
  4073af:	call   4167c0 <strcmp@plt+0x13038>
  4073b4:	mov    QWORD PTR [rbx+0x28],rax
  4073b8:	lea    rsi,[rip+0x3c396]        # 443755 <strcmp@plt+0x3ffcd>
  4073bf:	mov    edi,0x4
  4073c4:	xor    eax,eax
  4073c6:	call   42e800 <strcmp@plt+0x2b078>
  4073cb:	jmp    4073cf <strcmp@plt+0x3c47>
  4073cd:	xor    ebx,ebx
  4073cf:	mov    rax,rbx
  4073d2:	pop    rbx
  4073d3:	ret    
  4073d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073de:	xchg   ax,ax
  4073e0:	test   rdi,rdi
  4073e3:	je     407443 <strcmp@plt+0x3cbb>
  4073e5:	push   rbx
  4073e6:	mov    rbx,rdi
  4073e9:	mov    rdi,QWORD PTR [rdi]
  4073ec:	call   42c250 <strcmp@plt+0x28ac8>
  4073f1:	mov    rdi,QWORD PTR [rbx+0x10]
  4073f5:	call   42c250 <strcmp@plt+0x28ac8>
  4073fa:	mov    rdi,QWORD PTR [rbx+0x18]
  4073fe:	call   42c250 <strcmp@plt+0x28ac8>
  407403:	mov    rdi,QWORD PTR [rbx+0x20]
  407407:	call   42c250 <strcmp@plt+0x28ac8>
  40740c:	mov    rax,QWORD PTR [rbx+0x28]
  407410:	test   rax,rax
  407413:	je     40741b <strcmp@plt+0x3c93>
  407415:	mov    rdi,rbx
  407418:	call   QWORD PTR [rax+0x8]
  40741b:	mov    rdi,rbx
  40741e:	call   403780 <free@plt>
  407423:	lea    rax,[rip+0x5d986]        # 464db0 <strcmp@plt+0x61628>
  40742a:	cmp    DWORD PTR [rax],0x0
  40742d:	pop    rbx
  40742e:	jle    407443 <strcmp@plt+0x3cbb>
  407430:	lea    rsi,[rip+0x3c32f]        # 443766 <strcmp@plt+0x3ffde>
  407437:	mov    edi,0x5
  40743c:	xor    eax,eax
  40743e:	jmp    42e800 <strcmp@plt+0x2b078>
  407443:	ret    
  407444:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40744e:	xchg   ax,ax
  407450:	push   rbp
  407451:	push   rbx
  407452:	push   rax
  407453:	mov    rbx,rdi
  407456:	mov    rcx,QWORD PTR [rdi+0x28]
  40745a:	lea    rax,[rip+0x690b7]        # 470518 <strcmp@plt+0x6cd90>
  407461:	mov    rsi,QWORD PTR [rax]
  407464:	xor    ebp,ebp
  407466:	xor    eax,eax
  407468:	call   QWORD PTR [rcx]
  40746a:	cmp    eax,0x1
  40746d:	jne    407496 <strcmp@plt+0x3d0e>
  40746f:	mov    rdi,rbx
  407472:	call   4074c0 <strcmp@plt+0x3d38>
  407477:	lea    rax,[rip+0x5d932]        # 464db0 <strcmp@plt+0x61628>
  40747e:	mov    ebp,0x1
  407483:	cmp    DWORD PTR [rax],0x0
  407486:	jle    4074a9 <strcmp@plt+0x3d21>
  407488:	lea    rsi,[rip+0x3c314]        # 4437a3 <strcmp@plt+0x4001b>
  40748f:	mov    edi,0x5
  407494:	jmp    4074a2 <strcmp@plt+0x3d1a>
  407496:	lea    rsi,[rip+0x3c2e3]        # 443780 <strcmp@plt+0x3fff8>
  40749d:	mov    edi,0x2
  4074a2:	xor    eax,eax
  4074a4:	call   42e800 <strcmp@plt+0x2b078>
  4074a9:	mov    eax,ebp
  4074ab:	add    rsp,0x8
  4074af:	pop    rbx
  4074b0:	pop    rbp
  4074b1:	ret    
  4074b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074bc:	nop    DWORD PTR [rax+0x0]
  4074c0:	push   r15
  4074c2:	push   r14
  4074c4:	push   r12
  4074c6:	push   rbx
  4074c7:	push   rax
  4074c8:	mov    r15,rdi
  4074cb:	mov    rdi,QWORD PTR [rdi+0x10]
  4074cf:	call   42c1e0 <strcmp@plt+0x28a58>
  4074d4:	mov    rdi,QWORD PTR [r15+0x18]
  4074d8:	call   42c1e0 <strcmp@plt+0x28a58>
  4074dd:	mov    rdi,QWORD PTR [r15+0x20]
  4074e1:	call   42c1e0 <strcmp@plt+0x28a58>
  4074e6:	mov    DWORD PTR [r15+0x8],0x0
  4074ee:	lea    r14,[rip+0x6861b]        # 46fb10 <strcmp@plt+0x6c388>
  4074f5:	mov    rax,QWORD PTR [r14]
  4074f8:	mov    rbx,QWORD PTR [rax+0x8]
  4074fc:	cmp    rbx,rax
  4074ff:	je     40756b <strcmp@plt+0x3de3>
  407501:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40750b:	nop    DWORD PTR [rax+rax*1+0x0]
  407510:	mov    r12,QWORD PTR [rbx+0x10]
  407514:	mov    rdi,QWORD PTR [r12+0x10]
  407519:	test   rdi,rdi
  40751c:	je     40753b <strcmp@plt+0x3db3>
  40751e:	cmp    DWORD PTR [rdi+0x18],0x0
  407522:	je     40753b <strcmp@plt+0x3db3>
  407524:	mov    rsi,QWORD PTR [r15+0x18]
  407528:	call   42be30 <strcmp@plt+0x286a8>
  40752d:	mov    rdi,QWORD PTR [r12+0x10]
  407532:	mov    rsi,QWORD PTR [r15+0x10]
  407536:	call   42be30 <strcmp@plt+0x286a8>
  40753b:	mov    rdi,QWORD PTR [r12+0x18]
  407540:	test   rdi,rdi
  407543:	je     407562 <strcmp@plt+0x3dda>
  407545:	cmp    DWORD PTR [rdi+0x18],0x0
  407549:	je     407562 <strcmp@plt+0x3dda>
  40754b:	mov    rsi,QWORD PTR [r15+0x20]
  40754f:	call   42be30 <strcmp@plt+0x286a8>
  407554:	mov    rdi,QWORD PTR [r12+0x18]
  407559:	mov    rsi,QWORD PTR [r15+0x10]
  40755d:	call   42be30 <strcmp@plt+0x286a8>
  407562:	mov    rbx,QWORD PTR [rbx+0x8]
  407566:	cmp    rbx,QWORD PTR [r14]
  407569:	jne    407510 <strcmp@plt+0x3d88>
  40756b:	mov    rax,QWORD PTR [r15+0x18]
  40756f:	cmp    DWORD PTR [rax+0x18],0x0
  407573:	jle    40757a <strcmp@plt+0x3df2>
  407575:	or     BYTE PTR [r15+0x8],0x1
  40757a:	mov    rax,QWORD PTR [r15+0x20]
  40757e:	cmp    DWORD PTR [rax+0x18],0x0
  407582:	jle    407589 <strcmp@plt+0x3e01>
  407584:	or     BYTE PTR [r15+0x8],0x2
  407589:	add    rsp,0x8
  40758d:	pop    rbx
  40758e:	pop    r12
  407590:	pop    r14
  407592:	pop    r15
  407594:	ret    
  407595:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40759f:	nop
  4075a0:	push   r15
  4075a2:	push   r14
  4075a4:	push   r13
  4075a6:	push   r12
  4075a8:	push   rbx
  4075a9:	lea    r15,[rip+0x68560]        # 46fb10 <strcmp@plt+0x6c388>
  4075b0:	mov    rax,QWORD PTR [r15]
  4075b3:	mov    rbx,QWORD PTR [rax+0x8]
  4075b7:	cmp    rbx,rax
  4075ba:	je     40761d <strcmp@plt+0x3e95>
  4075bc:	mov    r12,rdi
  4075bf:	lea    r14,[rip+0x1c3aa]        # 423970 <strcmp@plt+0x201e8>
  4075c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4075d0:	mov    r13,QWORD PTR [rbx+0x10]
  4075d4:	mov    rdi,QWORD PTR [r13+0x10]
  4075d8:	test   rdi,rdi
  4075db:	je     4075f4 <strcmp@plt+0x3e6c>
  4075dd:	cmp    DWORD PTR [rdi+0x18],0x0
  4075e1:	je     4075f4 <strcmp@plt+0x3e6c>
  4075e3:	mov    rsi,QWORD PTR [r12+0x18]
  4075e8:	mov    rdx,r14
  4075eb:	call   42bee0 <strcmp@plt+0x28758>
  4075f0:	test   al,al
  4075f2:	je     407627 <strcmp@plt+0x3e9f>
  4075f4:	mov    rdi,QWORD PTR [r13+0x18]
  4075f8:	test   rdi,rdi
  4075fb:	je     407614 <strcmp@plt+0x3e8c>
  4075fd:	cmp    DWORD PTR [rdi+0x18],0x0
  407601:	je     407614 <strcmp@plt+0x3e8c>
  407603:	mov    rsi,QWORD PTR [r12+0x20]
  407608:	mov    rdx,r14
  40760b:	call   42bee0 <strcmp@plt+0x28758>
  407610:	test   al,al
  407612:	je     407627 <strcmp@plt+0x3e9f>
  407614:	mov    rbx,QWORD PTR [rbx+0x8]
  407618:	cmp    rbx,QWORD PTR [r15]
  40761b:	jne    4075d0 <strcmp@plt+0x3e48>
  40761d:	pop    rbx
  40761e:	pop    r12
  407620:	pop    r13
  407622:	pop    r14
  407624:	pop    r15
  407626:	ret    
  407627:	mov    rdi,r12
  40762a:	call   4074c0 <strcmp@plt+0x3d38>
  40762f:	lea    rbx,[rip+0x684d2]        # 46fb08 <strcmp@plt+0x6c380>
  407636:	mov    rax,QWORD PTR [rbx]
  407639:	mov    edi,0xfe
  40763e:	mov    esi,0x2
  407643:	call   QWORD PTR [rax+0x50]
  407646:	mov    rax,QWORD PTR [rbx]
  407649:	mov    rax,QWORD PTR [rax+0x50]
  40764d:	mov    edi,0xfe
  407652:	mov    esi,0xa
  407657:	pop    rbx
  407658:	pop    r12
  40765a:	pop    r13
  40765c:	pop    r14
  40765e:	pop    r15
  407660:	jmp    rax
  407662:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40766c:	nop    DWORD PTR [rax+0x0]
  407670:	push   r15
  407672:	push   r14
  407674:	push   r13
  407676:	push   r12
  407678:	push   rbx
  407679:	mov    r14,rcx
  40767c:	mov    r15,rdx
  40767f:	mov    r12,rsi
  407682:	mov    rbx,rdi
  407685:	mov    rax,QWORD PTR [rdi]
  407688:	cmp    DWORD PTR [rax+0x18],0x0
  40768c:	je     407698 <strcmp@plt+0x3f10>
  40768e:	mov    rax,QWORD PTR [rax+0x8]
  407692:	mov    r13,QWORD PTR [rax+0x10]
  407696:	jmp    40769b <strcmp@plt+0x3f13>
  407698:	xor    r13d,r13d
  40769b:	mov    rax,QWORD PTR [rbx+0x28]
  40769f:	mov    rdi,rbx
  4076a2:	mov    rsi,r12
  4076a5:	mov    rdx,r15
  4076a8:	mov    rcx,r14
  4076ab:	call   QWORD PTR [rax+0x40]
  4076ae:	mov    rsi,QWORD PTR [r12]
  4076b2:	movzx  r8d,BYTE PTR [r12+0xc]
  4076b8:	mov    rdi,r13
  4076bb:	mov    rdx,r15
  4076be:	mov    rcx,r14
  4076c1:	call   407af0 <strcmp@plt+0x4368>
  4076c6:	mov    rdi,rbx
  4076c9:	pop    rbx
  4076ca:	pop    r12
  4076cc:	pop    r13
  4076ce:	pop    r14
  4076d0:	pop    r15
  4076d2:	jmp    4074c0 <strcmp@plt+0x3d38>
  4076d7:	nop    WORD PTR [rax+rax*1+0x0]
  4076e0:	push   rbp
  4076e1:	push   r15
  4076e3:	push   r14
  4076e5:	push   rbx
  4076e6:	push   rax
  4076e7:	mov    r14d,r8d
  4076ea:	mov    rbp,rsi
  4076ed:	mov    rbx,rdi
  4076f0:	mov    rax,QWORD PTR [rdi]
  4076f3:	cmp    DWORD PTR [rax+0x18],0x0
  4076f7:	je     407703 <strcmp@plt+0x3f7b>
  4076f9:	mov    rax,QWORD PTR [rax+0x8]
  4076fd:	mov    r15,QWORD PTR [rax+0x10]
  407701:	jmp    407706 <strcmp@plt+0x3f7e>
  407703:	xor    r15d,r15d
  407706:	mov    rax,QWORD PTR [rbx+0x28]
  40770a:	mov    rdi,rbx
  40770d:	mov    rsi,rbp
  407710:	mov    r8d,r14d
  407713:	call   QWORD PTR [rax+0x48]
  407716:	mov    rsi,QWORD PTR [rbp+0x0]
  40771a:	movzx  edx,r14b
  40771e:	mov    rdi,r15
  407721:	call   407ae0 <strcmp@plt+0x4358>
  407726:	mov    rdi,rbx
  407729:	add    rsp,0x8
  40772d:	pop    rbx
  40772e:	pop    r14
  407730:	pop    r15
  407732:	pop    rbp
  407733:	jmp    4074c0 <strcmp@plt+0x3d38>
  407738:	nop    DWORD PTR [rax+rax*1+0x0]
  407740:	push   rbp
  407741:	push   r15
  407743:	push   r14
  407745:	push   r13
  407747:	push   r12
  407749:	push   rbx
  40774a:	push   rax
  40774b:	mov    r14,r9
  40774e:	mov    r15,r8
  407751:	mov    r12,rcx
  407754:	mov    rbp,rdx
  407757:	mov    r13d,esi
  40775a:	mov    rbx,rdi
  40775d:	mov    rax,QWORD PTR [rdi]
  407760:	cmp    DWORD PTR [rax+0x18],0x0
  407764:	je     407770 <strcmp@plt+0x3fe8>
  407766:	mov    rax,QWORD PTR [rax+0x8]
  40776a:	mov    rax,QWORD PTR [rax+0x10]
  40776e:	jmp    407772 <strcmp@plt+0x3fea>
  407770:	xor    eax,eax
  407772:	mov    QWORD PTR [rsp],rax
  407776:	mov    rax,QWORD PTR [rbx+0x28]
  40777a:	mov    rdi,rbx
  40777d:	mov    esi,r13d
  407780:	mov    rdx,rbp
  407783:	mov    rcx,r12
  407786:	mov    r8,r15
  407789:	mov    r9,r14
  40778c:	call   QWORD PTR [rax+0x38]
  40778f:	mov    rdx,QWORD PTR [rbp+0x0]
  407793:	mov    rdi,QWORD PTR [rsp]
  407797:	mov    esi,r13d
  40779a:	mov    rcx,r12
  40779d:	mov    r8,r15
  4077a0:	mov    r9,r14
  4077a3:	call   407b00 <strcmp@plt+0x4378>
  4077a8:	mov    rdi,rbx
  4077ab:	add    rsp,0x8
  4077af:	pop    rbx
  4077b0:	pop    r12
  4077b2:	pop    r13
  4077b4:	pop    r14
  4077b6:	pop    r15
  4077b8:	pop    rbp
  4077b9:	jmp    4074c0 <strcmp@plt+0x3d38>
  4077be:	xchg   ax,ax
  4077c0:	mov    rax,QWORD PTR [rdi+0x28]
  4077c4:	mov    rax,QWORD PTR [rax+0x30]
  4077c8:	jmp    rax
  4077ca:	nop    WORD PTR [rax+rax*1+0x0]
  4077d0:	push   r14
  4077d2:	push   rbx
  4077d3:	push   rax
  4077d4:	mov    rbx,rdi
  4077d7:	call   42bbd0 <strcmp@plt+0x28448>
  4077dc:	mov    r14,rax
  4077df:	test   rax,rax
  4077e2:	je     407822 <strcmp@plt+0x409a>
  4077e4:	mov    rax,QWORD PTR [rbx+0x28]
  4077e8:	mov    esi,0x2
  4077ed:	mov    rdi,rbx
  4077f0:	call   QWORD PTR [rax+0x30]
  4077f3:	test   rax,rax
  4077f6:	je     407803 <strcmp@plt+0x407b>
  4077f8:	mov    rdi,rax
  4077fb:	mov    rsi,r14
  4077fe:	call   42bcf0 <strcmp@plt+0x28568>
  407803:	mov    rax,QWORD PTR [rbx+0x28]
  407807:	mov    esi,0xa
  40780c:	mov    rdi,rbx
  40780f:	call   QWORD PTR [rax+0x30]
  407812:	test   rax,rax
  407815:	je     407822 <strcmp@plt+0x409a>
  407817:	mov    rdi,rax
  40781a:	mov    rsi,r14
  40781d:	call   42bcf0 <strcmp@plt+0x28568>
  407822:	mov    rax,r14
  407825:	add    rsp,0x8
  407829:	pop    rbx
  40782a:	pop    r14
  40782c:	ret    
  40782d:	nop    DWORD PTR [rax]
  407830:	mov    rax,QWORD PTR [rdi+0x10]
  407834:	ret    
  407835:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40783f:	nop
  407840:	cmp    esi,0xa
  407843:	je     407852 <strcmp@plt+0x40ca>
  407845:	cmp    esi,0x2
  407848:	jne    40785a <strcmp@plt+0x40d2>
  40784a:	add    rdi,0x18
  40784e:	mov    rax,QWORD PTR [rdi]
  407851:	ret    
  407852:	add    rdi,0x20
  407856:	mov    rax,QWORD PTR [rdi]
  407859:	ret    
  40785a:	xor    eax,eax
  40785c:	ret    
  40785d:	nop    DWORD PTR [rax]
  407860:	mov    eax,DWORD PTR [rdi+0x8]
  407863:	ret    
  407864:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40786e:	xchg   ax,ax
  407870:	mov    rax,rdi
  407873:	lea    rcx,[rip+0x68d06]        # 470580 <strcmp@plt+0x6cdf8>
  40787a:	mov    rcx,QWORD PTR [rcx]
  40787d:	mov    rcx,QWORD PTR [rcx]
  407880:	cmp    DWORD PTR [rcx+0x18],0x0
  407884:	je     407896 <strcmp@plt+0x410e>
  407886:	mov    rcx,QWORD PTR [rcx+0x8]
  40788a:	mov    rdi,QWORD PTR [rcx+0x10]
  40788e:	mov    rsi,rax
  407891:	jmp    407b10 <strcmp@plt+0x4388>
  407896:	xor    edi,edi
  407898:	mov    rsi,rax
  40789b:	jmp    407b10 <strcmp@plt+0x4388>
  4078a0:	push   r14
  4078a2:	push   rbx
  4078a3:	push   rax
  4078a4:	mov    rbx,rsi
  4078a7:	mov    r14,rdi
  4078aa:	mov    edi,DWORD PTR [rsi]
  4078ac:	call   407b20 <strcmp@plt+0x4398>
  4078b1:	mov    rcx,rax
  4078b4:	lea    rsi,[rip+0x3befc]        # 4437b7 <strcmp@plt+0x4002f>
  4078bb:	mov    edi,0x4
  4078c0:	xor    eax,eax
  4078c2:	mov    rdx,rcx
  4078c5:	call   42e800 <strcmp@plt+0x2b078>
  4078ca:	mov    rsi,QWORD PTR [r14]
  4078cd:	mov    rdi,rbx
  4078d0:	call   42bcf0 <strcmp@plt+0x28568>
  4078d5:	mov    eax,0x1
  4078da:	add    rsp,0x8
  4078de:	pop    rbx
  4078df:	pop    r14
  4078e1:	ret    
  4078e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078ec:	nop    DWORD PTR [rax+0x0]
  4078f0:	mov    edi,DWORD PTR [rdi]
  4078f2:	cmp    edi,0x3
  4078f5:	ja     40790c <strcmp@plt+0x4184>
  4078f7:	cmp    edi,0x1
  4078fa:	je     40790c <strcmp@plt+0x4184>
  4078fc:	lea    rax,[rip+0x60af5]        # 4683f8 <strcmp@plt+0x64c70>
  407903:	mov    rax,QWORD PTR [rax]
  407906:	mov    rax,QWORD PTR [rax+0x20]
  40790a:	jmp    rax
  40790c:	lea    rax,[rip+0x5d49d]        # 464db0 <strcmp@plt+0x61628>
  407913:	cmp    DWORD PTR [rax],0x0
  407916:	jle    407930 <strcmp@plt+0x41a8>
  407918:	push   rax
  407919:	lea    rsi,[rip+0x3beca]        # 4437ea <strcmp@plt+0x40062>
  407920:	mov    edi,0x5
  407925:	xor    eax,eax
  407927:	call   42e800 <strcmp@plt+0x2b078>
  40792c:	add    rsp,0x8
  407930:	mov    eax,0x1
  407935:	ret    
  407936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407940:	push   rax
  407941:	lea    rax,[rip+0x60ab0]        # 4683f8 <strcmp@plt+0x64c70>
  407948:	mov    rax,QWORD PTR [rax]
  40794b:	test   rax,rax
  40794e:	je     40795f <strcmp@plt+0x41d7>
  407950:	mov    edi,DWORD PTR [rdi]
  407952:	cmp    edi,0x3
  407955:	ja     407966 <strcmp@plt+0x41de>
  407957:	cmp    edi,0x1
  40795a:	je     407966 <strcmp@plt+0x41de>
  40795c:	call   QWORD PTR [rax+0x28]
  40795f:	mov    eax,0x1
  407964:	pop    rcx
  407965:	ret    
  407966:	lea    rax,[rip+0x5d443]        # 464db0 <strcmp@plt+0x61628>
  40796d:	cmp    DWORD PTR [rax],0x0
  407970:	jle    40795f <strcmp@plt+0x41d7>
  407972:	lea    rsi,[rip+0x3becd]        # 443846 <strcmp@plt+0x400be>
  407979:	mov    edi,0x5
  40797e:	xor    eax,eax
  407980:	call   42e800 <strcmp@plt+0x2b078>
  407985:	jmp    40795f <strcmp@plt+0x41d7>
  407987:	nop    WORD PTR [rax+rax*1+0x0]
  407990:	lea    rax,[rip+0x60a61]        # 4683f8 <strcmp@plt+0x64c70>
  407997:	mov    rax,QWORD PTR [rax]
  40799a:	mov    rax,QWORD PTR [rax+0x60]
  40799e:	jmp    rax
  4079a0:	lea    rax,[rip+0x60a51]        # 4683f8 <strcmp@plt+0x64c70>
  4079a7:	mov    rcx,QWORD PTR [rax]
  4079aa:	xor    eax,eax
  4079ac:	jmp    QWORD PTR [rcx+0x68]
  4079af:	nop
  4079b0:	push   rax
  4079b1:	call   4277f0 <strcmp@plt+0x24068>
  4079b6:	mov    rdi,rax
  4079b9:	pop    rax
  4079ba:	jmp    422fa0 <strcmp@plt+0x1f818>
  4079bf:	nop
  4079c0:	push   rax
  4079c1:	call   4277f0 <strcmp@plt+0x24068>
  4079c6:	mov    rdi,rax
  4079c9:	pop    rax
  4079ca:	jmp    422fa0 <strcmp@plt+0x1f818>
  4079cf:	nop
  4079d0:	mov    eax,DWORD PTR [rdi]
  4079d2:	ret    
  4079d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4079dd:	nop    DWORD PTR [rax]
  4079e0:	mov    rax,QWORD PTR [rdi+0x10]
  4079e4:	ret    
  4079e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4079ef:	nop
  4079f0:	mov    rax,QWORD PTR [rdi+0x8]
  4079f4:	mov    rax,QWORD PTR [rax+0x30]
  4079f8:	jmp    rax
  4079fa:	nop    WORD PTR [rax+rax*1+0x0]
  407a00:	mov    rax,QWORD PTR [rdi+0x8]
  407a04:	jmp    QWORD PTR [rax+0x28]
  407a07:	nop    WORD PTR [rax+rax*1+0x0]
  407a10:	push   rbp
  407a11:	push   r15
  407a13:	push   r14
  407a15:	push   rbx
  407a16:	push   rax
  407a17:	mov    r14,rsi
  407a1a:	mov    r15d,edi
  407a1d:	mov    QWORD PTR [rsi],0x0
  407a24:	mov    eax,edi
  407a26:	lea    rcx,[rip+0x5ae23]        # 462850 <strcmp@plt+0x5f0c8>
  407a2d:	mov    rbp,QWORD PTR [rcx+rax*8]
  407a31:	call   QWORD PTR [rbp+0x0]
  407a34:	mov    rbx,rax
  407a37:	mov    DWORD PTR [rax],r15d
  407a3a:	mov    QWORD PTR [rax+0x8],rbp
  407a3e:	mov    rdi,rax
  407a41:	call   QWORD PTR [rbp+0x8]
  407a44:	lea    rax,[rip+0x68b35]        # 470580 <strcmp@plt+0x6cdf8>
  407a4b:	mov    rdi,QWORD PTR [rax]
  407a4e:	mov    QWORD PTR [rbx+0x10],rdi
  407a52:	mov    rsi,rbx
  407a55:	call   4078a0 <strcmp@plt+0x4118>
  407a5a:	mov    QWORD PTR [r14],rbx
  407a5d:	mov    eax,0x1
  407a62:	add    rsp,0x8
  407a66:	pop    rbx
  407a67:	pop    r14
  407a69:	pop    r15
  407a6b:	pop    rbp
  407a6c:	ret    
  407a6d:	nop    DWORD PTR [rax]
  407a70:	push   rax
  407a71:	mov    rax,rdi
  407a74:	mov    QWORD PTR [rdi+0x10],rsi
  407a78:	mov    rdi,rsi
  407a7b:	mov    rsi,rax
  407a7e:	call   4078a0 <strcmp@plt+0x4118>
  407a83:	mov    eax,0x1
  407a88:	pop    rcx
  407a89:	ret    
  407a8a:	nop    WORD PTR [rax+rax*1+0x0]
  407a90:	test   rdi,rdi
  407a93:	je     407aab <strcmp@plt+0x4323>
  407a95:	push   rbx
  407a96:	mov    rbx,rdi
  407a99:	mov    rax,QWORD PTR [rdi+0x8]
  407a9d:	call   QWORD PTR [rax+0x18]
  407aa0:	mov    rax,QWORD PTR [rbx+0x8]
  407aa4:	mov    rdi,rbx
  407aa7:	pop    rbx
  407aa8:	jmp    QWORD PTR [rax+0x10]
  407aab:	ret    
  407aac:	nop    DWORD PTR [rax+0x0]
  407ab0:	mov    rdi,QWORD PTR [rdi+0x10]
  407ab4:	mov    rax,QWORD PTR [rdi+0x28]
  407ab8:	mov    rax,QWORD PTR [rax+0x28]
  407abc:	jmp    rax
  407abe:	xchg   ax,ax
  407ac0:	mov    rdi,rsi
  407ac3:	mov    esi,edx
  407ac5:	jmp    407990 <strcmp@plt+0x4208>
  407aca:	nop    WORD PTR [rax+rax*1+0x0]
  407ad0:	xor    eax,eax
  407ad2:	jmp    4079a0 <strcmp@plt+0x4218>
  407ad7:	nop    WORD PTR [rax+rax*1+0x0]
  407ae0:	mov    rax,QWORD PTR [rdi+0x8]
  407ae4:	mov    rax,QWORD PTR [rax+0x38]
  407ae8:	jmp    rax
  407aea:	nop    WORD PTR [rax+rax*1+0x0]
  407af0:	mov    rax,QWORD PTR [rdi+0x8]
  407af4:	mov    rax,QWORD PTR [rax+0x40]
  407af8:	jmp    rax
  407afa:	nop    WORD PTR [rax+rax*1+0x0]
  407b00:	mov    rax,QWORD PTR [rdi+0x8]
  407b04:	mov    rax,QWORD PTR [rax+0x48]
  407b08:	jmp    rax
  407b0a:	nop    WORD PTR [rax+rax*1+0x0]
  407b10:	mov    rax,QWORD PTR [rdi+0x8]
  407b14:	mov    rax,QWORD PTR [rax+0x50]
  407b18:	jmp    rax
  407b1a:	nop    WORD PTR [rax+rax*1+0x0]
  407b20:	mov    BYTE PTR [rip+0x606c1],0x0        # 4681e8 <strcmp@plt+0x64a60>
  407b27:	cmp    edi,0x5
  407b2a:	ja     407b50 <strcmp@plt+0x43c8>
  407b2c:	mov    eax,edi
  407b2e:	lea    rcx,[rip+0x3bd67]        # 44389c <strcmp@plt+0x40114>
  407b35:	movsxd rax,DWORD PTR [rcx+rax*4]
  407b39:	add    rax,rcx
  407b3c:	jmp    rax
  407b3e:	mov    DWORD PTR [rip+0x606a0],0x525478        # 4681e8 <strcmp@plt+0x64a60>
  407b48:	lea    rax,[rip+0x60699]        # 4681e8 <strcmp@plt+0x64a60>
  407b4f:	ret    
  407b50:	movabs rax,0x6e776f6e6b6e55
  407b5a:	mov    QWORD PTR [rip+0x60687],rax        # 4681e8 <strcmp@plt+0x64a60>
  407b61:	lea    rax,[rip+0x60680]        # 4681e8 <strcmp@plt+0x64a60>
  407b68:	ret    
  407b69:	movabs rax,0x767265532070614d
  407b73:	mov    QWORD PTR [rip+0x6066e],rax        # 4681e8 <strcmp@plt+0x64a60>
  407b7a:	mov    BYTE PTR [rip+0x60671],0x0        # 4681f2 <strcmp@plt+0x64a6a>
  407b81:	mov    WORD PTR [rip+0x60666],0x7265        # 4681f0 <strcmp@plt+0x64a68>
  407b8a:	lea    rax,[rip+0x60657]        # 4681e8 <strcmp@plt+0x64a60>
  407b91:	ret    
  407b92:	mov    DWORD PTR [rip+0x6064c],0x525452        # 4681e8 <strcmp@plt+0x64a60>
  407b9c:	lea    rax,[rip+0x60645]        # 4681e8 <strcmp@plt+0x64a60>
  407ba3:	ret    
  407ba4:	movabs rax,0x4e20656c69626f4d
  407bae:	jmp    407bda <strcmp@plt+0x4452>
  407bb0:	movabs rax,0x65646f6e20544444
  407bba:	mov    QWORD PTR [rip+0x60627],rax        # 4681e8 <strcmp@plt+0x64a60>
  407bc1:	mov    BYTE PTR [rip+0x60628],0x0        # 4681f0 <strcmp@plt+0x64a68>
  407bc8:	lea    rax,[rip+0x60619]        # 4681e8 <strcmp@plt+0x64a60>
  407bcf:	ret    
  407bd0:	movabs rax,0x6e20524d20544444
  407bda:	mov    QWORD PTR [rip+0x60607],rax        # 4681e8 <strcmp@plt+0x64a60>
  407be1:	mov    DWORD PTR [rip+0x60605],0x65646f        # 4681f0 <strcmp@plt+0x64a68>
  407beb:	lea    rax,[rip+0x605f6]        # 4681e8 <strcmp@plt+0x64a60>
  407bf2:	ret    
  407bf3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bfd:	nop    DWORD PTR [rax]
  407c00:	push   rbp
  407c01:	push   r15
  407c03:	push   r14
  407c05:	push   r13
  407c07:	push   r12
  407c09:	push   rbx
  407c0a:	push   rax
  407c0b:	mov    r14,r8
  407c0e:	mov    rbx,rcx
  407c11:	mov    r15,rdx
  407c14:	mov    rbp,rsi
  407c17:	mov    r13,rdi
  407c1a:	test   rcx,rcx
  407c1d:	cmove  rbx,rdx
  407c21:	je     407c40 <strcmp@plt+0x44b8>
  407c23:	mov    rdi,rbx
  407c26:	call   423200 <strcmp@plt+0x1fa78>
  407c2b:	movzx  esi,ax
  407c2e:	mov    rdi,rbp
  407c31:	call   422de0 <strcmp@plt+0x1f658>
  407c36:	test   rax,rax
  407c39:	je     407c55 <strcmp@plt+0x44cd>
  407c3b:	mov    r12,rax
  407c3e:	jmp    407c87 <strcmp@plt+0x44ff>
  407c40:	lea    r12,[r15+0x20]
  407c44:	mov    rdi,rbp
  407c47:	mov    rsi,r12
  407c4a:	call   422d90 <strcmp@plt+0x1f608>
  407c4f:	test   eax,eax
  407c51:	jne    407c87 <strcmp@plt+0x44ff>
  407c53:	jmp    407c23 <strcmp@plt+0x449b>
  407c55:	cmp    DWORD PTR [rbp+0x18],0x0
  407c59:	je     407cb5 <strcmp@plt+0x452d>
  407c5b:	mov    rax,QWORD PTR [rbp+0x8]
  407c5f:	mov    r12,QWORD PTR [rax+0x10]
  407c63:	test   r12,r12
  407c66:	je     407cb5 <strcmp@plt+0x452d>
  407c68:	mov    rbx,QWORD PTR [r13+0x10]
  407c6c:	mov    rdi,r12
  407c6f:	call   423200 <strcmp@plt+0x1fa78>
  407c74:	movzx  esi,ax
  407c77:	mov    rdi,rbx
  407c7a:	call   4077c0 <strcmp@plt+0x4038>
  407c7f:	test   rax,rax
  407c82:	je     407cd8 <strcmp@plt+0x4550>
  407c84:	mov    rbx,rax
  407c87:	movzx  edx,WORD PTR [r15+0x42]
  407c8c:	mov    esi,0x10f6
  407c91:	mov    rdi,r14
  407c94:	mov    rcx,rbx
  407c97:	mov    r8,r12
  407c9a:	call   435600 <strcmp@plt+0x31e78>
  407c9f:	mov    ebx,0x1
  407ca4:	mov    eax,ebx
  407ca6:	add    rsp,0x8
  407caa:	pop    rbx
  407cab:	pop    r12
  407cad:	pop    r13
  407caf:	pop    r14
  407cb1:	pop    r15
  407cb3:	pop    rbp
  407cb4:	ret    
  407cb5:	lea    rax,[rip+0x5d0f4]        # 464db0 <strcmp@plt+0x61628>
  407cbc:	cmp    DWORD PTR [rax],0x0
  407cbf:	jle    407d1b <strcmp@plt+0x4593>
  407cc1:	lea    rsi,[rip+0x3bc0d]        # 4438d5 <strcmp@plt+0x4014d>
  407cc8:	xor    ebx,ebx
  407cca:	mov    edi,0x5
  407ccf:	xor    eax,eax
  407cd1:	call   42e800 <strcmp@plt+0x2b078>
  407cd6:	jmp    407ca4 <strcmp@plt+0x451c>
  407cd8:	lea    rax,[rip+0x5d0d1]        # 464db0 <strcmp@plt+0x61628>
  407cdf:	cmp    DWORD PTR [rax],0x0
  407ce2:	jle    407d1b <strcmp@plt+0x4593>
  407ce4:	mov    rdi,r12
  407ce7:	call   423200 <strcmp@plt+0x1fa78>
  407cec:	movzx  eax,ax
  407cef:	cmp    eax,0x2
  407cf2:	lea    rax,[rip+0x3bc4a]        # 443943 <strcmp@plt+0x401bb>
  407cf9:	lea    rdx,[rip+0x3bc48]        # 443948 <strcmp@plt+0x401c0>
  407d00:	cmove  rdx,rax
  407d04:	lea    rsi,[rip+0x3bbf7]        # 443902 <strcmp@plt+0x4017a>
  407d0b:	xor    ebx,ebx
  407d0d:	mov    edi,0x5
  407d12:	xor    eax,eax
  407d14:	call   42e800 <strcmp@plt+0x2b078>
  407d19:	jmp    407ca4 <strcmp@plt+0x451c>
  407d1b:	xor    ebx,ebx
  407d1d:	jmp    407ca4 <strcmp@plt+0x451c>
  407d1f:	nop
  407d20:	push   rbx
  407d21:	mov    edi,0x8
  407d26:	call   432070 <strcmp@plt+0x2e8e8>
  407d2b:	test   rax,rax
  407d2e:	je     407d42 <strcmp@plt+0x45ba>
  407d30:	mov    rbx,rax
  407d33:	xor    eax,eax
  407d35:	call   42ecf0 <strcmp@plt+0x2b568>
  407d3a:	mov    QWORD PTR [rbx],rax
  407d3d:	test   rax,rax
  407d40:	jne    407d57 <strcmp@plt+0x45cf>
  407d42:	lea    rsi,[rip+0x3bc04]        # 44394d <strcmp@plt+0x401c5>
  407d49:	xor    ebx,ebx
  407d4b:	mov    edi,0x1
  407d50:	xor    eax,eax
  407d52:	call   42e800 <strcmp@plt+0x2b078>
  407d57:	mov    rax,rbx
  407d5a:	pop    rbx
  407d5b:	ret    
  407d5c:	nop    DWORD PTR [rax+0x0]
  407d60:	push   rbx
  407d61:	mov    rbx,rdi
  407d64:	mov    rdi,QWORD PTR [rdi]
  407d67:	lea    rsi,[rip+0x29ea2]        # 431c10 <strcmp@plt+0x2e488>
  407d6e:	call   42ef00 <strcmp@plt+0x2b778>
  407d73:	mov    rdi,rbx
  407d76:	pop    rbx
  407d77:	jmp    403780 <free@plt>
  407d7c:	nop    DWORD PTR [rax+0x0]
  407d80:	push   rbp
  407d81:	push   rbx
  407d82:	push   rax
  407d83:	mov    rbx,rsi
  407d86:	mov    rbp,rdi
  407d89:	mov    rdi,rsi
  407d8c:	call   431b40 <strcmp@plt+0x2e3b8>
  407d91:	mov    rdi,rax
  407d94:	call   4230e0 <strcmp@plt+0x1f958>
  407d99:	mov    rdi,QWORD PTR [rbp+0x0]
  407d9d:	mov    rsi,rax
  407da0:	mov    rdx,rbx
  407da3:	call   42f150 <strcmp@plt+0x2b9c8>
  407da8:	mov    ebp,0x1
  407dad:	cmp    eax,0x1
  407db0:	je     407deb <strcmp@plt+0x4663>
  407db2:	lea    rax,[rip+0x5cff7]        # 464db0 <strcmp@plt+0x61628>
  407db9:	xor    ebp,ebp
  407dbb:	cmp    DWORD PTR [rax],0x3
  407dbe:	jl     407deb <strcmp@plt+0x4663>
  407dc0:	mov    rdi,rbx
  407dc3:	call   431b40 <strcmp@plt+0x2e3b8>
  407dc8:	mov    rdi,rax
  407dcb:	call   423130 <strcmp@plt+0x1f9a8>
  407dd0:	mov    rcx,rax
  407dd3:	lea    rsi,[rip+0x3bb96]        # 443970 <strcmp@plt+0x401e8>
  407dda:	xor    ebp,ebp
  407ddc:	mov    edi,0x7
  407de1:	xor    eax,eax
  407de3:	mov    rdx,rcx
  407de6:	call   42e800 <strcmp@plt+0x2b078>
  407deb:	mov    eax,ebp
  407ded:	add    rsp,0x8
  407df1:	pop    rbx
  407df2:	pop    rbp
  407df3:	ret    
  407df4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407dfe:	xchg   ax,ax
  407e00:	push   rbp
  407e01:	push   r15
  407e03:	push   r14
  407e05:	push   r12
  407e07:	push   rbx
  407e08:	mov    r15d,edx
  407e0b:	mov    rbx,rsi
  407e0e:	mov    rbp,rdi
  407e11:	xor    r12d,r12d
  407e14:	cmp    DWORD PTR [rsi+0x18],0x3
  407e18:	jne    407e40 <strcmp@plt+0x46b8>
  407e1a:	mov    rdi,rbx
  407e1d:	call   426c50 <strcmp@plt+0x234c8>
  407e22:	test   eax,eax
  407e24:	je     407ec8 <strcmp@plt+0x4740>
  407e2a:	mov    rdi,rbx
  407e2d:	call   427040 <strcmp@plt+0x238b8>
  407e32:	mov    r12d,eax
  407e35:	mov    rdi,rbx
  407e38:	call   4230e0 <strcmp@plt+0x1f958>
  407e3d:	mov    rsi,rax
  407e40:	mov    rdi,QWORD PTR [rbp+0x0]
  407e44:	call   42fcb0 <strcmp@plt+0x2c528>
  407e49:	test   rax,rax
  407e4c:	je     407ea0 <strcmp@plt+0x4718>
  407e4e:	mov    r14,rax
  407e51:	test   r15b,r15b
  407e54:	je     407f0f <strcmp@plt+0x4787>
  407e5a:	mov    rdi,r14
  407e5d:	call   431b40 <strcmp@plt+0x2e3b8>
  407e62:	test   r12d,r12d
  407e65:	je     407efa <strcmp@plt+0x4772>
  407e6b:	mov    rdi,rax
  407e6e:	call   427040 <strcmp@plt+0x238b8>
  407e73:	cmp    r12d,eax
  407e76:	je     407f0f <strcmp@plt+0x4787>
  407e7c:	lea    rax,[rip+0x5cf2d]        # 464db0 <strcmp@plt+0x61628>
  407e83:	cmp    DWORD PTR [rax],0x3
  407e86:	jl     407f0c <strcmp@plt+0x4784>
  407e8c:	mov    rdi,rbx
  407e8f:	call   423130 <strcmp@plt+0x1f9a8>
  407e94:	mov    rcx,rax
  407e97:	lea    rsi,[rip+0x3bb80]        # 443a1e <strcmp@plt+0x40296>
  407e9e:	jmp    407ebe <strcmp@plt+0x4736>
  407ea0:	lea    rax,[rip+0x5cf09]        # 464db0 <strcmp@plt+0x61628>
  407ea7:	cmp    DWORD PTR [rax],0x3
  407eaa:	jl     407f0c <strcmp@plt+0x4784>
  407eac:	mov    rdi,rbx
  407eaf:	call   423130 <strcmp@plt+0x1f9a8>
  407eb4:	mov    rcx,rax
  407eb7:	lea    rsi,[rip+0x3bb24]        # 4439e2 <strcmp@plt+0x4025a>
  407ebe:	xor    r14d,r14d
  407ec1:	mov    edi,0x7
  407ec6:	jmp    407eee <strcmp@plt+0x4766>
  407ec8:	lea    rax,[rip+0x5cee1]        # 464db0 <strcmp@plt+0x61628>
  407ecf:	cmp    DWORD PTR [rax],0x2
  407ed2:	jl     407f0c <strcmp@plt+0x4784>
  407ed4:	mov    rdi,rbx
  407ed7:	call   423130 <strcmp@plt+0x1f9a8>
  407edc:	mov    rcx,rax
  407edf:	lea    rsi,[rip+0x3bac5]        # 4439ab <strcmp@plt+0x40223>
  407ee6:	xor    r14d,r14d
  407ee9:	mov    edi,0x6
  407eee:	xor    eax,eax
  407ef0:	mov    rdx,rcx
  407ef3:	call   42e800 <strcmp@plt+0x2b078>
  407ef8:	jmp    407f0f <strcmp@plt+0x4787>
  407efa:	cmp    DWORD PTR [rax+0x18],0x3
  407efe:	jne    407f0f <strcmp@plt+0x4787>
  407f00:	lea    rax,[rip+0x5cea9]        # 464db0 <strcmp@plt+0x61628>
  407f07:	cmp    DWORD PTR [rax],0x3
  407f0a:	jge    407f1b <strcmp@plt+0x4793>
  407f0c:	xor    r14d,r14d
  407f0f:	mov    rax,r14
  407f12:	pop    rbx
  407f13:	pop    r12
  407f15:	pop    r14
  407f17:	pop    r15
  407f19:	pop    rbp
  407f1a:	ret    
  407f1b:	mov    rdi,rbx
  407f1e:	call   423130 <strcmp@plt+0x1f9a8>
  407f23:	mov    rcx,rax
  407f26:	lea    rsi,[rip+0x3bb3c]        # 443a69 <strcmp@plt+0x402e1>
  407f2d:	jmp    407ebe <strcmp@plt+0x4736>
  407f2f:	nop
  407f30:	push   r14
  407f32:	push   rbx
  407f33:	push   rax
  407f34:	mov    rbx,rsi
  407f37:	mov    r14,rdi
  407f3a:	cmp    DWORD PTR [rsi+0x18],0x3
  407f3e:	jne    407f57 <strcmp@plt+0x47cf>
  407f40:	mov    rdi,rbx
  407f43:	call   426c50 <strcmp@plt+0x234c8>
  407f48:	test   eax,eax
  407f4a:	je     407fc6 <strcmp@plt+0x483e>
  407f4c:	mov    rdi,rbx
  407f4f:	call   4230e0 <strcmp@plt+0x1f958>
  407f54:	mov    rsi,rax
  407f57:	mov    rdi,QWORD PTR [r14]
  407f5a:	call   42fcd0 <strcmp@plt+0x2c548>
  407f5f:	test   rax,rax
  407f62:	je     407f9e <strcmp@plt+0x4816>
  407f64:	mov    r14,rax
  407f67:	mov    rdi,rax
  407f6a:	call   431b40 <strcmp@plt+0x2e3b8>
  407f6f:	mov    rdi,rax
  407f72:	mov    rsi,rbx
  407f75:	call   423970 <strcmp@plt+0x201e8>
  407f7a:	test   eax,eax
  407f7c:	je     407ffb <strcmp@plt+0x4873>
  407f7e:	lea    rax,[rip+0x5ce2b]        # 464db0 <strcmp@plt+0x61628>
  407f85:	cmp    DWORD PTR [rax],0x3
  407f88:	jl     407fd2 <strcmp@plt+0x484a>
  407f8a:	mov    rdi,rbx
  407f8d:	call   423130 <strcmp@plt+0x1f9a8>
  407f92:	mov    rcx,rax
  407f95:	lea    rsi,[rip+0x3bb18]        # 443ab4 <strcmp@plt+0x4032c>
  407f9c:	jmp    407fbc <strcmp@plt+0x4834>
  407f9e:	lea    rax,[rip+0x5ce0b]        # 464db0 <strcmp@plt+0x61628>
  407fa5:	cmp    DWORD PTR [rax],0x3
  407fa8:	jl     407fd2 <strcmp@plt+0x484a>
  407faa:	mov    rdi,rbx
  407fad:	call   423130 <strcmp@plt+0x1f9a8>
  407fb2:	mov    rcx,rax
  407fb5:	lea    rsi,[rip+0x3ba26]        # 4439e2 <strcmp@plt+0x4025a>
  407fbc:	xor    r14d,r14d
  407fbf:	mov    edi,0x7
  407fc4:	jmp    407ff1 <strcmp@plt+0x4869>
  407fc6:	lea    rax,[rip+0x5cde3]        # 464db0 <strcmp@plt+0x61628>
  407fcd:	cmp    DWORD PTR [rax],0x2
  407fd0:	jge    407fd7 <strcmp@plt+0x484f>
  407fd2:	xor    r14d,r14d
  407fd5:	jmp    407ffb <strcmp@plt+0x4873>
  407fd7:	mov    rdi,rbx
  407fda:	call   423130 <strcmp@plt+0x1f9a8>
  407fdf:	mov    rcx,rax
  407fe2:	lea    rsi,[rip+0x3b9c2]        # 4439ab <strcmp@plt+0x40223>
  407fe9:	xor    r14d,r14d
  407fec:	mov    edi,0x6
  407ff1:	xor    eax,eax
  407ff3:	mov    rdx,rcx
  407ff6:	call   42e800 <strcmp@plt+0x2b078>
  407ffb:	mov    rax,r14
  407ffe:	add    rsp,0x8
  408002:	pop    rbx
  408003:	pop    r14
  408005:	ret    
  408006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408010:	push   rax
  408011:	mov    rdi,QWORD PTR [rdi]
  408014:	call   42f580 <strcmp@plt+0x2bdf8>
  408019:	test   rax,rax
  40801c:	je     408027 <strcmp@plt+0x489f>
  40801e:	mov    rdi,rax
  408021:	pop    rax
  408022:	jmp    431c10 <strcmp@plt+0x2e488>
  408027:	pop    rax
  408028:	ret    
  408029:	nop    DWORD PTR [rax+0x0]
  408030:	push   rbp
  408031:	push   r15
  408033:	push   r14
  408035:	push   r13
  408037:	push   r12
  408039:	push   rbx
  40803a:	sub    rsp,0x828
  408041:	mov    DWORD PTR [rsp+0x4],esi
  408045:	mov    r15,rdi
  408048:	call   42bbd0 <strcmp@plt+0x28448>
  40804d:	mov    r12,rax
  408050:	mov    rax,QWORD PTR [r15]
  408053:	mov    rdi,QWORD PTR [rax]
  408056:	mov    rsi,r12
  408059:	call   42bcf0 <strcmp@plt+0x28568>
  40805e:	mov    rax,QWORD PTR [r15]
  408061:	mov    rdi,QWORD PTR [rax+0x8]
  408065:	mov    rsi,r12
  408068:	call   42bcf0 <strcmp@plt+0x28568>
  40806d:	mov    rax,QWORD PTR [r15]
  408070:	mov    rcx,QWORD PTR [rax+0x10]
  408074:	mov    rcx,QWORD PTR [rcx]
  408077:	cmp    DWORD PTR [rcx],0x0
  40807a:	je     4080cf <strcmp@plt+0x4947>
  40807c:	xor    ebx,ebx
  40807e:	mov    r13d,0x3
  408084:	xor    ebp,ebp
  408086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408090:	mov    rdx,QWORD PTR [rcx+0x10]
  408094:	mov    esi,ebp
  408096:	shr    esi,0x4
  408099:	mov    edi,ebx
  40809b:	and    dil,0x1e
  40809f:	shlx   edi,r13d,edi
  4080a4:	test   DWORD PTR [rdx+rsi*4],edi
  4080a7:	jne    4080be <strcmp@plt+0x4936>
  4080a9:	mov    rax,QWORD PTR [rcx+0x20]
  4080ad:	mov    ecx,ebp
  4080af:	mov    rdi,QWORD PTR [rax+rcx*8]
  4080b3:	mov    rsi,r12
  4080b6:	call   42bcf0 <strcmp@plt+0x28568>
  4080bb:	mov    rax,QWORD PTR [r15]
  4080be:	add    ebp,0x1
  4080c1:	mov    rcx,QWORD PTR [rax+0x10]
  4080c5:	mov    rcx,QWORD PTR [rcx]
  4080c8:	add    ebx,0x2
  4080cb:	cmp    ebp,DWORD PTR [rcx]
  4080cd:	jne    408090 <strcmp@plt+0x4908>
  4080cf:	mov    rcx,QWORD PTR [rax+0x18]
  4080d3:	mov    rcx,QWORD PTR [rcx]
  4080d6:	cmp    DWORD PTR [rcx],0x0
  4080d9:	je     40812f <strcmp@plt+0x49a7>
  4080db:	xor    ebx,ebx
  4080dd:	mov    r13d,0x3
  4080e3:	xor    ebp,ebp
  4080e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080ef:	nop
  4080f0:	mov    rdx,QWORD PTR [rcx+0x10]
  4080f4:	mov    esi,ebp
  4080f6:	shr    esi,0x4
  4080f9:	mov    edi,ebx
  4080fb:	and    dil,0x1e
  4080ff:	shlx   edi,r13d,edi
  408104:	test   DWORD PTR [rdx+rsi*4],edi
  408107:	jne    40811e <strcmp@plt+0x4996>
  408109:	mov    rax,QWORD PTR [rcx+0x20]
  40810d:	mov    ecx,ebp
  40810f:	mov    rdi,QWORD PTR [rax+rcx*8]
  408113:	mov    rsi,r12
  408116:	call   42bcf0 <strcmp@plt+0x28568>
  40811b:	mov    rax,QWORD PTR [r15]
  40811e:	add    ebp,0x1
  408121:	mov    rcx,QWORD PTR [rax+0x18]
  408125:	mov    rcx,QWORD PTR [rcx]
  408128:	add    ebx,0x2
  40812b:	cmp    ebp,DWORD PTR [rcx]
  40812d:	jne    4080f0 <strcmp@plt+0x4968>
  40812f:	mov    rax,QWORD PTR [r12+0x8]
  408134:	cmp    rax,r12
  408137:	jne    408152 <strcmp@plt+0x49ca>
  408139:	jmp    408261 <strcmp@plt+0x4ad9>
  40813e:	xchg   ax,ax
  408140:	mov    rax,QWORD PTR [rsp+0x8]
  408145:	mov    rax,QWORD PTR [rax+0x8]
  408149:	cmp    rax,r12
  40814c:	je     408261 <strcmp@plt+0x4ad9>
  408152:	mov    QWORD PTR [rsp+0x8],rax
  408157:	mov    rax,QWORD PTR [rax+0x10]
  40815b:	mov    rbx,QWORD PTR [rax]
  40815e:	test   rbx,rbx
  408161:	je     408140 <strcmp@plt+0x49b8>
  408163:	xor    r13d,r13d
  408166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408170:	cmp    QWORD PTR [rbx+0x8],0x0
  408175:	je     408208 <strcmp@plt+0x4a80>
  40817b:	mov    rax,QWORD PTR [rbx+0x28]
  40817f:	mov    r14,QWORD PTR [rax]
  408182:	test   r14,r14
  408185:	je     408208 <strcmp@plt+0x4a80>
  40818b:	xor    r15d,r15d
  40818e:	xchg   ax,ax
  408190:	cmp    QWORD PTR [r14+0x8],0x0
  408195:	je     4081c2 <strcmp@plt+0x4a3a>
  408197:	mov    rdi,QWORD PTR [r14+0x28]
  40819b:	test   rdi,rdi
  40819e:	je     4081c2 <strcmp@plt+0x4a3a>
  4081a0:	call   431b40 <strcmp@plt+0x2e3b8>
  4081a5:	test   rax,rax
  4081a8:	je     4081c2 <strcmp@plt+0x4a3a>
  4081aa:	mov    rbp,rax
  4081ad:	mov    rdi,rax
  4081b0:	call   423200 <strcmp@plt+0x1fa78>
  4081b5:	movzx  eax,ax
  4081b8:	cmp    eax,DWORD PTR [rsp+0x4]
  4081bc:	je     408263 <strcmp@plt+0x4adb>
  4081c2:	mov    rax,QWORD PTR [r14+0x10]
  4081c6:	mov    rcx,QWORD PTR [r14+0x18]
  4081ca:	test   rax,rax
  4081cd:	je     4081e0 <strcmp@plt+0x4a58>
  4081cf:	test   rcx,rcx
  4081d2:	je     408200 <strcmp@plt+0x4a78>
  4081d4:	mov    QWORD PTR [rsp+r15*8+0x10],rcx
  4081d9:	add    r15,0x1
  4081dd:	jmp    408200 <strcmp@plt+0x4a78>
  4081df:	nop
  4081e0:	test   rcx,rcx
  4081e3:	je     4081ea <strcmp@plt+0x4a62>
  4081e5:	mov    rax,rcx
  4081e8:	jmp    408200 <strcmp@plt+0x4a78>
  4081ea:	test   r15,r15
  4081ed:	je     408208 <strcmp@plt+0x4a80>
  4081ef:	mov    rax,QWORD PTR [rsp+r15*8+0x8]
  4081f4:	add    r15,0xffffffffffffffff
  4081f8:	nop    DWORD PTR [rax+rax*1+0x0]
  408200:	mov    r14,rax
  408203:	test   rax,rax
  408206:	jne    408190 <strcmp@plt+0x4a08>
  408208:	mov    rax,QWORD PTR [rbx+0x10]
  40820c:	mov    rcx,QWORD PTR [rbx+0x18]
  408210:	test   rax,rax
  408213:	je     408230 <strcmp@plt+0x4aa8>
  408215:	test   rcx,rcx
  408218:	je     408250 <strcmp@plt+0x4ac8>
  40821a:	mov    QWORD PTR [rsp+r13*8+0x420],rcx
  408222:	add    r13,0x1
  408226:	jmp    408250 <strcmp@plt+0x4ac8>
  408228:	nop    DWORD PTR [rax+rax*1+0x0]
  408230:	test   rcx,rcx
  408233:	je     40823a <strcmp@plt+0x4ab2>
  408235:	mov    rax,rcx
  408238:	jmp    408250 <strcmp@plt+0x4ac8>
  40823a:	test   r13,r13
  40823d:	je     408140 <strcmp@plt+0x49b8>
  408243:	mov    rax,QWORD PTR [rsp+r13*8+0x418]
  40824b:	add    r13,0xffffffffffffffff
  40824f:	nop
  408250:	mov    rbx,rax
  408253:	test   rax,rax
  408256:	jne    408170 <strcmp@plt+0x49e8>
  40825c:	jmp    408140 <strcmp@plt+0x49b8>
  408261:	xor    ebp,ebp
  408263:	mov    rdi,r12
  408266:	call   42c250 <strcmp@plt+0x28ac8>
  40826b:	mov    rax,rbp
  40826e:	add    rsp,0x828
  408275:	pop    rbx
  408276:	pop    r12
  408278:	pop    r13
  40827a:	pop    r14
  40827c:	pop    r15
  40827e:	pop    rbp
  40827f:	ret    
  408280:	push   rbp
  408281:	push   r15
  408283:	push   r14
  408285:	push   r13
  408287:	push   r12
  408289:	push   rbx
  40828a:	sub    rsp,0x828
  408291:	mov    r12d,esi
  408294:	mov    r14,rdi
  408297:	call   42bbd0 <strcmp@plt+0x28448>
  40829c:	mov    rbx,rax
  40829f:	mov    rax,QWORD PTR [r14]
  4082a2:	mov    rdi,QWORD PTR [rax]
  4082a5:	mov    rsi,rbx
  4082a8:	call   42bcf0 <strcmp@plt+0x28568>
  4082ad:	mov    rax,QWORD PTR [r14]
  4082b0:	mov    rdi,QWORD PTR [rax+0x8]
  4082b4:	mov    QWORD PTR [rsp],rbx
  4082b8:	mov    rsi,rbx
  4082bb:	call   42bcf0 <strcmp@plt+0x28568>
  4082c0:	mov    rax,QWORD PTR [r14]
  4082c3:	mov    rcx,QWORD PTR [rax+0x10]
  4082c7:	mov    rcx,QWORD PTR [rcx]
  4082ca:	cmp    DWORD PTR [rcx],0x0
  4082cd:	je     408320 <strcmp@plt+0x4b98>
  4082cf:	xor    ebp,ebp
  4082d1:	mov    r15d,0x3
  4082d7:	xor    ebx,ebx
  4082d9:	nop    DWORD PTR [rax+0x0]
  4082e0:	mov    rdx,QWORD PTR [rcx+0x10]
  4082e4:	mov    esi,ebx
  4082e6:	shr    esi,0x4
  4082e9:	mov    edi,ebp
  4082eb:	and    dil,0x1e
  4082ef:	shlx   edi,r15d,edi
  4082f4:	test   DWORD PTR [rdx+rsi*4],edi
  4082f7:	jne    40830f <strcmp@plt+0x4b87>
  4082f9:	mov    rax,QWORD PTR [rcx+0x20]
  4082fd:	mov    ecx,ebx
  4082ff:	mov    rdi,QWORD PTR [rax+rcx*8]
  408303:	mov    rsi,QWORD PTR [rsp]
  408307:	call   42bcf0 <strcmp@plt+0x28568>
  40830c:	mov    rax,QWORD PTR [r14]
  40830f:	add    ebx,0x1
  408312:	mov    rcx,QWORD PTR [rax+0x10]
  408316:	mov    rcx,QWORD PTR [rcx]
  408319:	add    ebp,0x2
  40831c:	cmp    ebx,DWORD PTR [rcx]
  40831e:	jne    4082e0 <strcmp@plt+0x4b58>
  408320:	mov    rcx,QWORD PTR [rax+0x18]
  408324:	mov    rcx,QWORD PTR [rcx]
  408327:	cmp    DWORD PTR [rcx],0x0
  40832a:	je     408380 <strcmp@plt+0x4bf8>
  40832c:	xor    ebx,ebx
  40832e:	mov    r15d,0x3
  408334:	xor    ebp,ebp
  408336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408340:	mov    rdx,QWORD PTR [rcx+0x10]
  408344:	mov    esi,ebp
  408346:	shr    esi,0x4
  408349:	mov    edi,ebx
  40834b:	and    dil,0x1e
  40834f:	shlx   edi,r15d,edi
  408354:	test   DWORD PTR [rdx+rsi*4],edi
  408357:	jne    40836f <strcmp@plt+0x4be7>
  408359:	mov    rax,QWORD PTR [rcx+0x20]
  40835d:	mov    ecx,ebp
  40835f:	mov    rdi,QWORD PTR [rax+rcx*8]
  408363:	mov    rsi,QWORD PTR [rsp]
  408367:	call   42bcf0 <strcmp@plt+0x28568>
  40836c:	mov    rax,QWORD PTR [r14]
  40836f:	add    ebp,0x1
  408372:	mov    rcx,QWORD PTR [rax+0x18]
  408376:	mov    rcx,QWORD PTR [rcx]
  408379:	add    ebx,0x2
  40837c:	cmp    ebp,DWORD PTR [rcx]
  40837e:	jne    408340 <strcmp@plt+0x4bb8>
  408380:	mov    rax,QWORD PTR [rsp]
  408384:	mov    rcx,QWORD PTR [rax+0x8]
  408388:	xor    ebx,ebx
  40838a:	cmp    rcx,rax
  40838d:	je     4084cf <strcmp@plt+0x4d47>
  408393:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40839d:	nop    DWORD PTR [rax]
  4083a0:	mov    rax,QWORD PTR [rcx+0x10]
  4083a4:	mov    rbp,QWORD PTR [rax]
  4083a7:	test   rbp,rbp
  4083aa:	mov    QWORD PTR [rsp+0x8],rcx
  4083af:	je     4084bc <strcmp@plt+0x4d34>
  4083b5:	xor    r13d,r13d
  4083b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4083c0:	cmp    QWORD PTR [rbp+0x8],0x0
  4083c5:	je     40846c <strcmp@plt+0x4ce4>
  4083cb:	mov    rax,QWORD PTR [rbp+0x28]
  4083cf:	mov    r15,QWORD PTR [rax]
  4083d2:	test   r15,r15
  4083d5:	je     40846c <strcmp@plt+0x4ce4>
  4083db:	xor    r14d,r14d
  4083de:	xchg   ax,ax
  4083e0:	cmp    QWORD PTR [r15+0x8],0x0
  4083e5:	je     408420 <strcmp@plt+0x4c98>
  4083e7:	mov    rdi,QWORD PTR [r15+0x28]
  4083eb:	test   rdi,rdi
  4083ee:	je     408420 <strcmp@plt+0x4c98>
  4083f0:	call   431b40 <strcmp@plt+0x2e3b8>
  4083f5:	test   rax,rax
  4083f8:	je     408420 <strcmp@plt+0x4c98>
  4083fa:	cmp    DWORD PTR [rax+0x18],0x2
  4083fe:	jne    408420 <strcmp@plt+0x4c98>
  408400:	mov    rdi,rax
  408403:	call   423200 <strcmp@plt+0x1fa78>
  408408:	movzx  eax,ax
  40840b:	xor    ecx,ecx
  40840d:	cmp    eax,r12d
  408410:	sete   cl
  408413:	add    ebx,ecx
  408415:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40841f:	nop
  408420:	mov    rax,QWORD PTR [r15+0x10]
  408424:	mov    rcx,QWORD PTR [r15+0x18]
  408428:	test   rax,rax
  40842b:	je     408440 <strcmp@plt+0x4cb8>
  40842d:	test   rcx,rcx
  408430:	je     408460 <strcmp@plt+0x4cd8>
  408432:	mov    QWORD PTR [rsp+r14*8+0x10],rcx
  408437:	add    r14,0x1
  40843b:	jmp    408460 <strcmp@plt+0x4cd8>
  40843d:	nop    DWORD PTR [rax]
  408440:	test   rcx,rcx
  408443:	je     40844a <strcmp@plt+0x4cc2>
  408445:	mov    rax,rcx
  408448:	jmp    408460 <strcmp@plt+0x4cd8>
  40844a:	test   r14,r14
  40844d:	je     40846c <strcmp@plt+0x4ce4>
  40844f:	mov    rax,QWORD PTR [rsp+r14*8+0x8]
  408454:	add    r14,0xffffffffffffffff
  408458:	nop    DWORD PTR [rax+rax*1+0x0]
  408460:	mov    r15,rax
  408463:	test   rax,rax
  408466:	jne    4083e0 <strcmp@plt+0x4c58>
  40846c:	mov    rax,QWORD PTR [rbp+0x10]
  408470:	mov    rcx,QWORD PTR [rbp+0x18]
  408474:	test   rax,rax
  408477:	je     408490 <strcmp@plt+0x4d08>
  408479:	test   rcx,rcx
  40847c:	je     4084b0 <strcmp@plt+0x4d28>
  40847e:	mov    QWORD PTR [rsp+r13*8+0x420],rcx
  408486:	add    r13,0x1
  40848a:	jmp    4084b0 <strcmp@plt+0x4d28>
  40848c:	nop    DWORD PTR [rax+0x0]
  408490:	test   rcx,rcx
  408493:	je     40849a <strcmp@plt+0x4d12>
  408495:	mov    rax,rcx
  408498:	jmp    4084b0 <strcmp@plt+0x4d28>
  40849a:	test   r13,r13
  40849d:	je     4084bc <strcmp@plt+0x4d34>
  40849f:	mov    rax,QWORD PTR [rsp+r13*8+0x418]
  4084a7:	add    r13,0xffffffffffffffff
  4084ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4084b0:	mov    rbp,rax
  4084b3:	test   rax,rax
  4084b6:	jne    4083c0 <strcmp@plt+0x4c38>
  4084bc:	mov    rcx,QWORD PTR [rsp+0x8]
  4084c1:	mov    rcx,QWORD PTR [rcx+0x8]
  4084c5:	cmp    rcx,QWORD PTR [rsp]
  4084c9:	jne    4083a0 <strcmp@plt+0x4c18>
  4084cf:	mov    rdi,QWORD PTR [rsp]
  4084d3:	call   42c250 <strcmp@plt+0x28ac8>
  4084d8:	mov    eax,ebx
  4084da:	add    rsp,0x828
  4084e1:	pop    rbx
  4084e2:	pop    r12
  4084e4:	pop    r13
  4084e6:	pop    r14
  4084e8:	pop    r15
  4084ea:	pop    rbp
  4084eb:	ret    
  4084ec:	nop    DWORD PTR [rax+0x0]
  4084f0:	mov    rax,QWORD PTR [rdi]
  4084f3:	mov    eax,DWORD PTR [rax+0x30]
  4084f6:	ret    
  4084f7:	nop    WORD PTR [rax+rax*1+0x0]
  408500:	push   rbp
  408501:	push   r15
  408503:	push   r14
  408505:	push   r13
  408507:	push   r12
  408509:	push   rbx
  40850a:	sub    rsp,0x828
  408511:	mov    r12d,esi
  408514:	mov    r15,rdi
  408517:	cmp    esi,0x5
  40851a:	jl     40852d <strcmp@plt+0x4da5>
  40851c:	lea    rax,[rip+0x5c88d]        # 464db0 <strcmp@plt+0x61628>
  408523:	mov    eax,DWORD PTR [rax]
  408525:	add    eax,0x4
  408528:	cmp    eax,r12d
  40852b:	jl     40853e <strcmp@plt+0x4db6>
  40852d:	lea    rsi,[rip+0x3b5bd]        # 443af1 <strcmp@plt+0x40369>
  408534:	xor    eax,eax
  408536:	mov    edi,r12d
  408539:	call   42e800 <strcmp@plt+0x2b078>
  40853e:	call   42bbd0 <strcmp@plt+0x28448>
  408543:	mov    rbx,rax
  408546:	mov    rax,QWORD PTR [r15]
  408549:	mov    rdi,QWORD PTR [rax]
  40854c:	mov    rsi,rbx
  40854f:	call   42bcf0 <strcmp@plt+0x28568>
  408554:	mov    rax,QWORD PTR [r15]
  408557:	mov    rdi,QWORD PTR [rax+0x8]
  40855b:	mov    QWORD PTR [rsp+0x8],rbx
  408560:	mov    rsi,rbx
  408563:	call   42bcf0 <strcmp@plt+0x28568>
  408568:	mov    rax,QWORD PTR [r15]
  40856b:	mov    rcx,QWORD PTR [rax+0x10]
  40856f:	mov    rcx,QWORD PTR [rcx]
  408572:	cmp    DWORD PTR [rcx],0x0
  408575:	je     4085d1 <strcmp@plt+0x4e49>
  408577:	xor    ebx,ebx
  408579:	mov    r13d,0x3
  40857f:	xor    ebp,ebp
  408581:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40858b:	nop    DWORD PTR [rax+rax*1+0x0]
  408590:	mov    rdx,QWORD PTR [rcx+0x10]
  408594:	mov    esi,ebp
  408596:	shr    esi,0x4
  408599:	mov    edi,ebx
  40859b:	and    dil,0x1e
  40859f:	shlx   edi,r13d,edi
  4085a4:	test   DWORD PTR [rdx+rsi*4],edi
  4085a7:	jne    4085c0 <strcmp@plt+0x4e38>
  4085a9:	mov    rax,QWORD PTR [rcx+0x20]
  4085ad:	mov    ecx,ebp
  4085af:	mov    rdi,QWORD PTR [rax+rcx*8]
  4085b3:	mov    rsi,QWORD PTR [rsp+0x8]
  4085b8:	call   42bcf0 <strcmp@plt+0x28568>
  4085bd:	mov    rax,QWORD PTR [r15]
  4085c0:	add    ebp,0x1
  4085c3:	mov    rcx,QWORD PTR [rax+0x10]
  4085c7:	mov    rcx,QWORD PTR [rcx]
  4085ca:	add    ebx,0x2
  4085cd:	cmp    ebp,DWORD PTR [rcx]
  4085cf:	jne    408590 <strcmp@plt+0x4e08>
  4085d1:	mov    rcx,QWORD PTR [rax+0x18]
  4085d5:	mov    rcx,QWORD PTR [rcx]
  4085d8:	cmp    DWORD PTR [rcx],0x0
  4085db:	je     408631 <strcmp@plt+0x4ea9>
  4085dd:	xor    ebx,ebx
  4085df:	mov    r13d,0x3
  4085e5:	xor    ebp,ebp
  4085e7:	nop    WORD PTR [rax+rax*1+0x0]
  4085f0:	mov    rdx,QWORD PTR [rcx+0x10]
  4085f4:	mov    esi,ebp
  4085f6:	shr    esi,0x4
  4085f9:	mov    edi,ebx
  4085fb:	and    dil,0x1e
  4085ff:	shlx   edi,r13d,edi
  408604:	test   DWORD PTR [rdx+rsi*4],edi
  408607:	jne    408620 <strcmp@plt+0x4e98>
  408609:	mov    rax,QWORD PTR [rcx+0x20]
  40860d:	mov    ecx,ebp
  40860f:	mov    rdi,QWORD PTR [rax+rcx*8]
  408613:	mov    rsi,QWORD PTR [rsp+0x8]
  408618:	call   42bcf0 <strcmp@plt+0x28568>
  40861d:	mov    rax,QWORD PTR [r15]
  408620:	add    ebp,0x1
  408623:	mov    rcx,QWORD PTR [rax+0x18]
  408627:	mov    rcx,QWORD PTR [rcx]
  40862a:	add    ebx,0x2
  40862d:	cmp    ebp,DWORD PTR [rcx]
  40862f:	jne    4085f0 <strcmp@plt+0x4e68>
  408631:	mov    rdi,QWORD PTR [rax+0x20]
  408635:	mov    rbx,QWORD PTR [rsp+0x8]
  40863a:	mov    rsi,rbx
  40863d:	call   42bcf0 <strcmp@plt+0x28568>
  408642:	mov    rax,QWORD PTR [r15]
  408645:	mov    rdi,QWORD PTR [rax+0x20]
  408649:	mov    rsi,rbx
  40864c:	call   42bcf0 <strcmp@plt+0x28568>
  408651:	mov    r15,QWORD PTR [rbx+0x8]
  408655:	cmp    r15,rbx
  408658:	je     40876b <strcmp@plt+0x4fe3>
  40865e:	xchg   ax,ax
  408660:	mov    rax,QWORD PTR [r15+0x10]
  408664:	mov    rbp,QWORD PTR [rax]
  408667:	test   rbp,rbp
  40866a:	je     40875c <strcmp@plt+0x4fd4>
  408670:	xor    r13d,r13d
  408673:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40867d:	nop    DWORD PTR [rax]
  408680:	cmp    QWORD PTR [rbp+0x8],0x0
  408685:	je     408708 <strcmp@plt+0x4f80>
  40868b:	mov    rax,QWORD PTR [rbp+0x28]
  40868f:	mov    r14,QWORD PTR [rax]
  408692:	test   r14,r14
  408695:	je     408708 <strcmp@plt+0x4f80>
  408697:	xor    ebx,ebx
  408699:	nop    DWORD PTR [rax+0x0]
  4086a0:	cmp    QWORD PTR [r14+0x8],0x0
  4086a5:	je     4086b8 <strcmp@plt+0x4f30>
  4086a7:	mov    rdi,QWORD PTR [r14+0x28]
  4086ab:	test   rdi,rdi
  4086ae:	je     4086b8 <strcmp@plt+0x4f30>
  4086b0:	mov    esi,r12d
  4086b3:	call   431d20 <strcmp@plt+0x2e598>
  4086b8:	mov    rax,QWORD PTR [r14+0x10]
  4086bc:	mov    rcx,QWORD PTR [r14+0x18]
  4086c0:	test   rax,rax
  4086c3:	je     4086e0 <strcmp@plt+0x4f58>
  4086c5:	test   rcx,rcx
  4086c8:	je     408700 <strcmp@plt+0x4f78>
  4086ca:	mov    QWORD PTR [rsp+rbx*8+0x10],rcx
  4086cf:	add    rbx,0x1
  4086d3:	jmp    408700 <strcmp@plt+0x4f78>
  4086d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4086df:	nop
  4086e0:	test   rcx,rcx
  4086e3:	je     4086ea <strcmp@plt+0x4f62>
  4086e5:	mov    rax,rcx
  4086e8:	jmp    408700 <strcmp@plt+0x4f78>
  4086ea:	test   rbx,rbx
  4086ed:	je     408708 <strcmp@plt+0x4f80>
  4086ef:	mov    rax,QWORD PTR [rsp+rbx*8+0x8]
  4086f4:	add    rbx,0xffffffffffffffff
  4086f8:	nop    DWORD PTR [rax+rax*1+0x0]
  408700:	mov    r14,rax
  408703:	test   rax,rax
  408706:	jne    4086a0 <strcmp@plt+0x4f18>
  408708:	mov    rax,QWORD PTR [rbp+0x10]
  40870c:	mov    rcx,QWORD PTR [rbp+0x18]
  408710:	test   rax,rax
  408713:	je     408730 <strcmp@plt+0x4fa8>
  408715:	test   rcx,rcx
  408718:	je     408750 <strcmp@plt+0x4fc8>
  40871a:	mov    QWORD PTR [rsp+r13*8+0x420],rcx
  408722:	add    r13,0x1
  408726:	jmp    408750 <strcmp@plt+0x4fc8>
  408728:	nop    DWORD PTR [rax+rax*1+0x0]
  408730:	test   rcx,rcx
  408733:	je     40873a <strcmp@plt+0x4fb2>
  408735:	mov    rax,rcx
  408738:	jmp    408750 <strcmp@plt+0x4fc8>
  40873a:	test   r13,r13
  40873d:	je     40875c <strcmp@plt+0x4fd4>
  40873f:	mov    rax,QWORD PTR [rsp+r13*8+0x418]
  408747:	add    r13,0xffffffffffffffff
  40874b:	nop    DWORD PTR [rax+rax*1+0x0]
  408750:	mov    rbp,rax
  408753:	test   rax,rax
  408756:	jne    408680 <strcmp@plt+0x4ef8>
  40875c:	mov    r15,QWORD PTR [r15+0x8]
  408760:	cmp    r15,QWORD PTR [rsp+0x8]
  408765:	jne    408660 <strcmp@plt+0x4ed8>
  40876b:	mov    rdi,QWORD PTR [rsp+0x8]
  408770:	call   42c250 <strcmp@plt+0x28ac8>
  408775:	cmp    r12d,0x5
  408779:	jl     40879e <strcmp@plt+0x5016>
  40877b:	lea    rax,[rip+0x5c62e]        # 464db0 <strcmp@plt+0x61628>
  408782:	mov    eax,DWORD PTR [rax]
  408784:	add    eax,0x4
  408787:	cmp    eax,r12d
  40878a:	jge    40879e <strcmp@plt+0x5016>
  40878c:	add    rsp,0x828
  408793:	pop    rbx
  408794:	pop    r12
  408796:	pop    r13
  408798:	pop    r14
  40879a:	pop    r15
  40879c:	pop    rbp
  40879d:	ret    
  40879e:	lea    rsi,[rip+0x3c90a]        # 4450af <strcmp@plt+0x41927>
  4087a5:	xor    eax,eax
  4087a7:	mov    edi,r12d
  4087aa:	add    rsp,0x828
  4087b1:	pop    rbx
  4087b2:	pop    r12
  4087b4:	pop    r13
  4087b6:	pop    r14
  4087b8:	pop    r15
  4087ba:	pop    rbp
  4087bb:	jmp    42e800 <strcmp@plt+0x2b078>
  4087c0:	push   rbx
  4087c1:	mov    edi,0x8
  4087c6:	call   432070 <strcmp@plt+0x2e8e8>
  4087cb:	test   rax,rax
  4087ce:	je     4087eb <strcmp@plt+0x5063>
  4087d0:	mov    rbx,rax
  4087d3:	xor    eax,eax
  4087d5:	call   42ecf0 <strcmp@plt+0x2b568>
  4087da:	mov    QWORD PTR [rbx],rax
  4087dd:	test   rax,rax
  4087e0:	jne    408800 <strcmp@plt+0x5078>
  4087e2:	lea    rsi,[rip+0x3b35e]        # 443b47 <strcmp@plt+0x403bf>
  4087e9:	jmp    4087f2 <strcmp@plt+0x506a>
  4087eb:	lea    rsi,[rip+0x3b338]        # 443b2a <strcmp@plt+0x403a2>
  4087f2:	xor    ebx,ebx
  4087f4:	mov    edi,0x1
  4087f9:	xor    eax,eax
  4087fb:	call   42e800 <strcmp@plt+0x2b078>
  408800:	mov    rax,rbx
  408803:	pop    rbx
  408804:	ret    
  408805:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40880f:	nop
  408810:	push   rbx
  408811:	mov    rbx,rdi
  408814:	mov    rdi,QWORD PTR [rdi]
  408817:	lea    rsi,[rip+0x281c2]        # 4309e0 <strcmp@plt+0x2d258>
  40881e:	call   42ef00 <strcmp@plt+0x2b778>
  408823:	mov    rdi,rbx
  408826:	pop    rbx
  408827:	jmp    403780 <free@plt>
  40882c:	nop    DWORD PTR [rax+0x0]
  408830:	mov    rdi,QWORD PTR [rdi]
  408833:	jmp    42f150 <strcmp@plt+0x2b9c8>
  408838:	nop    DWORD PTR [rax+rax*1+0x0]
  408840:	mov    rdi,QWORD PTR [rdi]
  408843:	jmp    42f580 <strcmp@plt+0x2bdf8>
  408848:	nop    DWORD PTR [rax+rax*1+0x0]
  408850:	push   rbx
  408851:	mov    rdi,QWORD PTR [rdi]
  408854:	call   42fcb0 <strcmp@plt+0x2c528>
  408859:	test   rax,rax
  40885c:	je     40887c <strcmp@plt+0x50f4>
  40885e:	mov    rbx,rax
  408861:	mov    rdi,rax
  408864:	call   430ae0 <strcmp@plt+0x2d358>
  408869:	cmp    DWORD PTR [rax+0x18],0x2
  40886d:	jne    40887e <strcmp@plt+0x50f6>
  40886f:	mov    rdi,rax
  408872:	call   4230a0 <strcmp@plt+0x1f918>
  408877:	test   ax,ax
  40887a:	jne    40887e <strcmp@plt+0x50f6>
  40887c:	xor    ebx,ebx
  40887e:	mov    rax,rbx
  408881:	pop    rbx
  408882:	ret    
  408883:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40888d:	nop    DWORD PTR [rax]
  408890:	mov    rdi,QWORD PTR [rdi]
  408893:	jmp    42fcd0 <strcmp@plt+0x2c548>
  408898:	nop    DWORD PTR [rax+rax*1+0x0]
  4088a0:	push   rbx
  4088a1:	sub    rsp,0x20
  4088a5:	mov    rbx,rdi
  4088a8:	cmp    esi,0xa
  4088ab:	je     4088bb <strcmp@plt+0x5133>
  4088ad:	cmp    esi,0x2
  4088b0:	jne    4088d7 <strcmp@plt+0x514f>
  4088b2:	lea    rdi,[rip+0x3a41b]        # 442cd4 <strcmp@plt+0x3f54c>
  4088b9:	jmp    4088c2 <strcmp@plt+0x513a>
  4088bb:	lea    rdi,[rip+0x3b2a0]        # 443b62 <strcmp@plt+0x403da>
  4088c2:	mov    rsi,rsp
  4088c5:	call   423c60 <strcmp@plt+0x204d8>
  4088ca:	mov    rdi,QWORD PTR [rbx]
  4088cd:	mov    rsi,rsp
  4088d0:	call   42fcd0 <strcmp@plt+0x2c548>
  4088d5:	jmp    4088d9 <strcmp@plt+0x5151>
  4088d7:	xor    eax,eax
  4088d9:	add    rsp,0x20
  4088dd:	pop    rbx
  4088de:	ret    
  4088df:	nop
  4088e0:	push   rbp
  4088e1:	push   r15
  4088e3:	push   r14
  4088e5:	push   r13
  4088e7:	push   r12
  4088e9:	push   rbx
  4088ea:	sub    rsp,0x828
  4088f1:	mov    r12d,esi
  4088f4:	mov    r15,rdi
  4088f7:	cmp    esi,0x5
  4088fa:	jl     408911 <strcmp@plt+0x5189>
  4088fc:	lea    rax,[rip+0x5c4ad]        # 464db0 <strcmp@plt+0x61628>
  408903:	mov    eax,DWORD PTR [rax]
  408905:	add    eax,0x4
  408908:	cmp    eax,r12d
  40890b:	jl     408b6c <strcmp@plt+0x53e4>
  408911:	lea    rsi,[rip+0x3b24f]        # 443b67 <strcmp@plt+0x403df>
  408918:	xor    ebx,ebx
  40891a:	xor    eax,eax
  40891c:	mov    edi,r12d
  40891f:	call   42e800 <strcmp@plt+0x2b078>
  408924:	call   42bbd0 <strcmp@plt+0x28448>
  408929:	mov    rbp,rax
  40892c:	mov    rax,QWORD PTR [r15]
  40892f:	mov    rdi,QWORD PTR [rax]
  408932:	mov    rsi,rbp
  408935:	call   42bcf0 <strcmp@plt+0x28568>
  40893a:	mov    rax,QWORD PTR [r15]
  40893d:	mov    rdi,QWORD PTR [rax+0x8]
  408941:	mov    QWORD PTR [rsp+0x8],rbp
  408946:	mov    rsi,rbp
  408949:	call   42bcf0 <strcmp@plt+0x28568>
  40894e:	mov    rax,QWORD PTR [r15]
  408951:	mov    rcx,QWORD PTR [rax+0x10]
  408955:	mov    rcx,QWORD PTR [rcx]
  408958:	cmp    DWORD PTR [rcx],0x0
  40895b:	je     4089b1 <strcmp@plt+0x5229>
  40895d:	mov    r13d,0x3
  408963:	xor    ebp,ebp
  408965:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40896f:	nop
  408970:	mov    rdx,QWORD PTR [rcx+0x10]
  408974:	mov    esi,ebp
  408976:	shr    esi,0x4
  408979:	mov    edi,ebx
  40897b:	and    dil,0x1e
  40897f:	shlx   edi,r13d,edi
  408984:	test   DWORD PTR [rdx+rsi*4],edi
  408987:	jne    4089a0 <strcmp@plt+0x5218>
  408989:	mov    rax,QWORD PTR [rcx+0x20]
  40898d:	mov    ecx,ebp
  40898f:	mov    rdi,QWORD PTR [rax+rcx*8]
  408993:	mov    rsi,QWORD PTR [rsp+0x8]
  408998:	call   42bcf0 <strcmp@plt+0x28568>
  40899d:	mov    rax,QWORD PTR [r15]
  4089a0:	add    ebp,0x1
  4089a3:	mov    rcx,QWORD PTR [rax+0x10]
  4089a7:	mov    rcx,QWORD PTR [rcx]
  4089aa:	add    ebx,0x2
  4089ad:	cmp    ebp,DWORD PTR [rcx]
  4089af:	jne    408970 <strcmp@plt+0x51e8>
  4089b1:	mov    rcx,QWORD PTR [rax+0x18]
  4089b5:	mov    rcx,QWORD PTR [rcx]
  4089b8:	cmp    DWORD PTR [rcx],0x0
  4089bb:	je     408a11 <strcmp@plt+0x5289>
  4089bd:	xor    ebx,ebx
  4089bf:	mov    r13d,0x3
  4089c5:	xor    ebp,ebp
  4089c7:	nop    WORD PTR [rax+rax*1+0x0]
  4089d0:	mov    rdx,QWORD PTR [rcx+0x10]
  4089d4:	mov    esi,ebp
  4089d6:	shr    esi,0x4
  4089d9:	mov    edi,ebx
  4089db:	and    dil,0x1e
  4089df:	shlx   edi,r13d,edi
  4089e4:	test   DWORD PTR [rdx+rsi*4],edi
  4089e7:	jne    408a00 <strcmp@plt+0x5278>
  4089e9:	mov    rax,QWORD PTR [rcx+0x20]
  4089ed:	mov    ecx,ebp
  4089ef:	mov    rdi,QWORD PTR [rax+rcx*8]
  4089f3:	mov    rsi,QWORD PTR [rsp+0x8]
  4089f8:	call   42bcf0 <strcmp@plt+0x28568>
  4089fd:	mov    rax,QWORD PTR [r15]
  408a00:	add    ebp,0x1
  408a03:	mov    rcx,QWORD PTR [rax+0x18]
  408a07:	mov    rcx,QWORD PTR [rcx]
  408a0a:	add    ebx,0x2
  408a0d:	cmp    ebp,DWORD PTR [rcx]
  408a0f:	jne    4089d0 <strcmp@plt+0x5248>
  408a11:	mov    rdi,QWORD PTR [rax+0x20]
  408a15:	mov    rbx,QWORD PTR [rsp+0x8]
  408a1a:	mov    rsi,rbx
  408a1d:	call   42bcf0 <strcmp@plt+0x28568>
  408a22:	mov    rax,QWORD PTR [r15]
  408a25:	mov    rdi,QWORD PTR [rax+0x20]
  408a29:	mov    rsi,rbx
  408a2c:	call   42bcf0 <strcmp@plt+0x28568>
  408a31:	mov    r15,QWORD PTR [rbx+0x8]
  408a35:	cmp    r15,rbx
  408a38:	je     408b4b <strcmp@plt+0x53c3>
  408a3e:	xchg   ax,ax
  408a40:	mov    rax,QWORD PTR [r15+0x10]
  408a44:	mov    rbp,QWORD PTR [rax]
  408a47:	test   rbp,rbp
  408a4a:	je     408b3c <strcmp@plt+0x53b4>
  408a50:	xor    r13d,r13d
  408a53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a5d:	nop    DWORD PTR [rax]
  408a60:	cmp    QWORD PTR [rbp+0x8],0x0
  408a65:	je     408ae8 <strcmp@plt+0x5360>
  408a6b:	mov    rax,QWORD PTR [rbp+0x28]
  408a6f:	mov    r14,QWORD PTR [rax]
  408a72:	test   r14,r14
  408a75:	je     408ae8 <strcmp@plt+0x5360>
  408a77:	xor    ebx,ebx
  408a79:	nop    DWORD PTR [rax+0x0]
  408a80:	cmp    QWORD PTR [r14+0x8],0x0
  408a85:	je     408a98 <strcmp@plt+0x5310>
  408a87:	mov    rdi,QWORD PTR [r14+0x28]
  408a8b:	test   rdi,rdi
  408a8e:	je     408a98 <strcmp@plt+0x5310>
  408a90:	mov    esi,r12d
  408a93:	call   430b00 <strcmp@plt+0x2d378>
  408a98:	mov    rax,QWORD PTR [r14+0x10]
  408a9c:	mov    rcx,QWORD PTR [r14+0x18]
  408aa0:	test   rax,rax
  408aa3:	je     408ac0 <strcmp@plt+0x5338>
  408aa5:	test   rcx,rcx
  408aa8:	je     408ae0 <strcmp@plt+0x5358>
  408aaa:	mov    QWORD PTR [rsp+rbx*8+0x10],rcx
  408aaf:	add    rbx,0x1
  408ab3:	jmp    408ae0 <strcmp@plt+0x5358>
  408ab5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408abf:	nop
  408ac0:	test   rcx,rcx
  408ac3:	je     408aca <strcmp@plt+0x5342>
  408ac5:	mov    rax,rcx
  408ac8:	jmp    408ae0 <strcmp@plt+0x5358>
  408aca:	test   rbx,rbx
  408acd:	je     408ae8 <strcmp@plt+0x5360>
  408acf:	mov    rax,QWORD PTR [rsp+rbx*8+0x8]
  408ad4:	add    rbx,0xffffffffffffffff
  408ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  408ae0:	mov    r14,rax
  408ae3:	test   rax,rax
  408ae6:	jne    408a80 <strcmp@plt+0x52f8>
  408ae8:	mov    rax,QWORD PTR [rbp+0x10]
  408aec:	mov    rcx,QWORD PTR [rbp+0x18]
  408af0:	test   rax,rax
  408af3:	je     408b10 <strcmp@plt+0x5388>
  408af5:	test   rcx,rcx
  408af8:	je     408b30 <strcmp@plt+0x53a8>
  408afa:	mov    QWORD PTR [rsp+r13*8+0x420],rcx
  408b02:	add    r13,0x1
  408b06:	jmp    408b30 <strcmp@plt+0x53a8>
  408b08:	nop    DWORD PTR [rax+rax*1+0x0]
  408b10:	test   rcx,rcx
  408b13:	je     408b1a <strcmp@plt+0x5392>
  408b15:	mov    rax,rcx
  408b18:	jmp    408b30 <strcmp@plt+0x53a8>
  408b1a:	test   r13,r13
  408b1d:	je     408b3c <strcmp@plt+0x53b4>
  408b1f:	mov    rax,QWORD PTR [rsp+r13*8+0x418]
  408b27:	add    r13,0xffffffffffffffff
  408b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  408b30:	mov    rbp,rax
  408b33:	test   rax,rax
  408b36:	jne    408a60 <strcmp@plt+0x52d8>
  408b3c:	mov    r15,QWORD PTR [r15+0x8]
  408b40:	cmp    r15,QWORD PTR [rsp+0x8]
  408b45:	jne    408a40 <strcmp@plt+0x52b8>
  408b4b:	mov    rdi,QWORD PTR [rsp+0x8]
  408b50:	call   42c250 <strcmp@plt+0x28ac8>
  408b55:	cmp    r12d,0x5
  408b59:	jl     408b7e <strcmp@plt+0x53f6>
  408b5b:	lea    rax,[rip+0x5c24e]        # 464db0 <strcmp@plt+0x61628>
  408b62:	mov    eax,DWORD PTR [rax]
  408b64:	add    eax,0x4
  408b67:	cmp    eax,r12d
  408b6a:	jge    408b7e <strcmp@plt+0x53f6>
  408b6c:	add    rsp,0x828
  408b73:	pop    rbx
  408b74:	pop    r12
  408b76:	pop    r13
  408b78:	pop    r14
  408b7a:	pop    r15
  408b7c:	pop    rbp
  408b7d:	ret    
  408b7e:	lea    rsi,[rip+0x3c52a]        # 4450af <strcmp@plt+0x41927>
  408b85:	xor    eax,eax
  408b87:	mov    edi,r12d
  408b8a:	add    rsp,0x828
  408b91:	pop    rbx
  408b92:	pop    r12
  408b94:	pop    r13
  408b96:	pop    r14
  408b98:	pop    r15
  408b9a:	pop    rbp
  408b9b:	jmp    42e800 <strcmp@plt+0x2b078>
  408ba0:	push   rbp
  408ba1:	push   r15
  408ba3:	push   r14
  408ba5:	push   rbx
  408ba6:	sub    rsp,0x28
  408baa:	mov    rax,QWORD PTR [rdi+0x8]
  408bae:	cmp    rax,QWORD PTR [rip+0x5b433]        # 463fe8 <strcmp@plt+0x60860>
  408bb5:	jne    408c79 <strcmp@plt+0x54f1>
  408bbb:	mov    rbx,rdi
  408bbe:	lea    rdi,[rdi+0x18]
  408bc2:	call   40a590 <strcmp@plt+0x6e08>
  408bc7:	lea    r15,[rsp+0x8]
  408bcc:	xor    r14d,r14d
  408bcf:	xor    esi,esi
  408bd1:	mov    rdi,r15
  408bd4:	call   4231a0 <strcmp@plt+0x1fa18>
  408bd9:	xor    eax,eax
  408bdb:	call   428de0 <strcmp@plt+0x25658>
  408be0:	mov    rbp,rax
  408be3:	mov    rdi,rax
  408be6:	mov    rsi,r15
  408be9:	call   423560 <strcmp@plt+0x1fdd8>
  408bee:	test   rbp,rbp
  408bf1:	je     408c2f <strcmp@plt+0x54a7>
  408bf3:	mov    rdi,rbp
  408bf6:	call   431b60 <strcmp@plt+0x2e3d8>
  408bfb:	mov    QWORD PTR [rbx+0x68],rax
  408bff:	test   rax,rax
  408c02:	je     408c44 <strcmp@plt+0x54bc>
  408c04:	lea    rdi,[rip+0x1825]        # 40a430 <strcmp@plt+0x6ca8>
  408c0b:	call   436260 <strcmp@plt+0x32ad8>
  408c10:	mov    QWORD PTR [rbx+0x70],rax
  408c14:	lea    rax,[rip+0x5c195]        # 464db0 <strcmp@plt+0x61628>
  408c1b:	mov    r14d,0x1
  408c21:	cmp    DWORD PTR [rax],0x0
  408c24:	jle    408c66 <strcmp@plt+0x54de>
  408c26:	lea    rsi,[rip+0x3b22b]        # 443e58 <strcmp@plt+0x406d0>
  408c2d:	jmp    408c5a <strcmp@plt+0x54d2>
  408c2f:	lea    rax,[rip+0x5c17a]        # 464db0 <strcmp@plt+0x61628>
  408c36:	cmp    DWORD PTR [rax],0x0
  408c39:	jle    408c66 <strcmp@plt+0x54de>
  408c3b:	lea    rsi,[rip+0x3b1b4]        # 443df6 <strcmp@plt+0x4066e>
  408c42:	jmp    408c57 <strcmp@plt+0x54cf>
  408c44:	lea    rax,[rip+0x5c165]        # 464db0 <strcmp@plt+0x61628>
  408c4b:	cmp    DWORD PTR [rax],0x0
  408c4e:	jle    408c74 <strcmp@plt+0x54ec>
  408c50:	lea    rsi,[rip+0x3b1cb]        # 443e22 <strcmp@plt+0x4069a>
  408c57:	xor    r14d,r14d
  408c5a:	mov    edi,0x5
  408c5f:	xor    eax,eax
  408c61:	call   42e800 <strcmp@plt+0x2b078>
  408c66:	mov    eax,r14d
  408c69:	add    rsp,0x28
  408c6d:	pop    rbx
  408c6e:	pop    r14
  408c70:	pop    r15
  408c72:	pop    rbp
  408c73:	ret    
  408c74:	xor    r14d,r14d
  408c77:	jmp    408c66 <strcmp@plt+0x54de>
  408c79:	lea    rdi,[rip+0x3b031]        # 443cb1 <strcmp@plt+0x40529>
  408c80:	lea    rsi,[rip+0x3b041]        # 443cc8 <strcmp@plt+0x40540>
  408c87:	lea    rdx,[rip+0x3b048]        # 443cd6 <strcmp@plt+0x4054e>
  408c8e:	call   4321d0 <strcmp@plt+0x2ea48>
  408c93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c9d:	nop    DWORD PTR [rax]
  408ca0:	push   rax
  408ca1:	mov    rax,QWORD PTR [rdi+0x8]
  408ca5:	cmp    rax,QWORD PTR [rip+0x5b33c]        # 463fe8 <strcmp@plt+0x60860>
  408cac:	jne    408cd5 <strcmp@plt+0x554d>
  408cae:	call   403780 <free@plt>
  408cb3:	lea    rax,[rip+0x5c0f6]        # 464db0 <strcmp@plt+0x61628>
  408cba:	cmp    DWORD PTR [rax],0x0
  408cbd:	jle    408cd3 <strcmp@plt+0x554b>
  408cbf:	lea    rsi,[rip+0x3b1ac]        # 443e72 <strcmp@plt+0x406ea>
  408cc6:	mov    edi,0x5
  408ccb:	xor    eax,eax
  408ccd:	pop    rcx
  408cce:	jmp    42e800 <strcmp@plt+0x2b078>
  408cd3:	pop    rax
  408cd4:	ret    
  408cd5:	lea    rdi,[rip+0x3afd5]        # 443cb1 <strcmp@plt+0x40529>
  408cdc:	lea    rsi,[rip+0x3afe5]        # 443cc8 <strcmp@plt+0x40540>
  408ce3:	lea    rdx,[rip+0x3afec]        # 443cd6 <strcmp@plt+0x4054e>
  408cea:	call   4321d0 <strcmp@plt+0x2ea48>
  408cef:	nop
  408cf0:	push   rbx
  408cf1:	mov    rax,QWORD PTR [rdi+0x8]
  408cf5:	cmp    rax,QWORD PTR [rip+0x5b2ec]        # 463fe8 <strcmp@plt+0x60860>
  408cfc:	jne    408d3e <strcmp@plt+0x55b6>
  408cfe:	mov    rbx,rdi
  408d01:	lea    rdi,[rdi+0x18]
  408d05:	call   40a600 <strcmp@plt+0x6e78>
  408d0a:	mov    rdi,QWORD PTR [rbx+0x68]
  408d0e:	call   431c10 <strcmp@plt+0x2e488>
  408d13:	mov    rdi,QWORD PTR [rbx+0x70]
  408d17:	call   436870 <strcmp@plt+0x330e8>
  408d1c:	lea    rax,[rip+0x5c08d]        # 464db0 <strcmp@plt+0x61628>
  408d23:	cmp    DWORD PTR [rax],0x0
  408d26:	jle    408d3c <strcmp@plt+0x55b4>
  408d28:	lea    rsi,[rip+0x3b151]        # 443e80 <strcmp@plt+0x406f8>
  408d2f:	mov    edi,0x5
  408d34:	xor    eax,eax
  408d36:	pop    rbx
  408d37:	jmp    42e800 <strcmp@plt+0x2b078>
  408d3c:	pop    rbx
  408d3d:	ret    
  408d3e:	lea    rdi,[rip+0x3af6c]        # 443cb1 <strcmp@plt+0x40529>
  408d45:	lea    rsi,[rip+0x3af7c]        # 443cc8 <strcmp@plt+0x40540>
  408d4c:	lea    rdx,[rip+0x3af83]        # 443cd6 <strcmp@plt+0x4054e>
  408d53:	call   4321d0 <strcmp@plt+0x2ea48>
  408d58:	nop    DWORD PTR [rax+rax*1+0x0]
  408d60:	push   r14
  408d62:	push   rbx
  408d63:	push   rax
  408d64:	mov    rax,QWORD PTR [rdi+0x8]
  408d68:	cmp    rax,QWORD PTR [rip+0x5b279]        # 463fe8 <strcmp@plt+0x60860>
  408d6f:	jne    408e64 <strcmp@plt+0x56dc>
  408d75:	mov    rbx,rdi
  408d78:	lea    rsi,[rip+0x3b116]        # 443e95 <strcmp@plt+0x4070d>
  408d7f:	mov    edi,0x4
  408d84:	xor    eax,eax
  408d86:	call   42e800 <strcmp@plt+0x2b078>
  408d8b:	mov    rax,QWORD PTR [rbx+0x48]
  408d8f:	cmp    DWORD PTR [rax+0x18],0x0
  408d93:	jne    408db2 <strcmp@plt+0x562a>
  408d95:	lea    rsi,[rip+0x3b10c]        # 443ea8 <strcmp@plt+0x40720>
  408d9c:	mov    edi,0x1
  408da1:	xor    eax,eax
  408da3:	call   42e800 <strcmp@plt+0x2b078>
  408da8:	mov    edi,0x2
  408dad:	call   4374e0 <strcmp@plt+0x33d58>
  408db2:	lea    rsi,[rip+0x3b143]        # 443efc <strcmp@plt+0x40774>
  408db9:	mov    edi,0x4
  408dbe:	xor    eax,eax
  408dc0:	call   42e800 <strcmp@plt+0x2b078>
  408dc5:	mov    rdi,QWORD PTR [rbx+0x70]
  408dc9:	call   4369b0 <strcmp@plt+0x33228>
  408dce:	mov    r14,rax
  408dd1:	lea    rsi,[rip+0x3b150]        # 443f28 <strcmp@plt+0x407a0>
  408dd8:	mov    edi,0x4
  408ddd:	xor    eax,eax
  408ddf:	call   42e800 <strcmp@plt+0x2b078>
  408de4:	lea    rsi,[rip+0x1665]        # 40a450 <strcmp@plt+0x6cc8>
  408deb:	mov    edx,0x4
  408df0:	mov    rdi,r14
  408df3:	call   42bf40 <strcmp@plt+0x287b8>
  408df8:	mov    rdi,r14
  408dfb:	call   42c250 <strcmp@plt+0x28ac8>
  408e00:	mov    rdi,QWORD PTR [rbx+0x30]
  408e04:	mov    esi,0x4
  408e09:	call   4088e0 <strcmp@plt+0x5158>
  408e0e:	mov    rdi,QWORD PTR [rbx+0x68]
  408e12:	call   431ad0 <strcmp@plt+0x2e348>
  408e17:	mov    r14,rax
  408e1a:	lea    rsi,[rip+0x3b12e]        # 443f4f <strcmp@plt+0x407c7>
  408e21:	mov    edi,0x4
  408e26:	xor    eax,eax
  408e28:	call   42e800 <strcmp@plt+0x2b078>
  408e2d:	mov    rax,QWORD PTR [rbx+0x38]
  408e31:	mov    rdi,QWORD PTR [rbx+0x40]
  408e35:	mov    rsi,QWORD PTR [rbx+0x68]
  408e39:	call   QWORD PTR [rax+0x30]
  408e3c:	mov    rdi,r14
  408e3f:	call   429040 <strcmp@plt+0x258b8>
  408e44:	mov    rcx,rax
  408e47:	lea    rsi,[rip+0x3a867]        # 4436b5 <strcmp@plt+0x3ff2d>
  408e4e:	mov    edi,0x4
  408e53:	xor    eax,eax
  408e55:	mov    rdx,rcx
  408e58:	add    rsp,0x8
  408e5c:	pop    rbx
  408e5d:	pop    r14
  408e5f:	jmp    42e800 <strcmp@plt+0x2b078>
  408e64:	lea    rdi,[rip+0x3ae46]        # 443cb1 <strcmp@plt+0x40529>
  408e6b:	lea    rsi,[rip+0x3ae56]        # 443cc8 <strcmp@plt+0x40540>
  408e72:	lea    rdx,[rip+0x3ae5d]        # 443cd6 <strcmp@plt+0x4054e>
  408e79:	call   4321d0 <strcmp@plt+0x2ea48>
  408e7e:	xchg   ax,ax
  408e80:	push   rbp
  408e81:	push   r15
  408e83:	push   r14
  408e85:	push   r13
  408e87:	push   r12
  408e89:	push   rbx
  408e8a:	sub    rsp,0x138
  408e91:	mov    rax,QWORD PTR [rdi+0x8]
  408e95:	cmp    rax,QWORD PTR [rip+0x5b14c]        # 463fe8 <strcmp@plt+0x60860>
  408e9c:	jne    409b3e <strcmp@plt+0x63b6>
  408ea2:	mov    r14,rdx
  408ea5:	mov    rbp,rsi
  408ea8:	mov    r15,rdi
  408eab:	mov    rdi,rsi
  408eae:	call   420d90 <strcmp@plt+0x1d608>
  408eb3:	cmp    eax,0x8
  408eb6:	jne    408f42 <strcmp@plt+0x57ba>
  408ebc:	mov    rdi,rbp
  408ebf:	call   420dc0 <strcmp@plt+0x1d638>
  408ec4:	test   BYTE PTR [rax],0x8
  408ec7:	jne    408f52 <strcmp@plt+0x57ca>
  408ecd:	movzx  eax,WORD PTR [rbp+0x20]
  408ed1:	cmp    rax,0xffff
  408ed7:	je     408edf <strcmp@plt+0x5757>
  408ed9:	add    rax,QWORD PTR [rbp+0x30]
  408edd:	jne    408ef0 <strcmp@plt+0x5768>
  408edf:	mov    rdi,rbp
  408ee2:	call   420df0 <strcmp@plt+0x1d668>
  408ee7:	cmp    eax,0x1
  408eea:	jne    4093ea <strcmp@plt+0x5c62>
  408ef0:	lea    rbx,[rsp+0xa0]
  408ef8:	mov    rdi,rbp
  408efb:	mov    rsi,rbx
  408efe:	call   433490 <strcmp@plt+0x2fd08>
  408f03:	movzx  esi,WORD PTR [rsp+0xe2]
  408f0b:	movzx  edx,WORD PTR [rsp+0xe0]
  408f13:	lea    rcx,[rsp+0xc0]
  408f1b:	lea    r13,[rsp+0xf0]
  408f23:	mov    rdi,r13
  408f26:	mov    r8,rbx
  408f29:	call   435600 <strcmp@plt+0x31e78>
  408f2e:	movzx  r12d,WORD PTR [rbp+0x1e]
  408f33:	cmp    r12,0xffff
  408f3a:	je     408fb0 <strcmp@plt+0x5828>
  408f3c:	add    r12,QWORD PTR [rbp+0x30]
  408f40:	jmp    408fb3 <strcmp@plt+0x582b>
  408f42:	mov    ebx,eax
  408f44:	xor    r12d,r12d
  408f47:	mov    r13,r14
  408f4a:	xor    r14d,r14d
  408f4d:	jmp    408fea <strcmp@plt+0x5862>
  408f52:	mov    rdi,rbp
  408f55:	call   422900 <strcmp@plt+0x1f178>
  408f5a:	cmp    eax,0x2
  408f5d:	jne    408f7c <strcmp@plt+0x57f4>
  408f5f:	lea    rdx,[r14+0x20]
  408f63:	mov    rdi,r15
  408f66:	mov    rsi,rbp
  408f69:	call   40a2f0 <strcmp@plt+0x6b68>
  408f6e:	cmp    eax,0x1
  408f71:	je     408ecd <strcmp@plt+0x5745>
  408f77:	jmp    4093ea <strcmp@plt+0x5c62>
  408f7c:	lea    rax,[rip+0x5be2d]        # 464db0 <strcmp@plt+0x61628>
  408f83:	cmp    DWORD PTR [rax],0x2
  408f86:	jl     4093ea <strcmp@plt+0x5c62>
  408f8c:	mov    rdi,rbp
  408f8f:	call   422900 <strcmp@plt+0x1f178>
  408f94:	mov    ecx,eax
  408f96:	lea    rsi,[rip+0x3b0bd]        # 44405a <strcmp@plt+0x408d2>
  408f9d:	mov    edi,0x6
  408fa2:	xor    eax,eax
  408fa4:	mov    edx,ecx
  408fa6:	call   42e800 <strcmp@plt+0x2b078>
  408fab:	jmp    4093ea <strcmp@plt+0x5c62>
  408fb0:	xor    r12d,r12d
  408fb3:	mov    rdi,rbp
  408fb6:	call   420d90 <strcmp@plt+0x1d608>
  408fbb:	mov    ebx,eax
  408fbd:	lea    rax,[rip+0x5bdec]        # 464db0 <strcmp@plt+0x61628>
  408fc4:	cmp    DWORD PTR [rax],0x0
  408fc7:	jle    408fea <strcmp@plt+0x5862>
  408fc9:	mov    rdi,rbp
  408fcc:	call   422870 <strcmp@plt+0x1f0e8>
  408fd1:	mov    rcx,rax
  408fd4:	lea    rsi,[rip+0x3af8d]        # 443f68 <strcmp@plt+0x407e0>
  408fdb:	mov    edi,0x5
  408fe0:	xor    eax,eax
  408fe2:	mov    rdx,rcx
  408fe5:	call   42e800 <strcmp@plt+0x2b078>
  408fea:	lea    eax,[rbx-0x1]
  408fed:	cmp    eax,0x6
  408ff0:	ja     40909f <strcmp@plt+0x5917>
  408ff6:	lea    rcx,[rip+0x3aba3]        # 443ba0 <strcmp@plt+0x40418>
  408ffd:	movsxd rax,DWORD PTR [rcx+rax*4]
  409001:	add    rax,rcx
  409004:	jmp    rax
  409006:	mov    QWORD PTR [rsp+0x28],r13
  40900b:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  409010:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  409015:	vmovups YMMWORD PTR [rsp+0x50],ymm1
  40901b:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  409021:	xor    eax,eax
  409023:	vzeroupper 
  409026:	call   422f90 <strcmp@plt+0x1f808>
  40902b:	mov    r13,rax
  40902e:	xor    eax,eax
  409030:	call   422f90 <strcmp@plt+0x1f808>
  409035:	mov    r12,rax
  409038:	lea    rbx,[rsp+0x30]
  40903d:	mov    rdi,rbx
  409040:	call   4216c0 <strcmp@plt+0x1df38>
  409045:	mov    rbp,rax
  409048:	mov    rdi,rbx
  40904b:	mov    rsi,r13
  40904e:	call   420f70 <strcmp@plt+0x1d7e8>
  409053:	cmp    eax,0x1
  409056:	jne    409364 <strcmp@plt+0x5bdc>
  40905c:	movzx  ecx,WORD PTR [rbp+0x0]
  409060:	movzx  eax,BYTE PTR [rbp+0x2]
  409064:	shl    eax,0x10
  409067:	or     eax,ecx
  409069:	test   al,0x3
  40906b:	je     409345 <strcmp@plt+0x5bbd>
  409071:	test   al,0x2
  409073:	je     4092b2 <strcmp@plt+0x5b2a>
  409079:	cmp    BYTE PTR [rbp+0x3],0x2
  40907d:	jb     4092b2 <strcmp@plt+0x5b2a>
  409083:	lea    rax,[rip+0x5bd26]        # 464db0 <strcmp@plt+0x61628>
  40908a:	cmp    DWORD PTR [rax],0x0
  40908d:	jle    409364 <strcmp@plt+0x5bdc>
  409093:	lea    rsi,[rip+0x3b019]        # 4440b3 <strcmp@plt+0x4092b>
  40909a:	jmp    409358 <strcmp@plt+0x5bd0>
  40909f:	lea    rax,[rip+0x5bd0a]        # 464db0 <strcmp@plt+0x61628>
  4090a6:	cmp    DWORD PTR [rax],0x0
  4090a9:	jle    4093ea <strcmp@plt+0x5c62>
  4090af:	lea    rsi,[rip+0x3af11]        # 443fc7 <strcmp@plt+0x4083f>
  4090b6:	mov    edi,0x5
  4090bb:	xor    eax,eax
  4090bd:	mov    edx,ebx
  4090bf:	call   42e800 <strcmp@plt+0x2b078>
  4090c4:	jmp    4093c7 <strcmp@plt+0x5c3f>
  4090c9:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  4090ce:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  4090d3:	vmovups YMMWORD PTR [rsp+0x50],ymm1
  4090d9:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  4090df:	lea    rdi,[rsp+0x30]
  4090e4:	vzeroupper 
  4090e7:	call   4216c0 <strcmp@plt+0x1df38>
  4090ec:	test   r12,r12
  4090ef:	je     409271 <strcmp@plt+0x5ae9>
  4090f5:	mov    rbp,rax
  4090f8:	test   BYTE PTR [r12+0x1],0x40
  4090fe:	jne    409226 <strcmp@plt+0x5a9e>
  409104:	test   BYTE PTR [rbp+0x0],0x1
  409108:	jne    409226 <strcmp@plt+0x5a9e>
  40910e:	lea    rax,[rip+0x5bc9b]        # 464db0 <strcmp@plt+0x61628>
  409115:	cmp    DWORD PTR [rax],0x0
  409118:	jle    40937b <strcmp@plt+0x5bf3>
  40911e:	lea    rsi,[rip+0x3b078]        # 44419d <strcmp@plt+0x40a15>
  409125:	jmp    4093b4 <strcmp@plt+0x5c2c>
  40912a:	add    r15,0x18
  40912e:	mov    rdi,r15
  409131:	mov    rsi,rbp
  409134:	mov    rdx,r13
  409137:	call   40a650 <strcmp@plt+0x6ec8>
  40913c:	mov    ebx,eax
  40913e:	cmp    ebx,0x1
  409141:	je     409382 <strcmp@plt+0x5bfa>
  409147:	jmp    4093c7 <strcmp@plt+0x5c3f>
  40914c:	mov    QWORD PTR [rsp+0x28],r13
  409151:	mov    QWORD PTR [rsp+0x80],0x0
  40915d:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  409162:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  409167:	vmovups YMMWORD PTR [rsp+0x50],ymm1
  40916d:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  409173:	lea    rdi,[rsp+0x30]
  409178:	vzeroupper 
  40917b:	call   4216c0 <strcmp@plt+0x1df38>
  409180:	mov    r13,rax
  409183:	lea    rax,[rip+0x6741e]        # 4705a8 <strcmp@plt+0x6ce20>
  40918a:	mov    rdi,QWORD PTR [rax]
  40918d:	mov    rsi,QWORD PTR [r13+0x4]
  409191:	call   432620 <strcmp@plt+0x2ee98>
  409196:	test   rax,rax
  409199:	je     40928d <strcmp@plt+0x5b05>
  40919f:	mov    rdi,rax
  4091a2:	call   4328b0 <strcmp@plt+0x2f128>
  4091a7:	mov    rdi,rax
  4091aa:	call   437430 <strcmp@plt+0x33ca8>
  4091af:	mov    r14,rax
  4091b2:	mov    rbx,QWORD PTR [r15+0x70]
  4091b6:	mov    rdi,QWORD PTR [rax+0x18]
  4091ba:	call   423130 <strcmp@plt+0x1f9a8>
  4091bf:	mov    rdi,rbx
  4091c2:	mov    rsi,rax
  4091c5:	call   436750 <strcmp@plt+0x32fc8>
  4091ca:	test   rax,rax
  4091cd:	je     4092dd <strcmp@plt+0x5b55>
  4091d3:	mov    rbx,rax
  4091d6:	mov    al,BYTE PTR [r13+0x0]
  4091da:	test   al,0x8
  4091dc:	jne    40931b <strcmp@plt+0x5b93>
  4091e2:	lea    rax,[rip+0x5bbc7]        # 464db0 <strcmp@plt+0x61628>
  4091e9:	cmp    DWORD PTR [rax],0x0
  4091ec:	jle    40937b <strcmp@plt+0x5bf3>
  4091f2:	lea    rsi,[rip+0x3b075]        # 44426e <strcmp@plt+0x40ae6>
  4091f9:	jmp    4093b4 <strcmp@plt+0x5c2c>
  4091fe:	lea    rax,[rip+0x5bbab]        # 464db0 <strcmp@plt+0x61628>
  409205:	cmp    DWORD PTR [rax],0x0
  409208:	jle    4093ea <strcmp@plt+0x5c62>
  40920e:	lea    rsi,[rip+0x3ad71]        # 443f86 <strcmp@plt+0x407fe>
  409215:	mov    edi,0x5
  40921a:	xor    eax,eax
  40921c:	call   42e800 <strcmp@plt+0x2b078>
  409221:	jmp    4093c7 <strcmp@plt+0x5c3f>
  409226:	mov    rbx,QWORD PTR [r15+0x70]
  40922a:	mov    rdi,r13
  40922d:	call   423130 <strcmp@plt+0x1f9a8>
  409232:	mov    rdi,rbx
  409235:	mov    rsi,rax
  409238:	call   436750 <strcmp@plt+0x32fc8>
  40923d:	test   rax,rax
  409240:	je     4093a1 <strcmp@plt+0x5c19>
  409246:	cmp    DWORD PTR [rax+0x14],0x0
  40924a:	je     4095b1 <strcmp@plt+0x5e29>
  409250:	mov    r12,rbp
  409253:	lea    rbx,[rsp+0x30]
  409258:	mov    rdi,rbx
  40925b:	call   42e5e0 <strcmp@plt+0x2ae58>
  409260:	mov    rdi,rbx
  409263:	call   422130 <strcmp@plt+0x1e9a8>
  409268:	or     BYTE PTR [rax+0x1],0x20
  40926c:	jmp    4095be <strcmp@plt+0x5e36>
  409271:	lea    rax,[rip+0x5bb38]        # 464db0 <strcmp@plt+0x61628>
  409278:	cmp    DWORD PTR [rax],0x0
  40927b:	jle    40937b <strcmp@plt+0x5bf3>
  409281:	lea    rsi,[rip+0x3aedc]        # 444164 <strcmp@plt+0x409dc>
  409288:	jmp    4093b4 <strcmp@plt+0x5c2c>
  40928d:	lea    rax,[rip+0x5bb1c]        # 464db0 <strcmp@plt+0x61628>
  409294:	cmp    DWORD PTR [rax],0x0
  409297:	jle    40937b <strcmp@plt+0x5bf3>
  40929d:	mov    rdi,QWORD PTR [r13+0x4]
  4092a1:	call   432230 <strcmp@plt+0x2eaa8>
  4092a6:	mov    rcx,rax
  4092a9:	lea    rsi,[rip+0x3af83]        # 444233 <strcmp@plt+0x40aab>
  4092b0:	jmp    409300 <strcmp@plt+0x5b78>
  4092b2:	test   al,0x1
  4092b4:	je     409400 <strcmp@plt+0x5c78>
  4092ba:	cmp    BYTE PTR [rbp+0x3],0x2
  4092be:	jb     409400 <strcmp@plt+0x5c78>
  4092c4:	lea    rax,[rip+0x5bae5]        # 464db0 <strcmp@plt+0x61628>
  4092cb:	cmp    DWORD PTR [rax],0x0
  4092ce:	jle    409364 <strcmp@plt+0x5bdc>
  4092d4:	lea    rsi,[rip+0x3ae0c]        # 4440e7 <strcmp@plt+0x4095f>
  4092db:	jmp    409358 <strcmp@plt+0x5bd0>
  4092dd:	lea    rax,[rip+0x5bacc]        # 464db0 <strcmp@plt+0x61628>
  4092e4:	cmp    DWORD PTR [rax],0x0
  4092e7:	jle    40937b <strcmp@plt+0x5bf3>
  4092ed:	mov    rdi,QWORD PTR [r14+0x18]
  4092f1:	call   423130 <strcmp@plt+0x1f9a8>
  4092f6:	mov    rcx,rax
  4092f9:	lea    rsi,[rip+0x3aa13]        # 443d13 <strcmp@plt+0x4058b>
  409300:	xor    ebx,ebx
  409302:	mov    edi,0x5
  409307:	xor    eax,eax
  409309:	mov    rdx,rcx
  40930c:	call   42e800 <strcmp@plt+0x2b078>
  409311:	cmp    ebx,0x1
  409314:	je     409382 <strcmp@plt+0x5bfa>
  409316:	jmp    4093c7 <strcmp@plt+0x5c3f>
  40931b:	test   r12,r12
  40931e:	je     4096b4 <strcmp@plt+0x5f2c>
  409324:	test   BYTE PTR [r12+0x1],0x40
  40932a:	jne    40975d <strcmp@plt+0x5fd5>
  409330:	lea    rax,[rip+0x5ba79]        # 464db0 <strcmp@plt+0x61628>
  409337:	cmp    DWORD PTR [rax],0x0
  40933a:	jle    40937b <strcmp@plt+0x5bf3>
  40933c:	lea    rsi,[rip+0x3afc5]        # 444308 <strcmp@plt+0x40b80>
  409343:	jmp    4093b4 <strcmp@plt+0x5c2c>
  409345:	lea    rax,[rip+0x5ba64]        # 464db0 <strcmp@plt+0x61628>
  40934c:	cmp    DWORD PTR [rax],0x0
  40934f:	jle    409364 <strcmp@plt+0x5bdc>
  409351:	lea    rsi,[rip+0x3ad1b]        # 444073 <strcmp@plt+0x408eb>
  409358:	mov    edi,0x5
  40935d:	xor    eax,eax
  40935f:	call   42e800 <strcmp@plt+0x2b078>
  409364:	xor    edi,edi
  409366:	call   42c250 <strcmp@plt+0x28ac8>
  40936b:	mov    rdi,r13
  40936e:	call   422fa0 <strcmp@plt+0x1f818>
  409373:	mov    rdi,r12
  409376:	call   422fa0 <strcmp@plt+0x1f818>
  40937b:	xor    ebx,ebx
  40937d:	cmp    ebx,0x1
  409380:	jne    4093c7 <strcmp@plt+0x5c3f>
  409382:	lea    rax,[rip+0x5ba27]        # 464db0 <strcmp@plt+0x61628>
  409389:	mov    ebx,0x1
  40938e:	cmp    DWORD PTR [rax],0x3
  409391:	jl     4093ec <strcmp@plt+0x5c64>
  409393:	lea    rsi,[rip+0x3ac8e]        # 444028 <strcmp@plt+0x408a0>
  40939a:	mov    edi,0x7
  40939f:	jmp    4093e1 <strcmp@plt+0x5c59>
  4093a1:	lea    rax,[rip+0x5ba08]        # 464db0 <strcmp@plt+0x61628>
  4093a8:	cmp    DWORD PTR [rax],0x0
  4093ab:	jle    40937b <strcmp@plt+0x5bf3>
  4093ad:	lea    rsi,[rip+0x3ae2f]        # 4441e3 <strcmp@plt+0x40a5b>
  4093b4:	xor    ebx,ebx
  4093b6:	mov    edi,0x5
  4093bb:	xor    eax,eax
  4093bd:	call   42e800 <strcmp@plt+0x2b078>
  4093c2:	cmp    ebx,0x1
  4093c5:	je     409382 <strcmp@plt+0x5bfa>
  4093c7:	lea    rax,[rip+0x5b9e2]        # 464db0 <strcmp@plt+0x61628>
  4093ce:	cmp    DWORD PTR [rax],0x0
  4093d1:	jle    4093ea <strcmp@plt+0x5c62>
  4093d3:	lea    rsi,[rip+0x3ac22]        # 443ffc <strcmp@plt+0x40874>
  4093da:	xor    ebx,ebx
  4093dc:	mov    edi,0x5
  4093e1:	xor    eax,eax
  4093e3:	call   42e800 <strcmp@plt+0x2b078>
  4093e8:	jmp    4093ec <strcmp@plt+0x5c64>
  4093ea:	xor    ebx,ebx
  4093ec:	mov    eax,ebx
  4093ee:	add    rsp,0x138
  4093f5:	pop    rbx
  4093f6:	pop    r12
  4093f8:	pop    r13
  4093fa:	pop    r14
  4093fc:	pop    r15
  4093fe:	pop    rbp
  4093ff:	ret    
  409400:	lea    rdi,[rip+0x19b99]        # 422fa0 <strcmp@plt+0x1f818>
  409407:	call   42bc00 <strcmp@plt+0x28478>
  40940c:	lea    rdi,[rsp+0x30]
  409411:	mov    QWORD PTR [rsp+0x18],rax
  409416:	mov    rsi,rax
  409419:	call   420fe0 <strcmp@plt+0x1d858>
  40941e:	mov    edi,0x2
  409423:	xor    eax,eax
  409425:	call   4221a0 <strcmp@plt+0x1ea18>
  40942a:	mov    QWORD PTR [rsp+0x8],rax
  40942f:	cmp    BYTE PTR [rbp+0x3],0x0
  409433:	je     4094f3 <strcmp@plt+0x5d6b>
  409439:	lea    rax,[r15+0x18]
  40943d:	mov    QWORD PTR [rsp+0x10],rax
  409442:	xor    ebx,ebx
  409444:	lea    rdi,[rsp+0x30]
  409449:	mov    rsi,r12
  40944c:	call   420fa0 <strcmp@plt+0x1d818>
  409451:	cmp    eax,0x1
  409454:	jne    4096d4 <strcmp@plt+0x5f4c>
  40945a:	lea    rax,[rip+0x5b94f]        # 464db0 <strcmp@plt+0x61628>
  409461:	cmp    DWORD PTR [rax],0x0
  409464:	jle    409487 <strcmp@plt+0x5cff>
  409466:	mov    rdi,r12
  409469:	call   423130 <strcmp@plt+0x1f9a8>
  40946e:	mov    rcx,rax
  409471:	mov    edi,0x5
  409476:	xor    eax,eax
  409478:	lea    rsi,[rip+0x3ac9d]        # 44411c <strcmp@plt+0x40994>
  40947f:	mov    rdx,rcx
  409482:	call   42e800 <strcmp@plt+0x2b078>
  409487:	xor    edx,edx
  409489:	xor    ecx,ecx
  40948b:	xor    r8d,r8d
  40948e:	mov    rdi,QWORD PTR [rsp+0x8]
  409493:	mov    rsi,r12
  409496:	call   421a30 <strcmp@plt+0x1e2a8>
  40949b:	cmp    DWORD PTR [r13+0x18],0x0
  4094a0:	je     4094e4 <strcmp@plt+0x5d5c>
  4094a2:	movzx  eax,WORD PTR [rbp+0x0]
  4094a6:	test   al,0x1
  4094a8:	je     4094e4 <strcmp@plt+0x5d5c>
  4094aa:	mov    rdi,r12
  4094ad:	call   4230e0 <strcmp@plt+0x1f958>
  4094b2:	mov    esi,0x1
  4094b7:	mov    rdi,rax
  4094ba:	call   4231a0 <strcmp@plt+0x1fa18>
  4094bf:	mov    rdi,QWORD PTR [rsp+0x10]
  4094c4:	mov    rsi,r12
  4094c7:	mov    rdx,r13
  4094ca:	call   40ae40 <strcmp@plt+0x76b8>
  4094cf:	cmp    eax,0x1
  4094d2:	jne    4096d4 <strcmp@plt+0x5f4c>
  4094d8:	movzx  eax,WORD PTR [rbp+0x0]
  4094dc:	test   al,0x2
  4094de:	je     409b21 <strcmp@plt+0x6399>
  4094e4:	add    ebx,0x1
  4094e7:	movzx  eax,BYTE PTR [rbp+0x3]
  4094eb:	cmp    ebx,eax
  4094ed:	jb     409444 <strcmp@plt+0x5cbc>
  4094f3:	mov    rcx,QWORD PTR [rsp+0x8]
  4094f8:	movzx  eax,WORD PTR [rcx+0x24]
  4094fc:	mov    rcx,QWORD PTR [rcx+0x30]
  409500:	mov    dl,BYTE PTR [rbp+0x0]
  409503:	mov    bl,BYTE PTR [rcx+rax*1]
  409506:	shl    dl,0x2
  409509:	and    dl,0x8
  40950c:	and    bl,0xf7
  40950f:	or     bl,dl
  409511:	mov    BYTE PTR [rcx+rax*1],bl
  409514:	mov    rdx,QWORD PTR [rbp+0x4]
  409518:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  40951d:	lea    r8,[rsp+0xa0]
  409525:	mov    rdi,r15
  409528:	mov    rbp,QWORD PTR [rsp+0x18]
  40952d:	mov    rsi,rbp
  409530:	mov    rdx,QWORD PTR [rsp+0x28]
  409535:	mov    rcx,r14
  409538:	call   407c00 <strcmp@plt+0x4478>
  40953d:	lea    rcx,[rip+0x5b86c]        # 464db0 <strcmp@plt+0x61628>
  409544:	mov    ecx,DWORD PTR [rcx]
  409546:	cmp    eax,0x1
  409549:	jne    4096ed <strcmp@plt+0x5f65>
  40954f:	test   ecx,ecx
  409551:	mov    rbx,QWORD PTR [rsp+0x8]
  409556:	jle    409579 <strcmp@plt+0x5df1>
  409558:	mov    rdi,rbx
  40955b:	call   422870 <strcmp@plt+0x1f0e8>
  409560:	mov    rcx,rax
  409563:	lea    rsi,[rip+0x3abef]        # 444159 <strcmp@plt+0x409d1>
  40956a:	mov    edi,0x5
  40956f:	xor    eax,eax
  409571:	mov    rdx,rcx
  409574:	call   42e800 <strcmp@plt+0x2b078>
  409579:	lea    rdx,[rsp+0xa0]
  409581:	mov    rdi,r15
  409584:	mov    rsi,rbx
  409587:	call   407ab0 <strcmp@plt+0x4328>
  40958c:	mov    rdi,rbp
  40958f:	call   42c250 <strcmp@plt+0x28ac8>
  409594:	mov    rdi,rbx
  409597:	call   42e010 <strcmp@plt+0x2a888>
  40959c:	mov    rdi,r13
  40959f:	call   422fa0 <strcmp@plt+0x1f818>
  4095a4:	mov    rdi,r12
  4095a7:	call   422fa0 <strcmp@plt+0x1f818>
  4095ac:	jmp    4096a1 <strcmp@plt+0x5f19>
  4095b1:	mov    r12,rbp
  4095b4:	lea    rdi,[rsp+0x30]
  4095b9:	call   42e680 <strcmp@plt+0x2aef8>
  4095be:	lea    rbx,[rsp+0xa0]
  4095c6:	mov    esi,0x10f6
  4095cb:	mov    edx,0x10f6
  4095d0:	xor    ecx,ecx
  4095d2:	mov    rdi,rbx
  4095d5:	mov    r8,r13
  4095d8:	call   435600 <strcmp@plt+0x31e78>
  4095dd:	lea    rsi,[rsp+0x30]
  4095e2:	mov    rdi,r15
  4095e5:	mov    rdx,rbx
  4095e8:	call   407ab0 <strcmp@plt+0x4328>
  4095ed:	mov    edi,0x28
  4095f2:	call   432070 <strcmp@plt+0x2e8e8>
  4095f7:	mov    rbx,rax
  4095fa:	test   rax,rax
  4095fd:	je     409639 <strcmp@plt+0x5eb1>
  4095ff:	lea    rdi,[r13+0x20]
  409603:	call   423740 <strcmp@plt+0x1ffb8>
  409608:	mov    QWORD PTR [rbx+0x8],rax
  40960c:	lea    rdi,[r14+0x20]
  409610:	call   423740 <strcmp@plt+0x1ffb8>
  409615:	mov    QWORD PTR [rbx],rax
  409618:	mov    rdi,r14
  40961b:	call   423740 <strcmp@plt+0x1ffb8>
  409620:	mov    QWORD PTR [rbx+0x10],rax
  409624:	mov    rdi,r13
  409627:	call   423740 <strcmp@plt+0x1ffb8>
  40962c:	mov    QWORD PTR [rbx+0x18],rax
  409630:	movzx  eax,WORD PTR [r14+0x42]
  409635:	mov    WORD PTR [rbx+0x20],ax
  409639:	lea    rdx,[rip+0xc80]        # 40a2c0 <strcmp@plt+0x6b38>
  409640:	lea    r8,[rip+0xf09]        # 40a550 <strcmp@plt+0x6dc8>
  409647:	mov    edi,0xe
  40964c:	mov    rsi,r15
  40964f:	mov    rcx,rbx
  409652:	call   4375d0 <strcmp@plt+0x33e48>
  409657:	mov    rbp,rax
  40965a:	lea    rax,[rip+0x66f3f]        # 4705a0 <strcmp@plt+0x6ce18>
  409661:	mov    rdi,QWORD PTR [rax]
  409664:	mov    rsi,rbx
  409667:	mov    rdx,rbp
  40966a:	call   4378d0 <strcmp@plt+0x34148>
  40966f:	lea    rax,[rip+0x66f32]        # 4705a8 <strcmp@plt+0x6ce20>
  409676:	mov    rbx,QWORD PTR [rax]
  409679:	mov    r14,QWORD PTR [r12+0x4]
  40967e:	mov    rdi,rbp
  409681:	call   437450 <strcmp@plt+0x33cc8>
  409686:	mov    rdi,rbx
  409689:	mov    rsi,r14
  40968c:	mov    rdx,rax
  40968f:	call   432280 <strcmp@plt+0x2eaf8>
  409694:	mov    esi,0x2
  409699:	mov    rdi,rbp
  40969c:	call   437460 <strcmp@plt+0x33cd8>
  4096a1:	mov    ebx,0x1
  4096a6:	cmp    ebx,0x1
  4096a9:	je     409382 <strcmp@plt+0x5bfa>
  4096af:	jmp    4093c7 <strcmp@plt+0x5c3f>
  4096b4:	test   al,0x4
  4096b6:	jne    40971b <strcmp@plt+0x5f93>
  4096b8:	lea    rax,[rip+0x5b6f1]        # 464db0 <strcmp@plt+0x61628>
  4096bf:	cmp    DWORD PTR [rax],0x0
  4096c2:	jle    40937b <strcmp@plt+0x5bf3>
  4096c8:	lea    rsi,[rip+0x3abdd]        # 4442ac <strcmp@plt+0x40b24>
  4096cf:	jmp    4093b4 <strcmp@plt+0x5c2c>
  4096d4:	mov    rdi,QWORD PTR [rsp+0x18]
  4096d9:	call   42c250 <strcmp@plt+0x28ac8>
  4096de:	mov    rdi,QWORD PTR [rsp+0x8]
  4096e3:	test   rdi,rdi
  4096e6:	jne    409711 <strcmp@plt+0x5f89>
  4096e8:	jmp    40936b <strcmp@plt+0x5be3>
  4096ed:	test   ecx,ecx
  4096ef:	jle    409704 <strcmp@plt+0x5f7c>
  4096f1:	lea    rsi,[rip+0x3aa31]        # 444129 <strcmp@plt+0x409a1>
  4096f8:	mov    edi,0x5
  4096fd:	xor    eax,eax
  4096ff:	call   42e800 <strcmp@plt+0x2b078>
  409704:	mov    rdi,rbp
  409707:	call   42c250 <strcmp@plt+0x28ac8>
  40970c:	mov    rdi,QWORD PTR [rsp+0x8]
  409711:	call   42e010 <strcmp@plt+0x2a888>
  409716:	jmp    40936b <strcmp@plt+0x5be3>
  40971b:	mov    eax,DWORD PTR [rbp+0x14]
  40971e:	mov    rcx,r13
  409721:	add    rcx,rax
  409724:	mov    QWORD PTR [rsp+0x20],rcx
  409729:	mov    edi,0x1
  40972e:	call   42b420 <strcmp@plt+0x27c98>
  409733:	movzx  eax,ax
  409736:	mov    rsi,QWORD PTR [rsp+0x20]
  40973b:	sub    rsi,rax
  40973e:	add    rsi,0xfffffffffffffffc
  409742:	mov    rdx,QWORD PTR [rbx+0x8]
  409746:	mov    rdi,rbp
  409749:	mov    rbp,rsi
  40974c:	call   422a80 <strcmp@plt+0x1f2f8>
  409751:	mov    rcx,rbp
  409754:	cmp    eax,0x1
  409757:	jne    409a9f <strcmp@plt+0x6317>
  40975d:	mov    QWORD PTR [rsp+0x20],rcx
  409762:	mov    QWORD PTR [rsp+0x78],rbx
  409767:	mov    QWORD PTR [rsp+0x8],r14
  40976c:	lea    rdi,[rsp+0x30]
  409771:	call   422c50 <strcmp@plt+0x1f4c8>
  409776:	lea    rdi,[rip+0x1f753]        # 428ed0 <strcmp@plt+0x25748>
  40977d:	call   42bc00 <strcmp@plt+0x28478>
  409782:	mov    QWORD PTR [rsp+0x10],rax
  409787:	cmp    BYTE PTR [r13+0x3],0x0
  40978c:	je     4097dc <strcmp@plt+0x6054>
  40978e:	lea    rbp,[rsp+0x80]
  409796:	xor    ebx,ebx
  409798:	xor    eax,eax
  40979a:	call   428de0 <strcmp@plt+0x25658>
  40979f:	mov    r14,rax
  4097a2:	lea    rdi,[rsp+0x30]
  4097a7:	mov    rsi,rax
  4097aa:	mov    rdx,rbp
  4097ad:	call   421320 <strcmp@plt+0x1db98>
  4097b2:	cmp    eax,0x1
  4097b5:	jne    409a79 <strcmp@plt+0x62f1>
  4097bb:	mov    rdi,r14
  4097be:	call   4343f0 <strcmp@plt+0x30c68>
  4097c3:	mov    rdi,r14
  4097c6:	mov    rsi,QWORD PTR [rsp+0x10]
  4097cb:	call   42bcf0 <strcmp@plt+0x28568>
  4097d0:	add    ebx,0x1
  4097d3:	movzx  eax,BYTE PTR [r13+0x3]
  4097d8:	cmp    ebx,eax
  4097da:	jb     409798 <strcmp@plt+0x6010>
  4097dc:	lea    rdi,[rsp+0x30]
  4097e1:	lea    rsi,[rsp+0x88]
  4097e9:	lea    rdx,[rsp+0x98]
  4097f1:	call   421670 <strcmp@plt+0x1dee8>
  4097f6:	mov    rax,QWORD PTR [rsp+0x10]
  4097fb:	mov    r14,QWORD PTR [rax+0x8]
  4097ff:	cmp    r14,rax
  409802:	je     4099dc <strcmp@plt+0x6254>
  409808:	lea    rax,[r15+0x18]
  40980c:	mov    QWORD PTR [rsp+0x18],rax
  409811:	mov    r13,QWORD PTR [r14+0x10]
  409815:	mov    rdi,QWORD PTR [r15+0x30]
  409819:	mov    rsi,r13
  40981c:	call   408890 <strcmp@plt+0x5108>
  409821:	test   rax,rax
  409824:	je     40984d <strcmp@plt+0x60c5>
  409826:	mov    rbx,rax
  409829:	mov    rbp,rax
  40982c:	add    rbp,0x30
  409830:	mov    rdi,QWORD PTR [rax+0x30]
  409834:	test   rdi,rdi
  409837:	je     409844 <strcmp@plt+0x60bc>
  409839:	cmp    QWORD PTR [rdi],0x0
  40983d:	jne    40988c <strcmp@plt+0x6104>
  40983f:	call   430ff0 <strcmp@plt+0x2d868>
  409844:	xor    eax,eax
  409846:	call   430f90 <strcmp@plt+0x2d808>
  40984b:	jmp    40987d <strcmp@plt+0x60f5>
  40984d:	mov    rdi,r13
  409850:	call   428e20 <strcmp@plt+0x25698>
  409855:	mov    edx,0x1
  40985a:	mov    ecx,0x1
  40985f:	mov    rdi,QWORD PTR [rsp+0x18]
  409864:	mov    rsi,rax
  409867:	call   40aaa0 <strcmp@plt+0x7318>
  40986c:	mov    rbx,rax
  40986f:	xor    eax,eax
  409871:	call   430f90 <strcmp@plt+0x2d808>
  409876:	mov    rbp,rbx
  409879:	add    rbp,0x30
  40987d:	mov    QWORD PTR [rbp+0x0],rax
  409881:	lea    rax,[rip+0x27768]        # 430ff0 <strcmp@plt+0x2d868>
  409888:	mov    QWORD PTR [rbx+0x38],rax
  40988c:	mov    rax,QWORD PTR [rsp+0x8]
  409891:	mov    rdx,QWORD PTR [rax+0x10]
  409895:	movzx  r8d,WORD PTR [rax+0x20]
  40989a:	mov    rcx,QWORD PTR [rax]
  40989d:	mov    r9,QWORD PTR [rax+0x8]
  4098a1:	lea    rax,[rsp+0x88]
  4098a9:	mov    QWORD PTR [rsp],rax
  4098ad:	mov    rdi,rbx
  4098b0:	mov    rsi,r13
  4098b3:	call   431670 <strcmp@plt+0x2dee8>
  4098b8:	cmp    eax,0x2
  4098bb:	jne    4098d8 <strcmp@plt+0x6150>
  4098bd:	mov    rax,QWORD PTR [r15+0x38]
  4098c1:	mov    rdi,QWORD PTR [r15+0x40]
  4098c5:	mov    rsi,rbx
  4098c8:	call   QWORD PTR [rax+0x38]
  4098cb:	xor    edx,edx
  4098cd:	mov    rdi,r15
  4098d0:	mov    rsi,r13
  4098d3:	call   407ac0 <strcmp@plt+0x4338>
  4098d8:	mov    rax,QWORD PTR [rsp+0x8]
  4098dd:	mov    rdx,QWORD PTR [rax+0x8]
  4098e1:	mov    rdi,rbx
  4098e4:	lea    rsi,[rsp+0x88]
  4098ec:	call   431a20 <strcmp@plt+0x2e298>
  4098f1:	test   rax,rax
  4098f4:	je     409923 <strcmp@plt+0x619b>
  4098f6:	mov    rbp,rax
  4098f9:	lea    rax,[rip+0x66ca0]        # 4705a0 <strcmp@plt+0x6ce18>
  409900:	mov    rdi,QWORD PTR [rax]
  409903:	mov    rsi,rbp
  409906:	call   437930 <strcmp@plt+0x341a8>
  40990b:	test   rax,rax
  40990e:	je     40994b <strcmp@plt+0x61c3>
  409910:	cmp    DWORD PTR [rax+0x18],0x0
  409914:	je     409967 <strcmp@plt+0x61df>
  409916:	mov    rax,QWORD PTR [rax+0x8]
  40991a:	mov    rbx,QWORD PTR [rax+0x10]
  40991e:	jmp    4099c0 <strcmp@plt+0x6238>
  409923:	lea    rax,[rip+0x5b486]        # 464db0 <strcmp@plt+0x61628>
  40992a:	cmp    DWORD PTR [rax],0x0
  40992d:	jle    4099cd <strcmp@plt+0x6245>
  409933:	mov    edi,0x5
  409938:	xor    eax,eax
  40993a:	lea    rsi,[rip+0x3aa5d]        # 44439e <strcmp@plt+0x40c16>
  409941:	call   42e800 <strcmp@plt+0x2b078>
  409946:	jmp    4099cd <strcmp@plt+0x6245>
  40994b:	mov    edi,0x10
  409950:	call   4320b0 <strcmp@plt+0x2e928>
  409955:	mov    r13,rax
  409958:	test   rax,rax
  40995b:	je     40996b <strcmp@plt+0x61e3>
  40995d:	mov    QWORD PTR [r13+0x0],rbx
  409961:	mov    QWORD PTR [r13+0x8],rbp
  409965:	jmp    40998a <strcmp@plt+0x6202>
  409967:	xor    ebx,ebx
  409969:	jmp    4099c0 <strcmp@plt+0x6238>
  40996b:	lea    rax,[rip+0x5b43e]        # 464db0 <strcmp@plt+0x61628>
  409972:	cmp    DWORD PTR [rax],0x2
  409975:	jl     40998a <strcmp@plt+0x6202>
  409977:	mov    edi,0x6
  40997c:	xor    eax,eax
  40997e:	lea    rsi,[rip+0x3aaa0]        # 444425 <strcmp@plt+0x40c9d>
  409985:	call   42e800 <strcmp@plt+0x2b078>
  40998a:	mov    edi,0xd
  40998f:	mov    rsi,r15
  409992:	lea    rdx,[rip+0x887]        # 40a220 <strcmp@plt+0x6a98>
  409999:	mov    rcx,r13
  40999c:	lea    r8,[rip+0xbdd]        # 40a580 <strcmp@plt+0x6df8>
  4099a3:	call   437580 <strcmp@plt+0x33df8>
  4099a8:	mov    rbx,rax
  4099ab:	lea    rax,[rip+0x66bee]        # 4705a0 <strcmp@plt+0x6ce18>
  4099b2:	mov    rdi,QWORD PTR [rax]
  4099b5:	mov    rsi,rbp
  4099b8:	mov    rdx,rbx
  4099bb:	call   4378d0 <strcmp@plt+0x34148>
  4099c0:	mov    esi,0xd2
  4099c5:	mov    rdi,rbx
  4099c8:	call   437460 <strcmp@plt+0x33cd8>
  4099cd:	mov    r14,QWORD PTR [r14+0x8]
  4099d1:	cmp    r14,QWORD PTR [rsp+0x10]
  4099d6:	jne    409811 <strcmp@plt+0x6089>
  4099dc:	mov    rdi,QWORD PTR [rsp+0x10]
  4099e1:	call   42c250 <strcmp@plt+0x28ac8>
  4099e6:	test   r12,r12
  4099e9:	mov    rbx,QWORD PTR [rsp+0x28]
  4099ee:	jne    409a48 <strcmp@plt+0x62c0>
  4099f0:	lea    r14,[rsp+0x30]
  4099f5:	xor    edx,edx
  4099f7:	xor    ecx,ecx
  4099f9:	mov    rdi,r14
  4099fc:	mov    rsi,QWORD PTR [rsp+0x20]
  409a01:	call   4229c0 <strcmp@plt+0x1f238>
  409a06:	mov    ebp,DWORD PTR [rsp+0x44]
  409a0a:	mov    rax,QWORD PTR [rsp+0x78]
  409a0f:	mov    edi,DWORD PTR [rax+0x10]
  409a12:	call   42b420 <strcmp@plt+0x27c98>
  409a17:	movzx  eax,ax
  409a1a:	sub    ebp,eax
  409a1c:	mov    DWORD PTR [rsp+0x44],ebp
  409a20:	mov    rdi,r14
  409a23:	call   42e680 <strcmp@plt+0x2aef8>
  409a28:	movzx  esi,WORD PTR [rbx+0x40]
  409a2c:	movzx  edx,WORD PTR [rbx+0x42]
  409a30:	add    rbx,0x20
  409a34:	mov    rax,QWORD PTR [rsp+0x8]
  409a39:	mov    r8,QWORD PTR [rax+0x8]
  409a3d:	mov    rdi,r14
  409a40:	mov    rcx,rbx
  409a43:	call   4331d0 <strcmp@plt+0x2fa48>
  409a48:	lea    rdi,[rsp+0x30]
  409a4d:	call   42e5e0 <strcmp@plt+0x2ae58>
  409a52:	mov    eax,DWORD PTR [r15+0x58]
  409a56:	cmp    eax,0x1
  409a59:	je     409abb <strcmp@plt+0x6333>
  409a5b:	test   eax,eax
  409a5d:	mov    rbx,QWORD PTR [rsp+0x8]
  409a62:	jne    409b0e <strcmp@plt+0x6386>
  409a68:	lea    rdi,[rsp+0x30]
  409a6d:	mov    esi,0xffffff
  409a72:	call   422cb0 <strcmp@plt+0x1f528>
  409a77:	jmp    409ad9 <strcmp@plt+0x6351>
  409a79:	mov    rdi,QWORD PTR [rsp+0x10]
  409a7e:	call   42c250 <strcmp@plt+0x28ac8>
  409a83:	lea    rax,[rip+0x5b326]        # 464db0 <strcmp@plt+0x61628>
  409a8a:	cmp    DWORD PTR [rax],0x0
  409a8d:	jle    40937b <strcmp@plt+0x5bf3>
  409a93:	lea    rsi,[rip+0x3a8b2]        # 44434c <strcmp@plt+0x40bc4>
  409a9a:	jmp    4093b4 <strcmp@plt+0x5c2c>
  409a9f:	lea    rax,[rip+0x5b30a]        # 464db0 <strcmp@plt+0x61628>
  409aa6:	cmp    DWORD PTR [rax],0x0
  409aa9:	jle    40937b <strcmp@plt+0x5bf3>
  409aaf:	lea    rsi,[rip+0x3a834]        # 4442ea <strcmp@plt+0x40b62>
  409ab6:	jmp    4093b4 <strcmp@plt+0x5c2c>
  409abb:	mov    rbx,QWORD PTR [rsp+0x8]
  409ac0:	mov    rdi,QWORD PTR [rbx]
  409ac3:	call   417100 <strcmp@plt+0x13978>
  409ac8:	lea    rdi,[rsp+0x30]
  409acd:	mov    esi,0xffffff
  409ad2:	mov    edx,eax
  409ad4:	call   417150 <strcmp@plt+0x139c8>
  409ad9:	movzx  edx,WORD PTR [rbx+0x20]
  409add:	mov    r8,QWORD PTR [rbx]
  409ae0:	mov    rcx,QWORD PTR [rbx+0x10]
  409ae4:	lea    rbx,[rsp+0xa0]
  409aec:	mov    esi,0x10f6
  409af1:	mov    rdi,rbx
  409af4:	call   435600 <strcmp@plt+0x31e78>
  409af9:	lea    rsi,[rsp+0x30]
  409afe:	mov    rdi,r15
  409b01:	mov    rdx,rbx
  409b04:	call   407ab0 <strcmp@plt+0x4328>
  409b09:	jmp    40913c <strcmp@plt+0x59b4>
  409b0e:	lea    rsi,[rip+0x3a8ce]        # 4443e3 <strcmp@plt+0x40c5b>
  409b15:	xor    ebx,ebx
  409b17:	mov    edi,0x2
  409b1c:	jmp    4093bb <strcmp@plt+0x5c33>
  409b21:	mov    rdi,QWORD PTR [rsp+0x18]
  409b26:	call   42c250 <strcmp@plt+0x28ac8>
  409b2b:	mov    rbx,QWORD PTR [rsp+0x8]
  409b30:	test   rbx,rbx
  409b33:	jne    409594 <strcmp@plt+0x5e0c>
  409b39:	jmp    40959c <strcmp@plt+0x5e14>
  409b3e:	lea    rdi,[rip+0x3a16c]        # 443cb1 <strcmp@plt+0x40529>
  409b45:	lea    rsi,[rip+0x3a17c]        # 443cc8 <strcmp@plt+0x40540>
  409b4c:	lea    rdx,[rip+0x3a183]        # 443cd6 <strcmp@plt+0x4054e>
  409b53:	call   4321d0 <strcmp@plt+0x2ea48>
  409b58:	nop    DWORD PTR [rax+rax*1+0x0]
  409b60:	push   rbp
  409b61:	push   r15
  409b63:	push   r14
  409b65:	push   r12
  409b67:	push   rbx
  409b68:	mov    rax,QWORD PTR [rdi+0x8]
  409b6c:	cmp    rax,QWORD PTR [rip+0x5a475]        # 463fe8 <strcmp@plt+0x60860>
  409b73:	jne    409c88 <strcmp@plt+0x6500>
  409b79:	mov    ebp,edx
  409b7b:	mov    r15,rsi
  409b7e:	mov    r12,rdi
  409b81:	mov    rdi,QWORD PTR [rdi+0x50]
  409b85:	call   436750 <strcmp@plt+0x32fc8>
  409b8a:	test   rax,rax
  409b8d:	je     409c57 <strcmp@plt+0x64cf>
  409b93:	mov    r14,rax
  409b96:	mov    rax,QWORD PTR [rax+0x10]
  409b9a:	mov    rcx,QWORD PTR [rax+0x8]
  409b9e:	cmp    rcx,rax
  409ba1:	je     409bc1 <strcmp@plt+0x6439>
  409ba3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409bad:	nop    DWORD PTR [rax]
  409bb0:	mov    rdx,QWORD PTR [rcx+0x10]
  409bb4:	mov    BYTE PTR [rdx+0x8],bpl
  409bb8:	mov    rcx,QWORD PTR [rcx+0x8]
  409bbc:	cmp    rcx,rax
  409bbf:	jne    409bb0 <strcmp@plt+0x6428>
  409bc1:	mov    rax,QWORD PTR [r14+0x18]
  409bc5:	mov    rcx,QWORD PTR [rax+0x8]
  409bc9:	cmp    rcx,rax
  409bcc:	je     409be1 <strcmp@plt+0x6459>
  409bce:	xchg   ax,ax
  409bd0:	mov    rdx,QWORD PTR [rcx+0x10]
  409bd4:	mov    BYTE PTR [rdx+0x8],bpl
  409bd8:	mov    rcx,QWORD PTR [rcx+0x8]
  409bdc:	cmp    rcx,rax
  409bdf:	jne    409bd0 <strcmp@plt+0x6448>
  409be1:	cmp    BYTE PTR [r14+0x20],0x1
  409be6:	setne  BYTE PTR [r14+0x20]
  409beb:	mov    rax,QWORD PTR [r14+0x8]
  409bef:	mov    rbx,QWORD PTR [rax+0x8]
  409bf3:	cmp    rbx,rax
  409bf6:	je     409c36 <strcmp@plt+0x64ae>
  409bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  409c00:	mov    rbp,QWORD PTR [rbx+0x10]
  409c04:	mov    rax,QWORD PTR [r12+0x38]
  409c09:	mov    rdi,QWORD PTR [r12+0x40]
  409c0e:	mov    rsi,rbp
  409c11:	call   QWORD PTR [rax+0x30]
  409c14:	mov    rdi,rbp
  409c17:	call   431b40 <strcmp@plt+0x2e3b8>
  409c1c:	mov    edx,0x1
  409c21:	mov    rdi,r12
  409c24:	mov    rsi,rax
  409c27:	call   407ac0 <strcmp@plt+0x4338>
  409c2c:	mov    rbx,QWORD PTR [rbx+0x8]
  409c30:	cmp    rbx,QWORD PTR [r14+0x8]
  409c34:	jne    409c00 <strcmp@plt+0x6478>
  409c36:	mov    rax,QWORD PTR [r12+0x38]
  409c3b:	mov    rdi,QWORD PTR [r12+0x40]
  409c40:	mov    rsi,QWORD PTR [r12+0x68]
  409c45:	call   QWORD PTR [rax+0x30]
  409c48:	mov    rdi,r12
  409c4b:	call   407ad0 <strcmp@plt+0x4348>
  409c50:	mov    ebx,0x1
  409c55:	jmp    409c7d <strcmp@plt+0x64f5>
  409c57:	lea    rax,[rip+0x5b152]        # 464db0 <strcmp@plt+0x61628>
  409c5e:	xor    ebx,ebx
  409c60:	cmp    DWORD PTR [rax],0x2
  409c63:	jl     409c7d <strcmp@plt+0x64f5>
  409c65:	lea    rsi,[rip+0x3a816]        # 444482 <strcmp@plt+0x40cfa>
  409c6c:	xor    ebx,ebx
  409c6e:	mov    edi,0x6
  409c73:	xor    eax,eax
  409c75:	mov    rdx,r15
  409c78:	call   42e800 <strcmp@plt+0x2b078>
  409c7d:	mov    eax,ebx
  409c7f:	pop    rbx
  409c80:	pop    r12
  409c82:	pop    r14
  409c84:	pop    r15
  409c86:	pop    rbp
  409c87:	ret    
  409c88:	lea    rdi,[rip+0x3a022]        # 443cb1 <strcmp@plt+0x40529>
  409c8f:	lea    rsi,[rip+0x3a032]        # 443cc8 <strcmp@plt+0x40540>
  409c96:	lea    rdx,[rip+0x3a039]        # 443cd6 <strcmp@plt+0x4054e>
  409c9d:	call   4321d0 <strcmp@plt+0x2ea48>
  409ca2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409cac:	nop    DWORD PTR [rax+0x0]
  409cb0:	push   rbp
  409cb1:	push   r15
  409cb3:	push   r14
  409cb5:	push   r13
  409cb7:	push   r12
  409cb9:	push   rbx
  409cba:	sub    rsp,0x18
  409cbe:	mov    rax,QWORD PTR [rdi+0x8]
  409cc2:	cmp    rax,QWORD PTR [rip+0x5a31f]        # 463fe8 <strcmp@plt+0x60860>
  409cc9:	jne    409ffd <strcmp@plt+0x6875>
  409ccf:	mov    r14,rcx
  409cd2:	mov    r13,rdx
  409cd5:	mov    rbp,rsi
  409cd8:	mov    r12,rdi
  409cdb:	mov    rdi,QWORD PTR [rdi+0x50]
  409cdf:	call   436750 <strcmp@plt+0x32fc8>
  409ce4:	test   rax,rax
  409ce7:	je     409dda <strcmp@plt+0x6652>
  409ced:	mov    rbx,rax
  409cf0:	mov    rdi,r13
  409cf3:	mov    rsi,r14
  409cf6:	call   423970 <strcmp@plt+0x201e8>
  409cfb:	mov    r15d,0x1
  409d01:	test   eax,eax
  409d03:	je     409feb <strcmp@plt+0x6863>
  409d09:	mov    eax,DWORD PTR [r14+0x18]
  409d0d:	cmp    eax,0x1
  409d10:	je     409e0b <strcmp@plt+0x6683>
  409d16:	test   eax,eax
  409d18:	jne    409e35 <strcmp@plt+0x66ad>
  409d1e:	xor    eax,eax
  409d20:	mov    QWORD PTR [rsp+0x8],r13
  409d25:	cmp    DWORD PTR [r13+0x18],0x2
  409d2a:	setne  al
  409d2d:	lea    rcx,[rax*8+0x28]
  409d35:	mov    QWORD PTR [rsp],rcx
  409d39:	mov    QWORD PTR [rsp+0x10],rbx
  409d3e:	mov    r13,QWORD PTR [rbx+rax*8+0x10]
  409d43:	mov    r15,QWORD PTR [r13+0x8]
  409d47:	cmp    r15,r13
  409d4a:	je     409dad <strcmp@plt+0x6625>
  409d4c:	lea    r14,[rip+0x39eb5]        # 443c08 <strcmp@plt+0x40480>
  409d53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d5d:	nop    DWORD PTR [rax]
  409d60:	mov    rbp,QWORD PTR [r15+0x10]
  409d64:	mov    r15,QWORD PTR [r15+0x8]
  409d68:	mov    rax,QWORD PTR [rbp+0x0]
  409d6c:	cmp    DWORD PTR [rax+0x18],0x1
  409d70:	je     409d81 <strcmp@plt+0x65f9>
  409d72:	mov    edi,0x2
  409d77:	xor    eax,eax
  409d79:	mov    rsi,r14
  409d7c:	call   42e800 <strcmp@plt+0x2b078>
  409d81:	mov    rdi,QWORD PTR [r12+0x68]
  409d86:	call   431ad0 <strcmp@plt+0x2e348>
  409d8b:	mov    rbx,rax
  409d8e:	mov    rdi,rax
  409d91:	mov    rsi,rbp
  409d94:	call   429630 <strcmp@plt+0x25ea8>
  409d99:	test   al,al
  409d9b:	je     409da8 <strcmp@plt+0x6620>
  409d9d:	mov    rdi,rbx
  409da0:	mov    rsi,rbp
  409da3:	call   4297f0 <strcmp@plt+0x26068>
  409da8:	cmp    r15,r13
  409dab:	jne    409d60 <strcmp@plt+0x65d8>
  409dad:	mov    rbx,QWORD PTR [rsp+0x10]
  409db2:	mov    rbp,QWORD PTR [rsp]
  409db6:	cmp    QWORD PTR [rbx+rbp*1],0x0
  409dbb:	mov    r15d,0x1
  409dc1:	jne    409fd1 <strcmp@plt+0x6849>
  409dc7:	mov    rdi,QWORD PTR [rsp+0x8]
  409dcc:	call   423740 <strcmp@plt+0x1ffb8>
  409dd1:	mov    QWORD PTR [rbx+rbp*1],rax
  409dd5:	jmp    409fd1 <strcmp@plt+0x6849>
  409dda:	lea    rax,[rip+0x5afcf]        # 464db0 <strcmp@plt+0x61628>
  409de1:	xor    r15d,r15d
  409de4:	cmp    DWORD PTR [rax],0x2
  409de7:	jl     409feb <strcmp@plt+0x6863>
  409ded:	lea    rsi,[rip+0x39dc8]        # 443bbc <strcmp@plt+0x40434>
  409df4:	xor    r15d,r15d
  409df7:	mov    edi,0x6
  409dfc:	xor    eax,eax
  409dfe:	mov    rdx,rbp
  409e01:	call   42e800 <strcmp@plt+0x2b078>
  409e06:	jmp    409feb <strcmp@plt+0x6863>
  409e0b:	mov    rdi,r14
  409e0e:	call   423200 <strcmp@plt+0x1fa78>
  409e13:	movzx  eax,ax
  409e16:	cmp    eax,0x2
  409e19:	je     409e63 <strcmp@plt+0x66db>
  409e1b:	cmp    eax,0xa
  409e1e:	jne    409e35 <strcmp@plt+0x66ad>
  409e20:	mov    QWORD PTR [rsp+0x8],r13
  409e25:	mov    eax,0x30
  409e2a:	mov    QWORD PTR [rsp],rax
  409e2e:	mov    eax,0x18
  409e33:	jmp    409e76 <strcmp@plt+0x66ee>
  409e35:	lea    rax,[rip+0x5af74]        # 464db0 <strcmp@plt+0x61628>
  409e3c:	xor    r15d,r15d
  409e3f:	cmp    DWORD PTR [rax],0x2
  409e42:	jl     409feb <strcmp@plt+0x6863>
  409e48:	lea    rsi,[rip+0x39de9]        # 443c38 <strcmp@plt+0x404b0>
  409e4f:	xor    r15d,r15d
  409e52:	mov    edi,0x6
  409e57:	xor    eax,eax
  409e59:	call   42e800 <strcmp@plt+0x2b078>
  409e5e:	jmp    409feb <strcmp@plt+0x6863>
  409e63:	mov    QWORD PTR [rsp+0x8],r13
  409e68:	mov    eax,0x28
  409e6d:	mov    QWORD PTR [rsp],rax
  409e71:	mov    eax,0x10
  409e76:	mov    QWORD PTR [rsp+0x10],rbx
  409e7b:	mov    rbp,QWORD PTR [rbx+rax*1]
  409e7f:	mov    rbx,QWORD PTR [rbp+0x8]
  409e83:	cmp    rbx,rbp
  409e86:	jne    409ea4 <strcmp@plt+0x671c>
  409e88:	jmp    409f6f <strcmp@plt+0x67e7>
  409e8d:	nop    DWORD PTR [rax]
  409e90:	mov    rdi,r13
  409e93:	mov    rsi,r14
  409e96:	call   428db0 <strcmp@plt+0x25628>
  409e9b:	cmp    rbx,rbp
  409e9e:	je     409f6f <strcmp@plt+0x67e7>
  409ea4:	mov    r13,QWORD PTR [rbx+0x10]
  409ea8:	mov    rbx,QWORD PTR [rbx+0x8]
  409eac:	mov    rax,QWORD PTR [r13+0x0]
  409eb0:	mov    eax,DWORD PTR [rax+0x18]
  409eb3:	cmp    eax,0x1
  409eb6:	je     409e90 <strcmp@plt+0x6708>
  409eb8:	test   eax,eax
  409eba:	jne    409f40 <strcmp@plt+0x67b8>
  409ec0:	mov    rdi,QWORD PTR [r12+0x68]
  409ec5:	call   431ad0 <strcmp@plt+0x2e348>
  409eca:	mov    r15,rax
  409ecd:	mov    rdi,rax
  409ed0:	mov    rsi,r13
  409ed3:	call   429630 <strcmp@plt+0x25ea8>
  409ed8:	test   al,al
  409eda:	je     409e9b <strcmp@plt+0x6713>
  409edc:	mov    rdi,r15
  409edf:	mov    rsi,r14
  409ee2:	call   4293a0 <strcmp@plt+0x25c18>
  409ee7:	test   rax,rax
  409eea:	je     409f58 <strcmp@plt+0x67d0>
  409eec:	lea    rax,[rip+0x5aebd]        # 464db0 <strcmp@plt+0x61628>
  409ef3:	cmp    DWORD PTR [rax],0x2
  409ef6:	jl     409f0b <strcmp@plt+0x6783>
  409ef8:	mov    edi,0x6
  409efd:	xor    eax,eax
  409eff:	lea    rsi,[rip+0x39d67]        # 443c6d <strcmp@plt+0x404e5>
  409f06:	call   42e800 <strcmp@plt+0x2b078>
  409f0b:	xor    esi,esi
  409f0d:	xor    edx,edx
  409f0f:	mov    rdi,r15
  409f12:	call   429550 <strcmp@plt+0x25dc8>
  409f17:	mov    r15,rax
  409f1a:	mov    rdi,QWORD PTR [r12+0x50]
  409f1f:	mov    rsi,r13
  409f22:	call   42cff0 <strcmp@plt+0x29868>
  409f27:	mov    rdi,r13
  409f2a:	mov    rsi,r15
  409f2d:	call   42c170 <strcmp@plt+0x289e8>
  409f32:	cmp    rbx,rbp
  409f35:	jne    409ea4 <strcmp@plt+0x671c>
  409f3b:	jmp    409f6f <strcmp@plt+0x67e7>
  409f3d:	nop    DWORD PTR [rax]
  409f40:	mov    edi,0x2
  409f45:	xor    eax,eax
  409f47:	lea    rsi,[rip+0x39cba]        # 443c08 <strcmp@plt+0x40480>
  409f4e:	call   42e800 <strcmp@plt+0x2b078>
  409f53:	jmp    409e90 <strcmp@plt+0x6708>
  409f58:	mov    rdi,r15
  409f5b:	mov    rsi,r13
  409f5e:	mov    rdx,r14
  409f61:	call   429700 <strcmp@plt+0x25f78>
  409f66:	cmp    rbx,rbp
  409f69:	jne    409ea4 <strcmp@plt+0x671c>
  409f6f:	mov    rbx,QWORD PTR [rsp+0x10]
  409f74:	mov    rbp,QWORD PTR [rsp]
  409f78:	mov    rdi,QWORD PTR [rbx+rbp*1]
  409f7c:	test   rdi,rdi
  409f7f:	mov    r15d,0x1
  409f85:	je     409fa0 <strcmp@plt+0x6818>
  409f87:	mov    rsi,r14
  409f8a:	call   423970 <strcmp@plt+0x201e8>
  409f8f:	test   eax,eax
  409f91:	jne    409fbc <strcmp@plt+0x6834>
  409f93:	mov    rdi,QWORD PTR [rbx+rbp*1]
  409f97:	call   422fa0 <strcmp@plt+0x1f818>
  409f9c:	xor    eax,eax
  409f9e:	jmp    409fb8 <strcmp@plt+0x6830>
  409fa0:	mov    rdi,QWORD PTR [rsp+0x8]
  409fa5:	test   rdi,rdi
  409fa8:	je     409fb1 <strcmp@plt+0x6829>
  409faa:	call   423740 <strcmp@plt+0x1ffb8>
  409faf:	jmp    409fb8 <strcmp@plt+0x6830>
  409fb1:	xor    edi,edi
  409fb3:	call   422ef0 <strcmp@plt+0x1f768>
  409fb8:	mov    QWORD PTR [rbx+rbp*1],rax
  409fbc:	mov    rdi,QWORD PTR [r12+0x68]
  409fc1:	call   431ad0 <strcmp@plt+0x2e348>
  409fc6:	mov    rdi,rax
  409fc9:	mov    rsi,r14
  409fcc:	call   4296b0 <strcmp@plt+0x25f28>
  409fd1:	mov    rax,QWORD PTR [r12+0x38]
  409fd6:	mov    rdi,QWORD PTR [r12+0x40]
  409fdb:	mov    rsi,QWORD PTR [r12+0x68]
  409fe0:	call   QWORD PTR [rax+0x30]
  409fe3:	mov    rdi,r12
  409fe6:	call   407ad0 <strcmp@plt+0x4348>
  409feb:	mov    eax,r15d
  409fee:	add    rsp,0x18
  409ff2:	pop    rbx
  409ff3:	pop    r12
  409ff5:	pop    r13
  409ff7:	pop    r14
  409ff9:	pop    r15
  409ffb:	pop    rbp
  409ffc:	ret    
  409ffd:	lea    rdi,[rip+0x39cad]        # 443cb1 <strcmp@plt+0x40529>
  40a004:	lea    rsi,[rip+0x39cbd]        # 443cc8 <strcmp@plt+0x40540>
  40a00b:	lea    rdx,[rip+0x39cc4]        # 443cd6 <strcmp@plt+0x4054e>
  40a012:	call   4321d0 <strcmp@plt+0x2ea48>
  40a017:	nop    WORD PTR [rax+rax*1+0x0]
  40a020:	mov    eax,0x1
  40a025:	ret    
  40a026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a030:	push   rbp
  40a031:	push   r15
  40a033:	push   r14
  40a035:	push   r13
  40a037:	push   r12
  40a039:	push   rbx
  40a03a:	push   rax
  40a03b:	mov    rax,QWORD PTR [rdi+0x8]
  40a03f:	cmp    rax,QWORD PTR [rip+0x59fa2]        # 463fe8 <strcmp@plt+0x60860>
  40a046:	jne    40a1ce <strcmp@plt+0x6a46>
  40a04c:	mov    r15,rsi
  40a04f:	mov    rbx,rdi
  40a052:	xor    eax,eax
  40a054:	call   4201b0 <strcmp@plt+0x1ca28>
  40a059:	mov    r14,rax
  40a05c:	test   rax,rax
  40a05f:	je     40a095 <strcmp@plt+0x690d>
  40a061:	mov    rax,QWORD PTR [rbx+0x68]
  40a065:	mov    edi,DWORD PTR [r15+0x48]
  40a069:	test   edi,edi
  40a06b:	mov    QWORD PTR [rsp],rax
  40a06f:	je     40a0ad <strcmp@plt+0x6925>
  40a071:	mov    edx,0x20
  40a076:	mov    rsi,r15
  40a079:	call   427b10 <strcmp@plt+0x24388>
  40a07e:	mov    r13,rax
  40a081:	mov    edi,DWORD PTR [r15+0x48]
  40a085:	lea    rsi,[r15+0x20]
  40a089:	mov    edx,0x20
  40a08e:	call   427b10 <strcmp@plt+0x24388>
  40a093:	jmp    40a0c1 <strcmp@plt+0x6939>
  40a095:	lea    rsi,[rip+0x3a434]        # 4444d0 <strcmp@plt+0x40d48>
  40a09c:	mov    edi,0x3
  40a0a1:	xor    eax,eax
  40a0a3:	call   42e800 <strcmp@plt+0x2b078>
  40a0a8:	jmp    40a1bc <strcmp@plt+0x6a34>
  40a0ad:	mov    rdi,r15
  40a0b0:	call   423740 <strcmp@plt+0x1ffb8>
  40a0b5:	mov    r13,rax
  40a0b8:	lea    rdi,[r15+0x20]
  40a0bc:	call   423740 <strcmp@plt+0x1ffb8>
  40a0c1:	mov    rbp,rax
  40a0c4:	mov    rdi,QWORD PTR [rbx+0x30]
  40a0c8:	mov    rsi,rax
  40a0cb:	call   408850 <strcmp@plt+0x50c8>
  40a0d0:	test   rax,rax
  40a0d3:	je     40a12a <strcmp@plt+0x69a2>
  40a0d5:	mov    r12,rax
  40a0d8:	mov    rdi,rax
  40a0db:	call   430ae0 <strcmp@plt+0x2d358>
  40a0e0:	mov    rdi,rax
  40a0e3:	call   423740 <strcmp@plt+0x1ffb8>
  40a0e8:	mov    QWORD PTR [r14],rax
  40a0eb:	cmp    BYTE PTR [r12+0x10],0x0
  40a0f1:	jne    40a18b <strcmp@plt+0x6a03>
  40a0f7:	lea    rax,[rip+0x5acb2]        # 464db0 <strcmp@plt+0x61628>
  40a0fe:	cmp    DWORD PTR [rax],0x2
  40a101:	jl     40a18b <strcmp@plt+0x6a03>
  40a107:	mov    rdi,rbp
  40a10a:	call   423130 <strcmp@plt+0x1f9a8>
  40a10f:	mov    rcx,rax
  40a112:	lea    rsi,[rip+0x3a41f]        # 444538 <strcmp@plt+0x40db0>
  40a119:	mov    edi,0x6
  40a11e:	xor    eax,eax
  40a120:	mov    rdx,rcx
  40a123:	call   42e800 <strcmp@plt+0x2b078>
  40a128:	jmp    40a18b <strcmp@plt+0x6a03>
  40a12a:	lea    r12,[rbx+0x18]
  40a12e:	lea    rax,[rip+0x5ac7b]        # 464db0 <strcmp@plt+0x61628>
  40a135:	cmp    DWORD PTR [rax],0x0
  40a138:	jle    40a15b <strcmp@plt+0x69d3>
  40a13a:	mov    rdi,rbp
  40a13d:	call   423130 <strcmp@plt+0x1f9a8>
  40a142:	mov    rcx,rax
  40a145:	lea    rsi,[rip+0x3a3be]        # 44450a <strcmp@plt+0x40d82>
  40a14c:	mov    edi,0x5
  40a151:	xor    eax,eax
  40a153:	mov    rdx,rcx
  40a156:	call   42e800 <strcmp@plt+0x2b078>
  40a15b:	mov    rdi,r12
  40a15e:	mov    rsi,rbp
  40a161:	mov    rdx,r13
  40a164:	call   40bc90 <strcmp@plt+0x8508>
  40a169:	mov    rdi,QWORD PTR [rbx+0x30]
  40a16d:	mov    rsi,rbp
  40a170:	call   408850 <strcmp@plt+0x50c8>
  40a175:	mov    r12,rax
  40a178:	mov    rdi,rax
  40a17b:	call   430ae0 <strcmp@plt+0x2d358>
  40a180:	mov    rdi,rax
  40a183:	call   423740 <strcmp@plt+0x1ffb8>
  40a188:	mov    QWORD PTR [r14],rax
  40a18b:	mov    rax,QWORD PTR [rbx+0x38]
  40a18f:	mov    rdi,QWORD PTR [rbx+0x40]
  40a193:	xor    ecx,ecx
  40a195:	mov    rsi,QWORD PTR [rsp]
  40a199:	mov    rdx,r12
  40a19c:	mov    r8,r15
  40a19f:	mov    r9,r14
  40a1a2:	call   QWORD PTR [rax+0x40]
  40a1a5:	mov    eax,DWORD PTR [rbx+0x58]
  40a1a8:	mov    DWORD PTR [r14+0x14],eax
  40a1ac:	mov    rdi,r13
  40a1af:	call   422fa0 <strcmp@plt+0x1f818>
  40a1b4:	mov    rdi,rbp
  40a1b7:	call   422fa0 <strcmp@plt+0x1f818>
  40a1bc:	mov    rax,r14
  40a1bf:	add    rsp,0x8
  40a1c3:	pop    rbx
  40a1c4:	pop    r12
  40a1c6:	pop    r13
  40a1c8:	pop    r14
  40a1ca:	pop    r15
  40a1cc:	pop    rbp
  40a1cd:	ret    
  40a1ce:	lea    rdi,[rip+0x39adc]        # 443cb1 <strcmp@plt+0x40529>
  40a1d5:	lea    rsi,[rip+0x39aec]        # 443cc8 <strcmp@plt+0x40540>
  40a1dc:	lea    rdx,[rip+0x39af3]        # 443cd6 <strcmp@plt+0x4054e>
  40a1e3:	call   4321d0 <strcmp@plt+0x2ea48>
  40a1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1f0:	mov    rax,QWORD PTR [rdi+0x8]
  40a1f4:	cmp    rax,QWORD PTR [rip+0x59ded]        # 463fe8 <strcmp@plt+0x60860>
  40a1fb:	jne    40a201 <strcmp@plt+0x6a79>
  40a1fd:	mov    rax,rdi
  40a200:	ret    
  40a201:	push   rax
  40a202:	lea    rdi,[rip+0x39aa8]        # 443cb1 <strcmp@plt+0x40529>
  40a209:	lea    rsi,[rip+0x39ab8]        # 443cc8 <strcmp@plt+0x40540>
  40a210:	lea    rdx,[rip+0x39abf]        # 443cd6 <strcmp@plt+0x4054e>
  40a217:	call   4321d0 <strcmp@plt+0x2ea48>
  40a21c:	nop    DWORD PTR [rax+0x0]
  40a220:	push   r14
  40a222:	push   rbx
  40a223:	push   rax
  40a224:	mov    rbx,rdi
  40a227:	call   437420 <strcmp@plt+0x33c98>
  40a22c:	mov    r14,rax
  40a22f:	mov    rdi,rbx
  40a232:	call   437430 <strcmp@plt+0x33ca8>
  40a237:	mov    rbx,QWORD PTR [rax]
  40a23a:	mov    rsi,QWORD PTR [rax+0x8]
  40a23e:	mov    rdi,rbx
  40a241:	call   431910 <strcmp@plt+0x2e188>
  40a246:	mov    rax,QWORD PTR [rbx+0x8]
  40a24a:	cmp    WORD PTR [rax+0x20],0x0
  40a24f:	je     40a268 <strcmp@plt+0x6ae0>
  40a251:	mov    rdi,rbx
  40a254:	call   430ae0 <strcmp@plt+0x2d358>
  40a259:	xor    edx,edx
  40a25b:	mov    rdi,r14
  40a25e:	mov    rsi,rax
  40a261:	call   407ac0 <strcmp@plt+0x4338>
  40a266:	jmp    40a2ac <strcmp@plt+0x6b24>
  40a268:	lea    rax,[rip+0x5ab41]        # 464db0 <strcmp@plt+0x61628>
  40a26f:	cmp    DWORD PTR [rax],0x0
  40a272:	jle    40a29d <strcmp@plt+0x6b15>
  40a274:	mov    rdi,rbx
  40a277:	call   430ae0 <strcmp@plt+0x2d358>
  40a27c:	mov    rdi,rax
  40a27f:	call   423130 <strcmp@plt+0x1f9a8>
  40a284:	mov    rcx,rax
  40a287:	lea    rsi,[rip+0x39a6b]        # 443cf9 <strcmp@plt+0x40571>
  40a28e:	mov    edi,0x5
  40a293:	xor    eax,eax
  40a295:	mov    rdx,rcx
  40a298:	call   42e800 <strcmp@plt+0x2b078>
  40a29d:	add    r14,0x18
  40a2a1:	mov    rdi,r14
  40a2a4:	mov    rsi,rbx
  40a2a7:	call   40aa50 <strcmp@plt+0x72c8>
  40a2ac:	mov    eax,0x1
  40a2b1:	add    rsp,0x8
  40a2b5:	pop    rbx
  40a2b6:	pop    r14
  40a2b8:	ret    
  40a2b9:	nop    DWORD PTR [rax+0x0]
  40a2c0:	push   rax
  40a2c1:	call   437430 <strcmp@plt+0x33ca8>
  40a2c6:	lea    rcx,[rip+0x662d3]        # 4705a0 <strcmp@plt+0x6ce18>
  40a2cd:	mov    rsi,QWORD PTR [rcx]
  40a2d0:	lea    rcx,[rip+0x662d1]        # 4705a8 <strcmp@plt+0x6ce20>
  40a2d7:	mov    rdx,QWORD PTR [rcx]
  40a2da:	mov    rdi,rax
  40a2dd:	call   4376b0 <strcmp@plt+0x33f28>
  40a2e2:	mov    eax,0x1
  40a2e7:	pop    rcx
  40a2e8:	ret    
  40a2e9:	nop    DWORD PTR [rax+0x0]
  40a2f0:	push   rbp
  40a2f1:	push   r15
  40a2f3:	push   r14
  40a2f5:	push   rbx
  40a2f6:	push   rax
  40a2f7:	mov    rbp,rdx
  40a2fa:	mov    r14,rsi
  40a2fd:	mov    rbx,QWORD PTR [rdi+0x70]
  40a301:	mov    rdi,rdx
  40a304:	call   423130 <strcmp@plt+0x1f9a8>
  40a309:	mov    rdi,rbx
  40a30c:	mov    rsi,rax
  40a30f:	call   436750 <strcmp@plt+0x32fc8>
  40a314:	test   rax,rax
  40a317:	je     40a377 <strcmp@plt+0x6bef>
  40a319:	mov    rbx,rax
  40a31c:	mov    rdi,r14
  40a31f:	call   422ba0 <strcmp@plt+0x1f418>
  40a324:	mov    r15,rax
  40a327:	mov    rdi,r14
  40a32a:	call   420df0 <strcmp@plt+0x1d668>
  40a32f:	xor    ebp,ebp
  40a331:	cmp    eax,0x1
  40a334:	jne    40a3aa <strcmp@plt+0x6c22>
  40a336:	mov    rdx,QWORD PTR [rbx+0x8]
  40a33a:	mov    rdi,r14
  40a33d:	mov    rsi,r15
  40a340:	call   422a30 <strcmp@plt+0x1f2a8>
  40a345:	mov    ebp,0x1
  40a34a:	cmp    eax,0x1
  40a34d:	je     40a3aa <strcmp@plt+0x6c22>
  40a34f:	lea    rax,[rip+0x5aa5a]        # 464db0 <strcmp@plt+0x61628>
  40a356:	cmp    DWORD PTR [rax],0x0
  40a359:	mov    ebp,0x0
  40a35e:	jle    40a3aa <strcmp@plt+0x6c22>
  40a360:	lea    rsi,[rip+0x399dc]        # 443d43 <strcmp@plt+0x405bb>
  40a367:	xor    ebp,ebp
  40a369:	mov    edi,0x5
  40a36e:	xor    eax,eax
  40a370:	call   42e800 <strcmp@plt+0x2b078>
  40a375:	jmp    40a3aa <strcmp@plt+0x6c22>
  40a377:	lea    rax,[rip+0x5aa32]        # 464db0 <strcmp@plt+0x61628>
  40a37e:	cmp    DWORD PTR [rax],0x0
  40a381:	jle    40a3a8 <strcmp@plt+0x6c20>
  40a383:	mov    rdi,rbp
  40a386:	call   423130 <strcmp@plt+0x1f9a8>
  40a38b:	mov    rcx,rax
  40a38e:	lea    rsi,[rip+0x3997e]        # 443d13 <strcmp@plt+0x4058b>
  40a395:	xor    ebp,ebp
  40a397:	mov    edi,0x5
  40a39c:	xor    eax,eax
  40a39e:	mov    rdx,rcx
  40a3a1:	call   42e800 <strcmp@plt+0x2b078>
  40a3a6:	jmp    40a3aa <strcmp@plt+0x6c22>
  40a3a8:	xor    ebp,ebp
  40a3aa:	mov    eax,ebp
  40a3ac:	add    rsp,0x8
  40a3b0:	pop    rbx
  40a3b1:	pop    r14
  40a3b3:	pop    r15
  40a3b5:	pop    rbp
  40a3b6:	ret    
  40a3b7:	nop    WORD PTR [rax+rax*1+0x0]
  40a3c0:	push   rbp
  40a3c1:	push   r15
  40a3c3:	push   r14
  40a3c5:	push   rbx
  40a3c6:	push   rax
  40a3c7:	mov    r14d,edx
  40a3ca:	mov    r15,rsi
  40a3cd:	mov    rbp,rdi
  40a3d0:	mov    edi,0x18
  40a3d5:	call   432070 <strcmp@plt+0x2e8e8>
  40a3da:	test   rax,rax
  40a3dd:	je     40a406 <strcmp@plt+0x6c7e>
  40a3df:	mov    rbx,rax
  40a3e2:	mov    rdi,rbp
  40a3e5:	call   423740 <strcmp@plt+0x1ffb8>
  40a3ea:	mov    QWORD PTR [rbx],rax
  40a3ed:	mov    rdi,r15
  40a3f0:	call   403700 <strdup@plt>
  40a3f5:	mov    QWORD PTR [rbx+0x8],rax
  40a3f9:	mov    DWORD PTR [rbx+0x10],0x1
  40a400:	mov    DWORD PTR [rbx+0x14],r14d
  40a404:	jmp    40a41b <strcmp@plt+0x6c93>
  40a406:	lea    rsi,[rip+0x3995c]        # 443d69 <strcmp@plt+0x405e1>
  40a40d:	xor    ebx,ebx
  40a40f:	mov    edi,0x3
  40a414:	xor    eax,eax
  40a416:	call   42e800 <strcmp@plt+0x2b078>
  40a41b:	mov    rax,rbx
  40a41e:	add    rsp,0x8
  40a422:	pop    rbx
  40a423:	pop    r14
  40a425:	pop    r15
  40a427:	pop    rbp
  40a428:	ret    
  40a429:	nop    DWORD PTR [rax+0x0]
  40a430:	push   rbx
  40a431:	mov    rbx,rdi
  40a434:	mov    rdi,QWORD PTR [rdi]
  40a437:	call   422fa0 <strcmp@plt+0x1f818>
  40a43c:	mov    rdi,QWORD PTR [rbx+0x8]
  40a440:	call   403780 <free@plt>
  40a445:	mov    rdi,rbx
  40a448:	pop    rbx
  40a449:	jmp    403780 <free@plt>
  40a44e:	xchg   ax,ax
  40a450:	test   rdi,rdi
  40a453:	je     40a519 <strcmp@plt+0x6d91>
  40a459:	push   r15
  40a45b:	push   r14
  40a45d:	push   r13
  40a45f:	push   r12
  40a461:	push   rbx
  40a462:	mov    r14,rdi
  40a465:	mov    BYTE PTR [rip+0x5dd94],0x0        # 468200 <strcmp@plt+0x64a78>
  40a46c:	lea    rbx,[rip+0x5dd8d]        # 468200 <strcmp@plt+0x64a78>
  40a473:	mov    rdi,rbx
  40a476:	call   4031e0 <strlen@plt>
  40a47b:	lea    r12,[rbx+rax*1]
  40a47f:	mov    r15d,0x1f4
  40a485:	mov    r13d,0x1f4
  40a48b:	sub    r13,rax
  40a48e:	mov    rdi,QWORD PTR [r14]
  40a491:	call   423130 <strcmp@plt+0x1f9a8>
  40a496:	mov    rcx,rax
  40a499:	lea    rdx,[rip+0x3991d]        # 443dbd <strcmp@plt+0x40635>
  40a4a0:	xor    eax,eax
  40a4a2:	mov    rdi,r12
  40a4a5:	mov    rsi,r13
  40a4a8:	call   403620 <snprintf@plt>
  40a4ad:	mov    rdi,rbx
  40a4b0:	call   4031e0 <strlen@plt>
  40a4b5:	lea    rdi,[rbx+rax*1]
  40a4b9:	mov    esi,0x1f4
  40a4be:	sub    rsi,rax
  40a4c1:	lea    rdx,[rip+0x39903]        # 443dcb <strcmp@plt+0x40643>
  40a4c8:	xor    eax,eax
  40a4ca:	call   403620 <snprintf@plt>
  40a4cf:	mov    rdi,rbx
  40a4d2:	call   4031e0 <strlen@plt>
  40a4d7:	add    rbx,rax
  40a4da:	sub    r15,rax
  40a4dd:	cmp    DWORD PTR [r14+0x14],0x0
  40a4e2:	lea    rax,[rip+0x39906]        # 443def <strcmp@plt+0x40667>
  40a4e9:	lea    rcx,[rip+0x39903]        # 443df3 <strcmp@plt+0x4066b>
  40a4f0:	cmove  rcx,rax
  40a4f4:	lea    rdx,[rip+0x398de]        # 443dd9 <strcmp@plt+0x40651>
  40a4fb:	xor    eax,eax
  40a4fd:	mov    rdi,rbx
  40a500:	mov    rsi,r15
  40a503:	call   403620 <snprintf@plt>
  40a508:	pop    rbx
  40a509:	pop    r12
  40a50b:	pop    r13
  40a50d:	pop    r14
  40a50f:	pop    r15
  40a511:	lea    rax,[rip+0x5dce8]        # 468200 <strcmp@plt+0x64a78>
  40a518:	ret    
  40a519:	mov    BYTE PTR [rip+0x5dce6],0x0        # 468206 <strcmp@plt+0x64a7e>
  40a520:	mov    WORD PTR [rip+0x5dcdb],0x5f4c        # 468204 <strcmp@plt+0x64a7c>
  40a529:	mov    DWORD PTR [rip+0x5dccd],0x4c554e5f        # 468200 <strcmp@plt+0x64a78>
  40a533:	lea    rax,[rip+0x5dcc6]        # 468200 <strcmp@plt+0x64a78>
  40a53a:	ret    
  40a53b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a540:	mov    edi,0x78
  40a545:	jmp    432070 <strcmp@plt+0x2e8e8>
  40a54a:	nop    WORD PTR [rax+rax*1+0x0]
  40a550:	push   rbx
  40a551:	mov    rbx,rdi
  40a554:	mov    rdi,QWORD PTR [rdi+0x8]
  40a558:	call   422fa0 <strcmp@plt+0x1f818>
  40a55d:	mov    rdi,QWORD PTR [rbx]
  40a560:	call   422fa0 <strcmp@plt+0x1f818>
  40a565:	mov    rdi,QWORD PTR [rbx+0x10]
  40a569:	call   422fa0 <strcmp@plt+0x1f818>
  40a56e:	mov    rdi,QWORD PTR [rbx+0x18]
  40a572:	call   422fa0 <strcmp@plt+0x1f818>
  40a577:	mov    rdi,rbx
  40a57a:	pop    rbx
  40a57b:	jmp    403780 <free@plt>
  40a580:	jmp    403780 <free@plt>
  40a585:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a58f:	nop
  40a590:	push   rbp
  40a591:	push   rbx
  40a592:	push   rax
  40a593:	mov    rbx,rdi
  40a596:	xor    ebp,ebp
  40a598:	xor    eax,eax
  40a59a:	call   4087c0 <strcmp@plt+0x5038>
  40a59f:	mov    QWORD PTR [rbx+0x18],rax
  40a5a3:	lea    rdi,[rip+0x189f6]        # 422fa0 <strcmp@plt+0x1f818>
  40a5aa:	call   42bc00 <strcmp@plt+0x28478>
  40a5af:	mov    QWORD PTR [rbx+0x30],rax
  40a5b3:	lea    rdi,[rip+0x22756]        # 42cd10 <strcmp@plt+0x29588>
  40a5ba:	call   436260 <strcmp@plt+0x32ad8>
  40a5bf:	mov    QWORD PTR [rbx+0x38],rax
  40a5c3:	cmp    QWORD PTR [rbx+0x18],0x0
  40a5c8:	je     40a5ed <strcmp@plt+0x6e65>
  40a5ca:	test   rax,rax
  40a5cd:	je     40a5ed <strcmp@plt+0x6e65>
  40a5cf:	mov    rax,QWORD PTR [rbx+0x30]
  40a5d3:	test   rax,rax
  40a5d6:	je     40a5ed <strcmp@plt+0x6e65>
  40a5d8:	lea    rdi,[rip+0x189c1]        # 422fa0 <strcmp@plt+0x1f818>
  40a5df:	call   42bc00 <strcmp@plt+0x28478>
  40a5e4:	mov    QWORD PTR [rbx+0x48],rax
  40a5e8:	mov    ebp,0x1
  40a5ed:	mov    eax,ebp
  40a5ef:	add    rsp,0x8
  40a5f3:	pop    rbx
  40a5f4:	pop    rbp
  40a5f5:	ret    
  40a5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a600:	test   rdi,rdi
  40a603:	je     40a63e <strcmp@plt+0x6eb6>
  40a605:	push   rbx
  40a606:	mov    rbx,rdi
  40a609:	mov    rdi,QWORD PTR [rdi+0x38]
  40a60d:	call   436870 <strcmp@plt+0x330e8>
  40a612:	mov    rdi,QWORD PTR [rbx+0x18]
  40a616:	call   408810 <strcmp@plt+0x5088>
  40a61b:	mov    rdi,QWORD PTR [rbx+0x30]
  40a61f:	call   42c250 <strcmp@plt+0x28ac8>
  40a624:	mov    rdi,QWORD PTR [rbx+0x28]
  40a628:	test   rdi,rdi
  40a62b:	je     40a634 <strcmp@plt+0x6eac>
  40a62d:	mov    rax,QWORD PTR [rbx+0x20]
  40a631:	call   QWORD PTR [rax+0x8]
  40a634:	mov    rdi,QWORD PTR [rbx+0x48]
  40a638:	pop    rbx
  40a639:	jmp    42c250 <strcmp@plt+0x28ac8>
  40a63e:	ret    
  40a63f:	nop
  40a640:	mov    rax,rdi
  40a643:	ret    
  40a644:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a64e:	xchg   ax,ax
  40a650:	push   rbp
  40a651:	push   r15
  40a653:	push   r14
  40a655:	push   r13
  40a657:	push   r12
  40a659:	push   rbx
  40a65a:	sub    rsp,0x68
  40a65e:	mov    r14,rdx
  40a661:	mov    r12,rdi
  40a664:	vmovups ymm0,YMMWORD PTR [rsi]
  40a668:	vmovups ymm1,YMMWORD PTR [rsi+0x20]
  40a66d:	vmovups YMMWORD PTR [rsp+0x40],ymm1
  40a673:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  40a679:	lea    rdi,[rsp+0x20]
  40a67e:	vzeroupper 
  40a681:	call   4216c0 <strcmp@plt+0x1df38>
  40a686:	mov    rbp,rax
  40a689:	lea    r13,[rip+0x65f18]        # 4705a8 <strcmp@plt+0x6ce20>
  40a690:	mov    rdi,QWORD PTR [r13+0x0]
  40a694:	mov    rsi,QWORD PTR [rax+0x4]
  40a698:	call   432620 <strcmp@plt+0x2ee98>
  40a69d:	test   rax,rax
  40a6a0:	je     40a6ff <strcmp@plt+0x6f77>
  40a6a2:	mov    rdi,rax
  40a6a5:	call   4328b0 <strcmp@plt+0x2f128>
  40a6aa:	mov    r15,rax
  40a6ad:	test   BYTE PTR [rbp+0x0],0x8
  40a6b1:	jne    40a73a <strcmp@plt+0x6fb2>
  40a6b7:	mov    QWORD PTR [rsp+0x8],r15
  40a6bc:	mov    rdi,r15
  40a6bf:	call   437430 <strcmp@plt+0x33ca8>
  40a6c4:	mov    r15,QWORD PTR [rax]
  40a6c7:	mov    r13b,BYTE PTR [r15+0x10]
  40a6cb:	movzx  ebp,BYTE PTR [rbp+0x3]
  40a6cf:	test   r13b,r13b
  40a6d2:	je     40a7a5 <strcmp@plt+0x701d>
  40a6d8:	mov    eax,ebp
  40a6da:	mov    ebp,0x1
  40a6df:	cmp    al,0x2
  40a6e1:	jb     40a7ec <strcmp@plt+0x7064>
  40a6e7:	lea    rsi,[rip+0x39ec2]        # 4445b0 <strcmp@plt+0x40e28>
  40a6ee:	mov    edi,0x4
  40a6f3:	xor    eax,eax
  40a6f5:	call   42e800 <strcmp@plt+0x2b078>
  40a6fa:	jmp    40a7ec <strcmp@plt+0x7064>
  40a6ff:	lea    rax,[rip+0x5a6aa]        # 464db0 <strcmp@plt+0x61628>
  40a706:	xor    ebx,ebx
  40a708:	cmp    DWORD PTR [rax],0x2
  40a70b:	jl     40a995 <strcmp@plt+0x720d>
  40a711:	mov    rdi,QWORD PTR [rbp+0x4]
  40a715:	call   432230 <strcmp@plt+0x2eaa8>
  40a71a:	mov    rcx,rax
  40a71d:	lea    rsi,[rip+0x39e48]        # 44456c <strcmp@plt+0x40de4>
  40a724:	xor    ebx,ebx
  40a726:	mov    edi,0x6
  40a72b:	xor    eax,eax
  40a72d:	mov    rdx,rcx
  40a730:	call   42e800 <strcmp@plt+0x2b078>
  40a735:	jmp    40a995 <strcmp@plt+0x720d>
  40a73a:	cmp    BYTE PTR [rbp+0x3],0x2
  40a73e:	lea    rbp,[rip+0x5a66b]        # 464db0 <strcmp@plt+0x61628>
  40a745:	jb     40a761 <strcmp@plt+0x6fd9>
  40a747:	mov    eax,DWORD PTR [rbp+0x0]
  40a74a:	test   eax,eax
  40a74c:	jle    40a761 <strcmp@plt+0x6fd9>
  40a74e:	lea    rsi,[rip+0x39fc2]        # 444717 <strcmp@plt+0x40f8f>
  40a755:	mov    edi,0x5
  40a75a:	xor    eax,eax
  40a75c:	call   42e800 <strcmp@plt+0x2b078>
  40a761:	xor    eax,eax
  40a763:	call   428de0 <strcmp@plt+0x25658>
  40a768:	mov    rbx,rax
  40a76b:	lea    rdi,[rsp+0x20]
  40a770:	lea    rdx,[rsp+0x10]
  40a775:	mov    rsi,rax
  40a778:	call   421320 <strcmp@plt+0x1db98>
  40a77d:	cmp    eax,0x1
  40a780:	jne    40a981 <strcmp@plt+0x71f9>
  40a786:	mov    rdi,rbx
  40a789:	call   4298f0 <strcmp@plt+0x26168>
  40a78e:	test   eax,eax
  40a790:	je     40a9af <strcmp@plt+0x7227>
  40a796:	cmp    DWORD PTR [rbp+0x0],0x0
  40a79a:	jg     40a96e <strcmp@plt+0x71e6>
  40a7a0:	jmp    40a981 <strcmp@plt+0x71f9>
  40a7a5:	mov    rbx,QWORD PTR [r15+0x8]
  40a7a9:	lea    rdi,[r12-0x18]
  40a7ae:	xor    eax,eax
  40a7b0:	mov    QWORD PTR [rsp+0x8],rax
  40a7b5:	xor    edx,edx
  40a7b7:	mov    rsi,rbx
  40a7ba:	call   407ac0 <strcmp@plt+0x4338>
  40a7bf:	mov    rdi,QWORD PTR [r12+0x18]
  40a7c4:	mov    rsi,rbx
  40a7c7:	call   408840 <strcmp@plt+0x50b8>
  40a7cc:	mov    rdi,rax
  40a7cf:	call   4309e0 <strcmp@plt+0x2d258>
  40a7d4:	mov    rdi,QWORD PTR [r12+0x18]
  40a7d9:	mov    esi,0x7
  40a7de:	call   4088e0 <strcmp@plt+0x5158>
  40a7e3:	test   bpl,bpl
  40a7e6:	je     40a9c3 <strcmp@plt+0x723b>
  40a7ec:	lea    rax,[r12-0x18]
  40a7f1:	mov    QWORD PTR [rsp+0x18],rax
  40a7f6:	xor    r14d,r14d
  40a7f9:	nop    DWORD PTR [rax+0x0]
  40a800:	xor    eax,eax
  40a802:	call   428de0 <strcmp@plt+0x25658>
  40a807:	mov    rbx,rax
  40a80a:	lea    rdi,[rsp+0x20]
  40a80f:	mov    rsi,rax
  40a812:	lea    rdx,[rsp+0x10]
  40a817:	call   421320 <strcmp@plt+0x1db98>
  40a81c:	cmp    eax,0x1
  40a81f:	jne    40a981 <strcmp@plt+0x71f9>
  40a825:	mov    rdi,rbx
  40a828:	call   4298f0 <strcmp@plt+0x26168>
  40a82d:	test   eax,eax
  40a82f:	jne    40a962 <strcmp@plt+0x71da>
  40a835:	test   r13b,r13b
  40a838:	je     40a890 <strcmp@plt+0x7108>
  40a83a:	mov    rdi,r12
  40a83d:	mov    rsi,rbx
  40a840:	call   40ac80 <strcmp@plt+0x74f8>
  40a845:	cmp    eax,0x1
  40a848:	jne    40a87c <strcmp@plt+0x70f4>
  40a84a:	mov    rdi,QWORD PTR [r12+0x18]
  40a84f:	mov    rsi,rbx
  40a852:	call   408890 <strcmp@plt+0x5108>
  40a857:	mov    r15,rax
  40a85a:	mov    rdi,r12
  40a85d:	mov    rsi,rax
  40a860:	call   40ab80 <strcmp@plt+0x73f8>
  40a865:	xor    edx,edx
  40a867:	mov    rdi,QWORD PTR [rsp+0x18]
  40a86c:	mov    rsi,rbx
  40a86f:	call   407ac0 <strcmp@plt+0x4338>
  40a874:	mov    rdi,rbx
  40a877:	call   428ed0 <strcmp@plt+0x25748>
  40a87c:	mov    rdi,QWORD PTR [r12+0x18]
  40a881:	mov    esi,0x7
  40a886:	call   4088e0 <strcmp@plt+0x5158>
  40a88b:	jmp    40a8cc <strcmp@plt+0x7144>
  40a88d:	nop    DWORD PTR [rax]
  40a890:	mov    rdi,QWORD PTR [r12+0x18]
  40a895:	mov    rsi,rbx
  40a898:	call   408890 <strcmp@plt+0x5108>
  40a89d:	test   rax,rax
  40a8a0:	je     40a8de <strcmp@plt+0x7156>
  40a8a2:	mov    r15,rax
  40a8a5:	lea    rax,[rip+0x5a504]        # 464db0 <strcmp@plt+0x61628>
  40a8ac:	cmp    DWORD PTR [rax],0x2
  40a8af:	jl     40a8c4 <strcmp@plt+0x713c>
  40a8b1:	mov    edi,0x6
  40a8b6:	xor    eax,eax
  40a8b8:	lea    rsi,[rip+0x39d96]        # 444655 <strcmp@plt+0x40ecd>
  40a8bf:	call   42e800 <strcmp@plt+0x2b078>
  40a8c4:	mov    rdi,rbx
  40a8c7:	call   428ed0 <strcmp@plt+0x25748>
  40a8cc:	add    r14d,0x1
  40a8d0:	cmp    r14d,ebp
  40a8d3:	jb     40a800 <strcmp@plt+0x7078>
  40a8d9:	jmp    40a9a6 <strcmp@plt+0x721e>
  40a8de:	mov    edx,0x1
  40a8e3:	mov    ecx,0x1
  40a8e8:	mov    rdi,r12
  40a8eb:	mov    rsi,rbx
  40a8ee:	call   40aaa0 <strcmp@plt+0x7318>
  40a8f3:	test   rax,rax
  40a8f6:	je     40a93c <strcmp@plt+0x71b4>
  40a8f8:	mov    r15,rax
  40a8fb:	mov    rdi,r12
  40a8fe:	mov    rsi,rax
  40a901:	call   40ab80 <strcmp@plt+0x73f8>
  40a906:	lea    rax,[rip+0x5a4a3]        # 464db0 <strcmp@plt+0x61628>
  40a90d:	cmp    DWORD PTR [rax],0x0
  40a910:	jle    40a87c <strcmp@plt+0x70f4>
  40a916:	mov    rdi,rbx
  40a919:	call   423130 <strcmp@plt+0x1f9a8>
  40a91e:	mov    rcx,rax
  40a921:	mov    edi,0x5
  40a926:	xor    eax,eax
  40a928:	lea    rsi,[rip+0x39d72]        # 4446a1 <strcmp@plt+0x40f19>
  40a92f:	mov    rdx,rcx
  40a932:	call   42e800 <strcmp@plt+0x2b078>
  40a937:	jmp    40a87c <strcmp@plt+0x70f4>
  40a93c:	mov    edi,0x2
  40a941:	xor    eax,eax
  40a943:	lea    rsi,[rip+0x39d91]        # 4446db <strcmp@plt+0x40f53>
  40a94a:	mov    rdx,rbx
  40a94d:	call   42e800 <strcmp@plt+0x2b078>
  40a952:	mov    rdi,rbx
  40a955:	call   428ed0 <strcmp@plt+0x25748>
  40a95a:	xor    r15d,r15d
  40a95d:	jmp    40a8cc <strcmp@plt+0x7144>
  40a962:	lea    rax,[rip+0x5a447]        # 464db0 <strcmp@plt+0x61628>
  40a969:	cmp    DWORD PTR [rax],0x0
  40a96c:	jle    40a981 <strcmp@plt+0x71f9>
  40a96e:	lea    rsi,[rip+0x39c86]        # 4445fb <strcmp@plt+0x40e73>
  40a975:	mov    edi,0x5
  40a97a:	xor    eax,eax
  40a97c:	call   42e800 <strcmp@plt+0x2b078>
  40a981:	mov    rdi,QWORD PTR [rsp+0x10]
  40a986:	call   428960 <strcmp@plt+0x251d8>
  40a98b:	mov    rdi,rbx
  40a98e:	call   428ed0 <strcmp@plt+0x25748>
  40a993:	xor    ebx,ebx
  40a995:	mov    eax,ebx
  40a997:	add    rsp,0x68
  40a99b:	pop    rbx
  40a99c:	pop    r12
  40a99e:	pop    r13
  40a9a0:	pop    r14
  40a9a2:	pop    r15
  40a9a4:	pop    rbp
  40a9a5:	ret    
  40a9a6:	lea    r13,[rip+0x65bfb]        # 4705a8 <strcmp@plt+0x6ce20>
  40a9ad:	jmp    40a9f9 <strcmp@plt+0x7271>
  40a9af:	mov    rax,QWORD PTR [rsp+0x10]
  40a9b4:	test   rax,rax
  40a9b7:	mov    QWORD PTR [rsp+0x8],r15
  40a9bc:	je     40a9ca <strcmp@plt+0x7242>
  40a9be:	mov    r14,QWORD PTR [rax]
  40a9c1:	jmp    40a9ce <strcmp@plt+0x7246>
  40a9c3:	mov    ebx,0x1
  40a9c8:	jmp    40a995 <strcmp@plt+0x720d>
  40a9ca:	add    r14,0x20
  40a9ce:	mov    rdi,QWORD PTR [r12+0x18]
  40a9d3:	mov    rsi,rbx
  40a9d6:	call   408890 <strcmp@plt+0x5108>
  40a9db:	test   rax,rax
  40a9de:	je     40aa23 <strcmp@plt+0x729b>
  40a9e0:	mov    r15,rax
  40a9e3:	mov    rdi,r12
  40a9e6:	mov    rsi,rax
  40a9e9:	mov    rdx,r14
  40a9ec:	call   40ad20 <strcmp@plt+0x7598>
  40a9f1:	mov    rdi,rbx
  40a9f4:	call   428ed0 <strcmp@plt+0x25748>
  40a9f9:	mov    ebx,0x1
  40a9fe:	mov    rsi,QWORD PTR [rsp+0x8]
  40aa03:	test   rsi,rsi
  40aa06:	je     40a995 <strcmp@plt+0x720d>
  40aa08:	lea    rax,[rip+0x65b91]        # 4705a0 <strcmp@plt+0x6ce18>
  40aa0f:	mov    rdx,QWORD PTR [rax]
  40aa12:	mov    rcx,QWORD PTR [r13+0x0]
  40aa16:	mov    rdi,r15
  40aa19:	call   437620 <strcmp@plt+0x33e98>
  40aa1e:	jmp    40a995 <strcmp@plt+0x720d>
  40aa23:	xor    ebx,ebx
  40aa25:	cmp    DWORD PTR [rbp+0x0],0x2
  40aa29:	jl     40a995 <strcmp@plt+0x720d>
  40aa2f:	lea    rsi,[rip+0x39d32]        # 444768 <strcmp@plt+0x40fe0>
  40aa36:	xor    ebx,ebx
  40aa38:	mov    edi,0x6
  40aa3d:	xor    eax,eax
  40aa3f:	call   42e800 <strcmp@plt+0x2b078>
  40aa44:	jmp    40a995 <strcmp@plt+0x720d>
  40aa49:	nop    DWORD PTR [rax+0x0]
  40aa50:	push   r14
  40aa52:	push   rbx
  40aa53:	push   rax
  40aa54:	mov    rbx,rdi
  40aa57:	mov    r14,QWORD PTR [rsi+0x8]
  40aa5b:	lea    rdi,[rdi-0x18]
  40aa5f:	xor    edx,edx
  40aa61:	mov    rsi,r14
  40aa64:	call   407ac0 <strcmp@plt+0x4338>
  40aa69:	mov    rdi,QWORD PTR [rbx+0x18]
  40aa6d:	mov    rsi,r14
  40aa70:	call   408840 <strcmp@plt+0x50b8>
  40aa75:	mov    rdi,rax
  40aa78:	call   4309e0 <strcmp@plt+0x2d258>
  40aa7d:	mov    rdi,QWORD PTR [rbx+0x18]
  40aa81:	mov    esi,0x7
  40aa86:	call   4088e0 <strcmp@plt+0x5158>
  40aa8b:	mov    eax,0x1
  40aa90:	add    rsp,0x8
  40aa94:	pop    rbx
  40aa95:	pop    r14
  40aa97:	ret    
  40aa98:	nop    DWORD PTR [rax+rax*1+0x0]
  40aaa0:	push   rbp
  40aaa1:	push   r15
  40aaa3:	push   r14
  40aaa5:	push   r12
  40aaa7:	push   rbx
  40aaa8:	mov    r15d,ecx
  40aaab:	mov    ebp,edx
  40aaad:	mov    r14,rsi
  40aab0:	mov    r12,rdi
  40aab3:	xor    eax,eax
  40aab5:	call   430990 <strcmp@plt+0x2d208>
  40aaba:	test   rax,rax
  40aabd:	je     40ab60 <strcmp@plt+0x73d8>
  40aac3:	mov    rbx,rax
  40aac6:	mov    rdi,rax
  40aac9:	mov    rsi,r14
  40aacc:	cmp    ebp,0x1
  40aacf:	jne    40aad8 <strcmp@plt+0x7350>
  40aad1:	call   4309c0 <strcmp@plt+0x2d238>
  40aad6:	jmp    40aadd <strcmp@plt+0x7355>
  40aad8:	call   4309d0 <strcmp@plt+0x2d248>
  40aadd:	mov    rax,QWORD PTR [r12+0x20]
  40aae2:	mov    rdi,QWORD PTR [r12+0x28]
  40aae7:	mov    rsi,rbx
  40aaea:	call   QWORD PTR [rax+0x20]
  40aaed:	cmp    eax,0x1
  40aaf0:	jne    40ab12 <strcmp@plt+0x738a>
  40aaf2:	mov    rdi,QWORD PTR [r12+0x18]
  40aaf7:	mov    rsi,r14
  40aafa:	mov    rdx,rbx
  40aafd:	call   408830 <strcmp@plt+0x50a8>
  40ab02:	cmp    eax,0x1
  40ab05:	jne    40ab2b <strcmp@plt+0x73a3>
  40ab07:	test   r15b,r15b
  40ab0a:	je     40ab6e <strcmp@plt+0x73e6>
  40ab0c:	mov    BYTE PTR [rbx+0x10],0x1
  40ab10:	jmp    40ab62 <strcmp@plt+0x73da>
  40ab12:	mov    rdi,r14
  40ab15:	call   423130 <strcmp@plt+0x1f9a8>
  40ab1a:	mov    rcx,rax
  40ab1d:	lea    rsi,[rip+0x3a10b]        # 444c2f <strcmp@plt+0x414a7>
  40ab24:	mov    edi,0x3
  40ab29:	jmp    40ab4e <strcmp@plt+0x73c6>
  40ab2b:	lea    rax,[rip+0x5a27e]        # 464db0 <strcmp@plt+0x61628>
  40ab32:	cmp    DWORD PTR [rax],0x0
  40ab35:	jle    40ab58 <strcmp@plt+0x73d0>
  40ab37:	mov    rdi,r14
  40ab3a:	call   423130 <strcmp@plt+0x1f9a8>
  40ab3f:	mov    rcx,rax
  40ab42:	lea    rsi,[rip+0x3a144]        # 444c8d <strcmp@plt+0x41505>
  40ab49:	mov    edi,0x5
  40ab4e:	xor    eax,eax
  40ab50:	mov    rdx,rcx
  40ab53:	call   42e800 <strcmp@plt+0x2b078>
  40ab58:	mov    rdi,rbx
  40ab5b:	call   4309e0 <strcmp@plt+0x2d258>
  40ab60:	xor    ebx,ebx
  40ab62:	mov    rax,rbx
  40ab65:	pop    rbx
  40ab66:	pop    r12
  40ab68:	pop    r14
  40ab6a:	pop    r15
  40ab6c:	pop    rbp
  40ab6d:	ret    
  40ab6e:	mov    BYTE PTR [rbx+0x10],0x0
  40ab72:	jmp    40ab62 <strcmp@plt+0x73da>
  40ab74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab7e:	xchg   ax,ax
  40ab80:	push   rbp
  40ab81:	push   r15
  40ab83:	push   r14
  40ab85:	push   r13
  40ab87:	push   r12
  40ab89:	push   rbx
  40ab8a:	push   rax
  40ab8b:	mov    r14,rsi
  40ab8e:	mov    r12,rdi
  40ab91:	cmp    BYTE PTR [rsi],0x1
  40ab94:	jne    40abca <strcmp@plt+0x7442>
  40ab96:	lea    rax,[rip+0x65a03]        # 4705a0 <strcmp@plt+0x6ce18>
  40ab9d:	mov    rdx,QWORD PTR [rax]
  40aba0:	lea    rax,[rip+0x65a01]        # 4705a8 <strcmp@plt+0x6ce20>
  40aba7:	mov    rcx,QWORD PTR [rax]
  40abaa:	mov    esi,0x1
  40abaf:	mov    rdi,r14
  40abb2:	call   437750 <strcmp@plt+0x33fc8>
  40abb7:	mov    rax,QWORD PTR [r14+0x8]
  40abbb:	imul   edx,DWORD PTR [rax+0x30],0x3c
  40abbf:	mov    rdi,r12
  40abc2:	mov    rsi,r14
  40abc5:	call   40b780 <strcmp@plt+0x7ff8>
  40abca:	cmp    DWORD PTR [r12+0xc],0x0
  40abd0:	je     40ac63 <strcmp@plt+0x74db>
  40abd6:	lea    rax,[rip+0x659c3]        # 4705a0 <strcmp@plt+0x6ce18>
  40abdd:	mov    rdx,QWORD PTR [rax]
  40abe0:	lea    rax,[rip+0x659c1]        # 4705a8 <strcmp@plt+0x6ce20>
  40abe7:	mov    rcx,QWORD PTR [rax]
  40abea:	mov    esi,0x5
  40abef:	mov    rdi,r14
  40abf2:	call   437750 <strcmp@plt+0x33fc8>
  40abf7:	mov    r15,QWORD PTR [r14+0x8]
  40abfb:	mov    rax,QWORD PTR [r15+0x28]
  40abff:	mov    r13,QWORD PTR [rax+0x8]
  40ac03:	cmp    r13,rax
  40ac06:	jne    40ac19 <strcmp@plt+0x7491>
  40ac08:	jmp    40ac63 <strcmp@plt+0x74db>
  40ac0a:	nop    WORD PTR [rax+rax*1+0x0]
  40ac10:	mov    r13,QWORD PTR [r13+0x8]
  40ac14:	cmp    r13,rax
  40ac17:	je     40ac63 <strcmp@plt+0x74db>
  40ac19:	mov    rbx,QWORD PTR [r13+0x10]
  40ac1d:	cmp    DWORD PTR [rbx+0x18],0x0
  40ac21:	je     40ac10 <strcmp@plt+0x7488>
  40ac23:	mov    rbp,QWORD PTR [rbx+0x8]
  40ac27:	mov    rdx,QWORD PTR [rbp+0x10]
  40ac2b:	mov    rcx,QWORD PTR [rdx]
  40ac2e:	cmp    DWORD PTR [rcx+0x18],0x0
  40ac32:	je     40ac10 <strcmp@plt+0x7488>
  40ac34:	cmp    rbp,rbx
  40ac37:	jne    40ac44 <strcmp@plt+0x74bc>
  40ac39:	jmp    40ac10 <strcmp@plt+0x7488>
  40ac3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac40:	mov    rdx,QWORD PTR [rbp+0x10]
  40ac44:	mov    ecx,DWORD PTR [r12+0xc]
  40ac49:	mov    rdi,r12
  40ac4c:	mov    rsi,r14
  40ac4f:	call   40b900 <strcmp@plt+0x8178>
  40ac54:	mov    rbp,QWORD PTR [rbp+0x8]
  40ac58:	cmp    rbp,rbx
  40ac5b:	jne    40ac40 <strcmp@plt+0x74b8>
  40ac5d:	mov    rax,QWORD PTR [r15+0x28]
  40ac61:	jmp    40ac10 <strcmp@plt+0x7488>
  40ac63:	add    rsp,0x8
  40ac67:	pop    rbx
  40ac68:	pop    r12
  40ac6a:	pop    r13
  40ac6c:	pop    r14
  40ac6e:	pop    r15
  40ac70:	pop    rbp
  40ac71:	ret    
  40ac72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac7c:	nop    DWORD PTR [rax+0x0]
  40ac80:	push   r15
  40ac82:	push   r14
  40ac84:	push   rbx
  40ac85:	mov    r14,rsi
  40ac88:	mov    r15,rdi
  40ac8b:	mov    rdi,QWORD PTR [rdi+0x18]
  40ac8f:	call   408890 <strcmp@plt+0x5108>
  40ac94:	mov    rbx,rax
  40ac97:	lea    rax,[rip+0x5a112]        # 464db0 <strcmp@plt+0x61628>
  40ac9e:	mov    eax,DWORD PTR [rax]
  40aca0:	test   rbx,rbx
  40aca3:	je     40aced <strcmp@plt+0x7565>
  40aca5:	cmp    eax,0x2
  40aca8:	jl     40accb <strcmp@plt+0x7543>
  40acaa:	mov    rdi,r14
  40acad:	call   423130 <strcmp@plt+0x1f9a8>
  40acb2:	mov    rcx,rax
  40acb5:	lea    rsi,[rip+0x3a040]        # 444cfc <strcmp@plt+0x41574>
  40acbc:	mov    edi,0x6
  40acc1:	xor    eax,eax
  40acc3:	mov    rdx,rcx
  40acc6:	call   42e800 <strcmp@plt+0x2b078>
  40accb:	mov    rdi,QWORD PTR [rbx+0x8]
  40accf:	mov    rsi,QWORD PTR [r14+0x28]
  40acd3:	call   4294d0 <strcmp@plt+0x25d48>
  40acd8:	mov    rax,QWORD PTR [r15+0x20]
  40acdc:	mov    rdi,QWORD PTR [r15+0x28]
  40ace0:	mov    rsi,rbx
  40ace3:	call   QWORD PTR [rax+0x38]
  40ace6:	mov    ebx,0x1
  40aceb:	jmp    40ad17 <strcmp@plt+0x758f>
  40aced:	xor    ebx,ebx
  40acef:	cmp    eax,0x2
  40acf2:	jl     40ad17 <strcmp@plt+0x758f>
  40acf4:	mov    rdi,r14
  40acf7:	call   423130 <strcmp@plt+0x1f9a8>
  40acfc:	mov    rcx,rax
  40acff:	lea    rsi,[rip+0x39fdc]        # 444ce2 <strcmp@plt+0x4155a>
  40ad06:	xor    ebx,ebx
  40ad08:	mov    edi,0x6
  40ad0d:	xor    eax,eax
  40ad0f:	mov    rdx,rcx
  40ad12:	call   42e800 <strcmp@plt+0x2b078>
  40ad17:	mov    eax,ebx
  40ad19:	pop    rbx
  40ad1a:	pop    r14
  40ad1c:	pop    r15
  40ad1e:	ret    
  40ad1f:	nop
  40ad20:	push   rbp
  40ad21:	push   r15
  40ad23:	push   r14
  40ad25:	push   r13
  40ad27:	push   r12
  40ad29:	push   rbx
  40ad2a:	push   rax
  40ad2b:	mov    rbx,rdx
  40ad2e:	mov    r15,rsi
  40ad31:	mov    r12,rdi
  40ad34:	mov    r14,QWORD PTR [rsi+0x8]
  40ad38:	mov    rdi,r14
  40ad3b:	mov    rsi,rdx
  40ad3e:	call   4293a0 <strcmp@plt+0x25c18>
  40ad43:	mov    r13,rax
  40ad46:	lea    rbp,[rip+0x5a063]        # 464db0 <strcmp@plt+0x61628>
  40ad4d:	mov    eax,DWORD PTR [rbp+0x0]
  40ad50:	test   r13,r13
  40ad53:	je     40adf7 <strcmp@plt+0x766f>
  40ad59:	test   eax,eax
  40ad5b:	jle    40ad8a <strcmp@plt+0x7602>
  40ad5d:	mov    rdi,QWORD PTR [r13+0x0]
  40ad61:	call   423130 <strcmp@plt+0x1f9a8>
  40ad66:	mov    rbx,rax
  40ad69:	mov    rdi,r14
  40ad6c:	call   423130 <strcmp@plt+0x1f9a8>
  40ad71:	mov    rcx,rax
  40ad74:	lea    rsi,[rip+0x39d97]        # 444b12 <strcmp@plt+0x4138a>
  40ad7b:	mov    edi,0x5
  40ad80:	xor    eax,eax
  40ad82:	mov    rdx,rbx
  40ad85:	call   42e800 <strcmp@plt+0x2b078>
  40ad8a:	cmp    BYTE PTR [r13+0x8],0x0
  40ad8f:	jne    40addd <strcmp@plt+0x7655>
  40ad91:	mov    BYTE PTR [r13+0x8],0x1
  40ad96:	cmp    DWORD PTR [rbp+0x0],0x0
  40ad9a:	jle    40adbe <strcmp@plt+0x7636>
  40ad9c:	mov    rdi,QWORD PTR [r13+0x0]
  40ada0:	call   423130 <strcmp@plt+0x1f9a8>
  40ada5:	mov    rcx,rax
  40ada8:	lea    rsi,[rip+0x39d9b]        # 444b4a <strcmp@plt+0x413c2>
  40adaf:	mov    edi,0x5
  40adb4:	xor    eax,eax
  40adb6:	mov    rdx,rcx
  40adb9:	call   42e800 <strcmp@plt+0x2b078>
  40adbe:	mov    rax,QWORD PTR [r12+0x20]
  40adc3:	mov    rdi,QWORD PTR [r12+0x28]
  40adc8:	mov    rsi,r15
  40adcb:	call   QWORD PTR [rax+0x38]
  40adce:	lea    rdi,[r12-0x18]
  40add3:	xor    edx,edx
  40add5:	mov    rsi,r14
  40add8:	call   407ac0 <strcmp@plt+0x4338>
  40addd:	mov    ecx,DWORD PTR [r12+0xc]
  40ade2:	mov    rdi,r12
  40ade5:	mov    rsi,r15
  40ade8:	mov    rdx,r13
  40adeb:	call   40b900 <strcmp@plt+0x8178>
  40adf0:	mov    ebp,0x1
  40adf5:	jmp    40ae2d <strcmp@plt+0x76a5>
  40adf7:	mov    ebp,0xfffffffa
  40adfc:	cmp    eax,0x2
  40adff:	jl     40ae2d <strcmp@plt+0x76a5>
  40ae01:	mov    rdi,rbx
  40ae04:	call   423130 <strcmp@plt+0x1f9a8>
  40ae09:	mov    rbx,rax
  40ae0c:	mov    rdi,r14
  40ae0f:	call   423130 <strcmp@plt+0x1f9a8>
  40ae14:	mov    rcx,rax
  40ae17:	lea    rsi,[rip+0x39cc3]        # 444ae1 <strcmp@plt+0x41359>
  40ae1e:	mov    edi,0x6
  40ae23:	xor    eax,eax
  40ae25:	mov    rdx,rbx
  40ae28:	call   42e800 <strcmp@plt+0x2b078>
  40ae2d:	mov    eax,ebp
  40ae2f:	add    rsp,0x8
  40ae33:	pop    rbx
  40ae34:	pop    r12
  40ae36:	pop    r13
  40ae38:	pop    r14
  40ae3a:	pop    r15
  40ae3c:	pop    rbp
  40ae3d:	ret    
  40ae3e:	xchg   ax,ax
  40ae40:	push   r15
  40ae42:	push   r14
  40ae44:	push   r12
  40ae46:	push   rbx
  40ae47:	push   rax
  40ae48:	mov    r12,rdx
  40ae4b:	mov    r15,rsi
  40ae4e:	mov    rbx,rdi
  40ae51:	mov    rdi,QWORD PTR [rdi+0x18]
  40ae55:	mov    rsi,rdx
  40ae58:	call   408850 <strcmp@plt+0x50c8>
  40ae5d:	test   rax,rax
  40ae60:	je     40aecb <strcmp@plt+0x7743>
  40ae62:	mov    r14,rax
  40ae65:	mov    edi,0x10
  40ae6a:	call   4320b0 <strcmp@plt+0x2e928>
  40ae6f:	mov    r12,rax
  40ae72:	mov    QWORD PTR [rax],r14
  40ae75:	mov    rdi,r15
  40ae78:	call   423740 <strcmp@plt+0x1ffb8>
  40ae7d:	mov    QWORD PTR [r12+0x8],rax
  40ae82:	add    rbx,0xffffffffffffffe8
  40ae86:	lea    rdx,[rip+0xb3]        # 40af40 <strcmp@plt+0x77b8>
  40ae8d:	lea    r8,[rip+0x43c]        # 40b2d0 <strcmp@plt+0x7b48>
  40ae94:	mov    edi,0x7
  40ae99:	mov    rsi,rbx
  40ae9c:	mov    rcx,r12
  40ae9f:	call   4375d0 <strcmp@plt+0x33e48>
  40aea4:	mov    rbx,rax
  40aea7:	lea    rax,[rip+0x656f2]        # 4705a0 <strcmp@plt+0x6ce18>
  40aeae:	mov    rdi,QWORD PTR [rax]
  40aeb1:	mov    rsi,r14
  40aeb4:	mov    rdx,rbx
  40aeb7:	call   4378d0 <strcmp@plt+0x34148>
  40aebc:	mov    rdi,rbx
  40aebf:	call   40af40 <strcmp@plt+0x77b8>
  40aec4:	mov    ebx,0x1
  40aec9:	jmp    40aefc <strcmp@plt+0x7774>
  40aecb:	lea    rax,[rip+0x59ede]        # 464db0 <strcmp@plt+0x61628>
  40aed2:	xor    ebx,ebx
  40aed4:	cmp    DWORD PTR [rax],0x2
  40aed7:	jl     40aefc <strcmp@plt+0x7774>
  40aed9:	mov    rdi,r12
  40aedc:	call   423130 <strcmp@plt+0x1f9a8>
  40aee1:	mov    rcx,rax
  40aee4:	lea    rsi,[rip+0x398a6]        # 444791 <strcmp@plt+0x41009>
  40aeeb:	xor    ebx,ebx
  40aeed:	mov    edi,0x6
  40aef2:	xor    eax,eax
  40aef4:	mov    rdx,rcx
  40aef7:	call   42e800 <strcmp@plt+0x2b078>
  40aefc:	mov    eax,ebx
  40aefe:	add    rsp,0x8
  40af02:	pop    rbx
  40af03:	pop    r12
  40af05:	pop    r14
  40af07:	pop    r15
  40af09:	ret    
  40af0a:	nop    WORD PTR [rax+rax*1+0x0]
  40af10:	push   r15
  40af12:	push   r14
  40af14:	push   rbx
  40af15:	mov    r14,rsi
  40af18:	mov    r15,rdi
  40af1b:	mov    edi,0x10
  40af20:	call   4320b0 <strcmp@plt+0x2e928>
  40af25:	mov    rbx,rax
  40af28:	mov    QWORD PTR [rax],r15
  40af2b:	mov    rdi,r14
  40af2e:	call   423740 <strcmp@plt+0x1ffb8>
  40af33:	mov    QWORD PTR [rbx+0x8],rax
  40af37:	mov    rax,rbx
  40af3a:	pop    rbx
  40af3b:	pop    r14
  40af3d:	pop    r15
  40af3f:	ret    
  40af40:	push   rbp
  40af41:	push   r15
  40af43:	push   r14
  40af45:	push   r13
  40af47:	push   r12
  40af49:	push   rbx
  40af4a:	sub    rsp,0x88
  40af51:	mov    r14,rdi
  40af54:	call   437430 <strcmp@plt+0x33ca8>
  40af59:	mov    rbp,rax
  40af5c:	mov    rdi,r14
  40af5f:	call   437450 <strcmp@plt+0x33cc8>
  40af64:	mov    rbx,rax
  40af67:	mov    rdi,r14
  40af6a:	call   437420 <strcmp@plt+0x33c98>
  40af6f:	mov    r13,rax
  40af72:	mov    r12,rax
  40af75:	mov    rdi,rbx
  40af78:	call   432930 <strcmp@plt+0x2f1a8>
  40af7d:	cmp    eax,0x2
  40af80:	jg     40b07b <strcmp@plt+0x78f3>
  40af86:	mov    QWORD PTR [rsp+0x38],rbx
  40af8b:	xor    eax,eax
  40af8d:	call   432860 <strcmp@plt+0x2f0d8>
  40af92:	mov    QWORD PTR [rsp+0x20],rax
  40af97:	mov    rax,QWORD PTR [rbp+0x0]
  40af9b:	mov    rbp,QWORD PTR [rbp+0x8]
  40af9f:	mov    r15,QWORD PTR [rax+0x8]
  40afa3:	mov    rdi,r15
  40afa6:	call   423200 <strcmp@plt+0x1fa78>
  40afab:	mov    WORD PTR [rsp+0x10],ax
  40afb0:	lea    rax,[rip+0x59df9]        # 464db0 <strcmp@plt+0x61628>
  40afb7:	cmp    DWORD PTR [rax],0x0
  40afba:	jle    40afdd <strcmp@plt+0x7855>
  40afbc:	mov    rdi,r15
  40afbf:	call   423130 <strcmp@plt+0x1f9a8>
  40afc4:	mov    rcx,rax
  40afc7:	lea    rsi,[rip+0x39d89]        # 444d57 <strcmp@plt+0x415cf>
  40afce:	mov    edi,0x5
  40afd3:	xor    eax,eax
  40afd5:	mov    rdx,rcx
  40afd8:	call   42e800 <strcmp@plt+0x2b078>
  40afdd:	mov    QWORD PTR [rsp+0x18],r12
  40afe2:	mov    rdi,r12
  40afe5:	call   4079e0 <strcmp@plt+0x4258>
  40afea:	mov    rdi,rax
  40afed:	call   4077d0 <strcmp@plt+0x4048>
  40aff2:	mov    rbx,rax
  40aff5:	mov    rdi,rbp
  40aff8:	mov    rsi,rax
  40affb:	mov    rdx,r15
  40affe:	call   4222a0 <strcmp@plt+0x1eb18>
  40b003:	test   rax,rax
  40b006:	je     40b0ed <strcmp@plt+0x7965>
  40b00c:	mov    r12,rax
  40b00f:	mov    QWORD PTR [rsp+0x8],rbx
  40b014:	movzx  eax,WORD PTR [rax+0x24]
  40b018:	mov    rcx,QWORD PTR [r12+0x30]
  40b01d:	movzx  edx,WORD PTR [rcx+rax*1]
  40b021:	movzx  esi,BYTE PTR [rcx+rax*1+0x2]
  40b026:	mov    BYTE PTR [rcx+rax*1+0x2],sil
  40b02b:	shl    esi,0x10
  40b02e:	or     esi,edx
  40b030:	or     esi,0x4000
  40b036:	mov    WORD PTR [rcx+rax*1],si
  40b03a:	mov    rdx,QWORD PTR [rsp+0x20]
  40b03f:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  40b044:	mov    rdi,r15
  40b047:	call   4230e0 <strcmp@plt+0x1f958>
  40b04c:	mov    rdi,rax
  40b04f:	call   434130 <strcmp@plt+0x309a8>
  40b054:	mov    QWORD PTR [rsp],rax
  40b058:	mov    rdi,rbp
  40b05b:	call   423200 <strcmp@plt+0x1fa78>
  40b060:	movzx  ecx,WORD PTR [rsp+0x10]
  40b065:	cmp    ax,cx
  40b068:	jne    40b10f <strcmp@plt+0x7987>
  40b06e:	mov    rdi,rbp
  40b071:	call   4232e0 <strcmp@plt+0x1fb58>
  40b076:	jmp    40b12f <strcmp@plt+0x79a7>
  40b07b:	lea    rax,[rip+0x59d2e]        # 464db0 <strcmp@plt+0x61628>
  40b082:	cmp    DWORD PTR [rax],0x0
  40b085:	jle    40b0ad <strcmp@plt+0x7925>
  40b087:	mov    rax,QWORD PTR [rbp+0x0]
  40b08b:	mov    rdi,QWORD PTR [rax+0x8]
  40b08f:	call   423130 <strcmp@plt+0x1f9a8>
  40b094:	mov    rcx,rax
  40b097:	lea    rsi,[rip+0x3987a]        # 444918 <strcmp@plt+0x41190>
  40b09e:	mov    edi,0x5
  40b0a3:	xor    eax,eax
  40b0a5:	mov    rdx,rcx
  40b0a8:	call   42e800 <strcmp@plt+0x2b078>
  40b0ad:	mov    rax,QWORD PTR [rbp+0x0]
  40b0b1:	mov    rbx,QWORD PTR [rax+0x8]
  40b0b5:	xor    ebp,ebp
  40b0b7:	xor    edx,edx
  40b0b9:	mov    rdi,r12
  40b0bc:	mov    rsi,rbx
  40b0bf:	call   407ac0 <strcmp@plt+0x4338>
  40b0c4:	mov    rdi,QWORD PTR [r12+0x30]
  40b0c9:	mov    rsi,rbx
  40b0cc:	call   408840 <strcmp@plt+0x50b8>
  40b0d1:	mov    rdi,rax
  40b0d4:	call   4309e0 <strcmp@plt+0x2d258>
  40b0d9:	mov    rdi,QWORD PTR [r12+0x30]
  40b0de:	mov    esi,0x7
  40b0e3:	call   4088e0 <strcmp@plt+0x5158>
  40b0e8:	jmp    40b2b9 <strcmp@plt+0x7b31>
  40b0ed:	lea    rsi,[rip+0x39c80]        # 444d74 <strcmp@plt+0x415ec>
  40b0f4:	xor    ebp,ebp
  40b0f6:	mov    edi,0x3
  40b0fb:	xor    eax,eax
  40b0fd:	call   42e800 <strcmp@plt+0x2b078>
  40b102:	mov    rdi,rbx
  40b105:	call   42c250 <strcmp@plt+0x28ac8>
  40b10a:	jmp    40b2b9 <strcmp@plt+0x7b31>
  40b10f:	movzx  ebx,cx
  40b112:	mov    rdi,QWORD PTR [rsp+0x18]
  40b117:	call   4079e0 <strcmp@plt+0x4258>
  40b11c:	mov    rdi,rax
  40b11f:	mov    esi,ebx
  40b121:	call   4077c0 <strcmp@plt+0x4038>
  40b126:	test   rax,rax
  40b129:	je     40b281 <strcmp@plt+0x7af9>
  40b12f:	mov    rdi,rax
  40b132:	call   423740 <strcmp@plt+0x1ffb8>
  40b137:	mov    rcx,rax
  40b13a:	add    r13,0x18
  40b13e:	lea    rax,[rip+0x59c6b]        # 464db0 <strcmp@plt+0x61628>
  40b145:	cmp    DWORD PTR [rax],0x0
  40b148:	jle    40b1a9 <strcmp@plt+0x7a21>
  40b14a:	mov    rdi,r12
  40b14d:	mov    rbx,rcx
  40b150:	call   422870 <strcmp@plt+0x1f0e8>
  40b155:	mov    QWORD PTR [rsp+0x10],rax
  40b15a:	mov    rdi,QWORD PTR [rsp+0x8]
  40b15f:	call   422e30 <strcmp@plt+0x1f6a8>
  40b164:	mov    QWORD PTR [rsp+0x30],rax
  40b169:	mov    rdi,rbp
  40b16c:	call   423130 <strcmp@plt+0x1f9a8>
  40b171:	mov    QWORD PTR [rsp+0x28],rax
  40b176:	mov    rdi,r15
  40b179:	call   423130 <strcmp@plt+0x1f9a8>
  40b17e:	mov    rbp,rax
  40b181:	lea    rsi,[rip+0x39c84]        # 444e0c <strcmp@plt+0x41684>
  40b188:	mov    edi,0x5
  40b18d:	xor    eax,eax
  40b18f:	mov    rdx,QWORD PTR [rsp+0x10]
  40b194:	mov    rcx,QWORD PTR [rsp+0x30]
  40b199:	mov    r8,QWORD PTR [rsp+0x28]
  40b19e:	mov    r9,rbp
  40b1a1:	call   42e800 <strcmp@plt+0x2b078>
  40b1a6:	mov    rcx,rbx
  40b1a9:	mov    esi,0x10f6
  40b1ae:	mov    edx,0x10f6
  40b1b3:	mov    rdi,r12
  40b1b6:	mov    r15,rcx
  40b1b9:	mov    r8,QWORD PTR [rsp]
  40b1bd:	call   422020 <strcmp@plt+0x1e898>
  40b1c2:	mov    rdi,r13
  40b1c5:	call   40b4c0 <strcmp@plt+0x7d38>
  40b1ca:	test   rax,rax
  40b1cd:	je     40b25c <strcmp@plt+0x7ad4>
  40b1d3:	xor    ebp,ebp
  40b1d5:	lea    rbx,[rsp+0x40]
  40b1da:	mov    esi,0x10f6
  40b1df:	mov    edx,0x10f6
  40b1e4:	xor    ecx,ecx
  40b1e6:	mov    rdi,rbx
  40b1e9:	mov    r8,rax
  40b1ec:	call   435600 <strcmp@plt+0x31e78>
  40b1f1:	mov    rdi,QWORD PTR [rsp+0x18]
  40b1f6:	mov    rsi,r12
  40b1f9:	mov    rdx,rbx
  40b1fc:	call   407ab0 <strcmp@plt+0x4328>
  40b201:	mov    ebx,eax
  40b203:	mov    rdi,QWORD PTR [rsp+0x8]
  40b208:	call   42c250 <strcmp@plt+0x28ac8>
  40b20d:	mov    rdi,r12
  40b210:	call   42e010 <strcmp@plt+0x2a888>
  40b215:	mov    rdi,r15
  40b218:	call   422fa0 <strcmp@plt+0x1f818>
  40b21d:	mov    rdi,QWORD PTR [rsp]
  40b221:	call   422fa0 <strcmp@plt+0x1f818>
  40b226:	cmp    ebx,0x1
  40b229:	jne    40b2b9 <strcmp@plt+0x7b31>
  40b22f:	lea    rax,[rip+0x65372]        # 4705a8 <strcmp@plt+0x6ce20>
  40b236:	mov    rdi,QWORD PTR [rax]
  40b239:	mov    rsi,QWORD PTR [rsp+0x20]
  40b23e:	mov    rdx,QWORD PTR [rsp+0x38]
  40b243:	call   432280 <strcmp@plt+0x2eaf8>
  40b248:	mov    esi,0x3
  40b24d:	mov    rdi,r14
  40b250:	call   437460 <strcmp@plt+0x33cd8>
  40b255:	mov    ebp,0x1
  40b25a:	jmp    40b2b9 <strcmp@plt+0x7b31>
  40b25c:	mov    rdi,QWORD PTR [rsp+0x8]
  40b261:	call   42c250 <strcmp@plt+0x28ac8>
  40b266:	mov    rdi,r15
  40b269:	call   422fa0 <strcmp@plt+0x1f818>
  40b26e:	mov    rdi,QWORD PTR [rsp]
  40b272:	call   422fa0 <strcmp@plt+0x1f818>
  40b277:	mov    rdi,r12
  40b27a:	call   42e010 <strcmp@plt+0x2a888>
  40b27f:	jmp    40b2b7 <strcmp@plt+0x7b2f>
  40b281:	lea    rax,[rip+0x59b28]        # 464db0 <strcmp@plt+0x61628>
  40b288:	cmp    DWORD PTR [rax],0x0
  40b28b:	jle    40b2ae <strcmp@plt+0x7b26>
  40b28d:	mov    rdi,r15
  40b290:	call   423130 <strcmp@plt+0x1f9a8>
  40b295:	mov    rcx,rax
  40b298:	lea    rsi,[rip+0x39b17]        # 444db6 <strcmp@plt+0x4162e>
  40b29f:	mov    edi,0x5
  40b2a4:	xor    eax,eax
  40b2a6:	mov    rdx,rcx
  40b2a9:	call   42e800 <strcmp@plt+0x2b078>
  40b2ae:	mov    rdi,QWORD PTR [rsp]
  40b2b2:	call   422fa0 <strcmp@plt+0x1f818>
  40b2b7:	xor    ebp,ebp
  40b2b9:	mov    eax,ebp
  40b2bb:	add    rsp,0x88
  40b2c2:	pop    rbx
  40b2c3:	pop    r12
  40b2c5:	pop    r13
  40b2c7:	pop    r14
  40b2c9:	pop    r15
  40b2cb:	pop    rbp
  40b2cc:	ret    
  40b2cd:	nop    DWORD PTR [rax]
  40b2d0:	push   rbx
  40b2d1:	mov    rbx,rdi
  40b2d4:	mov    rdi,QWORD PTR [rdi+0x8]
  40b2d8:	call   422fa0 <strcmp@plt+0x1f818>
  40b2dd:	mov    rdi,rbx
  40b2e0:	pop    rbx
  40b2e1:	jmp    403780 <free@plt>
  40b2e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b2f0:	push   rbp
  40b2f1:	push   r15
  40b2f3:	push   r14
  40b2f5:	push   r13
  40b2f7:	push   r12
  40b2f9:	push   rbx
  40b2fa:	sub    rsp,0x68
  40b2fe:	mov    rax,QWORD PTR [rdi+0x30]
  40b302:	cmp    DWORD PTR [rax+0x18],0x0
  40b306:	je     40b44e <strcmp@plt+0x7cc6>
  40b30c:	mov    r14,rcx
  40b30f:	mov    r15,rsi
  40b312:	mov    rbx,rdi
  40b315:	mov    r12,QWORD PTR [rdx+0x8]
  40b319:	lea    rdi,[rdi-0x18]
  40b31d:	mov    QWORD PTR [rsp+0x18],rdi
  40b322:	call   4079e0 <strcmp@plt+0x4258>
  40b327:	mov    rdi,rax
  40b32a:	call   4077d0 <strcmp@plt+0x4048>
  40b32f:	mov    r13,rax
  40b332:	lea    rax,[rip+0x59a77]        # 464db0 <strcmp@plt+0x61628>
  40b339:	cmp    DWORD PTR [rax],0x0
  40b33c:	jle    40b35f <strcmp@plt+0x7bd7>
  40b33e:	mov    rdi,r13
  40b341:	call   422e30 <strcmp@plt+0x1f6a8>
  40b346:	mov    rcx,rax
  40b349:	lea    rsi,[rip+0x394cd]        # 44481d <strcmp@plt+0x41095>
  40b350:	mov    edi,0x5
  40b355:	xor    eax,eax
  40b357:	mov    rdx,rcx
  40b35a:	call   42e800 <strcmp@plt+0x2b078>
  40b35f:	mov    rdi,r15
  40b362:	mov    rsi,r13
  40b365:	mov    rdx,r12
  40b368:	call   4222a0 <strcmp@plt+0x1eb18>
  40b36d:	test   rax,rax
  40b370:	je     40b471 <strcmp@plt+0x7ce9>
  40b376:	mov    rbp,rax
  40b379:	movzx  eax,WORD PTR [rax+0x24]
  40b37d:	mov    rcx,QWORD PTR [rbp+0x30]
  40b381:	mov    QWORD PTR [rcx+rax*1+0x4],r14
  40b386:	lea    rax,[rip+0x59a23]        # 464db0 <strcmp@plt+0x61628>
  40b38d:	cmp    DWORD PTR [rax],0x0
  40b390:	jle    40b3e2 <strcmp@plt+0x7c5a>
  40b392:	mov    rdi,rbp
  40b395:	call   422870 <strcmp@plt+0x1f0e8>
  40b39a:	mov    QWORD PTR [rsp+0x10],rax
  40b39f:	mov    rdi,r13
  40b3a2:	call   422e30 <strcmp@plt+0x1f6a8>
  40b3a7:	mov    QWORD PTR [rsp+0x8],rax
  40b3ac:	mov    rdi,r15
  40b3af:	call   423130 <strcmp@plt+0x1f9a8>
  40b3b4:	mov    r14,rax
  40b3b7:	mov    rdi,r12
  40b3ba:	call   423130 <strcmp@plt+0x1f9a8>
  40b3bf:	mov    r9,rax
  40b3c2:	lea    rsi,[rip+0x394b2]        # 44487b <strcmp@plt+0x410f3>
  40b3c9:	mov    edi,0x5
  40b3ce:	xor    eax,eax
  40b3d0:	mov    rdx,QWORD PTR [rsp+0x10]
  40b3d5:	mov    rcx,QWORD PTR [rsp+0x8]
  40b3da:	mov    r8,r14
  40b3dd:	call   42e800 <strcmp@plt+0x2b078>
  40b3e2:	mov    rdi,r13
  40b3e5:	call   42c250 <strcmp@plt+0x28ac8>
  40b3ea:	mov    esi,0x10f6
  40b3ef:	mov    edx,0x10f6
  40b3f4:	mov    rdi,rbp
  40b3f7:	mov    rcx,r15
  40b3fa:	mov    r8,r12
  40b3fd:	call   422020 <strcmp@plt+0x1e898>
  40b402:	mov    rdi,rbx
  40b405:	call   40b4c0 <strcmp@plt+0x7d38>
  40b40a:	test   rax,rax
  40b40d:	je     40b49a <strcmp@plt+0x7d12>
  40b413:	lea    rbx,[rsp+0x20]
  40b418:	mov    esi,0x10f6
  40b41d:	mov    edx,0x10f6
  40b422:	xor    ecx,ecx
  40b424:	mov    rdi,rbx
  40b427:	mov    r8,rax
  40b42a:	call   435600 <strcmp@plt+0x31e78>
  40b42f:	mov    rdi,QWORD PTR [rsp+0x18]
  40b434:	mov    rsi,rbp
  40b437:	mov    rdx,rbx
  40b43a:	call   407ab0 <strcmp@plt+0x4328>
  40b43f:	mov    rdi,rbp
  40b442:	call   42e010 <strcmp@plt+0x2a888>
  40b447:	mov    ebx,0x1
  40b44c:	jmp    40b4a4 <strcmp@plt+0x7d1c>
  40b44e:	lea    rax,[rip+0x5995b]        # 464db0 <strcmp@plt+0x61628>
  40b455:	cmp    DWORD PTR [rax],0x0
  40b458:	jle    40b4a2 <strcmp@plt+0x7d1a>
  40b45a:	lea    rsi,[rip+0x39380]        # 4447e1 <strcmp@plt+0x41059>
  40b461:	xor    ebx,ebx
  40b463:	mov    edi,0x5
  40b468:	xor    eax,eax
  40b46a:	call   42e800 <strcmp@plt+0x2b078>
  40b46f:	jmp    40b4a4 <strcmp@plt+0x7d1c>
  40b471:	lea    rax,[rip+0x59938]        # 464db0 <strcmp@plt+0x61628>
  40b478:	cmp    DWORD PTR [rax],0x0
  40b47b:	jle    40b490 <strcmp@plt+0x7d08>
  40b47d:	lea    rsi,[rip+0x393ae]        # 444832 <strcmp@plt+0x410aa>
  40b484:	mov    edi,0x5
  40b489:	xor    eax,eax
  40b48b:	call   42e800 <strcmp@plt+0x2b078>
  40b490:	mov    rdi,r13
  40b493:	call   42c250 <strcmp@plt+0x28ac8>
  40b498:	jmp    40b4a2 <strcmp@plt+0x7d1a>
  40b49a:	mov    rdi,rbp
  40b49d:	call   42e010 <strcmp@plt+0x2a888>
  40b4a2:	xor    ebx,ebx
  40b4a4:	mov    eax,ebx
  40b4a6:	add    rsp,0x68
  40b4aa:	pop    rbx
  40b4ab:	pop    r12
  40b4ad:	pop    r13
  40b4af:	pop    r14
  40b4b1:	pop    r15
  40b4b3:	pop    rbp
  40b4b4:	ret    
  40b4b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b4bf:	nop
  40b4c0:	push   rbp
  40b4c1:	push   r15
  40b4c3:	push   r14
  40b4c5:	push   rbx
  40b4c6:	push   rax
  40b4c7:	mov    r14,rdi
  40b4ca:	lea    rdi,[rdi-0x18]
  40b4ce:	call   4079e0 <strcmp@plt+0x4258>
  40b4d3:	mov    rdi,rax
  40b4d6:	call   407860 <strcmp@plt+0x40d8>
  40b4db:	mov    r15d,eax
  40b4de:	test   r15b,0x2
  40b4e2:	je     40b51e <strcmp@plt+0x7d96>
  40b4e4:	mov    rax,QWORD PTR [r14+0x30]
  40b4e8:	mov    rbp,QWORD PTR [rax+0x8]
  40b4ec:	cmp    rbp,rax
  40b4ef:	je     40b51e <strcmp@plt+0x7d96>
  40b4f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b4fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b500:	mov    rbx,QWORD PTR [rbp+0x10]
  40b504:	mov    rdi,rbx
  40b507:	call   423200 <strcmp@plt+0x1fa78>
  40b50c:	movzx  eax,ax
  40b50f:	cmp    eax,0xa
  40b512:	je     40b583 <strcmp@plt+0x7dfb>
  40b514:	mov    rbp,QWORD PTR [rbp+0x8]
  40b518:	cmp    rbp,QWORD PTR [r14+0x30]
  40b51c:	jne    40b500 <strcmp@plt+0x7d78>
  40b51e:	test   r15b,0x1
  40b522:	je     40b55e <strcmp@plt+0x7dd6>
  40b524:	mov    rax,QWORD PTR [r14+0x30]
  40b528:	mov    rbp,QWORD PTR [rax+0x8]
  40b52c:	cmp    rbp,rax
  40b52f:	je     40b55e <strcmp@plt+0x7dd6>
  40b531:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b53b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b540:	mov    rbx,QWORD PTR [rbp+0x10]
  40b544:	mov    rdi,rbx
  40b547:	call   423200 <strcmp@plt+0x1fa78>
  40b54c:	movzx  eax,ax
  40b54f:	cmp    eax,0x2
  40b552:	je     40b583 <strcmp@plt+0x7dfb>
  40b554:	mov    rbp,QWORD PTR [rbp+0x8]
  40b558:	cmp    rbp,QWORD PTR [r14+0x30]
  40b55c:	jne    40b540 <strcmp@plt+0x7db8>
  40b55e:	lea    rax,[rip+0x5984b]        # 464db0 <strcmp@plt+0x61628>
  40b565:	cmp    DWORD PTR [rax],0x0
  40b568:	jle    40b581 <strcmp@plt+0x7df9>
  40b56a:	lea    rsi,[rip+0x397ba]        # 444d2b <strcmp@plt+0x415a3>
  40b571:	xor    ebx,ebx
  40b573:	mov    edi,0x5
  40b578:	xor    eax,eax
  40b57a:	call   42e800 <strcmp@plt+0x2b078>
  40b57f:	jmp    40b583 <strcmp@plt+0x7dfb>
  40b581:	xor    ebx,ebx
  40b583:	mov    rax,rbx
  40b586:	add    rsp,0x8
  40b58a:	pop    rbx
  40b58b:	pop    r14
  40b58d:	pop    r15
  40b58f:	pop    rbp
  40b590:	ret    
  40b591:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b59b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b5a0:	push   rbp
  40b5a1:	push   r15
  40b5a3:	push   r14
  40b5a5:	push   r13
  40b5a7:	push   r12
  40b5a9:	push   rbx
  40b5aa:	sub    rsp,0x78
  40b5ae:	mov    QWORD PTR [rsp+0x8],rcx
  40b5b3:	mov    r15,rdx
  40b5b6:	mov    r13,rsi
  40b5b9:	mov    rbx,rdi
  40b5bc:	lea    r12,[rdi-0x18]
  40b5c0:	mov    rdi,r12
  40b5c3:	call   4079e0 <strcmp@plt+0x4258>
  40b5c8:	mov    r14,rax
  40b5cb:	mov    rax,QWORD PTR [rbx+0x20]
  40b5cf:	mov    rbp,QWORD PTR [rax+0x48]
  40b5d3:	mov    rbx,QWORD PTR [r15]
  40b5d6:	mov    rdi,r14
  40b5d9:	call   407830 <strcmp@plt+0x40a8>
  40b5de:	mov    rdi,rbx
  40b5e1:	mov    rsi,rax
  40b5e4:	call   rbp
  40b5e6:	mov    QWORD PTR [rsp],rax
  40b5ea:	lea    rbx,[rsp+0x10]
  40b5ef:	xor    r15d,r15d
  40b5f2:	xor    esi,esi
  40b5f4:	mov    rdi,rbx
  40b5f7:	call   4231a0 <strcmp@plt+0x1fa18>
  40b5fc:	mov    rdi,r14
  40b5ff:	call   4077d0 <strcmp@plt+0x4048>
  40b604:	mov    rbp,rax
  40b607:	mov    rdi,rbx
  40b60a:	mov    rsi,rax
  40b60d:	mov    rdx,r13
  40b610:	call   4222a0 <strcmp@plt+0x1eb18>
  40b615:	mov    rbx,rax
  40b618:	mov    rdi,rbp
  40b61b:	call   42c250 <strcmp@plt+0x28ac8>
  40b620:	test   rbx,rbx
  40b623:	je     40b671 <strcmp@plt+0x7ee9>
  40b625:	movzx  eax,WORD PTR [rbx+0x24]
  40b629:	mov    rcx,QWORD PTR [rbx+0x30]
  40b62d:	mov    rdx,QWORD PTR [rsp+0x8]
  40b632:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  40b637:	or     BYTE PTR [rcx+rax*1],0x2
  40b63b:	lea    rbp,[rsp+0x30]
  40b640:	mov    esi,0x10f6
  40b645:	mov    edx,0x10f6
  40b64a:	xor    ecx,ecx
  40b64c:	mov    rdi,rbp
  40b64f:	mov    r8,QWORD PTR [rsp]
  40b653:	call   435600 <strcmp@plt+0x31e78>
  40b658:	mov    rdi,r12
  40b65b:	mov    rsi,rbx
  40b65e:	mov    rdx,rbp
  40b661:	call   407ab0 <strcmp@plt+0x4328>
  40b666:	mov    r15d,eax
  40b669:	mov    rdi,rbx
  40b66c:	call   42e010 <strcmp@plt+0x2a888>
  40b671:	mov    eax,r15d
  40b674:	add    rsp,0x78
  40b678:	pop    rbx
  40b679:	pop    r12
  40b67b:	pop    r13
  40b67d:	pop    r14
  40b67f:	pop    r15
  40b681:	pop    rbp
  40b682:	ret    
  40b683:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b68d:	nop    DWORD PTR [rax]
  40b690:	push   r15
  40b692:	push   r14
  40b694:	push   r12
  40b696:	push   rbx
  40b697:	push   rax
  40b698:	mov    rbx,rdi
  40b69b:	call   437430 <strcmp@plt+0x33ca8>
  40b6a0:	mov    r14,rax
  40b6a3:	mov    r15,QWORD PTR [rax+0x8]
  40b6a7:	mov    rdi,rbx
  40b6aa:	call   437420 <strcmp@plt+0x33c98>
  40b6af:	mov    r12,rax
  40b6b2:	lea    rax,[rip+0x596f7]        # 464db0 <strcmp@plt+0x61628>
  40b6b9:	cmp    DWORD PTR [rax],0x0
  40b6bc:	jle    40b6df <strcmp@plt+0x7f57>
  40b6be:	mov    rdi,r15
  40b6c1:	call   423130 <strcmp@plt+0x1f9a8>
  40b6c6:	mov    rcx,rax
  40b6c9:	lea    rsi,[rip+0x38629]        # 443cf9 <strcmp@plt+0x40571>
  40b6d0:	mov    edi,0x5
  40b6d5:	xor    eax,eax
  40b6d7:	mov    rdx,rcx
  40b6da:	call   42e800 <strcmp@plt+0x2b078>
  40b6df:	mov    rbx,QWORD PTR [r14+0x8]
  40b6e3:	xor    edx,edx
  40b6e5:	mov    rdi,r12
  40b6e8:	mov    rsi,rbx
  40b6eb:	call   407ac0 <strcmp@plt+0x4338>
  40b6f0:	mov    rdi,QWORD PTR [r12+0x30]
  40b6f5:	mov    rsi,rbx
  40b6f8:	call   408840 <strcmp@plt+0x50b8>
  40b6fd:	mov    rdi,rax
  40b700:	call   4309e0 <strcmp@plt+0x2d258>
  40b705:	mov    rdi,QWORD PTR [r12+0x30]
  40b70a:	mov    esi,0x7
  40b70f:	call   4088e0 <strcmp@plt+0x5158>
  40b714:	mov    eax,0x1
  40b719:	add    rsp,0x8
  40b71d:	pop    rbx
  40b71e:	pop    r12
  40b720:	pop    r14
  40b722:	pop    r15
  40b724:	ret    
  40b725:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b72f:	nop
  40b730:	push   r14
  40b732:	push   rbx
  40b733:	push   rax
  40b734:	mov    rbx,rsi
  40b737:	mov    r14,rdi
  40b73a:	lea    rax,[rip+0x64e5f]        # 4705a0 <strcmp@plt+0x6ce18>
  40b741:	mov    rdx,QWORD PTR [rax]
  40b744:	lea    rax,[rip+0x64e5d]        # 4705a8 <strcmp@plt+0x6ce20>
  40b74b:	mov    rcx,QWORD PTR [rax]
  40b74e:	mov    esi,0x1
  40b753:	mov    rdi,rbx
  40b756:	call   437750 <strcmp@plt+0x33fc8>
  40b75b:	mov    rax,QWORD PTR [rbx+0x8]
  40b75f:	imul   edx,DWORD PTR [rax+0x30],0x3c
  40b763:	mov    rdi,r14
  40b766:	mov    rsi,rbx
  40b769:	add    rsp,0x8
  40b76d:	pop    rbx
  40b76e:	pop    r14
  40b770:	jmp    40b780 <strcmp@plt+0x7ff8>
  40b775:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b77f:	nop
  40b780:	push   rbp
  40b781:	push   r14
  40b783:	push   rbx
  40b784:	mov    r14d,edx
  40b787:	mov    rbx,rsi
  40b78a:	lea    rsi,[rdi-0x18]
  40b78e:	lea    rdx,[rip+0xfffffffffffffefb]        # 40b690 <strcmp@plt+0x7f08>
  40b795:	mov    edi,0x1
  40b79a:	xor    r8d,r8d
  40b79d:	mov    rcx,rbx
  40b7a0:	call   437580 <strcmp@plt+0x33df8>
  40b7a5:	mov    rbp,rax
  40b7a8:	lea    rax,[rip+0x64df1]        # 4705a0 <strcmp@plt+0x6ce18>
  40b7af:	mov    rdi,QWORD PTR [rax]
  40b7b2:	mov    rsi,rbx
  40b7b5:	mov    rdx,rbp
  40b7b8:	call   4378d0 <strcmp@plt+0x34148>
  40b7bd:	mov    rdi,rbp
  40b7c0:	mov    esi,r14d
  40b7c3:	call   437460 <strcmp@plt+0x33cd8>
  40b7c8:	lea    rax,[rip+0x595e1]        # 464db0 <strcmp@plt+0x61628>
  40b7cf:	mov    eax,DWORD PTR [rax]
  40b7d1:	cmp    r14d,0x3d
  40b7d5:	jl     40b807 <strcmp@plt+0x807f>
  40b7d7:	test   eax,eax
  40b7d9:	jle    40b834 <strcmp@plt+0x80ac>
  40b7db:	mov    rdi,QWORD PTR [rbx+0x8]
  40b7df:	call   423130 <strcmp@plt+0x1f9a8>
  40b7e4:	mov    rdx,rax
  40b7e7:	mov    eax,r14d
  40b7ea:	mov    ecx,0x88888889
  40b7ef:	imul   rcx,rax
  40b7f3:	shr    rcx,0x25
  40b7f7:	lea    rsi,[rip+0x390a8]        # 4448a6 <strcmp@plt+0x4111e>
  40b7fe:	mov    edi,0x5
  40b803:	xor    eax,eax
  40b805:	jmp    40b82b <strcmp@plt+0x80a3>
  40b807:	test   eax,eax
  40b809:	jle    40b834 <strcmp@plt+0x80ac>
  40b80b:	mov    rdi,QWORD PTR [rbx+0x8]
  40b80f:	call   423130 <strcmp@plt+0x1f9a8>
  40b814:	mov    rcx,rax
  40b817:	lea    rsi,[rip+0x390c1]        # 4448df <strcmp@plt+0x41157>
  40b81e:	mov    edi,0x5
  40b823:	xor    eax,eax
  40b825:	mov    rdx,rcx
  40b828:	mov    ecx,r14d
  40b82b:	pop    rbx
  40b82c:	pop    r14
  40b82e:	pop    rbp
  40b82f:	jmp    42e800 <strcmp@plt+0x2b078>
  40b834:	pop    rbx
  40b835:	pop    r14
  40b837:	pop    rbp
  40b838:	ret    
  40b839:	nop    DWORD PTR [rax+0x0]
  40b840:	push   rbp
  40b841:	push   r15
  40b843:	push   r14
  40b845:	push   r13
  40b847:	push   r12
  40b849:	push   rbx
  40b84a:	push   rax
  40b84b:	cmp    DWORD PTR [rdi+0xc],0x0
  40b84f:	je     40b8e2 <strcmp@plt+0x815a>
  40b855:	mov    r14,rsi
  40b858:	mov    r13,rdi
  40b85b:	lea    rax,[rip+0x64d3e]        # 4705a0 <strcmp@plt+0x6ce18>
  40b862:	mov    rdx,QWORD PTR [rax]
  40b865:	lea    rax,[rip+0x64d3c]        # 4705a8 <strcmp@plt+0x6ce20>
  40b86c:	mov    rcx,QWORD PTR [rax]
  40b86f:	mov    esi,0x5
  40b874:	mov    rdi,r14
  40b877:	call   437750 <strcmp@plt+0x33fc8>
  40b87c:	mov    r15,QWORD PTR [r14+0x8]
  40b880:	mov    rax,QWORD PTR [r15+0x28]
  40b884:	mov    r12,QWORD PTR [rax+0x8]
  40b888:	cmp    r12,rax
  40b88b:	jne    40b89a <strcmp@plt+0x8112>
  40b88d:	jmp    40b8e2 <strcmp@plt+0x815a>
  40b88f:	nop
  40b890:	mov    r12,QWORD PTR [r12+0x8]
  40b895:	cmp    r12,rax
  40b898:	je     40b8e2 <strcmp@plt+0x815a>
  40b89a:	mov    rbx,QWORD PTR [r12+0x10]
  40b89f:	cmp    DWORD PTR [rbx+0x18],0x0
  40b8a3:	je     40b890 <strcmp@plt+0x8108>
  40b8a5:	mov    rbp,QWORD PTR [rbx+0x8]
  40b8a9:	mov    rdx,QWORD PTR [rbp+0x10]
  40b8ad:	mov    rcx,QWORD PTR [rdx]
  40b8b0:	cmp    DWORD PTR [rcx+0x18],0x0
  40b8b4:	je     40b890 <strcmp@plt+0x8108>
  40b8b6:	cmp    rbp,rbx
  40b8b9:	jne    40b8c4 <strcmp@plt+0x813c>
  40b8bb:	jmp    40b890 <strcmp@plt+0x8108>
  40b8bd:	nop    DWORD PTR [rax]
  40b8c0:	mov    rdx,QWORD PTR [rbp+0x10]
  40b8c4:	mov    ecx,DWORD PTR [r13+0xc]
  40b8c8:	mov    rdi,r13
  40b8cb:	mov    rsi,r14
  40b8ce:	call   40b900 <strcmp@plt+0x8178>
  40b8d3:	mov    rbp,QWORD PTR [rbp+0x8]
  40b8d7:	cmp    rbp,rbx
  40b8da:	jne    40b8c0 <strcmp@plt+0x8138>
  40b8dc:	mov    rax,QWORD PTR [r15+0x28]
  40b8e0:	jmp    40b890 <strcmp@plt+0x8108>
  40b8e2:	add    rsp,0x8
  40b8e6:	pop    rbx
  40b8e7:	pop    r12
  40b8e9:	pop    r13
  40b8eb:	pop    r14
  40b8ed:	pop    r15
  40b8ef:	pop    rbp
  40b8f0:	ret    
  40b8f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b8fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b900:	push   rbp
  40b901:	push   r15
  40b903:	push   r14
  40b905:	push   rbx
  40b906:	push   rax
  40b907:	cmp    BYTE PTR [rdx+0xa],0x0
  40b90b:	je     40b981 <strcmp@plt+0x81f9>
  40b90d:	mov    rbx,rdx
  40b910:	cmp    BYTE PTR [rdx+0xb],0xff
  40b914:	je     40b981 <strcmp@plt+0x81f9>
  40b916:	mov    r14d,ecx
  40b919:	mov    r15,rsi
  40b91c:	mov    rbp,rdi
  40b91f:	mov    edi,0x10
  40b924:	call   4320b0 <strcmp@plt+0x2e928>
  40b929:	mov    QWORD PTR [rax],r15
  40b92c:	mov    QWORD PTR [rax+0x8],rbx
  40b930:	add    rbp,0xffffffffffffffe8
  40b934:	lea    rdx,[rip+0xc5]        # 40ba00 <strcmp@plt+0x8278>
  40b93b:	lea    r8,[rip+0x33e]        # 40bc80 <strcmp@plt+0x84f8>
  40b942:	mov    edi,0x5
  40b947:	mov    rsi,rbp
  40b94a:	mov    rcx,rax
  40b94d:	call   4375d0 <strcmp@plt+0x33e48>
  40b952:	mov    rbp,rax
  40b955:	lea    rax,[rip+0x64c44]        # 4705a0 <strcmp@plt+0x6ce18>
  40b95c:	mov    rdi,QWORD PTR [rax]
  40b95f:	mov    rsi,r15
  40b962:	mov    rdx,rbp
  40b965:	call   4378d0 <strcmp@plt+0x34148>
  40b96a:	mov    rdi,rbp
  40b96d:	mov    esi,r14d
  40b970:	call   437460 <strcmp@plt+0x33cd8>
  40b975:	lea    rax,[rip+0x59434]        # 464db0 <strcmp@plt+0x61628>
  40b97c:	cmp    DWORD PTR [rax],0x2
  40b97f:	jge    40b98c <strcmp@plt+0x8204>
  40b981:	add    rsp,0x8
  40b985:	pop    rbx
  40b986:	pop    r14
  40b988:	pop    r15
  40b98a:	pop    rbp
  40b98b:	ret    
  40b98c:	mov    rdi,QWORD PTR [r15+0x8]
  40b990:	call   423130 <strcmp@plt+0x1f9a8>
  40b995:	mov    rbp,rax
  40b998:	mov    rdi,QWORD PTR [rbx]
  40b99b:	call   423130 <strcmp@plt+0x1f9a8>
  40b9a0:	mov    rcx,rax
  40b9a3:	lea    rsi,[rip+0x38f9f]        # 444949 <strcmp@plt+0x411c1>
  40b9aa:	mov    edi,0x6
  40b9af:	xor    eax,eax
  40b9b1:	mov    rdx,rbp
  40b9b4:	mov    r8d,r14d
  40b9b7:	add    rsp,0x8
  40b9bb:	pop    rbx
  40b9bc:	pop    r14
  40b9be:	pop    r15
  40b9c0:	pop    rbp
  40b9c1:	jmp    42e800 <strcmp@plt+0x2b078>
  40b9c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b9d0:	push   r14
  40b9d2:	push   rbx
  40b9d3:	push   rax
  40b9d4:	mov    r14,rsi
  40b9d7:	mov    rbx,rdi
  40b9da:	mov    edi,0x10
  40b9df:	call   4320b0 <strcmp@plt+0x2e928>
  40b9e4:	mov    QWORD PTR [rax],rbx
  40b9e7:	mov    QWORD PTR [rax+0x8],r14
  40b9eb:	add    rsp,0x8
  40b9ef:	pop    rbx
  40b9f0:	pop    r14
  40b9f2:	ret    
  40b9f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b9fd:	nop    DWORD PTR [rax]
  40ba00:	push   rbp
  40ba01:	push   r15
  40ba03:	push   r14
  40ba05:	push   r13
  40ba07:	push   r12
  40ba09:	push   rbx
  40ba0a:	push   rax
  40ba0b:	mov    rbx,rdi
  40ba0e:	call   437430 <strcmp@plt+0x33ca8>
  40ba13:	mov    rbp,rax
  40ba16:	mov    rdi,rbx
  40ba19:	call   437450 <strcmp@plt+0x33cc8>
  40ba1e:	mov    r14,rax
  40ba21:	mov    QWORD PTR [rsp],rbx
  40ba25:	mov    rdi,rbx
  40ba28:	call   437420 <strcmp@plt+0x33c98>
  40ba2d:	mov    rbx,rax
  40ba30:	mov    rax,QWORD PTR [rbp+0x0]
  40ba34:	mov    r13,QWORD PTR [rbp+0x8]
  40ba38:	mov    r15,QWORD PTR [rax+0x8]
  40ba3c:	mov    rax,QWORD PTR [rbx+0x38]
  40ba40:	mov    r12,QWORD PTR [rax+0x48]
  40ba44:	mov    rbp,QWORD PTR [r13+0x0]
  40ba48:	mov    rdi,rbx
  40ba4b:	call   4079e0 <strcmp@plt+0x4258>
  40ba50:	mov    rdi,rax
  40ba53:	call   407830 <strcmp@plt+0x40a8>
  40ba58:	mov    rdi,rbp
  40ba5b:	mov    rsi,rax
  40ba5e:	call   r12
  40ba61:	mov    r12,r15
  40ba64:	mov    r15,r14
  40ba67:	mov    r14,rax
  40ba6a:	mov    rdi,r15
  40ba6d:	call   432930 <strcmp@plt+0x2f1a8>
  40ba72:	cmp    eax,DWORD PTR [rbx+0x28]
  40ba75:	jg     40bb02 <strcmp@plt+0x837a>
  40ba7b:	mov    rbp,rbx
  40ba7e:	add    rbp,0x18
  40ba82:	xor    eax,eax
  40ba84:	call   432860 <strcmp@plt+0x2f0d8>
  40ba89:	mov    rdi,rbp
  40ba8c:	mov    rsi,r12
  40ba8f:	mov    rdx,r13
  40ba92:	mov    rbp,rax
  40ba95:	mov    rcx,rax
  40ba98:	call   40b5a0 <strcmp@plt+0x7e18>
  40ba9d:	cmp    eax,0x1
  40baa0:	jne    40bb02 <strcmp@plt+0x837a>
  40baa2:	mov    rdi,r15
  40baa5:	call   432930 <strcmp@plt+0x2f1a8>
  40baaa:	lea    rcx,[rip+0x592ff]        # 464db0 <strcmp@plt+0x61628>
  40bab1:	mov    ecx,DWORD PTR [rcx]
  40bab3:	test   eax,eax
  40bab5:	jle    40bc0a <strcmp@plt+0x8482>
  40babb:	test   ecx,ecx
  40babd:	jle    40bc3a <strcmp@plt+0x84b2>
  40bac3:	mov    rdi,r14
  40bac6:	call   423130 <strcmp@plt+0x1f9a8>
  40bacb:	mov    r13,rax
  40bace:	mov    rdi,r12
  40bad1:	call   423130 <strcmp@plt+0x1f9a8>
  40bad6:	mov    r12,rax
  40bad9:	mov    rdi,r15
  40badc:	call   432930 <strcmp@plt+0x2f1a8>
  40bae1:	mov    r8d,eax
  40bae4:	lea    rsi,[rip+0x38e96]        # 444981 <strcmp@plt+0x411f9>
  40baeb:	mov    edi,0x5
  40baf0:	xor    eax,eax
  40baf2:	mov    rdx,r13
  40baf5:	mov    rcx,r12
  40baf8:	call   42e800 <strcmp@plt+0x2b078>
  40bafd:	jmp    40bc3a <strcmp@plt+0x84b2>
  40bb02:	cmp    BYTE PTR [r13+0x8],0x1
  40bb07:	jne    40bb81 <strcmp@plt+0x83f9>
  40bb09:	mov    BYTE PTR [r13+0x8],0x0
  40bb0e:	lea    rax,[rip+0x5929b]        # 464db0 <strcmp@plt+0x61628>
  40bb15:	cmp    DWORD PTR [rax],0x0
  40bb18:	jle    40bb46 <strcmp@plt+0x83be>
  40bb1a:	mov    rdi,r14
  40bb1d:	call   423130 <strcmp@plt+0x1f9a8>
  40bb22:	mov    rbp,rax
  40bb25:	mov    rdi,r12
  40bb28:	call   423130 <strcmp@plt+0x1f9a8>
  40bb2d:	mov    rcx,rax
  40bb30:	lea    rsi,[rip+0x38eb7]        # 4449ee <strcmp@plt+0x41266>
  40bb37:	mov    edi,0x5
  40bb3c:	xor    eax,eax
  40bb3e:	mov    rdx,rbp
  40bb41:	call   42e800 <strcmp@plt+0x2b078>
  40bb46:	mov    rdi,QWORD PTR [rbx+0x30]
  40bb4a:	mov    rsi,r12
  40bb4d:	call   408890 <strcmp@plt+0x5108>
  40bb52:	test   rax,rax
  40bb55:	je     40bbe5 <strcmp@plt+0x845d>
  40bb5b:	mov    rbp,rax
  40bb5e:	mov    rax,QWORD PTR [rbx+0x38]
  40bb62:	mov    rdi,QWORD PTR [rbx+0x40]
  40bb66:	mov    rsi,rbp
  40bb69:	call   QWORD PTR [rax+0x38]
  40bb6c:	mov    rdi,rbp
  40bb6f:	call   430ae0 <strcmp@plt+0x2d358>
  40bb74:	xor    edx,edx
  40bb76:	mov    rdi,rbx
  40bb79:	mov    rsi,rax
  40bb7c:	call   407ac0 <strcmp@plt+0x4338>
  40bb81:	lea    rax,[rip+0x64a20]        # 4705a8 <strcmp@plt+0x6ce20>
  40bb88:	mov    rdi,QWORD PTR [rax]
  40bb8b:	mov    rsi,r15
  40bb8e:	call   4326e0 <strcmp@plt+0x2ef58>
  40bb93:	mov    esi,DWORD PTR [rbx+0x24]
  40bb96:	mov    rdi,QWORD PTR [rsp]
  40bb9a:	call   437460 <strcmp@plt+0x33cd8>
  40bb9f:	lea    rax,[rip+0x5920a]        # 464db0 <strcmp@plt+0x61628>
  40bba6:	xor    ebp,ebp
  40bba8:	cmp    DWORD PTR [rax],0x2
  40bbab:	jl     40bc60 <strcmp@plt+0x84d8>
  40bbb1:	mov    rdi,r14
  40bbb4:	call   423130 <strcmp@plt+0x1f9a8>
  40bbb9:	mov    r14,rax
  40bbbc:	mov    rdi,r12
  40bbbf:	call   423130 <strcmp@plt+0x1f9a8>
  40bbc4:	mov    rcx,rax
  40bbc7:	mov    r8d,DWORD PTR [rbx+0x24]
  40bbcb:	lea    rsi,[rip+0x38ec8]        # 444a9a <strcmp@plt+0x41312>
  40bbd2:	xor    ebp,ebp
  40bbd4:	mov    edi,0x6
  40bbd9:	xor    eax,eax
  40bbdb:	mov    rdx,r14
  40bbde:	call   42e800 <strcmp@plt+0x2b078>
  40bbe3:	jmp    40bc60 <strcmp@plt+0x84d8>
  40bbe5:	mov    rdi,r12
  40bbe8:	call   423130 <strcmp@plt+0x1f9a8>
  40bbed:	mov    rcx,rax
  40bbf0:	lea    rsi,[rip+0x38e5d]        # 444a54 <strcmp@plt+0x412cc>
  40bbf7:	xor    ebp,ebp
  40bbf9:	mov    edi,0x2
  40bbfe:	xor    eax,eax
  40bc00:	mov    rdx,rcx
  40bc03:	call   42e800 <strcmp@plt+0x2b078>
  40bc08:	jmp    40bc60 <strcmp@plt+0x84d8>
  40bc0a:	test   ecx,ecx
  40bc0c:	jle    40bc3a <strcmp@plt+0x84b2>
  40bc0e:	mov    rdi,r14
  40bc11:	call   423130 <strcmp@plt+0x1f9a8>
  40bc16:	mov    r14,rax
  40bc19:	mov    rdi,r12
  40bc1c:	call   423130 <strcmp@plt+0x1f9a8>
  40bc21:	mov    rcx,rax
  40bc24:	lea    rsi,[rip+0x38d96]        # 4449c1 <strcmp@plt+0x41239>
  40bc2b:	mov    edi,0x5
  40bc30:	xor    eax,eax
  40bc32:	mov    rdx,r14
  40bc35:	call   42e800 <strcmp@plt+0x2b078>
  40bc3a:	lea    rax,[rip+0x64967]        # 4705a8 <strcmp@plt+0x6ce20>
  40bc41:	mov    rdi,QWORD PTR [rax]
  40bc44:	mov    rsi,rbp
  40bc47:	mov    rdx,r15
  40bc4a:	call   432280 <strcmp@plt+0x2eaf8>
  40bc4f:	mov    esi,DWORD PTR [rbx+0x2c]
  40bc52:	mov    rdi,QWORD PTR [rsp]
  40bc56:	call   437460 <strcmp@plt+0x33cd8>
  40bc5b:	mov    ebp,0x1
  40bc60:	mov    eax,ebp
  40bc62:	add    rsp,0x8
  40bc66:	pop    rbx
  40bc67:	pop    r12
  40bc69:	pop    r13
  40bc6b:	pop    r14
  40bc6d:	pop    r15
  40bc6f:	pop    rbp
  40bc70:	ret    
  40bc71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bc80:	jmp    403780 <free@plt>
  40bc85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc8f:	nop
  40bc90:	push   r15
  40bc92:	push   r14
  40bc94:	push   r13
  40bc96:	push   r12
  40bc98:	push   rbx
  40bc99:	mov    r12,rdx
  40bc9c:	mov    rbx,rsi
  40bc9f:	mov    r15,rdi
  40bca2:	mov    rdi,rsi
  40bca5:	call   428e20 <strcmp@plt+0x25698>
  40bcaa:	mov    BYTE PTR [rax+0x34],0x1
  40bcae:	xor    r13d,r13d
  40bcb1:	mov    edx,0x1
  40bcb6:	xor    ecx,ecx
  40bcb8:	mov    rdi,r15
  40bcbb:	mov    rsi,rax
  40bcbe:	call   40aaa0 <strcmp@plt+0x7318>
  40bcc3:	mov    r14,rax
  40bcc6:	mov    rdi,rbx
  40bcc9:	call   423130 <strcmp@plt+0x1f9a8>
  40bcce:	mov    rcx,rax
  40bcd1:	test   r14,r14
  40bcd4:	je     40bdc9 <strcmp@plt+0x8641>
  40bcda:	lea    rdi,[rip+0x38ebb]        # 444b9c <strcmp@plt+0x41414>
  40bce1:	xor    eax,eax
  40bce3:	mov    rsi,rcx
  40bce6:	call   403050 <printf@plt>
  40bceb:	mov    edi,0x10
  40bcf0:	call   4320b0 <strcmp@plt+0x2e928>
  40bcf5:	mov    rbx,rax
  40bcf8:	mov    QWORD PTR [rax],r14
  40bcfb:	mov    rdi,r12
  40bcfe:	call   423740 <strcmp@plt+0x1ffb8>
  40bd03:	mov    QWORD PTR [rbx+0x8],rax
  40bd07:	add    r15,0xffffffffffffffe8
  40bd0b:	lea    rdx,[rip+0xee]        # 40be00 <strcmp@plt+0x8678>
  40bd12:	lea    r8,[rip+0xfffffffffffff5b7]        # 40b2d0 <strcmp@plt+0x7b48>
  40bd19:	mov    edi,0x4
  40bd1e:	mov    rsi,r15
  40bd21:	mov    rcx,rbx
  40bd24:	call   4375d0 <strcmp@plt+0x33e48>
  40bd29:	mov    rbx,rax
  40bd2c:	lea    r12,[rip+0x6486d]        # 4705a0 <strcmp@plt+0x6ce18>
  40bd33:	mov    rdi,QWORD PTR [r12]
  40bd37:	mov    rsi,r14
  40bd3a:	mov    rdx,rax
  40bd3d:	call   4378d0 <strcmp@plt+0x34148>
  40bd42:	mov    rdi,rbx
  40bd45:	call   40be00 <strcmp@plt+0x8678>
  40bd4a:	mov    r13d,eax
  40bd4d:	test   eax,eax
  40bd4f:	jne    40bde6 <strcmp@plt+0x865e>
  40bd55:	lea    rdx,[rip+0xfffffffffffff934]        # 40b690 <strcmp@plt+0x7f08>
  40bd5c:	mov    edi,0x1
  40bd61:	xor    r8d,r8d
  40bd64:	mov    rsi,r15
  40bd67:	mov    rcx,r14
  40bd6a:	call   437580 <strcmp@plt+0x33df8>
  40bd6f:	mov    rbx,rax
  40bd72:	mov    rdi,QWORD PTR [r12]
  40bd76:	mov    rsi,r14
  40bd79:	mov    rdx,rax
  40bd7c:	call   4378d0 <strcmp@plt+0x34148>
  40bd81:	mov    esi,0xa
  40bd86:	mov    rdi,rbx
  40bd89:	call   437460 <strcmp@plt+0x33cd8>
  40bd8e:	lea    rax,[rip+0x5901b]        # 464db0 <strcmp@plt+0x61628>
  40bd95:	cmp    DWORD PTR [rax],0x0
  40bd98:	mov    r13d,0x0
  40bd9e:	jle    40bde6 <strcmp@plt+0x865e>
  40bda0:	mov    rdi,QWORD PTR [r14+0x8]
  40bda4:	call   423130 <strcmp@plt+0x1f9a8>
  40bda9:	mov    rdx,rax
  40bdac:	lea    rsi,[rip+0x38b2c]        # 4448df <strcmp@plt+0x41157>
  40bdb3:	xor    r13d,r13d
  40bdb6:	mov    edi,0x5
  40bdbb:	mov    ecx,0xa
  40bdc0:	xor    eax,eax
  40bdc2:	call   42e800 <strcmp@plt+0x2b078>
  40bdc7:	jmp    40bde6 <strcmp@plt+0x865e>
  40bdc9:	lea    rsi,[rip+0x38d9a]        # 444b6a <strcmp@plt+0x413e2>
  40bdd0:	mov    edi,0x3
  40bdd5:	xor    eax,eax
  40bdd7:	mov    rdx,rcx
  40bdda:	call   42e800 <strcmp@plt+0x2b078>
  40bddf:	xor    edi,edi
  40bde1:	call   4309e0 <strcmp@plt+0x2d258>
  40bde6:	mov    eax,r13d
  40bde9:	pop    rbx
  40bdea:	pop    r12
  40bdec:	pop    r13
  40bdee:	pop    r14
  40bdf0:	pop    r15
  40bdf2:	ret    
  40bdf3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bdfd:	nop    DWORD PTR [rax]
  40be00:	push   rbp
  40be01:	push   r15
  40be03:	push   r14
  40be05:	push   r13
  40be07:	push   r12
  40be09:	push   rbx
  40be0a:	push   rax
  40be0b:	mov    r14,rdi
  40be0e:	call   437430 <strcmp@plt+0x33ca8>
  40be13:	mov    r15,rax
  40be16:	mov    rdi,r14
  40be19:	call   437450 <strcmp@plt+0x33cc8>
  40be1e:	mov    r12,rax
  40be21:	mov    rdi,r14
  40be24:	call   437420 <strcmp@plt+0x33c98>
  40be29:	mov    r13,rax
  40be2c:	mov    rdi,r12
  40be2f:	call   432930 <strcmp@plt+0x2f1a8>
  40be34:	mov    ebp,eax
  40be36:	mov    rax,QWORD PTR [r15]
  40be39:	mov    rbx,QWORD PTR [rax+0x8]
  40be3d:	cmp    ebp,DWORD PTR [r13+0x20]
  40be41:	jle    40beb5 <strcmp@plt+0x872d>
  40be43:	lea    rax,[rip+0x58f66]        # 464db0 <strcmp@plt+0x61628>
  40be4a:	cmp    DWORD PTR [rax],0x0
  40be4d:	jle    40be7c <strcmp@plt+0x86f4>
  40be4f:	add    ebp,0xffffffff
  40be52:	mov    rdi,rbx
  40be55:	call   423130 <strcmp@plt+0x1f9a8>
  40be5a:	mov    rcx,rax
  40be5d:	lea    rsi,[rip+0x38d97]        # 444bfb <strcmp@plt+0x41473>
  40be64:	mov    edi,0x5
  40be69:	xor    eax,eax
  40be6b:	mov    rdx,rcx
  40be6e:	mov    ecx,ebp
  40be70:	call   42e800 <strcmp@plt+0x2b078>
  40be75:	mov    rax,QWORD PTR [r15]
  40be78:	mov    rbx,QWORD PTR [rax+0x8]
  40be7c:	xor    edx,edx
  40be7e:	mov    rdi,r13
  40be81:	mov    rsi,rbx
  40be84:	call   407ac0 <strcmp@plt+0x4338>
  40be89:	mov    rdi,QWORD PTR [r13+0x30]
  40be8d:	mov    rsi,rbx
  40be90:	call   408840 <strcmp@plt+0x50b8>
  40be95:	mov    rdi,rax
  40be98:	call   4309e0 <strcmp@plt+0x2d258>
  40be9d:	mov    rdi,QWORD PTR [r13+0x30]
  40bea1:	mov    esi,0x7
  40bea6:	call   4088e0 <strcmp@plt+0x5158>
  40beab:	mov    ebx,0xffffff9d
  40beb0:	jmp    40bf37 <strcmp@plt+0x87af>
  40beb5:	add    r13,0x18
  40beb9:	test   ebp,ebp
  40bebb:	jle    40beed <strcmp@plt+0x8765>
  40bebd:	lea    rax,[rip+0x58eec]        # 464db0 <strcmp@plt+0x61628>
  40bec4:	mov    eax,DWORD PTR [rax]
  40bec6:	test   eax,eax
  40bec8:	jle    40beed <strcmp@plt+0x8765>
  40beca:	mov    rdi,rbx
  40becd:	call   423130 <strcmp@plt+0x1f9a8>
  40bed2:	mov    rcx,rax
  40bed5:	lea    rsi,[rip+0x38ceb]        # 444bc7 <strcmp@plt+0x4143f>
  40bedc:	mov    edi,0x5
  40bee1:	xor    eax,eax
  40bee3:	mov    rdx,rcx
  40bee6:	mov    ecx,ebp
  40bee8:	call   42e800 <strcmp@plt+0x2b078>
  40beed:	xor    ebx,ebx
  40beef:	xor    eax,eax
  40bef1:	call   432860 <strcmp@plt+0x2f0d8>
  40bef6:	mov    rbp,rax
  40bef9:	mov    rdx,QWORD PTR [r15]
  40befc:	mov    rsi,QWORD PTR [r15+0x8]
  40bf00:	mov    rdi,r13
  40bf03:	mov    rcx,rax
  40bf06:	call   40b2f0 <strcmp@plt+0x7b68>
  40bf0b:	cmp    eax,0x1
  40bf0e:	jne    40bf37 <strcmp@plt+0x87af>
  40bf10:	lea    rax,[rip+0x64691]        # 4705a8 <strcmp@plt+0x6ce20>
  40bf17:	mov    rdi,QWORD PTR [rax]
  40bf1a:	mov    rsi,rbp
  40bf1d:	mov    rdx,r12
  40bf20:	call   432280 <strcmp@plt+0x2eaf8>
  40bf25:	mov    esi,0x2
  40bf2a:	mov    rdi,r14
  40bf2d:	call   437460 <strcmp@plt+0x33cd8>
  40bf32:	mov    ebx,0x1
  40bf37:	mov    eax,ebx
  40bf39:	add    rsp,0x8
  40bf3d:	pop    rbx
  40bf3e:	pop    r12
  40bf40:	pop    r13
  40bf42:	pop    r14
  40bf44:	pop    r15
  40bf46:	pop    rbp
  40bf47:	ret    
  40bf48:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf50:	mov    rdi,QWORD PTR [rdi+0x18]
  40bf54:	jmp    4088a0 <strcmp@plt+0x5118>
  40bf59:	nop    DWORD PTR [rax+0x0]
  40bf60:	push   rbp
  40bf61:	push   r15
  40bf63:	push   r14
  40bf65:	push   r12
  40bf67:	push   rbx
  40bf68:	sub    rsp,0x20
  40bf6c:	mov    rax,QWORD PTR [rdi+0x8]
  40bf70:	cmp    rax,QWORD PTR [rip+0x58061]        # 463fd8 <strcmp@plt+0x60850>
  40bf77:	jne    40c0b8 <strcmp@plt+0x8930>
  40bf7d:	mov    rbx,rdi
  40bf80:	lea    rdi,[rdi+0x18]
  40bf84:	call   40a590 <strcmp@plt+0x6e08>
  40bf89:	xor    r15d,r15d
  40bf8c:	xor    eax,eax
  40bf8e:	call   407d20 <strcmp@plt+0x4598>
  40bf93:	mov    QWORD PTR [rbx+0x70],rax
  40bf97:	lea    rdi,[rip+0x3f52]        # 40fef0 <strcmp@plt+0xc768>
  40bf9e:	call   42bc00 <strcmp@plt+0x28478>
  40bfa3:	mov    QWORD PTR [rbx+0x78],rax
  40bfa7:	lea    rdi,[rip+0x16ff2]        # 422fa0 <strcmp@plt+0x1f818>
  40bfae:	call   42bc00 <strcmp@plt+0x28478>
  40bfb3:	mov    QWORD PTR [rbx+0x68],rax
  40bfb7:	xor    eax,eax
  40bfb9:	call   430990 <strcmp@plt+0x2d208>
  40bfbe:	mov    rbp,rax
  40bfc1:	xor    eax,eax
  40bfc3:	call   430990 <strcmp@plt+0x2d208>
  40bfc8:	cmp    QWORD PTR [rbx+0x70],0x0
  40bfcd:	je     40c0a8 <strcmp@plt+0x8920>
  40bfd3:	cmp    QWORD PTR [rbx+0x78],0x0
  40bfd8:	je     40c0a8 <strcmp@plt+0x8920>
  40bfde:	mov    r14,rax
  40bfe1:	test   rax,rax
  40bfe4:	je     40c0a8 <strcmp@plt+0x8920>
  40bfea:	test   rbp,rbp
  40bfed:	je     40c0a8 <strcmp@plt+0x8920>
  40bff3:	mov    rax,QWORD PTR [rbx+0x68]
  40bff7:	test   rax,rax
  40bffa:	je     40c0a8 <strcmp@plt+0x8920>
  40c000:	lea    rdi,[rip+0x36ccd]        # 442cd4 <strcmp@plt+0x3f54c>
  40c007:	mov    r15,rsp
  40c00a:	mov    rsi,r15
  40c00d:	call   423c60 <strcmp@plt+0x204d8>
  40c012:	mov    rdi,r15
  40c015:	call   428e20 <strcmp@plt+0x25698>
  40c01a:	mov    BYTE PTR [rax+0x34],0x1
  40c01e:	mov    rdi,rbp
  40c021:	mov    rsi,rax
  40c024:	call   4309d0 <strcmp@plt+0x2d248>
  40c029:	mov    r12,QWORD PTR [rbx+0x30]
  40c02d:	mov    rdi,rbp
  40c030:	call   430ae0 <strcmp@plt+0x2d358>
  40c035:	mov    rdi,r12
  40c038:	mov    rsi,rax
  40c03b:	mov    rdx,rbp
  40c03e:	call   408830 <strcmp@plt+0x50a8>
  40c043:	lea    rdi,[rip+0x37b18]        # 443b62 <strcmp@plt+0x403da>
  40c04a:	mov    rsi,r15
  40c04d:	call   423c60 <strcmp@plt+0x204d8>
  40c052:	mov    rdi,r15
  40c055:	call   428e20 <strcmp@plt+0x25698>
  40c05a:	mov    BYTE PTR [rax+0x34],0x1
  40c05e:	mov    rdi,r14
  40c061:	mov    rsi,rax
  40c064:	call   4309d0 <strcmp@plt+0x2d248>
  40c069:	mov    rbx,QWORD PTR [rbx+0x30]
  40c06d:	mov    rdi,r14
  40c070:	call   430ae0 <strcmp@plt+0x2d358>
  40c075:	mov    rdi,rbx
  40c078:	mov    rsi,rax
  40c07b:	mov    rdx,r14
  40c07e:	call   408830 <strcmp@plt+0x50a8>
  40c083:	lea    rax,[rip+0x58d26]        # 464db0 <strcmp@plt+0x61628>
  40c08a:	mov    r15d,0x1
  40c090:	cmp    DWORD PTR [rax],0x0
  40c093:	jle    40c0a8 <strcmp@plt+0x8920>
  40c095:	lea    rsi,[rip+0x391b1]        # 44524d <strcmp@plt+0x41ac5>
  40c09c:	mov    edi,0x5
  40c0a1:	xor    eax,eax
  40c0a3:	call   42e800 <strcmp@plt+0x2b078>
  40c0a8:	mov    eax,r15d
  40c0ab:	add    rsp,0x20
  40c0af:	pop    rbx
  40c0b0:	pop    r12
  40c0b2:	pop    r14
  40c0b4:	pop    r15
  40c0b6:	pop    rbp
  40c0b7:	ret    
  40c0b8:	lea    rdi,[rip+0x38e76]        # 444f35 <strcmp@plt+0x417ad>
  40c0bf:	lea    rsi,[rip+0x38e86]        # 444f4c <strcmp@plt+0x417c4>
  40c0c6:	lea    rdx,[rip+0x38e8d]        # 444f5a <strcmp@plt+0x417d2>
  40c0cd:	call   4321d0 <strcmp@plt+0x2ea48>
  40c0d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c0dc:	nop    DWORD PTR [rax+0x0]
  40c0e0:	push   rax
  40c0e1:	mov    rax,QWORD PTR [rdi+0x8]
  40c0e5:	cmp    rax,QWORD PTR [rip+0x57eec]        # 463fd8 <strcmp@plt+0x60850>
  40c0ec:	jne    40c115 <strcmp@plt+0x898d>
  40c0ee:	call   403780 <free@plt>
  40c0f3:	lea    rax,[rip+0x58cb6]        # 464db0 <strcmp@plt+0x61628>
  40c0fa:	cmp    DWORD PTR [rax],0x0
  40c0fd:	jle    40c113 <strcmp@plt+0x898b>
  40c0ff:	lea    rsi,[rip+0x39161]        # 445267 <strcmp@plt+0x41adf>
  40c106:	mov    edi,0x5
  40c10b:	xor    eax,eax
  40c10d:	pop    rcx
  40c10e:	jmp    42e800 <strcmp@plt+0x2b078>
  40c113:	pop    rax
  40c114:	ret    
  40c115:	lea    rdi,[rip+0x38e19]        # 444f35 <strcmp@plt+0x417ad>
  40c11c:	lea    rsi,[rip+0x38e29]        # 444f4c <strcmp@plt+0x417c4>
  40c123:	lea    rdx,[rip+0x38e30]        # 444f5a <strcmp@plt+0x417d2>
  40c12a:	call   4321d0 <strcmp@plt+0x2ea48>
  40c12f:	nop
  40c130:	push   rbp
  40c131:	push   r15
  40c133:	push   r14
  40c135:	push   r13
  40c137:	push   r12
  40c139:	push   rbx
  40c13a:	sub    rsp,0x828
  40c141:	mov    rax,QWORD PTR [rdi+0x8]
  40c145:	cmp    rax,QWORD PTR [rip+0x57e8c]        # 463fd8 <strcmp@plt+0x60850>
  40c14c:	jne    40c40e <strcmp@plt+0x8c86>
  40c152:	mov    r13,rdi
  40c155:	lea    rdi,[rdi+0x18]
  40c159:	call   40a600 <strcmp@plt+0x6e78>
  40c15e:	call   42bbd0 <strcmp@plt+0x28448>
  40c163:	mov    rbx,rax
  40c166:	mov    rax,QWORD PTR [r13+0x70]
  40c16a:	mov    rax,QWORD PTR [rax]
  40c16d:	mov    rdi,QWORD PTR [rax]
  40c170:	mov    rsi,rbx
  40c173:	call   42bcf0 <strcmp@plt+0x28568>
  40c178:	mov    rax,QWORD PTR [r13+0x70]
  40c17c:	mov    rax,QWORD PTR [rax]
  40c17f:	mov    rdi,QWORD PTR [rax+0x8]
  40c183:	mov    QWORD PTR [rsp+0x8],rbx
  40c188:	mov    rsi,rbx
  40c18b:	call   42bcf0 <strcmp@plt+0x28568>
  40c190:	mov    rax,QWORD PTR [r13+0x70]
  40c194:	mov    rcx,QWORD PTR [rax]
  40c197:	mov    rdx,QWORD PTR [rcx+0x10]
  40c19b:	mov    rdx,QWORD PTR [rdx]
  40c19e:	cmp    DWORD PTR [rdx],0x0
  40c1a1:	je     40c1f5 <strcmp@plt+0x8a6d>
  40c1a3:	xor    ebx,ebx
  40c1a5:	mov    r15d,0x3
  40c1ab:	xor    ebp,ebp
  40c1ad:	nop    DWORD PTR [rax]
  40c1b0:	mov    rcx,QWORD PTR [rdx+0x10]
  40c1b4:	mov    esi,ebp
  40c1b6:	shr    esi,0x4
  40c1b9:	mov    edi,ebx
  40c1bb:	and    dil,0x1e
  40c1bf:	shlx   edi,r15d,edi
  40c1c4:	test   DWORD PTR [rcx+rsi*4],edi
  40c1c7:	jne    40c1e1 <strcmp@plt+0x8a59>
  40c1c9:	mov    rax,QWORD PTR [rdx+0x20]
  40c1cd:	mov    ecx,ebp
  40c1cf:	mov    rdi,QWORD PTR [rax+rcx*8]
  40c1d3:	mov    rsi,QWORD PTR [rsp+0x8]
  40c1d8:	call   42bcf0 <strcmp@plt+0x28568>
  40c1dd:	mov    rax,QWORD PTR [r13+0x70]
  40c1e1:	add    ebp,0x1
  40c1e4:	mov    rcx,QWORD PTR [rax]
  40c1e7:	mov    rdx,QWORD PTR [rcx+0x10]
  40c1eb:	mov    rdx,QWORD PTR [rdx]
  40c1ee:	add    ebx,0x2
  40c1f1:	cmp    ebp,DWORD PTR [rdx]
  40c1f3:	jne    40c1b0 <strcmp@plt+0x8a28>
  40c1f5:	mov    rdx,QWORD PTR [rcx+0x18]
  40c1f9:	mov    rdx,QWORD PTR [rdx]
  40c1fc:	cmp    DWORD PTR [rdx],0x0
  40c1ff:	je     40c255 <strcmp@plt+0x8acd>
  40c201:	xor    ebx,ebx
  40c203:	mov    r15d,0x3
  40c209:	xor    ebp,ebp
  40c20b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c210:	mov    rcx,QWORD PTR [rdx+0x10]
  40c214:	mov    esi,ebp
  40c216:	shr    esi,0x4
  40c219:	mov    edi,ebx
  40c21b:	and    dil,0x1e
  40c21f:	shlx   edi,r15d,edi
  40c224:	test   DWORD PTR [rcx+rsi*4],edi
  40c227:	jne    40c241 <strcmp@plt+0x8ab9>
  40c229:	mov    rax,QWORD PTR [rdx+0x20]
  40c22d:	mov    ecx,ebp
  40c22f:	mov    rdi,QWORD PTR [rax+rcx*8]
  40c233:	mov    rsi,QWORD PTR [rsp+0x8]
  40c238:	call   42bcf0 <strcmp@plt+0x28568>
  40c23d:	mov    rax,QWORD PTR [r13+0x70]
  40c241:	add    ebp,0x1
  40c244:	mov    rcx,QWORD PTR [rax]
  40c247:	mov    rdx,QWORD PTR [rcx+0x18]
  40c24b:	mov    rdx,QWORD PTR [rdx]
  40c24e:	add    ebx,0x2
  40c251:	cmp    ebp,DWORD PTR [rdx]
  40c253:	jne    40c210 <strcmp@plt+0x8a88>
  40c255:	mov    rdi,QWORD PTR [rcx+0x20]
  40c259:	mov    rbx,QWORD PTR [rsp+0x8]
  40c25e:	mov    rsi,rbx
  40c261:	call   42bcf0 <strcmp@plt+0x28568>
  40c266:	mov    rax,QWORD PTR [r13+0x70]
  40c26a:	mov    rax,QWORD PTR [rax]
  40c26d:	mov    rdi,QWORD PTR [rax+0x20]
  40c271:	mov    rsi,rbx
  40c274:	call   42bcf0 <strcmp@plt+0x28568>
  40c279:	mov    r15,QWORD PTR [rbx+0x8]
  40c27d:	cmp    r15,rbx
  40c280:	je     40c39b <strcmp@plt+0x8c13>
  40c286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c290:	mov    rax,QWORD PTR [r15+0x10]
  40c294:	mov    rbx,QWORD PTR [rax]
  40c297:	test   rbx,rbx
  40c29a:	je     40c38c <strcmp@plt+0x8c04>
  40c2a0:	xor    r12d,r12d
  40c2a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c2ad:	nop    DWORD PTR [rax]
  40c2b0:	cmp    QWORD PTR [rbx+0x8],0x0
  40c2b5:	je     40c338 <strcmp@plt+0x8bb0>
  40c2bb:	mov    rax,QWORD PTR [rbx+0x28]
  40c2bf:	mov    r14,QWORD PTR [rax]
  40c2c2:	test   r14,r14
  40c2c5:	je     40c338 <strcmp@plt+0x8bb0>
  40c2c7:	xor    ebp,ebp
  40c2c9:	nop    DWORD PTR [rax+0x0]
  40c2d0:	cmp    QWORD PTR [r14+0x8],0x0
  40c2d5:	je     40c2f0 <strcmp@plt+0x8b68>
  40c2d7:	mov    rdi,QWORD PTR [r14+0x28]
  40c2db:	test   rdi,rdi
  40c2de:	je     40c2f0 <strcmp@plt+0x8b68>
  40c2e0:	call   431ad0 <strcmp@plt+0x2e348>
  40c2e5:	mov    rdi,r13
  40c2e8:	mov    rsi,rax
  40c2eb:	call   407940 <strcmp@plt+0x41b8>
  40c2f0:	mov    rax,QWORD PTR [r14+0x10]
  40c2f4:	mov    rcx,QWORD PTR [r14+0x18]
  40c2f8:	test   rax,rax
  40c2fb:	je     40c310 <strcmp@plt+0x8b88>
  40c2fd:	test   rcx,rcx
  40c300:	je     40c330 <strcmp@plt+0x8ba8>
  40c302:	mov    QWORD PTR [rsp+rbp*8+0x10],rcx
  40c307:	add    rbp,0x1
  40c30b:	jmp    40c330 <strcmp@plt+0x8ba8>
  40c30d:	nop    DWORD PTR [rax]
  40c310:	test   rcx,rcx
  40c313:	je     40c31a <strcmp@plt+0x8b92>
  40c315:	mov    rax,rcx
  40c318:	jmp    40c330 <strcmp@plt+0x8ba8>
  40c31a:	test   rbp,rbp
  40c31d:	je     40c338 <strcmp@plt+0x8bb0>
  40c31f:	mov    rax,QWORD PTR [rsp+rbp*8+0x8]
  40c324:	add    rbp,0xffffffffffffffff
  40c328:	nop    DWORD PTR [rax+rax*1+0x0]
  40c330:	mov    r14,rax
  40c333:	test   rax,rax
  40c336:	jne    40c2d0 <strcmp@plt+0x8b48>
  40c338:	mov    rax,QWORD PTR [rbx+0x10]
  40c33c:	mov    rcx,QWORD PTR [rbx+0x18]
  40c340:	test   rax,rax
  40c343:	je     40c360 <strcmp@plt+0x8bd8>
  40c345:	test   rcx,rcx
  40c348:	je     40c380 <strcmp@plt+0x8bf8>
  40c34a:	mov    QWORD PTR [rsp+r12*8+0x420],rcx
  40c352:	add    r12,0x1
  40c356:	jmp    40c380 <strcmp@plt+0x8bf8>
  40c358:	nop    DWORD PTR [rax+rax*1+0x0]
  40c360:	test   rcx,rcx
  40c363:	je     40c36a <strcmp@plt+0x8be2>
  40c365:	mov    rax,rcx
  40c368:	jmp    40c380 <strcmp@plt+0x8bf8>
  40c36a:	test   r12,r12
  40c36d:	je     40c38c <strcmp@plt+0x8c04>
  40c36f:	mov    rax,QWORD PTR [rsp+r12*8+0x418]
  40c377:	add    r12,0xffffffffffffffff
  40c37b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c380:	mov    rbx,rax
  40c383:	test   rax,rax
  40c386:	jne    40c2b0 <strcmp@plt+0x8b28>
  40c38c:	mov    r15,QWORD PTR [r15+0x8]
  40c390:	cmp    r15,QWORD PTR [rsp+0x8]
  40c395:	jne    40c290 <strcmp@plt+0x8b08>
  40c39b:	mov    rdi,QWORD PTR [rsp+0x8]
  40c3a0:	call   42c250 <strcmp@plt+0x28ac8>
  40c3a5:	mov    rdi,QWORD PTR [r13+0x70]
  40c3a9:	call   407d60 <strcmp@plt+0x45d8>
  40c3ae:	mov    rdi,QWORD PTR [r13+0x68]
  40c3b2:	call   42c250 <strcmp@plt+0x28ac8>
  40c3b7:	mov    rdi,QWORD PTR [r13+0x78]
  40c3bb:	call   42c250 <strcmp@plt+0x28ac8>
  40c3c0:	mov    rdi,QWORD PTR [r13+0xa0]
  40c3c7:	call   437380 <strcmp@plt+0x33bf8>
  40c3cc:	lea    rax,[rip+0x589dd]        # 464db0 <strcmp@plt+0x61628>
  40c3d3:	cmp    DWORD PTR [rax],0x0
  40c3d6:	jle    40c3fc <strcmp@plt+0x8c74>
  40c3d8:	lea    rsi,[rip+0x38e96]        # 445275 <strcmp@plt+0x41aed>
  40c3df:	mov    edi,0x5
  40c3e4:	xor    eax,eax
  40c3e6:	add    rsp,0x828
  40c3ed:	pop    rbx
  40c3ee:	pop    r12
  40c3f0:	pop    r13
  40c3f2:	pop    r14
  40c3f4:	pop    r15
  40c3f6:	pop    rbp
  40c3f7:	jmp    42e800 <strcmp@plt+0x2b078>
  40c3fc:	add    rsp,0x828
  40c403:	pop    rbx
  40c404:	pop    r12
  40c406:	pop    r13
  40c408:	pop    r14
  40c40a:	pop    r15
  40c40c:	pop    rbp
  40c40d:	ret    
  40c40e:	lea    rdi,[rip+0x38b20]        # 444f35 <strcmp@plt+0x417ad>
  40c415:	lea    rsi,[rip+0x38b30]        # 444f4c <strcmp@plt+0x417c4>
  40c41c:	lea    rdx,[rip+0x38b37]        # 444f5a <strcmp@plt+0x417d2>
  40c423:	call   4321d0 <strcmp@plt+0x2ea48>
  40c428:	nop    DWORD PTR [rax+rax*1+0x0]
  40c430:	push   rbp
  40c431:	push   r15
  40c433:	push   r14
  40c435:	push   r13
  40c437:	push   r12
  40c439:	push   rbx
  40c43a:	sub    rsp,0x898
  40c441:	mov    rax,QWORD PTR [rdi+0x8]
  40c445:	cmp    rax,QWORD PTR [rip+0x57b8c]        # 463fd8 <strcmp@plt+0x60850>
  40c44c:	jne    40d2fc <strcmp@plt+0x9b74>
  40c452:	mov    rbx,rdi
  40c455:	mov    eax,DWORD PTR [rdi]
  40c457:	cmp    eax,0x3
  40c45a:	jne    40c47d <strcmp@plt+0x8cf5>
  40c45c:	lea    rax,[rip+0x5894d]        # 464db0 <strcmp@plt+0x61628>
  40c463:	cmp    DWORD PTR [rax],0x0
  40c466:	jle    40c4a1 <strcmp@plt+0x8d19>
  40c468:	lea    rsi,[rip+0x38e1b]        # 44528a <strcmp@plt+0x41b02>
  40c46f:	mov    edi,0x5
  40c474:	xor    eax,eax
  40c476:	call   42e800 <strcmp@plt+0x2b078>
  40c47b:	mov    eax,DWORD PTR [rbx]
  40c47d:	test   eax,eax
  40c47f:	jne    40c4a1 <strcmp@plt+0x8d19>
  40c481:	lea    rax,[rip+0x58928]        # 464db0 <strcmp@plt+0x61628>
  40c488:	mov    eax,DWORD PTR [rax]
  40c48a:	test   eax,eax
  40c48c:	jle    40c4a1 <strcmp@plt+0x8d19>
  40c48e:	lea    rsi,[rip+0x38e0b]        # 4452a0 <strcmp@plt+0x41b18>
  40c495:	mov    edi,0x5
  40c49a:	xor    eax,eax
  40c49c:	call   42e800 <strcmp@plt+0x2b078>
  40c4a1:	mov    rax,QWORD PTR [rbx+0x78]
  40c4a5:	cmp    DWORD PTR [rax+0x18],0x0
  40c4a9:	jne    40c4c8 <strcmp@plt+0x8d40>
  40c4ab:	lea    rsi,[rip+0x38e01]        # 4452b3 <strcmp@plt+0x41b2b>
  40c4b2:	mov    edi,0x3
  40c4b7:	xor    eax,eax
  40c4b9:	call   42e800 <strcmp@plt+0x2b078>
  40c4be:	mov    edi,0x2
  40c4c3:	call   4374e0 <strcmp@plt+0x33d58>
  40c4c8:	lea    rbp,[rbx+0x18]
  40c4cc:	mov    rax,QWORD PTR [rbx+0x48]
  40c4d0:	cmp    DWORD PTR [rax+0x18],0x0
  40c4d4:	jne    40c4f3 <strcmp@plt+0x8d6b>
  40c4d6:	lea    rsi,[rip+0x38e2c]        # 445309 <strcmp@plt+0x41b81>
  40c4dd:	mov    edi,0x1
  40c4e2:	xor    eax,eax
  40c4e4:	call   42e800 <strcmp@plt+0x2b078>
  40c4e9:	mov    edi,0x2
  40c4ee:	call   4374e0 <strcmp@plt+0x33d58>
  40c4f3:	mov    esi,0x2
  40c4f8:	mov    rdi,rbp
  40c4fb:	call   40bf50 <strcmp@plt+0x87c8>
  40c500:	mov    r14,rax
  40c503:	mov    esi,0xa
  40c508:	mov    QWORD PTR [rsp+0x60],rbp
  40c50d:	mov    rdi,rbp
  40c510:	call   40bf50 <strcmp@plt+0x87c8>
  40c515:	mov    rbp,rax
  40c518:	mov    rdi,r14
  40c51b:	call   430af0 <strcmp@plt+0x2d368>
  40c520:	test   al,al
  40c522:	mov    QWORD PTR [rsp+0x58],r14
  40c527:	mov    QWORD PTR [rsp+0x50],rbp
  40c52c:	jne    40c53e <strcmp@plt+0x8db6>
  40c52e:	mov    rdi,rbp
  40c531:	call   430af0 <strcmp@plt+0x2d368>
  40c536:	test   al,al
  40c538:	je     40d2da <strcmp@plt+0x9b52>
  40c53e:	mov    rax,QWORD PTR [rbx+0x38]
  40c542:	mov    rdi,QWORD PTR [rbx+0x40]
  40c546:	mov    rsi,r14
  40c549:	call   QWORD PTR [rax+0x38]
  40c54c:	mov    rdi,r14
  40c54f:	call   430ae0 <strcmp@plt+0x2d358>
  40c554:	xor    edx,edx
  40c556:	mov    rdi,rbx
  40c559:	mov    rsi,rax
  40c55c:	call   407ac0 <strcmp@plt+0x4338>
  40c561:	mov    rax,QWORD PTR [rbx+0x38]
  40c565:	mov    rdi,QWORD PTR [rbx+0x40]
  40c569:	mov    rsi,rbp
  40c56c:	call   QWORD PTR [rax+0x38]
  40c56f:	mov    rdi,rbp
  40c572:	call   430ae0 <strcmp@plt+0x2d358>
  40c577:	xor    edx,edx
  40c579:	mov    rdi,rbx
  40c57c:	mov    rsi,rax
  40c57f:	call   407ac0 <strcmp@plt+0x4338>
  40c584:	cmp    DWORD PTR [rbx+0x80],0x1
  40c58b:	mov    QWORD PTR [rsp],rbx
  40c58f:	jne    40c9a5 <strcmp@plt+0x921d>
  40c595:	mov    rax,QWORD PTR [rbx+0x78]
  40c599:	mov    ecx,DWORD PTR [rax+0x18]
  40c59c:	cmp    ecx,0x2
  40c59f:	jl     40c5c2 <strcmp@plt+0x8e3a>
  40c5a1:	lea    rsi,[rip+0x38e4f]        # 4453f7 <strcmp@plt+0x41c6f>
  40c5a8:	mov    edi,0x2
  40c5ad:	xor    eax,eax
  40c5af:	call   42e800 <strcmp@plt+0x2b078>
  40c5b4:	xor    eax,eax
  40c5b6:	call   43b420 <strcmp@plt+0x37c98>
  40c5bb:	mov    rax,QWORD PTR [rbx+0x78]
  40c5bf:	mov    ecx,DWORD PTR [rax+0x18]
  40c5c2:	cmp    ecx,0x1
  40c5c5:	jne    40c5f9 <strcmp@plt+0x8e71>
  40c5c7:	mov    rax,QWORD PTR [rax+0x8]
  40c5cb:	mov    rax,QWORD PTR [rax+0x10]
  40c5cf:	mov    rdi,QWORD PTR [rax]
  40c5d2:	call   423200 <strcmp@plt+0x1fa78>
  40c5d7:	movzx  eax,ax
  40c5da:	cmp    eax,0x2
  40c5dd:	je     40c5f9 <strcmp@plt+0x8e71>
  40c5df:	lea    rsi,[rip+0x38e53]        # 445439 <strcmp@plt+0x41cb1>
  40c5e6:	mov    edi,0x2
  40c5eb:	xor    eax,eax
  40c5ed:	call   42e800 <strcmp@plt+0x2b078>
  40c5f2:	xor    eax,eax
  40c5f4:	call   43b420 <strcmp@plt+0x37c98>
  40c5f9:	mov    rax,QWORD PTR [rbx+0x48]
  40c5fd:	cmp    DWORD PTR [rax+0x18],0x0
  40c601:	jle    40c61f <strcmp@plt+0x8e97>
  40c603:	lea    rsi,[rip+0x38e72]        # 44547c <strcmp@plt+0x41cf4>
  40c60a:	mov    edi,0x4
  40c60f:	xor    eax,eax
  40c611:	call   42e800 <strcmp@plt+0x2b078>
  40c616:	mov    rdi,QWORD PTR [rbx+0x48]
  40c61a:	call   42c1e0 <strcmp@plt+0x28a58>
  40c61f:	cmp    DWORD PTR [rbx+0x24],0x0
  40c623:	jle    40c63f <strcmp@plt+0x8eb7>
  40c625:	mov    DWORD PTR [rbx+0x24],0x0
  40c62c:	lea    rsi,[rip+0x38e77]        # 4454aa <strcmp@plt+0x41d22>
  40c633:	mov    edi,0x4
  40c638:	xor    eax,eax
  40c63a:	call   42e800 <strcmp@plt+0x2b078>
  40c63f:	call   42bbd0 <strcmp@plt+0x28448>
  40c644:	mov    rbp,rax
  40c647:	mov    rax,QWORD PTR [rbx+0x70]
  40c64b:	mov    rax,QWORD PTR [rax]
  40c64e:	mov    rdi,QWORD PTR [rax]
  40c651:	mov    rsi,rbp
  40c654:	call   42bcf0 <strcmp@plt+0x28568>
  40c659:	mov    rax,QWORD PTR [rbx+0x70]
  40c65d:	mov    rax,QWORD PTR [rax]
  40c660:	mov    rdi,QWORD PTR [rax+0x8]
  40c664:	mov    QWORD PTR [rsp+0x10],rbp
  40c669:	mov    rsi,rbp
  40c66c:	call   42bcf0 <strcmp@plt+0x28568>
  40c671:	mov    rax,QWORD PTR [rbx+0x70]
  40c675:	mov    rcx,QWORD PTR [rax]
  40c678:	mov    rdx,QWORD PTR [rcx+0x10]
  40c67c:	mov    rdx,QWORD PTR [rdx]
  40c67f:	cmp    DWORD PTR [rdx],0x0
  40c682:	je     40c6d9 <strcmp@plt+0x8f51>
  40c684:	xor    ebx,ebx
  40c686:	mov    r14d,0x3
  40c68c:	xor    ebp,ebp
  40c68e:	xchg   ax,ax
  40c690:	mov    rcx,QWORD PTR [rdx+0x10]
  40c694:	mov    esi,ebp
  40c696:	shr    esi,0x4
  40c699:	mov    edi,ebx
  40c69b:	and    dil,0x1e
  40c69f:	shlx   edi,r14d,edi
  40c6a4:	test   DWORD PTR [rcx+rsi*4],edi
  40c6a7:	jne    40c6c5 <strcmp@plt+0x8f3d>
  40c6a9:	mov    rax,QWORD PTR [rdx+0x20]
  40c6ad:	mov    ecx,ebp
  40c6af:	mov    rdi,QWORD PTR [rax+rcx*8]
  40c6b3:	mov    rsi,QWORD PTR [rsp+0x10]
  40c6b8:	call   42bcf0 <strcmp@plt+0x28568>
  40c6bd:	mov    rax,QWORD PTR [rsp]
  40c6c1:	mov    rax,QWORD PTR [rax+0x70]
  40c6c5:	add    ebp,0x1
  40c6c8:	mov    rcx,QWORD PTR [rax]
  40c6cb:	mov    rdx,QWORD PTR [rcx+0x10]
  40c6cf:	mov    rdx,QWORD PTR [rdx]
  40c6d2:	add    ebx,0x2
  40c6d5:	cmp    ebp,DWORD PTR [rdx]
  40c6d7:	jne    40c690 <strcmp@plt+0x8f08>
  40c6d9:	mov    rdx,QWORD PTR [rcx+0x18]
  40c6dd:	mov    rdx,QWORD PTR [rdx]
  40c6e0:	cmp    DWORD PTR [rdx],0x0
  40c6e3:	je     40c739 <strcmp@plt+0x8fb1>
  40c6e5:	xor    ebx,ebx
  40c6e7:	mov    r14d,0x3
  40c6ed:	xor    ebp,ebp
  40c6ef:	nop
  40c6f0:	mov    rcx,QWORD PTR [rdx+0x10]
  40c6f4:	mov    esi,ebp
  40c6f6:	shr    esi,0x4
  40c6f9:	mov    edi,ebx
  40c6fb:	and    dil,0x1e
  40c6ff:	shlx   edi,r14d,edi
  40c704:	test   DWORD PTR [rcx+rsi*4],edi
  40c707:	jne    40c725 <strcmp@plt+0x8f9d>
  40c709:	mov    rax,QWORD PTR [rdx+0x20]
  40c70d:	mov    ecx,ebp
  40c70f:	mov    rdi,QWORD PTR [rax+rcx*8]
  40c713:	mov    rsi,QWORD PTR [rsp+0x10]
  40c718:	call   42bcf0 <strcmp@plt+0x28568>
  40c71d:	mov    rax,QWORD PTR [rsp]
  40c721:	mov    rax,QWORD PTR [rax+0x70]
  40c725:	add    ebp,0x1
  40c728:	mov    rcx,QWORD PTR [rax]
  40c72b:	mov    rdx,QWORD PTR [rcx+0x18]
  40c72f:	mov    rdx,QWORD PTR [rdx]
  40c732:	add    ebx,0x2
  40c735:	cmp    ebp,DWORD PTR [rdx]
  40c737:	jne    40c6f0 <strcmp@plt+0x8f68>
  40c739:	mov    rdi,QWORD PTR [rcx+0x20]
  40c73d:	mov    rbp,QWORD PTR [rsp+0x10]
  40c742:	mov    rsi,rbp
  40c745:	call   42bcf0 <strcmp@plt+0x28568>
  40c74a:	mov    rbx,QWORD PTR [rsp]
  40c74e:	mov    rax,QWORD PTR [rbx+0x70]
  40c752:	mov    rax,QWORD PTR [rax]
  40c755:	mov    rdi,QWORD PTR [rax+0x20]
  40c759:	mov    rsi,rbp
  40c75c:	call   42bcf0 <strcmp@plt+0x28568>
  40c761:	mov    rdx,QWORD PTR [rbp+0x8]
  40c765:	cmp    rdx,rbp
  40c768:	je     40c99b <strcmp@plt+0x9213>
  40c76e:	lea    r13,[rip+0x38d8b]        # 445500 <strcmp@plt+0x41d78>
  40c775:	xor    ebp,ebp
  40c777:	nop    WORD PTR [rax+rax*1+0x0]
  40c780:	mov    rax,QWORD PTR [rdx+0x10]
  40c784:	mov    rcx,QWORD PTR [rax]
  40c787:	test   rcx,rcx
  40c78a:	je     40c98c <strcmp@plt+0x9204>
  40c790:	xor    esi,esi
  40c792:	mov    QWORD PTR [rsp+0x40],rdx
  40c797:	nop    WORD PTR [rax+rax*1+0x0]
  40c7a0:	cmp    QWORD PTR [rcx+0x8],0x0
  40c7a5:	je     40c93f <strcmp@plt+0x91b7>
  40c7ab:	mov    QWORD PTR [rsp+0x38],rsi
  40c7b0:	mov    QWORD PTR [rsp+0x48],rcx
  40c7b5:	mov    rax,QWORD PTR [rcx+0x28]
  40c7b9:	mov    r14,QWORD PTR [rax]
  40c7bc:	test   r14,r14
  40c7bf:	je     40c92c <strcmp@plt+0x91a4>
  40c7c5:	xor    edx,edx
  40c7c7:	nop    WORD PTR [rax+rax*1+0x0]
  40c7d0:	cmp    QWORD PTR [r14+0x8],0x0
  40c7d5:	je     40c8db <strcmp@plt+0x9153>
  40c7db:	mov    rbx,QWORD PTR [r14+0x28]
  40c7df:	test   rbx,rbx
  40c7e2:	je     40c8db <strcmp@plt+0x9153>
  40c7e8:	mov    QWORD PTR [rsp+0x8],rdx
  40c7ed:	mov    DWORD PTR [rsp+0x30],ebp
  40c7f1:	test   ebp,ebp
  40c7f3:	jle    40c80f <strcmp@plt+0x9087>
  40c7f5:	mov    edi,0x2
  40c7fa:	xor    eax,eax
  40c7fc:	lea    rsi,[rip+0x38cce]        # 4454d1 <strcmp@plt+0x41d49>
  40c803:	call   42e800 <strcmp@plt+0x2b078>
  40c808:	xor    eax,eax
  40c80a:	call   43b420 <strcmp@plt+0x37c98>
  40c80f:	mov    rdi,rbx
  40c812:	call   431ad0 <strcmp@plt+0x2e348>
  40c817:	mov    rax,QWORD PTR [rax+0x28]
  40c81b:	mov    r15,QWORD PTR [rax+0x8]
  40c81f:	jmp    40c834 <strcmp@plt+0x90ac>
  40c821:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c82b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c830:	mov    r15,QWORD PTR [r15+0x8]
  40c834:	mov    rdi,rbx
  40c837:	call   431ad0 <strcmp@plt+0x2e348>
  40c83c:	cmp    r15,QWORD PTR [rax+0x28]
  40c840:	je     40c8a0 <strcmp@plt+0x9118>
  40c842:	mov    rbp,QWORD PTR [r15+0x10]
  40c846:	cmp    DWORD PTR [rbp+0x18],0x0
  40c84a:	je     40c830 <strcmp@plt+0x90a8>
  40c84c:	mov    r12,QWORD PTR [rbp+0x8]
  40c850:	cmp    r12,rbp
  40c853:	jne    40c86a <strcmp@plt+0x90e2>
  40c855:	jmp    40c830 <strcmp@plt+0x90a8>
  40c857:	nop    WORD PTR [rax+rax*1+0x0]
  40c860:	mov    r12,QWORD PTR [r12+0x8]
  40c865:	cmp    r12,rbp
  40c868:	je     40c830 <strcmp@plt+0x90a8>
  40c86a:	mov    rax,QWORD PTR [r12+0x10]
  40c86f:	mov    BYTE PTR [rax+0xa],0x0
  40c873:	mov    rax,QWORD PTR [rax]
  40c876:	cmp    DWORD PTR [rax+0x18],0x3
  40c87a:	jne    40c860 <strcmp@plt+0x90d8>
  40c87c:	mov    edi,0x2
  40c881:	xor    eax,eax
  40c883:	mov    rsi,r13
  40c886:	call   42e800 <strcmp@plt+0x2b078>
  40c88b:	xor    eax,eax
  40c88d:	call   43b420 <strcmp@plt+0x37c98>
  40c892:	jmp    40c860 <strcmp@plt+0x90d8>
  40c894:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c89e:	xchg   ax,ax
  40c8a0:	mov    ebp,DWORD PTR [rsp+0x30]
  40c8a4:	add    ebp,0x1
  40c8a7:	mov    edi,0x2
  40c8ac:	xor    eax,eax
  40c8ae:	lea    rsi,[rip+0x38c99]        # 44554e <strcmp@plt+0x41dc6>
  40c8b5:	call   42e800 <strcmp@plt+0x2b078>
  40c8ba:	mov    rax,QWORD PTR [rsp+0x58]
  40c8bf:	mov    rdi,QWORD PTR [rax+0x8]
  40c8c3:	call   4294b0 <strcmp@plt+0x25d28>
  40c8c8:	mov    rax,QWORD PTR [rsp+0x50]
  40c8cd:	mov    rdi,QWORD PTR [rax+0x8]
  40c8d1:	call   4294b0 <strcmp@plt+0x25d28>
  40c8d6:	mov    rdx,QWORD PTR [rsp+0x8]
  40c8db:	mov    rax,QWORD PTR [r14+0x10]
  40c8df:	mov    rcx,QWORD PTR [r14+0x18]
  40c8e3:	test   rax,rax
  40c8e6:	je     40c900 <strcmp@plt+0x9178>
  40c8e8:	test   rcx,rcx
  40c8eb:	je     40c920 <strcmp@plt+0x9198>
  40c8ed:	mov    QWORD PTR [rsp+rdx*8+0x80],rcx
  40c8f5:	add    rdx,0x1
  40c8f9:	jmp    40c920 <strcmp@plt+0x9198>
  40c8fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c900:	test   rcx,rcx
  40c903:	je     40c90a <strcmp@plt+0x9182>
  40c905:	mov    rax,rcx
  40c908:	jmp    40c920 <strcmp@plt+0x9198>
  40c90a:	test   rdx,rdx
  40c90d:	je     40c92c <strcmp@plt+0x91a4>
  40c90f:	mov    rax,QWORD PTR [rsp+rdx*8+0x78]
  40c914:	add    rdx,0xffffffffffffffff
  40c918:	nop    DWORD PTR [rax+rax*1+0x0]
  40c920:	mov    r14,rax
  40c923:	test   rax,rax
  40c926:	jne    40c7d0 <strcmp@plt+0x9048>
  40c92c:	mov    rbx,QWORD PTR [rsp]
  40c930:	mov    rdx,QWORD PTR [rsp+0x40]
  40c935:	mov    rsi,QWORD PTR [rsp+0x38]
  40c93a:	mov    rcx,QWORD PTR [rsp+0x48]
  40c93f:	mov    rax,QWORD PTR [rcx+0x10]
  40c943:	mov    rcx,QWORD PTR [rcx+0x18]
  40c947:	test   rax,rax
  40c94a:	je     40c960 <strcmp@plt+0x91d8>
  40c94c:	test   rcx,rcx
  40c94f:	je     40c980 <strcmp@plt+0x91f8>
  40c951:	mov    QWORD PTR [rsp+rsi*8+0x490],rcx
  40c959:	add    rsi,0x1
  40c95d:	jmp    40c980 <strcmp@plt+0x91f8>
  40c95f:	nop
  40c960:	test   rcx,rcx
  40c963:	je     40c96a <strcmp@plt+0x91e2>
  40c965:	mov    rax,rcx
  40c968:	jmp    40c980 <strcmp@plt+0x91f8>
  40c96a:	test   rsi,rsi
  40c96d:	je     40c98c <strcmp@plt+0x9204>
  40c96f:	mov    rax,QWORD PTR [rsp+rsi*8+0x488]
  40c977:	add    rsi,0xffffffffffffffff
  40c97b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c980:	mov    rcx,rax
  40c983:	test   rax,rax
  40c986:	jne    40c7a0 <strcmp@plt+0x9018>
  40c98c:	mov    rdx,QWORD PTR [rdx+0x8]
  40c990:	cmp    rdx,QWORD PTR [rsp+0x10]
  40c995:	jne    40c780 <strcmp@plt+0x8ff8>
  40c99b:	mov    rdi,QWORD PTR [rsp+0x10]
  40c9a0:	call   42c250 <strcmp@plt+0x28ac8>
  40c9a5:	cmp    DWORD PTR [rbx],0x3
  40c9a8:	jne    40ca04 <strcmp@plt+0x927c>
  40c9aa:	mov    rdi,QWORD PTR [rbx+0x70]
  40c9ae:	mov    esi,0x2
  40c9b3:	call   408280 <strcmp@plt+0x4af8>
  40c9b8:	cmp    eax,0x2
  40c9bb:	jl     40c9d7 <strcmp@plt+0x924f>
  40c9bd:	lea    rsi,[rip+0x38ba9]        # 44556d <strcmp@plt+0x41de5>
  40c9c4:	mov    edi,0x2
  40c9c9:	xor    eax,eax
  40c9cb:	call   42e800 <strcmp@plt+0x2b078>
  40c9d0:	xor    eax,eax
  40c9d2:	call   43b420 <strcmp@plt+0x37c98>
  40c9d7:	mov    rdi,QWORD PTR [rbx+0x70]
  40c9db:	mov    esi,0xa
  40c9e0:	call   408280 <strcmp@plt+0x4af8>
  40c9e5:	cmp    eax,0x2
  40c9e8:	jl     40ca04 <strcmp@plt+0x927c>
  40c9ea:	lea    rsi,[rip+0x38b7c]        # 44556d <strcmp@plt+0x41de5>
  40c9f1:	mov    edi,0x2
  40c9f6:	xor    eax,eax
  40c9f8:	call   42e800 <strcmp@plt+0x2b078>
  40c9fd:	xor    eax,eax
  40c9ff:	call   43b420 <strcmp@plt+0x37c98>
  40ca04:	lea    rbp,[rip+0x583a5]        # 464db0 <strcmp@plt+0x61628>
  40ca0b:	cmp    DWORD PTR [rbp+0x0],0x0
  40ca0f:	jle    40ca3d <strcmp@plt+0x92b5>
  40ca11:	lea    rsi,[rip+0x42261]        # 44ec79 <strcmp@plt+0x4b4f1>
  40ca18:	mov    edi,0x5
  40ca1d:	xor    eax,eax
  40ca1f:	call   42e800 <strcmp@plt+0x2b078>
  40ca24:	cmp    DWORD PTR [rbp+0x0],0x0
  40ca28:	jle    40ca3d <strcmp@plt+0x92b5>
  40ca2a:	lea    rsi,[rip+0x38b8e]        # 4455bf <strcmp@plt+0x41e37>
  40ca31:	mov    edi,0x5
  40ca36:	xor    eax,eax
  40ca38:	call   42e800 <strcmp@plt+0x2b078>
  40ca3d:	mov    rdi,QWORD PTR [rbx+0x70]
  40ca41:	mov    esi,0x5
  40ca46:	call   408500 <strcmp@plt+0x4d78>
  40ca4b:	mov    rdi,QWORD PTR [rbx+0x30]
  40ca4f:	mov    esi,0x5
  40ca54:	call   4088e0 <strcmp@plt+0x5158>
  40ca59:	mov    esi,0x5
  40ca5e:	mov    rdi,rbx
  40ca61:	call   40fcf0 <strcmp@plt+0xc568>
  40ca66:	cmp    DWORD PTR [rbp+0x0],0x0
  40ca6a:	jle    40ca86 <strcmp@plt+0x92fe>
  40ca6c:	lea    rsi,[rip+0x38b80]        # 4455f3 <strcmp@plt+0x41e6b>
  40ca73:	lea    rdx,[rip+0x429ac]        # 44f426 <strcmp@plt+0x4bc9e>
  40ca7a:	mov    edi,0x5
  40ca7f:	xor    eax,eax
  40ca81:	call   42e800 <strcmp@plt+0x2b078>
  40ca86:	mov    rdi,QWORD PTR [rbx+0x48]
  40ca8a:	lea    rsi,[rip+0x1669f]        # 423130 <strcmp@plt+0x1f9a8>
  40ca91:	mov    edx,0x5
  40ca96:	call   42bf40 <strcmp@plt+0x287b8>
  40ca9b:	cmp    DWORD PTR [rbp+0x0],0x0
  40ca9f:	jle    40cab4 <strcmp@plt+0x932c>
  40caa1:	lea    rsi,[rip+0x38613]        # 4450bb <strcmp@plt+0x41933>
  40caa8:	mov    edi,0x5
  40caad:	xor    eax,eax
  40caaf:	call   42e800 <strcmp@plt+0x2b078>
  40cab4:	mov    esi,0x5
  40cab9:	mov    rdi,rbx
  40cabc:	call   40fa20 <strcmp@plt+0xc298>
  40cac1:	cmp    DWORD PTR [rbp+0x0],0x0
  40cac5:	jle    40cae1 <strcmp@plt+0x9359>
  40cac7:	lea    rsi,[rip+0x38b25]        # 4455f3 <strcmp@plt+0x41e6b>
  40cace:	lea    rdx,[rip+0x38b41]        # 445616 <strcmp@plt+0x41e8e>
  40cad5:	mov    edi,0x5
  40cada:	xor    eax,eax
  40cadc:	call   42e800 <strcmp@plt+0x2b078>
  40cae1:	mov    rdi,QWORD PTR [rbx+0x68]
  40cae5:	lea    rsi,[rip+0x16644]        # 423130 <strcmp@plt+0x1f9a8>
  40caec:	mov    edx,0x5
  40caf1:	call   42bf40 <strcmp@plt+0x287b8>
  40caf6:	cmp    DWORD PTR [rbp+0x0],0x0
  40cafa:	jle    40cb0f <strcmp@plt+0x9387>
  40cafc:	lea    rsi,[rip+0x385b8]        # 4450bb <strcmp@plt+0x41933>
  40cb03:	mov    edi,0x5
  40cb08:	xor    eax,eax
  40cb0a:	call   42e800 <strcmp@plt+0x2b078>
  40cb0f:	mov    rdi,QWORD PTR [rbx+0x60]
  40cb13:	cmp    DWORD PTR [rdi+0x18],0x0
  40cb17:	je     40cb67 <strcmp@plt+0x93df>
  40cb19:	cmp    DWORD PTR [rbp+0x0],0x0
  40cb1d:	jle    40cb3d <strcmp@plt+0x93b5>
  40cb1f:	lea    rsi,[rip+0x38acd]        # 4455f3 <strcmp@plt+0x41e6b>
  40cb26:	lea    rdx,[rip+0x38af4]        # 445621 <strcmp@plt+0x41e99>
  40cb2d:	mov    edi,0x5
  40cb32:	xor    eax,eax
  40cb34:	call   42e800 <strcmp@plt+0x2b078>
  40cb39:	mov    rdi,QWORD PTR [rbx+0x60]
  40cb3d:	lea    rsi,[rip+0x165ec]        # 423130 <strcmp@plt+0x1f9a8>
  40cb44:	mov    edx,0x5
  40cb49:	call   42bf40 <strcmp@plt+0x287b8>
  40cb4e:	cmp    DWORD PTR [rbp+0x0],0x0
  40cb52:	jle    40cb67 <strcmp@plt+0x93df>
  40cb54:	lea    rsi,[rip+0x38560]        # 4450bb <strcmp@plt+0x41933>
  40cb5b:	mov    edi,0x5
  40cb60:	xor    eax,eax
  40cb62:	call   42e800 <strcmp@plt+0x2b078>
  40cb67:	call   42bbd0 <strcmp@plt+0x28448>
  40cb6c:	mov    rbp,rax
  40cb6f:	mov    rax,QWORD PTR [rbx+0x70]
  40cb73:	mov    rax,QWORD PTR [rax]
  40cb76:	mov    rdi,QWORD PTR [rax]
  40cb79:	mov    rsi,rbp
  40cb7c:	call   42bcf0 <strcmp@plt+0x28568>
  40cb81:	mov    rax,QWORD PTR [rbx+0x70]
  40cb85:	mov    rax,QWORD PTR [rax]
  40cb88:	mov    rdi,QWORD PTR [rax+0x8]
  40cb8c:	mov    QWORD PTR [rsp+0x8],rbp
  40cb91:	mov    rsi,rbp
  40cb94:	call   42bcf0 <strcmp@plt+0x28568>
  40cb99:	mov    rax,QWORD PTR [rbx+0x70]
  40cb9d:	mov    rcx,QWORD PTR [rax]
  40cba0:	mov    rdx,QWORD PTR [rcx+0x10]
  40cba4:	mov    rdx,QWORD PTR [rdx]
  40cba7:	cmp    DWORD PTR [rdx],0x0
  40cbaa:	je     40cc09 <strcmp@plt+0x9481>
  40cbac:	xor    ebx,ebx
  40cbae:	mov    r14d,0x3
  40cbb4:	xor    ebp,ebp
  40cbb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cbc0:	mov    rcx,QWORD PTR [rdx+0x10]
  40cbc4:	mov    esi,ebp
  40cbc6:	shr    esi,0x4
  40cbc9:	mov    edi,ebx
  40cbcb:	and    dil,0x1e
  40cbcf:	shlx   edi,r14d,edi
  40cbd4:	test   DWORD PTR [rcx+rsi*4],edi
  40cbd7:	jne    40cbf5 <strcmp@plt+0x946d>
  40cbd9:	mov    rax,QWORD PTR [rdx+0x20]
  40cbdd:	mov    ecx,ebp
  40cbdf:	mov    rdi,QWORD PTR [rax+rcx*8]
  40cbe3:	mov    rsi,QWORD PTR [rsp+0x8]
  40cbe8:	call   42bcf0 <strcmp@plt+0x28568>
  40cbed:	mov    rax,QWORD PTR [rsp]
  40cbf1:	mov    rax,QWORD PTR [rax+0x70]
  40cbf5:	add    ebp,0x1
  40cbf8:	mov    rcx,QWORD PTR [rax]
  40cbfb:	mov    rdx,QWORD PTR [rcx+0x10]
  40cbff:	mov    rdx,QWORD PTR [rdx]
  40cc02:	add    ebx,0x2
  40cc05:	cmp    ebp,DWORD PTR [rdx]
  40cc07:	jne    40cbc0 <strcmp@plt+0x9438>
  40cc09:	mov    rdx,QWORD PTR [rcx+0x18]
  40cc0d:	mov    rdx,QWORD PTR [rdx]
  40cc10:	cmp    DWORD PTR [rdx],0x0
  40cc13:	je     40cc69 <strcmp@plt+0x94e1>
  40cc15:	xor    ebx,ebx
  40cc17:	mov    r14d,0x3
  40cc1d:	xor    ebp,ebp
  40cc1f:	nop
  40cc20:	mov    rcx,QWORD PTR [rdx+0x10]
  40cc24:	mov    esi,ebp
  40cc26:	shr    esi,0x4
  40cc29:	mov    edi,ebx
  40cc2b:	and    dil,0x1e
  40cc2f:	shlx   edi,r14d,edi
  40cc34:	test   DWORD PTR [rcx+rsi*4],edi
  40cc37:	jne    40cc55 <strcmp@plt+0x94cd>
  40cc39:	mov    rax,QWORD PTR [rdx+0x20]
  40cc3d:	mov    ecx,ebp
  40cc3f:	mov    rdi,QWORD PTR [rax+rcx*8]
  40cc43:	mov    rsi,QWORD PTR [rsp+0x8]
  40cc48:	call   42bcf0 <strcmp@plt+0x28568>
  40cc4d:	mov    rax,QWORD PTR [rsp]
  40cc51:	mov    rax,QWORD PTR [rax+0x70]
  40cc55:	add    ebp,0x1
  40cc58:	mov    rcx,QWORD PTR [rax]
  40cc5b:	mov    rdx,QWORD PTR [rcx+0x18]
  40cc5f:	mov    rdx,QWORD PTR [rdx]
  40cc62:	add    ebx,0x2
  40cc65:	cmp    ebp,DWORD PTR [rdx]
  40cc67:	jne    40cc20 <strcmp@plt+0x9498>
  40cc69:	mov    rdi,QWORD PTR [rcx+0x20]
  40cc6d:	mov    rbx,QWORD PTR [rsp+0x8]
  40cc72:	mov    rsi,rbx
  40cc75:	call   42bcf0 <strcmp@plt+0x28568>
  40cc7a:	mov    rax,QWORD PTR [rsp]
  40cc7e:	mov    rax,QWORD PTR [rax+0x70]
  40cc82:	mov    rax,QWORD PTR [rax]
  40cc85:	mov    rdi,QWORD PTR [rax+0x20]
  40cc89:	mov    rsi,rbx
  40cc8c:	call   42bcf0 <strcmp@plt+0x28568>
  40cc91:	mov    rax,QWORD PTR [rbx+0x8]
  40cc95:	cmp    rax,rbx
  40cc98:	je     40ce10 <strcmp@plt+0x9688>
  40cc9e:	lea    r12,[rip+0x3898e]        # 445633 <strcmp@plt+0x41eab>
  40cca5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ccaf:	nop
  40ccb0:	mov    QWORD PTR [rsp+0x30],rax
  40ccb5:	mov    rax,QWORD PTR [rax+0x10]
  40ccb9:	mov    r14,QWORD PTR [rax]
  40ccbc:	test   r14,r14
  40ccbf:	je     40cdfc <strcmp@plt+0x9674>
  40ccc5:	xor    ebx,ebx
  40ccc7:	nop    WORD PTR [rax+rax*1+0x0]
  40ccd0:	cmp    QWORD PTR [r14+0x8],0x0
  40ccd5:	je     40cdac <strcmp@plt+0x9624>
  40ccdb:	mov    rax,QWORD PTR [r14+0x28]
  40ccdf:	mov    r15,QWORD PTR [rax]
  40cce2:	test   r15,r15
  40cce5:	je     40cdac <strcmp@plt+0x9624>
  40cceb:	xor    r13d,r13d
  40ccee:	xchg   ax,ax
  40ccf0:	cmp    QWORD PTR [r15+0x8],0x0
  40ccf5:	je     40cd57 <strcmp@plt+0x95cf>
  40ccf7:	mov    rbp,QWORD PTR [r15+0x28]
  40ccfb:	test   rbp,rbp
  40ccfe:	je     40cd57 <strcmp@plt+0x95cf>
  40cd00:	mov    rdi,rbp
  40cd03:	call   431ad0 <strcmp@plt+0x2e348>
  40cd08:	mov    rdi,QWORD PTR [rsp]
  40cd0c:	mov    rsi,rax
  40cd0f:	call   4078f0 <strcmp@plt+0x4168>
  40cd14:	cmp    eax,0x1
  40cd17:	je     40cd45 <strcmp@plt+0x95bd>
  40cd19:	mov    rdi,rbp
  40cd1c:	call   431b40 <strcmp@plt+0x2e3b8>
  40cd21:	mov    rdi,rax
  40cd24:	call   423130 <strcmp@plt+0x1f9a8>
  40cd29:	mov    rcx,rax
  40cd2c:	mov    edi,0x2
  40cd31:	xor    eax,eax
  40cd33:	mov    rsi,r12
  40cd36:	mov    rdx,rcx
  40cd39:	call   42e800 <strcmp@plt+0x2b078>
  40cd3e:	xor    eax,eax
  40cd40:	call   43b420 <strcmp@plt+0x37c98>
  40cd45:	mov    rcx,QWORD PTR [rsp]
  40cd49:	mov    rax,QWORD PTR [rcx+0x38]
  40cd4d:	mov    rdi,QWORD PTR [rcx+0x40]
  40cd51:	mov    rsi,rbp
  40cd54:	call   QWORD PTR [rax+0x30]
  40cd57:	mov    rax,QWORD PTR [r15+0x10]
  40cd5b:	mov    rcx,QWORD PTR [r15+0x18]
  40cd5f:	test   rax,rax
  40cd62:	je     40cd80 <strcmp@plt+0x95f8>
  40cd64:	test   rcx,rcx
  40cd67:	je     40cda0 <strcmp@plt+0x9618>
  40cd69:	mov    QWORD PTR [rsp+r13*8+0x80],rcx
  40cd71:	add    r13,0x1
  40cd75:	jmp    40cda0 <strcmp@plt+0x9618>
  40cd77:	nop    WORD PTR [rax+rax*1+0x0]
  40cd80:	test   rcx,rcx
  40cd83:	je     40cd8a <strcmp@plt+0x9602>
  40cd85:	mov    rax,rcx
  40cd88:	jmp    40cda0 <strcmp@plt+0x9618>
  40cd8a:	test   r13,r13
  40cd8d:	je     40cdac <strcmp@plt+0x9624>
  40cd8f:	mov    rax,QWORD PTR [rsp+r13*8+0x78]
  40cd94:	add    r13,0xffffffffffffffff
  40cd98:	nop    DWORD PTR [rax+rax*1+0x0]
  40cda0:	mov    r15,rax
  40cda3:	test   rax,rax
  40cda6:	jne    40ccf0 <strcmp@plt+0x9568>
  40cdac:	mov    rax,QWORD PTR [r14+0x10]
  40cdb0:	mov    rcx,QWORD PTR [r14+0x18]
  40cdb4:	test   rax,rax
  40cdb7:	je     40cdd0 <strcmp@plt+0x9648>
  40cdb9:	test   rcx,rcx
  40cdbc:	je     40cdf0 <strcmp@plt+0x9668>
  40cdbe:	mov    QWORD PTR [rsp+rbx*8+0x490],rcx
  40cdc6:	add    rbx,0x1
  40cdca:	jmp    40cdf0 <strcmp@plt+0x9668>
  40cdcc:	nop    DWORD PTR [rax+0x0]
  40cdd0:	test   rcx,rcx
  40cdd3:	je     40cdda <strcmp@plt+0x9652>
  40cdd5:	mov    rax,rcx
  40cdd8:	jmp    40cdf0 <strcmp@plt+0x9668>
  40cdda:	test   rbx,rbx
  40cddd:	je     40cdfc <strcmp@plt+0x9674>
  40cddf:	mov    rax,QWORD PTR [rsp+rbx*8+0x488]
  40cde7:	add    rbx,0xffffffffffffffff
  40cdeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cdf0:	mov    r14,rax
  40cdf3:	test   rax,rax
  40cdf6:	jne    40ccd0 <strcmp@plt+0x9548>
  40cdfc:	mov    rax,QWORD PTR [rsp+0x30]
  40ce01:	mov    rax,QWORD PTR [rax+0x8]
  40ce05:	cmp    rax,QWORD PTR [rsp+0x8]
  40ce0a:	jne    40ccb0 <strcmp@plt+0x9528>
  40ce10:	mov    rdi,QWORD PTR [rsp+0x8]
  40ce15:	call   42c250 <strcmp@plt+0x28ac8>
  40ce1a:	mov    rbx,QWORD PTR [rsp]
  40ce1e:	cmp    DWORD PTR [rbx+0x80],0x0
  40ce25:	je     40d24c <strcmp@plt+0x9ac4>
  40ce2b:	mov    rax,QWORD PTR [rbx+0x78]
  40ce2f:	cmp    DWORD PTR [rax+0x18],0x0
  40ce33:	je     40d2aa <strcmp@plt+0x9b22>
  40ce39:	call   42bbd0 <strcmp@plt+0x28448>
  40ce3e:	mov    rbp,rax
  40ce41:	mov    rax,QWORD PTR [rbx+0x70]
  40ce45:	mov    rax,QWORD PTR [rax]
  40ce48:	mov    rdi,QWORD PTR [rax]
  40ce4b:	mov    rsi,rbp
  40ce4e:	call   42bcf0 <strcmp@plt+0x28568>
  40ce53:	mov    rax,QWORD PTR [rbx+0x70]
  40ce57:	mov    rax,QWORD PTR [rax]
  40ce5a:	mov    rdi,QWORD PTR [rax+0x8]
  40ce5e:	mov    QWORD PTR [rsp+0x18],rbp
  40ce63:	mov    rsi,rbp
  40ce66:	call   42bcf0 <strcmp@plt+0x28568>
  40ce6b:	mov    rax,QWORD PTR [rbx+0x70]
  40ce6f:	mov    rcx,QWORD PTR [rax]
  40ce72:	mov    rdx,QWORD PTR [rcx+0x10]
  40ce76:	mov    rdx,QWORD PTR [rdx]
  40ce79:	cmp    DWORD PTR [rdx],0x0
  40ce7c:	je     40ced9 <strcmp@plt+0x9751>
  40ce7e:	xor    ebx,ebx
  40ce80:	mov    r14d,0x3
  40ce86:	xor    ebp,ebp
  40ce88:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce90:	mov    rcx,QWORD PTR [rdx+0x10]
  40ce94:	mov    esi,ebp
  40ce96:	shr    esi,0x4
  40ce99:	mov    edi,ebx
  40ce9b:	and    dil,0x1e
  40ce9f:	shlx   edi,r14d,edi
  40cea4:	test   DWORD PTR [rcx+rsi*4],edi
  40cea7:	jne    40cec5 <strcmp@plt+0x973d>
  40cea9:	mov    rax,QWORD PTR [rdx+0x20]
  40cead:	mov    ecx,ebp
  40ceaf:	mov    rdi,QWORD PTR [rax+rcx*8]
  40ceb3:	mov    rsi,QWORD PTR [rsp+0x18]
  40ceb8:	call   42bcf0 <strcmp@plt+0x28568>
  40cebd:	mov    rax,QWORD PTR [rsp]
  40cec1:	mov    rax,QWORD PTR [rax+0x70]
  40cec5:	add    ebp,0x1
  40cec8:	mov    rcx,QWORD PTR [rax]
  40cecb:	mov    rdx,QWORD PTR [rcx+0x10]
  40cecf:	mov    rdx,QWORD PTR [rdx]
  40ced2:	add    ebx,0x2
  40ced5:	cmp    ebp,DWORD PTR [rdx]
  40ced7:	jne    40ce90 <strcmp@plt+0x9708>
  40ced9:	mov    rdx,QWORD PTR [rcx+0x18]
  40cedd:	mov    rdx,QWORD PTR [rdx]
  40cee0:	cmp    DWORD PTR [rdx],0x0
  40cee3:	je     40cf39 <strcmp@plt+0x97b1>
  40cee5:	xor    ebx,ebx
  40cee7:	mov    r14d,0x3
  40ceed:	xor    ebp,ebp
  40ceef:	nop
  40cef0:	mov    rcx,QWORD PTR [rdx+0x10]
  40cef4:	mov    esi,ebp
  40cef6:	shr    esi,0x4
  40cef9:	mov    edi,ebx
  40cefb:	and    dil,0x1e
  40ceff:	shlx   edi,r14d,edi
  40cf04:	test   DWORD PTR [rcx+rsi*4],edi
  40cf07:	jne    40cf25 <strcmp@plt+0x979d>
  40cf09:	mov    rax,QWORD PTR [rdx+0x20]
  40cf0d:	mov    ecx,ebp
  40cf0f:	mov    rdi,QWORD PTR [rax+rcx*8]
  40cf13:	mov    rsi,QWORD PTR [rsp+0x18]
  40cf18:	call   42bcf0 <strcmp@plt+0x28568>
  40cf1d:	mov    rax,QWORD PTR [rsp]
  40cf21:	mov    rax,QWORD PTR [rax+0x70]
  40cf25:	add    ebp,0x1
  40cf28:	mov    rcx,QWORD PTR [rax]
  40cf2b:	mov    rdx,QWORD PTR [rcx+0x18]
  40cf2f:	mov    rdx,QWORD PTR [rdx]
  40cf32:	add    ebx,0x2
  40cf35:	cmp    ebp,DWORD PTR [rdx]
  40cf37:	jne    40cef0 <strcmp@plt+0x9768>
  40cf39:	mov    rdi,QWORD PTR [rcx+0x20]
  40cf3d:	mov    rbx,QWORD PTR [rsp+0x18]
  40cf42:	mov    rsi,rbx
  40cf45:	call   42bcf0 <strcmp@plt+0x28568>
  40cf4a:	mov    rax,QWORD PTR [rsp]
  40cf4e:	mov    rax,QWORD PTR [rax+0x70]
  40cf52:	mov    rax,QWORD PTR [rax]
  40cf55:	mov    rdi,QWORD PTR [rax+0x20]
  40cf59:	mov    rsi,rbx
  40cf5c:	call   42bcf0 <strcmp@plt+0x28568>
  40cf61:	mov    rax,QWORD PTR [rbx+0x8]
  40cf65:	cmp    rax,rbx
  40cf68:	je     40d240 <strcmp@plt+0x9ab8>
  40cf6e:	lea    r14,[rip+0x6362b]        # 4705a0 <strcmp@plt+0x6ce18>
  40cf75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf7f:	nop
  40cf80:	mov    QWORD PTR [rsp+0x68],rax
  40cf85:	mov    rax,QWORD PTR [rax+0x10]
  40cf89:	mov    rcx,QWORD PTR [rax]
  40cf8c:	test   rcx,rcx
  40cf8f:	je     40d22c <strcmp@plt+0x9aa4>
  40cf95:	xor    eax,eax
  40cf97:	mov    QWORD PTR [rsp+0x20],rax
  40cf9c:	nop    DWORD PTR [rax+0x0]
  40cfa0:	cmp    QWORD PTR [rcx+0x8],0x0
  40cfa5:	mov    rax,rcx
  40cfa8:	je     40d1c1 <strcmp@plt+0x9a39>
  40cfae:	mov    QWORD PTR [rsp+0x70],rax
  40cfb3:	mov    rax,QWORD PTR [rax+0x28]
  40cfb7:	mov    rbx,QWORD PTR [rax]
  40cfba:	test   rbx,rbx
  40cfbd:	je     40d1bc <strcmp@plt+0x9a34>
  40cfc3:	xor    eax,eax
  40cfc5:	mov    QWORD PTR [rsp+0x28],rax
  40cfca:	nop    WORD PTR [rax+rax*1+0x0]
  40cfd0:	cmp    QWORD PTR [rbx+0x8],0x0
  40cfd5:	je     40d14a <strcmp@plt+0x99c2>
  40cfdb:	mov    r13,QWORD PTR [rbx+0x28]
  40cfdf:	test   r13,r13
  40cfe2:	je     40d14a <strcmp@plt+0x99c2>
  40cfe8:	mov    rdi,r13
  40cfeb:	call   431ad0 <strcmp@plt+0x2e348>
  40cff0:	mov    r15,rax
  40cff3:	mov    rdx,QWORD PTR [r14]
  40cff6:	lea    rax,[rip+0x635ab]        # 4705a8 <strcmp@plt+0x6ce20>
  40cffd:	mov    rcx,QWORD PTR [rax]
  40d000:	mov    esi,0x8
  40d005:	mov    rdi,r13
  40d008:	call   437750 <strcmp@plt+0x33fc8>
  40d00d:	mov    QWORD PTR [rsp+0x10],r15
  40d012:	mov    rax,QWORD PTR [r15+0x28]
  40d016:	mov    rdx,QWORD PTR [rax+0x8]
  40d01a:	cmp    rdx,rax
  40d01d:	je     40d14a <strcmp@plt+0x99c2>
  40d023:	mov    QWORD PTR [rsp+0x78],rbx
  40d028:	mov    QWORD PTR [rsp+0x8],r13
  40d02d:	nop    DWORD PTR [rax]
  40d030:	mov    rsi,QWORD PTR [rdx+0x10]
  40d034:	cmp    DWORD PTR [rsi+0x18],0x0
  40d038:	je     40d13d <strcmp@plt+0x99b5>
  40d03e:	mov    rdi,QWORD PTR [rsi+0x8]
  40d042:	mov    rbp,QWORD PTR [rdi+0x10]
  40d046:	mov    rcx,QWORD PTR [rbp+0x0]
  40d04a:	cmp    DWORD PTR [rcx+0x18],0x0
  40d04e:	je     40d13d <strcmp@plt+0x99b5>
  40d054:	cmp    rdi,rsi
  40d057:	je     40d13d <strcmp@plt+0x99b5>
  40d05d:	mov    QWORD PTR [rsp+0x38],rdi
  40d062:	mov    QWORD PTR [rsp+0x48],rsi
  40d067:	mov    QWORD PTR [rsp+0x40],rdx
  40d06c:	jmp    40d079 <strcmp@plt+0x98f1>
  40d06e:	xchg   ax,ax
  40d070:	mov    QWORD PTR [rsp+0x38],rax
  40d075:	mov    rbp,QWORD PTR [rax+0x10]
  40d079:	mov    QWORD PTR [rsp+0x30],rbp
  40d07e:	cmp    BYTE PTR [rbp+0x9],0x0
  40d082:	mov    r15,QWORD PTR [rsp]
  40d086:	je     40d116 <strcmp@plt+0x998e>
  40d08c:	mov    rax,QWORD PTR [r15+0x78]
  40d090:	mov    r13,QWORD PTR [rax+0x8]
  40d094:	cmp    r13,rax
  40d097:	je     40d116 <strcmp@plt+0x998e>
  40d09d:	nop    DWORD PTR [rax]
  40d0a0:	mov    rbx,QWORD PTR [r13+0x10]
  40d0a4:	mov    edi,0x18
  40d0a9:	call   4320b0 <strcmp@plt+0x2e928>
  40d0ae:	mov    r12,rax
  40d0b1:	mov    rbp,QWORD PTR [rsp+0x8]
  40d0b6:	mov    QWORD PTR [rax],rbp
  40d0b9:	mov    rax,QWORD PTR [rsp+0x30]
  40d0be:	mov    QWORD PTR [r12+0x8],rax
  40d0c3:	mov    QWORD PTR [r12+0x10],rbx
  40d0c8:	mov    esi,0x4
  40d0cd:	mov    rdi,rbp
  40d0d0:	call   431d20 <strcmp@plt+0x2e598>
  40d0d5:	mov    edi,0x8
  40d0da:	mov    rsi,r15
  40d0dd:	lea    rdx,[rip+0x2e4c]        # 40ff30 <strcmp@plt+0xc7a8>
  40d0e4:	mov    rcx,r12
  40d0e7:	lea    r8,[rip+0x31a2]        # 410290 <strcmp@plt+0xcb08>
  40d0ee:	call   4375d0 <strcmp@plt+0x33e48>
  40d0f3:	mov    rbx,rax
  40d0f6:	mov    rdi,QWORD PTR [r14]
  40d0f9:	mov    rsi,rbp
  40d0fc:	mov    rdx,rax
  40d0ff:	call   4378d0 <strcmp@plt+0x34148>
  40d104:	mov    rdi,rbx
  40d107:	call   40ff30 <strcmp@plt+0xc7a8>
  40d10c:	mov    r13,QWORD PTR [r13+0x8]
  40d110:	cmp    r13,QWORD PTR [r15+0x78]
  40d114:	jne    40d0a0 <strcmp@plt+0x9918>
  40d116:	mov    rax,QWORD PTR [rsp+0x38]
  40d11b:	mov    rax,QWORD PTR [rax+0x8]
  40d11f:	cmp    rax,QWORD PTR [rsp+0x48]
  40d124:	jne    40d070 <strcmp@plt+0x98e8>
  40d12a:	mov    rax,QWORD PTR [rsp+0x10]
  40d12f:	mov    rax,QWORD PTR [rax+0x28]
  40d133:	mov    rbx,QWORD PTR [rsp+0x78]
  40d138:	mov    rdx,QWORD PTR [rsp+0x40]
  40d13d:	mov    rdx,QWORD PTR [rdx+0x8]
  40d141:	cmp    rdx,rax
  40d144:	jne    40d030 <strcmp@plt+0x98a8>
  40d14a:	mov    rax,QWORD PTR [rbx+0x10]
  40d14e:	mov    rcx,QWORD PTR [rbx+0x18]
  40d152:	test   rax,rax
  40d155:	je     40d180 <strcmp@plt+0x99f8>
  40d157:	test   rcx,rcx
  40d15a:	je     40d1b0 <strcmp@plt+0x9a28>
  40d15c:	mov    rdx,QWORD PTR [rsp+0x28]
  40d161:	mov    QWORD PTR [rsp+rdx*8+0x80],rcx
  40d169:	add    rdx,0x1
  40d16d:	mov    QWORD PTR [rsp+0x28],rdx
  40d172:	jmp    40d1b0 <strcmp@plt+0x9a28>
  40d174:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d17e:	xchg   ax,ax
  40d180:	test   rcx,rcx
  40d183:	je     40d18a <strcmp@plt+0x9a02>
  40d185:	mov    rax,rcx
  40d188:	jmp    40d1b0 <strcmp@plt+0x9a28>
  40d18a:	cmp    QWORD PTR [rsp+0x28],0x0
  40d190:	je     40d1bc <strcmp@plt+0x9a34>
  40d192:	mov    rcx,QWORD PTR [rsp+0x28]
  40d197:	mov    rax,QWORD PTR [rsp+rcx*8+0x78]
  40d19c:	add    rcx,0xffffffffffffffff
  40d1a0:	mov    QWORD PTR [rsp+0x28],rcx
  40d1a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d1af:	nop
  40d1b0:	mov    rbx,rax
  40d1b3:	test   rax,rax
  40d1b6:	jne    40cfd0 <strcmp@plt+0x9848>
  40d1bc:	mov    rax,QWORD PTR [rsp+0x70]
  40d1c1:	mov    rcx,rax
  40d1c4:	mov    rax,QWORD PTR [rax+0x10]
  40d1c8:	mov    rcx,QWORD PTR [rcx+0x18]
  40d1cc:	test   rax,rax
  40d1cf:	je     40d1f0 <strcmp@plt+0x9a68>
  40d1d1:	test   rcx,rcx
  40d1d4:	je     40d220 <strcmp@plt+0x9a98>
  40d1d6:	mov    rdx,QWORD PTR [rsp+0x20]
  40d1db:	mov    QWORD PTR [rsp+rdx*8+0x490],rcx
  40d1e3:	add    rdx,0x1
  40d1e7:	mov    QWORD PTR [rsp+0x20],rdx
  40d1ec:	jmp    40d220 <strcmp@plt+0x9a98>
  40d1ee:	xchg   ax,ax
  40d1f0:	test   rcx,rcx
  40d1f3:	je     40d1fa <strcmp@plt+0x9a72>
  40d1f5:	mov    rax,rcx
  40d1f8:	jmp    40d220 <strcmp@plt+0x9a98>
  40d1fa:	cmp    QWORD PTR [rsp+0x20],0x0
  40d200:	je     40d22c <strcmp@plt+0x9aa4>
  40d202:	mov    rcx,QWORD PTR [rsp+0x20]
  40d207:	mov    rax,QWORD PTR [rsp+rcx*8+0x488]
  40d20f:	add    rcx,0xffffffffffffffff
  40d213:	mov    QWORD PTR [rsp+0x20],rcx
  40d218:	nop    DWORD PTR [rax+rax*1+0x0]
  40d220:	mov    rcx,rax
  40d223:	test   rax,rax
  40d226:	jne    40cfa0 <strcmp@plt+0x9818>
  40d22c:	mov    rax,QWORD PTR [rsp+0x68]
  40d231:	mov    rax,QWORD PTR [rax+0x8]
  40d235:	cmp    rax,QWORD PTR [rsp+0x18]
  40d23a:	jne    40cf80 <strcmp@plt+0x97f8>
  40d240:	mov    rdi,QWORD PTR [rsp+0x18]
  40d245:	call   42c250 <strcmp@plt+0x28ac8>
  40d24a:	jmp    40d2aa <strcmp@plt+0x9b22>
  40d24c:	lea    rax,[rip+0x57b5d]        # 464db0 <strcmp@plt+0x61628>
  40d253:	cmp    DWORD PTR [rax],0x0
  40d256:	jle    40d270 <strcmp@plt+0x9ae8>
  40d258:	lea    rsi,[rip+0x384f2]        # 445751 <strcmp@plt+0x41fc9>
  40d25f:	mov    edi,0x5
  40d264:	mov    edx,0x1
  40d269:	xor    eax,eax
  40d26b:	call   42e800 <strcmp@plt+0x2b078>
  40d270:	mov    rdi,QWORD PTR [rbx+0xa0]
  40d277:	test   rdi,rdi
  40d27a:	jne    40d2a0 <strcmp@plt+0x9b18>
  40d27c:	lea    rdx,[rip+0x301d]        # 4102a0 <strcmp@plt+0xcb18>
  40d283:	mov    edi,0x6
  40d288:	xor    r8d,r8d
  40d28b:	mov    rsi,rbx
  40d28e:	mov    rcx,rbx
  40d291:	call   437580 <strcmp@plt+0x33df8>
  40d296:	mov    rdi,rax
  40d299:	mov    QWORD PTR [rbx+0xa0],rax
  40d2a0:	mov    esi,0x1
  40d2a5:	call   437460 <strcmp@plt+0x33cd8>
  40d2aa:	mov    rbx,QWORD PTR [rsp+0x60]
  40d2af:	mov    rdi,rbx
  40d2b2:	mov    rsi,QWORD PTR [rsp+0x58]
  40d2b7:	call   40b840 <strcmp@plt+0x80b8>
  40d2bc:	mov    rdi,rbx
  40d2bf:	mov    rsi,QWORD PTR [rsp+0x50]
  40d2c4:	add    rsp,0x898
  40d2cb:	pop    rbx
  40d2cc:	pop    r12
  40d2ce:	pop    r13
  40d2d0:	pop    r14
  40d2d2:	pop    r15
  40d2d4:	pop    rbp
  40d2d5:	jmp    40b840 <strcmp@plt+0x80b8>
  40d2da:	lea    rsi,[rip+0x3807e]        # 44535f <strcmp@plt+0x41bd7>
  40d2e1:	mov    edi,0x3
  40d2e6:	xor    eax,eax
  40d2e8:	call   42e800 <strcmp@plt+0x2b078>
  40d2ed:	mov    edi,0x2
  40d2f2:	call   4374e0 <strcmp@plt+0x33d58>
  40d2f7:	jmp    40c584 <strcmp@plt+0x8dfc>
  40d2fc:	lea    rdi,[rip+0x37c32]        # 444f35 <strcmp@plt+0x417ad>
  40d303:	lea    rsi,[rip+0x37c42]        # 444f4c <strcmp@plt+0x417c4>
  40d30a:	lea    rdx,[rip+0x37c49]        # 444f5a <strcmp@plt+0x417d2>
  40d311:	call   4321d0 <strcmp@plt+0x2ea48>
  40d316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d320:	push   rbp
  40d321:	push   r15
  40d323:	push   r14
  40d325:	push   r13
  40d327:	push   r12
  40d329:	push   rbx
  40d32a:	sub    rsp,0x148
  40d331:	mov    rax,QWORD PTR [rdi+0x8]
  40d335:	cmp    rax,QWORD PTR [rip+0x56c9c]        # 463fd8 <strcmp@plt+0x60850>
  40d33c:	jne    40e15f <strcmp@plt+0xa9d7>
  40d342:	mov    r14,rdx
  40d345:	mov    rbp,rsi
  40d348:	mov    r15,rdi
  40d34b:	mov    rdi,rsi
  40d34e:	call   420d90 <strcmp@plt+0x1d608>
  40d353:	cmp    eax,0x8
  40d356:	jne    40d3ef <strcmp@plt+0x9c67>
  40d35c:	mov    rdi,rbp
  40d35f:	call   420dc0 <strcmp@plt+0x1d638>
  40d364:	test   BYTE PTR [rax],0x8
  40d367:	jne    40d4b2 <strcmp@plt+0x9d2a>
  40d36d:	mov    rdi,rbp
  40d370:	call   420df0 <strcmp@plt+0x1d668>
  40d375:	cmp    eax,0x1
  40d378:	jne    40d6ce <strcmp@plt+0x9f46>
  40d37e:	lea    rbx,[rsp+0x50]
  40d383:	mov    rdi,rbp
  40d386:	mov    rsi,rbx
  40d389:	call   433490 <strcmp@plt+0x2fd08>
  40d38e:	movzx  esi,WORD PTR [rsp+0x92]
  40d396:	movzx  edx,WORD PTR [rsp+0x90]
  40d39e:	lea    rcx,[rsp+0x70]
  40d3a3:	lea    r12,[rsp+0x100]
  40d3ab:	mov    rdi,r12
  40d3ae:	mov    r8,rbx
  40d3b1:	call   435600 <strcmp@plt+0x31e78>
  40d3b6:	mov    rdi,rbp
  40d3b9:	call   420d90 <strcmp@plt+0x1d608>
  40d3be:	mov    ebx,eax
  40d3c0:	lea    rax,[rip+0x579e9]        # 464db0 <strcmp@plt+0x61628>
  40d3c7:	cmp    DWORD PTR [rax],0x0
  40d3ca:	jle    40d3f7 <strcmp@plt+0x9c6f>
  40d3cc:	mov    rdi,rbp
  40d3cf:	call   422870 <strcmp@plt+0x1f0e8>
  40d3d4:	mov    rcx,rax
  40d3d7:	lea    rsi,[rip+0x383ff]        # 4457dd <strcmp@plt+0x42055>
  40d3de:	mov    edi,0x5
  40d3e3:	xor    eax,eax
  40d3e5:	mov    rdx,rcx
  40d3e8:	call   42e800 <strcmp@plt+0x2b078>
  40d3ed:	jmp    40d3f7 <strcmp@plt+0x9c6f>
  40d3ef:	mov    ebx,eax
  40d3f1:	mov    r12,r14
  40d3f4:	xor    r14d,r14d
  40d3f7:	lea    eax,[rbx-0x1]
  40d3fa:	cmp    eax,0x6
  40d3fd:	ja     40d4ee <strcmp@plt+0x9d66>
  40d403:	lea    rcx,[rip+0x37a2e]        # 444e38 <strcmp@plt+0x416b0>
  40d40a:	movsxd rax,DWORD PTR [rcx+rax*4]
  40d40e:	add    rax,rcx
  40d411:	jmp    rax
  40d413:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  40d418:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  40d41d:	vmovups YMMWORD PTR [rsp+0xe0],ymm1
  40d426:	vmovups YMMWORD PTR [rsp+0xc0],ymm0
  40d42f:	xor    eax,eax
  40d431:	vzeroupper 
  40d434:	call   422f90 <strcmp@plt+0x1f808>
  40d439:	mov    rbp,rax
  40d43c:	xor    eax,eax
  40d43e:	call   422f90 <strcmp@plt+0x1f808>
  40d443:	mov    QWORD PTR [rsp+0x30],rax
  40d448:	lea    rbx,[rsp+0xc0]
  40d450:	mov    rdi,rbx
  40d453:	call   4216c0 <strcmp@plt+0x1df38>
  40d458:	mov    r13,rax
  40d45b:	mov    rdi,rbx
  40d45e:	mov    QWORD PTR [rsp+0x8],rbp
  40d463:	mov    rsi,rbp
  40d466:	call   420f70 <strcmp@plt+0x1d7e8>
  40d46b:	cmp    eax,0x1
  40d46e:	jne    40d684 <strcmp@plt+0x9efc>
  40d474:	movzx  ecx,WORD PTR [r13+0x0]
  40d479:	movzx  eax,BYTE PTR [r13+0x2]
  40d47e:	shl    eax,0x10
  40d481:	or     eax,ecx
  40d483:	test   al,0x2
  40d485:	je     40d652 <strcmp@plt+0x9eca>
  40d48b:	cmp    BYTE PTR [r13+0x3],0x2
  40d490:	jb     40d652 <strcmp@plt+0x9eca>
  40d496:	lea    rax,[rip+0x57913]        # 464db0 <strcmp@plt+0x61628>
  40d49d:	cmp    DWORD PTR [rax],0x0
  40d4a0:	jle    40d684 <strcmp@plt+0x9efc>
  40d4a6:	lea    rsi,[rip+0x36c06]        # 4440b3 <strcmp@plt+0x4092b>
  40d4ad:	jmp    40d678 <strcmp@plt+0x9ef0>
  40d4b2:	mov    rdi,rbp
  40d4b5:	call   422900 <strcmp@plt+0x1f178>
  40d4ba:	lea    rax,[rip+0x578ef]        # 464db0 <strcmp@plt+0x61628>
  40d4c1:	cmp    DWORD PTR [rax],0x2
  40d4c4:	jl     40d6ce <strcmp@plt+0x9f46>
  40d4ca:	mov    rdi,rbp
  40d4cd:	call   422900 <strcmp@plt+0x1f178>
  40d4d2:	mov    ecx,eax
  40d4d4:	lea    rsi,[rip+0x383b3]        # 44588e <strcmp@plt+0x42106>
  40d4db:	mov    edi,0x6
  40d4e0:	xor    eax,eax
  40d4e2:	mov    edx,ecx
  40d4e4:	call   42e800 <strcmp@plt+0x2b078>
  40d4e9:	jmp    40d6ce <strcmp@plt+0x9f46>
  40d4ee:	lea    rax,[rip+0x578bb]        # 464db0 <strcmp@plt+0x61628>
  40d4f5:	cmp    DWORD PTR [rax],0x0
  40d4f8:	jle    40d6ce <strcmp@plt+0x9f46>
  40d4fe:	lea    rsi,[rip+0x382f6]        # 4457fb <strcmp@plt+0x42073>
  40d505:	mov    edi,0x5
  40d50a:	xor    eax,eax
  40d50c:	mov    edx,ebx
  40d50e:	call   42e800 <strcmp@plt+0x2b078>
  40d513:	jmp    40d6af <strcmp@plt+0x9f27>
  40d518:	add    r15,0x18
  40d51c:	mov    rdi,r15
  40d51f:	mov    rsi,rbp
  40d522:	mov    rdx,r12
  40d525:	call   40a650 <strcmp@plt+0x6ec8>
  40d52a:	mov    r14d,eax
  40d52d:	cmp    r14d,0x1
  40d531:	je     40dbd4 <strcmp@plt+0xa44c>
  40d537:	jmp    40d6af <strcmp@plt+0x9f27>
  40d53c:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  40d541:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  40d546:	vmovups YMMWORD PTR [rsp+0x70],ymm1
  40d54c:	vmovups YMMWORD PTR [rsp+0x50],ymm0
  40d552:	lea    rdi,[rsp+0x50]
  40d557:	vzeroupper 
  40d55a:	call   4216c0 <strcmp@plt+0x1df38>
  40d55f:	mov    rbx,rax
  40d562:	lea    rax,[rip+0x6303f]        # 4705a8 <strcmp@plt+0x6ce20>
  40d569:	mov    rdi,QWORD PTR [rax]
  40d56c:	mov    rsi,QWORD PTR [rbx+0x4]
  40d570:	call   432620 <strcmp@plt+0x2ee98>
  40d575:	test   rax,rax
  40d578:	je     40d6d5 <strcmp@plt+0x9f4d>
  40d57e:	mov    r12,rax
  40d581:	mov    rdi,rax
  40d584:	call   4328b0 <strcmp@plt+0x2f128>
  40d589:	mov    r13,rax
  40d58c:	test   BYTE PTR [rbx],0x8
  40d58f:	jne    40d701 <strcmp@plt+0x9f79>
  40d595:	mov    rdi,r13
  40d598:	call   437430 <strcmp@plt+0x33ca8>
  40d59d:	mov    r14,QWORD PTR [rax+0x8]
  40d5a1:	jmp    40d735 <strcmp@plt+0x9fad>
  40d5a6:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  40d5ab:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  40d5b0:	vmovups YMMWORD PTR [rsp+0x70],ymm1
  40d5b6:	vmovups YMMWORD PTR [rsp+0x50],ymm0
  40d5bc:	lea    rdi,[rsp+0x50]
  40d5c1:	vzeroupper 
  40d5c4:	call   4216c0 <strcmp@plt+0x1df38>
  40d5c9:	test   BYTE PTR [rax],0x8
  40d5cc:	jne    40d5ea <strcmp@plt+0x9e62>
  40d5ce:	lea    rax,[rip+0x577db]        # 464db0 <strcmp@plt+0x61628>
  40d5d5:	cmp    DWORD PTR [rax],0x0
  40d5d8:	jle    40d6a2 <strcmp@plt+0x9f1a>
  40d5de:	lea    rsi,[rip+0x38409]        # 4459ee <strcmp@plt+0x42266>
  40d5e5:	jmp    40d878 <strcmp@plt+0xa0f0>
  40d5ea:	mov    rbx,rax
  40d5ed:	lea    rax,[rip+0x62fb4]        # 4705a8 <strcmp@plt+0x6ce20>
  40d5f4:	mov    rdi,QWORD PTR [rax]
  40d5f7:	mov    rsi,QWORD PTR [rbx+0x4]
  40d5fb:	call   432620 <strcmp@plt+0x2ee98>
  40d600:	test   rax,rax
  40d603:	je     40da96 <strcmp@plt+0xa30e>
  40d609:	mov    QWORD PTR [rsp+0xb8],rax
  40d611:	mov    rdi,rax
  40d614:	call   4328b0 <strcmp@plt+0x2f128>
  40d619:	mov    rdi,rax
  40d61c:	call   437430 <strcmp@plt+0x33ca8>
  40d621:	mov    r13,rax
  40d624:	mov    rax,QWORD PTR [rax]
  40d627:	mov    QWORD PTR [rsp+0x8],rax
  40d62c:	lea    rdi,[rsp+0x50]
  40d631:	call   422c50 <strcmp@plt+0x1f4c8>
  40d636:	mov    r12,rax
  40d639:	mov    eax,DWORD PTR [rsp+0x64]
  40d63d:	cmp    eax,0x6
  40d640:	jae    40dadd <strcmp@plt+0xa355>
  40d646:	xor    eax,eax
  40d648:	mov    QWORD PTR [rsp+0x28],rax
  40d64d:	jmp    40db00 <strcmp@plt+0xa378>
  40d652:	test   al,0x1
  40d654:	je     40d896 <strcmp@plt+0xa10e>
  40d65a:	cmp    BYTE PTR [r13+0x3],0x2
  40d65f:	jb     40d896 <strcmp@plt+0xa10e>
  40d665:	lea    rax,[rip+0x57744]        # 464db0 <strcmp@plt+0x61628>
  40d66c:	cmp    DWORD PTR [rax],0x0
  40d66f:	jle    40d684 <strcmp@plt+0x9efc>
  40d671:	lea    rsi,[rip+0x36a6f]        # 4440e7 <strcmp@plt+0x4095f>
  40d678:	mov    edi,0x5
  40d67d:	xor    eax,eax
  40d67f:	call   42e800 <strcmp@plt+0x2b078>
  40d684:	xor    edi,edi
  40d686:	call   42c250 <strcmp@plt+0x28ac8>
  40d68b:	mov    rbp,QWORD PTR [rsp+0x30]
  40d690:	mov    rdi,QWORD PTR [rsp+0x8]
  40d695:	call   422fa0 <strcmp@plt+0x1f818>
  40d69a:	mov    rdi,rbp
  40d69d:	call   422fa0 <strcmp@plt+0x1f818>
  40d6a2:	xor    r14d,r14d
  40d6a5:	cmp    r14d,0x1
  40d6a9:	je     40dbd4 <strcmp@plt+0xa44c>
  40d6af:	lea    rax,[rip+0x576fa]        # 464db0 <strcmp@plt+0x61628>
  40d6b6:	cmp    DWORD PTR [rax],0x0
  40d6b9:	jle    40d6ce <strcmp@plt+0x9f46>
  40d6bb:	lea    rsi,[rip+0x3816e]        # 445830 <strcmp@plt+0x420a8>
  40d6c2:	xor    ebx,ebx
  40d6c4:	mov    edi,0x5
  40d6c9:	jmp    40dbf1 <strcmp@plt+0xa469>
  40d6ce:	xor    ebx,ebx
  40d6d0:	jmp    40dbf8 <strcmp@plt+0xa470>
  40d6d5:	lea    rax,[rip+0x576d4]        # 464db0 <strcmp@plt+0x61628>
  40d6dc:	cmp    DWORD PTR [rax],0x0
  40d6df:	jle    40d6a2 <strcmp@plt+0x9f1a>
  40d6e1:	mov    rdi,QWORD PTR [rbx+0x4]
  40d6e5:	call   432230 <strcmp@plt+0x2eaa8>
  40d6ea:	mov    rcx,rax
  40d6ed:	lea    rsi,[rip+0x38208]        # 4458fc <strcmp@plt+0x42174>
  40d6f4:	xor    r14d,r14d
  40d6f7:	mov    edi,0x5
  40d6fc:	jmp    40dac4 <strcmp@plt+0xa33c>
  40d701:	lea    rax,[rip+0x576a8]        # 464db0 <strcmp@plt+0x61628>
  40d708:	cmp    DWORD PTR [rax],0x0
  40d70b:	jle    40d720 <strcmp@plt+0x9f98>
  40d70d:	lea    rsi,[rip+0x38221]        # 445935 <strcmp@plt+0x421ad>
  40d714:	mov    edi,0x5
  40d719:	xor    eax,eax
  40d71b:	call   42e800 <strcmp@plt+0x2b078>
  40d720:	mov    rdi,r13
  40d723:	call   437430 <strcmp@plt+0x33ca8>
  40d728:	mov    r14,QWORD PTR [rax+0x8]
  40d72c:	test   BYTE PTR [rbx],0x4
  40d72f:	je     40d735 <strcmp@plt+0x9fad>
  40d731:	add    DWORD PTR [rbp+0x14],0xfffffffc
  40d735:	lea    rdi,[rsp+0x50]
  40d73a:	call   422c50 <strcmp@plt+0x1f4c8>
  40d73f:	mov    rdx,QWORD PTR [r14+0x10]
  40d743:	mov    rdi,rbp
  40d746:	mov    rsi,rax
  40d749:	call   422a80 <strcmp@plt+0x1f2f8>
  40d74e:	cmp    eax,0x1
  40d751:	jne    40d861 <strcmp@plt+0xa0d9>
  40d757:	mov    r14d,0x1
  40d75d:	cmp    BYTE PTR [rbx+0x3],0x0
  40d761:	je     40dbca <strcmp@plt+0xa442>
  40d767:	mov    QWORD PTR [rsp+0x8],r13
  40d76c:	xor    r13d,r13d
  40d76f:	nop
  40d770:	xor    eax,eax
  40d772:	call   428de0 <strcmp@plt+0x25658>
  40d777:	mov    rbp,rax
  40d77a:	lea    rdi,[rsp+0x50]
  40d77f:	mov    rsi,rax
  40d782:	lea    rdx,[rsp+0xc0]
  40d78a:	call   421320 <strcmp@plt+0x1db98>
  40d78f:	cmp    eax,0x1
  40d792:	jne    40dbbf <strcmp@plt+0xa437>
  40d798:	mov    rdi,QWORD PTR [r15+0x70]
  40d79c:	mov    rsi,rbp
  40d79f:	call   407f30 <strcmp@plt+0x47a8>
  40d7a4:	lea    rcx,[rip+0x57605]        # 464db0 <strcmp@plt+0x61628>
  40d7ab:	mov    ecx,DWORD PTR [rcx]
  40d7ad:	test   rax,rax
  40d7b0:	je     40d826 <strcmp@plt+0xa09e>
  40d7b2:	test   ecx,ecx
  40d7b4:	jle    40d7fb <strcmp@plt+0xa073>
  40d7b6:	mov    rdi,rbp
  40d7b9:	call   423130 <strcmp@plt+0x1f9a8>
  40d7be:	mov    rcx,rax
  40d7c1:	mov    edi,0x5
  40d7c6:	xor    eax,eax
  40d7c8:	lea    rsi,[rip+0x381bd]        # 44598c <strcmp@plt+0x42204>
  40d7cf:	mov    rdx,rcx
  40d7d2:	call   42e800 <strcmp@plt+0x2b078>
  40d7d7:	lea    rax,[rip+0x575d2]        # 464db0 <strcmp@plt+0x61628>
  40d7de:	cmp    DWORD PTR [rax],0x0
  40d7e1:	jle    40d7fb <strcmp@plt+0xa073>
  40d7e3:	mov    edi,0x5
  40d7e8:	mov    edx,0x3c
  40d7ed:	xor    eax,eax
  40d7ef:	lea    rsi,[rip+0x381cd]        # 4459c3 <strcmp@plt+0x4223b>
  40d7f6:	call   42e800 <strcmp@plt+0x2b078>
  40d7fb:	mov    rdi,rbp
  40d7fe:	call   428ed0 <strcmp@plt+0x25748>
  40d803:	lea    rax,[rip+0x62d9e]        # 4705a8 <strcmp@plt+0x6ce20>
  40d80a:	mov    rdi,QWORD PTR [rax]
  40d80d:	mov    rsi,r12
  40d810:	call   4326e0 <strcmp@plt+0x2ef58>
  40d815:	mov    esi,0x3c
  40d81a:	mov    rdi,QWORD PTR [rsp+0x8]
  40d81f:	call   437460 <strcmp@plt+0x33cd8>
  40d824:	jmp    40d84b <strcmp@plt+0xa0c3>
  40d826:	test   ecx,ecx
  40d828:	jle    40d84b <strcmp@plt+0xa0c3>
  40d82a:	mov    rdi,rbp
  40d82d:	call   423130 <strcmp@plt+0x1f9a8>
  40d832:	mov    rcx,rax
  40d835:	mov    edi,0x5
  40d83a:	xor    eax,eax
  40d83c:	lea    rsi,[rip+0x3810b]        # 44594e <strcmp@plt+0x421c6>
  40d843:	mov    rdx,rcx
  40d846:	call   42e800 <strcmp@plt+0x2b078>
  40d84b:	add    r13d,0x1
  40d84f:	movzx  eax,BYTE PTR [rbx+0x3]
  40d853:	cmp    r13d,eax
  40d856:	jb     40d770 <strcmp@plt+0x9fe8>
  40d85c:	jmp    40dbca <strcmp@plt+0xa442>
  40d861:	lea    rax,[rip+0x57548]        # 464db0 <strcmp@plt+0x61628>
  40d868:	cmp    DWORD PTR [rax],0x0
  40d86b:	jle    40d6a2 <strcmp@plt+0x9f1a>
  40d871:	lea    rsi,[rip+0x36a72]        # 4442ea <strcmp@plt+0x40b62>
  40d878:	xor    r14d,r14d
  40d87b:	mov    edi,0x5
  40d880:	xor    eax,eax
  40d882:	call   42e800 <strcmp@plt+0x2b078>
  40d887:	cmp    r14d,0x1
  40d88b:	je     40dbd4 <strcmp@plt+0xa44c>
  40d891:	jmp    40d6af <strcmp@plt+0x9f27>
  40d896:	lea    rdi,[rip+0x15703]        # 422fa0 <strcmp@plt+0x1f818>
  40d89d:	call   42bc00 <strcmp@plt+0x28478>
  40d8a2:	lea    rdi,[rsp+0xc0]
  40d8aa:	mov    QWORD PTR [rsp+0x18],rax
  40d8af:	mov    rsi,rax
  40d8b2:	call   420fe0 <strcmp@plt+0x1d858>
  40d8b7:	mov    edi,0x2
  40d8bc:	xor    eax,eax
  40d8be:	call   4221a0 <strcmp@plt+0x1ea18>
  40d8c3:	mov    QWORD PTR [rsp+0x10],rax
  40d8c8:	cmp    BYTE PTR [r13+0x3],0x0
  40d8cd:	mov    rbp,QWORD PTR [rsp+0x30]
  40d8d2:	je     40d9cd <strcmp@plt+0xa245>
  40d8d8:	lea    rax,[r15+0x18]
  40d8dc:	mov    QWORD PTR [rsp+0x28],rax
  40d8e1:	xor    ebx,ebx
  40d8e3:	lea    rdi,[rsp+0xc0]
  40d8eb:	mov    rsi,rbp
  40d8ee:	call   420fa0 <strcmp@plt+0x1d818>
  40d8f3:	cmp    eax,0x1
  40d8f6:	jne    40dd62 <strcmp@plt+0xa5da>
  40d8fc:	lea    rax,[rip+0x574ad]        # 464db0 <strcmp@plt+0x61628>
  40d903:	cmp    DWORD PTR [rax],0x0
  40d906:	jle    40d929 <strcmp@plt+0xa1a1>
  40d908:	mov    rdi,rbp
  40d90b:	call   423130 <strcmp@plt+0x1f9a8>
  40d910:	mov    rcx,rax
  40d913:	mov    edi,0x5
  40d918:	xor    eax,eax
  40d91a:	lea    rsi,[rip+0x367fb]        # 44411c <strcmp@plt+0x40994>
  40d921:	mov    rdx,rcx
  40d924:	call   42e800 <strcmp@plt+0x2b078>
  40d929:	mov    rdi,QWORD PTR [r15+0x70]
  40d92d:	mov    edx,0x1
  40d932:	mov    rsi,rbp
  40d935:	call   407e00 <strcmp@plt+0x4678>
  40d93a:	test   rax,rax
  40d93d:	je     40dd35 <strcmp@plt+0xa5ad>
  40d943:	mov    rdi,rax
  40d946:	call   431ad0 <strcmp@plt+0x2e348>
  40d94b:	movzx  ecx,WORD PTR [r13+0x0]
  40d950:	test   cl,0x2
  40d953:	mov    rdx,r12
  40d956:	mov    ecx,0x0
  40d95b:	cmove  rdx,rcx
  40d95f:	mov    rdi,QWORD PTR [rsp+0x10]
  40d964:	mov    rsi,rax
  40d967:	call   421860 <strcmp@plt+0x1e0d8>
  40d96c:	mov    rax,QWORD PTR [rsp+0x8]
  40d971:	cmp    DWORD PTR [rax+0x18],0x0
  40d975:	je     40d9bd <strcmp@plt+0xa235>
  40d977:	movzx  eax,WORD PTR [r13+0x0]
  40d97c:	test   al,0x1
  40d97e:	je     40d9bd <strcmp@plt+0xa235>
  40d980:	mov    rdi,rbp
  40d983:	call   4230e0 <strcmp@plt+0x1f958>
  40d988:	mov    esi,0x1
  40d98d:	mov    rdi,rax
  40d990:	call   4231a0 <strcmp@plt+0x1fa18>
  40d995:	mov    rdi,QWORD PTR [rsp+0x28]
  40d99a:	mov    rsi,rbp
  40d99d:	mov    rdx,QWORD PTR [rsp+0x8]
  40d9a2:	call   40ae40 <strcmp@plt+0x76b8>
  40d9a7:	cmp    eax,0x1
  40d9aa:	jne    40dd62 <strcmp@plt+0xa5da>
  40d9b0:	movzx  eax,WORD PTR [r13+0x0]
  40d9b5:	test   al,0x2
  40d9b7:	je     40ddcc <strcmp@plt+0xa644>
  40d9bd:	add    ebx,0x1
  40d9c0:	movzx  eax,BYTE PTR [r13+0x3]
  40d9c5:	cmp    ebx,eax
  40d9c7:	jb     40d8e3 <strcmp@plt+0xa15b>
  40d9cd:	mov    rcx,QWORD PTR [rsp+0x10]
  40d9d2:	movzx  eax,WORD PTR [rcx+0x24]
  40d9d6:	mov    rcx,QWORD PTR [rcx+0x30]
  40d9da:	mov    dl,BYTE PTR [r13+0x0]
  40d9de:	mov    bl,BYTE PTR [rcx+rax*1]
  40d9e1:	shl    dl,0x2
  40d9e4:	and    dl,0x8
  40d9e7:	and    bl,0xf7
  40d9ea:	or     bl,dl
  40d9ec:	mov    BYTE PTR [rcx+rax*1],bl
  40d9ef:	mov    rdx,QWORD PTR [r13+0x4]
  40d9f3:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  40d9f8:	lea    r8,[rsp+0x50]
  40d9fd:	mov    rdi,r15
  40da00:	mov    rbx,QWORD PTR [rsp+0x18]
  40da05:	mov    rsi,rbx
  40da08:	mov    rdx,r12
  40da0b:	mov    rcx,r14
  40da0e:	call   407c00 <strcmp@plt+0x4478>
  40da13:	lea    rcx,[rip+0x57396]        # 464db0 <strcmp@plt+0x61628>
  40da1a:	mov    ecx,DWORD PTR [rcx]
  40da1c:	cmp    eax,0x1
  40da1f:	jne    40dc0c <strcmp@plt+0xa484>
  40da25:	test   ecx,ecx
  40da27:	mov    r14,QWORD PTR [rsp+0x10]
  40da2c:	jle    40da4f <strcmp@plt+0xa2c7>
  40da2e:	mov    rdi,r14
  40da31:	call   422870 <strcmp@plt+0x1f0e8>
  40da36:	mov    rcx,rax
  40da39:	lea    rsi,[rip+0x36719]        # 444159 <strcmp@plt+0x409d1>
  40da40:	mov    edi,0x5
  40da45:	xor    eax,eax
  40da47:	mov    rdx,rcx
  40da4a:	call   42e800 <strcmp@plt+0x2b078>
  40da4f:	lea    rdx,[rsp+0x50]
  40da54:	mov    rdi,r15
  40da57:	mov    rsi,r14
  40da5a:	call   407ab0 <strcmp@plt+0x4328>
  40da5f:	mov    rdi,rbx
  40da62:	call   42c250 <strcmp@plt+0x28ac8>
  40da67:	mov    rdi,r14
  40da6a:	call   42e010 <strcmp@plt+0x2a888>
  40da6f:	mov    rdi,QWORD PTR [rsp+0x8]
  40da74:	call   422fa0 <strcmp@plt+0x1f818>
  40da79:	mov    rdi,rbp
  40da7c:	call   422fa0 <strcmp@plt+0x1f818>
  40da81:	mov    r14d,0x1
  40da87:	cmp    r14d,0x1
  40da8b:	je     40dbd4 <strcmp@plt+0xa44c>
  40da91:	jmp    40d6af <strcmp@plt+0x9f27>
  40da96:	lea    rax,[rip+0x57313]        # 464db0 <strcmp@plt+0x61628>
  40da9d:	xor    r14d,r14d
  40daa0:	cmp    DWORD PTR [rax],0x2
  40daa3:	jl     40dbca <strcmp@plt+0xa442>
  40daa9:	mov    rdi,QWORD PTR [rbx+0x4]
  40daad:	call   432230 <strcmp@plt+0x2eaa8>
  40dab2:	mov    rcx,rax
  40dab5:	lea    rsi,[rip+0x37f63]        # 445a1f <strcmp@plt+0x42297>
  40dabc:	xor    r14d,r14d
  40dabf:	mov    edi,0x6
  40dac4:	xor    eax,eax
  40dac6:	mov    rdx,rcx
  40dac9:	call   42e800 <strcmp@plt+0x2b078>
  40dace:	cmp    r14d,0x1
  40dad2:	je     40dbd4 <strcmp@plt+0xa44c>
  40dad8:	jmp    40d6af <strcmp@plt+0x9f27>
  40dadd:	mov    rdx,QWORD PTR [rsp+0x88]
  40dae5:	mov    rcx,rdx
  40dae8:	mov    QWORD PTR [rsp+0x28],rdx
  40daed:	lea    rcx,[rdx+0x6]
  40daf1:	mov    QWORD PTR [rsp+0x88],rcx
  40daf9:	add    eax,0xfffffffa
  40dafc:	mov    DWORD PTR [rsp+0x64],eax
  40db00:	xor    r14d,r14d
  40db03:	xor    eax,eax
  40db05:	call   422f90 <strcmp@plt+0x1f808>
  40db0a:	mov    rbx,rax
  40db0d:	mov    rdi,QWORD PTR [rsp+0x88]
  40db15:	mov    rsi,rax
  40db18:	call   4238c0 <strcmp@plt+0x20138>
  40db1d:	test   eax,eax
  40db1f:	jle    40dbac <strcmp@plt+0xa424>
  40db25:	mov    ecx,DWORD PTR [rsp+0x64]
  40db29:	sub    ecx,eax
  40db2b:	jb     40db3b <strcmp@plt+0xa3b3>
  40db2d:	mov    eax,eax
  40db2f:	add    QWORD PTR [rsp+0x88],rax
  40db37:	mov    DWORD PTR [rsp+0x64],ecx
  40db3b:	mov    rax,QWORD PTR [rsp+0x28]
  40db40:	movzx  esi,BYTE PTR [rax+0x5]
  40db44:	mov    rdi,rbx
  40db47:	call   423480 <strcmp@plt+0x1fcf8>
  40db4c:	mov    rdi,QWORD PTR [rsp+0x8]
  40db51:	call   431b40 <strcmp@plt+0x2e3b8>
  40db56:	mov    r14,rax
  40db59:	mov    rdi,rbx
  40db5c:	mov    rsi,rax
  40db5f:	call   423970 <strcmp@plt+0x201e8>
  40db64:	test   eax,eax
  40db66:	je     40dc3a <strcmp@plt+0xa4b2>
  40db6c:	lea    rax,[rip+0x5723d]        # 464db0 <strcmp@plt+0x61628>
  40db73:	cmp    DWORD PTR [rax],0x2
  40db76:	jl     40dba4 <strcmp@plt+0xa41c>
  40db78:	mov    rdi,r14
  40db7b:	call   423130 <strcmp@plt+0x1f9a8>
  40db80:	mov    rbp,rax
  40db83:	mov    rdi,rbx
  40db86:	call   423130 <strcmp@plt+0x1f9a8>
  40db8b:	mov    rcx,rax
  40db8e:	lea    rsi,[rip+0x37ecf]        # 445a64 <strcmp@plt+0x422dc>
  40db95:	mov    edi,0x6
  40db9a:	xor    eax,eax
  40db9c:	mov    rdx,rbp
  40db9f:	call   42e800 <strcmp@plt+0x2b078>
  40dba4:	mov    rdi,rbx
  40dba7:	jmp    40d69d <strcmp@plt+0x9f15>
  40dbac:	mov    rdi,rbx
  40dbaf:	call   422fa0 <strcmp@plt+0x1f818>
  40dbb4:	cmp    r14d,0x1
  40dbb8:	je     40dbd4 <strcmp@plt+0xa44c>
  40dbba:	jmp    40d6af <strcmp@plt+0x9f27>
  40dbbf:	mov    rdi,rbp
  40dbc2:	call   428ed0 <strcmp@plt+0x25748>
  40dbc7:	xor    r14d,r14d
  40dbca:	cmp    r14d,0x1
  40dbce:	jne    40d6af <strcmp@plt+0x9f27>
  40dbd4:	lea    rax,[rip+0x571d5]        # 464db0 <strcmp@plt+0x61628>
  40dbdb:	mov    ebx,0x1
  40dbe0:	cmp    DWORD PTR [rax],0x3
  40dbe3:	jl     40dbf8 <strcmp@plt+0xa470>
  40dbe5:	lea    rsi,[rip+0x37c70]        # 44585c <strcmp@plt+0x420d4>
  40dbec:	mov    edi,0x7
  40dbf1:	xor    eax,eax
  40dbf3:	call   42e800 <strcmp@plt+0x2b078>
  40dbf8:	mov    eax,ebx
  40dbfa:	add    rsp,0x148
  40dc01:	pop    rbx
  40dc02:	pop    r12
  40dc04:	pop    r13
  40dc06:	pop    r14
  40dc08:	pop    r15
  40dc0a:	pop    rbp
  40dc0b:	ret    
  40dc0c:	test   ecx,ecx
  40dc0e:	jle    40dc23 <strcmp@plt+0xa49b>
  40dc10:	lea    rsi,[rip+0x37cb5]        # 4458cc <strcmp@plt+0x42144>
  40dc17:	mov    edi,0x5
  40dc1c:	xor    eax,eax
  40dc1e:	call   42e800 <strcmp@plt+0x2b078>
  40dc23:	mov    rdi,rbx
  40dc26:	call   42c250 <strcmp@plt+0x28ac8>
  40dc2b:	mov    rdi,QWORD PTR [rsp+0x10]
  40dc30:	call   42e010 <strcmp@plt+0x2a888>
  40dc35:	jmp    40d690 <strcmp@plt+0x9f08>
  40dc3a:	mov    rdi,rbx
  40dc3d:	call   422fa0 <strcmp@plt+0x1f818>
  40dc42:	mov    rax,QWORD PTR [r13+0x10]
  40dc46:	mov    rdx,QWORD PTR [rax+0x10]
  40dc4a:	mov    rdi,rbp
  40dc4d:	mov    rsi,r12
  40dc50:	call   422a80 <strcmp@plt+0x1f2f8>
  40dc55:	cmp    eax,0x1
  40dc58:	jne    40dd84 <strcmp@plt+0xa5fc>
  40dc5e:	xor    r14d,r14d
  40dc61:	xor    eax,eax
  40dc63:	call   422f90 <strcmp@plt+0x1f808>
  40dc68:	mov    r12,rax
  40dc6b:	mov    rdi,QWORD PTR [rsp+0x88]
  40dc73:	mov    rsi,rax
  40dc76:	call   4238c0 <strcmp@plt+0x20138>
  40dc7b:	test   eax,eax
  40dc7d:	jle    40dde9 <strcmp@plt+0xa661>
  40dc83:	mov    rdi,r12
  40dc86:	call   426bf0 <strcmp@plt+0x23468>
  40dc8b:	mov    rdi,rax
  40dc8e:	call   427f50 <strcmp@plt+0x247c8>
  40dc93:	mov    rbx,rax
  40dc96:	lea    rdi,[rip+0x15303]        # 422fa0 <strcmp@plt+0x1f818>
  40dc9d:	call   42bc00 <strcmp@plt+0x28478>
  40dca2:	mov    rbp,rax
  40dca5:	mov    esi,0x1
  40dcaa:	mov    rdi,rbx
  40dcad:	call   437ca0 <strcmp@plt+0x34518>
  40dcb2:	cmp    DWORD PTR [rbx+0x18],0x0
  40dcb6:	je     40dcd5 <strcmp@plt+0xa54d>
  40dcb8:	mov    rax,QWORD PTR [rbx+0x8]
  40dcbc:	mov    rdi,QWORD PTR [rax+0x10]
  40dcc0:	test   rdi,rdi
  40dcc3:	je     40dcd5 <strcmp@plt+0xa54d>
  40dcc5:	call   423740 <strcmp@plt+0x1ffb8>
  40dcca:	mov    rdi,rax
  40dccd:	mov    rsi,rbp
  40dcd0:	call   42bcf0 <strcmp@plt+0x28568>
  40dcd5:	cmp    DWORD PTR [rbp+0x18],0x0
  40dcd9:	mov    r14,QWORD PTR [rsp+0x8]
  40dcde:	je     40de15 <strcmp@plt+0xa68d>
  40dce4:	mov    rdi,r14
  40dce7:	call   431ad0 <strcmp@plt+0x2e348>
  40dcec:	mov    rbx,rax
  40dcef:	mov    rax,rbp
  40dcf2:	mov    rbp,QWORD PTR [rbp+0x8]
  40dcf6:	mov    QWORD PTR [rsp+0x38],rax
  40dcfb:	cmp    rbp,rax
  40dcfe:	mov    QWORD PTR [rsp+0xa8],r12
  40dd06:	je     40dd28 <strcmp@plt+0xa5a0>
  40dd08:	mov    rsi,QWORD PTR [rbp+0x10]
  40dd0c:	mov    rdi,rbx
  40dd0f:	call   4293a0 <strcmp@plt+0x25c18>
  40dd14:	test   rax,rax
  40dd17:	je     40de44 <strcmp@plt+0xa6bc>
  40dd1d:	mov    rbp,QWORD PTR [rbp+0x8]
  40dd21:	cmp    rbp,QWORD PTR [rsp+0x38]
  40dd26:	jne    40dd08 <strcmp@plt+0xa580>
  40dd28:	mov    DWORD PTR [rsp+0x24],0x0
  40dd30:	jmp    40de4a <strcmp@plt+0xa6c2>
  40dd35:	lea    rax,[rip+0x57074]        # 464db0 <strcmp@plt+0x61628>
  40dd3c:	cmp    DWORD PTR [rax],0x0
  40dd3f:	jle    40dd62 <strcmp@plt+0xa5da>
  40dd41:	mov    rdi,rbp
  40dd44:	call   423130 <strcmp@plt+0x1f9a8>
  40dd49:	mov    rcx,rax
  40dd4c:	lea    rsi,[rip+0x37b5a]        # 4458ad <strcmp@plt+0x42125>
  40dd53:	mov    edi,0x5
  40dd58:	xor    eax,eax
  40dd5a:	mov    rdx,rcx
  40dd5d:	call   42e800 <strcmp@plt+0x2b078>
  40dd62:	mov    rdi,QWORD PTR [rsp+0x18]
  40dd67:	call   42c250 <strcmp@plt+0x28ac8>
  40dd6c:	mov    rdi,QWORD PTR [rsp+0x10]
  40dd71:	test   rdi,rdi
  40dd74:	je     40d690 <strcmp@plt+0x9f08>
  40dd7a:	call   42e010 <strcmp@plt+0x2a888>
  40dd7f:	jmp    40d690 <strcmp@plt+0x9f08>
  40dd84:	lea    rax,[rip+0x57025]        # 464db0 <strcmp@plt+0x61628>
  40dd8b:	cmp    DWORD PTR [rax],0x0
  40dd8e:	jle    40d6a2 <strcmp@plt+0x9f1a>
  40dd94:	mov    rdi,r14
  40dd97:	call   423130 <strcmp@plt+0x1f9a8>
  40dd9c:	mov    rdx,rax
  40dd9f:	mov    rax,QWORD PTR [r13+0x10]
  40dda3:	mov    rcx,QWORD PTR [rax+0x10]
  40dda7:	lea    rsi,[rip+0x37cf3]        # 445aa1 <strcmp@plt+0x42319>
  40ddae:	xor    r14d,r14d
  40ddb1:	mov    edi,0x5
  40ddb6:	xor    eax,eax
  40ddb8:	call   42e800 <strcmp@plt+0x2b078>
  40ddbd:	cmp    r14d,0x1
  40ddc1:	je     40dbd4 <strcmp@plt+0xa44c>
  40ddc7:	jmp    40d6af <strcmp@plt+0x9f27>
  40ddcc:	mov    rdi,QWORD PTR [rsp+0x18]
  40ddd1:	call   42c250 <strcmp@plt+0x28ac8>
  40ddd6:	mov    r14,QWORD PTR [rsp+0x10]
  40dddb:	test   r14,r14
  40ddde:	jne    40da67 <strcmp@plt+0xa2df>
  40dde4:	jmp    40da6f <strcmp@plt+0xa2e7>
  40dde9:	mov    rdi,r12
  40ddec:	call   422fa0 <strcmp@plt+0x1f818>
  40ddf1:	lea    rax,[rip+0x56fb8]        # 464db0 <strcmp@plt+0x61628>
  40ddf8:	cmp    DWORD PTR [rax],0x2
  40ddfb:	jl     40dbca <strcmp@plt+0xa442>
  40de01:	lea    rsi,[rip+0x37ceb]        # 445af3 <strcmp@plt+0x4236b>
  40de08:	xor    r14d,r14d
  40de0b:	mov    edi,0x6
  40de10:	jmp    40d880 <strcmp@plt+0xa0f8>
  40de15:	lea    rax,[rip+0x56f94]        # 464db0 <strcmp@plt+0x61628>
  40de1c:	cmp    DWORD PTR [rax],0x0
  40de1f:	jle    40de34 <strcmp@plt+0xa6ac>
  40de21:	lea    rsi,[rip+0x37cfc]        # 445b24 <strcmp@plt+0x4239c>
  40de28:	mov    edi,0x5
  40de2d:	xor    eax,eax
  40de2f:	call   42e800 <strcmp@plt+0x2b078>
  40de34:	mov    rdi,rbp
  40de37:	call   42c250 <strcmp@plt+0x28ac8>
  40de3c:	mov    rdi,r12
  40de3f:	jmp    40d69d <strcmp@plt+0x9f15>
  40de44:	mov    al,0x1
  40de46:	mov    DWORD PTR [rsp+0x24],eax
  40de4a:	mov    QWORD PTR [rsp+0x48],r13
  40de4f:	mov    rsi,QWORD PTR [r13+0x8]
  40de53:	mov    rdi,r14
  40de56:	mov    rdx,QWORD PTR [rsp+0x38]
  40de5b:	call   431d70 <strcmp@plt+0x2e5e8>
  40de60:	mov    rax,QWORD PTR [r15+0x38]
  40de64:	mov    rdi,QWORD PTR [r15+0x40]
  40de68:	mov    rsi,r14
  40de6b:	call   QWORD PTR [rax+0x30]
  40de6e:	mov    rdi,r14
  40de71:	call   431b40 <strcmp@plt+0x2e3b8>
  40de76:	mov    edx,0x1
  40de7b:	mov    rdi,r15
  40de7e:	mov    rsi,rax
  40de81:	call   407ac0 <strcmp@plt+0x4338>
  40de86:	mov    esi,0x2
  40de8b:	mov    rdi,r15
  40de8e:	call   410480 <strcmp@plt+0xccf8>
  40de93:	mov    esi,0xa
  40de98:	mov    rdi,r15
  40de9b:	call   410480 <strcmp@plt+0xccf8>
  40dea0:	mov    QWORD PTR [rsp+0x40],r15
  40dea5:	mov    rax,QWORD PTR [r15+0x78]
  40dea9:	cmp    DWORD PTR [rax+0x18],0x0
  40dead:	je     40e02d <strcmp@plt+0xa8a5>
  40deb3:	mov    rax,QWORD PTR [rsp+0x48]
  40deb8:	mov    r13,QWORD PTR [rax+0x8]
  40debc:	lea    r15,[rip+0x626dd]        # 4705a0 <strcmp@plt+0x6ce18>
  40dec3:	mov    rdi,QWORD PTR [r15]
  40dec6:	mov    edx,0x3
  40decb:	mov    rsi,QWORD PTR [rsp+0x8]
  40ded0:	call   437940 <strcmp@plt+0x341b8>
  40ded5:	mov    r14,rax
  40ded8:	mov    rbx,QWORD PTR [rax+0x8]
  40dedc:	cmp    rbx,rax
  40dedf:	lea    r12,[rip+0x626c2]        # 4705a8 <strcmp@plt+0x6ce20>
  40dee6:	je     40df17 <strcmp@plt+0xa78f>
  40dee8:	mov    rbp,QWORD PTR [rbx+0x10]
  40deec:	mov    rdi,rbp
  40deef:	call   437430 <strcmp@plt+0x33ca8>
  40def4:	cmp    QWORD PTR [rax+0x10],r13
  40def8:	jne    40df0e <strcmp@plt+0xa786>
  40defa:	mov    rdx,QWORD PTR [r15]
  40defd:	mov    rcx,QWORD PTR [r12]
  40df01:	mov    rdi,QWORD PTR [rsp+0x8]
  40df06:	mov    rsi,rbp
  40df09:	call   437620 <strcmp@plt+0x33e98>
  40df0e:	mov    rbx,QWORD PTR [rbx+0x8]
  40df12:	cmp    rbx,r14
  40df15:	jne    40dee8 <strcmp@plt+0xa760>
  40df17:	mov    rdi,r14
  40df1a:	call   42c250 <strcmp@plt+0x28ac8>
  40df1f:	mov    QWORD PTR [rsp+0x30],r13
  40df24:	mov    rsi,QWORD PTR [r13+0x0]
  40df28:	mov    rdi,QWORD PTR [rsp+0x8]
  40df2d:	call   432000 <strcmp@plt+0x2e878>
  40df32:	mov    rcx,QWORD PTR [rax+0x8]
  40df36:	mov    QWORD PTR [rsp+0xb0],rax
  40df3e:	mov    QWORD PTR [rsp+0x18],rcx
  40df43:	cmp    rcx,rax
  40df46:	je     40e02d <strcmp@plt+0xa8a5>
  40df4c:	mov    rax,QWORD PTR [rsp+0x40]
  40df51:	mov    rax,QWORD PTR [rax+0x78]
  40df55:	lea    r12,[rip+0x2c64]        # 410bc0 <strcmp@plt+0xd438>
  40df5c:	mov    rbx,QWORD PTR [rax+0x8]
  40df60:	cmp    rbx,rax
  40df63:	mov    r13,QWORD PTR [rsp+0x40]
  40df68:	je     40e011 <strcmp@plt+0xa889>
  40df6e:	mov    rax,QWORD PTR [rsp+0x18]
  40df73:	mov    rax,QWORD PTR [rax+0x10]
  40df77:	mov    QWORD PTR [rsp+0x10],rax
  40df7c:	nop    DWORD PTR [rax+0x0]
  40df80:	mov    r14,r13
  40df83:	mov    r13,QWORD PTR [rbx+0x10]
  40df87:	mov    edi,0x20
  40df8c:	call   4320b0 <strcmp@plt+0x2e928>
  40df91:	mov    rbp,r12
  40df94:	mov    r12,rax
  40df97:	mov    r15,QWORD PTR [rsp+0x8]
  40df9c:	mov    QWORD PTR [rax],r15
  40df9f:	mov    QWORD PTR [rax+0x8],r13
  40dfa3:	mov    r13,r14
  40dfa6:	mov    rax,QWORD PTR [rsp+0x30]
  40dfab:	mov    QWORD PTR [r12+0x10],rax
  40dfb0:	mov    rdi,QWORD PTR [rsp+0x10]
  40dfb5:	call   423740 <strcmp@plt+0x1ffb8>
  40dfba:	mov    QWORD PTR [r12+0x18],rax
  40dfbf:	mov    edi,0x3
  40dfc4:	mov    rsi,r14
  40dfc7:	lea    rdx,[rip+0x27e2]        # 4107b0 <strcmp@plt+0xd028>
  40dfce:	mov    rcx,r12
  40dfd1:	mov    r12,rbp
  40dfd4:	lea    rax,[rip+0x625c5]        # 4705a0 <strcmp@plt+0x6ce18>
  40dfdb:	mov    rbp,rax
  40dfde:	mov    r8,r12
  40dfe1:	call   4375d0 <strcmp@plt+0x33e48>
  40dfe6:	mov    r14,rax
  40dfe9:	mov    rdi,QWORD PTR [rbp+0x0]
  40dfed:	mov    rsi,r15
  40dff0:	mov    rdx,rax
  40dff3:	call   4378d0 <strcmp@plt+0x34148>
  40dff8:	mov    rdi,r14
  40dffb:	call   4107b0 <strcmp@plt+0xd028>
  40e000:	mov    rbx,QWORD PTR [rbx+0x8]
  40e004:	mov    rax,QWORD PTR [r13+0x78]
  40e008:	cmp    rbx,rax
  40e00b:	jne    40df80 <strcmp@plt+0xa7f8>
  40e011:	mov    rcx,QWORD PTR [rsp+0x18]
  40e016:	mov    rcx,QWORD PTR [rcx+0x8]
  40e01a:	mov    QWORD PTR [rsp+0x18],rcx
  40e01f:	cmp    rcx,QWORD PTR [rsp+0xb0]
  40e027:	jne    40df5c <strcmp@plt+0xa7d4>
  40e02d:	lea    rax,[rip+0x62574]        # 4705a8 <strcmp@plt+0x6ce20>
  40e034:	mov    rdi,QWORD PTR [rax]
  40e037:	mov    rbp,QWORD PTR [rsp+0xb8]
  40e03f:	mov    rsi,rbp
  40e042:	call   4326e0 <strcmp@plt+0x2ef58>
  40e047:	mov    rax,QWORD PTR [rsp+0x28]
  40e04c:	movbe  ebx,DWORD PTR [rax]
  40e050:	mov    rdi,QWORD PTR [rbp+0x8]
  40e054:	imul   esi,ebx,0x3c
  40e057:	call   437460 <strcmp@plt+0x33cd8>
  40e05c:	lea    r13,[rip+0x56d4d]        # 464db0 <strcmp@plt+0x61628>
  40e063:	cmp    DWORD PTR [r13+0x0],0x0
  40e068:	jle    40e0c1 <strcmp@plt+0xa939>
  40e06a:	mov    rdi,QWORD PTR [rsp+0x8]
  40e06f:	call   431b40 <strcmp@plt+0x2e3b8>
  40e074:	mov    rdi,rax
  40e077:	call   423130 <strcmp@plt+0x1f9a8>
  40e07c:	mov    r14,rax
  40e07f:	mov    rbp,QWORD PTR [rsp+0x48]
  40e084:	mov    rax,QWORD PTR [rbp+0x10]
  40e088:	mov    rdi,QWORD PTR [rax]
  40e08b:	call   423130 <strcmp@plt+0x1f9a8>
  40e090:	mov    r12,rax
  40e093:	mov    rax,QWORD PTR [rbp+0x8]
  40e097:	mov    rdi,QWORD PTR [rax]
  40e09a:	call   423130 <strcmp@plt+0x1f9a8>
  40e09f:	mov    rbp,rax
  40e0a2:	lea    rsi,[rip+0x37aae]        # 445b57 <strcmp@plt+0x423cf>
  40e0a9:	mov    edi,0x5
  40e0ae:	xor    eax,eax
  40e0b0:	mov    rdx,r14
  40e0b3:	mov    rcx,r12
  40e0b6:	mov    r8,rbp
  40e0b9:	mov    r9d,ebx
  40e0bc:	call   42e800 <strcmp@plt+0x2b078>
  40e0c1:	cmp    BYTE PTR [rsp+0x24],0x0
  40e0c6:	mov    rbx,QWORD PTR [rsp+0x38]
  40e0cb:	je     40e145 <strcmp@plt+0xa9bd>
  40e0cd:	cmp    DWORD PTR [r13+0x0],0x0
  40e0d2:	jle    40e106 <strcmp@plt+0xa97e>
  40e0d4:	lea    rsi,[rip+0x37abe]        # 445b99 <strcmp@plt+0x42411>
  40e0db:	mov    edi,0x5
  40e0e0:	xor    eax,eax
  40e0e2:	call   42e800 <strcmp@plt+0x2b078>
  40e0e7:	cmp    DWORD PTR [r13+0x0],0x0
  40e0ec:	jle    40e106 <strcmp@plt+0xa97e>
  40e0ee:	lea    rsi,[rip+0x3765c]        # 445751 <strcmp@plt+0x41fc9>
  40e0f5:	mov    edi,0x5
  40e0fa:	mov    edx,0x1
  40e0ff:	xor    eax,eax
  40e101:	call   42e800 <strcmp@plt+0x2b078>
  40e106:	mov    rbp,QWORD PTR [rsp+0x40]
  40e10b:	mov    rdi,QWORD PTR [rbp+0xa0]
  40e112:	test   rdi,rdi
  40e115:	jne    40e13b <strcmp@plt+0xa9b3>
  40e117:	lea    rdx,[rip+0x2182]        # 4102a0 <strcmp@plt+0xcb18>
  40e11e:	mov    edi,0x6
  40e123:	xor    r8d,r8d
  40e126:	mov    rsi,rbp
  40e129:	mov    rcx,rbp
  40e12c:	call   437580 <strcmp@plt+0x33df8>
  40e131:	mov    rdi,rax
  40e134:	mov    QWORD PTR [rbp+0xa0],rax
  40e13b:	mov    esi,0x1
  40e140:	call   437460 <strcmp@plt+0x33cd8>
  40e145:	mov    rdi,QWORD PTR [rsp+0xa8]
  40e14d:	call   422fa0 <strcmp@plt+0x1f818>
  40e152:	mov    rdi,rbx
  40e155:	call   42c250 <strcmp@plt+0x28ac8>
  40e15a:	jmp    40da81 <strcmp@plt+0xa2f9>
  40e15f:	lea    rdi,[rip+0x36dcf]        # 444f35 <strcmp@plt+0x417ad>
  40e166:	lea    rsi,[rip+0x36ddf]        # 444f4c <strcmp@plt+0x417c4>
  40e16d:	lea    rdx,[rip+0x36de6]        # 444f5a <strcmp@plt+0x417d2>
  40e174:	call   4321d0 <strcmp@plt+0x2ea48>
  40e179:	nop    DWORD PTR [rax+0x0]
  40e180:	push   rbp
  40e181:	push   r15
  40e183:	push   r14
  40e185:	push   r12
  40e187:	push   rbx
  40e188:	mov    rax,QWORD PTR [rdi+0x8]
  40e18c:	cmp    rax,QWORD PTR [rip+0x55e45]        # 463fd8 <strcmp@plt+0x60850>
  40e193:	jne    40e299 <strcmp@plt+0xab11>
  40e199:	mov    ebp,edx
  40e19b:	mov    r15,rsi
  40e19e:	mov    r12,rdi
  40e1a1:	mov    rdi,QWORD PTR [rdi+0x50]
  40e1a5:	call   436750 <strcmp@plt+0x32fc8>
  40e1aa:	test   rax,rax
  40e1ad:	je     40e268 <strcmp@plt+0xaae0>
  40e1b3:	mov    r14,rax
  40e1b6:	mov    rax,QWORD PTR [rax+0x10]
  40e1ba:	mov    rcx,QWORD PTR [rax+0x8]
  40e1be:	cmp    rcx,rax
  40e1c1:	je     40e1e1 <strcmp@plt+0xaa59>
  40e1c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e1cd:	nop    DWORD PTR [rax]
  40e1d0:	mov    rdx,QWORD PTR [rcx+0x10]
  40e1d4:	mov    BYTE PTR [rdx+0x8],bpl
  40e1d8:	mov    rcx,QWORD PTR [rcx+0x8]
  40e1dc:	cmp    rcx,rax
  40e1df:	jne    40e1d0 <strcmp@plt+0xaa48>
  40e1e1:	mov    rax,QWORD PTR [r14+0x18]
  40e1e5:	mov    rcx,QWORD PTR [rax+0x8]
  40e1e9:	cmp    rcx,rax
  40e1ec:	je     40e201 <strcmp@plt+0xaa79>
  40e1ee:	xchg   ax,ax
  40e1f0:	mov    rdx,QWORD PTR [rcx+0x10]
  40e1f4:	mov    BYTE PTR [rdx+0x8],bpl
  40e1f8:	mov    rcx,QWORD PTR [rcx+0x8]
  40e1fc:	cmp    rcx,rax
  40e1ff:	jne    40e1f0 <strcmp@plt+0xaa68>
  40e201:	cmp    BYTE PTR [r14+0x20],0x1
  40e206:	setne  BYTE PTR [r14+0x20]
  40e20b:	mov    rax,QWORD PTR [r14+0x8]
  40e20f:	mov    rbx,QWORD PTR [rax+0x8]
  40e213:	cmp    rbx,rax
  40e216:	je     40e256 <strcmp@plt+0xaace>
  40e218:	nop    DWORD PTR [rax+rax*1+0x0]
  40e220:	mov    rbp,QWORD PTR [rbx+0x10]
  40e224:	mov    rax,QWORD PTR [r12+0x38]
  40e229:	mov    rdi,QWORD PTR [r12+0x40]
  40e22e:	mov    rsi,rbp
  40e231:	call   QWORD PTR [rax+0x30]
  40e234:	mov    rdi,rbp
  40e237:	call   431b40 <strcmp@plt+0x2e3b8>
  40e23c:	mov    edx,0x1
  40e241:	mov    rdi,r12
  40e244:	mov    rsi,rax
  40e247:	call   407ac0 <strcmp@plt+0x4338>
  40e24c:	mov    rbx,QWORD PTR [rbx+0x8]
  40e250:	cmp    rbx,QWORD PTR [r14+0x8]
  40e254:	jne    40e220 <strcmp@plt+0xaa98>
  40e256:	mov    rdi,r12
  40e259:	mov    rsi,r14
  40e25c:	call   40ec80 <strcmp@plt+0xb4f8>
  40e261:	mov    ebx,0x1
  40e266:	jmp    40e28e <strcmp@plt+0xab06>
  40e268:	lea    rax,[rip+0x56b41]        # 464db0 <strcmp@plt+0x61628>
  40e26f:	xor    ebx,ebx
  40e271:	cmp    DWORD PTR [rax],0x2
  40e274:	jl     40e28e <strcmp@plt+0xab06>
  40e276:	lea    rsi,[rip+0x37b2a]        # 445da7 <strcmp@plt+0x4261f>
  40e27d:	xor    ebx,ebx
  40e27f:	mov    edi,0x6
  40e284:	xor    eax,eax
  40e286:	mov    rdx,r15
  40e289:	call   42e800 <strcmp@plt+0x2b078>
  40e28e:	mov    eax,ebx
  40e290:	pop    rbx
  40e291:	pop    r12
  40e293:	pop    r14
  40e295:	pop    r15
  40e297:	pop    rbp
  40e298:	ret    
  40e299:	lea    rdi,[rip+0x36c95]        # 444f35 <strcmp@plt+0x417ad>
  40e2a0:	lea    rsi,[rip+0x36ca5]        # 444f4c <strcmp@plt+0x417c4>
  40e2a7:	lea    rdx,[rip+0x36cac]        # 444f5a <strcmp@plt+0x417d2>
  40e2ae:	call   4321d0 <strcmp@plt+0x2ea48>
  40e2b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e2bd:	nop    DWORD PTR [rax]
  40e2c0:	push   rbp
  40e2c1:	push   r15
  40e2c3:	push   r14
  40e2c5:	push   r13
  40e2c7:	push   r12
  40e2c9:	push   rbx
  40e2ca:	sub    rsp,0x28
  40e2ce:	mov    rax,QWORD PTR [rdi+0x8]
  40e2d2:	cmp    rax,QWORD PTR [rip+0x55cff]        # 463fd8 <strcmp@plt+0x60850>
  40e2d9:	jne    40e69b <strcmp@plt+0xaf13>
  40e2df:	mov    r14,rcx
  40e2e2:	mov    r13,rdx
  40e2e5:	mov    rbp,rsi
  40e2e8:	mov    r12,rdi
  40e2eb:	mov    rdi,QWORD PTR [rdi+0x50]
  40e2ef:	call   436750 <strcmp@plt+0x32fc8>
  40e2f4:	test   rax,rax
  40e2f7:	je     40e416 <strcmp@plt+0xac8e>
  40e2fd:	mov    rbx,rax
  40e300:	mov    rdi,r13
  40e303:	mov    rsi,r14
  40e306:	call   423970 <strcmp@plt+0x201e8>
  40e30b:	mov    r15d,0x1
  40e311:	test   eax,eax
  40e313:	je     40e689 <strcmp@plt+0xaf01>
  40e319:	mov    eax,DWORD PTR [r14+0x18]
  40e31d:	cmp    eax,0x1
  40e320:	je     40e447 <strcmp@plt+0xacbf>
  40e326:	test   eax,eax
  40e328:	jne    40e472 <strcmp@plt+0xacea>
  40e32e:	xor    eax,eax
  40e330:	mov    QWORD PTR [rsp+0x8],r13
  40e335:	cmp    DWORD PTR [r13+0x18],0x2
  40e33a:	setne  al
  40e33d:	lea    rcx,[rax*8+0x28]
  40e345:	mov    QWORD PTR [rsp+0x10],rcx
  40e34a:	mov    QWORD PTR [rsp+0x18],rbx
  40e34f:	mov    r13,QWORD PTR [rbx+rax*8+0x10]
  40e354:	mov    r15,QWORD PTR [r13+0x8]
  40e358:	cmp    r15,r13
  40e35b:	je     40e3e6 <strcmp@plt+0xac5e>
  40e361:	lea    r14,[rip+0x358a0]        # 443c08 <strcmp@plt+0x40480>
  40e368:	nop    DWORD PTR [rax+rax*1+0x0]
  40e370:	mov    rbp,QWORD PTR [r15+0x10]
  40e374:	mov    r15,QWORD PTR [r15+0x8]
  40e378:	mov    rax,QWORD PTR [rbp+0x0]
  40e37c:	cmp    DWORD PTR [rax+0x18],0x1
  40e380:	je     40e391 <strcmp@plt+0xac09>
  40e382:	mov    edi,0x2
  40e387:	xor    eax,eax
  40e389:	mov    rsi,r14
  40e38c:	call   42e800 <strcmp@plt+0x2b078>
  40e391:	mov    rdi,QWORD PTR [r12+0x70]
  40e396:	mov    rsi,rbp
  40e399:	call   40e9d0 <strcmp@plt+0xb248>
  40e39e:	test   rax,rax
  40e3a1:	je     40e3e1 <strcmp@plt+0xac59>
  40e3a3:	mov    rbx,rax
  40e3a6:	mov    rdi,rax
  40e3a9:	call   431ad0 <strcmp@plt+0x2e348>
  40e3ae:	mov    rdi,rax
  40e3b1:	mov    rsi,rbp
  40e3b4:	call   4297f0 <strcmp@plt+0x26068>
  40e3b9:	mov    rax,QWORD PTR [r12+0x38]
  40e3be:	mov    rdi,QWORD PTR [r12+0x40]
  40e3c3:	mov    rsi,rbx
  40e3c6:	call   QWORD PTR [rax+0x30]
  40e3c9:	mov    rdi,rbx
  40e3cc:	call   431b40 <strcmp@plt+0x2e3b8>
  40e3d1:	mov    edx,0x1
  40e3d6:	mov    rdi,r12
  40e3d9:	mov    rsi,rax
  40e3dc:	call   407ac0 <strcmp@plt+0x4338>
  40e3e1:	cmp    r15,r13
  40e3e4:	jne    40e370 <strcmp@plt+0xabe8>
  40e3e6:	mov    rbp,QWORD PTR [rsp+0x18]
  40e3eb:	mov    rbx,QWORD PTR [rsp+0x10]
  40e3f0:	cmp    QWORD PTR [rbp+rbx*1+0x0],0x0
  40e3f6:	mov    r15d,0x1
  40e3fc:	jne    40e67e <strcmp@plt+0xaef6>
  40e402:	mov    rdi,QWORD PTR [rsp+0x8]
  40e407:	call   423740 <strcmp@plt+0x1ffb8>
  40e40c:	mov    QWORD PTR [rbp+rbx*1+0x0],rax
  40e411:	jmp    40e67e <strcmp@plt+0xaef6>
  40e416:	lea    rax,[rip+0x56993]        # 464db0 <strcmp@plt+0x61628>
  40e41d:	xor    r15d,r15d
  40e420:	cmp    DWORD PTR [rax],0x2
  40e423:	jl     40e689 <strcmp@plt+0xaf01>
  40e429:	lea    rsi,[rip+0x36a40]        # 444e70 <strcmp@plt+0x416e8>
  40e430:	xor    r15d,r15d
  40e433:	mov    edi,0x6
  40e438:	xor    eax,eax
  40e43a:	mov    rdx,rbp
  40e43d:	call   42e800 <strcmp@plt+0x2b078>
  40e442:	jmp    40e689 <strcmp@plt+0xaf01>
  40e447:	mov    rdi,r14
  40e44a:	call   423200 <strcmp@plt+0x1fa78>
  40e44f:	movzx  eax,ax
  40e452:	cmp    eax,0x2
  40e455:	je     40e4a0 <strcmp@plt+0xad18>
  40e457:	cmp    eax,0xa
  40e45a:	jne    40e472 <strcmp@plt+0xacea>
  40e45c:	mov    QWORD PTR [rsp+0x8],r13
  40e461:	mov    eax,0x30
  40e466:	mov    QWORD PTR [rsp+0x20],rax
  40e46b:	mov    eax,0x18
  40e470:	jmp    40e4b4 <strcmp@plt+0xad2c>
  40e472:	lea    rax,[rip+0x56937]        # 464db0 <strcmp@plt+0x61628>
  40e479:	xor    r15d,r15d
  40e47c:	cmp    DWORD PTR [rax],0x2
  40e47f:	jl     40e689 <strcmp@plt+0xaf01>
  40e485:	lea    rsi,[rip+0x36a30]        # 444ebc <strcmp@plt+0x41734>
  40e48c:	xor    r15d,r15d
  40e48f:	mov    edi,0x6
  40e494:	xor    eax,eax
  40e496:	call   42e800 <strcmp@plt+0x2b078>
  40e49b:	jmp    40e689 <strcmp@plt+0xaf01>
  40e4a0:	mov    QWORD PTR [rsp+0x8],r13
  40e4a5:	mov    eax,0x28
  40e4aa:	mov    QWORD PTR [rsp+0x20],rax
  40e4af:	mov    eax,0x10
  40e4b4:	mov    QWORD PTR [rsp+0x18],rbx
  40e4b9:	mov    rbp,QWORD PTR [rbx+rax*1]
  40e4bd:	mov    rbx,QWORD PTR [rbp+0x8]
  40e4c1:	cmp    rbx,rbp
  40e4c4:	je     40e5ed <strcmp@plt+0xae65>
  40e4ca:	mov    QWORD PTR [rsp+0x10],rbp
  40e4cf:	nop
  40e4d0:	mov    r13,QWORD PTR [rbx+0x10]
  40e4d4:	mov    rbx,QWORD PTR [rbx+0x8]
  40e4d8:	mov    rax,QWORD PTR [r13+0x0]
  40e4dc:	mov    eax,DWORD PTR [rax+0x18]
  40e4df:	cmp    eax,0x1
  40e4e2:	je     40e593 <strcmp@plt+0xae0b>
  40e4e8:	test   eax,eax
  40e4ea:	jne    40e580 <strcmp@plt+0xadf8>
  40e4f0:	mov    rdi,QWORD PTR [r12+0x70]
  40e4f5:	mov    rsi,r13
  40e4f8:	call   40e9d0 <strcmp@plt+0xb248>
  40e4fd:	test   rax,rax
  40e500:	je     40e570 <strcmp@plt+0xade8>
  40e502:	mov    r15,rax
  40e505:	mov    rdi,rax
  40e508:	call   431ad0 <strcmp@plt+0x2e348>
  40e50d:	mov    rbp,rax
  40e510:	mov    rdi,rax
  40e513:	mov    rsi,r14
  40e516:	call   4293a0 <strcmp@plt+0x25c18>
  40e51b:	test   rax,rax
  40e51e:	je     40e5a9 <strcmp@plt+0xae21>
  40e524:	lea    rax,[rip+0x56885]        # 464db0 <strcmp@plt+0x61628>
  40e52b:	cmp    DWORD PTR [rax],0x2
  40e52e:	jl     40e543 <strcmp@plt+0xadbb>
  40e530:	mov    edi,0x6
  40e535:	xor    eax,eax
  40e537:	lea    rsi,[rip+0x369b3]        # 444ef1 <strcmp@plt+0x41769>
  40e53e:	call   42e800 <strcmp@plt+0x2b078>
  40e543:	xor    esi,esi
  40e545:	xor    edx,edx
  40e547:	mov    rdi,rbp
  40e54a:	call   429550 <strcmp@plt+0x25dc8>
  40e54f:	mov    rbp,rax
  40e552:	mov    rdi,QWORD PTR [r12+0x50]
  40e557:	mov    rsi,r13
  40e55a:	call   42cff0 <strcmp@plt+0x29868>
  40e55f:	mov    rdi,r13
  40e562:	mov    rsi,rbp
  40e565:	call   42c170 <strcmp@plt+0x289e8>
  40e56a:	mov    rbp,QWORD PTR [rsp+0x10]
  40e56f:	nop
  40e570:	cmp    rbx,rbp
  40e573:	jne    40e4d0 <strcmp@plt+0xad48>
  40e579:	jmp    40e5ed <strcmp@plt+0xae65>
  40e57b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e580:	mov    edi,0x2
  40e585:	xor    eax,eax
  40e587:	lea    rsi,[rip+0x3567a]        # 443c08 <strcmp@plt+0x40480>
  40e58e:	call   42e800 <strcmp@plt+0x2b078>
  40e593:	mov    rdi,r13
  40e596:	mov    rsi,r14
  40e599:	call   428db0 <strcmp@plt+0x25628>
  40e59e:	cmp    rbx,rbp
  40e5a1:	jne    40e4d0 <strcmp@plt+0xad48>
  40e5a7:	jmp    40e5ed <strcmp@plt+0xae65>
  40e5a9:	mov    rdi,rbp
  40e5ac:	mov    rsi,r13
  40e5af:	mov    rdx,r14
  40e5b2:	call   429700 <strcmp@plt+0x25f78>
  40e5b7:	mov    rax,QWORD PTR [r12+0x38]
  40e5bc:	mov    rdi,QWORD PTR [r12+0x40]
  40e5c1:	mov    rsi,r15
  40e5c4:	call   QWORD PTR [rax+0x30]
  40e5c7:	mov    rdi,r15
  40e5ca:	call   431b40 <strcmp@plt+0x2e3b8>
  40e5cf:	mov    edx,0x1
  40e5d4:	mov    rdi,r12
  40e5d7:	mov    rsi,rax
  40e5da:	call   407ac0 <strcmp@plt+0x4338>
  40e5df:	mov    rbp,QWORD PTR [rsp+0x10]
  40e5e4:	cmp    rbx,rbp
  40e5e7:	jne    40e4d0 <strcmp@plt+0xad48>
  40e5ed:	mov    rbp,QWORD PTR [rsp+0x18]
  40e5f2:	mov    rbx,QWORD PTR [rsp+0x20]
  40e5f7:	mov    rdi,QWORD PTR [rbp+rbx*1+0x0]
  40e5fc:	test   rdi,rdi
  40e5ff:	je     40e621 <strcmp@plt+0xae99>
  40e601:	mov    rsi,r14
  40e604:	call   423970 <strcmp@plt+0x201e8>
  40e609:	test   eax,eax
  40e60b:	mov    r15d,0x1
  40e611:	jne    40e644 <strcmp@plt+0xaebc>
  40e613:	mov    rdi,QWORD PTR [rbp+rbx*1+0x0]
  40e618:	call   422fa0 <strcmp@plt+0x1f818>
  40e61d:	xor    eax,eax
  40e61f:	jmp    40e63f <strcmp@plt+0xaeb7>
  40e621:	mov    rdi,QWORD PTR [rsp+0x8]
  40e626:	test   rdi,rdi
  40e629:	mov    r15d,0x1
  40e62f:	je     40e638 <strcmp@plt+0xaeb0>
  40e631:	call   423740 <strcmp@plt+0x1ffb8>
  40e636:	jmp    40e63f <strcmp@plt+0xaeb7>
  40e638:	xor    edi,edi
  40e63a:	call   422ef0 <strcmp@plt+0x1f768>
  40e63f:	mov    QWORD PTR [rbp+rbx*1+0x0],rax
  40e644:	mov    rax,QWORD PTR [rbp+0x8]
  40e648:	mov    rbx,QWORD PTR [rax+0x8]
  40e64c:	cmp    rbx,rax
  40e64f:	je     40e67e <strcmp@plt+0xaef6>
  40e651:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e65b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e660:	mov    rdi,QWORD PTR [rbx+0x10]
  40e664:	call   431ad0 <strcmp@plt+0x2e348>
  40e669:	mov    rdi,rax
  40e66c:	mov    rsi,r14
  40e66f:	call   4296b0 <strcmp@plt+0x25f28>
  40e674:	mov    rbx,QWORD PTR [rbx+0x8]
  40e678:	cmp    rbx,QWORD PTR [rbp+0x8]
  40e67c:	jne    40e660 <strcmp@plt+0xaed8>
  40e67e:	mov    rdi,r12
  40e681:	mov    rsi,rbp
  40e684:	call   40ec80 <strcmp@plt+0xb4f8>
  40e689:	mov    eax,r15d
  40e68c:	add    rsp,0x28
  40e690:	pop    rbx
  40e691:	pop    r12
  40e693:	pop    r13
  40e695:	pop    r14
  40e697:	pop    r15
  40e699:	pop    rbp
  40e69a:	ret    
  40e69b:	lea    rdi,[rip+0x36893]        # 444f35 <strcmp@plt+0x417ad>
  40e6a2:	lea    rsi,[rip+0x368a3]        # 444f4c <strcmp@plt+0x417c4>
  40e6a9:	lea    rdx,[rip+0x368aa]        # 444f5a <strcmp@plt+0x417d2>
  40e6b0:	call   4321d0 <strcmp@plt+0x2ea48>
  40e6b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6bf:	nop
  40e6c0:	push   rbx
  40e6c1:	mov    rax,QWORD PTR [rdi+0x8]
  40e6c5:	cmp    rax,QWORD PTR [rip+0x5590c]        # 463fd8 <strcmp@plt+0x60850>
  40e6cc:	jne    40e6ef <strcmp@plt+0xaf67>
  40e6ce:	mov    rbx,rdi
  40e6d1:	mov    rdi,QWORD PTR [rdi+0x50]
  40e6d5:	mov    rsi,rdx
  40e6d8:	call   436750 <strcmp@plt+0x32fc8>
  40e6dd:	mov    rdi,rbx
  40e6e0:	mov    rsi,rax
  40e6e3:	call   40ec80 <strcmp@plt+0xb4f8>
  40e6e8:	mov    eax,0x1
  40e6ed:	pop    rbx
  40e6ee:	ret    
  40e6ef:	lea    rdi,[rip+0x3683f]        # 444f35 <strcmp@plt+0x417ad>
  40e6f6:	lea    rsi,[rip+0x3684f]        # 444f4c <strcmp@plt+0x417c4>
  40e6fd:	lea    rdx,[rip+0x36856]        # 444f5a <strcmp@plt+0x417d2>
  40e704:	call   4321d0 <strcmp@plt+0x2ea48>
  40e709:	nop    DWORD PTR [rax+0x0]
  40e710:	push   rbp
  40e711:	push   r15
  40e713:	push   r14
  40e715:	push   r13
  40e717:	push   r12
  40e719:	push   rbx
  40e71a:	sub    rsp,0x18
  40e71e:	mov    rax,QWORD PTR [rdi+0x8]
  40e722:	cmp    rax,QWORD PTR [rip+0x558af]        # 463fd8 <strcmp@plt+0x60850>
  40e729:	jne    40e977 <strcmp@plt+0xb1ef>
  40e72f:	mov    r14,rsi
  40e732:	mov    rbx,rdi
  40e735:	xor    eax,eax
  40e737:	call   4201b0 <strcmp@plt+0x1ca28>
  40e73c:	test   rax,rax
  40e73f:	je     40e7b6 <strcmp@plt+0xb02e>
  40e741:	mov    r15,rax
  40e744:	mov    rdi,QWORD PTR [rbx+0x70]
  40e748:	xor    edx,edx
  40e74a:	mov    rsi,r14
  40e74d:	call   407e00 <strcmp@plt+0x4678>
  40e752:	test   rax,rax
  40e755:	je     40e7d1 <strcmp@plt+0xb049>
  40e757:	mov    QWORD PTR [rsp+0x8],rax
  40e75c:	mov    rdi,rax
  40e75f:	call   431b40 <strcmp@plt+0x2e3b8>
  40e764:	mov    rbp,rax
  40e767:	mov    rdi,rax
  40e76a:	call   4230e0 <strcmp@plt+0x1f958>
  40e76f:	mov    QWORD PTR [rsp+0x10],rax
  40e774:	mov    rdi,rbp
  40e777:	call   427a90 <strcmp@plt+0x24308>
  40e77c:	test   eax,eax
  40e77e:	je     40e7e9 <strcmp@plt+0xb061>
  40e780:	mov    rdi,rbp
  40e783:	call   427040 <strcmp@plt+0x238b8>
  40e788:	mov    DWORD PTR [r14+0x48],eax
  40e78c:	test   eax,eax
  40e78e:	je     40e7f1 <strcmp@plt+0xb069>
  40e790:	mov    edx,0x20
  40e795:	mov    edi,eax
  40e797:	mov    rsi,r14
  40e79a:	call   427b10 <strcmp@plt+0x24388>
  40e79f:	mov    r12,rax
  40e7a2:	mov    edi,DWORD PTR [r14+0x48]
  40e7a6:	lea    rsi,[r14+0x20]
  40e7aa:	mov    edx,0x20
  40e7af:	call   427b10 <strcmp@plt+0x24388>
  40e7b4:	jmp    40e805 <strcmp@plt+0xb07d>
  40e7b6:	lea    rsi,[rip+0x35d13]        # 4444d0 <strcmp@plt+0x40d48>
  40e7bd:	xor    r15d,r15d
  40e7c0:	mov    edi,0x3
  40e7c5:	xor    eax,eax
  40e7c7:	call   42e800 <strcmp@plt+0x2b078>
  40e7cc:	jmp    40e965 <strcmp@plt+0xb1dd>
  40e7d1:	lea    rax,[rip+0x565d8]        # 464db0 <strcmp@plt+0x61628>
  40e7d8:	cmp    DWORD PTR [rax],0x3
  40e7db:	jge    40e941 <strcmp@plt+0xb1b9>
  40e7e1:	xor    r15d,r15d
  40e7e4:	jmp    40e965 <strcmp@plt+0xb1dd>
  40e7e9:	mov    DWORD PTR [r14+0x48],0x0
  40e7f1:	mov    rdi,r14
  40e7f4:	call   423740 <strcmp@plt+0x1ffb8>
  40e7f9:	mov    r12,rax
  40e7fc:	lea    rdi,[r14+0x20]
  40e800:	call   423740 <strcmp@plt+0x1ffb8>
  40e805:	cmp    DWORD PTR [rbx+0x80],0x0
  40e80c:	mov    rbp,QWORD PTR [rbx+0x30]
  40e810:	mov    QWORD PTR [rsp],rax
  40e814:	je     40e82c <strcmp@plt+0xb0a4>
  40e816:	lea    rdi,[r14+0x20]
  40e81a:	call   423200 <strcmp@plt+0x1fa78>
  40e81f:	movzx  esi,ax
  40e822:	mov    rdi,rbp
  40e825:	call   4088a0 <strcmp@plt+0x5118>
  40e82a:	jmp    40e837 <strcmp@plt+0xb0af>
  40e82c:	mov    rdi,rbp
  40e82f:	mov    rsi,rax
  40e832:	call   408850 <strcmp@plt+0x50c8>
  40e837:	mov    r13,rax
  40e83a:	lea    rbp,[rbx+0x18]
  40e83e:	test   rax,rax
  40e841:	je     40e895 <strcmp@plt+0xb10d>
  40e843:	mov    rdi,r13
  40e846:	call   430ae0 <strcmp@plt+0x2d358>
  40e84b:	mov    rdi,rax
  40e84e:	call   423740 <strcmp@plt+0x1ffb8>
  40e853:	mov    QWORD PTR [r15],rax
  40e856:	cmp    BYTE PTR [r13+0x10],0x0
  40e85b:	jne    40e8f6 <strcmp@plt+0xb16e>
  40e861:	lea    rax,[rip+0x56548]        # 464db0 <strcmp@plt+0x61628>
  40e868:	cmp    DWORD PTR [rax],0x2
  40e86b:	jl     40e8f6 <strcmp@plt+0xb16e>
  40e871:	mov    rdi,QWORD PTR [rsp]
  40e875:	call   423130 <strcmp@plt+0x1f9a8>
  40e87a:	mov    rcx,rax
  40e87d:	lea    rsi,[rip+0x35cb4]        # 444538 <strcmp@plt+0x40db0>
  40e884:	mov    edi,0x6
  40e889:	xor    eax,eax
  40e88b:	mov    rdx,rcx
  40e88e:	call   42e800 <strcmp@plt+0x2b078>
  40e893:	jmp    40e8f6 <strcmp@plt+0xb16e>
  40e895:	lea    rax,[rip+0x56514]        # 464db0 <strcmp@plt+0x61628>
  40e89c:	cmp    DWORD PTR [rax],0x0
  40e89f:	mov    r13,QWORD PTR [rsp]
  40e8a3:	jle    40e8c6 <strcmp@plt+0xb13e>
  40e8a5:	mov    rdi,r13
  40e8a8:	call   423130 <strcmp@plt+0x1f9a8>
  40e8ad:	mov    rcx,rax
  40e8b0:	lea    rsi,[rip+0x35c53]        # 44450a <strcmp@plt+0x40d82>
  40e8b7:	mov    edi,0x5
  40e8bc:	xor    eax,eax
  40e8be:	mov    rdx,rcx
  40e8c1:	call   42e800 <strcmp@plt+0x2b078>
  40e8c6:	mov    rdi,rbp
  40e8c9:	mov    rsi,r13
  40e8cc:	mov    rdx,r12
  40e8cf:	call   40bc90 <strcmp@plt+0x8508>
  40e8d4:	mov    rdi,QWORD PTR [rbx+0x30]
  40e8d8:	mov    rsi,r13
  40e8db:	call   408850 <strcmp@plt+0x50c8>
  40e8e0:	mov    r13,rax
  40e8e3:	mov    rdi,rax
  40e8e6:	call   430ae0 <strcmp@plt+0x2d358>
  40e8eb:	mov    rdi,rax
  40e8ee:	call   423740 <strcmp@plt+0x1ffb8>
  40e8f3:	mov    QWORD PTR [r15],rax
  40e8f6:	mov    rdi,QWORD PTR [rsp+0x10]
  40e8fb:	call   423200 <strcmp@plt+0x1fa78>
  40e900:	movzx  esi,ax
  40e903:	mov    rdi,rbp
  40e906:	call   40bf50 <strcmp@plt+0x87c8>
  40e90b:	mov    rbp,QWORD PTR [rbx+0x38]
  40e90f:	mov    rdi,QWORD PTR [rbx+0x40]
  40e913:	mov    rsi,QWORD PTR [rsp+0x8]
  40e918:	mov    rdx,r13
  40e91b:	mov    rcx,rax
  40e91e:	mov    r8,r14
  40e921:	mov    r9,r15
  40e924:	call   QWORD PTR [rbp+0x40]
  40e927:	mov    eax,DWORD PTR [rbx+0x58]
  40e92a:	mov    DWORD PTR [r15+0x14],eax
  40e92e:	mov    rdi,r12
  40e931:	call   422fa0 <strcmp@plt+0x1f818>
  40e936:	mov    rdi,QWORD PTR [rsp]
  40e93a:	call   422fa0 <strcmp@plt+0x1f818>
  40e93f:	jmp    40e965 <strcmp@plt+0xb1dd>
  40e941:	mov    rdi,r14
  40e944:	call   423130 <strcmp@plt+0x1f9a8>
  40e949:	mov    rcx,rax
  40e94c:	lea    rsi,[rip+0x374a2]        # 445df5 <strcmp@plt+0x4266d>
  40e953:	xor    r15d,r15d
  40e956:	mov    edi,0x7
  40e95b:	xor    eax,eax
  40e95d:	mov    rdx,rcx
  40e960:	call   42e800 <strcmp@plt+0x2b078>
  40e965:	mov    rax,r15
  40e968:	add    rsp,0x18
  40e96c:	pop    rbx
  40e96d:	pop    r12
  40e96f:	pop    r13
  40e971:	pop    r14
  40e973:	pop    r15
  40e975:	pop    rbp
  40e976:	ret    
  40e977:	lea    rdi,[rip+0x365b7]        # 444f35 <strcmp@plt+0x417ad>
  40e97e:	lea    rsi,[rip+0x365c7]        # 444f4c <strcmp@plt+0x417c4>
  40e985:	lea    rdx,[rip+0x365ce]        # 444f5a <strcmp@plt+0x417d2>
  40e98c:	call   4321d0 <strcmp@plt+0x2ea48>
  40e991:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e99b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e9a0:	mov    rax,QWORD PTR [rdi+0x8]
  40e9a4:	cmp    rax,QWORD PTR [rip+0x5562d]        # 463fd8 <strcmp@plt+0x60850>
  40e9ab:	jne    40e9b1 <strcmp@plt+0xb229>
  40e9ad:	mov    rax,rdi
  40e9b0:	ret    
  40e9b1:	push   rax
  40e9b2:	lea    rdi,[rip+0x3657c]        # 444f35 <strcmp@plt+0x417ad>
  40e9b9:	lea    rsi,[rip+0x3658c]        # 444f4c <strcmp@plt+0x417c4>
  40e9c0:	lea    rdx,[rip+0x36593]        # 444f5a <strcmp@plt+0x417d2>
  40e9c7:	call   4321d0 <strcmp@plt+0x2ea48>
  40e9cc:	nop    DWORD PTR [rax+0x0]
  40e9d0:	push   rbp
  40e9d1:	push   r15
  40e9d3:	push   r14
  40e9d5:	push   r13
  40e9d7:	push   r12
  40e9d9:	push   rbx
  40e9da:	sub    rsp,0x828
  40e9e1:	mov    QWORD PTR [rsp],rsi
  40e9e5:	mov    r12,rdi
  40e9e8:	call   42bbd0 <strcmp@plt+0x28448>
  40e9ed:	mov    r15,rax
  40e9f0:	mov    rax,QWORD PTR [r12]
  40e9f4:	mov    rdi,QWORD PTR [rax]
  40e9f7:	mov    rsi,r15
  40e9fa:	call   42bcf0 <strcmp@plt+0x28568>
  40e9ff:	mov    rax,QWORD PTR [r12]
  40ea03:	mov    rdi,QWORD PTR [rax+0x8]
  40ea07:	mov    rsi,r15
  40ea0a:	call   42bcf0 <strcmp@plt+0x28568>
  40ea0f:	mov    rax,QWORD PTR [r12]
  40ea13:	mov    rcx,QWORD PTR [rax+0x10]
  40ea17:	mov    rcx,QWORD PTR [rcx]
  40ea1a:	cmp    DWORD PTR [rcx],0x0
  40ea1d:	je     40ea70 <strcmp@plt+0xb2e8>
  40ea1f:	xor    ebp,ebp
  40ea21:	mov    r13d,0x3
  40ea27:	xor    ebx,ebx
  40ea29:	nop    DWORD PTR [rax+0x0]
  40ea30:	mov    rdx,QWORD PTR [rcx+0x10]
  40ea34:	mov    esi,ebx
  40ea36:	shr    esi,0x4
  40ea39:	mov    edi,ebp
  40ea3b:	and    dil,0x1e
  40ea3f:	shlx   edi,r13d,edi
  40ea44:	test   DWORD PTR [rdx+rsi*4],edi
  40ea47:	jne    40ea5f <strcmp@plt+0xb2d7>
  40ea49:	mov    rax,QWORD PTR [rcx+0x20]
  40ea4d:	mov    ecx,ebx
  40ea4f:	mov    rdi,QWORD PTR [rax+rcx*8]
  40ea53:	mov    rsi,r15
  40ea56:	call   42bcf0 <strcmp@plt+0x28568>
  40ea5b:	mov    rax,QWORD PTR [r12]
  40ea5f:	add    ebx,0x1
  40ea62:	mov    rcx,QWORD PTR [rax+0x10]
  40ea66:	mov    rcx,QWORD PTR [rcx]
  40ea69:	add    ebp,0x2
  40ea6c:	cmp    ebx,DWORD PTR [rcx]
  40ea6e:	jne    40ea30 <strcmp@plt+0xb2a8>
  40ea70:	mov    rcx,QWORD PTR [rax+0x18]
  40ea74:	mov    rcx,QWORD PTR [rcx]
  40ea77:	cmp    DWORD PTR [rcx],0x0
  40ea7a:	je     40ead0 <strcmp@plt+0xb348>
  40ea7c:	xor    ebp,ebp
  40ea7e:	mov    r13d,0x3
  40ea84:	xor    ebx,ebx
  40ea86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ea90:	mov    rdx,QWORD PTR [rcx+0x10]
  40ea94:	mov    esi,ebx
  40ea96:	shr    esi,0x4
  40ea99:	mov    edi,ebp
  40ea9b:	and    dil,0x1e
  40ea9f:	shlx   edi,r13d,edi
  40eaa4:	test   DWORD PTR [rdx+rsi*4],edi
  40eaa7:	jne    40eabf <strcmp@plt+0xb337>
  40eaa9:	mov    rax,QWORD PTR [rcx+0x20]
  40eaad:	mov    ecx,ebx
  40eaaf:	mov    rdi,QWORD PTR [rax+rcx*8]
  40eab3:	mov    rsi,r15
  40eab6:	call   42bcf0 <strcmp@plt+0x28568>
  40eabb:	mov    rax,QWORD PTR [r12]
  40eabf:	add    ebx,0x1
  40eac2:	mov    rcx,QWORD PTR [rax+0x18]
  40eac6:	mov    rcx,QWORD PTR [rcx]
  40eac9:	add    ebp,0x2
  40eacc:	cmp    ebx,DWORD PTR [rcx]
  40eace:	jne    40ea90 <strcmp@plt+0xb308>
  40ead0:	mov    rdi,QWORD PTR [rax+0x20]
  40ead4:	mov    rsi,r15
  40ead7:	call   42bcf0 <strcmp@plt+0x28568>
  40eadc:	mov    rax,QWORD PTR [r12]
  40eae0:	mov    rdi,QWORD PTR [rax+0x20]
  40eae4:	mov    rsi,r15
  40eae7:	call   42bcf0 <strcmp@plt+0x28568>
  40eaec:	mov    rax,QWORD PTR [r15+0x8]
  40eaf0:	cmp    rax,r15
  40eaf3:	jne    40eb12 <strcmp@plt+0xb38a>
  40eaf5:	jmp    40ec21 <strcmp@plt+0xb499>
  40eafa:	nop    WORD PTR [rax+rax*1+0x0]
  40eb00:	mov    rax,QWORD PTR [rsp+0x8]
  40eb05:	mov    rax,QWORD PTR [rax+0x8]
  40eb09:	cmp    rax,r15
  40eb0c:	je     40ec21 <strcmp@plt+0xb499>
  40eb12:	mov    QWORD PTR [rsp+0x8],rax
  40eb17:	mov    rax,QWORD PTR [rax+0x10]
  40eb1b:	mov    rbp,QWORD PTR [rax]
  40eb1e:	test   rbp,rbp
  40eb21:	je     40eb00 <strcmp@plt+0xb378>
  40eb23:	xor    r13d,r13d
  40eb26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb30:	cmp    QWORD PTR [rbp+0x8],0x0
  40eb35:	je     40ebc8 <strcmp@plt+0xb440>
  40eb3b:	mov    rax,QWORD PTR [rbp+0x28]
  40eb3f:	mov    r14,QWORD PTR [rax]
  40eb42:	test   r14,r14
  40eb45:	je     40ebc8 <strcmp@plt+0xb440>
  40eb4b:	xor    r12d,r12d
  40eb4e:	xchg   ax,ax
  40eb50:	cmp    QWORD PTR [r14+0x8],0x0
  40eb55:	je     40eb7c <strcmp@plt+0xb3f4>
  40eb57:	mov    rbx,QWORD PTR [r14+0x28]
  40eb5b:	test   rbx,rbx
  40eb5e:	je     40eb7c <strcmp@plt+0xb3f4>
  40eb60:	mov    rdi,rbx
  40eb63:	call   431ad0 <strcmp@plt+0x2e348>
  40eb68:	mov    rdi,rax
  40eb6b:	mov    rsi,QWORD PTR [rsp]
  40eb6f:	call   429630 <strcmp@plt+0x25ea8>
  40eb74:	cmp    al,0x1
  40eb76:	je     40ec23 <strcmp@plt+0xb49b>
  40eb7c:	mov    rax,QWORD PTR [r14+0x10]
  40eb80:	mov    rcx,QWORD PTR [r14+0x18]
  40eb84:	test   rax,rax
  40eb87:	je     40eba0 <strcmp@plt+0xb418>
  40eb89:	test   rcx,rcx
  40eb8c:	je     40ebc0 <strcmp@plt+0xb438>
  40eb8e:	mov    QWORD PTR [rsp+r12*8+0x10],rcx
  40eb93:	add    r12,0x1
  40eb97:	jmp    40ebc0 <strcmp@plt+0xb438>
  40eb99:	nop    DWORD PTR [rax+0x0]
  40eba0:	test   rcx,rcx
  40eba3:	je     40ebaa <strcmp@plt+0xb422>
  40eba5:	mov    rax,rcx
  40eba8:	jmp    40ebc0 <strcmp@plt+0xb438>
  40ebaa:	test   r12,r12
  40ebad:	je     40ebc8 <strcmp@plt+0xb440>
  40ebaf:	mov    rax,QWORD PTR [rsp+r12*8+0x8]
  40ebb4:	add    r12,0xffffffffffffffff
  40ebb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ebc0:	mov    r14,rax
  40ebc3:	test   rax,rax
  40ebc6:	jne    40eb50 <strcmp@plt+0xb3c8>
  40ebc8:	mov    rax,QWORD PTR [rbp+0x10]
  40ebcc:	mov    rcx,QWORD PTR [rbp+0x18]
  40ebd0:	test   rax,rax
  40ebd3:	je     40ebf0 <strcmp@plt+0xb468>
  40ebd5:	test   rcx,rcx
  40ebd8:	je     40ec10 <strcmp@plt+0xb488>
  40ebda:	mov    QWORD PTR [rsp+r13*8+0x420],rcx
  40ebe2:	add    r13,0x1
  40ebe6:	jmp    40ec10 <strcmp@plt+0xb488>
  40ebe8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ebf0:	test   rcx,rcx
  40ebf3:	je     40ebfa <strcmp@plt+0xb472>
  40ebf5:	mov    rax,rcx
  40ebf8:	jmp    40ec10 <strcmp@plt+0xb488>
  40ebfa:	test   r13,r13
  40ebfd:	je     40eb00 <strcmp@plt+0xb378>
  40ec03:	mov    rax,QWORD PTR [rsp+r13*8+0x418]
  40ec0b:	add    r13,0xffffffffffffffff
  40ec0f:	nop
  40ec10:	mov    rbp,rax
  40ec13:	test   rax,rax
  40ec16:	jne    40eb30 <strcmp@plt+0xb3a8>
  40ec1c:	jmp    40eb00 <strcmp@plt+0xb378>
  40ec21:	xor    ebx,ebx
  40ec23:	mov    rdi,r15
  40ec26:	call   42c250 <strcmp@plt+0x28ac8>
  40ec2b:	test   rbx,rbx
  40ec2e:	jne    40ec61 <strcmp@plt+0xb4d9>
  40ec30:	lea    rax,[rip+0x56179]        # 464db0 <strcmp@plt+0x61628>
  40ec37:	cmp    DWORD PTR [rax],0x2
  40ec3a:	jl     40ec61 <strcmp@plt+0xb4d9>
  40ec3c:	mov    rax,QWORD PTR [rsp]
  40ec40:	mov    rdi,QWORD PTR [rax]
  40ec43:	call   423130 <strcmp@plt+0x1f9a8>
  40ec48:	mov    rcx,rax
  40ec4b:	lea    rsi,[rip+0x37355]        # 445fa7 <strcmp@plt+0x4281f>
  40ec52:	mov    edi,0x6
  40ec57:	xor    eax,eax
  40ec59:	mov    rdx,rcx
  40ec5c:	call   42e800 <strcmp@plt+0x2b078>
  40ec61:	mov    rax,rbx
  40ec64:	add    rsp,0x828
  40ec6b:	pop    rbx
  40ec6c:	pop    r12
  40ec6e:	pop    r13
  40ec70:	pop    r14
  40ec72:	pop    r15
  40ec74:	pop    rbp
  40ec75:	ret    
  40ec76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ec80:	push   rbp
  40ec81:	push   r15
  40ec83:	push   r14
  40ec85:	push   r13
  40ec87:	push   r12
  40ec89:	push   rbx
  40ec8a:	sub    rsp,0x28
  40ec8e:	mov    r12,rdi
  40ec91:	cmp    DWORD PTR [rdi+0x80],0x1
  40ec98:	jne    40ef2d <strcmp@plt+0xb7a5>
  40ec9e:	mov    rax,QWORD PTR [rsi+0x10]
  40eca2:	cmp    DWORD PTR [rax+0x18],0x0
  40eca6:	je     40ef1e <strcmp@plt+0xb796>
  40ecac:	mov    rax,QWORD PTR [rax+0x8]
  40ecb0:	mov    rax,QWORD PTR [rax+0x10]
  40ecb4:	mov    rax,QWORD PTR [rax]
  40ecb7:	mov    QWORD PTR [rsp],rax
  40ecbb:	cmp    DWORD PTR [rax+0x18],0x0
  40ecbf:	je     40ef1e <strcmp@plt+0xb796>
  40ecc5:	mov    rax,QWORD PTR [rsi+0x8]
  40ecc9:	mov    rcx,QWORD PTR [rax+0x8]
  40eccd:	cmp    rcx,rax
  40ecd0:	je     40ef1e <strcmp@plt+0xb796>
  40ecd6:	lea    r13,[rip+0x618c3]        # 4705a0 <strcmp@plt+0x6ce18>
  40ecdd:	mov    QWORD PTR [rsp+0x8],r12
  40ece2:	mov    QWORD PTR [rsp+0x10],rsi
  40ece7:	nop    WORD PTR [rax+rax*1+0x0]
  40ecf0:	mov    QWORD PTR [rsp+0x20],rcx
  40ecf5:	mov    r15,QWORD PTR [rcx+0x10]
  40ecf9:	mov    rdi,r15
  40ecfc:	call   431ad0 <strcmp@plt+0x2e348>
  40ed01:	mov    QWORD PTR [rsp+0x18],rax
  40ed06:	mov    rdi,rax
  40ed09:	mov    rsi,QWORD PTR [rsp]
  40ed0d:	call   4293a0 <strcmp@plt+0x25c18>
  40ed12:	mov    r14,rax
  40ed15:	mov    rdi,QWORD PTR [r13+0x0]
  40ed19:	mov    edx,0x8
  40ed1e:	mov    rsi,r15
  40ed21:	call   437940 <strcmp@plt+0x341b8>
  40ed26:	mov    r12,rax
  40ed29:	mov    rbp,QWORD PTR [rax+0x8]
  40ed2d:	cmp    rbp,rax
  40ed30:	je     40ed74 <strcmp@plt+0xb5ec>
  40ed32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ed3c:	nop    DWORD PTR [rax+0x0]
  40ed40:	mov    rbx,QWORD PTR [rbp+0x10]
  40ed44:	mov    rdi,rbx
  40ed47:	call   437430 <strcmp@plt+0x33ca8>
  40ed4c:	cmp    QWORD PTR [rax+0x8],r14
  40ed50:	jne    40ed6b <strcmp@plt+0xb5e3>
  40ed52:	mov    rdx,QWORD PTR [r13+0x0]
  40ed56:	lea    rax,[rip+0x6184b]        # 4705a8 <strcmp@plt+0x6ce20>
  40ed5d:	mov    rcx,QWORD PTR [rax]
  40ed60:	mov    rdi,r15
  40ed63:	mov    rsi,rbx
  40ed66:	call   437620 <strcmp@plt+0x33e98>
  40ed6b:	mov    rbp,QWORD PTR [rbp+0x8]
  40ed6f:	cmp    rbp,r12
  40ed72:	jne    40ed40 <strcmp@plt+0xb5b8>
  40ed74:	mov    rdi,r12
  40ed77:	call   42c250 <strcmp@plt+0x28ac8>
  40ed7c:	mov    rdi,QWORD PTR [r13+0x0]
  40ed80:	mov    edx,0x3
  40ed85:	mov    rsi,r15
  40ed88:	call   437940 <strcmp@plt+0x341b8>
  40ed8d:	mov    r12,rax
  40ed90:	mov    rbx,QWORD PTR [rax+0x8]
  40ed94:	cmp    rbx,rax
  40ed97:	je     40edd4 <strcmp@plt+0xb64c>
  40ed99:	nop    DWORD PTR [rax+0x0]
  40eda0:	mov    rbp,QWORD PTR [rbx+0x10]
  40eda4:	mov    rdi,rbp
  40eda7:	call   437430 <strcmp@plt+0x33ca8>
  40edac:	cmp    QWORD PTR [rax+0x10],r14
  40edb0:	jne    40edcb <strcmp@plt+0xb643>
  40edb2:	mov    rdx,QWORD PTR [r13+0x0]
  40edb6:	lea    rax,[rip+0x617eb]        # 4705a8 <strcmp@plt+0x6ce20>
  40edbd:	mov    rcx,QWORD PTR [rax]
  40edc0:	mov    rdi,r15
  40edc3:	mov    rsi,rbp
  40edc6:	call   437620 <strcmp@plt+0x33e98>
  40edcb:	mov    rbx,QWORD PTR [rbx+0x8]
  40edcf:	cmp    rbx,r12
  40edd2:	jne    40eda0 <strcmp@plt+0xb618>
  40edd4:	mov    rdi,r12
  40edd7:	call   42c250 <strcmp@plt+0x28ac8>
  40eddc:	cmp    BYTE PTR [r14+0x8],0x1
  40ede1:	jne    40eec0 <strcmp@plt+0xb738>
  40ede7:	lea    rax,[rip+0x55fc2]        # 464db0 <strcmp@plt+0x61628>
  40edee:	cmp    DWORD PTR [rax],0x2
  40edf1:	jl     40ee22 <strcmp@plt+0xb69a>
  40edf3:	mov    rdi,QWORD PTR [rsp]
  40edf7:	call   423130 <strcmp@plt+0x1f9a8>
  40edfc:	mov    rbx,rax
  40edff:	mov    rdi,QWORD PTR [rsp+0x18]
  40ee04:	call   423130 <strcmp@plt+0x1f9a8>
  40ee09:	mov    rcx,rax
  40ee0c:	mov    edi,0x6
  40ee11:	xor    eax,eax
  40ee13:	lea    rsi,[rip+0x3713a]        # 445f54 <strcmp@plt+0x427cc>
  40ee1a:	mov    rdx,rbx
  40ee1d:	call   42e800 <strcmp@plt+0x2b078>
  40ee22:	mov    r12,QWORD PTR [rsp+0x8]
  40ee27:	mov    rax,QWORD PTR [r12+0x78]
  40ee2c:	cmp    DWORD PTR [rax+0x18],0x0
  40ee30:	lea    r13,[rip+0x61769]        # 4705a0 <strcmp@plt+0x6ce18>
  40ee37:	je     40ef06 <strcmp@plt+0xb77e>
  40ee3d:	mov    rbp,QWORD PTR [rax+0x8]
  40ee41:	cmp    rbp,rax
  40ee44:	je     40ef06 <strcmp@plt+0xb77e>
  40ee4a:	nop    WORD PTR [rax+rax*1+0x0]
  40ee50:	mov    rbx,QWORD PTR [rbp+0x10]
  40ee54:	mov    edi,0x18
  40ee59:	call   4320b0 <strcmp@plt+0x2e928>
  40ee5e:	mov    QWORD PTR [rax],r15
  40ee61:	mov    QWORD PTR [rax+0x8],r14
  40ee65:	mov    QWORD PTR [rax+0x10],rbx
  40ee69:	mov    edi,0x8
  40ee6e:	mov    rsi,r12
  40ee71:	lea    rdx,[rip+0x10b8]        # 40ff30 <strcmp@plt+0xc7a8>
  40ee78:	mov    rcx,rax
  40ee7b:	lea    r8,[rip+0x140e]        # 410290 <strcmp@plt+0xcb08>
  40ee82:	call   4375d0 <strcmp@plt+0x33e48>
  40ee87:	mov    rbx,rax
  40ee8a:	mov    rdi,QWORD PTR [r13+0x0]
  40ee8e:	mov    rsi,r15
  40ee91:	mov    rdx,rax
  40ee94:	call   4378d0 <strcmp@plt+0x34148>
  40ee99:	mov    esi,0x2
  40ee9e:	mov    rdi,rbx
  40eea1:	call   437460 <strcmp@plt+0x33cd8>
  40eea6:	mov    rbp,QWORD PTR [rbp+0x8]
  40eeaa:	cmp    rbp,QWORD PTR [r12+0x78]
  40eeaf:	jne    40ee50 <strcmp@plt+0xb6c8>
  40eeb1:	jmp    40ef06 <strcmp@plt+0xb77e>
  40eeb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eebd:	nop    DWORD PTR [rax]
  40eec0:	mov    rdi,QWORD PTR [r13+0x0]
  40eec4:	mov    edx,0x3
  40eec9:	mov    rsi,r15
  40eecc:	call   437940 <strcmp@plt+0x341b8>
  40eed1:	mov    rbx,rax
  40eed4:	mov    rbp,QWORD PTR [rax+0x8]
  40eed8:	cmp    rbp,rax
  40eedb:	je     40eef7 <strcmp@plt+0xb76f>
  40eedd:	nop    DWORD PTR [rax]
  40eee0:	mov    rdi,QWORD PTR [rbp+0x10]
  40eee4:	mov    esi,0x2
  40eee9:	call   437460 <strcmp@plt+0x33cd8>
  40eeee:	mov    rbp,QWORD PTR [rbp+0x8]
  40eef2:	cmp    rbp,rbx
  40eef5:	jne    40eee0 <strcmp@plt+0xb758>
  40eef7:	mov    rdi,rbx
  40eefa:	call   42c250 <strcmp@plt+0x28ac8>
  40eeff:	lea    r13,[rip+0x6169a]        # 4705a0 <strcmp@plt+0x6ce18>
  40ef06:	mov    rcx,QWORD PTR [rsp+0x20]
  40ef0b:	mov    rcx,QWORD PTR [rcx+0x8]
  40ef0f:	mov    rsi,QWORD PTR [rsp+0x10]
  40ef14:	cmp    rcx,QWORD PTR [rsi+0x8]
  40ef18:	jne    40ecf0 <strcmp@plt+0xb568>
  40ef1e:	add    rsp,0x28
  40ef22:	pop    rbx
  40ef23:	pop    r12
  40ef25:	pop    r13
  40ef27:	pop    r14
  40ef29:	pop    r15
  40ef2b:	pop    rbp
  40ef2c:	ret    
  40ef2d:	lea    rax,[rip+0x55e7c]        # 464db0 <strcmp@plt+0x61628>
  40ef34:	cmp    DWORD PTR [rax],0x0
  40ef37:	jle    40ef51 <strcmp@plt+0xb7c9>
  40ef39:	lea    rsi,[rip+0x36811]        # 445751 <strcmp@plt+0x41fc9>
  40ef40:	mov    edi,0x5
  40ef45:	mov    edx,0x4
  40ef4a:	xor    eax,eax
  40ef4c:	call   42e800 <strcmp@plt+0x2b078>
  40ef51:	mov    rdi,QWORD PTR [r12+0xa0]
  40ef59:	test   rdi,rdi
  40ef5c:	jne    40ef83 <strcmp@plt+0xb7fb>
  40ef5e:	lea    rdx,[rip+0x133b]        # 4102a0 <strcmp@plt+0xcb18>
  40ef65:	mov    edi,0x6
  40ef6a:	xor    r8d,r8d
  40ef6d:	mov    rsi,r12
  40ef70:	mov    rcx,r12
  40ef73:	call   437580 <strcmp@plt+0x33df8>
  40ef78:	mov    rdi,rax
  40ef7b:	mov    QWORD PTR [r12+0xa0],rax
  40ef83:	mov    esi,0x4
  40ef88:	add    rsp,0x28
  40ef8c:	pop    rbx
  40ef8d:	pop    r12
  40ef8f:	pop    r13
  40ef91:	pop    r14
  40ef93:	pop    r15
  40ef95:	pop    rbp
  40ef96:	jmp    437460 <strcmp@plt+0x33cd8>
  40ef9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40efa0:	mov    rax,QWORD PTR [rdi+0x78]
  40efa4:	cmp    DWORD PTR [rax+0x18],0x0
  40efa8:	je     40f331 <strcmp@plt+0xbba9>
  40efae:	push   rbp
  40efaf:	push   r15
  40efb1:	push   r14
  40efb3:	push   r13
  40efb5:	push   r12
  40efb7:	push   rbx
  40efb8:	sub    rsp,0x858
  40efbf:	mov    rbx,rdi
  40efc2:	call   42bbd0 <strcmp@plt+0x28448>
  40efc7:	mov    rbp,rax
  40efca:	mov    rax,QWORD PTR [rbx+0x70]
  40efce:	mov    rax,QWORD PTR [rax]
  40efd1:	mov    rdi,QWORD PTR [rax]
  40efd4:	mov    rsi,rbp
  40efd7:	call   42bcf0 <strcmp@plt+0x28568>
  40efdc:	mov    rax,QWORD PTR [rbx+0x70]
  40efe0:	mov    rax,QWORD PTR [rax]
  40efe3:	mov    rdi,QWORD PTR [rax+0x8]
  40efe7:	mov    QWORD PTR [rsp+0x8],rbp
  40efec:	mov    rsi,rbp
  40efef:	call   42bcf0 <strcmp@plt+0x28568>
  40eff4:	mov    QWORD PTR [rsp+0x20],rbx
  40eff9:	mov    rax,QWORD PTR [rbx+0x70]
  40effd:	mov    rcx,QWORD PTR [rax]
  40f000:	mov    rdx,QWORD PTR [rcx+0x10]
  40f004:	mov    rdx,QWORD PTR [rdx]
  40f007:	cmp    DWORD PTR [rdx],0x0
  40f00a:	je     40f06a <strcmp@plt+0xb8e2>
  40f00c:	xor    ebx,ebx
  40f00e:	mov    r14d,0x3
  40f014:	xor    ebp,ebp
  40f016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f020:	mov    rcx,QWORD PTR [rdx+0x10]
  40f024:	mov    esi,ebp
  40f026:	shr    esi,0x4
  40f029:	mov    edi,ebx
  40f02b:	and    dil,0x1e
  40f02f:	shlx   edi,r14d,edi
  40f034:	test   DWORD PTR [rcx+rsi*4],edi
  40f037:	jne    40f056 <strcmp@plt+0xb8ce>
  40f039:	mov    rax,QWORD PTR [rdx+0x20]
  40f03d:	mov    ecx,ebp
  40f03f:	mov    rdi,QWORD PTR [rax+rcx*8]
  40f043:	mov    rsi,QWORD PTR [rsp+0x8]
  40f048:	call   42bcf0 <strcmp@plt+0x28568>
  40f04d:	mov    rax,QWORD PTR [rsp+0x20]
  40f052:	mov    rax,QWORD PTR [rax+0x70]
  40f056:	add    ebp,0x1
  40f059:	mov    rcx,QWORD PTR [rax]
  40f05c:	mov    rdx,QWORD PTR [rcx+0x10]
  40f060:	mov    rdx,QWORD PTR [rdx]
  40f063:	add    ebx,0x2
  40f066:	cmp    ebp,DWORD PTR [rdx]
  40f068:	jne    40f020 <strcmp@plt+0xb898>
  40f06a:	mov    rdx,QWORD PTR [rcx+0x18]
  40f06e:	mov    rdx,QWORD PTR [rdx]
  40f071:	cmp    DWORD PTR [rdx],0x0
  40f074:	je     40f0ca <strcmp@plt+0xb942>
  40f076:	xor    ebx,ebx
  40f078:	mov    r14d,0x3
  40f07e:	xor    ebp,ebp
  40f080:	mov    rcx,QWORD PTR [rdx+0x10]
  40f084:	mov    esi,ebp
  40f086:	shr    esi,0x4
  40f089:	mov    edi,ebx
  40f08b:	and    dil,0x1e
  40f08f:	shlx   edi,r14d,edi
  40f094:	test   DWORD PTR [rcx+rsi*4],edi
  40f097:	jne    40f0b6 <strcmp@plt+0xb92e>
  40f099:	mov    rax,QWORD PTR [rdx+0x20]
  40f09d:	mov    ecx,ebp
  40f09f:	mov    rdi,QWORD PTR [rax+rcx*8]
  40f0a3:	mov    rsi,QWORD PTR [rsp+0x8]
  40f0a8:	call   42bcf0 <strcmp@plt+0x28568>
  40f0ad:	mov    rax,QWORD PTR [rsp+0x20]
  40f0b2:	mov    rax,QWORD PTR [rax+0x70]
  40f0b6:	add    ebp,0x1
  40f0b9:	mov    rcx,QWORD PTR [rax]
  40f0bc:	mov    rdx,QWORD PTR [rcx+0x18]
  40f0c0:	mov    rdx,QWORD PTR [rdx]
  40f0c3:	add    ebx,0x2
  40f0c6:	cmp    ebp,DWORD PTR [rdx]
  40f0c8:	jne    40f080 <strcmp@plt+0xb8f8>
  40f0ca:	mov    rdi,QWORD PTR [rcx+0x20]
  40f0ce:	mov    rbx,QWORD PTR [rsp+0x8]
  40f0d3:	mov    rsi,rbx
  40f0d6:	call   42bcf0 <strcmp@plt+0x28568>
  40f0db:	mov    rax,QWORD PTR [rsp+0x20]
  40f0e0:	mov    rax,QWORD PTR [rax+0x70]
  40f0e4:	mov    rax,QWORD PTR [rax]
  40f0e7:	mov    rdi,QWORD PTR [rax+0x20]
  40f0eb:	mov    rsi,rbx
  40f0ee:	call   42bcf0 <strcmp@plt+0x28568>
  40f0f3:	mov    rax,QWORD PTR [rbx+0x8]
  40f0f7:	cmp    rax,rbx
  40f0fa:	je     40f310 <strcmp@plt+0xbb88>
  40f100:	lea    r14,[rip+0x4b9]        # 40f5c0 <strcmp@plt+0xbe38>
  40f107:	nop    WORD PTR [rax+rax*1+0x0]
  40f110:	mov    QWORD PTR [rsp+0x30],rax
  40f115:	mov    rax,QWORD PTR [rax+0x10]
  40f119:	mov    rcx,QWORD PTR [rax]
  40f11c:	test   rcx,rcx
  40f11f:	je     40f2fc <strcmp@plt+0xbb74>
  40f125:	xor    eax,eax
  40f127:	mov    QWORD PTR [rsp+0x10],rax
  40f12c:	nop    DWORD PTR [rax+0x0]
  40f130:	cmp    QWORD PTR [rcx+0x8],0x0
  40f135:	mov    rax,rcx
  40f138:	je     40f291 <strcmp@plt+0xbb09>
  40f13e:	mov    QWORD PTR [rsp+0x38],rax
  40f143:	mov    rax,QWORD PTR [rax+0x28]
  40f147:	mov    rcx,QWORD PTR [rax]
  40f14a:	test   rcx,rcx
  40f14d:	je     40f28c <strcmp@plt+0xbb04>
  40f153:	xor    eax,eax
  40f155:	mov    QWORD PTR [rsp+0x18],rax
  40f15a:	nop    WORD PTR [rax+rax*1+0x0]
  40f160:	mov    QWORD PTR [rsp+0x28],rcx
  40f165:	cmp    QWORD PTR [rcx+0x8],0x0
  40f16a:	lea    r13,[rip+0x6142f]        # 4705a0 <strcmp@plt+0x6ce18>
  40f171:	mov    r15,QWORD PTR [rsp+0x20]
  40f176:	je     40f215 <strcmp@plt+0xba8d>
  40f17c:	mov    rax,QWORD PTR [rsp+0x28]
  40f181:	mov    rbx,QWORD PTR [rax+0x28]
  40f185:	test   rbx,rbx
  40f188:	je     40f215 <strcmp@plt+0xba8d>
  40f18e:	mov    rdx,QWORD PTR [r13+0x0]
  40f192:	lea    rax,[rip+0x6140f]        # 4705a8 <strcmp@plt+0x6ce20>
  40f199:	mov    rcx,QWORD PTR [rax]
  40f19c:	mov    esi,0x2
  40f1a1:	mov    rdi,rbx
  40f1a4:	call   437750 <strcmp@plt+0x33fc8>
  40f1a9:	mov    rax,QWORD PTR [r15+0x78]
  40f1ad:	mov    r12,QWORD PTR [rax+0x8]
  40f1b1:	cmp    r12,rax
  40f1b4:	je     40f215 <strcmp@plt+0xba8d>
  40f1b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f1c0:	mov    rbp,QWORD PTR [r12+0x10]
  40f1c5:	mov    edi,0x10
  40f1ca:	call   4320b0 <strcmp@plt+0x2e928>
  40f1cf:	mov    QWORD PTR [rax],rbx
  40f1d2:	mov    QWORD PTR [rax+0x8],rbp
  40f1d6:	mov    edi,0x2
  40f1db:	mov    rsi,r15
  40f1de:	lea    rdx,[rip+0x15b]        # 40f340 <strcmp@plt+0xbbb8>
  40f1e5:	mov    rcx,rax
  40f1e8:	mov    r8,r14
  40f1eb:	call   4375d0 <strcmp@plt+0x33e48>
  40f1f0:	mov    rbp,rax
  40f1f3:	mov    rdi,QWORD PTR [r13+0x0]
  40f1f7:	mov    rsi,rbx
  40f1fa:	mov    rdx,rax
  40f1fd:	call   4378d0 <strcmp@plt+0x34148>
  40f202:	mov    rdi,rbp
  40f205:	call   40f340 <strcmp@plt+0xbbb8>
  40f20a:	mov    r12,QWORD PTR [r12+0x8]
  40f20f:	cmp    r12,QWORD PTR [r15+0x78]
  40f213:	jne    40f1c0 <strcmp@plt+0xba38>
  40f215:	mov    rcx,QWORD PTR [rsp+0x28]
  40f21a:	mov    rax,QWORD PTR [rcx+0x10]
  40f21e:	mov    rcx,QWORD PTR [rcx+0x18]
  40f222:	test   rax,rax
  40f225:	je     40f250 <strcmp@plt+0xbac8>
  40f227:	test   rcx,rcx
  40f22a:	je     40f280 <strcmp@plt+0xbaf8>
  40f22c:	mov    rdx,QWORD PTR [rsp+0x18]
  40f231:	mov    QWORD PTR [rsp+rdx*8+0x40],rcx
  40f236:	add    rdx,0x1
  40f23a:	mov    QWORD PTR [rsp+0x18],rdx
  40f23f:	jmp    40f280 <strcmp@plt+0xbaf8>
  40f241:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f24b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f250:	test   rcx,rcx
  40f253:	je     40f25a <strcmp@plt+0xbad2>
  40f255:	mov    rax,rcx
  40f258:	jmp    40f280 <strcmp@plt+0xbaf8>
  40f25a:	cmp    QWORD PTR [rsp+0x18],0x0
  40f260:	je     40f28c <strcmp@plt+0xbb04>
  40f262:	mov    rcx,QWORD PTR [rsp+0x18]
  40f267:	mov    rax,QWORD PTR [rsp+rcx*8+0x38]
  40f26c:	add    rcx,0xffffffffffffffff
  40f270:	mov    QWORD PTR [rsp+0x18],rcx
  40f275:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f27f:	nop
  40f280:	mov    rcx,rax
  40f283:	test   rax,rax
  40f286:	jne    40f160 <strcmp@plt+0xb9d8>
  40f28c:	mov    rax,QWORD PTR [rsp+0x38]
  40f291:	mov    rcx,rax
  40f294:	mov    rax,QWORD PTR [rax+0x10]
  40f298:	mov    rcx,QWORD PTR [rcx+0x18]
  40f29c:	test   rax,rax
  40f29f:	je     40f2c0 <strcmp@plt+0xbb38>
  40f2a1:	test   rcx,rcx
  40f2a4:	je     40f2f0 <strcmp@plt+0xbb68>
  40f2a6:	mov    rsi,QWORD PTR [rsp+0x10]
  40f2ab:	mov    QWORD PTR [rsp+rsi*8+0x450],rcx
  40f2b3:	add    rsi,0x1
  40f2b7:	mov    QWORD PTR [rsp+0x10],rsi
  40f2bc:	jmp    40f2f0 <strcmp@plt+0xbb68>
  40f2be:	xchg   ax,ax
  40f2c0:	test   rcx,rcx
  40f2c3:	je     40f2ca <strcmp@plt+0xbb42>
  40f2c5:	mov    rax,rcx
  40f2c8:	jmp    40f2f0 <strcmp@plt+0xbb68>
  40f2ca:	cmp    QWORD PTR [rsp+0x10],0x0
  40f2d0:	je     40f2fc <strcmp@plt+0xbb74>
  40f2d2:	mov    rcx,QWORD PTR [rsp+0x10]
  40f2d7:	mov    rax,QWORD PTR [rsp+rcx*8+0x448]
  40f2df:	add    rcx,0xffffffffffffffff
  40f2e3:	mov    QWORD PTR [rsp+0x10],rcx
  40f2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f2f0:	mov    rcx,rax
  40f2f3:	test   rax,rax
  40f2f6:	jne    40f130 <strcmp@plt+0xb9a8>
  40f2fc:	mov    rax,QWORD PTR [rsp+0x30]
  40f301:	mov    rax,QWORD PTR [rax+0x8]
  40f305:	cmp    rax,QWORD PTR [rsp+0x8]
  40f30a:	jne    40f110 <strcmp@plt+0xb988>
  40f310:	mov    rdi,QWORD PTR [rsp+0x8]
  40f315:	call   42c250 <strcmp@plt+0x28ac8>
  40f31a:	mov    eax,0x1
  40f31f:	add    rsp,0x858
  40f326:	pop    rbx
  40f327:	pop    r12
  40f329:	pop    r13
  40f32b:	pop    r14
  40f32d:	pop    r15
  40f32f:	pop    rbp
  40f330:	ret    
  40f331:	xor    eax,eax
  40f333:	ret    
  40f334:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f33e:	xchg   ax,ax
  40f340:	push   rbp
  40f341:	push   r15
  40f343:	push   r14
  40f345:	push   r13
  40f347:	push   r12
  40f349:	push   rbx
  40f34a:	sub    rsp,0x68
  40f34e:	mov    r12,rdi
  40f351:	call   437430 <strcmp@plt+0x33ca8>
  40f356:	mov    rbp,rax
  40f359:	mov    rdi,r12
  40f35c:	call   437450 <strcmp@plt+0x33cc8>
  40f361:	mov    r14,rax
  40f364:	mov    rdi,r12
  40f367:	call   437420 <strcmp@plt+0x33c98>
  40f36c:	mov    r15,rax
  40f36f:	mov    rdi,QWORD PTR [rbp+0x0]
  40f373:	call   431ad0 <strcmp@plt+0x2e348>
  40f378:	mov    rbx,rax
  40f37b:	mov    r13,QWORD PTR [rbp+0x8]
  40f37f:	mov    rdi,r14
  40f382:	call   432930 <strcmp@plt+0x2f1a8>
  40f387:	cmp    eax,0x2710
  40f38c:	jg     40f3d2 <strcmp@plt+0xbc4a>
  40f38e:	mov    QWORD PTR [rsp+0x18],r15
  40f393:	xor    r15d,r15d
  40f396:	xor    eax,eax
  40f398:	call   432860 <strcmp@plt+0x2f0d8>
  40f39d:	mov    QWORD PTR [rsp+0x8],rax
  40f3a2:	movzx  esi,BYTE PTR [r13+0x8]
  40f3a7:	mov    QWORD PTR [rsp],rbx
  40f3ab:	mov    rdi,rbx
  40f3ae:	call   4227c0 <strcmp@plt+0x1f038>
  40f3b3:	test   rax,rax
  40f3b6:	je     40f59f <strcmp@plt+0xbe17>
  40f3bc:	mov    rbp,rax
  40f3bf:	movzx  esi,WORD PTR [rax+0x24]
  40f3c3:	cmp    rsi,0xffff
  40f3ca:	je     40f42c <strcmp@plt+0xbca4>
  40f3cc:	add    rsi,QWORD PTR [rbp+0x30]
  40f3d0:	jmp    40f42e <strcmp@plt+0xbca6>
  40f3d2:	lea    rax,[rip+0x611cf]        # 4705a8 <strcmp@plt+0x6ce20>
  40f3d9:	mov    rdi,QWORD PTR [rax]
  40f3dc:	mov    rsi,r14
  40f3df:	call   4326e0 <strcmp@plt+0x2ef58>
  40f3e4:	mov    esi,0x3c
  40f3e9:	mov    rdi,r12
  40f3ec:	call   437460 <strcmp@plt+0x33cd8>
  40f3f1:	mov    rdi,rbx
  40f3f4:	call   423130 <strcmp@plt+0x1f9a8>
  40f3f9:	mov    rbx,rax
  40f3fc:	mov    rdi,QWORD PTR [r13+0x0]
  40f400:	call   423130 <strcmp@plt+0x1f9a8>
  40f405:	mov    rcx,rax
  40f408:	lea    rsi,[rip+0x36a8b]        # 445e9a <strcmp@plt+0x42712>
  40f40f:	xor    r15d,r15d
  40f412:	mov    edi,0x3
  40f417:	mov    r8d,0x3c
  40f41d:	xor    eax,eax
  40f41f:	mov    rdx,rbx
  40f422:	call   42e800 <strcmp@plt+0x2b078>
  40f427:	jmp    40f59f <strcmp@plt+0xbe17>
  40f42c:	xor    esi,esi
  40f42e:	mov    al,BYTE PTR [r13+0x18]
  40f432:	mov    cl,BYTE PTR [rsi]
  40f434:	shl    al,0x3
  40f437:	and    al,0x8
  40f439:	and    cl,0xf7
  40f43c:	or     cl,al
  40f43e:	mov    BYTE PTR [rsi],cl
  40f440:	mov    rax,QWORD PTR [rsp+0x8]
  40f445:	mov    QWORD PTR [rsi+0x4],rax
  40f449:	add    rsi,0xc
  40f44d:	movzx  edx,BYTE PTR [r13+0x8]
  40f452:	mov    rcx,QWORD PTR [r13+0x10]
  40f456:	mov    rdi,rbp
  40f459:	call   4229c0 <strcmp@plt+0x1f238>
  40f45e:	cmp    eax,0x1
  40f461:	jne    40f59f <strcmp@plt+0xbe17>
  40f467:	mov    rbx,QWORD PTR [r13+0x0]
  40f46b:	lea    rax,[rip+0x5593e]        # 464db0 <strcmp@plt+0x61628>
  40f472:	cmp    DWORD PTR [rax],0x0
  40f475:	jle    40f4b6 <strcmp@plt+0xbd2e>
  40f477:	mov    rdi,rbp
  40f47a:	call   422870 <strcmp@plt+0x1f0e8>
  40f47f:	mov    r15,rax
  40f482:	mov    rdi,QWORD PTR [rsp]
  40f486:	call   423130 <strcmp@plt+0x1f9a8>
  40f48b:	mov    QWORD PTR [rsp+0x10],rax
  40f490:	mov    rdi,rbx
  40f493:	call   423130 <strcmp@plt+0x1f9a8>
  40f498:	mov    r8,rax
  40f49b:	lea    rsi,[rip+0x3629b]        # 44573d <strcmp@plt+0x41fb5>
  40f4a2:	mov    edi,0x5
  40f4a7:	xor    eax,eax
  40f4a9:	mov    rdx,r15
  40f4ac:	mov    rcx,QWORD PTR [rsp+0x10]
  40f4b1:	call   42e800 <strcmp@plt+0x2b078>
  40f4b6:	lea    r15,[rsp+0x20]
  40f4bb:	mov    esi,0x10f6
  40f4c0:	mov    edx,0x10f6
  40f4c5:	xor    ecx,ecx
  40f4c7:	mov    rdi,r15
  40f4ca:	mov    r8,rbx
  40f4cd:	call   435600 <strcmp@plt+0x31e78>
  40f4d2:	mov    rdi,QWORD PTR [rsp+0x18]
  40f4d7:	mov    rsi,rbp
  40f4da:	mov    rdx,r15
  40f4dd:	call   407ab0 <strcmp@plt+0x4328>
  40f4e2:	mov    rdi,rbp
  40f4e5:	call   42e010 <strcmp@plt+0x2a888>
  40f4ea:	mov    rdi,r14
  40f4ed:	call   432930 <strcmp@plt+0x2f1a8>
  40f4f2:	lea    rcx,[rip+0x558b7]        # 464db0 <strcmp@plt+0x61628>
  40f4f9:	mov    ecx,DWORD PTR [rcx]
  40f4fb:	test   eax,eax
  40f4fd:	jle    40f543 <strcmp@plt+0xbdbb>
  40f4ff:	test   ecx,ecx
  40f501:	jle    40f575 <strcmp@plt+0xbded>
  40f503:	mov    rdi,QWORD PTR [rsp]
  40f507:	call   423130 <strcmp@plt+0x1f9a8>
  40f50c:	mov    r15,rax
  40f50f:	mov    rdi,QWORD PTR [r13+0x0]
  40f513:	call   423130 <strcmp@plt+0x1f9a8>
  40f518:	mov    rbx,rax
  40f51b:	mov    rdi,r14
  40f51e:	call   432930 <strcmp@plt+0x2f1a8>
  40f523:	mov    ebp,eax
  40f525:	lea    rsi,[rip+0x3690c]        # 445e38 <strcmp@plt+0x426b0>
  40f52c:	mov    edi,0x5
  40f531:	xor    eax,eax
  40f533:	mov    rdx,r15
  40f536:	mov    rcx,rbx
  40f539:	mov    r8d,ebp
  40f53c:	call   42e800 <strcmp@plt+0x2b078>
  40f541:	jmp    40f575 <strcmp@plt+0xbded>
  40f543:	test   ecx,ecx
  40f545:	jle    40f575 <strcmp@plt+0xbded>
  40f547:	mov    rdi,QWORD PTR [rsp]
  40f54b:	call   423130 <strcmp@plt+0x1f9a8>
  40f550:	mov    rbp,rax
  40f553:	mov    rdi,QWORD PTR [r13+0x0]
  40f557:	call   423130 <strcmp@plt+0x1f9a8>
  40f55c:	mov    rcx,rax
  40f55f:	lea    rsi,[rip+0x3690c]        # 445e72 <strcmp@plt+0x426ea>
  40f566:	mov    edi,0x5
  40f56b:	xor    eax,eax
  40f56d:	mov    rdx,rbp
  40f570:	call   42e800 <strcmp@plt+0x2b078>
  40f575:	lea    rax,[rip+0x6102c]        # 4705a8 <strcmp@plt+0x6ce20>
  40f57c:	mov    rdi,QWORD PTR [rax]
  40f57f:	mov    rsi,QWORD PTR [rsp+0x8]
  40f584:	mov    rdx,r14
  40f587:	call   432280 <strcmp@plt+0x2eaf8>
  40f58c:	mov    esi,0x3
  40f591:	mov    rdi,r12
  40f594:	call   437460 <strcmp@plt+0x33cd8>
  40f599:	mov    r15d,0x1
  40f59f:	mov    eax,r15d
  40f5a2:	add    rsp,0x68
  40f5a6:	pop    rbx
  40f5a7:	pop    r12
  40f5a9:	pop    r13
  40f5ab:	pop    r14
  40f5ad:	pop    r15
  40f5af:	pop    rbp
  40f5b0:	ret    
  40f5b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f5bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f5c0:	jmp    403780 <free@plt>
  40f5c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f5cf:	nop
  40f5d0:	push   rbp
  40f5d1:	push   r15
  40f5d3:	push   r14
  40f5d5:	push   r13
  40f5d7:	push   r12
  40f5d9:	push   rbx
  40f5da:	sub    rsp,0x418
  40f5e1:	test   rsi,rsi
  40f5e4:	je     40f88f <strcmp@plt+0xc107>
  40f5ea:	mov    r15,rsi
  40f5ed:	mov    r12,rdi
  40f5f0:	mov    rdi,rsi
  40f5f3:	call   431ad0 <strcmp@plt+0x2e348>
  40f5f8:	mov    r14,rax
  40f5fb:	cmp    DWORD PTR [r12+0x80],0x0
  40f604:	je     40f7df <strcmp@plt+0xc057>
  40f60a:	lea    rax,[rip+0x5579f]        # 464db0 <strcmp@plt+0x61628>
  40f611:	cmp    DWORD PTR [rax],0x0
  40f614:	jle    40f637 <strcmp@plt+0xbeaf>
  40f616:	mov    rdi,r14
  40f619:	call   423130 <strcmp@plt+0x1f9a8>
  40f61e:	mov    rcx,rax
  40f621:	lea    rsi,[rip+0x359b9]        # 444fe1 <strcmp@plt+0x41859>
  40f628:	mov    edi,0x5
  40f62d:	xor    eax,eax
  40f62f:	mov    rdx,rcx
  40f632:	call   42e800 <strcmp@plt+0x2b078>
  40f637:	mov    rax,QWORD PTR [r12+0x30]
  40f63c:	mov    rdi,QWORD PTR [rax]
  40f63f:	mov    rsi,r14
  40f642:	call   42ec60 <strcmp@plt+0x2b4d8>
  40f647:	test   rax,rax
  40f64a:	je     40f77c <strcmp@plt+0xbff4>
  40f650:	mov    rcx,QWORD PTR [rax]
  40f653:	test   rcx,rcx
  40f656:	je     40f77c <strcmp@plt+0xbff4>
  40f65c:	xor    eax,eax
  40f65e:	mov    QWORD PTR [rsp],rax
  40f662:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f66c:	nop    DWORD PTR [rax+0x0]
  40f670:	mov    QWORD PTR [rsp+0x8],rcx
  40f675:	cmp    QWORD PTR [rcx+0x8],0x0
  40f67a:	je     40f710 <strcmp@plt+0xbf88>
  40f680:	mov    rax,QWORD PTR [rsp+0x8]
  40f685:	mov    rax,QWORD PTR [rax+0x28]
  40f689:	test   rax,rax
  40f68c:	je     40f710 <strcmp@plt+0xbf88>
  40f692:	cmp    BYTE PTR [rax+0x10],0x0
  40f696:	je     40f710 <strcmp@plt+0xbf88>
  40f69c:	mov    rbx,QWORD PTR [rax+0x8]
  40f6a0:	mov    rax,QWORD PTR [rbx+0x28]
  40f6a4:	mov    r15,QWORD PTR [rax+0x8]
  40f6a8:	cmp    r15,rax
  40f6ab:	jne    40f6b9 <strcmp@plt+0xbf31>
  40f6ad:	jmp    40f710 <strcmp@plt+0xbf88>
  40f6af:	nop
  40f6b0:	mov    r15,QWORD PTR [r15+0x8]
  40f6b4:	cmp    r15,rax
  40f6b7:	je     40f710 <strcmp@plt+0xbf88>
  40f6b9:	mov    r13,QWORD PTR [r15+0x10]
  40f6bd:	cmp    DWORD PTR [r13+0x18],0x0
  40f6c2:	je     40f6b0 <strcmp@plt+0xbf28>
  40f6c4:	mov    rbp,QWORD PTR [r13+0x8]
  40f6c8:	mov    rcx,QWORD PTR [rbp+0x10]
  40f6cc:	mov    rdx,QWORD PTR [rcx]
  40f6cf:	cmp    DWORD PTR [rdx+0x18],0x0
  40f6d3:	je     40f6b0 <strcmp@plt+0xbf28>
  40f6d5:	cmp    rbp,r13
  40f6d8:	jne    40f6e4 <strcmp@plt+0xbf5c>
  40f6da:	jmp    40f6b0 <strcmp@plt+0xbf28>
  40f6dc:	nop    DWORD PTR [rax+0x0]
  40f6e0:	mov    rcx,QWORD PTR [rbp+0x10]
  40f6e4:	cmp    BYTE PTR [rcx+0x8],0x1
  40f6e8:	jne    40f6fb <strcmp@plt+0xbf73>
  40f6ea:	mov    rcx,QWORD PTR [rcx]
  40f6ed:	mov    rdi,r12
  40f6f0:	mov    rsi,r14
  40f6f3:	mov    rdx,rbx
  40f6f6:	call   40f8b0 <strcmp@plt+0xc128>
  40f6fb:	mov    rbp,QWORD PTR [rbp+0x8]
  40f6ff:	cmp    rbp,r13
  40f702:	jne    40f6e0 <strcmp@plt+0xbf58>
  40f704:	mov    rax,QWORD PTR [rbx+0x28]
  40f708:	jmp    40f6b0 <strcmp@plt+0xbf28>
  40f70a:	nop    WORD PTR [rax+rax*1+0x0]
  40f710:	mov    rcx,QWORD PTR [rsp+0x8]
  40f715:	mov    rax,QWORD PTR [rcx+0x10]
  40f719:	mov    rcx,QWORD PTR [rcx+0x18]
  40f71d:	test   rax,rax
  40f720:	je     40f740 <strcmp@plt+0xbfb8>
  40f722:	test   rcx,rcx
  40f725:	je     40f770 <strcmp@plt+0xbfe8>
  40f727:	mov    rdx,QWORD PTR [rsp]
  40f72b:	mov    QWORD PTR [rsp+rdx*8+0x10],rcx
  40f730:	add    rdx,0x1
  40f734:	mov    QWORD PTR [rsp],rdx
  40f738:	jmp    40f770 <strcmp@plt+0xbfe8>
  40f73a:	nop    WORD PTR [rax+rax*1+0x0]
  40f740:	test   rcx,rcx
  40f743:	je     40f74a <strcmp@plt+0xbfc2>
  40f745:	mov    rax,rcx
  40f748:	jmp    40f770 <strcmp@plt+0xbfe8>
  40f74a:	cmp    QWORD PTR [rsp],0x0
  40f74f:	je     40f77c <strcmp@plt+0xbff4>
  40f751:	mov    rcx,QWORD PTR [rsp]
  40f755:	mov    rax,QWORD PTR [rsp+rcx*8+0x8]
  40f75a:	add    rcx,0xffffffffffffffff
  40f75e:	mov    QWORD PTR [rsp],rcx
  40f762:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f76c:	nop    DWORD PTR [rax+0x0]
  40f770:	mov    rcx,rax
  40f773:	test   rax,rax
  40f776:	jne    40f670 <strcmp@plt+0xbee8>
  40f77c:	lea    rax,[rip+0x5562d]        # 464db0 <strcmp@plt+0x61628>
  40f783:	cmp    DWORD PTR [rax],0x0
  40f786:	jle    40f79b <strcmp@plt+0xc013>
  40f788:	lea    rsi,[rip+0x3586d]        # 444ffc <strcmp@plt+0x41874>
  40f78f:	mov    edi,0x5
  40f794:	xor    eax,eax
  40f796:	call   42e800 <strcmp@plt+0x2b078>
  40f79b:	mov    rax,QWORD PTR [r12+0x68]
  40f7a0:	mov    rbx,QWORD PTR [rax+0x8]
  40f7a4:	cmp    rbx,rax
  40f7a7:	je     40f7cd <strcmp@plt+0xc045>
  40f7a9:	nop    DWORD PTR [rax+0x0]
  40f7b0:	mov    rcx,QWORD PTR [rbx+0x10]
  40f7b4:	mov    rdi,r12
  40f7b7:	mov    rsi,r14
  40f7ba:	mov    rdx,r14
  40f7bd:	call   40f8b0 <strcmp@plt+0xc128>
  40f7c2:	mov    rbx,QWORD PTR [rbx+0x8]
  40f7c6:	cmp    rbx,QWORD PTR [r12+0x68]
  40f7cb:	jne    40f7b0 <strcmp@plt+0xc028>
  40f7cd:	add    rsp,0x418
  40f7d4:	pop    rbx
  40f7d5:	pop    r12
  40f7d7:	pop    r13
  40f7d9:	pop    r14
  40f7db:	pop    r15
  40f7dd:	pop    rbp
  40f7de:	ret    
  40f7df:	mov    rax,QWORD PTR [r12+0x78]
  40f7e4:	cmp    DWORD PTR [rax+0x18],0x0
  40f7e8:	je     40f60a <strcmp@plt+0xbe82>
  40f7ee:	lea    rax,[rip+0x60dab]        # 4705a0 <strcmp@plt+0x6ce18>
  40f7f5:	mov    rdx,QWORD PTR [rax]
  40f7f8:	lea    rax,[rip+0x60da9]        # 4705a8 <strcmp@plt+0x6ce20>
  40f7ff:	mov    rcx,QWORD PTR [rax]
  40f802:	mov    esi,0x2
  40f807:	mov    rdi,r15
  40f80a:	call   437750 <strcmp@plt+0x33fc8>
  40f80f:	mov    rax,QWORD PTR [r12+0x78]
  40f814:	mov    r13,QWORD PTR [rax+0x8]
  40f818:	cmp    r13,rax
  40f81b:	je     40f60a <strcmp@plt+0xbe82>
  40f821:	lea    rbx,[rip+0xfffffffffffffd98]        # 40f5c0 <strcmp@plt+0xbe38>
  40f828:	nop    DWORD PTR [rax+rax*1+0x0]
  40f830:	mov    rbp,QWORD PTR [r13+0x10]
  40f834:	mov    edi,0x10
  40f839:	call   4320b0 <strcmp@plt+0x2e928>
  40f83e:	mov    QWORD PTR [rax],r15
  40f841:	mov    QWORD PTR [rax+0x8],rbp
  40f845:	mov    edi,0x2
  40f84a:	mov    rsi,r12
  40f84d:	lea    rdx,[rip+0xfffffffffffffaec]        # 40f340 <strcmp@plt+0xbbb8>
  40f854:	mov    rcx,rax
  40f857:	mov    r8,rbx
  40f85a:	call   4375d0 <strcmp@plt+0x33e48>
  40f85f:	mov    rbp,rax
  40f862:	lea    rax,[rip+0x60d37]        # 4705a0 <strcmp@plt+0x6ce18>
  40f869:	mov    rdi,QWORD PTR [rax]
  40f86c:	mov    rsi,r15
  40f86f:	mov    rdx,rbp
  40f872:	call   4378d0 <strcmp@plt+0x34148>
  40f877:	mov    rdi,rbp
  40f87a:	call   40f340 <strcmp@plt+0xbbb8>
  40f87f:	mov    r13,QWORD PTR [r13+0x8]
  40f883:	cmp    r13,QWORD PTR [r12+0x78]
  40f888:	jne    40f830 <strcmp@plt+0xc0a8>
  40f88a:	jmp    40f60a <strcmp@plt+0xbe82>
  40f88f:	lea    rdi,[rip+0x356e7]        # 444f7d <strcmp@plt+0x417f5>
  40f896:	lea    rsi,[rip+0x356ea]        # 444f87 <strcmp@plt+0x417ff>
  40f89d:	lea    rcx,[rip+0x356f6]        # 444f9a <strcmp@plt+0x41812>
  40f8a4:	mov    edx,0x5ab
  40f8a9:	call   4032b0 <__assert_fail@plt>
  40f8ae:	xchg   ax,ax
  40f8b0:	push   rbp
  40f8b1:	push   r15
  40f8b3:	push   r14
  40f8b5:	push   r13
  40f8b7:	push   r12
  40f8b9:	push   rbx
  40f8ba:	sub    rsp,0x68
  40f8be:	mov    r15,rcx
  40f8c1:	mov    rbp,rdx
  40f8c4:	mov    r12,rsi
  40f8c7:	mov    r14,rdi
  40f8ca:	call   4079e0 <strcmp@plt+0x4258>
  40f8cf:	mov    rdi,rax
  40f8d2:	call   4077d0 <strcmp@plt+0x4048>
  40f8d7:	mov    rbx,rax
  40f8da:	mov    rdi,r12
  40f8dd:	mov    rsi,rax
  40f8e0:	mov    rdx,rbp
  40f8e3:	call   4222a0 <strcmp@plt+0x1eb18>
  40f8e8:	test   rax,rax
  40f8eb:	je     40fa05 <strcmp@plt+0xc27d>
  40f8f1:	mov    r13,rax
  40f8f4:	movzx  eax,WORD PTR [rax+0x24]
  40f8f8:	mov    rcx,QWORD PTR [r13+0x30]
  40f8fc:	movzx  edx,WORD PTR [rcx+rax*1]
  40f900:	movzx  esi,BYTE PTR [rcx+rax*1+0x2]
  40f905:	mov    BYTE PTR [rcx+rax*1+0x2],sil
  40f90a:	shl    esi,0x10
  40f90d:	or     esi,edx
  40f90f:	or     esi,0x1
  40f912:	mov    WORD PTR [rcx+rax*1],si
  40f916:	lea    rax,[rip+0x55493]        # 464db0 <strcmp@plt+0x61628>
  40f91d:	cmp    DWORD PTR [rax],0x0
  40f920:	jle    40f97f <strcmp@plt+0xc1f7>
  40f922:	mov    rdi,r13
  40f925:	call   422870 <strcmp@plt+0x1f0e8>
  40f92a:	mov    QWORD PTR [rsp+0x10],rax
  40f92f:	mov    rdi,rbx
  40f932:	call   422e30 <strcmp@plt+0x1f6a8>
  40f937:	mov    QWORD PTR [rsp+0x8],rax
  40f93c:	mov    rdi,r12
  40f93f:	call   423130 <strcmp@plt+0x1f9a8>
  40f944:	mov    QWORD PTR [rsp+0x18],r15
  40f949:	mov    r15,rax
  40f94c:	mov    rdi,rbp
  40f94f:	call   423130 <strcmp@plt+0x1f9a8>
  40f954:	mov    rbp,rax
  40f957:	lea    rsi,[rip+0x36583]        # 445ee1 <strcmp@plt+0x42759>
  40f95e:	mov    edi,0x5
  40f963:	xor    eax,eax
  40f965:	mov    rdx,QWORD PTR [rsp+0x10]
  40f96a:	mov    rcx,QWORD PTR [rsp+0x8]
  40f96f:	mov    r8,r15
  40f972:	mov    r15,QWORD PTR [rsp+0x18]
  40f977:	mov    r9,rbp
  40f97a:	call   42e800 <strcmp@plt+0x2b078>
  40f97f:	mov    rdi,rbx
  40f982:	call   42c250 <strcmp@plt+0x28ac8>
  40f987:	mov    rbx,QWORD PTR [r14+0x10]
  40f98b:	mov    rdi,r15
  40f98e:	call   423200 <strcmp@plt+0x1fa78>
  40f993:	movzx  esi,ax
  40f996:	mov    rdi,rbx
  40f999:	call   4077c0 <strcmp@plt+0x4038>
  40f99e:	test   rax,rax
  40f9a1:	je     40f9d0 <strcmp@plt+0xc248>
  40f9a3:	lea    rbx,[rsp+0x20]
  40f9a8:	mov    esi,0x10f6
  40f9ad:	mov    edx,0x10f6
  40f9b2:	mov    rdi,rbx
  40f9b5:	mov    rcx,rax
  40f9b8:	mov    r8,r15
  40f9bb:	call   435600 <strcmp@plt+0x31e78>
  40f9c0:	mov    rdi,r14
  40f9c3:	mov    rsi,r13
  40f9c6:	mov    rdx,rbx
  40f9c9:	call   407ab0 <strcmp@plt+0x4328>
  40f9ce:	jmp    40f9fd <strcmp@plt+0xc275>
  40f9d0:	lea    rax,[rip+0x553d9]        # 464db0 <strcmp@plt+0x61628>
  40f9d7:	cmp    DWORD PTR [rax],0x2
  40f9da:	jl     40f9fd <strcmp@plt+0xc275>
  40f9dc:	mov    rdi,r12
  40f9df:	call   423130 <strcmp@plt+0x1f9a8>
  40f9e4:	mov    rcx,rax
  40f9e7:	lea    rsi,[rip+0x36520]        # 445f0e <strcmp@plt+0x42786>
  40f9ee:	mov    edi,0x6
  40f9f3:	xor    eax,eax
  40f9f5:	mov    rdx,rcx
  40f9f8:	call   42e800 <strcmp@plt+0x2b078>
  40f9fd:	mov    rdi,r13
  40fa00:	call   42e010 <strcmp@plt+0x2a888>
  40fa05:	add    rsp,0x68
  40fa09:	pop    rbx
  40fa0a:	pop    r12
  40fa0c:	pop    r13
  40fa0e:	pop    r14
  40fa10:	pop    r15
  40fa12:	pop    rbp
  40fa13:	ret    
  40fa14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fa1e:	xchg   ax,ax
  40fa20:	push   rbp
  40fa21:	push   r15
  40fa23:	push   r14
  40fa25:	push   r13
  40fa27:	push   r12
  40fa29:	push   rbx
  40fa2a:	sub    rsp,0x18
  40fa2e:	mov    r12d,esi
  40fa31:	mov    r14,rdi
  40fa34:	mov    rdi,QWORD PTR [rdi+0x30]
  40fa38:	mov    esi,0x2
  40fa3d:	call   4088a0 <strcmp@plt+0x5118>
  40fa42:	mov    QWORD PTR [rsp+0x8],rax
  40fa47:	mov    rdi,QWORD PTR [r14+0x30]
  40fa4b:	mov    esi,0xa
  40fa50:	call   4088a0 <strcmp@plt+0x5118>
  40fa55:	mov    QWORD PTR [rsp+0x10],rax
  40fa5a:	cmp    r12d,0x4
  40fa5e:	jg     40fa73 <strcmp@plt+0xc2eb>
  40fa60:	lea    rsi,[rip+0x355ab]        # 445012 <strcmp@plt+0x4188a>
  40fa67:	xor    eax,eax
  40fa69:	mov    edi,r12d
  40fa6c:	call   42e800 <strcmp@plt+0x2b078>
  40fa71:	jmp    40fa9f <strcmp@plt+0xc317>
  40fa73:	lea    rbx,[rip+0x55336]        # 464db0 <strcmp@plt+0x61628>
  40fa7a:	mov    eax,DWORD PTR [rbx]
  40fa7c:	add    eax,0x4
  40fa7f:	cmp    eax,r12d
  40fa82:	jl     40fa9a <strcmp@plt+0xc312>
  40fa84:	lea    rsi,[rip+0x35587]        # 445012 <strcmp@plt+0x4188a>
  40fa8b:	xor    eax,eax
  40fa8d:	mov    edi,r12d
  40fa90:	call   42e800 <strcmp@plt+0x2b078>
  40fa95:	mov    eax,DWORD PTR [rbx]
  40fa97:	add    eax,0x4
  40fa9a:	cmp    eax,r12d
  40fa9d:	jl     40fab0 <strcmp@plt+0xc328>
  40fa9f:	lea    rsi,[rip+0x355b3]        # 445059 <strcmp@plt+0x418d1>
  40faa6:	xor    eax,eax
  40faa8:	mov    edi,r12d
  40faab:	call   42e800 <strcmp@plt+0x2b078>
  40fab0:	mov    rax,QWORD PTR [rsp+0x8]
  40fab5:	mov    rax,QWORD PTR [rax+0x8]
  40fab9:	mov    rax,QWORD PTR [rax+0x28]
  40fabd:	mov    r13,QWORD PTR [rax+0x8]
  40fac1:	cmp    r13,rax
  40fac4:	je     40fb59 <strcmp@plt+0xc3d1>
  40faca:	lea    rbx,[rip+0x33be4]        # 4436b5 <strcmp@plt+0x3ff2d>
  40fad1:	lea    rbp,[rip+0x552d8]        # 464db0 <strcmp@plt+0x61628>
  40fad8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fae0:	mov    r14,QWORD PTR [r13+0x10]
  40fae4:	cmp    DWORD PTR [r14+0x18],0x0
  40fae9:	je     40fb46 <strcmp@plt+0xc3be>
  40faeb:	mov    r15,QWORD PTR [r14+0x8]
  40faef:	mov    rdi,QWORD PTR [r15+0x10]
  40faf3:	mov    rax,QWORD PTR [rdi]
  40faf6:	cmp    DWORD PTR [rax+0x18],0x0
  40fafa:	je     40fb46 <strcmp@plt+0xc3be>
  40fafc:	cmp    r15,r14
  40faff:	jne    40fb14 <strcmp@plt+0xc38c>
  40fb01:	jmp    40fb46 <strcmp@plt+0xc3be>
  40fb03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb0d:	nop    DWORD PTR [rax]
  40fb10:	mov    rdi,QWORD PTR [r15+0x10]
  40fb14:	cmp    r12d,0x5
  40fb18:	jl     40fb25 <strcmp@plt+0xc39d>
  40fb1a:	mov    eax,DWORD PTR [rbp+0x0]
  40fb1d:	add    eax,0x4
  40fb20:	cmp    eax,r12d
  40fb23:	jl     40fb3d <strcmp@plt+0xc3b5>
  40fb25:	call   4286e0 <strcmp@plt+0x24f58>
  40fb2a:	mov    rcx,rax
  40fb2d:	xor    eax,eax
  40fb2f:	mov    edi,r12d
  40fb32:	mov    rsi,rbx
  40fb35:	mov    rdx,rcx
  40fb38:	call   42e800 <strcmp@plt+0x2b078>
  40fb3d:	mov    r15,QWORD PTR [r15+0x8]
  40fb41:	cmp    r15,r14
  40fb44:	jne    40fb10 <strcmp@plt+0xc388>
  40fb46:	mov    r13,QWORD PTR [r13+0x8]
  40fb4a:	mov    rax,QWORD PTR [rsp+0x8]
  40fb4f:	mov    rax,QWORD PTR [rax+0x8]
  40fb53:	cmp    r13,QWORD PTR [rax+0x28]
  40fb57:	jne    40fae0 <strcmp@plt+0xc358>
  40fb59:	cmp    r12d,0x4
  40fb5d:	jg     40fb83 <strcmp@plt+0xc3fb>
  40fb5f:	lea    rsi,[rip+0x3553a]        # 4450a0 <strcmp@plt+0x41918>
  40fb66:	xor    eax,eax
  40fb68:	mov    edi,r12d
  40fb6b:	call   42e800 <strcmp@plt+0x2b078>
  40fb70:	lea    rsi,[rip+0x35571]        # 4450e8 <strcmp@plt+0x41960>
  40fb77:	xor    eax,eax
  40fb79:	mov    edi,r12d
  40fb7c:	call   42e800 <strcmp@plt+0x2b078>
  40fb81:	jmp    40fba6 <strcmp@plt+0xc41e>
  40fb83:	lea    rbx,[rip+0x55226]        # 464db0 <strcmp@plt+0x61628>
  40fb8a:	mov    eax,DWORD PTR [rbx]
  40fb8c:	add    eax,0x4
  40fb8f:	cmp    eax,r12d
  40fb92:	jge    40fc9e <strcmp@plt+0xc516>
  40fb98:	cmp    eax,r12d
  40fb9b:	jge    40fcbd <strcmp@plt+0xc535>
  40fba1:	cmp    eax,r12d
  40fba4:	jl     40fbb7 <strcmp@plt+0xc42f>
  40fba6:	lea    rsi,[rip+0x354ac]        # 445059 <strcmp@plt+0x418d1>
  40fbad:	xor    eax,eax
  40fbaf:	mov    edi,r12d
  40fbb2:	call   42e800 <strcmp@plt+0x2b078>
  40fbb7:	mov    rax,QWORD PTR [rsp+0x10]
  40fbbc:	mov    rax,QWORD PTR [rax+0x8]
  40fbc0:	mov    rax,QWORD PTR [rax+0x28]
  40fbc4:	mov    r13,QWORD PTR [rax+0x8]
  40fbc8:	cmp    r13,rax
  40fbcb:	je     40fc59 <strcmp@plt+0xc4d1>
  40fbd1:	lea    r15,[rip+0x33add]        # 4436b5 <strcmp@plt+0x3ff2d>
  40fbd8:	lea    r14,[rip+0x551d1]        # 464db0 <strcmp@plt+0x61628>
  40fbdf:	nop
  40fbe0:	mov    rbp,QWORD PTR [r13+0x10]
  40fbe4:	cmp    DWORD PTR [rbp+0x18],0x0
  40fbe8:	je     40fc46 <strcmp@plt+0xc4be>
  40fbea:	mov    rbx,QWORD PTR [rbp+0x8]
  40fbee:	mov    rdi,QWORD PTR [rbx+0x10]
  40fbf2:	mov    rax,QWORD PTR [rdi]
  40fbf5:	cmp    DWORD PTR [rax+0x18],0x0
  40fbf9:	je     40fc46 <strcmp@plt+0xc4be>
  40fbfb:	cmp    rbx,rbp
  40fbfe:	jne    40fc14 <strcmp@plt+0xc48c>
  40fc00:	jmp    40fc46 <strcmp@plt+0xc4be>
  40fc02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc0c:	nop    DWORD PTR [rax+0x0]
  40fc10:	mov    rdi,QWORD PTR [rbx+0x10]
  40fc14:	cmp    r12d,0x5
  40fc18:	jl     40fc25 <strcmp@plt+0xc49d>
  40fc1a:	mov    eax,DWORD PTR [r14]
  40fc1d:	add    eax,0x4
  40fc20:	cmp    eax,r12d
  40fc23:	jl     40fc3d <strcmp@plt+0xc4b5>
  40fc25:	call   4286e0 <strcmp@plt+0x24f58>
  40fc2a:	mov    rcx,rax
  40fc2d:	xor    eax,eax
  40fc2f:	mov    edi,r12d
  40fc32:	mov    rsi,r15
  40fc35:	mov    rdx,rcx
  40fc38:	call   42e800 <strcmp@plt+0x2b078>
  40fc3d:	mov    rbx,QWORD PTR [rbx+0x8]
  40fc41:	cmp    rbx,rbp
  40fc44:	jne    40fc10 <strcmp@plt+0xc488>
  40fc46:	mov    r13,QWORD PTR [r13+0x8]
  40fc4a:	mov    rax,QWORD PTR [rsp+0x10]
  40fc4f:	mov    rax,QWORD PTR [rax+0x8]
  40fc53:	cmp    r13,QWORD PTR [rax+0x28]
  40fc57:	jne    40fbe0 <strcmp@plt+0xc458>
  40fc59:	cmp    r12d,0x5
  40fc5d:	jl     40fc7f <strcmp@plt+0xc4f7>
  40fc5f:	lea    rax,[rip+0x5514a]        # 464db0 <strcmp@plt+0x61628>
  40fc66:	mov    eax,DWORD PTR [rax]
  40fc68:	add    eax,0x4
  40fc6b:	cmp    eax,r12d
  40fc6e:	jge    40fc7f <strcmp@plt+0xc4f7>
  40fc70:	add    rsp,0x18
  40fc74:	pop    rbx
  40fc75:	pop    r12
  40fc77:	pop    r13
  40fc79:	pop    r14
  40fc7b:	pop    r15
  40fc7d:	pop    rbp
  40fc7e:	ret    
  40fc7f:	lea    rsi,[rip+0x3541a]        # 4450a0 <strcmp@plt+0x41918>
  40fc86:	xor    eax,eax
  40fc88:	mov    edi,r12d
  40fc8b:	add    rsp,0x18
  40fc8f:	pop    rbx
  40fc90:	pop    r12
  40fc92:	pop    r13
  40fc94:	pop    r14
  40fc96:	pop    r15
  40fc98:	pop    rbp
  40fc99:	jmp    42e800 <strcmp@plt+0x2b078>
  40fc9e:	lea    rsi,[rip+0x353fb]        # 4450a0 <strcmp@plt+0x41918>
  40fca5:	xor    eax,eax
  40fca7:	mov    edi,r12d
  40fcaa:	call   42e800 <strcmp@plt+0x2b078>
  40fcaf:	mov    eax,DWORD PTR [rbx]
  40fcb1:	add    eax,0x4
  40fcb4:	cmp    eax,r12d
  40fcb7:	jl     40fba1 <strcmp@plt+0xc419>
  40fcbd:	lea    rsi,[rip+0x35424]        # 4450e8 <strcmp@plt+0x41960>
  40fcc4:	xor    eax,eax
  40fcc6:	mov    edi,r12d
  40fcc9:	call   42e800 <strcmp@plt+0x2b078>
  40fcce:	mov    eax,DWORD PTR [rbx]
  40fcd0:	add    eax,0x4
  40fcd3:	cmp    eax,r12d
  40fcd6:	jge    40fba6 <strcmp@plt+0xc41e>
  40fcdc:	jmp    40fbb7 <strcmp@plt+0xc42f>
  40fce1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fceb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fcf0:	push   rbp
  40fcf1:	push   r15
  40fcf3:	push   r14
  40fcf5:	push   r13
  40fcf7:	push   r12
  40fcf9:	push   rbx
  40fcfa:	sub    rsp,0x58
  40fcfe:	mov    rax,QWORD PTR [rdi+0x78]
  40fd02:	cmp    DWORD PTR [rax+0x18],0x0
  40fd06:	je     40fe67 <strcmp@plt+0xc6df>
  40fd0c:	mov    ebx,esi
  40fd0e:	mov    r14,rdi
  40fd11:	cmp    esi,0x4
  40fd14:	jg     40fd28 <strcmp@plt+0xc5a0>
  40fd16:	lea    rsi,[rip+0x35412]        # 44512f <strcmp@plt+0x419a7>
  40fd1d:	xor    eax,eax
  40fd1f:	mov    edi,ebx
  40fd21:	call   42e800 <strcmp@plt+0x2b078>
  40fd26:	jmp    40fd57 <strcmp@plt+0xc5cf>
  40fd28:	lea    rbp,[rip+0x55081]        # 464db0 <strcmp@plt+0x61628>
  40fd2f:	mov    eax,DWORD PTR [rbp+0x0]
  40fd32:	add    eax,0x4
  40fd35:	cmp    eax,ebx
  40fd37:	jl     40fe67 <strcmp@plt+0xc6df>
  40fd3d:	lea    rsi,[rip+0x353eb]        # 44512f <strcmp@plt+0x419a7>
  40fd44:	xor    eax,eax
  40fd46:	mov    edi,ebx
  40fd48:	call   42e800 <strcmp@plt+0x2b078>
  40fd4d:	mov    eax,DWORD PTR [rbp+0x0]
  40fd50:	add    eax,0x4
  40fd53:	cmp    eax,ebx
  40fd55:	jl     40fd67 <strcmp@plt+0xc5df>
  40fd57:	lea    rsi,[rip+0x35417]        # 445175 <strcmp@plt+0x419ed>
  40fd5e:	xor    eax,eax
  40fd60:	mov    edi,ebx
  40fd62:	call   42e800 <strcmp@plt+0x2b078>
  40fd67:	mov    rax,QWORD PTR [r14+0x78]
  40fd6b:	mov    r13,QWORD PTR [rax+0x8]
  40fd6f:	cmp    r13,rax
  40fd72:	je     40fe42 <strcmp@plt+0xc6ba>
  40fd78:	lea    r15,[rip+0x3543c]        # 4451bb <strcmp@plt+0x41a33>
  40fd7f:	mov    r12,rsp
  40fd82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd8c:	nop    DWORD PTR [rax+0x0]
  40fd90:	mov    rbp,QWORD PTR [r13+0x10]
  40fd94:	mov    rdi,QWORD PTR [rbp+0x0]
  40fd98:	call   423130 <strcmp@plt+0x1f9a8>
  40fd9d:	mov    rcx,rax
  40fda0:	mov    esi,0x50
  40fda5:	xor    eax,eax
  40fda7:	mov    rdi,r12
  40fdaa:	mov    rdx,r15
  40fdad:	call   403620 <snprintf@plt>
  40fdb2:	movzx  ebp,BYTE PTR [rbp+0x8]
  40fdb6:	mov    rdi,r12
  40fdb9:	test   bpl,bpl
  40fdbc:	je     40fde0 <strcmp@plt+0xc658>
  40fdbe:	call   4031e0 <strlen@plt>
  40fdc3:	mov    esi,0x50
  40fdc8:	sub    rsi,rax
  40fdcb:	lea    rdi,[rsp+rax*1]
  40fdcf:	xor    eax,eax
  40fdd1:	cmp    bpl,0x1
  40fdd5:	jne    40fe00 <strcmp@plt+0xc678>
  40fdd7:	lea    rdx,[rip+0x35401]        # 4451df <strcmp@plt+0x41a57>
  40fdde:	jmp    40fe07 <strcmp@plt+0xc67f>
  40fde0:	call   4031e0 <strlen@plt>
  40fde5:	lea    rdi,[rsp+rax*1]
  40fde9:	mov    esi,0x50
  40fdee:	sub    rsi,rax
  40fdf1:	xor    eax,eax
  40fdf3:	lea    rdx,[rip+0x353ca]        # 4451c4 <strcmp@plt+0x41a3c>
  40fdfa:	jmp    40fe07 <strcmp@plt+0xc67f>
  40fdfc:	nop    DWORD PTR [rax+0x0]
  40fe00:	lea    rdx,[rip+0x353f3]        # 4451fa <strcmp@plt+0x41a72>
  40fe07:	call   403620 <snprintf@plt>
  40fe0c:	cmp    ebx,0x5
  40fe0f:	jl     40fe21 <strcmp@plt+0xc699>
  40fe11:	lea    rax,[rip+0x54f98]        # 464db0 <strcmp@plt+0x61628>
  40fe18:	mov    eax,DWORD PTR [rax]
  40fe1a:	add    eax,0x4
  40fe1d:	cmp    eax,ebx
  40fe1f:	jl     40fe34 <strcmp@plt+0xc6ac>
  40fe21:	xor    eax,eax
  40fe23:	mov    edi,ebx
  40fe25:	lea    rsi,[rip+0x33889]        # 4436b5 <strcmp@plt+0x3ff2d>
  40fe2c:	mov    rdx,r12
  40fe2f:	call   42e800 <strcmp@plt+0x2b078>
  40fe34:	mov    r13,QWORD PTR [r13+0x8]
  40fe38:	cmp    r13,QWORD PTR [r14+0x78]
  40fe3c:	jne    40fd90 <strcmp@plt+0xc608>
  40fe42:	cmp    ebx,0x5
  40fe45:	jl     40fe57 <strcmp@plt+0xc6cf>
  40fe47:	lea    rax,[rip+0x54f62]        # 464db0 <strcmp@plt+0x61628>
  40fe4e:	mov    eax,DWORD PTR [rax]
  40fe50:	add    eax,0x4
  40fe53:	cmp    eax,ebx
  40fe55:	jl     40fe67 <strcmp@plt+0xc6df>
  40fe57:	lea    rsi,[rip+0x35243]        # 4450a1 <strcmp@plt+0x41919>
  40fe5e:	xor    eax,eax
  40fe60:	mov    edi,ebx
  40fe62:	call   42e800 <strcmp@plt+0x2b078>
  40fe67:	add    rsp,0x58
  40fe6b:	pop    rbx
  40fe6c:	pop    r12
  40fe6e:	pop    r13
  40fe70:	pop    r14
  40fe72:	pop    r15
  40fe74:	pop    rbp
  40fe75:	ret    
  40fe76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fe80:	push   rbp
  40fe81:	push   r15
  40fe83:	push   r14
  40fe85:	push   r12
  40fe87:	push   rbx
  40fe88:	mov    r14d,ecx
  40fe8b:	mov    r15,rdx
  40fe8e:	mov    r12d,esi
  40fe91:	mov    rbp,rdi
  40fe94:	mov    edi,0x20
  40fe99:	call   432070 <strcmp@plt+0x2e8e8>
  40fe9e:	test   rax,rax
  40fea1:	je     40fec7 <strcmp@plt+0xc73f>
  40fea3:	mov    rbx,rax
  40fea6:	mov    rdi,rbp
  40fea9:	call   423740 <strcmp@plt+0x1ffb8>
  40feae:	mov    QWORD PTR [rbx],rax
  40feb1:	mov    BYTE PTR [rbx+0x8],r12b
  40feb5:	mov    rdi,r15
  40feb8:	call   403700 <strdup@plt>
  40febd:	mov    QWORD PTR [rbx+0x10],rax
  40fec1:	mov    BYTE PTR [rbx+0x18],r14b
  40fec5:	jmp    40fedc <strcmp@plt+0xc754>
  40fec7:	lea    rsi,[rip+0x35347]        # 445215 <strcmp@plt+0x41a8d>
  40fece:	xor    ebx,ebx
  40fed0:	mov    edi,0x3
  40fed5:	xor    eax,eax
  40fed7:	call   42e800 <strcmp@plt+0x2b078>
  40fedc:	mov    rax,rbx
  40fedf:	pop    rbx
  40fee0:	pop    r12
  40fee2:	pop    r14
  40fee4:	pop    r15
  40fee6:	pop    rbp
  40fee7:	ret    
  40fee8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fef0:	test   rdi,rdi
  40fef3:	je     40ff13 <strcmp@plt+0xc78b>
  40fef5:	push   rbx
  40fef6:	mov    rbx,rdi
  40fef9:	mov    rdi,QWORD PTR [rdi]
  40fefc:	call   422fa0 <strcmp@plt+0x1f818>
  40ff01:	mov    rdi,QWORD PTR [rbx+0x10]
  40ff05:	call   403780 <free@plt>
  40ff0a:	mov    rdi,rbx
  40ff0d:	pop    rbx
  40ff0e:	jmp    403780 <free@plt>
  40ff13:	ret    
  40ff14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ff1e:	xchg   ax,ax
  40ff20:	mov    edi,0xa8
  40ff25:	jmp    432070 <strcmp@plt+0x2e8e8>
  40ff2a:	nop    WORD PTR [rax+rax*1+0x0]
  40ff30:	push   rbp
  40ff31:	push   r15
  40ff33:	push   r14
  40ff35:	push   r13
  40ff37:	push   r12
  40ff39:	push   rbx
  40ff3a:	sub    rsp,0x88
  40ff41:	mov    r14,rdi
  40ff44:	call   437430 <strcmp@plt+0x33ca8>
  40ff49:	mov    rbp,rax
  40ff4c:	mov    rdi,r14
  40ff4f:	call   437450 <strcmp@plt+0x33cc8>
  40ff54:	mov    r15,rax
  40ff57:	mov    rdi,r14
  40ff5a:	call   437420 <strcmp@plt+0x33c98>
  40ff5f:	mov    rbx,rax
  40ff62:	mov    rdi,QWORD PTR [rbp+0x0]
  40ff66:	call   431ad0 <strcmp@plt+0x2e348>
  40ff6b:	mov    r13,rax
  40ff6e:	mov    rax,QWORD PTR [rbp+0x8]
  40ff72:	mov    QWORD PTR [rsp+0x10],rax
  40ff77:	mov    r12,QWORD PTR [rbp+0x10]
  40ff7b:	mov    rdi,r15
  40ff7e:	call   432930 <strcmp@plt+0x2f1a8>
  40ff83:	cmp    eax,DWORD PTR [rbx+0x20]
  40ff86:	jle    40fff7 <strcmp@plt+0xc86f>
  40ff88:	lea    rax,[rip+0x60619]        # 4705a8 <strcmp@plt+0x6ce20>
  40ff8f:	mov    rdi,QWORD PTR [rax]
  40ff92:	mov    rsi,r15
  40ff95:	call   4326e0 <strcmp@plt+0x2ef58>
  40ff9a:	mov    esi,0x3c
  40ff9f:	mov    rdi,r14
  40ffa2:	call   437460 <strcmp@plt+0x33cd8>
  40ffa7:	mov    rdi,r13
  40ffaa:	call   423130 <strcmp@plt+0x1f9a8>
  40ffaf:	mov    r14,rax
  40ffb2:	mov    rdi,QWORD PTR [r12]
  40ffb6:	call   423130 <strcmp@plt+0x1f9a8>
  40ffbb:	mov    r15,rax
  40ffbe:	mov    rax,QWORD PTR [rsp+0x10]
  40ffc3:	mov    rdi,QWORD PTR [rax]
  40ffc6:	call   423130 <strcmp@plt+0x1f9a8>
  40ffcb:	mov    rbp,rax
  40ffce:	lea    rsi,[rip+0x35711]        # 4456e6 <strcmp@plt+0x41f5e>
  40ffd5:	xor    ebx,ebx
  40ffd7:	mov    edi,0x3
  40ffdc:	mov    r9d,0x3c
  40ffe2:	xor    eax,eax
  40ffe4:	mov    rdx,r14
  40ffe7:	mov    rcx,r15
  40ffea:	mov    r8,rbp
  40ffed:	call   42e800 <strcmp@plt+0x2b078>
  40fff2:	jmp    41027b <strcmp@plt+0xcaf3>
  40fff7:	mov    QWORD PTR [rsp+0x20],r12
  40fffc:	xor    eax,eax
  40fffe:	call   432860 <strcmp@plt+0x2f0d8>
  410003:	mov    QWORD PTR [rsp+0x18],rax
  410008:	mov    rdi,r15
  41000b:	call   432930 <strcmp@plt+0x2f1a8>
  410010:	test   eax,eax
  410012:	mov    r12,r15
  410015:	mov    QWORD PTR [rsp+0x38],r14
  41001a:	mov    QWORD PTR [rsp+0x30],rbx
  41001f:	jle    410096 <strcmp@plt+0xc90e>
  410021:	lea    rax,[rip+0x54d88]        # 464db0 <strcmp@plt+0x61628>
  410028:	cmp    DWORD PTR [rax],0x0
  41002b:	mov    rbx,QWORD PTR [rsp+0x20]
  410030:	mov    r14,r13
  410033:	mov    rbp,QWORD PTR [rsp+0x10]
  410038:	jle    410177 <strcmp@plt+0xc9ef>
  41003e:	mov    rdi,r14
  410041:	call   423130 <strcmp@plt+0x1f9a8>
  410046:	mov    r15,rax
  410049:	mov    rdi,QWORD PTR [rbx]
  41004c:	call   423130 <strcmp@plt+0x1f9a8>
  410051:	mov    r13,rax
  410054:	mov    rdi,QWORD PTR [rbp+0x0]
  410058:	call   423130 <strcmp@plt+0x1f9a8>
  41005d:	mov    QWORD PTR [rsp+0x8],r14
  410062:	mov    r14,rax
  410065:	mov    rdi,r12
  410068:	call   432930 <strcmp@plt+0x2f1a8>
  41006d:	mov    r9d,eax
  410070:	lea    rsi,[rip+0x355ef]        # 445666 <strcmp@plt+0x41ede>
  410077:	mov    edi,0x5
  41007c:	xor    eax,eax
  41007e:	mov    rdx,r15
  410081:	mov    rcx,r13
  410084:	mov    r8,r14
  410087:	mov    r14,QWORD PTR [rsp+0x8]
  41008c:	call   42e800 <strcmp@plt+0x2b078>
  410091:	jmp    410177 <strcmp@plt+0xc9ef>
  410096:	mov    QWORD PTR [rsp+0x8],r13
  41009b:	mov    QWORD PTR [rsp+0x28],r12
  4100a0:	mov    r13,QWORD PTR [rbp+0x0]
  4100a4:	lea    rax,[rip+0x604f5]        # 4705a0 <strcmp@plt+0x6ce18>
  4100ab:	mov    rdi,QWORD PTR [rax]
  4100ae:	mov    edx,0x3
  4100b3:	mov    rsi,r13
  4100b6:	call   437940 <strcmp@plt+0x341b8>
  4100bb:	mov    rbx,rax
  4100be:	mov    r14,QWORD PTR [rax+0x8]
  4100c2:	cmp    r14,rax
  4100c5:	mov    rbp,QWORD PTR [rsp+0x10]
  4100ca:	je     410114 <strcmp@plt+0xc98c>
  4100cc:	lea    r12,[rip+0x604d5]        # 4705a8 <strcmp@plt+0x6ce20>
  4100d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4100dd:	nop    DWORD PTR [rax]
  4100e0:	mov    r15,QWORD PTR [r14+0x10]
  4100e4:	mov    rdi,r15
  4100e7:	call   437430 <strcmp@plt+0x33ca8>
  4100ec:	cmp    QWORD PTR [rax+0x10],rbp
  4100f0:	jne    41010b <strcmp@plt+0xc983>
  4100f2:	lea    rax,[rip+0x604a7]        # 4705a0 <strcmp@plt+0x6ce18>
  4100f9:	mov    rdx,QWORD PTR [rax]
  4100fc:	mov    rcx,QWORD PTR [r12]
  410100:	mov    rdi,r13
  410103:	mov    rsi,r15
  410106:	call   437620 <strcmp@plt+0x33e98>
  41010b:	mov    r14,QWORD PTR [r14+0x8]
  41010f:	cmp    r14,rbx
  410112:	jne    4100e0 <strcmp@plt+0xc958>
  410114:	mov    rdi,rbx
  410117:	call   42c250 <strcmp@plt+0x28ac8>
  41011c:	lea    rax,[rip+0x54c8d]        # 464db0 <strcmp@plt+0x61628>
  410123:	cmp    DWORD PTR [rax],0x0
  410126:	mov    r12,QWORD PTR [rsp+0x28]
  41012b:	mov    r14,QWORD PTR [rsp+0x8]
  410130:	mov    rbx,QWORD PTR [rsp+0x20]
  410135:	jle    410177 <strcmp@plt+0xc9ef>
  410137:	mov    rdi,r14
  41013a:	call   423130 <strcmp@plt+0x1f9a8>
  41013f:	mov    r15,rax
  410142:	mov    rdi,QWORD PTR [rbx]
  410145:	call   423130 <strcmp@plt+0x1f9a8>
  41014a:	mov    r14,rax
  41014d:	mov    rdi,QWORD PTR [rbp+0x0]
  410151:	call   423130 <strcmp@plt+0x1f9a8>
  410156:	mov    r8,rax
  410159:	lea    rsi,[rip+0x3554f]        # 4456af <strcmp@plt+0x41f27>
  410160:	mov    edi,0x5
  410165:	xor    eax,eax
  410167:	mov    rdx,r15
  41016a:	mov    rcx,r14
  41016d:	mov    r14,QWORD PTR [rsp+0x8]
  410172:	call   42e800 <strcmp@plt+0x2b078>
  410177:	movzx  esi,BYTE PTR [rbx+0x8]
  41017b:	mov    rdi,r14
  41017e:	call   422490 <strcmp@plt+0x1ed08>
  410183:	test   rax,rax
  410186:	je     410279 <strcmp@plt+0xcaf1>
  41018c:	mov    r15,rax
  41018f:	movzx  esi,WORD PTR [rax+0x24]
  410193:	cmp    rsi,0xffff
  41019a:	je     4101a2 <strcmp@plt+0xca1a>
  41019c:	add    rsi,QWORD PTR [r15+0x30]
  4101a0:	jmp    4101a4 <strcmp@plt+0xca1c>
  4101a2:	xor    esi,esi
  4101a4:	mov    rax,QWORD PTR [rsp+0x18]
  4101a9:	mov    QWORD PTR [rsi+0x4],rax
  4101ad:	add    rsi,0xc
  4101b1:	movzx  edx,BYTE PTR [rbx+0x8]
  4101b5:	mov    rcx,QWORD PTR [rbx+0x10]
  4101b9:	mov    rdi,r15
  4101bc:	call   4229c0 <strcmp@plt+0x1f238>
  4101c1:	cmp    eax,0x1
  4101c4:	jne    410279 <strcmp@plt+0xcaf1>
  4101ca:	mov    rbp,QWORD PTR [rbp+0x0]
  4101ce:	mov    rbx,QWORD PTR [rbx]
  4101d1:	lea    rax,[rip+0x54bd8]        # 464db0 <strcmp@plt+0x61628>
  4101d8:	cmp    DWORD PTR [rax],0x0
  4101db:	jle    410217 <strcmp@plt+0xca8f>
  4101dd:	mov    rdi,r15
  4101e0:	call   422870 <strcmp@plt+0x1f0e8>
  4101e5:	mov    rdi,r14
  4101e8:	mov    r14,rax
  4101eb:	call   423130 <strcmp@plt+0x1f9a8>
  4101f0:	mov    r13,rax
  4101f3:	mov    rdi,rbx
  4101f6:	call   423130 <strcmp@plt+0x1f9a8>
  4101fb:	mov    r8,rax
  4101fe:	lea    rsi,[rip+0x35538]        # 44573d <strcmp@plt+0x41fb5>
  410205:	mov    edi,0x5
  41020a:	xor    eax,eax
  41020c:	mov    rdx,r14
  41020f:	mov    rcx,r13
  410212:	call   42e800 <strcmp@plt+0x2b078>
  410217:	lea    r14,[rsp+0x40]
  41021c:	mov    esi,0x10f6
  410221:	mov    edx,0x10f6
  410226:	mov    rdi,r14
  410229:	mov    rcx,rbp
  41022c:	mov    r8,rbx
  41022f:	call   435600 <strcmp@plt+0x31e78>
  410234:	mov    rdi,QWORD PTR [rsp+0x30]
  410239:	mov    rsi,r15
  41023c:	mov    rdx,r14
  41023f:	call   407ab0 <strcmp@plt+0x4328>
  410244:	mov    rdi,r15
  410247:	call   42e010 <strcmp@plt+0x2a888>
  41024c:	lea    rax,[rip+0x60355]        # 4705a8 <strcmp@plt+0x6ce20>
  410253:	mov    rdi,QWORD PTR [rax]
  410256:	mov    rsi,QWORD PTR [rsp+0x18]
  41025b:	mov    rdx,r12
  41025e:	call   432280 <strcmp@plt+0x2eaf8>
  410263:	mov    esi,0x3
  410268:	mov    rdi,QWORD PTR [rsp+0x38]
  41026d:	call   437460 <strcmp@plt+0x33cd8>
  410272:	mov    ebx,0x1
  410277:	jmp    41027b <strcmp@plt+0xcaf3>
  410279:	xor    ebx,ebx
  41027b:	mov    eax,ebx
  41027d:	add    rsp,0x88
  410284:	pop    rbx
  410285:	pop    r12
  410287:	pop    r13
  410289:	pop    r14
  41028b:	pop    r15
  41028d:	pop    rbp
  41028e:	ret    
  41028f:	nop
  410290:	jmp    403780 <free@plt>
  410295:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41029f:	nop
  4102a0:	push   rbp
  4102a1:	push   r15
  4102a3:	push   r14
  4102a5:	push   r13
  4102a7:	push   r12
  4102a9:	push   rbx
  4102aa:	sub    rsp,0x18
  4102ae:	call   437430 <strcmp@plt+0x33ca8>
  4102b3:	mov    r12,rax
  4102b6:	lea    rax,[rip+0x54af3]        # 464db0 <strcmp@plt+0x61628>
  4102bd:	cmp    DWORD PTR [rax],0x0
  4102c0:	jle    4102d5 <strcmp@plt+0xcb4d>
  4102c2:	lea    rsi,[rip+0x354a7]        # 445770 <strcmp@plt+0x41fe8>
  4102c9:	mov    edi,0x5
  4102ce:	xor    eax,eax
  4102d0:	call   42e800 <strcmp@plt+0x2b078>
  4102d5:	call   42bbd0 <strcmp@plt+0x28448>
  4102da:	mov    r14,rax
  4102dd:	mov    rdi,QWORD PTR [r12+0x50]
  4102e2:	call   4369b0 <strcmp@plt+0x33228>
  4102e7:	mov    rcx,QWORD PTR [rax+0x8]
  4102eb:	mov    QWORD PTR [rsp+0x8],rax
  4102f0:	cmp    rcx,rax
  4102f3:	je     410414 <strcmp@plt+0xcc8c>
  4102f9:	xor    r13d,r13d
  4102fc:	xor    r15d,r15d
  4102ff:	nop
  410300:	mov    rbx,QWORD PTR [rcx+0x10]
  410304:	cmp    BYTE PTR [rbx+0x20],0x1
  410308:	mov    QWORD PTR [rsp+0x10],rcx
  41030d:	jne    410320 <strcmp@plt+0xcb98>
  41030f:	mov    r15,QWORD PTR [rbx+0x10]
  410313:	mov    r13,QWORD PTR [rbx+0x18]
  410317:	mov    rdi,QWORD PTR [rbx+0x28]
  41031b:	jmp    410338 <strcmp@plt+0xcbb0>
  41031d:	nop    DWORD PTR [rax]
  410320:	mov    rdi,QWORD PTR [rbx+0x28]
  410324:	test   rdi,rdi
  410327:	je     41032d <strcmp@plt+0xcba5>
  410329:	mov    r15,QWORD PTR [rbx+0x10]
  41032d:	cmp    QWORD PTR [rbx+0x30],0x0
  410332:	je     410338 <strcmp@plt+0xcbb0>
  410334:	mov    r13,QWORD PTR [rbx+0x18]
  410338:	mov    BYTE PTR [rbx+0x20],0x0
  41033c:	call   422fa0 <strcmp@plt+0x1f818>
  410341:	mov    rdi,QWORD PTR [rbx+0x30]
  410345:	call   422fa0 <strcmp@plt+0x1f818>
  41034a:	vxorps xmm0,xmm0,xmm0
  41034e:	vmovups XMMWORD PTR [rbx+0x28],xmm0
  410353:	test   r15,r15
  410356:	je     4103b0 <strcmp@plt+0xcc28>
  410358:	mov    rbp,QWORD PTR [r15+0x8]
  41035c:	cmp    rbp,r15
  41035f:	jne    410379 <strcmp@plt+0xcbf1>
  410361:	jmp    4103b0 <strcmp@plt+0xcc28>
  410363:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41036d:	nop    DWORD PTR [rax]
  410370:	mov    rbp,QWORD PTR [rbp+0x8]
  410374:	cmp    rbp,r15
  410377:	je     4103b0 <strcmp@plt+0xcc28>
  410379:	mov    rsi,QWORD PTR [rbp+0x10]
  41037d:	mov    rdi,QWORD PTR [r12+0x70]
  410382:	call   40e9d0 <strcmp@plt+0xb248>
  410387:	test   rax,rax
  41038a:	je     410370 <strcmp@plt+0xcbe8>
  41038c:	mov    rbx,rax
  41038f:	mov    rdi,rax
  410392:	mov    rsi,r14
  410395:	call   42be80 <strcmp@plt+0x286f8>
  41039a:	test   al,al
  41039c:	jne    410370 <strcmp@plt+0xcbe8>
  41039e:	mov    rdi,rbx
  4103a1:	mov    rsi,r14
  4103a4:	call   42bcf0 <strcmp@plt+0x28568>
  4103a9:	jmp    410370 <strcmp@plt+0xcbe8>
  4103ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4103b0:	test   r13,r13
  4103b3:	je     410400 <strcmp@plt+0xcc78>
  4103b5:	mov    rbp,QWORD PTR [r13+0x8]
  4103b9:	cmp    rbp,r13
  4103bc:	jne    4103c9 <strcmp@plt+0xcc41>
  4103be:	jmp    410400 <strcmp@plt+0xcc78>
  4103c0:	mov    rbp,QWORD PTR [rbp+0x8]
  4103c4:	cmp    rbp,r13
  4103c7:	je     410400 <strcmp@plt+0xcc78>
  4103c9:	mov    rsi,QWORD PTR [rbp+0x10]
  4103cd:	mov    rdi,QWORD PTR [r12+0x70]
  4103d2:	call   40e9d0 <strcmp@plt+0xb248>
  4103d7:	test   rax,rax
  4103da:	je     4103c0 <strcmp@plt+0xcc38>
  4103dc:	mov    rbx,rax
  4103df:	mov    rdi,rax
  4103e2:	mov    rsi,r14
  4103e5:	call   42be80 <strcmp@plt+0x286f8>
  4103ea:	test   al,al
  4103ec:	jne    4103c0 <strcmp@plt+0xcc38>
  4103ee:	mov    rdi,rbx
  4103f1:	mov    rsi,r14
  4103f4:	call   42bcf0 <strcmp@plt+0x28568>
  4103f9:	jmp    4103c0 <strcmp@plt+0xcc38>
  4103fb:	nop    DWORD PTR [rax+rax*1+0x0]
  410400:	mov    rcx,QWORD PTR [rsp+0x10]
  410405:	mov    rcx,QWORD PTR [rcx+0x8]
  410409:	cmp    rcx,QWORD PTR [rsp+0x8]
  41040e:	jne    410300 <strcmp@plt+0xcb78>
  410414:	mov    rdi,QWORD PTR [rsp+0x8]
  410419:	call   42c250 <strcmp@plt+0x28ac8>
  41041e:	mov    rbx,QWORD PTR [r14+0x8]
  410422:	cmp    rbx,r14
  410425:	je     410445 <strcmp@plt+0xccbd>
  410427:	nop    WORD PTR [rax+rax*1+0x0]
  410430:	mov    rsi,QWORD PTR [rbx+0x10]
  410434:	mov    rdi,r12
  410437:	call   40f5d0 <strcmp@plt+0xbe48>
  41043c:	mov    rbx,QWORD PTR [rbx+0x8]
  410440:	cmp    rbx,r14
  410443:	jne    410430 <strcmp@plt+0xcca8>
  410445:	mov    rdi,r14
  410448:	call   42c250 <strcmp@plt+0x28ac8>
  41044d:	lea    rax,[rip+0x5495c]        # 464db0 <strcmp@plt+0x61628>
  410454:	cmp    DWORD PTR [rax],0x2
  410457:	jl     41046c <strcmp@plt+0xcce4>
  410459:	lea    rsi,[rip+0x35355]        # 4457b5 <strcmp@plt+0x4202d>
  410460:	mov    edi,0x6
  410465:	xor    eax,eax
  410467:	call   42e800 <strcmp@plt+0x2b078>
  41046c:	mov    eax,0x1
  410471:	add    rsp,0x18
  410475:	pop    rbx
  410476:	pop    r12
  410478:	pop    r13
  41047a:	pop    r14
  41047c:	pop    r15
  41047e:	pop    rbp
  41047f:	ret    
  410480:	push   rbp
  410481:	push   r15
  410483:	push   r14
  410485:	push   r13
  410487:	push   r12
  410489:	push   rbx
  41048a:	sub    rsp,0x848
  410491:	mov    r15,rdi
  410494:	mov    rdi,QWORD PTR [rdi+0x30]
  410498:	call   4088a0 <strcmp@plt+0x5118>
  41049d:	mov    QWORD PTR [rsp+0x18],rax
  4104a2:	mov    r13,QWORD PTR [rax+0x8]
  4104a6:	mov    rdi,r13
  4104a9:	call   4294b0 <strcmp@plt+0x25d28>
  4104ae:	call   42bbd0 <strcmp@plt+0x28448>
  4104b3:	mov    rbx,rax
  4104b6:	mov    rax,QWORD PTR [r15+0x70]
  4104ba:	mov    rax,QWORD PTR [rax]
  4104bd:	mov    rdi,QWORD PTR [rax]
  4104c0:	mov    rsi,rbx
  4104c3:	call   42bcf0 <strcmp@plt+0x28568>
  4104c8:	mov    rax,QWORD PTR [r15+0x70]
  4104cc:	mov    rax,QWORD PTR [rax]
  4104cf:	mov    rdi,QWORD PTR [rax+0x8]
  4104d3:	mov    QWORD PTR [rsp+0x8],rbx
  4104d8:	mov    rsi,rbx
  4104db:	call   42bcf0 <strcmp@plt+0x28568>
  4104e0:	mov    rax,QWORD PTR [r15+0x70]
  4104e4:	mov    rcx,QWORD PTR [rax]
  4104e7:	mov    rdx,QWORD PTR [rcx+0x10]
  4104eb:	mov    rdx,QWORD PTR [rdx]
  4104ee:	cmp    DWORD PTR [rdx],0x0
  4104f1:	je     410545 <strcmp@plt+0xcdbd>
  4104f3:	xor    ebx,ebx
  4104f5:	mov    r14d,0x3
  4104fb:	xor    ebp,ebp
  4104fd:	nop    DWORD PTR [rax]
  410500:	mov    rcx,QWORD PTR [rdx+0x10]
  410504:	mov    esi,ebp
  410506:	shr    esi,0x4
  410509:	mov    edi,ebx
  41050b:	and    dil,0x1e
  41050f:	shlx   edi,r14d,edi
  410514:	test   DWORD PTR [rcx+rsi*4],edi
  410517:	jne    410531 <strcmp@plt+0xcda9>
  410519:	mov    rax,QWORD PTR [rdx+0x20]
  41051d:	mov    ecx,ebp
  41051f:	mov    rdi,QWORD PTR [rax+rcx*8]
  410523:	mov    rsi,QWORD PTR [rsp+0x8]
  410528:	call   42bcf0 <strcmp@plt+0x28568>
  41052d:	mov    rax,QWORD PTR [r15+0x70]
  410531:	add    ebp,0x1
  410534:	mov    rcx,QWORD PTR [rax]
  410537:	mov    rdx,QWORD PTR [rcx+0x10]
  41053b:	mov    rdx,QWORD PTR [rdx]
  41053e:	add    ebx,0x2
  410541:	cmp    ebp,DWORD PTR [rdx]
  410543:	jne    410500 <strcmp@plt+0xcd78>
  410545:	mov    rdx,QWORD PTR [rcx+0x18]
  410549:	mov    rdx,QWORD PTR [rdx]
  41054c:	cmp    DWORD PTR [rdx],0x0
  41054f:	je     4105a5 <strcmp@plt+0xce1d>
  410551:	xor    ebx,ebx
  410553:	mov    r14d,0x3
  410559:	xor    ebp,ebp
  41055b:	nop    DWORD PTR [rax+rax*1+0x0]
  410560:	mov    rcx,QWORD PTR [rdx+0x10]
  410564:	mov    esi,ebp
  410566:	shr    esi,0x4
  410569:	mov    edi,ebx
  41056b:	and    dil,0x1e
  41056f:	shlx   edi,r14d,edi
  410574:	test   DWORD PTR [rcx+rsi*4],edi
  410577:	jne    410591 <strcmp@plt+0xce09>
  410579:	mov    rax,QWORD PTR [rdx+0x20]
  41057d:	mov    ecx,ebp
  41057f:	mov    rdi,QWORD PTR [rax+rcx*8]
  410583:	mov    rsi,QWORD PTR [rsp+0x8]
  410588:	call   42bcf0 <strcmp@plt+0x28568>
  41058d:	mov    rax,QWORD PTR [r15+0x70]
  410591:	add    ebp,0x1
  410594:	mov    rcx,QWORD PTR [rax]
  410597:	mov    rdx,QWORD PTR [rcx+0x18]
  41059b:	mov    rdx,QWORD PTR [rdx]
  41059e:	add    ebx,0x2
  4105a1:	cmp    ebp,DWORD PTR [rdx]
  4105a3:	jne    410560 <strcmp@plt+0xcdd8>
  4105a5:	mov    rdi,QWORD PTR [rcx+0x20]
  4105a9:	mov    rbx,QWORD PTR [rsp+0x8]
  4105ae:	mov    rsi,rbx
  4105b1:	call   42bcf0 <strcmp@plt+0x28568>
  4105b6:	mov    QWORD PTR [rsp+0x20],r15
  4105bb:	mov    rax,QWORD PTR [r15+0x70]
  4105bf:	mov    rax,QWORD PTR [rax]
  4105c2:	mov    rdi,QWORD PTR [rax+0x20]
  4105c6:	mov    rsi,rbx
  4105c9:	call   42bcf0 <strcmp@plt+0x28568>
  4105ce:	mov    rax,QWORD PTR [rbx+0x8]
  4105d2:	cmp    rax,rbx
  4105d5:	je     410770 <strcmp@plt+0xcfe8>
  4105db:	nop    DWORD PTR [rax+rax*1+0x0]
  4105e0:	mov    QWORD PTR [rsp+0x28],rax
  4105e5:	mov    rax,QWORD PTR [rax+0x10]
  4105e9:	mov    r15,QWORD PTR [rax]
  4105ec:	test   r15,r15
  4105ef:	je     41075c <strcmp@plt+0xcfd4>
  4105f5:	xor    eax,eax
  4105f7:	mov    QWORD PTR [rsp+0x10],rax
  4105fc:	nop    DWORD PTR [rax+0x0]
  410600:	cmp    QWORD PTR [r15+0x8],0x0
  410605:	je     4106ec <strcmp@plt+0xcf64>
  41060b:	mov    rax,QWORD PTR [r15+0x28]
  41060f:	mov    rbp,QWORD PTR [rax]
  410612:	test   rbp,rbp
  410615:	je     4106ec <strcmp@plt+0xcf64>
  41061b:	xor    r12d,r12d
  41061e:	xchg   ax,ax
  410620:	cmp    QWORD PTR [rbp+0x8],0x0
  410625:	je     410698 <strcmp@plt+0xcf10>
  410627:	mov    rdi,QWORD PTR [rbp+0x28]
  41062b:	test   rdi,rdi
  41062e:	je     410698 <strcmp@plt+0xcf10>
  410630:	call   431f70 <strcmp@plt+0x2e7e8>
  410635:	mov    rbx,rax
  410638:	mov    r14,QWORD PTR [rax+0x8]
  41063c:	cmp    r14,rax
  41063f:	je     410690 <strcmp@plt+0xcf08>
  410641:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41064b:	nop    DWORD PTR [rax+rax*1+0x0]
  410650:	mov    rdi,QWORD PTR [r14+0x10]
  410654:	mov    esi,0x1
  410659:	xor    edx,edx
  41065b:	mov    ecx,0x1
  410660:	mov    r8d,0x1
  410666:	mov    r9d,0x64
  41066c:	push   0x0
  41066e:	push   0xff
  410673:	call   428660 <strcmp@plt+0x24ed8>
  410678:	add    rsp,0x10
  41067c:	mov    rdi,r13
  41067f:	mov    rsi,rax
  410682:	call   4291e0 <strcmp@plt+0x25a58>
  410687:	mov    r14,QWORD PTR [r14+0x8]
  41068b:	cmp    r14,rbx
  41068e:	jne    410650 <strcmp@plt+0xcec8>
  410690:	mov    rdi,rbx
  410693:	call   42c250 <strcmp@plt+0x28ac8>
  410698:	mov    rax,QWORD PTR [rbp+0x10]
  41069c:	mov    rcx,QWORD PTR [rbp+0x18]
  4106a0:	test   rax,rax
  4106a3:	je     4106c0 <strcmp@plt+0xcf38>
  4106a5:	test   rcx,rcx
  4106a8:	je     4106e0 <strcmp@plt+0xcf58>
  4106aa:	mov    QWORD PTR [rsp+r12*8+0x30],rcx
  4106af:	add    r12,0x1
  4106b3:	jmp    4106e0 <strcmp@plt+0xcf58>
  4106b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4106bf:	nop
  4106c0:	test   rcx,rcx
  4106c3:	je     4106ca <strcmp@plt+0xcf42>
  4106c5:	mov    rax,rcx
  4106c8:	jmp    4106e0 <strcmp@plt+0xcf58>
  4106ca:	test   r12,r12
  4106cd:	je     4106ec <strcmp@plt+0xcf64>
  4106cf:	mov    rax,QWORD PTR [rsp+r12*8+0x28]
  4106d4:	add    r12,0xffffffffffffffff
  4106d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4106e0:	mov    rbp,rax
  4106e3:	test   rax,rax
  4106e6:	jne    410620 <strcmp@plt+0xce98>
  4106ec:	mov    rax,QWORD PTR [r15+0x10]
  4106f0:	mov    rcx,QWORD PTR [r15+0x18]
  4106f4:	test   rax,rax
  4106f7:	je     410720 <strcmp@plt+0xcf98>
  4106f9:	test   rcx,rcx
  4106fc:	je     410750 <strcmp@plt+0xcfc8>
  4106fe:	mov    rdx,QWORD PTR [rsp+0x10]
  410703:	mov    QWORD PTR [rsp+rdx*8+0x440],rcx
  41070b:	add    rdx,0x1
  41070f:	mov    QWORD PTR [rsp+0x10],rdx
  410714:	jmp    410750 <strcmp@plt+0xcfc8>
  410716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410720:	test   rcx,rcx
  410723:	je     41072a <strcmp@plt+0xcfa2>
  410725:	mov    rax,rcx
  410728:	jmp    410750 <strcmp@plt+0xcfc8>
  41072a:	cmp    QWORD PTR [rsp+0x10],0x0
  410730:	je     41075c <strcmp@plt+0xcfd4>
  410732:	mov    rcx,QWORD PTR [rsp+0x10]
  410737:	mov    rax,QWORD PTR [rsp+rcx*8+0x438]
  41073f:	add    rcx,0xffffffffffffffff
  410743:	mov    QWORD PTR [rsp+0x10],rcx
  410748:	nop    DWORD PTR [rax+rax*1+0x0]
  410750:	mov    r15,rax
  410753:	test   rax,rax
  410756:	jne    410600 <strcmp@plt+0xce78>
  41075c:	mov    rax,QWORD PTR [rsp+0x28]
  410761:	mov    rax,QWORD PTR [rax+0x8]
  410765:	cmp    rax,QWORD PTR [rsp+0x8]
  41076a:	jne    4105e0 <strcmp@plt+0xce58>
  410770:	mov    rdi,QWORD PTR [rsp+0x8]
  410775:	call   42c250 <strcmp@plt+0x28ac8>
  41077a:	mov    rbx,QWORD PTR [rsp+0x20]
  41077f:	mov    rax,QWORD PTR [rbx+0x38]
  410783:	mov    rdi,QWORD PTR [rbx+0x40]
  410787:	mov    rsi,QWORD PTR [rsp+0x18]
  41078c:	call   QWORD PTR [rax+0x38]
  41078f:	mov    rdi,rbx
  410792:	add    rsp,0x848
  410799:	pop    rbx
  41079a:	pop    r12
  41079c:	pop    r13
  41079e:	pop    r14
  4107a0:	pop    r15
  4107a2:	pop    rbp
  4107a3:	jmp    407ad0 <strcmp@plt+0x4348>
  4107a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4107b0:	push   rbp
  4107b1:	push   r15
  4107b3:	push   r14
  4107b5:	push   r13
  4107b7:	push   r12
  4107b9:	push   rbx
  4107ba:	sub    rsp,0x98
  4107c1:	mov    r12,rdi
  4107c4:	call   437430 <strcmp@plt+0x33ca8>
  4107c9:	mov    rbp,rax
  4107cc:	mov    rdi,r12
  4107cf:	call   437450 <strcmp@plt+0x33cc8>
  4107d4:	mov    rbx,rax
  4107d7:	mov    rdi,r12
  4107da:	call   437420 <strcmp@plt+0x33c98>
  4107df:	mov    r13,rax
  4107e2:	mov    rdi,QWORD PTR [rbp+0x0]
  4107e6:	call   431ad0 <strcmp@plt+0x2e348>
  4107eb:	mov    r14,rax
  4107ee:	mov    r15,QWORD PTR [rbp+0x8]
  4107f2:	mov    rax,QWORD PTR [rbp+0x10]
  4107f6:	mov    rax,QWORD PTR [rax]
  4107f9:	mov    QWORD PTR [rsp+0x8],rax
  4107fe:	mov    rbp,QWORD PTR [rbp+0x18]
  410802:	mov    rdi,rbx
  410805:	call   432930 <strcmp@plt+0x2f1a8>
  41080a:	cmp    eax,DWORD PTR [r13+0x28]
  41080e:	jle    4108a4 <strcmp@plt+0xd11c>
  410814:	mov    r13,QWORD PTR [rsp+0x8]
  410819:	lea    rax,[rip+0x5fd88]        # 4705a8 <strcmp@plt+0x6ce20>
  410820:	mov    rdi,QWORD PTR [rax]
  410823:	mov    rsi,rbx
  410826:	call   4326e0 <strcmp@plt+0x2ef58>
  41082b:	mov    esi,0x3c
  410830:	mov    rdi,r12
  410833:	call   437460 <strcmp@plt+0x33cd8>
  410838:	lea    rax,[rip+0x54571]        # 464db0 <strcmp@plt+0x61628>
  41083f:	cmp    DWORD PTR [rax],0x0
  410842:	jle    410af4 <strcmp@plt+0xd36c>
  410848:	mov    rdi,r14
  41084b:	call   423130 <strcmp@plt+0x1f9a8>
  410850:	mov    rbx,r13
  410853:	mov    r13,rax
  410856:	mov    rdi,QWORD PTR [r15]
  410859:	call   423130 <strcmp@plt+0x1f9a8>
  41085e:	mov    r15,rax
  410861:	mov    rdi,rbx
  410864:	call   423130 <strcmp@plt+0x1f9a8>
  410869:	mov    r12,rax
  41086c:	mov    rdi,rbp
  41086f:	call   423130 <strcmp@plt+0x1f9a8>
  410874:	mov    rbp,rax
  410877:	mov    DWORD PTR [rsp],0x3c
  41087e:	lea    rsi,[rip+0x353ed]        # 445c72 <strcmp@plt+0x424ea>
  410885:	xor    ebx,ebx
  410887:	mov    edi,0x5
  41088c:	xor    eax,eax
  41088e:	mov    rdx,r13
  410891:	mov    rcx,r15
  410894:	mov    r8,r12
  410897:	mov    r9,rbp
  41089a:	call   42e800 <strcmp@plt+0x2b078>
  41089f:	jmp    410b9d <strcmp@plt+0xd415>
  4108a4:	mov    QWORD PTR [rsp+0x20],rbp
  4108a9:	mov    QWORD PTR [rsp+0x10],rbx
  4108ae:	xor    ebp,ebp
  4108b0:	xor    eax,eax
  4108b2:	call   432860 <strcmp@plt+0x2f0d8>
  4108b7:	mov    rbx,rax
  4108ba:	mov    QWORD PTR [rsp+0x28],r15
  4108bf:	movzx  esi,BYTE PTR [r15+0x8]
  4108c4:	mov    rdi,r14
  4108c7:	call   4227c0 <strcmp@plt+0x1f038>
  4108cc:	mov    r15,rax
  4108cf:	lea    rsi,[r13+0x90]
  4108d6:	lea    rdx,[r13+0x88]
  4108dd:	mov    rdi,rax
  4108e0:	call   421fe0 <strcmp@plt+0x1e858>
  4108e5:	movzx  eax,WORD PTR [r15+0x24]
  4108ea:	cmp    rax,0xffff
  4108f0:	mov    rcx,r14
  4108f3:	mov    QWORD PTR [rsp+0x18],r14
  4108f8:	mov    QWORD PTR [rsp+0x48],r13
  4108fd:	je     410906 <strcmp@plt+0xd17e>
  4108ff:	add    rax,QWORD PTR [r15+0x30]
  410903:	mov    rbp,rax
  410906:	mov    r14,rbx
  410909:	mov    QWORD PTR [rbp+0x4],rbx
  41090d:	or     BYTE PTR [rbp+0x0],0xb
  410911:	mov    rbx,QWORD PTR [rsp+0x28]
  410916:	mov    rdi,QWORD PTR [rbx]
  410919:	call   423200 <strcmp@plt+0x1fa78>
  41091e:	mov    r13d,eax
  410921:	mov    rdi,QWORD PTR [rsp+0x8]
  410926:	call   423200 <strcmp@plt+0x1fa78>
  41092b:	cmp    r13w,ax
  41092f:	jne    410aaa <strcmp@plt+0xd322>
  410935:	add    rbp,0xc
  410939:	movzx  edx,BYTE PTR [rbx+0x8]
  41093d:	mov    rcx,QWORD PTR [rbx+0x10]
  410941:	mov    rdi,r15
  410944:	mov    rsi,rbp
  410947:	call   4229c0 <strcmp@plt+0x1f238>
  41094c:	cmp    eax,0x1
  41094f:	jne    410ae8 <strcmp@plt+0xd360>
  410955:	mov    QWORD PTR [rsp+0x38],r12
  41095a:	mov    QWORD PTR [rsp+0x40],r14
  41095f:	mov    r8,QWORD PTR [rbx]
  410962:	mov    esi,0x10f6
  410967:	mov    edx,0x10f6
  41096c:	mov    rdi,r15
  41096f:	mov    r13,QWORD PTR [rsp+0x8]
  410974:	mov    rcx,r13
  410977:	call   422020 <strcmp@plt+0x1e898>
  41097c:	movzx  eax,WORD PTR [r15+0x1e]
  410981:	mov    rcx,QWORD PTR [r15+0x30]
  410985:	or     WORD PTR [rcx+rax*1],0x4000
  41098b:	lea    rbp,[rip+0x5441e]        # 464db0 <strcmp@plt+0x61628>
  410992:	cmp    DWORD PTR [rbp+0x0],0x0
  410996:	mov    r14,QWORD PTR [rsp+0x20]
  41099b:	jle    410a05 <strcmp@plt+0xd27d>
  41099d:	mov    rdi,r15
  4109a0:	call   422870 <strcmp@plt+0x1f0e8>
  4109a5:	mov    QWORD PTR [rsp+0x30],rax
  4109aa:	mov    rdi,r13
  4109ad:	call   423130 <strcmp@plt+0x1f9a8>
  4109b2:	mov    r13,rax
  4109b5:	mov    rdi,QWORD PTR [rbx]
  4109b8:	call   423130 <strcmp@plt+0x1f9a8>
  4109bd:	mov    rbx,rax
  4109c0:	mov    rdi,QWORD PTR [rsp+0x18]
  4109c5:	call   423130 <strcmp@plt+0x1f9a8>
  4109ca:	mov    r12,rbp
  4109cd:	mov    rbp,rax
  4109d0:	mov    rdi,r14
  4109d3:	call   423130 <strcmp@plt+0x1f9a8>
  4109d8:	mov    QWORD PTR [rsp],rax
  4109dc:	lea    rsi,[rip+0x3539b]        # 445d7e <strcmp@plt+0x425f6>
  4109e3:	mov    edi,0x5
  4109e8:	xor    eax,eax
  4109ea:	mov    rdx,QWORD PTR [rsp+0x30]
  4109ef:	mov    rcx,r13
  4109f2:	mov    r8,rbx
  4109f5:	mov    r13,QWORD PTR [rsp+0x8]
  4109fa:	mov    r9,rbp
  4109fd:	mov    rbp,r12
  410a00:	call   42e800 <strcmp@plt+0x2b078>
  410a05:	mov    rbx,QWORD PTR [rsp+0x48]
  410a0a:	movzx  esi,WORD PTR [rbx+0x5c]
  410a0e:	lea    r12,[rsp+0x50]
  410a13:	mov    edx,0x10f6
  410a18:	mov    rdi,r12
  410a1b:	mov    rcx,r13
  410a1e:	mov    r8,r14
  410a21:	call   435600 <strcmp@plt+0x31e78>
  410a26:	mov    rdi,rbx
  410a29:	mov    rsi,r15
  410a2c:	mov    rdx,r12
  410a2f:	call   407ab0 <strcmp@plt+0x4328>
  410a34:	mov    rdi,r15
  410a37:	call   42e010 <strcmp@plt+0x2a888>
  410a3c:	mov    rbx,QWORD PTR [rsp+0x10]
  410a41:	mov    rdi,rbx
  410a44:	call   432930 <strcmp@plt+0x2f1a8>
  410a49:	mov    ecx,DWORD PTR [rbp+0x0]
  410a4c:	test   eax,eax
  410a4e:	jle    410b15 <strcmp@plt+0xd38d>
  410a54:	test   ecx,ecx
  410a56:	jle    410b72 <strcmp@plt+0xd3ea>
  410a5c:	mov    rdi,QWORD PTR [rsp+0x18]
  410a61:	call   423130 <strcmp@plt+0x1f9a8>
  410a66:	mov    r15,rax
  410a69:	mov    rax,QWORD PTR [rsp+0x28]
  410a6e:	mov    rdi,QWORD PTR [rax]
  410a71:	call   423130 <strcmp@plt+0x1f9a8>
  410a76:	mov    r12,rax
  410a79:	mov    rdi,r13
  410a7c:	call   423130 <strcmp@plt+0x1f9a8>
  410a81:	mov    r13,rax
  410a84:	mov    rdi,QWORD PTR [rsp+0x20]
  410a89:	call   423130 <strcmp@plt+0x1f9a8>
  410a8e:	mov    rbp,rax
  410a91:	mov    rdi,QWORD PTR [rsp+0x10]
  410a96:	call   432930 <strcmp@plt+0x2f1a8>
  410a9b:	mov    DWORD PTR [rsp],eax
  410a9e:	lea    rsi,[rip+0x35123]        # 445bc8 <strcmp@plt+0x42440>
  410aa5:	jmp    410b55 <strcmp@plt+0xd3cd>
  410aaa:	lea    rax,[rip+0x542ff]        # 464db0 <strcmp@plt+0x61628>
  410ab1:	cmp    DWORD PTR [rax],0x0
  410ab4:	jle    410ad9 <strcmp@plt+0xd351>
  410ab6:	mov    rdi,QWORD PTR [rsp+0x8]
  410abb:	call   423130 <strcmp@plt+0x1f9a8>
  410ac0:	mov    rcx,rax
  410ac3:	lea    rsi,[rip+0x3521a]        # 445ce4 <strcmp@plt+0x4255c>
  410aca:	mov    edi,0x5
  410acf:	xor    eax,eax
  410ad1:	mov    rdx,rcx
  410ad4:	call   42e800 <strcmp@plt+0x2b078>
  410ad9:	test   r15,r15
  410adc:	je     410af4 <strcmp@plt+0xd36c>
  410ade:	mov    rdi,r15
  410ae1:	call   42e010 <strcmp@plt+0x2a888>
  410ae6:	jmp    410af4 <strcmp@plt+0xd36c>
  410ae8:	lea    rax,[rip+0x542c1]        # 464db0 <strcmp@plt+0x61628>
  410aef:	cmp    DWORD PTR [rax],0x2
  410af2:	jge    410afb <strcmp@plt+0xd373>
  410af4:	xor    ebx,ebx
  410af6:	jmp    410b9d <strcmp@plt+0xd415>
  410afb:	lea    rsi,[rip+0x3523a]        # 445d3c <strcmp@plt+0x425b4>
  410b02:	mov    edi,0x6
  410b07:	xor    eax,eax
  410b09:	call   42e800 <strcmp@plt+0x2b078>
  410b0e:	xor    ebx,ebx
  410b10:	jmp    410b9d <strcmp@plt+0xd415>
  410b15:	test   ecx,ecx
  410b17:	jle    410b72 <strcmp@plt+0xd3ea>
  410b19:	mov    rdi,QWORD PTR [rsp+0x18]
  410b1e:	call   423130 <strcmp@plt+0x1f9a8>
  410b23:	mov    r15,rax
  410b26:	mov    rax,QWORD PTR [rsp+0x28]
  410b2b:	mov    rdi,QWORD PTR [rax]
  410b2e:	call   423130 <strcmp@plt+0x1f9a8>
  410b33:	mov    r12,rax
  410b36:	mov    rdi,r13
  410b39:	call   423130 <strcmp@plt+0x1f9a8>
  410b3e:	mov    r13,rax
  410b41:	mov    rdi,QWORD PTR [rsp+0x20]
  410b46:	call   423130 <strcmp@plt+0x1f9a8>
  410b4b:	mov    rbp,rax
  410b4e:	lea    rsi,[rip+0x350d1]        # 445c26 <strcmp@plt+0x4249e>
  410b55:	mov    edi,0x5
  410b5a:	xor    eax,eax
  410b5c:	mov    rdx,r15
  410b5f:	mov    rbx,QWORD PTR [rsp+0x10]
  410b64:	mov    rcx,r12
  410b67:	mov    r8,r13
  410b6a:	mov    r9,rbp
  410b6d:	call   42e800 <strcmp@plt+0x2b078>
  410b72:	lea    rax,[rip+0x5fa2f]        # 4705a8 <strcmp@plt+0x6ce20>
  410b79:	mov    rdi,QWORD PTR [rax]
  410b7c:	mov    rsi,QWORD PTR [rsp+0x40]
  410b81:	mov    rdx,rbx
  410b84:	call   432280 <strcmp@plt+0x2eaf8>
  410b89:	mov    esi,0x3
  410b8e:	mov    rdi,QWORD PTR [rsp+0x38]
  410b93:	call   437460 <strcmp@plt+0x33cd8>
  410b98:	mov    ebx,0x1
  410b9d:	mov    eax,ebx
  410b9f:	add    rsp,0x98
  410ba6:	pop    rbx
  410ba7:	pop    r12
  410ba9:	pop    r13
  410bab:	pop    r14
  410bad:	pop    r15
  410baf:	pop    rbp
  410bb0:	ret    
  410bb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  410bc0:	push   rbx
  410bc1:	mov    rbx,rdi
  410bc4:	mov    rdi,QWORD PTR [rdi+0x18]
  410bc8:	call   422fa0 <strcmp@plt+0x1f818>
  410bcd:	mov    rdi,rbx
  410bd0:	pop    rbx
  410bd1:	jmp    403780 <free@plt>
  410bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410be0:	test   rsi,rsi
  410be3:	je     410c06 <strcmp@plt+0xd47e>
  410be5:	push   rax
  410be6:	mov    rax,rsi
  410be9:	mov    rdi,QWORD PTR [rdi+0x18]
  410bed:	mov    rsi,QWORD PTR [rsi]
  410bf0:	mov    rdx,rax
  410bf3:	call   42f150 <strcmp@plt+0x2b9c8>
  410bf8:	mov    ecx,eax
  410bfa:	xor    eax,eax
  410bfc:	test   ecx,ecx
  410bfe:	setne  al
  410c01:	add    rsp,0x8
  410c05:	ret    
  410c06:	xor    eax,eax
  410c08:	ret    
  410c09:	nop    DWORD PTR [rax+0x0]
  410c10:	test   rsi,rsi
  410c13:	je     410c4c <strcmp@plt+0xd4c4>
  410c15:	push   r14
  410c17:	push   rbx
  410c18:	push   rax
  410c19:	mov    rbx,rsi
  410c1c:	mov    r14,rdi
  410c1f:	mov    edi,0x10
  410c24:	call   432070 <strcmp@plt+0x2e8e8>
  410c29:	mov    QWORD PTR [rax],rbx
  410c2c:	mov    rdi,QWORD PTR [r14+0x20]
  410c30:	mov    rsi,rbx
  410c33:	mov    rdx,rax
  410c36:	call   42f150 <strcmp@plt+0x2b9c8>
  410c3b:	mov    ecx,eax
  410c3d:	xor    eax,eax
  410c3f:	test   ecx,ecx
  410c41:	setne  al
  410c44:	add    rsp,0x8
  410c48:	pop    rbx
  410c49:	pop    r14
  410c4b:	ret    
  410c4c:	xor    eax,eax
  410c4e:	ret    
  410c4f:	nop
  410c50:	push   rbp
  410c51:	push   r15
  410c53:	push   r14
  410c55:	push   r13
  410c57:	push   r12
  410c59:	push   rbx
  410c5a:	sub    rsp,0x838
  410c61:	mov    ebx,esi
  410c63:	mov    r14,rdi
  410c66:	cmp    esi,0x5
  410c69:	jl     410c7f <strcmp@plt+0xd4f7>
  410c6b:	lea    rax,[rip+0x5413e]        # 464db0 <strcmp@plt+0x61628>
  410c72:	mov    eax,DWORD PTR [rax]
  410c74:	add    eax,0x4
  410c77:	cmp    eax,ebx
  410c79:	jl     410fef <strcmp@plt+0xd867>
  410c7f:	lea    rsi,[rip+0x3538e]        # 446014 <strcmp@plt+0x4288c>
  410c86:	xor    r12d,r12d
  410c89:	xor    eax,eax
  410c8b:	mov    edi,ebx
  410c8d:	call   42e800 <strcmp@plt+0x2b078>
  410c92:	call   42bbd0 <strcmp@plt+0x28448>
  410c97:	mov    rbp,rax
  410c9a:	mov    rax,QWORD PTR [r14+0x18]
  410c9e:	mov    rdi,QWORD PTR [rax]
  410ca1:	mov    rsi,rbp
  410ca4:	call   42bcf0 <strcmp@plt+0x28568>
  410ca9:	mov    rax,QWORD PTR [r14+0x18]
  410cad:	mov    rdi,QWORD PTR [rax+0x8]
  410cb1:	mov    QWORD PTR [rsp+0x8],rbp
  410cb6:	mov    rsi,rbp
  410cb9:	call   42bcf0 <strcmp@plt+0x28568>
  410cbe:	mov    rax,QWORD PTR [r14+0x18]
  410cc2:	mov    rcx,QWORD PTR [rax+0x10]
  410cc6:	mov    rcx,QWORD PTR [rcx]
  410cc9:	cmp    DWORD PTR [rcx],0x0
  410ccc:	je     410d24 <strcmp@plt+0xd59c>
  410cce:	mov    r15d,0x3
  410cd4:	xor    ebp,ebp
  410cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410ce0:	mov    rdx,QWORD PTR [rcx+0x10]
  410ce4:	mov    esi,ebp
  410ce6:	shr    esi,0x4
  410ce9:	mov    edi,r12d
  410cec:	and    dil,0x1e
  410cf0:	shlx   edi,r15d,edi
  410cf5:	test   DWORD PTR [rdx+rsi*4],edi
  410cf8:	jne    410d12 <strcmp@plt+0xd58a>
  410cfa:	mov    rax,QWORD PTR [rcx+0x20]
  410cfe:	mov    ecx,ebp
  410d00:	mov    rdi,QWORD PTR [rax+rcx*8]
  410d04:	mov    rsi,QWORD PTR [rsp+0x8]
  410d09:	call   42bcf0 <strcmp@plt+0x28568>
  410d0e:	mov    rax,QWORD PTR [r14+0x18]
  410d12:	add    ebp,0x1
  410d15:	mov    rcx,QWORD PTR [rax+0x10]
  410d19:	mov    rcx,QWORD PTR [rcx]
  410d1c:	add    r12d,0x2
  410d20:	cmp    ebp,DWORD PTR [rcx]
  410d22:	jne    410ce0 <strcmp@plt+0xd558>
  410d24:	mov    rcx,QWORD PTR [rax+0x18]
  410d28:	mov    rcx,QWORD PTR [rcx]
  410d2b:	cmp    DWORD PTR [rcx],0x0
  410d2e:	je     410d84 <strcmp@plt+0xd5fc>
  410d30:	xor    r12d,r12d
  410d33:	mov    r15d,0x3
  410d39:	xor    ebp,ebp
  410d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  410d40:	mov    rdx,QWORD PTR [rcx+0x10]
  410d44:	mov    esi,ebp
  410d46:	shr    esi,0x4
  410d49:	mov    edi,r12d
  410d4c:	and    dil,0x1e
  410d50:	shlx   edi,r15d,edi
  410d55:	test   DWORD PTR [rdx+rsi*4],edi
  410d58:	jne    410d72 <strcmp@plt+0xd5ea>
  410d5a:	mov    rax,QWORD PTR [rcx+0x20]
  410d5e:	mov    ecx,ebp
  410d60:	mov    rdi,QWORD PTR [rax+rcx*8]
  410d64:	mov    rsi,QWORD PTR [rsp+0x8]
  410d69:	call   42bcf0 <strcmp@plt+0x28568>
  410d6e:	mov    rax,QWORD PTR [r14+0x18]
  410d72:	add    ebp,0x1
  410d75:	mov    rcx,QWORD PTR [rax+0x18]
  410d79:	mov    rcx,QWORD PTR [rcx]
  410d7c:	add    r12d,0x2
  410d80:	cmp    ebp,DWORD PTR [rcx]
  410d82:	jne    410d40 <strcmp@plt+0xd5b8>
  410d84:	mov    rdi,QWORD PTR [rax+0x20]
  410d88:	mov    rbp,QWORD PTR [rsp+0x8]
  410d8d:	mov    rsi,rbp
  410d90:	call   42bcf0 <strcmp@plt+0x28568>
  410d95:	mov    rax,QWORD PTR [r14+0x18]
  410d99:	mov    rdi,QWORD PTR [rax+0x20]
  410d9d:	mov    rsi,rbp
  410da0:	call   42bcf0 <strcmp@plt+0x28568>
  410da5:	mov    rax,QWORD PTR [rbp+0x8]
  410da9:	cmp    rax,rbp
  410dac:	je     410fd0 <strcmp@plt+0xd848>
  410db2:	lea    r13,[rip+0x3f9ba]        # 450773 <strcmp@plt+0x4cfeb>
  410db9:	nop    DWORD PTR [rax+0x0]
  410dc0:	mov    QWORD PTR [rsp+0x18],rax
  410dc5:	mov    rax,QWORD PTR [rax+0x10]
  410dc9:	mov    r15,QWORD PTR [rax]
  410dcc:	test   r15,r15
  410dcf:	je     410fbc <strcmp@plt+0xd834>
  410dd5:	xor    eax,eax
  410dd7:	mov    QWORD PTR [rsp+0x10],rax
  410ddc:	nop    DWORD PTR [rax+0x0]
  410de0:	cmp    QWORD PTR [r15+0x8],0x0
  410de5:	je     410f4c <strcmp@plt+0xd7c4>
  410deb:	mov    rax,QWORD PTR [r15+0x28]
  410def:	mov    rbp,QWORD PTR [rax]
  410df2:	test   rbp,rbp
  410df5:	je     410f4c <strcmp@plt+0xd7c4>
  410dfb:	xor    r12d,r12d
  410dfe:	xchg   ax,ax
  410e00:	cmp    QWORD PTR [rbp+0x8],0x0
  410e05:	je     410f00 <strcmp@plt+0xd778>
  410e0b:	mov    r14,QWORD PTR [rbp+0x28]
  410e0f:	test   r14,r14
  410e12:	je     410f00 <strcmp@plt+0xd778>
  410e18:	cmp    ebx,0x5
  410e1b:	jl     410e40 <strcmp@plt+0xd6b8>
  410e1d:	lea    rax,[rip+0x53f8c]        # 464db0 <strcmp@plt+0x61628>
  410e24:	mov    eax,DWORD PTR [rax]
  410e26:	add    eax,0x4
  410e29:	cmp    eax,ebx
  410e2b:	jge    410e40 <strcmp@plt+0xd6b8>
  410e2d:	mov    rdi,QWORD PTR [r14+0x20]
  410e31:	cmp    DWORD PTR [rdi+0x18],0x0
  410e35:	jg     410ece <strcmp@plt+0xd746>
  410e3b:	jmp    410f00 <strcmp@plt+0xd778>
  410e40:	mov    rdi,QWORD PTR [r14]
  410e43:	call   423130 <strcmp@plt+0x1f9a8>
  410e48:	mov    rdx,rax
  410e4b:	cmp    BYTE PTR [r14+0x9],0x0
  410e50:	mov    rcx,r13
  410e53:	lea    rax,[rip+0x3522a]        # 446084 <strcmp@plt+0x428fc>
  410e5a:	cmove  rcx,rax
  410e5e:	cmp    BYTE PTR [r14+0x18],0x0
  410e63:	mov    r8,r13
  410e66:	cmove  r8,rax
  410e6a:	cmp    BYTE PTR [r14+0x8],0x0
  410e6f:	mov    r9,r13
  410e72:	cmove  r9,rax
  410e76:	xor    eax,eax
  410e78:	mov    edi,ebx
  410e7a:	lea    rsi,[rip+0x351cd]        # 44604e <strcmp@plt+0x428c6>
  410e81:	call   42e800 <strcmp@plt+0x2b078>
  410e86:	mov    rdi,QWORD PTR [r14+0x20]
  410e8a:	mov    eax,DWORD PTR [rdi+0x18]
  410e8d:	cmp    ebx,0x5
  410e90:	jge    410e98 <strcmp@plt+0xd710>
  410e92:	test   eax,eax
  410e94:	jg     410eac <strcmp@plt+0xd724>
  410e96:	jmp    410ee2 <strcmp@plt+0xd75a>
  410e98:	lea    rcx,[rip+0x53f11]        # 464db0 <strcmp@plt+0x61628>
  410e9f:	mov    ecx,DWORD PTR [rcx]
  410ea1:	add    ecx,0x4
  410ea4:	test   eax,eax
  410ea6:	jle    410ede <strcmp@plt+0xd756>
  410ea8:	cmp    ecx,ebx
  410eaa:	jl     410ece <strcmp@plt+0xd746>
  410eac:	mov    rdi,QWORD PTR [r14]
  410eaf:	call   423130 <strcmp@plt+0x1f9a8>
  410eb4:	mov    rcx,rax
  410eb7:	xor    eax,eax
  410eb9:	mov    edi,ebx
  410ebb:	lea    rsi,[rip+0x351c6]        # 446088 <strcmp@plt+0x42900>
  410ec2:	mov    rdx,rcx
  410ec5:	call   42e800 <strcmp@plt+0x2b078>
  410eca:	mov    rdi,QWORD PTR [r14+0x20]
  410ece:	lea    rsi,[rip+0x1225b]        # 423130 <strcmp@plt+0x1f9a8>
  410ed5:	mov    edx,ebx
  410ed7:	call   42bf40 <strcmp@plt+0x287b8>
  410edc:	jmp    410f00 <strcmp@plt+0xd778>
  410ede:	cmp    ecx,ebx
  410ee0:	jl     410f00 <strcmp@plt+0xd778>
  410ee2:	mov    rdi,QWORD PTR [r14]
  410ee5:	call   423130 <strcmp@plt+0x1f9a8>
  410eea:	mov    rcx,rax
  410eed:	xor    eax,eax
  410eef:	mov    edi,ebx
  410ef1:	lea    rsi,[rip+0x351a9]        # 4460a1 <strcmp@plt+0x42919>
  410ef8:	mov    rdx,rcx
  410efb:	call   42e800 <strcmp@plt+0x2b078>
  410f00:	mov    rax,QWORD PTR [rbp+0x10]
  410f04:	mov    rcx,QWORD PTR [rbp+0x18]
  410f08:	test   rax,rax
  410f0b:	je     410f20 <strcmp@plt+0xd798>
  410f0d:	test   rcx,rcx
  410f10:	je     410f40 <strcmp@plt+0xd7b8>
  410f12:	mov    QWORD PTR [rsp+r12*8+0x20],rcx
  410f17:	add    r12,0x1
  410f1b:	jmp    410f40 <strcmp@plt+0xd7b8>
  410f1d:	nop    DWORD PTR [rax]
  410f20:	test   rcx,rcx
  410f23:	je     410f2a <strcmp@plt+0xd7a2>
  410f25:	mov    rax,rcx
  410f28:	jmp    410f40 <strcmp@plt+0xd7b8>
  410f2a:	test   r12,r12
  410f2d:	je     410f4c <strcmp@plt+0xd7c4>
  410f2f:	mov    rax,QWORD PTR [rsp+r12*8+0x18]
  410f34:	add    r12,0xffffffffffffffff
  410f38:	nop    DWORD PTR [rax+rax*1+0x0]
  410f40:	mov    rbp,rax
  410f43:	test   rax,rax
  410f46:	jne    410e00 <strcmp@plt+0xd678>
  410f4c:	mov    rax,QWORD PTR [r15+0x10]
  410f50:	mov    rcx,QWORD PTR [r15+0x18]
  410f54:	test   rax,rax
  410f57:	je     410f80 <strcmp@plt+0xd7f8>
  410f59:	test   rcx,rcx
  410f5c:	je     410fb0 <strcmp@plt+0xd828>
  410f5e:	mov    rdx,QWORD PTR [rsp+0x10]
  410f63:	mov    QWORD PTR [rsp+rdx*8+0x430],rcx
  410f6b:	add    rdx,0x1
  410f6f:	mov    QWORD PTR [rsp+0x10],rdx
  410f74:	jmp    410fb0 <strcmp@plt+0xd828>
  410f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410f80:	test   rcx,rcx
  410f83:	je     410f8a <strcmp@plt+0xd802>
  410f85:	mov    rax,rcx
  410f88:	jmp    410fb0 <strcmp@plt+0xd828>
  410f8a:	cmp    QWORD PTR [rsp+0x10],0x0
  410f90:	je     410fbc <strcmp@plt+0xd834>
  410f92:	mov    rcx,QWORD PTR [rsp+0x10]
  410f97:	mov    rax,QWORD PTR [rsp+rcx*8+0x428]
  410f9f:	add    rcx,0xffffffffffffffff
  410fa3:	mov    QWORD PTR [rsp+0x10],rcx
  410fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  410fb0:	mov    r15,rax
  410fb3:	test   rax,rax
  410fb6:	jne    410de0 <strcmp@plt+0xd658>
  410fbc:	mov    rax,QWORD PTR [rsp+0x18]
  410fc1:	mov    rax,QWORD PTR [rax+0x8]
  410fc5:	cmp    rax,QWORD PTR [rsp+0x8]
  410fca:	jne    410dc0 <strcmp@plt+0xd638>
  410fd0:	mov    rdi,QWORD PTR [rsp+0x8]
  410fd5:	call   42c250 <strcmp@plt+0x28ac8>
  410fda:	cmp    ebx,0x5
  410fdd:	jl     411001 <strcmp@plt+0xd879>
  410fdf:	lea    rax,[rip+0x53dca]        # 464db0 <strcmp@plt+0x61628>
  410fe6:	mov    eax,DWORD PTR [rax]
  410fe8:	add    eax,0x4
  410feb:	cmp    eax,ebx
  410fed:	jge    411001 <strcmp@plt+0xd879>
  410fef:	add    rsp,0x838
  410ff6:	pop    rbx
  410ff7:	pop    r12
  410ff9:	pop    r13
  410ffb:	pop    r14
  410ffd:	pop    r15
  410fff:	pop    rbp
  411000:	ret    
  411001:	lea    rsi,[rip+0x340a7]        # 4450af <strcmp@plt+0x41927>
  411008:	xor    eax,eax
  41100a:	mov    edi,ebx
  41100c:	add    rsp,0x838
  411013:	pop    rbx
  411014:	pop    r12
  411016:	pop    r13
  411018:	pop    r14
  41101a:	pop    r15
  41101c:	pop    rbp
  41101d:	jmp    42e800 <strcmp@plt+0x2b078>
  411022:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41102c:	nop    DWORD PTR [rax+0x0]
  411030:	push   rbp
  411031:	push   r15
  411033:	push   r14
  411035:	push   r13
  411037:	push   r12
  411039:	push   rbx
  41103a:	sub    rsp,0x828
  411041:	mov    ebx,esi
  411043:	mov    r15,rdi
  411046:	cmp    esi,0x5
  411049:	jl     41105f <strcmp@plt+0xd8d7>
  41104b:	lea    rax,[rip+0x53d5e]        # 464db0 <strcmp@plt+0x61628>
  411052:	mov    eax,DWORD PTR [rax]
  411054:	add    eax,0x4
  411057:	cmp    eax,ebx
  411059:	jl     4112ed <strcmp@plt+0xdb65>
  41105f:	lea    rsi,[rip+0x35055]        # 4460bb <strcmp@plt+0x42933>
  411066:	xor    r12d,r12d
  411069:	xor    eax,eax
  41106b:	mov    edi,ebx
  41106d:	call   42e800 <strcmp@plt+0x2b078>
  411072:	call   42bbd0 <strcmp@plt+0x28448>
  411077:	mov    rbp,rax
  41107a:	mov    rax,QWORD PTR [r15+0x20]
  41107e:	mov    rdi,QWORD PTR [rax]
  411081:	mov    rsi,rbp
  411084:	call   42bcf0 <strcmp@plt+0x28568>
  411089:	mov    rax,QWORD PTR [r15+0x20]
  41108d:	mov    rdi,QWORD PTR [rax+0x8]
  411091:	mov    QWORD PTR [rsp],rbp
  411095:	mov    rsi,rbp
  411098:	call   42bcf0 <strcmp@plt+0x28568>
  41109d:	mov    rax,QWORD PTR [r15+0x20]
  4110a1:	mov    rcx,QWORD PTR [rax+0x10]
  4110a5:	mov    rcx,QWORD PTR [rcx]
  4110a8:	cmp    DWORD PTR [rcx],0x0
  4110ab:	je     411103 <strcmp@plt+0xd97b>
  4110ad:	mov    r14d,0x3
  4110b3:	xor    ebp,ebp
  4110b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4110bf:	nop
  4110c0:	mov    rdx,QWORD PTR [rcx+0x10]
  4110c4:	mov    esi,ebp
  4110c6:	shr    esi,0x4
  4110c9:	mov    edi,r12d
  4110cc:	and    dil,0x1e
  4110d0:	shlx   edi,r14d,edi
  4110d5:	test   DWORD PTR [rdx+rsi*4],edi
  4110d8:	jne    4110f1 <strcmp@plt+0xd969>
  4110da:	mov    rax,QWORD PTR [rcx+0x20]
  4110de:	mov    ecx,ebp
  4110e0:	mov    rdi,QWORD PTR [rax+rcx*8]
  4110e4:	mov    rsi,QWORD PTR [rsp]
  4110e8:	call   42bcf0 <strcmp@plt+0x28568>
  4110ed:	mov    rax,QWORD PTR [r15+0x20]
  4110f1:	add    ebp,0x1
  4110f4:	mov    rcx,QWORD PTR [rax+0x10]
  4110f8:	mov    rcx,QWORD PTR [rcx]
  4110fb:	add    r12d,0x2
  4110ff:	cmp    ebp,DWORD PTR [rcx]
  411101:	jne    4110c0 <strcmp@plt+0xd938>
  411103:	mov    rcx,QWORD PTR [rax+0x18]
  411107:	mov    rcx,QWORD PTR [rcx]
  41110a:	cmp    DWORD PTR [rcx],0x0
  41110d:	je     411163 <strcmp@plt+0xd9db>
  41110f:	xor    r12d,r12d
  411112:	mov    r14d,0x3
  411118:	xor    ebp,ebp
  41111a:	nop    WORD PTR [rax+rax*1+0x0]
  411120:	mov    rdx,QWORD PTR [rcx+0x10]
  411124:	mov    esi,ebp
  411126:	shr    esi,0x4
  411129:	mov    edi,r12d
  41112c:	and    dil,0x1e
  411130:	shlx   edi,r14d,edi
  411135:	test   DWORD PTR [rdx+rsi*4],edi
  411138:	jne    411151 <strcmp@plt+0xd9c9>
  41113a:	mov    rax,QWORD PTR [rcx+0x20]
  41113e:	mov    ecx,ebp
  411140:	mov    rdi,QWORD PTR [rax+rcx*8]
  411144:	mov    rsi,QWORD PTR [rsp]
  411148:	call   42bcf0 <strcmp@plt+0x28568>
  41114d:	mov    rax,QWORD PTR [r15+0x20]
  411151:	add    ebp,0x1
  411154:	mov    rcx,QWORD PTR [rax+0x18]
  411158:	mov    rcx,QWORD PTR [rcx]
  41115b:	add    r12d,0x2
  41115f:	cmp    ebp,DWORD PTR [rcx]
  411161:	jne    411120 <strcmp@plt+0xd998>
  411163:	mov    rdi,QWORD PTR [rax+0x20]
  411167:	mov    rbp,QWORD PTR [rsp]
  41116b:	mov    rsi,rbp
  41116e:	call   42bcf0 <strcmp@plt+0x28568>
  411173:	mov    rax,QWORD PTR [r15+0x20]
  411177:	mov    rdi,QWORD PTR [rax+0x20]
  41117b:	mov    rsi,rbp
  41117e:	call   42bcf0 <strcmp@plt+0x28568>
  411183:	mov    rax,QWORD PTR [rbp+0x8]
  411187:	cmp    rax,rbp
  41118a:	je     4112cf <strcmp@plt+0xdb47>
  411190:	lea    r15,[rip+0x3251e]        # 4436b5 <strcmp@plt+0x3ff2d>
  411197:	nop    WORD PTR [rax+rax*1+0x0]
  4111a0:	mov    QWORD PTR [rsp+0x8],rax
  4111a5:	mov    rax,QWORD PTR [rax+0x10]
  4111a9:	mov    r14,QWORD PTR [rax]
  4111ac:	test   r14,r14
  4111af:	je     4112bc <strcmp@plt+0xdb34>
  4111b5:	xor    ebp,ebp
  4111b7:	nop    WORD PTR [rax+rax*1+0x0]
  4111c0:	cmp    QWORD PTR [r14+0x8],0x0
  4111c5:	je     41126c <strcmp@plt+0xdae4>
  4111cb:	mov    rax,QWORD PTR [r14+0x28]
  4111cf:	mov    r13,QWORD PTR [rax]
  4111d2:	test   r13,r13
  4111d5:	je     41126c <strcmp@plt+0xdae4>
  4111db:	xor    r12d,r12d
  4111de:	xchg   ax,ax
  4111e0:	cmp    QWORD PTR [r13+0x8],0x0
  4111e5:	je     41121f <strcmp@plt+0xda97>
  4111e7:	mov    rax,QWORD PTR [r13+0x28]
  4111eb:	test   rax,rax
  4111ee:	je     41121f <strcmp@plt+0xda97>
  4111f0:	cmp    ebx,0x5
  4111f3:	jl     411205 <strcmp@plt+0xda7d>
  4111f5:	lea    rcx,[rip+0x53bb4]        # 464db0 <strcmp@plt+0x61628>
  4111fc:	mov    ecx,DWORD PTR [rcx]
  4111fe:	add    ecx,0x4
  411201:	cmp    ecx,ebx
  411203:	jl     41121f <strcmp@plt+0xda97>
  411205:	mov    rdi,QWORD PTR [rax]
  411208:	call   429040 <strcmp@plt+0x258b8>
  41120d:	mov    rcx,rax
  411210:	xor    eax,eax
  411212:	mov    edi,ebx
  411214:	mov    rsi,r15
  411217:	mov    rdx,rcx
  41121a:	call   42e800 <strcmp@plt+0x2b078>
  41121f:	mov    rax,QWORD PTR [r13+0x10]
  411223:	mov    rcx,QWORD PTR [r13+0x18]
  411227:	test   rax,rax
  41122a:	je     411240 <strcmp@plt+0xdab8>
  41122c:	test   rcx,rcx
  41122f:	je     411260 <strcmp@plt+0xdad8>
  411231:	mov    QWORD PTR [rsp+r12*8+0x10],rcx
  411236:	add    r12,0x1
  41123a:	jmp    411260 <strcmp@plt+0xdad8>
  41123c:	nop    DWORD PTR [rax+0x0]
  411240:	test   rcx,rcx
  411243:	je     41124a <strcmp@plt+0xdac2>
  411245:	mov    rax,rcx
  411248:	jmp    411260 <strcmp@plt+0xdad8>
  41124a:	test   r12,r12
  41124d:	je     41126c <strcmp@plt+0xdae4>
  41124f:	mov    rax,QWORD PTR [rsp+r12*8+0x8]
  411254:	add    r12,0xffffffffffffffff
  411258:	nop    DWORD PTR [rax+rax*1+0x0]
  411260:	mov    r13,rax
  411263:	test   rax,rax
  411266:	jne    4111e0 <strcmp@plt+0xda58>
  41126c:	mov    rax,QWORD PTR [r14+0x10]
  411270:	mov    rcx,QWORD PTR [r14+0x18]
  411274:	test   rax,rax
  411277:	je     411290 <strcmp@plt+0xdb08>
  411279:	test   rcx,rcx
  41127c:	je     4112b0 <strcmp@plt+0xdb28>
  41127e:	mov    QWORD PTR [rsp+rbp*8+0x420],rcx
  411286:	add    rbp,0x1
  41128a:	jmp    4112b0 <strcmp@plt+0xdb28>
  41128c:	nop    DWORD PTR [rax+0x0]
  411290:	test   rcx,rcx
  411293:	je     41129a <strcmp@plt+0xdb12>
  411295:	mov    rax,rcx
  411298:	jmp    4112b0 <strcmp@plt+0xdb28>
  41129a:	test   rbp,rbp
  41129d:	je     4112bc <strcmp@plt+0xdb34>
  41129f:	mov    rax,QWORD PTR [rsp+rbp*8+0x418]
  4112a7:	add    rbp,0xffffffffffffffff
  4112ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4112b0:	mov    r14,rax
  4112b3:	test   rax,rax
  4112b6:	jne    4111c0 <strcmp@plt+0xda38>
  4112bc:	mov    rax,QWORD PTR [rsp+0x8]
  4112c1:	mov    rax,QWORD PTR [rax+0x8]
  4112c5:	cmp    rax,QWORD PTR [rsp]
  4112c9:	jne    4111a0 <strcmp@plt+0xda18>
  4112cf:	mov    rdi,QWORD PTR [rsp]
  4112d3:	call   42c250 <strcmp@plt+0x28ac8>
  4112d8:	cmp    ebx,0x5
  4112db:	jl     4112ff <strcmp@plt+0xdb77>
  4112dd:	lea    rax,[rip+0x53acc]        # 464db0 <strcmp@plt+0x61628>
  4112e4:	mov    eax,DWORD PTR [rax]
  4112e6:	add    eax,0x4
  4112e9:	cmp    eax,ebx
  4112eb:	jge    4112ff <strcmp@plt+0xdb77>
  4112ed:	add    rsp,0x828
  4112f4:	pop    rbx
  4112f5:	pop    r12
  4112f7:	pop    r13
  4112f9:	pop    r14
  4112fb:	pop    r15
  4112fd:	pop    rbp
  4112fe:	ret    
  4112ff:	lea    rsi,[rip+0x33da9]        # 4450af <strcmp@plt+0x41927>
  411306:	xor    eax,eax
  411308:	mov    edi,ebx
  41130a:	add    rsp,0x828
  411311:	pop    rbx
  411312:	pop    r12
  411314:	pop    r13
  411316:	pop    r14
  411318:	pop    r15
  41131a:	pop    rbp
  41131b:	jmp    42e800 <strcmp@plt+0x2b078>
  411320:	mov    rax,QWORD PTR [rdi+0x8]
  411324:	cmp    rax,QWORD PTR [rip+0x52cb5]        # 463fe0 <strcmp@plt+0x60858>
  41132b:	jne    411331 <strcmp@plt+0xdba9>
  41132d:	mov    rax,rdi
  411330:	ret    
  411331:	push   rax
  411332:	lea    rdi,[rip+0x34dbb]        # 4460f4 <strcmp@plt+0x4296c>
  411339:	lea    rsi,[rip+0x34dca]        # 44610a <strcmp@plt+0x42982>
  411340:	lea    rdx,[rip+0x34dd0]        # 446117 <strcmp@plt+0x4298f>
  411347:	call   4321d0 <strcmp@plt+0x2ea48>
  41134c:	nop    DWORD PTR [rax+0x0]
  411350:	mov    eax,0x1
  411355:	ret    
  411356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411360:	mov    eax,0x1
  411365:	ret    
  411366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411370:	mov    eax,0x1
  411375:	ret    
  411376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411380:	xor    eax,eax
  411382:	ret    
  411383:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41138d:	nop    DWORD PTR [rax]
  411390:	push   rbx
  411391:	mov    rax,QWORD PTR [rdi+0x8]
  411395:	cmp    rax,QWORD PTR [rip+0x52c44]        # 463fe0 <strcmp@plt+0x60858>
  41139c:	jne    4113c9 <strcmp@plt+0xdc41>
  41139e:	mov    rbx,rdi
  4113a1:	lea    rax,[rip+0x53a08]        # 464db0 <strcmp@plt+0x61628>
  4113a8:	cmp    DWORD PTR [rax],0x0
  4113ab:	jle    4113c0 <strcmp@plt+0xdc38>
  4113ad:	lea    rsi,[rip+0x34d85]        # 446139 <strcmp@plt+0x429b1>
  4113b4:	mov    edi,0x5
  4113b9:	xor    eax,eax
  4113bb:	call   42e800 <strcmp@plt+0x2b078>
  4113c0:	mov    rdi,rbx
  4113c3:	pop    rbx
  4113c4:	jmp    403780 <free@plt>
  4113c9:	lea    rdi,[rip+0x34d24]        # 4460f4 <strcmp@plt+0x4296c>
  4113d0:	lea    rsi,[rip+0x34d33]        # 44610a <strcmp@plt+0x42982>
  4113d7:	lea    rdx,[rip+0x34d39]        # 446117 <strcmp@plt+0x4298f>
  4113de:	call   4321d0 <strcmp@plt+0x2ea48>
  4113e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4113ed:	nop    DWORD PTR [rax]
  4113f0:	push   rbp
  4113f1:	push   r15
  4113f3:	push   r14
  4113f5:	push   r12
  4113f7:	push   rbx
  4113f8:	mov    rax,QWORD PTR [rdi+0x8]
  4113fc:	cmp    rax,QWORD PTR [rip+0x52bdd]        # 463fe0 <strcmp@plt+0x60858>
  411403:	jne    411522 <strcmp@plt+0xdd9a>
  411409:	mov    rbx,rdi
  41140c:	lea    r15,[rip+0x5399d]        # 464db0 <strcmp@plt+0x61628>
  411413:	cmp    DWORD PTR [r15],0x0
  411417:	jle    41142c <strcmp@plt+0xdca4>
  411419:	lea    rsi,[rip+0x34d30]        # 446150 <strcmp@plt+0x429c8>
  411420:	mov    edi,0x5
  411425:	xor    eax,eax
  411427:	call   42e800 <strcmp@plt+0x2b078>
  41142c:	mov    esi,0x5
  411431:	mov    rdi,rbx
  411434:	call   410c50 <strcmp@plt+0xd4c8>
  411439:	mov    esi,0x5
  41143e:	mov    rdi,rbx
  411441:	call   411030 <strcmp@plt+0xd8a8>
  411446:	cmp    QWORD PTR [rbx+0x40],0x0
  41144b:	je     4114f8 <strcmp@plt+0xdd70>
  411451:	cmp    DWORD PTR [r15],0x0
  411455:	jle    411519 <strcmp@plt+0xdd91>
  41145b:	lea    rsi,[rip+0x34d19]        # 44617b <strcmp@plt+0x429f3>
  411462:	mov    edi,0x5
  411467:	xor    eax,eax
  411469:	call   42e800 <strcmp@plt+0x2b078>
  41146e:	cmp    DWORD PTR [r15],0x0
  411472:	jle    411519 <strcmp@plt+0xdd91>
  411478:	mov    r12,QWORD PTR [rbx+0x40]
  41147c:	mov    rdx,QWORD PTR [r12]
  411480:	mov    ecx,DWORD PTR [r12+0x8]
  411485:	lea    rsi,[rip+0x34d61]        # 4461ed <strcmp@plt+0x42a65>
  41148c:	mov    edi,0x5
  411491:	xor    eax,eax
  411493:	call   42e800 <strcmp@plt+0x2b078>
  411498:	mov    rax,QWORD PTR [r12+0x10]
  41149d:	mov    rbx,QWORD PTR [rax+0x8]
  4114a1:	cmp    rbx,rax
  4114a4:	je     4114f8 <strcmp@plt+0xdd70>
  4114a6:	mov    ebp,0x1
  4114ab:	lea    r14,[rip+0x34d58]        # 44620a <strcmp@plt+0x42a82>
  4114b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4114bc:	nop    DWORD PTR [rax+0x0]
  4114c0:	cmp    DWORD PTR [r15],0x0
  4114c4:	jle    4114ec <strcmp@plt+0xdd64>
  4114c6:	mov    rax,QWORD PTR [rbx+0x10]
  4114ca:	mov    rdi,QWORD PTR [rax+0x8]
  4114ce:	call   423130 <strcmp@plt+0x1f9a8>
  4114d3:	mov    rcx,rax
  4114d6:	mov    edi,0x5
  4114db:	xor    eax,eax
  4114dd:	mov    rsi,r14
  4114e0:	mov    edx,ebp
  4114e2:	call   42e800 <strcmp@plt+0x2b078>
  4114e7:	mov    rax,QWORD PTR [r12+0x10]
  4114ec:	mov    rbx,QWORD PTR [rbx+0x8]
  4114f0:	add    ebp,0x1
  4114f3:	cmp    rbx,rax
  4114f6:	jne    4114c0 <strcmp@plt+0xdd38>
  4114f8:	cmp    DWORD PTR [r15],0x0
  4114fc:	jle    411519 <strcmp@plt+0xdd91>
  4114fe:	lea    rsi,[rip+0x34c91]        # 446196 <strcmp@plt+0x42a0e>
  411505:	mov    edi,0x5
  41150a:	xor    eax,eax
  41150c:	pop    rbx
  41150d:	pop    r12
  41150f:	pop    r14
  411511:	pop    r15
  411513:	pop    rbp
  411514:	jmp    42e800 <strcmp@plt+0x2b078>
  411519:	pop    rbx
  41151a:	pop    r12
  41151c:	pop    r14
  41151e:	pop    r15
  411520:	pop    rbp
  411521:	ret    
  411522:	lea    rdi,[rip+0x34bcb]        # 4460f4 <strcmp@plt+0x4296c>
  411529:	lea    rsi,[rip+0x34bda]        # 44610a <strcmp@plt+0x42982>
  411530:	lea    rdx,[rip+0x34be0]        # 446117 <strcmp@plt+0x4298f>
  411537:	call   4321d0 <strcmp@plt+0x2ea48>
  41153c:	nop    DWORD PTR [rax+0x0]
  411540:	push   rbp
  411541:	push   r15
  411543:	push   r14
  411545:	push   r13
  411547:	push   r12
  411549:	push   rbx
  41154a:	push   rax
  41154b:	mov    r12d,esi
  41154e:	mov    r14,rdi
  411551:	cmp    esi,0x5
  411554:	jl     411567 <strcmp@plt+0xdddf>
  411556:	lea    rax,[rip+0x53853]        # 464db0 <strcmp@plt+0x61628>
  41155d:	mov    eax,DWORD PTR [rax]
  41155f:	add    eax,0x4
  411562:	cmp    eax,r12d
  411565:	jl     4115e1 <strcmp@plt+0xde59>
  411567:	mov    rdx,QWORD PTR [r14]
  41156a:	mov    ecx,DWORD PTR [r14+0x8]
  41156e:	lea    rsi,[rip+0x34c78]        # 4461ed <strcmp@plt+0x42a65>
  411575:	xor    eax,eax
  411577:	mov    edi,r12d
  41157a:	call   42e800 <strcmp@plt+0x2b078>
  41157f:	mov    rax,QWORD PTR [r14+0x10]
  411583:	mov    rbx,QWORD PTR [rax+0x8]
  411587:	cmp    rbx,rax
  41158a:	je     4115e1 <strcmp@plt+0xde59>
  41158c:	mov    ebp,0x1
  411591:	lea    r15,[rip+0x34c72]        # 44620a <strcmp@plt+0x42a82>
  411598:	lea    r13,[rip+0x53811]        # 464db0 <strcmp@plt+0x61628>
  41159f:	nop
  4115a0:	mov    rcx,QWORD PTR [rbx+0x10]
  4115a4:	cmp    r12d,0x5
  4115a8:	jl     4115b6 <strcmp@plt+0xde2e>
  4115aa:	mov    edx,DWORD PTR [r13+0x0]
  4115ae:	add    edx,0x4
  4115b1:	cmp    edx,r12d
  4115b4:	jl     4115d5 <strcmp@plt+0xde4d>
  4115b6:	mov    rdi,QWORD PTR [rcx+0x8]
  4115ba:	call   423130 <strcmp@plt+0x1f9a8>
  4115bf:	mov    rcx,rax
  4115c2:	xor    eax,eax
  4115c4:	mov    edi,r12d
  4115c7:	mov    rsi,r15
  4115ca:	mov    edx,ebp
  4115cc:	call   42e800 <strcmp@plt+0x2b078>
  4115d1:	mov    rax,QWORD PTR [r14+0x10]
  4115d5:	mov    rbx,QWORD PTR [rbx+0x8]
  4115d9:	add    ebp,0x1
  4115dc:	cmp    rbx,rax
  4115df:	jne    4115a0 <strcmp@plt+0xde18>
  4115e1:	add    rsp,0x8
  4115e5:	pop    rbx
  4115e6:	pop    r12
  4115e8:	pop    r13
  4115ea:	pop    r14
  4115ec:	pop    r15
  4115ee:	pop    rbp
  4115ef:	ret    
  4115f0:	push   rbp
  4115f1:	push   rbx
  4115f2:	push   rax
  4115f3:	mov    rax,QWORD PTR [rdi+0x8]
  4115f7:	cmp    rax,QWORD PTR [rip+0x529e2]        # 463fe0 <strcmp@plt+0x60858>
  4115fe:	jne    41168d <strcmp@plt+0xdf05>
  411604:	mov    rbx,rdi
  411607:	xor    ebp,ebp
  411609:	xor    eax,eax
  41160b:	call   42ecf0 <strcmp@plt+0x2b568>
  411610:	mov    QWORD PTR [rbx+0x20],rax
  411614:	xor    eax,eax
  411616:	call   42ecf0 <strcmp@plt+0x2b568>
  41161b:	mov    QWORD PTR [rbx+0x18],rax
  41161f:	lea    rdi,[rip+0x1a0a]        # 413030 <strcmp@plt+0xf8a8>
  411626:	call   436260 <strcmp@plt+0x32ad8>
  41162b:	mov    QWORD PTR [rbx+0x28],rax
  41162f:	lea    rdi,[rip+0x195a]        # 412f90 <strcmp@plt+0xf808>
  411636:	call   436260 <strcmp@plt+0x32ad8>
  41163b:	mov    QWORD PTR [rbx+0x30],rax
  41163f:	xor    eax,eax
  411641:	call   436230 <strcmp@plt+0x32aa8>
  411646:	mov    QWORD PTR [rbx+0x38],rax
  41164a:	mov    QWORD PTR [rbx+0x40],0x0
  411652:	cmp    QWORD PTR [rbx+0x20],0x0
  411657:	je     411684 <strcmp@plt+0xdefc>
  411659:	cmp    QWORD PTR [rbx+0x18],0x0
  41165e:	je     411684 <strcmp@plt+0xdefc>
  411660:	lea    rax,[rip+0x53749]        # 464db0 <strcmp@plt+0x61628>
  411667:	mov    ebp,0x1
  41166c:	cmp    DWORD PTR [rax],0x0
  41166f:	jle    411684 <strcmp@plt+0xdefc>
  411671:	lea    rsi,[rip+0x34ba2]        # 44621a <strcmp@plt+0x42a92>
  411678:	mov    edi,0x5
  41167d:	xor    eax,eax
  41167f:	call   42e800 <strcmp@plt+0x2b078>
  411684:	mov    eax,ebp
  411686:	add    rsp,0x8
  41168a:	pop    rbx
  41168b:	pop    rbp
  41168c:	ret    
  41168d:	lea    rdi,[rip+0x34a60]        # 4460f4 <strcmp@plt+0x4296c>
  411694:	lea    rsi,[rip+0x34a6f]        # 44610a <strcmp@plt+0x42982>
  41169b:	lea    rdx,[rip+0x34a75]        # 446117 <strcmp@plt+0x4298f>
  4116a2:	call   4321d0 <strcmp@plt+0x2ea48>
  4116a7:	nop    WORD PTR [rax+rax*1+0x0]
  4116b0:	push   rbx
  4116b1:	mov    rax,QWORD PTR [rdi+0x8]
  4116b5:	cmp    rax,QWORD PTR [rip+0x52924]        # 463fe0 <strcmp@plt+0x60858>
  4116bc:	jne    4116fd <strcmp@plt+0xdf75>
  4116be:	mov    rbx,rdi
  4116c1:	mov    rdi,QWORD PTR [rdi+0x18]
  4116c5:	lea    rsi,[rip+0x1d0c4]        # 42e790 <strcmp@plt+0x2b008>
  4116cc:	call   42ef00 <strcmp@plt+0x2b778>
  4116d1:	mov    rdi,QWORD PTR [rbx+0x20]
  4116d5:	lea    rsi,[rip+0x1d0f4]        # 42e7d0 <strcmp@plt+0x2b048>
  4116dc:	call   42ef00 <strcmp@plt+0x2b778>
  4116e1:	mov    rdi,QWORD PTR [rbx+0x28]
  4116e5:	call   436870 <strcmp@plt+0x330e8>
  4116ea:	mov    rdi,QWORD PTR [rbx+0x30]
  4116ee:	call   436870 <strcmp@plt+0x330e8>
  4116f3:	mov    rdi,QWORD PTR [rbx+0x38]
  4116f7:	pop    rbx
  4116f8:	jmp    436870 <strcmp@plt+0x330e8>
  4116fd:	lea    rdi,[rip+0x349f0]        # 4460f4 <strcmp@plt+0x4296c>
  411704:	lea    rsi,[rip+0x349ff]        # 44610a <strcmp@plt+0x42982>
  41170b:	lea    rdx,[rip+0x34a05]        # 446117 <strcmp@plt+0x4298f>
  411712:	call   4321d0 <strcmp@plt+0x2ea48>
  411717:	nop    WORD PTR [rax+rax*1+0x0]
  411720:	push   rbp
  411721:	push   r15
  411723:	push   r14
  411725:	push   r13
  411727:	push   r12
  411729:	push   rbx
  41172a:	sub    rsp,0x188
  411731:	mov    rax,QWORD PTR [rdi+0x8]
  411735:	cmp    rax,QWORD PTR [rip+0x528a4]        # 463fe0 <strcmp@plt+0x60858>
  41173c:	jne    412ee4 <strcmp@plt+0xf75c>
  411742:	mov    r14,rdx
  411745:	mov    rbp,rsi
  411748:	mov    r13,rdi
  41174b:	mov    rdi,rsi
  41174e:	call   420d90 <strcmp@plt+0x1d608>
  411753:	cmp    eax,0x8
  411756:	jne    4117cd <strcmp@plt+0xe045>
  411758:	mov    rdi,rbp
  41175b:	call   420dc0 <strcmp@plt+0x1d638>
  411760:	test   BYTE PTR [rax],0x8
  411763:	jne    41180d <strcmp@plt+0xe085>
  411769:	mov    rdi,rbp
  41176c:	call   420df0 <strcmp@plt+0x1d668>
  411771:	cmp    eax,0x1
  411774:	jne    412a27 <strcmp@plt+0xf29f>
  41177a:	lea    rbx,[rsp+0x60]
  41177f:	mov    rdi,rbp
  411782:	mov    rsi,rbx
  411785:	call   433490 <strcmp@plt+0x2fd08>
  41178a:	movzx  esi,WORD PTR [rsp+0xa2]
  411792:	movzx  edx,WORD PTR [rsp+0xa0]
  41179a:	lea    rcx,[rsp+0x80]
  4117a2:	lea    rdi,[rsp+0x140]
  4117aa:	mov    r8,rbx
  4117ad:	call   435600 <strcmp@plt+0x31e78>
  4117b2:	movzx  r15d,WORD PTR [rbp+0x1e]
  4117b7:	cmp    r15,0xffff
  4117be:	je     412895 <strcmp@plt+0xf10d>
  4117c4:	add    r15,QWORD PTR [rbp+0x30]
  4117c8:	jmp    412898 <strcmp@plt+0xf110>
  4117cd:	mov    ebx,eax
  4117cf:	mov    r12,rbp
  4117d2:	xor    r15d,r15d
  4117d5:	mov    rdx,r14
  4117d8:	xor    ebp,ebp
  4117da:	lea    eax,[rbx-0x1]
  4117dd:	cmp    eax,0x6
  4117e0:	ja     411849 <strcmp@plt+0xe0c1>
  4117e2:	lea    rcx,[rip+0x3480f]        # 445ff8 <strcmp@plt+0x42870>
  4117e9:	movsxd rax,DWORD PTR [rcx+rax*4]
  4117ed:	add    rax,rcx
  4117f0:	jmp    rax
  4117f2:	lea    rax,[rip+0x535b7]        # 464db0 <strcmp@plt+0x61628>
  4117f9:	mov    eax,DWORD PTR [rax]
  4117fb:	cmp    eax,0x3
  4117fe:	jl     412a10 <strcmp@plt+0xf288>
  411804:	lea    rsi,[rip+0x34a55]        # 446260 <strcmp@plt+0x42ad8>
  41180b:	jmp    411862 <strcmp@plt+0xe0da>
  41180d:	mov    rdi,rbp
  411810:	call   422900 <strcmp@plt+0x1f178>
  411815:	lea    rax,[rip+0x53594]        # 464db0 <strcmp@plt+0x61628>
  41181c:	cmp    DWORD PTR [rax],0x2
  41181f:	jl     412a27 <strcmp@plt+0xf29f>
  411825:	mov    rdi,rbp
  411828:	call   422900 <strcmp@plt+0x1f178>
  41182d:	mov    ecx,eax
  41182f:	lea    rsi,[rip+0x34058]        # 44588e <strcmp@plt+0x42106>
  411836:	mov    edi,0x6
  41183b:	xor    eax,eax
  41183d:	mov    edx,ecx
  41183f:	call   42e800 <strcmp@plt+0x2b078>
  411844:	jmp    412a27 <strcmp@plt+0xf29f>
  411849:	lea    rax,[rip+0x53560]        # 464db0 <strcmp@plt+0x61628>
  411850:	mov    eax,DWORD PTR [rax]
  411852:	cmp    eax,0x3
  411855:	jl     412a10 <strcmp@plt+0xf288>
  41185b:	lea    rsi,[rip+0x34a3d]        # 44629f <strcmp@plt+0x42b17>
  411862:	mov    edi,0x7
  411867:	xor    eax,eax
  411869:	mov    edx,ebx
  41186b:	call   42e800 <strcmp@plt+0x2b078>
  411870:	jmp    412a07 <strcmp@plt+0xf27f>
  411875:	test   r15,r15
  411878:	je     4128ed <strcmp@plt+0xf165>
  41187e:	mov    QWORD PTR [rsp+0x50],rdx
  411883:	vmovups ymm0,YMMWORD PTR [r12]
  411889:	mov    QWORD PTR [rsp+0x48],r12
  41188e:	vmovups ymm1,YMMWORD PTR [r12+0x20]
  411895:	vmovups YMMWORD PTR [rsp+0x120],ymm1
  41189e:	vmovups YMMWORD PTR [rsp+0x100],ymm0
  4118a7:	movzx  eax,WORD PTR [r15]
  4118ab:	mov    DWORD PTR [rsp+0x28],eax
  4118af:	xor    eax,eax
  4118b1:	vzeroupper 
  4118b4:	call   422f90 <strcmp@plt+0x1f808>
  4118b9:	mov    r14,rax
  4118bc:	lea    rbx,[rsp+0x100]
  4118c4:	mov    rdi,rbx
  4118c7:	call   4216c0 <strcmp@plt+0x1df38>
  4118cc:	mov    r12,rax
  4118cf:	mov    rdi,rbx
  4118d2:	mov    rsi,r14
  4118d5:	call   420f70 <strcmp@plt+0x1d7e8>
  4118da:	cmp    eax,0x1
  4118dd:	jne    4129e1 <strcmp@plt+0xf259>
  4118e3:	movzx  ecx,WORD PTR [r12]
  4118e8:	movzx  eax,BYTE PTR [r12+0x2]
  4118ee:	shl    eax,0x10
  4118f1:	or     eax,ecx
  4118f3:	test   al,0x2
  4118f5:	jne    412a2e <strcmp@plt+0xf2a6>
  4118fb:	test   al,0x1
  4118fd:	jne    412ac1 <strcmp@plt+0xf339>
  411903:	mov    QWORD PTR [rsp+0x40],r14
  411908:	mov    QWORD PTR [rsp+0x18],r13
  41190d:	lea    rdi,[rip+0x1168c]        # 422fa0 <strcmp@plt+0x1f818>
  411914:	call   42bc00 <strcmp@plt+0x28478>
  411919:	lea    rdi,[rsp+0x100]
  411921:	mov    QWORD PTR [rsp+0x38],rax
  411926:	mov    rsi,rax
  411929:	call   420fe0 <strcmp@plt+0x1d858>
  41192e:	cmp    BYTE PTR [r12+0x3],0x0
  411934:	je     412c56 <strcmp@plt+0xf4ce>
  41193a:	xor    ebx,ebx
  41193c:	xor    r14d,r14d
  41193f:	mov    QWORD PTR [rsp+0x30],rbp
  411944:	mov    QWORD PTR [rsp+0x10],r12
  411949:	xor    eax,eax
  41194b:	call   422f90 <strcmp@plt+0x1f808>
  411950:	mov    r13,rax
  411953:	lea    rdi,[rsp+0x100]
  41195b:	mov    rsi,rax
  41195e:	call   420fa0 <strcmp@plt+0x1d818>
  411963:	cmp    eax,0x1
  411966:	jne    412dc1 <strcmp@plt+0xf639>
  41196c:	mov    QWORD PTR [rsp+0x20],rbx
  411971:	mov    rbx,QWORD PTR [rsp+0x18]
  411976:	mov    rdi,QWORD PTR [rbx+0x18]
  41197a:	mov    rsi,r13
  41197d:	call   42fcb0 <strcmp@plt+0x2c528>
  411982:	mov    r15,rax
  411985:	mov    rdi,QWORD PTR [rbx+0x20]
  411989:	mov    rsi,r13
  41198c:	call   42fcb0 <strcmp@plt+0x2c528>
  411991:	mov    rbp,rax
  411994:	mov    rax,r15
  411997:	or     rax,rbp
  41199a:	je     411a64 <strcmp@plt+0xe2dc>
  4119a0:	test   rbp,rbp
  4119a3:	mov    DWORD PTR [rsp+0x8],r14d
  4119a8:	je     411c69 <strcmp@plt+0xe4e1>
  4119ae:	test   BYTE PTR [rsp+0x28],0x4
  4119b3:	je     411e79 <strcmp@plt+0xe6f1>
  4119b9:	mov    r14,QWORD PTR [rbp+0x0]
  4119bd:	xor    r12d,r12d
  4119c0:	cmp    BYTE PTR [r15+0x19],0x0
  4119c5:	sete   r12b
  4119c9:	mov    edi,0x6
  4119ce:	xor    eax,eax
  4119d0:	call   4221a0 <strcmp@plt+0x1ea18>
  4119d5:	mov    rbx,rax
  4119d8:	mov    r9,QWORD PTR [r15+0x20]
  4119dc:	mov    esi,0x5a0
  4119e1:	mov    edx,0x2
  4119e6:	mov    ecx,0x1
  4119eb:	mov    rdi,r14
  4119ee:	mov    r8d,r12d
  4119f1:	mov    r14,QWORD PTR [rsp+0x30]
  4119f6:	push   r14
  4119f8:	push   0x0
  4119fa:	call   429ac0 <strcmp@plt+0x26338>
  4119ff:	add    rsp,0x10
  411a03:	mov    r12,rax
  411a06:	mov    rdi,rbx
  411a09:	mov    rsi,rax
  411a0c:	call   421b60 <strcmp@plt+0x1e3d8>
  411a11:	movzx  eax,WORD PTR [rbx+0x24]
  411a15:	mov    rcx,QWORD PTR [rbx+0x30]
  411a19:	mov    rdx,QWORD PTR [rsp+0x10]
  411a1e:	mov    rdx,QWORD PTR [rdx+0x4]
  411a22:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  411a27:	mov    rdi,QWORD PTR [rsp+0x18]
  411a2c:	mov    rsi,rbx
  411a2f:	mov    rdx,r14
  411a32:	call   407ab0 <strcmp@plt+0x4328>
  411a37:	lea    rcx,[rip+0x53372]        # 464db0 <strcmp@plt+0x61628>
  411a3e:	mov    ecx,DWORD PTR [rcx]
  411a40:	cmp    eax,0x1
  411a43:	jne    411e48 <strcmp@plt+0xe6c0>
  411a49:	test   ecx,ecx
  411a4b:	jle    411e5f <strcmp@plt+0xe6d7>
  411a51:	mov    edi,0x5
  411a56:	xor    eax,eax
  411a58:	lea    rsi,[rip+0x34a24]        # 446483 <strcmp@plt+0x42cfb>
  411a5f:	jmp    411e5a <strcmp@plt+0xe6d2>
  411a64:	test   BYTE PTR [rsp+0x28],0x4
  411a69:	jne    411ba2 <strcmp@plt+0xe41a>
  411a6f:	mov    DWORD PTR [rsp+0x8],r14d
  411a74:	mov    rax,QWORD PTR [rsp+0x18]
  411a79:	mov    rdi,QWORD PTR [rax+0x18]
  411a7d:	mov    rsi,r13
  411a80:	call   42fcf0 <strcmp@plt+0x2c568>
  411a85:	mov    r15,rax
  411a88:	mov    rdi,r13
  411a8b:	call   427a90 <strcmp@plt+0x24308>
  411a90:	xor    edx,edx
  411a92:	test   eax,eax
  411a94:	sete   dl
  411a97:	mov    rax,QWORD PTR [rsp+0x10]
  411a9c:	mov    r8,QWORD PTR [rax+0x4]
  411aa0:	mov    esi,0xf
  411aa5:	mov    ecx,0x1
  411aaa:	mov    rdi,r15
  411aad:	call   422380 <strcmp@plt+0x1ebf8>
  411ab2:	mov    r12,rax
  411ab5:	lea    rax,[rip+0x532f4]        # 464db0 <strcmp@plt+0x61628>
  411abc:	cmp    DWORD PTR [rax],0x0
  411abf:	mov    rbp,QWORD PTR [rsp+0x30]
  411ac4:	jle    411b1f <strcmp@plt+0xe397>
  411ac6:	mov    rdi,r13
  411ac9:	call   423130 <strcmp@plt+0x1f9a8>
  411ace:	mov    rcx,rax
  411ad1:	mov    edi,0x5
  411ad6:	xor    eax,eax
  411ad8:	lea    rsi,[rip+0x34938]        # 446417 <strcmp@plt+0x42c8f>
  411adf:	mov    rdx,rcx
  411ae2:	call   42e800 <strcmp@plt+0x2b078>
  411ae7:	lea    rax,[rip+0x532c2]        # 464db0 <strcmp@plt+0x61628>
  411aee:	cmp    DWORD PTR [rax],0x2
  411af1:	jl     411b1f <strcmp@plt+0xe397>
  411af3:	mov    rdi,r12
  411af6:	call   422870 <strcmp@plt+0x1f0e8>
  411afb:	mov    rbx,rax
  411afe:	mov    rdi,r13
  411b01:	call   423130 <strcmp@plt+0x1f9a8>
  411b06:	mov    rcx,rax
  411b09:	mov    edi,0x6
  411b0e:	xor    eax,eax
  411b10:	lea    rsi,[rip+0x348ea]        # 446401 <strcmp@plt+0x42c79>
  411b17:	mov    rdx,rbx
  411b1a:	call   42e800 <strcmp@plt+0x2b078>
  411b1f:	mov    rbx,QWORD PTR [rsp+0x18]
  411b24:	mov    rdi,rbx
  411b27:	mov    rsi,QWORD PTR [rsp+0x38]
  411b2c:	mov    rdx,QWORD PTR [rsp+0x50]
  411b31:	mov    rcx,rbp
  411b34:	lea    r14,[rsp+0xb0]
  411b3c:	mov    r8,r14
  411b3f:	call   407c00 <strcmp@plt+0x4478>
  411b44:	cmp    eax,0x1
  411b47:	jne    412d9f <strcmp@plt+0xf617>
  411b4d:	mov    rdi,rbx
  411b50:	mov    rbx,r12
  411b53:	mov    rsi,r12
  411b56:	mov    rdx,r14
  411b59:	call   407ab0 <strcmp@plt+0x4328>
  411b5e:	cmp    eax,0x1
  411b61:	je     411b83 <strcmp@plt+0xe3fb>
  411b63:	lea    rax,[rip+0x53246]        # 464db0 <strcmp@plt+0x61628>
  411b6a:	mov    eax,DWORD PTR [rax]
  411b6c:	test   eax,eax
  411b6e:	jle    411b83 <strcmp@plt+0xe3fb>
  411b70:	mov    edi,0x5
  411b75:	xor    eax,eax
  411b77:	lea    rsi,[rip+0x348d0]        # 44644e <strcmp@plt+0x42cc6>
  411b7e:	call   42e800 <strcmp@plt+0x2b078>
  411b83:	test   rbx,rbx
  411b86:	mov    r14d,DWORD PTR [rsp+0x8]
  411b8b:	je     411b95 <strcmp@plt+0xe40d>
  411b8d:	mov    rdi,rbx
  411b90:	call   42e010 <strcmp@plt+0x2a888>
  411b95:	mov    rdi,r15
  411b98:	call   422fa0 <strcmp@plt+0x1f818>
  411b9d:	jmp    411c57 <strcmp@plt+0xe4cf>
  411ba2:	mov    rax,QWORD PTR [rsp+0x10]
  411ba7:	mov    r9,QWORD PTR [rax+0x4]
  411bab:	xor    esi,esi
  411bad:	mov    edx,0x5
  411bb2:	xor    ecx,ecx
  411bb4:	mov    r8d,0x1
  411bba:	mov    rdi,r13
  411bbd:	call   422400 <strcmp@plt+0x1ec78>
  411bc2:	mov    rbx,rax
  411bc5:	lea    rax,[rip+0x531e4]        # 464db0 <strcmp@plt+0x61628>
  411bcc:	cmp    DWORD PTR [rax],0x0
  411bcf:	mov    rbp,QWORD PTR [rsp+0x30]
  411bd4:	jle    411c35 <strcmp@plt+0xe4ad>
  411bd6:	mov    rdi,r13
  411bd9:	call   423130 <strcmp@plt+0x1f9a8>
  411bde:	mov    rcx,rax
  411be1:	mov    edi,0x5
  411be6:	xor    eax,eax
  411be8:	lea    rsi,[rip+0x347b8]        # 4463a7 <strcmp@plt+0x42c1f>
  411bef:	mov    rdx,rcx
  411bf2:	call   42e800 <strcmp@plt+0x2b078>
  411bf7:	lea    rax,[rip+0x531b2]        # 464db0 <strcmp@plt+0x61628>
  411bfe:	cmp    DWORD PTR [rax],0x2
  411c01:	jl     411c35 <strcmp@plt+0xe4ad>
  411c03:	mov    rdi,rbx
  411c06:	call   422870 <strcmp@plt+0x1f0e8>
  411c0b:	mov    r15,rbp
  411c0e:	mov    rbp,rax
  411c11:	mov    rdi,r13
  411c14:	call   423130 <strcmp@plt+0x1f9a8>
  411c19:	mov    rcx,rax
  411c1c:	mov    edi,0x6
  411c21:	xor    eax,eax
  411c23:	lea    rsi,[rip+0x347d7]        # 446401 <strcmp@plt+0x42c79>
  411c2a:	mov    rdx,rbp
  411c2d:	mov    rbp,r15
  411c30:	call   42e800 <strcmp@plt+0x2b078>
  411c35:	mov    rdi,QWORD PTR [rsp+0x18]
  411c3a:	mov    rsi,rbx
  411c3d:	mov    rdx,rbp
  411c40:	call   407ab0 <strcmp@plt+0x4328>
  411c45:	test   rbx,rbx
  411c48:	je     411c52 <strcmp@plt+0xe4ca>
  411c4a:	mov    rdi,rbx
  411c4d:	call   42e010 <strcmp@plt+0x2a888>
  411c52:	mov    rbx,QWORD PTR [rsp+0x20]
  411c57:	mov    rdi,r13
  411c5a:	call   422fa0 <strcmp@plt+0x1f818>
  411c5f:	mov    r12,QWORD PTR [rsp+0x10]
  411c64:	jmp    411fcd <strcmp@plt+0xe845>
  411c69:	cmp    BYTE PTR [r15+0x9],0x0
  411c6e:	mov    r14,r13
  411c71:	jne    411c76 <strcmp@plt+0xe4ee>
  411c73:	mov    r14,QWORD PTR [r15]
  411c76:	test   BYTE PTR [rsp+0x28],0x4
  411c7b:	jne    411d9e <strcmp@plt+0xe616>
  411c81:	mov    rax,QWORD PTR [rsp+0x10]
  411c86:	mov    r8,QWORD PTR [rax+0x4]
  411c8a:	mov    esi,0x1
  411c8f:	mov    edx,0x1
  411c94:	mov    ecx,0x1
  411c99:	mov    rdi,r14
  411c9c:	call   422380 <strcmp@plt+0x1ebf8>
  411ca1:	mov    QWORD PTR [rsp+0x20],rax
  411ca6:	lea    rax,[rip+0x53103]        # 464db0 <strcmp@plt+0x61628>
  411cad:	cmp    DWORD PTR [rax],0x0
  411cb0:	mov    rcx,QWORD PTR [rsp+0x50]
  411cb5:	jle    411d1b <strcmp@plt+0xe593>
  411cb7:	mov    rdi,r13
  411cba:	mov    rbp,rcx
  411cbd:	call   423130 <strcmp@plt+0x1f9a8>
  411cc2:	mov    rcx,rax
  411cc5:	mov    edi,0x5
  411cca:	xor    eax,eax
  411ccc:	lea    rsi,[rip+0x347c3]        # 446496 <strcmp@plt+0x42d0e>
  411cd3:	mov    rdx,rcx
  411cd6:	call   42e800 <strcmp@plt+0x2b078>
  411cdb:	mov    rcx,rbp
  411cde:	lea    rax,[rip+0x530cb]        # 464db0 <strcmp@plt+0x61628>
  411ce5:	cmp    DWORD PTR [rax],0x2
  411ce8:	jl     411d1b <strcmp@plt+0xe593>
  411cea:	mov    rdi,QWORD PTR [rsp+0x20]
  411cef:	call   422870 <strcmp@plt+0x1f0e8>
  411cf4:	mov    rbx,rax
  411cf7:	mov    rdi,r14
  411cfa:	call   423130 <strcmp@plt+0x1f9a8>
  411cff:	mov    rcx,rax
  411d02:	mov    edi,0x6
  411d07:	xor    eax,eax
  411d09:	lea    rsi,[rip+0x346f1]        # 446401 <strcmp@plt+0x42c79>
  411d10:	mov    rdx,rbx
  411d13:	call   42e800 <strcmp@plt+0x2b078>
  411d18:	mov    rcx,rbp
  411d1b:	mov    rbx,QWORD PTR [rsp+0x18]
  411d20:	mov    rdi,rbx
  411d23:	mov    rsi,QWORD PTR [rsp+0x38]
  411d28:	mov    rdx,rcx
  411d2b:	mov    rbp,QWORD PTR [rsp+0x30]
  411d30:	mov    rcx,rbp
  411d33:	lea    r12,[rsp+0xb0]
  411d3b:	mov    r8,r12
  411d3e:	call   407c00 <strcmp@plt+0x4478>
  411d43:	cmp    eax,0x1
  411d46:	jne    412ebb <strcmp@plt+0xf733>
  411d4c:	mov    rdi,rbx
  411d4f:	mov    rbx,QWORD PTR [rsp+0x20]
  411d54:	mov    rsi,rbx
  411d57:	mov    rdx,r12
  411d5a:	call   407ab0 <strcmp@plt+0x4328>
  411d5f:	cmp    eax,0x1
  411d62:	je     411d84 <strcmp@plt+0xe5fc>
  411d64:	lea    rax,[rip+0x53045]        # 464db0 <strcmp@plt+0x61628>
  411d6b:	mov    eax,DWORD PTR [rax]
  411d6d:	test   eax,eax
  411d6f:	jle    411d84 <strcmp@plt+0xe5fc>
  411d71:	mov    edi,0x5
  411d76:	xor    eax,eax
  411d78:	lea    rsi,[rip+0x346cf]        # 44644e <strcmp@plt+0x42cc6>
  411d7f:	call   42e800 <strcmp@plt+0x2b078>
  411d84:	test   rbx,rbx
  411d87:	mov    r12,QWORD PTR [rsp+0x10]
  411d8c:	mov    r14d,DWORD PTR [rsp+0x8]
  411d91:	jne    411f80 <strcmp@plt+0xe7f8>
  411d97:	xor    ebx,ebx
  411d99:	jmp    411fc5 <strcmp@plt+0xe83d>
  411d9e:	xor    ebp,ebp
  411da0:	cmp    BYTE PTR [r15+0x19],0x0
  411da5:	sete   bpl
  411da9:	mov    edi,0x6
  411dae:	xor    eax,eax
  411db0:	call   4221a0 <strcmp@plt+0x1ea18>
  411db5:	mov    rbx,rax
  411db8:	mov    r9,QWORD PTR [r15+0x20]
  411dbc:	mov    esi,0xf
  411dc1:	mov    edx,0x3
  411dc6:	mov    ecx,0x1
  411dcb:	mov    rdi,r14
  411dce:	mov    r8d,ebp
  411dd1:	mov    rbp,QWORD PTR [rsp+0x30]
  411dd6:	push   rbp
  411dd7:	push   0x0
  411dd9:	call   429ac0 <strcmp@plt+0x26338>
  411dde:	add    rsp,0x10
  411de2:	mov    r15,rax
  411de5:	mov    rdi,rbx
  411de8:	mov    rsi,rax
  411deb:	call   421b60 <strcmp@plt+0x1e3d8>
  411df0:	movzx  eax,WORD PTR [rbx+0x24]
  411df4:	mov    rcx,QWORD PTR [rbx+0x30]
  411df8:	mov    rdx,QWORD PTR [rsp+0x10]
  411dfd:	mov    rdx,QWORD PTR [rdx+0x4]
  411e01:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  411e06:	mov    rdi,QWORD PTR [rsp+0x18]
  411e0b:	mov    rsi,rbx
  411e0e:	mov    rdx,rbp
  411e11:	call   407ab0 <strcmp@plt+0x4328>
  411e16:	lea    rcx,[rip+0x52f93]        # 464db0 <strcmp@plt+0x61628>
  411e1d:	mov    ecx,DWORD PTR [rcx]
  411e1f:	cmp    eax,0x1
  411e22:	jne    411f8a <strcmp@plt+0xe802>
  411e28:	test   ecx,ecx
  411e2a:	mov    r14d,DWORD PTR [rsp+0x8]
  411e2f:	jle    411fa6 <strcmp@plt+0xe81e>
  411e35:	mov    edi,0x5
  411e3a:	xor    eax,eax
  411e3c:	lea    rsi,[rip+0x34640]        # 446483 <strcmp@plt+0x42cfb>
  411e43:	jmp    411fa1 <strcmp@plt+0xe819>
  411e48:	test   ecx,ecx
  411e4a:	jle    411e5f <strcmp@plt+0xe6d7>
  411e4c:	mov    edi,0x5
  411e51:	xor    eax,eax
  411e53:	lea    rsi,[rip+0x3460d]        # 446467 <strcmp@plt+0x42cdf>
  411e5a:	call   42e800 <strcmp@plt+0x2b078>
  411e5f:	mov    rdi,r12
  411e62:	call   429dd0 <strcmp@plt+0x26648>
  411e67:	test   rbx,rbx
  411e6a:	mov    r14d,DWORD PTR [rsp+0x8]
  411e6f:	je     411e79 <strcmp@plt+0xe6f1>
  411e71:	mov    rdi,rbx
  411e74:	call   42e010 <strcmp@plt+0x2a888>
  411e79:	mov    rbx,QWORD PTR [rbp+0x0]
  411e7d:	test   r15,r15
  411e80:	je     411e93 <strcmp@plt+0xe70b>
  411e82:	cmp    BYTE PTR [r15+0x8],0x0
  411e87:	jne    411e93 <strcmp@plt+0xe70b>
  411e89:	cmp    BYTE PTR [rbp+0x8],0x0
  411e8d:	je     411fe5 <strcmp@plt+0xe85d>
  411e93:	lea    rax,[rip+0x52f16]        # 464db0 <strcmp@plt+0x61628>
  411e9a:	cmp    DWORD PTR [rax],0x0
  411e9d:	jle    411ecb <strcmp@plt+0xe743>
  411e9f:	mov    rdi,r13
  411ea2:	call   423130 <strcmp@plt+0x1f9a8>
  411ea7:	mov    rbp,rax
  411eaa:	mov    rdi,rbx
  411ead:	call   423130 <strcmp@plt+0x1f9a8>
  411eb2:	mov    rcx,rax
  411eb5:	mov    edi,0x5
  411eba:	xor    eax,eax
  411ebc:	lea    rsi,[rip+0x345fa]        # 4464bd <strcmp@plt+0x42d35>
  411ec3:	mov    rdx,rbp
  411ec6:	call   42e800 <strcmp@plt+0x2b078>
  411ecb:	mov    edi,0x2
  411ed0:	xor    eax,eax
  411ed2:	call   4221a0 <strcmp@plt+0x1ea18>
  411ed7:	mov    r12,rax
  411eda:	xor    edx,edx
  411edc:	mov    rdi,rax
  411edf:	mov    rsi,rbx
  411ee2:	call   421860 <strcmp@plt+0x1e0d8>
  411ee7:	and    BYTE PTR [rax+0x6],0xef
  411eeb:	movzx  eax,WORD PTR [r12+0x24]
  411ef1:	mov    rcx,QWORD PTR [r12+0x30]
  411ef6:	and    BYTE PTR [rcx+rax*1],0xf7
  411efa:	mov    rdx,QWORD PTR [rsp+0x10]
  411eff:	mov    rdx,QWORD PTR [rdx+0x4]
  411f03:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  411f08:	mov    rbx,QWORD PTR [rsp+0x18]
  411f0d:	mov    rdi,rbx
  411f10:	mov    rsi,QWORD PTR [rsp+0x38]
  411f15:	mov    rdx,QWORD PTR [rsp+0x50]
  411f1a:	mov    rbp,QWORD PTR [rsp+0x30]
  411f1f:	mov    rcx,rbp
  411f22:	lea    r14,[rsp+0xb0]
  411f2a:	mov    r8,r14
  411f2d:	call   407c00 <strcmp@plt+0x4478>
  411f32:	cmp    eax,0x1
  411f35:	jne    412d9f <strcmp@plt+0xf617>
  411f3b:	mov    rdi,rbx
  411f3e:	mov    rsi,r12
  411f41:	mov    rdx,r14
  411f44:	call   407ab0 <strcmp@plt+0x4328>
  411f49:	cmp    eax,0x1
  411f4c:	mov    rbx,r12
  411f4f:	je     411f71 <strcmp@plt+0xe7e9>
  411f51:	lea    rax,[rip+0x52e58]        # 464db0 <strcmp@plt+0x61628>
  411f58:	mov    eax,DWORD PTR [rax]
  411f5a:	test   eax,eax
  411f5c:	jle    411f71 <strcmp@plt+0xe7e9>
  411f5e:	mov    edi,0x5
  411f63:	xor    eax,eax
  411f65:	lea    rsi,[rip+0x344e2]        # 44644e <strcmp@plt+0x42cc6>
  411f6c:	call   42e800 <strcmp@plt+0x2b078>
  411f71:	test   rbx,rbx
  411f74:	mov    r12,QWORD PTR [rsp+0x10]
  411f79:	mov    r14d,DWORD PTR [rsp+0x8]
  411f7e:	je     411fc5 <strcmp@plt+0xe83d>
  411f80:	mov    rdi,rbx
  411f83:	call   42e010 <strcmp@plt+0x2a888>
  411f88:	jmp    411fc5 <strcmp@plt+0xe83d>
  411f8a:	test   ecx,ecx
  411f8c:	mov    r14d,DWORD PTR [rsp+0x8]
  411f91:	jle    411fa6 <strcmp@plt+0xe81e>
  411f93:	mov    edi,0x5
  411f98:	xor    eax,eax
  411f9a:	lea    rsi,[rip+0x344c6]        # 446467 <strcmp@plt+0x42cdf>
  411fa1:	call   42e800 <strcmp@plt+0x2b078>
  411fa6:	mov    rdi,r15
  411fa9:	call   429dd0 <strcmp@plt+0x26648>
  411fae:	test   rbx,rbx
  411fb1:	je     411fbb <strcmp@plt+0xe833>
  411fb3:	mov    rdi,rbx
  411fb6:	call   42e010 <strcmp@plt+0x2a888>
  411fbb:	mov    r12,QWORD PTR [rsp+0x10]
  411fc0:	mov    rbx,QWORD PTR [rsp+0x20]
  411fc5:	mov    rdi,r13
  411fc8:	call   422fa0 <strcmp@plt+0x1f818>
  411fcd:	add    r14d,0x1
  411fd1:	movzx  eax,BYTE PTR [r12+0x3]
  411fd7:	cmp    r14d,eax
  411fda:	jb     411949 <strcmp@plt+0xe1c1>
  411fe0:	jmp    412c56 <strcmp@plt+0xf4ce>
  411fe5:	mov    rdi,QWORD PTR [rsp+0x18]
  411fea:	call   4079e0 <strcmp@plt+0x4258>
  411fef:	mov    rbp,rax
  411ff2:	mov    rdi,rax
  411ff5:	call   407860 <strcmp@plt+0x40d8>
  411ffa:	test   al,0x1
  411ffc:	je     412010 <strcmp@plt+0xe888>
  411ffe:	mov    esi,0x2
  412003:	mov    rdi,rbx
  412006:	call   413060 <strcmp@plt+0xf8d8>
  41200b:	test   rax,rax
  41200e:	jne    41202e <strcmp@plt+0xe8a6>
  412010:	mov    rdi,rbp
  412013:	call   407860 <strcmp@plt+0x40d8>
  412018:	test   al,0x2
  41201a:	je     412066 <strcmp@plt+0xe8de>
  41201c:	mov    esi,0xa
  412021:	mov    rdi,rbx
  412024:	call   413060 <strcmp@plt+0xf8d8>
  412029:	test   rax,rax
  41202c:	je     412066 <strcmp@plt+0xe8de>
  41202e:	mov    rdi,QWORD PTR [rax]
  412031:	call   4232e0 <strcmp@plt+0x1fb58>
  412036:	mov    rbx,rax
  412039:	cmp    DWORD PTR [rax+0x18],0x3
  41203d:	mov    r15,QWORD PTR [rsp+0x48]
  412042:	jne    4120bf <strcmp@plt+0xe937>
  412044:	mov    rdi,rbx
  412047:	call   426ab0 <strcmp@plt+0x23328>
  41204c:	cmp    eax,0xa
  41204f:	jne    41208e <strcmp@plt+0xe906>
  412051:	mov    rdi,rbx
  412054:	call   428370 <strcmp@plt+0x24be8>
  412059:	mov    rax,QWORD PTR [rax]
  41205c:	mov    rax,QWORD PTR [rax+0x10]
  412060:	mov    rbx,QWORD PTR [rax+0x8]
  412064:	jmp    4120bf <strcmp@plt+0xe937>
  412066:	lea    rax,[rip+0x52d43]        # 464db0 <strcmp@plt+0x61628>
  41206d:	cmp    DWORD PTR [rax],0x0
  412070:	jle    41212e <strcmp@plt+0xe9a6>
  412076:	mov    edi,0x5
  41207b:	xor    eax,eax
  41207d:	lea    rsi,[rip+0x34482]        # 446506 <strcmp@plt+0x42d7e>
  412084:	call   42e800 <strcmp@plt+0x2b078>
  412089:	jmp    41212e <strcmp@plt+0xe9a6>
  41208e:	lea    rax,[rip+0x52d1b]        # 464db0 <strcmp@plt+0x61628>
  412095:	cmp    DWORD PTR [rax],0x0
  412098:	jle    412149 <strcmp@plt+0xe9c1>
  41209e:	mov    rdi,rbx
  4120a1:	call   426ab0 <strcmp@plt+0x23328>
  4120a6:	mov    ecx,eax
  4120a8:	mov    edi,0x5
  4120ad:	xor    eax,eax
  4120af:	lea    rsi,[rip+0x344c8]        # 44657e <strcmp@plt+0x42df6>
  4120b6:	mov    edx,ecx
  4120b8:	call   42e800 <strcmp@plt+0x2b078>
  4120bd:	xor    ebx,ebx
  4120bf:	lea    rax,[rip+0x52cea]        # 464db0 <strcmp@plt+0x61628>
  4120c6:	cmp    DWORD PTR [rax],0x2
  4120c9:	jle    4120ec <strcmp@plt+0xe964>
  4120cb:	mov    rdi,rbx
  4120ce:	call   423130 <strcmp@plt+0x1f9a8>
  4120d3:	mov    rcx,rax
  4120d6:	mov    edi,0x7
  4120db:	xor    eax,eax
  4120dd:	lea    rsi,[rip+0x34463]        # 446547 <strcmp@plt+0x42dbf>
  4120e4:	mov    rdx,rcx
  4120e7:	call   42e800 <strcmp@plt+0x2b078>
  4120ec:	movzx  eax,WORD PTR [r15+0x1e]
  4120f1:	mov    rcx,QWORD PTR [r15+0x30]
  4120f5:	and    WORD PTR [rcx+rax*1],0xfffb
  4120fa:	mov    rdi,r15
  4120fd:	call   42e590 <strcmp@plt+0x2ae08>
  412102:	mov    esi,0x10f6
  412107:	mov    edx,0x10f6
  41210c:	xor    ecx,ecx
  41210e:	lea    rbp,[rsp+0x60]
  412113:	mov    rdi,rbp
  412116:	mov    r8,rbx
  412119:	call   435600 <strcmp@plt+0x31e78>
  41211e:	mov    rdi,QWORD PTR [rsp+0x18]
  412123:	mov    rsi,r15
  412126:	mov    rdx,rbp
  412129:	call   407ab0 <strcmp@plt+0x4328>
  41212e:	mov    rbx,QWORD PTR [rsp+0x20]
  412133:	test   rbx,rbx
  412136:	je     411c57 <strcmp@plt+0xe4cf>
  41213c:	mov    rdi,rbx
  41213f:	call   42e010 <strcmp@plt+0x2a888>
  412144:	jmp    411c57 <strcmp@plt+0xe4cf>
  412149:	xor    ebx,ebx
  41214b:	jmp    4120ec <strcmp@plt+0xe964>
  41214d:	mov    QWORD PTR [rsp+0x58],0x0
  412156:	vmovups ymm0,YMMWORD PTR [r12]
  41215c:	mov    QWORD PTR [rsp+0x48],r12
  412161:	vmovups ymm1,YMMWORD PTR [r12+0x20]
  412168:	vmovups YMMWORD PTR [rsp+0x80],ymm1
  412171:	vmovups YMMWORD PTR [rsp+0x60],ymm0
  412177:	lea    rdi,[rsp+0x60]
  41217c:	mov    QWORD PTR [rsp+0x40],r15
  412181:	mov    r15,rdx
  412184:	vzeroupper 
  412187:	call   4216c0 <strcmp@plt+0x1df38>
  41218c:	mov    rbx,rax
  41218f:	cmp    QWORD PTR [rsp+0x40],0x0
  412195:	cmove  rbp,r15
  412199:	mov    r14,rbp
  41219c:	test   BYTE PTR [rax+0x2],0x1
  4121a0:	jne    41234a <strcmp@plt+0xebc2>
  4121a6:	mov    rcx,r15
  4121a9:	xor    ebp,ebp
  4121ab:	jmp    412369 <strcmp@plt+0xebe1>
  4121b0:	vmovups ymm0,YMMWORD PTR [r12]
  4121b6:	mov    rbp,r12
  4121b9:	vmovups ymm1,YMMWORD PTR [r12+0x20]
  4121c0:	vmovups YMMWORD PTR [rsp+0xd0],ymm1
  4121c9:	vmovups YMMWORD PTR [rsp+0xb0],ymm0
  4121d2:	lea    rdi,[rsp+0xb0]
  4121da:	vzeroupper 
  4121dd:	call   4216c0 <strcmp@plt+0x1df38>
  4121e2:	test   BYTE PTR [rax],0x8
  4121e5:	jne    41287c <strcmp@plt+0xf0f4>
  4121eb:	mov    QWORD PTR [rsp+0x28],rax
  4121f0:	mov    QWORD PTR [rsp+0x18],r13
  4121f5:	lea    rbx,[rsp+0xb0]
  4121fd:	mov    rdi,rbx
  412200:	call   422c50 <strcmp@plt+0x1f4c8>
  412205:	mov    QWORD PTR [rsp+0x10],rax
  41220a:	xor    r15d,r15d
  41220d:	xor    eax,eax
  41220f:	call   422f90 <strcmp@plt+0x1f808>
  412214:	lea    rdx,[rsp+0x58]
  412219:	mov    rdi,rbx
  41221c:	mov    rbx,rax
  41221f:	mov    rsi,rax
  412222:	call   421610 <strcmp@plt+0x1de88>
  412227:	mov    r13d,0x0
  41222d:	mov    r12d,0x0
  412233:	cmp    eax,0x1
  412236:	jne    412c93 <strcmp@plt+0xf50b>
  41223c:	mov    r13,QWORD PTR [rsp+0x18]
  412241:	mov    rdi,QWORD PTR [r13+0x18]
  412245:	mov    QWORD PTR [rsp+0x8],rbx
  41224a:	mov    rsi,rbx
  41224d:	call   42fcb0 <strcmp@plt+0x2c528>
  412252:	test   rax,rax
  412255:	je     412a4d <strcmp@plt+0xf2c5>
  41225b:	mov    rbx,rax
  41225e:	mov    rdx,QWORD PTR [rax+0x10]
  412262:	mov    rdi,rbp
  412265:	mov    rsi,QWORD PTR [rsp+0x10]
  41226a:	call   422a80 <strcmp@plt+0x1f2f8>
  41226f:	cmp    eax,0x1
  412272:	jne    412ae8 <strcmp@plt+0xf360>
  412278:	mov    QWORD PTR [rsp+0x10],rbx
  41227d:	call   42bbd0 <strcmp@plt+0x28448>
  412282:	mov    r12,rax
  412285:	mov    rax,QWORD PTR [r13+0x40]
  412289:	mov    rax,QWORD PTR [rax+0x10]
  41228d:	mov    rbx,QWORD PTR [rax+0x8]
  412291:	cmp    rbx,rax
  412294:	je     4122b4 <strcmp@plt+0xeb2c>
  412296:	mov    rax,QWORD PTR [rbx+0x10]
  41229a:	mov    rdi,QWORD PTR [rax+0x8]
  41229e:	mov    rsi,r12
  4122a1:	call   42bcf0 <strcmp@plt+0x28568>
  4122a6:	mov    rbx,QWORD PTR [rbx+0x8]
  4122aa:	mov    rax,QWORD PTR [r13+0x40]
  4122ae:	cmp    rbx,QWORD PTR [rax+0x10]
  4122b2:	jne    412296 <strcmp@plt+0xeb0e>
  4122b4:	lea    rbx,[rsp+0x100]
  4122bc:	xor    esi,esi
  4122be:	mov    rdi,rbx
  4122c1:	call   4231a0 <strcmp@plt+0x1fa18>
  4122c6:	movzx  edx,WORD PTR [r14+0x42]
  4122cb:	lea    rcx,[r14+0x20]
  4122cf:	mov    edi,0x10f6
  4122d4:	mov    rsi,r14
  4122d7:	mov    QWORD PTR [rsp+0x48],rcx
  4122dc:	mov    r8,rbx
  4122df:	mov    r9,r12
  4122e2:	call   4280b0 <strcmp@plt+0x24928>
  4122e7:	mov    rcx,r13
  4122ea:	mov    r13,rax
  4122ed:	mov    rax,QWORD PTR [rsp+0x10]
  4122f2:	mov    edx,DWORD PTR [rax+0xc]
  4122f5:	mov    rax,QWORD PTR [rcx+0x40]
  4122f9:	mov    ecx,DWORD PTR [rax+0x8]
  4122fc:	mov    rbp,QWORD PTR [rsp+0x8]
  412301:	mov    rdi,rbp
  412304:	mov    rsi,r13
  412307:	call   4226a0 <strcmp@plt+0x1ef18>
  41230c:	test   rax,rax
  41230f:	je     412c6f <strcmp@plt+0xf4e7>
  412315:	mov    rbx,rax
  412318:	mov    rdi,r12
  41231b:	call   42c250 <strcmp@plt+0x28ac8>
  412320:	mov    rdi,r13
  412323:	call   422fa0 <strcmp@plt+0x1f818>
  412328:	mov    rdi,rbp
  41232b:	call   422fa0 <strcmp@plt+0x1f818>
  412330:	movzx  esi,WORD PTR [rbx+0x24]
  412334:	cmp    rsi,0xffff
  41233b:	je     412d3b <strcmp@plt+0xf5b3>
  412341:	add    rsi,QWORD PTR [rbx+0x30]
  412345:	jmp    412d3d <strcmp@plt+0xf5b5>
  41234a:	mov    edi,0x4
  41234f:	xor    eax,eax
  412351:	call   4221a0 <strcmp@plt+0x1ea18>
  412356:	mov    rbp,rax
  412359:	mov    esi,0x1
  41235e:	mov    rdi,rax
  412361:	call   4225b0 <strcmp@plt+0x1ee28>
  412366:	mov    rcx,r15
  412369:	mov    QWORD PTR [rsp+0x50],rcx
  41236e:	mov    QWORD PTR [rsp+0x30],r14
  412373:	lea    rdi,[rsp+0x60]
  412378:	call   422c50 <strcmp@plt+0x1f4c8>
  41237d:	mov    QWORD PTR [rsp+0x20],rax
  412382:	cmp    BYTE PTR [rbx+0x3],0x0
  412386:	mov    QWORD PTR [rsp+0x8],rbp
  41238b:	je     412921 <strcmp@plt+0xf199>
  412391:	xor    eax,eax
  412393:	mov    QWORD PTR [rsp+0x38],rax
  412398:	xor    r14d,r14d
  41239b:	xor    eax,eax
  41239d:	mov    QWORD PTR [rsp+0x28],rax
  4123a2:	mov    QWORD PTR [rsp+0x18],r13
  4123a7:	mov    QWORD PTR [rsp+0x10],rbx
  4123ac:	nop    DWORD PTR [rax+0x0]
  4123b0:	xor    eax,eax
  4123b2:	call   428de0 <strcmp@plt+0x25658>
  4123b7:	mov    r15,rax
  4123ba:	lea    rdi,[rsp+0x60]
  4123bf:	mov    rsi,rax
  4123c2:	lea    rdx,[rsp+0x58]
  4123c7:	call   421320 <strcmp@plt+0x1db98>
  4123cc:	cmp    eax,0x1
  4123cf:	jne    412c3b <strcmp@plt+0xf4b3>
  4123d5:	mov    rax,QWORD PTR [r15+0x28]
  4123d9:	mov    rcx,QWORD PTR [rax+0x8]
  4123dd:	cmp    rcx,rax
  4123e0:	je     41242c <strcmp@plt+0xeca4>
  4123e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4123ec:	nop    DWORD PTR [rax+0x0]
  4123f0:	mov    rdx,QWORD PTR [rcx+0x10]
  4123f4:	cmp    DWORD PTR [rdx+0x18],0x0
  4123f8:	je     412423 <strcmp@plt+0xec9b>
  4123fa:	mov    rsi,QWORD PTR [rdx+0x8]
  4123fe:	cmp    rsi,rdx
  412401:	je     412423 <strcmp@plt+0xec9b>
  412403:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41240d:	nop    DWORD PTR [rax]
  412410:	mov    rdi,QWORD PTR [rsi+0x10]
  412414:	mov    WORD PTR [rdi+0x8],0x1
  41241a:	mov    rsi,QWORD PTR [rsi+0x8]
  41241e:	cmp    rsi,rdx
  412421:	jne    412410 <strcmp@plt+0xec88>
  412423:	mov    rcx,QWORD PTR [rcx+0x8]
  412427:	cmp    rcx,rax
  41242a:	jne    4123f0 <strcmp@plt+0xec68>
  41242c:	cmp    BYTE PTR [r15+0x35],0x0
  412431:	jne    412454 <strcmp@plt+0xeccc>
  412433:	mov    rdi,r15
  412436:	call   423130 <strcmp@plt+0x1f9a8>
  41243b:	mov    rcx,rax
  41243e:	mov    edi,0x3
  412443:	xor    eax,eax
  412445:	lea    rsi,[rip+0x34161]        # 4465ad <strcmp@plt+0x42e25>
  41244c:	mov    rdx,rcx
  41244f:	call   42e800 <strcmp@plt+0x2b078>
  412454:	mov    rdi,r15
  412457:	call   4343f0 <strcmp@plt+0x30c68>
  41245c:	mov    rdi,QWORD PTR [r13+0x18]
  412460:	mov    rsi,r15
  412463:	call   42fcb0 <strcmp@plt+0x2c528>
  412468:	test   rax,rax
  41246b:	je     4124b0 <strcmp@plt+0xed28>
  41246d:	mov    r12,rax
  412470:	mov    rbp,QWORD PTR [rax+0x10]
  412474:	mov    rdi,QWORD PTR [rsp+0x28]
  412479:	test   rdi,rdi
  41247c:	je     4124e6 <strcmp@plt+0xed5e>
  41247e:	mov    rbx,rdi
  412481:	call   4031e0 <strlen@plt>
  412486:	mov    rdi,rbx
  412489:	mov    rsi,rbp
  41248c:	mov    rdx,rax
  41248f:	call   403220 <strncmp@plt>
  412494:	test   eax,eax
  412496:	je     41253a <strcmp@plt+0xedb2>
  41249c:	jmp    412a8b <strcmp@plt+0xf303>
  4124a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4124ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4124b0:	lea    rax,[rip+0x528f9]        # 464db0 <strcmp@plt+0x61628>
  4124b7:	cmp    DWORD PTR [rax],0x0
  4124ba:	jle    4125f5 <strcmp@plt+0xee6d>
  4124c0:	mov    rdi,r15
  4124c3:	call   423130 <strcmp@plt+0x1f9a8>
  4124c8:	mov    rcx,rax
  4124cb:	mov    edi,0x5
  4124d0:	xor    eax,eax
  4124d2:	lea    rsi,[rip+0x34125]        # 4465fe <strcmp@plt+0x42e76>
  4124d9:	mov    rdx,rcx
  4124dc:	call   42e800 <strcmp@plt+0x2b078>
  4124e1:	jmp    4125f5 <strcmp@plt+0xee6d>
  4124e6:	mov    rdi,QWORD PTR [rsp+0x48]
  4124eb:	mov    rsi,QWORD PTR [rsp+0x20]
  4124f0:	mov    rdx,rbp
  4124f3:	call   422a80 <strcmp@plt+0x1f2f8>
  4124f8:	lea    rcx,[rip+0x528b1]        # 464db0 <strcmp@plt+0x61628>
  4124ff:	mov    ecx,DWORD PTR [rcx]
  412501:	cmp    eax,0x1
  412504:	jne    412c14 <strcmp@plt+0xf48c>
  41250a:	cmp    ecx,0x2
  41250d:	jl     412530 <strcmp@plt+0xeda8>
  41250f:	mov    rdi,r15
  412512:	call   423130 <strcmp@plt+0x1f9a8>
  412517:	mov    rcx,rax
  41251a:	mov    edi,0x6
  41251f:	xor    eax,eax
  412521:	lea    rsi,[rip+0x34157]        # 44667f <strcmp@plt+0x42ef7>
  412528:	mov    rdx,rcx
  41252b:	call   42e800 <strcmp@plt+0x2b078>
  412530:	mov    rax,QWORD PTR [r12+0x10]
  412535:	mov    QWORD PTR [rsp+0x28],rax
  41253a:	cmp    BYTE PTR [r12+0x9],0x1
  412540:	mov    rdi,QWORD PTR [r12]
  412544:	jne    4125b0 <strcmp@plt+0xee28>
  412546:	call   4230e0 <strcmp@plt+0x1f958>
  41254b:	mov    rbp,rax
  41254e:	mov    rdi,r15
  412551:	call   4230e0 <strcmp@plt+0x1f958>
  412556:	mov    rdi,rbp
  412559:	mov    rsi,rax
  41255c:	call   4342e0 <strcmp@plt+0x30b58>
  412561:	test   eax,eax
  412563:	jne    412610 <strcmp@plt+0xee88>
  412569:	lea    rax,[rip+0x52840]        # 464db0 <strcmp@plt+0x61628>
  412570:	cmp    DWORD PTR [rax],0x0
  412573:	mov    rbx,QWORD PTR [rsp+0x10]
  412578:	jle    41259b <strcmp@plt+0xee13>
  41257a:	mov    rdi,r15
  41257d:	call   423130 <strcmp@plt+0x1f9a8>
  412582:	mov    rcx,rax
  412585:	mov    edi,0x5
  41258a:	xor    eax,eax
  41258c:	lea    rsi,[rip+0x34162]        # 4466f5 <strcmp@plt+0x42f6d>
  412593:	mov    rdx,rcx
  412596:	call   42e800 <strcmp@plt+0x2b078>
  41259b:	mov    rdi,r15
  41259e:	call   428ed0 <strcmp@plt+0x25748>
  4125a3:	xor    r15d,r15d
  4125a6:	jmp    41284f <strcmp@plt+0xf0c7>
  4125ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4125b0:	mov    rsi,r15
  4125b3:	call   423970 <strcmp@plt+0x201e8>
  4125b8:	test   eax,eax
  4125ba:	je     412610 <strcmp@plt+0xee88>
  4125bc:	lea    rax,[rip+0x527ed]        # 464db0 <strcmp@plt+0x61628>
  4125c3:	cmp    DWORD PTR [rax],0x0
  4125c6:	jle    4125f5 <strcmp@plt+0xee6d>
  4125c8:	mov    rdi,r15
  4125cb:	call   423130 <strcmp@plt+0x1f9a8>
  4125d0:	mov    rbp,rax
  4125d3:	mov    rdi,QWORD PTR [r12]
  4125d7:	call   423130 <strcmp@plt+0x1f9a8>
  4125dc:	mov    rcx,rax
  4125df:	mov    edi,0x5
  4125e4:	xor    eax,eax
  4125e6:	lea    rsi,[rip+0x34144]        # 446731 <strcmp@plt+0x42fa9>
  4125ed:	mov    rdx,rbp
  4125f0:	call   42e800 <strcmp@plt+0x2b078>
  4125f5:	mov    rdi,r15
  4125f8:	call   428ed0 <strcmp@plt+0x25748>
  4125fd:	xor    r15d,r15d
  412600:	mov    rbx,QWORD PTR [rsp+0x10]
  412605:	jmp    41284f <strcmp@plt+0xf0c7>
  41260a:	nop    WORD PTR [rax+rax*1+0x0]
  412610:	mov    rdi,QWORD PTR [r13+0x20]
  412614:	mov    rsi,r15
  412617:	call   42fcd0 <strcmp@plt+0x2c548>
  41261c:	mov    rbx,r13
  41261f:	mov    r13,rax
  412622:	test   rax,rax
  412625:	je     41266d <strcmp@plt+0xeee5>
  412627:	mov    rdi,QWORD PTR [r13+0x0]
  41262b:	mov    rsi,r15
  41262e:	call   428f00 <strcmp@plt+0x25778>
  412633:	test   eax,eax
  412635:	je     412767 <strcmp@plt+0xefdf>
  41263b:	cmp    BYTE PTR [r12+0x18],0x0
  412641:	je     41271e <strcmp@plt+0xef96>
  412647:	mov    rdi,r15
  41264a:	call   423130 <strcmp@plt+0x1f9a8>
  41264f:	mov    rcx,rax
  412652:	mov    edi,0x3
  412657:	xor    eax,eax
  412659:	lea    rsi,[rip+0x34154]        # 4467b4 <strcmp@plt+0x4302c>
  412660:	mov    rdx,rcx
  412663:	call   42e800 <strcmp@plt+0x2b078>
  412668:	jmp    412758 <strcmp@plt+0xefd0>
  41266d:	mov    edi,0x10
  412672:	call   432070 <strcmp@plt+0x2e8e8>
  412677:	mov    rbp,rax
  41267a:	mov    QWORD PTR [rax],r15
  41267d:	mov    rdi,QWORD PTR [rbx+0x20]
  412681:	mov    rsi,r15
  412684:	mov    rdx,rax
  412687:	call   42f150 <strcmp@plt+0x2b9c8>
  41268c:	mov    edi,0xb
  412691:	xor    r8d,r8d
  412694:	mov    rsi,rbx
  412697:	lea    rdx,[rip+0xa92]        # 413130 <strcmp@plt+0xf9a8>
  41269e:	mov    rcx,rbp
  4126a1:	call   437580 <strcmp@plt+0x33df8>
  4126a6:	mov    rbx,rax
  4126a9:	lea    rax,[rip+0x5def0]        # 4705a0 <strcmp@plt+0x6ce18>
  4126b0:	mov    rdi,QWORD PTR [rax]
  4126b3:	mov    rsi,rbp
  4126b6:	mov    rdx,rbx
  4126b9:	call   4378d0 <strcmp@plt+0x34148>
  4126be:	mov    esi,0xb6
  4126c3:	mov    rdi,rbx
  4126c6:	call   437460 <strcmp@plt+0x33cd8>
  4126cb:	lea    rax,[rip+0x526de]        # 464db0 <strcmp@plt+0x61628>
  4126d2:	cmp    DWORD PTR [rax],0x2
  4126d5:	jl     4126fb <strcmp@plt+0xef73>
  4126d7:	mov    rdi,QWORD PTR [rbp+0x0]
  4126db:	call   423130 <strcmp@plt+0x1f9a8>
  4126e0:	mov    rdx,rax
  4126e3:	mov    edi,0x6
  4126e8:	mov    ecx,0xb4
  4126ed:	xor    eax,eax
  4126ef:	lea    rsi,[rip+0x34189]        # 44687f <strcmp@plt+0x430f7>
  4126f6:	call   42e800 <strcmp@plt+0x2b078>
  4126fb:	mov    rbx,QWORD PTR [rsp+0x10]
  412700:	mov    al,BYTE PTR [rbx]
  412702:	shr    al,0x3
  412705:	and    al,0x1
  412707:	mov    BYTE PTR [rbp+0x8],al
  41270a:	mov    esi,0x7
  41270f:	mov    rdi,QWORD PTR [rsp+0x18]
  412714:	call   411030 <strcmp@plt+0xd8a8>
  412719:	jmp    412819 <strcmp@plt+0xf091>
  41271e:	lea    rax,[rip+0x5268b]        # 464db0 <strcmp@plt+0x61628>
  412725:	cmp    DWORD PTR [rax],0x3
  412728:	jl     41274b <strcmp@plt+0xefc3>
  41272a:	mov    rdi,r15
  41272d:	call   423130 <strcmp@plt+0x1f9a8>
  412732:	mov    rcx,rax
  412735:	mov    edi,0x7
  41273a:	xor    eax,eax
  41273c:	lea    rsi,[rip+0x34041]        # 446784 <strcmp@plt+0x42ffc>
  412743:	mov    rdx,rcx
  412746:	call   42e800 <strcmp@plt+0x2b078>
  41274b:	mov    rdi,QWORD PTR [r13+0x0]
  41274f:	mov    rsi,QWORD PTR [r15+0x28]
  412753:	call   4294d0 <strcmp@plt+0x25d48>
  412758:	mov    esi,0x7
  41275d:	mov    rdi,QWORD PTR [rsp+0x18]
  412762:	call   411030 <strcmp@plt+0xd8a8>
  412767:	mov    rbx,QWORD PTR [rsp+0x10]
  41276c:	mov    al,BYTE PTR [rbx]
  41276e:	shr    al,0x3
  412771:	and    al,0x1
  412773:	mov    BYTE PTR [r13+0x8],al
  412777:	lea    rax,[rip+0x5de22]        # 4705a0 <strcmp@plt+0x6ce18>
  41277e:	mov    rdi,QWORD PTR [rax]
  412781:	mov    edx,0xb
  412786:	mov    rsi,r13
  412789:	call   437940 <strcmp@plt+0x341b8>
  41278e:	mov    rbp,rax
  412791:	mov    edx,DWORD PTR [rax+0x18]
  412794:	cmp    edx,0x1
  412797:	jne    4127f2 <strcmp@plt+0xf06a>
  412799:	mov    rax,QWORD PTR [rbp+0x8]
  41279d:	mov    r12,QWORD PTR [rax+0x10]
  4127a1:	mov    rdi,rbp
  4127a4:	call   42c250 <strcmp@plt+0x28ac8>
  4127a9:	mov    esi,0xb6
  4127ae:	mov    rdi,r12
  4127b1:	call   437460 <strcmp@plt+0x33cd8>
  4127b6:	lea    rax,[rip+0x525f3]        # 464db0 <strcmp@plt+0x61628>
  4127bd:	cmp    DWORD PTR [rax],0x2
  4127c0:	mov    rbp,QWORD PTR [rsp+0x8]
  4127c5:	jl     41281e <strcmp@plt+0xf096>
  4127c7:	mov    rdi,QWORD PTR [r13+0x0]
  4127cb:	call   423130 <strcmp@plt+0x1f9a8>
  4127d0:	mov    rdx,rax
  4127d3:	mov    edi,0x6
  4127d8:	mov    ecx,0xb4
  4127dd:	xor    eax,eax
  4127df:	lea    rsi,[rip+0x34099]        # 44687f <strcmp@plt+0x430f7>
  4127e6:	call   42e800 <strcmp@plt+0x2b078>
  4127eb:	test   rbp,rbp
  4127ee:	jne    412823 <strcmp@plt+0xf09b>
  4127f0:	jmp    41283a <strcmp@plt+0xf0b2>
  4127f2:	lea    rax,[rip+0x525b7]        # 464db0 <strcmp@plt+0x61628>
  4127f9:	cmp    DWORD PTR [rax],0x0
  4127fc:	jle    412811 <strcmp@plt+0xf089>
  4127fe:	mov    edi,0x5
  412803:	xor    eax,eax
  412805:	lea    rsi,[rip+0x34020]        # 44682c <strcmp@plt+0x430a4>
  41280c:	call   42e800 <strcmp@plt+0x2b078>
  412811:	mov    rdi,rbp
  412814:	call   42c250 <strcmp@plt+0x28ac8>
  412819:	mov    rbp,QWORD PTR [rsp+0x8]
  41281e:	test   rbp,rbp
  412821:	je     41283a <strcmp@plt+0xf0b2>
  412823:	xor    edx,edx
  412825:	mov    rdi,rbp
  412828:	mov    rsi,r15
  41282b:	call   421860 <strcmp@plt+0x1e0d8>
  412830:	mov    eax,0x1
  412835:	mov    QWORD PTR [rsp+0x38],rax
  41283a:	test   r13,r13
  41283d:	je     41284a <strcmp@plt+0xf0c2>
  41283f:	mov    rdi,r15
  412842:	call   428ed0 <strcmp@plt+0x25748>
  412847:	xor    r15d,r15d
  41284a:	mov    r13,QWORD PTR [rsp+0x18]
  41284f:	add    r14d,0x1
  412853:	movzx  eax,BYTE PTR [rbx+0x3]
  412857:	cmp    r14d,eax
  41285a:	jb     4123b0 <strcmp@plt+0xec28>
  412860:	test   BYTE PTR [rbx],0x2
  412863:	jne    41293b <strcmp@plt+0xf1b3>
  412869:	mov    rbp,QWORD PTR [rsp+0x8]
  41286e:	test   rbp,rbp
  412871:	jne    4129ad <strcmp@plt+0xf225>
  412877:	jmp    412ea7 <strcmp@plt+0xf71f>
  41287c:	lea    rax,[rip+0x5252d]        # 464db0 <strcmp@plt+0x61628>
  412883:	cmp    DWORD PTR [rax],0x0
  412886:	jle    4129fb <strcmp@plt+0xf273>
  41288c:	lea    rsi,[rip+0x34051]        # 4468e4 <strcmp@plt+0x4315c>
  412893:	jmp    412904 <strcmp@plt+0xf17c>
  412895:	xor    r15d,r15d
  412898:	mov    rdi,rbp
  41289b:	call   420d90 <strcmp@plt+0x1d608>
  4128a0:	mov    ebx,eax
  4128a2:	lea    rax,[rip+0x52507]        # 464db0 <strcmp@plt+0x61628>
  4128a9:	cmp    DWORD PTR [rax],0x0
  4128ac:	jle    4128d4 <strcmp@plt+0xf14c>
  4128ae:	mov    r12,rbp
  4128b1:	mov    rdi,rbp
  4128b4:	call   422870 <strcmp@plt+0x1f0e8>
  4128b9:	mov    rcx,rax
  4128bc:	lea    rsi,[rip+0x33978]        # 44623b <strcmp@plt+0x42ab3>
  4128c3:	mov    edi,0x5
  4128c8:	xor    eax,eax
  4128ca:	mov    rdx,rcx
  4128cd:	call   42e800 <strcmp@plt+0x2b078>
  4128d2:	jmp    4128d7 <strcmp@plt+0xf14f>
  4128d4:	mov    r12,rbp
  4128d7:	mov    rax,r14
  4128da:	lea    rbp,[rsp+0x140]
  4128e2:	mov    rdx,rbp
  4128e5:	mov    rbp,r14
  4128e8:	jmp    4117da <strcmp@plt+0xe052>
  4128ed:	lea    rax,[rip+0x524bc]        # 464db0 <strcmp@plt+0x61628>
  4128f4:	cmp    DWORD PTR [rax],0x0
  4128f7:	jle    4129fb <strcmp@plt+0xf273>
  4128fd:	lea    rsi,[rip+0x33a3a]        # 44633e <strcmp@plt+0x42bb6>
  412904:	xor    r15d,r15d
  412907:	mov    edi,0x5
  41290c:	xor    eax,eax
  41290e:	call   42e800 <strcmp@plt+0x2b078>
  412913:	test   r15d,r15d
  412916:	jne    412d03 <strcmp@plt+0xf57b>
  41291c:	jmp    412a07 <strcmp@plt+0xf27f>
  412921:	xor    eax,eax
  412923:	mov    QWORD PTR [rsp+0x38],rax
  412928:	xor    eax,eax
  41292a:	mov    QWORD PTR [rsp+0x28],rax
  41292f:	xor    r15d,r15d
  412932:	test   BYTE PTR [rbx],0x2
  412935:	je     412869 <strcmp@plt+0xf0e1>
  41293b:	lea    rdi,[rsp+0x60]
  412940:	lea    rsi,[rsp+0xb0]
  412948:	lea    rdx,[rsp+0x100]
  412950:	call   421670 <strcmp@plt+0x1dee8>
  412955:	lea    rax,[rip+0x52454]        # 464db0 <strcmp@plt+0x61628>
  41295c:	cmp    DWORD PTR [rax],0x0
  41295f:	mov    rbp,QWORD PTR [rsp+0x8]
  412964:	jle    41298c <strcmp@plt+0xf204>
  412966:	lea    rdi,[rsp+0xb0]
  41296e:	call   437ac0 <strcmp@plt+0x34338>
  412973:	mov    rcx,rax
  412976:	lea    rsi,[rip+0x33e55]        # 4467d2 <strcmp@plt+0x4304a>
  41297d:	mov    edi,0x5
  412982:	xor    eax,eax
  412984:	mov    rdx,rcx
  412987:	call   42e800 <strcmp@plt+0x2b078>
  41298c:	test   rbp,rbp
  41298f:	je     412ea7 <strcmp@plt+0xf71f>
  412995:	lea    rsi,[rsp+0xb0]
  41299d:	lea    rdx,[rsp+0x100]
  4129a5:	mov    rdi,rbp
  4129a8:	call   421fe0 <strcmp@plt+0x1e858>
  4129ad:	mov    rcx,QWORD PTR [rsp+0x28]
  4129b2:	test   rcx,rcx
  4129b5:	je     412ce7 <strcmp@plt+0xf55f>
  4129bb:	cmp    DWORD PTR [rsp+0x38],0x0
  4129c0:	je     412ce7 <strcmp@plt+0xf55f>
  4129c6:	movzx  r12d,WORD PTR [rbp+0x24]
  4129cb:	cmp    r12,0xffff
  4129d2:	je     412b2d <strcmp@plt+0xf3a5>
  4129d8:	add    r12,QWORD PTR [rbp+0x30]
  4129dc:	jmp    412b30 <strcmp@plt+0xf3a8>
  4129e1:	xor    r13d,r13d
  4129e4:	xor    edi,edi
  4129e6:	call   42c250 <strcmp@plt+0x28ac8>
  4129eb:	mov    rdi,r13
  4129ee:	call   422fa0 <strcmp@plt+0x1f818>
  4129f3:	mov    rdi,r14
  4129f6:	call   422fa0 <strcmp@plt+0x1f818>
  4129fb:	xor    r15d,r15d
  4129fe:	test   r15d,r15d
  412a01:	jne    412d03 <strcmp@plt+0xf57b>
  412a07:	lea    rax,[rip+0x523a2]        # 464db0 <strcmp@plt+0x61628>
  412a0e:	mov    eax,DWORD PTR [rax]
  412a10:	test   eax,eax
  412a12:	jle    412a27 <strcmp@plt+0xf29f>
  412a14:	lea    rsi,[rip+0x338c0]        # 4462db <strcmp@plt+0x42b53>
  412a1b:	xor    ebx,ebx
  412a1d:	mov    edi,0x5
  412a22:	jmp    412d20 <strcmp@plt+0xf598>
  412a27:	xor    ebx,ebx
  412a29:	jmp    412d27 <strcmp@plt+0xf59f>
  412a2e:	lea    rax,[rip+0x5237b]        # 464db0 <strcmp@plt+0x61628>
  412a35:	xor    r15d,r15d
  412a38:	cmp    DWORD PTR [rax],0x2
  412a3b:	jl     412cfa <strcmp@plt+0xf572>
  412a41:	lea    rsi,[rip+0x3392b]        # 446373 <strcmp@plt+0x42beb>
  412a48:	jmp    412adb <strcmp@plt+0xf353>
  412a4d:	lea    rax,[rip+0x5235c]        # 464db0 <strcmp@plt+0x61628>
  412a54:	cmp    DWORD PTR [rax],0x0
  412a57:	jle    412c0c <strcmp@plt+0xf484>
  412a5d:	mov    rbx,QWORD PTR [rsp+0x8]
  412a62:	mov    rdi,rbx
  412a65:	call   423130 <strcmp@plt+0x1f9a8>
  412a6a:	mov    rcx,rax
  412a6d:	lea    rsi,[rip+0x33ea5]        # 446919 <strcmp@plt+0x43191>
  412a74:	xor    r13d,r13d
  412a77:	mov    edi,0x5
  412a7c:	xor    eax,eax
  412a7e:	mov    rdx,rcx
  412a81:	call   42e800 <strcmp@plt+0x2b078>
  412a86:	jmp    412b25 <strcmp@plt+0xf39d>
  412a8b:	lea    rax,[rip+0x5231e]        # 464db0 <strcmp@plt+0x61628>
  412a92:	cmp    DWORD PTR [rax],0x0
  412a95:	jle    412c3b <strcmp@plt+0xf4b3>
  412a9b:	mov    rdi,r15
  412a9e:	call   423130 <strcmp@plt+0x1f9a8>
  412aa3:	mov    rcx,rax
  412aa6:	lea    rsi,[rip+0x33c02]        # 4466af <strcmp@plt+0x42f27>
  412aad:	mov    edi,0x5
  412ab2:	xor    eax,eax
  412ab4:	mov    rdx,rcx
  412ab7:	call   42e800 <strcmp@plt+0x2b078>
  412abc:	jmp    412c3b <strcmp@plt+0xf4b3>
  412ac1:	lea    rax,[rip+0x522e8]        # 464db0 <strcmp@plt+0x61628>
  412ac8:	xor    r15d,r15d
  412acb:	cmp    DWORD PTR [rax],0x2
  412ace:	jl     412cfa <strcmp@plt+0xf572>
  412ad4:	lea    rsi,[rip+0x338b3]        # 44638e <strcmp@plt+0x42c06>
  412adb:	xor    r15d,r15d
  412ade:	mov    edi,0x6
  412ae3:	jmp    41290c <strcmp@plt+0xf184>
  412ae8:	lea    rax,[rip+0x522c1]        # 464db0 <strcmp@plt+0x61628>
  412aef:	cmp    DWORD PTR [rax],0x0
  412af2:	jle    412c0c <strcmp@plt+0xf484>
  412af8:	mov    rbp,QWORD PTR [rsp+0x8]
  412afd:	mov    rdi,rbp
  412b00:	call   423130 <strcmp@plt+0x1f9a8>
  412b05:	mov    rdx,rax
  412b08:	mov    rcx,QWORD PTR [rbx+0x10]
  412b0c:	mov    rbx,rbp
  412b0f:	lea    rsi,[rip+0x33e45]        # 44695b <strcmp@plt+0x431d3>
  412b16:	xor    r13d,r13d
  412b19:	mov    edi,0x5
  412b1e:	xor    eax,eax
  412b20:	call   42e800 <strcmp@plt+0x2b078>
  412b25:	xor    r12d,r12d
  412b28:	jmp    412c93 <strcmp@plt+0xf50b>
  412b2d:	xor    r12d,r12d
  412b30:	mov    rsi,QWORD PTR [rsp+0x40]
  412b35:	mov    rax,QWORD PTR [rbx+0x4]
  412b39:	mov    QWORD PTR [r12+0x4],rax
  412b3e:	mov    dl,BYTE PTR [rbx]
  412b40:	mov    al,BYTE PTR [r12]
  412b44:	shl    dl,0x2
  412b47:	and    dl,0x8
  412b4a:	and    al,0xf7
  412b4c:	or     al,dl
  412b4e:	mov    BYTE PTR [r12],al
  412b52:	test   rsi,rsi
  412b55:	jne    412b67 <strcmp@plt+0xf3df>
  412b57:	mov    dl,BYTE PTR [rbx]
  412b59:	shl    dl,0x2
  412b5c:	and    dl,0x4
  412b5f:	and    al,0xfb
  412b61:	or     al,dl
  412b63:	mov    BYTE PTR [r12],al
  412b67:	lea    rsi,[r12+0xc]
  412b6c:	mov    edx,0x1
  412b71:	mov    rdi,rbp
  412b74:	call   4229c0 <strcmp@plt+0x1f238>
  412b79:	test   BYTE PTR [rbx],0x2
  412b7c:	je     412e2c <strcmp@plt+0xf6a4>
  412b82:	cmp    QWORD PTR [r13+0x40],0x0
  412b87:	je     412e2c <strcmp@plt+0xf6a4>
  412b8d:	mov    rbx,QWORD PTR [r13+0x38]
  412b91:	mov    rax,QWORD PTR [rsp+0x30]
  412b96:	lea    r14,[rax+0x20]
  412b9a:	mov    rdi,r14
  412b9d:	call   423130 <strcmp@plt+0x1f9a8>
  412ba2:	mov    rdi,rbx
  412ba5:	mov    rsi,rax
  412ba8:	call   436750 <strcmp@plt+0x32fc8>
  412bad:	test   rax,rax
  412bb0:	je     412cb5 <strcmp@plt+0xf52d>
  412bb6:	mov    rbx,rax
  412bb9:	cmp    QWORD PTR [rax+0x18],0x0
  412bbe:	je     412e2c <strcmp@plt+0xf6a4>
  412bc4:	mov    rax,QWORD PTR [rsp+0x40]
  412bc9:	test   rax,rax
  412bcc:	je     412bd8 <strcmp@plt+0xf450>
  412bce:	test   BYTE PTR [rax+0x1],0x20
  412bd2:	jne    412de2 <strcmp@plt+0xf65a>
  412bd8:	test   BYTE PTR [r12],0x4
  412bdd:	je     412e2c <strcmp@plt+0xf6a4>
  412be3:	mov    esi,0x1
  412be8:	mov    rbp,QWORD PTR [rsp+0x8]
  412bed:	mov    rdi,rbp
  412bf0:	call   4225b0 <strcmp@plt+0x1ee28>
  412bf5:	mov    edx,DWORD PTR [rbx+0x10]
  412bf8:	mov    rcx,QWORD PTR [rbx+0x18]
  412bfc:	mov    rdi,rbp
  412bff:	mov    rsi,rax
  412c02:	call   4229c0 <strcmp@plt+0x1f238>
  412c07:	jmp    412e2c <strcmp@plt+0xf6a4>
  412c0c:	xor    r13d,r13d
  412c0f:	xor    r12d,r12d
  412c12:	jmp    412c8e <strcmp@plt+0xf506>
  412c14:	test   ecx,ecx
  412c16:	jle    412c3b <strcmp@plt+0xf4b3>
  412c18:	mov    rdi,r15
  412c1b:	call   423130 <strcmp@plt+0x1f9a8>
  412c20:	mov    rdx,rax
  412c23:	mov    rcx,QWORD PTR [r12+0x10]
  412c28:	lea    rsi,[rip+0x33a09]        # 446638 <strcmp@plt+0x42eb0>
  412c2f:	mov    edi,0x5
  412c34:	xor    eax,eax
  412c36:	call   42e800 <strcmp@plt+0x2b078>
  412c3b:	mov    rdi,r15
  412c3e:	call   428ed0 <strcmp@plt+0x25748>
  412c43:	mov    rbp,QWORD PTR [rsp+0x8]
  412c48:	test   rbp,rbp
  412c4b:	jne    412cef <strcmp@plt+0xf567>
  412c51:	jmp    412cf7 <strcmp@plt+0xf56f>
  412c56:	mov    rdi,QWORD PTR [rsp+0x38]
  412c5b:	call   42c250 <strcmp@plt+0x28ac8>
  412c60:	mov    rdi,QWORD PTR [rsp+0x40]
  412c65:	call   422fa0 <strcmp@plt+0x1f818>
  412c6a:	jmp    412ea7 <strcmp@plt+0xf71f>
  412c6f:	lea    rax,[rip+0x5213a]        # 464db0 <strcmp@plt+0x61628>
  412c76:	cmp    DWORD PTR [rax],0x0
  412c79:	jle    412c8e <strcmp@plt+0xf506>
  412c7b:	lea    rsi,[rip+0x33d25]        # 4469a7 <strcmp@plt+0x4321f>
  412c82:	mov    edi,0x5
  412c87:	xor    eax,eax
  412c89:	call   42e800 <strcmp@plt+0x2b078>
  412c8e:	mov    rbx,QWORD PTR [rsp+0x8]
  412c93:	mov    rdi,r12
  412c96:	call   42c250 <strcmp@plt+0x28ac8>
  412c9b:	mov    rdi,rbx
  412c9e:	call   422fa0 <strcmp@plt+0x1f818>
  412ca3:	mov    rdi,r13
  412ca6:	call   422fa0 <strcmp@plt+0x1f818>
  412cab:	test   r15d,r15d
  412cae:	jne    412d03 <strcmp@plt+0xf57b>
  412cb0:	jmp    412a07 <strcmp@plt+0xf27f>
  412cb5:	lea    rax,[rip+0x520f4]        # 464db0 <strcmp@plt+0x61628>
  412cbc:	cmp    DWORD PTR [rax],0x0
  412cbf:	mov    rbp,QWORD PTR [rsp+0x8]
  412cc4:	jle    412ce7 <strcmp@plt+0xf55f>
  412cc6:	mov    rdi,r14
  412cc9:	call   423130 <strcmp@plt+0x1f9a8>
  412cce:	mov    rcx,rax
  412cd1:	lea    rsi,[rip+0x33b07]        # 4467df <strcmp@plt+0x43057>
  412cd8:	mov    edi,0x5
  412cdd:	xor    eax,eax
  412cdf:	mov    rdx,rcx
  412ce2:	call   42e800 <strcmp@plt+0x2b078>
  412ce7:	mov    rdi,r15
  412cea:	call   428ed0 <strcmp@plt+0x25748>
  412cef:	mov    rdi,rbp
  412cf2:	call   42e010 <strcmp@plt+0x2a888>
  412cf7:	xor    r15d,r15d
  412cfa:	test   r15d,r15d
  412cfd:	je     412a07 <strcmp@plt+0xf27f>
  412d03:	lea    rax,[rip+0x520a6]        # 464db0 <strcmp@plt+0x61628>
  412d0a:	mov    ebx,0x1
  412d0f:	cmp    DWORD PTR [rax],0x3
  412d12:	jl     412d27 <strcmp@plt+0xf59f>
  412d14:	lea    rsi,[rip+0x335ef]        # 44630a <strcmp@plt+0x42b82>
  412d1b:	mov    edi,0x7
  412d20:	xor    eax,eax
  412d22:	call   42e800 <strcmp@plt+0x2b078>
  412d27:	mov    eax,ebx
  412d29:	add    rsp,0x188
  412d30:	pop    rbx
  412d31:	pop    r12
  412d33:	pop    r13
  412d35:	pop    r14
  412d37:	pop    r15
  412d39:	pop    rbp
  412d3a:	ret    
  412d3b:	xor    esi,esi
  412d3d:	mov    r12,QWORD PTR [rsp+0x18]
  412d42:	mov    rax,QWORD PTR [rsp+0x28]
  412d47:	mov    rbp,QWORD PTR [rsp+0x48]
  412d4c:	mov    rax,QWORD PTR [rax+0x4]
  412d50:	mov    QWORD PTR [rsi+0x4],rax
  412d54:	add    rsi,0xc
  412d58:	mov    rax,QWORD PTR [rsp+0x10]
  412d5d:	mov    edx,DWORD PTR [rax+0xc]
  412d60:	mov    rcx,QWORD PTR [rax+0x10]
  412d64:	mov    rdi,rbx
  412d67:	call   4229c0 <strcmp@plt+0x1f238>
  412d6c:	movzx  edx,WORD PTR [r14+0x42]
  412d71:	lea    r15,[rsp+0x60]
  412d76:	mov    esi,0x10f6
  412d7b:	mov    rdi,r15
  412d7e:	mov    rcx,r14
  412d81:	mov    r8,rbp
  412d84:	call   435600 <strcmp@plt+0x31e78>
  412d89:	mov    rdi,r12
  412d8c:	mov    rsi,rbx
  412d8f:	mov    rdx,r15
  412d92:	call   407ab0 <strcmp@plt+0x4328>
  412d97:	mov    rdi,rbx
  412d9a:	jmp    412ea2 <strcmp@plt+0xf71a>
  412d9f:	lea    rax,[rip+0x5200a]        # 464db0 <strcmp@plt+0x61628>
  412da6:	cmp    DWORD PTR [rax],0x0
  412da9:	jle    412dbe <strcmp@plt+0xf636>
  412dab:	lea    rsi,[rip+0x31377]        # 444129 <strcmp@plt+0x409a1>
  412db2:	mov    edi,0x5
  412db7:	xor    eax,eax
  412db9:	call   42e800 <strcmp@plt+0x2b078>
  412dbe:	mov    rbx,r12
  412dc1:	mov    rdi,QWORD PTR [rsp+0x38]
  412dc6:	call   42c250 <strcmp@plt+0x28ac8>
  412dcb:	test   rbx,rbx
  412dce:	je     412dd8 <strcmp@plt+0xf650>
  412dd0:	mov    rdi,rbx
  412dd3:	call   42e010 <strcmp@plt+0x2a888>
  412dd8:	mov    r14,QWORD PTR [rsp+0x40]
  412ddd:	jmp    4129eb <strcmp@plt+0xf263>
  412de2:	mov    esi,0x10f6
  412de7:	mov    edx,0x10f6
  412dec:	mov    rcx,QWORD PTR [rsp+0x50]
  412df1:	lea    r8,[rcx+0x20]
  412df5:	mov    rbp,QWORD PTR [rsp+0x8]
  412dfa:	mov    rdi,rbp
  412dfd:	call   4331d0 <strcmp@plt+0x2fa48>
  412e02:	mov    esi,DWORD PTR [rbx+0x10]
  412e05:	mov    rdi,rbp
  412e08:	call   422b40 <strcmp@plt+0x1f3b8>
  412e0d:	mov    edx,DWORD PTR [rbx+0x10]
  412e10:	mov    rcx,QWORD PTR [rbx+0x18]
  412e14:	mov    rdi,rbp
  412e17:	mov    rsi,rax
  412e1a:	call   422930 <strcmp@plt+0x1f1a8>
  412e1f:	mov    rdi,rbp
  412e22:	call   422130 <strcmp@plt+0x1e9a8>
  412e27:	or     WORD PTR [rax],0x4008
  412e2c:	lea    rax,[rip+0x51f7d]        # 464db0 <strcmp@plt+0x61628>
  412e33:	cmp    DWORD PTR [rax],0x0
  412e36:	mov    rbx,QWORD PTR [rsp+0x30]
  412e3b:	mov    rbp,QWORD PTR [rsp+0x8]
  412e40:	jle    412e91 <strcmp@plt+0xf709>
  412e42:	mov    rdi,rbp
  412e45:	call   422870 <strcmp@plt+0x1f0e8>
  412e4a:	mov    r14,rax
  412e4d:	mov    rdi,rbx
  412e50:	call   423130 <strcmp@plt+0x1f9a8>
  412e55:	mov    r15,rax
  412e58:	lea    rdi,[rbx+0x20]
  412e5c:	call   423130 <strcmp@plt+0x1f9a8>
  412e61:	mov    r8,rax
  412e64:	movzx  r9d,WORD PTR [rbx+0x40]
  412e69:	movzx  r10d,WORD PTR [rbx+0x42]
  412e6e:	sub    rsp,0x8
  412e72:	lea    rsi,[rip+0x346c2]        # 44753b <strcmp@plt+0x43db3>
  412e79:	mov    edi,0x5
  412e7e:	xor    eax,eax
  412e80:	mov    rdx,r14
  412e83:	mov    rcx,r15
  412e86:	push   r10
  412e88:	call   42e800 <strcmp@plt+0x2b078>
  412e8d:	add    rsp,0x10
  412e91:	mov    rdi,r13
  412e94:	mov    rsi,rbp
  412e97:	mov    rdx,rbx
  412e9a:	call   407ab0 <strcmp@plt+0x4328>
  412e9f:	mov    rdi,rbp
  412ea2:	call   42e010 <strcmp@plt+0x2a888>
  412ea7:	mov    r15d,0x1
  412ead:	test   r15d,r15d
  412eb0:	jne    412d03 <strcmp@plt+0xf57b>
  412eb6:	jmp    412a07 <strcmp@plt+0xf27f>
  412ebb:	lea    rax,[rip+0x51eee]        # 464db0 <strcmp@plt+0x61628>
  412ec2:	cmp    DWORD PTR [rax],0x0
  412ec5:	jle    412eda <strcmp@plt+0xf752>
  412ec7:	lea    rsi,[rip+0x3125b]        # 444129 <strcmp@plt+0x409a1>
  412ece:	mov    edi,0x5
  412ed3:	xor    eax,eax
  412ed5:	call   42e800 <strcmp@plt+0x2b078>
  412eda:	mov    rbx,QWORD PTR [rsp+0x20]
  412edf:	jmp    412dc1 <strcmp@plt+0xf639>
  412ee4:	lea    rdi,[rip+0x33209]        # 4460f4 <strcmp@plt+0x4296c>
  412eeb:	lea    rsi,[rip+0x33218]        # 44610a <strcmp@plt+0x42982>
  412ef2:	lea    rdx,[rip+0x3321e]        # 446117 <strcmp@plt+0x4298f>
  412ef9:	call   4321d0 <strcmp@plt+0x2ea48>
  412efe:	xchg   ax,ax
  412f00:	push   r15
  412f02:	push   r14
  412f04:	push   r12
  412f06:	push   rbx
  412f07:	push   rax
  412f08:	mov    r14,rdx
  412f0b:	mov    r15,rsi
  412f0e:	mov    r12,rdi
  412f11:	mov    edi,0x20
  412f16:	call   432070 <strcmp@plt+0x2e8e8>
  412f1b:	test   rax,rax
  412f1e:	je     412f4f <strcmp@plt+0xf7c7>
  412f20:	mov    rbx,rax
  412f23:	mov    rdi,r12
  412f26:	call   403700 <strdup@plt>
  412f2b:	mov    QWORD PTR [rbx],rax
  412f2e:	mov    rdi,r15
  412f31:	call   423740 <strcmp@plt+0x1ffb8>
  412f36:	mov    QWORD PTR [rbx+0x8],rax
  412f3a:	mov    rdi,r14
  412f3d:	call   403700 <strdup@plt>
  412f42:	mov    QWORD PTR [rbx+0x18],rax
  412f46:	mov    DWORD PTR [rbx+0x10],0x1
  412f4d:	jmp    412f74 <strcmp@plt+0xf7ec>
  412f4f:	lea    rax,[rip+0x51e5a]        # 464db0 <strcmp@plt+0x61628>
  412f56:	cmp    DWORD PTR [rax],0x0
  412f59:	jle    412f72 <strcmp@plt+0xf7ea>
  412f5b:	lea    rsi,[rip+0x3324c]        # 4461ae <strcmp@plt+0x42a26>
  412f62:	xor    ebx,ebx
  412f64:	mov    edi,0x5
  412f69:	xor    eax,eax
  412f6b:	call   42e800 <strcmp@plt+0x2b078>
  412f70:	jmp    412f74 <strcmp@plt+0xf7ec>
  412f72:	xor    ebx,ebx
  412f74:	mov    rax,rbx
  412f77:	add    rsp,0x8
  412f7b:	pop    rbx
  412f7c:	pop    r12
  412f7e:	pop    r14
  412f80:	pop    r15
  412f82:	ret    
  412f83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f8d:	nop    DWORD PTR [rax]
  412f90:	push   rbx
  412f91:	mov    rbx,rdi
  412f94:	mov    rdi,QWORD PTR [rdi+0x8]
  412f98:	call   422fa0 <strcmp@plt+0x1f818>
  412f9d:	mov    rdi,QWORD PTR [rbx]
  412fa0:	call   403780 <free@plt>
  412fa5:	mov    rdi,QWORD PTR [rbx+0x18]
  412fa9:	call   403780 <free@plt>
  412fae:	mov    rdi,rbx
  412fb1:	pop    rbx
  412fb2:	jmp    403780 <free@plt>
  412fb7:	nop    WORD PTR [rax+rax*1+0x0]
  412fc0:	push   rbp
  412fc1:	push   r14
  412fc3:	push   rbx
  412fc4:	mov    r14d,esi
  412fc7:	mov    rbp,rdi
  412fca:	mov    edi,0x18
  412fcf:	call   432070 <strcmp@plt+0x2e8e8>
  412fd4:	test   rax,rax
  412fd7:	je     412ff6 <strcmp@plt+0xf86e>
  412fd9:	mov    rbx,rax
  412fdc:	mov    rdi,rbp
  412fdf:	call   403700 <strdup@plt>
  412fe4:	mov    QWORD PTR [rbx],rax
  412fe7:	mov    DWORD PTR [rbx+0x8],r14d
  412feb:	call   42bbd0 <strcmp@plt+0x28448>
  412ff0:	mov    QWORD PTR [rbx+0x10],rax
  412ff4:	jmp    41301b <strcmp@plt+0xf893>
  412ff6:	lea    rax,[rip+0x51db3]        # 464db0 <strcmp@plt+0x61628>
  412ffd:	cmp    DWORD PTR [rax],0x0
  413000:	jle    413019 <strcmp@plt+0xf891>
  413002:	lea    rsi,[rip+0x331c5]        # 4461ce <strcmp@plt+0x42a46>
  413009:	xor    ebx,ebx
  41300b:	mov    edi,0x5
  413010:	xor    eax,eax
  413012:	call   42e800 <strcmp@plt+0x2b078>
  413017:	jmp    41301b <strcmp@plt+0xf893>
  413019:	xor    ebx,ebx
  41301b:	mov    rax,rbx
  41301e:	pop    rbx
  41301f:	pop    r14
  413021:	pop    rbp
  413022:	ret    
  413023:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41302d:	nop    DWORD PTR [rax]
  413030:	push   rbx
  413031:	mov    rbx,rdi
  413034:	mov    rdi,QWORD PTR [rdi]
  413037:	call   403780 <free@plt>
  41303c:	mov    rdi,QWORD PTR [rbx+0x10]
  413040:	call   42c250 <strcmp@plt+0x28ac8>
  413045:	mov    rdi,rbx
  413048:	pop    rbx
  413049:	jmp    403780 <free@plt>
  41304e:	xchg   ax,ax
  413050:	mov    edi,0x48
  413055:	jmp    432070 <strcmp@plt+0x2e8e8>
  41305a:	nop    WORD PTR [rax+rax*1+0x0]
  413060:	push   rbp
  413061:	push   r15
  413063:	push   r14
  413065:	push   r13
  413067:	push   r12
  413069:	push   rbx
  41306a:	push   rax
  41306b:	mov    DWORD PTR [rsp+0x4],0x0
  413073:	mov    DWORD PTR [rsp],0x0
  41307a:	mov    rax,QWORD PTR [rdi+0x28]
  41307e:	mov    r15,QWORD PTR [rax+0x8]
  413082:	cmp    r15,rax
  413085:	je     41311a <strcmp@plt+0xf992>
  41308b:	mov    r13d,esi
  41308e:	mov    r14,rdi
  413091:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41309b:	nop    DWORD PTR [rax+rax*1+0x0]
  4130a0:	mov    rbx,QWORD PTR [r15+0x10]
  4130a4:	mov    rdi,rbx
  4130a7:	lea    rsi,[rsp+0x4]
  4130ac:	mov    rdx,rsp
  4130af:	call   428a20 <strcmp@plt+0x25298>
  4130b4:	mov    eax,DWORD PTR [rsp+0x4]
  4130b8:	test   eax,eax
  4130ba:	je     413110 <strcmp@plt+0xf988>
  4130bc:	cmp    eax,0x1
  4130bf:	jne    4130c7 <strcmp@plt+0xf93f>
  4130c1:	cmp    DWORD PTR [rsp],r13d
  4130c5:	jne    413110 <strcmp@plt+0xf988>
  4130c7:	mov    r12,QWORD PTR [rbx+0x8]
  4130cb:	cmp    r12,rbx
  4130ce:	jne    4130ea <strcmp@plt+0xf962>
  4130d0:	jmp    413110 <strcmp@plt+0xf988>
  4130d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4130dc:	nop    DWORD PTR [rax+0x0]
  4130e0:	mov    r12,QWORD PTR [r12+0x8]
  4130e5:	cmp    r12,rbx
  4130e8:	je     413110 <strcmp@plt+0xf988>
  4130ea:	mov    rbp,QWORD PTR [r12+0x10]
  4130ef:	cmp    BYTE PTR [rbp+0x8],0x0
  4130f3:	je     4130e0 <strcmp@plt+0xf958>
  4130f5:	mov    rdi,QWORD PTR [rbp+0x0]
  4130f9:	call   4232e0 <strcmp@plt+0x1fb58>
  4130fe:	mov    rdi,rax
  413101:	call   423200 <strcmp@plt+0x1fa78>
  413106:	movzx  eax,ax
  413109:	cmp    eax,r13d
  41310c:	jne    4130e0 <strcmp@plt+0xf958>
  41310e:	jmp    41311c <strcmp@plt+0xf994>
  413110:	mov    r15,QWORD PTR [r15+0x8]
  413114:	cmp    r15,QWORD PTR [r14+0x28]
  413118:	jne    4130a0 <strcmp@plt+0xf918>
  41311a:	xor    ebp,ebp
  41311c:	mov    rax,rbp
  41311f:	add    rsp,0x8
  413123:	pop    rbx
  413124:	pop    r12
  413126:	pop    r13
  413128:	pop    r14
  41312a:	pop    r15
  41312c:	pop    rbp
  41312d:	ret    
  41312e:	xchg   ax,ax
  413130:	push   r15
  413132:	push   r14
  413134:	push   rbx
  413135:	mov    r14,QWORD PTR [rdi+0x30]
  413139:	call   437430 <strcmp@plt+0x33ca8>
  41313e:	mov    rbx,rax
  413141:	mov    r15,QWORD PTR [rax]
  413144:	lea    rax,[rip+0x51c65]        # 464db0 <strcmp@plt+0x61628>
  41314b:	cmp    DWORD PTR [rax],0x0
  41314e:	jle    413171 <strcmp@plt+0xf9e9>
  413150:	mov    rdi,r15
  413153:	call   423130 <strcmp@plt+0x1f9a8>
  413158:	mov    rcx,rax
  41315b:	lea    rsi,[rip+0x33757]        # 4468b9 <strcmp@plt+0x43131>
  413162:	mov    edi,0x5
  413167:	xor    eax,eax
  413169:	mov    rdx,rcx
  41316c:	call   42e800 <strcmp@plt+0x2b078>
  413171:	mov    rdi,QWORD PTR [r14+0x20]
  413175:	mov    rsi,r15
  413178:	call   42f580 <strcmp@plt+0x2bdf8>
  41317d:	mov    rdi,rbx
  413180:	call   42e7d0 <strcmp@plt+0x2b048>
  413185:	mov    esi,0x7
  41318a:	mov    rdi,r14
  41318d:	call   411030 <strcmp@plt+0xd8a8>
  413192:	mov    eax,0x1
  413197:	pop    rbx
  413198:	pop    r14
  41319a:	pop    r15
  41319c:	ret    
  41319d:	nop    DWORD PTR [rax]
  4131a0:	push   rbp
  4131a1:	push   rbx
  4131a2:	push   rax
  4131a3:	mov    rax,QWORD PTR [rdi+0x8]
  4131a7:	cmp    rax,QWORD PTR [rip+0x50dda]        # 463f88 <strcmp@plt+0x60800>
  4131ae:	jne    413206 <strcmp@plt+0xfa7e>
  4131b0:	mov    rbx,rdi
  4131b3:	xor    ebp,ebp
  4131b5:	xor    eax,eax
  4131b7:	call   42ecf0 <strcmp@plt+0x2b568>
  4131bc:	mov    QWORD PTR [rbx+0x18],rax
  4131c0:	xor    eax,eax
  4131c2:	call   42ecf0 <strcmp@plt+0x2b568>
  4131c7:	mov    QWORD PTR [rbx+0x20],rax
  4131cb:	test   rax,rax
  4131ce:	je     4131fd <strcmp@plt+0xfa75>
  4131d0:	mov    rax,QWORD PTR [rbx+0x18]
  4131d4:	test   rax,rax
  4131d7:	je     4131fd <strcmp@plt+0xfa75>
  4131d9:	lea    rax,[rip+0x51bd0]        # 464db0 <strcmp@plt+0x61628>
  4131e0:	mov    ebp,0x1
  4131e5:	cmp    DWORD PTR [rax],0x0
  4131e8:	jle    4131fd <strcmp@plt+0xfa75>
  4131ea:	lea    rsi,[rip+0x33b4a]        # 446d3b <strcmp@plt+0x435b3>
  4131f1:	mov    edi,0x5
  4131f6:	xor    eax,eax
  4131f8:	call   42e800 <strcmp@plt+0x2b078>
  4131fd:	mov    eax,ebp
  4131ff:	add    rsp,0x8
  413203:	pop    rbx
  413204:	pop    rbp
  413205:	ret    
  413206:	lea    rdi,[rip+0x33b4d]        # 446d5a <strcmp@plt+0x435d2>
  41320d:	lea    rsi,[rip+0x33b62]        # 446d76 <strcmp@plt+0x435ee>
  413214:	lea    rdx,[rip+0x33b6e]        # 446d89 <strcmp@plt+0x43601>
  41321b:	call   4321d0 <strcmp@plt+0x2ea48>
  413220:	push   rbx
  413221:	mov    rax,QWORD PTR [rdi+0x8]
  413225:	cmp    rax,QWORD PTR [rip+0x50d5c]        # 463f88 <strcmp@plt+0x60800>
  41322c:	jne    413259 <strcmp@plt+0xfad1>
  41322e:	mov    rbx,rdi
  413231:	lea    rax,[rip+0x51b78]        # 464db0 <strcmp@plt+0x61628>
  413238:	cmp    DWORD PTR [rax],0x0
  41323b:	jle    413250 <strcmp@plt+0xfac8>
  41323d:	lea    rsi,[rip+0x3386b]        # 446aaf <strcmp@plt+0x43327>
  413244:	mov    edi,0x5
  413249:	xor    eax,eax
  41324b:	call   42e800 <strcmp@plt+0x2b078>
  413250:	mov    rdi,rbx
  413253:	pop    rbx
  413254:	jmp    403780 <free@plt>
  413259:	lea    rdi,[rip+0x33afa]        # 446d5a <strcmp@plt+0x435d2>
  413260:	lea    rsi,[rip+0x33b0f]        # 446d76 <strcmp@plt+0x435ee>
  413267:	lea    rdx,[rip+0x33b1b]        # 446d89 <strcmp@plt+0x43601>
  41326e:	call   4321d0 <strcmp@plt+0x2ea48>
  413273:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41327d:	nop    DWORD PTR [rax]
  413280:	push   rbx
  413281:	mov    rax,QWORD PTR [rdi+0x8]
  413285:	cmp    rax,QWORD PTR [rip+0x50cfc]        # 463f88 <strcmp@plt+0x60800>
  41328c:	jne    4132b2 <strcmp@plt+0xfb2a>
  41328e:	mov    rbx,rdi
  413291:	mov    rdi,QWORD PTR [rdi+0x20]
  413295:	lea    rsi,[rip+0x1654]        # 4148f0 <strcmp@plt+0x11168>
  41329c:	call   42ef00 <strcmp@plt+0x2b778>
  4132a1:	mov    rdi,QWORD PTR [rbx+0x18]
  4132a5:	lea    rsi,[rip+0x1624]        # 4148d0 <strcmp@plt+0x11148>
  4132ac:	pop    rbx
  4132ad:	jmp    42ef00 <strcmp@plt+0x2b778>
  4132b2:	lea    rdi,[rip+0x33aa1]        # 446d5a <strcmp@plt+0x435d2>
  4132b9:	lea    rsi,[rip+0x33ab6]        # 446d76 <strcmp@plt+0x435ee>
  4132c0:	lea    rdx,[rip+0x33ac2]        # 446d89 <strcmp@plt+0x43601>
  4132c7:	call   4321d0 <strcmp@plt+0x2ea48>
  4132cc:	nop    DWORD PTR [rax+0x0]
  4132d0:	push   rbp
  4132d1:	push   r15
  4132d3:	push   r14
  4132d5:	push   r13
  4132d7:	push   r12
  4132d9:	push   rbx
  4132da:	sub    rsp,0x858
  4132e1:	mov    rax,QWORD PTR [rdi+0x8]
  4132e5:	cmp    rax,QWORD PTR [rip+0x50c9c]        # 463f88 <strcmp@plt+0x60800>
  4132ec:	jne    413a56 <strcmp@plt+0x102ce>
  4132f2:	mov    r14,rdi
  4132f5:	call   42bbd0 <strcmp@plt+0x28448>
  4132fa:	mov    rbx,rax
  4132fd:	call   42bbd0 <strcmp@plt+0x28448>
  413302:	mov    QWORD PTR [rsp+0x28],rax
  413307:	call   42bbd0 <strcmp@plt+0x28448>
  41330c:	mov    rbp,rax
  41330f:	mov    rax,QWORD PTR [r14+0x18]
  413313:	mov    rdi,QWORD PTR [rax]
  413316:	mov    rsi,rbp
  413319:	call   42bcf0 <strcmp@plt+0x28568>
  41331e:	mov    rax,QWORD PTR [r14+0x18]
  413322:	mov    rdi,QWORD PTR [rax+0x8]
  413326:	mov    QWORD PTR [rsp+0x18],rbp
  41332b:	mov    rsi,rbp
  41332e:	call   42bcf0 <strcmp@plt+0x28568>
  413333:	mov    QWORD PTR [rsp+0x8],r14
  413338:	mov    rax,QWORD PTR [r14+0x18]
  41333c:	mov    rcx,QWORD PTR [rax+0x10]
  413340:	mov    rcx,QWORD PTR [rcx]
  413343:	cmp    DWORD PTR [rcx],0x0
  413346:	je     4133a9 <strcmp@plt+0xfc21>
  413348:	xor    r15d,r15d
  41334b:	mov    r14d,0x3
  413351:	xor    ebp,ebp
  413353:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41335d:	nop    DWORD PTR [rax]
  413360:	mov    rdx,QWORD PTR [rcx+0x10]
  413364:	mov    esi,ebp
  413366:	shr    esi,0x4
  413369:	mov    edi,r15d
  41336c:	and    dil,0x1e
  413370:	shlx   edi,r14d,edi
  413375:	test   DWORD PTR [rdx+rsi*4],edi
  413378:	jne    413397 <strcmp@plt+0xfc0f>
  41337a:	mov    rax,QWORD PTR [rcx+0x20]
  41337e:	mov    ecx,ebp
  413380:	mov    rdi,QWORD PTR [rax+rcx*8]
  413384:	mov    rsi,QWORD PTR [rsp+0x18]
  413389:	call   42bcf0 <strcmp@plt+0x28568>
  41338e:	mov    rax,QWORD PTR [rsp+0x8]
  413393:	mov    rax,QWORD PTR [rax+0x18]
  413397:	add    ebp,0x1
  41339a:	mov    rcx,QWORD PTR [rax+0x10]
  41339e:	mov    rcx,QWORD PTR [rcx]
  4133a1:	add    r15d,0x2
  4133a5:	cmp    ebp,DWORD PTR [rcx]
  4133a7:	jne    413360 <strcmp@plt+0xfbd8>
  4133a9:	mov    rcx,QWORD PTR [rax+0x18]
  4133ad:	mov    rcx,QWORD PTR [rcx]
  4133b0:	cmp    DWORD PTR [rcx],0x0
  4133b3:	je     413409 <strcmp@plt+0xfc81>
  4133b5:	xor    r15d,r15d
  4133b8:	mov    r14d,0x3
  4133be:	xor    ebp,ebp
  4133c0:	mov    rdx,QWORD PTR [rcx+0x10]
  4133c4:	mov    esi,ebp
  4133c6:	shr    esi,0x4
  4133c9:	mov    edi,r15d
  4133cc:	and    dil,0x1e
  4133d0:	shlx   edi,r14d,edi
  4133d5:	test   DWORD PTR [rdx+rsi*4],edi
  4133d8:	jne    4133f7 <strcmp@plt+0xfc6f>
  4133da:	mov    rax,QWORD PTR [rcx+0x20]
  4133de:	mov    ecx,ebp
  4133e0:	mov    rdi,QWORD PTR [rax+rcx*8]
  4133e4:	mov    rsi,QWORD PTR [rsp+0x18]
  4133e9:	call   42bcf0 <strcmp@plt+0x28568>
  4133ee:	mov    rax,QWORD PTR [rsp+0x8]
  4133f3:	mov    rax,QWORD PTR [rax+0x18]
  4133f7:	add    ebp,0x1
  4133fa:	mov    rcx,QWORD PTR [rax+0x18]
  4133fe:	mov    rcx,QWORD PTR [rcx]
  413401:	add    r15d,0x2
  413405:	cmp    ebp,DWORD PTR [rcx]
  413407:	jne    4133c0 <strcmp@plt+0xfc38>
  413409:	mov    rdi,QWORD PTR [rax+0x20]
  41340d:	mov    rbp,QWORD PTR [rsp+0x18]
  413412:	mov    rsi,rbp
  413415:	call   42bcf0 <strcmp@plt+0x28568>
  41341a:	mov    rax,QWORD PTR [rsp+0x8]
  41341f:	mov    rax,QWORD PTR [rax+0x18]
  413423:	mov    rdi,QWORD PTR [rax+0x20]
  413427:	mov    rsi,rbp
  41342a:	call   42bcf0 <strcmp@plt+0x28568>
  41342f:	mov    rdx,QWORD PTR [rbp+0x8]
  413433:	cmp    rdx,rbp
  413436:	je     41362d <strcmp@plt+0xfea5>
  41343c:	mov    DWORD PTR [rsp+0x4],0x0
  413444:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41344e:	xchg   ax,ax
  413450:	mov    rax,QWORD PTR [rdx+0x10]
  413454:	mov    rcx,QWORD PTR [rax]
  413457:	test   rcx,rcx
  41345a:	je     41361c <strcmp@plt+0xfe94>
  413460:	xor    esi,esi
  413462:	mov    QWORD PTR [rsp+0x10],rdx
  413467:	nop    WORD PTR [rax+rax*1+0x0]
  413470:	cmp    QWORD PTR [rcx+0x8],0x0
  413475:	je     4135cb <strcmp@plt+0xfe43>
  41347b:	mov    QWORD PTR [rsp+0x38],rsi
  413480:	mov    QWORD PTR [rsp+0x30],rcx
  413485:	mov    rax,QWORD PTR [rcx+0x28]
  413489:	mov    r12,QWORD PTR [rax]
  41348c:	test   r12,r12
  41348f:	je     4135bc <strcmp@plt+0xfe34>
  413495:	xor    edx,edx
  413497:	nop    WORD PTR [rax+rax*1+0x0]
  4134a0:	cmp    QWORD PTR [r12+0x8],0x0
  4134a6:	je     413570 <strcmp@plt+0xfde8>
  4134ac:	mov    rax,QWORD PTR [r12+0x28]
  4134b1:	test   rax,rax
  4134b4:	je     413570 <strcmp@plt+0xfde8>
  4134ba:	mov    QWORD PTR [rsp+0x20],rdx
  4134bf:	mov    rbp,QWORD PTR [rax]
  4134c2:	mov    rdi,rbp
  4134c5:	call   4233c0 <strcmp@plt+0x1fc38>
  4134ca:	mov    r15d,eax
  4134cd:	mov    r14,QWORD PTR [rbx+0x8]
  4134d1:	cmp    r14,rbx
  4134d4:	jne    4134e9 <strcmp@plt+0xfd61>
  4134d6:	jmp    413560 <strcmp@plt+0xfdd8>
  4134db:	nop    DWORD PTR [rax+rax*1+0x0]
  4134e0:	mov    r14,QWORD PTR [r14+0x8]
  4134e4:	cmp    r14,rbx
  4134e7:	je     413560 <strcmp@plt+0xfdd8>
  4134e9:	mov    r13,QWORD PTR [r14+0x10]
  4134ed:	mov    rdi,r13
  4134f0:	call   4233c0 <strcmp@plt+0x1fc38>
  4134f5:	cmp    r15b,al
  4134f8:	jae    413510 <strcmp@plt+0xfd88>
  4134fa:	mov    rdi,rbp
  4134fd:	mov    rsi,r13
  413500:	jmp    413516 <strcmp@plt+0xfd8e>
  413502:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41350c:	nop    DWORD PTR [rax+0x0]
  413510:	mov    rdi,r13
  413513:	mov    rsi,rbp
  413516:	call   4342e0 <strcmp@plt+0x30b58>
  41351b:	cmp    al,0x1
  41351d:	jne    4134e0 <strcmp@plt+0xfd58>
  41351f:	mov    rdi,rbp
  413522:	call   423130 <strcmp@plt+0x1f9a8>
  413527:	mov    rbp,rax
  41352a:	mov    rdi,r13
  41352d:	call   423130 <strcmp@plt+0x1f9a8>
  413532:	mov    rcx,rax
  413535:	mov    edi,0x2
  41353a:	xor    eax,eax
  41353c:	lea    rsi,[rip+0x33581]        # 446ac4 <strcmp@plt+0x4333c>
  413543:	mov    rdx,rbp
  413546:	call   42e800 <strcmp@plt+0x2b078>
  41354b:	mov    al,0x1
  41354d:	mov    DWORD PTR [rsp+0x4],eax
  413551:	jmp    41356b <strcmp@plt+0xfde3>
  413553:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41355d:	nop    DWORD PTR [rax]
  413560:	mov    rdi,rbp
  413563:	mov    rsi,rbx
  413566:	call   42bcf0 <strcmp@plt+0x28568>
  41356b:	mov    rdx,QWORD PTR [rsp+0x20]
  413570:	mov    rax,QWORD PTR [r12+0x10]
  413575:	mov    rcx,QWORD PTR [r12+0x18]
  41357a:	test   rax,rax
  41357d:	je     413590 <strcmp@plt+0xfe08>
  41357f:	test   rcx,rcx
  413582:	je     4135b0 <strcmp@plt+0xfe28>
  413584:	mov    QWORD PTR [rsp+rdx*8+0x40],rcx
  413589:	add    rdx,0x1
  41358d:	jmp    4135b0 <strcmp@plt+0xfe28>
  41358f:	nop
  413590:	test   rcx,rcx
  413593:	je     41359a <strcmp@plt+0xfe12>
  413595:	mov    rax,rcx
  413598:	jmp    4135b0 <strcmp@plt+0xfe28>
  41359a:	test   rdx,rdx
  41359d:	je     4135bc <strcmp@plt+0xfe34>
  41359f:	mov    rax,QWORD PTR [rsp+rdx*8+0x38]
  4135a4:	add    rdx,0xffffffffffffffff
  4135a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4135b0:	mov    r12,rax
  4135b3:	test   rax,rax
  4135b6:	jne    4134a0 <strcmp@plt+0xfd18>
  4135bc:	mov    rdx,QWORD PTR [rsp+0x10]
  4135c1:	mov    rsi,QWORD PTR [rsp+0x38]
  4135c6:	mov    rcx,QWORD PTR [rsp+0x30]
  4135cb:	mov    rax,QWORD PTR [rcx+0x10]
  4135cf:	mov    rcx,QWORD PTR [rcx+0x18]
  4135d3:	test   rax,rax
  4135d6:	je     4135f0 <strcmp@plt+0xfe68>
  4135d8:	test   rcx,rcx
  4135db:	je     413610 <strcmp@plt+0xfe88>
  4135dd:	mov    QWORD PTR [rsp+rsi*8+0x450],rcx
  4135e5:	add    rsi,0x1
  4135e9:	jmp    413610 <strcmp@plt+0xfe88>
  4135eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4135f0:	test   rcx,rcx
  4135f3:	je     4135fa <strcmp@plt+0xfe72>
  4135f5:	mov    rax,rcx
  4135f8:	jmp    413610 <strcmp@plt+0xfe88>
  4135fa:	test   rsi,rsi
  4135fd:	je     41361c <strcmp@plt+0xfe94>
  4135ff:	mov    rax,QWORD PTR [rsp+rsi*8+0x448]
  413607:	add    rsi,0xffffffffffffffff
  41360b:	nop    DWORD PTR [rax+rax*1+0x0]
  413610:	mov    rcx,rax
  413613:	test   rax,rax
  413616:	jne    413470 <strcmp@plt+0xfce8>
  41361c:	mov    rdx,QWORD PTR [rdx+0x8]
  413620:	cmp    rdx,QWORD PTR [rsp+0x18]
  413625:	jne    413450 <strcmp@plt+0xfcc8>
  41362b:	jmp    413635 <strcmp@plt+0xfead>
  41362d:	mov    DWORD PTR [rsp+0x4],0x0
  413635:	mov    rdi,QWORD PTR [rsp+0x18]
  41363a:	call   42c250 <strcmp@plt+0x28ac8>
  41363f:	mov    rdi,rbx
  413642:	call   42c250 <strcmp@plt+0x28ac8>
  413647:	call   42bbd0 <strcmp@plt+0x28448>
  41364c:	mov    rbp,rax
  41364f:	mov    rbx,QWORD PTR [rsp+0x8]
  413654:	mov    rax,QWORD PTR [rbx+0x20]
  413658:	mov    rdi,QWORD PTR [rax]
  41365b:	mov    rsi,rbp
  41365e:	call   42bcf0 <strcmp@plt+0x28568>
  413663:	mov    rax,QWORD PTR [rbx+0x20]
  413667:	mov    rdi,QWORD PTR [rax+0x8]
  41366b:	mov    QWORD PTR [rsp+0x10],rbp
  413670:	mov    rsi,rbp
  413673:	call   42bcf0 <strcmp@plt+0x28568>
  413678:	mov    rax,QWORD PTR [rbx+0x20]
  41367c:	mov    rcx,QWORD PTR [rax+0x10]
  413680:	mov    rcx,QWORD PTR [rcx]
  413683:	cmp    DWORD PTR [rcx],0x0
  413686:	je     4136e7 <strcmp@plt+0xff5f>
  413688:	xor    ebx,ebx
  41368a:	mov    r14d,0x3
  413690:	xor    ebp,ebp
  413692:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41369c:	nop    DWORD PTR [rax+0x0]
  4136a0:	mov    rdx,QWORD PTR [rcx+0x10]
  4136a4:	mov    esi,ebp
  4136a6:	shr    esi,0x4
  4136a9:	mov    edi,ebx
  4136ab:	and    dil,0x1e
  4136af:	shlx   edi,r14d,edi
  4136b4:	test   DWORD PTR [rdx+rsi*4],edi
  4136b7:	jne    4136d6 <strcmp@plt+0xff4e>
  4136b9:	mov    rax,QWORD PTR [rcx+0x20]
  4136bd:	mov    ecx,ebp
  4136bf:	mov    rdi,QWORD PTR [rax+rcx*8]
  4136c3:	mov    rsi,QWORD PTR [rsp+0x10]
  4136c8:	call   42bcf0 <strcmp@plt+0x28568>
  4136cd:	mov    rax,QWORD PTR [rsp+0x8]
  4136d2:	mov    rax,QWORD PTR [rax+0x20]
  4136d6:	add    ebp,0x1
  4136d9:	mov    rcx,QWORD PTR [rax+0x10]
  4136dd:	mov    rcx,QWORD PTR [rcx]
  4136e0:	add    ebx,0x2
  4136e3:	cmp    ebp,DWORD PTR [rcx]
  4136e5:	jne    4136a0 <strcmp@plt+0xff18>
  4136e7:	mov    rcx,QWORD PTR [rax+0x18]
  4136eb:	mov    rcx,QWORD PTR [rcx]
  4136ee:	cmp    DWORD PTR [rcx],0x0
  4136f1:	je     413747 <strcmp@plt+0xffbf>
  4136f3:	xor    ebx,ebx
  4136f5:	mov    r14d,0x3
  4136fb:	xor    ebp,ebp
  4136fd:	nop    DWORD PTR [rax]
  413700:	mov    rdx,QWORD PTR [rcx+0x10]
  413704:	mov    esi,ebp
  413706:	shr    esi,0x4
  413709:	mov    edi,ebx
  41370b:	and    dil,0x1e
  41370f:	shlx   edi,r14d,edi
  413714:	test   DWORD PTR [rdx+rsi*4],edi
  413717:	jne    413736 <strcmp@plt+0xffae>
  413719:	mov    rax,QWORD PTR [rcx+0x20]
  41371d:	mov    ecx,ebp
  41371f:	mov    rdi,QWORD PTR [rax+rcx*8]
  413723:	mov    rsi,QWORD PTR [rsp+0x10]
  413728:	call   42bcf0 <strcmp@plt+0x28568>
  41372d:	mov    rax,QWORD PTR [rsp+0x8]
  413732:	mov    rax,QWORD PTR [rax+0x20]
  413736:	add    ebp,0x1
  413739:	mov    rcx,QWORD PTR [rax+0x18]
  41373d:	mov    rcx,QWORD PTR [rcx]
  413740:	add    ebx,0x2
  413743:	cmp    ebp,DWORD PTR [rcx]
  413745:	jne    413700 <strcmp@plt+0xff78>
  413747:	mov    rdi,QWORD PTR [rax+0x20]
  41374b:	mov    rbp,QWORD PTR [rsp+0x10]
  413750:	mov    rsi,rbp
  413753:	call   42bcf0 <strcmp@plt+0x28568>
  413758:	mov    rbx,QWORD PTR [rsp+0x8]
  41375d:	mov    rax,QWORD PTR [rbx+0x20]
  413761:	mov    rdi,QWORD PTR [rax+0x20]
  413765:	mov    rsi,rbp
  413768:	call   42bcf0 <strcmp@plt+0x28568>
  41376d:	mov    rdx,QWORD PTR [rbp+0x8]
  413771:	cmp    rdx,rbp
  413774:	je     4139bb <strcmp@plt+0x10233>
  41377a:	nop    WORD PTR [rax+rax*1+0x0]
  413780:	mov    rax,QWORD PTR [rdx+0x10]
  413784:	mov    rcx,QWORD PTR [rax]
  413787:	test   rcx,rcx
  41378a:	je     4139ac <strcmp@plt+0x10224>
  413790:	xor    esi,esi
  413792:	mov    QWORD PTR [rsp+0x30],rdx
  413797:	nop    WORD PTR [rax+rax*1+0x0]
  4137a0:	cmp    QWORD PTR [rcx+0x8],0x0
  4137a5:	je     41395b <strcmp@plt+0x101d3>
  4137ab:	mov    QWORD PTR [rsp+0x20],rsi
  4137b0:	mov    QWORD PTR [rsp+0x38],rcx
  4137b5:	mov    rax,QWORD PTR [rcx+0x28]
  4137b9:	mov    r14,QWORD PTR [rax]
  4137bc:	test   r14,r14
  4137bf:	je     41394c <strcmp@plt+0x101c4>
  4137c5:	xor    r12d,r12d
  4137c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4137d0:	cmp    QWORD PTR [r14+0x8],0x0
  4137d5:	je     413902 <strcmp@plt+0x1017a>
  4137db:	mov    rax,QWORD PTR [r14+0x28]
  4137df:	test   rax,rax
  4137e2:	je     413902 <strcmp@plt+0x1017a>
  4137e8:	mov    r15,QWORD PTR [rax]
  4137eb:	mov    rdi,QWORD PTR [rbx+0x18]
  4137ef:	mov    rsi,r15
  4137f2:	call   42fcb0 <strcmp@plt+0x2c528>
  4137f7:	test   rax,rax
  4137fa:	je     41387c <strcmp@plt+0x100f4>
  413800:	mov    rbp,QWORD PTR [rax]
  413803:	mov    rdi,r15
  413806:	mov    rsi,rbp
  413809:	call   423970 <strcmp@plt+0x201e8>
  41380e:	test   eax,eax
  413810:	je     4138a5 <strcmp@plt+0x1011d>
  413816:	mov    rdi,r15
  413819:	call   4233c0 <strcmp@plt+0x1fc38>
  41381e:	mov    ebp,eax
  413820:	mov    rax,QWORD PTR [rsp+0x28]
  413825:	mov    rbx,QWORD PTR [rax+0x8]
  413829:	cmp    rbx,rax
  41382c:	je     41386a <strcmp@plt+0x100e2>
  41382e:	xchg   ax,ax
  413830:	mov    r13,QWORD PTR [rbx+0x10]
  413834:	mov    rdi,r13
  413837:	call   4233c0 <strcmp@plt+0x1fc38>
  41383c:	cmp    bpl,al
  41383f:	jae    413850 <strcmp@plt+0x100c8>
  413841:	mov    rdi,r15
  413844:	mov    rsi,r13
  413847:	jmp    413856 <strcmp@plt+0x100ce>
  413849:	nop    DWORD PTR [rax+0x0]
  413850:	mov    rdi,r13
  413853:	mov    rsi,r15
  413856:	call   4342e0 <strcmp@plt+0x30b58>
  41385b:	cmp    al,0x1
  41385d:	je     4138cb <strcmp@plt+0x10143>
  41385f:	mov    rbx,QWORD PTR [rbx+0x8]
  413863:	cmp    rbx,QWORD PTR [rsp+0x28]
  413868:	jne    413830 <strcmp@plt+0x100a8>
  41386a:	mov    rdi,r15
  41386d:	mov    rsi,QWORD PTR [rsp+0x28]
  413872:	call   42bcf0 <strcmp@plt+0x28568>
  413877:	jmp    4138fd <strcmp@plt+0x10175>
  41387c:	mov    rdi,r15
  41387f:	call   423130 <strcmp@plt+0x1f9a8>
  413884:	mov    rcx,rax
  413887:	mov    edi,0x2
  41388c:	xor    eax,eax
  41388e:	lea    rsi,[rip+0x3326a]        # 446aff <strcmp@plt+0x43377>
  413895:	mov    rdx,rcx
  413898:	call   42e800 <strcmp@plt+0x2b078>
  41389d:	mov    al,0x1
  41389f:	mov    DWORD PTR [rsp+0x4],eax
  4138a3:	jmp    413902 <strcmp@plt+0x1017a>
  4138a5:	mov    rdi,r15
  4138a8:	call   423130 <strcmp@plt+0x1f9a8>
  4138ad:	mov    rbx,rax
  4138b0:	mov    rdi,rbp
  4138b3:	call   423130 <strcmp@plt+0x1f9a8>
  4138b8:	mov    rcx,rax
  4138bb:	mov    edi,0x2
  4138c0:	xor    eax,eax
  4138c2:	lea    rsi,[rip+0x3327d]        # 446b46 <strcmp@plt+0x433be>
  4138c9:	jmp    4138ef <strcmp@plt+0x10167>
  4138cb:	mov    rdi,r15
  4138ce:	call   423130 <strcmp@plt+0x1f9a8>
  4138d3:	mov    rbx,rax
  4138d6:	mov    rdi,r13
  4138d9:	call   423130 <strcmp@plt+0x1f9a8>
  4138de:	mov    rcx,rax
  4138e1:	mov    edi,0x2
  4138e6:	xor    eax,eax
  4138e8:	lea    rsi,[rip+0x3329c]        # 446b8b <strcmp@plt+0x43403>
  4138ef:	mov    rdx,rbx
  4138f2:	call   42e800 <strcmp@plt+0x2b078>
  4138f7:	mov    al,0x1
  4138f9:	mov    DWORD PTR [rsp+0x4],eax
  4138fd:	mov    rbx,QWORD PTR [rsp+0x8]
  413902:	mov    rax,QWORD PTR [r14+0x10]
  413906:	mov    rcx,QWORD PTR [r14+0x18]
  41390a:	test   rax,rax
  41390d:	je     413920 <strcmp@plt+0x10198>
  41390f:	test   rcx,rcx
  413912:	je     413940 <strcmp@plt+0x101b8>
  413914:	mov    QWORD PTR [rsp+r12*8+0x40],rcx
  413919:	add    r12,0x1
  41391d:	jmp    413940 <strcmp@plt+0x101b8>
  41391f:	nop
  413920:	test   rcx,rcx
  413923:	je     41392a <strcmp@plt+0x101a2>
  413925:	mov    rax,rcx
  413928:	jmp    413940 <strcmp@plt+0x101b8>
  41392a:	test   r12,r12
  41392d:	je     41394c <strcmp@plt+0x101c4>
  41392f:	mov    rax,QWORD PTR [rsp+r12*8+0x38]
  413934:	add    r12,0xffffffffffffffff
  413938:	nop    DWORD PTR [rax+rax*1+0x0]
  413940:	mov    r14,rax
  413943:	test   rax,rax
  413946:	jne    4137d0 <strcmp@plt+0x10048>
  41394c:	mov    rdx,QWORD PTR [rsp+0x30]
  413951:	mov    rsi,QWORD PTR [rsp+0x20]
  413956:	mov    rcx,QWORD PTR [rsp+0x38]
  41395b:	mov    rax,QWORD PTR [rcx+0x10]
  41395f:	mov    rcx,QWORD PTR [rcx+0x18]
  413963:	test   rax,rax
  413966:	je     413980 <strcmp@plt+0x101f8>
  413968:	test   rcx,rcx
  41396b:	je     4139a0 <strcmp@plt+0x10218>
  41396d:	mov    QWORD PTR [rsp+rsi*8+0x450],rcx
  413975:	add    rsi,0x1
  413979:	jmp    4139a0 <strcmp@plt+0x10218>
  41397b:	nop    DWORD PTR [rax+rax*1+0x0]
  413980:	test   rcx,rcx
  413983:	je     41398a <strcmp@plt+0x10202>
  413985:	mov    rax,rcx
  413988:	jmp    4139a0 <strcmp@plt+0x10218>
  41398a:	test   rsi,rsi
  41398d:	je     4139ac <strcmp@plt+0x10224>
  41398f:	mov    rax,QWORD PTR [rsp+rsi*8+0x448]
  413997:	add    rsi,0xffffffffffffffff
  41399b:	nop    DWORD PTR [rax+rax*1+0x0]
  4139a0:	mov    rcx,rax
  4139a3:	test   rax,rax
  4139a6:	jne    4137a0 <strcmp@plt+0x10018>
  4139ac:	mov    rdx,QWORD PTR [rdx+0x8]
  4139b0:	cmp    rdx,QWORD PTR [rsp+0x10]
  4139b5:	jne    413780 <strcmp@plt+0xfff8>
  4139bb:	mov    rdi,QWORD PTR [rsp+0x10]
  4139c0:	call   42c250 <strcmp@plt+0x28ac8>
  4139c5:	mov    rdi,QWORD PTR [rsp+0x28]
  4139ca:	call   42c250 <strcmp@plt+0x28ac8>
  4139cf:	cmp    BYTE PTR [rsp+0x4],0x0
  4139d4:	je     4139dd <strcmp@plt+0x10255>
  4139d6:	xor    eax,eax
  4139d8:	call   43b420 <strcmp@plt+0x37c98>
  4139dd:	lea    rbx,[rip+0x513cc]        # 464db0 <strcmp@plt+0x61628>
  4139e4:	cmp    DWORD PTR [rbx],0x0
  4139e7:	jle    4139fc <strcmp@plt+0x10274>
  4139e9:	lea    rsi,[rip+0x32760]        # 446150 <strcmp@plt+0x429c8>
  4139f0:	mov    edi,0x5
  4139f5:	xor    eax,eax
  4139f7:	call   42e800 <strcmp@plt+0x2b078>
  4139fc:	mov    esi,0x5
  413a01:	mov    rbp,QWORD PTR [rsp+0x8]
  413a06:	mov    rdi,rbp
  413a09:	call   414100 <strcmp@plt+0x10978>
  413a0e:	mov    esi,0x5
  413a13:	mov    rdi,rbp
  413a16:	call   4143f0 <strcmp@plt+0x10c68>
  413a1b:	cmp    DWORD PTR [rbx],0x0
  413a1e:	jle    413a44 <strcmp@plt+0x102bc>
  413a20:	lea    rsi,[rip+0x3319b]        # 446bc2 <strcmp@plt+0x4343a>
  413a27:	mov    edi,0x5
  413a2c:	xor    eax,eax
  413a2e:	add    rsp,0x858
  413a35:	pop    rbx
  413a36:	pop    r12
  413a38:	pop    r13
  413a3a:	pop    r14
  413a3c:	pop    r15
  413a3e:	pop    rbp
  413a3f:	jmp    42e800 <strcmp@plt+0x2b078>
  413a44:	add    rsp,0x858
  413a4b:	pop    rbx
  413a4c:	pop    r12
  413a4e:	pop    r13
  413a50:	pop    r14
  413a52:	pop    r15
  413a54:	pop    rbp
  413a55:	ret    
  413a56:	lea    rdi,[rip+0x332fd]        # 446d5a <strcmp@plt+0x435d2>
  413a5d:	lea    rsi,[rip+0x33312]        # 446d76 <strcmp@plt+0x435ee>
  413a64:	lea    rdx,[rip+0x3331e]        # 446d89 <strcmp@plt+0x43601>
  413a6b:	call   4321d0 <strcmp@plt+0x2ea48>
  413a70:	push   rbp
  413a71:	push   r15
  413a73:	push   r14
  413a75:	push   r13
  413a77:	push   r12
  413a79:	push   rbx
  413a7a:	sub    rsp,0xc8
  413a81:	mov    rax,QWORD PTR [rdi+0x8]
  413a85:	cmp    rax,QWORD PTR [rip+0x504fc]        # 463f88 <strcmp@plt+0x60800>
  413a8c:	jne    414019 <strcmp@plt+0x10891>
  413a92:	mov    r14,rdx
  413a95:	mov    rbp,rsi
  413a98:	mov    r15,rdi
  413a9b:	mov    rdi,rsi
  413a9e:	call   420d90 <strcmp@plt+0x1d608>
  413aa3:	cmp    eax,0x8
  413aa6:	jne    413b36 <strcmp@plt+0x103ae>
  413aac:	mov    rdi,rbp
  413aaf:	call   420dc0 <strcmp@plt+0x1d638>
  413ab4:	test   BYTE PTR [rax],0x8
  413ab7:	jne    413f17 <strcmp@plt+0x1078f>
  413abd:	mov    rdi,rbp
  413ac0:	call   420df0 <strcmp@plt+0x1d668>
  413ac5:	cmp    eax,0x1
  413ac8:	jne    413f4a <strcmp@plt+0x107c2>
  413ace:	lea    rbx,[rsp+0x30]
  413ad3:	mov    rdi,rbp
  413ad6:	mov    rsi,rbx
  413ad9:	call   433490 <strcmp@plt+0x2fd08>
  413ade:	movzx  esi,WORD PTR [rsp+0x72]
  413ae3:	movzx  edx,WORD PTR [rsp+0x70]
  413ae8:	lea    rcx,[rsp+0x50]
  413aed:	lea    rdi,[rsp+0x80]
  413af5:	mov    r8,rbx
  413af8:	call   435600 <strcmp@plt+0x31e78>
  413afd:	mov    rdi,rbp
  413b00:	call   420d90 <strcmp@plt+0x1d608>
  413b05:	mov    ebx,eax
  413b07:	lea    rax,[rip+0x512a2]        # 464db0 <strcmp@plt+0x61628>
  413b0e:	cmp    DWORD PTR [rax],0x0
  413b11:	jle    413b3b <strcmp@plt+0x103b3>
  413b13:	mov    rdi,rbp
  413b16:	call   422870 <strcmp@plt+0x1f0e8>
  413b1b:	mov    rcx,rax
  413b1e:	lea    rsi,[rip+0x330b3]        # 446bd8 <strcmp@plt+0x43450>
  413b25:	mov    edi,0x5
  413b2a:	xor    eax,eax
  413b2c:	mov    rdx,rcx
  413b2f:	call   42e800 <strcmp@plt+0x2b078>
  413b34:	jmp    413b3b <strcmp@plt+0x103b3>
  413b36:	mov    ebx,eax
  413b38:	xor    r14d,r14d
  413b3b:	lea    eax,[rbx-0x2]
  413b3e:	cmp    eax,0x3
  413b41:	jb     413ed0 <strcmp@plt+0x10748>
  413b47:	cmp    ebx,0x7
  413b4a:	je     413ed0 <strcmp@plt+0x10748>
  413b50:	cmp    ebx,0x1
  413b53:	jne    413f60 <strcmp@plt+0x107d8>
  413b59:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  413b5e:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  413b63:	vmovups YMMWORD PTR [rsp+0x50],ymm1
  413b69:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  413b6f:	xor    eax,eax
  413b71:	vzeroupper 
  413b74:	call   422f90 <strcmp@plt+0x1f808>
  413b79:	mov    rbp,rax
  413b7c:	lea    rbx,[rsp+0x30]
  413b81:	mov    rdi,rbx
  413b84:	call   4216c0 <strcmp@plt+0x1df38>
  413b89:	mov    r13,rax
  413b8c:	mov    rdi,rbx
  413b8f:	mov    rsi,rbp
  413b92:	call   420f70 <strcmp@plt+0x1d7e8>
  413b97:	cmp    eax,0x1
  413b9a:	jne    413f7a <strcmp@plt+0x107f2>
  413ba0:	lea    r12,[rip+0x51209]        # 464db0 <strcmp@plt+0x61628>
  413ba7:	cmp    DWORD PTR [r12],0x0
  413bac:	jle    413bcf <strcmp@plt+0x10447>
  413bae:	mov    rdi,rbp
  413bb1:	call   423130 <strcmp@plt+0x1f9a8>
  413bb6:	mov    rcx,rax
  413bb9:	lea    rsi,[rip+0x33111]        # 446cd1 <strcmp@plt+0x43549>
  413bc0:	mov    edi,0x5
  413bc5:	xor    eax,eax
  413bc7:	mov    rdx,rcx
  413bca:	call   42e800 <strcmp@plt+0x2b078>
  413bcf:	movzx  ecx,WORD PTR [r13+0x0]
  413bd4:	movzx  eax,BYTE PTR [r13+0x2]
  413bd9:	shl    eax,0x10
  413bdc:	or     eax,ecx
  413bde:	test   al,0x2
  413be0:	jne    413f99 <strcmp@plt+0x10811>
  413be6:	test   al,0x1
  413be8:	jne    413fad <strcmp@plt+0x10825>
  413bee:	mov    QWORD PTR [rsp+0x8],rbp
  413bf3:	lea    rdi,[rip+0xf3a6]        # 422fa0 <strcmp@plt+0x1f818>
  413bfa:	call   42bc00 <strcmp@plt+0x28478>
  413bff:	lea    rdi,[rsp+0x30]
  413c04:	mov    QWORD PTR [rsp+0x18],rax
  413c09:	mov    rsi,rax
  413c0c:	call   420fe0 <strcmp@plt+0x1d858>
  413c11:	cmp    BYTE PTR [r13+0x3],0x0
  413c16:	je     413fd0 <strcmp@plt+0x10848>
  413c1c:	mov    QWORD PTR [rsp+0x10],r13
  413c21:	xor    eax,eax
  413c23:	call   422f90 <strcmp@plt+0x1f808>
  413c28:	mov    r13,rax
  413c2b:	lea    rdi,[rsp+0x30]
  413c30:	mov    rsi,rax
  413c33:	call   420fa0 <strcmp@plt+0x1d818>
  413c38:	cmp    eax,0x1
  413c3b:	jne    414005 <strcmp@plt+0x1087d>
  413c41:	xor    ebp,ebp
  413c43:	mov    rdi,QWORD PTR [r15+0x18]
  413c47:	mov    rsi,r13
  413c4a:	call   42fcb0 <strcmp@plt+0x2c528>
  413c4f:	test   rax,rax
  413c52:	je     413cef <strcmp@plt+0x10567>
  413c58:	mov    rbx,rax
  413c5b:	mov    rdi,QWORD PTR [r15+0x20]
  413c5f:	mov    rsi,r13
  413c62:	call   42fcb0 <strcmp@plt+0x2c528>
  413c67:	test   rax,rax
  413c6a:	je     413d90 <strcmp@plt+0x10608>
  413c70:	mov    r12,rax
  413c73:	mov    edi,0x6
  413c78:	xor    eax,eax
  413c7a:	call   4221a0 <strcmp@plt+0x1ea18>
  413c7f:	mov    rbx,rax
  413c82:	mov    rsi,QWORD PTR [r12]
  413c86:	mov    rdi,rax
  413c89:	call   421b60 <strcmp@plt+0x1e3d8>
  413c8e:	movzx  eax,WORD PTR [rbx+0x24]
  413c92:	mov    rcx,QWORD PTR [rbx+0x30]
  413c96:	mov    rdx,QWORD PTR [rsp+0x10]
  413c9b:	mov    rdx,QWORD PTR [rdx+0x4]
  413c9f:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  413ca4:	mov    rdi,r15
  413ca7:	mov    rsi,rbx
  413caa:	mov    rdx,r14
  413cad:	call   407ab0 <strcmp@plt+0x4328>
  413cb2:	lea    r12,[rip+0x510f7]        # 464db0 <strcmp@plt+0x61628>
  413cb9:	mov    ecx,DWORD PTR [r12]
  413cbd:	cmp    eax,0x1
  413cc0:	jne    413e50 <strcmp@plt+0x106c8>
  413cc6:	test   ecx,ecx
  413cc8:	jle    413e67 <strcmp@plt+0x106df>
  413cce:	mov    edi,0x5
  413cd3:	xor    eax,eax
  413cd5:	lea    rsi,[rip+0x327a7]        # 446483 <strcmp@plt+0x42cfb>
  413cdc:	call   42e800 <strcmp@plt+0x2b078>
  413ce1:	test   rbx,rbx
  413ce4:	jne    413e6c <strcmp@plt+0x106e4>
  413cea:	jmp    413e74 <strcmp@plt+0x106ec>
  413cef:	mov    rax,QWORD PTR [rsp+0x10]
  413cf4:	mov    r9,QWORD PTR [rax+0x4]
  413cf8:	xor    esi,esi
  413cfa:	mov    edx,0x5
  413cff:	xor    ecx,ecx
  413d01:	mov    r8d,0x1
  413d07:	mov    rdi,r13
  413d0a:	call   422400 <strcmp@plt+0x1ec78>
  413d0f:	mov    rbx,rax
  413d12:	cmp    DWORD PTR [r12],0x0
  413d17:	jle    413d74 <strcmp@plt+0x105ec>
  413d19:	mov    rdi,r13
  413d1c:	call   423130 <strcmp@plt+0x1f9a8>
  413d21:	mov    rcx,rax
  413d24:	mov    edi,0x5
  413d29:	xor    eax,eax
  413d2b:	lea    rsi,[rip+0x32675]        # 4463a7 <strcmp@plt+0x42c1f>
  413d32:	mov    rdx,rcx
  413d35:	call   42e800 <strcmp@plt+0x2b078>
  413d3a:	cmp    DWORD PTR [r12],0x2
  413d3f:	jl     413d74 <strcmp@plt+0x105ec>
  413d41:	mov    rdi,rbx
  413d44:	call   422870 <strcmp@plt+0x1f0e8>
  413d49:	mov    r12,rax
  413d4c:	mov    rdi,r13
  413d4f:	call   423130 <strcmp@plt+0x1f9a8>
  413d54:	mov    rcx,rax
  413d57:	mov    edi,0x6
  413d5c:	xor    eax,eax
  413d5e:	lea    rsi,[rip+0x3269c]        # 446401 <strcmp@plt+0x42c79>
  413d65:	mov    rdx,r12
  413d68:	lea    r12,[rip+0x51041]        # 464db0 <strcmp@plt+0x61628>
  413d6f:	call   42e800 <strcmp@plt+0x2b078>
  413d74:	mov    rdi,r15
  413d77:	mov    rsi,rbx
  413d7a:	mov    rdx,r14
  413d7d:	call   407ab0 <strcmp@plt+0x4328>
  413d82:	test   rbx,rbx
  413d85:	jne    413e6c <strcmp@plt+0x106e4>
  413d8b:	jmp    413e74 <strcmp@plt+0x106ec>
  413d90:	mov    rdi,QWORD PTR [r15+0x20]
  413d94:	mov    rsi,r13
  413d97:	call   42fcf0 <strcmp@plt+0x2c568>
  413d9c:	mov    r12,rax
  413d9f:	mov    rdi,rax
  413da2:	call   4230a0 <strcmp@plt+0x1f918>
  413da7:	mov    WORD PTR [rsp+0x20],ax
  413dac:	mov    rdi,QWORD PTR [rbx]
  413daf:	call   4230a0 <strcmp@plt+0x1f918>
  413db4:	mov    QWORD PTR [rsp+0x28],r12
  413db9:	cmp    WORD PTR [rsp+0x20],ax
  413dbe:	jae    413dc3 <strcmp@plt+0x1063b>
  413dc0:	mov    r12,QWORD PTR [rbx]
  413dc3:	mov    rax,QWORD PTR [rsp+0x10]
  413dc8:	mov    r9,QWORD PTR [rax+0x4]
  413dcc:	mov    esi,0xf
  413dd1:	mov    edx,0x4
  413dd6:	mov    ecx,0x1
  413ddb:	xor    r8d,r8d
  413dde:	mov    QWORD PTR [rsp+0x20],r12
  413de3:	mov    rdi,r12
  413de6:	call   422400 <strcmp@plt+0x1ec78>
  413deb:	mov    rbx,rax
  413dee:	lea    r12,[rip+0x50fbb]        # 464db0 <strcmp@plt+0x61628>
  413df5:	cmp    DWORD PTR [r12],0x0
  413dfa:	jle    413e31 <strcmp@plt+0x106a9>
  413dfc:	mov    rdi,r13
  413dff:	call   423130 <strcmp@plt+0x1f9a8>
  413e04:	mov    r12,rax
  413e07:	mov    rdi,QWORD PTR [rsp+0x20]
  413e0c:	call   423130 <strcmp@plt+0x1f9a8>
  413e11:	mov    rcx,rax
  413e14:	mov    edi,0x5
  413e19:	xor    eax,eax
  413e1b:	lea    rsi,[rip+0x32ebc]        # 446cde <strcmp@plt+0x43556>
  413e22:	mov    rdx,r12
  413e25:	lea    r12,[rip+0x50f84]        # 464db0 <strcmp@plt+0x61628>
  413e2c:	call   42e800 <strcmp@plt+0x2b078>
  413e31:	mov    rdi,r15
  413e34:	mov    rsi,rbx
  413e37:	mov    rdx,r14
  413e3a:	call   407ab0 <strcmp@plt+0x4328>
  413e3f:	mov    rdi,QWORD PTR [rsp+0x28]
  413e44:	call   422fa0 <strcmp@plt+0x1f818>
  413e49:	test   rbx,rbx
  413e4c:	jne    413e6c <strcmp@plt+0x106e4>
  413e4e:	jmp    413e74 <strcmp@plt+0x106ec>
  413e50:	test   ecx,ecx
  413e52:	jle    413e67 <strcmp@plt+0x106df>
  413e54:	mov    edi,0x5
  413e59:	xor    eax,eax
  413e5b:	lea    rsi,[rip+0x32605]        # 446467 <strcmp@plt+0x42cdf>
  413e62:	call   42e800 <strcmp@plt+0x2b078>
  413e67:	test   rbx,rbx
  413e6a:	je     413e74 <strcmp@plt+0x106ec>
  413e6c:	mov    rdi,rbx
  413e6f:	call   42e010 <strcmp@plt+0x2a888>
  413e74:	mov    rdi,r13
  413e77:	call   422fa0 <strcmp@plt+0x1f818>
  413e7c:	add    ebp,0x1
  413e7f:	mov    rax,QWORD PTR [rsp+0x10]
  413e84:	movzx  eax,BYTE PTR [rax+0x3]
  413e88:	cmp    ebp,eax
  413e8a:	jae    413fd0 <strcmp@plt+0x10848>
  413e90:	xor    eax,eax
  413e92:	call   422f90 <strcmp@plt+0x1f808>
  413e97:	mov    r13,rax
  413e9a:	lea    rdi,[rsp+0x30]
  413e9f:	mov    rsi,rax
  413ea2:	call   420fa0 <strcmp@plt+0x1d818>
  413ea7:	cmp    eax,0x1
  413eaa:	je     413c43 <strcmp@plt+0x104bb>
  413eb0:	mov    rdi,QWORD PTR [rsp+0x18]
  413eb5:	call   42c250 <strcmp@plt+0x28ac8>
  413eba:	test   rbx,rbx
  413ebd:	je     41400f <strcmp@plt+0x10887>
  413ec3:	mov    rdi,rbx
  413ec6:	call   42e010 <strcmp@plt+0x2a888>
  413ecb:	jmp    41400f <strcmp@plt+0x10887>
  413ed0:	lea    rax,[rip+0x50ed9]        # 464db0 <strcmp@plt+0x61628>
  413ed7:	mov    eax,DWORD PTR [rax]
  413ed9:	cmp    eax,0x3
  413edc:	jl     413efc <strcmp@plt+0x10774>
  413ede:	lea    rsi,[rip+0x32d16]        # 446bfb <strcmp@plt+0x43473>
  413ee5:	mov    edi,0x7
  413eea:	xor    eax,eax
  413eec:	mov    edx,ebx
  413eee:	call   42e800 <strcmp@plt+0x2b078>
  413ef3:	lea    rax,[rip+0x50eb6]        # 464db0 <strcmp@plt+0x61628>
  413efa:	mov    eax,DWORD PTR [rax]
  413efc:	test   eax,eax
  413efe:	jle    413f4a <strcmp@plt+0x107c2>
  413f00:	lea    rsi,[rip+0x32d6b]        # 446c72 <strcmp@plt+0x434ea>
  413f07:	xor    ebx,ebx
  413f09:	mov    edi,0x5
  413f0e:	xor    eax,eax
  413f10:	call   42e800 <strcmp@plt+0x2b078>
  413f15:	jmp    413f4c <strcmp@plt+0x107c4>
  413f17:	mov    rdi,rbp
  413f1a:	call   422900 <strcmp@plt+0x1f178>
  413f1f:	lea    rax,[rip+0x50e8a]        # 464db0 <strcmp@plt+0x61628>
  413f26:	cmp    DWORD PTR [rax],0x2
  413f29:	jl     413f4a <strcmp@plt+0x107c2>
  413f2b:	mov    rdi,rbp
  413f2e:	call   422900 <strcmp@plt+0x1f178>
  413f33:	mov    ecx,eax
  413f35:	lea    rsi,[rip+0x31952]        # 44588e <strcmp@plt+0x42106>
  413f3c:	mov    edi,0x6
  413f41:	xor    eax,eax
  413f43:	mov    edx,ecx
  413f45:	call   42e800 <strcmp@plt+0x2b078>
  413f4a:	xor    ebx,ebx
  413f4c:	mov    eax,ebx
  413f4e:	add    rsp,0xc8
  413f55:	pop    rbx
  413f56:	pop    r12
  413f58:	pop    r13
  413f5a:	pop    r14
  413f5c:	pop    r15
  413f5e:	pop    rbp
  413f5f:	ret    
  413f60:	lea    rax,[rip+0x50e49]        # 464db0 <strcmp@plt+0x61628>
  413f67:	mov    eax,DWORD PTR [rax]
  413f69:	cmp    eax,0x3
  413f6c:	jl     413efc <strcmp@plt+0x10774>
  413f6e:	lea    rsi,[rip+0x32cc3]        # 446c38 <strcmp@plt+0x434b0>
  413f75:	jmp    413ee5 <strcmp@plt+0x1075d>
  413f7a:	xor    r13d,r13d
  413f7d:	xor    edi,edi
  413f7f:	call   42c250 <strcmp@plt+0x28ac8>
  413f84:	mov    rdi,r13
  413f87:	call   422fa0 <strcmp@plt+0x1f818>
  413f8c:	mov    rdi,rbp
  413f8f:	call   422fa0 <strcmp@plt+0x1f818>
  413f94:	jmp    413ef3 <strcmp@plt+0x1076b>
  413f99:	cmp    DWORD PTR [r12],0x2
  413f9e:	jl     413ef3 <strcmp@plt+0x1076b>
  413fa4:	lea    rsi,[rip+0x323c8]        # 446373 <strcmp@plt+0x42beb>
  413fab:	jmp    413fbf <strcmp@plt+0x10837>
  413fad:	cmp    DWORD PTR [r12],0x2
  413fb2:	jl     413ef3 <strcmp@plt+0x1076b>
  413fb8:	lea    rsi,[rip+0x323cf]        # 44638e <strcmp@plt+0x42c06>
  413fbf:	mov    edi,0x6
  413fc4:	xor    eax,eax
  413fc6:	call   42e800 <strcmp@plt+0x2b078>
  413fcb:	jmp    413ef3 <strcmp@plt+0x1076b>
  413fd0:	mov    rdi,QWORD PTR [rsp+0x18]
  413fd5:	call   42c250 <strcmp@plt+0x28ac8>
  413fda:	mov    rdi,QWORD PTR [rsp+0x8]
  413fdf:	call   422fa0 <strcmp@plt+0x1f818>
  413fe4:	mov    ebx,0x1
  413fe9:	cmp    DWORD PTR [r12],0x3
  413fee:	jl     413f4c <strcmp@plt+0x107c4>
  413ff4:	lea    rsi,[rip+0x32ca4]        # 446c9f <strcmp@plt+0x43517>
  413ffb:	mov    edi,0x7
  414000:	jmp    413f0e <strcmp@plt+0x10786>
  414005:	mov    rdi,QWORD PTR [rsp+0x18]
  41400a:	call   42c250 <strcmp@plt+0x28ac8>
  41400f:	mov    rbp,QWORD PTR [rsp+0x8]
  414014:	jmp    413f84 <strcmp@plt+0x107fc>
  414019:	lea    rdi,[rip+0x32d3a]        # 446d5a <strcmp@plt+0x435d2>
  414020:	lea    rsi,[rip+0x32d4f]        # 446d76 <strcmp@plt+0x435ee>
  414027:	lea    rdx,[rip+0x32d5b]        # 446d89 <strcmp@plt+0x43601>
  41402e:	call   4321d0 <strcmp@plt+0x2ea48>
  414033:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41403d:	nop    DWORD PTR [rax]
  414040:	mov    eax,0x1
  414045:	ret    
  414046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414050:	mov    eax,0x1
  414055:	ret    
  414056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414060:	mov    eax,0x1
  414065:	ret    
  414066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414070:	xor    eax,eax
  414072:	ret    
  414073:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41407d:	nop    DWORD PTR [rax]
  414080:	test   rsi,rsi
  414083:	je     4140a6 <strcmp@plt+0x1091e>
  414085:	push   rax
  414086:	mov    rax,rsi
  414089:	mov    rdi,QWORD PTR [rdi+0x18]
  41408d:	mov    rsi,QWORD PTR [rsi]
  414090:	mov    rdx,rax
  414093:	call   42f150 <strcmp@plt+0x2b9c8>
  414098:	mov    ecx,eax
  41409a:	xor    eax,eax
  41409c:	test   ecx,ecx
  41409e:	setne  al
  4140a1:	add    rsp,0x8
  4140a5:	ret    
  4140a6:	xor    eax,eax
  4140a8:	ret    
  4140a9:	nop    DWORD PTR [rax+0x0]
  4140b0:	mov    rdi,QWORD PTR [rdi+0x18]
  4140b4:	jmp    42f580 <strcmp@plt+0x2bdf8>
  4140b9:	nop    DWORD PTR [rax+0x0]
  4140c0:	test   rsi,rsi
  4140c3:	je     4140e6 <strcmp@plt+0x1095e>
  4140c5:	push   rax
  4140c6:	mov    rax,rsi
  4140c9:	mov    rdi,QWORD PTR [rdi+0x20]
  4140cd:	mov    rsi,QWORD PTR [rsi]
  4140d0:	mov    rdx,rax
  4140d3:	call   42f150 <strcmp@plt+0x2b9c8>
  4140d8:	mov    ecx,eax
  4140da:	xor    eax,eax
  4140dc:	test   ecx,ecx
  4140de:	setne  al
  4140e1:	add    rsp,0x8
  4140e5:	ret    
  4140e6:	xor    eax,eax
  4140e8:	ret    
  4140e9:	nop    DWORD PTR [rax+0x0]
  4140f0:	mov    rdi,QWORD PTR [rdi+0x20]
  4140f4:	jmp    42f580 <strcmp@plt+0x2bdf8>
  4140f9:	nop    DWORD PTR [rax+0x0]
  414100:	push   rbp
  414101:	push   r15
  414103:	push   r14
  414105:	push   r13
  414107:	push   r12
  414109:	push   rbx
  41410a:	sub    rsp,0x828
  414111:	mov    ebx,esi
  414113:	mov    r15,rdi
  414116:	cmp    esi,0x5
  414119:	jl     41412f <strcmp@plt+0x109a7>
  41411b:	lea    rax,[rip+0x50c8e]        # 464db0 <strcmp@plt+0x61628>
  414122:	mov    eax,DWORD PTR [rax]
  414124:	add    eax,0x4
  414127:	cmp    eax,ebx
  414129:	jl     4143bd <strcmp@plt+0x10c35>
  41412f:	lea    rsi,[rip+0x328aa]        # 4469e0 <strcmp@plt+0x43258>
  414136:	xor    r12d,r12d
  414139:	xor    eax,eax
  41413b:	mov    edi,ebx
  41413d:	call   42e800 <strcmp@plt+0x2b078>
  414142:	call   42bbd0 <strcmp@plt+0x28448>
  414147:	mov    rbp,rax
  41414a:	mov    rax,QWORD PTR [r15+0x18]
  41414e:	mov    rdi,QWORD PTR [rax]
  414151:	mov    rsi,rbp
  414154:	call   42bcf0 <strcmp@plt+0x28568>
  414159:	mov    rax,QWORD PTR [r15+0x18]
  41415d:	mov    rdi,QWORD PTR [rax+0x8]
  414161:	mov    QWORD PTR [rsp],rbp
  414165:	mov    rsi,rbp
  414168:	call   42bcf0 <strcmp@plt+0x28568>
  41416d:	mov    rax,QWORD PTR [r15+0x18]
  414171:	mov    rcx,QWORD PTR [rax+0x10]
  414175:	mov    rcx,QWORD PTR [rcx]
  414178:	cmp    DWORD PTR [rcx],0x0
  41417b:	je     4141d3 <strcmp@plt+0x10a4b>
  41417d:	mov    r14d,0x3
  414183:	xor    ebp,ebp
  414185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41418f:	nop
  414190:	mov    rdx,QWORD PTR [rcx+0x10]
  414194:	mov    esi,ebp
  414196:	shr    esi,0x4
  414199:	mov    edi,r12d
  41419c:	and    dil,0x1e
  4141a0:	shlx   edi,r14d,edi
  4141a5:	test   DWORD PTR [rdx+rsi*4],edi
  4141a8:	jne    4141c1 <strcmp@plt+0x10a39>
  4141aa:	mov    rax,QWORD PTR [rcx+0x20]
  4141ae:	mov    ecx,ebp
  4141b0:	mov    rdi,QWORD PTR [rax+rcx*8]
  4141b4:	mov    rsi,QWORD PTR [rsp]
  4141b8:	call   42bcf0 <strcmp@plt+0x28568>
  4141bd:	mov    rax,QWORD PTR [r15+0x18]
  4141c1:	add    ebp,0x1
  4141c4:	mov    rcx,QWORD PTR [rax+0x10]
  4141c8:	mov    rcx,QWORD PTR [rcx]
  4141cb:	add    r12d,0x2
  4141cf:	cmp    ebp,DWORD PTR [rcx]
  4141d1:	jne    414190 <strcmp@plt+0x10a08>
  4141d3:	mov    rcx,QWORD PTR [rax+0x18]
  4141d7:	mov    rcx,QWORD PTR [rcx]
  4141da:	cmp    DWORD PTR [rcx],0x0
  4141dd:	je     414233 <strcmp@plt+0x10aab>
  4141df:	xor    r12d,r12d
  4141e2:	mov    r14d,0x3
  4141e8:	xor    ebp,ebp
  4141ea:	nop    WORD PTR [rax+rax*1+0x0]
  4141f0:	mov    rdx,QWORD PTR [rcx+0x10]
  4141f4:	mov    esi,ebp
  4141f6:	shr    esi,0x4
  4141f9:	mov    edi,r12d
  4141fc:	and    dil,0x1e
  414200:	shlx   edi,r14d,edi
  414205:	test   DWORD PTR [rdx+rsi*4],edi
  414208:	jne    414221 <strcmp@plt+0x10a99>
  41420a:	mov    rax,QWORD PTR [rcx+0x20]
  41420e:	mov    ecx,ebp
  414210:	mov    rdi,QWORD PTR [rax+rcx*8]
  414214:	mov    rsi,QWORD PTR [rsp]
  414218:	call   42bcf0 <strcmp@plt+0x28568>
  41421d:	mov    rax,QWORD PTR [r15+0x18]
  414221:	add    ebp,0x1
  414224:	mov    rcx,QWORD PTR [rax+0x18]
  414228:	mov    rcx,QWORD PTR [rcx]
  41422b:	add    r12d,0x2
  41422f:	cmp    ebp,DWORD PTR [rcx]
  414231:	jne    4141f0 <strcmp@plt+0x10a68>
  414233:	mov    rdi,QWORD PTR [rax+0x20]
  414237:	mov    rbp,QWORD PTR [rsp]
  41423b:	mov    rsi,rbp
  41423e:	call   42bcf0 <strcmp@plt+0x28568>
  414243:	mov    rax,QWORD PTR [r15+0x18]
  414247:	mov    rdi,QWORD PTR [rax+0x20]
  41424b:	mov    rsi,rbp
  41424e:	call   42bcf0 <strcmp@plt+0x28568>
  414253:	mov    rax,QWORD PTR [rbp+0x8]
  414257:	cmp    rax,rbp
  41425a:	je     41439f <strcmp@plt+0x10c17>
  414260:	lea    r15,[rip+0x327bc]        # 446a23 <strcmp@plt+0x4329b>
  414267:	nop    WORD PTR [rax+rax*1+0x0]
  414270:	mov    QWORD PTR [rsp+0x8],rax
  414275:	mov    rax,QWORD PTR [rax+0x10]
  414279:	mov    r14,QWORD PTR [rax]
  41427c:	test   r14,r14
  41427f:	je     41438c <strcmp@plt+0x10c04>
  414285:	xor    ebp,ebp
  414287:	nop    WORD PTR [rax+rax*1+0x0]
  414290:	cmp    QWORD PTR [r14+0x8],0x0
  414295:	je     41433c <strcmp@plt+0x10bb4>
  41429b:	mov    rax,QWORD PTR [r14+0x28]
  41429f:	mov    r13,QWORD PTR [rax]
  4142a2:	test   r13,r13
  4142a5:	je     41433c <strcmp@plt+0x10bb4>
  4142ab:	xor    r12d,r12d
  4142ae:	xchg   ax,ax
  4142b0:	cmp    QWORD PTR [r13+0x8],0x0
  4142b5:	je     4142ef <strcmp@plt+0x10b67>
  4142b7:	mov    rax,QWORD PTR [r13+0x28]
  4142bb:	test   rax,rax
  4142be:	je     4142ef <strcmp@plt+0x10b67>
  4142c0:	cmp    ebx,0x5
  4142c3:	jl     4142d5 <strcmp@plt+0x10b4d>
  4142c5:	lea    rcx,[rip+0x50ae4]        # 464db0 <strcmp@plt+0x61628>
  4142cc:	mov    ecx,DWORD PTR [rcx]
  4142ce:	add    ecx,0x4
  4142d1:	cmp    ecx,ebx
  4142d3:	jl     4142ef <strcmp@plt+0x10b67>
  4142d5:	mov    rdi,QWORD PTR [rax]
  4142d8:	call   423130 <strcmp@plt+0x1f9a8>
  4142dd:	mov    rcx,rax
  4142e0:	xor    eax,eax
  4142e2:	mov    edi,ebx
  4142e4:	mov    rsi,r15
  4142e7:	mov    rdx,rcx
  4142ea:	call   42e800 <strcmp@plt+0x2b078>
  4142ef:	mov    rax,QWORD PTR [r13+0x10]
  4142f3:	mov    rcx,QWORD PTR [r13+0x18]
  4142f7:	test   rax,rax
  4142fa:	je     414310 <strcmp@plt+0x10b88>
  4142fc:	test   rcx,rcx
  4142ff:	je     414330 <strcmp@plt+0x10ba8>
  414301:	mov    QWORD PTR [rsp+r12*8+0x10],rcx
  414306:	add    r12,0x1
  41430a:	jmp    414330 <strcmp@plt+0x10ba8>
  41430c:	nop    DWORD PTR [rax+0x0]
  414310:	test   rcx,rcx
  414313:	je     41431a <strcmp@plt+0x10b92>
  414315:	mov    rax,rcx
  414318:	jmp    414330 <strcmp@plt+0x10ba8>
  41431a:	test   r12,r12
  41431d:	je     41433c <strcmp@plt+0x10bb4>
  41431f:	mov    rax,QWORD PTR [rsp+r12*8+0x8]
  414324:	add    r12,0xffffffffffffffff
  414328:	nop    DWORD PTR [rax+rax*1+0x0]
  414330:	mov    r13,rax
  414333:	test   rax,rax
  414336:	jne    4142b0 <strcmp@plt+0x10b28>
  41433c:	mov    rax,QWORD PTR [r14+0x10]
  414340:	mov    rcx,QWORD PTR [r14+0x18]
  414344:	test   rax,rax
  414347:	je     414360 <strcmp@plt+0x10bd8>
  414349:	test   rcx,rcx
  41434c:	je     414380 <strcmp@plt+0x10bf8>
  41434e:	mov    QWORD PTR [rsp+rbp*8+0x420],rcx
  414356:	add    rbp,0x1
  41435a:	jmp    414380 <strcmp@plt+0x10bf8>
  41435c:	nop    DWORD PTR [rax+0x0]
  414360:	test   rcx,rcx
  414363:	je     41436a <strcmp@plt+0x10be2>
  414365:	mov    rax,rcx
  414368:	jmp    414380 <strcmp@plt+0x10bf8>
  41436a:	test   rbp,rbp
  41436d:	je     41438c <strcmp@plt+0x10c04>
  41436f:	mov    rax,QWORD PTR [rsp+rbp*8+0x418]
  414377:	add    rbp,0xffffffffffffffff
  41437b:	nop    DWORD PTR [rax+rax*1+0x0]
  414380:	mov    r14,rax
  414383:	test   rax,rax
  414386:	jne    414290 <strcmp@plt+0x10b08>
  41438c:	mov    rax,QWORD PTR [rsp+0x8]
  414391:	mov    rax,QWORD PTR [rax+0x8]
  414395:	cmp    rax,QWORD PTR [rsp]
  414399:	jne    414270 <strcmp@plt+0x10ae8>
  41439f:	mov    rdi,QWORD PTR [rsp]
  4143a3:	call   42c250 <strcmp@plt+0x28ac8>
  4143a8:	cmp    ebx,0x5
  4143ab:	jl     4143cf <strcmp@plt+0x10c47>
  4143ad:	lea    rax,[rip+0x509fc]        # 464db0 <strcmp@plt+0x61628>
  4143b4:	mov    eax,DWORD PTR [rax]
  4143b6:	add    eax,0x4
  4143b9:	cmp    eax,ebx
  4143bb:	jge    4143cf <strcmp@plt+0x10c47>
  4143bd:	add    rsp,0x828
  4143c4:	pop    rbx
  4143c5:	pop    r12
  4143c7:	pop    r13
  4143c9:	pop    r14
  4143cb:	pop    r15
  4143cd:	pop    rbp
  4143ce:	ret    
  4143cf:	lea    rsi,[rip+0x30cd9]        # 4450af <strcmp@plt+0x41927>
  4143d6:	xor    eax,eax
  4143d8:	mov    edi,ebx
  4143da:	add    rsp,0x828
  4143e1:	pop    rbx
  4143e2:	pop    r12
  4143e4:	pop    r13
  4143e6:	pop    r14
  4143e8:	pop    r15
  4143ea:	pop    rbp
  4143eb:	jmp    42e800 <strcmp@plt+0x2b078>
  4143f0:	push   rbp
  4143f1:	push   r15
  4143f3:	push   r14
  4143f5:	push   r13
  4143f7:	push   r12
  4143f9:	push   rbx
  4143fa:	sub    rsp,0x848
  414401:	mov    ebx,esi
  414403:	mov    r15,rdi
  414406:	cmp    esi,0x5
  414409:	jl     41441f <strcmp@plt+0x10c97>
  41440b:	lea    rax,[rip+0x5099e]        # 464db0 <strcmp@plt+0x61628>
  414412:	mov    eax,DWORD PTR [rax]
  414414:	add    eax,0x4
  414417:	cmp    eax,ebx
  414419:	jl     4147ad <strcmp@plt+0x11025>
  41441f:	lea    rsi,[rip+0x32606]        # 446a2c <strcmp@plt+0x432a4>
  414426:	xor    r12d,r12d
  414429:	xor    eax,eax
  41442b:	mov    edi,ebx
  41442d:	call   42e800 <strcmp@plt+0x2b078>
  414432:	call   42bbd0 <strcmp@plt+0x28448>
  414437:	mov    rbp,rax
  41443a:	mov    rax,QWORD PTR [r15+0x20]
  41443e:	mov    rdi,QWORD PTR [rax]
  414441:	mov    rsi,rbp
  414444:	call   42bcf0 <strcmp@plt+0x28568>
  414449:	mov    rax,QWORD PTR [r15+0x20]
  41444d:	mov    rdi,QWORD PTR [rax+0x8]
  414451:	mov    QWORD PTR [rsp],rbp
  414455:	mov    rsi,rbp
  414458:	call   42bcf0 <strcmp@plt+0x28568>
  41445d:	mov    rax,QWORD PTR [r15+0x20]
  414461:	mov    rcx,QWORD PTR [rax+0x10]
  414465:	mov    rcx,QWORD PTR [rcx]
  414468:	cmp    DWORD PTR [rcx],0x0
  41446b:	je     4144c3 <strcmp@plt+0x10d3b>
  41446d:	mov    r14d,0x3
  414473:	xor    ebp,ebp
  414475:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41447f:	nop
  414480:	mov    rdx,QWORD PTR [rcx+0x10]
  414484:	mov    esi,ebp
  414486:	shr    esi,0x4
  414489:	mov    edi,r12d
  41448c:	and    dil,0x1e
  414490:	shlx   edi,r14d,edi
  414495:	test   DWORD PTR [rdx+rsi*4],edi
  414498:	jne    4144b1 <strcmp@plt+0x10d29>
  41449a:	mov    rax,QWORD PTR [rcx+0x20]
  41449e:	mov    ecx,ebp
  4144a0:	mov    rdi,QWORD PTR [rax+rcx*8]
  4144a4:	mov    rsi,QWORD PTR [rsp]
  4144a8:	call   42bcf0 <strcmp@plt+0x28568>
  4144ad:	mov    rax,QWORD PTR [r15+0x20]
  4144b1:	add    ebp,0x1
  4144b4:	mov    rcx,QWORD PTR [rax+0x10]
  4144b8:	mov    rcx,QWORD PTR [rcx]
  4144bb:	add    r12d,0x2
  4144bf:	cmp    ebp,DWORD PTR [rcx]
  4144c1:	jne    414480 <strcmp@plt+0x10cf8>
  4144c3:	mov    rcx,QWORD PTR [rax+0x18]
  4144c7:	mov    rcx,QWORD PTR [rcx]
  4144ca:	cmp    DWORD PTR [rcx],0x0
  4144cd:	je     414523 <strcmp@plt+0x10d9b>
  4144cf:	xor    r12d,r12d
  4144d2:	mov    r14d,0x3
  4144d8:	xor    ebp,ebp
  4144da:	nop    WORD PTR [rax+rax*1+0x0]
  4144e0:	mov    rdx,QWORD PTR [rcx+0x10]
  4144e4:	mov    esi,ebp
  4144e6:	shr    esi,0x4
  4144e9:	mov    edi,r12d
  4144ec:	and    dil,0x1e
  4144f0:	shlx   edi,r14d,edi
  4144f5:	test   DWORD PTR [rdx+rsi*4],edi
  4144f8:	jne    414511 <strcmp@plt+0x10d89>
  4144fa:	mov    rax,QWORD PTR [rcx+0x20]
  4144fe:	mov    ecx,ebp
  414500:	mov    rdi,QWORD PTR [rax+rcx*8]
  414504:	mov    rsi,QWORD PTR [rsp]
  414508:	call   42bcf0 <strcmp@plt+0x28568>
  41450d:	mov    rax,QWORD PTR [r15+0x20]
  414511:	add    ebp,0x1
  414514:	mov    rcx,QWORD PTR [rax+0x18]
  414518:	mov    rcx,QWORD PTR [rcx]
  41451b:	add    r12d,0x2
  41451f:	cmp    ebp,DWORD PTR [rcx]
  414521:	jne    4144e0 <strcmp@plt+0x10d58>
  414523:	mov    rdi,QWORD PTR [rax+0x20]
  414527:	mov    rbp,QWORD PTR [rsp]
  41452b:	mov    rsi,rbp
  41452e:	call   42bcf0 <strcmp@plt+0x28568>
  414533:	mov    rax,QWORD PTR [r15+0x20]
  414537:	mov    rdi,QWORD PTR [rax+0x20]
  41453b:	mov    rsi,rbp
  41453e:	call   42bcf0 <strcmp@plt+0x28568>
  414543:	mov    rax,QWORD PTR [rbp+0x8]
  414547:	cmp    rax,rbp
  41454a:	je     41478f <strcmp@plt+0x11007>
  414550:	lea    r12,[rip+0x3254f]        # 446aa6 <strcmp@plt+0x4331e>
  414557:	nop    WORD PTR [rax+rax*1+0x0]
  414560:	mov    QWORD PTR [rsp+0x20],rax
  414565:	mov    rax,QWORD PTR [rax+0x10]
  414569:	mov    rcx,QWORD PTR [rax]
  41456c:	test   rcx,rcx
  41456f:	je     41477c <strcmp@plt+0x10ff4>
  414575:	xor    eax,eax
  414577:	mov    QWORD PTR [rsp+0x8],rax
  41457c:	nop    DWORD PTR [rax+0x0]
  414580:	cmp    QWORD PTR [rcx+0x8],0x0
  414585:	mov    rax,rcx
  414588:	je     414711 <strcmp@plt+0x10f89>
  41458e:	mov    QWORD PTR [rsp+0x28],rax
  414593:	mov    rax,QWORD PTR [rax+0x28]
  414597:	mov    rcx,QWORD PTR [rax]
  41459a:	test   rcx,rcx
  41459d:	je     41470c <strcmp@plt+0x10f84>
  4145a3:	xor    eax,eax
  4145a5:	mov    QWORD PTR [rsp+0x10],rax
  4145aa:	nop    WORD PTR [rax+rax*1+0x0]
  4145b0:	mov    QWORD PTR [rsp+0x18],rcx
  4145b5:	cmp    QWORD PTR [rcx+0x8],0x0
  4145ba:	je     41469e <strcmp@plt+0x10f16>
  4145c0:	mov    rax,QWORD PTR [rsp+0x18]
  4145c5:	mov    r13,QWORD PTR [rax+0x28]
  4145c9:	test   r13,r13
  4145cc:	je     41469e <strcmp@plt+0x10f16>
  4145d2:	cmp    ebx,0x5
  4145d5:	jl     4145e7 <strcmp@plt+0x10e5f>
  4145d7:	lea    rax,[rip+0x507d2]        # 464db0 <strcmp@plt+0x61628>
  4145de:	mov    eax,DWORD PTR [rax]
  4145e0:	add    eax,0x4
  4145e3:	cmp    eax,ebx
  4145e5:	jl     41461d <strcmp@plt+0x10e95>
  4145e7:	mov    rdi,QWORD PTR [r13+0x0]
  4145eb:	call   423130 <strcmp@plt+0x1f9a8>
  4145f0:	mov    rdx,rax
  4145f3:	mov    rax,QWORD PTR [r13+0x0]
  4145f7:	cmp    BYTE PTR [rax+0x3c],0x0
  4145fb:	lea    rcx,[rip+0x3c287]        # 450889 <strcmp@plt+0x4d101>
  414602:	lea    rax,[rip+0x32492]        # 446a9b <strcmp@plt+0x43313>
  414609:	cmove  rcx,rax
  41460d:	xor    eax,eax
  41460f:	mov    edi,ebx
  414611:	lea    rsi,[rip+0x32453]        # 446a6b <strcmp@plt+0x432e3>
  414618:	call   42e800 <strcmp@plt+0x2b078>
  41461d:	mov    rax,QWORD PTR [r13+0x0]
  414621:	mov    rax,QWORD PTR [rax+0x28]
  414625:	mov    r15,QWORD PTR [rax+0x8]
  414629:	cmp    r15,rax
  41462c:	je     41469e <strcmp@plt+0x10f16>
  41462e:	xchg   ax,ax
  414630:	mov    rbp,QWORD PTR [r15+0x10]
  414634:	cmp    DWORD PTR [rbp+0x18],0x0
  414638:	je     414690 <strcmp@plt+0x10f08>
  41463a:	mov    r14,QWORD PTR [rbp+0x8]
  41463e:	cmp    r14,rbp
  414641:	jne    414659 <strcmp@plt+0x10ed1>
  414643:	jmp    414690 <strcmp@plt+0x10f08>
  414645:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41464f:	nop
  414650:	mov    r14,QWORD PTR [r14+0x8]
  414654:	cmp    r14,rbp
  414657:	je     414690 <strcmp@plt+0x10f08>
  414659:	mov    rax,QWORD PTR [r14+0x10]
  41465d:	cmp    ebx,0x5
  414660:	jl     414672 <strcmp@plt+0x10eea>
  414662:	lea    rcx,[rip+0x50747]        # 464db0 <strcmp@plt+0x61628>
  414669:	mov    ecx,DWORD PTR [rcx]
  41466b:	add    ecx,0x4
  41466e:	cmp    ecx,ebx
  414670:	jl     414650 <strcmp@plt+0x10ec8>
  414672:	mov    rdi,QWORD PTR [rax]
  414675:	call   423130 <strcmp@plt+0x1f9a8>
  41467a:	mov    rcx,rax
  41467d:	xor    eax,eax
  41467f:	mov    edi,ebx
  414681:	mov    rsi,r12
  414684:	mov    rdx,rcx
  414687:	call   42e800 <strcmp@plt+0x2b078>
  41468c:	jmp    414650 <strcmp@plt+0x10ec8>
  41468e:	xchg   ax,ax
  414690:	mov    r15,QWORD PTR [r15+0x8]
  414694:	mov    rax,QWORD PTR [r13+0x0]
  414698:	cmp    r15,QWORD PTR [rax+0x28]
  41469c:	jne    414630 <strcmp@plt+0x10ea8>
  41469e:	mov    rcx,QWORD PTR [rsp+0x18]
  4146a3:	mov    rax,QWORD PTR [rcx+0x10]
  4146a7:	mov    rcx,QWORD PTR [rcx+0x18]
  4146ab:	test   rax,rax
  4146ae:	je     4146d0 <strcmp@plt+0x10f48>
  4146b0:	test   rcx,rcx
  4146b3:	je     414700 <strcmp@plt+0x10f78>
  4146b5:	mov    rdx,QWORD PTR [rsp+0x10]
  4146ba:	mov    QWORD PTR [rsp+rdx*8+0x30],rcx
  4146bf:	add    rdx,0x1
  4146c3:	mov    QWORD PTR [rsp+0x10],rdx
  4146c8:	jmp    414700 <strcmp@plt+0x10f78>
  4146ca:	nop    WORD PTR [rax+rax*1+0x0]
  4146d0:	test   rcx,rcx
  4146d3:	je     4146da <strcmp@plt+0x10f52>
  4146d5:	mov    rax,rcx
  4146d8:	jmp    414700 <strcmp@plt+0x10f78>
  4146da:	cmp    QWORD PTR [rsp+0x10],0x0
  4146e0:	je     41470c <strcmp@plt+0x10f84>
  4146e2:	mov    rcx,QWORD PTR [rsp+0x10]
  4146e7:	mov    rax,QWORD PTR [rsp+rcx*8+0x28]
  4146ec:	add    rcx,0xffffffffffffffff
  4146f0:	mov    QWORD PTR [rsp+0x10],rcx
  4146f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4146ff:	nop
  414700:	mov    rcx,rax
  414703:	test   rax,rax
  414706:	jne    4145b0 <strcmp@plt+0x10e28>
  41470c:	mov    rax,QWORD PTR [rsp+0x28]
  414711:	mov    rcx,rax
  414714:	mov    rax,QWORD PTR [rax+0x10]
  414718:	mov    rcx,QWORD PTR [rcx+0x18]
  41471c:	test   rax,rax
  41471f:	je     414740 <strcmp@plt+0x10fb8>
  414721:	test   rcx,rcx
  414724:	je     414770 <strcmp@plt+0x10fe8>
  414726:	mov    rdx,QWORD PTR [rsp+0x8]
  41472b:	mov    QWORD PTR [rsp+rdx*8+0x440],rcx
  414733:	add    rdx,0x1
  414737:	mov    QWORD PTR [rsp+0x8],rdx
  41473c:	jmp    414770 <strcmp@plt+0x10fe8>
  41473e:	xchg   ax,ax
  414740:	test   rcx,rcx
  414743:	je     41474a <strcmp@plt+0x10fc2>
  414745:	mov    rax,rcx
  414748:	jmp    414770 <strcmp@plt+0x10fe8>
  41474a:	cmp    QWORD PTR [rsp+0x8],0x0
  414750:	je     41477c <strcmp@plt+0x10ff4>
  414752:	mov    rcx,QWORD PTR [rsp+0x8]
  414757:	mov    rax,QWORD PTR [rsp+rcx*8+0x438]
  41475f:	add    rcx,0xffffffffffffffff
  414763:	mov    QWORD PTR [rsp+0x8],rcx
  414768:	nop    DWORD PTR [rax+rax*1+0x0]
  414770:	mov    rcx,rax
  414773:	test   rax,rax
  414776:	jne    414580 <strcmp@plt+0x10df8>
  41477c:	mov    rax,QWORD PTR [rsp+0x20]
  414781:	mov    rax,QWORD PTR [rax+0x8]
  414785:	cmp    rax,QWORD PTR [rsp]
  414789:	jne    414560 <strcmp@plt+0x10dd8>
  41478f:	mov    rdi,QWORD PTR [rsp]
  414793:	call   42c250 <strcmp@plt+0x28ac8>
  414798:	cmp    ebx,0x5
  41479b:	jl     4147bf <strcmp@plt+0x11037>
  41479d:	lea    rax,[rip+0x5060c]        # 464db0 <strcmp@plt+0x61628>
  4147a4:	mov    eax,DWORD PTR [rax]
  4147a6:	add    eax,0x4
  4147a9:	cmp    eax,ebx
  4147ab:	jge    4147bf <strcmp@plt+0x11037>
  4147ad:	add    rsp,0x848
  4147b4:	pop    rbx
  4147b5:	pop    r12
  4147b7:	pop    r13
  4147b9:	pop    r14
  4147bb:	pop    r15
  4147bd:	pop    rbp
  4147be:	ret    
  4147bf:	lea    rsi,[rip+0x308e9]        # 4450af <strcmp@plt+0x41927>
  4147c6:	xor    eax,eax
  4147c8:	mov    edi,ebx
  4147ca:	add    rsp,0x848
  4147d1:	pop    rbx
  4147d2:	pop    r12
  4147d4:	pop    r13
  4147d6:	pop    r14
  4147d8:	pop    r15
  4147da:	pop    rbp
  4147db:	jmp    42e800 <strcmp@plt+0x2b078>
  4147e0:	push   rbp
  4147e1:	push   r14
  4147e3:	push   rbx
  4147e4:	mov    ebp,esi
  4147e6:	mov    rbx,rdi
  4147e9:	mov    edi,0x8
  4147ee:	call   432070 <strcmp@plt+0x2e8e8>
  4147f3:	mov    r14,rax
  4147f6:	test   ebp,ebp
  4147f8:	je     41481d <strcmp@plt+0x11095>
  4147fa:	mov    rdi,rbx
  4147fd:	call   423200 <strcmp@plt+0x1fa78>
  414802:	movzx  ecx,ax
  414805:	mov    al,0x20
  414807:	cmp    ecx,0x2
  41480a:	je     41480e <strcmp@plt+0x11086>
  41480c:	mov    al,0x80
  41480e:	movzx  edx,al
  414811:	mov    edi,ebp
  414813:	mov    rsi,rbx
  414816:	call   427b10 <strcmp@plt+0x24388>
  41481b:	jmp    414825 <strcmp@plt+0x1109d>
  41481d:	mov    rdi,rbx
  414820:	call   423740 <strcmp@plt+0x1ffb8>
  414825:	mov    QWORD PTR [r14],rax
  414828:	mov    rax,r14
  41482b:	pop    rbx
  41482c:	pop    r14
  41482e:	pop    rbp
  41482f:	ret    
  414830:	push   rbp
  414831:	push   r15
  414833:	push   r14
  414835:	push   r12
  414837:	push   rbx
  414838:	sub    rsp,0x10
  41483c:	mov    r14,rcx
  41483f:	mov    r15d,edx
  414842:	mov    ebx,esi
  414844:	mov    rbp,rdi
  414847:	mov    edi,0x8
  41484c:	call   432070 <strcmp@plt+0x2e8e8>
  414851:	mov    r12,rax
  414854:	test   ebx,ebx
  414856:	je     41487b <strcmp@plt+0x110f3>
  414858:	mov    rdi,rbp
  41485b:	call   423200 <strcmp@plt+0x1fa78>
  414860:	movzx  ecx,ax
  414863:	mov    al,0x20
  414865:	cmp    ecx,0x2
  414868:	je     41486c <strcmp@plt+0x110e4>
  41486a:	mov    al,0x80
  41486c:	movzx  edx,al
  41486f:	mov    edi,ebx
  414871:	mov    rsi,rbp
  414874:	call   427b10 <strcmp@plt+0x24388>
  414879:	jmp    414883 <strcmp@plt+0x110fb>
  41487b:	mov    rdi,rbp
  41487e:	call   423740 <strcmp@plt+0x1ffb8>
  414883:	mov    rbx,rax
  414886:	vxorps xmm0,xmm0,xmm0
  41488a:	vmovups XMMWORD PTR [rsp],xmm0
  41488f:	mov    esi,0x5a0
  414894:	mov    ecx,0x1
  414899:	xor    r8d,r8d
  41489c:	mov    rdi,rax
  41489f:	mov    edx,r15d
  4148a2:	mov    r9,r14
  4148a5:	call   429ac0 <strcmp@plt+0x26338>
  4148aa:	mov    QWORD PTR [r12],rax
  4148ae:	mov    rdi,rbx
  4148b1:	call   422fa0 <strcmp@plt+0x1f818>
  4148b6:	mov    rax,r12
  4148b9:	add    rsp,0x10
  4148bd:	pop    rbx
  4148be:	pop    r12
  4148c0:	pop    r14
  4148c2:	pop    r15
  4148c4:	pop    rbp
  4148c5:	ret    
  4148c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4148d0:	test   rdi,rdi
  4148d3:	je     4148ea <strcmp@plt+0x11162>
  4148d5:	push   rbx
  4148d6:	mov    rbx,rdi
  4148d9:	mov    rdi,QWORD PTR [rdi]
  4148dc:	call   422fa0 <strcmp@plt+0x1f818>
  4148e1:	mov    rdi,rbx
  4148e4:	pop    rbx
  4148e5:	jmp    403780 <free@plt>
  4148ea:	ret    
  4148eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4148f0:	test   rdi,rdi
  4148f3:	je     41490a <strcmp@plt+0x11182>
  4148f5:	push   rbx
  4148f6:	mov    rbx,rdi
  4148f9:	mov    rdi,QWORD PTR [rdi]
  4148fc:	call   429dd0 <strcmp@plt+0x26648>
  414901:	mov    rdi,rbx
  414904:	pop    rbx
  414905:	jmp    403780 <free@plt>
  41490a:	ret    
  41490b:	nop    DWORD PTR [rax+rax*1+0x0]
  414910:	mov    edi,0x28
  414915:	jmp    432070 <strcmp@plt+0x2e8e8>
  41491a:	nop    WORD PTR [rax+rax*1+0x0]
  414920:	push   rbp
  414921:	push   rbx
  414922:	push   rax
  414923:	mov    rax,QWORD PTR [rdi+0x8]
  414927:	cmp    rax,QWORD PTR [rip+0x4f662]        # 463f90 <strcmp@plt+0x60808>
  41492e:	jne    414986 <strcmp@plt+0x111fe>
  414930:	mov    rbx,rdi
  414933:	xor    ebp,ebp
  414935:	xor    eax,eax
  414937:	call   42ecf0 <strcmp@plt+0x2b568>
  41493c:	mov    QWORD PTR [rbx+0x18],rax
  414940:	xor    eax,eax
  414942:	call   42ecf0 <strcmp@plt+0x2b568>
  414947:	mov    QWORD PTR [rbx+0x20],rax
  41494b:	test   rax,rax
  41494e:	je     41497d <strcmp@plt+0x111f5>
  414950:	mov    rax,QWORD PTR [rbx+0x18]
  414954:	test   rax,rax
  414957:	je     41497d <strcmp@plt+0x111f5>
  414959:	lea    rax,[rip+0x50450]        # 464db0 <strcmp@plt+0x61628>
  414960:	mov    ebp,0x1
  414965:	cmp    DWORD PTR [rax],0x0
  414968:	jle    41497d <strcmp@plt+0x111f5>
  41496a:	lea    rsi,[rip+0x32ab9]        # 44742a <strcmp@plt+0x43ca2>
  414971:	mov    edi,0x5
  414976:	xor    eax,eax
  414978:	call   42e800 <strcmp@plt+0x2b078>
  41497d:	mov    eax,ebp
  41497f:	add    rsp,0x8
  414983:	pop    rbx
  414984:	pop    rbp
  414985:	ret    
  414986:	lea    rdi,[rip+0x32ac4]        # 447451 <strcmp@plt+0x43cc9>
  41498d:	lea    rsi,[rip+0x32ad7]        # 44746b <strcmp@plt+0x43ce3>
  414994:	lea    rdx,[rip+0x32ae1]        # 44747c <strcmp@plt+0x43cf4>
  41499b:	call   4321d0 <strcmp@plt+0x2ea48>
  4149a0:	push   rbx
  4149a1:	mov    rax,QWORD PTR [rdi+0x8]
  4149a5:	cmp    rax,QWORD PTR [rip+0x4f5e4]        # 463f90 <strcmp@plt+0x60808>
  4149ac:	jne    4149d9 <strcmp@plt+0x11251>
  4149ae:	mov    rbx,rdi
  4149b1:	lea    rax,[rip+0x503f8]        # 464db0 <strcmp@plt+0x61628>
  4149b8:	cmp    DWORD PTR [rax],0x0
  4149bb:	jle    4149d0 <strcmp@plt+0x11248>
  4149bd:	lea    rsi,[rip+0x3259c]        # 446f60 <strcmp@plt+0x437d8>
  4149c4:	mov    edi,0x5
  4149c9:	xor    eax,eax
  4149cb:	call   42e800 <strcmp@plt+0x2b078>
  4149d0:	mov    rdi,rbx
  4149d3:	pop    rbx
  4149d4:	jmp    403780 <free@plt>
  4149d9:	lea    rdi,[rip+0x32a71]        # 447451 <strcmp@plt+0x43cc9>
  4149e0:	lea    rsi,[rip+0x32a84]        # 44746b <strcmp@plt+0x43ce3>
  4149e7:	lea    rdx,[rip+0x32a8e]        # 44747c <strcmp@plt+0x43cf4>
  4149ee:	call   4321d0 <strcmp@plt+0x2ea48>
  4149f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149fd:	nop    DWORD PTR [rax]
  414a00:	push   rbx
  414a01:	mov    rax,QWORD PTR [rdi+0x8]
  414a05:	cmp    rax,QWORD PTR [rip+0x4f584]        # 463f90 <strcmp@plt+0x60808>
  414a0c:	jne    414a42 <strcmp@plt+0x112ba>
  414a0e:	mov    rbx,rdi
  414a11:	mov    rdi,QWORD PTR [rdi+0x18]
  414a15:	lea    rsi,[rip+0x1844]        # 416260 <strcmp@plt+0x12ad8>
  414a1c:	call   42ef00 <strcmp@plt+0x2b778>
  414a21:	mov    rdi,QWORD PTR [rbx+0x20]
  414a25:	lea    rsi,[rip+0x1844]        # 416270 <strcmp@plt+0x12ae8>
  414a2c:	call   42ef00 <strcmp@plt+0x2b778>
  414a31:	mov    rdi,QWORD PTR [rbx+0x28]
  414a35:	test   rdi,rdi
  414a38:	je     414a40 <strcmp@plt+0x112b8>
  414a3a:	pop    rbx
  414a3b:	jmp    430ce0 <strcmp@plt+0x2d558>
  414a40:	pop    rbx
  414a41:	ret    
  414a42:	lea    rdi,[rip+0x32a08]        # 447451 <strcmp@plt+0x43cc9>
  414a49:	lea    rsi,[rip+0x32a1b]        # 44746b <strcmp@plt+0x43ce3>
  414a50:	lea    rdx,[rip+0x32a25]        # 44747c <strcmp@plt+0x43cf4>
  414a57:	call   4321d0 <strcmp@plt+0x2ea48>
  414a5c:	nop    DWORD PTR [rax+0x0]
  414a60:	push   r14
  414a62:	push   rbx
  414a63:	push   rax
  414a64:	mov    rax,QWORD PTR [rdi+0x8]
  414a68:	cmp    rax,QWORD PTR [rip+0x4f521]        # 463f90 <strcmp@plt+0x60808>
  414a6f:	jne    414ac9 <strcmp@plt+0x11341>
  414a71:	mov    rbx,rdi
  414a74:	lea    r14,[rip+0x50335]        # 464db0 <strcmp@plt+0x61628>
  414a7b:	cmp    DWORD PTR [r14],0x0
  414a7f:	jle    414a94 <strcmp@plt+0x1130c>
  414a81:	lea    rsi,[rip+0x316c8]        # 446150 <strcmp@plt+0x429c8>
  414a88:	mov    edi,0x5
  414a8d:	xor    eax,eax
  414a8f:	call   42e800 <strcmp@plt+0x2b078>
  414a94:	mov    esi,0x5
  414a99:	mov    rdi,rbx
  414a9c:	call   416010 <strcmp@plt+0x12888>
  414aa1:	cmp    DWORD PTR [r14],0x0
  414aa5:	jle    414ac1 <strcmp@plt+0x11339>
  414aa7:	lea    rsi,[rip+0x324cf]        # 446f7d <strcmp@plt+0x437f5>
  414aae:	mov    edi,0x5
  414ab3:	xor    eax,eax
  414ab5:	add    rsp,0x8
  414ab9:	pop    rbx
  414aba:	pop    r14
  414abc:	jmp    42e800 <strcmp@plt+0x2b078>
  414ac1:	add    rsp,0x8
  414ac5:	pop    rbx
  414ac6:	pop    r14
  414ac8:	ret    
  414ac9:	lea    rdi,[rip+0x32981]        # 447451 <strcmp@plt+0x43cc9>
  414ad0:	lea    rsi,[rip+0x32994]        # 44746b <strcmp@plt+0x43ce3>
  414ad7:	lea    rdx,[rip+0x3299e]        # 44747c <strcmp@plt+0x43cf4>
  414ade:	call   4321d0 <strcmp@plt+0x2ea48>
  414ae3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414aed:	nop    DWORD PTR [rax]
  414af0:	push   rbp
  414af1:	push   r15
  414af3:	push   r14
  414af5:	push   r13
  414af7:	push   r12
  414af9:	push   rbx
  414afa:	sub    rsp,0x128
  414b01:	mov    rax,QWORD PTR [rdi+0x8]
  414b05:	cmp    rax,QWORD PTR [rip+0x4f484]        # 463f90 <strcmp@plt+0x60808>
  414b0c:	jne    415a0f <strcmp@plt+0x12287>
  414b12:	mov    r14,rdx
  414b15:	mov    rbx,rsi
  414b18:	mov    r12,rdi
  414b1b:	mov    rdi,rsi
  414b1e:	call   420d90 <strcmp@plt+0x1d608>
  414b23:	cmp    eax,0x8
  414b26:	jne    414bc5 <strcmp@plt+0x1143d>
  414b2c:	mov    rdi,rbx
  414b2f:	call   420dc0 <strcmp@plt+0x1d638>
  414b34:	test   BYTE PTR [rax],0x8
  414b37:	jne    414c15 <strcmp@plt+0x1148d>
  414b3d:	mov    rdi,rbx
  414b40:	call   420df0 <strcmp@plt+0x1d668>
  414b45:	cmp    eax,0x1
  414b48:	jne    415422 <strcmp@plt+0x11c9a>
  414b4e:	lea    rbp,[rsp+0x90]
  414b56:	mov    rdi,rbx
  414b59:	mov    rsi,rbp
  414b5c:	call   433490 <strcmp@plt+0x2fd08>
  414b61:	movzx  esi,WORD PTR [rsp+0xd2]
  414b69:	movzx  edx,WORD PTR [rsp+0xd0]
  414b71:	lea    rcx,[rsp+0xb0]
  414b79:	lea    r13,[rsp+0xe0]
  414b81:	mov    rdi,r13
  414b84:	mov    r8,rbp
  414b87:	call   435600 <strcmp@plt+0x31e78>
  414b8c:	mov    rdi,rbx
  414b8f:	call   420d90 <strcmp@plt+0x1d608>
  414b94:	mov    ebp,eax
  414b96:	lea    rax,[rip+0x50213]        # 464db0 <strcmp@plt+0x61628>
  414b9d:	cmp    DWORD PTR [rax],0x0
  414ba0:	jle    414bcd <strcmp@plt+0x11445>
  414ba2:	mov    rdi,rbx
  414ba5:	call   422870 <strcmp@plt+0x1f0e8>
  414baa:	mov    rcx,rax
  414bad:	lea    rsi,[rip+0x324be]        # 447072 <strcmp@plt+0x438ea>
  414bb4:	mov    edi,0x5
  414bb9:	xor    eax,eax
  414bbb:	mov    rdx,rcx
  414bbe:	call   42e800 <strcmp@plt+0x2b078>
  414bc3:	jmp    414bcd <strcmp@plt+0x11445>
  414bc5:	mov    ebp,eax
  414bc7:	mov    r13,r14
  414bca:	xor    r14d,r14d
  414bcd:	lea    eax,[rbp-0x1]
  414bd0:	cmp    eax,0x6
  414bd3:	ja     4153c1 <strcmp@plt+0x11c39>
  414bd9:	lea    rcx,[rip+0x321d4]        # 446db4 <strcmp@plt+0x4362c>
  414be0:	movsxd rax,DWORD PTR [rcx+rax*4]
  414be4:	add    rax,rcx
  414be7:	jmp    rax
  414be9:	lea    rax,[rip+0x501c0]        # 464db0 <strcmp@plt+0x61628>
  414bf0:	mov    eax,DWORD PTR [rax]
  414bf2:	cmp    eax,0x3
  414bf5:	jl     415407 <strcmp@plt+0x11c7f>
  414bfb:	lea    rsi,[rip+0x32497]        # 447099 <strcmp@plt+0x43911>
  414c02:	mov    edi,0x7
  414c07:	xor    eax,eax
  414c09:	mov    edx,ebp
  414c0b:	call   42e800 <strcmp@plt+0x2b078>
  414c10:	jmp    4153fe <strcmp@plt+0x11c76>
  414c15:	mov    rdi,rbx
  414c18:	call   422900 <strcmp@plt+0x1f178>
  414c1d:	lea    rax,[rip+0x5018c]        # 464db0 <strcmp@plt+0x61628>
  414c24:	cmp    DWORD PTR [rax],0x2
  414c27:	jl     415422 <strcmp@plt+0x11c9a>
  414c2d:	mov    rdi,rbx
  414c30:	call   422900 <strcmp@plt+0x1f178>
  414c35:	mov    ecx,eax
  414c37:	lea    rsi,[rip+0x30c50]        # 44588e <strcmp@plt+0x42106>
  414c3e:	mov    edi,0x6
  414c43:	xor    eax,eax
  414c45:	mov    edx,ecx
  414c47:	call   42e800 <strcmp@plt+0x2b078>
  414c4c:	jmp    415422 <strcmp@plt+0x11c9a>
  414c51:	vmovups ymm0,YMMWORD PTR [rbx]
  414c55:	vmovups ymm1,YMMWORD PTR [rbx+0x20]
  414c5a:	vmovups YMMWORD PTR [rsp+0x70],ymm1
  414c60:	vmovups YMMWORD PTR [rsp+0x50],ymm0
  414c66:	lea    rdi,[rsp+0x50]
  414c6b:	vzeroupper 
  414c6e:	call   4216c0 <strcmp@plt+0x1df38>
  414c73:	mov    rbx,rax
  414c76:	lea    rax,[rip+0x5b92b]        # 4705a8 <strcmp@plt+0x6ce20>
  414c7d:	mov    rdi,QWORD PTR [rax]
  414c80:	mov    rsi,QWORD PTR [rbx+0x4]
  414c84:	call   432620 <strcmp@plt+0x2ee98>
  414c89:	test   rax,rax
  414c8c:	je     415438 <strcmp@plt+0x11cb0>
  414c92:	mov    r15,rax
  414c95:	cmp    BYTE PTR [rbx+0x3],0x2
  414c99:	jb     414cae <strcmp@plt+0x11526>
  414c9b:	lea    rsi,[rip+0x325ff]        # 4472a1 <strcmp@plt+0x43b19>
  414ca2:	mov    edi,0x4
  414ca7:	xor    eax,eax
  414ca9:	call   42e800 <strcmp@plt+0x2b078>
  414cae:	xor    ebp,ebp
  414cb0:	xor    eax,eax
  414cb2:	call   4299d0 <strcmp@plt+0x26248>
  414cb7:	mov    rbx,rax
  414cba:	lea    rdi,[rsp+0x50]
  414cbf:	mov    rsi,rax
  414cc2:	call   421540 <strcmp@plt+0x1ddb8>
  414cc7:	cmp    eax,0x1
  414cca:	jne    41552b <strcmp@plt+0x11da3>
  414cd0:	mov    rdi,r15
  414cd3:	call   4328b0 <strcmp@plt+0x2f128>
  414cd8:	mov    rbp,rax
  414cdb:	mov    rdi,rax
  414cde:	call   437430 <strcmp@plt+0x33ca8>
  414ce3:	mov    rax,QWORD PTR [rax]
  414ce6:	mov    QWORD PTR [rsp],rax
  414cea:	mov    rdi,QWORD PTR [rax+0x20]
  414cee:	cmp    rdi,QWORD PTR [r12+0x28]
  414cf3:	je     414d0d <strcmp@plt+0x11585>
  414cf5:	call   430db0 <strcmp@plt+0x2d628>
  414cfa:	mov    rdi,rax
  414cfd:	mov    rsi,rbx
  414d00:	call   4342e0 <strcmp@plt+0x30b58>
  414d05:	test   eax,eax
  414d07:	je     4154bc <strcmp@plt+0x11d34>
  414d0d:	movzx  eax,BYTE PTR [rbx+0x3c]
  414d11:	cmp    rax,0x5
  414d15:	ja     4159e3 <strcmp@plt+0x1225b>
  414d1b:	lea    rcx,[rip+0x320ae]        # 446dd0 <strcmp@plt+0x43648>
  414d22:	movsxd rax,DWORD PTR [rcx+rax*4]
  414d26:	add    rax,rcx
  414d29:	jmp    rax
  414d2b:	mov    r13,rbp
  414d2e:	mov    rbp,QWORD PTR [rsp]
  414d32:	mov    rdi,QWORD PTR [rbp+0x20]
  414d36:	cmp    rdi,QWORD PTR [r12+0x28]
  414d3b:	je     415584 <strcmp@plt+0x11dfc>
  414d41:	call   430db0 <strcmp@plt+0x2d628>
  414d46:	mov    rdi,rbx
  414d49:	mov    rsi,rax
  414d4c:	call   4342e0 <strcmp@plt+0x30b58>
  414d51:	test   eax,eax
  414d53:	je     415584 <strcmp@plt+0x11dfc>
  414d59:	mov    rdi,QWORD PTR [rbp+0x0]
  414d5d:	call   423130 <strcmp@plt+0x1f9a8>
  414d62:	mov    rcx,rax
  414d65:	lea    rsi,[rip+0x325fb]        # 447367 <strcmp@plt+0x43bdf>
  414d6c:	mov    edi,0x3
  414d71:	xor    eax,eax
  414d73:	mov    rdx,rcx
  414d76:	call   42e800 <strcmp@plt+0x2b078>
  414d7b:	cmp    DWORD PTR [rbp+0x10],0x1
  414d7f:	je     41597e <strcmp@plt+0x121f6>
  414d85:	jmp    415768 <strcmp@plt+0x11fe0>
  414d8a:	mov    QWORD PTR [rsp+0x38],r14
  414d8f:	vmovups ymm0,YMMWORD PTR [rbx]
  414d93:	vmovups ymm1,YMMWORD PTR [rbx+0x20]
  414d98:	vmovups YMMWORD PTR [rsp+0x70],ymm1
  414d9e:	vmovups YMMWORD PTR [rsp+0x50],ymm0
  414da4:	xor    eax,eax
  414da6:	vzeroupper 
  414da9:	call   422f90 <strcmp@plt+0x1f808>
  414dae:	mov    rbp,rax
  414db1:	lea    rax,[rip+0x4fff8]        # 464db0 <strcmp@plt+0x61628>
  414db8:	cmp    DWORD PTR [rax],0x0
  414dbb:	jle    414e27 <strcmp@plt+0x1169f>
  414dbd:	mov    rdi,r13
  414dc0:	call   423130 <strcmp@plt+0x1f9a8>
  414dc5:	mov    QWORD PTR [rsp],rax
  414dc9:	lea    rdi,[r13+0x20]
  414dcd:	call   423130 <strcmp@plt+0x1f9a8>
  414dd2:	mov    QWORD PTR [rsp+0x10],rbp
  414dd7:	mov    r15,r13
  414dda:	mov    r13,r12
  414ddd:	mov    r12,rax
  414de0:	mov    rbx,QWORD PTR [rsp+0x38]
  414de5:	mov    rdi,rbx
  414de8:	call   423130 <strcmp@plt+0x1f9a8>
  414ded:	mov    r14,rax
  414df0:	lea    rdi,[rbx+0x20]
  414df4:	call   423130 <strcmp@plt+0x1f9a8>
  414df9:	mov    rbx,rax
  414dfc:	lea    rsi,[rip+0x3238c]        # 44718f <strcmp@plt+0x43a07>
  414e03:	mov    edi,0x5
  414e08:	xor    eax,eax
  414e0a:	mov    rdx,QWORD PTR [rsp]
  414e0e:	mov    rcx,r12
  414e11:	mov    r12,r13
  414e14:	mov    r13,r15
  414e17:	mov    rbp,QWORD PTR [rsp+0x10]
  414e1c:	mov    r8,r14
  414e1f:	mov    r9,rbx
  414e22:	call   42e800 <strcmp@plt+0x2b078>
  414e27:	lea    rbx,[rsp+0x50]
  414e2c:	mov    rdi,rbx
  414e2f:	call   4216c0 <strcmp@plt+0x1df38>
  414e34:	mov    r14,rax
  414e37:	mov    rdi,rbx
  414e3a:	mov    rsi,rbp
  414e3d:	call   420f70 <strcmp@plt+0x1d7e8>
  414e42:	cmp    eax,0x1
  414e45:	jne    4153db <strcmp@plt+0x11c53>
  414e4b:	lea    rax,[rip+0x4ff5e]        # 464db0 <strcmp@plt+0x61628>
  414e52:	cmp    DWORD PTR [rax],0x0
  414e55:	jle    414e78 <strcmp@plt+0x116f0>
  414e57:	mov    rdi,rbp
  414e5a:	call   423130 <strcmp@plt+0x1f9a8>
  414e5f:	mov    rcx,rax
  414e62:	lea    rsi,[rip+0x31e68]        # 446cd1 <strcmp@plt+0x43549>
  414e69:	mov    edi,0x5
  414e6e:	xor    eax,eax
  414e70:	mov    rdx,rcx
  414e73:	call   42e800 <strcmp@plt+0x2b078>
  414e78:	movzx  ecx,WORD PTR [r14]
  414e7c:	movzx  eax,BYTE PTR [r14+0x2]
  414e81:	shl    eax,0x10
  414e84:	or     eax,ecx
  414e86:	test   al,0x2
  414e88:	jne    41546d <strcmp@plt+0x11ce5>
  414e8e:	test   al,0x1
  414e90:	jne    415488 <strcmp@plt+0x11d00>
  414e96:	mov    QWORD PTR [rsp+0x10],rbp
  414e9b:	lea    rdi,[rip+0xe0fe]        # 422fa0 <strcmp@plt+0x1f818>
  414ea2:	call   42bc00 <strcmp@plt+0x28478>
  414ea7:	lea    rdi,[rsp+0x50]
  414eac:	mov    QWORD PTR [rsp+0x30],rax
  414eb1:	mov    rsi,rax
  414eb4:	call   420fe0 <strcmp@plt+0x1d858>
  414eb9:	cmp    BYTE PTR [r14+0x3],0x0
  414ebe:	je     415561 <strcmp@plt+0x11dd9>
  414ec4:	add    r13,0x20
  414ec8:	mov    QWORD PTR [rsp+0x48],r13
  414ecd:	lea    r15,[rsp+0x90]
  414ed5:	lea    r13,[rip+0xe864]        # 423740 <strcmp@plt+0x1ffb8>
  414edc:	xor    eax,eax
  414ede:	mov    QWORD PTR [rsp+0x18],rax
  414ee3:	xor    ecx,ecx
  414ee5:	mov    DWORD PTR [rsp+0x2c],0x0
  414eed:	mov    QWORD PTR [rsp+0x8],r14
  414ef2:	mov    QWORD PTR [rsp+0x20],r12
  414ef7:	mov    DWORD PTR [rsp+0x40],ecx
  414efb:	xor    eax,eax
  414efd:	call   422f90 <strcmp@plt+0x1f808>
  414f02:	mov    rbx,rax
  414f05:	lea    rdi,[rsp+0x50]
  414f0a:	mov    rsi,rax
  414f0d:	call   420fa0 <strcmp@plt+0x1d818>
  414f12:	cmp    eax,0x1
  414f15:	jne    4155fb <strcmp@plt+0x11e73>
  414f1b:	mov    rdi,QWORD PTR [r12+0x20]
  414f20:	mov    rsi,rbx
  414f23:	call   42fcd0 <strcmp@plt+0x2c548>
  414f28:	mov    rsi,rbx
  414f2b:	test   rax,rax
  414f2e:	mov    QWORD PTR [rsp],rbx
  414f32:	je     415015 <strcmp@plt+0x1188d>
  414f38:	mov    r12,rax
  414f3b:	mov    edi,0x20
  414f40:	call   432070 <strcmp@plt+0x2e8e8>
  414f45:	mov    rbx,rax
  414f48:	mov    rax,QWORD PTR [r14+0x4]
  414f4c:	mov    QWORD PTR [rbx],rax
  414f4f:	mov    rdi,QWORD PTR [rsp+0x10]
  414f54:	call   423740 <strcmp@plt+0x1ffb8>
  414f59:	mov    QWORD PTR [rbx+0x8],rax
  414f5d:	mov    rdi,QWORD PTR [rsp+0x48]
  414f62:	call   423740 <strcmp@plt+0x1ffb8>
  414f67:	mov    QWORD PTR [rbx+0x10],rax
  414f6b:	mov    rdi,QWORD PTR [rsp+0x30]
  414f70:	mov    rsi,r13
  414f73:	call   42bc70 <strcmp@plt+0x284e8>
  414f78:	mov    QWORD PTR [rbx+0x18],rax
  414f7c:	mov    rsi,QWORD PTR [r12+0x8]
  414f81:	mov    rbp,QWORD PTR [rsi+0x8]
  414f85:	cmp    rbp,rsi
  414f88:	je     414fde <strcmp@plt+0x11856>
  414f8a:	nop    WORD PTR [rax+rax*1+0x0]
  414f90:	mov    r15,QWORD PTR [rbp+0x10]
  414f94:	mov    rdi,QWORD PTR [r15+0x8]
  414f98:	mov    rsi,QWORD PTR [rbx+0x8]
  414f9c:	call   423970 <strcmp@plt+0x201e8>
  414fa1:	test   eax,eax
  414fa3:	jne    414fd0 <strcmp@plt+0x11848>
  414fa5:	mov    rdi,QWORD PTR [r15+0x10]
  414fa9:	mov    rsi,QWORD PTR [rbx+0x10]
  414fad:	call   423970 <strcmp@plt+0x201e8>
  414fb2:	test   eax,eax
  414fb4:	jne    414fd0 <strcmp@plt+0x11848>
  414fb6:	mov    rsi,QWORD PTR [r12+0x8]
  414fbb:	mov    rdi,rbp
  414fbe:	call   42c070 <strcmp@plt+0x288e8>
  414fc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414fcd:	nop    DWORD PTR [rax]
  414fd0:	mov    rbp,QWORD PTR [rbp+0x8]
  414fd4:	mov    rsi,QWORD PTR [r12+0x8]
  414fd9:	cmp    rbp,rsi
  414fdc:	jne    414f90 <strcmp@plt+0x11808>
  414fde:	mov    rdi,rbx
  414fe1:	call   42bcf0 <strcmp@plt+0x28568>
  414fe6:	mov    r12,QWORD PTR [rsp+0x20]
  414feb:	mov    r14,QWORD PTR [rsp+0x8]
  414ff0:	mov    rbx,QWORD PTR [rsp]
  414ff4:	lea    r15,[rsp+0x90]
  414ffc:	mov    ecx,DWORD PTR [rsp+0x40]
  415000:	add    ecx,0x1
  415003:	movzx  eax,BYTE PTR [r14+0x3]
  415008:	cmp    ecx,eax
  41500a:	jb     414ef7 <strcmp@plt+0x1176f>
  415010:	jmp    415563 <strcmp@plt+0x11ddb>
  415015:	mov    rbx,r12
  415018:	mov    rdi,QWORD PTR [r12+0x18]
  41501d:	call   42fcb0 <strcmp@plt+0x2c528>
  415022:	mov    rbp,rax
  415025:	test   rax,rax
  415028:	jne    415037 <strcmp@plt+0x118af>
  41502a:	mov    rbp,QWORD PTR [r12+0x28]
  41502f:	mov    DWORD PTR [rsp+0x2c],0x1
  415037:	mov    rdi,QWORD PTR [rbp+0x8]
  41503b:	mov    al,BYTE PTR [rdi+0x3c]
  41503e:	cmp    al,0x2
  415040:	mov    rbx,QWORD PTR [rsp]
  415044:	mov    r14,QWORD PTR [rsp+0x38]
  415049:	je     4150af <strcmp@plt+0x11927>
  41504b:	cmp    al,0x3
  41504d:	je     415127 <strcmp@plt+0x1199f>
  415053:	cmp    al,0x4
  415055:	jne    4151b6 <strcmp@plt+0x11a2e>
  41505b:	mov    rdi,rbp
  41505e:	call   430db0 <strcmp@plt+0x2d628>
  415063:	mov    rcx,QWORD PTR [rsp+0x8]
  415068:	mov    r8,QWORD PTR [rcx+0x4]
  41506c:	mov    esi,0xf
  415071:	xor    edx,edx
  415073:	mov    ecx,0x1
  415078:	mov    rdi,rax
  41507b:	call   422380 <strcmp@plt+0x1ebf8>
  415080:	mov    QWORD PTR [rsp+0x18],rax
  415085:	lea    rax,[rip+0x4fd24]        # 464db0 <strcmp@plt+0x61628>
  41508c:	cmp    DWORD PTR [rax],0x2
  41508f:	jl     415188 <strcmp@plt+0x11a00>
  415095:	mov    rdi,rbp
  415098:	call   430db0 <strcmp@plt+0x2d628>
  41509d:	mov    rdx,rax
  4150a0:	mov    edi,0x6
  4150a5:	mov    ecx,0xf
  4150aa:	jmp    41517a <strcmp@plt+0x119f2>
  4150af:	call   42a430 <strcmp@plt+0x26ca8>
  4150b4:	mov    rbx,rax
  4150b7:	mov    r13,r15
  4150ba:	lea    r15,[rsp+0x50]
  4150bf:	mov    rdi,r15
  4150c2:	call   42e590 <strcmp@plt+0x2ae08>
  4150c7:	mov    rbp,QWORD PTR [rbx+0x8]
  4150cb:	cmp    rbp,rbx
  4150ce:	je     415107 <strcmp@plt+0x1197f>
  4150d0:	mov    rdi,QWORD PTR [rbp+0x10]
  4150d4:	call   4232e0 <strcmp@plt+0x1fb58>
  4150d9:	mov    esi,0x10f6
  4150de:	mov    edx,0x10f6
  4150e3:	xor    ecx,ecx
  4150e5:	mov    rdi,r13
  4150e8:	mov    r8,rax
  4150eb:	call   435600 <strcmp@plt+0x31e78>
  4150f0:	mov    rdi,r12
  4150f3:	mov    rsi,r15
  4150f6:	mov    rdx,r13
  4150f9:	call   407ab0 <strcmp@plt+0x4328>
  4150fe:	mov    rbp,QWORD PTR [rbp+0x8]
  415102:	cmp    rbp,rbx
  415105:	jne    4150d0 <strcmp@plt+0x11948>
  415107:	mov    rdi,rbx
  41510a:	call   42c250 <strcmp@plt+0x28ac8>
  41510f:	mov    r14,QWORD PTR [rsp+0x8]
  415114:	mov    rbx,QWORD PTR [rsp]
  415118:	mov    r15,r13
  41511b:	lea    r13,[rip+0xe61e]        # 423740 <strcmp@plt+0x1ffb8>
  415122:	jmp    414ffc <strcmp@plt+0x11874>
  415127:	mov    rdi,rbp
  41512a:	call   430db0 <strcmp@plt+0x2d628>
  41512f:	mov    rcx,QWORD PTR [rsp+0x8]
  415134:	mov    r8,QWORD PTR [rcx+0x4]
  415138:	mov    esi,0x1
  41513d:	xor    edx,edx
  41513f:	mov    ecx,0x1
  415144:	mov    rdi,rax
  415147:	call   422380 <strcmp@plt+0x1ebf8>
  41514c:	mov    QWORD PTR [rsp+0x18],rax
  415151:	lea    rax,[rip+0x4fc58]        # 464db0 <strcmp@plt+0x61628>
  415158:	cmp    DWORD PTR [rax],0x2
  41515b:	jl     415188 <strcmp@plt+0x11a00>
  41515d:	mov    rdi,rbp
  415160:	call   430db0 <strcmp@plt+0x2d628>
  415165:	mov    rdi,rax
  415168:	call   423130 <strcmp@plt+0x1f9a8>
  41516d:	mov    rdx,rax
  415170:	mov    edi,0x6
  415175:	mov    ecx,0x1
  41517a:	xor    eax,eax
  41517c:	lea    rsi,[rip+0x3204e]        # 4471d1 <strcmp@plt+0x43a49>
  415183:	call   42e800 <strcmp@plt+0x2b078>
  415188:	mov    rdi,r12
  41518b:	mov    rbp,QWORD PTR [rsp+0x18]
  415190:	mov    rsi,rbp
  415193:	mov    rdx,r14
  415196:	call   407ab0 <strcmp@plt+0x4328>
  41519b:	test   rbp,rbp
  41519e:	je     415241 <strcmp@plt+0x11ab9>
  4151a4:	mov    rdi,rbp
  4151a7:	call   42e010 <strcmp@plt+0x2a888>
  4151ac:	mov    r14,QWORD PTR [rsp+0x8]
  4151b1:	jmp    414ffc <strcmp@plt+0x11874>
  4151b6:	mov    edi,0x40
  4151bb:	call   432070 <strcmp@plt+0x2e8e8>
  4151c0:	mov    r12,rax
  4151c3:	mov    rdi,rbx
  4151c6:	call   423740 <strcmp@plt+0x1ffb8>
  4151cb:	mov    QWORD PTR [r12],rax
  4151cf:	lea    rdi,[rip+0xf3a]        # 416110 <strcmp@plt+0x12988>
  4151d6:	call   42bc00 <strcmp@plt+0x28478>
  4151db:	mov    QWORD PTR [r12+0x8],rax
  4151e0:	mov    DWORD PTR [r12+0x10],0x0
  4151e9:	cmp    DWORD PTR [rsp+0x2c],0x1
  4151ee:	jne    415252 <strcmp@plt+0x11aca>
  4151f0:	mov    rax,QWORD PTR [rsp+0x20]
  4151f5:	mov    rbx,QWORD PTR [rax+0x28]
  4151f9:	mov    rdi,QWORD PTR [r12+0x28]
  4151fe:	test   rdi,rdi
  415201:	je     415208 <strcmp@plt+0x11a80>
  415203:	call   42c250 <strcmp@plt+0x28ac8>
  415208:	mov    QWORD PTR [r12+0x20],rbx
  41520d:	mov    rdi,QWORD PTR [rbx+0x8]
  415211:	call   42a430 <strcmp@plt+0x26ca8>
  415216:	mov    QWORD PTR [r12+0x28],rax
  41521b:	mov    QWORD PTR [r12+0x30],0x0
  415224:	mov    QWORD PTR [r12+0x18],0x0
  41522d:	mov    DWORD PTR [r12+0x38],0x0
  415236:	mov    QWORD PTR [r12+0x10],0x1
  41523f:	jmp    415298 <strcmp@plt+0x11b10>
  415241:	xor    eax,eax
  415243:	mov    QWORD PTR [rsp+0x18],rax
  415248:	mov    r14,QWORD PTR [rsp+0x8]
  41524d:	jmp    414ffc <strcmp@plt+0x11874>
  415252:	mov    rdi,QWORD PTR [r12+0x28]
  415257:	test   rdi,rdi
  41525a:	je     415261 <strcmp@plt+0x11ad9>
  41525c:	call   42c250 <strcmp@plt+0x28ac8>
  415261:	mov    QWORD PTR [r12+0x20],rbp
  415266:	mov    rdi,QWORD PTR [rbp+0x8]
  41526a:	call   42a430 <strcmp@plt+0x26ca8>
  41526f:	mov    QWORD PTR [r12+0x28],rax
  415274:	mov    QWORD PTR [r12+0x30],0x0
  41527d:	mov    DWORD PTR [r12+0x14],0x0
  415286:	mov    QWORD PTR [r12+0x18],0x0
  41528f:	mov    DWORD PTR [r12+0x38],0x0
  415298:	mov    rbx,QWORD PTR [rsp+0x8]
  41529d:	mov    edi,0x20
  4152a2:	call   432070 <strcmp@plt+0x2e8e8>
  4152a7:	mov    r15,rax
  4152aa:	mov    rax,QWORD PTR [rbx+0x4]
  4152ae:	mov    QWORD PTR [r15],rax
  4152b1:	mov    rdi,QWORD PTR [rsp+0x10]
  4152b6:	call   423740 <strcmp@plt+0x1ffb8>
  4152bb:	mov    QWORD PTR [r15+0x8],rax
  4152bf:	mov    rdi,QWORD PTR [rsp+0x48]
  4152c4:	call   423740 <strcmp@plt+0x1ffb8>
  4152c9:	mov    QWORD PTR [r15+0x10],rax
  4152cd:	mov    rdi,QWORD PTR [rsp+0x30]
  4152d2:	mov    rsi,r13
  4152d5:	call   42bc70 <strcmp@plt+0x284e8>
  4152da:	mov    QWORD PTR [r15+0x18],rax
  4152de:	mov    rsi,QWORD PTR [r12+0x8]
  4152e3:	mov    rbp,QWORD PTR [rsi+0x8]
  4152e7:	cmp    rbp,rsi
  4152ea:	je     41533e <strcmp@plt+0x11bb6>
  4152ec:	nop    DWORD PTR [rax+0x0]
  4152f0:	mov    rbx,QWORD PTR [rbp+0x10]
  4152f4:	mov    rdi,QWORD PTR [rbx+0x8]
  4152f8:	mov    rsi,QWORD PTR [r15+0x8]
  4152fc:	call   423970 <strcmp@plt+0x201e8>
  415301:	test   eax,eax
  415303:	jne    415330 <strcmp@plt+0x11ba8>
  415305:	mov    rdi,QWORD PTR [rbx+0x10]
  415309:	mov    rsi,QWORD PTR [r15+0x10]
  41530d:	call   423970 <strcmp@plt+0x201e8>
  415312:	test   eax,eax
  415314:	jne    415330 <strcmp@plt+0x11ba8>
  415316:	mov    rsi,QWORD PTR [r12+0x8]
  41531b:	mov    rdi,rbp
  41531e:	call   42c070 <strcmp@plt+0x288e8>
  415323:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41532d:	nop    DWORD PTR [rax]
  415330:	mov    rbp,QWORD PTR [rbp+0x8]
  415334:	mov    rsi,QWORD PTR [r12+0x8]
  415339:	cmp    rbp,rsi
  41533c:	jne    4152f0 <strcmp@plt+0x11b68>
  41533e:	mov    rdi,r15
  415341:	call   42bcf0 <strcmp@plt+0x28568>
  415346:	mov    rbp,QWORD PTR [rsp+0x20]
  41534b:	mov    rdi,QWORD PTR [rbp+0x20]
  41534f:	mov    rsi,QWORD PTR [r12]
  415353:	mov    rdx,r12
  415356:	call   42f150 <strcmp@plt+0x2b9c8>
  41535b:	mov    edi,0x18
  415360:	call   4320b0 <strcmp@plt+0x2e928>
  415365:	mov    rbx,rax
  415368:	mov    QWORD PTR [rax],r12
  41536b:	mov    QWORD PTR [rax+0x8],rbp
  41536f:	mov    rdi,r14
  415372:	call   423740 <strcmp@plt+0x1ffb8>
  415377:	mov    QWORD PTR [rbx+0x10],rax
  41537b:	mov    edi,0xc
  415380:	mov    rsi,rbp
  415383:	lea    rdx,[rip+0x1146]        # 4164d0 <strcmp@plt+0x12d48>
  41538a:	mov    rcx,rbx
  41538d:	lea    r8,[rip+0xfcc]        # 416360 <strcmp@plt+0x12bd8>
  415394:	call   4375d0 <strcmp@plt+0x33e48>
  415399:	mov    rbx,rax
  41539c:	lea    rax,[rip+0x5b1fd]        # 4705a0 <strcmp@plt+0x6ce18>
  4153a3:	mov    rdi,QWORD PTR [rax]
  4153a6:	mov    rsi,r12
  4153a9:	mov    r12,rbp
  4153ac:	mov    rdx,rbx
  4153af:	call   4378d0 <strcmp@plt+0x34148>
  4153b4:	mov    rdi,rbx
  4153b7:	call   4164d0 <strcmp@plt+0x12d48>
  4153bc:	jmp    414feb <strcmp@plt+0x11863>
  4153c1:	lea    rax,[rip+0x4f9e8]        # 464db0 <strcmp@plt+0x61628>
  4153c8:	mov    eax,DWORD PTR [rax]
  4153ca:	cmp    eax,0x3
  4153cd:	jl     415407 <strcmp@plt+0x11c7f>
  4153cf:	lea    rsi,[rip+0x31d08]        # 4470de <strcmp@plt+0x43956>
  4153d6:	jmp    414c02 <strcmp@plt+0x1147a>
  4153db:	xor    ebx,ebx
  4153dd:	xor    edi,edi
  4153df:	call   42c250 <strcmp@plt+0x28ac8>
  4153e4:	mov    rdi,rbx
  4153e7:	call   422fa0 <strcmp@plt+0x1f818>
  4153ec:	mov    rdi,rbp
  4153ef:	call   422fa0 <strcmp@plt+0x1f818>
  4153f4:	xor    ebp,ebp
  4153f6:	test   ebp,ebp
  4153f8:	jne    41553b <strcmp@plt+0x11db3>
  4153fe:	lea    rax,[rip+0x4f9ab]        # 464db0 <strcmp@plt+0x61628>
  415405:	mov    eax,DWORD PTR [rax]
  415407:	test   eax,eax
  415409:	jle    415422 <strcmp@plt+0x11c9a>
  41540b:	lea    rsi,[rip+0x31d0e]        # 447120 <strcmp@plt+0x43998>
  415412:	xor    ebx,ebx
  415414:	mov    edi,0x5
  415419:	xor    eax,eax
  41541b:	call   42e800 <strcmp@plt+0x2b078>
  415420:	jmp    415424 <strcmp@plt+0x11c9c>
  415422:	xor    ebx,ebx
  415424:	mov    eax,ebx
  415426:	add    rsp,0x128
  41542d:	pop    rbx
  41542e:	pop    r12
  415430:	pop    r13
  415432:	pop    r14
  415434:	pop    r15
  415436:	pop    rbp
  415437:	ret    
  415438:	lea    rax,[rip+0x4f971]        # 464db0 <strcmp@plt+0x61628>
  41543f:	xor    ebp,ebp
  415441:	cmp    DWORD PTR [rax],0x2
  415444:	jl     415533 <strcmp@plt+0x11dab>
  41544a:	mov    rdx,QWORD PTR [rbx+0x4]
  41544e:	lea    rsi,[rip+0x31e04]        # 447259 <strcmp@plt+0x43ad1>
  415455:	xor    ebp,ebp
  415457:	mov    edi,0x6
  41545c:	xor    eax,eax
  41545e:	call   42e800 <strcmp@plt+0x2b078>
  415463:	test   ebp,ebp
  415465:	jne    41553b <strcmp@plt+0x11db3>
  41546b:	jmp    4153fe <strcmp@plt+0x11c76>
  41546d:	xor    ebp,ebp
  41546f:	lea    rax,[rip+0x4f93a]        # 464db0 <strcmp@plt+0x61628>
  415476:	cmp    DWORD PTR [rax],0x2
  415479:	jl     415533 <strcmp@plt+0x11dab>
  41547f:	lea    rsi,[rip+0x30eed]        # 446373 <strcmp@plt+0x42beb>
  415486:	jmp    4154a1 <strcmp@plt+0x11d19>
  415488:	xor    ebp,ebp
  41548a:	lea    rax,[rip+0x4f91f]        # 464db0 <strcmp@plt+0x61628>
  415491:	cmp    DWORD PTR [rax],0x2
  415494:	jl     415533 <strcmp@plt+0x11dab>
  41549a:	lea    rsi,[rip+0x30eed]        # 44638e <strcmp@plt+0x42c06>
  4154a1:	xor    ebp,ebp
  4154a3:	mov    edi,0x6
  4154a8:	xor    eax,eax
  4154aa:	call   42e800 <strcmp@plt+0x2b078>
  4154af:	test   ebp,ebp
  4154b1:	jne    41553b <strcmp@plt+0x11db3>
  4154b7:	jmp    4153fe <strcmp@plt+0x11c76>
  4154bc:	lea    rax,[rip+0x4f8ed]        # 464db0 <strcmp@plt+0x61628>
  4154c3:	cmp    DWORD PTR [rax],0x2
  4154c6:	mov    rbp,QWORD PTR [rsp]
  4154ca:	jl     415507 <strcmp@plt+0x11d7f>
  4154cc:	mov    rdi,rbx
  4154cf:	call   423130 <strcmp@plt+0x1f9a8>
  4154d4:	mov    r14,rbx
  4154d7:	mov    rbx,rax
  4154da:	mov    rdi,QWORD PTR [rbp+0x20]
  4154de:	call   430db0 <strcmp@plt+0x2d628>
  4154e3:	mov    rdi,rax
  4154e6:	call   423130 <strcmp@plt+0x1f9a8>
  4154eb:	mov    rcx,rax
  4154ee:	lea    rsi,[rip+0x31dfa]        # 4472ef <strcmp@plt+0x43b67>
  4154f5:	mov    edi,0x6
  4154fa:	xor    eax,eax
  4154fc:	mov    rdx,rbx
  4154ff:	mov    rbx,r14
  415502:	call   42e800 <strcmp@plt+0x2b078>
  415507:	mov    rdi,QWORD PTR [rbp+0x0]
  41550b:	call   423130 <strcmp@plt+0x1f9a8>
  415510:	mov    rcx,rax
  415513:	lea    rsi,[rip+0x31e25]        # 44733f <strcmp@plt+0x43bb7>
  41551a:	xor    ebp,ebp
  41551c:	mov    edi,0x3
  415521:	xor    eax,eax
  415523:	mov    rdx,rcx
  415526:	call   42e800 <strcmp@plt+0x2b078>
  41552b:	mov    rdi,rbx
  41552e:	call   429dd0 <strcmp@plt+0x26648>
  415533:	test   ebp,ebp
  415535:	je     4153fe <strcmp@plt+0x11c76>
  41553b:	lea    rax,[rip+0x4f86e]        # 464db0 <strcmp@plt+0x61628>
  415542:	mov    ebx,0x1
  415547:	cmp    DWORD PTR [rax],0x3
  41554a:	jl     415424 <strcmp@plt+0x11c9c>
  415550:	lea    rsi,[rip+0x31bfe]        # 447155 <strcmp@plt+0x439cd>
  415557:	mov    edi,0x7
  41555c:	jmp    415419 <strcmp@plt+0x11c91>
  415561:	xor    ebx,ebx
  415563:	mov    rdi,QWORD PTR [rsp+0x30]
  415568:	call   42c250 <strcmp@plt+0x28ac8>
  41556d:	mov    rdi,QWORD PTR [rsp+0x10]
  415572:	call   422fa0 <strcmp@plt+0x1f818>
  415577:	mov    rdi,rbx
  41557a:	call   422fa0 <strcmp@plt+0x1f818>
  41557f:	jmp    4159fd <strcmp@plt+0x12275>
  415584:	xor    eax,eax
  415586:	call   430ca0 <strcmp@plt+0x2d518>
  41558b:	mov    rsi,rbx
  41558e:	mov    rbx,rax
  415591:	mov    rdi,rax
  415594:	call   430cc0 <strcmp@plt+0x2d538>
  415599:	mov    rdi,r12
  41559c:	mov    rsi,rbx
  41559f:	call   415e90 <strcmp@plt+0x12708>
  4155a4:	mov    rdi,QWORD PTR [rbp+0x28]
  4155a8:	test   rdi,rdi
  4155ab:	je     4155b2 <strcmp@plt+0x11e2a>
  4155ad:	call   42c250 <strcmp@plt+0x28ac8>
  4155b2:	mov    QWORD PTR [rbp+0x20],rbx
  4155b6:	mov    rdi,QWORD PTR [rbx+0x8]
  4155ba:	call   42a430 <strcmp@plt+0x26ca8>
  4155bf:	mov    QWORD PTR [rbp+0x28],rax
  4155c3:	mov    QWORD PTR [rbp+0x30],0x0
  4155cb:	mov    DWORD PTR [rbp+0x14],0x0
  4155d2:	mov    QWORD PTR [rbp+0x18],0x0
  4155da:	mov    DWORD PTR [rbp+0x38],0x0
  4155e1:	lea    rax,[rip+0x5afc0]        # 4705a8 <strcmp@plt+0x6ce20>
  4155e8:	mov    rdi,QWORD PTR [rax]
  4155eb:	mov    rsi,r15
  4155ee:	call   4326e0 <strcmp@plt+0x2ef58>
  4155f3:	mov    rdi,r13
  4155f6:	jmp    4159f8 <strcmp@plt+0x12270>
  4155fb:	mov    rdi,QWORD PTR [rsp+0x30]
  415600:	call   42c250 <strcmp@plt+0x28ac8>
  415605:	mov    rdi,QWORD PTR [rsp+0x18]
  41560a:	test   rdi,rdi
  41560d:	je     415614 <strcmp@plt+0x11e8c>
  41560f:	call   42e010 <strcmp@plt+0x2a888>
  415614:	mov    rbp,QWORD PTR [rsp+0x10]
  415619:	jmp    4153e4 <strcmp@plt+0x11c5c>
  41561e:	call   42bbd0 <strcmp@plt+0x28448>
  415623:	mov    rbp,rax
  415626:	test   r14,r14
  415629:	mov    QWORD PTR [rsp+0x20],r12
  41562e:	mov    QWORD PTR [rsp+0x38],rbx
  415633:	je     4157ef <strcmp@plt+0x12067>
  415639:	add    r14,0x20
  41563d:	mov    rdi,r14
  415640:	jmp    4157f6 <strcmp@plt+0x1206e>
  415645:	mov    r14,rbp
  415648:	mov    rbp,QWORD PTR [rsp]
  41564c:	mov    DWORD PTR [rbp+0x14],0x1
  415653:	cmp    BYTE PTR [rbx+0x3e],0x0
  415657:	jne    4159f5 <strcmp@plt+0x1226d>
  41565d:	mov    rdi,QWORD PTR [rbp+0x18]
  415661:	test   rdi,rdi
  415664:	je     415687 <strcmp@plt+0x11eff>
  415666:	call   430db0 <strcmp@plt+0x2d628>
  41566b:	mov    rdi,rax
  41566e:	mov    rsi,rbx
  415671:	call   4342e0 <strcmp@plt+0x30b58>
  415676:	test   eax,eax
  415678:	je     4159ed <strcmp@plt+0x12265>
  41567e:	mov    rdi,QWORD PTR [rbp+0x18]
  415682:	call   430ce0 <strcmp@plt+0x2d558>
  415687:	xor    eax,eax
  415689:	call   430ca0 <strcmp@plt+0x2d518>
  41568e:	mov    rsi,rbx
  415691:	mov    rbx,rax
  415694:	mov    rdi,rax
  415697:	call   430cc0 <strcmp@plt+0x2d538>
  41569c:	mov    QWORD PTR [rbp+0x18],rbx
  4156a0:	jmp    4159f5 <strcmp@plt+0x1226d>
  4156a5:	xor    eax,eax
  4156a7:	call   430ca0 <strcmp@plt+0x2d518>
  4156ac:	mov    rsi,rbx
  4156af:	mov    rbx,rax
  4156b2:	mov    rdi,rax
  4156b5:	call   430cc0 <strcmp@plt+0x2d538>
  4156ba:	mov    rdi,r12
  4156bd:	mov    rsi,rbx
  4156c0:	call   415e90 <strcmp@plt+0x12708>
  4156c5:	mov    rdi,rbx
  4156c8:	call   430db0 <strcmp@plt+0x2d628>
  4156cd:	mov    rdi,r12
  4156d0:	mov    rbx,QWORD PTR [rsp]
  4156d4:	mov    rsi,rbx
  4156d7:	mov    rdx,rax
  4156da:	call   416380 <strcmp@plt+0x12bf8>
  4156df:	mov    rdi,r12
  4156e2:	mov    rsi,rbx
  4156e5:	call   4162c0 <strcmp@plt+0x12b38>
  4156ea:	jmp    4159fd <strcmp@plt+0x12275>
  4156ef:	mov    r13,rbp
  4156f2:	mov    rbp,QWORD PTR [rsp]
  4156f6:	mov    rdi,QWORD PTR [rbp+0x0]
  4156fa:	call   423130 <strcmp@plt+0x1f9a8>
  4156ff:	mov    rcx,rax
  415702:	lea    rsi,[rip+0x31ca1]        # 4473aa <strcmp@plt+0x43c22>
  415709:	mov    edi,0x3
  41570e:	xor    eax,eax
  415710:	mov    rdx,rcx
  415713:	call   42e800 <strcmp@plt+0x2b078>
  415718:	cmp    DWORD PTR [rbp+0x10],0x1
  41571c:	jne    415768 <strcmp@plt+0x11fe0>
  41571e:	mov    rcx,QWORD PTR [rbp+0x28]
  415722:	mov    rax,QWORD PTR [rbp+0x30]
  415726:	cmp    DWORD PTR [rcx+0x18],0x0
  41572a:	je     415973 <strcmp@plt+0x121eb>
  415730:	mov    rcx,QWORD PTR [rcx]
  415733:	cmp    rax,rcx
  415736:	je     41597e <strcmp@plt+0x121f6>
  41573c:	lea    rax,[rip+0x4f66d]        # 464db0 <strcmp@plt+0x61628>
  415743:	cmp    DWORD PTR [rax],0x2
  415746:	jl     41575b <strcmp@plt+0x11fd3>
  415748:	lea    rsi,[rip+0x31c9c]        # 4473eb <strcmp@plt+0x43c63>
  41574f:	mov    edi,0x6
  415754:	xor    eax,eax
  415756:	call   42e800 <strcmp@plt+0x2b078>
  41575b:	mov    rdi,r13
  41575e:	call   4164d0 <strcmp@plt+0x12d48>
  415763:	jmp    4159e3 <strcmp@plt+0x1225b>
  415768:	mov    r14,rbx
  41576b:	lea    rax,[rip+0x4f63e]        # 464db0 <strcmp@plt+0x61628>
  415772:	cmp    DWORD PTR [rax],0x0
  415775:	jle    41578a <strcmp@plt+0x12002>
  415777:	lea    rsi,[rip+0x31aa8]        # 447226 <strcmp@plt+0x43a9e>
  41577e:	mov    edi,0x5
  415783:	xor    eax,eax
  415785:	call   42e800 <strcmp@plt+0x2b078>
  41578a:	mov    rbx,QWORD PTR [r12+0x28]
  41578f:	mov    rdi,QWORD PTR [rbp+0x28]
  415793:	test   rdi,rdi
  415796:	je     41579d <strcmp@plt+0x12015>
  415798:	call   42c250 <strcmp@plt+0x28ac8>
  41579d:	mov    QWORD PTR [rbp+0x20],rbx
  4157a1:	mov    rdi,QWORD PTR [rbx+0x8]
  4157a5:	call   42a430 <strcmp@plt+0x26ca8>
  4157aa:	mov    QWORD PTR [rbp+0x28],rax
  4157ae:	mov    QWORD PTR [rbp+0x30],0x0
  4157b6:	mov    QWORD PTR [rbp+0x18],0x0
  4157be:	mov    DWORD PTR [rbp+0x38],0x0
  4157c5:	mov    QWORD PTR [rbp+0x10],0x1
  4157cd:	lea    rax,[rip+0x5add4]        # 4705a8 <strcmp@plt+0x6ce20>
  4157d4:	mov    rdi,QWORD PTR [rax]
  4157d7:	mov    rsi,r15
  4157da:	call   4326e0 <strcmp@plt+0x2ef58>
  4157df:	mov    rdi,r13
  4157e2:	call   4164d0 <strcmp@plt+0x12d48>
  4157e7:	mov    rbx,r14
  4157ea:	jmp    4159e3 <strcmp@plt+0x1225b>
  4157ef:	add    r13,0x20
  4157f3:	mov    rdi,r13
  4157f6:	mov    rsi,rbp
  4157f9:	call   42bcf0 <strcmp@plt+0x28568>
  4157fe:	mov    rbx,QWORD PTR [rsp]
  415802:	mov    rax,QWORD PTR [rbx+0x8]
  415806:	mov    rcx,QWORD PTR [rax+0x8]
  41580a:	mov    QWORD PTR [rsp+0x10],rcx
  41580f:	cmp    rcx,rax
  415812:	je     415914 <strcmp@plt+0x1218c>
  415818:	mov    QWORD PTR [rsp+0x40],rbp
  41581d:	mov    r12,QWORD PTR [rbp+0x8]
  415821:	cmp    r12,rbp
  415824:	je     4158fc <strcmp@plt+0x12174>
  41582a:	mov    rax,QWORD PTR [rsp+0x10]
  41582f:	mov    r15,QWORD PTR [rax+0x10]
  415833:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41583d:	nop    DWORD PTR [rax]
  415840:	mov    rdi,QWORD PTR [r15+0x8]
  415844:	mov    rsi,QWORD PTR [r15+0x18]
  415848:	mov    rdx,QWORD PTR [rbx]
  41584b:	call   4222a0 <strcmp@plt+0x1eb18>
  415850:	mov    rbp,rax
  415853:	movzx  eax,WORD PTR [rax+0x24]
  415857:	mov    rcx,QWORD PTR [rbp+0x30]
  41585b:	mov    rdx,QWORD PTR [r15]
  41585e:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  415863:	mov    r14,QWORD PTR [r15+0x10]
  415867:	mov    rdi,QWORD PTR [rbx]
  41586a:	call   4230e0 <strcmp@plt+0x1f958>
  41586f:	mov    rdi,rax
  415872:	call   423740 <strcmp@plt+0x1ffb8>
  415877:	mov    r13,rax
  41587a:	mov    esi,0x1
  41587f:	mov    rdi,rax
  415882:	call   4231a0 <strcmp@plt+0x1fa18>
  415887:	mov    esi,0x10f6
  41588c:	mov    edx,0x10f6
  415891:	mov    rdi,rbp
  415894:	mov    rcx,r14
  415897:	mov    r8,r13
  41589a:	call   422020 <strcmp@plt+0x1e898>
  41589f:	mov    rdi,QWORD PTR [r12+0x10]
  4158a4:	call   4232e0 <strcmp@plt+0x1fb58>
  4158a9:	mov    esi,0x10f6
  4158ae:	mov    edx,0x10f6
  4158b3:	xor    ecx,ecx
  4158b5:	lea    rbx,[rsp+0x90]
  4158bd:	mov    rdi,rbx
  4158c0:	mov    r8,rax
  4158c3:	call   435600 <strcmp@plt+0x31e78>
  4158c8:	mov    rdi,QWORD PTR [rsp+0x20]
  4158cd:	mov    rsi,rbp
  4158d0:	mov    rdx,rbx
  4158d3:	call   407ab0 <strcmp@plt+0x4328>
  4158d8:	test   rbp,rbp
  4158db:	je     4158e5 <strcmp@plt+0x1215d>
  4158dd:	mov    rdi,rbp
  4158e0:	call   42e010 <strcmp@plt+0x2a888>
  4158e5:	mov    r12,QWORD PTR [r12+0x8]
  4158ea:	mov    rbp,QWORD PTR [rsp+0x40]
  4158ef:	cmp    r12,rbp
  4158f2:	mov    rbx,QWORD PTR [rsp]
  4158f6:	jne    415840 <strcmp@plt+0x120b8>
  4158fc:	mov    rax,QWORD PTR [rsp+0x10]
  415901:	mov    rax,QWORD PTR [rax+0x8]
  415905:	mov    QWORD PTR [rsp+0x10],rax
  41590a:	cmp    rax,QWORD PTR [rbx+0x8]
  41590e:	jne    41581d <strcmp@plt+0x12095>
  415914:	mov    rax,QWORD PTR [rsp+0x20]
  415919:	mov    rdi,QWORD PTR [rax+0x20]
  41591d:	mov    rsi,QWORD PTR [rbx]
  415920:	call   42f580 <strcmp@plt+0x2bdf8>
  415925:	lea    rax,[rip+0x5ac74]        # 4705a0 <strcmp@plt+0x6ce18>
  41592c:	mov    rsi,QWORD PTR [rax]
  41592f:	lea    rax,[rip+0x5ac72]        # 4705a8 <strcmp@plt+0x6ce20>
  415936:	mov    rdx,QWORD PTR [rax]
  415939:	mov    rdi,rbx
  41593c:	call   4376b0 <strcmp@plt+0x33f28>
  415941:	mov    rdi,QWORD PTR [rbx]
  415944:	call   422fa0 <strcmp@plt+0x1f818>
  415949:	mov    rdi,QWORD PTR [rbx+0x8]
  41594d:	call   42c250 <strcmp@plt+0x28ac8>
  415952:	mov    rdi,QWORD PTR [rbx+0x18]
  415956:	call   430ce0 <strcmp@plt+0x2d558>
  41595b:	mov    rdi,QWORD PTR [rbx+0x28]
  41595f:	call   42c250 <strcmp@plt+0x28ac8>
  415964:	mov    rdi,rbx
  415967:	call   403780 <free@plt>
  41596c:	mov    rdi,QWORD PTR [rsp+0x38]
  415971:	jmp    4159e6 <strcmp@plt+0x1225e>
  415973:	xor    ecx,ecx
  415975:	cmp    rax,rcx
  415978:	jne    41573c <strcmp@plt+0x11fb4>
  41597e:	mov    rdx,QWORD PTR [rbp+0x0]
  415982:	mov    rdi,r12
  415985:	mov    rsi,rbp
  415988:	call   416380 <strcmp@plt+0x12bf8>
  41598d:	mov    rdi,QWORD PTR [r12+0x20]
  415992:	mov    rsi,QWORD PTR [rbp+0x0]
  415996:	call   42f580 <strcmp@plt+0x2bdf8>
  41599b:	lea    rax,[rip+0x5abfe]        # 4705a0 <strcmp@plt+0x6ce18>
  4159a2:	mov    rsi,QWORD PTR [rax]
  4159a5:	lea    rax,[rip+0x5abfc]        # 4705a8 <strcmp@plt+0x6ce20>
  4159ac:	mov    rdx,QWORD PTR [rax]
  4159af:	mov    rdi,rbp
  4159b2:	call   4376b0 <strcmp@plt+0x33f28>
  4159b7:	mov    rdi,QWORD PTR [rbp+0x0]
  4159bb:	call   422fa0 <strcmp@plt+0x1f818>
  4159c0:	mov    rdi,QWORD PTR [rbp+0x8]
  4159c4:	call   42c250 <strcmp@plt+0x28ac8>
  4159c9:	mov    rdi,QWORD PTR [rbp+0x18]
  4159cd:	call   430ce0 <strcmp@plt+0x2d558>
  4159d2:	mov    rdi,QWORD PTR [rbp+0x28]
  4159d6:	call   42c250 <strcmp@plt+0x28ac8>
  4159db:	mov    rdi,rbp
  4159de:	call   403780 <free@plt>
  4159e3:	mov    rdi,rbx
  4159e6:	call   429dd0 <strcmp@plt+0x26648>
  4159eb:	jmp    4159fd <strcmp@plt+0x12275>
  4159ed:	mov    rdi,rbx
  4159f0:	call   429dd0 <strcmp@plt+0x26648>
  4159f5:	mov    rdi,r14
  4159f8:	call   4164d0 <strcmp@plt+0x12d48>
  4159fd:	mov    ebp,0x1
  415a02:	test   ebp,ebp
  415a04:	jne    41553b <strcmp@plt+0x11db3>
  415a0a:	jmp    4153fe <strcmp@plt+0x11c76>
  415a0f:	lea    rdi,[rip+0x31a3b]        # 447451 <strcmp@plt+0x43cc9>
  415a16:	lea    rsi,[rip+0x31a4e]        # 44746b <strcmp@plt+0x43ce3>
  415a1d:	lea    rdx,[rip+0x31a58]        # 44747c <strcmp@plt+0x43cf4>
  415a24:	call   4321d0 <strcmp@plt+0x2ea48>
  415a29:	nop    DWORD PTR [rax+0x0]
  415a30:	mov    eax,0x1
  415a35:	ret    
  415a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415a40:	mov    eax,0x1
  415a45:	ret    
  415a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415a50:	mov    eax,0x1
  415a55:	ret    
  415a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415a60:	xor    eax,eax
  415a62:	ret    
  415a63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415a6d:	nop    DWORD PTR [rax]
  415a70:	push   rbp
  415a71:	push   r15
  415a73:	push   r14
  415a75:	push   rbx
  415a76:	push   rax
  415a77:	xor    ebx,ebx
  415a79:	test   rsi,rsi
  415a7c:	je     415b91 <strcmp@plt+0x12409>
  415a82:	mov    rbp,rsi
  415a85:	mov    r15,rdi
  415a88:	mov    r14,QWORD PTR [rdi+0x18]
  415a8c:	mov    rdi,rsi
  415a8f:	call   430db0 <strcmp@plt+0x2d628>
  415a94:	mov    rdi,r14
  415a97:	mov    rsi,rax
  415a9a:	mov    rdx,rbp
  415a9d:	call   42f150 <strcmp@plt+0x2b9c8>
  415aa2:	test   eax,eax
  415aa4:	je     415b91 <strcmp@plt+0x12409>
  415aaa:	mov    rax,QWORD PTR [rbp+0x8]
  415aae:	imul   r14d,DWORD PTR [rax+0x38],0x3c
  415ab3:	xor    edi,edi
  415ab5:	call   4373e0 <strcmp@plt+0x33c58>
  415aba:	mov    rbx,rax
  415abd:	lea    rdx,[rip+0x97c]        # 416440 <strcmp@plt+0x12cb8>
  415ac4:	xor    r8d,r8d
  415ac7:	xor    r9d,r9d
  415aca:	mov    rdi,rax
  415acd:	mov    rsi,r15
  415ad0:	mov    rcx,rbp
  415ad3:	call   437400 <strcmp@plt+0x33c78>
  415ad8:	lea    rax,[rip+0x5aac1]        # 4705a0 <strcmp@plt+0x6ce18>
  415adf:	mov    rdi,QWORD PTR [rax]
  415ae2:	mov    rsi,rbp
  415ae5:	mov    rdx,rbx
  415ae8:	call   4378d0 <strcmp@plt+0x34148>
  415aed:	mov    rdi,rbx
  415af0:	mov    esi,r14d
  415af3:	call   437460 <strcmp@plt+0x33cd8>
  415af8:	mov    rbx,QWORD PTR [rbp+0x8]
  415afc:	lea    rax,[rip+0x4f2ad]        # 464db0 <strcmp@plt+0x61628>
  415b03:	mov    eax,DWORD PTR [rax]
  415b05:	cmp    r14d,0x3d
  415b09:	jl     415b4a <strcmp@plt+0x123c2>
  415b0b:	test   eax,eax
  415b0d:	jle    415b7e <strcmp@plt+0x123f6>
  415b0f:	mov    rdi,rbx
  415b12:	call   423130 <strcmp@plt+0x1f9a8>
  415b17:	mov    rbp,rax
  415b1a:	movzx  edi,BYTE PTR [rbx+0x3c]
  415b1e:	call   42aef0 <strcmp@plt+0x27768>
  415b23:	mov    rcx,rax
  415b26:	mov    eax,r14d
  415b29:	mov    r8d,0x88888889
  415b2f:	imul   r8,rax
  415b33:	shr    r8,0x25
  415b37:	lea    rsi,[rip+0x3145d]        # 446f9b <strcmp@plt+0x43813>
  415b3e:	mov    edi,0x5
  415b43:	xor    eax,eax
  415b45:	mov    rdx,rbp
  415b48:	jmp    415b79 <strcmp@plt+0x123f1>
  415b4a:	test   eax,eax
  415b4c:	jle    415b7e <strcmp@plt+0x123f6>
  415b4e:	mov    rdi,rbx
  415b51:	call   423130 <strcmp@plt+0x1f9a8>
  415b56:	mov    rbp,rax
  415b59:	movzx  edi,BYTE PTR [rbx+0x3c]
  415b5d:	call   42aef0 <strcmp@plt+0x27768>
  415b62:	mov    rcx,rax
  415b65:	lea    rsi,[rip+0x31471]        # 446fdd <strcmp@plt+0x43855>
  415b6c:	mov    edi,0x5
  415b71:	xor    eax,eax
  415b73:	mov    rdx,rbp
  415b76:	mov    r8d,r14d
  415b79:	call   42e800 <strcmp@plt+0x2b078>
  415b7e:	mov    rdi,QWORD PTR [r15+0x18]
  415b82:	mov    esi,0x7
  415b87:	call   415ba0 <strcmp@plt+0x12418>
  415b8c:	mov    ebx,0x1
  415b91:	mov    eax,ebx
  415b93:	add    rsp,0x8
  415b97:	pop    rbx
  415b98:	pop    r14
  415b9a:	pop    r15
  415b9c:	pop    rbp
  415b9d:	ret    
  415b9e:	xchg   ax,ax
  415ba0:	push   rbp
  415ba1:	push   r15
  415ba3:	push   r14
  415ba5:	push   r13
  415ba7:	push   r12
  415ba9:	push   rbx
  415baa:	sub    rsp,0x828
  415bb1:	mov    r13d,esi
  415bb4:	mov    r15,rdi
  415bb7:	cmp    esi,0x5
  415bba:	jl     415bd1 <strcmp@plt+0x12449>
  415bbc:	lea    rax,[rip+0x4f1ed]        # 464db0 <strcmp@plt+0x61628>
  415bc3:	mov    eax,DWORD PTR [rax]
  415bc5:	add    eax,0x4
  415bc8:	cmp    eax,r13d
  415bcb:	jl     415e1c <strcmp@plt+0x12694>
  415bd1:	lea    rsi,[rip+0x3134b]        # 446f23 <strcmp@plt+0x4379b>
  415bd8:	xor    ebx,ebx
  415bda:	xor    eax,eax
  415bdc:	mov    edi,r13d
  415bdf:	call   42e800 <strcmp@plt+0x2b078>
  415be4:	call   42bbd0 <strcmp@plt+0x28448>
  415be9:	mov    rbp,rax
  415bec:	mov    rdi,QWORD PTR [r15]
  415bef:	mov    rsi,rax
  415bf2:	call   42bcf0 <strcmp@plt+0x28568>
  415bf7:	mov    rdi,QWORD PTR [r15+0x8]
  415bfb:	mov    QWORD PTR [rsp+0x8],rbp
  415c00:	mov    rsi,rbp
  415c03:	call   42bcf0 <strcmp@plt+0x28568>
  415c08:	mov    rax,QWORD PTR [r15+0x10]
  415c0c:	mov    rcx,QWORD PTR [rax]
  415c0f:	cmp    DWORD PTR [rcx],0x0
  415c12:	je     415c5e <strcmp@plt+0x124d6>
  415c14:	mov    r12d,0x3
  415c1a:	xor    ebp,ebp
  415c1c:	nop    DWORD PTR [rax+0x0]
  415c20:	mov    rdx,QWORD PTR [rcx+0x10]
  415c24:	mov    esi,ebp
  415c26:	shr    esi,0x4
  415c29:	mov    edi,ebx
  415c2b:	and    dil,0x1e
  415c2f:	shlx   edi,r12d,edi
  415c34:	test   DWORD PTR [rdx+rsi*4],edi
  415c37:	jne    415c51 <strcmp@plt+0x124c9>
  415c39:	mov    rax,QWORD PTR [rcx+0x20]
  415c3d:	mov    ecx,ebp
  415c3f:	mov    rdi,QWORD PTR [rax+rcx*8]
  415c43:	mov    rsi,QWORD PTR [rsp+0x8]
  415c48:	call   42bcf0 <strcmp@plt+0x28568>
  415c4d:	mov    rax,QWORD PTR [r15+0x10]
  415c51:	add    ebp,0x1
  415c54:	mov    rcx,QWORD PTR [rax]
  415c57:	add    ebx,0x2
  415c5a:	cmp    ebp,DWORD PTR [rcx]
  415c5c:	jne    415c20 <strcmp@plt+0x12498>
  415c5e:	mov    rax,QWORD PTR [r15+0x18]
  415c62:	mov    rcx,QWORD PTR [rax]
  415c65:	cmp    DWORD PTR [rcx],0x0
  415c68:	je     415cbe <strcmp@plt+0x12536>
  415c6a:	xor    ebx,ebx
  415c6c:	mov    r12d,0x3
  415c72:	xor    ebp,ebp
  415c74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415c7e:	xchg   ax,ax
  415c80:	mov    rdx,QWORD PTR [rcx+0x10]
  415c84:	mov    esi,ebp
  415c86:	shr    esi,0x4
  415c89:	mov    edi,ebx
  415c8b:	and    dil,0x1e
  415c8f:	shlx   edi,r12d,edi
  415c94:	test   DWORD PTR [rdx+rsi*4],edi
  415c97:	jne    415cb1 <strcmp@plt+0x12529>
  415c99:	mov    rax,QWORD PTR [rcx+0x20]
  415c9d:	mov    ecx,ebp
  415c9f:	mov    rdi,QWORD PTR [rax+rcx*8]
  415ca3:	mov    rsi,QWORD PTR [rsp+0x8]
  415ca8:	call   42bcf0 <strcmp@plt+0x28568>
  415cad:	mov    rax,QWORD PTR [r15+0x18]
  415cb1:	add    ebp,0x1
  415cb4:	mov    rcx,QWORD PTR [rax]
  415cb7:	add    ebx,0x2
  415cba:	cmp    ebp,DWORD PTR [rcx]
  415cbc:	jne    415c80 <strcmp@plt+0x124f8>
  415cbe:	mov    rdi,QWORD PTR [r15+0x20]
  415cc2:	mov    rbx,QWORD PTR [rsp+0x8]
  415cc7:	mov    rsi,rbx
  415cca:	call   42bcf0 <strcmp@plt+0x28568>
  415ccf:	mov    rdi,QWORD PTR [r15+0x20]
  415cd3:	mov    rsi,rbx
  415cd6:	call   42bcf0 <strcmp@plt+0x28568>
  415cdb:	mov    r15,QWORD PTR [rbx+0x8]
  415cdf:	cmp    r15,rbx
  415ce2:	je     415dfb <strcmp@plt+0x12673>
  415ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  415cf0:	mov    rax,QWORD PTR [r15+0x10]
  415cf4:	mov    rbx,QWORD PTR [rax]
  415cf7:	test   rbx,rbx
  415cfa:	je     415dec <strcmp@plt+0x12664>
  415d00:	xor    r12d,r12d
  415d03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415d0d:	nop    DWORD PTR [rax]
  415d10:	cmp    QWORD PTR [rbx+0x8],0x0
  415d15:	je     415d98 <strcmp@plt+0x12610>
  415d1b:	mov    rax,QWORD PTR [rbx+0x28]
  415d1f:	mov    r14,QWORD PTR [rax]
  415d22:	test   r14,r14
  415d25:	je     415d98 <strcmp@plt+0x12610>
  415d27:	xor    ebp,ebp
  415d29:	nop    DWORD PTR [rax+0x0]
  415d30:	cmp    QWORD PTR [r14+0x8],0x0
  415d35:	je     415d48 <strcmp@plt+0x125c0>
  415d37:	mov    rdi,QWORD PTR [r14+0x28]
  415d3b:	test   rdi,rdi
  415d3e:	je     415d48 <strcmp@plt+0x125c0>
  415d40:	mov    esi,r13d
  415d43:	call   430dd0 <strcmp@plt+0x2d648>
  415d48:	mov    rax,QWORD PTR [r14+0x10]
  415d4c:	mov    rcx,QWORD PTR [r14+0x18]
  415d50:	test   rax,rax
  415d53:	je     415d70 <strcmp@plt+0x125e8>
  415d55:	test   rcx,rcx
  415d58:	je     415d90 <strcmp@plt+0x12608>
  415d5a:	mov    QWORD PTR [rsp+rbp*8+0x10],rcx
  415d5f:	add    rbp,0x1
  415d63:	jmp    415d90 <strcmp@plt+0x12608>
  415d65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415d6f:	nop
  415d70:	test   rcx,rcx
  415d73:	je     415d7a <strcmp@plt+0x125f2>
  415d75:	mov    rax,rcx
  415d78:	jmp    415d90 <strcmp@plt+0x12608>
  415d7a:	test   rbp,rbp
  415d7d:	je     415d98 <strcmp@plt+0x12610>
  415d7f:	mov    rax,QWORD PTR [rsp+rbp*8+0x8]
  415d84:	add    rbp,0xffffffffffffffff
  415d88:	nop    DWORD PTR [rax+rax*1+0x0]
  415d90:	mov    r14,rax
  415d93:	test   rax,rax
  415d96:	jne    415d30 <strcmp@plt+0x125a8>
  415d98:	mov    rax,QWORD PTR [rbx+0x10]
  415d9c:	mov    rcx,QWORD PTR [rbx+0x18]
  415da0:	test   rax,rax
  415da3:	je     415dc0 <strcmp@plt+0x12638>
  415da5:	test   rcx,rcx
  415da8:	je     415de0 <strcmp@plt+0x12658>
  415daa:	mov    QWORD PTR [rsp+r12*8+0x420],rcx
  415db2:	add    r12,0x1
  415db6:	jmp    415de0 <strcmp@plt+0x12658>
  415db8:	nop    DWORD PTR [rax+rax*1+0x0]
  415dc0:	test   rcx,rcx
  415dc3:	je     415dca <strcmp@plt+0x12642>
  415dc5:	mov    rax,rcx
  415dc8:	jmp    415de0 <strcmp@plt+0x12658>
  415dca:	test   r12,r12
  415dcd:	je     415dec <strcmp@plt+0x12664>
  415dcf:	mov    rax,QWORD PTR [rsp+r12*8+0x418]
  415dd7:	add    r12,0xffffffffffffffff
  415ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  415de0:	mov    rbx,rax
  415de3:	test   rax,rax
  415de6:	jne    415d10 <strcmp@plt+0x12588>
  415dec:	mov    r15,QWORD PTR [r15+0x8]
  415df0:	cmp    r15,QWORD PTR [rsp+0x8]
  415df5:	jne    415cf0 <strcmp@plt+0x12568>
  415dfb:	mov    rdi,QWORD PTR [rsp+0x8]
  415e00:	call   42c250 <strcmp@plt+0x28ac8>
  415e05:	cmp    r13d,0x5
  415e09:	jl     415e2e <strcmp@plt+0x126a6>
  415e0b:	lea    rax,[rip+0x4ef9e]        # 464db0 <strcmp@plt+0x61628>
  415e12:	mov    eax,DWORD PTR [rax]
  415e14:	add    eax,0x4
  415e17:	cmp    eax,r13d
  415e1a:	jge    415e2e <strcmp@plt+0x126a6>
  415e1c:	add    rsp,0x828
  415e23:	pop    rbx
  415e24:	pop    r12
  415e26:	pop    r13
  415e28:	pop    r14
  415e2a:	pop    r15
  415e2c:	pop    rbp
  415e2d:	ret    
  415e2e:	lea    rsi,[rip+0x2f27a]        # 4450af <strcmp@plt+0x41927>
  415e35:	xor    eax,eax
  415e37:	mov    edi,r13d
  415e3a:	add    rsp,0x828
  415e41:	pop    rbx
  415e42:	pop    r12
  415e44:	pop    r13
  415e46:	pop    r14
  415e48:	pop    r15
  415e4a:	pop    rbp
  415e4b:	jmp    42e800 <strcmp@plt+0x2b078>
  415e50:	test   rsi,rsi
  415e53:	je     415e8a <strcmp@plt+0x12702>
  415e55:	push   rbx
  415e56:	mov    rbx,rdi
  415e59:	mov    rdi,rsi
  415e5c:	call   430db0 <strcmp@plt+0x2d628>
  415e61:	mov    rdi,QWORD PTR [rbx+0x18]
  415e65:	mov    rsi,rax
  415e68:	call   42f580 <strcmp@plt+0x2bdf8>
  415e6d:	mov    rdi,rax
  415e70:	call   430ce0 <strcmp@plt+0x2d558>
  415e75:	mov    rdi,QWORD PTR [rbx+0x18]
  415e79:	mov    esi,0x7
  415e7e:	call   415ba0 <strcmp@plt+0x12418>
  415e83:	mov    eax,0x1
  415e88:	pop    rbx
  415e89:	ret    
  415e8a:	xor    eax,eax
  415e8c:	ret    
  415e8d:	nop    DWORD PTR [rax]
  415e90:	push   r15
  415e92:	push   r14
  415e94:	push   r13
  415e96:	push   r12
  415e98:	push   rbx
  415e99:	test   rsi,rsi
  415e9c:	je     415f4d <strcmp@plt+0x127c5>
  415ea2:	mov    r13,rsi
  415ea5:	mov    r14,rdi
  415ea8:	mov    rbx,QWORD PTR [rdi+0x18]
  415eac:	mov    rdi,rsi
  415eaf:	call   430db0 <strcmp@plt+0x2d628>
  415eb4:	mov    rdi,rbx
  415eb7:	mov    rsi,rax
  415eba:	call   42fcd0 <strcmp@plt+0x2c548>
  415ebf:	test   rax,rax
  415ec2:	je     415f39 <strcmp@plt+0x127b1>
  415ec4:	mov    r15,rax
  415ec7:	mov    rdi,QWORD PTR [r13+0x8]
  415ecb:	mov    rsi,QWORD PTR [rax+0x8]
  415ecf:	call   429e00 <strcmp@plt+0x26678>
  415ed4:	lea    rcx,[rip+0x4eed5]        # 464db0 <strcmp@plt+0x61628>
  415edb:	mov    ecx,DWORD PTR [rcx]
  415edd:	test   eax,eax
  415edf:	je     415f51 <strcmp@plt+0x127c9>
  415ee1:	cmp    ecx,0x2
  415ee4:	jl     415f0f <strcmp@plt+0x12787>
  415ee6:	mov    rdi,r13
  415ee9:	call   430db0 <strcmp@plt+0x2d628>
  415eee:	mov    rdi,rax
  415ef1:	call   423130 <strcmp@plt+0x1f9a8>
  415ef6:	mov    rcx,rax
  415ef9:	lea    rsi,[rip+0x30f33]        # 446e33 <strcmp@plt+0x436ab>
  415f00:	mov    edi,0x6
  415f05:	xor    eax,eax
  415f07:	mov    rdx,rcx
  415f0a:	call   42e800 <strcmp@plt+0x2b078>
  415f0f:	mov    rdi,r15
  415f12:	call   430db0 <strcmp@plt+0x2d628>
  415f17:	mov    rdi,QWORD PTR [r14+0x18]
  415f1b:	mov    rsi,rax
  415f1e:	call   42f580 <strcmp@plt+0x2bdf8>
  415f23:	mov    rdi,rax
  415f26:	call   430ce0 <strcmp@plt+0x2d558>
  415f2b:	mov    rdi,QWORD PTR [r14+0x18]
  415f2f:	mov    esi,0x7
  415f34:	call   415ba0 <strcmp@plt+0x12418>
  415f39:	mov    rdi,r14
  415f3c:	mov    rsi,r13
  415f3f:	pop    rbx
  415f40:	pop    r12
  415f42:	pop    r13
  415f44:	pop    r14
  415f46:	pop    r15
  415f48:	jmp    415a70 <strcmp@plt+0x122e8>
  415f4d:	xor    eax,eax
  415f4f:	jmp    415fc3 <strcmp@plt+0x1283b>
  415f51:	cmp    ecx,0x2
  415f54:	jl     415f7f <strcmp@plt+0x127f7>
  415f56:	mov    rdi,r13
  415f59:	call   430db0 <strcmp@plt+0x2d628>
  415f5e:	mov    rdi,rax
  415f61:	call   423130 <strcmp@plt+0x1f9a8>
  415f66:	mov    rcx,rax
  415f69:	lea    rsi,[rip+0x30e78]        # 446de8 <strcmp@plt+0x43660>
  415f70:	mov    edi,0x6
  415f75:	xor    eax,eax
  415f77:	mov    rdx,rcx
  415f7a:	call   42e800 <strcmp@plt+0x2b078>
  415f7f:	lea    rax,[rip+0x5a61a]        # 4705a0 <strcmp@plt+0x6ce18>
  415f86:	mov    rdi,QWORD PTR [rax]
  415f89:	xor    r12d,r12d
  415f8c:	xor    edx,edx
  415f8e:	mov    rsi,r15
  415f91:	call   437840 <strcmp@plt+0x340b8>
  415f96:	mov    r14,rax
  415f99:	cmp    DWORD PTR [rax+0x18],0x0
  415f9d:	je     415fa7 <strcmp@plt+0x1281f>
  415f9f:	mov    rax,QWORD PTR [r14+0x8]
  415fa3:	mov    r12,QWORD PTR [rax+0x10]
  415fa7:	mov    rax,QWORD PTR [r13+0x8]
  415fab:	mov    esi,DWORD PTR [rax+0x38]
  415fae:	mov    rdi,r12
  415fb1:	call   437460 <strcmp@plt+0x33cd8>
  415fb6:	mov    rdi,r14
  415fb9:	call   42c250 <strcmp@plt+0x28ac8>
  415fbe:	mov    eax,0x1
  415fc3:	pop    rbx
  415fc4:	pop    r12
  415fc6:	pop    r13
  415fc8:	pop    r14
  415fca:	pop    r15
  415fcc:	ret    
  415fcd:	nop    DWORD PTR [rax]
  415fd0:	test   rsi,rsi
  415fd3:	je     415ff6 <strcmp@plt+0x1286e>
  415fd5:	push   rax
  415fd6:	mov    rax,rsi
  415fd9:	mov    rdi,QWORD PTR [rdi+0x20]
  415fdd:	mov    rsi,QWORD PTR [rsi]
  415fe0:	mov    rdx,rax
  415fe3:	call   42f150 <strcmp@plt+0x2b9c8>
  415fe8:	mov    ecx,eax
  415fea:	xor    eax,eax
  415fec:	test   ecx,ecx
  415fee:	setne  al
  415ff1:	add    rsp,0x8
  415ff5:	ret    
  415ff6:	xor    eax,eax
  415ff8:	ret    
  415ff9:	nop    DWORD PTR [rax+0x0]
  416000:	mov    QWORD PTR [rdi+0x28],rsi
  416004:	mov    eax,0x1
  416009:	ret    
  41600a:	nop    WORD PTR [rax+rax*1+0x0]
  416010:	push   r15
  416012:	push   r14
  416014:	push   rbx
  416015:	mov    ebx,esi
  416017:	mov    r14,rdi
  41601a:	cmp    esi,0x4
  41601d:	jg     416031 <strcmp@plt+0x128a9>
  41601f:	lea    rsi,[rip+0x30e7f]        # 446ea5 <strcmp@plt+0x4371d>
  416026:	xor    eax,eax
  416028:	mov    edi,ebx
  41602a:	call   42e800 <strcmp@plt+0x2b078>
  41602f:	jmp    416069 <strcmp@plt+0x128e1>
  416031:	lea    r15,[rip+0x4ed78]        # 464db0 <strcmp@plt+0x61628>
  416038:	mov    eax,DWORD PTR [r15]
  41603b:	add    eax,0x4
  41603e:	cmp    eax,ebx
  416040:	jl     416099 <strcmp@plt+0x12911>
  416042:	lea    rsi,[rip+0x30e5c]        # 446ea5 <strcmp@plt+0x4371d>
  416049:	xor    eax,eax
  41604b:	mov    edi,ebx
  41604d:	call   42e800 <strcmp@plt+0x2b078>
  416052:	mov    eax,DWORD PTR [r15]
  416055:	add    eax,0x4
  416058:	cmp    eax,ebx
  41605a:	jge    416069 <strcmp@plt+0x128e1>
  41605c:	mov    rdi,QWORD PTR [r14+0x28]
  416060:	mov    esi,ebx
  416062:	call   430dd0 <strcmp@plt+0x2d648>
  416067:	jmp    416089 <strcmp@plt+0x12901>
  416069:	lea    rsi,[rip+0x30e71]        # 446ee1 <strcmp@plt+0x43759>
  416070:	xor    eax,eax
  416072:	mov    edi,ebx
  416074:	call   42e800 <strcmp@plt+0x2b078>
  416079:	mov    rdi,QWORD PTR [r14+0x28]
  41607d:	mov    esi,ebx
  41607f:	call   430dd0 <strcmp@plt+0x2d648>
  416084:	cmp    ebx,0x5
  416087:	jl     41609f <strcmp@plt+0x12917>
  416089:	lea    rax,[rip+0x4ed20]        # 464db0 <strcmp@plt+0x61628>
  416090:	mov    eax,DWORD PTR [rax]
  416092:	add    eax,0x4
  416095:	cmp    eax,ebx
  416097:	jge    41609f <strcmp@plt+0x12917>
  416099:	pop    rbx
  41609a:	pop    r14
  41609c:	pop    r15
  41609e:	ret    
  41609f:	lea    rsi,[rip+0x2f009]        # 4450af <strcmp@plt+0x41927>
  4160a6:	xor    eax,eax
  4160a8:	mov    edi,ebx
  4160aa:	pop    rbx
  4160ab:	pop    r14
  4160ad:	pop    r15
  4160af:	jmp    42e800 <strcmp@plt+0x2b078>
  4160b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4160be:	xchg   ax,ax
  4160c0:	push   r14
  4160c2:	push   rbx
  4160c3:	push   rax
  4160c4:	mov    r14,rdi
  4160c7:	mov    edi,0x40
  4160cc:	call   432070 <strcmp@plt+0x2e8e8>
  4160d1:	mov    rbx,rax
  4160d4:	mov    rdi,r14
  4160d7:	call   423740 <strcmp@plt+0x1ffb8>
  4160dc:	mov    QWORD PTR [rbx],rax
  4160df:	lea    rdi,[rip+0x2a]        # 416110 <strcmp@plt+0x12988>
  4160e6:	call   42bc00 <strcmp@plt+0x28478>
  4160eb:	mov    QWORD PTR [rbx+0x8],rax
  4160ef:	mov    DWORD PTR [rbx+0x10],0x0
  4160f6:	mov    rax,rbx
  4160f9:	add    rsp,0x8
  4160fd:	pop    rbx
  4160fe:	pop    r14
  416100:	ret    
  416101:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41610b:	nop    DWORD PTR [rax+rax*1+0x0]
  416110:	push   rbx
  416111:	mov    rbx,rdi
  416114:	mov    rdi,QWORD PTR [rdi+0x8]
  416118:	call   422fa0 <strcmp@plt+0x1f818>
  41611d:	mov    rdi,QWORD PTR [rbx+0x10]
  416121:	call   422fa0 <strcmp@plt+0x1f818>
  416126:	mov    rdi,QWORD PTR [rbx+0x18]
  41612a:	call   42c250 <strcmp@plt+0x28ac8>
  41612f:	mov    rdi,rbx
  416132:	pop    rbx
  416133:	jmp    403780 <free@plt>
  416138:	nop    DWORD PTR [rax+rax*1+0x0]
  416140:	push   r14
  416142:	push   rbx
  416143:	push   rax
  416144:	mov    r14,rsi
  416147:	mov    rbx,rdi
  41614a:	mov    rdi,QWORD PTR [rdi+0x28]
  41614e:	test   rdi,rdi
  416151:	je     416158 <strcmp@plt+0x129d0>
  416153:	call   42c250 <strcmp@plt+0x28ac8>
  416158:	mov    QWORD PTR [rbx+0x20],r14
  41615c:	mov    rdi,QWORD PTR [r14+0x8]
  416160:	call   42a430 <strcmp@plt+0x26ca8>
  416165:	mov    QWORD PTR [rbx+0x28],rax
  416169:	mov    QWORD PTR [rbx+0x30],0x0
  416171:	mov    DWORD PTR [rbx+0x14],0x0
  416178:	mov    QWORD PTR [rbx+0x18],0x0
  416180:	mov    DWORD PTR [rbx+0x38],0x0
  416187:	add    rsp,0x8
  41618b:	pop    rbx
  41618c:	pop    r14
  41618e:	ret    
  41618f:	nop
  416190:	push   r14
  416192:	push   rbx
  416193:	push   rax
  416194:	mov    r14,rsi
  416197:	mov    rbx,rdi
  41619a:	mov    rdi,QWORD PTR [rdi+0x28]
  41619e:	test   rdi,rdi
  4161a1:	je     4161a8 <strcmp@plt+0x12a20>
  4161a3:	call   42c250 <strcmp@plt+0x28ac8>
  4161a8:	mov    QWORD PTR [rbx+0x20],r14
  4161ac:	mov    rdi,QWORD PTR [r14+0x8]
  4161b0:	call   42a430 <strcmp@plt+0x26ca8>
  4161b5:	mov    QWORD PTR [rbx+0x28],rax
  4161b9:	mov    QWORD PTR [rbx+0x30],0x0
  4161c1:	mov    QWORD PTR [rbx+0x18],0x0
  4161c9:	mov    DWORD PTR [rbx+0x38],0x0
  4161d0:	mov    QWORD PTR [rbx+0x10],0x1
  4161d8:	add    rsp,0x8
  4161dc:	pop    rbx
  4161dd:	pop    r14
  4161df:	ret    
  4161e0:	push   r15
  4161e2:	push   r14
  4161e4:	push   r12
  4161e6:	push   rbx
  4161e7:	push   rax
  4161e8:	mov    r15,rsi
  4161eb:	mov    rsi,QWORD PTR [rdi+0x8]
  4161ef:	mov    rbx,QWORD PTR [rsi+0x8]
  4161f3:	cmp    rbx,rsi
  4161f6:	je     41624d <strcmp@plt+0x12ac5>
  4161f8:	mov    r14,rdi
  4161fb:	nop    DWORD PTR [rax+rax*1+0x0]
  416200:	mov    r12,QWORD PTR [rbx+0x10]
  416204:	mov    rdi,QWORD PTR [r12+0x8]
  416209:	mov    rsi,QWORD PTR [r15+0x8]
  41620d:	call   423970 <strcmp@plt+0x201e8>
  416212:	test   eax,eax
  416214:	jne    416240 <strcmp@plt+0x12ab8>
  416216:	mov    rdi,QWORD PTR [r12+0x10]
  41621b:	mov    rsi,QWORD PTR [r15+0x10]
  41621f:	call   423970 <strcmp@plt+0x201e8>
  416224:	test   eax,eax
  416226:	jne    416240 <strcmp@plt+0x12ab8>
  416228:	mov    rsi,QWORD PTR [r14+0x8]
  41622c:	mov    rdi,rbx
  41622f:	call   42c070 <strcmp@plt+0x288e8>
  416234:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41623e:	xchg   ax,ax
  416240:	mov    rbx,QWORD PTR [rbx+0x8]
  416244:	mov    rsi,QWORD PTR [r14+0x8]
  416248:	cmp    rbx,rsi
  41624b:	jne    416200 <strcmp@plt+0x12a78>
  41624d:	mov    rdi,r15
  416250:	add    rsp,0x8
  416254:	pop    rbx
  416255:	pop    r12
  416257:	pop    r14
  416259:	pop    r15
  41625b:	jmp    42bcf0 <strcmp@plt+0x28568>
  416260:	test   rdi,rdi
  416263:	je     41626a <strcmp@plt+0x12ae2>
  416265:	jmp    430ce0 <strcmp@plt+0x2d558>
  41626a:	ret    
  41626b:	nop    DWORD PTR [rax+rax*1+0x0]
  416270:	test   rdi,rdi
  416273:	je     4162be <strcmp@plt+0x12b36>
  416275:	push   rbx
  416276:	mov    rbx,rdi
  416279:	lea    rax,[rip+0x5a320]        # 4705a0 <strcmp@plt+0x6ce18>
  416280:	mov    rsi,QWORD PTR [rax]
  416283:	lea    rax,[rip+0x5a31e]        # 4705a8 <strcmp@plt+0x6ce20>
  41628a:	mov    rdx,QWORD PTR [rax]
  41628d:	call   4376b0 <strcmp@plt+0x33f28>
  416292:	mov    rdi,QWORD PTR [rbx]
  416295:	call   422fa0 <strcmp@plt+0x1f818>
  41629a:	mov    rdi,QWORD PTR [rbx+0x8]
  41629e:	call   42c250 <strcmp@plt+0x28ac8>
  4162a3:	mov    rdi,QWORD PTR [rbx+0x18]
  4162a7:	call   430ce0 <strcmp@plt+0x2d558>
  4162ac:	mov    rdi,QWORD PTR [rbx+0x28]
  4162b0:	call   42c250 <strcmp@plt+0x28ac8>
  4162b5:	mov    rdi,rbx
  4162b8:	pop    rbx
  4162b9:	jmp    403780 <free@plt>
  4162be:	ret    
  4162bf:	nop
  4162c0:	test   rsi,rsi
  4162c3:	je     41631d <strcmp@plt+0x12b95>
  4162c5:	push   rbx
  4162c6:	mov    rbx,rsi
  4162c9:	mov    rdi,QWORD PTR [rdi+0x20]
  4162cd:	mov    rsi,QWORD PTR [rsi]
  4162d0:	call   42f580 <strcmp@plt+0x2bdf8>
  4162d5:	lea    rax,[rip+0x5a2c4]        # 4705a0 <strcmp@plt+0x6ce18>
  4162dc:	mov    rsi,QWORD PTR [rax]
  4162df:	lea    rax,[rip+0x5a2c2]        # 4705a8 <strcmp@plt+0x6ce20>
  4162e6:	mov    rdx,QWORD PTR [rax]
  4162e9:	mov    rdi,rbx
  4162ec:	call   4376b0 <strcmp@plt+0x33f28>
  4162f1:	mov    rdi,QWORD PTR [rbx]
  4162f4:	call   422fa0 <strcmp@plt+0x1f818>
  4162f9:	mov    rdi,QWORD PTR [rbx+0x8]
  4162fd:	call   42c250 <strcmp@plt+0x28ac8>
  416302:	mov    rdi,QWORD PTR [rbx+0x18]
  416306:	call   430ce0 <strcmp@plt+0x2d558>
  41630b:	mov    rdi,QWORD PTR [rbx+0x28]
  41630f:	call   42c250 <strcmp@plt+0x28ac8>
  416314:	mov    rdi,rbx
  416317:	pop    rbx
  416318:	jmp    403780 <free@plt>
  41631d:	ret    
  41631e:	xchg   ax,ax
  416320:	push   r15
  416322:	push   r14
  416324:	push   r12
  416326:	push   rbx
  416327:	push   rax
  416328:	mov    r14,rdx
  41632b:	mov    r15,rsi
  41632e:	mov    r12,rdi
  416331:	mov    edi,0x18
  416336:	call   4320b0 <strcmp@plt+0x2e928>
  41633b:	mov    rbx,rax
  41633e:	mov    QWORD PTR [rax],r12
  416341:	mov    QWORD PTR [rax+0x8],r15
  416345:	mov    rdi,r14
  416348:	call   423740 <strcmp@plt+0x1ffb8>
  41634d:	mov    QWORD PTR [rbx+0x10],rax
  416351:	mov    rax,rbx
  416354:	add    rsp,0x8
  416358:	pop    rbx
  416359:	pop    r12
  41635b:	pop    r14
  41635d:	pop    r15
  41635f:	ret    
  416360:	push   rbx
  416361:	mov    rbx,rdi
  416364:	mov    rdi,QWORD PTR [rdi+0x10]
  416368:	call   422fa0 <strcmp@plt+0x1f818>
  41636d:	mov    rdi,rbx
  416370:	pop    rbx
  416371:	jmp    403780 <free@plt>
  416376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416380:	push   rbp
  416381:	push   r15
  416383:	push   r14
  416385:	push   r13
  416387:	push   r12
  416389:	push   rbx
  41638a:	sub    rsp,0x58
  41638e:	mov    QWORD PTR [rsp+0x8],rdx
  416393:	mov    rax,QWORD PTR [rsi+0x8]
  416397:	mov    rbp,QWORD PTR [rax+0x8]
  41639b:	cmp    rbp,rax
  41639e:	je     41641b <strcmp@plt+0x12c93>
  4163a0:	mov    r12,rsi
  4163a3:	mov    r15,rdi
  4163a6:	lea    r13,[rsp+0x10]
  4163ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4163b0:	mov    r14,QWORD PTR [rbp+0x10]
  4163b4:	mov    r8,QWORD PTR [r14]
  4163b7:	mov    esi,0xf
  4163bc:	xor    edx,edx
  4163be:	xor    ecx,ecx
  4163c0:	mov    rdi,QWORD PTR [rsp+0x8]
  4163c5:	call   422380 <strcmp@plt+0x1ebf8>
  4163ca:	mov    rbx,rax
  4163cd:	mov    rax,QWORD PTR [r14+0x18]
  4163d1:	mov    rax,QWORD PTR [rax+0x8]
  4163d5:	mov    rdi,QWORD PTR [rax+0x10]
  4163d9:	call   4232e0 <strcmp@plt+0x1fb58>
  4163de:	mov    esi,0x10f6
  4163e3:	mov    edx,0x10f6
  4163e8:	xor    ecx,ecx
  4163ea:	mov    rdi,r13
  4163ed:	mov    r8,rax
  4163f0:	call   435600 <strcmp@plt+0x31e78>
  4163f5:	mov    rdi,r15
  4163f8:	mov    rsi,rbx
  4163fb:	mov    rdx,r13
  4163fe:	call   407ab0 <strcmp@plt+0x4328>
  416403:	test   rbx,rbx
  416406:	je     416410 <strcmp@plt+0x12c88>
  416408:	mov    rdi,rbx
  41640b:	call   42e010 <strcmp@plt+0x2a888>
  416410:	mov    rbp,QWORD PTR [rbp+0x8]
  416414:	cmp    rbp,QWORD PTR [r12+0x8]
  416419:	jne    4163b0 <strcmp@plt+0x12c28>
  41641b:	add    rsp,0x58
  41641f:	pop    rbx
  416420:	pop    r12
  416422:	pop    r13
  416424:	pop    r14
  416426:	pop    r15
  416428:	pop    rbp
  416429:	ret    
  41642a:	nop    WORD PTR [rax+rax*1+0x0]
  416430:	mov    edi,0x20
  416435:	jmp    432070 <strcmp@plt+0x2e8e8>
  41643a:	nop    WORD PTR [rax+rax*1+0x0]
  416440:	push   r15
  416442:	push   r14
  416444:	push   r12
  416446:	push   rbx
  416447:	push   rax
  416448:	mov    rbx,rdi
  41644b:	call   437430 <strcmp@plt+0x33ca8>
  416450:	mov    r12,rax
  416453:	mov    r15,QWORD PTR [rax+0x8]
  416457:	mov    rdi,rbx
  41645a:	call   437420 <strcmp@plt+0x33c98>
  41645f:	mov    r14,rax
  416462:	lea    rax,[rip+0x4e947]        # 464db0 <strcmp@plt+0x61628>
  416469:	cmp    DWORD PTR [rax],0x0
  41646c:	jle    41648f <strcmp@plt+0x12d07>
  41646e:	mov    rdi,r15
  416471:	call   423130 <strcmp@plt+0x1f9a8>
  416476:	mov    rcx,rax
  416479:	lea    rsi,[rip+0x30b9f]        # 44701f <strcmp@plt+0x43897>
  416480:	mov    edi,0x5
  416485:	xor    eax,eax
  416487:	mov    rdx,rcx
  41648a:	call   42e800 <strcmp@plt+0x2b078>
  41648f:	mov    rbx,QWORD PTR [r14+0x18]
  416493:	mov    rdi,r12
  416496:	call   430db0 <strcmp@plt+0x2d628>
  41649b:	lea    rdx,[rip+0x1a83e]        # 430ce0 <strcmp@plt+0x2d558>
  4164a2:	mov    rdi,rbx
  4164a5:	mov    rsi,rax
  4164a8:	call   42f8b0 <strcmp@plt+0x2c128>
  4164ad:	mov    rdi,QWORD PTR [r14+0x18]
  4164b1:	mov    esi,0x7
  4164b6:	call   415ba0 <strcmp@plt+0x12418>
  4164bb:	mov    eax,0x1
  4164c0:	add    rsp,0x8
  4164c4:	pop    rbx
  4164c5:	pop    r12
  4164c7:	pop    r14
  4164c9:	pop    r15
  4164cb:	ret    
  4164cc:	nop    DWORD PTR [rax+0x0]
  4164d0:	push   rbp
  4164d1:	push   r15
  4164d3:	push   r14
  4164d5:	push   r13
  4164d7:	push   r12
  4164d9:	push   rbx
  4164da:	sub    rsp,0x58
  4164de:	mov    r15,rdi
  4164e1:	call   437430 <strcmp@plt+0x33ca8>
  4164e6:	mov    rbp,rax
  4164e9:	mov    rdi,r15
  4164ec:	call   437450 <strcmp@plt+0x33cc8>
  4164f1:	mov    r13,rax
  4164f4:	mov    rbx,QWORD PTR [rbp+0x0]
  4164f8:	mov    r12,QWORD PTR [rbp+0x8]
  4164fc:	mov    rax,QWORD PTR [rbx+0x8]
  416500:	mov    rdi,QWORD PTR [rbx+0x28]
  416504:	mov    rax,QWORD PTR [rax]
  416507:	mov    r14,QWORD PTR [rax+0x10]
  41650b:	mov    rax,QWORD PTR [rbx+0x30]
  41650f:	mov    ecx,DWORD PTR [rdi+0x18]
  416512:	test   rax,rax
  416515:	je     416526 <strcmp@plt+0x12d9e>
  416517:	test   ecx,ecx
  416519:	je     416520 <strcmp@plt+0x12d98>
  41651b:	cmp    rax,QWORD PTR [rdi]
  41651e:	je     416530 <strcmp@plt+0x12da8>
  416520:	mov    rax,QWORD PTR [rax+0x8]
  416524:	jmp    416578 <strcmp@plt+0x12df0>
  416526:	test   ecx,ecx
  416528:	je     416576 <strcmp@plt+0x12dee>
  41652a:	mov    rax,QWORD PTR [rdi+0x8]
  41652e:	jmp    416578 <strcmp@plt+0x12df0>
  416530:	cmp    DWORD PTR [rbx+0x14],0x0
  416534:	je     416763 <strcmp@plt+0x12fdb>
  41653a:	mov    rdi,QWORD PTR [rbx+0x18]
  41653e:	test   rdi,rdi
  416541:	je     41676c <strcmp@plt+0x12fe4>
  416547:	mov    rax,QWORD PTR [rdi+0x8]
  41654b:	mov    DWORD PTR [rax+0x38],0x1
  416552:	call   430f30 <strcmp@plt+0x2d7a8>
  416557:	mov    rdi,r12
  41655a:	mov    rsi,rax
  41655d:	call   415e90 <strcmp@plt+0x12708>
  416562:	mov    rdi,QWORD PTR [rbx+0x18]
  416566:	call   430db0 <strcmp@plt+0x2d628>
  41656b:	mov    rdi,r12
  41656e:	mov    rsi,rbx
  416571:	mov    rdx,rax
  416574:	jmp    416591 <strcmp@plt+0x12e09>
  416576:	xor    eax,eax
  416578:	mov    QWORD PTR [rbx+0x30],rax
  41657c:	cmp    DWORD PTR [rbx+0x38],0x3
  416580:	jl     4165a6 <strcmp@plt+0x12e1e>
  416582:	cmp    DWORD PTR [rbx+0x10],0x1
  416586:	jne    4165dc <strcmp@plt+0x12e54>
  416588:	mov    rdx,QWORD PTR [rbx]
  41658b:	mov    rdi,r12
  41658e:	mov    rsi,rbx
  416591:	call   416380 <strcmp@plt+0x12bf8>
  416596:	mov    rdi,r12
  416599:	mov    rsi,rbx
  41659c:	call   4162c0 <strcmp@plt+0x12b38>
  4165a1:	jmp    41674f <strcmp@plt+0x12fc7>
  4165a6:	mov    QWORD PTR [rsp],r13
  4165aa:	mov    rdi,QWORD PTR [r14+0x8]
  4165ae:	mov    rsi,QWORD PTR [r14+0x18]
  4165b2:	mov    rdx,QWORD PTR [rbx]
  4165b5:	call   4222a0 <strcmp@plt+0x1eb18>
  4165ba:	mov    r13,rax
  4165bd:	movzx  ebp,WORD PTR [rax+0x24]
  4165c1:	cmp    rbp,0xffff
  4165c8:	mov    QWORD PTR [rsp+0x8],r12
  4165cd:	je     41665d <strcmp@plt+0x12ed5>
  4165d3:	add    rbp,QWORD PTR [r13+0x30]
  4165d7:	jmp    41665f <strcmp@plt+0x12ed7>
  4165dc:	lea    rax,[rip+0x4e7cd]        # 464db0 <strcmp@plt+0x61628>
  4165e3:	cmp    DWORD PTR [rax],0x0
  4165e6:	jle    4165ff <strcmp@plt+0x12e77>
  4165e8:	lea    rsi,[rip+0x30c37]        # 447226 <strcmp@plt+0x43a9e>
  4165ef:	mov    edi,0x5
  4165f4:	xor    eax,eax
  4165f6:	call   42e800 <strcmp@plt+0x2b078>
  4165fb:	mov    rdi,QWORD PTR [rbx+0x28]
  4165ff:	mov    rbp,QWORD PTR [r12+0x28]
  416604:	test   rdi,rdi
  416607:	je     41660e <strcmp@plt+0x12e86>
  416609:	call   42c250 <strcmp@plt+0x28ac8>
  41660e:	mov    QWORD PTR [rbx+0x20],rbp
  416612:	mov    rdi,QWORD PTR [rbp+0x8]
  416616:	call   42a430 <strcmp@plt+0x26ca8>
  41661b:	mov    QWORD PTR [rbx+0x28],rax
  41661f:	mov    QWORD PTR [rbx+0x30],0x0
  416627:	mov    QWORD PTR [rbx+0x18],0x0
  41662f:	mov    DWORD PTR [rbx+0x38],0x0
  416636:	mov    QWORD PTR [rbx+0x10],0x1
  41663e:	lea    rax,[rip+0x59f63]        # 4705a8 <strcmp@plt+0x6ce20>
  416645:	mov    rdi,QWORD PTR [rax]
  416648:	mov    rsi,r13
  41664b:	call   4326e0 <strcmp@plt+0x2ef58>
  416650:	mov    rdi,r15
  416653:	call   4164d0 <strcmp@plt+0x12d48>
  416658:	jmp    41674f <strcmp@plt+0x12fc7>
  41665d:	xor    ebp,ebp
  41665f:	xor    eax,eax
  416661:	call   432860 <strcmp@plt+0x2f0d8>
  416666:	mov    QWORD PTR [rbp+0x4],rax
  41666a:	mov    rbp,rax
  41666d:	mov    r14,QWORD PTR [r14+0x10]
  416671:	mov    rdi,QWORD PTR [rbx]
  416674:	call   4230e0 <strcmp@plt+0x1f958>
  416679:	mov    rdi,rax
  41667c:	call   423740 <strcmp@plt+0x1ffb8>
  416681:	mov    r12,rax
  416684:	mov    esi,0x1
  416689:	mov    rdi,rax
  41668c:	call   4231a0 <strcmp@plt+0x1fa18>
  416691:	mov    esi,0x10f6
  416696:	mov    edx,0x10f6
  41669b:	mov    rdi,r13
  41669e:	mov    rcx,r14
  4166a1:	mov    r8,r12
  4166a4:	call   422020 <strcmp@plt+0x1e898>
  4166a9:	movzx  eax,WORD PTR [r13+0x1e]
  4166ae:	mov    rcx,QWORD PTR [r13+0x30]
  4166b2:	or     WORD PTR [rcx+rax*1],0x4
  4166b7:	mov    rax,QWORD PTR [rbx+0x30]
  4166bb:	mov    rdi,QWORD PTR [rax+0x10]
  4166bf:	call   4232e0 <strcmp@plt+0x1fb58>
  4166c4:	lea    rdi,[rsp+0x10]
  4166c9:	mov    esi,0x10f6
  4166ce:	mov    edx,0x10f6
  4166d3:	xor    ecx,ecx
  4166d5:	mov    r8,rax
  4166d8:	call   435600 <strcmp@plt+0x31e78>
  4166dd:	lea    rax,[rip+0x4e6cc]        # 464db0 <strcmp@plt+0x61628>
  4166e4:	cmp    DWORD PTR [rax],0x0
  4166e7:	jle    41670a <strcmp@plt+0x12f82>
  4166e9:	mov    rdi,r13
  4166ec:	call   422870 <strcmp@plt+0x1f0e8>
  4166f1:	mov    rcx,rax
  4166f4:	lea    rsi,[rip+0x30b4d]        # 447248 <strcmp@plt+0x43ac0>
  4166fb:	mov    edi,0x5
  416700:	xor    eax,eax
  416702:	mov    rdx,rcx
  416705:	call   42e800 <strcmp@plt+0x2b078>
  41670a:	lea    rdx,[rsp+0x10]
  41670f:	mov    rdi,QWORD PTR [rsp+0x8]
  416714:	mov    rsi,r13
  416717:	call   407ab0 <strcmp@plt+0x4328>
  41671c:	mov    rdi,r12
  41671f:	call   422fa0 <strcmp@plt+0x1f818>
  416724:	lea    rax,[rip+0x59e7d]        # 4705a8 <strcmp@plt+0x6ce20>
  41672b:	mov    rdi,QWORD PTR [rax]
  41672e:	mov    rsi,rbp
  416731:	mov    rdx,QWORD PTR [rsp]
  416735:	call   432280 <strcmp@plt+0x2eaf8>
  41673a:	mov    esi,0x2
  41673f:	mov    rdi,r15
  416742:	call   437460 <strcmp@plt+0x33cd8>
  416747:	mov    rdi,r13
  41674a:	call   42e010 <strcmp@plt+0x2a888>
  41674f:	mov    eax,0x1
  416754:	add    rsp,0x58
  416758:	pop    rbx
  416759:	pop    r12
  41675b:	pop    r13
  41675d:	pop    r14
  41675f:	pop    r15
  416761:	pop    rbp
  416762:	ret    
  416763:	add    DWORD PTR [rbx+0x38],0x1
  416767:	jmp    41652a <strcmp@plt+0x12da2>
  41676c:	lea    rax,[rip+0x4e63d]        # 464db0 <strcmp@plt+0x61628>
  416773:	cmp    DWORD PTR [rax],0x3
  416776:	jl     416588 <strcmp@plt+0x12e00>
  41677c:	mov    rdi,QWORD PTR [rbx]
  41677f:	call   423130 <strcmp@plt+0x1f9a8>
  416784:	mov    rcx,rax
  416787:	lea    rsi,[rip+0x30a6e]        # 4471fc <strcmp@plt+0x43a74>
  41678e:	mov    edi,0x7
  416793:	xor    eax,eax
  416795:	mov    rdx,rcx
  416798:	call   42e800 <strcmp@plt+0x2b078>
  41679d:	jmp    416588 <strcmp@plt+0x12e00>
  4167a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4167ac:	nop    DWORD PTR [rax+0x0]
  4167b0:	mov    edi,0x30
  4167b5:	jmp    432070 <strcmp@plt+0x2e8e8>
  4167ba:	nop    WORD PTR [rax+rax*1+0x0]
  4167c0:	lea    rax,[rip+0x4df51]        # 464718 <strcmp@plt+0x60f90>
  4167c7:	ret    
  4167c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4167d0:	push   r14
  4167d2:	push   rbx
  4167d3:	push   rax
  4167d4:	mov    rbx,rdi
  4167d7:	lea    r14,[rip+0x59d22]        # 470500 <strcmp@plt+0x6cd78>
  4167de:	cmp    DWORD PTR [r14],0xa
  4167e2:	je     41680f <strcmp@plt+0x13087>
  4167e4:	mov    edi,0x2
  4167e9:	call   434f80 <strcmp@plt+0x317f8>
  4167ee:	lea    rcx,[rip+0x59d23]        # 470518 <strcmp@plt+0x6cd90>
  4167f5:	mov    rdi,QWORD PTR [rcx]
  4167f8:	lea    rsi,[rip+0xc1]        # 4168c0 <strcmp@plt+0x13138>
  4167ff:	mov    rdx,rbx
  416802:	mov    ecx,eax
  416804:	call   434d30 <strcmp@plt+0x315a8>
  416809:	cmp    DWORD PTR [r14],0x2
  41680d:	je     416834 <strcmp@plt+0x130ac>
  41680f:	mov    edi,0xa
  416814:	call   434f80 <strcmp@plt+0x317f8>
  416819:	lea    rcx,[rip+0x59cf8]        # 470518 <strcmp@plt+0x6cd90>
  416820:	mov    rdi,QWORD PTR [rcx]
  416823:	lea    rsi,[rip+0x96]        # 4168c0 <strcmp@plt+0x13138>
  41682a:	mov    rdx,rbx
  41682d:	mov    ecx,eax
  41682f:	call   434d30 <strcmp@plt+0x315a8>
  416834:	mov    edi,0x10
  416839:	call   4320b0 <strcmp@plt+0x2e928>
  41683e:	mov    rcx,QWORD PTR [rbx+0x28]
  416842:	mov    QWORD PTR [rcx+0x50],rax
  416846:	mov    rdi,rax
  416849:	call   416d90 <strcmp@plt+0x13608>
  41684e:	mov    eax,0x1
  416853:	add    rsp,0x8
  416857:	pop    rbx
  416858:	pop    r14
  41685a:	ret    
  41685b:	nop    DWORD PTR [rax+rax*1+0x0]
  416860:	mov    rax,QWORD PTR [rdi+0x28]
  416864:	mov    rdi,QWORD PTR [rax+0x50]
  416868:	jmp    403780 <free@plt>
  41686d:	nop    DWORD PTR [rax]
  416870:	push   rax
  416871:	lea    rax,[rip+0x4dea0]        # 464718 <strcmp@plt+0x60f90>
  416878:	mov    rdi,QWORD PTR [rax+0x50]
  41687c:	cmp    edx,0xa
  41687f:	je     416893 <strcmp@plt+0x1310b>
  416881:	cmp    edx,0x2
  416884:	jne    4168a4 <strcmp@plt+0x1311c>
  416886:	test   rdi,rdi
  416889:	je     4168a4 <strcmp@plt+0x1311c>
  41688b:	cmp    QWORD PTR [rdi],0x0
  41688f:	jne    4168a4 <strcmp@plt+0x1311c>
  416891:	jmp    41689f <strcmp@plt+0x13117>
  416893:	test   rdi,rdi
  416896:	je     4168a4 <strcmp@plt+0x1311c>
  416898:	cmp    QWORD PTR [rdi+0x8],0x0
  41689d:	jne    4168a4 <strcmp@plt+0x1311c>
  41689f:	call   416d90 <strcmp@plt+0x13608>
  4168a4:	mov    eax,0x1
  4168a9:	pop    rcx
  4168aa:	ret    
  4168ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4168b0:	mov    eax,0x1
  4168b5:	ret    
  4168b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4168c0:	push   r15
  4168c2:	push   r14
  4168c4:	push   r13
  4168c6:	push   r12
  4168c8:	push   rbx
  4168c9:	sub    rsp,0x50
  4168cd:	mov    rbx,rdi
  4168d0:	mov    rax,QWORD PTR [rdi+0x10]
  4168d4:	mov    rax,QWORD PTR [rax]
  4168d7:	cmp    DWORD PTR [rax+0x18],0x0
  4168db:	je     4168e7 <strcmp@plt+0x1315f>
  4168dd:	mov    rax,QWORD PTR [rax+0x8]
  4168e1:	mov    r14,QWORD PTR [rax+0x10]
  4168e5:	jmp    4168ea <strcmp@plt+0x13162>
  4168e7:	xor    r14d,r14d
  4168ea:	mov    WORD PTR [rsp+0x48],0x10f6
  4168f1:	xor    eax,eax
  4168f3:	call   422180 <strcmp@plt+0x1e9f8>
  4168f8:	mov    r15,rax
  4168fb:	mov    edi,DWORD PTR [rbx+0x18]
  4168fe:	lea    rdx,[rsp+0x8]
  416903:	mov    rsi,rax
  416906:	call   4351d0 <strcmp@plt+0x31a48>
  41690b:	cmp    eax,0x1
  41690e:	jne    416943 <strcmp@plt+0x131bb>
  416910:	cmp    DWORD PTR [r15+0x14],0x3
  416915:	ja     416971 <strcmp@plt+0x131e9>
  416917:	lea    rax,[rip+0x4e492]        # 464db0 <strcmp@plt+0x61628>
  41691e:	xor    ebx,ebx
  416920:	cmp    DWORD PTR [rax],0x3
  416923:	jl     4169f6 <strcmp@plt+0x1326e>
  416929:	lea    rsi,[rip+0x30bbe]        # 4474ee <strcmp@plt+0x43d66>
  416930:	xor    ebx,ebx
  416932:	mov    edi,0x7
  416937:	xor    eax,eax
  416939:	call   42e800 <strcmp@plt+0x2b078>
  41693e:	jmp    4169f6 <strcmp@plt+0x1326e>
  416943:	lea    rax,[rip+0x4e466]        # 464db0 <strcmp@plt+0x61628>
  41694a:	cmp    DWORD PTR [rax],0x0
  41694d:	jle    416962 <strcmp@plt+0x131da>
  41694f:	lea    rsi,[rip+0x30b4c]        # 4474a2 <strcmp@plt+0x43d1a>
  416956:	mov    edi,0x5
  41695b:	xor    eax,eax
  41695d:	call   42e800 <strcmp@plt+0x2b078>
  416962:	mov    rdi,r15
  416965:	call   42e010 <strcmp@plt+0x2a888>
  41696a:	xor    ebx,ebx
  41696c:	jmp    4169f6 <strcmp@plt+0x1326e>
  416971:	mov    eax,DWORD PTR [r15+0x38]
  416975:	sub    eax,DWORD PTR [r15+0x30]
  416979:	mov    WORD PTR [r15+0x24],ax
  41697e:	lea    rax,[rip+0x4e42b]        # 464db0 <strcmp@plt+0x61628>
  416985:	cmp    DWORD PTR [rax],0x0
  416988:	jle    4169d9 <strcmp@plt+0x13251>
  41698a:	mov    rdi,r15
  41698d:	call   422870 <strcmp@plt+0x1f0e8>
  416992:	mov    r12,rax
  416995:	lea    rdi,[rsp+0x28]
  41699a:	call   423130 <strcmp@plt+0x1f9a8>
  41699f:	mov    r13,rax
  4169a2:	lea    rdi,[rsp+0x8]
  4169a7:	call   423130 <strcmp@plt+0x1f9a8>
  4169ac:	mov    rbx,rax
  4169af:	movzx  r9d,WORD PTR [rsp+0x4a]
  4169b5:	movzx  eax,WORD PTR [rsp+0x48]
  4169ba:	mov    DWORD PTR [rsp],eax
  4169bd:	lea    rsi,[rip+0x30b6e]        # 447532 <strcmp@plt+0x43daa>
  4169c4:	mov    edi,0x5
  4169c9:	xor    eax,eax
  4169cb:	mov    rdx,r12
  4169ce:	mov    rcx,r13
  4169d1:	mov    r8,rbx
  4169d4:	call   42e800 <strcmp@plt+0x2b078>
  4169d9:	lea    rdx,[rsp+0x8]
  4169de:	mov    rdi,r14
  4169e1:	mov    rsi,r15
  4169e4:	call   4079f0 <strcmp@plt+0x4268>
  4169e9:	mov    rdi,r15
  4169ec:	call   42e010 <strcmp@plt+0x2a888>
  4169f1:	mov    ebx,0x1
  4169f6:	mov    eax,ebx
  4169f8:	add    rsp,0x50
  4169fc:	pop    rbx
  4169fd:	pop    r12
  4169ff:	pop    r13
  416a01:	pop    r14
  416a03:	pop    r15
  416a05:	ret    
  416a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416a10:	push   rbp
  416a11:	push   r15
  416a13:	push   r14
  416a15:	push   r13
  416a17:	push   r12
  416a19:	push   rbx
  416a1a:	push   rax
  416a1b:	lea    r14,[rdx+0x20]
  416a1f:	cmp    DWORD PTR [rdx+0x38],0x1
  416a23:	jne    416b24 <strcmp@plt+0x1339c>
  416a29:	mov    rbx,rdx
  416a2c:	mov    r15,rsi
  416a2f:	mov    rbp,rdi
  416a32:	cmp    DWORD PTR [rdx+0x18],0x1
  416a36:	je     416a67 <strcmp@plt+0x132df>
  416a38:	lea    rax,[rip+0x590c9]        # 46fb08 <strcmp@plt+0x6c380>
  416a3f:	mov    rax,QWORD PTR [rax]
  416a42:	mov    rdi,r14
  416a45:	call   QWORD PTR [rax+0x20]
  416a48:	test   rax,rax
  416a4b:	je     416b97 <strcmp@plt+0x1340f>
  416a51:	mov    r12,rax
  416a54:	mov    rdi,rbx
  416a57:	mov    rsi,rax
  416a5a:	call   423560 <strcmp@plt+0x1fdd8>
  416a5f:	mov    rdi,r12
  416a62:	call   422fa0 <strcmp@plt+0x1f818>
  416a67:	mov    rax,QWORD PTR [rbp+0x28]
  416a6b:	mov    rdi,QWORD PTR [rax+0x50]
  416a6f:	mov    rsi,rbx
  416a72:	call   416e50 <strcmp@plt+0x136c8>
  416a77:	xor    r12d,r12d
  416a7a:	cmp    eax,0xfffffff7
  416a7d:	je     416bf3 <strcmp@plt+0x1346b>
  416a83:	mov    ebp,eax
  416a85:	mov    rdi,rbx
  416a88:	call   423d30 <strcmp@plt+0x205a8>
  416a8d:	mov    r13d,eax
  416a90:	mov    rdi,r14
  416a93:	call   423d30 <strcmp@plt+0x205a8>
  416a98:	cmp    r13d,eax
  416a9b:	jne    416b60 <strcmp@plt+0x133d8>
  416aa1:	movzx  esi,WORD PTR [rbx+0x40]
  416aa5:	movzx  edx,WORD PTR [rbx+0x42]
  416aa9:	mov    rdi,r15
  416aac:	mov    rcx,rbx
  416aaf:	mov    r8,r14
  416ab2:	call   433080 <strcmp@plt+0x2f8f8>
  416ab7:	mov    rsi,QWORD PTR [r15+0x38]
  416abb:	mov    edx,DWORD PTR [r15+0x14]
  416abf:	mov    edi,ebp
  416ac1:	mov    rcx,r14
  416ac4:	call   435e90 <strcmp@plt+0x32708>
  416ac9:	lea    rcx,[rip+0x4e2e0]        # 464db0 <strcmp@plt+0x61628>
  416ad0:	mov    ecx,DWORD PTR [rcx]
  416ad2:	cmp    eax,0x1
  416ad5:	jne    416bc0 <strcmp@plt+0x13438>
  416adb:	mov    r12d,0x1
  416ae1:	test   ecx,ecx
  416ae3:	jle    416bf3 <strcmp@plt+0x1346b>
  416ae9:	mov    rdi,rbx
  416aec:	call   423130 <strcmp@plt+0x1f9a8>
  416af1:	mov    rbp,rax
  416af4:	mov    rdi,r14
  416af7:	call   423130 <strcmp@plt+0x1f9a8>
  416afc:	mov    rcx,rax
  416aff:	movzx  r8d,WORD PTR [rbx+0x40]
  416b04:	movzx  r9d,WORD PTR [rbx+0x42]
  416b09:	lea    rsi,[rip+0x30b71]        # 447681 <strcmp@plt+0x43ef9>
  416b10:	mov    edi,0x5
  416b15:	xor    eax,eax
  416b17:	mov    rdx,rbp
  416b1a:	call   42e800 <strcmp@plt+0x2b078>
  416b1f:	jmp    416bf3 <strcmp@plt+0x1346b>
  416b24:	lea    rax,[rip+0x4e285]        # 464db0 <strcmp@plt+0x61628>
  416b2b:	xor    r12d,r12d
  416b2e:	cmp    DWORD PTR [rax],0x2
  416b31:	jl     416bf3 <strcmp@plt+0x1346b>
  416b37:	mov    rdi,r14
  416b3a:	call   423130 <strcmp@plt+0x1f9a8>
  416b3f:	mov    rcx,rax
  416b42:	lea    rsi,[rip+0x30a12]        # 44755b <strcmp@plt+0x43dd3>
  416b49:	xor    r12d,r12d
  416b4c:	mov    edi,0x6
  416b51:	xor    eax,eax
  416b53:	mov    rdx,rcx
  416b56:	call   42e800 <strcmp@plt+0x2b078>
  416b5b:	jmp    416bf3 <strcmp@plt+0x1346b>
  416b60:	lea    rax,[rip+0x4e249]        # 464db0 <strcmp@plt+0x61628>
  416b67:	cmp    DWORD PTR [rax],0x2
  416b6a:	jl     416bf3 <strcmp@plt+0x1346b>
  416b70:	mov    rdi,rbx
  416b73:	call   423f30 <strcmp@plt+0x207a8>
  416b78:	mov    rbx,rax
  416b7b:	mov    rdi,r14
  416b7e:	call   423f30 <strcmp@plt+0x207a8>
  416b83:	mov    rcx,rax
  416b86:	lea    rsi,[rip+0x30a62]        # 4475ef <strcmp@plt+0x43e67>
  416b8d:	xor    r12d,r12d
  416b90:	mov    edi,0x6
  416b95:	jmp    416be9 <strcmp@plt+0x13461>
  416b97:	mov    rdi,r14
  416b9a:	call   423130 <strcmp@plt+0x1f9a8>
  416b9f:	mov    rcx,rax
  416ba2:	lea    rsi,[rip+0x30a0d]        # 4475b6 <strcmp@plt+0x43e2e>
  416ba9:	mov    edi,0x2
  416bae:	xor    eax,eax
  416bb0:	mov    rdx,rcx
  416bb3:	call   42e800 <strcmp@plt+0x2b078>
  416bb8:	mov    r12d,0xfffffff7
  416bbe:	jmp    416bf3 <strcmp@plt+0x1346b>
  416bc0:	test   ecx,ecx
  416bc2:	jle    416bf3 <strcmp@plt+0x1346b>
  416bc4:	mov    rdi,rbx
  416bc7:	call   423130 <strcmp@plt+0x1f9a8>
  416bcc:	mov    rbx,rax
  416bcf:	mov    rdi,r14
  416bd2:	call   423130 <strcmp@plt+0x1f9a8>
  416bd7:	mov    rcx,rax
  416bda:	lea    rsi,[rip+0x30a6e]        # 44764f <strcmp@plt+0x43ec7>
  416be1:	xor    r12d,r12d
  416be4:	mov    edi,0x5
  416be9:	xor    eax,eax
  416beb:	mov    rdx,rbx
  416bee:	call   42e800 <strcmp@plt+0x2b078>
  416bf3:	mov    eax,r12d
  416bf6:	add    rsp,0x8
  416bfa:	pop    rbx
  416bfb:	pop    r12
  416bfd:	pop    r13
  416bff:	pop    r14
  416c01:	pop    r15
  416c03:	pop    rbp
  416c04:	ret    
  416c05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416c0f:	nop
  416c10:	push   rbx
  416c11:	mov    rax,QWORD PTR [rdi+0x28]
  416c15:	mov    rax,QWORD PTR [rax+0x50]
  416c19:	cmp    esi,0xa
  416c1c:	je     416c33 <strcmp@plt+0x134ab>
  416c1e:	mov    ecx,esi
  416c20:	cmp    esi,0x2
  416c23:	jne    416c42 <strcmp@plt+0x134ba>
  416c25:	mov    rax,QWORD PTR [rax]
  416c28:	test   rax,rax
  416c2b:	je     416c4e <strcmp@plt+0x134c6>
  416c2d:	mov    rbx,QWORD PTR [rax+0x10]
  416c31:	jmp    416c69 <strcmp@plt+0x134e1>
  416c33:	mov    rax,QWORD PTR [rax+0x8]
  416c37:	test   rax,rax
  416c3a:	je     416c4e <strcmp@plt+0x134c6>
  416c3c:	mov    rbx,QWORD PTR [rax+0x18]
  416c40:	jmp    416c69 <strcmp@plt+0x134e1>
  416c42:	lea    rax,[rip+0x4e167]        # 464db0 <strcmp@plt+0x61628>
  416c49:	cmp    DWORD PTR [rax],0x2
  416c4c:	jge    416c52 <strcmp@plt+0x134ca>
  416c4e:	xor    ebx,ebx
  416c50:	jmp    416c69 <strcmp@plt+0x134e1>
  416c52:	lea    rsi,[rip+0x30b9d]        # 4477f6 <strcmp@plt+0x4406e>
  416c59:	xor    ebx,ebx
  416c5b:	mov    edi,0x6
  416c60:	xor    eax,eax
  416c62:	mov    edx,ecx
  416c64:	call   42e800 <strcmp@plt+0x2b078>
  416c69:	mov    rax,rbx
  416c6c:	pop    rbx
  416c6d:	ret    
  416c6e:	xchg   ax,ax
  416c70:	mov    eax,0x1
  416c75:	ret    
  416c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416c80:	push   r14
  416c82:	push   rbx
  416c83:	push   rax
  416c84:	mov    rbx,rsi
  416c87:	mov    rax,QWORD PTR [rdi+0x28]
  416c8b:	mov    r14,QWORD PTR [rax+0x50]
  416c8f:	cmp    DWORD PTR [rcx+0x18],0x0
  416c93:	je     416cd6 <strcmp@plt+0x1354e>
  416c95:	cmp    BYTE PTR [rbx+0xc],0x1
  416c99:	jne    416d16 <strcmp@plt+0x1358e>
  416c9b:	mov    rdi,rcx
  416c9e:	call   423200 <strcmp@plt+0x1fa78>
  416ca3:	movzx  eax,ax
  416ca6:	cmp    eax,0x2
  416ca9:	jne    416cb3 <strcmp@plt+0x1352b>
  416cab:	mov    rcx,QWORD PTR [r14]
  416cae:	test   rcx,rcx
  416cb1:	je     416cc1 <strcmp@plt+0x13539>
  416cb3:	cmp    eax,0xa
  416cb6:	jne    416d16 <strcmp@plt+0x1358e>
  416cb8:	mov    rax,QWORD PTR [r14+0x8]
  416cbc:	test   rax,rax
  416cbf:	jne    416d16 <strcmp@plt+0x1358e>
  416cc1:	lea    rax,[rip+0x4e0e8]        # 464db0 <strcmp@plt+0x61628>
  416cc8:	cmp    DWORD PTR [rax],0x2
  416ccb:	jl     416d0e <strcmp@plt+0x13586>
  416ccd:	lea    rsi,[rip+0x30a2e]        # 447702 <strcmp@plt+0x43f7a>
  416cd4:	jmp    416d02 <strcmp@plt+0x1357a>
  416cd6:	mov    rdi,rdx
  416cd9:	call   423200 <strcmp@plt+0x1fa78>
  416cde:	movzx  eax,ax
  416ce1:	xor    ecx,ecx
  416ce3:	cmp    eax,0x2
  416ce6:	setne  cl
  416ce9:	cmp    QWORD PTR [r14+rcx*8],rbx
  416ced:	jne    416d16 <strcmp@plt+0x1358e>
  416cef:	lea    rax,[rip+0x4e0ba]        # 464db0 <strcmp@plt+0x61628>
  416cf6:	cmp    DWORD PTR [rax],0x2
  416cf9:	jl     416d0e <strcmp@plt+0x13586>
  416cfb:	lea    rsi,[rip+0x309af]        # 4476b1 <strcmp@plt+0x43f29>
  416d02:	mov    edi,0x6
  416d07:	xor    eax,eax
  416d09:	call   42e800 <strcmp@plt+0x2b078>
  416d0e:	mov    rdi,r14
  416d11:	call   416d90 <strcmp@plt+0x13608>
  416d16:	mov    eax,0x1
  416d1b:	add    rsp,0x8
  416d1f:	pop    rbx
  416d20:	pop    r14
  416d22:	ret    
  416d23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416d2d:	nop    DWORD PTR [rax]
  416d30:	push   rbx
  416d31:	mov    rax,QWORD PTR [rdi+0x28]
  416d35:	mov    rbx,QWORD PTR [rax+0x50]
  416d39:	mov    rax,QWORD PTR [rbx]
  416d3c:	cmp    rax,rsi
  416d3f:	je     416d54 <strcmp@plt+0x135cc>
  416d41:	mov    rcx,QWORD PTR [rbx+0x8]
  416d45:	test   rcx,rcx
  416d48:	je     416d54 <strcmp@plt+0x135cc>
  416d4a:	test   rax,rax
  416d4d:	je     416d54 <strcmp@plt+0x135cc>
  416d4f:	cmp    rcx,rsi
  416d52:	jne    416d7b <strcmp@plt+0x135f3>
  416d54:	lea    rax,[rip+0x4e055]        # 464db0 <strcmp@plt+0x61628>
  416d5b:	cmp    DWORD PTR [rax],0x2
  416d5e:	jl     416d73 <strcmp@plt+0x135eb>
  416d60:	lea    rsi,[rip+0x309db]        # 447742 <strcmp@plt+0x43fba>
  416d67:	mov    edi,0x6
  416d6c:	xor    eax,eax
  416d6e:	call   42e800 <strcmp@plt+0x2b078>
  416d73:	mov    rdi,rbx
  416d76:	call   416d90 <strcmp@plt+0x13608>
  416d7b:	mov    eax,0x1
  416d80:	pop    rbx
  416d81:	ret    
  416d82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416d8c:	nop    DWORD PTR [rax+0x0]
  416d90:	push   r15
  416d92:	push   r14
  416d94:	push   rbx
  416d95:	mov    rbx,rdi
  416d98:	mov    edi,0x2
  416d9d:	call   43b1c0 <strcmp@plt+0x37a38>
  416da2:	mov    QWORD PTR [rbx],rax
  416da5:	lea    r15,[rip+0x4e004]        # 464db0 <strcmp@plt+0x61628>
  416dac:	test   rax,rax
  416daf:	je     416ddc <strcmp@plt+0x13654>
  416db1:	cmp    DWORD PTR [r15],0x2
  416db5:	jl     416ddc <strcmp@plt+0x13654>
  416db7:	mov    r14,QWORD PTR [rax]
  416dba:	mov    rdi,QWORD PTR [rax+0x10]
  416dbe:	call   423130 <strcmp@plt+0x1f9a8>
  416dc3:	mov    rcx,rax
  416dc6:	lea    rsi,[rip+0x309b7]        # 447784 <strcmp@plt+0x43ffc>
  416dcd:	mov    edi,0x6
  416dd2:	xor    eax,eax
  416dd4:	mov    rdx,r14
  416dd7:	call   42e800 <strcmp@plt+0x2b078>
  416ddc:	mov    edi,0xa
  416de1:	call   43b1c0 <strcmp@plt+0x37a38>
  416de6:	mov    QWORD PTR [rbx+0x8],rax
  416dea:	test   rax,rax
  416ded:	je     416e1a <strcmp@plt+0x13692>
  416def:	cmp    DWORD PTR [r15],0x2
  416df3:	jl     416e1a <strcmp@plt+0x13692>
  416df5:	mov    r14,QWORD PTR [rax]
  416df8:	mov    rdi,QWORD PTR [rax+0x18]
  416dfc:	call   423130 <strcmp@plt+0x1f9a8>
  416e01:	mov    rcx,rax
  416e04:	lea    rsi,[rip+0x3099c]        # 4477a7 <strcmp@plt+0x4401f>
  416e0b:	mov    edi,0x6
  416e10:	xor    eax,eax
  416e12:	mov    rdx,r14
  416e15:	call   42e800 <strcmp@plt+0x2b078>
  416e1a:	cmp    QWORD PTR [rbx],0x0
  416e1e:	jne    416e27 <strcmp@plt+0x1369f>
  416e20:	cmp    QWORD PTR [rbx+0x8],0x0
  416e25:	je     416e2d <strcmp@plt+0x136a5>
  416e27:	pop    rbx
  416e28:	pop    r14
  416e2a:	pop    r15
  416e2c:	ret    
  416e2d:	lea    rsi,[rip+0x30996]        # 4477ca <strcmp@plt+0x44042>
  416e34:	mov    edi,0x2
  416e39:	xor    eax,eax
  416e3b:	pop    rbx
  416e3c:	pop    r14
  416e3e:	pop    r15
  416e40:	jmp    42e800 <strcmp@plt+0x2b078>
  416e45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416e4f:	nop
  416e50:	push   rbp
  416e51:	push   r15
  416e53:	push   r14
  416e55:	push   r12
  416e57:	push   rbx
  416e58:	mov    rbx,rsi
  416e5b:	mov    r14,rdi
  416e5e:	lea    rdi,[rsi+0x20]
  416e62:	call   423200 <strcmp@plt+0x1fa78>
  416e67:	mov    ebp,eax
  416e69:	movzx  r15d,ax
  416e6d:	cmp    DWORD PTR [rbx+0x18],0x0
  416e71:	je     416eab <strcmp@plt+0x13723>
  416e73:	mov    rdi,rbx
  416e76:	call   43af10 <strcmp@plt+0x37788>
  416e7b:	test   rax,rax
  416e7e:	je     416ecf <strcmp@plt+0x13747>
  416e80:	mov    rdi,rax
  416e83:	mov    esi,r15d
  416e86:	call   43b290 <strcmp@plt+0x37b08>
  416e8b:	test   eax,eax
  416e8d:	jns    41701e <strcmp@plt+0x13896>
  416e93:	lea    rsi,[rip+0x30aa3]        # 44793d <strcmp@plt+0x441b5>
  416e9a:	mov    edi,0x2
  416e9f:	xor    eax,eax
  416ea1:	call   42e800 <strcmp@plt+0x2b078>
  416ea6:	jmp    417019 <strcmp@plt+0x13891>
  416eab:	cmp    r15d,0xa
  416eaf:	je     416f26 <strcmp@plt+0x1379e>
  416eb1:	movzx  eax,bp
  416eb4:	cmp    eax,0x2
  416eb7:	jne    416f48 <strcmp@plt+0x137c0>
  416ebd:	mov    rax,QWORD PTR [r14]
  416ec0:	test   rax,rax
  416ec3:	je     416f6a <strcmp@plt+0x137e2>
  416ec9:	add    rax,0x10
  416ecd:	jmp    416f33 <strcmp@plt+0x137ab>
  416ecf:	lea    r12,[rip+0x4deda]        # 464db0 <strcmp@plt+0x61628>
  416ed6:	cmp    DWORD PTR [r12],0x2
  416edb:	jl     416efe <strcmp@plt+0x13776>
  416edd:	mov    rdi,rbx
  416ee0:	call   423130 <strcmp@plt+0x1f9a8>
  416ee5:	mov    rcx,rax
  416ee8:	lea    rsi,[rip+0x30994]        # 447883 <strcmp@plt+0x440fb>
  416eef:	mov    edi,0x6
  416ef4:	xor    eax,eax
  416ef6:	mov    rdx,rcx
  416ef9:	call   42e800 <strcmp@plt+0x2b078>
  416efe:	cmp    r15d,0xa
  416f02:	je     416f8c <strcmp@plt+0x13804>
  416f08:	movzx  eax,bp
  416f0b:	cmp    eax,0x2
  416f0e:	jne    416fd3 <strcmp@plt+0x1384b>
  416f14:	mov    rax,QWORD PTR [r14]
  416f17:	test   rax,rax
  416f1a:	je     416ff0 <strcmp@plt+0x13868>
  416f20:	add    rax,0x10
  416f24:	jmp    416f99 <strcmp@plt+0x13811>
  416f26:	mov    rax,QWORD PTR [r14+0x8]
  416f2a:	test   rax,rax
  416f2d:	je     416f6a <strcmp@plt+0x137e2>
  416f2f:	add    rax,0x18
  416f33:	mov    rsi,QWORD PTR [rax]
  416f36:	test   rsi,rsi
  416f39:	je     416f6a <strcmp@plt+0x137e2>
  416f3b:	mov    rdi,rbx
  416f3e:	call   423560 <strcmp@plt+0x1fdd8>
  416f43:	jmp    416e73 <strcmp@plt+0x136eb>
  416f48:	lea    rax,[rip+0x4de61]        # 464db0 <strcmp@plt+0x61628>
  416f4f:	cmp    DWORD PTR [rax],0x2
  416f52:	jl     416f6a <strcmp@plt+0x137e2>
  416f54:	lea    rsi,[rip+0x3089b]        # 4477f6 <strcmp@plt+0x4406e>
  416f5b:	mov    edi,0x6
  416f60:	xor    eax,eax
  416f62:	mov    edx,r15d
  416f65:	call   42e800 <strcmp@plt+0x2b078>
  416f6a:	cmp    r15d,0x2
  416f6e:	lea    rax,[rip+0x2c9ce]        # 443943 <strcmp@plt+0x401bb>
  416f75:	lea    rdx,[rip+0x2c9cc]        # 443948 <strcmp@plt+0x401c0>
  416f7c:	cmove  rdx,rax
  416f80:	lea    rsi,[rip+0x308ac]        # 447833 <strcmp@plt+0x440ab>
  416f87:	jmp    41700d <strcmp@plt+0x13885>
  416f8c:	mov    rax,QWORD PTR [r14+0x8]
  416f90:	test   rax,rax
  416f93:	je     416ff0 <strcmp@plt+0x13868>
  416f95:	add    rax,0x18
  416f99:	mov    rsi,QWORD PTR [rax]
  416f9c:	test   rsi,rsi
  416f9f:	je     416ff0 <strcmp@plt+0x13868>
  416fa1:	mov    rdi,rbx
  416fa4:	call   423560 <strcmp@plt+0x1fdd8>
  416fa9:	cmp    r15d,0xa
  416fad:	je     417027 <strcmp@plt+0x1389f>
  416faf:	movzx  eax,bp
  416fb2:	cmp    eax,0x2
  416fb5:	jne    416e93 <strcmp@plt+0x1370b>
  416fbb:	mov    rax,QWORD PTR [r14]
  416fbe:	test   rax,rax
  416fc1:	je     416e93 <strcmp@plt+0x1370b>
  416fc7:	mov    eax,DWORD PTR [rax+0x30]
  416fca:	test   eax,eax
  416fcc:	jns    41701e <strcmp@plt+0x13896>
  416fce:	jmp    416e93 <strcmp@plt+0x1370b>
  416fd3:	cmp    DWORD PTR [r12],0x2
  416fd8:	jl     416ff0 <strcmp@plt+0x13868>
  416fda:	lea    rsi,[rip+0x30815]        # 4477f6 <strcmp@plt+0x4406e>
  416fe1:	mov    edi,0x6
  416fe6:	xor    eax,eax
  416fe8:	mov    edx,r15d
  416feb:	call   42e800 <strcmp@plt+0x2b078>
  416ff0:	cmp    r15d,0x2
  416ff4:	lea    rax,[rip+0x2c948]        # 443943 <strcmp@plt+0x401bb>
  416ffb:	lea    rdx,[rip+0x2c946]        # 443948 <strcmp@plt+0x401c0>
  417002:	cmove  rdx,rax
  417006:	lea    rsi,[rip+0x308d8]        # 4478e5 <strcmp@plt+0x4415d>
  41700d:	mov    edi,0x2
  417012:	xor    eax,eax
  417014:	call   42e800 <strcmp@plt+0x2b078>
  417019:	mov    eax,0xfffffff7
  41701e:	pop    rbx
  41701f:	pop    r12
  417021:	pop    r14
  417023:	pop    r15
  417025:	pop    rbp
  417026:	ret    
  417027:	mov    rax,QWORD PTR [r14+0x8]
  41702b:	test   rax,rax
  41702e:	je     416e93 <strcmp@plt+0x1370b>
  417034:	mov    eax,DWORD PTR [rax+0x34]
  417037:	test   eax,eax
  417039:	jns    41701e <strcmp@plt+0x13896>
  41703b:	jmp    416e93 <strcmp@plt+0x1370b>
  417040:	push   rbx
  417041:	cmp    esi,0xa
  417044:	je     41705b <strcmp@plt+0x138d3>
  417046:	mov    ecx,esi
  417048:	cmp    esi,0x2
  41704b:	jne    41706a <strcmp@plt+0x138e2>
  41704d:	mov    rax,QWORD PTR [rdi]
  417050:	test   rax,rax
  417053:	je     417076 <strcmp@plt+0x138ee>
  417055:	mov    rbx,QWORD PTR [rax+0x10]
  417059:	jmp    417091 <strcmp@plt+0x13909>
  41705b:	mov    rax,QWORD PTR [rdi+0x8]
  41705f:	test   rax,rax
  417062:	je     417076 <strcmp@plt+0x138ee>
  417064:	mov    rbx,QWORD PTR [rax+0x18]
  417068:	jmp    417091 <strcmp@plt+0x13909>
  41706a:	lea    rax,[rip+0x4dd3f]        # 464db0 <strcmp@plt+0x61628>
  417071:	cmp    DWORD PTR [rax],0x2
  417074:	jge    41707a <strcmp@plt+0x138f2>
  417076:	xor    ebx,ebx
  417078:	jmp    417091 <strcmp@plt+0x13909>
  41707a:	lea    rsi,[rip+0x30775]        # 4477f6 <strcmp@plt+0x4406e>
  417081:	xor    ebx,ebx
  417083:	mov    edi,0x6
  417088:	xor    eax,eax
  41708a:	mov    edx,ecx
  41708c:	call   42e800 <strcmp@plt+0x2b078>
  417091:	mov    rax,rbx
  417094:	pop    rbx
  417095:	ret    
  417096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4170a0:	cmp    esi,0xa
  4170a3:	je     4170ae <strcmp@plt+0x13926>
  4170a5:	cmp    esi,0x2
  4170a8:	jne    4170b6 <strcmp@plt+0x1392e>
  4170aa:	mov    rax,QWORD PTR [rdi]
  4170ad:	ret    
  4170ae:	add    rdi,0x8
  4170b2:	mov    rax,QWORD PTR [rdi]
  4170b5:	ret    
  4170b6:	xor    eax,eax
  4170b8:	ret    
  4170b9:	nop    DWORD PTR [rax+0x0]
  4170c0:	cmp    esi,0xa
  4170c3:	je     4170db <strcmp@plt+0x13953>
  4170c5:	mov    eax,0xffffffff
  4170ca:	cmp    esi,0x2
  4170cd:	jne    4170e7 <strcmp@plt+0x1395f>
  4170cf:	mov    rax,QWORD PTR [rdi]
  4170d2:	test   rax,rax
  4170d5:	je     4170e8 <strcmp@plt+0x13960>
  4170d7:	mov    eax,DWORD PTR [rax+0x30]
  4170da:	ret    
  4170db:	mov    rax,QWORD PTR [rdi+0x8]
  4170df:	test   rax,rax
  4170e2:	je     4170ee <strcmp@plt+0x13966>
  4170e4:	mov    eax,DWORD PTR [rax+0x34]
  4170e7:	ret    
  4170e8:	mov    eax,0xfffffff7
  4170ed:	ret    
  4170ee:	mov    eax,0xfffffff7
  4170f3:	ret    
  4170f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4170fe:	xchg   ax,ax
  417100:	push   rax
  417101:	call   423200 <strcmp@plt+0x1fa78>
  417106:	movzx  eax,ax
  417109:	xor    ecx,ecx
  41710b:	cmp    eax,0x2
  41710e:	sete   cl
  417111:	mov    eax,0x2
  417116:	sub    eax,ecx
  417118:	pop    rcx
  417119:	ret    
  41711a:	nop    WORD PTR [rax+rax*1+0x0]
  417120:	push   rbp
  417121:	push   rbx
  417122:	push   rax
  417123:	mov    ebp,edx
  417125:	mov    rbx,rdi
  417128:	mov    QWORD PTR [rdi],0x8
  41712f:	lea    rdi,[rdi+0x4]
  417133:	call   434030 <strcmp@plt+0x308a8>
  417138:	or     BYTE PTR [rbx],0x4
  41713b:	mov    BYTE PTR [rbx+0x3],bpl
  41713f:	add    rsp,0x8
  417143:	pop    rbx
  417144:	pop    rbp
  417145:	ret    
  417146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417150:	push   rbp
  417151:	push   r14
  417153:	push   rbx
  417154:	mov    r14d,edx
  417157:	mov    ebp,esi
  417159:	mov    esi,0x8
  41715e:	call   42e320 <strcmp@plt+0x2ab98>
  417163:	mov    rbx,rax
  417166:	mov    QWORD PTR [rax],0x8
  41716d:	lea    rdi,[rax+0x4]
  417171:	mov    esi,ebp
  417173:	call   434030 <strcmp@plt+0x308a8>
  417178:	or     BYTE PTR [rbx],0x4
  41717b:	mov    BYTE PTR [rbx+0x3],r14b
  41717f:	mov    rax,rbx
  417182:	pop    rbx
  417183:	pop    r14
  417185:	pop    rbp
  417186:	ret    
  417187:	nop    WORD PTR [rax+rax*1+0x0]
  417190:	push   rbp
  417191:	push   r15
  417193:	push   r14
  417195:	push   r13
  417197:	push   r12
  417199:	push   rbx
  41719a:	sub    rsp,0x18
  41719e:	mov    DWORD PTR [rsp+0x14],r9d
  4171a3:	mov    r12,r8
  4171a6:	mov    r13,rcx
  4171a9:	mov    r15d,edx
  4171ac:	mov    ebp,esi
  4171ae:	mov    rbx,rdi
  4171b1:	mov    r14,QWORD PTR [rsp+0x50]
  4171b6:	mov    DWORD PTR [rsp+0x10],0x0
  4171be:	mov    DWORD PTR [rsp+0xc],0x0
  4171c6:	mov    rdi,QWORD PTR [rdi+0x38]
  4171ca:	lea    rsi,[rsp+0x10]
  4171cf:	lea    rdx,[rsp+0xc]
  4171d4:	call   433c00 <strcmp@plt+0x30478>
  4171d9:	mov    rdi,r14
  4171dc:	call   423200 <strcmp@plt+0x1fa78>
  4171e1:	movzx  eax,ax
  4171e4:	cmp    eax,0x2
  4171e7:	je     4171f7 <strcmp@plt+0x13a6f>
  4171e9:	cmp    eax,0xa
  4171ec:	jne    417254 <strcmp@plt+0x13acc>
  4171ee:	mov    DWORD PTR [rsp+0x8],ebp
  4171f2:	mov    r14b,0x2
  4171f5:	jmp    4171fe <strcmp@plt+0x13a76>
  4171f7:	mov    DWORD PTR [rsp+0x8],ebp
  4171fb:	mov    r14b,0x1
  4171fe:	mov    esi,0x8
  417203:	mov    rdi,rbx
  417206:	call   42e320 <strcmp@plt+0x2ab98>
  41720b:	mov    rbp,rax
  41720e:	mov    QWORD PTR [rax],0x8
  417215:	lea    rdi,[rax+0x4]
  417219:	mov    esi,DWORD PTR [rsp+0x14]
  41721d:	call   434030 <strcmp@plt+0x308a8>
  417222:	or     BYTE PTR [rbp+0x0],0x4
  417226:	mov    BYTE PTR [rbp+0x3],r14b
  41722a:	movzx  esi,WORD PTR [rsp+0x8]
  41722f:	movzx  edx,r15w
  417233:	mov    rdi,rbx
  417236:	mov    rcx,r13
  417239:	mov    r8,r12
  41723c:	call   433080 <strcmp@plt+0x2f8f8>
  417241:	movzx  edi,WORD PTR [rbx+0x1a]
  417245:	cmp    rdi,0xffff
  41724c:	je     417277 <strcmp@plt+0x13aef>
  41724e:	add    rdi,QWORD PTR [rbx+0x30]
  417252:	jmp    417279 <strcmp@plt+0x13af1>
  417254:	lea    rax,[rip+0x4db55]        # 464db0 <strcmp@plt+0x61628>
  41725b:	cmp    DWORD PTR [rax],0x0
  41725e:	jle    41729c <strcmp@plt+0x13b14>
  417260:	lea    rsi,[rip+0x306fc]        # 447963 <strcmp@plt+0x441db>
  417267:	xor    ebx,ebx
  417269:	mov    edi,0x5
  41726e:	xor    eax,eax
  417270:	call   42e800 <strcmp@plt+0x2b078>
  417275:	jmp    41728a <strcmp@plt+0x13b02>
  417277:	xor    edi,edi
  417279:	mov    esi,DWORD PTR [rsp+0x10]
  41727d:	mov    edx,DWORD PTR [rsp+0xc]
  417281:	call   433ba0 <strcmp@plt+0x30418>
  417286:	mov    rbx,QWORD PTR [rbx+0x38]
  41728a:	mov    rax,rbx
  41728d:	add    rsp,0x18
  417291:	pop    rbx
  417292:	pop    r12
  417294:	pop    r13
  417296:	pop    r14
  417298:	pop    r15
  41729a:	pop    rbp
  41729b:	ret    
  41729c:	xor    ebx,ebx
  41729e:	jmp    41728a <strcmp@plt+0x13b02>
  4172a0:	mov    ecx,DWORD PTR [rdi+0x14]
  4172a3:	cmp    ecx,0x8
  4172a6:	jae    4172ab <strcmp@plt+0x13b23>
  4172a8:	xor    eax,eax
  4172aa:	ret    
  4172ab:	mov    rax,QWORD PTR [rdi+0x38]
  4172af:	lea    rdx,[rax+0x8]
  4172b3:	mov    QWORD PTR [rdi+0x38],rdx
  4172b7:	add    ecx,0xfffffff8
  4172ba:	mov    DWORD PTR [rdi+0x14],ecx
  4172bd:	ret    
  4172be:	xchg   ax,ax
  4172c0:	add    rdi,0x4
  4172c4:	jmp    434050 <strcmp@plt+0x308c8>
  4172c9:	nop    DWORD PTR [rax+0x0]
  4172d0:	lea    rax,[rip+0x4d499]        # 464770 <strcmp@plt+0x60fe8>
  4172d7:	lea    rcx,[rip+0x5111a]        # 4683f8 <strcmp@plt+0x64c70>
  4172de:	mov    QWORD PTR [rcx],rax
  4172e1:	ret    
  4172e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4172ec:	nop    DWORD PTR [rax+0x0]
  4172f0:	push   rbx
  4172f1:	mov    rbx,rdi
  4172f4:	mov    edi,0x1
  4172f9:	mov    esi,0x28
  4172fe:	call   4032d0 <calloc@plt>
  417303:	mov    QWORD PTR [rbx],rax
  417306:	lea    rax,[rbx+0x8]
  41730a:	mov    QWORD PTR [rbx+0x8],rax
  41730e:	mov    QWORD PTR [rbx+0x10],rax
  417312:	pop    rbx
  417313:	ret    
  417314:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41731e:	xchg   ax,ax
  417320:	push   rbp
  417321:	push   r15
  417323:	push   r14
  417325:	push   r12
  417327:	push   rbx
  417328:	mov    r12,QWORD PTR [rdi]
  41732b:	cmp    DWORD PTR [r12],0x0
  417330:	je     417378 <strcmp@plt+0x13bf0>
  417332:	mov    r14,rdi
  417335:	xor    ebp,ebp
  417337:	mov    r15d,0x3
  41733d:	xor    ebx,ebx
  41733f:	nop
  417340:	mov    rax,QWORD PTR [r12+0x10]
  417345:	mov    ecx,ebx
  417347:	shr    ecx,0x4
  41734a:	mov    edx,ebp
  41734c:	and    dl,0x1e
  41734f:	shlx   edx,r15d,edx
  417354:	test   DWORD PTR [rax+rcx*4],edx
  417357:	jne    41736c <strcmp@plt+0x13be4>
  417359:	mov    rax,QWORD PTR [r12+0x20]
  41735e:	mov    ecx,ebx
  417360:	mov    rdi,QWORD PTR [rax+rcx*8]
  417364:	call   4201c0 <strcmp@plt+0x1ca38>
  417369:	mov    r12,QWORD PTR [r14]
  41736c:	add    ebx,0x1
  41736f:	add    ebp,0x2
  417372:	cmp    ebx,DWORD PTR [r12]
  417376:	jne    417340 <strcmp@plt+0x13bb8>
  417378:	test   r12,r12
  41737b:	je     4173ab <strcmp@plt+0x13c23>
  41737d:	mov    rdi,QWORD PTR [r12+0x18]
  417382:	call   403780 <free@plt>
  417387:	mov    rdi,QWORD PTR [r12+0x10]
  41738c:	call   403780 <free@plt>
  417391:	mov    rdi,QWORD PTR [r12+0x20]
  417396:	call   403780 <free@plt>
  41739b:	mov    rdi,r12
  41739e:	pop    rbx
  41739f:	pop    r12
  4173a1:	pop    r14
  4173a3:	pop    r15
  4173a5:	pop    rbp
  4173a6:	jmp    403780 <free@plt>
  4173ab:	pop    rbx
  4173ac:	pop    r12
  4173ae:	pop    r14
  4173b0:	pop    r15
  4173b2:	pop    rbp
  4173b3:	ret    
  4173b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4173be:	xchg   ax,ax
  4173c0:	push   rbx
  4173c1:	mov    edi,0x18
  4173c6:	call   432070 <strcmp@plt+0x2e8e8>
  4173cb:	mov    rbx,rax
  4173ce:	mov    edi,0x1
  4173d3:	mov    esi,0x28
  4173d8:	call   4032d0 <calloc@plt>
  4173dd:	mov    QWORD PTR [rbx],rax
  4173e0:	lea    rax,[rbx+0x8]
  4173e4:	mov    QWORD PTR [rbx+0x8],rax
  4173e8:	mov    QWORD PTR [rbx+0x10],rax
  4173ec:	mov    rax,rbx
  4173ef:	pop    rbx
  4173f0:	ret    
  4173f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4173fb:	nop    DWORD PTR [rax+rax*1+0x0]
  417400:	push   rbx
  417401:	mov    rbx,rdi
  417404:	call   417320 <strcmp@plt+0x13b98>
  417409:	mov    rdi,rbx
  41740c:	pop    rbx
  41740d:	jmp    403780 <free@plt>
  417412:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41741c:	nop    DWORD PTR [rax+0x0]
  417420:	push   rbp
  417421:	push   r15
  417423:	push   r14
  417425:	push   r13
  417427:	push   r12
  417429:	push   rbx
  41742a:	sub    rsp,0x38
  41742e:	mov    r12,QWORD PTR [rdi]
  417431:	mov    eax,DWORD PTR [r12+0x4]
  417436:	cmp    eax,0x2710
  41743b:	jb     417463 <strcmp@plt+0x13cdb>
  41743d:	lea    rax,[rip+0x4d96c]        # 464db0 <strcmp@plt+0x61628>
  417444:	cmp    DWORD PTR [rax],0x0
  417447:	jle    417489 <strcmp@plt+0x13d01>
  417449:	lea    rsi,[rip+0x30558]        # 4479a8 <strcmp@plt+0x44220>
  417450:	xor    ebx,ebx
  417452:	mov    edi,0x5
  417457:	xor    eax,eax
  417459:	call   42e800 <strcmp@plt+0x2b078>
  41745e:	jmp    41768c <strcmp@plt+0x13f04>
  417463:	mov    r15,rsi
  417466:	mov    r13,rdi
  417469:	mov    QWORD PTR [rsp+0x10],rdx
  41746e:	mov    ecx,DWORD PTR [r12+0x8]
  417473:	cmp    ecx,DWORD PTR [r12+0xc]
  417478:	jb     41749b <strcmp@plt+0x13d13>
  41747a:	mov    esi,DWORD PTR [r12]
  41747e:	add    eax,eax
  417480:	cmp    esi,eax
  417482:	jbe    417490 <strcmp@plt+0x13d08>
  417484:	add    esi,0xffffffff
  417487:	jmp    417493 <strcmp@plt+0x13d0b>
  417489:	xor    ebx,ebx
  41748b:	jmp    41768c <strcmp@plt+0x13f04>
  417490:	add    esi,0x1
  417493:	mov    rdi,r12
  417496:	call   4179a0 <strcmp@plt+0x14218>
  41749b:	mov    r14d,DWORD PTR [r12]
  41749f:	lea    ebp,[r14-0x1]
  4174a3:	mov    rdi,r15
  4174a6:	call   433650 <strcmp@plt+0x2fec8>
  4174ab:	mov    edi,ebp
  4174ad:	mov    ebp,eax
  4174af:	and    ebp,edi
  4174b1:	mov    rcx,QWORD PTR [r12+0x10]
  4174b6:	mov    ebx,ebp
  4174b8:	shr    ebx,0x4
  4174bb:	mov    edx,ebp
  4174bd:	add    dl,dl
  4174bf:	and    dl,0x1e
  4174c2:	mov    esi,0x2
  4174c7:	shlx   edx,esi,edx
  4174cc:	test   DWORD PTR [rcx+rbx*4],edx
  4174cf:	je     4174db <strcmp@plt+0x13d53>
  4174d1:	mov    rbx,QWORD PTR [rsp+0x10]
  4174d6:	jmp    4175dc <strcmp@plt+0x13e54>
  4174db:	mov    QWORD PTR [rsp+0x8],r12
  4174e0:	mov    QWORD PTR [rsp+0x18],r13
  4174e5:	mov    QWORD PTR [rsp+0x20],r15
  4174ea:	mov    edx,eax
  4174ec:	shr    edx,0x3
  4174ef:	shl    eax,0x3
  4174f2:	xor    eax,edx
  4174f4:	or     eax,0x1
  4174f7:	and    eax,edi
  4174f9:	mov    QWORD PTR [rsp+0x30],r14
  4174fe:	mov    r15d,r14d
  417501:	mov    r12d,ebp
  417504:	mov    DWORD PTR [rsp+0x2c],eax
  417508:	nop    DWORD PTR [rax+rax*1+0x0]
  417510:	mov    r13d,r12d
  417513:	shr    r13d,0x4
  417517:	mov    esi,DWORD PTR [rcx+r13*4]
  41751b:	lea    ebx,[r12+r12*1]
  41751f:	and    ebx,0x1e
  417522:	shrx   edx,esi,ebx
  417527:	test   dl,0x2
  41752a:	jne    41758a <strcmp@plt+0x13e02>
  41752c:	test   dl,0x1
  41752f:	jne    417566 <strcmp@plt+0x13dde>
  417531:	mov    r14d,edi
  417534:	mov    rax,QWORD PTR [rsp+0x8]
  417539:	mov    rax,QWORD PTR [rax+0x18]
  41753d:	mov    ecx,r12d
  417540:	mov    rdi,QWORD PTR [rax+rcx*8]
  417544:	mov    rsi,QWORD PTR [rsp+0x20]
  417549:	call   4337c0 <strcmp@plt+0x30038>
  41754e:	mov    rcx,QWORD PTR [rsp+0x8]
  417553:	mov    rcx,QWORD PTR [rcx+0x10]
  417557:	test   eax,eax
  417559:	jne    41758a <strcmp@plt+0x13e02>
  41755b:	mov    esi,DWORD PTR [rcx+r13*4]
  41755f:	mov    edi,r14d
  417562:	mov    eax,DWORD PTR [rsp+0x2c]
  417566:	bt     esi,ebx
  417569:	cmovb  r15d,r12d
  41756d:	add    r12d,eax
  417570:	and    r12d,edi
  417573:	cmp    r12d,ebp
  417576:	jne    417510 <strcmp@plt+0x13d88>
  417578:	mov    r12d,ebp
  41757b:	mov    edi,r15d
  41757e:	mov    r8,QWORD PTR [rsp+0x10]
  417583:	mov    r13,QWORD PTR [rsp+0x18]
  417588:	jmp    417599 <strcmp@plt+0x13e11>
  41758a:	mov    r8,QWORD PTR [rsp+0x10]
  41758f:	mov    r13,QWORD PTR [rsp+0x18]
  417594:	mov    rdi,QWORD PTR [rsp+0x30]
  417599:	mov    rax,QWORD PTR [rsp+0x8]
  41759e:	cmp    edi,DWORD PTR [rax]
  4175a0:	jne    4175cd <strcmp@plt+0x13e45>
  4175a2:	mov    eax,r12d
  4175a5:	shr    eax,0x4
  4175a8:	mov    edx,r12d
  4175ab:	add    dl,dl
  4175ad:	and    dl,0x1e
  4175b0:	mov    esi,0x2
  4175b5:	shlx   edx,esi,edx
  4175ba:	test   DWORD PTR [rcx+rax*4],edx
  4175bd:	mov    ebp,r15d
  4175c0:	cmove  ebp,r12d
  4175c4:	cmp    r15d,edi
  4175c7:	cmove  ebp,r12d
  4175cb:	jmp    4175cf <strcmp@plt+0x13e47>
  4175cd:	mov    ebp,edi
  4175cf:	mov    r15,QWORD PTR [rsp+0x20]
  4175d4:	mov    r12,QWORD PTR [rsp+0x8]
  4175d9:	mov    rbx,r8
  4175dc:	mov    eax,ebp
  4175de:	shr    eax,0x4
  4175e1:	lea    edx,[rbp+rbp*1+0x0]
  4175e5:	and    edx,0x1e
  4175e8:	shrx   ecx,DWORD PTR [rcx+rax*4],edx
  4175ee:	test   cl,0x2
  4175f1:	jne    4175fc <strcmp@plt+0x13e74>
  4175f3:	test   cl,0x1
  4175f6:	jne    417629 <strcmp@plt+0x13ea1>
  4175f8:	mov    ecx,ebp
  4175fa:	jmp    41764e <strcmp@plt+0x13ec6>
  4175fc:	mov    rsi,QWORD PTR [r12+0x18]
  417601:	mov    ecx,ebp
  417603:	mov    QWORD PTR [rsi+rcx*8],r15
  417607:	mov    rsi,QWORD PTR [r12+0x10]
  41760c:	mov    edi,0x3
  417611:	shlx   edx,edi,edx
  417616:	not    edx
  417618:	and    DWORD PTR [rsi+rax*4],edx
  41761b:	add    DWORD PTR [r12+0x4],0x1
  417621:	add    DWORD PTR [r12+0x8],0x1
  417627:	jmp    41764e <strcmp@plt+0x13ec6>
  417629:	mov    rsi,QWORD PTR [r12+0x18]
  41762e:	mov    ecx,ebp
  417630:	mov    QWORD PTR [rsi+rcx*8],r15
  417634:	mov    rsi,QWORD PTR [r12+0x10]
  417639:	mov    edi,0x3
  41763e:	shlx   edx,edi,edx
  417643:	not    edx
  417645:	and    DWORD PTR [rsi+rax*4],edx
  417648:	add    DWORD PTR [r12+0x4],0x1
  41764e:	mov    rax,QWORD PTR [r13+0x0]
  417652:	mov    rax,QWORD PTR [rax+0x20]
  417656:	mov    QWORD PTR [rax+rcx*8],rbx
  41765a:	lea    rax,[rip+0x4d74f]        # 464db0 <strcmp@plt+0x61628>
  417661:	mov    ebx,0x1
  417666:	cmp    DWORD PTR [rax],0x3
  417669:	jl     41768c <strcmp@plt+0x13f04>
  41766b:	mov    rdi,r15
  41766e:	call   4338a0 <strcmp@plt+0x30118>
  417673:	mov    rcx,rax
  417676:	lea    rsi,[rip+0x30360]        # 4479dd <strcmp@plt+0x44255>
  41767d:	mov    edi,0x7
  417682:	xor    eax,eax
  417684:	mov    rdx,rcx
  417687:	call   42e800 <strcmp@plt+0x2b078>
  41768c:	mov    eax,ebx
  41768e:	add    rsp,0x38
  417692:	pop    rbx
  417693:	pop    r12
  417695:	pop    r13
  417697:	pop    r14
  417699:	pop    r15
  41769b:	pop    rbp
  41769c:	ret    
  41769d:	nop    DWORD PTR [rax]
  4176a0:	push   rbp
  4176a1:	push   r15
  4176a3:	push   r14
  4176a5:	push   r13
  4176a7:	push   r12
  4176a9:	push   rbx
  4176aa:	sub    rsp,0x18
  4176ae:	mov    rbx,rdi
  4176b1:	mov    rbp,QWORD PTR [rdi]
  4176b4:	mov    ecx,DWORD PTR [rbp+0x0]
  4176b7:	test   ecx,ecx
  4176b9:	je     417758 <strcmp@plt+0x13fd0>
  4176bf:	mov    QWORD PTR [rsp+0x10],rbx
  4176c4:	mov    ebx,ecx
  4176c6:	add    ebx,0xffffffff
  4176c9:	mov    QWORD PTR [rsp],rsi
  4176cd:	mov    rdi,rsi
  4176d0:	call   433650 <strcmp@plt+0x2fec8>
  4176d5:	mov    r13d,eax
  4176d8:	mov    r12d,eax
  4176db:	and    r12d,ebx
  4176de:	shr    eax,0x3
  4176e1:	shl    r13d,0x3
  4176e5:	xor    r13d,eax
  4176e8:	or     r13d,0x1
  4176ec:	mov    DWORD PTR [rsp+0xc],ebx
  4176f0:	and    r13d,ebx
  4176f3:	mov    r14d,r12d
  4176f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417700:	mov    rax,QWORD PTR [rbp+0x10]
  417704:	mov    ebx,r14d
  417707:	shr    ebx,0x4
  41770a:	mov    eax,DWORD PTR [rax+rbx*4]
  41770d:	lea    r15d,[r14+r14*1]
  417711:	and    r15d,0x1e
  417715:	shrx   ecx,eax,r15d
  41771a:	test   cl,0x2
  41771d:	jne    417766 <strcmp@plt+0x13fde>
  41771f:	test   cl,0x1
  417722:	jne    41773c <strcmp@plt+0x13fb4>
  417724:	mov    rax,QWORD PTR [rbp+0x18]
  417728:	mov    ecx,r14d
  41772b:	mov    rdi,QWORD PTR [rax+rcx*8]
  41772f:	mov    rsi,QWORD PTR [rsp]
  417733:	call   4337c0 <strcmp@plt+0x30038>
  417738:	test   eax,eax
  41773a:	jne    41775d <strcmp@plt+0x13fd5>
  41773c:	add    r14d,r13d
  41773f:	and    r14d,DWORD PTR [rsp+0xc]
  417744:	cmp    r14d,r12d
  417747:	jne    417700 <strcmp@plt+0x13f78>
  417749:	mov    r14d,DWORD PTR [rbp+0x0]
  41774d:	mov    rbx,QWORD PTR [rsp+0x10]
  417752:	mov    rsi,QWORD PTR [rsp]
  417756:	jmp    417781 <strcmp@plt+0x13ff9>
  417758:	xor    r14d,r14d
  41775b:	jmp    417781 <strcmp@plt+0x13ff9>
  41775d:	mov    eax,ebx
  41775f:	mov    rcx,QWORD PTR [rbp+0x10]
  417763:	mov    eax,DWORD PTR [rcx+rax*4]
  417766:	mov    ecx,0x3
  41776b:	shlx   ecx,ecx,r15d
  417770:	test   eax,ecx
  417772:	mov    rbx,QWORD PTR [rsp+0x10]
  417777:	mov    rsi,QWORD PTR [rsp]
  41777b:	je     417781 <strcmp@plt+0x13ff9>
  41777d:	mov    r14d,DWORD PTR [rbp+0x0]
  417781:	mov    rax,QWORD PTR [rbx]
  417784:	cmp    r14d,DWORD PTR [rax]
  417787:	je     4177fe <strcmp@plt+0x14076>
  417789:	mov    rax,QWORD PTR [rax+0x20]
  41778d:	mov    ecx,r14d
  417790:	mov    rbp,QWORD PTR [rax+rcx*8]
  417794:	lea    rax,[rip+0x4d615]        # 464db0 <strcmp@plt+0x61628>
  41779b:	cmp    DWORD PTR [rax],0x3
  41779e:	jl     4177c1 <strcmp@plt+0x14039>
  4177a0:	mov    rdi,rsi
  4177a3:	call   4338a0 <strcmp@plt+0x30118>
  4177a8:	mov    rcx,rax
  4177ab:	lea    rsi,[rip+0x3024e]        # 447a00 <strcmp@plt+0x44278>
  4177b2:	mov    edi,0x7
  4177b7:	xor    eax,eax
  4177b9:	mov    rdx,rcx
  4177bc:	call   42e800 <strcmp@plt+0x2b078>
  4177c1:	mov    rdi,rbp
  4177c4:	call   4201c0 <strcmp@plt+0x1ca38>
  4177c9:	mov    rax,QWORD PTR [rbx]
  4177cc:	cmp    DWORD PTR [rax],r14d
  4177cf:	je     4177fe <strcmp@plt+0x14076>
  4177d1:	mov    rcx,QWORD PTR [rax+0x10]
  4177d5:	mov    edx,r14d
  4177d8:	shr    edx,0x4
  4177db:	mov    esi,DWORD PTR [rcx+rdx*4]
  4177de:	add    r14d,r14d
  4177e1:	and    r14d,0x1e
  4177e5:	mov    edi,0x3
  4177ea:	shlx   edi,edi,r14d
  4177ef:	test   esi,edi
  4177f1:	jne    4177fe <strcmp@plt+0x14076>
  4177f3:	bts    esi,r14d
  4177f7:	mov    DWORD PTR [rcx+rdx*4],esi
  4177fa:	add    DWORD PTR [rax+0x4],0xffffffff
  4177fe:	add    rsp,0x18
  417802:	pop    rbx
  417803:	pop    r12
  417805:	pop    r13
  417807:	pop    r14
  417809:	pop    r15
  41780b:	pop    rbp
  41780c:	ret    
  41780d:	nop    DWORD PTR [rax]
  417810:	push   r15
  417812:	push   r14
  417814:	push   rbx
  417815:	mov    ebx,esi
  417817:	mov    r14,rdi
  41781a:	mov    rax,QWORD PTR [rdi]
  41781d:	mov    rax,QWORD PTR [rax+0x20]
  417821:	mov    ecx,esi
  417823:	mov    r15,QWORD PTR [rax+rcx*8]
  417827:	lea    rax,[rip+0x4d582]        # 464db0 <strcmp@plt+0x61628>
  41782e:	cmp    DWORD PTR [rax],0x3
  417831:	jl     417855 <strcmp@plt+0x140cd>
  417833:	mov    rdi,QWORD PTR [r15+0x8]
  417837:	call   4338a0 <strcmp@plt+0x30118>
  41783c:	mov    rcx,rax
  41783f:	lea    rsi,[rip+0x301db]        # 447a21 <strcmp@plt+0x44299>
  417846:	mov    edi,0x7
  41784b:	xor    eax,eax
  41784d:	mov    rdx,rcx
  417850:	call   42e800 <strcmp@plt+0x2b078>
  417855:	mov    rdi,r15
  417858:	call   4201c0 <strcmp@plt+0x1ca38>
  41785d:	mov    rax,QWORD PTR [r14]
  417860:	cmp    DWORD PTR [rax],ebx
  417862:	je     41788d <strcmp@plt+0x14105>
  417864:	mov    rcx,QWORD PTR [rax+0x10]
  417868:	mov    edx,ebx
  41786a:	shr    edx,0x4
  41786d:	mov    esi,DWORD PTR [rcx+rdx*4]
  417870:	add    ebx,ebx
  417872:	and    ebx,0x1e
  417875:	mov    edi,0x3
  41787a:	shlx   edi,edi,ebx
  41787f:	test   esi,edi
  417881:	jne    41788d <strcmp@plt+0x14105>
  417883:	bts    esi,ebx
  417886:	mov    DWORD PTR [rcx+rdx*4],esi
  417889:	add    DWORD PTR [rax+0x4],0xffffffff
  41788d:	pop    rbx
  41788e:	pop    r14
  417890:	pop    r15
  417892:	ret    
  417893:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41789d:	nop    DWORD PTR [rax]
  4178a0:	push   rbp
  4178a1:	push   r15
  4178a3:	push   r14
  4178a5:	push   r13
  4178a7:	push   r12
  4178a9:	push   rbx
  4178aa:	sub    rsp,0x18
  4178ae:	mov    rbp,QWORD PTR [rdi]
  4178b1:	mov    ecx,DWORD PTR [rbp+0x0]
  4178b4:	test   ecx,ecx
  4178b6:	je     417955 <strcmp@plt+0x141cd>
  4178bc:	mov    QWORD PTR [rsp+0x8],rdi
  4178c1:	mov    ebx,ecx
  4178c3:	add    ebx,0xffffffff
  4178c6:	mov    QWORD PTR [rsp+0x10],rsi
  4178cb:	mov    rdi,rsi
  4178ce:	call   433650 <strcmp@plt+0x2fec8>
  4178d3:	mov    r13d,eax
  4178d6:	mov    r12d,eax
  4178d9:	and    r12d,ebx
  4178dc:	shr    eax,0x3
  4178df:	shl    r13d,0x3
  4178e3:	xor    r13d,eax
  4178e6:	or     r13d,0x1
  4178ea:	mov    DWORD PTR [rsp+0x4],ebx
  4178ee:	and    r13d,ebx
  4178f1:	mov    r14d,r12d
  4178f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4178fe:	xchg   ax,ax
  417900:	mov    rax,QWORD PTR [rbp+0x10]
  417904:	mov    ebx,r14d
  417907:	shr    ebx,0x4
  41790a:	mov    eax,DWORD PTR [rax+rbx*4]
  41790d:	lea    r15d,[r14+r14*1]
  417911:	and    r15d,0x1e
  417915:	shrx   ecx,eax,r15d
  41791a:	test   cl,0x2
  41791d:	jne    417963 <strcmp@plt+0x141db>
  41791f:	test   cl,0x1
  417922:	jne    41793d <strcmp@plt+0x141b5>
  417924:	mov    rax,QWORD PTR [rbp+0x18]
  417928:	mov    ecx,r14d
  41792b:	mov    rdi,QWORD PTR [rax+rcx*8]
  41792f:	mov    rsi,QWORD PTR [rsp+0x10]
  417934:	call   4337c0 <strcmp@plt+0x30038>
  417939:	test   eax,eax
  41793b:	jne    41795a <strcmp@plt+0x141d2>
  41793d:	add    r14d,r13d
  417940:	and    r14d,DWORD PTR [rsp+0x4]
  417945:	cmp    r14d,r12d
  417948:	jne    417900 <strcmp@plt+0x14178>
  41794a:	mov    r14d,DWORD PTR [rbp+0x0]
  41794e:	mov    rdi,QWORD PTR [rsp+0x8]
  417953:	jmp    41797a <strcmp@plt+0x141f2>
  417955:	xor    r14d,r14d
  417958:	jmp    41797a <strcmp@plt+0x141f2>
  41795a:	mov    eax,ebx
  41795c:	mov    rcx,QWORD PTR [rbp+0x10]
  417960:	mov    eax,DWORD PTR [rcx+rax*4]
  417963:	mov    ecx,0x3
  417968:	shlx   ecx,ecx,r15d
  41796d:	test   eax,ecx
  41796f:	mov    rdi,QWORD PTR [rsp+0x8]
  417974:	je     41797a <strcmp@plt+0x141f2>
  417976:	mov    r14d,DWORD PTR [rbp+0x0]
  41797a:	mov    rax,QWORD PTR [rdi]
  41797d:	cmp    r14d,DWORD PTR [rax]
  417980:	jne    417986 <strcmp@plt+0x141fe>
  417982:	xor    eax,eax
  417984:	jmp    417991 <strcmp@plt+0x14209>
  417986:	mov    rax,QWORD PTR [rax+0x20]
  41798a:	mov    ecx,r14d
  41798d:	mov    rax,QWORD PTR [rax+rcx*8]
  417991:	add    rsp,0x18
  417995:	pop    rbx
  417996:	pop    r12
  417998:	pop    r13
  41799a:	pop    r14
  41799c:	pop    r15
  41799e:	pop    rbp
  41799f:	ret    
  4179a0:	push   rbp
  4179a1:	push   r15
  4179a3:	push   r14
  4179a5:	push   r13
  4179a7:	push   r12
  4179a9:	push   rbx
  4179aa:	sub    rsp,0x28
  4179ae:	add    esi,0xffffffff
  4179b1:	mov    eax,esi
  4179b3:	shr    eax,1
  4179b5:	or     eax,esi
  4179b7:	mov    ecx,eax
  4179b9:	shr    ecx,0x2
  4179bc:	or     ecx,eax
  4179be:	mov    eax,ecx
  4179c0:	shr    eax,0x4
  4179c3:	or     eax,ecx
  4179c5:	mov    ecx,eax
  4179c7:	shr    ecx,0x8
  4179ca:	or     ecx,eax
  4179cc:	mov    ebx,ecx
  4179ce:	shr    ebx,0x10
  4179d1:	or     ebx,ecx
  4179d3:	add    ebx,0x1
  4179d6:	cmp    ebx,0x4
  4179d9:	mov    eax,0x4
  4179de:	cmovbe ebx,eax
  4179e1:	vcvtsi2sd xmm0,xmm0,rbx
  4179e6:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x2ffaa]        # 447998 <strcmp@plt+0x44210>
  4179ee:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x2ffaa]        # 4479a0 <strcmp@plt+0x44218>
  4179f6:	vcvttsd2si r14,xmm0
  4179fb:	cmp    DWORD PTR [rdi+0x4],r14d
  4179ff:	jae    417c26 <strcmp@plt+0x1449e>
  417a05:	mov    rdx,rdi
  417a08:	mov    r15d,ebx
  417a0b:	shr    r15d,0x2
  417a0f:	and    r15d,0xfffffffc
  417a13:	cmp    ebx,0x10
  417a16:	cmovb  r15d,eax
  417a1a:	mov    rdi,r15
  417a1d:	mov    QWORD PTR [rsp],rdx
  417a21:	call   403510 <malloc@plt>
  417a26:	mov    r13,rax
  417a29:	mov    esi,0xaa
  417a2e:	mov    rdi,rax
  417a31:	mov    rdx,r15
  417a34:	call   403260 <memset@plt>
  417a39:	mov    rbp,QWORD PTR [rsp]
  417a3d:	mov    eax,DWORD PTR [rbp+0x0]
  417a40:	cmp    eax,ebx
  417a42:	jae    417a7a <strcmp@plt+0x142f2>
  417a44:	mov    rdi,QWORD PTR [rbp+0x18]
  417a48:	mov    r15d,ebx
  417a4b:	shl    r15,0x3
  417a4f:	mov    rsi,r15
  417a52:	call   403650 <realloc@plt>
  417a57:	mov    rcx,QWORD PTR [rsp]
  417a5b:	mov    QWORD PTR [rcx+0x18],rax
  417a5f:	mov    rax,QWORD PTR [rsp]
  417a63:	mov    rdi,QWORD PTR [rax+0x20]
  417a67:	mov    rsi,r15
  417a6a:	call   403650 <realloc@plt>
  417a6f:	mov    rbp,QWORD PTR [rsp]
  417a73:	mov    QWORD PTR [rbp+0x20],rax
  417a77:	mov    eax,DWORD PTR [rbp+0x0]
  417a7a:	test   eax,eax
  417a7c:	je     417c0c <strcmp@plt+0x14484>
  417a82:	mov    QWORD PTR [rsp+0x10],r14
  417a87:	mov    QWORD PTR [rsp+0x18],rbx
  417a8c:	lea    r14d,[rbx-0x1]
  417a90:	xor    edi,edi
  417a92:	mov    r12d,0x2
  417a98:	nop    DWORD PTR [rax+rax*1+0x0]
  417aa0:	mov    r8,QWORD PTR [rbp+0x10]
  417aa4:	mov    edx,edi
  417aa6:	shr    edx,0x4
  417aa9:	mov    ecx,DWORD PTR [r8+rdx*4]
  417aad:	lea    esi,[rdi+rdi*1]
  417ab0:	and    esi,0x1e
  417ab3:	mov    ebx,0x3
  417ab8:	shlx   ebx,ebx,esi
  417abd:	test   ecx,ebx
  417abf:	jne    417bc0 <strcmp@plt+0x14438>
  417ac5:	lea    rdx,[r8+rdx*4]
  417ac9:	mov    QWORD PTR [rsp+0x20],rdi
  417ace:	mov    eax,edi
  417ad0:	mov    rdi,QWORD PTR [rbp+0x18]
  417ad4:	mov    rbx,QWORD PTR [rbp+0x20]
  417ad8:	mov    r15,QWORD PTR [rdi+rax*8]
  417adc:	mov    rax,QWORD PTR [rbx+rax*8]
  417ae0:	mov    QWORD PTR [rsp+0x8],rax
  417ae5:	mov    r8d,esi
  417ae8:	jmp    417b25 <strcmp@plt+0x1439d>
  417aea:	nop    WORD PTR [rax+rax*1+0x0]
  417af0:	mov    r8d,edx
  417af3:	mov    rcx,QWORD PTR [rbp+0x18]
  417af7:	mov    edx,ebx
  417af9:	mov    rdi,QWORD PTR [rcx+rdx*8]
  417afd:	mov    QWORD PTR [rcx+rdx*8],r15
  417b01:	mov    rcx,QWORD PTR [rbp+0x20]
  417b05:	mov    rbx,QWORD PTR [rcx+rdx*8]
  417b09:	mov    rax,QWORD PTR [rsp+0x8]
  417b0e:	mov    QWORD PTR [rcx+rdx*8],rax
  417b12:	mov    rcx,QWORD PTR [rbp+0x10]
  417b16:	lea    rdx,[rcx+rsi*4]
  417b1a:	mov    ecx,DWORD PTR [rcx+rsi*4]
  417b1d:	mov    QWORD PTR [rsp+0x8],rbx
  417b22:	mov    r15,rdi
  417b25:	mov    esi,0x1
  417b2a:	shlx   rax,rsi,r8
  417b2f:	or     eax,ecx
  417b31:	mov    DWORD PTR [rdx],eax
  417b33:	mov    rdi,r15
  417b36:	call   433650 <strcmp@plt+0x2fec8>
  417b3b:	mov    ecx,eax
  417b3d:	shr    ecx,0x3
  417b40:	mov    esi,eax
  417b42:	shl    esi,0x3
  417b45:	xor    esi,ecx
  417b47:	or     esi,0x1
  417b4a:	and    esi,r14d
  417b4d:	nop    DWORD PTR [rax]
  417b50:	mov    ebx,eax
  417b52:	and    ebx,r14d
  417b55:	mov    ecx,ebx
  417b57:	shr    ecx,0x4
  417b5a:	mov    edi,DWORD PTR [r13+rcx*4+0x0]
  417b5f:	lea    edx,[rbx+rbx*1]
  417b62:	and    edx,0x1e
  417b65:	shlx   ebp,r12d,edx
  417b6a:	lea    eax,[rbx+rsi*1]
  417b6d:	test   ebp,edi
  417b6f:	je     417b50 <strcmp@plt+0x143c8>
  417b71:	mov    esi,ecx
  417b73:	shlx   eax,r12d,edx
  417b78:	andn   eax,eax,edi
  417b7d:	mov    DWORD PTR [r13+rsi*4+0x0],eax
  417b82:	mov    rbp,QWORD PTR [rsp]
  417b86:	mov    eax,DWORD PTR [rbp+0x0]
  417b89:	cmp    ebx,eax
  417b8b:	jae    417ba4 <strcmp@plt+0x1441c>
  417b8d:	mov    rcx,QWORD PTR [rbp+0x10]
  417b91:	mov    edi,0x3
  417b96:	shlx   edi,edi,edx
  417b9b:	test   DWORD PTR [rcx+rsi*4],edi
  417b9e:	je     417af0 <strcmp@plt+0x14368>
  417ba4:	mov    rcx,QWORD PTR [rbp+0x18]
  417ba8:	mov    edx,ebx
  417baa:	mov    QWORD PTR [rcx+rdx*8],r15
  417bae:	mov    rcx,QWORD PTR [rbp+0x20]
  417bb2:	mov    rsi,QWORD PTR [rsp+0x8]
  417bb7:	mov    QWORD PTR [rcx+rdx*8],rsi
  417bbb:	mov    rdi,QWORD PTR [rsp+0x20]
  417bc0:	add    edi,0x1
  417bc3:	cmp    edi,eax
  417bc5:	jne    417aa0 <strcmp@plt+0x14318>
  417bcb:	mov    rbx,QWORD PTR [rsp+0x18]
  417bd0:	cmp    eax,ebx
  417bd2:	mov    r14,QWORD PTR [rsp+0x10]
  417bd7:	jbe    417c0c <strcmp@plt+0x14484>
  417bd9:	mov    rdi,QWORD PTR [rbp+0x18]
  417bdd:	mov    r15d,ebx
  417be0:	shl    r15,0x3
  417be4:	mov    rsi,r15
  417be7:	call   403650 <realloc@plt>
  417bec:	mov    rcx,QWORD PTR [rsp]
  417bf0:	mov    QWORD PTR [rcx+0x18],rax
  417bf4:	mov    rax,QWORD PTR [rsp]
  417bf8:	mov    rdi,QWORD PTR [rax+0x20]
  417bfc:	mov    rsi,r15
  417bff:	call   403650 <realloc@plt>
  417c04:	mov    rbp,QWORD PTR [rsp]
  417c08:	mov    QWORD PTR [rbp+0x20],rax
  417c0c:	mov    rdi,QWORD PTR [rbp+0x10]
  417c10:	call   403780 <free@plt>
  417c15:	mov    QWORD PTR [rbp+0x10],r13
  417c19:	mov    DWORD PTR [rbp+0x0],ebx
  417c1c:	mov    eax,DWORD PTR [rbp+0x4]
  417c1f:	mov    DWORD PTR [rbp+0x8],eax
  417c22:	mov    DWORD PTR [rbp+0xc],r14d
  417c26:	add    rsp,0x28
  417c2a:	pop    rbx
  417c2b:	pop    r12
  417c2d:	pop    r13
  417c2f:	pop    r14
  417c31:	pop    r15
  417c33:	pop    rbp
  417c34:	ret    
  417c35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417c3f:	nop
  417c40:	push   rbp
  417c41:	push   r15
  417c43:	push   r14
  417c45:	push   rbx
  417c46:	push   rax
  417c47:	mov    r14,rdx
  417c4a:	mov    rbx,rsi
  417c4d:	mov    BYTE PTR [rsp+0x3],0x0
  417c52:	mov    BYTE PTR [rsp+0x2],0x0
  417c57:	lea    rdx,[rsp+0x4]
  417c5c:	lea    rcx,[rsp+0x3]
  417c61:	lea    r8,[rsp+0x2]
  417c66:	call   4353e0 <strcmp@plt+0x31c58>
  417c6b:	xor    ebp,ebp
  417c6d:	cmp    eax,0x1
  417c70:	jne    417d82 <strcmp@plt+0x145fa>
  417c76:	mov    eax,DWORD PTR [rbx+0x38]
  417c79:	sub    eax,DWORD PTR [rbx+0x30]
  417c7c:	cmp    DWORD PTR [rsp+0x4],0x2
  417c81:	jne    417c95 <strcmp@plt+0x1450d>
  417c83:	mov    WORD PTR [rbx+0x1a],ax
  417c87:	mov    rdi,rbx
  417c8a:	call   432d60 <strcmp@plt+0x2f5d8>
  417c8f:	mov    eax,DWORD PTR [rbx+0x38]
  417c92:	sub    eax,DWORD PTR [rbx+0x30]
  417c95:	mov    WORD PTR [rbx+0x1c],ax
  417c99:	mov    rdi,rbx
  417c9c:	call   432da0 <strcmp@plt+0x2f618>
  417ca1:	movbe  cx,WORD PTR [rax+0x4]
  417ca7:	movzx  ecx,cx
  417caa:	mov    ebp,0xfffffff8
  417caf:	cmp    ecx,0x10
  417cb2:	jb     417d82 <strcmp@plt+0x145fa>
  417cb8:	movbe  ax,WORD PTR [rax+0x2]
  417cbe:	movzx  eax,ax
  417cc1:	cmp    eax,0x12b6
  417cc6:	je     417cf5 <strcmp@plt+0x1456d>
  417cc8:	cmp    eax,0x10f5
  417ccd:	jne    417d82 <strcmp@plt+0x145fa>
  417cd3:	mov    rdi,rbx
  417cd6:	call   422d70 <strcmp@plt+0x1f5e8>
  417cdb:	mov    rcx,rax
  417cde:	mov    r15d,0x10f5
  417ce4:	xor    eax,eax
  417ce6:	test   BYTE PTR [rcx],0x8
  417ce9:	je     417d16 <strcmp@plt+0x1458e>
  417ceb:	mov    rdi,rcx
  417cee:	call   423cb0 <strcmp@plt+0x20528>
  417cf3:	jmp    417d16 <strcmp@plt+0x1458e>
  417cf5:	mov    rdi,rbx
  417cf8:	call   4172a0 <strcmp@plt+0x13b18>
  417cfd:	mov    r15d,0x12b6
  417d03:	test   BYTE PTR [rax],0x8
  417d06:	je     417d19 <strcmp@plt+0x14591>
  417d08:	mov    rdi,rax
  417d0b:	call   4172c0 <strcmp@plt+0x13b38>
  417d10:	mov    r15d,0x12b6
  417d16:	mov    DWORD PTR [r14],eax
  417d19:	mov    rdi,QWORD PTR [rbx+0x38]
  417d1d:	mov    eax,DWORD PTR [rbx+0x30]
  417d20:	mov    ecx,edi
  417d22:	sub    ecx,eax
  417d24:	mov    WORD PTR [rbx+0x20],cx
  417d28:	movzx  esi,BYTE PTR [rsp+0x3]
  417d2d:	movzx  edx,BYTE PTR [rsp+0x2]
  417d32:	call   433ba0 <strcmp@plt+0x30418>
  417d37:	lea    rax,[rip+0x4d072]        # 464db0 <strcmp@plt+0x61628>
  417d3e:	mov    ebp,0x1
  417d43:	cmp    DWORD PTR [rax],0x3
  417d46:	jl     417d82 <strcmp@plt+0x145fa>
  417d48:	movzx  edi,WORD PTR [rbx+0x20]
  417d4c:	cmp    rdi,0xffff
  417d53:	je     417d5b <strcmp@plt+0x145d3>
  417d55:	add    rdi,QWORD PTR [rbx+0x30]
  417d59:	jmp    417d5d <strcmp@plt+0x145d5>
  417d5b:	xor    edi,edi
  417d5d:	lea    rsi,[rip+0x2fcf9]        # 447a5d <strcmp@plt+0x442d5>
  417d64:	call   433f90 <strcmp@plt+0x30808>
  417d69:	mov    rcx,rax
  417d6c:	lea    rsi,[rip+0x2fcdb]        # 447a4e <strcmp@plt+0x442c6>
  417d73:	mov    edi,0x7
  417d78:	xor    eax,eax
  417d7a:	mov    edx,r15d
  417d7d:	call   42e800 <strcmp@plt+0x2b078>
  417d82:	mov    eax,ebp
  417d84:	add    rsp,0x8
  417d88:	pop    rbx
  417d89:	pop    r14
  417d8b:	pop    r15
  417d8d:	pop    rbp
  417d8e:	ret    
  417d8f:	nop
  417d90:	push   r14
  417d92:	push   rbx
  417d93:	push   rax
  417d94:	mov    rbx,rdi
  417d97:	lea    r14,[rip+0x50662]        # 468400 <strcmp@plt+0x64c78>
  417d9e:	lea    rsi,[rip+0x5069b]        # 468440 <strcmp@plt+0x64cb8>
  417da5:	mov    edx,0x1000
  417daa:	mov    rdi,r14
  417dad:	call   42df10 <strcmp@plt+0x2a788>
  417db2:	mov    edi,DWORD PTR [rbx+0x18]
  417db5:	lea    rdx,[rsp+0x4]
  417dba:	mov    rsi,r14
  417dbd:	call   417c40 <strcmp@plt+0x144b8>
  417dc2:	xor    ebx,ebx
  417dc4:	cmp    eax,0x1
  417dc7:	jne    417e35 <strcmp@plt+0x146ad>
  417dc9:	lea    rax,[rip+0x5875c]        # 47052c <strcmp@plt+0x6cda4>
  417dd0:	mov    edi,DWORD PTR [rax]
  417dd2:	movzx  eax,WORD PTR [rip+0x50647]        # 468420 <strcmp@plt+0x64c98>
  417dd9:	mov    rcx,QWORD PTR [rip+0x50650]        # 468430 <strcmp@plt+0x64ca8>
  417de0:	add    rcx,rax
  417de3:	xor    esi,esi
  417de5:	cmp    rax,0xffff
  417deb:	cmovne rsi,rcx
  417def:	mov    edx,DWORD PTR [rip+0x5061f]        # 468414 <strcmp@plt+0x64c8c>
  417df5:	call   403180 <write@plt>
  417dfa:	mov    ebx,0x1
  417dff:	test   rax,rax
  417e02:	jns    417e35 <strcmp@plt+0x146ad>
  417e04:	lea    rax,[rip+0x4cfa5]        # 464db0 <strcmp@plt+0x61628>
  417e0b:	cmp    DWORD PTR [rax],0x2
  417e0e:	jl     417e35 <strcmp@plt+0x146ad>
  417e10:	call   403040 <__errno_location@plt>
  417e15:	mov    edi,DWORD PTR [rax]
  417e17:	call   403170 <strerror@plt>
  417e1c:	mov    rcx,rax
  417e1f:	lea    rsi,[rip+0x2fc4a]        # 447a70 <strcmp@plt+0x442e8>
  417e26:	mov    edi,0x6
  417e2b:	xor    eax,eax
  417e2d:	mov    rdx,rcx
  417e30:	call   42e800 <strcmp@plt+0x2b078>
  417e35:	mov    eax,ebx
  417e37:	add    rsp,0x8
  417e3b:	pop    rbx
  417e3c:	pop    r14
  417e3e:	ret    
  417e3f:	nop
  417e40:	push   r14
  417e42:	push   rbx
  417e43:	sub    rsp,0x58
  417e47:	mov    rbx,rdi
  417e4a:	lea    r14,[rip+0x505af]        # 468400 <strcmp@plt+0x64c78>
  417e51:	lea    rsi,[rip+0x505e8]        # 468440 <strcmp@plt+0x64cb8>
  417e58:	mov    edx,0x1000
  417e5d:	mov    rdi,r14
  417e60:	call   42df10 <strcmp@plt+0x2a788>
  417e65:	mov    esi,0x64
  417e6a:	mov    rdi,r14
  417e6d:	call   42e0c0 <strcmp@plt+0x2a938>
  417e72:	mov    edi,DWORD PTR [rbx+0x18]
  417e75:	lea    rdx,[rsp+0x50]
  417e7a:	mov    rsi,r14
  417e7d:	call   417c40 <strcmp@plt+0x144b8>
  417e82:	xor    ebx,ebx
  417e84:	cmp    eax,0x1
  417e87:	jne    417ef2 <strcmp@plt+0x1476a>
  417e89:	lea    rax,[rip+0x4cf20]        # 464db0 <strcmp@plt+0x61628>
  417e90:	cmp    DWORD PTR [rax],0x3
  417e93:	jl     417ea8 <strcmp@plt+0x14720>
  417e95:	lea    rsi,[rip+0x2fbf2]        # 447a8e <strcmp@plt+0x44306>
  417e9c:	mov    edi,0x7
  417ea1:	xor    eax,eax
  417ea3:	call   42e800 <strcmp@plt+0x2b078>
  417ea8:	lea    r14,[rip+0x50551]        # 468400 <strcmp@plt+0x64c78>
  417eaf:	mov    rdi,r14
  417eb2:	call   42e5e0 <strcmp@plt+0x2ae58>
  417eb7:	mov    eax,DWORD PTR [rip+0x5057b]        # 468438 <strcmp@plt+0x64cb0>
  417ebd:	sub    eax,DWORD PTR [rip+0x5056d]        # 468430 <strcmp@plt+0x64ca8>
  417ec3:	mov    WORD PTR [rip+0x50550],ax        # 46841a <strcmp@plt+0x64c92>
  417eca:	lea    rsi,[rsp+0x8]
  417ecf:	mov    rdi,r14
  417ed2:	call   433320 <strcmp@plt+0x2fb98>
  417ed7:	cmp    eax,0x1
  417eda:	jne    417ef2 <strcmp@plt+0x1476a>
  417edc:	lea    rdi,[rip+0x5051d]        # 468400 <strcmp@plt+0x64c78>
  417ee3:	lea    rsi,[rsp+0x8]
  417ee8:	call   417f20 <strcmp@plt+0x14798>
  417eed:	mov    ebx,0x1
  417ef2:	mov    eax,ebx
  417ef4:	add    rsp,0x58
  417ef8:	pop    rbx
  417ef9:	pop    r14
  417efb:	ret    
  417efc:	nop    DWORD PTR [rax+0x0]
  417f00:	push   rbx
  417f01:	mov    rbx,rdi
  417f04:	xor    eax,eax
  417f06:	call   4193b0 <strcmp@plt+0x15c28>
  417f0b:	lea    rdi,[rax+0x20]
  417f0f:	mov    rsi,rbx
  417f12:	pop    rbx
  417f13:	jmp    4176a0 <strcmp@plt+0x13f18>
  417f18:	nop    DWORD PTR [rax+rax*1+0x0]
  417f20:	push   rbp
  417f21:	push   r15
  417f23:	push   r14
  417f25:	push   r13
  417f27:	push   r12
  417f29:	push   rbx
  417f2a:	sub    rsp,0x28
  417f2e:	mov    rbx,rsi
  417f31:	mov    r12,rdi
  417f34:	lea    r13,[rip+0x4ce75]        # 464db0 <strcmp@plt+0x61628>
  417f3b:	cmp    DWORD PTR [r13+0x0],0x3
  417f40:	jl     417f80 <strcmp@plt+0x147f8>
  417f42:	mov    rdi,rbx
  417f45:	call   423130 <strcmp@plt+0x1f9a8>
  417f4a:	mov    rbp,rax
  417f4d:	lea    rdi,[rbx+0x20]
  417f51:	call   423130 <strcmp@plt+0x1f9a8>
  417f56:	mov    rcx,rax
  417f59:	movzx  r8d,BYTE PTR [rbx+0x44]
  417f5e:	movzx  r9d,WORD PTR [rbx+0x40]
  417f63:	movzx  eax,WORD PTR [rbx+0x42]
  417f67:	mov    DWORD PTR [rsp],eax
  417f6a:	lea    rsi,[rip+0x2fb4d]        # 447abe <strcmp@plt+0x44336>
  417f71:	mov    edi,0x7
  417f76:	xor    eax,eax
  417f78:	mov    rdx,rbp
  417f7b:	call   42e800 <strcmp@plt+0x2b078>
  417f80:	mov    rdi,rbx
  417f83:	call   433b60 <strcmp@plt+0x303d8>
  417f88:	test   eax,eax
  417f8a:	je     417fc3 <strcmp@plt+0x1483b>
  417f8c:	cmp    DWORD PTR [r13+0x0],0x3
  417f91:	jl     417fa6 <strcmp@plt+0x1481e>
  417f93:	lea    rsi,[rip+0x2fb5e]        # 447af8 <strcmp@plt+0x44370>
  417f9a:	mov    edi,0x7
  417f9f:	xor    eax,eax
  417fa1:	call   42e800 <strcmp@plt+0x2b078>
  417fa6:	add    rbx,0x20
  417faa:	mov    rdi,r12
  417fad:	mov    rsi,rbx
  417fb0:	add    rsp,0x28
  417fb4:	pop    rbx
  417fb5:	pop    r12
  417fb7:	pop    r13
  417fb9:	pop    r14
  417fbb:	pop    r15
  417fbd:	pop    rbp
  417fbe:	jmp    418360 <strcmp@plt+0x14bd8>
  417fc3:	lea    rbp,[rbx+0x20]
  417fc7:	mov    rdi,rbp
  417fca:	call   4248e0 <strcmp@plt+0x21158>
  417fcf:	test   al,al
  417fd1:	je     417ff6 <strcmp@plt+0x1486e>
  417fd3:	cmp    DWORD PTR [r13+0x0],0x0
  417fd8:	jle    4182ac <strcmp@plt+0x14b24>
  417fde:	lea    rsi,[rip+0x2fbc3]        # 447ba8 <strcmp@plt+0x44420>
  417fe5:	mov    edi,0x5
  417fea:	xor    eax,eax
  417fec:	call   42e800 <strcmp@plt+0x2b078>
  417ff1:	jmp    4182ac <strcmp@plt+0x14b24>
  417ff6:	mov    QWORD PTR [rsp+0x20],rbp
  417ffb:	mov    r14d,DWORD PTR [rbx+0x48]
  417fff:	xor    eax,eax
  418001:	call   4193b0 <strcmp@plt+0x15c28>
  418006:	mov    rbp,rax
  418009:	lea    r15,[rax+0x20]
  41800d:	mov    rdi,r15
  418010:	mov    rsi,rbx
  418013:	call   4178a0 <strcmp@plt+0x14118>
  418018:	test   rax,rax
  41801b:	je     4180e4 <strcmp@plt+0x1495c>
  418021:	mov    r14,QWORD PTR [rax+0x8]
  418025:	lea    r15,[r14+0x8]
  418029:	mov    rdi,QWORD PTR [r14+0x8]
  41802d:	test   rdi,rdi
  418030:	je     418039 <strcmp@plt+0x148b1>
  418032:	cmp    QWORD PTR [r14+0x10],0x0
  418037:	jne    41806a <strcmp@plt+0x148e2>
  418039:	mov    edx,DWORD PTR [rax+0x10]
  41803c:	lea    ecx,[rdx-0x2]
  41803f:	cmp    ecx,0x2
  418042:	jb     418051 <strcmp@plt+0x148c9>
  418044:	cmp    edx,0x1
  418047:	je     4182c0 <strcmp@plt+0x14b38>
  41804d:	test   edx,edx
  41804f:	jne    41806a <strcmp@plt+0x148e2>
  418051:	cmp    DWORD PTR [r13+0x0],0x3
  418056:	jl     4182ac <strcmp@plt+0x14b24>
  41805c:	lea    rsi,[rip+0x2fc1d]        # 447c80 <strcmp@plt+0x444f8>
  418063:	mov    edi,0x7
  418068:	jmp    417fea <strcmp@plt+0x14862>
  41806a:	cmp    DWORD PTR [r13+0x0],0x3
  41806f:	jl     4180a1 <strcmp@plt+0x14919>
  418071:	mov    rbp,rax
  418074:	call   423130 <strcmp@plt+0x1f9a8>
  418079:	mov    rbx,rax
  41807c:	mov    rdi,QWORD PTR [r14+0x10]
  418080:	call   423130 <strcmp@plt+0x1f9a8>
  418085:	mov    rcx,rax
  418088:	lea    rsi,[rip+0x2fc14]        # 447ca3 <strcmp@plt+0x4451b>
  41808f:	mov    edi,0x7
  418094:	xor    eax,eax
  418096:	mov    rdx,rbx
  418099:	call   42e800 <strcmp@plt+0x2b078>
  41809e:	mov    rax,rbp
  4180a1:	mov    eax,DWORD PTR [rax+0x14]
  4180a4:	test   eax,eax
  4180a6:	je     41826d <strcmp@plt+0x14ae5>
  4180ac:	cmp    eax,0x1
  4180af:	jne    418290 <strcmp@plt+0x14b08>
  4180b5:	mov    rcx,QWORD PTR [r15]
  4180b8:	lea    rbx,[r14+0x10]
  4180bc:	mov    r8,QWORD PTR [r14+0x10]
  4180c0:	mov    r9d,DWORD PTR [r14+0x28]
  4180c4:	mov    rax,QWORD PTR [rsp+0x20]
  4180c9:	mov    QWORD PTR [rsp],rax
  4180cd:	mov    esi,0x12b6
  4180d2:	mov    edx,0x12b6
  4180d7:	mov    rdi,r12
  4180da:	call   417190 <strcmp@plt+0x13a08>
  4180df:	jmp    418294 <strcmp@plt+0x14b0c>
  4180e4:	mov    DWORD PTR [rsp+0x1c],r14d
  4180e9:	mov    QWORD PTR [rsp+0x10],rbp
  4180ee:	mov    rdi,rbx
  4180f1:	call   407870 <strcmp@plt+0x40e8>
  4180f6:	test   rax,rax
  4180f9:	je     4182ac <strcmp@plt+0x14b24>
  4180ff:	mov    rbp,rax
  418102:	mov    r14,QWORD PTR [rax+0x8]
  418106:	test   r14,r14
  418109:	je     4182ac <strcmp@plt+0x14b24>
  41810f:	mov    rdi,QWORD PTR [r14+0x8]
  418113:	test   rdi,rdi
  418116:	mov    QWORD PTR [rsp+0x8],rbp
  41811b:	je     418132 <strcmp@plt+0x149aa>
  41811d:	cmp    QWORD PTR [r14+0x10],0x0
  418122:	je     418132 <strcmp@plt+0x149aa>
  418124:	call   43afd0 <strcmp@plt+0x37848>
  418129:	mov    rbp,QWORD PTR [rsp+0x8]
  41812e:	mov    QWORD PTR [r14+0x20],rax
  418132:	mov    rsi,QWORD PTR [r14]
  418135:	mov    eax,DWORD PTR [rsp+0x1c]
  418139:	mov    DWORD PTR [rsi+0x48],eax
  41813c:	mov    rdi,r15
  41813f:	mov    rdx,rbp
  418142:	call   417420 <strcmp@plt+0x13c98>
  418147:	cmp    eax,0x1
  41814a:	je     418161 <strcmp@plt+0x149d9>
  41814c:	xor    eax,eax
  41814e:	call   419a80 <strcmp@plt+0x162f8>
  418153:	mov    rsi,QWORD PTR [r14]
  418156:	mov    rdi,r15
  418159:	mov    rdx,rbp
  41815c:	call   417420 <strcmp@plt+0x13c98>
  418161:	mov    rax,QWORD PTR [rsp+0x10]
  418166:	mov    r15,QWORD PTR [rax+0x18]
  41816a:	mov    rdi,QWORD PTR [rbp+0x0]
  41816e:	call   423130 <strcmp@plt+0x1f9a8>
  418173:	mov    rdi,r15
  418176:	mov    rsi,rax
  418179:	call   436750 <strcmp@plt+0x32fc8>
  41817e:	mov    rbp,rax
  418181:	test   rax,rax
  418184:	jne    4181c1 <strcmp@plt+0x14a39>
  418186:	lea    rdi,[rip+0xfffffffffffffd73]        # 417f00 <strcmp@plt+0x14778>
  41818d:	call   42bc00 <strcmp@plt+0x28478>
  418192:	mov    rbp,rax
  418195:	mov    rax,QWORD PTR [rsp+0x10]
  41819a:	mov    r15,QWORD PTR [rax+0x18]
  41819e:	mov    rax,QWORD PTR [rsp+0x8]
  4181a3:	mov    rdi,QWORD PTR [rax]
  4181a6:	call   423130 <strcmp@plt+0x1f9a8>
  4181ab:	mov    rdi,rax
  4181ae:	call   403700 <strdup@plt>
  4181b3:	mov    rdi,r15
  4181b6:	mov    rsi,rax
  4181b9:	mov    rdx,rbp
  4181bc:	call   4362a0 <strcmp@plt+0x32b18>
  4181c1:	mov    rdi,QWORD PTR [r14]
  4181c4:	mov    rsi,rbp
  4181c7:	call   42bcf0 <strcmp@plt+0x28568>
  4181cc:	cmp    DWORD PTR [r13+0x0],0x3
  4181d1:	jl     418204 <strcmp@plt+0x14a7c>
  4181d3:	mov    rdi,rbx
  4181d6:	call   4338a0 <strcmp@plt+0x30118>
  4181db:	mov    rbx,rax
  4181de:	mov    rax,QWORD PTR [rsp+0x8]
  4181e3:	mov    rdi,QWORD PTR [rax]
  4181e6:	call   423130 <strcmp@plt+0x1f9a8>
  4181eb:	mov    rcx,rax
  4181ee:	lea    rsi,[rip+0x2f9dc]        # 447bd1 <strcmp@plt+0x44449>
  4181f5:	mov    edi,0x7
  4181fa:	xor    eax,eax
  4181fc:	mov    rdx,rbx
  4181ff:	call   42e800 <strcmp@plt+0x2b078>
  418204:	lea    r15,[r14+0x8]
  418208:	mov    rax,QWORD PTR [rsp+0x8]
  41820d:	cmp    DWORD PTR [rax+0x10],0x1
  418211:	jne    418029 <strcmp@plt+0x148a1>
  418217:	mov    rdi,QWORD PTR [rax]
  41821a:	call   423200 <strcmp@plt+0x1fa78>
  41821f:	movzx  eax,ax
  418222:	cmp    eax,0xa
  418225:	je     4182cf <strcmp@plt+0x14b47>
  41822b:	cmp    eax,0x2
  41822e:	jne    418308 <strcmp@plt+0x14b80>
  418234:	mov    rbp,QWORD PTR [rsp+0x10]
  418239:	mov    rdi,QWORD PTR [rbp+0x18]
  41823d:	lea    rsi,[rip+0x2aa90]        # 442cd4 <strcmp@plt+0x3f54c>
  418244:	call   436750 <strcmp@plt+0x32fc8>
  418249:	mov    rbx,rax
  41824c:	test   rax,rax
  41824f:	jne    4182ec <strcmp@plt+0x14b64>
  418255:	call   42bbd0 <strcmp@plt+0x28448>
  41825a:	mov    rbx,rax
  41825d:	mov    rbp,QWORD PTR [rbp+0x18]
  418261:	lea    rdi,[rip+0x2aa6c]        # 442cd4 <strcmp@plt+0x3f54c>
  418268:	jmp    41834b <strcmp@plt+0x14bc3>
  41826d:	movzx  esi,WORD PTR [r14+0x18]
  418272:	movzx  edx,WORD PTR [r14+0x1a]
  418277:	mov    rcx,QWORD PTR [r15]
  41827a:	lea    rbx,[r14+0x10]
  41827e:	mov    r8,QWORD PTR [r14+0x10]
  418282:	mov    r9d,DWORD PTR [r14+0x28]
  418286:	mov    rdi,r12
  418289:	call   422ce0 <strcmp@plt+0x1f558>
  41828e:	jmp    418294 <strcmp@plt+0x14b0c>
  418290:	lea    rbx,[r14+0x10]
  418294:	mov    rax,QWORD PTR [r14+0x20]
  418298:	mov    edi,DWORD PTR [rax]
  41829a:	mov    rsi,QWORD PTR [r12+0x38]
  41829f:	mov    edx,DWORD PTR [r12+0x14]
  4182a4:	mov    rcx,QWORD PTR [rbx]
  4182a7:	call   435e90 <strcmp@plt+0x32708>
  4182ac:	mov    eax,0x1
  4182b1:	add    rsp,0x28
  4182b5:	pop    rbx
  4182b6:	pop    r12
  4182b8:	pop    r13
  4182ba:	pop    r14
  4182bc:	pop    r15
  4182be:	pop    rbp
  4182bf:	ret    
  4182c0:	mov    rdi,r12
  4182c3:	mov    rsi,QWORD PTR [rsp+0x20]
  4182c8:	call   418360 <strcmp@plt+0x14bd8>
  4182cd:	jmp    4182ac <strcmp@plt+0x14b24>
  4182cf:	mov    rbp,QWORD PTR [rsp+0x10]
  4182d4:	mov    rdi,QWORD PTR [rbp+0x18]
  4182d8:	lea    rsi,[rip+0x2b883]        # 443b62 <strcmp@plt+0x403da>
  4182df:	call   436750 <strcmp@plt+0x32fc8>
  4182e4:	mov    rbx,rax
  4182e7:	test   rax,rax
  4182ea:	je     418338 <strcmp@plt+0x14bb0>
  4182ec:	mov    rdi,QWORD PTR [r14]
  4182ef:	mov    rsi,rbx
  4182f2:	call   42bcf0 <strcmp@plt+0x28568>
  4182f7:	cmp    DWORD PTR [r13+0x0],0x3
  4182fc:	jge    41831b <strcmp@plt+0x14b93>
  4182fe:	mov    rax,QWORD PTR [rsp+0x8]
  418303:	jmp    418029 <strcmp@plt+0x148a1>
  418308:	cmp    DWORD PTR [r13+0x0],0x3
  41830d:	jl     4182ac <strcmp@plt+0x14b24>
  41830f:	lea    rsi,[rip+0x2f902]        # 447c18 <strcmp@plt+0x44490>
  418316:	jmp    418063 <strcmp@plt+0x148db>
  41831b:	lea    rsi,[rip+0x2f94d]        # 447c6f <strcmp@plt+0x444e7>
  418322:	mov    edi,0x7
  418327:	xor    eax,eax
  418329:	call   42e800 <strcmp@plt+0x2b078>
  41832e:	mov    rax,QWORD PTR [rsp+0x8]
  418333:	jmp    418029 <strcmp@plt+0x148a1>
  418338:	call   42bbd0 <strcmp@plt+0x28448>
  41833d:	mov    rbx,rax
  418340:	mov    rbp,QWORD PTR [rbp+0x18]
  418344:	lea    rdi,[rip+0x2b817]        # 443b62 <strcmp@plt+0x403da>
  41834b:	call   403700 <strdup@plt>
  418350:	mov    rdi,rbp
  418353:	mov    rsi,rax
  418356:	mov    rdx,rbx
  418359:	call   4362a0 <strcmp@plt+0x32b18>
  41835e:	jmp    4182ec <strcmp@plt+0x14b64>
  418360:	push   rbp
  418361:	push   r15
  418363:	push   r14
  418365:	push   rbx
  418366:	push   rax
  418367:	mov    rbx,rsi
  41836a:	mov    r14,rdi
  41836d:	lea    r15,[rip+0x4ca3c]        # 464db0 <strcmp@plt+0x61628>
  418374:	cmp    DWORD PTR [r15],0x3
  418378:	jl     41839b <strcmp@plt+0x14c13>
  41837a:	mov    rdi,rbx
  41837d:	call   423130 <strcmp@plt+0x1f9a8>
  418382:	mov    rcx,rax
  418385:	lea    rsi,[rip+0x2f7c5]        # 447b51 <strcmp@plt+0x443c9>
  41838c:	mov    edi,0x7
  418391:	xor    eax,eax
  418393:	mov    rdx,rcx
  418396:	call   42e800 <strcmp@plt+0x2b078>
  41839b:	mov    rdi,rbx
  41839e:	call   423200 <strcmp@plt+0x1fa78>
  4183a3:	movzx  ebp,ax
  4183a6:	mov    edi,ebp
  4183a8:	call   419a10 <strcmp@plt+0x16288>
  4183ad:	cmp    eax,0xfffffff7
  4183b0:	jne    4183da <strcmp@plt+0x14c52>
  4183b2:	cmp    DWORD PTR [r15],0x2
  4183b6:	jl     4183cd <strcmp@plt+0x14c45>
  4183b8:	lea    rsi,[rip+0x2f7b6]        # 447b75 <strcmp@plt+0x443ed>
  4183bf:	mov    edi,0x6
  4183c4:	xor    eax,eax
  4183c6:	mov    edx,ebp
  4183c8:	call   42e800 <strcmp@plt+0x2b078>
  4183cd:	xor    eax,eax
  4183cf:	add    rsp,0x8
  4183d3:	pop    rbx
  4183d4:	pop    r14
  4183d6:	pop    r15
  4183d8:	pop    rbp
  4183d9:	ret    
  4183da:	mov    rsi,QWORD PTR [r14+0x38]
  4183de:	mov    edx,DWORD PTR [r14+0x14]
  4183e2:	mov    edi,eax
  4183e4:	mov    rcx,rbx
  4183e7:	add    rsp,0x8
  4183eb:	pop    rbx
  4183ec:	pop    r14
  4183ee:	pop    r15
  4183f0:	pop    rbp
  4183f1:	jmp    435e90 <strcmp@plt+0x32708>
  4183f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418400:	push   r14
  418402:	push   rbx
  418403:	sub    rsp,0x58
  418407:	mov    rbx,rdi
  41840a:	lea    r14,[rip+0x5103f]        # 469450 <strcmp@plt+0x65cc8>
  418411:	lea    rsi,[rip+0x51078]        # 469490 <strcmp@plt+0x65d08>
  418418:	mov    edx,0x800
  41841d:	mov    rdi,r14
  418420:	call   42df10 <strcmp@plt+0x2a788>
  418425:	mov    esi,0x64
  41842a:	mov    rdi,r14
  41842d:	call   42e0c0 <strcmp@plt+0x2a938>
  418432:	mov    edi,DWORD PTR [rbx+0x18]
  418435:	mov    rsi,r14
  418438:	call   435170 <strcmp@plt+0x319e8>
  41843d:	cmp    eax,0x1
  418440:	jne    41848d <strcmp@plt+0x14d05>
  418442:	lea    rdi,[rip+0x51007]        # 469450 <strcmp@plt+0x65cc8>
  418449:	mov    eax,DWORD PTR [rip+0x51039]        # 469488 <strcmp@plt+0x65d00>
  41844f:	sub    eax,DWORD PTR [rip+0x5102b]        # 469480 <strcmp@plt+0x65cf8>
  418455:	mov    WORD PTR [rip+0x5100e],ax        # 46946a <strcmp@plt+0x65ce2>
  41845c:	lea    rsi,[rsp+0x8]
  418461:	call   433320 <strcmp@plt+0x2fb98>
  418466:	xor    ebx,ebx
  418468:	cmp    eax,0x1
  41846b:	jne    4184a2 <strcmp@plt+0x14d1a>
  41846d:	mov    DWORD PTR [rsp+0x50],0x0
  418475:	lea    rdi,[rip+0x50fd4]        # 469450 <strcmp@plt+0x65cc8>
  41847c:	lea    rsi,[rsp+0x8]
  418481:	call   417f20 <strcmp@plt+0x14798>
  418486:	mov    ebx,0x1
  41848b:	jmp    4184a2 <strcmp@plt+0x14d1a>
  41848d:	lea    rsi,[rip+0x2f697]        # 447b2b <strcmp@plt+0x443a3>
  418494:	xor    ebx,ebx
  418496:	mov    edi,0x3
  41849b:	xor    eax,eax
  41849d:	call   42e800 <strcmp@plt+0x2b078>
  4184a2:	mov    eax,ebx
  4184a4:	add    rsp,0x58
  4184a8:	pop    rbx
  4184a9:	pop    r14
  4184ab:	ret    
  4184ac:	nop    DWORD PTR [rax+0x0]
  4184b0:	push   rbp
  4184b1:	push   r15
  4184b3:	push   r14
  4184b5:	push   r12
  4184b7:	push   rbx
  4184b8:	sub    rsp,0xe0
  4184bf:	mov    r15d,esi
  4184c2:	mov    ebx,edi
  4184c4:	test   al,al
  4184c6:	je     41850a <strcmp@plt+0x14d82>
  4184c8:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  4184ce:	vmovaps XMMWORD PTR [rsp+0x70],xmm1
  4184d4:	vmovaps XMMWORD PTR [rsp+0x80],xmm2
  4184dd:	vmovaps XMMWORD PTR [rsp+0x90],xmm3
  4184e6:	vmovaps XMMWORD PTR [rsp+0xa0],xmm4
  4184ef:	vmovaps XMMWORD PTR [rsp+0xb0],xmm5
  4184f8:	vmovaps XMMWORD PTR [rsp+0xc0],xmm6
  418501:	vmovaps XMMWORD PTR [rsp+0xd0],xmm7
  41850a:	mov    QWORD PTR [rsp+0x58],r9
  41850f:	mov    QWORD PTR [rsp+0x50],r8
  418514:	mov    QWORD PTR [rsp+0x48],rcx
  418519:	mov    QWORD PTR [rsp+0x40],rdx
  41851e:	movabs rax,0x3000000010
  418528:	mov    QWORD PTR [rsp+0x10],rax
  41852d:	lea    rax,[rsp+0x30]
  418532:	mov    QWORD PTR [rsp+0x20],rax
  418537:	lea    rax,[rsp+0x110]
  41853f:	mov    QWORD PTR [rsp+0x18],rax
  418544:	movsxd rcx,DWORD PTR [rsp+0x10]
  418549:	cmp    rcx,0x28
  41854d:	ja     418560 <strcmp@plt+0x14dd8>
  41854f:	mov    rax,rcx
  418552:	add    rax,QWORD PTR [rsp+0x20]
  418557:	lea    ecx,[rcx+0x8]
  41855a:	mov    DWORD PTR [rsp+0x10],ecx
  41855e:	jmp    41856e <strcmp@plt+0x14de6>
  418560:	mov    rax,QWORD PTR [rsp+0x18]
  418565:	lea    rcx,[rax+0x8]
  418569:	mov    QWORD PTR [rsp+0x18],rcx
  41856e:	mov    r14,QWORD PTR [rax]
  418571:	lea    rsi,[rip+0x2f75f]        # 447cd7 <strcmp@plt+0x4454f>
  418578:	xor    ebp,ebp
  41857a:	xor    edi,edi
  41857c:	mov    edx,0x5a0
  418581:	call   42d830 <strcmp@plt+0x2a0a8>
  418586:	lea    r12,[rip+0x57f9f]        # 47052c <strcmp@plt+0x6cda4>
  41858d:	mov    DWORD PTR [r12],eax
  418591:	test   eax,eax
  418593:	jle    41871c <strcmp@plt+0x14f94>
  418599:	lea    rdi,[rip+0x2f737]        # 447cd7 <strcmp@plt+0x4454f>
  4185a0:	call   4030c0 <if_nametoindex@plt>
  4185a5:	lea    rcx,[rip+0x57f7c]        # 470528 <strcmp@plt+0x6cda0>
  4185ac:	mov    DWORD PTR [rcx],eax
  4185ae:	test   ebx,ebx
  4185b0:	je     4185c5 <strcmp@plt+0x14e3d>
  4185b2:	cmp    ebx,0x2
  4185b5:	je     418654 <strcmp@plt+0x14ecc>
  4185bb:	cmp    ebx,0x3
  4185be:	je     41861c <strcmp@plt+0x14e94>
  4185c0:	jmp    41871c <strcmp@plt+0x14f94>
  4185c5:	lea    rbx,[rip+0x2f70b]        # 447cd7 <strcmp@plt+0x4454f>
  4185cc:	mov    rdi,rbx
  4185cf:	call   4030c0 <if_nametoindex@plt>
  4185d4:	mov    DWORD PTR [rsp],0x64
  4185db:	mov    edi,0x2
  4185e0:	xor    edx,edx
  4185e2:	xor    ecx,ecx
  4185e4:	xor    r8d,r8d
  4185e7:	mov    r9d,0x64
  4185ed:	mov    esi,eax
  4185ef:	call   434a70 <strcmp@plt+0x312e8>
  4185f4:	mov    rdi,rbx
  4185f7:	call   4030c0 <if_nametoindex@plt>
  4185fc:	mov    DWORD PTR [rsp],0x64
  418603:	mov    edi,0xa
  418608:	xor    edx,edx
  41860a:	xor    ecx,ecx
  41860c:	xor    r8d,r8d
  41860f:	mov    r9d,0x64
  418615:	mov    esi,eax
  418617:	call   434a70 <strcmp@plt+0x312e8>
  41861c:	lea    rax,[rip+0x57ef5]        # 470518 <strcmp@plt+0x6cd90>
  418623:	mov    rdi,QWORD PTR [rax]
  418626:	mov    ecx,DWORD PTR [r12]
  41862a:	lea    rsi,[rip+0xfffffffffffffdcf]        # 418400 <strcmp@plt+0x14c78>
  418631:	xor    edx,edx
  418633:	call   434d30 <strcmp@plt+0x315a8>
  418638:	lea    rbx,[rip+0xfffffffffffff751]        # 417d90 <strcmp@plt+0x14608>
  41863f:	test   r15d,r15d
  418642:	je     418660 <strcmp@plt+0x14ed8>
  418644:	cmp    r15d,0x1
  418648:	jne    41871c <strcmp@plt+0x14f94>
  41864e:	mov    bp,0x12b6
  418652:	jmp    418664 <strcmp@plt+0x14edc>
  418654:	lea    rbx,[rip+0xfffffffffffff7e5]        # 417e40 <strcmp@plt+0x146b8>
  41865b:	test   r15d,r15d
  41865e:	jne    418644 <strcmp@plt+0x14ebc>
  418660:	mov    bp,0x10f5
  418664:	lea    r12,[rip+0x57e95]        # 470500 <strcmp@plt+0x6cd78>
  41866b:	cmp    DWORD PTR [r12],0xa
  418670:	je     41869c <strcmp@plt+0x14f14>
  418672:	movzx  esi,bp
  418675:	mov    edi,0x2
  41867a:	call   435050 <strcmp@plt+0x318c8>
  41867f:	lea    rcx,[rip+0x57e92]        # 470518 <strcmp@plt+0x6cd90>
  418686:	mov    rdi,QWORD PTR [rcx]
  418689:	xor    edx,edx
  41868b:	mov    rsi,rbx
  41868e:	mov    ecx,eax
  418690:	call   434d30 <strcmp@plt+0x315a8>
  418695:	cmp    DWORD PTR [r12],0x2
  41869a:	je     4186bf <strcmp@plt+0x14f37>
  41869c:	movzx  esi,bp
  41869f:	mov    edi,0xa
  4186a4:	call   435050 <strcmp@plt+0x318c8>
  4186a9:	lea    rcx,[rip+0x57e68]        # 470518 <strcmp@plt+0x6cd90>
  4186b0:	mov    rdi,QWORD PTR [rcx]
  4186b3:	xor    edx,edx
  4186b5:	mov    rsi,rbx
  4186b8:	mov    ecx,eax
  4186ba:	call   434d30 <strcmp@plt+0x315a8>
  4186bf:	mov    edi,0x40
  4186c4:	call   4320b0 <strcmp@plt+0x2e928>
  4186c9:	test   rax,rax
  4186cc:	je     418705 <strcmp@plt+0x14f7d>
  4186ce:	mov    rbx,rax
  4186d1:	mov    DWORD PTR [rax],r15d
  4186d4:	lea    rdi,[rip+0x13b75]        # 42c250 <strcmp@plt+0x28ac8>
  4186db:	call   436260 <strcmp@plt+0x32ad8>
  4186e0:	mov    QWORD PTR [rbx+0x18],rax
  4186e4:	lea    rsi,[rip+0xb055]        # 423740 <strcmp@plt+0x1ffb8>
  4186eb:	mov    rdi,r14
  4186ee:	call   42bc70 <strcmp@plt+0x284e8>
  4186f3:	mov    QWORD PTR [rbx+0x38],rax
  4186f7:	mov    rdi,rbx
  4186fa:	add    rdi,0x20
  4186fe:	call   4172f0 <strcmp@plt+0x13b68>
  418703:	jmp    418707 <strcmp@plt+0x14f7f>
  418705:	xor    ebx,ebx
  418707:	lea    rax,[rip+0x4c062]        # 464770 <strcmp@plt+0x60fe8>
  41870e:	mov    QWORD PTR [rax+0x70],rbx
  418712:	call   4198e0 <strcmp@plt+0x16158>
  418717:	mov    ebp,0x1
  41871c:	mov    eax,ebp
  41871e:	add    rsp,0xe0
  418725:	pop    rbx
  418726:	pop    r12
  418728:	pop    r14
  41872a:	pop    r15
  41872c:	pop    rbp
  41872d:	ret    
  41872e:	xchg   ax,ax
  418730:	push   rbp
  418731:	push   r15
  418733:	push   r14
  418735:	push   r13
  418737:	push   r12
  418739:	push   rbx
  41873a:	push   rax
  41873b:	mov    ebp,esi
  41873d:	mov    r12,rdi
  418740:	mov    r15d,DWORD PTR [rdi+0x8]
  418744:	lea    rax,[rip+0x4c025]        # 464770 <strcmp@plt+0x60fe8>
  41874b:	mov    r13,QWORD PTR [rax+0x70]
  41874f:	call   43abd0 <strcmp@plt+0x37448>
  418754:	xor    r14d,r14d
  418757:	test   rax,rax
  41875a:	je     4187f2 <strcmp@plt+0x1506a>
  418760:	mov    rbx,rax
  418763:	cmp    DWORD PTR [rax+0x18],0x0
  418767:	je     4187f2 <strcmp@plt+0x1506a>
  41876d:	mov    QWORD PTR [rsp],r13
  418771:	add    r15d,0xa
  418775:	mov    edi,ebp
  418777:	call   435700 <strcmp@plt+0x31f78>
  41877c:	mov    r13d,eax
  41877f:	xor    ecx,ecx
  418781:	mov    edi,eax
  418783:	mov    esi,ebp
  418785:	mov    rdx,rbx
  418788:	call   435d50 <strcmp@plt+0x325c8>
  41878d:	movzx  edx,r15b
  418791:	mov    r14d,0x1
  418797:	mov    esi,0x0
  41879c:	mov    r8d,0x1
  4187a2:	mov    edi,ebp
  4187a4:	mov    ecx,r15d
  4187a7:	mov    r9,rbx
  4187aa:	push   0x0
  4187ac:	push   0x0
  4187ae:	call   434730 <strcmp@plt+0x30fa8>
  4187b3:	add    rsp,0x10
  4187b7:	cmp    ebp,0xa
  4187ba:	je     4187d8 <strcmp@plt+0x15050>
  4187bc:	cmp    ebp,0x2
  4187bf:	jne    4187f2 <strcmp@plt+0x1506a>
  4187c1:	mov    DWORD PTR [r12+0x30],r13d
  4187c6:	mov    rax,QWORD PTR [rsp]
  4187ca:	test   rax,rax
  4187cd:	je     4187f2 <strcmp@plt+0x1506a>
  4187cf:	cmp    QWORD PTR [rax+0x8],0x0
  4187d4:	jne    4187f2 <strcmp@plt+0x1506a>
  4187d6:	jmp    4187ed <strcmp@plt+0x15065>
  4187d8:	mov    DWORD PTR [r12+0x34],r13d
  4187dd:	mov    rax,QWORD PTR [rsp]
  4187e1:	test   rax,rax
  4187e4:	je     4187f2 <strcmp@plt+0x1506a>
  4187e6:	cmp    QWORD PTR [rax+0x10],0x0
  4187eb:	jne    4187f2 <strcmp@plt+0x1506a>
  4187ed:	call   4198e0 <strcmp@plt+0x16158>
  4187f2:	mov    eax,r14d
  4187f5:	add    rsp,0x8
  4187f9:	pop    rbx
  4187fa:	pop    r12
  4187fc:	pop    r13
  4187fe:	pop    r14
  418800:	pop    r15
  418802:	pop    rbp
  418803:	ret    
  418804:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41880e:	xchg   ax,ax
  418810:	push   rbp
  418811:	push   r14
  418813:	push   rbx
  418814:	sub    rsp,0x10
  418818:	mov    r14d,esi
  41881b:	mov    rbx,rdi
  41881e:	mov    ebp,DWORD PTR [rdi+0x8]
  418821:	call   43abb0 <strcmp@plt+0x37428>
  418826:	xor    ecx,ecx
  418828:	test   rax,rax
  41882b:	je     418856 <strcmp@plt+0x150ce>
  41882d:	cmp    DWORD PTR [rax+0x18],0x0
  418831:	je     418856 <strcmp@plt+0x150ce>
  418833:	add    ebp,0xa
  418836:	mov    esi,DWORD PTR [rbx+0x8]
  418839:	mov    DWORD PTR [rsp],ebp
  41883c:	xor    edx,edx
  41883e:	xor    ecx,ecx
  418840:	mov    r9d,0x64
  418846:	mov    edi,r14d
  418849:	mov    r8,rax
  41884c:	call   434a70 <strcmp@plt+0x312e8>
  418851:	mov    ecx,0x1
  418856:	mov    eax,ecx
  418858:	add    rsp,0x10
  41885c:	pop    rbx
  41885d:	pop    r14
  41885f:	pop    rbp
  418860:	ret    
  418861:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41886b:	nop    DWORD PTR [rax+rax*1+0x0]
  418870:	push   rbp
  418871:	push   r15
  418873:	push   r14
  418875:	push   r13
  418877:	push   r12
  418879:	push   rbx
  41887a:	push   rax
  41887b:	mov    ebx,edi
  41887d:	mov    rdi,rsi
  418880:	call   4230e0 <strcmp@plt+0x1f958>
  418885:	mov    r15,rax
  418888:	mov    rdi,rax
  41888b:	call   423200 <strcmp@plt+0x1fa78>
  418890:	test   ax,ax
  418893:	je     41892a <strcmp@plt+0x151a2>
  418899:	cmp    ebx,0x3
  41889c:	je     41892e <strcmp@plt+0x151a6>
  4188a2:	test   ebx,ebx
  4188a4:	jne    418997 <strcmp@plt+0x1520f>
  4188aa:	mov    r12d,eax
  4188ad:	movzx  edi,ax
  4188b0:	lea    rax,[rip+0x4beb9]        # 464770 <strcmp@plt+0x60fe8>
  4188b7:	mov    r13,QWORD PTR [rax+0x70]
  4188bb:	mov    rax,QWORD PTR [r13+0x38]
  4188bf:	cmp    DWORD PTR [rax+0x18],0x0
  4188c3:	mov    DWORD PTR [rsp+0x4],edi
  4188c7:	je     418938 <strcmp@plt+0x151b0>
  4188c9:	mov    r14,QWORD PTR [rax+0x8]
  4188cd:	cmp    r14,rax
  4188d0:	je     418964 <strcmp@plt+0x151dc>
  4188d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4188e0:	mov    rbx,QWORD PTR [r14+0x10]
  4188e4:	mov    rdi,rbx
  4188e7:	call   423200 <strcmp@plt+0x1fa78>
  4188ec:	cmp    ax,r12w
  4188f0:	jne    41891e <strcmp@plt+0x15196>
  4188f2:	xor    ebp,ebp
  4188f4:	xor    esi,esi
  4188f6:	mov    edx,0x64
  4188fb:	mov    ecx,0x64
  418900:	mov    r8d,0x1
  418906:	mov    edi,DWORD PTR [rsp+0x4]
  41890a:	mov    r9,r15
  41890d:	push   0x0
  41890f:	push   rbx
  418910:	call   434730 <strcmp@plt+0x30fa8>
  418915:	add    rsp,0x10
  418919:	cmp    eax,0x1
  41891c:	jne    41899c <strcmp@plt+0x15214>
  41891e:	mov    r14,QWORD PTR [r14+0x8]
  418922:	cmp    r14,QWORD PTR [r13+0x38]
  418926:	jne    4188e0 <strcmp@plt+0x15158>
  418928:	jmp    418964 <strcmp@plt+0x151dc>
  41892a:	xor    ebp,ebp
  41892c:	jmp    41899c <strcmp@plt+0x15214>
  41892e:	mov    rdi,r15
  418931:	call   4195e0 <strcmp@plt+0x15e58>
  418936:	jmp    418997 <strcmp@plt+0x1520f>
  418938:	xor    ebp,ebp
  41893a:	mov    esi,0x0
  41893f:	mov    edx,0x64
  418944:	mov    ecx,0x64
  418949:	mov    r8d,0x1
  41894f:	mov    r9,r15
  418952:	push   0x0
  418954:	push   0x0
  418956:	call   434730 <strcmp@plt+0x30fa8>
  41895b:	add    rsp,0x10
  41895f:	cmp    eax,0x1
  418962:	jne    41899c <strcmp@plt+0x15214>
  418964:	xor    ebp,ebp
  418966:	mov    esi,0x0
  41896b:	mov    edx,0xfe
  418970:	mov    ecx,0x63
  418975:	mov    r8d,0x1
  41897b:	mov    r9d,0x0
  418981:	mov    edi,DWORD PTR [rsp+0x4]
  418985:	push   0x0
  418987:	push   r15
  418989:	call   434730 <strcmp@plt+0x30fa8>
  41898e:	add    rsp,0x10
  418992:	cmp    eax,0x1
  418995:	jne    41899c <strcmp@plt+0x15214>
  418997:	mov    ebp,0x1
  41899c:	mov    eax,ebp
  41899e:	add    rsp,0x8
  4189a2:	pop    rbx
  4189a3:	pop    r12
  4189a5:	pop    r13
  4189a7:	pop    r14
  4189a9:	pop    r15
  4189ab:	pop    rbp
  4189ac:	ret    
  4189ad:	nop    DWORD PTR [rax]
  4189b0:	push   rbp
  4189b1:	push   r15
  4189b3:	push   r14
  4189b5:	push   r13
  4189b7:	push   r12
  4189b9:	push   rbx
  4189ba:	push   rax
  4189bb:	mov    ebx,edi
  4189bd:	mov    rdi,rsi
  4189c0:	call   4230e0 <strcmp@plt+0x1f958>
  4189c5:	mov    r15,rax
  4189c8:	mov    rdi,rax
  4189cb:	call   423200 <strcmp@plt+0x1fa78>
  4189d0:	test   ax,ax
  4189d3:	je     418a6a <strcmp@plt+0x152e2>
  4189d9:	cmp    ebx,0x3
  4189dc:	je     418a6e <strcmp@plt+0x152e6>
  4189e2:	test   ebx,ebx
  4189e4:	jne    418ad7 <strcmp@plt+0x1534f>
  4189ea:	mov    r12d,eax
  4189ed:	movzx  edi,ax
  4189f0:	lea    rax,[rip+0x4bd79]        # 464770 <strcmp@plt+0x60fe8>
  4189f7:	mov    r13,QWORD PTR [rax+0x70]
  4189fb:	mov    rax,QWORD PTR [r13+0x38]
  4189ff:	cmp    DWORD PTR [rax+0x18],0x0
  418a03:	mov    DWORD PTR [rsp+0x4],edi
  418a07:	je     418a78 <strcmp@plt+0x152f0>
  418a09:	mov    r14,QWORD PTR [rax+0x8]
  418a0d:	cmp    r14,rax
  418a10:	je     418aa4 <strcmp@plt+0x1531c>
  418a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418a20:	mov    rbx,QWORD PTR [r14+0x10]
  418a24:	mov    rdi,rbx
  418a27:	call   423200 <strcmp@plt+0x1fa78>
  418a2c:	cmp    ax,r12w
  418a30:	jne    418a5e <strcmp@plt+0x152d6>
  418a32:	xor    ebp,ebp
  418a34:	xor    esi,esi
  418a36:	mov    edx,0x64
  418a3b:	mov    ecx,0x64
  418a40:	mov    r8d,0x1
  418a46:	mov    edi,DWORD PTR [rsp+0x4]
  418a4a:	mov    r9,r15
  418a4d:	push   0x0
  418a4f:	push   rbx
  418a50:	call   4347c0 <strcmp@plt+0x31038>
  418a55:	add    rsp,0x10
  418a59:	cmp    eax,0x1
  418a5c:	jne    418adc <strcmp@plt+0x15354>
  418a5e:	mov    r14,QWORD PTR [r14+0x8]
  418a62:	cmp    r14,QWORD PTR [r13+0x38]
  418a66:	jne    418a20 <strcmp@plt+0x15298>
  418a68:	jmp    418aa4 <strcmp@plt+0x1531c>
  418a6a:	xor    ebp,ebp
  418a6c:	jmp    418adc <strcmp@plt+0x15354>
  418a6e:	mov    rdi,r15
  418a71:	call   4196b0 <strcmp@plt+0x15f28>
  418a76:	jmp    418ad7 <strcmp@plt+0x1534f>
  418a78:	xor    ebp,ebp
  418a7a:	mov    esi,0x0
  418a7f:	mov    edx,0x64
  418a84:	mov    ecx,0x64
  418a89:	mov    r8d,0x1
  418a8f:	mov    r9,r15
  418a92:	push   0x0
  418a94:	push   0x0
  418a96:	call   4347c0 <strcmp@plt+0x31038>
  418a9b:	add    rsp,0x10
  418a9f:	cmp    eax,0x1
  418aa2:	jne    418adc <strcmp@plt+0x15354>
  418aa4:	xor    ebp,ebp
  418aa6:	mov    esi,0x0
  418aab:	mov    edx,0xfe
  418ab0:	mov    ecx,0x63
  418ab5:	mov    r8d,0x1
  418abb:	mov    r9d,0x0
  418ac1:	mov    edi,DWORD PTR [rsp+0x4]
  418ac5:	push   0x0
  418ac7:	push   r15
  418ac9:	call   4347c0 <strcmp@plt+0x31038>
  418ace:	add    rsp,0x10
  418ad2:	cmp    eax,0x1
  418ad5:	jne    418adc <strcmp@plt+0x15354>
  418ad7:	mov    ebp,0x1
  418adc:	mov    eax,ebp
  418ade:	add    rsp,0x8
  418ae2:	pop    rbx
  418ae3:	pop    r12
  418ae5:	pop    r13
  418ae7:	pop    r14
  418ae9:	pop    r15
  418aeb:	pop    rbp
  418aec:	ret    
  418aed:	nop    DWORD PTR [rax]
  418af0:	push   rbp
  418af1:	push   r15
  418af3:	push   r14
  418af5:	push   rbx
  418af6:	push   rax
  418af7:	mov    r15,r8
  418afa:	mov    rbx,rcx
  418afd:	mov    r14,rsi
  418b00:	mov    ebp,edi
  418b02:	mov    rdi,r8
  418b05:	call   423200 <strcmp@plt+0x1fa78>
  418b0a:	cmp    ebp,0x1
  418b0d:	jne    418b77 <strcmp@plt+0x153ef>
  418b0f:	test   ax,ax
  418b12:	je     418c67 <strcmp@plt+0x154df>
  418b18:	mov    rdi,rbx
  418b1b:	call   423200 <strcmp@plt+0x1fa78>
  418b20:	test   ax,ax
  418b23:	jne    418c67 <strcmp@plt+0x154df>
  418b29:	mov    rdi,r15
  418b2c:	call   424790 <strcmp@plt+0x21008>
  418b31:	lea    rcx,[rip+0x4c278]        # 464db0 <strcmp@plt+0x61628>
  418b38:	mov    ecx,DWORD PTR [rcx]
  418b3a:	cmp    eax,0x1
  418b3d:	je     418ba7 <strcmp@plt+0x1541f>
  418b3f:	test   ecx,ecx
  418b41:	jle    418b67 <strcmp@plt+0x153df>
  418b43:	mov    rbx,QWORD PTR [r14]
  418b46:	mov    rdi,r15
  418b49:	call   423130 <strcmp@plt+0x1f9a8>
  418b4e:	mov    rcx,rax
  418b51:	lea    rsi,[rip+0x2f1f0]        # 447d48 <strcmp@plt+0x445c0>
  418b58:	mov    edi,0x5
  418b5d:	xor    eax,eax
  418b5f:	mov    rdx,rbx
  418b62:	call   42e800 <strcmp@plt+0x2b078>
  418b67:	mov    rdi,r14
  418b6a:	mov    rsi,r15
  418b6d:	call   419780 <strcmp@plt+0x15ff8>
  418b72:	jmp    418c67 <strcmp@plt+0x154df>
  418b77:	test   ax,ax
  418b7a:	je     418c67 <strcmp@plt+0x154df>
  418b80:	mov    rdi,rbx
  418b83:	call   423200 <strcmp@plt+0x1fa78>
  418b88:	test   ax,ax
  418b8b:	jne    418c67 <strcmp@plt+0x154df>
  418b91:	mov    rdi,r15
  418b94:	call   424790 <strcmp@plt+0x21008>
  418b99:	lea    rcx,[rip+0x4c210]        # 464db0 <strcmp@plt+0x61628>
  418ba0:	mov    ecx,DWORD PTR [rcx]
  418ba2:	cmp    eax,0x1
  418ba5:	jne    418bd6 <strcmp@plt+0x1544e>
  418ba7:	cmp    ecx,0x3
  418baa:	jl     418c67 <strcmp@plt+0x154df>
  418bb0:	mov    rdi,r15
  418bb3:	call   423130 <strcmp@plt+0x1f9a8>
  418bb8:	mov    rcx,rax
  418bbb:	lea    rsi,[rip+0x2f11e]        # 447ce0 <strcmp@plt+0x44558>
  418bc2:	mov    edi,0x7
  418bc7:	xor    eax,eax
  418bc9:	mov    rdx,rcx
  418bcc:	call   42e800 <strcmp@plt+0x2b078>
  418bd1:	jmp    418c67 <strcmp@plt+0x154df>
  418bd6:	test   ecx,ecx
  418bd8:	jle    418bfe <strcmp@plt+0x15476>
  418bda:	mov    rbx,QWORD PTR [r14]
  418bdd:	mov    rdi,r15
  418be0:	call   423130 <strcmp@plt+0x1f9a8>
  418be5:	mov    rcx,rax
  418be8:	lea    rsi,[rip+0x2f1a3]        # 447d92 <strcmp@plt+0x4460a>
  418bef:	mov    edi,0x5
  418bf4:	xor    eax,eax
  418bf6:	mov    rdx,rbx
  418bf9:	call   42e800 <strcmp@plt+0x2b078>
  418bfe:	mov    ebp,DWORD PTR [r14+0x8]
  418c02:	mov    rdi,r15
  418c05:	call   423200 <strcmp@plt+0x1fa78>
  418c0a:	movzx  eax,ax
  418c0d:	cmp    eax,0xa
  418c10:	je     418c22 <strcmp@plt+0x1549a>
  418c12:	cmp    eax,0x2
  418c15:	jne    418c67 <strcmp@plt+0x154df>
  418c17:	lea    rbx,[r14+0x20]
  418c1b:	mov    edi,0x2
  418c20:	jmp    418c2b <strcmp@plt+0x154a3>
  418c22:	lea    rbx,[r14+0x28]
  418c26:	mov    edi,0xa
  418c2b:	mov    rax,QWORD PTR [rbx]
  418c2e:	test   rax,rax
  418c31:	je     418c67 <strcmp@plt+0x154df>
  418c33:	cmp    DWORD PTR [rax+0x18],0x0
  418c37:	je     418c67 <strcmp@plt+0x154df>
  418c39:	add    ebp,0xa
  418c3c:	mov    esi,DWORD PTR [r14+0x8]
  418c40:	mov    DWORD PTR [rsp],ebp
  418c43:	xor    edx,edx
  418c45:	xor    ecx,ecx
  418c47:	mov    r9d,0x64
  418c4d:	mov    r8,r15
  418c50:	call   434b30 <strcmp@plt+0x313a8>
  418c55:	mov    rdi,QWORD PTR [rbx]
  418c58:	call   422fa0 <strcmp@plt+0x1f818>
  418c5d:	xor    edi,edi
  418c5f:	call   422ef0 <strcmp@plt+0x1f768>
  418c64:	mov    QWORD PTR [rbx],rax
  418c67:	mov    eax,0x1
  418c6c:	add    rsp,0x8
  418c70:	pop    rbx
  418c71:	pop    r14
  418c73:	pop    r15
  418c75:	pop    rbp
  418c76:	ret    
  418c77:	nop    WORD PTR [rax+rax*1+0x0]
  418c80:	push   rbp
  418c81:	push   r15
  418c83:	push   r14
  418c85:	push   r13
  418c87:	push   r12
  418c89:	push   rbx
  418c8a:	sub    rsp,0x18
  418c8e:	mov    r15,rsi
  418c91:	mov    r14,rdi
  418c94:	lea    rax,[rip+0x4bad5]        # 464770 <strcmp@plt+0x60fe8>
  418c9b:	mov    rbp,QWORD PTR [rax+0x70]
  418c9f:	mov    r12d,DWORD PTR [rdi+0x8]
  418ca3:	add    r12d,0xa
  418ca7:	cmp    DWORD PTR [rdx+0x18],0x0
  418cab:	je     418d0b <strcmp@plt+0x15583>
  418cad:	mov    rbx,rdx
  418cb0:	mov    QWORD PTR [rsp+0x10],rbp
  418cb5:	mov    ebp,DWORD PTR [r15+0x18]
  418cb9:	mov    rdi,rdx
  418cbc:	call   423200 <strcmp@plt+0x1fa78>
  418cc1:	mov    WORD PTR [rsp+0xe],ax
  418cc6:	movzx  r13d,ax
  418cca:	mov    rdi,r15
  418ccd:	mov    rsi,rbx
  418cd0:	call   423970 <strcmp@plt+0x201e8>
  418cd5:	test   eax,eax
  418cd7:	je     418d4c <strcmp@plt+0x155c4>
  418cd9:	test   ebp,ebp
  418cdb:	je     418daa <strcmp@plt+0x15622>
  418ce1:	cmp    r13d,0xa
  418ce5:	je     418e87 <strcmp@plt+0x156ff>
  418ceb:	mov    ecx,r13d
  418cee:	xor    r13d,r13d
  418cf1:	movzx  eax,WORD PTR [rsp+0xe]
  418cf6:	cmp    eax,0x2
  418cf9:	jne    418ef6 <strcmp@plt+0x1576e>
  418cff:	add    r14,0x30
  418d03:	mov    r13d,ecx
  418d06:	jmp    418e8b <strcmp@plt+0x15703>
  418d0b:	mov    rdi,r15
  418d0e:	call   423200 <strcmp@plt+0x1fa78>
  418d13:	movzx  ebx,ax
  418d16:	cmp    ebx,0xa
  418d19:	je     418e1f <strcmp@plt+0x15697>
  418d1f:	cmp    ebx,0x2
  418d22:	jne    418e3a <strcmp@plt+0x156b2>
  418d28:	mov    edi,DWORD PTR [r14+0x30]
  418d2c:	call   403760 <close@plt>
  418d31:	mov    DWORD PTR [r14+0x30],0x0
  418d39:	add    rbp,0x8
  418d3d:	cmp    QWORD PTR [rbp+0x0],r14
  418d41:	jne    418e5e <strcmp@plt+0x156d6>
  418d47:	jmp    418e3a <strcmp@plt+0x156b2>
  418d4c:	mov    ebp,r13d
  418d4f:	lea    rax,[rip+0x4c05a]        # 464db0 <strcmp@plt+0x61628>
  418d56:	cmp    DWORD PTR [rax],0x2
  418d59:	jl     418d7f <strcmp@plt+0x155f7>
  418d5b:	mov    r15,QWORD PTR [r14]
  418d5e:	mov    rdi,rbx
  418d61:	call   423130 <strcmp@plt+0x1f9a8>
  418d66:	mov    rcx,rax
  418d69:	lea    rsi,[rip+0x2f0b8]        # 447e28 <strcmp@plt+0x446a0>
  418d70:	mov    edi,0x6
  418d75:	xor    eax,eax
  418d77:	mov    rdx,r15
  418d7a:	call   42e800 <strcmp@plt+0x2b078>
  418d7f:	mov    r13d,0x1
  418d85:	cmp    ebp,0xa
  418d88:	je     418ee3 <strcmp@plt+0x1575b>
  418d8e:	movzx  eax,WORD PTR [rsp+0xe]
  418d93:	cmp    eax,0x2
  418d96:	jne    418ef6 <strcmp@plt+0x1576e>
  418d9c:	mov    edi,DWORD PTR [r14+0x30]
  418da0:	mov    esi,0x2
  418da5:	jmp    418eec <strcmp@plt+0x15764>
  418daa:	lea    r15,[rip+0x4bfff]        # 464db0 <strcmp@plt+0x61628>
  418db1:	cmp    DWORD PTR [r15],0x2
  418db5:	jl     418dd8 <strcmp@plt+0x15650>
  418db7:	mov    rdi,rbx
  418dba:	call   423130 <strcmp@plt+0x1f9a8>
  418dbf:	mov    rcx,rax
  418dc2:	lea    rsi,[rip+0x2f0b5]        # 447e7e <strcmp@plt+0x446f6>
  418dc9:	mov    edi,0x6
  418dce:	xor    eax,eax
  418dd0:	mov    rdx,rcx
  418dd3:	call   42e800 <strcmp@plt+0x2b078>
  418dd8:	cmp    r13d,0xa
  418ddc:	je     418f08 <strcmp@plt+0x15780>
  418de2:	mov    ebp,r13d
  418de5:	xor    r13d,r13d
  418de8:	movzx  eax,WORD PTR [rsp+0xe]
  418ded:	cmp    eax,0x2
  418df0:	jne    418ef6 <strcmp@plt+0x1576e>
  418df6:	mov    edi,0x2
  418dfb:	call   435700 <strcmp@plt+0x31f78>
  418e00:	mov    ecx,eax
  418e02:	mov    DWORD PTR [r14+0x30],eax
  418e06:	mov    r13d,ebp
  418e09:	cmp    BYTE PTR [r14+0xc],0x1
  418e0e:	je     418f23 <strcmp@plt+0x1579b>
  418e14:	mov    ebp,r13d
  418e17:	mov    r14d,ecx
  418e1a:	jmp    418eb3 <strcmp@plt+0x1572b>
  418e1f:	mov    edi,DWORD PTR [r14+0x34]
  418e23:	call   403760 <close@plt>
  418e28:	mov    DWORD PTR [r14+0x34],0x0
  418e30:	add    rbp,0x10
  418e34:	cmp    QWORD PTR [rbp+0x0],r14
  418e38:	jne    418e5e <strcmp@plt+0x156d6>
  418e3a:	lea    rax,[rip+0x4bf6f]        # 464db0 <strcmp@plt+0x61628>
  418e41:	cmp    DWORD PTR [rax],0x2
  418e44:	jl     418e59 <strcmp@plt+0x156d1>
  418e46:	lea    rsi,[rip+0x2ef92]        # 447ddf <strcmp@plt+0x44657>
  418e4d:	mov    edi,0x6
  418e52:	xor    eax,eax
  418e54:	call   42e800 <strcmp@plt+0x2b078>
  418e59:	call   4198e0 <strcmp@plt+0x16158>
  418e5e:	movzx  edx,r12b
  418e62:	mov    r13d,0x1
  418e68:	xor    esi,esi
  418e6a:	mov    r8d,0x1
  418e70:	mov    edi,ebx
  418e72:	mov    ecx,r12d
  418e75:	mov    r9,r15
  418e78:	push   0x0
  418e7a:	push   0x0
  418e7c:	call   4347c0 <strcmp@plt+0x31038>
  418e81:	add    rsp,0x10
  418e85:	jmp    418ef6 <strcmp@plt+0x1576e>
  418e87:	add    r14,0x34
  418e8b:	mov    r14d,DWORD PTR [r14]
  418e8e:	movzx  edx,r12b
  418e92:	xor    esi,esi
  418e94:	mov    r8d,0x1
  418e9a:	mov    edi,r13d
  418e9d:	mov    ecx,r12d
  418ea0:	mov    r9,r15
  418ea3:	push   0x0
  418ea5:	push   0x0
  418ea7:	call   4347c0 <strcmp@plt+0x31038>
  418eac:	add    rsp,0x10
  418eb0:	mov    ebp,r13d
  418eb3:	movzx  edx,r12b
  418eb7:	mov    r13d,0x1
  418ebd:	xor    esi,esi
  418ebf:	mov    r8d,0x1
  418ec5:	mov    edi,ebp
  418ec7:	mov    ecx,r12d
  418eca:	mov    r9,rbx
  418ecd:	push   0x0
  418ecf:	push   0x0
  418ed1:	call   434730 <strcmp@plt+0x30fa8>
  418ed6:	add    rsp,0x10
  418eda:	xor    ecx,ecx
  418edc:	mov    edi,r14d
  418edf:	mov    esi,ebp
  418ee1:	jmp    418eee <strcmp@plt+0x15766>
  418ee3:	mov    edi,DWORD PTR [r14+0x34]
  418ee7:	mov    esi,0xa
  418eec:	xor    ecx,ecx
  418eee:	mov    rdx,rbx
  418ef1:	call   435d50 <strcmp@plt+0x325c8>
  418ef6:	mov    eax,r13d
  418ef9:	add    rsp,0x18
  418efd:	pop    rbx
  418efe:	pop    r12
  418f00:	pop    r13
  418f02:	pop    r14
  418f04:	pop    r15
  418f06:	pop    rbp
  418f07:	ret    
  418f08:	mov    edi,0xa
  418f0d:	call   435700 <strcmp@plt+0x31f78>
  418f12:	mov    ecx,eax
  418f14:	mov    DWORD PTR [r14+0x34],eax
  418f18:	cmp    BYTE PTR [r14+0xc],0x1
  418f1d:	jne    418e14 <strcmp@plt+0x1568c>
  418f23:	cmp    r13d,0x2
  418f27:	mov    r14d,ecx
  418f2a:	jne    418f3a <strcmp@plt+0x157b2>
  418f2c:	mov    rax,QWORD PTR [rsp+0x10]
  418f31:	mov    rax,QWORD PTR [rax+0x8]
  418f35:	test   rax,rax
  418f38:	je     418f56 <strcmp@plt+0x157ce>
  418f3a:	cmp    r13d,0xa
  418f3e:	jne    418eb0 <strcmp@plt+0x15728>
  418f44:	mov    rax,QWORD PTR [rsp+0x10]
  418f49:	mov    rax,QWORD PTR [rax+0x10]
  418f4d:	test   rax,rax
  418f50:	jne    418eb0 <strcmp@plt+0x15728>
  418f56:	mov    ebp,r13d
  418f59:	cmp    DWORD PTR [r15],0x2
  418f5d:	jl     418f72 <strcmp@plt+0x157ea>
  418f5f:	lea    rsi,[rip+0x2ef5e]        # 447ec4 <strcmp@plt+0x4473c>
  418f66:	mov    edi,0x6
  418f6b:	xor    eax,eax
  418f6d:	call   42e800 <strcmp@plt+0x2b078>
  418f72:	call   4198e0 <strcmp@plt+0x16158>
  418f77:	jmp    418eb3 <strcmp@plt+0x1572b>
  418f7c:	nop    DWORD PTR [rax+0x0]
  418f80:	push   rbp
  418f81:	push   r15
  418f83:	push   r14
  418f85:	push   rbx
  418f86:	push   rax
  418f87:	mov    rbx,rdi
  418f8a:	lea    rax,[rip+0x4b7df]        # 464770 <strcmp@plt+0x60fe8>
  418f91:	mov    r15,QWORD PTR [rax+0x70]
  418f95:	cmp    esi,edx
  418f97:	je     4190cc <strcmp@plt+0x15944>
  418f9d:	mov    r14d,edx
  418fa0:	mov    ebp,esi
  418fa2:	lea    rax,[rip+0x4be07]        # 464db0 <strcmp@plt+0x61628>
  418fa9:	cmp    DWORD PTR [rax],0x2
  418fac:	jl     418fc7 <strcmp@plt+0x1583f>
  418fae:	mov    rdx,QWORD PTR [rbx]
  418fb1:	mov    ecx,DWORD PTR [rbx+0x8]
  418fb4:	lea    rsi,[rip+0x2ef47]        # 447f02 <strcmp@plt+0x4477a>
  418fbb:	mov    edi,0x6
  418fc0:	xor    eax,eax
  418fc2:	call   42e800 <strcmp@plt+0x2b078>
  418fc7:	add    ebp,0xa
  418fca:	add    r14d,0xa
  418fce:	mov    r9,QWORD PTR [rbx+0x10]
  418fd2:	test   r9,r9
  418fd5:	je     41904d <strcmp@plt+0x158c5>
  418fd7:	cmp    DWORD PTR [r9+0x18],0x0
  418fdc:	je     41904d <strcmp@plt+0x158c5>
  418fde:	movzx  edx,bpl
  418fe2:	mov    edi,0x2
  418fe7:	xor    esi,esi
  418fe9:	mov    r8d,0x1
  418fef:	mov    ecx,ebp
  418ff1:	push   0x0
  418ff3:	push   0x0
  418ff5:	call   4347c0 <strcmp@plt+0x31038>
  418ffa:	add    rsp,0x10
  418ffe:	mov    r9,QWORD PTR [rbx+0x10]
  419002:	movzx  edx,r14b
  419006:	mov    edi,0x2
  41900b:	mov    esi,0x0
  419010:	mov    r8d,0x1
  419016:	mov    ecx,r14d
  419019:	push   0x0
  41901b:	push   0x0
  41901d:	call   434730 <strcmp@plt+0x30fa8>
  419022:	add    rsp,0x10
  419026:	mov    edi,DWORD PTR [rbx+0x30]
  419029:	call   403760 <close@plt>
  41902e:	mov    edi,0x2
  419033:	call   435700 <strcmp@plt+0x31f78>
  419038:	mov    DWORD PTR [rbx+0x30],eax
  41903b:	mov    rdx,QWORD PTR [rbx+0x10]
  41903f:	mov    esi,0x2
  419044:	xor    ecx,ecx
  419046:	mov    edi,eax
  419048:	call   435d50 <strcmp@plt+0x325c8>
  41904d:	mov    r9,QWORD PTR [rbx+0x18]
  419051:	test   r9,r9
  419054:	je     4190cc <strcmp@plt+0x15944>
  419056:	cmp    DWORD PTR [r9+0x18],0x0
  41905b:	je     4190cc <strcmp@plt+0x15944>
  41905d:	movzx  edx,bpl
  419061:	mov    edi,0xa
  419066:	xor    esi,esi
  419068:	mov    r8d,0x1
  41906e:	mov    ecx,ebp
  419070:	push   0x0
  419072:	push   0x0
  419074:	call   4347c0 <strcmp@plt+0x31038>
  419079:	add    rsp,0x10
  41907d:	mov    r9,QWORD PTR [rbx+0x18]
  419081:	movzx  edx,r14b
  419085:	mov    edi,0xa
  41908a:	mov    esi,0x0
  41908f:	mov    r8d,0x1
  419095:	mov    ecx,r14d
  419098:	push   0x0
  41909a:	push   0x0
  41909c:	call   434730 <strcmp@plt+0x30fa8>
  4190a1:	add    rsp,0x10
  4190a5:	mov    edi,DWORD PTR [rbx+0x34]
  4190a8:	call   403760 <close@plt>
  4190ad:	mov    edi,0xa
  4190b2:	call   435700 <strcmp@plt+0x31f78>
  4190b7:	mov    DWORD PTR [rbx+0x34],eax
  4190ba:	mov    rdx,QWORD PTR [rbx+0x18]
  4190be:	mov    esi,0xa
  4190c3:	xor    ecx,ecx
  4190c5:	mov    edi,eax
  4190c7:	call   435d50 <strcmp@plt+0x325c8>
  4190cc:	mov    rax,QWORD PTR [r15+0x8]
  4190d0:	cmp    rax,rbx
  4190d3:	je     4190e8 <strcmp@plt+0x15960>
  4190d5:	mov    rcx,QWORD PTR [r15+0x10]
  4190d9:	test   rcx,rcx
  4190dc:	je     4190e8 <strcmp@plt+0x15960>
  4190de:	test   rax,rax
  4190e1:	je     4190e8 <strcmp@plt+0x15960>
  4190e3:	cmp    rcx,rbx
  4190e6:	jne    41910c <strcmp@plt+0x15984>
  4190e8:	lea    rax,[rip+0x4bcc1]        # 464db0 <strcmp@plt+0x61628>
  4190ef:	cmp    DWORD PTR [rax],0x2
  4190f2:	jl     419107 <strcmp@plt+0x1597f>
  4190f4:	lea    rsi,[rip+0x2ee56]        # 447f51 <strcmp@plt+0x447c9>
  4190fb:	mov    edi,0x6
  419100:	xor    eax,eax
  419102:	call   42e800 <strcmp@plt+0x2b078>
  419107:	call   4198e0 <strcmp@plt+0x16158>
  41910c:	mov    eax,0x1
  419111:	add    rsp,0x8
  419115:	pop    rbx
  419116:	pop    r14
  419118:	pop    r15
  41911a:	pop    rbp
  41911b:	ret    
  41911c:	nop    DWORD PTR [rax+0x0]
  419120:	push   rbp
  419121:	push   r15
  419123:	push   r14
  419125:	push   r13
  419127:	push   r12
  419129:	push   rbx
  41912a:	push   rax
  41912b:	mov    ebp,esi
  41912d:	call   423130 <strcmp@plt+0x1f9a8>
  419132:	mov    r14,rax
  419135:	lea    rax,[rip+0x4b634]        # 464770 <strcmp@plt+0x60fe8>
  41913c:	mov    rbx,QWORD PTR [rax+0x70]
  419140:	test   bpl,bpl
  419143:	je     419176 <strcmp@plt+0x159ee>
  419145:	mov    rdi,QWORD PTR [rbx+0x18]
  419149:	call   436870 <strcmp@plt+0x330e8>
  41914e:	lea    rdi,[rip+0x130fb]        # 42c250 <strcmp@plt+0x28ac8>
  419155:	call   436260 <strcmp@plt+0x32ad8>
  41915a:	mov    QWORD PTR [rbx+0x18],rax
  41915e:	mov    r15d,0x1
  419164:	mov    eax,r15d
  419167:	add    rsp,0x8
  41916b:	pop    rbx
  41916c:	pop    r12
  41916e:	pop    r13
  419170:	pop    r14
  419172:	pop    r15
  419174:	pop    rbp
  419175:	ret    
  419176:	lea    r12,[rip+0x29b57]        # 442cd4 <strcmp@plt+0x3f54c>
  41917d:	mov    rdi,r14
  419180:	mov    rsi,r12
  419183:	call   403788 <strcmp@plt>
  419188:	test   eax,eax
  41918a:	je     4191fa <strcmp@plt+0x15a72>
  41918c:	lea    r15,[rip+0x2a9cf]        # 443b62 <strcmp@plt+0x403da>
  419193:	mov    rdi,r14
  419196:	mov    rsi,r15
  419199:	call   403788 <strcmp@plt>
  41919e:	lea    rbp,[rip+0x4bc0b]        # 464db0 <strcmp@plt+0x61628>
  4191a5:	mov    ecx,DWORD PTR [rbp+0x0]
  4191a8:	test   eax,eax
  4191aa:	je     419275 <strcmp@plt+0x15aed>
  4191b0:	cmp    ecx,0x3
  4191b3:	jl     4191cb <strcmp@plt+0x15a43>
  4191b5:	lea    rsi,[rip+0x2efbc]        # 448178 <strcmp@plt+0x449f0>
  4191bc:	mov    edi,0x7
  4191c1:	xor    eax,eax
  4191c3:	mov    rdx,r14
  4191c6:	call   42e800 <strcmp@plt+0x2b078>
  4191cb:	mov    rdi,QWORD PTR [rbx+0x18]
  4191cf:	mov    rsi,r14
  4191d2:	call   436750 <strcmp@plt+0x32fc8>
  4191d7:	test   rax,rax
  4191da:	je     4192e5 <strcmp@plt+0x15b5d>
  4191e0:	mov    r13,rax
  4191e3:	cmp    DWORD PTR [rax+0x18],0x0
  4191e7:	je     419310 <strcmp@plt+0x15b88>
  4191ed:	mov    rax,QWORD PTR [r13+0x8]
  4191f1:	mov    rsi,QWORD PTR [rax+0x10]
  4191f5:	jmp    419312 <strcmp@plt+0x15b8a>
  4191fa:	lea    rax,[rip+0x4bbaf]        # 464db0 <strcmp@plt+0x61628>
  419201:	cmp    DWORD PTR [rax],0x3
  419204:	jl     419219 <strcmp@plt+0x15a91>
  419206:	lea    rsi,[rip+0x2eea3]        # 4480b0 <strcmp@plt+0x44928>
  41920d:	mov    edi,0x7
  419212:	xor    eax,eax
  419214:	call   42e800 <strcmp@plt+0x2b078>
  419219:	mov    rdi,QWORD PTR [rbx+0x18]
  41921d:	lea    rsi,[rip+0x29ab0]        # 442cd4 <strcmp@plt+0x3f54c>
  419224:	call   436750 <strcmp@plt+0x32fc8>
  419229:	mov    r15d,0x1
  41922f:	test   rax,rax
  419232:	je     419164 <strcmp@plt+0x159dc>
  419238:	mov    rbp,rax
  41923b:	cmp    DWORD PTR [rax+0x18],0x0
  41923f:	jle    419164 <strcmp@plt+0x159dc>
  419245:	add    rbx,0x20
  419249:	nop    DWORD PTR [rax+0x0]
  419250:	mov    rax,QWORD PTR [rbp+0x8]
  419254:	mov    rsi,QWORD PTR [rax+0x10]
  419258:	mov    rdi,rbx
  41925b:	call   4178a0 <strcmp@plt+0x14118>
  419260:	mov    rdi,QWORD PTR [rax]
  419263:	xor    esi,esi
  419265:	call   419120 <strcmp@plt+0x15998>
  41926a:	cmp    DWORD PTR [rbp+0x18],0x0
  41926e:	jg     419250 <strcmp@plt+0x15ac8>
  419270:	jmp    419164 <strcmp@plt+0x159dc>
  419275:	cmp    ecx,0x3
  419278:	jl     41928d <strcmp@plt+0x15b05>
  41927a:	lea    rsi,[rip+0x2ee93]        # 448114 <strcmp@plt+0x4498c>
  419281:	mov    edi,0x7
  419286:	xor    eax,eax
  419288:	call   42e800 <strcmp@plt+0x2b078>
  41928d:	mov    rdi,QWORD PTR [rbx+0x18]
  419291:	lea    rsi,[rip+0x2a8ca]        # 443b62 <strcmp@plt+0x403da>
  419298:	call   436750 <strcmp@plt+0x32fc8>
  41929d:	mov    r15d,0x1
  4192a3:	test   rax,rax
  4192a6:	je     419164 <strcmp@plt+0x159dc>
  4192ac:	mov    rbp,rax
  4192af:	cmp    DWORD PTR [rax+0x18],0x0
  4192b3:	jle    419164 <strcmp@plt+0x159dc>
  4192b9:	add    rbx,0x20
  4192bd:	nop    DWORD PTR [rax]
  4192c0:	mov    rax,QWORD PTR [rbp+0x8]
  4192c4:	mov    rsi,QWORD PTR [rax+0x10]
  4192c8:	mov    rdi,rbx
  4192cb:	call   4178a0 <strcmp@plt+0x14118>
  4192d0:	mov    rdi,QWORD PTR [rax]
  4192d3:	xor    esi,esi
  4192d5:	call   419120 <strcmp@plt+0x15998>
  4192da:	cmp    DWORD PTR [rbp+0x18],0x0
  4192de:	jg     4192c0 <strcmp@plt+0x15b38>
  4192e0:	jmp    419164 <strcmp@plt+0x159dc>
  4192e5:	xor    r15d,r15d
  4192e8:	cmp    DWORD PTR [rbp+0x0],0x2
  4192ec:	jl     419164 <strcmp@plt+0x159dc>
  4192f2:	lea    rsi,[rip+0x2eed6]        # 4481cf <strcmp@plt+0x44a47>
  4192f9:	xor    r15d,r15d
  4192fc:	mov    edi,0x6
  419301:	xor    eax,eax
  419303:	mov    rdx,r14
  419306:	call   42e800 <strcmp@plt+0x2b078>
  41930b:	jmp    419164 <strcmp@plt+0x159dc>
  419310:	xor    esi,esi
  419312:	lea    rdi,[rbx+0x20]
  419316:	call   4178a0 <strcmp@plt+0x14118>
  41931b:	cmp    DWORD PTR [rax+0x10],0x1
  41931f:	jne    419375 <strcmp@plt+0x15bed>
  419321:	mov    rdi,QWORD PTR [rax]
  419324:	call   423200 <strcmp@plt+0x1fa78>
  419329:	movzx  eax,ax
  41932c:	cmp    eax,0x2
  41932f:	je     419339 <strcmp@plt+0x15bb1>
  419331:	cmp    eax,0xa
  419334:	jne    419386 <strcmp@plt+0x15bfe>
  419336:	mov    r12,r15
  419339:	mov    rdi,QWORD PTR [rbx+0x18]
  41933d:	mov    rsi,r12
  419340:	call   436750 <strcmp@plt+0x32fc8>
  419345:	mov    rbp,QWORD PTR [r13+0x8]
  419349:	cmp    rbp,r13
  41934c:	je     419375 <strcmp@plt+0x15bed>
  41934e:	mov    r15,rax
  419351:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41935b:	nop    DWORD PTR [rax+rax*1+0x0]
  419360:	mov    rdi,QWORD PTR [rbp+0x10]
  419364:	mov    rsi,r15
  419367:	call   42c0c0 <strcmp@plt+0x28938>
  41936c:	mov    rbp,QWORD PTR [rbp+0x8]
  419370:	cmp    rbp,r13
  419373:	jne    419360 <strcmp@plt+0x15bd8>
  419375:	mov    rdi,QWORD PTR [rbx+0x18]
  419379:	mov    rsi,r14
  41937c:	call   4365d0 <strcmp@plt+0x32e48>
  419381:	jmp    41915e <strcmp@plt+0x159d6>
  419386:	cmp    DWORD PTR [rbp+0x0],0x0
  41938a:	jle    4193a7 <strcmp@plt+0x15c1f>
  41938c:	lea    rsi,[rip+0x2ee75]        # 448208 <strcmp@plt+0x44a80>
  419393:	xor    r15d,r15d
  419396:	mov    edi,0x5
  41939b:	xor    eax,eax
  41939d:	call   42e800 <strcmp@plt+0x2b078>
  4193a2:	jmp    419164 <strcmp@plt+0x159dc>
  4193a7:	xor    r15d,r15d
  4193aa:	jmp    419164 <strcmp@plt+0x159dc>
  4193af:	nop
  4193b0:	lea    rax,[rip+0x4b3b9]        # 464770 <strcmp@plt+0x60fe8>
  4193b7:	mov    rax,QWORD PTR [rax+0x70]
  4193bb:	ret    
  4193bc:	nop    DWORD PTR [rax+0x0]
  4193c0:	push   rbx
  4193c1:	sub    rsp,0x10
  4193c5:	mov    ebx,edi
  4193c7:	lea    rdi,[rip+0x2e909]        # 447cd7 <strcmp@plt+0x4454f>
  4193ce:	call   4030c0 <if_nametoindex@plt>
  4193d3:	mov    DWORD PTR [rsp],0x64
  4193da:	xor    edx,edx
  4193dc:	xor    ecx,ecx
  4193de:	xor    r8d,r8d
  4193e1:	mov    r9d,0x64
  4193e7:	mov    edi,ebx
  4193e9:	mov    esi,eax
  4193eb:	call   434a70 <strcmp@plt+0x312e8>
  4193f0:	add    rsp,0x10
  4193f4:	pop    rbx
  4193f5:	ret    
  4193f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419400:	push   rbp
  419401:	push   r14
  419403:	push   rbx
  419404:	mov    r14,rsi
  419407:	mov    ebp,edi
  419409:	mov    edi,0x40
  41940e:	call   4320b0 <strcmp@plt+0x2e928>
  419413:	test   rax,rax
  419416:	je     41944e <strcmp@plt+0x15cc6>
  419418:	mov    rbx,rax
  41941b:	mov    DWORD PTR [rax],ebp
  41941d:	lea    rdi,[rip+0x12e2c]        # 42c250 <strcmp@plt+0x28ac8>
  419424:	call   436260 <strcmp@plt+0x32ad8>
  419429:	mov    QWORD PTR [rbx+0x18],rax
  41942d:	lea    rsi,[rip+0xa30c]        # 423740 <strcmp@plt+0x1ffb8>
  419434:	mov    rdi,r14
  419437:	call   42bc70 <strcmp@plt+0x284e8>
  41943c:	mov    QWORD PTR [rbx+0x38],rax
  419440:	mov    rdi,rbx
  419443:	add    rdi,0x20
  419447:	call   4172f0 <strcmp@plt+0x13b68>
  41944c:	jmp    419450 <strcmp@plt+0x15cc8>
  41944e:	xor    ebx,ebx
  419450:	mov    rax,rbx
  419453:	pop    rbx
  419454:	pop    r14
  419456:	pop    rbp
  419457:	ret    
  419458:	nop    DWORD PTR [rax+rax*1+0x0]
  419460:	push   r15
  419462:	push   r14
  419464:	push   rbx
  419465:	lea    rax,[rip+0x4b304]        # 464770 <strcmp@plt+0x60fe8>
  41946c:	mov    r14,QWORD PTR [rax+0x70]
  419470:	test   r14,r14
  419473:	je     4194ca <strcmp@plt+0x15d42>
  419475:	lea    r15,[rip+0x56694]        # 46fb10 <strcmp@plt+0x6c388>
  41947c:	mov    rax,QWORD PTR [r15]
  41947f:	mov    rbx,QWORD PTR [rax+0x8]
  419483:	cmp    rbx,rax
  419486:	je     4194a2 <strcmp@plt+0x15d1a>
  419488:	nop    DWORD PTR [rax+rax*1+0x0]
  419490:	mov    rdi,QWORD PTR [rbx+0x10]
  419494:	call   4194d0 <strcmp@plt+0x15d48>
  419499:	mov    rbx,QWORD PTR [rbx+0x8]
  41949d:	cmp    rbx,QWORD PTR [r15]
  4194a0:	jne    419490 <strcmp@plt+0x15d08>
  4194a2:	mov    rdi,QWORD PTR [r14+0x18]
  4194a6:	call   436870 <strcmp@plt+0x330e8>
  4194ab:	mov    rdi,QWORD PTR [r14+0x38]
  4194af:	call   42c250 <strcmp@plt+0x28ac8>
  4194b4:	lea    rdi,[r14+0x20]
  4194b8:	call   417320 <strcmp@plt+0x13b98>
  4194bd:	mov    rdi,r14
  4194c0:	pop    rbx
  4194c1:	pop    r14
  4194c3:	pop    r15
  4194c5:	jmp    403780 <free@plt>
  4194ca:	pop    rbx
  4194cb:	pop    r14
  4194cd:	pop    r15
  4194cf:	ret    
  4194d0:	push   r14
  4194d2:	push   rbx
  4194d3:	push   rax
  4194d4:	mov    rbx,rdi
  4194d7:	mov    esi,DWORD PTR [rdi+0x8]
  4194da:	lea    r14d,[rsi+0xa]
  4194de:	mov    r9,QWORD PTR [rdi+0x10]
  4194e2:	test   r9,r9
  4194e5:	je     41953e <strcmp@plt+0x15db6>
  4194e7:	cmp    DWORD PTR [r9+0x18],0x0
  4194ec:	je     41953e <strcmp@plt+0x15db6>
  4194ee:	mov    r8,QWORD PTR [rbx+0x20]
  4194f2:	test   r8,r8
  4194f5:	je     41951d <strcmp@plt+0x15d95>
  4194f7:	cmp    DWORD PTR [r8+0x18],0x0
  4194fc:	je     41951d <strcmp@plt+0x15d95>
  4194fe:	sub    rsp,0x8
  419502:	mov    edi,0x2
  419507:	xor    edx,edx
  419509:	xor    ecx,ecx
  41950b:	xor    r9d,r9d
  41950e:	push   r14
  419510:	call   434b30 <strcmp@plt+0x313a8>
  419515:	add    rsp,0x10
  419519:	mov    r9,QWORD PTR [rbx+0x10]
  41951d:	movzx  edx,r14b
  419521:	mov    edi,0x2
  419526:	xor    esi,esi
  419528:	mov    r8d,0x1
  41952e:	mov    ecx,r14d
  419531:	push   0x0
  419533:	push   0x0
  419535:	call   4347c0 <strcmp@plt+0x31038>
  41953a:	add    rsp,0x10
  41953e:	mov    r9,QWORD PTR [rbx+0x18]
  419542:	test   r9,r9
  419545:	je     4195a3 <strcmp@plt+0x15e1b>
  419547:	cmp    DWORD PTR [r9+0x18],0x0
  41954c:	je     4195a3 <strcmp@plt+0x15e1b>
  41954e:	mov    r8,QWORD PTR [rbx+0x28]
  419552:	test   r8,r8
  419555:	je     419580 <strcmp@plt+0x15df8>
  419557:	cmp    DWORD PTR [r8+0x18],0x0
  41955c:	je     419580 <strcmp@plt+0x15df8>
  41955e:	mov    esi,DWORD PTR [rbx+0x8]
  419561:	sub    rsp,0x8
  419565:	mov    edi,0xa
  41956a:	xor    edx,edx
  41956c:	xor    ecx,ecx
  41956e:	xor    r9d,r9d
  419571:	push   r14
  419573:	call   434b30 <strcmp@plt+0x313a8>
  419578:	add    rsp,0x10
  41957c:	mov    r9,QWORD PTR [rbx+0x18]
  419580:	movzx  edx,r14b
  419584:	mov    edi,0xa
  419589:	xor    esi,esi
  41958b:	mov    r8d,0x1
  419591:	mov    ecx,r14d
  419594:	push   0x0
  419596:	push   0x0
  419598:	call   4347c0 <strcmp@plt+0x31038>
  41959d:	add    rsp,0x18
  4195a1:	jmp    4195a7 <strcmp@plt+0x15e1f>
  4195a3:	add    rsp,0x8
  4195a7:	pop    rbx
  4195a8:	pop    r14
  4195aa:	ret    
  4195ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4195b0:	test   rdi,rdi
  4195b3:	je     4195dd <strcmp@plt+0x15e55>
  4195b5:	push   rbx
  4195b6:	mov    rbx,rdi
  4195b9:	mov    rdi,QWORD PTR [rdi+0x18]
  4195bd:	call   436870 <strcmp@plt+0x330e8>
  4195c2:	mov    rdi,QWORD PTR [rbx+0x38]
  4195c6:	call   42c250 <strcmp@plt+0x28ac8>
  4195cb:	lea    rdi,[rbx+0x20]
  4195cf:	call   417320 <strcmp@plt+0x13b98>
  4195d4:	mov    rdi,rbx
  4195d7:	pop    rbx
  4195d8:	jmp    403780 <free@plt>
  4195dd:	ret    
  4195de:	xchg   ax,ax
  4195e0:	push   rbp
  4195e1:	push   r15
  4195e3:	push   r14
  4195e5:	push   r13
  4195e7:	push   r12
  4195e9:	push   rbx
  4195ea:	push   rax
  4195eb:	mov    r15,rdi
  4195ee:	lea    rax,[rip+0x4b17b]        # 464770 <strcmp@plt+0x60fe8>
  4195f5:	mov    r13,QWORD PTR [rax+0x70]
  4195f9:	call   423200 <strcmp@plt+0x1fa78>
  4195fe:	xor    ebx,ebx
  419600:	test   ax,ax
  419603:	je     419694 <strcmp@plt+0x15f0c>
  419609:	mov    ebp,eax
  41960b:	lea    rdi,[rip+0x2e6c5]        # 447cd7 <strcmp@plt+0x4454f>
  419612:	mov    rsi,r15
  419615:	call   42dba0 <strcmp@plt+0x2a418>
  41961a:	cmp    eax,0x1
  41961d:	jne    419694 <strcmp@plt+0x15f0c>
  41961f:	mov    rax,QWORD PTR [r13+0x38]
  419623:	mov    r14,QWORD PTR [rax+0x8]
  419627:	mov    ebx,0x1
  41962c:	cmp    r14,rax
  41962f:	je     419694 <strcmp@plt+0x15f0c>
  419631:	movzx  r12d,bp
  419635:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41963f:	nop
  419640:	mov    rbx,QWORD PTR [r14+0x10]
  419644:	mov    rdi,rbx
  419647:	call   423200 <strcmp@plt+0x1fa78>
  41964c:	cmp    ax,bp
  41964f:	jne    419679 <strcmp@plt+0x15ef1>
  419651:	lea    rax,[rip+0x56ed0]        # 470528 <strcmp@plt+0x6cda0>
  419658:	mov    esi,DWORD PTR [rax]
  41965a:	mov    DWORD PTR [rsp],0xfe
  419661:	xor    ecx,ecx
  419663:	xor    r8d,r8d
  419666:	xor    r9d,r9d
  419669:	mov    edi,r12d
  41966c:	mov    rdx,rbx
  41966f:	call   434a70 <strcmp@plt+0x312e8>
  419674:	cmp    eax,0x1
  419677:	jne    41968a <strcmp@plt+0x15f02>
  419679:	mov    r14,QWORD PTR [r14+0x8]
  41967d:	cmp    r14,QWORD PTR [r13+0x38]
  419681:	jne    419640 <strcmp@plt+0x15eb8>
  419683:	mov    ebx,0x1
  419688:	jmp    419694 <strcmp@plt+0x15f0c>
  41968a:	mov    rdi,r15
  41968d:	call   4196b0 <strcmp@plt+0x15f28>
  419692:	xor    ebx,ebx
  419694:	mov    eax,ebx
  419696:	add    rsp,0x8
  41969a:	pop    rbx
  41969b:	pop    r12
  41969d:	pop    r13
  41969f:	pop    r14
  4196a1:	pop    r15
  4196a3:	pop    rbp
  4196a4:	ret    
  4196a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4196af:	nop
  4196b0:	push   rbp
  4196b1:	push   r15
  4196b3:	push   r14
  4196b5:	push   r13
  4196b7:	push   r12
  4196b9:	push   rbx
  4196ba:	push   rax
  4196bb:	mov    r15,rdi
  4196be:	lea    rax,[rip+0x4b0ab]        # 464770 <strcmp@plt+0x60fe8>
  4196c5:	mov    r13,QWORD PTR [rax+0x70]
  4196c9:	call   423200 <strcmp@plt+0x1fa78>
  4196ce:	xor    ebx,ebx
  4196d0:	test   ax,ax
  4196d3:	je     419758 <strcmp@plt+0x15fd0>
  4196d9:	mov    ebp,eax
  4196db:	lea    rdi,[rip+0x2e5f5]        # 447cd7 <strcmp@plt+0x4454f>
  4196e2:	mov    rsi,r15
  4196e5:	call   42dd40 <strcmp@plt+0x2a5b8>
  4196ea:	cmp    eax,0x1
  4196ed:	jne    419758 <strcmp@plt+0x15fd0>
  4196ef:	mov    rax,QWORD PTR [r13+0x38]
  4196f3:	mov    r14,QWORD PTR [rax+0x8]
  4196f7:	mov    ebx,0x1
  4196fc:	cmp    r14,rax
  4196ff:	je     419758 <strcmp@plt+0x15fd0>
  419701:	movzx  r12d,bp
  419705:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41970f:	nop
  419710:	mov    rbx,QWORD PTR [r14+0x10]
  419714:	mov    rdi,rbx
  419717:	call   423200 <strcmp@plt+0x1fa78>
  41971c:	cmp    ax,bp
  41971f:	jne    419749 <strcmp@plt+0x15fc1>
  419721:	lea    rax,[rip+0x56e00]        # 470528 <strcmp@plt+0x6cda0>
  419728:	mov    esi,DWORD PTR [rax]
  41972a:	mov    DWORD PTR [rsp],0xfe
  419731:	xor    ecx,ecx
  419733:	xor    r8d,r8d
  419736:	xor    r9d,r9d
  419739:	mov    edi,r12d
  41973c:	mov    rdx,rbx
  41973f:	call   434b30 <strcmp@plt+0x313a8>
  419744:	cmp    eax,0x1
  419747:	jne    419769 <strcmp@plt+0x15fe1>
  419749:	mov    r14,QWORD PTR [r14+0x8]
  41974d:	cmp    r14,QWORD PTR [r13+0x38]
  419751:	jne    419710 <strcmp@plt+0x15f88>
  419753:	mov    ebx,0x1
  419758:	mov    eax,ebx
  41975a:	add    rsp,0x8
  41975e:	pop    rbx
  41975f:	pop    r12
  419761:	pop    r13
  419763:	pop    r14
  419765:	pop    r15
  419767:	pop    rbp
  419768:	ret    
  419769:	mov    rdi,r15
  41976c:	call   4196b0 <strcmp@plt+0x15f28>
  419771:	xor    eax,eax
  419773:	jmp    41975a <strcmp@plt+0x15fd2>
  419775:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41977f:	nop
  419780:	push   rbp
  419781:	push   r15
  419783:	push   r14
  419785:	push   r12
  419787:	push   rbx
  419788:	sub    rsp,0x10
  41978c:	mov    r14,rsi
  41978f:	mov    rbx,rdi
  419792:	mov    r12d,DWORD PTR [rdi+0x8]
  419796:	mov    rdi,rsi
  419799:	call   423200 <strcmp@plt+0x1fa78>
  41979e:	movzx  eax,ax
  4197a1:	cmp    eax,0xa
  4197a4:	je     4197b7 <strcmp@plt+0x1602f>
  4197a6:	cmp    eax,0x2
  4197a9:	jne    41981d <strcmp@plt+0x16095>
  4197ab:	lea    rbp,[rbx+0x20]
  4197af:	mov    r15d,0x2
  4197b5:	jmp    4197c1 <strcmp@plt+0x16039>
  4197b7:	lea    rbp,[rbx+0x28]
  4197bb:	mov    r15d,0xa
  4197c1:	add    r12d,0xa
  4197c5:	mov    rdi,QWORD PTR [rbp+0x0]
  4197c9:	test   rdi,rdi
  4197cc:	je     4197e6 <strcmp@plt+0x1605e>
  4197ce:	cmp    DWORD PTR [rdi+0x18],0x0
  4197d2:	je     4197e6 <strcmp@plt+0x1605e>
  4197d4:	mov    rsi,r14
  4197d7:	call   423970 <strcmp@plt+0x201e8>
  4197dc:	test   eax,eax
  4197de:	je     41982a <strcmp@plt+0x160a2>
  4197e0:	mov    rdi,QWORD PTR [rbp+0x0]
  4197e4:	jmp    4197f9 <strcmp@plt+0x16071>
  4197e6:	call   422fa0 <strcmp@plt+0x1f818>
  4197eb:	xor    eax,eax
  4197ed:	call   422f90 <strcmp@plt+0x1f808>
  4197f2:	mov    QWORD PTR [rbp+0x0],rax
  4197f6:	mov    rdi,rax
  4197f9:	mov    rsi,r14
  4197fc:	call   423560 <strcmp@plt+0x1fdd8>
  419801:	mov    esi,DWORD PTR [rbx+0x8]
  419804:	mov    DWORD PTR [rsp],r12d
  419808:	xor    edx,edx
  41980a:	xor    ecx,ecx
  41980c:	mov    r9d,0x64
  419812:	mov    edi,r15d
  419815:	mov    r8,r14
  419818:	call   434a70 <strcmp@plt+0x312e8>
  41981d:	add    rsp,0x10
  419821:	pop    rbx
  419822:	pop    r12
  419824:	pop    r14
  419826:	pop    r15
  419828:	pop    rbp
  419829:	ret    
  41982a:	lea    rax,[rip+0x4b57f]        # 464db0 <strcmp@plt+0x61628>
  419831:	cmp    DWORD PTR [rax],0x3
  419834:	jl     419801 <strcmp@plt+0x16079>
  419836:	mov    rdi,r14
  419839:	call   423130 <strcmp@plt+0x1f9a8>
  41983e:	mov    rcx,rax
  419841:	lea    rsi,[rip+0x2e749]        # 447f91 <strcmp@plt+0x44809>
  419848:	mov    edi,0x7
  41984d:	xor    eax,eax
  41984f:	mov    rdx,rcx
  419852:	call   42e800 <strcmp@plt+0x2b078>
  419857:	jmp    419801 <strcmp@plt+0x16079>
  419859:	nop    DWORD PTR [rax+0x0]
  419860:	push   rbp
  419861:	push   r15
  419863:	push   r14
  419865:	push   rbx
  419866:	push   rax
  419867:	mov    r14,rsi
  41986a:	mov    rbx,rdi
  41986d:	mov    ebp,DWORD PTR [rdi+0x8]
  419870:	mov    rdi,rsi
  419873:	call   423200 <strcmp@plt+0x1fa78>
  419878:	movzx  eax,ax
  41987b:	cmp    eax,0xa
  41987e:	je     419890 <strcmp@plt+0x16108>
  419880:	cmp    eax,0x2
  419883:	jne    4198d4 <strcmp@plt+0x1614c>
  419885:	lea    r15,[rbx+0x20]
  419889:	mov    edi,0x2
  41988e:	jmp    419899 <strcmp@plt+0x16111>
  419890:	lea    r15,[rbx+0x28]
  419894:	mov    edi,0xa
  419899:	mov    rax,QWORD PTR [r15]
  41989c:	test   rax,rax
  41989f:	je     4198d4 <strcmp@plt+0x1614c>
  4198a1:	cmp    DWORD PTR [rax+0x18],0x0
  4198a5:	je     4198d4 <strcmp@plt+0x1614c>
  4198a7:	add    ebp,0xa
  4198aa:	mov    esi,DWORD PTR [rbx+0x8]
  4198ad:	mov    DWORD PTR [rsp],ebp
  4198b0:	xor    edx,edx
  4198b2:	xor    ecx,ecx
  4198b4:	mov    r9d,0x64
  4198ba:	mov    r8,r14
  4198bd:	call   434b30 <strcmp@plt+0x313a8>
  4198c2:	mov    rdi,QWORD PTR [r15]
  4198c5:	call   422fa0 <strcmp@plt+0x1f818>
  4198ca:	xor    edi,edi
  4198cc:	call   422ef0 <strcmp@plt+0x1f768>
  4198d1:	mov    QWORD PTR [r15],rax
  4198d4:	add    rsp,0x8
  4198d8:	pop    rbx
  4198d9:	pop    r14
  4198db:	pop    r15
  4198dd:	pop    rbp
  4198de:	ret    
  4198df:	nop
  4198e0:	push   r15
  4198e2:	push   r14
  4198e4:	push   rbx
  4198e5:	lea    rax,[rip+0x4ae84]        # 464770 <strcmp@plt+0x60fe8>
  4198ec:	mov    rbx,QWORD PTR [rax+0x70]
  4198f0:	mov    edi,0x2
  4198f5:	call   43b1c0 <strcmp@plt+0x37a38>
  4198fa:	mov    QWORD PTR [rbx+0x8],rax
  4198fe:	lea    r15,[rip+0x4b4ab]        # 464db0 <strcmp@plt+0x61628>
  419905:	test   rax,rax
  419908:	je     419935 <strcmp@plt+0x161ad>
  41990a:	cmp    DWORD PTR [r15],0x2
  41990e:	jl     419935 <strcmp@plt+0x161ad>
  419910:	mov    r14,QWORD PTR [rax]
  419913:	mov    rdi,QWORD PTR [rax+0x10]
  419917:	call   423130 <strcmp@plt+0x1f9a8>
  41991c:	mov    rcx,rax
  41991f:	lea    rsi,[rip+0x2e6be]        # 447fe4 <strcmp@plt+0x4485c>
  419926:	mov    edi,0x6
  41992b:	xor    eax,eax
  41992d:	mov    rdx,r14
  419930:	call   42e800 <strcmp@plt+0x2b078>
  419935:	mov    edi,0xa
  41993a:	call   43b1c0 <strcmp@plt+0x37a38>
  41993f:	mov    QWORD PTR [rbx+0x10],rax
  419943:	test   rax,rax
  419946:	je     419973 <strcmp@plt+0x161eb>
  419948:	cmp    DWORD PTR [r15],0x2
  41994c:	jl     419973 <strcmp@plt+0x161eb>
  41994e:	mov    r14,QWORD PTR [rax]
  419951:	mov    rdi,QWORD PTR [rax+0x18]
  419955:	call   423130 <strcmp@plt+0x1f9a8>
  41995a:	mov    rcx,rax
  41995d:	lea    rsi,[rip+0x2e6a0]        # 448004 <strcmp@plt+0x4487c>
  419964:	mov    edi,0x6
  419969:	xor    eax,eax
  41996b:	mov    rdx,r14
  41996e:	call   42e800 <strcmp@plt+0x2b078>
  419973:	cmp    QWORD PTR [rbx+0x8],0x0
  419978:	jne    419981 <strcmp@plt+0x161f9>
  41997a:	cmp    QWORD PTR [rbx+0x10],0x0
  41997f:	je     419987 <strcmp@plt+0x161ff>
  419981:	pop    rbx
  419982:	pop    r14
  419984:	pop    r15
  419986:	ret    
  419987:	lea    rsi,[rip+0x2e696]        # 448024 <strcmp@plt+0x4489c>
  41998e:	mov    edi,0x1
  419993:	xor    eax,eax
  419995:	pop    rbx
  419996:	pop    r14
  419998:	pop    r15
  41999a:	jmp    42e800 <strcmp@plt+0x2b078>
  41999f:	nop
  4199a0:	push   rbx
  4199a1:	lea    rax,[rip+0x4adc8]        # 464770 <strcmp@plt+0x60fe8>
  4199a8:	mov    rax,QWORD PTR [rax+0x70]
  4199ac:	cmp    edi,0xa
  4199af:	je     4199c7 <strcmp@plt+0x1623f>
  4199b1:	mov    ecx,edi
  4199b3:	cmp    edi,0x2
  4199b6:	jne    4199d6 <strcmp@plt+0x1624e>
  4199b8:	mov    rax,QWORD PTR [rax+0x8]
  4199bc:	test   rax,rax
  4199bf:	je     4199e2 <strcmp@plt+0x1625a>
  4199c1:	mov    rbx,QWORD PTR [rax+0x10]
  4199c5:	jmp    4199fd <strcmp@plt+0x16275>
  4199c7:	mov    rax,QWORD PTR [rax+0x10]
  4199cb:	test   rax,rax
  4199ce:	je     4199e2 <strcmp@plt+0x1625a>
  4199d0:	mov    rbx,QWORD PTR [rax+0x18]
  4199d4:	jmp    4199fd <strcmp@plt+0x16275>
  4199d6:	lea    rax,[rip+0x4b3d3]        # 464db0 <strcmp@plt+0x61628>
  4199dd:	cmp    DWORD PTR [rax],0x2
  4199e0:	jge    4199e6 <strcmp@plt+0x1625e>
  4199e2:	xor    ebx,ebx
  4199e4:	jmp    4199fd <strcmp@plt+0x16275>
  4199e6:	lea    rsi,[rip+0x2e662]        # 44804f <strcmp@plt+0x448c7>
  4199ed:	xor    ebx,ebx
  4199ef:	mov    edi,0x6
  4199f4:	xor    eax,eax
  4199f6:	mov    edx,ecx
  4199f8:	call   42e800 <strcmp@plt+0x2b078>
  4199fd:	mov    rax,rbx
  419a00:	pop    rbx
  419a01:	ret    
  419a02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419a0c:	nop    DWORD PTR [rax+0x0]
  419a10:	push   rbx
  419a11:	lea    rax,[rip+0x4ad58]        # 464770 <strcmp@plt+0x60fe8>
  419a18:	mov    rax,QWORD PTR [rax+0x70]
  419a1c:	cmp    edi,0xa
  419a1f:	je     419a36 <strcmp@plt+0x162ae>
  419a21:	mov    ecx,edi
  419a23:	cmp    edi,0x2
  419a26:	jne    419a44 <strcmp@plt+0x162bc>
  419a28:	mov    rax,QWORD PTR [rax+0x8]
  419a2c:	test   rax,rax
  419a2f:	je     419a6c <strcmp@plt+0x162e4>
  419a31:	mov    ebx,DWORD PTR [rax+0x30]
  419a34:	jmp    419a71 <strcmp@plt+0x162e9>
  419a36:	mov    rax,QWORD PTR [rax+0x10]
  419a3a:	test   rax,rax
  419a3d:	je     419a6c <strcmp@plt+0x162e4>
  419a3f:	mov    ebx,DWORD PTR [rax+0x34]
  419a42:	jmp    419a71 <strcmp@plt+0x162e9>
  419a44:	lea    rax,[rip+0x4b365]        # 464db0 <strcmp@plt+0x61628>
  419a4b:	mov    ebx,0xfffffff7
  419a50:	cmp    DWORD PTR [rax],0x2
  419a53:	jl     419a71 <strcmp@plt+0x162e9>
  419a55:	lea    rsi,[rip+0x2e624]        # 448080 <strcmp@plt+0x448f8>
  419a5c:	mov    edi,0x6
  419a61:	xor    eax,eax
  419a63:	mov    edx,ecx
  419a65:	call   42e800 <strcmp@plt+0x2b078>
  419a6a:	jmp    419a71 <strcmp@plt+0x162e9>
  419a6c:	mov    ebx,0xfffffff7
  419a71:	mov    eax,ebx
  419a73:	pop    rbx
  419a74:	ret    
  419a75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419a7f:	nop
  419a80:	push   rbx
  419a81:	lea    rax,[rip+0x4ace8]        # 464770 <strcmp@plt+0x60fe8>
  419a88:	mov    rbx,QWORD PTR [rax+0x70]
  419a8c:	mov    rdi,QWORD PTR [rbx+0x18]
  419a90:	call   436870 <strcmp@plt+0x330e8>
  419a95:	lea    rdi,[rip+0x127b4]        # 42c250 <strcmp@plt+0x28ac8>
  419a9c:	call   436260 <strcmp@plt+0x32ad8>
  419aa1:	mov    QWORD PTR [rbx+0x18],rax
  419aa5:	mov    eax,0x1
  419aaa:	pop    rbx
  419aab:	ret    
  419aac:	nop    DWORD PTR [rax+0x0]
  419ab0:	lea    rax,[rip+0x2e789]        # 448240 <strcmp@plt+0x44ab8>
  419ab7:	ret    
  419ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  419ac0:	push   r14
  419ac2:	push   rbx
  419ac3:	push   rax
  419ac4:	test   rdi,rdi
  419ac7:	je     419b28 <strcmp@plt+0x163a0>
  419ac9:	mov    rbx,rdi
  419acc:	lea    rdi,[rip+0x2e77d]        # 448250 <strcmp@plt+0x44ac8>
  419ad3:	mov    rsi,rbx
  419ad6:	call   403788 <strcmp@plt>
  419adb:	lea    r14,[rip+0x48db6]        # 462898 <strcmp@plt+0x5f110>
  419ae2:	test   eax,eax
  419ae4:	je     419b34 <strcmp@plt+0x163ac>
  419ae6:	lea    rdi,[rip+0x2e768]        # 448255 <strcmp@plt+0x44acd>
  419aed:	mov    rsi,rbx
  419af0:	call   403788 <strcmp@plt>
  419af5:	test   eax,eax
  419af7:	je     419b34 <strcmp@plt+0x163ac>
  419af9:	lea    rdi,[rip+0x2e759]        # 448259 <strcmp@plt+0x44ad1>
  419b00:	mov    rsi,rbx
  419b03:	call   403788 <strcmp@plt>
  419b08:	test   eax,eax
  419b0a:	je     419b2d <strcmp@plt+0x163a5>
  419b0c:	lea    rdi,[rip+0x2e74d]        # 448260 <strcmp@plt+0x44ad8>
  419b13:	mov    rsi,rbx
  419b16:	call   403788 <strcmp@plt>
  419b1b:	test   eax,eax
  419b1d:	jne    419b3f <strcmp@plt+0x163b7>
  419b1f:	lea    rax,[rip+0x48e22]        # 462948 <strcmp@plt+0x5f1c0>
  419b26:	jmp    419b37 <strcmp@plt+0x163af>
  419b28:	xor    r14d,r14d
  419b2b:	jmp    419b34 <strcmp@plt+0x163ac>
  419b2d:	lea    r14,[rip+0x48dbc]        # 4628f0 <strcmp@plt+0x5f168>
  419b34:	mov    rax,r14
  419b37:	add    rsp,0x8
  419b3b:	pop    rbx
  419b3c:	pop    r14
  419b3e:	ret    
  419b3f:	xor    eax,eax
  419b41:	jmp    419b37 <strcmp@plt+0x163af>
  419b43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419b4d:	nop    DWORD PTR [rax]
  419b50:	add    edi,0xfffffffc
  419b53:	cmp    edi,0x2
  419b56:	ja     419b67 <strcmp@plt+0x163df>
  419b58:	movsxd rax,edi
  419b5b:	lea    rcx,[rip+0x48d1e]        # 462880 <strcmp@plt+0x5f0f8>
  419b62:	mov    rax,QWORD PTR [rcx+rax*8]
  419b66:	ret    
  419b67:	xor    eax,eax
  419b69:	ret    
  419b6a:	nop    WORD PTR [rax+rax*1+0x0]
  419b70:	vxorps xmm0,xmm0,xmm0
  419b74:	vmovups XMMWORD PTR [rdi],xmm0
  419b78:	mov    QWORD PTR [rdi+0x10],0x0
  419b80:	ret    
  419b81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  419b90:	push   rbx
  419b91:	test   rdi,rdi
  419b94:	je     419ca8 <strcmp@plt+0x16520>
  419b9a:	mov    rbx,rdi
  419b9d:	mov    rax,QWORD PTR [rdi]
  419ba0:	test   rax,rax
  419ba3:	je     419ca8 <strcmp@plt+0x16520>
  419ba9:	mov    rdi,QWORD PTR [rbx+0x8]
  419bad:	test   rdi,rdi
  419bb0:	je     419bb5 <strcmp@plt+0x1642d>
  419bb2:	call   QWORD PTR [rax+0x40]
  419bb5:	mov    rdi,QWORD PTR [rbx+0x10]
  419bb9:	test   rdi,rdi
  419bbc:	je     419c49 <strcmp@plt+0x164c1>
  419bc2:	mov    rax,QWORD PTR [rbx]
  419bc5:	movsxd rax,DWORD PTR [rax+0x14]
  419bc9:	test   rax,rax
  419bcc:	je     419c44 <strcmp@plt+0x164bc>
  419bce:	lea    rcx,[rax+rax*1]
  419bd2:	add    rcx,0xffffffffffffffff
  419bd6:	lea    rax,[rax+rax*1]
  419bda:	mov    rsi,rax
  419bdd:	and    rsi,0x6
  419be1:	je     419c03 <strcmp@plt+0x1647b>
  419be3:	xor    edx,edx
  419be5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419bef:	nop
  419bf0:	mov    BYTE PTR [rdi+rdx*1],0x0
  419bf4:	add    rdx,0x1
  419bf8:	cmp    rsi,rdx
  419bfb:	jne    419bf0 <strcmp@plt+0x16468>
  419bfd:	add    rdi,rdx
  419c00:	sub    rax,rdx
  419c03:	cmp    rcx,0x7
  419c07:	jb     419c40 <strcmp@plt+0x164b8>
  419c09:	xor    ecx,ecx
  419c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  419c10:	mov    BYTE PTR [rdi+rcx*1],0x0
  419c14:	mov    BYTE PTR [rdi+rcx*1+0x1],0x0
  419c19:	mov    BYTE PTR [rdi+rcx*1+0x2],0x0
  419c1e:	mov    BYTE PTR [rdi+rcx*1+0x3],0x0
  419c23:	mov    BYTE PTR [rdi+rcx*1+0x4],0x0
  419c28:	mov    BYTE PTR [rdi+rcx*1+0x5],0x0
  419c2d:	mov    BYTE PTR [rdi+rcx*1+0x6],0x0
  419c32:	mov    BYTE PTR [rdi+rcx*1+0x7],0x0
  419c37:	add    rcx,0x8
  419c3b:	cmp    rax,rcx
  419c3e:	jne    419c10 <strcmp@plt+0x16488>
  419c40:	mov    rdi,QWORD PTR [rbx+0x10]
  419c44:	call   403780 <free@plt>
  419c49:	mov    BYTE PTR [rbx],0x0
  419c4c:	mov    BYTE PTR [rbx+0x1],0x0
  419c50:	mov    BYTE PTR [rbx+0x2],0x0
  419c54:	mov    BYTE PTR [rbx+0x3],0x0
  419c58:	mov    BYTE PTR [rbx+0x4],0x0
  419c5c:	mov    BYTE PTR [rbx+0x5],0x0
  419c60:	mov    BYTE PTR [rbx+0x6],0x0
  419c64:	mov    BYTE PTR [rbx+0x7],0x0
  419c68:	mov    BYTE PTR [rbx+0x8],0x0
  419c6c:	mov    BYTE PTR [rbx+0x9],0x0
  419c70:	mov    BYTE PTR [rbx+0xa],0x0
  419c74:	mov    BYTE PTR [rbx+0xb],0x0
  419c78:	mov    BYTE PTR [rbx+0xc],0x0
  419c7c:	mov    BYTE PTR [rbx+0xd],0x0
  419c80:	mov    BYTE PTR [rbx+0xe],0x0
  419c84:	mov    BYTE PTR [rbx+0xf],0x0
  419c88:	mov    BYTE PTR [rbx+0x10],0x0
  419c8c:	mov    BYTE PTR [rbx+0x11],0x0
  419c90:	mov    BYTE PTR [rbx+0x12],0x0
  419c94:	mov    BYTE PTR [rbx+0x13],0x0
  419c98:	mov    BYTE PTR [rbx+0x14],0x0
  419c9c:	mov    BYTE PTR [rbx+0x15],0x0
  419ca0:	mov    BYTE PTR [rbx+0x16],0x0
  419ca4:	mov    BYTE PTR [rbx+0x17],0x0
  419ca8:	pop    rbx
  419ca9:	ret    
  419caa:	nop    WORD PTR [rax+rax*1+0x0]
  419cb0:	mov    eax,0xffffaf00
  419cb5:	test   rdi,rdi
  419cb8:	je     419ce6 <strcmp@plt+0x1655e>
  419cba:	test   rsi,rsi
  419cbd:	je     419ce6 <strcmp@plt+0x1655e>
  419cbf:	mov    rcx,QWORD PTR [rdi]
  419cc2:	test   rcx,rcx
  419cc5:	je     419ce6 <strcmp@plt+0x1655e>
  419cc7:	mov    rdx,QWORD PTR [rsi]
  419cca:	test   rdx,rdx
  419ccd:	je     419ce6 <strcmp@plt+0x1655e>
  419ccf:	cmp    rcx,rdx
  419cd2:	jne    419ce6 <strcmp@plt+0x1655e>
  419cd4:	push   rax
  419cd5:	mov    rdi,QWORD PTR [rdi+0x8]
  419cd9:	mov    rsi,QWORD PTR [rsi+0x8]
  419cdd:	call   QWORD PTR [rcx+0x48]
  419ce0:	xor    eax,eax
  419ce2:	add    rsp,0x8
  419ce6:	ret    
  419ce7:	nop    WORD PTR [rax+rax*1+0x0]
  419cf0:	push   rbp
  419cf1:	push   r15
  419cf3:	push   r14
  419cf5:	push   rbx
  419cf6:	push   rax
  419cf7:	mov    r14d,0xffffaf00
  419cfd:	test   rdi,rdi
  419d00:	je     419d48 <strcmp@plt+0x165c0>
  419d02:	mov    rbx,rsi
  419d05:	test   rsi,rsi
  419d08:	je     419d48 <strcmp@plt+0x165c0>
  419d0a:	mov    rbp,rdi
  419d0d:	call   QWORD PTR [rbx+0x38]
  419d10:	mov    QWORD PTR [rbp+0x8],rax
  419d14:	mov    r14d,0xffffae80
  419d1a:	test   rax,rax
  419d1d:	je     419d48 <strcmp@plt+0x165c0>
  419d1f:	mov    r15,rax
  419d22:	movsxd rsi,DWORD PTR [rbx+0x14]
  419d26:	mov    edi,0x2
  419d2b:	call   4032d0 <calloc@plt>
  419d30:	mov    QWORD PTR [rbp+0x10],rax
  419d34:	test   rax,rax
  419d37:	je     419d42 <strcmp@plt+0x165ba>
  419d39:	mov    QWORD PTR [rbp+0x0],rbx
  419d3d:	xor    r14d,r14d
  419d40:	jmp    419d48 <strcmp@plt+0x165c0>
  419d42:	mov    rdi,r15
  419d45:	call   QWORD PTR [rbx+0x40]
  419d48:	mov    eax,r14d
  419d4b:	add    rsp,0x8
  419d4f:	pop    rbx
  419d50:	pop    r14
  419d52:	pop    r15
  419d54:	pop    rbp
  419d55:	ret    
  419d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419d60:	push   rbp
  419d61:	push   r15
  419d63:	push   r14
  419d65:	push   r12
  419d67:	push   rbx
  419d68:	mov    r14d,0xffffaf00
  419d6e:	test   rdi,rdi
  419d71:	je     419dc1 <strcmp@plt+0x16639>
  419d73:	mov    rbx,rsi
  419d76:	test   rsi,rsi
  419d79:	je     419dc1 <strcmp@plt+0x16639>
  419d7b:	mov    r12d,edx
  419d7e:	mov    rbp,rdi
  419d81:	call   QWORD PTR [rbx+0x38]
  419d84:	mov    QWORD PTR [rbp+0x8],rax
  419d88:	mov    r14d,0xffffae80
  419d8e:	test   rax,rax
  419d91:	je     419dc1 <strcmp@plt+0x16639>
  419d93:	test   r12d,r12d
  419d96:	je     419db2 <strcmp@plt+0x1662a>
  419d98:	mov    r15,rax
  419d9b:	movsxd rsi,DWORD PTR [rbx+0x14]
  419d9f:	mov    edi,0x2
  419da4:	call   4032d0 <calloc@plt>
  419da9:	mov    QWORD PTR [rbp+0x10],rax
  419dad:	test   rax,rax
  419db0:	je     419dbb <strcmp@plt+0x16633>
  419db2:	mov    QWORD PTR [rbp+0x0],rbx
  419db6:	xor    r14d,r14d
  419db9:	jmp    419dc1 <strcmp@plt+0x16639>
  419dbb:	mov    rdi,r15
  419dbe:	call   QWORD PTR [rbx+0x40]
  419dc1:	mov    eax,r14d
  419dc4:	pop    rbx
  419dc5:	pop    r12
  419dc7:	pop    r14
  419dc9:	pop    r15
  419dcb:	pop    rbp
  419dcc:	ret    
  419dcd:	nop    DWORD PTR [rax]
  419dd0:	mov    eax,0xffffaf00
  419dd5:	test   rdi,rdi
  419dd8:	je     419df0 <strcmp@plt+0x16668>
  419dda:	mov    rcx,QWORD PTR [rdi]
  419ddd:	test   rcx,rcx
  419de0:	je     419df0 <strcmp@plt+0x16668>
  419de2:	push   rax
  419de3:	mov    rdi,QWORD PTR [rdi+0x8]
  419de7:	call   QWORD PTR [rcx+0x18]
  419dea:	xor    eax,eax
  419dec:	add    rsp,0x8
  419df0:	ret    
  419df1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419dfb:	nop    DWORD PTR [rax+rax*1+0x0]
  419e00:	mov    eax,0xffffaf00
  419e05:	test   rdi,rdi
  419e08:	je     419e20 <strcmp@plt+0x16698>
  419e0a:	mov    rcx,QWORD PTR [rdi]
  419e0d:	test   rcx,rcx
  419e10:	je     419e20 <strcmp@plt+0x16698>
  419e12:	push   rax
  419e13:	mov    rdi,QWORD PTR [rdi+0x8]
  419e17:	call   QWORD PTR [rcx+0x20]
  419e1a:	xor    eax,eax
  419e1c:	add    rsp,0x8
  419e20:	ret    
  419e21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e2b:	nop    DWORD PTR [rax+rax*1+0x0]
  419e30:	mov    eax,0xffffaf00
  419e35:	test   rdi,rdi
  419e38:	je     419e50 <strcmp@plt+0x166c8>
  419e3a:	mov    rcx,QWORD PTR [rdi]
  419e3d:	test   rcx,rcx
  419e40:	je     419e50 <strcmp@plt+0x166c8>
  419e42:	push   rax
  419e43:	mov    rdi,QWORD PTR [rdi+0x8]
  419e47:	call   QWORD PTR [rcx+0x28]
  419e4a:	xor    eax,eax
  419e4c:	add    rsp,0x8
  419e50:	ret    
  419e51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  419e60:	test   rdi,rdi
  419e63:	je     419e7c <strcmp@plt+0x166f4>
  419e65:	push   rax
  419e66:	mov    rax,rdi
  419e69:	mov    rdi,rsi
  419e6c:	mov    rsi,rdx
  419e6f:	mov    rdx,rcx
  419e72:	call   QWORD PTR [rax+0x30]
  419e75:	xor    eax,eax
  419e77:	add    rsp,0x8
  419e7b:	ret    
  419e7c:	mov    eax,0xffffaf00
  419e81:	ret    
  419e82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e8c:	nop    DWORD PTR [rax+0x0]
  419e90:	push   rbp
  419e91:	push   r15
  419e93:	push   r14
  419e95:	push   r13
  419e97:	push   r12
  419e99:	push   rbx
  419e9a:	sub    rsp,0x28
  419e9e:	mov    eax,0xffffaf00
  419ea3:	test   rdi,rdi
  419ea6:	je     41a241 <strcmp@plt+0x16ab9>
  419eac:	mov    r14,rdi
  419eaf:	mov    rcx,QWORD PTR [rdi]
  419eb2:	test   rcx,rcx
  419eb5:	je     41a241 <strcmp@plt+0x16ab9>
  419ebb:	mov    r12,QWORD PTR [r14+0x10]
  419ebf:	test   r12,r12
  419ec2:	je     41a241 <strcmp@plt+0x16ab9>
  419ec8:	mov    r15,rdx
  419ecb:	mov    rbx,rsi
  419ece:	movsxd r13,DWORD PTR [rcx+0x14]
  419ed2:	cmp    r13,rdx
  419ed5:	jae    419f10 <strcmp@plt+0x16788>
  419ed7:	mov    rbp,rsp
  419eda:	mov    rdi,QWORD PTR [r14+0x8]
  419ede:	call   QWORD PTR [rcx+0x18]
  419ee1:	mov    rax,QWORD PTR [r14]
  419ee4:	mov    rdi,QWORD PTR [r14+0x8]
  419ee8:	mov    rsi,rbx
  419eeb:	mov    rdx,r15
  419eee:	call   QWORD PTR [rax+0x20]
  419ef1:	mov    rax,QWORD PTR [r14]
  419ef4:	mov    rdi,QWORD PTR [r14+0x8]
  419ef8:	mov    rsi,rbp
  419efb:	call   QWORD PTR [rax+0x28]
  419efe:	mov    rax,QWORD PTR [r14]
  419f01:	mov    r12,QWORD PTR [r14+0x10]
  419f05:	movsxd r15,DWORD PTR [rax+0x10]
  419f09:	movsxd r13,DWORD PTR [rax+0x14]
  419f0d:	mov    rbx,rbp
  419f10:	lea    rbp,[r12+r13*1]
  419f14:	mov    esi,0x36
  419f19:	mov    rdi,r12
  419f1c:	mov    rdx,r13
  419f1f:	call   403260 <memset@plt>
  419f24:	mov    rax,QWORD PTR [r14]
  419f27:	movsxd rdx,DWORD PTR [rax+0x14]
  419f2b:	mov    esi,0x5c
  419f30:	mov    rdi,rbp
  419f33:	call   403260 <memset@plt>
  419f38:	test   r15,r15
  419f3b:	je     41a182 <strcmp@plt+0x169fa>
  419f41:	cmp    r15,0x3f
  419f45:	ja     419ff6 <strcmp@plt+0x1686e>
  419f4b:	xor    eax,eax
  419f4d:	mov    rsi,rax
  419f50:	not    rsi
  419f53:	add    rsi,r15
  419f56:	mov    rdx,r15
  419f59:	and    rdx,0x3
  419f5d:	je     419f8a <strcmp@plt+0x16802>
  419f5f:	neg    rdx
  419f62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419f6c:	nop    DWORD PTR [rax+0x0]
  419f70:	movzx  ecx,BYTE PTR [rbx+rax*1]
  419f74:	xor    BYTE PTR [r12+rax*1],cl
  419f78:	movzx  ecx,BYTE PTR [rbx+rax*1]
  419f7c:	xor    BYTE PTR [rbp+rax*1+0x0],cl
  419f80:	add    rax,0x1
  419f84:	add    rdx,0x1
  419f88:	jne    419f70 <strcmp@plt+0x167e8>
  419f8a:	cmp    rsi,0x3
  419f8e:	jb     41a182 <strcmp@plt+0x169fa>
  419f94:	lea    rcx,[r12+r13*1]
  419f98:	add    rcx,0x3
  419f9c:	nop    DWORD PTR [rax+0x0]
  419fa0:	movzx  edx,BYTE PTR [rbx+rax*1]
  419fa4:	xor    BYTE PTR [r12+rax*1],dl
  419fa8:	movzx  edx,BYTE PTR [rbx+rax*1]
  419fac:	xor    BYTE PTR [rcx+rax*1-0x3],dl
  419fb0:	movzx  edx,BYTE PTR [rbx+rax*1+0x1]
  419fb5:	xor    BYTE PTR [r12+rax*1+0x1],dl
  419fba:	movzx  edx,BYTE PTR [rbx+rax*1+0x1]
  419fbf:	xor    BYTE PTR [rcx+rax*1-0x2],dl
  419fc3:	movzx  edx,BYTE PTR [rbx+rax*1+0x2]
  419fc8:	xor    BYTE PTR [r12+rax*1+0x2],dl
  419fcd:	movzx  edx,BYTE PTR [rbx+rax*1+0x2]
  419fd2:	xor    BYTE PTR [rcx+rax*1-0x1],dl
  419fd6:	movzx  edx,BYTE PTR [rbx+rax*1+0x3]
  419fdb:	xor    BYTE PTR [r12+rax*1+0x3],dl
  419fe0:	movzx  edx,BYTE PTR [rbx+rax*1+0x3]
  419fe5:	xor    BYTE PTR [rcx+rax*1],dl
  419fe8:	add    rax,0x4
  419fec:	cmp    r15,rax
  419fef:	jne    419fa0 <strcmp@plt+0x16818>
  419ff1:	jmp    41a182 <strcmp@plt+0x169fa>
  419ff6:	lea    rax,[r12+r15*1]
  419ffa:	lea    rdi,[r15+r13*1]
  419ffe:	add    rdi,r12
  41a001:	lea    rdx,[rbx+r15*1]
  41a005:	cmp    r12,rdi
  41a008:	setb   r8b
  41a00c:	cmp    rbp,rax
  41a00f:	setb   r9b
  41a013:	cmp    r12,rdx
  41a016:	setb   cl
  41a019:	cmp    rbx,rax
  41a01c:	setb   sil
  41a020:	cmp    rbp,rdx
  41a023:	setb   dl
  41a026:	cmp    rbx,rdi
  41a029:	setb   dil
  41a02d:	xor    eax,eax
  41a02f:	test   r8b,r9b
  41a032:	jne    419f4d <strcmp@plt+0x167c5>
  41a038:	and    cl,sil
  41a03b:	jne    419f4d <strcmp@plt+0x167c5>
  41a041:	and    dl,dil
  41a044:	jne    419f4d <strcmp@plt+0x167c5>
  41a04a:	mov    rax,r15
  41a04d:	and    rax,0xffffffffffffffc0
  41a051:	lea    rdx,[rax-0x40]
  41a055:	mov    rcx,rdx
  41a058:	shr    rcx,0x6
  41a05c:	add    rcx,0x1
  41a060:	mov    r8d,ecx
  41a063:	and    r8d,0x1
  41a067:	test   rdx,rdx
  41a06a:	je     41a12a <strcmp@plt+0x169a2>
  41a070:	lea    rsi,[r12+0x60]
  41a075:	lea    rdi,[r12+r13*1]
  41a079:	add    rdi,0x60
  41a07d:	mov    edx,0x1
  41a082:	sub    rdx,rcx
  41a085:	add    rdx,r8
  41a088:	add    rdx,0xffffffffffffffff
  41a08c:	xor    ecx,ecx
  41a08e:	xchg   ax,ax
  41a090:	vmovups ymm0,YMMWORD PTR [rbx+rcx*1]
  41a095:	vmovups ymm1,YMMWORD PTR [rbx+rcx*1+0x20]
  41a09b:	vxorps ymm0,ymm0,YMMWORD PTR [rsi+rcx*1-0x60]
  41a0a1:	vxorps ymm1,ymm1,YMMWORD PTR [rsi+rcx*1-0x40]
  41a0a7:	vmovups YMMWORD PTR [rsi+rcx*1-0x60],ymm0
  41a0ad:	vmovups YMMWORD PTR [rsi+rcx*1-0x40],ymm1
  41a0b3:	vmovups ymm0,YMMWORD PTR [rbx+rcx*1]
  41a0b8:	vmovups ymm1,YMMWORD PTR [rbx+rcx*1+0x20]
  41a0be:	vxorps ymm0,ymm0,YMMWORD PTR [rdi+rcx*1-0x60]
  41a0c4:	vxorps ymm1,ymm1,YMMWORD PTR [rdi+rcx*1-0x40]
  41a0ca:	vmovups YMMWORD PTR [rdi+rcx*1-0x60],ymm0
  41a0d0:	vmovups YMMWORD PTR [rdi+rcx*1-0x40],ymm1
  41a0d6:	vmovups ymm0,YMMWORD PTR [rbx+rcx*1+0x40]
  41a0dc:	vmovups ymm1,YMMWORD PTR [rbx+rcx*1+0x60]
  41a0e2:	vxorps ymm0,ymm0,YMMWORD PTR [rsi+rcx*1-0x20]
  41a0e8:	vxorps ymm1,ymm1,YMMWORD PTR [rsi+rcx*1]
  41a0ed:	vmovups YMMWORD PTR [rsi+rcx*1-0x20],ymm0
  41a0f3:	vmovups YMMWORD PTR [rsi+rcx*1],ymm1
  41a0f8:	vmovups ymm0,YMMWORD PTR [rbx+rcx*1+0x40]
  41a0fe:	vmovups ymm1,YMMWORD PTR [rbx+rcx*1+0x60]
  41a104:	vxorps ymm0,ymm0,YMMWORD PTR [rdi+rcx*1-0x20]
  41a10a:	vxorps ymm1,ymm1,YMMWORD PTR [rdi+rcx*1]
  41a10f:	vmovups YMMWORD PTR [rdi+rcx*1-0x20],ymm0
  41a115:	vmovups YMMWORD PTR [rdi+rcx*1],ymm1
  41a11a:	sub    rcx,0xffffffffffffff80
  41a11e:	add    rdx,0x2
  41a122:	jne    41a090 <strcmp@plt+0x16908>
  41a128:	jmp    41a12c <strcmp@plt+0x169a4>
  41a12a:	xor    ecx,ecx
  41a12c:	test   r8,r8
  41a12f:	je     41a179 <strcmp@plt+0x169f1>
  41a131:	vmovups ymm0,YMMWORD PTR [rbx+rcx*1]
  41a136:	vmovups ymm1,YMMWORD PTR [rbx+rcx*1+0x20]
  41a13c:	vxorps ymm0,ymm0,YMMWORD PTR [r12+rcx*1]
  41a142:	vxorps ymm1,ymm1,YMMWORD PTR [r12+rcx*1+0x20]
  41a149:	vmovups YMMWORD PTR [r12+rcx*1],ymm0
  41a14f:	vmovups YMMWORD PTR [r12+rcx*1+0x20],ymm1
  41a156:	vmovups ymm0,YMMWORD PTR [rbx+rcx*1]
  41a15b:	vmovups ymm1,YMMWORD PTR [rbx+rcx*1+0x20]
  41a161:	vxorps ymm0,ymm0,YMMWORD PTR [rbp+rcx*1+0x0]
  41a167:	vxorps ymm1,ymm1,YMMWORD PTR [rbp+rcx*1+0x20]
  41a16d:	vmovups YMMWORD PTR [rbp+rcx*1+0x0],ymm0
  41a173:	vmovups YMMWORD PTR [rbp+rcx*1+0x20],ymm1
  41a179:	cmp    r15,rax
  41a17c:	jne    419f4d <strcmp@plt+0x167c5>
  41a182:	mov    BYTE PTR [rsp],0x0
  41a186:	mov    BYTE PTR [rsp+0x1],0x0
  41a18b:	mov    BYTE PTR [rsp+0x2],0x0
  41a190:	mov    BYTE PTR [rsp+0x3],0x0
  41a195:	mov    BYTE PTR [rsp+0x4],0x0
  41a19a:	mov    BYTE PTR [rsp+0x5],0x0
  41a19f:	mov    BYTE PTR [rsp+0x6],0x0
  41a1a4:	mov    BYTE PTR [rsp+0x7],0x0
  41a1a9:	mov    BYTE PTR [rsp+0x8],0x0
  41a1ae:	mov    BYTE PTR [rsp+0x9],0x0
  41a1b3:	mov    BYTE PTR [rsp+0xa],0x0
  41a1b8:	mov    BYTE PTR [rsp+0xb],0x0
  41a1bd:	mov    BYTE PTR [rsp+0xc],0x0
  41a1c2:	mov    BYTE PTR [rsp+0xd],0x0
  41a1c7:	mov    BYTE PTR [rsp+0xe],0x0
  41a1cc:	mov    BYTE PTR [rsp+0xf],0x0
  41a1d1:	mov    BYTE PTR [rsp+0x10],0x0
  41a1d6:	mov    BYTE PTR [rsp+0x11],0x0
  41a1db:	mov    BYTE PTR [rsp+0x12],0x0
  41a1e0:	mov    BYTE PTR [rsp+0x13],0x0
  41a1e5:	mov    BYTE PTR [rsp+0x14],0x0
  41a1ea:	mov    BYTE PTR [rsp+0x15],0x0
  41a1ef:	mov    BYTE PTR [rsp+0x16],0x0
  41a1f4:	mov    BYTE PTR [rsp+0x17],0x0
  41a1f9:	mov    BYTE PTR [rsp+0x18],0x0
  41a1fe:	mov    BYTE PTR [rsp+0x19],0x0
  41a203:	mov    BYTE PTR [rsp+0x1a],0x0
  41a208:	mov    BYTE PTR [rsp+0x1b],0x0
  41a20d:	mov    BYTE PTR [rsp+0x1c],0x0
  41a212:	mov    BYTE PTR [rsp+0x1d],0x0
  41a217:	mov    BYTE PTR [rsp+0x1e],0x0
  41a21c:	mov    BYTE PTR [rsp+0x1f],0x0
  41a221:	mov    rax,QWORD PTR [r14]
  41a224:	mov    rdi,QWORD PTR [r14+0x8]
  41a228:	vzeroupper 
  41a22b:	call   QWORD PTR [rax+0x18]
  41a22e:	mov    rax,QWORD PTR [r14]
  41a231:	mov    rdi,QWORD PTR [r14+0x8]
  41a235:	movsxd rdx,DWORD PTR [rax+0x14]
  41a239:	mov    rsi,r12
  41a23c:	call   QWORD PTR [rax+0x20]
  41a23f:	xor    eax,eax
  41a241:	add    rsp,0x28
  41a245:	pop    rbx
  41a246:	pop    r12
  41a248:	pop    r13
  41a24a:	pop    r14
  41a24c:	pop    r15
  41a24e:	pop    rbp
  41a24f:	ret    
  41a250:	mov    eax,0xffffaf00
  41a255:	test   rdi,rdi
  41a258:	je     41a277 <strcmp@plt+0x16aef>
  41a25a:	mov    rcx,QWORD PTR [rdi]
  41a25d:	test   rcx,rcx
  41a260:	je     41a277 <strcmp@plt+0x16aef>
  41a262:	cmp    QWORD PTR [rdi+0x10],0x0
  41a267:	je     41a277 <strcmp@plt+0x16aef>
  41a269:	push   rax
  41a26a:	mov    rdi,QWORD PTR [rdi+0x8]
  41a26e:	call   QWORD PTR [rcx+0x20]
  41a271:	xor    eax,eax
  41a273:	add    rsp,0x8
  41a277:	ret    
  41a278:	nop    DWORD PTR [rax+rax*1+0x0]
  41a280:	push   r15
  41a282:	push   r14
  41a284:	push   r12
  41a286:	push   rbx
  41a287:	sub    rsp,0x28
  41a28b:	mov    eax,0xffffaf00
  41a290:	test   rdi,rdi
  41a293:	je     41a2fb <strcmp@plt+0x16b73>
  41a295:	mov    rbx,rdi
  41a298:	mov    rcx,QWORD PTR [rdi]
  41a29b:	test   rcx,rcx
  41a29e:	je     41a2fb <strcmp@plt+0x16b73>
  41a2a0:	mov    r15,QWORD PTR [rbx+0x10]
  41a2a4:	test   r15,r15
  41a2a7:	je     41a2fb <strcmp@plt+0x16b73>
  41a2a9:	mov    r14,rsi
  41a2ac:	movsxd rax,DWORD PTR [rcx+0x14]
  41a2b0:	add    r15,rax
  41a2b3:	mov    rdi,QWORD PTR [rbx+0x8]
  41a2b7:	mov    r12,rsp
  41a2ba:	mov    rsi,r12
  41a2bd:	call   QWORD PTR [rcx+0x28]
  41a2c0:	mov    rax,QWORD PTR [rbx]
  41a2c3:	mov    rdi,QWORD PTR [rbx+0x8]
  41a2c7:	call   QWORD PTR [rax+0x18]
  41a2ca:	mov    rax,QWORD PTR [rbx]
  41a2cd:	mov    rdi,QWORD PTR [rbx+0x8]
  41a2d1:	movsxd rdx,DWORD PTR [rax+0x14]
  41a2d5:	mov    rsi,r15
  41a2d8:	call   QWORD PTR [rax+0x20]
  41a2db:	mov    rax,QWORD PTR [rbx]
  41a2de:	mov    rdi,QWORD PTR [rbx+0x8]
  41a2e2:	movsxd rdx,DWORD PTR [rax+0x10]
  41a2e6:	mov    rsi,r12
  41a2e9:	call   QWORD PTR [rax+0x20]
  41a2ec:	mov    rax,QWORD PTR [rbx]
  41a2ef:	mov    rdi,QWORD PTR [rbx+0x8]
  41a2f3:	mov    rsi,r14
  41a2f6:	call   QWORD PTR [rax+0x28]
  41a2f9:	xor    eax,eax
  41a2fb:	add    rsp,0x28
  41a2ff:	pop    rbx
  41a300:	pop    r12
  41a302:	pop    r14
  41a304:	pop    r15
  41a306:	ret    
  41a307:	nop    WORD PTR [rax+rax*1+0x0]
  41a310:	push   r14
  41a312:	push   rbx
  41a313:	push   rax
  41a314:	mov    eax,0xffffaf00
  41a319:	test   rdi,rdi
  41a31c:	je     41a34c <strcmp@plt+0x16bc4>
  41a31e:	mov    rbx,rdi
  41a321:	mov    rcx,QWORD PTR [rdi]
  41a324:	test   rcx,rcx
  41a327:	je     41a34c <strcmp@plt+0x16bc4>
  41a329:	mov    r14,QWORD PTR [rbx+0x10]
  41a32d:	test   r14,r14
  41a330:	je     41a34c <strcmp@plt+0x16bc4>
  41a332:	mov    rdi,QWORD PTR [rbx+0x8]
  41a336:	call   QWORD PTR [rcx+0x18]
  41a339:	mov    rax,QWORD PTR [rbx]
  41a33c:	mov    rdi,QWORD PTR [rbx+0x8]
  41a340:	movsxd rdx,DWORD PTR [rax+0x14]
  41a344:	mov    rsi,r14
  41a347:	call   QWORD PTR [rax+0x20]
  41a34a:	xor    eax,eax
  41a34c:	add    rsp,0x8
  41a350:	pop    rbx
  41a351:	pop    r14
  41a353:	ret    
  41a354:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a35e:	xchg   ax,ax
  41a360:	push   rbp
  41a361:	push   r15
  41a363:	push   r14
  41a365:	push   r13
  41a367:	push   r12
  41a369:	push   rbx
  41a36a:	sub    rsp,0x58
  41a36e:	test   rdi,rdi
  41a371:	je     41a484 <strcmp@plt+0x16cfc>
  41a377:	mov    r12,rcx
  41a37a:	mov    r13,rdx
  41a37d:	mov    rbx,rsi
  41a380:	mov    r14,rdi
  41a383:	mov    QWORD PTR [rsp+0x28],r8
  41a388:	mov    QWORD PTR [rsp+0x20],r9
  41a38d:	vxorps xmm0,xmm0,xmm0
  41a391:	vmovaps XMMWORD PTR [rsp],xmm0
  41a396:	mov    QWORD PTR [rsp+0x10],0x0
  41a39f:	call   QWORD PTR [rdi+0x38]
  41a3a2:	mov    QWORD PTR [rsp+0x8],rax
  41a3a7:	mov    ebp,0xffffae80
  41a3ac:	test   rax,rax
  41a3af:	je     41a492 <strcmp@plt+0x16d0a>
  41a3b5:	mov    r15,rax
  41a3b8:	movsxd rsi,DWORD PTR [r14+0x14]
  41a3bc:	mov    edi,0x2
  41a3c1:	call   4032d0 <calloc@plt>
  41a3c6:	mov    QWORD PTR [rsp+0x10],rax
  41a3cb:	test   rax,rax
  41a3ce:	je     41a48b <strcmp@plt+0x16d03>
  41a3d4:	mov    QWORD PTR [rsp],r14
  41a3d8:	mov    rdi,rsp
  41a3db:	mov    rsi,rbx
  41a3de:	mov    rdx,r13
  41a3e1:	call   419e90 <strcmp@plt+0x16708>
  41a3e6:	mov    rax,QWORD PTR [rsp]
  41a3ea:	test   rax,rax
  41a3ed:	je     41a478 <strcmp@plt+0x16cf0>
  41a3f3:	cmp    QWORD PTR [rsp+0x10],0x0
  41a3f9:	je     41a478 <strcmp@plt+0x16cf0>
  41a3fb:	mov    rdi,QWORD PTR [rsp+0x8]
  41a400:	mov    rsi,r12
  41a403:	mov    rdx,QWORD PTR [rsp+0x28]
  41a408:	call   QWORD PTR [rax+0x20]
  41a40b:	mov    rax,QWORD PTR [rsp]
  41a40f:	test   rax,rax
  41a412:	je     41a478 <strcmp@plt+0x16cf0>
  41a414:	mov    rbx,QWORD PTR [rsp+0x10]
  41a419:	test   rbx,rbx
  41a41c:	je     41a478 <strcmp@plt+0x16cf0>
  41a41e:	lea    rbp,[rsp+0x30]
  41a423:	movsxd rcx,DWORD PTR [rax+0x14]
  41a427:	add    rbx,rcx
  41a42a:	mov    rdi,QWORD PTR [rsp+0x8]
  41a42f:	mov    rsi,rbp
  41a432:	call   QWORD PTR [rax+0x28]
  41a435:	mov    rax,QWORD PTR [rsp]
  41a439:	mov    rdi,QWORD PTR [rsp+0x8]
  41a43e:	call   QWORD PTR [rax+0x18]
  41a441:	mov    rax,QWORD PTR [rsp]
  41a445:	mov    rdi,QWORD PTR [rsp+0x8]
  41a44a:	movsxd rdx,DWORD PTR [rax+0x14]
  41a44e:	mov    rsi,rbx
  41a451:	call   QWORD PTR [rax+0x20]
  41a454:	mov    rax,QWORD PTR [rsp]
  41a458:	mov    rdi,QWORD PTR [rsp+0x8]
  41a45d:	movsxd rdx,DWORD PTR [rax+0x10]
  41a461:	mov    rsi,rbp
  41a464:	call   QWORD PTR [rax+0x20]
  41a467:	mov    rax,QWORD PTR [rsp]
  41a46b:	mov    rdi,QWORD PTR [rsp+0x8]
  41a470:	mov    rsi,QWORD PTR [rsp+0x20]
  41a475:	call   QWORD PTR [rax+0x28]
  41a478:	mov    rdi,rsp
  41a47b:	call   419b90 <strcmp@plt+0x16408>
  41a480:	xor    ebp,ebp
  41a482:	jmp    41a492 <strcmp@plt+0x16d0a>
  41a484:	mov    ebp,0xffffaf00
  41a489:	jmp    41a492 <strcmp@plt+0x16d0a>
  41a48b:	mov    rdi,r15
  41a48e:	call   QWORD PTR [r14+0x40]
  41a492:	mov    eax,ebp
  41a494:	add    rsp,0x58
  41a498:	pop    rbx
  41a499:	pop    r12
  41a49b:	pop    r13
  41a49d:	pop    r14
  41a49f:	pop    r15
  41a4a1:	pop    rbp
  41a4a2:	ret    
  41a4a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a4ad:	nop    DWORD PTR [rax]
  41a4b0:	mov    eax,0xffffaf00
  41a4b5:	test   rdi,rdi
  41a4b8:	je     41a4d0 <strcmp@plt+0x16d48>
  41a4ba:	mov    rcx,QWORD PTR [rdi]
  41a4bd:	test   rcx,rcx
  41a4c0:	je     41a4d0 <strcmp@plt+0x16d48>
  41a4c2:	push   rax
  41a4c3:	mov    rdi,QWORD PTR [rdi+0x8]
  41a4c7:	call   QWORD PTR [rcx+0x50]
  41a4ca:	xor    eax,eax
  41a4cc:	add    rsp,0x8
  41a4d0:	ret    
  41a4d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a4db:	nop    DWORD PTR [rax+rax*1+0x0]
  41a4e0:	test   rdi,rdi
  41a4e3:	je     41a4e9 <strcmp@plt+0x16d61>
  41a4e5:	mov    al,BYTE PTR [rdi+0x10]
  41a4e8:	ret    
  41a4e9:	xor    eax,eax
  41a4eb:	ret    
  41a4ec:	nop    DWORD PTR [rax+0x0]
  41a4f0:	test   rdi,rdi
  41a4f3:	je     41a4f8 <strcmp@plt+0x16d70>
  41a4f5:	mov    eax,DWORD PTR [rdi]
  41a4f7:	ret    
  41a4f8:	xor    eax,eax
  41a4fa:	ret    
  41a4fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a500:	test   rdi,rdi
  41a503:	je     41a50a <strcmp@plt+0x16d82>
  41a505:	mov    rax,QWORD PTR [rdi+0x8]
  41a509:	ret    
  41a50a:	xor    eax,eax
  41a50c:	ret    
  41a50d:	nop    DWORD PTR [rax]
  41a510:	vxorps xmm0,xmm0,xmm0
  41a514:	vmovups YMMWORD PTR [rdi+0x3c],ymm0
  41a519:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41a51e:	vmovups YMMWORD PTR [rdi],ymm0
  41a522:	vzeroupper 
  41a525:	ret    
  41a526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a530:	test   rdi,rdi
  41a533:	je     41a5bc <strcmp@plt+0x16e34>
  41a539:	xor    eax,eax
  41a53b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a540:	mov    BYTE PTR [rdi+rax*1],0x0
  41a544:	mov    BYTE PTR [rdi+rax*1+0x1],0x0
  41a549:	mov    BYTE PTR [rdi+rax*1+0x2],0x0
  41a54e:	mov    BYTE PTR [rdi+rax*1+0x3],0x0
  41a553:	mov    BYTE PTR [rdi+rax*1+0x4],0x0
  41a558:	mov    BYTE PTR [rdi+rax*1+0x5],0x0
  41a55d:	mov    BYTE PTR [rdi+rax*1+0x6],0x0
  41a562:	mov    BYTE PTR [rdi+rax*1+0x7],0x0
  41a567:	mov    BYTE PTR [rdi+rax*1+0x8],0x0
  41a56c:	mov    BYTE PTR [rdi+rax*1+0x9],0x0
  41a571:	mov    BYTE PTR [rdi+rax*1+0xa],0x0
  41a576:	mov    BYTE PTR [rdi+rax*1+0xb],0x0
  41a57b:	mov    BYTE PTR [rdi+rax*1+0xc],0x0
  41a580:	mov    BYTE PTR [rdi+rax*1+0xd],0x0
  41a585:	mov    BYTE PTR [rdi+rax*1+0xe],0x0
  41a58a:	mov    BYTE PTR [rdi+rax*1+0xf],0x0
  41a58f:	mov    BYTE PTR [rdi+rax*1+0x10],0x0
  41a594:	mov    BYTE PTR [rdi+rax*1+0x11],0x0
  41a599:	mov    BYTE PTR [rdi+rax*1+0x12],0x0
  41a59e:	mov    BYTE PTR [rdi+rax*1+0x13],0x0
  41a5a3:	mov    BYTE PTR [rdi+rax*1+0x14],0x0
  41a5a8:	mov    BYTE PTR [rdi+rax*1+0x15],0x0
  41a5ad:	mov    BYTE PTR [rdi+rax*1+0x16],0x0
  41a5b2:	add    rax,0x17
  41a5b6:	cmp    rax,0x5c
  41a5ba:	jne    41a540 <strcmp@plt+0x16db8>
  41a5bc:	ret    
  41a5bd:	nop    DWORD PTR [rax]
  41a5c0:	vmovups ymm0,YMMWORD PTR [rsi]
  41a5c4:	vmovups ymm1,YMMWORD PTR [rsi+0x20]
  41a5c9:	vmovups ymm2,YMMWORD PTR [rsi+0x3c]
  41a5ce:	vmovups YMMWORD PTR [rdi+0x3c],ymm2
  41a5d3:	vmovups YMMWORD PTR [rdi+0x20],ymm1
  41a5d8:	vmovups YMMWORD PTR [rdi],ymm0
  41a5dc:	vzeroupper 
  41a5df:	ret    
  41a5e0:	vmovaps xmm0,XMMWORD PTR [rip+0x2dc88]        # 448270 <strcmp@plt+0x44ae8>
  41a5e8:	vmovups XMMWORD PTR [rdi],xmm0
  41a5ec:	movabs rax,0x1032547698badcfe
  41a5f6:	mov    QWORD PTR [rdi+0x10],rax
  41a5fa:	mov    DWORD PTR [rdi+0x18],0xc3d2e1f0
  41a601:	ret    
  41a602:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a60c:	nop    DWORD PTR [rax+0x0]
  41a610:	push   rbp
  41a611:	push   r15
  41a613:	push   r14
  41a615:	push   r13
  41a617:	push   r12
  41a619:	push   rbx
  41a61a:	mov    r13,rsi
  41a61d:	mov    ebp,DWORD PTR [rsi]
  41a61f:	mov    r14d,DWORD PTR [rsi+0x4]
  41a623:	mov    r12d,DWORD PTR [rsi+0x8]
  41a627:	mov    eax,r12d
  41a62a:	xor    eax,ebp
  41a62c:	mov    DWORD PTR [rsp-0x34],eax
  41a630:	bswap  ebp
  41a632:	mov    r15d,DWORD PTR [rsi+0xc]
  41a636:	mov    r9d,DWORD PTR [rsi+0x10]
  41a63a:	mov    eax,r9d
  41a63d:	xor    eax,r12d
  41a640:	mov    DWORD PTR [rsp-0x54],eax
  41a644:	bswap  r12d
  41a647:	mov    QWORD PTR [rsp-0x8],rdi
  41a64c:	mov    eax,DWORD PTR [rdi+0x8]
  41a64f:	vmovdqu xmm0,XMMWORD PTR [rdi+0xc]
  41a654:	rorx   ebx,eax,0x1b
  41a65a:	mov    ecx,eax
  41a65c:	vpextrd eax,xmm0,0x1
  41a662:	add    ebx,ebp
  41a664:	vpextrd r8d,xmm0,0x2
  41a66a:	vmovd  ebp,xmm0
  41a66e:	andn   r10d,ebp,r8d
  41a673:	andn   r11d,ecx,eax
  41a678:	mov    DWORD PTR [rsp-0xc],ecx
  41a67c:	add    r12d,eax
  41a67f:	and    eax,ebp
  41a681:	or     eax,r10d
  41a684:	vpextrd edi,xmm0,0x3
  41a68a:	add    edi,ebx
  41a68c:	mov    edx,r15d
  41a68f:	xor    edx,r14d
  41a692:	mov    DWORD PTR [rsp-0x38],edx
  41a696:	bswap  r14d
  41a699:	lea    edi,[rax+rdi*1]
  41a69c:	add    edi,0x5a827999
  41a6a2:	rorx   ebx,ebp,0x2
  41a6a8:	mov    eax,ebx
  41a6aa:	and    eax,ecx
  41a6ac:	or     eax,r11d
  41a6af:	mov    ebp,DWORD PTR [rsi+0x14]
  41a6b2:	add    r14d,r8d
  41a6b5:	mov    edx,ebp
  41a6b7:	xor    edx,r15d
  41a6ba:	mov    DWORD PTR [rsp-0x5c],edx
  41a6be:	bswap  r15d
  41a6c1:	add    r15d,ebx
  41a6c4:	andn   edx,edi,ebx
  41a6c9:	add    r14d,eax
  41a6cc:	rorx   eax,edi,0x1b
  41a6d2:	lea    ebx,[rax+r14*1]
  41a6d6:	add    ebx,0x5a827999
  41a6dc:	rorx   ecx,ecx,0x2
  41a6e2:	mov    eax,ecx
  41a6e4:	and    eax,edi
  41a6e6:	or     eax,edx
  41a6e8:	add    r12d,eax
  41a6eb:	rorx   eax,ebx,0x1b
  41a6f1:	lea    r11d,[rax+r12*1]
  41a6f5:	add    r11d,0x5a827999
  41a6fc:	mov    edx,DWORD PTR [rsi+0x18]
  41a6ff:	mov    eax,edx
  41a701:	xor    eax,r9d
  41a704:	mov    DWORD PTR [rsp-0x50],eax
  41a708:	bswap  r9d
  41a70b:	add    r9d,ecx
  41a70e:	andn   ecx,ebx,ecx
  41a713:	rorx   eax,edi,0x2
  41a719:	mov    edi,eax
  41a71b:	and    edi,ebx
  41a71d:	or     edi,ecx
  41a71f:	add    r15d,edi
  41a722:	rorx   ecx,r11d,0x1b
  41a728:	lea    r10d,[rcx+r15*1]
  41a72c:	add    r10d,0x5a827999
  41a733:	mov    ecx,DWORD PTR [rsi+0x1c]
  41a736:	mov    edi,ecx
  41a738:	xor    edi,ebp
  41a73a:	mov    DWORD PTR [rsp-0x4c],edi
  41a73e:	bswap  ebp
  41a740:	add    ebp,eax
  41a742:	andn   r8d,r11d,eax
  41a747:	rorx   eax,ebx,0x2
  41a74d:	mov    edi,eax
  41a74f:	and    edi,r11d
  41a752:	or     edi,r8d
  41a755:	add    r9d,edi
  41a758:	rorx   edi,r10d,0x1b
  41a75e:	lea    ebx,[rdi+r9*1]
  41a762:	add    ebx,0x5a827999
  41a768:	mov    r12d,DWORD PTR [rsi+0x20]
  41a76c:	mov    edi,r12d
  41a76f:	xor    edi,edx
  41a771:	mov    DWORD PTR [rsp-0x60],edi
  41a775:	bswap  edx
  41a777:	add    edx,eax
  41a779:	andn   r9d,r10d,eax
  41a77e:	rorx   eax,r11d,0x2
  41a784:	mov    edi,eax
  41a786:	and    edi,r10d
  41a789:	or     edi,r9d
  41a78c:	add    ebp,edi
  41a78e:	rorx   edi,ebx,0x1b
  41a794:	lea    edi,[rdi+rbp*1]
  41a797:	add    edi,0x5a827999
  41a79d:	mov    esi,DWORD PTR [rsi+0x24]
  41a7a0:	mov    ebp,esi
  41a7a2:	mov    DWORD PTR [rsp-0x40],esi
  41a7a6:	xor    ebp,ecx
  41a7a8:	mov    DWORD PTR [rsp-0x48],ebp
  41a7ac:	bswap  ecx
  41a7ae:	add    ecx,eax
  41a7b0:	andn   r9d,ebx,eax
  41a7b5:	rorx   eax,r10d,0x2
  41a7bb:	mov    ebp,eax
  41a7bd:	and    ebp,ebx
  41a7bf:	or     ebp,r9d
  41a7c2:	add    edx,ebp
  41a7c4:	rorx   ebp,edi,0x1b
  41a7ca:	lea    edx,[rdx+rbp*1]
  41a7cd:	add    edx,0x5a827999
  41a7d3:	mov    ebp,r12d
  41a7d6:	bswap  ebp
  41a7d8:	add    ebp,eax
  41a7da:	andn   r9d,edi,eax
  41a7df:	rorx   eax,ebx,0x2
  41a7e5:	mov    ebx,eax
  41a7e7:	and    ebx,edi
  41a7e9:	or     ebx,r9d
  41a7ec:	add    ecx,ebx
  41a7ee:	rorx   ebx,edx,0x1b
  41a7f4:	lea    r9d,[rbx+rcx*1]
  41a7f8:	add    r9d,0x5a827999
  41a7ff:	mov    ebx,esi
  41a801:	bswap  ebx
  41a803:	add    ebx,eax
  41a805:	andn   eax,edx,eax
  41a80a:	rorx   ecx,edi,0x2
  41a810:	mov    edi,ecx
  41a812:	and    edi,edx
  41a814:	or     edi,eax
  41a816:	add    ebp,edi
  41a818:	rorx   eax,r9d,0x1b
  41a81e:	lea    eax,[rax+rbp*1]
  41a821:	add    eax,0x5a827999
  41a826:	mov    r8d,DWORD PTR [r13+0x28]
  41a82a:	mov    edi,r8d
  41a82d:	bswap  edi
  41a82f:	add    edi,ecx
  41a831:	andn   ecx,r9d,ecx
  41a836:	rorx   ebp,edx,0x2
  41a83c:	mov    edx,ebp
  41a83e:	and    edx,r9d
  41a841:	or     edx,ecx
  41a843:	add    ebx,edx
  41a845:	rorx   ecx,eax,0x1b
  41a84b:	lea    edx,[rcx+rbx*1]
  41a84e:	add    edx,0x5a827999
  41a854:	mov    r11d,DWORD PTR [r13+0x2c]
  41a858:	mov    ecx,r11d
  41a85b:	bswap  ecx
  41a85d:	add    ecx,ebp
  41a85f:	andn   r10d,eax,ebp
  41a864:	rorx   ebp,r9d,0x2
  41a86a:	mov    ebx,ebp
  41a86c:	and    ebx,eax
  41a86e:	or     ebx,r10d
  41a871:	add    edi,ebx
  41a873:	rorx   ebx,edx,0x1b
  41a879:	lea    edi,[rbx+rdi*1]
  41a87c:	add    edi,0x5a827999
  41a882:	mov    r10d,DWORD PTR [r13+0x30]
  41a886:	mov    ebx,r10d
  41a889:	bswap  ebx
  41a88b:	add    ebx,ebp
  41a88d:	andn   r9d,edx,ebp
  41a892:	rorx   ebp,eax,0x2
  41a898:	mov    eax,ebp
  41a89a:	and    eax,edx
  41a89c:	or     eax,r9d
  41a89f:	add    ecx,eax
  41a8a1:	rorx   eax,edi,0x1b
  41a8a7:	lea    eax,[rax+rcx*1]
  41a8aa:	add    eax,0x5a827999
  41a8af:	mov    r15d,DWORD PTR [r13+0x34]
  41a8b3:	mov    ecx,r15d
  41a8b6:	bswap  ecx
  41a8b8:	add    ecx,ebp
  41a8ba:	andn   r9d,edi,ebp
  41a8bf:	rorx   edx,edx,0x2
  41a8c5:	mov    ebp,edx
  41a8c7:	and    ebp,edi
  41a8c9:	or     ebp,r9d
  41a8cc:	add    ebx,ebp
  41a8ce:	rorx   ebp,eax,0x1b
  41a8d4:	lea    ebp,[rbx+rbp*1]
  41a8d7:	add    ebp,0x5a827999
  41a8dd:	rorx   r14d,edi,0x2
  41a8e3:	mov    edi,r14d
  41a8e6:	and    edi,eax
  41a8e8:	andn   ebx,eax,edx
  41a8ed:	or     edi,ebx
  41a8ef:	add    ecx,edi
  41a8f1:	rorx   edi,ebp,0x1b
  41a8f7:	lea    esi,[rdi+rcx*1]
  41a8fa:	add    esi,0x5a827999
  41a900:	rorx   ecx,eax,0x2
  41a906:	mov    eax,ecx
  41a908:	mov    rdi,rcx
  41a90b:	mov    QWORD PTR [rsp-0x20],rcx
  41a910:	and    eax,ebp
  41a912:	andn   ecx,ebp,r14d
  41a917:	or     eax,ecx
  41a919:	mov    ebx,DWORD PTR [r13+0x38]
  41a91d:	mov    ecx,ebx
  41a91f:	bswap  ecx
  41a921:	mov    DWORD PTR [rsp-0x30],ecx
  41a925:	add    edx,ecx
  41a927:	add    edx,eax
  41a929:	rorx   eax,esi,0x1b
  41a92f:	lea    eax,[rax+rdx*1]
  41a932:	add    eax,0x5a827999
  41a937:	mov    DWORD PTR [rsp-0x58],eax
  41a93b:	rorx   r9d,ebp,0x2
  41a941:	mov    edx,r9d
  41a944:	and    edx,esi
  41a946:	andn   eax,esi,edi
  41a94b:	mov    ebp,esi
  41a94d:	or     edx,eax
  41a94f:	mov    eax,r8d
  41a952:	xor    eax,r12d
  41a955:	mov    DWORD PTR [rsp-0x3c],eax
  41a959:	mov    esi,DWORD PTR [r13+0x3c]
  41a95d:	mov    eax,esi
  41a95f:	xor    eax,r15d
  41a962:	mov    DWORD PTR [rsp-0x44],eax
  41a966:	xor    r12d,r15d
  41a969:	xor    DWORD PTR [rsp-0x4c],r15d
  41a96e:	xor    r15d,r11d
  41a971:	mov    DWORD PTR [rsp-0x28],r15d
  41a976:	xor    DWORD PTR [rsp-0x5c],r11d
  41a97b:	mov    ecx,DWORD PTR [rsp-0x40]
  41a97f:	xor    r11d,ecx
  41a982:	xor    ecx,ebx
  41a984:	xor    DWORD PTR [rsp-0x60],ebx
  41a988:	mov    r15d,ebx
  41a98b:	xor    r15d,r10d
  41a98e:	xor    DWORD PTR [rsp-0x50],r10d
  41a993:	xor    r10d,r8d
  41a996:	xor    r8d,esi
  41a999:	mov    ebx,r8d
  41a99c:	xor    DWORD PTR [rsp-0x48],esi
  41a9a0:	bswap  esi
  41a9a2:	mov    DWORD PTR [rsp-0x18],esi
  41a9a6:	add    r14d,esi
  41a9a9:	add    r14d,edx
  41a9ac:	mov    eax,DWORD PTR [rsp-0x58]
  41a9b0:	rorx   esi,eax,0x1b
  41a9b6:	lea    r14d,[rsi+r14*1]
  41a9ba:	add    r14d,0x5a827999
  41a9c1:	rorx   ebp,ebp,0x2
  41a9c7:	mov    esi,ebp
  41a9c9:	and    esi,eax
  41a9cb:	andn   edi,eax,r9d
  41a9d0:	mov    edx,eax
  41a9d2:	or     esi,edi
  41a9d4:	xor    r12d,DWORD PTR [rsp-0x34]
  41a9d9:	bswap  r12d
  41a9dc:	rorx   r13d,r12d,0x1f
  41a9e2:	mov    rax,QWORD PTR [rsp-0x20]
  41a9e7:	add    eax,r13d
  41a9ea:	add    eax,esi
  41a9ec:	rorx   esi,r14d,0x1b
  41a9f2:	lea    esi,[rsi+rax*1]
  41a9f5:	add    esi,0x5a827999
  41a9fb:	rorx   edi,edx,0x2
  41aa01:	mov    eax,edi
  41aa03:	and    eax,r14d
  41aa06:	andn   edx,r14d,ebp
  41aa0b:	or     eax,edx
  41aa0d:	xor    ecx,DWORD PTR [rsp-0x38]
  41aa11:	bswap  ecx
  41aa13:	rorx   r8d,ecx,0x1f
  41aa19:	add    r9d,r8d
  41aa1c:	mov    DWORD PTR [rsp-0x20],r8d
  41aa21:	add    r9d,eax
  41aa24:	rorx   eax,esi,0x1b
  41aa2a:	lea    eax,[rax+r9*1]
  41aa2e:	add    eax,0x5a827999
  41aa33:	rorx   edx,r14d,0x2
  41aa39:	mov    r14d,edx
  41aa3c:	and    r14d,esi
  41aa3f:	andn   ecx,esi,edi
  41aa44:	or     r14d,ecx
  41aa47:	xor    ebx,DWORD PTR [rsp-0x54]
  41aa4b:	bswap  ebx
  41aa4d:	rorx   ecx,ebx,0x1f
  41aa53:	add    ebp,ecx
  41aa55:	mov    r12d,ecx
  41aa58:	mov    DWORD PTR [rsp-0x40],ecx
  41aa5c:	add    ebp,r14d
  41aa5f:	rorx   ecx,eax,0x1b
  41aa65:	lea    r9d,[rcx+rbp*1]
  41aa69:	add    r9d,0x5a827999
  41aa70:	rorx   esi,esi,0x2
  41aa76:	mov    r14d,esi
  41aa79:	and    r14d,eax
  41aa7c:	andn   ebp,eax,edx
  41aa81:	or     r14d,ebp
  41aa84:	mov    ebp,DWORD PTR [rsp-0x5c]
  41aa88:	bswap  ebp
  41aa8a:	xor    ebp,r13d
  41aa8d:	rorx   ebx,ebp,0x1f
  41aa93:	add    edi,ebx
  41aa95:	mov    DWORD PTR [rsp-0x58],ebx
  41aa99:	add    edi,r14d
  41aa9c:	rorx   ebp,r9d,0x1b
  41aaa2:	lea    edi,[rdi+rbp*1]
  41aaa5:	add    edi,0x5a827999
  41aaab:	rorx   eax,eax,0x2
  41aab1:	mov    ebp,eax
  41aab3:	xor    ebp,esi
  41aab5:	xor    ebp,r9d
  41aab8:	mov    ecx,DWORD PTR [rsp-0x50]
  41aabc:	bswap  ecx
  41aabe:	xor    ecx,r8d
  41aac1:	rorx   ecx,ecx,0x1f
  41aac7:	add    edx,ecx
  41aac9:	mov    r14d,ecx
  41aacc:	mov    DWORD PTR [rsp-0x54],ecx
  41aad0:	add    edx,ebp
  41aad2:	rorx   ebp,edi,0x1b
  41aad8:	lea    r8d,[rdx+rbp*1]
  41aadc:	add    r8d,0x6ed9eba1
  41aae3:	rorx   ecx,r9d,0x2
  41aae9:	mov    ebp,ecx
  41aaeb:	xor    ebp,eax
  41aaed:	xor    ebp,edi
  41aaef:	mov    edx,DWORD PTR [rsp-0x4c]
  41aaf3:	bswap  edx
  41aaf5:	xor    edx,r12d
  41aaf8:	rorx   r12d,edx,0x1f
  41aafe:	add    esi,r12d
  41ab01:	mov    DWORD PTR [rsp-0x38],r12d
  41ab06:	add    esi,ebp
  41ab08:	rorx   ebp,r8d,0x1b
  41ab0e:	lea    esi,[rsi+rbp*1]
  41ab11:	add    esi,0x6ed9eba1
  41ab17:	rorx   ebp,edi,0x2
  41ab1d:	mov    edi,ebp
  41ab1f:	xor    edi,ecx
  41ab21:	xor    edi,r8d
  41ab24:	mov    edx,DWORD PTR [rsp-0x60]
  41ab28:	bswap  edx
  41ab2a:	xor    edx,ebx
  41ab2c:	rorx   edx,edx,0x1f
  41ab32:	mov    DWORD PTR [rsp-0x5c],edx
  41ab36:	add    eax,edx
  41ab38:	add    eax,edi
  41ab3a:	rorx   edi,esi,0x1b
  41ab40:	lea    r9d,[rdi+rax*1]
  41ab44:	add    r9d,0x6ed9eba1
  41ab4b:	rorx   eax,r8d,0x2
  41ab51:	mov    edx,eax
  41ab53:	xor    edx,ebp
  41ab55:	xor    edx,esi
  41ab57:	mov    edi,DWORD PTR [rsp-0x48]
  41ab5b:	bswap  edi
  41ab5d:	xor    edi,r14d
  41ab60:	rorx   ebx,edi,0x1f
  41ab66:	add    ecx,ebx
  41ab68:	mov    DWORD PTR [rsp-0x2c],ebx
  41ab6c:	add    ecx,edx
  41ab6e:	rorx   edx,r9d,0x1b
  41ab74:	lea    r8d,[rdx+rcx*1]
  41ab78:	add    r8d,0x6ed9eba1
  41ab7f:	rorx   edi,esi,0x2
  41ab85:	mov    edx,edi
  41ab87:	xor    edx,eax
  41ab89:	xor    edx,r9d
  41ab8c:	mov    ecx,DWORD PTR [rsp-0x3c]
  41ab90:	bswap  ecx
  41ab92:	xor    ecx,r13d
  41ab95:	xor    ecx,r12d
  41ab98:	rorx   r14d,ecx,0x1f
  41ab9e:	add    ebp,r14d
  41aba1:	mov    DWORD PTR [rsp-0x3c],r14d
  41aba6:	add    ebp,edx
  41aba8:	rorx   edx,r8d,0x1b
  41abae:	lea    ebp,[rdx+rbp*1]
  41abb1:	add    ebp,0x6ed9eba1
  41abb7:	rorx   edx,r9d,0x2
  41abbd:	mov    esi,edx
  41abbf:	xor    esi,edi
  41abc1:	xor    esi,r8d
  41abc4:	bswap  r11d
  41abc7:	mov    r12d,DWORD PTR [rsp-0x20]
  41abcc:	xor    r11d,r12d
  41abcf:	xor    r11d,DWORD PTR [rsp-0x5c]
  41abd4:	rorx   ecx,r11d,0x1f
  41abda:	mov    DWORD PTR [rsp-0x60],ecx
  41abde:	add    eax,ecx
  41abe0:	add    eax,esi
  41abe2:	rorx   esi,ebp,0x1b
  41abe8:	lea    r9d,[rsi+rax*1]
  41abec:	add    r9d,0x6ed9eba1
  41abf3:	rorx   esi,r8d,0x2
  41abf9:	mov    ecx,esi
  41abfb:	xor    ecx,edx
  41abfd:	xor    ecx,ebp
  41abff:	bswap  r10d
  41ac02:	xor    r10d,DWORD PTR [rsp-0x40]
  41ac07:	xor    r10d,ebx
  41ac0a:	rorx   eax,r10d,0x1f
  41ac10:	add    edi,eax
  41ac12:	mov    r11d,eax
  41ac15:	mov    DWORD PTR [rsp-0x24],eax
  41ac19:	add    edi,ecx
  41ac1b:	rorx   ecx,r9d,0x1b
  41ac21:	lea    edi,[rcx+rdi*1]
  41ac24:	add    edi,0x6ed9eba1
  41ac2a:	rorx   ecx,ebp,0x2
  41ac30:	mov    ebp,ecx
  41ac32:	xor    ebp,esi
  41ac34:	xor    ebp,r9d
  41ac37:	mov    eax,DWORD PTR [rsp-0x28]
  41ac3b:	bswap  eax
  41ac3d:	xor    eax,DWORD PTR [rsp-0x58]
  41ac41:	xor    eax,r14d
  41ac44:	rorx   eax,eax,0x1f
  41ac4a:	add    edx,eax
  41ac4c:	mov    r10d,eax
  41ac4f:	mov    DWORD PTR [rsp-0x28],eax
  41ac53:	add    edx,ebp
  41ac55:	rorx   ebp,edi,0x1b
  41ac5b:	lea    r8d,[rdx+rbp*1]
  41ac5f:	add    r8d,0x6ed9eba1
  41ac66:	rorx   edx,r9d,0x2
  41ac6c:	mov    eax,edx
  41ac6e:	xor    eax,ecx
  41ac70:	xor    eax,edi
  41ac72:	bswap  r15d
  41ac75:	xor    r15d,DWORD PTR [rsp-0x54]
  41ac7a:	xor    r15d,DWORD PTR [rsp-0x60]
  41ac7f:	rorx   ebp,r15d,0x1f
  41ac85:	add    esi,ebp
  41ac87:	mov    r9d,ebp
  41ac8a:	mov    DWORD PTR [rsp-0x34],ebp
  41ac8e:	add    esi,eax
  41ac90:	rorx   eax,r8d,0x1b
  41ac96:	lea    esi,[rax+rsi*1]
  41ac99:	add    esi,0x6ed9eba1
  41ac9f:	rorx   r15d,edi,0x2
  41aca5:	mov    edi,r15d
  41aca8:	xor    edi,edx
  41acaa:	xor    edi,r8d
  41acad:	mov    ebp,DWORD PTR [rsp-0x44]
  41acb1:	bswap  ebp
  41acb3:	xor    ebp,DWORD PTR [rsp-0x38]
  41acb7:	xor    ebp,r11d
  41acba:	rorx   ebp,ebp,0x1f
  41acc0:	add    ecx,ebp
  41acc2:	mov    r11d,ebp
  41acc5:	mov    DWORD PTR [rsp-0x44],ebp
  41acc9:	add    ecx,edi
  41accb:	rorx   edi,esi,0x1b
  41acd1:	lea    edi,[rdi+rcx*1]
  41acd4:	add    edi,0x6ed9eba1
  41acda:	rorx   ecx,r8d,0x2
  41ace0:	mov    ebp,ecx
  41ace2:	xor    ebp,r15d
  41ace5:	xor    ebp,esi
  41ace7:	mov    ebx,DWORD PTR [rsp-0x30]
  41aceb:	xor    ebx,r13d
  41acee:	xor    ebx,DWORD PTR [rsp-0x5c]
  41acf2:	xor    ebx,r10d
  41acf5:	rorx   ebx,ebx,0x1f
  41acfb:	add    edx,ebx
  41acfd:	add    edx,ebp
  41acff:	rorx   ebp,edi,0x1b
  41ad05:	lea    r8d,[rdx+rbp*1]
  41ad09:	add    r8d,0x6ed9eba1
  41ad10:	rorx   edx,esi,0x2
  41ad16:	mov    esi,edx
  41ad18:	xor    esi,ecx
  41ad1a:	xor    esi,edi
  41ad1c:	mov    ebp,DWORD PTR [rsp-0x18]
  41ad20:	xor    ebp,r12d
  41ad23:	xor    ebp,DWORD PTR [rsp-0x2c]
  41ad27:	xor    ebp,r9d
  41ad2a:	rorx   r14d,ebp,0x1f
  41ad30:	add    r15d,r14d
  41ad33:	mov    DWORD PTR [rsp-0x50],r14d
  41ad38:	add    r15d,esi
  41ad3b:	rorx   esi,r8d,0x1b
  41ad41:	lea    r15d,[rsi+r15*1]
  41ad45:	add    r15d,0x6ed9eba1
  41ad4c:	rorx   eax,edi,0x2
  41ad52:	mov    edi,eax
  41ad54:	xor    edi,edx
  41ad56:	xor    edi,r8d
  41ad59:	mov    r9d,DWORD PTR [rsp-0x40]
  41ad5e:	xor    r13d,r9d
  41ad61:	xor    r13d,DWORD PTR [rsp-0x3c]
  41ad66:	xor    r13d,r11d
  41ad69:	rorx   ebp,r13d,0x1f
  41ad6f:	add    ecx,ebp
  41ad71:	mov    r11d,ebp
  41ad74:	mov    DWORD PTR [rsp-0x30],ebp
  41ad78:	add    ecx,edi
  41ad7a:	rorx   edi,r15d,0x1b
  41ad80:	lea    r13d,[rdi+rcx*1]
  41ad84:	add    r13d,0x6ed9eba1
  41ad8b:	rorx   ecx,r8d,0x2
  41ad91:	mov    ebp,ecx
  41ad93:	xor    ebp,eax
  41ad95:	xor    ebp,r15d
  41ad98:	mov    r10d,DWORD PTR [rsp-0x58]
  41ad9d:	mov    edi,r12d
  41ada0:	xor    edi,r10d
  41ada3:	xor    edi,DWORD PTR [rsp-0x60]
  41ada7:	xor    edi,ebx
  41ada9:	mov    r12d,ebx
  41adac:	mov    DWORD PTR [rsp-0x14],ebx
  41adb0:	rorx   ebx,edi,0x1f
  41adb6:	add    edx,ebx
  41adb8:	mov    DWORD PTR [rsp-0x20],ebx
  41adbc:	add    edx,ebp
  41adbe:	rorx   ebp,r13d,0x1b
  41adc4:	lea    r8d,[rdx+rbp*1]
  41adc8:	add    r8d,0x6ed9eba1
  41adcf:	rorx   edx,r15d,0x2
  41add5:	mov    esi,edx
  41add7:	xor    esi,ecx
  41add9:	xor    esi,r13d
  41addc:	mov    r15d,DWORD PTR [rsp-0x54]
  41ade1:	xor    r9d,r15d
  41ade4:	xor    r9d,DWORD PTR [rsp-0x24]
  41ade9:	xor    r9d,r14d
  41adec:	rorx   r14d,r9d,0x1f
  41adf2:	add    eax,r14d
  41adf5:	mov    DWORD PTR [rsp-0x4c],r14d
  41adfa:	add    eax,esi
  41adfc:	rorx   esi,r8d,0x1b
  41ae02:	lea    r9d,[rsi+rax*1]
  41ae06:	add    r9d,0x6ed9eba1
  41ae0d:	rorx   eax,r13d,0x2
  41ae13:	mov    edi,eax
  41ae15:	xor    edi,edx
  41ae17:	xor    edi,r8d
  41ae1a:	mov    r13d,DWORD PTR [rsp-0x38]
  41ae1f:	xor    r10d,r13d
  41ae22:	xor    r10d,DWORD PTR [rsp-0x28]
  41ae27:	xor    r10d,r11d
  41ae2a:	rorx   ebp,r10d,0x1f
  41ae30:	add    ecx,ebp
  41ae32:	mov    r11d,ebp
  41ae35:	mov    DWORD PTR [rsp-0x58],ebp
  41ae39:	add    ecx,edi
  41ae3b:	rorx   edi,r9d,0x1b
  41ae41:	lea    r10d,[rdi+rcx*1]
  41ae45:	add    r10d,0x6ed9eba1
  41ae4c:	rorx   ecx,r8d,0x2
  41ae52:	mov    ebp,ecx
  41ae54:	xor    ebp,eax
  41ae56:	xor    ebp,r9d
  41ae59:	mov    r8d,DWORD PTR [rsp-0x5c]
  41ae5e:	mov    esi,r15d
  41ae61:	xor    esi,r8d
  41ae64:	xor    esi,DWORD PTR [rsp-0x34]
  41ae68:	xor    esi,ebx
  41ae6a:	rorx   r15d,esi,0x1f
  41ae70:	add    edx,r15d
  41ae73:	mov    DWORD PTR [rsp-0x54],r15d
  41ae78:	add    edx,ebp
  41ae7a:	rorx   ebp,r10d,0x1b
  41ae80:	lea    ebp,[rdx+rbp*1]
  41ae83:	add    ebp,0x6ed9eba1
  41ae89:	rorx   edx,r9d,0x2
  41ae8f:	mov    esi,edx
  41ae91:	xor    esi,ecx
  41ae93:	xor    esi,r10d
  41ae96:	mov    ebx,r13d
  41ae99:	mov    r13d,DWORD PTR [rsp-0x2c]
  41ae9e:	xor    ebx,r13d
  41aea1:	xor    ebx,DWORD PTR [rsp-0x44]
  41aea5:	xor    ebx,r14d
  41aea8:	rorx   edi,ebx,0x1f
  41aeae:	mov    DWORD PTR [rsp-0x48],edi
  41aeb2:	add    eax,edi
  41aeb4:	add    eax,esi
  41aeb6:	rorx   esi,ebp,0x1b
  41aebc:	lea    r9d,[rsi+rax*1]
  41aec0:	add    r9d,0x6ed9eba1
  41aec7:	rorx   esi,r10d,0x2
  41aecd:	mov    eax,esi
  41aecf:	xor    eax,edx
  41aed1:	xor    eax,ebp
  41aed3:	mov    r10d,DWORD PTR [rsp-0x3c]
  41aed8:	xor    r8d,r10d
  41aedb:	xor    r8d,r12d
  41aede:	xor    r8d,r11d
  41aee1:	rorx   edi,r8d,0x1f
  41aee7:	add    ecx,edi
  41aee9:	mov    r12d,edi
  41aeec:	mov    DWORD PTR [rsp-0x38],edi
  41aef0:	add    ecx,eax
  41aef2:	rorx   eax,r9d,0x1b
  41aef8:	lea    ebx,[rax+rcx*1]
  41aefb:	add    ebx,0x6ed9eba1
  41af01:	rorx   edi,ebp,0x2
  41af07:	mov    ecx,edi
  41af09:	xor    ecx,esi
  41af0b:	xor    ecx,r9d
  41af0e:	mov    r14d,DWORD PTR [rsp-0x60]
  41af13:	xor    r13d,r14d
  41af16:	xor    r13d,DWORD PTR [rsp-0x50]
  41af1b:	xor    r13d,r15d
  41af1e:	rorx   eax,r13d,0x1f
  41af24:	add    edx,eax
  41af26:	mov    r11d,eax
  41af29:	mov    DWORD PTR [rsp-0x40],eax
  41af2d:	add    edx,ecx
  41af2f:	rorx   ecx,ebx,0x1b
  41af35:	lea    r8d,[rcx+rdx*1]
  41af39:	add    r8d,0x6ed9eba1
  41af40:	rorx   edx,r9d,0x2
  41af46:	mov    ecx,ebx
  41af48:	and    ecx,edx
  41af4a:	mov    eax,ebx
  41af4c:	or     eax,edx
  41af4e:	and    eax,edi
  41af50:	or     eax,ecx
  41af52:	mov    ecx,r10d
  41af55:	mov    r10d,DWORD PTR [rsp-0x24]
  41af5a:	xor    ecx,r10d
  41af5d:	xor    ecx,DWORD PTR [rsp-0x30]
  41af61:	xor    ecx,DWORD PTR [rsp-0x48]
  41af65:	rorx   r13d,ecx,0x1f
  41af6b:	add    esi,r13d
  41af6e:	mov    DWORD PTR [rsp-0x2c],r13d
  41af73:	add    esi,eax
  41af75:	rorx   eax,r8d,0x1b
  41af7b:	lea    r9d,[rax+rsi*1]
  41af7f:	add    r9d,0x8f1bbcdc
  41af86:	rorx   esi,ebx,0x2
  41af8c:	mov    eax,r8d
  41af8f:	and    eax,esi
  41af91:	mov    ebp,r8d
  41af94:	or     ebp,esi
  41af96:	and    ebp,edx
  41af98:	or     ebp,eax
  41af9a:	mov    eax,r14d
  41af9d:	mov    r15d,DWORD PTR [rsp-0x28]
  41afa2:	xor    eax,r15d
  41afa5:	xor    eax,DWORD PTR [rsp-0x20]
  41afa9:	xor    eax,r12d
  41afac:	rorx   r14d,eax,0x1f
  41afb2:	add    edi,r14d
  41afb5:	mov    DWORD PTR [rsp-0x3c],r14d
  41afba:	add    edi,ebp
  41afbc:	rorx   eax,r9d,0x1b
  41afc2:	lea    ebp,[rax+rdi*1]
  41afc5:	add    ebp,0x8f1bbcdc
  41afcb:	rorx   edi,r8d,0x2
  41afd1:	mov    eax,r9d
  41afd4:	and    eax,edi
  41afd6:	mov    ecx,r9d
  41afd9:	or     ecx,edi
  41afdb:	and    ecx,esi
  41afdd:	or     ecx,eax
  41afdf:	mov    eax,r10d
  41afe2:	mov    r10d,DWORD PTR [rsp-0x34]
  41afe7:	xor    eax,r10d
  41afea:	xor    eax,DWORD PTR [rsp-0x4c]
  41afee:	xor    eax,r11d
  41aff1:	rorx   eax,eax,0x1f
  41aff7:	add    edx,eax
  41aff9:	mov    ebx,eax
  41affb:	mov    DWORD PTR [rsp-0x5c],eax
  41afff:	add    edx,ecx
  41b001:	rorx   eax,ebp,0x1b
  41b007:	lea    r8d,[rax+rdx*1]
  41b00b:	add    r8d,0x8f1bbcdc
  41b012:	rorx   eax,r9d,0x2
  41b018:	mov    ecx,ebp
  41b01a:	and    ecx,eax
  41b01c:	mov    edx,ebp
  41b01e:	or     edx,eax
  41b020:	and    edx,edi
  41b022:	or     edx,ecx
  41b024:	mov    r12d,DWORD PTR [rsp-0x44]
  41b029:	mov    ecx,r15d
  41b02c:	xor    ecx,r12d
  41b02f:	xor    ecx,DWORD PTR [rsp-0x58]
  41b033:	xor    ecx,r13d
  41b036:	rorx   r11d,ecx,0x1f
  41b03c:	add    esi,r11d
  41b03f:	add    esi,edx
  41b041:	rorx   ecx,r8d,0x1b
  41b047:	lea    r9d,[rcx+rsi*1]
  41b04b:	add    r9d,0x8f1bbcdc
  41b052:	rorx   edx,ebp,0x2
  41b058:	mov    esi,r8d
  41b05b:	and    esi,edx
  41b05d:	mov    ebp,r8d
  41b060:	or     ebp,edx
  41b062:	and    ebp,eax
  41b064:	or     ebp,esi
  41b066:	mov    ecx,r10d
  41b069:	mov    r13d,DWORD PTR [rsp-0x14]
  41b06e:	xor    ecx,r13d
  41b071:	xor    ecx,DWORD PTR [rsp-0x54]
  41b075:	xor    ecx,r14d
  41b078:	rorx   ecx,ecx,0x1f
  41b07e:	add    edi,ecx
  41b080:	mov    r15d,ecx
  41b083:	mov    DWORD PTR [rsp-0x34],ecx
  41b087:	add    edi,ebp
  41b089:	rorx   esi,r9d,0x1b
  41b08f:	lea    r10d,[rsi+rdi*1]
  41b093:	add    r10d,0x8f1bbcdc
  41b09a:	rorx   esi,r8d,0x2
  41b0a0:	mov    ecx,r9d
  41b0a3:	and    ecx,esi
  41b0a5:	mov    ebp,r9d
  41b0a8:	or     ebp,esi
  41b0aa:	and    ebp,edx
  41b0ac:	or     ebp,ecx
  41b0ae:	mov    ecx,r12d
  41b0b1:	mov    r12d,DWORD PTR [rsp-0x50]
  41b0b6:	xor    ecx,r12d
  41b0b9:	xor    ecx,DWORD PTR [rsp-0x48]
  41b0bd:	xor    ecx,ebx
  41b0bf:	rorx   ecx,ecx,0x1f
  41b0c5:	mov    DWORD PTR [rsp-0x60],ecx
  41b0c9:	add    eax,ecx
  41b0cb:	add    eax,ebp
  41b0cd:	rorx   ecx,r10d,0x1b
  41b0d3:	lea    ebp,[rcx+rax*1]
  41b0d6:	add    ebp,0x8f1bbcdc
  41b0dc:	rorx   eax,r9d,0x2
  41b0e2:	mov    ecx,r10d
  41b0e5:	and    ecx,eax
  41b0e7:	mov    edi,r10d
  41b0ea:	or     edi,eax
  41b0ec:	and    edi,esi
  41b0ee:	or     edi,ecx
  41b0f0:	mov    ecx,r13d
  41b0f3:	mov    r8d,DWORD PTR [rsp-0x30]
  41b0f8:	xor    ecx,r8d
  41b0fb:	xor    ecx,DWORD PTR [rsp-0x38]
  41b0ff:	xor    ecx,r11d
  41b102:	mov    r13d,r11d
  41b105:	mov    DWORD PTR [rsp-0x10],r11d
  41b10a:	rorx   r14d,ecx,0x1f
  41b110:	add    edx,r14d
  41b113:	mov    DWORD PTR [rsp-0x44],r14d
  41b118:	add    edx,edi
  41b11a:	rorx   ecx,ebp,0x1b
  41b120:	lea    r9d,[rcx+rdx*1]
  41b124:	add    r9d,0x8f1bbcdc
  41b12b:	rorx   edx,r10d,0x2
  41b131:	mov    edi,ebp
  41b133:	and    edi,edx
  41b135:	mov    ebx,ebp
  41b137:	or     ebx,edx
  41b139:	and    ebx,eax
  41b13b:	or     ebx,edi
  41b13d:	mov    ecx,r12d
  41b140:	mov    r11d,DWORD PTR [rsp-0x20]
  41b145:	xor    ecx,r11d
  41b148:	xor    ecx,DWORD PTR [rsp-0x40]
  41b14c:	xor    ecx,r15d
  41b14f:	rorx   ecx,ecx,0x1f
  41b155:	mov    DWORD PTR [rsp-0x50],ecx
  41b159:	add    esi,ecx
  41b15b:	add    esi,ebx
  41b15d:	rorx   edi,r9d,0x1b
  41b163:	lea    r10d,[rdi+rsi*1]
  41b167:	add    r10d,0x8f1bbcdc
  41b16e:	rorx   esi,ebp,0x2
  41b174:	mov    ecx,r9d
  41b177:	and    ecx,esi
  41b179:	mov    ebp,r9d
  41b17c:	or     ebp,esi
  41b17e:	and    ebp,edx
  41b180:	or     ebp,ecx
  41b182:	mov    ecx,r8d
  41b185:	mov    r8d,DWORD PTR [rsp-0x4c]
  41b18a:	xor    ecx,r8d
  41b18d:	xor    ecx,DWORD PTR [rsp-0x2c]
  41b191:	xor    ecx,DWORD PTR [rsp-0x60]
  41b195:	rorx   r12d,ecx,0x1f
  41b19b:	add    eax,r12d
  41b19e:	mov    DWORD PTR [rsp-0x30],r12d
  41b1a3:	add    eax,ebp
  41b1a5:	rorx   ecx,r10d,0x1b
  41b1ab:	lea    ebx,[rcx+rax*1]
  41b1ae:	add    ebx,0x8f1bbcdc
  41b1b4:	rorx   eax,r9d,0x2
  41b1ba:	mov    ecx,r10d
  41b1bd:	and    ecx,eax
  41b1bf:	mov    edi,r10d
  41b1c2:	or     edi,eax
  41b1c4:	and    edi,esi
  41b1c6:	or     edi,ecx
  41b1c8:	mov    r15d,DWORD PTR [rsp-0x58]
  41b1cd:	xor    r11d,r15d
  41b1d0:	xor    r11d,DWORD PTR [rsp-0x3c]
  41b1d5:	xor    r11d,r14d
  41b1d8:	rorx   ecx,r11d,0x1f
  41b1de:	add    edx,ecx
  41b1e0:	mov    r11d,ecx
  41b1e3:	mov    DWORD PTR [rsp-0x18],ecx
  41b1e7:	add    edx,edi
  41b1e9:	rorx   ecx,ebx,0x1b
  41b1ef:	lea    ecx,[rcx+rdx*1]
  41b1f2:	add    ecx,0x8f1bbcdc
  41b1f8:	rorx   r9d,r10d,0x2
  41b1fe:	mov    edx,ebx
  41b200:	and    edx,r9d
  41b203:	mov    edi,ebx
  41b205:	or     edi,r9d
  41b208:	and    edi,eax
  41b20a:	or     edi,edx
  41b20c:	mov    edx,r8d
  41b20f:	mov    r8d,DWORD PTR [rsp-0x54]
  41b214:	xor    edx,r8d
  41b217:	xor    edx,DWORD PTR [rsp-0x5c]
  41b21b:	xor    edx,DWORD PTR [rsp-0x50]
  41b21f:	rorx   edx,edx,0x1f
  41b225:	mov    DWORD PTR [rsp-0x4c],edx
  41b229:	add    esi,edx
  41b22b:	add    esi,edi
  41b22d:	rorx   edx,ecx,0x1b
  41b233:	lea    edx,[rdx+rsi*1]
  41b236:	add    edx,0x8f1bbcdc
  41b23c:	rorx   r10d,ebx,0x2
  41b242:	mov    esi,ecx
  41b244:	and    esi,r10d
  41b247:	mov    edi,ecx
  41b249:	or     edi,r10d
  41b24c:	and    edi,r9d
  41b24f:	or     edi,esi
  41b251:	mov    esi,r15d
  41b254:	mov    r15d,DWORD PTR [rsp-0x48]
  41b259:	xor    esi,r15d
  41b25c:	xor    esi,r13d
  41b25f:	xor    esi,r12d
  41b262:	rorx   esi,esi,0x1f
  41b268:	add    eax,esi
  41b26a:	mov    r14d,esi
  41b26d:	mov    DWORD PTR [rsp-0x58],esi
  41b271:	add    eax,edi
  41b273:	rorx   esi,edx,0x1b
  41b279:	lea    esi,[rsi+rax*1]
  41b27c:	add    esi,0x8f1bbcdc
  41b282:	rorx   eax,ecx,0x2
  41b288:	mov    ecx,edx
  41b28a:	and    ecx,eax
  41b28c:	mov    edi,edx
  41b28e:	or     edi,eax
  41b290:	and    edi,r10d
  41b293:	or     edi,ecx
  41b295:	mov    ecx,r8d
  41b298:	mov    ebx,DWORD PTR [rsp-0x38]
  41b29c:	xor    ecx,ebx
  41b29e:	xor    ecx,DWORD PTR [rsp-0x34]
  41b2a2:	xor    ecx,r11d
  41b2a5:	rorx   r11d,ecx,0x1f
  41b2ab:	add    r9d,r11d
  41b2ae:	mov    DWORD PTR [rsp-0x54],r11d
  41b2b3:	add    r9d,edi
  41b2b6:	rorx   ecx,esi,0x1b
  41b2bc:	lea    r9d,[rcx+r9*1]
  41b2c0:	add    r9d,0x8f1bbcdc
  41b2c7:	rorx   ecx,edx,0x2
  41b2cd:	mov    edx,esi
  41b2cf:	and    edx,ecx
  41b2d1:	mov    edi,esi
  41b2d3:	or     edi,ecx
  41b2d5:	and    edi,eax
  41b2d7:	or     edi,edx
  41b2d9:	mov    r8d,DWORD PTR [rsp-0x40]
  41b2de:	mov    ebp,r15d
  41b2e1:	xor    ebp,r8d
  41b2e4:	xor    ebp,DWORD PTR [rsp-0x60]
  41b2e8:	xor    ebp,DWORD PTR [rsp-0x4c]
  41b2ec:	rorx   edx,ebp,0x1f
  41b2f2:	add    r10d,edx
  41b2f5:	mov    r15d,edx
  41b2f8:	mov    DWORD PTR [rsp-0x48],edx
  41b2fc:	add    r10d,edi
  41b2ff:	rorx   edx,r9d,0x1b
  41b305:	lea    ebp,[rdx+r10*1]
  41b309:	add    ebp,0x8f1bbcdc
  41b30f:	rorx   r10d,esi,0x2
  41b315:	mov    esi,r9d
  41b318:	and    esi,r10d
  41b31b:	mov    edi,r9d
  41b31e:	or     edi,r10d
  41b321:	and    edi,ecx
  41b323:	or     edi,esi
  41b325:	mov    r13d,DWORD PTR [rsp-0x2c]
  41b32a:	mov    edx,ebx
  41b32c:	xor    edx,r13d
  41b32f:	xor    edx,DWORD PTR [rsp-0x44]
  41b333:	xor    edx,r14d
  41b336:	rorx   edx,edx,0x1f
  41b33c:	add    eax,edx
  41b33e:	mov    r14d,edx
  41b341:	mov    DWORD PTR [rsp-0x38],edx
  41b345:	add    eax,edi
  41b347:	rorx   esi,ebp,0x1b
  41b34d:	lea    esi,[rsi+rax*1]
  41b350:	add    esi,0x8f1bbcdc
  41b356:	rorx   eax,r9d,0x2
  41b35c:	mov    edi,ebp
  41b35e:	and    edi,eax
  41b360:	mov    edx,ebp
  41b362:	or     edx,eax
  41b364:	and    edx,r10d
  41b367:	or     edx,edi
  41b369:	mov    ebx,DWORD PTR [rsp-0x3c]
  41b36d:	xor    r8d,ebx
  41b370:	xor    r8d,DWORD PTR [rsp-0x50]
  41b375:	xor    r8d,r11d
  41b378:	rorx   edi,r8d,0x1f
  41b37e:	add    ecx,edi
  41b380:	mov    r8d,edi
  41b383:	mov    DWORD PTR [rsp-0x40],edi
  41b387:	add    ecx,edx
  41b389:	rorx   edx,esi,0x1b
  41b38f:	lea    r9d,[rdx+rcx*1]
  41b393:	add    r9d,0x8f1bbcdc
  41b39a:	rorx   ecx,ebp,0x2
  41b3a0:	mov    edx,esi
  41b3a2:	and    edx,ecx
  41b3a4:	mov    edi,esi
  41b3a6:	or     edi,ecx
  41b3a8:	and    edi,eax
  41b3aa:	or     edi,edx
  41b3ac:	mov    edx,r13d
  41b3af:	mov    r12d,DWORD PTR [rsp-0x5c]
  41b3b4:	xor    edx,r12d
  41b3b7:	xor    edx,DWORD PTR [rsp-0x30]
  41b3bb:	xor    edx,r15d
  41b3be:	rorx   r15d,edx,0x1f
  41b3c4:	add    r10d,r15d
  41b3c7:	mov    DWORD PTR [rsp-0x20],r15d
  41b3cc:	add    r10d,edi
  41b3cf:	rorx   edx,r9d,0x1b
  41b3d5:	lea    r13d,[rdx+r10*1]
  41b3d9:	add    r13d,0x8f1bbcdc
  41b3e0:	rorx   edx,esi,0x2
  41b3e6:	mov    esi,r9d
  41b3e9:	and    esi,edx
  41b3eb:	mov    ebp,r9d
  41b3ee:	or     ebp,edx
  41b3f0:	and    ebp,ecx
  41b3f2:	or     ebp,esi
  41b3f4:	mov    esi,ebx
  41b3f6:	mov    r11d,DWORD PTR [rsp-0x10]
  41b3fb:	xor    esi,r11d
  41b3fe:	xor    esi,DWORD PTR [rsp-0x18]
  41b402:	xor    esi,r14d
  41b405:	rorx   esi,esi,0x1f
  41b40b:	add    eax,esi
  41b40d:	mov    r14d,esi
  41b410:	mov    DWORD PTR [rsp-0x28],esi
  41b414:	add    eax,ebp
  41b416:	rorx   esi,r13d,0x1b
  41b41c:	lea    esi,[rsi+rax*1]
  41b41f:	add    esi,0x8f1bbcdc
  41b425:	rorx   r9d,r9d,0x2
  41b42b:	mov    edi,r13d
  41b42e:	and    edi,r9d
  41b431:	mov    eax,r13d
  41b434:	or     eax,r9d
  41b437:	and    eax,edx
  41b439:	or     eax,edi
  41b43b:	mov    edi,r12d
  41b43e:	mov    ebp,DWORD PTR [rsp-0x34]
  41b442:	xor    edi,ebp
  41b444:	xor    edi,DWORD PTR [rsp-0x4c]
  41b448:	xor    edi,r8d
  41b44b:	rorx   edi,edi,0x1f
  41b451:	add    ecx,edi
  41b453:	mov    r8d,edi
  41b456:	mov    DWORD PTR [rsp-0x24],edi
  41b45a:	add    ecx,eax
  41b45c:	rorx   eax,esi,0x1b
  41b462:	lea    r10d,[rax+rcx*1]
  41b466:	add    r10d,0x8f1bbcdc
  41b46d:	rorx   ecx,r13d,0x2
  41b473:	mov    eax,esi
  41b475:	and    eax,ecx
  41b477:	mov    edi,esi
  41b479:	or     edi,ecx
  41b47b:	and    edi,r9d
  41b47e:	or     edi,eax
  41b480:	mov    eax,r11d
  41b483:	mov    ebx,DWORD PTR [rsp-0x60]
  41b487:	xor    eax,ebx
  41b489:	xor    eax,DWORD PTR [rsp-0x58]
  41b48d:	xor    eax,r15d
  41b490:	rorx   eax,eax,0x1f
  41b496:	add    edx,eax
  41b498:	mov    r15d,eax
  41b49b:	mov    DWORD PTR [rsp-0x3c],eax
  41b49f:	add    edx,edi
  41b4a1:	rorx   eax,r10d,0x1b
  41b4a7:	lea    edi,[rax+rdx*1]
  41b4aa:	add    edi,0x8f1bbcdc
  41b4b0:	rorx   edx,esi,0x2
  41b4b6:	mov    eax,edx
  41b4b8:	xor    eax,ecx
  41b4ba:	xor    eax,r10d
  41b4bd:	mov    esi,ebp
  41b4bf:	mov    ebp,DWORD PTR [rsp-0x44]
  41b4c3:	xor    esi,ebp
  41b4c5:	xor    esi,DWORD PTR [rsp-0x54]
  41b4c9:	xor    esi,r14d
  41b4cc:	rorx   r12d,esi,0x1f
  41b4d2:	add    r9d,r12d
  41b4d5:	mov    DWORD PTR [rsp-0x5c],r12d
  41b4da:	add    r9d,eax
  41b4dd:	rorx   eax,edi,0x1b
  41b4e3:	lea    r9d,[rax+r9*1]
  41b4e7:	add    r9d,0xca62c1d6
  41b4ee:	rorx   eax,r10d,0x2
  41b4f4:	mov    esi,eax
  41b4f6:	xor    esi,edx
  41b4f8:	xor    esi,edi
  41b4fa:	mov    r11d,DWORD PTR [rsp-0x50]
  41b4ff:	xor    ebx,r11d
  41b502:	xor    ebx,DWORD PTR [rsp-0x48]
  41b506:	xor    ebx,r8d
  41b509:	rorx   ebx,ebx,0x1f
  41b50f:	add    ecx,ebx
  41b511:	mov    DWORD PTR [rsp-0x34],ebx
  41b515:	add    ecx,esi
  41b517:	rorx   esi,r9d,0x1b
  41b51d:	lea    r10d,[rsi+rcx*1]
  41b521:	add    r10d,0xca62c1d6
  41b528:	rorx   ecx,edi,0x2
  41b52e:	mov    esi,ecx
  41b530:	xor    esi,eax
  41b532:	xor    esi,r9d
  41b535:	mov    edi,ebp
  41b537:	mov    r8d,DWORD PTR [rsp-0x30]
  41b53c:	xor    edi,r8d
  41b53f:	xor    edi,DWORD PTR [rsp-0x38]
  41b543:	xor    edi,r15d
  41b546:	rorx   r14d,edi,0x1f
  41b54c:	add    edx,r14d
  41b54f:	mov    DWORD PTR [rsp-0x60],r14d
  41b554:	add    edx,esi
  41b556:	rorx   esi,r10d,0x1b
  41b55c:	lea    edi,[rsi+rdx*1]
  41b55f:	add    edi,0xca62c1d6
  41b565:	rorx   edx,r9d,0x2
  41b56b:	mov    esi,edx
  41b56d:	xor    esi,ecx
  41b56f:	xor    esi,r10d
  41b572:	mov    ebp,DWORD PTR [rsp-0x18]
  41b576:	xor    r11d,ebp
  41b579:	xor    r11d,DWORD PTR [rsp-0x40]
  41b57e:	xor    r11d,r12d
  41b581:	rorx   r9d,r11d,0x1f
  41b587:	add    eax,r9d
  41b58a:	add    eax,esi
  41b58c:	rorx   esi,edi,0x1b
  41b592:	lea    esi,[rsi+rax*1]
  41b595:	add    esi,0xca62c1d6
  41b59b:	rorx   eax,r10d,0x2
  41b5a1:	mov    r10d,eax
  41b5a4:	xor    r10d,edx
  41b5a7:	xor    r10d,edi
  41b5aa:	mov    r11d,DWORD PTR [rsp-0x4c]
  41b5af:	xor    r8d,r11d
  41b5b2:	xor    r8d,DWORD PTR [rsp-0x20]
  41b5b7:	xor    r8d,ebx
  41b5ba:	rorx   r13d,r8d,0x1f
  41b5c0:	add    ecx,r13d
  41b5c3:	add    ecx,r10d
  41b5c6:	rorx   ebx,esi,0x1b
  41b5cc:	lea    r8d,[rbx+rcx*1]
  41b5d0:	add    r8d,0xca62c1d6
  41b5d7:	rorx   ecx,edi,0x2
  41b5dd:	mov    edi,ecx
  41b5df:	xor    edi,eax
  41b5e1:	xor    edi,esi
  41b5e3:	mov    ebx,ebp
  41b5e5:	mov    ebp,DWORD PTR [rsp-0x58]
  41b5e9:	xor    ebx,ebp
  41b5eb:	xor    ebx,DWORD PTR [rsp-0x28]
  41b5ef:	xor    ebx,r14d
  41b5f2:	rorx   ebx,ebx,0x1f
  41b5f8:	add    edx,ebx
  41b5fa:	mov    r10d,ebx
  41b5fd:	mov    DWORD PTR [rsp-0x50],ebx
  41b601:	add    edx,edi
  41b603:	rorx   edi,r8d,0x1b
  41b609:	lea    edi,[rdi+rdx*1]
  41b60c:	add    edi,0xca62c1d6
  41b612:	rorx   edx,esi,0x2
  41b618:	mov    esi,edx
  41b61a:	xor    esi,ecx
  41b61c:	xor    esi,r8d
  41b61f:	mov    ebx,r11d
  41b622:	mov    r11d,DWORD PTR [rsp-0x54]
  41b627:	xor    ebx,r11d
  41b62a:	xor    ebx,DWORD PTR [rsp-0x24]
  41b62e:	mov    DWORD PTR [rsp-0x44],r9d
  41b633:	xor    ebx,r9d
  41b636:	rorx   r15d,ebx,0x1f
  41b63c:	add    eax,r15d
  41b63f:	mov    DWORD PTR [rsp-0x30],r15d
  41b644:	add    eax,esi
  41b646:	rorx   esi,edi,0x1b
  41b64c:	lea    esi,[rsi+rax*1]
  41b64f:	add    esi,0xca62c1d6
  41b655:	rorx   eax,r8d,0x2
  41b65b:	mov    ebx,eax
  41b65d:	xor    ebx,edx
  41b65f:	xor    ebx,edi
  41b661:	mov    r9d,DWORD PTR [rsp-0x48]
  41b666:	xor    ebp,r9d
  41b669:	xor    ebp,DWORD PTR [rsp-0x3c]
  41b66d:	xor    ebp,r13d
  41b670:	rorx   r12d,ebp,0x1f
  41b676:	add    ecx,r12d
  41b679:	mov    DWORD PTR [rsp-0x58],r12d
  41b67e:	add    ecx,ebx
  41b680:	rorx   ebx,esi,0x1b
  41b686:	lea    r8d,[rbx+rcx*1]
  41b68a:	add    r8d,0xca62c1d6
  41b691:	rorx   ecx,edi,0x2
  41b697:	mov    edi,ecx
  41b699:	xor    edi,eax
  41b69b:	xor    edi,esi
  41b69d:	mov    ebp,r11d
  41b6a0:	mov    r11d,DWORD PTR [rsp-0x38]
  41b6a5:	xor    ebp,r11d
  41b6a8:	xor    ebp,DWORD PTR [rsp-0x5c]
  41b6ac:	xor    ebp,r10d
  41b6af:	rorx   r14d,ebp,0x1f
  41b6b5:	add    edx,r14d
  41b6b8:	mov    DWORD PTR [rsp-0x4c],r14d
  41b6bd:	add    edx,edi
  41b6bf:	rorx   edi,r8d,0x1b
  41b6c5:	lea    edi,[rdi+rdx*1]
  41b6c8:	add    edi,0xca62c1d6
  41b6ce:	rorx   edx,esi,0x2
  41b6d4:	mov    esi,edx
  41b6d6:	xor    esi,ecx
  41b6d8:	xor    esi,r8d
  41b6db:	mov    ebp,r9d
  41b6de:	mov    r10d,DWORD PTR [rsp-0x40]
  41b6e3:	xor    ebp,r10d
  41b6e6:	xor    ebp,DWORD PTR [rsp-0x34]
  41b6ea:	xor    ebp,r15d
  41b6ed:	rorx   ebp,ebp,0x1f
  41b6f3:	add    eax,ebp
  41b6f5:	mov    r15d,ebp
  41b6f8:	mov    DWORD PTR [rsp-0x2c],ebp
  41b6fc:	add    eax,esi
  41b6fe:	rorx   esi,edi,0x1b
  41b704:	lea    esi,[rsi+rax*1]
  41b707:	add    esi,0xca62c1d6
  41b70d:	rorx   eax,r8d,0x2
  41b713:	mov    ebx,eax
  41b715:	xor    ebx,edx
  41b717:	xor    ebx,edi
  41b719:	mov    ebp,r11d
  41b71c:	mov    r9d,DWORD PTR [rsp-0x20]
  41b721:	xor    ebp,r9d
  41b724:	xor    ebp,DWORD PTR [rsp-0x60]
  41b728:	xor    ebp,r12d
  41b72b:	rorx   ebp,ebp,0x1f
  41b731:	add    ecx,ebp
  41b733:	add    ecx,ebx
  41b735:	rorx   ebx,esi,0x1b
  41b73b:	lea    r8d,[rbx+rcx*1]
  41b73f:	add    r8d,0xca62c1d6
  41b746:	rorx   ebx,edi,0x2
  41b74c:	mov    ecx,ebx
  41b74e:	xor    ecx,eax
  41b750:	xor    ecx,esi
  41b752:	mov    edi,r10d
  41b755:	mov    r10d,DWORD PTR [rsp-0x28]
  41b75a:	xor    edi,r10d
  41b75d:	xor    edi,DWORD PTR [rsp-0x44]
  41b761:	xor    edi,r14d
  41b764:	rorx   r14d,edi,0x1f
  41b76a:	add    edx,r14d
  41b76d:	mov    DWORD PTR [rsp-0x54],r14d
  41b772:	add    edx,ecx
  41b774:	rorx   ecx,r8d,0x1b
  41b77a:	lea    edx,[rcx+rdx*1]
  41b77d:	add    edx,0xca62c1d6
  41b783:	rorx   ecx,esi,0x2
  41b789:	mov    esi,ecx
  41b78b:	xor    esi,ebx
  41b78d:	xor    esi,r8d
  41b790:	mov    edi,r9d
  41b793:	mov    r9d,DWORD PTR [rsp-0x24]
  41b798:	xor    edi,r9d
  41b79b:	xor    edi,r13d
  41b79e:	xor    edi,r15d
  41b7a1:	rorx   r12d,edi,0x1f
  41b7a7:	add    eax,r12d
  41b7aa:	add    eax,esi
  41b7ac:	rorx   esi,edx,0x1b
  41b7b2:	lea    edi,[rsi+rax*1]
  41b7b5:	add    edi,0xca62c1d6
  41b7bb:	rorx   r11d,r8d,0x2
  41b7c1:	mov    eax,r11d
  41b7c4:	xor    eax,ecx
  41b7c6:	xor    eax,edx
  41b7c8:	mov    r8d,DWORD PTR [rsp-0x3c]
  41b7cd:	xor    r10d,r8d
  41b7d0:	xor    r10d,DWORD PTR [rsp-0x50]
  41b7d5:	mov    r15d,ebp
  41b7d8:	xor    r10d,ebp
  41b7db:	rorx   esi,r10d,0x1f
  41b7e1:	mov    DWORD PTR [rsp-0x48],esi
  41b7e5:	add    ebx,esi
  41b7e7:	add    ebx,eax
  41b7e9:	rorx   eax,edi,0x1b
  41b7ef:	lea    ebp,[rax+rbx*1]
  41b7f2:	add    ebp,0xca62c1d6
  41b7f8:	mov    esi,r9d
  41b7fb:	xor    esi,DWORD PTR [rsp-0x5c]
  41b7ff:	xor    esi,DWORD PTR [rsp-0x30]
  41b803:	rorx   ebx,edx,0x2
  41b809:	mov    eax,ebx
  41b80b:	xor    eax,r11d
  41b80e:	xor    eax,edi
  41b810:	xor    esi,r14d
  41b813:	rorx   esi,esi,0x1f
  41b819:	add    ecx,esi
  41b81b:	add    ecx,eax
  41b81d:	rorx   eax,ebp,0x1b
  41b823:	mov    r14d,ebp
  41b826:	lea    r9d,[rax+rcx*1]
  41b82a:	add    r9d,0xca62c1d6
  41b831:	mov    eax,r8d
  41b834:	mov    ecx,DWORD PTR [rsp-0x34]
  41b838:	xor    eax,ecx
  41b83a:	xor    eax,DWORD PTR [rsp-0x58]
  41b83e:	xor    eax,r12d
  41b841:	mov    r10d,DWORD PTR [rsp-0x44]
  41b846:	xor    ecx,r10d
  41b849:	xor    ecx,DWORD PTR [rsp-0x2c]
  41b84d:	xor    ecx,esi
  41b84f:	mov    ebp,ecx
  41b851:	mov    r8d,DWORD PTR [rsp-0x60]
  41b856:	xor    r13d,r8d
  41b859:	xor    r13d,r15d
  41b85c:	rorx   edx,edi,0x2
  41b862:	rorx   esi,eax,0x1f
  41b868:	rorx   edi,r14d,0x2
  41b86e:	rorx   r12d,r9d,0x2
  41b874:	mov    ecx,r12d
  41b877:	xor    ecx,edi
  41b879:	xor    r13d,esi
  41b87c:	rorx   eax,r13d,0x1f
  41b882:	add    eax,edi
  41b884:	xor    edi,edx
  41b886:	rorx   ebp,ebp,0x1f
  41b88c:	add    ebp,edx
  41b88e:	xor    edx,ebx
  41b890:	xor    edx,r14d
  41b893:	add    r11d,esi
  41b896:	add    r11d,edx
  41b899:	rorx   edx,r9d,0x1b
  41b89f:	lea    edx,[rdx+r11*1]
  41b8a3:	add    edx,0xca62c1d6
  41b8a9:	xor    edi,r9d
  41b8ac:	mov    esi,DWORD PTR [rsp-0x5c]
  41b8b0:	xor    esi,r8d
  41b8b3:	xor    esi,DWORD PTR [rsp-0x4c]
  41b8b7:	xor    esi,DWORD PTR [rsp-0x48]
  41b8bb:	rorx   esi,esi,0x1f
  41b8c1:	add    ebx,esi
  41b8c3:	add    ebx,edi
  41b8c5:	rorx   edi,edx,0x1b
  41b8cb:	lea    edi,[rdi+rbx*1]
  41b8ce:	add    edi,0xca62c1d6
  41b8d4:	xor    ecx,edx
  41b8d6:	add    ebp,ecx
  41b8d8:	rorx   ecx,edi,0x1b
  41b8de:	lea    ecx,[rcx+rbp*1]
  41b8e1:	add    ecx,0xca62c1d6
  41b8e7:	rorx   ebp,edx,0x2
  41b8ed:	mov    edx,ebp
  41b8ef:	xor    edx,r12d
  41b8f2:	xor    edx,edi
  41b8f4:	add    eax,edx
  41b8f6:	rorx   edx,ecx,0x1b
  41b8fc:	lea    eax,[rdx+rax*1]
  41b8ff:	add    eax,0xca62c1d6
  41b904:	rorx   edx,ecx,0x2
  41b90a:	vmovd  xmm1,eax
  41b90e:	vpinsrd xmm1,xmm1,edx,0x1
  41b914:	rorx   edx,edi,0x2
  41b91a:	vpinsrd xmm1,xmm1,edx,0x2
  41b920:	xor    edx,ebp
  41b922:	xor    edx,ecx
  41b924:	mov    ecx,DWORD PTR [rsp-0x50]
  41b928:	xor    ecx,r10d
  41b92b:	xor    ecx,DWORD PTR [rsp-0x54]
  41b92f:	xor    ecx,esi
  41b931:	rorx   ecx,ecx,0x1f
  41b937:	add    ecx,DWORD PTR [rsp-0xc]
  41b93b:	add    ecx,r12d
  41b93e:	add    ecx,edx
  41b940:	rorx   eax,eax,0x1b
  41b946:	lea    eax,[rax+rcx*1]
  41b949:	add    eax,0xca62c1d6
  41b94e:	mov    rcx,QWORD PTR [rsp-0x8]
  41b953:	mov    DWORD PTR [rcx+0x8],eax
  41b956:	vpinsrd xmm1,xmm1,ebp,0x3
  41b95c:	vpaddd xmm0,xmm1,xmm0
  41b960:	vmovdqu XMMWORD PTR [rcx+0xc],xmm0
  41b965:	pop    rbx
  41b966:	pop    r12
  41b968:	pop    r13
  41b96a:	pop    r14
  41b96c:	pop    r15
  41b96e:	pop    rbp
  41b96f:	ret    
  41b970:	push   rbp
  41b971:	push   r15
  41b973:	push   r14
  41b975:	push   r13
  41b977:	push   r12
  41b979:	push   rbx
  41b97a:	push   rax
  41b97b:	test   rdx,rdx
  41b97e:	je     41ba50 <strcmp@plt+0x182c8>
  41b984:	mov    r15,rdx
  41b987:	mov    rbx,rsi
  41b98a:	mov    r14,rdi
  41b98d:	mov    eax,DWORD PTR [rdi]
  41b98f:	mov    ebp,eax
  41b991:	and    ebp,0x3f
  41b994:	mov    ecx,r15d
  41b997:	add    ecx,eax
  41b999:	mov    DWORD PTR [rdi],ecx
  41b99b:	jae    41b9a2 <strcmp@plt+0x1821a>
  41b99d:	add    DWORD PTR [r14+0x4],0x1
  41b9a2:	test   ebp,ebp
  41b9a4:	je     41b9de <strcmp@plt+0x18256>
  41b9a6:	mov    r12d,0x40
  41b9ac:	sub    r12d,ebp
  41b9af:	cmp    r12,r15
  41b9b2:	ja     41b9de <strcmp@plt+0x18256>
  41b9b4:	lea    r13,[r14+0x1c]
  41b9b8:	lea    rdi,[r14+rbp*1]
  41b9bc:	add    rdi,0x1c
  41b9c0:	mov    rsi,rbx
  41b9c3:	mov    rdx,r12
  41b9c6:	call   403330 <memcpy@plt>
  41b9cb:	mov    rdi,r14
  41b9ce:	mov    rsi,r13
  41b9d1:	call   41a610 <strcmp@plt+0x16e88>
  41b9d6:	add    rbx,r12
  41b9d9:	sub    r15,r12
  41b9dc:	xor    ebp,ebp
  41b9de:	cmp    r15,0x40
  41b9e2:	jb     41ba48 <strcmp@plt+0x182c0>
  41b9e4:	lea    r12,[r15-0x40]
  41b9e8:	mov    r13,r12
  41b9eb:	and    r13,0xffffffffffffffc0
  41b9ef:	lea    rax,[rbx+r13*1]
  41b9f3:	add    rax,0x40
  41b9f7:	mov    QWORD PTR [rsp],rax
  41b9fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ba00:	mov    rdi,r14
  41ba03:	mov    rsi,rbx
  41ba06:	call   41a610 <strcmp@plt+0x16e88>
  41ba0b:	add    rbx,0x40
  41ba0f:	add    r15,0xffffffffffffffc0
  41ba13:	cmp    r15,0x3f
  41ba17:	ja     41ba00 <strcmp@plt+0x18278>
  41ba19:	sub    r12,r13
  41ba1c:	mov    r15,r12
  41ba1f:	mov    rsi,QWORD PTR [rsp]
  41ba23:	test   r15,r15
  41ba26:	je     41ba50 <strcmp@plt+0x182c8>
  41ba28:	mov    eax,ebp
  41ba2a:	lea    rdi,[r14+rax*1]
  41ba2e:	add    rdi,0x1c
  41ba32:	mov    rdx,r15
  41ba35:	add    rsp,0x8
  41ba39:	pop    rbx
  41ba3a:	pop    r12
  41ba3c:	pop    r13
  41ba3e:	pop    r14
  41ba40:	pop    r15
  41ba42:	pop    rbp
  41ba43:	jmp    403330 <memcpy@plt>
  41ba48:	mov    rsi,rbx
  41ba4b:	test   r15,r15
  41ba4e:	jne    41ba28 <strcmp@plt+0x182a0>
  41ba50:	add    rsp,0x8
  41ba54:	pop    rbx
  41ba55:	pop    r12
  41ba57:	pop    r13
  41ba59:	pop    r14
  41ba5b:	pop    r15
  41ba5d:	pop    rbp
  41ba5e:	ret    
  41ba5f:	nop
  41ba60:	push   rbp
  41ba61:	push   r15
  41ba63:	push   r14
  41ba65:	push   r13
  41ba67:	push   r12
  41ba69:	push   rbx
  41ba6a:	sub    rsp,0x28
  41ba6e:	mov    r14,rsi
  41ba71:	mov    r15,rdi
  41ba74:	mov    ecx,DWORD PTR [rdi]
  41ba76:	mov    eax,DWORD PTR [rdi+0x4]
  41ba79:	mov    edx,eax
  41ba7b:	shld   edx,ecx,0x3
  41ba7f:	mov    esi,eax
  41ba81:	shr    esi,0x15
  41ba84:	mov    BYTE PTR [rsp+0x8],sil
  41ba89:	mov    esi,eax
  41ba8b:	shr    esi,0xd
  41ba8e:	mov    BYTE PTR [rsp+0x9],sil
  41ba93:	mov    esi,eax
  41ba95:	shr    esi,0x5
  41ba98:	mov    BYTE PTR [rsp+0xa],sil
  41ba9d:	mov    BYTE PTR [rsp+0xb],dl
  41baa1:	mov    edx,ecx
  41baa3:	shr    edx,0x15
  41baa6:	mov    BYTE PTR [rsp+0xc],dl
  41baaa:	mov    edx,ecx
  41baac:	shr    edx,0xd
  41baaf:	mov    BYTE PTR [rsp+0xd],dl
  41bab3:	mov    edx,ecx
  41bab5:	shr    edx,0x5
  41bab8:	mov    BYTE PTR [rsp+0xe],dl
  41babc:	mov    edx,ecx
  41babe:	shl    dl,0x3
  41bac1:	mov    BYTE PTR [rsp+0xf],dl
  41bac5:	mov    r12d,ecx
  41bac8:	and    r12d,0x3f
  41bacc:	xor    ebp,ebp
  41bace:	cmp    r12d,0x37
  41bad2:	seta   bpl
  41bad6:	shl    ebp,0x6
  41bad9:	or     ebp,0x38
  41badc:	sub    ebp,r12d
  41badf:	je     41bbb3 <strcmp@plt+0x1842b>
  41bae5:	lea    ecx,[rcx+rbp*1]
  41bae8:	mov    DWORD PTR [r15],ecx
  41baeb:	cmp    ecx,ebp
  41baed:	jae    41baf6 <strcmp@plt+0x1836e>
  41baef:	add    eax,0x1
  41baf2:	mov    DWORD PTR [r15+0x4],eax
  41baf6:	lea    rsi,[rip+0x2c793]        # 448290 <strcmp@plt+0x44b08>
  41bafd:	test   r12d,r12d
  41bb00:	je     41bb45 <strcmp@plt+0x183bd>
  41bb02:	mov    r13d,0x40
  41bb08:	sub    r13d,r12d
  41bb0b:	cmp    ebp,r13d
  41bb0e:	jb     41bb45 <strcmp@plt+0x183bd>
  41bb10:	lea    rbx,[r15+0x1c]
  41bb14:	lea    rdi,[r15+r12*1]
  41bb18:	add    rdi,0x1c
  41bb1c:	lea    r12,[rip+0x2c76d]        # 448290 <strcmp@plt+0x44b08>
  41bb23:	mov    rsi,r12
  41bb26:	mov    rdx,r13
  41bb29:	call   403330 <memcpy@plt>
  41bb2e:	mov    rdi,r15
  41bb31:	mov    rsi,rbx
  41bb34:	call   41a610 <strcmp@plt+0x16e88>
  41bb39:	mov    rsi,r12
  41bb3c:	add    rsi,r13
  41bb3f:	sub    rbp,r13
  41bb42:	xor    r12d,r12d
  41bb45:	cmp    rbp,0x40
  41bb49:	jb     41bb9b <strcmp@plt+0x18413>
  41bb4b:	lea    r13,[rbp-0x40]
  41bb4f:	mov    QWORD PTR [rsp+0x10],r13
  41bb54:	and    r13,0xffffffffffffffc0
  41bb58:	lea    rax,[r13+0x40]
  41bb5c:	mov    QWORD PTR [rsp+0x20],rax
  41bb61:	mov    QWORD PTR [rsp+0x18],rsi
  41bb66:	mov    rbx,rsi
  41bb69:	nop    DWORD PTR [rax+0x0]
  41bb70:	mov    rdi,r15
  41bb73:	mov    rsi,rbx
  41bb76:	call   41a610 <strcmp@plt+0x16e88>
  41bb7b:	add    rbx,0x40
  41bb7f:	add    rbp,0xffffffffffffffc0
  41bb83:	cmp    rbp,0x3f
  41bb87:	ja     41bb70 <strcmp@plt+0x183e8>
  41bb89:	mov    rsi,QWORD PTR [rsp+0x18]
  41bb8e:	add    rsi,QWORD PTR [rsp+0x20]
  41bb93:	mov    rbp,QWORD PTR [rsp+0x10]
  41bb98:	sub    rbp,r13
  41bb9b:	test   rbp,rbp
  41bb9e:	je     41bbb3 <strcmp@plt+0x1842b>
  41bba0:	mov    eax,r12d
  41bba3:	lea    rdi,[r15+rax*1]
  41bba7:	add    rdi,0x1c
  41bbab:	mov    rdx,rbp
  41bbae:	call   403330 <memcpy@plt>
  41bbb3:	mov    ecx,DWORD PTR [r15]
  41bbb6:	mov    eax,ecx
  41bbb8:	and    eax,0x3f
  41bbbb:	lea    edx,[rcx+0x8]
  41bbbe:	mov    DWORD PTR [r15],edx
  41bbc1:	cmp    ecx,0xfffffff8
  41bbc4:	jb     41bbcb <strcmp@plt+0x18443>
  41bbc6:	add    DWORD PTR [r15+0x4],0x1
  41bbcb:	lea    r12,[rsp+0x8]
  41bbd0:	mov    ebx,0x8
  41bbd5:	test   eax,eax
  41bbd7:	je     41bc7d <strcmp@plt+0x184f5>
  41bbdd:	mov    r13d,0x40
  41bbe3:	sub    r13d,eax
  41bbe6:	cmp    r13d,0x8
  41bbea:	ja     41bc7d <strcmp@plt+0x184f5>
  41bbf0:	lea    rbx,[r15+0x1c]
  41bbf4:	lea    rdi,[r15+rax*1]
  41bbf8:	add    rdi,0x1c
  41bbfc:	lea    rsi,[rsp+0x8]
  41bc01:	mov    rdx,r13
  41bc04:	call   403330 <memcpy@plt>
  41bc09:	mov    rdi,r15
  41bc0c:	mov    rsi,rbx
  41bc0f:	call   41a610 <strcmp@plt+0x16e88>
  41bc14:	lea    r12,[rsp+r13*1]
  41bc18:	add    r12,0x8
  41bc1c:	mov    ebx,0x8
  41bc21:	sub    rbx,r13
  41bc24:	cmp    rbx,0x40
  41bc28:	jb     41bc76 <strcmp@plt+0x184ee>
  41bc2a:	lea    r13,[rbx-0x40]
  41bc2e:	mov    QWORD PTR [rsp+0x18],r13
  41bc33:	and    r13,0xffffffffffffffc0
  41bc37:	lea    rax,[r13+0x40]
  41bc3b:	mov    QWORD PTR [rsp+0x10],rax
  41bc40:	mov    rbp,r12
  41bc43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bc4d:	nop    DWORD PTR [rax]
  41bc50:	mov    rdi,r15
  41bc53:	mov    rsi,rbp
  41bc56:	call   41a610 <strcmp@plt+0x16e88>
  41bc5b:	add    rbp,0x40
  41bc5f:	add    rbx,0xffffffffffffffc0
  41bc63:	cmp    rbx,0x3f
  41bc67:	ja     41bc50 <strcmp@plt+0x184c8>
  41bc69:	add    r12,QWORD PTR [rsp+0x10]
  41bc6e:	mov    rbx,QWORD PTR [rsp+0x18]
  41bc73:	sub    rbx,r13
  41bc76:	xor    eax,eax
  41bc78:	test   rbx,rbx
  41bc7b:	je     41bc92 <strcmp@plt+0x1850a>
  41bc7d:	mov    eax,eax
  41bc7f:	lea    rdi,[r15+rax*1]
  41bc83:	add    rdi,0x1c
  41bc87:	mov    rsi,r12
  41bc8a:	mov    rdx,rbx
  41bc8d:	call   403330 <memcpy@plt>
  41bc92:	mov    al,BYTE PTR [r15+0xb]
  41bc96:	mov    BYTE PTR [r14],al
  41bc99:	mov    al,BYTE PTR [r15+0xa]
  41bc9d:	mov    BYTE PTR [r14+0x1],al
  41bca1:	mov    al,BYTE PTR [r15+0x9]
  41bca5:	mov    BYTE PTR [r14+0x2],al
  41bca9:	mov    al,BYTE PTR [r15+0x8]
  41bcad:	mov    BYTE PTR [r14+0x3],al
  41bcb1:	mov    al,BYTE PTR [r15+0xf]
  41bcb5:	mov    BYTE PTR [r14+0x4],al
  41bcb9:	mov    al,BYTE PTR [r15+0xe]
  41bcbd:	mov    BYTE PTR [r14+0x5],al
  41bcc1:	mov    al,BYTE PTR [r15+0xd]
  41bcc5:	mov    BYTE PTR [r14+0x6],al
  41bcc9:	mov    al,BYTE PTR [r15+0xc]
  41bccd:	mov    BYTE PTR [r14+0x7],al
  41bcd1:	mov    al,BYTE PTR [r15+0x13]
  41bcd5:	mov    BYTE PTR [r14+0x8],al
  41bcd9:	mov    al,BYTE PTR [r15+0x12]
  41bcdd:	mov    BYTE PTR [r14+0x9],al
  41bce1:	mov    al,BYTE PTR [r15+0x11]
  41bce5:	mov    BYTE PTR [r14+0xa],al
  41bce9:	mov    al,BYTE PTR [r15+0x10]
  41bced:	mov    BYTE PTR [r14+0xb],al
  41bcf1:	mov    al,BYTE PTR [r15+0x17]
  41bcf5:	mov    BYTE PTR [r14+0xc],al
  41bcf9:	mov    al,BYTE PTR [r15+0x16]
  41bcfd:	mov    BYTE PTR [r14+0xd],al
  41bd01:	mov    al,BYTE PTR [r15+0x15]
  41bd05:	mov    BYTE PTR [r14+0xe],al
  41bd09:	mov    al,BYTE PTR [r15+0x14]
  41bd0d:	mov    BYTE PTR [r14+0xf],al
  41bd11:	mov    al,BYTE PTR [r15+0x1b]
  41bd15:	mov    BYTE PTR [r14+0x10],al
  41bd19:	mov    al,BYTE PTR [r15+0x1a]
  41bd1d:	mov    BYTE PTR [r14+0x11],al
  41bd21:	mov    al,BYTE PTR [r15+0x19]
  41bd25:	mov    BYTE PTR [r14+0x12],al
  41bd29:	mov    al,BYTE PTR [r15+0x18]
  41bd2d:	mov    BYTE PTR [r14+0x13],al
  41bd31:	add    rsp,0x28
  41bd35:	pop    rbx
  41bd36:	pop    r12
  41bd38:	pop    r13
  41bd3a:	pop    r14
  41bd3c:	pop    r15
  41bd3e:	pop    rbp
  41bd3f:	ret    
  41bd40:	push   rbp
  41bd41:	mov    rbp,rsp
  41bd44:	push   r15
  41bd46:	push   r14
  41bd48:	push   r13
  41bd4a:	push   r12
  41bd4c:	push   rbx
  41bd4d:	and    rsp,0xffffffffffffffe0
  41bd51:	sub    rsp,0xa0
  41bd58:	vxorps xmm0,xmm0,xmm0
  41bd5c:	vmovaps YMMWORD PTR [rsp],ymm0
  41bd61:	vmovups YMMWORD PTR [rsp+0x3c],ymm0
  41bd67:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  41bd6d:	mov    r14,rdx
  41bd70:	vmovaps xmm0,XMMWORD PTR [rip+0x2c508]        # 448280 <strcmp@plt+0x44af8>
  41bd78:	vmovups XMMWORD PTR [rsp+0x8],xmm0
  41bd7e:	mov    DWORD PTR [rsp+0x18],0xc3d2e1f0
  41bd86:	test   rsi,rsi
  41bd89:	je     41be1b <strcmp@plt+0x18693>
  41bd8f:	mov    rbx,rsi
  41bd92:	mov    rax,rdi
  41bd95:	mov    DWORD PTR [rsp],ebx
  41bd98:	cmp    rsi,0x40
  41bd9c:	jb     41be05 <strcmp@plt+0x1867d>
  41bd9e:	mov    QWORD PTR [rsp+0x80],r14
  41bda6:	lea    r15,[rbx-0x40]
  41bdaa:	mov    r12,r15
  41bdad:	and    r12,0xffffffffffffffc0
  41bdb1:	lea    rcx,[r12+0x40]
  41bdb6:	mov    QWORD PTR [rsp+0x70],rcx
  41bdbb:	mov    r13,rsp
  41bdbe:	mov    QWORD PTR [rsp+0x78],rax
  41bdc3:	mov    r14,rax
  41bdc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bdd0:	mov    rdi,r13
  41bdd3:	mov    rsi,r14
  41bdd6:	vzeroupper 
  41bdd9:	call   41a610 <strcmp@plt+0x16e88>
  41bdde:	add    r14,0x40
  41bde2:	add    rbx,0xffffffffffffffc0
  41bde6:	cmp    rbx,0x3f
  41bdea:	ja     41bdd0 <strcmp@plt+0x18648>
  41bdec:	sub    r15,r12
  41bdef:	mov    r14,QWORD PTR [rsp+0x80]
  41bdf7:	mov    rax,QWORD PTR [rsp+0x78]
  41bdfc:	je     41be1b <strcmp@plt+0x18693>
  41bdfe:	add    rax,QWORD PTR [rsp+0x70]
  41be03:	jmp    41be08 <strcmp@plt+0x18680>
  41be05:	mov    r15,rbx
  41be08:	lea    rdi,[rsp+0x1c]
  41be0d:	mov    rsi,rax
  41be10:	mov    rdx,r15
  41be13:	vzeroupper 
  41be16:	call   403330 <memcpy@plt>
  41be1b:	mov    rdi,rsp
  41be1e:	mov    rsi,r14
  41be21:	vzeroupper 
  41be24:	call   41ba60 <strcmp@plt+0x182d8>
  41be29:	xor    eax,eax
  41be2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41be30:	mov    BYTE PTR [rsp+rax*1],0x0
  41be34:	mov    BYTE PTR [rsp+rax*1+0x1],0x0
  41be39:	mov    BYTE PTR [rsp+rax*1+0x2],0x0
  41be3e:	mov    BYTE PTR [rsp+rax*1+0x3],0x0
  41be43:	mov    BYTE PTR [rsp+rax*1+0x4],0x0
  41be48:	mov    BYTE PTR [rsp+rax*1+0x5],0x0
  41be4d:	mov    BYTE PTR [rsp+rax*1+0x6],0x0
  41be52:	mov    BYTE PTR [rsp+rax*1+0x7],0x0
  41be57:	mov    BYTE PTR [rsp+rax*1+0x8],0x0
  41be5c:	mov    BYTE PTR [rsp+rax*1+0x9],0x0
  41be61:	mov    BYTE PTR [rsp+rax*1+0xa],0x0
  41be66:	mov    BYTE PTR [rsp+rax*1+0xb],0x0
  41be6b:	mov    BYTE PTR [rsp+rax*1+0xc],0x0
  41be70:	mov    BYTE PTR [rsp+rax*1+0xd],0x0
  41be75:	mov    BYTE PTR [rsp+rax*1+0xe],0x0
  41be7a:	mov    BYTE PTR [rsp+rax*1+0xf],0x0
  41be7f:	mov    BYTE PTR [rsp+rax*1+0x10],0x0
  41be84:	mov    BYTE PTR [rsp+rax*1+0x11],0x0
  41be89:	mov    BYTE PTR [rsp+rax*1+0x12],0x0
  41be8e:	mov    BYTE PTR [rsp+rax*1+0x13],0x0
  41be93:	mov    BYTE PTR [rsp+rax*1+0x14],0x0
  41be98:	mov    BYTE PTR [rsp+rax*1+0x15],0x0
  41be9d:	mov    BYTE PTR [rsp+rax*1+0x16],0x0
  41bea2:	add    rax,0x17
  41bea6:	cmp    rax,0x5c
  41beaa:	jne    41be30 <strcmp@plt+0x186a8>
  41beac:	lea    rsp,[rbp-0x28]
  41beb0:	pop    rbx
  41beb1:	pop    r12
  41beb3:	pop    r13
  41beb5:	pop    r14
  41beb7:	pop    r15
  41beb9:	pop    rbp
  41beba:	ret    
  41bebb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bec0:	vxorps xmm0,xmm0,xmm0
  41bec4:	vmovups YMMWORD PTR [rdi+0x4c],ymm0
  41bec9:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  41bece:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41bed3:	vmovups YMMWORD PTR [rdi],ymm0
  41bed7:	vzeroupper 
  41beda:	ret    
  41bedb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bee0:	test   rdi,rdi
  41bee3:	je     41bf53 <strcmp@plt+0x187cb>
  41bee5:	xor    eax,eax
  41bee7:	nop    WORD PTR [rax+rax*1+0x0]
  41bef0:	mov    BYTE PTR [rdi+rax*1],0x0
  41bef4:	mov    BYTE PTR [rdi+rax*1+0x1],0x0
  41bef9:	mov    BYTE PTR [rdi+rax*1+0x2],0x0
  41befe:	mov    BYTE PTR [rdi+rax*1+0x3],0x0
  41bf03:	mov    BYTE PTR [rdi+rax*1+0x4],0x0
  41bf08:	mov    BYTE PTR [rdi+rax*1+0x5],0x0
  41bf0d:	mov    BYTE PTR [rdi+rax*1+0x6],0x0
  41bf12:	mov    BYTE PTR [rdi+rax*1+0x7],0x0
  41bf17:	mov    BYTE PTR [rdi+rax*1+0x8],0x0
  41bf1c:	mov    BYTE PTR [rdi+rax*1+0x9],0x0
  41bf21:	mov    BYTE PTR [rdi+rax*1+0xa],0x0
  41bf26:	mov    BYTE PTR [rdi+rax*1+0xb],0x0
  41bf2b:	mov    BYTE PTR [rdi+rax*1+0xc],0x0
  41bf30:	mov    BYTE PTR [rdi+rax*1+0xd],0x0
  41bf35:	mov    BYTE PTR [rdi+rax*1+0xe],0x0
  41bf3a:	mov    BYTE PTR [rdi+rax*1+0xf],0x0
  41bf3f:	mov    BYTE PTR [rdi+rax*1+0x10],0x0
  41bf44:	mov    BYTE PTR [rdi+rax*1+0x11],0x0
  41bf49:	add    rax,0x12
  41bf4d:	cmp    rax,0x6c
  41bf51:	jne    41bef0 <strcmp@plt+0x18768>
  41bf53:	ret    
  41bf54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bf5e:	xchg   ax,ax
  41bf60:	vmovups ymm0,YMMWORD PTR [rsi]
  41bf64:	vmovups ymm1,YMMWORD PTR [rsi+0x20]
  41bf69:	vmovups ymm2,YMMWORD PTR [rsi+0x40]
  41bf6e:	vmovups ymm3,YMMWORD PTR [rsi+0x4c]
  41bf73:	vmovups YMMWORD PTR [rdi+0x4c],ymm3
  41bf78:	vmovups YMMWORD PTR [rdi+0x40],ymm2
  41bf7d:	vmovups YMMWORD PTR [rdi+0x20],ymm1
  41bf82:	vmovups YMMWORD PTR [rdi],ymm0
  41bf86:	vzeroupper 
  41bf89:	ret    
  41bf8a:	nop    WORD PTR [rax+rax*1+0x0]
  41bf90:	mov    QWORD PTR [rdi],0x0
  41bf97:	xor    eax,eax
  41bf99:	test   esi,esi
  41bf9b:	sete   al
  41bf9e:	vmovd  xmm0,eax
  41bfa2:	vpbroadcastw xmm0,xmm0
  41bfa7:	vpmovzxwd ymm0,xmm0
  41bfac:	vpslld ymm0,ymm0,0x1f
  41bfb1:	vmovaps ymm1,YMMWORD PTR [rip+0x2c347]        # 448300 <strcmp@plt+0x44b78>
  41bfb9:	vblendvps ymm0,ymm1,YMMWORD PTR [rip+0x2c31d],ymm0        # 4482e0 <strcmp@plt+0x44b58>
  41bfc3:	vmovups YMMWORD PTR [rdi+0x8],ymm0
  41bfc8:	mov    DWORD PTR [rdi+0x68],esi
  41bfcb:	vzeroupper 
  41bfce:	ret    
  41bfcf:	nop
  41bfd0:	push   rbp
  41bfd1:	push   r15
  41bfd3:	push   r14
  41bfd5:	push   r13
  41bfd7:	push   r12
  41bfd9:	push   rbx
  41bfda:	sub    rsp,0xc8
  41bfe1:	vmovups ymm0,YMMWORD PTR [rdi+0x8]
  41bfe6:	add    rdi,0x8
  41bfea:	mov    QWORD PTR [rsp-0x48],rdi
  41bfef:	vmovups YMMWORD PTR [rsp-0x70],ymm0
  41bff5:	vmovdqu xmm1,XMMWORD PTR [rsi]
  41bff9:	vpslld xmm2,xmm1,0x18
  41bffe:	vmovdqa xmm0,XMMWORD PTR [rip+0x2c31a]        # 448320 <strcmp@plt+0x44b98>
  41c006:	vpshufb xmm3,xmm1,xmm0
  41c00b:	vpor   xmm2,xmm3,xmm2
  41c00f:	vmovdqa xmm3,XMMWORD PTR [rip+0x2c319]        # 448330 <strcmp@plt+0x44ba8>
  41c017:	vpshufb xmm4,xmm1,xmm3
  41c01c:	vpor   xmm2,xmm2,xmm4
  41c020:	vmovdqa xmm4,XMMWORD PTR [rip+0x2c318]        # 448340 <strcmp@plt+0x44bb8>
  41c028:	vpshufb xmm1,xmm1,xmm4
  41c02d:	vpmovzxbd xmm1,xmm1
  41c032:	vpor   xmm1,xmm2,xmm1
  41c036:	vmovdqa XMMWORD PTR [rsp-0x40],xmm1
  41c03c:	vmovdqu xmm1,XMMWORD PTR [rsi+0x10]
  41c041:	vpslld xmm2,xmm1,0x18
  41c046:	vpshufb xmm5,xmm1,xmm0
  41c04b:	vpor   xmm2,xmm5,xmm2
  41c04f:	vpshufb xmm5,xmm1,xmm3
  41c054:	vpor   xmm2,xmm2,xmm5
  41c058:	vpshufb xmm1,xmm1,xmm4
  41c05d:	vpmovzxbd xmm1,xmm1
  41c062:	vpor   xmm1,xmm2,xmm1
  41c066:	vmovdqa XMMWORD PTR [rsp-0x30],xmm1
  41c06c:	vmovdqu xmm1,XMMWORD PTR [rsi+0x20]
  41c071:	vpslld xmm2,xmm1,0x18
  41c076:	vpshufb xmm5,xmm1,xmm0
  41c07b:	vpor   xmm2,xmm5,xmm2
  41c07f:	vpshufb xmm5,xmm1,xmm3
  41c084:	vpor   xmm2,xmm2,xmm5
  41c088:	vpshufb xmm1,xmm1,xmm4
  41c08d:	vpmovzxbd xmm1,xmm1
  41c092:	vpor   xmm1,xmm2,xmm1
  41c096:	vmovdqa XMMWORD PTR [rsp-0x20],xmm1
  41c09c:	vmovdqu xmm1,XMMWORD PTR [rsi+0x30]
  41c0a1:	vpslld xmm2,xmm1,0x18
  41c0a6:	vpshufb xmm0,xmm1,xmm0
  41c0ab:	vpor   xmm0,xmm0,xmm2
  41c0af:	vpshufb xmm2,xmm1,xmm3
  41c0b4:	vpor   xmm0,xmm0,xmm2
  41c0b8:	vpshufb xmm1,xmm1,xmm4
  41c0bd:	vpmovzxbd xmm1,xmm1
  41c0c2:	vpor   xmm0,xmm0,xmm1
  41c0c6:	vmovdqa XMMWORD PTR [rsp-0x10],xmm0
  41c0cc:	mov    r15d,DWORD PTR [rsp-0x54]
  41c0d1:	mov    r13d,DWORD PTR [rsp-0x60]
  41c0d6:	mov    r11d,DWORD PTR [rsp-0x58]
  41c0db:	mov    r10d,DWORD PTR [rsp-0x5c]
  41c0e0:	mov    esi,DWORD PTR [rsp-0x70]
  41c0e4:	mov    r8d,DWORD PTR [rsp-0x6c]
  41c0e9:	mov    r14d,DWORD PTR [rsp-0x68]
  41c0ee:	xor    edx,edx
  41c0f0:	mov    r9d,DWORD PTR [rsp-0x64]
  41c0f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c0ff:	nop
  41c100:	rorx   edi,r13d,0x6
  41c106:	rorx   ebp,r13d,0xb
  41c10c:	xor    ebp,edi
  41c10e:	rorx   edi,r13d,0x19
  41c114:	xor    edi,ebp
  41c116:	andn   eax,r13d,r11d
  41c11b:	mov    ebp,r10d
  41c11e:	and    ebp,r13d
  41c121:	lea    rcx,[rip+0x2c278]        # 4483a0 <strcmp@plt+0x44c18>
  41c128:	add    r15d,DWORD PTR [rcx+rdx*4]
  41c12c:	add    r15d,edi
  41c12f:	add    r15d,DWORD PTR [rsp+rdx*4-0x40]
  41c134:	or     ebp,eax
  41c136:	add    r15d,ebp
  41c139:	rorx   edi,esi,0x2
  41c13f:	rorx   ebp,esi,0xd
  41c145:	xor    ebp,edi
  41c147:	rorx   eax,esi,0x16
  41c14d:	xor    eax,ebp
  41c14f:	mov    edi,r8d
  41c152:	and    edi,esi
  41c154:	mov    r12d,r8d
  41c157:	or     r12d,esi
  41c15a:	and    r12d,r14d
  41c15d:	or     r12d,edi
  41c160:	add    r9d,r15d
  41c163:	add    r12d,r15d
  41c166:	add    r12d,eax
  41c169:	rorx   edi,r9d,0x6
  41c16f:	rorx   r15d,r9d,0xb
  41c175:	xor    r15d,edi
  41c178:	andn   eax,r9d,r10d
  41c17d:	mov    edi,r13d
  41c180:	and    edi,r9d
  41c183:	or     edi,eax
  41c185:	rorx   ebx,r9d,0x19
  41c18b:	add    edi,r11d
  41c18e:	lea    rax,[rip+0x2c20b]        # 4483a0 <strcmp@plt+0x44c18>
  41c195:	add    edi,DWORD PTR [rax+rdx*4+0x4]
  41c199:	xor    ebx,r15d
  41c19c:	add    edi,DWORD PTR [rsp+rdx*4-0x3c]
  41c1a0:	mov    rcx,rdx
  41c1a3:	add    edi,ebx
  41c1a5:	rorx   eax,r12d,0x2
  41c1ab:	rorx   ebx,r12d,0xd
  41c1b1:	xor    ebx,eax
  41c1b3:	rorx   ebp,r12d,0x16
  41c1b9:	xor    ebp,ebx
  41c1bb:	mov    ebx,r12d
  41c1be:	and    ebx,esi
  41c1c0:	mov    r11d,r12d
  41c1c3:	or     r11d,esi
  41c1c6:	and    r11d,r8d
  41c1c9:	or     r11d,ebx
  41c1cc:	lea    rbx,[rip+0x2c1cd]        # 4483a0 <strcmp@plt+0x44c18>
  41c1d3:	add    r11d,ebp
  41c1d6:	add    r14d,edi
  41c1d9:	add    r11d,edi
  41c1dc:	rorx   edi,r14d,0x6
  41c1e2:	rorx   ebp,r14d,0xb
  41c1e8:	xor    ebp,edi
  41c1ea:	rorx   edi,r14d,0x19
  41c1f0:	xor    edi,ebp
  41c1f2:	andn   ebp,r14d,r13d
  41c1f7:	mov    edx,r9d
  41c1fa:	and    edx,r14d
  41c1fd:	or     edx,ebp
  41c1ff:	mov    rax,rcx
  41c202:	add    r10d,DWORD PTR [rbx+rcx*4+0x8]
  41c207:	add    r10d,DWORD PTR [rsp+rcx*4-0x38]
  41c20c:	add    r10d,edx
  41c20f:	add    r10d,edi
  41c212:	rorx   edx,r11d,0x2
  41c218:	rorx   edi,r11d,0xd
  41c21e:	xor    edi,edx
  41c220:	rorx   edx,r11d,0x16
  41c226:	xor    edx,edi
  41c228:	mov    edi,r11d
  41c22b:	and    edi,r12d
  41c22e:	mov    ebp,r11d
  41c231:	or     ebp,r12d
  41c234:	and    ebp,esi
  41c236:	or     ebp,edi
  41c238:	add    ebp,edx
  41c23a:	add    r8d,r10d
  41c23d:	add    r10d,ebp
  41c240:	rorx   edx,r8d,0x6
  41c246:	rorx   edi,r8d,0xb
  41c24c:	xor    edi,edx
  41c24e:	rorx   edx,r8d,0x19
  41c254:	xor    edx,edi
  41c256:	andn   edi,r8d,r9d
  41c25b:	mov    ecx,r14d
  41c25e:	and    ecx,r8d
  41c261:	or     ecx,edi
  41c263:	add    r13d,DWORD PTR [rbx+rax*4+0xc]
  41c268:	add    r13d,DWORD PTR [rsp+rax*4-0x34]
  41c26d:	mov    rbp,rax
  41c270:	add    r13d,ecx
  41c273:	add    r13d,edx
  41c276:	rorx   ecx,r10d,0x2
  41c27c:	rorx   edx,r10d,0xd
  41c282:	xor    edx,ecx
  41c284:	rorx   ecx,r10d,0x16
  41c28a:	xor    ecx,edx
  41c28c:	mov    edx,r10d
  41c28f:	and    edx,r11d
  41c292:	mov    edi,r10d
  41c295:	or     edi,r11d
  41c298:	and    edi,r12d
  41c29b:	or     edi,edx
  41c29d:	add    edi,ecx
  41c29f:	add    esi,r13d
  41c2a2:	add    r13d,edi
  41c2a5:	rorx   ecx,esi,0x6
  41c2ab:	rorx   edx,esi,0xb
  41c2b1:	xor    edx,ecx
  41c2b3:	rorx   ecx,esi,0x19
  41c2b9:	xor    ecx,edx
  41c2bb:	andn   edx,esi,r14d
  41c2c0:	mov    edi,r8d
  41c2c3:	and    edi,esi
  41c2c5:	or     edi,edx
  41c2c7:	add    r9d,DWORD PTR [rbx+rax*4+0x10]
  41c2cc:	add    r9d,DWORD PTR [rsp+rax*4-0x30]
  41c2d1:	add    r9d,edi
  41c2d4:	mov    edx,r9d
  41c2d7:	add    edx,ecx
  41c2d9:	rorx   ecx,r13d,0x2
  41c2df:	rorx   edi,r13d,0xd
  41c2e5:	xor    edi,ecx
  41c2e7:	rorx   ecx,r13d,0x16
  41c2ed:	xor    ecx,edi
  41c2ef:	mov    edi,r13d
  41c2f2:	and    edi,r10d
  41c2f5:	mov    r9d,r13d
  41c2f8:	or     r9d,r10d
  41c2fb:	and    r9d,r11d
  41c2fe:	or     r9d,edi
  41c301:	add    r9d,ecx
  41c304:	mov    r15d,r12d
  41c307:	add    r15d,edx
  41c30a:	add    r9d,edx
  41c30d:	rorx   ecx,r15d,0x6
  41c313:	rorx   edx,r15d,0xb
  41c319:	xor    edx,ecx
  41c31b:	rorx   ecx,r15d,0x19
  41c321:	xor    ecx,edx
  41c323:	andn   edx,r15d,r8d
  41c328:	mov    edi,esi
  41c32a:	and    edi,r15d
  41c32d:	or     edi,edx
  41c32f:	add    r14d,DWORD PTR [rbx+rax*4+0x14]
  41c334:	add    r14d,DWORD PTR [rsp+rax*4-0x2c]
  41c339:	add    r14d,edi
  41c33c:	mov    edx,r14d
  41c33f:	add    edx,ecx
  41c341:	rorx   ecx,r9d,0x2
  41c347:	rorx   edi,r9d,0xd
  41c34d:	xor    edi,ecx
  41c34f:	rorx   ecx,r9d,0x16
  41c355:	xor    ecx,edi
  41c357:	mov    edi,r9d
  41c35a:	and    edi,r13d
  41c35d:	mov    r14d,r9d
  41c360:	or     r14d,r13d
  41c363:	and    r14d,r10d
  41c366:	or     r14d,edi
  41c369:	add    r14d,ecx
  41c36c:	add    r11d,edx
  41c36f:	add    r14d,edx
  41c372:	rorx   ecx,r11d,0x6
  41c378:	rorx   edx,r11d,0xb
  41c37e:	xor    edx,ecx
  41c380:	rorx   ecx,r11d,0x19
  41c386:	xor    ecx,edx
  41c388:	andn   edx,r11d,esi
  41c38d:	mov    edi,r15d
  41c390:	and    edi,r11d
  41c393:	or     edi,edx
  41c395:	add    r8d,DWORD PTR [rbx+rax*4+0x18]
  41c39a:	add    r8d,DWORD PTR [rsp+rax*4-0x28]
  41c39f:	add    r8d,edi
  41c3a2:	mov    edx,r8d
  41c3a5:	add    edx,ecx
  41c3a7:	rorx   eax,r14d,0x2
  41c3ad:	rorx   ecx,r14d,0xd
  41c3b3:	xor    ecx,eax
  41c3b5:	rorx   edi,r14d,0x16
  41c3bb:	xor    edi,ecx
  41c3bd:	mov    ecx,r14d
  41c3c0:	and    ecx,r9d
  41c3c3:	mov    r8d,r14d
  41c3c6:	or     r8d,r9d
  41c3c9:	and    r8d,r13d
  41c3cc:	or     r8d,ecx
  41c3cf:	add    r8d,edi
  41c3d2:	add    r10d,edx
  41c3d5:	add    r8d,edx
  41c3d8:	rorx   ecx,r10d,0x6
  41c3de:	rorx   edx,r10d,0xb
  41c3e4:	xor    edx,ecx
  41c3e6:	rorx   ecx,r10d,0x19
  41c3ec:	xor    ecx,edx
  41c3ee:	andn   edx,r10d,r15d
  41c3f3:	mov    edi,r11d
  41c3f6:	and    edi,r10d
  41c3f9:	or     edi,edx
  41c3fb:	add    esi,DWORD PTR [rbx+rbp*4+0x1c]
  41c3ff:	add    esi,DWORD PTR [rsp+rbp*4-0x24]
  41c403:	add    esi,edi
  41c405:	mov    edx,esi
  41c407:	add    edx,ecx
  41c409:	rorx   ecx,r8d,0x2
  41c40f:	rorx   esi,r8d,0xd
  41c415:	xor    esi,ecx
  41c417:	rorx   ecx,r8d,0x16
  41c41d:	xor    ecx,esi
  41c41f:	mov    edi,r8d
  41c422:	and    edi,r14d
  41c425:	mov    esi,r8d
  41c428:	or     esi,r14d
  41c42b:	and    esi,r9d
  41c42e:	or     esi,edi
  41c430:	add    esi,ecx
  41c432:	add    r13d,edx
  41c435:	add    esi,edx
  41c437:	mov    rax,rbp
  41c43a:	add    rax,0x8
  41c43e:	mov    rdx,rax
  41c441:	cmp    rax,0x10
  41c445:	jb     41c100 <strcmp@plt+0x18978>
  41c44b:	mov    DWORD PTR [rsp-0x54],r15d
  41c450:	mov    DWORD PTR [rsp-0x60],r13d
  41c455:	mov    DWORD PTR [rsp-0x58],r11d
  41c45a:	mov    DWORD PTR [rsp-0x5c],r10d
  41c45f:	mov    DWORD PTR [rsp-0x70],esi
  41c463:	mov    DWORD PTR [rsp-0x6c],r8d
  41c468:	mov    DWORD PTR [rsp-0x68],r14d
  41c46d:	mov    DWORD PTR [rsp-0x64],r9d
  41c472:	mov    ecx,0x10
  41c477:	vpxor  xmm8,xmm8,xmm8
  41c47c:	vmovdqa xmm9,XMMWORD PTR [rip+0x2becc]        # 448350 <strcmp@plt+0x44bc8>
  41c484:	vmovdqa xmm10,XMMWORD PTR [rip+0x2bed4]        # 448360 <strcmp@plt+0x44bd8>
  41c48c:	vmovdqa xmm3,XMMWORD PTR [rip+0x2bedc]        # 448370 <strcmp@plt+0x44be8>
  41c494:	vmovdqa xmm4,XMMWORD PTR [rip+0x2bee4]        # 448380 <strcmp@plt+0x44bf8>
  41c49c:	vmovdqa xmm5,XMMWORD PTR [rip+0x2beec]        # 448390 <strcmp@plt+0x44c08>
  41c4a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c4ae:	xchg   ax,ax
  41c4b0:	rorx   edx,r13d,0x6
  41c4b6:	rorx   ebp,r13d,0xb
  41c4bc:	xor    ebp,edx
  41c4be:	rorx   eax,r13d,0x19
  41c4c4:	andn   edx,r13d,r11d
  41c4c9:	mov    edi,r10d
  41c4cc:	xor    eax,ebp
  41c4ce:	and    edi,r13d
  41c4d1:	or     edi,edx
  41c4d3:	mov    rbx,rcx
  41c4d6:	mov    ecx,DWORD PTR [rsp+rcx*4-0x7c]
  41c4da:	vmovd  xmm6,DWORD PTR [rsp+rbx*4-0x48]
  41c4e0:	vpinsrd xmm6,xmm6,ecx,0x2
  41c4e6:	mov    edx,DWORD PTR [rsp+rbx*4-0x80]
  41c4ea:	mov    r12,rbx
  41c4ed:	vpblendd xmm7,xmm6,xmm8,0xa
  41c4f3:	vpsrlvq xmm0,xmm7,xmm9
  41c4f8:	vpsllvq xmm1,xmm6,xmm10
  41c4fd:	vpsrlvq xmm2,xmm7,xmm3
  41c502:	vpor   xmm0,xmm0,xmm1
  41c506:	vpsllvq xmm1,xmm6,xmm4
  41c50b:	vpor   xmm1,xmm2,xmm1
  41c50f:	vpsrlvq xmm2,xmm7,xmm5
  41c514:	add    edx,DWORD PTR [rsp+rbx*4-0x5c]
  41c518:	vpxor  xmm1,xmm1,xmm2
  41c51c:	vpxor  xmm0,xmm1,xmm0
  41c520:	vmovd  ebp,xmm0
  41c524:	add    ebp,edx
  41c526:	vpextrd ebx,xmm0,0x2
  41c52c:	add    ebx,ebp
  41c52e:	mov    DWORD PTR [rsp+r12*4-0x40],ebx
  41c533:	lea    rdx,[rip+0x2be66]        # 4483a0 <strcmp@plt+0x44c18>
  41c53a:	add    r15d,DWORD PTR [rdx+r12*4]
  41c53e:	add    r15d,eax
  41c541:	rorx   edx,esi,0x2
  41c547:	add    r15d,edi
  41c54a:	rorx   edi,esi,0xd
  41c550:	xor    edi,edx
  41c552:	rorx   edx,esi,0x16
  41c558:	xor    edx,edi
  41c55a:	mov    edi,r8d
  41c55d:	and    edi,esi
  41c55f:	mov    eax,r8d
  41c562:	add    r15d,ebx
  41c565:	or     eax,esi
  41c567:	and    eax,r14d
  41c56a:	or     eax,edi
  41c56c:	add    eax,edx
  41c56e:	add    r9d,r15d
  41c571:	add    r15d,eax
  41c574:	rorx   eax,r9d,0x6
  41c57a:	rorx   edx,r9d,0xb
  41c580:	xor    edx,eax
  41c582:	rorx   edi,r9d,0x19
  41c588:	andn   eax,r9d,r10d
  41c58d:	mov    ebp,r13d
  41c590:	xor    edi,edx
  41c592:	and    ebp,r9d
  41c595:	or     ebp,eax
  41c597:	mov    eax,DWORD PTR [rsp+r12*4-0x78]
  41c59c:	mov    DWORD PTR [rsp-0x7c],eax
  41c5a0:	vmovd  xmm0,DWORD PTR [rsp+r12*4-0x44]
  41c5a7:	vpinsrd xmm0,xmm0,eax,0x2
  41c5ad:	vpblendd xmm1,xmm0,xmm8,0xa
  41c5b3:	vpsrlvq xmm2,xmm1,xmm9
  41c5b8:	vpsllvq xmm6,xmm0,xmm10
  41c5bd:	vpsrlvq xmm7,xmm1,xmm3
  41c5c2:	vpsllvq xmm0,xmm0,xmm4
  41c5c7:	vpor   xmm2,xmm2,xmm6
  41c5cb:	vpor   xmm0,xmm7,xmm0
  41c5cf:	vpsrlvq xmm1,xmm1,xmm5
  41c5d4:	vpxor  xmm0,xmm0,xmm1
  41c5d8:	add    ecx,DWORD PTR [rsp+r12*4-0x58]
  41c5dd:	vpxor  xmm0,xmm0,xmm2
  41c5e1:	vmovd  eax,xmm0
  41c5e5:	add    eax,ecx
  41c5e7:	vpextrd edx,xmm0,0x2
  41c5ed:	lea    rcx,[rip+0x2bdac]        # 4483a0 <strcmp@plt+0x44c18>
  41c5f4:	add    r11d,DWORD PTR [rcx+r12*4+0x4]
  41c5f9:	add    edx,eax
  41c5fb:	mov    DWORD PTR [rsp-0x78],edx
  41c5ff:	add    r11d,ebp
  41c602:	add    r11d,edi
  41c605:	rorx   eax,r15d,0x2
  41c60b:	rorx   edi,r15d,0xd
  41c611:	mov    DWORD PTR [rsp+r12*4-0x3c],edx
  41c616:	xor    edi,eax
  41c618:	rorx   eax,r15d,0x16
  41c61e:	xor    eax,edi
  41c620:	mov    edi,r15d
  41c623:	and    edi,esi
  41c625:	mov    ebp,r15d
  41c628:	or     ebp,esi
  41c62a:	add    r11d,edx
  41c62d:	and    ebp,r8d
  41c630:	or     ebp,edi
  41c632:	add    ebp,eax
  41c634:	add    r14d,r11d
  41c637:	add    r11d,ebp
  41c63a:	rorx   eax,r14d,0x6
  41c640:	rorx   edi,r14d,0xb
  41c646:	xor    edi,eax
  41c648:	rorx   ecx,r14d,0x19
  41c64e:	andn   ebp,r14d,r13d
  41c653:	mov    eax,r9d
  41c656:	and    eax,r14d
  41c659:	or     eax,ebp
  41c65b:	rorx   edx,ebx,0x11
  41c661:	mov    DWORD PTR [rsp-0x80],edx
  41c665:	rorx   edx,ebx,0x13
  41c66b:	mov    DWORD PTR [rsp-0x74],ebx
  41c66f:	mov    ebp,ebx
  41c671:	shr    ebp,0xa
  41c674:	xor    ebp,edx
  41c676:	xor    ebp,DWORD PTR [rsp-0x80]
  41c67a:	xor    ecx,edi
  41c67c:	mov    DWORD PTR [rsp-0x80],ecx
  41c680:	add    ebp,DWORD PTR [rsp+r12*4-0x54]
  41c685:	mov    edi,DWORD PTR [rsp+r12*4-0x74]
  41c68a:	rorx   ecx,edi,0x12
  41c690:	mov    edx,edi
  41c692:	shr    edx,0x3
  41c695:	xor    edx,ecx
  41c697:	rorx   ecx,edi,0x7
  41c69d:	xor    edx,ecx
  41c69f:	add    ebp,DWORD PTR [rsp-0x7c]
  41c6a3:	add    ebp,edx
  41c6a5:	mov    rbx,r12
  41c6a8:	lea    rcx,[rip+0x2bcf1]        # 4483a0 <strcmp@plt+0x44c18>
  41c6af:	add    r10d,DWORD PTR [rcx+r12*4+0x8]
  41c6b4:	mov    DWORD PTR [rsp+r12*4-0x38],ebp
  41c6b9:	add    r10d,eax
  41c6bc:	rorx   eax,r11d,0x2
  41c6c2:	rorx   ecx,r11d,0xd
  41c6c8:	xor    ecx,eax
  41c6ca:	add    r10d,DWORD PTR [rsp-0x80]
  41c6cf:	rorx   eax,r11d,0x16
  41c6d5:	xor    eax,ecx
  41c6d7:	mov    ecx,r11d
  41c6da:	and    ecx,r15d
  41c6dd:	mov    edx,r11d
  41c6e0:	or     edx,r15d
  41c6e3:	and    edx,esi
  41c6e5:	add    r10d,ebp
  41c6e8:	or     edx,ecx
  41c6ea:	add    edx,eax
  41c6ec:	add    r8d,r10d
  41c6ef:	add    r10d,edx
  41c6f2:	rorx   eax,r8d,0x6
  41c6f8:	rorx   ecx,r8d,0xb
  41c6fe:	xor    ecx,eax
  41c700:	rorx   eax,r8d,0x19
  41c706:	mov    DWORD PTR [rsp-0x80],eax
  41c70a:	andn   r12d,r8d,r9d
  41c70f:	mov    eax,r14d
  41c712:	and    eax,r8d
  41c715:	mov    edx,DWORD PTR [rsp+rbx*4-0x70]
  41c719:	mov    DWORD PTR [rsp-0x7c],edx
  41c71d:	or     eax,r12d
  41c720:	vmovd  xmm0,DWORD PTR [rsp-0x78]
  41c726:	vpinsrd xmm0,xmm0,edx,0x2
  41c72c:	vpblendd xmm1,xmm0,xmm8,0xa
  41c732:	vpsllvq xmm2,xmm0,xmm10
  41c737:	vpsrlvq xmm6,xmm1,xmm9
  41c73c:	vpor   xmm2,xmm6,xmm2
  41c740:	vpsrlvq xmm6,xmm1,xmm3
  41c745:	vpsllvq xmm0,xmm0,xmm4
  41c74a:	vpor   xmm0,xmm6,xmm0
  41c74e:	vpsrlvq xmm1,xmm1,xmm5
  41c753:	vpxor  xmm0,xmm0,xmm1
  41c757:	vpxor  xmm0,xmm0,xmm2
  41c75b:	add    edi,DWORD PTR [rsp+rbx*4-0x50]
  41c75f:	vmovd  r12d,xmm0
  41c764:	vpextrd edx,xmm0,0x2
  41c76a:	add    r12d,edi
  41c76d:	add    edx,r12d
  41c770:	mov    DWORD PTR [rsp+rbx*4-0x34],edx
  41c774:	lea    rdi,[rip+0x2bc25]        # 4483a0 <strcmp@plt+0x44c18>
  41c77b:	add    r13d,DWORD PTR [rdi+rbx*4+0xc]
  41c780:	mov    edi,DWORD PTR [rsp-0x80]
  41c784:	xor    edi,ecx
  41c786:	add    r13d,eax
  41c789:	rorx   eax,r10d,0x2
  41c78f:	rorx   ecx,r10d,0xd
  41c795:	xor    ecx,eax
  41c797:	rorx   eax,r10d,0x16
  41c79d:	add    r13d,edi
  41c7a0:	xor    eax,ecx
  41c7a2:	mov    ecx,r10d
  41c7a5:	and    ecx,r11d
  41c7a8:	mov    edi,r10d
  41c7ab:	or     edi,r11d
  41c7ae:	and    edi,r15d
  41c7b1:	or     edi,ecx
  41c7b3:	add    r13d,edx
  41c7b6:	add    edi,eax
  41c7b8:	add    esi,r13d
  41c7bb:	add    r13d,edi
  41c7be:	rorx   eax,esi,0x6
  41c7c4:	rorx   ecx,esi,0xb
  41c7ca:	xor    ecx,eax
  41c7cc:	rorx   r12d,esi,0x19
  41c7d2:	andn   eax,esi,r14d
  41c7d7:	mov    edi,r8d
  41c7da:	and    edi,esi
  41c7dc:	or     edi,eax
  41c7de:	mov    eax,DWORD PTR [rsp+rbx*4-0x6c]
  41c7e2:	mov    DWORD PTR [rsp-0x78],eax
  41c7e6:	xor    r12d,ecx
  41c7e9:	vmovd  xmm0,ebp
  41c7ed:	vpinsrd xmm0,xmm0,eax,0x2
  41c7f3:	vpblendd xmm1,xmm0,xmm8,0xa
  41c7f9:	vpsllvq xmm2,xmm0,xmm10
  41c7fe:	vpsrlvq xmm6,xmm1,xmm9
  41c803:	vpor   xmm2,xmm6,xmm2
  41c807:	vpsrlvq xmm6,xmm1,xmm3
  41c80c:	vpsllvq xmm0,xmm0,xmm4
  41c811:	vpor   xmm0,xmm6,xmm0
  41c815:	vpsrlvq xmm1,xmm1,xmm5
  41c81a:	vpxor  xmm0,xmm0,xmm1
  41c81e:	vpxor  xmm0,xmm0,xmm2
  41c822:	mov    eax,DWORD PTR [rsp-0x7c]
  41c826:	add    eax,DWORD PTR [rsp+rbx*4-0x4c]
  41c82a:	vmovd  ebp,xmm0
  41c82e:	vpextrd ecx,xmm0,0x2
  41c834:	add    ebp,eax
  41c836:	add    ecx,ebp
  41c838:	mov    DWORD PTR [rsp+rbx*4-0x30],ecx
  41c83c:	lea    rax,[rip+0x2bb5d]        # 4483a0 <strcmp@plt+0x44c18>
  41c843:	add    r9d,DWORD PTR [rax+rbx*4+0x10]
  41c848:	add    r9d,edi
  41c84b:	add    r9d,ecx
  41c84e:	mov    ebp,r9d
  41c851:	rorx   r9d,r13d,0x2
  41c857:	rorx   edi,r13d,0xd
  41c85d:	xor    edi,r9d
  41c860:	rorx   eax,r13d,0x16
  41c866:	add    ebp,r12d
  41c869:	xor    eax,edi
  41c86b:	mov    edi,r13d
  41c86e:	and    edi,r10d
  41c871:	mov    r9d,r13d
  41c874:	or     r9d,r10d
  41c877:	and    r9d,r11d
  41c87a:	or     r9d,edi
  41c87d:	add    r9d,eax
  41c880:	add    r15d,ebp
  41c883:	rorx   eax,r15d,0x6
  41c889:	rorx   edi,r15d,0xb
  41c88f:	xor    edi,eax
  41c891:	rorx   r12d,r15d,0x19
  41c897:	add    r9d,ebp
  41c89a:	andn   ebp,r15d,r8d
  41c89f:	mov    eax,esi
  41c8a1:	and    eax,r15d
  41c8a4:	or     eax,ebp
  41c8a6:	vmovd  xmm0,edx
  41c8aa:	mov    edx,DWORD PTR [rsp+rbx*4-0x68]
  41c8ae:	mov    DWORD PTR [rsp-0x80],edx
  41c8b2:	xor    r12d,edi
  41c8b5:	vpinsrd xmm0,xmm0,edx,0x2
  41c8bb:	vpblendd xmm1,xmm0,xmm8,0xa
  41c8c1:	vpsrlvq xmm2,xmm1,xmm9
  41c8c6:	vpsllvq xmm6,xmm0,xmm10
  41c8cb:	vpor   xmm2,xmm2,xmm6
  41c8cf:	vpsrlvq xmm6,xmm1,xmm3
  41c8d4:	vpsllvq xmm0,xmm0,xmm4
  41c8d9:	vpor   xmm0,xmm6,xmm0
  41c8dd:	vpsrlvq xmm1,xmm1,xmm5
  41c8e2:	vpxor  xmm0,xmm0,xmm1
  41c8e6:	vpxor  xmm0,xmm0,xmm2
  41c8ea:	mov    edx,r13d
  41c8ed:	mov    r13d,DWORD PTR [rsp-0x78]
  41c8f2:	add    r13d,DWORD PTR [rsp+rbx*4-0x48]
  41c8f7:	mov    QWORD PTR [rsp-0x50],rbx
  41c8fc:	vmovd  edi,xmm0
  41c900:	vpextrd ebp,xmm0,0x2
  41c906:	add    edi,r13d
  41c909:	mov    r13d,edx
  41c90c:	add    ebp,edi
  41c90e:	lea    rdi,[rip+0x2ba8b]        # 4483a0 <strcmp@plt+0x44c18>
  41c915:	add    r14d,DWORD PTR [rdi+rbx*4+0x14]
  41c91a:	add    r14d,eax
  41c91d:	rorx   eax,r9d,0x2
  41c923:	add    r14d,ebp
  41c926:	mov    edi,r14d
  41c929:	rorx   ebx,r9d,0xd
  41c92f:	xor    ebx,eax
  41c931:	rorx   eax,r9d,0x16
  41c937:	xor    eax,ebx
  41c939:	mov    ebx,r9d
  41c93c:	and    ebx,edx
  41c93e:	add    edi,r12d
  41c941:	mov    r14d,r9d
  41c944:	or     r14d,edx
  41c947:	and    r14d,r10d
  41c94a:	or     r14d,ebx
  41c94d:	add    r14d,eax
  41c950:	add    r11d,edi
  41c953:	add    r14d,edi
  41c956:	rorx   eax,r11d,0x6
  41c95c:	rorx   ebx,r11d,0xb
  41c962:	xor    ebx,eax
  41c964:	rorx   edi,r11d,0x19
  41c96a:	andn   r12d,r11d,esi
  41c96f:	mov    eax,r15d
  41c972:	xor    edi,ebx
  41c974:	mov    DWORD PTR [rsp-0x78],edi
  41c978:	and    eax,r11d
  41c97b:	or     eax,r12d
  41c97e:	mov    DWORD PTR [rsp-0x7c],eax
  41c982:	rorx   eax,ecx,0x11
  41c988:	rorx   ebx,ecx,0x13
  41c98e:	shr    ecx,0xa
  41c991:	mov    rdi,QWORD PTR [rsp-0x50]
  41c996:	mov    r12d,DWORD PTR [rsp+rdi*4-0x64]
  41c99b:	xor    ecx,ebx
  41c99d:	xor    ecx,eax
  41c99f:	rorx   ebx,r12d,0x12
  41c9a5:	mov    eax,r12d
  41c9a8:	shr    eax,0x3
  41c9ab:	xor    eax,ebx
  41c9ad:	add    DWORD PTR [rsp-0x74],r12d
  41c9b2:	rorx   ebx,r12d,0x7
  41c9b8:	xor    eax,ebx
  41c9ba:	mov    rbx,QWORD PTR [rsp-0x50]
  41c9bf:	mov    DWORD PTR [rsp+rbx*4-0x2c],ebp
  41c9c3:	mov    edx,DWORD PTR [rsp-0x80]
  41c9c7:	add    edx,DWORD PTR [rsp+rbx*4-0x44]
  41c9cb:	add    edx,ecx
  41c9cd:	add    edx,eax
  41c9cf:	mov    DWORD PTR [rsp+rbx*4-0x28],edx
  41c9d3:	lea    rax,[rip+0x2b9c6]        # 4483a0 <strcmp@plt+0x44c18>
  41c9da:	add    r8d,DWORD PTR [rax+rbx*4+0x18]
  41c9df:	mov    r12,rbx
  41c9e2:	add    r8d,edx
  41c9e5:	add    r8d,DWORD PTR [rsp-0x7c]
  41c9ea:	mov    eax,r8d
  41c9ed:	rorx   ecx,r14d,0x2
  41c9f3:	rorx   edx,r14d,0xd
  41c9f9:	xor    edx,ecx
  41c9fb:	rorx   ecx,r14d,0x16
  41ca01:	xor    ecx,edx
  41ca03:	mov    edx,r14d
  41ca06:	add    eax,DWORD PTR [rsp-0x78]
  41ca0a:	and    edx,r9d
  41ca0d:	mov    r8d,r14d
  41ca10:	or     r8d,r9d
  41ca13:	and    r8d,r13d
  41ca16:	or     r8d,edx
  41ca19:	add    r10d,eax
  41ca1c:	add    r8d,ecx
  41ca1f:	rorx   ecx,r10d,0x6
  41ca25:	rorx   edx,r10d,0xb
  41ca2b:	xor    edx,ecx
  41ca2d:	rorx   ecx,r10d,0x19
  41ca33:	andn   edi,r10d,r15d
  41ca38:	mov    ebx,r11d
  41ca3b:	add    r8d,eax
  41ca3e:	and    ebx,r10d
  41ca41:	or     ebx,edi
  41ca43:	rorx   eax,ebp,0x11
  41ca49:	rorx   edi,ebp,0x13
  41ca4f:	shr    ebp,0xa
  41ca52:	xor    ecx,edx
  41ca54:	xor    ebp,edi
  41ca56:	xor    ebp,eax
  41ca58:	mov    eax,DWORD PTR [rsp+r12*4-0x60]
  41ca5d:	rorx   edx,eax,0x7
  41ca63:	rorx   edi,eax,0x12
  41ca69:	shr    eax,0x3
  41ca6c:	xor    eax,edi
  41ca6e:	xor    eax,edx
  41ca70:	mov    edx,DWORD PTR [rsp-0x74]
  41ca74:	add    edx,ebp
  41ca76:	add    edx,eax
  41ca78:	lea    rax,[rip+0x2b921]        # 4483a0 <strcmp@plt+0x44c18>
  41ca7f:	add    esi,DWORD PTR [rax+r12*4+0x1c]
  41ca84:	mov    DWORD PTR [rsp+r12*4-0x24],edx
  41ca89:	add    esi,edx
  41ca8b:	add    esi,ebx
  41ca8d:	mov    eax,esi
  41ca8f:	rorx   edx,r8d,0x2
  41ca95:	rorx   esi,r8d,0xd
  41ca9b:	add    eax,ecx
  41ca9d:	xor    esi,edx
  41ca9f:	rorx   ecx,r8d,0x16
  41caa5:	xor    ecx,esi
  41caa7:	mov    edx,r8d
  41caaa:	and    edx,r14d
  41caad:	mov    esi,r8d
  41cab0:	or     esi,r14d
  41cab3:	and    esi,r9d
  41cab6:	or     esi,edx
  41cab8:	add    esi,ecx
  41caba:	add    r13d,eax
  41cabd:	add    esi,eax
  41cabf:	add    r12,0x8
  41cac3:	mov    rcx,r12
  41cac6:	cmp    r12,0x40
  41caca:	jb     41c4b0 <strcmp@plt+0x18d28>
  41cad0:	vmovd  xmm0,r13d
  41cad5:	vpinsrd xmm0,xmm0,r10d,0x1
  41cadb:	vpinsrd xmm0,xmm0,r11d,0x2
  41cae1:	vpinsrd xmm0,xmm0,r15d,0x3
  41cae7:	vmovd  xmm1,esi
  41caeb:	vpinsrd xmm1,xmm1,r8d,0x1
  41caf1:	vpinsrd xmm1,xmm1,r14d,0x2
  41caf7:	vpinsrd xmm1,xmm1,r9d,0x3
  41cafd:	vinserti128 ymm0,ymm1,xmm0,0x1
  41cb03:	mov    rax,QWORD PTR [rsp-0x48]
  41cb08:	vpaddd ymm0,ymm0,YMMWORD PTR [rax]
  41cb0c:	vmovdqu YMMWORD PTR [rax],ymm0
  41cb10:	add    rsp,0xc8
  41cb17:	pop    rbx
  41cb18:	pop    r12
  41cb1a:	pop    r13
  41cb1c:	pop    r14
  41cb1e:	pop    r15
  41cb20:	pop    rbp
  41cb21:	vzeroupper 
  41cb24:	ret    
  41cb25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cb2f:	nop
  41cb30:	push   rbp
  41cb31:	push   r15
  41cb33:	push   r14
  41cb35:	push   r13
  41cb37:	push   r12
  41cb39:	push   rbx
  41cb3a:	push   rax
  41cb3b:	test   rdx,rdx
  41cb3e:	je     41cc10 <strcmp@plt+0x19488>
  41cb44:	mov    r15,rdx
  41cb47:	mov    rbx,rsi
  41cb4a:	mov    r14,rdi
  41cb4d:	mov    eax,DWORD PTR [rdi]
  41cb4f:	mov    ebp,eax
  41cb51:	and    ebp,0x3f
  41cb54:	mov    ecx,r15d
  41cb57:	add    ecx,eax
  41cb59:	mov    DWORD PTR [rdi],ecx
  41cb5b:	jae    41cb62 <strcmp@plt+0x193da>
  41cb5d:	add    DWORD PTR [r14+0x4],0x1
  41cb62:	test   ebp,ebp
  41cb64:	je     41cb9e <strcmp@plt+0x19416>
  41cb66:	mov    r12d,0x40
  41cb6c:	sub    r12d,ebp
  41cb6f:	cmp    r12,r15
  41cb72:	ja     41cb9e <strcmp@plt+0x19416>
  41cb74:	lea    r13,[r14+0x28]
  41cb78:	lea    rdi,[r14+rbp*1]
  41cb7c:	add    rdi,0x28
  41cb80:	mov    rsi,rbx
  41cb83:	mov    rdx,r12
  41cb86:	call   403330 <memcpy@plt>
  41cb8b:	mov    rdi,r14
  41cb8e:	mov    rsi,r13
  41cb91:	call   41bfd0 <strcmp@plt+0x18848>
  41cb96:	add    rbx,r12
  41cb99:	sub    r15,r12
  41cb9c:	xor    ebp,ebp
  41cb9e:	cmp    r15,0x40
  41cba2:	jb     41cc08 <strcmp@plt+0x19480>
  41cba4:	lea    r12,[r15-0x40]
  41cba8:	mov    r13,r12
  41cbab:	and    r13,0xffffffffffffffc0
  41cbaf:	lea    rax,[rbx+r13*1]
  41cbb3:	add    rax,0x40
  41cbb7:	mov    QWORD PTR [rsp],rax
  41cbbb:	nop    DWORD PTR [rax+rax*1+0x0]
  41cbc0:	mov    rdi,r14
  41cbc3:	mov    rsi,rbx
  41cbc6:	call   41bfd0 <strcmp@plt+0x18848>
  41cbcb:	add    rbx,0x40
  41cbcf:	add    r15,0xffffffffffffffc0
  41cbd3:	cmp    r15,0x3f
  41cbd7:	ja     41cbc0 <strcmp@plt+0x19438>
  41cbd9:	sub    r12,r13
  41cbdc:	mov    r15,r12
  41cbdf:	mov    rsi,QWORD PTR [rsp]
  41cbe3:	test   r15,r15
  41cbe6:	je     41cc10 <strcmp@plt+0x19488>
  41cbe8:	mov    eax,ebp
  41cbea:	lea    rdi,[r14+rax*1]
  41cbee:	add    rdi,0x28
  41cbf2:	mov    rdx,r15
  41cbf5:	add    rsp,0x8
  41cbf9:	pop    rbx
  41cbfa:	pop    r12
  41cbfc:	pop    r13
  41cbfe:	pop    r14
  41cc00:	pop    r15
  41cc02:	pop    rbp
  41cc03:	jmp    403330 <memcpy@plt>
  41cc08:	mov    rsi,rbx
  41cc0b:	test   r15,r15
  41cc0e:	jne    41cbe8 <strcmp@plt+0x19460>
  41cc10:	add    rsp,0x8
  41cc14:	pop    rbx
  41cc15:	pop    r12
  41cc17:	pop    r13
  41cc19:	pop    r14
  41cc1b:	pop    r15
  41cc1d:	pop    rbp
  41cc1e:	ret    
  41cc1f:	nop
  41cc20:	push   rbp
  41cc21:	push   r15
  41cc23:	push   r14
  41cc25:	push   r13
  41cc27:	push   r12
  41cc29:	push   rbx
  41cc2a:	sub    rsp,0x28
  41cc2e:	mov    r14,rsi
  41cc31:	mov    r15,rdi
  41cc34:	mov    ecx,DWORD PTR [rdi]
  41cc36:	mov    eax,DWORD PTR [rdi+0x4]
  41cc39:	mov    edx,eax
  41cc3b:	shld   edx,ecx,0x3
  41cc3f:	mov    esi,eax
  41cc41:	shr    esi,0x15
  41cc44:	mov    BYTE PTR [rsp+0x8],sil
  41cc49:	mov    esi,eax
  41cc4b:	shr    esi,0xd
  41cc4e:	mov    BYTE PTR [rsp+0x9],sil
  41cc53:	mov    esi,eax
  41cc55:	shr    esi,0x5
  41cc58:	mov    BYTE PTR [rsp+0xa],sil
  41cc5d:	mov    BYTE PTR [rsp+0xb],dl
  41cc61:	mov    edx,ecx
  41cc63:	shr    edx,0x15
  41cc66:	mov    BYTE PTR [rsp+0xc],dl
  41cc6a:	mov    edx,ecx
  41cc6c:	shr    edx,0xd
  41cc6f:	mov    BYTE PTR [rsp+0xd],dl
  41cc73:	mov    edx,ecx
  41cc75:	shr    edx,0x5
  41cc78:	mov    BYTE PTR [rsp+0xe],dl
  41cc7c:	mov    edx,ecx
  41cc7e:	shl    dl,0x3
  41cc81:	mov    BYTE PTR [rsp+0xf],dl
  41cc85:	mov    r12d,ecx
  41cc88:	and    r12d,0x3f
  41cc8c:	xor    ebp,ebp
  41cc8e:	cmp    r12d,0x37
  41cc92:	seta   bpl
  41cc96:	shl    ebp,0x6
  41cc99:	or     ebp,0x38
  41cc9c:	sub    ebp,r12d
  41cc9f:	je     41cd73 <strcmp@plt+0x195eb>
  41cca5:	lea    ecx,[rcx+rbp*1]
  41cca8:	mov    DWORD PTR [r15],ecx
  41ccab:	cmp    ecx,ebp
  41ccad:	jae    41ccb6 <strcmp@plt+0x1952e>
  41ccaf:	add    eax,0x1
  41ccb2:	mov    DWORD PTR [r15+0x4],eax
  41ccb6:	lea    rsi,[rip+0x2b7e3]        # 4484a0 <strcmp@plt+0x44d18>
  41ccbd:	test   r12d,r12d
  41ccc0:	je     41cd05 <strcmp@plt+0x1957d>
  41ccc2:	mov    r13d,0x40
  41ccc8:	sub    r13d,r12d
  41cccb:	cmp    ebp,r13d
  41ccce:	jb     41cd05 <strcmp@plt+0x1957d>
  41ccd0:	lea    rbx,[r15+0x28]
  41ccd4:	lea    rdi,[r15+r12*1]
  41ccd8:	add    rdi,0x28
  41ccdc:	lea    r12,[rip+0x2b7bd]        # 4484a0 <strcmp@plt+0x44d18>
  41cce3:	mov    rsi,r12
  41cce6:	mov    rdx,r13
  41cce9:	call   403330 <memcpy@plt>
  41ccee:	mov    rdi,r15
  41ccf1:	mov    rsi,rbx
  41ccf4:	call   41bfd0 <strcmp@plt+0x18848>
  41ccf9:	mov    rsi,r12
  41ccfc:	add    rsi,r13
  41ccff:	sub    rbp,r13
  41cd02:	xor    r12d,r12d
  41cd05:	cmp    rbp,0x40
  41cd09:	jb     41cd5b <strcmp@plt+0x195d3>
  41cd0b:	lea    r13,[rbp-0x40]
  41cd0f:	mov    QWORD PTR [rsp+0x10],r13
  41cd14:	and    r13,0xffffffffffffffc0
  41cd18:	lea    rax,[r13+0x40]
  41cd1c:	mov    QWORD PTR [rsp+0x20],rax
  41cd21:	mov    QWORD PTR [rsp+0x18],rsi
  41cd26:	mov    rbx,rsi
  41cd29:	nop    DWORD PTR [rax+0x0]
  41cd30:	mov    rdi,r15
  41cd33:	mov    rsi,rbx
  41cd36:	call   41bfd0 <strcmp@plt+0x18848>
  41cd3b:	add    rbx,0x40
  41cd3f:	add    rbp,0xffffffffffffffc0
  41cd43:	cmp    rbp,0x3f
  41cd47:	ja     41cd30 <strcmp@plt+0x195a8>
  41cd49:	mov    rsi,QWORD PTR [rsp+0x18]
  41cd4e:	add    rsi,QWORD PTR [rsp+0x20]
  41cd53:	mov    rbp,QWORD PTR [rsp+0x10]
  41cd58:	sub    rbp,r13
  41cd5b:	test   rbp,rbp
  41cd5e:	je     41cd73 <strcmp@plt+0x195eb>
  41cd60:	mov    eax,r12d
  41cd63:	lea    rdi,[r15+rax*1]
  41cd67:	add    rdi,0x28
  41cd6b:	mov    rdx,rbp
  41cd6e:	call   403330 <memcpy@plt>
  41cd73:	mov    ecx,DWORD PTR [r15]
  41cd76:	mov    eax,ecx
  41cd78:	and    eax,0x3f
  41cd7b:	lea    edx,[rcx+0x8]
  41cd7e:	mov    DWORD PTR [r15],edx
  41cd81:	cmp    ecx,0xfffffff8
  41cd84:	jb     41cd8b <strcmp@plt+0x19603>
  41cd86:	add    DWORD PTR [r15+0x4],0x1
  41cd8b:	lea    r12,[rsp+0x8]
  41cd90:	mov    ebx,0x8
  41cd95:	test   eax,eax
  41cd97:	je     41ce3d <strcmp@plt+0x196b5>
  41cd9d:	mov    r13d,0x40
  41cda3:	sub    r13d,eax
  41cda6:	cmp    r13d,0x8
  41cdaa:	ja     41ce3d <strcmp@plt+0x196b5>
  41cdb0:	lea    rbx,[r15+0x28]
  41cdb4:	lea    rdi,[r15+rax*1]
  41cdb8:	add    rdi,0x28
  41cdbc:	lea    rsi,[rsp+0x8]
  41cdc1:	mov    rdx,r13
  41cdc4:	call   403330 <memcpy@plt>
  41cdc9:	mov    rdi,r15
  41cdcc:	mov    rsi,rbx
  41cdcf:	call   41bfd0 <strcmp@plt+0x18848>
  41cdd4:	lea    r12,[rsp+r13*1]
  41cdd8:	add    r12,0x8
  41cddc:	mov    ebx,0x8
  41cde1:	sub    rbx,r13
  41cde4:	cmp    rbx,0x40
  41cde8:	jb     41ce36 <strcmp@plt+0x196ae>
  41cdea:	lea    r13,[rbx-0x40]
  41cdee:	mov    QWORD PTR [rsp+0x18],r13
  41cdf3:	and    r13,0xffffffffffffffc0
  41cdf7:	lea    rax,[r13+0x40]
  41cdfb:	mov    QWORD PTR [rsp+0x10],rax
  41ce00:	mov    rbp,r12
  41ce03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce0d:	nop    DWORD PTR [rax]
  41ce10:	mov    rdi,r15
  41ce13:	mov    rsi,rbp
  41ce16:	call   41bfd0 <strcmp@plt+0x18848>
  41ce1b:	add    rbp,0x40
  41ce1f:	add    rbx,0xffffffffffffffc0
  41ce23:	cmp    rbx,0x3f
  41ce27:	ja     41ce10 <strcmp@plt+0x19688>
  41ce29:	add    r12,QWORD PTR [rsp+0x10]
  41ce2e:	mov    rbx,QWORD PTR [rsp+0x18]
  41ce33:	sub    rbx,r13
  41ce36:	xor    eax,eax
  41ce38:	test   rbx,rbx
  41ce3b:	je     41ce52 <strcmp@plt+0x196ca>
  41ce3d:	mov    eax,eax
  41ce3f:	lea    rdi,[r15+rax*1]
  41ce43:	add    rdi,0x28
  41ce47:	mov    rsi,r12
  41ce4a:	mov    rdx,rbx
  41ce4d:	call   403330 <memcpy@plt>
  41ce52:	mov    al,BYTE PTR [r15+0xb]
  41ce56:	mov    BYTE PTR [r14],al
  41ce59:	mov    al,BYTE PTR [r15+0xa]
  41ce5d:	mov    BYTE PTR [r14+0x1],al
  41ce61:	mov    al,BYTE PTR [r15+0x9]
  41ce65:	mov    BYTE PTR [r14+0x2],al
  41ce69:	mov    al,BYTE PTR [r15+0x8]
  41ce6d:	mov    BYTE PTR [r14+0x3],al
  41ce71:	mov    al,BYTE PTR [r15+0xf]
  41ce75:	mov    BYTE PTR [r14+0x4],al
  41ce79:	mov    al,BYTE PTR [r15+0xe]
  41ce7d:	mov    BYTE PTR [r14+0x5],al
  41ce81:	mov    al,BYTE PTR [r15+0xd]
  41ce85:	mov    BYTE PTR [r14+0x6],al
  41ce89:	mov    al,BYTE PTR [r15+0xc]
  41ce8d:	mov    BYTE PTR [r14+0x7],al
  41ce91:	mov    al,BYTE PTR [r15+0x13]
  41ce95:	mov    BYTE PTR [r14+0x8],al
  41ce99:	mov    al,BYTE PTR [r15+0x12]
  41ce9d:	mov    BYTE PTR [r14+0x9],al
  41cea1:	mov    al,BYTE PTR [r15+0x11]
  41cea5:	mov    BYTE PTR [r14+0xa],al
  41cea9:	mov    al,BYTE PTR [r15+0x10]
  41cead:	mov    BYTE PTR [r14+0xb],al
  41ceb1:	mov    al,BYTE PTR [r15+0x17]
  41ceb5:	mov    BYTE PTR [r14+0xc],al
  41ceb9:	mov    al,BYTE PTR [r15+0x16]
  41cebd:	mov    BYTE PTR [r14+0xd],al
  41cec1:	mov    al,BYTE PTR [r15+0x15]
  41cec5:	mov    BYTE PTR [r14+0xe],al
  41cec9:	mov    al,BYTE PTR [r15+0x14]
  41cecd:	mov    BYTE PTR [r14+0xf],al
  41ced1:	mov    al,BYTE PTR [r15+0x1b]
  41ced5:	mov    BYTE PTR [r14+0x10],al
  41ced9:	mov    al,BYTE PTR [r15+0x1a]
  41cedd:	mov    BYTE PTR [r14+0x11],al
  41cee1:	mov    al,BYTE PTR [r15+0x19]
  41cee5:	mov    BYTE PTR [r14+0x12],al
  41cee9:	mov    al,BYTE PTR [r15+0x18]
  41ceed:	mov    BYTE PTR [r14+0x13],al
  41cef1:	mov    al,BYTE PTR [r15+0x1f]
  41cef5:	mov    BYTE PTR [r14+0x14],al
  41cef9:	mov    al,BYTE PTR [r15+0x1e]
  41cefd:	mov    BYTE PTR [r14+0x15],al
  41cf01:	mov    al,BYTE PTR [r15+0x1d]
  41cf05:	mov    BYTE PTR [r14+0x16],al
  41cf09:	mov    al,BYTE PTR [r15+0x1c]
  41cf0d:	mov    BYTE PTR [r14+0x17],al
  41cf11:	mov    al,BYTE PTR [r15+0x23]
  41cf15:	mov    BYTE PTR [r14+0x18],al
  41cf19:	mov    al,BYTE PTR [r15+0x22]
  41cf1d:	mov    BYTE PTR [r14+0x19],al
  41cf21:	mov    al,BYTE PTR [r15+0x21]
  41cf25:	mov    BYTE PTR [r14+0x1a],al
  41cf29:	mov    al,BYTE PTR [r15+0x20]
  41cf2d:	mov    BYTE PTR [r14+0x1b],al
  41cf31:	cmp    DWORD PTR [r15+0x68],0x0
  41cf36:	jne    41cf58 <strcmp@plt+0x197d0>
  41cf38:	mov    al,BYTE PTR [r15+0x27]
  41cf3c:	mov    BYTE PTR [r14+0x1c],al
  41cf40:	mov    al,BYTE PTR [r15+0x26]
  41cf44:	mov    BYTE PTR [r14+0x1d],al
  41cf48:	mov    al,BYTE PTR [r15+0x25]
  41cf4c:	mov    BYTE PTR [r14+0x1e],al
  41cf50:	mov    al,BYTE PTR [r15+0x24]
  41cf54:	mov    BYTE PTR [r14+0x1f],al
  41cf58:	add    rsp,0x28
  41cf5c:	pop    rbx
  41cf5d:	pop    r12
  41cf5f:	pop    r13
  41cf61:	pop    r14
  41cf63:	pop    r15
  41cf65:	pop    rbp
  41cf66:	ret    
  41cf67:	nop    WORD PTR [rax+rax*1+0x0]
  41cf70:	push   rbp
  41cf71:	mov    rbp,rsp
  41cf74:	push   r15
  41cf76:	push   r14
  41cf78:	push   r13
  41cf7a:	push   r12
  41cf7c:	push   rbx
  41cf7d:	and    rsp,0xffffffffffffffe0
  41cf81:	sub    rsp,0xa0
  41cf88:	xor    eax,eax
  41cf8a:	test   ecx,ecx
  41cf8c:	sete   al
  41cf8f:	vmovd  xmm0,eax
  41cf93:	vpbroadcastw xmm0,xmm0
  41cf98:	vpmovzxwd ymm0,xmm0
  41cf9d:	vpslld ymm0,ymm0,0x1f
  41cfa2:	vmovaps ymm1,YMMWORD PTR [rip+0x2b356]        # 448300 <strcmp@plt+0x44b78>
  41cfaa:	vblendvps ymm0,ymm1,YMMWORD PTR [rip+0x2b32c],ymm0        # 4482e0 <strcmp@plt+0x44b58>
  41cfb4:	vxorps xmm1,xmm1,xmm1
  41cfb8:	vmovaps YMMWORD PTR [rsp+0x20],ymm1
  41cfbe:	vmovaps YMMWORD PTR [rsp],ymm1
  41cfc3:	vmovaps YMMWORD PTR [rsp+0x40],ymm1
  41cfc9:	mov    r14,rdx
  41cfcc:	mov    QWORD PTR [rsp+0x60],0x0
  41cfd5:	vmovups YMMWORD PTR [rsp+0x8],ymm0
  41cfdb:	mov    DWORD PTR [rsp+0x68],ecx
  41cfdf:	test   rsi,rsi
  41cfe2:	je     41d06b <strcmp@plt+0x198e3>
  41cfe8:	mov    rbx,rsi
  41cfeb:	mov    rax,rdi
  41cfee:	mov    DWORD PTR [rsp],ebx
  41cff1:	cmp    rsi,0x40
  41cff5:	jb     41d055 <strcmp@plt+0x198cd>
  41cff7:	mov    QWORD PTR [rsp+0x80],r14
  41cfff:	lea    r15,[rbx-0x40]
  41d003:	mov    r12,r15
  41d006:	and    r12,0xffffffffffffffc0
  41d00a:	lea    rcx,[r12+0x40]
  41d00f:	mov    QWORD PTR [rsp+0x70],rcx
  41d014:	mov    r13,rsp
  41d017:	mov    QWORD PTR [rsp+0x78],rax
  41d01c:	mov    r14,rax
  41d01f:	nop
  41d020:	mov    rdi,r13
  41d023:	mov    rsi,r14
  41d026:	vzeroupper 
  41d029:	call   41bfd0 <strcmp@plt+0x18848>
  41d02e:	add    r14,0x40
  41d032:	add    rbx,0xffffffffffffffc0
  41d036:	cmp    rbx,0x3f
  41d03a:	ja     41d020 <strcmp@plt+0x19898>
  41d03c:	sub    r15,r12
  41d03f:	mov    r14,QWORD PTR [rsp+0x80]
  41d047:	mov    rax,QWORD PTR [rsp+0x78]
  41d04c:	je     41d06b <strcmp@plt+0x198e3>
  41d04e:	add    rax,QWORD PTR [rsp+0x70]
  41d053:	jmp    41d058 <strcmp@plt+0x198d0>
  41d055:	mov    r15,rbx
  41d058:	lea    rdi,[rsp+0x28]
  41d05d:	mov    rsi,rax
  41d060:	mov    rdx,r15
  41d063:	vzeroupper 
  41d066:	call   403330 <memcpy@plt>
  41d06b:	mov    rdi,rsp
  41d06e:	mov    rsi,r14
  41d071:	vzeroupper 
  41d074:	call   41cc20 <strcmp@plt+0x19498>
  41d079:	xor    eax,eax
  41d07b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d080:	mov    BYTE PTR [rsp+rax*1],0x0
  41d084:	mov    BYTE PTR [rsp+rax*1+0x1],0x0
  41d089:	mov    BYTE PTR [rsp+rax*1+0x2],0x0
  41d08e:	mov    BYTE PTR [rsp+rax*1+0x3],0x0
  41d093:	mov    BYTE PTR [rsp+rax*1+0x4],0x0
  41d098:	mov    BYTE PTR [rsp+rax*1+0x5],0x0
  41d09d:	mov    BYTE PTR [rsp+rax*1+0x6],0x0
  41d0a2:	mov    BYTE PTR [rsp+rax*1+0x7],0x0
  41d0a7:	mov    BYTE PTR [rsp+rax*1+0x8],0x0
  41d0ac:	mov    BYTE PTR [rsp+rax*1+0x9],0x0
  41d0b1:	mov    BYTE PTR [rsp+rax*1+0xa],0x0
  41d0b6:	mov    BYTE PTR [rsp+rax*1+0xb],0x0
  41d0bb:	mov    BYTE PTR [rsp+rax*1+0xc],0x0
  41d0c0:	mov    BYTE PTR [rsp+rax*1+0xd],0x0
  41d0c5:	mov    BYTE PTR [rsp+rax*1+0xe],0x0
  41d0ca:	mov    BYTE PTR [rsp+rax*1+0xf],0x0
  41d0cf:	mov    BYTE PTR [rsp+rax*1+0x10],0x0
  41d0d4:	mov    BYTE PTR [rsp+rax*1+0x11],0x0
  41d0d9:	add    rax,0x12
  41d0dd:	cmp    rax,0x6c
  41d0e1:	jne    41d080 <strcmp@plt+0x198f8>
  41d0e3:	lea    rsp,[rbp-0x28]
  41d0e7:	pop    rbx
  41d0e8:	pop    r12
  41d0ea:	pop    r13
  41d0ec:	pop    r14
  41d0ee:	pop    r15
  41d0f0:	pop    rbp
  41d0f1:	ret    
  41d0f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d0fc:	nop    DWORD PTR [rax+0x0]
  41d100:	jmp    41a5e0 <strcmp@plt+0x16e58>
  41d105:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d10f:	nop
  41d110:	jmp    41b970 <strcmp@plt+0x181e8>
  41d115:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d11f:	nop
  41d120:	jmp    41ba60 <strcmp@plt+0x182d8>
  41d125:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d12f:	nop
  41d130:	push   rbx
  41d131:	mov    edi,0x1
  41d136:	mov    esi,0x5c
  41d13b:	call   4032d0 <calloc@plt>
  41d140:	mov    rbx,rax
  41d143:	test   rax,rax
  41d146:	je     41d150 <strcmp@plt+0x199c8>
  41d148:	mov    rdi,rbx
  41d14b:	call   41a510 <strcmp@plt+0x16d88>
  41d150:	mov    rax,rbx
  41d153:	pop    rbx
  41d154:	ret    
  41d155:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d15f:	nop
  41d160:	push   rbx
  41d161:	mov    rbx,rdi
  41d164:	call   41a530 <strcmp@plt+0x16da8>
  41d169:	mov    rdi,rbx
  41d16c:	pop    rbx
  41d16d:	jmp    403780 <free@plt>
  41d172:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d17c:	nop    DWORD PTR [rax+0x0]
  41d180:	jmp    41a5c0 <strcmp@plt+0x16e38>
  41d185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d18f:	nop
  41d190:	jmp    41a610 <strcmp@plt+0x16e88>
  41d195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d19f:	nop
  41d1a0:	mov    esi,0x1
  41d1a5:	jmp    41bf90 <strcmp@plt+0x18808>
  41d1aa:	nop    WORD PTR [rax+rax*1+0x0]
  41d1b0:	jmp    41cb30 <strcmp@plt+0x193a8>
  41d1b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d1bf:	nop
  41d1c0:	jmp    41cc20 <strcmp@plt+0x19498>
  41d1c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d1cf:	nop
  41d1d0:	mov    ecx,0x1
  41d1d5:	jmp    41cf70 <strcmp@plt+0x197e8>
  41d1da:	nop    WORD PTR [rax+rax*1+0x0]
  41d1e0:	push   rbx
  41d1e1:	mov    edi,0x1
  41d1e6:	mov    esi,0x6c
  41d1eb:	call   4032d0 <calloc@plt>
  41d1f0:	mov    rbx,rax
  41d1f3:	test   rax,rax
  41d1f6:	je     41d200 <strcmp@plt+0x19a78>
  41d1f8:	mov    rdi,rbx
  41d1fb:	call   41bec0 <strcmp@plt+0x18738>
  41d200:	mov    rax,rbx
  41d203:	pop    rbx
  41d204:	ret    
  41d205:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d20f:	nop
  41d210:	push   rbx
  41d211:	mov    rbx,rdi
  41d214:	call   41bee0 <strcmp@plt+0x18758>
  41d219:	mov    rdi,rbx
  41d21c:	pop    rbx
  41d21d:	jmp    403780 <free@plt>
  41d222:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d22c:	nop    DWORD PTR [rax+0x0]
  41d230:	jmp    41bf60 <strcmp@plt+0x187d8>
  41d235:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d23f:	nop
  41d240:	jmp    41bfd0 <strcmp@plt+0x18848>
  41d245:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d24f:	nop
  41d250:	xor    esi,esi
  41d252:	jmp    41bf90 <strcmp@plt+0x18808>
  41d257:	nop    WORD PTR [rax+rax*1+0x0]
  41d260:	xor    ecx,ecx
  41d262:	jmp    41cf70 <strcmp@plt+0x197e8>
  41d267:	nop    WORD PTR [rax+rax*1+0x0]
  41d270:	lea    rax,[rdi+0x8]
  41d274:	test   rdi,rdi
  41d277:	cmove  rax,rdi
  41d27b:	ret    
  41d27c:	nop    DWORD PTR [rax+0x0]
  41d280:	push   rbp
  41d281:	push   r15
  41d283:	push   r14
  41d285:	push   rbx
  41d286:	push   rax
  41d287:	mov    ebp,edx
  41d289:	mov    r15,rsi
  41d28c:	mov    r14,rdi
  41d28f:	mov    ebx,edx
  41d291:	shr    rbx,0x3
  41d295:	mov    rdx,rbx
  41d298:	call   403200 <memcmp@plt>
  41d29d:	mov    ecx,eax
  41d29f:	xor    eax,eax
  41d2a1:	test   ecx,ecx
  41d2a3:	jne    41d2d4 <strcmp@plt+0x19b4c>
  41d2a5:	and    ebp,0x7
  41d2a8:	je     41d2cf <strcmp@plt+0x19b47>
  41d2aa:	mov    eax,0x8
  41d2af:	sub    eax,ebp
  41d2b1:	mov    cl,BYTE PTR [r15+rbx*1]
  41d2b5:	xor    cl,BYTE PTR [r14+rbx*1]
  41d2b9:	movzx  ecx,cl
  41d2bc:	shrx   ecx,ecx,eax
  41d2c1:	shlx   ecx,ecx,eax
  41d2c6:	xor    eax,eax
  41d2c8:	test   ecx,ecx
  41d2ca:	sete   al
  41d2cd:	jmp    41d2d4 <strcmp@plt+0x19b4c>
  41d2cf:	mov    eax,0x1
  41d2d4:	add    rsp,0x8
  41d2d8:	pop    rbx
  41d2d9:	pop    r14
  41d2db:	pop    r15
  41d2dd:	pop    rbp
  41d2de:	ret    
  41d2df:	nop
  41d2e0:	push   r15
  41d2e2:	push   r14
  41d2e4:	push   rbx
  41d2e5:	sub    rsp,0x10
  41d2e9:	mov    r14,rdx
  41d2ec:	mov    r15,rsi
  41d2ef:	cmp    edi,0xa
  41d2f2:	je     41d327 <strcmp@plt+0x19b9f>
  41d2f4:	mov    eax,0xffffffff
  41d2f9:	cmp    edi,0x2
  41d2fc:	jne    41d48f <strcmp@plt+0x19d07>
  41d302:	mov    DWORD PTR [rsp+0xc],0x0
  41d30a:	movsx  rbx,BYTE PTR [r15]
  41d30e:	call   403420 <__ctype_b_loc@plt>
  41d313:	mov    rcx,QWORD PTR [rax]
  41d316:	test   BYTE PTR [rcx+rbx*2+0x1],0x8
  41d31b:	jne    41d340 <strcmp@plt+0x19bb8>
  41d31d:	mov    eax,0xffffffff
  41d322:	jmp    41d48f <strcmp@plt+0x19d07>
  41d327:	mov    edi,0xa
  41d32c:	mov    rsi,r15
  41d32f:	mov    rdx,r14
  41d332:	add    rsp,0x10
  41d336:	pop    rbx
  41d337:	pop    r14
  41d339:	pop    r15
  41d33b:	jmp    403750 <inet_pton@plt>
  41d340:	add    r15,0x4
  41d344:	xor    eax,eax
  41d346:	xor    edx,edx
  41d348:	nop    DWORD PTR [rax+rax*1+0x0]
  41d350:	movsx  esi,bl
  41d353:	lea    edx,[rdx+rdx*4]
  41d356:	lea    edi,[rsi+rdx*2]
  41d359:	cmp    edi,0x12f
  41d35f:	jg     41d48f <strcmp@plt+0x19d07>
  41d365:	lea    edx,[rsi+rdx*2]
  41d368:	add    edx,0xffffffd0
  41d36b:	movsx  rbx,BYTE PTR [r15-0x3]
  41d370:	test   rbx,rbx
  41d373:	je     41d47f <strcmp@plt+0x19cf7>
  41d379:	add    r15,0x1
  41d37d:	test   BYTE PTR [rcx+rbx*2+0x1],0x8
  41d382:	jne    41d350 <strcmp@plt+0x19bc8>
  41d384:	mov    BYTE PTR [rsp+0xc],dl
  41d388:	cmp    bl,0x2e
  41d38b:	jne    41d48f <strcmp@plt+0x19d07>
  41d391:	movsx  rsi,BYTE PTR [r15-0x3]
  41d396:	test   BYTE PTR [rcx+rsi*2+0x1],0x8
  41d39b:	je     41d31d <strcmp@plt+0x19b95>
  41d39d:	xor    eax,eax
  41d39f:	xor    edx,edx
  41d3a1:	movsx  esi,sil
  41d3a5:	lea    edx,[rdx+rdx*4]
  41d3a8:	lea    edi,[rsi+rdx*2]
  41d3ab:	cmp    edi,0x12f
  41d3b1:	jg     41d48f <strcmp@plt+0x19d07>
  41d3b7:	lea    edx,[rsi+rdx*2]
  41d3ba:	add    edx,0xffffffd0
  41d3bd:	movsx  rsi,BYTE PTR [r15-0x2]
  41d3c2:	test   rsi,rsi
  41d3c5:	je     41d47a <strcmp@plt+0x19cf2>
  41d3cb:	add    r15,0x1
  41d3cf:	test   BYTE PTR [rcx+rsi*2+0x1],0x8
  41d3d4:	jne    41d3a1 <strcmp@plt+0x19c19>
  41d3d6:	mov    BYTE PTR [rsp+0xd],dl
  41d3da:	cmp    sil,0x2e
  41d3de:	jne    41d48f <strcmp@plt+0x19d07>
  41d3e4:	movsx  rsi,BYTE PTR [r15-0x2]
  41d3e9:	test   BYTE PTR [rcx+rsi*2+0x1],0x8
  41d3ee:	je     41d31d <strcmp@plt+0x19b95>
  41d3f4:	xor    eax,eax
  41d3f6:	xor    edx,edx
  41d3f8:	movsx  esi,sil
  41d3fc:	lea    edx,[rdx+rdx*4]
  41d3ff:	lea    edi,[rsi+rdx*2]
  41d402:	cmp    edi,0x12f
  41d408:	jg     41d48f <strcmp@plt+0x19d07>
  41d40e:	lea    edx,[rsi+rdx*2]
  41d411:	add    edx,0xffffffd0
  41d414:	movsx  rsi,BYTE PTR [r15-0x1]
  41d419:	test   rsi,rsi
  41d41c:	je     41d499 <strcmp@plt+0x19d11>
  41d41e:	add    r15,0x1
  41d422:	test   BYTE PTR [rcx+rsi*2+0x1],0x8
  41d427:	jne    41d3f8 <strcmp@plt+0x19c70>
  41d429:	mov    BYTE PTR [rsp+0xe],dl
  41d42d:	cmp    sil,0x2e
  41d431:	jne    41d48f <strcmp@plt+0x19d07>
  41d433:	movsx  rsi,BYTE PTR [r15-0x1]
  41d438:	test   BYTE PTR [rcx+rsi*2+0x1],0x8
  41d43d:	mov    eax,0xffffffff
  41d442:	je     41d48f <strcmp@plt+0x19d07>
  41d444:	xor    eax,eax
  41d446:	xor    edx,edx
  41d448:	movsx  esi,sil
  41d44c:	lea    edx,[rdx+rdx*4]
  41d44f:	lea    edi,[rsi+rdx*2]
  41d452:	cmp    edi,0x12f
  41d458:	jg     41d48f <strcmp@plt+0x19d07>
  41d45a:	lea    edx,[rsi+rdx*2]
  41d45d:	add    edx,0xffffffd0
  41d460:	movsx  rsi,BYTE PTR [r15]
  41d464:	test   rsi,rsi
  41d467:	je     41d4a0 <strcmp@plt+0x19d18>
  41d469:	add    r15,0x1
  41d46d:	test   BYTE PTR [rcx+rsi*2+0x1],0x8
  41d472:	jne    41d448 <strcmp@plt+0x19cc0>
  41d474:	mov    BYTE PTR [rsp+0xf],dl
  41d478:	jmp    41d48f <strcmp@plt+0x19d07>
  41d47a:	mov    eax,0x1
  41d47f:	mov    BYTE PTR [rsp+rax*1+0xc],dl
  41d483:	mov    eax,DWORD PTR [rsp+0xc]
  41d487:	mov    DWORD PTR [r14],eax
  41d48a:	mov    eax,0x1
  41d48f:	add    rsp,0x10
  41d493:	pop    rbx
  41d494:	pop    r14
  41d496:	pop    r15
  41d498:	ret    
  41d499:	mov    eax,0x2
  41d49e:	jmp    41d47f <strcmp@plt+0x19cf7>
  41d4a0:	mov    eax,0x3
  41d4a5:	jmp    41d47f <strcmp@plt+0x19cf7>
  41d4a7:	nop    WORD PTR [rax+rax*1+0x0]
  41d4b0:	push   rbp
  41d4b1:	push   r14
  41d4b3:	push   rbx
  41d4b4:	sub    rsp,0x10
  41d4b8:	test   rdi,rdi
  41d4bb:	je     41d537 <strcmp@plt+0x19daf>
  41d4bd:	mov    rbx,rdi
  41d4c0:	cmp    DWORD PTR [rdi+0x4],0x0
  41d4c4:	js     41d5ab <strcmp@plt+0x19e23>
  41d4ca:	mov    ebp,edx
  41d4cc:	mov    r14,rsi
  41d4cf:	test   rsi,rsi
  41d4d2:	jne    41d4f4 <strcmp@plt+0x19d6c>
  41d4d4:	mov    eax,DWORD PTR [rip+0x4cb06]        # 469fe0 <strcmp@plt+0x66858>
  41d4da:	lea    rcx,[rip+0x4c7af]        # 469c90 <strcmp@plt+0x66508>
  41d4e1:	lea    edx,[rax+0x1]
  41d4e4:	mov    DWORD PTR [rip+0x4caf6],edx        # 469fe0 <strcmp@plt+0x66858>
  41d4ea:	and    eax,0xf
  41d4ed:	imul   r14,rax,0x35
  41d4f1:	add    r14,rcx
  41d4f4:	movzx  eax,WORD PTR [rbx]
  41d4f7:	cmp    eax,0xa
  41d4fa:	je     41d540 <strcmp@plt+0x19db8>
  41d4fc:	movzx  eax,ax
  41d4ff:	cmp    eax,0x2
  41d502:	jne    41d589 <strcmp@plt+0x19e01>
  41d508:	movzx  eax,WORD PTR [rbx+0x2]
  41d50c:	cmp    eax,0x21
  41d50f:	jae    41d5ca <strcmp@plt+0x19e42>
  41d515:	movzx  edx,BYTE PTR [rbx+0x8]
  41d519:	movzx  ecx,BYTE PTR [rbx+0x9]
  41d51d:	movzx  r8d,BYTE PTR [rbx+0xa]
  41d522:	movzx  r9d,BYTE PTR [rbx+0xb]
  41d527:	test   ebp,ebp
  41d529:	je     41d58e <strcmp@plt+0x19e06>
  41d52b:	mov    DWORD PTR [rsp],eax
  41d52e:	lea    rsi,[rip+0x2b03c]        # 448571 <strcmp@plt+0x44de9>
  41d535:	jmp    41d595 <strcmp@plt+0x19e0d>
  41d537:	lea    r14,[rip+0x2afa2]        # 4484e0 <strcmp@plt+0x44d58>
  41d53e:	jmp    41d59f <strcmp@plt+0x19e17>
  41d540:	lea    rsi,[rbx+0x8]
  41d544:	mov    edi,0xa
  41d549:	mov    ecx,0x30
  41d54e:	mov    rdx,r14
  41d551:	call   4033f0 <inet_ntop@plt>
  41d556:	test   ebp,ebp
  41d558:	je     41d59f <strcmp@plt+0x19e17>
  41d55a:	test   rax,rax
  41d55d:	je     41d59f <strcmp@plt+0x19e17>
  41d55f:	movzx  ebx,WORD PTR [rbx+0x2]
  41d563:	cmp    ebx,0x81
  41d569:	jae    41d5e9 <strcmp@plt+0x19e61>
  41d56b:	mov    rdi,r14
  41d56e:	call   4031e0 <strlen@plt>
  41d573:	lea    rdi,[rax+r14*1]
  41d577:	lea    rsi,[rip+0x2d261]        # 44a7df <strcmp@plt+0x47057>
  41d57e:	xor    eax,eax
  41d580:	mov    edx,ebx
  41d582:	call   4030b0 <sprintf@plt>
  41d587:	jmp    41d59f <strcmp@plt+0x19e17>
  41d589:	xor    r14d,r14d
  41d58c:	jmp    41d59f <strcmp@plt+0x19e17>
  41d58e:	lea    rsi,[rip+0x2afeb]        # 448580 <strcmp@plt+0x44df8>
  41d595:	xor    eax,eax
  41d597:	mov    rdi,r14
  41d59a:	call   4030b0 <sprintf@plt>
  41d59f:	mov    rax,r14
  41d5a2:	add    rsp,0x10
  41d5a6:	pop    rbx
  41d5a7:	pop    r14
  41d5a9:	pop    rbp
  41d5aa:	ret    
  41d5ab:	lea    rdi,[rip+0x2af35]        # 4484e7 <strcmp@plt+0x44d5f>
  41d5b2:	lea    rsi,[rip+0x2af45]        # 4484fe <strcmp@plt+0x44d76>
  41d5b9:	lea    rcx,[rip+0x2af58]        # 448518 <strcmp@plt+0x44d90>
  41d5c0:	mov    edx,0x71
  41d5c5:	call   4032b0 <__assert_fail@plt>
  41d5ca:	lea    rdi,[rip+0x2af73]        # 448544 <strcmp@plt+0x44dbc>
  41d5d1:	lea    rsi,[rip+0x2af26]        # 4484fe <strcmp@plt+0x44d76>
  41d5d8:	lea    rcx,[rip+0x2af39]        # 448518 <strcmp@plt+0x44d90>
  41d5df:	mov    edx,0x8b
  41d5e4:	call   4032b0 <__assert_fail@plt>
  41d5e9:	lea    rdi,[rip+0x2af9c]        # 44858c <strcmp@plt+0x44e04>
  41d5f0:	lea    rsi,[rip+0x2af07]        # 4484fe <strcmp@plt+0x44d76>
  41d5f7:	lea    rcx,[rip+0x2af1a]        # 448518 <strcmp@plt+0x44d90>
  41d5fe:	mov    edx,0x9b
  41d603:	call   4032b0 <__assert_fail@plt>
  41d608:	nop    DWORD PTR [rax+rax*1+0x0]
  41d610:	mov    edx,0x1
  41d615:	jmp    41d4b0 <strcmp@plt+0x19d28>
  41d61a:	nop    WORD PTR [rax+rax*1+0x0]
  41d620:	xor    esi,esi
  41d622:	mov    edx,0x1
  41d627:	jmp    41d4b0 <strcmp@plt+0x19d28>
  41d62c:	nop    DWORD PTR [rax+0x0]
  41d630:	push   rbp
  41d631:	push   r15
  41d633:	push   r14
  41d635:	push   rbx
  41d636:	push   rax
  41d637:	mov    rbx,rcx
  41d63a:	mov    r14d,edx
  41d63d:	mov    r15,rsi
  41d640:	mov    ebp,edi
  41d642:	xor    eax,eax
  41d644:	test   rcx,rcx
  41d647:	je     41d660 <strcmp@plt+0x19ed8>
  41d649:	cmp    ebp,0xa
  41d64c:	je     41d68c <strcmp@plt+0x19f04>
  41d64e:	cmp    ebp,0x2
  41d651:	jne    41d6ae <strcmp@plt+0x19f26>
  41d653:	mov    ecx,DWORD PTR [r15]
  41d656:	mov    DWORD PTR [rbx+0x8],ecx
  41d659:	mov    ecx,0x20
  41d65e:	jmp    41d69b <strcmp@plt+0x19f13>
  41d660:	mov    edi,0x18
  41d665:	call   4320b0 <strcmp@plt+0x2e928>
  41d66a:	test   rax,rax
  41d66d:	je     41d6ba <strcmp@plt+0x19f32>
  41d66f:	mov    rbx,rax
  41d672:	vxorps xmm0,xmm0,xmm0
  41d676:	vmovups XMMWORD PTR [rax],xmm0
  41d67a:	mov    QWORD PTR [rax+0x10],0x0
  41d682:	mov    eax,0x1
  41d687:	cmp    ebp,0xa
  41d68a:	jne    41d64e <strcmp@plt+0x19ec6>
  41d68c:	vmovups xmm0,XMMWORD PTR [r15]
  41d691:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  41d696:	mov    ecx,0x80
  41d69b:	test   r14d,r14d
  41d69e:	cmovns ecx,r14d
  41d6a2:	mov    WORD PTR [rbx+0x2],cx
  41d6a6:	mov    WORD PTR [rbx],bp
  41d6a9:	mov    DWORD PTR [rbx+0x4],eax
  41d6ac:	jmp    41d6cf <strcmp@plt+0x19f47>
  41d6ae:	mov    rdi,rbx
  41d6b1:	call   403780 <free@plt>
  41d6b6:	xor    ebx,ebx
  41d6b8:	jmp    41d6cf <strcmp@plt+0x19f47>
  41d6ba:	lea    rsi,[rip+0x2aef9]        # 4485ba <strcmp@plt+0x44e32>
  41d6c1:	xor    ebx,ebx
  41d6c3:	mov    edi,0x18
  41d6c8:	xor    eax,eax
  41d6ca:	call   403070 <syslog@plt>
  41d6cf:	mov    rax,rbx
  41d6d2:	add    rsp,0x8
  41d6d6:	pop    rbx
  41d6d7:	pop    r14
  41d6d9:	pop    r15
  41d6db:	pop    rbp
  41d6dc:	ret    
  41d6dd:	nop    DWORD PTR [rax]
  41d6e0:	push   rbp
  41d6e1:	push   r15
  41d6e3:	push   r14
  41d6e5:	push   rbx
  41d6e6:	push   rax
  41d6e7:	mov    r14d,edx
  41d6ea:	mov    r15,rsi
  41d6ed:	mov    ebp,edi
  41d6ef:	mov    edi,0x18
  41d6f4:	call   4320b0 <strcmp@plt+0x2e928>
  41d6f9:	test   rax,rax
  41d6fc:	je     41d728 <strcmp@plt+0x19fa0>
  41d6fe:	mov    rbx,rax
  41d701:	vxorps xmm0,xmm0,xmm0
  41d705:	vmovups XMMWORD PTR [rax],xmm0
  41d709:	mov    QWORD PTR [rax+0x10],0x0
  41d711:	cmp    ebp,0xa
  41d714:	je     41d73f <strcmp@plt+0x19fb7>
  41d716:	cmp    ebp,0x2
  41d719:	jne    41d765 <strcmp@plt+0x19fdd>
  41d71b:	mov    eax,DWORD PTR [r15]
  41d71e:	mov    DWORD PTR [rbx+0x8],eax
  41d721:	mov    eax,0x20
  41d726:	jmp    41d74e <strcmp@plt+0x19fc6>
  41d728:	lea    rsi,[rip+0x2ae8b]        # 4485ba <strcmp@plt+0x44e32>
  41d72f:	xor    ebx,ebx
  41d731:	mov    edi,0x18
  41d736:	xor    eax,eax
  41d738:	call   403070 <syslog@plt>
  41d73d:	jmp    41d76f <strcmp@plt+0x19fe7>
  41d73f:	vmovups xmm0,XMMWORD PTR [r15]
  41d744:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  41d749:	mov    eax,0x80
  41d74e:	test   r14d,r14d
  41d751:	cmovns eax,r14d
  41d755:	mov    WORD PTR [rbx+0x2],ax
  41d759:	mov    WORD PTR [rbx],bp
  41d75c:	mov    DWORD PTR [rbx+0x4],0x1
  41d763:	jmp    41d76f <strcmp@plt+0x19fe7>
  41d765:	mov    rdi,rbx
  41d768:	call   403780 <free@plt>
  41d76d:	xor    ebx,ebx
  41d76f:	mov    rax,rbx
  41d772:	add    rsp,0x8
  41d776:	pop    rbx
  41d777:	pop    r14
  41d779:	pop    r15
  41d77b:	pop    rbp
  41d77c:	ret    
  41d77d:	nop    DWORD PTR [rax]
  41d780:	push   rbp
  41d781:	push   r15
  41d783:	push   r14
  41d785:	push   r13
  41d787:	push   r12
  41d789:	push   rbx
  41d78a:	sub    rsp,0x418
  41d791:	test   rsi,rsi
  41d794:	je     41da04 <strcmp@plt+0x1a27c>
  41d79a:	mov    rbx,rsi
  41d79d:	mov    r14d,edi
  41d7a0:	cmp    edi,0x2
  41d7a3:	je     41d7b7 <strcmp@plt+0x1a02f>
  41d7a5:	cmp    r14d,0xa
  41d7a9:	jne    41da1b <strcmp@plt+0x1a293>
  41d7af:	mov    r13d,0x80
  41d7b5:	jmp    41d7bd <strcmp@plt+0x1a035>
  41d7b7:	mov    r13d,0x20
  41d7bd:	mov    esi,0x2f
  41d7c2:	mov    rdi,rbx
  41d7c5:	call   403190 <strchr@plt>
  41d7ca:	test   rax,rax
  41d7cd:	je     41d817 <strcmp@plt+0x1a08f>
  41d7cf:	mov    rbp,rax
  41d7d2:	lea    rdi,[rax+0x1]
  41d7d6:	xor    esi,esi
  41d7d8:	mov    edx,0xa
  41d7dd:	call   403570 <strtol@plt>
  41d7e2:	sub    rbp,rbx
  41d7e5:	cmp    rbp,0x400
  41d7ec:	jge    41da9c <strcmp@plt+0x1a314>
  41d7f2:	mov    r15,rax
  41d7f5:	lea    r12,[rsp+0x10]
  41d7fa:	mov    rdi,r12
  41d7fd:	mov    rsi,rbx
  41d800:	mov    rdx,rbp
  41d803:	call   403330 <memcpy@plt>
  41d808:	mov    BYTE PTR [rsp+rbp*1+0x10],0x0
  41d80d:	cmp    r15,r13
  41d810:	cmovbe r13,r15
  41d814:	mov    rbx,r12
  41d817:	cmp    r14d,0xa
  41d81b:	je     41d9a9 <strcmp@plt+0x1a221>
  41d821:	cmp    r14d,0x2
  41d825:	jne    41da04 <strcmp@plt+0x1a27c>
  41d82b:	mov    DWORD PTR [rsp],0x0
  41d832:	movsx  rbp,BYTE PTR [rbx]
  41d836:	call   403420 <__ctype_b_loc@plt>
  41d83b:	mov    rax,QWORD PTR [rax]
  41d83e:	test   BYTE PTR [rax+rbp*2+0x1],0x8
  41d843:	je     41da04 <strcmp@plt+0x1a27c>
  41d849:	add    rbx,0x4
  41d84d:	xor    ecx,ecx
  41d84f:	xor    edx,edx
  41d851:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d85b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d860:	movsx  esi,bpl
  41d864:	lea    edx,[rdx+rdx*4]
  41d867:	lea    edi,[rsi+rdx*2]
  41d86a:	cmp    edi,0x12f
  41d870:	jg     41da04 <strcmp@plt+0x1a27c>
  41d876:	lea    edx,[rsi+rdx*2]
  41d879:	add    edx,0xffffffd0
  41d87c:	movsx  rbp,BYTE PTR [rbx-0x3]
  41d881:	test   rbp,rbp
  41d884:	je     41da3a <strcmp@plt+0x1a2b2>
  41d88a:	add    rbx,0x1
  41d88e:	test   BYTE PTR [rax+rbp*2+0x1],0x8
  41d893:	jne    41d860 <strcmp@plt+0x1a0d8>
  41d895:	mov    BYTE PTR [rsp],dl
  41d898:	cmp    bpl,0x2e
  41d89c:	jne    41da04 <strcmp@plt+0x1a27c>
  41d8a2:	movsx  rsi,BYTE PTR [rbx-0x3]
  41d8a7:	test   BYTE PTR [rax+rsi*2+0x1],0x8
  41d8ac:	je     41da04 <strcmp@plt+0x1a27c>
  41d8b2:	xor    edx,edx
  41d8b4:	mov    ecx,0x1
  41d8b9:	movsx  esi,sil
  41d8bd:	lea    edx,[rdx+rdx*4]
  41d8c0:	lea    edi,[rsi+rdx*2]
  41d8c3:	cmp    edi,0x12f
  41d8c9:	jg     41da04 <strcmp@plt+0x1a27c>
  41d8cf:	lea    edx,[rsi+rdx*2]
  41d8d2:	add    edx,0xffffffd0
  41d8d5:	movsx  rsi,BYTE PTR [rbx-0x2]
  41d8da:	test   rsi,rsi
  41d8dd:	je     41da3a <strcmp@plt+0x1a2b2>
  41d8e3:	add    rbx,0x1
  41d8e7:	test   BYTE PTR [rax+rsi*2+0x1],0x8
  41d8ec:	jne    41d8b9 <strcmp@plt+0x1a131>
  41d8ee:	mov    BYTE PTR [rsp+0x1],dl
  41d8f2:	cmp    sil,0x2e
  41d8f6:	jne    41da04 <strcmp@plt+0x1a27c>
  41d8fc:	movsx  rsi,BYTE PTR [rbx-0x2]
  41d901:	test   BYTE PTR [rax+rsi*2+0x1],0x8
  41d906:	je     41da04 <strcmp@plt+0x1a27c>
  41d90c:	xor    edx,edx
  41d90e:	mov    ecx,0x2
  41d913:	movsx  esi,sil
  41d917:	lea    edx,[rdx+rdx*4]
  41d91a:	lea    edi,[rsi+rdx*2]
  41d91d:	cmp    edi,0x12f
  41d923:	jg     41da04 <strcmp@plt+0x1a27c>
  41d929:	lea    edx,[rsi+rdx*2]
  41d92c:	add    edx,0xffffffd0
  41d92f:	movsx  rsi,BYTE PTR [rbx-0x1]
  41d934:	test   rsi,rsi
  41d937:	je     41da3a <strcmp@plt+0x1a2b2>
  41d93d:	add    rbx,0x1
  41d941:	test   BYTE PTR [rax+rsi*2+0x1],0x8
  41d946:	jne    41d913 <strcmp@plt+0x1a18b>
  41d948:	mov    BYTE PTR [rsp+0x2],dl
  41d94c:	cmp    sil,0x2e
  41d950:	jne    41da04 <strcmp@plt+0x1a27c>
  41d956:	movsx  rsi,BYTE PTR [rbx-0x1]
  41d95b:	test   BYTE PTR [rax+rsi*2+0x1],0x8
  41d960:	je     41da04 <strcmp@plt+0x1a27c>
  41d966:	xor    edx,edx
  41d968:	mov    ecx,0x3
  41d96d:	movsx  esi,sil
  41d971:	lea    edx,[rdx+rdx*4]
  41d974:	lea    edi,[rsi+rdx*2]
  41d977:	cmp    edi,0x12f
  41d97d:	jg     41da04 <strcmp@plt+0x1a27c>
  41d983:	lea    edx,[rsi+rdx*2]
  41d986:	add    edx,0xffffffd0
  41d989:	movsx  rsi,BYTE PTR [rbx]
  41d98d:	test   rsi,rsi
  41d990:	je     41da3a <strcmp@plt+0x1a2b2>
  41d996:	add    rbx,0x1
  41d99a:	test   BYTE PTR [rax+rsi*2+0x1],0x8
  41d99f:	jne    41d96d <strcmp@plt+0x1a1e5>
  41d9a1:	mov    BYTE PTR [rsp+0x3],dl
  41d9a5:	xor    ebx,ebx
  41d9a7:	jmp    41da06 <strcmp@plt+0x1a27e>
  41d9a9:	mov    rdx,rsp
  41d9ac:	mov    edi,0xa
  41d9b1:	mov    rsi,rbx
  41d9b4:	call   403750 <inet_pton@plt>
  41d9b9:	test   eax,eax
  41d9bb:	jle    41da04 <strcmp@plt+0x1a27c>
  41d9bd:	mov    edi,0x18
  41d9c2:	call   4320b0 <strcmp@plt+0x2e928>
  41d9c7:	test   rax,rax
  41d9ca:	je     41da82 <strcmp@plt+0x1a2fa>
  41d9d0:	mov    rbx,rax
  41d9d3:	vxorps xmm0,xmm0,xmm0
  41d9d7:	vmovups XMMWORD PTR [rax],xmm0
  41d9db:	mov    QWORD PTR [rax+0x10],0x0
  41d9e3:	vmovups xmm0,XMMWORD PTR [rsp]
  41d9e8:	vmovups XMMWORD PTR [rax+0x8],xmm0
  41d9ed:	test   r13d,r13d
  41d9f0:	mov    eax,0x80
  41d9f5:	cmovns eax,r13d
  41d9f9:	mov    WORD PTR [rbx+0x2],ax
  41d9fd:	mov    WORD PTR [rbx],0xa
  41da02:	jmp    41da79 <strcmp@plt+0x1a2f1>
  41da04:	xor    ebx,ebx
  41da06:	mov    rax,rbx
  41da09:	add    rsp,0x418
  41da10:	pop    rbx
  41da11:	pop    r12
  41da13:	pop    r13
  41da15:	pop    r14
  41da17:	pop    r15
  41da19:	pop    rbp
  41da1a:	ret    
  41da1b:	mov    rax,QWORD PTR [rip+0x4658e]        # 463fb0 <strcmp@plt+0x60828>
  41da22:	mov    rdi,QWORD PTR [rax]
  41da25:	lea    rsi,[rip+0x2abb5]        # 4485e1 <strcmp@plt+0x44e59>
  41da2c:	xor    ebx,ebx
  41da2e:	xor    eax,eax
  41da30:	mov    edx,r14d
  41da33:	call   403590 <fprintf@plt>
  41da38:	jmp    41da06 <strcmp@plt+0x1a27e>
  41da3a:	mov    BYTE PTR [rsp+rcx*1],dl
  41da3d:	mov    ebp,DWORD PTR [rsp]
  41da40:	mov    edi,0x18
  41da45:	call   4320b0 <strcmp@plt+0x2e928>
  41da4a:	test   rax,rax
  41da4d:	je     41da82 <strcmp@plt+0x1a2fa>
  41da4f:	mov    rbx,rax
  41da52:	mov    DWORD PTR [rax+0x14],0x0
  41da59:	mov    QWORD PTR [rax+0xc],0x0
  41da61:	mov    DWORD PTR [rax+0x8],ebp
  41da64:	test   r13d,r13d
  41da67:	mov    eax,0x20
  41da6c:	cmovns eax,r13d
  41da70:	mov    WORD PTR [rbx+0x2],ax
  41da74:	mov    WORD PTR [rbx],0x2
  41da79:	mov    DWORD PTR [rbx+0x4],0x1
  41da80:	jmp    41da06 <strcmp@plt+0x1a27e>
  41da82:	lea    rsi,[rip+0x2ab31]        # 4485ba <strcmp@plt+0x44e32>
  41da89:	xor    ebx,ebx
  41da8b:	mov    edi,0x18
  41da90:	xor    eax,eax
  41da92:	call   403070 <syslog@plt>
  41da97:	jmp    41da06 <strcmp@plt+0x1a27e>
  41da9c:	lea    rdi,[rip+0x2ab50]        # 4485f3 <strcmp@plt+0x44e6b>
  41daa3:	lea    rsi,[rip+0x2aa54]        # 4484fe <strcmp@plt+0x44d76>
  41daaa:	lea    rcx,[rip+0x2ab58]        # 448609 <strcmp@plt+0x44e81>
  41dab1:	mov    edx,0xfe
  41dab6:	call   4032b0 <__assert_fail@plt>
  41dabb:	nop    DWORD PTR [rax+rax*1+0x0]
  41dac0:	push   rbp
  41dac1:	push   r14
  41dac3:	push   rbx
  41dac4:	test   rdi,rdi
  41dac7:	je     41db5a <strcmp@plt+0x1a3d2>
  41dacd:	mov    rbx,rdi
  41dad0:	mov    eax,DWORD PTR [rdi+0x4]
  41dad3:	test   eax,eax
  41dad5:	je     41dadf <strcmp@plt+0x1a357>
  41dad7:	add    eax,0x1
  41dada:	mov    DWORD PTR [rbx+0x4],eax
  41dadd:	jmp    41db5c <strcmp@plt+0x1a3d4>
  41dadf:	movzx  ebp,WORD PTR [rbx]
  41dae2:	movzx  r14d,WORD PTR [rbx+0x2]
  41dae7:	mov    edi,0x18
  41daec:	call   4320b0 <strcmp@plt+0x2e928>
  41daf1:	test   rax,rax
  41daf4:	je     41db1e <strcmp@plt+0x1a396>
  41daf6:	add    rbx,0x8
  41dafa:	vxorps xmm0,xmm0,xmm0
  41dafe:	vmovups XMMWORD PTR [rax],xmm0
  41db02:	mov    QWORD PTR [rax+0x10],0x0
  41db0a:	movzx  ecx,bp
  41db0d:	cmp    ecx,0xa
  41db10:	je     41db35 <strcmp@plt+0x1a3ad>
  41db12:	cmp    ecx,0x2
  41db15:	jne    41db52 <strcmp@plt+0x1a3ca>
  41db17:	mov    ecx,DWORD PTR [rbx]
  41db19:	mov    DWORD PTR [rax+0x8],ecx
  41db1c:	jmp    41db3e <strcmp@plt+0x1a3b6>
  41db1e:	lea    rsi,[rip+0x2aa95]        # 4485ba <strcmp@plt+0x44e32>
  41db25:	xor    ebx,ebx
  41db27:	mov    edi,0x18
  41db2c:	xor    eax,eax
  41db2e:	call   403070 <syslog@plt>
  41db33:	jmp    41db5c <strcmp@plt+0x1a3d4>
  41db35:	vmovups xmm0,XMMWORD PTR [rbx]
  41db39:	vmovups XMMWORD PTR [rax+0x8],xmm0
  41db3e:	mov    WORD PTR [rax+0x2],r14w
  41db43:	mov    WORD PTR [rax],bp
  41db46:	mov    DWORD PTR [rax+0x4],0x1
  41db4d:	mov    rbx,rax
  41db50:	jmp    41db5c <strcmp@plt+0x1a3d4>
  41db52:	mov    rdi,rax
  41db55:	call   403780 <free@plt>
  41db5a:	xor    ebx,ebx
  41db5c:	mov    rax,rbx
  41db5f:	pop    rbx
  41db60:	pop    r14
  41db62:	pop    rbp
  41db63:	ret    
  41db64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41db6e:	xchg   ax,ax
  41db70:	test   rdi,rdi
  41db73:	je     41db8c <strcmp@plt+0x1a404>
  41db75:	mov    eax,DWORD PTR [rdi+0x4]
  41db78:	test   eax,eax
  41db7a:	jle    41db8d <strcmp@plt+0x1a405>
  41db7c:	lea    ecx,[rax-0x1]
  41db7f:	mov    DWORD PTR [rdi+0x4],ecx
  41db82:	cmp    eax,0x1
  41db85:	jne    41db8c <strcmp@plt+0x1a404>
  41db87:	jmp    403780 <free@plt>
  41db8c:	ret    
  41db8d:	push   rax
  41db8e:	lea    rdi,[rip+0x2aa98]        # 44862d <strcmp@plt+0x44ea5>
  41db95:	lea    rsi,[rip+0x2a962]        # 4484fe <strcmp@plt+0x44d76>
  41db9c:	lea    rcx,[rip+0x2aaa0]        # 448643 <strcmp@plt+0x44ebb>
  41dba3:	mov    edx,0x12d
  41dba8:	call   4032b0 <__assert_fail@plt>
  41dbad:	nop    DWORD PTR [rax]
  41dbb0:	push   rbx
  41dbb1:	mov    ebx,edi
  41dbb3:	mov    edi,0x1
  41dbb8:	mov    esi,0x10
  41dbbd:	call   432020 <strcmp@plt+0x2e898>
  41dbc2:	mov    DWORD PTR [rax+0x8],ebx
  41dbc5:	mov    QWORD PTR [rax],0x0
  41dbcc:	mov    DWORD PTR [rax+0xc],0x0
  41dbd3:	cmp    ebx,0x81
  41dbd9:	jae    41dbe4 <strcmp@plt+0x1a45c>
  41dbdb:	add    DWORD PTR [rip+0x4c402],0x1        # 469fe4 <strcmp@plt+0x6685c>
  41dbe2:	pop    rbx
  41dbe3:	ret    
  41dbe4:	lea    rdi,[rip+0x2aa76]        # 448661 <strcmp@plt+0x44ed9>
  41dbeb:	lea    rsi,[rip+0x2a90c]        # 4484fe <strcmp@plt+0x44d76>
  41dbf2:	lea    rcx,[rip+0x2aa84]        # 44867d <strcmp@plt+0x44ef5>
  41dbf9:	mov    edx,0x147
  41dbfe:	call   4032b0 <__assert_fail@plt>
  41dc03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dc0d:	nop    DWORD PTR [rax]
  41dc10:	push   rbp
  41dc11:	push   r15
  41dc13:	push   r14
  41dc15:	push   r13
  41dc17:	push   r12
  41dc19:	push   rbx
  41dc1a:	sub    rsp,0x408
  41dc21:	test   rdi,rdi
  41dc24:	je     41dd77 <strcmp@plt+0x1a5ef>
  41dc2a:	mov    r15,rdi
  41dc2d:	mov    rbx,QWORD PTR [rdi]
  41dc30:	test   rbx,rbx
  41dc33:	je     41dd12 <strcmp@plt+0x1a58a>
  41dc39:	mov    r14,rsi
  41dc3c:	xor    r12d,r12d
  41dc3f:	nop
  41dc40:	mov    rdi,QWORD PTR [rbx+0x8]
  41dc44:	mov    r13,QWORD PTR [rbx+0x10]
  41dc48:	mov    rbp,QWORD PTR [rbx+0x18]
  41dc4c:	test   rdi,rdi
  41dc4f:	je     41dc90 <strcmp@plt+0x1a508>
  41dc51:	mov    eax,DWORD PTR [rdi+0x4]
  41dc54:	test   eax,eax
  41dc56:	jle    41dd39 <strcmp@plt+0x1a5b1>
  41dc5c:	lea    ecx,[rax-0x1]
  41dc5f:	mov    DWORD PTR [rdi+0x4],ecx
  41dc62:	cmp    eax,0x1
  41dc65:	jne    41dc6c <strcmp@plt+0x1a4e4>
  41dc67:	call   403780 <free@plt>
  41dc6c:	test   r14,r14
  41dc6f:	je     41dc9b <strcmp@plt+0x1a513>
  41dc71:	mov    rdi,QWORD PTR [rbx+0x28]
  41dc75:	test   rdi,rdi
  41dc78:	je     41dc9b <strcmp@plt+0x1a513>
  41dc7a:	xor    eax,eax
  41dc7c:	call   r14
  41dc7f:	jmp    41dc9b <strcmp@plt+0x1a513>
  41dc81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dc8b:	nop    DWORD PTR [rax+rax*1+0x0]
  41dc90:	cmp    QWORD PTR [rbx+0x28],0x0
  41dc95:	jne    41dd58 <strcmp@plt+0x1a5d0>
  41dc9b:	mov    rdi,rbx
  41dc9e:	call   403780 <free@plt>
  41dca3:	mov    eax,DWORD PTR [r15+0xc]
  41dca7:	add    eax,0xffffffff
  41dcaa:	mov    DWORD PTR [r15+0xc],eax
  41dcae:	test   r13,r13
  41dcb1:	je     41dcd0 <strcmp@plt+0x1a548>
  41dcb3:	test   rbp,rbp
  41dcb6:	je     41dcf0 <strcmp@plt+0x1a568>
  41dcb8:	mov    QWORD PTR [rsp+r12*8],rbp
  41dcbc:	add    r12,0x1
  41dcc0:	jmp    41dcf0 <strcmp@plt+0x1a568>
  41dcc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dccc:	nop    DWORD PTR [rax+0x0]
  41dcd0:	test   rbp,rbp
  41dcd3:	je     41dcda <strcmp@plt+0x1a552>
  41dcd5:	mov    r13,rbp
  41dcd8:	jmp    41dcf0 <strcmp@plt+0x1a568>
  41dcda:	test   r12,r12
  41dcdd:	je     41dcfc <strcmp@plt+0x1a574>
  41dcdf:	mov    r13,QWORD PTR [rsp+r12*8-0x8]
  41dce4:	add    r12,0xffffffffffffffff
  41dce8:	nop    DWORD PTR [rax+rax*1+0x0]
  41dcf0:	mov    rbx,r13
  41dcf3:	test   r13,r13
  41dcf6:	jne    41dc40 <strcmp@plt+0x1a4b8>
  41dcfc:	test   eax,eax
  41dcfe:	jne    41dd1a <strcmp@plt+0x1a592>
  41dd00:	add    rsp,0x408
  41dd07:	pop    rbx
  41dd08:	pop    r12
  41dd0a:	pop    r13
  41dd0c:	pop    r14
  41dd0e:	pop    r15
  41dd10:	pop    rbp
  41dd11:	ret    
  41dd12:	mov    eax,DWORD PTR [r15+0xc]
  41dd16:	test   eax,eax
  41dd18:	je     41dd00 <strcmp@plt+0x1a578>
  41dd1a:	lea    rdi,[rip+0x2a9cc]        # 4486ed <strcmp@plt+0x44f65>
  41dd21:	lea    rsi,[rip+0x2a7d6]        # 4484fe <strcmp@plt+0x44d76>
  41dd28:	lea    rcx,[rip+0x2a97a]        # 4486a9 <strcmp@plt+0x44f21>
  41dd2f:	mov    edx,0x177
  41dd34:	call   4032b0 <__assert_fail@plt>
  41dd39:	lea    rdi,[rip+0x2a8ed]        # 44862d <strcmp@plt+0x44ea5>
  41dd40:	lea    rsi,[rip+0x2a7b7]        # 4484fe <strcmp@plt+0x44d76>
  41dd47:	lea    rcx,[rip+0x2a8f5]        # 448643 <strcmp@plt+0x44ebb>
  41dd4e:	mov    edx,0x12d
  41dd53:	call   4032b0 <__assert_fail@plt>
  41dd58:	lea    rdi,[rip+0x2a97c]        # 4486db <strcmp@plt+0x44f53>
  41dd5f:	lea    rsi,[rip+0x2a798]        # 4484fe <strcmp@plt+0x44d76>
  41dd66:	lea    rcx,[rip+0x2a93c]        # 4486a9 <strcmp@plt+0x44f21>
  41dd6d:	mov    edx,0x164
  41dd72:	call   4032b0 <__assert_fail@plt>
  41dd77:	lea    rdi,[rip+0x2a922]        # 4486a0 <strcmp@plt+0x44f18>
  41dd7e:	lea    rsi,[rip+0x2a779]        # 4484fe <strcmp@plt+0x44d76>
  41dd85:	lea    rcx,[rip+0x2a91d]        # 4486a9 <strcmp@plt+0x44f21>
  41dd8c:	mov    edx,0x154
  41dd91:	call   4032b0 <__assert_fail@plt>
  41dd96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dda0:	push   rbx
  41dda1:	mov    rbx,rdi
  41dda4:	call   41dc10 <strcmp@plt+0x1a488>
  41dda9:	mov    rdi,rbx
  41ddac:	call   403780 <free@plt>
  41ddb1:	add    DWORD PTR [rip+0x4c22c],0xffffffff        # 469fe4 <strcmp@plt+0x6685c>
  41ddb8:	pop    rbx
  41ddb9:	ret    
  41ddba:	nop    WORD PTR [rax+rax*1+0x0]
  41ddc0:	push   r15
  41ddc2:	push   r14
  41ddc4:	push   rbx
  41ddc5:	sub    rsp,0x410
  41ddcc:	test   rsi,rsi
  41ddcf:	je     41de45 <strcmp@plt+0x1a6bd>
  41ddd1:	mov    rbx,QWORD PTR [rdi]
  41ddd4:	test   rbx,rbx
  41ddd7:	je     41de38 <strcmp@plt+0x1a6b0>
  41ddd9:	mov    r14,rsi
  41dddc:	xor    r15d,r15d
  41dddf:	nop
  41dde0:	mov    rdi,QWORD PTR [rbx+0x8]
  41dde4:	test   rdi,rdi
  41dde7:	je     41ddf2 <strcmp@plt+0x1a66a>
  41dde9:	mov    rsi,QWORD PTR [rbx+0x28]
  41dded:	xor    eax,eax
  41ddef:	call   r14
  41ddf2:	mov    rax,QWORD PTR [rbx+0x10]
  41ddf6:	mov    rcx,QWORD PTR [rbx+0x18]
  41ddfa:	test   rax,rax
  41ddfd:	je     41de10 <strcmp@plt+0x1a688>
  41ddff:	test   rcx,rcx
  41de02:	je     41de30 <strcmp@plt+0x1a6a8>
  41de04:	mov    QWORD PTR [rsp+r15*8],rcx
  41de08:	add    r15,0x1
  41de0c:	jmp    41de30 <strcmp@plt+0x1a6a8>
  41de0e:	xchg   ax,ax
  41de10:	test   rcx,rcx
  41de13:	je     41de1a <strcmp@plt+0x1a692>
  41de15:	mov    rax,rcx
  41de18:	jmp    41de30 <strcmp@plt+0x1a6a8>
  41de1a:	test   r15,r15
  41de1d:	je     41de38 <strcmp@plt+0x1a6b0>
  41de1f:	mov    rax,QWORD PTR [rsp+r15*8-0x8]
  41de24:	add    r15,0xffffffffffffffff
  41de28:	nop    DWORD PTR [rax+rax*1+0x0]
  41de30:	mov    rbx,rax
  41de33:	test   rax,rax
  41de36:	jne    41dde0 <strcmp@plt+0x1a658>
  41de38:	add    rsp,0x410
  41de3f:	pop    rbx
  41de40:	pop    r14
  41de42:	pop    r15
  41de44:	ret    
  41de45:	lea    rdi,[rip+0x2a8c0]        # 44870c <strcmp@plt+0x44f84>
  41de4c:	lea    rsi,[rip+0x2a6ab]        # 4484fe <strcmp@plt+0x44d76>
  41de53:	lea    rcx,[rip+0x2a8b7]        # 448711 <strcmp@plt+0x44f89>
  41de5a:	mov    edx,0x18d
  41de5f:	call   4032b0 <__assert_fail@plt>
  41de64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41de6e:	xchg   ax,ax
  41de70:	push   r15
  41de72:	push   r14
  41de74:	push   rbx
  41de75:	test   rsi,rsi
  41de78:	je     41dece <strcmp@plt+0x1a746>
  41de7a:	mov    r14,rsi
  41de7d:	mov    rbx,rdi
  41de80:	mov    rdi,QWORD PTR [rdi+0x10]
  41de84:	test   rdi,rdi
  41de87:	je     41de96 <strcmp@plt+0x1a70e>
  41de89:	mov    rsi,r14
  41de8c:	call   41de70 <strcmp@plt+0x1a6e8>
  41de91:	mov    r15,rax
  41de94:	jmp    41de99 <strcmp@plt+0x1a711>
  41de96:	xor    r15d,r15d
  41de99:	mov    rdi,QWORD PTR [rbx+0x8]
  41de9d:	test   rdi,rdi
  41dea0:	je     41deaf <strcmp@plt+0x1a727>
  41dea2:	mov    rsi,QWORD PTR [rbx+0x28]
  41dea6:	xor    eax,eax
  41dea8:	call   r14
  41deab:	add    r15,0x1
  41deaf:	mov    rdi,QWORD PTR [rbx+0x18]
  41deb3:	test   rdi,rdi
  41deb6:	je     41dec5 <strcmp@plt+0x1a73d>
  41deb8:	mov    rsi,r14
  41debb:	call   41de70 <strcmp@plt+0x1a6e8>
  41dec0:	add    rax,r15
  41dec3:	jmp    41dec8 <strcmp@plt+0x1a740>
  41dec5:	mov    rax,r15
  41dec8:	pop    rbx
  41dec9:	pop    r14
  41decb:	pop    r15
  41decd:	ret    
  41dece:	lea    rdi,[rip+0x2a837]        # 44870c <strcmp@plt+0x44f84>
  41ded5:	lea    rsi,[rip+0x2a622]        # 4484fe <strcmp@plt+0x44d76>
  41dedc:	lea    rcx,[rip+0x2a862]        # 448745 <strcmp@plt+0x44fbd>
  41dee3:	mov    edx,0x198
  41dee8:	call   4032b0 <__assert_fail@plt>
  41deed:	nop    DWORD PTR [rax]
  41def0:	push   rbp
  41def1:	push   r15
  41def3:	push   r14
  41def5:	push   r12
  41def7:	push   rbx
  41def8:	test   rdi,rdi
  41defb:	je     41dfce <strcmp@plt+0x1a846>
  41df01:	mov    r14,rsi
  41df04:	test   rsi,rsi
  41df07:	je     41dfed <strcmp@plt+0x1a865>
  41df0d:	movzx  ebp,WORD PTR [r14+0x2]
  41df12:	cmp    DWORD PTR [rdi+0x8],ebp
  41df15:	jb     41e00c <strcmp@plt+0x1a884>
  41df1b:	mov    rbx,QWORD PTR [rdi]
  41df1e:	test   rbx,rbx
  41df21:	je     41df99 <strcmp@plt+0x1a811>
  41df23:	mov    r15d,ebp
  41df26:	add    r14,0x8
  41df2a:	mov    eax,0x80
  41df2f:	nop
  41df30:	mov    ecx,DWORD PTR [rbx]
  41df32:	cmp    ecx,ebp
  41df34:	jae    41df5e <strcmp@plt+0x1a7d6>
  41df36:	mov    rdx,rcx
  41df39:	shr    rdx,0x3
  41df3d:	movzx  edx,BYTE PTR [r14+rdx*1]
  41df42:	and    cl,0x7
  41df45:	shrx   ecx,eax,ecx
  41df4a:	xor    esi,esi
  41df4c:	test   ecx,edx
  41df4e:	setne  sil
  41df52:	mov    rbx,QWORD PTR [rbx+rsi*8+0x10]
  41df57:	test   rbx,rbx
  41df5a:	jne    41df30 <strcmp@plt+0x1a7a8>
  41df5c:	jmp    41df99 <strcmp@plt+0x1a811>
  41df5e:	cmp    ecx,ebp
  41df60:	ja     41df99 <strcmp@plt+0x1a811>
  41df62:	mov    r12,QWORD PTR [rbx+0x8]
  41df66:	test   r12,r12
  41df69:	je     41df99 <strcmp@plt+0x1a811>
  41df6b:	cmp    ecx,ebp
  41df6d:	jne    41e02b <strcmp@plt+0x1a8a3>
  41df73:	cmp    bp,WORD PTR [r12+0x2]
  41df79:	jne    41e04a <strcmp@plt+0x1a8c2>
  41df7f:	add    r12,0x8
  41df83:	shr    r15,0x3
  41df87:	mov    rdi,r12
  41df8a:	mov    rsi,r14
  41df8d:	mov    rdx,r15
  41df90:	call   403200 <memcmp@plt>
  41df95:	test   eax,eax
  41df97:	je     41dfa7 <strcmp@plt+0x1a81f>
  41df99:	xor    ebx,ebx
  41df9b:	mov    rax,rbx
  41df9e:	pop    rbx
  41df9f:	pop    r12
  41dfa1:	pop    r14
  41dfa3:	pop    r15
  41dfa5:	pop    rbp
  41dfa6:	ret    
  41dfa7:	and    ebp,0x7
  41dfaa:	je     41df9b <strcmp@plt+0x1a813>
  41dfac:	mov    eax,0x8
  41dfb1:	sub    eax,ebp
  41dfb3:	mov    cl,BYTE PTR [r14+r15*1]
  41dfb7:	xor    cl,BYTE PTR [r12+r15*1]
  41dfbb:	movzx  ecx,cl
  41dfbe:	shrx   ecx,ecx,eax
  41dfc3:	shlx   eax,ecx,eax
  41dfc8:	test   eax,eax
  41dfca:	jne    41df99 <strcmp@plt+0x1a811>
  41dfcc:	jmp    41df9b <strcmp@plt+0x1a813>
  41dfce:	lea    rdi,[rip+0x2a6cb]        # 4486a0 <strcmp@plt+0x44f18>
  41dfd5:	lea    rsi,[rip+0x2a522]        # 4484fe <strcmp@plt+0x44d76>
  41dfdc:	lea    rcx,[rip+0x2a79d]        # 448780 <strcmp@plt+0x44ff8>
  41dfe3:	mov    edx,0x1b1
  41dfe8:	call   4032b0 <__assert_fail@plt>
  41dfed:	lea    rdi,[rip+0x317fb]        # 44f7ef <strcmp@plt+0x4c067>
  41dff4:	lea    rsi,[rip+0x2a503]        # 4484fe <strcmp@plt+0x44d76>
  41dffb:	lea    rcx,[rip+0x2a77e]        # 448780 <strcmp@plt+0x44ff8>
  41e002:	mov    edx,0x1b2
  41e007:	call   4032b0 <__assert_fail@plt>
  41e00c:	lea    rdi,[rip+0x2a7b3]        # 4487c6 <strcmp@plt+0x4503e>
  41e013:	lea    rsi,[rip+0x2a4e4]        # 4484fe <strcmp@plt+0x44d76>
  41e01a:	lea    rcx,[rip+0x2a75f]        # 448780 <strcmp@plt+0x44ff8>
  41e021:	mov    edx,0x1b3
  41e026:	call   4032b0 <__assert_fail@plt>
  41e02b:	lea    rdi,[rip+0x2a7b8]        # 4487ea <strcmp@plt+0x45062>
  41e032:	lea    rsi,[rip+0x2a4c5]        # 4484fe <strcmp@plt+0x44d76>
  41e039:	lea    rcx,[rip+0x2a740]        # 448780 <strcmp@plt+0x44ff8>
  41e040:	mov    edx,0x1e1
  41e045:	call   4032b0 <__assert_fail@plt>
  41e04a:	lea    rdi,[rip+0x2a7ad]        # 4487fe <strcmp@plt+0x45076>
  41e051:	lea    rsi,[rip+0x2a4a6]        # 4484fe <strcmp@plt+0x44d76>
  41e058:	lea    rcx,[rip+0x2a721]        # 448780 <strcmp@plt+0x44ff8>
  41e05f:	mov    edx,0x1e2
  41e064:	call   4032b0 <__assert_fail@plt>
  41e069:	nop    DWORD PTR [rax+0x0]
  41e070:	push   rbp
  41e071:	push   r15
  41e073:	push   r14
  41e075:	push   r13
  41e077:	push   r12
  41e079:	push   rbx
  41e07a:	sub    rsp,0x418
  41e081:	test   rdi,rdi
  41e084:	je     41e1c5 <strcmp@plt+0x1aa3d>
  41e08a:	mov    r14,rsi
  41e08d:	test   rsi,rsi
  41e090:	je     41e1e4 <strcmp@plt+0x1aa5c>
  41e096:	movzx  ebx,WORD PTR [r14+0x2]
  41e09b:	cmp    DWORD PTR [rdi+0x8],ebx
  41e09e:	jb     41e203 <strcmp@plt+0x1aa7b>
  41e0a4:	mov    rax,QWORD PTR [rdi]
  41e0a7:	xor    r15d,r15d
  41e0aa:	test   rax,rax
  41e0ad:	je     41e1b0 <strcmp@plt+0x1aa28>
  41e0b3:	add    r14,0x8
  41e0b7:	mov    ecx,0x80
  41e0bc:	nop    DWORD PTR [rax+0x0]
  41e0c0:	mov    esi,DWORD PTR [rax]
  41e0c2:	cmp    esi,ebx
  41e0c4:	jae    41e102 <strcmp@plt+0x1a97a>
  41e0c6:	cmp    QWORD PTR [rax+0x8],0x0
  41e0cb:	je     41e0d9 <strcmp@plt+0x1a951>
  41e0cd:	movsxd rdi,r15d
  41e0d0:	add    r15d,0x1
  41e0d4:	mov    QWORD PTR [rsp+rdi*8+0x10],rax
  41e0d9:	mov    rdi,rsi
  41e0dc:	shr    rdi,0x3
  41e0e0:	movzx  edi,BYTE PTR [r14+rdi*1]
  41e0e5:	and    sil,0x7
  41e0e9:	shrx   esi,ecx,esi
  41e0ee:	xor    ebp,ebp
  41e0f0:	test   esi,edi
  41e0f2:	setne  bpl
  41e0f6:	mov    rax,QWORD PTR [rax+rbp*8+0x10]
  41e0fb:	test   rax,rax
  41e0fe:	jne    41e0c0 <strcmp@plt+0x1a938>
  41e100:	jmp    41e119 <strcmp@plt+0x1a991>
  41e102:	test   edx,edx
  41e104:	je     41e119 <strcmp@plt+0x1a991>
  41e106:	cmp    QWORD PTR [rax+0x8],0x0
  41e10b:	je     41e119 <strcmp@plt+0x1a991>
  41e10d:	movsxd rcx,r15d
  41e110:	add    r15d,0x1
  41e114:	mov    QWORD PTR [rsp+rcx*8+0x10],rax
  41e119:	test   r15d,r15d
  41e11c:	jle    41e1ad <strcmp@plt+0x1aa25>
  41e122:	mov    DWORD PTR [rsp+0xc],ebx
  41e126:	movsxd rbp,r15d
  41e129:	add    rbp,0x1
  41e12d:	nop    DWORD PTR [rax]
  41e130:	mov    r15,QWORD PTR [rsp+rbp*8]
  41e134:	mov    rax,QWORD PTR [r15+0x8]
  41e138:	lea    r12,[rax+0x8]
  41e13c:	test   rax,rax
  41e13f:	cmove  r12,rax
  41e143:	movzx  r13d,WORD PTR [rax+0x2]
  41e148:	mov    rbx,r13
  41e14b:	shr    rbx,0x3
  41e14f:	mov    rdi,r12
  41e152:	mov    rsi,r14
  41e155:	mov    rdx,rbx
  41e158:	call   403200 <memcmp@plt>
  41e15d:	test   eax,eax
  41e15f:	je     41e170 <strcmp@plt+0x1a9e8>
  41e161:	add    rbp,0xffffffffffffffff
  41e165:	cmp    rbp,0x1
  41e169:	jg     41e130 <strcmp@plt+0x1a9a8>
  41e16b:	jmp    41e1ad <strcmp@plt+0x1aa25>
  41e16d:	nop    DWORD PTR [rax]
  41e170:	mov    eax,r13d
  41e173:	and    eax,0x7
  41e176:	je     41e1a3 <strcmp@plt+0x1aa1b>
  41e178:	cmp    r13w,WORD PTR [rsp+0xc]
  41e17e:	ja     41e161 <strcmp@plt+0x1a9d9>
  41e180:	mov    ecx,0x8
  41e185:	sub    ecx,eax
  41e187:	movzx  eax,BYTE PTR [r14+rbx*1]
  41e18c:	xor    al,BYTE PTR [r12+rbx*1]
  41e190:	movzx  eax,al
  41e193:	shrx   eax,eax,ecx
  41e198:	shlx   eax,eax,ecx
  41e19d:	test   eax,eax
  41e19f:	jne    41e161 <strcmp@plt+0x1a9d9>
  41e1a1:	jmp    41e1b0 <strcmp@plt+0x1aa28>
  41e1a3:	cmp    r13w,WORD PTR [rsp+0xc]
  41e1a9:	ja     41e161 <strcmp@plt+0x1a9d9>
  41e1ab:	jmp    41e1b0 <strcmp@plt+0x1aa28>
  41e1ad:	xor    r15d,r15d
  41e1b0:	mov    rax,r15
  41e1b3:	add    rsp,0x418
  41e1ba:	pop    rbx
  41e1bb:	pop    r12
  41e1bd:	pop    r13
  41e1bf:	pop    r14
  41e1c1:	pop    r15
  41e1c3:	pop    rbp
  41e1c4:	ret    
  41e1c5:	lea    rdi,[rip+0x2a4d4]        # 4486a0 <strcmp@plt+0x44f18>
  41e1cc:	lea    rsi,[rip+0x2a32b]        # 4484fe <strcmp@plt+0x44d76>
  41e1d3:	lea    rcx,[rip+0x2a646]        # 448820 <strcmp@plt+0x45098>
  41e1da:	mov    edx,0x1f9
  41e1df:	call   4032b0 <__assert_fail@plt>
  41e1e4:	lea    rdi,[rip+0x31604]        # 44f7ef <strcmp@plt+0x4c067>
  41e1eb:	lea    rsi,[rip+0x2a30c]        # 4484fe <strcmp@plt+0x44d76>
  41e1f2:	lea    rcx,[rip+0x2a627]        # 448820 <strcmp@plt+0x45098>
  41e1f9:	mov    edx,0x1fa
  41e1fe:	call   4032b0 <__assert_fail@plt>
  41e203:	lea    rdi,[rip+0x2a5bc]        # 4487c6 <strcmp@plt+0x4503e>
  41e20a:	lea    rsi,[rip+0x2a2ed]        # 4484fe <strcmp@plt+0x44d76>
  41e211:	lea    rcx,[rip+0x2a608]        # 448820 <strcmp@plt+0x45098>
  41e218:	mov    edx,0x1fb
  41e21d:	call   4032b0 <__assert_fail@plt>
  41e222:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e22c:	nop    DWORD PTR [rax+0x0]
  41e230:	mov    edx,0x1
  41e235:	jmp    41e070 <strcmp@plt+0x1a8e8>
  41e23a:	nop    WORD PTR [rax+rax*1+0x0]
  41e240:	push   rbp
  41e241:	push   r15
  41e243:	push   r14
  41e245:	push   r13
  41e247:	push   r12
  41e249:	push   rbx
  41e24a:	sub    rsp,0x28
  41e24e:	test   rdi,rdi
  41e251:	je     41e874 <strcmp@plt+0x1b0ec>
  41e257:	mov    r15,rsi
  41e25a:	test   rsi,rsi
  41e25d:	je     41e893 <strcmp@plt+0x1b10b>
  41e263:	mov    r14,rdi
  41e266:	movzx  r9d,WORD PTR [r15+0x2]
  41e26b:	movzx  ebp,r9w
  41e26f:	mov    edx,DWORD PTR [rdi+0x8]
  41e272:	cmp    edx,ebp
  41e274:	jb     41e8b2 <strcmp@plt+0x1b12a>
  41e27a:	mov    rdi,QWORD PTR [r14]
  41e27d:	test   rdi,rdi
  41e280:	je     41e38b <strcmp@plt+0x1ac03>
  41e286:	lea    r13,[r15+0x8]
  41e28a:	mov    esi,0x80
  41e28f:	nop
  41e290:	mov    rax,rdi
  41e293:	mov    ecx,DWORD PTR [rdi]
  41e295:	cmp    ecx,ebp
  41e297:	jb     41e2a0 <strcmp@plt+0x1ab18>
  41e299:	cmp    QWORD PTR [rax+0x8],0x0
  41e29e:	jne    41e2d9 <strcmp@plt+0x1ab51>
  41e2a0:	cmp    ecx,edx
  41e2a2:	jae    41e2d0 <strcmp@plt+0x1ab48>
  41e2a4:	mov    rdi,rcx
  41e2a7:	shr    rdi,0x3
  41e2ab:	movzx  edi,BYTE PTR [r13+rdi*1+0x0]
  41e2b1:	mov    ebx,ecx
  41e2b3:	and    bl,0x7
  41e2b6:	shrx   ebx,esi,ebx
  41e2bb:	test   ebx,edi
  41e2bd:	je     41e2d0 <strcmp@plt+0x1ab48>
  41e2bf:	mov    rdi,QWORD PTR [rax+0x18]
  41e2c3:	test   rdi,rdi
  41e2c6:	jne    41e290 <strcmp@plt+0x1ab08>
  41e2c8:	jmp    41e2d9 <strcmp@plt+0x1ab51>
  41e2ca:	nop    WORD PTR [rax+rax*1+0x0]
  41e2d0:	mov    rdi,QWORD PTR [rax+0x10]
  41e2d4:	test   rdi,rdi
  41e2d7:	jne    41e290 <strcmp@plt+0x1ab08>
  41e2d9:	mov    rsi,QWORD PTR [rax+0x8]
  41e2dd:	test   rsi,rsi
  41e2e0:	je     41e8d1 <strcmp@plt+0x1b149>
  41e2e6:	cmp    ecx,ebp
  41e2e8:	cmovae ecx,ebp
  41e2eb:	test   ecx,ecx
  41e2ed:	je     41e3d1 <strcmp@plt+0x1ac49>
  41e2f3:	mov    bl,BYTE PTR [rsi+0x8]
  41e2f6:	xor    r8d,r8d
  41e2f9:	xor    bl,BYTE PTR [r13+0x0]
  41e2fd:	mov    edx,0x0
  41e302:	jne    41e32e <strcmp@plt+0x1aba6>
  41e304:	xor    edx,edx
  41e306:	mov    edi,0x9
  41e30b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e310:	lea    r12d,[rdx+0x8]
  41e314:	cmp    r12d,ecx
  41e317:	jae    41e3d4 <strcmp@plt+0x1ac4c>
  41e31d:	movzx  ebx,BYTE PTR [rsi+rdi*1]
  41e321:	add    edx,0x8
  41e324:	xor    bl,BYTE PTR [r15+rdi*1]
  41e328:	lea    rdi,[rdi+0x1]
  41e32c:	je     41e310 <strcmp@plt+0x1ab88>
  41e32e:	test   bl,bl
  41e330:	js     41e383 <strcmp@plt+0x1abfb>
  41e332:	mov    r8d,0x1
  41e338:	test   bl,0x40
  41e33b:	jne    41e383 <strcmp@plt+0x1abfb>
  41e33d:	mov    r8d,0x2
  41e343:	test   bl,0x20
  41e346:	jne    41e383 <strcmp@plt+0x1abfb>
  41e348:	mov    r8d,0x3
  41e34e:	test   bl,0x10
  41e351:	jne    41e383 <strcmp@plt+0x1abfb>
  41e353:	mov    r8d,0x4
  41e359:	test   bl,0x8
  41e35c:	jne    41e383 <strcmp@plt+0x1abfb>
  41e35e:	mov    r8d,0x5
  41e364:	test   bl,0x4
  41e367:	jne    41e383 <strcmp@plt+0x1abfb>
  41e369:	mov    r8d,0x6
  41e36f:	test   bl,0x2
  41e372:	jne    41e383 <strcmp@plt+0x1abfb>
  41e374:	mov    r8d,0x7
  41e37a:	test   bl,0x1
  41e37d:	je     41e934 <strcmp@plt+0x1b1ac>
  41e383:	or     r8d,edx
  41e386:	mov    r12d,r8d
  41e389:	jmp    41e3d4 <strcmp@plt+0x1ac4c>
  41e38b:	mov    edi,0x1
  41e390:	mov    esi,0x38
  41e395:	call   432020 <strcmp@plt+0x2e898>
  41e39a:	mov    rbx,rax
  41e39d:	movzx  ebp,WORD PTR [r15+0x2]
  41e3a2:	mov    DWORD PTR [rax],ebp
  41e3a4:	mov    eax,DWORD PTR [r15+0x4]
  41e3a8:	test   eax,eax
  41e3aa:	je     41e596 <strcmp@plt+0x1ae0e>
  41e3b0:	add    eax,0x1
  41e3b3:	mov    DWORD PTR [r15+0x4],eax
  41e3b7:	mov    QWORD PTR [rbx+0x8],r15
  41e3bb:	vxorps xmm0,xmm0,xmm0
  41e3bf:	vmovups YMMWORD PTR [rbx+0x10],ymm0
  41e3c4:	mov    QWORD PTR [r14],rbx
  41e3c7:	add    DWORD PTR [r14+0xc],0x1
  41e3cc:	jmp    41e7d2 <strcmp@plt+0x1b04a>
  41e3d1:	xor    r12d,r12d
  41e3d4:	cmp    r12d,ecx
  41e3d7:	cmova  r12d,ecx
  41e3db:	nop    DWORD PTR [rax+rax*1+0x0]
  41e3e0:	mov    rbx,rax
  41e3e3:	mov    rax,QWORD PTR [rax+0x20]
  41e3e7:	test   rax,rax
  41e3ea:	je     41e3f1 <strcmp@plt+0x1ac69>
  41e3ec:	cmp    DWORD PTR [rax],r12d
  41e3ef:	jae    41e3e0 <strcmp@plt+0x1ac58>
  41e3f1:	cmp    r12d,ebp
  41e3f4:	jne    41e446 <strcmp@plt+0x1acbe>
  41e3f6:	cmp    DWORD PTR [rbx],ebp
  41e3f8:	jne    41e446 <strcmp@plt+0x1acbe>
  41e3fa:	cmp    QWORD PTR [rbx+0x8],0x0
  41e3ff:	jne    41e7d2 <strcmp@plt+0x1b04a>
  41e405:	mov    eax,DWORD PTR [r15+0x4]
  41e409:	test   eax,eax
  41e40b:	je     41e7e7 <strcmp@plt+0x1b05f>
  41e411:	add    eax,0x1
  41e414:	mov    DWORD PTR [r15+0x4],eax
  41e418:	mov    QWORD PTR [rbx+0x8],r15
  41e41c:	cmp    QWORD PTR [rbx+0x28],0x0
  41e421:	je     41e7d2 <strcmp@plt+0x1b04a>
  41e427:	lea    rdi,[rip+0x2a490]        # 4488be <strcmp@plt+0x45136>
  41e42e:	lea    rsi,[rip+0x2a0c9]        # 4484fe <strcmp@plt+0x44d76>
  41e435:	lea    rcx,[rip+0x2a42f]        # 44886b <strcmp@plt+0x450e3>
  41e43c:	mov    edx,0x2cc
  41e441:	call   4032b0 <__assert_fail@plt>
  41e446:	mov    QWORD PTR [rsp+0x10],rsi
  41e44b:	mov    QWORD PTR [rsp+0x20],r14
  41e450:	mov    edi,0x1
  41e455:	mov    esi,0x38
  41e45a:	call   432020 <strcmp@plt+0x2e898>
  41e45f:	movzx  r14d,WORD PTR [r15+0x2]
  41e464:	mov    DWORD PTR [rax],r14d
  41e467:	mov    ecx,DWORD PTR [r15+0x4]
  41e46b:	test   ecx,ecx
  41e46d:	je     41e524 <strcmp@plt+0x1ad9c>
  41e473:	add    ecx,0x1
  41e476:	mov    DWORD PTR [r15+0x4],ecx
  41e47a:	mov    rdx,QWORD PTR [rsp+0x10]
  41e47f:	mov    QWORD PTR [rax+0x8],r15
  41e483:	vxorps xmm0,xmm0,xmm0
  41e487:	vmovups YMMWORD PTR [rax+0x10],ymm0
  41e48c:	mov    r14,QWORD PTR [rsp+0x20]
  41e491:	add    DWORD PTR [r14+0xc],0x1
  41e496:	cmp    DWORD PTR [rbx],r12d
  41e499:	jne    41e4e3 <strcmp@plt+0x1ad5b>
  41e49b:	mov    QWORD PTR [rax+0x20],rbx
  41e49f:	cmp    r12d,DWORD PTR [r14+0x8]
  41e4a3:	jae    41e57f <strcmp@plt+0x1adf7>
  41e4a9:	mov    ecx,r12d
  41e4ac:	shr    rcx,0x3
  41e4b0:	movzx  edx,BYTE PTR [r13+rcx*1+0x0]
  41e4b6:	and    r12b,0x7
  41e4ba:	mov    ecx,0x80
  41e4bf:	shrx   ecx,ecx,r12d
  41e4c4:	test   ecx,edx
  41e4c6:	je     41e57f <strcmp@plt+0x1adf7>
  41e4cc:	cmp    QWORD PTR [rbx+0x18],0x0
  41e4d1:	jne    41e912 <strcmp@plt+0x1b18a>
  41e4d7:	mov    QWORD PTR [rbx+0x18],rax
  41e4db:	mov    rbx,rax
  41e4de:	jmp    41e7d2 <strcmp@plt+0x1b04a>
  41e4e3:	cmp    r12d,ebp
  41e4e6:	jne    41e5e5 <strcmp@plt+0x1ae5d>
  41e4ec:	cmp    DWORD PTR [r14+0x8],ebp
  41e4f0:	jbe    41e64c <strcmp@plt+0x1aec4>
  41e4f6:	mov    rcx,rbp
  41e4f9:	shr    rcx,0x3
  41e4fd:	movzx  edx,BYTE PTR [rdx+rcx*1+0x8]
  41e502:	and    bpl,0x7
  41e506:	mov    ecx,0x80
  41e50b:	shrx   ecx,ecx,ebp
  41e510:	test   ecx,edx
  41e512:	je     41e64c <strcmp@plt+0x1aec4>
  41e518:	mov    rcx,rax
  41e51b:	add    rcx,0x18
  41e51f:	jmp    41e653 <strcmp@plt+0x1aecb>
  41e524:	mov    QWORD PTR [rsp+0x18],rax
  41e529:	movzx  eax,WORD PTR [r15]
  41e52d:	mov    WORD PTR [rsp+0xe],ax
  41e532:	mov    edi,0x18
  41e537:	call   4320b0 <strcmp@plt+0x2e928>
  41e53c:	test   rax,rax
  41e53f:	je     41e6a5 <strcmp@plt+0x1af1d>
  41e545:	mov    r15,rax
  41e548:	vxorps xmm0,xmm0,xmm0
  41e54c:	vmovups XMMWORD PTR [rax],xmm0
  41e550:	mov    QWORD PTR [rax+0x10],0x0
  41e558:	movzx  ecx,WORD PTR [rsp+0xe]
  41e55d:	movzx  eax,cx
  41e560:	cmp    eax,0xa
  41e563:	je     41e736 <strcmp@plt+0x1afae>
  41e569:	cmp    eax,0x2
  41e56c:	jne    41e762 <strcmp@plt+0x1afda>
  41e572:	mov    eax,DWORD PTR [r13+0x0]
  41e576:	mov    DWORD PTR [r15+0x8],eax
  41e57a:	jmp    41e742 <strcmp@plt+0x1afba>
  41e57f:	cmp    QWORD PTR [rbx+0x10],0x0
  41e584:	jne    41e8f0 <strcmp@plt+0x1b168>
  41e58a:	mov    QWORD PTR [rbx+0x10],rax
  41e58e:	mov    rbx,rax
  41e591:	jmp    41e7d2 <strcmp@plt+0x1b04a>
  41e596:	mov    r12,r14
  41e599:	movzx  r14d,WORD PTR [r15]
  41e59d:	mov    edi,0x18
  41e5a2:	call   4320b0 <strcmp@plt+0x2e928>
  41e5a7:	test   rax,rax
  41e5aa:	je     41e6c5 <strcmp@plt+0x1af3d>
  41e5b0:	add    r15,0x8
  41e5b4:	vxorps xmm0,xmm0,xmm0
  41e5b8:	vmovups XMMWORD PTR [rax],xmm0
  41e5bc:	mov    QWORD PTR [rax+0x10],0x0
  41e5c4:	movzx  ecx,r14w
  41e5c8:	cmp    ecx,0xa
  41e5cb:	je     41e777 <strcmp@plt+0x1afef>
  41e5d1:	cmp    ecx,0x2
  41e5d4:	jne    41e79b <strcmp@plt+0x1b013>
  41e5da:	mov    ecx,DWORD PTR [r15]
  41e5dd:	mov    DWORD PTR [rax+0x8],ecx
  41e5e0:	jmp    41e781 <strcmp@plt+0x1aff9>
  41e5e5:	mov    rbp,rax
  41e5e8:	mov    edi,0x1
  41e5ed:	mov    esi,0x38
  41e5f2:	vzeroupper 
  41e5f5:	call   432020 <strcmp@plt+0x2e898>
  41e5fa:	mov    DWORD PTR [rax],r12d
  41e5fd:	mov    QWORD PTR [rax+0x8],0x0
  41e605:	mov    rcx,QWORD PTR [rbx+0x20]
  41e609:	mov    QWORD PTR [rax+0x20],rcx
  41e60d:	mov    QWORD PTR [rax+0x28],0x0
  41e615:	add    DWORD PTR [r14+0xc],0x1
  41e61a:	cmp    r12d,DWORD PTR [r14+0x8]
  41e61e:	jae    41e67a <strcmp@plt+0x1aef2>
  41e620:	mov    ecx,r12d
  41e623:	shr    rcx,0x3
  41e627:	movzx  ecx,BYTE PTR [r13+rcx*1+0x0]
  41e62d:	and    r12b,0x7
  41e631:	mov    edx,0x80
  41e636:	shrx   edx,edx,r12d
  41e63b:	test   edx,ecx
  41e63d:	je     41e67a <strcmp@plt+0x1aef2>
  41e63f:	mov    rdx,rbp
  41e642:	mov    QWORD PTR [rax+0x18],rbp
  41e646:	mov    QWORD PTR [rax+0x10],rbx
  41e64a:	jmp    41e685 <strcmp@plt+0x1aefd>
  41e64c:	mov    rcx,rax
  41e64f:	add    rcx,0x10
  41e653:	mov    QWORD PTR [rcx],rbx
  41e656:	mov    rcx,QWORD PTR [rbx+0x20]
  41e65a:	mov    QWORD PTR [rax+0x20],rcx
  41e65e:	mov    rcx,QWORD PTR [rbx+0x20]
  41e662:	test   rcx,rcx
  41e665:	je     41e6e3 <strcmp@plt+0x1af5b>
  41e667:	cmp    QWORD PTR [rcx+0x18],rbx
  41e66b:	je     41e7ae <strcmp@plt+0x1b026>
  41e671:	add    rcx,0x10
  41e675:	jmp    41e7b2 <strcmp@plt+0x1b02a>
  41e67a:	mov    QWORD PTR [rax+0x18],rbx
  41e67e:	mov    rdx,rbp
  41e681:	mov    QWORD PTR [rax+0x10],rbp
  41e685:	mov    QWORD PTR [rdx+0x20],rax
  41e689:	mov    rcx,QWORD PTR [rbx+0x20]
  41e68d:	test   rcx,rcx
  41e690:	je     41e70e <strcmp@plt+0x1af86>
  41e692:	cmp    QWORD PTR [rcx+0x18],rbx
  41e696:	je     41e7c1 <strcmp@plt+0x1b039>
  41e69c:	add    rcx,0x10
  41e6a0:	jmp    41e7c5 <strcmp@plt+0x1b03d>
  41e6a5:	lea    rsi,[rip+0x29f0e]        # 4485ba <strcmp@plt+0x44e32>
  41e6ac:	xor    r15d,r15d
  41e6af:	mov    edi,0x18
  41e6b4:	xor    eax,eax
  41e6b6:	call   403070 <syslog@plt>
  41e6bb:	mov    rax,QWORD PTR [rsp+0x18]
  41e6c0:	jmp    41e47a <strcmp@plt+0x1acf2>
  41e6c5:	lea    rsi,[rip+0x29eee]        # 4485ba <strcmp@plt+0x44e32>
  41e6cc:	xor    r15d,r15d
  41e6cf:	mov    edi,0x18
  41e6d4:	xor    eax,eax
  41e6d6:	call   403070 <syslog@plt>
  41e6db:	mov    r14,r12
  41e6de:	jmp    41e3b7 <strcmp@plt+0x1ac2f>
  41e6e3:	cmp    QWORD PTR [r14],rbx
  41e6e6:	je     41e7b5 <strcmp@plt+0x1b02d>
  41e6ec:	lea    rdi,[rip+0x2a1fe]        # 4488f1 <strcmp@plt+0x45169>
  41e6f3:	lea    rsi,[rip+0x29e04]        # 4484fe <strcmp@plt+0x44d76>
  41e6fa:	lea    rcx,[rip+0x2a16a]        # 44886b <strcmp@plt+0x450e3>
  41e701:	mov    edx,0x2f4
  41e706:	vzeroupper 
  41e709:	call   4032b0 <__assert_fail@plt>
  41e70e:	cmp    QWORD PTR [r14],rbx
  41e711:	je     41e7c8 <strcmp@plt+0x1b040>
  41e717:	lea    rdi,[rip+0x2a1d3]        # 4488f1 <strcmp@plt+0x45169>
  41e71e:	lea    rsi,[rip+0x29dd9]        # 4484fe <strcmp@plt+0x44d76>
  41e725:	lea    rcx,[rip+0x2a13f]        # 44886b <strcmp@plt+0x450e3>
  41e72c:	mov    edx,0x316
  41e731:	call   4032b0 <__assert_fail@plt>
  41e736:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  41e73c:	vmovups XMMWORD PTR [r15+0x8],xmm0
  41e742:	mov    rax,QWORD PTR [rsp+0x18]
  41e747:	mov    rdx,QWORD PTR [rsp+0x10]
  41e74c:	mov    WORD PTR [r15+0x2],r14w
  41e751:	mov    WORD PTR [r15],cx
  41e755:	mov    DWORD PTR [r15+0x4],0x1
  41e75d:	jmp    41e47f <strcmp@plt+0x1acf7>
  41e762:	mov    rdi,r15
  41e765:	call   403780 <free@plt>
  41e76a:	xor    r15d,r15d
  41e76d:	mov    rax,QWORD PTR [rsp+0x18]
  41e772:	jmp    41e47a <strcmp@plt+0x1acf2>
  41e777:	vmovups xmm0,XMMWORD PTR [r15]
  41e77c:	vmovups XMMWORD PTR [rax+0x8],xmm0
  41e781:	mov    WORD PTR [rax+0x2],bp
  41e785:	mov    WORD PTR [rax],r14w
  41e789:	mov    DWORD PTR [rax+0x4],0x1
  41e790:	mov    r15,rax
  41e793:	mov    r14,r12
  41e796:	jmp    41e3b7 <strcmp@plt+0x1ac2f>
  41e79b:	mov    rdi,rax
  41e79e:	call   403780 <free@plt>
  41e7a3:	xor    r15d,r15d
  41e7a6:	mov    r14,r12
  41e7a9:	jmp    41e3b7 <strcmp@plt+0x1ac2f>
  41e7ae:	add    rcx,0x18
  41e7b2:	mov    r14,rcx
  41e7b5:	mov    QWORD PTR [r14],rax
  41e7b8:	mov    QWORD PTR [rbx+0x20],rax
  41e7bc:	mov    rbx,rax
  41e7bf:	jmp    41e7d2 <strcmp@plt+0x1b04a>
  41e7c1:	add    rcx,0x18
  41e7c5:	mov    r14,rcx
  41e7c8:	mov    QWORD PTR [r14],rax
  41e7cb:	mov    QWORD PTR [rbx+0x20],rax
  41e7cf:	mov    rbx,rdx
  41e7d2:	mov    rax,rbx
  41e7d5:	add    rsp,0x28
  41e7d9:	pop    rbx
  41e7da:	pop    r12
  41e7dc:	pop    r13
  41e7de:	pop    r14
  41e7e0:	pop    r15
  41e7e2:	pop    rbp
  41e7e3:	vzeroupper 
  41e7e6:	ret    
  41e7e7:	mov    r14d,r9d
  41e7ea:	movzx  ebp,WORD PTR [r15]
  41e7ee:	mov    edi,0x18
  41e7f3:	call   4320b0 <strcmp@plt+0x2e928>
  41e7f8:	test   rax,rax
  41e7fb:	je     41e827 <strcmp@plt+0x1b09f>
  41e7fd:	mov    r15,rax
  41e800:	vxorps xmm0,xmm0,xmm0
  41e804:	vmovups XMMWORD PTR [rax],xmm0
  41e808:	mov    QWORD PTR [rax+0x10],0x0
  41e810:	movzx  eax,bp
  41e813:	cmp    eax,0xa
  41e816:	je     41e842 <strcmp@plt+0x1b0ba>
  41e818:	cmp    eax,0x2
  41e81b:	jne    41e864 <strcmp@plt+0x1b0dc>
  41e81d:	mov    eax,DWORD PTR [r13+0x0]
  41e821:	mov    DWORD PTR [r15+0x8],eax
  41e825:	jmp    41e84e <strcmp@plt+0x1b0c6>
  41e827:	lea    rsi,[rip+0x29d8c]        # 4485ba <strcmp@plt+0x44e32>
  41e82e:	xor    r15d,r15d
  41e831:	mov    edi,0x18
  41e836:	xor    eax,eax
  41e838:	call   403070 <syslog@plt>
  41e83d:	jmp    41e418 <strcmp@plt+0x1ac90>
  41e842:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  41e848:	vmovups XMMWORD PTR [r15+0x8],xmm0
  41e84e:	mov    WORD PTR [r15+0x2],r14w
  41e853:	mov    WORD PTR [r15],bp
  41e857:	mov    DWORD PTR [r15+0x4],0x1
  41e85f:	jmp    41e418 <strcmp@plt+0x1ac90>
  41e864:	mov    rdi,r15
  41e867:	call   403780 <free@plt>
  41e86c:	xor    r15d,r15d
  41e86f:	jmp    41e418 <strcmp@plt+0x1ac90>
  41e874:	lea    rdi,[rip+0x29e25]        # 4486a0 <strcmp@plt+0x44f18>
  41e87b:	lea    rsi,[rip+0x29c7c]        # 4484fe <strcmp@plt+0x44d76>
  41e882:	lea    rcx,[rip+0x29fe2]        # 44886b <strcmp@plt+0x450e3>
  41e889:	mov    edx,0x25c
  41e88e:	call   4032b0 <__assert_fail@plt>
  41e893:	lea    rdi,[rip+0x30f55]        # 44f7ef <strcmp@plt+0x4c067>
  41e89a:	lea    rsi,[rip+0x29c5d]        # 4484fe <strcmp@plt+0x44d76>
  41e8a1:	lea    rcx,[rip+0x29fc3]        # 44886b <strcmp@plt+0x450e3>
  41e8a8:	mov    edx,0x25d
  41e8ad:	call   4032b0 <__assert_fail@plt>
  41e8b2:	lea    rdi,[rip+0x29f0d]        # 4487c6 <strcmp@plt+0x4503e>
  41e8b9:	lea    rsi,[rip+0x29c3e]        # 4484fe <strcmp@plt+0x44d76>
  41e8c0:	lea    rcx,[rip+0x29fa4]        # 44886b <strcmp@plt+0x450e3>
  41e8c7:	mov    edx,0x25e
  41e8cc:	call   4032b0 <__assert_fail@plt>
  41e8d1:	lea    rdi,[rip+0x29fd3]        # 4488ab <strcmp@plt+0x45123>
  41e8d8:	lea    rsi,[rip+0x29c1f]        # 4484fe <strcmp@plt+0x44d76>
  41e8df:	lea    rcx,[rip+0x29f85]        # 44886b <strcmp@plt+0x450e3>
  41e8e6:	mov    edx,0x293
  41e8eb:	call   4032b0 <__assert_fail@plt>
  41e8f0:	lea    rdi,[rip+0x29fea]        # 4488e1 <strcmp@plt+0x45159>
  41e8f7:	lea    rsi,[rip+0x29c00]        # 4484fe <strcmp@plt+0x44d76>
  41e8fe:	lea    rcx,[rip+0x29f66]        # 44886b <strcmp@plt+0x450e3>
  41e905:	mov    edx,0x2e0
  41e90a:	vzeroupper 
  41e90d:	call   4032b0 <__assert_fail@plt>
  41e912:	lea    rdi,[rip+0x29fb8]        # 4488d1 <strcmp@plt+0x45149>
  41e919:	lea    rsi,[rip+0x29bde]        # 4484fe <strcmp@plt+0x44d76>
  41e920:	lea    rcx,[rip+0x29f44]        # 44886b <strcmp@plt+0x450e3>
  41e927:	mov    edx,0x2dc
  41e92c:	vzeroupper 
  41e92f:	call   4032b0 <__assert_fail@plt>
  41e934:	lea    rdi,[rip+0x29f7d]        # 4488b8 <strcmp@plt+0x45130>
  41e93b:	lea    rsi,[rip+0x29bbc]        # 4484fe <strcmp@plt+0x44d76>
  41e942:	lea    rcx,[rip+0x29f22]        # 44886b <strcmp@plt+0x450e3>
  41e949:	mov    edx,0x2a8
  41e94e:	call   4032b0 <__assert_fail@plt>
  41e953:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e95d:	nop    DWORD PTR [rax]
  41e960:	push   r15
  41e962:	push   r14
  41e964:	push   r12
  41e966:	push   rbx
  41e967:	push   rax
  41e968:	test   rdi,rdi
  41e96b:	je     41eb3d <strcmp@plt+0x1b3b5>
  41e971:	mov    rbx,rsi
  41e974:	test   rsi,rsi
  41e977:	je     41eb5c <strcmp@plt+0x1b3d4>
  41e97d:	mov    r14,rdi
  41e980:	mov    rax,QWORD PTR [rbx+0x10]
  41e984:	mov    r15,QWORD PTR [rbx+0x18]
  41e988:	test   r15,r15
  41e98b:	je     41e9cb <strcmp@plt+0x1b243>
  41e98d:	test   rax,rax
  41e990:	je     41e9d3 <strcmp@plt+0x1b24b>
  41e992:	mov    rdi,QWORD PTR [rbx+0x8]
  41e996:	test   rdi,rdi
  41e999:	je     41e9b6 <strcmp@plt+0x1b22e>
  41e99b:	mov    eax,DWORD PTR [rdi+0x4]
  41e99e:	test   eax,eax
  41e9a0:	jle    41eb7b <strcmp@plt+0x1b3f3>
  41e9a6:	lea    ecx,[rax-0x1]
  41e9a9:	mov    DWORD PTR [rdi+0x4],ecx
  41e9ac:	cmp    eax,0x1
  41e9af:	jne    41e9b6 <strcmp@plt+0x1b22e>
  41e9b1:	call   403780 <free@plt>
  41e9b6:	mov    QWORD PTR [rbx+0x8],0x0
  41e9be:	mov    QWORD PTR [rbx+0x28],0x0
  41e9c6:	jmp    41eb31 <strcmp@plt+0x1b3a9>
  41e9cb:	mov    r15,rax
  41e9ce:	test   rax,rax
  41e9d1:	je     41ea42 <strcmp@plt+0x1b2ba>
  41e9d3:	mov    r12,QWORD PTR [rbx+0x20]
  41e9d7:	mov    QWORD PTR [r15+0x20],r12
  41e9db:	mov    rdi,QWORD PTR [rbx+0x8]
  41e9df:	test   rdi,rdi
  41e9e2:	je     41e9ff <strcmp@plt+0x1b277>
  41e9e4:	mov    eax,DWORD PTR [rdi+0x4]
  41e9e7:	test   eax,eax
  41e9e9:	jle    41eb7b <strcmp@plt+0x1b3f3>
  41e9ef:	lea    ecx,[rax-0x1]
  41e9f2:	mov    DWORD PTR [rdi+0x4],ecx
  41e9f5:	cmp    eax,0x1
  41e9f8:	jne    41e9ff <strcmp@plt+0x1b277>
  41e9fa:	call   403780 <free@plt>
  41e9ff:	mov    rdi,rbx
  41ea02:	call   403780 <free@plt>
  41ea07:	add    DWORD PTR [r14+0xc],0xffffffff
  41ea0c:	test   r12,r12
  41ea0f:	je     41ea31 <strcmp@plt+0x1b2a9>
  41ea11:	cmp    QWORD PTR [r12+0x18],rbx
  41ea16:	je     41eaa4 <strcmp@plt+0x1b31c>
  41ea1c:	cmp    QWORD PTR [r12+0x10],rbx
  41ea21:	jne    41eb9a <strcmp@plt+0x1b412>
  41ea27:	mov    QWORD PTR [r12+0x10],r15
  41ea2c:	jmp    41eb31 <strcmp@plt+0x1b3a9>
  41ea31:	cmp    QWORD PTR [r14],rbx
  41ea34:	jne    41ebb9 <strcmp@plt+0x1b431>
  41ea3a:	mov    QWORD PTR [r14],r15
  41ea3d:	jmp    41eb31 <strcmp@plt+0x1b3a9>
  41ea42:	mov    rdi,QWORD PTR [rbx+0x8]
  41ea46:	mov    r15,QWORD PTR [rbx+0x20]
  41ea4a:	test   rdi,rdi
  41ea4d:	je     41ea6a <strcmp@plt+0x1b2e2>
  41ea4f:	mov    eax,DWORD PTR [rdi+0x4]
  41ea52:	test   eax,eax
  41ea54:	jle    41eb7b <strcmp@plt+0x1b3f3>
  41ea5a:	lea    ecx,[rax-0x1]
  41ea5d:	mov    DWORD PTR [rdi+0x4],ecx
  41ea60:	cmp    eax,0x1
  41ea63:	jne    41ea6a <strcmp@plt+0x1b2e2>
  41ea65:	call   403780 <free@plt>
  41ea6a:	mov    rdi,rbx
  41ea6d:	call   403780 <free@plt>
  41ea72:	add    DWORD PTR [r14+0xc],0xffffffff
  41ea77:	test   r15,r15
  41ea7a:	je     41eaae <strcmp@plt+0x1b326>
  41ea7c:	mov    rax,QWORD PTR [r15+0x18]
  41ea80:	cmp    rax,rbx
  41ea83:	je     41eac0 <strcmp@plt+0x1b338>
  41ea85:	cmp    QWORD PTR [r15+0x10],rbx
  41ea89:	jne    41ebd8 <strcmp@plt+0x1b450>
  41ea8f:	mov    QWORD PTR [r15+0x10],0x0
  41ea97:	cmp    QWORD PTR [r15+0x8],0x0
  41ea9c:	jne    41eb31 <strcmp@plt+0x1b3a9>
  41eaa2:	jmp    41ead3 <strcmp@plt+0x1b34b>
  41eaa4:	mov    QWORD PTR [r12+0x18],r15
  41eaa9:	jmp    41eb31 <strcmp@plt+0x1b3a9>
  41eaae:	cmp    QWORD PTR [r14],rbx
  41eab1:	jne    41ebf7 <strcmp@plt+0x1b46f>
  41eab7:	mov    QWORD PTR [r14],0x0
  41eabe:	jmp    41eb31 <strcmp@plt+0x1b3a9>
  41eac0:	mov    QWORD PTR [r15+0x18],0x0
  41eac8:	mov    rax,QWORD PTR [r15+0x10]
  41eacc:	cmp    QWORD PTR [r15+0x8],0x0
  41ead1:	jne    41eb31 <strcmp@plt+0x1b3a9>
  41ead3:	mov    rcx,QWORD PTR [r15+0x20]
  41ead7:	test   rcx,rcx
  41eada:	je     41eaf2 <strcmp@plt+0x1b36a>
  41eadc:	cmp    QWORD PTR [rcx+0x18],r15
  41eae0:	je     41eb19 <strcmp@plt+0x1b391>
  41eae2:	cmp    QWORD PTR [rcx+0x10],r15
  41eae6:	jne    41ec16 <strcmp@plt+0x1b48e>
  41eaec:	lea    rdx,[rcx+0x10]
  41eaf0:	jmp    41eb1d <strcmp@plt+0x1b395>
  41eaf2:	cmp    QWORD PTR [r14],r15
  41eaf5:	mov    rdx,r14
  41eaf8:	je     41eb1d <strcmp@plt+0x1b395>
  41eafa:	lea    rdi,[rip+0x29e54]        # 448955 <strcmp@plt+0x451cd>
  41eb01:	lea    rsi,[rip+0x299f6]        # 4484fe <strcmp@plt+0x44d76>
  41eb08:	lea    rcx,[rip+0x29df9]        # 448908 <strcmp@plt+0x45180>
  41eb0f:	mov    edx,0x361
  41eb14:	call   4032b0 <__assert_fail@plt>
  41eb19:	lea    rdx,[rcx+0x18]
  41eb1d:	mov    QWORD PTR [rdx],rax
  41eb20:	mov    QWORD PTR [rax+0x20],rcx
  41eb24:	mov    rdi,r15
  41eb27:	call   403780 <free@plt>
  41eb2c:	add    DWORD PTR [r14+0xc],0xffffffff
  41eb31:	add    rsp,0x8
  41eb35:	pop    rbx
  41eb36:	pop    r12
  41eb38:	pop    r14
  41eb3a:	pop    r15
  41eb3c:	ret    
  41eb3d:	lea    rdi,[rip+0x29b5c]        # 4486a0 <strcmp@plt+0x44f18>
  41eb44:	lea    rsi,[rip+0x299b3]        # 4484fe <strcmp@plt+0x44d76>
  41eb4b:	lea    rcx,[rip+0x29db6]        # 448908 <strcmp@plt+0x45180>
  41eb52:	mov    edx,0x32e
  41eb57:	call   4032b0 <__assert_fail@plt>
  41eb5c:	lea    rdi,[rip+0x29da0]        # 448903 <strcmp@plt+0x4517b>
  41eb63:	lea    rsi,[rip+0x29994]        # 4484fe <strcmp@plt+0x44d76>
  41eb6a:	lea    rcx,[rip+0x29d97]        # 448908 <strcmp@plt+0x45180>
  41eb71:	mov    edx,0x32f
  41eb76:	call   4032b0 <__assert_fail@plt>
  41eb7b:	lea    rdi,[rip+0x29aab]        # 44862d <strcmp@plt+0x44ea5>
  41eb82:	lea    rsi,[rip+0x29975]        # 4484fe <strcmp@plt+0x44d76>
  41eb89:	lea    rcx,[rip+0x29ab3]        # 448643 <strcmp@plt+0x44ebb>
  41eb90:	mov    edx,0x12d
  41eb95:	call   4032b0 <__assert_fail@plt>
  41eb9a:	lea    rdi,[rip+0x29da2]        # 448943 <strcmp@plt+0x451bb>
  41eba1:	lea    rsi,[rip+0x29956]        # 4484fe <strcmp@plt+0x44d76>
  41eba8:	lea    rcx,[rip+0x29d59]        # 448908 <strcmp@plt+0x45180>
  41ebaf:	mov    edx,0x38d
  41ebb4:	call   4032b0 <__assert_fail@plt>
  41ebb9:	lea    rdi,[rip+0x29d31]        # 4488f1 <strcmp@plt+0x45169>
  41ebc0:	lea    rsi,[rip+0x29937]        # 4484fe <strcmp@plt+0x44d76>
  41ebc7:	lea    rcx,[rip+0x29d3a]        # 448908 <strcmp@plt+0x45180>
  41ebce:	mov    edx,0x384
  41ebd3:	call   4032b0 <__assert_fail@plt>
  41ebd8:	lea    rdi,[rip+0x29d64]        # 448943 <strcmp@plt+0x451bb>
  41ebdf:	lea    rsi,[rip+0x29918]        # 4484fe <strcmp@plt+0x44d76>
  41ebe6:	lea    rcx,[rip+0x29d1b]        # 448908 <strcmp@plt+0x45180>
  41ebed:	mov    edx,0x356
  41ebf2:	call   4032b0 <__assert_fail@plt>
  41ebf7:	lea    rdi,[rip+0x29cf3]        # 4488f1 <strcmp@plt+0x45169>
  41ebfe:	lea    rsi,[rip+0x298f9]        # 4484fe <strcmp@plt+0x44d76>
  41ec05:	lea    rcx,[rip+0x29cfc]        # 448908 <strcmp@plt+0x45180>
  41ec0c:	mov    edx,0x34c
  41ec11:	call   4032b0 <__assert_fail@plt>
  41ec16:	lea    rdi,[rip+0x29d51]        # 44896e <strcmp@plt+0x451e6>
  41ec1d:	lea    rsi,[rip+0x298da]        # 4484fe <strcmp@plt+0x44d76>
  41ec24:	lea    rcx,[rip+0x29cdd]        # 448908 <strcmp@plt+0x45180>
  41ec2b:	mov    edx,0x368
  41ec30:	call   4032b0 <__assert_fail@plt>
  41ec35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ec3f:	nop
  41ec40:	push   r14
  41ec42:	push   rbx
  41ec43:	push   rax
  41ec44:	mov    r14,rdi
  41ec47:	mov    edi,esi
  41ec49:	mov    rsi,rdx
  41ec4c:	call   41d780 <strcmp@plt+0x19ff8>
  41ec51:	mov    rbx,rax
  41ec54:	mov    rdi,r14
  41ec57:	mov    rsi,rax
  41ec5a:	call   41e240 <strcmp@plt+0x1aab8>
  41ec5f:	mov    r14,rax
  41ec62:	test   rbx,rbx
  41ec65:	je     41ec81 <strcmp@plt+0x1b4f9>
  41ec67:	mov    eax,DWORD PTR [rbx+0x4]
  41ec6a:	test   eax,eax
  41ec6c:	jle    41ec8c <strcmp@plt+0x1b504>
  41ec6e:	lea    ecx,[rax-0x1]
  41ec71:	mov    DWORD PTR [rbx+0x4],ecx
  41ec74:	cmp    eax,0x1
  41ec77:	jne    41ec81 <strcmp@plt+0x1b4f9>
  41ec79:	mov    rdi,rbx
  41ec7c:	call   403780 <free@plt>
  41ec81:	mov    rax,r14
  41ec84:	add    rsp,0x8
  41ec88:	pop    rbx
  41ec89:	pop    r14
  41ec8b:	ret    
  41ec8c:	lea    rdi,[rip+0x2999a]        # 44862d <strcmp@plt+0x44ea5>
  41ec93:	lea    rsi,[rip+0x29864]        # 4484fe <strcmp@plt+0x44d76>
  41ec9a:	lea    rcx,[rip+0x299a2]        # 448643 <strcmp@plt+0x44ebb>
  41eca1:	mov    edx,0x12d
  41eca6:	call   4032b0 <__assert_fail@plt>
  41ecab:	nop    DWORD PTR [rax+rax*1+0x0]
  41ecb0:	push   r14
  41ecb2:	push   rbx
  41ecb3:	push   rax
  41ecb4:	mov    r14,rdi
  41ecb7:	mov    edi,esi
  41ecb9:	mov    rsi,rdx
  41ecbc:	call   41d780 <strcmp@plt+0x19ff8>
  41ecc1:	mov    rbx,rax
  41ecc4:	mov    rdi,r14
  41ecc7:	mov    rsi,rax
  41ecca:	call   41def0 <strcmp@plt+0x1a768>
  41eccf:	mov    r14,rax
  41ecd2:	test   rbx,rbx
  41ecd5:	je     41ecf1 <strcmp@plt+0x1b569>
  41ecd7:	mov    eax,DWORD PTR [rbx+0x4]
  41ecda:	test   eax,eax
  41ecdc:	jle    41ecfc <strcmp@plt+0x1b574>
  41ecde:	lea    ecx,[rax-0x1]
  41ece1:	mov    DWORD PTR [rbx+0x4],ecx
  41ece4:	cmp    eax,0x1
  41ece7:	jne    41ecf1 <strcmp@plt+0x1b569>
  41ece9:	mov    rdi,rbx
  41ecec:	call   403780 <free@plt>
  41ecf1:	mov    rax,r14
  41ecf4:	add    rsp,0x8
  41ecf8:	pop    rbx
  41ecf9:	pop    r14
  41ecfb:	ret    
  41ecfc:	lea    rdi,[rip+0x2992a]        # 44862d <strcmp@plt+0x44ea5>
  41ed03:	lea    rsi,[rip+0x297f4]        # 4484fe <strcmp@plt+0x44d76>
  41ed0a:	lea    rcx,[rip+0x29932]        # 448643 <strcmp@plt+0x44ebb>
  41ed11:	mov    edx,0x12d
  41ed16:	call   4032b0 <__assert_fail@plt>
  41ed1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ed20:	push   r15
  41ed22:	push   r14
  41ed24:	push   rbx
  41ed25:	mov    r14,rdi
  41ed28:	mov    edi,esi
  41ed2a:	mov    rsi,rdx
  41ed2d:	call   41d780 <strcmp@plt+0x19ff8>
  41ed32:	mov    rbx,rax
  41ed35:	mov    rdi,r14
  41ed38:	mov    rsi,rax
  41ed3b:	call   41def0 <strcmp@plt+0x1a768>
  41ed40:	mov    r15,rax
  41ed43:	test   rbx,rbx
  41ed46:	je     41ed62 <strcmp@plt+0x1b5da>
  41ed48:	mov    eax,DWORD PTR [rbx+0x4]
  41ed4b:	test   eax,eax
  41ed4d:	jle    41ed7d <strcmp@plt+0x1b5f5>
  41ed4f:	lea    ecx,[rax-0x1]
  41ed52:	mov    DWORD PTR [rbx+0x4],ecx
  41ed55:	cmp    eax,0x1
  41ed58:	jne    41ed62 <strcmp@plt+0x1b5da>
  41ed5a:	mov    rdi,rbx
  41ed5d:	call   403780 <free@plt>
  41ed62:	test   r15,r15
  41ed65:	je     41ed77 <strcmp@plt+0x1b5ef>
  41ed67:	mov    rdi,r14
  41ed6a:	mov    rsi,r15
  41ed6d:	pop    rbx
  41ed6e:	pop    r14
  41ed70:	pop    r15
  41ed72:	jmp    41e960 <strcmp@plt+0x1b1d8>
  41ed77:	pop    rbx
  41ed78:	pop    r14
  41ed7a:	pop    r15
  41ed7c:	ret    
  41ed7d:	lea    rdi,[rip+0x298a9]        # 44862d <strcmp@plt+0x44ea5>
  41ed84:	lea    rsi,[rip+0x29773]        # 4484fe <strcmp@plt+0x44d76>
  41ed8b:	lea    rcx,[rip+0x298b1]        # 448643 <strcmp@plt+0x44ebb>
  41ed92:	mov    edx,0x12d
  41ed97:	call   4032b0 <__assert_fail@plt>
  41ed9c:	nop    DWORD PTR [rax+0x0]
  41eda0:	push   r14
  41eda2:	push   rbx
  41eda3:	push   rax
  41eda4:	mov    r14,rdi
  41eda7:	mov    edi,esi
  41eda9:	mov    rsi,rdx
  41edac:	call   41d780 <strcmp@plt+0x19ff8>
  41edb1:	mov    rbx,rax
  41edb4:	xor    esi,esi
  41edb6:	mov    edx,0x1
  41edbb:	mov    rdi,rax
  41edbe:	call   41d4b0 <strcmp@plt+0x19d28>
  41edc3:	mov    rcx,rax
  41edc6:	movzx  edx,WORD PTR [rbx+0x2]
  41edca:	lea    rdi,[rip+0x29bb9]        # 44898a <strcmp@plt+0x45202>
  41edd1:	xor    eax,eax
  41edd3:	mov    rsi,rcx
  41edd6:	call   403050 <printf@plt>
  41eddb:	mov    edx,0x1
  41ede0:	mov    rdi,r14
  41ede3:	mov    rsi,rbx
  41ede6:	call   41e070 <strcmp@plt+0x1a8e8>
  41edeb:	mov    r14,rax
  41edee:	test   rax,rax
  41edf1:	je     41ee26 <strcmp@plt+0x1b69e>
  41edf3:	mov    rdi,QWORD PTR [r14+0x8]
  41edf7:	xor    esi,esi
  41edf9:	mov    edx,0x1
  41edfe:	call   41d4b0 <strcmp@plt+0x19d28>
  41ee03:	mov    rcx,rax
  41ee06:	mov    rax,QWORD PTR [r14+0x8]
  41ee0a:	movzx  edx,WORD PTR [rax+0x2]
  41ee0e:	lea    rdi,[rip+0x29b8d]        # 4489a2 <strcmp@plt+0x4521a>
  41ee15:	xor    eax,eax
  41ee17:	mov    rsi,rcx
  41ee1a:	call   403050 <printf@plt>
  41ee1f:	test   rbx,rbx
  41ee22:	jne    41ee37 <strcmp@plt+0x1b6af>
  41ee24:	jmp    41ee51 <strcmp@plt+0x1b6c9>
  41ee26:	lea    rdi,[rip+0x29b93]        # 4489c0 <strcmp@plt+0x45238>
  41ee2d:	call   403600 <puts@plt>
  41ee32:	test   rbx,rbx
  41ee35:	je     41ee51 <strcmp@plt+0x1b6c9>
  41ee37:	mov    eax,DWORD PTR [rbx+0x4]
  41ee3a:	test   eax,eax
  41ee3c:	jle    41ee5c <strcmp@plt+0x1b6d4>
  41ee3e:	lea    ecx,[rax-0x1]
  41ee41:	mov    DWORD PTR [rbx+0x4],ecx
  41ee44:	cmp    eax,0x1
  41ee47:	jne    41ee51 <strcmp@plt+0x1b6c9>
  41ee49:	mov    rdi,rbx
  41ee4c:	call   403780 <free@plt>
  41ee51:	mov    rax,r14
  41ee54:	add    rsp,0x8
  41ee58:	pop    rbx
  41ee59:	pop    r14
  41ee5b:	ret    
  41ee5c:	lea    rdi,[rip+0x297ca]        # 44862d <strcmp@plt+0x44ea5>
  41ee63:	lea    rsi,[rip+0x29694]        # 4484fe <strcmp@plt+0x44d76>
  41ee6a:	lea    rcx,[rip+0x297d2]        # 448643 <strcmp@plt+0x44ebb>
  41ee71:	mov    edx,0x12d
  41ee76:	call   4032b0 <__assert_fail@plt>
  41ee7b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ee80:	push   rbp
  41ee81:	push   r15
  41ee83:	push   r14
  41ee85:	push   rbx
  41ee86:	push   rax
  41ee87:	mov    ebp,edx
  41ee89:	mov    r14,rsi
  41ee8c:	mov    r15,rdi
  41ee8f:	mov    edi,0x28
  41ee94:	call   432070 <strcmp@plt+0x2e8e8>
  41ee99:	mov    rbx,rax
  41ee9c:	test   rax,rax
  41ee9f:	je     41eeb5 <strcmp@plt+0x1b72d>
  41eea1:	movzx  ecx,bpl
  41eea5:	mov    rdi,rbx
  41eea8:	mov    rsi,r15
  41eeab:	mov    rdx,r14
  41eeae:	call   41eee0 <strcmp@plt+0x1b758>
  41eeb3:	jmp    41eec8 <strcmp@plt+0x1b740>
  41eeb5:	lea    rsi,[rip+0x29bc6]        # 448a82 <strcmp@plt+0x452fa>
  41eebc:	mov    edi,0x3
  41eec1:	xor    eax,eax
  41eec3:	call   42e800 <strcmp@plt+0x2b078>
  41eec8:	mov    rax,rbx
  41eecb:	add    rsp,0x8
  41eecf:	pop    rbx
  41eed0:	pop    r14
  41eed2:	pop    r15
  41eed4:	pop    rbp
  41eed5:	ret    
  41eed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eee0:	push   rbp
  41eee1:	push   r15
  41eee3:	push   r14
  41eee5:	push   r13
  41eee7:	push   r12
  41eee9:	push   rbx
  41eeea:	sub    rsp,0x398
  41eef1:	mov    r15d,ecx
  41eef4:	mov    r14,rdx
  41eef7:	mov    r13,rsi
  41eefa:	mov    rbx,rdi
  41eefd:	call   42bbd0 <strcmp@plt+0x28448>
  41ef02:	mov    rbp,rax
  41ef05:	call   42bbd0 <strcmp@plt+0x28448>
  41ef0a:	mov    QWORD PTR [rsp+0x60],rax
  41ef0f:	mov    QWORD PTR [rsp+0x80],0x0
  41ef1b:	mov    QWORD PTR [rsp+0x188],0x0
  41ef27:	mov    rdi,QWORD PTR [rbx+0x10]
  41ef2b:	test   rdi,rdi
  41ef2e:	mov    QWORD PTR [rsp+0x28],rbx
  41ef33:	je     41ef4a <strcmp@plt+0x1b7c2>
  41ef35:	cmp    rdi,QWORD PTR [rbx]
  41ef38:	je     41ef52 <strcmp@plt+0x1b7ca>
  41ef3a:	cmp    rdi,QWORD PTR [rbx+0x8]
  41ef3e:	je     41ef4a <strcmp@plt+0x1b7c2>
  41ef40:	call   403780 <free@plt>
  41ef45:	mov    rbx,QWORD PTR [rsp+0x28]
  41ef4a:	mov    rdi,QWORD PTR [rbx]
  41ef4d:	test   rdi,rdi
  41ef50:	je     41ef5c <strcmp@plt+0x1b7d4>
  41ef52:	call   403780 <free@plt>
  41ef57:	mov    rbx,QWORD PTR [rsp+0x28]
  41ef5c:	mov    rdi,QWORD PTR [rbx+0x8]
  41ef60:	test   rdi,rdi
  41ef63:	je     41ef6f <strcmp@plt+0x1b7e7>
  41ef65:	call   403780 <free@plt>
  41ef6a:	mov    rbx,QWORD PTR [rsp+0x28]
  41ef6f:	vxorps xmm0,xmm0,xmm0
  41ef73:	vmovups YMMWORD PTR [rbx],ymm0
  41ef77:	mov    DWORD PTR [rbx+0x20],0x0
  41ef7e:	lea    r8,[rip+0xf5b]        # 41fee0 <strcmp@plt+0x1c758>
  41ef85:	mov    rdi,r13
  41ef88:	mov    rsi,r14
  41ef8b:	mov    rdx,rbp
  41ef8e:	mov    rbx,QWORD PTR [rsp+0x60]
  41ef93:	mov    rcx,rbx
  41ef96:	vzeroupper 
  41ef99:	call   4201f0 <strcmp@plt+0x1ca68>
  41ef9e:	mov    r9d,0xff
  41efa4:	xor    eax,eax
  41efa6:	mov    QWORD PTR [rsp+0x38],rax
  41efab:	cmp    DWORD PTR [rbp+0x18],0x0
  41efaf:	mov    r12d,0x0
  41efb5:	mov    r14d,0x0
  41efbb:	mov    r10d,0xff
  41efc1:	je     41f082 <strcmp@plt+0x1b8fa>
  41efc7:	mov    rax,QWORD PTR [rbp+0x8]
  41efcb:	mov    r12d,0x0
  41efd1:	mov    r14d,0x0
  41efd7:	mov    r10d,0xff
  41efdd:	cmp    rax,rbp
  41efe0:	je     41f082 <strcmp@plt+0x1b8fa>
  41efe6:	mov    r8d,0xff
  41efec:	xor    ecx,ecx
  41efee:	xchg   ax,ax
  41eff0:	mov    rdx,QWORD PTR [rax+0x10]
  41eff4:	cmp    BYTE PTR [rdx+0x8],0x0
  41eff8:	je     41f060 <strcmp@plt+0x1b8d8>
  41effa:	movzx  esi,BYTE PTR [rdx+0xb]
  41effe:	cmp    esi,0xff
  41f004:	je     41f060 <strcmp@plt+0x1b8d8>
  41f006:	test   r15b,r15b
  41f009:	je     41f053 <strcmp@plt+0x1b8cb>
  41f00b:	cmp    BYTE PTR [rdx+0xa],0x0
  41f00f:	je     41f060 <strcmp@plt+0x1b8d8>
  41f011:	cmp    r8d,esi
  41f014:	jne    41f030 <strcmp@plt+0x1b8a8>
  41f016:	movsxd rdi,ecx
  41f019:	mov    QWORD PTR [rsp+rdi*8+0x80],rdx
  41f021:	lea    ecx,[rdi+0x1]
  41f024:	mov    QWORD PTR [rsp+rdi*8+0x88],0x0
  41f030:	cmp    r8d,esi
  41f033:	jle    41f060 <strcmp@plt+0x1b8d8>
  41f035:	mov    QWORD PTR [rsp+0x80],rdx
  41f03d:	mov    QWORD PTR [rsp+0x88],0x0
  41f049:	mov    ecx,0x1
  41f04e:	mov    r8d,esi
  41f051:	jmp    41f060 <strcmp@plt+0x1b8d8>
  41f053:	cmp    BYTE PTR [rdx+0x9],0x0
  41f057:	jne    41f011 <strcmp@plt+0x1b889>
  41f059:	nop    DWORD PTR [rax+0x0]
  41f060:	mov    rax,QWORD PTR [rax+0x8]
  41f064:	cmp    rax,rbp
  41f067:	jne    41eff0 <strcmp@plt+0x1b868>
  41f069:	cmp    r8d,0xff
  41f070:	jne    41f175 <strcmp@plt+0x1b9ed>
  41f076:	mov    r10d,0xff
  41f07c:	xor    r12d,r12d
  41f07f:	xor    r14d,r14d
  41f082:	cmp    DWORD PTR [rbx+0x18],0x0
  41f086:	je     41f4ee <strcmp@plt+0x1bd66>
  41f08c:	mov    edx,r15d
  41f08f:	mov    rax,QWORD PTR [rbx+0x8]
  41f093:	mov    r15d,0x0
  41f099:	cmp    rax,rbx
  41f09c:	mov    r8,QWORD PTR [rsp+0x28]
  41f0a1:	je     41f73a <strcmp@plt+0x1bfb2>
  41f0a7:	mov    QWORD PTR [rsp+0x50],rbp
  41f0ac:	mov    QWORD PTR [rsp+0x58],r13
  41f0b1:	lea    r13,[rsp+0x188]
  41f0b9:	mov    r9d,0xff
  41f0bf:	xor    ecx,ecx
  41f0c1:	mov    ebp,edx
  41f0c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f0cd:	nop    DWORD PTR [rax]
  41f0d0:	mov    rdx,QWORD PTR [rax+0x10]
  41f0d4:	cmp    BYTE PTR [rdx+0x8],0x0
  41f0d8:	je     41f140 <strcmp@plt+0x1b9b8>
  41f0da:	movzx  esi,BYTE PTR [rdx+0xb]
  41f0de:	cmp    esi,0xff
  41f0e4:	je     41f140 <strcmp@plt+0x1b9b8>
  41f0e6:	test   bpl,bpl
  41f0e9:	je     41f133 <strcmp@plt+0x1b9ab>
  41f0eb:	cmp    BYTE PTR [rdx+0xa],0x0
  41f0ef:	je     41f140 <strcmp@plt+0x1b9b8>
  41f0f1:	cmp    r9d,esi
  41f0f4:	jne    41f110 <strcmp@plt+0x1b988>
  41f0f6:	movsxd rdi,ecx
  41f0f9:	mov    QWORD PTR [rsp+rdi*8+0x188],rdx
  41f101:	lea    ecx,[rdi+0x1]
  41f104:	mov    QWORD PTR [rsp+rdi*8+0x190],0x0
  41f110:	cmp    r9d,esi
  41f113:	jle    41f140 <strcmp@plt+0x1b9b8>
  41f115:	mov    QWORD PTR [rsp+0x188],rdx
  41f11d:	mov    QWORD PTR [rsp+0x190],0x0
  41f129:	mov    ecx,0x1
  41f12e:	mov    r9d,esi
  41f131:	jmp    41f140 <strcmp@plt+0x1b9b8>
  41f133:	cmp    BYTE PTR [rdx+0x9],0x0
  41f137:	jne    41f0f1 <strcmp@plt+0x1b969>
  41f139:	nop    DWORD PTR [rax+0x0]
  41f140:	mov    rax,QWORD PTR [rax+0x8]
  41f144:	cmp    rax,rbx
  41f147:	jne    41f0d0 <strcmp@plt+0x1b948>
  41f149:	cmp    r9d,0xff
  41f150:	jne    41f20f <strcmp@plt+0x1ba87>
  41f156:	mov    r9d,0xff
  41f15c:	xor    eax,eax
  41f15e:	mov    QWORD PTR [rsp+0x38],rax
  41f163:	xor    r15d,r15d
  41f166:	mov    r13,QWORD PTR [rsp+0x58]
  41f16b:	mov    rbp,QWORD PTR [rsp+0x50]
  41f170:	jmp    41f73a <strcmp@plt+0x1bfb2>
  41f175:	mov    rbx,QWORD PTR [rsp+0x80]
  41f17d:	test   rbx,rbx
  41f180:	mov    rdi,QWORD PTR [rsp+0x28]
  41f185:	mov    QWORD PTR [rsp+0x58],r13
  41f18a:	mov    QWORD PTR [rsp+0x50],rbp
  41f18f:	mov    DWORD PTR [rsp+0x4c],r8d
  41f194:	mov    DWORD PTR [rsp+0x68],r15d
  41f199:	je     41f2a5 <strcmp@plt+0x1bb1d>
  41f19f:	mov    dl,BYTE PTR [rbx+0xc]
  41f1a2:	movzx  eax,dl
  41f1a5:	xor    ecx,ecx
  41f1a7:	xor    r12d,r12d
  41f1aa:	jmp    41f1ba <strcmp@plt+0x1ba32>
  41f1ac:	nop    DWORD PTR [rax+0x0]
  41f1b0:	add    rcx,0x1
  41f1b4:	mov    dl,BYTE PTR [rax+0xc]
  41f1b7:	mov    eax,r14d
  41f1ba:	movzx  esi,dl
  41f1bd:	test   sil,sil
  41f1c0:	je     41f1e0 <strcmp@plt+0x1ba58>
  41f1c2:	mov    r14d,esi
  41f1c5:	test   eax,eax
  41f1c7:	je     41f1e3 <strcmp@plt+0x1ba5b>
  41f1c9:	mov    edx,esi
  41f1cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f1d0:	mov    r14d,edx
  41f1d3:	cdq    
  41f1d4:	idiv   r14d
  41f1d7:	mov    eax,r14d
  41f1da:	test   edx,edx
  41f1dc:	jne    41f1d0 <strcmp@plt+0x1ba48>
  41f1de:	jmp    41f1e3 <strcmp@plt+0x1ba5b>
  41f1e0:	mov    r14d,eax
  41f1e3:	add    r12d,esi
  41f1e6:	mov    rax,QWORD PTR [rsp+rcx*8+0x88]
  41f1ee:	test   rax,rax
  41f1f1:	jne    41f1b0 <strcmp@plt+0x1ba28>
  41f1f3:	lea    r13,[rdi+0x18]
  41f1f7:	test   r12d,r12d
  41f1fa:	je     41f2ac <strcmp@plt+0x1bb24>
  41f200:	mov    eax,r12d
  41f203:	cdq    
  41f204:	idiv   r14d
  41f207:	mov    r15b,0x1
  41f20a:	jmp    41f2d2 <strcmp@plt+0x1bb4a>
  41f20f:	mov    rbx,QWORD PTR [rsp+0x188]
  41f217:	test   rbx,rbx
  41f21a:	mov    DWORD PTR [rsp+0x7c],r9d
  41f21f:	mov    DWORD PTR [rsp+0x4c],r10d
  41f224:	je     41f4fb <strcmp@plt+0x1bd73>
  41f22a:	mov    dl,BYTE PTR [rbx+0xc]
  41f22d:	movzx  eax,dl
  41f230:	xor    ecx,ecx
  41f232:	xor    edi,edi
  41f234:	jmp    41f24a <strcmp@plt+0x1bac2>
  41f236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f240:	add    rcx,0x1
  41f244:	mov    dl,BYTE PTR [rax+0xc]
  41f247:	mov    eax,r15d
  41f24a:	movzx  esi,dl
  41f24d:	test   sil,sil
  41f250:	je     41f270 <strcmp@plt+0x1bae8>
  41f252:	mov    r15d,esi
  41f255:	test   eax,eax
  41f257:	je     41f273 <strcmp@plt+0x1baeb>
  41f259:	mov    edx,esi
  41f25b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f260:	mov    r15d,edx
  41f263:	cdq    
  41f264:	idiv   r15d
  41f267:	mov    eax,r15d
  41f26a:	test   edx,edx
  41f26c:	jne    41f260 <strcmp@plt+0x1bad8>
  41f26e:	jmp    41f273 <strcmp@plt+0x1baeb>
  41f270:	mov    r15d,eax
  41f273:	add    edi,esi
  41f275:	mov    rax,QWORD PTR [rsp+rcx*8+0x190]
  41f27d:	test   rax,rax
  41f280:	jne    41f240 <strcmp@plt+0x1bab8>
  41f282:	lea    rax,[r8+0x1c]
  41f286:	test   edi,edi
  41f288:	je     41f502 <strcmp@plt+0x1bd7a>
  41f28e:	mov    QWORD PTR [rsp+0x30],rax
  41f293:	mov    QWORD PTR [rsp+0x38],rdi
  41f298:	mov    eax,edi
  41f29a:	cdq    
  41f29b:	idiv   r15d
  41f29e:	mov    cl,0x1
  41f2a0:	jmp    41f53c <strcmp@plt+0x1bdb4>
  41f2a5:	lea    r13,[rdi+0x18]
  41f2a9:	xor    r14d,r14d
  41f2ac:	xor    r12d,r12d
  41f2af:	xor    eax,eax
  41f2b1:	test   rbx,rbx
  41f2b4:	je     41f2cf <strcmp@plt+0x1bb47>
  41f2b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f2c0:	cmp    QWORD PTR [rsp+rax*8+0x88],0x0
  41f2c9:	lea    rax,[rax+0x1]
  41f2cd:	jne    41f2c0 <strcmp@plt+0x1bb38>
  41f2cf:	xor    r15d,r15d
  41f2d2:	movsxd rbp,eax
  41f2d5:	lea    rdi,[rbp*8+0x0]
  41f2dd:	call   4320b0 <strcmp@plt+0x2e928>
  41f2e2:	mov    r11,rax
  41f2e5:	mov    DWORD PTR [r13+0x0],ebp
  41f2e9:	test   rbx,rbx
  41f2ec:	je     41f4bd <strcmp@plt+0x1bd35>
  41f2f2:	lea    rdi,[rsp+0x80]
  41f2fa:	lea    rax,[r11+0x8]
  41f2fe:	mov    QWORD PTR [rsp+0x30],rax
  41f303:	lea    rax,[r11+0x60]
  41f307:	mov    QWORD PTR [rsp+0x70],rax
  41f30c:	lea    rax,[r11+0x38]
  41f310:	mov    QWORD PTR [rsp+0x40],rax
  41f315:	xor    esi,esi
  41f317:	xor    r13d,r13d
  41f31a:	jmp    41f380 <strcmp@plt+0x1bbf8>
  41f31c:	nop    DWORD PTR [rax+0x0]
  41f320:	mov    r8d,eax
  41f323:	and    r8d,0xf
  41f327:	sub    rdx,r8
  41f32a:	lea    rcx,[rdx+rbx*1]
  41f32e:	vbroadcastsd ymm0,QWORD PTR [rdi]
  41f333:	mov    rbp,QWORD PTR [rsp+0x70]
  41f338:	lea    rbx,[rbx*8+0x0]
  41f340:	add    rbx,rbp
  41f343:	xor    ebp,ebp
  41f345:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f34f:	nop
  41f350:	vmovups YMMWORD PTR [rbx+rbp*8-0x60],ymm0
  41f356:	vmovups YMMWORD PTR [rbx+rbp*8-0x40],ymm0
  41f35c:	vmovups YMMWORD PTR [rbx+rbp*8-0x20],ymm0
  41f362:	vmovups YMMWORD PTR [rbx+rbp*8],ymm0
  41f367:	add    rbp,0x10
  41f36b:	cmp    rdx,rbp
  41f36e:	jne    41f350 <strcmp@plt+0x1bbc8>
  41f370:	test   r8d,r8d
  41f373:	jne    41f3e9 <strcmp@plt+0x1bc61>
  41f375:	jmp    41f497 <strcmp@plt+0x1bd0f>
  41f37a:	nop    WORD PTR [rax+rax*1+0x0]
  41f380:	mov    eax,0x1
  41f385:	test   r15b,r15b
  41f388:	je     41f39b <strcmp@plt+0x1bc13>
  41f38a:	movzx  eax,BYTE PTR [rbx+0xc]
  41f38e:	xor    edx,edx
  41f390:	idiv   r14d
  41f393:	test   eax,eax
  41f395:	jle    41f49d <strcmp@plt+0x1bd15>
  41f39b:	movsxd rbx,r13d
  41f39e:	lea    ecx,[rax-0x1]
  41f3a1:	lea    rdx,[rcx+0x1]
  41f3a5:	cmp    rdx,0x10
  41f3a9:	jb     41f3e4 <strcmp@plt+0x1bc5c>
  41f3ab:	lea    r8,[rsp+rsi*8]
  41f3af:	add    r8,0x81
  41f3b6:	lea    rbp,[r11+rbx*8]
  41f3ba:	cmp    rbp,r8
  41f3bd:	jae    41f320 <strcmp@plt+0x1bb98>
  41f3c3:	lea    rbp,[rbx*8+0x0]
  41f3cb:	lea    rcx,[rcx*8+0x0]
  41f3d3:	add    rcx,rbp
  41f3d6:	add    rcx,QWORD PTR [rsp+0x30]
  41f3db:	cmp    rcx,rdi
  41f3de:	jbe    41f320 <strcmp@plt+0x1bb98>
  41f3e4:	mov    rcx,rbx
  41f3e7:	xor    edx,edx
  41f3e9:	mov    ebx,eax
  41f3eb:	sub    ebx,edx
  41f3ed:	mov    ebp,edx
  41f3ef:	not    ebp
  41f3f1:	add    ebp,eax
  41f3f3:	and    ebx,0x7
  41f3f6:	je     41f429 <strcmp@plt+0x1bca1>
  41f3f8:	lea    r8,[r11+rcx*8]
  41f3fc:	neg    ebx
  41f3fe:	xor    r9d,r9d
  41f401:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f40b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f410:	mov    r10,QWORD PTR [rdi]
  41f413:	mov    QWORD PTR [r8],r10
  41f416:	add    r9,0xffffffffffffffff
  41f41a:	add    r8,0x8
  41f41e:	cmp    ebx,r9d
  41f421:	jne    41f410 <strcmp@plt+0x1bc88>
  41f423:	sub    rcx,r9
  41f426:	sub    edx,r9d
  41f429:	cmp    ebp,0x7
  41f42c:	jb     41f497 <strcmp@plt+0x1bd0f>
  41f42e:	mov    rbp,QWORD PTR [rsp+0x40]
  41f433:	lea    rcx,[rcx*8+0x0]
  41f43b:	add    rcx,rbp
  41f43e:	mov    ebx,eax
  41f440:	sub    ebx,edx
  41f442:	xor    edx,edx
  41f444:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f44e:	xchg   ax,ax
  41f450:	mov    rbp,QWORD PTR [rdi]
  41f453:	mov    QWORD PTR [rcx+rdx*8-0x38],rbp
  41f458:	mov    rbp,QWORD PTR [rdi]
  41f45b:	mov    QWORD PTR [rcx+rdx*8-0x30],rbp
  41f460:	mov    rbp,QWORD PTR [rdi]
  41f463:	mov    QWORD PTR [rcx+rdx*8-0x28],rbp
  41f468:	mov    rbp,QWORD PTR [rdi]
  41f46b:	mov    QWORD PTR [rcx+rdx*8-0x20],rbp
  41f470:	mov    rbp,QWORD PTR [rdi]
  41f473:	mov    QWORD PTR [rcx+rdx*8-0x18],rbp
  41f478:	mov    rbp,QWORD PTR [rdi]
  41f47b:	mov    QWORD PTR [rcx+rdx*8-0x10],rbp
  41f480:	mov    rbp,QWORD PTR [rdi]
  41f483:	mov    QWORD PTR [rcx+rdx*8-0x8],rbp
  41f488:	mov    rbp,QWORD PTR [rdi]
  41f48b:	mov    QWORD PTR [rcx+rdx*8],rbp
  41f48f:	add    rdx,0x8
  41f493:	cmp    ebx,edx
  41f495:	jne    41f450 <strcmp@plt+0x1bcc8>
  41f497:	add    eax,r13d
  41f49a:	mov    r13d,eax
  41f49d:	lea    rdi,[rsp+rsi*8]
  41f4a1:	add    rdi,0x88
  41f4a8:	mov    rbx,QWORD PTR [rsp+rsi*8+0x88]
  41f4b0:	lea    rsi,[rsi+0x1]
  41f4b4:	test   rbx,rbx
  41f4b7:	jne    41f380 <strcmp@plt+0x1bbf8>
  41f4bd:	mov    rax,QWORD PTR [rsp+0x28]
  41f4c2:	mov    QWORD PTR [rax],r11
  41f4c5:	mov    r13,QWORD PTR [rsp+0x58]
  41f4ca:	mov    rbp,QWORD PTR [rsp+0x50]
  41f4cf:	mov    rbx,QWORD PTR [rsp+0x60]
  41f4d4:	mov    r9d,0xff
  41f4da:	mov    r10d,DWORD PTR [rsp+0x4c]
  41f4df:	mov    r15d,DWORD PTR [rsp+0x68]
  41f4e4:	cmp    DWORD PTR [rbx+0x18],0x0
  41f4e8:	jne    41f08c <strcmp@plt+0x1b904>
  41f4ee:	xor    r15d,r15d
  41f4f1:	mov    r8,QWORD PTR [rsp+0x28]
  41f4f6:	jmp    41f73a <strcmp@plt+0x1bfb2>
  41f4fb:	lea    rax,[r8+0x1c]
  41f4ff:	xor    r15d,r15d
  41f502:	test   rbx,rbx
  41f505:	mov    QWORD PTR [rsp+0x30],rax
  41f50a:	je     41f531 <strcmp@plt+0x1bda9>
  41f50c:	xor    eax,eax
  41f50e:	mov    QWORD PTR [rsp+0x38],rax
  41f513:	xor    eax,eax
  41f515:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f51f:	nop
  41f520:	cmp    QWORD PTR [rsp+rax*8+0x190],0x0
  41f529:	lea    rax,[rax+0x1]
  41f52d:	jne    41f520 <strcmp@plt+0x1bd98>
  41f52f:	jmp    41f53a <strcmp@plt+0x1bdb2>
  41f531:	xor    eax,eax
  41f533:	mov    QWORD PTR [rsp+0x38],rax
  41f538:	xor    eax,eax
  41f53a:	xor    ecx,ecx
  41f53c:	mov    QWORD PTR [rsp+0x40],rcx
  41f541:	movsxd rbp,eax
  41f544:	lea    rdi,[rbp*8+0x0]
  41f54c:	vzeroupper 
  41f54f:	call   4320b0 <strcmp@plt+0x2e928>
  41f554:	mov    r11,rax
  41f557:	mov    rax,QWORD PTR [rsp+0x30]
  41f55c:	mov    DWORD PTR [rax],ebp
  41f55e:	test   rbx,rbx
  41f561:	mov    r8,QWORD PTR [rsp+0x40]
  41f566:	je     41f715 <strcmp@plt+0x1bf8d>
  41f56c:	lea    rax,[r11+0x8]
  41f570:	mov    QWORD PTR [rsp+0x70],rax
  41f575:	lea    rax,[r11+0x60]
  41f579:	mov    QWORD PTR [rsp+0x68],rax
  41f57e:	lea    rax,[r11+0x38]
  41f582:	mov    QWORD PTR [rsp+0x30],rax
  41f587:	xor    esi,esi
  41f589:	xor    r10d,r10d
  41f58c:	jmp    41f5e0 <strcmp@plt+0x1be58>
  41f58e:	xchg   ax,ax
  41f590:	mov    ebp,eax
  41f592:	and    ebp,0xf
  41f595:	sub    rdx,rbp
  41f598:	lea    rcx,[rdx+rbx*1]
  41f59c:	vbroadcastsd ymm0,QWORD PTR [r13+0x0]
  41f5a2:	mov    rdi,QWORD PTR [rsp+0x68]
  41f5a7:	lea    rbx,[rdi+rbx*8]
  41f5ab:	xor    edi,edi
  41f5ad:	nop    DWORD PTR [rax]
  41f5b0:	vmovups YMMWORD PTR [rbx+rdi*8-0x60],ymm0
  41f5b6:	vmovups YMMWORD PTR [rbx+rdi*8-0x40],ymm0
  41f5bc:	vmovups YMMWORD PTR [rbx+rdi*8-0x20],ymm0
  41f5c2:	vmovups YMMWORD PTR [rbx+rdi*8],ymm0
  41f5c7:	add    rdi,0x10
  41f5cb:	cmp    rdx,rdi
  41f5ce:	jne    41f5b0 <strcmp@plt+0x1be28>
  41f5d0:	test   ebp,ebp
  41f5d2:	jne    41f642 <strcmp@plt+0x1beba>
  41f5d4:	jmp    41f6ef <strcmp@plt+0x1bf67>
  41f5d9:	nop    DWORD PTR [rax+0x0]
  41f5e0:	mov    eax,0x1
  41f5e5:	test   r8b,r8b
  41f5e8:	je     41f5fb <strcmp@plt+0x1be73>
  41f5ea:	movzx  eax,BYTE PTR [rbx+0xc]
  41f5ee:	xor    edx,edx
  41f5f0:	idiv   r15d
  41f5f3:	test   eax,eax
  41f5f5:	jle    41f6f5 <strcmp@plt+0x1bf6d>
  41f5fb:	movsxd rbx,r10d
  41f5fe:	lea    ecx,[rax-0x1]
  41f601:	lea    rdx,[rcx+0x1]
  41f605:	cmp    rdx,0x10
  41f609:	jb     41f63d <strcmp@plt+0x1beb5>
  41f60b:	lea    rdi,[rsp+rsi*8]
  41f60f:	add    rdi,0x189
  41f616:	lea    rbp,[r11+rbx*8]
  41f61a:	cmp    rbp,rdi
  41f61d:	jae    41f590 <strcmp@plt+0x1be08>
  41f623:	lea    rdi,[rbx*8+0x0]
  41f62b:	lea    rcx,[rdi+rcx*8]
  41f62f:	add    rcx,QWORD PTR [rsp+0x70]
  41f634:	cmp    rcx,r13
  41f637:	jbe    41f590 <strcmp@plt+0x1be08>
  41f63d:	mov    rcx,rbx
  41f640:	xor    edx,edx
  41f642:	mov    ebx,eax
  41f644:	sub    ebx,edx
  41f646:	mov    ebp,edx
  41f648:	not    ebp
  41f64a:	add    ebp,eax
  41f64c:	and    ebx,0x7
  41f64f:	je     41f67f <strcmp@plt+0x1bef7>
  41f651:	lea    r8,[r11+rcx*8]
  41f655:	neg    ebx
  41f657:	xor    r9d,r9d
  41f65a:	nop    WORD PTR [rax+rax*1+0x0]
  41f660:	mov    rdi,QWORD PTR [r13+0x0]
  41f664:	mov    QWORD PTR [r8],rdi
  41f667:	add    r9,0xffffffffffffffff
  41f66b:	add    r8,0x8
  41f66f:	cmp    ebx,r9d
  41f672:	jne    41f660 <strcmp@plt+0x1bed8>
  41f674:	sub    rcx,r9
  41f677:	sub    edx,r9d
  41f67a:	mov    r8,QWORD PTR [rsp+0x40]
  41f67f:	cmp    ebp,0x7
  41f682:	jb     41f6ef <strcmp@plt+0x1bf67>
  41f684:	mov    rdi,QWORD PTR [rsp+0x30]
  41f689:	lea    rcx,[rdi+rcx*8]
  41f68d:	mov    ebx,eax
  41f68f:	sub    ebx,edx
  41f691:	xor    edx,edx
  41f693:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f69d:	nop    DWORD PTR [rax]
  41f6a0:	mov    rdi,QWORD PTR [r13+0x0]
  41f6a4:	mov    QWORD PTR [rcx+rdx*8-0x38],rdi
  41f6a9:	mov    rdi,QWORD PTR [r13+0x0]
  41f6ad:	mov    QWORD PTR [rcx+rdx*8-0x30],rdi
  41f6b2:	mov    rdi,QWORD PTR [r13+0x0]
  41f6b6:	mov    QWORD PTR [rcx+rdx*8-0x28],rdi
  41f6bb:	mov    rdi,QWORD PTR [r13+0x0]
  41f6bf:	mov    QWORD PTR [rcx+rdx*8-0x20],rdi
  41f6c4:	mov    rdi,QWORD PTR [r13+0x0]
  41f6c8:	mov    QWORD PTR [rcx+rdx*8-0x18],rdi
  41f6cd:	mov    rdi,QWORD PTR [r13+0x0]
  41f6d1:	mov    QWORD PTR [rcx+rdx*8-0x10],rdi
  41f6d6:	mov    rdi,QWORD PTR [r13+0x0]
  41f6da:	mov    QWORD PTR [rcx+rdx*8-0x8],rdi
  41f6df:	mov    rdi,QWORD PTR [r13+0x0]
  41f6e3:	mov    QWORD PTR [rcx+rdx*8],rdi
  41f6e7:	add    rdx,0x8
  41f6eb:	cmp    ebx,edx
  41f6ed:	jne    41f6a0 <strcmp@plt+0x1bf18>
  41f6ef:	add    eax,r10d
  41f6f2:	mov    r10d,eax
  41f6f5:	lea    r13,[rsp+rsi*8]
  41f6f9:	add    r13,0x190
  41f700:	mov    rbx,QWORD PTR [rsp+rsi*8+0x190]
  41f708:	lea    rsi,[rsi+0x1]
  41f70c:	test   rbx,rbx
  41f70f:	jne    41f5e0 <strcmp@plt+0x1be58>
  41f715:	mov    rax,QWORD PTR [rsp+0x28]
  41f71a:	mov    QWORD PTR [rax+0x8],r11
  41f71e:	mov    r8,rax
  41f721:	mov    r13,QWORD PTR [rsp+0x58]
  41f726:	mov    rbp,QWORD PTR [rsp+0x50]
  41f72b:	mov    rbx,QWORD PTR [rsp+0x60]
  41f730:	mov    r9d,DWORD PTR [rsp+0x7c]
  41f735:	mov    r10d,DWORD PTR [rsp+0x4c]
  41f73a:	mov    rax,QWORD PTR [r8]
  41f73d:	test   rax,rax
  41f740:	je     41fa6c <strcmp@plt+0x1c2e4>
  41f746:	mov    rcx,QWORD PTR [r8+0x8]
  41f74a:	test   rcx,rcx
  41f74d:	je     41fa6c <strcmp@plt+0x1c2e4>
  41f753:	cmp    r10d,r9d
  41f756:	jge    41f769 <strcmp@plt+0x1bfe1>
  41f758:	mov    QWORD PTR [r8+0x10],rax
  41f75c:	mov    eax,DWORD PTR [r8+0x18]
  41f760:	mov    DWORD PTR [r8+0x20],eax
  41f764:	jmp    41fa6c <strcmp@plt+0x1c2e4>
  41f769:	jle    41f77c <strcmp@plt+0x1bff4>
  41f76b:	mov    QWORD PTR [r8+0x10],rcx
  41f76f:	mov    eax,DWORD PTR [r8+0x1c]
  41f773:	mov    DWORD PTR [r8+0x20],eax
  41f777:	jmp    41fa6c <strcmp@plt+0x1c2e4>
  41f77c:	test   r15d,r15d
  41f77f:	mov    QWORD PTR [rsp+0x58],r13
  41f784:	mov    QWORD PTR [rsp+0x50],rbp
  41f789:	je     41f7b6 <strcmp@plt+0x1c02e>
  41f78b:	test   r14d,r14d
  41f78e:	je     41f7bb <strcmp@plt+0x1c033>
  41f790:	mov    rbp,QWORD PTR [rsp+0x38]
  41f795:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f79f:	nop
  41f7a0:	mov    r13d,r15d
  41f7a3:	mov    eax,r14d
  41f7a6:	cdq    
  41f7a7:	idiv   r15d
  41f7aa:	mov    r14d,r15d
  41f7ad:	mov    r15d,edx
  41f7b0:	test   edx,edx
  41f7b2:	jne    41f7a0 <strcmp@plt+0x1c018>
  41f7b4:	jmp    41f7c3 <strcmp@plt+0x1c03b>
  41f7b6:	mov    r13d,r14d
  41f7b9:	jmp    41f7be <strcmp@plt+0x1c036>
  41f7bb:	mov    r13d,r15d
  41f7be:	mov    rbp,QWORD PTR [rsp+0x38]
  41f7c3:	mov    rcx,QWORD PTR [rsp+0x80]
  41f7cb:	xor    eax,eax
  41f7cd:	test   rcx,rcx
  41f7d0:	je     41f7f9 <strcmp@plt+0x1c071>
  41f7d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f7dc:	nop    DWORD PTR [rax+0x0]
  41f7e0:	mov    QWORD PTR [rsp+rax*8+0x290],rcx
  41f7e8:	mov    rcx,QWORD PTR [rsp+rax*8+0x88]
  41f7f0:	add    rax,0x1
  41f7f4:	test   rcx,rcx
  41f7f7:	jne    41f7e0 <strcmp@plt+0x1c058>
  41f7f9:	mov    rcx,QWORD PTR [rsp+0x188]
  41f801:	test   rcx,rcx
  41f804:	je     41f837 <strcmp@plt+0x1c0af>
  41f806:	movsxd rdx,eax
  41f809:	lea    rsi,[rsp+0x290]
  41f811:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f81b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f820:	mov    QWORD PTR [rsi+rdx*8],rcx
  41f824:	mov    rcx,QWORD PTR [rsi-0x100]
  41f82b:	add    rsi,0x8
  41f82f:	add    eax,0x1
  41f832:	test   rcx,rcx
  41f835:	jne    41f820 <strcmp@plt+0x1c098>
  41f837:	cdqe   
  41f839:	mov    QWORD PTR [rsp+rax*8+0x290],0x0
  41f845:	add    ebp,r12d
  41f848:	je     41f852 <strcmp@plt+0x1c0ca>
  41f84a:	mov    eax,ebp
  41f84c:	cdq    
  41f84d:	idiv   r13d
  41f850:	jmp    41f86d <strcmp@plt+0x1c0e5>
  41f852:	lea    rcx,[rsp+0x290]
  41f85a:	mov    eax,0xffffffff
  41f85f:	nop
  41f860:	add    eax,0x1
  41f863:	cmp    QWORD PTR [rcx],0x0
  41f867:	lea    rcx,[rcx+0x8]
  41f86b:	jne    41f860 <strcmp@plt+0x1c0d8>
  41f86d:	movsxd rbx,eax
  41f870:	lea    rdi,[rbx*8+0x0]
  41f878:	vzeroupper 
  41f87b:	call   4320b0 <strcmp@plt+0x2e928>
  41f880:	mov    r11,rax
  41f883:	mov    rax,QWORD PTR [rsp+0x28]
  41f888:	mov    DWORD PTR [rax+0x20],ebx
  41f88b:	mov    rax,QWORD PTR [rsp+0x290]
  41f893:	test   rax,rax
  41f896:	mov    rbx,QWORD PTR [rsp+0x60]
  41f89b:	je     41fa56 <strcmp@plt+0x1c2ce>
  41f8a1:	lea    rsi,[rsp+0x290]
  41f8a9:	lea    rcx,[r11+0x8]
  41f8ad:	mov    QWORD PTR [rsp+0x40],rcx
  41f8b2:	lea    rcx,[r11+0x60]
  41f8b6:	mov    QWORD PTR [rsp+0x30],rcx
  41f8bb:	lea    r10,[r11+0x38]
  41f8bf:	xor    r12d,r12d
  41f8c2:	xor    r14d,r14d
  41f8c5:	jmp    41f920 <strcmp@plt+0x1c198>
  41f8c7:	mov    ebp,eax
  41f8c9:	and    ebp,0xf
  41f8cc:	sub    rdx,rbp
  41f8cf:	lea    r15,[rdx+rcx*1]
  41f8d3:	vbroadcastsd ymm0,QWORD PTR [rsi]
  41f8d8:	mov    rdi,QWORD PTR [rsp+0x30]
  41f8dd:	lea    rcx,[rdi+rcx*8]
  41f8e1:	xor    edi,edi
  41f8e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f8ed:	nop    DWORD PTR [rax]
  41f8f0:	vmovups YMMWORD PTR [rcx+rdi*8-0x60],ymm0
  41f8f6:	vmovups YMMWORD PTR [rcx+rdi*8-0x40],ymm0
  41f8fc:	vmovups YMMWORD PTR [rcx+rdi*8-0x20],ymm0
  41f902:	vmovups YMMWORD PTR [rcx+rdi*8],ymm0
  41f907:	add    rdi,0x10
  41f90b:	cmp    rdx,rdi
  41f90e:	jne    41f8f0 <strcmp@plt+0x1c168>
  41f910:	test   ebp,ebp
  41f912:	jne    41f98f <strcmp@plt+0x1c207>
  41f914:	jmp    41fa27 <strcmp@plt+0x1c29f>
  41f919:	nop    DWORD PTR [rax+0x0]
  41f920:	test   ebp,ebp
  41f922:	je     41f940 <strcmp@plt+0x1c1b8>
  41f924:	movzx  eax,BYTE PTR [rax+0xc]
  41f928:	xor    edx,edx
  41f92a:	idiv   r13d
  41f92d:	test   eax,eax
  41f92f:	jg     41f945 <strcmp@plt+0x1c1bd>
  41f931:	jmp    41fa35 <strcmp@plt+0x1c2ad>
  41f936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f940:	mov    eax,0x1
  41f945:	mov    r9,rbp
  41f948:	movsxd rcx,r14d
  41f94b:	lea    edi,[rax-0x1]
  41f94e:	lea    rdx,[rdi+0x1]
  41f952:	cmp    rdx,0x10
  41f956:	jb     41f98a <strcmp@plt+0x1c202>
  41f958:	lea    rbx,[rsp+r12*8]
  41f95c:	add    rbx,0x291
  41f963:	lea    rbp,[r11+rcx*8]
  41f967:	cmp    rbp,rbx
  41f96a:	jae    41f8c7 <strcmp@plt+0x1c13f>
  41f970:	lea    rbx,[rcx*8+0x0]
  41f978:	lea    rdi,[rbx+rdi*8]
  41f97c:	add    rdi,QWORD PTR [rsp+0x40]
  41f981:	cmp    rdi,rsi
  41f984:	jbe    41f8c7 <strcmp@plt+0x1c13f>
  41f98a:	mov    r15,rcx
  41f98d:	xor    edx,edx
  41f98f:	mov    ecx,eax
  41f991:	sub    ecx,edx
  41f993:	mov    ebp,edx
  41f995:	not    ebp
  41f997:	add    ebp,eax
  41f999:	and    ecx,0x7
  41f99c:	je     41f9c7 <strcmp@plt+0x1c23f>
  41f99e:	lea    rbx,[r11+r15*8]
  41f9a2:	neg    ecx
  41f9a4:	xor    edi,edi
  41f9a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f9b0:	mov    r8,QWORD PTR [rsi]
  41f9b3:	mov    QWORD PTR [rbx],r8
  41f9b6:	add    rdi,0xffffffffffffffff
  41f9ba:	add    rbx,0x8
  41f9be:	cmp    ecx,edi
  41f9c0:	jne    41f9b0 <strcmp@plt+0x1c228>
  41f9c2:	sub    r15,rdi
  41f9c5:	sub    edx,edi
  41f9c7:	cmp    ebp,0x7
  41f9ca:	jb     41fa27 <strcmp@plt+0x1c29f>
  41f9cc:	lea    rcx,[r10+r15*8]
  41f9d0:	mov    ebx,eax
  41f9d2:	sub    ebx,edx
  41f9d4:	xor    edx,edx
  41f9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f9e0:	mov    rdi,QWORD PTR [rsi]
  41f9e3:	mov    QWORD PTR [rcx+rdx*8-0x38],rdi
  41f9e8:	mov    rdi,QWORD PTR [rsi]
  41f9eb:	mov    QWORD PTR [rcx+rdx*8-0x30],rdi
  41f9f0:	mov    rdi,QWORD PTR [rsi]
  41f9f3:	mov    QWORD PTR [rcx+rdx*8-0x28],rdi
  41f9f8:	mov    rdi,QWORD PTR [rsi]
  41f9fb:	mov    QWORD PTR [rcx+rdx*8-0x20],rdi
  41fa00:	mov    rdi,QWORD PTR [rsi]
  41fa03:	mov    QWORD PTR [rcx+rdx*8-0x18],rdi
  41fa08:	mov    rdi,QWORD PTR [rsi]
  41fa0b:	mov    QWORD PTR [rcx+rdx*8-0x10],rdi
  41fa10:	mov    rdi,QWORD PTR [rsi]
  41fa13:	mov    QWORD PTR [rcx+rdx*8-0x8],rdi
  41fa18:	mov    rdi,QWORD PTR [rsi]
  41fa1b:	mov    QWORD PTR [rcx+rdx*8],rdi
  41fa1f:	add    rdx,0x8
  41fa23:	cmp    ebx,edx
  41fa25:	jne    41f9e0 <strcmp@plt+0x1c258>
  41fa27:	add    eax,r14d
  41fa2a:	mov    r14d,eax
  41fa2d:	mov    rbx,QWORD PTR [rsp+0x60]
  41fa32:	mov    rbp,r9
  41fa35:	lea    rsi,[rsp+r12*8]
  41fa39:	add    rsi,0x298
  41fa40:	mov    rax,QWORD PTR [rsp+r12*8+0x298]
  41fa48:	lea    r12,[r12+0x1]
  41fa4d:	test   rax,rax
  41fa50:	jne    41f920 <strcmp@plt+0x1c198>
  41fa56:	mov    rax,QWORD PTR [rsp+0x28]
  41fa5b:	mov    QWORD PTR [rax+0x10],r11
  41fa5f:	mov    r8,rax
  41fa62:	mov    r13,QWORD PTR [rsp+0x58]
  41fa67:	mov    rbp,QWORD PTR [rsp+0x50]
  41fa6c:	mov    rax,QWORD PTR [r8+0x20]
  41fa70:	mov    QWORD PTR [rsp+0x20],rax
  41fa75:	vmovups ymm0,YMMWORD PTR [r8]
  41fa7a:	vmovups YMMWORD PTR [rsp],ymm0
  41fa7f:	mov    esi,0x5
  41fa84:	mov    rdi,r13
  41fa87:	vzeroupper 
  41fa8a:	call   41fb10 <strcmp@plt+0x1c388>
  41fa8f:	mov    rdi,rbp
  41fa92:	call   42c250 <strcmp@plt+0x28ac8>
  41fa97:	mov    rdi,rbx
  41fa9a:	call   42c250 <strcmp@plt+0x28ac8>
  41fa9f:	mov    eax,0x1
  41faa4:	add    rsp,0x398
  41faab:	pop    rbx
  41faac:	pop    r12
  41faae:	pop    r13
  41fab0:	pop    r14
  41fab2:	pop    r15
  41fab4:	pop    rbp
  41fab5:	ret    
  41fab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fac0:	push   rbx
  41fac1:	mov    rbx,rdi
  41fac4:	mov    rdi,QWORD PTR [rdi+0x10]
  41fac8:	test   rdi,rdi
  41facb:	je     41fadd <strcmp@plt+0x1c355>
  41facd:	cmp    rdi,QWORD PTR [rbx]
  41fad0:	je     41fae5 <strcmp@plt+0x1c35d>
  41fad2:	cmp    rdi,QWORD PTR [rbx+0x8]
  41fad6:	je     41fadd <strcmp@plt+0x1c355>
  41fad8:	call   403780 <free@plt>
  41fadd:	mov    rdi,QWORD PTR [rbx]
  41fae0:	test   rdi,rdi
  41fae3:	je     41faea <strcmp@plt+0x1c362>
  41fae5:	call   403780 <free@plt>
  41faea:	mov    rdi,QWORD PTR [rbx+0x8]
  41faee:	test   rdi,rdi
  41faf1:	je     41faf8 <strcmp@plt+0x1c370>
  41faf3:	call   403780 <free@plt>
  41faf8:	mov    rdi,rbx
  41fafb:	pop    rbx
  41fafc:	jmp    403780 <free@plt>
  41fb01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fb0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fb10:	push   rbp
  41fb11:	push   r15
  41fb13:	push   r14
  41fb15:	push   r13
  41fb17:	push   r12
  41fb19:	push   rbx
  41fb1a:	sub    rsp,0xbc8
  41fb21:	mov    ebx,esi
  41fb23:	cmp    esi,0x5
  41fb26:	jl     41fb3c <strcmp@plt+0x1c3b4>
  41fb28:	lea    rax,[rip+0x45281]        # 464db0 <strcmp@plt+0x61628>
  41fb2f:	mov    eax,DWORD PTR [rax]
  41fb31:	add    eax,0x4
  41fb34:	cmp    eax,ebx
  41fb36:	jl     41fd99 <strcmp@plt+0x1c611>
  41fb3c:	lea    rbp,[rsp+0xc00]
  41fb44:	call   423130 <strcmp@plt+0x1f9a8>
  41fb49:	mov    rcx,rax
  41fb4c:	lea    rsi,[rip+0x28e88]        # 4489db <strcmp@plt+0x45253>
  41fb53:	xor    eax,eax
  41fb55:	mov    DWORD PTR [rsp+0xc],ebx
  41fb59:	mov    edi,ebx
  41fb5b:	mov    rdx,rcx
  41fb5e:	call   42e800 <strcmp@plt+0x2b078>
  41fb63:	movsxd rbx,DWORD PTR [rbp+0x18]
  41fb67:	lea    rsi,[rip+0x28e8f]        # 4489fd <strcmp@plt+0x45275>
  41fb6e:	lea    rdi,[rsp+0x10]
  41fb73:	xor    eax,eax
  41fb75:	mov    edx,ebx
  41fb77:	call   4030b0 <sprintf@plt>
  41fb7c:	test   rbx,rbx
  41fb7f:	jle    41fbee <strcmp@plt+0x1c466>
  41fb81:	lea    rax,[rsp+0xc00]
  41fb89:	mov    r13,QWORD PTR [rax]
  41fb8c:	lea    r12,[rsp+0x10]
  41fb91:	lea    r15,[rip+0x28e8d]        # 448a25 <strcmp@plt+0x4529d>
  41fb98:	xor    r14d,r14d
  41fb9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fba0:	mov    rdi,r12
  41fba3:	call   4031e0 <strlen@plt>
  41fba8:	lea    rbp,[rsp+rax*1]
  41fbac:	add    rbp,0x10
  41fbb0:	cmp    rax,0xb23
  41fbb6:	jae    41fbe3 <strcmp@plt+0x1c45b>
  41fbb8:	mov    rax,QWORD PTR [r13+r14*8+0x0]
  41fbbd:	mov    rdi,QWORD PTR [rax]
  41fbc0:	call   423130 <strcmp@plt+0x1f9a8>
  41fbc5:	mov    rcx,rax
  41fbc8:	xor    eax,eax
  41fbca:	mov    rdi,rbp
  41fbcd:	mov    rsi,r15
  41fbd0:	mov    rdx,rcx
  41fbd3:	call   4030b0 <sprintf@plt>
  41fbd8:	add    r14,0x1
  41fbdc:	cmp    r14,rbx
  41fbdf:	jl     41fba0 <strcmp@plt+0x1c418>
  41fbe1:	jmp    41fbee <strcmp@plt+0x1c466>
  41fbe3:	mov    BYTE PTR [rbp+0x4],0x0
  41fbe7:	mov    DWORD PTR [rbp+0x0],0x2e2e2e20
  41fbee:	mov    edi,DWORD PTR [rsp+0xc]
  41fbf2:	cmp    edi,0x5
  41fbf5:	jl     41fc07 <strcmp@plt+0x1c47f>
  41fbf7:	lea    rax,[rip+0x451b2]        # 464db0 <strcmp@plt+0x61628>
  41fbfe:	mov    eax,DWORD PTR [rax]
  41fc00:	add    eax,0x4
  41fc03:	cmp    eax,edi
  41fc05:	jl     41fc1a <strcmp@plt+0x1c492>
  41fc07:	lea    rsi,[rip+0x23aa7]        # 4436b5 <strcmp@plt+0x3ff2d>
  41fc0e:	lea    rdx,[rsp+0x10]
  41fc13:	xor    eax,eax
  41fc15:	call   42e800 <strcmp@plt+0x2b078>
  41fc1a:	lea    rax,[rsp+0xc00]
  41fc22:	movsxd r13,DWORD PTR [rax+0x1c]
  41fc26:	lea    rsi,[rip+0x28dfe]        # 448a2b <strcmp@plt+0x452a3>
  41fc2d:	lea    rdi,[rsp+0x10]
  41fc32:	xor    eax,eax
  41fc34:	mov    edx,r13d
  41fc37:	call   4030b0 <sprintf@plt>
  41fc3c:	test   r13,r13
  41fc3f:	jle    41fcad <strcmp@plt+0x1c525>
  41fc41:	lea    rax,[rsp+0xc00]
  41fc49:	mov    r14,QWORD PTR [rax+0x8]
  41fc4d:	lea    r12,[rsp+0x10]
  41fc52:	lea    r15,[rip+0x28dcc]        # 448a25 <strcmp@plt+0x4529d>
  41fc59:	xor    ebx,ebx
  41fc5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fc60:	mov    rdi,r12
  41fc63:	call   4031e0 <strlen@plt>
  41fc68:	lea    rbp,[rsp+rax*1]
  41fc6c:	add    rbp,0x10
  41fc70:	cmp    rax,0xb55
  41fc76:	jae    41fca2 <strcmp@plt+0x1c51a>
  41fc78:	mov    rax,QWORD PTR [r14+rbx*8]
  41fc7c:	mov    rdi,QWORD PTR [rax]
  41fc7f:	call   423130 <strcmp@plt+0x1f9a8>
  41fc84:	mov    rcx,rax
  41fc87:	xor    eax,eax
  41fc89:	mov    rdi,rbp
  41fc8c:	mov    rsi,r15
  41fc8f:	mov    rdx,rcx
  41fc92:	call   4030b0 <sprintf@plt>
  41fc97:	add    rbx,0x1
  41fc9b:	cmp    rbx,r13
  41fc9e:	jl     41fc60 <strcmp@plt+0x1c4d8>
  41fca0:	jmp    41fcad <strcmp@plt+0x1c525>
  41fca2:	mov    BYTE PTR [rbp+0x4],0x0
  41fca6:	mov    DWORD PTR [rbp+0x0],0x2e2e2e20
  41fcad:	mov    edi,DWORD PTR [rsp+0xc]
  41fcb1:	cmp    edi,0x5
  41fcb4:	jl     41fcc6 <strcmp@plt+0x1c53e>
  41fcb6:	lea    rax,[rip+0x450f3]        # 464db0 <strcmp@plt+0x61628>
  41fcbd:	mov    eax,DWORD PTR [rax]
  41fcbf:	add    eax,0x4
  41fcc2:	cmp    eax,edi
  41fcc4:	jl     41fcd9 <strcmp@plt+0x1c551>
  41fcc6:	lea    rsi,[rip+0x239e8]        # 4436b5 <strcmp@plt+0x3ff2d>
  41fccd:	lea    rdx,[rsp+0x10]
  41fcd2:	xor    eax,eax
  41fcd4:	call   42e800 <strcmp@plt+0x2b078>
  41fcd9:	lea    rbx,[rsp+0xc00]
  41fce1:	movsxd r13,DWORD PTR [rbx+0x20]
  41fce5:	lea    rsi,[rip+0x28d67]        # 448a53 <strcmp@plt+0x452cb>
  41fcec:	lea    rdi,[rsp+0x10]
  41fcf1:	xor    eax,eax
  41fcf3:	mov    edx,r13d
  41fcf6:	call   4030b0 <sprintf@plt>
  41fcfb:	test   r13,r13
  41fcfe:	jle    41fd6d <strcmp@plt+0x1c5e5>
  41fd00:	mov    r14,QWORD PTR [rbx+0x10]
  41fd04:	lea    r12,[rsp+0x10]
  41fd09:	lea    r15,[rip+0x28d15]        # 448a25 <strcmp@plt+0x4529d>
  41fd10:	xor    ebx,ebx
  41fd12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd1c:	nop    DWORD PTR [rax+0x0]
  41fd20:	mov    rdi,r12
  41fd23:	call   4031e0 <strlen@plt>
  41fd28:	lea    rbp,[rsp+rax*1]
  41fd2c:	add    rbp,0x10
  41fd30:	cmp    rax,0xb87
  41fd36:	jae    41fd62 <strcmp@plt+0x1c5da>
  41fd38:	mov    rax,QWORD PTR [r14+rbx*8]
  41fd3c:	mov    rdi,QWORD PTR [rax]
  41fd3f:	call   423130 <strcmp@plt+0x1f9a8>
  41fd44:	mov    rcx,rax
  41fd47:	xor    eax,eax
  41fd49:	mov    rdi,rbp
  41fd4c:	mov    rsi,r15
  41fd4f:	mov    rdx,rcx
  41fd52:	call   4030b0 <sprintf@plt>
  41fd57:	add    rbx,0x1
  41fd5b:	cmp    rbx,r13
  41fd5e:	jl     41fd20 <strcmp@plt+0x1c598>
  41fd60:	jmp    41fd6d <strcmp@plt+0x1c5e5>
  41fd62:	mov    BYTE PTR [rbp+0x4],0x0
  41fd66:	mov    DWORD PTR [rbp+0x0],0x2e2e2e20
  41fd6d:	mov    edi,DWORD PTR [rsp+0xc]
  41fd71:	cmp    edi,0x5
  41fd74:	jl     41fd86 <strcmp@plt+0x1c5fe>
  41fd76:	lea    rax,[rip+0x45033]        # 464db0 <strcmp@plt+0x61628>
  41fd7d:	mov    eax,DWORD PTR [rax]
  41fd7f:	add    eax,0x4
  41fd82:	cmp    eax,edi
  41fd84:	jl     41fd99 <strcmp@plt+0x1c611>
  41fd86:	lea    rsi,[rip+0x23928]        # 4436b5 <strcmp@plt+0x3ff2d>
  41fd8d:	lea    rdx,[rsp+0x10]
  41fd92:	xor    eax,eax
  41fd94:	call   42e800 <strcmp@plt+0x2b078>
  41fd99:	add    rsp,0xbc8
  41fda0:	pop    rbx
  41fda1:	pop    r12
  41fda3:	pop    r13
  41fda5:	pop    r14
  41fda7:	pop    r15
  41fda9:	pop    rbp
  41fdaa:	ret    
  41fdab:	nop    DWORD PTR [rax+rax*1+0x0]
  41fdb0:	push   rbp
  41fdb1:	push   r15
  41fdb3:	push   r14
  41fdb5:	push   r13
  41fdb7:	push   r12
  41fdb9:	push   rbx
  41fdba:	push   rax
  41fdbb:	mov    r12,QWORD PTR [rdi]
  41fdbe:	mov    r13d,DWORD PTR [r12+0x18]
  41fdc3:	mov    rbp,QWORD PTR [r12+0x8]
  41fdc8:	cmp    rbp,r12
  41fdcb:	je     41fe4f <strcmp@plt+0x1c6c7>
  41fdd1:	mov    r15,rsi
  41fdd4:	add    r13d,0xffffffff
  41fdd8:	lea    r14,[rip+0x3b91]        # 423970 <strcmp@plt+0x201e8>
  41fddf:	nop
  41fde0:	mov    rdi,QWORD PTR [rbp+0x10]
  41fde4:	call   428320 <strcmp@plt+0x24b98>
  41fde9:	mov    rbx,rax
  41fdec:	cmp    DWORD PTR [rax+0x18],0x3
  41fdf0:	jne    41fe20 <strcmp@plt+0x1c698>
  41fdf2:	mov    rdi,rbx
  41fdf5:	call   423330 <strcmp@plt+0x1fba8>
  41fdfa:	cmp    eax,0xa
  41fdfd:	jne    41fe20 <strcmp@plt+0x1c698>
  41fdff:	mov    rdi,rbx
  41fe02:	mov    rsi,r15
  41fe05:	call   41fee0 <strcmp@plt+0x1c758>
  41fe0a:	test   rax,rax
  41fe0d:	je     41fe3d <strcmp@plt+0x1c6b5>
  41fe0f:	jmp    41fe87 <strcmp@plt+0x1c6ff>
  41fe11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fe1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fe20:	mov    rdi,rbx
  41fe23:	call   4232e0 <strcmp@plt+0x1fb58>
  41fe28:	mov    rbx,rax
  41fe2b:	mov    rdi,rax
  41fe2e:	mov    rsi,r15
  41fe31:	mov    rdx,r14
  41fe34:	call   42bee0 <strcmp@plt+0x28758>
  41fe39:	cmp    al,0x1
  41fe3b:	je     41fe5f <strcmp@plt+0x1c6d7>
  41fe3d:	mov    rbp,QWORD PTR [rbp+0x8]
  41fe41:	add    r13d,0xffffffff
  41fe45:	cmp    rbp,r12
  41fe48:	jne    41fde0 <strcmp@plt+0x1c658>
  41fe4a:	mov    r13d,DWORD PTR [r12+0x18]
  41fe4f:	test   r13d,r13d
  41fe52:	je     41fe5b <strcmp@plt+0x1c6d3>
  41fe54:	mov    rax,QWORD PTR [r12+0x8]
  41fe59:	jmp    41fe68 <strcmp@plt+0x1c6e0>
  41fe5b:	xor    edi,edi
  41fe5d:	jmp    41fe6c <strcmp@plt+0x1c6e4>
  41fe5f:	test   r13d,r13d
  41fe62:	je     41fe8a <strcmp@plt+0x1c702>
  41fe64:	mov    rax,QWORD PTR [rbp+0x8]
  41fe68:	mov    rdi,QWORD PTR [rax+0x10]
  41fe6c:	call   428320 <strcmp@plt+0x24b98>
  41fe71:	mov    rdi,rax
  41fe74:	add    rsp,0x8
  41fe78:	pop    rbx
  41fe79:	pop    r12
  41fe7b:	pop    r13
  41fe7d:	pop    r14
  41fe7f:	pop    r15
  41fe81:	pop    rbp
  41fe82:	jmp    4232e0 <strcmp@plt+0x1fb58>
  41fe87:	mov    rbx,rax
  41fe8a:	mov    rax,rbx
  41fe8d:	add    rsp,0x8
  41fe91:	pop    rbx
  41fe92:	pop    r12
  41fe94:	pop    r13
  41fe96:	pop    r14
  41fe98:	pop    r15
  41fe9a:	pop    rbp
  41fe9b:	ret    
  41fe9c:	nop    DWORD PTR [rax+0x0]
  41fea0:	mov    r8,QWORD PTR [rdi]
  41fea3:	mov    rdx,QWORD PTR [r8+0x8]
  41fea7:	cmp    rdx,r8
  41feaa:	je     41fedb <strcmp@plt+0x1c753>
  41feac:	mov    esi,0xffffffff
  41feb1:	xor    eax,eax
  41feb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41febd:	nop    DWORD PTR [rax]
  41fec0:	mov    rcx,QWORD PTR [rdx+0x10]
  41fec4:	movzx  edi,BYTE PTR [rcx+0x8]
  41fec8:	cmp    esi,edi
  41feca:	jge    41fed1 <strcmp@plt+0x1c749>
  41fecc:	mov    rax,QWORD PTR [rcx]
  41fecf:	mov    esi,edi
  41fed1:	mov    rdx,QWORD PTR [rdx+0x8]
  41fed5:	cmp    rdx,r8
  41fed8:	jne    41fec0 <strcmp@plt+0x1c738>
  41feda:	ret    
  41fedb:	xor    eax,eax
  41fedd:	ret    
  41fede:	xchg   ax,ax
  41fee0:	push   r15
  41fee2:	push   r14
  41fee4:	push   rbx
  41fee5:	mov    rbx,rdi
  41fee8:	mov    eax,DWORD PTR [rdi+0x18]
  41feeb:	cmp    eax,0x1
  41feee:	je     41ff8b <strcmp@plt+0x1c803>
  41fef4:	cmp    eax,0x3
  41fef7:	je     41ff19 <strcmp@plt+0x1c791>
  41fef9:	cmp    eax,0x2
  41fefc:	jne    41ff89 <strcmp@plt+0x1c801>
  41ff02:	lea    rsi,[rip+0x28bcb]        # 448ad4 <strcmp@plt+0x4534c>
  41ff09:	xor    ebx,ebx
  41ff0b:	mov    edi,0x3
  41ff10:	xor    eax,eax
  41ff12:	call   42e800 <strcmp@plt+0x2b078>
  41ff17:	jmp    41ff8b <strcmp@plt+0x1c803>
  41ff19:	mov    r14,rsi
  41ff1c:	mov    rdi,rbx
  41ff1f:	call   426ab0 <strcmp@plt+0x23328>
  41ff24:	mov    eax,eax
  41ff26:	lea    r15,[rip+0x448c3]        # 4647f0 <strcmp@plt+0x61068>
  41ff2d:	cmp    QWORD PTR [r15+rax*8],0x0
  41ff32:	je     41ff5a <strcmp@plt+0x1c7d2>
  41ff34:	mov    rdi,rbx
  41ff37:	call   426ab0 <strcmp@plt+0x23328>
  41ff3c:	mov    eax,eax
  41ff3e:	mov    r15,QWORD PTR [r15+rax*8]
  41ff42:	mov    rdi,rbx
  41ff45:	call   426b30 <strcmp@plt+0x233a8>
  41ff4a:	mov    rdi,rax
  41ff4d:	mov    rsi,r14
  41ff50:	mov    rax,r15
  41ff53:	pop    rbx
  41ff54:	pop    r14
  41ff56:	pop    r15
  41ff58:	jmp    rax
  41ff5a:	lea    rax,[rip+0x44e4f]        # 464db0 <strcmp@plt+0x61628>
  41ff61:	cmp    DWORD PTR [rax],0x0
  41ff64:	jle    41ff89 <strcmp@plt+0x1c801>
  41ff66:	mov    rdi,rbx
  41ff69:	call   426ab0 <strcmp@plt+0x23328>
  41ff6e:	mov    ecx,eax
  41ff70:	lea    rsi,[rip+0x28b8f]        # 448b06 <strcmp@plt+0x4537e>
  41ff77:	xor    ebx,ebx
  41ff79:	mov    edi,0x5
  41ff7e:	xor    eax,eax
  41ff80:	mov    edx,ecx
  41ff82:	call   42e800 <strcmp@plt+0x2b078>
  41ff87:	jmp    41ff8b <strcmp@plt+0x1c803>
  41ff89:	xor    ebx,ebx
  41ff8b:	mov    rax,rbx
  41ff8e:	pop    rbx
  41ff8f:	pop    r14
  41ff91:	pop    r15
  41ff93:	ret    
  41ff94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ff9e:	xchg   ax,ax
  41ffa0:	push   r15
  41ffa2:	push   r14
  41ffa4:	push   rbx
  41ffa5:	mov    r14,rsi
  41ffa8:	mov    rbx,rdi
  41ffab:	call   426ab0 <strcmp@plt+0x23328>
  41ffb0:	mov    eax,eax
  41ffb2:	lea    r15,[rip+0x44837]        # 4647f0 <strcmp@plt+0x61068>
  41ffb9:	cmp    QWORD PTR [r15+rax*8],0x0
  41ffbe:	je     41ffe6 <strcmp@plt+0x1c85e>
  41ffc0:	mov    rdi,rbx
  41ffc3:	call   426ab0 <strcmp@plt+0x23328>
  41ffc8:	mov    eax,eax
  41ffca:	mov    r15,QWORD PTR [r15+rax*8]
  41ffce:	mov    rdi,rbx
  41ffd1:	call   426b30 <strcmp@plt+0x233a8>
  41ffd6:	mov    rdi,rax
  41ffd9:	mov    rsi,r14
  41ffdc:	mov    rax,r15
  41ffdf:	pop    rbx
  41ffe0:	pop    r14
  41ffe2:	pop    r15
  41ffe4:	jmp    rax
  41ffe6:	lea    rax,[rip+0x44dc3]        # 464db0 <strcmp@plt+0x61628>
  41ffed:	cmp    DWORD PTR [rax],0x0
  41fff0:	jle    420011 <strcmp@plt+0x1c889>
  41fff2:	mov    rdi,rbx
  41fff5:	call   426ab0 <strcmp@plt+0x23328>
  41fffa:	mov    ecx,eax
  41fffc:	lea    rsi,[rip+0x28b03]        # 448b06 <strcmp@plt+0x4537e>
  420003:	mov    edi,0x5
  420008:	xor    eax,eax
  42000a:	mov    edx,ecx
  42000c:	call   42e800 <strcmp@plt+0x2b078>
  420011:	xor    eax,eax
  420013:	pop    rbx
  420014:	pop    r14
  420016:	pop    r15
  420018:	ret    
  420019:	nop    DWORD PTR [rax+0x0]
  420020:	push   r14
  420022:	push   rbx
  420023:	push   rax
  420024:	mov    rbx,rdi
  420027:	lea    rsi,[rip+0x28b09]        # 448b37 <strcmp@plt+0x453af>
  42002e:	call   403788 <strcmp@plt>
  420033:	test   eax,eax
  420035:	je     420065 <strcmp@plt+0x1c8dd>
  420037:	lea    rsi,[rip+0x28b08]        # 448b46 <strcmp@plt+0x453be>
  42003e:	mov    rdi,rbx
  420041:	call   403788 <strcmp@plt>
  420046:	test   eax,eax
  420048:	je     42006e <strcmp@plt+0x1c8e6>
  42004a:	lea    rsi,[rip+0x28b03]        # 448b54 <strcmp@plt+0x453cc>
  420051:	xor    r14d,r14d
  420054:	mov    edi,0x2
  420059:	xor    eax,eax
  42005b:	mov    rdx,rbx
  42005e:	call   42e800 <strcmp@plt+0x2b078>
  420063:	jmp    420075 <strcmp@plt+0x1c8ed>
  420065:	lea    r14,[rip+0x44804]        # 464870 <strcmp@plt+0x610e8>
  42006c:	jmp    420075 <strcmp@plt+0x1c8ed>
  42006e:	lea    r14,[rip+0x504bb]        # 470530 <strcmp@plt+0x6cda8>
  420075:	mov    rax,r14
  420078:	add    rsp,0x8
  42007c:	pop    rbx
  42007d:	pop    r14
  42007f:	ret    
  420080:	push   rbx
  420081:	mov    edi,0x8
  420086:	call   432070 <strcmp@plt+0x2e8e8>
  42008b:	mov    rbx,rax
  42008e:	mov    rdi,QWORD PTR [rip+0x43f13]        # 463fa8 <strcmp@plt+0x60820>
  420095:	call   436260 <strcmp@plt+0x32ad8>
  42009a:	mov    QWORD PTR [rbx],rax
  42009d:	mov    rax,rbx
  4200a0:	pop    rbx
  4200a1:	ret    
  4200a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4200ac:	nop    DWORD PTR [rax+0x0]
  4200b0:	push   rbx
  4200b1:	mov    rbx,rdi
  4200b4:	mov    rdi,QWORD PTR [rdi]
  4200b7:	call   436870 <strcmp@plt+0x330e8>
  4200bc:	mov    rdi,rbx
  4200bf:	pop    rbx
  4200c0:	jmp    403780 <free@plt>
  4200c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4200cf:	nop
  4200d0:	push   r14
  4200d2:	push   rbx
  4200d3:	push   rax
  4200d4:	mov    r14,rdi
  4200d7:	mov    edi,0x18
  4200dc:	call   432070 <strcmp@plt+0x2e8e8>
  4200e1:	mov    rbx,rax
  4200e4:	mov    rdi,r14
  4200e7:	call   423740 <strcmp@plt+0x1ffb8>
  4200ec:	mov    QWORD PTR [rbx],rax
  4200ef:	xor    eax,eax
  4200f1:	call   436230 <strcmp@plt+0x32aa8>
  4200f6:	mov    QWORD PTR [rbx+0x8],rax
  4200fa:	lea    rdi,[rip+0x1f]        # 420120 <strcmp@plt+0x1c998>
  420101:	call   42bc00 <strcmp@plt+0x28478>
  420106:	mov    QWORD PTR [rbx+0x10],rax
  42010a:	mov    rax,rbx
  42010d:	add    rsp,0x8
  420111:	pop    rbx
  420112:	pop    r14
  420114:	ret    
  420115:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42011f:	nop
  420120:	push   rbx
  420121:	mov    rbx,rdi
  420124:	mov    rdi,QWORD PTR [rdi]
  420127:	call   422fa0 <strcmp@plt+0x1f818>
  42012c:	mov    rdi,QWORD PTR [rbx+0x8]
  420130:	call   436870 <strcmp@plt+0x330e8>
  420135:	mov    rdi,rbx
  420138:	pop    rbx
  420139:	jmp    403780 <free@plt>
  42013e:	xchg   ax,ax
  420140:	push   rbx
  420141:	mov    rbx,rdi
  420144:	mov    rdi,QWORD PTR [rdi]
  420147:	call   422fa0 <strcmp@plt+0x1f818>
  42014c:	mov    rdi,QWORD PTR [rbx+0x8]
  420150:	call   436870 <strcmp@plt+0x330e8>
  420155:	mov    rdi,QWORD PTR [rbx+0x10]
  420159:	call   42c250 <strcmp@plt+0x28ac8>
  42015e:	mov    rdi,rbx
  420161:	pop    rbx
  420162:	jmp    403780 <free@plt>
  420167:	nop    WORD PTR [rax+rax*1+0x0]
  420170:	push   r14
  420172:	push   rbx
  420173:	push   rax
  420174:	mov    r14,rdi
  420177:	mov    edi,0x10
  42017c:	call   432070 <strcmp@plt+0x2e8e8>
  420181:	mov    rbx,rax
  420184:	mov    rdi,r14
  420187:	call   423740 <strcmp@plt+0x1ffb8>
  42018c:	mov    QWORD PTR [rbx],rax
  42018f:	xor    eax,eax
  420191:	call   436230 <strcmp@plt+0x32aa8>
  420196:	mov    QWORD PTR [rbx+0x8],rax
  42019a:	mov    rax,rbx
  42019d:	add    rsp,0x8
  4201a1:	pop    rbx
  4201a2:	pop    r14
  4201a4:	ret    
  4201a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4201af:	nop
  4201b0:	mov    edi,0x20
  4201b5:	jmp    432070 <strcmp@plt+0x2e8e8>
  4201ba:	nop    WORD PTR [rax+rax*1+0x0]
  4201c0:	push   rbx
  4201c1:	mov    rbx,rdi
  4201c4:	mov    rax,QWORD PTR [rdi+0x18]
  4201c8:	test   rax,rax
  4201cb:	je     4201d3 <strcmp@plt+0x1ca4b>
  4201cd:	mov    rdi,QWORD PTR [rbx+0x8]
  4201d1:	call   rax
  4201d3:	mov    rdi,QWORD PTR [rbx]
  4201d6:	test   rdi,rdi
  4201d9:	je     4201e0 <strcmp@plt+0x1ca58>
  4201db:	call   422fa0 <strcmp@plt+0x1f818>
  4201e0:	mov    rdi,rbx
  4201e3:	pop    rbx
  4201e4:	jmp    403780 <free@plt>
  4201e9:	nop    DWORD PTR [rax+0x0]
  4201f0:	push   rbp
  4201f1:	push   r15
  4201f3:	push   r14
  4201f5:	push   r13
  4201f7:	push   r12
  4201f9:	push   rbx
  4201fa:	sub    rsp,0x28
  4201fe:	mov    QWORD PTR [rsp+0x20],r8
  420203:	mov    QWORD PTR [rsp+0x18],rcx
  420208:	mov    QWORD PTR [rsp+0x10],rdx
  42020d:	mov    QWORD PTR [rsp+0x8],rdi
  420212:	mov    rax,QWORD PTR [rdi+0x28]
  420216:	cmp    DWORD PTR [rax+0x18],0x0
  42021a:	je     4202eb <strcmp@plt+0x1cb63>
  420220:	mov    r15,QWORD PTR [rax+0x8]
  420224:	cmp    r15,rax
  420227:	je     4202f7 <strcmp@plt+0x1cb6f>
  42022d:	mov    rbx,rsi
  420230:	mov    r12,QWORD PTR [r15+0x10]
  420234:	cmp    DWORD PTR [r12+0x18],0x0
  42023a:	je     4202dc <strcmp@plt+0x1cb54>
  420240:	mov    r13,QWORD PTR [r12+0x8]
  420245:	mov    r14,QWORD PTR [r13+0x10]
  420249:	mov    rcx,QWORD PTR [r14]
  42024c:	cmp    DWORD PTR [rcx+0x18],0x0
  420250:	je     4202dc <strcmp@plt+0x1cb54>
  420256:	cmp    r13,r12
  420259:	jne    420264 <strcmp@plt+0x1cadc>
  42025b:	jmp    4202dc <strcmp@plt+0x1cb54>
  420260:	mov    r14,QWORD PTR [r13+0x10]
  420264:	mov    rbp,QWORD PTR [r14]
  420267:	mov    rdi,rbp
  42026a:	mov    rsi,rbx
  42026d:	call   QWORD PTR [rsp+0x20]
  420271:	test   rax,rax
  420274:	je     420290 <strcmp@plt+0x1cb08>
  420276:	mov    rdi,rax
  420279:	call   423200 <strcmp@plt+0x1fa78>
  42027e:	movzx  eax,ax
  420281:	mov    rdi,r14
  420284:	cmp    eax,0x2
  420287:	jne    4202c0 <strcmp@plt+0x1cb38>
  420289:	mov    rsi,QWORD PTR [rsp+0x10]
  42028e:	jmp    4202c5 <strcmp@plt+0x1cb3d>
  420290:	lea    rax,[rip+0x44b19]        # 464db0 <strcmp@plt+0x61628>
  420297:	cmp    DWORD PTR [rax],0x2
  42029a:	jl     4202ca <strcmp@plt+0x1cb42>
  42029c:	mov    rdi,rbp
  42029f:	call   423130 <strcmp@plt+0x1f9a8>
  4202a4:	mov    rcx,rax
  4202a7:	mov    edi,0x6
  4202ac:	xor    eax,eax
  4202ae:	lea    rsi,[rip+0x2891c]        # 448bd1 <strcmp@plt+0x45449>
  4202b5:	mov    rdx,rcx
  4202b8:	call   42e800 <strcmp@plt+0x2b078>
  4202bd:	jmp    4202ca <strcmp@plt+0x1cb42>
  4202bf:	nop
  4202c0:	mov    rsi,QWORD PTR [rsp+0x18]
  4202c5:	call   42bcf0 <strcmp@plt+0x28568>
  4202ca:	mov    r13,QWORD PTR [r13+0x8]
  4202ce:	cmp    r13,r12
  4202d1:	jne    420260 <strcmp@plt+0x1cad8>
  4202d3:	mov    rax,QWORD PTR [rsp+0x8]
  4202d8:	mov    rax,QWORD PTR [rax+0x28]
  4202dc:	mov    r15,QWORD PTR [r15+0x8]
  4202e0:	cmp    r15,rax
  4202e3:	jne    420230 <strcmp@plt+0x1caa8>
  4202e9:	jmp    4202f7 <strcmp@plt+0x1cb6f>
  4202eb:	lea    rax,[rip+0x44abe]        # 464db0 <strcmp@plt+0x61628>
  4202f2:	cmp    DWORD PTR [rax],0x3
  4202f5:	jge    420306 <strcmp@plt+0x1cb7e>
  4202f7:	add    rsp,0x28
  4202fb:	pop    rbx
  4202fc:	pop    r12
  4202fe:	pop    r13
  420300:	pop    r14
  420302:	pop    r15
  420304:	pop    rbp
  420305:	ret    
  420306:	mov    rdi,QWORD PTR [rsp+0x8]
  42030b:	call   423130 <strcmp@plt+0x1f9a8>
  420310:	mov    rcx,rax
  420313:	lea    rsi,[rip+0x2886d]        # 448b87 <strcmp@plt+0x453ff>
  42031a:	mov    edi,0x7
  42031f:	xor    eax,eax
  420321:	mov    rdx,rcx
  420324:	add    rsp,0x28
  420328:	pop    rbx
  420329:	pop    r12
  42032b:	pop    r13
  42032d:	pop    r14
  42032f:	pop    r15
  420331:	pop    rbp
  420332:	jmp    42e800 <strcmp@plt+0x2b078>
  420337:	nop    WORD PTR [rax+rax*1+0x0]
  420340:	push   r14
  420342:	push   rbx
  420343:	push   rax
  420344:	mov    r14,rdi
  420347:	mov    edi,0x10
  42034c:	call   432070 <strcmp@plt+0x2e8e8>
  420351:	mov    rbx,rax
  420354:	test   rax,rax
  420357:	je     420379 <strcmp@plt+0x1cbf1>
  420359:	mov    rdi,r14
  42035c:	call   4079d0 <strcmp@plt+0x4248>
  420361:	mov    DWORD PTR [rbx],eax
  420363:	mov    rdi,r14
  420366:	call   4079e0 <strcmp@plt+0x4258>
  42036b:	mov    rdi,rax
  42036e:	call   407830 <strcmp@plt+0x40a8>
  420373:	mov    QWORD PTR [rbx+0x8],rax
  420377:	jmp    42038c <strcmp@plt+0x1cc04>
  420379:	lea    rsi,[rip+0x28880]        # 448c00 <strcmp@plt+0x45478>
  420380:	mov    edi,0x3
  420385:	xor    eax,eax
  420387:	call   42e800 <strcmp@plt+0x2b078>
  42038c:	mov    rax,rbx
  42038f:	add    rsp,0x8
  420393:	pop    rbx
  420394:	pop    r14
  420396:	ret    
  420397:	nop    WORD PTR [rax+rax*1+0x0]
  4203a0:	jmp    403780 <free@plt>
  4203a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4203af:	nop
  4203b0:	push   rbp
  4203b1:	push   rbx
  4203b2:	push   rax
  4203b3:	mov    rbx,rsi
  4203b6:	mov    rbp,rdi
  4203b9:	mov    rdi,rsi
  4203bc:	call   431ad0 <strcmp@plt+0x2e348>
  4203c1:	mov    rsi,QWORD PTR [rbp+0x8]
  4203c5:	xor    ebp,ebp
  4203c7:	xor    edx,edx
  4203c9:	mov    rdi,rax
  4203cc:	call   41ee80 <strcmp@plt+0x1b6f8>
  4203d1:	test   rax,rax
  4203d4:	je     4203ed <strcmp@plt+0x1cc65>
  4203d6:	lea    rdx,[rip+0xfffffffffffff6e3]        # 41fac0 <strcmp@plt+0x1c338>
  4203dd:	mov    rdi,rbx
  4203e0:	mov    rsi,rax
  4203e3:	call   431b00 <strcmp@plt+0x2e378>
  4203e8:	mov    ebp,0x1
  4203ed:	mov    eax,ebp
  4203ef:	add    rsp,0x8
  4203f3:	pop    rbx
  4203f4:	pop    rbp
  4203f5:	ret    
  4203f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420400:	push   rbp
  420401:	push   rbx
  420402:	push   rax
  420403:	mov    rbx,rsi
  420406:	mov    rax,QWORD PTR [rsi+0x8]
  42040a:	mov    rsi,QWORD PTR [rdi+0x8]
  42040e:	mov    ebp,0x1
  420413:	mov    edx,0x1
  420418:	mov    rdi,rax
  42041b:	call   41ee80 <strcmp@plt+0x1b6f8>
  420420:	test   rax,rax
  420423:	je     420436 <strcmp@plt+0x1ccae>
  420425:	mov    QWORD PTR [rbx+0x20],rax
  420429:	lea    rax,[rip+0xfffffffffffff690]        # 41fac0 <strcmp@plt+0x1c338>
  420430:	mov    QWORD PTR [rbx+0x28],rax
  420434:	jmp    420438 <strcmp@plt+0x1ccb0>
  420436:	xor    ebp,ebp
  420438:	mov    eax,ebp
  42043a:	add    rsp,0x8
  42043e:	pop    rbx
  42043f:	pop    rbp
  420440:	ret    
  420441:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42044b:	nop    DWORD PTR [rax+rax*1+0x0]
  420450:	push   r15
  420452:	push   r14
  420454:	push   rbx
  420455:	mov    rbx,rsi
  420458:	mov    r14,rdi
  42045b:	mov    rdi,rsi
  42045e:	call   431af0 <strcmp@plt+0x2e368>
  420463:	mov    r15,rax
  420466:	mov    rdi,rbx
  420469:	call   431ad0 <strcmp@plt+0x2e348>
  42046e:	mov    rdx,QWORD PTR [r14+0x8]
  420472:	xor    ecx,ecx
  420474:	mov    rdi,r15
  420477:	mov    rsi,rax
  42047a:	pop    rbx
  42047b:	pop    r14
  42047d:	pop    r15
  42047f:	jmp    41eee0 <strcmp@plt+0x1b758>
  420484:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42048e:	xchg   ax,ax
  420490:	mov    rax,QWORD PTR [rsi+0x8]
  420494:	mov    rsi,QWORD PTR [rsi+0x20]
  420498:	mov    rdx,QWORD PTR [rdi+0x8]
  42049c:	mov    ecx,0x1
  4204a1:	mov    rdi,rsi
  4204a4:	mov    rsi,rax
  4204a7:	jmp    41eee0 <strcmp@plt+0x1b758>
  4204ac:	nop    DWORD PTR [rax+0x0]
  4204b0:	push   rbp
  4204b1:	push   r15
  4204b3:	push   r14
  4204b5:	push   r13
  4204b7:	push   r12
  4204b9:	push   rbx
  4204ba:	sub    rsp,0x18
  4204be:	mov    QWORD PTR [rsp+0x8],r9
  4204c3:	mov    r13,r8
  4204c6:	mov    QWORD PTR [rsp+0x10],rcx
  4204cb:	mov    r14,rdx
  4204ce:	mov    r12,rsi
  4204d1:	mov    r15,rdi
  4204d4:	mov    rdi,rsi
  4204d7:	call   431b40 <strcmp@plt+0x2e3b8>
  4204dc:	mov    rbx,rax
  4204df:	mov    rdi,r14
  4204e2:	call   430ae0 <strcmp@plt+0x2d358>
  4204e7:	mov    rbp,rax
  4204ea:	mov    rdi,rbx
  4204ed:	mov    rsi,rax
  4204f0:	call   423a90 <strcmp@plt+0x20308>
  4204f5:	test   eax,eax
  4204f7:	je     42050f <strcmp@plt+0x1cd87>
  4204f9:	cmp    DWORD PTR [rbx+0x18],0x0
  4204fd:	je     42050f <strcmp@plt+0x1cd87>
  4204ff:	mov    rdi,rbp
  420502:	call   438180 <strcmp@plt+0x349f8>
  420507:	test   al,al
  420509:	je     4205e3 <strcmp@plt+0x1ce5b>
  42050f:	cmp    DWORD PTR [r15],0x2
  420513:	jne    42054a <strcmp@plt+0x1cdc2>
  420515:	mov    rax,QWORD PTR [r14+0x30]
  420519:	test   rax,rax
  42051c:	je     42054a <strcmp@plt+0x1cdc2>
  42051e:	cmp    QWORD PTR [rax],0x0
  420522:	je     42054a <strcmp@plt+0x1cdc2>
  420524:	mov    rsi,r12
  420527:	mov    rdx,r14
  42052a:	mov    rcx,r13
  42052d:	mov    rbp,QWORD PTR [rsp+0x8]
  420532:	mov    r8,rbp
  420535:	call   4206c0 <strcmp@plt+0x1cf38>
  42053a:	mov    ebx,0x1
  42053f:	cmp    eax,0xfffffff6
  420542:	jne    420675 <strcmp@plt+0x1ceed>
  420548:	jmp    42057b <strcmp@plt+0x1cdf3>
  42054a:	mov    rdi,r15
  42054d:	mov    rsi,r12
  420550:	mov    rdx,r14
  420553:	mov    rcx,r13
  420556:	mov    rbp,QWORD PTR [rsp+0x8]
  42055b:	mov    r8,rbp
  42055e:	call   420990 <strcmp@plt+0x1d208>
  420563:	mov    ebx,0x1
  420568:	cmp    eax,0xfffffff6
  42056b:	jne    420675 <strcmp@plt+0x1ceed>
  420571:	mov    rax,QWORD PTR [r14+0x8]
  420575:	cmp    DWORD PTR [rax+0x18],0x3
  420579:	jne    420587 <strcmp@plt+0x1cdff>
  42057b:	mov    DWORD PTR [rbp+0x10],0x3
  420582:	jmp    420675 <strcmp@plt+0x1ceed>
  420587:	cmp    BYTE PTR [rax+0x34],0x1
  42058b:	jne    420675 <strcmp@plt+0x1ceed>
  420591:	mov    r14,QWORD PTR [rsp+0x10]
  420596:	test   r14,r14
  420599:	je     42066e <strcmp@plt+0x1cee6>
  42059f:	mov    rdi,r15
  4205a2:	mov    rsi,r12
  4205a5:	mov    rdx,r14
  4205a8:	mov    rcx,r13
  4205ab:	mov    r8,rbp
  4205ae:	call   420990 <strcmp@plt+0x1d208>
  4205b3:	cmp    eax,0xfffffff6
  4205b6:	jne    42062e <strcmp@plt+0x1cea6>
  4205b8:	mov    rdi,r14
  4205bb:	call   430af0 <strcmp@plt+0x2d368>
  4205c0:	lea    rcx,[rip+0x447e9]        # 464db0 <strcmp@plt+0x61628>
  4205c7:	mov    ecx,DWORD PTR [rcx]
  4205c9:	cmp    al,0x1
  4205cb:	jne    420656 <strcmp@plt+0x1cece>
  4205d1:	cmp    ecx,0x3
  4205d4:	jl     42066e <strcmp@plt+0x1cee6>
  4205da:	lea    rsi,[rip+0x286a0]        # 448c81 <strcmp@plt+0x454f9>
  4205e1:	jmp    420662 <strcmp@plt+0x1ceda>
  4205e3:	lea    rax,[rip+0x447c6]        # 464db0 <strcmp@plt+0x61628>
  4205ea:	cmp    DWORD PTR [rax],0x3
  4205ed:	jl     42061b <strcmp@plt+0x1ce93>
  4205ef:	mov    rdi,rbx
  4205f2:	call   423130 <strcmp@plt+0x1f9a8>
  4205f7:	mov    rbx,rax
  4205fa:	mov    rdi,rbp
  4205fd:	call   423130 <strcmp@plt+0x1f9a8>
  420602:	mov    rcx,rax
  420605:	lea    rsi,[rip+0x2862e]        # 448c3a <strcmp@plt+0x454b2>
  42060c:	mov    edi,0x7
  420611:	xor    eax,eax
  420613:	mov    rdx,rbx
  420616:	call   42e800 <strcmp@plt+0x2b078>
  42061b:	mov    rax,QWORD PTR [rsp+0x8]
  420620:	mov    DWORD PTR [rax+0x10],0x0
  420627:	mov    ebx,0xfffffff6
  42062c:	jmp    420675 <strcmp@plt+0x1ceed>
  42062e:	mov    DWORD PTR [rbp+0x10],0x1
  420635:	lea    rax,[rip+0x44774]        # 464db0 <strcmp@plt+0x61628>
  42063c:	cmp    DWORD PTR [rax],0x3
  42063f:	jl     420675 <strcmp@plt+0x1ceed>
  420641:	lea    rsi,[rip+0x286bd]        # 448d05 <strcmp@plt+0x4557d>
  420648:	mov    edi,0x7
  42064d:	xor    eax,eax
  42064f:	call   42e800 <strcmp@plt+0x2b078>
  420654:	jmp    420675 <strcmp@plt+0x1ceed>
  420656:	cmp    ecx,0x3
  420659:	jl     42066e <strcmp@plt+0x1cee6>
  42065b:	lea    rsi,[rip+0x2865c]        # 448cbe <strcmp@plt+0x45536>
  420662:	mov    edi,0x7
  420667:	xor    eax,eax
  420669:	call   42e800 <strcmp@plt+0x2b078>
  42066e:	mov    DWORD PTR [rbp+0x10],0x0
  420675:	mov    eax,ebx
  420677:	add    rsp,0x18
  42067b:	pop    rbx
  42067c:	pop    r12
  42067e:	pop    r13
  420680:	pop    r14
  420682:	pop    r15
  420684:	pop    rbp
  420685:	ret    
  420686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420690:	push   rbx
  420691:	mov    edi,0x10
  420696:	call   432070 <strcmp@plt+0x2e8e8>
  42069b:	mov    rbx,rax
  42069e:	test   rax,rax
  4206a1:	jne    4206b6 <strcmp@plt+0x1cf2e>
  4206a3:	lea    rsi,[rip+0x28556]        # 448c00 <strcmp@plt+0x45478>
  4206aa:	mov    edi,0x3
  4206af:	xor    eax,eax
  4206b1:	call   42e800 <strcmp@plt+0x2b078>
  4206b6:	mov    rax,rbx
  4206b9:	pop    rbx
  4206ba:	ret    
  4206bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4206c0:	push   rbp
  4206c1:	push   r15
  4206c3:	push   r14
  4206c5:	push   r13
  4206c7:	push   r12
  4206c9:	push   rbx
  4206ca:	sub    rsp,0x28
  4206ce:	mov    r14,r8
  4206d1:	mov    r13,rcx
  4206d4:	mov    rbp,rdx
  4206d7:	mov    rax,QWORD PTR [rdx+0x30]
  4206db:	mov    r15,QWORD PTR [rax]
  4206de:	mov    rdi,rsi
  4206e1:	call   431af0 <strcmp@plt+0x2e368>
  4206e6:	mov    rcx,QWORD PTR [rbp+0x8]
  4206ea:	cmp    WORD PTR [rcx+0x20],0x0
  4206ef:	je     420725 <strcmp@plt+0x1cf9d>
  4206f1:	mov    rcx,QWORD PTR [rbp+0x20]
  4206f5:	cmp    QWORD PTR [rax+0x10],0x0
  4206fa:	je     42070c <strcmp@plt+0x1cf84>
  4206fc:	mov    rbx,QWORD PTR [rcx+0x10]
  420700:	test   rbx,rbx
  420703:	je     42070c <strcmp@plt+0x1cf84>
  420705:	mov    eax,0x20
  42070a:	jmp    420769 <strcmp@plt+0x1cfe1>
  42070c:	mov    rdx,QWORD PTR [rax+0x8]
  420710:	test   rdx,rdx
  420713:	je     42074e <strcmp@plt+0x1cfc6>
  420715:	mov    rbx,QWORD PTR [rcx+0x8]
  420719:	test   rbx,rbx
  42071c:	je     42074e <strcmp@plt+0x1cfc6>
  42071e:	mov    eax,0x1c
  420723:	jmp    420769 <strcmp@plt+0x1cfe1>
  420725:	lea    rax,[rip+0x44684]        # 464db0 <strcmp@plt+0x61628>
  42072c:	mov    ebx,0xfffffff6
  420731:	cmp    DWORD PTR [rax],0x3
  420734:	jl     420927 <strcmp@plt+0x1d19f>
  42073a:	lea    rsi,[rip+0x2877b]        # 448ebc <strcmp@plt+0x45734>
  420741:	xor    r12d,r12d
  420744:	mov    edi,0x7
  420749:	jmp    420872 <strcmp@plt+0x1d0ea>
  42074e:	cmp    QWORD PTR [rax],0x0
  420752:	mov    rbx,QWORD PTR [rcx]
  420755:	je     4208cb <strcmp@plt+0x1d143>
  42075b:	test   rbx,rbx
  42075e:	je     4208d0 <strcmp@plt+0x1d148>
  420764:	mov    eax,0x18
  420769:	mov    r12d,DWORD PTR [rcx+rax*1]
  42076d:	mov    rdi,r13
  420770:	call   433650 <strcmp@plt+0x2fec8>
  420775:	test   eax,eax
  420777:	je     42084e <strcmp@plt+0x1d0c6>
  42077d:	xor    edx,edx
  42077f:	div    r12d
  420782:	mov    r12,QWORD PTR [rbx+rdx*8]
  420786:	mov    rdi,QWORD PTR [r15+0x8]
  42078a:	mov    rsi,r12
  42078d:	call   42c790 <strcmp@plt+0x29008>
  420792:	test   rax,rax
  420795:	je     42087e <strcmp@plt+0x1d0f6>
  42079b:	mov    rbx,rax
  42079e:	mov    r12,QWORD PTR [rax+0x18]
  4207a2:	mov    rbp,QWORD PTR [rax]
  4207a5:	movzx  r15d,WORD PTR [rax+0x8]
  4207aa:	lea    rax,[rip+0x445ff]        # 464db0 <strcmp@plt+0x61628>
  4207b1:	cmp    DWORD PTR [rax],0x3
  4207b4:	jl     420844 <strcmp@plt+0x1d0bc>
  4207ba:	mov    rdi,r13
  4207bd:	call   423130 <strcmp@plt+0x1f9a8>
  4207c2:	mov    QWORD PTR [rsp+0x20],rax
  4207c7:	lea    rdi,[r13+0x20]
  4207cb:	call   423130 <strcmp@plt+0x1f9a8>
  4207d0:	mov    QWORD PTR [rsp+0x10],rax
  4207d5:	movzx  eax,BYTE PTR [r13+0x44]
  4207da:	mov    DWORD PTR [rsp+0x4],eax
  4207de:	movzx  eax,WORD PTR [r13+0x40]
  4207e3:	mov    DWORD PTR [rsp],eax
  4207e6:	movzx  eax,WORD PTR [r13+0x42]
  4207eb:	mov    QWORD PTR [rsp+0x18],rax
  4207f0:	mov    rdi,QWORD PTR [rbx+0x18]
  4207f4:	call   423130 <strcmp@plt+0x1f9a8>
  4207f9:	mov    QWORD PTR [rsp+0x8],rax
  4207fe:	mov    rdi,QWORD PTR [rbx]
  420801:	call   423130 <strcmp@plt+0x1f9a8>
  420806:	mov    rbx,rax
  420809:	sub    rsp,0x8
  42080d:	lea    rsi,[rip+0x28650]        # 448e64 <strcmp@plt+0x456dc>
  420814:	mov    edi,0x7
  420819:	mov    eax,0x0
  42081e:	mov    rdx,QWORD PTR [rsp+0x28]
  420823:	mov    rcx,QWORD PTR [rsp+0x18]
  420828:	mov    r8d,DWORD PTR [rsp+0xc]
  42082d:	mov    r9d,DWORD PTR [rsp+0x8]
  420832:	push   rbx
  420833:	push   QWORD PTR [rsp+0x18]
  420837:	push   QWORD PTR [rsp+0x30]
  42083b:	call   42e800 <strcmp@plt+0x2b078>
  420840:	add    rsp,0x20
  420844:	mov    ebx,0x1
  420849:	jmp    42092f <strcmp@plt+0x1d1a7>
  42084e:	lea    rax,[rip+0x4455b]        # 464db0 <strcmp@plt+0x61628>
  420855:	mov    ebx,0xfffffff6
  42085a:	cmp    DWORD PTR [rax],0x0
  42085d:	jle    420927 <strcmp@plt+0x1d19f>
  420863:	lea    rsi,[rip+0x28744]        # 448fae <strcmp@plt+0x45826>
  42086a:	xor    r12d,r12d
  42086d:	mov    edi,0x5
  420872:	xor    eax,eax
  420874:	call   42e800 <strcmp@plt+0x2b078>
  420879:	jmp    42092a <strcmp@plt+0x1d1a2>
  42087e:	lea    rax,[rip+0x4452b]        # 464db0 <strcmp@plt+0x61628>
  420885:	mov    ebx,0xfffffff6
  42088a:	cmp    DWORD PTR [rax],0x0
  42088d:	jle    420927 <strcmp@plt+0x1d19f>
  420893:	mov    rdi,QWORD PTR [r12]
  420897:	call   423130 <strcmp@plt+0x1f9a8>
  42089c:	mov    rbx,rax
  42089f:	mov    rdi,QWORD PTR [rbp+0x8]
  4208a3:	call   429040 <strcmp@plt+0x258b8>
  4208a8:	mov    rcx,rax
  4208ab:	lea    rsi,[rip+0x28764]        # 449016 <strcmp@plt+0x4588e>
  4208b2:	xor    r12d,r12d
  4208b5:	mov    edi,0x5
  4208ba:	xor    eax,eax
  4208bc:	mov    rdx,rbx
  4208bf:	mov    ebx,0xfffffff6
  4208c4:	call   42e800 <strcmp@plt+0x2b078>
  4208c9:	jmp    42092a <strcmp@plt+0x1d1a2>
  4208cb:	test   rbx,rbx
  4208ce:	jne    4208dc <strcmp@plt+0x1d154>
  4208d0:	test   rdx,rdx
  4208d3:	je     4208f9 <strcmp@plt+0x1d171>
  4208d5:	cmp    QWORD PTR [rcx+0x8],0x0
  4208da:	je     420916 <strcmp@plt+0x1d18e>
  4208dc:	lea    rax,[rip+0x444cd]        # 464db0 <strcmp@plt+0x61628>
  4208e3:	mov    ebx,0xfffffff6
  4208e8:	cmp    DWORD PTR [rax],0x3
  4208eb:	jl     420927 <strcmp@plt+0x1d19f>
  4208ed:	lea    rsi,[rip+0x28670]        # 448f64 <strcmp@plt+0x457dc>
  4208f4:	jmp    420741 <strcmp@plt+0x1cfb9>
  4208f9:	lea    rax,[rip+0x444b0]        # 464db0 <strcmp@plt+0x61628>
  420900:	mov    ebx,0xfffffff6
  420905:	cmp    DWORD PTR [rax],0x3
  420908:	jl     420927 <strcmp@plt+0x1d19f>
  42090a:	lea    rsi,[rip+0x285eb]        # 448efc <strcmp@plt+0x45774>
  420911:	jmp    420741 <strcmp@plt+0x1cfb9>
  420916:	lea    rax,[rip+0x44493]        # 464db0 <strcmp@plt+0x61628>
  42091d:	mov    ebx,0xfffffff6
  420922:	cmp    DWORD PTR [rax],0x3
  420925:	jge    420982 <strcmp@plt+0x1d1fa>
  420927:	xor    r12d,r12d
  42092a:	xor    ebp,ebp
  42092c:	xor    r15d,r15d
  42092f:	mov    rdi,QWORD PTR [r14+0x8]
  420933:	test   rdi,rdi
  420936:	je     42093d <strcmp@plt+0x1d1b5>
  420938:	call   420d60 <strcmp@plt+0x1d5d8>
  42093d:	mov    r9d,DWORD PTR [r13+0x48]
  420941:	sub    rsp,0x8
  420945:	movzx  r8d,r15w
  420949:	mov    ecx,0x10f6
  42094e:	mov    rdi,r13
  420951:	mov    rsi,r12
  420954:	mov    rdx,rbp
  420957:	push   0x0
  420959:	call   420cd0 <strcmp@plt+0x1d548>
  42095e:	add    rsp,0x10
  420962:	mov    QWORD PTR [r14+0x8],rax
  420966:	lea    rax,[rip+0x3f3]        # 420d60 <strcmp@plt+0x1d5d8>
  42096d:	mov    QWORD PTR [r14+0x18],rax
  420971:	mov    eax,ebx
  420973:	add    rsp,0x28
  420977:	pop    rbx
  420978:	pop    r12
  42097a:	pop    r13
  42097c:	pop    r14
  42097e:	pop    r15
  420980:	pop    rbp
  420981:	ret    
  420982:	lea    rsi,[rip+0x285a7]        # 448f30 <strcmp@plt+0x457a8>
  420989:	jmp    420741 <strcmp@plt+0x1cfb9>
  42098e:	xchg   ax,ax
  420990:	push   rbp
  420991:	push   r15
  420993:	push   r14
  420995:	push   r13
  420997:	push   r12
  420999:	push   rbx
  42099a:	sub    rsp,0x28
  42099e:	mov    r15,r8
  4209a1:	mov    r13,rcx
  4209a4:	mov    rbx,rdx
  4209a7:	mov    r12,rdi
  4209aa:	mov    rdi,rsi
  4209ad:	call   431af0 <strcmp@plt+0x2e368>
  4209b2:	mov    rcx,QWORD PTR [rbx+0x8]
  4209b6:	cmp    WORD PTR [rcx+0x20],0x0
  4209bb:	je     4209ef <strcmp@plt+0x1d267>
  4209bd:	mov    r14,QWORD PTR [rbx+0x20]
  4209c1:	mov    rbp,QWORD PTR [rax+0x10]
  4209c5:	test   rbp,rbp
  4209c8:	je     4209d8 <strcmp@plt+0x1d250>
  4209ca:	cmp    QWORD PTR [r14+0x10],0x0
  4209cf:	je     4209d8 <strcmp@plt+0x1d250>
  4209d1:	mov    ecx,0x20
  4209d6:	jmp    420a34 <strcmp@plt+0x1d2ac>
  4209d8:	mov    rbp,QWORD PTR [rax+0x8]
  4209dc:	test   rbp,rbp
  4209df:	je     420a16 <strcmp@plt+0x1d28e>
  4209e1:	cmp    QWORD PTR [r14+0x8],0x0
  4209e6:	je     420a16 <strcmp@plt+0x1d28e>
  4209e8:	mov    ecx,0x1c
  4209ed:	jmp    420a34 <strcmp@plt+0x1d2ac>
  4209ef:	movzx  eax,BYTE PTR [rcx+0x34]
  4209f3:	mov    DWORD PTR [r15+0x10],eax
  4209f7:	lea    rax,[rip+0x443b2]        # 464db0 <strcmp@plt+0x61628>
  4209fe:	mov    r12d,0xfffffff6
  420a04:	cmp    DWORD PTR [rax],0x3
  420a07:	jge    420a8f <strcmp@plt+0x1d307>
  420a0d:	xor    ebx,ebx
  420a0f:	xor    ebp,ebp
  420a11:	jmp    420c2a <strcmp@plt+0x1d4a2>
  420a16:	mov    rdx,QWORD PTR [rax]
  420a19:	test   rdx,rdx
  420a1c:	je     420bbd <strcmp@plt+0x1d435>
  420a22:	cmp    QWORD PTR [r14],0x0
  420a26:	je     420bcc <strcmp@plt+0x1d444>
  420a2c:	mov    ecx,0x18
  420a31:	mov    rbp,rdx
  420a34:	mov    ebx,DWORD PTR [rax+rcx*1]
  420a37:	mov    QWORD PTR [rsp],r13
  420a3b:	mov    rdi,r13
  420a3e:	call   433650 <strcmp@plt+0x2fec8>
  420a43:	test   eax,eax
  420a45:	je     420aab <strcmp@plt+0x1d323>
  420a47:	mov    r13d,eax
  420a4a:	mov    QWORD PTR [rsp+0x8],r15
  420a4f:	xor    edx,edx
  420a51:	div    ebx
  420a53:	mov    rax,QWORD PTR [rbp+rdx*8+0x0]
  420a58:	mov    r15,QWORD PTR [rax]
  420a5b:	mov    rsi,QWORD PTR [r12+0x8]
  420a60:	mov    rdi,r15
  420a63:	call   41fee0 <strcmp@plt+0x1c758>
  420a68:	mov    rbx,rax
  420a6b:	mov    rdi,rax
  420a6e:	call   423200 <strcmp@plt+0x1fa78>
  420a73:	movzx  eax,ax
  420a76:	cmp    eax,0x2
  420a79:	je     420adb <strcmp@plt+0x1d353>
  420a7b:	cmp    eax,0xa
  420a7e:	jne    420ba7 <strcmp@plt+0x1d41f>
  420a84:	lea    rax,[r14+0x8]
  420a88:	mov    ecx,0x1c
  420a8d:	jmp    420ae3 <strcmp@plt+0x1d35b>
  420a8f:	lea    rsi,[rip+0x28289]        # 448d1f <strcmp@plt+0x45597>
  420a96:	xor    ebx,ebx
  420a98:	mov    edi,0x7
  420a9d:	xor    eax,eax
  420a9f:	call   42e800 <strcmp@plt+0x2b078>
  420aa4:	xor    ebp,ebp
  420aa6:	jmp    420c2a <strcmp@plt+0x1d4a2>
  420aab:	lea    rax,[rip+0x442fe]        # 464db0 <strcmp@plt+0x61628>
  420ab2:	mov    r12d,0xfffffff6
  420ab8:	cmp    DWORD PTR [rax],0x0
  420abb:	jle    420bf9 <strcmp@plt+0x1d471>
  420ac1:	lea    rsi,[rip+0x28311]        # 448dd9 <strcmp@plt+0x45651>
  420ac8:	xor    ebx,ebx
  420aca:	mov    edi,0x5
  420acf:	xor    eax,eax
  420ad1:	call   42e800 <strcmp@plt+0x2b078>
  420ad6:	jmp    420bfb <strcmp@plt+0x1d473>
  420adb:	mov    ecx,0x18
  420ae0:	mov    rax,r14
  420ae3:	mov    rsi,QWORD PTR [rax]
  420ae6:	xor    edx,edx
  420ae8:	mov    eax,r13d
  420aeb:	div    DWORD PTR [r14+rcx*1]
  420aef:	mov    rax,QWORD PTR [rsi+rdx*8]
  420af3:	mov    rdi,QWORD PTR [rax]
  420af6:	mov    rsi,QWORD PTR [r12+0x8]
  420afb:	call   41fee0 <strcmp@plt+0x1c758>
  420b00:	mov    rbp,rax
  420b03:	lea    rax,[rip+0x442a6]        # 464db0 <strcmp@plt+0x61628>
  420b0a:	mov    r12d,0x1
  420b10:	cmp    DWORD PTR [rax],0x3
  420b13:	jl     420c21 <strcmp@plt+0x1d499>
  420b19:	mov    r13,QWORD PTR [rsp]
  420b1d:	mov    rdi,r13
  420b20:	call   423130 <strcmp@plt+0x1f9a8>
  420b25:	mov    QWORD PTR [rsp+0x20],rax
  420b2a:	lea    rdi,[r13+0x20]
  420b2e:	call   423130 <strcmp@plt+0x1f9a8>
  420b33:	mov    QWORD PTR [rsp+0x18],rax
  420b38:	movzx  eax,BYTE PTR [r13+0x44]
  420b3d:	mov    DWORD PTR [rsp+0x14],eax
  420b41:	movzx  eax,WORD PTR [r13+0x40]
  420b46:	mov    DWORD PTR [rsp+0x10],eax
  420b4a:	movzx  r14d,WORD PTR [r13+0x42]
  420b4f:	mov    rdi,rbx
  420b52:	call   423130 <strcmp@plt+0x1f9a8>
  420b57:	mov    r15,rax
  420b5a:	mov    rdi,rbp
  420b5d:	call   423130 <strcmp@plt+0x1f9a8>
  420b62:	mov    r10,rax
  420b65:	sub    rsp,0x8
  420b69:	lea    rsi,[rip+0x282f4]        # 448e64 <strcmp@plt+0x456dc>
  420b70:	mov    edi,0x7
  420b75:	mov    eax,0x0
  420b7a:	mov    rdx,QWORD PTR [rsp+0x28]
  420b7f:	mov    rcx,QWORD PTR [rsp+0x20]
  420b84:	mov    r8d,DWORD PTR [rsp+0x1c]
  420b89:	mov    r9d,DWORD PTR [rsp+0x18]
  420b8e:	push   r10
  420b90:	push   r15
  420b92:	push   r14
  420b94:	call   42e800 <strcmp@plt+0x2b078>
  420b99:	add    rsp,0x20
  420b9d:	mov    r15,QWORD PTR [rsp+0x8]
  420ba2:	jmp    420c2a <strcmp@plt+0x1d4a2>
  420ba7:	lea    rax,[rip+0x44202]        # 464db0 <strcmp@plt+0x61628>
  420bae:	mov    r12d,0xfffffff6
  420bb4:	cmp    DWORD PTR [rax],0x2
  420bb7:	jge    420bff <strcmp@plt+0x1d477>
  420bb9:	xor    ebx,ebx
  420bbb:	jmp    420c1f <strcmp@plt+0x1d497>
  420bbd:	test   rbp,rbp
  420bc0:	je     420c80 <strcmp@plt+0x1d4f8>
  420bc6:	cmp    QWORD PTR [r14],0x0
  420bca:	jne    420bd7 <strcmp@plt+0x1d44f>
  420bcc:	cmp    QWORD PTR [r14+0x8],0x0
  420bd1:	je     420ca2 <strcmp@plt+0x1d51a>
  420bd7:	lea    rax,[rip+0x441d2]        # 464db0 <strcmp@plt+0x61628>
  420bde:	mov    r12d,0xfffffff6
  420be4:	cmp    DWORD PTR [rax],0x3
  420be7:	jl     420a0d <strcmp@plt+0x1d285>
  420bed:	lea    rsi,[rip+0x281a3]        # 448d97 <strcmp@plt+0x4560f>
  420bf4:	jmp    420a96 <strcmp@plt+0x1d30e>
  420bf9:	xor    ebx,ebx
  420bfb:	xor    ebp,ebp
  420bfd:	jmp    420c26 <strcmp@plt+0x1d49e>
  420bff:	mov    rdi,r15
  420c02:	call   423200 <strcmp@plt+0x1fa78>
  420c07:	movzx  edx,ax
  420c0a:	lea    rsi,[rip+0x2822a]        # 448e3b <strcmp@plt+0x456b3>
  420c11:	xor    ebx,ebx
  420c13:	mov    edi,0x6
  420c18:	xor    eax,eax
  420c1a:	call   42e800 <strcmp@plt+0x2b078>
  420c1f:	xor    ebp,ebp
  420c21:	mov    r15,QWORD PTR [rsp+0x8]
  420c26:	mov    r13,QWORD PTR [rsp]
  420c2a:	mov    rdi,QWORD PTR [r15+0x8]
  420c2e:	test   rdi,rdi
  420c31:	je     420c38 <strcmp@plt+0x1d4b0>
  420c33:	call   420d60 <strcmp@plt+0x1d5d8>
  420c38:	mov    r9d,DWORD PTR [r13+0x48]
  420c3c:	sub    rsp,0x8
  420c40:	mov    ecx,0x10f5
  420c45:	mov    r8d,0x10f5
  420c4b:	mov    rdi,r13
  420c4e:	mov    rsi,rbx
  420c51:	mov    rdx,rbp
  420c54:	push   0x0
  420c56:	call   420cd0 <strcmp@plt+0x1d548>
  420c5b:	add    rsp,0x10
  420c5f:	mov    QWORD PTR [r15+0x8],rax
  420c63:	lea    rax,[rip+0xf6]        # 420d60 <strcmp@plt+0x1d5d8>
  420c6a:	mov    QWORD PTR [r15+0x18],rax
  420c6e:	mov    eax,r12d
  420c71:	add    rsp,0x28
  420c75:	pop    rbx
  420c76:	pop    r12
  420c78:	pop    r13
  420c7a:	pop    r14
  420c7c:	pop    r15
  420c7e:	pop    rbp
  420c7f:	ret    
  420c80:	lea    rax,[rip+0x44129]        # 464db0 <strcmp@plt+0x61628>
  420c87:	mov    r12d,0xfffffff6
  420c8d:	cmp    DWORD PTR [rax],0x3
  420c90:	jl     420a0d <strcmp@plt+0x1d285>
  420c96:	lea    rsi,[rip+0x280a2]        # 448d3f <strcmp@plt+0x455b7>
  420c9d:	jmp    420a96 <strcmp@plt+0x1d30e>
  420ca2:	lea    rax,[rip+0x44107]        # 464db0 <strcmp@plt+0x61628>
  420ca9:	mov    r12d,0xfffffff6
  420caf:	cmp    DWORD PTR [rax],0x3
  420cb2:	jl     420a0d <strcmp@plt+0x1d285>
  420cb8:	lea    rsi,[rip+0x280ac]        # 448d6b <strcmp@plt+0x455e3>
  420cbf:	jmp    420a96 <strcmp@plt+0x1d30e>
  420cc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420cce:	xchg   ax,ax
  420cd0:	push   rbp
  420cd1:	push   r15
  420cd3:	push   r14
  420cd5:	push   r13
  420cd7:	push   r12
  420cd9:	push   rbx
  420cda:	push   rax
  420cdb:	mov    DWORD PTR [rsp+0x4],r9d
  420ce0:	mov    r15d,r8d
  420ce3:	mov    r12d,ecx
  420ce6:	mov    r13,rdx
  420ce9:	mov    rbp,rsi
  420cec:	mov    r14,rdi
  420cef:	mov    edi,0x30
  420cf4:	call   432070 <strcmp@plt+0x2e8e8>
  420cf9:	test   rax,rax
  420cfc:	je     420d40 <strcmp@plt+0x1d5b8>
  420cfe:	mov    rbx,rax
  420d01:	mov    rdi,r14
  420d04:	call   433820 <strcmp@plt+0x30098>
  420d09:	mov    QWORD PTR [rbx],rax
  420d0c:	mov    rdi,rbp
  420d0f:	call   423740 <strcmp@plt+0x1ffb8>
  420d14:	mov    QWORD PTR [rbx+0x8],rax
  420d18:	mov    rdi,r13
  420d1b:	call   423740 <strcmp@plt+0x1ffb8>
  420d20:	mov    QWORD PTR [rbx+0x10],rax
  420d24:	mov    WORD PTR [rbx+0x18],r12w
  420d29:	mov    WORD PTR [rbx+0x1a],r15w
  420d2e:	mov    eax,DWORD PTR [rsp+0x4]
  420d32:	mov    DWORD PTR [rbx+0x28],eax
  420d35:	mov    rax,QWORD PTR [rsp+0x40]
  420d3a:	mov    QWORD PTR [rbx+0x20],rax
  420d3e:	jmp    420d42 <strcmp@plt+0x1d5ba>
  420d40:	xor    ebx,ebx
  420d42:	mov    rax,rbx
  420d45:	add    rsp,0x8
  420d49:	pop    rbx
  420d4a:	pop    r12
  420d4c:	pop    r13
  420d4e:	pop    r14
  420d50:	pop    r15
  420d52:	pop    rbp
  420d53:	ret    
  420d54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420d5e:	xchg   ax,ax
  420d60:	test   rdi,rdi
  420d63:	je     420d8c <strcmp@plt+0x1d604>
  420d65:	push   rbx
  420d66:	mov    rbx,rdi
  420d69:	mov    rdi,QWORD PTR [rdi]
  420d6c:	call   433880 <strcmp@plt+0x300f8>
  420d71:	mov    rdi,QWORD PTR [rbx+0x8]
  420d75:	call   422fa0 <strcmp@plt+0x1f818>
  420d7a:	mov    rdi,QWORD PTR [rbx+0x10]
  420d7e:	call   422fa0 <strcmp@plt+0x1f818>
  420d83:	mov    rdi,rbx
  420d86:	pop    rbx
  420d87:	jmp    403780 <free@plt>
  420d8c:	ret    
  420d8d:	nop    DWORD PTR [rax]
  420d90:	movzx  ecx,WORD PTR [rdi+0x24]
  420d94:	xor    eax,eax
  420d96:	cmp    rcx,0xffff
  420d9d:	je     420db2 <strcmp@plt+0x1d62a>
  420d9f:	add    rcx,QWORD PTR [rdi+0x30]
  420da3:	je     420db2 <strcmp@plt+0x1d62a>
  420da5:	movzx  eax,WORD PTR [rcx]
  420da8:	mov    ecx,0x404
  420dad:	bextr  eax,eax,ecx
  420db2:	ret    
  420db3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420dbd:	nop    DWORD PTR [rax]
  420dc0:	mov    rax,QWORD PTR [rdi+0x38]
  420dc4:	mov    ecx,DWORD PTR [rdi+0x30]
  420dc7:	mov    edx,eax
  420dc9:	sub    edx,ecx
  420dcb:	mov    WORD PTR [rdi+0x1e],dx
  420dcf:	mov    ecx,DWORD PTR [rdi+0x14]
  420dd2:	cmp    ecx,0x4
  420dd5:	jae    420dda <strcmp@plt+0x1d652>
  420dd7:	xor    eax,eax
  420dd9:	ret    
  420dda:	mov    rdx,rax
  420ddd:	add    rdx,0x4
  420de1:	mov    QWORD PTR [rdi+0x38],rdx
  420de5:	add    ecx,0xfffffffc
  420de8:	mov    DWORD PTR [rdi+0x14],ecx
  420deb:	ret    
  420dec:	nop    DWORD PTR [rax+0x0]
  420df0:	push   rbp
  420df1:	push   r15
  420df3:	push   r14
  420df5:	push   r12
  420df7:	push   rbx
  420df8:	mov    rbx,rdi
  420dfb:	mov    eax,DWORD PTR [rdi+0x38]
  420dfe:	sub    eax,DWORD PTR [rdi+0x30]
  420e01:	mov    WORD PTR [rdi+0x20],ax
  420e05:	call   432d60 <strcmp@plt+0x2f5d8>
  420e0a:	xor    r14d,r14d
  420e0d:	test   rax,rax
  420e10:	je     420f56 <strcmp@plt+0x1d7ce>
  420e16:	mov    rbp,rax
  420e19:	mov    eax,DWORD PTR [rbx+0x38]
  420e1c:	sub    eax,DWORD PTR [rbx+0x30]
  420e1f:	mov    WORD PTR [rbx+0x22],ax
  420e23:	mov    rdi,rbx
  420e26:	call   432da0 <strcmp@plt+0x2f618>
  420e2b:	mov    r12,rax
  420e2e:	mov    eax,DWORD PTR [rbx+0x38]
  420e31:	sub    eax,DWORD PTR [rbx+0x30]
  420e34:	mov    WORD PTR [rbx+0x24],ax
  420e38:	movbe  bx,WORD PTR [r12+0x4]
  420e40:	mov    al,BYTE PTR [rbp+0x0]
  420e43:	and    al,0xf0
  420e45:	cmp    al,0x40
  420e47:	jne    420e7a <strcmp@plt+0x1d6f2>
  420e49:	mov    esi,0x14
  420e4e:	mov    rdi,rbp
  420e51:	call   42b440 <strcmp@plt+0x27cb8>
  420e56:	test   ax,ax
  420e59:	je     420e7a <strcmp@plt+0x1d6f2>
  420e5b:	lea    rax,[rip+0x43f4e]        # 464db0 <strcmp@plt+0x61628>
  420e62:	cmp    DWORD PTR [rax],0x2
  420e65:	jl     420e7a <strcmp@plt+0x1d6f2>
  420e67:	lea    rsi,[rip+0x282d6]        # 449144 <strcmp@plt+0x459bc>
  420e6e:	mov    edi,0x6
  420e73:	xor    eax,eax
  420e75:	call   42e800 <strcmp@plt+0x2b078>
  420e7a:	cmp    WORD PTR [r12+0x6],0x0
  420e81:	je     420ed4 <strcmp@plt+0x1d74c>
  420e83:	movzx  ebx,bx
  420e86:	mov    al,BYTE PTR [rbp+0x0]
  420e89:	shr    al,0x4
  420e8c:	movzx  edi,al
  420e8f:	call   4249a0 <strcmp@plt+0x21218>
  420e94:	movzx  ecx,al
  420e97:	mov    rdi,r12
  420e9a:	mov    esi,ebx
  420e9c:	mov    rdx,rbp
  420e9f:	call   42b9a0 <strcmp@plt+0x28218>
  420ea4:	test   ax,ax
  420ea7:	je     420ed4 <strcmp@plt+0x1d74c>
  420ea9:	lea    rax,[rip+0x43f00]        # 464db0 <strcmp@plt+0x61628>
  420eb0:	cmp    DWORD PTR [rax],0x2
  420eb3:	jl     420f56 <strcmp@plt+0x1d7ce>
  420eb9:	lea    rsi,[rip+0x28298]        # 449158 <strcmp@plt+0x459d0>
  420ec0:	xor    r14d,r14d
  420ec3:	mov    edi,0x6
  420ec8:	xor    eax,eax
  420eca:	call   42e800 <strcmp@plt+0x2b078>
  420ecf:	jmp    420f56 <strcmp@plt+0x1d7ce>
  420ed4:	lea    rax,[rip+0x43ed5]        # 464db0 <strcmp@plt+0x61628>
  420edb:	mov    r14d,0x1
  420ee1:	cmp    DWORD PTR [rax],0x2
  420ee4:	jl     420f56 <strcmp@plt+0x1d7ce>
  420ee6:	lea    rbx,[rbp+0xc]
  420eea:	mov    al,BYTE PTR [rbp+0x0]
  420eed:	shr    al,0x4
  420ef0:	movzx  edi,al
  420ef3:	call   4249a0 <strcmp@plt+0x21218>
  420ef8:	movzx  esi,al
  420efb:	mov    rdi,rbx
  420efe:	call   423fc0 <strcmp@plt+0x20838>
  420f03:	mov    r15,rax
  420f06:	mov    rbx,rbp
  420f09:	add    rbx,0x10
  420f0d:	mov    al,BYTE PTR [rbp+0x0]
  420f10:	shr    al,0x4
  420f13:	movzx  edi,al
  420f16:	call   4249a0 <strcmp@plt+0x21218>
  420f1b:	movzx  esi,al
  420f1e:	mov    rdi,rbx
  420f21:	call   423fc0 <strcmp@plt+0x20838>
  420f26:	mov    rcx,rax
  420f29:	movbe  ax,WORD PTR [r12]
  420f30:	movzx  r8d,ax
  420f34:	movbe  ax,WORD PTR [r12+0x2]
  420f3c:	movzx  r9d,ax
  420f40:	lea    rsi,[rip+0x28226]        # 44916d <strcmp@plt+0x459e5>
  420f47:	mov    edi,0x6
  420f4c:	xor    eax,eax
  420f4e:	mov    rdx,r15
  420f51:	call   42e800 <strcmp@plt+0x2b078>
  420f56:	mov    eax,r14d
  420f59:	pop    rbx
  420f5a:	pop    r12
  420f5c:	pop    r14
  420f5e:	pop    r15
  420f60:	pop    rbp
  420f61:	ret    
  420f62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f6c:	nop    DWORD PTR [rax+0x0]
  420f70:	push   rbx
  420f71:	mov    rbx,rdi
  420f74:	mov    rdi,QWORD PTR [rdi+0x38]
  420f78:	call   4238c0 <strcmp@plt+0x20138>
  420f7d:	test   eax,eax
  420f7f:	js     420f9a <strcmp@plt+0x1d812>
  420f81:	mov    ecx,eax
  420f83:	mov    edx,DWORD PTR [rbx+0x14]
  420f86:	mov    eax,0x1
  420f8b:	sub    edx,ecx
  420f8d:	jb     420f98 <strcmp@plt+0x1d810>
  420f8f:	mov    ecx,ecx
  420f91:	add    QWORD PTR [rbx+0x38],rcx
  420f95:	mov    DWORD PTR [rbx+0x14],edx
  420f98:	pop    rbx
  420f99:	ret    
  420f9a:	xor    eax,eax
  420f9c:	pop    rbx
  420f9d:	ret    
  420f9e:	xchg   ax,ax
  420fa0:	push   r15
  420fa2:	push   r14
  420fa4:	push   rbx
  420fa5:	mov    r14,rsi
  420fa8:	mov    rbx,rdi
  420fab:	mov    r15,QWORD PTR [rdi+0x38]
  420faf:	lea    rdi,[r15+0x2]
  420fb3:	call   4238c0 <strcmp@plt+0x20138>
  420fb8:	mov    ecx,DWORD PTR [rbx+0x14]
  420fbb:	sub    ecx,eax
  420fbd:	jb     420fc8 <strcmp@plt+0x1d840>
  420fbf:	mov    eax,eax
  420fc1:	add    QWORD PTR [rbx+0x38],rax
  420fc5:	mov    DWORD PTR [rbx+0x14],ecx
  420fc8:	movzx  esi,BYTE PTR [r15+0x1]
  420fcd:	mov    rdi,r14
  420fd0:	call   423480 <strcmp@plt+0x1fcf8>
  420fd5:	mov    eax,0x1
  420fda:	pop    rbx
  420fdb:	pop    r14
  420fdd:	pop    r15
  420fdf:	ret    
  420fe0:	push   rbp
  420fe1:	push   r15
  420fe3:	push   r14
  420fe5:	push   r13
  420fe7:	push   r12
  420fe9:	push   rbx
  420fea:	push   rax
  420feb:	mov    r14,rsi
  420fee:	mov    r15,rdi
  420ff1:	movzx  r13d,WORD PTR [rdi+0x24]
  420ff6:	cmp    r13,0xffff
  420ffd:	je     421005 <strcmp@plt+0x1d87d>
  420fff:	add    r13,QWORD PTR [r15+0x30]
  421003:	jmp    421008 <strcmp@plt+0x1d880>
  421005:	xor    r13d,r13d
  421008:	xor    eax,eax
  42100a:	call   422f90 <strcmp@plt+0x1f808>
  42100f:	mov    rbx,rax
  421012:	lea    rbp,[rip+0x43d97]        # 464db0 <strcmp@plt+0x61628>
  421019:	xor    r12d,r12d
  42101c:	nop    DWORD PTR [rax+0x0]
  421020:	mov    rdi,QWORD PTR [r15+0x38]
  421024:	mov    rsi,rbx
  421027:	call   4238c0 <strcmp@plt+0x20138>
  42102c:	test   eax,eax
  42102e:	js     42109f <strcmp@plt+0x1d917>
  421030:	mov    ecx,DWORD PTR [r15+0x14]
  421034:	sub    ecx,eax
  421036:	jb     421042 <strcmp@plt+0x1d8ba>
  421038:	mov    eax,eax
  42103a:	add    QWORD PTR [r15+0x38],rax
  42103e:	mov    DWORD PTR [r15+0x14],ecx
  421042:	mov    rdi,rbx
  421045:	call   423740 <strcmp@plt+0x1ffb8>
  42104a:	mov    rdi,rax
  42104d:	mov    rsi,r14
  421050:	call   42bcf0 <strcmp@plt+0x28568>
  421055:	cmp    DWORD PTR [rbp+0x0],0x0
  421059:	jle    42107c <strcmp@plt+0x1d8f4>
  42105b:	mov    rdi,rbx
  42105e:	call   423130 <strcmp@plt+0x1f9a8>
  421063:	mov    rcx,rax
  421066:	mov    edi,0x5
  42106b:	xor    eax,eax
  42106d:	lea    rsi,[rip+0x28121]        # 449195 <strcmp@plt+0x45a0d>
  421074:	mov    rdx,rcx
  421077:	call   42e800 <strcmp@plt+0x2b078>
  42107c:	add    r12d,0x1
  421080:	movzx  eax,BYTE PTR [r13+0x2]
  421085:	and    eax,0x1f
  421088:	add    eax,0x1
  42108b:	cmp    r12d,eax
  42108e:	jb     421020 <strcmp@plt+0x1d898>
  421090:	mov    rdi,rbx
  421093:	call   422fa0 <strcmp@plt+0x1f818>
  421098:	mov    eax,0x1
  42109d:	jmp    4210a1 <strcmp@plt+0x1d919>
  42109f:	xor    eax,eax
  4210a1:	add    rsp,0x8
  4210a5:	pop    rbx
  4210a6:	pop    r12
  4210a8:	pop    r13
  4210aa:	pop    r14
  4210ac:	pop    r15
  4210ae:	pop    rbp
  4210af:	ret    
  4210b0:	push   rbp
  4210b1:	push   r15
  4210b3:	push   r14
  4210b5:	push   rbx
  4210b6:	push   rax
  4210b7:	mov    r15,rsi
  4210ba:	mov    rbx,rdi
  4210bd:	mov    rbp,QWORD PTR [rdi+0x38]
  4210c1:	mov    rdi,rbp
  4210c4:	call   428890 <strcmp@plt+0x25108>
  4210c9:	test   eax,eax
  4210cb:	jle    42111d <strcmp@plt+0x1d995>
  4210cd:	mov    ecx,DWORD PTR [rbx+0x14]
  4210d0:	sub    ecx,eax
  4210d2:	jb     4210dd <strcmp@plt+0x1d955>
  4210d4:	mov    eax,eax
  4210d6:	add    QWORD PTR [rbx+0x38],rax
  4210da:	mov    DWORD PTR [rbx+0x14],ecx
  4210dd:	lea    rax,[rip+0x43ccc]        # 464db0 <strcmp@plt+0x61628>
  4210e4:	mov    r14d,0x1
  4210ea:	cmp    DWORD PTR [rax],0x0
  4210ed:	jle    421120 <strcmp@plt+0x1d998>
  4210ef:	mov    rdi,rbp
  4210f2:	call   42b340 <strcmp@plt+0x27bb8>
  4210f7:	mov    rbx,rax
  4210fa:	mov    rdi,QWORD PTR [r15]
  4210fd:	call   423130 <strcmp@plt+0x1f9a8>
  421102:	mov    rcx,rax
  421105:	lea    rsi,[rip+0x28097]        # 4491a3 <strcmp@plt+0x45a1b>
  42110c:	mov    edi,0x5
  421111:	xor    eax,eax
  421113:	mov    rdx,rbx
  421116:	call   42e800 <strcmp@plt+0x2b078>
  42111b:	jmp    421120 <strcmp@plt+0x1d998>
  42111d:	xor    r14d,r14d
  421120:	mov    eax,r14d
  421123:	add    rsp,0x8
  421127:	pop    rbx
  421128:	pop    r14
  42112a:	pop    r15
  42112c:	pop    rbp
  42112d:	ret    
  42112e:	xchg   ax,ax
  421130:	push   rbp
  421131:	push   r15
  421133:	push   r14
  421135:	push   r13
  421137:	push   r12
  421139:	push   rbx
  42113a:	sub    rsp,0x28
  42113e:	mov    r15,rcx
  421141:	mov    QWORD PTR [rsp+0x20],rdx
  421146:	mov    r12,rsi
  421149:	mov    r14,rdi
  42114c:	mov    rbx,QWORD PTR [rdi+0x38]
  421150:	mov    eax,DWORD PTR [rdi+0x14]
  421153:	mov    rdi,rbx
  421156:	cmp    eax,0xa
  421159:	jb     42116a <strcmp@plt+0x1d9e2>
  42115b:	lea    rdi,[rbx+0xa]
  42115f:	mov    QWORD PTR [r14+0x38],rdi
  421163:	add    eax,0xfffffff6
  421166:	mov    DWORD PTR [r14+0x14],eax
  42116a:	mov    rsi,r12
  42116d:	call   4238c0 <strcmp@plt+0x20138>
  421172:	test   eax,eax
  421174:	jle    4212e1 <strcmp@plt+0x1db59>
  42117a:	mov    ecx,DWORD PTR [r14+0x14]
  42117e:	sub    ecx,eax
  421180:	jb     42118c <strcmp@plt+0x1da04>
  421182:	mov    eax,eax
  421184:	add    QWORD PTR [r14+0x38],rax
  421188:	mov    DWORD PTR [r14+0x14],ecx
  42118c:	movzx  esi,BYTE PTR [rbx+0x5]
  421190:	mov    rdi,r12
  421193:	call   423480 <strcmp@plt+0x1fcf8>
  421198:	lea    rax,[rip+0x43c11]        # 464db0 <strcmp@plt+0x61628>
  42119f:	cmp    DWORD PTR [rax],0x0
  4211a2:	jle    4211d6 <strcmp@plt+0x1da4e>
  4211a4:	mov    rdi,rbx
  4211a7:	call   42b000 <strcmp@plt+0x27878>
  4211ac:	mov    rbp,r14
  4211af:	mov    r14,rax
  4211b2:	mov    rdi,r12
  4211b5:	call   423130 <strcmp@plt+0x1f9a8>
  4211ba:	mov    rcx,rax
  4211bd:	lea    rsi,[rip+0x27ff0]        # 4491b4 <strcmp@plt+0x45a2c>
  4211c4:	mov    edi,0x5
  4211c9:	xor    eax,eax
  4211cb:	mov    rdx,r14
  4211ce:	mov    r14,rbp
  4211d1:	call   42e800 <strcmp@plt+0x2b078>
  4211d6:	cmp    BYTE PTR [rbx+0x4],0x0
  4211da:	mov    QWORD PTR [rsp+0x18],r15
  4211df:	je     4212e5 <strcmp@plt+0x1db5d>
  4211e5:	xor    r15d,r15d
  4211e8:	xor    eax,eax
  4211ea:	mov    QWORD PTR [rsp+0x8],rax
  4211ef:	mov    QWORD PTR [rsp+0x10],rbx
  4211f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4211fe:	xchg   ax,ax
  421200:	mov    r12,QWORD PTR [r14+0x38]
  421204:	xor    ebx,ebx
  421206:	xor    eax,eax
  421208:	call   428650 <strcmp@plt+0x24ec8>
  42120d:	mov    r13,rax
  421210:	mov    rbp,QWORD PTR [r14+0x38]
  421214:	mov    rdi,rbp
  421217:	mov    rsi,rax
  42121a:	call   428890 <strcmp@plt+0x25108>
  42121f:	test   eax,eax
  421221:	jle    421303 <strcmp@plt+0x1db7b>
  421227:	mov    ecx,DWORD PTR [r14+0x14]
  42122b:	sub    ecx,eax
  42122d:	jb     421239 <strcmp@plt+0x1dab1>
  42122f:	mov    eax,eax
  421231:	add    QWORD PTR [r14+0x38],rax
  421235:	mov    DWORD PTR [r14+0x14],ecx
  421239:	lea    rax,[rip+0x43b70]        # 464db0 <strcmp@plt+0x61628>
  421240:	cmp    DWORD PTR [rax],0x0
  421243:	jle    421272 <strcmp@plt+0x1daea>
  421245:	mov    rdi,rbp
  421248:	call   42b340 <strcmp@plt+0x27bb8>
  42124d:	mov    rbp,rax
  421250:	mov    rdi,QWORD PTR [r13+0x0]
  421254:	call   423130 <strcmp@plt+0x1f9a8>
  421259:	mov    rcx,rax
  42125c:	mov    edi,0x5
  421261:	xor    eax,eax
  421263:	lea    rsi,[rip+0x27f39]        # 4491a3 <strcmp@plt+0x45a1b>
  42126a:	mov    rdx,rbp
  42126d:	call   42e800 <strcmp@plt+0x2b078>
  421272:	mov    rdi,r13
  421275:	mov    rsi,QWORD PTR [rsp+0x20]
  42127a:	call   42bcf0 <strcmp@plt+0x28568>
  42127f:	test   BYTE PTR [r12+0x5],0x2
  421285:	je     4212c9 <strcmp@plt+0x1db41>
  421287:	cmp    QWORD PTR [rsp+0x8],0x0
  42128d:	je     4212c4 <strcmp@plt+0x1db3c>
  42128f:	lea    rax,[rip+0x43b1a]        # 464db0 <strcmp@plt+0x61628>
  421296:	cmp    DWORD PTR [rax],0x0
  421299:	mov    rbx,QWORD PTR [rsp+0x10]
  42129e:	jle    4212ce <strcmp@plt+0x1db46>
  4212a0:	mov    rdi,QWORD PTR [r13+0x0]
  4212a4:	call   423130 <strcmp@plt+0x1f9a8>
  4212a9:	mov    rcx,rax
  4212ac:	mov    edi,0x5
  4212b1:	xor    eax,eax
  4212b3:	lea    rsi,[rip+0x27f07]        # 4491c1 <strcmp@plt+0x45a39>
  4212ba:	mov    rdx,rcx
  4212bd:	call   42e800 <strcmp@plt+0x2b078>
  4212c2:	jmp    4212ce <strcmp@plt+0x1db46>
  4212c4:	mov    QWORD PTR [rsp+0x8],r13
  4212c9:	mov    rbx,QWORD PTR [rsp+0x10]
  4212ce:	add    r15d,0x1
  4212d2:	movzx  eax,BYTE PTR [rbx+0x4]
  4212d6:	cmp    r15d,eax
  4212d9:	jb     421200 <strcmp@plt+0x1da78>
  4212df:	jmp    4212ec <strcmp@plt+0x1db64>
  4212e1:	xor    ebx,ebx
  4212e3:	jmp    421303 <strcmp@plt+0x1db7b>
  4212e5:	xor    eax,eax
  4212e7:	mov    QWORD PTR [rsp+0x8],rax
  4212ec:	mov    ebx,0x1
  4212f1:	mov    rax,QWORD PTR [rsp+0x18]
  4212f6:	test   rax,rax
  4212f9:	je     421303 <strcmp@plt+0x1db7b>
  4212fb:	mov    rcx,QWORD PTR [rsp+0x8]
  421300:	mov    QWORD PTR [rax],rcx
  421303:	mov    eax,ebx
  421305:	add    rsp,0x28
  421309:	pop    rbx
  42130a:	pop    r12
  42130c:	pop    r13
  42130e:	pop    r14
  421310:	pop    r15
  421312:	pop    rbp
  421313:	ret    
  421314:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42131e:	xchg   ax,ax
  421320:	push   rbp
  421321:	push   r15
  421323:	push   r14
  421325:	push   r13
  421327:	push   r12
  421329:	push   rbx
  42132a:	push   rax
  42132b:	xor    eax,eax
  42132d:	test   rsi,rsi
  421330:	je     4213d5 <strcmp@plt+0x1dc4d>
  421336:	mov    r15,rdx
  421339:	mov    r14,rsi
  42133c:	mov    r12,rdi
  42133f:	mov    rax,QWORD PTR [rdi+0x38]
  421343:	mov    ecx,DWORD PTR [rax]
  421345:	movbe  DWORD PTR [rsi+0x30],ecx
  42134a:	mov    cl,BYTE PTR [rax+0x6]
  42134d:	shr    cl,0x5
  421350:	mov    BYTE PTR [rsi+0x34],cl
  421353:	mov    al,BYTE PTR [rax+0x6]
  421356:	shr    al,0x4
  421359:	and    al,0x1
  42135b:	mov    BYTE PTR [rsi+0x35],al
  42135e:	call   42bbd0 <strcmp@plt+0x28448>
  421363:	mov    r13,rax
  421366:	mov    rdi,r12
  421369:	mov    rsi,r14
  42136c:	mov    rdx,rax
  42136f:	mov    rcx,r15
  421372:	call   421130 <strcmp@plt+0x1d9a8>
  421377:	cmp    eax,0x1
  42137a:	jne    4213bc <strcmp@plt+0x1dc34>
  42137c:	mov    rbp,QWORD PTR [r13+0x8]
  421380:	cmp    rbp,r13
  421383:	jne    421399 <strcmp@plt+0x1dc11>
  421385:	jmp    4213c8 <strcmp@plt+0x1dc40>
  421387:	nop    WORD PTR [rax+rax*1+0x0]
  421390:	mov    rbp,QWORD PTR [rbp+0x8]
  421394:	cmp    rbp,r13
  421397:	je     4213c8 <strcmp@plt+0x1dc40>
  421399:	mov    r15,QWORD PTR [rbp+0x10]
  42139d:	mov    rdi,r14
  4213a0:	mov    rsi,r15
  4213a3:	call   4291e0 <strcmp@plt+0x25a58>
  4213a8:	cmp    eax,0x1
  4213ab:	je     421390 <strcmp@plt+0x1dc08>
  4213ad:	mov    ebx,eax
  4213af:	mov    rdi,r15
  4213b2:	call   428960 <strcmp@plt+0x251d8>
  4213b7:	cmp    ebx,0xfffffffb
  4213ba:	je     421390 <strcmp@plt+0x1dc08>
  4213bc:	mov    rdi,r13
  4213bf:	call   42c250 <strcmp@plt+0x28ac8>
  4213c4:	xor    eax,eax
  4213c6:	jmp    4213d5 <strcmp@plt+0x1dc4d>
  4213c8:	mov    rdi,r13
  4213cb:	call   42c250 <strcmp@plt+0x28ac8>
  4213d0:	mov    eax,0x1
  4213d5:	add    rsp,0x8
  4213d9:	pop    rbx
  4213da:	pop    r12
  4213dc:	pop    r13
  4213de:	pop    r14
  4213e0:	pop    r15
  4213e2:	pop    rbp
  4213e3:	ret    
  4213e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4213ee:	xchg   ax,ax
  4213f0:	push   rbp
  4213f1:	push   r15
  4213f3:	push   r14
  4213f5:	push   r13
  4213f7:	push   r12
  4213f9:	push   rbx
  4213fa:	push   rax
  4213fb:	mov    QWORD PTR [rsp],rdx
  4213ff:	mov    rbp,rsi
  421402:	mov    r13,rdi
  421405:	mov    r15,QWORD PTR [rdi+0x38]
  421409:	mov    eax,DWORD PTR [rdi+0x14]
  42140c:	mov    rdi,r15
  42140f:	cmp    eax,0xa
  421412:	jb     421423 <strcmp@plt+0x1dc9b>
  421414:	lea    rdi,[r15+0xa]
  421418:	mov    QWORD PTR [r13+0x38],rdi
  42141c:	add    eax,0xfffffff6
  42141f:	mov    DWORD PTR [r13+0x14],eax
  421423:	mov    rsi,rbp
  421426:	call   4238c0 <strcmp@plt+0x20138>
  42142b:	test   eax,eax
  42142d:	jle    42152d <strcmp@plt+0x1dda5>
  421433:	mov    ecx,DWORD PTR [r13+0x14]
  421437:	sub    ecx,eax
  421439:	jb     421445 <strcmp@plt+0x1dcbd>
  42143b:	mov    eax,eax
  42143d:	add    QWORD PTR [r13+0x38],rax
  421441:	mov    DWORD PTR [r13+0x14],ecx
  421445:	movzx  esi,BYTE PTR [r15+0x5]
  42144a:	mov    rdi,rbp
  42144d:	call   423480 <strcmp@plt+0x1fcf8>
  421452:	lea    rax,[rip+0x43957]        # 464db0 <strcmp@plt+0x61628>
  421459:	cmp    DWORD PTR [rax],0x0
  42145c:	jle    42148a <strcmp@plt+0x1dd02>
  42145e:	mov    rdi,r15
  421461:	call   42b130 <strcmp@plt+0x279a8>
  421466:	mov    r12,rax
  421469:	mov    rdi,rbp
  42146c:	call   423130 <strcmp@plt+0x1f9a8>
  421471:	mov    rcx,rax
  421474:	lea    rsi,[rip+0x27d39]        # 4491b4 <strcmp@plt+0x45a2c>
  42147b:	mov    edi,0x5
  421480:	xor    eax,eax
  421482:	mov    rdx,r12
  421485:	call   42e800 <strcmp@plt+0x2b078>
  42148a:	mov    eax,0x1
  42148f:	cmp    BYTE PTR [r15+0x4],0x0
  421494:	je     42152f <strcmp@plt+0x1dda7>
  42149a:	xor    r14d,r14d
  42149d:	nop    DWORD PTR [rax]
  4214a0:	xor    eax,eax
  4214a2:	call   428650 <strcmp@plt+0x24ec8>
  4214a7:	mov    rbp,rax
  4214aa:	mov    r12,QWORD PTR [r13+0x38]
  4214ae:	mov    rdi,r12
  4214b1:	mov    rsi,rax
  4214b4:	call   428890 <strcmp@plt+0x25108>
  4214b9:	test   eax,eax
  4214bb:	jle    42152d <strcmp@plt+0x1dda5>
  4214bd:	mov    ecx,DWORD PTR [r13+0x14]
  4214c1:	sub    ecx,eax
  4214c3:	jb     4214cf <strcmp@plt+0x1dd47>
  4214c5:	mov    eax,eax
  4214c7:	add    QWORD PTR [r13+0x38],rax
  4214cb:	mov    DWORD PTR [r13+0x14],ecx
  4214cf:	lea    rax,[rip+0x438da]        # 464db0 <strcmp@plt+0x61628>
  4214d6:	cmp    DWORD PTR [rax],0x0
  4214d9:	jle    421508 <strcmp@plt+0x1dd80>
  4214db:	mov    rdi,r12
  4214de:	call   42b340 <strcmp@plt+0x27bb8>
  4214e3:	mov    rbx,rax
  4214e6:	mov    rdi,QWORD PTR [rbp+0x0]
  4214ea:	call   423130 <strcmp@plt+0x1f9a8>
  4214ef:	mov    rcx,rax
  4214f2:	mov    edi,0x5
  4214f7:	xor    eax,eax
  4214f9:	lea    rsi,[rip+0x27ca3]        # 4491a3 <strcmp@plt+0x45a1b>
  421500:	mov    rdx,rbx
  421503:	call   42e800 <strcmp@plt+0x2b078>
  421508:	mov    rdi,rbp
  42150b:	mov    rsi,QWORD PTR [rsp]
  42150f:	call   42bcf0 <strcmp@plt+0x28568>
  421514:	add    r14d,0x1
  421518:	movzx  eax,BYTE PTR [r15+0x4]
  42151d:	cmp    r14d,eax
  421520:	jb     4214a0 <strcmp@plt+0x1dd18>
  421526:	mov    eax,0x1
  42152b:	jmp    42152f <strcmp@plt+0x1dda7>
  42152d:	xor    eax,eax
  42152f:	add    rsp,0x8
  421533:	pop    rbx
  421534:	pop    r12
  421536:	pop    r13
  421538:	pop    r14
  42153a:	pop    r15
  42153c:	pop    rbp
  42153d:	ret    
  42153e:	xchg   ax,ax
  421540:	push   rbp
  421541:	push   r15
  421543:	push   r14
  421545:	push   r13
  421547:	push   r12
  421549:	push   rbx
  42154a:	push   rax
  42154b:	xor    r14d,r14d
  42154e:	test   rsi,rsi
  421551:	je     4215f4 <strcmp@plt+0x1de6c>
  421557:	mov    r13,rsi
  42155a:	mov    r15,rdi
  42155d:	mov    rax,QWORD PTR [rdi+0x38]
  421561:	mov    ecx,DWORD PTR [rax]
  421563:	movbe  DWORD PTR [rsi+0x38],ecx
  421568:	mov    cl,BYTE PTR [rax+0x6]
  42156b:	shr    cl,0x5
  42156e:	mov    BYTE PTR [rsi+0x3c],cl
  421571:	mov    cl,BYTE PTR [rax+0x6]
  421574:	shr    cl,0x4
  421577:	and    cl,0x1
  42157a:	mov    BYTE PTR [rsi+0x3d],cl
  42157d:	mov    al,BYTE PTR [rax+0x6]
  421580:	shr    al,0x3
  421583:	and    al,0x1
  421585:	mov    BYTE PTR [rsi+0x3e],al
  421588:	call   42bbd0 <strcmp@plt+0x28448>
  42158d:	mov    r12,rax
  421590:	mov    rdi,r15
  421593:	mov    rsi,r13
  421596:	mov    rdx,rax
  421599:	call   4213f0 <strcmp@plt+0x1dc68>
  42159e:	cmp    eax,0x1
  4215a1:	jne    4215dc <strcmp@plt+0x1de54>
  4215a3:	mov    rbp,QWORD PTR [r12+0x8]
  4215a8:	cmp    rbp,r12
  4215ab:	jne    4215b9 <strcmp@plt+0x1de31>
  4215ad:	jmp    4215e6 <strcmp@plt+0x1de5e>
  4215af:	nop
  4215b0:	mov    rbp,QWORD PTR [rbp+0x8]
  4215b4:	cmp    rbp,r12
  4215b7:	je     4215e6 <strcmp@plt+0x1de5e>
  4215b9:	mov    r15,QWORD PTR [rbp+0x10]
  4215bd:	mov    rdi,r13
  4215c0:	mov    rsi,r15
  4215c3:	call   429c40 <strcmp@plt+0x264b8>
  4215c8:	cmp    eax,0x1
  4215cb:	je     4215b0 <strcmp@plt+0x1de28>
  4215cd:	mov    ebx,eax
  4215cf:	mov    rdi,r15
  4215d2:	call   428960 <strcmp@plt+0x251d8>
  4215d7:	cmp    ebx,0xfffffffb
  4215da:	je     4215b0 <strcmp@plt+0x1de28>
  4215dc:	mov    rdi,r12
  4215df:	call   42c250 <strcmp@plt+0x28ac8>
  4215e4:	jmp    4215f4 <strcmp@plt+0x1de6c>
  4215e6:	mov    rdi,r12
  4215e9:	call   42c250 <strcmp@plt+0x28ac8>
  4215ee:	mov    r14d,0x1
  4215f4:	mov    eax,r14d
  4215f7:	add    rsp,0x8
  4215fb:	pop    rbx
  4215fc:	pop    r12
  4215fe:	pop    r13
  421600:	pop    r14
  421602:	pop    r15
  421604:	pop    rbp
  421605:	ret    
  421606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421610:	push   r15
  421612:	push   r14
  421614:	push   rbx
  421615:	mov    r14,rsi
  421618:	mov    rbx,rdi
  42161b:	mov    r15,QWORD PTR [rdi+0x38]
  42161f:	mov    eax,DWORD PTR [r15]
  421622:	movbe  DWORD PTR [rdx],eax
  421626:	mov    eax,DWORD PTR [rdi+0x14]
  421629:	cmp    eax,0x4
  42162c:	jb     42163c <strcmp@plt+0x1deb4>
  42162e:	add    r15,0x4
  421632:	mov    QWORD PTR [rbx+0x38],r15
  421636:	add    eax,0xfffffffc
  421639:	mov    DWORD PTR [rbx+0x14],eax
  42163c:	lea    rdi,[r15+0x2]
  421640:	mov    rsi,r14
  421643:	call   4238c0 <strcmp@plt+0x20138>
  421648:	mov    ecx,DWORD PTR [rbx+0x14]
  42164b:	sub    ecx,eax
  42164d:	jb     421658 <strcmp@plt+0x1ded0>
  42164f:	mov    eax,eax
  421651:	add    QWORD PTR [rbx+0x38],rax
  421655:	mov    DWORD PTR [rbx+0x14],ecx
  421658:	movzx  esi,BYTE PTR [r15+0x1]
  42165d:	mov    rdi,r14
  421660:	call   423480 <strcmp@plt+0x1fcf8>
  421665:	mov    eax,0x1
  42166a:	pop    rbx
  42166b:	pop    r14
  42166d:	pop    r15
  42166f:	ret    
  421670:	mov    ecx,DWORD PTR [rdi+0x14]
  421673:	cmp    ecx,0x10
  421676:	jae    42167d <strcmp@plt+0x1def5>
  421678:	xor    r8d,r8d
  42167b:	jmp    42168f <strcmp@plt+0x1df07>
  42167d:	mov    r8,QWORD PTR [rdi+0x38]
  421681:	lea    rax,[r8+0x10]
  421685:	mov    QWORD PTR [rdi+0x38],rax
  421689:	add    ecx,0xfffffff0
  42168c:	mov    DWORD PTR [rdi+0x14],ecx
  42168f:	vmovups xmm0,XMMWORD PTR [r8]
  421694:	vmovups XMMWORD PTR [rsi],xmm0
  421698:	mov    rax,QWORD PTR [rdi+0x38]
  42169c:	lea    rcx,[rax+0x8]
  4216a0:	mov    QWORD PTR [rdi+0x38],rcx
  4216a4:	add    DWORD PTR [rdi+0x14],0xfffffff8
  4216a8:	mov    rax,QWORD PTR [rax]
  4216ab:	mov    QWORD PTR [rdx],rax
  4216ae:	mov    eax,0x1
  4216b3:	ret    
  4216b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4216be:	xchg   ax,ax
  4216c0:	movzx  eax,WORD PTR [rdi+0x24]
  4216c4:	cmp    rax,0xffff
  4216ca:	je     421701 <strcmp@plt+0x1df79>
  4216cc:	add    rax,QWORD PTR [rdi+0x30]
  4216d0:	je     421701 <strcmp@plt+0x1df79>
  4216d2:	movzx  eax,WORD PTR [rax]
  4216d5:	shr    eax,0x4
  4216d8:	mov    ecx,eax
  4216da:	shl    cl,0x4
  4216dd:	sar    cl,0x4
  4216e0:	js     421701 <strcmp@plt+0x1df79>
  4216e2:	and    al,0xf
  4216e4:	movzx  eax,al
  4216e7:	mov    ecx,0xde
  4216ec:	bt     ecx,eax
  4216ef:	jae    421701 <strcmp@plt+0x1df79>
  4216f1:	mov    ecx,DWORD PTR [rdi+0x14]
  4216f4:	mov    edx,0xc
  4216f9:	cmp    ecx,0xc
  4216fc:	jae    421706 <strcmp@plt+0x1df7e>
  4216fe:	xor    eax,eax
  421700:	ret    
  421701:	mov    ecx,DWORD PTR [rdi+0x14]
  421704:	xor    edx,edx
  421706:	mov    rax,QWORD PTR [rdi+0x38]
  42170a:	mov    esi,edx
  42170c:	add    rsi,rax
  42170f:	mov    QWORD PTR [rdi+0x38],rsi
  421713:	sub    ecx,edx
  421715:	mov    DWORD PTR [rdi+0x14],ecx
  421718:	ret    
  421719:	nop    DWORD PTR [rax+0x0]
  421720:	push   r14
  421722:	push   rbx
  421723:	push   rax
  421724:	mov    r14,rsi
  421727:	mov    rbx,rdi
  42172a:	mov    rdi,rsi
  42172d:	call   423040 <strcmp@plt+0x1f8b8>
  421732:	mov    rdi,rbx
  421735:	mov    esi,eax
  421737:	call   42e270 <strcmp@plt+0x2aae8>
  42173c:	mov    rbx,rax
  42173f:	mov    rdi,rax
  421742:	mov    rsi,r14
  421745:	call   423840 <strcmp@plt+0x200b8>
  42174a:	test   eax,eax
  42174c:	jg     421781 <strcmp@plt+0x1dff9>
  42174e:	lea    rax,[rip+0x4365b]        # 464db0 <strcmp@plt+0x61628>
  421755:	cmp    DWORD PTR [rax],0x3
  421758:	jge    42175e <strcmp@plt+0x1dfd6>
  42175a:	xor    ebx,ebx
  42175c:	jmp    421781 <strcmp@plt+0x1dff9>
  42175e:	mov    rdi,r14
  421761:	call   423130 <strcmp@plt+0x1f9a8>
  421766:	mov    rcx,rax
  421769:	lea    rsi,[rip+0x27a8a]        # 4491fa <strcmp@plt+0x45a72>
  421770:	xor    ebx,ebx
  421772:	mov    edi,0x7
  421777:	xor    eax,eax
  421779:	mov    rdx,rcx
  42177c:	call   42e800 <strcmp@plt+0x2b078>
  421781:	mov    rax,rbx
  421784:	add    rsp,0x8
  421788:	pop    rbx
  421789:	pop    r14
  42178b:	ret    
  42178c:	nop    DWORD PTR [rax+0x0]
  421790:	push   r15
  421792:	push   r14
  421794:	push   rbx
  421795:	mov    rbx,rsi
  421798:	mov    r14,rdi
  42179b:	mov    esi,0x6
  4217a0:	call   42e270 <strcmp@plt+0x2aae8>
  4217a5:	mov    r15,rax
  4217a8:	mov    al,BYTE PTR [rbx+0xb]
  4217ab:	mov    BYTE PTR [r15],al
  4217ae:	mov    al,BYTE PTR [rbx+0xc]
  4217b1:	mov    BYTE PTR [r15+0x1],al
  4217b5:	mov    al,BYTE PTR [rbx+0xd]
  4217b8:	mov    BYTE PTR [r15+0x2],al
  4217bc:	mov    al,BYTE PTR [rbx+0xe]
  4217bf:	mov    BYTE PTR [r15+0x3],al
  4217c3:	mov    al,BYTE PTR [rbx+0x9]
  4217c6:	mov    cl,BYTE PTR [r15+0x5]
  4217ca:	shl    al,0x2
  4217cd:	and    al,0x4
  4217cf:	and    cl,0xfb
  4217d2:	or     cl,al
  4217d4:	mov    BYTE PTR [r15+0x5],cl
  4217d8:	mov    al,BYTE PTR [rbx+0xa]
  4217db:	and    al,0x1
  4217dd:	and    cl,0xfe
  4217e0:	or     cl,al
  4217e2:	mov    BYTE PTR [r15+0x5],cl
  4217e6:	mov    rbx,QWORD PTR [rbx]
  4217e9:	mov    rdi,rbx
  4217ec:	call   423040 <strcmp@plt+0x1f8b8>
  4217f1:	mov    rdi,r14
  4217f4:	mov    esi,eax
  4217f6:	call   42e270 <strcmp@plt+0x2aae8>
  4217fb:	mov    rdi,rax
  4217fe:	mov    rsi,rbx
  421801:	call   423840 <strcmp@plt+0x200b8>
  421806:	test   eax,eax
  421808:	jg     421837 <strcmp@plt+0x1e0af>
  42180a:	lea    rax,[rip+0x4359f]        # 464db0 <strcmp@plt+0x61628>
  421811:	cmp    DWORD PTR [rax],0x3
  421814:	jl     421837 <strcmp@plt+0x1e0af>
  421816:	mov    rdi,rbx
  421819:	call   423130 <strcmp@plt+0x1f9a8>
  42181e:	mov    rcx,rax
  421821:	lea    rsi,[rip+0x279d2]        # 4491fa <strcmp@plt+0x45a72>
  421828:	mov    edi,0x7
  42182d:	xor    eax,eax
  42182f:	mov    rdx,rcx
  421832:	call   42e800 <strcmp@plt+0x2b078>
  421837:	mov    rax,r15
  42183a:	pop    rbx
  42183b:	pop    r14
  42183d:	pop    r15
  42183f:	ret    
  421840:	push   rbx
  421841:	mov    esi,0xa
  421846:	call   42e270 <strcmp@plt+0x2aae8>
  42184b:	mov    rbx,rax
  42184e:	mov    rdi,rax
  421851:	call   42adf0 <strcmp@plt+0x27668>
  421856:	mov    rax,rbx
  421859:	pop    rbx
  42185a:	ret    
  42185b:	nop    DWORD PTR [rax+rax*1+0x0]
  421860:	push   rbp
  421861:	push   r15
  421863:	push   r14
  421865:	push   r13
  421867:	push   r12
  421869:	push   rbx
  42186a:	sub    rsp,0x28
  42186e:	mov    QWORD PTR [rsp+0x18],rdx
  421873:	mov    rbx,rsi
  421876:	mov    r15,rdi
  421879:	mov    esi,0xa
  42187e:	call   42e270 <strcmp@plt+0x2aae8>
  421883:	mov    rbp,rax
  421886:	mov    rdi,rax
  421889:	call   42adf0 <strcmp@plt+0x27668>
  42188e:	mov    rdi,rbx
  421891:	call   4230a0 <strcmp@plt+0x1f918>
  421896:	mov    BYTE PTR [rbp+0x5],al
  421899:	mov    eax,DWORD PTR [rbx+0x30]
  42189c:	movbe  DWORD PTR [rbp+0x0],eax
  4218a1:	mov    al,BYTE PTR [rbx+0x35]
  4218a4:	mov    cl,BYTE PTR [rbp+0x6]
  4218a7:	shl    al,0x4
  4218aa:	and    al,0x10
  4218ac:	and    cl,0xef
  4218af:	or     cl,al
  4218b1:	mov    BYTE PTR [rbp+0x6],cl
  4218b4:	mov    rdi,rbx
  4218b7:	call   423040 <strcmp@plt+0x1f8b8>
  4218bc:	mov    rdi,r15
  4218bf:	mov    esi,eax
  4218c1:	call   42e270 <strcmp@plt+0x2aae8>
  4218c6:	mov    r12,rax
  4218c9:	mov    rdi,rax
  4218cc:	mov    QWORD PTR [rsp+0x8],rbx
  4218d1:	mov    rsi,rbx
  4218d4:	call   423840 <strcmp@plt+0x200b8>
  4218d9:	test   eax,eax
  4218db:	jle    4219e5 <strcmp@plt+0x1e25d>
  4218e1:	xor    r14d,r14d
  4218e4:	test   r12,r12
  4218e7:	je     4219f1 <strcmp@plt+0x1e269>
  4218ed:	mov    QWORD PTR [rsp+0x10],r15
  4218f2:	mov    QWORD PTR [rsp+0x20],rbp
  4218f7:	mov    rax,QWORD PTR [rsp+0x8]
  4218fc:	mov    rax,QWORD PTR [rax+0x28]
  421900:	mov    r15,QWORD PTR [rax+0x8]
  421904:	cmp    r15,rax
  421907:	je     42199f <strcmp@plt+0x1e217>
  42190d:	xor    r14d,r14d
  421910:	mov    r12,QWORD PTR [r15+0x10]
  421914:	cmp    DWORD PTR [r12+0x18],0x0
  42191a:	je     42198c <strcmp@plt+0x1e204>
  42191c:	mov    r13,QWORD PTR [r12+0x8]
  421921:	mov    rbx,QWORD PTR [r13+0x10]
  421925:	mov    rax,QWORD PTR [rbx]
  421928:	cmp    DWORD PTR [rax+0x18],0x0
  42192c:	je     42198c <strcmp@plt+0x1e204>
  42192e:	cmp    r13,r12
  421931:	jne    421944 <strcmp@plt+0x1e1bc>
  421933:	jmp    42198c <strcmp@plt+0x1e204>
  421935:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42193f:	nop
  421940:	mov    rbx,QWORD PTR [r13+0x10]
  421944:	cmp    BYTE PTR [rbx+0x8],0x0
  421948:	je     421983 <strcmp@plt+0x1e1fb>
  42194a:	mov    rdi,QWORD PTR [rsp+0x10]
  42194f:	mov    rsi,rbx
  421952:	call   421790 <strcmp@plt+0x1e008>
  421957:	cmp    QWORD PTR [rsp+0x18],0x0
  42195d:	je     42197f <strcmp@plt+0x1e1f7>
  42195f:	mov    rbp,rax
  421962:	mov    rdi,QWORD PTR [rbx]
  421965:	call   4232e0 <strcmp@plt+0x1fb58>
  42196a:	mov    rdi,rax
  42196d:	mov    rsi,QWORD PTR [rsp+0x18]
  421972:	call   423970 <strcmp@plt+0x201e8>
  421977:	test   eax,eax
  421979:	jne    42197f <strcmp@plt+0x1e1f7>
  42197b:	or     BYTE PTR [rbp+0x5],0x2
  42197f:	add    r14d,0x1
  421983:	mov    r13,QWORD PTR [r13+0x8]
  421987:	cmp    r13,r12
  42198a:	jne    421940 <strcmp@plt+0x1e1b8>
  42198c:	mov    r15,QWORD PTR [r15+0x8]
  421990:	mov    rax,QWORD PTR [rsp+0x8]
  421995:	cmp    r15,QWORD PTR [rax+0x28]
  421999:	jne    421910 <strcmp@plt+0x1e188>
  42199f:	mov    rbx,QWORD PTR [rsp+0x20]
  4219a4:	mov    BYTE PTR [rbx+0x4],r14b
  4219a8:	mov    rcx,QWORD PTR [rsp+0x10]
  4219ad:	movzx  eax,WORD PTR [rcx+0x24]
  4219b1:	cmp    rax,0xffff
  4219b7:	je     421a1a <strcmp@plt+0x1e292>
  4219b9:	add    rax,QWORD PTR [rcx+0x30]
  4219bd:	je     421a1a <strcmp@plt+0x1e292>
  4219bf:	mov    cl,BYTE PTR [rax]
  4219c1:	shr    cl,0x4
  4219c4:	add    cl,0xff
  4219c7:	cmp    cl,0x5
  4219ca:	ja     421a1a <strcmp@plt+0x1e292>
  4219cc:	movzx  ecx,cl
  4219cf:	lea    rdx,[rip+0x276b6]        # 44908c <strcmp@plt+0x45904>
  4219d6:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4219da:	add    rcx,rdx
  4219dd:	jmp    rcx
  4219df:	add    BYTE PTR [rax+0x3],0x1
  4219e3:	jmp    421a1a <strcmp@plt+0x1e292>
  4219e5:	lea    rax,[rip+0x433c4]        # 464db0 <strcmp@plt+0x61628>
  4219ec:	cmp    DWORD PTR [rax],0x3
  4219ef:	jge    4219f5 <strcmp@plt+0x1e26d>
  4219f1:	xor    ebx,ebx
  4219f3:	jmp    421a1a <strcmp@plt+0x1e292>
  4219f5:	mov    rdi,QWORD PTR [rsp+0x8]
  4219fa:	call   423130 <strcmp@plt+0x1f9a8>
  4219ff:	mov    rcx,rax
  421a02:	lea    rsi,[rip+0x277f1]        # 4491fa <strcmp@plt+0x45a72>
  421a09:	xor    ebx,ebx
  421a0b:	mov    edi,0x7
  421a10:	xor    eax,eax
  421a12:	mov    rdx,rcx
  421a15:	call   42e800 <strcmp@plt+0x2b078>
  421a1a:	mov    rax,rbx
  421a1d:	add    rsp,0x28
  421a21:	pop    rbx
  421a22:	pop    r12
  421a24:	pop    r13
  421a26:	pop    r14
  421a28:	pop    r15
  421a2a:	pop    rbp
  421a2b:	ret    
  421a2c:	nop    DWORD PTR [rax+0x0]
  421a30:	push   rbp
  421a31:	push   r15
  421a33:	push   r14
  421a35:	push   r13
  421a37:	push   r12
  421a39:	push   rbx
  421a3a:	push   rax
  421a3b:	mov    ebp,r8d
  421a3e:	mov    ebx,ecx
  421a40:	mov    r13d,edx
  421a43:	mov    r15,rsi
  421a46:	mov    r14,rdi
  421a49:	mov    esi,0xa
  421a4e:	call   42e270 <strcmp@plt+0x2aae8>
  421a53:	mov    r12,rax
  421a56:	mov    rdi,rax
  421a59:	call   42adf0 <strcmp@plt+0x27668>
  421a5e:	mov    rdi,r15
  421a61:	call   4230a0 <strcmp@plt+0x1f918>
  421a66:	mov    BYTE PTR [r12+0x5],al
  421a6b:	mov    BYTE PTR [r12+0x4],0x0
  421a71:	movbe  DWORD PTR [r12],r13d
  421a77:	mov    al,BYTE PTR [r12+0x6]
  421a7c:	shl    bl,0x5
  421a7f:	and    al,0xf
  421a81:	shl    bpl,0x4
  421a85:	and    bpl,0x10
  421a89:	or     bpl,bl
  421a8c:	or     bpl,al
  421a8f:	mov    BYTE PTR [r12+0x6],bpl
  421a94:	mov    rdi,r15
  421a97:	call   423040 <strcmp@plt+0x1f8b8>
  421a9c:	mov    rdi,r14
  421a9f:	mov    esi,eax
  421aa1:	call   42e270 <strcmp@plt+0x2aae8>
  421aa6:	mov    rbx,rax
  421aa9:	mov    rdi,rax
  421aac:	mov    rsi,r15
  421aaf:	call   423840 <strcmp@plt+0x200b8>
  421ab4:	test   eax,eax
  421ab6:	jle    421af6 <strcmp@plt+0x1e36e>
  421ab8:	test   rbx,rbx
  421abb:	je     421b02 <strcmp@plt+0x1e37a>
  421abd:	movzx  eax,WORD PTR [r14+0x24]
  421ac2:	cmp    rax,0xffff
  421ac8:	je     421b2b <strcmp@plt+0x1e3a3>
  421aca:	add    rax,QWORD PTR [r14+0x30]
  421ace:	je     421b2b <strcmp@plt+0x1e3a3>
  421ad0:	mov    cl,BYTE PTR [rax]
  421ad2:	shr    cl,0x4
  421ad5:	add    cl,0xff
  421ad8:	cmp    cl,0x5
  421adb:	ja     421b2b <strcmp@plt+0x1e3a3>
  421add:	movzx  ecx,cl
  421ae0:	lea    rdx,[rip+0x275bd]        # 4490a4 <strcmp@plt+0x4591c>
  421ae7:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  421aeb:	add    rcx,rdx
  421aee:	jmp    rcx
  421af0:	add    BYTE PTR [rax+0x3],0x1
  421af4:	jmp    421b2b <strcmp@plt+0x1e3a3>
  421af6:	lea    rax,[rip+0x432b3]        # 464db0 <strcmp@plt+0x61628>
  421afd:	cmp    DWORD PTR [rax],0x3
  421b00:	jge    421b07 <strcmp@plt+0x1e37f>
  421b02:	xor    r12d,r12d
  421b05:	jmp    421b2b <strcmp@plt+0x1e3a3>
  421b07:	mov    rdi,r15
  421b0a:	call   423130 <strcmp@plt+0x1f9a8>
  421b0f:	mov    rcx,rax
  421b12:	lea    rsi,[rip+0x276e1]        # 4491fa <strcmp@plt+0x45a72>
  421b19:	xor    r12d,r12d
  421b1c:	mov    edi,0x7
  421b21:	xor    eax,eax
  421b23:	mov    rdx,rcx
  421b26:	call   42e800 <strcmp@plt+0x2b078>
  421b2b:	mov    rax,r12
  421b2e:	add    rsp,0x8
  421b32:	pop    rbx
  421b33:	pop    r12
  421b35:	pop    r13
  421b37:	pop    r14
  421b39:	pop    r15
  421b3b:	pop    rbp
  421b3c:	ret    
  421b3d:	nop    DWORD PTR [rax]
  421b40:	push   rbx
  421b41:	mov    esi,0xa
  421b46:	call   42e270 <strcmp@plt+0x2aae8>
  421b4b:	mov    rbx,rax
  421b4e:	mov    rdi,rax
  421b51:	call   42ae10 <strcmp@plt+0x27688>
  421b56:	mov    rax,rbx
  421b59:	pop    rbx
  421b5a:	ret    
  421b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  421b60:	push   rbp
  421b61:	push   r15
  421b63:	push   r14
  421b65:	push   r13
  421b67:	push   r12
  421b69:	push   rbx
  421b6a:	push   rax
  421b6b:	mov    r15,rsi
  421b6e:	mov    r13,rdi
  421b71:	mov    esi,0xa
  421b76:	call   42e270 <strcmp@plt+0x2aae8>
  421b7b:	mov    rbp,rax
  421b7e:	mov    rdi,rax
  421b81:	call   42ae10 <strcmp@plt+0x27688>
  421b86:	mov    rdi,r15
  421b89:	call   4230a0 <strcmp@plt+0x1f918>
  421b8e:	mov    BYTE PTR [rbp+0x5],al
  421b91:	mov    eax,DWORD PTR [r15+0x38]
  421b95:	movbe  DWORD PTR [rbp+0x0],eax
  421b9a:	mov    al,BYTE PTR [r15+0x3c]
  421b9e:	mov    cl,BYTE PTR [rbp+0x6]
  421ba1:	shl    al,0x5
  421ba4:	and    cl,0x1f
  421ba7:	or     cl,al
  421ba9:	mov    BYTE PTR [rbp+0x6],cl
  421bac:	mov    al,BYTE PTR [r15+0x3d]
  421bb0:	shl    al,0x4
  421bb3:	and    al,0x10
  421bb5:	and    cl,0xef
  421bb8:	or     cl,al
  421bba:	mov    BYTE PTR [rbp+0x6],cl
  421bbd:	mov    al,BYTE PTR [r15+0x3e]
  421bc1:	shl    al,0x3
  421bc4:	and    al,0x8
  421bc6:	and    cl,0xf7
  421bc9:	or     cl,al
  421bcb:	mov    BYTE PTR [rbp+0x6],cl
  421bce:	mov    rdi,r15
  421bd1:	call   423040 <strcmp@plt+0x1f8b8>
  421bd6:	mov    rdi,r13
  421bd9:	mov    esi,eax
  421bdb:	call   42e270 <strcmp@plt+0x2aae8>
  421be0:	mov    r12,rax
  421be3:	mov    rdi,rax
  421be6:	mov    rsi,r15
  421be9:	call   423840 <strcmp@plt+0x200b8>
  421bee:	test   eax,eax
  421bf0:	jle    421cad <strcmp@plt+0x1e525>
  421bf6:	xor    ebx,ebx
  421bf8:	test   r12,r12
  421bfb:	je     421cb9 <strcmp@plt+0x1e531>
  421c01:	mov    QWORD PTR [rsp],rbp
  421c05:	mov    rax,QWORD PTR [r15+0x28]
  421c09:	mov    r12,QWORD PTR [rax+0x8]
  421c0d:	cmp    r12,rax
  421c10:	je     421c69 <strcmp@plt+0x1e4e1>
  421c12:	xor    ebx,ebx
  421c14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c1e:	xchg   ax,ax
  421c20:	mov    rbp,QWORD PTR [r12+0x10]
  421c25:	cmp    DWORD PTR [rbp+0x18],0x0
  421c29:	je     421c5e <strcmp@plt+0x1e4d6>
  421c2b:	mov    r14,QWORD PTR [rbp+0x8]
  421c2f:	cmp    r14,rbp
  421c32:	je     421c5e <strcmp@plt+0x1e4d6>
  421c34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c3e:	xchg   ax,ax
  421c40:	mov    rsi,QWORD PTR [r14+0x10]
  421c44:	cmp    BYTE PTR [rsi+0x8],0x0
  421c48:	je     421c55 <strcmp@plt+0x1e4cd>
  421c4a:	mov    rdi,r13
  421c4d:	call   421790 <strcmp@plt+0x1e008>
  421c52:	add    ebx,0x1
  421c55:	mov    r14,QWORD PTR [r14+0x8]
  421c59:	cmp    r14,rbp
  421c5c:	jne    421c40 <strcmp@plt+0x1e4b8>
  421c5e:	mov    r12,QWORD PTR [r12+0x8]
  421c63:	cmp    r12,QWORD PTR [r15+0x28]
  421c67:	jne    421c20 <strcmp@plt+0x1e498>
  421c69:	mov    rbp,QWORD PTR [rsp]
  421c6d:	mov    BYTE PTR [rbp+0x4],bl
  421c70:	and    BYTE PTR [rbp+0x8],0xf
  421c74:	movzx  eax,WORD PTR [r13+0x24]
  421c79:	cmp    rax,0xffff
  421c7f:	je     421ce0 <strcmp@plt+0x1e558>
  421c81:	add    rax,QWORD PTR [r13+0x30]
  421c85:	je     421ce0 <strcmp@plt+0x1e558>
  421c87:	mov    cl,BYTE PTR [rax]
  421c89:	shr    cl,0x4
  421c8c:	add    cl,0xff
  421c8f:	cmp    cl,0x5
  421c92:	ja     421ce0 <strcmp@plt+0x1e558>
  421c94:	movzx  ecx,cl
  421c97:	lea    rdx,[rip+0x2741e]        # 4490bc <strcmp@plt+0x45934>
  421c9e:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  421ca2:	add    rcx,rdx
  421ca5:	jmp    rcx
  421ca7:	add    BYTE PTR [rax+0x3],0x1
  421cab:	jmp    421ce0 <strcmp@plt+0x1e558>
  421cad:	lea    rax,[rip+0x430fc]        # 464db0 <strcmp@plt+0x61628>
  421cb4:	cmp    DWORD PTR [rax],0x3
  421cb7:	jge    421cbd <strcmp@plt+0x1e535>
  421cb9:	xor    ebp,ebp
  421cbb:	jmp    421ce0 <strcmp@plt+0x1e558>
  421cbd:	mov    rdi,r15
  421cc0:	call   423130 <strcmp@plt+0x1f9a8>
  421cc5:	mov    rcx,rax
  421cc8:	lea    rsi,[rip+0x2752b]        # 4491fa <strcmp@plt+0x45a72>
  421ccf:	xor    ebp,ebp
  421cd1:	mov    edi,0x7
  421cd6:	xor    eax,eax
  421cd8:	mov    rdx,rcx
  421cdb:	call   42e800 <strcmp@plt+0x2b078>
  421ce0:	mov    rax,rbp
  421ce3:	add    rsp,0x8
  421ce7:	pop    rbx
  421ce8:	pop    r12
  421cea:	pop    r13
  421cec:	pop    r14
  421cee:	pop    r15
  421cf0:	pop    rbp
  421cf1:	ret    
  421cf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421cfc:	nop    DWORD PTR [rax+0x0]
  421d00:	push   rbp
  421d01:	push   r15
  421d03:	push   r14
  421d05:	push   r13
  421d07:	push   r12
  421d09:	push   rbx
  421d0a:	push   rax
  421d0b:	mov    ebp,r9d
  421d0e:	mov    ebx,r8d
  421d11:	mov    r13d,ecx
  421d14:	mov    DWORD PTR [rsp+0x4],edx
  421d18:	mov    r15,rsi
  421d1b:	mov    r14,rdi
  421d1e:	mov    esi,0xa
  421d23:	call   42e270 <strcmp@plt+0x2aae8>
  421d28:	mov    r12,rax
  421d2b:	mov    rdi,rax
  421d2e:	call   42ae10 <strcmp@plt+0x27688>
  421d33:	mov    rdi,r15
  421d36:	call   4230a0 <strcmp@plt+0x1f918>
  421d3b:	mov    BYTE PTR [r12+0x5],al
  421d40:	mov    BYTE PTR [r12+0x4],0x0
  421d46:	mov    eax,DWORD PTR [rsp+0x4]
  421d4a:	movbe  DWORD PTR [r12],eax
  421d50:	mov    al,BYTE PTR [r12+0x6]
  421d55:	shl    r13b,0x5
  421d59:	and    al,0x7
  421d5b:	shl    bl,0x4
  421d5e:	and    bl,0x10
  421d61:	or     bl,r13b
  421d64:	shl    bpl,0x3
  421d68:	and    bpl,0x8
  421d6c:	or     bpl,bl
  421d6f:	or     bpl,al
  421d72:	mov    BYTE PTR [r12+0x6],bpl
  421d77:	and    BYTE PTR [r12+0x8],0xf
  421d7d:	mov    rdi,r15
  421d80:	call   423040 <strcmp@plt+0x1f8b8>
  421d85:	mov    rdi,r14
  421d88:	mov    esi,eax
  421d8a:	call   42e270 <strcmp@plt+0x2aae8>
  421d8f:	mov    rbx,rax
  421d92:	mov    rdi,rax
  421d95:	mov    rsi,r15
  421d98:	call   423840 <strcmp@plt+0x200b8>
  421d9d:	test   eax,eax
  421d9f:	jle    421ddf <strcmp@plt+0x1e657>
  421da1:	test   rbx,rbx
  421da4:	je     421deb <strcmp@plt+0x1e663>
  421da6:	movzx  eax,WORD PTR [r14+0x24]
  421dab:	cmp    rax,0xffff
  421db1:	je     421e14 <strcmp@plt+0x1e68c>
  421db3:	add    rax,QWORD PTR [r14+0x30]
  421db7:	je     421e14 <strcmp@plt+0x1e68c>
  421db9:	mov    cl,BYTE PTR [rax]
  421dbb:	shr    cl,0x4
  421dbe:	add    cl,0xff
  421dc1:	cmp    cl,0x5
  421dc4:	ja     421e14 <strcmp@plt+0x1e68c>
  421dc6:	movzx  ecx,cl
  421dc9:	lea    rdx,[rip+0x27304]        # 4490d4 <strcmp@plt+0x4594c>
  421dd0:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  421dd4:	add    rcx,rdx
  421dd7:	jmp    rcx
  421dd9:	add    BYTE PTR [rax+0x3],0x1
  421ddd:	jmp    421e14 <strcmp@plt+0x1e68c>
  421ddf:	lea    rax,[rip+0x42fca]        # 464db0 <strcmp@plt+0x61628>
  421de6:	cmp    DWORD PTR [rax],0x3
  421de9:	jge    421df0 <strcmp@plt+0x1e668>
  421deb:	xor    r12d,r12d
  421dee:	jmp    421e14 <strcmp@plt+0x1e68c>
  421df0:	mov    rdi,r15
  421df3:	call   423130 <strcmp@plt+0x1f9a8>
  421df8:	mov    rcx,rax
  421dfb:	lea    rsi,[rip+0x273f8]        # 4491fa <strcmp@plt+0x45a72>
  421e02:	xor    r12d,r12d
  421e05:	mov    edi,0x7
  421e0a:	xor    eax,eax
  421e0c:	mov    rdx,rcx
  421e0f:	call   42e800 <strcmp@plt+0x2b078>
  421e14:	mov    rax,r12
  421e17:	add    rsp,0x8
  421e1b:	pop    rbx
  421e1c:	pop    r12
  421e1e:	pop    r13
  421e20:	pop    r14
  421e22:	pop    r15
  421e24:	pop    rbp
  421e25:	ret    
  421e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421e30:	push   rbp
  421e31:	push   r15
  421e33:	push   r14
  421e35:	push   r13
  421e37:	push   r12
  421e39:	push   rbx
  421e3a:	push   rax
  421e3b:	mov    eax,DWORD PTR [rsi+0x18]
  421e3e:	test   eax,eax
  421e40:	je     421edc <strcmp@plt+0x1e754>
  421e46:	mov    r12,rsi
  421e49:	mov    r15,rdi
  421e4c:	mov    r14,QWORD PTR [rdi+0x38]
  421e50:	mov    rbp,QWORD PTR [rsi+0x8]
  421e54:	cmp    rbp,rsi
  421e57:	je     421e9b <strcmp@plt+0x1e713>
  421e59:	nop    DWORD PTR [rax+0x0]
  421e60:	mov    r13,QWORD PTR [rbp+0x10]
  421e64:	mov    rdi,r13
  421e67:	call   423040 <strcmp@plt+0x1f8b8>
  421e6c:	mov    rdi,r15
  421e6f:	mov    esi,eax
  421e71:	call   42e270 <strcmp@plt+0x2aae8>
  421e76:	mov    rbx,rax
  421e79:	mov    rdi,rax
  421e7c:	mov    rsi,r13
  421e7f:	call   423840 <strcmp@plt+0x200b8>
  421e84:	test   eax,eax
  421e86:	jle    421ed0 <strcmp@plt+0x1e748>
  421e88:	test   rbx,rbx
  421e8b:	je     421edc <strcmp@plt+0x1e754>
  421e8d:	mov    rbp,QWORD PTR [rbp+0x8]
  421e91:	cmp    rbp,r12
  421e94:	jne    421e60 <strcmp@plt+0x1e6d8>
  421e96:	mov    eax,DWORD PTR [r12+0x18]
  421e9b:	movzx  ecx,WORD PTR [r15+0x24]
  421ea0:	mov    rdx,QWORD PTR [r15+0x30]
  421ea4:	add    al,0xff
  421ea6:	movzx  esi,WORD PTR [rdx+rcx*1]
  421eaa:	movzx  edi,BYTE PTR [rdx+rcx*1+0x2]
  421eaf:	shl    edi,0x10
  421eb2:	and    al,0x1f
  421eb4:	movzx  eax,al
  421eb7:	shl    eax,0x10
  421eba:	and    edi,0xe00000
  421ec0:	or     edi,eax
  421ec2:	mov    WORD PTR [rdx+rcx*1],si
  421ec6:	shr    edi,0x10
  421ec9:	mov    BYTE PTR [rdx+rcx*1+0x2],dil
  421ece:	jmp    421edf <strcmp@plt+0x1e757>
  421ed0:	lea    rax,[rip+0x42ed9]        # 464db0 <strcmp@plt+0x61628>
  421ed7:	cmp    DWORD PTR [rax],0x3
  421eda:	jge    421ef1 <strcmp@plt+0x1e769>
  421edc:	xor    r14d,r14d
  421edf:	mov    rax,r14
  421ee2:	add    rsp,0x8
  421ee6:	pop    rbx
  421ee7:	pop    r12
  421ee9:	pop    r13
  421eeb:	pop    r14
  421eed:	pop    r15
  421eef:	pop    rbp
  421ef0:	ret    
  421ef1:	mov    rdi,r13
  421ef4:	call   423130 <strcmp@plt+0x1f9a8>
  421ef9:	mov    rcx,rax
  421efc:	lea    rsi,[rip+0x272f7]        # 4491fa <strcmp@plt+0x45a72>
  421f03:	xor    r14d,r14d
  421f06:	mov    edi,0x7
  421f0b:	xor    eax,eax
  421f0d:	mov    rdx,rcx
  421f10:	call   42e800 <strcmp@plt+0x2b078>
  421f15:	jmp    421edf <strcmp@plt+0x1e757>
  421f17:	nop    WORD PTR [rax+rax*1+0x0]
  421f20:	push   r15
  421f22:	push   r14
  421f24:	push   rbx
  421f25:	mov    rbx,rsi
  421f28:	mov    r15,rdi
  421f2b:	mov    esi,0x2
  421f30:	call   42e270 <strcmp@plt+0x2aae8>
  421f35:	mov    r14,rax
  421f38:	mov    rdi,rax
  421f3b:	call   42b430 <strcmp@plt+0x27ca8>
  421f40:	mov    rdi,rbx
  421f43:	call   4230a0 <strcmp@plt+0x1f918>
  421f48:	mov    BYTE PTR [r14+0x1],al
  421f4c:	mov    rdi,rbx
  421f4f:	call   423040 <strcmp@plt+0x1f8b8>
  421f54:	mov    rdi,r15
  421f57:	mov    esi,eax
  421f59:	call   42e270 <strcmp@plt+0x2aae8>
  421f5e:	mov    rdi,rax
  421f61:	mov    rsi,rbx
  421f64:	call   423840 <strcmp@plt+0x200b8>
  421f69:	test   eax,eax
  421f6b:	jg     421f9a <strcmp@plt+0x1e812>
  421f6d:	lea    rax,[rip+0x42e3c]        # 464db0 <strcmp@plt+0x61628>
  421f74:	cmp    DWORD PTR [rax],0x3
  421f77:	jl     421f9a <strcmp@plt+0x1e812>
  421f79:	mov    rdi,rbx
  421f7c:	call   423130 <strcmp@plt+0x1f9a8>
  421f81:	mov    rcx,rax
  421f84:	lea    rsi,[rip+0x2726f]        # 4491fa <strcmp@plt+0x45a72>
  421f8b:	mov    edi,0x7
  421f90:	xor    eax,eax
  421f92:	mov    rdx,rcx
  421f95:	call   42e800 <strcmp@plt+0x2b078>
  421f9a:	movzx  eax,WORD PTR [r15+0x24]
  421f9f:	cmp    rax,0xffff
  421fa5:	je     421fd1 <strcmp@plt+0x1e849>
  421fa7:	add    rax,QWORD PTR [r15+0x30]
  421fab:	je     421fd1 <strcmp@plt+0x1e849>
  421fad:	mov    cl,BYTE PTR [rax]
  421faf:	shr    cl,0x4
  421fb2:	add    cl,0xff
  421fb5:	cmp    cl,0x5
  421fb8:	ja     421fd1 <strcmp@plt+0x1e849>
  421fba:	movzx  ecx,cl
  421fbd:	lea    rdx,[rip+0x27128]        # 4490ec <strcmp@plt+0x45964>
  421fc4:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  421fc8:	add    rcx,rdx
  421fcb:	jmp    rcx
  421fcd:	add    BYTE PTR [rax+0x3],0x1
  421fd1:	mov    rax,r14
  421fd4:	pop    rbx
  421fd5:	pop    r14
  421fd7:	pop    r15
  421fd9:	ret    
  421fda:	nop    WORD PTR [rax+rax*1+0x0]
  421fe0:	push   r15
  421fe2:	push   r14
  421fe4:	push   rbx
  421fe5:	mov    r14,rdx
  421fe8:	mov    rbx,rdi
  421feb:	mov    edx,0x10
  421ff0:	call   42e2c0 <strcmp@plt+0x2ab38>
  421ff5:	mov    r15,rax
  421ff8:	mov    edx,0x8
  421ffd:	mov    rdi,rbx
  422000:	mov    rsi,r14
  422003:	call   42e2c0 <strcmp@plt+0x2ab38>
  422008:	mov    rax,r15
  42200b:	pop    rbx
  42200c:	pop    r14
  42200e:	pop    r15
  422010:	ret    
  422011:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42201b:	nop    DWORD PTR [rax+rax*1+0x0]
  422020:	push   rbp
  422021:	push   r15
  422023:	push   r14
  422025:	push   r13
  422027:	push   r12
  422029:	push   rbx
  42202a:	push   rax
  42202b:	mov    r14,r8
  42202e:	mov    r15,rcx
  422031:	mov    r12d,edx
  422034:	mov    r13d,esi
  422037:	mov    rbx,rdi
  42203a:	mov    eax,DWORD PTR [rdi+0x38]
  42203d:	sub    eax,DWORD PTR [rdi+0x30]
  422040:	mov    WORD PTR [rdi+0x24],ax
  422044:	mov    rdi,rcx
  422047:	call   4232e0 <strcmp@plt+0x1fb58>
  42204c:	mov    rbp,rax
  42204f:	test   rax,rax
  422052:	jne    42205f <strcmp@plt+0x1e8d7>
  422054:	mov    rdi,r15
  422057:	call   4230e0 <strcmp@plt+0x1f958>
  42205c:	mov    rbp,rax
  42205f:	mov    rdi,r14
  422062:	call   4232e0 <strcmp@plt+0x1fb58>
  422067:	test   rax,rax
  42206a:	jne    422074 <strcmp@plt+0x1e8ec>
  42206c:	mov    rdi,r14
  42206f:	call   4230e0 <strcmp@plt+0x1f958>
  422074:	movzx  esi,r13w
  422078:	movzx  edx,r12w
  42207c:	mov    rdi,rbx
  42207f:	mov    rcx,rbp
  422082:	mov    r8,rax
  422085:	call   4331d0 <strcmp@plt+0x2fa48>
  42208a:	mov    esi,0x4
  42208f:	mov    rdi,rbx
  422092:	call   42e320 <strcmp@plt+0x2ab98>
  422097:	mov    rdi,rax
  42209a:	call   42a520 <strcmp@plt+0x26d98>
  42209f:	mov    rdi,QWORD PTR [rbx+0x30]
  4220a3:	mov    rax,QWORD PTR [rbx+0x38]
  4220a7:	mov    rcx,rax
  4220aa:	sub    rcx,rdi
  4220ad:	mov    WORD PTR [rbx+0x1e],cx
  4220b1:	lea    rdx,[rip+0x42cf8]        # 464db0 <strcmp@plt+0x61628>
  4220b8:	cmp    DWORD PTR [rdx],0x0
  4220bb:	jle    42211f <strcmp@plt+0x1e997>
  4220bd:	movzx  eax,cx
  4220c0:	cmp    eax,0xffff
  4220c5:	je     4220d9 <strcmp@plt+0x1e951>
  4220c7:	movzx  eax,cx
  4220ca:	add    rdi,rax
  4220cd:	je     4220d9 <strcmp@plt+0x1e951>
  4220cf:	call   42ac00 <strcmp@plt+0x27478>
  4220d4:	mov    r12,rax
  4220d7:	jmp    4220dc <strcmp@plt+0x1e954>
  4220d9:	xor    r12d,r12d
  4220dc:	mov    rdi,r15
  4220df:	call   423130 <strcmp@plt+0x1f9a8>
  4220e4:	mov    r15,rax
  4220e7:	mov    rdi,r14
  4220ea:	call   423130 <strcmp@plt+0x1f9a8>
  4220ef:	mov    rbp,rax
  4220f2:	mov    DWORD PTR [rsp],0x10f6
  4220f9:	lea    rsi,[rip+0x27128]        # 449228 <strcmp@plt+0x45aa0>
  422100:	mov    edi,0x5
  422105:	mov    r9d,0x10f6
  42210b:	xor    eax,eax
  42210d:	mov    rdx,r12
  422110:	mov    rcx,r15
  422113:	mov    r8,rbp
  422116:	call   42e800 <strcmp@plt+0x2b078>
  42211b:	mov    rax,QWORD PTR [rbx+0x38]
  42211f:	add    rsp,0x8
  422123:	pop    rbx
  422124:	pop    r12
  422126:	pop    r13
  422128:	pop    r14
  42212a:	pop    r15
  42212c:	pop    rbp
  42212d:	ret    
  42212e:	xchg   ax,ax
  422130:	push   rbx
  422131:	mov    rbx,rdi
  422134:	mov    esi,0x4
  422139:	call   42e320 <strcmp@plt+0x2ab98>
  42213e:	mov    rdi,rax
  422141:	call   42a520 <strcmp@plt+0x26d98>
  422146:	mov    rax,QWORD PTR [rbx+0x38]
  42214a:	mov    ecx,DWORD PTR [rbx+0x30]
  42214d:	mov    edx,eax
  42214f:	sub    edx,ecx
  422151:	mov    WORD PTR [rbx+0x1e],dx
  422155:	pop    rbx
  422156:	ret    
  422157:	nop    WORD PTR [rax+rax*1+0x0]
  422160:	mov    rax,rdi
  422163:	movzx  edi,WORD PTR [rdi+0x1e]
  422167:	cmp    rdi,0xffff
  42216e:	je     42217b <strcmp@plt+0x1e9f3>
  422170:	add    rdi,QWORD PTR [rax+0x30]
  422174:	je     42217b <strcmp@plt+0x1e9f3>
  422176:	jmp    42ac00 <strcmp@plt+0x27478>
  42217b:	xor    eax,eax
  42217d:	ret    
  42217e:	xchg   ax,ax
  422180:	push   rax
  422181:	mov    edi,0x1000
  422186:	mov    esi,0x64
  42218b:	call   42e040 <strcmp@plt+0x2a8b8>
  422190:	mov    ecx,DWORD PTR [rax+0x38]
  422193:	sub    ecx,DWORD PTR [rax+0x30]
  422196:	mov    WORD PTR [rax+0x24],cx
  42219a:	pop    rcx
  42219b:	ret    
  42219c:	nop    DWORD PTR [rax+0x0]
  4221a0:	push   r14
  4221a2:	push   rbx
  4221a3:	push   rax
  4221a4:	mov    r14d,edi
  4221a7:	mov    edi,0x1000
  4221ac:	mov    esi,0x64
  4221b1:	call   42e040 <strcmp@plt+0x2a8b8>
  4221b6:	mov    rbx,rax
  4221b9:	mov    eax,DWORD PTR [rax+0x38]
  4221bc:	sub    eax,DWORD PTR [rbx+0x30]
  4221bf:	mov    WORD PTR [rbx+0x24],ax
  4221c3:	lea    eax,[r14-0x1]
  4221c7:	cmp    eax,0x7
  4221ca:	ja     4221f6 <strcmp@plt+0x1ea6e>
  4221cc:	lea    rcx,[rip+0x26f31]        # 449104 <strcmp@plt+0x4597c>
  4221d3:	movsxd rax,DWORD PTR [rcx+rax*4]
  4221d7:	add    rax,rcx
  4221da:	jmp    rax
  4221dc:	mov    esi,0xc
  4221e1:	mov    rdi,rbx
  4221e4:	call   42e270 <strcmp@plt+0x2aae8>
  4221e9:	mov    rdi,rax
  4221ec:	call   42a4c0 <strcmp@plt+0x26d38>
  4221f1:	jmp    42228f <strcmp@plt+0x1eb07>
  4221f6:	lea    rax,[rip+0x42bb3]        # 464db0 <strcmp@plt+0x61628>
  4221fd:	cmp    DWORD PTR [rax],0x3
  422200:	jl     42228f <strcmp@plt+0x1eb07>
  422206:	lea    rsi,[rip+0x27047]        # 449254 <strcmp@plt+0x45acc>
  42220d:	mov    edi,0x7
  422212:	xor    eax,eax
  422214:	mov    edx,r14d
  422217:	call   42e800 <strcmp@plt+0x2b078>
  42221c:	jmp    42228f <strcmp@plt+0x1eb07>
  42221e:	mov    esi,0xc
  422223:	mov    rdi,rbx
  422226:	call   42e270 <strcmp@plt+0x2aae8>
  42222b:	mov    rdi,rax
  42222e:	call   42a4d0 <strcmp@plt+0x26d48>
  422233:	jmp    42228f <strcmp@plt+0x1eb07>
  422235:	mov    esi,0xc
  42223a:	mov    rdi,rbx
  42223d:	call   42e270 <strcmp@plt+0x2aae8>
  422242:	mov    rdi,rax
  422245:	call   42a4e0 <strcmp@plt+0x26d58>
  42224a:	jmp    42228f <strcmp@plt+0x1eb07>
  42224c:	mov    esi,0xc
  422251:	mov    rdi,rbx
  422254:	call   42e270 <strcmp@plt+0x2aae8>
  422259:	mov    rdi,rax
  42225c:	call   42a500 <strcmp@plt+0x26d78>
  422261:	jmp    42228f <strcmp@plt+0x1eb07>
  422263:	mov    esi,0xc
  422268:	mov    rdi,rbx
  42226b:	call   42e270 <strcmp@plt+0x2aae8>
  422270:	mov    rdi,rax
  422273:	call   42a550 <strcmp@plt+0x26dc8>
  422278:	jmp    42228f <strcmp@plt+0x1eb07>
  42227a:	mov    esi,0xc
  42227f:	mov    rdi,rbx
  422282:	call   42e270 <strcmp@plt+0x2aae8>
  422287:	mov    rdi,rax
  42228a:	call   42a530 <strcmp@plt+0x26da8>
  42228f:	mov    rax,rbx
  422292:	add    rsp,0x8
  422296:	pop    rbx
  422297:	pop    r14
  422299:	ret    
  42229a:	nop    WORD PTR [rax+rax*1+0x0]
  4222a0:	push   r15
  4222a2:	push   r14
  4222a4:	push   r13
  4222a6:	push   r12
  4222a8:	push   rbx
  4222a9:	mov    r14,rdx
  4222ac:	mov    r15,rsi
  4222af:	mov    r12,rdi
  4222b2:	mov    edi,0x1000
  4222b7:	mov    esi,0x64
  4222bc:	call   42e040 <strcmp@plt+0x2a8b8>
  4222c1:	mov    r13,rax
  4222c4:	mov    eax,DWORD PTR [rax+0x38]
  4222c7:	sub    eax,DWORD PTR [r13+0x30]
  4222cb:	mov    WORD PTR [r13+0x24],ax
  4222d0:	mov    esi,0xc
  4222d5:	mov    rdi,r13
  4222d8:	call   42e270 <strcmp@plt+0x2aae8>
  4222dd:	mov    rdi,rax
  4222e0:	call   42a4c0 <strcmp@plt+0x26d38>
  4222e5:	mov    rdi,r12
  4222e8:	call   423040 <strcmp@plt+0x1f8b8>
  4222ed:	mov    rdi,r13
  4222f0:	mov    esi,eax
  4222f2:	call   42e270 <strcmp@plt+0x2aae8>
  4222f7:	mov    rbx,rax
  4222fa:	mov    rdi,rax
  4222fd:	mov    rsi,r12
  422300:	call   423840 <strcmp@plt+0x200b8>
  422305:	test   eax,eax
  422307:	jle    422330 <strcmp@plt+0x1eba8>
  422309:	test   rbx,rbx
  42230c:	je     42235d <strcmp@plt+0x1ebd5>
  42230e:	mov    rdi,r13
  422311:	mov    rsi,r15
  422314:	call   421e30 <strcmp@plt+0x1e6a8>
  422319:	test   rax,rax
  42231c:	je     42235d <strcmp@plt+0x1ebd5>
  42231e:	mov    rdi,r13
  422321:	mov    rsi,r14
  422324:	call   421f20 <strcmp@plt+0x1e798>
  422329:	test   rax,rax
  42232c:	jne    422368 <strcmp@plt+0x1ebe0>
  42232e:	jmp    42235d <strcmp@plt+0x1ebd5>
  422330:	lea    rax,[rip+0x42a79]        # 464db0 <strcmp@plt+0x61628>
  422337:	cmp    DWORD PTR [rax],0x3
  42233a:	jl     42235d <strcmp@plt+0x1ebd5>
  42233c:	mov    rdi,r12
  42233f:	call   423130 <strcmp@plt+0x1f9a8>
  422344:	mov    rcx,rax
  422347:	lea    rsi,[rip+0x26eac]        # 4491fa <strcmp@plt+0x45a72>
  42234e:	mov    edi,0x7
  422353:	xor    eax,eax
  422355:	mov    rdx,rcx
  422358:	call   42e800 <strcmp@plt+0x2b078>
  42235d:	mov    rdi,r13
  422360:	call   42e010 <strcmp@plt+0x2a888>
  422365:	xor    r13d,r13d
  422368:	mov    rax,r13
  42236b:	pop    rbx
  42236c:	pop    r12
  42236e:	pop    r13
  422370:	pop    r14
  422372:	pop    r15
  422374:	ret    
  422375:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42237f:	nop
  422380:	push   rbp
  422381:	push   r15
  422383:	push   r14
  422385:	push   r13
  422387:	push   r12
  422389:	push   rbx
  42238a:	push   rax
  42238b:	mov    r14,r8
  42238e:	mov    r15d,ecx
  422391:	mov    r12d,edx
  422394:	mov    r13d,esi
  422397:	mov    rbx,rdi
  42239a:	mov    edi,0x1000
  42239f:	mov    esi,0x64
  4223a4:	call   42e040 <strcmp@plt+0x2a8b8>
  4223a9:	mov    rbp,rax
  4223ac:	mov    eax,DWORD PTR [rax+0x38]
  4223af:	sub    eax,DWORD PTR [rbp+0x30]
  4223b2:	mov    WORD PTR [rbp+0x24],ax
  4223b6:	mov    esi,0xc
  4223bb:	mov    rdi,rbp
  4223be:	call   42e270 <strcmp@plt+0x2aae8>
  4223c3:	mov    rdi,rax
  4223c6:	call   42a4d0 <strcmp@plt+0x26d48>
  4223cb:	mov    rdi,rbp
  4223ce:	mov    rsi,rbx
  4223d1:	mov    edx,r13d
  4223d4:	mov    ecx,r12d
  4223d7:	mov    r8d,r15d
  4223da:	call   421a30 <strcmp@plt+0x1e2a8>
  4223df:	movzx  eax,WORD PTR [rbp+0x24]
  4223e3:	mov    rcx,QWORD PTR [rbp+0x30]
  4223e7:	mov    QWORD PTR [rcx+rax*1+0x4],r14
  4223ec:	mov    rax,rbp
  4223ef:	add    rsp,0x8
  4223f3:	pop    rbx
  4223f4:	pop    r12
  4223f6:	pop    r13
  4223f8:	pop    r14
  4223fa:	pop    r15
  4223fc:	pop    rbp
  4223fd:	ret    
  4223fe:	xchg   ax,ax
  422400:	push   rbp
  422401:	push   r15
  422403:	push   r14
  422405:	push   r13
  422407:	push   r12
  422409:	push   rbx
  42240a:	push   rax
  42240b:	mov    QWORD PTR [rsp],r9
  42240f:	mov    r15d,r8d
  422412:	mov    r12d,ecx
  422415:	mov    r13d,edx
  422418:	mov    ebx,esi
  42241a:	mov    rbp,rdi
  42241d:	mov    edi,0x1000
  422422:	mov    esi,0x64
  422427:	call   42e040 <strcmp@plt+0x2a8b8>
  42242c:	mov    r14,rax
  42242f:	mov    eax,DWORD PTR [rax+0x38]
  422432:	sub    eax,DWORD PTR [r14+0x30]
  422436:	mov    WORD PTR [r14+0x24],ax
  42243b:	mov    esi,0xc
  422440:	mov    rdi,r14
  422443:	call   42e270 <strcmp@plt+0x2aae8>
  422448:	mov    rdi,rax
  42244b:	call   42a550 <strcmp@plt+0x26dc8>
  422450:	mov    rdi,r14
  422453:	mov    rsi,rbp
  422456:	mov    edx,ebx
  422458:	mov    ecx,r13d
  42245b:	mov    r8d,r12d
  42245e:	mov    r9d,r15d
  422461:	call   421d00 <strcmp@plt+0x1e578>
  422466:	movzx  eax,WORD PTR [r14+0x24]
  42246b:	mov    rcx,QWORD PTR [r14+0x30]
  42246f:	mov    rdx,QWORD PTR [rsp]
  422473:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  422478:	mov    rax,r14
  42247b:	add    rsp,0x8
  42247f:	pop    rbx
  422480:	pop    r12
  422482:	pop    r13
  422484:	pop    r14
  422486:	pop    r15
  422488:	pop    rbp
  422489:	ret    
  42248a:	nop    WORD PTR [rax+rax*1+0x0]
  422490:	push   rbp
  422491:	push   r15
  422493:	push   r14
  422495:	push   r12
  422497:	push   rbx
  422498:	sub    rsp,0x20
  42249c:	mov    r15d,esi
  42249f:	mov    r14,rdi
  4224a2:	mov    edi,0x1000
  4224a7:	mov    esi,0x64
  4224ac:	call   42e040 <strcmp@plt+0x2a8b8>
  4224b1:	mov    r12,rax
  4224b4:	mov    eax,DWORD PTR [rax+0x38]
  4224b7:	sub    eax,DWORD PTR [r12+0x30]
  4224bc:	mov    WORD PTR [r12+0x24],ax
  4224c2:	mov    esi,0xc
  4224c7:	mov    rdi,r12
  4224ca:	call   42e270 <strcmp@plt+0x2aae8>
  4224cf:	mov    rdi,rax
  4224d2:	call   42a530 <strcmp@plt+0x26da8>
  4224d7:	mov    edi,r15d
  4224da:	call   42b420 <strcmp@plt+0x27c98>
  4224df:	movzx  ebp,ax
  4224e2:	lea    esi,[rbp+0x4]
  4224e5:	mov    rdi,r12
  4224e8:	call   42e270 <strcmp@plt+0x2aae8>
  4224ed:	mov    rbx,rax
  4224f0:	movbe  WORD PTR [rax],r15w
  4224f6:	movbe  WORD PTR [rax+0x2],bp
  4224fc:	lea    rdi,[rax+0x4]
  422500:	xor    esi,esi
  422502:	mov    rdx,rbp
  422505:	call   403260 <memset@plt>
  42250a:	test   rbx,rbx
  42250d:	je     422586 <strcmp@plt+0x1edfe>
  42250f:	xor    edx,edx
  422511:	mov    rdi,r12
  422514:	mov    rsi,r14
  422517:	call   422600 <strcmp@plt+0x1ee78>
  42251c:	test   rax,rax
  42251f:	je     422586 <strcmp@plt+0x1edfe>
  422521:	mov    rbx,rsp
  422524:	xor    esi,esi
  422526:	mov    rdi,rbx
  422529:	call   4231a0 <strcmp@plt+0x1fa18>
  42252e:	mov    rdi,rbx
  422531:	call   423040 <strcmp@plt+0x1f8b8>
  422536:	mov    rdi,r12
  422539:	mov    esi,eax
  42253b:	call   42e270 <strcmp@plt+0x2aae8>
  422540:	mov    rbp,rax
  422543:	mov    rdi,rax
  422546:	mov    rsi,rbx
  422549:	call   423840 <strcmp@plt+0x200b8>
  42254e:	test   eax,eax
  422550:	jle    422559 <strcmp@plt+0x1edd1>
  422552:	test   rbp,rbp
  422555:	jne    422591 <strcmp@plt+0x1ee09>
  422557:	jmp    422586 <strcmp@plt+0x1edfe>
  422559:	lea    rax,[rip+0x42850]        # 464db0 <strcmp@plt+0x61628>
  422560:	cmp    DWORD PTR [rax],0x3
  422563:	jl     422586 <strcmp@plt+0x1edfe>
  422565:	mov    rdi,rsp
  422568:	call   423130 <strcmp@plt+0x1f9a8>
  42256d:	mov    rcx,rax
  422570:	lea    rsi,[rip+0x26c83]        # 4491fa <strcmp@plt+0x45a72>
  422577:	mov    edi,0x7
  42257c:	xor    eax,eax
  42257e:	mov    rdx,rcx
  422581:	call   42e800 <strcmp@plt+0x2b078>
  422586:	mov    rdi,r12
  422589:	call   42e010 <strcmp@plt+0x2a888>
  42258e:	xor    r12d,r12d
  422591:	mov    rax,r12
  422594:	add    rsp,0x20
  422598:	pop    rbx
  422599:	pop    r12
  42259b:	pop    r14
  42259d:	pop    r15
  42259f:	pop    rbp
  4225a0:	ret    
  4225a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4225ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4225b0:	push   rbp
  4225b1:	push   r15
  4225b3:	push   r14
  4225b5:	push   rbx
  4225b6:	push   rax
  4225b7:	mov    r15d,esi
  4225ba:	mov    r14,rdi
  4225bd:	mov    edi,esi
  4225bf:	call   42b420 <strcmp@plt+0x27c98>
  4225c4:	movzx  ebx,ax
  4225c7:	lea    esi,[rbx+0x4]
  4225ca:	mov    rdi,r14
  4225cd:	call   42e270 <strcmp@plt+0x2aae8>
  4225d2:	mov    rbp,rax
  4225d5:	movbe  WORD PTR [rax],r15w
  4225db:	movbe  WORD PTR [rax+0x2],bx
  4225e1:	lea    rdi,[rax+0x4]
  4225e5:	xor    esi,esi
  4225e7:	mov    rdx,rbx
  4225ea:	call   403260 <memset@plt>
  4225ef:	mov    rax,rbp
  4225f2:	add    rsp,0x8
  4225f6:	pop    rbx
  4225f7:	pop    r14
  4225f9:	pop    r15
  4225fb:	pop    rbp
  4225fc:	ret    
  4225fd:	nop    DWORD PTR [rax]
  422600:	push   rbp
  422601:	push   r15
  422603:	push   r14
  422605:	push   rbx
  422606:	push   rax
  422607:	mov    ebp,edx
  422609:	mov    r14,rsi
  42260c:	mov    rbx,rdi
  42260f:	mov    esi,0x6
  422614:	call   42e270 <strcmp@plt+0x2aae8>
  422619:	mov    r15,rax
  42261c:	movbe  DWORD PTR [rax],ebp
  422620:	mov    rdi,r14
  422623:	call   4230e0 <strcmp@plt+0x1f958>
  422628:	mov    rdi,rax
  42262b:	call   4233c0 <strcmp@plt+0x1fc38>
  422630:	mov    BYTE PTR [r15+0x5],al
  422634:	mov    rdi,r14
  422637:	call   423040 <strcmp@plt+0x1f8b8>
  42263c:	mov    rdi,rbx
  42263f:	mov    esi,eax
  422641:	call   42e270 <strcmp@plt+0x2aae8>
  422646:	mov    rbx,rax
  422649:	mov    rdi,rax
  42264c:	mov    rsi,r14
  42264f:	call   423840 <strcmp@plt+0x200b8>
  422654:	test   eax,eax
  422656:	jg     42268b <strcmp@plt+0x1ef03>
  422658:	lea    rax,[rip+0x42751]        # 464db0 <strcmp@plt+0x61628>
  42265f:	cmp    DWORD PTR [rax],0x3
  422662:	jge    422668 <strcmp@plt+0x1eee0>
  422664:	xor    ebx,ebx
  422666:	jmp    42268b <strcmp@plt+0x1ef03>
  422668:	mov    rdi,r14
  42266b:	call   423130 <strcmp@plt+0x1f9a8>
  422670:	mov    rcx,rax
  422673:	lea    rsi,[rip+0x26b80]        # 4491fa <strcmp@plt+0x45a72>
  42267a:	xor    ebx,ebx
  42267c:	mov    edi,0x7
  422681:	xor    eax,eax
  422683:	mov    rdx,rcx
  422686:	call   42e800 <strcmp@plt+0x2b078>
  42268b:	test   rbx,rbx
  42268e:	cmove  r15,rbx
  422692:	mov    rax,r15
  422695:	add    rsp,0x8
  422699:	pop    rbx
  42269a:	pop    r14
  42269c:	pop    r15
  42269e:	pop    rbp
  42269f:	ret    
  4226a0:	push   rbp
  4226a1:	push   r15
  4226a3:	push   r14
  4226a5:	push   r13
  4226a7:	push   r12
  4226a9:	push   rbx
  4226aa:	push   rax
  4226ab:	mov    r15d,ecx
  4226ae:	mov    r13d,edx
  4226b1:	mov    QWORD PTR [rsp],rsi
  4226b5:	mov    r12,rdi
  4226b8:	mov    edi,0x1000
  4226bd:	mov    esi,0x64
  4226c2:	call   42e040 <strcmp@plt+0x2a8b8>
  4226c7:	mov    rbx,rax
  4226ca:	mov    eax,DWORD PTR [rax+0x38]
  4226cd:	sub    eax,DWORD PTR [rbx+0x30]
  4226d0:	mov    WORD PTR [rbx+0x24],ax
  4226d4:	mov    esi,0xc
  4226d9:	mov    rdi,rbx
  4226dc:	call   42e270 <strcmp@plt+0x2aae8>
  4226e1:	mov    rdi,rax
  4226e4:	call   42a530 <strcmp@plt+0x26da8>
  4226e9:	mov    edi,r13d
  4226ec:	call   42b420 <strcmp@plt+0x27c98>
  4226f1:	movzx  ebp,ax
  4226f4:	lea    esi,[rbp+0x4]
  4226f7:	mov    rdi,rbx
  4226fa:	call   42e270 <strcmp@plt+0x2aae8>
  4226ff:	mov    r14,rax
  422702:	movbe  WORD PTR [rax],r13w
  422708:	movbe  WORD PTR [rax+0x2],bp
  42270e:	lea    rdi,[rax+0x4]
  422712:	xor    esi,esi
  422714:	mov    rdx,rbp
  422717:	call   403260 <memset@plt>
  42271c:	test   r14,r14
  42271f:	je     42279d <strcmp@plt+0x1f015>
  422721:	movzx  edx,r15b
  422725:	mov    rdi,rbx
  422728:	mov    rsi,r12
  42272b:	call   422600 <strcmp@plt+0x1ee78>
  422730:	test   rax,rax
  422733:	je     42279d <strcmp@plt+0x1f015>
  422735:	mov    r14,QWORD PTR [rsp]
  422739:	mov    rdi,r14
  42273c:	call   423040 <strcmp@plt+0x1f8b8>
  422741:	mov    rdi,rbx
  422744:	mov    esi,eax
  422746:	call   42e270 <strcmp@plt+0x2aae8>
  42274b:	mov    rbp,rax
  42274e:	mov    rdi,rax
  422751:	mov    rsi,r14
  422754:	call   423840 <strcmp@plt+0x200b8>
  422759:	test   eax,eax
  42275b:	jle    422770 <strcmp@plt+0x1efe8>
  42275d:	test   rbp,rbp
  422760:	je     42279d <strcmp@plt+0x1f015>
  422762:	movzx  eax,WORD PTR [rbx+0x24]
  422766:	mov    rcx,QWORD PTR [rbx+0x30]
  42276a:	or     BYTE PTR [rcx+rax*1],0x8
  42276e:	jmp    4227a7 <strcmp@plt+0x1f01f>
  422770:	lea    rax,[rip+0x42639]        # 464db0 <strcmp@plt+0x61628>
  422777:	cmp    DWORD PTR [rax],0x3
  42277a:	jl     42279d <strcmp@plt+0x1f015>
  42277c:	mov    rdi,r14
  42277f:	call   423130 <strcmp@plt+0x1f9a8>
  422784:	mov    rcx,rax
  422787:	lea    rsi,[rip+0x26a6c]        # 4491fa <strcmp@plt+0x45a72>
  42278e:	mov    edi,0x7
  422793:	xor    eax,eax
  422795:	mov    rdx,rcx
  422798:	call   42e800 <strcmp@plt+0x2b078>
  42279d:	mov    rdi,rbx
  4227a0:	call   42e010 <strcmp@plt+0x2a888>
  4227a5:	xor    ebx,ebx
  4227a7:	mov    rax,rbx
  4227aa:	add    rsp,0x8
  4227ae:	pop    rbx
  4227af:	pop    r12
  4227b1:	pop    r13
  4227b3:	pop    r14
  4227b5:	pop    r15
  4227b7:	pop    rbp
  4227b8:	ret    
  4227b9:	nop    DWORD PTR [rax+0x0]
  4227c0:	push   rbp
  4227c1:	push   r15
  4227c3:	push   r14
  4227c5:	push   r12
  4227c7:	push   rbx
  4227c8:	mov    r15d,esi
  4227cb:	mov    r14,rdi
  4227ce:	mov    edi,0x1000
  4227d3:	mov    esi,0x64
  4227d8:	call   42e040 <strcmp@plt+0x2a8b8>
  4227dd:	mov    r12,rax
  4227e0:	mov    eax,DWORD PTR [rax+0x38]
  4227e3:	sub    eax,DWORD PTR [r12+0x30]
  4227e8:	mov    WORD PTR [r12+0x24],ax
  4227ee:	mov    esi,0xc
  4227f3:	mov    rdi,r12
  4227f6:	call   42e270 <strcmp@plt+0x2aae8>
  4227fb:	mov    rdi,rax
  4227fe:	call   42a4e0 <strcmp@plt+0x26d58>
  422803:	mov    edi,r15d
  422806:	call   42b420 <strcmp@plt+0x27c98>
  42280b:	movzx  ebp,ax
  42280e:	lea    esi,[rbp+0x4]
  422811:	mov    rdi,r12
  422814:	call   42e270 <strcmp@plt+0x2aae8>
  422819:	mov    rbx,rax
  42281c:	movbe  WORD PTR [rax],r15w
  422822:	movbe  WORD PTR [rax+0x2],bp
  422828:	lea    rdi,[rax+0x4]
  42282c:	xor    esi,esi
  42282e:	mov    rdx,rbp
  422831:	call   403260 <memset@plt>
  422836:	test   rbx,rbx
  422839:	je     42284d <strcmp@plt+0x1f0c5>
  42283b:	xor    edx,edx
  42283d:	mov    rdi,r12
  422840:	mov    rsi,r14
  422843:	call   421860 <strcmp@plt+0x1e0d8>
  422848:	test   rax,rax
  42284b:	jne    422858 <strcmp@plt+0x1f0d0>
  42284d:	mov    rdi,r12
  422850:	call   42e010 <strcmp@plt+0x2a888>
  422855:	xor    r12d,r12d
  422858:	mov    rax,r12
  42285b:	pop    rbx
  42285c:	pop    r12
  42285e:	pop    r14
  422860:	pop    r15
  422862:	pop    rbp
  422863:	ret    
  422864:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42286e:	xchg   ax,ax
  422870:	mov    rax,rdi
  422873:	movzx  edi,WORD PTR [rdi+0x24]
  422877:	cmp    rdi,0xffff
  42287e:	je     4228da <strcmp@plt+0x1f152>
  422880:	add    rdi,QWORD PTR [rax+0x30]
  422884:	je     4228da <strcmp@plt+0x1f152>
  422886:	mov    al,BYTE PTR [rdi]
  422888:	shr    al,0x4
  42288b:	add    al,0xff
  42288d:	cmp    al,0x7
  42288f:	ja     4228a9 <strcmp@plt+0x1f121>
  422891:	movzx  eax,al
  422894:	lea    rcx,[rip+0x26889]        # 449124 <strcmp@plt+0x4599c>
  42289b:	movsxd rax,DWORD PTR [rcx+rax*4]
  42289f:	add    rax,rcx
  4228a2:	jmp    rax
  4228a4:	jmp    42a670 <strcmp@plt+0x26ee8>
  4228a9:	lea    rax,[rip+0x42500]        # 464db0 <strcmp@plt+0x61628>
  4228b0:	cmp    DWORD PTR [rax],0x3
  4228b3:	jl     4228da <strcmp@plt+0x1f152>
  4228b5:	push   rax
  4228b6:	movzx  eax,WORD PTR [rdi]
  4228b9:	mov    ecx,0x404
  4228be:	bextr  edx,eax,ecx
  4228c3:	lea    rsi,[rip+0x269b8]        # 449282 <strcmp@plt+0x45afa>
  4228ca:	mov    edi,0x7
  4228cf:	xor    eax,eax
  4228d1:	call   42e800 <strcmp@plt+0x2b078>
  4228d6:	add    rsp,0x8
  4228da:	xor    eax,eax
  4228dc:	ret    
  4228dd:	jmp    42a780 <strcmp@plt+0x26ff8>
  4228e2:	jmp    42a960 <strcmp@plt+0x271d8>
  4228e7:	jmp    42aaa0 <strcmp@plt+0x27318>
  4228ec:	jmp    42acf0 <strcmp@plt+0x27568>
  4228f1:	jmp    42a860 <strcmp@plt+0x270d8>
  4228f6:	jmp    42ac00 <strcmp@plt+0x27478>
  4228fb:	nop    DWORD PTR [rax+rax*1+0x0]
  422900:	movzx  ecx,WORD PTR [rdi+0x1e]
  422904:	cmp    rcx,0xffff
  42290b:	je     422913 <strcmp@plt+0x1f18b>
  42290d:	add    rcx,QWORD PTR [rdi+0x30]
  422911:	jmp    422915 <strcmp@plt+0x1f18d>
  422913:	xor    ecx,ecx
  422915:	mov    eax,0xffffffff
  42291a:	test   BYTE PTR [rcx],0x8
  42291d:	je     422923 <strcmp@plt+0x1f19b>
  42291f:	movzx  eax,BYTE PTR [rcx+0x4]
  422923:	ret    
  422924:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42292e:	xchg   ax,ax
  422930:	push   rbp
  422931:	push   r14
  422933:	push   rbx
  422934:	sub    rsp,0x40
  422938:	mov    r14,rcx
  42293b:	mov    ebp,edx
  42293d:	mov    rbx,rsi
  422940:	vmovups ymm0,YMMWORD PTR [rdi]
  422944:	vmovups ymm1,YMMWORD PTR [rdi+0x20]
  422949:	vmovups YMMWORD PTR [rsp+0x20],ymm1
  42294f:	vmovups YMMWORD PTR [rsp],ymm0
  422954:	mov    rdi,rsp
  422957:	vzeroupper 
  42295a:	call   42e680 <strcmp@plt+0x2aef8>
  42295f:	movbe  WORD PTR [rbx+0x4],bp
  422965:	mov    edi,ebp
  422967:	call   42b420 <strcmp@plt+0x27c98>
  42296c:	movbe  WORD PTR [rbx+0x6],ax
  422972:	movzx  eax,WORD PTR [rsp+0x24]
  422977:	mov    rcx,QWORD PTR [rsp+0x30]
  42297c:	add    rcx,rax
  42297f:	xor    edx,edx
  422981:	cmp    rax,0xffff
  422987:	cmovne rdx,rcx
  42298b:	mov    ecx,DWORD PTR [rsp+0x14]
  42298f:	lea    r8,[rbx+0x8]
  422993:	movzx  edi,bpl
  422997:	mov    rsi,r14
  42299a:	call   42c2c0 <strcmp@plt+0x28b38>
  42299f:	xor    ecx,ecx
  4229a1:	cmp    eax,0x1
  4229a4:	sete   cl
  4229a7:	mov    eax,ecx
  4229a9:	add    rsp,0x40
  4229ad:	pop    rbx
  4229ae:	pop    r14
  4229b0:	pop    rbp
  4229b1:	ret    
  4229b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4229bc:	nop    DWORD PTR [rax+0x0]
  4229c0:	push   rbp
  4229c1:	push   r15
  4229c3:	push   r14
  4229c5:	push   rbx
  4229c6:	push   rax
  4229c7:	mov    r14,rcx
  4229ca:	mov    r15d,edx
  4229cd:	mov    rbx,rsi
  4229d0:	mov    rbp,rdi
  4229d3:	movbe  WORD PTR [rsi],r15w
  4229d9:	mov    edi,edx
  4229db:	call   42b420 <strcmp@plt+0x27c98>
  4229e0:	movbe  WORD PTR [rbx+0x2],ax
  4229e6:	movzx  edx,WORD PTR [rbp+0x24]
  4229ea:	cmp    rdx,0xffff
  4229f1:	je     4229f9 <strcmp@plt+0x1f271>
  4229f3:	add    rdx,QWORD PTR [rbp+0x30]
  4229f7:	jmp    4229fb <strcmp@plt+0x1f273>
  4229f9:	xor    edx,edx
  4229fb:	mov    ecx,DWORD PTR [rbp+0x14]
  4229fe:	add    rbx,0x4
  422a02:	movzx  edi,r15b
  422a06:	mov    rsi,r14
  422a09:	mov    r8,rbx
  422a0c:	call   42c2c0 <strcmp@plt+0x28b38>
  422a11:	xor    ecx,ecx
  422a13:	cmp    eax,0x1
  422a16:	sete   cl
  422a19:	mov    eax,ecx
  422a1b:	add    rsp,0x8
  422a1f:	pop    rbx
  422a20:	pop    r14
  422a22:	pop    r15
  422a24:	pop    rbp
  422a25:	ret    
  422a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a30:	push   r15
  422a32:	push   r14
  422a34:	push   rbx
  422a35:	sub    rsp,0x40
  422a39:	mov    r14,rdx
  422a3c:	mov    rbx,rsi
  422a3f:	add    rbx,0x4
  422a43:	vmovups ymm0,YMMWORD PTR [rdi]
  422a47:	vmovups ymm1,YMMWORD PTR [rdi+0x20]
  422a4c:	vmovups YMMWORD PTR [rsp+0x20],ymm1
  422a52:	vmovups YMMWORD PTR [rsp],ymm0
  422a57:	mov    r15,rsp
  422a5a:	mov    rdi,r15
  422a5d:	vzeroupper 
  422a60:	call   42e680 <strcmp@plt+0x2aef8>
  422a65:	mov    rdi,r15
  422a68:	mov    rsi,rbx
  422a6b:	mov    rdx,r14
  422a6e:	call   422a80 <strcmp@plt+0x1f2f8>
  422a73:	add    rsp,0x40
  422a77:	pop    rbx
  422a78:	pop    r14
  422a7a:	pop    r15
  422a7c:	ret    
  422a7d:	nop    DWORD PTR [rax]
  422a80:	push   rbp
  422a81:	push   r15
  422a83:	push   r14
  422a85:	push   rbx
  422a86:	push   rax
  422a87:	mov    r14,rdx
  422a8a:	mov    rbx,rsi
  422a8d:	mov    r15,rdi
  422a90:	movbe  bp,WORD PTR [rsi]
  422a95:	movzx  edi,bp
  422a98:	call   42b420 <strcmp@plt+0x27c98>
  422a9d:	movbe  dx,WORD PTR [rbx+0x2]
  422aa3:	cmp    ax,dx
  422aa6:	jne    422abc <strcmp@plt+0x1f334>
  422aa8:	movzx  edx,WORD PTR [r15+0x24]
  422aad:	cmp    rdx,0xffff
  422ab4:	je     422ae7 <strcmp@plt+0x1f35f>
  422ab6:	add    rdx,QWORD PTR [r15+0x30]
  422aba:	jmp    422ae9 <strcmp@plt+0x1f361>
  422abc:	lea    rcx,[rip+0x422ed]        # 464db0 <strcmp@plt+0x61628>
  422ac3:	xor    ebx,ebx
  422ac5:	cmp    DWORD PTR [rcx],0x3
  422ac8:	jl     422b2d <strcmp@plt+0x1f3a5>
  422aca:	movzx  ecx,ax
  422acd:	movzx  edx,dx
  422ad0:	lea    rsi,[rip+0x267c8]        # 44929f <strcmp@plt+0x45b17>
  422ad7:	xor    ebx,ebx
  422ad9:	mov    edi,0x7
  422ade:	xor    eax,eax
  422ae0:	call   42e800 <strcmp@plt+0x2b078>
  422ae5:	jmp    422b2d <strcmp@plt+0x1f3a5>
  422ae7:	xor    edx,edx
  422ae9:	mov    ecx,DWORD PTR [r15+0x14]
  422aed:	add    rbx,0x4
  422af1:	movzx  edi,bpl
  422af5:	mov    rsi,r14
  422af8:	mov    r8,rbx
  422afb:	call   42c390 <strcmp@plt+0x28c08>
  422b00:	mov    ebx,0x1
  422b05:	cmp    eax,0x1
  422b08:	je     422b2d <strcmp@plt+0x1f3a5>
  422b0a:	mov    ebp,eax
  422b0c:	lea    rax,[rip+0x4229d]        # 464db0 <strcmp@plt+0x61628>
  422b13:	cmp    DWORD PTR [rax],0x3
  422b16:	jl     422b2b <strcmp@plt+0x1f3a3>
  422b18:	lea    rsi,[rip+0x267b5]        # 4492d4 <strcmp@plt+0x45b4c>
  422b1f:	mov    edi,0x7
  422b24:	xor    eax,eax
  422b26:	call   42e800 <strcmp@plt+0x2b078>
  422b2b:	mov    ebx,ebp
  422b2d:	mov    eax,ebx
  422b2f:	add    rsp,0x8
  422b33:	pop    rbx
  422b34:	pop    r14
  422b36:	pop    r15
  422b38:	pop    rbp
  422b39:	ret    
  422b3a:	nop    WORD PTR [rax+rax*1+0x0]
  422b40:	push   rbp
  422b41:	push   r15
  422b43:	push   r14
  422b45:	push   r12
  422b47:	push   rbx
  422b48:	mov    r15d,esi
  422b4b:	mov    r14,rdi
  422b4e:	mov    edi,esi
  422b50:	call   42b420 <strcmp@plt+0x27c98>
  422b55:	movzx  r12d,ax
  422b59:	lea    rbx,[r12+0x8]
  422b5e:	mov    rdi,r14
  422b61:	mov    esi,ebx
  422b63:	call   42e320 <strcmp@plt+0x2ab98>
  422b68:	mov    rbp,rax
  422b6b:	xor    esi,esi
  422b6d:	mov    rdi,rax
  422b70:	mov    rdx,rbx
  422b73:	call   403260 <memset@plt>
  422b78:	mov    BYTE PTR [rbp+0x0],0x2
  422b7c:	movbe  WORD PTR [rbp+0x4],r15w
  422b83:	movbe  WORD PTR [rbp+0x6],r12w
  422b8a:	mov    rax,rbp
  422b8d:	pop    rbx
  422b8e:	pop    r12
  422b90:	pop    r14
  422b92:	pop    r15
  422b94:	pop    rbp
  422b95:	ret    
  422b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422ba0:	push   r14
  422ba2:	push   rbx
  422ba3:	push   rax
  422ba4:	mov    rbx,rdi
  422ba7:	mov    eax,DWORD PTR [rdi+0x14]
  422baa:	cmp    eax,0x8
  422bad:	jae    422bb4 <strcmp@plt+0x1f42c>
  422baf:	xor    r14d,r14d
  422bb2:	jmp    422bc6 <strcmp@plt+0x1f43e>
  422bb4:	mov    r14,QWORD PTR [rbx+0x38]
  422bb8:	lea    rcx,[r14+0x8]
  422bbc:	mov    QWORD PTR [rbx+0x38],rcx
  422bc0:	add    eax,0xfffffff8
  422bc3:	mov    DWORD PTR [rbx+0x14],eax
  422bc6:	movbe  ax,WORD PTR [r14+0x4]
  422bcd:	movzx  edi,ax
  422bd0:	call   42b420 <strcmp@plt+0x27c98>
  422bd5:	movzx  ecx,ax
  422bd8:	mov    eax,DWORD PTR [rbx+0x14]
  422bdb:	sub    eax,ecx
  422bdd:	jb     422be8 <strcmp@plt+0x1f460>
  422bdf:	mov    ecx,ecx
  422be1:	add    QWORD PTR [rbx+0x38],rcx
  422be5:	mov    DWORD PTR [rbx+0x14],eax
  422be8:	mov    rax,r14
  422beb:	add    rsp,0x8
  422bef:	pop    rbx
  422bf0:	pop    r14
  422bf2:	ret    
  422bf3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422bfd:	nop    DWORD PTR [rax]
  422c00:	push   rbp
  422c01:	push   r15
  422c03:	push   r14
  422c05:	push   rbx
  422c06:	push   rax
  422c07:	mov    r15d,esi
  422c0a:	mov    r14,rdi
  422c0d:	mov    edi,esi
  422c0f:	call   42b420 <strcmp@plt+0x27c98>
  422c14:	movzx  ebx,ax
  422c17:	lea    esi,[rbx+0x4]
  422c1a:	mov    rdi,r14
  422c1d:	call   42e320 <strcmp@plt+0x2ab98>
  422c22:	mov    rbp,rax
  422c25:	movbe  WORD PTR [rax],r15w
  422c2b:	movbe  WORD PTR [rax+0x2],bx
  422c31:	lea    rdi,[rax+0x4]
  422c35:	xor    esi,esi
  422c37:	mov    rdx,rbx
  422c3a:	call   403260 <memset@plt>
  422c3f:	mov    rax,rbp
  422c42:	add    rsp,0x8
  422c46:	pop    rbx
  422c47:	pop    r14
  422c49:	pop    r15
  422c4b:	pop    rbp
  422c4c:	ret    
  422c4d:	nop    DWORD PTR [rax]
  422c50:	push   r14
  422c52:	push   rbx
  422c53:	push   rax
  422c54:	mov    rbx,rdi
  422c57:	mov    eax,DWORD PTR [rdi+0x14]
  422c5a:	cmp    eax,0x4
  422c5d:	jae    422c64 <strcmp@plt+0x1f4dc>
  422c5f:	xor    r14d,r14d
  422c62:	jmp    422c76 <strcmp@plt+0x1f4ee>
  422c64:	mov    r14,QWORD PTR [rbx+0x38]
  422c68:	lea    rcx,[r14+0x4]
  422c6c:	mov    QWORD PTR [rbx+0x38],rcx
  422c70:	add    eax,0xfffffffc
  422c73:	mov    DWORD PTR [rbx+0x14],eax
  422c76:	movbe  ax,WORD PTR [r14]
  422c7c:	movzx  edi,ax
  422c7f:	call   42b420 <strcmp@plt+0x27c98>
  422c84:	movzx  ecx,ax
  422c87:	mov    eax,DWORD PTR [rbx+0x14]
  422c8a:	sub    eax,ecx
  422c8c:	jb     422c97 <strcmp@plt+0x1f50f>
  422c8e:	mov    ecx,ecx
  422c90:	add    QWORD PTR [rbx+0x38],rcx
  422c94:	mov    DWORD PTR [rbx+0x14],eax
  422c97:	mov    rax,r14
  422c9a:	add    rsp,0x8
  422c9e:	pop    rbx
  422c9f:	pop    r14
  422ca1:	ret    
  422ca2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422cac:	nop    DWORD PTR [rax+0x0]
  422cb0:	push   rbp
  422cb1:	push   rbx
  422cb2:	push   rax
  422cb3:	mov    ebp,esi
  422cb5:	mov    esi,0x8
  422cba:	call   42e320 <strcmp@plt+0x2ab98>
  422cbf:	mov    rbx,rax
  422cc2:	mov    rdi,rax
  422cc5:	mov    esi,ebp
  422cc7:	call   423cc0 <strcmp@plt+0x20538>
  422ccc:	mov    rax,rbx
  422ccf:	add    rsp,0x8
  422cd3:	pop    rbx
  422cd4:	pop    rbp
  422cd5:	ret    
  422cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422ce0:	push   rbp
  422ce1:	push   r15
  422ce3:	push   r14
  422ce5:	push   r13
  422ce7:	push   r12
  422ce9:	push   rbx
  422cea:	push   rax
  422ceb:	mov    ebp,r9d
  422cee:	mov    r14,r8
  422cf1:	mov    r15,rcx
  422cf4:	mov    r12d,edx
  422cf7:	mov    r13d,esi
  422cfa:	mov    rbx,rdi
  422cfd:	mov    DWORD PTR [rsp+0x4],0x0
  422d05:	mov    DWORD PTR [rsp],0x0
  422d0c:	mov    rdi,QWORD PTR [rdi+0x38]
  422d10:	lea    rsi,[rsp+0x4]
  422d15:	mov    rdx,rsp
  422d18:	call   433c00 <strcmp@plt+0x30478>
  422d1d:	mov    esi,0x8
  422d22:	mov    rdi,rbx
  422d25:	call   42e320 <strcmp@plt+0x2ab98>
  422d2a:	mov    rdi,rax
  422d2d:	mov    esi,ebp
  422d2f:	call   423cc0 <strcmp@plt+0x20538>
  422d34:	movzx  esi,r13w
  422d38:	movzx  edx,r12w
  422d3c:	mov    rdi,rbx
  422d3f:	mov    rcx,r15
  422d42:	mov    r8,r14
  422d45:	call   433080 <strcmp@plt+0x2f8f8>
  422d4a:	mov    rdi,QWORD PTR [rbx+0x38]
  422d4e:	mov    esi,DWORD PTR [rsp+0x4]
  422d52:	mov    edx,DWORD PTR [rsp]
  422d55:	call   433ba0 <strcmp@plt+0x30418>
  422d5a:	mov    rax,QWORD PTR [rbx+0x38]
  422d5e:	add    rsp,0x8
  422d62:	pop    rbx
  422d63:	pop    r12
  422d65:	pop    r13
  422d67:	pop    r14
  422d69:	pop    r15
  422d6b:	pop    rbp
  422d6c:	ret    
  422d6d:	nop    DWORD PTR [rax]
  422d70:	mov    ecx,DWORD PTR [rdi+0x14]
  422d73:	cmp    ecx,0x8
  422d76:	jae    422d7b <strcmp@plt+0x1f5f3>
  422d78:	xor    eax,eax
  422d7a:	ret    
  422d7b:	mov    rax,QWORD PTR [rdi+0x38]
  422d7f:	lea    rdx,[rax+0x8]
  422d83:	mov    QWORD PTR [rdi+0x38],rdx
  422d87:	add    ecx,0xfffffff8
  422d8a:	mov    DWORD PTR [rdi+0x14],ecx
  422d8d:	ret    
  422d8e:	xchg   ax,ax
  422d90:	push   rbp
  422d91:	push   r15
  422d93:	push   r14
  422d95:	push   rbx
  422d96:	push   rax
  422d97:	xor    r14d,r14d
  422d9a:	test   rsi,rsi
  422d9d:	je     422dd1 <strcmp@plt+0x1f649>
  422d9f:	mov    rbp,rdi
  422da2:	mov    rbx,QWORD PTR [rdi+0x8]
  422da6:	cmp    rbx,rdi
  422da9:	je     422dd1 <strcmp@plt+0x1f649>
  422dab:	mov    r15,rsi
  422dae:	xchg   ax,ax
  422db0:	mov    rsi,QWORD PTR [rbx+0x10]
  422db4:	mov    rdi,r15
  422db7:	call   423970 <strcmp@plt+0x201e8>
  422dbc:	test   eax,eax
  422dbe:	je     422dcb <strcmp@plt+0x1f643>
  422dc0:	mov    rbx,QWORD PTR [rbx+0x8]
  422dc4:	cmp    rbx,rbp
  422dc7:	jne    422db0 <strcmp@plt+0x1f628>
  422dc9:	jmp    422dd1 <strcmp@plt+0x1f649>
  422dcb:	mov    r14d,0x1
  422dd1:	mov    eax,r14d
  422dd4:	add    rsp,0x8
  422dd8:	pop    rbx
  422dd9:	pop    r14
  422ddb:	pop    r15
  422ddd:	pop    rbp
  422dde:	ret    
  422ddf:	nop
  422de0:	push   rbp
  422de1:	push   r15
  422de3:	push   r14
  422de5:	push   rbx
  422de6:	push   rax
  422de7:	mov    rbx,QWORD PTR [rdi+0x8]
  422deb:	cmp    rbx,rdi
  422dee:	je     422e1d <strcmp@plt+0x1f695>
  422df0:	mov    r14d,esi
  422df3:	mov    r15,rdi
  422df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422e00:	mov    rbp,QWORD PTR [rbx+0x10]
  422e04:	mov    rdi,rbp
  422e07:	call   423200 <strcmp@plt+0x1fa78>
  422e0c:	movzx  eax,ax
  422e0f:	cmp    eax,r14d
  422e12:	je     422e1f <strcmp@plt+0x1f697>
  422e14:	mov    rbx,QWORD PTR [rbx+0x8]
  422e18:	cmp    rbx,r15
  422e1b:	jne    422e00 <strcmp@plt+0x1f678>
  422e1d:	xor    ebp,ebp
  422e1f:	mov    rax,rbp
  422e22:	add    rsp,0x8
  422e26:	pop    rbx
  422e27:	pop    r14
  422e29:	pop    r15
  422e2b:	pop    rbp
  422e2c:	ret    
  422e2d:	nop    DWORD PTR [rax]
  422e30:	push   rbp
  422e31:	push   r15
  422e33:	push   r14
  422e35:	push   r13
  422e37:	push   r12
  422e39:	push   rbx
  422e3a:	push   rax
  422e3b:	mov    eax,DWORD PTR [rdi+0x18]
  422e3e:	mov    DWORD PTR [rsp+0x4],eax
  422e42:	mov    BYTE PTR [rip+0x471a7],0x0        # 469ff0 <strcmp@plt+0x66868>
  422e49:	mov    r12,QWORD PTR [rdi+0x8]
  422e4d:	cmp    r12,rdi
  422e50:	je     422ed2 <strcmp@plt+0x1f74a>
  422e56:	mov    r13,rdi
  422e59:	mov    r15d,0x1
  422e5f:	lea    r14,[rip+0x4718a]        # 469ff0 <strcmp@plt+0x66868>
  422e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422e70:	mov    rdi,r14
  422e73:	call   4031e0 <strlen@plt>
  422e78:	lea    rbx,[r14+rax*1]
  422e7c:	mov    ebp,0x8fc
  422e81:	sub    rbp,rax
  422e84:	mov    rdi,QWORD PTR [r12+0x10]
  422e89:	call   423130 <strcmp@plt+0x1f9a8>
  422e8e:	mov    rcx,rax
  422e91:	cmp    r15d,DWORD PTR [rsp+0x4]
  422e96:	jge    422eb0 <strcmp@plt+0x1f728>
  422e98:	xor    eax,eax
  422e9a:	mov    rdi,rbx
  422e9d:	mov    rsi,rbp
  422ea0:	lea    rdx,[rip+0x295b4]        # 44c45b <strcmp@plt+0x48cd3>
  422ea7:	jmp    422ebf <strcmp@plt+0x1f737>
  422ea9:	nop    DWORD PTR [rax+0x0]
  422eb0:	xor    eax,eax
  422eb2:	mov    rdi,rbx
  422eb5:	mov    rsi,rbp
  422eb8:	lea    rdx,[rip+0x207f6]        # 4436b5 <strcmp@plt+0x3ff2d>
  422ebf:	call   403620 <snprintf@plt>
  422ec4:	add    r15d,0x1
  422ec8:	mov    r12,QWORD PTR [r12+0x8]
  422ecd:	cmp    r12,r13
  422ed0:	jne    422e70 <strcmp@plt+0x1f6e8>
  422ed2:	lea    rax,[rip+0x47117]        # 469ff0 <strcmp@plt+0x66868>
  422ed9:	add    rsp,0x8
  422edd:	pop    rbx
  422ede:	pop    r12
  422ee0:	pop    r13
  422ee2:	pop    r14
  422ee4:	pop    r15
  422ee6:	pop    rbp
  422ee7:	ret    
  422ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  422ef0:	push   rbx
  422ef1:	cmp    dil,0x3
  422ef5:	ja     422f1f <strcmp@plt+0x1f797>
  422ef7:	mov    eax,edi
  422ef9:	lea    rcx,[rip+0x263f0]        # 4492f0 <strcmp@plt+0x45b68>
  422f00:	movsxd rax,DWORD PTR [rcx+rax*4]
  422f04:	add    rax,rcx
  422f07:	jmp    rax
  422f09:	mov    edi,0x20
  422f0e:	call   432070 <strcmp@plt+0x2e8e8>
  422f13:	mov    rbx,rax
  422f16:	mov    DWORD PTR [rax+0x18],0x0
  422f1d:	jmp    422f84 <strcmp@plt+0x1f7fc>
  422f1f:	movzx  edx,dil
  422f23:	lea    rsi,[rip+0x269f2]        # 44991c <strcmp@plt+0x46194>
  422f2a:	xor    ebx,ebx
  422f2c:	mov    edi,0x3
  422f31:	xor    eax,eax
  422f33:	call   42e800 <strcmp@plt+0x2b078>
  422f38:	jmp    422f84 <strcmp@plt+0x1f7fc>
  422f3a:	mov    edi,0x20
  422f3f:	call   432070 <strcmp@plt+0x2e8e8>
  422f44:	mov    rbx,rax
  422f47:	mov    DWORD PTR [rax+0x18],0x1
  422f4e:	xor    esi,esi
  422f50:	mov    rdi,rax
  422f53:	call   423e90 <strcmp@plt+0x20708>
  422f58:	jmp    422f84 <strcmp@plt+0x1f7fc>
  422f5a:	mov    edi,0x20
  422f5f:	call   432070 <strcmp@plt+0x2e8e8>
  422f64:	mov    rbx,rax
  422f67:	mov    DWORD PTR [rax+0x18],0x2
  422f6e:	jmp    422f84 <strcmp@plt+0x1f7fc>
  422f70:	mov    edi,0x20
  422f75:	call   432070 <strcmp@plt+0x2e8e8>
  422f7a:	mov    rbx,rax
  422f7d:	mov    DWORD PTR [rax+0x18],0x3
  422f84:	mov    rax,rbx
  422f87:	pop    rbx
  422f88:	ret    
  422f89:	nop    DWORD PTR [rax+0x0]
  422f90:	mov    edi,0x20
  422f95:	jmp    432070 <strcmp@plt+0x2e8e8>
  422f9a:	nop    WORD PTR [rax+rax*1+0x0]
  422fa0:	push   rbx
  422fa1:	test   rdi,rdi
  422fa4:	je     422fc4 <strcmp@plt+0x1f83c>
  422fa6:	mov    rbx,rdi
  422fa9:	mov    edx,DWORD PTR [rdi+0x18]
  422fac:	cmp    edx,0x3
  422faf:	jb     422fbb <strcmp@plt+0x1f833>
  422fb1:	jne    422fc6 <strcmp@plt+0x1f83e>
  422fb3:	mov    rdi,rbx
  422fb6:	call   426950 <strcmp@plt+0x231c8>
  422fbb:	mov    rdi,rbx
  422fbe:	pop    rbx
  422fbf:	jmp    403780 <free@plt>
  422fc4:	pop    rbx
  422fc5:	ret    
  422fc6:	lea    rsi,[rip+0x263a3]        # 449370 <strcmp@plt+0x45be8>
  422fcd:	mov    edi,0x3
  422fd2:	xor    eax,eax
  422fd4:	pop    rbx
  422fd5:	jmp    42e800 <strcmp@plt+0x2b078>
  422fda:	nop    WORD PTR [rax+rax*1+0x0]
  422fe0:	push   rbx
  422fe1:	mov    edx,DWORD PTR [rdi+0x18]
  422fe4:	cmp    rdx,0x3
  422fe8:	ja     423012 <strcmp@plt+0x1f88a>
  422fea:	mov    bx,0x4003
  422fee:	lea    rax,[rip+0x2630b]        # 449300 <strcmp@plt+0x45b78>
  422ff5:	movsxd rcx,DWORD PTR [rax+rdx*4]
  422ff9:	add    rcx,rax
  422ffc:	jmp    rcx
  422ffe:	pop    rbx
  422fff:	jmp    423e10 <strcmp@plt+0x20688>
  423004:	call   4243f0 <strcmp@plt+0x20c68>
  423009:	mov    rdi,rax
  42300c:	pop    rbx
  42300d:	jmp    423e10 <strcmp@plt+0x20688>
  423012:	lea    rax,[rip+0x41d97]        # 464db0 <strcmp@plt+0x61628>
  423019:	cmp    DWORD PTR [rax],0x2
  42301c:	jge    423022 <strcmp@plt+0x1f89a>
  42301e:	xor    ebx,ebx
  423020:	jmp    423037 <strcmp@plt+0x1f8af>
  423022:	lea    rsi,[rip+0x26372]        # 44939b <strcmp@plt+0x45c13>
  423029:	xor    ebx,ebx
  42302b:	mov    edi,0x6
  423030:	xor    eax,eax
  423032:	call   42e800 <strcmp@plt+0x2b078>
  423037:	mov    eax,ebx
  423039:	pop    rbx
  42303a:	ret    
  42303b:	nop    DWORD PTR [rax+rax*1+0x0]
  423040:	push   rbx
  423041:	mov    edx,DWORD PTR [rdi+0x18]
  423044:	cmp    rdx,0x3
  423048:	ja     423077 <strcmp@plt+0x1f8ef>
  42304a:	mov    ebx,0x2
  42304f:	lea    rax,[rip+0x262ba]        # 449310 <strcmp@plt+0x45b88>
  423056:	movsxd rcx,DWORD PTR [rax+rdx*4]
  42305a:	add    rcx,rax
  42305d:	jmp    rcx
  42305f:	call   4243f0 <strcmp@plt+0x20c68>
  423064:	mov    rdi,rax
  423067:	call   423de0 <strcmp@plt+0x20658>
  42306c:	movzx  ebx,al
  42306f:	jmp    42309a <strcmp@plt+0x1f912>
  423071:	pop    rbx
  423072:	jmp    426d60 <strcmp@plt+0x235d8>
  423077:	lea    rax,[rip+0x41d32]        # 464db0 <strcmp@plt+0x61628>
  42307e:	xor    ebx,ebx
  423080:	cmp    DWORD PTR [rax],0x3
  423083:	jl     42309a <strcmp@plt+0x1f912>
  423085:	lea    rsi,[rip+0x26338]        # 4493c4 <strcmp@plt+0x45c3c>
  42308c:	xor    ebx,ebx
  42308e:	mov    edi,0x7
  423093:	xor    eax,eax
  423095:	call   42e800 <strcmp@plt+0x2b078>
  42309a:	mov    eax,ebx
  42309c:	pop    rbx
  42309d:	ret    
  42309e:	xchg   ax,ax
  4230a0:	push   rax
  4230a1:	mov    eax,DWORD PTR [rdi+0x18]
  4230a4:	cmp    eax,0x3
  4230a7:	je     4230ba <strcmp@plt+0x1f932>
  4230a9:	cmp    eax,0x2
  4230ac:	je     4230c7 <strcmp@plt+0x1f93f>
  4230ae:	cmp    eax,0x1
  4230b1:	jne    4230ce <strcmp@plt+0x1f946>
  4230b3:	call   4243a0 <strcmp@plt+0x20c18>
  4230b8:	jmp    4230cc <strcmp@plt+0x1f944>
  4230ba:	call   428500 <strcmp@plt+0x24d78>
  4230bf:	test   rax,rax
  4230c2:	je     4230ce <strcmp@plt+0x1f946>
  4230c4:	mov    rdi,rax
  4230c7:	call   4243e0 <strcmp@plt+0x20c58>
  4230cc:	jmp    4230d0 <strcmp@plt+0x1f948>
  4230ce:	xor    eax,eax
  4230d0:	movzx  eax,al
  4230d3:	pop    rcx
  4230d4:	ret    
  4230d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4230df:	nop
  4230e0:	push   rbx
  4230e1:	mov    rbx,rdi
  4230e4:	mov    eax,DWORD PTR [rdi+0x18]
  4230e7:	cmp    eax,0x3
  4230ea:	je     423106 <strcmp@plt+0x1f97e>
  4230ec:	cmp    eax,0x2
  4230ef:	je     423124 <strcmp@plt+0x1f99c>
  4230f1:	cmp    eax,0x1
  4230f4:	jne    423102 <strcmp@plt+0x1f97a>
  4230f6:	lea    rax,[rip+0x41cb3]        # 464db0 <strcmp@plt+0x61628>
  4230fd:	cmp    DWORD PTR [rax],0x3
  423100:	jge    42310f <strcmp@plt+0x1f987>
  423102:	xor    ebx,ebx
  423104:	jmp    423124 <strcmp@plt+0x1f99c>
  423106:	mov    rdi,rbx
  423109:	pop    rbx
  42310a:	jmp    428500 <strcmp@plt+0x24d78>
  42310f:	lea    rsi,[rip+0x267cb]        # 4498e1 <strcmp@plt+0x46159>
  423116:	xor    ebx,ebx
  423118:	mov    edi,0x7
  42311d:	xor    eax,eax
  42311f:	call   42e800 <strcmp@plt+0x2b078>
  423124:	mov    rax,rbx
  423127:	pop    rbx
  423128:	ret    
  423129:	nop    DWORD PTR [rax+0x0]
  423130:	push   rbx
  423131:	test   rdi,rdi
  423134:	je     42315c <strcmp@plt+0x1f9d4>
  423136:	mov    edx,DWORD PTR [rdi+0x18]
  423139:	cmp    rdx,0x3
  42313d:	ja     423174 <strcmp@plt+0x1f9ec>
  42313f:	lea    rbx,[rip+0x262b0]        # 4493f6 <strcmp@plt+0x45c6e>
  423146:	lea    rax,[rip+0x261d3]        # 449320 <strcmp@plt+0x45b98>
  42314d:	movsxd rcx,DWORD PTR [rax+rdx*4]
  423151:	add    rcx,rax
  423154:	jmp    rcx
  423156:	pop    rbx
  423157:	jmp    423f30 <strcmp@plt+0x207a8>
  42315c:	lea    rbx,[rip+0x20c53]        # 443db6 <strcmp@plt+0x4062e>
  423163:	mov    rax,rbx
  423166:	pop    rbx
  423167:	ret    
  423168:	pop    rbx
  423169:	jmp    424490 <strcmp@plt+0x20d08>
  42316e:	pop    rbx
  42316f:	jmp    426ae0 <strcmp@plt+0x23358>
  423174:	lea    rax,[rip+0x41c35]        # 464db0 <strcmp@plt+0x61628>
  42317b:	cmp    DWORD PTR [rax],0x3
  42317e:	jge    423184 <strcmp@plt+0x1f9fc>
  423180:	xor    ebx,ebx
  423182:	jmp    423163 <strcmp@plt+0x1f9db>
  423184:	lea    rsi,[rip+0x26275]        # 449400 <strcmp@plt+0x45c78>
  42318b:	xor    ebx,ebx
  42318d:	mov    edi,0x7
  423192:	xor    eax,eax
  423194:	call   42e800 <strcmp@plt+0x2b078>
  423199:	jmp    423163 <strcmp@plt+0x1f9db>
  42319b:	nop    DWORD PTR [rax+rax*1+0x0]
  4231a0:	mov    DWORD PTR [rdi+0x18],esi
  4231a3:	ret    
  4231a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4231ae:	xchg   ax,ax
  4231b0:	mov    edx,DWORD PTR [rdi+0x18]
  4231b3:	lea    eax,[rdx-0x1]
  4231b6:	cmp    eax,0x2
  4231b9:	jae    4231d7 <strcmp@plt+0x1fa4f>
  4231bb:	push   rbx
  4231bc:	mov    rbx,rdi
  4231bf:	mov    DWORD PTR [rdi+0x18],0x2
  4231c6:	call   4243a0 <strcmp@plt+0x20c18>
  4231cb:	movzx  esi,al
  4231ce:	mov    rdi,rbx
  4231d1:	pop    rbx
  4231d2:	jmp    424430 <strcmp@plt+0x20ca8>
  4231d7:	lea    rax,[rip+0x41bd2]        # 464db0 <strcmp@plt+0x61628>
  4231de:	cmp    DWORD PTR [rax],0x3
  4231e1:	jge    4231e4 <strcmp@plt+0x1fa5c>
  4231e3:	ret    
  4231e4:	lea    rsi,[rip+0x26258]        # 449443 <strcmp@plt+0x45cbb>
  4231eb:	mov    edi,0x7
  4231f0:	xor    eax,eax
  4231f2:	jmp    42e800 <strcmp@plt+0x2b078>
  4231f7:	nop    WORD PTR [rax+rax*1+0x0]
  423200:	push   rbx
  423201:	mov    rax,rdi
  423204:	mov    rbx,rax
  423207:	nop    WORD PTR [rax+rax*1+0x0]
  423210:	mov    edx,DWORD PTR [rbx+0x18]
  423213:	cmp    edx,0x3
  423216:	jne    423241 <strcmp@plt+0x1fab9>
  423218:	mov    rdi,rbx
  42321b:	call   428500 <strcmp@plt+0x24d78>
  423220:	test   rax,rax
  423223:	jne    423204 <strcmp@plt+0x1fa7c>
  423225:	mov    eax,DWORD PTR [rbx+0x18]
  423228:	cmp    eax,0x1
  42322b:	je     423210 <strcmp@plt+0x1fa88>
  42322d:	cmp    eax,0x3
  423230:	jne    42325f <strcmp@plt+0x1fad7>
  423232:	mov    rdi,rbx
  423235:	call   428490 <strcmp@plt+0x24d08>
  42323a:	test   rax,rax
  42323d:	jne    423204 <strcmp@plt+0x1fa7c>
  42323f:	jmp    423285 <strcmp@plt+0x1fafd>
  423241:	test   edx,edx
  423243:	je     4232cd <strcmp@plt+0x1fb45>
  423249:	cmp    edx,0x2
  42324c:	je     42329d <strcmp@plt+0x1fb15>
  42324e:	cmp    edx,0x1
  423251:	jne    4232aa <strcmp@plt+0x1fb22>
  423253:	mov    rdi,rbx
  423256:	call   423d30 <strcmp@plt+0x205a8>
  42325b:	mov    ebx,eax
  42325d:	jmp    4232cf <strcmp@plt+0x1fb47>
  42325f:	cmp    eax,0x2
  423262:	jne    423285 <strcmp@plt+0x1fafd>
  423264:	lea    rax,[rip+0x41b45]        # 464db0 <strcmp@plt+0x61628>
  42326b:	mov    eax,DWORD PTR [rax]
  42326d:	cmp    eax,0x3
  423270:	jl     42328e <strcmp@plt+0x1fb06>
  423272:	lea    rsi,[rip+0x26636]        # 4498af <strcmp@plt+0x46127>
  423279:	mov    edi,0x7
  42327e:	xor    eax,eax
  423280:	call   42e800 <strcmp@plt+0x2b078>
  423285:	lea    rax,[rip+0x41b24]        # 464db0 <strcmp@plt+0x61628>
  42328c:	mov    eax,DWORD PTR [rax]
  42328e:	test   eax,eax
  423290:	jle    4232cd <strcmp@plt+0x1fb45>
  423292:	mov    edx,DWORD PTR [rbx]
  423294:	lea    rsi,[rip+0x261de]        # 449479 <strcmp@plt+0x45cf1>
  42329b:	jmp    4232bd <strcmp@plt+0x1fb35>
  42329d:	mov    rdi,rbx
  4232a0:	call   424400 <strcmp@plt+0x20c78>
  4232a5:	movzx  ebx,al
  4232a8:	jmp    4232cf <strcmp@plt+0x1fb47>
  4232aa:	lea    rax,[rip+0x41aff]        # 464db0 <strcmp@plt+0x61628>
  4232b1:	cmp    DWORD PTR [rax],0x0
  4232b4:	jle    4232cd <strcmp@plt+0x1fb45>
  4232b6:	lea    rsi,[rip+0x261ed]        # 4494aa <strcmp@plt+0x45d22>
  4232bd:	xor    ebx,ebx
  4232bf:	mov    edi,0x5
  4232c4:	xor    eax,eax
  4232c6:	call   42e800 <strcmp@plt+0x2b078>
  4232cb:	jmp    4232cf <strcmp@plt+0x1fb47>
  4232cd:	xor    ebx,ebx
  4232cf:	mov    eax,ebx
  4232d1:	pop    rbx
  4232d2:	ret    
  4232d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4232dd:	nop    DWORD PTR [rax]
  4232e0:	push   rbx
  4232e1:	mov    rbx,rdi
  4232e4:	mov    eax,DWORD PTR [rdi+0x18]
  4232e7:	cmp    eax,0x1
  4232ea:	je     423324 <strcmp@plt+0x1fb9c>
  4232ec:	cmp    eax,0x3
  4232ef:	je     423306 <strcmp@plt+0x1fb7e>
  4232f1:	cmp    eax,0x2
  4232f4:	jne    423302 <strcmp@plt+0x1fb7a>
  4232f6:	lea    rax,[rip+0x41ab3]        # 464db0 <strcmp@plt+0x61628>
  4232fd:	cmp    DWORD PTR [rax],0x3
  423300:	jge    42330f <strcmp@plt+0x1fb87>
  423302:	xor    ebx,ebx
  423304:	jmp    423324 <strcmp@plt+0x1fb9c>
  423306:	mov    rdi,rbx
  423309:	pop    rbx
  42330a:	jmp    428490 <strcmp@plt+0x24d08>
  42330f:	lea    rsi,[rip+0x26599]        # 4498af <strcmp@plt+0x46127>
  423316:	xor    ebx,ebx
  423318:	mov    edi,0x7
  42331d:	xor    eax,eax
  42331f:	call   42e800 <strcmp@plt+0x2b078>
  423324:	mov    rax,rbx
  423327:	pop    rbx
  423328:	ret    
  423329:	nop    DWORD PTR [rax+0x0]
  423330:	mov    eax,DWORD PTR [rdi]
  423332:	ret    
  423333:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42333d:	nop    DWORD PTR [rax]
  423340:	mov    edx,DWORD PTR [rdi+0x18]
  423343:	cmp    edx,0x2
  423346:	je     423352 <strcmp@plt+0x1fbca>
  423348:	cmp    edx,0x1
  42334b:	jne    423357 <strcmp@plt+0x1fbcf>
  42334d:	jmp    423e90 <strcmp@plt+0x20708>
  423352:	jmp    424440 <strcmp@plt+0x20cb8>
  423357:	lea    rsi,[rip+0x26177]        # 4494d5 <strcmp@plt+0x45d4d>
  42335e:	mov    edi,0x3
  423363:	xor    eax,eax
  423365:	jmp    42e800 <strcmp@plt+0x2b078>
  42336a:	nop    WORD PTR [rax+rax*1+0x0]
  423370:	push   rbx
  423371:	mov    rbx,rdi
  423374:	mov    edx,DWORD PTR [rdi+0x18]
  423377:	cmp    edx,0x1
  42337a:	je     4233af <strcmp@plt+0x1fc27>
  42337c:	cmp    edx,0x2
  42337f:	jne    42338a <strcmp@plt+0x1fc02>
  423381:	mov    rdi,rbx
  423384:	pop    rbx
  423385:	jmp    4243f0 <strcmp@plt+0x20c68>
  42338a:	lea    rax,[rip+0x41a1f]        # 464db0 <strcmp@plt+0x61628>
  423391:	cmp    DWORD PTR [rax],0x3
  423394:	jge    42339a <strcmp@plt+0x1fc12>
  423396:	xor    ebx,ebx
  423398:	jmp    4233af <strcmp@plt+0x1fc27>
  42339a:	lea    rsi,[rip+0x26163]        # 449504 <strcmp@plt+0x45d7c>
  4233a1:	xor    ebx,ebx
  4233a3:	mov    edi,0x7
  4233a8:	xor    eax,eax
  4233aa:	call   42e800 <strcmp@plt+0x2b078>
  4233af:	mov    rax,rbx
  4233b2:	pop    rbx
  4233b3:	ret    
  4233b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4233be:	xchg   ax,ax
  4233c0:	push   rbx
  4233c1:	mov    rbx,rdi
  4233c4:	mov    eax,DWORD PTR [rdi+0x18]
  4233c7:	cmp    eax,0x2
  4233ca:	je     4233f0 <strcmp@plt+0x1fc68>
  4233cc:	cmp    eax,0x1
  4233cf:	jne    4233f9 <strcmp@plt+0x1fc71>
  4233d1:	mov    rdi,rbx
  4233d4:	call   423d30 <strcmp@plt+0x205a8>
  4233d9:	test   eax,eax
  4233db:	je     423419 <strcmp@plt+0x1fc91>
  4233dd:	mov    rdi,rbx
  4233e0:	call   423d30 <strcmp@plt+0x205a8>
  4233e5:	mov    bl,0x20
  4233e7:	cmp    eax,0x2
  4233ea:	je     42342e <strcmp@plt+0x1fca6>
  4233ec:	mov    bl,0x80
  4233ee:	jmp    42342e <strcmp@plt+0x1fca6>
  4233f0:	mov    rdi,rbx
  4233f3:	pop    rbx
  4233f4:	jmp    4243e0 <strcmp@plt+0x20c58>
  4233f9:	lea    rax,[rip+0x419b0]        # 464db0 <strcmp@plt+0x61628>
  423400:	cmp    DWORD PTR [rax],0x3
  423403:	jge    423409 <strcmp@plt+0x1fc81>
  423405:	xor    ebx,ebx
  423407:	jmp    42342e <strcmp@plt+0x1fca6>
  423409:	lea    rsi,[rip+0x26156]        # 449566 <strcmp@plt+0x45dde>
  423410:	xor    ebx,ebx
  423412:	mov    edi,0x7
  423417:	jmp    423427 <strcmp@plt+0x1fc9f>
  423419:	lea    rsi,[rip+0x26119]        # 449539 <strcmp@plt+0x45db1>
  423420:	xor    ebx,ebx
  423422:	mov    edi,0x3
  423427:	xor    eax,eax
  423429:	call   42e800 <strcmp@plt+0x2b078>
  42342e:	mov    eax,ebx
  423430:	pop    rbx
  423431:	ret    
  423432:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42343c:	nop    DWORD PTR [rax+0x0]
  423440:	mov    edx,DWORD PTR [rdi+0x18]
  423443:	cmp    edx,0x2
  423446:	je     423452 <strcmp@plt+0x1fcca>
  423448:	cmp    edx,0x1
  42344b:	jne    423457 <strcmp@plt+0x1fccf>
  42344d:	jmp    423e90 <strcmp@plt+0x20708>
  423452:	jmp    424440 <strcmp@plt+0x20cb8>
  423457:	lea    rax,[rip+0x41952]        # 464db0 <strcmp@plt+0x61628>
  42345e:	cmp    DWORD PTR [rax],0x3
  423461:	jge    423464 <strcmp@plt+0x1fcdc>
  423463:	ret    
  423464:	lea    rsi,[rip+0x26133]        # 44959e <strcmp@plt+0x45e16>
  42346b:	mov    edi,0x7
  423470:	xor    eax,eax
  423472:	jmp    42e800 <strcmp@plt+0x2b078>
  423477:	nop    WORD PTR [rax+rax*1+0x0]
  423480:	push   rbp
  423481:	push   rbx
  423482:	push   rax
  423483:	mov    ebp,esi
  423485:	mov    rbx,rdi
  423488:	jmp    423490 <strcmp@plt+0x1fd08>
  42348a:	mov    rbx,rax
  42348d:	nop    DWORD PTR [rax]
  423490:	mov    edx,DWORD PTR [rbx+0x18]
  423493:	cmp    edx,0x3
  423496:	jne    4234c4 <strcmp@plt+0x1fd3c>
  423498:	mov    rdi,rbx
  42349b:	call   428500 <strcmp@plt+0x24d78>
  4234a0:	test   rax,rax
  4234a3:	jne    42348a <strcmp@plt+0x1fd02>
  4234a5:	mov    eax,DWORD PTR [rbx+0x18]
  4234a8:	cmp    eax,0x1
  4234ab:	je     423490 <strcmp@plt+0x1fd08>
  4234ad:	cmp    eax,0x3
  4234b0:	jne    4234e7 <strcmp@plt+0x1fd5f>
  4234b2:	mov    rdi,rbx
  4234b5:	call   428490 <strcmp@plt+0x24d08>
  4234ba:	mov    rbx,rax
  4234bd:	test   rax,rax
  4234c0:	jne    423490 <strcmp@plt+0x1fd08>
  4234c2:	jmp    42350d <strcmp@plt+0x1fd85>
  4234c4:	cmp    edx,0x2
  4234c7:	je     4234d5 <strcmp@plt+0x1fd4d>
  4234c9:	cmp    edx,0x1
  4234cc:	jne    423534 <strcmp@plt+0x1fdac>
  4234ce:	mov    DWORD PTR [rbx+0x18],0x2
  4234d5:	movzx  esi,bpl
  4234d9:	mov    rdi,rbx
  4234dc:	add    rsp,0x8
  4234e0:	pop    rbx
  4234e1:	pop    rbp
  4234e2:	jmp    424430 <strcmp@plt+0x20ca8>
  4234e7:	cmp    eax,0x2
  4234ea:	jne    42350d <strcmp@plt+0x1fd85>
  4234ec:	lea    rax,[rip+0x418bd]        # 464db0 <strcmp@plt+0x61628>
  4234f3:	mov    eax,DWORD PTR [rax]
  4234f5:	cmp    eax,0x3
  4234f8:	jl     423516 <strcmp@plt+0x1fd8e>
  4234fa:	lea    rsi,[rip+0x263ae]        # 4498af <strcmp@plt+0x46127>
  423501:	mov    edi,0x7
  423506:	xor    eax,eax
  423508:	call   42e800 <strcmp@plt+0x2b078>
  42350d:	lea    rax,[rip+0x4189c]        # 464db0 <strcmp@plt+0x61628>
  423514:	mov    eax,DWORD PTR [rax]
  423516:	cmp    eax,0x2
  423519:	jl     423540 <strcmp@plt+0x1fdb8>
  42351b:	lea    rsi,[rip+0x260a8]        # 4495ca <strcmp@plt+0x45e42>
  423522:	mov    edi,0x6
  423527:	xor    eax,eax
  423529:	add    rsp,0x8
  42352d:	pop    rbx
  42352e:	pop    rbp
  42352f:	jmp    42e800 <strcmp@plt+0x2b078>
  423534:	lea    rax,[rip+0x41875]        # 464db0 <strcmp@plt+0x61628>
  42353b:	cmp    DWORD PTR [rax],0x2
  42353e:	jge    423547 <strcmp@plt+0x1fdbf>
  423540:	add    rsp,0x8
  423544:	pop    rbx
  423545:	pop    rbp
  423546:	ret    
  423547:	lea    rsi,[rip+0x260b4]        # 449602 <strcmp@plt+0x45e7a>
  42354e:	mov    edi,0x6
  423553:	xor    eax,eax
  423555:	add    rsp,0x8
  423559:	pop    rbx
  42355a:	pop    rbp
  42355b:	jmp    42e800 <strcmp@plt+0x2b078>
  423560:	mov    edx,DWORD PTR [rsi+0x18]
  423563:	mov    DWORD PTR [rdi+0x18],edx
  423566:	mov    eax,DWORD PTR [rsi+0x18]
  423569:	cmp    rax,0x3
  42356d:	ja     4235ad <strcmp@plt+0x1fe25>
  42356f:	lea    rcx,[rip+0x25dba]        # 449330 <strcmp@plt+0x45ba8>
  423576:	movsxd rax,DWORD PTR [rcx+rax*4]
  42357a:	add    rax,rcx
  42357d:	jmp    rax
  42357f:	lea    rax,[rip+0x4182a]        # 464db0 <strcmp@plt+0x61628>
  423586:	cmp    DWORD PTR [rax],0x3
  423589:	jl     4235b9 <strcmp@plt+0x1fe31>
  42358b:	lea    rsi,[rip+0x2609d]        # 44962f <strcmp@plt+0x45ea7>
  423592:	mov    edi,0x7
  423597:	xor    eax,eax
  423599:	jmp    42e800 <strcmp@plt+0x2b078>
  42359e:	jmp    424040 <strcmp@plt+0x208b8>
  4235a3:	jmp    424470 <strcmp@plt+0x20ce8>
  4235a8:	jmp    426dc0 <strcmp@plt+0x23638>
  4235ad:	lea    rax,[rip+0x417fc]        # 464db0 <strcmp@plt+0x61628>
  4235b4:	cmp    DWORD PTR [rax],0x2
  4235b7:	jge    4235ba <strcmp@plt+0x1fe32>
  4235b9:	ret    
  4235ba:	lea    rsi,[rip+0x26099]        # 44965a <strcmp@plt+0x45ed2>
  4235c1:	mov    edi,0x6
  4235c6:	xor    eax,eax
  4235c8:	jmp    42e800 <strcmp@plt+0x2b078>
  4235cd:	nop    DWORD PTR [rax]
  4235d0:	push   rbp
  4235d1:	push   rbx
  4235d2:	push   rax
  4235d3:	cmp    DWORD PTR [rsi+0x18],0x1
  4235d7:	jne    42360c <strcmp@plt+0x1fe84>
  4235d9:	mov    rbx,rsi
  4235dc:	mov    eax,DWORD PTR [rdi+0x18]
  4235df:	cmp    eax,0x1
  4235e2:	je     42363e <strcmp@plt+0x1feb6>
  4235e4:	xor    ebp,ebp
  4235e6:	cmp    eax,0x3
  4235e9:	je     423631 <strcmp@plt+0x1fea9>
  4235eb:	cmp    eax,0x2
  4235ee:	jne    42364b <strcmp@plt+0x1fec3>
  4235f0:	lea    rax,[rip+0x417b9]        # 464db0 <strcmp@plt+0x61628>
  4235f7:	cmp    DWORD PTR [rax],0x3
  4235fa:	jl     42364b <strcmp@plt+0x1fec3>
  4235fc:	lea    rsi,[rip+0x262ac]        # 4498af <strcmp@plt+0x46127>
  423603:	xor    ebp,ebp
  423605:	mov    edi,0x7
  42360a:	jmp    423628 <strcmp@plt+0x1fea0>
  42360c:	lea    rax,[rip+0x4179d]        # 464db0 <strcmp@plt+0x61628>
  423613:	xor    ebp,ebp
  423615:	cmp    DWORD PTR [rax],0x2
  423618:	jl     42364b <strcmp@plt+0x1fec3>
  42361a:	lea    rsi,[rip+0x26065]        # 449686 <strcmp@plt+0x45efe>
  423621:	xor    ebp,ebp
  423623:	mov    edi,0x6
  423628:	xor    eax,eax
  42362a:	call   42e800 <strcmp@plt+0x2b078>
  42362f:	jmp    42364b <strcmp@plt+0x1fec3>
  423631:	call   428490 <strcmp@plt+0x24d08>
  423636:	mov    rdi,rax
  423639:	test   rax,rax
  42363c:	je     42364b <strcmp@plt+0x1fec3>
  42363e:	mov    rsi,rbx
  423641:	call   424040 <strcmp@plt+0x208b8>
  423646:	mov    ebp,0x1
  42364b:	mov    eax,ebp
  42364d:	add    rsp,0x8
  423651:	pop    rbx
  423652:	pop    rbp
  423653:	ret    
  423654:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42365e:	xchg   ax,ax
  423660:	push   rbp
  423661:	push   r14
  423663:	push   rbx
  423664:	cmp    DWORD PTR [rsi+0x18],0x2
  423668:	jne    4236ab <strcmp@plt+0x1ff23>
  42366a:	mov    r14,rsi
  42366d:	mov    rbx,rdi
  423670:	mov    eax,DWORD PTR [rdi+0x18]
  423673:	cmp    eax,0x3
  423676:	je     4236d0 <strcmp@plt+0x1ff48>
  423678:	cmp    eax,0x2
  42367b:	je     423727 <strcmp@plt+0x1ff9f>
  423681:	cmp    eax,0x1
  423684:	jne    4236e3 <strcmp@plt+0x1ff5b>
  423686:	lea    rax,[rip+0x41723]        # 464db0 <strcmp@plt+0x61628>
  42368d:	cmp    DWORD PTR [rax],0x3
  423690:	jl     423720 <strcmp@plt+0x1ff98>
  423696:	lea    rsi,[rip+0x26244]        # 4498e1 <strcmp@plt+0x46159>
  42369d:	mov    edi,0x7
  4236a2:	xor    eax,eax
  4236a4:	call   42e800 <strcmp@plt+0x2b078>
  4236a9:	jmp    4236e0 <strcmp@plt+0x1ff58>
  4236ab:	lea    rax,[rip+0x416fe]        # 464db0 <strcmp@plt+0x61628>
  4236b2:	xor    ebp,ebp
  4236b4:	cmp    DWORD PTR [rax],0x2
  4236b7:	jl     423737 <strcmp@plt+0x1ffaf>
  4236b9:	lea    rsi,[rip+0x25ffb]        # 4496bb <strcmp@plt+0x45f33>
  4236c0:	xor    ebp,ebp
  4236c2:	mov    edi,0x6
  4236c7:	xor    eax,eax
  4236c9:	call   42e800 <strcmp@plt+0x2b078>
  4236ce:	jmp    423737 <strcmp@plt+0x1ffaf>
  4236d0:	mov    rdi,rbx
  4236d3:	call   428500 <strcmp@plt+0x24d78>
  4236d8:	mov    rdi,rax
  4236db:	test   rax,rax
  4236de:	jne    42372a <strcmp@plt+0x1ffa2>
  4236e0:	mov    eax,DWORD PTR [rbx+0x18]
  4236e3:	cmp    eax,0x1
  4236e6:	je     423720 <strcmp@plt+0x1ff98>
  4236e8:	xor    ebp,ebp
  4236ea:	cmp    eax,0x3
  4236ed:	je     423710 <strcmp@plt+0x1ff88>
  4236ef:	cmp    eax,0x2
  4236f2:	jne    423737 <strcmp@plt+0x1ffaf>
  4236f4:	lea    rax,[rip+0x416b5]        # 464db0 <strcmp@plt+0x61628>
  4236fb:	cmp    DWORD PTR [rax],0x3
  4236fe:	jl     423737 <strcmp@plt+0x1ffaf>
  423700:	lea    rsi,[rip+0x261a8]        # 4498af <strcmp@plt+0x46127>
  423707:	xor    ebp,ebp
  423709:	mov    edi,0x7
  42370e:	jmp    4236c7 <strcmp@plt+0x1ff3f>
  423710:	mov    rdi,rbx
  423713:	call   428490 <strcmp@plt+0x24d08>
  423718:	test   rax,rax
  42371b:	je     423737 <strcmp@plt+0x1ffaf>
  42371d:	mov    rbx,rax
  423720:	mov    DWORD PTR [rbx+0x18],0x2
  423727:	mov    rdi,rbx
  42372a:	mov    rsi,r14
  42372d:	call   424470 <strcmp@plt+0x20ce8>
  423732:	mov    ebp,0x1
  423737:	mov    eax,ebp
  423739:	pop    rbx
  42373a:	pop    r14
  42373c:	pop    rbp
  42373d:	ret    
  42373e:	xchg   ax,ax
  423740:	push   r14
  423742:	push   rbx
  423743:	push   rax
  423744:	test   rdi,rdi
  423747:	je     423766 <strcmp@plt+0x1ffde>
  423749:	mov    r14,rdi
  42374c:	mov    edi,0x20
  423751:	call   432070 <strcmp@plt+0x2e8e8>
  423756:	mov    rbx,rax
  423759:	mov    rdi,rax
  42375c:	mov    rsi,r14
  42375f:	call   423560 <strcmp@plt+0x1fdd8>
  423764:	jmp    423768 <strcmp@plt+0x1ffe0>
  423766:	xor    ebx,ebx
  423768:	mov    rax,rbx
  42376b:	add    rsp,0x8
  42376f:	pop    rbx
  423770:	pop    r14
  423772:	ret    
  423773:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42377d:	nop    DWORD PTR [rax]
  423780:	push   r14
  423782:	push   rbx
  423783:	push   rax
  423784:	mov    rbx,rsi
  423787:	mov    edx,DWORD PTR [rsi+0x18]
  42378a:	cmp    edx,0x3
  42378d:	je     4237ac <strcmp@plt+0x20024>
  42378f:	mov    r14,rdi
  423792:	cmp    edx,0x2
  423795:	je     4237dd <strcmp@plt+0x20055>
  423797:	cmp    edx,0x1
  42379a:	jne    423804 <strcmp@plt+0x2007c>
  42379c:	mov    rdi,r14
  42379f:	mov    rsi,rbx
  4237a2:	call   424060 <strcmp@plt+0x208d8>
  4237a7:	mov    rdi,rbx
  4237aa:	jmp    4237fb <strcmp@plt+0x20073>
  4237ac:	lea    rax,[rip+0x415fd]        # 464db0 <strcmp@plt+0x61628>
  4237b3:	cmp    DWORD PTR [rax],0x3
  4237b6:	jl     423810 <strcmp@plt+0x20088>
  4237b8:	mov    rdi,rbx
  4237bb:	call   426ae0 <strcmp@plt+0x23358>
  4237c0:	mov    rcx,rax
  4237c3:	lea    rsi,[rip+0x25f2f]        # 4496f9 <strcmp@plt+0x45f71>
  4237ca:	xor    ebx,ebx
  4237cc:	mov    edi,0x7
  4237d1:	xor    eax,eax
  4237d3:	mov    rdx,rcx
  4237d6:	call   42e800 <strcmp@plt+0x2b078>
  4237db:	jmp    423829 <strcmp@plt+0x200a1>
  4237dd:	mov    rdi,rbx
  4237e0:	call   4243f0 <strcmp@plt+0x20c68>
  4237e5:	mov    rdi,r14
  4237e8:	mov    rsi,rax
  4237eb:	call   424060 <strcmp@plt+0x208d8>
  4237f0:	mov    rdi,rbx
  4237f3:	call   4243f0 <strcmp@plt+0x20c68>
  4237f8:	mov    rdi,rax
  4237fb:	call   423d70 <strcmp@plt+0x205e8>
  423800:	mov    ebx,eax
  423802:	jmp    423829 <strcmp@plt+0x200a1>
  423804:	lea    rax,[rip+0x415a5]        # 464db0 <strcmp@plt+0x61628>
  42380b:	cmp    DWORD PTR [rax],0x3
  42380e:	jge    423814 <strcmp@plt+0x2008c>
  423810:	xor    ebx,ebx
  423812:	jmp    423829 <strcmp@plt+0x200a1>
  423814:	lea    rsi,[rip+0x25f1b]        # 449736 <strcmp@plt+0x45fae>
  42381b:	xor    ebx,ebx
  42381d:	mov    edi,0x7
  423822:	xor    eax,eax
  423824:	call   42e800 <strcmp@plt+0x2b078>
  423829:	movzx  eax,bl
  42382c:	add    rsp,0x8
  423830:	pop    rbx
  423831:	pop    r14
  423833:	ret    
  423834:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42383e:	xchg   ax,ax
  423840:	push   rbx
  423841:	mov    edx,DWORD PTR [rsi+0x18]
  423844:	cmp    rdx,0x3
  423848:	ja     423893 <strcmp@plt+0x2010b>
  42384a:	mov    rbx,rdi
  42384d:	lea    rax,[rip+0x25aec]        # 449340 <strcmp@plt+0x45bb8>
  423854:	movsxd rcx,DWORD PTR [rax+rdx*4]
  423858:	add    rcx,rax
  42385b:	jmp    rcx
  42385d:	mov    WORD PTR [rbx],0x0
  423862:	mov    ebx,0x2
  423867:	jmp    4238b6 <strcmp@plt+0x2012e>
  423869:	xor    edx,edx
  42386b:	mov    rdi,rbx
  42386e:	pop    rbx
  42386f:	jmp    4240d0 <strcmp@plt+0x20948>
  423874:	mov    rdi,rsi
  423877:	call   4243f0 <strcmp@plt+0x20c68>
  42387c:	xor    edx,edx
  42387e:	mov    rdi,rbx
  423881:	mov    rsi,rax
  423884:	pop    rbx
  423885:	jmp    4240d0 <strcmp@plt+0x20948>
  42388a:	mov    rdi,rbx
  42388d:	pop    rbx
  42388e:	jmp    426e90 <strcmp@plt+0x23708>
  423893:	lea    rax,[rip+0x41516]        # 464db0 <strcmp@plt+0x61628>
  42389a:	xor    ebx,ebx
  42389c:	cmp    DWORD PTR [rax],0x3
  42389f:	jl     4238b6 <strcmp@plt+0x2012e>
  4238a1:	lea    rsi,[rip+0x25ebd]        # 449765 <strcmp@plt+0x45fdd>
  4238a8:	xor    ebx,ebx
  4238aa:	mov    edi,0x7
  4238af:	xor    eax,eax
  4238b1:	call   42e800 <strcmp@plt+0x2b078>
  4238b6:	mov    eax,ebx
  4238b8:	pop    rbx
  4238b9:	ret    
  4238ba:	nop    WORD PTR [rax+rax*1+0x0]
  4238c0:	push   rbx
  4238c1:	test   rsi,rsi
  4238c4:	je     4238fa <strcmp@plt+0x20172>
  4238c6:	mov    rbx,rsi
  4238c9:	movbe  ax,WORD PTR [rdi]
  4238ce:	movzx  ecx,ax
  4238d1:	lea    edx,[rax-0x1]
  4238d4:	movzx  edx,dx
  4238d7:	cmp    edx,0x2
  4238da:	jb     42391f <strcmp@plt+0x20197>
  4238dc:	test   ax,ax
  4238df:	je     423932 <strcmp@plt+0x201aa>
  4238e1:	cmp    ecx,0x4003
  4238e7:	jne    423940 <strcmp@plt+0x201b8>
  4238e9:	mov    rsi,rbx
  4238ec:	call   4269d0 <strcmp@plt+0x23248>
  4238f1:	mov    DWORD PTR [rbx+0x18],0x3
  4238f8:	pop    rbx
  4238f9:	ret    
  4238fa:	lea    rax,[rip+0x414af]        # 464db0 <strcmp@plt+0x61628>
  423901:	xor    ebx,ebx
  423903:	cmp    DWORD PTR [rax],0x3
  423906:	jl     423965 <strcmp@plt+0x201dd>
  423908:	lea    rsi,[rip+0x25e7d]        # 44978c <strcmp@plt+0x46004>
  42390f:	xor    ebx,ebx
  423911:	mov    edi,0x7
  423916:	xor    eax,eax
  423918:	call   42e800 <strcmp@plt+0x2b078>
  42391d:	jmp    423965 <strcmp@plt+0x201dd>
  42391f:	mov    esi,ecx
  423921:	mov    rdx,rbx
  423924:	call   424260 <strcmp@plt+0x20ad8>
  423929:	mov    DWORD PTR [rbx+0x18],0x1
  423930:	pop    rbx
  423931:	ret    
  423932:	mov    DWORD PTR [rbx+0x18],0x0
  423939:	mov    ebx,0x2
  42393e:	jmp    423965 <strcmp@plt+0x201dd>
  423940:	lea    rax,[rip+0x41469]        # 464db0 <strcmp@plt+0x61628>
  423947:	xor    ebx,ebx
  423949:	cmp    DWORD PTR [rax],0x2
  42394c:	jl     423965 <strcmp@plt+0x201dd>
  42394e:	lea    rsi,[rip+0x25e69]        # 4497be <strcmp@plt+0x46036>
  423955:	xor    ebx,ebx
  423957:	mov    edi,0x6
  42395c:	xor    eax,eax
  42395e:	mov    edx,ecx
  423960:	call   42e800 <strcmp@plt+0x2b078>
  423965:	mov    eax,ebx
  423967:	pop    rbx
  423968:	ret    
  423969:	nop    DWORD PTR [rax+0x0]
  423970:	push   rbp
  423971:	push   r14
  423973:	push   rbx
  423974:	test   rdi,rdi
  423977:	je     4239b7 <strcmp@plt+0x2022f>
  423979:	mov    rbx,rsi
  42397c:	test   rsi,rsi
  42397f:	je     4239b7 <strcmp@plt+0x2022f>
  423981:	mov    rbp,rdi
  423984:	mov    edx,DWORD PTR [rdi+0x18]
  423987:	mov    ecx,DWORD PTR [rbx+0x18]
  42398a:	cmp    edx,ecx
  42398c:	jne    4239e5 <strcmp@plt+0x2025d>
  42398e:	cmp    edx,0x3
  423991:	ja     423a0c <strcmp@plt+0x20284>
  423993:	mov    eax,edx
  423995:	lea    rcx,[rip+0x259b4]        # 449350 <strcmp@plt+0x45bc8>
  42399c:	movsxd rax,DWORD PTR [rcx+rax*4]
  4239a0:	add    rax,rcx
  4239a3:	jmp    rax
  4239a5:	xor    r14d,r14d
  4239a8:	cmp    rbp,rbx
  4239ab:	setne  r14b
  4239af:	add    r14d,r14d
  4239b2:	jmp    423a65 <strcmp@plt+0x202dd>
  4239b7:	lea    rax,[rip+0x413f2]        # 464db0 <strcmp@plt+0x61628>
  4239be:	mov    r14d,0xffffffff
  4239c4:	cmp    DWORD PTR [rax],0x3
  4239c7:	jl     423a65 <strcmp@plt+0x202dd>
  4239cd:	lea    rsi,[rip+0x25e1f]        # 4497f3 <strcmp@plt+0x4606b>
  4239d4:	mov    edi,0x7
  4239d9:	xor    eax,eax
  4239db:	call   42e800 <strcmp@plt+0x2b078>
  4239e0:	jmp    423a65 <strcmp@plt+0x202dd>
  4239e5:	lea    rax,[rip+0x413c4]        # 464db0 <strcmp@plt+0x61628>
  4239ec:	mov    r14d,0xffffffff
  4239f2:	cmp    DWORD PTR [rax],0x3
  4239f5:	jl     423a65 <strcmp@plt+0x202dd>
  4239f7:	lea    rsi,[rip+0x25e2a]        # 449828 <strcmp@plt+0x460a0>
  4239fe:	mov    edi,0x7
  423a03:	xor    eax,eax
  423a05:	call   42e800 <strcmp@plt+0x2b078>
  423a0a:	jmp    423a65 <strcmp@plt+0x202dd>
  423a0c:	mov    r14d,0xffffffff
  423a12:	jmp    423a65 <strcmp@plt+0x202dd>
  423a14:	mov    rdi,rbp
  423a17:	mov    rsi,rbx
  423a1a:	pop    rbx
  423a1b:	pop    r14
  423a1d:	pop    rbp
  423a1e:	jmp    4241c0 <strcmp@plt+0x20a38>
  423a23:	mov    rdi,rbp
  423a26:	call   4243f0 <strcmp@plt+0x20c68>
  423a2b:	mov    r14,rax
  423a2e:	mov    rdi,rbx
  423a31:	call   4243f0 <strcmp@plt+0x20c68>
  423a36:	mov    rdi,r14
  423a39:	mov    rsi,rax
  423a3c:	call   4241c0 <strcmp@plt+0x20a38>
  423a41:	mov    r14d,eax
  423a44:	test   eax,eax
  423a46:	jne    423a65 <strcmp@plt+0x202dd>
  423a48:	mov    rdi,rbp
  423a4b:	call   4243e0 <strcmp@plt+0x20c58>
  423a50:	mov    ebp,eax
  423a52:	mov    rdi,rbx
  423a55:	call   4243e0 <strcmp@plt+0x20c58>
  423a5a:	mov    r14d,0x1
  423a60:	cmp    bpl,al
  423a63:	jae    423a7c <strcmp@plt+0x202f4>
  423a65:	mov    eax,r14d
  423a68:	pop    rbx
  423a69:	pop    r14
  423a6b:	pop    rbp
  423a6c:	ret    
  423a6d:	mov    rdi,rbp
  423a70:	mov    rsi,rbx
  423a73:	pop    rbx
  423a74:	pop    r14
  423a76:	pop    rbp
  423a77:	jmp    426ef0 <strcmp@plt+0x23768>
  423a7c:	seta   al
  423a7f:	movzx  eax,al
  423a82:	add    eax,eax
  423a84:	jmp    423a68 <strcmp@plt+0x202e0>
  423a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a90:	push   rbp
  423a91:	push   rbx
  423a92:	push   rax
  423a93:	test   rdi,rdi
  423a96:	je     423b14 <strcmp@plt+0x2038c>
  423a98:	mov    rbx,rsi
  423a9b:	test   rsi,rsi
  423a9e:	je     423b14 <strcmp@plt+0x2038c>
  423aa0:	mov    ecx,DWORD PTR [rdi+0x18]
  423aa3:	mov    eax,0x1
  423aa8:	cmp    ecx,DWORD PTR [rbx+0x18]
  423aab:	jg     423b19 <strcmp@plt+0x20391>
  423aad:	mov    eax,0x2
  423ab2:	jl     423b19 <strcmp@plt+0x20391>
  423ab4:	lea    eax,[rcx-0x1]
  423ab7:	cmp    eax,0x2
  423aba:	jb     423acb <strcmp@plt+0x20343>
  423abc:	test   ecx,ecx
  423abe:	je     423af1 <strcmp@plt+0x20369>
  423ac0:	cmp    ecx,0x3
  423ac3:	jne    423af5 <strcmp@plt+0x2036d>
  423ac5:	mov    ebp,DWORD PTR [rdi]
  423ac7:	mov    ecx,DWORD PTR [rbx]
  423ac9:	jmp    423ade <strcmp@plt+0x20356>
  423acb:	call   423200 <strcmp@plt+0x1fa78>
  423ad0:	movzx  ebp,ax
  423ad3:	mov    rdi,rbx
  423ad6:	call   423200 <strcmp@plt+0x1fa78>
  423adb:	movzx  ecx,ax
  423ade:	mov    eax,0x1
  423ae3:	cmp    ebp,ecx
  423ae5:	jg     423b19 <strcmp@plt+0x20391>
  423ae7:	setl   al
  423aea:	movzx  eax,al
  423aed:	add    eax,eax
  423aef:	jmp    423b19 <strcmp@plt+0x20391>
  423af1:	mov    eax,ecx
  423af3:	jmp    423b19 <strcmp@plt+0x20391>
  423af5:	lea    rax,[rip+0x412b4]        # 464db0 <strcmp@plt+0x61628>
  423afc:	cmp    DWORD PTR [rax],0x0
  423aff:	jle    423b14 <strcmp@plt+0x2038c>
  423b01:	lea    rsi,[rip+0x25d56]        # 44985e <strcmp@plt+0x460d6>
  423b08:	mov    edi,0x5
  423b0d:	xor    eax,eax
  423b0f:	call   42e800 <strcmp@plt+0x2b078>
  423b14:	mov    eax,0xfffffffe
  423b19:	add    rsp,0x8
  423b1d:	pop    rbx
  423b1e:	pop    rbp
  423b1f:	ret    
  423b20:	mov    QWORD PTR [rdi+0x8],rsi
  423b24:	ret    
  423b25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423b2f:	nop
  423b30:	mov    rax,QWORD PTR [rdi+0x8]
  423b34:	ret    
  423b35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423b3f:	nop
  423b40:	mov    DWORD PTR [rdi],esi
  423b42:	ret    
  423b43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423b4d:	nop    DWORD PTR [rax]
  423b50:	mov    DWORD PTR [rdi+0x18],0x1
  423b57:	movzx  edx,dl
  423b5a:	jmp    423ef0 <strcmp@plt+0x20768>
  423b5f:	nop
  423b60:	push   rax
  423b61:	mov    DWORD PTR [rdi+0x18],0x1
  423b68:	call   424040 <strcmp@plt+0x208b8>
  423b6d:	mov    eax,0x1
  423b72:	pop    rcx
  423b73:	ret    
  423b74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423b7e:	xchg   ax,ax
  423b80:	push   rax
  423b81:	mov    DWORD PTR [rdi+0x18],0x2
  423b88:	call   424410 <strcmp@plt+0x20c88>
  423b8d:	mov    eax,0x1
  423b92:	pop    rcx
  423b93:	ret    
  423b94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423b9e:	xchg   ax,ax
  423ba0:	push   rax
  423ba1:	mov    DWORD PTR [rdi+0x18],0x3
  423ba8:	call   426dc0 <strcmp@plt+0x23638>
  423bad:	mov    eax,0x1
  423bb2:	pop    rcx
  423bb3:	ret    
  423bb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423bbe:	xchg   ax,ax
  423bc0:	push   rbx
  423bc1:	mov    bx,0x1
  423bc5:	lea    eax,[rdi-0x1]
  423bc8:	movzx  eax,ax
  423bcb:	cmp    eax,0x2
  423bce:	jb     423bf6 <strcmp@plt+0x2046e>
  423bd0:	movzx  edx,di
  423bd3:	cmp    edx,0x4003
  423bd9:	jne    423be1 <strcmp@plt+0x20459>
  423bdb:	mov    bx,0x3
  423bdf:	jmp    423bf6 <strcmp@plt+0x2046e>
  423be1:	lea    rsi,[rip+0x25c93]        # 44987b <strcmp@plt+0x460f3>
  423be8:	xor    ebx,ebx
  423bea:	mov    edi,0x3
  423bef:	xor    eax,eax
  423bf1:	call   42e800 <strcmp@plt+0x2b078>
  423bf6:	mov    eax,ebx
  423bf8:	pop    rbx
  423bf9:	ret    
  423bfa:	nop    WORD PTR [rax+rax*1+0x0]
  423c00:	xor    eax,eax
  423c02:	test   rdi,rdi
  423c05:	je     423c23 <strcmp@plt+0x2049b>
  423c07:	cmp    DWORD PTR [rdi+0x18],0x3
  423c0b:	jne    423c24 <strcmp@plt+0x2049c>
  423c0d:	push   rax
  423c0e:	call   426c20 <strcmp@plt+0x23498>
  423c13:	mov    ecx,eax
  423c15:	mov    eax,0x1
  423c1a:	test   ecx,ecx
  423c1c:	lea    rsp,[rsp+0x8]
  423c21:	je     423c24 <strcmp@plt+0x2049c>
  423c23:	ret    
  423c24:	xor    eax,eax
  423c26:	ret    
  423c27:	nop    WORD PTR [rax+rax*1+0x0]
  423c30:	cmp    DWORD PTR [rdi+0x18],0x3
  423c34:	jne    423c3b <strcmp@plt+0x204b3>
  423c36:	jmp    426950 <strcmp@plt+0x231c8>
  423c3b:	ret    
  423c3c:	nop    DWORD PTR [rax+0x0]
  423c40:	push   rbx
  423c41:	mov    rbx,rsi
  423c44:	call   424580 <strcmp@plt+0x20df8>
  423c49:	xor    ecx,ecx
  423c4b:	cmp    eax,0x1
  423c4e:	sete   cl
  423c51:	mov    DWORD PTR [rbx+0x18],ecx
  423c54:	mov    eax,ecx
  423c56:	pop    rbx
  423c57:	ret    
  423c58:	nop    DWORD PTR [rax+rax*1+0x0]
  423c60:	push   rbx
  423c61:	mov    rbx,rsi
  423c64:	call   4245f0 <strcmp@plt+0x20e68>
  423c69:	xor    ecx,ecx
  423c6b:	cmp    eax,0x1
  423c6e:	sete   cl
  423c71:	lea    eax,[rcx+rcx*1]
  423c74:	mov    DWORD PTR [rbx+0x18],eax
  423c77:	mov    eax,ecx
  423c79:	pop    rbx
  423c7a:	ret    
  423c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  423c80:	mov    eax,DWORD PTR [rdi+0x18]
  423c83:	cmp    rax,0x3
  423c87:	ja     423c9c <strcmp@plt+0x20514>
  423c89:	lea    rcx,[rip+0x256d0]        # 449360 <strcmp@plt+0x45bd8>
  423c90:	movsxd rdx,DWORD PTR [rcx+rax*4]
  423c94:	add    rdx,rcx
  423c97:	jmp    rdx
  423c99:	mov    eax,DWORD PTR [rdi]
  423c9b:	ret    
  423c9c:	mov    eax,0xffffffff
  423ca1:	ret    
  423ca2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423cac:	nop    DWORD PTR [rax+0x0]
  423cb0:	add    rdi,0x4
  423cb4:	jmp    434050 <strcmp@plt+0x308c8>
  423cb9:	nop    DWORD PTR [rax+0x0]
  423cc0:	push   rbx
  423cc1:	mov    rbx,rdi
  423cc4:	mov    al,BYTE PTR [rdi]
  423cc6:	mov    BYTE PTR [rdi+0x7],0x0
  423cca:	mov    ecx,eax
  423ccc:	and    cl,0x8f
  423ccf:	mov    BYTE PTR [rdi],cl
  423cd1:	mov    WORD PTR [rdi+0x1],0x0
  423cd7:	mov    BYTE PTR [rdi+0x3],0x0
  423cdb:	test   esi,esi
  423cdd:	je     423cf1 <strcmp@plt+0x20569>
  423cdf:	or     cl,0x8
  423ce2:	mov    BYTE PTR [rbx],cl
  423ce4:	lea    rdi,[rbx+0x4]
  423ce8:	call   434030 <strcmp@plt+0x308a8>
  423ced:	mov    al,BYTE PTR [rbx]
  423cef:	jmp    423cff <strcmp@plt+0x20577>
  423cf1:	and    al,0x87
  423cf3:	mov    BYTE PTR [rbx],al
  423cf5:	mov    WORD PTR [rbx+0x4],0x0
  423cfb:	mov    BYTE PTR [rbx+0x6],0x0
  423cff:	and    al,0x78
  423d01:	mov    BYTE PTR [rbx],al
  423d03:	pop    rbx
  423d04:	ret    
  423d05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d0f:	nop
  423d10:	mov    edi,0x14
  423d15:	jmp    432070 <strcmp@plt+0x2e8e8>
  423d1a:	nop    WORD PTR [rax+rax*1+0x0]
  423d20:	jmp    403780 <free@plt>
  423d25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d2f:	nop
  423d30:	mov    eax,DWORD PTR [rdi]
  423d32:	ret    
  423d33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d3d:	nop    DWORD PTR [rax]
  423d40:	lea    rax,[rdi+0x4]
  423d44:	ret    
  423d45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d4f:	nop
  423d50:	lea    rax,[rdi+0x4]
  423d54:	ret    
  423d55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d5f:	nop
  423d60:	lea    rax,[rdi+0x4]
  423d64:	ret    
  423d65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d6f:	nop
  423d70:	push   rbx
  423d71:	mov    eax,DWORD PTR [rdi]
  423d73:	movzx  edx,ax
  423d76:	cmp    edx,0x2
  423d79:	je     423d84 <strcmp@plt+0x205fc>
  423d7b:	cmp    edx,0xa
  423d7e:	jne    423d88 <strcmp@plt+0x20600>
  423d80:	mov    bl,0x10
  423d82:	jmp    423d9d <strcmp@plt+0x20615>
  423d84:	mov    bl,0x4
  423d86:	jmp    423d9d <strcmp@plt+0x20615>
  423d88:	lea    rsi,[rip+0x25d12]        # 449aa1 <strcmp@plt+0x46319>
  423d8f:	xor    ebx,ebx
  423d91:	mov    edi,0x3
  423d96:	xor    eax,eax
  423d98:	call   42e800 <strcmp@plt+0x2b078>
  423d9d:	mov    eax,ebx
  423d9f:	pop    rbx
  423da0:	ret    
  423da1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423dab:	nop    DWORD PTR [rax+rax*1+0x0]
  423db0:	push   rbx
  423db1:	cmp    edi,0x2
  423db4:	je     423dc2 <strcmp@plt+0x2063a>
  423db6:	movzx  edx,di
  423db9:	cmp    edx,0xa
  423dbc:	jne    423dc6 <strcmp@plt+0x2063e>
  423dbe:	mov    bl,0x10
  423dc0:	jmp    423ddb <strcmp@plt+0x20653>
  423dc2:	mov    bl,0x4
  423dc4:	jmp    423ddb <strcmp@plt+0x20653>
  423dc6:	lea    rsi,[rip+0x25cd4]        # 449aa1 <strcmp@plt+0x46319>
  423dcd:	xor    ebx,ebx
  423dcf:	mov    edi,0x3
  423dd4:	xor    eax,eax
  423dd6:	call   42e800 <strcmp@plt+0x2b078>
  423ddb:	mov    eax,ebx
  423ddd:	pop    rbx
  423dde:	ret    
  423ddf:	nop
  423de0:	mov    eax,DWORD PTR [rdi]
  423de2:	movzx  edx,ax
  423de5:	cmp    edx,0x2
  423de8:	je     423df2 <strcmp@plt+0x2066a>
  423dea:	cmp    edx,0xa
  423ded:	jne    423df5 <strcmp@plt+0x2066d>
  423def:	mov    al,0x12
  423df1:	ret    
  423df2:	mov    al,0x6
  423df4:	ret    
  423df5:	push   rax
  423df6:	lea    rsi,[rip+0x25ca4]        # 449aa1 <strcmp@plt+0x46319>
  423dfd:	mov    edi,0x3
  423e02:	xor    eax,eax
  423e04:	call   42e800 <strcmp@plt+0x2b078>
  423e09:	mov    al,0x2
  423e0b:	add    rsp,0x8
  423e0f:	ret    
  423e10:	push   rbx
  423e11:	mov    eax,DWORD PTR [rdi]
  423e13:	movzx  edx,ax
  423e16:	cmp    edx,0x2
  423e19:	je     423e26 <strcmp@plt+0x2069e>
  423e1b:	cmp    edx,0xa
  423e1e:	jne    423e2c <strcmp@plt+0x206a4>
  423e20:	mov    bx,0x2
  423e24:	jmp    423e41 <strcmp@plt+0x206b9>
  423e26:	mov    bx,0x1
  423e2a:	jmp    423e41 <strcmp@plt+0x206b9>
  423e2c:	lea    rsi,[rip+0x25c1c]        # 449a4f <strcmp@plt+0x462c7>
  423e33:	xor    ebx,ebx
  423e35:	mov    edi,0x3
  423e3a:	xor    eax,eax
  423e3c:	call   42e800 <strcmp@plt+0x2b078>
  423e41:	mov    eax,ebx
  423e43:	pop    rbx
  423e44:	ret    
  423e45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423e4f:	nop
  423e50:	push   rbx
  423e51:	cmp    edi,0x2
  423e54:	je     423e64 <strcmp@plt+0x206dc>
  423e56:	movzx  edx,di
  423e59:	cmp    edx,0xa
  423e5c:	jne    423e6a <strcmp@plt+0x206e2>
  423e5e:	mov    bx,0x2
  423e62:	jmp    423e7f <strcmp@plt+0x206f7>
  423e64:	mov    bx,0x1
  423e68:	jmp    423e7f <strcmp@plt+0x206f7>
  423e6a:	lea    rsi,[rip+0x25bde]        # 449a4f <strcmp@plt+0x462c7>
  423e71:	xor    ebx,ebx
  423e73:	mov    edi,0x3
  423e78:	xor    eax,eax
  423e7a:	call   42e800 <strcmp@plt+0x2b078>
  423e7f:	mov    eax,ebx
  423e81:	pop    rbx
  423e82:	ret    
  423e83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423e8d:	nop    DWORD PTR [rax]
  423e90:	push   rbx
  423e91:	mov    ecx,esi
  423e93:	cmp    esi,0xa
  423e96:	ja     423eab <strcmp@plt+0x20723>
  423e98:	mov    eax,0x405
  423e9d:	bt     eax,ecx
  423ea0:	jae    423eab <strcmp@plt+0x20723>
  423ea2:	mov    DWORD PTR [rdi],ecx
  423ea4:	mov    ebx,0x1
  423ea9:	jmp    423ec2 <strcmp@plt+0x2073a>
  423eab:	lea    rsi,[rip+0x25a96]        # 449948 <strcmp@plt+0x461c0>
  423eb2:	xor    ebx,ebx
  423eb4:	mov    edi,0x3
  423eb9:	xor    eax,eax
  423ebb:	mov    edx,ecx
  423ebd:	call   42e800 <strcmp@plt+0x2b078>
  423ec2:	mov    eax,ebx
  423ec4:	pop    rbx
  423ec5:	ret    
  423ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423ed0:	mov    DWORD PTR [rdi],0x2
  423ed6:	mov    eax,DWORD PTR [rsi]
  423ed8:	mov    DWORD PTR [rdi+0x4],eax
  423edb:	ret    
  423edc:	nop    DWORD PTR [rax+0x0]
  423ee0:	mov    DWORD PTR [rdi],0xa
  423ee6:	vmovups xmm0,XMMWORD PTR [rsi]
  423eea:	vmovups XMMWORD PTR [rdi+0x4],xmm0
  423eef:	ret    
  423ef0:	cmp    dl,0xa
  423ef3:	je     423f06 <strcmp@plt+0x2077e>
  423ef5:	cmp    dl,0x2
  423ef8:	jne    423f16 <strcmp@plt+0x2078e>
  423efa:	mov    DWORD PTR [rdi],0x2
  423f00:	mov    eax,DWORD PTR [rsi]
  423f02:	mov    DWORD PTR [rdi+0x4],eax
  423f05:	ret    
  423f06:	mov    DWORD PTR [rdi],0xa
  423f0c:	vmovups xmm0,XMMWORD PTR [rsi]
  423f10:	vmovups XMMWORD PTR [rdi+0x4],xmm0
  423f15:	ret    
  423f16:	movzx  edx,dl
  423f19:	lea    rsi,[rip+0x25a4d]        # 44996d <strcmp@plt+0x461e5>
  423f20:	mov    edi,0x3
  423f25:	xor    eax,eax
  423f27:	jmp    42e800 <strcmp@plt+0x2b078>
  423f2c:	nop    DWORD PTR [rax+0x0]
  423f30:	push   rbx
  423f31:	mov    rax,rdi
  423f34:	mov    ecx,DWORD PTR [rdi]
  423f36:	add    rax,0x4
  423f3a:	mov    edx,DWORD PTR [rip+0x46d98]        # 46acd8 <strcmp@plt+0x67550>
  423f40:	lea    esi,[rdx+0x1]
  423f43:	mov    edi,0xcccccccd
  423f48:	imul   rdi,rsi
  423f4c:	shr    rdi,0x23
  423f50:	add    edi,edi
  423f52:	lea    esi,[rdi+rdi*4]
  423f55:	neg    esi
  423f57:	lea    edx,[rdx+rsi*1]
  423f5a:	add    edx,0x1
  423f5d:	mov    DWORD PTR [rip+0x46d75],edx        # 46acd8 <strcmp@plt+0x67550>
  423f63:	imul   rsi,rdx,0x2f
  423f67:	lea    rbx,[rip+0x46b92]        # 46ab00 <strcmp@plt+0x67378>
  423f6e:	lea    rdx,[rbx+rsi*1]
  423f72:	mov    BYTE PTR [rsi+rbx*1],0x0
  423f76:	cmp    ecx,0xa
  423f79:	je     423f8c <strcmp@plt+0x20804>
  423f7b:	cmp    ecx,0x2
  423f7e:	jne    423fad <strcmp@plt+0x20825>
  423f80:	mov    edi,0x2
  423f85:	mov    ecx,0x10
  423f8a:	jmp    423f96 <strcmp@plt+0x2080e>
  423f8c:	mov    edi,0xa
  423f91:	mov    ecx,0x2e
  423f96:	mov    rsi,rax
  423f99:	call   4033f0 <inet_ntop@plt>
  423f9e:	mov    eax,DWORD PTR [rip+0x46d34]        # 46acd8 <strcmp@plt+0x67550>
  423fa4:	imul   rax,rax,0x2f
  423fa8:	add    rbx,rax
  423fab:	jmp    423faf <strcmp@plt+0x20827>
  423fad:	xor    ebx,ebx
  423faf:	mov    rax,rbx
  423fb2:	pop    rbx
  423fb3:	ret    
  423fb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423fbe:	xchg   ax,ax
  423fc0:	push   rbx
  423fc1:	mov    rax,rdi
  423fc4:	mov    ecx,DWORD PTR [rip+0x46d0e]        # 46acd8 <strcmp@plt+0x67550>
  423fca:	lea    edx,[rcx+0x1]
  423fcd:	mov    edi,0xcccccccd
  423fd2:	imul   rdi,rdx
  423fd6:	shr    rdi,0x23
  423fda:	add    edi,edi
  423fdc:	lea    edx,[rdi+rdi*4]
  423fdf:	neg    edx
  423fe1:	lea    ecx,[rcx+rdx*1]
  423fe4:	add    ecx,0x1
  423fe7:	mov    DWORD PTR [rip+0x46ceb],ecx        # 46acd8 <strcmp@plt+0x67550>
  423fed:	imul   rcx,rcx,0x2f
  423ff1:	lea    rbx,[rip+0x46b08]        # 46ab00 <strcmp@plt+0x67378>
  423ff8:	lea    rdx,[rbx+rcx*1]
  423ffc:	mov    BYTE PTR [rcx+rbx*1],0x0
  424000:	cmp    esi,0xa
  424003:	je     424016 <strcmp@plt+0x2088e>
  424005:	cmp    esi,0x2
  424008:	jne    424037 <strcmp@plt+0x208af>
  42400a:	mov    edi,0x2
  42400f:	mov    ecx,0x10
  424014:	jmp    424020 <strcmp@plt+0x20898>
  424016:	mov    edi,0xa
  42401b:	mov    ecx,0x2e
  424020:	mov    rsi,rax
  424023:	call   4033f0 <inet_ntop@plt>
  424028:	mov    eax,DWORD PTR [rip+0x46caa]        # 46acd8 <strcmp@plt+0x67550>
  42402e:	imul   rax,rax,0x2f
  424032:	add    rbx,rax
  424035:	jmp    424039 <strcmp@plt+0x208b1>
  424037:	xor    ebx,ebx
  424039:	mov    rax,rbx
  42403c:	pop    rbx
  42403d:	ret    
  42403e:	xchg   ax,ax
  424040:	test   rdi,rdi
  424043:	je     424058 <strcmp@plt+0x208d0>
  424045:	test   rsi,rsi
  424048:	je     424058 <strcmp@plt+0x208d0>
  42404a:	mov    eax,DWORD PTR [rsi+0x10]
  42404d:	mov    DWORD PTR [rdi+0x10],eax
  424050:	vmovups xmm0,XMMWORD PTR [rsi]
  424054:	vmovups XMMWORD PTR [rdi],xmm0
  424058:	ret    
  424059:	nop    DWORD PTR [rax+0x0]
  424060:	push   r15
  424062:	push   r14
  424064:	push   rbx
  424065:	test   rdi,rdi
  424068:	je     424090 <strcmp@plt+0x20908>
  42406a:	mov    rbx,rsi
  42406d:	test   rsi,rsi
  424070:	je     424090 <strcmp@plt+0x20908>
  424072:	mov    r14,rdi
  424075:	mov    eax,DWORD PTR [rbx]
  424077:	add    rbx,0x4
  42407b:	movzx  edx,ax
  42407e:	cmp    edx,0x2
  424081:	je     424096 <strcmp@plt+0x2090e>
  424083:	cmp    edx,0xa
  424086:	jne    42409e <strcmp@plt+0x20916>
  424088:	mov    r15d,0x10
  42408e:	jmp    4240b4 <strcmp@plt+0x2092c>
  424090:	pop    rbx
  424091:	pop    r14
  424093:	pop    r15
  424095:	ret    
  424096:	mov    r15d,0x4
  42409c:	jmp    4240b4 <strcmp@plt+0x2092c>
  42409e:	lea    rsi,[rip+0x259fc]        # 449aa1 <strcmp@plt+0x46319>
  4240a5:	xor    r15d,r15d
  4240a8:	mov    edi,0x3
  4240ad:	xor    eax,eax
  4240af:	call   42e800 <strcmp@plt+0x2b078>
  4240b4:	mov    rdi,r14
  4240b7:	mov    rsi,rbx
  4240ba:	mov    rdx,r15
  4240bd:	pop    rbx
  4240be:	pop    r14
  4240c0:	pop    r15
  4240c2:	jmp    403330 <memcpy@plt>
  4240c7:	nop    WORD PTR [rax+rax*1+0x0]
  4240d0:	push   rbp
  4240d1:	push   r15
  4240d3:	push   r14
  4240d5:	push   rbx
  4240d6:	push   rax
  4240d7:	mov    r15d,edx
  4240da:	mov    r14,rsi
  4240dd:	mov    rbx,rdi
  4240e0:	mov    eax,DWORD PTR [rsi]
  4240e2:	movzx  edx,ax
  4240e5:	cmp    edx,0x2
  4240e8:	je     4240f5 <strcmp@plt+0x2096d>
  4240ea:	cmp    edx,0xa
  4240ed:	jne    4240fb <strcmp@plt+0x20973>
  4240ef:	mov    bp,0x2
  4240f3:	jmp    424110 <strcmp@plt+0x20988>
  4240f5:	mov    bp,0x1
  4240f9:	jmp    424110 <strcmp@plt+0x20988>
  4240fb:	lea    rsi,[rip+0x2594d]        # 449a4f <strcmp@plt+0x462c7>
  424102:	xor    ebp,ebp
  424104:	mov    edi,0x3
  424109:	xor    eax,eax
  42410b:	call   42e800 <strcmp@plt+0x2b078>
  424110:	movbe  WORD PTR [rbx],bp
  424115:	add    rbx,0x2
  424119:	mov    eax,DWORD PTR [r14]
  42411c:	test   r15b,r15b
  42411f:	je     424130 <strcmp@plt+0x209a8>
  424121:	cmp    eax,0x2
  424124:	jne    424130 <strcmp@plt+0x209a8>
  424126:	mov    eax,DWORD PTR [r14+0x4]
  42412a:	movbe  DWORD PTR [rbx],eax
  42412e:	jmp    424175 <strcmp@plt+0x209ed>
  424130:	lea    r15,[r14+0x4]
  424134:	movzx  ecx,ax
  424137:	cmp    ecx,0x2
  42413a:	je     424148 <strcmp@plt+0x209c0>
  42413c:	cmp    ecx,0xa
  42413f:	jne    42414f <strcmp@plt+0x209c7>
  424141:	mov    ebp,0x10
  424146:	jmp    424167 <strcmp@plt+0x209df>
  424148:	mov    ebp,0x4
  42414d:	jmp    424167 <strcmp@plt+0x209df>
  42414f:	movzx  edx,ax
  424152:	lea    rsi,[rip+0x25948]        # 449aa1 <strcmp@plt+0x46319>
  424159:	xor    ebp,ebp
  42415b:	mov    edi,0x3
  424160:	xor    eax,eax
  424162:	call   42e800 <strcmp@plt+0x2b078>
  424167:	mov    rdi,rbx
  42416a:	mov    rsi,r15
  42416d:	mov    rdx,rbp
  424170:	call   403330 <memcpy@plt>
  424175:	mov    eax,DWORD PTR [r14]
  424178:	movzx  edx,ax
  42417b:	cmp    edx,0x2
  42417e:	je     42418c <strcmp@plt+0x20a04>
  424180:	cmp    edx,0xa
  424183:	jne    424193 <strcmp@plt+0x20a0b>
  424185:	mov    eax,0x12
  42418a:	jmp    4241ab <strcmp@plt+0x20a23>
  42418c:	mov    eax,0x6
  424191:	jmp    4241ab <strcmp@plt+0x20a23>
  424193:	lea    rsi,[rip+0x25907]        # 449aa1 <strcmp@plt+0x46319>
  42419a:	mov    edi,0x3
  42419f:	xor    eax,eax
  4241a1:	call   42e800 <strcmp@plt+0x2b078>
  4241a6:	mov    eax,0x2
  4241ab:	add    rsp,0x8
  4241af:	pop    rbx
  4241b0:	pop    r14
  4241b2:	pop    r15
  4241b4:	pop    rbp
  4241b5:	ret    
  4241b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4241c0:	push   r15
  4241c2:	push   r14
  4241c4:	push   rbx
  4241c5:	mov    edx,DWORD PTR [rdi]
  4241c7:	mov    ecx,DWORD PTR [rsi]
  4241c9:	cmp    edx,ecx
  4241cb:	jne    4241f0 <strcmp@plt+0x20a68>
  4241cd:	mov    r14,rsi
  4241d0:	mov    rbx,rdi
  4241d3:	add    rbx,0x4
  4241d7:	add    r14,0x4
  4241db:	movzx  eax,dx
  4241de:	cmp    eax,0x2
  4241e1:	je     424216 <strcmp@plt+0x20a8e>
  4241e3:	cmp    eax,0xa
  4241e6:	jne    42421e <strcmp@plt+0x20a96>
  4241e8:	mov    r15d,0x10
  4241ee:	jmp    424237 <strcmp@plt+0x20aaf>
  4241f0:	lea    rax,[rip+0x40bb9]        # 464db0 <strcmp@plt+0x61628>
  4241f7:	mov    ebx,0xffffffff
  4241fc:	cmp    DWORD PTR [rax],0x3
  4241ff:	jl     42424e <strcmp@plt+0x20ac6>
  424201:	lea    rsi,[rip+0x25787]        # 44998f <strcmp@plt+0x46207>
  424208:	mov    edi,0x7
  42420d:	xor    eax,eax
  42420f:	call   42e800 <strcmp@plt+0x2b078>
  424214:	jmp    42424e <strcmp@plt+0x20ac6>
  424216:	mov    r15d,0x4
  42421c:	jmp    424237 <strcmp@plt+0x20aaf>
  42421e:	movzx  edx,dx
  424221:	lea    rsi,[rip+0x25879]        # 449aa1 <strcmp@plt+0x46319>
  424228:	xor    r15d,r15d
  42422b:	mov    edi,0x3
  424230:	xor    eax,eax
  424232:	call   42e800 <strcmp@plt+0x2b078>
  424237:	mov    rdi,rbx
  42423a:	mov    rsi,r14
  42423d:	mov    rdx,r15
  424240:	call   403200 <memcmp@plt>
  424245:	mov    ebx,0x2
  42424a:	test   eax,eax
  42424c:	jns    424252 <strcmp@plt+0x20aca>
  42424e:	mov    eax,ebx
  424250:	jmp    424258 <strcmp@plt+0x20ad0>
  424252:	setne  al
  424255:	movzx  eax,al
  424258:	pop    rbx
  424259:	pop    r14
  42425b:	pop    r15
  42425d:	ret    
  42425e:	xchg   ax,ax
  424260:	push   rbp
  424261:	push   r14
  424263:	push   rbx
  424264:	mov    rbp,rdx
  424267:	cmp    esi,0x2
  42426a:	je     424288 <strcmp@plt+0x20b00>
  42426c:	movzx  ebx,si
  42426f:	cmp    ebx,0x1
  424272:	jne    4242a0 <strcmp@plt+0x20b18>
  424274:	mov    DWORD PTR [rbp+0x0],0x2
  42427b:	mov    eax,DWORD PTR [rdi+0x2]
  42427e:	mov    DWORD PTR [rbp+0x4],eax
  424281:	mov    ebp,0x6
  424286:	jmp    4242fe <strcmp@plt+0x20b76>
  424288:	mov    DWORD PTR [rbp+0x0],0xa
  42428f:	vmovups xmm0,XMMWORD PTR [rdi+0x2]
  424294:	vmovups XMMWORD PTR [rbp+0x4],xmm0
  424299:	mov    ebp,0x12
  42429e:	jmp    4242fe <strcmp@plt+0x20b76>
  4242a0:	lea    rsi,[rip+0x257d1]        # 449a78 <strcmp@plt+0x462f0>
  4242a7:	mov    edi,0x3
  4242ac:	xor    eax,eax
  4242ae:	mov    edx,ebx
  4242b0:	call   42e800 <strcmp@plt+0x2b078>
  4242b5:	mov    DWORD PTR [rbp+0x0],0x0
  4242bc:	lea    r14,[rip+0x40aed]        # 464db0 <strcmp@plt+0x61628>
  4242c3:	mov    ebp,0x2
  4242c8:	cmp    DWORD PTR [r14],0x3
  4242cc:	jl     4242fe <strcmp@plt+0x20b76>
  4242ce:	lea    rsi,[rip+0x25819]        # 449aee <strcmp@plt+0x46366>
  4242d5:	mov    edi,0x7
  4242da:	xor    eax,eax
  4242dc:	mov    edx,ebx
  4242de:	call   42e800 <strcmp@plt+0x2b078>
  4242e3:	cmp    DWORD PTR [r14],0x3
  4242e7:	jl     4242fe <strcmp@plt+0x20b76>
  4242e9:	lea    rsi,[rip+0x257fe]        # 449aee <strcmp@plt+0x46366>
  4242f0:	mov    edi,0x7
  4242f5:	xor    eax,eax
  4242f7:	mov    edx,ebx
  4242f9:	call   42e800 <strcmp@plt+0x2b078>
  4242fe:	mov    eax,ebp
  424300:	pop    rbx
  424301:	pop    r14
  424303:	pop    rbp
  424304:	ret    
  424305:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42430f:	nop
  424310:	push   rbx
  424311:	cmp    edi,0x1
  424314:	je     424324 <strcmp@plt+0x20b9c>
  424316:	movzx  edx,di
  424319:	cmp    edx,0x2
  42431c:	jne    42432a <strcmp@plt+0x20ba2>
  42431e:	mov    bx,0xa
  424322:	jmp    42433f <strcmp@plt+0x20bb7>
  424324:	mov    bx,0x2
  424328:	jmp    42433f <strcmp@plt+0x20bb7>
  42432a:	lea    rsi,[rip+0x25747]        # 449a78 <strcmp@plt+0x462f0>
  424331:	xor    ebx,ebx
  424333:	mov    edi,0x3
  424338:	xor    eax,eax
  42433a:	call   42e800 <strcmp@plt+0x2b078>
  42433f:	mov    eax,ebx
  424341:	pop    rbx
  424342:	ret    
  424343:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42434d:	nop    DWORD PTR [rax]
  424350:	push   rbx
  424351:	cmp    edi,0x1
  424354:	je     424364 <strcmp@plt+0x20bdc>
  424356:	mov    ecx,edi
  424358:	movzx  eax,cx
  42435b:	cmp    eax,0x2
  42435e:	jne    424368 <strcmp@plt+0x20be0>
  424360:	mov    bl,0x10
  424362:	jmp    42438f <strcmp@plt+0x20c07>
  424364:	mov    bl,0x4
  424366:	jmp    42438f <strcmp@plt+0x20c07>
  424368:	lea    rax,[rip+0x40a41]        # 464db0 <strcmp@plt+0x61628>
  42436f:	cmp    DWORD PTR [rax],0x3
  424372:	jge    424378 <strcmp@plt+0x20bf0>
  424374:	xor    ebx,ebx
  424376:	jmp    42438f <strcmp@plt+0x20c07>
  424378:	lea    rsi,[rip+0x2576f]        # 449aee <strcmp@plt+0x46366>
  42437f:	xor    ebx,ebx
  424381:	mov    edi,0x7
  424386:	xor    eax,eax
  424388:	mov    edx,ecx
  42438a:	call   42e800 <strcmp@plt+0x2b078>
  42438f:	mov    eax,ebx
  424391:	pop    rbx
  424392:	ret    
  424393:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42439d:	nop    DWORD PTR [rax]
  4243a0:	mov    edx,DWORD PTR [rdi]
  4243a2:	cmp    edx,0xa
  4243a5:	sete   cl
  4243a8:	mov    al,0x20
  4243aa:	cmp    edx,0x2
  4243ad:	je     4243b4 <strcmp@plt+0x20c2c>
  4243af:	shl    cl,0x7
  4243b2:	mov    eax,ecx
  4243b4:	ret    
  4243b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4243bf:	nop
  4243c0:	xor    ecx,ecx
  4243c2:	cmp    edi,0xa
  4243c5:	sete   cl
  4243c8:	shl    ecx,0x7
  4243cb:	cmp    edi,0x2
  4243ce:	mov    eax,0x20
  4243d3:	cmovne eax,ecx
  4243d6:	ret    
  4243d7:	nop    WORD PTR [rax+rax*1+0x0]
  4243e0:	mov    al,BYTE PTR [rdi+0x14]
  4243e3:	ret    
  4243e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4243ee:	xchg   ax,ax
  4243f0:	mov    rax,rdi
  4243f3:	ret    
  4243f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4243fe:	xchg   ax,ax
  424400:	mov    al,BYTE PTR [rdi]
  424402:	ret    
  424403:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42440d:	nop    DWORD PTR [rax]
  424410:	test   rdi,rdi
  424413:	je     424428 <strcmp@plt+0x20ca0>
  424415:	test   rsi,rsi
  424418:	je     424428 <strcmp@plt+0x20ca0>
  42441a:	mov    eax,DWORD PTR [rsi+0x10]
  42441d:	mov    DWORD PTR [rdi+0x10],eax
  424420:	vmovups xmm0,XMMWORD PTR [rsi]
  424424:	vmovups XMMWORD PTR [rdi],xmm0
  424428:	mov    BYTE PTR [rdi+0x14],dl
  42442b:	ret    
  42442c:	nop    DWORD PTR [rax+0x0]
  424430:	mov    BYTE PTR [rdi+0x14],sil
  424434:	ret    
  424435:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42443f:	nop
  424440:	mov    ecx,esi
  424442:	cmp    esi,0xa
  424445:	ja     424454 <strcmp@plt+0x20ccc>
  424447:	mov    eax,0x405
  42444c:	bt     eax,ecx
  42444f:	jae    424454 <strcmp@plt+0x20ccc>
  424451:	mov    DWORD PTR [rdi],ecx
  424453:	ret    
  424454:	lea    rsi,[rip+0x254ed]        # 449948 <strcmp@plt+0x461c0>
  42445b:	mov    edi,0x3
  424460:	xor    eax,eax
  424462:	mov    edx,ecx
  424464:	jmp    42e800 <strcmp@plt+0x2b078>
  424469:	nop    DWORD PTR [rax+0x0]
  424470:	mov    al,BYTE PTR [rsi+0x14]
  424473:	mov    BYTE PTR [rdi+0x14],al
  424476:	test   rdi,rdi
  424479:	je     42448e <strcmp@plt+0x20d06>
  42447b:	test   rsi,rsi
  42447e:	je     42448e <strcmp@plt+0x20d06>
  424480:	mov    eax,DWORD PTR [rsi+0x10]
  424483:	mov    DWORD PTR [rdi+0x10],eax
  424486:	vmovups xmm0,XMMWORD PTR [rsi]
  42448a:	vmovups XMMWORD PTR [rdi],xmm0
  42448e:	ret    
  42448f:	nop
  424490:	push   r15
  424492:	push   r14
  424494:	push   r12
  424496:	push   rbx
  424497:	push   rax
  424498:	mov    r14,rdi
  42449b:	mov    eax,DWORD PTR [rip+0x4664f]        # 46aaf0 <strcmp@plt+0x67368>
  4244a1:	lea    ecx,[rax+0x1]
  4244a4:	mov    edx,0xcccccccd
  4244a9:	imul   rcx,rdx
  4244ad:	shr    rcx,0x23
  4244b1:	add    ecx,ecx
  4244b3:	lea    ecx,[rcx+rcx*4]
  4244b6:	neg    ecx
  4244b8:	lea    eax,[rax+rcx*1]
  4244bb:	add    eax,0x1
  4244be:	mov    DWORD PTR [rip+0x4662c],eax        # 46aaf0 <strcmp@plt+0x67368>
  4244c4:	imul   rax,rax,0x33
  4244c8:	lea    r12,[rip+0x46421]        # 46a8f0 <strcmp@plt+0x67168>
  4244cf:	lea    r15,[r12+rax*1]
  4244d3:	mov    BYTE PTR [rax+r12*1],0x0
  4244d8:	lea    rsi,[rdi+0x4]
  4244dc:	mov    eax,DWORD PTR [rdi]
  4244de:	mov    ecx,DWORD PTR [rip+0x467f4]        # 46acd8 <strcmp@plt+0x67550>
  4244e4:	lea    edi,[rcx+0x1]
  4244e7:	imul   rdi,rdx
  4244eb:	shr    rdi,0x23
  4244ef:	add    edi,edi
  4244f1:	lea    edx,[rdi+rdi*4]
  4244f4:	neg    edx
  4244f6:	lea    ecx,[rcx+rdx*1]
  4244f9:	add    ecx,0x1
  4244fc:	mov    DWORD PTR [rip+0x467d6],ecx        # 46acd8 <strcmp@plt+0x67550>
  424502:	imul   rcx,rcx,0x2f
  424506:	lea    rbx,[rip+0x465f3]        # 46ab00 <strcmp@plt+0x67378>
  42450d:	lea    rdx,[rbx+rcx*1]
  424511:	mov    BYTE PTR [rcx+rbx*1],0x0
  424515:	cmp    eax,0xa
  424518:	je     42452b <strcmp@plt+0x20da3>
  42451a:	cmp    eax,0x2
  42451d:	jne    424549 <strcmp@plt+0x20dc1>
  42451f:	mov    edi,0x2
  424524:	mov    ecx,0x10
  424529:	jmp    424535 <strcmp@plt+0x20dad>
  42452b:	mov    edi,0xa
  424530:	mov    ecx,0x2e
  424535:	call   4033f0 <inet_ntop@plt>
  42453a:	mov    eax,DWORD PTR [rip+0x46798]        # 46acd8 <strcmp@plt+0x67550>
  424540:	imul   rax,rax,0x2f
  424544:	add    rbx,rax
  424547:	jmp    42454b <strcmp@plt+0x20dc3>
  424549:	xor    ebx,ebx
  42454b:	movzx  ecx,BYTE PTR [r14+0x14]
  424550:	lea    rsi,[rip+0x2546b]        # 4499c2 <strcmp@plt+0x4623a>
  424557:	xor    eax,eax
  424559:	mov    rdi,r15
  42455c:	mov    rdx,rbx
  42455f:	call   4030b0 <sprintf@plt>
  424564:	mov    eax,DWORD PTR [rip+0x46586]        # 46aaf0 <strcmp@plt+0x67368>
  42456a:	imul   rax,rax,0x33
  42456e:	add    r12,rax
  424571:	mov    rax,r12
  424574:	add    rsp,0x8
  424578:	pop    rbx
  424579:	pop    r12
  42457b:	pop    r14
  42457d:	pop    r15
  42457f:	ret    
  424580:	push   rbp
  424581:	push   r14
  424583:	push   rbx
  424584:	mov    r14,rsi
  424587:	mov    rbx,rdi
  42458a:	mov    esi,0x3a
  42458f:	call   403190 <strchr@plt>
  424594:	xor    ecx,ecx
  424596:	test   rax,rax
  424599:	setne  cl
  42459c:	lea    ebp,[rcx*8+0x2]
  4245a3:	lea    rdx,[r14+0x4]
  4245a7:	mov    edi,ebp
  4245a9:	mov    rsi,rbx
  4245ac:	call   403750 <inet_pton@plt>
  4245b1:	mov    ecx,eax
  4245b3:	xor    eax,eax
  4245b5:	cmp    ecx,0x1
  4245b8:	jne    4245c2 <strcmp@plt+0x20e3a>
  4245ba:	mov    DWORD PTR [r14],ebp
  4245bd:	mov    eax,0x1
  4245c2:	pop    rbx
  4245c3:	pop    r14
  4245c5:	pop    rbp
  4245c6:	ret    
  4245c7:	nop    WORD PTR [rax+rax*1+0x0]
  4245d0:	push   rax
  4245d1:	mov    esi,0x3a
  4245d6:	call   403190 <strchr@plt>
  4245db:	xor    ecx,ecx
  4245dd:	test   rax,rax
  4245e0:	setne  cl
  4245e3:	lea    eax,[rcx*8+0x2]
  4245ea:	pop    rcx
  4245eb:	ret    
  4245ec:	nop    DWORD PTR [rax+0x0]
  4245f0:	push   rbp
  4245f1:	push   r15
  4245f3:	push   r14
  4245f5:	push   r12
  4245f7:	push   rbx
  4245f8:	mov    r15,rsi
  4245fb:	mov    r14,rdi
  4245fe:	call   403700 <strdup@plt>
  424603:	mov    r12,rax
  424606:	lea    rsi,[rip+0x253bb]        # 4499c8 <strcmp@plt+0x46240>
  42460d:	mov    rdi,rax
  424610:	call   403610 <strtok@plt>
  424615:	test   rax,rax
  424618:	je     4246bf <strcmp@plt+0x20f37>
  42461e:	mov    rbx,rax
  424621:	mov    esi,0x3a
  424626:	mov    rdi,rax
  424629:	call   403190 <strchr@plt>
  42462e:	xor    ecx,ecx
  424630:	test   rax,rax
  424633:	setne  cl
  424636:	lea    ebp,[rcx*8+0x2]
  42463d:	lea    rdx,[r15+0x4]
  424641:	mov    edi,ebp
  424643:	mov    rsi,rbx
  424646:	call   403750 <inet_pton@plt>
  42464b:	cmp    eax,0x1
  42464e:	jne    42470f <strcmp@plt+0x20f87>
  424654:	mov    DWORD PTR [r15],ebp
  424657:	lea    rsi,[rip+0x2536a]        # 4499c8 <strcmp@plt+0x46240>
  42465e:	xor    edi,edi
  424660:	call   403610 <strtok@plt>
  424665:	test   rax,rax
  424668:	je     4246de <strcmp@plt+0x20f56>
  42466a:	xor    esi,esi
  42466c:	mov    edx,0xa
  424671:	mov    rdi,rax
  424674:	call   403570 <strtol@plt>
  424679:	mov    rbx,rax
  42467c:	mov    rdi,r12
  42467f:	call   403780 <free@plt>
  424684:	cmp    DWORD PTR [r15],0x2
  424688:	jne    424724 <strcmp@plt+0x20f9c>
  42468e:	cmp    ebx,0x21
  424691:	jb     424730 <strcmp@plt+0x20fa8>
  424697:	lea    rax,[rip+0x40712]        # 464db0 <strcmp@plt+0x61628>
  42469e:	xor    ebx,ebx
  4246a0:	cmp    DWORD PTR [rax],0x2
  4246a3:	jl     424719 <strcmp@plt+0x20f91>
  4246a5:	lea    rsi,[rip+0x2537c]        # 449a28 <strcmp@plt+0x462a0>
  4246ac:	xor    ebx,ebx
  4246ae:	mov    edi,0x6
  4246b3:	xor    eax,eax
  4246b5:	mov    rdx,r14
  4246b8:	call   42e800 <strcmp@plt+0x2b078>
  4246bd:	jmp    424719 <strcmp@plt+0x20f91>
  4246bf:	lea    rax,[rip+0x406ea]        # 464db0 <strcmp@plt+0x61628>
  4246c6:	cmp    DWORD PTR [rax],0x0
  4246c9:	jle    42470f <strcmp@plt+0x20f87>
  4246cb:	lea    rsi,[rip+0x252f8]        # 4499ca <strcmp@plt+0x46242>
  4246d2:	mov    edi,0x5
  4246d7:	xor    eax,eax
  4246d9:	mov    rdx,r14
  4246dc:	jmp    42470a <strcmp@plt+0x20f82>
  4246de:	lea    rax,[rip+0x406cb]        # 464db0 <strcmp@plt+0x61628>
  4246e5:	cmp    DWORD PTR [rax],0x0
  4246e8:	jle    42470f <strcmp@plt+0x20f87>
  4246ea:	call   403040 <__errno_location@plt>
  4246ef:	mov    edi,DWORD PTR [rax]
  4246f1:	call   403170 <strerror@plt>
  4246f6:	mov    rcx,rax
  4246f9:	lea    rsi,[rip+0x25308]        # 449a08 <strcmp@plt+0x46280>
  424700:	mov    edi,0x5
  424705:	xor    eax,eax
  424707:	mov    rdx,rcx
  42470a:	call   42e800 <strcmp@plt+0x2b078>
  42470f:	mov    rdi,r12
  424712:	call   403780 <free@plt>
  424717:	xor    ebx,ebx
  424719:	mov    eax,ebx
  42471b:	pop    rbx
  42471c:	pop    r12
  42471e:	pop    r14
  424720:	pop    r15
  424722:	pop    rbp
  424723:	ret    
  424724:	cmp    ebx,0x81
  42472a:	jae    424697 <strcmp@plt+0x20f0f>
  424730:	mov    BYTE PTR [r15+0x14],bl
  424734:	mov    ebx,0x1
  424739:	jmp    424719 <strcmp@plt+0x20f91>
  42473b:	nop    DWORD PTR [rax+rax*1+0x0]
  424740:	push   rbx
  424741:	cmp    edi,0x2
  424744:	je     424754 <strcmp@plt+0x20fcc>
  424746:	mov    ecx,edi
  424748:	cmp    edi,0xa
  42474b:	jne    42475b <strcmp@plt+0x20fd3>
  42474d:	mov    ebx,0x28
  424752:	jmp    424781 <strcmp@plt+0x20ff9>
  424754:	mov    ebx,0x14
  424759:	jmp    424781 <strcmp@plt+0x20ff9>
  42475b:	lea    rax,[rip+0x4064e]        # 464db0 <strcmp@plt+0x61628>
  424762:	mov    ebx,0xfffffffe
  424767:	cmp    DWORD PTR [rax],0x2
  42476a:	jl     424781 <strcmp@plt+0x20ff9>
  42476c:	lea    rsi,[rip+0x25357]        # 449aca <strcmp@plt+0x46342>
  424773:	mov    edi,0x6
  424778:	xor    eax,eax
  42477a:	mov    edx,ecx
  42477c:	call   42e800 <strcmp@plt+0x2b078>
  424781:	mov    eax,ebx
  424783:	pop    rbx
  424784:	ret    
  424785:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42478f:	nop
  424790:	push   rbx
  424791:	sub    rsp,0x10
  424795:	mov    rbx,rdi
  424798:	mov    eax,DWORD PTR [rdi]
  42479a:	mov    DWORD PTR [rsp+0xc],0x0
  4247a2:	mov    DWORD PTR [rsp+0x8],0x0
  4247aa:	cmp    eax,0xa
  4247ad:	je     4247ed <strcmp@plt+0x21065>
  4247af:	cmp    eax,0x2
  4247b2:	jne    4247ff <strcmp@plt+0x21077>
  4247b4:	lea    rsi,[rip+0x2537b]        # 449b36 <strcmp@plt+0x463ae>
  4247bb:	lea    rdx,[rsp+0xc]
  4247c0:	mov    edi,0x2
  4247c5:	call   403750 <inet_pton@plt>
  4247ca:	lea    rsi,[rip+0x25371]        # 449b42 <strcmp@plt+0x463ba>
  4247d1:	lea    rdx,[rsp+0x8]
  4247d6:	mov    edi,0x2
  4247db:	call   403750 <inet_pton@plt>
  4247e0:	mov    eax,DWORD PTR [rsp+0x8]
  4247e4:	and    eax,DWORD PTR [rbx+0x4]
  4247e7:	cmp    eax,DWORD PTR [rsp+0xc]
  4247eb:	jmp    4247fa <strcmp@plt+0x21072>
  4247ed:	mov    eax,0xc0ff
  4247f2:	and    eax,DWORD PTR [rbx+0x4]
  4247f5:	cmp    eax,0x80fe
  4247fa:	sete   al
  4247fd:	jmp    424801 <strcmp@plt+0x21079>
  4247ff:	xor    eax,eax
  424801:	movzx  eax,al
  424804:	add    rsp,0x10
  424808:	pop    rbx
  424809:	ret    
  42480a:	nop    WORD PTR [rax+rax*1+0x0]
  424810:	push   rbx
  424811:	sub    rsp,0x10
  424815:	mov    rbx,rdi
  424818:	mov    DWORD PTR [rsp+0xc],0x0
  424820:	mov    DWORD PTR [rsp+0x8],0x0
  424828:	cmp    esi,0xa
  42482b:	je     42486a <strcmp@plt+0x210e2>
  42482d:	cmp    esi,0x2
  424830:	jne    42487b <strcmp@plt+0x210f3>
  424832:	lea    rsi,[rip+0x252fd]        # 449b36 <strcmp@plt+0x463ae>
  424839:	lea    rdx,[rsp+0xc]
  42483e:	mov    edi,0x2
  424843:	call   403750 <inet_pton@plt>
  424848:	lea    rsi,[rip+0x252f3]        # 449b42 <strcmp@plt+0x463ba>
  42484f:	lea    rdx,[rsp+0x8]
  424854:	mov    edi,0x2
  424859:	call   403750 <inet_pton@plt>
  42485e:	mov    eax,DWORD PTR [rsp+0x8]
  424862:	and    eax,DWORD PTR [rbx]
  424864:	cmp    eax,DWORD PTR [rsp+0xc]
  424868:	jmp    424876 <strcmp@plt+0x210ee>
  42486a:	mov    eax,0xc0ff
  42486f:	and    eax,DWORD PTR [rbx]
  424871:	cmp    eax,0x80fe
  424876:	sete   al
  424879:	jmp    42487d <strcmp@plt+0x210f5>
  42487b:	xor    eax,eax
  42487d:	add    rsp,0x10
  424881:	pop    rbx
  424882:	ret    
  424883:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42488d:	nop    DWORD PTR [rax]
  424890:	mov    eax,DWORD PTR [rdi]
  424892:	cmp    eax,0xa
  424895:	je     4248a7 <strcmp@plt+0x2111f>
  424897:	cmp    eax,0x2
  42489a:	jne    4248b3 <strcmp@plt+0x2112b>
  42489c:	cmp    DWORD PTR [rdi+0x4],0x0
  4248a0:	sete   al
  4248a3:	movzx  eax,al
  4248a6:	ret    
  4248a7:	cmp    DWORD PTR [rdi+0x4],0x0
  4248ab:	je     4248b9 <strcmp@plt+0x21131>
  4248ad:	xor    eax,eax
  4248af:	movzx  eax,al
  4248b2:	ret    
  4248b3:	xor    eax,eax
  4248b5:	movzx  eax,al
  4248b8:	ret    
  4248b9:	cmp    DWORD PTR [rdi+0x8],0x0
  4248bd:	je     4248c5 <strcmp@plt+0x2113d>
  4248bf:	xor    eax,eax
  4248c1:	movzx  eax,al
  4248c4:	ret    
  4248c5:	cmp    DWORD PTR [rdi+0xc],0x0
  4248c9:	je     4248d1 <strcmp@plt+0x21149>
  4248cb:	xor    eax,eax
  4248cd:	movzx  eax,al
  4248d0:	ret    
  4248d1:	cmp    DWORD PTR [rdi+0x10],0x0
  4248d5:	jmp    4248a0 <strcmp@plt+0x21118>
  4248d7:	nop    WORD PTR [rax+rax*1+0x0]
  4248e0:	push   rbx
  4248e1:	mov    edx,DWORD PTR [rdi]
  4248e3:	cmp    edx,0xa
  4248e6:	je     4248ff <strcmp@plt+0x21177>
  4248e8:	cmp    edx,0x2
  4248eb:	jne    424908 <strcmp@plt+0x21180>
  4248ed:	mov    eax,0xf0
  4248f2:	and    eax,DWORD PTR [rdi+0x4]
  4248f5:	cmp    eax,0xe0
  4248fa:	sete   bl
  4248fd:	jmp    42491d <strcmp@plt+0x21195>
  4248ff:	cmp    BYTE PTR [rdi+0x4],0xff
  424903:	sete   bl
  424906:	jmp    42491d <strcmp@plt+0x21195>
  424908:	lea    rsi,[rip+0x25205]        # 449b14 <strcmp@plt+0x4638c>
  42490f:	xor    ebx,ebx
  424911:	mov    edi,0x3
  424916:	xor    eax,eax
  424918:	call   42e800 <strcmp@plt+0x2b078>
  42491d:	mov    eax,ebx
  42491f:	pop    rbx
  424920:	ret    
  424921:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42492b:	nop    DWORD PTR [rax+rax*1+0x0]
  424930:	push   rbx
  424931:	cmp    esi,0xa
  424934:	je     42494e <strcmp@plt+0x211c6>
  424936:	mov    ecx,esi
  424938:	cmp    esi,0x2
  42493b:	jne    424956 <strcmp@plt+0x211ce>
  42493d:	mov    eax,0xf0
  424942:	and    eax,DWORD PTR [rdi]
  424944:	cmp    eax,0xe0
  424949:	sete   bl
  42494c:	jmp    42496d <strcmp@plt+0x211e5>
  42494e:	cmp    BYTE PTR [rdi],0xff
  424951:	sete   bl
  424954:	jmp    42496d <strcmp@plt+0x211e5>
  424956:	lea    rsi,[rip+0x251b7]        # 449b14 <strcmp@plt+0x4638c>
  42495d:	xor    ebx,ebx
  42495f:	mov    edi,0x3
  424964:	xor    eax,eax
  424966:	mov    edx,ecx
  424968:	call   42e800 <strcmp@plt+0x2b078>
  42496d:	mov    eax,ebx
  42496f:	pop    rbx
  424970:	ret    
  424971:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42497b:	nop    DWORD PTR [rax+rax*1+0x0]
  424980:	mov    eax,0xf0
  424985:	and    eax,DWORD PTR [rdi]
  424987:	cmp    eax,0xe0
  42498c:	sete   al
  42498f:	ret    
  424990:	cmp    BYTE PTR [rdi],0xff
  424993:	sete   al
  424996:	ret    
  424997:	nop    WORD PTR [rax+rax*1+0x0]
  4249a0:	mov    cl,0xa
  4249a2:	cmp    dil,0x6
  4249a6:	je     4249aa <strcmp@plt+0x21222>
  4249a8:	xor    ecx,ecx
  4249aa:	mov    al,0x2
  4249ac:	cmp    dil,0x4
  4249b0:	je     4249b4 <strcmp@plt+0x2122c>
  4249b2:	mov    eax,ecx
  4249b4:	ret    
  4249b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249bf:	nop
  4249c0:	push   rbx
  4249c1:	cmp    edi,0x4
  4249c4:	je     4249d4 <strcmp@plt+0x2124c>
  4249c6:	mov    ecx,edi
  4249c8:	cmp    edi,0x6
  4249cb:	jne    4249db <strcmp@plt+0x21253>
  4249cd:	mov    ebx,0x28
  4249d2:	jmp    424a00 <strcmp@plt+0x21278>
  4249d4:	mov    ebx,0x14
  4249d9:	jmp    424a00 <strcmp@plt+0x21278>
  4249db:	lea    rax,[rip+0x403ce]        # 464db0 <strcmp@plt+0x61628>
  4249e2:	xor    ebx,ebx
  4249e4:	cmp    DWORD PTR [rax],0x2
  4249e7:	jl     424a00 <strcmp@plt+0x21278>
  4249e9:	lea    rsi,[rip+0x2515e]        # 449b4e <strcmp@plt+0x463c6>
  4249f0:	xor    ebx,ebx
  4249f2:	mov    edi,0x6
  4249f7:	xor    eax,eax
  4249f9:	mov    edx,ecx
  4249fb:	call   42e800 <strcmp@plt+0x2b078>
  424a00:	mov    eax,ebx
  424a02:	pop    rbx
  424a03:	ret    
  424a04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424a0e:	xchg   ax,ax
  424a10:	mov    rdi,QWORD PTR [rdi]
  424a13:	jmp    42c250 <strcmp@plt+0x28ac8>
  424a18:	nop    DWORD PTR [rax+rax*1+0x0]
  424a20:	push   rbx
  424a21:	test   rdi,rdi
  424a24:	je     424a3b <strcmp@plt+0x212b3>
  424a26:	mov    rbx,rdi
  424a29:	mov    rdi,QWORD PTR [rdi+0x8]
  424a2d:	call   422fa0 <strcmp@plt+0x1f818>
  424a32:	mov    rdi,rbx
  424a35:	pop    rbx
  424a36:	jmp    403780 <free@plt>
  424a3b:	lea    rdi,[rip+0x27960]        # 44c3a2 <strcmp@plt+0x48c1a>
  424a42:	lea    rsi,[rip+0x25134]        # 449b7d <strcmp@plt+0x463f5>
  424a49:	lea    rcx,[rip+0x258be]        # 44a30e <strcmp@plt+0x46b86>
  424a50:	mov    edx,0x30a
  424a55:	call   4032b0 <__assert_fail@plt>
  424a5a:	nop    WORD PTR [rax+rax*1+0x0]
  424a60:	push   rbx
  424a61:	mov    rbx,rdi
  424a64:	mov    rdi,QWORD PTR [rdi+0x10]
  424a68:	call   422fa0 <strcmp@plt+0x1f818>
  424a6d:	mov    rdi,rbx
  424a70:	pop    rbx
  424a71:	jmp    403780 <free@plt>
  424a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424a80:	push   rbx
  424a81:	mov    rbx,rdi
  424a84:	mov    rdi,QWORD PTR [rdi+0x18]
  424a88:	call   422fa0 <strcmp@plt+0x1f818>
  424a8d:	mov    rdi,QWORD PTR [rbx+0x8]
  424a91:	call   422fa0 <strcmp@plt+0x1f818>
  424a96:	mov    rdi,QWORD PTR [rbx+0x20]
  424a9a:	call   422fa0 <strcmp@plt+0x1f818>
  424a9f:	mov    rdi,QWORD PTR [rbx+0x28]
  424aa3:	call   42c250 <strcmp@plt+0x28ac8>
  424aa8:	mov    rdi,rbx
  424aab:	pop    rbx
  424aac:	jmp    403780 <free@plt>
  424ab1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424abb:	nop    DWORD PTR [rax+rax*1+0x0]
  424ac0:	push   rbx
  424ac1:	test   rdi,rdi
  424ac4:	je     424ae4 <strcmp@plt+0x2135c>
  424ac6:	mov    rbx,rdi
  424ac9:	mov    rdi,QWORD PTR [rdi+0x8]
  424acd:	call   422fa0 <strcmp@plt+0x1f818>
  424ad2:	mov    rdi,QWORD PTR [rbx+0x10]
  424ad6:	call   422fa0 <strcmp@plt+0x1f818>
  424adb:	mov    rdi,rbx
  424ade:	pop    rbx
  424adf:	jmp    403780 <free@plt>
  424ae4:	lea    rdi,[rip+0x2547b]        # 449f66 <strcmp@plt+0x467de>
  424aeb:	lea    rsi,[rip+0x2508b]        # 449b7d <strcmp@plt+0x463f5>
  424af2:	lea    rcx,[rip+0x256ec]        # 44a1e5 <strcmp@plt+0x46a5d>
  424af9:	mov    edx,0x235
  424afe:	call   4032b0 <__assert_fail@plt>
  424b03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424b0d:	nop    DWORD PTR [rax]
  424b10:	push   rbx
  424b11:	mov    rbx,rdi
  424b14:	mov    rdi,QWORD PTR [rdi]
  424b17:	call   42c250 <strcmp@plt+0x28ac8>
  424b1c:	mov    rdi,rbx
  424b1f:	pop    rbx
  424b20:	jmp    403780 <free@plt>
  424b25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424b2f:	nop
  424b30:	test   rdi,rdi
  424b33:	je     424b4a <strcmp@plt+0x213c2>
  424b35:	push   rbx
  424b36:	mov    rbx,rdi
  424b39:	mov    rdi,QWORD PTR [rdi]
  424b3c:	call   42c250 <strcmp@plt+0x28ac8>
  424b41:	mov    rdi,rbx
  424b44:	pop    rbx
  424b45:	jmp    403780 <free@plt>
  424b4a:	ret    
  424b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  424b50:	push   rbp
  424b51:	push   r15
  424b53:	push   r14
  424b55:	push   r13
  424b57:	push   r12
  424b59:	push   rbx
  424b5a:	push   rax
  424b5b:	mov    r14,rdi
  424b5e:	mov    r15,QWORD PTR [rsi]
  424b61:	test   r15,r15
  424b64:	jne    424b87 <strcmp@plt+0x213ff>
  424b66:	mov    edi,0x8
  424b6b:	call   432070 <strcmp@plt+0x2e8e8>
  424b70:	mov    r15,rax
  424b73:	lea    rdi,[rip+0xffffffffffffe426]        # 422fa0 <strcmp@plt+0x1f818>
  424b7a:	call   42bc00 <strcmp@plt+0x28478>
  424b7f:	mov    QWORD PTR [r15],rax
  424b82:	test   r15,r15
  424b85:	je     424be3 <strcmp@plt+0x2145b>
  424b87:	movzx  eax,WORD PTR [r14+0x6]
  424b8c:	lea    r12,[r14+0x8]
  424b90:	test   ax,ax
  424b93:	je     424bd6 <strcmp@plt+0x2144e>
  424b95:	rol    ax,0x8
  424b99:	movzx  r13d,ax
  424b9d:	nop    DWORD PTR [rax]
  424ba0:	xor    eax,eax
  424ba2:	call   422f90 <strcmp@plt+0x1f808>
  424ba7:	test   rax,rax
  424baa:	je     424bdb <strcmp@plt+0x21453>
  424bac:	mov    rbx,rax
  424baf:	mov    rdi,r12
  424bb2:	mov    rsi,rax
  424bb5:	call   4238c0 <strcmp@plt+0x20138>
  424bba:	mov    ebp,eax
  424bbc:	mov    rsi,QWORD PTR [r15]
  424bbf:	mov    rdi,rbx
  424bc2:	call   42be30 <strcmp@plt+0x286a8>
  424bc7:	test   ebp,ebp
  424bc9:	jle    424bdb <strcmp@plt+0x21453>
  424bcb:	movsxd rax,ebp
  424bce:	add    r12,rax
  424bd1:	sub    r13d,ebp
  424bd4:	jg     424ba0 <strcmp@plt+0x21418>
  424bd6:	sub    r12d,r14d
  424bd9:	jmp    424be6 <strcmp@plt+0x2145e>
  424bdb:	mov    rdi,QWORD PTR [r15]
  424bde:	call   42c250 <strcmp@plt+0x28ac8>
  424be3:	xor    r12d,r12d
  424be6:	mov    eax,r12d
  424be9:	add    rsp,0x8
  424bed:	pop    rbx
  424bee:	pop    r12
  424bf0:	pop    r13
  424bf2:	pop    r14
  424bf4:	pop    r15
  424bf6:	pop    rbp
  424bf7:	ret    
  424bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  424c00:	push   r15
  424c02:	push   r14
  424c04:	push   rbx
  424c05:	mov    r15,rsi
  424c08:	mov    r14,rdi
  424c0b:	mov    edi,0x10
  424c10:	call   432070 <strcmp@plt+0x2e8e8>
  424c15:	mov    rbx,rax
  424c18:	xor    eax,eax
  424c1a:	call   422f90 <strcmp@plt+0x1f808>
  424c1f:	mov    QWORD PTR [rbx+0x8],rax
  424c23:	mov    QWORD PTR [r15],rbx
  424c26:	test   rbx,rbx
  424c29:	je     424c53 <strcmp@plt+0x214cb>
  424c2b:	mov    al,BYTE PTR [r14+0x5]
  424c2f:	mov    BYTE PTR [rbx+0x4],al
  424c32:	mov    eax,DWORD PTR [r14+0x8]
  424c36:	movbe  DWORD PTR [rbx],eax
  424c3a:	add    r14,0xc
  424c3e:	mov    rsi,QWORD PTR [rbx+0x8]
  424c42:	mov    rdi,r14
  424c45:	call   4238c0 <strcmp@plt+0x20138>
  424c4a:	add    eax,0xc
  424c4d:	pop    rbx
  424c4e:	pop    r14
  424c50:	pop    r15
  424c52:	ret    
  424c53:	lea    rdi,[rip+0x27748]        # 44c3a2 <strcmp@plt+0x48c1a>
  424c5a:	lea    rsi,[rip+0x24f1c]        # 449b7d <strcmp@plt+0x463f5>
  424c61:	lea    rcx,[rip+0x25732]        # 44a39a <strcmp@plt+0x46c12>
  424c68:	mov    edx,0x320
  424c6d:	call   4032b0 <__assert_fail@plt>
  424c72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424c7c:	nop    DWORD PTR [rax+0x0]
  424c80:	push   r15
  424c82:	push   r14
  424c84:	push   rbx
  424c85:	mov    r15,rsi
  424c88:	mov    r14,rdi
  424c8b:	mov    edi,0x1
  424c90:	mov    esi,0x18
  424c95:	call   4032d0 <calloc@plt>
  424c9a:	mov    rbx,rax
  424c9d:	xor    eax,eax
  424c9f:	call   422f90 <strcmp@plt+0x1f808>
  424ca4:	mov    QWORD PTR [rbx+0x10],rax
  424ca8:	mov    QWORD PTR [r15],rbx
  424cab:	test   rbx,rbx
  424cae:	je     424d0e <strcmp@plt+0x21586>
  424cb0:	movzx  ecx,WORD PTR [r14+0xa]
  424cb5:	movzx  edx,WORD PTR [r14+0x8]
  424cba:	mov    esi,edx
  424cbc:	and    esi,0x7fff
  424cc2:	shr    edx,0xf
  424cc5:	mov    BYTE PTR [rbx],dl
  424cc7:	mov    WORD PTR [rbx+0x2],si
  424ccb:	mov    WORD PTR [rbx+0x4],cx
  424ccf:	movzx  ecx,WORD PTR [r14+0xc]
  424cd4:	movzx  edx,WORD PTR [r14+0xe]
  424cd9:	mov    esi,ecx
  424cdb:	and    esi,0x7fff
  424ce1:	shr    ecx,0xf
  424ce4:	mov    BYTE PTR [rbx+0x6],cl
  424ce7:	mov    WORD PTR [rbx+0x8],si
  424ceb:	mov    WORD PTR [rbx+0xa],dx
  424cef:	mov    ecx,DWORD PTR [r14+0x10]
  424cf3:	mov    DWORD PTR [rbx+0xc],ecx
  424cf6:	add    r14,0x14
  424cfa:	mov    rdi,r14
  424cfd:	mov    rsi,rax
  424d00:	call   4238c0 <strcmp@plt+0x20138>
  424d05:	add    eax,0x14
  424d08:	pop    rbx
  424d09:	pop    r14
  424d0b:	pop    r15
  424d0d:	ret    
  424d0e:	lea    rdi,[rip+0x256f1]        # 44a406 <strcmp@plt+0x46c7e>
  424d15:	lea    rsi,[rip+0x24e61]        # 449b7d <strcmp@plt+0x463f5>
  424d1c:	lea    rcx,[rip+0x256e7]        # 44a40a <strcmp@plt+0x46c82>
  424d23:	mov    edx,0x3c2
  424d28:	call   4032b0 <__assert_fail@plt>
  424d2d:	nop    DWORD PTR [rax]
  424d30:	push   rbp
  424d31:	push   r15
  424d33:	push   r14
  424d35:	push   r13
  424d37:	push   r12
  424d39:	push   rbx
  424d3a:	push   rax
  424d3b:	mov    rbp,rsi
  424d3e:	mov    r12,rdi
  424d41:	mov    edi,0x30
  424d46:	call   432070 <strcmp@plt+0x2e8e8>
  424d4b:	mov    r14,rax
  424d4e:	xor    eax,eax
  424d50:	call   422f90 <strcmp@plt+0x1f808>
  424d55:	mov    QWORD PTR [r14+0x18],rax
  424d59:	xor    eax,eax
  424d5b:	call   422f90 <strcmp@plt+0x1f808>
  424d60:	mov    QWORD PTR [r14+0x8],rax
  424d64:	xor    eax,eax
  424d66:	call   422f90 <strcmp@plt+0x1f808>
  424d6b:	mov    QWORD PTR [r14+0x20],rax
  424d6f:	lea    rdi,[rip+0xffffffffffffe22a]        # 422fa0 <strcmp@plt+0x1f818>
  424d76:	call   42bc00 <strcmp@plt+0x28478>
  424d7b:	mov    QWORD PTR [r14+0x28],rax
  424d7f:	mov    QWORD PTR [rbp+0x0],r14
  424d83:	movbe  bx,WORD PTR [r12+0x6]
  424d8b:	movzx  eax,WORD PTR [r12+0x8]
  424d91:	mov    WORD PTR [r14+0x10],ax
  424d96:	movzx  eax,WORD PTR [r12+0xa]
  424d9c:	mov    WORD PTR [r14],ax
  424da0:	add    r12,0xc
  424da4:	mov    rsi,QWORD PTR [r14+0x8]
  424da8:	mov    rdi,r12
  424dab:	call   4238c0 <strcmp@plt+0x20138>
  424db0:	test   eax,eax
  424db2:	jle    424e33 <strcmp@plt+0x216ab>
  424db4:	mov    ebp,eax
  424db6:	cdqe   
  424db8:	add    r12,rax
  424dbb:	mov    rsi,QWORD PTR [r14+0x18]
  424dbf:	mov    rdi,r12
  424dc2:	call   4238c0 <strcmp@plt+0x20138>
  424dc7:	test   eax,eax
  424dc9:	jle    424e33 <strcmp@plt+0x216ab>
  424dcb:	mov    r15d,eax
  424dce:	cdqe   
  424dd0:	add    r12,rax
  424dd3:	mov    rsi,QWORD PTR [r14+0x20]
  424dd7:	mov    rdi,r12
  424dda:	call   4238c0 <strcmp@plt+0x20138>
  424ddf:	test   eax,eax
  424de1:	jle    424e33 <strcmp@plt+0x216ab>
  424de3:	movzx  r13d,bx
  424de7:	add    r13d,0x8
  424deb:	add    ebp,r15d
  424dee:	lea    ebp,[rax+rbp*1]
  424df1:	add    ebp,0xc
  424df4:	cmp    r13d,ebp
  424df7:	jle    424e61 <strcmp@plt+0x216d9>
  424df9:	cdqe   
  424dfb:	add    r12,rax
  424dfe:	xchg   ax,ax
  424e00:	xor    eax,eax
  424e02:	call   422f90 <strcmp@plt+0x1f808>
  424e07:	mov    rbx,rax
  424e0a:	mov    rdi,r12
  424e0d:	mov    rsi,rax
  424e10:	call   4238c0 <strcmp@plt+0x20138>
  424e15:	test   eax,eax
  424e17:	jle    424e33 <strcmp@plt+0x216ab>
  424e19:	add    ebp,eax
  424e1b:	cdqe   
  424e1d:	add    r12,rax
  424e20:	mov    rsi,QWORD PTR [r14+0x28]
  424e24:	mov    rdi,rbx
  424e27:	call   42be30 <strcmp@plt+0x286a8>
  424e2c:	cmp    r13d,ebp
  424e2f:	jg     424e00 <strcmp@plt+0x21678>
  424e31:	jmp    424e61 <strcmp@plt+0x216d9>
  424e33:	mov    rdi,QWORD PTR [r14+0x18]
  424e37:	call   422fa0 <strcmp@plt+0x1f818>
  424e3c:	mov    rdi,QWORD PTR [r14+0x8]
  424e40:	call   422fa0 <strcmp@plt+0x1f818>
  424e45:	mov    rdi,QWORD PTR [r14+0x20]
  424e49:	call   422fa0 <strcmp@plt+0x1f818>
  424e4e:	mov    rdi,QWORD PTR [r14+0x28]
  424e52:	call   42c250 <strcmp@plt+0x28ac8>
  424e57:	mov    rdi,r14
  424e5a:	call   403780 <free@plt>
  424e5f:	xor    ebp,ebp
  424e61:	mov    eax,ebp
  424e63:	add    rsp,0x8
  424e67:	pop    rbx
  424e68:	pop    r12
  424e6a:	pop    r13
  424e6c:	pop    r14
  424e6e:	pop    r15
  424e70:	pop    rbp
  424e71:	ret    
  424e72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424e7c:	nop    DWORD PTR [rax+0x0]
  424e80:	push   r15
  424e82:	push   r14
  424e84:	push   r12
  424e86:	push   rbx
  424e87:	push   rax
  424e88:	mov    r14,rsi
  424e8b:	mov    r15,rdi
  424e8e:	mov    edi,0x1
  424e93:	mov    esi,0x18
  424e98:	call   4032d0 <calloc@plt>
  424e9d:	mov    rbx,rax
  424ea0:	xor    eax,eax
  424ea2:	call   422f90 <strcmp@plt+0x1f808>
  424ea7:	mov    r12,rax
  424eaa:	mov    QWORD PTR [rbx+0x8],rax
  424eae:	xor    eax,eax
  424eb0:	call   422f90 <strcmp@plt+0x1f808>
  424eb5:	mov    QWORD PTR [rbx+0x10],rax
  424eb9:	mov    QWORD PTR [r14],rbx
  424ebc:	test   rbx,rbx
  424ebf:	je     424f14 <strcmp@plt+0x2178c>
  424ec1:	mov    eax,DWORD PTR [r15+0x8]
  424ec5:	movbe  DWORD PTR [rbx+0x4],eax
  424eca:	mov    al,BYTE PTR [r15+0xe]
  424ece:	mov    BYTE PTR [rbx],al
  424ed0:	mov    al,BYTE PTR [r15+0xf]
  424ed4:	mov    BYTE PTR [rbx+0x1],al
  424ed7:	add    r15,0x10
  424edb:	mov    rdi,r15
  424ede:	mov    rsi,r12
  424ee1:	call   4238c0 <strcmp@plt+0x20138>
  424ee6:	mov    ebx,eax
  424ee8:	mov    rax,QWORD PTR [r14]
  424eeb:	test   rax,rax
  424eee:	je     424f33 <strcmp@plt+0x217ab>
  424ef0:	movsxd rcx,ebx
  424ef3:	add    r15,rcx
  424ef6:	mov    rsi,QWORD PTR [rax+0x10]
  424efa:	mov    rdi,r15
  424efd:	call   4238c0 <strcmp@plt+0x20138>
  424f02:	lea    eax,[rbx+rax*1]
  424f05:	add    eax,0x10
  424f08:	add    rsp,0x8
  424f0c:	pop    rbx
  424f0d:	pop    r12
  424f0f:	pop    r14
  424f11:	pop    r15
  424f13:	ret    
  424f14:	lea    rdi,[rip+0x2504b]        # 449f66 <strcmp@plt+0x467de>
  424f1b:	lea    rsi,[rip+0x24c5b]        # 449b7d <strcmp@plt+0x463f5>
  424f22:	lea    rcx,[rip+0x25195]        # 44a0be <strcmp@plt+0x46936>
  424f29:	mov    edx,0x1d7
  424f2e:	call   4032b0 <__assert_fail@plt>
  424f33:	lea    rdi,[rip+0x2502c]        # 449f66 <strcmp@plt+0x467de>
  424f3a:	lea    rsi,[rip+0x24c3c]        # 449b7d <strcmp@plt+0x463f5>
  424f41:	lea    rcx,[rip+0x252c2]        # 44a20a <strcmp@plt+0x46a82>
  424f48:	mov    edx,0x23c
  424f4d:	call   4032b0 <__assert_fail@plt>
  424f52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424f5c:	nop    DWORD PTR [rax+0x0]
  424f60:	push   rbp
  424f61:	push   r15
  424f63:	push   r14
  424f65:	push   r12
  424f67:	push   rbx
  424f68:	mov    r14,rsi
  424f6b:	mov    rbx,rdi
  424f6e:	mov    edi,0x8
  424f73:	call   432070 <strcmp@plt+0x2e8e8>
  424f78:	mov    r15,rax
  424f7b:	lea    rdi,[rip+0x32ae]        # 428230 <strcmp@plt+0x24aa8>
  424f82:	call   42bc00 <strcmp@plt+0x28478>
  424f87:	mov    QWORD PTR [r15],rax
  424f8a:	mov    QWORD PTR [r14],r15
  424f8d:	movzx  eax,WORD PTR [rbx+0x6]
  424f91:	mov    ecx,eax
  424f93:	rol    cx,0x8
  424f97:	movzx  ebp,cx
  424f9a:	test   ax,ax
  424f9d:	je     425032 <strcmp@plt+0x218aa>
  424fa3:	add    rbx,0x8
  424fa7:	mov    r14d,0x8
  424fad:	nop    DWORD PTR [rax]
  424fb0:	mov    edi,0x1
  424fb5:	mov    esi,0x10
  424fba:	call   4032d0 <calloc@plt>
  424fbf:	mov    r12,rax
  424fc2:	movzx  eax,BYTE PTR [rbx+0x1]
  424fc6:	shr    al,0x2
  424fc9:	and    al,0x1
  424fcb:	mov    BYTE PTR [r12],al
  424fcf:	movzx  ecx,BYTE PTR [rbx+0x1]
  424fd3:	and    cl,0x2
  424fd6:	or     cl,al
  424fd8:	mov    BYTE PTR [r12],cl
  424fdc:	movzx  eax,BYTE PTR [rbx+0x1]
  424fe0:	shl    al,0x2
  424fe3:	and    al,0x4
  424fe5:	or     al,cl
  424fe7:	mov    BYTE PTR [r12],al
  424feb:	add    rbx,0x2
  424fef:	xor    eax,eax
  424ff1:	call   422f90 <strcmp@plt+0x1f808>
  424ff6:	mov    QWORD PTR [r12+0x8],rax
  424ffb:	mov    rdi,rbx
  424ffe:	mov    rsi,rax
  425001:	call   4238c0 <strcmp@plt+0x20138>
  425006:	test   eax,eax
  425008:	jle    42505e <strcmp@plt+0x218d6>
  42500a:	movsxd rcx,eax
  42500d:	add    rbx,rcx
  425010:	add    ebp,0xfffffffe
  425013:	sub    ebp,eax
  425015:	lea    r14d,[r14+rax*1]
  425019:	add    r14d,0x2
  42501d:	mov    rsi,QWORD PTR [r15]
  425020:	mov    rdi,r12
  425023:	call   42be30 <strcmp@plt+0x286a8>
  425028:	test   ebp,ebp
  42502a:	jg     424fb0 <strcmp@plt+0x21828>
  42502c:	test   ebp,ebp
  42502e:	jne    42503c <strcmp@plt+0x218b4>
  425030:	jmp    425069 <strcmp@plt+0x218e1>
  425032:	mov    r14d,0x8
  425038:	test   ebp,ebp
  42503a:	je     425069 <strcmp@plt+0x218e1>
  42503c:	lea    rax,[rip+0x3fd6d]        # 464db0 <strcmp@plt+0x61628>
  425043:	mov    eax,DWORD PTR [rax]
  425045:	test   eax,eax
  425047:	jle    425069 <strcmp@plt+0x218e1>
  425049:	lea    rsi,[rip+0x2561d]        # 44a66d <strcmp@plt+0x46ee5>
  425050:	mov    edi,0x5
  425055:	xor    eax,eax
  425057:	call   42e800 <strcmp@plt+0x2b078>
  42505c:	jmp    425069 <strcmp@plt+0x218e1>
  42505e:	mov    rdi,QWORD PTR [r15]
  425061:	call   42c250 <strcmp@plt+0x28ac8>
  425066:	xor    r14d,r14d
  425069:	mov    eax,r14d
  42506c:	pop    rbx
  42506d:	pop    r12
  42506f:	pop    r14
  425071:	pop    r15
  425073:	pop    rbp
  425074:	ret    
  425075:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42507f:	nop
  425080:	push   rbp
  425081:	push   r15
  425083:	push   r14
  425085:	push   r12
  425087:	push   rbx
  425088:	mov    r14,rsi
  42508b:	mov    rbx,rdi
  42508e:	mov    edi,0x8
  425093:	call   432070 <strcmp@plt+0x2e8e8>
  425098:	mov    r15,rax
  42509b:	lea    rdi,[rip+0x332e]        # 4283d0 <strcmp@plt+0x24c48>
  4250a2:	call   42bc00 <strcmp@plt+0x28478>
  4250a7:	mov    QWORD PTR [r15],rax
  4250aa:	mov    QWORD PTR [r14],r15
  4250ad:	movzx  eax,WORD PTR [rbx+0x6]
  4250b1:	mov    ecx,eax
  4250b3:	rol    cx,0x8
  4250b7:	movzx  ebp,cx
  4250ba:	test   ax,ax
  4250bd:	je     42512c <strcmp@plt+0x219a4>
  4250bf:	add    rbx,0x8
  4250c3:	mov    r14d,0x8
  4250c9:	nop    DWORD PTR [rax+0x0]
  4250d0:	mov    edi,0x10
  4250d5:	call   432070 <strcmp@plt+0x2e8e8>
  4250da:	mov    r12,rax
  4250dd:	movzx  eax,BYTE PTR [rbx+0x3]
  4250e1:	mov    BYTE PTR [r12+0x8],al
  4250e6:	add    rbx,0x4
  4250ea:	xor    eax,eax
  4250ec:	call   422f90 <strcmp@plt+0x1f808>
  4250f1:	mov    QWORD PTR [r12],rax
  4250f5:	mov    rdi,rbx
  4250f8:	mov    rsi,rax
  4250fb:	call   4238c0 <strcmp@plt+0x20138>
  425100:	test   eax,eax
  425102:	jle    425158 <strcmp@plt+0x219d0>
  425104:	movsxd rcx,eax
  425107:	add    rbx,rcx
  42510a:	add    ebp,0xfffffffc
  42510d:	sub    ebp,eax
  42510f:	lea    r14d,[r14+rax*1]
  425113:	add    r14d,0x4
  425117:	mov    rsi,QWORD PTR [r15]
  42511a:	mov    rdi,r12
  42511d:	call   42be30 <strcmp@plt+0x286a8>
  425122:	test   ebp,ebp
  425124:	jg     4250d0 <strcmp@plt+0x21948>
  425126:	test   ebp,ebp
  425128:	jne    425136 <strcmp@plt+0x219ae>
  42512a:	jmp    425163 <strcmp@plt+0x219db>
  42512c:	mov    r14d,0x8
  425132:	test   ebp,ebp
  425134:	je     425163 <strcmp@plt+0x219db>
  425136:	lea    rax,[rip+0x3fc73]        # 464db0 <strcmp@plt+0x61628>
  42513d:	mov    eax,DWORD PTR [rax]
  42513f:	test   eax,eax
  425141:	jle    425163 <strcmp@plt+0x219db>
  425143:	lea    rsi,[rip+0x25553]        # 44a69d <strcmp@plt+0x46f15>
  42514a:	mov    edi,0x5
  42514f:	xor    eax,eax
  425151:	call   42e800 <strcmp@plt+0x2b078>
  425156:	jmp    425163 <strcmp@plt+0x219db>
  425158:	mov    rdi,QWORD PTR [r15]
  42515b:	call   42c250 <strcmp@plt+0x28ac8>
  425160:	xor    r14d,r14d
  425163:	mov    eax,r14d
  425166:	pop    rbx
  425167:	pop    r12
  425169:	pop    r14
  42516b:	pop    r15
  42516d:	pop    rbp
  42516e:	ret    
  42516f:	nop
  425170:	push   rbp
  425171:	push   r15
  425173:	push   r14
  425175:	push   r13
  425177:	push   r12
  425179:	push   rbx
  42517a:	push   rax
  42517b:	mov    eax,DWORD PTR [rip+0x4868b]        # 46d80c <strcmp@plt+0x6a084>
  425181:	lea    ecx,[rax+0x1]
  425184:	movsxd rcx,ecx
  425187:	imul   rcx,rcx,0x66666667
  42518e:	mov    rdx,rcx
  425191:	shr    rdx,0x3f
  425195:	sar    rcx,0x22
  425199:	add    ecx,edx
  42519b:	add    ecx,ecx
  42519d:	lea    ecx,[rcx+rcx*4]
  4251a0:	neg    ecx
  4251a2:	lea    eax,[rax+rcx*1]
  4251a5:	add    eax,0x1
  4251a8:	mov    DWORD PTR [rip+0x4865e],eax        # 46d80c <strcmp@plt+0x6a084>
  4251ae:	movsxd rcx,eax
  4251b1:	imul   rcx,rcx,0x1f4
  4251b8:	lea    r12,[rip+0x48071]        # 46d230 <strcmp@plt+0x69aa8>
  4251bf:	mov    BYTE PTR [rcx+r12*1],0x0
  4251c4:	mov    QWORD PTR [rsp],rdi
  4251c8:	mov    rdx,QWORD PTR [rdi]
  4251cb:	mov    r14,QWORD PTR [rdx+0x8]
  4251cf:	cmp    r14,rdx
  4251d2:	je     425253 <strcmp@plt+0x21acb>
  4251d4:	xor    r13d,r13d
  4251d7:	jmp    4251ea <strcmp@plt+0x21a62>
  4251d9:	nop    DWORD PTR [rax+0x0]
  4251e0:	add    r13d,0x1
  4251e4:	mov    eax,DWORD PTR [rip+0x48622]        # 46d80c <strcmp@plt+0x6a084>
  4251ea:	mov    rbx,QWORD PTR [r14+0x10]
  4251ee:	cdqe   
  4251f0:	imul   rbp,rax,0x1f4
  4251f7:	add    rbp,r12
  4251fa:	mov    rdi,rbp
  4251fd:	call   4031e0 <strlen@plt>
  425202:	add    rbp,rax
  425205:	mov    r15d,0x1f4
  42520b:	sub    r15,rax
  42520e:	mov    rdi,rbx
  425211:	call   423130 <strcmp@plt+0x1f9a8>
  425216:	mov    rbx,rax
  425219:	xor    eax,eax
  42521b:	mov    rdi,rbp
  42521e:	mov    rsi,r15
  425221:	lea    rdx,[rip+0x254a5]        # 44a6cd <strcmp@plt+0x46f45>
  425228:	mov    ecx,r13d
  42522b:	mov    r8,rbx
  42522e:	call   403620 <snprintf@plt>
  425233:	mov    r14,QWORD PTR [r14+0x8]
  425237:	mov    rax,QWORD PTR [rsp]
  42523b:	cmp    r14,QWORD PTR [rax]
  42523e:	jne    4251e0 <strcmp@plt+0x21a58>
  425240:	movsxd rax,DWORD PTR [rip+0x485c5]        # 46d80c <strcmp@plt+0x6a084>
  425247:	imul   rax,rax,0x1f4
  42524e:	add    r12,rax
  425251:	jmp    425256 <strcmp@plt+0x21ace>
  425253:	add    r12,rcx
  425256:	mov    rax,r12
  425259:	add    rsp,0x8
  42525d:	pop    rbx
  42525e:	pop    r12
  425260:	pop    r13
  425262:	pop    r14
  425264:	pop    r15
  425266:	pop    rbp
  425267:	ret    
  425268:	nop    DWORD PTR [rax+rax*1+0x0]
  425270:	push   rbp
  425271:	push   r15
  425273:	push   r14
  425275:	push   r12
  425277:	push   rbx
  425278:	mov    eax,DWORD PTR [rip+0x461f2]        # 46b470 <strcmp@plt+0x67ce8>
  42527e:	lea    ecx,[rax+0x1]
  425281:	mov    edx,0xcccccccd
  425286:	imul   rdx,rcx
  42528a:	shr    rdx,0x23
  42528e:	add    edx,edx
  425290:	lea    ecx,[rdx+rdx*4]
  425293:	neg    ecx
  425295:	lea    eax,[rax+rcx*1]
  425298:	add    eax,0x1
  42529b:	mov    DWORD PTR [rip+0x461cf],eax        # 46b470 <strcmp@plt+0x67ce8>
  4252a1:	lea    rbx,[rax+rax*2]
  4252a5:	shl    rbx,0x5
  4252a9:	lea    r12,[rip+0x45e00]        # 46b0b0 <strcmp@plt+0x67928>
  4252b0:	mov    BYTE PTR [rbx+r12*1],0x0
  4252b5:	test   rdi,rdi
  4252b8:	je     42530a <strcmp@plt+0x21b82>
  4252ba:	add    rbx,r12
  4252bd:	movzx  r15d,BYTE PTR [rdi+0x4]
  4252c2:	mov    r14d,DWORD PTR [rdi]
  4252c5:	mov    rdi,QWORD PTR [rdi+0x8]
  4252c9:	call   423130 <strcmp@plt+0x1f9a8>
  4252ce:	mov    rbp,rax
  4252d1:	lea    rdx,[rip+0x250eb]        # 44a3c3 <strcmp@plt+0x46c3b>
  4252d8:	mov    esi,0x60
  4252dd:	xor    eax,eax
  4252df:	mov    rdi,rbx
  4252e2:	mov    r8d,r15d
  4252e5:	mov    ecx,r14d
  4252e8:	mov    r9,rbp
  4252eb:	call   403620 <snprintf@plt>
  4252f0:	mov    eax,DWORD PTR [rip+0x4617a]        # 46b470 <strcmp@plt+0x67ce8>
  4252f6:	lea    rax,[rax+rax*2]
  4252fa:	shl    rax,0x5
  4252fe:	add    rax,r12
  425301:	pop    rbx
  425302:	pop    r12
  425304:	pop    r14
  425306:	pop    r15
  425308:	pop    rbp
  425309:	ret    
  42530a:	lea    rdi,[rip+0x27091]        # 44c3a2 <strcmp@plt+0x48c1a>
  425311:	lea    rsi,[rip+0x24865]        # 449b7d <strcmp@plt+0x463f5>
  425318:	lea    rcx,[rip+0x24fcc]        # 44a2eb <strcmp@plt+0x46b63>
  42531f:	mov    edx,0x303
  425324:	call   4032b0 <__assert_fail@plt>
  425329:	nop    DWORD PTR [rax+0x0]
  425330:	push   rbp
  425331:	push   r15
  425333:	push   r14
  425335:	push   r13
  425337:	push   r12
  425339:	push   rbx
  42533a:	push   rax
  42533b:	mov    eax,DWORD PTR [rip+0x464ff]        # 46b840 <strcmp@plt+0x680b8>
  425341:	lea    ecx,[rax+0x1]
  425344:	mov    edx,0xcccccccd
  425349:	imul   rdx,rcx
  42534d:	shr    rdx,0x23
  425351:	add    edx,edx
  425353:	lea    ecx,[rdx+rdx*4]
  425356:	neg    ecx
  425358:	lea    eax,[rax+rcx*1]
  42535b:	add    eax,0x1
  42535e:	mov    DWORD PTR [rip+0x464dc],eax        # 46b840 <strcmp@plt+0x680b8>
  425364:	lea    r14,[rax+rax*2]
  425368:	shl    r14,0x5
  42536c:	lea    r13,[rip+0x4610d]        # 46b480 <strcmp@plt+0x67cf8>
  425373:	mov    BYTE PTR [r14+r13*1],0x0
  425378:	test   rdi,rdi
  42537b:	je     42543f <strcmp@plt+0x21cb7>
  425381:	mov    rbx,rdi
  425384:	add    r14,r13
  425387:	mov    BYTE PTR [rip+0x464c2],0x0        # 46b850 <strcmp@plt+0x680c8>
  42538e:	lea    r15,[rip+0x464bb]        # 46b850 <strcmp@plt+0x680c8>
  425395:	movzx  ecx,BYTE PTR [rdi]
  425398:	movzx  r8d,WORD PTR [rdi+0x2]
  42539d:	movzx  r9d,BYTE PTR [rdi+0x4]
  4253a2:	movzx  eax,BYTE PTR [rdi+0x5]
  4253a6:	mov    DWORD PTR [rsp],eax
  4253a9:	lea    r12,[rip+0x25241]        # 44a5f1 <strcmp@plt+0x46e69>
  4253b0:	mov    esi,0x60
  4253b5:	xor    eax,eax
  4253b7:	mov    rdi,r15
  4253ba:	mov    rdx,r12
  4253bd:	call   403620 <snprintf@plt>
  4253c2:	mov    BYTE PTR [rip+0x46487],0x0        # 46b850 <strcmp@plt+0x680c8>
  4253c9:	movzx  ecx,BYTE PTR [rbx+0x6]
  4253cd:	movzx  r8d,WORD PTR [rbx+0x8]
  4253d2:	movzx  r9d,BYTE PTR [rbx+0xa]
  4253d7:	movzx  eax,BYTE PTR [rbx+0xb]
  4253db:	mov    DWORD PTR [rsp],eax
  4253de:	mov    esi,0x60
  4253e3:	xor    eax,eax
  4253e5:	mov    rdi,r15
  4253e8:	mov    rdx,r12
  4253eb:	call   403620 <snprintf@plt>
  4253f0:	mov    ebp,DWORD PTR [rbx+0xc]
  4253f3:	mov    rdi,QWORD PTR [rbx+0x10]
  4253f7:	call   423130 <strcmp@plt+0x1f9a8>
  4253fc:	mov    QWORD PTR [rsp],rax
  425400:	lea    rdx,[rip+0x251b4]        # 44a5bb <strcmp@plt+0x46e33>
  425407:	mov    esi,0x60
  42540c:	xor    eax,eax
  42540e:	mov    rdi,r14
  425411:	mov    r8,r15
  425414:	mov    rcx,r15
  425417:	mov    r9d,ebp
  42541a:	call   403620 <snprintf@plt>
  42541f:	mov    eax,DWORD PTR [rip+0x4641b]        # 46b840 <strcmp@plt+0x680b8>
  425425:	lea    rax,[rax+rax*2]
  425429:	shl    rax,0x5
  42542d:	add    rax,r13
  425430:	add    rsp,0x8
  425434:	pop    rbx
  425435:	pop    r12
  425437:	pop    r13
  425439:	pop    r14
  42543b:	pop    r15
  42543d:	pop    rbp
  42543e:	ret    
  42543f:	lea    rdi,[rip+0x24fc0]        # 44a406 <strcmp@plt+0x46c7e>
  425446:	lea    rsi,[rip+0x24730]        # 449b7d <strcmp@plt+0x463f5>
  42544d:	lea    rcx,[rip+0x250e8]        # 44a53c <strcmp@plt+0x46db4>
  425454:	mov    edx,0x3f2
  425459:	call   4032b0 <__assert_fail@plt>
  42545e:	xchg   ax,ax
  425460:	push   rbp
  425461:	push   r15
  425463:	push   r14
  425465:	push   r13
  425467:	push   r12
  425469:	push   rbx
  42546a:	sub    rsp,0x18
  42546e:	mov    r14,rdi
  425471:	mov    eax,DWORD PTR [rip+0x46dfd]        # 46c274 <strcmp@plt+0x68aec>
  425477:	lea    ecx,[rax+0x1]
  42547a:	mov    edx,0xcccccccd
  42547f:	imul   rdx,rcx
  425483:	shr    rdx,0x22
  425487:	lea    ecx,[rdx+rdx*4]
  42548a:	neg    ecx
  42548c:	lea    eax,[rax+rcx*1]
  42548f:	add    eax,0x1
  425492:	mov    DWORD PTR [rip+0x46ddc],eax        # 46c274 <strcmp@plt+0x68aec>
  425498:	imul   rax,rax,0x1f4
  42549f:	lea    r12,[rip+0x4640a]        # 46b8b0 <strcmp@plt+0x68128>
  4254a6:	lea    rcx,[r12+rax*1]
  4254aa:	mov    QWORD PTR [rsp+0x10],rcx
  4254af:	mov    BYTE PTR [rax+r12*1],0x0
  4254b4:	mov    rdi,QWORD PTR [rdi+0x8]
  4254b8:	call   423130 <strcmp@plt+0x1f9a8>
  4254bd:	mov    QWORD PTR [rsp+0x8],rax
  4254c2:	movzx  r13d,WORD PTR [r14]
  4254c6:	mov    rdi,QWORD PTR [r14+0x20]
  4254ca:	call   423130 <strcmp@plt+0x1f9a8>
  4254cf:	mov    r15,rax
  4254d2:	mov    rdi,QWORD PTR [r14+0x18]
  4254d6:	call   423130 <strcmp@plt+0x1f9a8>
  4254db:	mov    rbp,rax
  4254de:	movzx  ebx,WORD PTR [r14+0x10]
  4254e3:	lea    rdx,[rip+0x25147]        # 44a631 <strcmp@plt+0x46ea9>
  4254ea:	mov    esi,0x1f4
  4254ef:	mov    eax,0x0
  4254f4:	mov    rdi,QWORD PTR [rsp+0x10]
  4254f9:	mov    r8d,r13d
  4254fc:	mov    rcx,QWORD PTR [rsp+0x8]
  425501:	mov    r9,r15
  425504:	push   rbx
  425505:	push   rbp
  425506:	call   403620 <snprintf@plt>
  42550b:	add    rsp,0x10
  42550f:	mov    rax,QWORD PTR [r14+0x28]
  425513:	mov    r15,QWORD PTR [rax+0x8]
  425517:	cmp    r15,rax
  42551a:	je     425584 <strcmp@plt+0x21dfc>
  42551c:	mov    r13d,0x1
  425522:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42552c:	nop    DWORD PTR [rax+0x0]
  425530:	mov    eax,DWORD PTR [rip+0x46d3e]        # 46c274 <strcmp@plt+0x68aec>
  425536:	imul   rbx,rax,0x1f4
  42553d:	add    rbx,r12
  425540:	mov    rdi,rbx
  425543:	call   4031e0 <strlen@plt>
  425548:	add    rbx,rax
  42554b:	mov    ebp,0x1f4
  425550:	sub    rbp,rax
  425553:	mov    rdi,QWORD PTR [r15+0x10]
  425557:	call   423130 <strcmp@plt+0x1f9a8>
  42555c:	mov    r8,rax
  42555f:	xor    eax,eax
  425561:	mov    rdi,rbx
  425564:	mov    rsi,rbp
  425567:	lea    rdx,[rip+0x250f6]        # 44a664 <strcmp@plt+0x46edc>
  42556e:	mov    ecx,r13d
  425571:	call   403620 <snprintf@plt>
  425576:	mov    r15,QWORD PTR [r15+0x8]
  42557a:	add    r13d,0x1
  42557e:	cmp    r15,QWORD PTR [r14+0x28]
  425582:	jne    425530 <strcmp@plt+0x21da8>
  425584:	mov    eax,DWORD PTR [rip+0x46cea]        # 46c274 <strcmp@plt+0x68aec>
  42558a:	imul   rax,rax,0x1f4
  425591:	add    r12,rax
  425594:	mov    rax,r12
  425597:	add    rsp,0x18
  42559b:	pop    rbx
  42559c:	pop    r12
  42559e:	pop    r13
  4255a0:	pop    r14
  4255a2:	pop    r15
  4255a4:	pop    rbp
  4255a5:	ret    
  4255a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4255b0:	push   rbp
  4255b1:	push   r15
  4255b3:	push   r14
  4255b5:	push   r13
  4255b7:	push   r12
  4255b9:	push   rbx
  4255ba:	push   rax
  4255bb:	mov    eax,DWORD PTR [rip+0x45adf]        # 46b0a0 <strcmp@plt+0x67918>
  4255c1:	lea    ecx,[rax+0x1]
  4255c4:	mov    edx,0xcccccccd
  4255c9:	imul   rdx,rcx
  4255cd:	shr    rdx,0x23
  4255d1:	add    edx,edx
  4255d3:	lea    ecx,[rdx+rdx*4]
  4255d6:	neg    ecx
  4255d8:	lea    eax,[rax+rcx*1]
  4255db:	add    eax,0x1
  4255de:	mov    DWORD PTR [rip+0x45abc],eax        # 46b0a0 <strcmp@plt+0x67918>
  4255e4:	lea    rbx,[rax+rax*2]
  4255e8:	shl    rbx,0x5
  4255ec:	lea    r13,[rip+0x456ed]        # 46ace0 <strcmp@plt+0x67558>
  4255f3:	mov    BYTE PTR [rbx+r13*1],0x0
  4255f8:	test   rdi,rdi
  4255fb:	je     425665 <strcmp@plt+0x21edd>
  4255fd:	mov    r14,rdi
  425600:	add    rbx,r13
  425603:	mov    rdi,QWORD PTR [rdi+0x8]
  425607:	call   423130 <strcmp@plt+0x1f9a8>
  42560c:	mov    r15,rax
  42560f:	movzx  r12d,BYTE PTR [r14]
  425613:	mov    rdi,QWORD PTR [r14+0x10]
  425617:	call   423130 <strcmp@plt+0x1f9a8>
  42561c:	mov    rbp,rax
  42561f:	movzx  eax,BYTE PTR [r14]
  425623:	mov    DWORD PTR [rsp],eax
  425626:	lea    rdx,[rip+0x24c8d]        # 44a2ba <strcmp@plt+0x46b32>
  42562d:	mov    esi,0x60
  425632:	xor    eax,eax
  425634:	mov    rdi,rbx
  425637:	mov    r8d,r12d
  42563a:	mov    rcx,r15
  42563d:	mov    r9,rbp
  425640:	call   403620 <snprintf@plt>
  425645:	mov    eax,DWORD PTR [rip+0x45a55]        # 46b0a0 <strcmp@plt+0x67918>
  42564b:	lea    rax,[rax+rax*2]
  42564f:	shl    rax,0x5
  425653:	add    rax,r13
  425656:	add    rsp,0x8
  42565a:	pop    rbx
  42565b:	pop    r12
  42565d:	pop    r13
  42565f:	pop    r14
  425661:	pop    r15
  425663:	pop    rbp
  425664:	ret    
  425665:	lea    rdi,[rip+0x248fa]        # 449f66 <strcmp@plt+0x467de>
  42566c:	lea    rsi,[rip+0x2450a]        # 449b7d <strcmp@plt+0x463f5>
  425673:	lea    rcx,[rip+0x24b6b]        # 44a1e5 <strcmp@plt+0x46a5d>
  42567a:	mov    edx,0x235
  42567f:	call   4032b0 <__assert_fail@plt>
  425684:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42568e:	xchg   ax,ax
  425690:	push   rbp
  425691:	push   r15
  425693:	push   r14
  425695:	push   r13
  425697:	push   r12
  425699:	push   rbx
  42569a:	push   rax
  42569b:	mov    eax,DWORD PTR [rip+0x475a3]        # 46cc44 <strcmp@plt+0x694bc>
  4256a1:	lea    ecx,[rax+0x1]
  4256a4:	mov    edx,0xcccccccd
  4256a9:	imul   rdx,rcx
  4256ad:	shr    rdx,0x22
  4256b1:	lea    ecx,[rdx+rdx*4]
  4256b4:	neg    ecx
  4256b6:	lea    esi,[rax+rcx*1]
  4256b9:	add    esi,0x1
  4256bc:	mov    DWORD PTR [rip+0x47582],esi        # 46cc44 <strcmp@plt+0x694bc>
  4256c2:	imul   rcx,rsi,0x1f4
  4256c9:	lea    rax,[rip+0x46bb0]        # 46c280 <strcmp@plt+0x68af8>
  4256d0:	mov    BYTE PTR [rcx+rax*1+0x4],0x0
  4256d5:	mov    DWORD PTR [rcx+rax*1],0x3a504c45
  4256dc:	mov    rdx,QWORD PTR [rdi]
  4256df:	mov    r15,QWORD PTR [rdx+0x8]
  4256e3:	cmp    r15,rdx
  4256e6:	je     425768 <strcmp@plt+0x21fe0>
  4256ec:	mov    r12,rdi
  4256ef:	mov    r13d,0x1
  4256f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4256ff:	nop
  425700:	mov    r14,QWORD PTR [r15+0x10]
  425704:	mov    ecx,esi
  425706:	imul   rbx,rcx,0x1f4
  42570d:	add    rbx,rax
  425710:	mov    rdi,rbx
  425713:	call   4031e0 <strlen@plt>
  425718:	add    rbx,rax
  42571b:	mov    ebp,0x1f4
  425720:	sub    rbp,rax
  425723:	mov    rdi,QWORD PTR [r14+0x8]
  425727:	call   423130 <strcmp@plt+0x1f9a8>
  42572c:	mov    r8,rax
  42572f:	xor    eax,eax
  425731:	mov    rdi,rbx
  425734:	mov    rsi,rbp
  425737:	lea    rdx,[rip+0x24f26]        # 44a664 <strcmp@plt+0x46edc>
  42573e:	mov    ecx,r13d
  425741:	call   403620 <snprintf@plt>
  425746:	lea    rax,[rip+0x46b33]        # 46c280 <strcmp@plt+0x68af8>
  42574d:	mov    r15,QWORD PTR [r15+0x8]
  425751:	add    r13d,0x1
  425755:	mov    esi,DWORD PTR [rip+0x474e9]        # 46cc44 <strcmp@plt+0x694bc>
  42575b:	cmp    r15,QWORD PTR [r12]
  42575f:	jne    425700 <strcmp@plt+0x21f78>
  425761:	imul   rcx,rsi,0x1f4
  425768:	add    rax,rcx
  42576b:	add    rsp,0x8
  42576f:	pop    rbx
  425770:	pop    r12
  425772:	pop    r13
  425774:	pop    r14
  425776:	pop    r15
  425778:	pop    rbp
  425779:	ret    
  42577a:	nop    WORD PTR [rax+rax*1+0x0]
  425780:	push   rbp
  425781:	push   r15
  425783:	push   r14
  425785:	push   r13
  425787:	push   r12
  425789:	push   rbx
  42578a:	push   rax
  42578b:	mov    eax,DWORD PTR [rip+0x47a9b]        # 46d22c <strcmp@plt+0x69aa4>
  425791:	lea    ecx,[rax+0x1]
  425794:	mov    edx,0xcccccccd
  425799:	imul   rdx,rcx
  42579d:	shr    rdx,0x23
  4257a1:	add    edx,edx
  4257a3:	lea    ecx,[rdx+rdx*4]
  4257a6:	neg    ecx
  4257a8:	lea    esi,[rax+rcx*1]
  4257ab:	add    esi,0x1
  4257ae:	mov    DWORD PTR [rip+0x47a78],esi        # 46d22c <strcmp@plt+0x69aa4>
  4257b4:	imul   rcx,rsi,0x1f4
  4257bb:	lea    rax,[rip+0x4748e]        # 46cc50 <strcmp@plt+0x694c8>
  4257c2:	mov    BYTE PTR [rcx+rax*1+0x4],0x0
  4257c7:	mov    DWORD PTR [rcx+rax*1],0x3a454c52
  4257ce:	mov    rdx,QWORD PTR [rdi]
  4257d1:	mov    r14,QWORD PTR [rdx+0x8]
  4257d5:	cmp    r14,rdx
  4257d8:	je     42584d <strcmp@plt+0x220c5>
  4257da:	mov    r12,rdi
  4257dd:	nop    DWORD PTR [rax]
  4257e0:	mov    rbp,QWORD PTR [r14+0x10]
  4257e4:	mov    ecx,esi
  4257e6:	imul   rbx,rcx,0x1f4
  4257ed:	add    rbx,rax
  4257f0:	mov    rdi,rbx
  4257f3:	call   4031e0 <strlen@plt>
  4257f8:	add    rbx,rax
  4257fb:	mov    r13d,0x1f4
  425801:	sub    r13,rax
  425804:	movzx  r15d,BYTE PTR [rbp+0x8]
  425809:	mov    rdi,QWORD PTR [rbp+0x0]
  42580d:	call   423130 <strcmp@plt+0x1f9a8>
  425812:	mov    rbp,rax
  425815:	xor    eax,eax
  425817:	mov    rdi,rbx
  42581a:	mov    rsi,r13
  42581d:	lea    rdx,[rip+0x24e40]        # 44a664 <strcmp@plt+0x46edc>
  425824:	mov    ecx,r15d
  425827:	mov    r8,rbp
  42582a:	call   403620 <snprintf@plt>
  42582f:	lea    rax,[rip+0x4741a]        # 46cc50 <strcmp@plt+0x694c8>
  425836:	mov    r14,QWORD PTR [r14+0x8]
  42583a:	mov    esi,DWORD PTR [rip+0x479ec]        # 46d22c <strcmp@plt+0x69aa4>
  425840:	cmp    r14,QWORD PTR [r12]
  425844:	jne    4257e0 <strcmp@plt+0x22058>
  425846:	imul   rcx,rsi,0x1f4
  42584d:	add    rax,rcx
  425850:	add    rsp,0x8
  425854:	pop    rbx
  425855:	pop    r12
  425857:	pop    r13
  425859:	pop    r14
  42585b:	pop    r15
  42585d:	pop    rbp
  42585e:	ret    
  42585f:	nop
  425860:	push   r15
  425862:	push   r14
  425864:	push   r12
  425866:	push   rbx
  425867:	push   rax
  425868:	mov    r14,rdi
  42586b:	mov    WORD PTR [rdi],0x340
  425870:	mov    DWORD PTR [rdi+0x2],0x10000
  425877:	lea    r12,[rdi+0x8]
  42587b:	mov    rax,QWORD PTR [rsi]
  42587e:	mov    rbx,QWORD PTR [rax+0x8]
  425882:	cmp    rbx,rax
  425885:	je     4258ae <strcmp@plt+0x22126>
  425887:	mov    r15,rsi
  42588a:	nop    WORD PTR [rax+rax*1+0x0]
  425890:	mov    rsi,QWORD PTR [rbx+0x10]
  425894:	mov    rdi,r12
  425897:	call   423840 <strcmp@plt+0x200b8>
  42589c:	test   eax,eax
  42589e:	jle    4258c1 <strcmp@plt+0x22139>
  4258a0:	cdqe   
  4258a2:	add    r12,rax
  4258a5:	mov    rbx,QWORD PTR [rbx+0x8]
  4258a9:	cmp    rbx,QWORD PTR [r15]
  4258ac:	jne    425890 <strcmp@plt+0x22108>
  4258ae:	mov    eax,r12d
  4258b1:	sub    eax,r14d
  4258b4:	lea    ecx,[rax-0x8]
  4258b7:	movbe  WORD PTR [r12+0x6],cx
  4258bf:	jmp    4258c3 <strcmp@plt+0x2213b>
  4258c1:	xor    eax,eax
  4258c3:	add    rsp,0x8
  4258c7:	pop    rbx
  4258c8:	pop    r12
  4258ca:	pop    r14
  4258cc:	pop    r15
  4258ce:	ret    
  4258cf:	nop
  4258d0:	push   rbx
  4258d1:	mov    DWORD PTR [rdi],0x340
  4258d7:	mov    BYTE PTR [rdi+0x4],0x2
  4258db:	test   rsi,rsi
  4258de:	je     42590b <strcmp@plt+0x22183>
  4258e0:	mov    rbx,rdi
  4258e3:	mov    al,BYTE PTR [rsi+0x4]
  4258e6:	mov    BYTE PTR [rdi+0x5],al
  4258e9:	mov    eax,DWORD PTR [rsi]
  4258eb:	movbe  DWORD PTR [rdi+0x8],eax
  4258f0:	lea    rdi,[rdi+0xc]
  4258f4:	mov    rsi,QWORD PTR [rsi+0x8]
  4258f8:	call   423840 <strcmp@plt+0x200b8>
  4258fd:	lea    ecx,[rax+0x4]
  425900:	movbe  WORD PTR [rbx+0x6],cx
  425906:	add    eax,0xc
  425909:	pop    rbx
  42590a:	ret    
  42590b:	lea    rdi,[rip+0x26a90]        # 44c3a2 <strcmp@plt+0x48c1a>
  425912:	lea    rsi,[rip+0x24264]        # 449b7d <strcmp@plt+0x463f5>
  425919:	lea    rcx,[rip+0x249a8]        # 44a2c8 <strcmp@plt+0x46b40>
  425920:	mov    edx,0x2f6
  425925:	call   4032b0 <__assert_fail@plt>
  42592a:	nop    WORD PTR [rax+rax*1+0x0]
  425930:	push   rbp
  425931:	push   r15
  425933:	push   r14
  425935:	push   r13
  425937:	push   r12
  425939:	push   rbx
  42593a:	push   rax
  42593b:	mov    r15,rsi
  42593e:	mov    r14,rdi
  425941:	mov    WORD PTR [rdi],0x340
  425946:	mov    DWORD PTR [rdi+0x2],0x70000
  42594d:	movzx  eax,WORD PTR [rsi+0x10]
  425951:	movbe  WORD PTR [rdi+0x8],ax
  425957:	movzx  eax,WORD PTR [rsi]
  42595a:	movbe  WORD PTR [rdi+0xa],ax
  425960:	lea    rbp,[rdi+0xc]
  425964:	mov    rsi,QWORD PTR [rsi+0x8]
  425968:	mov    rdi,rbp
  42596b:	call   423840 <strcmp@plt+0x200b8>
  425970:	xor    ebx,ebx
  425972:	test   eax,eax
  425974:	je     425a05 <strcmp@plt+0x2227d>
  42597a:	mov    r12d,eax
  42597d:	mov    eax,eax
  42597f:	add    rbp,rax
  425982:	mov    rsi,QWORD PTR [r15+0x18]
  425986:	mov    rdi,rbp
  425989:	call   423840 <strcmp@plt+0x200b8>
  42598e:	test   eax,eax
  425990:	je     425a05 <strcmp@plt+0x2227d>
  425992:	mov    r13d,eax
  425995:	mov    eax,eax
  425997:	add    rbp,rax
  42599a:	mov    rsi,QWORD PTR [r15+0x20]
  42599e:	mov    rdi,rbp
  4259a1:	call   423840 <strcmp@plt+0x200b8>
  4259a6:	test   eax,eax
  4259a8:	je     425a05 <strcmp@plt+0x2227d>
  4259aa:	add    r12d,r13d
  4259ad:	lea    r12d,[rax+r12*1]
  4259b1:	add    r12d,0xc
  4259b5:	mov    rcx,QWORD PTR [r15+0x28]
  4259b9:	mov    rbx,QWORD PTR [rcx+0x8]
  4259bd:	cmp    rbx,rcx
  4259c0:	je     4259f2 <strcmp@plt+0x2226a>
  4259c2:	mov    eax,eax
  4259c4:	add    rbp,rax
  4259c7:	nop    WORD PTR [rax+rax*1+0x0]
  4259d0:	mov    rsi,QWORD PTR [rbx+0x10]
  4259d4:	mov    rdi,rbp
  4259d7:	call   423840 <strcmp@plt+0x200b8>
  4259dc:	test   eax,eax
  4259de:	je     425a03 <strcmp@plt+0x2227b>
  4259e0:	add    r12d,eax
  4259e3:	mov    eax,eax
  4259e5:	add    rbp,rax
  4259e8:	mov    rbx,QWORD PTR [rbx+0x8]
  4259ec:	cmp    rbx,QWORD PTR [r15+0x28]
  4259f0:	jne    4259d0 <strcmp@plt+0x22248>
  4259f2:	lea    eax,[r12-0x8]
  4259f7:	movbe  WORD PTR [r14+0x6],ax
  4259fe:	mov    ebx,r12d
  425a01:	jmp    425a05 <strcmp@plt+0x2227d>
  425a03:	xor    ebx,ebx
  425a05:	mov    eax,ebx
  425a07:	add    rsp,0x8
  425a0b:	pop    rbx
  425a0c:	pop    r12
  425a0e:	pop    r13
  425a10:	pop    r14
  425a12:	pop    r15
  425a14:	pop    rbp
  425a15:	ret    
  425a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425a20:	push   r15
  425a22:	push   r14
  425a24:	push   rbx
  425a25:	mov    WORD PTR [rdi],0x340
  425a2a:	mov    DWORD PTR [rdi+0x2],0x90000
  425a31:	test   rsi,rsi
  425a34:	je     425a90 <strcmp@plt+0x22308>
  425a36:	mov    r14,rsi
  425a39:	mov    rbx,rdi
  425a3c:	mov    eax,DWORD PTR [rsi+0x4]
  425a3f:	movbe  DWORD PTR [rdi+0x8],eax
  425a44:	mov    WORD PTR [rdi+0xc],0x0
  425a4a:	mov    al,BYTE PTR [rsi]
  425a4c:	mov    BYTE PTR [rdi+0xe],al
  425a4f:	mov    al,BYTE PTR [rsi+0x1]
  425a52:	mov    BYTE PTR [rdi+0xf],al
  425a55:	lea    rdi,[rdi+0x10]
  425a59:	mov    rsi,QWORD PTR [rsi+0x8]
  425a5d:	call   423840 <strcmp@plt+0x200b8>
  425a62:	mov    r15d,eax
  425a65:	cdqe   
  425a67:	lea    rdi,[rbx+rax*1]
  425a6b:	add    rdi,0x10
  425a6f:	mov    rsi,QWORD PTR [r14+0x10]
  425a73:	call   423840 <strcmp@plt+0x200b8>
  425a78:	lea    ecx,[rax+r15*1]
  425a7c:	add    ecx,0x8
  425a7f:	movbe  WORD PTR [rbx+0x6],cx
  425a85:	lea    eax,[rax+r15*1+0x10]
  425a8a:	pop    rbx
  425a8b:	pop    r14
  425a8d:	pop    r15
  425a8f:	ret    
  425a90:	lea    rdi,[rip+0x244cf]        # 449f66 <strcmp@plt+0x467de>
  425a97:	lea    rsi,[rip+0x240df]        # 449b7d <strcmp@plt+0x463f5>
  425a9e:	lea    rcx,[rip+0x247aa]        # 44a24f <strcmp@plt+0x46ac7>
  425aa5:	mov    edx,0x24a
  425aaa:	call   4032b0 <__assert_fail@plt>
  425aaf:	nop
  425ab0:	push   r15
  425ab2:	push   r14
  425ab4:	push   r13
  425ab6:	push   r12
  425ab8:	push   rbx
  425ab9:	mov    r14,rdi
  425abc:	mov    WORD PTR [rdi],0x340
  425ac1:	mov    DWORD PTR [rdi+0x2],0xa0000
  425ac8:	mov    rax,QWORD PTR [rsi]
  425acb:	mov    r13,QWORD PTR [rax+0x8]
  425acf:	cmp    r13,rax
  425ad2:	je     425b55 <strcmp@plt+0x223cd>
  425ad8:	mov    r15,rsi
  425adb:	lea    rbx,[r14+0x8]
  425adf:	mov    r12d,0x8
  425ae5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425aef:	nop
  425af0:	mov    rsi,QWORD PTR [r13+0x10]
  425af4:	movzx  ecx,BYTE PTR [rsi]
  425af7:	movzx  edx,BYTE PTR [rbx+0x1]
  425afb:	shl    cl,0x2
  425afe:	and    cl,0x4
  425b01:	and    dl,0xfb
  425b04:	or     dl,cl
  425b06:	mov    BYTE PTR [rbx+0x1],dl
  425b09:	movzx  eax,BYTE PTR [rsi]
  425b0c:	and    al,0x2
  425b0e:	and    dl,0xfd
  425b11:	or     dl,al
  425b13:	mov    BYTE PTR [rbx+0x1],dl
  425b16:	movzx  edx,BYTE PTR [rsi]
  425b19:	shr    dl,0x2
  425b1c:	and    dl,0x1
  425b1f:	or     al,cl
  425b21:	or     al,dl
  425b23:	mov    BYTE PTR [rbx],0x0
  425b26:	mov    BYTE PTR [rbx+0x1],al
  425b29:	add    rbx,0x2
  425b2d:	mov    rsi,QWORD PTR [rsi+0x8]
  425b31:	mov    rdi,rbx
  425b34:	call   423840 <strcmp@plt+0x200b8>
  425b39:	test   eax,eax
  425b3b:	je     425b69 <strcmp@plt+0x223e1>
  425b3d:	mov    ecx,eax
  425b3f:	add    rbx,rcx
  425b42:	lea    r12d,[r12+rax*1]
  425b46:	add    r12d,0x2
  425b4a:	mov    r13,QWORD PTR [r13+0x8]
  425b4e:	cmp    r13,QWORD PTR [r15]
  425b51:	jne    425af0 <strcmp@plt+0x22368>
  425b53:	jmp    425b5b <strcmp@plt+0x223d3>
  425b55:	mov    r12d,0x8
  425b5b:	lea    eax,[r12-0x8]
  425b60:	movbe  WORD PTR [r14+0x6],ax
  425b67:	jmp    425b6c <strcmp@plt+0x223e4>
  425b69:	xor    r12d,r12d
  425b6c:	mov    eax,r12d
  425b6f:	pop    rbx
  425b70:	pop    r12
  425b72:	pop    r13
  425b74:	pop    r14
  425b76:	pop    r15
  425b78:	ret    
  425b79:	nop    DWORD PTR [rax+0x0]
  425b80:	push   r15
  425b82:	push   r14
  425b84:	push   r13
  425b86:	push   r12
  425b88:	push   rbx
  425b89:	mov    r14,rdi
  425b8c:	mov    WORD PTR [rdi],0x340
  425b91:	mov    DWORD PTR [rdi+0x2],0xd0000
  425b98:	mov    rax,QWORD PTR [rsi]
  425b9b:	mov    r13,QWORD PTR [rax+0x8]
  425b9f:	cmp    r13,rax
  425ba2:	je     425bff <strcmp@plt+0x22477>
  425ba4:	mov    r15,rsi
  425ba7:	lea    rbx,[r14+0x8]
  425bab:	mov    r12d,0x8
  425bb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  425bc0:	mov    rax,QWORD PTR [r13+0x10]
  425bc4:	movzx  ecx,BYTE PTR [rax+0x8]
  425bc8:	mov    BYTE PTR [rbx+0x3],cl
  425bcb:	mov    BYTE PTR [rbx+0x2],0x0
  425bcf:	mov    WORD PTR [rbx],0x0
  425bd4:	add    rbx,0x4
  425bd8:	mov    rsi,QWORD PTR [rax]
  425bdb:	mov    rdi,rbx
  425bde:	call   423840 <strcmp@plt+0x200b8>
  425be3:	test   eax,eax
  425be5:	je     425c13 <strcmp@plt+0x2248b>
  425be7:	mov    ecx,eax
  425be9:	add    rbx,rcx
  425bec:	lea    r12d,[r12+rax*1]
  425bf0:	add    r12d,0x4
  425bf4:	mov    r13,QWORD PTR [r13+0x8]
  425bf8:	cmp    r13,QWORD PTR [r15]
  425bfb:	jne    425bc0 <strcmp@plt+0x22438>
  425bfd:	jmp    425c05 <strcmp@plt+0x2247d>
  425bff:	mov    r12d,0x8
  425c05:	lea    eax,[r12-0x8]
  425c0a:	movbe  WORD PTR [r14+0x6],ax
  425c11:	jmp    425c16 <strcmp@plt+0x2248e>
  425c13:	xor    r12d,r12d
  425c16:	mov    eax,r12d
  425c19:	pop    rbx
  425c1a:	pop    r12
  425c1c:	pop    r13
  425c1e:	pop    r14
  425c20:	pop    r15
  425c22:	ret    
  425c23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c2d:	nop    DWORD PTR [rax]
  425c30:	push   r15
  425c32:	push   r14
  425c34:	push   r12
  425c36:	push   rbx
  425c37:	push   rax
  425c38:	mov    r14,rsi
  425c3b:	mov    r12,rdi
  425c3e:	cmp    QWORD PTR [rdi],0x0
  425c42:	jne    425c64 <strcmp@plt+0x224dc>
  425c44:	mov    edi,0x8
  425c49:	call   432070 <strcmp@plt+0x2e8e8>
  425c4e:	mov    r15,rax
  425c51:	lea    rdi,[rip+0xffffffffffffd348]        # 422fa0 <strcmp@plt+0x1f818>
  425c58:	call   42bc00 <strcmp@plt+0x28478>
  425c5d:	mov    QWORD PTR [r15],rax
  425c60:	mov    QWORD PTR [r12],r15
  425c64:	mov    rax,QWORD PTR [r14]
  425c67:	mov    rbx,QWORD PTR [rax+0x8]
  425c6b:	cmp    rbx,rax
  425c6e:	je     425c91 <strcmp@plt+0x22509>
  425c70:	mov    rdi,QWORD PTR [rbx+0x10]
  425c74:	call   423740 <strcmp@plt+0x1ffb8>
  425c79:	mov    rcx,QWORD PTR [r12]
  425c7d:	mov    rsi,QWORD PTR [rcx]
  425c80:	mov    rdi,rax
  425c83:	call   42be30 <strcmp@plt+0x286a8>
  425c88:	mov    rbx,QWORD PTR [rbx+0x8]
  425c8c:	cmp    rbx,QWORD PTR [r14]
  425c8f:	jne    425c70 <strcmp@plt+0x224e8>
  425c91:	add    rsp,0x8
  425c95:	pop    rbx
  425c96:	pop    r12
  425c98:	pop    r14
  425c9a:	pop    r15
  425c9c:	ret    
  425c9d:	nop    DWORD PTR [rax]
  425ca0:	push   rbp
  425ca1:	push   r15
  425ca3:	push   r14
  425ca5:	push   r12
  425ca7:	push   rbx
  425ca8:	mov    rbx,rsi
  425cab:	mov    r14,rdi
  425cae:	mov    rax,QWORD PTR [rdi]
  425cb1:	test   rax,rax
  425cb4:	je     425cdc <strcmp@plt+0x22554>
  425cb6:	test   rbx,rbx
  425cb9:	je     425d20 <strcmp@plt+0x22598>
  425cbb:	mov    rdi,QWORD PTR [rax+0x8]
  425cbf:	mov    rsi,QWORD PTR [rbx+0x8]
  425cc3:	call   423560 <strcmp@plt+0x1fdd8>
  425cc8:	mov    rax,QWORD PTR [r14]
  425ccb:	test   rax,rax
  425cce:	je     425d3f <strcmp@plt+0x225b7>
  425cd0:	mov    ecx,DWORD PTR [rbx]
  425cd2:	mov    DWORD PTR [rax],ecx
  425cd4:	mov    cl,BYTE PTR [rbx+0x4]
  425cd7:	mov    BYTE PTR [rax+0x4],cl
  425cda:	jmp    425d17 <strcmp@plt+0x2258f>
  425cdc:	test   rbx,rbx
  425cdf:	je     425d5e <strcmp@plt+0x225d6>
  425ce1:	mov    ebp,DWORD PTR [rbx]
  425ce3:	mov    r15,QWORD PTR [rbx+0x8]
  425ce7:	mov    r12b,BYTE PTR [rbx+0x4]
  425ceb:	mov    edi,0x10
  425cf0:	call   432070 <strcmp@plt+0x2e8e8>
  425cf5:	mov    rbx,rax
  425cf8:	xor    eax,eax
  425cfa:	call   422f90 <strcmp@plt+0x1f808>
  425cff:	mov    QWORD PTR [rbx+0x8],rax
  425d03:	mov    DWORD PTR [rbx],ebp
  425d05:	mov    rdi,rax
  425d08:	mov    rsi,r15
  425d0b:	call   423560 <strcmp@plt+0x1fdd8>
  425d10:	mov    BYTE PTR [rbx+0x4],r12b
  425d14:	mov    QWORD PTR [r14],rbx
  425d17:	pop    rbx
  425d18:	pop    r12
  425d1a:	pop    r14
  425d1c:	pop    r15
  425d1e:	pop    rbp
  425d1f:	ret    
  425d20:	lea    rdi,[rip+0x2667b]        # 44c3a2 <strcmp@plt+0x48c1a>
  425d27:	lea    rsi,[rip+0x23e4f]        # 449b7d <strcmp@plt+0x463f5>
  425d2e:	lea    rcx,[rip+0x245d9]        # 44a30e <strcmp@plt+0x46b86>
  425d35:	mov    edx,0x30a
  425d3a:	call   4032b0 <__assert_fail@plt>
  425d3f:	lea    rdi,[rip+0x245ef]        # 44a335 <strcmp@plt+0x46bad>
  425d46:	lea    rsi,[rip+0x23e30]        # 449b7d <strcmp@plt+0x463f5>
  425d4d:	lea    rcx,[rip+0x245e6]        # 44a33a <strcmp@plt+0x46bb2>
  425d54:	mov    edx,0x311
  425d59:	call   4032b0 <__assert_fail@plt>
  425d5e:	lea    rdi,[rip+0x2663d]        # 44c3a2 <strcmp@plt+0x48c1a>
  425d65:	lea    rsi,[rip+0x23e11]        # 449b7d <strcmp@plt+0x463f5>
  425d6c:	lea    rcx,[rip+0x24578]        # 44a2eb <strcmp@plt+0x46b63>
  425d73:	mov    edx,0x303
  425d78:	call   4032b0 <__assert_fail@plt>
  425d7d:	nop    DWORD PTR [rax]
  425d80:	push   r15
  425d82:	push   r14
  425d84:	push   rbx
  425d85:	test   rsi,rsi
  425d88:	je     425e14 <strcmp@plt+0x2268c>
  425d8e:	mov    r14,rsi
  425d91:	mov    r15,rdi
  425d94:	mov    rbx,QWORD PTR [rdi]
  425d97:	test   rbx,rbx
  425d9a:	jne    425dc1 <strcmp@plt+0x22639>
  425d9c:	mov    edi,0x1
  425da1:	mov    esi,0x18
  425da6:	call   4032d0 <calloc@plt>
  425dab:	mov    rbx,rax
  425dae:	xor    eax,eax
  425db0:	call   422f90 <strcmp@plt+0x1f808>
  425db5:	mov    QWORD PTR [rbx+0x10],rax
  425db9:	mov    QWORD PTR [r15],rbx
  425dbc:	test   rbx,rbx
  425dbf:	je     425e33 <strcmp@plt+0x226ab>
  425dc1:	mov    al,BYTE PTR [r14]
  425dc4:	mov    BYTE PTR [rbx],al
  425dc6:	movzx  eax,WORD PTR [r14+0x2]
  425dcb:	mov    WORD PTR [rbx+0x2],ax
  425dcf:	mov    al,BYTE PTR [r14+0x4]
  425dd3:	mov    BYTE PTR [rbx+0x4],al
  425dd6:	mov    al,BYTE PTR [r14+0x5]
  425dda:	mov    BYTE PTR [rbx+0x5],al
  425ddd:	mov    al,BYTE PTR [r14+0x6]
  425de1:	mov    BYTE PTR [rbx+0x6],al
  425de4:	movzx  eax,WORD PTR [r14+0x8]
  425de9:	mov    WORD PTR [rbx+0x8],ax
  425ded:	mov    al,BYTE PTR [r14+0xa]
  425df1:	mov    BYTE PTR [rbx+0xa],al
  425df4:	mov    al,BYTE PTR [r14+0xb]
  425df8:	mov    BYTE PTR [rbx+0xb],al
  425dfb:	mov    eax,DWORD PTR [r14+0xc]
  425dff:	mov    DWORD PTR [rbx+0xc],eax
  425e02:	mov    rdi,QWORD PTR [rbx+0x10]
  425e06:	mov    rsi,QWORD PTR [r14+0x10]
  425e0a:	pop    rbx
  425e0b:	pop    r14
  425e0d:	pop    r15
  425e0f:	jmp    423560 <strcmp@plt+0x1fdd8>
  425e14:	lea    rdi,[rip+0x2400c]        # 449e27 <strcmp@plt+0x4669f>
  425e1b:	lea    rsi,[rip+0x23d5b]        # 449b7d <strcmp@plt+0x463f5>
  425e22:	lea    rcx,[rip+0x247e4]        # 44a60d <strcmp@plt+0x46e85>
  425e29:	mov    edx,0x43e
  425e2e:	call   4032b0 <__assert_fail@plt>
  425e33:	lea    rdi,[rip+0x245cc]        # 44a406 <strcmp@plt+0x46c7e>
  425e3a:	lea    rsi,[rip+0x23d3c]        # 449b7d <strcmp@plt+0x463f5>
  425e41:	lea    rcx,[rip+0x2464b]        # 44a493 <strcmp@plt+0x46d0b>
  425e48:	mov    edx,0x3d7
  425e4d:	call   4032b0 <__assert_fail@plt>
  425e52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425e5c:	nop    DWORD PTR [rax+0x0]
  425e60:	push   r15
  425e62:	push   r14
  425e64:	push   r12
  425e66:	push   rbx
  425e67:	push   rax
  425e68:	mov    r14,rsi
  425e6b:	mov    r12,QWORD PTR [rdi]
  425e6e:	test   r12,r12
  425e71:	jne    425ebb <strcmp@plt+0x22733>
  425e73:	mov    r15,rdi
  425e76:	mov    edi,0x30
  425e7b:	call   432070 <strcmp@plt+0x2e8e8>
  425e80:	mov    r12,rax
  425e83:	xor    eax,eax
  425e85:	call   422f90 <strcmp@plt+0x1f808>
  425e8a:	mov    QWORD PTR [r12+0x18],rax
  425e8f:	xor    eax,eax
  425e91:	call   422f90 <strcmp@plt+0x1f808>
  425e96:	mov    QWORD PTR [r12+0x8],rax
  425e9b:	xor    eax,eax
  425e9d:	call   422f90 <strcmp@plt+0x1f808>
  425ea2:	mov    QWORD PTR [r12+0x20],rax
  425ea7:	lea    rdi,[rip+0xffffffffffffd0f2]        # 422fa0 <strcmp@plt+0x1f818>
  425eae:	call   42bc00 <strcmp@plt+0x28478>
  425eb3:	mov    QWORD PTR [r12+0x28],rax
  425eb8:	mov    QWORD PTR [r15],r12
  425ebb:	movzx  eax,WORD PTR [r14]
  425ebf:	mov    WORD PTR [r12],ax
  425ec4:	movzx  eax,WORD PTR [r14+0x10]
  425ec9:	mov    WORD PTR [r12+0x10],ax
  425ecf:	mov    rdi,QWORD PTR [r12+0x8]
  425ed4:	mov    rsi,QWORD PTR [r14+0x8]
  425ed8:	call   423560 <strcmp@plt+0x1fdd8>
  425edd:	mov    rdi,QWORD PTR [r12+0x18]
  425ee2:	mov    rsi,QWORD PTR [r14+0x18]
  425ee6:	call   423560 <strcmp@plt+0x1fdd8>
  425eeb:	mov    rdi,QWORD PTR [r12+0x20]
  425ef0:	mov    rsi,QWORD PTR [r14+0x20]
  425ef4:	call   423560 <strcmp@plt+0x1fdd8>
  425ef9:	mov    rdi,QWORD PTR [r12+0x28]
  425efe:	call   42c1e0 <strcmp@plt+0x28a58>
  425f03:	mov    rax,QWORD PTR [r14+0x28]
  425f07:	mov    rbx,QWORD PTR [rax+0x8]
  425f0b:	cmp    rbx,rax
  425f0e:	je     425f30 <strcmp@plt+0x227a8>
  425f10:	mov    rdi,QWORD PTR [rbx+0x10]
  425f14:	call   423740 <strcmp@plt+0x1ffb8>
  425f19:	mov    rsi,QWORD PTR [r12+0x28]
  425f1e:	mov    rdi,rax
  425f21:	call   42bcf0 <strcmp@plt+0x28568>
  425f26:	mov    rbx,QWORD PTR [rbx+0x8]
  425f2a:	cmp    rbx,QWORD PTR [r14+0x28]
  425f2e:	jne    425f10 <strcmp@plt+0x22788>
  425f30:	add    rsp,0x8
  425f34:	pop    rbx
  425f35:	pop    r12
  425f37:	pop    r14
  425f39:	pop    r15
  425f3b:	ret    
  425f3c:	nop    DWORD PTR [rax+0x0]
  425f40:	push   r15
  425f42:	push   r14
  425f44:	push   rbx
  425f45:	mov    r15,rsi
  425f48:	mov    r14,rdi
  425f4b:	mov    rbx,QWORD PTR [rdi]
  425f4e:	test   rbx,rbx
  425f51:	jne    425f7e <strcmp@plt+0x227f6>
  425f53:	mov    edi,0x1
  425f58:	mov    esi,0x18
  425f5d:	call   4032d0 <calloc@plt>
  425f62:	mov    rbx,rax
  425f65:	xor    eax,eax
  425f67:	call   422f90 <strcmp@plt+0x1f808>
  425f6c:	mov    QWORD PTR [rbx+0x8],rax
  425f70:	xor    eax,eax
  425f72:	call   422f90 <strcmp@plt+0x1f808>
  425f77:	mov    QWORD PTR [rbx+0x10],rax
  425f7b:	mov    QWORD PTR [r14],rbx
  425f7e:	test   r15,r15
  425f81:	je     425fc2 <strcmp@plt+0x2283a>
  425f83:	test   rbx,rbx
  425f86:	je     425fe1 <strcmp@plt+0x22859>
  425f88:	mov    eax,DWORD PTR [r15+0x4]
  425f8c:	mov    DWORD PTR [rbx+0x4],eax
  425f8f:	mov    al,BYTE PTR [r15]
  425f92:	mov    BYTE PTR [rbx],al
  425f94:	mov    al,BYTE PTR [r15+0x1]
  425f98:	mov    BYTE PTR [rbx+0x1],al
  425f9b:	mov    rdi,QWORD PTR [rbx+0x8]
  425f9f:	mov    rsi,QWORD PTR [r15+0x8]
  425fa3:	call   423560 <strcmp@plt+0x1fdd8>
  425fa8:	mov    rax,QWORD PTR [r14]
  425fab:	test   rax,rax
  425fae:	je     426000 <strcmp@plt+0x22878>
  425fb0:	mov    rdi,QWORD PTR [rax+0x10]
  425fb4:	mov    rsi,QWORD PTR [r15+0x10]
  425fb8:	pop    rbx
  425fb9:	pop    r14
  425fbb:	pop    r15
  425fbd:	jmp    423560 <strcmp@plt+0x1fdd8>
  425fc2:	lea    rdi,[rip+0x23f9d]        # 449f66 <strcmp@plt+0x467de>
  425fc9:	lea    rsi,[rip+0x23bad]        # 449b7d <strcmp@plt+0x463f5>
  425fd0:	lea    rcx,[rip+0x24278]        # 44a24f <strcmp@plt+0x46ac7>
  425fd7:	mov    edx,0x24a
  425fdc:	call   4032b0 <__assert_fail@plt>
  425fe1:	lea    rdi,[rip+0x23f7e]        # 449f66 <strcmp@plt+0x467de>
  425fe8:	lea    rsi,[rip+0x23b8e]        # 449b7d <strcmp@plt+0x463f5>
  425fef:	lea    rcx,[rip+0x240c8]        # 44a0be <strcmp@plt+0x46936>
  425ff6:	mov    edx,0x1d7
  425ffb:	call   4032b0 <__assert_fail@plt>
  426000:	lea    rdi,[rip+0x23f5f]        # 449f66 <strcmp@plt+0x467de>
  426007:	lea    rsi,[rip+0x23b6f]        # 449b7d <strcmp@plt+0x463f5>
  42600e:	lea    rcx,[rip+0x241f5]        # 44a20a <strcmp@plt+0x46a82>
  426015:	mov    edx,0x23c
  42601a:	call   4032b0 <__assert_fail@plt>
  42601f:	nop
  426020:	push   r15
  426022:	push   r14
  426024:	push   r13
  426026:	push   r12
  426028:	push   rbx
  426029:	mov    r14,rsi
  42602c:	mov    r15,QWORD PTR [rdi]
  42602f:	test   r15,r15
  426032:	jne    426056 <strcmp@plt+0x228ce>
  426034:	mov    rbx,rdi
  426037:	mov    edi,0x8
  42603c:	call   432070 <strcmp@plt+0x2e8e8>
  426041:	mov    r15,rax
  426044:	lea    rdi,[rip+0x21e5]        # 428230 <strcmp@plt+0x24aa8>
  42604b:	call   42bc00 <strcmp@plt+0x28478>
  426050:	mov    QWORD PTR [r15],rax
  426053:	mov    QWORD PTR [rbx],r15
  426056:	mov    rax,QWORD PTR [r14]
  426059:	mov    r12,QWORD PTR [rax+0x8]
  42605d:	cmp    r12,rax
  426060:	je     4260d1 <strcmp@plt+0x22949>
  426062:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42606c:	nop    DWORD PTR [rax+0x0]
  426070:	mov    r13,QWORD PTR [r12+0x10]
  426075:	mov    edi,0x10
  42607a:	call   432070 <strcmp@plt+0x2e8e8>
  42607f:	mov    rbx,rax
  426082:	movzx  eax,BYTE PTR [r13+0x0]
  426087:	and    al,0x1
  426089:	movzx  ecx,BYTE PTR [rbx]
  42608c:	and    cl,0xfe
  42608f:	or     cl,al
  426091:	mov    BYTE PTR [rbx],cl
  426093:	movzx  eax,BYTE PTR [r13+0x0]
  426098:	and    al,0x2
  42609a:	and    cl,0xfd
  42609d:	or     cl,al
  42609f:	mov    BYTE PTR [rbx],cl
  4260a1:	movzx  eax,BYTE PTR [r13+0x0]
  4260a6:	and    al,0x4
  4260a8:	and    cl,0xfb
  4260ab:	or     cl,al
  4260ad:	mov    BYTE PTR [rbx],cl
  4260af:	mov    rdi,QWORD PTR [r13+0x8]
  4260b3:	call   423740 <strcmp@plt+0x1ffb8>
  4260b8:	mov    QWORD PTR [rbx+0x8],rax
  4260bc:	mov    rsi,QWORD PTR [r15]
  4260bf:	mov    rdi,rbx
  4260c2:	call   42be30 <strcmp@plt+0x286a8>
  4260c7:	mov    r12,QWORD PTR [r12+0x8]
  4260cc:	cmp    r12,QWORD PTR [r14]
  4260cf:	jne    426070 <strcmp@plt+0x228e8>
  4260d1:	pop    rbx
  4260d2:	pop    r12
  4260d4:	pop    r13
  4260d6:	pop    r14
  4260d8:	pop    r15
  4260da:	ret    
  4260db:	nop    DWORD PTR [rax+rax*1+0x0]
  4260e0:	push   r15
  4260e2:	push   r14
  4260e4:	push   r13
  4260e6:	push   r12
  4260e8:	push   rbx
  4260e9:	mov    r14,rsi
  4260ec:	mov    r12,QWORD PTR [rdi]
  4260ef:	test   r12,r12
  4260f2:	jne    426117 <strcmp@plt+0x2298f>
  4260f4:	mov    r15,rdi
  4260f7:	mov    edi,0x8
  4260fc:	call   432070 <strcmp@plt+0x2e8e8>
  426101:	mov    r12,rax
  426104:	lea    rdi,[rip+0x22c5]        # 4283d0 <strcmp@plt+0x24c48>
  42610b:	call   42bc00 <strcmp@plt+0x28478>
  426110:	mov    QWORD PTR [r12],rax
  426114:	mov    QWORD PTR [r15],r12
  426117:	mov    rax,QWORD PTR [r14]
  42611a:	mov    rbx,QWORD PTR [rax+0x8]
  42611e:	cmp    rbx,rax
  426121:	je     42616b <strcmp@plt+0x229e3>
  426123:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42612d:	nop    DWORD PTR [rax]
  426130:	mov    r13,QWORD PTR [rbx+0x10]
  426134:	mov    edi,0x10
  426139:	call   432070 <strcmp@plt+0x2e8e8>
  42613e:	mov    r15,rax
  426141:	movzx  eax,BYTE PTR [r13+0x8]
  426146:	mov    BYTE PTR [r15+0x8],al
  42614a:	mov    rdi,QWORD PTR [r13+0x0]
  42614e:	call   423740 <strcmp@plt+0x1ffb8>
  426153:	mov    QWORD PTR [r15],rax
  426156:	mov    rsi,QWORD PTR [r12]
  42615a:	mov    rdi,r15
  42615d:	call   42be30 <strcmp@plt+0x286a8>
  426162:	mov    rbx,QWORD PTR [rbx+0x8]
  426166:	cmp    rbx,QWORD PTR [r14]
  426169:	jne    426130 <strcmp@plt+0x229a8>
  42616b:	pop    rbx
  42616c:	pop    r12
  42616e:	pop    r13
  426170:	pop    r14
  426172:	pop    r15
  426174:	ret    
  426175:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42617f:	nop
  426180:	push   r15
  426182:	push   r14
  426184:	push   r12
  426186:	push   rbx
  426187:	push   rax
  426188:	mov    rax,QWORD PTR [rdi]
  42618b:	mov    rcx,QWORD PTR [rsi]
  42618e:	mov    edx,DWORD PTR [rcx+0x18]
  426191:	mov    r14d,0x1
  426197:	cmp    DWORD PTR [rax+0x18],edx
  42619a:	jg     4261e5 <strcmp@plt+0x22a5d>
  42619c:	mov    r14d,0x2
  4261a2:	jl     4261e5 <strcmp@plt+0x22a5d>
  4261a4:	mov    r15,rdi
  4261a7:	xor    r14d,r14d
  4261aa:	test   edx,edx
  4261ac:	je     4261b4 <strcmp@plt+0x22a2c>
  4261ae:	mov    r12,QWORD PTR [rcx+0x8]
  4261b2:	jmp    4261b7 <strcmp@plt+0x22a2f>
  4261b4:	xor    r12d,r12d
  4261b7:	mov    rbx,QWORD PTR [rax+0x8]
  4261bb:	cmp    rbx,rax
  4261be:	je     4261e5 <strcmp@plt+0x22a5d>
  4261c0:	mov    rdi,QWORD PTR [rbx+0x10]
  4261c4:	mov    rsi,QWORD PTR [r12+0x10]
  4261c9:	call   423970 <strcmp@plt+0x201e8>
  4261ce:	test   eax,eax
  4261d0:	jne    4261e2 <strcmp@plt+0x22a5a>
  4261d2:	mov    r12,QWORD PTR [r12+0x8]
  4261d7:	mov    rbx,QWORD PTR [rbx+0x8]
  4261db:	cmp    rbx,QWORD PTR [r15]
  4261de:	jne    4261c0 <strcmp@plt+0x22a38>
  4261e0:	jmp    4261e5 <strcmp@plt+0x22a5d>
  4261e2:	mov    r14d,eax
  4261e5:	mov    eax,r14d
  4261e8:	add    rsp,0x8
  4261ec:	pop    rbx
  4261ed:	pop    r12
  4261ef:	pop    r14
  4261f1:	pop    r15
  4261f3:	ret    
  4261f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4261fe:	xchg   ax,ax
  426200:	push   rax
  426201:	test   rdi,rdi
  426204:	je     42623b <strcmp@plt+0x22ab3>
  426206:	test   rsi,rsi
  426209:	je     42623b <strcmp@plt+0x22ab3>
  42620b:	mov    eax,DWORD PTR [rdi]
  42620d:	mov    ecx,DWORD PTR [rsi]
  42620f:	cmp    eax,ecx
  426211:	jne    42622b <strcmp@plt+0x22aa3>
  426213:	mov    al,BYTE PTR [rdi+0x4]
  426216:	mov    cl,BYTE PTR [rsi+0x4]
  426219:	cmp    al,cl
  42621b:	jne    42622f <strcmp@plt+0x22aa7>
  42621d:	mov    rdi,QWORD PTR [rdi+0x8]
  426221:	mov    rsi,QWORD PTR [rsi+0x8]
  426225:	pop    rax
  426226:	jmp    423970 <strcmp@plt+0x201e8>
  42622b:	cmp    ecx,eax
  42622d:	jmp    426231 <strcmp@plt+0x22aa9>
  42622f:	cmp    cl,al
  426231:	mov    eax,0x2
  426236:	sbb    eax,0x0
  426239:	pop    rcx
  42623a:	ret    
  42623b:	lea    rdi,[rip+0x26160]        # 44c3a2 <strcmp@plt+0x48c1a>
  426242:	lea    rsi,[rip+0x23934]        # 449b7d <strcmp@plt+0x463f5>
  426249:	lea    rcx,[rip+0x2409b]        # 44a2eb <strcmp@plt+0x46b63>
  426250:	mov    edx,0x303
  426255:	call   4032b0 <__assert_fail@plt>
  42625a:	nop    WORD PTR [rax+rax*1+0x0]
  426260:	push   r15
  426262:	push   r14
  426264:	push   r12
  426266:	push   rbx
  426267:	push   rax
  426268:	mov    r14,rsi
  42626b:	mov    rbx,rdi
  42626e:	mov    rdi,QWORD PTR [rdi+0x8]
  426272:	mov    rsi,QWORD PTR [rsi+0x8]
  426276:	call   423970 <strcmp@plt+0x201e8>
  42627b:	test   eax,eax
  42627d:	jne    42632e <strcmp@plt+0x22ba6>
  426283:	mov    rdi,QWORD PTR [rbx+0x20]
  426287:	mov    rsi,QWORD PTR [r14+0x20]
  42628b:	call   423970 <strcmp@plt+0x201e8>
  426290:	test   eax,eax
  426292:	jne    42632e <strcmp@plt+0x22ba6>
  426298:	mov    rdi,QWORD PTR [rbx+0x18]
  42629c:	mov    rsi,QWORD PTR [r14+0x18]
  4262a0:	call   423970 <strcmp@plt+0x201e8>
  4262a5:	test   eax,eax
  4262a7:	jne    42632e <strcmp@plt+0x22ba6>
  4262ad:	movzx  eax,WORD PTR [rbx]
  4262b0:	movzx  ecx,WORD PTR [r14]
  4262b4:	cmp    ax,cx
  4262b7:	jne    42630d <strcmp@plt+0x22b85>
  4262b9:	mov    rsi,QWORD PTR [rbx+0x28]
  4262bd:	mov    rax,QWORD PTR [r14+0x28]
  4262c1:	mov    eax,DWORD PTR [rax+0x18]
  4262c4:	cmp    DWORD PTR [rsi+0x18],eax
  4262c7:	jne    42631a <strcmp@plt+0x22b92>
  4262c9:	mov    r12,QWORD PTR [rsi+0x8]
  4262cd:	cmp    r12,rsi
  4262d0:	je     4262f8 <strcmp@plt+0x22b70>
  4262d2:	lea    r15,[rip+0xffffffffffffd697]        # 423970 <strcmp@plt+0x201e8>
  4262d9:	mov    rdi,QWORD PTR [r12+0x10]
  4262de:	mov    rdx,r15
  4262e1:	call   42bee0 <strcmp@plt+0x28758>
  4262e6:	test   al,al
  4262e8:	jne    426329 <strcmp@plt+0x22ba1>
  4262ea:	mov    r12,QWORD PTR [r12+0x8]
  4262ef:	mov    rsi,QWORD PTR [rbx+0x28]
  4262f3:	cmp    r12,rsi
  4262f6:	jne    4262d9 <strcmp@plt+0x22b51>
  4262f8:	movzx  ecx,WORD PTR [rbx+0x10]
  4262fc:	movzx  edx,WORD PTR [r14+0x10]
  426301:	xor    eax,eax
  426303:	cmp    cx,dx
  426306:	je     42632e <strcmp@plt+0x22ba6>
  426308:	cmp    dx,cx
  42630b:	jmp    426310 <strcmp@plt+0x22b88>
  42630d:	cmp    cx,ax
  426310:	mov    eax,0x2
  426315:	sbb    eax,0x0
  426318:	jmp    42632e <strcmp@plt+0x22ba6>
  42631a:	setg   al
  42631d:	movzx  ecx,al
  426320:	mov    eax,0x2
  426325:	sub    eax,ecx
  426327:	jmp    42632e <strcmp@plt+0x22ba6>
  426329:	mov    eax,0x1
  42632e:	add    rsp,0x8
  426332:	pop    rbx
  426333:	pop    r12
  426335:	pop    r14
  426337:	pop    r15
  426339:	ret    
  42633a:	nop    WORD PTR [rax+rax*1+0x0]
  426340:	push   r14
  426342:	push   rbx
  426343:	push   rax
  426344:	test   rdi,rdi
  426347:	je     42639f <strcmp@plt+0x22c17>
  426349:	mov    r14,rsi
  42634c:	test   rsi,rsi
  42634f:	je     42639f <strcmp@plt+0x22c17>
  426351:	mov    rbx,rdi
  426354:	mov    ecx,DWORD PTR [rdi+0x4]
  426357:	mov    eax,0xffffffff
  42635c:	cmp    ecx,DWORD PTR [r14+0x4]
  426360:	jne    426383 <strcmp@plt+0x22bfb>
  426362:	mov    cl,BYTE PTR [rbx]
  426364:	cmp    cl,BYTE PTR [r14]
  426367:	jne    426383 <strcmp@plt+0x22bfb>
  426369:	mov    cl,BYTE PTR [rbx+0x1]
  42636c:	cmp    cl,BYTE PTR [r14+0x1]
  426370:	jne    426383 <strcmp@plt+0x22bfb>
  426372:	mov    rdi,QWORD PTR [rbx+0x8]
  426376:	mov    rsi,QWORD PTR [r14+0x8]
  42637a:	call   423970 <strcmp@plt+0x201e8>
  42637f:	test   eax,eax
  426381:	je     42638b <strcmp@plt+0x22c03>
  426383:	add    rsp,0x8
  426387:	pop    rbx
  426388:	pop    r14
  42638a:	ret    
  42638b:	mov    rdi,QWORD PTR [rbx+0x10]
  42638f:	mov    rsi,QWORD PTR [r14+0x10]
  426393:	add    rsp,0x8
  426397:	pop    rbx
  426398:	pop    r14
  42639a:	jmp    423970 <strcmp@plt+0x201e8>
  42639f:	lea    rdi,[rip+0x23bc0]        # 449f66 <strcmp@plt+0x467de>
  4263a6:	lea    rsi,[rip+0x237d0]        # 449b7d <strcmp@plt+0x463f5>
  4263ad:	lea    rcx,[rip+0x23e9b]        # 44a24f <strcmp@plt+0x46ac7>
  4263b4:	mov    edx,0x24a
  4263b9:	call   4032b0 <__assert_fail@plt>
  4263be:	xchg   ax,ax
  4263c0:	push   rbp
  4263c1:	push   r15
  4263c3:	push   r14
  4263c5:	push   r13
  4263c7:	push   r12
  4263c9:	push   rbx
  4263ca:	push   rax
  4263cb:	mov    r15,rsi
  4263ce:	mov    r12,rdi
  4263d1:	mov    rdx,QWORD PTR [rdi]
  4263d4:	cmp    DWORD PTR [rdx+0x18],0x0
  4263d8:	je     4263e0 <strcmp@plt+0x22c58>
  4263da:	mov    r13,QWORD PTR [rdx+0x8]
  4263de:	jmp    4263e3 <strcmp@plt+0x22c5b>
  4263e0:	xor    r13d,r13d
  4263e3:	mov    rcx,QWORD PTR [r15]
  4263e6:	xor    eax,eax
  4263e8:	cmp    DWORD PTR [rcx+0x18],0x0
  4263ec:	je     42643a <strcmp@plt+0x22cb2>
  4263ee:	mov    rbx,QWORD PTR [rcx+0x8]
  4263f2:	cmp    r13,rdx
  4263f5:	je     426465 <strcmp@plt+0x22cdd>
  4263f7:	cmp    rbx,rcx
  4263fa:	je     426465 <strcmp@plt+0x22cdd>
  4263fc:	nop    DWORD PTR [rax+0x0]
  426400:	mov    rbp,QWORD PTR [r13+0x10]
  426404:	mov    r14,QWORD PTR [rbx+0x10]
  426408:	mov    rdi,QWORD PTR [rbp+0x8]
  42640c:	mov    rsi,QWORD PTR [r14+0x8]
  426410:	call   423970 <strcmp@plt+0x201e8>
  426415:	test   eax,eax
  426417:	jne    426443 <strcmp@plt+0x22cbb>
  426419:	movzx  eax,BYTE PTR [r14]
  42641d:	xor    al,BYTE PTR [rbp+0x0]
  426420:	test   al,0x7
  426422:	jne    426460 <strcmp@plt+0x22cd8>
  426424:	mov    r13,QWORD PTR [r13+0x0]
  426428:	cmp    r13,QWORD PTR [r12]
  42642c:	je     426436 <strcmp@plt+0x22cae>
  42642e:	mov    rbx,QWORD PTR [rbx]
  426431:	cmp    rbx,QWORD PTR [r15]
  426434:	jne    426400 <strcmp@plt+0x22c78>
  426436:	xor    eax,eax
  426438:	jmp    426465 <strcmp@plt+0x22cdd>
  42643a:	xor    ebx,ebx
  42643c:	cmp    r13,rdx
  42643f:	jne    4263f7 <strcmp@plt+0x22c6f>
  426441:	jmp    426465 <strcmp@plt+0x22cdd>
  426443:	jns    426465 <strcmp@plt+0x22cdd>
  426445:	mov    rdi,QWORD PTR [rbp+0x8]
  426449:	mov    rsi,QWORD PTR [r14+0x8]
  42644d:	add    rsp,0x8
  426451:	pop    rbx
  426452:	pop    r12
  426454:	pop    r13
  426456:	pop    r14
  426458:	pop    r15
  42645a:	pop    rbp
  42645b:	jmp    423a90 <strcmp@plt+0x20308>
  426460:	mov    eax,0x1
  426465:	add    rsp,0x8
  426469:	pop    rbx
  42646a:	pop    r12
  42646c:	pop    r13
  42646e:	pop    r14
  426470:	pop    r15
  426472:	pop    rbp
  426473:	ret    
  426474:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42647e:	xchg   ax,ax
  426480:	push   r15
  426482:	push   r14
  426484:	push   r13
  426486:	push   r12
  426488:	push   rbx
  426489:	mov    r15,rsi
  42648c:	mov    r12,rdi
  42648f:	mov    rax,QWORD PTR [rdi]
  426492:	cmp    DWORD PTR [rax+0x18],0x0
  426496:	je     42649e <strcmp@plt+0x22d16>
  426498:	mov    r13,QWORD PTR [rax+0x8]
  42649c:	jmp    4264a1 <strcmp@plt+0x22d19>
  42649e:	xor    r13d,r13d
  4264a1:	mov    rcx,QWORD PTR [r15]
  4264a4:	xor    r14d,r14d
  4264a7:	cmp    DWORD PTR [rcx+0x18],0x0
  4264ab:	je     4264f5 <strcmp@plt+0x22d6d>
  4264ad:	mov    rbx,QWORD PTR [rcx+0x8]
  4264b1:	cmp    r13,rax
  4264b4:	je     42650d <strcmp@plt+0x22d85>
  4264b6:	cmp    rbx,rcx
  4264b9:	je     42650d <strcmp@plt+0x22d85>
  4264bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4264c0:	mov    rax,QWORD PTR [r13+0x10]
  4264c4:	mov    rcx,QWORD PTR [rbx+0x10]
  4264c8:	movzx  edx,BYTE PTR [rcx+0x8]
  4264cc:	cmp    BYTE PTR [rax+0x8],dl
  4264cf:	jne    4264fe <strcmp@plt+0x22d76>
  4264d1:	mov    rdi,QWORD PTR [rax]
  4264d4:	mov    rsi,QWORD PTR [rcx]
  4264d7:	call   423970 <strcmp@plt+0x201e8>
  4264dc:	test   eax,eax
  4264de:	jne    42650a <strcmp@plt+0x22d82>
  4264e0:	mov    r13,QWORD PTR [r13+0x8]
  4264e4:	cmp    r13,QWORD PTR [r12]
  4264e8:	je     42650d <strcmp@plt+0x22d85>
  4264ea:	mov    rbx,QWORD PTR [rbx+0x8]
  4264ee:	cmp    rbx,QWORD PTR [r15]
  4264f1:	jne    4264c0 <strcmp@plt+0x22d38>
  4264f3:	jmp    42650d <strcmp@plt+0x22d85>
  4264f5:	xor    ebx,ebx
  4264f7:	cmp    r13,rax
  4264fa:	jne    4264b6 <strcmp@plt+0x22d2e>
  4264fc:	jmp    42650d <strcmp@plt+0x22d85>
  4264fe:	mov    r14d,0x2
  426504:	sbb    r14d,0x0
  426508:	jmp    42650d <strcmp@plt+0x22d85>
  42650a:	mov    r14d,eax
  42650d:	mov    eax,r14d
  426510:	pop    rbx
  426511:	pop    r12
  426513:	pop    r13
  426515:	pop    r14
  426517:	pop    r15
  426519:	ret    
  42651a:	nop    WORD PTR [rax+rax*1+0x0]
  426520:	push   rbp
  426521:	push   r14
  426523:	push   rbx
  426524:	mov    rax,QWORD PTR [rdi]
  426527:	mov    rbx,QWORD PTR [rax+0x8]
  42652b:	cmp    rbx,rax
  42652e:	je     426556 <strcmp@plt+0x22dce>
  426530:	mov    r14,rdi
  426533:	mov    ebp,0x8
  426538:	nop    DWORD PTR [rax+rax*1+0x0]
  426540:	mov    rdi,QWORD PTR [rbx+0x10]
  426544:	call   423040 <strcmp@plt+0x1f8b8>
  426549:	add    ebp,eax
  42654b:	mov    rbx,QWORD PTR [rbx+0x8]
  42654f:	cmp    rbx,QWORD PTR [r14]
  426552:	jne    426540 <strcmp@plt+0x22db8>
  426554:	jmp    42655b <strcmp@plt+0x22dd3>
  426556:	mov    ebp,0x8
  42655b:	mov    eax,ebp
  42655d:	pop    rbx
  42655e:	pop    r14
  426560:	pop    rbp
  426561:	ret    
  426562:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42656c:	nop    DWORD PTR [rax+0x0]
  426570:	push   rax
  426571:	test   rdi,rdi
  426574:	je     426584 <strcmp@plt+0x22dfc>
  426576:	mov    rdi,QWORD PTR [rdi+0x8]
  42657a:	call   423040 <strcmp@plt+0x1f8b8>
  42657f:	add    eax,0xc
  426582:	pop    rcx
  426583:	ret    
  426584:	lea    rdi,[rip+0x25e17]        # 44c3a2 <strcmp@plt+0x48c1a>
  42658b:	lea    rsi,[rip+0x235eb]        # 449b7d <strcmp@plt+0x463f5>
  426592:	lea    rcx,[rip+0x23d75]        # 44a30e <strcmp@plt+0x46b86>
  426599:	mov    edx,0x30a
  42659e:	call   4032b0 <__assert_fail@plt>
  4265a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4265ad:	nop    DWORD PTR [rax]
  4265b0:	push   rbp
  4265b1:	push   r15
  4265b3:	push   r14
  4265b5:	push   rbx
  4265b6:	push   rax
  4265b7:	mov    r15,rdi
  4265ba:	mov    rdi,QWORD PTR [rdi+0x8]
  4265be:	call   423040 <strcmp@plt+0x1f8b8>
  4265c3:	mov    r14d,eax
  4265c6:	mov    rdi,QWORD PTR [r15+0x18]
  4265ca:	call   423040 <strcmp@plt+0x1f8b8>
  4265cf:	mov    ebp,eax
  4265d1:	add    ebp,r14d
  4265d4:	mov    rdi,QWORD PTR [r15+0x20]
  4265d8:	call   423040 <strcmp@plt+0x1f8b8>
  4265dd:	lea    ebp,[rax+rbp*1]
  4265e0:	add    ebp,0xc
  4265e3:	mov    rax,QWORD PTR [r15+0x28]
  4265e7:	mov    rbx,QWORD PTR [rax+0x8]
  4265eb:	cmp    rbx,rax
  4265ee:	je     426605 <strcmp@plt+0x22e7d>
  4265f0:	mov    rdi,QWORD PTR [rbx+0x10]
  4265f4:	call   423040 <strcmp@plt+0x1f8b8>
  4265f9:	add    ebp,eax
  4265fb:	mov    rbx,QWORD PTR [rbx+0x8]
  4265ff:	cmp    rbx,QWORD PTR [r15+0x28]
  426603:	jne    4265f0 <strcmp@plt+0x22e68>
  426605:	mov    eax,ebp
  426607:	add    rsp,0x8
  42660b:	pop    rbx
  42660c:	pop    r14
  42660e:	pop    r15
  426610:	pop    rbp
  426611:	ret    
  426612:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42661c:	nop    DWORD PTR [rax+0x0]
  426620:	push   r14
  426622:	push   rbx
  426623:	push   rax
  426624:	test   rdi,rdi
  426627:	je     426650 <strcmp@plt+0x22ec8>
  426629:	mov    rbx,rdi
  42662c:	mov    rdi,QWORD PTR [rdi+0x8]
  426630:	call   423040 <strcmp@plt+0x1f8b8>
  426635:	mov    r14d,eax
  426638:	mov    rdi,QWORD PTR [rbx+0x10]
  42663c:	call   423040 <strcmp@plt+0x1f8b8>
  426641:	lea    eax,[r14+rax*1]
  426645:	add    eax,0x10
  426648:	add    rsp,0x8
  42664c:	pop    rbx
  42664d:	pop    r14
  42664f:	ret    
  426650:	lea    rdi,[rip+0x2390f]        # 449f66 <strcmp@plt+0x467de>
  426657:	lea    rsi,[rip+0x2351f]        # 449b7d <strcmp@plt+0x463f5>
  42665e:	lea    rcx,[rip+0x23b80]        # 44a1e5 <strcmp@plt+0x46a5d>
  426665:	mov    edx,0x235
  42666a:	call   4032b0 <__assert_fail@plt>
  42666f:	nop
  426670:	push   r15
  426672:	push   r14
  426674:	push   rbx
  426675:	mov    rax,QWORD PTR [rdi]
  426678:	mov    rbx,QWORD PTR [rax+0x8]
  42667c:	cmp    rbx,rax
  42667f:	je     4266b0 <strcmp@plt+0x22f28>
  426681:	mov    r14,rdi
  426684:	mov    r15d,0x8
  42668a:	nop    WORD PTR [rax+rax*1+0x0]
  426690:	mov    rax,QWORD PTR [rbx+0x10]
  426694:	mov    rdi,QWORD PTR [rax+0x8]
  426698:	call   423040 <strcmp@plt+0x1f8b8>
  42669d:	lea    r15d,[r15+rax*1]
  4266a1:	add    r15d,0x2
  4266a5:	mov    rbx,QWORD PTR [rbx+0x8]
  4266a9:	cmp    rbx,QWORD PTR [r14]
  4266ac:	jne    426690 <strcmp@plt+0x22f08>
  4266ae:	jmp    4266b6 <strcmp@plt+0x22f2e>
  4266b0:	mov    r15d,0x8
  4266b6:	mov    eax,r15d
  4266b9:	pop    rbx
  4266ba:	pop    r14
  4266bc:	pop    r15
  4266be:	ret    
  4266bf:	nop
  4266c0:	push   r15
  4266c2:	push   r14
  4266c4:	push   rbx
  4266c5:	mov    rax,QWORD PTR [rdi]
  4266c8:	mov    rbx,QWORD PTR [rax+0x8]
  4266cc:	cmp    rbx,rax
  4266cf:	je     4266ff <strcmp@plt+0x22f77>
  4266d1:	mov    r14,rdi
  4266d4:	mov    r15d,0x8
  4266da:	nop    WORD PTR [rax+rax*1+0x0]
  4266e0:	mov    rax,QWORD PTR [rbx+0x10]
  4266e4:	mov    rdi,QWORD PTR [rax]
  4266e7:	call   423040 <strcmp@plt+0x1f8b8>
  4266ec:	lea    r15d,[r15+rax*1]
  4266f0:	add    r15d,0x4
  4266f4:	mov    rbx,QWORD PTR [rbx+0x8]
  4266f8:	cmp    rbx,QWORD PTR [r14]
  4266fb:	jne    4266e0 <strcmp@plt+0x22f58>
  4266fd:	jmp    426705 <strcmp@plt+0x22f7d>
  4266ff:	mov    r15d,0x8
  426705:	mov    eax,r15d
  426708:	pop    rbx
  426709:	pop    r14
  42670b:	pop    r15
  42670d:	ret    
  42670e:	xchg   ax,ax
  426710:	push   r15
  426712:	push   r14
  426714:	push   rbx
  426715:	mov    rax,QWORD PTR [rdi]
  426718:	mov    rbx,QWORD PTR [rax+0x8]
  42671c:	cmp    rbx,rax
  42671f:	je     426749 <strcmp@plt+0x22fc1>
  426721:	mov    r15,rdi
  426724:	xor    r14d,r14d
  426727:	nop    WORD PTR [rax+rax*1+0x0]
  426730:	mov    rdi,QWORD PTR [rbx+0x10]
  426734:	call   4232e0 <strcmp@plt+0x1fb58>
  426739:	test   rax,rax
  42673c:	jne    42674e <strcmp@plt+0x22fc6>
  42673e:	mov    rbx,QWORD PTR [rbx+0x8]
  426742:	cmp    rbx,QWORD PTR [r15]
  426745:	jne    426730 <strcmp@plt+0x22fa8>
  426747:	jmp    426751 <strcmp@plt+0x22fc9>
  426749:	xor    r14d,r14d
  42674c:	jmp    426751 <strcmp@plt+0x22fc9>
  42674e:	mov    r14,rax
  426751:	mov    rax,r14
  426754:	pop    rbx
  426755:	pop    r14
  426757:	pop    r15
  426759:	ret    
  42675a:	nop    WORD PTR [rax+rax*1+0x0]
  426760:	mov    rdi,QWORD PTR [rdi+0x8]
  426764:	jmp    4232e0 <strcmp@plt+0x1fb58>
  426769:	nop    DWORD PTR [rax+0x0]
  426770:	mov    rdi,QWORD PTR [rdi+0x20]
  426774:	jmp    4232e0 <strcmp@plt+0x1fb58>
  426779:	nop    DWORD PTR [rax+0x0]
  426780:	test   rdi,rdi
  426783:	je     42678e <strcmp@plt+0x23006>
  426785:	mov    rdi,QWORD PTR [rdi+0x8]
  426789:	jmp    4232e0 <strcmp@plt+0x1fb58>
  42678e:	push   rax
  42678f:	lea    rdi,[rip+0x237d0]        # 449f66 <strcmp@plt+0x467de>
  426796:	lea    rsi,[rip+0x233e0]        # 449b7d <strcmp@plt+0x463f5>
  42679d:	lea    rcx,[rip+0x23a41]        # 44a1e5 <strcmp@plt+0x46a5d>
  4267a4:	mov    edx,0x235
  4267a9:	call   4032b0 <__assert_fail@plt>
  4267ae:	xchg   ax,ax
  4267b0:	mov    rax,QWORD PTR [rdi]
  4267b3:	mov    rax,QWORD PTR [rax]
  4267b6:	mov    rax,QWORD PTR [rax+0x10]
  4267ba:	test   rax,rax
  4267bd:	je     4267c8 <strcmp@plt+0x23040>
  4267bf:	mov    rdi,QWORD PTR [rax+0x8]
  4267c3:	jmp    4232e0 <strcmp@plt+0x1fb58>
  4267c8:	xor    eax,eax
  4267ca:	ret    
  4267cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4267d0:	push   r15
  4267d2:	push   r14
  4267d4:	push   rbx
  4267d5:	mov    rax,QWORD PTR [rdi]
  4267d8:	mov    rbx,QWORD PTR [rax+0x8]
  4267dc:	cmp    rbx,rax
  4267df:	je     426809 <strcmp@plt+0x23081>
  4267e1:	mov    r15,rdi
  4267e4:	xor    r14d,r14d
  4267e7:	nop    WORD PTR [rax+rax*1+0x0]
  4267f0:	mov    rdi,QWORD PTR [rbx+0x10]
  4267f4:	call   4230e0 <strcmp@plt+0x1f958>
  4267f9:	test   rax,rax
  4267fc:	jne    42680e <strcmp@plt+0x23086>
  4267fe:	mov    rbx,QWORD PTR [rbx+0x8]
  426802:	cmp    rbx,QWORD PTR [r15]
  426805:	jne    4267f0 <strcmp@plt+0x23068>
  426807:	jmp    426811 <strcmp@plt+0x23089>
  426809:	xor    r14d,r14d
  42680c:	jmp    426811 <strcmp@plt+0x23089>
  42680e:	mov    r14,rax
  426811:	mov    rax,r14
  426814:	pop    rbx
  426815:	pop    r14
  426817:	pop    r15
  426819:	ret    
  42681a:	nop    WORD PTR [rax+rax*1+0x0]
  426820:	mov    rdi,QWORD PTR [rdi+0x8]
  426824:	jmp    4230e0 <strcmp@plt+0x1f958>
  426829:	nop    DWORD PTR [rax+0x0]
  426830:	mov    rdi,QWORD PTR [rdi+0x20]
  426834:	jmp    4230e0 <strcmp@plt+0x1f958>
  426839:	nop    DWORD PTR [rax+0x0]
  426840:	test   rdi,rdi
  426843:	je     42684e <strcmp@plt+0x230c6>
  426845:	mov    rdi,QWORD PTR [rdi+0x8]
  426849:	jmp    4230e0 <strcmp@plt+0x1f958>
  42684e:	push   rax
  42684f:	lea    rdi,[rip+0x23710]        # 449f66 <strcmp@plt+0x467de>
  426856:	lea    rsi,[rip+0x23320]        # 449b7d <strcmp@plt+0x463f5>
  42685d:	lea    rcx,[rip+0x23981]        # 44a1e5 <strcmp@plt+0x46a5d>
  426864:	mov    edx,0x235
  426869:	call   4032b0 <__assert_fail@plt>
  42686e:	xchg   ax,ax
  426870:	mov    edi,0x10
  426875:	jmp    432070 <strcmp@plt+0x2e8e8>
  42687a:	nop    WORD PTR [rax+rax*1+0x0]
  426880:	push   rbp
  426881:	push   r14
  426883:	push   rbx
  426884:	mov    ebp,edi
  426886:	mov    edi,0x10
  42688b:	call   432070 <strcmp@plt+0x2e8e8>
  426890:	test   rax,rax
  426893:	je     4268ff <strcmp@plt+0x23177>
  426895:	mov    rbx,rax
  426898:	movzx  eax,bpl
  42689c:	mov    DWORD PTR [rbx],eax
  42689e:	cmp    al,0x9
  4268a0:	je     4268c5 <strcmp@plt+0x2313d>
  4268a2:	cmp    bpl,0x2
  4268a6:	jne    4268f7 <strcmp@plt+0x2316f>
  4268a8:	mov    edi,0x10
  4268ad:	call   432070 <strcmp@plt+0x2e8e8>
  4268b2:	mov    r14,rax
  4268b5:	xor    eax,eax
  4268b7:	call   422f90 <strcmp@plt+0x1f808>
  4268bc:	mov    rcx,r14
  4268bf:	add    rcx,0x8
  4268c3:	jmp    4268f0 <strcmp@plt+0x23168>
  4268c5:	mov    edi,0x1
  4268ca:	mov    esi,0x18
  4268cf:	call   4032d0 <calloc@plt>
  4268d4:	mov    r14,rax
  4268d7:	xor    eax,eax
  4268d9:	call   422f90 <strcmp@plt+0x1f808>
  4268de:	mov    QWORD PTR [r14+0x8],rax
  4268e2:	xor    eax,eax
  4268e4:	call   422f90 <strcmp@plt+0x1f808>
  4268e9:	mov    rcx,r14
  4268ec:	add    rcx,0x10
  4268f0:	mov    QWORD PTR [rcx],rax
  4268f3:	mov    QWORD PTR [rbx+0x8],r14
  4268f7:	mov    rax,rbx
  4268fa:	pop    rbx
  4268fb:	pop    r14
  4268fd:	pop    rbp
  4268fe:	ret    
  4268ff:	lea    rdi,[rip+0x23272]        # 449b78 <strcmp@plt+0x463f0>
  426906:	lea    rsi,[rip+0x23270]        # 449b7d <strcmp@plt+0x463f5>
  42690d:	lea    rcx,[rip+0x234a0]        # 449db4 <strcmp@plt+0x4662c>
  426914:	mov    edx,0x12a
  426919:	call   4032b0 <__assert_fail@plt>
  42691e:	xchg   ax,ax
  426920:	test   rdi,rdi
  426923:	je     42692c <strcmp@plt+0x231a4>
  426925:	movzx  eax,sil
  426929:	mov    DWORD PTR [rdi],eax
  42692b:	ret    
  42692c:	push   rax
  42692d:	lea    rdi,[rip+0x23244]        # 449b78 <strcmp@plt+0x463f0>
  426934:	lea    rsi,[rip+0x23242]        # 449b7d <strcmp@plt+0x463f5>
  42693b:	lea    rcx,[rip+0x23472]        # 449db4 <strcmp@plt+0x4662c>
  426942:	mov    edx,0x12a
  426947:	call   4032b0 <__assert_fail@plt>
  42694c:	nop    DWORD PTR [rax+0x0]
  426950:	mov    rax,rdi
  426953:	mov    rdi,QWORD PTR [rdi+0x8]
  426957:	test   rdi,rdi
  42695a:	je     426970 <strcmp@plt+0x231e8>
  42695c:	mov    eax,DWORD PTR [rax]
  42695e:	lea    rcx,[rip+0x3df5b]        # 4648c0 <strcmp@plt+0x61138>
  426965:	mov    rax,QWORD PTR [rcx+rax*8]
  426969:	test   rax,rax
  42696c:	je     426970 <strcmp@plt+0x231e8>
  42696e:	jmp    rax
  426970:	ret    
  426971:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42697b:	nop    DWORD PTR [rax+rax*1+0x0]
  426980:	push   rbx
  426981:	test   rdi,rdi
  426984:	je     4269ac <strcmp@plt+0x23224>
  426986:	mov    rbx,rdi
  426989:	mov    eax,DWORD PTR [rdi]
  42698b:	lea    rcx,[rip+0x3df2e]        # 4648c0 <strcmp@plt+0x61138>
  426992:	mov    rax,QWORD PTR [rcx+rax*8]
  426996:	test   rax,rax
  426999:	je     4269aa <strcmp@plt+0x23222>
  42699b:	mov    rdi,QWORD PTR [rbx+0x8]
  42699f:	call   rax
  4269a1:	mov    rdi,rbx
  4269a4:	pop    rbx
  4269a5:	jmp    403780 <free@plt>
  4269aa:	pop    rbx
  4269ab:	ret    
  4269ac:	lea    rdi,[rip+0x231c5]        # 449b78 <strcmp@plt+0x463f0>
  4269b3:	lea    rsi,[rip+0x231c3]        # 449b7d <strcmp@plt+0x463f5>
  4269ba:	lea    rcx,[rip+0x231d0]        # 449b91 <strcmp@plt+0x46409>
  4269c1:	mov    edx,0xa4
  4269c6:	call   4032b0 <__assert_fail@plt>
  4269cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4269d0:	push   r14
  4269d2:	push   rbx
  4269d3:	push   rax
  4269d4:	test   rsi,rsi
  4269d7:	je     426a90 <strcmp@plt+0x23308>
  4269dd:	mov    rbx,rsi
  4269e0:	mov    r14,rdi
  4269e3:	mov    rdi,QWORD PTR [rsi+0x8]
  4269e7:	test   rdi,rdi
  4269ea:	je     426a00 <strcmp@plt+0x23278>
  4269ec:	mov    eax,DWORD PTR [rbx]
  4269ee:	lea    rcx,[rip+0x3decb]        # 4648c0 <strcmp@plt+0x61138>
  4269f5:	mov    rax,QWORD PTR [rcx+rax*8]
  4269f9:	test   rax,rax
  4269fc:	je     426a00 <strcmp@plt+0x23278>
  4269fe:	call   rax
  426a00:	movzx  edx,BYTE PTR [r14+0x4]
  426a05:	mov    DWORD PTR [rbx],edx
  426a07:	lea    rax,[rip+0x3df32]        # 464940 <strcmp@plt+0x611b8>
  426a0e:	mov    rax,QWORD PTR [rax+rdx*8]
  426a12:	test   rax,rax
  426a15:	je     426a3e <strcmp@plt+0x232b6>
  426a17:	add    rbx,0x8
  426a1b:	mov    rdi,r14
  426a1e:	mov    rsi,rbx
  426a21:	call   rax
  426a23:	mov    ecx,eax
  426a25:	cdqe   
  426a27:	movbe  dx,WORD PTR [r14+0x6]
  426a2e:	movzx  edx,dx
  426a31:	lea    rsi,[rdx+0x8]
  426a35:	cmp    rsi,rax
  426a38:	jne    426a63 <strcmp@plt+0x232db>
  426a3a:	mov    ebx,ecx
  426a3c:	jmp    426a86 <strcmp@plt+0x232fe>
  426a3e:	lea    rax,[rip+0x3e36b]        # 464db0 <strcmp@plt+0x61628>
  426a45:	xor    ebx,ebx
  426a47:	cmp    DWORD PTR [rax],0x3
  426a4a:	jl     426a86 <strcmp@plt+0x232fe>
  426a4c:	lea    rsi,[rip+0x23160]        # 449bb3 <strcmp@plt+0x4642b>
  426a53:	xor    ebx,ebx
  426a55:	mov    edi,0x7
  426a5a:	xor    eax,eax
  426a5c:	call   42e800 <strcmp@plt+0x2b078>
  426a61:	jmp    426a86 <strcmp@plt+0x232fe>
  426a63:	lea    rax,[rip+0x3e346]        # 464db0 <strcmp@plt+0x61628>
  426a6a:	xor    ebx,ebx
  426a6c:	cmp    DWORD PTR [rax],0x3
  426a6f:	jl     426a86 <strcmp@plt+0x232fe>
  426a71:	lea    rsi,[rip+0x2316f]        # 449be7 <strcmp@plt+0x4645f>
  426a78:	xor    ebx,ebx
  426a7a:	mov    edi,0x7
  426a7f:	xor    eax,eax
  426a81:	call   42e800 <strcmp@plt+0x2b078>
  426a86:	mov    eax,ebx
  426a88:	add    rsp,0x8
  426a8c:	pop    rbx
  426a8d:	pop    r14
  426a8f:	ret    
  426a90:	lea    rdi,[rip+0x230e1]        # 449b78 <strcmp@plt+0x463f0>
  426a97:	lea    rsi,[rip+0x230df]        # 449b7d <strcmp@plt+0x463f5>
  426a9e:	lea    rcx,[rip+0x23ce9]        # 44a78e <strcmp@plt+0x47006>
  426aa5:	mov    edx,0x6f
  426aaa:	call   4032b0 <__assert_fail@plt>
  426aaf:	nop
  426ab0:	test   rdi,rdi
  426ab3:	je     426ab8 <strcmp@plt+0x23330>
  426ab5:	mov    eax,DWORD PTR [rdi]
  426ab7:	ret    
  426ab8:	push   rax
  426ab9:	lea    rdi,[rip+0x230b8]        # 449b78 <strcmp@plt+0x463f0>
  426ac0:	lea    rsi,[rip+0x230b6]        # 449b7d <strcmp@plt+0x463f5>
  426ac7:	lea    rcx,[rip+0x231c3]        # 449c91 <strcmp@plt+0x46509>
  426ace:	mov    edx,0xdb
  426ad3:	call   4032b0 <__assert_fail@plt>
  426ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  426ae0:	test   rdi,rdi
  426ae3:	je     426b05 <strcmp@plt+0x2337d>
  426ae5:	mov    eax,DWORD PTR [rdi]
  426ae7:	lea    rcx,[rip+0x3ded2]        # 4649c0 <strcmp@plt+0x61238>
  426aee:	mov    rax,QWORD PTR [rcx+rax*8]
  426af2:	test   rax,rax
  426af5:	je     426afd <strcmp@plt+0x23375>
  426af7:	mov    rdi,QWORD PTR [rdi+0x8]
  426afb:	jmp    rax
  426afd:	lea    rax,[rip+0x2317a]        # 449c7e <strcmp@plt+0x464f6>
  426b04:	ret    
  426b05:	push   rax
  426b06:	lea    rdi,[rip+0x2306b]        # 449b78 <strcmp@plt+0x463f0>
  426b0d:	lea    rsi,[rip+0x23069]        # 449b7d <strcmp@plt+0x463f5>
  426b14:	lea    rcx,[rip+0x2313c]        # 449c57 <strcmp@plt+0x464cf>
  426b1b:	mov    edx,0xd0
  426b20:	call   4032b0 <__assert_fail@plt>
  426b25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426b2f:	nop
  426b30:	test   rdi,rdi
  426b33:	je     426b3a <strcmp@plt+0x233b2>
  426b35:	mov    rax,QWORD PTR [rdi+0x8]
  426b39:	ret    
  426b3a:	push   rax
  426b3b:	lea    rdi,[rip+0x23036]        # 449b78 <strcmp@plt+0x463f0>
  426b42:	lea    rsi,[rip+0x23034]        # 449b7d <strcmp@plt+0x463f5>
  426b49:	lea    rcx,[rip+0x2320d]        # 449d5d <strcmp@plt+0x465d5>
  426b50:	mov    edx,0xfe
  426b55:	call   4032b0 <__assert_fail@plt>
  426b5a:	nop    WORD PTR [rax+rax*1+0x0]
  426b60:	test   rdi,rdi
  426b63:	je     426b6a <strcmp@plt+0x233e2>
  426b65:	mov    rax,QWORD PTR [rdi+0x8]
  426b69:	ret    
  426b6a:	push   rax
  426b6b:	lea    rdi,[rip+0x23006]        # 449b78 <strcmp@plt+0x463f0>
  426b72:	lea    rsi,[rip+0x23004]        # 449b7d <strcmp@plt+0x463f5>
  426b79:	lea    rcx,[rip+0x2313f]        # 449cbf <strcmp@plt+0x46537>
  426b80:	mov    edx,0xe2
  426b85:	call   4032b0 <__assert_fail@plt>
  426b8a:	nop    WORD PTR [rax+rax*1+0x0]
  426b90:	test   rdi,rdi
  426b93:	je     426b9a <strcmp@plt+0x23412>
  426b95:	mov    rax,QWORD PTR [rdi+0x8]
  426b99:	ret    
  426b9a:	push   rax
  426b9b:	lea    rdi,[rip+0x22fd6]        # 449b78 <strcmp@plt+0x463f0>
  426ba2:	lea    rsi,[rip+0x22fd4]        # 449b7d <strcmp@plt+0x463f5>
  426ba9:	lea    rcx,[rip+0x23135]        # 449ce5 <strcmp@plt+0x4655d>
  426bb0:	mov    edx,0xe9
  426bb5:	call   4032b0 <__assert_fail@plt>
  426bba:	nop    WORD PTR [rax+rax*1+0x0]
  426bc0:	test   rdi,rdi
  426bc3:	je     426bca <strcmp@plt+0x23442>
  426bc5:	mov    rax,QWORD PTR [rdi+0x8]
  426bc9:	ret    
  426bca:	push   rax
  426bcb:	lea    rdi,[rip+0x22fa6]        # 449b78 <strcmp@plt+0x463f0>
  426bd2:	lea    rsi,[rip+0x22fa4]        # 449b7d <strcmp@plt+0x463f5>
  426bd9:	lea    rcx,[rip+0x2312d]        # 449d0d <strcmp@plt+0x46585>
  426be0:	mov    edx,0xf0
  426be5:	call   4032b0 <__assert_fail@plt>
  426bea:	nop    WORD PTR [rax+rax*1+0x0]
  426bf0:	test   rdi,rdi
  426bf3:	je     426bfa <strcmp@plt+0x23472>
  426bf5:	mov    rax,QWORD PTR [rdi+0x8]
  426bf9:	ret    
  426bfa:	push   rax
  426bfb:	lea    rdi,[rip+0x22f76]        # 449b78 <strcmp@plt+0x463f0>
  426c02:	lea    rsi,[rip+0x22f74]        # 449b7d <strcmp@plt+0x463f5>
  426c09:	lea    rcx,[rip+0x23125]        # 449d35 <strcmp@plt+0x465ad>
  426c10:	mov    edx,0xf7
  426c15:	call   4032b0 <__assert_fail@plt>
  426c1a:	nop    WORD PTR [rax+rax*1+0x0]
  426c20:	test   rdi,rdi
  426c23:	je     426c2e <strcmp@plt+0x234a6>
  426c25:	xor    eax,eax
  426c27:	cmp    DWORD PTR [rdi],0x9
  426c2a:	sete   al
  426c2d:	ret    
  426c2e:	push   rax
  426c2f:	lea    rdi,[rip+0x22f42]        # 449b78 <strcmp@plt+0x463f0>
  426c36:	lea    rsi,[rip+0x22f40]        # 449b7d <strcmp@plt+0x463f5>
  426c3d:	lea    rcx,[rip+0x2304d]        # 449c91 <strcmp@plt+0x46509>
  426c44:	mov    edx,0xdb
  426c49:	call   4032b0 <__assert_fail@plt>
  426c4e:	xchg   ax,ax
  426c50:	test   rdi,rdi
  426c53:	je     426c5e <strcmp@plt+0x234d6>
  426c55:	xor    eax,eax
  426c57:	cmp    DWORD PTR [rdi],0x2
  426c5a:	sete   al
  426c5d:	ret    
  426c5e:	push   rax
  426c5f:	lea    rdi,[rip+0x22f12]        # 449b78 <strcmp@plt+0x463f0>
  426c66:	lea    rsi,[rip+0x22f10]        # 449b7d <strcmp@plt+0x463f5>
  426c6d:	lea    rcx,[rip+0x2301d]        # 449c91 <strcmp@plt+0x46509>
  426c74:	mov    edx,0xdb
  426c79:	call   4032b0 <__assert_fail@plt>
  426c7e:	xchg   ax,ax
  426c80:	push   rbp
  426c81:	push   r14
  426c83:	push   rbx
  426c84:	test   rdi,rdi
  426c87:	je     426ccb <strcmp@plt+0x23543>
  426c89:	mov    ebp,edx
  426c8b:	mov    r14,rsi
  426c8e:	mov    rbx,rdi
  426c91:	mov    rax,QWORD PTR [rdi+0x8]
  426c95:	test   rax,rax
  426c98:	je     426cb7 <strcmp@plt+0x2352f>
  426c9a:	mov    rdi,QWORD PTR [rax+0x8]
  426c9e:	test   rdi,rdi
  426ca1:	je     426cb7 <strcmp@plt+0x2352f>
  426ca3:	mov    eax,DWORD PTR [rax]
  426ca5:	lea    rcx,[rip+0x3dc14]        # 4648c0 <strcmp@plt+0x61138>
  426cac:	mov    rax,QWORD PTR [rcx+rax*8]
  426cb0:	test   rax,rax
  426cb3:	je     426cb7 <strcmp@plt+0x2352f>
  426cb5:	call   rax
  426cb7:	movzx  eax,bpl
  426cbb:	mov    DWORD PTR [rbx],eax
  426cbd:	test   r14,r14
  426cc0:	je     426cea <strcmp@plt+0x23562>
  426cc2:	mov    QWORD PTR [rbx+0x8],r14
  426cc6:	pop    rbx
  426cc7:	pop    r14
  426cc9:	pop    rbp
  426cca:	ret    
  426ccb:	lea    rdi,[rip+0x22ea6]        # 449b78 <strcmp@plt+0x463f0>
  426cd2:	lea    rsi,[rip+0x22ea4]        # 449b7d <strcmp@plt+0x463f5>
  426cd9:	lea    rcx,[rip+0x2307d]        # 449d5d <strcmp@plt+0x465d5>
  426ce0:	mov    edx,0xfe
  426ce5:	call   4032b0 <__assert_fail@plt>
  426cea:	lea    rdi,[rip+0x236a4]        # 44a395 <strcmp@plt+0x46c0d>
  426cf1:	lea    rsi,[rip+0x22e85]        # 449b7d <strcmp@plt+0x463f5>
  426cf8:	lea    rcx,[rip+0x23086]        # 449d85 <strcmp@plt+0x465fd>
  426cff:	mov    edx,0x124
  426d04:	call   4032b0 <__assert_fail@plt>
  426d09:	nop    DWORD PTR [rax+0x0]
  426d10:	push   rax
  426d11:	test   rdi,rdi
  426d14:	je     426d21 <strcmp@plt+0x23599>
  426d16:	test   rsi,rsi
  426d19:	je     426d40 <strcmp@plt+0x235b8>
  426d1b:	mov    QWORD PTR [rdi+0x8],rsi
  426d1f:	pop    rax
  426d20:	ret    
  426d21:	lea    rdi,[rip+0x22e50]        # 449b78 <strcmp@plt+0x463f0>
  426d28:	lea    rsi,[rip+0x22e4e]        # 449b7d <strcmp@plt+0x463f5>
  426d2f:	lea    rcx,[rip+0x2304f]        # 449d85 <strcmp@plt+0x465fd>
  426d36:	mov    edx,0x123
  426d3b:	call   4032b0 <__assert_fail@plt>
  426d40:	lea    rdi,[rip+0x2364e]        # 44a395 <strcmp@plt+0x46c0d>
  426d47:	lea    rsi,[rip+0x22e2f]        # 449b7d <strcmp@plt+0x463f5>
  426d4e:	lea    rcx,[rip+0x23030]        # 449d85 <strcmp@plt+0x465fd>
  426d55:	mov    edx,0x124
  426d5a:	call   4032b0 <__assert_fail@plt>
  426d5f:	nop
  426d60:	push   rax
  426d61:	test   rdi,rdi
  426d64:	je     426d96 <strcmp@plt+0x2360e>
  426d66:	mov    edx,DWORD PTR [rdi]
  426d68:	lea    rax,[rip+0x3de51]        # 464bc0 <strcmp@plt+0x61438>
  426d6f:	mov    rax,QWORD PTR [rax+rdx*8]
  426d73:	test   rax,rax
  426d76:	je     426d7f <strcmp@plt+0x235f7>
  426d78:	mov    rdi,QWORD PTR [rdi+0x8]
  426d7c:	pop    rcx
  426d7d:	jmp    rax
  426d7f:	lea    rsi,[rip+0x2305e]        # 449de4 <strcmp@plt+0x4665c>
  426d86:	mov    edi,0x3
  426d8b:	xor    eax,eax
  426d8d:	call   42e800 <strcmp@plt+0x2b078>
  426d92:	xor    eax,eax
  426d94:	pop    rcx
  426d95:	ret    
  426d96:	lea    rdi,[rip+0x22ddb]        # 449b78 <strcmp@plt+0x463f0>
  426d9d:	lea    rsi,[rip+0x22dd9]        # 449b7d <strcmp@plt+0x463f5>
  426da4:	lea    rcx,[rip+0x239be]        # 44a769 <strcmp@plt+0x46fe1>
  426dab:	mov    edx,0x6a
  426db0:	call   4032b0 <__assert_fail@plt>
  426db5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426dbf:	nop
  426dc0:	push   r15
  426dc2:	push   r14
  426dc4:	push   r12
  426dc6:	push   rbx
  426dc7:	push   rax
  426dc8:	test   rsi,rsi
  426dcb:	je     426e52 <strcmp@plt+0x236ca>
  426dd1:	mov    rbx,rsi
  426dd4:	mov    edx,DWORD PTR [rsi]
  426dd6:	lea    r12,[rip+0x3dce3]        # 464ac0 <strcmp@plt+0x61338>
  426ddd:	cmp    QWORD PTR [r12+rdx*8],0x0
  426de2:	je     426e2f <strcmp@plt+0x236a7>
  426de4:	mov    r14,rdi
  426de7:	test   rdi,rdi
  426dea:	je     426e71 <strcmp@plt+0x236e9>
  426df0:	lea    r15,[r14+0x8]
  426df4:	mov    rdi,QWORD PTR [r14+0x8]
  426df8:	test   rdi,rdi
  426dfb:	je     426e15 <strcmp@plt+0x2368d>
  426dfd:	mov    eax,DWORD PTR [r14]
  426e00:	lea    rcx,[rip+0x3dab9]        # 4648c0 <strcmp@plt+0x61138>
  426e07:	mov    rax,QWORD PTR [rcx+rax*8]
  426e0b:	test   rax,rax
  426e0e:	je     426e15 <strcmp@plt+0x2368d>
  426e10:	call   rax
  426e12:	movzx  edx,BYTE PTR [rbx]
  426e15:	movzx  eax,dl
  426e18:	mov    DWORD PTR [r14],eax
  426e1b:	mov    eax,DWORD PTR [rbx]
  426e1d:	mov    rsi,QWORD PTR [rbx+0x8]
  426e21:	mov    rdi,r15
  426e24:	call   QWORD PTR [r12+rax*8]
  426e28:	mov    ebx,0x1
  426e2d:	jmp    426e44 <strcmp@plt+0x236bc>
  426e2f:	lea    rsi,[rip+0x23026]        # 449e5c <strcmp@plt+0x466d4>
  426e36:	xor    ebx,ebx
  426e38:	mov    edi,0x3
  426e3d:	xor    eax,eax
  426e3f:	call   42e800 <strcmp@plt+0x2b078>
  426e44:	mov    eax,ebx
  426e46:	add    rsp,0x8
  426e4a:	pop    rbx
  426e4b:	pop    r12
  426e4d:	pop    r14
  426e4f:	pop    r15
  426e51:	ret    
  426e52:	lea    rdi,[rip+0x22fce]        # 449e27 <strcmp@plt+0x4669f>
  426e59:	lea    rsi,[rip+0x22d1d]        # 449b7d <strcmp@plt+0x463f5>
  426e60:	lea    rcx,[rip+0x22fc4]        # 449e2b <strcmp@plt+0x466a3>
  426e67:	mov    edx,0x13f
  426e6c:	call   4032b0 <__assert_fail@plt>
  426e71:	lea    rdi,[rip+0x22d00]        # 449b78 <strcmp@plt+0x463f0>
  426e78:	lea    rsi,[rip+0x22cfe]        # 449b7d <strcmp@plt+0x463f5>
  426e7f:	lea    rcx,[rip+0x23908]        # 44a78e <strcmp@plt+0x47006>
  426e86:	mov    edx,0x6f
  426e8b:	call   4032b0 <__assert_fail@plt>
  426e90:	push   rax
  426e91:	test   rsi,rsi
  426e94:	je     426ec6 <strcmp@plt+0x2373e>
  426e96:	mov    edx,DWORD PTR [rsi]
  426e98:	lea    rax,[rip+0x3dba1]        # 464a40 <strcmp@plt+0x612b8>
  426e9f:	mov    rax,QWORD PTR [rax+rdx*8]
  426ea3:	test   rax,rax
  426ea6:	je     426eaf <strcmp@plt+0x23727>
  426ea8:	mov    rsi,QWORD PTR [rsi+0x8]
  426eac:	pop    rcx
  426ead:	jmp    rax
  426eaf:	lea    rsi,[rip+0x23007]        # 449ebd <strcmp@plt+0x46735>
  426eb6:	mov    edi,0x3
  426ebb:	xor    eax,eax
  426ebd:	call   42e800 <strcmp@plt+0x2b078>
  426ec2:	xor    eax,eax
  426ec4:	pop    rcx
  426ec5:	ret    
  426ec6:	lea    rdi,[rip+0x22cab]        # 449b78 <strcmp@plt+0x463f0>
  426ecd:	lea    rsi,[rip+0x22ca9]        # 449b7d <strcmp@plt+0x463f5>
  426ed4:	lea    rcx,[rip+0x22fb7]        # 449e92 <strcmp@plt+0x4670a>
  426edb:	mov    edx,0x153
  426ee0:	call   4032b0 <__assert_fail@plt>
  426ee5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426eef:	nop
  426ef0:	push   rax
  426ef1:	test   rdi,rdi
  426ef4:	je     426f65 <strcmp@plt+0x237dd>
  426ef6:	test   rsi,rsi
  426ef9:	je     426f65 <strcmp@plt+0x237dd>
  426efb:	mov    edx,DWORD PTR [rdi]
  426efd:	mov    ecx,DWORD PTR [rsi]
  426eff:	cmp    edx,ecx
  426f01:	jne    426f1e <strcmp@plt+0x23796>
  426f03:	lea    rax,[rip+0x3dc36]        # 464b40 <strcmp@plt+0x613b8>
  426f0a:	mov    rax,QWORD PTR [rax+rdx*8]
  426f0e:	test   rax,rax
  426f11:	je     426f3f <strcmp@plt+0x237b7>
  426f13:	mov    rdi,QWORD PTR [rdi+0x8]
  426f17:	mov    rsi,QWORD PTR [rsi+0x8]
  426f1b:	pop    rcx
  426f1c:	jmp    rax
  426f1e:	lea    rax,[rip+0x3de8b]        # 464db0 <strcmp@plt+0x61628>
  426f25:	cmp    DWORD PTR [rax],0x0
  426f28:	jle    426f5e <strcmp@plt+0x237d6>
  426f2a:	lea    rsi,[rip+0x22fcb]        # 449efc <strcmp@plt+0x46774>
  426f31:	mov    edi,0x5
  426f36:	xor    eax,eax
  426f38:	call   42e800 <strcmp@plt+0x2b078>
  426f3d:	jmp    426f5e <strcmp@plt+0x237d6>
  426f3f:	lea    rax,[rip+0x3de6a]        # 464db0 <strcmp@plt+0x61628>
  426f46:	cmp    DWORD PTR [rax],0x0
  426f49:	jle    426f5e <strcmp@plt+0x237d6>
  426f4b:	lea    rsi,[rip+0x22fe5]        # 449f37 <strcmp@plt+0x467af>
  426f52:	mov    edi,0x5
  426f57:	xor    eax,eax
  426f59:	call   42e800 <strcmp@plt+0x2b078>
  426f5e:	mov    eax,0xffffffff
  426f63:	pop    rcx
  426f64:	ret    
  426f65:	lea    rdi,[rip+0x22c0c]        # 449b78 <strcmp@plt+0x463f0>
  426f6c:	lea    rsi,[rip+0x22c0a]        # 449b7d <strcmp@plt+0x463f5>
  426f73:	lea    rcx,[rip+0x22d17]        # 449c91 <strcmp@plt+0x46509>
  426f7a:	mov    edx,0xdb
  426f7f:	call   4032b0 <__assert_fail@plt>
  426f84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426f8e:	xchg   ax,ax
  426f90:	push   rax
  426f91:	test   rdi,rdi
  426f94:	je     426fdf <strcmp@plt+0x23857>
  426f96:	test   rsi,rsi
  426f99:	je     426fdf <strcmp@plt+0x23857>
  426f9b:	mov    eax,DWORD PTR [rdi]
  426f9d:	cmp    eax,DWORD PTR [rsi]
  426f9f:	jne    426fc3 <strcmp@plt+0x2383b>
  426fa1:	cmp    eax,0x9
  426fa4:	je     426fc7 <strcmp@plt+0x2383f>
  426fa6:	cmp    eax,0x2
  426fa9:	jne    426fdb <strcmp@plt+0x23853>
  426fab:	mov    rax,QWORD PTR [rdi+0x8]
  426faf:	test   rax,rax
  426fb2:	je     426ffe <strcmp@plt+0x23876>
  426fb4:	mov    rcx,QWORD PTR [rsi+0x8]
  426fb8:	test   rcx,rcx
  426fbb:	je     426ffe <strcmp@plt+0x23876>
  426fbd:	mov    eax,DWORD PTR [rax]
  426fbf:	cmp    eax,DWORD PTR [rcx]
  426fc1:	jmp    426fd6 <strcmp@plt+0x2384e>
  426fc3:	xor    eax,eax
  426fc5:	pop    rcx
  426fc6:	ret    
  426fc7:	mov    rax,QWORD PTR [rdi+0x8]
  426fcb:	test   rax,rax
  426fce:	je     42701d <strcmp@plt+0x23895>
  426fd0:	mov    eax,DWORD PTR [rax+0x4]
  426fd3:	cmp    eax,DWORD PTR [rsi+0x4]
  426fd6:	sete   al
  426fd9:	pop    rcx
  426fda:	ret    
  426fdb:	xor    eax,eax
  426fdd:	pop    rcx
  426fde:	ret    
  426fdf:	lea    rdi,[rip+0x22b92]        # 449b78 <strcmp@plt+0x463f0>
  426fe6:	lea    rsi,[rip+0x22b90]        # 449b7d <strcmp@plt+0x463f5>
  426fed:	lea    rcx,[rip+0x23775]        # 44a769 <strcmp@plt+0x46fe1>
  426ff4:	mov    edx,0x6a
  426ff9:	call   4032b0 <__assert_fail@plt>
  426ffe:	lea    rdi,[rip+0x2539d]        # 44c3a2 <strcmp@plt+0x48c1a>
  427005:	lea    rsi,[rip+0x22b71]        # 449b7d <strcmp@plt+0x463f5>
  42700c:	lea    rcx,[rip+0x232d8]        # 44a2eb <strcmp@plt+0x46b63>
  427013:	mov    edx,0x303
  427018:	call   4032b0 <__assert_fail@plt>
  42701d:	lea    rdi,[rip+0x22f42]        # 449f66 <strcmp@plt+0x467de>
  427024:	lea    rsi,[rip+0x22b52]        # 449b7d <strcmp@plt+0x463f5>
  42702b:	lea    rcx,[rip+0x2321d]        # 44a24f <strcmp@plt+0x46ac7>
  427032:	mov    edx,0x24a
  427037:	call   4032b0 <__assert_fail@plt>
  42703c:	nop    DWORD PTR [rax+0x0]
  427040:	push   rax
  427041:	test   rdi,rdi
  427044:	je     427053 <strcmp@plt+0x238cb>
  427046:	mov    rax,QWORD PTR [rdi+0x8]
  42704a:	test   rax,rax
  42704d:	je     427072 <strcmp@plt+0x238ea>
  42704f:	mov    eax,DWORD PTR [rax]
  427051:	pop    rcx
  427052:	ret    
  427053:	lea    rdi,[rip+0x22b1e]        # 449b78 <strcmp@plt+0x463f0>
  42705a:	lea    rsi,[rip+0x22b1c]        # 449b7d <strcmp@plt+0x463f5>
  427061:	lea    rcx,[rip+0x23726]        # 44a78e <strcmp@plt+0x47006>
  427068:	mov    edx,0x6f
  42706d:	call   4032b0 <__assert_fail@plt>
  427072:	lea    rdi,[rip+0x25329]        # 44c3a2 <strcmp@plt+0x48c1a>
  427079:	lea    rsi,[rip+0x22afd]        # 449b7d <strcmp@plt+0x463f5>
  427080:	lea    rcx,[rip+0x23264]        # 44a2eb <strcmp@plt+0x46b63>
  427087:	mov    edx,0x303
  42708c:	call   4032b0 <__assert_fail@plt>
  427091:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42709b:	nop    DWORD PTR [rax+rax*1+0x0]
  4270a0:	test   rdi,rdi
  4270a3:	je     4270a9 <strcmp@plt+0x23921>
  4270a5:	mov    eax,DWORD PTR [rdi+0x4]
  4270a8:	ret    
  4270a9:	push   rax
  4270aa:	lea    rdi,[rip+0x22eb5]        # 449f66 <strcmp@plt+0x467de>
  4270b1:	lea    rsi,[rip+0x22ac5]        # 449b7d <strcmp@plt+0x463f5>
  4270b8:	lea    rcx,[rip+0x23190]        # 44a24f <strcmp@plt+0x46ac7>
  4270bf:	mov    edx,0x24a
  4270c4:	call   4032b0 <__assert_fail@plt>
  4270c9:	nop    DWORD PTR [rax+0x0]
  4270d0:	push   rax
  4270d1:	test   rdi,rdi
  4270d4:	je     4270ee <strcmp@plt+0x23966>
  4270d6:	cmp    DWORD PTR [rdi],0x9
  4270d9:	jne    4270ea <strcmp@plt+0x23962>
  4270db:	mov    rax,QWORD PTR [rdi+0x8]
  4270df:	test   rax,rax
  4270e2:	je     42710d <strcmp@plt+0x23985>
  4270e4:	mov    rax,QWORD PTR [rax+0x8]
  4270e8:	pop    rcx
  4270e9:	ret    
  4270ea:	xor    eax,eax
  4270ec:	pop    rcx
  4270ed:	ret    
  4270ee:	lea    rdi,[rip+0x22e71]        # 449f66 <strcmp@plt+0x467de>
  4270f5:	lea    rsi,[rip+0x22a81]        # 449b7d <strcmp@plt+0x463f5>
  4270fc:	lea    rcx,[rip+0x22e66]        # 449f69 <strcmp@plt+0x467e1>
  427103:	mov    edx,0x185
  427108:	call   4032b0 <__assert_fail@plt>
  42710d:	lea    rdi,[rip+0x22e52]        # 449f66 <strcmp@plt+0x467de>
  427114:	lea    rsi,[rip+0x22a62]        # 449b7d <strcmp@plt+0x463f5>
  42711b:	lea    rcx,[rip+0x230c3]        # 44a1e5 <strcmp@plt+0x46a5d>
  427122:	mov    edx,0x235
  427127:	call   4032b0 <__assert_fail@plt>
  42712c:	nop    DWORD PTR [rax+0x0]
  427130:	test   rdi,rdi
  427133:	je     42713a <strcmp@plt+0x239b2>
  427135:	mov    rax,QWORD PTR [rdi+0x8]
  427139:	ret    
  42713a:	push   rax
  42713b:	lea    rdi,[rip+0x22e24]        # 449f66 <strcmp@plt+0x467de>
  427142:	lea    rsi,[rip+0x22a34]        # 449b7d <strcmp@plt+0x463f5>
  427149:	lea    rcx,[rip+0x23095]        # 44a1e5 <strcmp@plt+0x46a5d>
  427150:	mov    edx,0x235
  427155:	call   4032b0 <__assert_fail@plt>
  42715a:	nop    WORD PTR [rax+rax*1+0x0]
  427160:	push   rax
  427161:	test   rdi,rdi
  427164:	je     42717e <strcmp@plt+0x239f6>
  427166:	cmp    DWORD PTR [rdi],0x9
  427169:	jne    42717a <strcmp@plt+0x239f2>
  42716b:	mov    rax,QWORD PTR [rdi+0x8]
  42716f:	test   rax,rax
  427172:	je     42719d <strcmp@plt+0x23a15>
  427174:	mov    rax,QWORD PTR [rax+0x10]
  427178:	pop    rcx
  427179:	ret    
  42717a:	xor    eax,eax
  42717c:	pop    rcx
  42717d:	ret    
  42717e:	lea    rdi,[rip+0x22de1]        # 449f66 <strcmp@plt+0x467de>
  427185:	lea    rsi,[rip+0x229f1]        # 449b7d <strcmp@plt+0x463f5>
  42718c:	lea    rcx,[rip+0x22e02]        # 449f95 <strcmp@plt+0x4680d>
  427193:	mov    edx,0x18e
  427198:	call   4032b0 <__assert_fail@plt>
  42719d:	lea    rdi,[rip+0x22dc2]        # 449f66 <strcmp@plt+0x467de>
  4271a4:	lea    rsi,[rip+0x229d2]        # 449b7d <strcmp@plt+0x463f5>
  4271ab:	lea    rcx,[rip+0x23058]        # 44a20a <strcmp@plt+0x46a82>
  4271b2:	mov    edx,0x23c
  4271b7:	call   4032b0 <__assert_fail@plt>
  4271bc:	nop    DWORD PTR [rax+0x0]
  4271c0:	test   rdi,rdi
  4271c3:	je     4271ca <strcmp@plt+0x23a42>
  4271c5:	mov    rax,QWORD PTR [rdi+0x10]
  4271c9:	ret    
  4271ca:	push   rax
  4271cb:	lea    rdi,[rip+0x22d94]        # 449f66 <strcmp@plt+0x467de>
  4271d2:	lea    rsi,[rip+0x229a4]        # 449b7d <strcmp@plt+0x463f5>
  4271d9:	lea    rcx,[rip+0x2302a]        # 44a20a <strcmp@plt+0x46a82>
  4271e0:	mov    edx,0x23c
  4271e5:	call   4032b0 <__assert_fail@plt>
  4271ea:	nop    WORD PTR [rax+rax*1+0x0]
  4271f0:	push   rax
  4271f1:	test   rdi,rdi
  4271f4:	je     427204 <strcmp@plt+0x23a7c>
  4271f6:	mov    rax,QWORD PTR [rdi+0x8]
  4271fa:	test   rax,rax
  4271fd:	je     427223 <strcmp@plt+0x23a9b>
  4271ff:	mov    eax,DWORD PTR [rax+0x4]
  427202:	pop    rcx
  427203:	ret    
  427204:	lea    rdi,[rip+0x22d5b]        # 449f66 <strcmp@plt+0x467de>
  42720b:	lea    rsi,[rip+0x2296b]        # 449b7d <strcmp@plt+0x463f5>
  427212:	lea    rcx,[rip+0x22da8]        # 449fc1 <strcmp@plt+0x46839>
  427219:	mov    edx,0x197
  42721e:	call   4032b0 <__assert_fail@plt>
  427223:	lea    rdi,[rip+0x22d3c]        # 449f66 <strcmp@plt+0x467de>
  42722a:	lea    rsi,[rip+0x2294c]        # 449b7d <strcmp@plt+0x463f5>
  427231:	lea    rcx,[rip+0x23017]        # 44a24f <strcmp@plt+0x46ac7>
  427238:	mov    edx,0x24a
  42723d:	call   4032b0 <__assert_fail@plt>
  427242:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42724c:	nop    DWORD PTR [rax+0x0]
  427250:	push   rax
  427251:	test   rdi,rdi
  427254:	je     427263 <strcmp@plt+0x23adb>
  427256:	mov    rax,QWORD PTR [rdi+0x8]
  42725a:	test   rax,rax
  42725d:	je     427282 <strcmp@plt+0x23afa>
  42725f:	mov    al,BYTE PTR [rax]
  427261:	pop    rcx
  427262:	ret    
  427263:	lea    rdi,[rip+0x22cfc]        # 449f66 <strcmp@plt+0x467de>
  42726a:	lea    rsi,[rip+0x2290c]        # 449b7d <strcmp@plt+0x463f5>
  427271:	lea    rcx,[rip+0x22d71]        # 449fe9 <strcmp@plt+0x46861>
  427278:	mov    edx,0x19e
  42727d:	call   4032b0 <__assert_fail@plt>
  427282:	lea    rdi,[rip+0x22cdd]        # 449f66 <strcmp@plt+0x467de>
  427289:	lea    rsi,[rip+0x228ed]        # 449b7d <strcmp@plt+0x463f5>
  427290:	lea    rcx,[rip+0x22fd9]        # 44a270 <strcmp@plt+0x46ae8>
  427297:	mov    edx,0x251
  42729c:	call   4032b0 <__assert_fail@plt>
  4272a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4272ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4272b0:	test   rdi,rdi
  4272b3:	je     4272b8 <strcmp@plt+0x23b30>
  4272b5:	mov    al,BYTE PTR [rdi]
  4272b7:	ret    
  4272b8:	push   rax
  4272b9:	lea    rdi,[rip+0x22ca6]        # 449f66 <strcmp@plt+0x467de>
  4272c0:	lea    rsi,[rip+0x228b6]        # 449b7d <strcmp@plt+0x463f5>
  4272c7:	lea    rcx,[rip+0x22fa2]        # 44a270 <strcmp@plt+0x46ae8>
  4272ce:	mov    edx,0x251
  4272d3:	call   4032b0 <__assert_fail@plt>
  4272d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4272e0:	push   rax
  4272e1:	test   rdi,rdi
  4272e4:	je     4272f4 <strcmp@plt+0x23b6c>
  4272e6:	mov    rax,QWORD PTR [rdi+0x8]
  4272ea:	test   rax,rax
  4272ed:	je     427313 <strcmp@plt+0x23b8b>
  4272ef:	mov    al,BYTE PTR [rax+0x1]
  4272f2:	pop    rcx
  4272f3:	ret    
  4272f4:	lea    rdi,[rip+0x22c6b]        # 449f66 <strcmp@plt+0x467de>
  4272fb:	lea    rsi,[rip+0x2287b]        # 449b7d <strcmp@plt+0x463f5>
  427302:	lea    rcx,[rip+0x22d0c]        # 44a015 <strcmp@plt+0x4688d>
  427309:	mov    edx,0x1a5
  42730e:	call   4032b0 <__assert_fail@plt>
  427313:	lea    rdi,[rip+0x22c4c]        # 449f66 <strcmp@plt+0x467de>
  42731a:	lea    rsi,[rip+0x2285c]        # 449b7d <strcmp@plt+0x463f5>
  427321:	lea    rcx,[rip+0x22f6d]        # 44a295 <strcmp@plt+0x46b0d>
  427328:	mov    edx,0x258
  42732d:	call   4032b0 <__assert_fail@plt>
  427332:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42733c:	nop    DWORD PTR [rax+0x0]
  427340:	test   rdi,rdi
  427343:	je     427349 <strcmp@plt+0x23bc1>
  427345:	mov    al,BYTE PTR [rdi+0x1]
  427348:	ret    
  427349:	push   rax
  42734a:	lea    rdi,[rip+0x22c15]        # 449f66 <strcmp@plt+0x467de>
  427351:	lea    rsi,[rip+0x22825]        # 449b7d <strcmp@plt+0x463f5>
  427358:	lea    rcx,[rip+0x22f36]        # 44a295 <strcmp@plt+0x46b0d>
  42735f:	mov    edx,0x258
  427364:	call   4032b0 <__assert_fail@plt>
  427369:	nop    DWORD PTR [rax+0x0]
  427370:	push   rax
  427371:	test   rdi,rdi
  427374:	je     42738a <strcmp@plt+0x23c02>
  427376:	mov    rax,QWORD PTR [rdi+0x8]
  42737a:	test   rax,rax
  42737d:	je     4273a9 <strcmp@plt+0x23c21>
  42737f:	mov    rdi,QWORD PTR [rax+0x10]
  427383:	call   423200 <strcmp@plt+0x1fa78>
  427388:	pop    rcx
  427389:	ret    
  42738a:	lea    rdi,[rip+0x22bd5]        # 449f66 <strcmp@plt+0x467de>
  427391:	lea    rsi,[rip+0x227e5]        # 449b7d <strcmp@plt+0x463f5>
  427398:	lea    rcx,[rip+0x22ca2]        # 44a041 <strcmp@plt+0x468b9>
  42739f:	mov    edx,0x1ac
  4273a4:	call   4032b0 <__assert_fail@plt>
  4273a9:	lea    rdi,[rip+0x22bb6]        # 449f66 <strcmp@plt+0x467de>
  4273b0:	lea    rsi,[rip+0x227c6]        # 449b7d <strcmp@plt+0x463f5>
  4273b7:	lea    rcx,[rip+0x22e71]        # 44a22f <strcmp@plt+0x46aa7>
  4273be:	mov    edx,0x243
  4273c3:	call   4032b0 <__assert_fail@plt>
  4273c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4273d0:	push   rax
  4273d1:	test   rdi,rdi
  4273d4:	je     4273e1 <strcmp@plt+0x23c59>
  4273d6:	mov    rdi,QWORD PTR [rdi+0x10]
  4273da:	call   423200 <strcmp@plt+0x1fa78>
  4273df:	pop    rcx
  4273e0:	ret    
  4273e1:	lea    rdi,[rip+0x22b7e]        # 449f66 <strcmp@plt+0x467de>
  4273e8:	lea    rsi,[rip+0x2278e]        # 449b7d <strcmp@plt+0x463f5>
  4273ef:	lea    rcx,[rip+0x22e39]        # 44a22f <strcmp@plt+0x46aa7>
  4273f6:	mov    edx,0x243
  4273fb:	call   4032b0 <__assert_fail@plt>
  427400:	push   rbx
  427401:	mov    edi,0x1
  427406:	mov    esi,0x18
  42740b:	call   4032d0 <calloc@plt>
  427410:	mov    rbx,rax
  427413:	xor    eax,eax
  427415:	call   422f90 <strcmp@plt+0x1f808>
  42741a:	mov    QWORD PTR [rbx+0x8],rax
  42741e:	xor    eax,eax
  427420:	call   422f90 <strcmp@plt+0x1f808>
  427425:	mov    QWORD PTR [rbx+0x10],rax
  427429:	mov    rax,rbx
  42742c:	pop    rbx
  42742d:	ret    
  42742e:	xchg   ax,ax
  427430:	test   rdi,rdi
  427433:	je     427439 <strcmp@plt+0x23cb1>
  427435:	mov    BYTE PTR [rdi],sil
  427438:	ret    
  427439:	push   rax
  42743a:	lea    rdi,[rip+0x22b25]        # 449f66 <strcmp@plt+0x467de>
  427441:	lea    rsi,[rip+0x22735]        # 449b7d <strcmp@plt+0x463f5>
  427448:	lea    rcx,[rip+0x22c19]        # 44a068 <strcmp@plt+0x468e0>
  42744f:	mov    edx,0x1c9
  427454:	call   4032b0 <__assert_fail@plt>
  427459:	nop    DWORD PTR [rax+0x0]
  427460:	test   rdi,rdi
  427463:	je     42746a <strcmp@plt+0x23ce2>
  427465:	mov    BYTE PTR [rdi+0x1],sil
  427469:	ret    
  42746a:	push   rax
  42746b:	lea    rdi,[rip+0x22af4]        # 449f66 <strcmp@plt+0x467de>
  427472:	lea    rsi,[rip+0x22704]        # 449b7d <strcmp@plt+0x463f5>
  427479:	lea    rcx,[rip+0x22c13]        # 44a093 <strcmp@plt+0x4690b>
  427480:	mov    edx,0x1d0
  427485:	call   4032b0 <__assert_fail@plt>
  42748a:	nop    WORD PTR [rax+rax*1+0x0]
  427490:	test   rdi,rdi
  427493:	je     427499 <strcmp@plt+0x23d11>
  427495:	mov    DWORD PTR [rdi+0x4],esi
  427498:	ret    
  427499:	push   rax
  42749a:	lea    rdi,[rip+0x22ac5]        # 449f66 <strcmp@plt+0x467de>
  4274a1:	lea    rsi,[rip+0x226d5]        # 449b7d <strcmp@plt+0x463f5>
  4274a8:	lea    rcx,[rip+0x22c0f]        # 44a0be <strcmp@plt+0x46936>
  4274af:	mov    edx,0x1d7
  4274b4:	call   4032b0 <__assert_fail@plt>
  4274b9:	nop    DWORD PTR [rax+0x0]
  4274c0:	push   rax
  4274c1:	test   rdi,rdi
  4274c4:	je     4274d5 <strcmp@plt+0x23d4d>
  4274c6:	test   rsi,rsi
  4274c9:	je     4274f4 <strcmp@plt+0x23d6c>
  4274cb:	mov    rdi,QWORD PTR [rdi+0x8]
  4274cf:	pop    rax
  4274d0:	jmp    423560 <strcmp@plt+0x1fdd8>
  4274d5:	lea    rdi,[rip+0x22a8a]        # 449f66 <strcmp@plt+0x467de>
  4274dc:	lea    rsi,[rip+0x2269a]        # 449b7d <strcmp@plt+0x463f5>
  4274e3:	lea    rcx,[rip+0x22bfb]        # 44a0e5 <strcmp@plt+0x4695d>
  4274ea:	mov    edx,0x1de
  4274ef:	call   4032b0 <__assert_fail@plt>
  4274f4:	lea    rdi,[rip+0x2292c]        # 449e27 <strcmp@plt+0x4669f>
  4274fb:	lea    rsi,[rip+0x2267b]        # 449b7d <strcmp@plt+0x463f5>
  427502:	lea    rcx,[rip+0x22bdc]        # 44a0e5 <strcmp@plt+0x4695d>
  427509:	mov    edx,0x1df
  42750e:	call   4032b0 <__assert_fail@plt>
  427513:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42751d:	nop    DWORD PTR [rax]
  427520:	push   rax
  427521:	test   rdi,rdi
  427524:	je     427535 <strcmp@plt+0x23dad>
  427526:	test   rsi,rsi
  427529:	je     427554 <strcmp@plt+0x23dcc>
  42752b:	mov    rdi,QWORD PTR [rdi+0x10]
  42752f:	pop    rax
  427530:	jmp    423560 <strcmp@plt+0x1fdd8>
  427535:	lea    rdi,[rip+0x22a2a]        # 449f66 <strcmp@plt+0x467de>
  42753c:	lea    rsi,[rip+0x2263a]        # 449b7d <strcmp@plt+0x463f5>
  427543:	lea    rcx,[rip+0x22bc7]        # 44a111 <strcmp@plt+0x46989>
  42754a:	mov    edx,0x1e6
  42754f:	call   4032b0 <__assert_fail@plt>
  427554:	lea    rdi,[rip+0x22be2]        # 44a13d <strcmp@plt+0x469b5>
  42755b:	lea    rsi,[rip+0x2261b]        # 449b7d <strcmp@plt+0x463f5>
  427562:	lea    rcx,[rip+0x22ba8]        # 44a111 <strcmp@plt+0x46989>
  427569:	mov    edx,0x1e7
  42756e:	call   4032b0 <__assert_fail@plt>
  427573:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42757d:	nop    DWORD PTR [rax]
  427580:	push   rbp
  427581:	push   r15
  427583:	push   r14
  427585:	push   r12
  427587:	push   rbx
  427588:	test   rsi,rsi
  42758b:	je     4275d0 <strcmp@plt+0x23e48>
  42758d:	mov    rbp,rdi
  427590:	test   rdi,rdi
  427593:	je     4275ef <strcmp@plt+0x23e67>
  427595:	mov    rbx,rdx
  427598:	test   rdx,rdx
  42759b:	je     42760e <strcmp@plt+0x23e86>
  42759d:	mov    r14d,r9d
  4275a0:	mov    r15d,r8d
  4275a3:	mov    r12d,ecx
  4275a6:	mov    rdi,QWORD PTR [rbp+0x8]
  4275aa:	call   423560 <strcmp@plt+0x1fdd8>
  4275af:	mov    rdi,QWORD PTR [rbp+0x10]
  4275b3:	mov    rsi,rbx
  4275b6:	call   423560 <strcmp@plt+0x1fdd8>
  4275bb:	mov    BYTE PTR [rbp+0x0],r12b
  4275bf:	mov    BYTE PTR [rbp+0x1],r15b
  4275c3:	mov    DWORD PTR [rbp+0x4],r14d
  4275c7:	pop    rbx
  4275c8:	pop    r12
  4275ca:	pop    r14
  4275cc:	pop    r15
  4275ce:	pop    rbp
  4275cf:	ret    
  4275d0:	lea    rdi,[rip+0x22850]        # 449e27 <strcmp@plt+0x4669f>
  4275d7:	lea    rsi,[rip+0x2259f]        # 449b7d <strcmp@plt+0x463f5>
  4275de:	lea    rcx,[rip+0x22b5c]        # 44a141 <strcmp@plt+0x469b9>
  4275e5:	mov    edx,0x20e
  4275ea:	call   4032b0 <__assert_fail@plt>
  4275ef:	lea    rdi,[rip+0x22b9e]        # 44a194 <strcmp@plt+0x46a0c>
  4275f6:	lea    rsi,[rip+0x22580]        # 449b7d <strcmp@plt+0x463f5>
  4275fd:	lea    rcx,[rip+0x22b3d]        # 44a141 <strcmp@plt+0x469b9>
  427604:	mov    edx,0x20f
  427609:	call   4032b0 <__assert_fail@plt>
  42760e:	lea    rdi,[rip+0x22b28]        # 44a13d <strcmp@plt+0x469b5>
  427615:	lea    rsi,[rip+0x22561]        # 449b7d <strcmp@plt+0x463f5>
  42761c:	lea    rcx,[rip+0x22b1e]        # 44a141 <strcmp@plt+0x469b9>
  427623:	mov    edx,0x210
  427628:	call   4032b0 <__assert_fail@plt>
  42762d:	nop    DWORD PTR [rax]
  427630:	push   rbp
  427631:	push   r15
  427633:	push   r14
  427635:	push   r13
  427637:	push   r12
  427639:	push   rbx
  42763a:	push   rax
  42763b:	test   rdi,rdi
  42763e:	je     4276ca <strcmp@plt+0x23f42>
  427644:	mov    r13,rsi
  427647:	mov    DWORD PTR [rsp],ecx
  42764a:	mov    DWORD PTR [rsp+0x4],r8d
  42764f:	test   rsi,rsi
  427652:	je     4276e9 <strcmp@plt+0x23f61>
  427658:	mov    rbx,rdi
  42765b:	mov    r12d,edx
  42765e:	mov    edi,0x1
  427663:	mov    esi,0x18
  427668:	call   4032d0 <calloc@plt>
  42766d:	mov    rbp,rax
  427670:	xor    eax,eax
  427672:	call   422f90 <strcmp@plt+0x1f808>
  427677:	mov    r14,rax
  42767a:	mov    QWORD PTR [rbp+0x8],rax
  42767e:	xor    eax,eax
  427680:	call   422f90 <strcmp@plt+0x1f808>
  427685:	mov    QWORD PTR [rbp+0x10],rax
  427689:	test   rbp,rbp
  42768c:	je     427708 <strcmp@plt+0x23f80>
  42768e:	mov    r15,rax
  427691:	mov    rdi,r14
  427694:	mov    rsi,rbx
  427697:	call   423560 <strcmp@plt+0x1fdd8>
  42769c:	mov    rdi,r15
  42769f:	mov    rsi,r13
  4276a2:	call   423560 <strcmp@plt+0x1fdd8>
  4276a7:	mov    BYTE PTR [rbp+0x0],r12b
  4276ab:	mov    eax,DWORD PTR [rsp]
  4276ae:	mov    BYTE PTR [rbp+0x1],al
  4276b1:	mov    eax,DWORD PTR [rsp+0x4]
  4276b5:	mov    DWORD PTR [rbp+0x4],eax
  4276b8:	mov    rax,rbp
  4276bb:	add    rsp,0x8
  4276bf:	pop    rbx
  4276c0:	pop    r12
  4276c2:	pop    r13
  4276c4:	pop    r14
  4276c6:	pop    r15
  4276c8:	pop    rbp
  4276c9:	ret    
  4276ca:	lea    rdi,[rip+0x22756]        # 449e27 <strcmp@plt+0x4669f>
  4276d1:	lea    rsi,[rip+0x224a5]        # 449b7d <strcmp@plt+0x463f5>
  4276d8:	lea    rcx,[rip+0x22ab9]        # 44a198 <strcmp@plt+0x46a10>
  4276df:	mov    edx,0x226
  4276e4:	call   4032b0 <__assert_fail@plt>
  4276e9:	lea    rdi,[rip+0x22a4d]        # 44a13d <strcmp@plt+0x469b5>
  4276f0:	lea    rsi,[rip+0x22486]        # 449b7d <strcmp@plt+0x463f5>
  4276f7:	lea    rcx,[rip+0x22a9a]        # 44a198 <strcmp@plt+0x46a10>
  4276fe:	mov    edx,0x227
  427703:	call   4032b0 <__assert_fail@plt>
  427708:	lea    rdi,[rip+0x22857]        # 449f66 <strcmp@plt+0x467de>
  42770f:	lea    rsi,[rip+0x22467]        # 449b7d <strcmp@plt+0x463f5>
  427716:	lea    rcx,[rip+0x22ac8]        # 44a1e5 <strcmp@plt+0x46a5d>
  42771d:	mov    edx,0x235
  427722:	call   4032b0 <__assert_fail@plt>
  427727:	nop    WORD PTR [rax+rax*1+0x0]
  427730:	push   rbp
  427731:	push   r15
  427733:	push   r14
  427735:	push   r13
  427737:	push   r12
  427739:	push   rbx
  42773a:	push   rax
  42773b:	test   rdi,rdi
  42773e:	je     4277a8 <strcmp@plt+0x24020>
  427740:	mov    r14d,r9d
  427743:	mov    r15d,r8d
  427746:	mov    r13d,ecx
  427749:	mov    r12,rdx
  42774c:	mov    rbp,rsi
  42774f:	mov    rbx,rdi
  427752:	mov    rdi,QWORD PTR [rdi+0x8]
  427756:	test   rdi,rdi
  427759:	je     42776f <strcmp@plt+0x23fe7>
  42775b:	mov    eax,DWORD PTR [rbx]
  42775d:	lea    rcx,[rip+0x3d15c]        # 4648c0 <strcmp@plt+0x61138>
  427764:	mov    rax,QWORD PTR [rcx+rax*8]
  427768:	test   rax,rax
  42776b:	je     42776f <strcmp@plt+0x23fe7>
  42776d:	call   rax
  42776f:	movzx  edx,r13b
  427773:	movzx  ecx,r15b
  427777:	mov    rdi,rbp
  42777a:	mov    rsi,r12
  42777d:	mov    r8d,r14d
  427780:	call   427630 <strcmp@plt+0x23ea8>
  427785:	mov    DWORD PTR [rbx],0x9
  42778b:	test   rax,rax
  42778e:	je     4277c7 <strcmp@plt+0x2403f>
  427790:	mov    QWORD PTR [rbx+0x8],rax
  427794:	mov    eax,0x1
  427799:	add    rsp,0x8
  42779d:	pop    rbx
  42779e:	pop    r12
  4277a0:	pop    r13
  4277a2:	pop    r14
  4277a4:	pop    r15
  4277a6:	pop    rbp
  4277a7:	ret    
  4277a8:	lea    rdi,[rip+0x223c9]        # 449b78 <strcmp@plt+0x463f0>
  4277af:	lea    rsi,[rip+0x223c7]        # 449b7d <strcmp@plt+0x463f5>
  4277b6:	lea    rcx,[rip+0x22fd1]        # 44a78e <strcmp@plt+0x47006>
  4277bd:	mov    edx,0x6f
  4277c2:	call   4032b0 <__assert_fail@plt>
  4277c7:	lea    rdi,[rip+0x22bc7]        # 44a395 <strcmp@plt+0x46c0d>
  4277ce:	lea    rsi,[rip+0x223a8]        # 449b7d <strcmp@plt+0x463f5>
  4277d5:	lea    rcx,[rip+0x225a9]        # 449d85 <strcmp@plt+0x465fd>
  4277dc:	mov    edx,0x124
  4277e1:	call   4032b0 <__assert_fail@plt>
  4277e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4277f0:	push   rbp
  4277f1:	push   r15
  4277f3:	push   r14
  4277f5:	push   rbx
  4277f6:	push   rax
  4277f7:	mov    r14,rsi
  4277fa:	mov    r15,rdi
  4277fd:	call   423200 <strcmp@plt+0x1fa78>
  427802:	movzx  eax,ax
  427805:	mov    bpl,0x20
  427808:	cmp    eax,0x2
  42780b:	je     427810 <strcmp@plt+0x24088>
  42780d:	mov    bpl,0x80
  427810:	mov    edi,0x3
  427815:	call   422ef0 <strcmp@plt+0x1f768>
  42781a:	test   rax,rax
  42781d:	je     427870 <strcmp@plt+0x240e8>
  42781f:	mov    rbx,rax
  427822:	mov    rdi,QWORD PTR [rax+0x8]
  427826:	test   rdi,rdi
  427829:	je     42783f <strcmp@plt+0x240b7>
  42782b:	mov    eax,DWORD PTR [rbx]
  42782d:	lea    rcx,[rip+0x3d08c]        # 4648c0 <strcmp@plt+0x61138>
  427834:	mov    rax,QWORD PTR [rcx+rax*8]
  427838:	test   rax,rax
  42783b:	je     42783f <strcmp@plt+0x240b7>
  42783d:	call   rax
  42783f:	movzx  edx,bpl
  427843:	xor    r8d,r8d
  427846:	mov    rdi,r15
  427849:	mov    rsi,r14
  42784c:	mov    ecx,edx
  42784e:	call   427630 <strcmp@plt+0x23ea8>
  427853:	mov    DWORD PTR [rbx],0x9
  427859:	test   rax,rax
  42785c:	je     42788f <strcmp@plt+0x24107>
  42785e:	mov    QWORD PTR [rbx+0x8],rax
  427862:	mov    rax,rbx
  427865:	add    rsp,0x8
  427869:	pop    rbx
  42786a:	pop    r14
  42786c:	pop    r15
  42786e:	pop    rbp
  42786f:	ret    
  427870:	lea    rdi,[rip+0x22301]        # 449b78 <strcmp@plt+0x463f0>
  427877:	lea    rsi,[rip+0x222ff]        # 449b7d <strcmp@plt+0x463f5>
  42787e:	lea    rcx,[rip+0x22f09]        # 44a78e <strcmp@plt+0x47006>
  427885:	mov    edx,0x6f
  42788a:	call   4032b0 <__assert_fail@plt>
  42788f:	lea    rdi,[rip+0x22aff]        # 44a395 <strcmp@plt+0x46c0d>
  427896:	lea    rsi,[rip+0x222e0]        # 449b7d <strcmp@plt+0x463f5>
  42789d:	lea    rcx,[rip+0x224e1]        # 449d85 <strcmp@plt+0x465fd>
  4278a4:	mov    edx,0x124
  4278a9:	call   4032b0 <__assert_fail@plt>
  4278ae:	xchg   ax,ax
  4278b0:	xor    eax,eax
  4278b2:	cmp    DWORD PTR [rdi+0x18],0x3
  4278b6:	jne    4278cc <strcmp@plt+0x24144>
  4278b8:	push   rax
  4278b9:	call   423330 <strcmp@plt+0x1fba8>
  4278be:	mov    ecx,eax
  4278c0:	xor    eax,eax
  4278c2:	cmp    ecx,0x9
  4278c5:	sete   al
  4278c8:	add    rsp,0x8
  4278cc:	ret    
  4278cd:	nop    DWORD PTR [rax]
  4278d0:	push   rbx
  4278d1:	mov    edi,0x10
  4278d6:	call   432070 <strcmp@plt+0x2e8e8>
  4278db:	mov    rbx,rax
  4278de:	xor    eax,eax
  4278e0:	call   422f90 <strcmp@plt+0x1f808>
  4278e5:	mov    QWORD PTR [rbx+0x8],rax
  4278e9:	mov    rax,rbx
  4278ec:	pop    rbx
  4278ed:	ret    
  4278ee:	xchg   ax,ax
  4278f0:	push   rbp
  4278f1:	push   r15
  4278f3:	push   r14
  4278f5:	push   rbx
  4278f6:	push   rax
  4278f7:	mov    r14d,edx
  4278fa:	mov    r15,rsi
  4278fd:	mov    ebp,edi
  4278ff:	mov    edi,0x10
  427904:	call   432070 <strcmp@plt+0x2e8e8>
  427909:	mov    rbx,rax
  42790c:	xor    eax,eax
  42790e:	call   422f90 <strcmp@plt+0x1f808>
  427913:	mov    QWORD PTR [rbx+0x8],rax
  427917:	mov    DWORD PTR [rbx],ebp
  427919:	mov    rdi,rax
  42791c:	mov    rsi,r15
  42791f:	call   423560 <strcmp@plt+0x1fdd8>
  427924:	mov    BYTE PTR [rbx+0x4],r14b
  427928:	mov    rax,rbx
  42792b:	add    rsp,0x8
  42792f:	pop    rbx
  427930:	pop    r14
  427932:	pop    r15
  427934:	pop    rbp
  427935:	ret    
  427936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427940:	test   rdi,rdi
  427943:	je     42794a <strcmp@plt+0x241c2>
  427945:	mov    rax,QWORD PTR [rdi+0x8]
  427949:	ret    
  42794a:	push   rax
  42794b:	lea    rdi,[rip+0x24a50]        # 44c3a2 <strcmp@plt+0x48c1a>
  427952:	lea    rsi,[rip+0x22224]        # 449b7d <strcmp@plt+0x463f5>
  427959:	lea    rcx,[rip+0x229ae]        # 44a30e <strcmp@plt+0x46b86>
  427960:	mov    edx,0x30a
  427965:	call   4032b0 <__assert_fail@plt>
  42796a:	nop    WORD PTR [rax+rax*1+0x0]
  427970:	test   rdi,rdi
  427973:	je     427979 <strcmp@plt+0x241f1>
  427975:	mov    al,BYTE PTR [rdi+0x4]
  427978:	ret    
  427979:	push   rax
  42797a:	lea    rdi,[rip+0x24a21]        # 44c3a2 <strcmp@plt+0x48c1a>
  427981:	lea    rsi,[rip+0x221f5]        # 449b7d <strcmp@plt+0x463f5>
  427988:	lea    rcx,[rip+0x22939]        # 44a2c8 <strcmp@plt+0x46b40>
  42798f:	mov    edx,0x2f6
  427994:	call   4032b0 <__assert_fail@plt>
  427999:	nop    DWORD PTR [rax+0x0]
  4279a0:	test   rdi,rdi
  4279a3:	je     4279a8 <strcmp@plt+0x24220>
  4279a5:	mov    eax,DWORD PTR [rdi]
  4279a7:	ret    
  4279a8:	push   rax
  4279a9:	lea    rdi,[rip+0x249f2]        # 44c3a2 <strcmp@plt+0x48c1a>
  4279b0:	lea    rsi,[rip+0x221c6]        # 449b7d <strcmp@plt+0x463f5>
  4279b7:	lea    rcx,[rip+0x2292d]        # 44a2eb <strcmp@plt+0x46b63>
  4279be:	mov    edx,0x303
  4279c3:	call   4032b0 <__assert_fail@plt>
  4279c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4279d0:	test   rdi,rdi
  4279d3:	je     4279d8 <strcmp@plt+0x24250>
  4279d5:	mov    DWORD PTR [rdi],esi
  4279d7:	ret    
  4279d8:	push   rax
  4279d9:	lea    rdi,[rip+0x22955]        # 44a335 <strcmp@plt+0x46bad>
  4279e0:	lea    rsi,[rip+0x22196]        # 449b7d <strcmp@plt+0x463f5>
  4279e7:	lea    rcx,[rip+0x2294c]        # 44a33a <strcmp@plt+0x46bb2>
  4279ee:	mov    edx,0x311
  4279f3:	call   4032b0 <__assert_fail@plt>
  4279f8:	nop    DWORD PTR [rax+rax*1+0x0]
  427a00:	push   rax
  427a01:	test   rdi,rdi
  427a04:	je     427a15 <strcmp@plt+0x2428d>
  427a06:	test   rsi,rsi
  427a09:	je     427a34 <strcmp@plt+0x242ac>
  427a0b:	mov    rdi,QWORD PTR [rdi+0x8]
  427a0f:	pop    rax
  427a10:	jmp    423560 <strcmp@plt+0x1fdd8>
  427a15:	lea    rdi,[rip+0x22919]        # 44a335 <strcmp@plt+0x46bad>
  427a1c:	lea    rsi,[rip+0x2215a]        # 449b7d <strcmp@plt+0x463f5>
  427a23:	lea    rcx,[rip+0x22939]        # 44a363 <strcmp@plt+0x46bdb>
  427a2a:	mov    edx,0x318
  427a2f:	call   4032b0 <__assert_fail@plt>
  427a34:	lea    rdi,[rip+0x22957]        # 44a392 <strcmp@plt+0x46c0a>
  427a3b:	lea    rsi,[rip+0x2213b]        # 449b7d <strcmp@plt+0x463f5>
  427a42:	lea    rcx,[rip+0x2291a]        # 44a363 <strcmp@plt+0x46bdb>
  427a49:	mov    edx,0x319
  427a4e:	call   4032b0 <__assert_fail@plt>
  427a53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427a5d:	nop    DWORD PTR [rax]
  427a60:	test   rdi,rdi
  427a63:	je     427a6a <strcmp@plt+0x242e2>
  427a65:	mov    BYTE PTR [rdi+0x4],sil
  427a69:	ret    
  427a6a:	push   rax
  427a6b:	lea    rdi,[rip+0x24930]        # 44c3a2 <strcmp@plt+0x48c1a>
  427a72:	lea    rsi,[rip+0x22104]        # 449b7d <strcmp@plt+0x463f5>
  427a79:	lea    rcx,[rip+0x2291a]        # 44a39a <strcmp@plt+0x46c12>
  427a80:	mov    edx,0x320
  427a85:	call   4032b0 <__assert_fail@plt>
  427a8a:	nop    WORD PTR [rax+rax*1+0x0]
  427a90:	xor    eax,eax
  427a92:	cmp    DWORD PTR [rdi+0x18],0x3
  427a96:	jne    427aac <strcmp@plt+0x24324>
  427a98:	push   rax
  427a99:	call   423330 <strcmp@plt+0x1fba8>
  427a9e:	mov    ecx,eax
  427aa0:	xor    eax,eax
  427aa2:	cmp    ecx,0x2
  427aa5:	sete   al
  427aa8:	add    rsp,0x8
  427aac:	ret    
  427aad:	nop    DWORD PTR [rax]
  427ab0:	push   rbp
  427ab1:	push   r15
  427ab3:	push   r14
  427ab5:	push   r12
  427ab7:	push   rbx
  427ab8:	mov    r14d,ecx
  427abb:	mov    r15,rdx
  427abe:	mov    r12d,esi
  427ac1:	mov    rbx,rdi
  427ac4:	mov    DWORD PTR [rdi],0x2
  427aca:	mov    edi,0x10
  427acf:	call   432070 <strcmp@plt+0x2e8e8>
  427ad4:	mov    rbp,rax
  427ad7:	xor    eax,eax
  427ad9:	call   422f90 <strcmp@plt+0x1f808>
  427ade:	mov    QWORD PTR [rbp+0x8],rax
  427ae2:	mov    DWORD PTR [rbp+0x0],r12d
  427ae6:	mov    rdi,rax
  427ae9:	mov    rsi,r15
  427aec:	call   423560 <strcmp@plt+0x1fdd8>
  427af1:	mov    BYTE PTR [rbp+0x4],r14b
  427af5:	mov    QWORD PTR [rbx+0x8],rbp
  427af9:	pop    rbx
  427afa:	pop    r12
  427afc:	pop    r14
  427afe:	pop    r15
  427b00:	pop    rbp
  427b01:	ret    
  427b02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b0c:	nop    DWORD PTR [rax+0x0]
  427b10:	push   rbp
  427b11:	push   r15
  427b13:	push   r14
  427b15:	push   r12
  427b17:	push   rbx
  427b18:	mov    r14d,edx
  427b1b:	mov    r15,rsi
  427b1e:	mov    r12d,edi
  427b21:	mov    edi,0x3
  427b26:	call   422ef0 <strcmp@plt+0x1f768>
  427b2b:	mov    rbx,rax
  427b2e:	mov    DWORD PTR [rax],0x2
  427b34:	mov    edi,0x10
  427b39:	call   432070 <strcmp@plt+0x2e8e8>
  427b3e:	mov    rbp,rax
  427b41:	xor    eax,eax
  427b43:	call   422f90 <strcmp@plt+0x1f808>
  427b48:	mov    QWORD PTR [rbp+0x8],rax
  427b4c:	mov    DWORD PTR [rbp+0x0],r12d
  427b50:	mov    rdi,rax
  427b53:	mov    rsi,r15
  427b56:	call   423560 <strcmp@plt+0x1fdd8>
  427b5b:	mov    BYTE PTR [rbp+0x4],r14b
  427b5f:	mov    QWORD PTR [rbx+0x8],rbp
  427b63:	mov    rax,rbx
  427b66:	pop    rbx
  427b67:	pop    r12
  427b69:	pop    r14
  427b6b:	pop    r15
  427b6d:	pop    rbp
  427b6e:	ret    
  427b6f:	nop
  427b70:	push   rbx
  427b71:	mov    edi,0x1
  427b76:	mov    esi,0x18
  427b7b:	call   4032d0 <calloc@plt>
  427b80:	mov    rbx,rax
  427b83:	xor    eax,eax
  427b85:	call   422f90 <strcmp@plt+0x1f808>
  427b8a:	mov    QWORD PTR [rbx+0x10],rax
  427b8e:	mov    rax,rbx
  427b91:	pop    rbx
  427b92:	ret    
  427b93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b9d:	nop    DWORD PTR [rax]
  427ba0:	mov    rax,QWORD PTR [rdi+0x10]
  427ba4:	ret    
  427ba5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427baf:	nop
  427bb0:	push   rax
  427bb1:	test   rsi,rsi
  427bb4:	je     427bc5 <strcmp@plt+0x2443d>
  427bb6:	test   rdi,rdi
  427bb9:	je     427be4 <strcmp@plt+0x2445c>
  427bbb:	mov    rdi,QWORD PTR [rdi+0x10]
  427bbf:	pop    rax
  427bc0:	jmp    423560 <strcmp@plt+0x1fdd8>
  427bc5:	lea    rdi,[rip+0x227c9]        # 44a395 <strcmp@plt+0x46c0d>
  427bcc:	lea    rsi,[rip+0x21faa]        # 449b7d <strcmp@plt+0x463f5>
  427bd3:	lea    rcx,[rip+0x227fd]        # 44a3d7 <strcmp@plt+0x46c4f>
  427bda:	mov    edx,0x3b9
  427bdf:	call   4032b0 <__assert_fail@plt>
  427be4:	lea    rdi,[rip+0x2281b]        # 44a406 <strcmp@plt+0x46c7e>
  427beb:	lea    rsi,[rip+0x21f8b]        # 449b7d <strcmp@plt+0x463f5>
  427bf2:	lea    rcx,[rip+0x227de]        # 44a3d7 <strcmp@plt+0x46c4f>
  427bf9:	mov    edx,0x3ba
  427bfe:	call   4032b0 <__assert_fail@plt>
  427c03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c0d:	nop    DWORD PTR [rax]
  427c10:	test   rdi,rdi
  427c13:	je     427c24 <strcmp@plt+0x2449c>
  427c15:	mov    BYTE PTR [rdi],sil
  427c18:	mov    WORD PTR [rdi+0x2],dx
  427c1c:	mov    BYTE PTR [rdi+0x4],cl
  427c1f:	mov    BYTE PTR [rdi+0x5],r8b
  427c23:	ret    
  427c24:	push   rax
  427c25:	lea    rdi,[rip+0x227da]        # 44a406 <strcmp@plt+0x46c7e>
  427c2c:	lea    rsi,[rip+0x21f4a]        # 449b7d <strcmp@plt+0x463f5>
  427c33:	lea    rcx,[rip+0x227d0]        # 44a40a <strcmp@plt+0x46c82>
  427c3a:	mov    edx,0x3c2
  427c3f:	call   4032b0 <__assert_fail@plt>
  427c44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c4e:	xchg   ax,ax
  427c50:	test   rdi,rdi
  427c53:	je     427c65 <strcmp@plt+0x244dd>
  427c55:	mov    BYTE PTR [rdi+0x6],sil
  427c59:	mov    WORD PTR [rdi+0x8],dx
  427c5d:	mov    BYTE PTR [rdi+0xa],cl
  427c60:	mov    BYTE PTR [rdi+0xb],r8b
  427c64:	ret    
  427c65:	push   rax
  427c66:	lea    rdi,[rip+0x22799]        # 44a406 <strcmp@plt+0x46c7e>
  427c6d:	lea    rsi,[rip+0x21f09]        # 449b7d <strcmp@plt+0x463f5>
  427c74:	lea    rcx,[rip+0x227d3]        # 44a44e <strcmp@plt+0x46cc6>
  427c7b:	mov    edx,0x3cd
  427c80:	call   4032b0 <__assert_fail@plt>
  427c85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c8f:	nop
  427c90:	test   rdi,rdi
  427c93:	je     427cae <strcmp@plt+0x24526>
  427c95:	mov    al,BYTE PTR [rsi]
  427c97:	mov    BYTE PTR [rdi],al
  427c99:	movzx  eax,WORD PTR [rsi+0x2]
  427c9d:	mov    WORD PTR [rdi+0x2],ax
  427ca1:	mov    al,BYTE PTR [rsi+0x4]
  427ca4:	mov    BYTE PTR [rdi+0x4],al
  427ca7:	mov    al,BYTE PTR [rsi+0x5]
  427caa:	mov    BYTE PTR [rdi+0x5],al
  427cad:	ret    
  427cae:	push   rax
  427caf:	lea    rdi,[rip+0x22750]        # 44a406 <strcmp@plt+0x46c7e>
  427cb6:	lea    rsi,[rip+0x21ec0]        # 449b7d <strcmp@plt+0x463f5>
  427cbd:	lea    rcx,[rip+0x227cf]        # 44a493 <strcmp@plt+0x46d0b>
  427cc4:	mov    edx,0x3d7
  427cc9:	call   4032b0 <__assert_fail@plt>
  427cce:	xchg   ax,ax
  427cd0:	test   rdi,rdi
  427cd3:	je     427cef <strcmp@plt+0x24567>
  427cd5:	mov    al,BYTE PTR [rsi]
  427cd7:	mov    BYTE PTR [rdi+0x6],al
  427cda:	movzx  eax,WORD PTR [rsi+0x2]
  427cde:	mov    WORD PTR [rdi+0x8],ax
  427ce2:	mov    al,BYTE PTR [rsi+0x4]
  427ce5:	mov    BYTE PTR [rdi+0xa],al
  427ce8:	mov    al,BYTE PTR [rsi+0x5]
  427ceb:	mov    BYTE PTR [rdi+0xb],al
  427cee:	ret    
  427cef:	push   rax
  427cf0:	lea    rdi,[rip+0x2270f]        # 44a406 <strcmp@plt+0x46c7e>
  427cf7:	lea    rsi,[rip+0x21e7f]        # 449b7d <strcmp@plt+0x463f5>
  427cfe:	lea    rcx,[rip+0x227cb]        # 44a4d0 <strcmp@plt+0x46d48>
  427d05:	mov    edx,0x3e1
  427d0a:	call   4032b0 <__assert_fail@plt>
  427d0f:	nop
  427d10:	test   rdi,rdi
  427d13:	je     427d19 <strcmp@plt+0x24591>
  427d15:	mov    DWORD PTR [rdi+0xc],esi
  427d18:	ret    
  427d19:	push   rax
  427d1a:	lea    rdi,[rip+0x226e5]        # 44a406 <strcmp@plt+0x46c7e>
  427d21:	lea    rsi,[rip+0x21e55]        # 449b7d <strcmp@plt+0x463f5>
  427d28:	lea    rcx,[rip+0x227df]        # 44a50e <strcmp@plt+0x46d86>
  427d2f:	mov    edx,0x3eb
  427d34:	call   4032b0 <__assert_fail@plt>
  427d39:	nop    DWORD PTR [rax+0x0]
  427d40:	test   rdi,rdi
  427d43:	je     427d49 <strcmp@plt+0x245c1>
  427d45:	mov    rax,rdi
  427d48:	ret    
  427d49:	push   rax
  427d4a:	lea    rdi,[rip+0x226b5]        # 44a406 <strcmp@plt+0x46c7e>
  427d51:	lea    rsi,[rip+0x21e25]        # 449b7d <strcmp@plt+0x463f5>
  427d58:	lea    rcx,[rip+0x227dd]        # 44a53c <strcmp@plt+0x46db4>
  427d5f:	mov    edx,0x3f2
  427d64:	call   4032b0 <__assert_fail@plt>
  427d69:	nop    DWORD PTR [rax+0x0]
  427d70:	test   rdi,rdi
  427d73:	je     427d7d <strcmp@plt+0x245f5>
  427d75:	add    rdi,0x6
  427d79:	mov    rax,rdi
  427d7c:	ret    
  427d7d:	push   rax
  427d7e:	lea    rdi,[rip+0x22681]        # 44a406 <strcmp@plt+0x46c7e>
  427d85:	lea    rsi,[rip+0x21df1]        # 449b7d <strcmp@plt+0x463f5>
  427d8c:	lea    rcx,[rip+0x227d4]        # 44a567 <strcmp@plt+0x46ddf>
  427d93:	mov    edx,0x3f9
  427d98:	call   4032b0 <__assert_fail@plt>
  427d9d:	nop    DWORD PTR [rax]
  427da0:	test   rdi,rdi
  427da3:	je     427da9 <strcmp@plt+0x24621>
  427da5:	mov    eax,DWORD PTR [rdi+0xc]
  427da8:	ret    
  427da9:	push   rax
  427daa:	lea    rdi,[rip+0x22655]        # 44a406 <strcmp@plt+0x46c7e>
  427db1:	lea    rsi,[rip+0x21dc5]        # 449b7d <strcmp@plt+0x463f5>
  427db8:	lea    rcx,[rip+0x227d4]        # 44a593 <strcmp@plt+0x46e0b>
  427dbf:	mov    edx,0x400
  427dc4:	call   4032b0 <__assert_fail@plt>
  427dc9:	nop    DWORD PTR [rax+0x0]
  427dd0:	push   rbx
  427dd1:	sub    rsp,0x10
  427dd5:	mov    BYTE PTR [rip+0x43a74],0x0        # 46b850 <strcmp@plt+0x680c8>
  427ddc:	lea    rbx,[rip+0x43a6d]        # 46b850 <strcmp@plt+0x680c8>
  427de3:	movzx  ecx,BYTE PTR [rdi]
  427de6:	movzx  r8d,WORD PTR [rdi+0x2]
  427deb:	movzx  r9d,BYTE PTR [rdi+0x4]
  427df0:	movzx  eax,BYTE PTR [rdi+0x5]
  427df4:	mov    DWORD PTR [rsp],eax
  427df7:	lea    rdx,[rip+0x227f3]        # 44a5f1 <strcmp@plt+0x46e69>
  427dfe:	mov    esi,0x60
  427e03:	xor    eax,eax
  427e05:	mov    rdi,rbx
  427e08:	call   403620 <snprintf@plt>
  427e0d:	mov    rax,rbx
  427e10:	add    rsp,0x10
  427e14:	pop    rbx
  427e15:	ret    
  427e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427e20:	push   rbx
  427e21:	mov    edi,0x30
  427e26:	call   432070 <strcmp@plt+0x2e8e8>
  427e2b:	mov    rbx,rax
  427e2e:	xor    eax,eax
  427e30:	call   422f90 <strcmp@plt+0x1f808>
  427e35:	mov    QWORD PTR [rbx+0x18],rax
  427e39:	xor    eax,eax
  427e3b:	call   422f90 <strcmp@plt+0x1f808>
  427e40:	mov    QWORD PTR [rbx+0x8],rax
  427e44:	xor    eax,eax
  427e46:	call   422f90 <strcmp@plt+0x1f808>
  427e4b:	mov    QWORD PTR [rbx+0x20],rax
  427e4f:	lea    rdi,[rip+0xffffffffffffb14a]        # 422fa0 <strcmp@plt+0x1f818>
  427e56:	call   42bc00 <strcmp@plt+0x28478>
  427e5b:	mov    QWORD PTR [rbx+0x28],rax
  427e5f:	mov    rax,rbx
  427e62:	pop    rbx
  427e63:	ret    
  427e64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427e6e:	xchg   ax,ax
  427e70:	push   rbp
  427e71:	push   r15
  427e73:	push   r14
  427e75:	push   r13
  427e77:	push   r12
  427e79:	push   rbx
  427e7a:	push   rax
  427e7b:	mov    QWORD PTR [rsp],r9
  427e7f:	mov    r15,r8
  427e82:	mov    r12,rcx
  427e85:	mov    ebp,edx
  427e87:	mov    r13,rsi
  427e8a:	mov    r14d,edi
  427e8d:	mov    edi,0x30
  427e92:	call   432070 <strcmp@plt+0x2e8e8>
  427e97:	mov    rbx,rax
  427e9a:	mov    WORD PTR [rax+0x10],r14w
  427e9f:	mov    WORD PTR [rax],bp
  427ea2:	mov    rdi,r13
  427ea5:	call   423740 <strcmp@plt+0x1ffb8>
  427eaa:	lea    rbp,[rip+0xffffffffffffb88f]        # 423740 <strcmp@plt+0x1ffb8>
  427eb1:	mov    QWORD PTR [rbx+0x18],rax
  427eb5:	mov    rdi,r12
  427eb8:	call   423740 <strcmp@plt+0x1ffb8>
  427ebd:	mov    QWORD PTR [rbx+0x8],rax
  427ec1:	mov    rdi,r15
  427ec4:	call   423740 <strcmp@plt+0x1ffb8>
  427ec9:	mov    QWORD PTR [rbx+0x20],rax
  427ecd:	mov    rdi,QWORD PTR [rsp]
  427ed1:	mov    rsi,rbp
  427ed4:	call   42bc70 <strcmp@plt+0x284e8>
  427ed9:	mov    QWORD PTR [rbx+0x28],rax
  427edd:	lea    rsi,[rip+0xffffffffffffb0bc]        # 422fa0 <strcmp@plt+0x1f818>
  427ee4:	mov    rdi,rax
  427ee7:	call   42bc60 <strcmp@plt+0x284d8>
  427eec:	mov    rax,rbx
  427eef:	add    rsp,0x8
  427ef3:	pop    rbx
  427ef4:	pop    r12
  427ef6:	pop    r13
  427ef8:	pop    r14
  427efa:	pop    r15
  427efc:	pop    rbp
  427efd:	ret    
  427efe:	xchg   ax,ax
  427f00:	movzx  eax,WORD PTR [rdi+0x10]
  427f04:	ret    
  427f05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f0f:	nop
  427f10:	movzx  eax,WORD PTR [rdi]
  427f13:	ret    
  427f14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f1e:	xchg   ax,ax
  427f20:	mov    rax,QWORD PTR [rdi+0x18]
  427f24:	ret    
  427f25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f2f:	nop
  427f30:	mov    rax,QWORD PTR [rdi+0x8]
  427f34:	ret    
  427f35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f3f:	nop
  427f40:	mov    rax,QWORD PTR [rdi+0x20]
  427f44:	ret    
  427f45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f4f:	nop
  427f50:	mov    rax,QWORD PTR [rdi+0x28]
  427f54:	ret    
  427f55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f5f:	nop
  427f60:	mov    WORD PTR [rdi+0x10],si
  427f64:	ret    
  427f65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f6f:	nop
  427f70:	mov    WORD PTR [rdi],si
  427f73:	ret    
  427f74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f7e:	xchg   ax,ax
  427f80:	mov    rdi,QWORD PTR [rdi+0x18]
  427f84:	jmp    423560 <strcmp@plt+0x1fdd8>
  427f89:	nop    DWORD PTR [rax+0x0]
  427f90:	mov    rdi,QWORD PTR [rdi+0x8]
  427f94:	jmp    423560 <strcmp@plt+0x1fdd8>
  427f99:	nop    DWORD PTR [rax+0x0]
  427fa0:	mov    rdi,QWORD PTR [rdi+0x20]
  427fa4:	jmp    423560 <strcmp@plt+0x1fdd8>
  427fa9:	nop    DWORD PTR [rax+0x0]
  427fb0:	push   r14
  427fb2:	push   rbx
  427fb3:	push   rax
  427fb4:	mov    r14,rsi
  427fb7:	mov    rbx,rdi
  427fba:	mov    rdi,QWORD PTR [rdi+0x28]
  427fbe:	call   42c250 <strcmp@plt+0x28ac8>
  427fc3:	lea    rsi,[rip+0xffffffffffffb776]        # 423740 <strcmp@plt+0x1ffb8>
  427fca:	mov    rdi,r14
  427fcd:	call   42bc70 <strcmp@plt+0x284e8>
  427fd2:	mov    QWORD PTR [rbx+0x28],rax
  427fd6:	lea    rsi,[rip+0xffffffffffffafc3]        # 422fa0 <strcmp@plt+0x1f818>
  427fdd:	mov    rdi,rax
  427fe0:	add    rsp,0x8
  427fe4:	pop    rbx
  427fe5:	pop    r14
  427fe7:	jmp    42bc60 <strcmp@plt+0x284d8>
  427fec:	nop    DWORD PTR [rax+0x0]
  427ff0:	push   rbp
  427ff1:	push   r15
  427ff3:	push   r14
  427ff5:	push   r13
  427ff7:	push   r12
  427ff9:	push   rbx
  427ffa:	push   rax
  427ffb:	mov    QWORD PTR [rsp],r9
  427fff:	mov    r12,r8
  428002:	mov    ebp,ecx
  428004:	mov    r13,rdx
  428007:	mov    r15d,esi
  42800a:	mov    r14,rdi
  42800d:	mov    DWORD PTR [rdi],0x7
  428013:	mov    edi,0x30
  428018:	call   432070 <strcmp@plt+0x2e8e8>
  42801d:	mov    rbx,rax
  428020:	mov    WORD PTR [rax+0x10],r15w
  428025:	mov    WORD PTR [rax],bp
  428028:	mov    rdi,r13
  42802b:	call   423740 <strcmp@plt+0x1ffb8>
  428030:	lea    rbp,[rip+0xffffffffffffb709]        # 423740 <strcmp@plt+0x1ffb8>
  428037:	mov    QWORD PTR [rbx+0x18],rax
  42803b:	mov    rdi,r12
  42803e:	call   423740 <strcmp@plt+0x1ffb8>
  428043:	mov    QWORD PTR [rbx+0x8],rax
  428047:	mov    rdi,QWORD PTR [rsp]
  42804b:	call   423740 <strcmp@plt+0x1ffb8>
  428050:	mov    QWORD PTR [rbx+0x20],rax
  428054:	mov    rdi,QWORD PTR [rsp+0x40]
  428059:	mov    rsi,rbp
  42805c:	call   42bc70 <strcmp@plt+0x284e8>
  428061:	mov    QWORD PTR [rbx+0x28],rax
  428065:	lea    rsi,[rip+0xffffffffffffaf34]        # 422fa0 <strcmp@plt+0x1f818>
  42806c:	mov    rdi,rax
  42806f:	call   42bc60 <strcmp@plt+0x284d8>
  428074:	mov    QWORD PTR [r14+0x8],rbx
  428078:	add    rsp,0x8
  42807c:	pop    rbx
  42807d:	pop    r12
  42807f:	pop    r13
  428081:	pop    r14
  428083:	pop    r15
  428085:	pop    rbp
  428086:	ret    
  428087:	nop    WORD PTR [rax+rax*1+0x0]
  428090:	xor    eax,eax
  428092:	cmp    DWORD PTR [rdi+0x18],0x3
  428096:	jne    4280ac <strcmp@plt+0x24924>
  428098:	push   rax
  428099:	call   423330 <strcmp@plt+0x1fba8>
  42809e:	mov    ecx,eax
  4280a0:	xor    eax,eax
  4280a2:	cmp    ecx,0x7
  4280a5:	sete   al
  4280a8:	add    rsp,0x8
  4280ac:	ret    
  4280ad:	nop    DWORD PTR [rax]
  4280b0:	push   rbp
  4280b1:	push   r15
  4280b3:	push   r14
  4280b5:	push   r13
  4280b7:	push   r12
  4280b9:	push   rbx
  4280ba:	sub    rsp,0x18
  4280be:	mov    QWORD PTR [rsp+0x10],r9
  4280c3:	mov    QWORD PTR [rsp+0x8],r8
  4280c8:	mov    r13,rcx
  4280cb:	mov    ebp,edx
  4280cd:	mov    r14,rsi
  4280d0:	mov    r15d,edi
  4280d3:	mov    edi,0x3
  4280d8:	call   422ef0 <strcmp@plt+0x1f768>
  4280dd:	mov    r12,rax
  4280e0:	mov    DWORD PTR [rax],0x7
  4280e6:	mov    edi,0x30
  4280eb:	call   432070 <strcmp@plt+0x2e8e8>
  4280f0:	mov    rbx,rax
  4280f3:	mov    WORD PTR [rax+0x10],r15w
  4280f8:	mov    WORD PTR [rax],bp
  4280fb:	mov    rdi,r14
  4280fe:	call   423740 <strcmp@plt+0x1ffb8>
  428103:	lea    rbp,[rip+0xffffffffffffb636]        # 423740 <strcmp@plt+0x1ffb8>
  42810a:	mov    QWORD PTR [rbx+0x18],rax
  42810e:	mov    rdi,r13
  428111:	call   423740 <strcmp@plt+0x1ffb8>
  428116:	mov    QWORD PTR [rbx+0x8],rax
  42811a:	mov    rdi,QWORD PTR [rsp+0x8]
  42811f:	call   423740 <strcmp@plt+0x1ffb8>
  428124:	mov    QWORD PTR [rbx+0x20],rax
  428128:	mov    rdi,QWORD PTR [rsp+0x10]
  42812d:	mov    rsi,rbp
  428130:	call   42bc70 <strcmp@plt+0x284e8>
  428135:	mov    QWORD PTR [rbx+0x28],rax
  428139:	lea    rsi,[rip+0xffffffffffffae60]        # 422fa0 <strcmp@plt+0x1f818>
  428140:	mov    rdi,rax
  428143:	call   42bc60 <strcmp@plt+0x284d8>
  428148:	mov    QWORD PTR [r12+0x8],rbx
  42814d:	mov    rax,r12
  428150:	add    rsp,0x18
  428154:	pop    rbx
  428155:	pop    r12
  428157:	pop    r13
  428159:	pop    r14
  42815b:	pop    r15
  42815d:	pop    rbp
  42815e:	ret    
  42815f:	nop
  428160:	push   r14
  428162:	push   rbx
  428163:	push   rax
  428164:	mov    edi,0x8
  428169:	call   432070 <strcmp@plt+0x2e8e8>
  42816e:	mov    r14,rax
  428171:	lea    rdi,[rip+0xb8]        # 428230 <strcmp@plt+0x24aa8>
  428178:	call   42bc00 <strcmp@plt+0x28478>
  42817d:	mov    QWORD PTR [r14],rax
  428180:	test   r14,r14
  428183:	je     4281c1 <strcmp@plt+0x24a39>
  428185:	mov    edi,0x3
  42818a:	call   422ef0 <strcmp@plt+0x1f768>
  42818f:	test   rax,rax
  428192:	je     4281b1 <strcmp@plt+0x24a29>
  428194:	mov    rbx,rax
  428197:	mov    esi,0xa
  42819c:	mov    rdi,rax
  42819f:	call   423b40 <strcmp@plt+0x203b8>
  4281a4:	mov    rdi,rbx
  4281a7:	mov    rsi,r14
  4281aa:	call   423b20 <strcmp@plt+0x20398>
  4281af:	jmp    4281c3 <strcmp@plt+0x24a3b>
  4281b1:	mov    rdi,QWORD PTR [r14]
  4281b4:	call   42c250 <strcmp@plt+0x28ac8>
  4281b9:	mov    rdi,r14
  4281bc:	call   403780 <free@plt>
  4281c1:	xor    ebx,ebx
  4281c3:	mov    rax,rbx
  4281c6:	add    rsp,0x8
  4281ca:	pop    rbx
  4281cb:	pop    r14
  4281cd:	ret    
  4281ce:	xchg   ax,ax
  4281d0:	test   rdi,rdi
  4281d3:	je     4281da <strcmp@plt+0x24a52>
  4281d5:	mov    rax,QWORD PTR [rdi+0x8]
  4281d9:	ret    
  4281da:	push   rax
  4281db:	lea    rdi,[rip+0x21996]        # 449b78 <strcmp@plt+0x463f0>
  4281e2:	lea    rsi,[rip+0x21994]        # 449b7d <strcmp@plt+0x463f5>
  4281e9:	lea    rcx,[rip+0x2259e]        # 44a78e <strcmp@plt+0x47006>
  4281f0:	mov    edx,0x6f
  4281f5:	call   4032b0 <__assert_fail@plt>
  4281fa:	nop    WORD PTR [rax+rax*1+0x0]
  428200:	push   rbx
  428201:	mov    edi,0x8
  428206:	call   432070 <strcmp@plt+0x2e8e8>
  42820b:	mov    rbx,rax
  42820e:	lea    rdi,[rip+0x1b]        # 428230 <strcmp@plt+0x24aa8>
  428215:	call   42bc00 <strcmp@plt+0x28478>
  42821a:	mov    QWORD PTR [rbx],rax
  42821d:	mov    rax,rbx
  428220:	pop    rbx
  428221:	ret    
  428222:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42822c:	nop    DWORD PTR [rax+0x0]
  428230:	push   rbx
  428231:	mov    rbx,rdi
  428234:	mov    rdi,QWORD PTR [rdi+0x8]
  428238:	call   422fa0 <strcmp@plt+0x1f818>
  42823d:	mov    rdi,rbx
  428240:	pop    rbx
  428241:	jmp    403780 <free@plt>
  428246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428250:	push   r14
  428252:	push   rbx
  428253:	push   rax
  428254:	mov    r14,rdi
  428257:	mov    edi,0x10
  42825c:	call   432070 <strcmp@plt+0x2e8e8>
  428261:	mov    rbx,rax
  428264:	mov    al,BYTE PTR [r14]
  428267:	and    al,0x1
  428269:	mov    cl,BYTE PTR [rbx]
  42826b:	and    cl,0xfe
  42826e:	or     cl,al
  428270:	mov    BYTE PTR [rbx],cl
  428272:	mov    al,BYTE PTR [r14]
  428275:	and    al,0x2
  428277:	and    cl,0xfd
  42827a:	or     cl,al
  42827c:	mov    BYTE PTR [rbx],cl
  42827e:	mov    al,BYTE PTR [r14]
  428281:	and    al,0x4
  428283:	and    cl,0xfb
  428286:	or     cl,al
  428288:	mov    BYTE PTR [rbx],cl
  42828a:	mov    rdi,QWORD PTR [r14+0x8]
  42828e:	call   423740 <strcmp@plt+0x1ffb8>
  428293:	mov    QWORD PTR [rbx+0x8],rax
  428297:	mov    rax,rbx
  42829a:	add    rsp,0x8
  42829e:	pop    rbx
  42829f:	pop    r14
  4282a1:	ret    
  4282a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4282ac:	nop    DWORD PTR [rax+0x0]
  4282b0:	push   rbp
  4282b1:	push   r15
  4282b3:	push   r14
  4282b5:	push   r12
  4282b7:	push   rbx
  4282b8:	mov    ebx,ecx
  4282ba:	mov    ebp,edx
  4282bc:	mov    r15d,esi
  4282bf:	mov    r12,rdi
  4282c2:	mov    edi,0x10
  4282c7:	call   432070 <strcmp@plt+0x2e8e8>
  4282cc:	test   rax,rax
  4282cf:	je     428303 <strcmp@plt+0x24b7b>
  4282d1:	mov    r14,rax
  4282d4:	mov    rdi,r12
  4282d7:	call   423740 <strcmp@plt+0x1ffb8>
  4282dc:	mov    QWORD PTR [r14+0x8],rax
  4282e0:	mov    al,BYTE PTR [r14]
  4282e3:	and    r15b,0x1
  4282e7:	and    al,0xf8
  4282e9:	add    bpl,bpl
  4282ec:	and    bpl,0x2
  4282f0:	or     bpl,r15b
  4282f3:	shl    bl,0x2
  4282f6:	and    bl,0x4
  4282f9:	or     bl,bpl
  4282fc:	or     bl,al
  4282fe:	mov    BYTE PTR [r14],bl
  428301:	jmp    428306 <strcmp@plt+0x24b7e>
  428303:	xor    r14d,r14d
  428306:	mov    rax,r14
  428309:	pop    rbx
  42830a:	pop    r12
  42830c:	pop    r14
  42830e:	pop    r15
  428310:	pop    rbp
  428311:	ret    
  428312:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42831c:	nop    DWORD PTR [rax+0x0]
  428320:	mov    rax,QWORD PTR [rdi+0x8]
  428324:	ret    
  428325:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42832f:	nop
  428330:	push   r14
  428332:	push   rbx
  428333:	push   rax
  428334:	mov    r14,rsi
  428337:	mov    rsi,QWORD PTR [rdi]
  42833a:	test   rsi,rsi
  42833d:	jne    428354 <strcmp@plt+0x24bcc>
  42833f:	mov    rbx,rdi
  428342:	lea    rdi,[rip+0xfffffffffffffee7]        # 428230 <strcmp@plt+0x24aa8>
  428349:	call   42bc00 <strcmp@plt+0x28478>
  42834e:	mov    rsi,rax
  428351:	mov    QWORD PTR [rbx],rax
  428354:	mov    rdi,r14
  428357:	add    rsp,0x8
  42835b:	pop    rbx
  42835c:	pop    r14
  42835e:	jmp    42be30 <strcmp@plt+0x286a8>
  428363:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42836d:	nop    DWORD PTR [rax]
  428370:	mov    rax,QWORD PTR [rdi+0x8]
  428374:	mov    rax,QWORD PTR [rax]
  428377:	ret    
  428378:	nop    DWORD PTR [rax+rax*1+0x0]
  428380:	xor    eax,eax
  428382:	cmp    DWORD PTR [rdi+0x18],0x3
  428386:	jne    42839c <strcmp@plt+0x24c14>
  428388:	push   rax
  428389:	call   423330 <strcmp@plt+0x1fba8>
  42838e:	mov    ecx,eax
  428390:	xor    eax,eax
  428392:	cmp    ecx,0xa
  428395:	sete   al
  428398:	add    rsp,0x8
  42839c:	ret    
  42839d:	nop    DWORD PTR [rax]
  4283a0:	push   rbx
  4283a1:	mov    edi,0x8
  4283a6:	call   432070 <strcmp@plt+0x2e8e8>
  4283ab:	mov    rbx,rax
  4283ae:	lea    rdi,[rip+0x1b]        # 4283d0 <strcmp@plt+0x24c48>
  4283b5:	call   42bc00 <strcmp@plt+0x28478>
  4283ba:	mov    QWORD PTR [rbx],rax
  4283bd:	mov    rax,rbx
  4283c0:	pop    rbx
  4283c1:	ret    
  4283c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4283cc:	nop    DWORD PTR [rax+0x0]
  4283d0:	push   rbx
  4283d1:	mov    rbx,rdi
  4283d4:	mov    rdi,QWORD PTR [rdi]
  4283d7:	call   422fa0 <strcmp@plt+0x1f818>
  4283dc:	mov    rdi,rbx
  4283df:	pop    rbx
  4283e0:	jmp    403780 <free@plt>
  4283e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4283ef:	nop
  4283f0:	push   r14
  4283f2:	push   rbx
  4283f3:	push   rax
  4283f4:	mov    r14,rdi
  4283f7:	mov    edi,0x10
  4283fc:	call   432070 <strcmp@plt+0x2e8e8>
  428401:	mov    rbx,rax
  428404:	mov    al,BYTE PTR [r14+0x8]
  428408:	mov    BYTE PTR [rbx+0x8],al
  42840b:	mov    rdi,QWORD PTR [r14]
  42840e:	call   423740 <strcmp@plt+0x1ffb8>
  428413:	mov    QWORD PTR [rbx],rax
  428416:	mov    rax,rbx
  428419:	add    rsp,0x8
  42841d:	pop    rbx
  42841e:	pop    r14
  428420:	ret    
  428421:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42842b:	nop    DWORD PTR [rax+rax*1+0x0]
  428430:	push   rbx
  428431:	mov    edi,0x10
  428436:	call   432070 <strcmp@plt+0x2e8e8>
  42843b:	mov    rbx,rax
  42843e:	xor    eax,eax
  428440:	call   422f90 <strcmp@plt+0x1f808>
  428445:	mov    QWORD PTR [rbx],rax
  428448:	mov    rax,rbx
  42844b:	pop    rbx
  42844c:	ret    
  42844d:	nop    DWORD PTR [rax]
  428450:	mov    rax,QWORD PTR [rdi+0x8]
  428454:	mov    rax,QWORD PTR [rax]
  428457:	ret    
  428458:	nop    DWORD PTR [rax+rax*1+0x0]
  428460:	push   rbx
  428461:	mov    edi,0x8
  428466:	call   432070 <strcmp@plt+0x2e8e8>
  42846b:	mov    rbx,rax
  42846e:	lea    rdi,[rip+0xffffffffffffab2b]        # 422fa0 <strcmp@plt+0x1f818>
  428475:	call   42bc00 <strcmp@plt+0x28478>
  42847a:	mov    QWORD PTR [rbx],rax
  42847d:	mov    rax,rbx
  428480:	pop    rbx
  428481:	ret    
  428482:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42848c:	nop    DWORD PTR [rax+0x0]
  428490:	push   rax
  428491:	test   rdi,rdi
  428494:	je     4284d2 <strcmp@plt+0x24d4a>
  428496:	mov    edx,DWORD PTR [rdi]
  428498:	lea    rax,[rip+0x3c7a1]        # 464c40 <strcmp@plt+0x614b8>
  42849f:	mov    rax,QWORD PTR [rax+rdx*8]
  4284a3:	test   rax,rax
  4284a6:	je     4284af <strcmp@plt+0x24d27>
  4284a8:	mov    rdi,QWORD PTR [rdi+0x8]
  4284ac:	pop    rcx
  4284ad:	jmp    rax
  4284af:	lea    rax,[rip+0x3c8fa]        # 464db0 <strcmp@plt+0x61628>
  4284b6:	cmp    DWORD PTR [rax],0x0
  4284b9:	jle    4284ce <strcmp@plt+0x24d46>
  4284bb:	lea    rsi,[rip+0x22216]        # 44a6d8 <strcmp@plt+0x46f50>
  4284c2:	mov    edi,0x5
  4284c7:	xor    eax,eax
  4284c9:	call   42e800 <strcmp@plt+0x2b078>
  4284ce:	xor    eax,eax
  4284d0:	pop    rcx
  4284d1:	ret    
  4284d2:	lea    rdi,[rip+0x2169f]        # 449b78 <strcmp@plt+0x463f0>
  4284d9:	lea    rsi,[rip+0x2169d]        # 449b7d <strcmp@plt+0x463f5>
  4284e0:	lea    rcx,[rip+0x22282]        # 44a769 <strcmp@plt+0x46fe1>
  4284e7:	mov    edx,0x6a
  4284ec:	call   4032b0 <__assert_fail@plt>
  4284f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4284fb:	nop    DWORD PTR [rax+rax*1+0x0]
  428500:	push   rax
  428501:	test   rdi,rdi
  428504:	je     428542 <strcmp@plt+0x24dba>
  428506:	mov    edx,DWORD PTR [rdi]
  428508:	lea    rax,[rip+0x3c7b1]        # 464cc0 <strcmp@plt+0x61538>
  42850f:	mov    rax,QWORD PTR [rax+rdx*8]
  428513:	test   rax,rax
  428516:	je     42851f <strcmp@plt+0x24d97>
  428518:	mov    rdi,QWORD PTR [rdi+0x8]
  42851c:	pop    rcx
  42851d:	jmp    rax
  42851f:	lea    rax,[rip+0x3c88a]        # 464db0 <strcmp@plt+0x61628>
  428526:	cmp    DWORD PTR [rax],0x0
  428529:	jle    42853e <strcmp@plt+0x24db6>
  42852b:	lea    rsi,[rip+0x221d3]        # 44a705 <strcmp@plt+0x46f7d>
  428532:	mov    edi,0x5
  428537:	xor    eax,eax
  428539:	call   42e800 <strcmp@plt+0x2b078>
  42853e:	xor    eax,eax
  428540:	pop    rcx
  428541:	ret    
  428542:	lea    rdi,[rip+0x2162f]        # 449b78 <strcmp@plt+0x463f0>
  428549:	lea    rsi,[rip+0x2162d]        # 449b7d <strcmp@plt+0x463f5>
  428550:	lea    rcx,[rip+0x22212]        # 44a769 <strcmp@plt+0x46fe1>
  428557:	mov    edx,0x6a
  42855c:	call   4032b0 <__assert_fail@plt>
  428561:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42856b:	nop    DWORD PTR [rax+rax*1+0x0]
  428570:	push   rbp
  428571:	push   r15
  428573:	push   r14
  428575:	push   r12
  428577:	push   rbx
  428578:	test   rdi,rdi
  42857b:	je     428624 <strcmp@plt+0x24e9c>
  428581:	mov    r15,rsi
  428584:	mov    r12,rdi
  428587:	mov    edx,DWORD PTR [rdi]
  428589:	cmp    edx,0xd
  42858c:	je     4285b7 <strcmp@plt+0x24e2f>
  42858e:	cmp    edx,0xa
  428591:	jne    4285f1 <strcmp@plt+0x24e69>
  428593:	mov    rax,QWORD PTR [r12+0x8]
  428598:	mov    rax,QWORD PTR [rax]
  42859b:	mov    rax,QWORD PTR [rax]
  42859e:	mov    rbx,QWORD PTR [rax+0x10]
  4285a2:	mov    rdi,QWORD PTR [rbx+0x8]
  4285a6:	call   422fa0 <strcmp@plt+0x1f818>
  4285ab:	mov    QWORD PTR [rbx+0x8],r15
  4285af:	mov    r14d,0x1
  4285b5:	jmp    428618 <strcmp@plt+0x24e90>
  4285b7:	mov    rax,QWORD PTR [r12+0x8]
  4285bc:	mov    rax,QWORD PTR [rax]
  4285bf:	mov    rbx,QWORD PTR [rax+0x8]
  4285c3:	mov    r14d,0x1
  4285c9:	cmp    rbx,rax
  4285cc:	je     428618 <strcmp@plt+0x24e90>
  4285ce:	xchg   ax,ax
  4285d0:	mov    rbp,QWORD PTR [rbx+0x10]
  4285d4:	mov    rdi,QWORD PTR [rbp+0x0]
  4285d8:	call   422fa0 <strcmp@plt+0x1f818>
  4285dd:	mov    QWORD PTR [rbp+0x0],r15
  4285e1:	mov    rbx,QWORD PTR [rbx+0x8]
  4285e5:	mov    rax,QWORD PTR [r12+0x8]
  4285ea:	cmp    rbx,QWORD PTR [rax]
  4285ed:	jne    4285d0 <strcmp@plt+0x24e48>
  4285ef:	jmp    428618 <strcmp@plt+0x24e90>
  4285f1:	lea    rax,[rip+0x3c7b8]        # 464db0 <strcmp@plt+0x61628>
  4285f8:	cmp    DWORD PTR [rax],0x0
  4285fb:	jle    428615 <strcmp@plt+0x24e8d>
  4285fd:	lea    rsi,[rip+0x22133]        # 44a737 <strcmp@plt+0x46faf>
  428604:	xor    r14d,r14d
  428607:	mov    edi,0x5
  42860c:	xor    eax,eax
  42860e:	call   42e800 <strcmp@plt+0x2b078>
  428613:	jmp    428618 <strcmp@plt+0x24e90>
  428615:	xor    r14d,r14d
  428618:	mov    eax,r14d
  42861b:	pop    rbx
  42861c:	pop    r12
  42861e:	pop    r14
  428620:	pop    r15
  428622:	pop    rbp
  428623:	ret    
  428624:	lea    rdi,[rip+0x2154d]        # 449b78 <strcmp@plt+0x463f0>
  42862b:	lea    rsi,[rip+0x2154b]        # 449b7d <strcmp@plt+0x463f5>
  428632:	lea    rcx,[rip+0x21658]        # 449c91 <strcmp@plt+0x46509>
  428639:	mov    edx,0xdb
  42863e:	call   4032b0 <__assert_fail@plt>
  428643:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42864d:	nop    DWORD PTR [rax]
  428650:	mov    edi,0x10
  428655:	jmp    432070 <strcmp@plt+0x2e8e8>
  42865a:	nop    WORD PTR [rax+rax*1+0x0]
  428660:	push   rbp
  428661:	push   r15
  428663:	push   r14
  428665:	push   r13
  428667:	push   r12
  428669:	push   rbx
  42866a:	push   rax
  42866b:	mov    DWORD PTR [rsp+0x4],r9d
  428670:	mov    r15d,r8d
  428673:	mov    r12d,ecx
  428676:	mov    r13d,edx
  428679:	mov    ebp,esi
  42867b:	mov    r14,rdi
  42867e:	mov    edi,0x10
  428683:	call   432070 <strcmp@plt+0x2e8e8>
  428688:	mov    rbx,rax
  42868b:	test   rax,rax
  42868e:	je     4286c0 <strcmp@plt+0x24f38>
  428690:	mov    rdi,r14
  428693:	call   423740 <strcmp@plt+0x1ffb8>
  428698:	mov    QWORD PTR [rbx],rax
  42869b:	mov    BYTE PTR [rbx+0x8],bpl
  42869f:	mov    BYTE PTR [rbx+0x9],r13b
  4286a3:	mov    BYTE PTR [rbx+0xa],r12b
  4286a7:	mov    BYTE PTR [rbx+0xb],r15b
  4286ab:	mov    eax,DWORD PTR [rsp+0x4]
  4286af:	mov    BYTE PTR [rbx+0xc],al
  4286b2:	mov    al,BYTE PTR [rsp+0x40]
  4286b6:	mov    BYTE PTR [rbx+0xd],al
  4286b9:	mov    al,BYTE PTR [rsp+0x48]
  4286bd:	mov    BYTE PTR [rbx+0xe],al
  4286c0:	mov    rax,rbx
  4286c3:	add    rsp,0x8
  4286c7:	pop    rbx
  4286c8:	pop    r12
  4286ca:	pop    r13
  4286cc:	pop    r14
  4286ce:	pop    r15
  4286d0:	pop    rbp
  4286d1:	ret    
  4286d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4286dc:	nop    DWORD PTR [rax+0x0]
  4286e0:	movsxd rax,DWORD PTR [rip+0x45aed]        # 46e1d4 <strcmp@plt+0x6aa4c>
  4286e7:	test   rdi,rdi
  4286ea:	je     428866 <strcmp@plt+0x250de>
  4286f0:	push   rbp
  4286f1:	push   r15
  4286f3:	push   r14
  4286f5:	push   r13
  4286f7:	push   r12
  4286f9:	push   rbx
  4286fa:	push   rax
  4286fb:	mov    r15,rdi
  4286fe:	add    eax,0x1
  428701:	cdqe   
  428703:	imul   rcx,rax,0x66666667
  42870a:	mov    rdx,rcx
  42870d:	shr    rdx,0x3f
  428711:	sar    rcx,0x21
  428715:	add    ecx,edx
  428717:	lea    ecx,[rcx+rcx*4]
  42871a:	sub    eax,ecx
  42871c:	mov    DWORD PTR [rip+0x45ab2],eax        # 46e1d4 <strcmp@plt+0x6aa4c>
  428722:	cdqe   
  428724:	imul   rax,rax,0x1f4
  42872b:	lea    rbp,[rip+0x450de]        # 46d810 <strcmp@plt+0x6a088>
  428732:	lea    r12,[rax+rbp*1]
  428736:	mov    BYTE PTR [rax+rbp*1],0x0
  42873a:	mov    rdi,r12
  42873d:	call   4031e0 <strlen@plt>
  428742:	add    r12,rax
  428745:	mov    r14d,0x1f4
  42874b:	mov    ebx,0x1f4
  428750:	sub    rbx,rax
  428753:	mov    rdi,QWORD PTR [r15]
  428756:	call   423130 <strcmp@plt+0x1f9a8>
  42875b:	mov    rcx,rax
  42875e:	lea    r13,[rip+0x23cf6]        # 44c45b <strcmp@plt+0x48cd3>
  428765:	xor    eax,eax
  428767:	mov    rdi,r12
  42876a:	mov    rsi,rbx
  42876d:	mov    rdx,r13
  428770:	call   403620 <snprintf@plt>
  428775:	movsxd rax,DWORD PTR [rip+0x45a58]        # 46e1d4 <strcmp@plt+0x6aa4c>
  42877c:	imul   rbx,rax,0x1f4
  428783:	add    rbx,rbp
  428786:	mov    rdi,rbx
  428789:	call   4031e0 <strlen@plt>
  42878e:	add    rbx,rax
  428791:	mov    esi,0x1f4
  428796:	sub    rsi,rax
  428799:	cmp    BYTE PTR [r15+0x8],0x0
  42879e:	lea    rax,[rip+0x2201e]        # 44a7c3 <strcmp@plt+0x4703b>
  4287a5:	lea    rcx,[rip+0x22014]        # 44a7c0 <strcmp@plt+0x47038>
  4287ac:	cmove  rcx,rax
  4287b0:	xor    eax,eax
  4287b2:	mov    rdi,rbx
  4287b5:	mov    rdx,r13
  4287b8:	call   403620 <snprintf@plt>
  4287bd:	movsxd rax,DWORD PTR [rip+0x45a10]        # 46e1d4 <strcmp@plt+0x6aa4c>
  4287c4:	imul   rbx,rax,0x1f4
  4287cb:	add    rbx,rbp
  4287ce:	mov    rdi,rbx
  4287d1:	call   4031e0 <strlen@plt>
  4287d6:	add    rbx,rax
  4287d9:	mov    esi,0x1f4
  4287de:	sub    rsi,rax
  4287e1:	movzx  ecx,BYTE PTR [r15+0x9]
  4287e6:	movzx  r8d,BYTE PTR [r15+0xa]
  4287eb:	lea    rdx,[rip+0x21fd6]        # 44a7c8 <strcmp@plt+0x47040>
  4287f2:	xor    eax,eax
  4287f4:	mov    rdi,rbx
  4287f7:	call   403620 <snprintf@plt>
  4287fc:	movsxd rax,DWORD PTR [rip+0x459d1]        # 46e1d4 <strcmp@plt+0x6aa4c>
  428803:	imul   rbx,rax,0x1f4
  42880a:	add    rbx,rbp
  42880d:	mov    rdi,rbx
  428810:	call   4031e0 <strlen@plt>
  428815:	add    rbx,rax
  428818:	sub    r14,rax
  42881b:	movzx  ecx,BYTE PTR [r15+0xb]
  428820:	movzx  r8d,BYTE PTR [r15+0xc]
  428825:	movzx  r9d,BYTE PTR [r15+0xd]
  42882a:	movzx  eax,BYTE PTR [r15+0xe]
  42882f:	mov    DWORD PTR [rsp],eax
  428832:	lea    rdx,[rip+0x21f9c]        # 44a7d5 <strcmp@plt+0x4704d>
  428839:	xor    eax,eax
  42883b:	mov    rdi,rbx
  42883e:	mov    rsi,r14
  428841:	call   403620 <snprintf@plt>
  428846:	movsxd rax,DWORD PTR [rip+0x45987]        # 46e1d4 <strcmp@plt+0x6aa4c>
  42884d:	imul   rax,rax,0x1f4
  428854:	add    rax,rbp
  428857:	add    rsp,0x8
  42885b:	pop    rbx
  42885c:	pop    r12
  42885e:	pop    r13
  428860:	pop    r14
  428862:	pop    r15
  428864:	pop    rbp
  428865:	ret    
  428866:	imul   rcx,rax,0x1f4
  42886d:	lea    rdx,[rip+0x44f9c]        # 46d810 <strcmp@plt+0x6a088>
  428874:	lea    rax,[rdx+rcx*1]
  428878:	mov    BYTE PTR [rcx+rdx*1+0x6],0x0
  42887d:	mov    WORD PTR [rcx+rdx*1+0x4],0x5f4c
  428884:	mov    DWORD PTR [rcx+rdx*1],0x4c554e5f
  42888b:	ret    
  42888c:	nop    DWORD PTR [rax+0x0]
  428890:	push   rbp
  428891:	push   r14
  428893:	push   rbx
  428894:	mov    r14,rsi
  428897:	mov    rbx,rdi
  42889a:	mov    al,BYTE PTR [rdi+0x5]
  42889d:	and    al,0x5
  42889f:	cmp    al,0x4
  4288a1:	setne  bpl
  4288a5:	mov    rsi,QWORD PTR [rsi]
  4288a8:	test   rsi,rsi
  4288ab:	jne    4288ba <strcmp@plt+0x25132>
  4288ad:	xor    eax,eax
  4288af:	call   422f90 <strcmp@plt+0x1f808>
  4288b4:	mov    rsi,rax
  4288b7:	mov    QWORD PTR [r14],rax
  4288ba:	lea    rdi,[rbx+0x6]
  4288be:	call   4238c0 <strcmp@plt+0x20138>
  4288c3:	test   eax,eax
  4288c5:	jle    428902 <strcmp@plt+0x2517a>
  4288c7:	mov    BYTE PTR [r14+0x8],bpl
  4288cb:	mov    cl,BYTE PTR [rbx+0x5]
  4288ce:	shr    cl,0x2
  4288d1:	and    cl,0x1
  4288d4:	mov    BYTE PTR [r14+0x9],cl
  4288d8:	mov    cl,BYTE PTR [rbx+0x5]
  4288db:	and    cl,0x1
  4288de:	mov    BYTE PTR [r14+0xa],cl
  4288e2:	mov    cl,BYTE PTR [rbx]
  4288e4:	mov    BYTE PTR [r14+0xb],cl
  4288e8:	mov    cl,BYTE PTR [rbx+0x1]
  4288eb:	mov    BYTE PTR [r14+0xc],cl
  4288ef:	mov    cl,BYTE PTR [rbx+0x2]
  4288f2:	mov    BYTE PTR [r14+0xd],cl
  4288f6:	mov    cl,BYTE PTR [rbx+0x3]
  4288f9:	mov    BYTE PTR [r14+0xe],cl
  4288fd:	add    eax,0x6
  428900:	jmp    428904 <strcmp@plt+0x2517c>
  428902:	xor    eax,eax
  428904:	pop    rbx
  428905:	pop    r14
  428907:	pop    rbp
  428908:	ret    
  428909:	nop    DWORD PTR [rax+0x0]
  428910:	push   r14
  428912:	push   rbx
  428913:	push   rax
  428914:	mov    r14,rsi
  428917:	mov    rbx,rdi
  42891a:	mov    rdi,QWORD PTR [rdi]
  42891d:	mov    rsi,QWORD PTR [rsi]
  428920:	call   423970 <strcmp@plt+0x201e8>
  428925:	mov    ecx,eax
  428927:	mov    eax,0x1
  42892c:	test   ecx,ecx
  42892e:	jne    428957 <strcmp@plt+0x251cf>
  428930:	mov    cl,BYTE PTR [rbx+0xb]
  428933:	cmp    cl,BYTE PTR [r14+0xb]
  428937:	jne    428957 <strcmp@plt+0x251cf>
  428939:	mov    cl,BYTE PTR [rbx+0xc]
  42893c:	cmp    cl,BYTE PTR [r14+0xc]
  428940:	jne    428957 <strcmp@plt+0x251cf>
  428942:	mov    cl,BYTE PTR [rbx+0xd]
  428945:	cmp    cl,BYTE PTR [r14+0xd]
  428949:	jne    428957 <strcmp@plt+0x251cf>
  42894b:	mov    cl,BYTE PTR [rbx+0xe]
  42894e:	xor    eax,eax
  428950:	cmp    cl,BYTE PTR [r14+0xe]
  428954:	setne  al
  428957:	add    rsp,0x8
  42895b:	pop    rbx
  42895c:	pop    r14
  42895e:	ret    
  42895f:	nop
  428960:	test   rdi,rdi
  428963:	je     42897a <strcmp@plt+0x251f2>
  428965:	push   rbx
  428966:	mov    rbx,rdi
  428969:	mov    rdi,QWORD PTR [rdi]
  42896c:	call   422fa0 <strcmp@plt+0x1f818>
  428971:	mov    rdi,rbx
  428974:	pop    rbx
  428975:	jmp    403780 <free@plt>
  42897a:	ret    
  42897b:	nop    DWORD PTR [rax+rax*1+0x0]
  428980:	push   rbp
  428981:	push   r15
  428983:	push   r14
  428985:	push   r13
  428987:	push   r12
  428989:	push   rbx
  42898a:	push   rax
  42898b:	mov    r14,QWORD PTR [rdi]
  42898e:	mov    bpl,BYTE PTR [rdi+0x8]
  428992:	mov    r15b,BYTE PTR [rdi+0x9]
  428996:	mov    r12b,BYTE PTR [rdi+0xa]
  42899a:	mov    r13b,BYTE PTR [rdi+0xb]
  42899e:	mov    al,BYTE PTR [rdi+0xc]
  4289a1:	mov    BYTE PTR [rsp+0x7],al
  4289a5:	mov    al,BYTE PTR [rdi+0xd]
  4289a8:	mov    BYTE PTR [rsp+0x6],al
  4289ac:	mov    al,BYTE PTR [rdi+0xe]
  4289af:	mov    BYTE PTR [rsp+0x5],al
  4289b3:	mov    edi,0x10
  4289b8:	call   432070 <strcmp@plt+0x2e8e8>
  4289bd:	mov    rbx,rax
  4289c0:	test   rax,rax
  4289c3:	je     4289f5 <strcmp@plt+0x2526d>
  4289c5:	mov    rdi,r14
  4289c8:	call   423740 <strcmp@plt+0x1ffb8>
  4289cd:	mov    QWORD PTR [rbx],rax
  4289d0:	mov    BYTE PTR [rbx+0x8],bpl
  4289d4:	mov    BYTE PTR [rbx+0x9],r15b
  4289d8:	mov    BYTE PTR [rbx+0xa],r12b
  4289dc:	mov    BYTE PTR [rbx+0xb],r13b
  4289e0:	mov    al,BYTE PTR [rsp+0x7]
  4289e4:	mov    BYTE PTR [rbx+0xc],al
  4289e7:	mov    al,BYTE PTR [rsp+0x6]
  4289eb:	mov    BYTE PTR [rbx+0xd],al
  4289ee:	mov    al,BYTE PTR [rsp+0x5]
  4289f2:	mov    BYTE PTR [rbx+0xe],al
  4289f5:	mov    rax,rbx
  4289f8:	add    rsp,0x8
  4289fc:	pop    rbx
  4289fd:	pop    r12
  4289ff:	pop    r13
  428a01:	pop    r14
  428a03:	pop    r15
  428a05:	pop    rbp
  428a06:	ret    
  428a07:	nop    WORD PTR [rax+rax*1+0x0]
  428a10:	mov    rdi,QWORD PTR [rdi]
  428a13:	mov    rsi,QWORD PTR [rsi]
  428a16:	jmp    423970 <strcmp@plt+0x201e8>
  428a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  428a20:	push   rbx
  428a21:	mov    DWORD PTR [rsi],0x0
  428a27:	mov    DWORD PTR [rdx],0x0
  428a2d:	test   rdi,rdi
  428a30:	je     428a9a <strcmp@plt+0x25312>
  428a32:	cmp    DWORD PTR [rdi+0x18],0x0
  428a36:	je     428a9a <strcmp@plt+0x25312>
  428a38:	mov    rax,QWORD PTR [rdi+0x8]
  428a3c:	mov    rax,QWORD PTR [rax+0x10]
  428a40:	mov    rdi,QWORD PTR [rax]
  428a43:	mov    eax,DWORD PTR [rdi+0x18]
  428a46:	mov    DWORD PTR [rsi],eax
  428a48:	cmp    rax,0x3
  428a4c:	ja     428a9a <strcmp@plt+0x25312>
  428a4e:	mov    rbx,rdx
  428a51:	lea    rcx,[rip+0x21d58]        # 44a7b0 <strcmp@plt+0x47028>
  428a58:	movsxd rax,DWORD PTR [rcx+rax*4]
  428a5c:	add    rax,rcx
  428a5f:	jmp    rax
  428a61:	mov    DWORD PTR [rbx],0x0
  428a67:	pop    rbx
  428a68:	ret    
  428a69:	call   423200 <strcmp@plt+0x1fa78>
  428a6e:	movzx  eax,ax
  428a71:	jmp    428a98 <strcmp@plt+0x25310>
  428a73:	lea    rax,[rip+0x3c336]        # 464db0 <strcmp@plt+0x61628>
  428a7a:	cmp    DWORD PTR [rax],0x2
  428a7d:	jl     428a9a <strcmp@plt+0x25312>
  428a7f:	lea    rsi,[rip+0x21d5d]        # 44a7e3 <strcmp@plt+0x4705b>
  428a86:	mov    edi,0x6
  428a8b:	xor    eax,eax
  428a8d:	pop    rbx
  428a8e:	jmp    42e800 <strcmp@plt+0x2b078>
  428a93:	call   423330 <strcmp@plt+0x1fba8>
  428a98:	mov    DWORD PTR [rbx],eax
  428a9a:	pop    rbx
  428a9b:	ret    
  428a9c:	nop    DWORD PTR [rax+0x0]
  428aa0:	push   r15
  428aa2:	push   r14
  428aa4:	push   r12
  428aa6:	push   rbx
  428aa7:	push   rax
  428aa8:	test   rdi,rdi
  428aab:	je     428aed <strcmp@plt+0x25365>
  428aad:	mov    r14,rsi
  428ab0:	xor    r12d,r12d
  428ab3:	test   rsi,rsi
  428ab6:	je     428af0 <strcmp@plt+0x25368>
  428ab8:	mov    r15,rdi
  428abb:	mov    eax,DWORD PTR [rdi+0x18]
  428abe:	test   eax,eax
  428ac0:	je     428af0 <strcmp@plt+0x25368>
  428ac2:	mov    rbx,QWORD PTR [r15+0x8]
  428ac6:	cmp    rbx,r15
  428ac9:	je     428aed <strcmp@plt+0x25365>
  428acb:	nop    DWORD PTR [rax+rax*1+0x0]
  428ad0:	mov    r12,QWORD PTR [rbx+0x10]
  428ad4:	mov    rdi,QWORD PTR [r12]
  428ad8:	mov    rsi,r14
  428adb:	call   423970 <strcmp@plt+0x201e8>
  428ae0:	test   eax,eax
  428ae2:	je     428af0 <strcmp@plt+0x25368>
  428ae4:	mov    rbx,QWORD PTR [rbx+0x8]
  428ae8:	cmp    rbx,r15
  428aeb:	jne    428ad0 <strcmp@plt+0x25348>
  428aed:	xor    r12d,r12d
  428af0:	mov    rax,r12
  428af3:	add    rsp,0x8
  428af7:	pop    rbx
  428af8:	pop    r12
  428afa:	pop    r14
  428afc:	pop    r15
  428afe:	ret    
  428aff:	nop
  428b00:	push   r15
  428b02:	push   r14
  428b04:	push   r12
  428b06:	push   rbx
  428b07:	push   rax
  428b08:	test   rdi,rdi
  428b0b:	je     428b5a <strcmp@plt+0x253d2>
  428b0d:	mov    r15,rsi
  428b10:	xor    r12d,r12d
  428b13:	test   rsi,rsi
  428b16:	je     428b5d <strcmp@plt+0x253d5>
  428b18:	mov    r14,rdi
  428b1b:	mov    eax,DWORD PTR [rdi+0x18]
  428b1e:	test   eax,eax
  428b20:	je     428b5d <strcmp@plt+0x253d5>
  428b22:	mov    rbx,QWORD PTR [r14+0x8]
  428b26:	cmp    rbx,r14
  428b29:	jne    428b39 <strcmp@plt+0x253b1>
  428b2b:	jmp    428b5a <strcmp@plt+0x253d2>
  428b2d:	nop    DWORD PTR [rax]
  428b30:	mov    rbx,QWORD PTR [rbx+0x8]
  428b34:	cmp    rbx,r14
  428b37:	je     428b5a <strcmp@plt+0x253d2>
  428b39:	mov    r12,QWORD PTR [rbx+0x10]
  428b3d:	mov    rdi,QWORD PTR [r12]
  428b41:	mov    rsi,r15
  428b44:	call   423970 <strcmp@plt+0x201e8>
  428b49:	test   eax,eax
  428b4b:	jne    428b30 <strcmp@plt+0x253a8>
  428b4d:	mov    rdi,rbx
  428b50:	mov    rsi,r14
  428b53:	call   42bfc0 <strcmp@plt+0x28838>
  428b58:	jmp    428b5d <strcmp@plt+0x253d5>
  428b5a:	xor    r12d,r12d
  428b5d:	mov    rax,r12
  428b60:	add    rsp,0x8
  428b64:	pop    rbx
  428b65:	pop    r12
  428b67:	pop    r14
  428b69:	pop    r15
  428b6b:	ret    
  428b6c:	nop    DWORD PTR [rax+0x0]
  428b70:	xor    eax,eax
  428b72:	test   rdi,rdi
  428b75:	je     428bc1 <strcmp@plt+0x25439>
  428b77:	test   rsi,rsi
  428b7a:	je     428bc1 <strcmp@plt+0x25439>
  428b7c:	mov    rcx,rdi
  428b7f:	mov    edx,DWORD PTR [rdi+0x18]
  428b82:	test   edx,edx
  428b84:	je     428bc1 <strcmp@plt+0x25439>
  428b86:	mov    rdi,QWORD PTR [rcx+0x8]
  428b8a:	mov    eax,0xfffffffa
  428b8f:	cmp    rdi,rcx
  428b92:	jne    428ba9 <strcmp@plt+0x25421>
  428b94:	jmp    428bc1 <strcmp@plt+0x25439>
  428b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428ba0:	mov    rdi,QWORD PTR [rdi+0x8]
  428ba4:	cmp    rdi,rcx
  428ba7:	je     428bc1 <strcmp@plt+0x25439>
  428ba9:	cmp    QWORD PTR [rdi+0x10],rsi
  428bad:	jne    428ba0 <strcmp@plt+0x25418>
  428baf:	push   rax
  428bb0:	mov    rsi,rcx
  428bb3:	call   42bfc0 <strcmp@plt+0x28838>
  428bb8:	mov    eax,0x1
  428bbd:	add    rsp,0x8
  428bc1:	ret    
  428bc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428bcc:	nop    DWORD PTR [rax+0x0]
  428bd0:	push   rbp
  428bd1:	push   r15
  428bd3:	push   r14
  428bd5:	push   r13
  428bd7:	push   r12
  428bd9:	push   rbx
  428bda:	sub    rsp,0x18
  428bde:	test   rdi,rdi
  428be1:	je     428cd2 <strcmp@plt+0x2554a>
  428be7:	mov    rbp,rdi
  428bea:	cmp    DWORD PTR [rdi+0x18],0x0
  428bee:	je     428cd2 <strcmp@plt+0x2554a>
  428bf4:	lea    rdi,[rip+0xfffffffffffffe15]        # 428a10 <strcmp@plt+0x25288>
  428bfb:	lea    rsi,[rip+0xfffffffffffffd5e]        # 428960 <strcmp@plt+0x251d8>
  428c02:	call   42bb90 <strcmp@plt+0x28408>
  428c07:	mov    rbx,rax
  428c0a:	mov    r13,QWORD PTR [rbp+0x8]
  428c0e:	cmp    r13,rbp
  428c11:	je     428cd4 <strcmp@plt+0x2554c>
  428c17:	mov    QWORD PTR [rsp+0x10],rbx
  428c1c:	mov    QWORD PTR [rsp+0x8],rbp
  428c21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  428c30:	mov    rax,QWORD PTR [r13+0x10]
  428c34:	mov    r12,QWORD PTR [rax]
  428c37:	movzx  ebp,BYTE PTR [rax+0x8]
  428c3b:	movzx  r14d,BYTE PTR [rax+0x9]
  428c40:	movzx  r15d,BYTE PTR [rax+0xa]
  428c45:	movzx  ecx,BYTE PTR [rax+0xb]
  428c49:	mov    BYTE PTR [rsp+0x7],cl
  428c4d:	movzx  ecx,BYTE PTR [rax+0xc]
  428c51:	mov    BYTE PTR [rsp+0x6],cl
  428c55:	movzx  ecx,BYTE PTR [rax+0xd]
  428c59:	mov    BYTE PTR [rsp+0x5],cl
  428c5d:	movzx  eax,BYTE PTR [rax+0xe]
  428c61:	mov    BYTE PTR [rsp+0x4],al
  428c65:	mov    edi,0x10
  428c6a:	call   432070 <strcmp@plt+0x2e8e8>
  428c6f:	mov    rbx,rax
  428c72:	test   rax,rax
  428c75:	je     428cae <strcmp@plt+0x25526>
  428c77:	mov    rdi,r12
  428c7a:	call   423740 <strcmp@plt+0x1ffb8>
  428c7f:	mov    QWORD PTR [rbx],rax
  428c82:	mov    BYTE PTR [rbx+0x8],bpl
  428c86:	mov    BYTE PTR [rbx+0x9],r14b
  428c8a:	mov    BYTE PTR [rbx+0xa],r15b
  428c8e:	movzx  eax,BYTE PTR [rsp+0x7]
  428c93:	mov    BYTE PTR [rbx+0xb],al
  428c96:	movzx  eax,BYTE PTR [rsp+0x6]
  428c9b:	mov    BYTE PTR [rbx+0xc],al
  428c9e:	movzx  eax,BYTE PTR [rsp+0x5]
  428ca3:	mov    BYTE PTR [rbx+0xd],al
  428ca6:	movzx  eax,BYTE PTR [rsp+0x4]
  428cab:	mov    BYTE PTR [rbx+0xe],al
  428cae:	mov    rdi,rbx
  428cb1:	mov    rbx,QWORD PTR [rsp+0x10]
  428cb6:	mov    rsi,rbx
  428cb9:	call   42bcf0 <strcmp@plt+0x28568>
  428cbe:	mov    r13,QWORD PTR [r13+0x8]
  428cc2:	mov    rbp,QWORD PTR [rsp+0x8]
  428cc7:	cmp    r13,rbp
  428cca:	jne    428c30 <strcmp@plt+0x254a8>
  428cd0:	jmp    428cd4 <strcmp@plt+0x2554c>
  428cd2:	xor    ebx,ebx
  428cd4:	mov    rax,rbx
  428cd7:	add    rsp,0x18
  428cdb:	pop    rbx
  428cdc:	pop    r12
  428cde:	pop    r13
  428ce0:	pop    r14
  428ce2:	pop    r15
  428ce4:	pop    rbp
  428ce5:	ret    
  428ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428cf0:	test   rdi,rdi
  428cf3:	je     428d45 <strcmp@plt+0x255bd>
  428cf5:	test   rsi,rsi
  428cf8:	je     428d45 <strcmp@plt+0x255bd>
  428cfa:	cmp    DWORD PTR [rdi+0x18],0x0
  428cfe:	je     428d21 <strcmp@plt+0x25599>
  428d00:	cmp    DWORD PTR [rsi+0x18],0x0
  428d04:	je     428d21 <strcmp@plt+0x25599>
  428d06:	mov    rax,QWORD PTR [rdi+0x8]
  428d0a:	mov    rax,QWORD PTR [rax+0x10]
  428d0e:	mov    rcx,QWORD PTR [rsi+0x8]
  428d12:	mov    rcx,QWORD PTR [rcx+0x10]
  428d16:	mov    rdi,QWORD PTR [rax]
  428d19:	mov    rsi,QWORD PTR [rcx]
  428d1c:	jmp    423a90 <strcmp@plt+0x20308>
  428d21:	lea    rax,[rip+0x3c088]        # 464db0 <strcmp@plt+0x61628>
  428d28:	cmp    DWORD PTR [rax],0x2
  428d2b:	jl     428d45 <strcmp@plt+0x255bd>
  428d2d:	push   rax
  428d2e:	lea    rsi,[rip+0x21aef]        # 44a824 <strcmp@plt+0x4709c>
  428d35:	mov    edi,0x6
  428d3a:	xor    eax,eax
  428d3c:	call   42e800 <strcmp@plt+0x2b078>
  428d41:	add    rsp,0x8
  428d45:	mov    eax,0xfffffffe
  428d4a:	ret    
  428d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  428d50:	test   rdi,rdi
  428d53:	je     428da5 <strcmp@plt+0x2561d>
  428d55:	test   rsi,rsi
  428d58:	je     428da5 <strcmp@plt+0x2561d>
  428d5a:	cmp    DWORD PTR [rdi+0x18],0x0
  428d5e:	je     428d81 <strcmp@plt+0x255f9>
  428d60:	cmp    DWORD PTR [rsi+0x18],0x0
  428d64:	je     428d81 <strcmp@plt+0x255f9>
  428d66:	mov    rax,QWORD PTR [rdi+0x8]
  428d6a:	mov    rax,QWORD PTR [rax+0x10]
  428d6e:	mov    rcx,QWORD PTR [rsi+0x8]
  428d72:	mov    rcx,QWORD PTR [rcx+0x10]
  428d76:	mov    rdi,QWORD PTR [rax]
  428d79:	mov    rsi,QWORD PTR [rcx]
  428d7c:	jmp    423a90 <strcmp@plt+0x20308>
  428d81:	lea    rax,[rip+0x3c028]        # 464db0 <strcmp@plt+0x61628>
  428d88:	cmp    DWORD PTR [rax],0x2
  428d8b:	jl     428da5 <strcmp@plt+0x2561d>
  428d8d:	push   rax
  428d8e:	lea    rsi,[rip+0x21a8f]        # 44a824 <strcmp@plt+0x4709c>
  428d95:	mov    edi,0x6
  428d9a:	xor    eax,eax
  428d9c:	call   42e800 <strcmp@plt+0x2b078>
  428da1:	add    rsp,0x8
  428da5:	mov    eax,0xfffffffe
  428daa:	ret    
  428dab:	nop    DWORD PTR [rax+rax*1+0x0]
  428db0:	push   r14
  428db2:	push   rbx
  428db3:	push   rax
  428db4:	mov    r14,rsi
  428db7:	mov    rbx,rdi
  428dba:	mov    rdi,QWORD PTR [rdi]
  428dbd:	test   rdi,rdi
  428dc0:	jne    428dcf <strcmp@plt+0x25647>
  428dc2:	xor    eax,eax
  428dc4:	call   422f90 <strcmp@plt+0x1f808>
  428dc9:	mov    rdi,rax
  428dcc:	mov    QWORD PTR [rbx],rax
  428dcf:	mov    rsi,r14
  428dd2:	add    rsp,0x8
  428dd6:	pop    rbx
  428dd7:	pop    r14
  428dd9:	jmp    423560 <strcmp@plt+0x1fdd8>
  428dde:	xchg   ax,ax
  428de0:	push   rbx
  428de1:	mov    edi,0x40
  428de6:	call   432070 <strcmp@plt+0x2e8e8>
  428deb:	test   rax,rax
  428dee:	je     428e17 <strcmp@plt+0x2568f>
  428df0:	mov    rbx,rax
  428df3:	lea    rdi,[rip+0xffffffffffffff56]        # 428d50 <strcmp@plt+0x255c8>
  428dfa:	lea    rsi,[rip+0x344f]        # 42c250 <strcmp@plt+0x28ac8>
  428e01:	call   42bb90 <strcmp@plt+0x28408>
  428e06:	mov    QWORD PTR [rbx+0x28],rax
  428e0a:	test   rax,rax
  428e0d:	jne    428e19 <strcmp@plt+0x25691>
  428e0f:	mov    rdi,rbx
  428e12:	call   403780 <free@plt>
  428e17:	xor    ebx,ebx
  428e19:	mov    rax,rbx
  428e1c:	pop    rbx
  428e1d:	ret    
  428e1e:	xchg   ax,ax
  428e20:	push   r14
  428e22:	push   rbx
  428e23:	push   rax
  428e24:	mov    r14,rdi
  428e27:	call   4230e0 <strcmp@plt+0x1f958>
  428e2c:	test   rax,rax
  428e2f:	jne    428e46 <strcmp@plt+0x256be>
  428e31:	mov    rdi,r14
  428e34:	call   4232e0 <strcmp@plt+0x1fb58>
  428e39:	test   rax,rax
  428e3c:	je     428ea0 <strcmp@plt+0x25718>
  428e3e:	mov    rdi,rax
  428e41:	call   4231b0 <strcmp@plt+0x1fa28>
  428e46:	mov    edi,0x40
  428e4b:	call   432070 <strcmp@plt+0x2e8e8>
  428e50:	test   rax,rax
  428e53:	je     428e89 <strcmp@plt+0x25701>
  428e55:	mov    rbx,rax
  428e58:	lea    rdi,[rip+0xfffffffffffffef1]        # 428d50 <strcmp@plt+0x255c8>
  428e5f:	lea    rsi,[rip+0x33ea]        # 42c250 <strcmp@plt+0x28ac8>
  428e66:	call   42bb90 <strcmp@plt+0x28408>
  428e6b:	mov    QWORD PTR [rbx+0x28],rax
  428e6f:	test   rax,rax
  428e72:	je     428e81 <strcmp@plt+0x256f9>
  428e74:	mov    rdi,rbx
  428e77:	mov    rsi,r14
  428e7a:	call   423560 <strcmp@plt+0x1fdd8>
  428e7f:	jmp    428ec3 <strcmp@plt+0x2573b>
  428e81:	mov    rdi,rbx
  428e84:	call   403780 <free@plt>
  428e89:	lea    rsi,[rip+0x219dc]        # 44a86c <strcmp@plt+0x470e4>
  428e90:	xor    ebx,ebx
  428e92:	mov    edi,0x3
  428e97:	xor    eax,eax
  428e99:	call   42e800 <strcmp@plt+0x2b078>
  428e9e:	jmp    428ec3 <strcmp@plt+0x2573b>
  428ea0:	mov    rdi,r14
  428ea3:	call   423130 <strcmp@plt+0x1f9a8>
  428ea8:	mov    rcx,rax
  428eab:	lea    rsi,[rip+0x21df3]        # 44aca5 <strcmp@plt+0x4751d>
  428eb2:	xor    ebx,ebx
  428eb4:	mov    edi,0x3
  428eb9:	xor    eax,eax
  428ebb:	mov    rdx,rcx
  428ebe:	call   42e800 <strcmp@plt+0x2b078>
  428ec3:	mov    rax,rbx
  428ec6:	add    rsp,0x8
  428eca:	pop    rbx
  428ecb:	pop    r14
  428ecd:	ret    
  428ece:	xchg   ax,ax
  428ed0:	test   rdi,rdi
  428ed3:	je     428ef3 <strcmp@plt+0x2576b>
  428ed5:	push   rbx
  428ed6:	mov    rbx,rdi
  428ed9:	mov    rdi,QWORD PTR [rdi+0x28]
  428edd:	call   42c250 <strcmp@plt+0x28ac8>
  428ee2:	mov    rdi,rbx
  428ee5:	call   423c30 <strcmp@plt+0x204a8>
  428eea:	mov    rdi,rbx
  428eed:	pop    rbx
  428eee:	jmp    403780 <free@plt>
  428ef3:	ret    
  428ef4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428efe:	xchg   ax,ax
  428f00:	push   rbp
  428f01:	push   r15
  428f03:	push   r14
  428f05:	push   r13
  428f07:	push   r12
  428f09:	push   rbx
  428f0a:	push   rax
  428f0b:	mov    rbx,rsi
  428f0e:	mov    r14,rdi
  428f11:	call   423970 <strcmp@plt+0x201e8>
  428f16:	test   eax,eax
  428f18:	jne    428fb4 <strcmp@plt+0x2582c>
  428f1e:	movzx  eax,WORD PTR [r14+0x20]
  428f23:	cmp    ax,WORD PTR [rbx+0x20]
  428f27:	jne    428fb4 <strcmp@plt+0x2582c>
  428f2d:	mov    rcx,QWORD PTR [r14+0x28]
  428f31:	mov    esi,DWORD PTR [rcx+0x18]
  428f34:	mov    rdx,QWORD PTR [rbx+0x28]
  428f38:	cmp    esi,DWORD PTR [rdx+0x18]
  428f3b:	jne    428fb4 <strcmp@plt+0x2582c>
  428f3d:	xor    eax,eax
  428f3f:	test   esi,esi
  428f41:	je     428f49 <strcmp@plt+0x257c1>
  428f43:	mov    r15,QWORD PTR [rdx+0x8]
  428f47:	jmp    428f4c <strcmp@plt+0x257c4>
  428f49:	xor    r15d,r15d
  428f4c:	mov    r12,QWORD PTR [rcx+0x8]
  428f50:	cmp    r12,rcx
  428f53:	jne    428f67 <strcmp@plt+0x257df>
  428f55:	jmp    428fb9 <strcmp@plt+0x25831>
  428f57:	mov    r15,QWORD PTR [r15+0x8]
  428f5b:	mov    r12,QWORD PTR [r12+0x8]
  428f60:	xor    eax,eax
  428f62:	cmp    r12,rcx
  428f65:	je     428fb9 <strcmp@plt+0x25831>
  428f67:	mov    r13,QWORD PTR [r12+0x10]
  428f6c:	mov    rax,QWORD PTR [r15+0x10]
  428f70:	mov    edx,DWORD PTR [r13+0x18]
  428f74:	cmp    edx,DWORD PTR [rax+0x18]
  428f77:	jne    428fb4 <strcmp@plt+0x2582c>
  428f79:	test   edx,edx
  428f7b:	je     428f83 <strcmp@plt+0x257fb>
  428f7d:	mov    rbx,QWORD PTR [rax+0x8]
  428f81:	jmp    428f85 <strcmp@plt+0x257fd>
  428f83:	xor    ebx,ebx
  428f85:	mov    rbp,QWORD PTR [r13+0x8]
  428f89:	cmp    rbp,r13
  428f8c:	je     428f57 <strcmp@plt+0x257cf>
  428f8e:	xchg   ax,ax
  428f90:	mov    rdi,QWORD PTR [rbp+0x10]
  428f94:	mov    rsi,QWORD PTR [rbx+0x10]
  428f98:	call   428910 <strcmp@plt+0x25188>
  428f9d:	test   eax,eax
  428f9f:	jne    428fb4 <strcmp@plt+0x2582c>
  428fa1:	mov    rbx,QWORD PTR [rbx+0x8]
  428fa5:	mov    rbp,QWORD PTR [rbp+0x8]
  428fa9:	cmp    rbp,r13
  428fac:	jne    428f90 <strcmp@plt+0x25808>
  428fae:	mov    rcx,QWORD PTR [r14+0x28]
  428fb2:	jmp    428f57 <strcmp@plt+0x257cf>
  428fb4:	mov    eax,0x1
  428fb9:	add    rsp,0x8
  428fbd:	pop    rbx
  428fbe:	pop    r12
  428fc0:	pop    r13
  428fc2:	pop    r14
  428fc4:	pop    r15
  428fc6:	pop    rbp
  428fc7:	ret    
  428fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  428fd0:	push   r14
  428fd2:	push   rbx
  428fd3:	push   rax
  428fd4:	mov    r14,rdi
  428fd7:	mov    edi,0x40
  428fdc:	call   432070 <strcmp@plt+0x2e8e8>
  428fe1:	test   rax,rax
  428fe4:	je     42900d <strcmp@plt+0x25885>
  428fe6:	mov    rbx,rax
  428fe9:	lea    rdi,[rip+0xfffffffffffffd60]        # 428d50 <strcmp@plt+0x255c8>
  428ff0:	lea    rsi,[rip+0x3259]        # 42c250 <strcmp@plt+0x28ac8>
  428ff7:	call   42bb90 <strcmp@plt+0x28408>
  428ffc:	mov    QWORD PTR [rbx+0x28],rax
  429000:	test   rax,rax
  429003:	jne    42900f <strcmp@plt+0x25887>
  429005:	mov    rdi,rbx
  429008:	call   403780 <free@plt>
  42900d:	xor    ebx,ebx
  42900f:	mov    rdi,rbx
  429012:	mov    rsi,r14
  429015:	call   423560 <strcmp@plt+0x1fdd8>
  42901a:	mov    al,BYTE PTR [r14+0x34]
  42901e:	mov    BYTE PTR [rbx+0x34],al
  429021:	mov    al,BYTE PTR [r14+0x35]
  429025:	mov    BYTE PTR [rbx+0x35],al
  429028:	mov    eax,DWORD PTR [r14+0x30]
  42902c:	mov    DWORD PTR [rbx+0x30],eax
  42902f:	mov    WORD PTR [rbx+0x20],0x0
  429035:	mov    rax,rbx
  429038:	add    rsp,0x8
  42903c:	pop    rbx
  42903d:	pop    r14
  42903f:	ret    
  429040:	push   rbp
  429041:	push   r15
  429043:	push   r14
  429045:	push   r13
  429047:	push   r12
  429049:	push   rbx
  42904a:	sub    rsp,0x18
  42904e:	mov    rbx,rdi
  429051:	mov    BYTE PTR [rip+0x45188],0x0        # 46e1e0 <strcmp@plt+0x6aa58>
  429058:	lea    r12,[rip+0x45181]        # 46e1e0 <strcmp@plt+0x6aa58>
  42905f:	call   423130 <strcmp@plt+0x1f9a8>
  429064:	mov    r15,rax
  429067:	mov    r14d,DWORD PTR [rbx+0x30]
  42906b:	movzx  r13d,WORD PTR [rbx+0x20]
  429070:	movzx  edi,BYTE PTR [rbx+0x34]
  429074:	call   42ae30 <strcmp@plt+0x276a8>
  429079:	mov    r10,rax
  42907c:	movzx  ebp,BYTE PTR [rbx+0x35]
  429080:	lea    rdx,[rip+0x2181d]        # 44a8a4 <strcmp@plt+0x4711c>
  429087:	mov    esi,0x3e8
  42908c:	mov    eax,0x0
  429091:	mov    r8d,r14d
  429094:	mov    rdi,r12
  429097:	mov    rcx,r15
  42909a:	mov    r9d,r13d
  42909d:	push   rbp
  42909e:	push   r10
  4290a0:	call   403620 <snprintf@plt>
  4290a5:	add    rsp,0x10
  4290a9:	mov    QWORD PTR [rsp],rbx
  4290ad:	cmp    WORD PTR [rbx+0x20],0x0
  4290b2:	je     4291c6 <strcmp@plt+0x25a3e>
  4290b8:	mov    rax,QWORD PTR [rsp]
  4290bc:	mov    rax,QWORD PTR [rax+0x28]
  4290c0:	mov    rdx,QWORD PTR [rax+0x8]
  4290c4:	cmp    rdx,rax
  4290c7:	je     4291c6 <strcmp@plt+0x25a3e>
  4290cd:	lea    r13,[rip+0x21807]        # 44a8db <strcmp@plt+0x47153>
  4290d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4290de:	xchg   ax,ax
  4290e0:	mov    rdi,QWORD PTR [rdx+0x10]
  4290e4:	cmp    DWORD PTR [rdi+0x18],0x0
  4290e8:	je     4291b9 <strcmp@plt+0x25a31>
  4290ee:	mov    rbp,QWORD PTR [rdi+0x8]
  4290f2:	mov    rbx,QWORD PTR [rbp+0x10]
  4290f6:	mov    rcx,QWORD PTR [rbx]
  4290f9:	cmp    DWORD PTR [rcx+0x18],0x0
  4290fd:	je     4291b9 <strcmp@plt+0x25a31>
  429103:	cmp    rbp,rdi
  429106:	je     4291b9 <strcmp@plt+0x25a31>
  42910c:	mov    QWORD PTR [rsp+0x10],rdx
  429111:	mov    QWORD PTR [rsp+0x8],rdi
  429116:	mov    rdi,r12
  429119:	call   4031e0 <strlen@plt>
  42911e:	lea    r15,[r12+rax*1]
  429122:	mov    r14,r12
  429125:	mov    r12d,0x3e8
  42912b:	sub    r12,rax
  42912e:	mov    rdi,rbx
  429131:	mov    rbx,r13
  429134:	call   4286e0 <strcmp@plt+0x24f58>
  429139:	mov    rcx,rax
  42913c:	xor    eax,eax
  42913e:	mov    rdi,r15
  429141:	mov    rsi,r12
  429144:	mov    rdx,r13
  429147:	call   403620 <snprintf@plt>
  42914c:	mov    r12,QWORD PTR [rbp+0x8]
  429150:	cmp    r12,QWORD PTR [rsp+0x8]
  429155:	je     4291a6 <strcmp@plt+0x25a1e>
  429157:	nop    WORD PTR [rax+rax*1+0x0]
  429160:	mov    r15,rbx
  429163:	mov    rbx,QWORD PTR [r12+0x10]
  429168:	mov    rdi,r14
  42916b:	call   4031e0 <strlen@plt>
  429170:	lea    r13,[r14+rax*1]
  429174:	mov    ebp,0x3e8
  429179:	sub    rbp,rax
  42917c:	mov    rdi,rbx
  42917f:	mov    rbx,r15
  429182:	call   4286e0 <strcmp@plt+0x24f58>
  429187:	mov    rcx,rax
  42918a:	xor    eax,eax
  42918c:	mov    rdi,r13
  42918f:	mov    rsi,rbp
  429192:	mov    rdx,r15
  429195:	call   403620 <snprintf@plt>
  42919a:	mov    r12,QWORD PTR [r12+0x8]
  42919f:	cmp    r12,QWORD PTR [rsp+0x8]
  4291a4:	jne    429160 <strcmp@plt+0x259d8>
  4291a6:	mov    rax,QWORD PTR [rsp]
  4291aa:	mov    rax,QWORD PTR [rax+0x28]
  4291ae:	mov    r12,r14
  4291b1:	mov    rdx,QWORD PTR [rsp+0x10]
  4291b6:	mov    r13,rbx
  4291b9:	mov    rdx,QWORD PTR [rdx+0x8]
  4291bd:	cmp    rdx,rax
  4291c0:	jne    4290e0 <strcmp@plt+0x25958>
  4291c6:	lea    rax,[rip+0x45013]        # 46e1e0 <strcmp@plt+0x6aa58>
  4291cd:	add    rsp,0x18
  4291d1:	pop    rbx
  4291d2:	pop    r12
  4291d4:	pop    r13
  4291d6:	pop    r14
  4291d8:	pop    r15
  4291da:	pop    rbp
  4291db:	ret    
  4291dc:	nop    DWORD PTR [rax+0x0]
  4291e0:	push   rbp
  4291e1:	push   r15
  4291e3:	push   r14
  4291e5:	push   r12
  4291e7:	push   rbx
  4291e8:	mov    r15,rsi
  4291eb:	mov    r14,rdi
  4291ee:	mov    r12,QWORD PTR [rsi]
  4291f1:	mov    ebx,DWORD PTR [r12+0x18]
  4291f6:	mov    rdi,r12
  4291f9:	call   423c80 <strcmp@plt+0x204f8>
  4291fe:	mov    rdi,r14
  429201:	mov    esi,ebx
  429203:	mov    edx,eax
  429205:	call   429550 <strcmp@plt+0x25dc8>
  42920a:	test   rax,rax
  42920d:	je     4292b8 <strcmp@plt+0x25b30>
  429213:	mov    rbx,rax
  429216:	mov    rdi,r15
  429219:	mov    rsi,rax
  42921c:	call   42be80 <strcmp@plt+0x286f8>
  429221:	cmp    al,0x1
  429223:	jne    4292e7 <strcmp@plt+0x25b5f>
  429229:	lea    rax,[rip+0x3bb80]        # 464db0 <strcmp@plt+0x61628>
  429230:	cmp    DWORD PTR [rax],0x2
  429233:	jl     429261 <strcmp@plt+0x25ad9>
  429235:	mov    rdi,QWORD PTR [r15]
  429238:	call   423130 <strcmp@plt+0x1f9a8>
  42923d:	mov    rbp,rax
  429240:	mov    rdi,r14
  429243:	call   423130 <strcmp@plt+0x1f9a8>
  429248:	mov    rcx,rax
  42924b:	lea    rsi,[rip+0x21695]        # 44a8e7 <strcmp@plt+0x4715f>
  429252:	mov    edi,0x6
  429257:	xor    eax,eax
  429259:	mov    rdx,rbp
  42925c:	call   42e800 <strcmp@plt+0x2b078>
  429261:	mov    rbp,QWORD PTR [r15]
  429264:	mov    r12d,DWORD PTR [rbp+0x18]
  429268:	mov    rdi,rbp
  42926b:	call   423c80 <strcmp@plt+0x204f8>
  429270:	mov    rdi,r14
  429273:	mov    esi,r12d
  429276:	mov    edx,eax
  429278:	call   429550 <strcmp@plt+0x25dc8>
  42927d:	mov    rdi,rax
  429280:	mov    rsi,rbp
  429283:	call   428aa0 <strcmp@plt+0x25318>
  429288:	mov    cl,BYTE PTR [rax+0xb]
  42928b:	mov    ebp,0xfffffffb
  429290:	cmp    cl,BYTE PTR [r15+0xb]
  429294:	jbe    429358 <strcmp@plt+0x25bd0>
  42929a:	mov    rdi,rax
  42929d:	mov    rsi,rbx
  4292a0:	call   42c170 <strcmp@plt+0x289e8>
  4292a5:	mov    rdi,r15
  4292a8:	mov    rsi,rbx
  4292ab:	pop    rbx
  4292ac:	pop    r12
  4292ae:	pop    r14
  4292b0:	pop    r15
  4292b2:	pop    rbp
  4292b3:	jmp    42bcf0 <strcmp@plt+0x28568>
  4292b8:	lea    rdi,[rip+0xfffffffffffff751]        # 428a10 <strcmp@plt+0x25288>
  4292bf:	lea    rsi,[rip+0xfffffffffffff69a]        # 428960 <strcmp@plt+0x251d8>
  4292c6:	call   42bb90 <strcmp@plt+0x28408>
  4292cb:	mov    rbx,rax
  4292ce:	mov    rdi,r15
  4292d1:	mov    rsi,rax
  4292d4:	call   42bcf0 <strcmp@plt+0x28568>
  4292d9:	cmp    eax,0x1
  4292dc:	jne    429344 <strcmp@plt+0x25bbc>
  4292de:	mov    rsi,QWORD PTR [r14+0x28]
  4292e2:	mov    rdi,rbx
  4292e5:	jmp    4292ed <strcmp@plt+0x25b65>
  4292e7:	mov    rdi,r15
  4292ea:	mov    rsi,rbx
  4292ed:	call   42bcf0 <strcmp@plt+0x28568>
  4292f2:	cmp    eax,0x1
  4292f5:	jne    429344 <strcmp@plt+0x25bbc>
  4292f7:	lea    rax,[rip+0x3bab2]        # 464db0 <strcmp@plt+0x61628>
  4292fe:	cmp    DWORD PTR [rax],0x2
  429301:	jl     42932f <strcmp@plt+0x25ba7>
  429303:	mov    rdi,r15
  429306:	call   4286e0 <strcmp@plt+0x24f58>
  42930b:	mov    rbx,rax
  42930e:	mov    rdi,r14
  429311:	call   423130 <strcmp@plt+0x1f9a8>
  429316:	mov    rcx,rax
  429319:	lea    rsi,[rip+0x21630]        # 44a950 <strcmp@plt+0x471c8>
  429320:	mov    edi,0x6
  429325:	xor    eax,eax
  429327:	mov    rdx,rbx
  42932a:	call   42e800 <strcmp@plt+0x2b078>
  42932f:	mov    ebp,0x1
  429334:	cmp    DWORD PTR [r12+0x18],0x0
  42933a:	je     429358 <strcmp@plt+0x25bd0>
  42933c:	add    WORD PTR [r14+0x20],0x1
  429342:	jmp    429358 <strcmp@plt+0x25bd0>
  429344:	xor    ebp,ebp
  429346:	cmp    DWORD PTR [rbx+0x18],0x0
  42934a:	jne    429358 <strcmp@plt+0x25bd0>
  42934c:	mov    rsi,QWORD PTR [r14+0x28]
  429350:	mov    rdi,rbx
  429353:	call   42c170 <strcmp@plt+0x289e8>
  429358:	mov    eax,ebp
  42935a:	pop    rbx
  42935b:	pop    r12
  42935d:	pop    r14
  42935f:	pop    r15
  429361:	pop    rbp
  429362:	ret    
  429363:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42936d:	nop    DWORD PTR [rax]
  429370:	push   rbp
  429371:	push   rbx
  429372:	push   rax
  429373:	mov    rbx,rdi
  429376:	mov    ebp,DWORD PTR [rsi+0x18]
  429379:	mov    rdi,rsi
  42937c:	call   423c80 <strcmp@plt+0x204f8>
  429381:	mov    rdi,rbx
  429384:	mov    esi,ebp
  429386:	mov    edx,eax
  429388:	add    rsp,0x8
  42938c:	pop    rbx
  42938d:	pop    rbp
  42938e:	jmp    429550 <strcmp@plt+0x25dc8>
  429393:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42939d:	nop    DWORD PTR [rax]
  4293a0:	push   rbp
  4293a1:	push   r14
  4293a3:	push   rbx
  4293a4:	mov    rbx,rsi
  4293a7:	mov    r14,rdi
  4293aa:	mov    ebp,DWORD PTR [rsi+0x18]
  4293ad:	mov    rdi,rsi
  4293b0:	call   423c80 <strcmp@plt+0x204f8>
  4293b5:	mov    rdi,r14
  4293b8:	mov    esi,ebp
  4293ba:	mov    edx,eax
  4293bc:	call   429550 <strcmp@plt+0x25dc8>
  4293c1:	mov    rdi,rax
  4293c4:	mov    rsi,rbx
  4293c7:	pop    rbx
  4293c8:	pop    r14
  4293ca:	pop    rbp
  4293cb:	jmp    428aa0 <strcmp@plt+0x25318>
  4293d0:	push   r15
  4293d2:	push   r14
  4293d4:	push   r12
  4293d6:	push   rbx
  4293d7:	push   rax
  4293d8:	mov    r15,rsi
  4293db:	mov    r14,rdi
  4293de:	mov    r12,QWORD PTR [rsi]
  4293e1:	mov    ebx,DWORD PTR [r12+0x18]
  4293e6:	mov    rdi,r12
  4293e9:	call   423c80 <strcmp@plt+0x204f8>
  4293ee:	mov    rdi,r14
  4293f1:	mov    esi,ebx
  4293f3:	mov    edx,eax
  4293f5:	call   429550 <strcmp@plt+0x25dc8>
  4293fa:	test   rax,rax
  4293fd:	je     42946c <strcmp@plt+0x25ce4>
  4293ff:	mov    rbx,rax
  429402:	mov    rdi,rax
  429405:	mov    rsi,r15
  429408:	call   428b70 <strcmp@plt+0x253e8>
  42940d:	cmp    eax,0x1
  429410:	jne    42946c <strcmp@plt+0x25ce4>
  429412:	cmp    DWORD PTR [rbx+0x18],0x0
  429416:	jne    429424 <strcmp@plt+0x25c9c>
  429418:	mov    rsi,QWORD PTR [r14+0x28]
  42941c:	mov    rdi,rbx
  42941f:	call   42c170 <strcmp@plt+0x289e8>
  429424:	cmp    DWORD PTR [r12+0x18],0x0
  42942a:	je     429432 <strcmp@plt+0x25caa>
  42942c:	add    WORD PTR [r14+0x20],0xffff
  429432:	lea    rax,[rip+0x3b977]        # 464db0 <strcmp@plt+0x61628>
  429439:	cmp    DWORD PTR [rax],0x2
  42943c:	jl     429499 <strcmp@plt+0x25d11>
  42943e:	mov    rdi,QWORD PTR [r15]
  429441:	call   423130 <strcmp@plt+0x1f9a8>
  429446:	mov    rbx,rax
  429449:	mov    rdi,r14
  42944c:	call   423130 <strcmp@plt+0x1f9a8>
  429451:	mov    rcx,rax
  429454:	lea    rsi,[rip+0x21582]        # 44a9dd <strcmp@plt+0x47255>
  42945b:	mov    edi,0x6
  429460:	xor    eax,eax
  429462:	mov    rdx,rbx
  429465:	call   42e800 <strcmp@plt+0x2b078>
  42946a:	jmp    429499 <strcmp@plt+0x25d11>
  42946c:	lea    rax,[rip+0x3b93d]        # 464db0 <strcmp@plt+0x61628>
  429473:	cmp    DWORD PTR [rax],0x2
  429476:	jl     429499 <strcmp@plt+0x25d11>
  429478:	mov    rdi,QWORD PTR [r15]
  42947b:	call   423130 <strcmp@plt+0x1f9a8>
  429480:	mov    rcx,rax
  429483:	lea    rsi,[rip+0x2150a]        # 44a994 <strcmp@plt+0x4720c>
  42948a:	mov    edi,0x6
  42948f:	xor    eax,eax
  429491:	mov    rdx,rcx
  429494:	call   42e800 <strcmp@plt+0x2b078>
  429499:	mov    eax,0x1
  42949e:	add    rsp,0x8
  4294a2:	pop    rbx
  4294a3:	pop    r12
  4294a5:	pop    r14
  4294a7:	pop    r15
  4294a9:	ret    
  4294aa:	nop    WORD PTR [rax+rax*1+0x0]
  4294b0:	push   rbx
  4294b1:	mov    rbx,rdi
  4294b4:	mov    rdi,QWORD PTR [rdi+0x28]
  4294b8:	call   42c1e0 <strcmp@plt+0x28a58>
  4294bd:	mov    WORD PTR [rbx+0x20],0x0
  4294c3:	pop    rbx
  4294c4:	ret    
  4294c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4294cf:	nop
  4294d0:	push   rbp
  4294d1:	push   r15
  4294d3:	push   r14
  4294d5:	push   r12
  4294d7:	push   rbx
  4294d8:	test   rdi,rdi
  4294db:	je     429540 <strcmp@plt+0x25db8>
  4294dd:	mov    r15,rsi
  4294e0:	test   rsi,rsi
  4294e3:	je     429540 <strcmp@plt+0x25db8>
  4294e5:	mov    r14,rdi
  4294e8:	mov    rdi,QWORD PTR [rdi+0x28]
  4294ec:	call   42c1e0 <strcmp@plt+0x28a58>
  4294f1:	mov    rbp,QWORD PTR [r15+0x8]
  4294f5:	xor    r12d,r12d
  4294f8:	cmp    rbp,r15
  4294fb:	jne    42950c <strcmp@plt+0x25d84>
  4294fd:	jmp    42953b <strcmp@plt+0x25db3>
  4294ff:	nop
  429500:	add    r12d,eax
  429503:	mov    rbp,QWORD PTR [rbp+0x8]
  429507:	cmp    rbp,r15
  42950a:	je     42953b <strcmp@plt+0x25db3>
  42950c:	mov    rdi,QWORD PTR [rbp+0x10]
  429510:	call   428bd0 <strcmp@plt+0x25448>
  429515:	mov    rbx,rax
  429518:	mov    rsi,QWORD PTR [r14+0x28]
  42951c:	mov    rdi,rax
  42951f:	call   42bcf0 <strcmp@plt+0x28568>
  429524:	mov    rax,QWORD PTR [rbx+0x8]
  429528:	mov    rax,QWORD PTR [rax+0x10]
  42952c:	mov    rax,QWORD PTR [rax]
  42952f:	mov    eax,DWORD PTR [rax+0x18]
  429532:	test   eax,eax
  429534:	je     429500 <strcmp@plt+0x25d78>
  429536:	mov    eax,DWORD PTR [rbx+0x18]
  429539:	jmp    429500 <strcmp@plt+0x25d78>
  42953b:	mov    WORD PTR [r14+0x20],r12w
  429540:	pop    rbx
  429541:	pop    r12
  429543:	pop    r14
  429545:	pop    r15
  429547:	pop    rbp
  429548:	ret    
  429549:	nop    DWORD PTR [rax+0x0]
  429550:	push   rbp
  429551:	push   r15
  429553:	push   r14
  429555:	push   r13
  429557:	push   r12
  429559:	push   rbx
  42955a:	push   rax
  42955b:	mov    DWORD PTR [rsp+0x4],edx
  42955f:	mov    r12d,esi
  429562:	mov    rax,QWORD PTR [rdi+0x28]
  429566:	mov    rbp,QWORD PTR [rax+0x8]
  42956a:	cmp    rbp,rax
  42956d:	je     4295ca <strcmp@plt+0x25e42>
  42956f:	mov    r15,rdi
  429572:	mov    r13d,r12d
  429575:	lea    r14,[rip+0x212e0]        # 44a85c <strcmp@plt+0x470d4>
  42957c:	nop    DWORD PTR [rax+0x0]
  429580:	mov    rbx,QWORD PTR [rbp+0x10]
  429584:	mov    rax,QWORD PTR [rbx+0x8]
  429588:	mov    rax,QWORD PTR [rax+0x10]
  42958c:	mov    rdi,QWORD PTR [rax]
  42958f:	cmp    DWORD PTR [rdi+0x18],r12d
  429593:	jne    4295c0 <strcmp@plt+0x25e38>
  429595:	cmp    r12d,0x3
  429599:	ja     4295c0 <strcmp@plt+0x25e38>
  42959b:	movsxd rax,DWORD PTR [r14+r13*4]
  42959f:	add    rax,r14
  4295a2:	jmp    rax
  4295a4:	call   423200 <strcmp@plt+0x1fa78>
  4295a9:	movzx  eax,ax
  4295ac:	cmp    eax,DWORD PTR [rsp+0x4]
  4295b0:	jne    4295c0 <strcmp@plt+0x25e38>
  4295b2:	jmp    4295f6 <strcmp@plt+0x25e6e>
  4295b4:	call   423330 <strcmp@plt+0x1fba8>
  4295b9:	cmp    eax,DWORD PTR [rsp+0x4]
  4295bd:	je     4295f6 <strcmp@plt+0x25e6e>
  4295bf:	nop
  4295c0:	mov    rbp,QWORD PTR [rbp+0x8]
  4295c4:	cmp    rbp,QWORD PTR [r15+0x28]
  4295c8:	jne    429580 <strcmp@plt+0x25df8>
  4295ca:	lea    rax,[rip+0x3b7df]        # 464db0 <strcmp@plt+0x61628>
  4295d1:	cmp    DWORD PTR [rax],0x3
  4295d4:	jge    4295da <strcmp@plt+0x25e52>
  4295d6:	xor    ebx,ebx
  4295d8:	jmp    4295f6 <strcmp@plt+0x25e6e>
  4295da:	lea    rsi,[rip+0x2147f]        # 44aa60 <strcmp@plt+0x472d8>
  4295e1:	xor    ebx,ebx
  4295e3:	mov    edi,0x7
  4295e8:	xor    eax,eax
  4295ea:	mov    edx,r12d
  4295ed:	mov    ecx,DWORD PTR [rsp+0x4]
  4295f1:	call   42e800 <strcmp@plt+0x2b078>
  4295f6:	mov    rax,rbx
  4295f9:	add    rsp,0x8
  4295fd:	pop    rbx
  4295fe:	pop    r12
  429600:	pop    r13
  429602:	pop    r14
  429604:	pop    r15
  429606:	pop    rbp
  429607:	ret    
  429608:	lea    rax,[rip+0x3b7a1]        # 464db0 <strcmp@plt+0x61628>
  42960f:	cmp    DWORD PTR [rax],0x0
  429612:	jle    4295d6 <strcmp@plt+0x25e4e>
  429614:	lea    rsi,[rip+0x2140b]        # 44aa26 <strcmp@plt+0x4729e>
  42961b:	xor    ebx,ebx
  42961d:	mov    edi,0x5
  429622:	xor    eax,eax
  429624:	call   42e800 <strcmp@plt+0x2b078>
  429629:	jmp    4295f6 <strcmp@plt+0x25e6e>
  42962b:	nop    DWORD PTR [rax+rax*1+0x0]
  429630:	push   rbp
  429631:	push   r15
  429633:	push   r14
  429635:	push   rbx
  429636:	push   rax
  429637:	mov    r14,rsi
  42963a:	mov    r15,rdi
  42963d:	mov    rbx,QWORD PTR [rsi]
  429640:	mov    ebp,DWORD PTR [rbx+0x18]
  429643:	mov    rdi,rbx
  429646:	call   423c80 <strcmp@plt+0x204f8>
  42964b:	mov    rdi,r15
  42964e:	mov    esi,ebp
  429650:	mov    edx,eax
  429652:	call   429550 <strcmp@plt+0x25dc8>
  429657:	xor    ecx,ecx
  429659:	test   rax,rax
  42965c:	je     429695 <strcmp@plt+0x25f0d>
  42965e:	test   rbx,rbx
  429661:	je     429695 <strcmp@plt+0x25f0d>
  429663:	mov    edx,DWORD PTR [rax+0x18]
  429666:	test   edx,edx
  429668:	je     429695 <strcmp@plt+0x25f0d>
  42966a:	mov    rcx,QWORD PTR [rax+0x8]
  42966e:	cmp    rcx,rax
  429671:	je     42968f <strcmp@plt+0x25f07>
  429673:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42967d:	nop    DWORD PTR [rax]
  429680:	cmp    QWORD PTR [rcx+0x10],r14
  429684:	je     429693 <strcmp@plt+0x25f0b>
  429686:	mov    rcx,QWORD PTR [rcx+0x8]
  42968a:	cmp    rcx,rax
  42968d:	jne    429680 <strcmp@plt+0x25ef8>
  42968f:	xor    ecx,ecx
  429691:	jmp    429695 <strcmp@plt+0x25f0d>
  429693:	mov    cl,0x1
  429695:	mov    eax,ecx
  429697:	add    rsp,0x8
  42969b:	pop    rbx
  42969c:	pop    r14
  42969e:	pop    r15
  4296a0:	pop    rbp
  4296a1:	ret    
  4296a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4296ac:	nop    DWORD PTR [rax+0x0]
  4296b0:	push   rbp
  4296b1:	push   r14
  4296b3:	push   rbx
  4296b4:	mov    rbx,rsi
  4296b7:	mov    r14,rdi
  4296ba:	mov    ebp,DWORD PTR [rsi+0x18]
  4296bd:	mov    rdi,rsi
  4296c0:	call   423c80 <strcmp@plt+0x204f8>
  4296c5:	mov    rdi,r14
  4296c8:	mov    esi,ebp
  4296ca:	mov    edx,eax
  4296cc:	call   429550 <strcmp@plt+0x25dc8>
  4296d1:	mov    r14,rax
  4296d4:	mov    rdi,rax
  4296d7:	mov    rsi,rbx
  4296da:	call   428b00 <strcmp@plt+0x25378>
  4296df:	test   rax,rax
  4296e2:	je     4296f3 <strcmp@plt+0x25f6b>
  4296e4:	mov    rdi,rax
  4296e7:	mov    rsi,r14
  4296ea:	pop    rbx
  4296eb:	pop    r14
  4296ed:	pop    rbp
  4296ee:	jmp    42bcf0 <strcmp@plt+0x28568>
  4296f3:	xor    eax,eax
  4296f5:	pop    rbx
  4296f6:	pop    r14
  4296f8:	pop    rbp
  4296f9:	ret    
  4296fa:	nop    WORD PTR [rax+rax*1+0x0]
  429700:	push   rbp
  429701:	push   r15
  429703:	push   r14
  429705:	push   r12
  429707:	push   rbx
  429708:	mov    rbx,rdx
  42970b:	mov    rbp,rsi
  42970e:	mov    r15,rdi
  429711:	call   4293d0 <strcmp@plt+0x25c48>
  429716:	mov    rdi,rbp
  429719:	mov    rsi,rbx
  42971c:	call   428db0 <strcmp@plt+0x25628>
  429721:	mov    rdi,r15
  429724:	mov    rsi,rbp
  429727:	call   4291e0 <strcmp@plt+0x25a58>
  42972c:	mov    r14d,eax
  42972f:	cmp    eax,0x1
  429732:	jne    42979e <strcmp@plt+0x26016>
  429734:	lea    r12,[rip+0x3b675]        # 464db0 <strcmp@plt+0x61628>
  42973b:	cmp    DWORD PTR [r12],0x0
  429740:	jle    4297df <strcmp@plt+0x26057>
  429746:	mov    rdi,QWORD PTR [rbp+0x0]
  42974a:	call   423130 <strcmp@plt+0x1f9a8>
  42974f:	mov    rbx,rax
  429752:	mov    rdi,r15
  429755:	call   423130 <strcmp@plt+0x1f9a8>
  42975a:	mov    rcx,rax
  42975d:	lea    rsi,[rip+0x2134a]        # 44aaae <strcmp@plt+0x47326>
  429764:	mov    edi,0x5
  429769:	xor    eax,eax
  42976b:	mov    rdx,rbx
  42976e:	call   42e800 <strcmp@plt+0x2b078>
  429773:	cmp    DWORD PTR [r12],0x2
  429778:	jl     4297df <strcmp@plt+0x26057>
  42977a:	mov    rdi,r15
  42977d:	call   429040 <strcmp@plt+0x258b8>
  429782:	lea    rsi,[rip+0x21373]        # 44aafc <strcmp@plt+0x47374>
  429789:	lea    rdx,[rip+0x44a50]        # 46e1e0 <strcmp@plt+0x6aa58>
  429790:	mov    edi,0x6
  429795:	xor    eax,eax
  429797:	call   42e800 <strcmp@plt+0x2b078>
  42979c:	jmp    4297df <strcmp@plt+0x26057>
  42979e:	mov    rdi,rbp
  4297a1:	call   428960 <strcmp@plt+0x251d8>
  4297a6:	lea    rax,[rip+0x3b603]        # 464db0 <strcmp@plt+0x61628>
  4297ad:	cmp    DWORD PTR [rax],0x0
  4297b0:	jle    4297df <strcmp@plt+0x26057>
  4297b2:	mov    rdi,QWORD PTR [rbp+0x0]
  4297b6:	call   423130 <strcmp@plt+0x1f9a8>
  4297bb:	mov    rbx,rax
  4297be:	mov    rdi,r15
  4297c1:	call   423130 <strcmp@plt+0x1f9a8>
  4297c6:	mov    rcx,rax
  4297c9:	lea    rsi,[rip+0x2135c]        # 44ab2c <strcmp@plt+0x473a4>
  4297d0:	mov    edi,0x5
  4297d5:	xor    eax,eax
  4297d7:	mov    rdx,rbx
  4297da:	call   42e800 <strcmp@plt+0x2b078>
  4297df:	mov    eax,r14d
  4297e2:	pop    rbx
  4297e3:	pop    r12
  4297e5:	pop    r14
  4297e7:	pop    r15
  4297e9:	pop    rbp
  4297ea:	ret    
  4297eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4297f0:	push   rbp
  4297f1:	push   r15
  4297f3:	push   r14
  4297f5:	push   r12
  4297f7:	push   rbx
  4297f8:	mov    rbp,rsi
  4297fb:	mov    rbx,rdi
  4297fe:	call   4293d0 <strcmp@plt+0x25c48>
  429803:	mov    r14,QWORD PTR [rbp+0x0]
  429807:	xor    edi,edi
  429809:	call   422ef0 <strcmp@plt+0x1f768>
  42980e:	mov    QWORD PTR [rbp+0x0],rax
  429812:	mov    rdi,rbx
  429815:	mov    rsi,rbp
  429818:	call   4291e0 <strcmp@plt+0x25a58>
  42981d:	mov    r15d,eax
  429820:	cmp    eax,0x1
  429823:	jne    42988e <strcmp@plt+0x26106>
  429825:	lea    r12,[rip+0x3b584]        # 464db0 <strcmp@plt+0x61628>
  42982c:	cmp    DWORD PTR [r12],0x0
  429831:	jle    4298ce <strcmp@plt+0x26146>
  429837:	mov    rdi,r14
  42983a:	call   423130 <strcmp@plt+0x1f9a8>
  42983f:	mov    rbp,rax
  429842:	mov    rdi,rbx
  429845:	call   423130 <strcmp@plt+0x1f9a8>
  42984a:	mov    rcx,rax
  42984d:	lea    rsi,[rip+0x21344]        # 44ab98 <strcmp@plt+0x47410>
  429854:	mov    edi,0x5
  429859:	xor    eax,eax
  42985b:	mov    rdx,rbp
  42985e:	call   42e800 <strcmp@plt+0x2b078>
  429863:	cmp    DWORD PTR [r12],0x2
  429868:	jl     4298ce <strcmp@plt+0x26146>
  42986a:	mov    rdi,rbx
  42986d:	call   429040 <strcmp@plt+0x258b8>
  429872:	lea    rsi,[rip+0x21373]        # 44abec <strcmp@plt+0x47464>
  429879:	lea    rdx,[rip+0x44960]        # 46e1e0 <strcmp@plt+0x6aa58>
  429880:	mov    edi,0x6
  429885:	xor    eax,eax
  429887:	call   42e800 <strcmp@plt+0x2b078>
  42988c:	jmp    4298ce <strcmp@plt+0x26146>
  42988e:	mov    rdi,rbp
  429891:	call   428960 <strcmp@plt+0x251d8>
  429896:	lea    rax,[rip+0x3b513]        # 464db0 <strcmp@plt+0x61628>
  42989d:	cmp    DWORD PTR [rax],0x0
  4298a0:	jle    4298ce <strcmp@plt+0x26146>
  4298a2:	mov    rdi,r14
  4298a5:	call   423130 <strcmp@plt+0x1f9a8>
  4298aa:	mov    rbp,rax
  4298ad:	mov    rdi,rbx
  4298b0:	call   423130 <strcmp@plt+0x1f9a8>
  4298b5:	mov    rcx,rax
  4298b8:	lea    rsi,[rip+0x21360]        # 44ac1f <strcmp@plt+0x47497>
  4298bf:	mov    edi,0x5
  4298c4:	xor    eax,eax
  4298c6:	mov    rdx,rbp
  4298c9:	call   42e800 <strcmp@plt+0x2b078>
  4298ce:	mov    rdi,r14
  4298d1:	call   422fa0 <strcmp@plt+0x1f818>
  4298d6:	mov    eax,r15d
  4298d9:	pop    rbx
  4298da:	pop    r12
  4298dc:	pop    r14
  4298de:	pop    r15
  4298e0:	pop    rbp
  4298e1:	ret    
  4298e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4298ec:	nop    DWORD PTR [rax+0x0]
  4298f0:	push   rbp
  4298f1:	push   r14
  4298f3:	push   rbx
  4298f4:	mov    rax,QWORD PTR [rdi+0x28]
  4298f8:	mov    rbp,QWORD PTR [rax+0x8]
  4298fc:	cmp    rbp,rax
  4298ff:	je     42993c <strcmp@plt+0x261b4>
  429901:	mov    r14,rdi
  429904:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42990e:	xchg   ax,ax
  429910:	mov    rbx,QWORD PTR [rbp+0x10]
  429914:	mov    rcx,QWORD PTR [rbx+0x8]
  429918:	mov    rcx,QWORD PTR [rcx+0x10]
  42991c:	mov    rdi,QWORD PTR [rcx]
  42991f:	cmp    DWORD PTR [rdi+0x18],0x3
  429923:	jne    429933 <strcmp@plt+0x261ab>
  429925:	call   423330 <strcmp@plt+0x1fba8>
  42992a:	cmp    eax,0xa
  42992d:	je     429973 <strcmp@plt+0x261eb>
  42992f:	mov    rax,QWORD PTR [r14+0x28]
  429933:	mov    rbp,QWORD PTR [rbp+0x8]
  429937:	cmp    rbp,rax
  42993a:	jne    429910 <strcmp@plt+0x26188>
  42993c:	lea    rax,[rip+0x3b46d]        # 464db0 <strcmp@plt+0x61628>
  429943:	xor    r14d,r14d
  429946:	cmp    DWORD PTR [rax],0x3
  429949:	jl     42996b <strcmp@plt+0x261e3>
  42994b:	lea    rsi,[rip+0x2110e]        # 44aa60 <strcmp@plt+0x472d8>
  429952:	xor    r14d,r14d
  429955:	mov    edi,0x7
  42995a:	mov    edx,0x3
  42995f:	mov    ecx,0xa
  429964:	xor    eax,eax
  429966:	call   42e800 <strcmp@plt+0x2b078>
  42996b:	mov    eax,r14d
  42996e:	pop    rbx
  42996f:	pop    r14
  429971:	pop    rbp
  429972:	ret    
  429973:	xor    r14d,r14d
  429976:	test   rbx,rbx
  429979:	je     42996b <strcmp@plt+0x261e3>
  42997b:	mov    rbp,QWORD PTR [rbx+0x8]
  42997f:	cmp    rbp,rbx
  429982:	jne    42998f <strcmp@plt+0x26207>
  429984:	jmp    42996b <strcmp@plt+0x261e3>
  429986:	mov    rbp,QWORD PTR [rbp+0x8]
  42998a:	cmp    rbp,rbx
  42998d:	je     42996b <strcmp@plt+0x261e3>
  42998f:	mov    rax,QWORD PTR [rbp+0x10]
  429993:	mov    rdi,QWORD PTR [rax]
  429996:	call   423b30 <strcmp@plt+0x203a8>
  42999b:	mov    rax,QWORD PTR [rax]
  42999e:	mov    rcx,QWORD PTR [rax+0x8]
  4299a2:	cmp    rcx,rax
  4299a5:	jne    4299b9 <strcmp@plt+0x26231>
  4299a7:	jmp    429986 <strcmp@plt+0x261fe>
  4299a9:	nop    DWORD PTR [rax+0x0]
  4299b0:	mov    rcx,QWORD PTR [rcx+0x8]
  4299b4:	cmp    rcx,rax
  4299b7:	je     429986 <strcmp@plt+0x261fe>
  4299b9:	mov    rdx,QWORD PTR [rcx+0x10]
  4299bd:	test   BYTE PTR [rdx],0x1
  4299c0:	je     4299b0 <strcmp@plt+0x26228>
  4299c2:	mov    r14d,0x1
  4299c8:	jmp    42996b <strcmp@plt+0x261e3>
  4299ca:	nop    WORD PTR [rax+rax*1+0x0]
  4299d0:	push   rbx
  4299d1:	mov    edi,0x48
  4299d6:	call   432070 <strcmp@plt+0x2e8e8>
  4299db:	test   rax,rax
  4299de:	je     429a07 <strcmp@plt+0x2627f>
  4299e0:	mov    rbx,rax
  4299e3:	lea    rdi,[rip+0xfffffffffffff366]        # 428d50 <strcmp@plt+0x255c8>
  4299ea:	lea    rsi,[rip+0x285f]        # 42c250 <strcmp@plt+0x28ac8>
  4299f1:	call   42bb90 <strcmp@plt+0x28408>
  4299f6:	mov    QWORD PTR [rbx+0x28],rax
  4299fa:	test   rax,rax
  4299fd:	jne    429a09 <strcmp@plt+0x26281>
  4299ff:	mov    rdi,rbx
  429a02:	call   403780 <free@plt>
  429a07:	xor    ebx,ebx
  429a09:	mov    rax,rbx
  429a0c:	pop    rbx
  429a0d:	ret    
  429a0e:	xchg   ax,ax
  429a10:	push   r14
  429a12:	push   rbx
  429a13:	push   rax
  429a14:	mov    r14,rdi
  429a17:	call   4230e0 <strcmp@plt+0x1f958>
  429a1c:	test   rax,rax
  429a1f:	jne    429a36 <strcmp@plt+0x262ae>
  429a21:	mov    rdi,r14
  429a24:	call   4232e0 <strcmp@plt+0x1fb58>
  429a29:	test   rax,rax
  429a2c:	je     429a90 <strcmp@plt+0x26308>
  429a2e:	mov    rdi,rax
  429a31:	call   4231b0 <strcmp@plt+0x1fa28>
  429a36:	mov    edi,0x48
  429a3b:	call   432070 <strcmp@plt+0x2e8e8>
  429a40:	test   rax,rax
  429a43:	je     429a79 <strcmp@plt+0x262f1>
  429a45:	mov    rbx,rax
  429a48:	lea    rdi,[rip+0xfffffffffffff301]        # 428d50 <strcmp@plt+0x255c8>
  429a4f:	lea    rsi,[rip+0x27fa]        # 42c250 <strcmp@plt+0x28ac8>
  429a56:	call   42bb90 <strcmp@plt+0x28408>
  429a5b:	mov    QWORD PTR [rbx+0x28],rax
  429a5f:	test   rax,rax
  429a62:	je     429a71 <strcmp@plt+0x262e9>
  429a64:	mov    rdi,rbx
  429a67:	mov    rsi,r14
  429a6a:	call   423560 <strcmp@plt+0x1fdd8>
  429a6f:	jmp    429ab3 <strcmp@plt+0x2632b>
  429a71:	mov    rdi,rbx
  429a74:	call   403780 <free@plt>
  429a79:	lea    rsi,[rip+0x21257]        # 44acd7 <strcmp@plt+0x4754f>
  429a80:	xor    ebx,ebx
  429a82:	mov    edi,0x3
  429a87:	xor    eax,eax
  429a89:	call   42e800 <strcmp@plt+0x2b078>
  429a8e:	jmp    429ab3 <strcmp@plt+0x2632b>
  429a90:	mov    rdi,r14
  429a93:	call   423130 <strcmp@plt+0x1f9a8>
  429a98:	mov    rcx,rax
  429a9b:	lea    rsi,[rip+0x211fe]        # 44aca0 <strcmp@plt+0x47518>
  429aa2:	xor    ebx,ebx
  429aa4:	mov    edi,0x3
  429aa9:	xor    eax,eax
  429aab:	mov    rdx,rcx
  429aae:	call   42e800 <strcmp@plt+0x2b078>
  429ab3:	mov    rax,rbx
  429ab6:	add    rsp,0x8
  429aba:	pop    rbx
  429abb:	pop    r14
  429abd:	ret    
  429abe:	xchg   ax,ax
  429ac0:	push   rbp
  429ac1:	push   r15
  429ac3:	push   r14
  429ac5:	push   r13
  429ac7:	push   r12
  429ac9:	push   rbx
  429aca:	push   rax
  429acb:	mov    r14,r9
  429ace:	mov    r12d,r8d
  429ad1:	mov    ebp,ecx
  429ad3:	mov    r13d,edx
  429ad6:	mov    ebx,esi
  429ad8:	mov    r15,rdi
  429adb:	call   4230e0 <strcmp@plt+0x1f958>
  429ae0:	test   rax,rax
  429ae3:	jne    429afe <strcmp@plt+0x26376>
  429ae5:	mov    rdi,r15
  429ae8:	call   4232e0 <strcmp@plt+0x1fb58>
  429aed:	test   rax,rax
  429af0:	je     429c08 <strcmp@plt+0x26480>
  429af6:	mov    rdi,rax
  429af9:	call   4231b0 <strcmp@plt+0x1fa28>
  429afe:	mov    DWORD PTR [rsp+0x4],ebx
  429b02:	mov    edi,0x48
  429b07:	call   432070 <strcmp@plt+0x2e8e8>
  429b0c:	test   rax,rax
  429b0f:	je     429bf1 <strcmp@plt+0x26469>
  429b15:	mov    rbx,rax
  429b18:	lea    rdi,[rip+0xfffffffffffff231]        # 428d50 <strcmp@plt+0x255c8>
  429b1f:	lea    rsi,[rip+0x272a]        # 42c250 <strcmp@plt+0x28ac8>
  429b26:	call   42bb90 <strcmp@plt+0x28408>
  429b2b:	mov    QWORD PTR [rbx+0x28],rax
  429b2f:	test   rax,rax
  429b32:	je     429be9 <strcmp@plt+0x26461>
  429b38:	mov    rdi,rbx
  429b3b:	mov    rsi,r15
  429b3e:	call   423560 <strcmp@plt+0x1fdd8>
  429b43:	mov    eax,DWORD PTR [rsp+0x4]
  429b47:	mov    DWORD PTR [rbx+0x38],eax
  429b4a:	mov    BYTE PTR [rbx+0x3c],r13b
  429b4e:	mov    BYTE PTR [rbx+0x3d],bpl
  429b52:	mov    BYTE PTR [rbx+0x3e],r12b
  429b56:	or     r13d,0x1
  429b5a:	cmp    r13d,0x3
  429b5e:	jne    429b98 <strcmp@plt+0x26410>
  429b60:	mov    rdi,QWORD PTR [rsp+0x48]
  429b65:	mov    esi,0x1
  429b6a:	mov    edx,0x1
  429b6f:	mov    ecx,0x1
  429b74:	mov    r8d,0x0
  429b7a:	mov    r9d,0x0
  429b80:	push   0x0
  429b82:	push   0x0
  429b84:	call   428660 <strcmp@plt+0x24ed8>
  429b89:	add    rsp,0x10
  429b8d:	mov    rdi,rbx
  429b90:	mov    rsi,rax
  429b93:	call   429c40 <strcmp@plt+0x264b8>
  429b98:	mov    rbp,QWORD PTR [r14+0x8]
  429b9c:	cmp    rbp,r14
  429b9f:	je     429c2b <strcmp@plt+0x264a3>
  429ba5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429baf:	nop
  429bb0:	mov    rdi,QWORD PTR [rbp+0x10]
  429bb4:	mov    esi,0x1
  429bb9:	xor    edx,edx
  429bbb:	mov    ecx,0x1
  429bc0:	xor    r8d,r8d
  429bc3:	xor    r9d,r9d
  429bc6:	push   0x0
  429bc8:	push   0x0
  429bca:	call   428660 <strcmp@plt+0x24ed8>
  429bcf:	add    rsp,0x10
  429bd3:	mov    rdi,rbx
  429bd6:	mov    rsi,rax
  429bd9:	call   429c40 <strcmp@plt+0x264b8>
  429bde:	mov    rbp,QWORD PTR [rbp+0x8]
  429be2:	cmp    rbp,r14
  429be5:	jne    429bb0 <strcmp@plt+0x26428>
  429be7:	jmp    429c2b <strcmp@plt+0x264a3>
  429be9:	mov    rdi,rbx
  429bec:	call   403780 <free@plt>
  429bf1:	lea    rsi,[rip+0x2115d]        # 44ad55 <strcmp@plt+0x475cd>
  429bf8:	xor    ebx,ebx
  429bfa:	mov    edi,0x3
  429bff:	xor    eax,eax
  429c01:	call   42e800 <strcmp@plt+0x2b078>
  429c06:	jmp    429c2b <strcmp@plt+0x264a3>
  429c08:	mov    rdi,r15
  429c0b:	call   423130 <strcmp@plt+0x1f9a8>
  429c10:	mov    rcx,rax
  429c13:	lea    rsi,[rip+0x210ff]        # 44ad19 <strcmp@plt+0x47591>
  429c1a:	xor    ebx,ebx
  429c1c:	mov    edi,0x3
  429c21:	xor    eax,eax
  429c23:	mov    rdx,rcx
  429c26:	call   42e800 <strcmp@plt+0x2b078>
  429c2b:	mov    rax,rbx
  429c2e:	add    rsp,0x8
  429c32:	pop    rbx
  429c33:	pop    r12
  429c35:	pop    r13
  429c37:	pop    r14
  429c39:	pop    r15
  429c3b:	pop    rbp
  429c3c:	ret    
  429c3d:	nop    DWORD PTR [rax]
  429c40:	push   rbp
  429c41:	push   r15
  429c43:	push   r14
  429c45:	push   r12
  429c47:	push   rbx
  429c48:	mov    r15,rsi
  429c4b:	mov    r14,rdi
  429c4e:	mov    r12,QWORD PTR [rsi]
  429c51:	mov    ebx,DWORD PTR [r12+0x18]
  429c56:	mov    rdi,r12
  429c59:	call   423c80 <strcmp@plt+0x204f8>
  429c5e:	mov    rdi,r14
  429c61:	mov    esi,ebx
  429c63:	mov    edx,eax
  429c65:	call   42a280 <strcmp@plt+0x26af8>
  429c6a:	test   rax,rax
  429c6d:	je     429d18 <strcmp@plt+0x26590>
  429c73:	mov    rbx,rax
  429c76:	mov    rdi,r15
  429c79:	mov    rsi,rax
  429c7c:	call   42be80 <strcmp@plt+0x286f8>
  429c81:	cmp    al,0x1
  429c83:	jne    429d47 <strcmp@plt+0x265bf>
  429c89:	lea    rax,[rip+0x3b120]        # 464db0 <strcmp@plt+0x61628>
  429c90:	cmp    DWORD PTR [rax],0x2
  429c93:	jl     429cc1 <strcmp@plt+0x26539>
  429c95:	mov    rdi,QWORD PTR [r15]
  429c98:	call   423130 <strcmp@plt+0x1f9a8>
  429c9d:	mov    rbp,rax
  429ca0:	mov    rdi,r14
  429ca3:	call   423130 <strcmp@plt+0x1f9a8>
  429ca8:	mov    rcx,rax
  429cab:	lea    rsi,[rip+0x21131]        # 44ade3 <strcmp@plt+0x4765b>
  429cb2:	mov    edi,0x6
  429cb7:	xor    eax,eax
  429cb9:	mov    rdx,rbp
  429cbc:	call   42e800 <strcmp@plt+0x2b078>
  429cc1:	mov    rbp,QWORD PTR [r15]
  429cc4:	mov    r12d,DWORD PTR [rbp+0x18]
  429cc8:	mov    rdi,rbp
  429ccb:	call   423c80 <strcmp@plt+0x204f8>
  429cd0:	mov    rdi,r14
  429cd3:	mov    esi,r12d
  429cd6:	mov    edx,eax
  429cd8:	call   42a280 <strcmp@plt+0x26af8>
  429cdd:	mov    rdi,rax
  429ce0:	mov    rsi,rbp
  429ce3:	call   428aa0 <strcmp@plt+0x25318>
  429ce8:	mov    cl,BYTE PTR [rax+0xb]
  429ceb:	mov    ebp,0xfffffffb
  429cf0:	cmp    cl,BYTE PTR [r15+0xb]
  429cf4:	jbe    429db8 <strcmp@plt+0x26630>
  429cfa:	mov    rdi,rax
  429cfd:	mov    rsi,rbx
  429d00:	call   42c170 <strcmp@plt+0x289e8>
  429d05:	mov    rdi,r15
  429d08:	mov    rsi,rbx
  429d0b:	pop    rbx
  429d0c:	pop    r12
  429d0e:	pop    r14
  429d10:	pop    r15
  429d12:	pop    rbp
  429d13:	jmp    42bcf0 <strcmp@plt+0x28568>
  429d18:	lea    rdi,[rip+0xffffffffffffecf1]        # 428a10 <strcmp@plt+0x25288>
  429d1f:	lea    rsi,[rip+0xffffffffffffec3a]        # 428960 <strcmp@plt+0x251d8>
  429d26:	call   42bb90 <strcmp@plt+0x28408>
  429d2b:	mov    rbx,rax
  429d2e:	mov    rdi,r15
  429d31:	mov    rsi,rax
  429d34:	call   42bcf0 <strcmp@plt+0x28568>
  429d39:	cmp    eax,0x1
  429d3c:	jne    429da4 <strcmp@plt+0x2661c>
  429d3e:	mov    rsi,QWORD PTR [r14+0x28]
  429d42:	mov    rdi,rbx
  429d45:	jmp    429d4d <strcmp@plt+0x265c5>
  429d47:	mov    rdi,r15
  429d4a:	mov    rsi,rbx
  429d4d:	call   42bcf0 <strcmp@plt+0x28568>
  429d52:	cmp    eax,0x1
  429d55:	jne    429da4 <strcmp@plt+0x2661c>
  429d57:	lea    rax,[rip+0x3b052]        # 464db0 <strcmp@plt+0x61628>
  429d5e:	cmp    DWORD PTR [rax],0x2
  429d61:	jl     429d8f <strcmp@plt+0x26607>
  429d63:	mov    rdi,QWORD PTR [r15]
  429d66:	call   423130 <strcmp@plt+0x1f9a8>
  429d6b:	mov    rbx,rax
  429d6e:	mov    rdi,r14
  429d71:	call   423130 <strcmp@plt+0x1f9a8>
  429d76:	mov    rcx,rax
  429d79:	lea    rsi,[rip+0x210d3]        # 44ae53 <strcmp@plt+0x476cb>
  429d80:	mov    edi,0x6
  429d85:	xor    eax,eax
  429d87:	mov    rdx,rbx
  429d8a:	call   42e800 <strcmp@plt+0x2b078>
  429d8f:	mov    ebp,0x1
  429d94:	cmp    DWORD PTR [r12+0x18],0x0
  429d9a:	je     429db8 <strcmp@plt+0x26630>
  429d9c:	add    WORD PTR [r14+0x20],0x1
  429da2:	jmp    429db8 <strcmp@plt+0x26630>
  429da4:	xor    ebp,ebp
  429da6:	cmp    DWORD PTR [rbx+0x18],0x0
  429daa:	jne    429db8 <strcmp@plt+0x26630>
  429dac:	mov    rsi,QWORD PTR [r14+0x28]
  429db0:	mov    rdi,rbx
  429db3:	call   42c170 <strcmp@plt+0x289e8>
  429db8:	mov    eax,ebp
  429dba:	pop    rbx
  429dbb:	pop    r12
  429dbd:	pop    r14
  429dbf:	pop    r15
  429dc1:	pop    rbp
  429dc2:	ret    
  429dc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429dcd:	nop    DWORD PTR [rax]
  429dd0:	test   rdi,rdi
  429dd3:	je     429dfc <strcmp@plt+0x26674>
  429dd5:	push   rbx
  429dd6:	mov    rbx,rdi
  429dd9:	mov    rdi,QWORD PTR [rdi+0x28]
  429ddd:	call   42c250 <strcmp@plt+0x28ac8>
  429de2:	mov    rdi,QWORD PTR [rbx+0x30]
  429de6:	call   42c250 <strcmp@plt+0x28ac8>
  429deb:	mov    rdi,rbx
  429dee:	call   423c30 <strcmp@plt+0x204a8>
  429df3:	mov    rdi,rbx
  429df6:	pop    rbx
  429df7:	jmp    403780 <free@plt>
  429dfc:	ret    
  429dfd:	nop    DWORD PTR [rax]
  429e00:	push   rbp
  429e01:	push   r15
  429e03:	push   r14
  429e05:	push   r13
  429e07:	push   r12
  429e09:	push   rbx
  429e0a:	push   rax
  429e0b:	mov    rbx,rsi
  429e0e:	mov    r14,rdi
  429e11:	call   423970 <strcmp@plt+0x201e8>
  429e16:	test   eax,eax
  429e18:	jne    429eb4 <strcmp@plt+0x2672c>
  429e1e:	movzx  eax,WORD PTR [r14+0x20]
  429e23:	cmp    ax,WORD PTR [rbx+0x20]
  429e27:	jne    429eb4 <strcmp@plt+0x2672c>
  429e2d:	mov    rcx,QWORD PTR [r14+0x28]
  429e31:	mov    esi,DWORD PTR [rcx+0x18]
  429e34:	mov    rdx,QWORD PTR [rbx+0x28]
  429e38:	cmp    esi,DWORD PTR [rdx+0x18]
  429e3b:	jne    429eb4 <strcmp@plt+0x2672c>
  429e3d:	xor    eax,eax
  429e3f:	test   esi,esi
  429e41:	je     429e49 <strcmp@plt+0x266c1>
  429e43:	mov    r15,QWORD PTR [rdx+0x8]
  429e47:	jmp    429e4c <strcmp@plt+0x266c4>
  429e49:	xor    r15d,r15d
  429e4c:	mov    r12,QWORD PTR [rcx+0x8]
  429e50:	cmp    r12,rcx
  429e53:	jne    429e67 <strcmp@plt+0x266df>
  429e55:	jmp    429eb9 <strcmp@plt+0x26731>
  429e57:	mov    r15,QWORD PTR [r15+0x8]
  429e5b:	mov    r12,QWORD PTR [r12+0x8]
  429e60:	xor    eax,eax
  429e62:	cmp    r12,rcx
  429e65:	je     429eb9 <strcmp@plt+0x26731>
  429e67:	mov    r13,QWORD PTR [r12+0x10]
  429e6c:	mov    rax,QWORD PTR [r15+0x10]
  429e70:	mov    edx,DWORD PTR [r13+0x18]
  429e74:	cmp    edx,DWORD PTR [rax+0x18]
  429e77:	jne    429eb4 <strcmp@plt+0x2672c>
  429e79:	test   edx,edx
  429e7b:	je     429e83 <strcmp@plt+0x266fb>
  429e7d:	mov    rbx,QWORD PTR [rax+0x8]
  429e81:	jmp    429e85 <strcmp@plt+0x266fd>
  429e83:	xor    ebx,ebx
  429e85:	mov    rbp,QWORD PTR [r13+0x8]
  429e89:	cmp    rbp,r13
  429e8c:	je     429e57 <strcmp@plt+0x266cf>
  429e8e:	xchg   ax,ax
  429e90:	mov    rdi,QWORD PTR [rbp+0x10]
  429e94:	mov    rsi,QWORD PTR [rbx+0x10]
  429e98:	call   428910 <strcmp@plt+0x25188>
  429e9d:	test   eax,eax
  429e9f:	jne    429eb4 <strcmp@plt+0x2672c>
  429ea1:	mov    rbx,QWORD PTR [rbx+0x8]
  429ea5:	mov    rbp,QWORD PTR [rbp+0x8]
  429ea9:	cmp    rbp,r13
  429eac:	jne    429e90 <strcmp@plt+0x26708>
  429eae:	mov    rcx,QWORD PTR [r14+0x28]
  429eb2:	jmp    429e57 <strcmp@plt+0x266cf>
  429eb4:	mov    eax,0x1
  429eb9:	add    rsp,0x8
  429ebd:	pop    rbx
  429ebe:	pop    r12
  429ec0:	pop    r13
  429ec2:	pop    r14
  429ec4:	pop    r15
  429ec6:	pop    rbp
  429ec7:	ret    
  429ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  429ed0:	push   r14
  429ed2:	push   rbx
  429ed3:	push   rax
  429ed4:	mov    r14,rdi
  429ed7:	mov    edi,0x48
  429edc:	call   432070 <strcmp@plt+0x2e8e8>
  429ee1:	test   rax,rax
  429ee4:	je     429f0d <strcmp@plt+0x26785>
  429ee6:	mov    rbx,rax
  429ee9:	lea    rdi,[rip+0xffffffffffffee60]        # 428d50 <strcmp@plt+0x255c8>
  429ef0:	lea    rsi,[rip+0x2359]        # 42c250 <strcmp@plt+0x28ac8>
  429ef7:	call   42bb90 <strcmp@plt+0x28408>
  429efc:	mov    QWORD PTR [rbx+0x28],rax
  429f00:	test   rax,rax
  429f03:	jne    429f0f <strcmp@plt+0x26787>
  429f05:	mov    rdi,rbx
  429f08:	call   403780 <free@plt>
  429f0d:	xor    ebx,ebx
  429f0f:	mov    rdi,rbx
  429f12:	mov    rsi,r14
  429f15:	call   423560 <strcmp@plt+0x1fdd8>
  429f1a:	mov    al,BYTE PTR [r14+0x3c]
  429f1e:	mov    BYTE PTR [rbx+0x3c],al
  429f21:	mov    al,BYTE PTR [r14+0x3d]
  429f25:	mov    BYTE PTR [rbx+0x3d],al
  429f28:	mov    al,BYTE PTR [r14+0x3e]
  429f2c:	mov    BYTE PTR [rbx+0x3e],al
  429f2f:	movzx  eax,WORD PTR [r14+0x20]
  429f34:	mov    WORD PTR [rbx+0x20],ax
  429f38:	mov    eax,DWORD PTR [r14+0x38]
  429f3c:	mov    DWORD PTR [rbx+0x38],eax
  429f3f:	mov    rax,rbx
  429f42:	add    rsp,0x8
  429f46:	pop    rbx
  429f47:	pop    r14
  429f49:	ret    
  429f4a:	nop    WORD PTR [rax+rax*1+0x0]
  429f50:	push   rbp
  429f51:	push   r15
  429f53:	push   r14
  429f55:	push   r13
  429f57:	push   r12
  429f59:	push   rbx
  429f5a:	sub    rsp,0x18
  429f5e:	mov    r15,rdi
  429f61:	mov    BYTE PTR [rip+0x44668],0x0        # 46e5d0 <strcmp@plt+0x6ae48>
  429f68:	lea    r12,[rip+0x44661]        # 46e5d0 <strcmp@plt+0x6ae48>
  429f6f:	call   423130 <strcmp@plt+0x1f9a8>
  429f74:	mov    QWORD PTR [rsp],rax
  429f78:	mov    r13d,DWORD PTR [r15+0x38]
  429f7c:	movzx  r14d,WORD PTR [r15+0x20]
  429f81:	movzx  edi,BYTE PTR [r15+0x3c]
  429f86:	call   42aef0 <strcmp@plt+0x27768>
  429f8b:	mov    r10,rax
  429f8e:	movzx  ebx,BYTE PTR [r15+0x3d]
  429f93:	movzx  ebp,BYTE PTR [r15+0x3e]
  429f98:	sub    rsp,0x8
  429f9c:	lea    rdx,[rip+0x20df9]        # 44ad9c <strcmp@plt+0x47614>
  429fa3:	mov    esi,0x1f4
  429fa8:	mov    eax,0x0
  429fad:	mov    r8d,r13d
  429fb0:	mov    rdi,r12
  429fb3:	mov    rcx,QWORD PTR [rsp+0x8]
  429fb8:	mov    r9d,r14d
  429fbb:	push   rbp
  429fbc:	push   rbx
  429fbd:	push   r10
  429fbf:	call   403620 <snprintf@plt>
  429fc4:	add    rsp,0x20
  429fc8:	mov    QWORD PTR [rsp+0x8],r15
  429fcd:	cmp    WORD PTR [r15+0x20],0x0
  429fd3:	je     42a087 <strcmp@plt+0x268ff>
  429fd9:	mov    rax,QWORD PTR [rsp+0x8]
  429fde:	mov    rax,QWORD PTR [rax+0x28]
  429fe2:	mov    rcx,QWORD PTR [rax+0x8]
  429fe6:	cmp    rcx,rax
  429fe9:	je     42a087 <strcmp@plt+0x268ff>
  429fef:	lea    rbx,[rip+0x208e5]        # 44a8db <strcmp@plt+0x47153>
  429ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a000:	mov    rdx,QWORD PTR [rcx+0x10]
  42a004:	cmp    DWORD PTR [rdx+0x18],0x0
  42a008:	je     42a07a <strcmp@plt+0x268f2>
  42a00a:	mov    r14,QWORD PTR [rdx+0x8]
  42a00e:	cmp    r14,rdx
  42a011:	je     42a07a <strcmp@plt+0x268f2>
  42a013:	mov    QWORD PTR [rsp+0x10],rcx
  42a018:	mov    QWORD PTR [rsp],rdx
  42a01c:	nop    DWORD PTR [rax+0x0]
  42a020:	mov    rbp,QWORD PTR [r14+0x10]
  42a024:	mov    rdi,r12
  42a027:	call   4031e0 <strlen@plt>
  42a02c:	lea    r13,[r12+rax*1]
  42a030:	mov    r15,r12
  42a033:	mov    r12,rbx
  42a036:	mov    ebx,0x1f4
  42a03b:	sub    rbx,rax
  42a03e:	mov    rdi,rbp
  42a041:	call   4286e0 <strcmp@plt+0x24f58>
  42a046:	mov    rcx,rax
  42a049:	xor    eax,eax
  42a04b:	mov    rdi,r13
  42a04e:	mov    rsi,rbx
  42a051:	mov    rbx,r12
  42a054:	mov    r12,r15
  42a057:	mov    rdx,rbx
  42a05a:	call   403620 <snprintf@plt>
  42a05f:	mov    rdx,QWORD PTR [rsp]
  42a063:	mov    r14,QWORD PTR [r14+0x8]
  42a067:	cmp    r14,rdx
  42a06a:	jne    42a020 <strcmp@plt+0x26898>
  42a06c:	mov    rax,QWORD PTR [rsp+0x8]
  42a071:	mov    rax,QWORD PTR [rax+0x28]
  42a075:	mov    rcx,QWORD PTR [rsp+0x10]
  42a07a:	mov    rcx,QWORD PTR [rcx+0x8]
  42a07e:	cmp    rcx,rax
  42a081:	jne    42a000 <strcmp@plt+0x26878>
  42a087:	lea    rax,[rip+0x44542]        # 46e5d0 <strcmp@plt+0x6ae48>
  42a08e:	add    rsp,0x18
  42a092:	pop    rbx
  42a093:	pop    r12
  42a095:	pop    r13
  42a097:	pop    r14
  42a099:	pop    r15
  42a09b:	pop    rbp
  42a09c:	ret    
  42a09d:	nop    DWORD PTR [rax]
  42a0a0:	push   rbp
  42a0a1:	push   rbx
  42a0a2:	push   rax
  42a0a3:	mov    rbx,rdi
  42a0a6:	mov    ebp,DWORD PTR [rsi+0x18]
  42a0a9:	mov    rdi,rsi
  42a0ac:	call   423c80 <strcmp@plt+0x204f8>
  42a0b1:	mov    rdi,rbx
  42a0b4:	mov    esi,ebp
  42a0b6:	mov    edx,eax
  42a0b8:	add    rsp,0x8
  42a0bc:	pop    rbx
  42a0bd:	pop    rbp
  42a0be:	jmp    42a280 <strcmp@plt+0x26af8>
  42a0c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a0cd:	nop    DWORD PTR [rax]
  42a0d0:	push   rbp
  42a0d1:	push   r14
  42a0d3:	push   rbx
  42a0d4:	mov    rbx,rsi
  42a0d7:	mov    r14,rdi
  42a0da:	mov    ebp,DWORD PTR [rsi+0x18]
  42a0dd:	mov    rdi,rsi
  42a0e0:	call   423c80 <strcmp@plt+0x204f8>
  42a0e5:	mov    rdi,r14
  42a0e8:	mov    esi,ebp
  42a0ea:	mov    edx,eax
  42a0ec:	call   42a280 <strcmp@plt+0x26af8>
  42a0f1:	mov    rdi,rax
  42a0f4:	mov    rsi,rbx
  42a0f7:	pop    rbx
  42a0f8:	pop    r14
  42a0fa:	pop    rbp
  42a0fb:	jmp    428aa0 <strcmp@plt+0x25318>
  42a100:	push   r15
  42a102:	push   r14
  42a104:	push   r12
  42a106:	push   rbx
  42a107:	push   rax
  42a108:	mov    r15,rsi
  42a10b:	mov    r14,rdi
  42a10e:	mov    r12,QWORD PTR [rsi]
  42a111:	mov    ebx,DWORD PTR [r12+0x18]
  42a116:	mov    rdi,r12
  42a119:	call   423c80 <strcmp@plt+0x204f8>
  42a11e:	mov    rdi,r14
  42a121:	mov    esi,ebx
  42a123:	mov    edx,eax
  42a125:	call   42a280 <strcmp@plt+0x26af8>
  42a12a:	test   rax,rax
  42a12d:	je     42a19c <strcmp@plt+0x26a14>
  42a12f:	mov    rbx,rax
  42a132:	mov    rdi,rax
  42a135:	mov    rsi,r15
  42a138:	call   428b70 <strcmp@plt+0x253e8>
  42a13d:	cmp    eax,0x1
  42a140:	jne    42a19c <strcmp@plt+0x26a14>
  42a142:	cmp    DWORD PTR [rbx+0x18],0x0
  42a146:	jne    42a154 <strcmp@plt+0x269cc>
  42a148:	mov    rsi,QWORD PTR [r14+0x28]
  42a14c:	mov    rdi,rbx
  42a14f:	call   42c170 <strcmp@plt+0x289e8>
  42a154:	cmp    DWORD PTR [r12+0x18],0x0
  42a15a:	je     42a162 <strcmp@plt+0x269da>
  42a15c:	add    WORD PTR [r14+0x20],0xffff
  42a162:	lea    rax,[rip+0x3ac47]        # 464db0 <strcmp@plt+0x61628>
  42a169:	cmp    DWORD PTR [rax],0x2
  42a16c:	jl     42a1c9 <strcmp@plt+0x26a41>
  42a16e:	mov    rdi,QWORD PTR [r15]
  42a171:	call   423130 <strcmp@plt+0x1f9a8>
  42a176:	mov    rbx,rax
  42a179:	mov    rdi,r14
  42a17c:	call   423130 <strcmp@plt+0x1f9a8>
  42a181:	mov    rcx,rax
  42a184:	lea    rsi,[rip+0x20d6b]        # 44aef6 <strcmp@plt+0x4776e>
  42a18b:	mov    edi,0x6
  42a190:	xor    eax,eax
  42a192:	mov    rdx,rbx
  42a195:	call   42e800 <strcmp@plt+0x2b078>
  42a19a:	jmp    42a1c9 <strcmp@plt+0x26a41>
  42a19c:	lea    rax,[rip+0x3ac0d]        # 464db0 <strcmp@plt+0x61628>
  42a1a3:	cmp    DWORD PTR [rax],0x2
  42a1a6:	jl     42a1c9 <strcmp@plt+0x26a41>
  42a1a8:	mov    rdi,QWORD PTR [r15]
  42a1ab:	call   423130 <strcmp@plt+0x1f9a8>
  42a1b0:	mov    rcx,rax
  42a1b3:	lea    rsi,[rip+0x20ce7]        # 44aea1 <strcmp@plt+0x47719>
  42a1ba:	mov    edi,0x6
  42a1bf:	xor    eax,eax
  42a1c1:	mov    rdx,rcx
  42a1c4:	call   42e800 <strcmp@plt+0x2b078>
  42a1c9:	mov    eax,0x1
  42a1ce:	add    rsp,0x8
  42a1d2:	pop    rbx
  42a1d3:	pop    r12
  42a1d5:	pop    r14
  42a1d7:	pop    r15
  42a1d9:	ret    
  42a1da:	nop    WORD PTR [rax+rax*1+0x0]
  42a1e0:	push   rbx
  42a1e1:	mov    rbx,rdi
  42a1e4:	mov    rdi,QWORD PTR [rdi+0x28]
  42a1e8:	call   42c1e0 <strcmp@plt+0x28a58>
  42a1ed:	mov    WORD PTR [rbx+0x20],0x0
  42a1f3:	pop    rbx
  42a1f4:	ret    
  42a1f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a1ff:	nop
  42a200:	push   rbp
  42a201:	push   r15
  42a203:	push   r14
  42a205:	push   r12
  42a207:	push   rbx
  42a208:	test   rdi,rdi
  42a20b:	je     42a270 <strcmp@plt+0x26ae8>
  42a20d:	mov    r15,rsi
  42a210:	test   rsi,rsi
  42a213:	je     42a270 <strcmp@plt+0x26ae8>
  42a215:	mov    r14,rdi
  42a218:	mov    rdi,QWORD PTR [rdi+0x28]
  42a21c:	call   42c1e0 <strcmp@plt+0x28a58>
  42a221:	mov    rbp,QWORD PTR [r15+0x8]
  42a225:	xor    r12d,r12d
  42a228:	cmp    rbp,r15
  42a22b:	jne    42a23c <strcmp@plt+0x26ab4>
  42a22d:	jmp    42a26b <strcmp@plt+0x26ae3>
  42a22f:	nop
  42a230:	add    r12d,eax
  42a233:	mov    rbp,QWORD PTR [rbp+0x8]
  42a237:	cmp    rbp,r15
  42a23a:	je     42a26b <strcmp@plt+0x26ae3>
  42a23c:	mov    rdi,QWORD PTR [rbp+0x10]
  42a240:	call   428bd0 <strcmp@plt+0x25448>
  42a245:	mov    rbx,rax
  42a248:	mov    rsi,QWORD PTR [r14+0x28]
  42a24c:	mov    rdi,rax
  42a24f:	call   42bcf0 <strcmp@plt+0x28568>
  42a254:	mov    rax,QWORD PTR [rbx+0x8]
  42a258:	mov    rax,QWORD PTR [rax+0x10]
  42a25c:	mov    rax,QWORD PTR [rax]
  42a25f:	mov    eax,DWORD PTR [rax+0x18]
  42a262:	test   eax,eax
  42a264:	je     42a230 <strcmp@plt+0x26aa8>
  42a266:	mov    eax,DWORD PTR [rbx+0x18]
  42a269:	jmp    42a230 <strcmp@plt+0x26aa8>
  42a26b:	mov    WORD PTR [r14+0x20],r12w
  42a270:	pop    rbx
  42a271:	pop    r12
  42a273:	pop    r14
  42a275:	pop    r15
  42a277:	pop    rbp
  42a278:	ret    
  42a279:	nop    DWORD PTR [rax+0x0]
  42a280:	push   rbp
  42a281:	push   r15
  42a283:	push   r14
  42a285:	push   r13
  42a287:	push   r12
  42a289:	push   rbx
  42a28a:	push   rax
  42a28b:	mov    DWORD PTR [rsp+0x4],edx
  42a28f:	mov    r12d,esi
  42a292:	mov    rax,QWORD PTR [rdi+0x28]
  42a296:	mov    rbp,QWORD PTR [rax+0x8]
  42a29a:	cmp    rbp,rax
  42a29d:	je     42a2fa <strcmp@plt+0x26b72>
  42a29f:	mov    r15,rdi
  42a2a2:	mov    r13d,r12d
  42a2a5:	lea    r14,[rip+0x209e4]        # 44ac90 <strcmp@plt+0x47508>
  42a2ac:	nop    DWORD PTR [rax+0x0]
  42a2b0:	mov    rbx,QWORD PTR [rbp+0x10]
  42a2b4:	mov    rax,QWORD PTR [rbx+0x8]
  42a2b8:	mov    rax,QWORD PTR [rax+0x10]
  42a2bc:	mov    rdi,QWORD PTR [rax]
  42a2bf:	cmp    DWORD PTR [rdi+0x18],r12d
  42a2c3:	jne    42a2f0 <strcmp@plt+0x26b68>
  42a2c5:	cmp    r12d,0x3
  42a2c9:	ja     42a2f0 <strcmp@plt+0x26b68>
  42a2cb:	movsxd rax,DWORD PTR [r14+r13*4]
  42a2cf:	add    rax,r14
  42a2d2:	jmp    rax
  42a2d4:	call   423200 <strcmp@plt+0x1fa78>
  42a2d9:	movzx  eax,ax
  42a2dc:	cmp    eax,DWORD PTR [rsp+0x4]
  42a2e0:	jne    42a2f0 <strcmp@plt+0x26b68>
  42a2e2:	jmp    42a326 <strcmp@plt+0x26b9e>
  42a2e4:	call   423330 <strcmp@plt+0x1fba8>
  42a2e9:	cmp    eax,DWORD PTR [rsp+0x4]
  42a2ed:	je     42a326 <strcmp@plt+0x26b9e>
  42a2ef:	nop
  42a2f0:	mov    rbp,QWORD PTR [rbp+0x8]
  42a2f4:	cmp    rbp,QWORD PTR [r15+0x28]
  42a2f8:	jne    42a2b0 <strcmp@plt+0x26b28>
  42a2fa:	lea    rax,[rip+0x3aaaf]        # 464db0 <strcmp@plt+0x61628>
  42a301:	cmp    DWORD PTR [rax],0x3
  42a304:	jge    42a30a <strcmp@plt+0x26b82>
  42a306:	xor    ebx,ebx
  42a308:	jmp    42a326 <strcmp@plt+0x26b9e>
  42a30a:	lea    rsi,[rip+0x2074f]        # 44aa60 <strcmp@plt+0x472d8>
  42a311:	xor    ebx,ebx
  42a313:	mov    edi,0x7
  42a318:	xor    eax,eax
  42a31a:	mov    edx,r12d
  42a31d:	mov    ecx,DWORD PTR [rsp+0x4]
  42a321:	call   42e800 <strcmp@plt+0x2b078>
  42a326:	mov    rax,rbx
  42a329:	add    rsp,0x8
  42a32d:	pop    rbx
  42a32e:	pop    r12
  42a330:	pop    r13
  42a332:	pop    r14
  42a334:	pop    r15
  42a336:	pop    rbp
  42a337:	ret    
  42a338:	lea    rax,[rip+0x3aa71]        # 464db0 <strcmp@plt+0x61628>
  42a33f:	cmp    DWORD PTR [rax],0x0
  42a342:	jle    42a306 <strcmp@plt+0x26b7e>
  42a344:	lea    rsi,[rip+0x20c00]        # 44af4b <strcmp@plt+0x477c3>
  42a34b:	xor    ebx,ebx
  42a34d:	mov    edi,0x5
  42a352:	xor    eax,eax
  42a354:	call   42e800 <strcmp@plt+0x2b078>
  42a359:	jmp    42a326 <strcmp@plt+0x26b9e>
  42a35b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a360:	push   rbp
  42a361:	push   r15
  42a363:	push   r14
  42a365:	push   rbx
  42a366:	push   rax
  42a367:	mov    r14,rsi
  42a36a:	mov    r15,rdi
  42a36d:	mov    rbx,QWORD PTR [rsi]
  42a370:	mov    ebp,DWORD PTR [rbx+0x18]
  42a373:	mov    rdi,rbx
  42a376:	call   423c80 <strcmp@plt+0x204f8>
  42a37b:	mov    rdi,r15
  42a37e:	mov    esi,ebp
  42a380:	mov    edx,eax
  42a382:	call   42a280 <strcmp@plt+0x26af8>
  42a387:	xor    ecx,ecx
  42a389:	test   rax,rax
  42a38c:	je     42a3c5 <strcmp@plt+0x26c3d>
  42a38e:	test   rbx,rbx
  42a391:	je     42a3c5 <strcmp@plt+0x26c3d>
  42a393:	mov    edx,DWORD PTR [rax+0x18]
  42a396:	test   edx,edx
  42a398:	je     42a3c5 <strcmp@plt+0x26c3d>
  42a39a:	mov    rcx,QWORD PTR [rax+0x8]
  42a39e:	cmp    rcx,rax
  42a3a1:	je     42a3bf <strcmp@plt+0x26c37>
  42a3a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a3ad:	nop    DWORD PTR [rax]
  42a3b0:	cmp    QWORD PTR [rcx+0x10],r14
  42a3b4:	je     42a3c3 <strcmp@plt+0x26c3b>
  42a3b6:	mov    rcx,QWORD PTR [rcx+0x8]
  42a3ba:	cmp    rcx,rax
  42a3bd:	jne    42a3b0 <strcmp@plt+0x26c28>
  42a3bf:	xor    ecx,ecx
  42a3c1:	jmp    42a3c5 <strcmp@plt+0x26c3d>
  42a3c3:	mov    cl,0x1
  42a3c5:	mov    eax,ecx
  42a3c7:	add    rsp,0x8
  42a3cb:	pop    rbx
  42a3cc:	pop    r14
  42a3ce:	pop    r15
  42a3d0:	pop    rbp
  42a3d1:	ret    
  42a3d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a3dc:	nop    DWORD PTR [rax+0x0]
  42a3e0:	push   rbp
  42a3e1:	push   r14
  42a3e3:	push   rbx
  42a3e4:	mov    rbx,rsi
  42a3e7:	mov    r14,rdi
  42a3ea:	mov    ebp,DWORD PTR [rsi+0x18]
  42a3ed:	mov    rdi,rsi
  42a3f0:	call   423c80 <strcmp@plt+0x204f8>
  42a3f5:	mov    rdi,r14
  42a3f8:	mov    esi,ebp
  42a3fa:	mov    edx,eax
  42a3fc:	call   42a280 <strcmp@plt+0x26af8>
  42a401:	mov    r14,rax
  42a404:	mov    rdi,rax
  42a407:	mov    rsi,rbx
  42a40a:	call   428b00 <strcmp@plt+0x25378>
  42a40f:	test   rax,rax
  42a412:	je     42a423 <strcmp@plt+0x26c9b>
  42a414:	mov    rdi,rax
  42a417:	mov    rsi,r14
  42a41a:	pop    rbx
  42a41b:	pop    r14
  42a41d:	pop    rbp
  42a41e:	jmp    42bcf0 <strcmp@plt+0x28568>
  42a423:	xor    eax,eax
  42a425:	pop    rbx
  42a426:	pop    r14
  42a428:	pop    rbp
  42a429:	ret    
  42a42a:	nop    WORD PTR [rax+rax*1+0x0]
  42a430:	push   r15
  42a432:	push   r14
  42a434:	push   r13
  42a436:	push   r12
  42a438:	push   rbx
  42a439:	mov    r14,rdi
  42a43c:	lea    rdi,[rip+0xffffffffffff8b5d]        # 422fa0 <strcmp@plt+0x1f818>
  42a443:	call   42bc00 <strcmp@plt+0x28478>
  42a448:	mov    r12,rax
  42a44b:	mov    rax,QWORD PTR [r14+0x28]
  42a44f:	mov    r15,QWORD PTR [rax+0x8]
  42a453:	cmp    r15,rax
  42a456:	jne    42a469 <strcmp@plt+0x26ce1>
  42a458:	jmp    42a4a6 <strcmp@plt+0x26d1e>
  42a45a:	nop    WORD PTR [rax+rax*1+0x0]
  42a460:	mov    r15,QWORD PTR [r15+0x8]
  42a464:	cmp    r15,rax
  42a467:	je     42a4a6 <strcmp@plt+0x26d1e>
  42a469:	mov    r13,QWORD PTR [r15+0x10]
  42a46d:	cmp    DWORD PTR [r13+0x18],0x0
  42a472:	je     42a460 <strcmp@plt+0x26cd8>
  42a474:	mov    rbx,QWORD PTR [r13+0x8]
  42a478:	cmp    rbx,r13
  42a47b:	je     42a460 <strcmp@plt+0x26cd8>
  42a47d:	nop    DWORD PTR [rax]
  42a480:	mov    rax,QWORD PTR [rbx+0x10]
  42a484:	mov    rdi,QWORD PTR [rax]
  42a487:	call   423740 <strcmp@plt+0x1ffb8>
  42a48c:	mov    rdi,rax
  42a48f:	mov    rsi,r12
  42a492:	call   42be30 <strcmp@plt+0x286a8>
  42a497:	mov    rbx,QWORD PTR [rbx+0x8]
  42a49b:	cmp    rbx,r13
  42a49e:	jne    42a480 <strcmp@plt+0x26cf8>
  42a4a0:	mov    rax,QWORD PTR [r14+0x28]
  42a4a4:	jmp    42a460 <strcmp@plt+0x26cd8>
  42a4a6:	mov    rax,r12
  42a4a9:	pop    rbx
  42a4aa:	pop    r12
  42a4ac:	pop    r13
  42a4ae:	pop    r14
  42a4b0:	pop    r15
  42a4b2:	ret    
  42a4b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a4bd:	nop    DWORD PTR [rax]
  42a4c0:	mov    QWORD PTR [rdi+0x4],0x0
  42a4c8:	mov    DWORD PTR [rdi],0x10
  42a4ce:	ret    
  42a4cf:	nop
  42a4d0:	mov    QWORD PTR [rdi+0x4],0x0
  42a4d8:	mov    DWORD PTR [rdi],0x20
  42a4de:	ret    
  42a4df:	nop
  42a4e0:	mov    al,BYTE PTR [rdi+0x2]
  42a4e3:	mov    QWORD PTR [rdi+0x4],0x0
  42a4eb:	mov    BYTE PTR [rdi+0x3],0x0
  42a4ef:	mov    WORD PTR [rdi],0x30
  42a4f4:	and    al,0x2
  42a4f6:	or     al,0x1
  42a4f8:	mov    BYTE PTR [rdi+0x2],al
  42a4fb:	ret    
  42a4fc:	nop    DWORD PTR [rax+0x0]
  42a500:	mov    BYTE PTR [rdi+0x3],0x0
  42a504:	mov    QWORD PTR [rdi+0x4],0x0
  42a50c:	mov    BYTE PTR [rdi],0x40
  42a50f:	mov    WORD PTR [rdi+0x1],0x0
  42a515:	ret    
  42a516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a520:	mov    DWORD PTR [rdi],0x80
  42a526:	ret    
  42a527:	nop    WORD PTR [rax+rax*1+0x0]
  42a530:	mov    QWORD PTR [rdi+0x4],0x0
  42a538:	mov    DWORD PTR [rdi],0x70
  42a53e:	ret    
  42a53f:	nop
  42a540:	mov    DWORD PTR [rdi],0x0
  42a546:	mov    WORD PTR [rdi+0x4],0x0
  42a54c:	ret    
  42a54d:	nop    DWORD PTR [rax]
  42a550:	mov    QWORD PTR [rdi+0x4],0x0
  42a558:	mov    DWORD PTR [rdi],0x60
  42a55e:	ret    
  42a55f:	nop
  42a560:	push   rbp
  42a561:	push   r14
  42a563:	push   rbx
  42a564:	mov    rbx,rdi
  42a567:	mov    BYTE PTR [rip+0x44262],0x0        # 46e7d0 <strcmp@plt+0x6b048>
  42a56e:	lea    r14,[rip+0x4425b]        # 46e7d0 <strcmp@plt+0x6b048>
  42a575:	movzx  ebp,WORD PTR [rdi]
  42a578:	mov    rdi,r14
  42a57b:	call   4031e0 <strlen@plt>
  42a580:	add    rax,r14
  42a583:	test   bpl,0x8
  42a587:	jne    42a595 <strcmp@plt+0x26e0d>
  42a589:	mov    BYTE PTR [rax+0x4],0x0
  42a58d:	mov    DWORD PTR [rax],0x2c303d61
  42a593:	jmp    42a59f <strcmp@plt+0x26e17>
  42a595:	mov    BYTE PTR [rax+0x4],0x0
  42a599:	mov    DWORD PTR [rax],0x2c313d61
  42a59f:	movzx  ebp,WORD PTR [rbx]
  42a5a2:	mov    rdi,r14
  42a5a5:	call   4031e0 <strlen@plt>
  42a5aa:	add    rax,r14
  42a5ad:	test   bpl,0x4
  42a5b1:	jne    42a5bf <strcmp@plt+0x26e37>
  42a5b3:	mov    BYTE PTR [rax+0x4],0x0
  42a5b7:	mov    DWORD PTR [rax],0x2c303d6d
  42a5bd:	jmp    42a5c9 <strcmp@plt+0x26e41>
  42a5bf:	mov    BYTE PTR [rax+0x4],0x0
  42a5c3:	mov    DWORD PTR [rax],0x2c313d6d
  42a5c9:	movzx  ebp,WORD PTR [rbx]
  42a5cc:	mov    rdi,r14
  42a5cf:	call   4031e0 <strlen@plt>
  42a5d4:	add    rax,r14
  42a5d7:	test   bpl,0x2
  42a5db:	jne    42a5e9 <strcmp@plt+0x26e61>
  42a5dd:	mov    BYTE PTR [rax+0x4],0x0
  42a5e1:	mov    DWORD PTR [rax],0x2c303d70
  42a5e7:	jmp    42a5f3 <strcmp@plt+0x26e6b>
  42a5e9:	mov    BYTE PTR [rax+0x4],0x0
  42a5ed:	mov    DWORD PTR [rax],0x2c313d70
  42a5f3:	movzx  ebp,WORD PTR [rbx]
  42a5f6:	mov    rdi,r14
  42a5f9:	call   4031e0 <strlen@plt>
  42a5fe:	add    rax,r14
  42a601:	test   bpl,0x1
  42a605:	jne    42a613 <strcmp@plt+0x26e8b>
  42a607:	mov    BYTE PTR [rax+0x4],0x0
  42a60b:	mov    DWORD PTR [rax],0x2c303d73
  42a611:	jmp    42a61d <strcmp@plt+0x26e95>
  42a613:	mov    BYTE PTR [rax+0x4],0x0
  42a617:	mov    DWORD PTR [rax],0x2c313d73
  42a61d:	movzx  ebp,WORD PTR [rbx]
  42a620:	mov    rdi,r14
  42a623:	call   4031e0 <strlen@plt>
  42a628:	add    rax,r14
  42a62b:	test   bp,bp
  42a62e:	js     42a63c <strcmp@plt+0x26eb4>
  42a630:	mov    BYTE PTR [rax+0x4],0x0
  42a634:	mov    DWORD PTR [rax],0x2c303d50
  42a63a:	jmp    42a646 <strcmp@plt+0x26ebe>
  42a63c:	mov    BYTE PTR [rax+0x4],0x0
  42a640:	mov    DWORD PTR [rax],0x2c313d50
  42a646:	movzx  ebx,WORD PTR [rbx]
  42a649:	and    ebx,0x4000
  42a64f:	mov    rdi,r14
  42a652:	call   4031e0 <strlen@plt>
  42a657:	lea    ecx,[rbx*4+0x303d53]
  42a65e:	mov    DWORD PTR [rax+r14*1],ecx
  42a662:	mov    rax,r14
  42a665:	pop    rbx
  42a666:	pop    r14
  42a668:	pop    rbp
  42a669:	ret    
  42a66a:	nop    WORD PTR [rax+rax*1+0x0]
  42a670:	push   rbp
  42a671:	push   r15
  42a673:	push   r14
  42a675:	push   rbx
  42a676:	push   rax
  42a677:	test   rdi,rdi
  42a67a:	je     42a6d0 <strcmp@plt+0x26f48>
  42a67c:	mov    rbx,rdi
  42a67f:	mov    BYTE PTR [rip+0x4416a],0x0        # 46e7f0 <strcmp@plt+0x6b068>
  42a686:	lea    r14,[rip+0x44163]        # 46e7f0 <strcmp@plt+0x6b068>
  42a68d:	call   42a560 <strcmp@plt+0x26dd8>
  42a692:	movzx  ebp,BYTE PTR [rbx+0x2]
  42a696:	and    ebp,0x1f
  42a699:	movzx  r15d,BYTE PTR [rbx+0x3]
  42a69e:	mov    rdi,QWORD PTR [rbx+0x4]
  42a6a2:	call   432230 <strcmp@plt+0x2eaa8>
  42a6a7:	mov    QWORD PTR [rsp],rax
  42a6ab:	lea    rdx,[rip+0x20906]        # 44afb8 <strcmp@plt+0x47830>
  42a6b2:	lea    rcx,[rip+0x44117]        # 46e7d0 <strcmp@plt+0x6b048>
  42a6b9:	mov    esi,0x78
  42a6be:	xor    eax,eax
  42a6c0:	mov    r8d,ebp
  42a6c3:	mov    rdi,r14
  42a6c6:	mov    r9d,r15d
  42a6c9:	call   403620 <snprintf@plt>
  42a6ce:	jmp    42a6d3 <strcmp@plt+0x26f4b>
  42a6d0:	xor    r14d,r14d
  42a6d3:	mov    rax,r14
  42a6d6:	add    rsp,0x8
  42a6da:	pop    rbx
  42a6db:	pop    r14
  42a6dd:	pop    r15
  42a6df:	pop    rbp
  42a6e0:	ret    
  42a6e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a6eb:	nop    DWORD PTR [rax+rax*1+0x0]
  42a6f0:	push   rbp
  42a6f1:	push   r14
  42a6f3:	push   rbx
  42a6f4:	mov    rbx,rdi
  42a6f7:	mov    BYTE PTR [rip+0x4416a],0x0        # 46e868 <strcmp@plt+0x6b0e0>
  42a6fe:	lea    r14,[rip+0x44163]        # 46e868 <strcmp@plt+0x6b0e0>
  42a705:	mov    bpl,BYTE PTR [rdi]
  42a708:	mov    rdi,r14
  42a70b:	call   4031e0 <strlen@plt>
  42a710:	add    rax,r14
  42a713:	test   bpl,0x8
  42a717:	jne    42a725 <strcmp@plt+0x26f9d>
  42a719:	mov    BYTE PTR [rax+0x4],0x0
  42a71d:	mov    DWORD PTR [rax],0x2c303d50
  42a723:	jmp    42a72f <strcmp@plt+0x26fa7>
  42a725:	mov    BYTE PTR [rax+0x4],0x0
  42a729:	mov    DWORD PTR [rax],0x2c313d50
  42a72f:	mov    bpl,BYTE PTR [rbx]
  42a732:	mov    rdi,r14
  42a735:	call   4031e0 <strlen@plt>
  42a73a:	add    rax,r14
  42a73d:	test   bpl,0x4
  42a741:	jne    42a74f <strcmp@plt+0x26fc7>
  42a743:	mov    BYTE PTR [rax+0x4],0x0
  42a747:	mov    DWORD PTR [rax],0x2c303d45
  42a74d:	jmp    42a759 <strcmp@plt+0x26fd1>
  42a74f:	mov    BYTE PTR [rax+0x4],0x0
  42a753:	mov    DWORD PTR [rax],0x2c313d45
  42a759:	mov    bl,BYTE PTR [rbx]
  42a75b:	and    bl,0x2
  42a75e:	shr    bl,1
  42a760:	mov    rdi,r14
  42a763:	call   4031e0 <strlen@plt>
  42a768:	movzx  ecx,bl
  42a76b:	shl    ecx,0x10
  42a76e:	or     ecx,0x303d53
  42a774:	mov    DWORD PTR [rax+r14*1],ecx
  42a778:	mov    rax,r14
  42a77b:	pop    rbx
  42a77c:	pop    r14
  42a77e:	pop    rbp
  42a77f:	ret    
  42a780:	push   rbp
  42a781:	push   r15
  42a783:	push   r14
  42a785:	push   rbx
  42a786:	push   rax
  42a787:	test   rdi,rdi
  42a78a:	je     42a7bb <strcmp@plt+0x27033>
  42a78c:	mov    rbp,rdi
  42a78f:	mov    BYTE PTR [rip+0x440d2],0x0        # 46e868 <strcmp@plt+0x6b0e0>
  42a796:	lea    r14,[rip+0x440cb]        # 46e868 <strcmp@plt+0x6b0e0>
  42a79d:	mov    bl,BYTE PTR [rdi]
  42a79f:	mov    rdi,r14
  42a7a2:	call   4031e0 <strlen@plt>
  42a7a7:	add    rax,r14
  42a7aa:	test   bl,0x8
  42a7ad:	jne    42a7c2 <strcmp@plt+0x2703a>
  42a7af:	mov    BYTE PTR [rax+0x4],0x0
  42a7b3:	mov    DWORD PTR [rax],0x2c303d50
  42a7b9:	jmp    42a7cc <strcmp@plt+0x27044>
  42a7bb:	xor    ebx,ebx
  42a7bd:	jmp    42a84c <strcmp@plt+0x270c4>
  42a7c2:	mov    BYTE PTR [rax+0x4],0x0
  42a7c6:	mov    DWORD PTR [rax],0x2c313d50
  42a7cc:	mov    bl,BYTE PTR [rbp+0x0]
  42a7cf:	mov    rdi,r14
  42a7d2:	call   4031e0 <strlen@plt>
  42a7d7:	add    rax,r14
  42a7da:	test   bl,0x4
  42a7dd:	jne    42a7eb <strcmp@plt+0x27063>
  42a7df:	mov    BYTE PTR [rax+0x4],0x0
  42a7e3:	mov    DWORD PTR [rax],0x2c303d45
  42a7e9:	jmp    42a7f5 <strcmp@plt+0x2706d>
  42a7eb:	mov    BYTE PTR [rax+0x4],0x0
  42a7ef:	mov    DWORD PTR [rax],0x2c313d45
  42a7f5:	mov    bl,BYTE PTR [rbp+0x0]
  42a7f8:	and    bl,0x2
  42a7fb:	shr    bl,1
  42a7fd:	mov    rdi,r14
  42a800:	call   4031e0 <strlen@plt>
  42a805:	movzx  ecx,bl
  42a808:	shl    ecx,0x10
  42a80b:	or     ecx,0x303d53
  42a811:	mov    DWORD PTR [rax+r14*1],ecx
  42a815:	movzx  r15d,BYTE PTR [rbp+0x3]
  42a81a:	mov    rdi,QWORD PTR [rbp+0x4]
  42a81e:	call   432230 <strcmp@plt+0x2eaa8>
  42a823:	mov    rbp,rax
  42a826:	lea    rbx,[rip+0x44053]        # 46e880 <strcmp@plt+0x6b0f8>
  42a82d:	lea    rdx,[rip+0x207d9]        # 44b00d <strcmp@plt+0x47885>
  42a834:	mov    esi,0x64
  42a839:	xor    eax,eax
  42a83b:	mov    r8d,r15d
  42a83e:	mov    rdi,rbx
  42a841:	mov    rcx,r14
  42a844:	mov    r9,rbp
  42a847:	call   403620 <snprintf@plt>
  42a84c:	mov    rax,rbx
  42a84f:	add    rsp,0x8
  42a853:	pop    rbx
  42a854:	pop    r14
  42a856:	pop    r15
  42a858:	pop    rbp
  42a859:	ret    
  42a85a:	nop    WORD PTR [rax+rax*1+0x0]
  42a860:	push   rbx
  42a861:	test   rdi,rdi
  42a864:	je     42a890 <strcmp@plt+0x27108>
  42a866:	mov    BYTE PTR [rip+0x44083],0x0        # 46e8f0 <strcmp@plt+0x6b168>
  42a86d:	mov    bl,BYTE PTR [rdi]
  42a86f:	mov    rdi,QWORD PTR [rdi+0x4]
  42a873:	call   432230 <strcmp@plt+0x2eaa8>
  42a878:	mov    rcx,rax
  42a87b:	test   bl,0x8
  42a87e:	jne    42a894 <strcmp@plt+0x2710c>
  42a880:	lea    rbx,[rip+0x44069]        # 46e8f0 <strcmp@plt+0x6b168>
  42a887:	lea    rsi,[rip+0x207ba]        # 44b048 <strcmp@plt+0x478c0>
  42a88e:	jmp    42a8a2 <strcmp@plt+0x2711a>
  42a890:	xor    ebx,ebx
  42a892:	jmp    42a8af <strcmp@plt+0x27127>
  42a894:	lea    rbx,[rip+0x44055]        # 46e8f0 <strcmp@plt+0x6b168>
  42a89b:	lea    rsi,[rip+0x207c8]        # 44b06a <strcmp@plt+0x478e2>
  42a8a2:	xor    eax,eax
  42a8a4:	mov    rdi,rbx
  42a8a7:	mov    rdx,rcx
  42a8aa:	call   4030b0 <sprintf@plt>
  42a8af:	mov    rax,rbx
  42a8b2:	pop    rbx
  42a8b3:	ret    
  42a8b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a8be:	xchg   ax,ax
  42a8c0:	push   rbp
  42a8c1:	push   r14
  42a8c3:	push   rbx
  42a8c4:	mov    rbx,rdi
  42a8c7:	mov    BYTE PTR [rip+0x44086],0x0        # 46e954 <strcmp@plt+0x6b1cc>
  42a8ce:	test   BYTE PTR [rdi],0x8
  42a8d1:	jne    42a8eb <strcmp@plt+0x27163>
  42a8d3:	lea    r14,[rip+0x4407a]        # 46e954 <strcmp@plt+0x6b1cc>
  42a8da:	mov    rdi,r14
  42a8dd:	call   4031e0 <strlen@plt>
  42a8e2:	mov    WORD PTR [rax+r14*1],0x70
  42a8e9:	jmp    42a8f4 <strcmp@plt+0x2716c>
  42a8eb:	mov    WORD PTR [rip+0x44060],0x50        # 46e954 <strcmp@plt+0x6b1cc>
  42a8f4:	xor    ebp,ebp
  42a8f6:	test   BYTE PTR [rbx],0x2
  42a8f9:	sete   bpl
  42a8fd:	lea    r14,[rip+0x44050]        # 46e954 <strcmp@plt+0x6b1cc>
  42a904:	mov    rdi,r14
  42a907:	call   4031e0 <strlen@plt>
  42a90c:	shl    ebp,0x5
  42a90f:	or     ebp,0x49
  42a912:	mov    WORD PTR [rax+r14*1],bp
  42a917:	xor    ebp,ebp
  42a919:	test   BYTE PTR [rbx],0x1
  42a91c:	sete   bpl
  42a920:	mov    rdi,r14
  42a923:	call   4031e0 <strlen@plt>
  42a928:	shl    ebp,0x5
  42a92b:	or     ebp,0x52
  42a92e:	mov    WORD PTR [rax+r14*1],bp
  42a933:	xor    ebp,ebp
  42a935:	test   BYTE PTR [rbx+0x2],0x1
  42a939:	sete   bpl
  42a93d:	mov    rdi,r14
  42a940:	call   4031e0 <strlen@plt>
  42a945:	shl    ebp,0x5
  42a948:	or     ebp,0x4d
  42a94b:	mov    WORD PTR [rax+r14*1],bp
  42a950:	mov    rax,r14
  42a953:	pop    rbx
  42a954:	pop    r14
  42a956:	pop    rbp
  42a957:	ret    
  42a958:	nop    DWORD PTR [rax+rax*1+0x0]
  42a960:	push   rbp
  42a961:	push   r15
  42a963:	push   r14
  42a965:	push   rbx
  42a966:	push   rax
  42a967:	test   rdi,rdi
  42a96a:	je     42a99a <strcmp@plt+0x27212>
  42a96c:	mov    rbx,rdi
  42a96f:	mov    BYTE PTR [rip+0x43fea],0x0        # 46e960 <strcmp@plt+0x6b1d8>
  42a976:	mov    BYTE PTR [rip+0x43fd7],0x0        # 46e954 <strcmp@plt+0x6b1cc>
  42a97d:	test   BYTE PTR [rdi],0x8
  42a980:	jne    42a9a1 <strcmp@plt+0x27219>
  42a982:	lea    r14,[rip+0x43fcb]        # 46e954 <strcmp@plt+0x6b1cc>
  42a989:	mov    rdi,r14
  42a98c:	call   4031e0 <strlen@plt>
  42a991:	mov    WORD PTR [rax+r14*1],0x70
  42a998:	jmp    42a9aa <strcmp@plt+0x27222>
  42a99a:	xor    ebx,ebx
  42a99c:	jmp    42aa3d <strcmp@plt+0x272b5>
  42a9a1:	mov    WORD PTR [rip+0x43faa],0x50        # 46e954 <strcmp@plt+0x6b1cc>
  42a9aa:	xor    ebp,ebp
  42a9ac:	test   BYTE PTR [rbx],0x2
  42a9af:	sete   bpl
  42a9b3:	lea    r14,[rip+0x43f9a]        # 46e954 <strcmp@plt+0x6b1cc>
  42a9ba:	mov    rdi,r14
  42a9bd:	call   4031e0 <strlen@plt>
  42a9c2:	shl    ebp,0x5
  42a9c5:	or     ebp,0x49
  42a9c8:	mov    WORD PTR [rax+r14*1],bp
  42a9cd:	xor    ebp,ebp
  42a9cf:	test   BYTE PTR [rbx],0x1
  42a9d2:	sete   bpl
  42a9d6:	mov    rdi,r14
  42a9d9:	call   4031e0 <strlen@plt>
  42a9de:	shl    ebp,0x5
  42a9e1:	or     ebp,0x52
  42a9e4:	mov    WORD PTR [rax+r14*1],bp
  42a9e9:	xor    ebp,ebp
  42a9eb:	test   BYTE PTR [rbx+0x2],0x1
  42a9ef:	sete   bpl
  42a9f3:	mov    rdi,r14
  42a9f6:	call   4031e0 <strlen@plt>
  42a9fb:	shl    ebp,0x5
  42a9fe:	or     ebp,0x4d
  42aa01:	mov    WORD PTR [rax+r14*1],bp
  42aa06:	movzx  r15d,BYTE PTR [rbx+0x3]
  42aa0b:	mov    rdi,QWORD PTR [rbx+0x4]
  42aa0f:	call   432230 <strcmp@plt+0x2eaa8>
  42aa14:	mov    rbp,rax
  42aa17:	lea    rbx,[rip+0x43f42]        # 46e960 <strcmp@plt+0x6b1d8>
  42aa1e:	lea    rdx,[rip+0x20665]        # 44b08a <strcmp@plt+0x47902>
  42aa25:	mov    esi,0x64
  42aa2a:	xor    eax,eax
  42aa2c:	mov    r8d,r15d
  42aa2f:	mov    rdi,rbx
  42aa32:	mov    rcx,r14
  42aa35:	mov    r9,rbp
  42aa38:	call   403620 <snprintf@plt>
  42aa3d:	mov    rax,rbx
  42aa40:	add    rsp,0x8
  42aa44:	pop    rbx
  42aa45:	pop    r14
  42aa47:	pop    r15
  42aa49:	pop    rbp
  42aa4a:	ret    
  42aa4b:	nop    DWORD PTR [rax+rax*1+0x0]
  42aa50:	push   rbp
  42aa51:	push   rbx
  42aa52:	push   rax
  42aa53:	xor    eax,eax
  42aa55:	test   BYTE PTR [rdi],0x8
  42aa58:	sete   al
  42aa5b:	shl    eax,0x5
  42aa5e:	or     eax,0x49
  42aa61:	mov    WORD PTR [rip+0x43f5c],ax        # 46e9c4 <strcmp@plt+0x6b23c>
  42aa68:	lea    rbx,[rip+0x43f55]        # 46e9c4 <strcmp@plt+0x6b23c>
  42aa6f:	xor    ebp,ebp
  42aa71:	test   BYTE PTR [rdi],0x4
  42aa74:	sete   bpl
  42aa78:	mov    rdi,rbx
  42aa7b:	call   4031e0 <strlen@plt>
  42aa80:	shl    ebp,0x5
  42aa83:	or     ebp,0x52
  42aa86:	mov    WORD PTR [rax+rbx*1],bp
  42aa8a:	mov    rax,rbx
  42aa8d:	add    rsp,0x8
  42aa91:	pop    rbx
  42aa92:	pop    rbp
  42aa93:	ret    
  42aa94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aa9e:	xchg   ax,ax
  42aaa0:	push   rbp
  42aaa1:	push   r15
  42aaa3:	push   r14
  42aaa5:	push   rbx
  42aaa6:	push   rax
  42aaa7:	test   rdi,rdi
  42aaaa:	je     42ab26 <strcmp@plt+0x2739e>
  42aaac:	mov    rbx,rdi
  42aaaf:	mov    BYTE PTR [rip+0x43f1a],0x0        # 46e9d0 <strcmp@plt+0x6b248>
  42aab6:	lea    r15,[rip+0x43f13]        # 46e9d0 <strcmp@plt+0x6b248>
  42aabd:	xor    eax,eax
  42aabf:	test   BYTE PTR [rdi],0x8
  42aac2:	sete   al
  42aac5:	shl    eax,0x5
  42aac8:	or     eax,0x49
  42aacb:	mov    WORD PTR [rip+0x43ef2],ax        # 46e9c4 <strcmp@plt+0x6b23c>
  42aad2:	lea    r14,[rip+0x43eeb]        # 46e9c4 <strcmp@plt+0x6b23c>
  42aad9:	xor    ebp,ebp
  42aadb:	test   BYTE PTR [rdi],0x4
  42aade:	sete   bpl
  42aae2:	mov    rdi,r14
  42aae5:	call   4031e0 <strlen@plt>
  42aaea:	shl    ebp,0x5
  42aaed:	or     ebp,0x52
  42aaf0:	mov    WORD PTR [rax+r14*1],bp
  42aaf5:	movzx  ebp,BYTE PTR [rbx+0x3]
  42aaf9:	mov    rdi,QWORD PTR [rbx+0x4]
  42aafd:	call   432230 <strcmp@plt+0x2eaa8>
  42ab02:	mov    rbx,rax
  42ab05:	lea    rdx,[rip+0x205ba]        # 44b0c6 <strcmp@plt+0x4793e>
  42ab0c:	mov    esi,0x64
  42ab11:	xor    eax,eax
  42ab13:	mov    r8d,ebp
  42ab16:	mov    rdi,r15
  42ab19:	mov    rcx,r14
  42ab1c:	mov    r9,rbx
  42ab1f:	call   403620 <snprintf@plt>
  42ab24:	jmp    42ab29 <strcmp@plt+0x273a1>
  42ab26:	xor    r15d,r15d
  42ab29:	mov    rax,r15
  42ab2c:	add    rsp,0x8
  42ab30:	pop    rbx
  42ab31:	pop    r14
  42ab33:	pop    r15
  42ab35:	pop    rbp
  42ab36:	ret    
  42ab37:	nop    WORD PTR [rax+rax*1+0x0]
  42ab40:	push   rbp
  42ab41:	push   r14
  42ab43:	push   rbx
  42ab44:	mov    rbx,rdi
  42ab47:	mov    BYTE PTR [rip+0x43ef2],0x0        # 46ea40 <strcmp@plt+0x6b2b8>
  42ab4e:	test   BYTE PTR [rdi],0x8
  42ab51:	jne    42ab66 <strcmp@plt+0x273de>
  42ab53:	mov    BYTE PTR [rip+0x43eea],0x0        # 46ea44 <strcmp@plt+0x6b2bc>
  42ab5a:	mov    DWORD PTR [rip+0x43edc],0x2c303d53        # 46ea40 <strcmp@plt+0x6b2b8>
  42ab64:	jmp    42ab77 <strcmp@plt+0x273ef>
  42ab66:	mov    BYTE PTR [rip+0x43ed7],0x0        # 46ea44 <strcmp@plt+0x6b2bc>
  42ab6d:	mov    DWORD PTR [rip+0x43ec9],0x2c313d53        # 46ea40 <strcmp@plt+0x6b2b8>
  42ab77:	movzx  ebp,WORD PTR [rbx]
  42ab7a:	lea    r14,[rip+0x43ebf]        # 46ea40 <strcmp@plt+0x6b2b8>
  42ab81:	mov    rdi,r14
  42ab84:	call   4031e0 <strlen@plt>
  42ab89:	add    rax,r14
  42ab8c:	test   bpl,0x4
  42ab90:	jne    42ab9e <strcmp@plt+0x27416>
  42ab92:	mov    BYTE PTR [rax+0x4],0x0
  42ab96:	mov    DWORD PTR [rax],0x2c303d44
  42ab9c:	jmp    42aba8 <strcmp@plt+0x27420>
  42ab9e:	mov    BYTE PTR [rax+0x4],0x0
  42aba2:	mov    DWORD PTR [rax],0x2c313d44
  42aba8:	movzx  ebp,WORD PTR [rbx]
  42abab:	mov    rdi,r14
  42abae:	call   4031e0 <strlen@plt>
  42abb3:	add    rax,r14
  42abb6:	test   ebp,0x4000
  42abbc:	jne    42abca <strcmp@plt+0x27442>
  42abbe:	mov    BYTE PTR [rax+0x4],0x0
  42abc2:	mov    DWORD PTR [rax],0x2c303d52
  42abc8:	jmp    42abd4 <strcmp@plt+0x2744c>
  42abca:	mov    BYTE PTR [rax+0x4],0x0
  42abce:	mov    DWORD PTR [rax],0x2c313d52
  42abd4:	movzx  eax,WORD PTR [rbx]
  42abd7:	mov    ecx,0x10d
  42abdc:	bextr  ebx,eax,ecx
  42abe1:	mov    rdi,r14
  42abe4:	call   4031e0 <strlen@plt>
  42abe9:	shl    ebx,0x10
  42abec:	or     ebx,0x303d4e
  42abf2:	mov    DWORD PTR [rax+r14*1],ebx
  42abf6:	mov    rax,r14
  42abf9:	pop    rbx
  42abfa:	pop    r14
  42abfc:	pop    rbp
  42abfd:	ret    
  42abfe:	xchg   ax,ax
  42ac00:	push   rbp
  42ac01:	push   r14
  42ac03:	push   rbx
  42ac04:	test   rdi,rdi
  42ac07:	je     42ac2b <strcmp@plt+0x274a3>
  42ac09:	mov    rbx,rdi
  42ac0c:	mov    BYTE PTR [rip+0x43e2d],0x0        # 46ea40 <strcmp@plt+0x6b2b8>
  42ac13:	test   BYTE PTR [rdi],0x8
  42ac16:	jne    42ac32 <strcmp@plt+0x274aa>
  42ac18:	mov    BYTE PTR [rip+0x43e25],0x0        # 46ea44 <strcmp@plt+0x6b2bc>
  42ac1f:	mov    DWORD PTR [rip+0x43e17],0x2c303d53        # 46ea40 <strcmp@plt+0x6b2b8>
  42ac29:	jmp    42ac43 <strcmp@plt+0x274bb>
  42ac2b:	xor    ebx,ebx
  42ac2d:	jmp    42ace2 <strcmp@plt+0x2755a>
  42ac32:	mov    BYTE PTR [rip+0x43e0b],0x0        # 46ea44 <strcmp@plt+0x6b2bc>
  42ac39:	mov    DWORD PTR [rip+0x43dfd],0x2c313d53        # 46ea40 <strcmp@plt+0x6b2b8>
  42ac43:	movzx  ebp,WORD PTR [rbx]
  42ac46:	lea    r14,[rip+0x43df3]        # 46ea40 <strcmp@plt+0x6b2b8>
  42ac4d:	mov    rdi,r14
  42ac50:	call   4031e0 <strlen@plt>
  42ac55:	add    rax,r14
  42ac58:	test   bpl,0x4
  42ac5c:	jne    42ac6a <strcmp@plt+0x274e2>
  42ac5e:	mov    BYTE PTR [rax+0x4],0x0
  42ac62:	mov    DWORD PTR [rax],0x2c303d44
  42ac68:	jmp    42ac74 <strcmp@plt+0x274ec>
  42ac6a:	mov    BYTE PTR [rax+0x4],0x0
  42ac6e:	mov    DWORD PTR [rax],0x2c313d44
  42ac74:	movzx  ebp,WORD PTR [rbx]
  42ac77:	mov    rdi,r14
  42ac7a:	call   4031e0 <strlen@plt>
  42ac7f:	add    rax,r14
  42ac82:	test   ebp,0x4000
  42ac88:	jne    42ac96 <strcmp@plt+0x2750e>
  42ac8a:	mov    BYTE PTR [rax+0x4],0x0
  42ac8e:	mov    DWORD PTR [rax],0x2c303d52
  42ac94:	jmp    42aca0 <strcmp@plt+0x27518>
  42ac96:	mov    BYTE PTR [rax+0x4],0x0
  42ac9a:	mov    DWORD PTR [rax],0x2c313d52
  42aca0:	movzx  eax,WORD PTR [rbx]
  42aca3:	mov    ecx,0x10d
  42aca8:	bextr  ebx,eax,ecx
  42acad:	mov    rdi,r14
  42acb0:	call   4031e0 <strlen@plt>
  42acb5:	shl    ebx,0x10
  42acb8:	or     ebx,0x303d4e
  42acbe:	mov    DWORD PTR [rax+r14*1],ebx
  42acc2:	lea    rbx,[rip+0x43d87]        # 46ea50 <strcmp@plt+0x6b2c8>
  42acc9:	lea    rdx,[rip+0x2044f]        # 44b11f <strcmp@plt+0x47997>
  42acd0:	mov    esi,0x32
  42acd5:	xor    eax,eax
  42acd7:	mov    rdi,rbx
  42acda:	mov    rcx,r14
  42acdd:	call   403620 <snprintf@plt>
  42ace2:	mov    rax,rbx
  42ace5:	pop    rbx
  42ace6:	pop    r14
  42ace8:	pop    rbp
  42ace9:	ret    
  42acea:	nop    WORD PTR [rax+rax*1+0x0]
  42acf0:	push   rbx
  42acf1:	test   rdi,rdi
  42acf4:	je     42ad24 <strcmp@plt+0x2759c>
  42acf6:	mov    BYTE PTR [rip+0x43d93],0x0        # 46ea90 <strcmp@plt+0x6b308>
  42acfd:	lea    rbx,[rip+0x43d8c]        # 46ea90 <strcmp@plt+0x6b308>
  42ad04:	movzx  ecx,BYTE PTR [rdi+0x3]
  42ad08:	mov    r8,QWORD PTR [rdi+0x4]
  42ad0c:	lea    rdx,[rip+0x20424]        # 44b137 <strcmp@plt+0x479af>
  42ad13:	mov    esi,0x64
  42ad18:	xor    eax,eax
  42ad1a:	mov    rdi,rbx
  42ad1d:	call   403620 <snprintf@plt>
  42ad22:	jmp    42ad26 <strcmp@plt+0x2759e>
  42ad24:	xor    ebx,ebx
  42ad26:	mov    rax,rbx
  42ad29:	pop    rbx
  42ad2a:	ret    
  42ad2b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ad30:	movzx  eax,WORD PTR [rdi]
  42ad33:	cmp    eax,0x340
  42ad38:	jne    42ad52 <strcmp@plt+0x275ca>
  42ad3a:	cmp    BYTE PTR [rdi+0x4],0x9
  42ad3e:	jne    42ad55 <strcmp@plt+0x275cd>
  42ad40:	mov    cl,BYTE PTR [rdi+0x5]
  42ad43:	mov    al,0x1
  42ad45:	test   cl,0x1
  42ad48:	jne    42ad51 <strcmp@plt+0x275c9>
  42ad4a:	shr    cl,1
  42ad4c:	and    cl,0x1
  42ad4f:	mov    eax,ecx
  42ad51:	ret    
  42ad52:	xor    eax,eax
  42ad54:	ret    
  42ad55:	xor    eax,eax
  42ad57:	ret    
  42ad58:	nop    DWORD PTR [rax+rax*1+0x0]
  42ad60:	movzx  ecx,WORD PTR [rdi]
  42ad63:	xor    eax,eax
  42ad65:	cmp    ecx,0x340
  42ad6b:	jne    42adb4 <strcmp@plt+0x2762c>
  42ad6d:	cmp    BYTE PTR [rdi+0x4],0x9
  42ad71:	jne    42adb4 <strcmp@plt+0x2762c>
  42ad73:	mov    sil,BYTE PTR [rdi+0x5]
  42ad77:	mov    edi,esi
  42ad79:	and    dil,0x3
  42ad7d:	je     42adb4 <strcmp@plt+0x2762c>
  42ad7f:	mov    ecx,0x0
  42ad84:	mov    edx,0x0
  42ad89:	cmp    dil,0x3
  42ad8d:	je     42adb8 <strcmp@plt+0x27630>
  42ad8f:	mov    ecx,esi
  42ad91:	and    cl,0x1
  42ad94:	mov    eax,esi
  42ad96:	shr    al,0x2
  42ad99:	and    al,0x1
  42ad9b:	shr    sil,1
  42ad9e:	and    sil,0x1
  42ada2:	movzx  edx,sil
  42ada6:	shl    edx,0x10
  42ada9:	movzx  ecx,cl
  42adac:	shl    ecx,0x8
  42adaf:	movzx  eax,al
  42adb2:	jmp    42adb8 <strcmp@plt+0x27630>
  42adb4:	xor    ecx,ecx
  42adb6:	xor    edx,edx
  42adb8:	or     eax,edx
  42adba:	or     eax,ecx
  42adbc:	ret    
  42adbd:	nop    DWORD PTR [rax]
  42adc0:	mov    al,BYTE PTR [rsi+0x1]
  42adc3:	mov    cl,BYTE PTR [rdi+0x5]
  42adc6:	and    al,0x1
  42adc8:	and    cl,0xfe
  42adcb:	or     cl,al
  42adcd:	mov    BYTE PTR [rdi+0x5],cl
  42add0:	mov    al,BYTE PTR [rsi+0x2]
  42add3:	add    al,al
  42add5:	and    al,0x2
  42add7:	and    cl,0xfd
  42adda:	or     cl,al
  42addc:	mov    BYTE PTR [rdi+0x5],cl
  42addf:	mov    al,BYTE PTR [rsi]
  42ade1:	shl    al,0x2
  42ade4:	and    al,0x4
  42ade6:	and    cl,0xfb
  42ade9:	or     cl,al
  42adeb:	mov    BYTE PTR [rdi+0x5],cl
  42adee:	ret    
  42adef:	nop
  42adf0:	movabs rax,0x1000010a000000
  42adfa:	mov    QWORD PTR [rdi],rax
  42adfd:	mov    WORD PTR [rdi+0x8],0x0
  42ae03:	ret    
  42ae04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ae0e:	xchg   ax,ax
  42ae10:	movabs rax,0x1000010a000000
  42ae1a:	mov    QWORD PTR [rdi],rax
  42ae1d:	mov    WORD PTR [rdi+0x8],0x0
  42ae23:	ret    
  42ae24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ae2e:	xchg   ax,ax
  42ae30:	mov    BYTE PTR [rip+0x43cc9],0x0        # 46eb00 <strcmp@plt+0x6b378>
  42ae37:	cmp    edi,0x3
  42ae3a:	ja     42ae70 <strcmp@plt+0x276e8>
  42ae3c:	mov    eax,edi
  42ae3e:	lea    rcx,[rip+0x20327]        # 44b16c <strcmp@plt+0x479e4>
  42ae45:	movsxd rax,DWORD PTR [rcx+rax*4]
  42ae49:	add    rax,rcx
  42ae4c:	jmp    rax
  42ae4e:	movabs rax,0x6f697463612d6f6e
  42ae58:	mov    QWORD PTR [rip+0x43ca1],rax        # 46eb00 <strcmp@plt+0x6b378>
  42ae5f:	mov    WORD PTR [rip+0x43ca0],0x6e        # 46eb08 <strcmp@plt+0x6b380>
  42ae68:	lea    rax,[rip+0x43c91]        # 46eb00 <strcmp@plt+0x6b378>
  42ae6f:	ret    
  42ae70:	movabs rax,0x6e6f697463612d
  42ae7a:	mov    QWORD PTR [rip+0x43c86],rax        # 46eb07 <strcmp@plt+0x6b37f>
  42ae81:	movabs rax,0x2d6e776f6e6b6e75
  42ae8b:	jmp    42aea8 <strcmp@plt+0x27720>
  42ae8d:	movabs rax,0x64726177726f66
  42ae97:	mov    QWORD PTR [rip+0x43c69],rax        # 46eb07 <strcmp@plt+0x6b37f>
  42ae9e:	movabs rax,0x662d65766974616e
  42aea8:	mov    QWORD PTR [rip+0x43c51],rax        # 46eb00 <strcmp@plt+0x6b378>
  42aeaf:	lea    rax,[rip+0x43c4a]        # 46eb00 <strcmp@plt+0x6b378>
  42aeb6:	ret    
  42aeb7:	vmovups xmm0,XMMWORD PTR [rip+0x20316]        # 44b1d5 <strcmp@plt+0x47a4d>
  42aebf:	vmovaps XMMWORD PTR [rip+0x43c39],xmm0        # 46eb00 <strcmp@plt+0x6b378>
  42aec7:	mov    BYTE PTR [rip+0x43c42],0x0        # 46eb10 <strcmp@plt+0x6b388>
  42aece:	lea    rax,[rip+0x43c2b]        # 46eb00 <strcmp@plt+0x6b378>
  42aed5:	ret    
  42aed6:	mov    BYTE PTR [rip+0x43c27],0x0        # 46eb04 <strcmp@plt+0x6b37c>
  42aedd:	mov    DWORD PTR [rip+0x43c19],0x706f7264        # 46eb00 <strcmp@plt+0x6b378>
  42aee7:	lea    rax,[rip+0x43c12]        # 46eb00 <strcmp@plt+0x6b378>
  42aeee:	ret    
  42aeef:	nop
  42aef0:	mov    BYTE PTR [rip+0x43c29],0x0        # 46eb20 <strcmp@plt+0x6b398>
  42aef7:	cmp    edi,0x5
  42aefa:	ja     42af2b <strcmp@plt+0x277a3>
  42aefc:	mov    eax,edi
  42aefe:	lea    rcx,[rip+0x20277]        # 44b17c <strcmp@plt+0x479f4>
  42af05:	movsxd rax,DWORD PTR [rcx+rax*4]
  42af09:	add    rax,rcx
  42af0c:	jmp    rax
  42af0e:	movabs rax,0x6c617272656665
  42af18:	mov    QWORD PTR [rip+0x43c07],rax        # 46eb26 <strcmp@plt+0x6b39e>
  42af1f:	movabs rax,0x6665722d65646f6e
  42af29:	jmp    42af46 <strcmp@plt+0x277be>
  42af2b:	movabs rax,0x6e6f697463612d
  42af35:	mov    QWORD PTR [rip+0x43beb],rax        # 46eb27 <strcmp@plt+0x6b39f>
  42af3c:	movabs rax,0x2d6e776f6e6b6e75
  42af46:	mov    QWORD PTR [rip+0x43bd3],rax        # 46eb20 <strcmp@plt+0x6b398>
  42af4d:	lea    rax,[rip+0x43bcc]        # 46eb20 <strcmp@plt+0x6b398>
  42af54:	ret    
  42af55:	movabs rax,0x72656665722d736d
  42af5f:	mov    QWORD PTR [rip+0x43bba],rax        # 46eb20 <strcmp@plt+0x6b398>
  42af66:	mov    DWORD PTR [rip+0x43bb8],0x6c6172        # 46eb28 <strcmp@plt+0x6b3a0>
  42af70:	lea    rax,[rip+0x43ba9]        # 46eb20 <strcmp@plt+0x6b398>
  42af77:	ret    
  42af78:	mov    BYTE PTR [rip+0x43ba7],0x0        # 46eb26 <strcmp@plt+0x6b39e>
  42af7f:	mov    WORD PTR [rip+0x43b9c],0x6b63        # 46eb24 <strcmp@plt+0x6b39c>
  42af88:	mov    DWORD PTR [rip+0x43b8e],0x612d736d        # 46eb20 <strcmp@plt+0x6b398>
  42af92:	lea    rax,[rip+0x43b87]        # 46eb20 <strcmp@plt+0x6b398>
  42af99:	ret    
  42af9a:	vmovups xmm0,XMMWORD PTR [rip+0x20279]        # 44b21b <strcmp@plt+0x47a93>
  42afa2:	vmovaps XMMWORD PTR [rip+0x43b76],xmm0        # 46eb20 <strcmp@plt+0x6b398>
  42afaa:	mov    WORD PTR [rip+0x43b7d],0x64        # 46eb30 <strcmp@plt+0x6b3a8>
  42afb3:	lea    rax,[rip+0x43b66]        # 46eb20 <strcmp@plt+0x6b398>
  42afba:	ret    
  42afbb:	vmovups xmm0,XMMWORD PTR [rip+0x2026a]        # 44b22d <strcmp@plt+0x47aa5>
  42afc3:	vmovaps XMMWORD PTR [rip+0x43b55],xmm0        # 46eb20 <strcmp@plt+0x6b398>
  42afcb:	lea    rax,[rip+0x43b4e]        # 46eb20 <strcmp@plt+0x6b398>
  42afd2:	ret    
  42afd3:	vmovups xmm0,XMMWORD PTR [rip+0x20262]        # 44b23d <strcmp@plt+0x47ab5>
  42afdb:	vmovaps XMMWORD PTR [rip+0x43b3d],xmm0        # 46eb20 <strcmp@plt+0x6b398>
  42afe3:	mov    WORD PTR [rip+0x43b44],0x65        # 46eb30 <strcmp@plt+0x6b3a8>
  42afec:	lea    rax,[rip+0x43b2d]        # 46eb20 <strcmp@plt+0x6b398>
  42aff3:	ret    
  42aff4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42affe:	xchg   ax,ax
  42b000:	push   r14
  42b002:	push   rbx
  42b003:	push   rax
  42b004:	test   rdi,rdi
  42b007:	je     42b05c <strcmp@plt+0x278d4>
  42b009:	mov    BYTE PTR [rip+0x43b30],0x0        # 46eb40 <strcmp@plt+0x6b3b8>
  42b010:	movbe  ecx,DWORD PTR [rdi]
  42b014:	movzx  r8d,BYTE PTR [rdi+0x4]
  42b019:	mov    al,BYTE PTR [rdi+0x6]
  42b01c:	mov    BYTE PTR [rip+0x43add],0x0        # 46eb00 <strcmp@plt+0x6b378>
  42b023:	mov    edx,eax
  42b025:	sar    dl,0x5
  42b028:	js     42b064 <strcmp@plt+0x278dc>
  42b02a:	shr    al,0x5
  42b02d:	movzx  eax,al
  42b030:	lea    rdx,[rip+0x2015d]        # 44b194 <strcmp@plt+0x47a0c>
  42b037:	movsxd rax,DWORD PTR [rdx+rax*4]
  42b03b:	add    rax,rdx
  42b03e:	jmp    rax
  42b040:	movabs rax,0x6f697463612d6f6e
  42b04a:	mov    QWORD PTR [rip+0x43aaf],rax        # 46eb00 <strcmp@plt+0x6b378>
  42b051:	mov    WORD PTR [rip+0x43aae],0x6e        # 46eb08 <strcmp@plt+0x6b380>
  42b05a:	jmp    42b0cf <strcmp@plt+0x27947>
  42b05c:	xor    r14d,r14d
  42b05f:	jmp    42b11b <strcmp@plt+0x27993>
  42b064:	movabs rax,0x6e6f697463612d
  42b06e:	mov    QWORD PTR [rip+0x43a92],rax        # 46eb07 <strcmp@plt+0x6b37f>
  42b075:	movabs rax,0x2d6e776f6e6b6e75
  42b07f:	jmp    42b09c <strcmp@plt+0x27914>
  42b081:	movabs rax,0x64726177726f66
  42b08b:	mov    QWORD PTR [rip+0x43a75],rax        # 46eb07 <strcmp@plt+0x6b37f>
  42b092:	movabs rax,0x662d65766974616e
  42b09c:	mov    QWORD PTR [rip+0x43a5d],rax        # 46eb00 <strcmp@plt+0x6b378>
  42b0a3:	jmp    42b0cf <strcmp@plt+0x27947>
  42b0a5:	vmovups xmm0,XMMWORD PTR [rip+0x20128]        # 44b1d5 <strcmp@plt+0x47a4d>
  42b0ad:	vmovaps XMMWORD PTR [rip+0x43a4b],xmm0        # 46eb00 <strcmp@plt+0x6b378>
  42b0b5:	mov    BYTE PTR [rip+0x43a54],0x0        # 46eb10 <strcmp@plt+0x6b388>
  42b0bc:	jmp    42b0cf <strcmp@plt+0x27947>
  42b0be:	mov    BYTE PTR [rip+0x43a3f],0x0        # 46eb04 <strcmp@plt+0x6b37c>
  42b0c5:	mov    DWORD PTR [rip+0x43a31],0x706f7264        # 46eb00 <strcmp@plt+0x6b378>
  42b0cf:	movzx  eax,BYTE PTR [rdi+0x6]
  42b0d3:	mov    edx,0x104
  42b0d8:	bextr  r10d,eax,edx
  42b0dd:	movzx  eax,BYTE PTR [rdi+0x8]
  42b0e1:	and    eax,0xf
  42b0e4:	shl    eax,0x8
  42b0e7:	movzx  ebx,BYTE PTR [rdi+0x9]
  42b0eb:	or     ebx,eax
  42b0ed:	lea    r14,[rip+0x43a4c]        # 46eb40 <strcmp@plt+0x6b3b8>
  42b0f4:	lea    rdx,[rip+0x20154]        # 44b24f <strcmp@plt+0x47ac7>
  42b0fb:	lea    r9,[rip+0x439fe]        # 46eb00 <strcmp@plt+0x6b378>
  42b102:	mov    esi,0x64
  42b107:	mov    eax,0x0
  42b10c:	mov    rdi,r14
  42b10f:	push   rbx
  42b110:	push   r10
  42b112:	call   403620 <snprintf@plt>
  42b117:	add    rsp,0x10
  42b11b:	mov    rax,r14
  42b11e:	add    rsp,0x8
  42b122:	pop    rbx
  42b123:	pop    r14
  42b125:	ret    
  42b126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b130:	push   r14
  42b132:	push   rbx
  42b133:	push   rax
  42b134:	test   rdi,rdi
  42b137:	je     42b191 <strcmp@plt+0x27a09>
  42b139:	mov    BYTE PTR [rip+0x43a70],0x0        # 46ebb0 <strcmp@plt+0x6b428>
  42b140:	movbe  ecx,DWORD PTR [rdi]
  42b144:	movzx  r8d,BYTE PTR [rdi+0x4]
  42b149:	mov    al,BYTE PTR [rdi+0x6]
  42b14c:	shr    al,0x5
  42b14f:	mov    BYTE PTR [rip+0x439ca],0x0        # 46eb20 <strcmp@plt+0x6b398>
  42b156:	cmp    al,0x5
  42b158:	ja     42b21d <strcmp@plt+0x27a95>
  42b15e:	movzx  eax,al
  42b161:	lea    rdx,[rip+0x2003c]        # 44b1a4 <strcmp@plt+0x47a1c>
  42b168:	movsxd rax,DWORD PTR [rdx+rax*4]
  42b16c:	add    rax,rdx
  42b16f:	jmp    rax
  42b171:	movabs rax,0x6c617272656665
  42b17b:	mov    QWORD PTR [rip+0x439a4],rax        # 46eb26 <strcmp@plt+0x6b39e>
  42b182:	movabs rax,0x6665722d65646f6e
  42b18c:	jmp    42b238 <strcmp@plt+0x27ab0>
  42b191:	xor    r14d,r14d
  42b194:	jmp    42b29b <strcmp@plt+0x27b13>
  42b199:	movabs rax,0x72656665722d736d
  42b1a3:	mov    QWORD PTR [rip+0x43976],rax        # 46eb20 <strcmp@plt+0x6b398>
  42b1aa:	mov    DWORD PTR [rip+0x43974],0x6c6172        # 46eb28 <strcmp@plt+0x6b3a0>
  42b1b4:	jmp    42b23f <strcmp@plt+0x27ab7>
  42b1b9:	mov    BYTE PTR [rip+0x43966],0x0        # 46eb26 <strcmp@plt+0x6b39e>
  42b1c0:	mov    WORD PTR [rip+0x4395b],0x6b63        # 46eb24 <strcmp@plt+0x6b39c>
  42b1c9:	mov    DWORD PTR [rip+0x4394d],0x612d736d        # 46eb20 <strcmp@plt+0x6b398>
  42b1d3:	jmp    42b23f <strcmp@plt+0x27ab7>
  42b1d5:	vmovups xmm0,XMMWORD PTR [rip+0x2003e]        # 44b21b <strcmp@plt+0x47a93>
  42b1dd:	vmovaps XMMWORD PTR [rip+0x4393b],xmm0        # 46eb20 <strcmp@plt+0x6b398>
  42b1e5:	mov    WORD PTR [rip+0x43942],0x64        # 46eb30 <strcmp@plt+0x6b3a8>
  42b1ee:	jmp    42b23f <strcmp@plt+0x27ab7>
  42b1f0:	vmovups xmm0,XMMWORD PTR [rip+0x20035]        # 44b22d <strcmp@plt+0x47aa5>
  42b1f8:	vmovaps XMMWORD PTR [rip+0x43920],xmm0        # 46eb20 <strcmp@plt+0x6b398>
  42b200:	jmp    42b23f <strcmp@plt+0x27ab7>
  42b202:	vmovups xmm0,XMMWORD PTR [rip+0x20033]        # 44b23d <strcmp@plt+0x47ab5>
  42b20a:	vmovaps XMMWORD PTR [rip+0x4390e],xmm0        # 46eb20 <strcmp@plt+0x6b398>
  42b212:	mov    WORD PTR [rip+0x43915],0x65        # 46eb30 <strcmp@plt+0x6b3a8>
  42b21b:	jmp    42b23f <strcmp@plt+0x27ab7>
  42b21d:	movabs rax,0x6e6f697463612d
  42b227:	mov    QWORD PTR [rip+0x438f9],rax        # 46eb27 <strcmp@plt+0x6b39f>
  42b22e:	movabs rax,0x2d6e776f6e6b6e75
  42b238:	mov    QWORD PTR [rip+0x438e1],rax        # 46eb20 <strcmp@plt+0x6b398>
  42b23f:	movzx  eax,BYTE PTR [rdi+0x6]
  42b243:	mov    edx,0x104
  42b248:	bextr  r10d,eax,edx
  42b24d:	mov    edx,0x103
  42b252:	bextr  r11d,eax,edx
  42b257:	movzx  eax,BYTE PTR [rdi+0x8]
  42b25b:	and    eax,0xf
  42b25e:	shl    eax,0x8
  42b261:	movzx  ebx,BYTE PTR [rdi+0x9]
  42b265:	or     ebx,eax
  42b267:	sub    rsp,0x8
  42b26b:	lea    r14,[rip+0x4393e]        # 46ebb0 <strcmp@plt+0x6b428>
  42b272:	lea    rdx,[rip+0x20022]        # 44b29b <strcmp@plt+0x47b13>
  42b279:	lea    r9,[rip+0x438a0]        # 46eb20 <strcmp@plt+0x6b398>
  42b280:	mov    esi,0x64
  42b285:	mov    eax,0x0
  42b28a:	mov    rdi,r14
  42b28d:	push   rbx
  42b28e:	push   r11
  42b290:	push   r10
  42b292:	call   403620 <snprintf@plt>
  42b297:	add    rsp,0x20
  42b29b:	mov    rax,r14
  42b29e:	add    rsp,0x8
  42b2a2:	pop    rbx
  42b2a3:	pop    r14
  42b2a5:	ret    
  42b2a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b2b0:	push   rbp
  42b2b1:	push   r14
  42b2b3:	push   rbx
  42b2b4:	mov    rbx,rdi
  42b2b7:	mov    BYTE PTR [rip+0x43956],0x0        # 46ec14 <strcmp@plt+0x6b48c>
  42b2be:	lea    r14,[rip+0x4394f]        # 46ec14 <strcmp@plt+0x6b48c>
  42b2c5:	mov    bpl,BYTE PTR [rdi+0x5]
  42b2c9:	mov    rdi,r14
  42b2cc:	call   4031e0 <strlen@plt>
  42b2d1:	add    rax,r14
  42b2d4:	test   bpl,0x4
  42b2d8:	jne    42b2e6 <strcmp@plt+0x27b5e>
  42b2da:	mov    BYTE PTR [rax+0x4],0x0
  42b2de:	mov    DWORD PTR [rax],0x2c303d4c
  42b2e4:	jmp    42b2f0 <strcmp@plt+0x27b68>
  42b2e6:	mov    BYTE PTR [rax+0x4],0x0
  42b2ea:	mov    DWORD PTR [rax],0x2c313d4c
  42b2f0:	mov    bpl,BYTE PTR [rbx+0x5]
  42b2f4:	mov    rdi,r14
  42b2f7:	call   4031e0 <strlen@plt>
  42b2fc:	add    rax,r14
  42b2ff:	test   bpl,0x2
  42b303:	jne    42b311 <strcmp@plt+0x27b89>
  42b305:	mov    BYTE PTR [rax+0x4],0x0
  42b309:	mov    DWORD PTR [rax],0x2c303d70
  42b30f:	jmp    42b31b <strcmp@plt+0x27b93>
  42b311:	mov    BYTE PTR [rax+0x4],0x0
  42b315:	mov    DWORD PTR [rax],0x2c313d70
  42b31b:	movzx  ebx,BYTE PTR [rbx+0x5]
  42b31f:	mov    rdi,r14
  42b322:	call   4031e0 <strlen@plt>
  42b327:	and    ebx,0x1
  42b32a:	shl    ebx,0x10
  42b32d:	or     ebx,0x303d52
  42b333:	mov    DWORD PTR [rax+r14*1],ebx
  42b337:	mov    rax,r14
  42b33a:	pop    rbx
  42b33b:	pop    r14
  42b33d:	pop    rbp
  42b33e:	ret    
  42b33f:	nop
  42b340:	push   rbp
  42b341:	push   r14
  42b343:	push   rbx
  42b344:	test   rdi,rdi
  42b347:	je     42b382 <strcmp@plt+0x27bfa>
  42b349:	mov    rbx,rdi
  42b34c:	mov    BYTE PTR [rip+0x438dd],0x0        # 46ec30 <strcmp@plt+0x6b4a8>
  42b353:	mov    BYTE PTR [rip+0x438ba],0x0        # 46ec14 <strcmp@plt+0x6b48c>
  42b35a:	lea    r14,[rip+0x438b3]        # 46ec14 <strcmp@plt+0x6b48c>
  42b361:	mov    bpl,BYTE PTR [rdi+0x5]
  42b365:	mov    rdi,r14
  42b368:	call   4031e0 <strlen@plt>
  42b36d:	add    rax,r14
  42b370:	test   bpl,0x4
  42b374:	jne    42b389 <strcmp@plt+0x27c01>
  42b376:	mov    BYTE PTR [rax+0x4],0x0
  42b37a:	mov    DWORD PTR [rax],0x2c303d4c
  42b380:	jmp    42b393 <strcmp@plt+0x27c0b>
  42b382:	xor    ebx,ebx
  42b384:	jmp    42b416 <strcmp@plt+0x27c8e>
  42b389:	mov    BYTE PTR [rax+0x4],0x0
  42b38d:	mov    DWORD PTR [rax],0x2c313d4c
  42b393:	mov    bpl,BYTE PTR [rbx+0x5]
  42b397:	mov    rdi,r14
  42b39a:	call   4031e0 <strlen@plt>
  42b39f:	add    rax,r14
  42b3a2:	test   bpl,0x2
  42b3a6:	jne    42b3b4 <strcmp@plt+0x27c2c>
  42b3a8:	mov    BYTE PTR [rax+0x4],0x0
  42b3ac:	mov    DWORD PTR [rax],0x2c303d70
  42b3b2:	jmp    42b3be <strcmp@plt+0x27c36>
  42b3b4:	mov    BYTE PTR [rax+0x4],0x0
  42b3b8:	mov    DWORD PTR [rax],0x2c313d70
  42b3be:	movzx  ebp,BYTE PTR [rbx+0x5]
  42b3c2:	mov    rdi,r14
  42b3c5:	call   4031e0 <strlen@plt>
  42b3ca:	and    ebp,0x1
  42b3cd:	shl    ebp,0x10
  42b3d0:	or     ebp,0x303d52
  42b3d6:	mov    DWORD PTR [rax+r14*1],ebp
  42b3da:	movzx  r8d,BYTE PTR [rbx]
  42b3de:	movzx  r9d,BYTE PTR [rbx+0x1]
  42b3e3:	movzx  r10d,BYTE PTR [rbx+0x2]
  42b3e8:	movzx  ebp,BYTE PTR [rbx+0x3]
  42b3ec:	lea    rbx,[rip+0x4383d]        # 46ec30 <strcmp@plt+0x6b4a8>
  42b3f3:	lea    rdx,[rip+0x1ff06]        # 44b300 <strcmp@plt+0x47b78>
  42b3fa:	mov    esi,0x64
  42b3ff:	mov    eax,0x0
  42b404:	mov    rdi,rbx
  42b407:	mov    rcx,r14
  42b40a:	push   rbp
  42b40b:	push   r10
  42b40d:	call   403620 <snprintf@plt>
  42b412:	add    rsp,0x10
  42b416:	mov    rax,rbx
  42b419:	pop    rbx
  42b41a:	pop    r14
  42b41c:	pop    rbp
  42b41d:	ret    
  42b41e:	xchg   ax,ax
  42b420:	test   edi,edi
  42b422:	mov    eax,0x14
  42b427:	cmove  eax,edi
  42b42a:	ret    
  42b42b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b430:	mov    WORD PTR [rdi],0x0
  42b435:	ret    
  42b436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b440:	xor    eax,eax
  42b442:	cmp    esi,0x2
  42b445:	jl     42b54c <strcmp@plt+0x27dc4>
  42b44b:	lea    r8d,[rsi-0x2]
  42b44f:	mov    r9d,r8d
  42b452:	shr    r9d,1
  42b455:	add    r9d,0x1
  42b459:	mov    eax,esi
  42b45b:	not    eax
  42b45d:	cmp    eax,0xfffffffb
  42b460:	mov    ecx,0xfffffffc
  42b465:	cmovg  ecx,eax
  42b468:	lea    edx,[rcx+rsi*1]
  42b46b:	add    edx,0x2
  42b46e:	mov    r10d,edx
  42b471:	shr    r10d,1
  42b474:	add    r10d,0x1
  42b478:	xor    eax,eax
  42b47a:	cmp    r10d,0x20
  42b47e:	jae    42b488 <strcmp@plt+0x27d00>
  42b480:	mov    rdx,rdi
  42b483:	jmp    42b521 <strcmp@plt+0x27d99>
  42b488:	add    ecx,esi
  42b48a:	mov    eax,r10d
  42b48d:	and    r10d,0x1f
  42b491:	sub    rax,r10
  42b494:	add    ecx,0x4
  42b497:	and    ecx,0x3e
  42b49a:	lea    esi,[rcx+rsi*1]
  42b49d:	add    esi,0xfffffffe
  42b4a0:	and    edx,0xfffffffe
  42b4a3:	sub    esi,edx
  42b4a5:	lea    rdx,[rdi+rax*2]
  42b4a9:	vpxor  xmm0,xmm0,xmm0
  42b4ad:	xor    ecx,ecx
  42b4af:	vpxor  xmm1,xmm1,xmm1
  42b4b3:	vpxor  xmm2,xmm2,xmm2
  42b4b7:	vpxor  xmm3,xmm3,xmm3
  42b4bb:	nop    DWORD PTR [rax+rax*1+0x0]
  42b4c0:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rcx*2]
  42b4c6:	vpaddd ymm0,ymm0,ymm4
  42b4ca:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rcx*2+0x10]
  42b4d1:	vpaddd ymm1,ymm1,ymm4
  42b4d5:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rcx*2+0x20]
  42b4dc:	vpaddd ymm2,ymm2,ymm4
  42b4e0:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rcx*2+0x30]
  42b4e7:	vpaddd ymm3,ymm3,ymm4
  42b4eb:	add    rcx,0x20
  42b4ef:	cmp    rax,rcx
  42b4f2:	jne    42b4c0 <strcmp@plt+0x27d38>
  42b4f4:	vpaddd ymm0,ymm1,ymm0
  42b4f8:	vpaddd ymm0,ymm2,ymm0
  42b4fc:	vpaddd ymm0,ymm3,ymm0
  42b500:	vextracti128 xmm1,ymm0,0x1
  42b506:	vpaddd ymm0,ymm0,ymm1
  42b50a:	vpshufd xmm1,xmm0,0x4e
  42b50f:	vpaddd ymm0,ymm0,ymm1
  42b513:	vphaddd ymm0,ymm0,ymm0
  42b518:	vmovd  eax,xmm0
  42b51c:	test   r10d,r10d
  42b51f:	je     42b541 <strcmp@plt+0x27db9>
  42b521:	add    esi,0x2
  42b524:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b52e:	xchg   ax,ax
  42b530:	movzx  ecx,WORD PTR [rdx]
  42b533:	add    rdx,0x2
  42b537:	add    eax,ecx
  42b539:	add    esi,0xfffffffe
  42b53c:	cmp    esi,0x3
  42b53f:	jg     42b530 <strcmp@plt+0x27da8>
  42b541:	lea    rdi,[rdi+r9*2]
  42b545:	and    r8d,0x1
  42b549:	mov    esi,r8d
  42b54c:	test   esi,esi
  42b54e:	je     42b555 <strcmp@plt+0x27dcd>
  42b550:	movzx  ecx,BYTE PTR [rdi]
  42b553:	add    eax,ecx
  42b555:	mov    ecx,eax
  42b557:	shr    ecx,0x10
  42b55a:	movzx  edx,ax
  42b55d:	add    edx,ecx
  42b55f:	mov    eax,edx
  42b561:	shr    eax,0x10
  42b564:	add    eax,edx
  42b566:	not    eax
  42b568:	vzeroupper 
  42b56b:	ret    
  42b56c:	nop    DWORD PTR [rax+0x0]
  42b570:	push   rbp
  42b571:	push   r14
  42b573:	push   rbx
  42b574:	xor    eax,eax
  42b576:	cmp    esi,0x2
  42b579:	jb     42b5a1 <strcmp@plt+0x27e19>
  42b57b:	lea    r8d,[rsi-0x2]
  42b57f:	mov    r11d,r8d
  42b582:	and    r11d,0xfffffffe
  42b586:	mov    r10d,r8d
  42b589:	shr    r10d,1
  42b58c:	lea    r14d,[r10+0x1]
  42b590:	and    r14d,0x3
  42b594:	cmp    r8d,0x6
  42b598:	jae    42b5a9 <strcmp@plt+0x27e21>
  42b59a:	xor    eax,eax
  42b59c:	mov    r9,rdi
  42b59f:	jmp    42b612 <strcmp@plt+0x27e8a>
  42b5a1:	mov    r8d,esi
  42b5a4:	jmp    42b64c <strcmp@plt+0x27ec4>
  42b5a9:	lea    ebp,[r14-0x1]
  42b5ad:	sub    ebp,r10d
  42b5b0:	xor    eax,eax
  42b5b2:	mov    rbx,rdi
  42b5b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b5bf:	nop
  42b5c0:	mov    r9,rbx
  42b5c3:	movzx  ebx,WORD PTR [rbx]
  42b5c6:	add    ebx,eax
  42b5c8:	jns    42b5d2 <strcmp@plt+0x27e4a>
  42b5ca:	movzx  eax,bx
  42b5cd:	shr    ebx,0x10
  42b5d0:	add    ebx,eax
  42b5d2:	movzx  eax,WORD PTR [r9+0x2]
  42b5d7:	add    eax,ebx
  42b5d9:	jns    42b5e3 <strcmp@plt+0x27e5b>
  42b5db:	movzx  ebx,ax
  42b5de:	shr    eax,0x10
  42b5e1:	add    eax,ebx
  42b5e3:	movzx  ebx,WORD PTR [r9+0x4]
  42b5e8:	add    ebx,eax
  42b5ea:	jns    42b5f4 <strcmp@plt+0x27e6c>
  42b5ec:	movzx  eax,bx
  42b5ef:	shr    ebx,0x10
  42b5f2:	add    ebx,eax
  42b5f4:	movzx  eax,WORD PTR [r9+0x6]
  42b5f9:	add    eax,ebx
  42b5fb:	jns    42b605 <strcmp@plt+0x27e7d>
  42b5fd:	movzx  ebx,ax
  42b600:	shr    eax,0x10
  42b603:	add    eax,ebx
  42b605:	lea    rbx,[r9+0x8]
  42b609:	add    ebp,0x4
  42b60c:	jne    42b5c0 <strcmp@plt+0x27e38>
  42b60e:	add    r9,0x8
  42b612:	add    rdi,r11
  42b615:	add    rdi,0x2
  42b619:	test   r14d,r14d
  42b61c:	je     42b64c <strcmp@plt+0x27ec4>
  42b61e:	add    r10b,0x1
  42b622:	movzx  r10d,r10b
  42b626:	and    r10d,0x3
  42b62a:	xor    ebx,ebx
  42b62c:	nop    DWORD PTR [rax+0x0]
  42b630:	mov    ebp,eax
  42b632:	movzx  eax,WORD PTR [r9+rbx*2]
  42b637:	add    eax,ebp
  42b639:	jns    42b643 <strcmp@plt+0x27ebb>
  42b63b:	movzx  ebp,ax
  42b63e:	shr    eax,0x10
  42b641:	add    eax,ebp
  42b643:	add    rbx,0x1
  42b647:	cmp    r10d,ebx
  42b64a:	jne    42b630 <strcmp@plt+0x27ea8>
  42b64c:	mov    ebx,edx
  42b64e:	shr    ebx,0x10
  42b651:	mov    ebp,ecx
  42b653:	shr    ebp,0x10
  42b656:	test   r8b,0x1
  42b65a:	je     42b661 <strcmp@plt+0x27ed9>
  42b65c:	movzx  edi,BYTE PTR [rdi]
  42b65f:	add    eax,edi
  42b661:	movzx  edx,dx
  42b664:	add    edx,ebx
  42b666:	movzx  ecx,cx
  42b669:	add    ecx,edx
  42b66b:	add    ecx,ebp
  42b66d:	rol    si,0x8
  42b671:	movzx  edx,si
  42b674:	add    edx,ecx
  42b676:	lea    eax,[rax+rdx*1]
  42b679:	add    eax,0x1100
  42b67e:	jmp    42b685 <strcmp@plt+0x27efd>
  42b680:	movzx  eax,ax
  42b683:	add    eax,ecx
  42b685:	mov    ecx,eax
  42b687:	shr    ecx,0x10
  42b68a:	jne    42b680 <strcmp@plt+0x27ef8>
  42b68c:	not    eax
  42b68e:	pop    rbx
  42b68f:	pop    r14
  42b691:	pop    rbp
  42b692:	ret    
  42b693:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b69d:	nop    DWORD PTR [rax]
  42b6a0:	mov    DWORD PTR [rsp-0x4],0x0
  42b6a8:	vmovups xmm0,XMMWORD PTR [rdi+0x8]
  42b6ad:	vmovaps XMMWORD PTR [rsp-0x28],xmm0
  42b6b3:	vmovdqu xmm0,XMMWORD PTR [rdi+0x18]
  42b6b8:	vmovdqa XMMWORD PTR [rsp-0x18],xmm0
  42b6be:	mov    ecx,edx
  42b6c0:	bswap  ecx
  42b6c2:	movbe  DWORD PTR [rsp-0x8],edx
  42b6c8:	mov    BYTE PTR [rsp-0x1],0x11
  42b6cd:	movzx  eax,WORD PTR [rsp-0x28]
  42b6d2:	movzx  edi,WORD PTR [rsp-0x26]
  42b6d7:	add    edi,eax
  42b6d9:	movzx  eax,WORD PTR [rsp-0x24]
  42b6de:	add    eax,edi
  42b6e0:	movzx  edi,WORD PTR [rsp-0x22]
  42b6e5:	add    edi,eax
  42b6e7:	movzx  eax,WORD PTR [rsp-0x20]
  42b6ec:	add    eax,edi
  42b6ee:	movzx  edi,WORD PTR [rsp-0x1e]
  42b6f3:	add    edi,eax
  42b6f5:	movzx  eax,WORD PTR [rsp-0x1c]
  42b6fa:	add    eax,edi
  42b6fc:	movzx  edi,WORD PTR [rsp-0x1a]
  42b701:	add    edi,eax
  42b703:	movzx  eax,WORD PTR [rsp-0x18]
  42b708:	add    eax,edi
  42b70a:	movzx  edi,WORD PTR [rsp-0x16]
  42b70f:	add    edi,eax
  42b711:	movzx  eax,WORD PTR [rsp-0x14]
  42b716:	add    eax,edi
  42b718:	movzx  edi,WORD PTR [rsp-0x12]
  42b71d:	add    edi,eax
  42b71f:	movzx  eax,WORD PTR [rsp-0x10]
  42b724:	add    eax,edi
  42b726:	movzx  edi,WORD PTR [rsp-0xe]
  42b72b:	add    edi,eax
  42b72d:	movzx  eax,WORD PTR [rsp-0xc]
  42b732:	add    eax,edi
  42b734:	movzx  edi,WORD PTR [rsp-0xa]
  42b739:	add    edi,eax
  42b73b:	movzx  eax,cx
  42b73e:	add    eax,edi
  42b740:	shr    ecx,0x10
  42b743:	add    ecx,eax
  42b745:	movzx  eax,WORD PTR [rsp-0x2]
  42b74a:	add    eax,ecx
  42b74c:	mov    r10d,edx
  42b74f:	and    r10d,0xfffffffe
  42b753:	je     42b771 <strcmp@plt+0x27fe9>
  42b755:	lea    r8,[rsi+r10*1]
  42b759:	lea    r9,[r10-0x1]
  42b75d:	shr    r9,1
  42b760:	add    r9,0x1
  42b764:	cmp    r9,0x20
  42b768:	jae    42b782 <strcmp@plt+0x27ffa>
  42b76a:	xor    ecx,ecx
  42b76c:	jmp    42b950 <strcmp@plt+0x281c8>
  42b771:	mov    r8,rsi
  42b774:	test   dl,0x1
  42b777:	jne    42b967 <strcmp@plt+0x281df>
  42b77d:	jmp    42b977 <strcmp@plt+0x281ef>
  42b782:	mov    rcx,r9
  42b785:	and    rcx,0xffffffffffffffe0
  42b789:	vmovd  xmm0,eax
  42b78d:	lea    rdi,[rcx-0x20]
  42b791:	mov    rax,rdi
  42b794:	shr    rax,0x5
  42b798:	add    rax,0x1
  42b79c:	mov    r11d,eax
  42b79f:	and    r11d,0x3
  42b7a3:	cmp    rdi,0x60
  42b7a7:	jae    42b7c5 <strcmp@plt+0x2803d>
  42b7a9:	vpxor  xmm1,xmm1,xmm1
  42b7ad:	xor    edi,edi
  42b7af:	vpxor  xmm2,xmm2,xmm2
  42b7b3:	vpxor  xmm3,xmm3,xmm3
  42b7b7:	test   r11,r11
  42b7ba:	jne    42b8cb <strcmp@plt+0x28143>
  42b7c0:	jmp    42b911 <strcmp@plt+0x28189>
  42b7c5:	mov    edi,0x1
  42b7ca:	sub    rdi,rax
  42b7cd:	lea    rax,[r11+rdi*1]
  42b7d1:	add    rax,0xffffffffffffffff
  42b7d5:	vpxor  xmm1,xmm1,xmm1
  42b7d9:	xor    edi,edi
  42b7db:	vpxor  xmm2,xmm2,xmm2
  42b7df:	vpxor  xmm3,xmm3,xmm3
  42b7e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b7ed:	nop    DWORD PTR [rax]
  42b7f0:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2]
  42b7f6:	vpaddd ymm0,ymm0,ymm4
  42b7fa:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0x10]
  42b801:	vpaddd ymm1,ymm1,ymm4
  42b805:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0x20]
  42b80c:	vpaddd ymm2,ymm2,ymm4
  42b810:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0x30]
  42b817:	vpaddd ymm3,ymm3,ymm4
  42b81b:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0x40]
  42b822:	vpmovzxwd ymm5,XMMWORD PTR [rsi+rdi*2+0x50]
  42b829:	vpmovzxwd ymm6,XMMWORD PTR [rsi+rdi*2+0x60]
  42b830:	vpmovzxwd ymm7,XMMWORD PTR [rsi+rdi*2+0x70]
  42b837:	vpmovzxwd ymm8,XMMWORD PTR [rsi+rdi*2+0x80]
  42b841:	vpaddd ymm4,ymm4,ymm8
  42b846:	vpaddd ymm0,ymm0,ymm4
  42b84a:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0x90]
  42b854:	vpaddd ymm4,ymm5,ymm4
  42b858:	vpaddd ymm1,ymm1,ymm4
  42b85c:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0xa0]
  42b866:	vpaddd ymm4,ymm6,ymm4
  42b86a:	vpaddd ymm2,ymm2,ymm4
  42b86e:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0xb0]
  42b878:	vpaddd ymm4,ymm7,ymm4
  42b87c:	vpaddd ymm3,ymm3,ymm4
  42b880:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0xc0]
  42b88a:	vpaddd ymm0,ymm0,ymm4
  42b88e:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0xd0]
  42b898:	vpaddd ymm1,ymm1,ymm4
  42b89c:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0xe0]
  42b8a6:	vpaddd ymm2,ymm2,ymm4
  42b8aa:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0xf0]
  42b8b4:	vpaddd ymm3,ymm3,ymm4
  42b8b8:	sub    rdi,0xffffffffffffff80
  42b8bc:	add    rax,0x4
  42b8c0:	jne    42b7f0 <strcmp@plt+0x28068>
  42b8c6:	test   r11,r11
  42b8c9:	je     42b911 <strcmp@plt+0x28189>
  42b8cb:	lea    rax,[rsi+rdi*2]
  42b8cf:	add    rax,0x30
  42b8d3:	neg    r11
  42b8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b8e0:	vpmovzxwd ymm4,XMMWORD PTR [rax-0x30]
  42b8e6:	vpaddd ymm0,ymm0,ymm4
  42b8ea:	vpmovzxwd ymm4,XMMWORD PTR [rax-0x20]
  42b8f0:	vpaddd ymm1,ymm1,ymm4
  42b8f4:	vpmovzxwd ymm4,XMMWORD PTR [rax-0x10]
  42b8fa:	vpaddd ymm2,ymm2,ymm4
  42b8fe:	vpmovzxwd ymm4,XMMWORD PTR [rax]
  42b903:	vpaddd ymm3,ymm3,ymm4
  42b907:	add    rax,0x40
  42b90b:	add    r11,0x1
  42b90f:	jne    42b8e0 <strcmp@plt+0x28158>
  42b911:	vpaddd ymm1,ymm1,ymm3
  42b915:	vpaddd ymm0,ymm0,ymm2
  42b919:	vpaddd ymm0,ymm0,ymm1
  42b91d:	vextracti128 xmm1,ymm0,0x1
  42b923:	vpaddd ymm0,ymm0,ymm1
  42b927:	vpshufd xmm1,xmm0,0x4e
  42b92c:	vpaddd ymm0,ymm0,ymm1
  42b930:	vphaddd ymm0,ymm0,ymm0
  42b935:	vmovd  eax,xmm0
  42b939:	cmp    r9,rcx
  42b93c:	je     42b962 <strcmp@plt+0x281da>
  42b93e:	lea    rsi,[rsi+rcx*2]
  42b942:	add    rcx,rcx
  42b945:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b94f:	nop
  42b950:	movzx  edi,WORD PTR [rsi]
  42b953:	add    rsi,0x2
  42b957:	add    eax,edi
  42b959:	add    rcx,0x2
  42b95d:	cmp    rcx,r10
  42b960:	jb     42b950 <strcmp@plt+0x281c8>
  42b962:	test   dl,0x1
  42b965:	je     42b977 <strcmp@plt+0x281ef>
  42b967:	movzx  ecx,BYTE PTR [r8]
  42b96b:	shl    ecx,0x8
  42b96e:	rol    cx,0x8
  42b972:	movzx  ecx,cx
  42b975:	add    eax,ecx
  42b977:	cmp    eax,0x10000
  42b97c:	jb     42b98f <strcmp@plt+0x28207>
  42b97e:	xchg   ax,ax
  42b980:	movzx  ecx,ax
  42b983:	shr    eax,0x10
  42b986:	add    eax,ecx
  42b988:	cmp    eax,0xffff
  42b98d:	ja     42b980 <strcmp@plt+0x281f8>
  42b98f:	not    eax
  42b991:	vzeroupper 
  42b994:	ret    
  42b995:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b99f:	nop
  42b9a0:	mov    eax,esi
  42b9a2:	mov    rsi,rdi
  42b9a5:	cmp    ecx,0xa
  42b9a8:	je     42b9e8 <strcmp@plt+0x28260>
  42b9aa:	push   rbp
  42b9ab:	push   r14
  42b9ad:	push   rbx
  42b9ae:	cmp    ecx,0x2
  42b9b1:	jne    42b9f2 <strcmp@plt+0x2826a>
  42b9b3:	mov    r9d,DWORD PTR [rdx+0xc]
  42b9b7:	mov    r8d,DWORD PTR [rdx+0x10]
  42b9bb:	cmp    eax,0x2
  42b9be:	jb     42ba1e <strcmp@plt+0x28296>
  42b9c0:	lea    r14d,[rax-0x2]
  42b9c4:	mov    r10d,r14d
  42b9c7:	and    r10d,0xfffffffe
  42b9cb:	mov    edi,r14d
  42b9ce:	shr    edi,1
  42b9d0:	lea    r11d,[rdi+0x1]
  42b9d4:	and    r11d,0x3
  42b9d8:	cmp    r14d,0x6
  42b9dc:	jae    42ba28 <strcmp@plt+0x282a0>
  42b9de:	xor    ebp,ebp
  42b9e0:	mov    rcx,rsi
  42b9e3:	jmp    42ba8f <strcmp@plt+0x28307>
  42b9e8:	mov    rdi,rdx
  42b9eb:	mov    edx,eax
  42b9ed:	jmp    42b6a0 <strcmp@plt+0x27f18>
  42b9f2:	lea    rax,[rip+0x393b7]        # 464db0 <strcmp@plt+0x61628>
  42b9f9:	mov    bx,0xffff
  42b9fd:	cmp    DWORD PTR [rax],0x2
  42ba00:	jl     42bb1e <strcmp@plt+0x28396>
  42ba06:	lea    rsi,[rip+0x1f921]        # 44b32e <strcmp@plt+0x47ba6>
  42ba0d:	mov    edi,0x6
  42ba12:	xor    eax,eax
  42ba14:	call   42e800 <strcmp@plt+0x2b078>
  42ba19:	jmp    42bb1e <strcmp@plt+0x28396>
  42ba1e:	xor    ebx,ebx
  42ba20:	mov    r14d,eax
  42ba23:	jmp    42bacd <strcmp@plt+0x28345>
  42ba28:	lea    ebx,[r11-0x1]
  42ba2c:	sub    ebx,edi
  42ba2e:	xor    ebp,ebp
  42ba30:	mov    rdx,rsi
  42ba33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ba3d:	nop    DWORD PTR [rax]
  42ba40:	mov    rcx,rdx
  42ba43:	movzx  edx,WORD PTR [rdx]
  42ba46:	add    edx,ebp
  42ba48:	jns    42ba52 <strcmp@plt+0x282ca>
  42ba4a:	movzx  ebp,dx
  42ba4d:	shr    edx,0x10
  42ba50:	add    edx,ebp
  42ba52:	movzx  ebp,WORD PTR [rcx+0x2]
  42ba56:	add    ebp,edx
  42ba58:	jns    42ba62 <strcmp@plt+0x282da>
  42ba5a:	movzx  edx,bp
  42ba5d:	shr    ebp,0x10
  42ba60:	add    ebp,edx
  42ba62:	movzx  edx,WORD PTR [rcx+0x4]
  42ba66:	add    edx,ebp
  42ba68:	jns    42ba72 <strcmp@plt+0x282ea>
  42ba6a:	movzx  ebp,dx
  42ba6d:	shr    edx,0x10
  42ba70:	add    edx,ebp
  42ba72:	movzx  ebp,WORD PTR [rcx+0x6]
  42ba76:	add    ebp,edx
  42ba78:	jns    42ba82 <strcmp@plt+0x282fa>
  42ba7a:	movzx  edx,bp
  42ba7d:	shr    ebp,0x10
  42ba80:	add    ebp,edx
  42ba82:	lea    rdx,[rcx+0x8]
  42ba86:	add    ebx,0x4
  42ba89:	jne    42ba40 <strcmp@plt+0x282b8>
  42ba8b:	add    rcx,0x8
  42ba8f:	add    r10,0x2
  42ba93:	mov    ebx,ebp
  42ba95:	test   r11d,r11d
  42ba98:	je     42baca <strcmp@plt+0x28342>
  42ba9a:	add    dil,0x1
  42ba9e:	movzx  edi,dil
  42baa2:	and    edi,0x3
  42baa5:	xor    edx,edx
  42baa7:	nop    WORD PTR [rax+rax*1+0x0]
  42bab0:	movzx  ebx,WORD PTR [rcx+rdx*2]
  42bab4:	add    ebx,ebp
  42bab6:	jns    42bac0 <strcmp@plt+0x28338>
  42bab8:	movzx  ebp,bx
  42babb:	shr    ebx,0x10
  42babe:	add    ebx,ebp
  42bac0:	add    rdx,0x1
  42bac4:	mov    ebp,ebx
  42bac6:	cmp    edi,edx
  42bac8:	jne    42bab0 <strcmp@plt+0x28328>
  42baca:	add    rsi,r10
  42bacd:	mov    edx,r9d
  42bad0:	shr    edx,0x10
  42bad3:	mov    ecx,r8d
  42bad6:	shr    ecx,0x10
  42bad9:	test   r14b,0x1
  42badd:	je     42bae4 <strcmp@plt+0x2835c>
  42badf:	movzx  esi,BYTE PTR [rsi]
  42bae2:	add    ebx,esi
  42bae4:	movzx  esi,r9w
  42bae8:	movzx  edi,r8w
  42baec:	rol    ax,0x8
  42baf0:	movzx  eax,ax
  42baf3:	add    eax,esi
  42baf5:	add    eax,edx
  42baf7:	add    eax,edi
  42baf9:	add    eax,ecx
  42bafb:	lea    ebx,[rbx+rax*1]
  42bafe:	add    ebx,0x1100
  42bb04:	jmp    42bb15 <strcmp@plt+0x2838d>
  42bb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bb10:	movzx  ebx,bx
  42bb13:	add    ebx,eax
  42bb15:	mov    eax,ebx
  42bb17:	shr    eax,0x10
  42bb1a:	jne    42bb10 <strcmp@plt+0x28388>
  42bb1c:	not    ebx
  42bb1e:	mov    eax,ebx
  42bb20:	pop    rbx
  42bb21:	pop    r14
  42bb23:	pop    rbp
  42bb24:	ret    
  42bb25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bb2f:	nop
  42bb30:	mov    QWORD PTR [rdi+0x20],rsi
  42bb34:	mov    QWORD PTR [rdi+0x28],rdx
  42bb38:	mov    DWORD PTR [rdi+0x18],0x0
  42bb3f:	mov    QWORD PTR [rdi],rdi
  42bb42:	mov    QWORD PTR [rdi+0x8],rdi
  42bb46:	ret    
  42bb47:	nop    WORD PTR [rax+rax*1+0x0]
  42bb50:	mov    DWORD PTR [rdi+0x18],0x0
  42bb57:	vxorps xmm0,xmm0,xmm0
  42bb5b:	vmovups XMMWORD PTR [rdi+0x20],xmm0
  42bb60:	mov    QWORD PTR [rdi],rdi
  42bb63:	mov    QWORD PTR [rdi+0x8],rdi
  42bb67:	ret    
  42bb68:	nop    DWORD PTR [rax+rax*1+0x0]
  42bb70:	mov    QWORD PTR [rdi+0x20],0x0
  42bb78:	mov    QWORD PTR [rdi+0x28],rsi
  42bb7c:	mov    DWORD PTR [rdi+0x18],0x0
  42bb83:	mov    QWORD PTR [rdi],rdi
  42bb86:	mov    QWORD PTR [rdi+0x8],rdi
  42bb8a:	ret    
  42bb8b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bb90:	push   r14
  42bb92:	push   rbx
  42bb93:	push   rax
  42bb94:	mov    r14,rsi
  42bb97:	mov    rbx,rdi
  42bb9a:	mov    edi,0x30
  42bb9f:	call   432070 <strcmp@plt+0x2e8e8>
  42bba4:	mov    QWORD PTR [rax+0x20],rbx
  42bba8:	mov    QWORD PTR [rax+0x28],r14
  42bbac:	mov    DWORD PTR [rax+0x18],0x0
  42bbb3:	mov    QWORD PTR [rax],rax
  42bbb6:	mov    QWORD PTR [rax+0x8],rax
  42bbba:	add    rsp,0x8
  42bbbe:	pop    rbx
  42bbbf:	pop    r14
  42bbc1:	ret    
  42bbc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bbcc:	nop    DWORD PTR [rax+0x0]
  42bbd0:	push   rax
  42bbd1:	mov    edi,0x30
  42bbd6:	call   432070 <strcmp@plt+0x2e8e8>
  42bbdb:	mov    DWORD PTR [rax+0x18],0x0
  42bbe2:	vxorps xmm0,xmm0,xmm0
  42bbe6:	vmovups XMMWORD PTR [rax+0x20],xmm0
  42bbeb:	mov    QWORD PTR [rax],rax
  42bbee:	mov    QWORD PTR [rax+0x8],rax
  42bbf2:	pop    rcx
  42bbf3:	ret    
  42bbf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bbfe:	xchg   ax,ax
  42bc00:	push   rbx
  42bc01:	mov    rbx,rdi
  42bc04:	mov    edi,0x30
  42bc09:	call   432070 <strcmp@plt+0x2e8e8>
  42bc0e:	mov    QWORD PTR [rax+0x20],0x0
  42bc16:	mov    QWORD PTR [rax+0x28],rbx
  42bc1a:	mov    DWORD PTR [rax+0x18],0x0
  42bc21:	mov    QWORD PTR [rax],rax
  42bc24:	mov    QWORD PTR [rax+0x8],rax
  42bc28:	pop    rbx
  42bc29:	ret    
  42bc2a:	nop    WORD PTR [rax+rax*1+0x0]
  42bc30:	mov    rax,QWORD PTR [rdi+0x20]
  42bc34:	ret    
  42bc35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bc3f:	nop
  42bc40:	mov    rax,QWORD PTR [rdi+0x28]
  42bc44:	ret    
  42bc45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bc4f:	nop
  42bc50:	mov    QWORD PTR [rdi+0x20],rsi
  42bc54:	ret    
  42bc55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bc5f:	nop
  42bc60:	mov    QWORD PTR [rdi+0x28],rsi
  42bc64:	ret    
  42bc65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bc6f:	nop
  42bc70:	push   r15
  42bc72:	push   r14
  42bc74:	push   r12
  42bc76:	push   rbx
  42bc77:	sub    rsp,0x18
  42bc7b:	mov    r14,rsi
  42bc7e:	mov    r15,rdi
  42bc81:	vmovups xmm0,XMMWORD PTR [rdi+0x20]
  42bc86:	vmovaps XMMWORD PTR [rsp],xmm0
  42bc8b:	mov    edi,0x30
  42bc90:	call   432070 <strcmp@plt+0x2e8e8>
  42bc95:	mov    r12,rax
  42bc98:	vmovaps xmm0,XMMWORD PTR [rsp]
  42bc9d:	vmovups XMMWORD PTR [rax+0x20],xmm0
  42bca2:	mov    DWORD PTR [rax+0x18],0x0
  42bca9:	mov    QWORD PTR [rax],rax
  42bcac:	mov    QWORD PTR [rax+0x8],rax
  42bcb0:	mov    rbx,QWORD PTR [r15+0x8]
  42bcb4:	cmp    rbx,r15
  42bcb7:	je     42bcdb <strcmp@plt+0x28553>
  42bcb9:	nop    DWORD PTR [rax+0x0]
  42bcc0:	mov    rdi,QWORD PTR [rbx+0x10]
  42bcc4:	call   r14
  42bcc7:	mov    rdi,rax
  42bcca:	mov    rsi,r12
  42bccd:	call   42bcf0 <strcmp@plt+0x28568>
  42bcd2:	mov    rbx,QWORD PTR [rbx+0x8]
  42bcd6:	cmp    rbx,r15
  42bcd9:	jne    42bcc0 <strcmp@plt+0x28538>
  42bcdb:	mov    rax,r12
  42bcde:	add    rsp,0x18
  42bce2:	pop    rbx
  42bce3:	pop    r12
  42bce5:	pop    r14
  42bce7:	pop    r15
  42bce9:	ret    
  42bcea:	nop    WORD PTR [rax+rax*1+0x0]
  42bcf0:	push   rbp
  42bcf1:	push   r15
  42bcf3:	push   r14
  42bcf5:	push   r13
  42bcf7:	push   r12
  42bcf9:	push   rbx
  42bcfa:	push   rax
  42bcfb:	mov    r13,rsi
  42bcfe:	mov    r15,rdi
  42bd01:	mov    edi,0x18
  42bd06:	call   432070 <strcmp@plt+0x2e8e8>
  42bd0b:	mov    r14,rax
  42bd0e:	mov    QWORD PTR [rax+0x10],r15
  42bd12:	mov    QWORD PTR [rax],rax
  42bd15:	mov    QWORD PTR [rax+0x8],rax
  42bd19:	mov    rcx,QWORD PTR [r13+0x20]
  42bd1d:	test   rcx,rcx
  42bd20:	je     42bda7 <strcmp@plt+0x2861f>
  42bd26:	lea    r12,[r13+0x18]
  42bd2a:	mov    eax,DWORD PTR [r13+0x18]
  42bd2e:	test   eax,eax
  42bd30:	je     42bdcc <strcmp@plt+0x28644>
  42bd36:	mov    rbx,QWORD PTR [r13+0x8]
  42bd3a:	cmp    rbx,r13
  42bd3d:	je     42bde8 <strcmp@plt+0x28660>
  42bd43:	mov    rsi,QWORD PTR [rbx+0x10]
  42bd47:	mov    rdi,r15
  42bd4a:	call   rcx
  42bd4c:	xor    ebp,ebp
  42bd4e:	cmp    eax,0x2
  42bd51:	je     42bd86 <strcmp@plt+0x285fe>
  42bd53:	mov    ecx,0x1
  42bd58:	nop    DWORD PTR [rax+rax*1+0x0]
  42bd60:	test   eax,eax
  42bd62:	js     42be24 <strcmp@plt+0x2869c>
  42bd68:	mov    ebp,ecx
  42bd6a:	mov    rbx,QWORD PTR [rbx+0x8]
  42bd6e:	cmp    rbx,r13
  42bd71:	je     42bd86 <strcmp@plt+0x285fe>
  42bd73:	mov    rsi,QWORD PTR [rbx+0x10]
  42bd77:	mov    rdi,r15
  42bd7a:	call   QWORD PTR [r13+0x20]
  42bd7e:	lea    ecx,[rbp+0x1]
  42bd81:	cmp    eax,0x2
  42bd84:	jne    42bd60 <strcmp@plt+0x285d8>
  42bd86:	mov    eax,DWORD PTR [r12]
  42bd8a:	cmp    ebp,eax
  42bd8c:	jne    42bdee <strcmp@plt+0x28666>
  42bd8e:	mov    rcx,QWORD PTR [r13+0x0]
  42bd92:	mov    QWORD PTR [r14],rcx
  42bd95:	mov    QWORD PTR [r14+0x8],r13
  42bd99:	mov    rcx,QWORD PTR [r13+0x0]
  42bd9d:	mov    QWORD PTR [rcx+0x8],r14
  42bda1:	mov    QWORD PTR [r13+0x0],r14
  42bda5:	jmp    42be09 <strcmp@plt+0x28681>
  42bda7:	mov    rax,QWORD PTR [r13+0x8]
  42bdab:	mov    rcx,QWORD PTR [rax]
  42bdae:	mov    QWORD PTR [r14],rcx
  42bdb1:	mov    QWORD PTR [r14+0x8],rax
  42bdb5:	mov    rcx,QWORD PTR [rax]
  42bdb8:	mov    QWORD PTR [rcx+0x8],r14
  42bdbc:	mov    QWORD PTR [rax],r14
  42bdbf:	mov    eax,DWORD PTR [r13+0x18]
  42bdc3:	add    r13,0x18
  42bdc7:	mov    r12,r13
  42bdca:	jmp    42be09 <strcmp@plt+0x28681>
  42bdcc:	mov    rax,QWORD PTR [r13+0x8]
  42bdd0:	mov    rcx,QWORD PTR [rax]
  42bdd3:	mov    QWORD PTR [r14],rcx
  42bdd6:	mov    QWORD PTR [r14+0x8],rax
  42bdda:	mov    rcx,QWORD PTR [rax]
  42bddd:	mov    QWORD PTR [rcx+0x8],r14
  42bde1:	mov    QWORD PTR [rax],r14
  42bde4:	xor    eax,eax
  42bde6:	jmp    42be09 <strcmp@plt+0x28681>
  42bde8:	xor    ebp,ebp
  42bdea:	cmp    ebp,eax
  42bdec:	je     42bd8e <strcmp@plt+0x28606>
  42bdee:	mov    rcx,QWORD PTR [rbx]
  42bdf1:	mov    rcx,QWORD PTR [rcx+0x8]
  42bdf5:	mov    rdx,QWORD PTR [rcx]
  42bdf8:	mov    QWORD PTR [r14],rdx
  42bdfb:	mov    QWORD PTR [r14+0x8],rcx
  42bdff:	mov    rdx,QWORD PTR [rcx]
  42be02:	mov    QWORD PTR [rdx+0x8],r14
  42be06:	mov    QWORD PTR [rcx],r14
  42be09:	add    eax,0x1
  42be0c:	mov    DWORD PTR [r12],eax
  42be10:	mov    eax,0x1
  42be15:	add    rsp,0x8
  42be19:	pop    rbx
  42be1a:	pop    r12
  42be1c:	pop    r13
  42be1e:	pop    r14
  42be20:	pop    r15
  42be22:	pop    rbp
  42be23:	ret    
  42be24:	mov    rdi,r14
  42be27:	call   403780 <free@plt>
  42be2c:	xor    eax,eax
  42be2e:	jmp    42be15 <strcmp@plt+0x2868d>
  42be30:	push   r14
  42be32:	push   rbx
  42be33:	push   rax
  42be34:	xor    eax,eax
  42be36:	cmp    QWORD PTR [rsi+0x20],0x0
  42be3b:	jne    42be71 <strcmp@plt+0x286e9>
  42be3d:	mov    rbx,rsi
  42be40:	mov    r14,rdi
  42be43:	mov    edi,0x18
  42be48:	call   432070 <strcmp@plt+0x2e8e8>
  42be4d:	mov    QWORD PTR [rax+0x10],r14
  42be51:	mov    QWORD PTR [rax],rax
  42be54:	mov    rcx,QWORD PTR [rbx]
  42be57:	mov    QWORD PTR [rax],rcx
  42be5a:	mov    QWORD PTR [rax+0x8],rbx
  42be5e:	mov    rcx,QWORD PTR [rbx]
  42be61:	mov    QWORD PTR [rcx+0x8],rax
  42be65:	mov    QWORD PTR [rbx],rax
  42be68:	add    DWORD PTR [rbx+0x18],0x1
  42be6c:	mov    eax,0x1
  42be71:	add    rsp,0x8
  42be75:	pop    rbx
  42be76:	pop    r14
  42be78:	ret    
  42be79:	nop    DWORD PTR [rax+0x0]
  42be80:	push   r15
  42be82:	push   r14
  42be84:	push   rbx
  42be85:	cmp    DWORD PTR [rsi+0x18],0x0
  42be89:	je     42bece <strcmp@plt+0x28746>
  42be8b:	mov    r15,rsi
  42be8e:	mov    rbx,QWORD PTR [rsi+0x8]
  42be92:	cmp    rbx,rsi
  42be95:	je     42bece <strcmp@plt+0x28746>
  42be97:	mov    r14,rdi
  42be9a:	nop    WORD PTR [rax+rax*1+0x0]
  42bea0:	mov    rax,QWORD PTR [r15+0x20]
  42bea4:	mov    rsi,QWORD PTR [rbx+0x10]
  42bea8:	test   rax,rax
  42beab:	je     42bec0 <strcmp@plt+0x28738>
  42bead:	mov    rdi,r14
  42beb0:	call   rax
  42beb2:	test   eax,eax
  42beb4:	jne    42bec5 <strcmp@plt+0x2873d>
  42beb6:	jmp    42bed6 <strcmp@plt+0x2874e>
  42beb8:	nop    DWORD PTR [rax+rax*1+0x0]
  42bec0:	cmp    rsi,r14
  42bec3:	je     42bed6 <strcmp@plt+0x2874e>
  42bec5:	mov    rbx,QWORD PTR [rbx+0x8]
  42bec9:	cmp    rbx,r15
  42becc:	jne    42bea0 <strcmp@plt+0x28718>
  42bece:	xor    eax,eax
  42bed0:	pop    rbx
  42bed1:	pop    r14
  42bed3:	pop    r15
  42bed5:	ret    
  42bed6:	mov    al,0x1
  42bed8:	jmp    42bed0 <strcmp@plt+0x28748>
  42beda:	nop    WORD PTR [rax+rax*1+0x0]
  42bee0:	push   r15
  42bee2:	push   r14
  42bee4:	push   r12
  42bee6:	push   rbx
  42bee7:	push   rax
  42bee8:	cmp    DWORD PTR [rsi+0x18],0x0
  42beec:	je     42bf2e <strcmp@plt+0x287a6>
  42beee:	mov    r14,rsi
  42bef1:	mov    rbx,QWORD PTR [rsi+0x8]
  42bef5:	cmp    rbx,rsi
  42bef8:	je     42bf2e <strcmp@plt+0x287a6>
  42befa:	mov    r12,rdx
  42befd:	mov    r15,rdi
  42bf00:	mov    rsi,QWORD PTR [rbx+0x10]
  42bf04:	test   r12,r12
  42bf07:	je     42bf20 <strcmp@plt+0x28798>
  42bf09:	mov    rdi,r15
  42bf0c:	call   r12
  42bf0f:	test   eax,eax
  42bf11:	jne    42bf25 <strcmp@plt+0x2879d>
  42bf13:	jmp    42bf3c <strcmp@plt+0x287b4>
  42bf15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bf1f:	nop
  42bf20:	cmp    rsi,r15
  42bf23:	je     42bf3c <strcmp@plt+0x287b4>
  42bf25:	mov    rbx,QWORD PTR [rbx+0x8]
  42bf29:	cmp    rbx,r14
  42bf2c:	jne    42bf00 <strcmp@plt+0x28778>
  42bf2e:	xor    eax,eax
  42bf30:	add    rsp,0x8
  42bf34:	pop    rbx
  42bf35:	pop    r12
  42bf37:	pop    r14
  42bf39:	pop    r15
  42bf3b:	ret    
  42bf3c:	mov    al,0x1
  42bf3e:	jmp    42bf30 <strcmp@plt+0x287a8>
  42bf40:	push   rbp
  42bf41:	push   r15
  42bf43:	push   r14
  42bf45:	push   r13
  42bf47:	push   r12
  42bf49:	push   rbx
  42bf4a:	push   rax
  42bf4b:	mov    rbx,QWORD PTR [rdi+0x8]
  42bf4f:	cmp    rbx,rdi
  42bf52:	je     42bfac <strcmp@plt+0x28824>
  42bf54:	mov    r13d,edx
  42bf57:	mov    r14,rsi
  42bf5a:	mov    r15,rdi
  42bf5d:	mov    ebp,0x1
  42bf62:	lea    r12,[rip+0x1a2a5]        # 44620e <strcmp@plt+0x42a86>
  42bf69:	nop    DWORD PTR [rax+0x0]
  42bf70:	mov    rdi,QWORD PTR [rbx+0x10]
  42bf74:	cmp    r13d,0x5
  42bf78:	jl     42bf8b <strcmp@plt+0x28803>
  42bf7a:	lea    rax,[rip+0x38e2f]        # 464db0 <strcmp@plt+0x61628>
  42bf81:	mov    eax,DWORD PTR [rax]
  42bf83:	add    eax,0x4
  42bf86:	cmp    eax,r13d
  42bf89:	jl     42bfa0 <strcmp@plt+0x28818>
  42bf8b:	call   r14
  42bf8e:	mov    rcx,rax
  42bf91:	xor    eax,eax
  42bf93:	mov    edi,r13d
  42bf96:	mov    rsi,r12
  42bf99:	mov    edx,ebp
  42bf9b:	call   42e800 <strcmp@plt+0x2b078>
  42bfa0:	mov    rbx,QWORD PTR [rbx+0x8]
  42bfa4:	add    ebp,0x1
  42bfa7:	cmp    rbx,r15
  42bfaa:	jne    42bf70 <strcmp@plt+0x287e8>
  42bfac:	add    rsp,0x8
  42bfb0:	pop    rbx
  42bfb1:	pop    r12
  42bfb3:	pop    r13
  42bfb5:	pop    r14
  42bfb7:	pop    r15
  42bfb9:	pop    rbp
  42bfba:	ret    
  42bfbb:	nop    DWORD PTR [rax+rax*1+0x0]
  42bfc0:	push   rbx
  42bfc1:	test   rdi,rdi
  42bfc4:	je     42bfe9 <strcmp@plt+0x28861>
  42bfc6:	mov    rbx,rsi
  42bfc9:	test   rsi,rsi
  42bfcc:	je     42bfe9 <strcmp@plt+0x28861>
  42bfce:	mov    rax,QWORD PTR [rdi]
  42bfd1:	mov    rcx,QWORD PTR [rdi+0x8]
  42bfd5:	mov    QWORD PTR [rax+0x8],rcx
  42bfd9:	mov    rcx,QWORD PTR [rdi+0x8]
  42bfdd:	mov    QWORD PTR [rcx],rax
  42bfe0:	call   403780 <free@plt>
  42bfe5:	add    DWORD PTR [rbx+0x18],0xffffffff
  42bfe9:	pop    rbx
  42bfea:	ret    
  42bfeb:	nop    DWORD PTR [rax+rax*1+0x0]
  42bff0:	push   r14
  42bff2:	push   rbx
  42bff3:	push   rax
  42bff4:	cmp    DWORD PTR [rdi+0x18],0x0
  42bff8:	je     42c022 <strcmp@plt+0x2889a>
  42bffa:	mov    rbx,rdi
  42bffd:	mov    rdi,QWORD PTR [rdi+0x8]
  42c001:	mov    r14,QWORD PTR [rdi+0x10]
  42c005:	mov    rax,QWORD PTR [rdi]
  42c008:	mov    rcx,QWORD PTR [rdi+0x8]
  42c00c:	mov    QWORD PTR [rax+0x8],rcx
  42c010:	mov    rcx,QWORD PTR [rdi+0x8]
  42c014:	mov    QWORD PTR [rcx],rax
  42c017:	call   403780 <free@plt>
  42c01c:	add    DWORD PTR [rbx+0x18],0xffffffff
  42c020:	jmp    42c025 <strcmp@plt+0x2889d>
  42c022:	xor    r14d,r14d
  42c025:	mov    rax,r14
  42c028:	add    rsp,0x8
  42c02c:	pop    rbx
  42c02d:	pop    r14
  42c02f:	ret    
  42c030:	push   r14
  42c032:	push   rbx
  42c033:	push   rax
  42c034:	cmp    DWORD PTR [rdi+0x18],0x0
  42c038:	je     42c061 <strcmp@plt+0x288d9>
  42c03a:	mov    rbx,rdi
  42c03d:	mov    rdi,QWORD PTR [rdi]
  42c040:	mov    r14,QWORD PTR [rdi+0x10]
  42c044:	mov    rax,QWORD PTR [rdi]
  42c047:	mov    rcx,QWORD PTR [rdi+0x8]
  42c04b:	mov    QWORD PTR [rax+0x8],rcx
  42c04f:	mov    rcx,QWORD PTR [rdi+0x8]
  42c053:	mov    QWORD PTR [rcx],rax
  42c056:	call   403780 <free@plt>
  42c05b:	add    DWORD PTR [rbx+0x18],0xffffffff
  42c05f:	jmp    42c064 <strcmp@plt+0x288dc>
  42c061:	xor    r14d,r14d
  42c064:	mov    rax,r14
  42c067:	add    rsp,0x8
  42c06b:	pop    rbx
  42c06c:	pop    r14
  42c06e:	ret    
  42c06f:	nop
  42c070:	push   r14
  42c072:	push   rbx
  42c073:	push   rax
  42c074:	test   rdi,rdi
  42c077:	je     42c0b2 <strcmp@plt+0x2892a>
  42c079:	mov    r14,rsi
  42c07c:	test   rsi,rsi
  42c07f:	je     42c0b2 <strcmp@plt+0x2892a>
  42c081:	mov    rbx,rdi
  42c084:	mov    rax,QWORD PTR [rdi]
  42c087:	mov    rcx,QWORD PTR [rdi+0x8]
  42c08b:	mov    QWORD PTR [rax+0x8],rcx
  42c08f:	mov    rcx,QWORD PTR [rdi+0x8]
  42c093:	mov    QWORD PTR [rcx],rax
  42c096:	mov    rax,QWORD PTR [r14+0x28]
  42c09a:	test   rax,rax
  42c09d:	je     42c0a5 <strcmp@plt+0x2891d>
  42c09f:	mov    rdi,QWORD PTR [rbx+0x10]
  42c0a3:	call   rax
  42c0a5:	mov    rdi,rbx
  42c0a8:	call   403780 <free@plt>
  42c0ad:	add    DWORD PTR [r14+0x18],0xffffffff
  42c0b2:	add    rsp,0x8
  42c0b6:	pop    rbx
  42c0b7:	pop    r14
  42c0b9:	ret    
  42c0ba:	nop    WORD PTR [rax+rax*1+0x0]
  42c0c0:	push   r15
  42c0c2:	push   r14
  42c0c4:	push   rbx
  42c0c5:	test   rsi,rsi
  42c0c8:	je     42c15d <strcmp@plt+0x289d5>
  42c0ce:	mov    r14,rsi
  42c0d1:	cmp    DWORD PTR [rsi+0x18],0x0
  42c0d5:	je     42c15d <strcmp@plt+0x289d5>
  42c0db:	mov    r15,rdi
  42c0de:	mov    rbx,QWORD PTR [r14+0x8]
  42c0e2:	mov    rax,QWORD PTR [r14+0x20]
  42c0e6:	test   rax,rax
  42c0e9:	je     42c124 <strcmp@plt+0x2899c>
  42c0eb:	cmp    rbx,r14
  42c0ee:	je     42c15d <strcmp@plt+0x289d5>
  42c0f0:	mov    rsi,QWORD PTR [rbx+0x10]
  42c0f4:	mov    rdi,r15
  42c0f7:	call   rax
  42c0f9:	test   eax,eax
  42c0fb:	jne    42c10f <strcmp@plt+0x28987>
  42c0fd:	jmp    42c12f <strcmp@plt+0x289a7>
  42c0ff:	nop
  42c100:	mov    rsi,QWORD PTR [rbx+0x10]
  42c104:	mov    rdi,r15
  42c107:	call   QWORD PTR [r14+0x20]
  42c10b:	test   eax,eax
  42c10d:	je     42c12f <strcmp@plt+0x289a7>
  42c10f:	mov    rbx,QWORD PTR [rbx+0x8]
  42c113:	cmp    rbx,r14
  42c116:	jne    42c100 <strcmp@plt+0x28978>
  42c118:	jmp    42c15d <strcmp@plt+0x289d5>
  42c11a:	nop    WORD PTR [rax+rax*1+0x0]
  42c120:	mov    rbx,QWORD PTR [rbx+0x8]
  42c124:	cmp    rbx,r14
  42c127:	je     42c15d <strcmp@plt+0x289d5>
  42c129:	cmp    QWORD PTR [rbx+0x10],r15
  42c12d:	jne    42c120 <strcmp@plt+0x28998>
  42c12f:	mov    rax,QWORD PTR [rbx]
  42c132:	mov    rcx,QWORD PTR [rbx+0x8]
  42c136:	mov    QWORD PTR [rax+0x8],rcx
  42c13a:	mov    rcx,QWORD PTR [rbx+0x8]
  42c13e:	mov    QWORD PTR [rcx],rax
  42c141:	mov    rax,QWORD PTR [r14+0x28]
  42c145:	test   rax,rax
  42c148:	je     42c150 <strcmp@plt+0x289c8>
  42c14a:	mov    rdi,QWORD PTR [rbx+0x10]
  42c14e:	call   rax
  42c150:	mov    rdi,rbx
  42c153:	call   403780 <free@plt>
  42c158:	add    DWORD PTR [r14+0x18],0xffffffff
  42c15d:	pop    rbx
  42c15e:	pop    r14
  42c160:	pop    r15
  42c162:	ret    
  42c163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c16d:	nop    DWORD PTR [rax]
  42c170:	push   r14
  42c172:	push   rbx
  42c173:	push   rax
  42c174:	test   rsi,rsi
  42c177:	je     42c1cc <strcmp@plt+0x28a44>
  42c179:	mov    r14,rsi
  42c17c:	cmp    DWORD PTR [rsi+0x18],0x0
  42c180:	je     42c1cc <strcmp@plt+0x28a44>
  42c182:	lea    rax,[r14+0x8]
  42c186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c190:	mov    rbx,QWORD PTR [rax]
  42c193:	cmp    rbx,r14
  42c196:	je     42c1cc <strcmp@plt+0x28a44>
  42c198:	lea    rax,[rbx+0x8]
  42c19c:	cmp    QWORD PTR [rbx+0x10],rdi
  42c1a0:	jne    42c190 <strcmp@plt+0x28a08>
  42c1a2:	mov    rax,QWORD PTR [rbx]
  42c1a5:	mov    rcx,QWORD PTR [rbx+0x8]
  42c1a9:	mov    QWORD PTR [rax+0x8],rcx
  42c1ad:	mov    rcx,QWORD PTR [rbx+0x8]
  42c1b1:	mov    QWORD PTR [rcx],rax
  42c1b4:	mov    rax,QWORD PTR [r14+0x28]
  42c1b8:	test   rax,rax
  42c1bb:	je     42c1bf <strcmp@plt+0x28a37>
  42c1bd:	call   rax
  42c1bf:	mov    rdi,rbx
  42c1c2:	call   403780 <free@plt>
  42c1c7:	add    DWORD PTR [r14+0x18],0xffffffff
  42c1cc:	add    rsp,0x8
  42c1d0:	pop    rbx
  42c1d1:	pop    r14
  42c1d3:	ret    
  42c1d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c1de:	xchg   ax,ax
  42c1e0:	push   r15
  42c1e2:	push   r14
  42c1e4:	push   rbx
  42c1e5:	test   rdi,rdi
  42c1e8:	je     42c23b <strcmp@plt+0x28ab3>
  42c1ea:	mov    r14,rdi
  42c1ed:	cmp    DWORD PTR [rdi+0x18],0x0
  42c1f1:	je     42c23b <strcmp@plt+0x28ab3>
  42c1f3:	mov    rbx,QWORD PTR [r14+0x8]
  42c1f7:	cmp    rbx,r14
  42c1fa:	je     42c23b <strcmp@plt+0x28ab3>
  42c1fc:	nop    DWORD PTR [rax+0x0]
  42c200:	mov    r15,QWORD PTR [rbx+0x8]
  42c204:	test   rbx,rbx
  42c207:	je     42c233 <strcmp@plt+0x28aab>
  42c209:	mov    rax,QWORD PTR [rbx]
  42c20c:	mov    QWORD PTR [rax+0x8],r15
  42c210:	mov    rcx,QWORD PTR [rbx+0x8]
  42c214:	mov    QWORD PTR [rcx],rax
  42c217:	mov    rax,QWORD PTR [r14+0x28]
  42c21b:	test   rax,rax
  42c21e:	je     42c226 <strcmp@plt+0x28a9e>
  42c220:	mov    rdi,QWORD PTR [rbx+0x10]
  42c224:	call   rax
  42c226:	mov    rdi,rbx
  42c229:	call   403780 <free@plt>
  42c22e:	add    DWORD PTR [r14+0x18],0xffffffff
  42c233:	mov    rbx,r15
  42c236:	cmp    r15,r14
  42c239:	jne    42c200 <strcmp@plt+0x28a78>
  42c23b:	pop    rbx
  42c23c:	pop    r14
  42c23e:	pop    r15
  42c240:	ret    
  42c241:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c24b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c250:	test   rdi,rdi
  42c253:	je     42c2b8 <strcmp@plt+0x28b30>
  42c255:	push   r15
  42c257:	push   r14
  42c259:	push   rbx
  42c25a:	mov    r14,rdi
  42c25d:	cmp    DWORD PTR [rdi+0x18],0x0
  42c261:	je     42c2ab <strcmp@plt+0x28b23>
  42c263:	mov    rbx,QWORD PTR [r14+0x8]
  42c267:	cmp    rbx,r14
  42c26a:	je     42c2ab <strcmp@plt+0x28b23>
  42c26c:	nop    DWORD PTR [rax+0x0]
  42c270:	mov    r15,QWORD PTR [rbx+0x8]
  42c274:	test   rbx,rbx
  42c277:	je     42c2a3 <strcmp@plt+0x28b1b>
  42c279:	mov    rax,QWORD PTR [rbx]
  42c27c:	mov    QWORD PTR [rax+0x8],r15
  42c280:	mov    rcx,QWORD PTR [rbx+0x8]
  42c284:	mov    QWORD PTR [rcx],rax
  42c287:	mov    rax,QWORD PTR [r14+0x28]
  42c28b:	test   rax,rax
  42c28e:	je     42c296 <strcmp@plt+0x28b0e>
  42c290:	mov    rdi,QWORD PTR [rbx+0x10]
  42c294:	call   rax
  42c296:	mov    rdi,rbx
  42c299:	call   403780 <free@plt>
  42c29e:	add    DWORD PTR [r14+0x18],0xffffffff
  42c2a3:	mov    rbx,r15
  42c2a6:	cmp    r15,r14
  42c2a9:	jne    42c270 <strcmp@plt+0x28ae8>
  42c2ab:	mov    rdi,r14
  42c2ae:	pop    rbx
  42c2af:	pop    r14
  42c2b1:	pop    r15
  42c2b3:	jmp    403780 <free@plt>
  42c2b8:	ret    
  42c2b9:	nop    DWORD PTR [rax+0x0]
  42c2c0:	push   rbp
  42c2c1:	push   r15
  42c2c3:	push   r14
  42c2c5:	push   r13
  42c2c7:	push   r12
  42c2c9:	push   rbx
  42c2ca:	push   rax
  42c2cb:	mov    r14,rcx
  42c2ce:	mov    ecx,edi
  42c2d0:	mov    r12d,0x1
  42c2d6:	test   cl,cl
  42c2d8:	je     42c379 <strcmp@plt+0x28bf1>
  42c2de:	cmp    cl,0x1
  42c2e1:	jne    42c352 <strcmp@plt+0x28bca>
  42c2e3:	mov    rbx,r8
  42c2e6:	mov    r15,rdx
  42c2e9:	mov    rbp,rsi
  42c2ec:	mov    edi,0x4
  42c2f1:	call   419b50 <strcmp@plt+0x163c8>
  42c2f6:	mov    r13,rax
  42c2f9:	vxorps xmm0,xmm0,xmm0
  42c2fd:	vmovups XMMWORD PTR [rbx],xmm0
  42c301:	mov    DWORD PTR [rbx+0x10],0x0
  42c308:	mov    rdi,rbp
  42c30b:	call   4031e0 <strlen@plt>
  42c310:	mov    rdi,r13
  42c313:	mov    rsi,rbp
  42c316:	mov    rdx,rax
  42c319:	mov    rcx,r15
  42c31c:	mov    r8,r14
  42c31f:	mov    r9,rbx
  42c322:	call   41a360 <strcmp@plt+0x16bd8>
  42c327:	test   eax,eax
  42c329:	je     42c379 <strcmp@plt+0x28bf1>
  42c32b:	lea    rax,[rip+0x38a7e]        # 464db0 <strcmp@plt+0x61628>
  42c332:	xor    r12d,r12d
  42c335:	cmp    DWORD PTR [rax],0x2
  42c338:	jl     42c379 <strcmp@plt+0x28bf1>
  42c33a:	lea    rsi,[rip+0x1f037]        # 44b378 <strcmp@plt+0x47bf0>
  42c341:	xor    r12d,r12d
  42c344:	mov    edi,0x6
  42c349:	xor    eax,eax
  42c34b:	call   42e800 <strcmp@plt+0x2b078>
  42c350:	jmp    42c379 <strcmp@plt+0x28bf1>
  42c352:	lea    rax,[rip+0x38a57]        # 464db0 <strcmp@plt+0x61628>
  42c359:	xor    r12d,r12d
  42c35c:	cmp    DWORD PTR [rax],0x2
  42c35f:	jl     42c379 <strcmp@plt+0x28bf1>
  42c361:	lea    rsi,[rip+0x1efe0]        # 44b348 <strcmp@plt+0x47bc0>
  42c368:	xor    r12d,r12d
  42c36b:	mov    edi,0x6
  42c370:	xor    eax,eax
  42c372:	mov    edx,ecx
  42c374:	call   42e800 <strcmp@plt+0x2b078>
  42c379:	mov    eax,r12d
  42c37c:	add    rsp,0x8
  42c380:	pop    rbx
  42c381:	pop    r12
  42c383:	pop    r13
  42c385:	pop    r14
  42c387:	pop    r15
  42c389:	pop    rbp
  42c38a:	ret    
  42c38b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c390:	push   rbp
  42c391:	push   r15
  42c393:	push   r14
  42c395:	push   r13
  42c397:	push   r12
  42c399:	push   rbx
  42c39a:	push   rax
  42c39b:	mov    r15,rcx
  42c39e:	mov    ecx,edi
  42c3a0:	cmp    cl,0x1
  42c3a3:	jne    42c43c <strcmp@plt+0x28cb4>
  42c3a9:	mov    rbx,r8
  42c3ac:	mov    r12,rdx
  42c3af:	mov    r13,rsi
  42c3b2:	mov    edi,0x14
  42c3b7:	call   4320b0 <strcmp@plt+0x2e928>
  42c3bc:	test   rax,rax
  42c3bf:	je     42c463 <strcmp@plt+0x28cdb>
  42c3c5:	mov    r14,rax
  42c3c8:	mov    eax,DWORD PTR [rbx+0x10]
  42c3cb:	mov    DWORD PTR [r14+0x10],eax
  42c3cf:	vmovups xmm0,XMMWORD PTR [rbx]
  42c3d3:	vmovups XMMWORD PTR [r14],xmm0
  42c3d8:	vxorps xmm0,xmm0,xmm0
  42c3dc:	vmovups XMMWORD PTR [rbx],xmm0
  42c3e0:	mov    DWORD PTR [rbx+0x10],0x0
  42c3e7:	mov    edi,0x4
  42c3ec:	call   419b50 <strcmp@plt+0x163c8>
  42c3f1:	mov    rbp,rax
  42c3f4:	mov    rdi,r13
  42c3f7:	call   4031e0 <strlen@plt>
  42c3fc:	mov    rdi,rbp
  42c3ff:	mov    rsi,r13
  42c402:	mov    rdx,rax
  42c405:	mov    rcx,r12
  42c408:	mov    r8,r15
  42c40b:	mov    r9,rbx
  42c40e:	call   41a360 <strcmp@plt+0x16bd8>
  42c413:	test   eax,eax
  42c415:	je     42c47d <strcmp@plt+0x28cf5>
  42c417:	lea    rax,[rip+0x38992]        # 464db0 <strcmp@plt+0x61628>
  42c41e:	xor    ebx,ebx
  42c420:	cmp    DWORD PTR [rax],0x2
  42c423:	jl     42c49c <strcmp@plt+0x28d14>
  42c425:	lea    rsi,[rip+0x1ef97]        # 44b3c3 <strcmp@plt+0x47c3b>
  42c42c:	xor    ebx,ebx
  42c42e:	mov    edi,0x6
  42c433:	xor    eax,eax
  42c435:	call   42e800 <strcmp@plt+0x2b078>
  42c43a:	jmp    42c49c <strcmp@plt+0x28d14>
  42c43c:	lea    rax,[rip+0x3896d]        # 464db0 <strcmp@plt+0x61628>
  42c443:	xor    ebx,ebx
  42c445:	cmp    DWORD PTR [rax],0x2
  42c448:	jl     42c49c <strcmp@plt+0x28d14>
  42c44a:	lea    rsi,[rip+0x1eef7]        # 44b348 <strcmp@plt+0x47bc0>
  42c451:	xor    ebx,ebx
  42c453:	mov    edi,0x6
  42c458:	xor    eax,eax
  42c45a:	mov    edx,ecx
  42c45c:	call   42e800 <strcmp@plt+0x2b078>
  42c461:	jmp    42c49c <strcmp@plt+0x28d14>
  42c463:	lea    rsi,[rip+0x1ef38]        # 44b3a2 <strcmp@plt+0x47c1a>
  42c46a:	mov    edi,0x2
  42c46f:	xor    eax,eax
  42c471:	call   42e800 <strcmp@plt+0x2b078>
  42c476:	mov    ebx,0xfffffffc
  42c47b:	jmp    42c49c <strcmp@plt+0x28d14>
  42c47d:	mov    edx,0x14
  42c482:	mov    rdi,rbx
  42c485:	mov    rsi,r14
  42c488:	call   403220 <strncmp@plt>
  42c48d:	xor    ebx,ebx
  42c48f:	test   eax,eax
  42c491:	sete   bl
  42c494:	mov    rdi,r14
  42c497:	call   403780 <free@plt>
  42c49c:	mov    eax,ebx
  42c49e:	add    rsp,0x8
  42c4a2:	pop    rbx
  42c4a3:	pop    r12
  42c4a5:	pop    r13
  42c4a7:	pop    r14
  42c4a9:	pop    r15
  42c4ab:	pop    rbp
  42c4ac:	ret    
  42c4ad:	nop    DWORD PTR [rax]
  42c4b0:	push   rbx
  42c4b1:	mov    edi,0x10
  42c4b6:	call   432070 <strcmp@plt+0x2e8e8>
  42c4bb:	mov    rbx,rax
  42c4be:	mov    edi,0x1
  42c4c3:	mov    esi,0x28
  42c4c8:	call   4032d0 <calloc@plt>
  42c4cd:	mov    QWORD PTR [rbx],rax
  42c4d0:	mov    rax,rbx
  42c4d3:	pop    rbx
  42c4d4:	ret    
  42c4d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c4df:	nop
  42c4e0:	push   r14
  42c4e2:	push   rbx
  42c4e3:	push   rax
  42c4e4:	mov    r14,rdi
  42c4e7:	mov    edi,0x10
  42c4ec:	call   432070 <strcmp@plt+0x2e8e8>
  42c4f1:	mov    rbx,rax
  42c4f4:	mov    edi,0x1
  42c4f9:	mov    esi,0x28
  42c4fe:	call   4032d0 <calloc@plt>
  42c503:	mov    QWORD PTR [rbx],rax
  42c506:	mov    QWORD PTR [rbx+0x8],r14
  42c50a:	mov    rax,rbx
  42c50d:	add    rsp,0x8
  42c511:	pop    rbx
  42c512:	pop    r14
  42c514:	ret    
  42c515:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c51f:	nop
  42c520:	push   rbp
  42c521:	push   r15
  42c523:	push   r14
  42c525:	push   r13
  42c527:	push   r12
  42c529:	push   rbx
  42c52a:	push   rax
  42c52b:	mov    r14,rdx
  42c52e:	mov    r12,rsi
  42c531:	mov    r15,rdi
  42c534:	mov    r13,QWORD PTR [rdi]
  42c537:	mov    eax,DWORD PTR [r13+0x8]
  42c53b:	cmp    eax,DWORD PTR [r13+0xc]
  42c53f:	jb     42c55f <strcmp@plt+0x28dd7>
  42c541:	mov    esi,DWORD PTR [r13+0x0]
  42c545:	mov    eax,DWORD PTR [r13+0x4]
  42c549:	add    eax,eax
  42c54b:	cmp    esi,eax
  42c54d:	jbe    42c554 <strcmp@plt+0x28dcc>
  42c54f:	add    esi,0xffffffff
  42c552:	jmp    42c557 <strcmp@plt+0x28dcf>
  42c554:	add    esi,0x1
  42c557:	mov    rdi,r13
  42c55a:	call   42ca00 <strcmp@plt+0x29278>
  42c55f:	mov    r8d,DWORD PTR [r13+0x0]
  42c563:	lea    r10d,[r8-0x1]
  42c567:	mov    rax,r12
  42c56a:	shr    rax,0x21
  42c56e:	xor    eax,r12d
  42c571:	mov    ecx,r12d
  42c574:	shl    ecx,0xb
  42c577:	xor    ecx,eax
  42c579:	mov    r11d,r10d
  42c57c:	and    r11d,ecx
  42c57f:	mov    r9,QWORD PTR [r13+0x10]
  42c583:	mov    eax,r11d
  42c586:	shr    eax,0x4
  42c589:	mov    edx,r11d
  42c58c:	add    dl,dl
  42c58e:	and    dl,0x1e
  42c591:	mov    esi,0x2
  42c596:	shlx   edx,esi,edx
  42c59b:	test   DWORD PTR [r9+rax*4],edx
  42c59f:	je     42c5a9 <strcmp@plt+0x28e21>
  42c5a1:	mov    edx,r11d
  42c5a4:	jmp    42c62b <strcmp@plt+0x28ea3>
  42c5a9:	mov    eax,ecx
  42c5ab:	shr    eax,0x3
  42c5ae:	shl    ecx,0x3
  42c5b1:	xor    ecx,eax
  42c5b3:	or     ecx,0x1
  42c5b6:	and    ecx,r10d
  42c5b9:	mov    edx,r8d
  42c5bc:	mov    ebx,r11d
  42c5bf:	nop
  42c5c0:	mov    eax,ebx
  42c5c2:	shr    eax,0x4
  42c5c5:	mov    eax,DWORD PTR [r9+rax*4]
  42c5c9:	lea    edi,[rbx+rbx*1]
  42c5cc:	and    edi,0x1e
  42c5cf:	shrx   esi,eax,edi
  42c5d4:	test   sil,0x2
  42c5d8:	jne    42c608 <strcmp@plt+0x28e80>
  42c5da:	test   sil,0x1
  42c5de:	jne    42c5ec <strcmp@plt+0x28e64>
  42c5e0:	mov    rsi,QWORD PTR [r13+0x18]
  42c5e4:	mov    ebp,ebx
  42c5e6:	cmp    QWORD PTR [rsi+rbp*8],r12
  42c5ea:	je     42c608 <strcmp@plt+0x28e80>
  42c5ec:	bt     eax,edi
  42c5ef:	cmovb  edx,ebx
  42c5f2:	add    ebx,ecx
  42c5f4:	and    ebx,r10d
  42c5f7:	cmp    ebx,r11d
  42c5fa:	jne    42c5c0 <strcmp@plt+0x28e38>
  42c5fc:	mov    al,0x1
  42c5fe:	mov    ecx,r8d
  42c601:	cmp    edx,r8d
  42c604:	je     42c61c <strcmp@plt+0x28e94>
  42c606:	jmp    42c62b <strcmp@plt+0x28ea3>
  42c608:	mov    ecx,0x2
  42c60d:	shlx   ecx,ecx,edi
  42c612:	test   eax,ecx
  42c614:	sete   al
  42c617:	mov    r11d,ebx
  42c61a:	mov    ecx,edx
  42c61c:	test   al,al
  42c61e:	mov    edx,ecx
  42c620:	cmovne edx,r11d
  42c624:	cmp    ecx,r8d
  42c627:	cmove  edx,r11d
  42c62b:	mov    ecx,edx
  42c62d:	shr    ecx,0x4
  42c630:	lea    esi,[rdx+rdx*1]
  42c633:	and    esi,0x1e
  42c636:	shrx   eax,DWORD PTR [r9+rcx*4],esi
  42c63c:	test   al,0x2
  42c63e:	jne    42c648 <strcmp@plt+0x28ec0>
  42c640:	test   al,0x1
  42c642:	jne    42c671 <strcmp@plt+0x28ee9>
  42c644:	mov    eax,edx
  42c646:	jmp    42c693 <strcmp@plt+0x28f0b>
  42c648:	mov    rdi,QWORD PTR [r13+0x18]
  42c64c:	mov    eax,edx
  42c64e:	mov    QWORD PTR [rdi+rax*8],r12
  42c652:	mov    rdx,QWORD PTR [r13+0x10]
  42c656:	mov    edi,0x3
  42c65b:	shlx   esi,edi,esi
  42c660:	not    esi
  42c662:	and    DWORD PTR [rdx+rcx*4],esi
  42c665:	add    DWORD PTR [r13+0x4],0x1
  42c66a:	add    DWORD PTR [r13+0x8],0x1
  42c66f:	jmp    42c693 <strcmp@plt+0x28f0b>
  42c671:	mov    rdi,QWORD PTR [r13+0x18]
  42c675:	mov    eax,edx
  42c677:	mov    QWORD PTR [rdi+rax*8],r12
  42c67b:	mov    rdx,QWORD PTR [r13+0x10]
  42c67f:	mov    edi,0x3
  42c684:	shlx   esi,edi,esi
  42c689:	not    esi
  42c68b:	and    DWORD PTR [rdx+rcx*4],esi
  42c68e:	add    DWORD PTR [r13+0x4],0x1
  42c693:	mov    rcx,QWORD PTR [r15]
  42c696:	mov    rcx,QWORD PTR [rcx+0x20]
  42c69a:	mov    QWORD PTR [rcx+rax*8],r14
  42c69e:	add    rsp,0x8
  42c6a2:	pop    rbx
  42c6a3:	pop    r12
  42c6a5:	pop    r13
  42c6a7:	pop    r14
  42c6a9:	pop    r15
  42c6ab:	pop    rbp
  42c6ac:	ret    
  42c6ad:	nop    DWORD PTR [rax]
  42c6b0:	push   rbp
  42c6b1:	push   r15
  42c6b3:	push   r14
  42c6b5:	push   rbx
  42c6b6:	mov    r9,QWORD PTR [rdi]
  42c6b9:	mov    r8d,DWORD PTR [r9]
  42c6bc:	test   r8d,r8d
  42c6bf:	je     42c74c <strcmp@plt+0x28fc4>
  42c6c5:	lea    r11d,[r8-0x1]
  42c6c9:	mov    rax,rsi
  42c6cc:	shr    rax,0x21
  42c6d0:	xor    eax,esi
  42c6d2:	mov    r15d,esi
  42c6d5:	shl    r15d,0xb
  42c6d9:	xor    r15d,eax
  42c6dc:	mov    r14d,r11d
  42c6df:	and    r14d,r15d
  42c6e2:	mov    eax,r15d
  42c6e5:	shr    eax,0x3
  42c6e8:	shl    r15d,0x3
  42c6ec:	xor    r15d,eax
  42c6ef:	or     r15d,0x1
  42c6f3:	and    r15d,r11d
  42c6f6:	mov    r10,QWORD PTR [r9+0x10]
  42c6fa:	xor    eax,eax
  42c6fc:	mov    edx,r14d
  42c6ff:	nop
  42c700:	mov    ecx,edx
  42c702:	shr    ecx,0x4
  42c705:	mov    ebx,DWORD PTR [r10+rcx*4]
  42c709:	lea    ebp,[rdx+rdx*1]
  42c70c:	and    ebp,0x1e
  42c70f:	shrx   ecx,ebx,ebp
  42c714:	test   cl,0x2
  42c717:	jne    42c737 <strcmp@plt+0x28faf>
  42c719:	test   cl,0x1
  42c71c:	jne    42c72a <strcmp@plt+0x28fa2>
  42c71e:	mov    rcx,QWORD PTR [r9+0x18]
  42c722:	mov    edi,edx
  42c724:	cmp    QWORD PTR [rcx+rdi*8],rsi
  42c728:	je     42c737 <strcmp@plt+0x28faf>
  42c72a:	add    edx,r15d
  42c72d:	and    edx,r11d
  42c730:	cmp    edx,r14d
  42c733:	jne    42c700 <strcmp@plt+0x28f78>
  42c735:	jmp    42c74e <strcmp@plt+0x28fc6>
  42c737:	mov    ecx,0x3
  42c73c:	shlx   eax,ecx,ebp
  42c741:	test   eax,ebx
  42c743:	cmovne edx,r8d
  42c747:	cmp    edx,r8d
  42c74a:	jne    42c755 <strcmp@plt+0x28fcd>
  42c74c:	xor    eax,eax
  42c74e:	pop    rbx
  42c74f:	pop    r14
  42c751:	pop    r15
  42c753:	pop    rbp
  42c754:	ret    
  42c755:	mov    rax,QWORD PTR [r9+0x20]
  42c759:	mov    esi,edx
  42c75b:	mov    rax,QWORD PTR [rax+rsi*8]
  42c75f:	mov    esi,edx
  42c761:	shr    esi,0x4
  42c764:	mov    edi,DWORD PTR [r10+rsi*4]
  42c768:	add    edx,edx
  42c76a:	and    edx,0x1e
  42c76d:	shlx   ecx,ecx,edx
  42c772:	test   edi,ecx
  42c774:	jne    42c74e <strcmp@plt+0x28fc6>
  42c776:	bts    edi,edx
  42c779:	mov    DWORD PTR [r10+rsi*4],edi
  42c77d:	add    DWORD PTR [r9+0x4],0xffffffff
  42c782:	jmp    42c74e <strcmp@plt+0x28fc6>
  42c784:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c78e:	xchg   ax,ax
  42c790:	push   rbp
  42c791:	push   r15
  42c793:	push   r14
  42c795:	push   rbx
  42c796:	mov    r9,QWORD PTR [rdi]
  42c799:	mov    r8d,DWORD PTR [r9]
  42c79c:	test   r8d,r8d
  42c79f:	je     42c82e <strcmp@plt+0x290a6>
  42c7a5:	lea    r10d,[r8-0x1]
  42c7a9:	mov    rax,rsi
  42c7ac:	shr    rax,0x21
  42c7b0:	xor    eax,esi
  42c7b2:	mov    r15d,esi
  42c7b5:	shl    r15d,0xb
  42c7b9:	xor    r15d,eax
  42c7bc:	mov    r11d,r10d
  42c7bf:	and    r11d,r15d
  42c7c2:	mov    eax,r15d
  42c7c5:	shr    eax,0x3
  42c7c8:	shl    r15d,0x3
  42c7cc:	xor    r15d,eax
  42c7cf:	or     r15d,0x1
  42c7d3:	and    r15d,r10d
  42c7d6:	mov    r14,QWORD PTR [r9+0x10]
  42c7da:	xor    eax,eax
  42c7dc:	mov    ecx,r11d
  42c7df:	nop
  42c7e0:	mov    edi,ecx
  42c7e2:	shr    edi,0x4
  42c7e5:	mov    ebx,DWORD PTR [r14+rdi*4]
  42c7e9:	lea    ebp,[rcx+rcx*1]
  42c7ec:	and    ebp,0x1e
  42c7ef:	shrx   edi,ebx,ebp
  42c7f4:	test   dil,0x2
  42c7f8:	jne    42c819 <strcmp@plt+0x29091>
  42c7fa:	test   dil,0x1
  42c7fe:	jne    42c80c <strcmp@plt+0x29084>
  42c800:	mov    rdi,QWORD PTR [r9+0x18]
  42c804:	mov    edx,ecx
  42c806:	cmp    QWORD PTR [rdi+rdx*8],rsi
  42c80a:	je     42c819 <strcmp@plt+0x29091>
  42c80c:	add    ecx,r15d
  42c80f:	and    ecx,r10d
  42c812:	cmp    ecx,r11d
  42c815:	jne    42c7e0 <strcmp@plt+0x29058>
  42c817:	jmp    42c83c <strcmp@plt+0x290b4>
  42c819:	mov    eax,0x3
  42c81e:	shlx   eax,eax,ebp
  42c823:	test   eax,ebx
  42c825:	cmovne ecx,r8d
  42c829:	cmp    ecx,r8d
  42c82c:	jne    42c832 <strcmp@plt+0x290aa>
  42c82e:	xor    eax,eax
  42c830:	jmp    42c83c <strcmp@plt+0x290b4>
  42c832:	mov    rax,QWORD PTR [r9+0x20]
  42c836:	mov    ecx,ecx
  42c838:	mov    rax,QWORD PTR [rax+rcx*8]
  42c83c:	pop    rbx
  42c83d:	pop    r14
  42c83f:	pop    r15
  42c841:	pop    rbp
  42c842:	ret    
  42c843:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c84d:	nop    DWORD PTR [rax]
  42c850:	test   rdi,rdi
  42c853:	je     42c8f9 <strcmp@plt+0x29171>
  42c859:	push   rbp
  42c85a:	push   r15
  42c85c:	push   r14
  42c85e:	push   r12
  42c860:	push   rbx
  42c861:	mov    r14,rdi
  42c864:	mov    r12,QWORD PTR [rdi]
  42c867:	cmp    DWORD PTR [r12],0x0
  42c86c:	je     42c8be <strcmp@plt+0x29136>
  42c86e:	xor    ebp,ebp
  42c870:	mov    r15d,0x3
  42c876:	xor    ebx,ebx
  42c878:	nop    DWORD PTR [rax+rax*1+0x0]
  42c880:	mov    rax,QWORD PTR [r12+0x10]
  42c885:	mov    ecx,ebx
  42c887:	shr    ecx,0x4
  42c88a:	mov    edx,ebp
  42c88c:	and    dl,0x1e
  42c88f:	shlx   edx,r15d,edx
  42c894:	test   DWORD PTR [rax+rcx*4],edx
  42c897:	jne    42c8b2 <strcmp@plt+0x2912a>
  42c899:	mov    rax,QWORD PTR [r14+0x8]
  42c89d:	test   rax,rax
  42c8a0:	je     42c8b2 <strcmp@plt+0x2912a>
  42c8a2:	mov    rcx,QWORD PTR [r12+0x20]
  42c8a7:	mov    edx,ebx
  42c8a9:	mov    rdi,QWORD PTR [rcx+rdx*8]
  42c8ad:	call   rax
  42c8af:	mov    r12,QWORD PTR [r14]
  42c8b2:	add    ebx,0x1
  42c8b5:	add    ebp,0x2
  42c8b8:	cmp    ebx,DWORD PTR [r12]
  42c8bc:	jne    42c880 <strcmp@plt+0x290f8>
  42c8be:	test   r12,r12
  42c8c1:	je     42c8e9 <strcmp@plt+0x29161>
  42c8c3:	mov    rdi,QWORD PTR [r12+0x18]
  42c8c8:	call   403780 <free@plt>
  42c8cd:	mov    rdi,QWORD PTR [r12+0x10]
  42c8d2:	call   403780 <free@plt>
  42c8d7:	mov    rdi,QWORD PTR [r12+0x20]
  42c8dc:	call   403780 <free@plt>
  42c8e1:	mov    rdi,r12
  42c8e4:	call   403780 <free@plt>
  42c8e9:	mov    rdi,r14
  42c8ec:	pop    rbx
  42c8ed:	pop    r12
  42c8ef:	pop    r14
  42c8f1:	pop    r15
  42c8f3:	pop    rbp
  42c8f4:	jmp    403780 <free@plt>
  42c8f9:	ret    
  42c8fa:	nop    WORD PTR [rax+rax*1+0x0]
  42c900:	push   rbp
  42c901:	push   r15
  42c903:	push   r14
  42c905:	push   r12
  42c907:	push   rbx
  42c908:	mov    r14,rdi
  42c90b:	call   42bbd0 <strcmp@plt+0x28448>
  42c910:	mov    r15,rax
  42c913:	mov    rax,QWORD PTR [r14]
  42c916:	cmp    DWORD PTR [rax],0x0
  42c919:	je     42c968 <strcmp@plt+0x291e0>
  42c91b:	xor    ebp,ebp
  42c91d:	mov    r12d,0x3
  42c923:	xor    ebx,ebx
  42c925:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c92f:	nop
  42c930:	mov    rcx,QWORD PTR [rax+0x10]
  42c934:	mov    edx,ebx
  42c936:	shr    edx,0x4
  42c939:	mov    esi,ebp
  42c93b:	and    sil,0x1e
  42c93f:	shlx   esi,r12d,esi
  42c944:	test   DWORD PTR [rcx+rdx*4],esi
  42c947:	jne    42c95e <strcmp@plt+0x291d6>
  42c949:	mov    rax,QWORD PTR [rax+0x18]
  42c94d:	mov    ecx,ebx
  42c94f:	mov    rdi,QWORD PTR [rax+rcx*8]
  42c953:	mov    rsi,r15
  42c956:	call   42bcf0 <strcmp@plt+0x28568>
  42c95b:	mov    rax,QWORD PTR [r14]
  42c95e:	add    ebx,0x1
  42c961:	add    ebp,0x2
  42c964:	cmp    ebx,DWORD PTR [rax]
  42c966:	jne    42c930 <strcmp@plt+0x291a8>
  42c968:	mov    rax,r15
  42c96b:	pop    rbx
  42c96c:	pop    r12
  42c96e:	pop    r14
  42c970:	pop    r15
  42c972:	pop    rbp
  42c973:	ret    
  42c974:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c97e:	xchg   ax,ax
  42c980:	push   rbp
  42c981:	push   r15
  42c983:	push   r14
  42c985:	push   r12
  42c987:	push   rbx
  42c988:	mov    r14,rdi
  42c98b:	call   42bbd0 <strcmp@plt+0x28448>
  42c990:	mov    r15,rax
  42c993:	mov    rax,QWORD PTR [r14]
  42c996:	cmp    DWORD PTR [rax],0x0
  42c999:	je     42c9e8 <strcmp@plt+0x29260>
  42c99b:	xor    ebp,ebp
  42c99d:	mov    r12d,0x3
  42c9a3:	xor    ebx,ebx
  42c9a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c9af:	nop
  42c9b0:	mov    rcx,QWORD PTR [rax+0x10]
  42c9b4:	mov    edx,ebx
  42c9b6:	shr    edx,0x4
  42c9b9:	mov    esi,ebp
  42c9bb:	and    sil,0x1e
  42c9bf:	shlx   esi,r12d,esi
  42c9c4:	test   DWORD PTR [rcx+rdx*4],esi
  42c9c7:	jne    42c9de <strcmp@plt+0x29256>
  42c9c9:	mov    rax,QWORD PTR [rax+0x20]
  42c9cd:	mov    ecx,ebx
  42c9cf:	mov    rdi,QWORD PTR [rax+rcx*8]
  42c9d3:	mov    rsi,r15
  42c9d6:	call   42bcf0 <strcmp@plt+0x28568>
  42c9db:	mov    rax,QWORD PTR [r14]
  42c9de:	add    ebx,0x1
  42c9e1:	add    ebp,0x2
  42c9e4:	cmp    ebx,DWORD PTR [rax]
  42c9e6:	jne    42c9b0 <strcmp@plt+0x29228>
  42c9e8:	mov    rax,r15
  42c9eb:	pop    rbx
  42c9ec:	pop    r12
  42c9ee:	pop    r14
  42c9f0:	pop    r15
  42c9f2:	pop    rbp
  42c9f3:	ret    
  42c9f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c9fe:	xchg   ax,ax
  42ca00:	push   rbp
  42ca01:	push   r15
  42ca03:	push   r14
  42ca05:	push   r13
  42ca07:	push   r12
  42ca09:	push   rbx
  42ca0a:	sub    rsp,0x18
  42ca0e:	add    esi,0xffffffff
  42ca11:	mov    eax,esi
  42ca13:	shr    eax,1
  42ca15:	or     eax,esi
  42ca17:	mov    ecx,eax
  42ca19:	shr    ecx,0x2
  42ca1c:	or     ecx,eax
  42ca1e:	mov    eax,ecx
  42ca20:	shr    eax,0x4
  42ca23:	or     eax,ecx
  42ca25:	mov    ecx,eax
  42ca27:	shr    ecx,0x8
  42ca2a:	or     ecx,eax
  42ca2c:	mov    r12d,ecx
  42ca2f:	shr    r12d,0x10
  42ca33:	or     r12d,ecx
  42ca36:	add    r12d,0x1
  42ca3a:	cmp    r12d,0x4
  42ca3e:	mov    eax,0x4
  42ca43:	cmovbe r12d,eax
  42ca47:	vcvtsi2sd xmm0,xmm0,r12
  42ca4c:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1af44]        # 447998 <strcmp@plt+0x44210>
  42ca54:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x1af44]        # 4479a0 <strcmp@plt+0x44218>
  42ca5c:	vcvttsd2si rcx,xmm0
  42ca61:	cmp    DWORD PTR [rdi+0x4],ecx
  42ca64:	jae    42cc96 <strcmp@plt+0x2950e>
  42ca6a:	mov    rbp,rdi
  42ca6d:	mov    QWORD PTR [rsp+0x10],rcx
  42ca72:	mov    r15d,r12d
  42ca75:	shr    r15d,0x2
  42ca79:	and    r15d,0xfffffffc
  42ca7d:	cmp    r12d,0x10
  42ca81:	cmovb  r15d,eax
  42ca85:	mov    rdi,r15
  42ca88:	call   403510 <malloc@plt>
  42ca8d:	mov    r14,rax
  42ca90:	mov    esi,0xaa
  42ca95:	mov    rdi,rax
  42ca98:	mov    rdx,r15
  42ca9b:	call   403260 <memset@plt>
  42caa0:	mov    ebx,DWORD PTR [rbp+0x0]
  42caa3:	cmp    ebx,r12d
  42caa6:	jae    42cad2 <strcmp@plt+0x2934a>
  42caa8:	mov    rdi,QWORD PTR [rbp+0x18]
  42caac:	mov    r15d,r12d
  42caaf:	shl    r15,0x3
  42cab3:	mov    rsi,r15
  42cab6:	call   403650 <realloc@plt>
  42cabb:	mov    QWORD PTR [rbp+0x18],rax
  42cabf:	mov    rdi,QWORD PTR [rbp+0x20]
  42cac3:	mov    rsi,r15
  42cac6:	call   403650 <realloc@plt>
  42cacb:	mov    QWORD PTR [rbp+0x20],rax
  42cacf:	mov    ebx,DWORD PTR [rbp+0x0]
  42cad2:	test   ebx,ebx
  42cad4:	je     42cc77 <strcmp@plt+0x294ef>
  42cada:	mov    QWORD PTR [rsp+0x8],r12
  42cadf:	lea    eax,[r12-0x1]
  42cae4:	xor    r10d,r10d
  42cae7:	mov    r9d,0x2
  42caed:	mov    QWORD PTR [rsp],rbp
  42caf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cafb:	nop    DWORD PTR [rax+rax*1+0x0]
  42cb00:	mov    r15,QWORD PTR [rbp+0x10]
  42cb04:	mov    esi,r10d
  42cb07:	shr    esi,0x4
  42cb0a:	mov    edx,DWORD PTR [r15+rsi*4]
  42cb0e:	lea    r12d,[r10+r10*1]
  42cb12:	and    r12d,0x1e
  42cb16:	mov    ecx,0x3
  42cb1b:	shlx   ecx,ecx,r12d
  42cb20:	test   edx,ecx
  42cb22:	jne    42cc35 <strcmp@plt+0x294ad>
  42cb28:	lea    rdi,[r15+rsi*4]
  42cb2c:	mov    ecx,r10d
  42cb2f:	mov    rbp,QWORD PTR [rsp]
  42cb33:	mov    rsi,QWORD PTR [rbp+0x18]
  42cb37:	mov    r11,QWORD PTR [rbp+0x20]
  42cb3b:	mov    r8,QWORD PTR [rsi+rcx*8]
  42cb3f:	mov    r11,QWORD PTR [r11+rcx*8]
  42cb43:	mov    ecx,r12d
  42cb46:	jmp    42cb7c <strcmp@plt+0x293f4>
  42cb48:	nop    DWORD PTR [rax+rax*1+0x0]
  42cb50:	mov    rdi,QWORD PTR [rbp+0x18]
  42cb54:	mov    edx,edx
  42cb56:	mov    r12,QWORD PTR [rdi+rdx*8]
  42cb5a:	mov    QWORD PTR [rdi+rdx*8],r8
  42cb5e:	mov    rdi,QWORD PTR [rbp+0x20]
  42cb62:	mov    rbx,QWORD PTR [rdi+rdx*8]
  42cb66:	mov    QWORD PTR [rdi+rdx*8],r11
  42cb6a:	mov    r15,QWORD PTR [rbp+0x10]
  42cb6e:	lea    rdi,[r15+rsi*4]
  42cb72:	mov    edx,DWORD PTR [r15+rsi*4]
  42cb76:	mov    r11,rbx
  42cb79:	mov    r8,r12
  42cb7c:	mov    esi,0x1
  42cb81:	shlx   rcx,rsi,rcx
  42cb86:	or     ecx,edx
  42cb88:	mov    DWORD PTR [rdi],ecx
  42cb8a:	mov    rcx,r8
  42cb8d:	shr    rcx,0x21
  42cb91:	xor    ecx,r8d
  42cb94:	mov    ebp,r8d
  42cb97:	shl    ebp,0xb
  42cb9a:	xor    ebp,ecx
  42cb9c:	mov    edx,eax
  42cb9e:	and    edx,ebp
  42cba0:	mov    esi,edx
  42cba2:	shr    esi,0x4
  42cba5:	mov    r12d,DWORD PTR [r14+rsi*4]
  42cba9:	lea    r13d,[rdx+rdx*1]
  42cbad:	and    r13d,0x1e
  42cbb1:	shlx   ecx,r9d,r13d
  42cbb6:	test   ecx,r12d
  42cbb9:	jne    42cbf1 <strcmp@plt+0x29469>
  42cbbb:	mov    ecx,ebp
  42cbbd:	shr    ecx,0x3
  42cbc0:	shl    ebp,0x3
  42cbc3:	xor    ebp,ecx
  42cbc5:	or     ebp,0x1
  42cbc8:	and    ebp,eax
  42cbca:	nop    WORD PTR [rax+rax*1+0x0]
  42cbd0:	add    edx,ebp
  42cbd2:	and    edx,eax
  42cbd4:	mov    ecx,edx
  42cbd6:	shr    ecx,0x4
  42cbd9:	mov    r12d,DWORD PTR [r14+rcx*4]
  42cbdd:	lea    r13d,[rdx+rdx*1]
  42cbe1:	and    r13d,0x1e
  42cbe5:	shlx   esi,r9d,r13d
  42cbea:	test   esi,r12d
  42cbed:	je     42cbd0 <strcmp@plt+0x29448>
  42cbef:	mov    esi,ecx
  42cbf1:	lea    rcx,[r14+rsi*4]
  42cbf5:	shlx   ebp,r9d,r13d
  42cbfa:	andn   ebp,ebp,r12d
  42cbff:	mov    DWORD PTR [rcx],ebp
  42cc01:	mov    rbp,QWORD PTR [rsp]
  42cc05:	mov    ebx,DWORD PTR [rbp+0x0]
  42cc08:	cmp    edx,ebx
  42cc0a:	jae    42cc23 <strcmp@plt+0x2949b>
  42cc0c:	mov    ecx,r13d
  42cc0f:	mov    edi,0x3
  42cc14:	shlx   edi,edi,ecx
  42cc19:	test   DWORD PTR [r15+rsi*4],edi
  42cc1d:	je     42cb50 <strcmp@plt+0x293c8>
  42cc23:	mov    rcx,QWORD PTR [rbp+0x18]
  42cc27:	mov    edx,edx
  42cc29:	mov    QWORD PTR [rcx+rdx*8],r8
  42cc2d:	mov    rcx,QWORD PTR [rbp+0x20]
  42cc31:	mov    QWORD PTR [rcx+rdx*8],r11
  42cc35:	add    r10d,0x1
  42cc39:	cmp    r10d,ebx
  42cc3c:	mov    rbp,QWORD PTR [rsp]
  42cc40:	jne    42cb00 <strcmp@plt+0x29378>
  42cc46:	mov    r12,QWORD PTR [rsp+0x8]
  42cc4b:	cmp    ebx,r12d
  42cc4e:	jbe    42cc77 <strcmp@plt+0x294ef>
  42cc50:	mov    rdi,QWORD PTR [rbp+0x18]
  42cc54:	mov    r15d,r12d
  42cc57:	shl    r15,0x3
  42cc5b:	mov    rsi,r15
  42cc5e:	call   403650 <realloc@plt>
  42cc63:	mov    QWORD PTR [rbp+0x18],rax
  42cc67:	mov    rdi,QWORD PTR [rbp+0x20]
  42cc6b:	mov    rsi,r15
  42cc6e:	call   403650 <realloc@plt>
  42cc73:	mov    QWORD PTR [rbp+0x20],rax
  42cc77:	mov    rdi,QWORD PTR [rbp+0x10]
  42cc7b:	call   403780 <free@plt>
  42cc80:	mov    QWORD PTR [rbp+0x10],r14
  42cc84:	mov    DWORD PTR [rbp+0x0],r12d
  42cc88:	mov    eax,DWORD PTR [rbp+0x4]
  42cc8b:	mov    DWORD PTR [rbp+0x8],eax
  42cc8e:	mov    rax,QWORD PTR [rsp+0x10]
  42cc93:	mov    DWORD PTR [rbp+0xc],eax
  42cc96:	add    rsp,0x18
  42cc9a:	pop    rbx
  42cc9b:	pop    r12
  42cc9d:	pop    r13
  42cc9f:	pop    r14
  42cca1:	pop    r15
  42cca3:	pop    rbp
  42cca4:	ret    
  42cca5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ccaf:	nop
  42ccb0:	push   r14
  42ccb2:	push   rbx
  42ccb3:	push   rax
  42ccb4:	mov    r14,rdi
  42ccb7:	mov    edi,0x38
  42ccbc:	call   432070 <strcmp@plt+0x2e8e8>
  42ccc1:	mov    rbx,rax
  42ccc4:	mov    rdi,r14
  42ccc7:	call   432180 <strcmp@plt+0x2e9f8>
  42cccc:	mov    QWORD PTR [rbx],rax
  42cccf:	call   42bbd0 <strcmp@plt+0x28448>
  42ccd4:	mov    QWORD PTR [rbx+0x8],rax
  42ccd8:	call   42bbd0 <strcmp@plt+0x28448>
  42ccdd:	mov    QWORD PTR [rbx+0x10],rax
  42cce1:	call   42bbd0 <strcmp@plt+0x28448>
  42cce6:	mov    QWORD PTR [rbx+0x18],rax
  42ccea:	mov    BYTE PTR [rbx+0x20],0x1
  42ccee:	vxorps xmm0,xmm0,xmm0
  42ccf2:	vmovups XMMWORD PTR [rbx+0x28],xmm0
  42ccf7:	mov    rax,rbx
  42ccfa:	add    rsp,0x8
  42ccfe:	pop    rbx
  42ccff:	pop    r14
  42cd01:	ret    
  42cd02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cd0c:	nop    DWORD PTR [rax+0x0]
  42cd10:	push   rbx
  42cd11:	mov    rbx,rdi
  42cd14:	mov    rdi,QWORD PTR [rdi]
  42cd17:	call   403780 <free@plt>
  42cd1c:	mov    rdi,QWORD PTR [rbx+0x8]
  42cd20:	call   42c250 <strcmp@plt+0x28ac8>
  42cd25:	mov    rdi,QWORD PTR [rbx+0x10]
  42cd29:	call   42c250 <strcmp@plt+0x28ac8>
  42cd2e:	mov    rdi,QWORD PTR [rbx+0x18]
  42cd32:	call   42c250 <strcmp@plt+0x28ac8>
  42cd37:	mov    rdi,QWORD PTR [rbx+0x28]
  42cd3b:	test   rdi,rdi
  42cd3e:	je     42cd45 <strcmp@plt+0x295bd>
  42cd40:	call   422fa0 <strcmp@plt+0x1f818>
  42cd45:	mov    rdi,QWORD PTR [rbx+0x30]
  42cd49:	test   rdi,rdi
  42cd4c:	je     42cd53 <strcmp@plt+0x295cb>
  42cd4e:	call   422fa0 <strcmp@plt+0x1f818>
  42cd53:	mov    rdi,rbx
  42cd56:	pop    rbx
  42cd57:	jmp    403780 <free@plt>
  42cd5c:	nop    DWORD PTR [rax+0x0]
  42cd60:	push   rbp
  42cd61:	push   r15
  42cd63:	push   r14
  42cd65:	push   r13
  42cd67:	push   r12
  42cd69:	push   rbx
  42cd6a:	push   rax
  42cd6b:	mov    r14,rsi
  42cd6e:	mov    r12,rdi
  42cd71:	mov    rdi,rsi
  42cd74:	call   431ad0 <strcmp@plt+0x2e348>
  42cd79:	mov    QWORD PTR [rsp],rax
  42cd7d:	mov    rax,QWORD PTR [rax+0x28]
  42cd81:	mov    r13,QWORD PTR [rax+0x8]
  42cd85:	cmp    r13,rax
  42cd88:	jne    42cd99 <strcmp@plt+0x29611>
  42cd8a:	jmp    42cdf3 <strcmp@plt+0x2966b>
  42cd8c:	nop    DWORD PTR [rax+0x0]
  42cd90:	mov    r13,QWORD PTR [r13+0x8]
  42cd94:	cmp    r13,rax
  42cd97:	je     42cdf3 <strcmp@plt+0x2966b>
  42cd99:	mov    rbp,QWORD PTR [r13+0x10]
  42cd9d:	cmp    DWORD PTR [rbp+0x18],0x0
  42cda1:	je     42cd90 <strcmp@plt+0x29608>
  42cda3:	mov    r15,QWORD PTR [rbp+0x8]
  42cda7:	cmp    r15,rbp
  42cdaa:	je     42cd90 <strcmp@plt+0x29608>
  42cdac:	nop    DWORD PTR [rax+0x0]
  42cdb0:	mov    rsi,QWORD PTR [r15+0x10]
  42cdb4:	mov    rdi,r12
  42cdb7:	call   42ce10 <strcmp@plt+0x29688>
  42cdbc:	test   rax,rax
  42cdbf:	je     42cde0 <strcmp@plt+0x29658>
  42cdc1:	mov    rbx,rax
  42cdc4:	mov    rsi,QWORD PTR [rax+0x8]
  42cdc8:	mov    rdi,r14
  42cdcb:	call   42be80 <strcmp@plt+0x286f8>
  42cdd0:	test   al,al
  42cdd2:	jne    42cde0 <strcmp@plt+0x29658>
  42cdd4:	mov    rsi,QWORD PTR [rbx+0x8]
  42cdd8:	mov    rdi,r14
  42cddb:	call   42bcf0 <strcmp@plt+0x28568>
  42cde0:	mov    r15,QWORD PTR [r15+0x8]
  42cde4:	cmp    r15,rbp
  42cde7:	jne    42cdb0 <strcmp@plt+0x29628>
  42cde9:	mov    rax,QWORD PTR [rsp]
  42cded:	mov    rax,QWORD PTR [rax+0x28]
  42cdf1:	jmp    42cd90 <strcmp@plt+0x29608>
  42cdf3:	add    rsp,0x8
  42cdf7:	pop    rbx
  42cdf8:	pop    r12
  42cdfa:	pop    r13
  42cdfc:	pop    r14
  42cdfe:	pop    r15
  42ce00:	pop    rbp
  42ce01:	ret    
  42ce02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ce0c:	nop    DWORD PTR [rax+0x0]
  42ce10:	push   r15
  42ce12:	push   r14
  42ce14:	push   rbx
  42ce15:	mov    r14,rdi
  42ce18:	mov    r15,QWORD PTR [rsi]
  42ce1b:	cmp    DWORD PTR [r15+0x18],0x0
  42ce20:	je     42ce53 <strcmp@plt+0x296cb>
  42ce22:	mov    rdi,r15
  42ce25:	call   4232e0 <strcmp@plt+0x1fb58>
  42ce2a:	test   rax,rax
  42ce2d:	je     42ce6c <strcmp@plt+0x296e4>
  42ce2f:	mov    rdi,rax
  42ce32:	call   43b2b0 <strcmp@plt+0x37b28>
  42ce37:	test   rax,rax
  42ce3a:	je     42cef9 <strcmp@plt+0x29771>
  42ce40:	mov    rdi,r14
  42ce43:	mov    rsi,rax
  42ce46:	call   436750 <strcmp@plt+0x32fc8>
  42ce4b:	mov    r14,rax
  42ce4e:	jmp    42cf2a <strcmp@plt+0x297a2>
  42ce53:	mov    rbx,rsi
  42ce56:	mov    rdi,r14
  42ce59:	call   4369b0 <strcmp@plt+0x33228>
  42ce5e:	mov    rcx,QWORD PTR [rax+0x8]
  42ce62:	cmp    rcx,rax
  42ce65:	jne    42ce90 <strcmp@plt+0x29708>
  42ce67:	jmp    42cf1f <strcmp@plt+0x29797>
  42ce6c:	mov    rdi,r15
  42ce6f:	call   423130 <strcmp@plt+0x1f9a8>
  42ce74:	mov    rcx,rax
  42ce77:	lea    rsi,[rip+0x1e5ad]        # 44b42b <strcmp@plt+0x47ca3>
  42ce7e:	jmp    42cf0b <strcmp@plt+0x29783>
  42ce83:	mov    rcx,QWORD PTR [rcx+0x8]
  42ce87:	cmp    rcx,rax
  42ce8a:	je     42cf1f <strcmp@plt+0x29797>
  42ce90:	mov    r14,QWORD PTR [rcx+0x10]
  42ce94:	mov    rsi,QWORD PTR [r14+0x10]
  42ce98:	mov    rdx,QWORD PTR [r14+0x18]
  42ce9c:	mov    rdi,QWORD PTR [rsi+0x8]
  42cea0:	cmp    rdi,rsi
  42cea3:	jne    42ceb9 <strcmp@plt+0x29731>
  42cea5:	jmp    42ced0 <strcmp@plt+0x29748>
  42cea7:	nop    WORD PTR [rax+rax*1+0x0]
  42ceb0:	mov    rdi,QWORD PTR [rdi+0x8]
  42ceb4:	cmp    rdi,rsi
  42ceb7:	je     42ced0 <strcmp@plt+0x29748>
  42ceb9:	cmp    QWORD PTR [rdi+0x10],rbx
  42cebd:	jne    42ceb0 <strcmp@plt+0x29728>
  42cebf:	jmp    42ceef <strcmp@plt+0x29767>
  42cec1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cecb:	nop    DWORD PTR [rax+rax*1+0x0]
  42ced0:	mov    rsi,QWORD PTR [rdx+0x8]
  42ced4:	cmp    rsi,rdx
  42ced7:	jne    42cee9 <strcmp@plt+0x29761>
  42ced9:	jmp    42ce83 <strcmp@plt+0x296fb>
  42cedb:	nop    DWORD PTR [rax+rax*1+0x0]
  42cee0:	mov    rsi,QWORD PTR [rsi+0x8]
  42cee4:	cmp    rsi,rdx
  42cee7:	je     42ce83 <strcmp@plt+0x296fb>
  42cee9:	cmp    QWORD PTR [rsi+0x10],rbx
  42ceed:	jne    42cee0 <strcmp@plt+0x29758>
  42ceef:	mov    rdi,rax
  42cef2:	call   42c250 <strcmp@plt+0x28ac8>
  42cef7:	jmp    42cf2a <strcmp@plt+0x297a2>
  42cef9:	mov    rdi,r15
  42cefc:	call   423130 <strcmp@plt+0x1f9a8>
  42cf01:	mov    rcx,rax
  42cf04:	lea    rsi,[rip+0x1e56b]        # 44b476 <strcmp@plt+0x47cee>
  42cf0b:	xor    r14d,r14d
  42cf0e:	mov    edi,0x2
  42cf13:	xor    eax,eax
  42cf15:	mov    rdx,rcx
  42cf18:	call   42e800 <strcmp@plt+0x2b078>
  42cf1d:	jmp    42cf2a <strcmp@plt+0x297a2>
  42cf1f:	mov    rdi,rax
  42cf22:	call   42c250 <strcmp@plt+0x28ac8>
  42cf27:	xor    r14d,r14d
  42cf2a:	mov    rax,r14
  42cf2d:	pop    rbx
  42cf2e:	pop    r14
  42cf30:	pop    r15
  42cf32:	ret    
  42cf33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cf3d:	nop    DWORD PTR [rax]
  42cf40:	push   rbp
  42cf41:	push   r15
  42cf43:	push   r14
  42cf45:	push   r13
  42cf47:	push   r12
  42cf49:	push   rbx
  42cf4a:	push   rax
  42cf4b:	mov    r14,rsi
  42cf4e:	mov    r13,rdi
  42cf51:	mov    rdi,rsi
  42cf54:	call   431ad0 <strcmp@plt+0x2e348>
  42cf59:	mov    r15,rax
  42cf5c:	mov    rax,QWORD PTR [rax+0x28]
  42cf60:	mov    r12,QWORD PTR [rax+0x8]
  42cf64:	cmp    r12,rax
  42cf67:	jne    42cf7a <strcmp@plt+0x297f2>
  42cf69:	jmp    42cfab <strcmp@plt+0x29823>
  42cf6b:	nop    DWORD PTR [rax+rax*1+0x0]
  42cf70:	mov    r12,QWORD PTR [r12+0x8]
  42cf75:	cmp    r12,rax
  42cf78:	je     42cfab <strcmp@plt+0x29823>
  42cf7a:	mov    rbx,QWORD PTR [r12+0x10]
  42cf7f:	cmp    DWORD PTR [rbx+0x18],0x0
  42cf83:	je     42cf70 <strcmp@plt+0x297e8>
  42cf85:	mov    rbp,QWORD PTR [rbx+0x8]
  42cf89:	cmp    rbp,rbx
  42cf8c:	je     42cf70 <strcmp@plt+0x297e8>
  42cf8e:	xchg   ax,ax
  42cf90:	mov    rsi,QWORD PTR [rbp+0x10]
  42cf94:	mov    rdi,r13
  42cf97:	call   42cff0 <strcmp@plt+0x29868>
  42cf9c:	mov    rbp,QWORD PTR [rbp+0x8]
  42cfa0:	cmp    rbp,rbx
  42cfa3:	jne    42cf90 <strcmp@plt+0x29808>
  42cfa5:	mov    rax,QWORD PTR [r15+0x28]
  42cfa9:	jmp    42cf70 <strcmp@plt+0x297e8>
  42cfab:	mov    rdi,r13
  42cfae:	call   4369b0 <strcmp@plt+0x33228>
  42cfb3:	mov    rbp,QWORD PTR [rax+0x8]
  42cfb7:	cmp    rbp,rax
  42cfba:	je     42cfd9 <strcmp@plt+0x29851>
  42cfbc:	mov    rbx,rax
  42cfbf:	nop
  42cfc0:	mov    rax,QWORD PTR [rbp+0x10]
  42cfc4:	mov    rsi,QWORD PTR [rax+0x8]
  42cfc8:	mov    rdi,r14
  42cfcb:	call   42c0c0 <strcmp@plt+0x28938>
  42cfd0:	mov    rbp,QWORD PTR [rbp+0x8]
  42cfd4:	cmp    rbp,rbx
  42cfd7:	jne    42cfc0 <strcmp@plt+0x29838>
  42cfd9:	add    rsp,0x8
  42cfdd:	pop    rbx
  42cfde:	pop    r12
  42cfe0:	pop    r13
  42cfe2:	pop    r14
  42cfe4:	pop    r15
  42cfe6:	pop    rbp
  42cfe7:	ret    
  42cfe8:	nop    DWORD PTR [rax+rax*1+0x0]
  42cff0:	push   r15
  42cff2:	push   r14
  42cff4:	push   rbx
  42cff5:	mov    rbx,rsi
  42cff8:	mov    r15,QWORD PTR [rsi]
  42cffb:	call   42ce10 <strcmp@plt+0x29688>
  42d000:	test   rax,rax
  42d003:	je     42d0d0 <strcmp@plt+0x29948>
  42d009:	mov    r14,rax
  42d00c:	cmp    DWORD PTR [r15+0x18],0x0
  42d011:	je     42d03e <strcmp@plt+0x298b6>
  42d013:	mov    rdi,r15
  42d016:	call   4232e0 <strcmp@plt+0x1fb58>
  42d01b:	test   rax,rax
  42d01e:	je     42d075 <strcmp@plt+0x298ed>
  42d020:	mov    rdi,rax
  42d023:	call   423200 <strcmp@plt+0x1fa78>
  42d028:	movzx  eax,ax
  42d02b:	cmp    eax,0xa
  42d02e:	je     42d0bf <strcmp@plt+0x29937>
  42d034:	cmp    eax,0x2
  42d037:	je     42d06f <strcmp@plt+0x298e7>
  42d039:	jmp    42d0d0 <strcmp@plt+0x29948>
  42d03e:	mov    rcx,QWORD PTR [r14+0x10]
  42d042:	mov    rax,QWORD PTR [r14+0x18]
  42d046:	mov    rdx,QWORD PTR [rcx+0x8]
  42d04a:	cmp    rdx,rcx
  42d04d:	jne    42d069 <strcmp@plt+0x298e1>
  42d04f:	jmp    42d09b <strcmp@plt+0x29913>
  42d051:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d05b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d060:	mov    rdx,QWORD PTR [rdx+0x8]
  42d064:	cmp    rdx,rcx
  42d067:	je     42d09b <strcmp@plt+0x29913>
  42d069:	cmp    QWORD PTR [rdx+0x10],rbx
  42d06d:	jne    42d060 <strcmp@plt+0x298d8>
  42d06f:	mov    rsi,QWORD PTR [r14+0x10]
  42d073:	jmp    42d0c3 <strcmp@plt+0x2993b>
  42d075:	mov    rdi,r15
  42d078:	call   423130 <strcmp@plt+0x1f9a8>
  42d07d:	mov    rcx,rax
  42d080:	lea    rsi,[rip+0x1e362]        # 44b3e9 <strcmp@plt+0x47c61>
  42d087:	mov    edi,0x2
  42d08c:	xor    eax,eax
  42d08e:	mov    rdx,rcx
  42d091:	pop    rbx
  42d092:	pop    r14
  42d094:	pop    r15
  42d096:	jmp    42e800 <strcmp@plt+0x2b078>
  42d09b:	mov    rcx,QWORD PTR [rax+0x8]
  42d09f:	cmp    rcx,rax
  42d0a2:	jne    42d0b9 <strcmp@plt+0x29931>
  42d0a4:	jmp    42d0d0 <strcmp@plt+0x29948>
  42d0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d0b0:	mov    rcx,QWORD PTR [rcx+0x8]
  42d0b4:	cmp    rcx,rax
  42d0b7:	je     42d0d0 <strcmp@plt+0x29948>
  42d0b9:	cmp    QWORD PTR [rcx+0x10],rbx
  42d0bd:	jne    42d0b0 <strcmp@plt+0x29928>
  42d0bf:	mov    rsi,QWORD PTR [r14+0x18]
  42d0c3:	mov    rdi,rbx
  42d0c6:	pop    rbx
  42d0c7:	pop    r14
  42d0c9:	pop    r15
  42d0cb:	jmp    42c0c0 <strcmp@plt+0x28938>
  42d0d0:	pop    rbx
  42d0d1:	pop    r14
  42d0d3:	pop    r15
  42d0d5:	ret    
  42d0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d0e0:	push   rbx
  42d0e1:	mov    edi,0x1
  42d0e6:	mov    esi,0x10
  42d0eb:	call   432020 <strcmp@plt+0x2e898>
  42d0f0:	mov    rbx,rax
  42d0f3:	mov    edi,0x1
  42d0f8:	mov    esi,0x28
  42d0fd:	call   4032d0 <calloc@plt>
  42d102:	mov    QWORD PTR [rbx],rax
  42d105:	mov    rax,rbx
  42d108:	pop    rbx
  42d109:	ret    
  42d10a:	nop    WORD PTR [rax+rax*1+0x0]
  42d110:	push   r14
  42d112:	push   rbx
  42d113:	push   rax
  42d114:	mov    r14,rdi
  42d117:	mov    edi,0x1
  42d11c:	mov    esi,0x10
  42d121:	call   432020 <strcmp@plt+0x2e898>
  42d126:	mov    rbx,rax
  42d129:	mov    edi,0x1
  42d12e:	mov    esi,0x28
  42d133:	call   4032d0 <calloc@plt>
  42d138:	mov    QWORD PTR [rbx],rax
  42d13b:	mov    QWORD PTR [rbx+0x8],r14
  42d13f:	mov    rax,rbx
  42d142:	add    rsp,0x8
  42d146:	pop    rbx
  42d147:	pop    r14
  42d149:	ret    
  42d14a:	nop    WORD PTR [rax+rax*1+0x0]
  42d150:	push   rbp
  42d151:	push   r15
  42d153:	push   r14
  42d155:	push   r13
  42d157:	push   r12
  42d159:	push   rbx
  42d15a:	push   rax
  42d15b:	mov    r14,rdx
  42d15e:	mov    r12d,esi
  42d161:	mov    r15,rdi
  42d164:	mov    r13,QWORD PTR [rdi]
  42d167:	mov    eax,DWORD PTR [r13+0x8]
  42d16b:	cmp    eax,DWORD PTR [r13+0xc]
  42d16f:	jb     42d18f <strcmp@plt+0x29a07>
  42d171:	mov    esi,DWORD PTR [r13+0x0]
  42d175:	mov    eax,DWORD PTR [r13+0x4]
  42d179:	add    eax,eax
  42d17b:	cmp    esi,eax
  42d17d:	jbe    42d184 <strcmp@plt+0x299fc>
  42d17f:	add    esi,0xffffffff
  42d182:	jmp    42d187 <strcmp@plt+0x299ff>
  42d184:	add    esi,0x1
  42d187:	mov    rdi,r13
  42d18a:	call   42d5b0 <strcmp@plt+0x29e28>
  42d18f:	mov    r8d,DWORD PTR [r13+0x0]
  42d193:	lea    r10d,[r8-0x1]
  42d197:	mov    esi,r10d
  42d19a:	and    esi,r12d
  42d19d:	mov    r9,QWORD PTR [r13+0x10]
  42d1a1:	mov    eax,esi
  42d1a3:	shr    eax,0x4
  42d1a6:	mov    ecx,esi
  42d1a8:	add    cl,cl
  42d1aa:	and    cl,0x1e
  42d1ad:	mov    edx,0x2
  42d1b2:	shlx   ecx,edx,ecx
  42d1b7:	test   DWORD PTR [r9+rax*4],ecx
  42d1bb:	je     42d1c4 <strcmp@plt+0x29a3c>
  42d1bd:	mov    edx,esi
  42d1bf:	jmp    42d254 <strcmp@plt+0x29acc>
  42d1c4:	mov    eax,r12d
  42d1c7:	shr    eax,0x3
  42d1ca:	lea    r11d,[r12*8+0x0]
  42d1d2:	xor    r11d,eax
  42d1d5:	or     r11d,0x1
  42d1d9:	and    r11d,r10d
  42d1dc:	mov    edx,r8d
  42d1df:	mov    ecx,esi
  42d1e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d1eb:	nop    DWORD PTR [rax+rax*1+0x0]
  42d1f0:	mov    eax,ecx
  42d1f2:	shr    eax,0x4
  42d1f5:	mov    ebx,DWORD PTR [r9+rax*4]
  42d1f9:	lea    edi,[rcx+rcx*1]
  42d1fc:	and    edi,0x1e
  42d1ff:	shrx   eax,ebx,edi
  42d204:	test   al,0x2
  42d206:	jne    42d234 <strcmp@plt+0x29aac>
  42d208:	test   al,0x1
  42d20a:	jne    42d218 <strcmp@plt+0x29a90>
  42d20c:	mov    rax,QWORD PTR [r13+0x18]
  42d210:	mov    ebp,ecx
  42d212:	cmp    DWORD PTR [rax+rbp*4],r12d
  42d216:	je     42d234 <strcmp@plt+0x29aac>
  42d218:	bt     ebx,edi
  42d21b:	cmovb  edx,ecx
  42d21e:	add    ecx,r11d
  42d221:	and    ecx,r10d
  42d224:	cmp    ecx,esi
  42d226:	jne    42d1f0 <strcmp@plt+0x29a68>
  42d228:	mov    al,0x1
  42d22a:	mov    ecx,r8d
  42d22d:	cmp    edx,r8d
  42d230:	je     42d247 <strcmp@plt+0x29abf>
  42d232:	jmp    42d254 <strcmp@plt+0x29acc>
  42d234:	mov    eax,0x2
  42d239:	shlx   eax,eax,edi
  42d23e:	test   ebx,eax
  42d240:	sete   al
  42d243:	mov    esi,ecx
  42d245:	mov    ecx,edx
  42d247:	test   al,al
  42d249:	mov    edx,ecx
  42d24b:	cmovne edx,esi
  42d24e:	cmp    ecx,r8d
  42d251:	cmove  edx,esi
  42d254:	mov    eax,edx
  42d256:	shr    eax,0x4
  42d259:	lea    esi,[rdx+rdx*1]
  42d25c:	and    esi,0x1e
  42d25f:	shrx   ecx,DWORD PTR [r9+rax*4],esi
  42d265:	test   cl,0x2
  42d268:	jne    42d273 <strcmp@plt+0x29aeb>
  42d26a:	test   cl,0x1
  42d26d:	jne    42d299 <strcmp@plt+0x29b11>
  42d26f:	mov    ecx,edx
  42d271:	jmp    42d2b8 <strcmp@plt+0x29b30>
  42d273:	mov    rdi,QWORD PTR [r13+0x18]
  42d277:	mov    ecx,edx
  42d279:	mov    DWORD PTR [rdi+rcx*4],r12d
  42d27d:	mov    edx,0x3
  42d282:	shlx   edx,edx,esi
  42d287:	not    edx
  42d289:	and    DWORD PTR [r9+rax*4],edx
  42d28d:	add    DWORD PTR [r13+0x4],0x1
  42d292:	add    DWORD PTR [r13+0x8],0x1
  42d297:	jmp    42d2b8 <strcmp@plt+0x29b30>
  42d299:	mov    rdi,QWORD PTR [r13+0x18]
  42d29d:	mov    ecx,edx
  42d29f:	mov    DWORD PTR [rdi+rcx*4],r12d
  42d2a3:	mov    edx,0x3
  42d2a8:	shlx   edx,edx,esi
  42d2ad:	not    edx
  42d2af:	and    DWORD PTR [r9+rax*4],edx
  42d2b3:	add    DWORD PTR [r13+0x4],0x1
  42d2b8:	mov    rax,QWORD PTR [r15]
  42d2bb:	mov    rax,QWORD PTR [rax+0x20]
  42d2bf:	mov    QWORD PTR [rax+rcx*8],r14
  42d2c3:	add    rsp,0x8
  42d2c7:	pop    rbx
  42d2c8:	pop    r12
  42d2ca:	pop    r13
  42d2cc:	pop    r14
  42d2ce:	pop    r15
  42d2d0:	pop    rbp
  42d2d1:	ret    
  42d2d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d2dc:	nop    DWORD PTR [rax+0x0]
  42d2e0:	push   rbp
  42d2e1:	push   r15
  42d2e3:	push   r14
  42d2e5:	push   rbx
  42d2e6:	push   rax
  42d2e7:	mov    r9,QWORD PTR [rdi]
  42d2ea:	mov    r8d,DWORD PTR [r9]
  42d2ed:	test   r8d,r8d
  42d2f0:	je     42d3b7 <strcmp@plt+0x29c2f>
  42d2f6:	mov    r14,rdi
  42d2f9:	lea    r10d,[r8-0x1]
  42d2fd:	mov    r11d,r10d
  42d300:	and    r11d,esi
  42d303:	mov    eax,esi
  42d305:	shr    eax,0x3
  42d308:	lea    ecx,[rsi*8+0x0]
  42d30f:	xor    ecx,eax
  42d311:	or     ecx,0x1
  42d314:	and    ecx,r10d
  42d317:	mov    r15,QWORD PTR [r9+0x10]
  42d31b:	mov    ebx,r11d
  42d31e:	xchg   ax,ax
  42d320:	mov    edx,ebx
  42d322:	shr    edx,0x4
  42d325:	mov    edx,DWORD PTR [r15+rdx*4]
  42d329:	lea    edi,[rbx+rbx*1]
  42d32c:	and    edi,0x1e
  42d32f:	shrx   ebp,edx,edi
  42d334:	test   bpl,0x2
  42d338:	jne    42d358 <strcmp@plt+0x29bd0>
  42d33a:	test   bpl,0x1
  42d33e:	jne    42d34c <strcmp@plt+0x29bc4>
  42d340:	mov    rbp,QWORD PTR [r9+0x18]
  42d344:	mov    eax,ebx
  42d346:	cmp    DWORD PTR [rbp+rax*4+0x0],esi
  42d34a:	je     42d358 <strcmp@plt+0x29bd0>
  42d34c:	add    ebx,ecx
  42d34e:	and    ebx,r10d
  42d351:	cmp    ebx,r11d
  42d354:	jne    42d320 <strcmp@plt+0x29b98>
  42d356:	jmp    42d3b7 <strcmp@plt+0x29c2f>
  42d358:	mov    eax,0x3
  42d35d:	shlx   eax,eax,edi
  42d362:	test   eax,edx
  42d364:	cmovne ebx,r8d
  42d368:	cmp    ebx,r8d
  42d36b:	je     42d3b7 <strcmp@plt+0x29c2f>
  42d36d:	mov    rax,QWORD PTR [r14+0x8]
  42d371:	test   rax,rax
  42d374:	je     42d388 <strcmp@plt+0x29c00>
  42d376:	mov    rcx,QWORD PTR [r9+0x20]
  42d37a:	mov    edx,ebx
  42d37c:	mov    rdi,QWORD PTR [rcx+rdx*8]
  42d380:	call   rax
  42d382:	mov    r9,QWORD PTR [r14]
  42d385:	mov    r8d,DWORD PTR [r9]
  42d388:	cmp    r8d,ebx
  42d38b:	je     42d3b7 <strcmp@plt+0x29c2f>
  42d38d:	mov    rax,QWORD PTR [r9+0x10]
  42d391:	mov    ecx,ebx
  42d393:	shr    ecx,0x4
  42d396:	mov    edx,DWORD PTR [rax+rcx*4]
  42d399:	add    ebx,ebx
  42d39b:	and    ebx,0x1e
  42d39e:	mov    esi,0x3
  42d3a3:	shlx   esi,esi,ebx
  42d3a8:	test   edx,esi
  42d3aa:	jne    42d3b7 <strcmp@plt+0x29c2f>
  42d3ac:	bts    edx,ebx
  42d3af:	mov    DWORD PTR [rax+rcx*4],edx
  42d3b2:	add    DWORD PTR [r9+0x4],0xffffffff
  42d3b7:	add    rsp,0x8
  42d3bb:	pop    rbx
  42d3bc:	pop    r14
  42d3be:	pop    r15
  42d3c0:	pop    rbp
  42d3c1:	ret    
  42d3c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d3cc:	nop    DWORD PTR [rax+0x0]
  42d3d0:	push   rbp
  42d3d1:	push   r15
  42d3d3:	push   r14
  42d3d5:	push   rbx
  42d3d6:	mov    r9,QWORD PTR [rdi]
  42d3d9:	mov    r8d,DWORD PTR [r9]
  42d3dc:	test   r8d,r8d
  42d3df:	je     42d45d <strcmp@plt+0x29cd5>
  42d3e1:	lea    r10d,[r8-0x1]
  42d3e5:	mov    r11d,r10d
  42d3e8:	and    r11d,esi
  42d3eb:	mov    eax,esi
  42d3ed:	shr    eax,0x3
  42d3f0:	lea    r15d,[rsi*8+0x0]
  42d3f8:	xor    r15d,eax
  42d3fb:	or     r15d,0x1
  42d3ff:	and    r15d,r10d
  42d402:	mov    r14,QWORD PTR [r9+0x10]
  42d406:	xor    eax,eax
  42d408:	mov    ecx,r11d
  42d40b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d410:	mov    edi,ecx
  42d412:	shr    edi,0x4
  42d415:	mov    ebx,DWORD PTR [r14+rdi*4]
  42d419:	lea    ebp,[rcx+rcx*1]
  42d41c:	and    ebp,0x1e
  42d41f:	shrx   edi,ebx,ebp
  42d424:	test   dil,0x2
  42d428:	jne    42d448 <strcmp@plt+0x29cc0>
  42d42a:	test   dil,0x1
  42d42e:	jne    42d43b <strcmp@plt+0x29cb3>
  42d430:	mov    rdi,QWORD PTR [r9+0x18]
  42d434:	mov    edx,ecx
  42d436:	cmp    DWORD PTR [rdi+rdx*4],esi
  42d439:	je     42d448 <strcmp@plt+0x29cc0>
  42d43b:	add    ecx,r15d
  42d43e:	and    ecx,r10d
  42d441:	cmp    ecx,r11d
  42d444:	jne    42d410 <strcmp@plt+0x29c88>
  42d446:	jmp    42d46b <strcmp@plt+0x29ce3>
  42d448:	mov    eax,0x3
  42d44d:	shlx   eax,eax,ebp
  42d452:	test   eax,ebx
  42d454:	cmovne ecx,r8d
  42d458:	cmp    ecx,r8d
  42d45b:	jne    42d461 <strcmp@plt+0x29cd9>
  42d45d:	xor    eax,eax
  42d45f:	jmp    42d46b <strcmp@plt+0x29ce3>
  42d461:	mov    rax,QWORD PTR [r9+0x20]
  42d465:	mov    ecx,ecx
  42d467:	mov    rax,QWORD PTR [rax+rcx*8]
  42d46b:	pop    rbx
  42d46c:	pop    r14
  42d46e:	pop    r15
  42d470:	pop    rbp
  42d471:	ret    
  42d472:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d47c:	nop    DWORD PTR [rax+0x0]
  42d480:	test   rdi,rdi
  42d483:	je     42d529 <strcmp@plt+0x29da1>
  42d489:	push   rbp
  42d48a:	push   r15
  42d48c:	push   r14
  42d48e:	push   r12
  42d490:	push   rbx
  42d491:	mov    r14,rdi
  42d494:	mov    r12,QWORD PTR [rdi]
  42d497:	cmp    DWORD PTR [r12],0x0
  42d49c:	je     42d4ee <strcmp@plt+0x29d66>
  42d49e:	xor    ebp,ebp
  42d4a0:	mov    r15d,0x3
  42d4a6:	xor    ebx,ebx
  42d4a8:	nop    DWORD PTR [rax+rax*1+0x0]
  42d4b0:	mov    rax,QWORD PTR [r12+0x10]
  42d4b5:	mov    ecx,ebx
  42d4b7:	shr    ecx,0x4
  42d4ba:	mov    edx,ebp
  42d4bc:	and    dl,0x1e
  42d4bf:	shlx   edx,r15d,edx
  42d4c4:	test   DWORD PTR [rax+rcx*4],edx
  42d4c7:	jne    42d4e2 <strcmp@plt+0x29d5a>
  42d4c9:	mov    rax,QWORD PTR [r14+0x8]
  42d4cd:	test   rax,rax
  42d4d0:	je     42d4e2 <strcmp@plt+0x29d5a>
  42d4d2:	mov    rcx,QWORD PTR [r12+0x20]
  42d4d7:	mov    edx,ebx
  42d4d9:	mov    rdi,QWORD PTR [rcx+rdx*8]
  42d4dd:	call   rax
  42d4df:	mov    r12,QWORD PTR [r14]
  42d4e2:	add    ebx,0x1
  42d4e5:	add    ebp,0x2
  42d4e8:	cmp    ebx,DWORD PTR [r12]
  42d4ec:	jne    42d4b0 <strcmp@plt+0x29d28>
  42d4ee:	test   r12,r12
  42d4f1:	je     42d519 <strcmp@plt+0x29d91>
  42d4f3:	mov    rdi,QWORD PTR [r12+0x18]
  42d4f8:	call   403780 <free@plt>
  42d4fd:	mov    rdi,QWORD PTR [r12+0x10]
  42d502:	call   403780 <free@plt>
  42d507:	mov    rdi,QWORD PTR [r12+0x20]
  42d50c:	call   403780 <free@plt>
  42d511:	mov    rdi,r12
  42d514:	call   403780 <free@plt>
  42d519:	mov    rdi,r14
  42d51c:	pop    rbx
  42d51d:	pop    r12
  42d51f:	pop    r14
  42d521:	pop    r15
  42d523:	pop    rbp
  42d524:	jmp    403780 <free@plt>
  42d529:	ret    
  42d52a:	nop    WORD PTR [rax+rax*1+0x0]
  42d530:	push   rbp
  42d531:	push   r15
  42d533:	push   r14
  42d535:	push   r12
  42d537:	push   rbx
  42d538:	mov    r14,rdi
  42d53b:	call   42bbd0 <strcmp@plt+0x28448>
  42d540:	mov    r15,rax
  42d543:	mov    rax,QWORD PTR [r14]
  42d546:	cmp    DWORD PTR [rax],0x0
  42d549:	je     42d598 <strcmp@plt+0x29e10>
  42d54b:	xor    ebp,ebp
  42d54d:	mov    r12d,0x3
  42d553:	xor    ebx,ebx
  42d555:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d55f:	nop
  42d560:	mov    rcx,QWORD PTR [rax+0x10]
  42d564:	mov    edx,ebx
  42d566:	shr    edx,0x4
  42d569:	mov    esi,ebp
  42d56b:	and    sil,0x1e
  42d56f:	shlx   esi,r12d,esi
  42d574:	test   DWORD PTR [rcx+rdx*4],esi
  42d577:	jne    42d58e <strcmp@plt+0x29e06>
  42d579:	mov    rax,QWORD PTR [rax+0x20]
  42d57d:	mov    ecx,ebx
  42d57f:	mov    rdi,QWORD PTR [rax+rcx*8]
  42d583:	mov    rsi,r15
  42d586:	call   42bcf0 <strcmp@plt+0x28568>
  42d58b:	mov    rax,QWORD PTR [r14]
  42d58e:	add    ebx,0x1
  42d591:	add    ebp,0x2
  42d594:	cmp    ebx,DWORD PTR [rax]
  42d596:	jne    42d560 <strcmp@plt+0x29dd8>
  42d598:	mov    rax,r15
  42d59b:	pop    rbx
  42d59c:	pop    r12
  42d59e:	pop    r14
  42d5a0:	pop    r15
  42d5a2:	pop    rbp
  42d5a3:	ret    
  42d5a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d5ae:	xchg   ax,ax
  42d5b0:	push   rbp
  42d5b1:	push   r15
  42d5b3:	push   r14
  42d5b5:	push   r13
  42d5b7:	push   r12
  42d5b9:	push   rbx
  42d5ba:	sub    rsp,0x18
  42d5be:	add    esi,0xffffffff
  42d5c1:	mov    eax,esi
  42d5c3:	shr    eax,1
  42d5c5:	or     eax,esi
  42d5c7:	mov    ecx,eax
  42d5c9:	shr    ecx,0x2
  42d5cc:	or     ecx,eax
  42d5ce:	mov    eax,ecx
  42d5d0:	shr    eax,0x4
  42d5d3:	or     eax,ecx
  42d5d5:	mov    ecx,eax
  42d5d7:	shr    ecx,0x8
  42d5da:	or     ecx,eax
  42d5dc:	mov    ebp,ecx
  42d5de:	shr    ebp,0x10
  42d5e1:	or     ebp,ecx
  42d5e3:	add    ebp,0x1
  42d5e6:	cmp    ebp,0x4
  42d5e9:	mov    eax,0x4
  42d5ee:	cmovbe ebp,eax
  42d5f1:	vcvtsi2sd xmm0,xmm0,rbp
  42d5f6:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1a39a]        # 447998 <strcmp@plt+0x44210>
  42d5fe:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x1a39a]        # 4479a0 <strcmp@plt+0x44218>
  42d606:	vcvttsd2si rcx,xmm0
  42d60b:	cmp    DWORD PTR [rdi+0x4],ecx
  42d60e:	jae    42d81c <strcmp@plt+0x2a094>
  42d614:	mov    r14,rdi
  42d617:	mov    QWORD PTR [rsp+0x8],rcx
  42d61c:	mov    r15d,ebp
  42d61f:	shr    r15d,0x2
  42d623:	and    r15d,0xfffffffc
  42d627:	cmp    ebp,0x10
  42d62a:	cmovb  r15d,eax
  42d62e:	mov    rdi,r15
  42d631:	call   403510 <malloc@plt>
  42d636:	mov    rbx,rax
  42d639:	mov    esi,0xaa
  42d63e:	mov    rdi,rax
  42d641:	mov    rdx,r15
  42d644:	call   403260 <memset@plt>
  42d649:	mov    r8d,DWORD PTR [r14]
  42d64c:	cmp    r8d,ebp
  42d64f:	jae    42d680 <strcmp@plt+0x29ef8>
  42d651:	mov    rdi,QWORD PTR [r14+0x18]
  42d655:	mov    r15d,ebp
  42d658:	lea    rsi,[r15*4+0x0]
  42d660:	call   403650 <realloc@plt>
  42d665:	mov    QWORD PTR [r14+0x18],rax
  42d669:	mov    rdi,QWORD PTR [r14+0x20]
  42d66d:	shl    r15,0x3
  42d671:	mov    rsi,r15
  42d674:	call   403650 <realloc@plt>
  42d679:	mov    QWORD PTR [r14+0x20],rax
  42d67d:	mov    r8d,DWORD PTR [r14]
  42d680:	test   r8d,r8d
  42d683:	je     42d7fb <strcmp@plt+0x2a073>
  42d689:	mov    QWORD PTR [rsp],rbp
  42d68d:	lea    eax,[rbp-0x1]
  42d690:	xor    edi,edi
  42d692:	mov    r10d,0x2
  42d698:	nop    DWORD PTR [rax+rax*1+0x0]
  42d6a0:	mov    r15,QWORD PTR [r14+0x10]
  42d6a4:	mov    ebp,edi
  42d6a6:	shr    ebp,0x4
  42d6a9:	mov    edx,DWORD PTR [r15+rbp*4]
  42d6ad:	lea    esi,[rdi+rdi*1]
  42d6b0:	and    esi,0x1e
  42d6b3:	mov    ecx,0x3
  42d6b8:	shlx   ecx,ecx,esi
  42d6bd:	test   edx,ecx
  42d6bf:	jne    42d7ba <strcmp@plt+0x2a032>
  42d6c5:	lea    rbp,[r15+rbp*4]
  42d6c9:	mov    QWORD PTR [rsp+0x10],rdi
  42d6ce:	mov    ecx,edi
  42d6d0:	mov    r8,QWORD PTR [r14+0x18]
  42d6d4:	mov    r11,QWORD PTR [r14+0x20]
  42d6d8:	mov    r9d,DWORD PTR [r8+rcx*4]
  42d6dc:	mov    r11,QWORD PTR [r11+rcx*8]
  42d6e0:	mov    r12d,esi
  42d6e3:	jmp    42d71f <strcmp@plt+0x29f97>
  42d6e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d6ef:	nop
  42d6f0:	mov    r12d,esi
  42d6f3:	mov    rcx,QWORD PTR [r14+0x18]
  42d6f7:	mov    edx,r8d
  42d6fa:	mov    edi,DWORD PTR [rcx+rdx*4]
  42d6fd:	mov    DWORD PTR [rcx+rdx*4],r9d
  42d701:	mov    rcx,QWORD PTR [r14+0x20]
  42d705:	mov    rsi,QWORD PTR [rcx+rdx*8]
  42d709:	mov    QWORD PTR [rcx+rdx*8],r11
  42d70d:	mov    r15,QWORD PTR [r14+0x10]
  42d711:	lea    rbp,[r15+r13*4]
  42d715:	mov    edx,DWORD PTR [r15+r13*4]
  42d719:	mov    r11,rsi
  42d71c:	mov    r9d,edi
  42d71f:	mov    ecx,0x1
  42d724:	shlx   rcx,rcx,r12
  42d729:	or     ecx,edx
  42d72b:	mov    DWORD PTR [rbp+0x0],ecx
  42d72e:	mov    ecx,r9d
  42d731:	shr    ecx,0x3
  42d734:	lea    ebp,[r9*8+0x0]
  42d73c:	xor    ebp,ecx
  42d73e:	or     ebp,0x1
  42d741:	and    ebp,eax
  42d743:	mov    ecx,r9d
  42d746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d750:	mov    r8d,ecx
  42d753:	and    r8d,eax
  42d756:	mov    edx,r8d
  42d759:	shr    edx,0x4
  42d75c:	mov    r12d,DWORD PTR [rbx+rdx*4]
  42d760:	lea    esi,[r8+r8*1]
  42d764:	and    esi,0x1e
  42d767:	shlx   edi,r10d,esi
  42d76c:	lea    ecx,[r8+rbp*1]
  42d770:	test   edi,r12d
  42d773:	je     42d750 <strcmp@plt+0x29fc8>
  42d775:	mov    r13d,edx
  42d778:	shlx   ecx,r10d,esi
  42d77d:	andn   ecx,ecx,r12d
  42d782:	mov    DWORD PTR [rbx+r13*4],ecx
  42d786:	cmp    r8d,DWORD PTR [r14]
  42d789:	jae    42d79f <strcmp@plt+0x2a017>
  42d78b:	mov    ecx,0x3
  42d790:	shlx   ecx,ecx,esi
  42d795:	test   DWORD PTR [r15+r13*4],ecx
  42d799:	je     42d6f0 <strcmp@plt+0x29f68>
  42d79f:	mov    rcx,QWORD PTR [r14+0x18]
  42d7a3:	mov    edx,r8d
  42d7a6:	mov    DWORD PTR [rcx+rdx*4],r9d
  42d7aa:	mov    rcx,QWORD PTR [r14+0x20]
  42d7ae:	mov    QWORD PTR [rcx+rdx*8],r11
  42d7b2:	mov    r8d,DWORD PTR [r14]
  42d7b5:	mov    rdi,QWORD PTR [rsp+0x10]
  42d7ba:	add    edi,0x1
  42d7bd:	cmp    edi,r8d
  42d7c0:	jne    42d6a0 <strcmp@plt+0x29f18>
  42d7c6:	mov    rbp,QWORD PTR [rsp]
  42d7ca:	cmp    r8d,ebp
  42d7cd:	jbe    42d7fb <strcmp@plt+0x2a073>
  42d7cf:	mov    rdi,QWORD PTR [r14+0x18]
  42d7d3:	mov    r15d,ebp
  42d7d6:	lea    rsi,[r15*4+0x0]
  42d7de:	call   403650 <realloc@plt>
  42d7e3:	mov    QWORD PTR [r14+0x18],rax
  42d7e7:	mov    rdi,QWORD PTR [r14+0x20]
  42d7eb:	shl    r15,0x3
  42d7ef:	mov    rsi,r15
  42d7f2:	call   403650 <realloc@plt>
  42d7f7:	mov    QWORD PTR [r14+0x20],rax
  42d7fb:	mov    rdi,QWORD PTR [r14+0x10]
  42d7ff:	call   403780 <free@plt>
  42d804:	mov    QWORD PTR [r14+0x10],rbx
  42d808:	mov    DWORD PTR [r14],ebp
  42d80b:	mov    eax,DWORD PTR [r14+0x4]
  42d80f:	mov    DWORD PTR [r14+0x8],eax
  42d813:	mov    rax,QWORD PTR [rsp+0x8]
  42d818:	mov    DWORD PTR [r14+0xc],eax
  42d81c:	add    rsp,0x18
  42d820:	pop    rbx
  42d821:	pop    r12
  42d823:	pop    r13
  42d825:	pop    r14
  42d827:	pop    r15
  42d829:	pop    rbp
  42d82a:	ret    
  42d82b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d830:	push   rbp
  42d831:	mov    rbp,rsp
  42d834:	push   r15
  42d836:	push   r14
  42d838:	push   r13
  42d83a:	push   r12
  42d83c:	push   rbx
  42d83d:	and    rsp,0xffffffffffffffe0
  42d841:	sub    rsp,0x60
  42d845:	mov    r14,rsi
  42d848:	test   edi,edi
  42d84a:	je     42d85f <strcmp@plt+0x2a0d7>
  42d84c:	cmp    edi,0x1
  42d84f:	jne    42d9ac <strcmp@plt+0x2a224>
  42d855:	mov    DWORD PTR [rsp+0x1c],edx
  42d859:	mov    bx,0x1002
  42d85d:	jmp    42d867 <strcmp@plt+0x2a0df>
  42d85f:	mov    DWORD PTR [rsp+0x1c],edx
  42d863:	mov    bx,0x1003
  42d867:	lea    rdi,[rip+0x1dc58]        # 44b4c6 <strcmp@plt+0x47d3e>
  42d86e:	xor    r15d,r15d
  42d871:	mov    esi,0x2
  42d876:	xor    eax,eax
  42d878:	call   4032f0 <open@plt>
  42d87d:	test   eax,eax
  42d87f:	js     42d9b8 <strcmp@plt+0x2a230>
  42d885:	mov    r12d,eax
  42d888:	vxorps xmm0,xmm0,xmm0
  42d88c:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  42d892:	mov    QWORD PTR [rsp+0x40],0x0
  42d89b:	mov    WORD PTR [rsp+0x30],bx
  42d8a0:	lea    r13,[rsp+0x20]
  42d8a5:	mov    edx,0xf
  42d8aa:	mov    rdi,r13
  42d8ad:	mov    rsi,r14
  42d8b0:	vzeroupper 
  42d8b3:	call   403250 <strncpy@plt>
  42d8b8:	xor    r15d,r15d
  42d8bb:	mov    esi,0x400454ca
  42d8c0:	xor    eax,eax
  42d8c2:	mov    edi,r12d
  42d8c5:	mov    rdx,r13
  42d8c8:	call   403580 <ioctl@plt>
  42d8cd:	test   eax,eax
  42d8cf:	js     42d9dd <strcmp@plt+0x2a255>
  42d8d5:	xor    r15d,r15d
  42d8d8:	mov    edi,0x2
  42d8dd:	mov    esi,0x2
  42d8e2:	xor    edx,edx
  42d8e4:	call   4030f0 <socket@plt>
  42d8e9:	mov    r13d,eax
  42d8ec:	lea    rdx,[rsp+0x20]
  42d8f1:	mov    esi,0x8933
  42d8f6:	xor    eax,eax
  42d8f8:	mov    edi,r13d
  42d8fb:	call   403580 <ioctl@plt>
  42d900:	test   eax,eax
  42d902:	js     42da1c <strcmp@plt+0x2a294>
  42d908:	lea    rax,[rip+0x374a1]        # 464db0 <strcmp@plt+0x61628>
  42d90f:	cmp    DWORD PTR [rax],0x3
  42d912:	jl     42d92b <strcmp@plt+0x2a1a3>
  42d914:	mov    edx,DWORD PTR [rsp+0x30]
  42d918:	lea    rsi,[rip+0x1dcad]        # 44b5cc <strcmp@plt+0x47e44>
  42d91f:	mov    edi,0x7
  42d924:	xor    eax,eax
  42d926:	call   42e800 <strcmp@plt+0x2b078>
  42d92b:	mov    ebx,DWORD PTR [rsp+0x1c]
  42d92f:	mov    DWORD PTR [rsp+0x30],ebx
  42d933:	xor    r15d,r15d
  42d936:	lea    rdx,[rsp+0x20]
  42d93b:	mov    esi,0x8922
  42d940:	xor    eax,eax
  42d942:	mov    edi,r13d
  42d945:	call   403580 <ioctl@plt>
  42d94a:	test   eax,eax
  42d94c:	js     42da48 <strcmp@plt+0x2a2c0>
  42d952:	lea    r15,[rip+0x37457]        # 464db0 <strcmp@plt+0x61628>
  42d959:	cmp    DWORD PTR [r15],0x0
  42d95d:	jle    42d974 <strcmp@plt+0x2a1ec>
  42d95f:	lea    rsi,[rip+0x1dcb4]        # 44b61a <strcmp@plt+0x47e92>
  42d966:	mov    edi,0x5
  42d96b:	xor    eax,eax
  42d96d:	mov    edx,ebx
  42d96f:	call   42e800 <strcmp@plt+0x2b078>
  42d974:	mov    edi,r13d
  42d977:	call   403760 <close@plt>
  42d97c:	cmp    DWORD PTR [r15],0x2
  42d980:	jl     42d998 <strcmp@plt+0x2a210>
  42d982:	lea    rsi,[rip+0x1dca7]        # 44b630 <strcmp@plt+0x47ea8>
  42d989:	mov    edi,0x6
  42d98e:	xor    eax,eax
  42d990:	mov    edx,r12d
  42d993:	call   42e800 <strcmp@plt+0x2b078>
  42d998:	mov    rdi,r14
  42d99b:	call   42da80 <strcmp@plt+0x2a2f8>
  42d9a0:	xor    r15d,r15d
  42d9a3:	cmp    eax,0x1
  42d9a6:	cmove  r15d,r12d
  42d9aa:	jmp    42d9cb <strcmp@plt+0x2a243>
  42d9ac:	lea    rsi,[rip+0x1db20]        # 44b4d3 <strcmp@plt+0x47d4b>
  42d9b3:	xor    r15d,r15d
  42d9b6:	jmp    42d9bf <strcmp@plt+0x2a237>
  42d9b8:	lea    rsi,[rip+0x1db3b]        # 44b4fa <strcmp@plt+0x47d72>
  42d9bf:	mov    edi,0x1
  42d9c4:	xor    eax,eax
  42d9c6:	call   42e800 <strcmp@plt+0x2b078>
  42d9cb:	mov    eax,r15d
  42d9ce:	lea    rsp,[rbp-0x28]
  42d9d2:	pop    rbx
  42d9d3:	pop    r12
  42d9d5:	pop    r13
  42d9d7:	pop    r14
  42d9d9:	pop    r15
  42d9db:	pop    rbp
  42d9dc:	ret    
  42d9dd:	mov    edi,r12d
  42d9e0:	call   403760 <close@plt>
  42d9e5:	call   403040 <__errno_location@plt>
  42d9ea:	mov    r14,rax
  42d9ed:	mov    edi,DWORD PTR [rax]
  42d9ef:	call   403170 <strerror@plt>
  42d9f4:	mov    rcx,rax
  42d9f7:	lea    rsi,[rip+0x1db21]        # 44b51f <strcmp@plt+0x47d97>
  42d9fe:	mov    edi,0x1
  42da03:	xor    eax,eax
  42da05:	mov    rdx,rcx
  42da08:	call   42e800 <strcmp@plt+0x2b078>
  42da0d:	cmp    DWORD PTR [r14],0x10
  42da11:	jne    42d9cb <strcmp@plt+0x2a243>
  42da13:	lea    rsi,[rip+0x1db35]        # 44b54f <strcmp@plt+0x47dc7>
  42da1a:	jmp    42d9b3 <strcmp@plt+0x2a22b>
  42da1c:	mov    edi,r12d
  42da1f:	call   403760 <close@plt>
  42da24:	mov    edi,r13d
  42da27:	call   403760 <close@plt>
  42da2c:	call   403040 <__errno_location@plt>
  42da31:	mov    edx,DWORD PTR [rax]
  42da33:	lea    rsi,[rip+0x1db4c]        # 44b586 <strcmp@plt+0x47dfe>
  42da3a:	mov    edi,0x1
  42da3f:	xor    eax,eax
  42da41:	call   42e800 <strcmp@plt+0x2b078>
  42da46:	jmp    42d9cb <strcmp@plt+0x2a243>
  42da48:	mov    edi,r13d
  42da4b:	call   403760 <close@plt>
  42da50:	call   403040 <__errno_location@plt>
  42da55:	mov    ecx,DWORD PTR [rax]
  42da57:	lea    rsi,[rip+0x1db85]        # 44b5e3 <strcmp@plt+0x47e5b>
  42da5e:	mov    edi,0x1
  42da63:	xor    eax,eax
  42da65:	mov    edx,ebx
  42da67:	call   42e800 <strcmp@plt+0x2b078>
  42da6c:	jmp    42d9cb <strcmp@plt+0x2a243>
  42da71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42da7b:	nop    DWORD PTR [rax+rax*1+0x0]
  42da80:	push   rbp
  42da81:	push   r15
  42da83:	push   r14
  42da85:	push   r12
  42da87:	push   rbx
  42da88:	sub    rsp,0x1000
  42da8f:	mov    r14,rdi
  42da92:	call   4030c0 <if_nametoindex@plt>
  42da97:	mov    ebx,eax
  42da99:	xor    r15d,r15d
  42da9c:	mov    edi,0x10
  42daa1:	mov    esi,0x2
  42daa6:	xor    edx,edx
  42daa8:	call   4030f0 <socket@plt>
  42daad:	test   eax,eax
  42daaf:	js     42db3f <strcmp@plt+0x2a3b7>
  42dab5:	mov    ebp,eax
  42dab7:	mov    r12,rsp
  42daba:	xor    r15d,r15d
  42dabd:	xor    esi,esi
  42dabf:	mov    edx,0x1000
  42dac4:	mov    rdi,r12
  42dac7:	call   403260 <memset@plt>
  42dacc:	movabs rax,0x501001300000020
  42dad6:	mov    QWORD PTR [rsp],rax
  42dada:	mov    BYTE PTR [rsp+0x10],0x0
  42dadf:	mov    WORD PTR [rsp+0x12],0x0
  42dae6:	mov    DWORD PTR [rsp+0x14],ebx
  42daea:	movabs rax,0xffffffff00000041
  42daf4:	mov    QWORD PTR [rsp+0x18],rax
  42daf9:	mov    edx,0x20
  42dafe:	xor    ecx,ecx
  42db00:	mov    edi,ebp
  42db02:	mov    rsi,r12
  42db05:	call   403230 <send@plt>
  42db0a:	test   eax,eax
  42db0c:	js     42db54 <strcmp@plt+0x2a3cc>
  42db0e:	lea    rax,[rip+0x3729b]        # 464db0 <strcmp@plt+0x61628>
  42db15:	cmp    DWORD PTR [rax],0x0
  42db18:	jle    42db30 <strcmp@plt+0x2a3a8>
  42db1a:	lea    rsi,[rip+0x1db80]        # 44b6a1 <strcmp@plt+0x47f19>
  42db21:	mov    edi,0x5
  42db26:	xor    eax,eax
  42db28:	mov    rdx,r14
  42db2b:	call   42e800 <strcmp@plt+0x2b078>
  42db30:	mov    edi,ebp
  42db32:	call   403760 <close@plt>
  42db37:	mov    r15d,0x1
  42db3d:	jmp    42db80 <strcmp@plt+0x2a3f8>
  42db3f:	lea    rsi,[rip+0x1db06]        # 44b64c <strcmp@plt+0x47ec4>
  42db46:	mov    edi,0x2
  42db4b:	xor    eax,eax
  42db4d:	call   42e800 <strcmp@plt+0x2b078>
  42db52:	jmp    42db80 <strcmp@plt+0x2a3f8>
  42db54:	call   403040 <__errno_location@plt>
  42db59:	mov    edi,DWORD PTR [rax]
  42db5b:	call   403170 <strerror@plt>
  42db60:	mov    rcx,rax
  42db63:	lea    rsi,[rip+0x1db16]        # 44b680 <strcmp@plt+0x47ef8>
  42db6a:	mov    edi,0x2
  42db6f:	xor    eax,eax
  42db71:	mov    rdx,rcx
  42db74:	call   42e800 <strcmp@plt+0x2b078>
  42db79:	mov    edi,ebp
  42db7b:	call   403760 <close@plt>
  42db80:	mov    eax,r15d
  42db83:	add    rsp,0x1000
  42db8a:	pop    rbx
  42db8b:	pop    r12
  42db8d:	pop    r14
  42db8f:	pop    r15
  42db91:	pop    rbp
  42db92:	ret    
  42db93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42db9d:	nop    DWORD PTR [rax]
  42dba0:	push   rbp
  42dba1:	push   r15
  42dba3:	push   r14
  42dba5:	push   r13
  42dba7:	push   r12
  42dba9:	push   rbx
  42dbaa:	sub    rsp,0x1018
  42dbb1:	mov    rbx,rsi
  42dbb4:	mov    r14,rdi
  42dbb7:	call   4030c0 <if_nametoindex@plt>
  42dbbc:	mov    r12d,eax
  42dbbf:	xor    ebp,ebp
  42dbc1:	mov    edi,0x10
  42dbc6:	mov    esi,0x2
  42dbcb:	xor    edx,edx
  42dbcd:	call   4030f0 <socket@plt>
  42dbd2:	test   eax,eax
  42dbd4:	js     42dbff <strcmp@plt+0x2a477>
  42dbd6:	mov    r15d,eax
  42dbd9:	mov    rdi,rbx
  42dbdc:	call   423200 <strcmp@plt+0x1fa78>
  42dbe1:	movzx  eax,ax
  42dbe4:	cmp    eax,0x2
  42dbe7:	je     42dc17 <strcmp@plt+0x2a48f>
  42dbe9:	cmp    eax,0xa
  42dbec:	jne    42dcd9 <strcmp@plt+0x2a551>
  42dbf2:	mov    BYTE PTR [rsp+0xf],0x80
  42dbf7:	mov    r13d,0x10
  42dbfd:	jmp    42dc22 <strcmp@plt+0x2a49a>
  42dbff:	lea    rsi,[rip+0x1daac]        # 44b6b2 <strcmp@plt+0x47f2a>
  42dc06:	mov    edi,0x2
  42dc0b:	xor    eax,eax
  42dc0d:	call   42e800 <strcmp@plt+0x2b078>
  42dc12:	jmp    42dd2b <strcmp@plt+0x2a5a3>
  42dc17:	mov    BYTE PTR [rsp+0xf],0x20
  42dc1c:	mov    r13d,0x4
  42dc22:	lea    rdi,[rsp+0x10]
  42dc27:	xor    ebp,ebp
  42dc29:	xor    esi,esi
  42dc2b:	mov    edx,0x1000
  42dc30:	call   403260 <memset@plt>
  42dc35:	lea    eax,[r13+0x1c]
  42dc39:	mov    DWORD PTR [rsp+0x10],eax
  42dc3d:	mov    DWORD PTR [rsp+0x14],0x5010014
  42dc45:	mov    al,BYTE PTR [rsp+0xf]
  42dc49:	mov    BYTE PTR [rsp+0x21],al
  42dc4d:	mov    rdi,rbx
  42dc50:	call   423200 <strcmp@plt+0x1fa78>
  42dc55:	mov    BYTE PTR [rsp+0x20],al
  42dc59:	mov    DWORD PTR [rsp+0x24],r12d
  42dc5e:	mov    WORD PTR [rsp+0x22],0x0
  42dc65:	mov    WORD PTR [rsp+0x2a],0x2
  42dc6c:	add    r13d,0x4
  42dc70:	mov    WORD PTR [rsp+0x28],r13w
  42dc76:	lea    rdi,[rsp+0x2c]
  42dc7b:	mov    rsi,rbx
  42dc7e:	call   423780 <strcmp@plt+0x1fff8>
  42dc83:	mov    edx,DWORD PTR [rsp+0x10]
  42dc87:	xor    ecx,ecx
  42dc89:	mov    edi,r15d
  42dc8c:	lea    rsi,[rsp+0x10]
  42dc91:	call   403230 <send@plt>
  42dc96:	test   eax,eax
  42dc98:	js     42dcfe <strcmp@plt+0x2a576>
  42dc9a:	lea    rax,[rip+0x3710f]        # 464db0 <strcmp@plt+0x61628>
  42dca1:	cmp    DWORD PTR [rax],0x0
  42dca4:	jle    42dcca <strcmp@plt+0x2a542>
  42dca6:	mov    rdi,rbx
  42dca9:	call   423130 <strcmp@plt+0x1f9a8>
  42dcae:	mov    rcx,rax
  42dcb1:	lea    rsi,[rip+0x1da81]        # 44b739 <strcmp@plt+0x47fb1>
  42dcb8:	mov    edi,0x5
  42dcbd:	xor    eax,eax
  42dcbf:	mov    rdx,rcx
  42dcc2:	mov    rcx,r14
  42dcc5:	call   42e800 <strcmp@plt+0x2b078>
  42dcca:	mov    edi,r15d
  42dccd:	call   403760 <close@plt>
  42dcd2:	mov    ebp,0x1
  42dcd7:	jmp    42dd2b <strcmp@plt+0x2a5a3>
  42dcd9:	mov    rdi,rbx
  42dcdc:	call   423130 <strcmp@plt+0x1f9a8>
  42dce1:	mov    rcx,rax
  42dce4:	lea    rsi,[rip+0x1d9fe]        # 44b6e9 <strcmp@plt+0x47f61>
  42dceb:	xor    ebp,ebp
  42dced:	mov    edi,0x2
  42dcf2:	xor    eax,eax
  42dcf4:	mov    rdx,rcx
  42dcf7:	call   42e800 <strcmp@plt+0x2b078>
  42dcfc:	jmp    42dd2b <strcmp@plt+0x2a5a3>
  42dcfe:	call   403040 <__errno_location@plt>
  42dd03:	mov    edi,DWORD PTR [rax]
  42dd05:	call   403170 <strerror@plt>
  42dd0a:	mov    rcx,rax
  42dd0d:	lea    rsi,[rip+0x1da01]        # 44b715 <strcmp@plt+0x47f8d>
  42dd14:	mov    edi,0x2
  42dd19:	xor    eax,eax
  42dd1b:	mov    rdx,rcx
  42dd1e:	call   42e800 <strcmp@plt+0x2b078>
  42dd23:	mov    edi,r15d
  42dd26:	call   403760 <close@plt>
  42dd2b:	mov    eax,ebp
  42dd2d:	add    rsp,0x1018
  42dd34:	pop    rbx
  42dd35:	pop    r12
  42dd37:	pop    r13
  42dd39:	pop    r14
  42dd3b:	pop    r15
  42dd3d:	pop    rbp
  42dd3e:	ret    
  42dd3f:	nop
  42dd40:	push   rbp
  42dd41:	push   r15
  42dd43:	push   r14
  42dd45:	push   r13
  42dd47:	push   r12
  42dd49:	push   rbx
  42dd4a:	sub    rsp,0x1018
  42dd51:	mov    rbx,rsi
  42dd54:	mov    r14,rdi
  42dd57:	call   4030c0 <if_nametoindex@plt>
  42dd5c:	mov    r12d,eax
  42dd5f:	xor    ebp,ebp
  42dd61:	mov    edi,0x10
  42dd66:	mov    esi,0x2
  42dd6b:	xor    edx,edx
  42dd6d:	call   4030f0 <socket@plt>
  42dd72:	test   eax,eax
  42dd74:	js     42dd9f <strcmp@plt+0x2a617>
  42dd76:	mov    r15d,eax
  42dd79:	mov    rdi,rbx
  42dd7c:	call   423200 <strcmp@plt+0x1fa78>
  42dd81:	movzx  eax,ax
  42dd84:	cmp    eax,0x2
  42dd87:	je     42ddb7 <strcmp@plt+0x2a62f>
  42dd89:	cmp    eax,0xa
  42dd8c:	jne    42de79 <strcmp@plt+0x2a6f1>
  42dd92:	mov    BYTE PTR [rsp+0xf],0x80
  42dd97:	mov    r13d,0x10
  42dd9d:	jmp    42ddc2 <strcmp@plt+0x2a63a>
  42dd9f:	lea    rsi,[rip+0x1d9ad]        # 44b753 <strcmp@plt+0x47fcb>
  42dda6:	mov    edi,0x2
  42ddab:	xor    eax,eax
  42ddad:	call   42e800 <strcmp@plt+0x2b078>
  42ddb2:	jmp    42decb <strcmp@plt+0x2a743>
  42ddb7:	mov    BYTE PTR [rsp+0xf],0x20
  42ddbc:	mov    r13d,0x4
  42ddc2:	lea    rdi,[rsp+0x10]
  42ddc7:	xor    ebp,ebp
  42ddc9:	xor    esi,esi
  42ddcb:	mov    edx,0x1000
  42ddd0:	call   403260 <memset@plt>
  42ddd5:	lea    eax,[r13+0x1c]
  42ddd9:	mov    DWORD PTR [rsp+0x10],eax
  42dddd:	mov    DWORD PTR [rsp+0x14],0x5010015
  42dde5:	mov    al,BYTE PTR [rsp+0xf]
  42dde9:	mov    BYTE PTR [rsp+0x21],al
  42dded:	mov    rdi,rbx
  42ddf0:	call   423200 <strcmp@plt+0x1fa78>
  42ddf5:	mov    BYTE PTR [rsp+0x20],al
  42ddf9:	mov    DWORD PTR [rsp+0x24],r12d
  42ddfe:	mov    WORD PTR [rsp+0x22],0x0
  42de05:	mov    WORD PTR [rsp+0x2a],0x2
  42de0c:	add    r13d,0x4
  42de10:	mov    WORD PTR [rsp+0x28],r13w
  42de16:	lea    rdi,[rsp+0x2c]
  42de1b:	mov    rsi,rbx
  42de1e:	call   423780 <strcmp@plt+0x1fff8>
  42de23:	mov    edx,DWORD PTR [rsp+0x10]
  42de27:	xor    ecx,ecx
  42de29:	mov    edi,r15d
  42de2c:	lea    rsi,[rsp+0x10]
  42de31:	call   403230 <send@plt>
  42de36:	test   eax,eax
  42de38:	js     42de9e <strcmp@plt+0x2a716>
  42de3a:	lea    rax,[rip+0x36f6f]        # 464db0 <strcmp@plt+0x61628>
  42de41:	cmp    DWORD PTR [rax],0x0
  42de44:	jle    42de6a <strcmp@plt+0x2a6e2>
  42de46:	mov    rdi,rbx
  42de49:	call   423130 <strcmp@plt+0x1f9a8>
  42de4e:	mov    rcx,rax
  42de51:	lea    rsi,[rip+0x1d988]        # 44b7e0 <strcmp@plt+0x48058>
  42de58:	mov    edi,0x5
  42de5d:	xor    eax,eax
  42de5f:	mov    rdx,rcx
  42de62:	mov    rcx,r14
  42de65:	call   42e800 <strcmp@plt+0x2b078>
  42de6a:	mov    edi,r15d
  42de6d:	call   403760 <close@plt>
  42de72:	mov    ebp,0x1
  42de77:	jmp    42decb <strcmp@plt+0x2a743>
  42de79:	mov    rdi,rbx
  42de7c:	call   423130 <strcmp@plt+0x1f9a8>
  42de81:	mov    rcx,rax
  42de84:	lea    rsi,[rip+0x1d901]        # 44b78c <strcmp@plt+0x48004>
  42de8b:	xor    ebp,ebp
  42de8d:	mov    edi,0x2
  42de92:	xor    eax,eax
  42de94:	mov    rdx,rcx
  42de97:	call   42e800 <strcmp@plt+0x2b078>
  42de9c:	jmp    42decb <strcmp@plt+0x2a743>
  42de9e:	call   403040 <__errno_location@plt>
  42dea3:	mov    edi,DWORD PTR [rax]
  42dea5:	call   403170 <strerror@plt>
  42deaa:	mov    rcx,rax
  42dead:	lea    rsi,[rip+0x1d906]        # 44b7ba <strcmp@plt+0x48032>
  42deb4:	mov    edi,0x2
  42deb9:	xor    eax,eax
  42debb:	mov    rdx,rcx
  42debe:	call   42e800 <strcmp@plt+0x2b078>
  42dec3:	mov    edi,r15d
  42dec6:	call   403760 <close@plt>
  42decb:	mov    eax,ebp
  42decd:	add    rsp,0x1018
  42ded4:	pop    rbx
  42ded5:	pop    r12
  42ded7:	pop    r13
  42ded9:	pop    r14
  42dedb:	pop    r15
  42dedd:	pop    rbp
  42dede:	ret    
  42dedf:	nop
  42dee0:	mov    QWORD PTR [rdi+0x30],rsi
  42dee4:	mov    QWORD PTR [rdi+0x38],rsi
  42dee8:	mov    DWORD PTR [rdi+0x10],edx
  42deeb:	mov    DWORD PTR [rdi+0x28],0x0
  42def2:	mov    DWORD PTR [rdi+0x14],0x0
  42def9:	mov    DWORD PTR [rdi+0x22],0xffffffff
  42df00:	mov    QWORD PTR [rdi+0x1a],0xffffffffffffffff
  42df08:	ret    
  42df09:	nop    DWORD PTR [rax+0x0]
  42df10:	mov    QWORD PTR [rdi+0x30],rsi
  42df14:	mov    QWORD PTR [rdi+0x38],rsi
  42df18:	mov    DWORD PTR [rdi+0x10],edx
  42df1b:	mov    DWORD PTR [rdi+0x28],0x1
  42df22:	mov    DWORD PTR [rdi+0x14],0x0
  42df29:	mov    DWORD PTR [rdi+0x22],0xffffffff
  42df30:	mov    QWORD PTR [rdi+0x1a],0xffffffffffffffff
  42df38:	ret    
  42df39:	nop    DWORD PTR [rax+0x0]
  42df40:	push   rbp
  42df41:	push   rbx
  42df42:	push   rax
  42df43:	mov    ebp,esi
  42df45:	mov    rbx,rdi
  42df48:	test   esi,esi
  42df4a:	je     42df55 <strcmp@plt+0x2a7cd>
  42df4c:	mov    edi,ebp
  42df4e:	call   432070 <strcmp@plt+0x2e8e8>
  42df53:	jmp    42df57 <strcmp@plt+0x2a7cf>
  42df55:	xor    eax,eax
  42df57:	mov    QWORD PTR [rbx+0x30],rax
  42df5b:	mov    QWORD PTR [rbx+0x38],rax
  42df5f:	mov    DWORD PTR [rbx+0x10],ebp
  42df62:	mov    DWORD PTR [rbx+0x28],0x0
  42df69:	mov    DWORD PTR [rbx+0x14],0x0
  42df70:	mov    DWORD PTR [rbx+0x22],0xffffffff
  42df77:	mov    QWORD PTR [rbx+0x1a],0xffffffffffffffff
  42df7f:	add    rsp,0x8
  42df83:	pop    rbx
  42df84:	pop    rbp
  42df85:	ret    
  42df86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42df90:	test   rdi,rdi
  42df93:	je     42df9b <strcmp@plt+0x2a813>
  42df95:	cmp    DWORD PTR [rdi+0x28],0x0
  42df99:	je     42df9c <strcmp@plt+0x2a814>
  42df9b:	ret    
  42df9c:	mov    rdi,QWORD PTR [rdi+0x30]
  42dfa0:	jmp    403780 <free@plt>
  42dfa5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dfaf:	nop
  42dfb0:	push   rbp
  42dfb1:	push   rbx
  42dfb2:	push   rax
  42dfb3:	mov    ebp,edi
  42dfb5:	mov    edi,0x40
  42dfba:	call   432070 <strcmp@plt+0x2e8e8>
  42dfbf:	mov    rbx,rax
  42dfc2:	test   ebp,ebp
  42dfc4:	je     42dfcf <strcmp@plt+0x2a847>
  42dfc6:	mov    edi,ebp
  42dfc8:	call   432070 <strcmp@plt+0x2e8e8>
  42dfcd:	jmp    42dfd1 <strcmp@plt+0x2a849>
  42dfcf:	xor    eax,eax
  42dfd1:	mov    QWORD PTR [rbx+0x30],rax
  42dfd5:	mov    QWORD PTR [rbx+0x38],rax
  42dfd9:	mov    DWORD PTR [rbx+0x10],ebp
  42dfdc:	mov    DWORD PTR [rbx+0x28],0x0
  42dfe3:	mov    DWORD PTR [rbx+0x14],0x0
  42dfea:	mov    DWORD PTR [rbx+0x22],0xffffffff
  42dff1:	mov    QWORD PTR [rbx+0x1a],0xffffffffffffffff
  42dff9:	mov    rax,rbx
  42dffc:	add    rsp,0x8
  42e000:	pop    rbx
  42e001:	pop    rbp
  42e002:	ret    
  42e003:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e00d:	nop    DWORD PTR [rax]
  42e010:	test   rdi,rdi
  42e013:	je     42e031 <strcmp@plt+0x2a8a9>
  42e015:	push   rbx
  42e016:	mov    rbx,rdi
  42e019:	cmp    DWORD PTR [rdi+0x28],0x0
  42e01d:	jne    42e028 <strcmp@plt+0x2a8a0>
  42e01f:	mov    rdi,QWORD PTR [rbx+0x30]
  42e023:	call   403780 <free@plt>
  42e028:	mov    rdi,rbx
  42e02b:	pop    rbx
  42e02c:	jmp    403780 <free@plt>
  42e031:	ret    
  42e032:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e03c:	nop    DWORD PTR [rax+0x0]
  42e040:	push   rbp
  42e041:	push   r14
  42e043:	push   rbx
  42e044:	mov    r14d,esi
  42e047:	mov    ebp,edi
  42e049:	mov    edi,0x40
  42e04e:	call   432070 <strcmp@plt+0x2e8e8>
  42e053:	mov    rbx,rax
  42e056:	add    ebp,r14d
  42e059:	je     42e064 <strcmp@plt+0x2a8dc>
  42e05b:	mov    edi,ebp
  42e05d:	call   432070 <strcmp@plt+0x2e8e8>
  42e062:	jmp    42e066 <strcmp@plt+0x2a8de>
  42e064:	xor    eax,eax
  42e066:	mov    QWORD PTR [rbx+0x30],rax
  42e06a:	mov    QWORD PTR [rbx+0x38],rax
  42e06e:	mov    DWORD PTR [rbx+0x10],ebp
  42e071:	mov    DWORD PTR [rbx+0x28],0x0
  42e078:	mov    DWORD PTR [rbx+0x14],0x0
  42e07f:	mov    DWORD PTR [rbx+0x22],0xffffffff
  42e086:	mov    QWORD PTR [rbx+0x1a],0xffffffffffffffff
  42e08e:	cmp    ebp,r14d
  42e091:	jae    42e0ae <strcmp@plt+0x2a926>
  42e093:	cmp    r14d,0x40
  42e097:	mov    edx,0x40
  42e09c:	cmova  edx,r14d
  42e0a0:	xor    esi,esi
  42e0a2:	mov    rdi,rbx
  42e0a5:	call   42e140 <strcmp@plt+0x2a9b8>
  42e0aa:	mov    rax,QWORD PTR [rbx+0x30]
  42e0ae:	mov    ecx,r14d
  42e0b1:	add    rcx,rax
  42e0b4:	mov    QWORD PTR [rbx+0x38],rcx
  42e0b8:	mov    rax,rbx
  42e0bb:	pop    rbx
  42e0bc:	pop    r14
  42e0be:	pop    rbp
  42e0bf:	ret    
  42e0c0:	push   rbp
  42e0c1:	push   rbx
  42e0c2:	push   rax
  42e0c3:	mov    ebp,esi
  42e0c5:	mov    rbx,rdi
  42e0c8:	mov    rax,QWORD PTR [rdi+0x30]
  42e0cc:	mov    rsi,QWORD PTR [rdi+0x38]
  42e0d0:	mov    ecx,DWORD PTR [rdi+0x10]
  42e0d3:	add    ecx,eax
  42e0d5:	mov    edx,DWORD PTR [rdi+0x14]
  42e0d8:	add    edx,esi
  42e0da:	sub    ecx,edx
  42e0dc:	cmp    ecx,ebp
  42e0de:	jae    42e0f9 <strcmp@plt+0x2a971>
  42e0e0:	sub    esi,eax
  42e0e2:	cmp    ebp,0x40
  42e0e5:	mov    edx,0x40
  42e0ea:	cmova  edx,ebp
  42e0ed:	mov    rdi,rbx
  42e0f0:	call   42e140 <strcmp@plt+0x2a9b8>
  42e0f5:	mov    rax,QWORD PTR [rbx+0x30]
  42e0f9:	mov    ecx,ebp
  42e0fb:	add    rcx,rax
  42e0fe:	mov    QWORD PTR [rbx+0x38],rcx
  42e102:	add    rsp,0x8
  42e106:	pop    rbx
  42e107:	pop    rbp
  42e108:	ret    
  42e109:	nop    DWORD PTR [rax+0x0]
  42e110:	mov    eax,esi
  42e112:	mov    r8,QWORD PTR [rdi+0x30]
  42e116:	mov    rsi,QWORD PTR [rdi+0x38]
  42e11a:	mov    edx,DWORD PTR [rdi+0x10]
  42e11d:	add    edx,r8d
  42e120:	mov    ecx,DWORD PTR [rdi+0x14]
  42e123:	add    ecx,esi
  42e125:	sub    edx,ecx
  42e127:	cmp    edx,eax
  42e129:	jae    42e13b <strcmp@plt+0x2a9b3>
  42e12b:	sub    esi,r8d
  42e12e:	cmp    eax,0x40
  42e131:	mov    edx,0x40
  42e136:	cmova  edx,eax
  42e139:	jmp    42e140 <strcmp@plt+0x2a9b8>
  42e13b:	ret    
  42e13c:	nop    DWORD PTR [rax+0x0]
  42e140:	push   rbp
  42e141:	push   r15
  42e143:	push   r14
  42e145:	push   r13
  42e147:	push   r12
  42e149:	push   rbx
  42e14a:	push   rax
  42e14b:	mov    r14,rdx
  42e14e:	mov    ebp,esi
  42e150:	mov    rbx,rdi
  42e153:	add    r14d,esi
  42e156:	add    r14d,DWORD PTR [rdi+0x14]
  42e15a:	mov    eax,DWORD PTR [rdi+0x38]
  42e15d:	mov    rdi,QWORD PTR [rdi+0x30]
  42e161:	sub    eax,edi
  42e163:	cmp    eax,esi
  42e165:	jne    42e17e <strcmp@plt+0x2a9f6>
  42e167:	mov    esi,r14d
  42e16a:	call   4320d0 <strcmp@plt+0x2e948>
  42e16f:	mov    QWORD PTR [rbx+0x30],rax
  42e173:	mov    r15d,ebp
  42e176:	add    r15,rax
  42e179:	jmp    42e21d <strcmp@plt+0x2aa95>
  42e17e:	mov    r13d,ebp
  42e181:	sub    r13d,eax
  42e184:	mov    edi,r14d
  42e187:	call   4320b0 <strcmp@plt+0x2e928>
  42e18c:	mov    r12,rax
  42e18f:	mov    r15d,ebp
  42e192:	add    r15,rax
  42e195:	mov    rsi,QWORD PTR [rbx+0x38]
  42e199:	mov    edx,DWORD PTR [rbx+0x14]
  42e19c:	mov    rdi,r15
  42e19f:	call   403330 <memcpy@plt>
  42e1a4:	mov    rdi,QWORD PTR [rbx+0x30]
  42e1a8:	call   403780 <free@plt>
  42e1ad:	mov    QWORD PTR [rbx+0x30],r12
  42e1b1:	movzx  eax,WORD PTR [rbx+0x1a]
  42e1b5:	cmp    eax,0xffff
  42e1ba:	je     42e1c3 <strcmp@plt+0x2aa3b>
  42e1bc:	add    eax,r13d
  42e1bf:	mov    WORD PTR [rbx+0x1a],ax
  42e1c3:	movzx  eax,WORD PTR [rbx+0x1c]
  42e1c7:	cmp    eax,0xffff
  42e1cc:	je     42e1d5 <strcmp@plt+0x2aa4d>
  42e1ce:	add    eax,r13d
  42e1d1:	mov    WORD PTR [rbx+0x1c],ax
  42e1d5:	movzx  eax,WORD PTR [rbx+0x1e]
  42e1d9:	cmp    eax,0xffff
  42e1de:	je     42e1e7 <strcmp@plt+0x2aa5f>
  42e1e0:	add    eax,r13d
  42e1e3:	mov    WORD PTR [rbx+0x1e],ax
  42e1e7:	movzx  eax,WORD PTR [rbx+0x20]
  42e1eb:	cmp    eax,0xffff
  42e1f0:	je     42e1f9 <strcmp@plt+0x2aa71>
  42e1f2:	add    eax,r13d
  42e1f5:	mov    WORD PTR [rbx+0x20],ax
  42e1f9:	movzx  eax,WORD PTR [rbx+0x22]
  42e1fd:	cmp    eax,0xffff
  42e202:	je     42e20b <strcmp@plt+0x2aa83>
  42e204:	add    eax,r13d
  42e207:	mov    WORD PTR [rbx+0x22],ax
  42e20b:	movzx  eax,WORD PTR [rbx+0x24]
  42e20f:	cmp    eax,0xffff
  42e214:	je     42e21d <strcmp@plt+0x2aa95>
  42e216:	add    eax,r13d
  42e219:	mov    WORD PTR [rbx+0x24],ax
  42e21d:	mov    DWORD PTR [rbx+0x10],r14d
  42e221:	mov    QWORD PTR [rbx+0x38],r15
  42e225:	add    rsp,0x8
  42e229:	pop    rbx
  42e22a:	pop    r12
  42e22c:	pop    r13
  42e22e:	pop    r14
  42e230:	pop    r15
  42e232:	pop    rbp
  42e233:	ret    
  42e234:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e23e:	xchg   ax,ax
  42e240:	mov    rdx,QWORD PTR [rdi+0x30]
  42e244:	mov    rcx,QWORD PTR [rdi+0x38]
  42e248:	mov    eax,ecx
  42e24a:	sub    eax,edx
  42e24c:	cmp    eax,esi
  42e24e:	jae    42e26a <strcmp@plt+0x2aae2>
  42e250:	cmp    esi,0x40
  42e253:	mov    eax,0x40
  42e258:	cmova  eax,esi
  42e25b:	add    edx,DWORD PTR [rdi+0x10]
  42e25e:	add    ecx,DWORD PTR [rdi+0x14]
  42e261:	sub    edx,ecx
  42e263:	mov    esi,eax
  42e265:	jmp    42e140 <strcmp@plt+0x2a9b8>
  42e26a:	ret    
  42e26b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e270:	push   rbp
  42e271:	push   rbx
  42e272:	push   rax
  42e273:	mov    ebp,esi
  42e275:	mov    rbx,rdi
  42e278:	mov    rdx,QWORD PTR [rdi+0x30]
  42e27c:	mov    edi,DWORD PTR [rdi+0x10]
  42e27f:	add    edi,edx
  42e281:	mov    rsi,QWORD PTR [rbx+0x38]
  42e285:	mov    ecx,DWORD PTR [rbx+0x14]
  42e288:	mov    rax,rcx
  42e28b:	add    rax,rsi
  42e28e:	sub    edi,eax
  42e290:	cmp    edi,ebp
  42e292:	jae    42e2b3 <strcmp@plt+0x2ab2b>
  42e294:	sub    esi,edx
  42e296:	cmp    ebp,0x40
  42e299:	mov    edx,0x40
  42e29e:	cmova  edx,ebp
  42e2a1:	mov    rdi,rbx
  42e2a4:	call   42e140 <strcmp@plt+0x2a9b8>
  42e2a9:	mov    ecx,DWORD PTR [rbx+0x14]
  42e2ac:	mov    rax,rcx
  42e2af:	add    rax,QWORD PTR [rbx+0x38]
  42e2b3:	add    ecx,ebp
  42e2b5:	mov    DWORD PTR [rbx+0x14],ecx
  42e2b8:	add    rsp,0x8
  42e2bc:	pop    rbx
  42e2bd:	pop    rbp
  42e2be:	ret    
  42e2bf:	nop
  42e2c0:	push   rbp
  42e2c1:	push   r14
  42e2c3:	push   rbx
  42e2c4:	mov    ebp,edx
  42e2c6:	mov    r14,rsi
  42e2c9:	mov    rbx,rdi
  42e2cc:	mov    rcx,QWORD PTR [rdi+0x30]
  42e2d0:	mov    edx,DWORD PTR [rdi+0x10]
  42e2d3:	add    edx,ecx
  42e2d5:	mov    rsi,QWORD PTR [rdi+0x38]
  42e2d9:	mov    eax,DWORD PTR [rdi+0x14]
  42e2dc:	mov    rdi,rax
  42e2df:	add    rdi,rsi
  42e2e2:	sub    edx,edi
  42e2e4:	cmp    edx,ebp
  42e2e6:	jae    42e307 <strcmp@plt+0x2ab7f>
  42e2e8:	sub    esi,ecx
  42e2ea:	cmp    ebp,0x40
  42e2ed:	mov    edx,0x40
  42e2f2:	cmova  edx,ebp
  42e2f5:	mov    rdi,rbx
  42e2f8:	call   42e140 <strcmp@plt+0x2a9b8>
  42e2fd:	mov    eax,DWORD PTR [rbx+0x14]
  42e300:	mov    rdi,rax
  42e303:	add    rdi,QWORD PTR [rbx+0x38]
  42e307:	add    eax,ebp
  42e309:	mov    DWORD PTR [rbx+0x14],eax
  42e30c:	mov    edx,ebp
  42e30e:	mov    rsi,r14
  42e311:	pop    rbx
  42e312:	pop    r14
  42e314:	pop    rbp
  42e315:	jmp    403330 <memcpy@plt>
  42e31a:	nop    WORD PTR [rax+rax*1+0x0]
  42e320:	push   rbp
  42e321:	push   rbx
  42e322:	push   rax
  42e323:	mov    ebp,esi
  42e325:	mov    rbx,rdi
  42e328:	mov    rdx,QWORD PTR [rdi+0x30]
  42e32c:	mov    rax,QWORD PTR [rdi+0x38]
  42e330:	mov    ecx,eax
  42e332:	sub    ecx,edx
  42e334:	cmp    ecx,esi
  42e336:	jae    42e357 <strcmp@plt+0x2abcf>
  42e338:	cmp    ebp,0x40
  42e33b:	mov    esi,0x40
  42e340:	cmova  esi,ebp
  42e343:	add    edx,DWORD PTR [rbx+0x10]
  42e346:	add    eax,DWORD PTR [rbx+0x14]
  42e349:	sub    edx,eax
  42e34b:	mov    rdi,rbx
  42e34e:	call   42e140 <strcmp@plt+0x2a9b8>
  42e353:	mov    rax,QWORD PTR [rbx+0x38]
  42e357:	mov    ecx,ebp
  42e359:	sub    rax,rcx
  42e35c:	mov    QWORD PTR [rbx+0x38],rax
  42e360:	add    DWORD PTR [rbx+0x14],ebp
  42e363:	add    rsp,0x8
  42e367:	pop    rbx
  42e368:	pop    rbp
  42e369:	ret    
  42e36a:	nop    WORD PTR [rax+rax*1+0x0]
  42e370:	push   rbp
  42e371:	push   r14
  42e373:	push   rbx
  42e374:	mov    ebp,edx
  42e376:	mov    r14,rsi
  42e379:	mov    rbx,rdi
  42e37c:	mov    rdx,QWORD PTR [rdi+0x30]
  42e380:	mov    rdi,QWORD PTR [rdi+0x38]
  42e384:	mov    eax,edi
  42e386:	sub    eax,edx
  42e388:	cmp    eax,ebp
  42e38a:	jae    42e3ab <strcmp@plt+0x2ac23>
  42e38c:	cmp    ebp,0x40
  42e38f:	mov    esi,0x40
  42e394:	cmova  esi,ebp
  42e397:	add    edx,DWORD PTR [rbx+0x10]
  42e39a:	add    edi,DWORD PTR [rbx+0x14]
  42e39d:	sub    edx,edi
  42e39f:	mov    rdi,rbx
  42e3a2:	call   42e140 <strcmp@plt+0x2a9b8>
  42e3a7:	mov    rdi,QWORD PTR [rbx+0x38]
  42e3ab:	mov    edx,ebp
  42e3ad:	sub    rdi,rdx
  42e3b0:	mov    QWORD PTR [rbx+0x38],rdi
  42e3b4:	add    DWORD PTR [rbx+0x14],ebp
  42e3b7:	mov    rsi,r14
  42e3ba:	pop    rbx
  42e3bb:	pop    r14
  42e3bd:	pop    rbp
  42e3be:	jmp    403330 <memcpy@plt>
  42e3c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e3cd:	nop    DWORD PTR [rax]
  42e3d0:	push   r15
  42e3d2:	push   r14
  42e3d4:	push   r13
  42e3d6:	push   r12
  42e3d8:	push   rbx
  42e3d9:	mov    r14,rdi
  42e3dc:	mov    r12d,DWORD PTR [rdi+0x14]
  42e3e0:	mov    edi,0x40
  42e3e5:	call   432070 <strcmp@plt+0x2e8e8>
  42e3ea:	mov    r15,rax
  42e3ed:	test   r12,r12
  42e3f0:	je     42e3ff <strcmp@plt+0x2ac77>
  42e3f2:	mov    rdi,r12
  42e3f5:	call   432070 <strcmp@plt+0x2e8e8>
  42e3fa:	mov    rbx,rax
  42e3fd:	jmp    42e401 <strcmp@plt+0x2ac79>
  42e3ff:	xor    ebx,ebx
  42e401:	mov    QWORD PTR [r15+0x30],rbx
  42e405:	mov    QWORD PTR [r15+0x38],rbx
  42e409:	mov    DWORD PTR [r15+0x10],r12d
  42e40d:	mov    DWORD PTR [r15+0x28],0x0
  42e415:	mov    DWORD PTR [r15+0x14],0x0
  42e41d:	mov    DWORD PTR [r15+0x22],0xffffffff
  42e425:	mov    QWORD PTR [r15+0x1a],0xffffffffffffffff
  42e42d:	mov    r12,QWORD PTR [r14+0x38]
  42e431:	mov    r13d,DWORD PTR [r14+0x14]
  42e435:	mov    rcx,QWORD PTR [rbx+0x30]
  42e439:	mov    edx,DWORD PTR [rbx+0x10]
  42e43c:	add    edx,ecx
  42e43e:	mov    rsi,QWORD PTR [rbx+0x38]
  42e442:	mov    eax,DWORD PTR [rbx+0x14]
  42e445:	mov    rdi,rax
  42e448:	add    rdi,rsi
  42e44b:	sub    edx,edi
  42e44d:	cmp    r13d,edx
  42e450:	jbe    42e473 <strcmp@plt+0x2aceb>
  42e452:	sub    esi,ecx
  42e454:	cmp    r13d,0x40
  42e458:	mov    edx,0x40
  42e45d:	cmova  edx,r13d
  42e461:	mov    rdi,rbx
  42e464:	call   42e140 <strcmp@plt+0x2a9b8>
  42e469:	mov    eax,DWORD PTR [rbx+0x14]
  42e46c:	mov    rdi,rax
  42e46f:	add    rdi,QWORD PTR [rbx+0x38]
  42e473:	lea    eax,[rax+r13*1]
  42e477:	mov    DWORD PTR [rbx+0x14],eax
  42e47a:	mov    rsi,r12
  42e47d:	mov    rdx,r13
  42e480:	call   403330 <memcpy@plt>
  42e485:	movzx  eax,WORD PTR [r14+0x24]
  42e48a:	mov    WORD PTR [r15+0x24],ax
  42e48f:	mov    rax,r15
  42e492:	pop    rbx
  42e493:	pop    r12
  42e495:	pop    r13
  42e497:	pop    r14
  42e499:	pop    r15
  42e49b:	ret    
  42e49c:	nop    DWORD PTR [rax+0x0]
  42e4a0:	push   rbx
  42e4a1:	movzx  eax,WORD PTR [rdi+0x18]
  42e4a5:	cmp    rax,0xffff
  42e4ab:	je     42e4c7 <strcmp@plt+0x2ad3f>
  42e4ad:	mov    ecx,DWORD PTR [rdi+0x38]
  42e4b0:	add    ecx,DWORD PTR [rdi+0x14]
  42e4b3:	add    rax,QWORD PTR [rdi+0x30]
  42e4b7:	sub    ecx,eax
  42e4b9:	mov    DWORD PTR [rdi+0x14],ecx
  42e4bc:	mov    QWORD PTR [rdi+0x38],rax
  42e4c0:	mov    ebx,0x1
  42e4c5:	jmp    42e4ea <strcmp@plt+0x2ad62>
  42e4c7:	lea    rax,[rip+0x368e2]        # 464db0 <strcmp@plt+0x61628>
  42e4ce:	xor    ebx,ebx
  42e4d0:	cmp    DWORD PTR [rax],0x2
  42e4d3:	jl     42e4ea <strcmp@plt+0x2ad62>
  42e4d5:	lea    rsi,[rip+0x1d322]        # 44b7fe <strcmp@plt+0x48076>
  42e4dc:	xor    ebx,ebx
  42e4de:	mov    edi,0x6
  42e4e3:	xor    eax,eax
  42e4e5:	call   42e800 <strcmp@plt+0x2b078>
  42e4ea:	mov    eax,ebx
  42e4ec:	pop    rbx
  42e4ed:	ret    
  42e4ee:	xchg   ax,ax
  42e4f0:	push   rbx
  42e4f1:	movzx  eax,WORD PTR [rdi+0x1a]
  42e4f5:	cmp    rax,0xffff
  42e4fb:	je     42e517 <strcmp@plt+0x2ad8f>
  42e4fd:	mov    ecx,DWORD PTR [rdi+0x38]
  42e500:	add    ecx,DWORD PTR [rdi+0x14]
  42e503:	add    rax,QWORD PTR [rdi+0x30]
  42e507:	sub    ecx,eax
  42e509:	mov    DWORD PTR [rdi+0x14],ecx
  42e50c:	mov    QWORD PTR [rdi+0x38],rax
  42e510:	mov    ebx,0x1
  42e515:	jmp    42e53a <strcmp@plt+0x2adb2>
  42e517:	lea    rax,[rip+0x36892]        # 464db0 <strcmp@plt+0x61628>
  42e51e:	xor    ebx,ebx
  42e520:	cmp    DWORD PTR [rax],0x2
  42e523:	jl     42e53a <strcmp@plt+0x2adb2>
  42e525:	lea    rsi,[rip+0x1d30c]        # 44b838 <strcmp@plt+0x480b0>
  42e52c:	xor    ebx,ebx
  42e52e:	mov    edi,0x6
  42e533:	xor    eax,eax
  42e535:	call   42e800 <strcmp@plt+0x2b078>
  42e53a:	mov    eax,ebx
  42e53c:	pop    rbx
  42e53d:	ret    
  42e53e:	xchg   ax,ax
  42e540:	push   rbx
  42e541:	movzx  eax,WORD PTR [rdi+0x1c]
  42e545:	cmp    rax,0xffff
  42e54b:	je     42e567 <strcmp@plt+0x2addf>
  42e54d:	mov    ecx,DWORD PTR [rdi+0x38]
  42e550:	add    ecx,DWORD PTR [rdi+0x14]
  42e553:	add    rax,QWORD PTR [rdi+0x30]
  42e557:	sub    ecx,eax
  42e559:	mov    DWORD PTR [rdi+0x14],ecx
  42e55c:	mov    QWORD PTR [rdi+0x38],rax
  42e560:	mov    ebx,0x1
  42e565:	jmp    42e58a <strcmp@plt+0x2ae02>
  42e567:	lea    rax,[rip+0x36842]        # 464db0 <strcmp@plt+0x61628>
  42e56e:	xor    ebx,ebx
  42e570:	cmp    DWORD PTR [rax],0x2
  42e573:	jl     42e58a <strcmp@plt+0x2ae02>
  42e575:	lea    rsi,[rip+0x1d2ef]        # 44b86b <strcmp@plt+0x480e3>
  42e57c:	xor    ebx,ebx
  42e57e:	mov    edi,0x6
  42e583:	xor    eax,eax
  42e585:	call   42e800 <strcmp@plt+0x2b078>
  42e58a:	mov    eax,ebx
  42e58c:	pop    rbx
  42e58d:	ret    
  42e58e:	xchg   ax,ax
  42e590:	push   rbx
  42e591:	movzx  eax,WORD PTR [rdi+0x1e]
  42e595:	cmp    rax,0xffff
  42e59b:	je     42e5b7 <strcmp@plt+0x2ae2f>
  42e59d:	mov    ecx,DWORD PTR [rdi+0x38]
  42e5a0:	add    ecx,DWORD PTR [rdi+0x14]
  42e5a3:	add    rax,QWORD PTR [rdi+0x30]
  42e5a7:	sub    ecx,eax
  42e5a9:	mov    DWORD PTR [rdi+0x14],ecx
  42e5ac:	mov    QWORD PTR [rdi+0x38],rax
  42e5b0:	mov    ebx,0x1
  42e5b5:	jmp    42e5da <strcmp@plt+0x2ae52>
  42e5b7:	lea    rax,[rip+0x367f2]        # 464db0 <strcmp@plt+0x61628>
  42e5be:	xor    ebx,ebx
  42e5c0:	cmp    DWORD PTR [rax],0x2
  42e5c3:	jl     42e5da <strcmp@plt+0x2ae52>
  42e5c5:	lea    rsi,[rip+0x1d2d4]        # 44b8a0 <strcmp@plt+0x48118>
  42e5cc:	xor    ebx,ebx
  42e5ce:	mov    edi,0x6
  42e5d3:	xor    eax,eax
  42e5d5:	call   42e800 <strcmp@plt+0x2b078>
  42e5da:	mov    eax,ebx
  42e5dc:	pop    rbx
  42e5dd:	ret    
  42e5de:	xchg   ax,ax
  42e5e0:	push   rbx
  42e5e1:	movzx  eax,WORD PTR [rdi+0x20]
  42e5e5:	cmp    rax,0xffff
  42e5eb:	je     42e607 <strcmp@plt+0x2ae7f>
  42e5ed:	mov    ecx,DWORD PTR [rdi+0x38]
  42e5f0:	add    ecx,DWORD PTR [rdi+0x14]
  42e5f3:	add    rax,QWORD PTR [rdi+0x30]
  42e5f7:	sub    ecx,eax
  42e5f9:	mov    DWORD PTR [rdi+0x14],ecx
  42e5fc:	mov    QWORD PTR [rdi+0x38],rax
  42e600:	mov    ebx,0x1
  42e605:	jmp    42e62a <strcmp@plt+0x2aea2>
  42e607:	lea    rax,[rip+0x367a2]        # 464db0 <strcmp@plt+0x61628>
  42e60e:	xor    ebx,ebx
  42e610:	cmp    DWORD PTR [rax],0x2
  42e613:	jl     42e62a <strcmp@plt+0x2aea2>
  42e615:	lea    rsi,[rip+0x1d2c5]        # 44b8e1 <strcmp@plt+0x48159>
  42e61c:	xor    ebx,ebx
  42e61e:	mov    edi,0x6
  42e623:	xor    eax,eax
  42e625:	call   42e800 <strcmp@plt+0x2b078>
  42e62a:	mov    eax,ebx
  42e62c:	pop    rbx
  42e62d:	ret    
  42e62e:	xchg   ax,ax
  42e630:	push   rbx
  42e631:	movzx  eax,WORD PTR [rdi+0x22]
  42e635:	cmp    rax,0xffff
  42e63b:	je     42e657 <strcmp@plt+0x2aecf>
  42e63d:	mov    ecx,DWORD PTR [rdi+0x38]
  42e640:	add    ecx,DWORD PTR [rdi+0x14]
  42e643:	add    rax,QWORD PTR [rdi+0x30]
  42e647:	sub    ecx,eax
  42e649:	mov    DWORD PTR [rdi+0x14],ecx
  42e64c:	mov    QWORD PTR [rdi+0x38],rax
  42e650:	mov    ebx,0x1
  42e655:	jmp    42e67a <strcmp@plt+0x2aef2>
  42e657:	lea    rax,[rip+0x36752]        # 464db0 <strcmp@plt+0x61628>
  42e65e:	xor    ebx,ebx
  42e660:	cmp    DWORD PTR [rax],0x2
  42e663:	jl     42e67a <strcmp@plt+0x2aef2>
  42e665:	lea    rsi,[rip+0x1d2ae]        # 44b91a <strcmp@plt+0x48192>
  42e66c:	xor    ebx,ebx
  42e66e:	mov    edi,0x6
  42e673:	xor    eax,eax
  42e675:	call   42e800 <strcmp@plt+0x2b078>
  42e67a:	mov    eax,ebx
  42e67c:	pop    rbx
  42e67d:	ret    
  42e67e:	xchg   ax,ax
  42e680:	push   rbx
  42e681:	movzx  eax,WORD PTR [rdi+0x24]
  42e685:	cmp    rax,0xffff
  42e68b:	je     42e6a7 <strcmp@plt+0x2af1f>
  42e68d:	mov    ecx,DWORD PTR [rdi+0x38]
  42e690:	add    ecx,DWORD PTR [rdi+0x14]
  42e693:	add    rax,QWORD PTR [rdi+0x30]
  42e697:	sub    ecx,eax
  42e699:	mov    DWORD PTR [rdi+0x14],ecx
  42e69c:	mov    QWORD PTR [rdi+0x38],rax
  42e6a0:	mov    ebx,0x1
  42e6a5:	jmp    42e6ca <strcmp@plt+0x2af42>
  42e6a7:	lea    rax,[rip+0x36702]        # 464db0 <strcmp@plt+0x61628>
  42e6ae:	xor    ebx,ebx
  42e6b0:	cmp    DWORD PTR [rax],0x2
  42e6b3:	jl     42e6ca <strcmp@plt+0x2af42>
  42e6b5:	lea    rsi,[rip+0x1d298]        # 44b954 <strcmp@plt+0x481cc>
  42e6bc:	xor    ebx,ebx
  42e6be:	mov    edi,0x6
  42e6c3:	xor    eax,eax
  42e6c5:	call   42e800 <strcmp@plt+0x2b078>
  42e6ca:	mov    eax,ebx
  42e6cc:	pop    rbx
  42e6cd:	ret    
  42e6ce:	xchg   ax,ax
  42e6d0:	push   rbp
  42e6d1:	push   r15
  42e6d3:	push   r14
  42e6d5:	push   r13
  42e6d7:	push   r12
  42e6d9:	push   rbx
  42e6da:	push   rax
  42e6db:	mov    DWORD PTR [rsp+0x4],r9d
  42e6e0:	mov    r15d,r8d
  42e6e3:	mov    r12,rcx
  42e6e6:	mov    r13d,edx
  42e6e9:	mov    r14d,esi
  42e6ec:	mov    rbp,rdi
  42e6ef:	mov    edi,0x28
  42e6f4:	call   432070 <strcmp@plt+0x2e8e8>
  42e6f9:	mov    rbx,rax
  42e6fc:	test   r14d,r14d
  42e6ff:	je     42e713 <strcmp@plt+0x2af8b>
  42e701:	mov    edx,0x20
  42e706:	mov    edi,r14d
  42e709:	mov    rsi,rbp
  42e70c:	call   427b10 <strcmp@plt+0x24388>
  42e711:	jmp    42e71b <strcmp@plt+0x2af93>
  42e713:	mov    rdi,rbp
  42e716:	call   423740 <strcmp@plt+0x1ffb8>
  42e71b:	mov    QWORD PTR [rbx],rax
  42e71e:	mov    DWORD PTR [rbx+0xc],r13d
  42e722:	mov    rdi,r12
  42e725:	call   403700 <strdup@plt>
  42e72a:	mov    QWORD PTR [rbx+0x10],rax
  42e72e:	mov    BYTE PTR [rbx+0x9],r15b
  42e732:	mov    eax,DWORD PTR [rsp+0x4]
  42e736:	mov    BYTE PTR [rbx+0x8],al
  42e739:	mov    al,BYTE PTR [rsp+0x40]
  42e73d:	mov    BYTE PTR [rbx+0x18],al
  42e740:	mov    BYTE PTR [rbx+0x19],0x1
  42e744:	lea    rdi,[rip+0xffffffffffff4855]        # 422fa0 <strcmp@plt+0x1f818>
  42e74b:	call   42bc00 <strcmp@plt+0x28478>
  42e750:	mov    QWORD PTR [rbx+0x20],rax
  42e754:	mov    rax,rbx
  42e757:	add    rsp,0x8
  42e75b:	pop    rbx
  42e75c:	pop    r12
  42e75e:	pop    r13
  42e760:	pop    r14
  42e762:	pop    r15
  42e764:	pop    rbp
  42e765:	ret    
  42e766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e770:	push   rbx
  42e771:	mov    rbx,rdi
  42e774:	mov    rdi,rsi
  42e777:	call   423740 <strcmp@plt+0x1ffb8>
  42e77c:	mov    rsi,QWORD PTR [rbx+0x20]
  42e780:	mov    rdi,rax
  42e783:	pop    rbx
  42e784:	jmp    42bcf0 <strcmp@plt+0x28568>
  42e789:	nop    DWORD PTR [rax+0x0]
  42e790:	test   rdi,rdi
  42e793:	je     42e7c1 <strcmp@plt+0x2b039>
  42e795:	push   rbx
  42e796:	mov    rbx,rdi
  42e799:	mov    rdi,QWORD PTR [rdi]
  42e79c:	call   422fa0 <strcmp@plt+0x1f818>
  42e7a1:	mov    rdi,QWORD PTR [rbx+0x10]
  42e7a5:	test   rdi,rdi
  42e7a8:	je     42e7af <strcmp@plt+0x2b027>
  42e7aa:	call   403780 <free@plt>
  42e7af:	mov    rdi,QWORD PTR [rbx+0x20]
  42e7b3:	call   42c250 <strcmp@plt+0x28ac8>
  42e7b8:	mov    rdi,rbx
  42e7bb:	pop    rbx
  42e7bc:	jmp    403780 <free@plt>
  42e7c1:	ret    
  42e7c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e7cc:	nop    DWORD PTR [rax+0x0]
  42e7d0:	push   rbx
  42e7d1:	mov    rbx,rdi
  42e7d4:	lea    rax,[rip+0x41dc5]        # 4705a0 <strcmp@plt+0x6ce18>
  42e7db:	mov    rsi,QWORD PTR [rax]
  42e7de:	lea    rax,[rip+0x41dc3]        # 4705a8 <strcmp@plt+0x6ce20>
  42e7e5:	mov    rdx,QWORD PTR [rax]
  42e7e8:	call   4376b0 <strcmp@plt+0x33f28>
  42e7ed:	mov    rdi,QWORD PTR [rbx]
  42e7f0:	call   428ed0 <strcmp@plt+0x25748>
  42e7f5:	mov    rdi,rbx
  42e7f8:	pop    rbx
  42e7f9:	jmp    403780 <free@plt>
  42e7fe:	xchg   ax,ax
  42e800:	sub    rsp,0xd8
  42e807:	mov    r10,rsi
  42e80a:	test   al,al
  42e80c:	je     42e84d <strcmp@plt+0x2b0c5>
  42e80e:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  42e814:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  42e81a:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  42e820:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  42e829:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  42e832:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  42e83b:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  42e844:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  42e84d:	mov    QWORD PTR [rsp+0x48],r9
  42e852:	mov    QWORD PTR [rsp+0x40],r8
  42e857:	mov    QWORD PTR [rsp+0x38],rcx
  42e85c:	mov    QWORD PTR [rsp+0x30],rdx
  42e861:	lea    rax,[rsp+0x20]
  42e866:	mov    QWORD PTR [rsp+0x10],rax
  42e86b:	lea    rax,[rsp+0xe0]
  42e873:	mov    QWORD PTR [rsp+0x8],rax
  42e878:	movabs rax,0x3000000010
  42e882:	mov    QWORD PTR [rsp],rax
  42e886:	add    edi,0xffffffff
  42e889:	cmp    edi,0x6
  42e88c:	ja     42e8b2 <strcmp@plt+0x2b12a>
  42e88e:	lea    rax,[rip+0x1d0f7]        # 44b98c <strcmp@plt+0x48204>
  42e895:	movsxd rcx,DWORD PTR [rax+rdi*4]
  42e899:	add    rcx,rax
  42e89c:	jmp    rcx
  42e89e:	lea    rsi,[rip+0x1d103]        # 44b9a8 <strcmp@plt+0x48220>
  42e8a5:	mov    rcx,rsp
  42e8a8:	mov    edi,0x2
  42e8ad:	jmp    42e933 <strcmp@plt+0x2b1ab>
  42e8b2:	lea    rsi,[rip+0x1d11b]        # 44b9d4 <strcmp@plt+0x4824c>
  42e8b9:	jmp    42e8e4 <strcmp@plt+0x2b15c>
  42e8bb:	lea    rsi,[rip+0x1d0eb]        # 44b9ad <strcmp@plt+0x48225>
  42e8c2:	mov    rcx,rsp
  42e8c5:	mov    edi,0x3
  42e8ca:	jmp    42e933 <strcmp@plt+0x2b1ab>
  42e8cc:	lea    rsi,[rip+0x1d0de]        # 44b9b1 <strcmp@plt+0x48229>
  42e8d3:	mov    rcx,rsp
  42e8d6:	mov    edi,0x4
  42e8db:	jmp    42e933 <strcmp@plt+0x2b1ab>
  42e8dd:	lea    rsi,[rip+0x1d0d5]        # 44b9b9 <strcmp@plt+0x48231>
  42e8e4:	mov    rcx,rsp
  42e8e7:	mov    edi,0x6
  42e8ec:	jmp    42e933 <strcmp@plt+0x2b1ab>
  42e8ee:	lea    rax,[rip+0x364bb]        # 464db0 <strcmp@plt+0x61628>
  42e8f5:	cmp    DWORD PTR [rax],0x0
  42e8f8:	jle    42e93b <strcmp@plt+0x2b1b3>
  42e8fa:	lea    rsi,[rip+0x1d0bd]        # 44b9be <strcmp@plt+0x48236>
  42e901:	jmp    42e92b <strcmp@plt+0x2b1a3>
  42e903:	lea    rax,[rip+0x364a6]        # 464db0 <strcmp@plt+0x61628>
  42e90a:	cmp    DWORD PTR [rax],0x2
  42e90d:	jl     42e93b <strcmp@plt+0x2b1b3>
  42e90f:	lea    rsi,[rip+0x1d0ae]        # 44b9c4 <strcmp@plt+0x4823c>
  42e916:	jmp    42e92b <strcmp@plt+0x2b1a3>
  42e918:	lea    rax,[rip+0x36491]        # 464db0 <strcmp@plt+0x61628>
  42e91f:	cmp    DWORD PTR [rax],0x3
  42e922:	jl     42e93b <strcmp@plt+0x2b1b3>
  42e924:	lea    rsi,[rip+0x1d0a1]        # 44b9cc <strcmp@plt+0x48244>
  42e92b:	mov    rcx,rsp
  42e92e:	mov    edi,0x7
  42e933:	mov    rdx,r10
  42e936:	call   42e950 <strcmp@plt+0x2b1c8>
  42e93b:	add    rsp,0xd8
  42e942:	ret    
  42e943:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e94d:	nop    DWORD PTR [rax]
  42e950:	push   rbp
  42e951:	push   r15
  42e953:	push   r14
  42e955:	push   r13
  42e957:	push   r12
  42e959:	push   rbx
  42e95a:	push   rax
  42e95b:	mov    rbp,rcx
  42e95e:	mov    r15,rdx
  42e961:	mov    r12,rsi
  42e964:	mov    r13d,edi
  42e967:	xor    edi,edi
  42e969:	call   403370 <time@plt>
  42e96e:	mov    QWORD PTR [rsp],rax
  42e972:	mov    rdi,rsp
  42e975:	call   403300 <localtime@plt>
  42e97a:	mov    r10d,DWORD PTR [rax]
  42e97d:	mov    ebx,DWORD PTR [rax+0x4]
  42e980:	mov    r9d,DWORD PTR [rax+0x8]
  42e984:	mov    r8d,DWORD PTR [rax+0xc]
  42e988:	mov    ecx,DWORD PTR [rax+0x10]
  42e98b:	mov    edx,DWORD PTR [rax+0x14]
  42e98e:	lea    rax,[rip+0x41b6f]        # 470504 <strcmp@plt+0x6cd7c>
  42e995:	cmp    DWORD PTR [rax],0x0
  42e998:	je     42e9f9 <strcmp@plt+0x2b271>
  42e99a:	lea    r14,[rip+0x402f7]        # 46ec98 <strcmp@plt+0x6b510>
  42e9a1:	mov    rdi,QWORD PTR [r14]
  42e9a4:	test   rdi,rdi
  42e9a7:	je     42ea49 <strcmp@plt+0x2b2c1>
  42e9ad:	add    edx,0x76c
  42e9b3:	add    ecx,0x1
  42e9b6:	sub    rsp,0x8
  42e9ba:	lea    rsi,[rip+0x1d017]        # 44b9d8 <strcmp@plt+0x48250>
  42e9c1:	mov    eax,0x0
  42e9c6:	push   r12
  42e9c8:	push   r10
  42e9ca:	push   rbx
  42e9cb:	call   403590 <fprintf@plt>
  42e9d0:	add    rsp,0x20
  42e9d4:	mov    rdi,QWORD PTR [r14]
  42e9d7:	mov    rsi,r15
  42e9da:	mov    rdx,rbp
  42e9dd:	call   403520 <vfprintf@plt>
  42e9e2:	mov    rsi,QWORD PTR [r14]
  42e9e5:	mov    edi,0xa
  42e9ea:	call   4034c0 <fputc@plt>
  42e9ef:	mov    rdi,QWORD PTR [r14]
  42e9f2:	call   403460 <fflush@plt>
  42e9f7:	jmp    42ea57 <strcmp@plt+0x2b2cf>
  42e9f9:	add    edx,0x76c
  42e9ff:	add    ecx,0x1
  42ea02:	lea    rdi,[rip+0x1cfcf]        # 44b9d8 <strcmp@plt+0x48250>
  42ea09:	mov    eax,0x0
  42ea0e:	mov    esi,edx
  42ea10:	mov    edx,ecx
  42ea12:	mov    ecx,r8d
  42ea15:	mov    r8d,r9d
  42ea18:	mov    r9d,ebx
  42ea1b:	push   r12
  42ea1d:	push   r10
  42ea1f:	call   403050 <printf@plt>
  42ea24:	add    rsp,0x10
  42ea28:	mov    rax,QWORD PTR [rip+0x35551]        # 463f80 <strcmp@plt+0x607f8>
  42ea2f:	mov    rdi,QWORD PTR [rax]
  42ea32:	mov    rsi,r15
  42ea35:	mov    rdx,rbp
  42ea38:	call   403520 <vfprintf@plt>
  42ea3d:	mov    edi,0xa
  42ea42:	call   403560 <putchar@plt>
  42ea47:	jmp    42ea57 <strcmp@plt+0x2b2cf>
  42ea49:	mov    edi,r13d
  42ea4c:	mov    rsi,r15
  42ea4f:	mov    rdx,rbp
  42ea52:	call   4036c0 <vsyslog@plt>
  42ea57:	add    rsp,0x8
  42ea5b:	pop    rbx
  42ea5c:	pop    r12
  42ea5e:	pop    r13
  42ea60:	pop    r14
  42ea62:	pop    r15
  42ea64:	pop    rbp
  42ea65:	ret    
  42ea66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ea70:	push   rbx
  42ea71:	test   rdi,rdi
  42ea74:	je     42ea9e <strcmp@plt+0x2b316>
  42ea76:	mov    rbx,rdi
  42ea79:	mov    rax,QWORD PTR [rip+0x35530]        # 463fb0 <strcmp@plt+0x60828>
  42ea80:	mov    rdx,QWORD PTR [rax]
  42ea83:	lea    rsi,[rip+0x13871]        # 4422fb <strcmp@plt+0x3eb73>
  42ea8a:	call   403410 <freopen@plt>
  42ea8f:	lea    rcx,[rip+0x40202]        # 46ec98 <strcmp@plt+0x6b510>
  42ea96:	mov    QWORD PTR [rcx],rax
  42ea99:	test   rax,rax
  42ea9c:	je     42eaa0 <strcmp@plt+0x2b318>
  42ea9e:	pop    rbx
  42ea9f:	ret    
  42eaa0:	call   403040 <__errno_location@plt>
  42eaa5:	mov    edi,DWORD PTR [rax]
  42eaa7:	call   403170 <strerror@plt>
  42eaac:	mov    rcx,rax
  42eaaf:	lea    rsi,[rip+0x1cf3b]        # 44b9f1 <strcmp@plt+0x48269>
  42eab6:	mov    edi,0x2
  42eabb:	xor    eax,eax
  42eabd:	mov    rdx,rbx
  42eac0:	pop    rbx
  42eac1:	jmp    42e800 <strcmp@plt+0x2b078>
  42eac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ead0:	lea    rax,[rip+0x401c1]        # 46ec98 <strcmp@plt+0x6b510>
  42ead7:	mov    rdi,QWORD PTR [rax]
  42eada:	test   rdi,rdi
  42eadd:	je     42eae4 <strcmp@plt+0x2b35c>
  42eadf:	jmp    4033e0 <fclose@plt>
  42eae4:	ret    
  42eae5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42eaef:	nop
  42eaf0:	push   r14
  42eaf2:	push   rbx
  42eaf3:	push   rax
  42eaf4:	mov    rbx,rsi
  42eaf7:	mov    r14,rdi
  42eafa:	mov    rdi,rsi
  42eafd:	call   426ab0 <strcmp@plt+0x23328>
  42eb02:	cmp    eax,0x9
  42eb05:	je     42eb1e <strcmp@plt+0x2b396>
  42eb07:	cmp    eax,0x2
  42eb0a:	jne    42eb34 <strcmp@plt+0x2b3ac>
  42eb0c:	mov    rdi,r14
  42eb0f:	mov    rsi,rbx
  42eb12:	add    rsp,0x8
  42eb16:	pop    rbx
  42eb17:	pop    r14
  42eb19:	jmp    42eba0 <strcmp@plt+0x2b418>
  42eb1e:	mov    rdi,rbx
  42eb21:	call   427370 <strcmp@plt+0x23be8>
  42eb26:	cmp    al,0xa
  42eb28:	je     42eb62 <strcmp@plt+0x2b3da>
  42eb2a:	cmp    al,0x2
  42eb2c:	jne    42eb68 <strcmp@plt+0x2b3e0>
  42eb2e:	mov    rbx,QWORD PTR [r14+0x20]
  42eb32:	jmp    42eb8c <strcmp@plt+0x2b404>
  42eb34:	lea    rax,[rip+0x36275]        # 464db0 <strcmp@plt+0x61628>
  42eb3b:	cmp    DWORD PTR [rax],0x3
  42eb3e:	jge    42eb44 <strcmp@plt+0x2b3bc>
  42eb40:	xor    ebx,ebx
  42eb42:	jmp    42eb8c <strcmp@plt+0x2b404>
  42eb44:	mov    rdi,rbx
  42eb47:	call   426ab0 <strcmp@plt+0x23328>
  42eb4c:	mov    ecx,eax
  42eb4e:	lea    rsi,[rip+0x1cecd]        # 44ba22 <strcmp@plt+0x4829a>
  42eb55:	xor    ebx,ebx
  42eb57:	mov    edi,0x7
  42eb5c:	xor    eax,eax
  42eb5e:	mov    edx,ecx
  42eb60:	jmp    42eb87 <strcmp@plt+0x2b3ff>
  42eb62:	mov    rbx,QWORD PTR [r14+0x28]
  42eb66:	jmp    42eb8c <strcmp@plt+0x2b404>
  42eb68:	lea    rcx,[rip+0x36241]        # 464db0 <strcmp@plt+0x61628>
  42eb6f:	cmp    DWORD PTR [rcx],0x0
  42eb72:	jle    42eb40 <strcmp@plt+0x2b3b8>
  42eb74:	movzx  edx,al
  42eb77:	lea    rsi,[rip+0x1d4ea]        # 44c068 <strcmp@plt+0x488e0>
  42eb7e:	xor    ebx,ebx
  42eb80:	mov    edi,0x5
  42eb85:	xor    eax,eax
  42eb87:	call   42e800 <strcmp@plt+0x2b078>
  42eb8c:	mov    rax,rbx
  42eb8f:	add    rsp,0x8
  42eb93:	pop    rbx
  42eb94:	pop    r14
  42eb96:	ret    
  42eb97:	nop    WORD PTR [rax+rax*1+0x0]
  42eba0:	push   rbp
  42eba1:	push   r14
  42eba3:	push   rbx
  42eba4:	mov    rbp,rsi
  42eba7:	mov    rbx,rdi
  42ebaa:	mov    rdi,rsi
  42ebad:	call   426bc0 <strcmp@plt+0x23438>
  42ebb2:	mov    rdi,rax
  42ebb5:	call   4279a0 <strcmp@plt+0x24218>
  42ebba:	mov    r14d,eax
  42ebbd:	mov    rdi,rbp
  42ebc0:	call   426bc0 <strcmp@plt+0x23438>
  42ebc5:	mov    rdi,rax
  42ebc8:	call   427940 <strcmp@plt+0x241b8>
  42ebcd:	cmp    DWORD PTR [rax+0x18],0x3
  42ebd1:	jne    42ebf6 <strcmp@plt+0x2b46e>
  42ebd3:	lea    rax,[rip+0x361d6]        # 464db0 <strcmp@plt+0x61628>
  42ebda:	cmp    DWORD PTR [rax],0x0
  42ebdd:	jle    42ec51 <strcmp@plt+0x2b4c9>
  42ebdf:	lea    rsi,[rip+0x1d419]        # 44bfff <strcmp@plt+0x48877>
  42ebe6:	xor    ebx,ebx
  42ebe8:	mov    edi,0x5
  42ebed:	xor    eax,eax
  42ebef:	call   42e800 <strcmp@plt+0x2b078>
  42ebf4:	jmp    42ec53 <strcmp@plt+0x2b4cb>
  42ebf6:	mov    rdi,rax
  42ebf9:	call   423200 <strcmp@plt+0x1fa78>
  42ebfe:	movzx  edx,ax
  42ec01:	cmp    edx,0xa
  42ec04:	je     42ec11 <strcmp@plt+0x2b489>
  42ec06:	cmp    edx,0x2
  42ec09:	jne    42ec2e <strcmp@plt+0x2b4a6>
  42ec0b:	add    rbx,0x10
  42ec0f:	jmp    42ec15 <strcmp@plt+0x2b48d>
  42ec11:	add    rbx,0x18
  42ec15:	mov    rdi,QWORD PTR [rbx]
  42ec18:	mov    esi,r14d
  42ec1b:	call   42d3d0 <strcmp@plt+0x29c48>
  42ec20:	test   rax,rax
  42ec23:	je     42ec51 <strcmp@plt+0x2b4c9>
  42ec25:	mov    rax,QWORD PTR [rax]
  42ec28:	mov    rbx,QWORD PTR [rax+0x28]
  42ec2c:	jmp    42ec53 <strcmp@plt+0x2b4cb>
  42ec2e:	lea    rax,[rip+0x3617b]        # 464db0 <strcmp@plt+0x61628>
  42ec35:	cmp    DWORD PTR [rax],0x0
  42ec38:	jle    42ec51 <strcmp@plt+0x2b4c9>
  42ec3a:	lea    rsi,[rip+0x1d3fa]        # 44c03b <strcmp@plt+0x488b3>
  42ec41:	xor    ebx,ebx
  42ec43:	mov    edi,0x5
  42ec48:	xor    eax,eax
  42ec4a:	call   42e800 <strcmp@plt+0x2b078>
  42ec4f:	jmp    42ec53 <strcmp@plt+0x2b4cb>
  42ec51:	xor    ebx,ebx
  42ec53:	mov    rax,rbx
  42ec56:	pop    rbx
  42ec57:	pop    r14
  42ec59:	pop    rbp
  42ec5a:	ret    
  42ec5b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ec60:	push   rbx
  42ec61:	mov    rbx,rdi
  42ec64:	mov    edx,DWORD PTR [rsi+0x18]
  42ec67:	lea    eax,[rdx-0x1]
  42ec6a:	cmp    eax,0x2
  42ec6d:	jae    42ec89 <strcmp@plt+0x2b501>
  42ec6f:	mov    rdi,rsi
  42ec72:	call   423200 <strcmp@plt+0x1fa78>
  42ec77:	movzx  edx,ax
  42ec7a:	cmp    edx,0xa
  42ec7d:	je     42ecb5 <strcmp@plt+0x2b52d>
  42ec7f:	cmp    edx,0x2
  42ec82:	jne    42ecc2 <strcmp@plt+0x2b53a>
  42ec84:	mov    rax,QWORD PTR [rbx]
  42ec87:	jmp    42ecb9 <strcmp@plt+0x2b531>
  42ec89:	cmp    edx,0x3
  42ec8c:	jne    42ec97 <strcmp@plt+0x2b50f>
  42ec8e:	mov    rdi,rbx
  42ec91:	pop    rbx
  42ec92:	jmp    42eaf0 <strcmp@plt+0x2b368>
  42ec97:	lea    rax,[rip+0x36112]        # 464db0 <strcmp@plt+0x61628>
  42ec9e:	cmp    DWORD PTR [rax],0x3
  42eca1:	jl     42ece5 <strcmp@plt+0x2b55d>
  42eca3:	lea    rsi,[rip+0x1cdb1]        # 44ba5b <strcmp@plt+0x482d3>
  42ecaa:	xor    ebx,ebx
  42ecac:	mov    edi,0x7
  42ecb1:	xor    eax,eax
  42ecb3:	jmp    42ecde <strcmp@plt+0x2b556>
  42ecb5:	mov    rax,QWORD PTR [rbx+0x8]
  42ecb9:	mov    rax,QWORD PTR [rax]
  42ecbc:	mov    rbx,QWORD PTR [rax+0x28]
  42ecc0:	jmp    42ece7 <strcmp@plt+0x2b55f>
  42ecc2:	lea    rax,[rip+0x360e7]        # 464db0 <strcmp@plt+0x61628>
  42ecc9:	cmp    DWORD PTR [rax],0x0
  42eccc:	jle    42ece5 <strcmp@plt+0x2b55d>
  42ecce:	lea    rsi,[rip+0x1d3c0]        # 44c095 <strcmp@plt+0x4890d>
  42ecd5:	xor    ebx,ebx
  42ecd7:	mov    edi,0x5
  42ecdc:	xor    eax,eax
  42ecde:	call   42e800 <strcmp@plt+0x2b078>
  42ece3:	jmp    42ece7 <strcmp@plt+0x2b55f>
  42ece5:	xor    ebx,ebx
  42ece7:	mov    rax,rbx
  42ecea:	pop    rbx
  42eceb:	ret    
  42ecec:	nop    DWORD PTR [rax+0x0]
  42ecf0:	push   r15
  42ecf2:	push   r14
  42ecf4:	push   r12
  42ecf6:	push   rbx
  42ecf7:	sub    rsp,0x38
  42ecfb:	mov    edi,0x38
  42ed00:	call   432070 <strcmp@plt+0x2e8e8>
  42ed05:	mov    rbx,rax
  42ed08:	lea    rax,[rip+0x360a1]        # 464db0 <strcmp@plt+0x61628>
  42ed0f:	cmp    DWORD PTR [rax],0x3
  42ed12:	jl     42ed27 <strcmp@plt+0x2b59f>
  42ed14:	lea    rsi,[rip+0x1cd72]        # 44ba8d <strcmp@plt+0x48305>
  42ed1b:	mov    edi,0x7
  42ed20:	xor    eax,eax
  42ed22:	call   42e800 <strcmp@plt+0x2b078>
  42ed27:	mov    edi,0x20
  42ed2c:	call   41dbb0 <strcmp@plt+0x1a428>
  42ed31:	mov    QWORD PTR [rbx],rax
  42ed34:	mov    edi,0x80
  42ed39:	call   41dbb0 <strcmp@plt+0x1a428>
  42ed3e:	mov    QWORD PTR [rbx+0x8],rax
  42ed42:	xor    eax,eax
  42ed44:	call   42d0e0 <strcmp@plt+0x29958>
  42ed49:	mov    QWORD PTR [rbx+0x10],rax
  42ed4d:	xor    eax,eax
  42ed4f:	call   42d0e0 <strcmp@plt+0x29958>
  42ed54:	mov    QWORD PTR [rbx+0x18],rax
  42ed58:	vxorps xmm0,xmm0,xmm0
  42ed5c:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  42ed62:	mov    DWORD PTR [rsp+0x30],0x0
  42ed6a:	lea    r14,[rsp+0x20]
  42ed6f:	mov    esi,0x2
  42ed74:	mov    rdi,r14
  42ed77:	call   423e90 <strcmp@plt+0x20708>
  42ed7c:	vxorps xmm0,xmm0,xmm0
  42ed80:	vmovaps XMMWORD PTR [rsp],xmm0
  42ed85:	mov    DWORD PTR [rsp+0x10],0x0
  42ed8d:	mov    r15,rsp
  42ed90:	mov    esi,0xa
  42ed95:	mov    rdi,r15
  42ed98:	call   423e90 <strcmp@plt+0x20708>
  42ed9d:	mov    r12,QWORD PTR [rbx]
  42eda0:	mov    edi,0x20
  42eda5:	call   41dbb0 <strcmp@plt+0x1a428>
  42edaa:	xor    edx,edx
  42edac:	mov    rdi,r12
  42edaf:	mov    rsi,r14
  42edb2:	mov    rcx,rax
  42edb5:	call   42ee50 <strcmp@plt+0x2b6c8>
  42edba:	mov    r14,QWORD PTR [rbx+0x8]
  42edbe:	mov    edi,0x80
  42edc3:	call   41dbb0 <strcmp@plt+0x1a428>
  42edc8:	xor    edx,edx
  42edca:	mov    rdi,r14
  42edcd:	mov    rsi,r15
  42edd0:	mov    rcx,rax
  42edd3:	call   42ee50 <strcmp@plt+0x2b6c8>
  42edd8:	mov    edi,0x20
  42eddd:	call   41dbb0 <strcmp@plt+0x1a428>
  42ede2:	mov    QWORD PTR [rbx+0x20],rax
  42ede6:	mov    edi,0x80
  42edeb:	call   41dbb0 <strcmp@plt+0x1a428>
  42edf0:	mov    QWORD PTR [rbx+0x28],rax
  42edf4:	mov    rcx,QWORD PTR [rbx]
  42edf7:	mov    rcx,QWORD PTR [rcx]
  42edfa:	cmp    QWORD PTR [rcx+0x28],0x0
  42edff:	je     42ee26 <strcmp@plt+0x2b69e>
  42ee01:	mov    rcx,QWORD PTR [rbx+0x8]
  42ee05:	mov    rcx,QWORD PTR [rcx]
  42ee08:	cmp    QWORD PTR [rcx+0x28],0x0
  42ee0d:	je     42ee26 <strcmp@plt+0x2b69e>
  42ee0f:	test   rax,rax
  42ee12:	je     42ee26 <strcmp@plt+0x2b69e>
  42ee14:	mov    rax,QWORD PTR [rbx+0x20]
  42ee18:	test   rax,rax
  42ee1b:	je     42ee26 <strcmp@plt+0x2b69e>
  42ee1d:	mov    DWORD PTR [rbx+0x30],0x0
  42ee24:	jmp    42ee3b <strcmp@plt+0x2b6b3>
  42ee26:	lea    rsi,[rip+0x1cc71]        # 44ba9e <strcmp@plt+0x48316>
  42ee2d:	xor    ebx,ebx
  42ee2f:	mov    edi,0x1
  42ee34:	xor    eax,eax
  42ee36:	call   42e800 <strcmp@plt+0x2b078>
  42ee3b:	mov    rax,rbx
  42ee3e:	add    rsp,0x38
  42ee42:	pop    rbx
  42ee43:	pop    r12
  42ee45:	pop    r14
  42ee47:	pop    r15
  42ee49:	ret    
  42ee4a:	nop    WORD PTR [rax+rax*1+0x0]
  42ee50:	push   r15
  42ee52:	push   r14
  42ee54:	push   r12
  42ee56:	push   rbx
  42ee57:	push   rax
  42ee58:	mov    r15,rcx
  42ee5b:	mov    r14,rsi
  42ee5e:	mov    r12,rdi
  42ee61:	mov    rdi,rsi
  42ee64:	mov    esi,edx
  42ee66:	call   430320 <strcmp@plt+0x2cb98>
  42ee6b:	mov    rbx,rax
  42ee6e:	mov    rdi,r12
  42ee71:	mov    rsi,rax
  42ee74:	call   41e240 <strcmp@plt+0x1aab8>
  42ee79:	mov    r12,rax
  42ee7c:	mov    rdi,rbx
  42ee7f:	call   41db70 <strcmp@plt+0x1a3e8>
  42ee84:	test   r12,r12
  42ee87:	je     42eec0 <strcmp@plt+0x2b738>
  42ee89:	cmp    QWORD PTR [r12+0x28],0x0
  42ee8f:	je     42eee1 <strcmp@plt+0x2b759>
  42ee91:	lea    rax,[rip+0x35f18]        # 464db0 <strcmp@plt+0x61628>
  42ee98:	cmp    DWORD PTR [rax],0x3
  42ee9b:	jl     42eee6 <strcmp@plt+0x2b75e>
  42ee9d:	mov    rdi,r14
  42eea0:	call   423f30 <strcmp@plt+0x207a8>
  42eea5:	mov    rcx,rax
  42eea8:	lea    rsi,[rip+0x1cfdb]        # 44be8a <strcmp@plt+0x48702>
  42eeaf:	mov    edi,0x7
  42eeb4:	xor    eax,eax
  42eeb6:	mov    rdx,rcx
  42eeb9:	call   42e800 <strcmp@plt+0x2b078>
  42eebe:	jmp    42eee6 <strcmp@plt+0x2b75e>
  42eec0:	lea    rax,[rip+0x35ee9]        # 464db0 <strcmp@plt+0x61628>
  42eec7:	cmp    DWORD PTR [rax],0x3
  42eeca:	jl     42eee6 <strcmp@plt+0x2b75e>
  42eecc:	lea    rsi,[rip+0x1cf83]        # 44be56 <strcmp@plt+0x486ce>
  42eed3:	mov    edi,0x7
  42eed8:	xor    eax,eax
  42eeda:	call   42e800 <strcmp@plt+0x2b078>
  42eedf:	jmp    42eee6 <strcmp@plt+0x2b75e>
  42eee1:	mov    QWORD PTR [r12+0x28],r15
  42eee6:	mov    rax,r12
  42eee9:	add    rsp,0x8
  42eeed:	pop    rbx
  42eeee:	pop    r12
  42eef0:	pop    r14
  42eef2:	pop    r15
  42eef4:	ret    
  42eef5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42eeff:	nop
  42ef00:	push   rbp
  42ef01:	push   r15
  42ef03:	push   r14
  42ef05:	push   r13
  42ef07:	push   r12
  42ef09:	push   rbx
  42ef0a:	sub    rsp,0x408
  42ef11:	mov    r15,rsi
  42ef14:	mov    r14,rdi
  42ef17:	mov    rax,QWORD PTR [rdi]
  42ef1a:	mov    rax,QWORD PTR [rax]
  42ef1d:	mov    rdi,QWORD PTR [rax+0x28]
  42ef21:	call   41dda0 <strcmp@plt+0x1a618>
  42ef26:	mov    rdi,QWORD PTR [r14]
  42ef29:	xor    ebx,ebx
  42ef2b:	xor    esi,esi
  42ef2d:	call   41dda0 <strcmp@plt+0x1a618>
  42ef32:	mov    rax,QWORD PTR [r14+0x8]
  42ef36:	mov    rax,QWORD PTR [rax]
  42ef39:	mov    rdi,QWORD PTR [rax+0x28]
  42ef3d:	mov    rsi,r15
  42ef40:	call   41dda0 <strcmp@plt+0x1a618>
  42ef45:	mov    rdi,QWORD PTR [r14+0x8]
  42ef49:	xor    esi,esi
  42ef4b:	call   41dda0 <strcmp@plt+0x1a618>
  42ef50:	mov    rdi,QWORD PTR [r14+0x10]
  42ef54:	mov    rax,QWORD PTR [rdi]
  42ef57:	cmp    DWORD PTR [rax],0x0
  42ef5a:	je     42efbe <strcmp@plt+0x2b836>
  42ef5c:	mov    r13d,0x3
  42ef62:	xor    ebp,ebp
  42ef64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ef6e:	xchg   ax,ax
  42ef70:	mov    rcx,QWORD PTR [rax+0x10]
  42ef74:	mov    edx,ebp
  42ef76:	shr    edx,0x4
  42ef79:	mov    esi,ebx
  42ef7b:	and    sil,0x1e
  42ef7f:	shlx   esi,r13d,esi
  42ef84:	test   DWORD PTR [rcx+rdx*4],esi
  42ef87:	jne    42efb1 <strcmp@plt+0x2b829>
  42ef89:	mov    rax,QWORD PTR [rax+0x20]
  42ef8d:	mov    ecx,ebp
  42ef8f:	mov    r12,QWORD PTR [rax+rcx*8]
  42ef93:	mov    rax,QWORD PTR [r12]
  42ef97:	mov    rdi,QWORD PTR [rax+0x28]
  42ef9b:	mov    rsi,r15
  42ef9e:	call   41dda0 <strcmp@plt+0x1a618>
  42efa3:	xor    esi,esi
  42efa5:	mov    rdi,r12
  42efa8:	call   41dda0 <strcmp@plt+0x1a618>
  42efad:	mov    rdi,QWORD PTR [r14+0x10]
  42efb1:	add    ebp,0x1
  42efb4:	mov    rax,QWORD PTR [rdi]
  42efb7:	add    ebx,0x2
  42efba:	cmp    ebp,DWORD PTR [rax]
  42efbc:	jne    42ef70 <strcmp@plt+0x2b7e8>
  42efbe:	call   42d480 <strcmp@plt+0x29cf8>
  42efc3:	mov    rdi,QWORD PTR [r14+0x18]
  42efc7:	mov    rax,QWORD PTR [rdi]
  42efca:	cmp    DWORD PTR [rax],0x0
  42efcd:	je     42f02e <strcmp@plt+0x2b8a6>
  42efcf:	xor    ebx,ebx
  42efd1:	mov    r13d,0x3
  42efd7:	xor    ebp,ebp
  42efd9:	nop    DWORD PTR [rax+0x0]
  42efe0:	mov    rcx,QWORD PTR [rax+0x10]
  42efe4:	mov    edx,ebp
  42efe6:	shr    edx,0x4
  42efe9:	mov    esi,ebx
  42efeb:	and    sil,0x1e
  42efef:	shlx   esi,r13d,esi
  42eff4:	test   DWORD PTR [rcx+rdx*4],esi
  42eff7:	jne    42f021 <strcmp@plt+0x2b899>
  42eff9:	mov    rax,QWORD PTR [rax+0x20]
  42effd:	mov    ecx,ebp
  42efff:	mov    r12,QWORD PTR [rax+rcx*8]
  42f003:	mov    rax,QWORD PTR [r12]
  42f007:	mov    rdi,QWORD PTR [rax+0x28]
  42f00b:	mov    rsi,r15
  42f00e:	call   41dda0 <strcmp@plt+0x1a618>
  42f013:	xor    esi,esi
  42f015:	mov    rdi,r12
  42f018:	call   41dda0 <strcmp@plt+0x1a618>
  42f01d:	mov    rdi,QWORD PTR [r14+0x18]
  42f021:	add    ebp,0x1
  42f024:	mov    rax,QWORD PTR [rdi]
  42f027:	add    ebx,0x2
  42f02a:	cmp    ebp,DWORD PTR [rax]
  42f02c:	jne    42efe0 <strcmp@plt+0x2b858>
  42f02e:	call   42d480 <strcmp@plt+0x29cf8>
  42f033:	mov    rdi,QWORD PTR [r14+0x20]
  42f037:	mov    rbp,QWORD PTR [rdi]
  42f03a:	test   rbp,rbp
  42f03d:	je     42f0ac <strcmp@plt+0x2b924>
  42f03f:	xor    ebx,ebx
  42f041:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f04b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f050:	cmp    QWORD PTR [rbp+0x8],0x0
  42f055:	je     42f063 <strcmp@plt+0x2b8db>
  42f057:	mov    rdi,QWORD PTR [rbp+0x28]
  42f05b:	mov    rsi,r15
  42f05e:	call   41dda0 <strcmp@plt+0x1a618>
  42f063:	mov    rax,QWORD PTR [rbp+0x10]
  42f067:	mov    rcx,QWORD PTR [rbp+0x18]
  42f06b:	test   rax,rax
  42f06e:	je     42f080 <strcmp@plt+0x2b8f8>
  42f070:	test   rcx,rcx
  42f073:	je     42f0a0 <strcmp@plt+0x2b918>
  42f075:	mov    QWORD PTR [rsp+rbx*8],rcx
  42f079:	add    rbx,0x1
  42f07d:	jmp    42f0a0 <strcmp@plt+0x2b918>
  42f07f:	nop
  42f080:	test   rcx,rcx
  42f083:	je     42f08a <strcmp@plt+0x2b902>
  42f085:	mov    rax,rcx
  42f088:	jmp    42f0a0 <strcmp@plt+0x2b918>
  42f08a:	test   rbx,rbx
  42f08d:	je     42f0a8 <strcmp@plt+0x2b920>
  42f08f:	mov    rax,QWORD PTR [rsp+rbx*8-0x8]
  42f094:	add    rbx,0xffffffffffffffff
  42f098:	nop    DWORD PTR [rax+rax*1+0x0]
  42f0a0:	mov    rbp,rax
  42f0a3:	test   rax,rax
  42f0a6:	jne    42f050 <strcmp@plt+0x2b8c8>
  42f0a8:	mov    rdi,QWORD PTR [r14+0x20]
  42f0ac:	xor    esi,esi
  42f0ae:	call   41dda0 <strcmp@plt+0x1a618>
  42f0b3:	mov    rdi,QWORD PTR [r14+0x28]
  42f0b7:	mov    rbp,QWORD PTR [rdi]
  42f0ba:	test   rbp,rbp
  42f0bd:	je     42f12c <strcmp@plt+0x2b9a4>
  42f0bf:	xor    ebx,ebx
  42f0c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f0cb:	nop    DWORD PTR [rax+rax*1+0x0]
  42f0d0:	cmp    QWORD PTR [rbp+0x8],0x0
  42f0d5:	je     42f0e3 <strcmp@plt+0x2b95b>
  42f0d7:	mov    rdi,QWORD PTR [rbp+0x28]
  42f0db:	mov    rsi,r15
  42f0de:	call   41dda0 <strcmp@plt+0x1a618>
  42f0e3:	mov    rax,QWORD PTR [rbp+0x10]
  42f0e7:	mov    rcx,QWORD PTR [rbp+0x18]
  42f0eb:	test   rax,rax
  42f0ee:	je     42f100 <strcmp@plt+0x2b978>
  42f0f0:	test   rcx,rcx
  42f0f3:	je     42f120 <strcmp@plt+0x2b998>
  42f0f5:	mov    QWORD PTR [rsp+rbx*8],rcx
  42f0f9:	add    rbx,0x1
  42f0fd:	jmp    42f120 <strcmp@plt+0x2b998>
  42f0ff:	nop
  42f100:	test   rcx,rcx
  42f103:	je     42f10a <strcmp@plt+0x2b982>
  42f105:	mov    rax,rcx
  42f108:	jmp    42f120 <strcmp@plt+0x2b998>
  42f10a:	test   rbx,rbx
  42f10d:	je     42f128 <strcmp@plt+0x2b9a0>
  42f10f:	mov    rax,QWORD PTR [rsp+rbx*8-0x8]
  42f114:	add    rbx,0xffffffffffffffff
  42f118:	nop    DWORD PTR [rax+rax*1+0x0]
  42f120:	mov    rbp,rax
  42f123:	test   rax,rax
  42f126:	jne    42f0d0 <strcmp@plt+0x2b948>
  42f128:	mov    rdi,QWORD PTR [r14+0x28]
  42f12c:	xor    esi,esi
  42f12e:	call   41dda0 <strcmp@plt+0x1a618>
  42f133:	mov    rdi,r14
  42f136:	add    rsp,0x408
  42f13d:	pop    rbx
  42f13e:	pop    r12
  42f140:	pop    r13
  42f142:	pop    r14
  42f144:	pop    r15
  42f146:	pop    rbp
  42f147:	jmp    403780 <free@plt>
  42f14c:	nop    DWORD PTR [rax+0x0]
  42f150:	push   rbp
  42f151:	push   r15
  42f153:	push   r14
  42f155:	push   r13
  42f157:	push   r12
  42f159:	push   rbx
  42f15a:	sub    rsp,0x28
  42f15e:	mov    r15,rdx
  42f161:	mov    r13,rsi
  42f164:	mov    r14,rdi
  42f167:	mov    edx,DWORD PTR [rsi+0x18]
  42f16a:	cmp    edx,0x3
  42f16d:	je     42f199 <strcmp@plt+0x2ba11>
  42f16f:	cmp    edx,0x2
  42f172:	je     42f247 <strcmp@plt+0x2babf>
  42f178:	cmp    edx,0x1
  42f17b:	jne    42f25c <strcmp@plt+0x2bad4>
  42f181:	lea    rsi,[rip+0x1c942]        # 44baca <strcmp@plt+0x48342>
  42f188:	mov    edi,0x3
  42f18d:	xor    eax,eax
  42f18f:	call   42e800 <strcmp@plt+0x2b078>
  42f194:	jmp    42f407 <strcmp@plt+0x2bc7f>
  42f199:	mov    rdi,r13
  42f19c:	call   426ab0 <strcmp@plt+0x23328>
  42f1a1:	cmp    eax,0x9
  42f1a4:	je     42f274 <strcmp@plt+0x2baec>
  42f1aa:	cmp    eax,0x2
  42f1ad:	jne    42f295 <strcmp@plt+0x2bb0d>
  42f1b3:	mov    rdi,r13
  42f1b6:	call   427040 <strcmp@plt+0x238b8>
  42f1bb:	mov    ebx,eax
  42f1bd:	mov    rdi,r13
  42f1c0:	call   428500 <strcmp@plt+0x24d78>
  42f1c5:	test   rax,rax
  42f1c8:	je     42f407 <strcmp@plt+0x2bc7f>
  42f1ce:	mov    r12,rax
  42f1d1:	mov    DWORD PTR [rsp+0xc],ebx
  42f1d5:	mov    rdi,rax
  42f1d8:	call   423200 <strcmp@plt+0x1fa78>
  42f1dd:	mov    ebx,eax
  42f1df:	mov    rdi,r14
  42f1e2:	mov    rsi,r13
  42f1e5:	call   42eba0 <strcmp@plt+0x2b418>
  42f1ea:	mov    rbp,rax
  42f1ed:	test   rax,rax
  42f1f0:	jne    42f49d <strcmp@plt+0x2bd15>
  42f1f6:	vxorps xmm0,xmm0,xmm0
  42f1fa:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  42f200:	mov    DWORD PTR [rsp+0x20],0x0
  42f208:	movzx  edx,bx
  42f20b:	cmp    edx,0xa
  42f20e:	je     42f441 <strcmp@plt+0x2bcb9>
  42f214:	cmp    edx,0x2
  42f217:	jne    42f55b <strcmp@plt+0x2bdd3>
  42f21d:	lea    rdi,[rsp+0x10]
  42f222:	mov    esi,0x2
  42f227:	call   423e90 <strcmp@plt+0x20708>
  42f22c:	mov    edi,0x20
  42f231:	call   41dbb0 <strcmp@plt+0x1a428>
  42f236:	mov    edi,0x20
  42f23b:	mov    rbp,rax
  42f23e:	lea    rax,[r14+0x10]
  42f242:	jmp    42f466 <strcmp@plt+0x2bcde>
  42f247:	mov    rdi,r13
  42f24a:	call   424400 <strcmp@plt+0x20c78>
  42f24f:	cmp    al,0xa
  42f251:	je     42f2c3 <strcmp@plt+0x2bb3b>
  42f253:	cmp    al,0x2
  42f255:	jne    42f2d0 <strcmp@plt+0x2bb48>
  42f257:	mov    rax,QWORD PTR [r14]
  42f25a:	jmp    42f2c7 <strcmp@plt+0x2bb3f>
  42f25c:	lea    rsi,[rip+0x1c89d]        # 44bb00 <strcmp@plt+0x48378>
  42f263:	mov    edi,0x3
  42f268:	xor    eax,eax
  42f26a:	call   42e800 <strcmp@plt+0x2b078>
  42f26f:	jmp    42f407 <strcmp@plt+0x2bc7f>
  42f274:	mov    rdi,r13
  42f277:	call   427370 <strcmp@plt+0x23be8>
  42f27c:	cmp    al,0xa
  42f27e:	je     42f371 <strcmp@plt+0x2bbe9>
  42f284:	cmp    al,0x2
  42f286:	jne    42f377 <strcmp@plt+0x2bbef>
  42f28c:	mov    rbp,QWORD PTR [r14+0x20]
  42f290:	jmp    42f39f <strcmp@plt+0x2bc17>
  42f295:	lea    rax,[rip+0x35b14]        # 464db0 <strcmp@plt+0x61628>
  42f29c:	xor    ebp,ebp
  42f29e:	cmp    DWORD PTR [rax],0x3
  42f2a1:	jl     42f52c <strcmp@plt+0x2bda4>
  42f2a7:	mov    rdi,r13
  42f2aa:	call   426ab0 <strcmp@plt+0x23328>
  42f2af:	mov    ecx,eax
  42f2b1:	lea    rsi,[rip+0x1ce9b]        # 44c153 <strcmp@plt+0x489cb>
  42f2b8:	mov    edi,0x7
  42f2bd:	xor    eax,eax
  42f2bf:	mov    edx,ecx
  42f2c1:	jmp    42f26a <strcmp@plt+0x2bae2>
  42f2c3:	mov    rax,QWORD PTR [r14+0x8]
  42f2c7:	mov    rax,QWORD PTR [rax]
  42f2ca:	mov    rbp,QWORD PTR [rax+0x28]
  42f2ce:	jmp    42f2f8 <strcmp@plt+0x2bb70>
  42f2d0:	lea    rcx,[rip+0x35ad9]        # 464db0 <strcmp@plt+0x61628>
  42f2d7:	cmp    DWORD PTR [rcx],0x0
  42f2da:	jle    42f2f6 <strcmp@plt+0x2bb6e>
  42f2dc:	movzx  edx,al
  42f2df:	lea    rsi,[rip+0x1cdaf]        # 44c095 <strcmp@plt+0x4890d>
  42f2e6:	xor    ebp,ebp
  42f2e8:	mov    edi,0x5
  42f2ed:	xor    eax,eax
  42f2ef:	call   42e800 <strcmp@plt+0x2b078>
  42f2f4:	jmp    42f2f8 <strcmp@plt+0x2bb70>
  42f2f6:	xor    ebp,ebp
  42f2f8:	mov    rdi,r13
  42f2fb:	call   4243f0 <strcmp@plt+0x20c68>
  42f300:	mov    rbx,rax
  42f303:	mov    rdi,r13
  42f306:	call   4243e0 <strcmp@plt+0x20c58>
  42f30b:	movzx  edx,al
  42f30e:	mov    rdi,rbp
  42f311:	mov    rsi,rbx
  42f314:	mov    rcx,r15
  42f317:	call   42ee50 <strcmp@plt+0x2b6c8>
  42f31c:	lea    rcx,[rip+0x35a8d]        # 464db0 <strcmp@plt+0x61628>
  42f323:	mov    ecx,DWORD PTR [rcx]
  42f325:	test   rax,rax
  42f328:	je     42f34a <strcmp@plt+0x2bbc2>
  42f32a:	cmp    ecx,0x3
  42f32d:	jl     42f522 <strcmp@plt+0x2bd9a>
  42f333:	mov    rdi,r13
  42f336:	call   424490 <strcmp@plt+0x20d08>
  42f33b:	mov    rcx,rax
  42f33e:	lea    rsi,[rip+0x1cddf]        # 44c124 <strcmp@plt+0x4899c>
  42f345:	jmp    42f4e6 <strcmp@plt+0x2bd5e>
  42f34a:	xor    ebp,ebp
  42f34c:	cmp    ecx,0x3
  42f34f:	jl     42f52c <strcmp@plt+0x2bda4>
  42f355:	mov    rdi,r13
  42f358:	call   424490 <strcmp@plt+0x20d08>
  42f35d:	mov    rcx,rax
  42f360:	lea    rsi,[rip+0x1cd59]        # 44c0c0 <strcmp@plt+0x48938>
  42f367:	mov    edi,0x7
  42f36c:	jmp    42f3fd <strcmp@plt+0x2bc75>
  42f371:	mov    rbp,QWORD PTR [r14+0x28]
  42f375:	jmp    42f39f <strcmp@plt+0x2bc17>
  42f377:	lea    rcx,[rip+0x35a32]        # 464db0 <strcmp@plt+0x61628>
  42f37e:	cmp    DWORD PTR [rcx],0x0
  42f381:	jle    42f39d <strcmp@plt+0x2bc15>
  42f383:	movzx  edx,al
  42f386:	lea    rsi,[rip+0x1ccdb]        # 44c068 <strcmp@plt+0x488e0>
  42f38d:	xor    ebp,ebp
  42f38f:	mov    edi,0x5
  42f394:	xor    eax,eax
  42f396:	call   42e800 <strcmp@plt+0x2b078>
  42f39b:	jmp    42f39f <strcmp@plt+0x2bc17>
  42f39d:	xor    ebp,ebp
  42f39f:	mov    rdi,rbp
  42f3a2:	mov    rsi,r13
  42f3a5:	mov    rdx,r15
  42f3a8:	call   42fe90 <strcmp@plt+0x2c708>
  42f3ad:	lea    rcx,[rip+0x359fc]        # 464db0 <strcmp@plt+0x61628>
  42f3b4:	mov    ecx,DWORD PTR [rcx]
  42f3b6:	cmp    eax,0x1
  42f3b9:	jne    42f3db <strcmp@plt+0x2bc53>
  42f3bb:	cmp    ecx,0x3
  42f3be:	jl     42f522 <strcmp@plt+0x2bd9a>
  42f3c4:	mov    rdi,r13
  42f3c7:	call   426ae0 <strcmp@plt+0x23358>
  42f3cc:	mov    rcx,rax
  42f3cf:	lea    rsi,[rip+0x1cea7]        # 44c27d <strcmp@plt+0x48af5>
  42f3d6:	jmp    42f4e6 <strcmp@plt+0x2bd5e>
  42f3db:	xor    ebp,ebp
  42f3dd:	cmp    ecx,0x2
  42f3e0:	jl     42f52c <strcmp@plt+0x2bda4>
  42f3e6:	mov    rdi,r13
  42f3e9:	call   4255b0 <strcmp@plt+0x21e28>
  42f3ee:	mov    rcx,rax
  42f3f1:	lea    rsi,[rip+0x1ce44]        # 44c23c <strcmp@plt+0x48ab4>
  42f3f8:	mov    edi,0x6
  42f3fd:	xor    eax,eax
  42f3ff:	mov    rdx,rcx
  42f402:	call   42e800 <strcmp@plt+0x2b078>
  42f407:	lea    rax,[rip+0x359a2]        # 464db0 <strcmp@plt+0x61628>
  42f40e:	xor    ebp,ebp
  42f410:	cmp    DWORD PTR [rax],0x3
  42f413:	jl     42f52c <strcmp@plt+0x2bda4>
  42f419:	mov    rdi,r13
  42f41c:	call   423130 <strcmp@plt+0x1f9a8>
  42f421:	mov    rcx,rax
  42f424:	lea    rsi,[rip+0x1c6ff]        # 44bb2a <strcmp@plt+0x483a2>
  42f42b:	xor    ebp,ebp
  42f42d:	mov    edi,0x7
  42f432:	xor    eax,eax
  42f434:	mov    rdx,rcx
  42f437:	call   42e800 <strcmp@plt+0x2b078>
  42f43c:	jmp    42f52c <strcmp@plt+0x2bda4>
  42f441:	lea    rdi,[rsp+0x10]
  42f446:	mov    esi,0xa
  42f44b:	call   423e90 <strcmp@plt+0x20708>
  42f450:	mov    edi,0x80
  42f455:	call   41dbb0 <strcmp@plt+0x1a428>
  42f45a:	mov    edi,0x80
  42f45f:	mov    rbp,rax
  42f462:	lea    rax,[r14+0x18]
  42f466:	mov    rbx,QWORD PTR [rax]
  42f469:	call   41dbb0 <strcmp@plt+0x1a428>
  42f46e:	lea    rsi,[rsp+0x10]
  42f473:	xor    edx,edx
  42f475:	mov    rdi,rbp
  42f478:	mov    rcx,rax
  42f47b:	call   42ee50 <strcmp@plt+0x2b6c8>
  42f480:	mov    rdi,rbx
  42f483:	mov    esi,DWORD PTR [rsp+0xc]
  42f487:	mov    rdx,rbp
  42f48a:	call   42d150 <strcmp@plt+0x299c8>
  42f48f:	mov    rdi,r14
  42f492:	mov    rsi,r13
  42f495:	call   42eba0 <strcmp@plt+0x2b418>
  42f49a:	mov    rbp,rax
  42f49d:	mov    rdi,r12
  42f4a0:	call   4243f0 <strcmp@plt+0x20c68>
  42f4a5:	mov    rbx,rax
  42f4a8:	mov    rdi,r12
  42f4ab:	call   4243e0 <strcmp@plt+0x20c58>
  42f4b0:	movzx  edx,al
  42f4b3:	mov    rdi,rbp
  42f4b6:	mov    rsi,rbx
  42f4b9:	mov    rcx,r15
  42f4bc:	call   42ee50 <strcmp@plt+0x2b6c8>
  42f4c1:	lea    rcx,[rip+0x358e8]        # 464db0 <strcmp@plt+0x61628>
  42f4c8:	mov    ecx,DWORD PTR [rcx]
  42f4ca:	test   rax,rax
  42f4cd:	je     42f53d <strcmp@plt+0x2bdb5>
  42f4cf:	cmp    ecx,0x3
  42f4d2:	jl     42f522 <strcmp@plt+0x2bd9a>
  42f4d4:	mov    rdi,r13
  42f4d7:	call   426ae0 <strcmp@plt+0x23358>
  42f4dc:	mov    rcx,rax
  42f4df:	lea    rsi,[rip+0x1cd06]        # 44c1ec <strcmp@plt+0x48a64>
  42f4e6:	mov    edi,0x7
  42f4eb:	xor    eax,eax
  42f4ed:	mov    rdx,rcx
  42f4f0:	call   42e800 <strcmp@plt+0x2b078>
  42f4f5:	lea    rax,[rip+0x358b4]        # 464db0 <strcmp@plt+0x61628>
  42f4fc:	cmp    DWORD PTR [rax],0x3
  42f4ff:	jl     42f522 <strcmp@plt+0x2bd9a>
  42f501:	mov    rdi,r13
  42f504:	call   423130 <strcmp@plt+0x1f9a8>
  42f509:	mov    rcx,rax
  42f50c:	lea    rsi,[rip+0x1c640]        # 44bb53 <strcmp@plt+0x483cb>
  42f513:	mov    edi,0x7
  42f518:	xor    eax,eax
  42f51a:	mov    rdx,rcx
  42f51d:	call   42e800 <strcmp@plt+0x2b078>
  42f522:	add    DWORD PTR [r14+0x30],0x1
  42f527:	mov    ebp,0x1
  42f52c:	mov    eax,ebp
  42f52e:	add    rsp,0x28
  42f532:	pop    rbx
  42f533:	pop    r12
  42f535:	pop    r13
  42f537:	pop    r14
  42f539:	pop    r15
  42f53b:	pop    rbp
  42f53c:	ret    
  42f53d:	xor    ebp,ebp
  42f53f:	cmp    ecx,0x3
  42f542:	jl     42f52c <strcmp@plt+0x2bda4>
  42f544:	mov    rdi,r13
  42f547:	call   426ae0 <strcmp@plt+0x23358>
  42f54c:	mov    rcx,rax
  42f54f:	lea    rsi,[rip+0x1cc2a]        # 44c180 <strcmp@plt+0x489f8>
  42f556:	jmp    42f367 <strcmp@plt+0x2bbdf>
  42f55b:	lea    rax,[rip+0x3584e]        # 464db0 <strcmp@plt+0x61628>
  42f562:	cmp    DWORD PTR [rax],0x0
  42f565:	jle    42f407 <strcmp@plt+0x2bc7f>
  42f56b:	lea    rsi,[rip+0x1cca6]        # 44c218 <strcmp@plt+0x48a90>
  42f572:	mov    edi,0x5
  42f577:	jmp    42f268 <strcmp@plt+0x2bae0>
  42f57c:	nop    DWORD PTR [rax+0x0]
  42f580:	push   r15
  42f582:	push   r14
  42f584:	push   rbx
  42f585:	mov    rbx,rsi
  42f588:	mov    r14,rdi
  42f58b:	mov    edx,DWORD PTR [rsi+0x18]
  42f58e:	cmp    edx,0x3
  42f591:	je     42f5d8 <strcmp@plt+0x2be50>
  42f593:	cmp    edx,0x2
  42f596:	je     42f62a <strcmp@plt+0x2bea2>
  42f59c:	cmp    edx,0x1
  42f59f:	jne    42f643 <strcmp@plt+0x2bebb>
  42f5a5:	mov    rdi,rbx
  42f5a8:	call   423740 <strcmp@plt+0x1ffb8>
  42f5ad:	mov    r15,rax
  42f5b0:	mov    rdi,rax
  42f5b3:	call   4231b0 <strcmp@plt+0x1fa28>
  42f5b8:	mov    rdi,r15
  42f5bb:	call   424400 <strcmp@plt+0x20c78>
  42f5c0:	cmp    al,0xa
  42f5c2:	je     42f65d <strcmp@plt+0x2bed5>
  42f5c8:	cmp    al,0x2
  42f5ca:	jne    42f69e <strcmp@plt+0x2bf16>
  42f5d0:	mov    rax,QWORD PTR [r14]
  42f5d3:	jmp    42f661 <strcmp@plt+0x2bed9>
  42f5d8:	mov    rdi,rbx
  42f5db:	call   426ab0 <strcmp@plt+0x23328>
  42f5e0:	cmp    eax,0x9
  42f5e3:	je     42f66d <strcmp@plt+0x2bee5>
  42f5e9:	cmp    eax,0x2
  42f5ec:	jne    42f6cb <strcmp@plt+0x2bf43>
  42f5f2:	mov    rdi,r14
  42f5f5:	mov    rsi,rbx
  42f5f8:	call   42eba0 <strcmp@plt+0x2b418>
  42f5fd:	test   rax,rax
  42f600:	je     42f728 <strcmp@plt+0x2bfa0>
  42f606:	mov    r15,rax
  42f609:	mov    rdi,rbx
  42f60c:	call   428500 <strcmp@plt+0x24d78>
  42f611:	test   rax,rax
  42f614:	je     42f776 <strcmp@plt+0x2bfee>
  42f61a:	mov    rdi,r15
  42f61d:	mov    rsi,rax
  42f620:	call   42f7e0 <strcmp@plt+0x2c058>
  42f625:	jmp    42f7c5 <strcmp@plt+0x2c03d>
  42f62a:	mov    rdi,rbx
  42f62d:	call   424400 <strcmp@plt+0x20c78>
  42f632:	cmp    al,0xa
  42f634:	je     42f68e <strcmp@plt+0x2bf06>
  42f636:	cmp    al,0x2
  42f638:	jne    42f701 <strcmp@plt+0x2bf79>
  42f63e:	mov    rax,QWORD PTR [r14]
  42f641:	jmp    42f692 <strcmp@plt+0x2bf0a>
  42f643:	lea    rsi,[rip+0x1c524]        # 44bb6e <strcmp@plt+0x483e6>
  42f64a:	xor    ebx,ebx
  42f64c:	mov    edi,0x3
  42f651:	xor    eax,eax
  42f653:	call   42e800 <strcmp@plt+0x2b078>
  42f658:	jmp    42f7d2 <strcmp@plt+0x2c04a>
  42f65d:	mov    rax,QWORD PTR [r14+0x8]
  42f661:	mov    rax,QWORD PTR [rax]
  42f664:	mov    rbx,QWORD PTR [rax+0x28]
  42f668:	jmp    42f75b <strcmp@plt+0x2bfd3>
  42f66d:	mov    rdi,rbx
  42f670:	call   427370 <strcmp@plt+0x23be8>
  42f675:	cmp    al,0xa
  42f677:	je     42f78a <strcmp@plt+0x2c002>
  42f67d:	cmp    al,0x2
  42f67f:	jne    42f790 <strcmp@plt+0x2c008>
  42f685:	mov    r15,QWORD PTR [r14+0x20]
  42f689:	jmp    42f7ba <strcmp@plt+0x2c032>
  42f68e:	mov    rax,QWORD PTR [r14+0x8]
  42f692:	mov    rax,QWORD PTR [rax]
  42f695:	mov    r15,QWORD PTR [rax+0x28]
  42f699:	jmp    42f77d <strcmp@plt+0x2bff5>
  42f69e:	lea    rcx,[rip+0x3570b]        # 464db0 <strcmp@plt+0x61628>
  42f6a5:	cmp    DWORD PTR [rcx],0x0
  42f6a8:	jle    42f759 <strcmp@plt+0x2bfd1>
  42f6ae:	movzx  edx,al
  42f6b1:	lea    rsi,[rip+0x1c9dd]        # 44c095 <strcmp@plt+0x4890d>
  42f6b8:	xor    ebx,ebx
  42f6ba:	mov    edi,0x5
  42f6bf:	xor    eax,eax
  42f6c1:	call   42e800 <strcmp@plt+0x2b078>
  42f6c6:	jmp    42f75b <strcmp@plt+0x2bfd3>
  42f6cb:	lea    rax,[rip+0x356de]        # 464db0 <strcmp@plt+0x61628>
  42f6d2:	cmp    DWORD PTR [rax],0x3
  42f6d5:	jl     42f776 <strcmp@plt+0x2bfee>
  42f6db:	mov    rdi,rbx
  42f6de:	call   426ab0 <strcmp@plt+0x23328>
  42f6e3:	mov    ecx,eax
  42f6e5:	lea    rsi,[rip+0x1cbb7]        # 44c2a3 <strcmp@plt+0x48b1b>
  42f6ec:	xor    ebx,ebx
  42f6ee:	mov    edi,0x7
  42f6f3:	xor    eax,eax
  42f6f5:	mov    edx,ecx
  42f6f7:	call   42e800 <strcmp@plt+0x2b078>
  42f6fc:	jmp    42f7d2 <strcmp@plt+0x2c04a>
  42f701:	lea    rcx,[rip+0x356a8]        # 464db0 <strcmp@plt+0x61628>
  42f708:	cmp    DWORD PTR [rcx],0x0
  42f70b:	jle    42f77a <strcmp@plt+0x2bff2>
  42f70d:	movzx  edx,al
  42f710:	lea    rsi,[rip+0x1c97e]        # 44c095 <strcmp@plt+0x4890d>
  42f717:	xor    r15d,r15d
  42f71a:	mov    edi,0x5
  42f71f:	xor    eax,eax
  42f721:	call   42e800 <strcmp@plt+0x2b078>
  42f726:	jmp    42f77d <strcmp@plt+0x2bff5>
  42f728:	lea    rax,[rip+0x35681]        # 464db0 <strcmp@plt+0x61628>
  42f72f:	cmp    DWORD PTR [rax],0x3
  42f732:	jl     42f776 <strcmp@plt+0x2bfee>
  42f734:	mov    rdi,rbx
  42f737:	call   426ae0 <strcmp@plt+0x23358>
  42f73c:	mov    rcx,rax
  42f73f:	lea    rsi,[rip+0x1cb8f]        # 44c2d5 <strcmp@plt+0x48b4d>
  42f746:	xor    ebx,ebx
  42f748:	mov    edi,0x7
  42f74d:	xor    eax,eax
  42f74f:	mov    rdx,rcx
  42f752:	call   42e800 <strcmp@plt+0x2b078>
  42f757:	jmp    42f7d2 <strcmp@plt+0x2c04a>
  42f759:	xor    ebx,ebx
  42f75b:	mov    rdi,rbx
  42f75e:	mov    rsi,r15
  42f761:	call   42f7e0 <strcmp@plt+0x2c058>
  42f766:	mov    rbx,rax
  42f769:	mov    rdi,r15
  42f76c:	call   422fa0 <strcmp@plt+0x1f818>
  42f771:	test   rbx,rbx
  42f774:	jne    42f7cd <strcmp@plt+0x2c045>
  42f776:	xor    ebx,ebx
  42f778:	jmp    42f7d2 <strcmp@plt+0x2c04a>
  42f77a:	xor    r15d,r15d
  42f77d:	mov    rdi,r15
  42f780:	mov    rsi,rbx
  42f783:	call   42f7e0 <strcmp@plt+0x2c058>
  42f788:	jmp    42f7c5 <strcmp@plt+0x2c03d>
  42f78a:	mov    r15,QWORD PTR [r14+0x28]
  42f78e:	jmp    42f7ba <strcmp@plt+0x2c032>
  42f790:	lea    rcx,[rip+0x35619]        # 464db0 <strcmp@plt+0x61628>
  42f797:	cmp    DWORD PTR [rcx],0x0
  42f79a:	jle    42f7b7 <strcmp@plt+0x2c02f>
  42f79c:	movzx  edx,al
  42f79f:	lea    rsi,[rip+0x1c8c2]        # 44c068 <strcmp@plt+0x488e0>
  42f7a6:	xor    r15d,r15d
  42f7a9:	mov    edi,0x5
  42f7ae:	xor    eax,eax
  42f7b0:	call   42e800 <strcmp@plt+0x2b078>
  42f7b5:	jmp    42f7ba <strcmp@plt+0x2c032>
  42f7b7:	xor    r15d,r15d
  42f7ba:	mov    rdi,r15
  42f7bd:	mov    rsi,rbx
  42f7c0:	call   430070 <strcmp@plt+0x2c8e8>
  42f7c5:	mov    rbx,rax
  42f7c8:	test   rbx,rbx
  42f7cb:	je     42f776 <strcmp@plt+0x2bfee>
  42f7cd:	add    DWORD PTR [r14+0x30],0xffffffff
  42f7d2:	mov    rax,rbx
  42f7d5:	pop    rbx
  42f7d6:	pop    r14
  42f7d8:	pop    r15
  42f7da:	ret    
  42f7db:	nop    DWORD PTR [rax+rax*1+0x0]
  42f7e0:	push   r15
  42f7e2:	push   r14
  42f7e4:	push   r12
  42f7e6:	push   rbx
  42f7e7:	push   rax
  42f7e8:	mov    r15,rsi
  42f7eb:	mov    r14,rdi
  42f7ee:	mov    rdi,rsi
  42f7f1:	call   4243f0 <strcmp@plt+0x20c68>
  42f7f6:	mov    rbx,rax
  42f7f9:	mov    rdi,r15
  42f7fc:	call   4243e0 <strcmp@plt+0x20c58>
  42f801:	movzx  esi,al
  42f804:	mov    rdi,rbx
  42f807:	call   430320 <strcmp@plt+0x2cb98>
  42f80c:	mov    rbx,rax
  42f80f:	mov    rdi,r14
  42f812:	mov    rsi,rax
  42f815:	call   41def0 <strcmp@plt+0x1a768>
  42f81a:	mov    r12,rax
  42f81d:	mov    rdi,rbx
  42f820:	call   41db70 <strcmp@plt+0x1a3e8>
  42f825:	lea    rax,[rip+0x35584]        # 464db0 <strcmp@plt+0x61628>
  42f82c:	mov    eax,DWORD PTR [rax]
  42f82e:	test   r12,r12
  42f831:	je     42f86b <strcmp@plt+0x2c0e3>
  42f833:	cmp    eax,0x3
  42f836:	jl     42f859 <strcmp@plt+0x2c0d1>
  42f838:	mov    rdi,r15
  42f83b:	call   424490 <strcmp@plt+0x20d08>
  42f840:	mov    rcx,rax
  42f843:	lea    rsi,[rip+0x1c4ed]        # 44bd37 <strcmp@plt+0x485af>
  42f84a:	mov    edi,0x7
  42f84f:	xor    eax,eax
  42f851:	mov    rdx,rcx
  42f854:	call   42e800 <strcmp@plt+0x2b078>
  42f859:	mov    r15,QWORD PTR [r12+0x28]
  42f85e:	mov    rdi,r14
  42f861:	mov    rsi,r12
  42f864:	call   41e960 <strcmp@plt+0x1b1d8>
  42f869:	jmp    42f899 <strcmp@plt+0x2c111>
  42f86b:	cmp    eax,0x3
  42f86e:	jl     42f896 <strcmp@plt+0x2c10e>
  42f870:	mov    rdi,r15
  42f873:	call   424490 <strcmp@plt+0x20d08>
  42f878:	mov    rcx,rax
  42f87b:	lea    rsi,[rip+0x1c475]        # 44bcf7 <strcmp@plt+0x4856f>
  42f882:	xor    r15d,r15d
  42f885:	mov    edi,0x7
  42f88a:	xor    eax,eax
  42f88c:	mov    rdx,rcx
  42f88f:	call   42e800 <strcmp@plt+0x2b078>
  42f894:	jmp    42f899 <strcmp@plt+0x2c111>
  42f896:	xor    r15d,r15d
  42f899:	mov    rax,r15
  42f89c:	add    rsp,0x8
  42f8a0:	pop    rbx
  42f8a1:	pop    r12
  42f8a3:	pop    r14
  42f8a5:	pop    r15
  42f8a7:	ret    
  42f8a8:	nop    DWORD PTR [rax+rax*1+0x0]
  42f8b0:	push   rbp
  42f8b1:	push   r15
  42f8b3:	push   r14
  42f8b5:	push   r13
  42f8b7:	push   r12
  42f8b9:	push   rbx
  42f8ba:	sub    rsp,0x418
  42f8c1:	mov    QWORD PTR [rsp+0x8],rdx
  42f8c6:	mov    r15,rsi
  42f8c9:	mov    r12,rdi
  42f8cc:	call   42bbd0 <strcmp@plt+0x28448>
  42f8d1:	mov    r13,rax
  42f8d4:	mov    edx,0x1
  42f8d9:	mov    rdi,r12
  42f8dc:	mov    rsi,r15
  42f8df:	call   42fa30 <strcmp@plt+0x2c2a8>
  42f8e4:	test   rax,rax
  42f8e7:	je     42f9d6 <strcmp@plt+0x2c24e>
  42f8ed:	mov    rbx,rax
  42f8f0:	mov    rdi,r12
  42f8f3:	mov    rsi,r15
  42f8f6:	call   42ec60 <strcmp@plt+0x2b4d8>
  42f8fb:	mov    r15,rax
  42f8fe:	xor    ebp,ebp
  42f900:	cmp    QWORD PTR [rbx+0x8],0x0
  42f905:	je     42f912 <strcmp@plt+0x2c18a>
  42f907:	mov    rdi,rbx
  42f90a:	mov    rsi,r13
  42f90d:	call   42bcf0 <strcmp@plt+0x28568>
  42f912:	mov    rax,QWORD PTR [rbx+0x10]
  42f916:	mov    rcx,QWORD PTR [rbx+0x18]
  42f91a:	test   rax,rax
  42f91d:	je     42f930 <strcmp@plt+0x2c1a8>
  42f91f:	test   rcx,rcx
  42f922:	je     42f950 <strcmp@plt+0x2c1c8>
  42f924:	mov    QWORD PTR [rsp+rbp*8+0x10],rcx
  42f929:	add    rbp,0x1
  42f92d:	jmp    42f950 <strcmp@plt+0x2c1c8>
  42f92f:	nop
  42f930:	test   rcx,rcx
  42f933:	je     42f93a <strcmp@plt+0x2c1b2>
  42f935:	mov    rax,rcx
  42f938:	jmp    42f950 <strcmp@plt+0x2c1c8>
  42f93a:	test   rbp,rbp
  42f93d:	je     42f958 <strcmp@plt+0x2c1d0>
  42f93f:	mov    rax,QWORD PTR [rsp+rbp*8+0x8]
  42f944:	add    rbp,0xffffffffffffffff
  42f948:	nop    DWORD PTR [rax+rax*1+0x0]
  42f950:	mov    rbx,rax
  42f953:	test   rax,rax
  42f956:	jne    42f900 <strcmp@plt+0x2c178>
  42f958:	mov    r12,QWORD PTR [r13+0x8]
  42f95c:	cmp    r12,r13
  42f95f:	je     42f9bd <strcmp@plt+0x2c235>
  42f961:	lea    r14,[rip+0x35448]        # 464db0 <strcmp@plt+0x61628>
  42f968:	nop    DWORD PTR [rax+rax*1+0x0]
  42f970:	mov    rbx,QWORD PTR [r12+0x10]
  42f975:	cmp    DWORD PTR [r14],0x2
  42f979:	jl     42f99d <strcmp@plt+0x2c215>
  42f97b:	mov    rdi,QWORD PTR [rbx+0x8]
  42f97f:	call   41d620 <strcmp@plt+0x19e98>
  42f984:	mov    rcx,rax
  42f987:	mov    edi,0x6
  42f98c:	xor    eax,eax
  42f98e:	lea    rsi,[rip+0x1c23c]        # 44bbd1 <strcmp@plt+0x48449>
  42f995:	mov    rdx,rcx
  42f998:	call   42e800 <strcmp@plt+0x2b078>
  42f99d:	mov    rbp,QWORD PTR [rbx+0x28]
  42f9a1:	mov    rdi,r15
  42f9a4:	mov    rsi,rbx
  42f9a7:	call   41e960 <strcmp@plt+0x1b1d8>
  42f9ac:	mov    rdi,rbp
  42f9af:	call   QWORD PTR [rsp+0x8]
  42f9b3:	mov    r12,QWORD PTR [r12+0x8]
  42f9b8:	cmp    r12,r13
  42f9bb:	jne    42f970 <strcmp@plt+0x2c1e8>
  42f9bd:	mov    rdi,r13
  42f9c0:	add    rsp,0x418
  42f9c7:	pop    rbx
  42f9c8:	pop    r12
  42f9ca:	pop    r13
  42f9cc:	pop    r14
  42f9ce:	pop    r15
  42f9d0:	pop    rbp
  42f9d1:	jmp    42c250 <strcmp@plt+0x28ac8>
  42f9d6:	lea    rax,[rip+0x353d3]        # 464db0 <strcmp@plt+0x61628>
  42f9dd:	cmp    DWORD PTR [rax],0x2
  42f9e0:	jge    42f9f4 <strcmp@plt+0x2c26c>
  42f9e2:	add    rsp,0x418
  42f9e9:	pop    rbx
  42f9ea:	pop    r12
  42f9ec:	pop    r13
  42f9ee:	pop    r14
  42f9f0:	pop    r15
  42f9f2:	pop    rbp
  42f9f3:	ret    
  42f9f4:	mov    rdi,r15
  42f9f7:	call   423130 <strcmp@plt+0x1f9a8>
  42f9fc:	mov    rcx,rax
  42f9ff:	lea    rsi,[rip+0x1c192]        # 44bb98 <strcmp@plt+0x48410>
  42fa06:	mov    edi,0x6
  42fa0b:	xor    eax,eax
  42fa0d:	mov    rdx,rcx
  42fa10:	add    rsp,0x418
  42fa17:	pop    rbx
  42fa18:	pop    r12
  42fa1a:	pop    r13
  42fa1c:	pop    r14
  42fa1e:	pop    r15
  42fa20:	pop    rbp
  42fa21:	jmp    42e800 <strcmp@plt+0x2b078>
  42fa26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fa30:	push   rbp
  42fa31:	push   r15
  42fa33:	push   r14
  42fa35:	push   rbx
  42fa36:	push   rax
  42fa37:	mov    r15d,edx
  42fa3a:	mov    rbx,rsi
  42fa3d:	mov    rbp,rdi
  42fa40:	mov    edx,DWORD PTR [rsi+0x18]
  42fa43:	lea    eax,[rdx-0x1]
  42fa46:	cmp    eax,0x2
  42fa49:	jae    42fa6e <strcmp@plt+0x2c2e6>
  42fa4b:	mov    rdi,rbx
  42fa4e:	call   423200 <strcmp@plt+0x1fa78>
  42fa53:	movzx  edx,ax
  42fa56:	cmp    edx,0xa
  42fa59:	je     42fae1 <strcmp@plt+0x2c359>
  42fa5f:	cmp    edx,0x2
  42fa62:	jne    42faee <strcmp@plt+0x2c366>
  42fa68:	mov    rax,QWORD PTR [rbp+0x0]
  42fa6c:	jmp    42fae5 <strcmp@plt+0x2c35d>
  42fa6e:	cmp    edx,0x3
  42fa71:	jne    42fad1 <strcmp@plt+0x2c349>
  42fa73:	mov    rdi,rbx
  42fa76:	call   426ab0 <strcmp@plt+0x23328>
  42fa7b:	cmp    eax,0x9
  42fa7e:	je     42fb12 <strcmp@plt+0x2c38a>
  42fa84:	cmp    eax,0x2
  42fa87:	jne    42fb33 <strcmp@plt+0x2c3ab>
  42fa8d:	mov    rdi,rbp
  42fa90:	mov    rsi,rbx
  42fa93:	call   42eba0 <strcmp@plt+0x2b418>
  42fa98:	test   rax,rax
  42fa9b:	je     42fbcf <strcmp@plt+0x2c447>
  42faa1:	mov    r14,rax
  42faa4:	test   r15b,r15b
  42faa7:	je     42fc31 <strcmp@plt+0x2c4a9>
  42faad:	mov    rdi,rbx
  42fab0:	call   428500 <strcmp@plt+0x24d78>
  42fab5:	test   rax,rax
  42fab8:	je     42fb52 <strcmp@plt+0x2c3ca>
  42fabe:	mov    rbx,rax
  42fac1:	mov    rdi,rax
  42fac4:	call   423370 <strcmp@plt+0x1fbe8>
  42fac9:	mov    rbp,rax
  42facc:	jmp    42fb69 <strcmp@plt+0x2c3e1>
  42fad1:	lea    rsi,[rip+0x1c84c]        # 44c324 <strcmp@plt+0x48b9c>
  42fad8:	mov    edi,0x3
  42fadd:	xor    eax,eax
  42fadf:	jmp    42fb4d <strcmp@plt+0x2c3c5>
  42fae1:	mov    rax,QWORD PTR [rbp+0x8]
  42fae5:	mov    rax,QWORD PTR [rax]
  42fae8:	mov    r14,QWORD PTR [rax+0x28]
  42faec:	jmp    42fb59 <strcmp@plt+0x2c3d1>
  42faee:	lea    rax,[rip+0x352bb]        # 464db0 <strcmp@plt+0x61628>
  42faf5:	cmp    DWORD PTR [rax],0x0
  42faf8:	jle    42fb56 <strcmp@plt+0x2c3ce>
  42fafa:	lea    rsi,[rip+0x1c594]        # 44c095 <strcmp@plt+0x4890d>
  42fb01:	xor    r14d,r14d
  42fb04:	mov    edi,0x5
  42fb09:	xor    eax,eax
  42fb0b:	call   42e800 <strcmp@plt+0x2b078>
  42fb10:	jmp    42fb59 <strcmp@plt+0x2c3d1>
  42fb12:	mov    rdi,rbx
  42fb15:	call   427370 <strcmp@plt+0x23be8>
  42fb1a:	cmp    al,0xa
  42fb1c:	je     42fc05 <strcmp@plt+0x2c47d>
  42fb22:	cmp    al,0x2
  42fb24:	jne    42fc0b <strcmp@plt+0x2c483>
  42fb2a:	mov    rbp,QWORD PTR [rbp+0x20]
  42fb2e:	jmp    42fc78 <strcmp@plt+0x2c4f0>
  42fb33:	mov    rdi,rbx
  42fb36:	call   426ab0 <strcmp@plt+0x23328>
  42fb3b:	mov    ecx,eax
  42fb3d:	lea    rsi,[rip+0x1c7ff]        # 44c343 <strcmp@plt+0x48bbb>
  42fb44:	mov    edi,0x3
  42fb49:	xor    eax,eax
  42fb4b:	mov    edx,ecx
  42fb4d:	call   42e800 <strcmp@plt+0x2b078>
  42fb52:	xor    eax,eax
  42fb54:	jmp    42fbc4 <strcmp@plt+0x2c43c>
  42fb56:	xor    r14d,r14d
  42fb59:	mov    rdi,rbx
  42fb5c:	call   423370 <strcmp@plt+0x1fbe8>
  42fb61:	mov    rbp,rax
  42fb64:	test   r15b,r15b
  42fb67:	je     42fb8c <strcmp@plt+0x2c404>
  42fb69:	mov    rdi,rbx
  42fb6c:	call   4233c0 <strcmp@plt+0x1fc38>
  42fb71:	movzx  esi,al
  42fb74:	mov    rdi,rbp
  42fb77:	call   430320 <strcmp@plt+0x2cb98>
  42fb7c:	mov    rbx,rax
  42fb7f:	mov    rdi,r14
  42fb82:	mov    rsi,rax
  42fb85:	call   41def0 <strcmp@plt+0x1a768>
  42fb8a:	jmp    42fbb6 <strcmp@plt+0x2c42e>
  42fb8c:	mov    rdi,rbp
  42fb8f:	call   423d30 <strcmp@plt+0x205a8>
  42fb94:	mov    cl,0x20
  42fb96:	cmp    eax,0x2
  42fb99:	je     42fb9d <strcmp@plt+0x2c415>
  42fb9b:	mov    cl,0x80
  42fb9d:	movzx  esi,cl
  42fba0:	mov    rdi,rbp
  42fba3:	call   430320 <strcmp@plt+0x2cb98>
  42fba8:	mov    rbx,rax
  42fbab:	mov    rdi,r14
  42fbae:	mov    rsi,rax
  42fbb1:	call   41e230 <strcmp@plt+0x1aaa8>
  42fbb6:	mov    rbp,rax
  42fbb9:	mov    rdi,rbx
  42fbbc:	call   41db70 <strcmp@plt+0x1a3e8>
  42fbc1:	mov    rax,rbp
  42fbc4:	add    rsp,0x8
  42fbc8:	pop    rbx
  42fbc9:	pop    r14
  42fbcb:	pop    r15
  42fbcd:	pop    rbp
  42fbce:	ret    
  42fbcf:	lea    rax,[rip+0x351da]        # 464db0 <strcmp@plt+0x61628>
  42fbd6:	cmp    DWORD PTR [rax],0x3
  42fbd9:	jl     42fb52 <strcmp@plt+0x2c3ca>
  42fbdf:	mov    rdi,rbx
  42fbe2:	call   426ae0 <strcmp@plt+0x23358>
  42fbe7:	mov    rcx,rax
  42fbea:	lea    rsi,[rip+0x1c778]        # 44c369 <strcmp@plt+0x48be1>
  42fbf1:	mov    edi,0x7
  42fbf6:	xor    eax,eax
  42fbf8:	mov    rdx,rcx
  42fbfb:	call   42e800 <strcmp@plt+0x2b078>
  42fc00:	jmp    42fb52 <strcmp@plt+0x2c3ca>
  42fc05:	mov    rbp,QWORD PTR [rbp+0x28]
  42fc09:	jmp    42fc78 <strcmp@plt+0x2c4f0>
  42fc0b:	lea    rcx,[rip+0x3519e]        # 464db0 <strcmp@plt+0x61628>
  42fc12:	cmp    DWORD PTR [rcx],0x0
  42fc15:	jle    42fc76 <strcmp@plt+0x2c4ee>
  42fc17:	movzx  edx,al
  42fc1a:	lea    rsi,[rip+0x1c447]        # 44c068 <strcmp@plt+0x488e0>
  42fc21:	xor    ebp,ebp
  42fc23:	mov    edi,0x5
  42fc28:	xor    eax,eax
  42fc2a:	call   42e800 <strcmp@plt+0x2b078>
  42fc2f:	jmp    42fc78 <strcmp@plt+0x2c4f0>
  42fc31:	mov    rdi,rbx
  42fc34:	call   428490 <strcmp@plt+0x24d08>
  42fc39:	test   rax,rax
  42fc3c:	jne    42fc4f <strcmp@plt+0x2c4c7>
  42fc3e:	mov    rdi,rbx
  42fc41:	call   428500 <strcmp@plt+0x24d78>
  42fc46:	test   rax,rax
  42fc49:	je     42fb52 <strcmp@plt+0x2c3ca>
  42fc4f:	mov    rdi,rax
  42fc52:	call   423370 <strcmp@plt+0x1fbe8>
  42fc57:	mov    rbx,rax
  42fc5a:	mov    rdi,rax
  42fc5d:	call   423d30 <strcmp@plt+0x205a8>
  42fc62:	mov    cl,0x20
  42fc64:	cmp    eax,0x2
  42fc67:	je     42fc6b <strcmp@plt+0x2c4e3>
  42fc69:	mov    cl,0x80
  42fc6b:	movzx  esi,cl
  42fc6e:	mov    rdi,rbx
  42fc71:	jmp    42fba3 <strcmp@plt+0x2c41b>
  42fc76:	xor    ebp,ebp
  42fc78:	movzx  edx,r15b
  42fc7c:	mov    rdi,rbp
  42fc7f:	mov    rsi,rbx
  42fc82:	add    rsp,0x8
  42fc86:	pop    rbx
  42fc87:	pop    r14
  42fc89:	pop    r15
  42fc8b:	pop    rbp
  42fc8c:	jmp    430440 <strcmp@plt+0x2ccb8>
  42fc91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fc9b:	nop    DWORD PTR [rax+rax*1+0x0]
  42fca0:	jmp    41e960 <strcmp@plt+0x1b1d8>
  42fca5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fcaf:	nop
  42fcb0:	push   rbx
  42fcb1:	xor    ebx,ebx
  42fcb3:	xor    edx,edx
  42fcb5:	call   42fa30 <strcmp@plt+0x2c2a8>
  42fcba:	test   rax,rax
  42fcbd:	je     42fcc3 <strcmp@plt+0x2c53b>
  42fcbf:	mov    rbx,QWORD PTR [rax+0x28]
  42fcc3:	mov    rax,rbx
  42fcc6:	pop    rbx
  42fcc7:	ret    
  42fcc8:	nop    DWORD PTR [rax+rax*1+0x0]
  42fcd0:	push   rax
  42fcd1:	mov    edx,0x1
  42fcd6:	call   42fa30 <strcmp@plt+0x2c2a8>
  42fcdb:	test   rax,rax
  42fcde:	je     42fce6 <strcmp@plt+0x2c55e>
  42fce0:	mov    rax,QWORD PTR [rax+0x28]
  42fce4:	pop    rcx
  42fce5:	ret    
  42fce6:	xor    eax,eax
  42fce8:	pop    rcx
  42fce9:	ret    
  42fcea:	nop    WORD PTR [rax+rax*1+0x0]
  42fcf0:	push   rbp
  42fcf1:	push   r15
  42fcf3:	push   r14
  42fcf5:	push   r12
  42fcf7:	push   rbx
  42fcf8:	sub    rsp,0x20
  42fcfc:	mov    rbx,rsi
  42fcff:	mov    r14,rdi
  42fd02:	mov    edi,0x2
  42fd07:	call   422ef0 <strcmp@plt+0x1f768>
  42fd0c:	mov    r15,rax
  42fd0f:	mov    rdi,rbx
  42fd12:	call   423200 <strcmp@plt+0x1fa78>
  42fd17:	mov    r12d,eax
  42fd1a:	xor    ebp,ebp
  42fd1c:	xor    edx,edx
  42fd1e:	mov    rdi,r14
  42fd21:	mov    rsi,rbx
  42fd24:	call   42f150 <strcmp@plt+0x2b9c8>
  42fd29:	cmp    eax,0x1
  42fd2c:	jne    42fe19 <strcmp@plt+0x2c691>
  42fd32:	mov    edx,0x1
  42fd37:	mov    rdi,r14
  42fd3a:	mov    rsi,rbx
  42fd3d:	call   42fa30 <strcmp@plt+0x2c2a8>
  42fd42:	test   rax,rax
  42fd45:	je     42fdc3 <strcmp@plt+0x2c63b>
  42fd47:	mov    rcx,QWORD PTR [rax+0x20]
  42fd4b:	test   rcx,rcx
  42fd4e:	je     42fdc3 <strcmp@plt+0x2c63b>
  42fd50:	mov    rdx,QWORD PTR [rax+0x8]
  42fd54:	mov    rsi,QWORD PTR [rdx+0x10]
  42fd58:	mov    QWORD PTR [rsp+0x10],rsi
  42fd5d:	vmovups xmm0,XMMWORD PTR [rdx]
  42fd61:	vmovaps XMMWORD PTR [rsp],xmm0
  42fd66:	mov    bpl,BYTE PTR [rcx]
  42fd69:	add    bpl,0x1
  42fd6d:	cmp    QWORD PTR [rcx+0x18],rax
  42fd71:	jne    42fd96 <strcmp@plt+0x2c60e>
  42fd73:	mov    eax,ebp
  42fd75:	shr    al,0x5
  42fd78:	mov    ecx,ebp
  42fd7a:	and    cl,0x1f
  42fd7d:	movzx  ecx,cl
  42fd80:	mov    edx,0x20
  42fd85:	sub    edx,ecx
  42fd87:	xor    ecx,ecx
  42fd89:	cmp    edx,0x1
  42fd8c:	seta   cl
  42fd8f:	movzx  eax,al
  42fd92:	or     DWORD PTR [rsp+rax*4+0x8],ecx
  42fd96:	lea    rsi,[rsp+0x8]
  42fd9b:	movzx  edx,r12b
  42fd9f:	mov    rdi,r15
  42fda2:	call   423ef0 <strcmp@plt+0x20768>
  42fda7:	movzx  esi,bpl
  42fdab:	mov    rdi,r15
  42fdae:	call   423480 <strcmp@plt+0x1fcf8>
  42fdb3:	mov    rdi,r15
  42fdb6:	call   4343f0 <strcmp@plt+0x30c68>
  42fdbb:	cmp    DWORD PTR [rbx+0x18],0x3
  42fdbf:	je     42fdea <strcmp@plt+0x2c662>
  42fdc1:	jmp    42fe0b <strcmp@plt+0x2c683>
  42fdc3:	movzx  eax,r12w
  42fdc7:	cmp    eax,0x2
  42fdca:	jne    42fdd5 <strcmp@plt+0x2c64d>
  42fdcc:	lea    rdi,[rip+0x12f01]        # 442cd4 <strcmp@plt+0x3f54c>
  42fdd3:	jmp    42fddc <strcmp@plt+0x2c654>
  42fdd5:	lea    rdi,[rip+0x13d86]        # 443b62 <strcmp@plt+0x403da>
  42fddc:	mov    rsi,r15
  42fddf:	call   423c60 <strcmp@plt+0x204d8>
  42fde4:	cmp    DWORD PTR [rbx+0x18],0x3
  42fde8:	jne    42fe0b <strcmp@plt+0x2c683>
  42fdea:	mov    rdi,rbx
  42fded:	call   423740 <strcmp@plt+0x1ffb8>
  42fdf2:	mov    rbp,rax
  42fdf5:	mov    rdi,rax
  42fdf8:	mov    rsi,r15
  42fdfb:	call   423660 <strcmp@plt+0x1fed8>
  42fe00:	mov    rdi,r15
  42fe03:	call   422fa0 <strcmp@plt+0x1f818>
  42fe08:	mov    r15,rbp
  42fe0b:	mov    rdi,r14
  42fe0e:	mov    rsi,rbx
  42fe11:	call   42f580 <strcmp@plt+0x2bdf8>
  42fe16:	mov    rbp,r15
  42fe19:	mov    rax,rbp
  42fe1c:	add    rsp,0x20
  42fe20:	pop    rbx
  42fe21:	pop    r12
  42fe23:	pop    r14
  42fe25:	pop    r15
  42fe27:	pop    rbp
  42fe28:	ret    
  42fe29:	nop    DWORD PTR [rax+0x0]
  42fe30:	mov    eax,DWORD PTR [rdi+0x30]
  42fe33:	ret    
  42fe34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fe3e:	xchg   ax,ax
  42fe40:	push   r15
  42fe42:	push   r14
  42fe44:	push   r12
  42fe46:	push   rbx
  42fe47:	push   rax
  42fe48:	mov    r14,rdx
  42fe4b:	mov    rbx,rsi
  42fe4e:	mov    r15,rdi
  42fe51:	mov    rdi,rsi
  42fe54:	call   4243f0 <strcmp@plt+0x20c68>
  42fe59:	mov    r12,rax
  42fe5c:	mov    rdi,rbx
  42fe5f:	call   4243e0 <strcmp@plt+0x20c58>
  42fe64:	movzx  edx,al
  42fe67:	mov    rdi,r15
  42fe6a:	mov    rsi,r12
  42fe6d:	mov    rcx,r14
  42fe70:	call   42ee50 <strcmp@plt+0x2b6c8>
  42fe75:	xor    ecx,ecx
  42fe77:	test   rax,rax
  42fe7a:	setne  cl
  42fe7d:	mov    eax,ecx
  42fe7f:	add    rsp,0x8
  42fe83:	pop    rbx
  42fe84:	pop    r12
  42fe86:	pop    r14
  42fe88:	pop    r15
  42fe8a:	ret    
  42fe8b:	nop    DWORD PTR [rax+rax*1+0x0]
  42fe90:	push   rbp
  42fe91:	push   r15
  42fe93:	push   r14
  42fe95:	push   r13
  42fe97:	push   r12
  42fe99:	push   rbx
  42fe9a:	push   rax
  42fe9b:	mov    r14,rdx
  42fe9e:	mov    rbp,rsi
  42fea1:	mov    r13,rdi
  42fea4:	mov    rdi,rsi
  42fea7:	call   4270d0 <strcmp@plt+0x23948>
  42feac:	mov    rbx,rax
  42feaf:	mov    rdi,rbp
  42feb2:	call   427160 <strcmp@plt+0x239d8>
  42feb7:	mov    r15,rax
  42feba:	cmp    DWORD PTR [rbx+0x18],0x1
  42febe:	jne    42ff86 <strcmp@plt+0x2c7fe>
  42fec4:	cmp    DWORD PTR [r15+0x18],0x1
  42fec9:	jne    42ff86 <strcmp@plt+0x2c7fe>
  42fecf:	mov    rdi,rbp
  42fed2:	call   427250 <strcmp@plt+0x23ac8>
  42fed7:	mov    r12d,eax
  42feda:	mov    rdi,rbp
  42fedd:	call   4272e0 <strcmp@plt+0x23b58>
  42fee2:	mov    BYTE PTR [rsp+0x7],al
  42fee6:	movzx  eax,r12b
  42feea:	xor    r12d,r12d
  42feed:	xor    ecx,ecx
  42feef:	mov    rdi,r13
  42fef2:	mov    r13d,eax
  42fef5:	mov    rsi,rbx
  42fef8:	mov    edx,eax
  42fefa:	call   42ee50 <strcmp@plt+0x2b6c8>
  42feff:	test   rax,rax
  42ff02:	je     42ffc7 <strcmp@plt+0x2c83f>
  42ff08:	mov    rbp,rax
  42ff0b:	mov    rdi,QWORD PTR [rax+0x28]
  42ff0f:	test   rdi,rdi
  42ff12:	jne    42ff37 <strcmp@plt+0x2c7af>
  42ff14:	mov    rdi,r15
  42ff17:	call   423d70 <strcmp@plt+0x205e8>
  42ff1c:	movzx  edi,al
  42ff1f:	shl    edi,0x3
  42ff22:	call   41dbb0 <strcmp@plt+0x1a428>
  42ff27:	mov    rdi,rax
  42ff2a:	mov    QWORD PTR [rbp+0x28],rax
  42ff2e:	test   rax,rax
  42ff31:	je     42fffc <strcmp@plt+0x2c874>
  42ff37:	movzx  ebx,BYTE PTR [rsp+0x7]
  42ff3c:	mov    rsi,r15
  42ff3f:	mov    edx,ebx
  42ff41:	mov    rcx,r14
  42ff44:	call   42ee50 <strcmp@plt+0x2b6c8>
  42ff49:	mov    r12d,0x1
  42ff4f:	test   rax,rax
  42ff52:	jne    42ffb5 <strcmp@plt+0x2c82d>
  42ff54:	lea    rax,[rip+0x34e55]        # 464db0 <strcmp@plt+0x61628>
  42ff5b:	xor    r12d,r12d
  42ff5e:	cmp    DWORD PTR [rax],0x3
  42ff61:	jl     42ffb5 <strcmp@plt+0x2c82d>
  42ff63:	mov    rdi,r15
  42ff66:	call   423f30 <strcmp@plt+0x207a8>
  42ff6b:	mov    rcx,rax
  42ff6e:	lea    rsi,[rip+0x1bd38]        # 44bcad <strcmp@plt+0x48525>
  42ff75:	xor    r12d,r12d
  42ff78:	mov    edi,0x7
  42ff7d:	xor    eax,eax
  42ff7f:	mov    rdx,rcx
  42ff82:	mov    ecx,ebx
  42ff84:	jmp    42fff5 <strcmp@plt+0x2c86d>
  42ff86:	mov    rdi,rbx
  42ff89:	call   423130 <strcmp@plt+0x1f9a8>
  42ff8e:	mov    rbx,rax
  42ff91:	mov    rdi,r15
  42ff94:	call   423130 <strcmp@plt+0x1f9a8>
  42ff99:	mov    rcx,rax
  42ff9c:	lea    rsi,[rip+0x1bc59]        # 44bbfc <strcmp@plt+0x48474>
  42ffa3:	xor    r12d,r12d
  42ffa6:	mov    edi,0x3
  42ffab:	xor    eax,eax
  42ffad:	mov    rdx,rbx
  42ffb0:	call   42e800 <strcmp@plt+0x2b078>
  42ffb5:	mov    eax,r12d
  42ffb8:	add    rsp,0x8
  42ffbc:	pop    rbx
  42ffbd:	pop    r12
  42ffbf:	pop    r13
  42ffc1:	pop    r14
  42ffc3:	pop    r15
  42ffc5:	pop    rbp
  42ffc6:	ret    
  42ffc7:	lea    rax,[rip+0x34de2]        # 464db0 <strcmp@plt+0x61628>
  42ffce:	cmp    DWORD PTR [rax],0x3
  42ffd1:	jl     42ffb5 <strcmp@plt+0x2c82d>
  42ffd3:	mov    rdi,rbx
  42ffd6:	call   423f30 <strcmp@plt+0x207a8>
  42ffdb:	mov    rcx,rax
  42ffde:	lea    rsi,[rip+0x1bc59]        # 44bc3e <strcmp@plt+0x484b6>
  42ffe5:	xor    r12d,r12d
  42ffe8:	mov    edi,0x7
  42ffed:	xor    eax,eax
  42ffef:	mov    rdx,rcx
  42fff2:	mov    ecx,r13d
  42fff5:	call   42e800 <strcmp@plt+0x2b078>
  42fffa:	jmp    42ffb5 <strcmp@plt+0x2c82d>
  42fffc:	lea    rax,[rip+0x34dad]        # 464db0 <strcmp@plt+0x61628>
  430003:	xor    r12d,r12d
  430006:	cmp    DWORD PTR [rax],0x3
  430009:	jl     42ffb5 <strcmp@plt+0x2c82d>
  43000b:	lea    rsi,[rip+0x1bc74]        # 44bc86 <strcmp@plt+0x484fe>
  430012:	xor    r12d,r12d
  430015:	mov    edi,0x7
  43001a:	xor    eax,eax
  43001c:	call   42e800 <strcmp@plt+0x2b078>
  430021:	jmp    42ffb5 <strcmp@plt+0x2c82d>
  430023:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43002d:	nop    DWORD PTR [rax]
  430030:	push   r14
  430032:	push   rbx
  430033:	push   rax
  430034:	mov    r14,rdi
  430037:	mov    rdi,rsi
  43003a:	mov    esi,edx
  43003c:	call   430320 <strcmp@plt+0x2cb98>
  430041:	mov    rbx,rax
  430044:	mov    rdi,r14
  430047:	mov    rsi,rax
  43004a:	call   41def0 <strcmp@plt+0x1a768>
  43004f:	mov    r14,rax
  430052:	mov    rdi,rbx
  430055:	call   41db70 <strcmp@plt+0x1a3e8>
  43005a:	mov    rax,r14
  43005d:	add    rsp,0x8
  430061:	pop    rbx
  430062:	pop    r14
  430064:	ret    
  430065:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43006f:	nop
  430070:	push   rbp
  430071:	push   r15
  430073:	push   r14
  430075:	push   r13
  430077:	push   r12
  430079:	push   rbx
  43007a:	push   rax
  43007b:	mov    rbx,rsi
  43007e:	test   rdi,rdi
  430081:	je     43018f <strcmp@plt+0x2ca07>
  430087:	mov    r15,rdi
  43008a:	mov    rdi,rbx
  43008d:	call   4270d0 <strcmp@plt+0x23948>
  430092:	mov    r12,rax
  430095:	mov    rdi,rbx
  430098:	call   427160 <strcmp@plt+0x239d8>
  43009d:	cmp    DWORD PTR [r12+0x18],0x1
  4300a3:	jne    43016b <strcmp@plt+0x2c9e3>
  4300a9:	mov    r14,rax
  4300ac:	cmp    DWORD PTR [rax+0x18],0x1
  4300b0:	jne    43016b <strcmp@plt+0x2c9e3>
  4300b6:	mov    edx,0x1
  4300bb:	mov    rdi,r15
  4300be:	mov    rsi,rbx
  4300c1:	call   430220 <strcmp@plt+0x2ca98>
  4300c6:	test   rax,rax
  4300c9:	je     4301d6 <strcmp@plt+0x2ca4e>
  4300cf:	mov    rbp,rax
  4300d2:	mov    rdi,rbx
  4300d5:	call   4272e0 <strcmp@plt+0x23b58>
  4300da:	movzx  esi,al
  4300dd:	mov    rdi,r14
  4300e0:	call   430320 <strcmp@plt+0x2cb98>
  4300e5:	mov    r14,rax
  4300e8:	mov    QWORD PTR [rsp],rbp
  4300ec:	mov    rdi,rbp
  4300ef:	mov    rsi,rax
  4300f2:	call   41def0 <strcmp@plt+0x1a768>
  4300f7:	mov    r13,rax
  4300fa:	mov    rdi,r14
  4300fd:	call   41db70 <strcmp@plt+0x1a3e8>
  430102:	test   r13,r13
  430105:	je     4301f6 <strcmp@plt+0x2ca6e>
  43010b:	mov    r14,QWORD PTR [r13+0x28]
  43010f:	mov    rbp,QWORD PTR [rsp]
  430113:	mov    rdi,rbp
  430116:	mov    rsi,r13
  430119:	call   41e960 <strcmp@plt+0x1b1d8>
  43011e:	cmp    DWORD PTR [rbp+0xc],0x0
  430122:	jg     4301c4 <strcmp@plt+0x2ca3c>
  430128:	xor    esi,esi
  43012a:	mov    rdi,rbp
  43012d:	call   41dda0 <strcmp@plt+0x1a618>
  430132:	mov    rdi,rbx
  430135:	call   427250 <strcmp@plt+0x23ac8>
  43013a:	movzx  esi,al
  43013d:	mov    rdi,r12
  430140:	call   430320 <strcmp@plt+0x2cb98>
  430145:	mov    rbx,rax
  430148:	mov    rdi,r15
  43014b:	mov    rsi,rax
  43014e:	call   41def0 <strcmp@plt+0x1a768>
  430153:	mov    rbp,rax
  430156:	mov    rdi,rbx
  430159:	call   41db70 <strcmp@plt+0x1a3e8>
  43015e:	mov    rdi,r15
  430161:	mov    rsi,rbp
  430164:	call   41e960 <strcmp@plt+0x1b1d8>
  430169:	jmp    4301c4 <strcmp@plt+0x2ca3c>
  43016b:	lea    rax,[rip+0x34c3e]        # 464db0 <strcmp@plt+0x61628>
  430172:	cmp    DWORD PTR [rax],0x3
  430175:	jl     43019b <strcmp@plt+0x2ca13>
  430177:	lea    rsi,[rip+0x1bc23]        # 44bda1 <strcmp@plt+0x48619>
  43017e:	xor    r14d,r14d
  430181:	mov    edi,0x7
  430186:	xor    eax,eax
  430188:	call   42e800 <strcmp@plt+0x2b078>
  43018d:	jmp    4301c4 <strcmp@plt+0x2ca3c>
  43018f:	lea    rax,[rip+0x34c1a]        # 464db0 <strcmp@plt+0x61628>
  430196:	cmp    DWORD PTR [rax],0x3
  430199:	jge    4301a0 <strcmp@plt+0x2ca18>
  43019b:	xor    r14d,r14d
  43019e:	jmp    4301c4 <strcmp@plt+0x2ca3c>
  4301a0:	mov    rdi,rbx
  4301a3:	call   426ae0 <strcmp@plt+0x23358>
  4301a8:	mov    rcx,rax
  4301ab:	lea    rsi,[rip+0x1bbb4]        # 44bd66 <strcmp@plt+0x485de>
  4301b2:	xor    r14d,r14d
  4301b5:	mov    edi,0x7
  4301ba:	xor    eax,eax
  4301bc:	mov    rdx,rcx
  4301bf:	call   42e800 <strcmp@plt+0x2b078>
  4301c4:	mov    rax,r14
  4301c7:	add    rsp,0x8
  4301cb:	pop    rbx
  4301cc:	pop    r12
  4301ce:	pop    r13
  4301d0:	pop    r14
  4301d2:	pop    r15
  4301d4:	pop    rbp
  4301d5:	ret    
  4301d6:	lea    rax,[rip+0x34bd3]        # 464db0 <strcmp@plt+0x61628>
  4301dd:	cmp    DWORD PTR [rax],0x3
  4301e0:	jl     43019b <strcmp@plt+0x2ca13>
  4301e2:	mov    rdi,rbx
  4301e5:	call   426ae0 <strcmp@plt+0x23358>
  4301ea:	mov    rcx,rax
  4301ed:	lea    rsi,[rip+0x1bbe2]        # 44bdd6 <strcmp@plt+0x4864e>
  4301f4:	jmp    4301b2 <strcmp@plt+0x2ca2a>
  4301f6:	lea    rax,[rip+0x34bb3]        # 464db0 <strcmp@plt+0x61628>
  4301fd:	cmp    DWORD PTR [rax],0x3
  430200:	jl     43019b <strcmp@plt+0x2ca13>
  430202:	mov    rdi,rbx
  430205:	call   426ae0 <strcmp@plt+0x23358>
  43020a:	mov    rcx,rax
  43020d:	lea    rsi,[rip+0x1bc02]        # 44be16 <strcmp@plt+0x4868e>
  430214:	jmp    4301b2 <strcmp@plt+0x2ca2a>
  430216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430220:	push   rbp
  430221:	push   r15
  430223:	push   r14
  430225:	push   r12
  430227:	push   rbx
  430228:	mov    ebp,edx
  43022a:	mov    rbx,rsi
  43022d:	mov    r15,rdi
  430230:	mov    rdi,rsi
  430233:	call   4270d0 <strcmp@plt+0x23948>
  430238:	cmp    DWORD PTR [rax+0x18],0x1
  43023c:	jne    43026d <strcmp@plt+0x2cae5>
  43023e:	mov    r12,rax
  430241:	mov    rdi,rbx
  430244:	call   427250 <strcmp@plt+0x23ac8>
  430249:	mov    r14d,eax
  43024c:	test   bpl,bpl
  43024f:	je     430290 <strcmp@plt+0x2cb08>
  430251:	movzx  esi,r14b
  430255:	mov    rdi,r12
  430258:	call   430320 <strcmp@plt+0x2cb98>
  43025d:	mov    rbx,rax
  430260:	mov    rdi,r15
  430263:	mov    rsi,rax
  430266:	call   41def0 <strcmp@plt+0x1a768>
  43026b:	jmp    4302ba <strcmp@plt+0x2cb32>
  43026d:	lea    rax,[rip+0x34b3c]        # 464db0 <strcmp@plt+0x61628>
  430274:	cmp    DWORD PTR [rax],0x3
  430277:	jl     4302dc <strcmp@plt+0x2cb54>
  430279:	lea    rsi,[rip+0x1bb21]        # 44bda1 <strcmp@plt+0x48619>
  430280:	xor    ebx,ebx
  430282:	mov    edi,0x7
  430287:	xor    eax,eax
  430289:	call   42e800 <strcmp@plt+0x2b078>
  43028e:	jmp    430304 <strcmp@plt+0x2cb7c>
  430290:	mov    rdi,r12
  430293:	call   423d30 <strcmp@plt+0x205a8>
  430298:	mov    cl,0x20
  43029a:	cmp    eax,0x2
  43029d:	je     4302a1 <strcmp@plt+0x2cb19>
  43029f:	mov    cl,0x80
  4302a1:	movzx  esi,cl
  4302a4:	mov    rdi,r12
  4302a7:	call   430320 <strcmp@plt+0x2cb98>
  4302ac:	mov    rbx,rax
  4302af:	mov    rdi,r15
  4302b2:	mov    rsi,rax
  4302b5:	call   41e230 <strcmp@plt+0x1aaa8>
  4302ba:	mov    rbp,rax
  4302bd:	mov    rdi,rbx
  4302c0:	call   41db70 <strcmp@plt+0x1a3e8>
  4302c5:	test   rbp,rbp
  4302c8:	je     4302d0 <strcmp@plt+0x2cb48>
  4302ca:	mov    rbx,QWORD PTR [rbp+0x28]
  4302ce:	jmp    430304 <strcmp@plt+0x2cb7c>
  4302d0:	lea    rax,[rip+0x34ad9]        # 464db0 <strcmp@plt+0x61628>
  4302d7:	cmp    DWORD PTR [rax],0x3
  4302da:	jge    4302e0 <strcmp@plt+0x2cb58>
  4302dc:	xor    ebx,ebx
  4302de:	jmp    430304 <strcmp@plt+0x2cb7c>
  4302e0:	mov    rdi,r12
  4302e3:	call   423f30 <strcmp@plt+0x207a8>
  4302e8:	mov    rdx,rax
  4302eb:	movzx  ecx,r14b
  4302ef:	lea    rsi,[rip+0x1c0b0]        # 44c3a6 <strcmp@plt+0x48c1e>
  4302f6:	xor    ebx,ebx
  4302f8:	mov    edi,0x7
  4302fd:	xor    eax,eax
  4302ff:	call   42e800 <strcmp@plt+0x2b078>
  430304:	mov    rax,rbx
  430307:	pop    rbx
  430308:	pop    r12
  43030a:	pop    r14
  43030c:	pop    r15
  43030e:	pop    rbp
  43030f:	ret    
  430310:	cmp    DWORD PTR [rdi+0xc],0x0
  430314:	setle  al
  430317:	ret    
  430318:	nop    DWORD PTR [rax+rax*1+0x0]
  430320:	push   rbp
  430321:	push   r14
  430323:	push   rbx
  430324:	mov    ebx,esi
  430326:	mov    r14,rdi
  430329:	call   423d30 <strcmp@plt+0x205a8>
  43032e:	mov    ebp,eax
  430330:	or     eax,0x8
  430333:	cmp    eax,0xa
  430336:	jne    43034b <strcmp@plt+0x2cbc3>
  430338:	cmp    ebp,0x2
  43033b:	jne    430364 <strcmp@plt+0x2cbdc>
  43033d:	cmp    bl,0x21
  430340:	jb     430369 <strcmp@plt+0x2cbe1>
  430342:	lea    rdi,[rip+0x1bc0f]        # 44bf58 <strcmp@plt+0x487d0>
  430349:	jmp    4303c9 <strcmp@plt+0x2cc41>
  43034b:	lea    rsi,[rip+0x1bbdc]        # 44bf2e <strcmp@plt+0x487a6>
  430352:	xor    ebx,ebx
  430354:	mov    edi,0x3
  430359:	xor    eax,eax
  43035b:	mov    edx,ebp
  43035d:	call   42e800 <strcmp@plt+0x2b078>
  430362:	jmp    4303ba <strcmp@plt+0x2cc32>
  430364:	cmp    bl,0x81
  430367:	jae    4303c2 <strcmp@plt+0x2cc3a>
  430369:	movzx  ebx,bl
  43036c:	mov    rdi,r14
  43036f:	call   423d40 <strcmp@plt+0x205b8>
  430374:	mov    edi,ebp
  430376:	mov    rsi,rax
  430379:	mov    edx,ebx
  43037b:	call   41d6e0 <strcmp@plt+0x19f58>
  430380:	mov    rbx,rax
  430383:	test   rax,rax
  430386:	jne    4303ba <strcmp@plt+0x2cc32>
  430388:	mov    rdi,r14
  43038b:	call   423f30 <strcmp@plt+0x207a8>
  430390:	mov    rbp,rax
  430393:	call   403040 <__errno_location@plt>
  430398:	mov    edi,DWORD PTR [rax]
  43039a:	call   403170 <strerror@plt>
  43039f:	mov    rcx,rax
  4303a2:	lea    rsi,[rip+0x1bc13]        # 44bfbc <strcmp@plt+0x48834>
  4303a9:	xor    ebx,ebx
  4303ab:	mov    edi,0x3
  4303b0:	xor    eax,eax
  4303b2:	mov    rdx,rbp
  4303b5:	call   42e800 <strcmp@plt+0x2b078>
  4303ba:	mov    rax,rbx
  4303bd:	pop    rbx
  4303be:	pop    r14
  4303c0:	pop    rbp
  4303c1:	ret    
  4303c2:	lea    rdi,[rip+0x1bbe2]        # 44bfab <strcmp@plt+0x48823>
  4303c9:	lea    rsi,[rip+0x1bb98]        # 44bf68 <strcmp@plt+0x487e0>
  4303d0:	lea    rcx,[rip+0x1bba2]        # 44bf79 <strcmp@plt+0x487f1>
  4303d7:	mov    edx,0x3e8
  4303dc:	call   4032b0 <__assert_fail@plt>
  4303e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4303eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4303f0:	push   r14
  4303f2:	push   rbx
  4303f3:	push   rax
  4303f4:	mov    rbx,rsi
  4303f7:	mov    r14,rdi
  4303fa:	mov    rdi,rsi
  4303fd:	call   423d30 <strcmp@plt+0x205a8>
  430402:	mov    cl,0x20
  430404:	cmp    eax,0x2
  430407:	je     43040b <strcmp@plt+0x2cc83>
  430409:	mov    cl,0x80
  43040b:	movzx  esi,cl
  43040e:	mov    rdi,rbx
  430411:	call   430320 <strcmp@plt+0x2cb98>
  430416:	mov    rbx,rax
  430419:	mov    rdi,r14
  43041c:	mov    rsi,rax
  43041f:	call   41e230 <strcmp@plt+0x1aaa8>
  430424:	mov    r14,rax
  430427:	mov    rdi,rbx
  43042a:	call   41db70 <strcmp@plt+0x1a3e8>
  43042f:	mov    rax,r14
  430432:	add    rsp,0x8
  430436:	pop    rbx
  430437:	pop    r14
  430439:	ret    
  43043a:	nop    WORD PTR [rax+rax*1+0x0]
  430440:	push   rbp
  430441:	push   r15
  430443:	push   r14
  430445:	push   r12
  430447:	push   rbx
  430448:	test   rdi,rdi
  43044b:	je     4304e2 <strcmp@plt+0x2cd5a>
  430451:	mov    r15d,edx
  430454:	mov    r12,rsi
  430457:	mov    rbp,rdi
  43045a:	mov    rdi,rsi
  43045d:	call   4270d0 <strcmp@plt+0x23948>
  430462:	mov    rbx,rax
  430465:	mov    rdi,r12
  430468:	call   427160 <strcmp@plt+0x239d8>
  43046d:	cmp    DWORD PTR [rbx+0x18],0x1
  430471:	jne    4304cd <strcmp@plt+0x2cd45>
  430473:	mov    r14,rax
  430476:	cmp    DWORD PTR [rax+0x18],0x1
  43047a:	jne    4304cd <strcmp@plt+0x2cd45>
  43047c:	movzx  edx,r15b
  430480:	mov    rdi,rbp
  430483:	mov    rsi,r12
  430486:	call   430220 <strcmp@plt+0x2ca98>
  43048b:	test   rax,rax
  43048e:	je     43050c <strcmp@plt+0x2cd84>
  430490:	mov    rbp,rax
  430493:	mov    rdi,r14
  430496:	call   423d30 <strcmp@plt+0x205a8>
  43049b:	mov    cl,0x20
  43049d:	cmp    eax,0x2
  4304a0:	je     4304a4 <strcmp@plt+0x2cd1c>
  4304a2:	mov    cl,0x80
  4304a4:	movzx  esi,cl
  4304a7:	mov    rdi,r14
  4304aa:	call   430320 <strcmp@plt+0x2cb98>
  4304af:	mov    rbx,rax
  4304b2:	mov    rdi,rbp
  4304b5:	mov    rsi,rax
  4304b8:	call   41e230 <strcmp@plt+0x1aaa8>
  4304bd:	mov    rbp,rax
  4304c0:	mov    rdi,rbx
  4304c3:	call   41db70 <strcmp@plt+0x1a3e8>
  4304c8:	mov    rax,rbp
  4304cb:	jmp    430503 <strcmp@plt+0x2cd7b>
  4304cd:	lea    rax,[rip+0x348dc]        # 464db0 <strcmp@plt+0x61628>
  4304d4:	cmp    DWORD PTR [rax],0x3
  4304d7:	jl     430501 <strcmp@plt+0x2cd79>
  4304d9:	lea    rsi,[rip+0x1b8c1]        # 44bda1 <strcmp@plt+0x48619>
  4304e0:	jmp    4304f5 <strcmp@plt+0x2cd6d>
  4304e2:	lea    rax,[rip+0x348c7]        # 464db0 <strcmp@plt+0x61628>
  4304e9:	cmp    DWORD PTR [rax],0x3
  4304ec:	jl     430501 <strcmp@plt+0x2cd79>
  4304ee:	lea    rsi,[rip+0x1b9d4]        # 44bec9 <strcmp@plt+0x48741>
  4304f5:	mov    edi,0x7
  4304fa:	xor    eax,eax
  4304fc:	call   42e800 <strcmp@plt+0x2b078>
  430501:	xor    eax,eax
  430503:	pop    rbx
  430504:	pop    r12
  430506:	pop    r14
  430508:	pop    r15
  43050a:	pop    rbp
  43050b:	ret    
  43050c:	lea    rax,[rip+0x3489d]        # 464db0 <strcmp@plt+0x61628>
  430513:	cmp    DWORD PTR [rax],0x3
  430516:	jl     430501 <strcmp@plt+0x2cd79>
  430518:	mov    rdi,r12
  43051b:	call   426ae0 <strcmp@plt+0x23358>
  430520:	mov    rcx,rax
  430523:	lea    rsi,[rip+0x1b9c6]        # 44bef0 <strcmp@plt+0x48768>
  43052a:	mov    edi,0x7
  43052f:	xor    eax,eax
  430531:	mov    rdx,rcx
  430534:	call   42e800 <strcmp@plt+0x2b078>
  430539:	jmp    430501 <strcmp@plt+0x2cd79>
  43053b:	nop    DWORD PTR [rax+rax*1+0x0]
  430540:	push   rbp
  430541:	push   r15
  430543:	push   r14
  430545:	push   r13
  430547:	push   r12
  430549:	push   rbx
  43054a:	sub    rsp,0x838
  430551:	mov    rbx,rdx
  430554:	mov    r14,rsi
  430557:	mov    rbp,rdi
  43055a:	call   42bbd0 <strcmp@plt+0x28448>
  43055f:	mov    r15,rax
  430562:	mov    rdi,QWORD PTR [rbp+0x0]
  430566:	mov    rsi,rax
  430569:	call   42bcf0 <strcmp@plt+0x28568>
  43056e:	mov    rdi,QWORD PTR [rbp+0x8]
  430572:	mov    QWORD PTR [rsp+0x8],r15
  430577:	mov    rsi,r15
  43057a:	call   42bcf0 <strcmp@plt+0x28568>
  43057f:	mov    QWORD PTR [rsp+0x10],rbp
  430584:	mov    rax,QWORD PTR [rbp+0x10]
  430588:	mov    rcx,QWORD PTR [rax]
  43058b:	cmp    DWORD PTR [rcx],0x0
  43058e:	je     4305e5 <strcmp@plt+0x2ce5d>
  430590:	xor    r12d,r12d
  430593:	mov    r15d,0x3
  430599:	xor    ebp,ebp
  43059b:	nop    DWORD PTR [rax+rax*1+0x0]
  4305a0:	mov    rdx,QWORD PTR [rcx+0x10]
  4305a4:	mov    esi,ebp
  4305a6:	shr    esi,0x4
  4305a9:	mov    edi,r12d
  4305ac:	and    dil,0x1e
  4305b0:	shlx   edi,r15d,edi
  4305b5:	test   DWORD PTR [rdx+rsi*4],edi
  4305b8:	jne    4305d7 <strcmp@plt+0x2ce4f>
  4305ba:	mov    rax,QWORD PTR [rcx+0x20]
  4305be:	mov    ecx,ebp
  4305c0:	mov    rdi,QWORD PTR [rax+rcx*8]
  4305c4:	mov    rsi,QWORD PTR [rsp+0x8]
  4305c9:	call   42bcf0 <strcmp@plt+0x28568>
  4305ce:	mov    rax,QWORD PTR [rsp+0x10]
  4305d3:	mov    rax,QWORD PTR [rax+0x10]
  4305d7:	add    ebp,0x1
  4305da:	mov    rcx,QWORD PTR [rax]
  4305dd:	add    r12d,0x2
  4305e1:	cmp    ebp,DWORD PTR [rcx]
  4305e3:	jne    4305a0 <strcmp@plt+0x2ce18>
  4305e5:	mov    rax,QWORD PTR [rsp+0x10]
  4305ea:	mov    rax,QWORD PTR [rax+0x18]
  4305ee:	mov    rcx,QWORD PTR [rax]
  4305f1:	cmp    DWORD PTR [rcx],0x0
  4305f4:	je     430655 <strcmp@plt+0x2cecd>
  4305f6:	xor    r12d,r12d
  4305f9:	mov    r15d,0x3
  4305ff:	xor    ebp,ebp
  430601:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43060b:	nop    DWORD PTR [rax+rax*1+0x0]
  430610:	mov    rdx,QWORD PTR [rcx+0x10]
  430614:	mov    esi,ebp
  430616:	shr    esi,0x4
  430619:	mov    edi,r12d
  43061c:	and    dil,0x1e
  430620:	shlx   edi,r15d,edi
  430625:	test   DWORD PTR [rdx+rsi*4],edi
  430628:	jne    430647 <strcmp@plt+0x2cebf>
  43062a:	mov    rax,QWORD PTR [rcx+0x20]
  43062e:	mov    ecx,ebp
  430630:	mov    rdi,QWORD PTR [rax+rcx*8]
  430634:	mov    rsi,QWORD PTR [rsp+0x8]
  430639:	call   42bcf0 <strcmp@plt+0x28568>
  43063e:	mov    rax,QWORD PTR [rsp+0x10]
  430643:	mov    rax,QWORD PTR [rax+0x18]
  430647:	add    ebp,0x1
  43064a:	mov    rcx,QWORD PTR [rax]
  43064d:	add    r12d,0x2
  430651:	cmp    ebp,DWORD PTR [rcx]
  430653:	jne    430610 <strcmp@plt+0x2ce88>
  430655:	mov    rax,QWORD PTR [rsp+0x8]
  43065a:	mov    rcx,QWORD PTR [rax+0x8]
  43065e:	cmp    rcx,rax
  430661:	je     430780 <strcmp@plt+0x2cff8>
  430667:	nop    WORD PTR [rax+rax*1+0x0]
  430670:	mov    QWORD PTR [rsp+0x18],rcx
  430675:	mov    rax,QWORD PTR [rcx+0x10]
  430679:	mov    r15,QWORD PTR [rax]
  43067c:	test   r15,r15
  43067f:	je     43076c <strcmp@plt+0x2cfe4>
  430685:	xor    ebp,ebp
  430687:	nop    WORD PTR [rax+rax*1+0x0]
  430690:	cmp    QWORD PTR [r15+0x8],0x0
  430695:	je     430718 <strcmp@plt+0x2cf90>
  43069b:	mov    rax,QWORD PTR [r15+0x28]
  43069f:	mov    r13,QWORD PTR [rax]
  4306a2:	test   r13,r13
  4306a5:	je     430718 <strcmp@plt+0x2cf90>
  4306a7:	xor    r12d,r12d
  4306aa:	nop    WORD PTR [rax+rax*1+0x0]
  4306b0:	cmp    QWORD PTR [r13+0x8],0x0
  4306b5:	je     4306c6 <strcmp@plt+0x2cf3e>
  4306b7:	mov    rdi,QWORD PTR [r13+0x28]
  4306bb:	test   rdi,rdi
  4306be:	je     4306c6 <strcmp@plt+0x2cf3e>
  4306c0:	mov    rsi,rbx
  4306c3:	call   r14
  4306c6:	mov    rax,QWORD PTR [r13+0x10]
  4306ca:	mov    rcx,QWORD PTR [r13+0x18]
  4306ce:	test   rax,rax
  4306d1:	je     4306f0 <strcmp@plt+0x2cf68>
  4306d3:	test   rcx,rcx
  4306d6:	je     430710 <strcmp@plt+0x2cf88>
  4306d8:	mov    QWORD PTR [rsp+r12*8+0x20],rcx
  4306dd:	add    r12,0x1
  4306e1:	jmp    430710 <strcmp@plt+0x2cf88>
  4306e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4306ed:	nop    DWORD PTR [rax]
  4306f0:	test   rcx,rcx
  4306f3:	je     4306fa <strcmp@plt+0x2cf72>
  4306f5:	mov    rax,rcx
  4306f8:	jmp    430710 <strcmp@plt+0x2cf88>
  4306fa:	test   r12,r12
  4306fd:	je     430718 <strcmp@plt+0x2cf90>
  4306ff:	mov    rax,QWORD PTR [rsp+r12*8+0x18]
  430704:	add    r12,0xffffffffffffffff
  430708:	nop    DWORD PTR [rax+rax*1+0x0]
  430710:	mov    r13,rax
  430713:	test   rax,rax
  430716:	jne    4306b0 <strcmp@plt+0x2cf28>
  430718:	mov    rax,QWORD PTR [r15+0x10]
  43071c:	mov    rcx,QWORD PTR [r15+0x18]
  430720:	test   rax,rax
  430723:	je     430740 <strcmp@plt+0x2cfb8>
  430725:	test   rcx,rcx
  430728:	je     430760 <strcmp@plt+0x2cfd8>
  43072a:	mov    QWORD PTR [rsp+rbp*8+0x430],rcx
  430732:	add    rbp,0x1
  430736:	jmp    430760 <strcmp@plt+0x2cfd8>
  430738:	nop    DWORD PTR [rax+rax*1+0x0]
  430740:	test   rcx,rcx
  430743:	je     43074a <strcmp@plt+0x2cfc2>
  430745:	mov    rax,rcx
  430748:	jmp    430760 <strcmp@plt+0x2cfd8>
  43074a:	test   rbp,rbp
  43074d:	je     43076c <strcmp@plt+0x2cfe4>
  43074f:	mov    rax,QWORD PTR [rsp+rbp*8+0x428]
  430757:	add    rbp,0xffffffffffffffff
  43075b:	nop    DWORD PTR [rax+rax*1+0x0]
  430760:	mov    r15,rax
  430763:	test   rax,rax
  430766:	jne    430690 <strcmp@plt+0x2cf08>
  43076c:	mov    rcx,QWORD PTR [rsp+0x18]
  430771:	mov    rcx,QWORD PTR [rcx+0x8]
  430775:	cmp    rcx,QWORD PTR [rsp+0x8]
  43077a:	jne    430670 <strcmp@plt+0x2cee8>
  430780:	mov    rdi,QWORD PTR [rsp+0x8]
  430785:	call   42c250 <strcmp@plt+0x28ac8>
  43078a:	mov    rcx,QWORD PTR [rsp+0x10]
  43078f:	mov    rax,QWORD PTR [rcx+0x20]
  430793:	mov    rcx,QWORD PTR [rcx+0x28]
  430797:	mov    QWORD PTR [rsp+0x18],rcx
  43079c:	mov    r13,QWORD PTR [rax]
  43079f:	test   r13,r13
  4307a2:	je     43088c <strcmp@plt+0x2d104>
  4307a8:	xor    r12d,r12d
  4307ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4307b0:	cmp    QWORD PTR [r13+0x8],0x0
  4307b5:	je     430838 <strcmp@plt+0x2d0b0>
  4307bb:	mov    rax,QWORD PTR [r13+0x28]
  4307bf:	mov    r15,QWORD PTR [rax]
  4307c2:	test   r15,r15
  4307c5:	je     430838 <strcmp@plt+0x2d0b0>
  4307c7:	xor    ebp,ebp
  4307c9:	nop    DWORD PTR [rax+0x0]
  4307d0:	cmp    QWORD PTR [r15+0x8],0x0
  4307d5:	je     4307e6 <strcmp@plt+0x2d05e>
  4307d7:	mov    rdi,QWORD PTR [r15+0x28]
  4307db:	test   rdi,rdi
  4307de:	je     4307e6 <strcmp@plt+0x2d05e>
  4307e0:	mov    rsi,rbx
  4307e3:	call   r14
  4307e6:	mov    rax,QWORD PTR [r15+0x10]
  4307ea:	mov    rcx,QWORD PTR [r15+0x18]
  4307ee:	test   rax,rax
  4307f1:	je     430810 <strcmp@plt+0x2d088>
  4307f3:	test   rcx,rcx
  4307f6:	je     430830 <strcmp@plt+0x2d0a8>
  4307f8:	mov    QWORD PTR [rsp+rbp*8+0x20],rcx
  4307fd:	add    rbp,0x1
  430801:	jmp    430830 <strcmp@plt+0x2d0a8>
  430803:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43080d:	nop    DWORD PTR [rax]
  430810:	test   rcx,rcx
  430813:	je     43081a <strcmp@plt+0x2d092>
  430815:	mov    rax,rcx
  430818:	jmp    430830 <strcmp@plt+0x2d0a8>
  43081a:	test   rbp,rbp
  43081d:	je     430838 <strcmp@plt+0x2d0b0>
  43081f:	mov    rax,QWORD PTR [rsp+rbp*8+0x18]
  430824:	add    rbp,0xffffffffffffffff
  430828:	nop    DWORD PTR [rax+rax*1+0x0]
  430830:	mov    r15,rax
  430833:	test   rax,rax
  430836:	jne    4307d0 <strcmp@plt+0x2d048>
  430838:	mov    rax,QWORD PTR [r13+0x10]
  43083c:	mov    rcx,QWORD PTR [r13+0x18]
  430840:	test   rax,rax
  430843:	je     430860 <strcmp@plt+0x2d0d8>
  430845:	test   rcx,rcx
  430848:	je     430880 <strcmp@plt+0x2d0f8>
  43084a:	mov    QWORD PTR [rsp+r12*8+0x430],rcx
  430852:	add    r12,0x1
  430856:	jmp    430880 <strcmp@plt+0x2d0f8>
  430858:	nop    DWORD PTR [rax+rax*1+0x0]
  430860:	test   rcx,rcx
  430863:	je     43086a <strcmp@plt+0x2d0e2>
  430865:	mov    rax,rcx
  430868:	jmp    430880 <strcmp@plt+0x2d0f8>
  43086a:	test   r12,r12
  43086d:	je     43088c <strcmp@plt+0x2d104>
  43086f:	mov    rax,QWORD PTR [rsp+r12*8+0x428]
  430877:	add    r12,0xffffffffffffffff
  43087b:	nop    DWORD PTR [rax+rax*1+0x0]
  430880:	mov    r13,rax
  430883:	test   rax,rax
  430886:	jne    4307b0 <strcmp@plt+0x2d028>
  43088c:	mov    rax,QWORD PTR [rsp+0x18]
  430891:	mov    r12,QWORD PTR [rax]
  430894:	test   r12,r12
  430897:	je     43097c <strcmp@plt+0x2d1f4>
  43089d:	xor    r15d,r15d
  4308a0:	cmp    QWORD PTR [r12+0x8],0x0
  4308a6:	je     43092b <strcmp@plt+0x2d1a3>
  4308ac:	mov    r13,rbx
  4308af:	mov    rax,QWORD PTR [r12+0x28]
  4308b4:	mov    rbx,QWORD PTR [rax]
  4308b7:	test   rbx,rbx
  4308ba:	je     430928 <strcmp@plt+0x2d1a0>
  4308bc:	xor    ebp,ebp
  4308be:	xchg   ax,ax
  4308c0:	cmp    QWORD PTR [rbx+0x8],0x0
  4308c5:	je     4308d6 <strcmp@plt+0x2d14e>
  4308c7:	mov    rdi,QWORD PTR [rbx+0x28]
  4308cb:	test   rdi,rdi
  4308ce:	je     4308d6 <strcmp@plt+0x2d14e>
  4308d0:	mov    rsi,r13
  4308d3:	call   r14
  4308d6:	mov    rax,QWORD PTR [rbx+0x10]
  4308da:	mov    rcx,QWORD PTR [rbx+0x18]
  4308de:	test   rax,rax
  4308e1:	je     430900 <strcmp@plt+0x2d178>
  4308e3:	test   rcx,rcx
  4308e6:	je     430920 <strcmp@plt+0x2d198>
  4308e8:	mov    QWORD PTR [rsp+rbp*8+0x20],rcx
  4308ed:	add    rbp,0x1
  4308f1:	jmp    430920 <strcmp@plt+0x2d198>
  4308f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4308fd:	nop    DWORD PTR [rax]
  430900:	test   rcx,rcx
  430903:	je     43090a <strcmp@plt+0x2d182>
  430905:	mov    rax,rcx
  430908:	jmp    430920 <strcmp@plt+0x2d198>
  43090a:	test   rbp,rbp
  43090d:	je     430928 <strcmp@plt+0x2d1a0>
  43090f:	mov    rax,QWORD PTR [rsp+rbp*8+0x18]
  430914:	add    rbp,0xffffffffffffffff
  430918:	nop    DWORD PTR [rax+rax*1+0x0]
  430920:	mov    rbx,rax
  430923:	test   rax,rax
  430926:	jne    4308c0 <strcmp@plt+0x2d138>
  430928:	mov    rbx,r13
  43092b:	mov    rax,QWORD PTR [r12+0x10]
  430930:	mov    rcx,QWORD PTR [r12+0x18]
  430935:	test   rax,rax
  430938:	je     430950 <strcmp@plt+0x2d1c8>
  43093a:	test   rcx,rcx
  43093d:	je     430970 <strcmp@plt+0x2d1e8>
  43093f:	mov    QWORD PTR [rsp+r15*8+0x430],rcx
  430947:	add    r15,0x1
  43094b:	jmp    430970 <strcmp@plt+0x2d1e8>
  43094d:	nop    DWORD PTR [rax]
  430950:	test   rcx,rcx
  430953:	je     43095a <strcmp@plt+0x2d1d2>
  430955:	mov    rax,rcx
  430958:	jmp    430970 <strcmp@plt+0x2d1e8>
  43095a:	test   r15,r15
  43095d:	je     43097c <strcmp@plt+0x2d1f4>
  43095f:	mov    rax,QWORD PTR [rsp+r15*8+0x428]
  430967:	add    r15,0xffffffffffffffff
  43096b:	nop    DWORD PTR [rax+rax*1+0x0]
  430970:	mov    r12,rax
  430973:	test   rax,rax
  430976:	jne    4308a0 <strcmp@plt+0x2d118>
  43097c:	add    rsp,0x838
  430983:	pop    rbx
  430984:	pop    r12
  430986:	pop    r13
  430988:	pop    r14
  43098a:	pop    r15
  43098c:	pop    rbp
  43098d:	ret    
  43098e:	xchg   ax,ax
  430990:	push   rbx
  430991:	mov    edi,0x48
  430996:	call   432070 <strcmp@plt+0x2e8e8>
  43099b:	mov    rbx,rax
  43099e:	mov    BYTE PTR [rax+0x10],0x0
  4309a2:	xor    edi,edi
  4309a4:	call   403370 <time@plt>
  4309a9:	mov    QWORD PTR [rbx+0x18],rax
  4309ad:	mov    rax,rbx
  4309b0:	pop    rbx
  4309b1:	ret    
  4309b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4309bc:	nop    DWORD PTR [rax+0x0]
  4309c0:	mov    QWORD PTR [rdi+0x8],rsi
  4309c4:	mov    BYTE PTR [rdi],0x1
  4309c7:	ret    
  4309c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4309d0:	mov    BYTE PTR [rdi+0x10],0x1
  4309d4:	mov    QWORD PTR [rdi+0x8],rsi
  4309d8:	mov    BYTE PTR [rdi],0x2
  4309db:	ret    
  4309dc:	nop    DWORD PTR [rax+0x0]
  4309e0:	push   rbp
  4309e1:	push   r15
  4309e3:	push   r14
  4309e5:	push   r13
  4309e7:	push   r12
  4309e9:	push   rbx
  4309ea:	push   rax
  4309eb:	test   rdi,rdi
  4309ee:	je     430abc <strcmp@plt+0x2d334>
  4309f4:	mov    r14,rdi
  4309f7:	mov    rax,QWORD PTR [rdi+0x8]
  4309fb:	mov    rcx,QWORD PTR [rax+0x28]
  4309ff:	mov    r13,QWORD PTR [rcx+0x8]
  430a03:	cmp    r13,rcx
  430a06:	je     430a67 <strcmp@plt+0x2d2df>
  430a08:	lea    r15,[rip+0x3fb91]        # 4705a0 <strcmp@plt+0x6ce18>
  430a0f:	lea    r12,[rip+0x3fb92]        # 4705a8 <strcmp@plt+0x6ce20>
  430a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430a20:	mov    rbx,QWORD PTR [r13+0x10]
  430a24:	cmp    DWORD PTR [rbx+0x18],0x0
  430a28:	je     430a5d <strcmp@plt+0x2d2d5>
  430a2a:	mov    rbp,QWORD PTR [rbx+0x8]
  430a2e:	cmp    rbp,rbx
  430a31:	je     430a5d <strcmp@plt+0x2d2d5>
  430a33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430a3d:	nop    DWORD PTR [rax]
  430a40:	mov    rdi,QWORD PTR [rbp+0x10]
  430a44:	mov    rsi,QWORD PTR [r15]
  430a47:	mov    rdx,QWORD PTR [r12]
  430a4b:	call   4376b0 <strcmp@plt+0x33f28>
  430a50:	mov    rbp,QWORD PTR [rbp+0x8]
  430a54:	cmp    rbp,rbx
  430a57:	jne    430a40 <strcmp@plt+0x2d2b8>
  430a59:	mov    rax,QWORD PTR [r14+0x8]
  430a5d:	mov    r13,QWORD PTR [r13+0x8]
  430a61:	cmp    r13,QWORD PTR [rax+0x28]
  430a65:	jne    430a20 <strcmp@plt+0x2d298>
  430a67:	lea    rax,[rip+0x3fb32]        # 4705a0 <strcmp@plt+0x6ce18>
  430a6e:	mov    rsi,QWORD PTR [rax]
  430a71:	lea    rax,[rip+0x3fb30]        # 4705a8 <strcmp@plt+0x6ce20>
  430a78:	mov    rdx,QWORD PTR [rax]
  430a7b:	mov    rdi,r14
  430a7e:	call   4376b0 <strcmp@plt+0x33f28>
  430a83:	mov    rdi,QWORD PTR [r14+0x8]
  430a87:	call   428ed0 <strcmp@plt+0x25748>
  430a8c:	mov    rdi,QWORD PTR [r14+0x20]
  430a90:	test   rdi,rdi
  430a93:	je     430a99 <strcmp@plt+0x2d311>
  430a95:	call   QWORD PTR [r14+0x28]
  430a99:	mov    rdi,QWORD PTR [r14+0x30]
  430a9d:	test   rdi,rdi
  430aa0:	je     430aa6 <strcmp@plt+0x2d31e>
  430aa2:	call   QWORD PTR [r14+0x38]
  430aa6:	mov    rdi,r14
  430aa9:	add    rsp,0x8
  430aad:	pop    rbx
  430aae:	pop    r12
  430ab0:	pop    r13
  430ab2:	pop    r14
  430ab4:	pop    r15
  430ab6:	pop    rbp
  430ab7:	jmp    403780 <free@plt>
  430abc:	lea    rdi,[rip+0x1b930]        # 44c3f3 <strcmp@plt+0x48c6b>
  430ac3:	lea    rsi,[rip+0x1b92f]        # 44c3f9 <strcmp@plt+0x48c71>
  430aca:	lea    rcx,[rip+0x1b93e]        # 44c40f <strcmp@plt+0x48c87>
  430ad1:	mov    edx,0x40
  430ad6:	call   4032b0 <__assert_fail@plt>
  430adb:	nop    DWORD PTR [rax+rax*1+0x0]
  430ae0:	mov    rax,QWORD PTR [rdi+0x8]
  430ae4:	ret    
  430ae5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430aef:	nop
  430af0:	mov    rax,QWORD PTR [rdi+0x8]
  430af4:	cmp    WORD PTR [rax+0x20],0x0
  430af9:	setne  al
  430afc:	ret    
  430afd:	nop    DWORD PTR [rax]
  430b00:	push   rbp
  430b01:	push   r15
  430b03:	push   r14
  430b05:	push   r13
  430b07:	push   r12
  430b09:	push   rbx
  430b0a:	sub    rsp,0x2e8
  430b11:	mov    r15d,esi
  430b14:	mov    r12,rdi
  430b17:	cmp    esi,0x5
  430b1a:	jl     430b31 <strcmp@plt+0x2d3a9>
  430b1c:	lea    rax,[rip+0x3428d]        # 464db0 <strcmp@plt+0x61628>
  430b23:	mov    eax,DWORD PTR [rax]
  430b25:	add    eax,0x4
  430b28:	cmp    eax,r15d
  430b2b:	jl     430c8e <strcmp@plt+0x2d506>
  430b31:	mov    BYTE PTR [rsp+0x1e0],0x0
  430b39:	mov    BYTE PTR [rsp+0x10],0x0
  430b3e:	mov    BYTE PTR [rsp+0x50],0x0
  430b43:	mov    r14,QWORD PTR [r12+0x8]
  430b48:	xor    edi,edi
  430b4a:	call   403370 <time@plt>
  430b4f:	sub    rax,QWORD PTR [r12+0x18]
  430b54:	mov    QWORD PTR [rsp],rax
  430b58:	mov    rdi,rsp
  430b5b:	call   403300 <localtime@plt>
  430b60:	lea    rdx,[rip+0x1b8d0]        # 44c437 <strcmp@plt+0x48caf>
  430b67:	lea    rdi,[rsp+0x1e0]
  430b6f:	mov    esi,0x14
  430b74:	mov    rcx,rax
  430b77:	call   403320 <strftime@plt>
  430b7c:	mov    rax,QWORD PTR [r12+0x8]
  430b81:	imul   eax,DWORD PTR [rax+0x30],0x3c
  430b85:	sub    rax,QWORD PTR [rsp]
  430b89:	mov    QWORD PTR [rsp+0x8],rax
  430b8e:	jle    430bb3 <strcmp@plt+0x2d42b>
  430b90:	lea    rdi,[rsp+0x8]
  430b95:	call   403300 <localtime@plt>
  430b9a:	lea    rdx,[rip+0x1b896]        # 44c437 <strcmp@plt+0x48caf>
  430ba1:	lea    rdi,[rsp+0x10]
  430ba6:	mov    esi,0x14
  430bab:	mov    rcx,rax
  430bae:	call   403320 <strftime@plt>
  430bb3:	lea    rdx,[rip+0x1b886]        # 44c440 <strcmp@plt+0x48cb8>
  430bba:	mov    ebp,0x190
  430bbf:	lea    r13,[rsp+0x50]
  430bc4:	lea    rcx,[rsp+0x1e0]
  430bcc:	lea    r8,[rsp+0x10]
  430bd1:	mov    esi,0x190
  430bd6:	xor    eax,eax
  430bd8:	mov    rdi,r13
  430bdb:	call   403620 <snprintf@plt>
  430be0:	mov    bl,BYTE PTR [r12]
  430be4:	mov    rdi,r13
  430be7:	call   4031e0 <strlen@plt>
  430bec:	sub    rbp,rax
  430bef:	lea    rdi,[rsp+rax*1]
  430bf3:	add    rdi,0x50
  430bf7:	cmp    bl,0x2
  430bfa:	jne    430c05 <strcmp@plt+0x2d47d>
  430bfc:	lea    rdx,[rip+0x1b85d]        # 44c460 <strcmp@plt+0x48cd8>
  430c03:	jmp    430c0c <strcmp@plt+0x2d484>
  430c05:	lea    rdx,[rip+0x1b863]        # 44c46f <strcmp@plt+0x48ce7>
  430c0c:	xor    eax,eax
  430c0e:	mov    rsi,rbp
  430c11:	call   403620 <snprintf@plt>
  430c16:	lea    rdi,[rsp+0x50]
  430c1b:	call   4031e0 <strlen@plt>
  430c20:	lea    rdi,[rsp+rax*1]
  430c24:	add    rdi,0x50
  430c28:	mov    esi,0x190
  430c2d:	sub    rsi,rax
  430c30:	cmp    BYTE PTR [r12+0x10],0x1
  430c36:	lea    rax,[rip+0x1b84d]        # 44c48a <strcmp@plt+0x48d02>
  430c3d:	lea    rcx,[rip+0x1b84a]        # 44c48e <strcmp@plt+0x48d06>
  430c44:	cmove  rcx,rax
  430c48:	lea    rdx,[rip+0x1b830]        # 44c47f <strcmp@plt+0x48cf7>
  430c4f:	xor    eax,eax
  430c51:	call   403620 <snprintf@plt>
  430c56:	cmp    r15d,0x5
  430c5a:	jl     430c6d <strcmp@plt+0x2d4e5>
  430c5c:	lea    rax,[rip+0x3414d]        # 464db0 <strcmp@plt+0x61628>
  430c63:	mov    eax,DWORD PTR [rax]
  430c65:	add    eax,0x4
  430c68:	cmp    eax,r15d
  430c6b:	jl     430c8e <strcmp@plt+0x2d506>
  430c6d:	mov    rdi,r14
  430c70:	call   429040 <strcmp@plt+0x258b8>
  430c75:	mov    rcx,rax
  430c78:	lea    rsi,[rip+0x1b812]        # 44c491 <strcmp@plt+0x48d09>
  430c7f:	lea    rdx,[rsp+0x50]
  430c84:	xor    eax,eax
  430c86:	mov    edi,r15d
  430c89:	call   42e800 <strcmp@plt+0x2b078>
  430c8e:	add    rsp,0x2e8
  430c95:	pop    rbx
  430c96:	pop    r12
  430c98:	pop    r13
  430c9a:	pop    r14
  430c9c:	pop    r15
  430c9e:	pop    rbp
  430c9f:	ret    
  430ca0:	push   rbx
  430ca1:	mov    edi,0x18
  430ca6:	call   432070 <strcmp@plt+0x2e8e8>
  430cab:	mov    rbx,rax
  430cae:	xor    edi,edi
  430cb0:	call   403370 <time@plt>
  430cb5:	mov    QWORD PTR [rbx+0x10],rax
  430cb9:	mov    rax,rbx
  430cbc:	pop    rbx
  430cbd:	ret    
  430cbe:	xchg   ax,ax
  430cc0:	mov    QWORD PTR [rdi+0x8],rsi
  430cc4:	mov    BYTE PTR [rdi],0x1
  430cc7:	ret    
  430cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  430cd0:	mov    QWORD PTR [rdi+0x8],rsi
  430cd4:	mov    BYTE PTR [rdi],0x2
  430cd7:	ret    
  430cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  430ce0:	test   rdi,rdi
  430ce3:	je     430da2 <strcmp@plt+0x2d61a>
  430ce9:	push   rbp
  430cea:	push   r15
  430cec:	push   r14
  430cee:	push   r13
  430cf0:	push   r12
  430cf2:	push   rbx
  430cf3:	push   rax
  430cf4:	mov    r14,rdi
  430cf7:	mov    rax,QWORD PTR [rdi+0x8]
  430cfb:	mov    rcx,QWORD PTR [rax+0x28]
  430cff:	mov    r13,QWORD PTR [rcx+0x8]
  430d03:	cmp    r13,rcx
  430d06:	je     430d67 <strcmp@plt+0x2d5df>
  430d08:	lea    r15,[rip+0x3f891]        # 4705a0 <strcmp@plt+0x6ce18>
  430d0f:	lea    r12,[rip+0x3f892]        # 4705a8 <strcmp@plt+0x6ce20>
  430d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430d20:	mov    rbx,QWORD PTR [r13+0x10]
  430d24:	cmp    DWORD PTR [rbx+0x18],0x0
  430d28:	je     430d5d <strcmp@plt+0x2d5d5>
  430d2a:	mov    rbp,QWORD PTR [rbx+0x8]
  430d2e:	cmp    rbp,rbx
  430d31:	je     430d5d <strcmp@plt+0x2d5d5>
  430d33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430d3d:	nop    DWORD PTR [rax]
  430d40:	mov    rdi,QWORD PTR [rbp+0x10]
  430d44:	mov    rsi,QWORD PTR [r15]
  430d47:	mov    rdx,QWORD PTR [r12]
  430d4b:	call   4376b0 <strcmp@plt+0x33f28>
  430d50:	mov    rbp,QWORD PTR [rbp+0x8]
  430d54:	cmp    rbp,rbx
  430d57:	jne    430d40 <strcmp@plt+0x2d5b8>
  430d59:	mov    rax,QWORD PTR [r14+0x8]
  430d5d:	mov    r13,QWORD PTR [r13+0x8]
  430d61:	cmp    r13,QWORD PTR [rax+0x28]
  430d65:	jne    430d20 <strcmp@plt+0x2d598>
  430d67:	lea    rax,[rip+0x3f832]        # 4705a0 <strcmp@plt+0x6ce18>
  430d6e:	mov    rsi,QWORD PTR [rax]
  430d71:	lea    rax,[rip+0x3f830]        # 4705a8 <strcmp@plt+0x6ce20>
  430d78:	mov    rdx,QWORD PTR [rax]
  430d7b:	mov    rdi,r14
  430d7e:	call   4376b0 <strcmp@plt+0x33f28>
  430d83:	mov    rdi,QWORD PTR [r14+0x8]
  430d87:	call   429dd0 <strcmp@plt+0x26648>
  430d8c:	mov    rdi,r14
  430d8f:	add    rsp,0x8
  430d93:	pop    rbx
  430d94:	pop    r12
  430d96:	pop    r13
  430d98:	pop    r14
  430d9a:	pop    r15
  430d9c:	pop    rbp
  430d9d:	jmp    403780 <free@plt>
  430da2:	ret    
  430da3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430dad:	nop    DWORD PTR [rax]
  430db0:	mov    rax,QWORD PTR [rdi+0x8]
  430db4:	ret    
  430db5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430dbf:	nop
  430dc0:	mov    rax,QWORD PTR [rdi+0x8]
  430dc4:	cmp    WORD PTR [rax+0x20],0x0
  430dc9:	setne  al
  430dcc:	ret    
  430dcd:	nop    DWORD PTR [rax]
  430dd0:	push   rbp
  430dd1:	push   r15
  430dd3:	push   r14
  430dd5:	push   r12
  430dd7:	push   rbx
  430dd8:	sub    rsp,0x2e0
  430ddf:	mov    r15d,esi
  430de2:	mov    rbx,rdi
  430de5:	cmp    esi,0x5
  430de8:	jl     430dff <strcmp@plt+0x2d677>
  430dea:	lea    rax,[rip+0x33fbf]        # 464db0 <strcmp@plt+0x61628>
  430df1:	mov    eax,DWORD PTR [rax]
  430df3:	add    eax,0x4
  430df6:	cmp    eax,r15d
  430df9:	jl     430f1a <strcmp@plt+0x2d792>
  430dff:	mov    BYTE PTR [rsp+0x50],0x0
  430e04:	mov    BYTE PTR [rsp+0x10],0x0
  430e09:	mov    BYTE PTR [rsp+0x150],0x0
  430e11:	mov    r14,QWORD PTR [rbx+0x8]
  430e15:	xor    edi,edi
  430e17:	call   403370 <time@plt>
  430e1c:	sub    rax,QWORD PTR [rbx+0x10]
  430e20:	mov    QWORD PTR [rsp],rax
  430e24:	mov    rdi,rsp
  430e27:	call   403300 <localtime@plt>
  430e2c:	lea    rdx,[rip+0x1b604]        # 44c437 <strcmp@plt+0x48caf>
  430e33:	lea    rdi,[rsp+0x50]
  430e38:	mov    esi,0x14
  430e3d:	mov    rcx,rax
  430e40:	call   403320 <strftime@plt>
  430e45:	mov    rax,QWORD PTR [rbx+0x8]
  430e49:	imul   eax,DWORD PTR [rax+0x38],0x3c
  430e4d:	sub    rax,QWORD PTR [rsp]
  430e51:	mov    QWORD PTR [rsp+0x8],rax
  430e56:	jle    430e7b <strcmp@plt+0x2d6f3>
  430e58:	lea    rdi,[rsp+0x8]
  430e5d:	call   403300 <localtime@plt>
  430e62:	lea    rdx,[rip+0x1b5ce]        # 44c437 <strcmp@plt+0x48caf>
  430e69:	lea    rdi,[rsp+0x10]
  430e6e:	mov    esi,0x14
  430e73:	mov    rcx,rax
  430e76:	call   403320 <strftime@plt>
  430e7b:	lea    rdx,[rip+0x1b5be]        # 44c440 <strcmp@plt+0x48cb8>
  430e82:	mov    ebp,0x190
  430e87:	lea    r12,[rsp+0x150]
  430e8f:	lea    rcx,[rsp+0x50]
  430e94:	lea    r8,[rsp+0x10]
  430e99:	mov    esi,0x190
  430e9e:	xor    eax,eax
  430ea0:	mov    rdi,r12
  430ea3:	call   403620 <snprintf@plt>
  430ea8:	mov    bl,BYTE PTR [rbx]
  430eaa:	mov    rdi,r12
  430ead:	call   4031e0 <strlen@plt>
  430eb2:	sub    rbp,rax
  430eb5:	lea    rdi,[rsp+rax*1]
  430eb9:	add    rdi,0x150
  430ec0:	cmp    bl,0x2
  430ec3:	jne    430ece <strcmp@plt+0x2d746>
  430ec5:	lea    rdx,[rip+0x1b594]        # 44c460 <strcmp@plt+0x48cd8>
  430ecc:	jmp    430ed5 <strcmp@plt+0x2d74d>
  430ece:	lea    rdx,[rip+0x1b59a]        # 44c46f <strcmp@plt+0x48ce7>
  430ed5:	xor    eax,eax
  430ed7:	mov    rsi,rbp
  430eda:	call   403620 <snprintf@plt>
  430edf:	cmp    r15d,0x5
  430ee3:	jl     430ef6 <strcmp@plt+0x2d76e>
  430ee5:	lea    rax,[rip+0x33ec4]        # 464db0 <strcmp@plt+0x61628>
  430eec:	mov    eax,DWORD PTR [rax]
  430eee:	add    eax,0x4
  430ef1:	cmp    eax,r15d
  430ef4:	jl     430f1a <strcmp@plt+0x2d792>
  430ef6:	mov    rdi,r14
  430ef9:	call   429f50 <strcmp@plt+0x267c8>
  430efe:	mov    rcx,rax
  430f01:	lea    rsi,[rip+0x1b589]        # 44c491 <strcmp@plt+0x48d09>
  430f08:	lea    rdx,[rsp+0x150]
  430f10:	xor    eax,eax
  430f12:	mov    edi,r15d
  430f15:	call   42e800 <strcmp@plt+0x2b078>
  430f1a:	add    rsp,0x2e0
  430f21:	pop    rbx
  430f22:	pop    r12
  430f24:	pop    r14
  430f26:	pop    r15
  430f28:	pop    rbp
  430f29:	ret    
  430f2a:	nop    WORD PTR [rax+rax*1+0x0]
  430f30:	push   r14
  430f32:	push   rbx
  430f33:	push   rax
  430f34:	mov    r14,rdi
  430f37:	mov    edi,0x18
  430f3c:	call   432070 <strcmp@plt+0x2e8e8>
  430f41:	mov    rbx,rax
  430f44:	xor    edi,edi
  430f46:	call   403370 <time@plt>
  430f4b:	mov    QWORD PTR [rbx+0x10],rax
  430f4f:	mov    al,BYTE PTR [r14]
  430f52:	mov    BYTE PTR [rbx],al
  430f54:	mov    rdi,QWORD PTR [r14+0x8]
  430f58:	call   429ed0 <strcmp@plt+0x26748>
  430f5d:	mov    QWORD PTR [rbx+0x8],rax
  430f61:	mov    rax,QWORD PTR [r14+0x10]
  430f65:	mov    QWORD PTR [rbx+0x10],rax
  430f69:	mov    rax,rbx
  430f6c:	add    rsp,0x8
  430f70:	pop    rbx
  430f71:	pop    r14
  430f73:	ret    
  430f74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430f7e:	xchg   ax,ax
  430f80:	mov    edi,0x8
  430f85:	jmp    432070 <strcmp@plt+0x2e8e8>
  430f8a:	nop    WORD PTR [rax+rax*1+0x0]
  430f90:	push   r14
  430f92:	push   rbx
  430f93:	push   rax
  430f94:	mov    edi,0x8
  430f99:	call   432070 <strcmp@plt+0x2e8e8>
  430f9e:	test   rax,rax
  430fa1:	je     430fd7 <strcmp@plt+0x2d84f>
  430fa3:	mov    rbx,rax
  430fa6:	mov    edi,0x10
  430fab:	call   432070 <strcmp@plt+0x2e8e8>
  430fb0:	test   rax,rax
  430fb3:	je     430fd7 <strcmp@plt+0x2d84f>
  430fb5:	mov    r14,rax
  430fb8:	mov    QWORD PTR [rbx],rax
  430fbb:	lea    rdi,[rip+0xffffffffffffb28e]        # 42c250 <strcmp@plt+0x28ac8>
  430fc2:	call   436260 <strcmp@plt+0x32ad8>
  430fc7:	mov    QWORD PTR [r14],rax
  430fca:	xor    eax,eax
  430fcc:	call   42c4b0 <strcmp@plt+0x28d28>
  430fd1:	mov    QWORD PTR [r14+0x8],rax
  430fd5:	jmp    430fd9 <strcmp@plt+0x2d851>
  430fd7:	xor    ebx,ebx
  430fd9:	mov    rax,rbx
  430fdc:	add    rsp,0x8
  430fe0:	pop    rbx
  430fe1:	pop    r14
  430fe3:	ret    
  430fe4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430fee:	xchg   ax,ax
  430ff0:	test   rdi,rdi
  430ff3:	je     431026 <strcmp@plt+0x2d89e>
  430ff5:	push   rbx
  430ff6:	mov    rbx,rdi
  430ff9:	mov    rax,QWORD PTR [rdi]
  430ffc:	test   rax,rax
  430fff:	je     43101d <strcmp@plt+0x2d895>
  431001:	mov    rdi,QWORD PTR [rax]
  431004:	call   436870 <strcmp@plt+0x330e8>
  431009:	mov    rax,QWORD PTR [rbx]
  43100c:	mov    rdi,QWORD PTR [rax+0x8]
  431010:	call   42c850 <strcmp@plt+0x290c8>
  431015:	mov    rdi,QWORD PTR [rbx]
  431018:	call   403780 <free@plt>
  43101d:	mov    rdi,rbx
  431020:	pop    rbx
  431021:	jmp    403780 <free@plt>
  431026:	ret    
  431027:	nop    WORD PTR [rax+rax*1+0x0]
  431030:	push   rbp
  431031:	push   r15
  431033:	push   r14
  431035:	push   r13
  431037:	push   r12
  431039:	push   rbx
  43103a:	push   rax
  43103b:	mov    DWORD PTR [rsp+0x4],r9d
  431040:	mov    r15,r8
  431043:	mov    rbx,rcx
  431046:	mov    r12d,edx
  431049:	mov    r14,rsi
  43104c:	mov    r13,rdi
  43104f:	mov    edi,0x38
  431054:	call   432070 <strcmp@plt+0x2e8e8>
  431059:	test   rax,rax
  43105c:	je     4310a4 <strcmp@plt+0x2d91c>
  43105e:	mov    rbp,rax
  431061:	mov    rdi,r14
  431064:	call   423740 <strcmp@plt+0x1ffb8>
  431069:	mov    QWORD PTR [rbp+0x0],rax
  43106d:	mov    rdi,rbx
  431070:	call   423740 <strcmp@plt+0x1ffb8>
  431075:	mov    QWORD PTR [rbp+0x10],rax
  431079:	mov    rdi,r13
  43107c:	call   423740 <strcmp@plt+0x1ffb8>
  431081:	mov    QWORD PTR [rbp+0x18],rax
  431085:	mov    WORD PTR [rbp+0x8],r12w
  43108a:	vmovups xmm0,XMMWORD PTR [r15]
  43108f:	vmovups XMMWORD PTR [rbp+0x20],xmm0
  431094:	mov    eax,DWORD PTR [rsp+0x4]
  431098:	mov    BYTE PTR [rbp+0x30],al
  43109b:	mov    al,BYTE PTR [rsp+0x40]
  43109f:	mov    BYTE PTR [rbp+0x31],al
  4310a2:	jmp    4310a6 <strcmp@plt+0x2d91e>
  4310a4:	xor    ebp,ebp
  4310a6:	mov    rax,rbp
  4310a9:	add    rsp,0x8
  4310ad:	pop    rbx
  4310ae:	pop    r12
  4310b0:	pop    r13
  4310b2:	pop    r14
  4310b4:	pop    r15
  4310b6:	pop    rbp
  4310b7:	ret    
  4310b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4310c0:	push   rbx
  4310c1:	mov    rbx,rdi
  4310c4:	lea    rax,[rip+0x3f4d5]        # 4705a0 <strcmp@plt+0x6ce18>
  4310cb:	mov    rsi,QWORD PTR [rax]
  4310ce:	lea    rax,[rip+0x3f4d3]        # 4705a8 <strcmp@plt+0x6ce20>
  4310d5:	mov    rdx,QWORD PTR [rax]
  4310d8:	call   4376b0 <strcmp@plt+0x33f28>
  4310dd:	mov    rdi,QWORD PTR [rbx+0x10]
  4310e1:	call   422fa0 <strcmp@plt+0x1f818>
  4310e6:	mov    rdi,QWORD PTR [rbx]
  4310e9:	call   422fa0 <strcmp@plt+0x1f818>
  4310ee:	mov    rdi,QWORD PTR [rbx+0x18]
  4310f2:	call   422fa0 <strcmp@plt+0x1f818>
  4310f7:	mov    rdi,rbx
  4310fa:	pop    rbx
  4310fb:	jmp    403780 <free@plt>
  431100:	push   rbp
  431101:	push   r15
  431103:	push   r14
  431105:	push   r13
  431107:	push   r12
  431109:	push   rbx
  43110a:	sub    rsp,0x18
  43110e:	mov    eax,DWORD PTR [rip+0x3e744]        # 46f858 <strcmp@plt+0x6c0d0>
  431114:	lea    ecx,[rax+0x1]
  431117:	movsxd rcx,ecx
  43111a:	imul   rcx,rcx,0x55555556
  431121:	mov    rdx,rcx
  431124:	shr    rdx,0x3f
  431128:	shr    rcx,0x20
  43112c:	add    ecx,edx
  43112e:	lea    ecx,[rcx+rcx*2]
  431131:	neg    ecx
  431133:	lea    eax,[rax+rcx*1]
  431136:	add    eax,0x1
  431139:	mov    DWORD PTR [rip+0x3e719],eax        # 46f858 <strcmp@plt+0x6c0d0>
  43113f:	cdqe   
  431141:	imul   rax,rax,0x3e8
  431148:	lea    r13,[rip+0x3db51]        # 46eca0 <strcmp@plt+0x6b518>
  43114f:	lea    rbx,[rax+r13*1]
  431153:	mov    BYTE PTR [rax+r13*1],0x0
  431158:	test   rdi,rdi
  43115b:	je     4311f5 <strcmp@plt+0x2da6d>
  431161:	mov    r14,rdi
  431164:	mov    rdi,rbx
  431167:	call   4031e0 <strlen@plt>
  43116c:	add    rbx,rax
  43116f:	mov    r15d,0x3e8
  431175:	sub    r15,rax
  431178:	mov    rdi,QWORD PTR [r14+0x10]
  43117c:	call   423130 <strcmp@plt+0x1f9a8>
  431181:	mov    QWORD PTR [rsp+0x10],rax
  431186:	mov    rdi,QWORD PTR [r14]
  431189:	call   423130 <strcmp@plt+0x1f9a8>
  43118e:	mov    QWORD PTR [rsp+0x8],rax
  431193:	movzx  r12d,WORD PTR [r14+0x8]
  431198:	mov    rdi,QWORD PTR [r14+0x18]
  43119c:	call   423130 <strcmp@plt+0x1f9a8>
  4311a1:	mov    r10,rax
  4311a4:	movzx  r11d,BYTE PTR [r14+0x30]
  4311a9:	movzx  ebp,BYTE PTR [r14+0x31]
  4311ae:	sub    rsp,0x8
  4311b2:	lea    rdx,[rip+0x1b2df]        # 44c498 <strcmp@plt+0x48d10>
  4311b9:	mov    eax,0x0
  4311be:	mov    rdi,rbx
  4311c1:	mov    rsi,r15
  4311c4:	mov    rcx,QWORD PTR [rsp+0x18]
  4311c9:	mov    r8,QWORD PTR [rsp+0x10]
  4311ce:	mov    r9d,r12d
  4311d1:	push   rbp
  4311d2:	push   r11
  4311d4:	push   r10
  4311d6:	call   403620 <snprintf@plt>
  4311db:	add    rsp,0x20
  4311df:	movsxd rax,DWORD PTR [rip+0x3e672]        # 46f858 <strcmp@plt+0x6c0d0>
  4311e6:	imul   rax,rax,0x3e8
  4311ed:	add    r13,rax
  4311f0:	mov    rbx,r13
  4311f3:	jmp    431205 <strcmp@plt+0x2da7d>
  4311f5:	mov    BYTE PTR [rbx+0x6],0x0
  4311f9:	mov    WORD PTR [rbx+0x4],0x5f4c
  4311ff:	mov    DWORD PTR [rbx],0x4c554e5f
  431205:	mov    rax,rbx
  431208:	add    rsp,0x18
  43120c:	pop    rbx
  43120d:	pop    r12
  43120f:	pop    r13
  431211:	pop    r14
  431213:	pop    r15
  431215:	pop    rbp
  431216:	ret    
  431217:	nop    WORD PTR [rax+rax*1+0x0]
  431220:	push   rbp
  431221:	push   r15
  431223:	push   r14
  431225:	push   r13
  431227:	push   r12
  431229:	push   rbx
  43122a:	sub    rsp,0x58
  43122e:	mov    QWORD PTR [rsp+0x28],r9
  431233:	mov    DWORD PTR [rsp+0x1c],r8d
  431238:	mov    QWORD PTR [rsp+0x38],rcx
  43123d:	mov    QWORD PTR [rsp+0x40],rdx
  431242:	mov    r12,rsi
  431245:	mov    rcx,QWORD PTR [rsp+0x90]
  43124d:	mov    r13,QWORD PTR [rdi+0x30]
  431251:	mov    rax,QWORD PTR [r13+0x0]
  431255:	mov    rbx,QWORD PTR [rax]
  431258:	mov    rdi,rcx
  43125b:	call   437ac0 <strcmp@plt+0x34338>
  431260:	mov    rdi,rbx
  431263:	mov    rsi,rax
  431266:	call   436750 <strcmp@plt+0x32fc8>
  43126b:	mov    r14,rax
  43126e:	test   rax,rax
  431271:	jne    43130d <strcmp@plt+0x2db85>
  431277:	lea    rax,[rip+0x33b32]        # 464db0 <strcmp@plt+0x61628>
  43127e:	cmp    DWORD PTR [rax],0x3
  431281:	jl     4312b4 <strcmp@plt+0x2db2c>
  431283:	mov    rdi,QWORD PTR [rsp+0x90]
  43128b:	call   437ac0 <strcmp@plt+0x34338>
  431290:	mov    rbx,rax
  431293:	mov    rdi,r12
  431296:	call   423130 <strcmp@plt+0x1f9a8>
  43129b:	mov    rcx,rax
  43129e:	lea    rsi,[rip+0x1b240]        # 44c4e5 <strcmp@plt+0x48d5d>
  4312a5:	mov    edi,0x7
  4312aa:	xor    eax,eax
  4312ac:	mov    rdx,rbx
  4312af:	call   42e800 <strcmp@plt+0x2b078>
  4312b4:	lea    rdi,[rip+0xfffffffffffffe05]        # 4310c0 <strcmp@plt+0x2d938>
  4312bb:	call   42bc00 <strcmp@plt+0x28478>
  4312c0:	mov    r14,rax
  4312c3:	mov    rax,QWORD PTR [r13+0x0]
  4312c7:	mov    rbx,QWORD PTR [rax]
  4312ca:	mov    r15,QWORD PTR [rsp+0x90]
  4312d2:	mov    rdi,r15
  4312d5:	call   437ac0 <strcmp@plt+0x34338>
  4312da:	mov    rdi,rax
  4312dd:	call   403700 <strdup@plt>
  4312e2:	mov    rdi,rbx
  4312e5:	mov    rsi,rax
  4312e8:	mov    rdx,r14
  4312eb:	call   4362a0 <strcmp@plt+0x32b18>
  4312f0:	mov    rax,QWORD PTR [r13+0x0]
  4312f4:	mov    rbx,QWORD PTR [rax]
  4312f7:	mov    rdi,r15
  4312fa:	call   437ac0 <strcmp@plt+0x34338>
  4312ff:	mov    rdi,rbx
  431302:	mov    rsi,rax
  431305:	call   436750 <strcmp@plt+0x32fc8>
  43130a:	mov    r14,rax
  43130d:	call   42bbd0 <strcmp@plt+0x28448>
  431312:	mov    QWORD PTR [rsp+0x10],rax
  431317:	mov    rax,QWORD PTR [r12+0x28]
  43131c:	mov    rdx,QWORD PTR [rax+0x8]
  431320:	cmp    rdx,rax
  431323:	je     431532 <strcmp@plt+0x2ddaa>
  431329:	mov    rcx,r12
  43132c:	xor    esi,esi
  43132e:	mov    QWORD PTR [rsp+0x20],rsi
  431333:	xor    esi,esi
  431335:	mov    QWORD PTR [rsp+0x8],rsi
  43133a:	mov    QWORD PTR [rsp+0x50],rcx
  43133f:	nop
  431340:	mov    rbp,QWORD PTR [rdx+0x10]
  431344:	cmp    DWORD PTR [rbp+0x18],0x0
  431348:	je     43150e <strcmp@plt+0x2dd86>
  43134e:	mov    QWORD PTR [rsp+0x30],rdx
  431353:	mov    rbx,QWORD PTR [rbp+0x8]
  431357:	mov    r15,QWORD PTR [rbx+0x10]
  43135b:	mov    rcx,QWORD PTR [r15]
  43135e:	cmp    DWORD PTR [rcx+0x18],0x0
  431362:	je     431509 <strcmp@plt+0x2dd81>
  431368:	cmp    rbx,rbp
  43136b:	je     431509 <strcmp@plt+0x2dd81>
  431371:	mov    QWORD PTR [rsp+0x48],rbp
  431376:	cmp    BYTE PTR [r15+0xa],0x0
  43137b:	jne    4314f0 <strcmp@plt+0x2dd68>
  431381:	jmp    43139f <strcmp@plt+0x2dc17>
  431383:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43138d:	nop    DWORD PTR [rax]
  431390:	mov    r15,QWORD PTR [rbx+0x10]
  431394:	cmp    BYTE PTR [r15+0xa],0x0
  431399:	jne    4314f0 <strcmp@plt+0x2dd68>
  43139f:	mov    rdi,QWORD PTR [r15]
  4313a2:	mov    rsi,QWORD PTR [rsp+0x28]
  4313a7:	call   423970 <strcmp@plt+0x201e8>
  4313ac:	mov    r13d,eax
  4313af:	mov    rbp,QWORD PTR [r14+0x8]
  4313b3:	cmp    rbp,r14
  4313b6:	jne    4313c9 <strcmp@plt+0x2dc41>
  4313b8:	jmp    431410 <strcmp@plt+0x2dc88>
  4313ba:	nop    WORD PTR [rax+rax*1+0x0]
  4313c0:	mov    rbp,QWORD PTR [rbp+0x8]
  4313c4:	cmp    rbp,r14
  4313c7:	je     431410 <strcmp@plt+0x2dc88>
  4313c9:	mov    r12,QWORD PTR [rbp+0x10]
  4313cd:	mov    rdi,QWORD PTR [r15]
  4313d0:	mov    rsi,QWORD PTR [r12+0x10]
  4313d5:	call   423970 <strcmp@plt+0x201e8>
  4313da:	test   eax,eax
  4313dc:	jne    4313c0 <strcmp@plt+0x2dc38>
  4313de:	mov    al,BYTE PTR [r15+0xb]
  4313e2:	mov    BYTE PTR [r12+0x30],al
  4313e7:	mov    al,BYTE PTR [r15+0xc]
  4313eb:	mov    BYTE PTR [r12+0x31],al
  4313f0:	mov    rdi,r12
  4313f3:	mov    rsi,QWORD PTR [rsp+0x10]
  4313f8:	call   42bcf0 <strcmp@plt+0x28568>
  4313fd:	mov    rbp,QWORD PTR [rsp+0x48]
  431402:	jmp    4314f0 <strcmp@plt+0x2dd68>
  431407:	nop    WORD PTR [rax+rax*1+0x0]
  431410:	test   r13d,r13d
  431413:	mov    rbp,QWORD PTR [rsp+0x48]
  431418:	jne    4314f0 <strcmp@plt+0x2dd68>
  43141e:	mov    r12b,BYTE PTR [r15+0xb]
  431422:	mov    r13b,BYTE PTR [r15+0xc]
  431426:	mov    edi,0x38
  43142b:	call   432070 <strcmp@plt+0x2e8e8>
  431430:	test   rax,rax
  431433:	mov    rcx,rax
  431436:	mov    QWORD PTR [rsp+0x8],rax
  43143b:	je     4314aa <strcmp@plt+0x2dd22>
  43143d:	mov    rdi,QWORD PTR [rsp+0x38]
  431442:	call   423740 <strcmp@plt+0x1ffb8>
  431447:	mov    rcx,QWORD PTR [rsp+0x8]
  43144c:	mov    QWORD PTR [rcx],rax
  43144f:	mov    rdi,QWORD PTR [rsp+0x28]
  431454:	call   423740 <strcmp@plt+0x1ffb8>
  431459:	mov    rcx,QWORD PTR [rsp+0x8]
  43145e:	mov    QWORD PTR [rcx+0x10],rax
  431462:	mov    rdi,QWORD PTR [rsp+0x40]
  431467:	call   423740 <strcmp@plt+0x1ffb8>
  43146c:	mov    rcx,QWORD PTR [rsp+0x8]
  431471:	mov    QWORD PTR [rcx+0x18],rax
  431475:	mov    eax,DWORD PTR [rsp+0x1c]
  431479:	mov    rcx,QWORD PTR [rsp+0x8]
  43147e:	mov    WORD PTR [rcx+0x8],ax
  431482:	mov    rax,QWORD PTR [rsp+0x90]
  43148a:	vmovups xmm0,XMMWORD PTR [rax]
  43148e:	mov    rax,QWORD PTR [rsp+0x8]
  431493:	vmovups XMMWORD PTR [rax+0x20],xmm0
  431498:	mov    BYTE PTR [rax+0x30],r12b
  43149c:	mov    BYTE PTR [rax+0x31],r13b
  4314a0:	mov    rcx,rax
  4314a3:	mov    QWORD PTR [rsp+0x20],rax
  4314a8:	jmp    4314b1 <strcmp@plt+0x2dd29>
  4314aa:	xor    ecx,ecx
  4314ac:	mov    QWORD PTR [rsp+0x20],rcx
  4314b1:	mov    rdi,rax
  4314b4:	mov    rsi,QWORD PTR [rsp+0x10]
  4314b9:	call   42bcf0 <strcmp@plt+0x28568>
  4314be:	lea    rax,[rip+0x338eb]        # 464db0 <strcmp@plt+0x61628>
  4314c5:	cmp    DWORD PTR [rax],0x2
  4314c8:	jl     4314f0 <strcmp@plt+0x2dd68>
  4314ca:	mov    rdi,QWORD PTR [rsp+0x20]
  4314cf:	call   431100 <strcmp@plt+0x2d978>
  4314d4:	mov    rcx,rax
  4314d7:	mov    edi,0x6
  4314dc:	xor    eax,eax
  4314de:	lea    rsi,[rip+0x1b03e]        # 44c523 <strcmp@plt+0x48d9b>
  4314e5:	mov    rdx,rcx
  4314e8:	call   42e800 <strcmp@plt+0x2b078>
  4314ed:	nop    DWORD PTR [rax]
  4314f0:	mov    rbx,QWORD PTR [rbx+0x8]
  4314f4:	cmp    rbx,rbp
  4314f7:	jne    431390 <strcmp@plt+0x2dc08>
  4314fd:	mov    rcx,QWORD PTR [rsp+0x50]
  431502:	mov    rax,QWORD PTR [rcx+0x28]
  431506:	mov    r12,r15
  431509:	mov    rdx,QWORD PTR [rsp+0x30]
  43150e:	mov    rdx,QWORD PTR [rdx+0x8]
  431512:	cmp    rdx,rax
  431515:	jne    431340 <strcmp@plt+0x2dbb8>
  43151b:	cmp    QWORD PTR [rsp+0x20],0x0
  431521:	je     431532 <strcmp@plt+0x2ddaa>
  431523:	mov    rdi,QWORD PTR [rsp+0x8]
  431528:	mov    rsi,r14
  43152b:	call   42bcf0 <strcmp@plt+0x28568>
  431530:	jmp    431532 <strcmp@plt+0x2ddaa>
  431532:	mov    rax,QWORD PTR [rsp+0x10]
  431537:	cmp    DWORD PTR [rax+0x18],0x0
  43153b:	mov    rbx,QWORD PTR [r14+0x8]
  43153f:	jne    43155b <strcmp@plt+0x2ddd3>
  431541:	jmp    431584 <strcmp@plt+0x2ddfc>
  431543:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43154d:	nop    DWORD PTR [rax]
  431550:	mov    rdi,rbp
  431553:	mov    rsi,r14
  431556:	call   42c0c0 <strcmp@plt+0x28938>
  43155b:	cmp    rbx,r14
  43155e:	je     431651 <strcmp@plt+0x2dec9>
  431564:	mov    rbp,QWORD PTR [rbx+0x10]
  431568:	mov    rbx,QWORD PTR [rbx+0x8]
  43156c:	mov    rdi,rbp
  43156f:	mov    rsi,QWORD PTR [rsp+0x10]
  431574:	call   42be80 <strcmp@plt+0x286f8>
  431579:	test   al,al
  43157b:	jne    43155b <strcmp@plt+0x2ddd3>
  43157d:	jmp    431550 <strcmp@plt+0x2ddc8>
  43157f:	nop
  431580:	mov    rbx,QWORD PTR [rbx+0x8]
  431584:	cmp    rbx,r14
  431587:	je     4315aa <strcmp@plt+0x2de22>
  431589:	mov    rbp,QWORD PTR [rbx+0x10]
  43158d:	mov    rsi,QWORD PTR [rbp+0x10]
  431591:	mov    rdi,QWORD PTR [rsp+0x28]
  431596:	call   423970 <strcmp@plt+0x201e8>
  43159b:	test   eax,eax
  43159d:	jne    431580 <strcmp@plt+0x2ddf8>
  43159f:	mov    WORD PTR [rbp+0x30],0x6401
  4315a5:	jmp    431651 <strcmp@plt+0x2dec9>
  4315aa:	mov    bl,BYTE PTR [r12+0xb]
  4315af:	mov    bpl,BYTE PTR [r12+0xc]
  4315b4:	mov    edi,0x38
  4315b9:	call   432070 <strcmp@plt+0x2e8e8>
  4315be:	mov    r15,rax
  4315c1:	test   rax,rax
  4315c4:	je     431617 <strcmp@plt+0x2de8f>
  4315c6:	mov    rdi,QWORD PTR [rsp+0x38]
  4315cb:	call   423740 <strcmp@plt+0x1ffb8>
  4315d0:	mov    QWORD PTR [r15],rax
  4315d3:	mov    rdi,QWORD PTR [rsp+0x28]
  4315d8:	call   423740 <strcmp@plt+0x1ffb8>
  4315dd:	mov    QWORD PTR [r15+0x10],rax
  4315e1:	mov    rdi,QWORD PTR [rsp+0x40]
  4315e6:	call   423740 <strcmp@plt+0x1ffb8>
  4315eb:	mov    QWORD PTR [r15+0x18],rax
  4315ef:	mov    eax,DWORD PTR [rsp+0x1c]
  4315f3:	mov    WORD PTR [r15+0x8],ax
  4315f8:	mov    rax,QWORD PTR [rsp+0x90]
  431600:	vmovups xmm0,XMMWORD PTR [rax]
  431604:	vmovups XMMWORD PTR [r15+0x20],xmm0
  43160a:	mov    BYTE PTR [r15+0x30],bl
  43160e:	mov    BYTE PTR [r15+0x31],bpl
  431612:	mov    rbp,r15
  431615:	jmp    431619 <strcmp@plt+0x2de91>
  431617:	xor    ebp,ebp
  431619:	mov    rdi,r15
  43161c:	mov    rsi,r14
  43161f:	call   42bcf0 <strcmp@plt+0x28568>
  431624:	lea    rax,[rip+0x33785]        # 464db0 <strcmp@plt+0x61628>
  43162b:	cmp    DWORD PTR [rax],0x2
  43162e:	jl     431651 <strcmp@plt+0x2dec9>
  431630:	mov    rdi,rbp
  431633:	call   431100 <strcmp@plt+0x2d978>
  431638:	mov    rcx,rax
  43163b:	lea    rsi,[rip+0x1af0b]        # 44c54d <strcmp@plt+0x48dc5>
  431642:	mov    edi,0x6
  431647:	xor    eax,eax
  431649:	mov    rdx,rcx
  43164c:	call   42e800 <strcmp@plt+0x2b078>
  431651:	mov    rdi,QWORD PTR [rsp+0x10]
  431656:	call   42c250 <strcmp@plt+0x28ac8>
  43165b:	mov    eax,0x1
  431660:	add    rsp,0x58
  431664:	pop    rbx
  431665:	pop    r12
  431667:	pop    r13
  431669:	pop    r14
  43166b:	pop    r15
  43166d:	pop    rbp
  43166e:	ret    
  43166f:	nop
  431670:	push   rbp
  431671:	push   r15
  431673:	push   r14
  431675:	push   r13
  431677:	push   r12
  431679:	push   rbx
  43167a:	sub    rsp,0x38
  43167e:	mov    QWORD PTR [rsp+0x18],r9
  431683:	mov    DWORD PTR [rsp+0x8],r8d
  431688:	mov    rbx,rcx
  43168b:	mov    r15,rdx
  43168e:	mov    r13,rsi
  431691:	mov    rbp,rdi
  431694:	mov    rdi,QWORD PTR [rdi+0x8]
  431698:	mov    r14,QWORD PTR [rbp+0x30]
  43169c:	mov    QWORD PTR [rsp+0x30],rdi
  4316a1:	call   428fd0 <strcmp@plt+0x25848>
  4316a6:	mov    QWORD PTR [rsp+0x20],rax
  4316ab:	xor    eax,eax
  4316ad:	call   42c4b0 <strcmp@plt+0x28d28>
  4316b2:	mov    r12,rax
  4316b5:	sub    rsp,0x8
  4316b9:	mov    QWORD PTR [rsp+0x30],rbp
  4316be:	mov    rdi,rbp
  4316c1:	mov    rsi,r13
  4316c4:	mov    rdx,r15
  4316c7:	mov    rcx,rbx
  4316ca:	mov    r8d,DWORD PTR [rsp+0x10]
  4316cf:	mov    r9,QWORD PTR [rsp+0x20]
  4316d4:	push   QWORD PTR [rsp+0x78]
  4316d8:	call   431220 <strcmp@plt+0x2da98>
  4316dd:	add    rsp,0x10
  4316e1:	mov    QWORD PTR [rsp+0x10],r14
  4316e6:	mov    rax,QWORD PTR [r14]
  4316e9:	mov    rdi,QWORD PTR [rax]
  4316ec:	call   4369b0 <strcmp@plt+0x33228>
  4316f1:	mov    rcx,QWORD PTR [rax+0x8]
  4316f5:	mov    QWORD PTR [rsp+0x8],rax
  4316fa:	cmp    rcx,rax
  4316fd:	je     431797 <strcmp@plt+0x2e00f>
  431703:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43170d:	nop    DWORD PTR [rax]
  431710:	mov    QWORD PTR [rsp+0x18],rcx
  431715:	mov    r13,QWORD PTR [rcx+0x10]
  431719:	mov    r14,QWORD PTR [r13+0x8]
  43171d:	cmp    r14,r13
  431720:	mov    r15,QWORD PTR [rsp+0x20]
  431725:	je     431783 <strcmp@plt+0x2dffb>
  431727:	nop    WORD PTR [rax+rax*1+0x0]
  431730:	mov    rbp,QWORD PTR [r14+0x10]
  431734:	mov    rdi,QWORD PTR [rbp+0x10]
  431738:	movzx  r8d,BYTE PTR [rbp+0x30]
  43173d:	movzx  r9d,BYTE PTR [rbp+0x31]
  431742:	mov    esi,0x1
  431747:	xor    edx,edx
  431749:	mov    ecx,0x1
  43174e:	push   0x0
  431750:	push   0xff
  431755:	call   428660 <strcmp@plt+0x24ed8>
  43175a:	add    rsp,0x10
  43175e:	mov    rbx,rax
  431761:	mov    rdi,r15
  431764:	mov    rsi,rax
  431767:	call   4291e0 <strcmp@plt+0x25a58>
  43176c:	mov    rdi,r12
  43176f:	mov    rsi,rbx
  431772:	mov    rdx,rbp
  431775:	call   42c520 <strcmp@plt+0x28d98>
  43177a:	mov    r14,QWORD PTR [r14+0x8]
  43177e:	cmp    r14,r13
  431781:	jne    431730 <strcmp@plt+0x2dfa8>
  431783:	mov    rcx,QWORD PTR [rsp+0x18]
  431788:	mov    rcx,QWORD PTR [rcx+0x8]
  43178c:	cmp    rcx,QWORD PTR [rsp+0x8]
  431791:	jne    431710 <strcmp@plt+0x2df88>
  431797:	mov    rdi,QWORD PTR [rsp+0x8]
  43179c:	call   42c250 <strcmp@plt+0x28ac8>
  4317a1:	mov    r14,QWORD PTR [rsp+0x20]
  4317a6:	mov    rdi,r14
  4317a9:	mov    rbp,QWORD PTR [rsp+0x30]
  4317ae:	mov    rsi,rbp
  4317b1:	call   428f00 <strcmp@plt+0x25778>
  4317b6:	test   eax,eax
  4317b8:	je     4318c4 <strcmp@plt+0x2e13c>
  4317be:	mov    rbx,QWORD PTR [rsp+0x10]
  4317c3:	mov    rax,QWORD PTR [rbx]
  4317c6:	mov    rdi,QWORD PTR [rax+0x8]
  4317ca:	call   42c850 <strcmp@plt+0x290c8>
  4317cf:	mov    rdi,rbp
  4317d2:	call   428ed0 <strcmp@plt+0x25748>
  4317d7:	mov    rax,QWORD PTR [rsp+0x28]
  4317dc:	mov    QWORD PTR [rax+0x8],r14
  4317e0:	mov    rax,QWORD PTR [rbx]
  4317e3:	mov    QWORD PTR [rax+0x8],r12
  4317e7:	lea    rbp,[rip+0x335c2]        # 464db0 <strcmp@plt+0x61628>
  4317ee:	cmp    DWORD PTR [rbp+0x0],0x2
  4317f2:	jl     43181d <strcmp@plt+0x2e095>
  4317f4:	mov    rdi,r14
  4317f7:	call   423130 <strcmp@plt+0x1f9a8>
  4317fc:	mov    rcx,rax
  4317ff:	lea    rsi,[rip+0x1ad72]        # 44c578 <strcmp@plt+0x48df0>
  431806:	mov    edi,0x6
  43180b:	xor    eax,eax
  43180d:	mov    rdx,rcx
  431810:	call   42e800 <strcmp@plt+0x2b078>
  431815:	mov    rax,QWORD PTR [rsp+0x10]
  43181a:	mov    rax,QWORD PTR [rax]
  43181d:	mov    rdi,QWORD PTR [rax]
  431820:	call   436930 <strcmp@plt+0x331a8>
  431825:	mov    r13,rax
  431828:	mov    r12,QWORD PTR [rax+0x8]
  43182c:	cmp    r12,rax
  43182f:	je     43188e <strcmp@plt+0x2e106>
  431831:	lea    r15,[rip+0xfffffffffffff8c8]        # 431100 <strcmp@plt+0x2d978>
  431838:	nop    DWORD PTR [rax+rax*1+0x0]
  431840:	mov    rbx,QWORD PTR [r12+0x10]
  431845:	cmp    DWORD PTR [rbp+0x0],0x2
  431849:	jl     431861 <strcmp@plt+0x2e0d9>
  43184b:	mov    edi,0x6
  431850:	xor    eax,eax
  431852:	lea    rsi,[rip+0x1ad57]        # 44c5b0 <strcmp@plt+0x48e28>
  431859:	mov    rdx,rbx
  43185c:	call   42e800 <strcmp@plt+0x2b078>
  431861:	mov    rax,QWORD PTR [rsp+0x10]
  431866:	mov    rax,QWORD PTR [rax]
  431869:	mov    rdi,QWORD PTR [rax]
  43186c:	mov    rsi,rbx
  43186f:	call   436750 <strcmp@plt+0x32fc8>
  431874:	mov    edx,0x6
  431879:	mov    rdi,rax
  43187c:	mov    rsi,r15
  43187f:	call   42bf40 <strcmp@plt+0x287b8>
  431884:	mov    r12,QWORD PTR [r12+0x8]
  431889:	cmp    r12,r13
  43188c:	jne    431840 <strcmp@plt+0x2e0b8>
  43188e:	mov    rdi,r13
  431891:	call   42c250 <strcmp@plt+0x28ac8>
  431896:	mov    ebx,0x2
  43189b:	cmp    DWORD PTR [rbp+0x0],0x2
  43189f:	jl     4318f8 <strcmp@plt+0x2e170>
  4318a1:	mov    rdi,r14
  4318a4:	call   429040 <strcmp@plt+0x258b8>
  4318a9:	mov    rcx,rax
  4318ac:	lea    rsi,[rip+0x1ad1e]        # 44c5d1 <strcmp@plt+0x48e49>
  4318b3:	mov    edi,0x6
  4318b8:	xor    eax,eax
  4318ba:	mov    rdx,rcx
  4318bd:	call   42e800 <strcmp@plt+0x2b078>
  4318c2:	jmp    4318f8 <strcmp@plt+0x2e170>
  4318c4:	lea    rax,[rip+0x334e5]        # 464db0 <strcmp@plt+0x61628>
  4318cb:	cmp    DWORD PTR [rax],0x2
  4318ce:	jl     4318e3 <strcmp@plt+0x2e15b>
  4318d0:	lea    rsi,[rip+0x1ad32]        # 44c609 <strcmp@plt+0x48e81>
  4318d7:	mov    edi,0x6
  4318dc:	xor    eax,eax
  4318de:	call   42e800 <strcmp@plt+0x2b078>
  4318e3:	mov    rdi,r14
  4318e6:	call   428ed0 <strcmp@plt+0x25748>
  4318eb:	mov    rdi,r12
  4318ee:	call   42c850 <strcmp@plt+0x290c8>
  4318f3:	mov    ebx,0x1
  4318f8:	mov    eax,ebx
  4318fa:	add    rsp,0x38
  4318fe:	pop    rbx
  4318ff:	pop    r12
  431901:	pop    r13
  431903:	pop    r14
  431905:	pop    r15
  431907:	pop    rbp
  431908:	ret    
  431909:	nop    DWORD PTR [rax+0x0]
  431910:	push   rbp
  431911:	push   r15
  431913:	push   r14
  431915:	push   r13
  431917:	push   r12
  431919:	push   rbx
  43191a:	push   rax
  43191b:	mov    r15,rsi
  43191e:	mov    rbp,QWORD PTR [rdi+0x8]
  431922:	mov    r14,QWORD PTR [rdi+0x30]
  431926:	lea    rax,[rip+0x33483]        # 464db0 <strcmp@plt+0x61628>
  43192d:	cmp    DWORD PTR [rax],0x2
  431930:	jl     431971 <strcmp@plt+0x2e1e9>
  431932:	lea    rdi,[r15+0x20]
  431936:	call   437ac0 <strcmp@plt+0x34338>
  43193b:	mov    r12,rax
  43193e:	mov    rdi,QWORD PTR [r15+0x10]
  431942:	call   423130 <strcmp@plt+0x1f9a8>
  431947:	mov    r13,rax
  43194a:	mov    rdi,rbp
  43194d:	call   423130 <strcmp@plt+0x1f9a8>
  431952:	mov    rbx,rax
  431955:	lea    rsi,[rip+0x1ace0]        # 44c63c <strcmp@plt+0x48eb4>
  43195c:	mov    edi,0x6
  431961:	xor    eax,eax
  431963:	mov    rdx,r12
  431966:	mov    rcx,r13
  431969:	mov    r8,rbx
  43196c:	call   42e800 <strcmp@plt+0x2b078>
  431971:	mov    r13,rbp
  431974:	mov    rax,QWORD PTR [r14]
  431977:	mov    rdi,QWORD PTR [rax+0x8]
  43197b:	call   42c900 <strcmp@plt+0x29178>
  431980:	mov    r12,rax
  431983:	mov    rbp,QWORD PTR [rax+0x8]
  431987:	cmp    rbp,rax
  43198a:	je     4319d5 <strcmp@plt+0x2e24d>
  43198c:	nop    DWORD PTR [rax+0x0]
  431990:	mov    rbx,QWORD PTR [rbp+0x10]
  431994:	mov    rax,QWORD PTR [r14]
  431997:	mov    rdi,QWORD PTR [rax+0x8]
  43199b:	mov    rsi,rbx
  43199e:	call   42c790 <strcmp@plt+0x29008>
  4319a3:	cmp    rax,r15
  4319a6:	je     4319b3 <strcmp@plt+0x2e22b>
  4319a8:	mov    rbp,QWORD PTR [rbp+0x8]
  4319ac:	cmp    rbp,r12
  4319af:	jne    431990 <strcmp@plt+0x2e208>
  4319b1:	jmp    4319d5 <strcmp@plt+0x2e24d>
  4319b3:	mov    rax,QWORD PTR [r14]
  4319b6:	mov    rdi,QWORD PTR [rax+0x8]
  4319ba:	mov    rsi,rbx
  4319bd:	call   42c6b0 <strcmp@plt+0x28f28>
  4319c2:	mov    rdi,r13
  4319c5:	mov    rsi,rbx
  4319c8:	call   4293d0 <strcmp@plt+0x25c48>
  4319cd:	mov    rdi,rbx
  4319d0:	call   428960 <strcmp@plt+0x251d8>
  4319d5:	mov    rdi,r12
  4319d8:	call   42c250 <strcmp@plt+0x28ac8>
  4319dd:	mov    rax,QWORD PTR [r14]
  4319e0:	mov    rbx,QWORD PTR [rax]
  4319e3:	lea    rdi,[r15+0x20]
  4319e7:	call   437ac0 <strcmp@plt+0x34338>
  4319ec:	mov    rdi,rbx
  4319ef:	mov    rsi,rax
  4319f2:	call   436750 <strcmp@plt+0x32fc8>
  4319f7:	mov    rdi,r15
  4319fa:	mov    rsi,rax
  4319fd:	call   42c170 <strcmp@plt+0x289e8>
  431a02:	mov    eax,0x1
  431a07:	add    rsp,0x8
  431a0b:	pop    rbx
  431a0c:	pop    r12
  431a0e:	pop    r13
  431a10:	pop    r14
  431a12:	pop    r15
  431a14:	pop    rbp
  431a15:	ret    
  431a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431a20:	push   r15
  431a22:	push   r14
  431a24:	push   r13
  431a26:	push   r12
  431a28:	push   rbx
  431a29:	mov    r15,rdx
  431a2c:	mov    r14,rsi
  431a2f:	mov    rax,QWORD PTR [rdi+0x30]
  431a33:	mov    rax,QWORD PTR [rax]
  431a36:	mov    rbx,QWORD PTR [rax]
  431a39:	mov    rdi,rsi
  431a3c:	call   437ac0 <strcmp@plt+0x34338>
  431a41:	mov    rdi,rbx
  431a44:	mov    rsi,rax
  431a47:	call   436750 <strcmp@plt+0x32fc8>
  431a4c:	test   rax,rax
  431a4f:	je     431a7f <strcmp@plt+0x2e2f7>
  431a51:	mov    r12,rax
  431a54:	mov    rbx,QWORD PTR [rax+0x8]
  431a58:	cmp    rbx,r12
  431a5b:	jne    431a69 <strcmp@plt+0x2e2e1>
  431a5d:	jmp    431a7f <strcmp@plt+0x2e2f7>
  431a5f:	nop
  431a60:	mov    rbx,QWORD PTR [rbx+0x8]
  431a64:	cmp    rbx,r12
  431a67:	je     431a7f <strcmp@plt+0x2e2f7>
  431a69:	mov    r13,QWORD PTR [rbx+0x10]
  431a6d:	mov    rdi,QWORD PTR [r13+0x10]
  431a71:	mov    rsi,r15
  431a74:	call   423970 <strcmp@plt+0x201e8>
  431a79:	test   eax,eax
  431a7b:	jne    431a60 <strcmp@plt+0x2e2d8>
  431a7d:	jmp    431abf <strcmp@plt+0x2e337>
  431a7f:	lea    rax,[rip+0x3332a]        # 464db0 <strcmp@plt+0x61628>
  431a86:	cmp    DWORD PTR [rax],0x2
  431a89:	jge    431a90 <strcmp@plt+0x2e308>
  431a8b:	xor    r13d,r13d
  431a8e:	jmp    431abf <strcmp@plt+0x2e337>
  431a90:	mov    rdi,r15
  431a93:	call   423130 <strcmp@plt+0x1f9a8>
  431a98:	mov    r15,rax
  431a9b:	mov    rdi,r14
  431a9e:	call   437ac0 <strcmp@plt+0x34338>
  431aa3:	mov    rcx,rax
  431aa6:	lea    rsi,[rip+0x1abec]        # 44c699 <strcmp@plt+0x48f11>
  431aad:	xor    r13d,r13d
  431ab0:	mov    edi,0x6
  431ab5:	xor    eax,eax
  431ab7:	mov    rdx,r15
  431aba:	call   42e800 <strcmp@plt+0x2b078>
  431abf:	mov    rax,r13
  431ac2:	pop    rbx
  431ac3:	pop    r12
  431ac5:	pop    r13
  431ac7:	pop    r14
  431ac9:	pop    r15
  431acb:	ret    
  431acc:	nop    DWORD PTR [rax+0x0]
  431ad0:	mov    rax,QWORD PTR [rdi]
  431ad3:	ret    
  431ad4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431ade:	xchg   ax,ax
  431ae0:	mov    QWORD PTR [rdi],rsi
  431ae3:	ret    
  431ae4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431aee:	xchg   ax,ax
  431af0:	mov    rax,QWORD PTR [rdi+0x8]
  431af4:	ret    
  431af5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431aff:	nop
  431b00:	push   r14
  431b02:	push   rbx
  431b03:	push   rax
  431b04:	mov    r14,rdx
  431b07:	mov    rbx,rdi
  431b0a:	mov    QWORD PTR [rdi+0x8],rsi
  431b0e:	test   rdx,rdx
  431b11:	jne    431b33 <strcmp@plt+0x2e3ab>
  431b13:	lea    rax,[rip+0x33296]        # 464db0 <strcmp@plt+0x61628>
  431b1a:	mov    eax,DWORD PTR [rax]
  431b1c:	test   eax,eax
  431b1e:	jle    431b33 <strcmp@plt+0x2e3ab>
  431b20:	lea    rsi,[rip+0x1aba9]        # 44c6d0 <strcmp@plt+0x48f48>
  431b27:	mov    edi,0x5
  431b2c:	xor    eax,eax
  431b2e:	call   42e800 <strcmp@plt+0x2b078>
  431b33:	mov    QWORD PTR [rbx+0x10],r14
  431b37:	add    rsp,0x8
  431b3b:	pop    rbx
  431b3c:	pop    r14
  431b3e:	ret    
  431b3f:	nop
  431b40:	mov    rax,QWORD PTR [rdi]
  431b43:	ret    
  431b44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431b4e:	xchg   ax,ax
  431b50:	mov    edi,0x20
  431b55:	jmp    432070 <strcmp@plt+0x2e8e8>
  431b5a:	nop    WORD PTR [rax+rax*1+0x0]
  431b60:	push   r15
  431b62:	push   r14
  431b64:	push   rbx
  431b65:	mov    rbx,rdi
  431b68:	mov    edi,0x20
  431b6d:	call   432070 <strcmp@plt+0x2e8e8>
  431b72:	test   rax,rax
  431b75:	je     431baf <strcmp@plt+0x2e427>
  431b77:	mov    r14,rax
  431b7a:	mov    QWORD PTR [rax],rbx
  431b7d:	mov    edi,0x10
  431b82:	call   4320b0 <strcmp@plt+0x2e928>
  431b87:	test   rax,rax
  431b8a:	je     431be1 <strcmp@plt+0x2e459>
  431b8c:	mov    rbx,rax
  431b8f:	lea    r15,[rip+0xffffffffffffa6ba]        # 42c250 <strcmp@plt+0x28ac8>
  431b96:	mov    rdi,r15
  431b99:	call   436260 <strcmp@plt+0x32ad8>
  431b9e:	mov    QWORD PTR [rbx],rax
  431ba1:	mov    rdi,r15
  431ba4:	call   436260 <strcmp@plt+0x32ad8>
  431ba9:	mov    QWORD PTR [rbx+0x8],rax
  431bad:	jmp    431be3 <strcmp@plt+0x2e45b>
  431baf:	lea    rax,[rip+0x331fa]        # 464db0 <strcmp@plt+0x61628>
  431bb6:	cmp    DWORD PTR [rax],0x0
  431bb9:	jle    431bf0 <strcmp@plt+0x2e468>
  431bbb:	mov    rdi,rbx
  431bbe:	call   423130 <strcmp@plt+0x1f9a8>
  431bc3:	mov    rcx,rax
  431bc6:	lea    rsi,[rip+0x1ab4b]        # 44c718 <strcmp@plt+0x48f90>
  431bcd:	xor    r14d,r14d
  431bd0:	mov    edi,0x5
  431bd5:	xor    eax,eax
  431bd7:	mov    rdx,rcx
  431bda:	call   42e800 <strcmp@plt+0x2b078>
  431bdf:	jmp    431be7 <strcmp@plt+0x2e45f>
  431be1:	xor    ebx,ebx
  431be3:	mov    QWORD PTR [r14+0x18],rbx
  431be7:	mov    rax,r14
  431bea:	pop    rbx
  431beb:	pop    r14
  431bed:	pop    r15
  431bef:	ret    
  431bf0:	xor    r14d,r14d
  431bf3:	jmp    431be7 <strcmp@plt+0x2e45f>
  431bf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431bff:	nop
  431c00:	mov    QWORD PTR [rdi],rsi
  431c03:	ret    
  431c04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431c0e:	xchg   ax,ax
  431c10:	push   rbp
  431c11:	push   r15
  431c13:	push   r14
  431c15:	push   r13
  431c17:	push   r12
  431c19:	push   rbx
  431c1a:	push   rax
  431c1b:	test   rdi,rdi
  431c1e:	je     431cfa <strcmp@plt+0x2e572>
  431c24:	mov    r15,rdi
  431c27:	mov    rax,QWORD PTR [rdi]
  431c2a:	mov    rcx,QWORD PTR [rax+0x28]
  431c2e:	mov    r13,QWORD PTR [rcx+0x8]
  431c32:	cmp    r13,rcx
  431c35:	je     431c96 <strcmp@plt+0x2e50e>
  431c37:	lea    r14,[rip+0x3e962]        # 4705a0 <strcmp@plt+0x6ce18>
  431c3e:	lea    r12,[rip+0x3e963]        # 4705a8 <strcmp@plt+0x6ce20>
  431c45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431c4f:	nop
  431c50:	mov    rbx,QWORD PTR [r13+0x10]
  431c54:	cmp    DWORD PTR [rbx+0x18],0x0
  431c58:	je     431c8c <strcmp@plt+0x2e504>
  431c5a:	mov    rbp,QWORD PTR [rbx+0x8]
  431c5e:	cmp    rbp,rbx
  431c61:	je     431c8c <strcmp@plt+0x2e504>
  431c63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431c6d:	nop    DWORD PTR [rax]
  431c70:	mov    rdi,QWORD PTR [rbp+0x10]
  431c74:	mov    rsi,QWORD PTR [r14]
  431c77:	mov    rdx,QWORD PTR [r12]
  431c7b:	call   4376b0 <strcmp@plt+0x33f28>
  431c80:	mov    rbp,QWORD PTR [rbp+0x8]
  431c84:	cmp    rbp,rbx
  431c87:	jne    431c70 <strcmp@plt+0x2e4e8>
  431c89:	mov    rax,QWORD PTR [r15]
  431c8c:	mov    r13,QWORD PTR [r13+0x8]
  431c90:	cmp    r13,QWORD PTR [rax+0x28]
  431c94:	jne    431c50 <strcmp@plt+0x2e4c8>
  431c96:	lea    rax,[rip+0x3e903]        # 4705a0 <strcmp@plt+0x6ce18>
  431c9d:	mov    rsi,QWORD PTR [rax]
  431ca0:	lea    rax,[rip+0x3e901]        # 4705a8 <strcmp@plt+0x6ce20>
  431ca7:	mov    rdx,QWORD PTR [rax]
  431caa:	mov    rdi,r15
  431cad:	call   4376b0 <strcmp@plt+0x33f28>
  431cb2:	mov    rdi,QWORD PTR [r15]
  431cb5:	call   428ed0 <strcmp@plt+0x25748>
  431cba:	mov    rdi,QWORD PTR [r15+0x8]
  431cbe:	test   rdi,rdi
  431cc1:	je     431cc7 <strcmp@plt+0x2e53f>
  431cc3:	call   QWORD PTR [r15+0x10]
  431cc7:	mov    r14,QWORD PTR [r15+0x18]
  431ccb:	mov    rdi,QWORD PTR [r14]
  431cce:	call   436870 <strcmp@plt+0x330e8>
  431cd3:	mov    rdi,QWORD PTR [r14+0x8]
  431cd7:	call   436870 <strcmp@plt+0x330e8>
  431cdc:	mov    rdi,r14
  431cdf:	call   403780 <free@plt>
  431ce4:	mov    rdi,r15
  431ce7:	add    rsp,0x8
  431ceb:	pop    rbx
  431cec:	pop    r12
  431cee:	pop    r13
  431cf0:	pop    r14
  431cf2:	pop    r15
  431cf4:	pop    rbp
  431cf5:	jmp    403780 <free@plt>
  431cfa:	lea    rdi,[rip+0x1aa69]        # 44c76a <strcmp@plt+0x48fe2>
  431d01:	lea    rsi,[rip+0x1aa66]        # 44c76e <strcmp@plt+0x48fe6>
  431d08:	lea    rcx,[rip+0x1aa75]        # 44c784 <strcmp@plt+0x48ffc>
  431d0f:	mov    edx,0x66
  431d14:	call   4032b0 <__assert_fail@plt>
  431d19:	nop    DWORD PTR [rax+0x0]
  431d20:	push   rbx
  431d21:	mov    ebx,esi
  431d23:	cmp    esi,0x5
  431d26:	jl     431d3a <strcmp@plt+0x2e5b2>
  431d28:	lea    rax,[rip+0x33081]        # 464db0 <strcmp@plt+0x61628>
  431d2f:	mov    eax,DWORD PTR [rax]
  431d31:	add    eax,0x4
  431d34:	cmp    eax,ebx
  431d36:	jge    431d3a <strcmp@plt+0x2e5b2>
  431d38:	pop    rbx
  431d39:	ret    
  431d3a:	mov    rdi,QWORD PTR [rdi]
  431d3d:	call   429040 <strcmp@plt+0x258b8>
  431d42:	mov    rcx,rax
  431d45:	xor    eax,eax
  431d47:	mov    edi,ebx
  431d49:	mov    rsi,rcx
  431d4c:	pop    rbx
  431d4d:	jmp    42e800 <strcmp@plt+0x2b078>
  431d52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431d5c:	nop    DWORD PTR [rax+0x0]
  431d60:	mov    rdi,QWORD PTR [rdi]
  431d63:	jmp    429040 <strcmp@plt+0x258b8>
  431d68:	nop    DWORD PTR [rax+rax*1+0x0]
  431d70:	push   rbp
  431d71:	push   r15
  431d73:	push   r14
  431d75:	push   r13
  431d77:	push   r12
  431d79:	push   rbx
  431d7a:	sub    rsp,0x28
  431d7e:	mov    rbx,rdx
  431d81:	mov    rax,QWORD PTR [rdi]
  431d84:	mov    QWORD PTR [rsp+0x8],rax
  431d89:	mov    r14,QWORD PTR [rdi+0x18]
  431d8d:	mov    QWORD PTR [rsp+0x10],rsi
  431d92:	mov    rbp,QWORD PTR [rsi]
  431d95:	mov    r15,QWORD PTR [r14]
  431d98:	mov    rdi,rbp
  431d9b:	call   423130 <strcmp@plt+0x1f9a8>
  431da0:	mov    rdi,r15
  431da3:	mov    rsi,rax
  431da6:	call   436750 <strcmp@plt+0x32fc8>
  431dab:	test   rax,rax
  431dae:	je     431e69 <strcmp@plt+0x2e6e1>
  431db4:	mov    r15,rax
  431db7:	mov    QWORD PTR [rsp+0x18],rbx
  431dbc:	mov    QWORD PTR [rsp+0x20],rbp
  431dc1:	mov    rbp,QWORD PTR [rax+0x8]
  431dc5:	cmp    rbp,r15
  431dc8:	jne    431dd9 <strcmp@plt+0x2e651>
  431dca:	jmp    431e49 <strcmp@plt+0x2e6c1>
  431dcf:	nop
  431dd0:	mov    rbp,QWORD PTR [rbp+0x8]
  431dd4:	cmp    rbp,r15
  431dd7:	je     431e49 <strcmp@plt+0x2e6c1>
  431dd9:	mov    r12,QWORD PTR [rbp+0x10]
  431ddd:	mov    r13,QWORD PTR [r14+0x8]
  431de1:	mov    rdi,r12
  431de4:	call   423130 <strcmp@plt+0x1f9a8>
  431de9:	mov    rdi,r13
  431dec:	mov    rsi,rax
  431def:	call   436750 <strcmp@plt+0x32fc8>
  431df4:	mov    rbx,rax
  431df7:	mov    rdi,QWORD PTR [rsp+0x10]
  431dfc:	mov    rsi,rax
  431dff:	call   42c170 <strcmp@plt+0x289e8>
  431e04:	cmp    DWORD PTR [rbx+0x18],0x0
  431e08:	jne    431dd0 <strcmp@plt+0x2e648>
  431e0a:	mov    rbx,QWORD PTR [r14+0x8]
  431e0e:	mov    rdi,r12
  431e11:	call   423130 <strcmp@plt+0x1f9a8>
  431e16:	mov    rdi,rbx
  431e19:	mov    rsi,rax
  431e1c:	call   4365d0 <strcmp@plt+0x32e48>
  431e21:	mov    rbx,QWORD PTR [rsp+0x8]
  431e26:	mov    rdi,rbx
  431e29:	mov    rsi,r12
  431e2c:	call   4293a0 <strcmp@plt+0x25c18>
  431e31:	mov    r12,rax
  431e34:	mov    rdi,rbx
  431e37:	mov    rsi,rax
  431e3a:	call   4293d0 <strcmp@plt+0x25c48>
  431e3f:	mov    rdi,r12
  431e42:	call   428960 <strcmp@plt+0x251d8>
  431e47:	jmp    431dd0 <strcmp@plt+0x2e648>
  431e49:	mov    rbx,QWORD PTR [r14]
  431e4c:	mov    rbp,QWORD PTR [rsp+0x20]
  431e51:	mov    rdi,rbp
  431e54:	call   423130 <strcmp@plt+0x1f9a8>
  431e59:	mov    rdi,rbx
  431e5c:	mov    rsi,rax
  431e5f:	call   4365d0 <strcmp@plt+0x32e48>
  431e64:	mov    rbx,QWORD PTR [rsp+0x18]
  431e69:	lea    rsi,[rip+0xffffffffffff18d0]        # 423740 <strcmp@plt+0x1ffb8>
  431e70:	mov    rdi,rbx
  431e73:	call   42bc70 <strcmp@plt+0x284e8>
  431e78:	mov    r13,rax
  431e7b:	mov    rbx,QWORD PTR [r14]
  431e7e:	mov    rdi,rbp
  431e81:	call   423130 <strcmp@plt+0x1f9a8>
  431e86:	mov    rdi,rax
  431e89:	call   403700 <strdup@plt>
  431e8e:	mov    rdi,rbx
  431e91:	mov    rsi,rax
  431e94:	mov    rdx,r13
  431e97:	call   4362a0 <strcmp@plt+0x32b18>
  431e9c:	mov    r12,QWORD PTR [r13+0x8]
  431ea0:	cmp    r12,r13
  431ea3:	jne    431ecb <strcmp@plt+0x2e743>
  431ea5:	jmp    431f56 <strcmp@plt+0x2e7ce>
  431eaa:	nop    WORD PTR [rax+rax*1+0x0]
  431eb0:	mov    rdi,QWORD PTR [rsp+0x10]
  431eb5:	mov    rsi,rbx
  431eb8:	call   42bcf0 <strcmp@plt+0x28568>
  431ebd:	mov    r12,QWORD PTR [r12+0x8]
  431ec2:	cmp    r12,r13
  431ec5:	je     431f56 <strcmp@plt+0x2e7ce>
  431ecb:	mov    r15,QWORD PTR [r12+0x10]
  431ed0:	mov    rbx,QWORD PTR [r14+0x8]
  431ed4:	mov    rdi,r15
  431ed7:	call   423130 <strcmp@plt+0x1f9a8>
  431edc:	mov    rdi,rbx
  431edf:	mov    rsi,rax
  431ee2:	call   436750 <strcmp@plt+0x32fc8>
  431ee7:	mov    rbx,rax
  431eea:	test   rax,rax
  431eed:	jne    431eb0 <strcmp@plt+0x2e728>
  431eef:	call   42bbd0 <strcmp@plt+0x28448>
  431ef4:	mov    rbx,rax
  431ef7:	mov    rbp,QWORD PTR [r14+0x8]
  431efb:	mov    rdi,r15
  431efe:	call   423130 <strcmp@plt+0x1f9a8>
  431f03:	mov    rdi,rax
  431f06:	call   403700 <strdup@plt>
  431f0b:	mov    rdi,rbp
  431f0e:	mov    rsi,rax
  431f11:	mov    rdx,rbx
  431f14:	call   4362a0 <strcmp@plt+0x32b18>
  431f19:	mov    esi,0x1
  431f1e:	xor    edx,edx
  431f20:	mov    ecx,0x1
  431f25:	mov    r8d,0x1
  431f2b:	mov    r9d,0x64
  431f31:	mov    rdi,r15
  431f34:	push   0x0
  431f36:	push   0xff
  431f3b:	call   428660 <strcmp@plt+0x24ed8>
  431f40:	add    rsp,0x10
  431f44:	mov    rdi,QWORD PTR [rsp+0x8]
  431f49:	mov    rsi,rax
  431f4c:	call   4291e0 <strcmp@plt+0x25a58>
  431f51:	jmp    431eb0 <strcmp@plt+0x2e728>
  431f56:	add    rsp,0x28
  431f5a:	pop    rbx
  431f5b:	pop    r12
  431f5d:	pop    r13
  431f5f:	pop    r14
  431f61:	pop    r15
  431f63:	pop    rbp
  431f64:	ret    
  431f65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431f6f:	nop
  431f70:	push   r15
  431f72:	push   r14
  431f74:	push   r13
  431f76:	push   r12
  431f78:	push   rbx
  431f79:	mov    rbx,rdi
  431f7c:	lea    rdi,[rip+0xffffffffffff101d]        # 422fa0 <strcmp@plt+0x1f818>
  431f83:	call   42bc00 <strcmp@plt+0x28478>
  431f88:	mov    r14,rax
  431f8b:	mov    rax,QWORD PTR [rbx+0x18]
  431f8f:	mov    rdi,QWORD PTR [rax+0x8]
  431f93:	call   436930 <strcmp@plt+0x331a8>
  431f98:	mov    r15,rax
  431f9b:	mov    rbx,QWORD PTR [rax+0x8]
  431f9f:	cmp    rbx,rax
  431fa2:	je     431fdd <strcmp@plt+0x2e855>
  431fa4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431fae:	xchg   ax,ax
  431fb0:	mov    r12,QWORD PTR [rbx+0x10]
  431fb4:	xor    eax,eax
  431fb6:	call   422f90 <strcmp@plt+0x1f808>
  431fbb:	mov    r13,rax
  431fbe:	mov    rdi,r12
  431fc1:	mov    rsi,rax
  431fc4:	call   423c40 <strcmp@plt+0x204b8>
  431fc9:	mov    rdi,r13
  431fcc:	mov    rsi,r14
  431fcf:	call   42bcf0 <strcmp@plt+0x28568>
  431fd4:	mov    rbx,QWORD PTR [rbx+0x8]
  431fd8:	cmp    rbx,r15
  431fdb:	jne    431fb0 <strcmp@plt+0x2e828>
  431fdd:	mov    rdi,r15
  431fe0:	call   42c250 <strcmp@plt+0x28ac8>
  431fe5:	mov    rax,r14
  431fe8:	pop    rbx
  431fe9:	pop    r12
  431feb:	pop    r13
  431fed:	pop    r14
  431fef:	pop    r15
  431ff1:	ret    
  431ff2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431ffc:	nop    DWORD PTR [rax+0x0]
  432000:	push   rbx
  432001:	mov    rax,QWORD PTR [rdi+0x18]
  432005:	mov    rbx,QWORD PTR [rax]
  432008:	mov    rdi,rsi
  43200b:	call   423130 <strcmp@plt+0x1f9a8>
  432010:	mov    rdi,rbx
  432013:	mov    rsi,rax
  432016:	pop    rbx
  432017:	jmp    436750 <strcmp@plt+0x32fc8>
  43201c:	nop    DWORD PTR [rax+0x0]
  432020:	push   rax
  432021:	test   rdi,rdi
  432024:	je     432037 <strcmp@plt+0x2e8af>
  432026:	test   rsi,rsi
  432029:	je     432037 <strcmp@plt+0x2e8af>
  43202b:	call   4032d0 <calloc@plt>
  432030:	test   rax,rax
  432033:	jne    432046 <strcmp@plt+0x2e8be>
  432035:	jmp    432048 <strcmp@plt+0x2e8c0>
  432037:	mov    edi,0x1
  43203c:	call   403510 <malloc@plt>
  432041:	test   rax,rax
  432044:	je     432048 <strcmp@plt+0x2e8c0>
  432046:	pop    rcx
  432047:	ret    
  432048:	call   432050 <strcmp@plt+0x2e8c8>
  43204d:	nop    DWORD PTR [rax]
  432050:	push   rax
  432051:	lea    rsi,[rip+0x1a77a]        # 44c7d2 <strcmp@plt+0x4904a>
  432058:	mov    edi,0x1
  43205d:	xor    eax,eax
  43205f:	call   42e800 <strcmp@plt+0x2b078>
  432064:	call   403270 <abort@plt>
  432069:	nop    DWORD PTR [rax+0x0]
  432070:	push   rax
  432071:	test   rdi,rdi
  432074:	je     43208d <strcmp@plt+0x2e905>
  432076:	mov    rax,rdi
  432079:	mov    edi,0x1
  43207e:	mov    rsi,rax
  432081:	call   4032d0 <calloc@plt>
  432086:	test   rax,rax
  432089:	je     43209c <strcmp@plt+0x2e914>
  43208b:	pop    rcx
  43208c:	ret    
  43208d:	mov    edi,0x1
  432092:	call   403510 <malloc@plt>
  432097:	test   rax,rax
  43209a:	jne    43208b <strcmp@plt+0x2e903>
  43209c:	call   432050 <strcmp@plt+0x2e8c8>
  4320a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4320ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4320b0:	push   rax
  4320b1:	test   rdi,rdi
  4320b4:	mov    eax,0x1
  4320b9:	cmove  rdi,rax
  4320bd:	call   403510 <malloc@plt>
  4320c2:	test   rax,rax
  4320c5:	je     4320c9 <strcmp@plt+0x2e941>
  4320c7:	pop    rcx
  4320c8:	ret    
  4320c9:	call   432050 <strcmp@plt+0x2e8c8>
  4320ce:	xchg   ax,ax
  4320d0:	push   rax
  4320d1:	test   rsi,rsi
  4320d4:	mov    eax,0x1
  4320d9:	cmove  rsi,rax
  4320dd:	call   403650 <realloc@plt>
  4320e2:	test   rax,rax
  4320e5:	je     4320e9 <strcmp@plt+0x2e961>
  4320e7:	pop    rcx
  4320e8:	ret    
  4320e9:	call   432050 <strcmp@plt+0x2e8c8>
  4320ee:	xchg   ax,ax
  4320f0:	push   r14
  4320f2:	push   rbx
  4320f3:	push   rax
  4320f4:	mov    rbx,rsi
  4320f7:	mov    r14,rdi
  4320fa:	test   rsi,rsi
  4320fd:	mov    edi,0x1
  432102:	cmovne rdi,rsi
  432106:	call   403510 <malloc@plt>
  43210b:	test   rax,rax
  43210e:	je     432125 <strcmp@plt+0x2e99d>
  432110:	mov    rdi,rax
  432113:	mov    rsi,r14
  432116:	mov    rdx,rbx
  432119:	add    rsp,0x8
  43211d:	pop    rbx
  43211e:	pop    r14
  432120:	jmp    403330 <memcpy@plt>
  432125:	call   432050 <strcmp@plt+0x2e8c8>
  43212a:	nop    WORD PTR [rax+rax*1+0x0]
  432130:	push   r15
  432132:	push   r14
  432134:	push   rbx
  432135:	mov    r15,rsi
  432138:	mov    r14,rdi
  43213b:	mov    rax,rsi
  43213e:	add    rax,0x1
  432142:	mov    edi,0x1
  432147:	cmovne rdi,rax
  43214b:	call   403510 <malloc@plt>
  432150:	test   rax,rax
  432153:	je     432174 <strcmp@plt+0x2e9ec>
  432155:	mov    rbx,rax
  432158:	mov    rdi,rax
  43215b:	mov    rsi,r14
  43215e:	mov    rdx,r15
  432161:	call   403330 <memcpy@plt>
  432166:	mov    BYTE PTR [rbx+r15*1],0x0
  43216b:	mov    rax,rbx
  43216e:	pop    rbx
  43216f:	pop    r14
  432171:	pop    r15
  432173:	ret    
  432174:	call   432050 <strcmp@plt+0x2e8c8>
  432179:	nop    DWORD PTR [rax+0x0]
  432180:	push   r15
  432182:	push   r14
  432184:	push   rbx
  432185:	mov    r14,rdi
  432188:	call   4031e0 <strlen@plt>
  43218d:	mov    r15,rax
  432190:	add    rax,0x1
  432194:	mov    edi,0x1
  432199:	cmovne rdi,rax
  43219d:	call   403510 <malloc@plt>
  4321a2:	test   rax,rax
  4321a5:	je     4321c6 <strcmp@plt+0x2ea3e>
  4321a7:	mov    rbx,rax
  4321aa:	mov    rdi,rax
  4321ad:	mov    rsi,r14
  4321b0:	mov    rdx,r15
  4321b3:	call   403330 <memcpy@plt>
  4321b8:	mov    BYTE PTR [rbx+r15*1],0x0
  4321bd:	mov    rax,rbx
  4321c0:	pop    rbx
  4321c1:	pop    r14
  4321c3:	pop    r15
  4321c5:	ret    
  4321c6:	call   432050 <strcmp@plt+0x2e8c8>
  4321cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4321d0:	push   rax
  4321d1:	mov    rcx,rdx
  4321d4:	mov    r8,rsi
  4321d7:	mov    rdx,rdi
  4321da:	mov    eax,DWORD PTR [rip+0x3d67c]        # 46f85c <strcmp@plt+0x6c0d4>
  4321e0:	lea    esi,[rax+0x1]
  4321e3:	mov    DWORD PTR [rip+0x3d673],esi        # 46f85c <strcmp@plt+0x6c0d4>
  4321e9:	cmp    eax,0x1
  4321ec:	je     43220a <strcmp@plt+0x2ea82>
  4321ee:	test   eax,eax
  4321f0:	jne    432222 <strcmp@plt+0x2ea9a>
  4321f2:	lea    rsi,[rip+0x1a5b9]        # 44c7b2 <strcmp@plt+0x4902a>
  4321f9:	mov    edi,0x1
  4321fe:	xor    eax,eax
  432200:	call   42e800 <strcmp@plt+0x2b078>
  432205:	call   403270 <abort@plt>
  43220a:	mov    rax,QWORD PTR [rip+0x31d9f]        # 463fb0 <strcmp@plt+0x60828>
  432211:	mov    rdi,QWORD PTR [rax]
  432214:	lea    rsi,[rip+0x1a597]        # 44c7b2 <strcmp@plt+0x4902a>
  43221b:	xor    eax,eax
  43221d:	call   403590 <fprintf@plt>
  432222:	call   403270 <abort@plt>
  432227:	nop    WORD PTR [rax+rax*1+0x0]
  432230:	mov    eax,edi
  432232:	bswap  eax
  432234:	shl    rax,0x20
  432238:	shr    rdi,0x20
  43223c:	bswap  edi
  43223e:	or     rax,rdi
  432241:	ret    
  432242:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43224c:	nop    DWORD PTR [rax+0x0]
  432250:	push   rbx
  432251:	mov    edi,0x8
  432256:	call   403510 <malloc@plt>
  43225b:	mov    rbx,rax
  43225e:	mov    edi,0x1
  432263:	mov    esi,0x28
  432268:	call   4032d0 <calloc@plt>
  43226d:	mov    QWORD PTR [rbx],rax
  432270:	mov    rax,rbx
  432273:	pop    rbx
  432274:	ret    
  432275:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43227f:	nop
  432280:	push   rbp
  432281:	push   r15
  432283:	push   r14
  432285:	push   r13
  432287:	push   r12
  432289:	push   rbx
  43228a:	push   rax
  43228b:	mov    r14,rdx
  43228e:	mov    r12,rsi
  432291:	mov    r15,rdi
  432294:	mov    edi,0x8
  432299:	call   4320b0 <strcmp@plt+0x2e928>
  43229e:	mov    QWORD PTR [rax],r12
  4322a1:	mov    rsi,QWORD PTR [r14]
  4322a4:	mov    rdi,rax
  4322a7:	call   42bcf0 <strcmp@plt+0x28568>
  4322ac:	mov    r13,QWORD PTR [r15]
  4322af:	mov    eax,DWORD PTR [r13+0x8]
  4322b3:	cmp    eax,DWORD PTR [r13+0xc]
  4322b7:	jb     4322d7 <strcmp@plt+0x2eb4f>
  4322b9:	mov    esi,DWORD PTR [r13+0x0]
  4322bd:	mov    eax,DWORD PTR [r13+0x4]
  4322c1:	add    eax,eax
  4322c3:	cmp    esi,eax
  4322c5:	jbe    4322cc <strcmp@plt+0x2eb44>
  4322c7:	add    esi,0xffffffff
  4322ca:	jmp    4322cf <strcmp@plt+0x2eb47>
  4322cc:	add    esi,0x1
  4322cf:	mov    rdi,r13
  4322d2:	call   432940 <strcmp@plt+0x2f1b8>
  4322d7:	mov    r8d,DWORD PTR [r13+0x0]
  4322db:	lea    r10d,[r8-0x1]
  4322df:	mov    rax,r12
  4322e2:	shr    rax,0x21
  4322e6:	xor    eax,r12d
  4322e9:	mov    ecx,r12d
  4322ec:	shl    ecx,0xb
  4322ef:	xor    ecx,eax
  4322f1:	mov    r11d,r10d
  4322f4:	and    r11d,ecx
  4322f7:	mov    r9,QWORD PTR [r13+0x10]
  4322fb:	mov    eax,r11d
  4322fe:	shr    eax,0x4
  432301:	mov    edx,r11d
  432304:	add    dl,dl
  432306:	and    dl,0x1e
  432309:	mov    esi,0x2
  43230e:	shlx   edx,esi,edx
  432313:	test   DWORD PTR [r9+rax*4],edx
  432317:	je     432321 <strcmp@plt+0x2eb99>
  432319:	mov    edx,r11d
  43231c:	jmp    4323ab <strcmp@plt+0x2ec23>
  432321:	mov    eax,ecx
  432323:	shr    eax,0x3
  432326:	shl    ecx,0x3
  432329:	xor    ecx,eax
  43232b:	or     ecx,0x1
  43232e:	and    ecx,r10d
  432331:	mov    edx,r8d
  432334:	mov    ebx,r11d
  432337:	nop    WORD PTR [rax+rax*1+0x0]
  432340:	mov    eax,ebx
  432342:	shr    eax,0x4
  432345:	mov    eax,DWORD PTR [r9+rax*4]
  432349:	lea    edi,[rbx+rbx*1]
  43234c:	and    edi,0x1e
  43234f:	shrx   esi,eax,edi
  432354:	test   sil,0x2
  432358:	jne    432388 <strcmp@plt+0x2ec00>
  43235a:	test   sil,0x1
  43235e:	jne    43236c <strcmp@plt+0x2ebe4>
  432360:	mov    rsi,QWORD PTR [r13+0x18]
  432364:	mov    ebp,ebx
  432366:	cmp    QWORD PTR [rsi+rbp*8],r12
  43236a:	je     432388 <strcmp@plt+0x2ec00>
  43236c:	bt     eax,edi
  43236f:	cmovb  edx,ebx
  432372:	add    ebx,ecx
  432374:	and    ebx,r10d
  432377:	cmp    ebx,r11d
  43237a:	jne    432340 <strcmp@plt+0x2ebb8>
  43237c:	mov    al,0x1
  43237e:	mov    ecx,r8d
  432381:	cmp    edx,r8d
  432384:	je     43239c <strcmp@plt+0x2ec14>
  432386:	jmp    4323ab <strcmp@plt+0x2ec23>
  432388:	mov    ecx,0x2
  43238d:	shlx   ecx,ecx,edi
  432392:	test   eax,ecx
  432394:	sete   al
  432397:	mov    r11d,ebx
  43239a:	mov    ecx,edx
  43239c:	test   al,al
  43239e:	mov    edx,ecx
  4323a0:	cmovne edx,r11d
  4323a4:	cmp    ecx,r8d
  4323a7:	cmove  edx,r11d
  4323ab:	mov    ecx,edx
  4323ad:	shr    ecx,0x4
  4323b0:	mov    esi,DWORD PTR [r9+rcx*4]
  4323b4:	lea    eax,[rdx+rdx*1]
  4323b7:	and    eax,0x1e
  4323ba:	shrx   edi,esi,eax
  4323bf:	test   dil,0x2
  4323c3:	jne    4323cf <strcmp@plt+0x2ec47>
  4323c5:	test   dil,0x1
  4323c9:	jne    4323f8 <strcmp@plt+0x2ec70>
  4323cb:	mov    edx,edx
  4323cd:	jmp    43241a <strcmp@plt+0x2ec92>
  4323cf:	mov    rdi,QWORD PTR [r13+0x18]
  4323d3:	mov    edx,edx
  4323d5:	mov    QWORD PTR [rdi+rdx*8],r12
  4323d9:	mov    edi,0x3
  4323de:	shlx   eax,edi,eax
  4323e3:	andn   eax,eax,esi
  4323e8:	mov    DWORD PTR [r9+rcx*4],eax
  4323ec:	add    DWORD PTR [r13+0x4],0x1
  4323f1:	add    DWORD PTR [r13+0x8],0x1
  4323f6:	jmp    43241a <strcmp@plt+0x2ec92>
  4323f8:	mov    rdi,QWORD PTR [r13+0x18]
  4323fc:	mov    edx,edx
  4323fe:	mov    QWORD PTR [rdi+rdx*8],r12
  432402:	mov    edi,0x3
  432407:	shlx   eax,edi,eax
  43240c:	andn   eax,eax,esi
  432411:	mov    DWORD PTR [r9+rcx*4],eax
  432415:	add    DWORD PTR [r13+0x4],0x1
  43241a:	mov    rax,QWORD PTR [r15]
  43241d:	mov    rax,QWORD PTR [rax+0x20]
  432421:	mov    QWORD PTR [rax+rdx*8],r14
  432425:	add    rsp,0x8
  432429:	pop    rbx
  43242a:	pop    r12
  43242c:	pop    r13
  43242e:	pop    r14
  432430:	pop    r15
  432432:	pop    rbp
  432433:	ret    
  432434:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43243e:	xchg   ax,ax
  432440:	push   rbp
  432441:	push   r15
  432443:	push   r14
  432445:	push   r12
  432447:	push   rbx
  432448:	sub    rsp,0x10
  43244c:	mov    QWORD PTR [rsp+0x8],rsi
  432451:	mov    r9,QWORD PTR [rdi]
  432454:	mov    r8d,DWORD PTR [r9]
  432457:	test   r8d,r8d
  43245a:	je     4324ee <strcmp@plt+0x2ed66>
  432460:	mov    r14,rdi
  432463:	lea    r10d,[r8-0x1]
  432467:	mov    rax,rsi
  43246a:	shr    rax,0x21
  43246e:	xor    eax,esi
  432470:	mov    edi,esi
  432472:	shl    edi,0xb
  432475:	xor    edi,eax
  432477:	mov    r11d,r10d
  43247a:	and    r11d,edi
  43247d:	mov    eax,edi
  43247f:	shr    eax,0x3
  432482:	shl    edi,0x3
  432485:	xor    edi,eax
  432487:	or     edi,0x1
  43248a:	and    edi,r10d
  43248d:	mov    r12,QWORD PTR [r9+0x10]
  432491:	xor    r15d,r15d
  432494:	mov    ebx,r11d
  432497:	nop    WORD PTR [rax+rax*1+0x0]
  4324a0:	mov    ecx,ebx
  4324a2:	shr    ecx,0x4
  4324a5:	mov    ecx,DWORD PTR [r12+rcx*4]
  4324a9:	lea    edx,[rbx+rbx*1]
  4324ac:	and    edx,0x1e
  4324af:	shrx   ebp,ecx,edx
  4324b4:	test   bpl,0x2
  4324b8:	jne    4324d9 <strcmp@plt+0x2ed51>
  4324ba:	test   bpl,0x1
  4324be:	jne    4324cd <strcmp@plt+0x2ed45>
  4324c0:	mov    rbp,QWORD PTR [r9+0x18]
  4324c4:	mov    eax,ebx
  4324c6:	cmp    QWORD PTR [rbp+rax*8+0x0],rsi
  4324cb:	je     4324d9 <strcmp@plt+0x2ed51>
  4324cd:	add    ebx,edi
  4324cf:	and    ebx,r10d
  4324d2:	cmp    ebx,r11d
  4324d5:	jne    4324a0 <strcmp@plt+0x2ed18>
  4324d7:	jmp    4324f1 <strcmp@plt+0x2ed69>
  4324d9:	mov    eax,0x3
  4324de:	shlx   eax,eax,edx
  4324e3:	test   eax,ecx
  4324e5:	cmovne ebx,r8d
  4324e9:	cmp    ebx,r8d
  4324ec:	jne    432501 <strcmp@plt+0x2ed79>
  4324ee:	xor    r15d,r15d
  4324f1:	mov    rax,r15
  4324f4:	add    rsp,0x10
  4324f8:	pop    rbx
  4324f9:	pop    r12
  4324fb:	pop    r14
  4324fd:	pop    r15
  4324ff:	pop    rbp
  432500:	ret    
  432501:	mov    rax,QWORD PTR [r9+0x20]
  432505:	mov    ecx,ebx
  432507:	mov    r15,QWORD PTR [rax+rcx*8]
  43250b:	mov    rsi,QWORD PTR [r15]
  43250e:	lea    rdi,[rsp+0x8]
  432513:	call   42c0c0 <strcmp@plt+0x28938>
  432518:	mov    rax,QWORD PTR [r14]
  43251b:	cmp    DWORD PTR [rax],ebx
  43251d:	je     4324f1 <strcmp@plt+0x2ed69>
  43251f:	mov    rcx,QWORD PTR [rax+0x10]
  432523:	mov    edx,ebx
  432525:	shr    edx,0x4
  432528:	mov    esi,DWORD PTR [rcx+rdx*4]
  43252b:	add    ebx,ebx
  43252d:	and    ebx,0x1e
  432530:	mov    edi,0x3
  432535:	shlx   edi,edi,ebx
  43253a:	test   esi,edi
  43253c:	jne    4324f1 <strcmp@plt+0x2ed69>
  43253e:	bts    esi,ebx
  432541:	mov    DWORD PTR [rcx+rdx*4],esi
  432544:	add    DWORD PTR [rax+0x4],0xffffffff
  432548:	jmp    4324f1 <strcmp@plt+0x2ed69>
  43254a:	nop    WORD PTR [rax+rax*1+0x0]
  432550:	test   rdi,rdi
  432553:	je     4325ff <strcmp@plt+0x2ee77>
  432559:	push   rbp
  43255a:	push   r15
  43255c:	push   r14
  43255e:	push   r12
  432560:	push   rbx
  432561:	mov    r14,rdi
  432564:	mov    r12,QWORD PTR [rdi]
  432567:	cmp    DWORD PTR [r12],0x0
  43256c:	je     4325c4 <strcmp@plt+0x2ee3c>
  43256e:	xor    ebp,ebp
  432570:	mov    r15d,0x3
  432576:	xor    ebx,ebx
  432578:	nop    DWORD PTR [rax+rax*1+0x0]
  432580:	mov    rax,QWORD PTR [r12+0x10]
  432585:	mov    ecx,ebx
  432587:	shr    ecx,0x4
  43258a:	mov    edx,ebp
  43258c:	and    dl,0x1e
  43258f:	shlx   edx,r15d,edx
  432594:	test   DWORD PTR [rax+rcx*4],edx
  432597:	jne    4325b8 <strcmp@plt+0x2ee30>
  432599:	mov    rax,QWORD PTR [r12+0x20]
  43259e:	mov    ecx,ebx
  4325a0:	mov    r12,QWORD PTR [rax+rcx*8]
  4325a4:	mov    rdi,QWORD PTR [r12]
  4325a8:	call   42c250 <strcmp@plt+0x28ac8>
  4325ad:	mov    rdi,r12
  4325b0:	call   403780 <free@plt>
  4325b5:	mov    r12,QWORD PTR [r14]
  4325b8:	add    ebx,0x1
  4325bb:	add    ebp,0x2
  4325be:	cmp    ebx,DWORD PTR [r12]
  4325c2:	jne    432580 <strcmp@plt+0x2edf8>
  4325c4:	test   r12,r12
  4325c7:	je     4325ef <strcmp@plt+0x2ee67>
  4325c9:	mov    rdi,QWORD PTR [r12+0x18]
  4325ce:	call   403780 <free@plt>
  4325d3:	mov    rdi,QWORD PTR [r12+0x10]
  4325d8:	call   403780 <free@plt>
  4325dd:	mov    rdi,QWORD PTR [r12+0x20]
  4325e2:	call   403780 <free@plt>
  4325e7:	mov    rdi,r12
  4325ea:	call   403780 <free@plt>
  4325ef:	mov    rdi,r14
  4325f2:	pop    rbx
  4325f3:	pop    r12
  4325f5:	pop    r14
  4325f7:	pop    r15
  4325f9:	pop    rbp
  4325fa:	jmp    403780 <free@plt>
  4325ff:	ret    
  432600:	push   rbx
  432601:	mov    rbx,rdi
  432604:	mov    rdi,QWORD PTR [rdi]
  432607:	call   42c250 <strcmp@plt+0x28ac8>
  43260c:	mov    rdi,rbx
  43260f:	pop    rbx
  432610:	jmp    403780 <free@plt>
  432615:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43261f:	nop
  432620:	push   rbp
  432621:	push   r15
  432623:	push   r14
  432625:	push   rbx
  432626:	mov    r9,QWORD PTR [rdi]
  432629:	mov    r8d,DWORD PTR [r9]
  43262c:	test   r8d,r8d
  43262f:	je     4326be <strcmp@plt+0x2ef36>
  432635:	lea    r10d,[r8-0x1]
  432639:	mov    rax,rsi
  43263c:	shr    rax,0x21
  432640:	xor    eax,esi
  432642:	mov    r15d,esi
  432645:	shl    r15d,0xb
  432649:	xor    r15d,eax
  43264c:	mov    r11d,r10d
  43264f:	and    r11d,r15d
  432652:	mov    eax,r15d
  432655:	shr    eax,0x3
  432658:	shl    r15d,0x3
  43265c:	xor    r15d,eax
  43265f:	or     r15d,0x1
  432663:	and    r15d,r10d
  432666:	mov    r14,QWORD PTR [r9+0x10]
  43266a:	xor    eax,eax
  43266c:	mov    ecx,r11d
  43266f:	nop
  432670:	mov    edi,ecx
  432672:	shr    edi,0x4
  432675:	mov    ebx,DWORD PTR [r14+rdi*4]
  432679:	lea    ebp,[rcx+rcx*1]
  43267c:	and    ebp,0x1e
  43267f:	shrx   edi,ebx,ebp
  432684:	test   dil,0x2
  432688:	jne    4326a9 <strcmp@plt+0x2ef21>
  43268a:	test   dil,0x1
  43268e:	jne    43269c <strcmp@plt+0x2ef14>
  432690:	mov    rdi,QWORD PTR [r9+0x18]
  432694:	mov    edx,ecx
  432696:	cmp    QWORD PTR [rdi+rdx*8],rsi
  43269a:	je     4326a9 <strcmp@plt+0x2ef21>
  43269c:	add    ecx,r15d
  43269f:	and    ecx,r10d
  4326a2:	cmp    ecx,r11d
  4326a5:	jne    432670 <strcmp@plt+0x2eee8>
  4326a7:	jmp    4326cc <strcmp@plt+0x2ef44>
  4326a9:	mov    eax,0x3
  4326ae:	shlx   eax,eax,ebp
  4326b3:	test   eax,ebx
  4326b5:	cmovne ecx,r8d
  4326b9:	cmp    ecx,r8d
  4326bc:	jne    4326c2 <strcmp@plt+0x2ef3a>
  4326be:	xor    eax,eax
  4326c0:	jmp    4326cc <strcmp@plt+0x2ef44>
  4326c2:	mov    rax,QWORD PTR [r9+0x20]
  4326c6:	mov    ecx,ecx
  4326c8:	mov    rax,QWORD PTR [rax+rcx*8]
  4326cc:	pop    rbx
  4326cd:	pop    r14
  4326cf:	pop    r15
  4326d1:	pop    rbp
  4326d2:	ret    
  4326d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4326dd:	nop    DWORD PTR [rax]
  4326e0:	push   rbp
  4326e1:	push   r15
  4326e3:	push   r14
  4326e5:	push   r13
  4326e7:	push   r12
  4326e9:	push   rbx
  4326ea:	sub    rsp,0x18
  4326ee:	mov    QWORD PTR [rsp+0x8],rdi
  4326f3:	mov    rax,QWORD PTR [rsi]
  4326f6:	mov    r13,QWORD PTR [rax+0x8]
  4326fa:	mov    QWORD PTR [rsp+0x10],rax
  4326ff:	cmp    r13,rax
  432702:	je     432813 <strcmp@plt+0x2f08b>
  432708:	mov    rax,QWORD PTR [rsp+0x8]
  43270d:	mov    r9,QWORD PTR [rax]
  432710:	mov    rdi,r13
  432713:	mov    r13,QWORD PTR [r13+0x8]
  432717:	mov    r8d,DWORD PTR [r9]
  43271a:	test   r8d,r8d
  43271d:	je     4327f0 <strcmp@plt+0x2f068>
  432723:	mov    rax,QWORD PTR [rdi+0x10]
  432727:	mov    r10,QWORD PTR [rax]
  43272a:	lea    r14d,[r8-0x1]
  43272e:	mov    rax,r10
  432731:	shr    rax,0x21
  432735:	xor    eax,r10d
  432738:	mov    ebx,r10d
  43273b:	shl    ebx,0xb
  43273e:	xor    ebx,eax
  432740:	mov    r11d,r14d
  432743:	and    r11d,ebx
  432746:	mov    eax,ebx
  432748:	shr    eax,0x3
  43274b:	shl    ebx,0x3
  43274e:	xor    ebx,eax
  432750:	or     ebx,0x1
  432753:	and    ebx,r14d
  432756:	mov    r15,QWORD PTR [r9+0x10]
  43275a:	mov    ebp,r11d
  43275d:	nop    DWORD PTR [rax]
  432760:	mov    ecx,ebp
  432762:	shr    ecx,0x4
  432765:	mov    edx,DWORD PTR [r15+rcx*4]
  432769:	lea    ecx,[rbp+rbp*1+0x0]
  43276d:	and    ecx,0x1e
  432770:	shrx   r12d,edx,ecx
  432775:	test   r12b,0x2
  432779:	jne    4327a0 <strcmp@plt+0x2f018>
  43277b:	test   r12b,0x1
  43277f:	jne    43278d <strcmp@plt+0x2f005>
  432781:	mov    rsi,QWORD PTR [r9+0x18]
  432785:	mov    eax,ebp
  432787:	cmp    QWORD PTR [rsi+rax*8],r10
  43278b:	je     4327a0 <strcmp@plt+0x2f018>
  43278d:	add    ebp,ebx
  43278f:	and    ebp,r14d
  432792:	cmp    ebp,r11d
  432795:	jne    432760 <strcmp@plt+0x2efd8>
  432797:	jmp    4327f0 <strcmp@plt+0x2f068>
  432799:	nop    DWORD PTR [rax+0x0]
  4327a0:	mov    eax,0x3
  4327a5:	shlx   eax,eax,ecx
  4327aa:	test   eax,edx
  4327ac:	cmovne ebp,r8d
  4327b0:	cmp    ebp,r8d
  4327b3:	je     4327f0 <strcmp@plt+0x2f068>
  4327b5:	mov    rsi,QWORD PTR [rsp+0x10]
  4327ba:	call   42c070 <strcmp@plt+0x288e8>
  4327bf:	mov    rax,QWORD PTR [rsp+0x8]
  4327c4:	mov    r9,QWORD PTR [rax]
  4327c7:	cmp    DWORD PTR [r9],ebp
  4327ca:	je     4327f0 <strcmp@plt+0x2f068>
  4327cc:	mov    rax,QWORD PTR [r9+0x10]
  4327d0:	mov    ecx,ebp
  4327d2:	shr    ecx,0x4
  4327d5:	mov    edx,DWORD PTR [rax+rcx*4]
  4327d8:	add    ebp,ebp
  4327da:	and    ebp,0x1e
  4327dd:	mov    esi,0x3
  4327e2:	shlx   esi,esi,ebp
  4327e7:	test   edx,esi
  4327e9:	je     4327fd <strcmp@plt+0x2f075>
  4327eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4327f0:	cmp    r13,QWORD PTR [rsp+0x10]
  4327f5:	jne    432710 <strcmp@plt+0x2ef88>
  4327fb:	jmp    432813 <strcmp@plt+0x2f08b>
  4327fd:	bts    edx,ebp
  432800:	mov    DWORD PTR [rax+rcx*4],edx
  432803:	add    DWORD PTR [r9+0x4],0xffffffff
  432808:	cmp    r13,QWORD PTR [rsp+0x10]
  43280d:	jne    432710 <strcmp@plt+0x2ef88>
  432813:	add    rsp,0x18
  432817:	pop    rbx
  432818:	pop    r12
  43281a:	pop    r13
  43281c:	pop    r14
  43281e:	pop    r15
  432820:	pop    rbp
  432821:	ret    
  432822:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43282c:	nop    DWORD PTR [rax+0x0]
  432830:	push   rbx
  432831:	sub    rsp,0x10
  432835:	mov    ebx,edi
  432837:	mov    rsi,rsp
  43283a:	mov    edi,0x1
  43283f:	call   403360 <clock_gettime@plt>
  432844:	mov    eax,DWORD PTR [rsp+0x8]
  432848:	or     ebx,eax
  43284a:	bswap  eax
  43284c:	xor    eax,DWORD PTR [rsp]
  43284f:	shl    rax,0x20
  432853:	or     rax,rbx
  432856:	add    rsp,0x10
  43285a:	pop    rbx
  43285b:	ret    
  43285c:	nop    DWORD PTR [rax+0x0]
  432860:	push   rbx
  432861:	sub    rsp,0x10
  432865:	xor    edi,edi
  432867:	call   403370 <time@plt>
  43286c:	mov    rbx,rax
  43286f:	mov    rsi,rsp
  432872:	mov    edi,0x1
  432877:	call   403360 <clock_gettime@plt>
  43287c:	mov    eax,DWORD PTR [rsp+0x8]
  432880:	or     ebx,eax
  432882:	bswap  eax
  432884:	xor    eax,DWORD PTR [rsp]
  432887:	shl    rax,0x20
  43288b:	or     rbx,rax
  43288e:	mov    rax,rbx
  432891:	add    rsp,0x10
  432895:	pop    rbx
  432896:	ret    
  432897:	nop    WORD PTR [rax+rax*1+0x0]
  4328a0:	mov    rax,QWORD PTR [rdi]
  4328a3:	ret    
  4328a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4328ae:	xchg   ax,ax
  4328b0:	mov    rax,QWORD PTR [rdi+0x8]
  4328b4:	ret    
  4328b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4328bf:	nop
  4328c0:	push   r14
  4328c2:	push   rbx
  4328c3:	push   rax
  4328c4:	mov    r14,rdi
  4328c7:	mov    edi,0x10
  4328cc:	call   432070 <strcmp@plt+0x2e8e8>
  4328d1:	test   rax,rax
  4328d4:	je     4328f5 <strcmp@plt+0x2f16d>
  4328d6:	mov    rbx,rax
  4328d9:	mov    QWORD PTR [rax+0x8],r14
  4328dd:	lea    rdi,[rip+0x2c]        # 432910 <strcmp@plt+0x2f188>
  4328e4:	lea    rsi,[rip+0x35]        # 432920 <strcmp@plt+0x2f198>
  4328eb:	call   42bb90 <strcmp@plt+0x28408>
  4328f0:	mov    QWORD PTR [rbx],rax
  4328f3:	jmp    4328f7 <strcmp@plt+0x2f16f>
  4328f5:	xor    ebx,ebx
  4328f7:	mov    rax,rbx
  4328fa:	add    rsp,0x8
  4328fe:	pop    rbx
  4328ff:	pop    r14
  432901:	ret    
  432902:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43290c:	nop    DWORD PTR [rax+0x0]
  432910:	mov    rcx,QWORD PTR [rdi]
  432913:	xor    eax,eax
  432915:	cmp    rcx,QWORD PTR [rsi]
  432918:	sete   al
  43291b:	ret    
  43291c:	nop    DWORD PTR [rax+0x0]
  432920:	jmp    403780 <free@plt>
  432925:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43292f:	nop
  432930:	mov    rax,QWORD PTR [rdi]
  432933:	mov    eax,DWORD PTR [rax+0x18]
  432936:	ret    
  432937:	nop    WORD PTR [rax+rax*1+0x0]
  432940:	push   rbp
  432941:	push   r15
  432943:	push   r14
  432945:	push   r13
  432947:	push   r12
  432949:	push   rbx
  43294a:	sub    rsp,0x18
  43294e:	add    esi,0xffffffff
  432951:	mov    eax,esi
  432953:	shr    eax,1
  432955:	or     eax,esi
  432957:	mov    ecx,eax
  432959:	shr    ecx,0x2
  43295c:	or     ecx,eax
  43295e:	mov    eax,ecx
  432960:	shr    eax,0x4
  432963:	or     eax,ecx
  432965:	mov    ecx,eax
  432967:	shr    ecx,0x8
  43296a:	or     ecx,eax
  43296c:	mov    r12d,ecx
  43296f:	shr    r12d,0x10
  432973:	or     r12d,ecx
  432976:	add    r12d,0x1
  43297a:	cmp    r12d,0x4
  43297e:	mov    eax,0x4
  432983:	cmovbe r12d,eax
  432987:	vcvtsi2sd xmm0,xmm0,r12
  43298c:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15004]        # 447998 <strcmp@plt+0x44210>
  432994:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x15004]        # 4479a0 <strcmp@plt+0x44218>
  43299c:	vcvttsd2si rcx,xmm0
  4329a1:	cmp    DWORD PTR [rdi+0x4],ecx
  4329a4:	jae    432bd6 <strcmp@plt+0x2f44e>
  4329aa:	mov    rbp,rdi
  4329ad:	mov    QWORD PTR [rsp+0x10],rcx
  4329b2:	mov    r15d,r12d
  4329b5:	shr    r15d,0x2
  4329b9:	and    r15d,0xfffffffc
  4329bd:	cmp    r12d,0x10
  4329c1:	cmovb  r15d,eax
  4329c5:	mov    rdi,r15
  4329c8:	call   403510 <malloc@plt>
  4329cd:	mov    r14,rax
  4329d0:	mov    esi,0xaa
  4329d5:	mov    rdi,rax
  4329d8:	mov    rdx,r15
  4329db:	call   403260 <memset@plt>
  4329e0:	mov    ebx,DWORD PTR [rbp+0x0]
  4329e3:	cmp    ebx,r12d
  4329e6:	jae    432a12 <strcmp@plt+0x2f28a>
  4329e8:	mov    rdi,QWORD PTR [rbp+0x18]
  4329ec:	mov    r15d,r12d
  4329ef:	shl    r15,0x3
  4329f3:	mov    rsi,r15
  4329f6:	call   403650 <realloc@plt>
  4329fb:	mov    QWORD PTR [rbp+0x18],rax
  4329ff:	mov    rdi,QWORD PTR [rbp+0x20]
  432a03:	mov    rsi,r15
  432a06:	call   403650 <realloc@plt>
  432a0b:	mov    QWORD PTR [rbp+0x20],rax
  432a0f:	mov    ebx,DWORD PTR [rbp+0x0]
  432a12:	test   ebx,ebx
  432a14:	je     432bb7 <strcmp@plt+0x2f42f>
  432a1a:	mov    QWORD PTR [rsp+0x8],r12
  432a1f:	lea    eax,[r12-0x1]
  432a24:	xor    r10d,r10d
  432a27:	mov    r9d,0x2
  432a2d:	mov    QWORD PTR [rsp],rbp
  432a31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  432a40:	mov    r15,QWORD PTR [rbp+0x10]
  432a44:	mov    esi,r10d
  432a47:	shr    esi,0x4
  432a4a:	mov    edx,DWORD PTR [r15+rsi*4]
  432a4e:	lea    r12d,[r10+r10*1]
  432a52:	and    r12d,0x1e
  432a56:	mov    ecx,0x3
  432a5b:	shlx   ecx,ecx,r12d
  432a60:	test   edx,ecx
  432a62:	jne    432b75 <strcmp@plt+0x2f3ed>
  432a68:	lea    rdi,[r15+rsi*4]
  432a6c:	mov    ecx,r10d
  432a6f:	mov    rbp,QWORD PTR [rsp]
  432a73:	mov    rsi,QWORD PTR [rbp+0x18]
  432a77:	mov    r11,QWORD PTR [rbp+0x20]
  432a7b:	mov    r8,QWORD PTR [rsi+rcx*8]
  432a7f:	mov    r11,QWORD PTR [r11+rcx*8]
  432a83:	mov    ecx,r12d
  432a86:	jmp    432abc <strcmp@plt+0x2f334>
  432a88:	nop    DWORD PTR [rax+rax*1+0x0]
  432a90:	mov    rdi,QWORD PTR [rbp+0x18]
  432a94:	mov    edx,edx
  432a96:	mov    r12,QWORD PTR [rdi+rdx*8]
  432a9a:	mov    QWORD PTR [rdi+rdx*8],r8
  432a9e:	mov    rdi,QWORD PTR [rbp+0x20]
  432aa2:	mov    rbx,QWORD PTR [rdi+rdx*8]
  432aa6:	mov    QWORD PTR [rdi+rdx*8],r11
  432aaa:	mov    r15,QWORD PTR [rbp+0x10]
  432aae:	lea    rdi,[r15+rsi*4]
  432ab2:	mov    edx,DWORD PTR [r15+rsi*4]
  432ab6:	mov    r11,rbx
  432ab9:	mov    r8,r12
  432abc:	mov    esi,0x1
  432ac1:	shlx   rcx,rsi,rcx
  432ac6:	or     ecx,edx
  432ac8:	mov    DWORD PTR [rdi],ecx
  432aca:	mov    rcx,r8
  432acd:	shr    rcx,0x21
  432ad1:	xor    ecx,r8d
  432ad4:	mov    ebp,r8d
  432ad7:	shl    ebp,0xb
  432ada:	xor    ebp,ecx
  432adc:	mov    edx,eax
  432ade:	and    edx,ebp
  432ae0:	mov    esi,edx
  432ae2:	shr    esi,0x4
  432ae5:	mov    r12d,DWORD PTR [r14+rsi*4]
  432ae9:	lea    r13d,[rdx+rdx*1]
  432aed:	and    r13d,0x1e
  432af1:	shlx   ecx,r9d,r13d
  432af6:	test   ecx,r12d
  432af9:	jne    432b31 <strcmp@plt+0x2f3a9>
  432afb:	mov    ecx,ebp
  432afd:	shr    ecx,0x3
  432b00:	shl    ebp,0x3
  432b03:	xor    ebp,ecx
  432b05:	or     ebp,0x1
  432b08:	and    ebp,eax
  432b0a:	nop    WORD PTR [rax+rax*1+0x0]
  432b10:	add    edx,ebp
  432b12:	and    edx,eax
  432b14:	mov    ecx,edx
  432b16:	shr    ecx,0x4
  432b19:	mov    r12d,DWORD PTR [r14+rcx*4]
  432b1d:	lea    r13d,[rdx+rdx*1]
  432b21:	and    r13d,0x1e
  432b25:	shlx   esi,r9d,r13d
  432b2a:	test   esi,r12d
  432b2d:	je     432b10 <strcmp@plt+0x2f388>
  432b2f:	mov    esi,ecx
  432b31:	lea    rcx,[r14+rsi*4]
  432b35:	shlx   ebp,r9d,r13d
  432b3a:	andn   ebp,ebp,r12d
  432b3f:	mov    DWORD PTR [rcx],ebp
  432b41:	mov    rbp,QWORD PTR [rsp]
  432b45:	mov    ebx,DWORD PTR [rbp+0x0]
  432b48:	cmp    edx,ebx
  432b4a:	jae    432b63 <strcmp@plt+0x2f3db>
  432b4c:	mov    ecx,r13d
  432b4f:	mov    edi,0x3
  432b54:	shlx   edi,edi,ecx
  432b59:	test   DWORD PTR [r15+rsi*4],edi
  432b5d:	je     432a90 <strcmp@plt+0x2f308>
  432b63:	mov    rcx,QWORD PTR [rbp+0x18]
  432b67:	mov    edx,edx
  432b69:	mov    QWORD PTR [rcx+rdx*8],r8
  432b6d:	mov    rcx,QWORD PTR [rbp+0x20]
  432b71:	mov    QWORD PTR [rcx+rdx*8],r11
  432b75:	add    r10d,0x1
  432b79:	cmp    r10d,ebx
  432b7c:	mov    rbp,QWORD PTR [rsp]
  432b80:	jne    432a40 <strcmp@plt+0x2f2b8>
  432b86:	mov    r12,QWORD PTR [rsp+0x8]
  432b8b:	cmp    ebx,r12d
  432b8e:	jbe    432bb7 <strcmp@plt+0x2f42f>
  432b90:	mov    rdi,QWORD PTR [rbp+0x18]
  432b94:	mov    r15d,r12d
  432b97:	shl    r15,0x3
  432b9b:	mov    rsi,r15
  432b9e:	call   403650 <realloc@plt>
  432ba3:	mov    QWORD PTR [rbp+0x18],rax
  432ba7:	mov    rdi,QWORD PTR [rbp+0x20]
  432bab:	mov    rsi,r15
  432bae:	call   403650 <realloc@plt>
  432bb3:	mov    QWORD PTR [rbp+0x20],rax
  432bb7:	mov    rdi,QWORD PTR [rbp+0x10]
  432bbb:	call   403780 <free@plt>
  432bc0:	mov    QWORD PTR [rbp+0x10],r14
  432bc4:	mov    DWORD PTR [rbp+0x0],r12d
  432bc8:	mov    eax,DWORD PTR [rbp+0x4]
  432bcb:	mov    DWORD PTR [rbp+0x8],eax
  432bce:	mov    rax,QWORD PTR [rsp+0x10]
  432bd3:	mov    DWORD PTR [rbp+0xc],eax
  432bd6:	add    rsp,0x18
  432bda:	pop    rbx
  432bdb:	pop    r12
  432bdd:	pop    r13
  432bdf:	pop    r14
  432be1:	pop    r15
  432be3:	pop    rbp
  432be4:	ret    
  432be5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432bef:	nop
  432bf0:	lea    eax,[rdx+rsi*4]
  432bf3:	add    eax,0xdeadbeef
  432bf8:	cmp    rsi,0x4
  432bfc:	jb     432c9a <strcmp@plt+0x2f512>
  432c02:	mov    r8d,eax
  432c05:	mov    r9d,eax
  432c08:	nop    DWORD PTR [rax+rax*1+0x0]
  432c10:	add    r9d,DWORD PTR [rdi]
  432c13:	add    r8d,DWORD PTR [rdi+0x4]
  432c17:	add    eax,DWORD PTR [rdi+0x8]
  432c1a:	sub    r9d,eax
  432c1d:	rorx   ecx,eax,0x1c
  432c23:	xor    ecx,r9d
  432c26:	add    eax,r8d
  432c29:	sub    r8d,ecx
  432c2c:	rorx   edx,ecx,0x1a
  432c32:	xor    edx,r8d
  432c35:	add    ecx,eax
  432c37:	sub    eax,edx
  432c39:	rorx   r10d,edx,0x18
  432c3f:	xor    r10d,eax
  432c42:	add    edx,ecx
  432c44:	sub    ecx,r10d
  432c47:	rorx   r9d,r10d,0x10
  432c4d:	xor    r9d,ecx
  432c50:	add    r10d,edx
  432c53:	sub    edx,r9d
  432c56:	rorx   r8d,r9d,0xd
  432c5c:	xor    r8d,edx
  432c5f:	add    r9d,r10d
  432c62:	sub    r10d,r8d
  432c65:	rorx   eax,r8d,0x1c
  432c6b:	xor    eax,r10d
  432c6e:	add    r8d,r9d
  432c71:	add    rsi,0xfffffffffffffffd
  432c75:	add    rdi,0xc
  432c79:	cmp    rsi,0x3
  432c7d:	ja     432c10 <strcmp@plt+0x2f488>
  432c7f:	cmp    rsi,0x1
  432c83:	je     432ca6 <strcmp@plt+0x2f51e>
  432c85:	cmp    rsi,0x2
  432c89:	je     432c94 <strcmp@plt+0x2f50c>
  432c8b:	cmp    rsi,0x3
  432c8f:	jne    432cfa <strcmp@plt+0x2f572>
  432c91:	add    eax,DWORD PTR [rdi+0x8]
  432c94:	add    r8d,DWORD PTR [rdi+0x4]
  432c98:	jmp    432ca6 <strcmp@plt+0x2f51e>
  432c9a:	mov    r9d,eax
  432c9d:	mov    r8d,eax
  432ca0:	cmp    rsi,0x1
  432ca4:	jne    432c85 <strcmp@plt+0x2f4fd>
  432ca6:	add    r9d,DWORD PTR [rdi]
  432ca9:	xor    eax,r8d
  432cac:	rorx   ecx,r8d,0x12
  432cb2:	sub    eax,ecx
  432cb4:	xor    r9d,eax
  432cb7:	rorx   ecx,eax,0x15
  432cbd:	sub    r9d,ecx
  432cc0:	xor    r8d,r9d
  432cc3:	rorx   ecx,r9d,0x7
  432cc9:	sub    r8d,ecx
  432ccc:	xor    eax,r8d
  432ccf:	rorx   ecx,r8d,0x10
  432cd5:	sub    eax,ecx
  432cd7:	xor    r9d,eax
  432cda:	rorx   ecx,eax,0x1c
  432ce0:	sub    r9d,ecx
  432ce3:	xor    r8d,r9d
  432ce6:	rorx   ecx,r9d,0x12
  432cec:	sub    r8d,ecx
  432cef:	xor    eax,r8d
  432cf2:	rorx   ecx,r8d,0x8
  432cf8:	sub    eax,ecx
  432cfa:	ret    
  432cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  432d00:	mov    ecx,DWORD PTR [rdi+0x14]
  432d03:	cmp    ecx,0xe
  432d06:	jae    432d0b <strcmp@plt+0x2f583>
  432d08:	xor    eax,eax
  432d0a:	ret    
  432d0b:	mov    rax,QWORD PTR [rdi+0x38]
  432d0f:	lea    rdx,[rax+0xe]
  432d13:	mov    QWORD PTR [rdi+0x38],rdx
  432d17:	add    ecx,0xfffffff2
  432d1a:	mov    DWORD PTR [rdi+0x14],ecx
  432d1d:	ret    
  432d1e:	xchg   ax,ax
  432d20:	mov    ecx,DWORD PTR [rdi+0x14]
  432d23:	cmp    ecx,0x14
  432d26:	jae    432d2b <strcmp@plt+0x2f5a3>
  432d28:	xor    eax,eax
  432d2a:	ret    
  432d2b:	mov    rax,QWORD PTR [rdi+0x38]
  432d2f:	lea    rdx,[rax+0x14]
  432d33:	mov    QWORD PTR [rdi+0x38],rdx
  432d37:	add    ecx,0xffffffec
  432d3a:	mov    DWORD PTR [rdi+0x14],ecx
  432d3d:	ret    
  432d3e:	xchg   ax,ax
  432d40:	mov    ecx,DWORD PTR [rdi+0x14]
  432d43:	cmp    ecx,0x28
  432d46:	jae    432d4b <strcmp@plt+0x2f5c3>
  432d48:	xor    eax,eax
  432d4a:	ret    
  432d4b:	mov    rax,QWORD PTR [rdi+0x38]
  432d4f:	lea    rdx,[rax+0x28]
  432d53:	mov    QWORD PTR [rdi+0x38],rdx
  432d57:	add    ecx,0xffffffd8
  432d5a:	mov    DWORD PTR [rdi+0x14],ecx
  432d5d:	ret    
  432d5e:	xchg   ax,ax
  432d60:	push   rbx
  432d61:	mov    rbx,rdi
  432d64:	mov    rax,QWORD PTR [rdi+0x38]
  432d68:	movzx  edi,BYTE PTR [rax]
  432d6b:	shr    edi,0x4
  432d6e:	call   4249c0 <strcmp@plt+0x21238>
  432d73:	test   eax,eax
  432d75:	jle    432d84 <strcmp@plt+0x2f5fc>
  432d77:	mov    ecx,eax
  432d79:	mov    edx,DWORD PTR [rbx+0x14]
  432d7c:	sub    edx,eax
  432d7e:	jae    432d88 <strcmp@plt+0x2f600>
  432d80:	xor    eax,eax
  432d82:	pop    rbx
  432d83:	ret    
  432d84:	xor    eax,eax
  432d86:	pop    rbx
  432d87:	ret    
  432d88:	mov    rax,QWORD PTR [rbx+0x38]
  432d8c:	mov    ecx,ecx
  432d8e:	add    rcx,rax
  432d91:	mov    QWORD PTR [rbx+0x38],rcx
  432d95:	mov    DWORD PTR [rbx+0x14],edx
  432d98:	pop    rbx
  432d99:	ret    
  432d9a:	nop    WORD PTR [rax+rax*1+0x0]
  432da0:	mov    rax,QWORD PTR [rdi+0x38]
  432da4:	mov    ecx,DWORD PTR [rdi+0x14]
  432da7:	cmp    ecx,0x8
  432daa:	jb     432dba <strcmp@plt+0x2f632>
  432dac:	lea    rdx,[rax+0x8]
  432db0:	mov    QWORD PTR [rdi+0x38],rdx
  432db4:	add    ecx,0xfffffff8
  432db7:	mov    DWORD PTR [rdi+0x14],ecx
  432dba:	ret    
  432dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  432dc0:	push   rbp
  432dc1:	push   r14
  432dc3:	push   rbx
  432dc4:	mov    r14d,edx
  432dc7:	mov    ebp,esi
  432dc9:	mov    ebx,DWORD PTR [rdi+0x14]
  432dcc:	mov    esi,0x8
  432dd1:	call   42e320 <strcmp@plt+0x2ab98>
  432dd6:	movbe  WORD PTR [rax],bp
  432ddb:	movbe  WORD PTR [rax+0x2],r14w
  432de2:	add    ebx,0x8
  432de5:	movbe  WORD PTR [rax+0x4],bx
  432deb:	mov    WORD PTR [rax+0x6],0x0
  432df1:	pop    rbx
  432df2:	pop    r14
  432df4:	pop    rbp
  432df5:	ret    
  432df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432e00:	push   rbp
  432e01:	push   r14
  432e03:	push   rbx
  432e04:	mov    r14d,ecx
  432e07:	mov    rbx,rdx
  432e0a:	mov    rbp,rsi
  432e0d:	mov    esi,0xe
  432e12:	call   42e320 <strcmp@plt+0x2ab98>
  432e17:	movbe  WORD PTR [rax+0xc],r14w
  432e1e:	movzx  ecx,WORD PTR [rbp+0x4]
  432e22:	mov    WORD PTR [rax+0x4],cx
  432e26:	mov    ecx,DWORD PTR [rbp+0x0]
  432e29:	mov    DWORD PTR [rax],ecx
  432e2b:	mov    ecx,DWORD PTR [rbx]
  432e2d:	mov    DWORD PTR [rax+0x6],ecx
  432e30:	movzx  ecx,WORD PTR [rbx+0x4]
  432e34:	mov    WORD PTR [rax+0xa],cx
  432e38:	pop    rbx
  432e39:	pop    r14
  432e3b:	pop    rbp
  432e3c:	ret    
  432e3d:	nop    DWORD PTR [rax]
  432e40:	push   rbp
  432e41:	push   r15
  432e43:	push   r14
  432e45:	push   r12
  432e47:	push   rbx
  432e48:	mov    r15d,ecx
  432e4b:	mov    r14,rdx
  432e4e:	mov    r12,rsi
  432e51:	mov    rbp,rdi
  432e54:	mov    esi,0x14
  432e59:	call   42e320 <strcmp@plt+0x2ab98>
  432e5e:	mov    rbx,rax
  432e61:	mov    WORD PTR [rax],0x45
  432e66:	movzx  eax,WORD PTR [rbp+0x14]
  432e6a:	movbe  WORD PTR [rbx+0x2],ax
  432e70:	lea    rax,[rip+0x3c9e9]        # 46f860 <strcmp@plt+0x6c0d8>
  432e77:	movzx  ecx,WORD PTR [rax]
  432e7a:	add    ecx,0x1
  432e7d:	mov    WORD PTR [rax],cx
  432e80:	movbe  WORD PTR [rbx+0x4],cx
  432e86:	mov    WORD PTR [rbx+0x6],0x40
  432e8c:	mov    BYTE PTR [rbx+0x8],0xff
  432e90:	mov    BYTE PTR [rbx+0x9],r15b
  432e94:	mov    eax,DWORD PTR [r12]
  432e98:	mov    DWORD PTR [rbx+0xc],eax
  432e9b:	mov    eax,DWORD PTR [r14]
  432e9e:	mov    DWORD PTR [rbx+0x10],eax
  432ea1:	mov    esi,0x14
  432ea6:	mov    rdi,rbx
  432ea9:	call   42b440 <strcmp@plt+0x27cb8>
  432eae:	mov    WORD PTR [rbx+0xa],ax
  432eb2:	mov    rax,rbx
  432eb5:	pop    rbx
  432eb6:	pop    r12
  432eb8:	pop    r14
  432eba:	pop    r15
  432ebc:	pop    rbp
  432ebd:	ret    
  432ebe:	xchg   ax,ax
  432ec0:	push   rbp
  432ec1:	push   r15
  432ec3:	push   r14
  432ec5:	push   rbx
  432ec6:	push   rax
  432ec7:	mov    ebx,ecx
  432ec9:	mov    r14,rdx
  432ecc:	mov    r15,rsi
  432ecf:	movzx  ebp,WORD PTR [rdi+0x14]
  432ed3:	mov    esi,0x28
  432ed8:	call   42e320 <strcmp@plt+0x2ab98>
  432edd:	mov    BYTE PTR [rax+0x7],0xff
  432ee1:	mov    BYTE PTR [rax],0x60
  432ee4:	mov    BYTE PTR [rax+0x6],bl
  432ee7:	movbe  WORD PTR [rax+0x4],bp
  432eed:	vmovups xmm0,XMMWORD PTR [r15]
  432ef2:	vmovups XMMWORD PTR [rax+0x8],xmm0
  432ef7:	vmovups xmm0,XMMWORD PTR [r14]
  432efc:	vmovups XMMWORD PTR [rax+0x18],xmm0
  432f01:	add    rsp,0x8
  432f05:	pop    rbx
  432f06:	pop    r14
  432f08:	pop    r15
  432f0a:	pop    rbp
  432f0b:	ret    
  432f0c:	nop    DWORD PTR [rax+0x0]
  432f10:	push   rbp
  432f11:	push   r15
  432f13:	push   r14
  432f15:	push   r13
  432f17:	push   r12
  432f19:	push   rbx
  432f1a:	push   rax
  432f1b:	mov    r14d,ecx
  432f1e:	mov    r12,rdx
  432f21:	mov    rbp,rsi
  432f24:	mov    r15,rdi
  432f27:	mov    rdi,rsi
  432f2a:	call   423d30 <strcmp@plt+0x205a8>
  432f2f:	mov    ebx,eax
  432f31:	mov    rdi,r12
  432f34:	call   423d30 <strcmp@plt+0x205a8>
  432f39:	cmp    ebx,eax
  432f3b:	jne    432fd8 <strcmp@plt+0x2f850>
  432f41:	mov    rdi,rbp
  432f44:	call   423d30 <strcmp@plt+0x205a8>
  432f49:	cmp    eax,0xa
  432f4c:	je     433018 <strcmp@plt+0x2f890>
  432f52:	cmp    eax,0x2
  432f55:	jne    433014 <strcmp@plt+0x2f88c>
  432f5b:	mov    rdi,rbp
  432f5e:	call   423d40 <strcmp@plt+0x205b8>
  432f63:	mov    r13,rax
  432f66:	mov    rdi,r12
  432f69:	call   423d40 <strcmp@plt+0x205b8>
  432f6e:	mov    rbp,rax
  432f71:	mov    esi,0x14
  432f76:	mov    rdi,r15
  432f79:	call   42e320 <strcmp@plt+0x2ab98>
  432f7e:	mov    rbx,rax
  432f81:	mov    WORD PTR [rax],0x45
  432f86:	movzx  eax,WORD PTR [r15+0x14]
  432f8b:	movbe  WORD PTR [rbx+0x2],ax
  432f91:	lea    rax,[rip+0x3c8c8]        # 46f860 <strcmp@plt+0x6c0d8>
  432f98:	movzx  ecx,WORD PTR [rax]
  432f9b:	add    ecx,0x1
  432f9e:	mov    WORD PTR [rax],cx
  432fa1:	movbe  WORD PTR [rbx+0x4],cx
  432fa7:	mov    WORD PTR [rbx+0x6],0x40
  432fad:	mov    BYTE PTR [rbx+0x8],0xff
  432fb1:	mov    BYTE PTR [rbx+0x9],r14b
  432fb5:	mov    eax,DWORD PTR [r13+0x0]
  432fb9:	mov    DWORD PTR [rbx+0xc],eax
  432fbc:	mov    eax,DWORD PTR [rbp+0x0]
  432fbf:	mov    DWORD PTR [rbx+0x10],eax
  432fc2:	mov    esi,0x14
  432fc7:	mov    rdi,rbx
  432fca:	call   42b440 <strcmp@plt+0x27cb8>
  432fcf:	mov    WORD PTR [rbx+0xa],ax
  432fd3:	jmp    43306a <strcmp@plt+0x2f8e2>
  432fd8:	lea    rax,[rip+0x31dd1]        # 464db0 <strcmp@plt+0x61628>
  432fdf:	cmp    DWORD PTR [rax],0x0
  432fe2:	jle    433014 <strcmp@plt+0x2f88c>
  432fe4:	mov    rdi,rbp
  432fe7:	call   423f30 <strcmp@plt+0x207a8>
  432fec:	mov    rbp,rax
  432fef:	mov    rdi,r12
  432ff2:	call   423f30 <strcmp@plt+0x207a8>
  432ff7:	mov    rcx,rax
  432ffa:	lea    rsi,[rip+0x197ea]        # 44c7eb <strcmp@plt+0x49063>
  433001:	xor    ebx,ebx
  433003:	mov    edi,0x5
  433008:	xor    eax,eax
  43300a:	mov    rdx,rbp
  43300d:	call   42e800 <strcmp@plt+0x2b078>
  433012:	jmp    43306a <strcmp@plt+0x2f8e2>
  433014:	xor    ebx,ebx
  433016:	jmp    43306a <strcmp@plt+0x2f8e2>
  433018:	mov    rdi,rbp
  43301b:	call   423d40 <strcmp@plt+0x205b8>
  433020:	mov    r13,rax
  433023:	mov    rdi,r12
  433026:	call   423d40 <strcmp@plt+0x205b8>
  43302b:	mov    r12,rax
  43302e:	movzx  ebp,WORD PTR [r15+0x14]
  433033:	mov    esi,0x28
  433038:	mov    rdi,r15
  43303b:	call   42e320 <strcmp@plt+0x2ab98>
  433040:	mov    rbx,rax
  433043:	mov    BYTE PTR [rax+0x7],0xff
  433047:	mov    BYTE PTR [rax],0x60
  43304a:	mov    BYTE PTR [rax+0x6],r14b
  43304e:	movbe  WORD PTR [rax+0x4],bp
  433054:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  43305a:	vmovups XMMWORD PTR [rax+0x8],xmm0
  43305f:	vmovups xmm0,XMMWORD PTR [r12]
  433065:	vmovups XMMWORD PTR [rax+0x18],xmm0
  43306a:	mov    rax,rbx
  43306d:	add    rsp,0x8
  433071:	pop    rbx
  433072:	pop    r12
  433074:	pop    r13
  433076:	pop    r14
  433078:	pop    r15
  43307a:	pop    rbp
  43307b:	ret    
  43307c:	nop    DWORD PTR [rax+0x0]
  433080:	push   rbp
  433081:	push   r15
  433083:	push   r14
  433085:	push   r13
  433087:	push   r12
  433089:	push   rbx
  43308a:	push   rax
  43308b:	mov    r15,r8
  43308e:	mov    r14,rcx
  433091:	mov    r12d,edx
  433094:	mov    r13d,esi
  433097:	mov    rbx,rdi
  43309a:	mov    ebp,DWORD PTR [rdi+0x14]
  43309d:	mov    esi,0x8
  4330a2:	call   42e320 <strcmp@plt+0x2ab98>
  4330a7:	movbe  WORD PTR [rax],r13w
  4330ad:	movbe  WORD PTR [rax+0x2],r12w
  4330b4:	add    ebp,0x8
  4330b7:	movbe  WORD PTR [rax+0x4],bp
  4330bd:	mov    WORD PTR [rax+0x6],0x0
  4330c3:	test   rax,rax
  4330c6:	je     433163 <strcmp@plt+0x2f9db>
  4330cc:	mov    eax,DWORD PTR [rbx+0x38]
  4330cf:	sub    eax,DWORD PTR [rbx+0x30]
  4330d2:	mov    WORD PTR [rbx+0x1c],ax
  4330d6:	mov    ecx,0x11
  4330db:	mov    rdi,rbx
  4330de:	mov    rsi,r14
  4330e1:	mov    rdx,r15
  4330e4:	call   432f10 <strcmp@plt+0x2f788>
  4330e9:	test   rax,rax
  4330ec:	je     433178 <strcmp@plt+0x2f9f0>
  4330f2:	mov    rax,QWORD PTR [rbx+0x30]
  4330f6:	mov    rcx,QWORD PTR [rbx+0x38]
  4330fa:	sub    rcx,rax
  4330fd:	mov    WORD PTR [rbx+0x1a],cx
  433101:	movzx  edx,WORD PTR [rbx+0x1c]
  433105:	lea    rbx,[rax+rdx*1]
  433109:	xor    r15d,r15d
  43310c:	cmp    rdx,0xffff
  433113:	cmove  rbx,r15
  433117:	movbe  dx,WORD PTR [rbx+0x4]
  43311d:	movzx  r12d,dx
  433121:	movzx  edx,cx
  433124:	movzx  ebp,cx
  433127:	add    rbp,rax
  43312a:	cmp    edx,0xffff
  433130:	cmove  rbp,r15
  433134:	mov    rdi,r14
  433137:	call   423d30 <strcmp@plt+0x205a8>
  43313c:	mov    rdi,rbx
  43313f:	mov    esi,r12d
  433142:	mov    rdx,rbp
  433145:	mov    ecx,eax
  433147:	call   42b9a0 <strcmp@plt+0x28218>
  43314c:	movzx  ecx,ax
  43314f:	cmp    ecx,0xffff
  433155:	je     433192 <strcmp@plt+0x2fa0a>
  433157:	mov    WORD PTR [rbx+0x6],ax
  43315b:	mov    r15d,0x1
  433161:	jmp    4331b4 <strcmp@plt+0x2fa2c>
  433163:	lea    rax,[rip+0x31c46]        # 464db0 <strcmp@plt+0x61628>
  43316a:	cmp    DWORD PTR [rax],0x0
  43316d:	jle    43318d <strcmp@plt+0x2fa05>
  43316f:	lea    rsi,[rip+0x196aa]        # 44c820 <strcmp@plt+0x49098>
  433176:	jmp    4331a5 <strcmp@plt+0x2fa1d>
  433178:	lea    rax,[rip+0x31c31]        # 464db0 <strcmp@plt+0x61628>
  43317f:	cmp    DWORD PTR [rax],0x0
  433182:	jle    43318d <strcmp@plt+0x2fa05>
  433184:	lea    rsi,[rip+0x196bb]        # 44c846 <strcmp@plt+0x490be>
  43318b:	jmp    4331a5 <strcmp@plt+0x2fa1d>
  43318d:	xor    r15d,r15d
  433190:	jmp    4331b4 <strcmp@plt+0x2fa2c>
  433192:	lea    rax,[rip+0x31c17]        # 464db0 <strcmp@plt+0x61628>
  433199:	cmp    DWORD PTR [rax],0x0
  43319c:	jle    4331b4 <strcmp@plt+0x2fa2c>
  43319e:	lea    rsi,[rip+0x196c6]        # 44c86b <strcmp@plt+0x490e3>
  4331a5:	xor    r15d,r15d
  4331a8:	mov    edi,0x5
  4331ad:	xor    eax,eax
  4331af:	call   42e800 <strcmp@plt+0x2b078>
  4331b4:	mov    eax,r15d
  4331b7:	add    rsp,0x8
  4331bb:	pop    rbx
  4331bc:	pop    r12
  4331be:	pop    r13
  4331c0:	pop    r14
  4331c2:	pop    r15
  4331c4:	pop    rbp
  4331c5:	ret    
  4331c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4331d0:	push   rbp
  4331d1:	push   r15
  4331d3:	push   r14
  4331d5:	push   r13
  4331d7:	push   r12
  4331d9:	push   rbx
  4331da:	push   rax
  4331db:	mov    r15,r8
  4331de:	mov    r14,rcx
  4331e1:	mov    r12d,edx
  4331e4:	mov    r13d,esi
  4331e7:	mov    rbx,rdi
  4331ea:	mov    ebp,DWORD PTR [rdi+0x14]
  4331ed:	mov    esi,0x8
  4331f2:	call   42e320 <strcmp@plt+0x2ab98>
  4331f7:	movbe  WORD PTR [rax],r13w
  4331fd:	movbe  WORD PTR [rax+0x2],r12w
  433204:	add    ebp,0x8
  433207:	movbe  WORD PTR [rax+0x4],bp
  43320d:	mov    WORD PTR [rax+0x6],0x0
  433213:	test   rax,rax
  433216:	je     4332b3 <strcmp@plt+0x2fb2b>
  43321c:	mov    eax,DWORD PTR [rbx+0x38]
  43321f:	sub    eax,DWORD PTR [rbx+0x30]
  433222:	mov    WORD PTR [rbx+0x22],ax
  433226:	mov    ecx,0x11
  43322b:	mov    rdi,rbx
  43322e:	mov    rsi,r14
  433231:	mov    rdx,r15
  433234:	call   432f10 <strcmp@plt+0x2f788>
  433239:	test   rax,rax
  43323c:	je     4332c8 <strcmp@plt+0x2fb40>
  433242:	mov    rax,QWORD PTR [rbx+0x30]
  433246:	mov    rcx,QWORD PTR [rbx+0x38]
  43324a:	sub    rcx,rax
  43324d:	mov    WORD PTR [rbx+0x20],cx
  433251:	movzx  edx,WORD PTR [rbx+0x22]
  433255:	lea    rbx,[rax+rdx*1]
  433259:	xor    r15d,r15d
  43325c:	cmp    rdx,0xffff
  433263:	cmove  rbx,r15
  433267:	movbe  dx,WORD PTR [rbx+0x4]
  43326d:	movzx  r12d,dx
  433271:	movzx  edx,cx
  433274:	movzx  ebp,cx
  433277:	add    rbp,rax
  43327a:	cmp    edx,0xffff
  433280:	cmove  rbp,r15
  433284:	mov    rdi,r14
  433287:	call   423d30 <strcmp@plt+0x205a8>
  43328c:	mov    rdi,rbx
  43328f:	mov    esi,r12d
  433292:	mov    rdx,rbp
  433295:	mov    ecx,eax
  433297:	call   42b9a0 <strcmp@plt+0x28218>
  43329c:	movzx  ecx,ax
  43329f:	cmp    ecx,0xffff
  4332a5:	je     4332e2 <strcmp@plt+0x2fb5a>
  4332a7:	mov    WORD PTR [rbx+0x6],ax
  4332ab:	mov    r15d,0x1
  4332b1:	jmp    433304 <strcmp@plt+0x2fb7c>
  4332b3:	lea    rax,[rip+0x31af6]        # 464db0 <strcmp@plt+0x61628>
  4332ba:	cmp    DWORD PTR [rax],0x0
  4332bd:	jle    4332dd <strcmp@plt+0x2fb55>
  4332bf:	lea    rsi,[rip+0x1955a]        # 44c820 <strcmp@plt+0x49098>
  4332c6:	jmp    4332f5 <strcmp@plt+0x2fb6d>
  4332c8:	lea    rax,[rip+0x31ae1]        # 464db0 <strcmp@plt+0x61628>
  4332cf:	cmp    DWORD PTR [rax],0x0
  4332d2:	jle    4332dd <strcmp@plt+0x2fb55>
  4332d4:	lea    rsi,[rip+0x1956b]        # 44c846 <strcmp@plt+0x490be>
  4332db:	jmp    4332f5 <strcmp@plt+0x2fb6d>
  4332dd:	xor    r15d,r15d
  4332e0:	jmp    433304 <strcmp@plt+0x2fb7c>
  4332e2:	lea    rax,[rip+0x31ac7]        # 464db0 <strcmp@plt+0x61628>
  4332e9:	cmp    DWORD PTR [rax],0x0
  4332ec:	jle    433304 <strcmp@plt+0x2fb7c>
  4332ee:	lea    rsi,[rip+0x19576]        # 44c86b <strcmp@plt+0x490e3>
  4332f5:	xor    r15d,r15d
  4332f8:	mov    edi,0x5
  4332fd:	xor    eax,eax
  4332ff:	call   42e800 <strcmp@plt+0x2b078>
  433304:	mov    eax,r15d
  433307:	add    rsp,0x8
  43330b:	pop    rbx
  43330c:	pop    r12
  43330e:	pop    r13
  433310:	pop    r14
  433312:	pop    r15
  433314:	pop    rbp
  433315:	ret    
  433316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433320:	push   r15
  433322:	push   r14
  433324:	push   rbx
  433325:	sub    rsp,0x40
  433329:	mov    r14,rsi
  43332c:	vmovups ymm0,YMMWORD PTR [rdi]
  433330:	vmovups ymm1,YMMWORD PTR [rdi+0x20]
  433335:	vmovups YMMWORD PTR [rsp+0x20],ymm1
  43333b:	vmovups YMMWORD PTR [rsp],ymm0
  433340:	mov    rdi,rsp
  433343:	vzeroupper 
  433346:	call   42e4f0 <strcmp@plt+0x2ad68>
  43334b:	xor    ebx,ebx
  43334d:	cmp    eax,0x1
  433350:	jne    43347d <strcmp@plt+0x2fcf5>
  433356:	movzx  eax,WORD PTR [rsp+0x1a]
  43335b:	mov    rcx,QWORD PTR [rsp+0x30]
  433360:	add    rcx,rax
  433363:	xor    ebx,ebx
  433365:	cmp    rax,0xffff
  43336b:	cmovne rbx,rcx
  43336f:	mov    esi,0x1
  433374:	mov    rdi,r14
  433377:	call   4231a0 <strcmp@plt+0x1fa18>
  43337c:	lea    r15,[r14+0x20]
  433380:	mov    esi,0x1
  433385:	mov    rdi,r15
  433388:	call   4231a0 <strcmp@plt+0x1fa18>
  43338d:	mov    al,BYTE PTR [rbx]
  43338f:	shr    al,0x4
  433392:	cmp    al,0x6
  433394:	je     4333e8 <strcmp@plt+0x2fc60>
  433396:	cmp    al,0x4
  433398:	jne    43344b <strcmp@plt+0x2fcc3>
  43339e:	lea    rsi,[rbx+0xc]
  4333a2:	mov    edx,0x2
  4333a7:	mov    rdi,r14
  4333aa:	call   423b50 <strcmp@plt+0x203c8>
  4333af:	lea    rsi,[rbx+0x10]
  4333b3:	mov    edx,0x2
  4333b8:	mov    rdi,r15
  4333bb:	call   423b50 <strcmp@plt+0x203c8>
  4333c0:	mov    al,BYTE PTR [rbx+0x9]
  4333c3:	mov    BYTE PTR [r14+0x44],al
  4333c7:	movzx  ecx,BYTE PTR [rbx]
  4333ca:	shl    rcx,0x2
  4333ce:	and    ecx,0x3c
  4333d1:	mov    edx,DWORD PTR [rsp+0x14]
  4333d5:	sub    edx,ecx
  4333d7:	jb     433427 <strcmp@plt+0x2fc9f>
  4333d9:	add    QWORD PTR [rsp+0x38],rcx
  4333de:	mov    DWORD PTR [rsp+0x14],edx
  4333e2:	cmp    al,0x6
  4333e4:	jne    43342b <strcmp@plt+0x2fca3>
  4333e6:	jmp    43342f <strcmp@plt+0x2fca7>
  4333e8:	lea    rsi,[rbx+0x8]
  4333ec:	mov    edx,0xa
  4333f1:	mov    rdi,r14
  4333f4:	call   423b50 <strcmp@plt+0x203c8>
  4333f9:	lea    rsi,[rbx+0x18]
  4333fd:	mov    edx,0xa
  433402:	mov    rdi,r15
  433405:	call   423b50 <strcmp@plt+0x203c8>
  43340a:	mov    al,BYTE PTR [rbx+0x6]
  43340d:	mov    BYTE PTR [r14+0x44],al
  433411:	mov    ecx,DWORD PTR [rsp+0x14]
  433415:	cmp    ecx,0x28
  433418:	jb     433427 <strcmp@plt+0x2fc9f>
  43341a:	add    QWORD PTR [rsp+0x38],0x28
  433420:	add    ecx,0xffffffd8
  433423:	mov    DWORD PTR [rsp+0x14],ecx
  433427:	cmp    al,0x6
  433429:	je     43342f <strcmp@plt+0x2fca7>
  43342b:	cmp    al,0x11
  43342d:	jne    433470 <strcmp@plt+0x2fce8>
  43342f:	mov    rax,QWORD PTR [rsp+0x38]
  433434:	movzx  ecx,WORD PTR [rax]
  433437:	movbe  WORD PTR [r14+0x40],cx
  43343e:	movzx  eax,WORD PTR [rax+0x2]
  433442:	movbe  WORD PTR [r14+0x42],ax
  433449:	jmp    433478 <strcmp@plt+0x2fcf0>
  43344b:	lea    rax,[rip+0x3195e]        # 464db0 <strcmp@plt+0x61628>
  433452:	xor    ebx,ebx
  433454:	cmp    DWORD PTR [rax],0x2
  433457:	jl     43347d <strcmp@plt+0x2fcf5>
  433459:	lea    rsi,[rip+0x1942b]        # 44c88b <strcmp@plt+0x49103>
  433460:	xor    ebx,ebx
  433462:	mov    edi,0x6
  433467:	xor    eax,eax
  433469:	call   42e800 <strcmp@plt+0x2b078>
  43346e:	jmp    43347d <strcmp@plt+0x2fcf5>
  433470:	mov    DWORD PTR [r14+0x40],0x0
  433478:	mov    ebx,0x1
  43347d:	mov    eax,ebx
  43347f:	add    rsp,0x40
  433483:	pop    rbx
  433484:	pop    r14
  433486:	pop    r15
  433488:	ret    
  433489:	nop    DWORD PTR [rax+0x0]
  433490:	push   r15
  433492:	push   r14
  433494:	push   rbx
  433495:	sub    rsp,0x40
  433499:	mov    r14,rsi
  43349c:	vmovups ymm0,YMMWORD PTR [rdi]
  4334a0:	vmovups ymm1,YMMWORD PTR [rdi+0x20]
  4334a5:	vmovups YMMWORD PTR [rsp+0x20],ymm1
  4334ab:	vmovups YMMWORD PTR [rsp],ymm0
  4334b0:	mov    rdi,rsp
  4334b3:	vzeroupper 
  4334b6:	call   42e5e0 <strcmp@plt+0x2ae58>
  4334bb:	xor    ebx,ebx
  4334bd:	cmp    eax,0x1
  4334c0:	jne    4335ed <strcmp@plt+0x2fe65>
  4334c6:	movzx  eax,WORD PTR [rsp+0x20]
  4334cb:	mov    rcx,QWORD PTR [rsp+0x30]
  4334d0:	add    rcx,rax
  4334d3:	xor    ebx,ebx
  4334d5:	cmp    rax,0xffff
  4334db:	cmovne rbx,rcx
  4334df:	mov    esi,0x1
  4334e4:	mov    rdi,r14
  4334e7:	call   4231a0 <strcmp@plt+0x1fa18>
  4334ec:	lea    r15,[r14+0x20]
  4334f0:	mov    esi,0x1
  4334f5:	mov    rdi,r15
  4334f8:	call   4231a0 <strcmp@plt+0x1fa18>
  4334fd:	mov    al,BYTE PTR [rbx]
  4334ff:	shr    al,0x4
  433502:	cmp    al,0x6
  433504:	je     433558 <strcmp@plt+0x2fdd0>
  433506:	cmp    al,0x4
  433508:	jne    4335bb <strcmp@plt+0x2fe33>
  43350e:	lea    rsi,[rbx+0xc]
  433512:	mov    edx,0x2
  433517:	mov    rdi,r14
  43351a:	call   423b50 <strcmp@plt+0x203c8>
  43351f:	lea    rsi,[rbx+0x10]
  433523:	mov    edx,0x2
  433528:	mov    rdi,r15
  43352b:	call   423b50 <strcmp@plt+0x203c8>
  433530:	mov    al,BYTE PTR [rbx+0x9]
  433533:	mov    BYTE PTR [r14+0x44],al
  433537:	movzx  ecx,BYTE PTR [rbx]
  43353a:	shl    rcx,0x2
  43353e:	and    ecx,0x3c
  433541:	mov    edx,DWORD PTR [rsp+0x14]
  433545:	sub    edx,ecx
  433547:	jb     433597 <strcmp@plt+0x2fe0f>
  433549:	add    QWORD PTR [rsp+0x38],rcx
  43354e:	mov    DWORD PTR [rsp+0x14],edx
  433552:	cmp    al,0x6
  433554:	jne    43359b <strcmp@plt+0x2fe13>
  433556:	jmp    43359f <strcmp@plt+0x2fe17>
  433558:	lea    rsi,[rbx+0x8]
  43355c:	mov    edx,0xa
  433561:	mov    rdi,r14
  433564:	call   423b50 <strcmp@plt+0x203c8>
  433569:	lea    rsi,[rbx+0x18]
  43356d:	mov    edx,0xa
  433572:	mov    rdi,r15
  433575:	call   423b50 <strcmp@plt+0x203c8>
  43357a:	mov    al,BYTE PTR [rbx+0x6]
  43357d:	mov    BYTE PTR [r14+0x44],al
  433581:	mov    ecx,DWORD PTR [rsp+0x14]
  433585:	cmp    ecx,0x28
  433588:	jb     433597 <strcmp@plt+0x2fe0f>
  43358a:	add    QWORD PTR [rsp+0x38],0x28
  433590:	add    ecx,0xffffffd8
  433593:	mov    DWORD PTR [rsp+0x14],ecx
  433597:	cmp    al,0x6
  433599:	je     43359f <strcmp@plt+0x2fe17>
  43359b:	cmp    al,0x11
  43359d:	jne    4335e0 <strcmp@plt+0x2fe58>
  43359f:	mov    rax,QWORD PTR [rsp+0x38]
  4335a4:	movzx  ecx,WORD PTR [rax]
  4335a7:	movbe  WORD PTR [r14+0x40],cx
  4335ae:	movzx  eax,WORD PTR [rax+0x2]
  4335b2:	movbe  WORD PTR [r14+0x42],ax
  4335b9:	jmp    4335e8 <strcmp@plt+0x2fe60>
  4335bb:	lea    rax,[rip+0x317ee]        # 464db0 <strcmp@plt+0x61628>
  4335c2:	xor    ebx,ebx
  4335c4:	cmp    DWORD PTR [rax],0x2
  4335c7:	jl     4335ed <strcmp@plt+0x2fe65>
  4335c9:	lea    rsi,[rip+0x192e0]        # 44c8b0 <strcmp@plt+0x49128>
  4335d0:	xor    ebx,ebx
  4335d2:	mov    edi,0x6
  4335d7:	xor    eax,eax
  4335d9:	call   42e800 <strcmp@plt+0x2b078>
  4335de:	jmp    4335ed <strcmp@plt+0x2fe65>
  4335e0:	mov    DWORD PTR [r14+0x40],0x0
  4335e8:	mov    ebx,0x1
  4335ed:	mov    eax,ebx
  4335ef:	add    rsp,0x40
  4335f3:	pop    rbx
  4335f4:	pop    r14
  4335f6:	pop    r15
  4335f8:	ret    
  4335f9:	nop    DWORD PTR [rax+0x0]
  433600:	push   rbx
  433601:	mov    al,BYTE PTR [rdi]
  433603:	shr    al,0x4
  433606:	cmp    al,0x4
  433608:	je     433615 <strcmp@plt+0x2fe8d>
  43360a:	cmp    al,0x6
  43360c:	jne    43361c <strcmp@plt+0x2fe94>
  43360e:	mov    ebx,0xa
  433613:	jmp    43363f <strcmp@plt+0x2feb7>
  433615:	mov    ebx,0x2
  43361a:	jmp    43363f <strcmp@plt+0x2feb7>
  43361c:	lea    rax,[rip+0x3178d]        # 464db0 <strcmp@plt+0x61628>
  433623:	xor    ebx,ebx
  433625:	cmp    DWORD PTR [rax],0x2
  433628:	jl     43363f <strcmp@plt+0x2feb7>
  43362a:	lea    rsi,[rip+0x192aa]        # 44c8db <strcmp@plt+0x49153>
  433631:	xor    ebx,ebx
  433633:	mov    edi,0x6
  433638:	xor    eax,eax
  43363a:	call   42e800 <strcmp@plt+0x2b078>
  43363f:	mov    eax,ebx
  433641:	pop    rbx
  433642:	ret    
  433643:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43364d:	nop    DWORD PTR [rax]
  433650:	push   rbp
  433651:	push   r14
  433653:	push   rbx
  433654:	mov    r14,rdi
  433657:	mov    ebp,DWORD PTR [rdi+0x40]
  43365a:	call   423200 <strcmp@plt+0x1fa78>
  43365f:	movzx  eax,ax
  433662:	cmp    eax,0xa
  433665:	je     4336ae <strcmp@plt+0x2ff26>
  433667:	cmp    eax,0x2
  43366a:	jne    4336f2 <strcmp@plt+0x2ff6a>
  433670:	mov    edi,0x14
  433675:	call   4320b0 <strcmp@plt+0x2e928>
  43367a:	mov    rbx,rax
  43367d:	mov    rdi,rax
  433680:	mov    rsi,r14
  433683:	call   423780 <strcmp@plt+0x1fff8>
  433688:	lea    rdi,[rbx+0x4]
  43368c:	lea    rsi,[r14+0x20]
  433690:	call   423780 <strcmp@plt+0x1fff8>
  433695:	mov    DWORD PTR [rbx+0x8],ebp
  433698:	movzx  eax,BYTE PTR [r14+0x44]
  43369d:	mov    DWORD PTR [rbx+0xc],eax
  4336a0:	mov    rax,rbx
  4336a3:	add    rax,0x10
  4336a7:	mov    esi,0x5
  4336ac:	jmp    4336ea <strcmp@plt+0x2ff62>
  4336ae:	mov    edi,0x2c
  4336b3:	call   4320b0 <strcmp@plt+0x2e928>
  4336b8:	mov    rbx,rax
  4336bb:	mov    rdi,rax
  4336be:	mov    rsi,r14
  4336c1:	call   423780 <strcmp@plt+0x1fff8>
  4336c6:	lea    rdi,[rbx+0x10]
  4336ca:	lea    rsi,[r14+0x20]
  4336ce:	call   423780 <strcmp@plt+0x1fff8>
  4336d3:	mov    DWORD PTR [rbx+0x20],ebp
  4336d6:	movzx  eax,BYTE PTR [r14+0x44]
  4336db:	mov    DWORD PTR [rbx+0x24],eax
  4336de:	mov    rax,rbx
  4336e1:	add    rax,0x28
  4336e5:	mov    esi,0xb
  4336ea:	mov    ecx,DWORD PTR [r14+0x48]
  4336ee:	mov    DWORD PTR [rax],ecx
  4336f0:	jmp    4336f6 <strcmp@plt+0x2ff6e>
  4336f2:	xor    esi,esi
  4336f4:	xor    ebx,ebx
  4336f6:	mov    edx,0x7dd
  4336fb:	mov    rdi,rbx
  4336fe:	call   432bf0 <strcmp@plt+0x2f468>
  433703:	mov    ebp,eax
  433705:	mov    rdi,rbx
  433708:	call   403780 <free@plt>
  43370d:	mov    eax,ebp
  43370f:	pop    rbx
  433710:	pop    r14
  433712:	pop    rbp
  433713:	ret    
  433714:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43371e:	xchg   ax,ax
  433720:	push   rbp
  433721:	push   r15
  433723:	push   r14
  433725:	push   rbx
  433726:	push   rax
  433727:	mov    r14,rsi
  43372a:	mov    r15,rdi
  43372d:	call   423200 <strcmp@plt+0x1fa78>
  433732:	movzx  eax,ax
  433735:	cmp    eax,0xa
  433738:	je     43376a <strcmp@plt+0x2ffe2>
  43373a:	cmp    eax,0x2
  43373d:	jne    433798 <strcmp@plt+0x30010>
  43373f:	mov    edi,0x8
  433744:	call   4320b0 <strcmp@plt+0x2e928>
  433749:	mov    rbx,rax
  43374c:	mov    rdi,rax
  43374f:	mov    rsi,r15
  433752:	call   423780 <strcmp@plt+0x1fff8>
  433757:	lea    rdi,[rbx+0x4]
  43375b:	mov    rsi,r14
  43375e:	call   423780 <strcmp@plt+0x1fff8>
  433763:	mov    esi,0x2
  433768:	jmp    433793 <strcmp@plt+0x3000b>
  43376a:	mov    edi,0x20
  43376f:	call   4320b0 <strcmp@plt+0x2e928>
  433774:	mov    rbx,rax
  433777:	mov    rdi,rax
  43377a:	mov    rsi,r15
  43377d:	call   423780 <strcmp@plt+0x1fff8>
  433782:	lea    rdi,[rbx+0x10]
  433786:	mov    rsi,r14
  433789:	call   423780 <strcmp@plt+0x1fff8>
  43378e:	mov    esi,0x8
  433793:	mov    rdi,rbx
  433796:	jmp    43379e <strcmp@plt+0x30016>
  433798:	xor    esi,esi
  43379a:	xor    ebx,ebx
  43379c:	xor    edi,edi
  43379e:	mov    edx,0x7dd
  4337a3:	call   432bf0 <strcmp@plt+0x2f468>
  4337a8:	mov    ebp,eax
  4337aa:	mov    rdi,rbx
  4337ad:	call   403780 <free@plt>
  4337b2:	mov    eax,ebp
  4337b4:	add    rsp,0x8
  4337b8:	pop    rbx
  4337b9:	pop    r14
  4337bb:	pop    r15
  4337bd:	pop    rbp
  4337be:	ret    
  4337bf:	nop
  4337c0:	push   rbp
  4337c1:	push   r14
  4337c3:	push   rbx
  4337c4:	movzx  eax,WORD PTR [rdi+0x40]
  4337c8:	xor    r14d,r14d
  4337cb:	cmp    ax,WORD PTR [rsi+0x40]
  4337cf:	jne    43380e <strcmp@plt+0x30086>
  4337d1:	mov    rbx,rsi
  4337d4:	mov    rbp,rdi
  4337d7:	movzx  eax,WORD PTR [rdi+0x42]
  4337db:	cmp    ax,WORD PTR [rsi+0x42]
  4337df:	jne    43380e <strcmp@plt+0x30086>
  4337e1:	mov    rdi,rbp
  4337e4:	mov    rsi,rbx
  4337e7:	call   423970 <strcmp@plt+0x201e8>
  4337ec:	test   eax,eax
  4337ee:	jne    43380e <strcmp@plt+0x30086>
  4337f0:	lea    rdi,[rbp+0x20]
  4337f4:	lea    rsi,[rbx+0x20]
  4337f8:	call   423970 <strcmp@plt+0x201e8>
  4337fd:	test   eax,eax
  4337ff:	jne    43380e <strcmp@plt+0x30086>
  433801:	mov    eax,DWORD PTR [rbp+0x48]
  433804:	xor    r14d,r14d
  433807:	cmp    eax,DWORD PTR [rbx+0x48]
  43380a:	sete   r14b
  43380e:	mov    eax,r14d
  433811:	pop    rbx
  433812:	pop    r14
  433814:	pop    rbp
  433815:	ret    
  433816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433820:	push   r14
  433822:	push   rbx
  433823:	push   rax
  433824:	mov    r14,rdi
  433827:	mov    edi,0x50
  43382c:	call   432070 <strcmp@plt+0x2e8e8>
  433831:	mov    rbx,rax
  433834:	movzx  eax,WORD PTR [r14+0x40]
  433839:	mov    WORD PTR [rbx+0x40],ax
  43383d:	movzx  eax,WORD PTR [r14+0x42]
  433842:	mov    WORD PTR [rbx+0x42],ax
  433846:	mov    al,BYTE PTR [r14+0x44]
  43384a:	mov    BYTE PTR [rbx+0x44],al
  43384d:	mov    rdi,rbx
  433850:	mov    rsi,r14
  433853:	call   423560 <strcmp@plt+0x1fdd8>
  433858:	lea    rdi,[rbx+0x20]
  43385c:	lea    rsi,[r14+0x20]
  433860:	call   423560 <strcmp@plt+0x1fdd8>
  433865:	mov    eax,DWORD PTR [r14+0x48]
  433869:	mov    DWORD PTR [rbx+0x48],eax
  43386c:	mov    rax,rbx
  43386f:	add    rsp,0x8
  433873:	pop    rbx
  433874:	pop    r14
  433876:	ret    
  433877:	nop    WORD PTR [rax+rax*1+0x0]
  433880:	push   rbx
  433881:	mov    rbx,rdi
  433884:	lea    rdi,[rdi+0x20]
  433888:	call   423c30 <strcmp@plt+0x204a8>
  43388d:	mov    rdi,rbx
  433890:	call   423c30 <strcmp@plt+0x204a8>
  433895:	mov    rdi,rbx
  433898:	pop    rbx
  433899:	jmp    403780 <free@plt>
  43389e:	xchg   ax,ax
  4338a0:	push   r15
  4338a2:	push   r14
  4338a4:	push   r13
  4338a6:	push   r12
  4338a8:	push   rbx
  4338a9:	mov    eax,DWORD PTR [rip+0x3c151]        # 46fa00 <strcmp@plt+0x6c278>
  4338af:	lea    ecx,[rax+0x1]
  4338b2:	shr    ecx,0x1f
  4338b5:	lea    ecx,[rax+rcx*1]
  4338b8:	add    ecx,0x1
  4338bb:	and    ecx,0xfffffffe
  4338be:	neg    ecx
  4338c0:	lea    eax,[rax+rcx*1]
  4338c3:	add    eax,0x1
  4338c6:	mov    DWORD PTR [rip+0x3c134],eax        # 46fa00 <strcmp@plt+0x6c278>
  4338cc:	cdqe   
  4338ce:	imul   rax,rax,0xc8
  4338d5:	lea    r13,[rip+0x3bf94]        # 46f870 <strcmp@plt+0x6c0e8>
  4338dc:	lea    rbx,[rax+r13*1]
  4338e0:	mov    BYTE PTR [rax+r13*1],0x0
  4338e5:	test   rdi,rdi
  4338e8:	je     4339d2 <strcmp@plt+0x3024a>
  4338ee:	mov    r14,rdi
  4338f1:	call   423130 <strcmp@plt+0x1f9a8>
  4338f6:	mov    rcx,rax
  4338f9:	lea    rdx,[rip+0x18ff6]        # 44c8f6 <strcmp@plt+0x4916e>
  433900:	mov    r15d,0xc8
  433906:	mov    esi,0xc8
  43390b:	xor    eax,eax
  43390d:	mov    rdi,rbx
  433910:	call   403620 <snprintf@plt>
  433915:	movsxd rax,DWORD PTR [rip+0x3c0e4]        # 46fa00 <strcmp@plt+0x6c278>
  43391c:	imul   rbx,rax,0xc8
  433923:	add    rbx,r13
  433926:	mov    rdi,rbx
  433929:	call   4031e0 <strlen@plt>
  43392e:	add    rbx,rax
  433931:	mov    r12d,0xc8
  433937:	sub    r12,rax
  43393a:	lea    rdi,[r14+0x20]
  43393e:	call   423130 <strcmp@plt+0x1f9a8>
  433943:	mov    rcx,rax
  433946:	lea    rdx,[rip+0x18fb8]        # 44c905 <strcmp@plt+0x4917d>
  43394d:	xor    eax,eax
  43394f:	mov    rdi,rbx
  433952:	mov    rsi,r12
  433955:	call   403620 <snprintf@plt>
  43395a:	movsxd rax,DWORD PTR [rip+0x3c09f]        # 46fa00 <strcmp@plt+0x6c278>
  433961:	imul   rbx,rax,0xc8
  433968:	add    rbx,r13
  43396b:	mov    rdi,rbx
  43396e:	call   4031e0 <strlen@plt>
  433973:	add    rbx,rax
  433976:	sub    r15,rax
  433979:	lea    rdx,[rip+0x18f94]        # 44c914 <strcmp@plt+0x4918c>
  433980:	xor    eax,eax
  433982:	mov    rdi,rbx
  433985:	mov    rsi,r15
  433988:	call   403620 <snprintf@plt>
  43398d:	movzx  ebx,BYTE PTR [r14+0x44]
  433992:	cmp    ebx,0x1
  433995:	je     4339e7 <strcmp@plt+0x3025f>
  433997:	cmp    bl,0x6
  43399a:	je     433a14 <strcmp@plt+0x3028c>
  43399c:	cmp    bl,0x11
  43399f:	jne    433a4b <strcmp@plt+0x302c3>
  4339a5:	movsxd rax,DWORD PTR [rip+0x3c054]        # 46fa00 <strcmp@plt+0x6c278>
  4339ac:	imul   rbx,rax,0xc8
  4339b3:	add    rbx,r13
  4339b6:	mov    rdi,rbx
  4339b9:	call   4031e0 <strlen@plt>
  4339be:	add    rbx,rax
  4339c1:	mov    esi,0xc8
  4339c6:	sub    rsi,rax
  4339c9:	lea    rdx,[rip+0x18f4c]        # 44c91c <strcmp@plt+0x49194>
  4339d0:	jmp    433a3f <strcmp@plt+0x302b7>
  4339d2:	mov    BYTE PTR [rbx+0x6],0x0
  4339d6:	mov    WORD PTR [rbx+0x4],0x5f4c
  4339dc:	mov    DWORD PTR [rbx],0x4c554e5f
  4339e2:	jmp    433b44 <strcmp@plt+0x303bc>
  4339e7:	movsxd rax,DWORD PTR [rip+0x3c012]        # 46fa00 <strcmp@plt+0x6c278>
  4339ee:	imul   rbx,rax,0xc8
  4339f5:	add    rbx,r13
  4339f8:	mov    rdi,rbx
  4339fb:	call   4031e0 <strlen@plt>
  433a00:	add    rbx,rax
  433a03:	mov    esi,0xc8
  433a08:	sub    rsi,rax
  433a0b:	lea    rdx,[rip+0x18f16]        # 44c928 <strcmp@plt+0x491a0>
  433a12:	jmp    433a3f <strcmp@plt+0x302b7>
  433a14:	movsxd rax,DWORD PTR [rip+0x3bfe5]        # 46fa00 <strcmp@plt+0x6c278>
  433a1b:	imul   rbx,rax,0xc8
  433a22:	add    rbx,r13
  433a25:	mov    rdi,rbx
  433a28:	call   4031e0 <strlen@plt>
  433a2d:	add    rbx,rax
  433a30:	mov    esi,0xc8
  433a35:	sub    rsi,rax
  433a38:	lea    rdx,[rip+0x18ee3]        # 44c922 <strcmp@plt+0x4919a>
  433a3f:	xor    eax,eax
  433a41:	mov    rdi,rbx
  433a44:	call   403620 <snprintf@plt>
  433a49:	jmp    433a82 <strcmp@plt+0x302fa>
  433a4b:	movsxd rax,DWORD PTR [rip+0x3bfae]        # 46fa00 <strcmp@plt+0x6c278>
  433a52:	imul   r15,rax,0xc8
  433a59:	add    r15,r13
  433a5c:	mov    rdi,r15
  433a5f:	call   4031e0 <strlen@plt>
  433a64:	add    r15,rax
  433a67:	mov    esi,0xc8
  433a6c:	sub    rsi,rax
  433a6f:	lea    rdx,[rip+0x18ec3]        # 44c939 <strcmp@plt+0x491b1>
  433a76:	xor    eax,eax
  433a78:	mov    rdi,r15
  433a7b:	mov    ecx,ebx
  433a7d:	call   403620 <snprintf@plt>
  433a82:	movsxd rax,DWORD PTR [rip+0x3bf77]        # 46fa00 <strcmp@plt+0x6c278>
  433a89:	imul   rbx,rax,0xc8
  433a90:	add    rbx,r13
  433a93:	mov    rdi,rbx
  433a96:	call   4031e0 <strlen@plt>
  433a9b:	add    rbx,rax
  433a9e:	mov    r15d,0xc8
  433aa4:	mov    esi,0xc8
  433aa9:	sub    rsi,rax
  433aac:	movzx  ecx,WORD PTR [r14+0x40]
  433ab1:	lea    rdx,[rip+0x18e77]        # 44c92f <strcmp@plt+0x491a7>
  433ab8:	xor    eax,eax
  433aba:	mov    rdi,rbx
  433abd:	call   403620 <snprintf@plt>
  433ac2:	movsxd rax,DWORD PTR [rip+0x3bf37]        # 46fa00 <strcmp@plt+0x6c278>
  433ac9:	imul   rbx,rax,0xc8
  433ad0:	add    rbx,r13
  433ad3:	mov    rdi,rbx
  433ad6:	call   4031e0 <strlen@plt>
  433adb:	add    rbx,rax
  433ade:	mov    esi,0xc8
  433ae3:	sub    rsi,rax
  433ae6:	movzx  ecx,WORD PTR [r14+0x42]
  433aeb:	lea    rdx,[rip+0x18e4c]        # 44c93e <strcmp@plt+0x491b6>
  433af2:	xor    eax,eax
  433af4:	mov    rdi,rbx
  433af7:	call   403620 <snprintf@plt>
  433afc:	movsxd rax,DWORD PTR [rip+0x3befd]        # 46fa00 <strcmp@plt+0x6c278>
  433b03:	imul   rbx,rax,0xc8
  433b0a:	add    rbx,r13
  433b0d:	mov    rdi,rbx
  433b10:	call   4031e0 <strlen@plt>
  433b15:	add    rbx,rax
  433b18:	sub    r15,rax
  433b1b:	mov    ecx,DWORD PTR [r14+0x48]
  433b1f:	lea    rdx,[rip+0x18e26]        # 44c94c <strcmp@plt+0x491c4>
  433b26:	xor    eax,eax
  433b28:	mov    rdi,rbx
  433b2b:	mov    rsi,r15
  433b2e:	call   403620 <snprintf@plt>
  433b33:	movsxd rax,DWORD PTR [rip+0x3bec6]        # 46fa00 <strcmp@plt+0x6c278>
  433b3a:	imul   rbx,rax,0xc8
  433b41:	add    rbx,r13
  433b44:	mov    rax,rbx
  433b47:	pop    rbx
  433b48:	pop    r12
  433b4a:	pop    r13
  433b4c:	pop    r14
  433b4e:	pop    r15
  433b50:	ret    
  433b51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  433b60:	xor    eax,eax
  433b62:	cmp    BYTE PTR [rdi+0x44],0x11
  433b66:	jne    433b95 <strcmp@plt+0x3040d>
  433b68:	movzx  ecx,WORD PTR [rdi+0x42]
  433b6c:	cmp    ecx,0x10f6
  433b72:	jne    433b7a <strcmp@plt+0x303f2>
  433b74:	mov    eax,0x1
  433b79:	ret    
  433b7a:	movzx  ecx,cx
  433b7d:	cmp    ecx,0x10f5
  433b83:	je     433b74 <strcmp@plt+0x303ec>
  433b85:	mov    ecx,0xffffef0b
  433b8a:	add    ecx,DWORD PTR [rdi+0x40]
  433b8d:	movzx  ecx,cx
  433b90:	cmp    ecx,0x1
  433b93:	jbe    433b74 <strcmp@plt+0x303ec>
  433b95:	ret    
  433b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433ba0:	push   rbx
  433ba1:	mov    rbx,rdi
  433ba4:	mov    cl,BYTE PTR [rdi]
  433ba6:	shr    cl,0x4
  433ba9:	cmp    cl,0x6
  433bac:	je     433bd9 <strcmp@plt+0x30451>
  433bae:	xor    eax,eax
  433bb0:	cmp    cl,0x4
  433bb3:	jne    433bfc <strcmp@plt+0x30474>
  433bb5:	test   esi,esi
  433bb7:	je     433bbd <strcmp@plt+0x30435>
  433bb9:	mov    BYTE PTR [rbx+0x8],sil
  433bbd:	mov    BYTE PTR [rbx+0x1],dl
  433bc0:	mov    WORD PTR [rbx+0xa],0x0
  433bc6:	mov    esi,0x14
  433bcb:	mov    rdi,rbx
  433bce:	call   42b440 <strcmp@plt+0x27cb8>
  433bd3:	mov    WORD PTR [rbx+0xa],ax
  433bd7:	jmp    433bf7 <strcmp@plt+0x3046f>
  433bd9:	test   esi,esi
  433bdb:	je     433be1 <strcmp@plt+0x30459>
  433bdd:	mov    BYTE PTR [rbx+0x7],sil
  433be1:	mov    eax,0xffff0ff0
  433be6:	and    eax,DWORD PTR [rbx]
  433be8:	shl    edx,0x14
  433beb:	and    edx,0xff00000
  433bf1:	bswap  edx
  433bf3:	or     edx,eax
  433bf5:	mov    DWORD PTR [rbx],edx
  433bf7:	mov    eax,0x1
  433bfc:	pop    rbx
  433bfd:	ret    
  433bfe:	xchg   ax,ax
  433c00:	mov    cl,BYTE PTR [rdi]
  433c02:	shr    cl,0x4
  433c05:	cmp    cl,0x6
  433c08:	je     433c1f <strcmp@plt+0x30497>
  433c0a:	xor    eax,eax
  433c0c:	cmp    cl,0x4
  433c0f:	jne    433c3a <strcmp@plt+0x304b2>
  433c11:	movzx  eax,BYTE PTR [rdi+0x1]
  433c15:	mov    DWORD PTR [rdx],eax
  433c17:	movzx  eax,BYTE PTR [rdi+0x8]
  433c1b:	mov    DWORD PTR [rsi],eax
  433c1d:	jmp    433c35 <strcmp@plt+0x304ad>
  433c1f:	movzx  eax,BYTE PTR [rdi+0x7]
  433c23:	mov    DWORD PTR [rsi],eax
  433c25:	movbe  eax,DWORD PTR [rdi]
  433c29:	mov    ecx,0x814
  433c2e:	bextr  eax,eax,ecx
  433c33:	mov    DWORD PTR [rdx],eax
  433c35:	mov    eax,0x1
  433c3a:	ret    
  433c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  433c40:	push   rbp
  433c41:	push   r15
  433c43:	push   r14
  433c45:	push   rbx
  433c46:	push   rax
  433c47:	mov    ebp,ecx
  433c49:	mov    r14,rdx
  433c4c:	mov    r15,rsi
  433c4f:	mov    rbx,rdi
  433c52:	mov    rdi,rsi
  433c55:	call   423200 <strcmp@plt+0x1fa78>
  433c5a:	movzx  eax,ax
  433c5d:	cmp    eax,0xa
  433c60:	je     433cce <strcmp@plt+0x30546>
  433c62:	cmp    eax,0x2
  433c65:	jne    433d09 <strcmp@plt+0x30581>
  433c6b:	mov    WORD PTR [rbx],0x45
  433c70:	add    ebp,0x14
  433c73:	movbe  WORD PTR [rbx+0x2],bp
  433c79:	lea    rax,[rip+0x3bbe0]        # 46f860 <strcmp@plt+0x6c0d8>
  433c80:	movzx  ecx,WORD PTR [rax]
  433c83:	add    ecx,0x1
  433c86:	mov    WORD PTR [rax],cx
  433c89:	movbe  WORD PTR [rbx+0x4],cx
  433c8f:	mov    DWORD PTR [rbx+0x6],0x11ff0000
  433c96:	mov    rdi,r15
  433c99:	call   423d50 <strcmp@plt+0x205c8>
  433c9e:	mov    eax,DWORD PTR [rax]
  433ca0:	mov    DWORD PTR [rbx+0xc],eax
  433ca3:	mov    rdi,r14
  433ca6:	call   423d50 <strcmp@plt+0x205c8>
  433cab:	mov    eax,DWORD PTR [rax]
  433cad:	mov    DWORD PTR [rbx+0x10],eax
  433cb0:	mov    WORD PTR [rbx+0xa],0x0
  433cb6:	mov    esi,0x14
  433cbb:	mov    rdi,rbx
  433cbe:	call   42b440 <strcmp@plt+0x27cb8>
  433cc3:	mov    WORD PTR [rbx+0xa],ax
  433cc7:	mov    eax,0x14
  433ccc:	jmp    433d04 <strcmp@plt+0x3057c>
  433cce:	mov    BYTE PTR [rbx],0x60
  433cd1:	mov    WORD PTR [rbx+0x6],0xff11
  433cd7:	movbe  WORD PTR [rbx+0x4],bp
  433cdd:	mov    rdi,r15
  433ce0:	call   423d60 <strcmp@plt+0x205d8>
  433ce5:	vmovups xmm0,XMMWORD PTR [rax]
  433ce9:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  433cee:	mov    rdi,r14
  433cf1:	call   423d60 <strcmp@plt+0x205d8>
  433cf6:	vmovups xmm0,XMMWORD PTR [rax]
  433cfa:	vmovups XMMWORD PTR [rbx+0x18],xmm0
  433cff:	mov    eax,0x28
  433d04:	add    rbx,rax
  433d07:	jmp    433d39 <strcmp@plt+0x305b1>
  433d09:	lea    rax,[rip+0x310a0]        # 464db0 <strcmp@plt+0x61628>
  433d10:	cmp    DWORD PTR [rax],0x2
  433d13:	jge    433d19 <strcmp@plt+0x30591>
  433d15:	xor    ebx,ebx
  433d17:	jmp    433d39 <strcmp@plt+0x305b1>
  433d19:	mov    rdi,r15
  433d1c:	call   423200 <strcmp@plt+0x1fa78>
  433d21:	movzx  edx,ax
  433d24:	lea    rsi,[rip+0x18c2e]        # 44c959 <strcmp@plt+0x491d1>
  433d2b:	xor    ebx,ebx
  433d2d:	mov    edi,0x6
  433d32:	xor    eax,eax
  433d34:	call   42e800 <strcmp@plt+0x2b078>
  433d39:	mov    rax,rbx
  433d3c:	add    rsp,0x8
  433d40:	pop    rbx
  433d41:	pop    r14
  433d43:	pop    r15
  433d45:	pop    rbp
  433d46:	ret    
  433d47:	nop    WORD PTR [rax+rax*1+0x0]
  433d50:	push   rbp
  433d51:	push   r15
  433d53:	push   r14
  433d55:	push   r13
  433d57:	push   r12
  433d59:	push   rbx
  433d5a:	sub    rsp,0x18
  433d5e:	mov    r14d,r9d
  433d61:	mov    DWORD PTR [rsp+0xc],r8d
  433d66:	mov    r15,rcx
  433d69:	mov    rbx,rdx
  433d6c:	mov    r13d,esi
  433d6f:	mov    r12,rdi
  433d72:	mov    rdi,rdx
  433d75:	call   423200 <strcmp@plt+0x1fa78>
  433d7a:	mov    ebp,eax
  433d7c:	mov    rdi,r15
  433d7f:	call   423200 <strcmp@plt+0x1fa78>
  433d84:	cmp    bp,ax
  433d87:	jne    433e85 <strcmp@plt+0x306fd>
  433d8d:	mov    rdi,rbx
  433d90:	call   423200 <strcmp@plt+0x1fa78>
  433d95:	movzx  eax,ax
  433d98:	cmp    eax,0x2
  433d9b:	je     433db1 <strcmp@plt+0x30629>
  433d9d:	mov    rdi,rbx
  433da0:	call   423200 <strcmp@plt+0x1fa78>
  433da5:	movzx  eax,ax
  433da8:	cmp    eax,0xa
  433dab:	jne    433f23 <strcmp@plt+0x3079b>
  433db1:	mov    DWORD PTR [rsp+0x8],r14d
  433db6:	mov    rbp,QWORD PTR [rsp+0x50]
  433dbb:	mov    rdi,rbx
  433dbe:	call   423200 <strcmp@plt+0x1fa78>
  433dc3:	movzx  edi,ax
  433dc6:	call   424740 <strcmp@plt+0x20fb8>
  433dcb:	lea    eax,[rax+r13*1]
  433dcf:	add    eax,0x8
  433dd2:	mov    DWORD PTR [rbp+0x0],eax
  433dd5:	movsxd rbp,eax
  433dd8:	mov    rdi,rbp
  433ddb:	call   403510 <malloc@plt>
  433de0:	test   rax,rax
  433de3:	je     433ee9 <strcmp@plt+0x30761>
  433de9:	mov    r14,rax
  433dec:	mov    QWORD PTR [rsp+0x10],r12
  433df1:	lea    r12d,[r13+0x8]
  433df5:	xor    esi,esi
  433df7:	mov    rdi,rax
  433dfa:	mov    rdx,rbp
  433dfd:	call   403260 <memset@plt>
  433e02:	mov    rdi,r14
  433e05:	mov    rsi,rbx
  433e08:	mov    rdx,r15
  433e0b:	mov    ecx,r12d
  433e0e:	call   433c40 <strcmp@plt+0x304b8>
  433e13:	test   rax,rax
  433e16:	je     433f52 <strcmp@plt+0x307ca>
  433e1c:	mov    rbp,rax
  433e1f:	mov    eax,DWORD PTR [rsp+0xc]
  433e23:	movbe  WORD PTR [rbp+0x0],ax
  433e29:	mov    eax,DWORD PTR [rsp+0x8]
  433e2d:	movbe  WORD PTR [rbp+0x2],ax
  433e33:	movbe  WORD PTR [rbp+0x4],r12w
  433e3a:	mov    WORD PTR [rbp+0x6],0x0
  433e40:	mov    rdi,rbp
  433e43:	add    rdi,0x8
  433e47:	movsxd rdx,r13d
  433e4a:	mov    rsi,QWORD PTR [rsp+0x10]
  433e4f:	call   403330 <memcpy@plt>
  433e54:	mov    rdi,rbx
  433e57:	call   423200 <strcmp@plt+0x1fa78>
  433e5c:	movzx  ecx,ax
  433e5f:	mov    rdi,rbp
  433e62:	mov    esi,r12d
  433e65:	mov    rdx,r14
  433e68:	call   42b9a0 <strcmp@plt+0x28218>
  433e6d:	movzx  ecx,ax
  433e70:	cmp    ecx,0xffff
  433e76:	je     433f71 <strcmp@plt+0x307e9>
  433e7c:	mov    WORD PTR [rbp+0x6],ax
  433e80:	jmp    433f7c <strcmp@plt+0x307f4>
  433e85:	lea    rax,[rip+0x30f24]        # 464db0 <strcmp@plt+0x61628>
  433e8c:	cmp    DWORD PTR [rax],0x2
  433e8f:	jl     433f79 <strcmp@plt+0x307f1>
  433e95:	mov    rdi,rbx
  433e98:	call   423200 <strcmp@plt+0x1fa78>
  433e9d:	movzx  r12d,ax
  433ea1:	mov    rdi,rbx
  433ea4:	call   423130 <strcmp@plt+0x1f9a8>
  433ea9:	mov    r13,rax
  433eac:	mov    rdi,r15
  433eaf:	call   423200 <strcmp@plt+0x1fa78>
  433eb4:	movzx  ebp,ax
  433eb7:	mov    rdi,r15
  433eba:	call   423130 <strcmp@plt+0x1f9a8>
  433ebf:	mov    rbx,rax
  433ec2:	lea    rsi,[rip+0x18ac7]        # 44c990 <strcmp@plt+0x49208>
  433ec9:	xor    r14d,r14d
  433ecc:	mov    edi,0x6
  433ed1:	xor    eax,eax
  433ed3:	mov    edx,r12d
  433ed6:	mov    rcx,r13
  433ed9:	mov    r8d,ebp
  433edc:	mov    r9,rbx
  433edf:	call   42e800 <strcmp@plt+0x2b078>
  433ee4:	jmp    433f7c <strcmp@plt+0x307f4>
  433ee9:	lea    rax,[rip+0x30ec0]        # 464db0 <strcmp@plt+0x61628>
  433ef0:	cmp    DWORD PTR [rax],0x2
  433ef3:	jl     433f79 <strcmp@plt+0x307f1>
  433ef9:	call   403040 <__errno_location@plt>
  433efe:	mov    edi,DWORD PTR [rax]
  433f00:	call   403170 <strerror@plt>
  433f05:	mov    rcx,rax
  433f08:	lea    rsi,[rip+0x18ae2]        # 44c9f1 <strcmp@plt+0x49269>
  433f0f:	xor    r14d,r14d
  433f12:	mov    edi,0x6
  433f17:	xor    eax,eax
  433f19:	mov    rdx,rcx
  433f1c:	call   42e800 <strcmp@plt+0x2b078>
  433f21:	jmp    433f7c <strcmp@plt+0x307f4>
  433f23:	lea    rax,[rip+0x30e86]        # 464db0 <strcmp@plt+0x61628>
  433f2a:	cmp    DWORD PTR [rax],0x2
  433f2d:	jl     433f79 <strcmp@plt+0x307f1>
  433f2f:	mov    rdi,rbx
  433f32:	call   423200 <strcmp@plt+0x1fa78>
  433f37:	movzx  edx,ax
  433f3a:	lea    rsi,[rip+0x18a8e]        # 44c9cf <strcmp@plt+0x49247>
  433f41:	xor    r14d,r14d
  433f44:	mov    edi,0x6
  433f49:	xor    eax,eax
  433f4b:	call   42e800 <strcmp@plt+0x2b078>
  433f50:	jmp    433f7c <strcmp@plt+0x307f4>
  433f52:	lea    rax,[rip+0x30e57]        # 464db0 <strcmp@plt+0x61628>
  433f59:	cmp    DWORD PTR [rax],0x2
  433f5c:	jl     433f71 <strcmp@plt+0x307e9>
  433f5e:	lea    rsi,[rip+0x18ada]        # 44ca3f <strcmp@plt+0x492b7>
  433f65:	mov    edi,0x6
  433f6a:	xor    eax,eax
  433f6c:	call   42e800 <strcmp@plt+0x2b078>
  433f71:	mov    rdi,r14
  433f74:	call   403780 <free@plt>
  433f79:	xor    r14d,r14d
  433f7c:	mov    rax,r14
  433f7f:	add    rsp,0x18
  433f83:	pop    rbx
  433f84:	pop    r12
  433f86:	pop    r13
  433f88:	pop    r14
  433f8a:	pop    r15
  433f8c:	pop    rbp
  433f8d:	ret    
  433f8e:	xchg   ax,ax
  433f90:	push   r15
  433f92:	push   r14
  433f94:	push   rbx
  433f95:	mov    r14,rsi
  433f98:	mov    rbx,rdi
  433f9b:	mov    BYTE PTR [rip+0x3ba6e],0x0        # 46fa10 <strcmp@plt+0x6c288>
  433fa2:	mov    al,BYTE PTR [rdi]
  433fa4:	shr    al,0x4
  433fa7:	cmp    al,0x6
  433fa9:	je     433fcb <strcmp@plt+0x30843>
  433fab:	cmp    al,0x4
  433fad:	jne    434001 <strcmp@plt+0x30879>
  433faf:	lea    rdi,[rbx+0xc]
  433fb3:	mov    esi,0x2
  433fb8:	call   423fc0 <strcmp@plt+0x20838>
  433fbd:	mov    r15,rax
  433fc0:	add    rbx,0x10
  433fc4:	mov    esi,0x2
  433fc9:	jmp    433fe5 <strcmp@plt+0x3085d>
  433fcb:	lea    rdi,[rbx+0x8]
  433fcf:	mov    esi,0xa
  433fd4:	call   423fc0 <strcmp@plt+0x20838>
  433fd9:	mov    r15,rax
  433fdc:	add    rbx,0x18
  433fe0:	mov    esi,0xa
  433fe5:	mov    rdi,rbx
  433fe8:	call   423fc0 <strcmp@plt+0x20838>
  433fed:	mov    rcx,rax
  433ff0:	lea    rdi,[rip+0x3ba19]        # 46fa10 <strcmp@plt+0x6c288>
  433ff7:	xor    eax,eax
  433ff9:	mov    rsi,r14
  433ffc:	mov    rdx,r15
  433fff:	jmp    434017 <strcmp@plt+0x3088f>
  434001:	lea    rdi,[rip+0x3ba08]        # 46fa10 <strcmp@plt+0x6c288>
  434008:	lea    rdx,[rip+0x18a66]        # 44ca75 <strcmp@plt+0x492ed>
  43400f:	xor    eax,eax
  434011:	mov    rsi,r14
  434014:	mov    rcx,rdx
  434017:	call   4030b0 <sprintf@plt>
  43401c:	lea    rax,[rip+0x3b9ed]        # 46fa10 <strcmp@plt+0x6c288>
  434023:	pop    rbx
  434024:	pop    r14
  434026:	pop    r15
  434028:	ret    
  434029:	nop    DWORD PTR [rax+0x0]
  434030:	mov    eax,esi
  434032:	bswap  eax
  434034:	mov    ecx,eax
  434036:	mov    BYTE PTR [rdi],ah
  434038:	shr    eax,0x10
  43403b:	shr    ecx,0x18
  43403e:	mov    BYTE PTR [rdi+0x1],al
  434041:	mov    BYTE PTR [rdi+0x2],cl
  434044:	ret    
  434045:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43404f:	nop
  434050:	movzx  eax,BYTE PTR [rdi]
  434053:	shl    eax,0x10
  434056:	movzx  ecx,BYTE PTR [rdi+0x1]
  43405a:	shl    ecx,0x8
  43405d:	or     ecx,eax
  43405f:	movzx  eax,BYTE PTR [rdi+0x2]
  434063:	or     eax,ecx
  434065:	ret    
  434066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434070:	push   rbp
  434071:	push   r15
  434073:	push   r14
  434075:	push   rbx
  434076:	sub    rsp,0x28
  43407a:	xor    ebp,ebp
  43407c:	cmp    DWORD PTR [rsi+0x18],0x2
  434080:	jne    434115 <strcmp@plt+0x3098d>
  434086:	mov    r15,rdi
  434089:	cmp    DWORD PTR [rdi+0x18],0x1
  43408d:	jne    434115 <strcmp@plt+0x3098d>
  434093:	mov    rbx,rsi
  434096:	mov    rdi,r15
  434099:	call   423200 <strcmp@plt+0x1fa78>
  43409e:	mov    r14d,eax
  4340a1:	mov    rdi,rbx
  4340a4:	call   423200 <strcmp@plt+0x1fa78>
  4340a9:	cmp    r14w,ax
  4340ad:	jne    434115 <strcmp@plt+0x3098d>
  4340af:	mov    rdi,rbx
  4340b2:	call   434130 <strcmp@plt+0x309a8>
  4340b7:	mov    r14,rax
  4340ba:	mov    rdi,rbx
  4340bd:	call   4230a0 <strcmp@plt+0x1f918>
  4340c2:	mov    ebx,eax
  4340c4:	lea    rbp,[rsp+0x8]
  4340c9:	mov    rdi,rbp
  4340cc:	mov    rsi,r15
  4340cf:	call   423560 <strcmp@plt+0x1fdd8>
  4340d4:	mov    rdi,rbp
  4340d7:	call   4231b0 <strcmp@plt+0x1fa28>
  4340dc:	movzx  esi,bl
  4340df:	mov    rdi,rbp
  4340e2:	call   423480 <strcmp@plt+0x1fcf8>
  4340e7:	mov    rdi,rbp
  4340ea:	call   434130 <strcmp@plt+0x309a8>
  4340ef:	mov    rbx,rax
  4340f2:	mov    rdi,rax
  4340f5:	mov    rsi,r14
  4340f8:	call   423970 <strcmp@plt+0x201e8>
  4340fd:	xor    ebp,ebp
  4340ff:	test   eax,eax
  434101:	sete   bpl
  434105:	mov    rdi,r14
  434108:	call   422fa0 <strcmp@plt+0x1f818>
  43410d:	mov    rdi,rbx
  434110:	call   422fa0 <strcmp@plt+0x1f818>
  434115:	mov    eax,ebp
  434117:	add    rsp,0x28
  43411b:	pop    rbx
  43411c:	pop    r14
  43411e:	pop    r15
  434120:	pop    rbp
  434121:	ret    
  434122:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43412c:	nop    DWORD PTR [rax+0x0]
  434130:	push   rbp
  434131:	push   r14
  434133:	push   rbx
  434134:	sub    rsp,0x20
  434138:	mov    rbx,rdi
  43413b:	cmp    DWORD PTR [rdi+0x18],0x2
  43413f:	jne    4341a0 <strcmp@plt+0x30a18>
  434141:	mov    rdi,rbx
  434144:	call   423200 <strcmp@plt+0x1fa78>
  434149:	movzx  eax,ax
  43414c:	cmp    eax,0xa
  43414f:	je     4341d8 <strcmp@plt+0x30a50>
  434155:	cmp    eax,0x2
  434158:	jne    43426b <strcmp@plt+0x30ae3>
  43415e:	mov    rdi,rbx
  434161:	call   4230a0 <strcmp@plt+0x1f918>
  434166:	mov    ebp,eax
  434168:	mov    rdi,rbx
  43416b:	call   423370 <strcmp@plt+0x1fbe8>
  434170:	mov    rdi,rax
  434173:	call   423d50 <strcmp@plt+0x205c8>
  434178:	mov    eax,DWORD PTR [rax]
  43417a:	movbe  DWORD PTR [rsp],eax
  43417f:	bswap  eax
  434181:	test   bp,bp
  434184:	je     43429d <strcmp@plt+0x30b15>
  43418a:	mov    ecx,0x20
  43418f:	sub    ecx,ebp
  434191:	mov    edx,0xffffffff
  434196:	shlx   ebp,edx,ecx
  43419b:	jmp    43429f <strcmp@plt+0x30b17>
  4341a0:	lea    rax,[rip+0x30c09]        # 464db0 <strcmp@plt+0x61628>
  4341a7:	cmp    DWORD PTR [rax],0x2
  4341aa:	jl     434277 <strcmp@plt+0x30aef>
  4341b0:	mov    rdi,rbx
  4341b3:	call   423130 <strcmp@plt+0x1f9a8>
  4341b8:	mov    rcx,rax
  4341bb:	lea    rsi,[rip+0x188ba]        # 44ca7c <strcmp@plt+0x492f4>
  4341c2:	xor    ebx,ebx
  4341c4:	mov    edi,0x6
  4341c9:	xor    eax,eax
  4341cb:	mov    rdx,rcx
  4341ce:	call   42e800 <strcmp@plt+0x2b078>
  4341d3:	jmp    4342c6 <strcmp@plt+0x30b3e>
  4341d8:	vxorps xmm0,xmm0,xmm0
  4341dc:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  4341e2:	mov    rdi,rbx
  4341e5:	call   4230a0 <strcmp@plt+0x1f918>
  4341ea:	mov    ebp,eax
  4341ec:	movzx  edx,ax
  4341ef:	mov    r14,rdx
  4341f2:	shr    r14,0x3
  4341f6:	and    ebp,0x7
  4341f9:	test   r14d,r14d
  4341fc:	je     434210 <strcmp@plt+0x30a88>
  4341fe:	shr    edx,0x3
  434201:	lea    rdi,[rsp+0x10]
  434206:	mov    esi,0xff
  43420b:	call   403260 <memset@plt>
  434210:	test   ebp,ebp
  434212:	je     43422a <strcmp@plt+0x30aa2>
  434214:	mov    eax,0x8
  434219:	sub    eax,ebp
  43421b:	mov    ecx,0xff
  434220:	shlx   eax,ecx,eax
  434225:	mov    BYTE PTR [rsp+r14*1+0x10],al
  43422a:	mov    rdi,rbx
  43422d:	call   423370 <strcmp@plt+0x1fbe8>
  434232:	mov    rdi,rax
  434235:	call   423d60 <strcmp@plt+0x205d8>
  43423a:	vmovaps xmm0,XMMWORD PTR [rsp+0x10]
  434240:	vandps xmm0,xmm0,XMMWORD PTR [rax]
  434244:	vmovaps XMMWORD PTR [rsp],xmm0
  434249:	mov    edi,0x1
  43424e:	call   422ef0 <strcmp@plt+0x1f768>
  434253:	mov    rbx,rax
  434256:	mov    rdi,rax
  434259:	call   423370 <strcmp@plt+0x1fbe8>
  43425e:	mov    rsi,rsp
  434261:	mov    rdi,rax
  434264:	call   423ee0 <strcmp@plt+0x20758>
  434269:	jmp    4342c6 <strcmp@plt+0x30b3e>
  43426b:	lea    rax,[rip+0x30b3e]        # 464db0 <strcmp@plt+0x61628>
  434272:	cmp    DWORD PTR [rax],0x2
  434275:	jge    43427b <strcmp@plt+0x30af3>
  434277:	xor    ebx,ebx
  434279:	jmp    4342c6 <strcmp@plt+0x30b3e>
  43427b:	mov    rdi,rbx
  43427e:	call   423200 <strcmp@plt+0x1fa78>
  434283:	movzx  edx,ax
  434286:	lea    rsi,[rip+0x18820]        # 44caad <strcmp@plt+0x49325>
  43428d:	xor    ebx,ebx
  43428f:	mov    edi,0x6
  434294:	xor    eax,eax
  434296:	call   42e800 <strcmp@plt+0x2b078>
  43429b:	jmp    4342c6 <strcmp@plt+0x30b3e>
  43429d:	xor    ebp,ebp
  43429f:	and    ebp,eax
  4342a1:	mov    edi,0x1
  4342a6:	call   422ef0 <strcmp@plt+0x1f768>
  4342ab:	mov    rbx,rax
  4342ae:	movbe  DWORD PTR [rsp],ebp
  4342b3:	mov    rdi,rax
  4342b6:	call   423370 <strcmp@plt+0x1fbe8>
  4342bb:	mov    rsi,rsp
  4342be:	mov    rdi,rax
  4342c1:	call   423ed0 <strcmp@plt+0x20748>
  4342c6:	mov    rax,rbx
  4342c9:	add    rsp,0x20
  4342cd:	pop    rbx
  4342ce:	pop    r14
  4342d0:	pop    rbp
  4342d1:	ret    
  4342d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4342dc:	nop    DWORD PTR [rax+0x0]
  4342e0:	push   rbp
  4342e1:	push   r15
  4342e3:	push   r14
  4342e5:	push   r12
  4342e7:	push   rbx
  4342e8:	mov    eax,DWORD PTR [rdi+0x18]
  4342eb:	xor    ebx,ebx
  4342ed:	cmp    eax,DWORD PTR [rsi+0x18]
  4342f0:	jne    43439f <strcmp@plt+0x30c17>
  4342f6:	mov    rbp,rsi
  4342f9:	call   4230e0 <strcmp@plt+0x1f958>
  4342fe:	mov    r15,rax
  434301:	mov    rdi,rbp
  434304:	call   4230e0 <strcmp@plt+0x1f958>
  434309:	test   r15,r15
  43430c:	je     43439f <strcmp@plt+0x30c17>
  434312:	mov    r14,rax
  434315:	test   rax,rax
  434318:	je     43439f <strcmp@plt+0x30c17>
  43431e:	mov    rdi,r15
  434321:	call   423200 <strcmp@plt+0x1fa78>
  434326:	mov    ebp,eax
  434328:	mov    rdi,r14
  43432b:	call   423200 <strcmp@plt+0x1fa78>
  434330:	cmp    bp,ax
  434333:	jne    43439f <strcmp@plt+0x30c17>
  434335:	mov    rdi,r15
  434338:	call   4230a0 <strcmp@plt+0x1f918>
  43433d:	mov    ebp,eax
  43433f:	mov    rdi,r14
  434342:	call   4230a0 <strcmp@plt+0x1f918>
  434347:	cmp    bp,ax
  43434a:	ja     43439f <strcmp@plt+0x30c17>
  43434c:	mov    r12d,eax
  43434f:	mov    rdi,r15
  434352:	call   434130 <strcmp@plt+0x309a8>
  434357:	mov    r15,rax
  43435a:	movzx  esi,bpl
  43435e:	mov    rdi,r14
  434361:	call   423480 <strcmp@plt+0x1fcf8>
  434366:	mov    rdi,r14
  434369:	call   434130 <strcmp@plt+0x309a8>
  43436e:	mov    rbp,rax
  434371:	movzx  esi,r12b
  434375:	mov    rdi,r14
  434378:	call   423480 <strcmp@plt+0x1fcf8>
  43437d:	mov    rdi,r15
  434380:	mov    rsi,rbp
  434383:	call   423970 <strcmp@plt+0x201e8>
  434388:	xor    ebx,ebx
  43438a:	test   eax,eax
  43438c:	sete   bl
  43438f:	mov    rdi,r15
  434392:	call   422fa0 <strcmp@plt+0x1f818>
  434397:	mov    rdi,rbp
  43439a:	call   422fa0 <strcmp@plt+0x1f818>
  43439f:	mov    eax,ebx
  4343a1:	pop    rbx
  4343a2:	pop    r12
  4343a4:	pop    r14
  4343a6:	pop    r15
  4343a8:	pop    rbp
  4343a9:	ret    
  4343aa:	nop    WORD PTR [rax+rax*1+0x0]
  4343b0:	push   r14
  4343b2:	push   rbx
  4343b3:	push   rax
  4343b4:	mov    r14,rdi
  4343b7:	call   434130 <strcmp@plt+0x309a8>
  4343bc:	mov    rbx,rax
  4343bf:	test   rax,rax
  4343c2:	je     4343d7 <strcmp@plt+0x30c4f>
  4343c4:	mov    rdi,r14
  4343c7:	call   4230a0 <strcmp@plt+0x1f918>
  4343cc:	movzx  esi,al
  4343cf:	mov    rdi,rbx
  4343d2:	call   423480 <strcmp@plt+0x1fcf8>
  4343d7:	mov    rax,rbx
  4343da:	add    rsp,0x8
  4343de:	pop    rbx
  4343df:	pop    r14
  4343e1:	ret    
  4343e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4343ec:	nop    DWORD PTR [rax+0x0]
  4343f0:	push   r14
  4343f2:	push   rbx
  4343f3:	push   rax
  4343f4:	call   4230e0 <strcmp@plt+0x1f958>
  4343f9:	test   rax,rax
  4343fc:	je     43443e <strcmp@plt+0x30cb6>
  4343fe:	mov    rbx,rax
  434401:	mov    rdi,rax
  434404:	call   434130 <strcmp@plt+0x309a8>
  434409:	mov    r14,rax
  43440c:	test   rax,rax
  43440f:	je     434424 <strcmp@plt+0x30c9c>
  434411:	mov    rdi,rbx
  434414:	call   4230a0 <strcmp@plt+0x1f918>
  434419:	movzx  esi,al
  43441c:	mov    rdi,r14
  43441f:	call   423480 <strcmp@plt+0x1fcf8>
  434424:	mov    rdi,rbx
  434427:	mov    rsi,r14
  43442a:	call   423560 <strcmp@plt+0x1fdd8>
  43442f:	mov    rdi,r14
  434432:	call   422fa0 <strcmp@plt+0x1f818>
  434437:	mov    eax,0x1
  43443c:	jmp    434440 <strcmp@plt+0x30cb8>
  43443e:	xor    eax,eax
  434440:	add    rsp,0x8
  434444:	pop    rbx
  434445:	pop    r14
  434447:	ret    
  434448:	nop    DWORD PTR [rax+rax*1+0x0]
  434450:	push   rbx
  434451:	mov    rbx,rdi
  434454:	call   423200 <strcmp@plt+0x1fa78>
  434459:	movzx  ecx,ax
  43445c:	cmp    ecx,0xa
  43445f:	je     434477 <strcmp@plt+0x30cef>
  434461:	mov    eax,0xffffffff
  434466:	cmp    ecx,0x2
  434469:	jne    4344e8 <strcmp@plt+0x30d60>
  43446b:	mov    rdi,rbx
  43446e:	call   423d50 <strcmp@plt+0x205c8>
  434473:	mov    eax,DWORD PTR [rax]
  434475:	pop    rbx
  434476:	ret    
  434477:	mov    rdi,rbx
  43447a:	call   423370 <strcmp@plt+0x1fbe8>
  43447f:	mov    rdi,rax
  434482:	call   423d60 <strcmp@plt+0x205d8>
  434487:	movzx  ecx,BYTE PTR [rax]
  43448a:	movzx  edx,BYTE PTR [rax+0x1]
  43448e:	add    edx,ecx
  434490:	movzx  ecx,BYTE PTR [rax+0x2]
  434494:	add    ecx,edx
  434496:	movzx  edx,BYTE PTR [rax+0x3]
  43449a:	add    edx,ecx
  43449c:	movzx  ecx,BYTE PTR [rax+0x4]
  4344a0:	add    ecx,edx
  4344a2:	movzx  edx,BYTE PTR [rax+0x5]
  4344a6:	add    edx,ecx
  4344a8:	movzx  ecx,BYTE PTR [rax+0x6]
  4344ac:	add    ecx,edx
  4344ae:	movzx  edx,BYTE PTR [rax+0x7]
  4344b2:	add    edx,ecx
  4344b4:	movzx  ecx,BYTE PTR [rax+0x8]
  4344b8:	add    ecx,edx
  4344ba:	movzx  edx,BYTE PTR [rax+0x9]
  4344be:	add    edx,ecx
  4344c0:	movzx  ecx,BYTE PTR [rax+0xa]
  4344c4:	add    ecx,edx
  4344c6:	movzx  edx,BYTE PTR [rax+0xb]
  4344ca:	add    edx,ecx
  4344cc:	movzx  ecx,BYTE PTR [rax+0xc]
  4344d0:	add    ecx,edx
  4344d2:	movzx  edx,BYTE PTR [rax+0xd]
  4344d6:	add    edx,ecx
  4344d8:	movzx  ecx,BYTE PTR [rax+0xe]
  4344dc:	add    ecx,edx
  4344de:	movzx  eax,BYTE PTR [rax+0xf]
  4344e2:	lea    eax,[rax+rcx*1]
  4344e5:	add    eax,0xffffffff
  4344e8:	pop    rbx
  4344e9:	ret    
  4344ea:	nop    WORD PTR [rax+rax*1+0x0]
  4344f0:	push   rbp
  4344f1:	push   r15
  4344f3:	push   r14
  4344f5:	push   r13
  4344f7:	push   r12
  4344f9:	push   rbx
  4344fa:	sub    rsp,0x1028
  434501:	mov    DWORD PTR [rsp+0x1c],r9d
  434506:	mov    DWORD PTR [rsp+0xc],r8d
  43450b:	mov    DWORD PTR [rsp+0x18],ecx
  43450f:	mov    DWORD PTR [rsp+0x10],edx
  434513:	mov    DWORD PTR [rsp+0x8],esi
  434517:	mov    r15d,edi
  43451a:	mov    rbp,QWORD PTR [rsp+0x1060]
  434522:	mov    edi,0x10
  434527:	mov    esi,0x2
  43452c:	xor    edx,edx
  43452e:	call   4030f0 <socket@plt>
  434533:	mov    DWORD PTR [rsp+0x14],eax
  434537:	test   eax,eax
  434539:	jns    434555 <strcmp@plt+0x30dcd>
  43453b:	lea    rsi,[rip+0x185b9]        # 44cafb <strcmp@plt+0x49373>
  434542:	mov    edi,0x1
  434547:	xor    eax,eax
  434549:	call   42e800 <strcmp@plt+0x2b078>
  43454e:	xor    eax,eax
  434550:	call   43b420 <strcmp@plt+0x37c98>
  434555:	mov    r13,QWORD PTR [rsp+0x1068]
  43455d:	cmp    r15d,0x2
  434561:	mov    eax,0x8
  434566:	mov    r12d,0x14
  43456c:	cmove  r12d,eax
  434570:	lea    rdi,[rsp+0x20]
  434575:	xor    esi,esi
  434577:	mov    edx,0x1000
  43457c:	call   403260 <memset@plt>
  434581:	test   rbp,rbp
  434584:	je     4345b8 <strcmp@plt+0x30e30>
  434586:	mov    WORD PTR [rsp+0x3e],0x2
  43458d:	mov    WORD PTR [rsp+0x3c],r12w
  434593:	lea    rdi,[rsp+0x40]
  434598:	mov    rsi,rbp
  43459b:	call   423780 <strcmp@plt+0x1fff8>
  4345a0:	movzx  r14d,WORD PTR [rsp+0x3c]
  4345a6:	add    r14d,0xc
  4345aa:	mov    rdi,rbp
  4345ad:	call   4233c0 <strcmp@plt+0x1fc38>
  4345b2:	mov    DWORD PTR [rsp+0x4],eax
  4345b6:	jmp    4345c6 <strcmp@plt+0x30e3e>
  4345b8:	mov    DWORD PTR [rsp+0x4],0x0
  4345c0:	mov    r14d,0xc
  4345c6:	lea    rbp,[rsp+0x3c]
  4345cb:	test   r13,r13
  4345ce:	je     43460b <strcmp@plt+0x30e83>
  4345d0:	movzx  eax,WORD PTR [rsp+0x3c]
  4345d5:	add    rax,rbp
  4345d8:	cmp    r14d,0xc
  4345dc:	cmova  rbp,rax
  4345e0:	mov    WORD PTR [rbp+0x2],0x1
  4345e6:	mov    WORD PTR [rbp+0x0],r12w
  4345eb:	lea    rdi,[rbp+0x4]
  4345ef:	mov    rsi,r13
  4345f2:	call   423780 <strcmp@plt+0x1fff8>
  4345f7:	movzx  ebx,WORD PTR [rbp+0x0]
  4345fb:	add    ebx,r14d
  4345fe:	mov    rdi,r13
  434601:	call   4233c0 <strcmp@plt+0x1fc38>
  434606:	mov    r14d,ebx
  434609:	jmp    43460d <strcmp@plt+0x30e85>
  43460b:	xor    eax,eax
  43460d:	mov    edx,DWORD PTR [rsp+0x8]
  434611:	mov    esi,DWORD PTR [rsp+0xc]
  434615:	test   esi,esi
  434617:	je     434634 <strcmp@plt+0x30eac>
  434619:	cmp    r14d,0xd
  43461d:	jb     434626 <strcmp@plt+0x30e9e>
  43461f:	movzx  ecx,WORD PTR [rbp+0x0]
  434623:	add    rbp,rcx
  434626:	mov    DWORD PTR [rbp+0x0],0x60008
  43462d:	mov    DWORD PTR [rbp+0x4],esi
  434630:	add    r14d,0x8
  434634:	test   edx,edx
  434636:	je     434653 <strcmp@plt+0x30ecb>
  434638:	cmp    r14d,0xd
  43463c:	jb     434645 <strcmp@plt+0x30ebd>
  43463e:	movzx  ecx,WORD PTR [rbp+0x0]
  434642:	add    rbp,rcx
  434645:	mov    DWORD PTR [rbp+0x0],0x30008
  43464c:	mov    DWORD PTR [rbp+0x4],edx
  43464f:	add    r14d,0x8
  434653:	mov    ecx,DWORD PTR [rsp+0x1070]
  43465a:	add    r14d,0x10
  43465e:	mov    DWORD PTR [rsp+0x20],r14d
  434663:	xor    edx,edx
  434665:	cmp    DWORD PTR [rsp+0x10],0x20
  43466a:	sete   dl
  43466d:	mov    esi,0x505
  434672:	mov    edi,0x5
  434677:	cmove  edi,esi
  43467a:	mov    WORD PTR [rsp+0x26],di
  43467f:	xor    edx,0x21
  434682:	mov    WORD PTR [rsp+0x24],dx
  434687:	mov    BYTE PTR [rsp+0x30],r15b
  43468c:	mov    BYTE PTR [rsp+0x31],al
  434690:	mov    eax,DWORD PTR [rsp+0x4]
  434694:	mov    BYTE PTR [rsp+0x32],al
  434698:	mov    al,0xfe
  43469a:	mov    edx,DWORD PTR [rsp+0x18]
  43469e:	test   dl,dl
  4346a0:	je     4346a4 <strcmp@plt+0x30f1c>
  4346a2:	mov    eax,edx
  4346a4:	mov    BYTE PTR [rsp+0x34],al
  4346a8:	mov    BYTE PTR [rsp+0x36],0x0
  4346ad:	mov    eax,DWORD PTR [rsp+0x1c]
  4346b1:	mov    BYTE PTR [rsp+0x37],al
  4346b5:	mov    DWORD PTR [rsp+0x38],ecx
  4346b9:	lea    rsi,[rsp+0x20]
  4346be:	xor    ecx,ecx
  4346c0:	mov    ebx,DWORD PTR [rsp+0x14]
  4346c4:	mov    edi,ebx
  4346c6:	mov    rdx,r14
  4346c9:	call   403230 <send@plt>
  4346ce:	test   eax,eax
  4346d0:	jns    434705 <strcmp@plt+0x30f7d>
  4346d2:	call   403040 <__errno_location@plt>
  4346d7:	mov    edi,DWORD PTR [rax]
  4346d9:	call   403170 <strerror@plt>
  4346de:	mov    rcx,rax
  4346e1:	lea    rsi,[rip+0x1844a]        # 44cb32 <strcmp@plt+0x493aa>
  4346e8:	mov    edi,0x1
  4346ed:	xor    eax,eax
  4346ef:	mov    rdx,rcx
  4346f2:	call   42e800 <strcmp@plt+0x2b078>
  4346f7:	mov    edi,ebx
  4346f9:	call   403760 <close@plt>
  4346fe:	xor    eax,eax
  434700:	call   43b420 <strcmp@plt+0x37c98>
  434705:	mov    edi,ebx
  434707:	call   403760 <close@plt>
  43470c:	mov    eax,0x1
  434711:	add    rsp,0x1028
  434718:	pop    rbx
  434719:	pop    r12
  43471b:	pop    r13
  43471d:	pop    r14
  43471f:	pop    r15
  434721:	pop    rbp
  434722:	ret    
  434723:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43472d:	nop    DWORD PTR [rax]
  434730:	push   rbp
  434731:	push   r15
  434733:	push   r14
  434735:	push   rbx
  434736:	push   rax
  434737:	mov    rbx,r9
  43473a:	mov    eax,r8d
  43473d:	mov    r14d,ecx
  434740:	mov    ebp,edx
  434742:	mov    r15,QWORD PTR [rsp+0x30]
  434747:	mov    r10d,DWORD PTR [rsp+0x38]
  43474c:	sub    rsp,0x8
  434750:	mov    edx,0x20
  434755:	mov    ecx,ebp
  434757:	mov    r8d,r14d
  43475a:	mov    r9d,eax
  43475d:	push   r10
  43475f:	push   r15
  434761:	push   rbx
  434762:	call   4344f0 <strcmp@plt+0x30d68>
  434767:	add    rsp,0x20
  43476b:	lea    rax,[rip+0x3063e]        # 464db0 <strcmp@plt+0x61628>
  434772:	cmp    DWORD PTR [rax],0x0
  434775:	jle    4347aa <strcmp@plt+0x31022>
  434777:	mov    rdi,rbx
  43477a:	call   423130 <strcmp@plt+0x1f9a8>
  43477f:	mov    rbx,rax
  434782:	mov    rdi,r15
  434785:	call   423130 <strcmp@plt+0x1f9a8>
  43478a:	mov    rcx,rax
  43478d:	movzx  r8d,bpl
  434791:	lea    rsi,[rip+0x183c4]        # 44cb5c <strcmp@plt+0x493d4>
  434798:	mov    edi,0x5
  43479d:	xor    eax,eax
  43479f:	mov    rdx,rbx
  4347a2:	mov    r9d,r14d
  4347a5:	call   42e800 <strcmp@plt+0x2b078>
  4347aa:	mov    eax,0x1
  4347af:	add    rsp,0x8
  4347b3:	pop    rbx
  4347b4:	pop    r14
  4347b6:	pop    r15
  4347b8:	pop    rbp
  4347b9:	ret    
  4347ba:	nop    WORD PTR [rax+rax*1+0x0]
  4347c0:	push   r14
  4347c2:	push   rbx
  4347c3:	push   rax
  4347c4:	mov    r14,r9
  4347c7:	mov    eax,r8d
  4347ca:	mov    ebx,ecx
  4347cc:	mov    ecx,edx
  4347ce:	mov    r10d,DWORD PTR [rsp+0x28]
  4347d3:	sub    rsp,0x8
  4347d7:	mov    edx,0x21
  4347dc:	mov    r8d,ebx
  4347df:	mov    r9d,eax
  4347e2:	push   r10
  4347e4:	push   QWORD PTR [rsp+0x30]
  4347e8:	push   r14
  4347ea:	call   4344f0 <strcmp@plt+0x30d68>
  4347ef:	add    rsp,0x20
  4347f3:	lea    rax,[rip+0x305b6]        # 464db0 <strcmp@plt+0x61628>
  4347fa:	cmp    DWORD PTR [rax],0x0
  4347fd:	jle    434820 <strcmp@plt+0x31098>
  4347ff:	mov    rdi,r14
  434802:	call   423130 <strcmp@plt+0x1f9a8>
  434807:	mov    rcx,rax
  43480a:	lea    rsi,[rip+0x183c2]        # 44cbd3 <strcmp@plt+0x4944b>
  434811:	mov    edi,0x5
  434816:	xor    eax,eax
  434818:	mov    rdx,rcx
  43481b:	call   42e800 <strcmp@plt+0x2b078>
  434820:	mov    eax,0x1
  434825:	add    rsp,0x8
  434829:	pop    rbx
  43482a:	pop    r14
  43482c:	ret    
  43482d:	nop    DWORD PTR [rax]
  434830:	push   rbp
  434831:	push   r15
  434833:	push   r14
  434835:	push   r13
  434837:	push   r12
  434839:	push   rbx
  43483a:	sub    rsp,0x1028
  434841:	mov    QWORD PTR [rsp+0x18],r9
  434846:	mov    r12,r8
  434849:	mov    r13,rcx
  43484c:	mov    r15d,edx
  43484f:	mov    DWORD PTR [rsp+0xc],edi
  434853:	mov    DWORD PTR [rsp+0x10],esi
  434857:	movzx  edi,si
  43485a:	call   423db0 <strcmp@plt+0x20628>
  43485f:	mov    r14d,eax
  434862:	mov    edi,0x10
  434867:	mov    esi,0x2
  43486c:	xor    edx,edx
  43486e:	call   4030f0 <socket@plt>
  434873:	mov    ebx,eax
  434875:	test   eax,eax
  434877:	jns    434893 <strcmp@plt+0x3110b>
  434879:	lea    rsi,[rip+0x1838d]        # 44cc0d <strcmp@plt+0x49485>
  434880:	mov    edi,0x1
  434885:	xor    eax,eax
  434887:	call   42e800 <strcmp@plt+0x2b078>
  43488c:	xor    eax,eax
  43488e:	call   43b420 <strcmp@plt+0x37c98>
  434893:	lea    rdi,[rsp+0x20]
  434898:	xor    esi,esi
  43489a:	mov    edx,0x1000
  43489f:	call   403260 <memset@plt>
  4348a4:	test   r13,r13
  4348a7:	mov    DWORD PTR [rsp+0x14],ebx
  4348ab:	je     4348e2 <strcmp@plt+0x3115a>
  4348ad:	mov    WORD PTR [rsp+0x3e],0x1
  4348b4:	movzx  eax,r14b
  4348b8:	add    eax,0x4
  4348bb:	mov    WORD PTR [rsp+0x3c],ax
  4348c0:	lea    rdi,[rsp+0x40]
  4348c5:	mov    rsi,r13
  4348c8:	call   423780 <strcmp@plt+0x1fff8>
  4348cd:	movzx  ebp,WORD PTR [rsp+0x3c]
  4348d2:	add    ebp,0xc
  4348d5:	mov    rdi,r13
  4348d8:	call   4233c0 <strcmp@plt+0x1fc38>
  4348dd:	mov    r13d,eax
  4348e0:	jmp    4348ea <strcmp@plt+0x31162>
  4348e2:	mov    ebp,0xc
  4348e7:	xor    r13d,r13d
  4348ea:	lea    rbx,[rsp+0x3c]
  4348ef:	test   r12,r12
  4348f2:	je     434926 <strcmp@plt+0x3119e>
  4348f4:	movzx  eax,WORD PTR [rsp+0x3c]
  4348f9:	add    rax,rbx
  4348fc:	cmp    ebp,0xc
  4348ff:	cmova  rbx,rax
  434903:	mov    WORD PTR [rbx+0x2],0x7
  434909:	movzx  eax,r14b
  43490d:	add    eax,0x4
  434910:	mov    WORD PTR [rbx],ax
  434913:	lea    rdi,[rbx+0x4]
  434917:	mov    rsi,r12
  43491a:	call   423780 <strcmp@plt+0x1fff8>
  43491f:	movzx  eax,WORD PTR [rbx]
  434922:	add    eax,ebp
  434924:	mov    ebp,eax
  434926:	mov    rsi,QWORD PTR [rsp+0x18]
  43492b:	test   r15d,r15d
  43492e:	je     434948 <strcmp@plt+0x311c0>
  434930:	cmp    ebp,0xd
  434933:	jb     43493b <strcmp@plt+0x311b3>
  434935:	movzx  eax,WORD PTR [rbx]
  434938:	add    rbx,rax
  43493b:	mov    DWORD PTR [rbx],0x40008
  434941:	mov    DWORD PTR [rbx+0x4],r15d
  434945:	add    ebp,0x8
  434948:	mov    r15d,DWORD PTR [rsp+0x1060]
  434950:	test   rsi,rsi
  434953:	je     43497e <strcmp@plt+0x311f6>
  434955:	cmp    ebp,0xd
  434958:	jb     434960 <strcmp@plt+0x311d8>
  43495a:	movzx  eax,WORD PTR [rbx]
  43495d:	add    rbx,rax
  434960:	mov    WORD PTR [rbx+0x2],0x5
  434966:	movzx  eax,r14b
  43496a:	add    eax,0x4
  43496d:	mov    WORD PTR [rbx],ax
  434970:	lea    rdi,[rbx+0x4]
  434974:	call   423780 <strcmp@plt+0x1fff8>
  434979:	movzx  eax,WORD PTR [rbx]
  43497c:	add    ebp,eax
  43497e:	mov    eax,DWORD PTR [rsp+0x1068]
  434985:	test   r15d,r15d
  434988:	je     4349a2 <strcmp@plt+0x3121a>
  43498a:	cmp    ebp,0xd
  43498d:	jb     434995 <strcmp@plt+0x3120d>
  43498f:	movzx  ecx,WORD PTR [rbx]
  434992:	add    rbx,rcx
  434995:	mov    DWORD PTR [rbx],0x60008
  43499b:	mov    DWORD PTR [rbx+0x4],r15d
  43499f:	add    ebp,0x8
  4349a2:	add    ebp,0x10
  4349a5:	mov    DWORD PTR [rsp+0x20],ebp
  4349a9:	xor    ecx,ecx
  4349ab:	cmp    DWORD PTR [rsp+0xc],0x18
  4349b0:	sete   cl
  4349b3:	mov    edx,0x501
  4349b8:	mov    esi,0x1
  4349bd:	cmove  esi,edx
  4349c0:	xor    ecx,0x19
  4349c3:	mov    WORD PTR [rsp+0x26],si
  4349c8:	mov    WORD PTR [rsp+0x24],cx
  4349cd:	mov    ecx,DWORD PTR [rsp+0x10]
  4349d1:	mov    BYTE PTR [rsp+0x30],cl
  4349d5:	mov    cl,0xfe
  4349d7:	test   eax,eax
  4349d9:	mov    ebx,DWORD PTR [rsp+0x14]
  4349dd:	je     4349e1 <strcmp@plt+0x31259>
  4349df:	mov    ecx,eax
  4349e1:	mov    BYTE PTR [rsp+0x34],cl
  4349e5:	mov    WORD PTR [rsp+0x35],0x4
  4349ec:	mov    BYTE PTR [rsp+0x37],0x1
  4349f1:	mov    WORD PTR [rsp+0x32],0x0
  4349f8:	mov    BYTE PTR [rsp+0x31],r13b
  4349fd:	lea    rsi,[rsp+0x20]
  434a02:	xor    ecx,ecx
  434a04:	mov    edi,ebx
  434a06:	mov    rdx,rbp
  434a09:	call   403230 <send@plt>
  434a0e:	test   eax,eax
  434a10:	jns    434a45 <strcmp@plt+0x312bd>
  434a12:	call   403040 <__errno_location@plt>
  434a17:	mov    edi,DWORD PTR [rax]
  434a19:	call   403170 <strerror@plt>
  434a1e:	mov    rcx,rax
  434a21:	lea    rsi,[rip+0x18217]        # 44cc3f <strcmp@plt+0x494b7>
  434a28:	mov    edi,0x1
  434a2d:	xor    eax,eax
  434a2f:	mov    rdx,rcx
  434a32:	call   42e800 <strcmp@plt+0x2b078>
  434a37:	mov    edi,ebx
  434a39:	call   403760 <close@plt>
  434a3e:	xor    eax,eax
  434a40:	call   43b420 <strcmp@plt+0x37c98>
  434a45:	mov    edi,ebx
  434a47:	call   403760 <close@plt>
  434a4c:	mov    eax,0x1
  434a51:	add    rsp,0x1028
  434a58:	pop    rbx
  434a59:	pop    r12
  434a5b:	pop    r13
  434a5d:	pop    r14
  434a5f:	pop    r15
  434a61:	pop    rbp
  434a62:	ret    
  434a63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434a6d:	nop    DWORD PTR [rax]
  434a70:	push   rbp
  434a71:	push   r15
  434a73:	push   r14
  434a75:	push   r13
  434a77:	push   r12
  434a79:	push   rbx
  434a7a:	push   rax
  434a7b:	mov    eax,r9d
  434a7e:	mov    r15,r8
  434a81:	mov    rbp,rcx
  434a84:	mov    rbx,rdx
  434a87:	mov    ecx,esi
  434a89:	mov    edx,edi
  434a8b:	mov    r14d,DWORD PTR [rsp+0x40]
  434a90:	mov    edi,0x18
  434a95:	mov    esi,edx
  434a97:	mov    edx,ecx
  434a99:	mov    rcx,rbx
  434a9c:	mov    r8,rbp
  434a9f:	mov    r9,r15
  434aa2:	push   r14
  434aa4:	push   rax
  434aa5:	call   434830 <strcmp@plt+0x310a8>
  434aaa:	add    rsp,0x10
  434aae:	lea    rax,[rip+0x302fb]        # 464db0 <strcmp@plt+0x61628>
  434ab5:	cmp    DWORD PTR [rax],0x0
  434ab8:	jle    434b16 <strcmp@plt+0x3138e>
  434aba:	lea    r13,[rip+0x18200]        # 44ccc1 <strcmp@plt+0x49539>
  434ac1:	mov    r12,r13
  434ac4:	test   rbp,rbp
  434ac7:	je     434ad4 <strcmp@plt+0x3134c>
  434ac9:	mov    rdi,rbp
  434acc:	call   423130 <strcmp@plt+0x1f9a8>
  434ad1:	mov    r12,rax
  434ad4:	mov    rbp,r13
  434ad7:	test   rbx,rbx
  434ada:	je     434ae7 <strcmp@plt+0x3135f>
  434adc:	mov    rdi,rbx
  434adf:	call   423130 <strcmp@plt+0x1f9a8>
  434ae4:	mov    rbp,rax
  434ae7:	test   r15,r15
  434aea:	je     434af7 <strcmp@plt+0x3136f>
  434aec:	mov    rdi,r15
  434aef:	call   423130 <strcmp@plt+0x1f9a8>
  434af4:	mov    r13,rax
  434af7:	lea    rsi,[rip+0x1816e]        # 44cc6c <strcmp@plt+0x494e4>
  434afe:	mov    edi,0x5
  434b03:	xor    eax,eax
  434b05:	mov    rdx,r12
  434b08:	mov    rcx,rbp
  434b0b:	mov    r8,r13
  434b0e:	mov    r9d,r14d
  434b11:	call   42e800 <strcmp@plt+0x2b078>
  434b16:	mov    eax,0x1
  434b1b:	add    rsp,0x8
  434b1f:	pop    rbx
  434b20:	pop    r12
  434b22:	pop    r13
  434b24:	pop    r14
  434b26:	pop    r15
  434b28:	pop    rbp
  434b29:	ret    
  434b2a:	nop    WORD PTR [rax+rax*1+0x0]
  434b30:	push   rbp
  434b31:	push   r15
  434b33:	push   r14
  434b35:	push   r13
  434b37:	push   r12
  434b39:	push   rbx
  434b3a:	push   rax
  434b3b:	mov    eax,r9d
  434b3e:	mov    r15,r8
  434b41:	mov    rbp,rcx
  434b44:	mov    rbx,rdx
  434b47:	mov    ecx,esi
  434b49:	mov    edx,edi
  434b4b:	mov    r14d,DWORD PTR [rsp+0x40]
  434b50:	mov    edi,0x19
  434b55:	mov    esi,edx
  434b57:	mov    edx,ecx
  434b59:	mov    rcx,rbx
  434b5c:	mov    r8,rbp
  434b5f:	mov    r9,r15
  434b62:	push   r14
  434b64:	push   rax
  434b65:	call   434830 <strcmp@plt+0x310a8>
  434b6a:	add    rsp,0x10
  434b6e:	lea    rax,[rip+0x3023b]        # 464db0 <strcmp@plt+0x61628>
  434b75:	cmp    DWORD PTR [rax],0x0
  434b78:	jle    434bd6 <strcmp@plt+0x3144e>
  434b7a:	lea    r13,[rip+0x18140]        # 44ccc1 <strcmp@plt+0x49539>
  434b81:	mov    r12,r13
  434b84:	test   rbp,rbp
  434b87:	je     434b94 <strcmp@plt+0x3140c>
  434b89:	mov    rdi,rbp
  434b8c:	call   423130 <strcmp@plt+0x1f9a8>
  434b91:	mov    r12,rax
  434b94:	mov    rbp,r13
  434b97:	test   rbx,rbx
  434b9a:	je     434ba7 <strcmp@plt+0x3141f>
  434b9c:	mov    rdi,rbx
  434b9f:	call   423130 <strcmp@plt+0x1f9a8>
  434ba4:	mov    rbp,rax
  434ba7:	test   r15,r15
  434baa:	je     434bb7 <strcmp@plt+0x3142f>
  434bac:	mov    rdi,r15
  434baf:	call   423130 <strcmp@plt+0x1f9a8>
  434bb4:	mov    r13,rax
  434bb7:	lea    rsi,[rip+0x18105]        # 44ccc3 <strcmp@plt+0x4953b>
  434bbe:	mov    edi,0x5
  434bc3:	xor    eax,eax
  434bc5:	mov    rdx,r12
  434bc8:	mov    rcx,rbp
  434bcb:	mov    r8,r13
  434bce:	mov    r9d,r14d
  434bd1:	call   42e800 <strcmp@plt+0x2b078>
  434bd6:	mov    eax,0x1
  434bdb:	add    rsp,0x8
  434bdf:	pop    rbx
  434be0:	pop    r12
  434be2:	pop    r13
  434be4:	pop    r14
  434be6:	pop    r15
  434be8:	pop    rbp
  434be9:	ret    
  434bea:	nop    WORD PTR [rax+rax*1+0x0]
  434bf0:	mov    edi,0x98
  434bf5:	jmp    432070 <strcmp@plt+0x2e8e8>
  434bfa:	nop    WORD PTR [rax+rax*1+0x0]
  434c00:	test   rdi,rdi
  434c03:	je     434c68 <strcmp@plt+0x314e0>
  434c05:	push   r15
  434c07:	push   r14
  434c09:	push   rbx
  434c0a:	mov    r14,rdi
  434c0d:	mov    rbx,QWORD PTR [rdi]
  434c10:	test   rbx,rbx
  434c13:	je     434c3c <strcmp@plt+0x314b4>
  434c15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434c1f:	nop
  434c20:	mov    r15,QWORD PTR [rbx+0x20]
  434c24:	mov    edi,DWORD PTR [rbx+0x18]
  434c27:	call   403760 <close@plt>
  434c2c:	mov    rdi,rbx
  434c2f:	call   403780 <free@plt>
  434c34:	mov    rbx,r15
  434c37:	test   r15,r15
  434c3a:	jne    434c20 <strcmp@plt+0x31498>
  434c3c:	mov    rdi,r14
  434c3f:	call   403780 <free@plt>
  434c44:	lea    rax,[rip+0x30165]        # 464db0 <strcmp@plt+0x61628>
  434c4b:	cmp    DWORD PTR [rax],0x0
  434c4e:	pop    rbx
  434c4f:	pop    r14
  434c51:	pop    r15
  434c53:	jle    434c68 <strcmp@plt+0x314e0>
  434c55:	lea    rsi,[rip+0x180c0]        # 44cd1c <strcmp@plt+0x49594>
  434c5c:	mov    edi,0x5
  434c61:	xor    eax,eax
  434c63:	jmp    42e800 <strcmp@plt+0x2b078>
  434c68:	ret    
  434c69:	nop    DWORD PTR [rax+0x0]
  434c70:	mov    rax,QWORD PTR [rdi]
  434c73:	test   rax,rax
  434c76:	jne    434c89 <strcmp@plt+0x31501>
  434c78:	jmp    434c8f <strcmp@plt+0x31507>
  434c7a:	nop    WORD PTR [rax+rax*1+0x0]
  434c80:	mov    rax,QWORD PTR [rax+0x20]
  434c84:	test   rax,rax
  434c87:	je     434c8f <strcmp@plt+0x31507>
  434c89:	cmp    DWORD PTR [rax+0x18],esi
  434c8c:	jne    434c80 <strcmp@plt+0x314f8>
  434c8e:	ret    
  434c8f:	xor    eax,eax
  434c91:	ret    
  434c92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434c9c:	nop    DWORD PTR [rax+0x0]
  434ca0:	push   rbp
  434ca1:	push   r15
  434ca3:	push   r14
  434ca5:	push   r12
  434ca7:	push   rbx
  434ca8:	sub    rsp,0x20
  434cac:	mov    DWORD PTR [rsp+0xc],0x10
  434cb4:	mov    rbx,QWORD PTR [rdi]
  434cb7:	test   rbx,rbx
  434cba:	je     434d1b <strcmp@plt+0x31593>
  434cbc:	mov    r14d,edx
  434cbf:	mov    ebp,esi
  434cc1:	lea    r15,[rsp+0x10]
  434cc6:	lea    r12,[rsp+0xc]
  434ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  434cd0:	mov    edi,DWORD PTR [rbx+0x18]
  434cd3:	mov    rsi,r15
  434cd6:	mov    rdx,r12
  434cd9:	call   403380 <getsockname@plt>
  434cde:	cmp    eax,0xffffffff
  434ce1:	je     434d12 <strcmp@plt+0x3158a>
  434ce3:	cmp    DWORD PTR [rsp+0xc],0x10
  434ce8:	jne    434d00 <strcmp@plt+0x31578>
  434cea:	cmp    ebp,0x2
  434ced:	je     434d05 <strcmp@plt+0x3157d>
  434cef:	jmp    434d12 <strcmp@plt+0x3158a>
  434cf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  434d00:	cmp    ebp,0xa
  434d03:	jne    434d12 <strcmp@plt+0x3158a>
  434d05:	movbe  ax,WORD PTR [rsp+0x12]
  434d0c:	cmp    ax,r14w
  434d10:	je     434d1d <strcmp@plt+0x31595>
  434d12:	mov    rbx,QWORD PTR [rbx+0x20]
  434d16:	test   rbx,rbx
  434d19:	jne    434cd0 <strcmp@plt+0x31548>
  434d1b:	xor    ebx,ebx
  434d1d:	mov    rax,rbx
  434d20:	add    rsp,0x20
  434d24:	pop    rbx
  434d25:	pop    r12
  434d27:	pop    r14
  434d29:	pop    r15
  434d2b:	pop    rbp
  434d2c:	ret    
  434d2d:	nop    DWORD PTR [rax]
  434d30:	push   rbp
  434d31:	push   r15
  434d33:	push   r14
  434d35:	push   rbx
  434d36:	push   rax
  434d37:	mov    ebp,ecx
  434d39:	mov    r14,rdx
  434d3c:	mov    r15,rsi
  434d3f:	mov    rbx,rdi
  434d42:	mov    edi,0x30
  434d47:	call   432070 <strcmp@plt+0x2e8e8>
  434d4c:	mov    QWORD PTR [rax+0x8],r15
  434d50:	mov    DWORD PTR [rax],0x0
  434d56:	mov    QWORD PTR [rax+0x10],r14
  434d5a:	mov    DWORD PTR [rax+0x18],ebp
  434d5d:	mov    QWORD PTR [rax+0x20],0x0
  434d65:	mov    rcx,QWORD PTR [rbx+0x8]
  434d69:	mov    QWORD PTR [rax+0x28],rcx
  434d6d:	test   rcx,rcx
  434d70:	lea    rcx,[rcx+0x20]
  434d74:	cmove  rcx,rbx
  434d78:	mov    QWORD PTR [rcx],rax
  434d7b:	mov    QWORD PTR [rbx+0x8],rax
  434d7f:	add    DWORD PTR [rbx+0x10],0x1
  434d83:	cmp    DWORD PTR [rbx+0x14],ebp
  434d86:	jge    434d8b <strcmp@plt+0x31603>
  434d88:	mov    DWORD PTR [rbx+0x14],ebp
  434d8b:	add    rsp,0x8
  434d8f:	pop    rbx
  434d90:	pop    r14
  434d92:	pop    r15
  434d94:	pop    rbp
  434d95:	ret    
  434d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434da0:	mov    eax,DWORD PTR [rdi+0x18]
  434da3:	ret    
  434da4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434dae:	xchg   ax,ax
  434db0:	push   rbp
  434db1:	push   r14
  434db3:	push   rbx
  434db4:	mov    r14,rsi
  434db7:	mov    rbx,rdi
  434dba:	mov    rcx,QWORD PTR [rsi+0x20]
  434dbe:	mov    rax,QWORD PTR [rsi+0x28]
  434dc2:	test   rax,rax
  434dc5:	je     434dda <strcmp@plt+0x31652>
  434dc7:	mov    QWORD PTR [rax+0x20],rcx
  434dcb:	mov    rcx,QWORD PTR [r14+0x20]
  434dcf:	test   rcx,rcx
  434dd2:	je     434dec <strcmp@plt+0x31664>
  434dd4:	mov    QWORD PTR [rcx+0x28],rax
  434dd8:	jmp    434df0 <strcmp@plt+0x31668>
  434dda:	mov    QWORD PTR [rbx],rcx
  434ddd:	test   rcx,rcx
  434de0:	je     434dec <strcmp@plt+0x31664>
  434de2:	mov    QWORD PTR [rcx+0x28],0x0
  434dea:	jmp    434df0 <strcmp@plt+0x31668>
  434dec:	mov    QWORD PTR [rbx+0x8],rax
  434df0:	mov    ebp,DWORD PTR [r14+0x18]
  434df4:	mov    edi,ebp
  434df6:	call   403760 <close@plt>
  434dfb:	mov    rdi,r14
  434dfe:	call   403780 <free@plt>
  434e03:	add    DWORD PTR [rbx+0x10],0xffffffff
  434e07:	cmp    ebp,DWORD PTR [rbx+0x14]
  434e0a:	jne    434e3e <strcmp@plt+0x316b6>
  434e0c:	mov    rax,QWORD PTR [rbx]
  434e0f:	test   rax,rax
  434e12:	je     434e37 <strcmp@plt+0x316af>
  434e14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434e1e:	xchg   ax,ax
  434e20:	mov    ecx,DWORD PTR [rax+0x18]
  434e23:	cmp    ecx,ebp
  434e25:	jle    434e2c <strcmp@plt+0x316a4>
  434e27:	mov    DWORD PTR [rbx+0x14],ecx
  434e2a:	mov    ebp,ecx
  434e2c:	mov    rax,QWORD PTR [rax+0x20]
  434e30:	test   rax,rax
  434e33:	jne    434e20 <strcmp@plt+0x31698>
  434e35:	jmp    434e3e <strcmp@plt+0x316b6>
  434e37:	mov    DWORD PTR [rbx+0x14],0x0
  434e3e:	mov    eax,0x1
  434e43:	pop    rbx
  434e44:	pop    r14
  434e46:	pop    rbp
  434e47:	ret    
  434e48:	nop    DWORD PTR [rax+rax*1+0x0]
  434e50:	push   r15
  434e52:	push   r14
  434e54:	push   rbx
  434e55:	sub    rsp,0x10
  434e59:	mov    r14,rdi
  434e5c:	mov    eax,0x3e8
  434e61:	vmovq  xmm0,rax
  434e66:	vpslldq xmm0,xmm0,0x8
  434e6b:	vmovdqa XMMWORD PTR [rsp],xmm0
  434e70:	lea    rbx,[rdi+0x18]
  434e74:	mov    r15,rsp
  434e77:	nop    WORD PTR [rax+rax*1+0x0]
  434e80:	mov    edi,DWORD PTR [r14+0x14]
  434e84:	add    edi,0x1
  434e87:	xor    edx,edx
  434e89:	xor    ecx,ecx
  434e8b:	mov    rsi,rbx
  434e8e:	mov    r8,r15
  434e91:	call   4033b0 <select@plt>
  434e96:	cmp    eax,0xffffffff
  434e99:	jne    434ed3 <strcmp@plt+0x3174b>
  434e9b:	call   403040 <__errno_location@plt>
  434ea0:	mov    edi,DWORD PTR [rax]
  434ea2:	cmp    edi,0x4
  434ea5:	je     434e80 <strcmp@plt+0x316f8>
  434ea7:	lea    rax,[rip+0x2ff02]        # 464db0 <strcmp@plt+0x61628>
  434eae:	cmp    DWORD PTR [rax],0x2
  434eb1:	jl     434f19 <strcmp@plt+0x31791>
  434eb3:	call   403170 <strerror@plt>
  434eb8:	mov    rcx,rax
  434ebb:	lea    rsi,[rip+0x17e69]        # 44cd2b <strcmp@plt+0x495a3>
  434ec2:	mov    edi,0x6
  434ec7:	xor    eax,eax
  434ec9:	mov    rdx,rcx
  434ecc:	call   42e800 <strcmp@plt+0x2b078>
  434ed1:	jmp    434f19 <strcmp@plt+0x31791>
  434ed3:	mov    rbx,QWORD PTR [r14]
  434ed6:	test   rbx,rbx
  434ed9:	jne    434ee9 <strcmp@plt+0x31761>
  434edb:	jmp    434f19 <strcmp@plt+0x31791>
  434edd:	nop    DWORD PTR [rax]
  434ee0:	mov    rbx,QWORD PTR [rbx+0x20]
  434ee4:	test   rbx,rbx
  434ee7:	je     434f19 <strcmp@plt+0x31791>
  434ee9:	mov    eax,DWORD PTR [rbx+0x18]
  434eec:	mov    ecx,eax
  434eee:	sar    ecx,0x1f
  434ef1:	shr    ecx,0x1a
  434ef4:	add    ecx,eax
  434ef6:	mov    edx,ecx
  434ef8:	sar    edx,0x6
  434efb:	movsxd rdx,edx
  434efe:	mov    rdx,QWORD PTR [r14+rdx*8+0x18]
  434f03:	and    ecx,0xc0
  434f09:	sub    eax,ecx
  434f0b:	bt     rdx,rax
  434f0f:	jae    434ee0 <strcmp@plt+0x31758>
  434f11:	mov    rdi,rbx
  434f14:	call   QWORD PTR [rbx+0x8]
  434f17:	jmp    434ee0 <strcmp@plt+0x31758>
  434f19:	add    rsp,0x10
  434f1d:	pop    rbx
  434f1e:	pop    r14
  434f20:	pop    r15
  434f22:	ret    
  434f23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434f2d:	nop    DWORD PTR [rax]
  434f30:	mov    rax,QWORD PTR [rdi]
  434f33:	test   rax,rax
  434f36:	je     434f70 <strcmp@plt+0x317e8>
  434f38:	mov    r8d,0x1
  434f3e:	xchg   ax,ax
  434f40:	mov    edx,DWORD PTR [rax+0x18]
  434f43:	mov    ecx,edx
  434f45:	sar    ecx,0x1f
  434f48:	shr    ecx,0x1a
  434f4b:	add    ecx,edx
  434f4d:	mov    esi,ecx
  434f4f:	and    esi,0xc0
  434f55:	sub    edx,esi
  434f57:	shlx   rdx,r8,rdx
  434f5c:	sar    ecx,0x6
  434f5f:	movsxd rcx,ecx
  434f62:	or     QWORD PTR [rdi+rcx*8+0x18],rdx
  434f67:	mov    rax,QWORD PTR [rax+0x20]
  434f6b:	test   rax,rax
  434f6e:	jne    434f40 <strcmp@plt+0x317b8>
  434f70:	ret    
  434f71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  434f80:	push   rbp
  434f81:	push   r14
  434f83:	push   rbx
  434f84:	sub    rsp,0x10
  434f88:	mov    ebx,edi
  434f8a:	mov    DWORD PTR [rsp+0xc],0x1
  434f92:	call   435900 <strcmp@plt+0x32178>
  434f97:	mov    ebp,0xfffffff7
  434f9c:	cmp    eax,0xfffffff7
  434f9f:	je     435041 <strcmp@plt+0x318b9>
  434fa5:	mov    r14d,eax
  434fa8:	xor    edx,edx
  434faa:	mov    ecx,0x10f6
  434faf:	mov    edi,eax
  434fb1:	mov    esi,ebx
  434fb3:	call   435d50 <strcmp@plt+0x325c8>
  434fb8:	cmp    ebx,0xa
  434fbb:	je     434ff8 <strcmp@plt+0x31870>
  434fbd:	cmp    ebx,0x2
  434fc0:	jne    435041 <strcmp@plt+0x318b9>
  434fc2:	lea    rcx,[rsp+0xc]
  434fc7:	xor    esi,esi
  434fc9:	mov    edx,0x8
  434fce:	mov    r8d,0x4
  434fd4:	mov    edi,r14d
  434fd7:	call   4036f0 <setsockopt@plt>
  434fdc:	test   eax,eax
  434fde:	jns    43503e <strcmp@plt+0x318b6>
  434fe0:	call   403040 <__errno_location@plt>
  434fe5:	mov    edi,DWORD PTR [rax]
  434fe7:	call   403170 <strerror@plt>
  434fec:	mov    rcx,rax
  434fef:	lea    rsi,[rip+0x17d58]        # 44cd4e <strcmp@plt+0x495c6>
  434ff6:	jmp    43502f <strcmp@plt+0x318a7>
  434ff8:	lea    rcx,[rsp+0xc]
  434ffd:	mov    esi,0x29
  435002:	mov    edx,0x31
  435007:	mov    r8d,0x4
  43500d:	mov    edi,r14d
  435010:	call   4036f0 <setsockopt@plt>
  435015:	test   eax,eax
  435017:	jns    43503e <strcmp@plt+0x318b6>
  435019:	call   403040 <__errno_location@plt>
  43501e:	mov    edi,DWORD PTR [rax]
  435020:	call   403170 <strerror@plt>
  435025:	mov    rcx,rax
  435028:	lea    rsi,[rip+0x17d39]        # 44cd68 <strcmp@plt+0x495e0>
  43502f:	mov    edi,0x3
  435034:	xor    eax,eax
  435036:	mov    rdx,rcx
  435039:	call   42e800 <strcmp@plt+0x2b078>
  43503e:	mov    ebp,r14d
  435041:	mov    eax,ebp
  435043:	add    rsp,0x10
  435047:	pop    rbx
  435048:	pop    r14
  43504a:	pop    rbp
  43504b:	ret    
  43504c:	nop    DWORD PTR [rax+0x0]
  435050:	push   rbp
  435051:	push   r15
  435053:	push   r14
  435055:	push   rbx
  435056:	push   rax
  435057:	mov    r15d,esi
  43505a:	mov    ebx,edi
  43505c:	call   4357d0 <strcmp@plt+0x32048>
  435061:	mov    r14d,0xfffffff7
  435067:	cmp    eax,0xfffffff7
  43506a:	je     4350a9 <strcmp@plt+0x31921>
  43506c:	mov    ebp,eax
  43506e:	mov    edi,ebx
  435070:	call   435900 <strcmp@plt+0x32178>
  435075:	movzx  ecx,r15w
  435079:	xor    edx,edx
  43507b:	mov    edi,eax
  43507d:	mov    esi,ebx
  43507f:	call   435d50 <strcmp@plt+0x325c8>
  435084:	mov    r15d,eax
  435087:	mov    edi,ebp
  435089:	mov    esi,ebx
  43508b:	call   435ae0 <strcmp@plt+0x32358>
  435090:	cmp    eax,0x1
  435093:	jne    43509a <strcmp@plt+0x31912>
  435095:	mov    r14d,ebp
  435098:	jmp    4350a9 <strcmp@plt+0x31921>
  43509a:	mov    edi,ebp
  43509c:	call   403760 <close@plt>
  4350a1:	mov    edi,r15d
  4350a4:	call   403760 <close@plt>
  4350a9:	mov    eax,r14d
  4350ac:	add    rsp,0x8
  4350b0:	pop    rbx
  4350b1:	pop    r14
  4350b3:	pop    r15
  4350b5:	pop    rbp
  4350b6:	ret    
  4350b7:	nop    WORD PTR [rax+rax*1+0x0]
  4350c0:	push   rbp
  4350c1:	push   r14
  4350c3:	push   rbx
  4350c4:	sub    rsp,0x10
  4350c8:	mov    r14d,esi
  4350cb:	mov    ebp,edi
  4350cd:	call   435900 <strcmp@plt+0x32178>
  4350d2:	test   eax,eax
  4350d4:	js     435152 <strcmp@plt+0x319ca>
  4350d6:	mov    ebx,eax
  4350d8:	mov    DWORD PTR [rsp+0xc],0x1
  4350e0:	cmp    ebp,0xa
  4350e3:	jne    43512a <strcmp@plt+0x319a2>
  4350e5:	lea    rcx,[rsp+0xc]
  4350ea:	mov    esi,0x11
  4350ef:	mov    edx,0x66
  4350f4:	mov    r8d,0x4
  4350fa:	mov    edi,ebx
  4350fc:	call   4036f0 <setsockopt@plt>
  435101:	test   eax,eax
  435103:	jns    43512a <strcmp@plt+0x319a2>
  435105:	call   403040 <__errno_location@plt>
  43510a:	mov    edi,DWORD PTR [rax]
  43510c:	call   403170 <strerror@plt>
  435111:	mov    rcx,rax
  435114:	lea    rsi,[rip+0x17c6d]        # 44cd88 <strcmp@plt+0x49600>
  43511b:	mov    edi,0x3
  435120:	xor    eax,eax
  435122:	mov    rdx,rcx
  435125:	call   42e800 <strcmp@plt+0x2b078>
  43512a:	xor    edx,edx
  43512c:	mov    edi,ebx
  43512e:	mov    esi,ebp
  435130:	mov    ecx,r14d
  435133:	call   435d50 <strcmp@plt+0x325c8>
  435138:	cmp    eax,0x1
  43513b:	jne    43514b <strcmp@plt+0x319c3>
  43513d:	mov    edi,ebx
  43513f:	mov    esi,ebp
  435141:	call   435ae0 <strcmp@plt+0x32358>
  435146:	cmp    eax,0x1
  435149:	je     435157 <strcmp@plt+0x319cf>
  43514b:	mov    edi,ebx
  43514d:	call   403760 <close@plt>
  435152:	mov    ebx,0xfffffff7
  435157:	mov    eax,ebx
  435159:	add    rsp,0x10
  43515d:	pop    rbx
  43515e:	pop    r14
  435160:	pop    rbp
  435161:	ret    
  435162:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43516c:	nop    DWORD PTR [rax+0x0]
  435170:	push   rbx
  435171:	mov    rbx,rsi
  435174:	mov    rsi,QWORD PTR [rsi+0x38]
  435178:	mov    edx,DWORD PTR [rbx+0x30]
  43517b:	add    edx,DWORD PTR [rbx+0x10]
  43517e:	mov    eax,DWORD PTR [rbx+0x14]
  435181:	add    eax,esi
  435183:	sub    edx,eax
  435185:	call   4035a0 <read@plt>
  43518a:	test   eax,eax
  43518c:	je     435198 <strcmp@plt+0x31a10>
  43518e:	add    DWORD PTR [rbx+0x14],eax
  435191:	mov    ebx,0x1
  435196:	jmp    4351bf <strcmp@plt+0x31a37>
  435198:	call   403040 <__errno_location@plt>
  43519d:	mov    edi,DWORD PTR [rax]
  43519f:	call   403170 <strerror@plt>
  4351a4:	mov    rcx,rax
  4351a7:	lea    rsi,[rip+0x17c1b]        # 44cdc9 <strcmp@plt+0x49641>
  4351ae:	xor    ebx,ebx
  4351b0:	mov    edi,0x3
  4351b5:	xor    eax,eax
  4351b7:	mov    rdx,rcx
  4351ba:	call   42e800 <strcmp@plt+0x2b078>
  4351bf:	mov    eax,ebx
  4351c1:	pop    rbx
  4351c2:	ret    
  4351c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4351cd:	nop    DWORD PTR [rax]
  4351d0:	push   rbp
  4351d1:	mov    rbp,rsp
  4351d4:	push   r15
  4351d6:	push   r14
  4351d8:	push   rbx
  4351d9:	and    rsp,0xffffffffffffffe0
  4351dd:	sub    rsp,0xa0
  4351e4:	mov    r14,rdx
  4351e7:	mov    rbx,rsi
  4351ea:	mov    rax,QWORD PTR [rsi+0x38]
  4351ee:	mov    QWORD PTR [rsp+0x60],rax
  4351f3:	mov    ecx,DWORD PTR [rsi+0x30]
  4351f6:	add    ecx,DWORD PTR [rsi+0x10]
  4351f9:	add    eax,DWORD PTR [rsi+0x14]
  4351fc:	sub    ecx,eax
  4351fe:	vxorps xmm0,xmm0,xmm0
  435202:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  435208:	mov    QWORD PTR [rsp+0x68],rcx
  43520d:	vmovups YMMWORD PTR [rsp+0x38],ymm0
  435213:	lea    rax,[rsp+0x60]
  435218:	mov    QWORD PTR [rsp+0x30],rax
  43521d:	mov    QWORD PTR [rsp+0x38],0x1
  435226:	lea    rax,[rsp+0x70]
  43522b:	mov    QWORD PTR [rsp+0x40],rax
  435230:	mov    QWORD PTR [rsp+0x48],0x28
  435239:	mov    rax,rsp
  43523c:	mov    QWORD PTR [rsp+0x20],rax
  435241:	mov    DWORD PTR [rsp+0x28],0x1c
  435249:	lea    rsi,[rsp+0x20]
  43524e:	xor    r15d,r15d
  435251:	xor    edx,edx
  435253:	vzeroupper 
  435256:	call   403130 <recvmsg@plt>
  43525b:	cmp    eax,0xffffffff
  43525e:	je     4352fa <strcmp@plt+0x31b72>
  435264:	add    DWORD PTR [rbx+0x14],eax
  435267:	movzx  edx,WORD PTR [rsp]
  43526b:	mov    rsi,QWORD PTR [rsp+0x40]
  435270:	mov    rax,QWORD PTR [rsp+0x48]
  435275:	cmp    rax,0x10
  435279:	setb   bl
  43527c:	test   rsi,rsi
  43527f:	sete   cl
  435282:	or     cl,bl
  435284:	cmp    edx,0x2
  435287:	jne    435324 <strcmp@plt+0x31b9c>
  43528d:	test   cl,cl
  43528f:	jne    4353a9 <strcmp@plt+0x31c21>
  435295:	add    rax,rsi
  435298:	nop    DWORD PTR [rax+rax*1+0x0]
  4352a0:	cmp    DWORD PTR [rsi+0x8],0x0
  4352a4:	jne    4352b0 <strcmp@plt+0x31b28>
  4352a6:	cmp    DWORD PTR [rsi+0xc],0x8
  4352aa:	je     435398 <strcmp@plt+0x31c10>
  4352b0:	mov    rcx,QWORD PTR [rsi]
  4352b3:	cmp    rcx,0x10
  4352b7:	jb     4353a9 <strcmp@plt+0x31c21>
  4352bd:	add    rcx,0x7
  4352c1:	and    rcx,0xfffffffffffffff8
  4352c5:	lea    rdx,[rsi+rcx*1]
  4352c9:	add    rdx,0x10
  4352cd:	cmp    rdx,rax
  4352d0:	ja     4353a9 <strcmp@plt+0x31c21>
  4352d6:	add    rsi,rcx
  4352d9:	mov    rcx,QWORD PTR [rsi]
  4352dc:	add    rcx,0x7
  4352e0:	and    rcx,0xfffffffffffffff8
  4352e4:	add    rcx,rsi
  4352e7:	cmp    rcx,rax
  4352ea:	ja     4353a9 <strcmp@plt+0x31c21>
  4352f0:	test   rsi,rsi
  4352f3:	jne    4352a0 <strcmp@plt+0x31b18>
  4352f5:	jmp    4353a9 <strcmp@plt+0x31c21>
  4352fa:	call   403040 <__errno_location@plt>
  4352ff:	mov    edi,DWORD PTR [rax]
  435301:	call   403170 <strerror@plt>
  435306:	mov    rcx,rax
  435309:	lea    rsi,[rip+0x17ad6]        # 44cde6 <strcmp@plt+0x4965e>
  435310:	mov    edi,0x3
  435315:	xor    eax,eax
  435317:	mov    rdx,rcx
  43531a:	call   42e800 <strcmp@plt+0x2b078>
  43531f:	jmp    4353ce <strcmp@plt+0x31c46>
  435324:	test   cl,cl
  435326:	jne    435388 <strcmp@plt+0x31c00>
  435328:	add    rax,rsi
  43532b:	nop    DWORD PTR [rax+rax*1+0x0]
  435330:	cmp    DWORD PTR [rsi+0x8],0x29
  435334:	jne    43533c <strcmp@plt+0x31bb4>
  435336:	cmp    DWORD PTR [rsi+0xc],0x32
  43533a:	je     435377 <strcmp@plt+0x31bef>
  43533c:	mov    rcx,QWORD PTR [rsi]
  43533f:	cmp    rcx,0x10
  435343:	jb     435388 <strcmp@plt+0x31c00>
  435345:	add    rcx,0x7
  435349:	and    rcx,0xfffffffffffffff8
  43534d:	lea    rdx,[rsi+rcx*1]
  435351:	add    rdx,0x10
  435355:	cmp    rdx,rax
  435358:	ja     435388 <strcmp@plt+0x31c00>
  43535a:	add    rsi,rcx
  43535d:	mov    rcx,QWORD PTR [rsi]
  435360:	add    rcx,0x7
  435364:	and    rcx,0xfffffffffffffff8
  435368:	add    rcx,rsi
  43536b:	cmp    rcx,rax
  43536e:	ja     435388 <strcmp@plt+0x31c00>
  435370:	test   rsi,rsi
  435373:	jne    435330 <strcmp@plt+0x31ba8>
  435375:	jmp    435388 <strcmp@plt+0x31c00>
  435377:	add    rsi,0x10
  43537b:	mov    edx,0xa
  435380:	mov    rdi,r14
  435383:	call   423b50 <strcmp@plt+0x203c8>
  435388:	lea    rdi,[r14+0x20]
  43538c:	lea    rsi,[rsp+0x8]
  435391:	mov    edx,0xa
  435396:	jmp    4353b7 <strcmp@plt+0x31c2f>
  435398:	add    rsi,0x18
  43539c:	mov    edx,0x2
  4353a1:	mov    rdi,r14
  4353a4:	call   423b50 <strcmp@plt+0x203c8>
  4353a9:	lea    rdi,[r14+0x20]
  4353ad:	lea    rsi,[rsp+0x4]
  4353b2:	mov    edx,0x2
  4353b7:	call   423b50 <strcmp@plt+0x203c8>
  4353bc:	movzx  eax,WORD PTR [rsp+0x2]
  4353c1:	movbe  WORD PTR [r14+0x42],ax
  4353c8:	mov    r15d,0x1
  4353ce:	mov    eax,r15d
  4353d1:	lea    rsp,[rbp-0x18]
  4353d5:	pop    rbx
  4353d6:	pop    r14
  4353d8:	pop    r15
  4353da:	pop    rbp
  4353db:	ret    
  4353dc:	nop    DWORD PTR [rax+0x0]
  4353e0:	push   rbp
  4353e1:	mov    rbp,rsp
  4353e4:	push   r15
  4353e6:	push   r14
  4353e8:	push   r13
  4353ea:	push   r12
  4353ec:	push   rbx
  4353ed:	and    rsp,0xffffffffffffffe0
  4353f1:	sub    rsp,0xc0
  4353f8:	mov    r15,r8
  4353fb:	mov    r12,rcx
  4353fe:	mov    r14,rdx
  435401:	mov    rbx,rsi
  435404:	mov    rax,QWORD PTR [rsi+0x38]
  435408:	mov    QWORD PTR [rsp+0x40],rax
  43540d:	mov    ecx,DWORD PTR [rsi+0x30]
  435410:	add    ecx,DWORD PTR [rsi+0x10]
  435413:	add    eax,DWORD PTR [rsi+0x14]
  435416:	sub    ecx,eax
  435418:	vxorps xmm0,xmm0,xmm0
  43541c:	vmovaps YMMWORD PTR [rsp],ymm0
  435421:	mov    QWORD PTR [rsp+0x48],rcx
  435426:	vmovups YMMWORD PTR [rsp+0x18],ymm0
  43542c:	lea    rax,[rsp+0x40]
  435431:	mov    QWORD PTR [rsp+0x10],rax
  435436:	mov    QWORD PTR [rsp+0x18],0x1
  43543f:	lea    rax,[rsp+0x78]
  435444:	mov    QWORD PTR [rsp+0x20],rax
  435449:	mov    QWORD PTR [rsp+0x28],0x30
  435452:	lea    rax,[rsp+0x58]
  435457:	mov    QWORD PTR [rsp],rax
  43545b:	mov    DWORD PTR [rsp+0x8],0x1c
  435463:	mov    rsi,rsp
  435466:	xor    r13d,r13d
  435469:	xor    edx,edx
  43546b:	vzeroupper 
  43546e:	call   403130 <recvmsg@plt>
  435473:	cmp    eax,0xffffffff
  435476:	je     435537 <strcmp@plt+0x31daf>
  43547c:	add    DWORD PTR [rbx+0x14],eax
  43547f:	movzx  esi,WORD PTR [rsp+0x58]
  435484:	mov    rcx,QWORD PTR [rsp+0x20]
  435489:	mov    rdx,QWORD PTR [rsp+0x28]
  43548e:	cmp    rdx,0x10
  435492:	setb   al
  435495:	test   rcx,rcx
  435498:	sete   bl
  43549b:	or     bl,al
  43549d:	cmp    esi,0x2
  4354a0:	jne    435561 <strcmp@plt+0x31dd9>
  4354a6:	mov    eax,0x2
  4354ab:	test   bl,bl
  4354ad:	jne    4355d9 <strcmp@plt+0x31e51>
  4354b3:	add    rdx,rcx
  4354b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4354c0:	cmp    DWORD PTR [rcx+0x8],0x0
  4354c4:	je     435510 <strcmp@plt+0x31d88>
  4354c6:	mov    rsi,QWORD PTR [rcx]
  4354c9:	cmp    rsi,0x10
  4354cd:	jb     4355d9 <strcmp@plt+0x31e51>
  4354d3:	add    rsi,0x7
  4354d7:	and    rsi,0xfffffffffffffff8
  4354db:	lea    rdi,[rcx+rsi*1]
  4354df:	add    rdi,0x10
  4354e3:	cmp    rdi,rdx
  4354e6:	ja     4355d9 <strcmp@plt+0x31e51>
  4354ec:	add    rcx,rsi
  4354ef:	mov    rsi,QWORD PTR [rcx]
  4354f2:	add    rsi,0x7
  4354f6:	and    rsi,0xfffffffffffffff8
  4354fa:	add    rsi,rcx
  4354fd:	cmp    rsi,rdx
  435500:	ja     4355d9 <strcmp@plt+0x31e51>
  435506:	test   rcx,rcx
  435509:	jne    4354c0 <strcmp@plt+0x31d38>
  43550b:	jmp    4355d9 <strcmp@plt+0x31e51>
  435510:	mov    esi,DWORD PTR [rcx+0xc]
  435513:	cmp    esi,0x2
  435516:	jne    435529 <strcmp@plt+0x31da1>
  435518:	movzx  ebx,BYTE PTR [rcx+0x10]
  43551c:	mov    BYTE PTR [r12],bl
  435520:	cmp    DWORD PTR [rcx+0x8],0x0
  435524:	jne    4354c6 <strcmp@plt+0x31d3e>
  435526:	mov    esi,DWORD PTR [rcx+0xc]
  435529:	cmp    esi,0x1
  43552c:	jne    4354c6 <strcmp@plt+0x31d3e>
  43552e:	movzx  ebx,BYTE PTR [rcx+0x10]
  435532:	mov    BYTE PTR [r15],bl
  435535:	jmp    4354c6 <strcmp@plt+0x31d3e>
  435537:	call   403040 <__errno_location@plt>
  43553c:	mov    edi,DWORD PTR [rax]
  43553e:	call   403170 <strerror@plt>
  435543:	mov    rcx,rax
  435546:	lea    rsi,[rip+0x178bb]        # 44ce08 <strcmp@plt+0x49680>
  43554d:	mov    edi,0x3
  435552:	xor    eax,eax
  435554:	mov    rdx,rcx
  435557:	call   42e800 <strcmp@plt+0x2b078>
  43555c:	jmp    4355e2 <strcmp@plt+0x31e5a>
  435561:	mov    eax,0xa
  435566:	test   bl,bl
  435568:	jne    4355d9 <strcmp@plt+0x31e51>
  43556a:	add    rdx,rcx
  43556d:	nop    DWORD PTR [rax]
  435570:	cmp    DWORD PTR [rcx+0x8],0x29
  435574:	jne    4355a0 <strcmp@plt+0x31e18>
  435576:	mov    esi,DWORD PTR [rcx+0xc]
  435579:	cmp    esi,0x34
  43557c:	jne    43558f <strcmp@plt+0x31e07>
  43557e:	movzx  ebx,BYTE PTR [rcx+0x10]
  435582:	mov    BYTE PTR [r12],bl
  435586:	cmp    DWORD PTR [rcx+0x8],0x29
  43558a:	jne    4355a0 <strcmp@plt+0x31e18>
  43558c:	mov    esi,DWORD PTR [rcx+0xc]
  43558f:	cmp    esi,0x43
  435592:	jne    4355a0 <strcmp@plt+0x31e18>
  435594:	movzx  ebx,BYTE PTR [rcx+0x10]
  435598:	mov    BYTE PTR [r15],bl
  43559b:	nop    DWORD PTR [rax+rax*1+0x0]
  4355a0:	mov    rsi,QWORD PTR [rcx]
  4355a3:	cmp    rsi,0x10
  4355a7:	jb     4355d9 <strcmp@plt+0x31e51>
  4355a9:	add    rsi,0x7
  4355ad:	and    rsi,0xfffffffffffffff8
  4355b1:	lea    rdi,[rcx+rsi*1]
  4355b5:	add    rdi,0x10
  4355b9:	cmp    rdi,rdx
  4355bc:	ja     4355d9 <strcmp@plt+0x31e51>
  4355be:	add    rcx,rsi
  4355c1:	mov    rsi,QWORD PTR [rcx]
  4355c4:	add    rsi,0x7
  4355c8:	and    rsi,0xfffffffffffffff8
  4355cc:	add    rsi,rcx
  4355cf:	cmp    rsi,rdx
  4355d2:	ja     4355d9 <strcmp@plt+0x31e51>
  4355d4:	test   rcx,rcx
  4355d7:	jne    435570 <strcmp@plt+0x31de8>
  4355d9:	mov    DWORD PTR [r14],eax
  4355dc:	mov    r13d,0x1
  4355e2:	mov    eax,r13d
  4355e5:	lea    rsp,[rbp-0x28]
  4355e9:	pop    rbx
  4355ea:	pop    r12
  4355ec:	pop    r13
  4355ee:	pop    r14
  4355f0:	pop    r15
  4355f2:	pop    rbp
  4355f3:	ret    
  4355f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4355fe:	xchg   ax,ax
  435600:	push   r14
  435602:	push   rbx
  435603:	push   rax
  435604:	mov    r14,r8
  435607:	mov    rbx,rdi
  43560a:	mov    WORD PTR [rdi+0x40],si
  43560e:	mov    WORD PTR [rdi+0x42],dx
  435612:	test   rcx,rcx
  435615:	je     435624 <strcmp@plt+0x31e9c>
  435617:	mov    rdi,rbx
  43561a:	mov    rsi,rcx
  43561d:	call   423560 <strcmp@plt+0x1fdd8>
  435622:	jmp    43562e <strcmp@plt+0x31ea6>
  435624:	xor    esi,esi
  435626:	mov    rdi,rbx
  435629:	call   4231a0 <strcmp@plt+0x1fa18>
  43562e:	add    rbx,0x20
  435632:	test   r14,r14
  435635:	je     435644 <strcmp@plt+0x31ebc>
  435637:	mov    rdi,rbx
  43563a:	mov    rsi,r14
  43563d:	call   423560 <strcmp@plt+0x1fdd8>
  435642:	jmp    43564e <strcmp@plt+0x31ec6>
  435644:	xor    esi,esi
  435646:	mov    rdi,rbx
  435649:	call   4231a0 <strcmp@plt+0x1fa18>
  43564e:	mov    eax,0x1
  435653:	add    rsp,0x8
  435657:	pop    rbx
  435658:	pop    r14
  43565a:	ret    
  43565b:	nop    DWORD PTR [rax+rax*1+0x0]
  435660:	push   rbx
  435661:	mov    rbx,rdi
  435664:	mov    edi,0x48
  435669:	call   4320b0 <strcmp@plt+0x2e928>
  43566e:	vmovups ymm0,YMMWORD PTR [rbx]
  435672:	vmovups ymm1,YMMWORD PTR [rbx+0x20]
  435677:	vmovups YMMWORD PTR [rax],ymm0
  43567b:	vmovups YMMWORD PTR [rax+0x20],ymm1
  435680:	mov    rcx,QWORD PTR [rbx+0x40]
  435684:	mov    QWORD PTR [rax+0x40],rcx
  435688:	pop    rbx
  435689:	vzeroupper 
  43568c:	ret    
  43568d:	nop    DWORD PTR [rax]
  435690:	push   r14
  435692:	push   rbx
  435693:	push   rax
  435694:	mov    r14,rsi
  435697:	mov    rbx,rdi
  43569a:	test   dl,dl
  43569c:	je     4356c0 <strcmp@plt+0x31f38>
  43569e:	lea    rsi,[rbx+0x20]
  4356a2:	mov    rdi,r14
  4356a5:	call   423560 <strcmp@plt+0x1fdd8>
  4356aa:	lea    rdi,[r14+0x20]
  4356ae:	mov    rsi,rbx
  4356b1:	call   423560 <strcmp@plt+0x1fdd8>
  4356b6:	lea    rax,[rbx+0x42]
  4356ba:	add    rbx,0x40
  4356be:	jmp    4356e0 <strcmp@plt+0x31f58>
  4356c0:	mov    rdi,r14
  4356c3:	mov    rsi,rbx
  4356c6:	call   423560 <strcmp@plt+0x1fdd8>
  4356cb:	lea    rdi,[r14+0x20]
  4356cf:	lea    rsi,[rbx+0x20]
  4356d3:	call   423560 <strcmp@plt+0x1fdd8>
  4356d8:	lea    rax,[rbx+0x40]
  4356dc:	add    rbx,0x42
  4356e0:	movzx  ecx,WORD PTR [rbx]
  4356e3:	movzx  eax,WORD PTR [rax]
  4356e6:	mov    WORD PTR [r14+0x40],ax
  4356eb:	mov    WORD PTR [r14+0x42],cx
  4356f0:	add    rsp,0x8
  4356f4:	pop    rbx
  4356f5:	pop    r14
  4356f7:	ret    
  4356f8:	nop    DWORD PTR [rax+rax*1+0x0]
  435700:	push   rbp
  435701:	push   rbx
  435702:	push   rax
  435703:	mov    ebp,edi
  435705:	mov    DWORD PTR [rsp+0x4],0x1
  43570d:	mov    esi,0x3
  435712:	mov    edx,0xff
  435717:	call   4030f0 <socket@plt>
  43571c:	test   eax,eax
  43571e:	js     435768 <strcmp@plt+0x31fe0>
  435720:	mov    ebx,eax
  435722:	lea    rcx,[rsp+0x4]
  435727:	mov    esi,0x1
  43572c:	mov    edx,0x2
  435731:	mov    r8d,0x4
  435737:	mov    edi,eax
  435739:	call   4036f0 <setsockopt@plt>
  43573e:	cmp    eax,0xffffffff
  435741:	je     43578f <strcmp@plt+0x32007>
  435743:	lea    rax,[rip+0x2f666]        # 464db0 <strcmp@plt+0x61628>
  43574a:	cmp    DWORD PTR [rax],0x3
  43574d:	jl     4357c0 <strcmp@plt+0x32038>
  43574f:	lea    rsi,[rip+0x1772a]        # 44ce80 <strcmp@plt+0x496f8>
  435756:	mov    edi,0x7
  43575b:	xor    eax,eax
  43575d:	mov    edx,ebx
  43575f:	mov    ecx,ebp
  435761:	call   42e800 <strcmp@plt+0x2b078>
  435766:	jmp    4357c0 <strcmp@plt+0x32038>
  435768:	call   403040 <__errno_location@plt>
  43576d:	mov    edi,DWORD PTR [rax]
  43576f:	call   403170 <strerror@plt>
  435774:	mov    rcx,rax
  435777:	lea    rsi,[rip+0x176a9]        # 44ce27 <strcmp@plt+0x4969f>
  43577e:	mov    edi,0x2
  435783:	xor    eax,eax
  435785:	mov    rdx,rcx
  435788:	call   42e800 <strcmp@plt+0x2b078>
  43578d:	jmp    4357bb <strcmp@plt+0x32033>
  43578f:	call   403040 <__errno_location@plt>
  435794:	mov    edi,DWORD PTR [rax]
  435796:	call   403170 <strerror@plt>
  43579b:	mov    rcx,rax
  43579e:	lea    rsi,[rip+0x176b0]        # 44ce55 <strcmp@plt+0x496cd>
  4357a5:	mov    edi,0x3
  4357aa:	xor    eax,eax
  4357ac:	mov    rdx,rcx
  4357af:	call   42e800 <strcmp@plt+0x2b078>
  4357b4:	mov    edi,ebx
  4357b6:	call   403760 <close@plt>
  4357bb:	mov    ebx,0xfffffff7
  4357c0:	mov    eax,ebx
  4357c2:	add    rsp,0x8
  4357c6:	pop    rbx
  4357c7:	pop    rbp
  4357c8:	ret    
  4357c9:	nop    DWORD PTR [rax+0x0]
  4357d0:	push   rbp
  4357d1:	push   rbx
  4357d2:	push   rax
  4357d3:	mov    ebp,edi
  4357d5:	mov    DWORD PTR [rsp+0x4],0x1
  4357dd:	lea    rdi,[rip+0x176cc]        # 44ceb0 <strcmp@plt+0x49728>
  4357e4:	call   4031c0 <getprotobyname@plt>
  4357e9:	test   rax,rax
  4357ec:	je     435894 <strcmp@plt+0x3210c>
  4357f2:	mov    edx,DWORD PTR [rax+0x10]
  4357f5:	mov    esi,0x3
  4357fa:	mov    edi,ebp
  4357fc:	call   4030f0 <socket@plt>
  435801:	test   eax,eax
  435803:	js     4358c0 <strcmp@plt+0x32138>
  435809:	mov    ebx,eax
  43580b:	lea    rax,[rip+0x2f59e]        # 464db0 <strcmp@plt+0x61628>
  435812:	cmp    DWORD PTR [rax],0x3
  435815:	jl     435841 <strcmp@plt+0x320b9>
  435817:	cmp    ebp,0x2
  43581a:	lea    rax,[rip+0xe122]        # 443943 <strcmp@plt+0x401bb>
  435821:	lea    rcx,[rip+0xe120]        # 443948 <strcmp@plt+0x401c0>
  435828:	cmove  rcx,rax
  43582c:	lea    rsi,[rip+0x176c9]        # 44cefc <strcmp@plt+0x49774>
  435833:	mov    edi,0x7
  435838:	xor    eax,eax
  43583a:	mov    edx,ebx
  43583c:	call   42e800 <strcmp@plt+0x2b078>
  435841:	lea    rcx,[rsp+0x4]
  435846:	mov    esi,0x1
  43584b:	mov    edx,0x2
  435850:	mov    r8d,0x4
  435856:	mov    edi,ebx
  435858:	call   4036f0 <setsockopt@plt>
  43585d:	cmp    eax,0xffffffff
  435860:	jne    4358ea <strcmp@plt+0x32162>
  435866:	call   403040 <__errno_location@plt>
  43586b:	mov    edi,DWORD PTR [rax]
  43586d:	call   403170 <strerror@plt>
  435872:	mov    rcx,rax
  435875:	lea    rsi,[rip+0x176c3]        # 44cf3f <strcmp@plt+0x497b7>
  43587c:	mov    edi,0x3
  435881:	xor    eax,eax
  435883:	mov    rdx,rcx
  435886:	call   42e800 <strcmp@plt+0x2b078>
  43588b:	mov    edi,ebx
  43588d:	call   403760 <close@plt>
  435892:	jmp    4358e5 <strcmp@plt+0x3215d>
  435894:	call   403040 <__errno_location@plt>
  435899:	mov    edi,DWORD PTR [rax]
  43589b:	call   403170 <strerror@plt>
  4358a0:	mov    rcx,rax
  4358a3:	lea    rsi,[rip+0x1760a]        # 44ceb4 <strcmp@plt+0x4972c>
  4358aa:	mov    edi,0x2
  4358af:	xor    eax,eax
  4358b1:	mov    rdx,rcx
  4358b4:	call   42e800 <strcmp@plt+0x2b078>
  4358b9:	mov    ebx,0xffffffff
  4358be:	jmp    4358ea <strcmp@plt+0x32162>
  4358c0:	call   403040 <__errno_location@plt>
  4358c5:	mov    edi,DWORD PTR [rax]
  4358c7:	call   403170 <strerror@plt>
  4358cc:	mov    rcx,rax
  4358cf:	lea    rsi,[rip+0x17606]        # 44cedc <strcmp@plt+0x49754>
  4358d6:	mov    edi,0x2
  4358db:	xor    eax,eax
  4358dd:	mov    rdx,rcx
  4358e0:	call   42e800 <strcmp@plt+0x2b078>
  4358e5:	mov    ebx,0xfffffff7
  4358ea:	mov    eax,ebx
  4358ec:	add    rsp,0x8
  4358f0:	pop    rbx
  4358f1:	pop    rbp
  4358f2:	ret    
  4358f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4358fd:	nop    DWORD PTR [rax]
  435900:	push   rbp
  435901:	push   rbx
  435902:	push   rax
  435903:	mov    ebp,edi
  435905:	mov    DWORD PTR [rsp+0x4],0x1
  43590d:	lea    rdi,[rip+0x1759c]        # 44ceb0 <strcmp@plt+0x49728>
  435914:	call   4031c0 <getprotobyname@plt>
  435919:	test   rax,rax
  43591c:	je     4359af <strcmp@plt+0x32227>
  435922:	mov    edx,DWORD PTR [rax+0x10]
  435925:	mov    esi,0x2
  43592a:	mov    edi,ebp
  43592c:	call   4030f0 <socket@plt>
  435931:	test   eax,eax
  435933:	js     4359c7 <strcmp@plt+0x3223f>
  435939:	mov    ebx,eax
  43593b:	lea    rax,[rip+0x2f46e]        # 464db0 <strcmp@plt+0x61628>
  435942:	cmp    DWORD PTR [rax],0x3
  435945:	jl     435971 <strcmp@plt+0x321e9>
  435947:	cmp    ebp,0x2
  43594a:	lea    rax,[rip+0xdff2]        # 443943 <strcmp@plt+0x401bb>
  435951:	lea    rcx,[rip+0xdff0]        # 443948 <strcmp@plt+0x401c0>
  435958:	cmove  rcx,rax
  43595c:	lea    rsi,[rip+0x1765f]        # 44cfc2 <strcmp@plt+0x4983a>
  435963:	mov    edi,0x7
  435968:	xor    eax,eax
  43596a:	mov    edx,ebx
  43596c:	call   42e800 <strcmp@plt+0x2b078>
  435971:	lea    rcx,[rsp+0x4]
  435976:	mov    esi,0x1
  43597b:	mov    edx,0x2
  435980:	mov    r8d,0x4
  435986:	mov    edi,ebx
  435988:	call   4036f0 <setsockopt@plt>
  43598d:	cmp    eax,0xffffffff
  435990:	jne    4359f1 <strcmp@plt+0x32269>
  435992:	call   403040 <__errno_location@plt>
  435997:	mov    edi,DWORD PTR [rax]
  435999:	call   403170 <strerror@plt>
  43599e:	mov    rcx,rax
  4359a1:	lea    rsi,[rip+0x17662]        # 44d00a <strcmp@plt+0x49882>
  4359a8:	mov    edi,0x3
  4359ad:	jmp    4359e2 <strcmp@plt+0x3225a>
  4359af:	call   403040 <__errno_location@plt>
  4359b4:	mov    edi,DWORD PTR [rax]
  4359b6:	call   403170 <strerror@plt>
  4359bb:	mov    rcx,rax
  4359be:	lea    rsi,[rip+0x175ab]        # 44cf70 <strcmp@plt+0x497e8>
  4359c5:	jmp    4359dd <strcmp@plt+0x32255>
  4359c7:	call   403040 <__errno_location@plt>
  4359cc:	mov    edi,DWORD PTR [rax]
  4359ce:	call   403170 <strerror@plt>
  4359d3:	mov    rcx,rax
  4359d6:	lea    rsi,[rip+0x175c0]        # 44cf9d <strcmp@plt+0x49815>
  4359dd:	mov    edi,0x2
  4359e2:	xor    eax,eax
  4359e4:	mov    rdx,rcx
  4359e7:	call   42e800 <strcmp@plt+0x2b078>
  4359ec:	mov    ebx,0xfffffff7
  4359f1:	mov    eax,ebx
  4359f3:	add    rsp,0x8
  4359f7:	pop    rbx
  4359f8:	pop    rbp
  4359f9:	ret    
  4359fa:	nop    WORD PTR [rax+rax*1+0x0]
  435a00:	push   rbx
  435a01:	sub    rsp,0x10
  435a05:	mov    QWORD PTR [rsp],0x0
  435a0d:	mov    WORD PTR [rsp],0x10
  435a13:	mov    DWORD PTR [rsp+0x8],0x771
  435a1b:	mov    edi,0x10
  435a20:	mov    esi,0x3
  435a25:	xor    edx,edx
  435a27:	call   4030f0 <socket@plt>
  435a2c:	test   eax,eax
  435a2e:	js     435a43 <strcmp@plt+0x322bb>
  435a30:	mov    ebx,eax
  435a32:	mov    rsi,rsp
  435a35:	mov    edx,0xc
  435a3a:	mov    edi,eax
  435a3c:	call   403090 <bind@plt>
  435a41:	jmp    435a5b <strcmp@plt+0x322d3>
  435a43:	lea    rsi,[rip+0x175f6]        # 44d040 <strcmp@plt+0x498b8>
  435a4a:	mov    edi,0x2
  435a4f:	xor    eax,eax
  435a51:	call   42e800 <strcmp@plt+0x2b078>
  435a56:	mov    ebx,0xfffffff7
  435a5b:	mov    eax,ebx
  435a5d:	add    rsp,0x10
  435a61:	pop    rbx
  435a62:	ret    
  435a63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435a6d:	nop    DWORD PTR [rax]
  435a70:	push   rbp
  435a71:	push   r14
  435a73:	push   rbx
  435a74:	mov    rbx,rsi
  435a77:	mov    ebp,edi
  435a79:	mov    rdi,rsi
  435a7c:	call   4031e0 <strlen@plt>
  435a81:	mov    r14d,0x1
  435a87:	mov    esi,0x1
  435a8c:	mov    edx,0x19
  435a91:	mov    edi,ebp
  435a93:	mov    rcx,rbx
  435a96:	mov    r8d,eax
  435a99:	call   4036f0 <setsockopt@plt>
  435a9e:	cmp    eax,0xffffffff
  435aa1:	jne    435acb <strcmp@plt+0x32343>
  435aa3:	call   403040 <__errno_location@plt>
  435aa8:	mov    edi,DWORD PTR [rax]
  435aaa:	call   403170 <strerror@plt>
  435aaf:	mov    rcx,rax
  435ab2:	lea    rsi,[rip+0x175c1]        # 44d07a <strcmp@plt+0x498f2>
  435ab9:	xor    r14d,r14d
  435abc:	mov    edi,0x3
  435ac1:	xor    eax,eax
  435ac3:	mov    rdx,rcx
  435ac6:	call   42e800 <strcmp@plt+0x2b078>
  435acb:	mov    eax,r14d
  435ace:	pop    rbx
  435acf:	pop    r14
  435ad1:	pop    rbp
  435ad2:	ret    
  435ad3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435add:	nop    DWORD PTR [rax]
  435ae0:	push   rbp
  435ae1:	push   rbx
  435ae2:	push   rax
  435ae3:	mov    ebp,edi
  435ae5:	mov    DWORD PTR [rsp+0x4],0x1
  435aed:	cmp    esi,0xa
  435af0:	je     435b76 <strcmp@plt+0x323ee>
  435af6:	xor    ebx,ebx
  435af8:	cmp    esi,0x2
  435afb:	jne    435c12 <strcmp@plt+0x3248a>
  435b01:	xor    ebx,ebx
  435b03:	lea    rcx,[rsp+0x4]
  435b08:	xor    esi,esi
  435b0a:	mov    edx,0xd
  435b0f:	mov    r8d,0x4
  435b15:	mov    edi,ebp
  435b17:	call   4036f0 <setsockopt@plt>
  435b1c:	test   eax,eax
  435b1e:	js     435bd3 <strcmp@plt+0x3244b>
  435b24:	lea    rcx,[rsp+0x4]
  435b29:	xor    esi,esi
  435b2b:	mov    edx,0xc
  435b30:	mov    r8d,0x4
  435b36:	mov    edi,ebp
  435b38:	call   4036f0 <setsockopt@plt>
  435b3d:	mov    ebx,0x1
  435b42:	test   eax,eax
  435b44:	jns    435c12 <strcmp@plt+0x3248a>
  435b4a:	call   403040 <__errno_location@plt>
  435b4f:	mov    edi,DWORD PTR [rax]
  435b51:	call   403170 <strerror@plt>
  435b56:	mov    rcx,rax
  435b59:	lea    rsi,[rip+0x17585]        # 44d0e5 <strcmp@plt+0x4995d>
  435b60:	mov    edi,0x3
  435b65:	xor    eax,eax
  435b67:	mov    rdx,rcx
  435b6a:	call   42e800 <strcmp@plt+0x2b078>
  435b6f:	xor    ebx,ebx
  435b71:	jmp    435c12 <strcmp@plt+0x3248a>
  435b76:	lea    rcx,[rsp+0x4]
  435b7b:	mov    esi,0x29
  435b80:	mov    edx,0x42
  435b85:	mov    r8d,0x4
  435b8b:	mov    edi,ebp
  435b8d:	call   4036f0 <setsockopt@plt>
  435b92:	test   eax,eax
  435b94:	js     435beb <strcmp@plt+0x32463>
  435b96:	lea    rcx,[rsp+0x4]
  435b9b:	mov    esi,0x29
  435ba0:	mov    edx,0x33
  435ba5:	mov    r8d,0x4
  435bab:	mov    edi,ebp
  435bad:	call   4036f0 <setsockopt@plt>
  435bb2:	mov    ebx,0x1
  435bb7:	test   eax,eax
  435bb9:	jns    435c12 <strcmp@plt+0x3248a>
  435bbb:	call   403040 <__errno_location@plt>
  435bc0:	mov    edi,DWORD PTR [rax]
  435bc2:	call   403170 <strerror@plt>
  435bc7:	mov    rcx,rax
  435bca:	lea    rsi,[rip+0x1757f]        # 44d150 <strcmp@plt+0x499c8>
  435bd1:	jmp    435c01 <strcmp@plt+0x32479>
  435bd3:	call   403040 <__errno_location@plt>
  435bd8:	mov    edi,DWORD PTR [rax]
  435bda:	call   403170 <strerror@plt>
  435bdf:	mov    rcx,rax
  435be2:	lea    rsi,[rip+0x174c9]        # 44d0b2 <strcmp@plt+0x4992a>
  435be9:	jmp    435c03 <strcmp@plt+0x3247b>
  435beb:	call   403040 <__errno_location@plt>
  435bf0:	mov    edi,DWORD PTR [rax]
  435bf2:	call   403170 <strerror@plt>
  435bf7:	mov    rcx,rax
  435bfa:	lea    rsi,[rip+0x17517]        # 44d118 <strcmp@plt+0x49990>
  435c01:	xor    ebx,ebx
  435c03:	mov    edi,0x3
  435c08:	xor    eax,eax
  435c0a:	mov    rdx,rcx
  435c0d:	call   42e800 <strcmp@plt+0x2b078>
  435c12:	mov    eax,ebx
  435c14:	add    rsp,0x8
  435c18:	pop    rbx
  435c19:	pop    rbp
  435c1a:	ret    
  435c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  435c20:	push   rbp
  435c21:	push   rbx
  435c22:	push   rax
  435c23:	mov    ebp,edi
  435c25:	mov    DWORD PTR [rsp+0x4],edx
  435c29:	mov    DWORD PTR [rsp],ecx
  435c2c:	cmp    esi,0xa
  435c2f:	je     435c99 <strcmp@plt+0x32511>
  435c31:	xor    ebx,ebx
  435c33:	cmp    esi,0x2
  435c36:	jne    435d44 <strcmp@plt+0x325bc>
  435c3c:	mov    ebx,0x1
  435c41:	mov    rcx,rsp
  435c44:	xor    esi,esi
  435c46:	mov    edx,0x1
  435c4b:	mov    r8d,0x4
  435c51:	mov    edi,ebp
  435c53:	call   4036f0 <setsockopt@plt>
  435c58:	test   eax,eax
  435c5a:	js     435cf4 <strcmp@plt+0x3256c>
  435c60:	lea    rcx,[rsp+0x4]
  435c65:	xor    esi,esi
  435c67:	mov    edx,0x2
  435c6c:	mov    r8d,0x4
  435c72:	mov    edi,ebp
  435c74:	call   4036f0 <setsockopt@plt>
  435c79:	test   eax,eax
  435c7b:	jns    435d44 <strcmp@plt+0x325bc>
  435c81:	call   403040 <__errno_location@plt>
  435c86:	mov    edi,DWORD PTR [rax]
  435c88:	call   403170 <strerror@plt>
  435c8d:	mov    rcx,rax
  435c90:	lea    rsi,[rip+0x17522]        # 44d1b9 <strcmp@plt+0x49a31>
  435c97:	jmp    435d0a <strcmp@plt+0x32582>
  435c99:	mov    rcx,rsp
  435c9c:	mov    esi,0x29
  435ca1:	mov    edx,0x43
  435ca6:	mov    r8d,0x4
  435cac:	mov    edi,ebp
  435cae:	call   4036f0 <setsockopt@plt>
  435cb3:	test   eax,eax
  435cb5:	js     435d1d <strcmp@plt+0x32595>
  435cb7:	lea    rcx,[rsp+0x4]
  435cbc:	mov    esi,0x29
  435cc1:	mov    edx,0x34
  435cc6:	mov    r8d,0x4
  435ccc:	mov    edi,ebp
  435cce:	call   4036f0 <setsockopt@plt>
  435cd3:	mov    ebx,0x1
  435cd8:	test   eax,eax
  435cda:	jns    435d44 <strcmp@plt+0x325bc>
  435cdc:	call   403040 <__errno_location@plt>
  435ce1:	mov    edi,DWORD PTR [rax]
  435ce3:	call   403170 <strerror@plt>
  435ce8:	mov    rcx,rax
  435ceb:	lea    rsi,[rip+0x1752e]        # 44d220 <strcmp@plt+0x49a98>
  435cf2:	jmp    435d33 <strcmp@plt+0x325ab>
  435cf4:	call   403040 <__errno_location@plt>
  435cf9:	mov    edi,DWORD PTR [rax]
  435cfb:	call   403170 <strerror@plt>
  435d00:	mov    rcx,rax
  435d03:	lea    rsi,[rip+0x17480]        # 44d18a <strcmp@plt+0x49a02>
  435d0a:	mov    edi,0x3
  435d0f:	xor    eax,eax
  435d11:	mov    rdx,rcx
  435d14:	call   42e800 <strcmp@plt+0x2b078>
  435d19:	xor    ebx,ebx
  435d1b:	jmp    435d44 <strcmp@plt+0x325bc>
  435d1d:	call   403040 <__errno_location@plt>
  435d22:	mov    edi,DWORD PTR [rax]
  435d24:	call   403170 <strerror@plt>
  435d29:	mov    rcx,rax
  435d2c:	lea    rsi,[rip+0x174b9]        # 44d1ec <strcmp@plt+0x49a64>
  435d33:	xor    ebx,ebx
  435d35:	mov    edi,0x3
  435d3a:	xor    eax,eax
  435d3c:	mov    rdx,rcx
  435d3f:	call   42e800 <strcmp@plt+0x2b078>
  435d44:	mov    eax,ebx
  435d46:	add    rsp,0x8
  435d4a:	pop    rbx
  435d4b:	pop    rbp
  435d4c:	ret    
  435d4d:	nop    DWORD PTR [rax]
  435d50:	push   rbp
  435d51:	push   r15
  435d53:	push   r14
  435d55:	push   r13
  435d57:	push   r12
  435d59:	push   rbx
  435d5a:	sub    rsp,0x28
  435d5e:	mov    r12d,ecx
  435d61:	mov    rbp,rdx
  435d64:	mov    ebx,esi
  435d66:	mov    r15d,edi
  435d69:	xor    r14d,r14d
  435d6c:	cmp    esi,0xa
  435d6f:	je     435da7 <strcmp@plt+0x3261f>
  435d71:	cmp    ebx,0x2
  435d74:	jne    435e77 <strcmp@plt+0x326ef>
  435d7a:	vxorps xmm0,xmm0,xmm0
  435d7e:	vmovaps XMMWORD PTR [rsp],xmm0
  435d83:	mov    WORD PTR [rsp],0x2
  435d89:	test   r12d,r12d
  435d8c:	je     435d96 <strcmp@plt+0x3260e>
  435d8e:	movbe  WORD PTR [rsp+0x2],r12w
  435d96:	test   rbp,rbp
  435d99:	je     435ddd <strcmp@plt+0x32655>
  435d9b:	mov    rdi,rbp
  435d9e:	call   423d50 <strcmp@plt+0x205c8>
  435da3:	mov    eax,DWORD PTR [rax]
  435da5:	jmp    435ddf <strcmp@plt+0x32657>
  435da7:	vxorps xmm0,xmm0,xmm0
  435dab:	vmovaps XMMWORD PTR [rsp],xmm0
  435db0:	vmovups XMMWORD PTR [rsp+0xc],xmm0
  435db6:	mov    WORD PTR [rsp],0xa
  435dbc:	test   r12d,r12d
  435dbf:	je     435dc9 <strcmp@plt+0x32641>
  435dc1:	movbe  WORD PTR [rsp+0x2],r12w
  435dc9:	lea    r13,[rsp+0x8]
  435dce:	test   rbp,rbp
  435dd1:	je     435dea <strcmp@plt+0x32662>
  435dd3:	mov    rdi,rbp
  435dd6:	call   423d60 <strcmp@plt+0x205d8>
  435ddb:	jmp    435df1 <strcmp@plt+0x32669>
  435ddd:	xor    eax,eax
  435ddf:	mov    DWORD PTR [rsp+0x4],eax
  435de3:	mov    edx,0x10
  435de8:	jmp    435e00 <strcmp@plt+0x32678>
  435dea:	mov    rax,QWORD PTR [rip+0x2e1d7]        # 463fc8 <strcmp@plt+0x60840>
  435df1:	vmovups xmm0,XMMWORD PTR [rax]
  435df5:	vmovups XMMWORD PTR [r13+0x0],xmm0
  435dfb:	mov    edx,0x1c
  435e00:	mov    rsi,rsp
  435e03:	mov    edi,r15d
  435e06:	call   403090 <bind@plt>
  435e0b:	lea    rcx,[rip+0x2ef9e]        # 464db0 <strcmp@plt+0x61628>
  435e12:	mov    ecx,DWORD PTR [rcx]
  435e14:	test   eax,eax
  435e16:	je     435e46 <strcmp@plt+0x326be>
  435e18:	test   ecx,ecx
  435e1a:	jle    435e77 <strcmp@plt+0x326ef>
  435e1c:	call   403040 <__errno_location@plt>
  435e21:	mov    edi,DWORD PTR [rax]
  435e23:	call   403170 <strerror@plt>
  435e28:	mov    rcx,rax
  435e2b:	lea    rsi,[rip+0x17424]        # 44d256 <strcmp@plt+0x49ace>
  435e32:	xor    r14d,r14d
  435e35:	mov    edi,0x5
  435e3a:	xor    eax,eax
  435e3c:	mov    rdx,rcx
  435e3f:	call   42e800 <strcmp@plt+0x2b078>
  435e44:	jmp    435e77 <strcmp@plt+0x326ef>
  435e46:	mov    r14d,0x1
  435e4c:	test   ecx,ecx
  435e4e:	jle    435e77 <strcmp@plt+0x326ef>
  435e50:	mov    rdi,rbp
  435e53:	call   423130 <strcmp@plt+0x1f9a8>
  435e58:	mov    rcx,rax
  435e5b:	lea    rsi,[rip+0x17404]        # 44d266 <strcmp@plt+0x49ade>
  435e62:	mov    edi,0x5
  435e67:	xor    eax,eax
  435e69:	mov    edx,r15d
  435e6c:	mov    r8d,r12d
  435e6f:	mov    r9d,ebx
  435e72:	call   42e800 <strcmp@plt+0x2b078>
  435e77:	mov    eax,r14d
  435e7a:	add    rsp,0x28
  435e7e:	pop    rbx
  435e7f:	pop    r12
  435e81:	pop    r13
  435e83:	pop    r14
  435e85:	pop    r15
  435e87:	pop    rbp
  435e88:	ret    
  435e89:	nop    DWORD PTR [rax+0x0]
  435e90:	push   rbp
  435e91:	push   r15
  435e93:	push   r14
  435e95:	push   r13
  435e97:	push   r12
  435e99:	push   rbx
  435e9a:	sub    rsp,0x28
  435e9e:	mov    r13,rcx
  435ea1:	mov    r12d,edx
  435ea4:	mov    r15,rsi
  435ea7:	mov    r14d,edi
  435eaa:	mov    rdi,rcx
  435ead:	call   423d30 <strcmp@plt+0x205a8>
  435eb2:	cmp    eax,0xa
  435eb5:	je     435ee6 <strcmp@plt+0x3275e>
  435eb7:	xor    ebp,ebp
  435eb9:	cmp    eax,0x2
  435ebc:	jne    435f76 <strcmp@plt+0x327ee>
  435ec2:	vxorps xmm0,xmm0,xmm0
  435ec6:	vmovaps XMMWORD PTR [rsp],xmm0
  435ecb:	mov    WORD PTR [rsp],0x2
  435ed1:	lea    rdi,[rsp+0x4]
  435ed6:	mov    rsi,r13
  435ed9:	call   424060 <strcmp@plt+0x208d8>
  435ede:	mov    r9d,0x10
  435ee4:	jmp    435f0e <strcmp@plt+0x32786>
  435ee6:	vxorps xmm0,xmm0,xmm0
  435eea:	vmovaps XMMWORD PTR [rsp],xmm0
  435eef:	vmovups XMMWORD PTR [rsp+0xc],xmm0
  435ef5:	mov    WORD PTR [rsp],0xa
  435efb:	lea    rdi,[rsp+0x8]
  435f00:	mov    rsi,r13
  435f03:	call   424060 <strcmp@plt+0x208d8>
  435f08:	mov    r9d,0x1c
  435f0e:	mov    r8,rsp
  435f11:	movsxd rbx,r12d
  435f14:	xor    ecx,ecx
  435f16:	mov    edi,r14d
  435f19:	mov    rsi,r15
  435f1c:	mov    rdx,rbx
  435f1f:	call   403060 <sendto@plt>
  435f24:	mov    ebp,0x1
  435f29:	cmp    eax,ebx
  435f2b:	je     435f76 <strcmp@plt+0x327ee>
  435f2d:	lea    rax,[rip+0x2ee7c]        # 464db0 <strcmp@plt+0x61628>
  435f34:	cmp    DWORD PTR [rax],0x2
  435f37:	mov    ebp,0x0
  435f3c:	jl     435f76 <strcmp@plt+0x327ee>
  435f3e:	mov    rdi,r13
  435f41:	call   423f30 <strcmp@plt+0x207a8>
  435f46:	mov    r15,rax
  435f49:	call   403040 <__errno_location@plt>
  435f4e:	mov    edi,DWORD PTR [rax]
  435f50:	call   403170 <strerror@plt>
  435f55:	mov    rbx,rax
  435f58:	lea    rsi,[rip+0x17352]        # 44d2b1 <strcmp@plt+0x49b29>
  435f5f:	xor    ebp,ebp
  435f61:	mov    edi,0x6
  435f66:	xor    eax,eax
  435f68:	mov    rdx,r15
  435f6b:	mov    ecx,r14d
  435f6e:	mov    r8,rbx
  435f71:	call   42e800 <strcmp@plt+0x2b078>
  435f76:	mov    eax,ebp
  435f78:	add    rsp,0x28
  435f7c:	pop    rbx
  435f7d:	pop    r12
  435f7f:	pop    r13
  435f81:	pop    r14
  435f83:	pop    r15
  435f85:	pop    rbp
  435f86:	ret    
  435f87:	nop    WORD PTR [rax+rax*1+0x0]
  435f90:	push   rbp
  435f91:	push   r15
  435f93:	push   r14
  435f95:	push   r12
  435f97:	push   rbx
  435f98:	sub    rsp,0x20
  435f9c:	mov    ebp,r8d
  435f9f:	mov    rbx,rcx
  435fa2:	mov    r12d,edx
  435fa5:	mov    r15,rsi
  435fa8:	mov    r14d,edi
  435fab:	mov    rdi,rcx
  435fae:	call   423200 <strcmp@plt+0x1fa78>
  435fb3:	movzx  eax,ax
  435fb6:	cmp    eax,0xa
  435fb9:	je     435ff8 <strcmp@plt+0x32870>
  435fbb:	cmp    eax,0x2
  435fbe:	jne    43608a <strcmp@plt+0x32902>
  435fc4:	mov    DWORD PTR [rsp+0xc],0x0
  435fcc:	mov    QWORD PTR [rsp+0x4],0x0
  435fd5:	movbe  WORD PTR [rsp+0x2],bp
  435fdc:	mov    WORD PTR [rsp],0x2
  435fe2:	mov    rdi,rbx
  435fe5:	call   423d50 <strcmp@plt+0x205c8>
  435fea:	mov    eax,DWORD PTR [rax]
  435fec:	mov    DWORD PTR [rsp+0x4],eax
  435ff0:	mov    r9d,0x10
  435ff6:	jmp    436030 <strcmp@plt+0x328a8>
  435ff8:	vxorps xmm0,xmm0,xmm0
  435ffc:	vmovups XMMWORD PTR [rsp+0x4],xmm0
  436002:	mov    QWORD PTR [rsp+0x14],0x0
  43600b:	mov    WORD PTR [rsp],0xa
  436011:	movbe  WORD PTR [rsp+0x2],bp
  436018:	mov    rdi,rbx
  43601b:	call   423d60 <strcmp@plt+0x205d8>
  436020:	vmovups xmm0,XMMWORD PTR [rax]
  436024:	vmovups XMMWORD PTR [rsp+0x8],xmm0
  43602a:	mov    r9d,0x1c
  436030:	mov    r8,rsp
  436033:	movsxd rdx,r12d
  436036:	xor    ecx,ecx
  436038:	mov    edi,r14d
  43603b:	mov    rsi,r15
  43603e:	call   403060 <sendto@plt>
  436043:	mov    ebp,0x1
  436048:	test   rax,rax
  43604b:	jns    4360b8 <strcmp@plt+0x32930>
  43604d:	lea    rax,[rip+0x2ed5c]        # 464db0 <strcmp@plt+0x61628>
  436054:	cmp    DWORD PTR [rax],0x2
  436057:	mov    ebp,0x0
  43605c:	jl     4360b8 <strcmp@plt+0x32930>
  43605e:	call   403040 <__errno_location@plt>
  436063:	mov    edi,DWORD PTR [rax]
  436065:	call   403170 <strerror@plt>
  43606a:	mov    rcx,rax
  43606d:	lea    rsi,[rip+0x172ab]        # 44d31f <strcmp@plt+0x49b97>
  436074:	xor    ebp,ebp
  436076:	mov    edi,0x6
  43607b:	xor    eax,eax
  43607d:	mov    rdx,rcx
  436080:	mov    ecx,r14d
  436083:	call   42e800 <strcmp@plt+0x2b078>
  436088:	jmp    4360b8 <strcmp@plt+0x32930>
  43608a:	lea    rax,[rip+0x2ed1f]        # 464db0 <strcmp@plt+0x61628>
  436091:	xor    ebp,ebp
  436093:	cmp    DWORD PTR [rax],0x2
  436096:	jl     4360b8 <strcmp@plt+0x32930>
  436098:	mov    rdi,rbx
  43609b:	call   423200 <strcmp@plt+0x1fa78>
  4360a0:	movzx  edx,ax
  4360a3:	lea    rsi,[rip+0x17250]        # 44d2fa <strcmp@plt+0x49b72>
  4360aa:	xor    ebp,ebp
  4360ac:	mov    edi,0x6
  4360b1:	xor    eax,eax
  4360b3:	call   42e800 <strcmp@plt+0x2b078>
  4360b8:	mov    eax,ebp
  4360ba:	add    rsp,0x20
  4360be:	pop    rbx
  4360bf:	pop    r12
  4360c1:	pop    r14
  4360c3:	pop    r15
  4360c5:	pop    rbp
  4360c6:	ret    
  4360c7:	nop    WORD PTR [rax+rax*1+0x0]
  4360d0:	push   rbp
  4360d1:	push   rbx
  4360d2:	push   rax
  4360d3:	mov    rbx,rsi
  4360d6:	mov    rax,rdi
  4360d9:	movzx  edx,WORD PTR [rdi]
  4360dc:	cmp    edx,0xa
  4360df:	je     4360f4 <strcmp@plt+0x3296c>
  4360e1:	movzx  ecx,dx
  4360e4:	cmp    ecx,0x2
  4360e7:	jne    43611c <strcmp@plt+0x32994>
  4360e9:	add    rax,0x4
  4360ed:	mov    edx,0x2
  4360f2:	jmp    4360fd <strcmp@plt+0x32975>
  4360f4:	add    rax,0x8
  4360f8:	mov    edx,0xa
  4360fd:	mov    rdi,rbx
  436100:	mov    rsi,rax
  436103:	call   423b50 <strcmp@plt+0x203c8>
  436108:	mov    ebp,0x1
  43610d:	mov    esi,0x1
  436112:	mov    rdi,rbx
  436115:	call   4231a0 <strcmp@plt+0x1fa18>
  43611a:	jmp    43613f <strcmp@plt+0x329b7>
  43611c:	lea    rax,[rip+0x2ec8d]        # 464db0 <strcmp@plt+0x61628>
  436123:	xor    ebp,ebp
  436125:	cmp    DWORD PTR [rax],0x3
  436128:	jl     43613f <strcmp@plt+0x329b7>
  43612a:	lea    rsi,[rip+0x1721d]        # 44d34e <strcmp@plt+0x49bc6>
  436131:	xor    ebp,ebp
  436133:	mov    edi,0x7
  436138:	xor    eax,eax
  43613a:	call   42e800 <strcmp@plt+0x2b078>
  43613f:	mov    eax,ebp
  436141:	add    rsp,0x8
  436145:	pop    rbx
  436146:	pop    rbp
  436147:	ret    
  436148:	nop    DWORD PTR [rax+rax*1+0x0]
  436150:	push   r14
  436152:	push   rbx
  436153:	push   rax
  436154:	mov    rbx,rdi
  436157:	cmp    DWORD PTR [rdi+0x18],0x1
  43615b:	jne    436197 <strcmp@plt+0x32a0f>
  43615d:	mov    rdi,rbx
  436160:	call   423200 <strcmp@plt+0x1fa78>
  436165:	movzx  eax,ax
  436168:	cmp    eax,0xa
  43616b:	je     4361c4 <strcmp@plt+0x32a3c>
  43616d:	cmp    eax,0x2
  436170:	jne    4361ea <strcmp@plt+0x32a62>
  436172:	mov    edi,0x10
  436177:	call   4320b0 <strcmp@plt+0x2e928>
  43617c:	mov    r14,rax
  43617f:	mov    WORD PTR [rax],0x2
  436184:	mov    rdi,rbx
  436187:	call   423d50 <strcmp@plt+0x205c8>
  43618c:	mov    eax,DWORD PTR [rax]
  43618e:	mov    DWORD PTR [r14+0x4],eax
  436192:	jmp    43621a <strcmp@plt+0x32a92>
  436197:	lea    rax,[rip+0x2ec12]        # 464db0 <strcmp@plt+0x61628>
  43619e:	cmp    DWORD PTR [rax],0x2
  4361a1:	jge    4361a8 <strcmp@plt+0x32a20>
  4361a3:	xor    r14d,r14d
  4361a6:	jmp    43621a <strcmp@plt+0x32a92>
  4361a8:	mov    rdi,rbx
  4361ab:	call   423130 <strcmp@plt+0x1f9a8>
  4361b0:	mov    rcx,rax
  4361b3:	lea    rsi,[rip+0x171ba]        # 44d374 <strcmp@plt+0x49bec>
  4361ba:	xor    r14d,r14d
  4361bd:	mov    edi,0x6
  4361c2:	jmp    436210 <strcmp@plt+0x32a88>
  4361c4:	mov    edi,0x1c
  4361c9:	call   4320b0 <strcmp@plt+0x2e928>
  4361ce:	mov    r14,rax
  4361d1:	mov    WORD PTR [rax],0xa
  4361d6:	mov    rdi,rbx
  4361d9:	call   423d60 <strcmp@plt+0x205d8>
  4361de:	vmovups xmm0,XMMWORD PTR [rax]
  4361e2:	vmovups XMMWORD PTR [r14+0x8],xmm0
  4361e8:	jmp    43621a <strcmp@plt+0x32a92>
  4361ea:	lea    rax,[rip+0x2ebbf]        # 464db0 <strcmp@plt+0x61628>
  4361f1:	cmp    DWORD PTR [rax],0x0
  4361f4:	jle    4361a3 <strcmp@plt+0x32a1b>
  4361f6:	mov    rdi,rbx
  4361f9:	call   423130 <strcmp@plt+0x1f9a8>
  4361fe:	mov    rcx,rax
  436201:	lea    rsi,[rip+0x171aa]        # 44d3b2 <strcmp@plt+0x49c2a>
  436208:	xor    r14d,r14d
  43620b:	mov    edi,0x5
  436210:	xor    eax,eax
  436212:	mov    rdx,rcx
  436215:	call   42e800 <strcmp@plt+0x2b078>
  43621a:	mov    rax,r14
  43621d:	add    rsp,0x8
  436221:	pop    rbx
  436222:	pop    r14
  436224:	ret    
  436225:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43622f:	nop
  436230:	push   rbx
  436231:	mov    edi,0x1
  436236:	mov    esi,0x10
  43623b:	call   432020 <strcmp@plt+0x2e898>
  436240:	mov    rbx,rax
  436243:	mov    edi,0x1
  436248:	mov    esi,0x28
  43624d:	call   4032d0 <calloc@plt>
  436252:	mov    QWORD PTR [rbx],rax
  436255:	mov    rax,rbx
  436258:	pop    rbx
  436259:	ret    
  43625a:	nop    WORD PTR [rax+rax*1+0x0]
  436260:	push   r14
  436262:	push   rbx
  436263:	push   rax
  436264:	mov    r14,rdi
  436267:	mov    edi,0x1
  43626c:	mov    esi,0x10
  436271:	call   432020 <strcmp@plt+0x2e898>
  436276:	mov    rbx,rax
  436279:	mov    edi,0x1
  43627e:	mov    esi,0x28
  436283:	call   4032d0 <calloc@plt>
  436288:	mov    QWORD PTR [rbx],rax
  43628b:	mov    QWORD PTR [rbx+0x8],r14
  43628f:	mov    rax,rbx
  436292:	add    rsp,0x8
  436296:	pop    rbx
  436297:	pop    r14
  436299:	ret    
  43629a:	nop    WORD PTR [rax+rax*1+0x0]
  4362a0:	push   rbp
  4362a1:	push   r15
  4362a3:	push   r14
  4362a5:	push   r13
  4362a7:	push   r12
  4362a9:	push   rbx
  4362aa:	sub    rsp,0x38
  4362ae:	mov    QWORD PTR [rsp+0x8],rdx
  4362b3:	mov    QWORD PTR [rsp+0x18],rdi
  4362b8:	mov    rdi,QWORD PTR [rdi]
  4362bb:	mov    eax,DWORD PTR [rdi]
  4362bd:	mov    QWORD PTR [rsp+0x10],rax
  4362c2:	test   eax,eax
  4362c4:	mov    QWORD PTR [rsp],rdi
  4362c8:	mov    QWORD PTR [rsp+0x20],rsi
  4362cd:	je     436399 <strcmp@plt+0x32c11>
  4362d3:	mov    rax,QWORD PTR [rsp+0x10]
  4362d8:	lea    r13d,[rax-0x1]
  4362dc:	movsx  ebx,BYTE PTR [rsi]
  4362df:	test   ebx,ebx
  4362e1:	je     436309 <strcmp@plt+0x32b81>
  4362e3:	mov    al,BYTE PTR [rsi+0x1]
  4362e6:	test   al,al
  4362e8:	je     43630b <strcmp@plt+0x32b83>
  4362ea:	lea    rcx,[rsi+0x2]
  4362ee:	xchg   ax,ax
  4362f0:	mov    edx,ebx
  4362f2:	shl    edx,0x5
  4362f5:	sub    edx,ebx
  4362f7:	movsx  ebx,al
  4362fa:	add    ebx,edx
  4362fc:	movzx  eax,BYTE PTR [rcx]
  4362ff:	add    rcx,0x1
  436303:	test   al,al
  436305:	jne    4362f0 <strcmp@plt+0x32b68>
  436307:	jmp    43630b <strcmp@plt+0x32b83>
  436309:	xor    ebx,ebx
  43630b:	mov    r15d,ebx
  43630e:	and    r15d,r13d
  436311:	mov    eax,ebx
  436313:	shr    eax,0x3
  436316:	shl    ebx,0x3
  436319:	xor    ebx,eax
  43631b:	or     ebx,0x1
  43631e:	and    ebx,r13d
  436321:	mov    rcx,QWORD PTR [rdi+0x10]
  436325:	mov    ebp,r15d
  436328:	mov    QWORD PTR [rsp+0x28],rcx
  43632d:	nop    DWORD PTR [rax]
  436330:	mov    eax,ebp
  436332:	shr    eax,0x4
  436335:	mov    r12d,DWORD PTR [rcx+rax*4]
  436339:	lea    r14d,[rbp+rbp*1+0x0]
  43633e:	and    r14d,0x1e
  436342:	shrx   eax,r12d,r14d
  436347:	test   al,0x2
  436349:	jne    43637c <strcmp@plt+0x32bf4>
  43634b:	test   al,0x1
  43634d:	jne    436370 <strcmp@plt+0x32be8>
  43634f:	mov    rax,QWORD PTR [rdi+0x18]
  436353:	mov    ecx,ebp
  436355:	mov    rdi,QWORD PTR [rax+rcx*8]
  436359:	call   403788 <strcmp@plt>
  43635e:	mov    rcx,QWORD PTR [rsp+0x28]
  436363:	mov    rsi,QWORD PTR [rsp+0x20]
  436368:	mov    rdi,QWORD PTR [rsp]
  43636c:	test   eax,eax
  43636e:	je     43637c <strcmp@plt+0x32bf4>
  436370:	add    ebp,ebx
  436372:	and    ebp,r13d
  436375:	cmp    ebp,r15d
  436378:	jne    436330 <strcmp@plt+0x32ba8>
  43637a:	jmp    436399 <strcmp@plt+0x32c11>
  43637c:	mov    eax,0x3
  436381:	shlx   eax,eax,r14d
  436386:	test   eax,r12d
  436389:	mov    rax,QWORD PTR [rsp+0x10]
  43638e:	cmovne ebp,eax
  436391:	cmp    ebp,eax
  436393:	jne    4364e7 <strcmp@plt+0x32d5f>
  436399:	mov    eax,DWORD PTR [rdi+0x8]
  43639c:	cmp    eax,DWORD PTR [rdi+0xc]
  43639f:	jb     4363cc <strcmp@plt+0x32c44>
  4363a1:	mov    eax,DWORD PTR [rdi+0x4]
  4363a4:	add    eax,eax
  4363a6:	mov    rcx,QWORD PTR [rsp+0x10]
  4363ab:	cmp    ecx,eax
  4363ad:	mov    rsi,rcx
  4363b0:	jbe    4363b7 <strcmp@plt+0x32c2f>
  4363b2:	add    esi,0xffffffff
  4363b5:	jmp    4363ba <strcmp@plt+0x32c32>
  4363b7:	add    esi,0x1
  4363ba:	mov    rdi,QWORD PTR [rsp]
  4363be:	call   436a30 <strcmp@plt+0x332a8>
  4363c3:	mov    rsi,QWORD PTR [rsp+0x20]
  4363c8:	mov    rdi,QWORD PTR [rsp]
  4363cc:	mov    ebp,DWORD PTR [rdi]
  4363ce:	lea    r8d,[rbp-0x1]
  4363d2:	movsx  r13d,BYTE PTR [rsi]
  4363d6:	test   r13d,r13d
  4363d9:	je     43640d <strcmp@plt+0x32c85>
  4363db:	mov    al,BYTE PTR [rsi+0x1]
  4363de:	test   al,al
  4363e0:	je     436410 <strcmp@plt+0x32c88>
  4363e2:	lea    rcx,[rsi+0x2]
  4363e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4363f0:	mov    edx,r13d
  4363f3:	shl    edx,0x5
  4363f6:	sub    edx,r13d
  4363f9:	movsx  r13d,al
  4363fd:	add    r13d,edx
  436400:	movzx  eax,BYTE PTR [rcx]
  436403:	add    rcx,0x1
  436407:	test   al,al
  436409:	jne    4363f0 <strcmp@plt+0x32c68>
  43640b:	jmp    436410 <strcmp@plt+0x32c88>
  43640d:	xor    r13d,r13d
  436410:	mov    r9d,r13d
  436413:	and    r9d,r8d
  436416:	mov    rbx,QWORD PTR [rdi+0x10]
  43641a:	mov    eax,r9d
  43641d:	shr    eax,0x4
  436420:	mov    ecx,r9d
  436423:	add    cl,cl
  436425:	and    cl,0x1e
  436428:	mov    edx,0x2
  43642d:	shlx   ecx,edx,ecx
  436432:	test   DWORD PTR [rbx+rax*4],ecx
  436435:	je     436444 <strcmp@plt+0x32cbc>
  436437:	mov    ebp,r9d
  43643a:	mov    r14,QWORD PTR [rsp+0x18]
  43643f:	jmp    436542 <strcmp@plt+0x32dba>
  436444:	mov    eax,r13d
  436447:	shr    eax,0x3
  43644a:	shl    r13d,0x3
  43644e:	xor    r13d,eax
  436451:	or     r13d,0x1
  436455:	and    r13d,r8d
  436458:	mov    QWORD PTR [rsp+0x30],rbp
  43645d:	mov    r15d,r9d
  436460:	mov    DWORD PTR [rsp+0x28],r8d
  436465:	mov    QWORD PTR [rsp+0x10],rbx
  43646a:	nop    WORD PTR [rax+rax*1+0x0]
  436470:	mov    eax,r15d
  436473:	shr    eax,0x4
  436476:	mov    r12d,DWORD PTR [rbx+rax*4]
  43647a:	lea    r14d,[r15+r15*1]
  43647e:	and    r14d,0x1e
  436482:	shrx   eax,r12d,r14d
  436487:	test   al,0x2
  436489:	jne    436515 <strcmp@plt+0x32d8d>
  43648f:	test   al,0x1
  436491:	jne    4364c0 <strcmp@plt+0x32d38>
  436493:	mov    rax,QWORD PTR [rdi+0x18]
  436497:	mov    ecx,r15d
  43649a:	mov    rdi,QWORD PTR [rax+rcx*8]
  43649e:	mov    ebx,r9d
  4364a1:	call   403788 <strcmp@plt>
  4364a6:	mov    r9d,ebx
  4364a9:	mov    r8d,DWORD PTR [rsp+0x28]
  4364ae:	mov    rbx,QWORD PTR [rsp+0x10]
  4364b3:	mov    rsi,QWORD PTR [rsp+0x20]
  4364b8:	mov    rdi,QWORD PTR [rsp]
  4364bc:	test   eax,eax
  4364be:	je     436515 <strcmp@plt+0x32d8d>
  4364c0:	bt     r12d,r14d
  4364c4:	cmovb  ebp,r15d
  4364c8:	add    r15d,r13d
  4364cb:	and    r15d,r8d
  4364ce:	cmp    r15d,r9d
  4364d1:	jne    436470 <strcmp@plt+0x32ce8>
  4364d3:	mov    al,0x1
  4364d5:	mov    rdx,QWORD PTR [rsp+0x30]
  4364da:	mov    ecx,edx
  4364dc:	cmp    ebp,edx
  4364de:	mov    r14,QWORD PTR [rsp+0x18]
  4364e3:	je     436534 <strcmp@plt+0x32dac>
  4364e5:	jmp    436542 <strcmp@plt+0x32dba>
  4364e7:	mov    rdi,rsi
  4364ea:	call   403780 <free@plt>
  4364ef:	mov    r14,QWORD PTR [rsp+0x18]
  4364f4:	mov    rax,QWORD PTR [r14+0x8]
  4364f8:	test   rax,rax
  4364fb:	je     4365a6 <strcmp@plt+0x32e1e>
  436501:	mov    rcx,QWORD PTR [r14]
  436504:	mov    rcx,QWORD PTR [rcx+0x20]
  436508:	mov    edx,ebp
  43650a:	mov    rdi,QWORD PTR [rcx+rdx*8]
  43650e:	call   rax
  436510:	jmp    4365a6 <strcmp@plt+0x32e1e>
  436515:	mov    eax,0x2
  43651a:	shlx   eax,eax,r14d
  43651f:	test   r12d,eax
  436522:	sete   al
  436525:	mov    r9d,r15d
  436528:	mov    ecx,ebp
  43652a:	mov    r14,QWORD PTR [rsp+0x18]
  43652f:	mov    rdx,QWORD PTR [rsp+0x30]
  436534:	test   al,al
  436536:	mov    ebp,ecx
  436538:	cmovne ebp,r9d
  43653c:	cmp    ecx,edx
  43653e:	cmove  ebp,r9d
  436542:	mov    eax,ebp
  436544:	shr    eax,0x4
  436547:	lea    ecx,[rbp+rbp*1+0x0]
  43654b:	and    ecx,0x1e
  43654e:	shrx   edx,DWORD PTR [rbx+rax*4],ecx
  436554:	test   dl,0x2
  436557:	jne    436581 <strcmp@plt+0x32df9>
  436559:	test   dl,0x1
  43655c:	je     4365a6 <strcmp@plt+0x32e1e>
  43655e:	mov    rdx,QWORD PTR [rdi+0x18]
  436562:	mov    ebx,ebp
  436564:	mov    QWORD PTR [rdx+rbx*8],rsi
  436568:	mov    rdx,QWORD PTR [rdi+0x10]
  43656c:	mov    esi,0x3
  436571:	shlx   ecx,esi,ecx
  436576:	not    ecx
  436578:	and    DWORD PTR [rdx+rax*4],ecx
  43657b:	add    DWORD PTR [rdi+0x4],0x1
  43657f:	jmp    4365a6 <strcmp@plt+0x32e1e>
  436581:	mov    rdx,QWORD PTR [rdi+0x18]
  436585:	mov    ebx,ebp
  436587:	mov    QWORD PTR [rdx+rbx*8],rsi
  43658b:	mov    rdx,QWORD PTR [rdi+0x10]
  43658f:	mov    esi,0x3
  436594:	shlx   ecx,esi,ecx
  436599:	not    ecx
  43659b:	and    DWORD PTR [rdx+rax*4],ecx
  43659e:	add    DWORD PTR [rdi+0x4],0x1
  4365a2:	add    DWORD PTR [rdi+0x8],0x1
  4365a6:	mov    rdx,QWORD PTR [rsp+0x8]
  4365ab:	mov    rax,QWORD PTR [r14]
  4365ae:	mov    rax,QWORD PTR [rax+0x20]
  4365b2:	mov    ecx,ebp
  4365b4:	mov    QWORD PTR [rax+rcx*8],rdx
  4365b8:	add    rsp,0x38
  4365bc:	pop    rbx
  4365bd:	pop    r12
  4365bf:	pop    r13
  4365c1:	pop    r14
  4365c3:	pop    r15
  4365c5:	pop    rbp
  4365c6:	ret    
  4365c7:	nop    WORD PTR [rax+rax*1+0x0]
  4365d0:	push   rbp
  4365d1:	push   r15
  4365d3:	push   r14
  4365d5:	push   r13
  4365d7:	push   r12
  4365d9:	push   rbx
  4365da:	sub    rsp,0x28
  4365de:	mov    QWORD PTR [rsp+0x10],rsi
  4365e3:	mov    QWORD PTR [rsp+0x18],rdi
  4365e8:	mov    rax,QWORD PTR [rdi]
  4365eb:	mov    QWORD PTR [rsp],rax
  4365ef:	mov    eax,DWORD PTR [rax]
  4365f1:	mov    QWORD PTR [rsp+0x8],rax
  4365f6:	test   eax,eax
  4365f8:	je     436734 <strcmp@plt+0x32fac>
  4365fe:	mov    rax,QWORD PTR [rsp+0x8]
  436603:	lea    r15d,[rax-0x1]
  436607:	mov    rcx,QWORD PTR [rsp+0x10]
  43660c:	movsx  r14d,BYTE PTR [rcx]
  436610:	test   r14d,r14d
  436613:	je     43663d <strcmp@plt+0x32eb5>
  436615:	mov    al,BYTE PTR [rcx+0x1]
  436618:	test   al,al
  43661a:	je     436640 <strcmp@plt+0x32eb8>
  43661c:	lea    rcx,[rcx+0x2]
  436620:	mov    edx,r14d
  436623:	shl    edx,0x5
  436626:	sub    edx,r14d
  436629:	movsx  r14d,al
  43662d:	add    r14d,edx
  436630:	movzx  eax,BYTE PTR [rcx]
  436633:	add    rcx,0x1
  436637:	test   al,al
  436639:	jne    436620 <strcmp@plt+0x32e98>
  43663b:	jmp    436640 <strcmp@plt+0x32eb8>
  43663d:	xor    r14d,r14d
  436640:	mov    r12d,r14d
  436643:	and    r12d,r15d
  436646:	mov    eax,r14d
  436649:	shr    eax,0x3
  43664c:	shl    r14d,0x3
  436650:	xor    r14d,eax
  436653:	or     r14d,0x1
  436657:	and    r14d,r15d
  43665a:	mov    rax,QWORD PTR [rsp]
  43665e:	mov    rcx,QWORD PTR [rax+0x10]
  436662:	mov    ebx,r12d
  436665:	mov    QWORD PTR [rsp+0x20],rcx
  43666a:	nop    WORD PTR [rax+rax*1+0x0]
  436670:	mov    eax,ebx
  436672:	shr    eax,0x4
  436675:	mov    r13d,DWORD PTR [rcx+rax*4]
  436679:	lea    ebp,[rbx+rbx*1]
  43667c:	and    ebp,0x1e
  43667f:	shrx   eax,r13d,ebp
  436684:	test   al,0x2
  436686:	jne    4366ba <strcmp@plt+0x32f32>
  436688:	test   al,0x1
  43668a:	jne    4366ad <strcmp@plt+0x32f25>
  43668c:	mov    rax,QWORD PTR [rsp]
  436690:	mov    rax,QWORD PTR [rax+0x18]
  436694:	mov    ecx,ebx
  436696:	mov    rdi,QWORD PTR [rax+rcx*8]
  43669a:	mov    rsi,QWORD PTR [rsp+0x10]
  43669f:	call   403788 <strcmp@plt>
  4366a4:	mov    rcx,QWORD PTR [rsp+0x20]
  4366a9:	test   eax,eax
  4366ab:	je     4366ba <strcmp@plt+0x32f32>
  4366ad:	add    ebx,r14d
  4366b0:	and    ebx,r15d
  4366b3:	cmp    ebx,r12d
  4366b6:	jne    436670 <strcmp@plt+0x32ee8>
  4366b8:	jmp    436734 <strcmp@plt+0x32fac>
  4366ba:	mov    eax,0x3
  4366bf:	shlx   eax,eax,ebp
  4366c4:	test   eax,r13d
  4366c7:	mov    rax,QWORD PTR [rsp+0x8]
  4366cc:	cmovne ebx,eax
  4366cf:	cmp    ebx,eax
  4366d1:	je     436734 <strcmp@plt+0x32fac>
  4366d3:	mov    rax,QWORD PTR [rsp]
  4366d7:	mov    rax,QWORD PTR [rax+0x18]
  4366db:	mov    r14d,ebx
  4366de:	mov    rdi,QWORD PTR [rax+r14*8]
  4366e2:	call   403780 <free@plt>
  4366e7:	mov    rbp,QWORD PTR [rsp+0x18]
  4366ec:	mov    rax,QWORD PTR [rbp+0x8]
  4366f0:	test   rax,rax
  4366f3:	je     436703 <strcmp@plt+0x32f7b>
  4366f5:	mov    rcx,QWORD PTR [rbp+0x0]
  4366f9:	mov    rcx,QWORD PTR [rcx+0x20]
  4366fd:	mov    rdi,QWORD PTR [rcx+r14*8]
  436701:	call   rax
  436703:	mov    rax,QWORD PTR [rbp+0x0]
  436707:	cmp    DWORD PTR [rax],ebx
  436709:	je     436734 <strcmp@plt+0x32fac>
  43670b:	mov    rcx,QWORD PTR [rax+0x10]
  43670f:	mov    edx,ebx
  436711:	shr    edx,0x4
  436714:	mov    esi,DWORD PTR [rcx+rdx*4]
  436717:	add    ebx,ebx
  436719:	and    ebx,0x1e
  43671c:	mov    edi,0x3
  436721:	shlx   edi,edi,ebx
  436726:	test   esi,edi
  436728:	jne    436734 <strcmp@plt+0x32fac>
  43672a:	bts    esi,ebx
  43672d:	mov    DWORD PTR [rcx+rdx*4],esi
  436730:	add    DWORD PTR [rax+0x4],0xffffffff
  436734:	add    rsp,0x28
  436738:	pop    rbx
  436739:	pop    r12
  43673b:	pop    r13
  43673d:	pop    r14
  43673f:	pop    r15
  436741:	pop    rbp
  436742:	ret    
  436743:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43674d:	nop    DWORD PTR [rax]
  436750:	push   rbp
  436751:	push   r15
  436753:	push   r14
  436755:	push   r13
  436757:	push   r12
  436759:	push   rbx
  43675a:	sub    rsp,0x28
  43675e:	mov    rax,QWORD PTR [rdi]
  436761:	mov    QWORD PTR [rsp+0x8],rax
  436766:	mov    eax,DWORD PTR [rax]
  436768:	xor    ebx,ebx
  43676a:	test   eax,eax
  43676c:	je     43685e <strcmp@plt+0x330d6>
  436772:	mov    QWORD PTR [rsp+0x10],rax
  436777:	lea    r14d,[rax-0x1]
  43677b:	movsx  edx,BYTE PTR [rsi]
  43677e:	test   edx,edx
  436780:	je     4367ab <strcmp@plt+0x33023>
  436782:	mov    al,BYTE PTR [rsi+0x1]
  436785:	test   al,al
  436787:	je     4367a9 <strcmp@plt+0x33021>
  436789:	lea    rcx,[rsi+0x2]
  43678d:	mov    ebx,edx
  43678f:	nop
  436790:	mov    edx,ebx
  436792:	shl    edx,0x5
  436795:	sub    edx,ebx
  436797:	movsx  ebx,al
  43679a:	add    ebx,edx
  43679c:	movzx  eax,BYTE PTR [rcx]
  43679f:	add    rcx,0x1
  4367a3:	test   al,al
  4367a5:	jne    436790 <strcmp@plt+0x33008>
  4367a7:	jmp    4367ab <strcmp@plt+0x33023>
  4367a9:	mov    ebx,edx
  4367ab:	mov    QWORD PTR [rsp+0x20],rsi
  4367b0:	mov    ebp,ebx
  4367b2:	and    ebp,r14d
  4367b5:	mov    eax,ebx
  4367b7:	shr    eax,0x3
  4367ba:	shl    ebx,0x3
  4367bd:	xor    ebx,eax
  4367bf:	or     ebx,0x1
  4367c2:	and    ebx,r14d
  4367c5:	mov    rax,QWORD PTR [rsp+0x8]
  4367ca:	mov    rcx,QWORD PTR [rax+0x10]
  4367ce:	mov    r12d,ebp
  4367d1:	mov    QWORD PTR [rsp+0x18],rcx
  4367d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4367e0:	mov    eax,r12d
  4367e3:	shr    eax,0x4
  4367e6:	mov    r15d,DWORD PTR [rcx+rax*4]
  4367ea:	lea    r13d,[r12+r12*1]
  4367ee:	and    r13d,0x1e
  4367f2:	shrx   eax,r15d,r13d
  4367f7:	test   al,0x2
  4367f9:	jne    43682f <strcmp@plt+0x330a7>
  4367fb:	test   al,0x1
  4367fd:	jne    436822 <strcmp@plt+0x3309a>
  4367ff:	mov    rax,QWORD PTR [rsp+0x8]
  436804:	mov    rax,QWORD PTR [rax+0x18]
  436808:	mov    ecx,r12d
  43680b:	mov    rdi,QWORD PTR [rax+rcx*8]
  43680f:	mov    rsi,QWORD PTR [rsp+0x20]
  436814:	call   403788 <strcmp@plt>
  436819:	mov    rcx,QWORD PTR [rsp+0x18]
  43681e:	test   eax,eax
  436820:	je     43682f <strcmp@plt+0x330a7>
  436822:	add    r12d,ebx
  436825:	and    r12d,r14d
  436828:	cmp    r12d,ebp
  43682b:	jne    4367e0 <strcmp@plt+0x33058>
  43682d:	jmp    43684a <strcmp@plt+0x330c2>
  43682f:	mov    eax,0x3
  436834:	shlx   eax,eax,r13d
  436839:	test   eax,r15d
  43683c:	mov    rax,QWORD PTR [rsp+0x10]
  436841:	cmovne r12d,eax
  436845:	cmp    r12d,eax
  436848:	jne    43684e <strcmp@plt+0x330c6>
  43684a:	xor    ebx,ebx
  43684c:	jmp    43685e <strcmp@plt+0x330d6>
  43684e:	mov    rax,QWORD PTR [rsp+0x8]
  436853:	mov    rax,QWORD PTR [rax+0x20]
  436857:	mov    ecx,r12d
  43685a:	mov    rbx,QWORD PTR [rax+rcx*8]
  43685e:	mov    rax,rbx
  436861:	add    rsp,0x28
  436865:	pop    rbx
  436866:	pop    r12
  436868:	pop    r13
  43686a:	pop    r14
  43686c:	pop    r15
  43686e:	pop    rbp
  43686f:	ret    
  436870:	test   rdi,rdi
  436873:	je     43692a <strcmp@plt+0x331a2>
  436879:	push   rbp
  43687a:	push   r15
  43687c:	push   r14
  43687e:	push   r12
  436880:	push   rbx
  436881:	mov    r14,rdi
  436884:	mov    r12,QWORD PTR [rdi]
  436887:	cmp    DWORD PTR [r12],0x0
  43688c:	je     4368ef <strcmp@plt+0x33167>
  43688e:	xor    ebp,ebp
  436890:	mov    r15d,0x3
  436896:	xor    ebx,ebx
  436898:	nop    DWORD PTR [rax+rax*1+0x0]
  4368a0:	mov    rax,QWORD PTR [r12+0x10]
  4368a5:	mov    ecx,ebx
  4368a7:	shr    ecx,0x4
  4368aa:	mov    edx,ebp
  4368ac:	and    dl,0x1e
  4368af:	shlx   edx,r15d,edx
  4368b4:	test   DWORD PTR [rax+rcx*4],edx
  4368b7:	jne    4368e0 <strcmp@plt+0x33158>
  4368b9:	mov    rax,QWORD PTR [r12+0x18]
  4368be:	mov    r12d,ebx
  4368c1:	mov    rdi,QWORD PTR [rax+r12*8]
  4368c5:	call   403780 <free@plt>
  4368ca:	mov    rax,QWORD PTR [r14+0x8]
  4368ce:	test   rax,rax
  4368d1:	je     4368e0 <strcmp@plt+0x33158>
  4368d3:	mov    rcx,QWORD PTR [r14]
  4368d6:	mov    rcx,QWORD PTR [rcx+0x20]
  4368da:	mov    rdi,QWORD PTR [rcx+r12*8]
  4368de:	call   rax
  4368e0:	add    ebx,0x1
  4368e3:	mov    r12,QWORD PTR [r14]
  4368e6:	add    ebp,0x2
  4368e9:	cmp    ebx,DWORD PTR [r12]
  4368ed:	jne    4368a0 <strcmp@plt+0x33118>
  4368ef:	test   r12,r12
  4368f2:	je     43691a <strcmp@plt+0x33192>
  4368f4:	mov    rdi,QWORD PTR [r12+0x18]
  4368f9:	call   403780 <free@plt>
  4368fe:	mov    rdi,QWORD PTR [r12+0x10]
  436903:	call   403780 <free@plt>
  436908:	mov    rdi,QWORD PTR [r12+0x20]
  43690d:	call   403780 <free@plt>
  436912:	mov    rdi,r12
  436915:	call   403780 <free@plt>
  43691a:	mov    rdi,r14
  43691d:	pop    rbx
  43691e:	pop    r12
  436920:	pop    r14
  436922:	pop    r15
  436924:	pop    rbp
  436925:	jmp    403780 <free@plt>
  43692a:	ret    
  43692b:	nop    DWORD PTR [rax+rax*1+0x0]
  436930:	push   rbp
  436931:	push   r15
  436933:	push   r14
  436935:	push   r12
  436937:	push   rbx
  436938:	mov    r14,rdi
  43693b:	call   42bbd0 <strcmp@plt+0x28448>
  436940:	mov    r15,rax
  436943:	mov    rax,QWORD PTR [r14]
  436946:	cmp    DWORD PTR [rax],0x0
  436949:	je     436998 <strcmp@plt+0x33210>
  43694b:	xor    ebp,ebp
  43694d:	mov    r12d,0x3
  436953:	xor    ebx,ebx
  436955:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43695f:	nop
  436960:	mov    rcx,QWORD PTR [rax+0x10]
  436964:	mov    edx,ebx
  436966:	shr    edx,0x4
  436969:	mov    esi,ebp
  43696b:	and    sil,0x1e
  43696f:	shlx   esi,r12d,esi
  436974:	test   DWORD PTR [rcx+rdx*4],esi
  436977:	jne    43698e <strcmp@plt+0x33206>
  436979:	mov    rax,QWORD PTR [rax+0x18]
  43697d:	mov    ecx,ebx
  43697f:	mov    rdi,QWORD PTR [rax+rcx*8]
  436983:	mov    rsi,r15
  436986:	call   42bcf0 <strcmp@plt+0x28568>
  43698b:	mov    rax,QWORD PTR [r14]
  43698e:	add    ebx,0x1
  436991:	add    ebp,0x2
  436994:	cmp    ebx,DWORD PTR [rax]
  436996:	jne    436960 <strcmp@plt+0x331d8>
  436998:	mov    rax,r15
  43699b:	pop    rbx
  43699c:	pop    r12
  43699e:	pop    r14
  4369a0:	pop    r15
  4369a2:	pop    rbp
  4369a3:	ret    
  4369a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4369ae:	xchg   ax,ax
  4369b0:	push   rbp
  4369b1:	push   r15
  4369b3:	push   r14
  4369b5:	push   r12
  4369b7:	push   rbx
  4369b8:	mov    r14,rdi
  4369bb:	call   42bbd0 <strcmp@plt+0x28448>
  4369c0:	mov    r15,rax
  4369c3:	mov    rax,QWORD PTR [r14]
  4369c6:	cmp    DWORD PTR [rax],0x0
  4369c9:	je     436a18 <strcmp@plt+0x33290>
  4369cb:	xor    ebp,ebp
  4369cd:	mov    r12d,0x3
  4369d3:	xor    ebx,ebx
  4369d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4369df:	nop
  4369e0:	mov    rcx,QWORD PTR [rax+0x10]
  4369e4:	mov    edx,ebx
  4369e6:	shr    edx,0x4
  4369e9:	mov    esi,ebp
  4369eb:	and    sil,0x1e
  4369ef:	shlx   esi,r12d,esi
  4369f4:	test   DWORD PTR [rcx+rdx*4],esi
  4369f7:	jne    436a0e <strcmp@plt+0x33286>
  4369f9:	mov    rax,QWORD PTR [rax+0x20]
  4369fd:	mov    ecx,ebx
  4369ff:	mov    rdi,QWORD PTR [rax+rcx*8]
  436a03:	mov    rsi,r15
  436a06:	call   42bcf0 <strcmp@plt+0x28568>
  436a0b:	mov    rax,QWORD PTR [r14]
  436a0e:	add    ebx,0x1
  436a11:	add    ebp,0x2
  436a14:	cmp    ebx,DWORD PTR [rax]
  436a16:	jne    4369e0 <strcmp@plt+0x33258>
  436a18:	mov    rax,r15
  436a1b:	pop    rbx
  436a1c:	pop    r12
  436a1e:	pop    r14
  436a20:	pop    r15
  436a22:	pop    rbp
  436a23:	ret    
  436a24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436a2e:	xchg   ax,ax
  436a30:	push   rbp
  436a31:	push   r15
  436a33:	push   r14
  436a35:	push   r13
  436a37:	push   r12
  436a39:	push   rbx
  436a3a:	sub    rsp,0x18
  436a3e:	add    esi,0xffffffff
  436a41:	mov    eax,esi
  436a43:	shr    eax,1
  436a45:	or     eax,esi
  436a47:	mov    ecx,eax
  436a49:	shr    ecx,0x2
  436a4c:	or     ecx,eax
  436a4e:	mov    eax,ecx
  436a50:	shr    eax,0x4
  436a53:	or     eax,ecx
  436a55:	mov    ecx,eax
  436a57:	shr    ecx,0x8
  436a5a:	or     ecx,eax
  436a5c:	mov    ebp,ecx
  436a5e:	shr    ebp,0x10
  436a61:	or     ebp,ecx
  436a63:	add    ebp,0x1
  436a66:	cmp    ebp,0x4
  436a69:	mov    eax,0x4
  436a6e:	cmovbe ebp,eax
  436a71:	vcvtsi2sd xmm0,xmm0,rbp
  436a76:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x10f1a]        # 447998 <strcmp@plt+0x44210>
  436a7e:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x10f1a]        # 4479a0 <strcmp@plt+0x44218>
  436a86:	vcvttsd2si rcx,xmm0
  436a8b:	cmp    DWORD PTR [rdi+0x4],ecx
  436a8e:	jae    436ccf <strcmp@plt+0x33547>
  436a94:	mov    r14,rdi
  436a97:	mov    QWORD PTR [rsp+0x10],rcx
  436a9c:	mov    r15d,ebp
  436a9f:	shr    r15d,0x2
  436aa3:	and    r15d,0xfffffffc
  436aa7:	cmp    ebp,0x10
  436aaa:	cmovb  r15d,eax
  436aae:	mov    rdi,r15
  436ab1:	call   403510 <malloc@plt>
  436ab6:	mov    rbx,rax
  436ab9:	mov    esi,0xaa
  436abe:	mov    rdi,rax
  436ac1:	mov    rdx,r15
  436ac4:	call   403260 <memset@plt>
  436ac9:	mov    esi,DWORD PTR [r14]
  436acc:	cmp    esi,ebp
  436ace:	jae    436afa <strcmp@plt+0x33372>
  436ad0:	mov    rdi,QWORD PTR [r14+0x18]
  436ad4:	mov    r15d,ebp
  436ad7:	shl    r15,0x3
  436adb:	mov    rsi,r15
  436ade:	call   403650 <realloc@plt>
  436ae3:	mov    QWORD PTR [r14+0x18],rax
  436ae7:	mov    rdi,QWORD PTR [r14+0x20]
  436aeb:	mov    rsi,r15
  436aee:	call   403650 <realloc@plt>
  436af3:	mov    QWORD PTR [r14+0x20],rax
  436af7:	mov    esi,DWORD PTR [r14]
  436afa:	test   esi,esi
  436afc:	je     436cae <strcmp@plt+0x33526>
  436b02:	mov    QWORD PTR [rsp+0x8],rbp
  436b07:	lea    eax,[rbp-0x1]
  436b0a:	xor    r10d,r10d
  436b0d:	mov    edi,0x2
  436b12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436b1c:	nop    DWORD PTR [rax+0x0]
  436b20:	mov    r15,QWORD PTR [r14+0x10]
  436b24:	mov    edx,r10d
  436b27:	shr    edx,0x4
  436b2a:	mov    ebp,DWORD PTR [r15+rdx*4]
  436b2e:	lea    r8d,[r10+r10*1]
  436b32:	and    r8d,0x1e
  436b36:	mov    ecx,0x3
  436b3b:	shlx   ecx,ecx,r8d
  436b40:	test   ebp,ecx
  436b42:	jne    436c71 <strcmp@plt+0x334e9>
  436b48:	lea    rdx,[r15+rdx*4]
  436b4c:	mov    ecx,r10d
  436b4f:	mov    rsi,QWORD PTR [r14+0x18]
  436b53:	mov    r11,QWORD PTR [r14+0x20]
  436b57:	mov    r9,QWORD PTR [rsi+rcx*8]
  436b5b:	mov    r11,QWORD PTR [r11+rcx*8]
  436b5f:	mov    r8d,r8d
  436b62:	jmp    436b9f <strcmp@plt+0x33417>
  436b64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436b6e:	xchg   ax,ax
  436b70:	mov    r8d,r13d
  436b73:	mov    rdx,QWORD PTR [r14+0x18]
  436b77:	mov    ebp,ebp
  436b79:	mov    r12,QWORD PTR [rdx+rbp*8]
  436b7d:	mov    QWORD PTR [rdx+rbp*8],r9
  436b81:	mov    rdx,QWORD PTR [r14+0x20]
  436b85:	mov    rsi,QWORD PTR [rdx+rbp*8]
  436b89:	mov    QWORD PTR [rdx+rbp*8],r11
  436b8d:	mov    r15,QWORD PTR [r14+0x10]
  436b91:	lea    rdx,[r15+rcx*4]
  436b95:	mov    ebp,DWORD PTR [r15+rcx*4]
  436b99:	mov    r11,rsi
  436b9c:	mov    r9,r12
  436b9f:	mov    ecx,0x1
  436ba4:	shlx   rcx,rcx,r8
  436ba9:	or     ecx,ebp
  436bab:	mov    DWORD PTR [rdx],ecx
  436bad:	movsx  r8d,BYTE PTR [r9]
  436bb1:	test   r8d,r8d
  436bb4:	je     436bf0 <strcmp@plt+0x33468>
  436bb6:	mov    dl,BYTE PTR [r9+0x1]
  436bba:	test   dl,dl
  436bbc:	je     436bf3 <strcmp@plt+0x3346b>
  436bbe:	lea    rsi,[r9+0x2]
  436bc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436bcc:	nop    DWORD PTR [rax+0x0]
  436bd0:	mov    ecx,r8d
  436bd3:	shl    ecx,0x5
  436bd6:	sub    ecx,r8d
  436bd9:	movsx  r8d,dl
  436bdd:	add    r8d,ecx
  436be0:	movzx  edx,BYTE PTR [rsi]
  436be3:	add    rsi,0x1
  436be7:	test   dl,dl
  436be9:	jne    436bd0 <strcmp@plt+0x33448>
  436beb:	jmp    436bf3 <strcmp@plt+0x3346b>
  436bed:	nop    DWORD PTR [rax]
  436bf0:	xor    r8d,r8d
  436bf3:	mov    ecx,r8d
  436bf6:	shr    ecx,0x3
  436bf9:	lea    esi,[r8*8+0x0]
  436c01:	xor    esi,ecx
  436c03:	or     esi,0x1
  436c06:	and    esi,eax
  436c08:	nop    DWORD PTR [rax+rax*1+0x0]
  436c10:	mov    ebp,r8d
  436c13:	and    ebp,eax
  436c15:	mov    edx,ebp
  436c17:	shr    edx,0x4
  436c1a:	mov    r12d,DWORD PTR [rbx+rdx*4]
  436c1e:	lea    r13d,[rbp+rbp*1+0x0]
  436c23:	and    r13d,0x1e
  436c27:	shlx   ecx,edi,r13d
  436c2c:	lea    r8d,[rsi+rbp*1]
  436c30:	test   ecx,r12d
  436c33:	je     436c10 <strcmp@plt+0x33488>
  436c35:	mov    ecx,edx
  436c37:	shlx   edx,edi,r13d
  436c3c:	andn   edx,edx,r12d
  436c41:	mov    DWORD PTR [rbx+rcx*4],edx
  436c44:	mov    esi,DWORD PTR [r14]
  436c47:	cmp    ebp,esi
  436c49:	jae    436c5f <strcmp@plt+0x334d7>
  436c4b:	mov    edx,0x3
  436c50:	shlx   edx,edx,r13d
  436c55:	test   DWORD PTR [r15+rcx*4],edx
  436c59:	je     436b70 <strcmp@plt+0x333e8>
  436c5f:	mov    rcx,QWORD PTR [r14+0x18]
  436c63:	mov    edx,ebp
  436c65:	mov    QWORD PTR [rcx+rdx*8],r9
  436c69:	mov    rcx,QWORD PTR [r14+0x20]
  436c6d:	mov    QWORD PTR [rcx+rdx*8],r11
  436c71:	add    r10d,0x1
  436c75:	cmp    r10d,esi
  436c78:	jne    436b20 <strcmp@plt+0x33398>
  436c7e:	mov    rbp,QWORD PTR [rsp+0x8]
  436c83:	cmp    esi,ebp
  436c85:	jbe    436cae <strcmp@plt+0x33526>
  436c87:	mov    rdi,QWORD PTR [r14+0x18]
  436c8b:	mov    r15d,ebp
  436c8e:	shl    r15,0x3
  436c92:	mov    rsi,r15
  436c95:	call   403650 <realloc@plt>
  436c9a:	mov    QWORD PTR [r14+0x18],rax
  436c9e:	mov    rdi,QWORD PTR [r14+0x20]
  436ca2:	mov    rsi,r15
  436ca5:	call   403650 <realloc@plt>
  436caa:	mov    QWORD PTR [r14+0x20],rax
  436cae:	mov    rdi,QWORD PTR [r14+0x10]
  436cb2:	call   403780 <free@plt>
  436cb7:	mov    QWORD PTR [r14+0x10],rbx
  436cbb:	mov    DWORD PTR [r14],ebp
  436cbe:	mov    eax,DWORD PTR [r14+0x4]
  436cc2:	mov    DWORD PTR [r14+0x8],eax
  436cc6:	mov    rax,QWORD PTR [rsp+0x10]
  436ccb:	mov    DWORD PTR [r14+0xc],eax
  436ccf:	add    rsp,0x18
  436cd3:	pop    rbx
  436cd4:	pop    r12
  436cd6:	pop    r13
  436cd8:	pop    r14
  436cda:	pop    r15
  436cdc:	pop    rbp
  436cdd:	ret    
  436cde:	xchg   ax,ax
  436ce0:	push   rbp
  436ce1:	mov    rbp,rsp
  436ce4:	push   r14
  436ce6:	push   rbx
  436ce7:	and    rsp,0xffffffffffffffe0
  436ceb:	sub    rsp,0xc0
  436cf2:	lea    rax,[rip+0x2e0b7]        # 464db0 <strcmp@plt+0x61628>
  436cf9:	cmp    DWORD PTR [rax],0x0
  436cfc:	jle    436d11 <strcmp@plt+0x33589>
  436cfe:	lea    rsi,[rip+0x1671b]        # 44d420 <strcmp@plt+0x49c98>
  436d05:	mov    edi,0x5
  436d0a:	xor    eax,eax
  436d0c:	call   42e800 <strcmp@plt+0x2b078>
  436d11:	lea    rdi,[rip+0x38dc0]        # 46fad8 <strcmp@plt+0x6c350>
  436d18:	call   403530 <pipe@plt>
  436d1d:	cmp    eax,0xffffffff
  436d20:	je     437026 <strcmp@plt+0x3389e>
  436d26:	mov    edi,DWORD PTR [rip+0x38dac]        # 46fad8 <strcmp@plt+0x6c350>
  436d2c:	lea    r14,[rip+0x38d95]        # 46fac8 <strcmp@plt+0x6c340>
  436d33:	mov    DWORD PTR [r14],edi
  436d36:	mov    esi,0x3
  436d3b:	xor    edx,edx
  436d3d:	xor    eax,eax
  436d3f:	call   403290 <fcntl@plt>
  436d44:	cmp    eax,0xffffffff
  436d47:	je     43703e <strcmp@plt+0x338b6>
  436d4d:	mov    ecx,eax
  436d4f:	mov    edi,DWORD PTR [r14]
  436d52:	or     ecx,0x800
  436d58:	mov    esi,0x4
  436d5d:	xor    eax,eax
  436d5f:	mov    edx,ecx
  436d61:	call   403290 <fcntl@plt>
  436d66:	cmp    eax,0xffffffff
  436d69:	je     437056 <strcmp@plt+0x338ce>
  436d6f:	vpxor  xmm0,xmm0,xmm0
  436d73:	vmovdqu YMMWORD PTR [rsp+0x80],ymm0
  436d7c:	vmovdqu YMMWORD PTR [rsp+0x70],ymm0
  436d82:	vmovdqu YMMWORD PTR [rsp+0x50],ymm0
  436d88:	vmovdqu YMMWORD PTR [rsp+0x30],ymm0
  436d8e:	lea    rdi,[rsp+0x10]
  436d93:	vmovdqu YMMWORD PTR [rsp+0x10],ymm0
  436d99:	lea    rax,[rip+0x780]        # 437520 <strcmp@plt+0x33d98>
  436da0:	mov    QWORD PTR [rsp+0x8],rax
  436da5:	mov    DWORD PTR [rsp+0x90],0x0
  436db0:	vzeroupper 
  436db3:	call   4034d0 <sigemptyset@plt>
  436db8:	lea    rsi,[rsp+0x8]
  436dbd:	mov    edi,0xc
  436dc2:	xor    edx,edx
  436dc4:	call   4034e0 <sigaction@plt>
  436dc9:	cmp    eax,0xffffffff
  436dcc:	jne    436dfa <strcmp@plt+0x33672>
  436dce:	call   403040 <__errno_location@plt>
  436dd3:	mov    edi,DWORD PTR [rax]
  436dd5:	call   403170 <strerror@plt>
  436dda:	mov    rcx,rax
  436ddd:	lea    rsi,[rip+0x167cb]        # 44d5af <strcmp@plt+0x49e27>
  436de4:	mov    edi,0x2
  436de9:	xor    eax,eax
  436deb:	mov    rdx,rcx
  436dee:	call   42e800 <strcmp@plt+0x2b078>
  436df3:	xor    eax,eax
  436df5:	call   43b420 <strcmp@plt+0x37c98>
  436dfa:	mov    QWORD PTR [rsp+0x10],0xc
  436e03:	lea    rdx,[rip+0x38cc6]        # 46fad0 <strcmp@plt+0x6c348>
  436e0a:	mov    QWORD PTR [rsp+0x8],rdx
  436e0f:	lea    rsi,[rsp+0x8]
  436e14:	mov    edi,0x1
  436e19:	call   403680 <timer_create@plt>
  436e1e:	cmp    eax,0xffffffff
  436e21:	je     43709b <strcmp@plt+0x33913>
  436e27:	vmovdqa ymm0,YMMWORD PTR [rip+0x165d1]        # 44d400 <strcmp@plt+0x49c78>
  436e2f:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  436e38:	mov    rdi,QWORD PTR [rip+0x38c91]        # 46fad0 <strcmp@plt+0x6c348>
  436e3f:	lea    rdx,[rsp+0xa0]
  436e47:	xor    esi,esi
  436e49:	xor    ecx,ecx
  436e4b:	vzeroupper 
  436e4e:	call   403340 <timer_settime@plt>
  436e53:	cmp    eax,0xffffffff
  436e56:	je     4370c2 <strcmp@plt+0x3393a>
  436e5c:	lea    rbx,[rip+0x38c45]        # 46faa8 <strcmp@plt+0x6c320>
  436e63:	mov    DWORD PTR [rbx],0x1000
  436e69:	mov    edi,0x10000
  436e6e:	call   4320b0 <strcmp@plt+0x2e928>
  436e73:	mov    QWORD PTR [rbx+0x8],rax
  436e77:	mov    DWORD PTR [rbx+0x4],0x0
  436e7e:	mov    QWORD PTR [rbx+0x18],0x0
  436e86:	xor    ecx,ecx
  436e88:	nop    DWORD PTR [rax+rax*1+0x0]
  436e90:	lea    rdx,[rax+rcx*1]
  436e94:	add    rdx,0x30
  436e98:	vmovq  xmm0,rdx
  436e9d:	lea    rdx,[rax+rcx*1+0x20]
  436ea2:	vmovq  xmm1,rdx
  436ea7:	lea    rdx,[rax+rcx*1+0x10]
  436eac:	vmovq  xmm2,rdx
  436eb1:	lea    rdx,[rax+rcx*1]
  436eb5:	vmovq  xmm3,rdx
  436eba:	lea    rdx,[rax+rcx*1+0x70]
  436ebf:	vpunpcklqdq xmm0,xmm1,xmm0
  436ec3:	vmovq  xmm1,rdx
  436ec8:	lea    rdx,[rax+rcx*1+0x60]
  436ecd:	vpunpcklqdq xmm2,xmm3,xmm2
  436ed1:	vmovq  xmm3,rdx
  436ed6:	lea    rdx,[rax+rcx*1+0x50]
  436edb:	vinserti128 ymm0,ymm2,xmm0,0x1
  436ee1:	vpermq ymm2,ymm0,0xfa
  436ee7:	vmovdqu YMMWORD PTR [rax+rcx*1+0x20],ymm2
  436eed:	vmovq  xmm2,rdx
  436ef2:	lea    rdx,[rax+rcx*1+0x40]
  436ef7:	vpermq ymm0,ymm0,0x50
  436efd:	vmovdqu YMMWORD PTR [rax+rcx*1],ymm0
  436f02:	vmovq  xmm0,rdx
  436f07:	lea    rdx,[rax+rcx*1+0xb0]
  436f0f:	vpunpcklqdq xmm1,xmm3,xmm1
  436f13:	vmovq  xmm3,rdx
  436f18:	lea    rdx,[rax+rcx*1+0xa0]
  436f20:	vpunpcklqdq xmm0,xmm0,xmm2
  436f24:	vmovq  xmm2,rdx
  436f29:	lea    rdx,[rax+rcx*1+0x90]
  436f31:	vinserti128 ymm0,ymm0,xmm1,0x1
  436f37:	vpermq ymm1,ymm0,0x50
  436f3d:	vpermq ymm0,ymm0,0xfa
  436f43:	vmovdqu YMMWORD PTR [rax+rcx*1+0x60],ymm0
  436f49:	vmovdqu YMMWORD PTR [rax+rcx*1+0x40],ymm1
  436f4f:	vmovq  xmm0,rdx
  436f54:	lea    rdx,[rax+rcx*1+0x80]
  436f5c:	vmovq  xmm1,rdx
  436f61:	lea    rdx,[rax+rcx*1+0xf0]
  436f69:	vpunpcklqdq xmm2,xmm2,xmm3
  436f6d:	vmovq  xmm3,rdx
  436f72:	lea    rdx,[rax+rcx*1+0xe0]
  436f7a:	vpunpcklqdq xmm0,xmm1,xmm0
  436f7e:	vinserti128 ymm0,ymm0,xmm2,0x1
  436f84:	vpermq ymm1,ymm0,0xfa
  436f8a:	vmovdqu YMMWORD PTR [rax+rcx*1+0xa0],ymm1
  436f93:	vmovq  xmm1,rdx
  436f98:	lea    rdx,[rax+rcx*1+0xd0]
  436fa0:	vmovq  xmm2,rdx
  436fa5:	lea    rdx,[rax+rcx*1+0xc0]
  436fad:	vpermq ymm0,ymm0,0x50
  436fb3:	vmovdqu YMMWORD PTR [rax+rcx*1+0x80],ymm0
  436fbc:	vmovq  xmm0,rdx
  436fc1:	vpunpcklqdq xmm1,xmm1,xmm3
  436fc5:	vpunpcklqdq xmm0,xmm0,xmm2
  436fc9:	vinserti128 ymm0,ymm0,xmm1,0x1
  436fcf:	vpermq ymm1,ymm0,0x50
  436fd5:	vpermq ymm0,ymm0,0xfa
  436fdb:	vmovdqu YMMWORD PTR [rax+rcx*1+0xe0],ymm0
  436fe4:	vmovdqu YMMWORD PTR [rax+rcx*1+0xc0],ymm1
  436fed:	add    rcx,0x100
  436ff4:	cmp    rcx,0x10000
  436ffb:	jne    436e90 <strcmp@plt+0x33708>
  437001:	lea    rax,[rip+0x39510]        # 470518 <strcmp@plt+0x6cd90>
  437008:	mov    rdi,QWORD PTR [rax]
  43700b:	mov    ecx,DWORD PTR [r14]
  43700e:	lea    rsi,[rip+0xeb]        # 437100 <strcmp@plt+0x33978>
  437015:	xor    edx,edx
  437017:	vzeroupper 
  43701a:	call   434d30 <strcmp@plt+0x315a8>
  43701f:	mov    ebx,0x1
  437024:	jmp    437090 <strcmp@plt+0x33908>
  437026:	call   403040 <__errno_location@plt>
  43702b:	mov    edi,DWORD PTR [rax]
  43702d:	call   403170 <strerror@plt>
  437032:	mov    rcx,rax
  437035:	lea    rsi,[rip+0x164cb]        # 44d507 <strcmp@plt+0x49d7f>
  43703c:	jmp    43706c <strcmp@plt+0x338e4>
  43703e:	call   403040 <__errno_location@plt>
  437043:	mov    edi,DWORD PTR [rax]
  437045:	call   403170 <strerror@plt>
  43704a:	mov    rcx,rax
  43704d:	lea    rsi,[rip+0x164ea]        # 44d53e <strcmp@plt+0x49db6>
  437054:	jmp    43706c <strcmp@plt+0x338e4>
  437056:	call   403040 <__errno_location@plt>
  43705b:	mov    edi,DWORD PTR [rax]
  43705d:	call   403170 <strerror@plt>
  437062:	mov    rcx,rax
  437065:	lea    rsi,[rip+0x16507]        # 44d573 <strcmp@plt+0x49deb>
  43706c:	mov    edi,0x2
  437071:	xor    eax,eax
  437073:	mov    rdx,rcx
  437076:	call   42e800 <strcmp@plt+0x2b078>
  43707b:	lea    rsi,[rip+0x163b7]        # 44d439 <strcmp@plt+0x49cb1>
  437082:	xor    ebx,ebx
  437084:	mov    edi,0x1
  437089:	xor    eax,eax
  43708b:	call   42e800 <strcmp@plt+0x2b078>
  437090:	mov    eax,ebx
  437092:	lea    rsp,[rbp-0x10]
  437096:	pop    rbx
  437097:	pop    r14
  437099:	pop    rbp
  43709a:	ret    
  43709b:	call   403040 <__errno_location@plt>
  4370a0:	mov    edi,DWORD PTR [rax]
  4370a2:	call   403170 <strerror@plt>
  4370a7:	mov    rcx,rax
  4370aa:	lea    rsi,[rip+0x163ea]        # 44d49b <strcmp@plt+0x49d13>
  4370b1:	mov    edi,0x4
  4370b6:	xor    eax,eax
  4370b8:	mov    rdx,rcx
  4370bb:	call   42e800 <strcmp@plt+0x2b078>
  4370c0:	jmp    4370ee <strcmp@plt+0x33966>
  4370c2:	mov    rbx,QWORD PTR [rip+0x38a07]        # 46fad0 <strcmp@plt+0x6c348>
  4370c9:	call   403040 <__errno_location@plt>
  4370ce:	mov    edi,DWORD PTR [rax]
  4370d0:	call   403170 <strerror@plt>
  4370d5:	mov    rcx,rax
  4370d8:	lea    rsi,[rip+0x163cf]        # 44d4ae <strcmp@plt+0x49d26>
  4370df:	mov    edi,0x4
  4370e4:	xor    eax,eax
  4370e6:	mov    rdx,rbx
  4370e9:	call   42e800 <strcmp@plt+0x2b078>
  4370ee:	lea    rsi,[rip+0x16374]        # 44d469 <strcmp@plt+0x49ce1>
  4370f5:	xor    ebx,ebx
  4370f7:	mov    edi,0x4
  4370fc:	jmp    437089 <strcmp@plt+0x33901>
  4370fe:	xchg   ax,ax
  437100:	push   r15
  437102:	push   r14
  437104:	push   r12
  437106:	push   rbx
  437107:	sub    rsp,0x18
  43710b:	mov    edi,DWORD PTR [rdi+0x18]
  43710e:	lea    rsi,[rsp+0x4]
  437113:	mov    edx,0x4
  437118:	call   4035a0 <read@plt>
  43711d:	cmp    eax,0x4
  437120:	jne    4371ca <strcmp@plt+0x33a42>
  437126:	xor    r14d,r14d
  437129:	cmp    DWORD PTR [rsp+0x4],0xc
  43712e:	jne    4371e3 <strcmp@plt+0x33a5b>
  437134:	xor    r14d,r14d
  437137:	lea    rdi,[rsp+0x8]
  43713c:	xor    esi,esi
  43713e:	call   403640 <gettimeofday@plt>
  437143:	lea    r15,[rip+0x3895e]        # 46faa8 <strcmp@plt+0x6c320>
  43714a:	mov    eax,DWORD PTR [r15+0x4]
  43714e:	add    eax,0x1
  437151:	cdq    
  437152:	idiv   DWORD PTR [r15]
  437155:	mov    DWORD PTR [r15+0x4],edx
  437159:	mov    rax,QWORD PTR [r15+0x8]
  43715d:	movsxd rcx,edx
  437160:	shl    rcx,0x4
  437164:	lea    r12,[rax+rcx*1]
  437168:	mov    rdi,QWORD PTR [rax+rcx*1+0x8]
  43716d:	cmp    rdi,r12
  437170:	jne    437192 <strcmp@plt+0x33a0a>
  437172:	jmp    4371e3 <strcmp@plt+0x33a5b>
  437174:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43717e:	xchg   ax,ax
  437180:	add    eax,0xffffffff
  437183:	mov    DWORD PTR [rdi+0x14],eax
  437186:	add    rbx,0x8
  43718a:	mov    rdi,QWORD PTR [rbx]
  43718d:	cmp    rdi,r12
  437190:	je     4371e3 <strcmp@plt+0x33a5b>
  437192:	mov    rbx,QWORD PTR [rdi]
  437195:	mov    eax,DWORD PTR [rdi+0x14]
  437198:	test   eax,eax
  43719a:	jg     437180 <strcmp@plt+0x339f8>
  43719c:	mov    rax,QWORD PTR [rdi+0x8]
  4371a0:	mov    QWORD PTR [rbx+0x8],rax
  4371a4:	mov    QWORD PTR [rax],rbx
  4371a7:	lea    rbx,[rbx+0x8]
  4371ab:	vxorps xmm0,xmm0,xmm0
  4371af:	vmovups XMMWORD PTR [rdi],xmm0
  4371b3:	add    DWORD PTR [r15+0x18],0xffffffff
  4371b8:	add    DWORD PTR [r15+0x1c],0x1
  4371bd:	call   QWORD PTR [rdi+0x18]
  4371c0:	mov    rdi,QWORD PTR [rbx]
  4371c3:	cmp    rdi,r12
  4371c6:	jne    437192 <strcmp@plt+0x33a0a>
  4371c8:	jmp    4371e3 <strcmp@plt+0x33a5b>
  4371ca:	lea    rsi,[rip+0x1630e]        # 44d4df <strcmp@plt+0x49d57>
  4371d1:	mov    edi,0x3
  4371d6:	xor    eax,eax
  4371d8:	call   42e800 <strcmp@plt+0x2b078>
  4371dd:	mov    r14d,0xffffffff
  4371e3:	mov    eax,r14d
  4371e6:	add    rsp,0x18
  4371ea:	pop    rbx
  4371eb:	pop    r12
  4371ed:	pop    r14
  4371ef:	pop    r15
  4371f1:	ret    
  4371f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4371fc:	nop    DWORD PTR [rax+0x0]
  437200:	push   rbp
  437201:	mov    rbp,rsp
  437204:	push   r15
  437206:	push   r14
  437208:	push   r13
  43720a:	push   r12
  43720c:	push   rbx
  43720d:	and    rsp,0xffffffffffffffe0
  437211:	sub    rsp,0xc0
  437218:	lea    r14,[rip+0x38889]        # 46faa8 <strcmp@plt+0x6c320>
  43721f:	cmp    QWORD PTR [r14+0x8],0x0
  437224:	je     43736b <strcmp@plt+0x33be3>
  43722a:	lea    rax,[rip+0x2db7f]        # 464db0 <strcmp@plt+0x61628>
  437231:	cmp    DWORD PTR [rax],0x0
  437234:	jle    437249 <strcmp@plt+0x33ac1>
  437236:	lea    rsi,[rip+0x16245]        # 44d482 <strcmp@plt+0x49cfa>
  43723d:	mov    edi,0x5
  437242:	xor    eax,eax
  437244:	call   42e800 <strcmp@plt+0x2b078>
  437249:	lea    rdi,[rsp+0x8]
  43724e:	vxorps xmm0,xmm0,xmm0
  437252:	vmovups YMMWORD PTR [rsp+0x78],ymm0
  437258:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  43725e:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  437264:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  43726a:	vmovaps YMMWORD PTR [rsp],ymm0
  43726f:	vzeroupper 
  437272:	call   4034d0 <sigemptyset@plt>
  437277:	xor    r15d,r15d
  43727a:	mov    rsi,rsp
  43727d:	mov    edi,0xc
  437282:	xor    edx,edx
  437284:	call   4034e0 <sigaction@plt>
  437289:	cmp    eax,0xffffffff
  43728c:	jne    4372b3 <strcmp@plt+0x33b2b>
  43728e:	call   403040 <__errno_location@plt>
  437293:	mov    edi,DWORD PTR [rax]
  437295:	call   403170 <strerror@plt>
  43729a:	mov    rcx,rax
  43729d:	lea    rsi,[rip+0x16350]        # 44d5f4 <strcmp@plt+0x49e6c>
  4372a4:	mov    edi,0x2
  4372a9:	xor    eax,eax
  4372ab:	mov    rdx,rcx
  4372ae:	call   42e800 <strcmp@plt+0x2b078>
  4372b3:	mov    edi,DWORD PTR [rip+0x3881f]        # 46fad8 <strcmp@plt+0x6c350>
  4372b9:	call   403760 <close@plt>
  4372be:	mov    edi,DWORD PTR [rip+0x38818]        # 46fadc <strcmp@plt+0x6c354>
  4372c4:	call   403760 <close@plt>
  4372c9:	mov    r12,QWORD PTR [r14+0x8]
  4372cd:	nop    DWORD PTR [rax]
  4372d0:	mov    rbx,QWORD PTR [r12+0x8]
  4372d5:	cmp    rbx,r12
  4372d8:	je     437341 <strcmp@plt+0x33bb9>
  4372da:	nop    WORD PTR [rax+rax*1+0x0]
  4372e0:	mov    r13,QWORD PTR [rbx+0x8]
  4372e4:	test   rbx,rbx
  4372e7:	je     437339 <strcmp@plt+0x33bb1>
  4372e9:	mov    rax,QWORD PTR [rbx]
  4372ec:	test   r13,r13
  4372ef:	je     4372f5 <strcmp@plt+0x33b6d>
  4372f1:	mov    QWORD PTR [r13+0x0],rax
  4372f5:	test   rax,rax
  4372f8:	je     437310 <strcmp@plt+0x33b88>
  4372fa:	mov    QWORD PTR [rax+0x8],r13
  4372fe:	vxorps xmm0,xmm0,xmm0
  437302:	vmovups XMMWORD PTR [rbx],xmm0
  437306:	jmp    43731d <strcmp@plt+0x33b95>
  437308:	nop    DWORD PTR [rax+rax*1+0x0]
  437310:	vxorps xmm0,xmm0,xmm0
  437314:	vmovups XMMWORD PTR [rbx],xmm0
  437318:	test   r13,r13
  43731b:	je     437322 <strcmp@plt+0x33b9a>
  43731d:	add    DWORD PTR [r14+0x18],0xffffffff
  437322:	mov    rax,QWORD PTR [rbx+0x20]
  437326:	test   rax,rax
  437329:	je     437331 <strcmp@plt+0x33ba9>
  43732b:	mov    rdi,QWORD PTR [rbx+0x28]
  43732f:	call   rax
  437331:	mov    rdi,rbx
  437334:	call   403780 <free@plt>
  437339:	mov    rbx,r13
  43733c:	cmp    r13,r12
  43733f:	jne    4372e0 <strcmp@plt+0x33b58>
  437341:	add    r12,0x10
  437345:	add    r15d,0x1
  437349:	cmp    r15d,0x1000
  437350:	jne    4372d0 <strcmp@plt+0x33b48>
  437356:	mov    rdi,QWORD PTR [r14+0x8]
  43735a:	call   403780 <free@plt>
  43735f:	mov    rdi,QWORD PTR [rip+0x3876a]        # 46fad0 <strcmp@plt+0x6c348>
  437366:	call   4034b0 <timer_delete@plt>
  43736b:	lea    rsp,[rbp-0x28]
  43736f:	pop    rbx
  437370:	pop    r12
  437372:	pop    r13
  437374:	pop    r14
  437376:	pop    r15
  437378:	pop    rbp
  437379:	ret    
  43737a:	nop    WORD PTR [rax+rax*1+0x0]
  437380:	test   rdi,rdi
  437383:	je     4373ab <strcmp@plt+0x33c23>
  437385:	push   rbx
  437386:	mov    rbx,rdi
  437389:	mov    rcx,QWORD PTR [rdi]
  43738c:	mov    rax,QWORD PTR [rdi+0x8]
  437390:	test   rax,rax
  437393:	je     437398 <strcmp@plt+0x33c10>
  437395:	mov    QWORD PTR [rax],rcx
  437398:	test   rcx,rcx
  43739b:	je     4373ac <strcmp@plt+0x33c24>
  43739d:	mov    QWORD PTR [rcx+0x8],rax
  4373a1:	vxorps xmm0,xmm0,xmm0
  4373a5:	vmovups XMMWORD PTR [rbx],xmm0
  4373a9:	jmp    4373b9 <strcmp@plt+0x33c31>
  4373ab:	ret    
  4373ac:	vxorps xmm0,xmm0,xmm0
  4373b0:	vmovups XMMWORD PTR [rbx],xmm0
  4373b4:	test   rax,rax
  4373b7:	je     4373c4 <strcmp@plt+0x33c3c>
  4373b9:	lea    rax,[rip+0x386e8]        # 46faa8 <strcmp@plt+0x6c320>
  4373c0:	add    DWORD PTR [rax+0x18],0xffffffff
  4373c4:	mov    rax,QWORD PTR [rbx+0x20]
  4373c8:	test   rax,rax
  4373cb:	je     4373d3 <strcmp@plt+0x33c4b>
  4373cd:	mov    rdi,QWORD PTR [rbx+0x28]
  4373d1:	call   rax
  4373d3:	mov    rdi,rbx
  4373d6:	pop    rbx
  4373d7:	jmp    403780 <free@plt>
  4373dc:	nop    DWORD PTR [rax+0x0]
  4373e0:	push   rbx
  4373e1:	mov    ebx,edi
  4373e3:	mov    edi,0x48
  4373e8:	call   432070 <strcmp@plt+0x2e8e8>
  4373ed:	mov    DWORD PTR [rax+0x40],ebx
  4373f0:	vxorps xmm0,xmm0,xmm0
  4373f4:	vmovups XMMWORD PTR [rax],xmm0
  4373f8:	pop    rbx
  4373f9:	ret    
  4373fa:	nop    WORD PTR [rax+rax*1+0x0]
  437400:	mov    QWORD PTR [rdi+0x18],rdx
  437404:	mov    QWORD PTR [rdi+0x20],r8
  437408:	mov    QWORD PTR [rdi+0x28],rcx
  43740c:	mov    QWORD PTR [rdi+0x30],rsi
  437410:	mov    QWORD PTR [rdi+0x38],r9
  437414:	ret    
  437415:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43741f:	nop
  437420:	mov    rax,QWORD PTR [rdi+0x30]
  437424:	ret    
  437425:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43742f:	nop
  437430:	mov    rax,QWORD PTR [rdi+0x28]
  437434:	ret    
  437435:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43743f:	nop
  437440:	mov    eax,DWORD PTR [rdi+0x40]
  437443:	ret    
  437444:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43744e:	xchg   ax,ax
  437450:	mov    rax,QWORD PTR [rdi+0x38]
  437454:	ret    
  437455:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43745f:	nop
  437460:	mov    rax,QWORD PTR [rdi+0x8]
  437464:	test   rax,rax
  437467:	je     437488 <strcmp@plt+0x33d00>
  437469:	mov    rcx,QWORD PTR [rdi]
  43746c:	mov    QWORD PTR [rax],rcx
  43746f:	mov    QWORD PTR [rcx+0x8],rax
  437473:	lea    rax,[rip+0x3862e]        # 46faa8 <strcmp@plt+0x6c320>
  43747a:	mov    r8d,DWORD PTR [rax+0x18]
  43747e:	add    r8d,0xffffffff
  437482:	mov    DWORD PTR [rax+0x18],r8d
  437486:	jmp    437493 <strcmp@plt+0x33d0b>
  437488:	lea    rax,[rip+0x38619]        # 46faa8 <strcmp@plt+0x6c320>
  43748f:	mov    r8d,DWORD PTR [rax+0x18]
  437493:	mov    DWORD PTR [rdi+0x10],esi
  437496:	lea    r9,[rip+0x3860b]        # 46faa8 <strcmp@plt+0x6c320>
  43749d:	mov    r10d,DWORD PTR [r9]
  4374a0:	xor    edx,edx
  4374a2:	mov    eax,esi
  4374a4:	div    r10d
  4374a7:	mov    ecx,edx
  4374a9:	mov    DWORD PTR [rdi+0x14],eax
  4374ac:	add    ecx,DWORD PTR [r9+0x4]
  4374b0:	xor    edx,edx
  4374b2:	mov    eax,ecx
  4374b4:	div    r10d
  4374b7:	mov    rax,QWORD PTR [r9+0x8]
  4374bb:	shl    rdx,0x4
  4374bf:	lea    rcx,[rax+rdx*1]
  4374c3:	mov    rsi,QWORD PTR [rax+rdx*1]
  4374c7:	mov    QWORD PTR [rdi+0x8],rcx
  4374cb:	mov    QWORD PTR [rdi],rsi
  4374ce:	mov    QWORD PTR [rsi+0x8],rdi
  4374d2:	mov    QWORD PTR [rax+rdx*1],rdi
  4374d6:	add    r8d,0x1
  4374da:	mov    DWORD PTR [r9+0x18],r8d
  4374de:	ret    
  4374df:	nop
  4374e0:	push   rbx
  4374e1:	sub    rsp,0x10
  4374e5:	movsxd rax,edi
  4374e8:	mov    QWORD PTR [rsp],rax
  4374ec:	mov    QWORD PTR [rsp+0x8],0x0
  4374f5:	mov    rbx,rsp
  4374f8:	nop    DWORD PTR [rax+rax*1+0x0]
  437500:	mov    rdi,rbx
  437503:	mov    rsi,rbx
  437506:	call   403140 <nanosleep@plt>
  43750b:	cmp    eax,0xffffffff
  43750e:	jne    43751a <strcmp@plt+0x33d92>
  437510:	call   403040 <__errno_location@plt>
  437515:	cmp    DWORD PTR [rax],0x4
  437518:	je     437500 <strcmp@plt+0x33d78>
  43751a:	add    rsp,0x10
  43751e:	pop    rbx
  43751f:	ret    
  437520:	push   rbx
  437521:	sub    rsp,0x10
  437525:	mov    ebx,edi
  437527:	mov    DWORD PTR [rsp+0xc],edi
  43752b:	mov    edi,DWORD PTR [rip+0x385ab]        # 46fadc <strcmp@plt+0x6c354>
  437531:	lea    rsi,[rsp+0xc]
  437536:	mov    edx,0x4
  43753b:	call   403180 <write@plt>
  437540:	cmp    rax,0x4
  437544:	jne    43754c <strcmp@plt+0x33dc4>
  437546:	add    rsp,0x10
  43754a:	pop    rbx
  43754b:	ret    
  43754c:	call   403040 <__errno_location@plt>
  437551:	mov    edi,DWORD PTR [rax]
  437553:	call   403170 <strerror@plt>
  437558:	mov    rcx,rax
  43755b:	lea    rsi,[rip+0x1607e]        # 44d5e0 <strcmp@plt+0x49e58>
  437562:	mov    edi,0x3
  437567:	xor    eax,eax
  437569:	mov    edx,ebx
  43756b:	add    rsp,0x10
  43756f:	pop    rbx
  437570:	jmp    42e800 <strcmp@plt+0x2b078>
  437575:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43757f:	nop
  437580:	push   r15
  437582:	push   r14
  437584:	push   r13
  437586:	push   r12
  437588:	push   rbx
  437589:	mov    r14,r8
  43758c:	mov    r15,rcx
  43758f:	mov    r12,rdx
  437592:	mov    r13,rsi
  437595:	call   4373e0 <strcmp@plt+0x33c58>
  43759a:	mov    rbx,rax
  43759d:	xor    r9d,r9d
  4375a0:	mov    rdi,rax
  4375a3:	mov    rsi,r13
  4375a6:	mov    rdx,r12
  4375a9:	mov    rcx,r15
  4375ac:	mov    r8,r14
  4375af:	call   437400 <strcmp@plt+0x33c78>
  4375b4:	mov    rax,rbx
  4375b7:	pop    rbx
  4375b8:	pop    r12
  4375ba:	pop    r13
  4375bc:	pop    r14
  4375be:	pop    r15
  4375c0:	ret    
  4375c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4375cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4375d0:	push   r15
  4375d2:	push   r14
  4375d4:	push   r13
  4375d6:	push   r12
  4375d8:	push   rbx
  4375d9:	mov    r14,r8
  4375dc:	mov    r15,rcx
  4375df:	mov    r12,rdx
  4375e2:	mov    r13,rsi
  4375e5:	call   4373e0 <strcmp@plt+0x33c58>
  4375ea:	mov    rbx,rax
  4375ed:	mov    rdi,rax
  4375f0:	call   4328c0 <strcmp@plt+0x2f138>
  4375f5:	mov    rdi,rbx
  4375f8:	mov    rsi,r13
  4375fb:	mov    rdx,r12
  4375fe:	mov    rcx,r15
  437601:	mov    r8,r14
  437604:	mov    r9,rax
  437607:	call   437400 <strcmp@plt+0x33c78>
  43760c:	mov    rax,rbx
  43760f:	pop    rbx
  437610:	pop    r12
  437612:	pop    r13
  437614:	pop    r14
  437616:	pop    r15
  437618:	ret    
  437619:	nop    DWORD PTR [rax+0x0]
  437620:	push   r15
  437622:	push   r14
  437624:	push   rbx
  437625:	mov    r14,rcx
  437628:	mov    r15,rsi
  43762b:	mov    rax,rdi
  43762e:	mov    rdi,rdx
  437631:	mov    rsi,rax
  437634:	call   42c790 <strcmp@plt+0x29008>
  437639:	test   rax,rax
  43763c:	je     437649 <strcmp@plt+0x33ec1>
  43763e:	mov    rdi,r15
  437641:	mov    rsi,rax
  437644:	call   42c0c0 <strcmp@plt+0x28938>
  437649:	mov    rdi,r15
  43764c:	call   437450 <strcmp@plt+0x33cc8>
  437651:	test   rax,rax
  437654:	je     43766c <strcmp@plt+0x33ee4>
  437656:	mov    rbx,rax
  437659:	mov    rdi,r14
  43765c:	mov    rsi,rax
  43765f:	call   4326e0 <strcmp@plt+0x2ef58>
  437664:	mov    rdi,rbx
  437667:	call   432600 <strcmp@plt+0x2ee78>
  43766c:	mov    rdi,r15
  43766f:	call   437380 <strcmp@plt+0x33bf8>
  437674:	mov    eax,0x1
  437679:	pop    rbx
  43767a:	pop    r14
  43767c:	pop    r15
  43767e:	ret    
  43767f:	nop
  437680:	push   rbx
  437681:	mov    rbx,rdx
  437684:	call   42c790 <strcmp@plt+0x29008>
  437689:	test   rax,rax
  43768c:	je     4376a0 <strcmp@plt+0x33f18>
  43768e:	mov    rdi,rbx
  437691:	mov    rsi,rax
  437694:	call   42c0c0 <strcmp@plt+0x28938>
  437699:	mov    eax,0x1
  43769e:	pop    rbx
  43769f:	ret    
  4376a0:	mov    eax,0xfffffffa
  4376a5:	pop    rbx
  4376a6:	ret    
  4376a7:	nop    WORD PTR [rax+rax*1+0x0]
  4376b0:	push   r15
  4376b2:	push   r14
  4376b4:	push   r13
  4376b6:	push   r12
  4376b8:	push   rbx
  4376b9:	mov    r14,rdx
  4376bc:	mov    rax,rdi
  4376bf:	mov    rdi,rsi
  4376c2:	mov    rsi,rax
  4376c5:	call   42c6b0 <strcmp@plt+0x28f28>
  4376ca:	test   rax,rax
  4376cd:	je     437729 <strcmp@plt+0x33fa1>
  4376cf:	mov    r15,rax
  4376d2:	mov    rbx,QWORD PTR [rax+0x8]
  4376d6:	cmp    rbx,r15
  4376d9:	jne    4376f1 <strcmp@plt+0x33f69>
  4376db:	jmp    43771a <strcmp@plt+0x33f92>
  4376dd:	nop    DWORD PTR [rax]
  4376e0:	mov    rdi,r12
  4376e3:	call   437380 <strcmp@plt+0x33bf8>
  4376e8:	mov    rbx,QWORD PTR [rbx+0x8]
  4376ec:	cmp    rbx,r15
  4376ef:	je     43771a <strcmp@plt+0x33f92>
  4376f1:	mov    r12,QWORD PTR [rbx+0x10]
  4376f5:	mov    rdi,r12
  4376f8:	call   437450 <strcmp@plt+0x33cc8>
  4376fd:	test   rax,rax
  437700:	je     4376e0 <strcmp@plt+0x33f58>
  437702:	mov    r13,rax
  437705:	mov    rdi,r14
  437708:	mov    rsi,rax
  43770b:	call   4326e0 <strcmp@plt+0x2ef58>
  437710:	mov    rdi,r13
  437713:	call   432600 <strcmp@plt+0x2ee78>
  437718:	jmp    4376e0 <strcmp@plt+0x33f58>
  43771a:	mov    rdi,r15
  43771d:	call   42c250 <strcmp@plt+0x28ac8>
  437722:	mov    eax,0x1
  437727:	jmp    43772b <strcmp@plt+0x33fa3>
  437729:	xor    eax,eax
  43772b:	pop    rbx
  43772c:	pop    r12
  43772e:	pop    r13
  437730:	pop    r14
  437732:	pop    r15
  437734:	ret    
  437735:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43773f:	nop
  437740:	jmp    42c6b0 <strcmp@plt+0x28f28>
  437745:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43774f:	nop
  437750:	push   rbp
  437751:	push   r15
  437753:	push   r14
  437755:	push   r13
  437757:	push   r12
  437759:	push   rbx
  43775a:	push   rax
  43775b:	mov    QWORD PTR [rsp],rcx
  43775f:	mov    rbx,rdx
  437762:	mov    r15d,esi
  437765:	mov    rbp,rdi
  437768:	call   42bbd0 <strcmp@plt+0x28448>
  43776d:	mov    r12,rax
  437770:	mov    rdi,rbx
  437773:	mov    rsi,rbp
  437776:	call   42c790 <strcmp@plt+0x29008>
  43777b:	test   rax,rax
  43777e:	je     4377c3 <strcmp@plt+0x3403b>
  437780:	mov    r13,rax
  437783:	mov    rbx,QWORD PTR [rax+0x8]
  437787:	cmp    rbx,rax
  43778a:	je     4377c3 <strcmp@plt+0x3403b>
  43778c:	nop    DWORD PTR [rax+0x0]
  437790:	mov    r14,QWORD PTR [rbx+0x8]
  437794:	mov    rbp,QWORD PTR [rbx+0x10]
  437798:	mov    rdi,rbp
  43779b:	call   437440 <strcmp@plt+0x33cb8>
  4377a0:	cmp    eax,r15d
  4377a3:	jne    4377bb <strcmp@plt+0x34033>
  4377a5:	mov    rdi,rbp
  4377a8:	mov    rsi,r12
  4377ab:	call   42bcf0 <strcmp@plt+0x28568>
  4377b0:	mov    rdi,rbx
  4377b3:	mov    rsi,r13
  4377b6:	call   42c070 <strcmp@plt+0x288e8>
  4377bb:	mov    rbx,r14
  4377be:	cmp    r14,r13
  4377c1:	jne    437790 <strcmp@plt+0x34008>
  4377c3:	mov    rbx,QWORD PTR [r12+0x8]
  4377c8:	cmp    rbx,r12
  4377cb:	mov    r14,QWORD PTR [rsp]
  4377cf:	je     437818 <strcmp@plt+0x34090>
  4377d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4377db:	nop    DWORD PTR [rax+rax*1+0x0]
  4377e0:	mov    r15,QWORD PTR [rbx+0x10]
  4377e4:	mov    rdi,r15
  4377e7:	call   437450 <strcmp@plt+0x33cc8>
  4377ec:	test   rax,rax
  4377ef:	je     437807 <strcmp@plt+0x3407f>
  4377f1:	mov    rbp,rax
  4377f4:	mov    rdi,r14
  4377f7:	mov    rsi,rax
  4377fa:	call   4326e0 <strcmp@plt+0x2ef58>
  4377ff:	mov    rdi,rbp
  437802:	call   432600 <strcmp@plt+0x2ee78>
  437807:	mov    rdi,r15
  43780a:	call   437380 <strcmp@plt+0x33bf8>
  43780f:	mov    rbx,QWORD PTR [rbx+0x8]
  437813:	cmp    rbx,r12
  437816:	jne    4377e0 <strcmp@plt+0x34058>
  437818:	mov    rdi,r12
  43781b:	call   42c250 <strcmp@plt+0x28ac8>
  437820:	mov    eax,0x1
  437825:	add    rsp,0x8
  437829:	pop    rbx
  43782a:	pop    r12
  43782c:	pop    r13
  43782e:	pop    r14
  437830:	pop    r15
  437832:	pop    rbp
  437833:	ret    
  437834:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43783e:	xchg   ax,ax
  437840:	push   rbp
  437841:	push   r15
  437843:	push   r14
  437845:	push   r13
  437847:	push   r12
  437849:	push   rbx
  43784a:	push   rax
  43784b:	mov    r15d,edx
  43784e:	mov    rbx,rsi
  437851:	mov    rbp,rdi
  437854:	call   42bbd0 <strcmp@plt+0x28448>
  437859:	mov    r14,rax
  43785c:	mov    rdi,rbp
  43785f:	mov    rsi,rbx
  437862:	call   42c790 <strcmp@plt+0x29008>
  437867:	test   rax,rax
  43786a:	je     4378b3 <strcmp@plt+0x3412b>
  43786c:	mov    r12,rax
  43786f:	mov    rbp,QWORD PTR [rax+0x8]
  437873:	cmp    rbp,rax
  437876:	je     4378b3 <strcmp@plt+0x3412b>
  437878:	nop    DWORD PTR [rax+rax*1+0x0]
  437880:	mov    r13,QWORD PTR [rbp+0x8]
  437884:	mov    rbx,QWORD PTR [rbp+0x10]
  437888:	mov    rdi,rbx
  43788b:	call   437440 <strcmp@plt+0x33cb8>
  437890:	cmp    eax,r15d
  437893:	jne    4378ab <strcmp@plt+0x34123>
  437895:	mov    rdi,rbx
  437898:	mov    rsi,r14
  43789b:	call   42bcf0 <strcmp@plt+0x28568>
  4378a0:	mov    rdi,rbp
  4378a3:	mov    rsi,r12
  4378a6:	call   42c070 <strcmp@plt+0x288e8>
  4378ab:	mov    rbp,r13
  4378ae:	cmp    r13,r12
  4378b1:	jne    437880 <strcmp@plt+0x340f8>
  4378b3:	mov    rax,r14
  4378b6:	add    rsp,0x8
  4378ba:	pop    rbx
  4378bb:	pop    r12
  4378bd:	pop    r13
  4378bf:	pop    r14
  4378c1:	pop    r15
  4378c3:	pop    rbp
  4378c4:	ret    
  4378c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4378cf:	nop
  4378d0:	push   r15
  4378d2:	push   r14
  4378d4:	push   r12
  4378d6:	push   rbx
  4378d7:	push   rax
  4378d8:	mov    r14,rdx
  4378db:	mov    r15,rsi
  4378de:	mov    r12,rdi
  4378e1:	call   42c790 <strcmp@plt+0x29008>
  4378e6:	mov    rbx,rax
  4378e9:	test   rax,rax
  4378ec:	jne    437909 <strcmp@plt+0x34181>
  4378ee:	call   42bbd0 <strcmp@plt+0x28448>
  4378f3:	test   rax,rax
  4378f6:	je     43791f <strcmp@plt+0x34197>
  4378f8:	mov    rbx,rax
  4378fb:	mov    rdi,r12
  4378fe:	mov    rsi,r15
  437901:	mov    rdx,rax
  437904:	call   42c520 <strcmp@plt+0x28d98>
  437909:	mov    rdi,r14
  43790c:	mov    rsi,rbx
  43790f:	add    rsp,0x8
  437913:	pop    rbx
  437914:	pop    r12
  437916:	pop    r14
  437918:	pop    r15
  43791a:	jmp    42bcf0 <strcmp@plt+0x28568>
  43791f:	xor    eax,eax
  437921:	add    rsp,0x8
  437925:	pop    rbx
  437926:	pop    r12
  437928:	pop    r14
  43792a:	pop    r15
  43792c:	ret    
  43792d:	nop    DWORD PTR [rax]
  437930:	jmp    42c790 <strcmp@plt+0x29008>
  437935:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43793f:	nop
  437940:	push   rbp
  437941:	push   r15
  437943:	push   r14
  437945:	push   r12
  437947:	push   rbx
  437948:	mov    r15d,edx
  43794b:	mov    rbx,rsi
  43794e:	mov    rbp,rdi
  437951:	call   42bbd0 <strcmp@plt+0x28448>
  437956:	mov    r14,rax
  437959:	mov    rdi,rbp
  43795c:	mov    rsi,rbx
  43795f:	call   42c790 <strcmp@plt+0x29008>
  437964:	test   rax,rax
  437967:	je     4379a7 <strcmp@plt+0x3421f>
  437969:	mov    r12,rax
  43796c:	mov    rbx,QWORD PTR [rax+0x8]
  437970:	jmp    43798b <strcmp@plt+0x34203>
  437972:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43797c:	nop    DWORD PTR [rax+0x0]
  437980:	mov    rdi,rbp
  437983:	mov    rsi,r14
  437986:	call   42bcf0 <strcmp@plt+0x28568>
  43798b:	cmp    rbx,r12
  43798e:	je     4379a7 <strcmp@plt+0x3421f>
  437990:	mov    rbp,QWORD PTR [rbx+0x10]
  437994:	mov    rbx,QWORD PTR [rbx+0x8]
  437998:	mov    rdi,rbp
  43799b:	call   437440 <strcmp@plt+0x33cb8>
  4379a0:	cmp    eax,r15d
  4379a3:	jne    43798b <strcmp@plt+0x34203>
  4379a5:	jmp    437980 <strcmp@plt+0x341f8>
  4379a7:	mov    rax,r14
  4379aa:	pop    rbx
  4379ab:	pop    r12
  4379ad:	pop    r14
  4379af:	pop    r15
  4379b1:	pop    rbp
  4379b2:	ret    
  4379b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4379bd:	nop    DWORD PTR [rax]
  4379c0:	push   rbp
  4379c1:	push   r15
  4379c3:	push   r14
  4379c5:	push   rbx
  4379c6:	push   rax
  4379c7:	mov    ebp,edx
  4379c9:	mov    r14,rsi
  4379cc:	mov    rbx,rdi
  4379cf:	lea    eax,[rbp+rbp*1+0x0]
  4379d3:	movsxd rdx,eax
  4379d6:	xor    ecx,ecx
  4379d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4379e0:	movzx  eax,BYTE PTR [rbx+rcx*1]
  4379e4:	cmp    rcx,rdx
  4379e7:	lea    rcx,[rcx+0x1]
  4379eb:	jg     4379f1 <strcmp@plt+0x34269>
  4379ed:	test   al,al
  4379ef:	jne    4379e0 <strcmp@plt+0x34258>
  4379f1:	lea    edx,[rbp+rbp*1+0x1]
  4379f5:	cmp    edx,ecx
  4379f7:	je     437a04 <strcmp@plt+0x3427c>
  4379f9:	xor    r15d,r15d
  4379fc:	test   al,al
  4379fe:	jne    437aab <strcmp@plt+0x34323>
  437a04:	mov    r15d,0x1
  437a0a:	test   ebp,ebp
  437a0c:	jle    437aab <strcmp@plt+0x34323>
  437a12:	call   403080 <__ctype_toupper_loc@plt>
  437a17:	movsxd r11,ebp
  437a1a:	xor    edx,edx
  437a1c:	lea    r8,[rip+0x15c4d]        # 44d670 <strcmp@plt+0x49ee8>
  437a23:	mov    r10d,0x7e03ff
  437a29:	lea    r9,[rip+0x15ca0]        # 44d6d0 <strcmp@plt+0x49f48>
  437a30:	movsx  rcx,BYTE PTR [rbx+rdx*2]
  437a35:	movsx  rbp,BYTE PTR [rbx+rdx*2+0x1]
  437a3b:	mov    rdi,QWORD PTR [rax]
  437a3e:	movsx  ecx,BYTE PTR [rdi+rcx*4]
  437a42:	add    ecx,0xffffffd0
  437a45:	mov    esi,0xffffffff
  437a4a:	cmp    ecx,0x16
  437a4d:	ja     437a56 <strcmp@plt+0x342ce>
  437a4f:	movsxd rcx,ecx
  437a52:	mov    esi,DWORD PTR [r8+rcx*4]
  437a56:	movsx  edi,BYTE PTR [rdi+rbp*4]
  437a5a:	add    edi,0xffffffd0
  437a5d:	cmp    edi,0x16
  437a60:	ja     437a86 <strcmp@plt+0x342fe>
  437a62:	bt     r10d,edi
  437a66:	jae    437a86 <strcmp@plt+0x342fe>
  437a68:	cmp    esi,0xffffffff
  437a6b:	je     437a86 <strcmp@plt+0x342fe>
  437a6d:	movsxd rcx,edi
  437a70:	shl    esi,0x4
  437a73:	or     esi,DWORD PTR [r9+rcx*4]
  437a77:	mov    BYTE PTR [r14+rdx*1],sil
  437a7b:	add    rdx,0x1
  437a7f:	cmp    rdx,r11
  437a82:	jl     437a30 <strcmp@plt+0x342a8>
  437a84:	jmp    437aab <strcmp@plt+0x34323>
  437a86:	lea    rax,[rip+0x2d323]        # 464db0 <strcmp@plt+0x61628>
  437a8d:	xor    r15d,r15d
  437a90:	cmp    DWORD PTR [rax],0x2
  437a93:	jl     437aab <strcmp@plt+0x34323>
  437a95:	lea    rsi,[rip+0x15b8b]        # 44d627 <strcmp@plt+0x49e9f>
  437a9c:	xor    r15d,r15d
  437a9f:	mov    edi,0x6
  437aa4:	xor    eax,eax
  437aa6:	call   42e800 <strcmp@plt+0x2b078>
  437aab:	mov    eax,r15d
  437aae:	add    rsp,0x8
  437ab2:	pop    rbx
  437ab3:	pop    r14
  437ab5:	pop    r15
  437ab7:	pop    rbp
  437ab8:	ret    
  437ab9:	nop    DWORD PTR [rax+0x0]
  437ac0:	push   r15
  437ac2:	push   r14
  437ac4:	push   rbx
  437ac5:	mov    rbx,rdi
  437ac8:	vxorps xmm0,xmm0,xmm0
  437acc:	vmovups YMMWORD PTR [rip+0x3800c],ymm0        # 46fae0 <strcmp@plt+0x6c358>
  437ad4:	mov    BYTE PTR [rip+0x38025],0x0        # 46fb00 <strcmp@plt+0x6c378>
  437adb:	lea    r14,[rip+0x37ffe]        # 46fae0 <strcmp@plt+0x6c358>
  437ae2:	mov    rdi,r14
  437ae5:	vzeroupper 
  437ae8:	call   4031e0 <strlen@plt>
  437aed:	lea    rdi,[rax+r14*1]
  437af1:	movzx  edx,BYTE PTR [rbx]
  437af4:	lea    r15,[rip+0x15b64]        # 44d65f <strcmp@plt+0x49ed7>
  437afb:	xor    eax,eax
  437afd:	mov    rsi,r15
  437b00:	call   4030b0 <sprintf@plt>
  437b05:	mov    rdi,r14
  437b08:	call   4031e0 <strlen@plt>
  437b0d:	lea    rdi,[rax+r14*1]
  437b11:	movzx  edx,BYTE PTR [rbx+0x1]
  437b15:	xor    eax,eax
  437b17:	mov    rsi,r15
  437b1a:	call   4030b0 <sprintf@plt>
  437b1f:	mov    rdi,r14
  437b22:	call   4031e0 <strlen@plt>
  437b27:	lea    rdi,[rax+r14*1]
  437b2b:	movzx  edx,BYTE PTR [rbx+0x2]
  437b2f:	xor    eax,eax
  437b31:	mov    rsi,r15
  437b34:	call   4030b0 <sprintf@plt>
  437b39:	mov    rdi,r14
  437b3c:	call   4031e0 <strlen@plt>
  437b41:	lea    rdi,[rax+r14*1]
  437b45:	movzx  edx,BYTE PTR [rbx+0x3]
  437b49:	xor    eax,eax
  437b4b:	mov    rsi,r15
  437b4e:	call   4030b0 <sprintf@plt>
  437b53:	mov    rdi,r14
  437b56:	call   4031e0 <strlen@plt>
  437b5b:	lea    rdi,[rax+r14*1]
  437b5f:	movzx  edx,BYTE PTR [rbx+0x4]
  437b63:	xor    eax,eax
  437b65:	mov    rsi,r15
  437b68:	call   4030b0 <sprintf@plt>
  437b6d:	mov    rdi,r14
  437b70:	call   4031e0 <strlen@plt>
  437b75:	lea    rdi,[rax+r14*1]
  437b79:	movzx  edx,BYTE PTR [rbx+0x5]
  437b7d:	xor    eax,eax
  437b7f:	mov    rsi,r15
  437b82:	call   4030b0 <sprintf@plt>
  437b87:	mov    rdi,r14
  437b8a:	call   4031e0 <strlen@plt>
  437b8f:	lea    rdi,[rax+r14*1]
  437b93:	movzx  edx,BYTE PTR [rbx+0x6]
  437b97:	xor    eax,eax
  437b99:	mov    rsi,r15
  437b9c:	call   4030b0 <sprintf@plt>
  437ba1:	mov    rdi,r14
  437ba4:	call   4031e0 <strlen@plt>
  437ba9:	lea    rdi,[rax+r14*1]
  437bad:	movzx  edx,BYTE PTR [rbx+0x7]
  437bb1:	xor    eax,eax
  437bb3:	mov    rsi,r15
  437bb6:	call   4030b0 <sprintf@plt>
  437bbb:	mov    rdi,r14
  437bbe:	call   4031e0 <strlen@plt>
  437bc3:	lea    rdi,[rax+r14*1]
  437bc7:	movzx  edx,BYTE PTR [rbx+0x8]
  437bcb:	xor    eax,eax
  437bcd:	mov    rsi,r15
  437bd0:	call   4030b0 <sprintf@plt>
  437bd5:	mov    rdi,r14
  437bd8:	call   4031e0 <strlen@plt>
  437bdd:	lea    rdi,[rax+r14*1]
  437be1:	movzx  edx,BYTE PTR [rbx+0x9]
  437be5:	xor    eax,eax
  437be7:	mov    rsi,r15
  437bea:	call   4030b0 <sprintf@plt>
  437bef:	mov    rdi,r14
  437bf2:	call   4031e0 <strlen@plt>
  437bf7:	lea    rdi,[rax+r14*1]
  437bfb:	movzx  edx,BYTE PTR [rbx+0xa]
  437bff:	xor    eax,eax
  437c01:	mov    rsi,r15
  437c04:	call   4030b0 <sprintf@plt>
  437c09:	mov    rdi,r14
  437c0c:	call   4031e0 <strlen@plt>
  437c11:	lea    rdi,[rax+r14*1]
  437c15:	movzx  edx,BYTE PTR [rbx+0xb]
  437c19:	xor    eax,eax
  437c1b:	mov    rsi,r15
  437c1e:	call   4030b0 <sprintf@plt>
  437c23:	mov    rdi,r14
  437c26:	call   4031e0 <strlen@plt>
  437c2b:	lea    rdi,[rax+r14*1]
  437c2f:	movzx  edx,BYTE PTR [rbx+0xc]
  437c33:	xor    eax,eax
  437c35:	mov    rsi,r15
  437c38:	call   4030b0 <sprintf@plt>
  437c3d:	mov    rdi,r14
  437c40:	call   4031e0 <strlen@plt>
  437c45:	lea    rdi,[rax+r14*1]
  437c49:	movzx  edx,BYTE PTR [rbx+0xd]
  437c4d:	xor    eax,eax
  437c4f:	mov    rsi,r15
  437c52:	call   4030b0 <sprintf@plt>
  437c57:	mov    rdi,r14
  437c5a:	call   4031e0 <strlen@plt>
  437c5f:	lea    rdi,[rax+r14*1]
  437c63:	movzx  edx,BYTE PTR [rbx+0xe]
  437c67:	xor    eax,eax
  437c69:	mov    rsi,r15
  437c6c:	call   4030b0 <sprintf@plt>
  437c71:	mov    rdi,r14
  437c74:	call   4031e0 <strlen@plt>
  437c79:	lea    rdi,[rax+r14*1]
  437c7d:	movzx  edx,BYTE PTR [rbx+0xf]
  437c81:	xor    eax,eax
  437c83:	mov    rsi,r15
  437c86:	call   4030b0 <sprintf@plt>
  437c8b:	mov    rax,r14
  437c8e:	pop    rbx
  437c8f:	pop    r14
  437c91:	pop    r15
  437c93:	ret    
  437c94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437c9e:	xchg   ax,ax
  437ca0:	push   rbp
  437ca1:	push   r15
  437ca3:	push   r14
  437ca5:	push   r12
  437ca7:	push   rbx
  437ca8:	mov    rbp,QWORD PTR [rdi+0x8]
  437cac:	cmp    rbp,rdi
  437caf:	je     437cff <strcmp@plt+0x34577>
  437cb1:	mov    r14d,esi
  437cb4:	mov    r12,rdi
  437cb7:	mov    r15d,esi
  437cba:	shr    r15d,1
  437cbd:	nop    DWORD PTR [rax]
  437cc0:	mov    rbx,QWORD PTR [rbp+0x8]
  437cc4:	mov    rdi,QWORD PTR [rbp+0x10]
  437cc8:	call   4232e0 <strcmp@plt+0x1fb58>
  437ccd:	mov    rdi,rax
  437cd0:	call   423200 <strcmp@plt+0x1fa78>
  437cd5:	movzx  ecx,ax
  437cd8:	mov    eax,r14d
  437cdb:	cmp    ecx,0x2
  437cde:	je     437ce8 <strcmp@plt+0x34560>
  437ce0:	cmp    ecx,0xa
  437ce3:	jne    437cec <strcmp@plt+0x34564>
  437ce5:	mov    eax,r15d
  437ce8:	test   al,0x1
  437cea:	jne    437cf7 <strcmp@plt+0x3456f>
  437cec:	mov    rdi,rbp
  437cef:	mov    rsi,r12
  437cf2:	call   42c070 <strcmp@plt+0x288e8>
  437cf7:	mov    rbp,rbx
  437cfa:	cmp    rbx,r12
  437cfd:	jne    437cc0 <strcmp@plt+0x34538>
  437cff:	pop    rbx
  437d00:	pop    r12
  437d02:	pop    r14
  437d04:	pop    r15
  437d06:	pop    rbp
  437d07:	ret    
  437d08:	nop    DWORD PTR [rax+rax*1+0x0]
  437d10:	push   rbx
  437d11:	mov    ebx,esi
  437d13:	call   4232e0 <strcmp@plt+0x1fb58>
  437d18:	mov    rdi,rax
  437d1b:	call   423200 <strcmp@plt+0x1fa78>
  437d20:	movzx  eax,ax
  437d23:	cmp    eax,0xa
  437d26:	je     437d31 <strcmp@plt+0x345a9>
  437d28:	cmp    eax,0x2
  437d2b:	je     437d33 <strcmp@plt+0x345ab>
  437d2d:	xor    ebx,ebx
  437d2f:	jmp    437d36 <strcmp@plt+0x345ae>
  437d31:	shr    bl,1
  437d33:	and    bl,0x1
  437d36:	mov    eax,ebx
  437d38:	pop    rbx
  437d39:	ret    
  437d3a:	nop    WORD PTR [rax+rax*1+0x0]
  437d40:	xor    eax,eax
  437d42:	jmp    437d54 <strcmp@plt+0x345cc>
  437d44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437d4e:	xchg   ax,ax
  437d50:	add    rdi,0x1
  437d54:	movzx  ecx,BYTE PTR [rdi]
  437d57:	cmp    cl,0x20
  437d5a:	je     437d50 <strcmp@plt+0x345c8>
  437d5c:	test   cl,cl
  437d5e:	je     437d6b <strcmp@plt+0x345e3>
  437d60:	movsxd rdx,eax
  437d63:	mov    BYTE PTR [rsi+rdx*1],cl
  437d66:	add    eax,0x1
  437d69:	jmp    437d50 <strcmp@plt+0x345c8>
  437d6b:	cdqe   
  437d6d:	mov    BYTE PTR [rsi+rax*1],0x0
  437d71:	ret    
  437d72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437d7c:	nop    DWORD PTR [rax+0x0]
  437d80:	xor    r9d,r9d
  437d83:	xor    r8d,r8d
  437d86:	jmp    437d94 <strcmp@plt+0x3460c>
  437d88:	nop    DWORD PTR [rax+rax*1+0x0]
  437d90:	add    rdi,0x1
  437d94:	movzx  ecx,BYTE PTR [rdi]
  437d97:	xor    edx,edx
  437d99:	cmp    cl,0x20
  437d9c:	je     437db0 <strcmp@plt+0x34628>
  437d9e:	test   cl,cl
  437da0:	jne    437db9 <strcmp@plt+0x34631>
  437da2:	jmp    437dc8 <strcmp@plt+0x34640>
  437da4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437dae:	xchg   ax,ax
  437db0:	test   r8b,r8b
  437db3:	jne    437d90 <strcmp@plt+0x34608>
  437db5:	mov    dl,0x1
  437db7:	mov    cl,0x20
  437db9:	movsxd rax,r9d
  437dbc:	mov    BYTE PTR [rsi+rax*1],cl
  437dbf:	add    r9d,0x1
  437dc3:	mov    r8d,edx
  437dc6:	jmp    437d90 <strcmp@plt+0x34608>
  437dc8:	movsxd rax,r9d
  437dcb:	mov    BYTE PTR [rsi+rax*1],0x0
  437dcf:	ret    
  437dd0:	push   r15
  437dd2:	push   r14
  437dd4:	push   rbx
  437dd5:	mov    rbx,rdi
  437dd8:	call   4031e0 <strlen@plt>
  437ddd:	mov    r14,rax
  437de0:	shl    rax,0x20
  437de4:	movabs rdi,0x100000000
  437dee:	add    rdi,rax
  437df1:	sar    rdi,0x20
  437df5:	call   4320b0 <strcmp@plt+0x2e928>
  437dfa:	mov    r15,rax
  437dfd:	test   r14d,r14d
  437e00:	jle    437e2b <strcmp@plt+0x346a3>
  437e02:	call   4030a0 <__ctype_tolower_loc@plt>
  437e07:	mov    esi,r14d
  437e0a:	lea    rdx,[rsi-0x1]
  437e0e:	mov    r8d,r14d
  437e11:	and    r8d,0x7
  437e15:	cmp    rdx,0x7
  437e19:	jae    437e32 <strcmp@plt+0x346aa>
  437e1b:	xor    edx,edx
  437e1d:	test   r8,r8
  437e20:	jne    437ee0 <strcmp@plt+0x34758>
  437e26:	jmp    437f08 <strcmp@plt+0x34780>
  437e2b:	xor    eax,eax
  437e2d:	jmp    437f0b <strcmp@plt+0x34783>
  437e32:	sub    rsi,r8
  437e35:	xor    edx,edx
  437e37:	nop    WORD PTR [rax+rax*1+0x0]
  437e40:	mov    rdi,QWORD PTR [rax]
  437e43:	movsx  rcx,BYTE PTR [rbx+rdx*1]
  437e48:	movzx  ecx,BYTE PTR [rdi+rcx*4]
  437e4c:	mov    BYTE PTR [r15+rdx*1],cl
  437e50:	mov    rcx,QWORD PTR [rax]
  437e53:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x1]
  437e59:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437e5d:	mov    BYTE PTR [r15+rdx*1+0x1],cl
  437e62:	mov    rcx,QWORD PTR [rax]
  437e65:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x2]
  437e6b:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437e6f:	mov    BYTE PTR [r15+rdx*1+0x2],cl
  437e74:	mov    rcx,QWORD PTR [rax]
  437e77:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x3]
  437e7d:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437e81:	mov    BYTE PTR [r15+rdx*1+0x3],cl
  437e86:	mov    rcx,QWORD PTR [rax]
  437e89:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x4]
  437e8f:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437e93:	mov    BYTE PTR [r15+rdx*1+0x4],cl
  437e98:	mov    rcx,QWORD PTR [rax]
  437e9b:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x5]
  437ea1:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437ea5:	mov    BYTE PTR [r15+rdx*1+0x5],cl
  437eaa:	mov    rcx,QWORD PTR [rax]
  437ead:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x6]
  437eb3:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437eb7:	mov    BYTE PTR [r15+rdx*1+0x6],cl
  437ebc:	mov    rcx,QWORD PTR [rax]
  437ebf:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x7]
  437ec5:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437ec9:	mov    BYTE PTR [r15+rdx*1+0x7],cl
  437ece:	add    rdx,0x8
  437ed2:	cmp    rsi,rdx
  437ed5:	jne    437e40 <strcmp@plt+0x346b8>
  437edb:	test   r8,r8
  437ede:	je     437f08 <strcmp@plt+0x34780>
  437ee0:	mov    rsi,r15
  437ee3:	add    rsi,rdx
  437ee6:	add    rbx,rdx
  437ee9:	xor    edx,edx
  437eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  437ef0:	mov    rcx,QWORD PTR [rax]
  437ef3:	movsx  rdi,BYTE PTR [rbx+rdx*1]
  437ef8:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437efc:	mov    BYTE PTR [rsi+rdx*1],cl
  437eff:	add    rdx,0x1
  437f03:	cmp    r8,rdx
  437f06:	jne    437ef0 <strcmp@plt+0x34768>
  437f08:	mov    eax,r14d
  437f0b:	mov    BYTE PTR [r15+rax*1],0x0
  437f10:	mov    rax,r15
  437f13:	pop    rbx
  437f14:	pop    r14
  437f16:	pop    r15
  437f18:	ret    
  437f19:	nop    DWORD PTR [rax+0x0]
  437f20:	push   r15
  437f22:	push   r14
  437f24:	push   r12
  437f26:	push   rbx
  437f27:	sub    rsp,0x18
  437f2b:	mov    rbx,rdi
  437f2e:	call   4031e0 <strlen@plt>
  437f33:	mov    r15,rax
  437f36:	shl    rax,0x20
  437f3a:	movabs rdi,0x100000000
  437f44:	add    rdi,rax
  437f47:	sar    rdi,0x20
  437f4b:	call   4320b0 <strcmp@plt+0x2e928>
  437f50:	mov    r14,rax
  437f53:	xor    r12d,r12d
  437f56:	test   r15d,r15d
  437f59:	jle    437f81 <strcmp@plt+0x347f9>
  437f5b:	call   4030a0 <__ctype_tolower_loc@plt>
  437f60:	mov    r8d,r15d
  437f63:	lea    rdx,[r8-0x1]
  437f67:	and    r15d,0x7
  437f6b:	cmp    rdx,0x7
  437f6f:	jae    437f89 <strcmp@plt+0x34801>
  437f71:	xor    edx,edx
  437f73:	test   r15,r15
  437f76:	jne    438040 <strcmp@plt+0x348b8>
  437f7c:	jmp    438068 <strcmp@plt+0x348e0>
  437f81:	xor    r8d,r8d
  437f84:	jmp    438068 <strcmp@plt+0x348e0>
  437f89:	mov    rsi,r8
  437f8c:	sub    rsi,r15
  437f8f:	xor    edx,edx
  437f91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  437fa0:	mov    rdi,QWORD PTR [rax]
  437fa3:	movsx  rcx,BYTE PTR [rbx+rdx*1]
  437fa8:	movzx  ecx,BYTE PTR [rdi+rcx*4]
  437fac:	mov    BYTE PTR [r14+rdx*1],cl
  437fb0:	mov    rcx,QWORD PTR [rax]
  437fb3:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x1]
  437fb9:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437fbd:	mov    BYTE PTR [r14+rdx*1+0x1],cl
  437fc2:	mov    rcx,QWORD PTR [rax]
  437fc5:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x2]
  437fcb:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437fcf:	mov    BYTE PTR [r14+rdx*1+0x2],cl
  437fd4:	mov    rcx,QWORD PTR [rax]
  437fd7:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x3]
  437fdd:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437fe1:	mov    BYTE PTR [r14+rdx*1+0x3],cl
  437fe6:	mov    rcx,QWORD PTR [rax]
  437fe9:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x4]
  437fef:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437ff3:	mov    BYTE PTR [r14+rdx*1+0x4],cl
  437ff8:	mov    rcx,QWORD PTR [rax]
  437ffb:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x5]
  438001:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  438005:	mov    BYTE PTR [r14+rdx*1+0x5],cl
  43800a:	mov    rcx,QWORD PTR [rax]
  43800d:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x6]
  438013:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  438017:	mov    BYTE PTR [r14+rdx*1+0x6],cl
  43801c:	mov    rcx,QWORD PTR [rax]
  43801f:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x7]
  438025:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  438029:	mov    BYTE PTR [r14+rdx*1+0x7],cl
  43802e:	add    rdx,0x8
  438032:	cmp    rsi,rdx
  438035:	jne    437fa0 <strcmp@plt+0x34818>
  43803b:	test   r15,r15
  43803e:	je     438068 <strcmp@plt+0x348e0>
  438040:	mov    rsi,r14
  438043:	add    rsi,rdx
  438046:	add    rbx,rdx
  438049:	xor    edx,edx
  43804b:	nop    DWORD PTR [rax+rax*1+0x0]
  438050:	mov    rcx,QWORD PTR [rax]
  438053:	movsx  rdi,BYTE PTR [rbx+rdx*1]
  438058:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  43805c:	mov    BYTE PTR [rsi+rdx*1],cl
  43805f:	add    rdx,0x1
  438063:	cmp    r15,rdx
  438066:	jne    438050 <strcmp@plt+0x348c8>
  438068:	mov    BYTE PTR [r14+r8*1],0x0
  43806d:	mov    rax,r14
  438070:	jmp    438084 <strcmp@plt+0x348fc>
  438072:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43807c:	nop    DWORD PTR [rax+0x0]
  438080:	add    rax,0x1
  438084:	movzx  ecx,BYTE PTR [rax]
  438087:	cmp    cl,0x20
  43808a:	je     438080 <strcmp@plt+0x348f8>
  43808c:	test   cl,cl
  43808e:	je     43809d <strcmp@plt+0x34915>
  438090:	movsxd rdx,r12d
  438093:	mov    BYTE PTR [rsp+rdx*1+0xe],cl
  438097:	add    r12d,0x1
  43809b:	jmp    438080 <strcmp@plt+0x348f8>
  43809d:	movsxd rax,r12d
  4380a0:	mov    BYTE PTR [rsp+rax*1+0xe],0x0
  4380a5:	lea    rsi,[rip+0x186c7]        # 450773 <strcmp@plt+0x4cfeb>
  4380ac:	lea    rdi,[rsp+0xe]
  4380b1:	call   403788 <strcmp@plt>
  4380b6:	mov    bl,0x1
  4380b8:	test   eax,eax
  4380ba:	je     4380ff <strcmp@plt+0x34977>
  4380bc:	lea    rsi,[rip+0xa497]        # 44255a <strcmp@plt+0x3edd2>
  4380c3:	lea    rdi,[rsp+0xe]
  4380c8:	call   403788 <strcmp@plt>
  4380cd:	test   eax,eax
  4380cf:	je     4380ff <strcmp@plt+0x34977>
  4380d1:	lea    rsi,[rip+0xdfac]        # 446084 <strcmp@plt+0x428fc>
  4380d8:	lea    rdi,[rsp+0xe]
  4380dd:	call   403788 <strcmp@plt>
  4380e2:	test   eax,eax
  4380e4:	je     4380fd <strcmp@plt+0x34975>
  4380e6:	lea    rsi,[rip+0xa472]        # 44255f <strcmp@plt+0x3edd7>
  4380ed:	lea    rdi,[rsp+0xe]
  4380f2:	call   403788 <strcmp@plt>
  4380f7:	neg    eax
  4380f9:	sbb    bl,bl
  4380fb:	jmp    4380ff <strcmp@plt+0x34977>
  4380fd:	xor    ebx,ebx
  4380ff:	mov    rdi,r14
  438102:	call   403780 <free@plt>
  438107:	mov    eax,ebx
  438109:	add    rsp,0x18
  43810d:	pop    rbx
  43810e:	pop    r12
  438110:	pop    r14
  438112:	pop    r15
  438114:	ret    
  438115:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43811f:	nop
  438120:	push   r14
  438122:	push   rbx
  438123:	push   rax
  438124:	call   423740 <strcmp@plt+0x1ffb8>
  438129:	mov    r14,rax
  43812c:	mov    rdi,rax
  43812f:	call   4230e0 <strcmp@plt+0x1f958>
  438134:	test   rax,rax
  438137:	je     43815a <strcmp@plt+0x349d2>
  438139:	mov    rbx,rax
  43813c:	mov    rdi,rax
  43813f:	call   423200 <strcmp@plt+0x1fa78>
  438144:	movzx  eax,ax
  438147:	cmp    eax,0xa
  43814a:	je     43815f <strcmp@plt+0x349d7>
  43814c:	cmp    eax,0x2
  43814f:	jne    43816e <strcmp@plt+0x349e6>
  438151:	lea    rdi,[rip+0xab7c]        # 442cd4 <strcmp@plt+0x3f54c>
  438158:	jmp    438166 <strcmp@plt+0x349de>
  43815a:	xor    r14d,r14d
  43815d:	jmp    43816e <strcmp@plt+0x349e6>
  43815f:	lea    rdi,[rip+0xb9fc]        # 443b62 <strcmp@plt+0x403da>
  438166:	mov    rsi,rbx
  438169:	call   423c60 <strcmp@plt+0x204d8>
  43816e:	mov    rax,r14
  438171:	add    rsp,0x8
  438175:	pop    rbx
  438176:	pop    r14
  438178:	ret    
  438179:	nop    DWORD PTR [rax+0x0]
  438180:	cmp    DWORD PTR [rdi+0x18],0x2
  438184:	jne    438197 <strcmp@plt+0x34a0f>
  438186:	push   rax
  438187:	call   4230a0 <strcmp@plt+0x1f918>
  43818c:	test   ax,ax
  43818f:	sete   al
  438192:	add    rsp,0x8
  438196:	ret    
  438197:	xor    eax,eax
  438199:	ret    
  43819a:	nop    WORD PTR [rax+rax*1+0x0]
  4381a0:	lea    rax,[rip+0x2cb99]        # 464d40 <strcmp@plt+0x615b8>
  4381a7:	lea    rcx,[rip+0x3795a]        # 46fb08 <strcmp@plt+0x6c380>
  4381ae:	mov    QWORD PTR [rcx],rax
  4381b1:	ret    
  4381b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4381bc:	nop    DWORD PTR [rax+0x0]
  4381c0:	push   rbp
  4381c1:	push   r15
  4381c3:	push   r14
  4381c5:	push   r13
  4381c7:	push   r12
  4381c9:	push   rbx
  4381ca:	push   rax
  4381cb:	mov    r14,rdx
  4381ce:	mov    ebp,esi
  4381d0:	mov    ebx,edi
  4381d2:	mov    edi,esi
  4381d4:	call   43ae90 <strcmp@plt+0x37708>
  4381d9:	test   rax,rax
  4381dc:	je     43823e <strcmp@plt+0x34ab6>
  4381de:	mov    r13,rax
  4381e1:	mov    rdi,r14
  4381e4:	call   423200 <strcmp@plt+0x1fa78>
  4381e9:	movzx  ebp,ax
  4381ec:	mov    rdi,r13
  4381ef:	mov    esi,ebp
  4381f1:	call   43abd0 <strcmp@plt+0x37448>
  4381f6:	test   rax,rax
  4381f9:	je     438271 <strcmp@plt+0x34ae9>
  4381fb:	mov    r15,rax
  4381fe:	test   bl,bl
  438200:	je     4382a6 <strcmp@plt+0x34b1e>
  438206:	mov    rdi,r14
  438209:	call   424790 <strcmp@plt+0x21008>
  43820e:	cmp    eax,0x1
  438211:	jne    438328 <strcmp@plt+0x34ba0>
  438217:	lea    rax,[rip+0x2cb92]        # 464db0 <strcmp@plt+0x61628>
  43821e:	cmp    DWORD PTR [rax],0x2
  438221:	jl     4385c0 <strcmp@plt+0x34e38>
  438227:	mov    rdi,r14
  43822a:	call   423130 <strcmp@plt+0x1f9a8>
  43822f:	mov    rcx,rax
  438232:	lea    rsi,[rip+0x15676]        # 44d8af <strcmp@plt+0x4a127>
  438239:	jmp    43830b <strcmp@plt+0x34b83>
  43823e:	lea    rax,[rip+0x2cb6b]        # 464db0 <strcmp@plt+0x61628>
  438245:	cmp    DWORD PTR [rax],0x2
  438248:	jl     4385c0 <strcmp@plt+0x34e38>
  43824e:	lea    rsi,[rip+0x154d7]        # 44d72c <strcmp@plt+0x49fa4>
  438255:	mov    edi,0x6
  43825a:	xor    eax,eax
  43825c:	mov    edx,ebp
  43825e:	add    rsp,0x8
  438262:	pop    rbx
  438263:	pop    r12
  438265:	pop    r13
  438267:	pop    r14
  438269:	pop    r15
  43826b:	pop    rbp
  43826c:	jmp    42e800 <strcmp@plt+0x2b078>
  438271:	lea    rax,[rip+0x2cb38]        # 464db0 <strcmp@plt+0x61628>
  438278:	cmp    DWORD PTR [rax],0x2
  43827b:	jl     4385c0 <strcmp@plt+0x34e38>
  438281:	cmp    ebp,0x2
  438284:	lea    rax,[rip+0xb6b8]        # 443943 <strcmp@plt+0x401bb>
  43828b:	lea    rdx,[rip+0xb6b6]        # 443948 <strcmp@plt+0x401c0>
  438292:	cmove  rdx,rax
  438296:	mov    rcx,QWORD PTR [r13+0x0]
  43829a:	lea    rsi,[rip+0x154f3]        # 44d794 <strcmp@plt+0x4a00c>
  4382a1:	jmp    438369 <strcmp@plt+0x34be1>
  4382a6:	lea    rbx,[rip+0x2cb03]        # 464db0 <strcmp@plt+0x61628>
  4382ad:	cmp    DWORD PTR [rbx],0x2
  4382b0:	jl     4382d4 <strcmp@plt+0x34b4c>
  4382b2:	mov    rdi,r14
  4382b5:	call   423130 <strcmp@plt+0x1f9a8>
  4382ba:	mov    rdx,rax
  4382bd:	mov    rcx,QWORD PTR [r13+0x0]
  4382c1:	lea    rsi,[rip+0x15521]        # 44d7e9 <strcmp@plt+0x4a061>
  4382c8:	mov    edi,0x6
  4382cd:	xor    eax,eax
  4382cf:	call   42e800 <strcmp@plt+0x2b078>
  4382d4:	cmp    ebp,0xa
  4382d7:	jne    438437 <strcmp@plt+0x34caf>
  4382dd:	mov    rdi,r15
  4382e0:	mov    rsi,r14
  4382e3:	call   423970 <strcmp@plt+0x201e8>
  4382e8:	test   eax,eax
  4382ea:	je     438405 <strcmp@plt+0x34c7d>
  4382f0:	cmp    DWORD PTR [rbx],0x2
  4382f3:	jl     4385c0 <strcmp@plt+0x34e38>
  4382f9:	mov    rdi,r14
  4382fc:	call   423130 <strcmp@plt+0x1f9a8>
  438301:	mov    rcx,rax
  438304:	lea    rsi,[rip+0x15559]        # 44d864 <strcmp@plt+0x4a0dc>
  43830b:	mov    edi,0x6
  438310:	xor    eax,eax
  438312:	mov    rdx,rcx
  438315:	add    rsp,0x8
  438319:	pop    rbx
  43831a:	pop    r12
  43831c:	pop    r13
  43831e:	pop    r14
  438320:	pop    r15
  438322:	pop    rbp
  438323:	jmp    42e800 <strcmp@plt+0x2b078>
  438328:	lea    rax,[rip+0x381d1]        # 470500 <strcmp@plt+0x6cd78>
  43832f:	mov    eax,DWORD PTR [rax]
  438331:	test   eax,eax
  438333:	je     438383 <strcmp@plt+0x34bfb>
  438335:	cmp    eax,ebp
  438337:	je     438383 <strcmp@plt+0x34bfb>
  438339:	lea    rax,[rip+0x2ca70]        # 464db0 <strcmp@plt+0x61628>
  438340:	cmp    DWORD PTR [rax],0x2
  438343:	jl     4385c0 <strcmp@plt+0x34e38>
  438349:	cmp    ebp,0x2
  43834c:	lea    rax,[rip+0xb5f0]        # 443943 <strcmp@plt+0x401bb>
  438353:	lea    rdx,[rip+0xb5ee]        # 443948 <strcmp@plt+0x401c0>
  43835a:	cmove  rdx,rax
  43835e:	mov    rcx,QWORD PTR [r13+0x0]
  438362:	lea    rsi,[rip+0x15593]        # 44d8fc <strcmp@plt+0x4a174>
  438369:	mov    edi,0x6
  43836e:	xor    eax,eax
  438370:	add    rsp,0x8
  438374:	pop    rbx
  438375:	pop    r12
  438377:	pop    r13
  438379:	pop    r14
  43837b:	pop    r15
  43837d:	pop    rbp
  43837e:	jmp    42e800 <strcmp@plt+0x2b078>
  438383:	cmp    ebp,0xa
  438386:	jne    4384b9 <strcmp@plt+0x34d31>
  43838c:	lea    rax,[rip+0x37775]        # 46fb08 <strcmp@plt+0x6c380>
  438393:	mov    rax,QWORD PTR [rax]
  438396:	mov    rdi,QWORD PTR [r13+0x0]
  43839a:	mov    esi,0xa
  43839f:	call   QWORD PTR [rax+0x18]
  4383a2:	mov    rbp,rax
  4383a5:	mov    rdi,QWORD PTR [r13+0x18]
  4383a9:	lea    rdx,[rip+0xfffffffffffeb5c0]        # 423970 <strcmp@plt+0x201e8>
  4383b0:	mov    rsi,rax
  4383b3:	call   42bee0 <strcmp@plt+0x28758>
  4383b8:	test   al,al
  4383ba:	je     438445 <strcmp@plt+0x34cbd>
  4383c0:	lea    rax,[rip+0x2c9e9]        # 464db0 <strcmp@plt+0x61628>
  4383c7:	cmp    DWORD PTR [rax],0x2
  4383ca:	jl     4383ef <strcmp@plt+0x34c67>
  4383cc:	mov    rdi,QWORD PTR [r13+0x18]
  4383d0:	call   423130 <strcmp@plt+0x1f9a8>
  4383d5:	mov    rdx,rax
  4383d8:	mov    rcx,QWORD PTR [r13+0x0]
  4383dc:	lea    rsi,[rip+0x15574]        # 44d957 <strcmp@plt+0x4a1cf>
  4383e3:	mov    edi,0x6
  4383e8:	xor    eax,eax
  4383ea:	call   42e800 <strcmp@plt+0x2b078>
  4383ef:	mov    rdi,rbp
  4383f2:	add    rsp,0x8
  4383f6:	pop    rbx
  4383f7:	pop    r12
  4383f9:	pop    r13
  4383fb:	pop    r14
  4383fd:	pop    r15
  4383ff:	pop    rbp
  438400:	jmp    42c250 <strcmp@plt+0x28ac8>
  438405:	lea    rax,[rip+0x376fc]        # 46fb08 <strcmp@plt+0x6c380>
  43840c:	mov    rax,QWORD PTR [rax]
  43840f:	mov    rdi,QWORD PTR [r13+0x0]
  438413:	lea    rcx,[rip+0x37706]        # 46fb20 <strcmp@plt+0x6c398>
  43841a:	mov    esi,DWORD PTR [rcx]
  43841c:	call   QWORD PTR [rax+0x30]
  43841f:	test   rax,rax
  438422:	je     438437 <strcmp@plt+0x34caf>
  438424:	mov    r14,rax
  438427:	cmp    DWORD PTR [rbx],0x2
  43842a:	jge    438488 <strcmp@plt+0x34d00>
  43842c:	mov    al,0x1
  43842e:	mov    DWORD PTR [rsp+0x4],eax
  438432:	jmp    438501 <strcmp@plt+0x34d79>
  438437:	xor    edi,edi
  438439:	call   422ef0 <strcmp@plt+0x1f768>
  43843e:	mov    r14,rax
  438441:	mov    dl,0x1
  438443:	jmp    4384bb <strcmp@plt+0x34d33>
  438445:	mov    rdi,rbp
  438448:	call   42c250 <strcmp@plt+0x28ac8>
  43844d:	lea    rax,[rip+0x376cc]        # 46fb20 <strcmp@plt+0x6c398>
  438454:	mov    ebx,DWORD PTR [rax]
  438456:	mov    rdi,r14
  438459:	call   423d60 <strcmp@plt+0x205d8>
  43845e:	mov    eax,DWORD PTR [rax]
  438460:	test   ebx,ebx
  438462:	je     4384ab <strcmp@plt+0x34d23>
  438464:	mov    ecx,eax
  438466:	and    ecx,0xc0ff
  43846c:	xor    edx,edx
  43846e:	cmp    ecx,0xc0fe
  438474:	je     4384bb <strcmp@plt+0x34d33>
  438476:	and    eax,0xfe
  43847b:	cmp    eax,0xfc
  438480:	jne    4385b4 <strcmp@plt+0x34e2c>
  438486:	jmp    4384bb <strcmp@plt+0x34d33>
  438488:	mov    rdi,r14
  43848b:	call   423130 <strcmp@plt+0x1f9a8>
  438490:	mov    rcx,rax
  438493:	lea    rsi,[rip+0x1538f]        # 44d829 <strcmp@plt+0x4a0a1>
  43849a:	mov    edi,0x6
  43849f:	xor    eax,eax
  4384a1:	mov    rdx,rcx
  4384a4:	call   42e800 <strcmp@plt+0x2b078>
  4384a9:	jmp    438441 <strcmp@plt+0x34cb9>
  4384ab:	and    eax,0xe0
  4384b0:	cmp    eax,0x20
  4384b3:	jne    4385b4 <strcmp@plt+0x34e2c>
  4384b9:	xor    edx,edx
  4384bb:	lea    rax,[rip+0x2c8ee]        # 464db0 <strcmp@plt+0x61628>
  4384c2:	cmp    DWORD PTR [rax],0x2
  4384c5:	mov    DWORD PTR [rsp+0x4],edx
  4384c9:	jl     438501 <strcmp@plt+0x34d79>
  4384cb:	mov    r12,QWORD PTR [r13+0x0]
  4384cf:	mov    rdi,r15
  4384d2:	call   423130 <strcmp@plt+0x1f9a8>
  4384d7:	mov    rbp,rax
  4384da:	mov    rdi,r14
  4384dd:	call   423130 <strcmp@plt+0x1f9a8>
  4384e2:	mov    rbx,rax
  4384e5:	lea    rsi,[rip+0x15548]        # 44da34 <strcmp@plt+0x4a2ac>
  4384ec:	mov    edi,0x6
  4384f1:	xor    eax,eax
  4384f3:	mov    rdx,r12
  4384f6:	mov    rcx,rbp
  4384f9:	mov    r8,rbx
  4384fc:	call   42e800 <strcmp@plt+0x2b078>
  438501:	mov    rdi,r15
  438504:	call   423740 <strcmp@plt+0x1ffb8>
  438509:	mov    r12,rax
  43850c:	mov    rdi,r14
  43850f:	call   423740 <strcmp@plt+0x1ffb8>
  438514:	mov    rbp,rax
  438517:	mov    rdi,r15
  43851a:	mov    rsi,r14
  43851d:	call   423560 <strcmp@plt+0x1fdd8>
  438522:	lea    rbx,[rip+0x2c887]        # 464db0 <strcmp@plt+0x61628>
  438529:	cmp    DWORD PTR [rbx],0x3
  43852c:	jl     438541 <strcmp@plt+0x34db9>
  43852e:	lea    rsi,[rip+0x1555f]        # 44da94 <strcmp@plt+0x4a30c>
  438535:	mov    edi,0x7
  43853a:	xor    eax,eax
  43853c:	call   42e800 <strcmp@plt+0x2b078>
  438541:	lea    rax,[rip+0x2feb0]        # 4683f8 <strcmp@plt+0x64c70>
  438548:	mov    rax,QWORD PTR [rax]
  43854b:	mov    rdi,r13
  43854e:	mov    rsi,r12
  438551:	mov    rdx,rbp
  438554:	call   QWORD PTR [rax+0x50]
  438557:	cmp    DWORD PTR [rbx],0x3
  43855a:	jl     43856f <strcmp@plt+0x34de7>
  43855c:	lea    rsi,[rip+0x15560]        # 44dac3 <strcmp@plt+0x4a33b>
  438563:	mov    edi,0x7
  438568:	xor    eax,eax
  43856a:	call   42e800 <strcmp@plt+0x2b078>
  43856f:	lea    rax,[rip+0x3800a]        # 470580 <strcmp@plt+0x6cdf8>
  438576:	mov    rdi,QWORD PTR [rax]
  438579:	mov    rsi,r13
  43857c:	mov    rdx,r12
  43857f:	mov    rcx,rbp
  438582:	call   407670 <strcmp@plt+0x3ee8>
  438587:	mov    rdi,r12
  43858a:	call   422fa0 <strcmp@plt+0x1f818>
  43858f:	mov    rdi,rbp
  438592:	call   422fa0 <strcmp@plt+0x1f818>
  438597:	cmp    BYTE PTR [rsp+0x4],0x0
  43859c:	je     4385c0 <strcmp@plt+0x34e38>
  43859e:	mov    rdi,r14
  4385a1:	add    rsp,0x8
  4385a5:	pop    rbx
  4385a6:	pop    r12
  4385a8:	pop    r13
  4385aa:	pop    r14
  4385ac:	pop    r15
  4385ae:	pop    rbp
  4385af:	jmp    422fa0 <strcmp@plt+0x1f818>
  4385b4:	lea    rax,[rip+0x2c7f5]        # 464db0 <strcmp@plt+0x61628>
  4385bb:	cmp    DWORD PTR [rax],0x2
  4385be:	jge    4385cf <strcmp@plt+0x34e47>
  4385c0:	add    rsp,0x8
  4385c4:	pop    rbx
  4385c5:	pop    r12
  4385c7:	pop    r13
  4385c9:	pop    r14
  4385cb:	pop    r15
  4385cd:	pop    rbp
  4385ce:	ret    
  4385cf:	mov    rdi,r14
  4385d2:	call   423130 <strcmp@plt+0x1f9a8>
  4385d7:	mov    rcx,rax
  4385da:	lea    rsi,[rip+0x153e9]        # 44d9ca <strcmp@plt+0x4a242>
  4385e1:	jmp    43830b <strcmp@plt+0x34b83>
  4385e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4385f0:	push   rbp
  4385f1:	push   r15
  4385f3:	push   r14
  4385f5:	push   r13
  4385f7:	push   r12
  4385f9:	push   rbx
  4385fa:	push   rax
  4385fb:	mov    ebp,edx
  4385fd:	mov    r14d,esi
  438600:	mov    r12d,edi
  438603:	call   43ae90 <strcmp@plt+0x37708>
  438608:	test   rax,rax
  43860b:	je     43862f <strcmp@plt+0x34ea7>
  43860d:	mov    rbx,rax
  438610:	cmp    BYTE PTR [rax+0xc],bpl
  438614:	lea    r13,[rip+0x2c795]        # 464db0 <strcmp@plt+0x61628>
  43861b:	mov    eax,DWORD PTR [r13+0x0]
  43861f:	jne    43864a <strcmp@plt+0x34ec2>
  438621:	cmp    eax,0x2
  438624:	jl     43863b <strcmp@plt+0x34eb3>
  438626:	lea    rsi,[rip+0x15532]        # 44db5f <strcmp@plt+0x4a3d7>
  43862d:	jmp    4386ac <strcmp@plt+0x34f24>
  43862f:	lea    rax,[rip+0x2c77a]        # 464db0 <strcmp@plt+0x61628>
  438636:	cmp    DWORD PTR [rax],0x2
  438639:	jge    4386a5 <strcmp@plt+0x34f1d>
  43863b:	add    rsp,0x8
  43863f:	pop    rbx
  438640:	pop    r12
  438642:	pop    r13
  438644:	pop    r14
  438646:	pop    r15
  438648:	pop    rbp
  438649:	ret    
  43864a:	movzx  r15d,bpl
  43864e:	cmp    eax,0x1
  438651:	jle    4386c6 <strcmp@plt+0x34f3e>
  438653:	mov    rdx,QWORD PTR [rbx]
  438656:	cmp    bpl,0x1
  43865a:	lea    rax,[rip+0xc506]        # 444b67 <strcmp@plt+0x413df>
  438661:	lea    rcx,[rip+0xc3e7]        # 444a4f <strcmp@plt+0x412c7>
  438668:	cmove  rcx,rax
  43866c:	lea    rsi,[rip+0x15531]        # 44dba4 <strcmp@plt+0x4a41c>
  438673:	mov    edi,0x6
  438678:	xor    eax,eax
  43867a:	call   42e800 <strcmp@plt+0x2b078>
  43867f:	mov    eax,DWORD PTR [r13+0x0]
  438683:	mov    BYTE PTR [rbx+0xc],bpl
  438687:	mov    DWORD PTR [rbx+0x8],r14d
  43868b:	cmp    eax,0x3
  43868e:	jl     4386ce <strcmp@plt+0x34f46>
  438690:	lea    rsi,[rip+0x15553]        # 44dbea <strcmp@plt+0x4a462>
  438697:	mov    edi,0x7
  43869c:	xor    eax,eax
  43869e:	call   42e800 <strcmp@plt+0x2b078>
  4386a3:	jmp    4386ce <strcmp@plt+0x34f46>
  4386a5:	lea    rsi,[rip+0x1544e]        # 44dafa <strcmp@plt+0x4a372>
  4386ac:	mov    edi,0x6
  4386b1:	xor    eax,eax
  4386b3:	add    rsp,0x8
  4386b7:	pop    rbx
  4386b8:	pop    r12
  4386ba:	pop    r13
  4386bc:	pop    r14
  4386be:	pop    r15
  4386c0:	pop    rbp
  4386c1:	jmp    42e800 <strcmp@plt+0x2b078>
  4386c6:	mov    BYTE PTR [rbx+0xc],bpl
  4386ca:	mov    DWORD PTR [rbx+0x8],r14d
  4386ce:	lea    rax,[rip+0x2fd23]        # 4683f8 <strcmp@plt+0x64c70>
  4386d5:	mov    rax,QWORD PTR [rax]
  4386d8:	mov    rdi,rbx
  4386db:	mov    esi,r12d
  4386de:	mov    edx,r14d
  4386e1:	mov    ecx,r15d
  4386e4:	call   QWORD PTR [rax+0x58]
  4386e7:	cmp    DWORD PTR [r13+0x0],0x3
  4386ec:	jl     438701 <strcmp@plt+0x34f79>
  4386ee:	lea    rsi,[rip+0x15521]        # 44dc16 <strcmp@plt+0x4a48e>
  4386f5:	mov    edi,0x7
  4386fa:	xor    eax,eax
  4386fc:	call   42e800 <strcmp@plt+0x2b078>
  438701:	lea    rax,[rip+0x37e78]        # 470580 <strcmp@plt+0x6cdf8>
  438708:	mov    rdi,QWORD PTR [rax]
  43870b:	mov    rsi,rbx
  43870e:	mov    edx,r12d
  438711:	mov    ecx,r14d
  438714:	mov    r8d,r15d
  438717:	add    rsp,0x8
  43871b:	pop    rbx
  43871c:	pop    r12
  43871e:	pop    r13
  438720:	pop    r14
  438722:	pop    r15
  438724:	pop    rbp
  438725:	jmp    4076e0 <strcmp@plt+0x3f58>
  43872a:	nop    WORD PTR [rax+rax*1+0x0]
  438730:	push   rbp
  438731:	push   r15
  438733:	push   r14
  438735:	push   r13
  438737:	push   r12
  438739:	push   rbx
  43873a:	sub    rsp,0x18
  43873e:	mov    r13,r8
  438741:	mov    r12,rcx
  438744:	mov    r14,rdx
  438747:	mov    ebp,esi
  438749:	mov    ebx,edi
  43874b:	mov    edi,esi
  43874d:	call   43ae90 <strcmp@plt+0x37708>
  438752:	test   rax,rax
  438755:	je     4388d5 <strcmp@plt+0x3514d>
  43875b:	mov    r15,rax
  43875e:	mov    DWORD PTR [rsp+0x4],ebx
  438762:	mov    rbx,r13
  438765:	mov    rdi,r14
  438768:	call   423200 <strcmp@plt+0x1fa78>
  43876d:	lea    rcx,[rip+0x37d8c]        # 470500 <strcmp@plt+0x6cd78>
  438774:	test   ax,ax
  438777:	je     438795 <strcmp@plt+0x3500d>
  438779:	mov    r13d,DWORD PTR [rcx]
  43877c:	test   r13d,r13d
  43877f:	je     438795 <strcmp@plt+0x3500d>
  438781:	mov    rdi,r14
  438784:	call   423200 <strcmp@plt+0x1fa78>
  438789:	movzx  eax,ax
  43878c:	cmp    r13d,eax
  43878f:	jne    438908 <strcmp@plt+0x35180>
  438795:	mov    rdi,r12
  438798:	call   423200 <strcmp@plt+0x1fa78>
  43879d:	test   ax,ax
  4387a0:	je     4387c2 <strcmp@plt+0x3503a>
  4387a2:	lea    rax,[rip+0x37d57]        # 470500 <strcmp@plt+0x6cd78>
  4387a9:	mov    ebp,DWORD PTR [rax]
  4387ab:	test   ebp,ebp
  4387ad:	je     4387c2 <strcmp@plt+0x3503a>
  4387af:	mov    rdi,r12
  4387b2:	call   423200 <strcmp@plt+0x1fa78>
  4387b7:	movzx  eax,ax
  4387ba:	cmp    ebp,eax
  4387bc:	jne    438944 <strcmp@plt+0x351bc>
  4387c2:	mov    r13,rbx
  4387c5:	mov    rdi,rbx
  4387c8:	call   423200 <strcmp@plt+0x1fa78>
  4387cd:	test   ax,ax
  4387d0:	je     4387f2 <strcmp@plt+0x3506a>
  4387d2:	lea    rax,[rip+0x37d27]        # 470500 <strcmp@plt+0x6cd78>
  4387d9:	mov    ebp,DWORD PTR [rax]
  4387db:	test   ebp,ebp
  4387dd:	je     4387f2 <strcmp@plt+0x3506a>
  4387df:	mov    rdi,r13
  4387e2:	call   423200 <strcmp@plt+0x1fa78>
  4387e7:	movzx  eax,ax
  4387ea:	cmp    ebp,eax
  4387ec:	jne    43897c <strcmp@plt+0x351f4>
  4387f2:	lea    rbx,[rip+0x2c5b7]        # 464db0 <strcmp@plt+0x61628>
  4387f9:	cmp    DWORD PTR [rbx],0x2
  4387fc:	jl     438872 <strcmp@plt+0x350ea>
  4387fe:	cmp    BYTE PTR [rsp+0x4],0x1
  438803:	lea    rax,[rip+0x155e7]        # 44ddf1 <strcmp@plt+0x4a669>
  43880a:	lea    rbp,[rip+0x155e6]        # 44ddf7 <strcmp@plt+0x4a66f>
  438811:	cmove  rbp,rax
  438815:	mov    rdi,r14
  438818:	call   423130 <strcmp@plt+0x1f9a8>
  43881d:	mov    QWORD PTR [rsp+0x10],rax
  438822:	mov    rdi,r12
  438825:	call   423130 <strcmp@plt+0x1f9a8>
  43882a:	mov    QWORD PTR [rsp+0x8],rax
  43882f:	mov    rdi,r13
  438832:	call   423130 <strcmp@plt+0x1f9a8>
  438837:	mov    r9,rax
  43883a:	lea    rsi,[rip+0x15573]        # 44ddb4 <strcmp@plt+0x4a62c>
  438841:	mov    edi,0x6
  438846:	xor    eax,eax
  438848:	mov    rdx,rbp
  43884b:	mov    rcx,QWORD PTR [rsp+0x10]
  438850:	mov    r8,QWORD PTR [rsp+0x8]
  438855:	call   42e800 <strcmp@plt+0x2b078>
  43885a:	cmp    DWORD PTR [rbx],0x3
  43885d:	jl     438872 <strcmp@plt+0x350ea>
  43885f:	lea    rsi,[rip+0x15599]        # 44ddff <strcmp@plt+0x4a677>
  438866:	mov    edi,0x7
  43886b:	xor    eax,eax
  43886d:	call   42e800 <strcmp@plt+0x2b078>
  438872:	lea    rax,[rip+0x2fb7f]        # 4683f8 <strcmp@plt+0x64c70>
  438879:	mov    rax,QWORD PTR [rax]
  43887c:	movzx  ebp,BYTE PTR [rsp+0x4]
  438881:	mov    edi,ebp
  438883:	mov    rsi,r15
  438886:	mov    rdx,r14
  438889:	mov    rcx,r12
  43888c:	mov    r8,r13
  43888f:	call   QWORD PTR [rax+0x48]
  438892:	cmp    DWORD PTR [rbx],0x3
  438895:	jl     4388aa <strcmp@plt+0x35122>
  438897:	lea    rsi,[rip+0x1558e]        # 44de2c <strcmp@plt+0x4a6a4>
  43889e:	mov    edi,0x7
  4388a3:	xor    eax,eax
  4388a5:	call   42e800 <strcmp@plt+0x2b078>
  4388aa:	lea    rax,[rip+0x37ccf]        # 470580 <strcmp@plt+0x6cdf8>
  4388b1:	mov    rdi,QWORD PTR [rax]
  4388b4:	mov    esi,ebp
  4388b6:	mov    rdx,r15
  4388b9:	mov    rcx,r14
  4388bc:	mov    r8,r12
  4388bf:	mov    r9,r13
  4388c2:	add    rsp,0x18
  4388c6:	pop    rbx
  4388c7:	pop    r12
  4388c9:	pop    r13
  4388cb:	pop    r14
  4388cd:	pop    r15
  4388cf:	pop    rbp
  4388d0:	jmp    407740 <strcmp@plt+0x3fb8>
  4388d5:	lea    rax,[rip+0x2c4d4]        # 464db0 <strcmp@plt+0x61628>
  4388dc:	cmp    DWORD PTR [rax],0x2
  4388df:	jl     4389cc <strcmp@plt+0x35244>
  4388e5:	lea    rsi,[rip+0x1535e]        # 44dc4a <strcmp@plt+0x4a4c2>
  4388ec:	mov    edi,0x6
  4388f1:	xor    eax,eax
  4388f3:	mov    edx,ebp
  4388f5:	add    rsp,0x18
  4388f9:	pop    rbx
  4388fa:	pop    r12
  4388fc:	pop    r13
  4388fe:	pop    r14
  438900:	pop    r15
  438902:	pop    rbp
  438903:	jmp    42e800 <strcmp@plt+0x2b078>
  438908:	lea    rax,[rip+0x2c4a1]        # 464db0 <strcmp@plt+0x61628>
  43890f:	cmp    DWORD PTR [rax],0x0
  438912:	jle    4389cc <strcmp@plt+0x35244>
  438918:	mov    rdi,r14
  43891b:	call   423200 <strcmp@plt+0x1fa78>
  438920:	movzx  eax,ax
  438923:	cmp    eax,0x2
  438926:	lea    rax,[rip+0xb016]        # 443943 <strcmp@plt+0x401bb>
  43892d:	lea    rdx,[rip+0xb014]        # 443948 <strcmp@plt+0x401c0>
  438934:	cmove  rdx,rax
  438938:	mov    rcx,QWORD PTR [r15]
  43893b:	lea    rsi,[rip+0x15367]        # 44dca9 <strcmp@plt+0x4a521>
  438942:	jmp    4389b2 <strcmp@plt+0x3522a>
  438944:	lea    rax,[rip+0x2c465]        # 464db0 <strcmp@plt+0x61628>
  43894b:	cmp    DWORD PTR [rax],0x0
  43894e:	jle    4389cc <strcmp@plt+0x35244>
  438950:	mov    rdi,r12
  438953:	call   423200 <strcmp@plt+0x1fa78>
  438958:	movzx  eax,ax
  43895b:	cmp    eax,0x2
  43895e:	lea    rax,[rip+0xafde]        # 443943 <strcmp@plt+0x401bb>
  438965:	lea    rdx,[rip+0xafdc]        # 443948 <strcmp@plt+0x401c0>
  43896c:	cmove  rdx,rax
  438970:	mov    rcx,QWORD PTR [r15]
  438973:	lea    rsi,[rip+0x1539a]        # 44dd14 <strcmp@plt+0x4a58c>
  43897a:	jmp    4389b2 <strcmp@plt+0x3522a>
  43897c:	lea    rax,[rip+0x2c42d]        # 464db0 <strcmp@plt+0x61628>
  438983:	cmp    DWORD PTR [rax],0x0
  438986:	jle    4389cc <strcmp@plt+0x35244>
  438988:	mov    rdi,r13
  43898b:	call   423200 <strcmp@plt+0x1fa78>
  438990:	movzx  eax,ax
  438993:	cmp    eax,0x2
  438996:	lea    rax,[rip+0xafa6]        # 443943 <strcmp@plt+0x401bb>
  43899d:	lea    rdx,[rip+0xafa4]        # 443948 <strcmp@plt+0x401c0>
  4389a4:	cmove  rdx,rax
  4389a8:	mov    rcx,QWORD PTR [r15]
  4389ab:	lea    rsi,[rip+0x153d2]        # 44dd84 <strcmp@plt+0x4a5fc>
  4389b2:	mov    edi,0x5
  4389b7:	xor    eax,eax
  4389b9:	add    rsp,0x18
  4389bd:	pop    rbx
  4389be:	pop    r12
  4389c0:	pop    r13
  4389c2:	pop    r14
  4389c4:	pop    r15
  4389c6:	pop    rbp
  4389c7:	jmp    42e800 <strcmp@plt+0x2b078>
  4389cc:	add    rsp,0x18
  4389d0:	pop    rbx
  4389d1:	pop    r12
  4389d3:	pop    r13
  4389d5:	pop    r14
  4389d7:	pop    r15
  4389d9:	pop    rbp
  4389da:	ret    
  4389db:	nop    DWORD PTR [rax+rax*1+0x0]
  4389e0:	push   rbp
  4389e1:	push   r15
  4389e3:	push   r14
  4389e5:	push   r13
  4389e7:	push   r12
  4389e9:	push   rbx
  4389ea:	sub    rsp,0x28
  4389ee:	mov    r14d,esi
  4389f1:	mov    r13,rdi
  4389f4:	lea    rdi,[rip+0xfffffffffffea5a5]        # 422fa0 <strcmp@plt+0x1f818>
  4389fb:	call   42bc00 <strcmp@plt+0x28478>
  438a00:	mov    rbp,rax
  438a03:	lea    rdi,[rsp+0x8]
  438a08:	call   403740 <getifaddrs@plt>
  438a0d:	test   eax,eax
  438a0f:	je     438a4b <strcmp@plt+0x352c3>
  438a11:	lea    rax,[rip+0x2c398]        # 464db0 <strcmp@plt+0x61628>
  438a18:	cmp    DWORD PTR [rax],0x2
  438a1b:	jl     438b91 <strcmp@plt+0x35409>
  438a21:	call   403040 <__errno_location@plt>
  438a26:	mov    edi,DWORD PTR [rax]
  438a28:	call   403170 <strerror@plt>
  438a2d:	mov    rcx,rax
  438a30:	lea    rsi,[rip+0x15493]        # 44deca <strcmp@plt+0x4a742>
  438a37:	mov    edi,0x6
  438a3c:	xor    eax,eax
  438a3e:	mov    rdx,rcx
  438a41:	call   42e800 <strcmp@plt+0x2b078>
  438a46:	jmp    438b91 <strcmp@plt+0x35409>
  438a4b:	mov    r12,QWORD PTR [rsp+0x8]
  438a50:	test   r12,r12
  438a53:	jne    438b10 <strcmp@plt+0x35388>
  438a59:	xor    edi,edi
  438a5b:	jmp    438b4e <strcmp@plt+0x353c6>
  438a60:	movzx  eax,r15w
  438a64:	cmp    eax,0xa
  438a67:	je     438a80 <strcmp@plt+0x352f8>
  438a69:	cmp    eax,0x2
  438a6c:	jne    438b40 <strcmp@plt+0x353b8>
  438a72:	mov    r15,rbp
  438a75:	add    rbx,0x4
  438a79:	mov    edx,0x2
  438a7e:	jmp    438a8c <strcmp@plt+0x35304>
  438a80:	mov    r15,rbp
  438a83:	add    rbx,0x8
  438a87:	mov    edx,0xa
  438a8c:	lea    rbp,[rsp+0x10]
  438a91:	mov    rdi,rbp
  438a94:	mov    rsi,rbx
  438a97:	call   423ef0 <strcmp@plt+0x20768>
  438a9c:	mov    rdi,rbp
  438a9f:	call   424790 <strcmp@plt+0x21008>
  438aa4:	cmp    eax,0x1
  438aa7:	jne    438ae1 <strcmp@plt+0x35359>
  438aa9:	lea    rax,[rip+0x2c300]        # 464db0 <strcmp@plt+0x61628>
  438ab0:	cmp    DWORD PTR [rax],0x2
  438ab3:	mov    rbp,r15
  438ab6:	jl     438b40 <strcmp@plt+0x353b8>
  438abc:	lea    rdi,[rsp+0x10]
  438ac1:	call   423f30 <strcmp@plt+0x207a8>
  438ac6:	mov    rcx,rax
  438ac9:	mov    edi,0x6
  438ace:	xor    eax,eax
  438ad0:	lea    rsi,[rip+0x15421]        # 44def8 <strcmp@plt+0x4a770>
  438ad7:	mov    rdx,r13
  438ada:	call   42e800 <strcmp@plt+0x2b078>
  438adf:	jmp    438b40 <strcmp@plt+0x353b8>
  438ae1:	xor    eax,eax
  438ae3:	call   422f90 <strcmp@plt+0x1f808>
  438ae8:	mov    rbx,rax
  438aeb:	mov    rdi,rax
  438aee:	mov    rsi,rbp
  438af1:	call   423b60 <strcmp@plt+0x203d8>
  438af6:	mov    rdi,rbx
  438af9:	mov    rbp,r15
  438afc:	mov    rsi,r15
  438aff:	call   42bcf0 <strcmp@plt+0x28568>
  438b04:	jmp    438b40 <strcmp@plt+0x353b8>
  438b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438b10:	mov    rbx,QWORD PTR [r12+0x18]
  438b15:	test   rbx,rbx
  438b18:	je     438b40 <strcmp@plt+0x353b8>
  438b1a:	test   BYTE PTR [r12+0x10],0x1
  438b20:	je     438b40 <strcmp@plt+0x353b8>
  438b22:	movzx  r15d,WORD PTR [rbx]
  438b26:	cmp    r15d,r14d
  438b29:	jne    438b40 <strcmp@plt+0x353b8>
  438b2b:	mov    rdi,QWORD PTR [r12+0x8]
  438b30:	mov    rsi,r13
  438b33:	call   403788 <strcmp@plt>
  438b38:	test   eax,eax
  438b3a:	je     438a60 <strcmp@plt+0x352d8>
  438b40:	mov    r12,QWORD PTR [r12]
  438b44:	test   r12,r12
  438b47:	jne    438b10 <strcmp@plt+0x35388>
  438b49:	mov    rdi,QWORD PTR [rsp+0x8]
  438b4e:	call   4036a0 <freeifaddrs@plt>
  438b53:	cmp    DWORD PTR [rbp+0x18],0x0
  438b57:	jne    438b91 <strcmp@plt+0x35409>
  438b59:	lea    rax,[rip+0x2c250]        # 464db0 <strcmp@plt+0x61628>
  438b60:	cmp    DWORD PTR [rax],0x3
  438b63:	jl     438b91 <strcmp@plt+0x35409>
  438b65:	cmp    r14d,0x2
  438b69:	lea    rax,[rip+0xadd3]        # 443943 <strcmp@plt+0x401bb>
  438b70:	lea    rdx,[rip+0xadd1]        # 443948 <strcmp@plt+0x401c0>
  438b77:	cmove  rdx,rax
  438b7b:	lea    rsi,[rip+0x153b8]        # 44df3a <strcmp@plt+0x4a7b2>
  438b82:	mov    edi,0x7
  438b87:	xor    eax,eax
  438b89:	mov    rcx,r13
  438b8c:	call   42e800 <strcmp@plt+0x2b078>
  438b91:	mov    rax,rbp
  438b94:	add    rsp,0x28
  438b98:	pop    rbx
  438b99:	pop    r12
  438b9b:	pop    r13
  438b9d:	pop    r14
  438b9f:	pop    r15
  438ba1:	pop    rbp
  438ba2:	ret    
  438ba3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438bad:	nop    DWORD PTR [rax]
  438bb0:	push   rbp
  438bb1:	push   r15
  438bb3:	push   r14
  438bb5:	push   rbx
  438bb6:	sub    rsp,0x2038
  438bbd:	mov    rbx,rdi
  438bc0:	call   423200 <strcmp@plt+0x1fa78>
  438bc5:	mov    QWORD PTR [rsp],0x0
  438bcd:	mov    WORD PTR [rsp],0x10
  438bd3:	movzx  ebp,ax
  438bd6:	cmp    ebp,0x2
  438bd9:	mov    eax,0x40
  438bde:	mov    ecx,0x400
  438be3:	cmove  ecx,eax
  438be6:	mov    DWORD PTR [rsp+0x8],ecx
  438bea:	mov    edi,0x10
  438bef:	mov    esi,0x3
  438bf4:	xor    edx,edx
  438bf6:	call   4030f0 <socket@plt>
  438bfb:	test   eax,eax
  438bfd:	js     438d49 <strcmp@plt+0x355c1>
  438c03:	mov    r15d,eax
  438c06:	mov    rsi,rsp
  438c09:	mov    edx,0xc
  438c0e:	mov    edi,eax
  438c10:	call   403090 <bind@plt>
  438c15:	lea    r14,[rsp+0x30]
  438c1a:	xor    esi,esi
  438c1c:	mov    edx,0x1000
  438c21:	mov    rdi,r14
  438c24:	call   403260 <memset@plt>
  438c29:	mov    DWORD PTR [rsp+0x34],0x1001a
  438c31:	mov    BYTE PTR [rsp+0x40],bpl
  438c36:	mov    WORD PTR [rsp+0x46],0x100
  438c3d:	mov    DWORD PTR [rsp+0x42],0x4fe0000
  438c45:	mov    al,0x20
  438c47:	cmp    ebp,0x2
  438c4a:	je     438c4e <strcmp@plt+0x354c6>
  438c4c:	mov    al,0x80
  438c4e:	mov    BYTE PTR [rsp+0x41],al
  438c52:	mov    WORD PTR [rsp+0x4e],0x1
  438c59:	mov    edi,ebp
  438c5b:	call   423db0 <strcmp@plt+0x20628>
  438c60:	movzx  eax,al
  438c63:	add    eax,0x4
  438c66:	mov    WORD PTR [rsp+0x4c],ax
  438c6b:	lea    rdi,[rsp+0x50]
  438c70:	mov    rsi,rbx
  438c73:	call   423780 <strcmp@plt+0x1fff8>
  438c78:	movzx  edx,WORD PTR [rsp+0x4c]
  438c7d:	add    rdx,0x1c
  438c81:	mov    DWORD PTR [rsp+0x30],edx
  438c85:	xor    ecx,ecx
  438c87:	mov    edi,r15d
  438c8a:	mov    rsi,r14
  438c8d:	call   403230 <send@plt>
  438c92:	test   eax,eax
  438c94:	js     438d60 <strcmp@plt+0x355d8>
  438c9a:	lea    r14,[rsp+0x1030]
  438ca2:	jmp    438d20 <strcmp@plt+0x35598>
  438ca4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438cae:	xchg   ax,ax
  438cb0:	cmp    eax,0x10
  438cb3:	jb     438d20 <strcmp@plt+0x35598>
  438cb5:	mov    rcx,r14
  438cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  438cc0:	mov    edx,DWORD PTR [rcx]
  438cc2:	cmp    edx,0x10
  438cc5:	jb     438d20 <strcmp@plt+0x35598>
  438cc7:	cmp    edx,eax
  438cc9:	ja     438d20 <strcmp@plt+0x35598>
  438ccb:	movzx  esi,WORD PTR [rcx+0x4]
  438ccf:	cmp    esi,0x18
  438cd2:	jne    438d10 <strcmp@plt+0x35588>
  438cd4:	lea    edi,[rdx-0x1c]
  438cd7:	cmp    edi,0x4
  438cda:	jl     438d10 <strcmp@plt+0x35588>
  438cdc:	lea    rsi,[rcx+0x1c]
  438ce0:	movzx  ebp,WORD PTR [rsi]
  438ce3:	cmp    ebp,0x4
  438ce6:	jb     438d10 <strcmp@plt+0x35588>
  438ce8:	cmp    edi,ebp
  438cea:	jl     438d10 <strcmp@plt+0x35588>
  438cec:	movzx  ebx,WORD PTR [rsi+0x2]
  438cf0:	cmp    ebx,0x7
  438cf3:	je     438d91 <strcmp@plt+0x35609>
  438cf9:	add    ebp,0x3
  438cfc:	and    ebp,0xfffffffc
  438cff:	sub    edi,ebp
  438d01:	add    rsi,rbp
  438d04:	cmp    edi,0x3
  438d07:	jg     438ce0 <strcmp@plt+0x35558>
  438d09:	nop    DWORD PTR [rax+0x0]
  438d10:	add    edx,0x3
  438d13:	and    edx,0xfffffffc
  438d16:	sub    eax,edx
  438d18:	add    rcx,rdx
  438d1b:	cmp    eax,0xf
  438d1e:	ja     438cc0 <strcmp@plt+0x35538>
  438d20:	mov    edx,0x1000
  438d25:	mov    ecx,0x40
  438d2a:	mov    edi,r15d
  438d2d:	mov    rsi,r14
  438d30:	call   403160 <recv@plt>
  438d35:	test   eax,eax
  438d37:	jg     438cb0 <strcmp@plt+0x35528>
  438d3d:	mov    edi,r15d
  438d40:	call   403760 <close@plt>
  438d45:	xor    ebx,ebx
  438d47:	jmp    438dba <strcmp@plt+0x35632>
  438d49:	lea    rsi,[rip+0x1522b]        # 44df7b <strcmp@plt+0x4a7f3>
  438d50:	xor    ebx,ebx
  438d52:	mov    edi,0x2
  438d57:	xor    eax,eax
  438d59:	call   42e800 <strcmp@plt+0x2b078>
  438d5e:	jmp    438dba <strcmp@plt+0x35632>
  438d60:	call   403040 <__errno_location@plt>
  438d65:	mov    edi,DWORD PTR [rax]
  438d67:	call   403170 <strerror@plt>
  438d6c:	mov    rcx,rax
  438d6f:	lea    rsi,[rip+0x1523e]        # 44dfb4 <strcmp@plt+0x4a82c>
  438d76:	xor    ebx,ebx
  438d78:	mov    edi,0x1
  438d7d:	xor    eax,eax
  438d7f:	mov    rdx,rcx
  438d82:	call   42e800 <strcmp@plt+0x2b078>
  438d87:	mov    edi,r15d
  438d8a:	call   403760 <close@plt>
  438d8f:	jmp    438dba <strcmp@plt+0x35632>
  438d91:	add    rsi,0x4
  438d95:	movzx  edx,BYTE PTR [rsp+0x40]
  438d9a:	lea    rbx,[rsp+0x10]
  438d9f:	mov    rdi,rbx
  438da2:	call   423b50 <strcmp@plt+0x203c8>
  438da7:	mov    edi,r15d
  438daa:	call   403760 <close@plt>
  438daf:	mov    rdi,rbx
  438db2:	call   423740 <strcmp@plt+0x1ffb8>
  438db7:	mov    rbx,rax
  438dba:	mov    rax,rbx
  438dbd:	add    rsp,0x2038
  438dc4:	pop    rbx
  438dc5:	pop    r14
  438dc7:	pop    r15
  438dc9:	pop    rbp
  438dca:	ret    
  438dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  438dd0:	push   rbp
  438dd1:	push   r15
  438dd3:	push   r14
  438dd5:	push   r13
  438dd7:	push   r12
  438dd9:	push   rbx
  438dda:	sub    rsp,0x2048
  438de1:	mov    ebp,esi
  438de3:	mov    r15,rdi
  438de6:	vmovups ymm0,YMMWORD PTR [rip+0x1544a]        # 44e238 <strcmp@plt+0x4aab0>
  438dee:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  438df4:	vzeroupper 
  438df7:	call   4030c0 <if_nametoindex@plt>
  438dfc:	mov    DWORD PTR [rsp+0x4],eax
  438e00:	mov    QWORD PTR [rsp+0x10],0x0
  438e09:	mov    WORD PTR [rsp+0x10],0x10
  438e10:	cmp    ebp,0x2
  438e13:	mov    eax,0x40
  438e18:	mov    ecx,0x400
  438e1d:	cmove  ecx,eax
  438e20:	mov    DWORD PTR [rsp+0x18],ecx
  438e24:	mov    edi,0x10
  438e29:	mov    esi,0x3
  438e2e:	xor    edx,edx
  438e30:	call   4030f0 <socket@plt>
  438e35:	test   eax,eax
  438e37:	js     439020 <strcmp@plt+0x35898>
  438e3d:	mov    ebx,eax
  438e3f:	lea    rsi,[rsp+0x10]
  438e44:	mov    edx,0xc
  438e49:	mov    edi,eax
  438e4b:	call   403090 <bind@plt>
  438e50:	lea    r14,[rsp+0x40]
  438e55:	xor    esi,esi
  438e57:	mov    edx,0x1000
  438e5c:	mov    rdi,r14
  438e5f:	call   403260 <memset@plt>
  438e64:	movabs rax,0x301001a0000001c
  438e6e:	mov    QWORD PTR [rsp+0x40],rax
  438e73:	mov    BYTE PTR [rsp+0x50],bpl
  438e78:	mov    WORD PTR [rsp+0x55],0x4
  438e7f:	mov    BYTE PTR [rsp+0x57],0x1
  438e84:	mov    DWORD PTR [rsp+0x51],0xfe000000
  438e8c:	mov    edx,0x1c
  438e91:	xor    ecx,ecx
  438e93:	mov    edi,ebx
  438e95:	mov    rsi,r14
  438e98:	call   403230 <send@plt>
  438e9d:	test   eax,eax
  438e9f:	js     439037 <strcmp@plt+0x358af>
  438ea5:	mov    QWORD PTR [rsp+0x8],r15
  438eaa:	lea    rsi,[rsp+0x1040]
  438eb2:	mov    edx,0x1000
  438eb7:	mov    ecx,0x40
  438ebc:	mov    edi,ebx
  438ebe:	call   403160 <recv@plt>
  438ec3:	mov    rbp,rax
  438ec6:	test   ebp,ebp
  438ec8:	jle    438fee <strcmp@plt+0x35866>
  438ece:	mov    DWORD PTR [rsp],ebx
  438ed1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438edb:	nop    DWORD PTR [rax+rax*1+0x0]
  438ee0:	cmp    ebp,0x10
  438ee3:	jb     438fc7 <strcmp@plt+0x3583f>
  438ee9:	lea    r15,[rsp+0x1040]
  438ef1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438efb:	nop    DWORD PTR [rax+rax*1+0x0]
  438f00:	mov    r14d,DWORD PTR [r15]
  438f03:	cmp    r14d,0x10
  438f07:	jb     438fc7 <strcmp@plt+0x3583f>
  438f0d:	cmp    r14d,ebp
  438f10:	ja     438fc7 <strcmp@plt+0x3583f>
  438f16:	movzx  eax,WORD PTR [r15+0x4]
  438f1b:	cmp    eax,0x18
  438f1e:	jne    438fb0 <strcmp@plt+0x35828>
  438f24:	add    r14d,0xffffffe4
  438f28:	cmp    r14d,0x4
  438f2c:	jl     438fad <strcmp@plt+0x35825>
  438f2e:	lea    rbx,[r15+0x1c]
  438f32:	xor    r12d,r12d
  438f35:	xor    r13d,r13d
  438f38:	nop    DWORD PTR [rax+rax*1+0x0]
  438f40:	movzx  eax,WORD PTR [rbx]
  438f43:	cmp    eax,0x4
  438f46:	jb     438f9c <strcmp@plt+0x35814>
  438f48:	cmp    r14d,eax
  438f4b:	jl     438f9c <strcmp@plt+0x35814>
  438f4d:	movzx  ecx,WORD PTR [rbx+0x2]
  438f51:	cmp    ecx,0x5
  438f54:	je     438f70 <strcmp@plt+0x357e8>
  438f56:	movzx  ecx,cx
  438f59:	cmp    ecx,0x4
  438f5c:	jne    438f8a <strcmp@plt+0x35802>
  438f5e:	mov    r13d,DWORD PTR [rbx+0x4]
  438f62:	add    r12d,0x1
  438f66:	jmp    438f8a <strcmp@plt+0x35802>
  438f68:	nop    DWORD PTR [rax+rax*1+0x0]
  438f70:	lea    rsi,[rbx+0x4]
  438f74:	movzx  edx,BYTE PTR [rsp+0x50]
  438f79:	lea    rdi,[rsp+0x20]
  438f7e:	call   423b50 <strcmp@plt+0x203c8>
  438f83:	add    r12d,0x1
  438f87:	movzx  eax,WORD PTR [rbx]
  438f8a:	add    eax,0x3
  438f8d:	and    eax,0xfffffffc
  438f90:	sub    r14d,eax
  438f93:	add    rbx,rax
  438f96:	cmp    r14d,0x3
  438f9a:	jg     438f40 <strcmp@plt+0x357b8>
  438f9c:	cmp    r13d,DWORD PTR [rsp+0x4]
  438fa1:	jne    438fad <strcmp@plt+0x35825>
  438fa3:	cmp    r12d,0x2
  438fa7:	je     439060 <strcmp@plt+0x358d8>
  438fad:	mov    r14d,DWORD PTR [r15]
  438fb0:	add    r14d,0x3
  438fb4:	and    r14d,0xfffffffc
  438fb8:	sub    ebp,r14d
  438fbb:	add    r15,r14
  438fbe:	cmp    ebp,0xf
  438fc1:	ja     438f00 <strcmp@plt+0x35778>
  438fc7:	mov    edx,0x1000
  438fcc:	mov    ecx,0x40
  438fd1:	mov    ebx,DWORD PTR [rsp]
  438fd4:	mov    edi,ebx
  438fd6:	lea    rsi,[rsp+0x1040]
  438fde:	call   403160 <recv@plt>
  438fe3:	mov    rbp,rax
  438fe6:	test   ebp,ebp
  438fe8:	jg     438ee0 <strcmp@plt+0x35758>
  438fee:	lea    rax,[rip+0x2bdbb]        # 464db0 <strcmp@plt+0x61628>
  438ff5:	cmp    DWORD PTR [rax],0x3
  438ff8:	jl     439012 <strcmp@plt+0x3588a>
  438ffa:	lea    rsi,[rip+0x1504e]        # 44e04f <strcmp@plt+0x4a8c7>
  439001:	mov    edi,0x7
  439006:	xor    eax,eax
  439008:	mov    rdx,QWORD PTR [rsp+0x8]
  43900d:	call   42e800 <strcmp@plt+0x2b078>
  439012:	mov    edi,ebx
  439014:	call   403760 <close@plt>
  439019:	xor    ebx,ebx
  43901b:	jmp    4390a6 <strcmp@plt+0x3591e>
  439020:	lea    rsi,[rip+0x14fc1]        # 44dfe8 <strcmp@plt+0x4a860>
  439027:	xor    ebx,ebx
  439029:	mov    edi,0x2
  43902e:	xor    eax,eax
  439030:	call   42e800 <strcmp@plt+0x2b078>
  439035:	jmp    4390a6 <strcmp@plt+0x3591e>
  439037:	call   403040 <__errno_location@plt>
  43903c:	mov    edi,DWORD PTR [rax]
  43903e:	call   403170 <strerror@plt>
  439043:	mov    rcx,rax
  439046:	lea    rsi,[rip+0x14fd1]        # 44e01e <strcmp@plt+0x4a896>
  43904d:	xor    ebx,ebx
  43904f:	mov    edi,0x1
  439054:	xor    eax,eax
  439056:	mov    rdx,rcx
  439059:	call   42e800 <strcmp@plt+0x2b078>
  43905e:	jmp    4390a6 <strcmp@plt+0x3591e>
  439060:	mov    edi,DWORD PTR [rsp]
  439063:	call   403760 <close@plt>
  439068:	lea    rax,[rip+0x2bd41]        # 464db0 <strcmp@plt+0x61628>
  43906f:	cmp    DWORD PTR [rax],0x3
  439072:	jl     439099 <strcmp@plt+0x35911>
  439074:	lea    rdi,[rsp+0x20]
  439079:	call   423130 <strcmp@plt+0x1f9a8>
  43907e:	mov    rcx,rax
  439081:	lea    rsi,[rip+0x14ffe]        # 44e086 <strcmp@plt+0x4a8fe>
  439088:	mov    edi,0x7
  43908d:	xor    eax,eax
  43908f:	mov    rdx,QWORD PTR [rsp+0x8]
  439094:	call   42e800 <strcmp@plt+0x2b078>
  439099:	lea    rdi,[rsp+0x20]
  43909e:	call   423740 <strcmp@plt+0x1ffb8>
  4390a3:	mov    rbx,rax
  4390a6:	mov    rax,rbx
  4390a9:	add    rsp,0x2048
  4390b0:	pop    rbx
  4390b1:	pop    r12
  4390b3:	pop    r13
  4390b5:	pop    r14
  4390b7:	pop    r15
  4390b9:	pop    rbp
  4390ba:	ret    
  4390bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4390c0:	push   rbp
  4390c1:	push   r15
  4390c3:	push   r14
  4390c5:	push   r13
  4390c7:	push   r12
  4390c9:	push   rbx
  4390ca:	push   rax
  4390cb:	mov    esi,0xa
  4390d0:	call   4389e0 <strcmp@plt+0x35258>
  4390d5:	mov    r15,rax
  4390d8:	lea    r12,[rip+0x36a41]        # 46fb20 <strcmp@plt+0x6c398>
  4390df:	mov    eax,DWORD PTR [r12]
  4390e3:	test   eax,eax
  4390e5:	je     4390f4 <strcmp@plt+0x3596c>
  4390e7:	xor    r14d,r14d
  4390ea:	cmp    eax,0x1
  4390ed:	je     439149 <strcmp@plt+0x359c1>
  4390ef:	jmp    43919e <strcmp@plt+0x35a16>
  4390f4:	mov    rbx,QWORD PTR [r15+0x8]
  4390f8:	cmp    rbx,r15
  4390fb:	je     439130 <strcmp@plt+0x359a8>
  4390fd:	mov    ebp,0xe0
  439102:	xor    r14d,r14d
  439105:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43910f:	nop
  439110:	mov    r13,QWORD PTR [rbx+0x10]
  439114:	mov    rdi,r13
  439117:	call   423d60 <strcmp@plt+0x205d8>
  43911c:	mov    eax,DWORD PTR [rax]
  43911e:	and    eax,ebp
  439120:	cmp    eax,0x20
  439123:	je     439135 <strcmp@plt+0x359ad>
  439125:	mov    rbx,QWORD PTR [rbx+0x8]
  439129:	cmp    rbx,r15
  43912c:	jne    439110 <strcmp@plt+0x35988>
  43912e:	jmp    439140 <strcmp@plt+0x359b8>
  439130:	xor    r14d,r14d
  439133:	jmp    439140 <strcmp@plt+0x359b8>
  439135:	mov    rdi,r13
  439138:	call   423740 <strcmp@plt+0x1ffb8>
  43913d:	mov    r14,rax
  439140:	mov    eax,DWORD PTR [r12]
  439144:	cmp    eax,0x1
  439147:	jne    43919e <strcmp@plt+0x35a16>
  439149:	mov    rbx,QWORD PTR [r15+0x8]
  43914d:	cmp    rbx,r15
  439150:	jne    439169 <strcmp@plt+0x359e1>
  439152:	jmp    43919e <strcmp@plt+0x35a16>
  439154:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43915e:	xchg   ax,ax
  439160:	mov    rbx,QWORD PTR [rbx+0x8]
  439164:	cmp    rbx,r15
  439167:	je     43919e <strcmp@plt+0x35a16>
  439169:	mov    r12,QWORD PTR [rbx+0x10]
  43916d:	mov    rdi,r12
  439170:	call   423d60 <strcmp@plt+0x205d8>
  439175:	mov    eax,DWORD PTR [rax]
  439177:	mov    ecx,eax
  439179:	and    ecx,0xc0ff
  43917f:	cmp    ecx,0xc0fe
  439185:	je     439193 <strcmp@plt+0x35a0b>
  439187:	and    eax,0xfe
  43918c:	cmp    eax,0xfc
  439191:	jne    439160 <strcmp@plt+0x359d8>
  439193:	mov    rdi,r12
  439196:	call   423740 <strcmp@plt+0x1ffb8>
  43919b:	mov    r14,rax
  43919e:	mov    rdi,r15
  4391a1:	call   42c250 <strcmp@plt+0x28ac8>
  4391a6:	mov    rax,r14
  4391a9:	add    rsp,0x8
  4391ad:	pop    rbx
  4391ae:	pop    r12
  4391b0:	pop    r13
  4391b2:	pop    r14
  4391b4:	pop    r15
  4391b6:	pop    rbp
  4391b7:	ret    
  4391b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4391c0:	push   rbp
  4391c1:	push   r15
  4391c3:	push   r14
  4391c5:	push   rbx
  4391c6:	sub    rsp,0x2008
  4391cd:	mov    rbx,rdi
  4391d0:	call   4030c0 <if_nametoindex@plt>
  4391d5:	test   eax,eax
  4391d7:	je     4391ff <strcmp@plt+0x35a77>
  4391d9:	mov    ebp,eax
  4391db:	xor    eax,eax
  4391dd:	call   435a00 <strcmp@plt+0x32278>
  4391e2:	cmp    eax,0xfffffff7
  4391e5:	jne    43921d <strcmp@plt+0x35a95>
  4391e7:	lea    rsi,[rip+0x14efa]        # 44e0e8 <strcmp@plt+0x4a960>
  4391ee:	mov    edi,0x2
  4391f3:	xor    eax,eax
  4391f5:	call   42e800 <strcmp@plt+0x2b078>
  4391fa:	jmp    43931d <strcmp@plt+0x35b95>
  4391ff:	lea    rsi,[rip+0x14eb5]        # 44e0bb <strcmp@plt+0x4a933>
  439206:	mov    edi,0x2
  43920b:	xor    eax,eax
  43920d:	mov    rdx,rbx
  439210:	call   42e800 <strcmp@plt+0x2b078>
  439215:	mov    r14b,0xfa
  439218:	jmp    439320 <strcmp@plt+0x35b98>
  43921d:	mov    ebx,eax
  43921f:	mov    r14,rsp
  439222:	xor    esi,esi
  439224:	mov    edx,0x1000
  439229:	mov    rdi,r14
  43922c:	call   403260 <memset@plt>
  439231:	movabs rax,0x301001200000020
  43923b:	mov    QWORD PTR [rsp],rax
  43923f:	mov    BYTE PTR [rsp+0x10],0x11
  439244:	mov    edx,0x20
  439249:	xor    ecx,ecx
  43924b:	mov    edi,ebx
  43924d:	mov    rsi,r14
  439250:	call   403230 <send@plt>
  439255:	test   eax,eax
  439257:	js     4392f1 <strcmp@plt+0x35b69>
  43925d:	lea    r15,[rsp+0x1000]
  439265:	mov    edx,0x1000
  43926a:	mov    ecx,0x40
  43926f:	mov    edi,ebx
  439271:	mov    rsi,r15
  439274:	call   403160 <recv@plt>
  439279:	mov    r14b,0xfa
  43927c:	test   eax,eax
  43927e:	jle    4392e8 <strcmp@plt+0x35b60>
  439280:	cmp    eax,0x10
  439283:	jb     4392d0 <strcmp@plt+0x35b48>
  439285:	mov    rcx,r15
  439288:	nop    DWORD PTR [rax+rax*1+0x0]
  439290:	mov    edx,DWORD PTR [rcx]
  439292:	cmp    edx,0x10
  439295:	jb     4392d0 <strcmp@plt+0x35b48>
  439297:	cmp    edx,eax
  439299:	ja     4392d0 <strcmp@plt+0x35b48>
  43929b:	movzx  esi,WORD PTR [rcx+0x4]
  43929f:	cmp    esi,0x10
  4392a2:	jne    4392a9 <strcmp@plt+0x35b21>
  4392a4:	cmp    DWORD PTR [rcx+0x14],ebp
  4392a7:	je     4392bb <strcmp@plt+0x35b33>
  4392a9:	add    edx,0x3
  4392ac:	and    edx,0xfffffffc
  4392af:	sub    eax,edx
  4392b1:	add    rcx,rdx
  4392b4:	cmp    eax,0xf
  4392b7:	ja     439290 <strcmp@plt+0x35b08>
  4392b9:	jmp    4392d0 <strcmp@plt+0x35b48>
  4392bb:	mov    r14b,BYTE PTR [rcx+0x18]
  4392bf:	shr    r14b,0x6
  4392c3:	and    r14b,0x1
  4392c7:	nop    WORD PTR [rax+rax*1+0x0]
  4392d0:	mov    edx,0x1000
  4392d5:	mov    ecx,0x40
  4392da:	mov    edi,ebx
  4392dc:	mov    rsi,r15
  4392df:	call   403160 <recv@plt>
  4392e4:	test   eax,eax
  4392e6:	jg     439280 <strcmp@plt+0x35af8>
  4392e8:	mov    edi,ebx
  4392ea:	call   403760 <close@plt>
  4392ef:	jmp    439320 <strcmp@plt+0x35b98>
  4392f1:	call   403040 <__errno_location@plt>
  4392f6:	mov    edi,DWORD PTR [rax]
  4392f8:	call   403170 <strerror@plt>
  4392fd:	mov    rcx,rax
  439300:	lea    rsi,[rip+0x14e14]        # 44e11b <strcmp@plt+0x4a993>
  439307:	mov    edi,0x2
  43930c:	xor    eax,eax
  43930e:	mov    rdx,rcx
  439311:	call   42e800 <strcmp@plt+0x2b078>
  439316:	mov    edi,ebx
  439318:	call   403760 <close@plt>
  43931d:	mov    r14b,0xf7
  439320:	mov    eax,r14d
  439323:	add    rsp,0x2008
  43932a:	pop    rbx
  43932b:	pop    r14
  43932d:	pop    r15
  43932f:	pop    rbp
  439330:	ret    
  439331:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43933b:	nop    DWORD PTR [rax+rax*1+0x0]
  439340:	jmp    4030c0 <if_nametoindex@plt>
  439345:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43934f:	nop
  439350:	push   rbp
  439351:	mov    rbp,rsp
  439354:	push   r15
  439356:	push   r14
  439358:	push   r12
  43935a:	push   rbx
  43935b:	and    rsp,0xffffffffffffffe0
  43935f:	sub    rsp,0x40
  439363:	mov    r15,rsi
  439366:	mov    r14,rdi
  439369:	mov    edi,0x2
  43936e:	mov    esi,0x2
  439373:	xor    edx,edx
  439375:	call   4030f0 <socket@plt>
  43937a:	mov    ebx,eax
  43937c:	vxorps xmm0,xmm0,xmm0
  439380:	vmovaps YMMWORD PTR [rsp],ymm0
  439385:	mov    QWORD PTR [rsp+0x20],0x0
  43938e:	mov    WORD PTR [rsp+0x10],0x2
  439395:	mov    r12,rsp
  439398:	mov    edx,0xf
  43939d:	mov    rdi,r12
  4393a0:	mov    rsi,r14
  4393a3:	vzeroupper 
  4393a6:	call   403250 <strncpy@plt>
  4393ab:	mov    esi,0x8927
  4393b0:	xor    eax,eax
  4393b2:	mov    edi,ebx
  4393b4:	mov    rdx,r12
  4393b7:	call   403580 <ioctl@plt>
  4393bc:	mov    edi,ebx
  4393be:	call   403760 <close@plt>
  4393c3:	mov    eax,DWORD PTR [rsp+0x12]
  4393c7:	mov    DWORD PTR [r15],eax
  4393ca:	movzx  eax,WORD PTR [rsp+0x16]
  4393cf:	mov    WORD PTR [r15+0x4],ax
  4393d4:	lea    rsp,[rbp-0x20]
  4393d8:	pop    rbx
  4393d9:	pop    r12
  4393db:	pop    r14
  4393dd:	pop    r15
  4393df:	pop    rbp
  4393e0:	ret    
  4393e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4393eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4393f0:	push   rbp
  4393f1:	push   r14
  4393f3:	push   rbx
  4393f4:	sub    rsp,0x1000
  4393fb:	mov    ebx,esi
  4393fd:	mov    ebp,edi
  4393ff:	mov    r14,rsp
  439402:	xor    esi,esi
  439404:	mov    edx,0x1000
  439409:	mov    rdi,r14
  43940c:	call   403260 <memset@plt>
  439411:	movabs rax,0x301001a0000001c
  43941b:	mov    QWORD PTR [rsp],rax
  43941f:	mov    BYTE PTR [rsp+0x10],bl
  439423:	mov    al,0xfe
  439425:	test   ebp,ebp
  439427:	je     43942b <strcmp@plt+0x35ca3>
  439429:	mov    eax,ebp
  43942b:	mov    BYTE PTR [rsp+0x14],al
  43942f:	mov    WORD PTR [rsp+0x15],0x4
  439436:	mov    BYTE PTR [rsp+0x17],0x1
  43943b:	mov    BYTE PTR [rsp+0x13],0x0
  439440:	mov    WORD PTR [rsp+0x11],0x0
  439447:	lea    rax,[rip+0x2b8f2]        # 464d40 <strcmp@plt+0x615b8>
  43944e:	mov    rax,QWORD PTR [rax+0x68]
  439452:	mov    edi,DWORD PTR [rax]
  439454:	mov    edx,0x1c
  439459:	xor    ecx,ecx
  43945b:	mov    rsi,r14
  43945e:	call   403230 <send@plt>
  439463:	mov    ebx,0x1
  439468:	test   eax,eax
  43946a:	jns    439493 <strcmp@plt+0x35d0b>
  43946c:	call   403040 <__errno_location@plt>
  439471:	mov    edi,DWORD PTR [rax]
  439473:	call   403170 <strerror@plt>
  439478:	mov    rcx,rax
  43947b:	lea    rsi,[rip+0x14ccf]        # 44e151 <strcmp@plt+0x4a9c9>
  439482:	xor    ebx,ebx
  439484:	mov    edi,0x1
  439489:	xor    eax,eax
  43948b:	mov    rdx,rcx
  43948e:	call   42e800 <strcmp@plt+0x2b078>
  439493:	mov    eax,ebx
  439495:	add    rsp,0x1000
  43949c:	pop    rbx
  43949d:	pop    r14
  43949f:	pop    rbp
  4394a0:	ret    
  4394a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4394ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4394b0:	push   rbx
  4394b1:	mov    edi,0x4
  4394b6:	call   432070 <strcmp@plt+0x2e8e8>
  4394bb:	test   rax,rax
  4394be:	je     4394f8 <strcmp@plt+0x35d70>
  4394c0:	mov    rbx,rax
  4394c3:	lea    rax,[rip+0x2b876]        # 464d40 <strcmp@plt+0x615b8>
  4394ca:	mov    QWORD PTR [rax+0x68],rbx
  4394ce:	xor    eax,eax
  4394d0:	call   435a00 <strcmp@plt+0x32278>
  4394d5:	mov    DWORD PTR [rbx],eax
  4394d7:	lea    rcx,[rip+0x3703a]        # 470518 <strcmp@plt+0x6cd90>
  4394de:	mov    rdi,QWORD PTR [rcx]
  4394e1:	lea    rsi,[rip+0x328]        # 439810 <strcmp@plt+0x36088>
  4394e8:	xor    edx,edx
  4394ea:	mov    ecx,eax
  4394ec:	call   434d30 <strcmp@plt+0x315a8>
  4394f1:	mov    eax,0x1
  4394f6:	pop    rbx
  4394f7:	ret    
  4394f8:	xor    eax,eax
  4394fa:	pop    rbx
  4394fb:	ret    
  4394fc:	nop    DWORD PTR [rax+0x0]
  439500:	lea    rax,[rip+0x2b839]        # 464d40 <strcmp@plt+0x615b8>
  439507:	mov    rdi,QWORD PTR [rax+0x68]
  43950b:	jmp    403780 <free@plt>
  439510:	push   rbp
  439511:	push   r15
  439513:	push   r14
  439515:	push   r13
  439517:	push   r12
  439519:	push   rbx
  43951a:	sub    rsp,0x2018
  439521:	mov    rdi,QWORD PTR [rip+0x2aa80]        # 463fa8 <strcmp@plt+0x60820>
  439528:	call   42bc00 <strcmp@plt+0x28478>
  43952d:	mov    r12,rax
  439530:	xor    eax,eax
  439532:	call   435a00 <strcmp@plt+0x32278>
  439537:	cmp    eax,0xfffffff7
  43953a:	jne    439557 <strcmp@plt+0x35dcf>
  43953c:	lea    rsi,[rip+0x1491e]        # 44de61 <strcmp@plt+0x4a6d9>
  439543:	xor    r12d,r12d
  439546:	mov    edi,0x2
  43954b:	xor    eax,eax
  43954d:	call   42e800 <strcmp@plt+0x2b078>
  439552:	jmp    439679 <strcmp@plt+0x35ef1>
  439557:	mov    r15d,eax
  43955a:	lea    rbx,[rsp+0x10]
  43955f:	xor    esi,esi
  439561:	mov    edx,0x1000
  439566:	mov    rdi,rbx
  439569:	call   403260 <memset@plt>
  43956e:	movabs rax,0x301001200000020
  439578:	mov    QWORD PTR [rsp+0x10],rax
  43957d:	mov    BYTE PTR [rsp+0x20],0x11
  439582:	mov    edx,0x20
  439587:	xor    ecx,ecx
  439589:	mov    edi,r15d
  43958c:	mov    rsi,rbx
  43958f:	call   403230 <send@plt>
  439594:	test   eax,eax
  439596:	js     439649 <strcmp@plt+0x35ec1>
  43959c:	lea    r14,[rsp+0x1010]
  4395a4:	mov    edx,0x1000
  4395a9:	mov    ecx,0x40
  4395ae:	mov    edi,r15d
  4395b1:	mov    rsi,r14
  4395b4:	call   403160 <recv@plt>
  4395b9:	mov    rbx,rax
  4395bc:	test   ebx,ebx
  4395be:	jle    439671 <strcmp@plt+0x35ee9>
  4395c4:	mov    r13,rsp
  4395c7:	nop    WORD PTR [rax+rax*1+0x0]
  4395d0:	cmp    ebx,0x10
  4395d3:	jb     43962b <strcmp@plt+0x35ea3>
  4395d5:	mov    rbp,r14
  4395d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4395e0:	mov    eax,DWORD PTR [rbp+0x0]
  4395e3:	cmp    eax,0x10
  4395e6:	jb     43962b <strcmp@plt+0x35ea3>
  4395e8:	cmp    eax,ebx
  4395ea:	ja     43962b <strcmp@plt+0x35ea3>
  4395ec:	movzx  eax,WORD PTR [rbp+0x4]
  4395f0:	cmp    eax,0x10
  4395f3:	jne    439618 <strcmp@plt+0x35e90>
  4395f5:	mov    edi,DWORD PTR [rbp+0x14]
  4395f8:	mov    rsi,r13
  4395fb:	call   403730 <if_indextoname@plt>
  439600:	test   rax,rax
  439603:	je     439618 <strcmp@plt+0x35e90>
  439605:	mov    rdi,r13
  439608:	call   403700 <strdup@plt>
  43960d:	mov    rdi,rax
  439610:	mov    rsi,r12
  439613:	call   42bcf0 <strcmp@plt+0x28568>
  439618:	mov    eax,DWORD PTR [rbp+0x0]
  43961b:	add    eax,0x3
  43961e:	and    eax,0xfffffffc
  439621:	sub    ebx,eax
  439623:	add    rbp,rax
  439626:	cmp    ebx,0xf
  439629:	ja     4395e0 <strcmp@plt+0x35e58>
  43962b:	mov    edx,0x1000
  439630:	mov    ecx,0x40
  439635:	mov    edi,r15d
  439638:	mov    rsi,r14
  43963b:	call   403160 <recv@plt>
  439640:	mov    rbx,rax
  439643:	test   ebx,ebx
  439645:	jg     4395d0 <strcmp@plt+0x35e48>
  439647:	jmp    439671 <strcmp@plt+0x35ee9>
  439649:	call   403040 <__errno_location@plt>
  43964e:	mov    edi,DWORD PTR [rax]
  439650:	call   403170 <strerror@plt>
  439655:	mov    rcx,rax
  439658:	lea    rsi,[rip+0x14835]        # 44de94 <strcmp@plt+0x4a70c>
  43965f:	xor    r12d,r12d
  439662:	mov    edi,0x2
  439667:	xor    eax,eax
  439669:	mov    rdx,rcx
  43966c:	call   42e800 <strcmp@plt+0x2b078>
  439671:	mov    edi,r15d
  439674:	call   403760 <close@plt>
  439679:	mov    rax,r12
  43967c:	add    rsp,0x2018
  439683:	pop    rbx
  439684:	pop    r12
  439686:	pop    r13
  439688:	pop    r14
  43968a:	pop    r15
  43968c:	pop    rbp
  43968d:	ret    
  43968e:	xchg   ax,ax
  439690:	push   rbp
  439691:	push   r15
  439693:	push   r14
  439695:	push   r13
  439697:	push   r12
  439699:	push   rbx
  43969a:	sub    rsp,0x418
  4396a1:	lea    rbp,[rip+0x2b708]        # 464db0 <strcmp@plt+0x61628>
  4396a8:	cmp    DWORD PTR [rbp+0x0],0x0
  4396ac:	jle    4396c1 <strcmp@plt+0x35f39>
  4396ae:	lea    rsi,[rip+0x14ace]        # 44e183 <strcmp@plt+0x4a9fb>
  4396b5:	mov    edi,0x5
  4396ba:	xor    eax,eax
  4396bc:	call   42e800 <strcmp@plt+0x2b078>
  4396c1:	lea    rdi,[rsp+0x8]
  4396c6:	call   403740 <getifaddrs@plt>
  4396cb:	cmp    eax,0xffffffff
  4396ce:	jne    4396ea <strcmp@plt+0x35f62>
  4396d0:	lea    rsi,[rip+0x14ad5]        # 44e1ac <strcmp@plt+0x4aa24>
  4396d7:	mov    edi,0x1
  4396dc:	xor    eax,eax
  4396de:	call   42e800 <strcmp@plt+0x2b078>
  4396e3:	xor    eax,eax
  4396e5:	call   43b420 <strcmp@plt+0x37c98>
  4396ea:	mov    rdi,QWORD PTR [rip+0x2a8b7]        # 463fa8 <strcmp@plt+0x60820>
  4396f1:	call   436260 <strcmp@plt+0x32ad8>
  4396f6:	mov    r14,rax
  4396f9:	mov    r15,QWORD PTR [rsp+0x8]
  4396fe:	test   r15,r15
  439701:	je     4397f3 <strcmp@plt+0x3606b>
  439707:	lea    r13,[rsp+0x10]
  43970c:	lea    r12,[rip+0x14ace]        # 44e1e1 <strcmp@plt+0x4aa59>
  439713:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43971d:	nop    DWORD PTR [rax]
  439720:	mov    rdi,QWORD PTR [r15+0x18]
  439724:	test   rdi,rdi
  439727:	je     4397e0 <strcmp@plt+0x36058>
  43972d:	movzx  eax,WORD PTR [rdi]
  439730:	mov    ecx,eax
  439732:	or     ecx,0x8
  439735:	movzx  ecx,cx
  439738:	cmp    ecx,0xa
  43973b:	jne    4397e0 <strcmp@plt+0x36058>
  439741:	movzx  eax,ax
  439744:	mov    esi,0x10
  439749:	cmp    eax,0x2
  43974c:	je     439753 <strcmp@plt+0x35fcb>
  43974e:	mov    esi,0x1c
  439753:	mov    DWORD PTR [rsp],0x1
  43975a:	mov    ecx,0x401
  43975f:	xor    r8d,r8d
  439762:	xor    r9d,r9d
  439765:	mov    rdx,r13
  439768:	call   4032a0 <getnameinfo@plt>
  43976d:	test   eax,eax
  43976f:	je     43978f <strcmp@plt+0x36007>
  439771:	mov    edi,eax
  439773:	call   403550 <gai_strerror@plt>
  439778:	mov    rcx,rax
  43977b:	mov    edi,0x3
  439780:	xor    eax,eax
  439782:	mov    rsi,r12
  439785:	mov    rdx,rcx
  439788:	call   42e800 <strcmp@plt+0x2b078>
  43978d:	jmp    4397e0 <strcmp@plt+0x36058>
  43978f:	mov    rdi,r13
  439792:	call   403700 <strdup@plt>
  439797:	mov    rbx,rax
  43979a:	mov    rdi,QWORD PTR [r15+0x8]
  43979e:	call   403700 <strdup@plt>
  4397a3:	mov    rdi,r14
  4397a6:	mov    rsi,rbx
  4397a9:	mov    rdx,rax
  4397ac:	call   4362a0 <strcmp@plt+0x32b18>
  4397b1:	cmp    DWORD PTR [rbp+0x0],0x2
  4397b5:	jl     4397e0 <strcmp@plt+0x36058>
  4397b7:	mov    rdx,QWORD PTR [r15+0x8]
  4397bb:	mov    edi,0x6
  4397c0:	xor    eax,eax
  4397c2:	lea    rsi,[rip+0x14a47]        # 44e210 <strcmp@plt+0x4aa88>
  4397c9:	mov    rcx,r13
  4397cc:	call   42e800 <strcmp@plt+0x2b078>
  4397d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4397db:	nop    DWORD PTR [rax+rax*1+0x0]
  4397e0:	mov    r15,QWORD PTR [r15]
  4397e3:	test   r15,r15
  4397e6:	jne    439720 <strcmp@plt+0x35f98>
  4397ec:	mov    rdi,QWORD PTR [rsp+0x8]
  4397f1:	jmp    4397f5 <strcmp@plt+0x3606d>
  4397f3:	xor    edi,edi
  4397f5:	call   4036a0 <freeifaddrs@plt>
  4397fa:	mov    rax,r14
  4397fd:	add    rsp,0x418
  439804:	pop    rbx
  439805:	pop    r12
  439807:	pop    r13
  439809:	pop    r14
  43980b:	pop    r15
  43980d:	pop    rbp
  43980e:	ret    
  43980f:	nop
  439810:	push   rbp
  439811:	mov    rbp,rsp
  439814:	push   r15
  439816:	push   r14
  439818:	push   r13
  43981a:	push   r12
  43981c:	push   rbx
  43981d:	and    rsp,0xffffffffffffffe0
  439821:	sub    rsp,0x1080
  439828:	mov    QWORD PTR [rsp+0x18],rdi
  43982d:	mov    edi,DWORD PTR [rdi+0x18]
  439830:	lea    rsi,[rsp+0x60]
  439835:	mov    edx,0x1000
  43983a:	mov    ecx,0x40
  43983f:	call   403160 <recv@plt>
  439844:	mov    r12,rax
  439847:	test   r12d,r12d
  43984a:	jle    439b1d <strcmp@plt+0x36395>
  439850:	lea    r14,[rip+0x14a49]        # 44e2a0 <strcmp@plt+0x4ab18>
  439857:	lea    r13,[rip+0x2b552]        # 464db0 <strcmp@plt+0x61628>
  43985e:	xchg   ax,ax
  439860:	cmp    r12d,0x10
  439864:	jl     439ae0 <strcmp@plt+0x36358>
  43986a:	lea    r15,[rsp+0x60]
  43986f:	nop
  439870:	mov    esi,DWORD PTR [r15]
  439873:	cmp    esi,0x10
  439876:	jb     439ae0 <strcmp@plt+0x36358>
  43987c:	cmp    esi,r12d
  43987f:	ja     439ae0 <strcmp@plt+0x36358>
  439885:	mov    eax,DWORD PTR [r15+0x4]
  439889:	add    eax,0xfffffffd
  43988c:	movzx  ecx,ax
  43988f:	cmp    ecx,0x16
  439892:	ja     439ac0 <strcmp@plt+0x36338>
  439898:	movzx  eax,ax
  43989b:	movsxd rax,DWORD PTR [r14+rax*4]
  43989f:	add    rax,r14
  4398a2:	jmp    rax
  4398a4:	cmp    DWORD PTR [r13+0x0],0x2
  4398a9:	jl     4398c1 <strcmp@plt+0x36139>
  4398ab:	mov    edi,0x6
  4398b0:	xor    eax,eax
  4398b2:	lea    rsi,[rip+0x14ad5]        # 44e38e <strcmp@plt+0x4ac06>
  4398b9:	vzeroupper 
  4398bc:	call   42e800 <strcmp@plt+0x2b078>
  4398c1:	mov    rdi,r15
  4398c4:	vzeroupper 
  4398c7:	call   439cf0 <strcmp@plt+0x36568>
  4398cc:	jmp    439ac0 <strcmp@plt+0x36338>
  4398d1:	cmp    DWORD PTR [r13+0x0],0x2
  4398d6:	jl     4398ee <strcmp@plt+0x36166>
  4398d8:	mov    edi,0x6
  4398dd:	xor    eax,eax
  4398df:	lea    rsi,[rip+0x14a3e]        # 44e324 <strcmp@plt+0x4ab9c>
  4398e6:	vzeroupper 
  4398e9:	call   42e800 <strcmp@plt+0x2b078>
  4398ee:	mov    rdi,r15
  4398f1:	vzeroupper 
  4398f4:	call   439b40 <strcmp@plt+0x363b8>
  4398f9:	jmp    439ac0 <strcmp@plt+0x36338>
  4398fe:	mov    rbx,r13
  439901:	cmp    DWORD PTR [r13+0x0],0x2
  439906:	jl     43991e <strcmp@plt+0x36196>
  439908:	mov    edi,0x6
  43990d:	xor    eax,eax
  43990f:	lea    rsi,[rip+0x14a43]        # 44e359 <strcmp@plt+0x4abd1>
  439916:	vzeroupper 
  439919:	call   42e800 <strcmp@plt+0x2b078>
  43991e:	vxorps xmm0,xmm0,xmm0
  439922:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  439928:	mov    eax,DWORD PTR [r15]
  43992b:	mov    r13d,DWORD PTR [r15+0x14]
  43992f:	add    eax,0xffffffe8
  439932:	cmp    eax,0x4
  439935:	jl     439aaa <strcmp@plt+0x36322>
  43993b:	lea    rsi,[r15+0x18]
  43993f:	nop
  439940:	movzx  ecx,WORD PTR [rsi]
  439943:	cmp    ecx,0x4
  439946:	jb     439aaa <strcmp@plt+0x36322>
  43994c:	cmp    eax,ecx
  43994e:	jl     439aaa <strcmp@plt+0x36322>
  439954:	movzx  edx,BYTE PTR [r15+0x10]
  439959:	cmp    dl,0xa
  43995c:	je     439980 <strcmp@plt+0x361f8>
  43995e:	cmp    dl,0x2
  439961:	jne    43998d <strcmp@plt+0x36205>
  439963:	movzx  edx,WORD PTR [rsi+0x2]
  439967:	cmp    edx,0x2
  43996a:	jne    43998d <strcmp@plt+0x36205>
  43996c:	jmp    439a8d <strcmp@plt+0x36305>
  439971:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43997b:	nop    DWORD PTR [rax+rax*1+0x0]
  439980:	movzx  edx,WORD PTR [rsi+0x2]
  439984:	cmp    edx,0x1
  439987:	je     439a94 <strcmp@plt+0x3630c>
  43998d:	add    ecx,0x3
  439990:	and    ecx,0xfffffffc
  439993:	sub    eax,ecx
  439995:	add    rsi,rcx
  439998:	cmp    eax,0x3
  43999b:	jg     439940 <strcmp@plt+0x361b8>
  43999d:	jmp    439aaa <strcmp@plt+0x36322>
  4399a2:	cmp    DWORD PTR [r13+0x0],0x2
  4399a7:	jl     4399bf <strcmp@plt+0x36237>
  4399a9:	mov    edi,0x6
  4399ae:	xor    eax,eax
  4399b0:	lea    rsi,[rip+0x14a05]        # 44e3bc <strcmp@plt+0x4ac34>
  4399b7:	vzeroupper 
  4399ba:	call   42e800 <strcmp@plt+0x2b078>
  4399bf:	mov    al,BYTE PTR [r15+0x17]
  4399c3:	cmp    al,0x5
  4399c5:	je     439a2a <strcmp@plt+0x362a2>
  4399c7:	cmp    al,0x1
  4399c9:	jne    439ac0 <strcmp@plt+0x36338>
  4399cf:	lea    rdi,[r15+0x10]
  4399d3:	mov    esi,DWORD PTR [r15]
  4399d6:	add    esi,0xffffffe4
  4399d9:	vzeroupper 
  4399dc:	call   439e20 <strcmp@plt+0x36698>
  4399e1:	jmp    439ac0 <strcmp@plt+0x36338>
  4399e6:	cmp    DWORD PTR [r13+0x0],0x2
  4399eb:	jl     439a06 <strcmp@plt+0x3627e>
  4399ed:	mov    edi,0x6
  4399f2:	xor    eax,eax
  4399f4:	lea    rsi,[rip+0x149f4]        # 44e3ef <strcmp@plt+0x4ac67>
  4399fb:	vzeroupper 
  4399fe:	call   42e800 <strcmp@plt+0x2b078>
  439a03:	mov    esi,DWORD PTR [r15]
  439a06:	lea    rdi,[r15+0x10]
  439a0a:	add    esi,0xffffffe4
  439a0d:	mov    al,BYTE PTR [r15+0x17]
  439a11:	cmp    al,0x5
  439a13:	je     439a4d <strcmp@plt+0x362c5>
  439a15:	cmp    al,0x1
  439a17:	jne    439ac0 <strcmp@plt+0x36338>
  439a1d:	vzeroupper 
  439a20:	call   43a250 <strcmp@plt+0x36ac8>
  439a25:	jmp    439ac0 <strcmp@plt+0x36338>
  439a2a:	cmp    DWORD PTR [r13+0x0],0x0
  439a2f:	jle    439ac0 <strcmp@plt+0x36338>
  439a35:	mov    edi,0x5
  439a3a:	xor    eax,eax
  439a3c:	lea    rsi,[rip+0x14a8d]        # 44e4d0 <strcmp@plt+0x4ad48>
  439a43:	vzeroupper 
  439a46:	call   42e800 <strcmp@plt+0x2b078>
  439a4b:	jmp    439ac0 <strcmp@plt+0x36338>
  439a4d:	vmovups ymm0,YMMWORD PTR [rip+0x1482b]        # 44e280 <strcmp@plt+0x4aaf8>
  439a55:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  439a5b:	vmovups YMMWORD PTR [rsp+0x40],ymm0
  439a61:	mov    al,BYTE PTR [r15+0x14]
  439a65:	cmp    al,0xfe
  439a67:	je     439a74 <strcmp@plt+0x362ec>
  439a69:	cmp    al,0xfd
  439a6b:	jne    439ac0 <strcmp@plt+0x36338>
  439a6d:	cmp    BYTE PTR [rdi],0x80
  439a70:	je     439a79 <strcmp@plt+0x362f1>
  439a72:	jmp    439ac0 <strcmp@plt+0x36338>
  439a74:	cmp    BYTE PTR [rdi],0x81
  439a77:	jne    439ac0 <strcmp@plt+0x36338>
  439a79:	lea    rdx,[rsp+0x40]
  439a7e:	lea    rcx,[rsp+0x20]
  439a83:	vzeroupper 
  439a86:	call   439ff0 <strcmp@plt+0x36868>
  439a8b:	jmp    439ac0 <strcmp@plt+0x36338>
  439a8d:	mov    edx,0x2
  439a92:	jmp    439a99 <strcmp@plt+0x36311>
  439a94:	mov    edx,0xa
  439a99:	add    rsi,0x4
  439a9d:	lea    rdi,[rsp+0x20]
  439aa2:	vzeroupper 
  439aa5:	call   423b50 <strcmp@plt+0x203c8>
  439aaa:	xor    edi,edi
  439aac:	mov    esi,r13d
  439aaf:	lea    rdx,[rsp+0x20]
  439ab4:	vzeroupper 
  439ab7:	call   4381c0 <strcmp@plt+0x34a38>
  439abc:	mov    r13,rbx
  439abf:	nop
  439ac0:	mov    eax,DWORD PTR [r15]
  439ac3:	add    eax,0x3
  439ac6:	and    eax,0xfffffffc
  439ac9:	sub    r12d,eax
  439acc:	add    r15,rax
  439acf:	cmp    r12d,0xf
  439ad3:	jg     439870 <strcmp@plt+0x360e8>
  439ad9:	nop    DWORD PTR [rax+0x0]
  439ae0:	xor    esi,esi
  439ae2:	mov    edx,0x1000
  439ae7:	lea    rbx,[rsp+0x60]
  439aec:	mov    rdi,rbx
  439aef:	vzeroupper 
  439af2:	call   403260 <memset@plt>
  439af7:	mov    rax,QWORD PTR [rsp+0x18]
  439afc:	mov    edi,DWORD PTR [rax+0x18]
  439aff:	mov    edx,0x1000
  439b04:	mov    ecx,0x40
  439b09:	mov    rsi,rbx
  439b0c:	call   403160 <recv@plt>
  439b11:	mov    r12,rax
  439b14:	test   r12d,r12d
  439b17:	jg     439860 <strcmp@plt+0x360d8>
  439b1d:	mov    eax,0x1
  439b22:	lea    rsp,[rbp-0x28]
  439b26:	pop    rbx
  439b27:	pop    r12
  439b29:	pop    r13
  439b2b:	pop    r14
  439b2d:	pop    r15
  439b2f:	pop    rbp
  439b30:	ret    
  439b31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  439b40:	push   rbp
  439b41:	push   r15
  439b43:	push   r14
  439b45:	push   r12
  439b47:	push   rbx
  439b48:	sub    rsp,0x20
  439b4c:	vmovups ymm0,YMMWORD PTR [rip+0x1472c]        # 44e280 <strcmp@plt+0x4aaf8>
  439b54:	vmovups YMMWORD PTR [rsp],ymm0
  439b59:	mov    ebp,DWORD PTR [rdi]
  439b5b:	add    ebp,0xffffffe8
  439b5e:	cmp    ebp,0x4
  439b61:	jl     439c25 <strcmp@plt+0x3649d>
  439b67:	mov    r12,rdi
  439b6a:	mov    r15d,DWORD PTR [rdi+0x14]
  439b6e:	lea    rbx,[rdi+0x18]
  439b72:	mov    r14,rsp
  439b75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439b7f:	nop
  439b80:	movzx  eax,WORD PTR [rbx]
  439b83:	cmp    eax,0x4
  439b86:	jb     439c25 <strcmp@plt+0x3649d>
  439b8c:	cmp    ebp,eax
  439b8e:	jl     439c25 <strcmp@plt+0x3649d>
  439b94:	movzx  edx,BYTE PTR [r12+0x10]
  439b9a:	cmp    edx,0x2
  439b9d:	jne    439be0 <strcmp@plt+0x36458>
  439b9f:	movzx  ecx,WORD PTR [rbx+0x2]
  439ba3:	mov    al,0x2
  439ba5:	cmp    ecx,0x2
  439ba8:	jne    439bcf <strcmp@plt+0x36447>
  439baa:	lea    rsi,[rbx+0x4]
  439bae:	mov    rdi,r14
  439bb1:	vzeroupper 
  439bb4:	call   423b50 <strcmp@plt+0x203c8>
  439bb9:	mov    edi,0x1
  439bbe:	mov    esi,r15d
  439bc1:	mov    rdx,r14
  439bc4:	call   4381c0 <strcmp@plt+0x34a38>
  439bc9:	movzx  eax,BYTE PTR [r12+0x10]
  439bcf:	movzx  edx,al
  439bd2:	cmp    al,0xa
  439bd4:	je     439be6 <strcmp@plt+0x3645e>
  439bd6:	jmp    439c0e <strcmp@plt+0x36486>
  439bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  439be0:	mov    eax,edx
  439be2:	cmp    al,0xa
  439be4:	jne    439c0e <strcmp@plt+0x36486>
  439be6:	movzx  eax,WORD PTR [rbx+0x2]
  439bea:	cmp    eax,0x1
  439bed:	jne    439c0e <strcmp@plt+0x36486>
  439bef:	lea    rsi,[rbx+0x4]
  439bf3:	mov    rdi,r14
  439bf6:	vzeroupper 
  439bf9:	call   423b50 <strcmp@plt+0x203c8>
  439bfe:	mov    edi,0x1
  439c03:	mov    esi,r15d
  439c06:	mov    rdx,r14
  439c09:	call   4381c0 <strcmp@plt+0x34a38>
  439c0e:	movzx  eax,WORD PTR [rbx]
  439c11:	add    eax,0x3
  439c14:	and    eax,0xfffffffc
  439c17:	sub    ebp,eax
  439c19:	add    rbx,rax
  439c1c:	cmp    ebp,0x3
  439c1f:	jg     439b80 <strcmp@plt+0x363f8>
  439c25:	add    rsp,0x20
  439c29:	pop    rbx
  439c2a:	pop    r12
  439c2c:	pop    r14
  439c2e:	pop    r15
  439c30:	pop    rbp
  439c31:	vzeroupper 
  439c34:	ret    
  439c35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439c3f:	nop
  439c40:	push   rbp
  439c41:	mov    rbp,rsp
  439c44:	push   rbx
  439c45:	and    rsp,0xffffffffffffffe0
  439c49:	sub    rsp,0x40
  439c4d:	vxorps xmm0,xmm0,xmm0
  439c51:	vmovaps YMMWORD PTR [rsp],ymm0
  439c56:	mov    eax,DWORD PTR [rdi]
  439c58:	mov    ebx,DWORD PTR [rdi+0x14]
  439c5b:	add    eax,0xffffffe8
  439c5e:	cmp    eax,0x4
  439c61:	jl     439cd6 <strcmp@plt+0x3654e>
  439c63:	lea    rsi,[rdi+0x18]
  439c67:	nop    WORD PTR [rax+rax*1+0x0]
  439c70:	movzx  ecx,WORD PTR [rsi]
  439c73:	cmp    ecx,0x4
  439c76:	jb     439cd6 <strcmp@plt+0x3654e>
  439c78:	cmp    eax,ecx
  439c7a:	jl     439cd6 <strcmp@plt+0x3654e>
  439c7c:	movzx  edx,BYTE PTR [rdi+0x10]
  439c80:	cmp    dl,0xa
  439c83:	je     439ca0 <strcmp@plt+0x36518>
  439c85:	cmp    dl,0x2
  439c88:	jne    439ca9 <strcmp@plt+0x36521>
  439c8a:	movzx  edx,WORD PTR [rsi+0x2]
  439c8e:	cmp    edx,0x2
  439c91:	jne    439ca9 <strcmp@plt+0x36521>
  439c93:	jmp    439cbb <strcmp@plt+0x36533>
  439c95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439c9f:	nop
  439ca0:	movzx  edx,WORD PTR [rsi+0x2]
  439ca4:	cmp    edx,0x1
  439ca7:	je     439cc2 <strcmp@plt+0x3653a>
  439ca9:	add    ecx,0x3
  439cac:	and    ecx,0xfffffffc
  439caf:	sub    eax,ecx
  439cb1:	add    rsi,rcx
  439cb4:	cmp    eax,0x3
  439cb7:	jg     439c70 <strcmp@plt+0x364e8>
  439cb9:	jmp    439cd6 <strcmp@plt+0x3654e>
  439cbb:	mov    edx,0x2
  439cc0:	jmp    439cc7 <strcmp@plt+0x3653f>
  439cc2:	mov    edx,0xa
  439cc7:	add    rsi,0x4
  439ccb:	mov    rdi,rsp
  439cce:	vzeroupper 
  439cd1:	call   423b50 <strcmp@plt+0x203c8>
  439cd6:	mov    rdx,rsp
  439cd9:	xor    edi,edi
  439cdb:	mov    esi,ebx
  439cdd:	vzeroupper 
  439ce0:	call   4381c0 <strcmp@plt+0x34a38>
  439ce5:	lea    rsp,[rbp-0x8]
  439ce9:	pop    rbx
  439cea:	pop    rbp
  439ceb:	ret    
  439cec:	nop    DWORD PTR [rax+0x0]
  439cf0:	push   r14
  439cf2:	push   rbx
  439cf3:	sub    rsp,0x18
  439cf7:	mov    r14,rdi
  439cfa:	mov    ebx,DWORD PTR [rdi+0x14]
  439cfd:	mov    edi,ebx
  439cff:	call   43ae90 <strcmp@plt+0x37708>
  439d04:	mov    edi,ebx
  439d06:	test   rax,rax
  439d09:	je     439d25 <strcmp@plt+0x3659d>
  439d0b:	mov    eax,0x106
  439d10:	bextr  edx,DWORD PTR [r14+0x18],eax
  439d16:	mov    esi,ebx
  439d18:	call   4385f0 <strcmp@plt+0x34e68>
  439d1d:	add    rsp,0x18
  439d21:	pop    rbx
  439d22:	pop    r14
  439d24:	ret    
  439d25:	mov    rsi,rsp
  439d28:	mov    edi,ebx
  439d2a:	call   403730 <if_indextoname@plt>
  439d2f:	test   rax,rax
  439d32:	je     439d46 <strcmp@plt+0x365be>
  439d34:	mov    rdi,rsp
  439d37:	call   43ae20 <strcmp@plt+0x37698>
  439d3c:	test   rax,rax
  439d3f:	je     439d46 <strcmp@plt+0x365be>
  439d41:	mov    edi,DWORD PTR [rax+0x8]
  439d44:	jmp    439d0b <strcmp@plt+0x36583>
  439d46:	lea    rax,[rip+0x2b063]        # 464db0 <strcmp@plt+0x61628>
  439d4d:	cmp    DWORD PTR [rax],0x2
  439d50:	jl     439d1d <strcmp@plt+0x36595>
  439d52:	lea    rsi,[rip+0x146cc]        # 44e425 <strcmp@plt+0x4ac9d>
  439d59:	mov    rdx,rsp
  439d5c:	mov    edi,0x6
  439d61:	xor    eax,eax
  439d63:	call   42e800 <strcmp@plt+0x2b078>
  439d68:	jmp    439d1d <strcmp@plt+0x36595>
  439d6a:	nop    WORD PTR [rax+rax*1+0x0]
  439d70:	mov    al,BYTE PTR [rdi+0x17]
  439d73:	cmp    al,0x5
  439d75:	je     439d89 <strcmp@plt+0x36601>
  439d77:	cmp    al,0x1
  439d79:	jne    439da8 <strcmp@plt+0x36620>
  439d7b:	mov    esi,DWORD PTR [rdi]
  439d7d:	add    rdi,0x10
  439d81:	add    esi,0xffffffe4
  439d84:	jmp    439e20 <strcmp@plt+0x36698>
  439d89:	lea    rax,[rip+0x2b020]        # 464db0 <strcmp@plt+0x61628>
  439d90:	cmp    DWORD PTR [rax],0x0
  439d93:	jle    439da8 <strcmp@plt+0x36620>
  439d95:	lea    rsi,[rip+0x14734]        # 44e4d0 <strcmp@plt+0x4ad48>
  439d9c:	mov    edi,0x5
  439da1:	xor    eax,eax
  439da3:	jmp    42e800 <strcmp@plt+0x2b078>
  439da8:	ret    
  439da9:	nop    DWORD PTR [rax+0x0]
  439db0:	mov    rax,rdi
  439db3:	lea    rdi,[rdi+0x10]
  439db7:	mov    esi,DWORD PTR [rax]
  439db9:	add    esi,0xffffffe4
  439dbc:	mov    cl,BYTE PTR [rax+0x17]
  439dbf:	cmp    cl,0x5
  439dc2:	je     439dce <strcmp@plt+0x36646>
  439dc4:	cmp    cl,0x1
  439dc7:	jne    439e10 <strcmp@plt+0x36688>
  439dc9:	jmp    43a250 <strcmp@plt+0x36ac8>
  439dce:	sub    rsp,0x48
  439dd2:	vmovups ymm0,YMMWORD PTR [rip+0x144a6]        # 44e280 <strcmp@plt+0x4aaf8>
  439dda:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  439de0:	vmovups YMMWORD PTR [rsp],ymm0
  439de5:	mov    al,BYTE PTR [rax+0x14]
  439de8:	cmp    al,0xfe
  439dea:	je     439df7 <strcmp@plt+0x3666f>
  439dec:	cmp    al,0xfd
  439dee:	jne    439e0c <strcmp@plt+0x36684>
  439df0:	cmp    BYTE PTR [rdi],0x80
  439df3:	je     439dfc <strcmp@plt+0x36674>
  439df5:	jmp    439e0c <strcmp@plt+0x36684>
  439df7:	cmp    BYTE PTR [rdi],0x81
  439dfa:	jne    439e0c <strcmp@plt+0x36684>
  439dfc:	mov    rdx,rsp
  439dff:	lea    rcx,[rsp+0x20]
  439e04:	vzeroupper 
  439e07:	call   439ff0 <strcmp@plt+0x36868>
  439e0c:	add    rsp,0x48
  439e10:	vzeroupper 
  439e13:	ret    
  439e14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439e1e:	xchg   ax,ax
  439e20:	push   rbp
  439e21:	mov    rbp,rsp
  439e24:	push   r15
  439e26:	push   r14
  439e28:	push   r13
  439e2a:	push   r12
  439e2c:	push   rbx
  439e2d:	and    rsp,0xffffffffffffffe0
  439e31:	sub    rsp,0xa0
  439e38:	vxorps xmm0,xmm0,xmm0
  439e3c:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  439e42:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  439e48:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  439e4e:	cmp    BYTE PTR [rdi+0x4],0xfe
  439e52:	jne    439fbd <strcmp@plt+0x36835>
  439e58:	mov    r14,rdi
  439e5b:	movzx  edx,BYTE PTR [rdi]
  439e5e:	mov    eax,edx
  439e60:	or     al,0x8
  439e62:	cmp    al,0xa
  439e64:	jne    439f9b <strcmp@plt+0x36813>
  439e6a:	mov    ebx,esi
  439e6c:	mov    DWORD PTR [rsp+0x14],0xffffffff
  439e74:	cmp    esi,0x4
  439e77:	jl     439f79 <strcmp@plt+0x367f1>
  439e7d:	mov    al,BYTE PTR [r14+0x1]
  439e81:	mov    BYTE PTR [rsp+0x13],al
  439e85:	mov    al,BYTE PTR [r14+0x2]
  439e89:	mov    BYTE PTR [rsp+0x12],al
  439e8d:	lea    r12,[r14+0xc]
  439e91:	mov    DWORD PTR [rsp+0x14],0xffffffff
  439e99:	lea    r13,[rip+0x1445c]        # 44e2fc <strcmp@plt+0x4ab74>
  439ea0:	mov    QWORD PTR [rsp+0x18],r14
  439ea5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439eaf:	nop
  439eb0:	movzx  eax,WORD PTR [r12]
  439eb5:	cmp    eax,0x4
  439eb8:	jb     439f79 <strcmp@plt+0x367f1>
  439ebe:	cmp    ebx,eax
  439ec0:	jl     439f79 <strcmp@plt+0x367f1>
  439ec6:	movzx  eax,WORD PTR [r12+0x2]
  439ecc:	add    eax,0xffffffff
  439ecf:	movzx  ecx,ax
  439ed2:	cmp    ecx,0x4
  439ed5:	ja     439f60 <strcmp@plt+0x367d8>
  439edb:	movzx  eax,ax
  439ede:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  439ee3:	add    rax,r13
  439ee6:	jmp    rax
  439ee8:	lea    rsi,[r12+0x4]
  439eed:	movzx  edx,BYTE PTR [r14]
  439ef1:	mov    r14,r13
  439ef4:	lea    r15,[rsp+0x20]
  439ef9:	mov    rdi,r15
  439efc:	vzeroupper 
  439eff:	call   423b50 <strcmp@plt+0x203c8>
  439f04:	movzx  esi,BYTE PTR [rsp+0x13]
  439f09:	mov    rdi,r15
  439f0c:	mov    r14,QWORD PTR [rsp+0x18]
  439f11:	jmp    439f34 <strcmp@plt+0x367ac>
  439f13:	lea    rsi,[r12+0x4]
  439f18:	movzx  edx,BYTE PTR [r14]
  439f1c:	lea    r15,[rsp+0x40]
  439f21:	mov    rdi,r15
  439f24:	vzeroupper 
  439f27:	call   423b50 <strcmp@plt+0x203c8>
  439f2c:	movzx  esi,BYTE PTR [rsp+0x12]
  439f31:	mov    rdi,r15
  439f34:	call   423480 <strcmp@plt+0x1fcf8>
  439f39:	jmp    439f60 <strcmp@plt+0x367d8>
  439f3b:	mov    eax,DWORD PTR [r12+0x4]
  439f40:	mov    DWORD PTR [rsp+0x14],eax
  439f44:	jmp    439f60 <strcmp@plt+0x367d8>
  439f46:	lea    rsi,[r12+0x4]
  439f4b:	movzx  edx,BYTE PTR [r14]
  439f4f:	lea    rdi,[rsp+0x60]
  439f54:	vzeroupper 
  439f57:	call   423b50 <strcmp@plt+0x203c8>
  439f5c:	nop    DWORD PTR [rax+0x0]
  439f60:	movzx  eax,WORD PTR [r12]
  439f65:	add    eax,0x3
  439f68:	and    eax,0xfffffffc
  439f6b:	sub    ebx,eax
  439f6d:	add    r12,rax
  439f70:	cmp    ebx,0x3
  439f73:	jg     439eb0 <strcmp@plt+0x36728>
  439f79:	lea    rdx,[rsp+0x40]
  439f7e:	lea    rcx,[rsp+0x20]
  439f83:	lea    r8,[rsp+0x60]
  439f88:	mov    edi,0x1
  439f8d:	mov    esi,DWORD PTR [rsp+0x14]
  439f91:	vzeroupper 
  439f94:	call   438730 <strcmp@plt+0x34fa8>
  439f99:	jmp    439fbd <strcmp@plt+0x36835>
  439f9b:	lea    rax,[rip+0x2ae0e]        # 464db0 <strcmp@plt+0x61628>
  439fa2:	cmp    DWORD PTR [rax],0x3
  439fa5:	jl     439fbd <strcmp@plt+0x36835>
  439fa7:	lea    rsi,[rip+0x144d5]        # 44e483 <strcmp@plt+0x4acfb>
  439fae:	mov    edi,0x7
  439fb3:	xor    eax,eax
  439fb5:	vzeroupper 
  439fb8:	call   42e800 <strcmp@plt+0x2b078>
  439fbd:	lea    rsp,[rbp-0x28]
  439fc1:	pop    rbx
  439fc2:	pop    r12
  439fc4:	pop    r13
  439fc6:	pop    r14
  439fc8:	pop    r15
  439fca:	pop    rbp
  439fcb:	vzeroupper 
  439fce:	ret    
  439fcf:	nop
  439fd0:	lea    rax,[rip+0x2add9]        # 464db0 <strcmp@plt+0x61628>
  439fd7:	cmp    DWORD PTR [rax],0x0
  439fda:	jle    439fef <strcmp@plt+0x36867>
  439fdc:	lea    rsi,[rip+0x144ed]        # 44e4d0 <strcmp@plt+0x4ad48>
  439fe3:	mov    edi,0x5
  439fe8:	xor    eax,eax
  439fea:	jmp    42e800 <strcmp@plt+0x2b078>
  439fef:	ret    
  439ff0:	push   rbp
  439ff1:	push   r15
  439ff3:	push   r14
  439ff5:	push   r13
  439ff7:	push   r12
  439ff9:	push   rbx
  439ffa:	sub    rsp,0x458
  43a001:	mov    QWORD PTR [rsp+0x10],rcx
  43a006:	mov    QWORD PTR [rsp+0x8],rdx
  43a00b:	mov    ebp,esi
  43a00d:	mov    rbx,rdi
  43a010:	lea    rdi,[rsp+0x50]
  43a015:	xor    r14d,r14d
  43a018:	xor    esi,esi
  43a01a:	mov    edx,0x400
  43a01f:	call   403260 <memset@plt>
  43a024:	cmp    ebp,0x4
  43a027:	jl     43a1e1 <strcmp@plt+0x36a59>
  43a02d:	mov    QWORD PTR [rsp+0x20],rbx
  43a032:	lea    r14,[rbx+0xc]
  43a036:	xor    r13d,r13d
  43a039:	nop    DWORD PTR [rax+0x0]
  43a040:	movzx  r15d,WORD PTR [r14]
  43a044:	cmp    r15d,0x4
  43a048:	jb     43a199 <strcmp@plt+0x36a11>
  43a04e:	cmp    ebp,r15d
  43a051:	jl     43a199 <strcmp@plt+0x36a11>
  43a057:	movzx  eax,WORD PTR [r14+0x2]
  43a05c:	cmp    eax,0x9
  43a05f:	mov    DWORD PTR [rsp+0x1c],ebp
  43a063:	je     43a0a0 <strcmp@plt+0x36918>
  43a065:	movzx  eax,ax
  43a068:	cmp    eax,0x2
  43a06b:	je     43a140 <strcmp@plt+0x369b8>
  43a071:	cmp    eax,0x1
  43a074:	jne    43a17d <strcmp@plt+0x369f5>
  43a07a:	mov    rax,QWORD PTR [rsp+0x20]
  43a07f:	mov    al,BYTE PTR [rax]
  43a081:	cmp    al,0x81
  43a083:	je     43a15a <strcmp@plt+0x369d2>
  43a089:	cmp    al,0x80
  43a08b:	jne    43a17d <strcmp@plt+0x369f5>
  43a091:	lea    rsi,[r14+0x4]
  43a095:	mov    edx,0x2
  43a09a:	jmp    43a163 <strcmp@plt+0x369db>
  43a09f:	nop
  43a0a0:	movzx  eax,WORD PTR [r14+0x4]
  43a0a5:	cmp    eax,0x8
  43a0a8:	jb     43a17d <strcmp@plt+0x369f5>
  43a0ae:	add    r15d,0xfffffffc
  43a0b2:	cmp    r15d,eax
  43a0b5:	jl     43a17d <strcmp@plt+0x369f5>
  43a0bb:	lea    rbx,[r14+0x4]
  43a0bf:	mov    QWORD PTR [rsp+0x28],rbx
  43a0c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a0ce:	xchg   ax,ax
  43a0d0:	mov    edi,DWORD PTR [rbx+0x4]
  43a0d3:	call   43ae90 <strcmp@plt+0x37708>
  43a0d8:	mov    rax,QWORD PTR [rsp+0x28]
  43a0dd:	mov    r12d,DWORD PTR [rax]
  43a0e0:	mov    edi,r12d
  43a0e3:	call   43ae90 <strcmp@plt+0x37708>
  43a0e8:	test   rax,rax
  43a0eb:	jne    43a205 <strcmp@plt+0x36a7d>
  43a0f1:	mov    edi,DWORD PTR [rbx+0x4]
  43a0f4:	lea    rbp,[rsp+0x30]
  43a0f9:	mov    rsi,rbp
  43a0fc:	call   403730 <if_indextoname@plt>
  43a101:	xor    eax,eax
  43a103:	lea    rdi,[rsp+0x50]
  43a108:	lea    rsi,[rip+0xd8ed]        # 4479fc <strcmp@plt+0x44274>
  43a10f:	mov    rdx,rbp
  43a112:	call   4030b0 <sprintf@plt>
  43a117:	add    r13d,0x1
  43a11b:	movzx  eax,WORD PTR [rbx]
  43a11e:	add    eax,0x3
  43a121:	and    eax,0xfffffffc
  43a124:	movzx  ecx,WORD PTR [rbx+rax*1]
  43a128:	cmp    ecx,0x8
  43a12b:	jb     43a17d <strcmp@plt+0x369f5>
  43a12d:	add    rbx,rax
  43a130:	cmp    r15d,ecx
  43a133:	jge    43a0d0 <strcmp@plt+0x36948>
  43a135:	jmp    43a17d <strcmp@plt+0x369f5>
  43a137:	nop    WORD PTR [rax+rax*1+0x0]
  43a140:	mov    rax,QWORD PTR [rsp+0x20]
  43a145:	mov    al,BYTE PTR [rax]
  43a147:	cmp    al,0x81
  43a149:	je     43a16a <strcmp@plt+0x369e2>
  43a14b:	cmp    al,0x80
  43a14d:	jne    43a17d <strcmp@plt+0x369f5>
  43a14f:	lea    rsi,[r14+0x4]
  43a153:	mov    edx,0x2
  43a158:	jmp    43a173 <strcmp@plt+0x369eb>
  43a15a:	lea    rsi,[r14+0x4]
  43a15e:	mov    edx,0xa
  43a163:	mov    rdi,QWORD PTR [rsp+0x10]
  43a168:	jmp    43a178 <strcmp@plt+0x369f0>
  43a16a:	lea    rsi,[r14+0x4]
  43a16e:	mov    edx,0xa
  43a173:	mov    rdi,QWORD PTR [rsp+0x8]
  43a178:	call   423b50 <strcmp@plt+0x203c8>
  43a17d:	movzx  eax,WORD PTR [r14]
  43a181:	add    eax,0x3
  43a184:	and    eax,0xfffffffc
  43a187:	mov    ebp,DWORD PTR [rsp+0x1c]
  43a18b:	sub    ebp,eax
  43a18d:	add    r14,rax
  43a190:	cmp    ebp,0x3
  43a193:	jg     43a040 <strcmp@plt+0x368b8>
  43a199:	test   r13d,r13d
  43a19c:	mov    r14d,0x0
  43a1a2:	je     43a1e1 <strcmp@plt+0x36a59>
  43a1a4:	mov    rdi,QWORD PTR [rsp+0x8]
  43a1a9:	call   423130 <strcmp@plt+0x1f9a8>
  43a1ae:	mov    rbx,rax
  43a1b1:	mov    rdi,QWORD PTR [rsp+0x10]
  43a1b6:	call   423130 <strcmp@plt+0x1f9a8>
  43a1bb:	mov    rcx,rax
  43a1be:	lea    rsi,[rip+0x1441e]        # 44e5e3 <strcmp@plt+0x4ae5b>
  43a1c5:	lea    r8,[rsp+0x50]
  43a1ca:	mov    edi,0x4
  43a1cf:	xor    eax,eax
  43a1d1:	mov    rdx,rbx
  43a1d4:	call   42e800 <strcmp@plt+0x2b078>
  43a1d9:	mov    r14d,0x1
  43a1df:	jmp    43a22e <strcmp@plt+0x36aa6>
  43a1e1:	lea    rax,[rip+0x2abc8]        # 464db0 <strcmp@plt+0x61628>
  43a1e8:	cmp    DWORD PTR [rax],0x0
  43a1eb:	jle    43a22e <strcmp@plt+0x36aa6>
  43a1ed:	lea    rsi,[rip+0x14394]        # 44e588 <strcmp@plt+0x4ae00>
  43a1f4:	xor    r14d,r14d
  43a1f7:	mov    edi,0x5
  43a1fc:	xor    eax,eax
  43a1fe:	call   42e800 <strcmp@plt+0x2b078>
  43a203:	jmp    43a22e <strcmp@plt+0x36aa6>
  43a205:	lea    rbp,[rsp+0x30]
  43a20a:	mov    edi,r12d
  43a20d:	mov    rsi,rbp
  43a210:	call   403730 <if_indextoname@plt>
  43a215:	lea    rsi,[rip+0x142f2]        # 44e50e <strcmp@plt+0x4ad86>
  43a21c:	xor    r14d,r14d
  43a21f:	mov    edi,0x4
  43a224:	xor    eax,eax
  43a226:	mov    rdx,rbp
  43a229:	call   42e800 <strcmp@plt+0x2b078>
  43a22e:	mov    eax,r14d
  43a231:	add    rsp,0x458
  43a238:	pop    rbx
  43a239:	pop    r12
  43a23b:	pop    r13
  43a23d:	pop    r14
  43a23f:	pop    r15
  43a241:	pop    rbp
  43a242:	ret    
  43a243:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a24d:	nop    DWORD PTR [rax]
  43a250:	push   rbp
  43a251:	mov    rbp,rsp
  43a254:	push   r15
  43a256:	push   r14
  43a258:	push   r13
  43a25a:	push   r12
  43a25c:	push   rbx
  43a25d:	and    rsp,0xffffffffffffffe0
  43a261:	sub    rsp,0xa0
  43a268:	vxorps xmm0,xmm0,xmm0
  43a26c:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  43a272:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  43a278:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  43a27e:	cmp    BYTE PTR [rdi+0x4],0xfe
  43a282:	jne    43a3ed <strcmp@plt+0x36c65>
  43a288:	mov    r14,rdi
  43a28b:	movzx  edx,BYTE PTR [rdi]
  43a28e:	mov    eax,edx
  43a290:	or     al,0x8
  43a292:	cmp    al,0xa
  43a294:	jne    43a3cb <strcmp@plt+0x36c43>
  43a29a:	mov    ebx,esi
  43a29c:	mov    DWORD PTR [rsp+0x14],0xffffffff
  43a2a4:	cmp    esi,0x4
  43a2a7:	jl     43a3a9 <strcmp@plt+0x36c21>
  43a2ad:	mov    al,BYTE PTR [r14+0x1]
  43a2b1:	mov    BYTE PTR [rsp+0x13],al
  43a2b5:	mov    al,BYTE PTR [r14+0x2]
  43a2b9:	mov    BYTE PTR [rsp+0x12],al
  43a2bd:	lea    r12,[r14+0xc]
  43a2c1:	mov    DWORD PTR [rsp+0x14],0xffffffff
  43a2c9:	lea    r13,[rip+0x14040]        # 44e310 <strcmp@plt+0x4ab88>
  43a2d0:	mov    QWORD PTR [rsp+0x18],r14
  43a2d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a2df:	nop
  43a2e0:	movzx  eax,WORD PTR [r12]
  43a2e5:	cmp    eax,0x4
  43a2e8:	jb     43a3a9 <strcmp@plt+0x36c21>
  43a2ee:	cmp    ebx,eax
  43a2f0:	jl     43a3a9 <strcmp@plt+0x36c21>
  43a2f6:	movzx  eax,WORD PTR [r12+0x2]
  43a2fc:	add    eax,0xffffffff
  43a2ff:	movzx  ecx,ax
  43a302:	cmp    ecx,0x4
  43a305:	ja     43a390 <strcmp@plt+0x36c08>
  43a30b:	movzx  eax,ax
  43a30e:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  43a313:	add    rax,r13
  43a316:	jmp    rax
  43a318:	lea    rsi,[r12+0x4]
  43a31d:	movzx  edx,BYTE PTR [r14]
  43a321:	mov    r14,r13
  43a324:	lea    r15,[rsp+0x20]
  43a329:	mov    rdi,r15
  43a32c:	vzeroupper 
  43a32f:	call   423b50 <strcmp@plt+0x203c8>
  43a334:	movzx  esi,BYTE PTR [rsp+0x13]
  43a339:	mov    rdi,r15
  43a33c:	mov    r14,QWORD PTR [rsp+0x18]
  43a341:	jmp    43a364 <strcmp@plt+0x36bdc>
  43a343:	lea    rsi,[r12+0x4]
  43a348:	movzx  edx,BYTE PTR [r14]
  43a34c:	lea    r15,[rsp+0x40]
  43a351:	mov    rdi,r15
  43a354:	vzeroupper 
  43a357:	call   423b50 <strcmp@plt+0x203c8>
  43a35c:	movzx  esi,BYTE PTR [rsp+0x12]
  43a361:	mov    rdi,r15
  43a364:	call   423480 <strcmp@plt+0x1fcf8>
  43a369:	jmp    43a390 <strcmp@plt+0x36c08>
  43a36b:	mov    eax,DWORD PTR [r12+0x4]
  43a370:	mov    DWORD PTR [rsp+0x14],eax
  43a374:	jmp    43a390 <strcmp@plt+0x36c08>
  43a376:	lea    rsi,[r12+0x4]
  43a37b:	movzx  edx,BYTE PTR [r14]
  43a37f:	lea    rdi,[rsp+0x60]
  43a384:	vzeroupper 
  43a387:	call   423b50 <strcmp@plt+0x203c8>
  43a38c:	nop    DWORD PTR [rax+0x0]
  43a390:	movzx  eax,WORD PTR [r12]
  43a395:	add    eax,0x3
  43a398:	and    eax,0xfffffffc
  43a39b:	sub    ebx,eax
  43a39d:	add    r12,rax
  43a3a0:	cmp    ebx,0x3
  43a3a3:	jg     43a2e0 <strcmp@plt+0x36b58>
  43a3a9:	lea    rdx,[rsp+0x40]
  43a3ae:	lea    rcx,[rsp+0x20]
  43a3b3:	lea    r8,[rsp+0x60]
  43a3b8:	mov    edi,0x0
  43a3bd:	mov    esi,DWORD PTR [rsp+0x14]
  43a3c1:	vzeroupper 
  43a3c4:	call   438730 <strcmp@plt+0x34fa8>
  43a3c9:	jmp    43a3ed <strcmp@plt+0x36c65>
  43a3cb:	lea    rax,[rip+0x2a9de]        # 464db0 <strcmp@plt+0x61628>
  43a3d2:	cmp    DWORD PTR [rax],0x3
  43a3d5:	jl     43a3ed <strcmp@plt+0x36c65>
  43a3d7:	lea    rsi,[rip+0x14244]        # 44e622 <strcmp@plt+0x4ae9a>
  43a3de:	mov    edi,0x7
  43a3e3:	xor    eax,eax
  43a3e5:	vzeroupper 
  43a3e8:	call   42e800 <strcmp@plt+0x2b078>
  43a3ed:	lea    rsp,[rbp-0x28]
  43a3f1:	pop    rbx
  43a3f2:	pop    r12
  43a3f4:	pop    r13
  43a3f6:	pop    r14
  43a3f8:	pop    r15
  43a3fa:	pop    rbp
  43a3fb:	vzeroupper 
  43a3fe:	ret    
  43a3ff:	nop
  43a400:	sub    rsp,0x48
  43a404:	vmovups ymm0,YMMWORD PTR [rip+0x13e74]        # 44e280 <strcmp@plt+0x4aaf8>
  43a40c:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  43a412:	vmovups YMMWORD PTR [rsp],ymm0
  43a417:	mov    al,BYTE PTR [rdi+0x4]
  43a41a:	cmp    al,0xfe
  43a41c:	je     43a429 <strcmp@plt+0x36ca1>
  43a41e:	cmp    al,0xfd
  43a420:	jne    43a43e <strcmp@plt+0x36cb6>
  43a422:	cmp    BYTE PTR [rdi],0x80
  43a425:	je     43a42e <strcmp@plt+0x36ca6>
  43a427:	jmp    43a43e <strcmp@plt+0x36cb6>
  43a429:	cmp    BYTE PTR [rdi],0x81
  43a42c:	jne    43a43e <strcmp@plt+0x36cb6>
  43a42e:	mov    rdx,rsp
  43a431:	lea    rcx,[rsp+0x20]
  43a436:	vzeroupper 
  43a439:	call   439ff0 <strcmp@plt+0x36868>
  43a43e:	add    rsp,0x48
  43a442:	vzeroupper 
  43a445:	ret    
  43a446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a450:	push   rbp
  43a451:	mov    rbp,rsp
  43a454:	push   r15
  43a456:	push   r14
  43a458:	push   r12
  43a45a:	push   rbx
  43a45b:	and    rsp,0xffffffffffffffe0
  43a45f:	sub    rsp,0x40
  43a463:	mov    r15,rsi
  43a466:	mov    r14,rdi
  43a469:	mov    edi,0x2
  43a46e:	mov    esi,0x2
  43a473:	xor    edx,edx
  43a475:	call   4030f0 <socket@plt>
  43a47a:	mov    ebx,eax
  43a47c:	vxorps xmm0,xmm0,xmm0
  43a480:	vmovaps YMMWORD PTR [rsp],ymm0
  43a485:	mov    QWORD PTR [rsp+0x20],0x0
  43a48e:	mov    WORD PTR [rsp+0x10],0x2
  43a495:	mov    r12,rsp
  43a498:	mov    edx,0xf
  43a49d:	mov    rdi,r12
  43a4a0:	mov    rsi,r14
  43a4a3:	vzeroupper 
  43a4a6:	call   403250 <strncpy@plt>
  43a4ab:	mov    esi,0x8927
  43a4b0:	xor    eax,eax
  43a4b2:	mov    edi,ebx
  43a4b4:	mov    rdx,r12
  43a4b7:	call   403580 <ioctl@plt>
  43a4bc:	mov    edi,ebx
  43a4be:	call   403760 <close@plt>
  43a4c3:	mov    eax,DWORD PTR [rsp+0x12]
  43a4c7:	mov    DWORD PTR [r15],eax
  43a4ca:	movzx  eax,WORD PTR [rsp+0x16]
  43a4cf:	mov    WORD PTR [r15+0x4],ax
  43a4d4:	lea    rsp,[rbp-0x20]
  43a4d8:	pop    rbx
  43a4d9:	pop    r12
  43a4db:	pop    r14
  43a4dd:	pop    r15
  43a4df:	pop    rbp
  43a4e0:	ret    
  43a4e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a4eb:	nop    DWORD PTR [rax+rax*1+0x0]
  43a4f0:	push   rbp
  43a4f1:	push   r15
  43a4f3:	push   r14
  43a4f5:	push   r13
  43a4f7:	push   r12
  43a4f9:	push   rbx
  43a4fa:	sub    rsp,0x2048
  43a501:	mov    r12,rdi
  43a504:	vmovups ymm0,YMMWORD PTR [rip+0x13d74]        # 44e280 <strcmp@plt+0x4aaf8>
  43a50c:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  43a512:	mov    QWORD PTR [rsp+0x10],0x0
  43a51b:	mov    WORD PTR [rsp+0x10],0x10
  43a522:	vzeroupper 
  43a525:	call   423200 <strcmp@plt+0x1fa78>
  43a52a:	movzx  ebx,ax
  43a52d:	cmp    ebx,0x2
  43a530:	mov    eax,0x40
  43a535:	mov    ecx,0x400
  43a53a:	cmove  ecx,eax
  43a53d:	mov    DWORD PTR [rsp+0x18],ecx
  43a541:	mov    edi,0x10
  43a546:	mov    esi,0x3
  43a54b:	xor    edx,edx
  43a54d:	call   4030f0 <socket@plt>
  43a552:	test   eax,eax
  43a554:	js     43a726 <strcmp@plt+0x36f9e>
  43a55a:	mov    ebp,eax
  43a55c:	cmp    ebx,0x2
  43a55f:	setne  bl
  43a562:	shl    bl,0x3
  43a565:	or     bl,0x2
  43a568:	lea    rsi,[rsp+0x10]
  43a56d:	mov    edx,0xc
  43a572:	mov    edi,eax
  43a574:	call   403090 <bind@plt>
  43a579:	lea    r14,[rsp+0x40]
  43a57e:	xor    esi,esi
  43a580:	mov    edx,0x1000
  43a585:	mov    rdi,r14
  43a588:	call   403260 <memset@plt>
  43a58d:	movabs rax,0x301001a0000001c
  43a597:	mov    QWORD PTR [rsp+0x40],rax
  43a59c:	mov    BYTE PTR [rsp+0x50],bl
  43a5a0:	mov    WORD PTR [rsp+0x55],0x4
  43a5a7:	mov    BYTE PTR [rsp+0x57],0x1
  43a5ac:	mov    DWORD PTR [rsp+0x51],0xfe000000
  43a5b4:	mov    edx,0x1c
  43a5b9:	xor    ecx,ecx
  43a5bb:	mov    edi,ebp
  43a5bd:	mov    rsi,r14
  43a5c0:	call   403230 <send@plt>
  43a5c5:	test   eax,eax
  43a5c7:	js     43a740 <strcmp@plt+0x36fb8>
  43a5cd:	lea    rsi,[rsp+0x1040]
  43a5d5:	mov    edx,0x1000
  43a5da:	mov    ecx,0x40
  43a5df:	mov    DWORD PTR [rsp+0xc],ebp
  43a5e3:	mov    edi,ebp
  43a5e5:	call   403160 <recv@plt>
  43a5ea:	mov    rbx,rax
  43a5ed:	test   ebx,ebx
  43a5ef:	jle    43a706 <strcmp@plt+0x36f7e>
  43a5f5:	lea    r13,[rsp+0x20]
  43a5fa:	cmp    ebx,0x10
  43a5fd:	jb     43a6e0 <strcmp@plt+0x36f58>
  43a603:	lea    rbp,[rsp+0x1040]
  43a60b:	nop    DWORD PTR [rax+rax*1+0x0]
  43a610:	mov    eax,DWORD PTR [rbp+0x0]
  43a613:	cmp    eax,0x10
  43a616:	jb     43a6e0 <strcmp@plt+0x36f58>
  43a61c:	cmp    eax,ebx
  43a61e:	ja     43a6e0 <strcmp@plt+0x36f58>
  43a624:	movzx  ecx,WORD PTR [rbp+0x4]
  43a628:	cmp    ecx,0x18
  43a62b:	jne    43a6ca <strcmp@plt+0x36f42>
  43a631:	lea    r14d,[rax-0x1c]
  43a635:	cmp    r14d,0x4
  43a639:	jl     43a6ca <strcmp@plt+0x36f42>
  43a63f:	lea    r15,[rbp+0x1c]
  43a643:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a64d:	nop    DWORD PTR [rax]
  43a650:	movzx  eax,WORD PTR [r15]
  43a654:	cmp    eax,0x4
  43a657:	jb     43a6c7 <strcmp@plt+0x36f3f>
  43a659:	cmp    r14d,eax
  43a65c:	jl     43a6c7 <strcmp@plt+0x36f3f>
  43a65e:	movzx  ecx,WORD PTR [r15+0x2]
  43a663:	cmp    ecx,0x1
  43a666:	jne    43a6b5 <strcmp@plt+0x36f2d>
  43a668:	movzx  edx,BYTE PTR [rsp+0x50]
  43a66d:	cmp    edx,0xa
  43a670:	je     43a67f <strcmp@plt+0x36ef7>
  43a672:	cmp    dl,0x2
  43a675:	jne    43a685 <strcmp@plt+0x36efd>
  43a677:	cmp    BYTE PTR [rbp+0x11],0x20
  43a67b:	jne    43a685 <strcmp@plt+0x36efd>
  43a67d:	jmp    43a6b5 <strcmp@plt+0x36f2d>
  43a67f:	cmp    BYTE PTR [rbp+0x11],0x80
  43a683:	je     43a6b5 <strcmp@plt+0x36f2d>
  43a685:	lea    rsi,[r15+0x4]
  43a689:	mov    rdi,r13
  43a68c:	call   423b50 <strcmp@plt+0x203c8>
  43a691:	movzx  esi,BYTE PTR [rbp+0x11]
  43a695:	mov    rdi,r13
  43a698:	call   423480 <strcmp@plt+0x1fcf8>
  43a69d:	mov    rdi,r12
  43a6a0:	mov    rsi,r13
  43a6a3:	call   434070 <strcmp@plt+0x308e8>
  43a6a8:	cmp    eax,0x1
  43a6ab:	je     43a75f <strcmp@plt+0x36fd7>
  43a6b1:	movzx  eax,WORD PTR [r15]
  43a6b5:	add    eax,0x3
  43a6b8:	and    eax,0xfffffffc
  43a6bb:	sub    r14d,eax
  43a6be:	add    r15,rax
  43a6c1:	cmp    r14d,0x3
  43a6c5:	jg     43a650 <strcmp@plt+0x36ec8>
  43a6c7:	mov    eax,DWORD PTR [rbp+0x0]
  43a6ca:	add    eax,0x3
  43a6cd:	and    eax,0xfffffffc
  43a6d0:	sub    ebx,eax
  43a6d2:	add    rbp,rax
  43a6d5:	cmp    ebx,0xf
  43a6d8:	ja     43a610 <strcmp@plt+0x36e88>
  43a6de:	xchg   ax,ax
  43a6e0:	mov    edx,0x1000
  43a6e5:	mov    ecx,0x40
  43a6ea:	mov    edi,DWORD PTR [rsp+0xc]
  43a6ee:	lea    rsi,[rsp+0x1040]
  43a6f6:	call   403160 <recv@plt>
  43a6fb:	mov    rbx,rax
  43a6fe:	test   ebx,ebx
  43a700:	jg     43a5fa <strcmp@plt+0x36e72>
  43a706:	mov    edi,DWORD PTR [rsp+0xc]
  43a70a:	call   403760 <close@plt>
  43a70f:	lea    rax,[rip+0x2a69a]        # 464db0 <strcmp@plt+0x61628>
  43a716:	cmp    DWORD PTR [rax],0x3
  43a719:	jge    43a7b1 <strcmp@plt+0x37029>
  43a71f:	xor    ebx,ebx
  43a721:	jmp    43a7d4 <strcmp@plt+0x3704c>
  43a726:	lea    rsi,[rip+0x13f42]        # 44e66f <strcmp@plt+0x4aee7>
  43a72d:	xor    ebx,ebx
  43a72f:	mov    edi,0x2
  43a734:	xor    eax,eax
  43a736:	call   42e800 <strcmp@plt+0x2b078>
  43a73b:	jmp    43a7d4 <strcmp@plt+0x3704c>
  43a740:	call   403040 <__errno_location@plt>
  43a745:	mov    edi,DWORD PTR [rax]
  43a747:	call   403170 <strerror@plt>
  43a74c:	mov    rcx,rax
  43a74f:	lea    rsi,[rip+0x13f5e]        # 44e6b4 <strcmp@plt+0x4af2c>
  43a756:	xor    ebx,ebx
  43a758:	mov    edi,0x1
  43a75d:	jmp    43a7ca <strcmp@plt+0x37042>
  43a75f:	mov    edi,DWORD PTR [rsp+0xc]
  43a763:	call   403760 <close@plt>
  43a768:	lea    rax,[rip+0x2a641]        # 464db0 <strcmp@plt+0x61628>
  43a76f:	cmp    DWORD PTR [rax],0x3
  43a772:	jl     43a7a2 <strcmp@plt+0x3701a>
  43a774:	mov    rdi,r12
  43a777:	call   423130 <strcmp@plt+0x1f9a8>
  43a77c:	mov    rbx,rax
  43a77f:	lea    rdi,[rsp+0x20]
  43a784:	call   423130 <strcmp@plt+0x1f9a8>
  43a789:	mov    rcx,rax
  43a78c:	lea    rsi,[rip+0x13f9f]        # 44e732 <strcmp@plt+0x4afaa>
  43a793:	mov    edi,0x7
  43a798:	xor    eax,eax
  43a79a:	mov    rdx,rbx
  43a79d:	call   42e800 <strcmp@plt+0x2b078>
  43a7a2:	lea    rdi,[rsp+0x20]
  43a7a7:	call   423740 <strcmp@plt+0x1ffb8>
  43a7ac:	mov    rbx,rax
  43a7af:	jmp    43a7d4 <strcmp@plt+0x3704c>
  43a7b1:	mov    rdi,r12
  43a7b4:	call   423130 <strcmp@plt+0x1f9a8>
  43a7b9:	mov    rcx,rax
  43a7bc:	lea    rsi,[rip+0x13f31]        # 44e6f4 <strcmp@plt+0x4af6c>
  43a7c3:	xor    ebx,ebx
  43a7c5:	mov    edi,0x7
  43a7ca:	xor    eax,eax
  43a7cc:	mov    rdx,rcx
  43a7cf:	call   42e800 <strcmp@plt+0x2b078>
  43a7d4:	mov    rax,rbx
  43a7d7:	add    rsp,0x2048
  43a7de:	pop    rbx
  43a7df:	pop    r12
  43a7e1:	pop    r13
  43a7e3:	pop    r14
  43a7e5:	pop    r15
  43a7e7:	pop    rbp
  43a7e8:	ret    
  43a7e9:	nop    DWORD PTR [rax+0x0]
  43a7f0:	push   rax
  43a7f1:	lea    rdi,[rip+0x38]        # 43a830 <strcmp@plt+0x370a8>
  43a7f8:	call   42bc00 <strcmp@plt+0x28478>
  43a7fd:	lea    rcx,[rip+0x3530c]        # 46fb10 <strcmp@plt+0x6c388>
  43a804:	mov    QWORD PTR [rcx],rax
  43a807:	lea    rax,[rip+0x352fa]        # 46fb08 <strcmp@plt+0x6c380>
  43a80e:	mov    rcx,QWORD PTR [rax]
  43a811:	xor    eax,eax
  43a813:	call   QWORD PTR [rcx+0x58]
  43a816:	lea    rcx,[rip+0x352fb]        # 46fb18 <strcmp@plt+0x6c390>
  43a81d:	mov    QWORD PTR [rcx],rax
  43a820:	xor    ecx,ecx
  43a822:	test   rax,rax
  43a825:	setne  cl
  43a828:	mov    eax,ecx
  43a82a:	pop    rcx
  43a82b:	ret    
  43a82c:	nop    DWORD PTR [rax+0x0]
  43a830:	push   rbx
  43a831:	mov    rbx,rdi
  43a834:	mov    edi,DWORD PTR [rdi+0x30]
  43a837:	cmp    edi,0xffffffff
  43a83a:	je     43a841 <strcmp@plt+0x370b9>
  43a83c:	call   403760 <close@plt>
  43a841:	mov    edi,DWORD PTR [rbx+0x34]
  43a844:	cmp    edi,0xffffffff
  43a847:	je     43a84e <strcmp@plt+0x370c6>
  43a849:	call   403760 <close@plt>
  43a84e:	mov    rdi,QWORD PTR [rbx]
  43a851:	call   403780 <free@plt>
  43a856:	mov    rdi,QWORD PTR [rbx+0x10]
  43a85a:	call   422fa0 <strcmp@plt+0x1f818>
  43a85f:	mov    rdi,QWORD PTR [rbx+0x18]
  43a863:	call   422fa0 <strcmp@plt+0x1f818>
  43a868:	mov    rdi,QWORD PTR [rbx+0x20]
  43a86c:	call   422fa0 <strcmp@plt+0x1f818>
  43a871:	mov    rdi,QWORD PTR [rbx+0x28]
  43a875:	call   422fa0 <strcmp@plt+0x1f818>
  43a87a:	mov    rdi,rbx
  43a87d:	pop    rbx
  43a87e:	jmp    403780 <free@plt>
  43a883:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a88d:	nop    DWORD PTR [rax]
  43a890:	push   rax
  43a891:	lea    rax,[rip+0x35278]        # 46fb10 <strcmp@plt+0x6c388>
  43a898:	mov    rdi,QWORD PTR [rax]
  43a89b:	call   42c250 <strcmp@plt+0x28ac8>
  43a8a0:	lea    rax,[rip+0x35271]        # 46fb18 <strcmp@plt+0x6c390>
  43a8a7:	mov    rdi,QWORD PTR [rax]
  43a8aa:	pop    rax
  43a8ab:	jmp    436870 <strcmp@plt+0x330e8>
  43a8b0:	push   rbp
  43a8b1:	push   r15
  43a8b3:	push   r14
  43a8b5:	push   r12
  43a8b7:	push   rbx
  43a8b8:	mov    ebx,esi
  43a8ba:	mov    r14,rdi
  43a8bd:	xor    ebp,ebp
  43a8bf:	lea    rax,[rip+0x35c3a]        # 470500 <strcmp@plt+0x6cd78>
  43a8c6:	mov    eax,DWORD PTR [rax]
  43a8c8:	cmp    esi,0x2
  43a8cb:	jne    43a8d6 <strcmp@plt+0x3714e>
  43a8cd:	cmp    eax,0xa
  43a8d0:	je     43ab9e <strcmp@plt+0x37416>
  43a8d6:	cmp    ebx,0xa
  43a8d9:	jne    43a8e4 <strcmp@plt+0x3715c>
  43a8db:	cmp    eax,0x2
  43a8de:	je     43ab9e <strcmp@plt+0x37416>
  43a8e4:	cmp    ebx,0xa
  43a8e7:	je     43a8fe <strcmp@plt+0x37176>
  43a8e9:	cmp    ebx,0x2
  43a8ec:	jne    43a90c <strcmp@plt+0x37184>
  43a8ee:	lea    rax,[r14+0x20]
  43a8f2:	cmp    QWORD PTR [rax],0x0
  43a8f6:	jne    43a9f2 <strcmp@plt+0x3726a>
  43a8fc:	jmp    43a90c <strcmp@plt+0x37184>
  43a8fe:	lea    rax,[r14+0x28]
  43a902:	cmp    QWORD PTR [rax],0x0
  43a906:	jne    43a9f2 <strcmp@plt+0x3726a>
  43a90c:	lea    rax,[rip+0x351f5]        # 46fb08 <strcmp@plt+0x6c380>
  43a913:	mov    rax,QWORD PTR [rax]
  43a916:	mov    rdi,QWORD PTR [r14]
  43a919:	mov    esi,ebx
  43a91b:	call   QWORD PTR [rax+0x28]
  43a91e:	cmp    ebx,0xa
  43a921:	je     43a932 <strcmp@plt+0x371aa>
  43a923:	cmp    ebx,0x2
  43a926:	jne    43aa57 <strcmp@plt+0x372cf>
  43a92c:	lea    rcx,[r14+0x20]
  43a930:	jmp    43a936 <strcmp@plt+0x371ae>
  43a932:	lea    rcx,[r14+0x28]
  43a936:	mov    QWORD PTR [rcx],rax
  43a939:	test   rax,rax
  43a93c:	je     43a9bb <strcmp@plt+0x37233>
  43a93e:	cmp    DWORD PTR [rax+0x18],0x0
  43a942:	je     43a9bb <strcmp@plt+0x37233>
  43a944:	lea    rcx,[rip+0x2a465]        # 464db0 <strcmp@plt+0x61628>
  43a94b:	cmp    DWORD PTR [rcx],0x0
  43a94e:	jle    43a98c <strcmp@plt+0x37204>
  43a950:	cmp    ebx,0x2
  43a953:	lea    rcx,[rip+0x8fe9]        # 443943 <strcmp@plt+0x401bb>
  43a95a:	lea    rbp,[rip+0x8fe7]        # 443948 <strcmp@plt+0x401c0>
  43a961:	cmove  rbp,rcx
  43a965:	mov    r15,QWORD PTR [r14]
  43a968:	mov    rdi,rax
  43a96b:	call   423130 <strcmp@plt+0x1f9a8>
  43a970:	mov    r8,rax
  43a973:	lea    rsi,[rip+0x13e46]        # 44e7c0 <strcmp@plt+0x4b038>
  43a97a:	mov    edi,0x5
  43a97f:	xor    eax,eax
  43a981:	mov    rdx,rbp
  43a984:	mov    rcx,r15
  43a987:	call   42e800 <strcmp@plt+0x2b078>
  43a98c:	lea    rax,[rip+0x2da65]        # 4683f8 <strcmp@plt+0x64c70>
  43a993:	mov    rax,QWORD PTR [rax]
  43a996:	mov    rdi,r14
  43a999:	mov    esi,ebx
  43a99b:	call   QWORD PTR [rax+0x18]
  43a99e:	lea    rax,[rip+0x35bdb]        # 470580 <strcmp@plt+0x6cdf8>
  43a9a5:	mov    rdi,QWORD PTR [rax]
  43a9a8:	mov    rax,QWORD PTR [rdi+0x28]
  43a9ac:	mov    rsi,r14
  43a9af:	mov    edx,ebx
  43a9b1:	call   QWORD PTR [rax+0x18]
  43a9b4:	cmp    ebx,0xa
  43a9b7:	jne    43a9f7 <strcmp@plt+0x3726f>
  43a9b9:	jmp    43aa02 <strcmp@plt+0x3727a>
  43a9bb:	lea    rax,[rip+0x2a3ee]        # 464db0 <strcmp@plt+0x61628>
  43a9c2:	cmp    DWORD PTR [rax],0x0
  43a9c5:	jle    43a9f2 <strcmp@plt+0x3726a>
  43a9c7:	cmp    ebx,0x2
  43a9ca:	lea    rax,[rip+0x8f72]        # 443943 <strcmp@plt+0x401bb>
  43a9d1:	lea    rdx,[rip+0x8f70]        # 443948 <strcmp@plt+0x401c0>
  43a9d8:	cmove  rdx,rax
  43a9dc:	mov    rcx,QWORD PTR [r14]
  43a9df:	lea    rsi,[rip+0x13da4]        # 44e78a <strcmp@plt+0x4b002>
  43a9e6:	mov    edi,0x5
  43a9eb:	xor    eax,eax
  43a9ed:	call   42e800 <strcmp@plt+0x2b078>
  43a9f2:	cmp    ebx,0xa
  43a9f5:	je     43aa02 <strcmp@plt+0x3727a>
  43a9f7:	cmp    ebx,0x2
  43a9fa:	jne    43aa57 <strcmp@plt+0x372cf>
  43a9fc:	lea    rax,[r14+0x10]
  43aa00:	jmp    43aa06 <strcmp@plt+0x3727e>
  43aa02:	lea    rax,[r14+0x18]
  43aa06:	mov    ebp,0x1
  43aa0b:	cmp    QWORD PTR [rax],0x0
  43aa0f:	jne    43ab9e <strcmp@plt+0x37416>
  43aa15:	cmp    ebx,0xa
  43aa18:	je     43aa86 <strcmp@plt+0x372fe>
  43aa1a:	cmp    ebx,0x2
  43aa1d:	jne    43aa57 <strcmp@plt+0x372cf>
  43aa1f:	lea    r12,[r14+0x10]
  43aa23:	lea    rax,[rip+0x350de]        # 46fb08 <strcmp@plt+0x6c380>
  43aa2a:	mov    rax,QWORD PTR [rax]
  43aa2d:	mov    rdi,QWORD PTR [r14]
  43aa30:	mov    esi,0x2
  43aa35:	call   QWORD PTR [rax+0x18]
  43aa38:	mov    r15,rax
  43aa3b:	cmp    DWORD PTR [rax+0x18],0x0
  43aa3f:	je     43aaf2 <strcmp@plt+0x3736a>
  43aa45:	mov    rax,QWORD PTR [r15+0x8]
  43aa49:	mov    rdi,QWORD PTR [rax+0x10]
  43aa4d:	call   423740 <strcmp@plt+0x1ffb8>
  43aa52:	jmp    43ab1b <strcmp@plt+0x37393>
  43aa57:	lea    rax,[rip+0x2a352]        # 464db0 <strcmp@plt+0x61628>
  43aa5e:	mov    ebp,0xfffffffe
  43aa63:	cmp    DWORD PTR [rax],0x2
  43aa66:	jl     43ab9e <strcmp@plt+0x37416>
  43aa6c:	lea    rsi,[rip+0x13cfa]        # 44e76d <strcmp@plt+0x4afe5>
  43aa73:	mov    edi,0x6
  43aa78:	xor    eax,eax
  43aa7a:	mov    edx,ebx
  43aa7c:	call   42e800 <strcmp@plt+0x2b078>
  43aa81:	jmp    43ab9e <strcmp@plt+0x37416>
  43aa86:	lea    r12,[r14+0x18]
  43aa8a:	lea    rax,[rip+0x35077]        # 46fb08 <strcmp@plt+0x6c380>
  43aa91:	mov    rax,QWORD PTR [rax]
  43aa94:	mov    rdi,QWORD PTR [r14]
  43aa97:	lea    r15,[rip+0x35082]        # 46fb20 <strcmp@plt+0x6c398>
  43aa9e:	mov    esi,DWORD PTR [r15]
  43aaa1:	call   QWORD PTR [rax+0x30]
  43aaa4:	mov    QWORD PTR [r14+0x18],rax
  43aaa8:	test   rax,rax
  43aaab:	jne    43ab27 <strcmp@plt+0x3739f>
  43aaad:	lea    rax,[rip+0x2a2fc]        # 464db0 <strcmp@plt+0x61628>
  43aab4:	cmp    DWORD PTR [rax],0x0
  43aab7:	jle    43aae5 <strcmp@plt+0x3735d>
  43aab9:	mov    rdx,QWORD PTR [r14]
  43aabc:	cmp    DWORD PTR [r15],0x1
  43aac0:	lea    rax,[rip+0x13db0]        # 44e877 <strcmp@plt+0x4b0ef>
  43aac7:	lea    rcx,[rip+0x13db4]        # 44e882 <strcmp@plt+0x4b0fa>
  43aace:	cmove  rcx,rax
  43aad2:	lea    rsi,[rip+0x13d58]        # 44e831 <strcmp@plt+0x4b0a9>
  43aad9:	mov    edi,0x5
  43aade:	xor    eax,eax
  43aae0:	call   42e800 <strcmp@plt+0x2b078>
  43aae5:	xor    edi,edi
  43aae7:	call   422ef0 <strcmp@plt+0x1f768>
  43aaec:	mov    QWORD PTR [r12],rax
  43aaf0:	jmp    43ab27 <strcmp@plt+0x3739f>
  43aaf2:	lea    rax,[rip+0x2a2b7]        # 464db0 <strcmp@plt+0x61628>
  43aaf9:	cmp    DWORD PTR [rax],0x0
  43aafc:	jle    43ab14 <strcmp@plt+0x3738c>
  43aafe:	mov    rdx,QWORD PTR [r14]
  43ab01:	lea    rsi,[rip+0x13cef]        # 44e7f7 <strcmp@plt+0x4b06f>
  43ab08:	mov    edi,0x5
  43ab0d:	xor    eax,eax
  43ab0f:	call   42e800 <strcmp@plt+0x2b078>
  43ab14:	xor    edi,edi
  43ab16:	call   422ef0 <strcmp@plt+0x1f768>
  43ab1b:	mov    QWORD PTR [r12],rax
  43ab1f:	mov    rdi,r15
  43ab22:	call   42c250 <strcmp@plt+0x28ac8>
  43ab27:	mov    rdi,QWORD PTR [r12]
  43ab2b:	cmp    DWORD PTR [rdi+0x18],0x0
  43ab2f:	je     43ab9e <strcmp@plt+0x37416>
  43ab31:	lea    rax,[rip+0x2a278]        # 464db0 <strcmp@plt+0x61628>
  43ab38:	cmp    DWORD PTR [rax],0x0
  43ab3b:	jle    43ab76 <strcmp@plt+0x373ee>
  43ab3d:	cmp    ebx,0x2
  43ab40:	lea    rax,[rip+0x8dfc]        # 443943 <strcmp@plt+0x401bb>
  43ab47:	lea    r15,[rip+0x8dfa]        # 443948 <strcmp@plt+0x401c0>
  43ab4e:	cmove  r15,rax
  43ab52:	mov    r12,QWORD PTR [r14]
  43ab55:	call   423130 <strcmp@plt+0x1f9a8>
  43ab5a:	mov    r8,rax
  43ab5d:	lea    rsi,[rip+0x13d25]        # 44e889 <strcmp@plt+0x4b101>
  43ab64:	mov    edi,0x5
  43ab69:	xor    eax,eax
  43ab6b:	mov    rdx,r15
  43ab6e:	mov    rcx,r12
  43ab71:	call   42e800 <strcmp@plt+0x2b078>
  43ab76:	lea    rax,[rip+0x2d87b]        # 4683f8 <strcmp@plt+0x64c70>
  43ab7d:	mov    rax,QWORD PTR [rax]
  43ab80:	mov    rdi,r14
  43ab83:	mov    esi,ebx
  43ab85:	call   QWORD PTR [rax+0x10]
  43ab88:	lea    rax,[rip+0x359f1]        # 470580 <strcmp@plt+0x6cdf8>
  43ab8f:	mov    rdi,QWORD PTR [rax]
  43ab92:	mov    rax,QWORD PTR [rdi+0x28]
  43ab96:	mov    rsi,r14
  43ab99:	mov    edx,ebx
  43ab9b:	call   QWORD PTR [rax+0x10]
  43ab9e:	mov    eax,ebp
  43aba0:	pop    rbx
  43aba1:	pop    r12
  43aba3:	pop    r14
  43aba5:	pop    r15
  43aba7:	pop    rbp
  43aba8:	ret    
  43aba9:	nop    DWORD PTR [rax+0x0]
  43abb0:	cmp    esi,0xa
  43abb3:	je     43abc2 <strcmp@plt+0x3743a>
  43abb5:	cmp    esi,0x2
  43abb8:	jne    43abca <strcmp@plt+0x37442>
  43abba:	add    rdi,0x20
  43abbe:	mov    rax,QWORD PTR [rdi]
  43abc1:	ret    
  43abc2:	add    rdi,0x28
  43abc6:	mov    rax,QWORD PTR [rdi]
  43abc9:	ret    
  43abca:	xor    eax,eax
  43abcc:	ret    
  43abcd:	nop    DWORD PTR [rax]
  43abd0:	cmp    esi,0xa
  43abd3:	je     43abe2 <strcmp@plt+0x3745a>
  43abd5:	cmp    esi,0x2
  43abd8:	jne    43abea <strcmp@plt+0x37462>
  43abda:	add    rdi,0x10
  43abde:	mov    rax,QWORD PTR [rdi]
  43abe1:	ret    
  43abe2:	add    rdi,0x18
  43abe6:	mov    rax,QWORD PTR [rdi]
  43abe9:	ret    
  43abea:	xor    eax,eax
  43abec:	ret    
  43abed:	nop    DWORD PTR [rax]
  43abf0:	movsxd rax,DWORD PTR [rip+0x358fd]        # 4704f4 <strcmp@plt+0x6cd6c>
  43abf7:	test   rdi,rdi
  43abfa:	je     43ad01 <strcmp@plt+0x37579>
  43ac00:	push   rbp
  43ac01:	push   r15
  43ac03:	push   r14
  43ac05:	push   r13
  43ac07:	push   r12
  43ac09:	push   rbx
  43ac0a:	sub    rsp,0x18
  43ac0e:	mov    rbx,rdi
  43ac11:	add    eax,0x1
  43ac14:	cdqe   
  43ac16:	imul   rcx,rax,0x66666667
  43ac1d:	mov    rdx,rcx
  43ac20:	shr    rdx,0x3f
  43ac24:	sar    rcx,0x21
  43ac28:	add    ecx,edx
  43ac2a:	lea    ecx,[rcx+rcx*4]
  43ac2d:	sub    eax,ecx
  43ac2f:	mov    DWORD PTR [rip+0x358bf],eax        # 4704f4 <strcmp@plt+0x6cd6c>
  43ac35:	cdqe   
  43ac37:	imul   r14,rax,0x1f4
  43ac3e:	lea    rax,[rip+0x34eeb]        # 46fb30 <strcmp@plt+0x6c3a8>
  43ac45:	add    r14,rax
  43ac48:	cmp    BYTE PTR [rdi+0xc],0x0
  43ac4c:	lea    rax,[rip+0xfb70]        # 44a7c3 <strcmp@plt+0x4703b>
  43ac53:	lea    r15,[rip+0xfb66]        # 44a7c0 <strcmp@plt+0x47038>
  43ac5a:	cmove  r15,rax
  43ac5e:	mov    rax,QWORD PTR [rdi]
  43ac61:	mov    QWORD PTR [rsp+0x10],rax
  43ac66:	mov    rdi,QWORD PTR [rdi+0x10]
  43ac6a:	call   423130 <strcmp@plt+0x1f9a8>
  43ac6f:	mov    r13,rax
  43ac72:	mov    rdi,QWORD PTR [rbx+0x20]
  43ac76:	call   423130 <strcmp@plt+0x1f9a8>
  43ac7b:	mov    QWORD PTR [rsp+0x8],rax
  43ac80:	mov    eax,DWORD PTR [rbx+0x30]
  43ac83:	mov    QWORD PTR [rsp],rax
  43ac87:	mov    rdi,QWORD PTR [rbx+0x18]
  43ac8b:	call   423130 <strcmp@plt+0x1f9a8>
  43ac90:	mov    r12,rax
  43ac93:	mov    rdi,QWORD PTR [rbx+0x28]
  43ac97:	call   423130 <strcmp@plt+0x1f9a8>
  43ac9c:	mov    rbp,rax
  43ac9f:	mov    ebx,DWORD PTR [rbx+0x34]
  43aca2:	sub    rsp,0x8
  43aca6:	lea    rdx,[rip+0x13c16]        # 44e8c3 <strcmp@plt+0x4b13b>
  43acad:	mov    esi,0x1f4
  43acb2:	mov    eax,0x0
  43acb7:	mov    rdi,r14
  43acba:	mov    r8,r15
  43acbd:	mov    rcx,QWORD PTR [rsp+0x18]
  43acc2:	mov    r9,r13
  43acc5:	push   rbx
  43acc6:	push   rbp
  43acc7:	push   r12
  43acc9:	push   QWORD PTR [rsp+0x20]
  43accd:	push   QWORD PTR [rsp+0x30]
  43acd1:	call   403620 <snprintf@plt>
  43acd6:	add    rsp,0x30
  43acda:	movsxd rax,DWORD PTR [rip+0x35813]        # 4704f4 <strcmp@plt+0x6cd6c>
  43ace1:	imul   rax,rax,0x1f4
  43ace8:	lea    rcx,[rip+0x34e41]        # 46fb30 <strcmp@plt+0x6c3a8>
  43acef:	add    rax,rcx
  43acf2:	add    rsp,0x18
  43acf6:	pop    rbx
  43acf7:	pop    r12
  43acf9:	pop    r13
  43acfb:	pop    r14
  43acfd:	pop    r15
  43acff:	pop    rbp
  43ad00:	ret    
  43ad01:	imul   rcx,rax,0x1f4
  43ad08:	lea    rdx,[rip+0x34e21]        # 46fb30 <strcmp@plt+0x6c3a8>
  43ad0f:	lea    rax,[rdx+rcx*1]
  43ad13:	mov    BYTE PTR [rcx+rdx*1+0x6],0x0
  43ad18:	mov    WORD PTR [rcx+rdx*1+0x4],0x5f4c
  43ad1f:	mov    DWORD PTR [rcx+rdx*1],0x4c554e5f
  43ad26:	ret    
  43ad27:	nop    WORD PTR [rax+rax*1+0x0]
  43ad30:	push   r15
  43ad32:	push   r14
  43ad34:	push   rbx
  43ad35:	mov    r14,rdi
  43ad38:	lea    r15,[rip+0x34dc9]        # 46fb08 <strcmp@plt+0x6c380>
  43ad3f:	mov    rax,QWORD PTR [r15]
  43ad42:	call   QWORD PTR [rax+0x40]
  43ad45:	test   eax,eax
  43ad47:	je     43adf9 <strcmp@plt+0x37671>
  43ad4d:	mov    edi,0x38
  43ad52:	call   432070 <strcmp@plt+0x2e8e8>
  43ad57:	mov    rbx,rax
  43ad5a:	mov    rdi,r14
  43ad5d:	call   403700 <strdup@plt>
  43ad62:	mov    QWORD PTR [rbx],rax
  43ad65:	mov    rax,QWORD PTR [r15]
  43ad68:	mov    rdi,r14
  43ad6b:	call   QWORD PTR [rax+0x40]
  43ad6e:	mov    DWORD PTR [rbx+0x8],eax
  43ad71:	vxorps xmm0,xmm0,xmm0
  43ad75:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  43ad7a:	movabs rax,0xfffffff7fffffff7
  43ad84:	mov    QWORD PTR [rbx+0x30],rax
  43ad88:	mov    rax,QWORD PTR [r15]
  43ad8b:	mov    rdi,r14
  43ad8e:	call   QWORD PTR [rax+0x38]
  43ad91:	cmp    al,0x1
  43ad93:	sete   BYTE PTR [rbx+0xc]
  43ad97:	lea    r15,[rip+0x2a012]        # 464db0 <strcmp@plt+0x61628>
  43ad9e:	cmp    DWORD PTR [r15],0x0
  43ada2:	jle    43adbd <strcmp@plt+0x37635>
  43ada4:	mov    ecx,DWORD PTR [rbx+0x8]
  43ada7:	lea    rsi,[rip+0x13bc4]        # 44e972 <strcmp@plt+0x4b1ea>
  43adae:	mov    edi,0x5
  43adb3:	xor    eax,eax
  43adb5:	mov    rdx,r14
  43adb8:	call   42e800 <strcmp@plt+0x2b078>
  43adbd:	vxorps xmm0,xmm0,xmm0
  43adc1:	vmovups XMMWORD PTR [rbx+0x20],xmm0
  43adc6:	lea    rax,[rip+0x34d43]        # 46fb10 <strcmp@plt+0x6c388>
  43adcd:	mov    rsi,QWORD PTR [rax]
  43add0:	mov    rdi,rbx
  43add3:	call   42bcf0 <strcmp@plt+0x28568>
  43add8:	cmp    DWORD PTR [r15],0x2
  43addc:	jl     43ae11 <strcmp@plt+0x37689>
  43adde:	mov    ecx,DWORD PTR [rbx+0x8]
  43ade1:	lea    rsi,[rip+0x13bba]        # 44e9a2 <strcmp@plt+0x4b21a>
  43ade8:	mov    edi,0x6
  43aded:	xor    eax,eax
  43adef:	mov    rdx,r14
  43adf2:	call   42e800 <strcmp@plt+0x2b078>
  43adf7:	jmp    43ae11 <strcmp@plt+0x37689>
  43adf9:	lea    rsi,[rip+0x13b22]        # 44e922 <strcmp@plt+0x4b19a>
  43ae00:	xor    ebx,ebx
  43ae02:	mov    edi,0x2
  43ae07:	xor    eax,eax
  43ae09:	mov    rdx,r14
  43ae0c:	call   42e800 <strcmp@plt+0x2b078>
  43ae11:	mov    rax,rbx
  43ae14:	pop    rbx
  43ae15:	pop    r14
  43ae17:	pop    r15
  43ae19:	ret    
  43ae1a:	nop    WORD PTR [rax+rax*1+0x0]
  43ae20:	push   r15
  43ae22:	push   r14
  43ae24:	push   r13
  43ae26:	push   r12
  43ae28:	push   rbx
  43ae29:	lea    rax,[rip+0x34ce0]        # 46fb10 <strcmp@plt+0x6c388>
  43ae30:	mov    r12,QWORD PTR [rax]
  43ae33:	mov    rbx,QWORD PTR [r12+0x8]
  43ae38:	cmp    rbx,r12
  43ae3b:	je     43ae6f <strcmp@plt+0x376e7>
  43ae3d:	mov    r15,rdi
  43ae40:	xor    r14d,r14d
  43ae43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ae4d:	nop    DWORD PTR [rax]
  43ae50:	mov    r13,QWORD PTR [rbx+0x10]
  43ae54:	mov    rdi,QWORD PTR [r13+0x0]
  43ae58:	mov    rsi,r15
  43ae5b:	call   403788 <strcmp@plt>
  43ae60:	test   eax,eax
  43ae62:	je     43ae74 <strcmp@plt+0x376ec>
  43ae64:	mov    rbx,QWORD PTR [rbx+0x8]
  43ae68:	cmp    rbx,r12
  43ae6b:	jne    43ae50 <strcmp@plt+0x376c8>
  43ae6d:	jmp    43ae77 <strcmp@plt+0x376ef>
  43ae6f:	xor    r14d,r14d
  43ae72:	jmp    43ae77 <strcmp@plt+0x376ef>
  43ae74:	mov    r14,r13
  43ae77:	mov    rax,r14
  43ae7a:	pop    rbx
  43ae7b:	pop    r12
  43ae7d:	pop    r13
  43ae7f:	pop    r14
  43ae81:	pop    r15
  43ae83:	ret    
  43ae84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ae8e:	xchg   ax,ax
  43ae90:	push   rbp
  43ae91:	push   r15
  43ae93:	push   r14
  43ae95:	push   r13
  43ae97:	push   r12
  43ae99:	push   rbx
  43ae9a:	push   rax
  43ae9b:	lea    r15,[rip+0x34c6e]        # 46fb10 <strcmp@plt+0x6c388>
  43aea2:	mov    rax,QWORD PTR [r15]
  43aea5:	mov    rbx,QWORD PTR [rax+0x8]
  43aea9:	cmp    rbx,rax
  43aeac:	je     43aee9 <strcmp@plt+0x37761>
  43aeae:	mov    r13d,edi
  43aeb1:	lea    r12,[rip+0x34c50]        # 46fb08 <strcmp@plt+0x6c380>
  43aeb8:	xor    r14d,r14d
  43aebb:	nop    DWORD PTR [rax+rax*1+0x0]
  43aec0:	mov    rbp,QWORD PTR [rbx+0x10]
  43aec4:	mov    eax,DWORD PTR [rbp+0x8]
  43aec7:	test   eax,eax
  43aec9:	jne    43aed9 <strcmp@plt+0x37751>
  43aecb:	mov    rax,QWORD PTR [r12]
  43aecf:	mov    rdi,QWORD PTR [rbp+0x0]
  43aed3:	call   QWORD PTR [rax+0x40]
  43aed6:	mov    DWORD PTR [rbp+0x8],eax
  43aed9:	cmp    eax,r13d
  43aedc:	je     43aeee <strcmp@plt+0x37766>
  43aede:	mov    rbx,QWORD PTR [rbx+0x8]
  43aee2:	cmp    rbx,QWORD PTR [r15]
  43aee5:	jne    43aec0 <strcmp@plt+0x37738>
  43aee7:	jmp    43aef1 <strcmp@plt+0x37769>
  43aee9:	xor    r14d,r14d
  43aeec:	jmp    43aef1 <strcmp@plt+0x37769>
  43aeee:	mov    r14,rbp
  43aef1:	mov    rax,r14
  43aef4:	add    rsp,0x8
  43aef8:	pop    rbx
  43aef9:	pop    r12
  43aefb:	pop    r13
  43aefd:	pop    r14
  43aeff:	pop    r15
  43af01:	pop    rbp
  43af02:	ret    
  43af03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43af0d:	nop    DWORD PTR [rax]
  43af10:	push   r15
  43af12:	push   r14
  43af14:	push   r12
  43af16:	push   rbx
  43af17:	push   rax
  43af18:	mov    r14,rdi
  43af1b:	lea    r15,[rip+0x34bee]        # 46fb10 <strcmp@plt+0x6c388>
  43af22:	mov    rax,QWORD PTR [r15]
  43af25:	mov    rbx,QWORD PTR [rax+0x8]
  43af29:	cmp    rbx,rax
  43af2c:	je     43af7f <strcmp@plt+0x377f7>
  43af2e:	xchg   ax,ax
  43af30:	mov    r12,QWORD PTR [rbx+0x10]
  43af34:	mov    rdi,r14
  43af37:	call   423200 <strcmp@plt+0x1fa78>
  43af3c:	movzx  eax,ax
  43af3f:	cmp    eax,0xa
  43af42:	je     43af60 <strcmp@plt+0x377d8>
  43af44:	cmp    eax,0x2
  43af47:	jne    43af76 <strcmp@plt+0x377ee>
  43af49:	mov    rsi,QWORD PTR [r12+0x10]
  43af4e:	test   rsi,rsi
  43af51:	jne    43af6a <strcmp@plt+0x377e2>
  43af53:	jmp    43af76 <strcmp@plt+0x377ee>
  43af55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43af5f:	nop
  43af60:	mov    rsi,QWORD PTR [r12+0x18]
  43af65:	test   rsi,rsi
  43af68:	je     43af76 <strcmp@plt+0x377ee>
  43af6a:	mov    rdi,r14
  43af6d:	call   423970 <strcmp@plt+0x201e8>
  43af72:	test   eax,eax
  43af74:	je     43afb4 <strcmp@plt+0x3782c>
  43af76:	mov    rbx,QWORD PTR [rbx+0x8]
  43af7a:	cmp    rbx,QWORD PTR [r15]
  43af7d:	jne    43af30 <strcmp@plt+0x377a8>
  43af7f:	lea    rax,[rip+0x29e2a]        # 464db0 <strcmp@plt+0x61628>
  43af86:	cmp    DWORD PTR [rax],0x2
  43af89:	jge    43af90 <strcmp@plt+0x37808>
  43af8b:	xor    r12d,r12d
  43af8e:	jmp    43afb4 <strcmp@plt+0x3782c>
  43af90:	mov    rdi,r14
  43af93:	call   423130 <strcmp@plt+0x1f9a8>
  43af98:	mov    rcx,rax
  43af9b:	lea    rsi,[rip+0x13a36]        # 44e9d8 <strcmp@plt+0x4b250>
  43afa2:	xor    r12d,r12d
  43afa5:	mov    edi,0x6
  43afaa:	xor    eax,eax
  43afac:	mov    rdx,rcx
  43afaf:	call   42e800 <strcmp@plt+0x2b078>
  43afb4:	mov    rax,r12
  43afb7:	add    rsp,0x8
  43afbb:	pop    rbx
  43afbc:	pop    r12
  43afbe:	pop    r14
  43afc0:	pop    r15
  43afc2:	ret    
  43afc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43afcd:	nop    DWORD PTR [rax]
  43afd0:	push   rbp
  43afd1:	push   rbx
  43afd2:	push   rax
  43afd3:	mov    rbx,rdi
  43afd6:	call   423200 <strcmp@plt+0x1fa78>
  43afdb:	mov    ebp,eax
  43afdd:	mov    rdi,rbx
  43afe0:	call   43af10 <strcmp@plt+0x37788>
  43afe5:	test   rax,rax
  43afe8:	je     43affd <strcmp@plt+0x37875>
  43afea:	movzx  ecx,bp
  43afed:	cmp    ecx,0xa
  43aff0:	je     43b001 <strcmp@plt+0x37879>
  43aff2:	cmp    ecx,0x2
  43aff5:	jne    43affd <strcmp@plt+0x37875>
  43aff7:	add    rax,0x30
  43affb:	jmp    43b005 <strcmp@plt+0x3787d>
  43affd:	xor    eax,eax
  43afff:	jmp    43b005 <strcmp@plt+0x3787d>
  43b001:	add    rax,0x34
  43b005:	add    rsp,0x8
  43b009:	pop    rbx
  43b00a:	pop    rbp
  43b00b:	ret    
  43b00c:	nop    DWORD PTR [rax+0x0]
  43b010:	cmp    esi,0xa
  43b013:	je     43b022 <strcmp@plt+0x3789a>
  43b015:	cmp    esi,0x2
  43b018:	jne    43b02a <strcmp@plt+0x378a2>
  43b01a:	add    rdi,0x30
  43b01e:	mov    rax,rdi
  43b021:	ret    
  43b022:	add    rdi,0x34
  43b026:	mov    rax,rdi
  43b029:	ret    
  43b02a:	xor    edi,edi
  43b02c:	mov    rax,rdi
  43b02f:	ret    
  43b030:	push   rbp
  43b031:	push   r15
  43b033:	push   r14
  43b035:	push   r13
  43b037:	push   r12
  43b039:	push   rbx
  43b03a:	sub    rsp,0xfb8
  43b041:	lea    rax,[rip+0x34ac8]        # 46fb10 <strcmp@plt+0x6c388>
  43b048:	mov    rax,QWORD PTR [rax]
  43b04b:	test   rax,rax
  43b04e:	je     43b05a <strcmp@plt+0x378d2>
  43b050:	cmp    DWORD PTR [rax+0x18],0x0
  43b054:	je     43b1aa <strcmp@plt+0x37a22>
  43b05a:	cmp    edi,0x5
  43b05d:	jl     43b073 <strcmp@plt+0x378eb>
  43b05f:	lea    rcx,[rip+0x29d4a]        # 464db0 <strcmp@plt+0x61628>
  43b066:	mov    ecx,DWORD PTR [rcx]
  43b068:	add    ecx,0x4
  43b06b:	cmp    ecx,edi
  43b06d:	jl     43b1aa <strcmp@plt+0x37a22>
  43b073:	mov    DWORD PTR [rsp+0xc],edi
  43b077:	vmovups ymm0,YMMWORD PTR [rip+0x1399b]        # 44ea1a <strcmp@plt+0x4b292>
  43b07f:	vmovups YMMWORD PTR [rsp+0x10],ymm0
  43b085:	mov    DWORD PTR [rsp+0x30],0xa0a2a
  43b08d:	mov    r13,QWORD PTR [rax+0x8]
  43b091:	cmp    r13,rax
  43b094:	je     43b17b <strcmp@plt+0x379f3>
  43b09a:	lea    r12,[rsp+0x10]
  43b09f:	nop
  43b0a0:	mov    rbx,QWORD PTR [r13+0x10]
  43b0a4:	mov    rdi,r12
  43b0a7:	vzeroupper 
  43b0aa:	call   4031e0 <strlen@plt>
  43b0af:	lea    rdi,[rsp+rax*1]
  43b0b3:	add    rdi,0x10
  43b0b7:	mov    esi,0xfa0
  43b0bc:	sub    rsi,rax
  43b0bf:	mov    rcx,QWORD PTR [rbx]
  43b0c2:	cmp    BYTE PTR [rbx+0xc],0x0
  43b0c6:	lea    r8,[rip+0xf6f3]        # 44a7c0 <strcmp@plt+0x47038>
  43b0cd:	lea    rax,[rip+0xf6ef]        # 44a7c3 <strcmp@plt+0x4703b>
  43b0d4:	cmove  r8,rax
  43b0d8:	xor    eax,eax
  43b0da:	lea    rdx,[rip+0x1395d]        # 44ea3e <strcmp@plt+0x4b2b6>
  43b0e1:	call   403620 <snprintf@plt>
  43b0e6:	mov    rbp,QWORD PTR [rbx+0x10]
  43b0ea:	test   rbp,rbp
  43b0ed:	je     43b127 <strcmp@plt+0x3799f>
  43b0ef:	mov    rdi,r12
  43b0f2:	call   4031e0 <strlen@plt>
  43b0f7:	lea    r14,[rsp+rax*1]
  43b0fb:	add    r14,0x10
  43b0ff:	mov    r15d,0xfa0
  43b105:	sub    r15,rax
  43b108:	mov    rdi,rbp
  43b10b:	call   423130 <strcmp@plt+0x1f9a8>
  43b110:	mov    rcx,rax
  43b113:	xor    eax,eax
  43b115:	mov    rdi,r14
  43b118:	mov    rsi,r15
  43b11b:	lea    rdx,[rip+0x1392c]        # 44ea4e <strcmp@plt+0x4b2c6>
  43b122:	call   403620 <snprintf@plt>
  43b127:	mov    rbp,QWORD PTR [rbx+0x18]
  43b12b:	test   rbp,rbp
  43b12e:	je     43b167 <strcmp@plt+0x379df>
  43b130:	mov    rdi,r12
  43b133:	call   4031e0 <strlen@plt>
  43b138:	lea    r14,[rsp+rax*1]
  43b13c:	add    r14,0x10
  43b140:	mov    ebx,0xfa0
  43b145:	sub    rbx,rax
  43b148:	mov    rdi,rbp
  43b14b:	call   423130 <strcmp@plt+0x1f9a8>
  43b150:	mov    rcx,rax
  43b153:	xor    eax,eax
  43b155:	mov    rdi,r14
  43b158:	mov    rsi,rbx
  43b15b:	lea    rdx,[rip+0x138fe]        # 44ea60 <strcmp@plt+0x4b2d8>
  43b162:	call   403620 <snprintf@plt>
  43b167:	mov    r13,QWORD PTR [r13+0x8]
  43b16b:	lea    rax,[rip+0x3499e]        # 46fb10 <strcmp@plt+0x6c388>
  43b172:	cmp    r13,QWORD PTR [rax]
  43b175:	jne    43b0a0 <strcmp@plt+0x37918>
  43b17b:	mov    edi,DWORD PTR [rsp+0xc]
  43b17f:	cmp    edi,0x5
  43b182:	jl     43b194 <strcmp@plt+0x37a0c>
  43b184:	lea    rax,[rip+0x29c25]        # 464db0 <strcmp@plt+0x61628>
  43b18b:	mov    eax,DWORD PTR [rax]
  43b18d:	add    eax,0x4
  43b190:	cmp    eax,edi
  43b192:	jl     43b1aa <strcmp@plt+0x37a22>
  43b194:	lea    rsi,[rip+0x851a]        # 4436b5 <strcmp@plt+0x3ff2d>
  43b19b:	lea    rdx,[rsp+0x10]
  43b1a0:	xor    eax,eax
  43b1a2:	vzeroupper 
  43b1a5:	call   42e800 <strcmp@plt+0x2b078>
  43b1aa:	add    rsp,0xfb8
  43b1b1:	pop    rbx
  43b1b2:	pop    r12
  43b1b4:	pop    r13
  43b1b6:	pop    r14
  43b1b8:	pop    r15
  43b1ba:	pop    rbp
  43b1bb:	vzeroupper 
  43b1be:	ret    
  43b1bf:	nop
  43b1c0:	push   rbx
  43b1c1:	cmp    edi,0xa
  43b1c4:	je     43b218 <strcmp@plt+0x37a90>
  43b1c6:	mov    ecx,edi
  43b1c8:	cmp    edi,0x2
  43b1cb:	jne    43b257 <strcmp@plt+0x37acf>
  43b1d1:	lea    rax,[rip+0x34938]        # 46fb10 <strcmp@plt+0x6c388>
  43b1d8:	mov    rax,QWORD PTR [rax]
  43b1db:	mov    rcx,QWORD PTR [rax+0x8]
  43b1df:	xor    ebx,ebx
  43b1e1:	cmp    rcx,rax
  43b1e4:	jne    43b1fd <strcmp@plt+0x37a75>
  43b1e6:	jmp    43b27e <strcmp@plt+0x37af6>
  43b1eb:	nop    DWORD PTR [rax+rax*1+0x0]
  43b1f0:	mov    rcx,QWORD PTR [rcx+0x8]
  43b1f4:	cmp    rcx,rax
  43b1f7:	je     43b27e <strcmp@plt+0x37af6>
  43b1fd:	mov    rdx,QWORD PTR [rcx+0x10]
  43b201:	mov    rsi,QWORD PTR [rdx+0x10]
  43b205:	test   rsi,rsi
  43b208:	je     43b1f0 <strcmp@plt+0x37a68>
  43b20a:	cmp    DWORD PTR [rsi+0x18],0x0
  43b20e:	je     43b1f0 <strcmp@plt+0x37a68>
  43b210:	cmp    BYTE PTR [rdx+0xc],0x1
  43b214:	jne    43b1f0 <strcmp@plt+0x37a68>
  43b216:	jmp    43b252 <strcmp@plt+0x37aca>
  43b218:	lea    rax,[rip+0x348f1]        # 46fb10 <strcmp@plt+0x6c388>
  43b21f:	mov    rax,QWORD PTR [rax]
  43b222:	mov    rcx,QWORD PTR [rax+0x8]
  43b226:	xor    ebx,ebx
  43b228:	cmp    rcx,rax
  43b22b:	jne    43b239 <strcmp@plt+0x37ab1>
  43b22d:	jmp    43b27e <strcmp@plt+0x37af6>
  43b22f:	nop
  43b230:	mov    rcx,QWORD PTR [rcx+0x8]
  43b234:	cmp    rcx,rax
  43b237:	je     43b27e <strcmp@plt+0x37af6>
  43b239:	mov    rdx,QWORD PTR [rcx+0x10]
  43b23d:	mov    rsi,QWORD PTR [rdx+0x18]
  43b241:	test   rsi,rsi
  43b244:	je     43b230 <strcmp@plt+0x37aa8>
  43b246:	cmp    DWORD PTR [rsi+0x18],0x0
  43b24a:	je     43b230 <strcmp@plt+0x37aa8>
  43b24c:	cmp    BYTE PTR [rdx+0xc],0x1
  43b250:	jne    43b230 <strcmp@plt+0x37aa8>
  43b252:	mov    rbx,rdx
  43b255:	jmp    43b27e <strcmp@plt+0x37af6>
  43b257:	lea    rax,[rip+0x29b52]        # 464db0 <strcmp@plt+0x61628>
  43b25e:	cmp    DWORD PTR [rax],0x2
  43b261:	jge    43b267 <strcmp@plt+0x37adf>
  43b263:	xor    ebx,ebx
  43b265:	jmp    43b27e <strcmp@plt+0x37af6>
  43b267:	lea    rsi,[rip+0x13804]        # 44ea72 <strcmp@plt+0x4b2ea>
  43b26e:	xor    ebx,ebx
  43b270:	mov    edi,0x6
  43b275:	xor    eax,eax
  43b277:	mov    edx,ecx
  43b279:	call   42e800 <strcmp@plt+0x2b078>
  43b27e:	mov    rax,rbx
  43b281:	pop    rbx
  43b282:	ret    
  43b283:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b28d:	nop    DWORD PTR [rax]
  43b290:	cmp    esi,0xa
  43b293:	je     43b2a3 <strcmp@plt+0x37b1b>
  43b295:	mov    eax,0xfffffff7
  43b29a:	cmp    esi,0x2
  43b29d:	jne    43b2a6 <strcmp@plt+0x37b1e>
  43b29f:	mov    eax,DWORD PTR [rdi+0x30]
  43b2a2:	ret    
  43b2a3:	mov    eax,DWORD PTR [rdi+0x34]
  43b2a6:	ret    
  43b2a7:	nop    WORD PTR [rax+rax*1+0x0]
  43b2b0:	push   rbx
  43b2b1:	cmp    DWORD PTR [rdi+0x18],0x1
  43b2b5:	jne    43b2d2 <strcmp@plt+0x37b4a>
  43b2b7:	lea    rax,[rip+0x3485a]        # 46fb18 <strcmp@plt+0x6c390>
  43b2be:	mov    rbx,QWORD PTR [rax]
  43b2c1:	call   423130 <strcmp@plt+0x1f9a8>
  43b2c6:	mov    rdi,rbx
  43b2c9:	mov    rsi,rax
  43b2cc:	pop    rbx
  43b2cd:	jmp    436750 <strcmp@plt+0x32fc8>
  43b2d2:	lea    rax,[rip+0x29ad7]        # 464db0 <strcmp@plt+0x61628>
  43b2d9:	cmp    DWORD PTR [rax],0x0
  43b2dc:	jle    43b2fc <strcmp@plt+0x37b74>
  43b2de:	call   423130 <strcmp@plt+0x1f9a8>
  43b2e3:	mov    rcx,rax
  43b2e6:	lea    rsi,[rip+0x137a6]        # 44ea93 <strcmp@plt+0x4b30b>
  43b2ed:	mov    edi,0x5
  43b2f2:	xor    eax,eax
  43b2f4:	mov    rdx,rcx
  43b2f7:	call   42e800 <strcmp@plt+0x2b078>
  43b2fc:	xor    eax,eax
  43b2fe:	pop    rbx
  43b2ff:	ret    
  43b300:	push   rbx
  43b301:	sub    rsp,0x20
  43b305:	call   4035c0 <getpid@plt>
  43b30a:	mov    DWORD PTR [rsp+0xc],eax
  43b30e:	mov    DWORD PTR [rsp+0x8],0x19980330
  43b316:	lea    rdi,[rsp+0x8]
  43b31b:	lea    rsi,[rsp+0x10]
  43b320:	call   403470 <capget@plt>
  43b325:	test   eax,eax
  43b327:	js     43b36b <strcmp@plt+0x37be3>
  43b329:	lea    rax,[rip+0x29a80]        # 464db0 <strcmp@plt+0x61628>
  43b330:	cmp    DWORD PTR [rax],0x0
  43b333:	jle    43b350 <strcmp@plt+0x37bc8>
  43b335:	mov    edx,DWORD PTR [rsp+0x10]
  43b339:	mov    ecx,DWORD PTR [rsp+0x14]
  43b33d:	lea    rsi,[rip+0x137cb]        # 44eb0f <strcmp@plt+0x4b387>
  43b344:	mov    edi,0x5
  43b349:	xor    eax,eax
  43b34b:	call   42e800 <strcmp@plt+0x2b078>
  43b350:	mov    eax,DWORD PTR [rsp+0x10]
  43b354:	not    eax
  43b356:	mov    ebx,0x1
  43b35b:	and    eax,0x3000
  43b360:	je     43b380 <strcmp@plt+0x37bf8>
  43b362:	lea    rsi,[rip+0x137cd]        # 44eb36 <strcmp@plt+0x4b3ae>
  43b369:	jmp    43b372 <strcmp@plt+0x37bea>
  43b36b:	lea    rsi,[rip+0x1377d]        # 44eaef <strcmp@plt+0x4b367>
  43b372:	xor    ebx,ebx
  43b374:	mov    edi,0x1
  43b379:	xor    eax,eax
  43b37b:	call   42e800 <strcmp@plt+0x2b078>
  43b380:	mov    eax,ebx
  43b382:	add    rsp,0x20
  43b386:	pop    rbx
  43b387:	ret    
  43b388:	nop    DWORD PTR [rax+rax*1+0x0]
  43b390:	push   rax
  43b391:	cmp    edi,0x1
  43b394:	jne    43b3b8 <strcmp@plt+0x37c30>
  43b396:	lea    rax,[rip+0x29a13]        # 464db0 <strcmp@plt+0x61628>
  43b39d:	cmp    DWORD PTR [rax],0x0
  43b3a0:	jle    43b3b6 <strcmp@plt+0x37c2e>
  43b3a2:	lea    rsi,[rip+0x137d5]        # 44eb7e <strcmp@plt+0x4b3f6>
  43b3a9:	mov    edi,0x5
  43b3ae:	xor    eax,eax
  43b3b0:	pop    rcx
  43b3b1:	jmp    42e800 <strcmp@plt+0x2b078>
  43b3b6:	pop    rax
  43b3b7:	ret    
  43b3b8:	mov    ecx,edi
  43b3ba:	lea    rax,[rip+0x299ef]        # 464db0 <strcmp@plt+0x61628>
  43b3c1:	cmp    edi,0x2
  43b3c4:	je     43b3d9 <strcmp@plt+0x37c51>
  43b3c6:	cmp    ecx,0xf
  43b3c9:	jne    43b3f6 <strcmp@plt+0x37c6e>
  43b3cb:	cmp    DWORD PTR [rax],0x0
  43b3ce:	jle    43b3f1 <strcmp@plt+0x37c69>
  43b3d0:	lea    rsi,[rip+0x137bf]        # 44eb96 <strcmp@plt+0x4b40e>
  43b3d7:	jmp    43b3e5 <strcmp@plt+0x37c5d>
  43b3d9:	cmp    DWORD PTR [rax],0x0
  43b3dc:	jle    43b3f1 <strcmp@plt+0x37c69>
  43b3de:	lea    rsi,[rip+0x137d9]        # 44ebbe <strcmp@plt+0x4b436>
  43b3e5:	mov    edi,0x5
  43b3ea:	xor    eax,eax
  43b3ec:	call   42e800 <strcmp@plt+0x2b078>
  43b3f1:	call   43b420 <strcmp@plt+0x37c98>
  43b3f6:	cmp    DWORD PTR [rax],0x0
  43b3f9:	jle    43b410 <strcmp@plt+0x37c88>
  43b3fb:	lea    rsi,[rip+0x137df]        # 44ebe1 <strcmp@plt+0x4b459>
  43b402:	mov    edi,0x5
  43b407:	xor    eax,eax
  43b409:	mov    edx,ecx
  43b40b:	call   42e800 <strcmp@plt+0x2b078>
  43b410:	mov    edi,0x1
  43b415:	call   4034a0 <exit@plt>
  43b41a:	nop    WORD PTR [rax+rax*1+0x0]
  43b420:	push   rax
  43b421:	lea    rax,[rip+0x29988]        # 464db0 <strcmp@plt+0x61628>
  43b428:	cmp    DWORD PTR [rax],0x2
  43b42b:	jl     43b440 <strcmp@plt+0x37cb8>
  43b42d:	lea    rsi,[rip+0x137c3]        # 44ebf7 <strcmp@plt+0x4b46f>
  43b434:	mov    edi,0x6
  43b439:	xor    eax,eax
  43b43b:	call   42e800 <strcmp@plt+0x2b078>
  43b440:	lea    rax,[rip+0x35139]        # 470580 <strcmp@plt+0x6cdf8>
  43b447:	mov    rdi,QWORD PTR [rax]
  43b44a:	call   4073e0 <strcmp@plt+0x3c58>
  43b44f:	lea    rax,[rip+0x2cfa2]        # 4683f8 <strcmp@plt+0x64c70>
  43b456:	mov    rcx,QWORD PTR [rax]
  43b459:	test   rcx,rcx
  43b45c:	je     43b463 <strcmp@plt+0x37cdb>
  43b45e:	xor    eax,eax
  43b460:	call   QWORD PTR [rcx+0x8]
  43b463:	lea    rax,[rip+0x3469e]        # 46fb08 <strcmp@plt+0x6c380>
  43b46a:	mov    rcx,QWORD PTR [rax]
  43b46d:	test   rcx,rcx
  43b470:	je     43b477 <strcmp@plt+0x37cef>
  43b472:	xor    eax,eax
  43b474:	call   QWORD PTR [rcx+0x8]
  43b477:	xor    eax,eax
  43b479:	call   43a890 <strcmp@plt+0x37108>
  43b47e:	lea    rax,[rip+0x35093]        # 470518 <strcmp@plt+0x6cd90>
  43b485:	mov    rdi,QWORD PTR [rax]
  43b488:	call   434c00 <strcmp@plt+0x31478>
  43b48d:	xor    eax,eax
  43b48f:	call   437200 <strcmp@plt+0x33a78>
  43b494:	lea    rax,[rip+0x35105]        # 4705a0 <strcmp@plt+0x6ce18>
  43b49b:	mov    rdi,QWORD PTR [rax]
  43b49e:	call   42c850 <strcmp@plt+0x290c8>
  43b4a3:	lea    rax,[rip+0x350fe]        # 4705a8 <strcmp@plt+0x6ce20>
  43b4aa:	mov    rdi,QWORD PTR [rax]
  43b4ad:	call   432550 <strcmp@plt+0x2edc8>
  43b4b2:	xor    eax,eax
  43b4b4:	call   42ead0 <strcmp@plt+0x2b348>
  43b4b9:	lea    rsi,[rip+0x100ba]        # 44b57a <strcmp@plt+0x47df2>
  43b4c0:	mov    edi,0x4
  43b4c5:	xor    eax,eax
  43b4c7:	call   42e800 <strcmp@plt+0x2b078>
  43b4cc:	xor    edi,edi
  43b4ce:	call   4034a0 <exit@plt>
  43b4d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b4dd:	nop    DWORD PTR [rax]
  43b4e0:	push   rbp
  43b4e1:	push   r15
  43b4e3:	push   r14
  43b4e5:	push   r13
  43b4e7:	push   r12
  43b4e9:	push   rbx
  43b4ea:	sub    rsp,0x88
  43b4f1:	mov    r14,rsi
  43b4f4:	mov    ebp,edi
  43b4f6:	lea    rsi,[rip+0x13785]        # 44ec82 <strcmp@plt+0x4b4fa>
  43b4fd:	lea    rdx,[rip+0x13777]        # 44ec7b <strcmp@plt+0x4b4f3>
  43b504:	mov    edi,0x4
  43b509:	xor    eax,eax
  43b50b:	call   42e800 <strcmp@plt+0x2b078>
  43b510:	lea    r15,[rip+0x29899]        # 464db0 <strcmp@plt+0x61628>
  43b517:	cmp    DWORD PTR [r15],0x0
  43b51b:	jle    43b530 <strcmp@plt+0x37da8>
  43b51d:	lea    rsi,[rip+0x13789]        # 44ecad <strcmp@plt+0x4b525>
  43b524:	mov    edi,0x5
  43b529:	xor    eax,eax
  43b52b:	call   42e800 <strcmp@plt+0x2b078>
  43b530:	call   43b300 <strcmp@plt+0x37b78>
  43b535:	cmp    eax,0x1
  43b538:	jne    43b881 <strcmp@plt+0x380f9>
  43b53e:	xor    edi,edi
  43b540:	call   403370 <time@plt>
  43b545:	lea    rcx,[rip+0x34fbc]        # 470508 <strcmp@plt+0x6cd80>
  43b54c:	mov    DWORD PTR [rcx],eax
  43b54e:	mov    edi,eax
  43b550:	call   4030e0 <srandom@plt>
  43b555:	lea    rbx,[rip+0xfffffffffffffe34]        # 43b390 <strcmp@plt+0x37c08>
  43b55c:	mov    edi,0x1
  43b561:	mov    rsi,rbx
  43b564:	call   403490 <signal@plt>
  43b569:	mov    edi,0xf
  43b56e:	mov    rsi,rbx
  43b571:	call   403490 <signal@plt>
  43b576:	mov    edi,0x2
  43b57b:	mov    rsi,rbx
  43b57e:	call   403490 <signal@plt>
  43b583:	mov    edi,0x3
  43b588:	mov    rsi,rbx
  43b58b:	call   403490 <signal@plt>
  43b590:	xor    eax,eax
  43b592:	call   432250 <strcmp@plt+0x2eac8>
  43b597:	lea    rcx,[rip+0x3500a]        # 4705a8 <strcmp@plt+0x6ce20>
  43b59e:	mov    QWORD PTR [rcx],rax
  43b5a1:	xor    eax,eax
  43b5a3:	call   42c4b0 <strcmp@plt+0x28d28>
  43b5a8:	lea    rcx,[rip+0x34ff1]        # 4705a0 <strcmp@plt+0x6ce18>
  43b5af:	mov    QWORD PTR [rcx],rax
  43b5b2:	lea    rdx,[rsp+0x8]
  43b5b7:	mov    edi,ebp
  43b5b9:	mov    rsi,r14
  43b5bc:	call   403e70 <strcmp@plt+0x6e8>
  43b5c1:	test   eax,eax
  43b5c3:	jne    43b87c <strcmp@plt+0x380f4>
  43b5c9:	cmp    DWORD PTR [rsp+0x7c],0x0
  43b5ce:	je     43b5d7 <strcmp@plt+0x37e4f>
  43b5d0:	mov    rdi,QWORD PTR [rsp+0x50]
  43b5d5:	jmp    43b5de <strcmp@plt+0x37e56>
  43b5d7:	lea    rdi,[rip+0x136da]        # 44ecb8 <strcmp@plt+0x4b530>
  43b5de:	call   403700 <strdup@plt>
  43b5e3:	lea    rbx,[rip+0x34f0e]        # 4704f8 <strcmp@plt+0x6cd70>
  43b5ea:	mov    QWORD PTR [rbx],rax
  43b5ed:	cmp    DWORD PTR [rsp+0x78],0x0
  43b5f2:	je     43b61f <strcmp@plt+0x37e97>
  43b5f4:	mov    rcx,rax
  43b5f7:	cmp    BYTE PTR [rax],0x2f
  43b5fa:	je     43b612 <strcmp@plt+0x37e8a>
  43b5fc:	lea    rsi,[rip+0x136c3]        # 44ecc6 <strcmp@plt+0x4b53e>
  43b603:	mov    edi,0x1
  43b608:	xor    eax,eax
  43b60a:	mov    rdx,rcx
  43b60d:	call   42e800 <strcmp@plt+0x2b078>
  43b612:	lea    rax,[rip+0x34eeb]        # 470504 <strcmp@plt+0x6cd7c>
  43b619:	mov    DWORD PTR [rax],0x1
  43b61f:	cmp    DWORD PTR [rsp+0x70],0x0
  43b624:	je     43b62d <strcmp@plt+0x37ea5>
  43b626:	mov    eax,DWORD PTR [rsp+0x18]
  43b62a:	mov    DWORD PTR [r15],eax
  43b62d:	cmp    DWORD PTR [rsp+0x74],0x0
  43b632:	je     43b650 <strcmp@plt+0x37ec8>
  43b634:	mov    eax,DWORD PTR [rsp+0x30]
  43b638:	cmp    eax,0x1
  43b63b:	je     43b65f <strcmp@plt+0x37ed7>
  43b63d:	test   eax,eax
  43b63f:	jne    43b66e <strcmp@plt+0x37ee6>
  43b641:	lea    rax,[rip+0x34eb8]        # 470500 <strcmp@plt+0x6cd78>
  43b648:	mov    DWORD PTR [rax],0x2
  43b64e:	jmp    43b681 <strcmp@plt+0x37ef9>
  43b650:	lea    rax,[rip+0x34ea9]        # 470500 <strcmp@plt+0x6cd78>
  43b657:	mov    DWORD PTR [rax],0x0
  43b65d:	jmp    43b681 <strcmp@plt+0x37ef9>
  43b65f:	lea    rax,[rip+0x34e9a]        # 470500 <strcmp@plt+0x6cd78>
  43b666:	mov    DWORD PTR [rax],0xa
  43b66c:	jmp    43b681 <strcmp@plt+0x37ef9>
  43b66e:	lea    rsi,[rip+0x136b7]        # 44ed2c <strcmp@plt+0x4b5a4>
  43b675:	mov    edi,0x4
  43b67a:	xor    eax,eax
  43b67c:	call   42e800 <strcmp@plt+0x2b078>
  43b681:	lea    rdi,[rsp+0x8]
  43b686:	call   403e00 <strcmp@plt+0x678>
  43b68b:	mov    rdi,QWORD PTR [rbx]
  43b68e:	xor    esi,esi
  43b690:	call   403670 <access@plt>
  43b695:	cmp    eax,0xffffffff
  43b698:	je     43b888 <strcmp@plt+0x38100>
  43b69e:	lea    rax,[rip+0x34e5f]        # 470504 <strcmp@plt+0x6cd7c>
  43b6a5:	cmp    DWORD PTR [rax],0x0
  43b6a8:	je     43b732 <strcmp@plt+0x37faa>
  43b6ae:	cmp    DWORD PTR [r15],0x0
  43b6b2:	jle    43b6c7 <strcmp@plt+0x37f3f>
  43b6b4:	lea    rsi,[rip+0x13699]        # 44ed54 <strcmp@plt+0x4b5cc>
  43b6bb:	mov    edi,0x5
  43b6c0:	xor    eax,eax
  43b6c2:	call   42e800 <strcmp@plt+0x2b078>
  43b6c7:	call   403110 <fork@plt>
  43b6cc:	lea    rbx,[rip+0x34e39]        # 47050c <strcmp@plt+0x6cd84>
  43b6d3:	mov    DWORD PTR [rbx],eax
  43b6d5:	test   eax,eax
  43b6d7:	js     43b87c <strcmp@plt+0x380f4>
  43b6dd:	xor    edi,edi
  43b6df:	call   4036d0 <umask@plt>
  43b6e4:	cmp    DWORD PTR [rbx],0x0
  43b6e7:	jg     43b881 <strcmp@plt+0x380f9>
  43b6ed:	call   403440 <setsid@plt>
  43b6f2:	lea    rcx,[rip+0x34e17]        # 470510 <strcmp@plt+0x6cd88>
  43b6f9:	mov    DWORD PTR [rcx],eax
  43b6fb:	test   eax,eax
  43b6fd:	js     43b87c <strcmp@plt+0x380f4>
  43b703:	lea    rdi,[rip+0xe2be]        # 4499c8 <strcmp@plt+0x46240>
  43b70a:	call   4035e0 <chdir@plt>
  43b70f:	test   eax,eax
  43b711:	js     43b87c <strcmp@plt+0x380f4>
  43b717:	xor    edi,edi
  43b719:	call   403760 <close@plt>
  43b71e:	mov    edi,0x1
  43b723:	call   403760 <close@plt>
  43b728:	mov    edi,0x2
  43b72d:	call   403760 <close@plt>
  43b732:	xor    eax,eax
  43b734:	call   4172d0 <strcmp@plt+0x13b48>
  43b739:	xor    eax,eax
  43b73b:	call   4381a0 <strcmp@plt+0x34a18>
  43b740:	xor    eax,eax
  43b742:	call   434bf0 <strcmp@plt+0x31468>
  43b747:	lea    rbp,[rip+0x34dca]        # 470518 <strcmp@plt+0x6cd90>
  43b74e:	mov    QWORD PTR [rbp+0x0],rax
  43b752:	xor    eax,eax
  43b754:	call   436ce0 <strcmp@plt+0x33558>
  43b759:	xor    eax,eax
  43b75b:	call   43a7f0 <strcmp@plt+0x37068>
  43b760:	cmp    eax,0x1
  43b763:	jne    43b87c <strcmp@plt+0x380f4>
  43b769:	xor    eax,eax
  43b76b:	call   407370 <strcmp@plt+0x3be8>
  43b770:	lea    r12,[rip+0x34e09]        # 470580 <strcmp@plt+0x6cdf8>
  43b777:	mov    QWORD PTR [r12],rax
  43b77b:	test   rax,rax
  43b77e:	je     43b87c <strcmp@plt+0x380f4>
  43b784:	xor    eax,eax
  43b786:	call   441a60 <strcmp@plt+0x3e2d8>
  43b78b:	cmp    eax,0x1
  43b78e:	jne    43b87c <strcmp@plt+0x380f4>
  43b794:	lea    r14,[rip+0x34dfd]        # 470598 <strcmp@plt+0x6ce10>
  43b79b:	mov    rdi,QWORD PTR [r14]
  43b79e:	call   4079d0 <strcmp@plt+0x4248>
  43b7a3:	cmp    eax,0x3
  43b7a6:	ja     43b80a <strcmp@plt+0x38082>
  43b7a8:	mov    ebx,eax
  43b7aa:	cmp    eax,0x1
  43b7ad:	je     43b80a <strcmp@plt+0x38082>
  43b7af:	cmp    DWORD PTR [r15],0x2
  43b7b3:	jl     43b7c8 <strcmp@plt+0x38040>
  43b7b5:	lea    rsi,[rip+0x13466]        # 44ec22 <strcmp@plt+0x4b49a>
  43b7bc:	mov    edi,0x6
  43b7c1:	xor    eax,eax
  43b7c3:	call   42e800 <strcmp@plt+0x2b078>
  43b7c8:	mov    rdi,QWORD PTR [r14]
  43b7cb:	call   40a640 <strcmp@plt+0x6eb8>
  43b7d0:	lea    r13,[rip+0x2cc21]        # 4683f8 <strcmp@plt+0x64c70>
  43b7d7:	mov    rcx,QWORD PTR [r13+0x0]
  43b7db:	mov    esi,DWORD PTR [rax+0x58]
  43b7de:	mov    rdx,QWORD PTR [rax+0x60]
  43b7e2:	xor    eax,eax
  43b7e4:	mov    edi,ebx
  43b7e6:	call   QWORD PTR [rcx]
  43b7e8:	cmp    eax,0x1
  43b7eb:	jne    43b8a5 <strcmp@plt+0x3811d>
  43b7f1:	cmp    DWORD PTR [r15],0x0
  43b7f5:	jle    43b80a <strcmp@plt+0x38082>
  43b7f7:	lea    rsi,[rip+0x1343b]        # 44ec39 <strcmp@plt+0x4b4b1>
  43b7fe:	mov    edi,0x5
  43b803:	xor    eax,eax
  43b805:	call   42e800 <strcmp@plt+0x2b078>
  43b80a:	mov    rdi,QWORD PTR [r12]
  43b80e:	call   407450 <strcmp@plt+0x3cc8>
  43b813:	cmp    eax,0x1
  43b816:	jne    43b87c <strcmp@plt+0x380f4>
  43b818:	lea    rax,[rip+0x342e9]        # 46fb08 <strcmp@plt+0x6c380>
  43b81f:	mov    rcx,QWORD PTR [rax]
  43b822:	xor    eax,eax
  43b824:	call   QWORD PTR [rcx]
  43b826:	cmp    eax,0x1
  43b829:	jne    43b87c <strcmp@plt+0x380f4>
  43b82b:	mov    rdi,QWORD PTR [r14]
  43b82e:	call   407a00 <strcmp@plt+0x4278>
  43b833:	lea    rsi,[rip+0x13416]        # 44ec50 <strcmp@plt+0x4b4c8>
  43b83a:	lea    rdx,[rip+0x1343a]        # 44ec7b <strcmp@plt+0x4b4f3>
  43b841:	mov    edi,0x4
  43b846:	xor    eax,eax
  43b848:	call   42e800 <strcmp@plt+0x2b078>
  43b84d:	lea    rbx,[rip+0x34d34]        # 470588 <strcmp@plt+0x6ce00>
  43b854:	mov    rdi,rbx
  43b857:	call   43d5e0 <strcmp@plt+0x39e58>
  43b85c:	nop    DWORD PTR [rax+0x0]
  43b860:	mov    rdi,QWORD PTR [rbp+0x0]
  43b864:	call   434f30 <strcmp@plt+0x317a8>
  43b869:	mov    rdi,QWORD PTR [rbp+0x0]
  43b86d:	call   434e50 <strcmp@plt+0x316c8>
  43b872:	mov    rdi,rbx
  43b875:	call   43f280 <strcmp@plt+0x3baf8>
  43b87a:	jmp    43b860 <strcmp@plt+0x380d8>
  43b87c:	call   43b420 <strcmp@plt+0x37c98>
  43b881:	xor    edi,edi
  43b883:	call   4034a0 <exit@plt>
  43b888:	mov    rdx,QWORD PTR [rbx]
  43b88b:	lea    rsi,[rip+0x13372]        # 44ec04 <strcmp@plt+0x4b47c>
  43b892:	mov    edi,0x1
  43b897:	xor    eax,eax
  43b899:	call   42e800 <strcmp@plt+0x2b078>
  43b89e:	xor    edi,edi
  43b8a0:	call   4034a0 <exit@plt>
  43b8a5:	mov    QWORD PTR [r13+0x0],0x0
  43b8ad:	call   43b420 <strcmp@plt+0x37c98>
  43b8b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b8bc:	nop    DWORD PTR [rax+0x0]
  43b8c0:	push   rbx
  43b8c1:	mov    rbx,rdi
  43b8c4:	call   403690 <zmq_ctx_new@plt>
  43b8c9:	mov    QWORD PTR [rbx],rax
  43b8cc:	mov    esi,0x3
  43b8d1:	mov    rdi,rax
  43b8d4:	call   4036e0 <zmq_socket@plt>
  43b8d9:	mov    QWORD PTR [rbx+0x8],rax
  43b8dd:	lea    rsi,[rip+0x13491]        # 44ed75 <strcmp@plt+0x4b5ed>
  43b8e4:	mov    rdi,rax
  43b8e7:	call   4033c0 <zmq_connect@plt>
  43b8ec:	lea    rcx,[rip+0x294bd]        # 464db0 <strcmp@plt+0x61628>
  43b8f3:	mov    ecx,DWORD PTR [rcx]
  43b8f5:	test   eax,eax
  43b8f7:	je     43b92e <strcmp@plt+0x381a6>
  43b8f9:	cmp    ecx,0x2
  43b8fc:	jl     43b91e <strcmp@plt+0x38196>
  43b8fe:	mov    edi,eax
  43b900:	call   403100 <zmq_strerror@plt>
  43b905:	mov    rcx,rax
  43b908:	lea    rsi,[rip+0x13479]        # 44ed88 <strcmp@plt+0x4b600>
  43b90f:	mov    edi,0x6
  43b914:	xor    eax,eax
  43b916:	mov    rdx,rcx
  43b919:	call   42e800 <strcmp@plt+0x2b078>
  43b91e:	lea    rsi,[rip+0x134b8]        # 44eddd <strcmp@plt+0x4b655>
  43b925:	xor    ebx,ebx
  43b927:	mov    edi,0x2
  43b92c:	jmp    43b944 <strcmp@plt+0x381bc>
  43b92e:	mov    ebx,0x1
  43b933:	cmp    ecx,0x2
  43b936:	jl     43b94b <strcmp@plt+0x381c3>
  43b938:	lea    rsi,[rip+0x13477]        # 44edb6 <strcmp@plt+0x4b62e>
  43b93f:	mov    edi,0x6
  43b944:	xor    eax,eax
  43b946:	call   42e800 <strcmp@plt+0x2b078>
  43b94b:	mov    eax,ebx
  43b94d:	pop    rbx
  43b94e:	ret    
  43b94f:	nop
  43b950:	push   r14
  43b952:	push   rbx
  43b953:	push   rax
  43b954:	mov    rbx,rdi
  43b957:	lea    r14,[rip+0x29452]        # 464db0 <strcmp@plt+0x61628>
  43b95e:	cmp    DWORD PTR [r14],0x2
  43b962:	jl     43b977 <strcmp@plt+0x381ef>
  43b964:	lea    rsi,[rip+0x134a2]        # 44ee0d <strcmp@plt+0x4b685>
  43b96b:	mov    edi,0x6
  43b970:	xor    eax,eax
  43b972:	call   42e800 <strcmp@plt+0x2b078>
  43b977:	mov    rdi,QWORD PTR [rbx+0x8]
  43b97b:	call   4035d0 <zmq_close@plt>
  43b980:	mov    rdi,QWORD PTR [rbx]
  43b983:	call   403630 <zmq_ctx_destroy@plt>
  43b988:	cmp    DWORD PTR [r14],0x2
  43b98c:	jge    43b996 <strcmp@plt+0x3820e>
  43b98e:	add    rsp,0x8
  43b992:	pop    rbx
  43b993:	pop    r14
  43b995:	ret    
  43b996:	lea    rsi,[rip+0x1348e]        # 44ee2b <strcmp@plt+0x4b6a3>
  43b99d:	mov    edi,0x6
  43b9a2:	xor    eax,eax
  43b9a4:	add    rsp,0x8
  43b9a8:	pop    rbx
  43b9a9:	pop    r14
  43b9ab:	jmp    42e800 <strcmp@plt+0x2b078>
  43b9b0:	mov    rax,QWORD PTR [rsi]
  43b9b3:	mov    QWORD PTR [rdi],rax
  43b9b6:	lea    rax,[rdi+0x8]
  43b9ba:	ret    
  43b9bb:	nop    DWORD PTR [rax+rax*1+0x0]
  43b9c0:	mov    BYTE PTR [rdi],sil
  43b9c3:	mov    BYTE PTR [rdi+0x1],dl
  43b9c6:	mov    BYTE PTR [rdi+0x2],cl
  43b9c9:	mov    BYTE PTR [rdi+0x3],r8b
  43b9cd:	mov    DWORD PTR [rdi+0x4],r9d
  43b9d1:	ret    
  43b9d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b9dc:	nop    DWORD PTR [rax+0x0]
  43b9e0:	push   rbp
  43b9e1:	push   r15
  43b9e3:	push   r14
  43b9e5:	push   r12
  43b9e7:	push   rbx
  43b9e8:	mov    r14d,r8d
  43b9eb:	mov    ebp,ecx
  43b9ed:	mov    ebx,edx
  43b9ef:	mov    r15d,esi
  43b9f2:	mov    r12,rdi
  43b9f5:	mov    edi,0xc
  43b9fa:	call   432070 <strcmp@plt+0x2e8e8>
  43b9ff:	mov    QWORD PTR [r12],rax
  43ba03:	shl    ebp,0x10
  43ba06:	and    ebp,0xff0000
  43ba0c:	shl    ebx,0x8
  43ba0f:	movzx  ecx,bx
  43ba12:	movzx  edx,r15b
  43ba16:	or     edx,ecx
  43ba18:	or     edx,ebp
  43ba1a:	movabs rcx,0x401000000
  43ba24:	or     rcx,rdx
  43ba27:	mov    QWORD PTR [rax],rcx
  43ba2a:	mov    DWORD PTR [rax+0x8],r14d
  43ba2e:	mov    eax,0xc
  43ba33:	pop    rbx
  43ba34:	pop    r12
  43ba36:	pop    r14
  43ba38:	pop    r15
  43ba3a:	pop    rbp
  43ba3b:	ret    
  43ba3c:	nop    DWORD PTR [rax+0x0]
  43ba40:	push   r15
  43ba42:	push   r14
  43ba44:	push   r12
  43ba46:	push   rbx
  43ba47:	sub    rsp,0x18
  43ba4b:	mov    r14,rsi
  43ba4e:	mov    r15,rdi
  43ba51:	xor    ebx,ebx
  43ba53:	cmp    edx,0x1
  43ba56:	sete   bl
  43ba59:	lea    rdx,[rbx-0x1]
  43ba5d:	mov    rax,QWORD PTR [rdi+0x8]
  43ba61:	mov    QWORD PTR [rsp],rax
  43ba65:	mov    WORD PTR [rsp+0xc],0x1
  43ba6c:	mov    rdi,rsp
  43ba6f:	mov    esi,0x1
  43ba74:	call   403400 <zmq_poll@plt>
  43ba79:	test   eax,eax
  43ba7b:	je     43bb04 <strcmp@plt+0x3837c>
  43ba81:	lea    r12,[rip+0x29328]        # 464db0 <strcmp@plt+0x61628>
  43ba88:	cmp    DWORD PTR [r12],0x3
  43ba8d:	jl     43baa2 <strcmp@plt+0x3831a>
  43ba8f:	lea    rsi,[rip+0x133b2]        # 44ee48 <strcmp@plt+0x4b6c0>
  43ba96:	mov    edi,0x7
  43ba9b:	xor    eax,eax
  43ba9d:	call   42e800 <strcmp@plt+0x2b078>
  43baa2:	mov    rdi,QWORD PTR [r15+0x8]
  43baa6:	mov    edx,0x1000
  43baab:	mov    rsi,r14
  43baae:	mov    ecx,ebx
  43bab0:	call   403540 <zmq_recv@plt>
  43bab5:	mov    ebx,eax
  43bab7:	cmp    DWORD PTR [r12],0x3
  43babc:	jl     43bad3 <strcmp@plt+0x3834b>
  43babe:	lea    rsi,[rip+0x133a8]        # 44ee6d <strcmp@plt+0x4b6e5>
  43bac5:	mov    edi,0x7
  43baca:	xor    eax,eax
  43bacc:	mov    edx,ebx
  43bace:	call   42e800 <strcmp@plt+0x2b078>
  43bad3:	cmp    ebx,0xffffffff
  43bad6:	jne    43bb09 <strcmp@plt+0x38381>
  43bad8:	call   403040 <__errno_location@plt>
  43badd:	mov    edi,DWORD PTR [rax]
  43badf:	call   403100 <zmq_strerror@plt>
  43bae4:	mov    rcx,rax
  43bae7:	lea    rsi,[rip+0x133a7]        # 44ee95 <strcmp@plt+0x4b70d>
  43baee:	mov    edi,0x2
  43baf3:	xor    eax,eax
  43baf5:	mov    rdx,rcx
  43baf8:	call   42e800 <strcmp@plt+0x2b078>
  43bafd:	mov    ebx,0xffffffff
  43bb02:	jmp    43bb09 <strcmp@plt+0x38381>
  43bb04:	mov    ebx,0xfffffffe
  43bb09:	mov    eax,ebx
  43bb0b:	add    rsp,0x18
  43bb0f:	pop    rbx
  43bb10:	pop    r12
  43bb12:	pop    r14
  43bb14:	pop    r15
  43bb16:	ret    
  43bb17:	nop    WORD PTR [rax+rax*1+0x0]
  43bb20:	push   rbp
  43bb21:	push   r15
  43bb23:	push   r14
  43bb25:	push   rbx
  43bb26:	push   rax
  43bb27:	mov    ebp,edx
  43bb29:	mov    r14,rsi
  43bb2c:	mov    rbx,rdi
  43bb2f:	lea    r15,[rip+0x2927a]        # 464db0 <strcmp@plt+0x61628>
  43bb36:	cmp    DWORD PTR [r15],0x3
  43bb3a:	jl     43bb51 <strcmp@plt+0x383c9>
  43bb3c:	lea    rsi,[rip+0x13378]        # 44eebb <strcmp@plt+0x4b733>
  43bb43:	mov    edi,0x7
  43bb48:	xor    eax,eax
  43bb4a:	mov    edx,ebp
  43bb4c:	call   42e800 <strcmp@plt+0x2b078>
  43bb51:	mov    rdi,QWORD PTR [rbx+0x8]
  43bb55:	movsxd rdx,ebp
  43bb58:	xor    ecx,ecx
  43bb5a:	mov    rsi,r14
  43bb5d:	call   4033d0 <zmq_send@plt>
  43bb62:	mov    ebx,eax
  43bb64:	cmp    DWORD PTR [r15],0x3
  43bb68:	jl     43bb7f <strcmp@plt+0x383f7>
  43bb6a:	lea    rsi,[rip+0x1337c]        # 44eeed <strcmp@plt+0x4b765>
  43bb71:	mov    edi,0x7
  43bb76:	xor    eax,eax
  43bb78:	mov    edx,ebx
  43bb7a:	call   42e800 <strcmp@plt+0x2b078>
  43bb7f:	cmp    ebx,0xffffffff
  43bb82:	jne    43bba9 <strcmp@plt+0x38421>
  43bb84:	call   403040 <__errno_location@plt>
  43bb89:	mov    edi,DWORD PTR [rax]
  43bb8b:	call   403100 <zmq_strerror@plt>
  43bb90:	mov    rcx,rax
  43bb93:	lea    rsi,[rip+0x13382]        # 44ef1c <strcmp@plt+0x4b794>
  43bb9a:	mov    edi,0x2
  43bb9f:	xor    eax,eax
  43bba1:	mov    rdx,rcx
  43bba4:	call   42e800 <strcmp@plt+0x2b078>
  43bba9:	mov    eax,0x1
  43bbae:	add    rsp,0x8
  43bbb2:	pop    rbx
  43bbb3:	pop    r14
  43bbb5:	pop    r15
  43bbb7:	pop    rbp
  43bbb8:	ret    
  43bbb9:	nop    DWORD PTR [rax+0x0]
  43bbc0:	push   rbp
  43bbc1:	push   r15
  43bbc3:	push   r14
  43bbc5:	push   r13
  43bbc7:	push   r12
  43bbc9:	push   rbx
  43bbca:	push   rax
  43bbcb:	mov    ebx,r9d
  43bbce:	mov    QWORD PTR [rsp],r8
  43bbd2:	mov    r12d,ecx
  43bbd5:	mov    r13d,edx
  43bbd8:	mov    ebp,esi
  43bbda:	mov    r14,rdi
  43bbdd:	mov    edi,0x1000
  43bbe2:	call   432070 <strcmp@plt+0x2e8e8>
  43bbe7:	mov    r15,rax
  43bbea:	lea    rdi,[rax+0x8]
  43bbee:	mov    BYTE PTR [rax],bpl
  43bbf1:	mov    BYTE PTR [rax+0x1],r13b
  43bbf5:	mov    BYTE PTR [rax+0x2],r12b
  43bbf9:	mov    BYTE PTR [rax+0x3],0x0
  43bbfd:	mov    DWORD PTR [rax+0x4],ebx
  43bc00:	movsxd rbx,ebx
  43bc03:	mov    rsi,QWORD PTR [rsp]
  43bc07:	mov    rdx,rbx
  43bc0a:	call   403330 <memcpy@plt>
  43bc0f:	add    ebx,0x8
  43bc12:	mov    rdi,r14
  43bc15:	mov    rsi,r15
  43bc18:	mov    edx,ebx
  43bc1a:	call   43bb20 <strcmp@plt+0x38398>
  43bc1f:	mov    rdi,r15
  43bc22:	call   403780 <free@plt>
  43bc27:	mov    edi,0x1000
  43bc2c:	call   432070 <strcmp@plt+0x2e8e8>
  43bc31:	mov    rbx,rax
  43bc34:	xor    edx,edx
  43bc36:	mov    rdi,r14
  43bc39:	mov    rsi,rax
  43bc3c:	call   43ba40 <strcmp@plt+0x382b8>
  43bc41:	cmp    BYTE PTR [rbx+0x3],0x1
  43bc45:	jne    43bc53 <strcmp@plt+0x384cb>
  43bc47:	cmp    DWORD PTR [rbx+0x4],0x4
  43bc4b:	jne    43bc53 <strcmp@plt+0x384cb>
  43bc4d:	cmp    BYTE PTR [rbx+0x8],0x0
  43bc51:	je     43bc6f <strcmp@plt+0x384e7>
  43bc53:	mov    rdi,rbx
  43bc56:	call   403780 <free@plt>
  43bc5b:	mov    eax,0x1
  43bc60:	add    rsp,0x8
  43bc64:	pop    rbx
  43bc65:	pop    r12
  43bc67:	pop    r13
  43bc69:	pop    r14
  43bc6b:	pop    r15
  43bc6d:	pop    rbp
  43bc6e:	ret    
  43bc6f:	mov    rdi,rbx
  43bc72:	call   403780 <free@plt>
  43bc77:	xor    eax,eax
  43bc79:	jmp    43bc60 <strcmp@plt+0x384d8>
  43bc7b:	nop    DWORD PTR [rax+rax*1+0x0]
  43bc80:	push   r14
  43bc82:	push   rbx
  43bc83:	push   rax
  43bc84:	mov    rbx,rdi
  43bc87:	mov    rdi,rsi
  43bc8a:	call   4035b0 <xmlCharStrdup@plt>
  43bc8f:	mov    r14,rax
  43bc92:	mov    rdi,rbx
  43bc95:	call   403310 <xmlFirstElementChild@plt>
  43bc9a:	test   rax,rax
  43bc9d:	je     43bcd0 <strcmp@plt+0x38548>
  43bc9f:	mov    rbx,rax
  43bca2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bcac:	nop    DWORD PTR [rax+0x0]
  43bcb0:	mov    rdi,QWORD PTR [rbx+0x10]
  43bcb4:	mov    rsi,r14
  43bcb7:	call   403770 <xmlStrEqual@plt>
  43bcbc:	test   eax,eax
  43bcbe:	jne    43bcd2 <strcmp@plt+0x3854a>
  43bcc0:	mov    rdi,rbx
  43bcc3:	call   403210 <xmlNextElementSibling@plt>
  43bcc8:	mov    rbx,rax
  43bccb:	test   rax,rax
  43bcce:	jne    43bcb0 <strcmp@plt+0x38528>
  43bcd0:	xor    ebx,ebx
  43bcd2:	mov    rdi,r14
  43bcd5:	call   403780 <free@plt>
  43bcda:	mov    rax,rbx
  43bcdd:	add    rsp,0x8
  43bce1:	pop    rbx
  43bce2:	pop    r14
  43bce4:	ret    
  43bce5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bcef:	nop
  43bcf0:	push   r14
  43bcf2:	push   rbx
  43bcf3:	push   rax
  43bcf4:	mov    rbx,rdi
  43bcf7:	mov    r14,QWORD PTR [rdi+0x10]
  43bcfb:	nop    DWORD PTR [rax+rax*1+0x0]
  43bd00:	mov    rdi,rbx
  43bd03:	call   403210 <xmlNextElementSibling@plt>
  43bd08:	mov    rbx,rax
  43bd0b:	test   rax,rax
  43bd0e:	je     43bd20 <strcmp@plt+0x38598>
  43bd10:	mov    rdi,QWORD PTR [rbx+0x10]
  43bd14:	mov    rsi,r14
  43bd17:	call   403788 <strcmp@plt>
  43bd1c:	test   eax,eax
  43bd1e:	jne    43bd00 <strcmp@plt+0x38578>
  43bd20:	mov    rax,rbx
  43bd23:	add    rsp,0x8
  43bd27:	pop    rbx
  43bd28:	pop    r14
  43bd2a:	ret    
  43bd2b:	nop    DWORD PTR [rax+rax*1+0x0]
  43bd30:	push   r15
  43bd32:	push   r14
  43bd34:	push   r12
  43bd36:	push   rbx
  43bd37:	push   rax
  43bd38:	mov    r15,rdi
  43bd3b:	lea    rdi,[rip+0xcf78]        # 448cba <strcmp@plt+0x45532>
  43bd42:	call   4035b0 <xmlCharStrdup@plt>
  43bd47:	mov    r14,rax
  43bd4a:	mov    rdi,r15
  43bd4d:	call   403310 <xmlFirstElementChild@plt>
  43bd52:	test   rax,rax
  43bd55:	je     43bd80 <strcmp@plt+0x385f8>
  43bd57:	mov    rbx,rax
  43bd5a:	nop    WORD PTR [rax+rax*1+0x0]
  43bd60:	mov    rdi,QWORD PTR [rbx+0x10]
  43bd64:	mov    rsi,r14
  43bd67:	call   403770 <xmlStrEqual@plt>
  43bd6c:	test   eax,eax
  43bd6e:	jne    43bd82 <strcmp@plt+0x385fa>
  43bd70:	mov    rdi,rbx
  43bd73:	call   403210 <xmlNextElementSibling@plt>
  43bd78:	mov    rbx,rax
  43bd7b:	test   rax,rax
  43bd7e:	jne    43bd60 <strcmp@plt+0x385d8>
  43bd80:	xor    ebx,ebx
  43bd82:	mov    rdi,r14
  43bd85:	call   403780 <free@plt>
  43bd8a:	mov    rdi,rbx
  43bd8d:	call   403430 <xmlNodeGetContent@plt>
  43bd92:	mov    rbx,rax
  43bd95:	lea    rsi,[rip+0x1442d]        # 4501c9 <strcmp@plt+0x4ca41>
  43bd9c:	mov    rdi,rax
  43bd9f:	call   403788 <strcmp@plt>
  43bda4:	test   eax,eax
  43bda6:	je     43bdee <strcmp@plt+0x38666>
  43bda8:	lea    rsi,[rip+0x144ad]        # 45025c <strcmp@plt+0x4cad4>
  43bdaf:	mov    rdi,rbx
  43bdb2:	call   403788 <strcmp@plt>
  43bdb7:	test   eax,eax
  43bdb9:	je     43be42 <strcmp@plt+0x386ba>
  43bdbf:	lea    rsi,[rip+0xddb2]        # 449b78 <strcmp@plt+0x463f0>
  43bdc6:	mov    rdi,rbx
  43bdc9:	call   403788 <strcmp@plt>
  43bdce:	test   eax,eax
  43bdd0:	je     43beaf <strcmp@plt+0x38727>
  43bdd6:	lea    rax,[rip+0x28fd3]        # 464db0 <strcmp@plt+0x61628>
  43bddd:	cmp    DWORD PTR [rax],0x2
  43bde0:	jge    43bf99 <strcmp@plt+0x38811>
  43bde6:	xor    r14d,r14d
  43bde9:	jmp    43bfb2 <strcmp@plt+0x3882a>
  43bdee:	xor    ebx,ebx
  43bdf0:	xor    eax,eax
  43bdf2:	call   422f90 <strcmp@plt+0x1f808>
  43bdf7:	mov    r14,rax
  43bdfa:	lea    rdi,[rip+0x143c8]        # 4501c9 <strcmp@plt+0x4ca41>
  43be01:	call   4035b0 <xmlCharStrdup@plt>
  43be06:	mov    r12,rax
  43be09:	mov    rdi,r15
  43be0c:	call   403310 <xmlFirstElementChild@plt>
  43be11:	test   rax,rax
  43be14:	je     43be92 <strcmp@plt+0x3870a>
  43be1a:	mov    rbx,rax
  43be1d:	nop    DWORD PTR [rax]
  43be20:	mov    rdi,QWORD PTR [rbx+0x10]
  43be24:	mov    rsi,r12
  43be27:	call   403770 <xmlStrEqual@plt>
  43be2c:	test   eax,eax
  43be2e:	jne    43be92 <strcmp@plt+0x3870a>
  43be30:	mov    rdi,rbx
  43be33:	call   403210 <xmlNextElementSibling@plt>
  43be38:	mov    rbx,rax
  43be3b:	test   rax,rax
  43be3e:	jne    43be20 <strcmp@plt+0x38698>
  43be40:	jmp    43be90 <strcmp@plt+0x38708>
  43be42:	xor    ebx,ebx
  43be44:	xor    eax,eax
  43be46:	call   422f90 <strcmp@plt+0x1f808>
  43be4b:	mov    r14,rax
  43be4e:	lea    rdi,[rip+0x14407]        # 45025c <strcmp@plt+0x4cad4>
  43be55:	call   4035b0 <xmlCharStrdup@plt>
  43be5a:	mov    r12,rax
  43be5d:	mov    rdi,r15
  43be60:	call   403310 <xmlFirstElementChild@plt>
  43be65:	test   rax,rax
  43be68:	je     43be92 <strcmp@plt+0x3870a>
  43be6a:	mov    rbx,rax
  43be6d:	nop    DWORD PTR [rax]
  43be70:	mov    rdi,QWORD PTR [rbx+0x10]
  43be74:	mov    rsi,r12
  43be77:	call   403770 <xmlStrEqual@plt>
  43be7c:	test   eax,eax
  43be7e:	jne    43be92 <strcmp@plt+0x3870a>
  43be80:	mov    rdi,rbx
  43be83:	call   403210 <xmlNextElementSibling@plt>
  43be88:	mov    rbx,rax
  43be8b:	test   rax,rax
  43be8e:	jne    43be70 <strcmp@plt+0x386e8>
  43be90:	xor    ebx,ebx
  43be92:	mov    rdi,r12
  43be95:	call   403780 <free@plt>
  43be9a:	mov    rdi,rbx
  43be9d:	call   403430 <xmlNodeGetContent@plt>
  43bea2:	mov    rdi,rax
  43bea5:	mov    rsi,r14
  43bea8:	call   423c40 <strcmp@plt+0x204b8>
  43bead:	jmp    43beb2 <strcmp@plt+0x3872a>
  43beaf:	xor    r14d,r14d
  43beb2:	lea    rdi,[rip+0x130ce]        # 44ef87 <strcmp@plt+0x4b7ff>
  43beb9:	call   4035b0 <xmlCharStrdup@plt>
  43bebe:	mov    r12,rax
  43bec1:	mov    rdi,r15
  43bec4:	call   403310 <xmlFirstElementChild@plt>
  43bec9:	test   rax,rax
  43becc:	je     43bf00 <strcmp@plt+0x38778>
  43bece:	mov    rbx,rax
  43bed1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bedb:	nop    DWORD PTR [rax+rax*1+0x0]
  43bee0:	mov    rdi,QWORD PTR [rbx+0x10]
  43bee4:	mov    rsi,r12
  43bee7:	call   403770 <xmlStrEqual@plt>
  43beec:	test   eax,eax
  43beee:	jne    43bf0d <strcmp@plt+0x38785>
  43bef0:	mov    rdi,rbx
  43bef3:	call   403210 <xmlNextElementSibling@plt>
  43bef8:	mov    rbx,rax
  43befb:	test   rax,rax
  43befe:	jne    43bee0 <strcmp@plt+0x38758>
  43bf00:	mov    rdi,r12
  43bf03:	call   403780 <free@plt>
  43bf08:	jmp    43bfb2 <strcmp@plt+0x3882a>
  43bf0d:	mov    rdi,r12
  43bf10:	call   403780 <free@plt>
  43bf15:	lea    rdi,[rip+0x1306b]        # 44ef87 <strcmp@plt+0x4b7ff>
  43bf1c:	call   4035b0 <xmlCharStrdup@plt>
  43bf21:	mov    r12,rax
  43bf24:	mov    rdi,r15
  43bf27:	call   403310 <xmlFirstElementChild@plt>
  43bf2c:	test   rax,rax
  43bf2f:	je     43bf60 <strcmp@plt+0x387d8>
  43bf31:	mov    rbx,rax
  43bf34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bf3e:	xchg   ax,ax
  43bf40:	mov    rdi,QWORD PTR [rbx+0x10]
  43bf44:	mov    rsi,r12
  43bf47:	call   403770 <xmlStrEqual@plt>
  43bf4c:	test   eax,eax
  43bf4e:	jne    43bf62 <strcmp@plt+0x387da>
  43bf50:	mov    rdi,rbx
  43bf53:	call   403210 <xmlNextElementSibling@plt>
  43bf58:	mov    rbx,rax
  43bf5b:	test   rax,rax
  43bf5e:	jne    43bf40 <strcmp@plt+0x387b8>
  43bf60:	xor    ebx,ebx
  43bf62:	mov    rdi,r12
  43bf65:	call   403780 <free@plt>
  43bf6a:	mov    rdi,rbx
  43bf6d:	call   403430 <xmlNodeGetContent@plt>
  43bf72:	xor    esi,esi
  43bf74:	mov    edx,0xa
  43bf79:	mov    rdi,rax
  43bf7c:	call   403570 <strtol@plt>
  43bf81:	mov    rbx,rax
  43bf84:	mov    rdi,r14
  43bf87:	call   4231b0 <strcmp@plt+0x1fa28>
  43bf8c:	movzx  esi,bl
  43bf8f:	mov    rdi,r14
  43bf92:	call   424430 <strcmp@plt+0x20ca8>
  43bf97:	jmp    43bfb2 <strcmp@plt+0x3882a>
  43bf99:	lea    rsi,[rip+0x12fb4]        # 44ef54 <strcmp@plt+0x4b7cc>
  43bfa0:	xor    r14d,r14d
  43bfa3:	mov    edi,0x6
  43bfa8:	xor    eax,eax
  43bfaa:	mov    rdx,rbx
  43bfad:	call   42e800 <strcmp@plt+0x2b078>
  43bfb2:	mov    rax,r14
  43bfb5:	add    rsp,0x8
  43bfb9:	pop    rbx
  43bfba:	pop    r12
  43bfbc:	pop    r14
  43bfbe:	pop    r15
  43bfc0:	ret    
  43bfc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bfcb:	nop    DWORD PTR [rax+rax*1+0x0]
  43bfd0:	push   r15
  43bfd2:	push   r14
  43bfd4:	push   r13
  43bfd6:	push   r12
  43bfd8:	push   rbx
  43bfd9:	mov    r12,rdx
  43bfdc:	mov    r15,rsi
  43bfdf:	mov    r14,rdi
  43bfe2:	lea    rdi,[rip+0xccd1]        # 448cba <strcmp@plt+0x45532>
  43bfe9:	call   4035b0 <xmlCharStrdup@plt>
  43bfee:	mov    r13,rax
  43bff1:	mov    rdi,r14
  43bff4:	call   403310 <xmlFirstElementChild@plt>
  43bff9:	test   rax,rax
  43bffc:	je     43c030 <strcmp@plt+0x388a8>
  43bffe:	mov    rbx,rax
  43c001:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c00b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c010:	mov    rdi,QWORD PTR [rbx+0x10]
  43c014:	mov    rsi,r13
  43c017:	call   403770 <xmlStrEqual@plt>
  43c01c:	test   eax,eax
  43c01e:	jne    43c032 <strcmp@plt+0x388aa>
  43c020:	mov    rdi,rbx
  43c023:	call   403210 <xmlNextElementSibling@plt>
  43c028:	mov    rbx,rax
  43c02b:	test   rax,rax
  43c02e:	jne    43c010 <strcmp@plt+0x38888>
  43c030:	xor    ebx,ebx
  43c032:	mov    rdi,r13
  43c035:	call   403780 <free@plt>
  43c03a:	mov    rdi,rbx
  43c03d:	call   403430 <xmlNodeGetContent@plt>
  43c042:	mov    r13,rax
  43c045:	lea    rsi,[rip+0x1417d]        # 4501c9 <strcmp@plt+0x4ca41>
  43c04c:	mov    rdi,rax
  43c04f:	call   403788 <strcmp@plt>
  43c054:	test   eax,eax
  43c056:	je     43c0b8 <strcmp@plt+0x38930>
  43c058:	lea    rsi,[rip+0x141fd]        # 45025c <strcmp@plt+0x4cad4>
  43c05f:	mov    rdi,r13
  43c062:	call   403788 <strcmp@plt>
  43c067:	test   eax,eax
  43c069:	je     43c102 <strcmp@plt+0x3897a>
  43c06f:	lea    rsi,[rip+0xdb02]        # 449b78 <strcmp@plt+0x463f0>
  43c076:	mov    rdi,r13
  43c079:	call   403788 <strcmp@plt>
  43c07e:	test   eax,eax
  43c080:	je     43c27f <strcmp@plt+0x38af7>
  43c086:	lea    rax,[rip+0x28d23]        # 464db0 <strcmp@plt+0x61628>
  43c08d:	cmp    DWORD PTR [rax],0x2
  43c090:	jl     43c0a8 <strcmp@plt+0x38920>
  43c092:	lea    rsi,[rip+0x12f33]        # 44efcc <strcmp@plt+0x4b844>
  43c099:	mov    edi,0x6
  43c09e:	xor    eax,eax
  43c0a0:	mov    rdx,r13
  43c0a3:	call   42e800 <strcmp@plt+0x2b078>
  43c0a8:	mov    rdi,r13
  43c0ab:	call   403780 <free@plt>
  43c0b0:	xor    r15d,r15d
  43c0b3:	jmp    43c272 <strcmp@plt+0x38aea>
  43c0b8:	lea    rdi,[rip+0x1410a]        # 4501c9 <strcmp@plt+0x4ca41>
  43c0bf:	call   4035b0 <xmlCharStrdup@plt>
  43c0c4:	mov    r15,rax
  43c0c7:	mov    rdi,r14
  43c0ca:	call   403310 <xmlFirstElementChild@plt>
  43c0cf:	test   rax,rax
  43c0d2:	je     43c150 <strcmp@plt+0x389c8>
  43c0d4:	mov    rbx,rax
  43c0d7:	nop    WORD PTR [rax+rax*1+0x0]
  43c0e0:	mov    rdi,QWORD PTR [rbx+0x10]
  43c0e4:	mov    rsi,r15
  43c0e7:	call   403770 <xmlStrEqual@plt>
  43c0ec:	test   eax,eax
  43c0ee:	jne    43c152 <strcmp@plt+0x389ca>
  43c0f0:	mov    rdi,rbx
  43c0f3:	call   403210 <xmlNextElementSibling@plt>
  43c0f8:	mov    rbx,rax
  43c0fb:	test   rax,rax
  43c0fe:	jne    43c0e0 <strcmp@plt+0x38958>
  43c100:	jmp    43c150 <strcmp@plt+0x389c8>
  43c102:	lea    rdi,[rip+0x14153]        # 45025c <strcmp@plt+0x4cad4>
  43c109:	call   4035b0 <xmlCharStrdup@plt>
  43c10e:	mov    r15,rax
  43c111:	mov    rdi,r14
  43c114:	call   403310 <xmlFirstElementChild@plt>
  43c119:	test   rax,rax
  43c11c:	je     43c150 <strcmp@plt+0x389c8>
  43c11e:	mov    rbx,rax
  43c121:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c12b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c130:	mov    rdi,QWORD PTR [rbx+0x10]
  43c134:	mov    rsi,r15
  43c137:	call   403770 <xmlStrEqual@plt>
  43c13c:	test   eax,eax
  43c13e:	jne    43c152 <strcmp@plt+0x389ca>
  43c140:	mov    rdi,rbx
  43c143:	call   403210 <xmlNextElementSibling@plt>
  43c148:	mov    rbx,rax
  43c14b:	test   rax,rax
  43c14e:	jne    43c130 <strcmp@plt+0x389a8>
  43c150:	xor    ebx,ebx
  43c152:	mov    rdi,r15
  43c155:	call   403780 <free@plt>
  43c15a:	mov    rdi,rbx
  43c15d:	call   403430 <xmlNodeGetContent@plt>
  43c162:	mov    r15,rax
  43c165:	mov    rdi,r13
  43c168:	call   403780 <free@plt>
  43c16d:	lea    rdi,[rip+0x12e13]        # 44ef87 <strcmp@plt+0x4b7ff>
  43c174:	call   4035b0 <xmlCharStrdup@plt>
  43c179:	mov    r12,rax
  43c17c:	mov    rdi,r14
  43c17f:	call   403310 <xmlFirstElementChild@plt>
  43c184:	test   rax,rax
  43c187:	je     43c1b0 <strcmp@plt+0x38a28>
  43c189:	mov    rbx,rax
  43c18c:	nop    DWORD PTR [rax+0x0]
  43c190:	mov    rdi,QWORD PTR [rbx+0x10]
  43c194:	mov    rsi,r12
  43c197:	call   403770 <xmlStrEqual@plt>
  43c19c:	test   eax,eax
  43c19e:	jne    43c1bd <strcmp@plt+0x38a35>
  43c1a0:	mov    rdi,rbx
  43c1a3:	call   403210 <xmlNextElementSibling@plt>
  43c1a8:	mov    rbx,rax
  43c1ab:	test   rax,rax
  43c1ae:	jne    43c190 <strcmp@plt+0x38a08>
  43c1b0:	mov    rdi,r12
  43c1b3:	call   403780 <free@plt>
  43c1b8:	jmp    43c272 <strcmp@plt+0x38aea>
  43c1bd:	mov    rdi,r12
  43c1c0:	call   403780 <free@plt>
  43c1c5:	lea    rdi,[rip+0x12dbb]        # 44ef87 <strcmp@plt+0x4b7ff>
  43c1cc:	call   4035b0 <xmlCharStrdup@plt>
  43c1d1:	mov    r12,rax
  43c1d4:	mov    rdi,r14
  43c1d7:	call   403310 <xmlFirstElementChild@plt>
  43c1dc:	test   rax,rax
  43c1df:	je     43c210 <strcmp@plt+0x38a88>
  43c1e1:	mov    rbx,rax
  43c1e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c1ee:	xchg   ax,ax
  43c1f0:	mov    rdi,QWORD PTR [rbx+0x10]
  43c1f4:	mov    rsi,r12
  43c1f7:	call   403770 <xmlStrEqual@plt>
  43c1fc:	test   eax,eax
  43c1fe:	jne    43c212 <strcmp@plt+0x38a8a>
  43c200:	mov    rdi,rbx
  43c203:	call   403210 <xmlNextElementSibling@plt>
  43c208:	mov    rbx,rax
  43c20b:	test   rax,rax
  43c20e:	jne    43c1f0 <strcmp@plt+0x38a68>
  43c210:	xor    ebx,ebx
  43c212:	mov    rdi,r12
  43c215:	call   403780 <free@plt>
  43c21a:	mov    rdi,rbx
  43c21d:	call   403430 <xmlNodeGetContent@plt>
  43c222:	mov    rbx,rax
  43c225:	mov    rdi,r15
  43c228:	call   4031e0 <strlen@plt>
  43c22d:	mov    r14,rax
  43c230:	mov    rdi,rbx
  43c233:	call   4031e0 <strlen@plt>
  43c238:	lea    rdi,[r14+rax*1]
  43c23c:	add    rdi,0x2
  43c240:	call   4320b0 <strcmp@plt+0x2e928>
  43c245:	mov    r14,rax
  43c248:	lea    rsi,[rip+0x708a]        # 4432d9 <strcmp@plt+0x3fb51>
  43c24f:	xor    eax,eax
  43c251:	mov    rdi,r14
  43c254:	mov    rdx,r15
  43c257:	mov    rcx,rbx
  43c25a:	call   4030b0 <sprintf@plt>
  43c25f:	mov    rdi,r15
  43c262:	call   403780 <free@plt>
  43c267:	mov    rdi,rbx
  43c26a:	call   403780 <free@plt>
  43c26f:	mov    r15,r14
  43c272:	mov    rax,r15
  43c275:	pop    rbx
  43c276:	pop    r12
  43c278:	pop    r13
  43c27a:	pop    r14
  43c27c:	pop    r15
  43c27e:	ret    
  43c27f:	mov    rdi,r13
  43c282:	call   403780 <free@plt>
  43c287:	lea    rdi,[rip+0xd8ea]        # 449b78 <strcmp@plt+0x463f0>
  43c28e:	call   4035b0 <xmlCharStrdup@plt>
  43c293:	mov    r13,rax
  43c296:	mov    rdi,r14
  43c299:	call   403310 <xmlFirstElementChild@plt>
  43c29e:	test   rax,rax
  43c2a1:	je     43c2d0 <strcmp@plt+0x38b48>
  43c2a3:	mov    rbx,rax
  43c2a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c2b0:	mov    rdi,QWORD PTR [rbx+0x10]
  43c2b4:	mov    rsi,r13
  43c2b7:	call   403770 <xmlStrEqual@plt>
  43c2bc:	test   eax,eax
  43c2be:	jne    43c2d2 <strcmp@plt+0x38b4a>
  43c2c0:	mov    rdi,rbx
  43c2c3:	call   403210 <xmlNextElementSibling@plt>
  43c2c8:	mov    rbx,rax
  43c2cb:	test   rax,rax
  43c2ce:	jne    43c2b0 <strcmp@plt+0x38b28>
  43c2d0:	xor    ebx,ebx
  43c2d2:	mov    rdi,r13
  43c2d5:	call   403780 <free@plt>
  43c2da:	mov    rdi,rbx
  43c2dd:	call   43c340 <strcmp@plt+0x38bb8>
  43c2e2:	test   rax,rax
  43c2e5:	je     43c311 <strcmp@plt+0x38b89>
  43c2e7:	mov    rbx,rax
  43c2ea:	mov    rdi,r15
  43c2ed:	call   403700 <strdup@plt>
  43c2f2:	mov    rdi,r12
  43c2f5:	mov    rsi,rax
  43c2f8:	mov    rdx,rbx
  43c2fb:	call   4362a0 <strcmp@plt+0x32b18>
  43c300:	mov    rdi,r15
  43c303:	pop    rbx
  43c304:	pop    r12
  43c306:	pop    r13
  43c308:	pop    r14
  43c30a:	pop    r15
  43c30c:	jmp    403700 <strdup@plt>
  43c311:	lea    rax,[rip+0x28a98]        # 464db0 <strcmp@plt+0x61628>
  43c318:	cmp    DWORD PTR [rax],0x2
  43c31b:	jge    43c325 <strcmp@plt+0x38b9d>
  43c31d:	xor    r15d,r15d
  43c320:	jmp    43c272 <strcmp@plt+0x38aea>
  43c325:	lea    rsi,[rip+0x12c60]        # 44ef8c <strcmp@plt+0x4b804>
  43c32c:	xor    r15d,r15d
  43c32f:	mov    edi,0x6
  43c334:	xor    eax,eax
  43c336:	call   42e800 <strcmp@plt+0x2b078>
  43c33b:	jmp    43c272 <strcmp@plt+0x38aea>
  43c340:	push   rbp
  43c341:	push   r15
  43c343:	push   r14
  43c345:	push   r13
  43c347:	push   r12
  43c349:	push   rbx
  43c34a:	sub    rsp,0x28
  43c34e:	mov    r13,rdi
  43c351:	lea    rdi,[rip+0x12cb8]        # 44f010 <strcmp@plt+0x4b888>
  43c358:	call   4035b0 <xmlCharStrdup@plt>
  43c35d:	mov    rbp,rax
  43c360:	mov    rdi,r13
  43c363:	call   403310 <xmlFirstElementChild@plt>
  43c368:	test   rax,rax
  43c36b:	je     43c390 <strcmp@plt+0x38c08>
  43c36d:	mov    rbx,rax
  43c370:	mov    rdi,QWORD PTR [rbx+0x10]
  43c374:	mov    rsi,rbp
  43c377:	call   403770 <xmlStrEqual@plt>
  43c37c:	test   eax,eax
  43c37e:	jne    43c392 <strcmp@plt+0x38c0a>
  43c380:	mov    rdi,rbx
  43c383:	call   403210 <xmlNextElementSibling@plt>
  43c388:	mov    rbx,rax
  43c38b:	test   rax,rax
  43c38e:	jne    43c370 <strcmp@plt+0x38be8>
  43c390:	xor    ebx,ebx
  43c392:	mov    rdi,rbp
  43c395:	call   403780 <free@plt>
  43c39a:	mov    rdi,rbx
  43c39d:	call   403430 <xmlNodeGetContent@plt>
  43c3a2:	mov    r12,rax
  43c3a5:	lea    rsi,[rip+0x12c6e]        # 44f01a <strcmp@plt+0x4b892>
  43c3ac:	mov    rdi,rax
  43c3af:	call   403788 <strcmp@plt>
  43c3b4:	test   eax,eax
  43c3b6:	je     43c3d0 <strcmp@plt+0x38c48>
  43c3b8:	lea    rax,[rip+0x289f1]        # 464db0 <strcmp@plt+0x61628>
  43c3bf:	cmp    DWORD PTR [rax],0x2
  43c3c2:	jge    43c48d <strcmp@plt+0x38d05>
  43c3c8:	xor    r14d,r14d
  43c3cb:	jmp    43c67d <strcmp@plt+0x38ef5>
  43c3d0:	xor    ebp,ebp
  43c3d2:	xor    eax,eax
  43c3d4:	call   428160 <strcmp@plt+0x249d8>
  43c3d9:	mov    r14,rax
  43c3dc:	mov    rdi,rax
  43c3df:	call   423b30 <strcmp@plt+0x203a8>
  43c3e4:	mov    QWORD PTR [rsp+0x20],rax
  43c3e9:	lea    rdi,[rip+0x12c2a]        # 44f01a <strcmp@plt+0x4b892>
  43c3f0:	call   4035b0 <xmlCharStrdup@plt>
  43c3f5:	mov    rbx,rax
  43c3f8:	mov    rdi,r13
  43c3fb:	call   403310 <xmlFirstElementChild@plt>
  43c400:	test   rax,rax
  43c403:	je     43c432 <strcmp@plt+0x38caa>
  43c405:	mov    rbp,rax
  43c408:	nop    DWORD PTR [rax+rax*1+0x0]
  43c410:	mov    rdi,QWORD PTR [rbp+0x10]
  43c414:	mov    rsi,rbx
  43c417:	call   403770 <xmlStrEqual@plt>
  43c41c:	test   eax,eax
  43c41e:	jne    43c432 <strcmp@plt+0x38caa>
  43c420:	mov    rdi,rbp
  43c423:	call   403210 <xmlNextElementSibling@plt>
  43c428:	mov    rbp,rax
  43c42b:	test   rax,rax
  43c42e:	jne    43c410 <strcmp@plt+0x38c88>
  43c430:	xor    ebp,ebp
  43c432:	mov    rdi,rbx
  43c435:	call   403780 <free@plt>
  43c43a:	lea    rdi,[rip+0x12bef]        # 44f030 <strcmp@plt+0x4b8a8>
  43c441:	call   4035b0 <xmlCharStrdup@plt>
  43c446:	mov    r15,rax
  43c449:	mov    rdi,rbp
  43c44c:	call   403310 <xmlFirstElementChild@plt>
  43c451:	test   rax,rax
  43c454:	je     43c480 <strcmp@plt+0x38cf8>
  43c456:	mov    rbx,rax
  43c459:	nop    DWORD PTR [rax+0x0]
  43c460:	mov    rdi,QWORD PTR [rbx+0x10]
  43c464:	mov    rsi,r15
  43c467:	call   403770 <xmlStrEqual@plt>
  43c46c:	test   eax,eax
  43c46e:	jne    43c4ab <strcmp@plt+0x38d23>
  43c470:	mov    rdi,rbx
  43c473:	call   403210 <xmlNextElementSibling@plt>
  43c478:	mov    rbx,rax
  43c47b:	test   rax,rax
  43c47e:	jne    43c460 <strcmp@plt+0x38cd8>
  43c480:	mov    rdi,r15
  43c483:	call   403780 <free@plt>
  43c488:	jmp    43c675 <strcmp@plt+0x38eed>
  43c48d:	lea    rsi,[rip+0x12bc2]        # 44f056 <strcmp@plt+0x4b8ce>
  43c494:	xor    r14d,r14d
  43c497:	mov    edi,0x6
  43c49c:	xor    eax,eax
  43c49e:	mov    rdx,r12
  43c4a1:	call   42e800 <strcmp@plt+0x2b078>
  43c4a6:	jmp    43c67d <strcmp@plt+0x38ef5>
  43c4ab:	mov    rdi,r15
  43c4ae:	call   403780 <free@plt>
  43c4b3:	lea    rax,[rip+0x9662]        # 445b1c <strcmp@plt+0x42394>
  43c4ba:	xor    r13d,r13d
  43c4bd:	xor    ecx,ecx
  43c4bf:	mov    QWORD PTR [rsp+0x10],rcx
  43c4c4:	xor    ecx,ecx
  43c4c6:	mov    QWORD PTR [rsp+0x8],rcx
  43c4cb:	jmp    43c4d4 <strcmp@plt+0x38d4c>
  43c4cd:	lea    rax,[rip+0x9648]        # 445b1c <strcmp@plt+0x42394>
  43c4d4:	mov    rdi,rax
  43c4d7:	call   4035b0 <xmlCharStrdup@plt>
  43c4dc:	mov    r15,rax
  43c4df:	mov    rdi,rbx
  43c4e2:	call   403310 <xmlFirstElementChild@plt>
  43c4e7:	test   rax,rax
  43c4ea:	mov    QWORD PTR [rsp+0x18],r13
  43c4ef:	je     43c520 <strcmp@plt+0x38d98>
  43c4f1:	mov    rbp,rax
  43c4f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c4fe:	xchg   ax,ax
  43c500:	mov    rdi,QWORD PTR [rbp+0x10]
  43c504:	mov    rsi,r15
  43c507:	call   403770 <xmlStrEqual@plt>
  43c50c:	test   eax,eax
  43c50e:	jne    43c522 <strcmp@plt+0x38d9a>
  43c510:	mov    rdi,rbp
  43c513:	call   403210 <xmlNextElementSibling@plt>
  43c518:	mov    rbp,rax
  43c51b:	test   rax,rax
  43c51e:	jne    43c500 <strcmp@plt+0x38d78>
  43c520:	xor    ebp,ebp
  43c522:	mov    rdi,r15
  43c525:	call   403780 <free@plt>
  43c52a:	mov    rdi,rbp
  43c52d:	call   403430 <xmlNodeGetContent@plt>
  43c532:	mov    rbp,rax
  43c535:	xor    eax,eax
  43c537:	call   422f90 <strcmp@plt+0x1f808>
  43c53c:	mov    r15,rax
  43c53f:	mov    rdi,rbp
  43c542:	mov    rsi,rax
  43c545:	call   423c40 <strcmp@plt+0x204b8>
  43c54a:	mov    rdi,rbp
  43c54d:	call   403780 <free@plt>
  43c552:	lea    rdi,[rip+0x12adb]        # 44f034 <strcmp@plt+0x4b8ac>
  43c559:	call   4035b0 <xmlCharStrdup@plt>
  43c55e:	mov    r13,rax
  43c561:	mov    rdi,rbx
  43c564:	call   403310 <xmlFirstElementChild@plt>
  43c569:	test   rax,rax
  43c56c:	je     43c5a0 <strcmp@plt+0x38e18>
  43c56e:	mov    rbp,rax
  43c571:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c57b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c580:	mov    rdi,QWORD PTR [rbp+0x10]
  43c584:	mov    rsi,r13
  43c587:	call   403770 <xmlStrEqual@plt>
  43c58c:	test   eax,eax
  43c58e:	jne    43c5a2 <strcmp@plt+0x38e1a>
  43c590:	mov    rdi,rbp
  43c593:	call   403210 <xmlNextElementSibling@plt>
  43c598:	mov    rbp,rax
  43c59b:	test   rax,rax
  43c59e:	jne    43c580 <strcmp@plt+0x38df8>
  43c5a0:	xor    ebp,ebp
  43c5a2:	mov    rdi,r13
  43c5a5:	call   403780 <free@plt>
  43c5aa:	mov    rdi,rbp
  43c5ad:	call   403430 <xmlNodeGetContent@plt>
  43c5b2:	mov    rbp,rax
  43c5b5:	mov    rdi,rax
  43c5b8:	lea    rsi,[rip+0x12a7e]        # 44f03d <strcmp@plt+0x4b8b5>
  43c5bf:	call   4030d0 <strstr@plt>
  43c5c4:	test   rax,rax
  43c5c7:	mov    r13,QWORD PTR [rsp+0x18]
  43c5cc:	je     43c5d1 <strcmp@plt+0x38e49>
  43c5ce:	mov    r13b,0x1
  43c5d1:	mov    rdi,rbp
  43c5d4:	lea    rsi,[rip+0x12a69]        # 44f044 <strcmp@plt+0x4b8bc>
  43c5db:	call   4030d0 <strstr@plt>
  43c5e0:	test   rax,rax
  43c5e3:	je     43c5ec <strcmp@plt+0x38e64>
  43c5e5:	mov    al,0x1
  43c5e7:	mov    QWORD PTR [rsp+0x10],rax
  43c5ec:	mov    rdi,rbp
  43c5ef:	lea    rsi,[rip+0x12a59]        # 44f04f <strcmp@plt+0x4b8c7>
  43c5f6:	call   4030d0 <strstr@plt>
  43c5fb:	test   rax,rax
  43c5fe:	je     43c607 <strcmp@plt+0x38e7f>
  43c600:	mov    al,0x1
  43c602:	mov    QWORD PTR [rsp+0x8],rax
  43c607:	mov    rdi,rbp
  43c60a:	call   403780 <free@plt>
  43c60f:	movzx  esi,r13b
  43c613:	movzx  edx,BYTE PTR [rsp+0x10]
  43c618:	movzx  ecx,BYTE PTR [rsp+0x8]
  43c61d:	mov    rdi,r15
  43c620:	call   4282b0 <strcmp@plt+0x24b28>
  43c625:	test   rax,rax
  43c628:	je     43c637 <strcmp@plt+0x38eaf>
  43c62a:	mov    rdi,QWORD PTR [rsp+0x20]
  43c62f:	mov    rsi,rax
  43c632:	call   428330 <strcmp@plt+0x24ba8>
  43c637:	mov    rdi,r15
  43c63a:	call   422fa0 <strcmp@plt+0x1f818>
  43c63f:	mov    rbp,QWORD PTR [rbx+0x10]
  43c643:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c64d:	nop    DWORD PTR [rax]
  43c650:	mov    rdi,rbx
  43c653:	call   403210 <xmlNextElementSibling@plt>
  43c658:	test   rax,rax
  43c65b:	je     43c675 <strcmp@plt+0x38eed>
  43c65d:	mov    rbx,rax
  43c660:	mov    rdi,QWORD PTR [rax+0x10]
  43c664:	mov    rsi,rbp
  43c667:	call   403788 <strcmp@plt>
  43c66c:	test   eax,eax
  43c66e:	jne    43c650 <strcmp@plt+0x38ec8>
  43c670:	jmp    43c4cd <strcmp@plt+0x38d45>
  43c675:	mov    rdi,r12
  43c678:	call   403780 <free@plt>
  43c67d:	mov    rax,r14
  43c680:	add    rsp,0x28
  43c684:	pop    rbx
  43c685:	pop    r12
  43c687:	pop    r13
  43c689:	pop    r14
  43c68b:	pop    r15
  43c68d:	pop    rbp
  43c68e:	ret    
  43c68f:	nop
  43c690:	push   r15
  43c692:	push   r14
  43c694:	push   rbx
  43c695:	mov    r14,rdi
  43c698:	lea    rdi,[rip+0x12965]        # 44f004 <strcmp@plt+0x4b87c>
  43c69f:	call   4035b0 <xmlCharStrdup@plt>
  43c6a4:	mov    r15,rax
  43c6a7:	mov    rdi,r14
  43c6aa:	call   403310 <xmlFirstElementChild@plt>
  43c6af:	test   rax,rax
  43c6b2:	je     43c6e0 <strcmp@plt+0x38f58>
  43c6b4:	mov    rbx,rax
  43c6b7:	nop    WORD PTR [rax+rax*1+0x0]
  43c6c0:	mov    rdi,QWORD PTR [rbx+0x10]
  43c6c4:	mov    rsi,r15
  43c6c7:	call   403770 <xmlStrEqual@plt>
  43c6cc:	test   eax,eax
  43c6ce:	jne    43c6ec <strcmp@plt+0x38f64>
  43c6d0:	mov    rdi,rbx
  43c6d3:	call   403210 <xmlNextElementSibling@plt>
  43c6d8:	mov    rbx,rax
  43c6db:	test   rax,rax
  43c6de:	jne    43c6c0 <strcmp@plt+0x38f38>
  43c6e0:	mov    rdi,r15
  43c6e3:	call   403780 <free@plt>
  43c6e8:	xor    eax,eax
  43c6ea:	jmp    43c761 <strcmp@plt+0x38fd9>
  43c6ec:	mov    rdi,r15
  43c6ef:	call   403780 <free@plt>
  43c6f4:	lea    rdi,[rip+0x12909]        # 44f004 <strcmp@plt+0x4b87c>
  43c6fb:	call   4035b0 <xmlCharStrdup@plt>
  43c700:	mov    r15,rax
  43c703:	mov    rdi,r14
  43c706:	call   403310 <xmlFirstElementChild@plt>
  43c70b:	test   rax,rax
  43c70e:	je     43c740 <strcmp@plt+0x38fb8>
  43c710:	mov    rbx,rax
  43c713:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c71d:	nop    DWORD PTR [rax]
  43c720:	mov    rdi,QWORD PTR [rbx+0x10]
  43c724:	mov    rsi,r15
  43c727:	call   403770 <xmlStrEqual@plt>
  43c72c:	test   eax,eax
  43c72e:	jne    43c742 <strcmp@plt+0x38fba>
  43c730:	mov    rdi,rbx
  43c733:	call   403210 <xmlNextElementSibling@plt>
  43c738:	mov    rbx,rax
  43c73b:	test   rax,rax
  43c73e:	jne    43c720 <strcmp@plt+0x38f98>
  43c740:	xor    ebx,ebx
  43c742:	mov    rdi,r15
  43c745:	call   403780 <free@plt>
  43c74a:	mov    rdi,rbx
  43c74d:	call   403430 <xmlNodeGetContent@plt>
  43c752:	xor    esi,esi
  43c754:	mov    edx,0xa
  43c759:	mov    rdi,rax
  43c75c:	call   403570 <strtol@plt>
  43c761:	pop    rbx
  43c762:	pop    r14
  43c764:	pop    r15
  43c766:	ret    
  43c767:	nop    WORD PTR [rax+rax*1+0x0]
  43c770:	push   rbp
  43c771:	push   r15
  43c773:	push   r14
  43c775:	push   r13
  43c777:	push   r12
  43c779:	push   rbx
  43c77a:	sub    rsp,0x38
  43c77e:	mov    r14,rsi
  43c781:	mov    r12,rdi
  43c784:	lea    rdi,[rip+0x12882]        # 44f00d <strcmp@plt+0x4b885>
  43c78b:	call   4035b0 <xmlCharStrdup@plt>
  43c790:	mov    rbp,rax
  43c793:	mov    rdi,r12
  43c796:	call   403310 <xmlFirstElementChild@plt>
  43c79b:	test   rax,rax
  43c79e:	je     43c7d0 <strcmp@plt+0x39048>
  43c7a0:	mov    rbx,rax
  43c7a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c7ad:	nop    DWORD PTR [rax]
  43c7b0:	mov    rdi,QWORD PTR [rbx+0x10]
  43c7b4:	mov    rsi,rbp
  43c7b7:	call   403770 <xmlStrEqual@plt>
  43c7bc:	test   eax,eax
  43c7be:	jne    43c7d2 <strcmp@plt+0x3904a>
  43c7c0:	mov    rdi,rbx
  43c7c3:	call   403210 <xmlNextElementSibling@plt>
  43c7c8:	mov    rbx,rax
  43c7cb:	test   rax,rax
  43c7ce:	jne    43c7b0 <strcmp@plt+0x39028>
  43c7d0:	xor    ebx,ebx
  43c7d2:	mov    rdi,rbp
  43c7d5:	call   403780 <free@plt>
  43c7da:	mov    rdi,rbx
  43c7dd:	call   403430 <xmlNodeGetContent@plt>
  43c7e2:	mov    r15,rax
  43c7e5:	lea    rdi,[rip+0x128a8]        # 44f094 <strcmp@plt+0x4b90c>
  43c7ec:	call   4035b0 <xmlCharStrdup@plt>
  43c7f1:	mov    rbx,rax
  43c7f4:	mov    rdi,r12
  43c7f7:	call   403310 <xmlFirstElementChild@plt>
  43c7fc:	test   rax,rax
  43c7ff:	je     43c830 <strcmp@plt+0x390a8>
  43c801:	mov    rbp,rax
  43c804:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c80e:	xchg   ax,ax
  43c810:	mov    rdi,QWORD PTR [rbp+0x10]
  43c814:	mov    rsi,rbx
  43c817:	call   403770 <xmlStrEqual@plt>
  43c81c:	test   eax,eax
  43c81e:	jne    43c832 <strcmp@plt+0x390aa>
  43c820:	mov    rdi,rbp
  43c823:	call   403210 <xmlNextElementSibling@plt>
  43c828:	mov    rbp,rax
  43c82b:	test   rax,rax
  43c82e:	jne    43c810 <strcmp@plt+0x39088>
  43c830:	xor    ebp,ebp
  43c832:	mov    rdi,rbx
  43c835:	call   403780 <free@plt>
  43c83a:	mov    rdi,rbp
  43c83d:	mov    rsi,r15
  43c840:	mov    rdx,r14
  43c843:	call   43bfd0 <strcmp@plt+0x38848>
  43c848:	mov    rbx,rax
  43c84b:	mov    rdi,r15
  43c84e:	call   403780 <free@plt>
  43c853:	test   rbx,rbx
  43c856:	je     43c92d <strcmp@plt+0x391a5>
  43c85c:	xor    eax,eax
  43c85e:	call   4047c0 <strcmp@plt+0x1038>
  43c863:	test   rax,rax
  43c866:	je     43c954 <strcmp@plt+0x391cc>
  43c86c:	mov    r15,rax
  43c86f:	mov    QWORD PTR [rax],rbx
  43c872:	lea    rdi,[rip+0x1281b]        # 44f094 <strcmp@plt+0x4b90c>
  43c879:	call   4035b0 <xmlCharStrdup@plt>
  43c87e:	mov    rbx,rax
  43c881:	mov    rdi,r12
  43c884:	call   403310 <xmlFirstElementChild@plt>
  43c889:	test   rax,rax
  43c88c:	je     43c8c0 <strcmp@plt+0x39138>
  43c88e:	mov    rbp,rax
  43c891:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c89b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c8a0:	mov    rdi,QWORD PTR [rbp+0x10]
  43c8a4:	mov    rsi,rbx
  43c8a7:	call   403770 <xmlStrEqual@plt>
  43c8ac:	test   eax,eax
  43c8ae:	jne    43c8c2 <strcmp@plt+0x3913a>
  43c8b0:	mov    rdi,rbp
  43c8b3:	call   403210 <xmlNextElementSibling@plt>
  43c8b8:	mov    rbp,rax
  43c8bb:	test   rax,rax
  43c8be:	jne    43c8a0 <strcmp@plt+0x39118>
  43c8c0:	xor    ebp,ebp
  43c8c2:	mov    rdi,rbx
  43c8c5:	call   403780 <free@plt>
  43c8ca:	mov    rdi,rbp
  43c8cd:	call   43c690 <strcmp@plt+0x38f08>
  43c8d2:	mov    DWORD PTR [r15+0xc],eax
  43c8d6:	lea    rdi,[rip+0x127fb]        # 44f0d8 <strcmp@plt+0x4b950>
  43c8dd:	call   4035b0 <xmlCharStrdup@plt>
  43c8e2:	mov    rbx,rax
  43c8e5:	mov    rdi,r12
  43c8e8:	call   403310 <xmlFirstElementChild@plt>
  43c8ed:	test   rax,rax
  43c8f0:	je     43c920 <strcmp@plt+0x39198>
  43c8f2:	mov    rbp,rax
  43c8f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c8ff:	nop
  43c900:	mov    rdi,QWORD PTR [rbp+0x10]
  43c904:	mov    rsi,rbx
  43c907:	call   403770 <xmlStrEqual@plt>
  43c90c:	test   eax,eax
  43c90e:	jne    43c964 <strcmp@plt+0x391dc>
  43c910:	mov    rdi,rbp
  43c913:	call   403210 <xmlNextElementSibling@plt>
  43c918:	mov    rbp,rax
  43c91b:	test   rax,rax
  43c91e:	jne    43c900 <strcmp@plt+0x39178>
  43c920:	mov    rdi,rbx
  43c923:	call   403780 <free@plt>
  43c928:	jmp    43c9d5 <strcmp@plt+0x3924d>
  43c92d:	lea    rax,[rip+0x2847c]        # 464db0 <strcmp@plt+0x61628>
  43c934:	cmp    DWORD PTR [rax],0x0
  43c937:	jle    43c95c <strcmp@plt+0x391d4>
  43c939:	lea    rsi,[rip+0x12760]        # 44f0a0 <strcmp@plt+0x4b918>
  43c940:	xor    r15d,r15d
  43c943:	mov    edi,0x5
  43c948:	xor    eax,eax
  43c94a:	call   42e800 <strcmp@plt+0x2b078>
  43c94f:	jmp    43ca79 <strcmp@plt+0x392f1>
  43c954:	mov    rdi,rbx
  43c957:	call   403780 <free@plt>
  43c95c:	xor    r15d,r15d
  43c95f:	jmp    43ca79 <strcmp@plt+0x392f1>
  43c964:	mov    rdi,rbx
  43c967:	call   403780 <free@plt>
  43c96c:	lea    rdi,[rip+0x12765]        # 44f0d8 <strcmp@plt+0x4b950>
  43c973:	call   4035b0 <xmlCharStrdup@plt>
  43c978:	mov    rbx,rax
  43c97b:	mov    rdi,r12
  43c97e:	call   403310 <xmlFirstElementChild@plt>
  43c983:	test   rax,rax
  43c986:	je     43c9b0 <strcmp@plt+0x39228>
  43c988:	mov    rbp,rax
  43c98b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c990:	mov    rdi,QWORD PTR [rbp+0x10]
  43c994:	mov    rsi,rbx
  43c997:	call   403770 <xmlStrEqual@plt>
  43c99c:	test   eax,eax
  43c99e:	jne    43c9b2 <strcmp@plt+0x3922a>
  43c9a0:	mov    rdi,rbp
  43c9a3:	call   403210 <xmlNextElementSibling@plt>
  43c9a8:	mov    rbp,rax
  43c9ab:	test   rax,rax
  43c9ae:	jne    43c990 <strcmp@plt+0x39208>
  43c9b0:	xor    ebp,ebp
  43c9b2:	mov    rdi,rbx
  43c9b5:	call   403780 <free@plt>
  43c9ba:	mov    rdi,rbp
  43c9bd:	call   403430 <xmlNodeGetContent@plt>
  43c9c2:	xor    esi,esi
  43c9c4:	mov    edx,0xa
  43c9c9:	mov    rdi,rax
  43c9cc:	call   403570 <strtol@plt>
  43c9d1:	mov    DWORD PTR [r15+0x8],eax
  43c9d5:	lea    rdi,[rip+0x12707]        # 44f0e3 <strcmp@plt+0x4b95b>
  43c9dc:	call   4035b0 <xmlCharStrdup@plt>
  43c9e1:	mov    rbx,rax
  43c9e4:	mov    rdi,r12
  43c9e7:	call   403310 <xmlFirstElementChild@plt>
  43c9ec:	test   rax,rax
  43c9ef:	je     43ca20 <strcmp@plt+0x39298>
  43c9f1:	mov    rbp,rax
  43c9f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c9fe:	xchg   ax,ax
  43ca00:	mov    rdi,QWORD PTR [rbp+0x10]
  43ca04:	mov    rsi,rbx
  43ca07:	call   403770 <xmlStrEqual@plt>
  43ca0c:	test   eax,eax
  43ca0e:	jne    43ca22 <strcmp@plt+0x3929a>
  43ca10:	mov    rdi,rbp
  43ca13:	call   403210 <xmlNextElementSibling@plt>
  43ca18:	mov    rbp,rax
  43ca1b:	test   rax,rax
  43ca1e:	jne    43ca00 <strcmp@plt+0x39278>
  43ca20:	xor    ebp,ebp
  43ca22:	mov    rdi,rbx
  43ca25:	call   403780 <free@plt>
  43ca2a:	lea    rdi,[rip+0xc405]        # 448e36 <strcmp@plt+0x456ae>
  43ca31:	call   4035b0 <xmlCharStrdup@plt>
  43ca36:	mov    rbx,rax
  43ca39:	mov    rdi,rbp
  43ca3c:	call   403310 <xmlFirstElementChild@plt>
  43ca41:	test   rax,rax
  43ca44:	je     43ca71 <strcmp@plt+0x392e9>
  43ca46:	mov    r12,rax
  43ca49:	nop    DWORD PTR [rax+0x0]
  43ca50:	mov    rdi,QWORD PTR [r12+0x10]
  43ca55:	mov    rsi,rbx
  43ca58:	call   403770 <xmlStrEqual@plt>
  43ca5d:	test   eax,eax
  43ca5f:	jne    43ca8b <strcmp@plt+0x39303>
  43ca61:	mov    rdi,r12
  43ca64:	call   403210 <xmlNextElementSibling@plt>
  43ca69:	mov    r12,rax
  43ca6c:	test   rax,rax
  43ca6f:	jne    43ca50 <strcmp@plt+0x392c8>
  43ca71:	mov    rdi,rbx
  43ca74:	call   403780 <free@plt>
  43ca79:	mov    rax,r15
  43ca7c:	add    rsp,0x38
  43ca80:	pop    rbx
  43ca81:	pop    r12
  43ca83:	pop    r13
  43ca85:	pop    r14
  43ca87:	pop    r15
  43ca89:	pop    rbp
  43ca8a:	ret    
  43ca8b:	mov    rdi,rbx
  43ca8e:	call   403780 <free@plt>
  43ca93:	mov    eax,0xff
  43ca98:	mov    QWORD PTR [rsp+0x18],rax
  43ca9d:	xor    eax,eax
  43ca9f:	mov    QWORD PTR [rsp+0x10],rax
  43caa4:	lea    r13,[rip+0x6074]        # 442b1f <strcmp@plt+0x3f397>
  43caab:	xor    eax,eax
  43caad:	mov    QWORD PTR [rsp+0x8],rax
  43cab2:	mov    eax,0xff
  43cab7:	mov    QWORD PTR [rsp],rax
  43cabb:	jmp    43cd44 <strcmp@plt+0x395bc>
  43cac0:	mov    rbx,rax
  43cac3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cacd:	nop    DWORD PTR [rax]
  43cad0:	mov    rdi,QWORD PTR [rbx+0x10]
  43cad4:	mov    rsi,rbp
  43cad7:	call   403770 <xmlStrEqual@plt>
  43cadc:	test   eax,eax
  43cade:	jne    43caf5 <strcmp@plt+0x3936d>
  43cae0:	mov    rdi,rbx
  43cae3:	call   403210 <xmlNextElementSibling@plt>
  43cae8:	mov    rbx,rax
  43caeb:	test   rax,rax
  43caee:	jne    43cad0 <strcmp@plt+0x39348>
  43caf0:	jmp    43d0dc <strcmp@plt+0x39954>
  43caf5:	mov    rdi,rbp
  43caf8:	call   403780 <free@plt>
  43cafd:	lea    rdi,[rip+0x13bc6]        # 4506ca <strcmp@plt+0x4cf42>
  43cb04:	call   4035b0 <xmlCharStrdup@plt>
  43cb09:	mov    rbp,rax
  43cb0c:	mov    rdi,r12
  43cb0f:	call   403310 <xmlFirstElementChild@plt>
  43cb14:	test   rax,rax
  43cb17:	je     43cb40 <strcmp@plt+0x393b8>
  43cb19:	mov    rbx,rax
  43cb1c:	nop    DWORD PTR [rax+0x0]
  43cb20:	mov    rdi,QWORD PTR [rbx+0x10]
  43cb24:	mov    rsi,rbp
  43cb27:	call   403770 <xmlStrEqual@plt>
  43cb2c:	test   eax,eax
  43cb2e:	jne    43cb42 <strcmp@plt+0x393ba>
  43cb30:	mov    rdi,rbx
  43cb33:	call   403210 <xmlNextElementSibling@plt>
  43cb38:	mov    rbx,rax
  43cb3b:	test   rax,rax
  43cb3e:	jne    43cb20 <strcmp@plt+0x39398>
  43cb40:	xor    ebx,ebx
  43cb42:	mov    rdi,rbp
  43cb45:	call   403780 <free@plt>
  43cb4a:	mov    rdi,rbx
  43cb4d:	call   403430 <xmlNodeGetContent@plt>
  43cb52:	mov    r13,rax
  43cb55:	lea    rdi,[rip+0x125c3]        # 44f11f <strcmp@plt+0x4b997>
  43cb5c:	call   4035b0 <xmlCharStrdup@plt>
  43cb61:	mov    rbp,rax
  43cb64:	mov    rdi,r12
  43cb67:	call   403310 <xmlFirstElementChild@plt>
  43cb6c:	test   rax,rax
  43cb6f:	je     43cba0 <strcmp@plt+0x39418>
  43cb71:	mov    rbx,rax
  43cb74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cb7e:	xchg   ax,ax
  43cb80:	mov    rdi,QWORD PTR [rbx+0x10]
  43cb84:	mov    rsi,rbp
  43cb87:	call   403770 <xmlStrEqual@plt>
  43cb8c:	test   eax,eax
  43cb8e:	jne    43cba2 <strcmp@plt+0x3941a>
  43cb90:	mov    rdi,rbx
  43cb93:	call   403210 <xmlNextElementSibling@plt>
  43cb98:	mov    rbx,rax
  43cb9b:	test   rax,rax
  43cb9e:	jne    43cb80 <strcmp@plt+0x393f8>
  43cba0:	xor    ebx,ebx
  43cba2:	mov    rdi,rbp
  43cba5:	call   403780 <free@plt>
  43cbaa:	mov    rdi,rbx
  43cbad:	mov    rsi,r13
  43cbb0:	mov    rdx,r14
  43cbb3:	call   43bfd0 <strcmp@plt+0x38848>
  43cbb8:	mov    rbx,rax
  43cbbb:	mov    rdi,r13
  43cbbe:	call   403780 <free@plt>
  43cbc3:	test   rbx,rbx
  43cbc6:	je     43d108 <strcmp@plt+0x39980>
  43cbcc:	movzx  esi,BYTE PTR [rsp]
  43cbd0:	movzx  edx,BYTE PTR [rsp+0x8]
  43cbd5:	movzx  ecx,BYTE PTR [rsp+0x18]
  43cbda:	movzx  r8d,BYTE PTR [rsp+0x10]
  43cbe0:	mov    r9d,0x1
  43cbe6:	mov    rdi,rbx
  43cbe9:	call   404b70 <strcmp@plt+0x13e8>
  43cbee:	mov    rbp,rax
  43cbf1:	mov    rdi,rbx
  43cbf4:	call   403780 <free@plt>
  43cbf9:	test   rbp,rbp
  43cbfc:	je     43d108 <strcmp@plt+0x39980>
  43cc02:	mov    rsi,QWORD PTR [r15+0x10]
  43cc06:	mov    rdi,rbp
  43cc09:	call   42bcf0 <strcmp@plt+0x28568>
  43cc0e:	jmp    43cd0b <strcmp@plt+0x39583>
  43cc13:	mov    rdi,rbp
  43cc16:	call   403780 <free@plt>
  43cc1b:	lea    rdi,[rip+0x6a58]        # 44367a <strcmp@plt+0x3fef2>
  43cc22:	call   4035b0 <xmlCharStrdup@plt>
  43cc27:	mov    rbp,rax
  43cc2a:	mov    rdi,r12
  43cc2d:	call   403310 <xmlFirstElementChild@plt>
  43cc32:	test   rax,rax
  43cc35:	mov    QWORD PTR [rsp+0x30],r14
  43cc3a:	mov    QWORD PTR [rsp+0x28],r15
  43cc3f:	je     43cc70 <strcmp@plt+0x394e8>
  43cc41:	mov    r13,rax
  43cc44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cc4e:	xchg   ax,ax
  43cc50:	mov    rdi,QWORD PTR [r13+0x10]
  43cc54:	mov    rsi,rbp
  43cc57:	call   403770 <xmlStrEqual@plt>
  43cc5c:	test   eax,eax
  43cc5e:	jne    43cc73 <strcmp@plt+0x394eb>
  43cc60:	mov    rdi,r13
  43cc63:	call   403210 <xmlNextElementSibling@plt>
  43cc68:	mov    r13,rax
  43cc6b:	test   rax,rax
  43cc6e:	jne    43cc50 <strcmp@plt+0x394c8>
  43cc70:	xor    r13d,r13d
  43cc73:	mov    rdi,rbp
  43cc76:	call   403780 <free@plt>
  43cc7b:	mov    rdi,r13
  43cc7e:	call   403430 <xmlNodeGetContent@plt>
  43cc83:	movzx  ebx,BYTE PTR [rsp]
  43cc87:	movzx  ebp,BYTE PTR [rsp+0x8]
  43cc8c:	movzx  r14d,BYTE PTR [rsp+0x18]
  43cc92:	movzx  r15d,BYTE PTR [rsp+0x10]
  43cc98:	mov    esi,0x4
  43cc9d:	mov    rdi,rax
  43cca0:	mov    edx,ebx
  43cca2:	mov    ecx,ebp
  43cca4:	mov    r8d,r14d
  43cca7:	mov    r9d,r15d
  43ccaa:	call   404cc0 <strcmp@plt+0x1538>
  43ccaf:	test   rax,rax
  43ccb2:	je     43d10d <strcmp@plt+0x39985>
  43ccb8:	mov    DWORD PTR [rsp+0x24],ebx
  43ccbc:	mov    rbx,QWORD PTR [rsp+0x28]
  43ccc1:	mov    rsi,QWORD PTR [rbx+0x18]
  43ccc5:	mov    rdi,rax
  43ccc8:	call   42bcf0 <strcmp@plt+0x28568>
  43cccd:	mov    rdi,r13
  43ccd0:	call   403430 <xmlNodeGetContent@plt>
  43ccd5:	mov    esi,0x6
  43ccda:	mov    rdi,rax
  43ccdd:	mov    edx,DWORD PTR [rsp+0x24]
  43cce1:	mov    ecx,ebp
  43cce3:	mov    r8d,r14d
  43cce6:	mov    r9d,r15d
  43cce9:	call   404cc0 <strcmp@plt+0x1538>
  43ccee:	test   rax,rax
  43ccf1:	je     43d114 <strcmp@plt+0x3998c>
  43ccf7:	mov    rsi,QWORD PTR [rbx+0x18]
  43ccfb:	mov    rdi,rax
  43ccfe:	call   42bcf0 <strcmp@plt+0x28568>
  43cd03:	mov    r14,QWORD PTR [rsp+0x30]
  43cd08:	mov    r15,rbx
  43cd0b:	lea    r13,[rip+0x5e0d]        # 442b1f <strcmp@plt+0x3f397>
  43cd12:	mov    rbx,QWORD PTR [r12+0x10]
  43cd17:	nop    WORD PTR [rax+rax*1+0x0]
  43cd20:	mov    rdi,r12
  43cd23:	call   403210 <xmlNextElementSibling@plt>
  43cd28:	test   rax,rax
  43cd2b:	je     43ca79 <strcmp@plt+0x392f1>
  43cd31:	mov    r12,rax
  43cd34:	mov    rdi,QWORD PTR [rax+0x10]
  43cd38:	mov    rsi,rbx
  43cd3b:	call   403788 <strcmp@plt>
  43cd40:	test   eax,eax
  43cd42:	jne    43cd20 <strcmp@plt+0x39598>
  43cd44:	mov    rdi,r13
  43cd47:	call   4035b0 <xmlCharStrdup@plt>
  43cd4c:	mov    rbp,rax
  43cd4f:	mov    rdi,r12
  43cd52:	call   403310 <xmlFirstElementChild@plt>
  43cd57:	test   rax,rax
  43cd5a:	je     43cd80 <strcmp@plt+0x395f8>
  43cd5c:	mov    rbx,rax
  43cd5f:	nop
  43cd60:	mov    rdi,QWORD PTR [rbx+0x10]
  43cd64:	mov    rsi,rbp
  43cd67:	call   403770 <xmlStrEqual@plt>
  43cd6c:	test   eax,eax
  43cd6e:	jne    43cd8a <strcmp@plt+0x39602>
  43cd70:	mov    rdi,rbx
  43cd73:	call   403210 <xmlNextElementSibling@plt>
  43cd78:	mov    rbx,rax
  43cd7b:	test   rax,rax
  43cd7e:	jne    43cd60 <strcmp@plt+0x395d8>
  43cd80:	mov    rdi,rbp
  43cd83:	call   403780 <free@plt>
  43cd88:	jmp    43cdf5 <strcmp@plt+0x3966d>
  43cd8a:	mov    rdi,rbp
  43cd8d:	call   403780 <free@plt>
  43cd92:	mov    rdi,r13
  43cd95:	call   4035b0 <xmlCharStrdup@plt>
  43cd9a:	mov    rbp,rax
  43cd9d:	mov    rdi,r12
  43cda0:	call   403310 <xmlFirstElementChild@plt>
  43cda5:	test   rax,rax
  43cda8:	je     43cdd0 <strcmp@plt+0x39648>
  43cdaa:	mov    rbx,rax
  43cdad:	nop    DWORD PTR [rax]
  43cdb0:	mov    rdi,QWORD PTR [rbx+0x10]
  43cdb4:	mov    rsi,rbp
  43cdb7:	call   403770 <xmlStrEqual@plt>
  43cdbc:	test   eax,eax
  43cdbe:	jne    43cdd2 <strcmp@plt+0x3964a>
  43cdc0:	mov    rdi,rbx
  43cdc3:	call   403210 <xmlNextElementSibling@plt>
  43cdc8:	mov    rbx,rax
  43cdcb:	test   rax,rax
  43cdce:	jne    43cdb0 <strcmp@plt+0x39628>
  43cdd0:	xor    ebx,ebx
  43cdd2:	mov    rdi,rbp
  43cdd5:	call   403780 <free@plt>
  43cdda:	mov    rdi,rbx
  43cddd:	call   403430 <xmlNodeGetContent@plt>
  43cde2:	xor    esi,esi
  43cde4:	mov    edx,0xa
  43cde9:	mov    rdi,rax
  43cdec:	call   403570 <strtol@plt>
  43cdf1:	mov    QWORD PTR [rsp],rax
  43cdf5:	lea    rdi,[rip+0x1231c]        # 44f118 <strcmp@plt+0x4b990>
  43cdfc:	call   4035b0 <xmlCharStrdup@plt>
  43ce01:	mov    rbp,rax
  43ce04:	mov    rdi,r12
  43ce07:	call   403310 <xmlFirstElementChild@plt>
  43ce0c:	test   rax,rax
  43ce0f:	je     43ce40 <strcmp@plt+0x396b8>
  43ce11:	mov    rbx,rax
  43ce14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ce1e:	xchg   ax,ax
  43ce20:	mov    rdi,QWORD PTR [rbx+0x10]
  43ce24:	mov    rsi,rbp
  43ce27:	call   403770 <xmlStrEqual@plt>
  43ce2c:	test   eax,eax
  43ce2e:	jne    43ce4a <strcmp@plt+0x396c2>
  43ce30:	mov    rdi,rbx
  43ce33:	call   403210 <xmlNextElementSibling@plt>
  43ce38:	mov    rbx,rax
  43ce3b:	test   rax,rax
  43ce3e:	jne    43ce20 <strcmp@plt+0x39698>
  43ce40:	mov    rdi,rbp
  43ce43:	call   403780 <free@plt>
  43ce48:	jmp    43cec6 <strcmp@plt+0x3973e>
  43ce4a:	mov    rdi,rbp
  43ce4d:	call   403780 <free@plt>
  43ce52:	lea    rdi,[rip+0x122bf]        # 44f118 <strcmp@plt+0x4b990>
  43ce59:	call   4035b0 <xmlCharStrdup@plt>
  43ce5e:	mov    rbp,rax
  43ce61:	mov    rdi,r12
  43ce64:	call   403310 <xmlFirstElementChild@plt>
  43ce69:	test   rax,rax
  43ce6c:	je     43cea0 <strcmp@plt+0x39718>
  43ce6e:	mov    rbx,rax
  43ce71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ce7b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ce80:	mov    rdi,QWORD PTR [rbx+0x10]
  43ce84:	mov    rsi,rbp
  43ce87:	call   403770 <xmlStrEqual@plt>
  43ce8c:	test   eax,eax
  43ce8e:	jne    43cea2 <strcmp@plt+0x3971a>
  43ce90:	mov    rdi,rbx
  43ce93:	call   403210 <xmlNextElementSibling@plt>
  43ce98:	mov    rbx,rax
  43ce9b:	test   rax,rax
  43ce9e:	jne    43ce80 <strcmp@plt+0x396f8>
  43cea0:	xor    ebx,ebx
  43cea2:	mov    rdi,rbp
  43cea5:	call   403780 <free@plt>
  43ceaa:	mov    rdi,rbx
  43cead:	call   403430 <xmlNodeGetContent@plt>
  43ceb2:	xor    esi,esi
  43ceb4:	mov    edx,0xa
  43ceb9:	mov    rdi,rax
  43cebc:	call   403570 <strtol@plt>
  43cec1:	mov    QWORD PTR [rsp+0x8],rax
  43cec6:	lea    rdi,[rip+0x1221c]        # 44f0e9 <strcmp@plt+0x4b961>
  43cecd:	call   4035b0 <xmlCharStrdup@plt>
  43ced2:	mov    rbp,rax
  43ced5:	mov    rdi,r12
  43ced8:	call   403310 <xmlFirstElementChild@plt>
  43cedd:	test   rax,rax
  43cee0:	je     43cf10 <strcmp@plt+0x39788>
  43cee2:	mov    rbx,rax
  43cee5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ceef:	nop
  43cef0:	mov    rdi,QWORD PTR [rbx+0x10]
  43cef4:	mov    rsi,rbp
  43cef7:	call   403770 <xmlStrEqual@plt>
  43cefc:	test   eax,eax
  43cefe:	jne    43cf1a <strcmp@plt+0x39792>
  43cf00:	mov    rdi,rbx
  43cf03:	call   403210 <xmlNextElementSibling@plt>
  43cf08:	mov    rbx,rax
  43cf0b:	test   rax,rax
  43cf0e:	jne    43cef0 <strcmp@plt+0x39768>
  43cf10:	mov    rdi,rbp
  43cf13:	call   403780 <free@plt>
  43cf18:	jmp    43cf96 <strcmp@plt+0x3980e>
  43cf1a:	mov    rdi,rbp
  43cf1d:	call   403780 <free@plt>
  43cf22:	lea    rdi,[rip+0x121ca]        # 44f0f3 <strcmp@plt+0x4b96b>
  43cf29:	call   4035b0 <xmlCharStrdup@plt>
  43cf2e:	mov    rbp,rax
  43cf31:	mov    rdi,r12
  43cf34:	call   403310 <xmlFirstElementChild@plt>
  43cf39:	test   rax,rax
  43cf3c:	je     43cf70 <strcmp@plt+0x397e8>
  43cf3e:	mov    rbx,rax
  43cf41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cf4b:	nop    DWORD PTR [rax+rax*1+0x0]
  43cf50:	mov    rdi,QWORD PTR [rbx+0x10]
  43cf54:	mov    rsi,rbp
  43cf57:	call   403770 <xmlStrEqual@plt>
  43cf5c:	test   eax,eax
  43cf5e:	jne    43cf72 <strcmp@plt+0x397ea>
  43cf60:	mov    rdi,rbx
  43cf63:	call   403210 <xmlNextElementSibling@plt>
  43cf68:	mov    rbx,rax
  43cf6b:	test   rax,rax
  43cf6e:	jne    43cf50 <strcmp@plt+0x397c8>
  43cf70:	xor    ebx,ebx
  43cf72:	mov    rdi,rbp
  43cf75:	call   403780 <free@plt>
  43cf7a:	mov    rdi,rbx
  43cf7d:	call   403430 <xmlNodeGetContent@plt>
  43cf82:	xor    esi,esi
  43cf84:	mov    edx,0xa
  43cf89:	mov    rdi,rax
  43cf8c:	call   403570 <strtol@plt>
  43cf91:	mov    QWORD PTR [rsp+0x18],rax
  43cf96:	lea    rdi,[rip+0x12169]        # 44f106 <strcmp@plt+0x4b97e>
  43cf9d:	call   4035b0 <xmlCharStrdup@plt>
  43cfa2:	mov    rbp,rax
  43cfa5:	mov    rdi,r12
  43cfa8:	call   403310 <xmlFirstElementChild@plt>
  43cfad:	test   rax,rax
  43cfb0:	je     43cfe0 <strcmp@plt+0x39858>
  43cfb2:	mov    rbx,rax
  43cfb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cfbf:	nop
  43cfc0:	mov    rdi,QWORD PTR [rbx+0x10]
  43cfc4:	mov    rsi,rbp
  43cfc7:	call   403770 <xmlStrEqual@plt>
  43cfcc:	test   eax,eax
  43cfce:	jne    43cfea <strcmp@plt+0x39862>
  43cfd0:	mov    rdi,rbx
  43cfd3:	call   403210 <xmlNextElementSibling@plt>
  43cfd8:	mov    rbx,rax
  43cfdb:	test   rax,rax
  43cfde:	jne    43cfc0 <strcmp@plt+0x39838>
  43cfe0:	mov    rdi,rbp
  43cfe3:	call   403780 <free@plt>
  43cfe8:	jmp    43d066 <strcmp@plt+0x398de>
  43cfea:	mov    rdi,rbp
  43cfed:	call   403780 <free@plt>
  43cff2:	lea    rdi,[rip+0x12115]        # 44f10e <strcmp@plt+0x4b986>
  43cff9:	call   4035b0 <xmlCharStrdup@plt>
  43cffe:	mov    rbp,rax
  43d001:	mov    rdi,r12
  43d004:	call   403310 <xmlFirstElementChild@plt>
  43d009:	test   rax,rax
  43d00c:	je     43d040 <strcmp@plt+0x398b8>
  43d00e:	mov    rbx,rax
  43d011:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d01b:	nop    DWORD PTR [rax+rax*1+0x0]
  43d020:	mov    rdi,QWORD PTR [rbx+0x10]
  43d024:	mov    rsi,rbp
  43d027:	call   403770 <xmlStrEqual@plt>
  43d02c:	test   eax,eax
  43d02e:	jne    43d042 <strcmp@plt+0x398ba>
  43d030:	mov    rdi,rbx
  43d033:	call   403210 <xmlNextElementSibling@plt>
  43d038:	mov    rbx,rax
  43d03b:	test   rax,rax
  43d03e:	jne    43d020 <strcmp@plt+0x39898>
  43d040:	xor    ebx,ebx
  43d042:	mov    rdi,rbp
  43d045:	call   403780 <free@plt>
  43d04a:	mov    rdi,rbx
  43d04d:	call   403430 <xmlNodeGetContent@plt>
  43d052:	xor    esi,esi
  43d054:	mov    edx,0xa
  43d059:	mov    rdi,rax
  43d05c:	call   403570 <strtol@plt>
  43d061:	mov    QWORD PTR [rsp+0x10],rax
  43d066:	lea    rdi,[rip+0x660d]        # 44367a <strcmp@plt+0x3fef2>
  43d06d:	call   4035b0 <xmlCharStrdup@plt>
  43d072:	mov    rbp,rax
  43d075:	mov    rdi,r12
  43d078:	call   403310 <xmlFirstElementChild@plt>
  43d07d:	test   rax,rax
  43d080:	je     43d0b4 <strcmp@plt+0x3992c>
  43d082:	mov    rbx,rax
  43d085:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d08f:	nop
  43d090:	mov    rdi,QWORD PTR [rbx+0x10]
  43d094:	mov    rsi,rbp
  43d097:	call   403770 <xmlStrEqual@plt>
  43d09c:	test   eax,eax
  43d09e:	jne    43cc13 <strcmp@plt+0x3948b>
  43d0a4:	mov    rdi,rbx
  43d0a7:	call   403210 <xmlNextElementSibling@plt>
  43d0ac:	mov    rbx,rax
  43d0af:	test   rax,rax
  43d0b2:	jne    43d090 <strcmp@plt+0x39908>
  43d0b4:	mov    rdi,rbp
  43d0b7:	call   403780 <free@plt>
  43d0bc:	lea    rdi,[rip+0x1205c]        # 44f11f <strcmp@plt+0x4b997>
  43d0c3:	call   4035b0 <xmlCharStrdup@plt>
  43d0c8:	mov    rbp,rax
  43d0cb:	mov    rdi,r12
  43d0ce:	call   403310 <xmlFirstElementChild@plt>
  43d0d3:	test   rax,rax
  43d0d6:	jne    43cac0 <strcmp@plt+0x39338>
  43d0dc:	mov    rdi,rbp
  43d0df:	call   403780 <free@plt>
  43d0e4:	mov    rdi,r15
  43d0e7:	call   404860 <strcmp@plt+0x10d8>
  43d0ec:	lea    rax,[rip+0x27cbd]        # 464db0 <strcmp@plt+0x61628>
  43d0f3:	cmp    DWORD PTR [rax],0x0
  43d0f6:	jle    43c95c <strcmp@plt+0x391d4>
  43d0fc:	lea    rsi,[rip+0x1202c]        # 44f12f <strcmp@plt+0x4b9a7>
  43d103:	jmp    43c940 <strcmp@plt+0x391b8>
  43d108:	mov    rdi,r15
  43d10b:	jmp    43d117 <strcmp@plt+0x3998f>
  43d10d:	mov    rdi,QWORD PTR [rsp+0x28]
  43d112:	jmp    43d117 <strcmp@plt+0x3998f>
  43d114:	mov    rdi,rbx
  43d117:	call   404860 <strcmp@plt+0x10d8>
  43d11c:	xor    r15d,r15d
  43d11f:	jmp    43ca79 <strcmp@plt+0x392f1>
  43d124:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d12e:	xchg   ax,ax
  43d130:	push   rbp
  43d131:	push   r15
  43d133:	push   r14
  43d135:	push   r13
  43d137:	push   r12
  43d139:	push   rbx
  43d13a:	sub    rsp,0x18
  43d13e:	mov    r13,rdx
  43d141:	mov    r14d,esi
  43d144:	mov    rbp,rdi
  43d147:	lea    rdi,[rip+0x1201d]        # 44f16b <strcmp@plt+0x4b9e3>
  43d14e:	call   4035b0 <xmlCharStrdup@plt>
  43d153:	mov    rbx,rax
  43d156:	mov    rdi,rbp
  43d159:	call   403310 <xmlFirstElementChild@plt>
  43d15e:	test   rax,rax
  43d161:	je     43d190 <strcmp@plt+0x39a08>
  43d163:	mov    rbp,rax
  43d166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d170:	mov    rdi,QWORD PTR [rbp+0x10]
  43d174:	mov    rsi,rbx
  43d177:	call   403770 <xmlStrEqual@plt>
  43d17c:	test   eax,eax
  43d17e:	jne    43d1a2 <strcmp@plt+0x39a1a>
  43d180:	mov    rdi,rbp
  43d183:	call   403210 <xmlNextElementSibling@plt>
  43d188:	mov    rbp,rax
  43d18b:	test   rax,rax
  43d18e:	jne    43d170 <strcmp@plt+0x399e8>
  43d190:	mov    rdi,rbx
  43d193:	call   403780 <free@plt>
  43d198:	mov    ebp,0x1
  43d19d:	jmp    43d531 <strcmp@plt+0x39da9>
  43d1a2:	mov    rdi,rbx
  43d1a5:	call   403780 <free@plt>
  43d1aa:	lea    rdi,[rip+0x896b]        # 445b1c <strcmp@plt+0x42394>
  43d1b1:	call   4035b0 <xmlCharStrdup@plt>
  43d1b6:	mov    r15,rax
  43d1b9:	mov    rdi,rbp
  43d1bc:	call   403310 <xmlFirstElementChild@plt>
  43d1c1:	test   rax,rax
  43d1c4:	je     43d514 <strcmp@plt+0x39d8c>
  43d1ca:	mov    rbx,rax
  43d1cd:	lea    r12,[rip+0x11fe0]        # 44f1b4 <strcmp@plt+0x4ba2c>
  43d1d4:	jmp    43d4f0 <strcmp@plt+0x39d68>
  43d1d9:	mov    rdi,r15
  43d1dc:	call   403780 <free@plt>
  43d1e1:	mov    rdi,r12
  43d1e4:	call   4035b0 <xmlCharStrdup@plt>
  43d1e9:	mov    r12,rax
  43d1ec:	mov    rdi,rbp
  43d1ef:	call   403310 <xmlFirstElementChild@plt>
  43d1f4:	test   rax,rax
  43d1f7:	je     43d542 <strcmp@plt+0x39dba>
  43d1fd:	mov    r15,rax
  43d200:	mov    rdi,QWORD PTR [r15+0x10]
  43d204:	mov    rsi,r12
  43d207:	call   403770 <xmlStrEqual@plt>
  43d20c:	test   eax,eax
  43d20e:	jne    43d225 <strcmp@plt+0x39a9d>
  43d210:	mov    rdi,r15
  43d213:	call   403210 <xmlNextElementSibling@plt>
  43d218:	mov    r15,rax
  43d21b:	test   rax,rax
  43d21e:	jne    43d200 <strcmp@plt+0x39a78>
  43d220:	jmp    43d542 <strcmp@plt+0x39dba>
  43d225:	mov    DWORD PTR [rsp+0xc],r14d
  43d22a:	mov    rdi,r12
  43d22d:	call   403780 <free@plt>
  43d232:	lea    rdi,[rip+0x11fcb]        # 44f204 <strcmp@plt+0x4ba7c>
  43d239:	call   4035b0 <xmlCharStrdup@plt>
  43d23e:	mov    r12,rax
  43d241:	mov    rdi,rbp
  43d244:	call   403310 <xmlFirstElementChild@plt>
  43d249:	test   rax,rax
  43d24c:	je     43d553 <strcmp@plt+0x39dcb>
  43d252:	mov    r14,rax
  43d255:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d25f:	nop
  43d260:	mov    rdi,QWORD PTR [r14+0x10]
  43d264:	mov    rsi,r12
  43d267:	call   403770 <xmlStrEqual@plt>
  43d26c:	test   eax,eax
  43d26e:	jne    43d285 <strcmp@plt+0x39afd>
  43d270:	mov    rdi,r14
  43d273:	call   403210 <xmlNextElementSibling@plt>
  43d278:	mov    r14,rax
  43d27b:	test   rax,rax
  43d27e:	jne    43d260 <strcmp@plt+0x39ad8>
  43d280:	jmp    43d553 <strcmp@plt+0x39dcb>
  43d285:	mov    rdi,r12
  43d288:	call   403780 <free@plt>
  43d28d:	mov    rdi,rbx
  43d290:	call   403430 <xmlNodeGetContent@plt>
  43d295:	mov    QWORD PTR [rsp+0x10],rax
  43d29a:	mov    rdi,r14
  43d29d:	call   403430 <xmlNodeGetContent@plt>
  43d2a2:	mov    r12,rax
  43d2a5:	mov    rdi,r15
  43d2a8:	call   403430 <xmlNodeGetContent@plt>
  43d2ad:	mov    rbx,rax
  43d2b0:	mov    rdi,rax
  43d2b3:	lea    rsi,[rip+0x11f90]        # 44f24a <strcmp@plt+0x4bac2>
  43d2ba:	call   403788 <strcmp@plt>
  43d2bf:	test   eax,eax
  43d2c1:	je     43d564 <strcmp@plt+0x39ddc>
  43d2c7:	mov    rdi,rbx
  43d2ca:	lea    rsi,[rip+0x11f7e]        # 44f24f <strcmp@plt+0x4bac7>
  43d2d1:	call   403788 <strcmp@plt>
  43d2d6:	test   eax,eax
  43d2d8:	je     43d2f1 <strcmp@plt+0x39b69>
  43d2da:	mov    rdi,rbx
  43d2dd:	lea    rsi,[rip+0x11f79]        # 44f25d <strcmp@plt+0x4bad5>
  43d2e4:	call   403788 <strcmp@plt>
  43d2e9:	test   eax,eax
  43d2eb:	je     43d564 <strcmp@plt+0x39ddc>
  43d2f1:	mov    rdi,rbx
  43d2f4:	call   403780 <free@plt>
  43d2f9:	xor    eax,eax
  43d2fb:	call   422f90 <strcmp@plt+0x1f808>
  43d300:	test   rax,rax
  43d303:	mov    rbx,QWORD PTR [rsp+0x10]
  43d308:	je     43d588 <strcmp@plt+0x39e00>
  43d30e:	mov    r15,rax
  43d311:	mov    rdi,rbx
  43d314:	mov    rsi,rax
  43d317:	call   423c40 <strcmp@plt+0x204b8>
  43d31c:	cmp    eax,0x1
  43d31f:	jne    43d59f <strcmp@plt+0x39e17>
  43d325:	mov    rdi,rbx
  43d328:	call   403780 <free@plt>
  43d32d:	mov    r14,QWORD PTR [r13+0x8]
  43d331:	cmp    r14,r13
  43d334:	jne    43d34d <strcmp@plt+0x39bc5>
  43d336:	jmp    43d3e4 <strcmp@plt+0x39c5c>
  43d33b:	nop    DWORD PTR [rax+rax*1+0x0]
  43d340:	mov    r14,QWORD PTR [r14+0x8]
  43d344:	cmp    r14,r13
  43d347:	je     43d3e4 <strcmp@plt+0x39c5c>
  43d34d:	mov    rax,QWORD PTR [r14+0x10]
  43d351:	mov    rdi,QWORD PTR [rax]
  43d354:	mov    rsi,r15
  43d357:	call   423970 <strcmp@plt+0x201e8>
  43d35c:	test   eax,eax
  43d35e:	jne    43d340 <strcmp@plt+0x39bb8>
  43d360:	mov    rdi,r15
  43d363:	call   422fa0 <strcmp@plt+0x1f818>
  43d368:	mov    rdi,r12
  43d36b:	call   403780 <free@plt>
  43d370:	lea    rax,[rip+0x27a39]        # 464db0 <strcmp@plt+0x61628>
  43d377:	cmp    DWORD PTR [rax],0x2
  43d37a:	jl     43d39d <strcmp@plt+0x39c15>
  43d37c:	mov    rdi,r15
  43d37f:	call   423130 <strcmp@plt+0x1f9a8>
  43d384:	mov    rcx,rax
  43d387:	mov    edi,0x6
  43d38c:	xor    eax,eax
  43d38e:	lea    rsi,[rip+0x11f65]        # 44f2fa <strcmp@plt+0x4bb72>
  43d395:	mov    rdx,rcx
  43d398:	call   42e800 <strcmp@plt+0x2b078>
  43d39d:	mov    rbx,QWORD PTR [rbp+0x10]
  43d3a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d3ab:	nop    DWORD PTR [rax+rax*1+0x0]
  43d3b0:	mov    rdi,rbp
  43d3b3:	call   403210 <xmlNextElementSibling@plt>
  43d3b8:	test   rax,rax
  43d3bb:	je     43d3d5 <strcmp@plt+0x39c4d>
  43d3bd:	mov    rbp,rax
  43d3c0:	mov    rdi,QWORD PTR [rax+0x10]
  43d3c4:	mov    rsi,rbx
  43d3c7:	call   403788 <strcmp@plt>
  43d3cc:	test   eax,eax
  43d3ce:	jne    43d3b0 <strcmp@plt+0x39c28>
  43d3d0:	jmp    43d340 <strcmp@plt+0x39bb8>
  43d3d5:	xor    ebp,ebp
  43d3d7:	mov    r14,QWORD PTR [r14+0x8]
  43d3db:	cmp    r14,r13
  43d3de:	jne    43d34d <strcmp@plt+0x39bc5>
  43d3e4:	lea    rax,[rip+0x33115]        # 470500 <strcmp@plt+0x6cd78>
  43d3eb:	mov    ebx,DWORD PTR [rax]
  43d3ed:	test   ebx,ebx
  43d3ef:	je     43d400 <strcmp@plt+0x39c78>
  43d3f1:	mov    rdi,r15
  43d3f4:	call   423200 <strcmp@plt+0x1fa78>
  43d3f9:	movzx  eax,ax
  43d3fc:	cmp    ebx,eax
  43d3fe:	jne    43d476 <strcmp@plt+0x39cee>
  43d400:	mov    r14d,DWORD PTR [rsp+0xc]
  43d405:	movzx  ecx,r14b
  43d409:	mov    esi,0x1
  43d40e:	mov    rdi,r15
  43d411:	mov    rdx,r12
  43d414:	call   40fe80 <strcmp@plt+0xc6f8>
  43d419:	mov    rbx,rax
  43d41c:	mov    rdi,r12
  43d41f:	call   403780 <free@plt>
  43d424:	mov    rdi,r15
  43d427:	call   422fa0 <strcmp@plt+0x1f818>
  43d42c:	test   rbx,rbx
  43d42f:	je     43d5cc <strcmp@plt+0x39e44>
  43d435:	mov    rdi,rbx
  43d438:	mov    rsi,r13
  43d43b:	call   42bcf0 <strcmp@plt+0x28568>
  43d440:	mov    rbx,QWORD PTR [rbp+0x10]
  43d444:	lea    r12,[rip+0x11d69]        # 44f1b4 <strcmp@plt+0x4ba2c>
  43d44b:	nop    DWORD PTR [rax+rax*1+0x0]
  43d450:	mov    rdi,rbp
  43d453:	call   403210 <xmlNextElementSibling@plt>
  43d458:	test   rax,rax
  43d45b:	je     43d198 <strcmp@plt+0x39a10>
  43d461:	mov    rbp,rax
  43d464:	mov    rdi,QWORD PTR [rax+0x10]
  43d468:	mov    rsi,rbx
  43d46b:	call   403788 <strcmp@plt>
  43d470:	test   eax,eax
  43d472:	jne    43d450 <strcmp@plt+0x39cc8>
  43d474:	jmp    43d4d2 <strcmp@plt+0x39d4a>
  43d476:	mov    edi,0x3
  43d47b:	xor    eax,eax
  43d47d:	lea    rsi,[rip+0x54f0]        # 442974 <strcmp@plt+0x3f1ec>
  43d484:	mov    rdx,QWORD PTR [rsp+0x10]
  43d489:	call   42e800 <strcmp@plt+0x2b078>
  43d48e:	mov    rdi,r15
  43d491:	call   422fa0 <strcmp@plt+0x1f818>
  43d496:	mov    rdi,r12
  43d499:	call   403780 <free@plt>
  43d49e:	mov    rbx,QWORD PTR [rbp+0x10]
  43d4a2:	mov    r14d,DWORD PTR [rsp+0xc]
  43d4a7:	lea    r12,[rip+0x11d06]        # 44f1b4 <strcmp@plt+0x4ba2c>
  43d4ae:	mov    rdi,rbp
  43d4b1:	call   403210 <xmlNextElementSibling@plt>
  43d4b6:	test   rax,rax
  43d4b9:	je     43d198 <strcmp@plt+0x39a10>
  43d4bf:	mov    rbp,rax
  43d4c2:	mov    rdi,QWORD PTR [rax+0x10]
  43d4c6:	mov    rsi,rbx
  43d4c9:	call   403788 <strcmp@plt>
  43d4ce:	test   eax,eax
  43d4d0:	jne    43d4ae <strcmp@plt+0x39d26>
  43d4d2:	lea    rdi,[rip+0x8643]        # 445b1c <strcmp@plt+0x42394>
  43d4d9:	call   4035b0 <xmlCharStrdup@plt>
  43d4de:	mov    r15,rax
  43d4e1:	mov    rdi,rbp
  43d4e4:	call   403310 <xmlFirstElementChild@plt>
  43d4e9:	jmp    43d50c <strcmp@plt+0x39d84>
  43d4eb:	nop    DWORD PTR [rax+rax*1+0x0]
  43d4f0:	mov    rdi,QWORD PTR [rbx+0x10]
  43d4f4:	mov    rsi,r15
  43d4f7:	call   403770 <xmlStrEqual@plt>
  43d4fc:	test   eax,eax
  43d4fe:	jne    43d1d9 <strcmp@plt+0x39a51>
  43d504:	mov    rdi,rbx
  43d507:	call   403210 <xmlNextElementSibling@plt>
  43d50c:	mov    rbx,rax
  43d50f:	test   rax,rax
  43d512:	jne    43d4f0 <strcmp@plt+0x39d68>
  43d514:	mov    rdi,r15
  43d517:	call   403780 <free@plt>
  43d51c:	lea    rsi,[rip+0x11c53]        # 44f176 <strcmp@plt+0x4b9ee>
  43d523:	xor    ebp,ebp
  43d525:	mov    edi,0x3
  43d52a:	xor    eax,eax
  43d52c:	call   42e800 <strcmp@plt+0x2b078>
  43d531:	mov    eax,ebp
  43d533:	add    rsp,0x18
  43d537:	pop    rbx
  43d538:	pop    r12
  43d53a:	pop    r13
  43d53c:	pop    r14
  43d53e:	pop    r15
  43d540:	pop    rbp
  43d541:	ret    
  43d542:	mov    rdi,r12
  43d545:	call   403780 <free@plt>
  43d54a:	lea    rsi,[rip+0x11c71]        # 44f1c2 <strcmp@plt+0x4ba3a>
  43d551:	jmp    43d523 <strcmp@plt+0x39d9b>
  43d553:	mov    rdi,r12
  43d556:	call   403780 <free@plt>
  43d55b:	lea    rsi,[rip+0x11cab]        # 44f20d <strcmp@plt+0x4ba85>
  43d562:	jmp    43d523 <strcmp@plt+0x39d9b>
  43d564:	mov    rdi,rbx
  43d567:	call   403780 <free@plt>
  43d56c:	lea    rsi,[rip+0x5394]        # 442907 <strcmp@plt+0x3f17f>
  43d573:	xor    ebp,ebp
  43d575:	mov    edi,0x2
  43d57a:	xor    eax,eax
  43d57c:	call   42e800 <strcmp@plt+0x2b078>
  43d581:	mov    rdi,QWORD PTR [rsp+0x10]
  43d586:	jmp    43d5ba <strcmp@plt+0x39e32>
  43d588:	lea    rsi,[rip+0x11cdf]        # 44f26e <strcmp@plt+0x4bae6>
  43d58f:	xor    ebp,ebp
  43d591:	mov    edi,0x3
  43d596:	xor    eax,eax
  43d598:	call   42e800 <strcmp@plt+0x2b078>
  43d59d:	jmp    43d5b7 <strcmp@plt+0x39e2f>
  43d59f:	lea    rsi,[rip+0x11d1a]        # 44f2c0 <strcmp@plt+0x4bb38>
  43d5a6:	xor    ebp,ebp
  43d5a8:	mov    edi,0x3
  43d5ad:	xor    eax,eax
  43d5af:	mov    rdx,rbx
  43d5b2:	call   42e800 <strcmp@plt+0x2b078>
  43d5b7:	mov    rdi,rbx
  43d5ba:	call   403780 <free@plt>
  43d5bf:	mov    rdi,r12
  43d5c2:	call   403780 <free@plt>
  43d5c7:	jmp    43d531 <strcmp@plt+0x39da9>
  43d5cc:	xor    ebp,ebp
  43d5ce:	jmp    43d531 <strcmp@plt+0x39da9>
  43d5d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d5dd:	nop    DWORD PTR [rax]
  43d5e0:	push   r14
  43d5e2:	push   rbx
  43d5e3:	push   rax
  43d5e4:	mov    rbx,rdi
  43d5e7:	call   403690 <zmq_ctx_new@plt>
  43d5ec:	mov    QWORD PTR [rbx],rax
  43d5ef:	lea    r14,[rip+0x277ba]        # 464db0 <strcmp@plt+0x61628>
  43d5f6:	cmp    DWORD PTR [r14],0x3
  43d5fa:	jl     43d624 <strcmp@plt+0x39e9c>
  43d5fc:	call   403040 <__errno_location@plt>
  43d601:	mov    edi,DWORD PTR [rax]
  43d603:	call   403100 <zmq_strerror@plt>
  43d608:	mov    rcx,rax
  43d60b:	lea    rsi,[rip+0x11d32]        # 44f344 <strcmp@plt+0x4bbbc>
  43d612:	mov    edi,0x7
  43d617:	xor    eax,eax
  43d619:	mov    rdx,rcx
  43d61c:	call   42e800 <strcmp@plt+0x2b078>
  43d621:	mov    rax,QWORD PTR [rbx]
  43d624:	mov    esi,0x4
  43d629:	mov    rdi,rax
  43d62c:	call   4036e0 <zmq_socket@plt>
  43d631:	mov    QWORD PTR [rbx+0x8],rax
  43d635:	cmp    DWORD PTR [r14],0x3
  43d639:	jl     43d664 <strcmp@plt+0x39edc>
  43d63b:	call   403040 <__errno_location@plt>
  43d640:	mov    edi,DWORD PTR [rax]
  43d642:	call   403100 <zmq_strerror@plt>
  43d647:	mov    rcx,rax
  43d64a:	lea    rsi,[rip+0x11d13]        # 44f364 <strcmp@plt+0x4bbdc>
  43d651:	mov    edi,0x7
  43d656:	xor    eax,eax
  43d658:	mov    rdx,rcx
  43d65b:	call   42e800 <strcmp@plt+0x2b078>
  43d660:	mov    rax,QWORD PTR [rbx+0x8]
  43d664:	lea    rsi,[rip+0x1170a]        # 44ed75 <strcmp@plt+0x4b5ed>
  43d66b:	mov    rdi,rax
  43d66e:	call   4032e0 <zmq_bind@plt>
  43d673:	mov    ecx,DWORD PTR [r14]
  43d676:	test   eax,eax
  43d678:	je     43d6af <strcmp@plt+0x39f27>
  43d67a:	cmp    ecx,0x2
  43d67d:	jl     43d69f <strcmp@plt+0x39f17>
  43d67f:	mov    edi,eax
  43d681:	call   403100 <zmq_strerror@plt>
  43d686:	mov    rcx,rax
  43d689:	lea    rsi,[rip+0x11ced]        # 44f37d <strcmp@plt+0x4bbf5>
  43d690:	mov    edi,0x6
  43d695:	xor    eax,eax
  43d697:	mov    rdx,rcx
  43d69a:	call   42e800 <strcmp@plt+0x2b078>
  43d69f:	lea    rsi,[rip+0x11d30]        # 44f3d6 <strcmp@plt+0x4bc4e>
  43d6a6:	xor    ebx,ebx
  43d6a8:	mov    edi,0x2
  43d6ad:	jmp    43d6c5 <strcmp@plt+0x39f3d>
  43d6af:	mov    ebx,0x1
  43d6b4:	cmp    ecx,0x2
  43d6b7:	jl     43d6cc <strcmp@plt+0x39f44>
  43d6b9:	lea    rsi,[rip+0x11ced]        # 44f3ad <strcmp@plt+0x4bc25>
  43d6c0:	mov    edi,0x6
  43d6c5:	xor    eax,eax
  43d6c7:	call   42e800 <strcmp@plt+0x2b078>
  43d6cc:	mov    eax,ebx
  43d6ce:	add    rsp,0x8
  43d6d2:	pop    rbx
  43d6d3:	pop    r14
  43d6d5:	ret    
  43d6d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d6e0:	push   rbp
  43d6e1:	push   r15
  43d6e3:	push   r14
  43d6e5:	push   r13
  43d6e7:	push   r12
  43d6e9:	push   rbx
  43d6ea:	sub    rsp,0x28
  43d6ee:	mov    rbx,rdx
  43d6f1:	mov    r13,rsi
  43d6f4:	mov    r15,rdi
  43d6f7:	lea    rax,[rip+0x276b2]        # 464db0 <strcmp@plt+0x61628>
  43d6fe:	cmp    DWORD PTR [rax],0x0
  43d701:	jle    43d716 <strcmp@plt+0x39f8e>
  43d703:	lea    rsi,[rip+0x11cfe]        # 44f408 <strcmp@plt+0x4bc80>
  43d70a:	mov    edi,0x5
  43d70f:	xor    eax,eax
  43d711:	call   42e800 <strcmp@plt+0x2b078>
  43d716:	lea    rax,[rip+0x32e7b]        # 470598 <strcmp@plt+0x6ce10>
  43d71d:	mov    rdi,QWORD PTR [rax]
  43d720:	call   40e9a0 <strcmp@plt+0xb218>
  43d725:	mov    r12,rax
  43d728:	lea    rdi,[rip+0xfffffffffffe5871]        # 422fa0 <strcmp@plt+0x1f818>
  43d72f:	call   42bc00 <strcmp@plt+0x28478>
  43d734:	mov    QWORD PTR [rsp+0x8],rax
  43d739:	mov    esi,DWORD PTR [r13+0x4]
  43d73d:	lea    rcx,[rip+0x11cf0]        # 44f434 <strcmp@plt+0x4bcac>
  43d744:	xor    ebp,ebp
  43d746:	xor    edx,edx
  43d748:	mov    r8d,0x2160
  43d74e:	mov    rdi,rbx
  43d751:	call   403030 <xmlReadMemory@plt>
  43d756:	mov    QWORD PTR [rsp+0x20],rax
  43d75b:	mov    rdi,rax
  43d75e:	call   4035f0 <xmlDocGetRootElement@plt>
  43d763:	mov    r14,rax
  43d766:	lea    rdi,[rip+0x11ccd]        # 44f43a <strcmp@plt+0x4bcb2>
  43d76d:	call   4035b0 <xmlCharStrdup@plt>
  43d772:	mov    rbx,rax
  43d775:	mov    rdi,r14
  43d778:	call   403310 <xmlFirstElementChild@plt>
  43d77d:	test   rax,rax
  43d780:	je     43d7b2 <strcmp@plt+0x3a02a>
  43d782:	mov    rbp,rax
  43d785:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d78f:	nop
  43d790:	mov    rdi,QWORD PTR [rbp+0x10]
  43d794:	mov    rsi,rbx
  43d797:	call   403770 <xmlStrEqual@plt>
  43d79c:	test   eax,eax
  43d79e:	jne    43d7b2 <strcmp@plt+0x3a02a>
  43d7a0:	mov    rdi,rbp
  43d7a3:	call   403210 <xmlNextElementSibling@plt>
  43d7a8:	mov    rbp,rax
  43d7ab:	test   rax,rax
  43d7ae:	jne    43d790 <strcmp@plt+0x3a008>
  43d7b0:	xor    ebp,ebp
  43d7b2:	mov    rdi,rbx
  43d7b5:	call   403780 <free@plt>
  43d7ba:	lea    rdi,[rip+0x11c87]        # 44f448 <strcmp@plt+0x4bcc0>
  43d7c1:	call   4035b0 <xmlCharStrdup@plt>
  43d7c6:	mov    rbx,rax
  43d7c9:	mov    rdi,rbp
  43d7cc:	call   403310 <xmlFirstElementChild@plt>
  43d7d1:	test   rax,rax
  43d7d4:	je     43d800 <strcmp@plt+0x3a078>
  43d7d6:	mov    rbp,rax
  43d7d9:	nop    DWORD PTR [rax+0x0]
  43d7e0:	mov    rdi,QWORD PTR [rbp+0x10]
  43d7e4:	mov    rsi,rbx
  43d7e7:	call   403770 <xmlStrEqual@plt>
  43d7ec:	test   eax,eax
  43d7ee:	jne    43d80d <strcmp@plt+0x3a085>
  43d7f0:	mov    rdi,rbp
  43d7f3:	call   403210 <xmlNextElementSibling@plt>
  43d7f8:	mov    rbp,rax
  43d7fb:	test   rax,rax
  43d7fe:	jne    43d7e0 <strcmp@plt+0x3a058>
  43d800:	mov    rdi,rbx
  43d803:	call   403780 <free@plt>
  43d808:	jmp    43d975 <strcmp@plt+0x3a1ed>
  43d80d:	mov    rdi,rbx
  43d810:	call   403780 <free@plt>
  43d815:	lea    rdi,[rip+0x11c39]        # 44f455 <strcmp@plt+0x4bccd>
  43d81c:	call   4035b0 <xmlCharStrdup@plt>
  43d821:	mov    rbx,rax
  43d824:	mov    rdi,rbp
  43d827:	call   403310 <xmlFirstElementChild@plt>
  43d82c:	test   rax,rax
  43d82f:	je     43d860 <strcmp@plt+0x3a0d8>
  43d831:	mov    r14,rax
  43d834:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d83e:	xchg   ax,ax
  43d840:	mov    rdi,QWORD PTR [r14+0x10]
  43d844:	mov    rsi,rbx
  43d847:	call   403770 <xmlStrEqual@plt>
  43d84c:	test   eax,eax
  43d84e:	jne    43d86d <strcmp@plt+0x3a0e5>
  43d850:	mov    rdi,r14
  43d853:	call   403210 <xmlNextElementSibling@plt>
  43d858:	mov    r14,rax
  43d85b:	test   rax,rax
  43d85e:	jne    43d840 <strcmp@plt+0x3a0b8>
  43d860:	mov    rdi,rbx
  43d863:	call   403780 <free@plt>
  43d868:	jmp    43d940 <strcmp@plt+0x3a1b8>
  43d86d:	mov    QWORD PTR [rsp+0x18],r15
  43d872:	mov    rdi,rbx
  43d875:	call   403780 <free@plt>
  43d87a:	jmp    43d8c4 <strcmp@plt+0x3a13c>
  43d87c:	nop    DWORD PTR [rax+0x0]
  43d880:	call   423740 <strcmp@plt+0x1ffb8>
  43d885:	mov    rdi,rax
  43d888:	mov    rsi,rbx
  43d88b:	call   42be30 <strcmp@plt+0x286a8>
  43d890:	mov    rbx,QWORD PTR [r14+0x10]
  43d894:	mov    r15,QWORD PTR [rsp+0x18]
  43d899:	nop    DWORD PTR [rax+0x0]
  43d8a0:	mov    rdi,r14
  43d8a3:	call   403210 <xmlNextElementSibling@plt>
  43d8a8:	test   rax,rax
  43d8ab:	je     43d940 <strcmp@plt+0x3a1b8>
  43d8b1:	mov    r14,rax
  43d8b4:	mov    rdi,QWORD PTR [rax+0x10]
  43d8b8:	mov    rsi,rbx
  43d8bb:	call   403788 <strcmp@plt>
  43d8c0:	test   eax,eax
  43d8c2:	jne    43d8a0 <strcmp@plt+0x3a118>
  43d8c4:	xor    eax,eax
  43d8c6:	call   422f90 <strcmp@plt+0x1f808>
  43d8cb:	mov    r15,rax
  43d8ce:	mov    rdi,r14
  43d8d1:	call   403430 <xmlNodeGetContent@plt>
  43d8d6:	mov    rdi,rax
  43d8d9:	mov    rsi,r15
  43d8dc:	call   423c40 <strcmp@plt+0x204b8>
  43d8e1:	cmp    eax,0x1
  43d8e4:	jne    43da3b <strcmp@plt+0x3a2b3>
  43d8ea:	lea    rax,[rip+0x32c0f]        # 470500 <strcmp@plt+0x6cd78>
  43d8f1:	mov    ebx,DWORD PTR [rax]
  43d8f3:	test   ebx,ebx
  43d8f5:	je     43d90a <strcmp@plt+0x3a182>
  43d8f7:	mov    rdi,r15
  43d8fa:	call   423200 <strcmp@plt+0x1fa78>
  43d8ff:	movzx  eax,ax
  43d902:	cmp    ebx,eax
  43d904:	jne    43da60 <strcmp@plt+0x3a2d8>
  43d90a:	mov    rdi,r15
  43d90d:	mov    rbx,QWORD PTR [rsp+0x8]
  43d912:	mov    rsi,rbx
  43d915:	lea    rdx,[rip+0xfffffffffffe6054]        # 423970 <strcmp@plt+0x201e8>
  43d91c:	call   42bee0 <strcmp@plt+0x28758>
  43d921:	mov    rdi,r15
  43d924:	test   al,al
  43d926:	je     43d880 <strcmp@plt+0x3a0f8>
  43d92c:	jmp    43da2a <strcmp@plt+0x3a2a2>
  43d931:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d93b:	nop    DWORD PTR [rax+rax*1+0x0]
  43d940:	mov    rbx,QWORD PTR [rbp+0x10]
  43d944:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d94e:	xchg   ax,ax
  43d950:	mov    rdi,rbp
  43d953:	call   403210 <xmlNextElementSibling@plt>
  43d958:	test   rax,rax
  43d95b:	je     43d975 <strcmp@plt+0x3a1ed>
  43d95d:	mov    rbp,rax
  43d960:	mov    rdi,QWORD PTR [rax+0x10]
  43d964:	mov    rsi,rbx
  43d967:	call   403788 <strcmp@plt>
  43d96c:	test   eax,eax
  43d96e:	jne    43d950 <strcmp@plt+0x3a1c8>
  43d970:	jmp    43d815 <strcmp@plt+0x3a08d>
  43d975:	mov    rdi,QWORD PTR [rsp+0x20]
  43d97a:	call   403710 <xmlFreeDoc@plt>
  43d97f:	mov    rdi,QWORD PTR [r12+0x48]
  43d984:	call   42c250 <strcmp@plt+0x28ac8>
  43d989:	mov    rax,QWORD PTR [rsp+0x8]
  43d98e:	mov    QWORD PTR [r12+0x48],rax
  43d993:	lea    rbx,[rip+0x27416]        # 464db0 <strcmp@plt+0x61628>
  43d99a:	cmp    DWORD PTR [rbx],0x0
  43d99d:	jle    43d9d1 <strcmp@plt+0x3a249>
  43d99f:	lea    rsi,[rip+0x11bbd]        # 44f563 <strcmp@plt+0x4bddb>
  43d9a6:	mov    edi,0x5
  43d9ab:	xor    eax,eax
  43d9ad:	call   42e800 <strcmp@plt+0x2b078>
  43d9b2:	cmp    DWORD PTR [rbx],0x2
  43d9b5:	jl     43d9d1 <strcmp@plt+0x3a249>
  43d9b7:	lea    rsi,[rip+0x7c35]        # 4455f3 <strcmp@plt+0x41e6b>
  43d9be:	lea    rdx,[rip+0x11a61]        # 44f426 <strcmp@plt+0x4bc9e>
  43d9c5:	mov    edi,0x6
  43d9ca:	xor    eax,eax
  43d9cc:	call   42e800 <strcmp@plt+0x2b078>
  43d9d1:	mov    rdi,QWORD PTR [r12+0x48]
  43d9d6:	lea    rsi,[rip+0xfffffffffffe5753]        # 423130 <strcmp@plt+0x1f9a8>
  43d9dd:	mov    edx,0x5
  43d9e2:	call   42bf40 <strcmp@plt+0x287b8>
  43d9e7:	movzx  esi,BYTE PTR [r13+0x0]
  43d9ec:	movzx  edx,BYTE PTR [r13+0x1]
  43d9f1:	movzx  ecx,BYTE PTR [r13+0x2]
  43d9f6:	lea    rdi,[rsp+0x10]
  43d9fb:	xor    r8d,r8d
  43d9fe:	call   43b9e0 <strcmp@plt+0x38258>
  43da03:	mov    rsi,QWORD PTR [rsp+0x10]
  43da08:	xor    ecx,ecx
  43da0a:	mov    rdi,r15
  43da0d:	mov    edx,eax
  43da0f:	call   43bb20 <strcmp@plt+0x38398>
  43da14:	mov    ebx,0x1
  43da19:	mov    eax,ebx
  43da1b:	add    rsp,0x28
  43da1f:	pop    rbx
  43da20:	pop    r12
  43da22:	pop    r13
  43da24:	pop    r14
  43da26:	pop    r15
  43da28:	pop    rbp
  43da29:	ret    
  43da2a:	call   423130 <strcmp@plt+0x1f9a8>
  43da2f:	mov    rcx,rax
  43da32:	lea    rsi,[rip+0x11ad7]        # 44f510 <strcmp@plt+0x4bd88>
  43da39:	jmp    43da72 <strcmp@plt+0x3a2ea>
  43da3b:	lea    rax,[rip+0x2736e]        # 464db0 <strcmp@plt+0x61628>
  43da42:	cmp    DWORD PTR [rax],0x0
  43da45:	jle    43da81 <strcmp@plt+0x3a2f9>
  43da47:	mov    rdi,r14
  43da4a:	call   403430 <xmlNodeGetContent@plt>
  43da4f:	mov    rcx,rax
  43da52:	lea    rsi,[rip+0x11a11]        # 44f46a <strcmp@plt+0x4bce2>
  43da59:	mov    edi,0x5
  43da5e:	jmp    43da77 <strcmp@plt+0x3a2ef>
  43da60:	mov    rdi,r15
  43da63:	call   423130 <strcmp@plt+0x1f9a8>
  43da68:	mov    rcx,rax
  43da6b:	lea    rsi,[rip+0x11a30]        # 44f4a2 <strcmp@plt+0x4bd1a>
  43da72:	mov    edi,0x3
  43da77:	xor    eax,eax
  43da79:	mov    rdx,rcx
  43da7c:	call   42e800 <strcmp@plt+0x2b078>
  43da81:	lea    rsi,[rip+0x11b0f]        # 44f597 <strcmp@plt+0x4be0f>
  43da88:	xor    ebx,ebx
  43da8a:	mov    edi,0x2
  43da8f:	xor    eax,eax
  43da91:	call   42e800 <strcmp@plt+0x2b078>
  43da96:	mov    rdi,QWORD PTR [rsp+0x8]
  43da9b:	call   42c250 <strcmp@plt+0x28ac8>
  43daa0:	mov    rdi,QWORD PTR [rsp+0x20]
  43daa5:	test   rdi,rdi
  43daa8:	mov    rbp,QWORD PTR [rsp+0x18]
  43daad:	je     43dab4 <strcmp@plt+0x3a32c>
  43daaf:	call   403710 <xmlFreeDoc@plt>
  43dab4:	movzx  esi,BYTE PTR [r13+0x0]
  43dab9:	movzx  edx,BYTE PTR [r13+0x1]
  43dabe:	movzx  ecx,BYTE PTR [r13+0x2]
  43dac3:	lea    rdi,[rsp+0x10]
  43dac8:	mov    r8d,0x1
  43dace:	call   43b9e0 <strcmp@plt+0x38258>
  43dad3:	mov    rsi,QWORD PTR [rsp+0x10]
  43dad8:	xor    ecx,ecx
  43dada:	mov    rdi,rbp
  43dadd:	mov    edx,eax
  43dadf:	call   43bb20 <strcmp@plt+0x38398>
  43dae4:	jmp    43da19 <strcmp@plt+0x3a291>
  43dae9:	nop    DWORD PTR [rax+0x0]
  43daf0:	push   r15
  43daf2:	push   r14
  43daf4:	push   rbx
  43daf5:	sub    rsp,0x10
  43daf9:	mov    rbx,rsi
  43dafc:	mov    r14,rdi
  43daff:	lea    r15,[rip+0x272aa]        # 464db0 <strcmp@plt+0x61628>
  43db06:	cmp    DWORD PTR [r15],0x2
  43db0a:	jl     43db1f <strcmp@plt+0x3a397>
  43db0c:	lea    rsi,[rip+0x11ab4]        # 44f5c7 <strcmp@plt+0x4be3f>
  43db13:	mov    edi,0x6
  43db18:	xor    eax,eax
  43db1a:	call   42e800 <strcmp@plt+0x2b078>
  43db1f:	lea    rax,[rip+0x32a72]        # 470598 <strcmp@plt+0x6ce10>
  43db26:	mov    rdi,QWORD PTR [rax]
  43db29:	call   40e9a0 <strcmp@plt+0xb218>
  43db2e:	mov    rdi,QWORD PTR [rax+0x48]
  43db32:	cmp    DWORD PTR [rdi+0x18],0x0
  43db36:	je     43db7f <strcmp@plt+0x3a3f7>
  43db38:	call   42c1e0 <strcmp@plt+0x28a58>
  43db3d:	movzx  esi,BYTE PTR [rbx]
  43db40:	movzx  edx,BYTE PTR [rbx+0x1]
  43db44:	movzx  ecx,BYTE PTR [rbx+0x2]
  43db48:	lea    rdi,[rsp+0x8]
  43db4d:	xor    r8d,r8d
  43db50:	call   43b9e0 <strcmp@plt+0x38258>
  43db55:	mov    rsi,QWORD PTR [rsp+0x8]
  43db5a:	xor    ecx,ecx
  43db5c:	mov    rdi,r14
  43db5f:	mov    edx,eax
  43db61:	call   43bb20 <strcmp@plt+0x38398>
  43db66:	mov    ebx,0x1
  43db6b:	cmp    DWORD PTR [r15],0x0
  43db6f:	jle    43dbc0 <strcmp@plt+0x3a438>
  43db71:	lea    rsi,[rip+0x11abb]        # 44f633 <strcmp@plt+0x4beab>
  43db78:	mov    edi,0x5
  43db7d:	jmp    43dbb9 <strcmp@plt+0x3a431>
  43db7f:	movzx  esi,BYTE PTR [rbx]
  43db82:	movzx  edx,BYTE PTR [rbx+0x1]
  43db86:	movzx  ecx,BYTE PTR [rbx+0x2]
  43db8a:	lea    rdi,[rsp+0x8]
  43db8f:	mov    r8d,0x1
  43db95:	call   43b9e0 <strcmp@plt+0x38258>
  43db9a:	mov    rsi,QWORD PTR [rsp+0x8]
  43db9f:	xor    ebx,ebx
  43dba1:	xor    ecx,ecx
  43dba3:	mov    rdi,r14
  43dba6:	mov    edx,eax
  43dba8:	call   43bb20 <strcmp@plt+0x38398>
  43dbad:	lea    rsi,[rip+0x11a37]        # 44f5eb <strcmp@plt+0x4be63>
  43dbb4:	mov    edi,0x3
  43dbb9:	xor    eax,eax
  43dbbb:	call   42e800 <strcmp@plt+0x2b078>
  43dbc0:	mov    eax,ebx
  43dbc2:	add    rsp,0x10
  43dbc6:	pop    rbx
  43dbc7:	pop    r14
  43dbc9:	pop    r15
  43dbcb:	ret    
  43dbcc:	nop    DWORD PTR [rax+0x0]
  43dbd0:	push   rbp
  43dbd1:	push   r15
  43dbd3:	push   r14
  43dbd5:	push   r13
  43dbd7:	push   r12
  43dbd9:	push   rbx
  43dbda:	sub    rsp,0x18
  43dbde:	mov    rbx,rdx
  43dbe1:	mov    r12,rsi
  43dbe4:	mov    QWORD PTR [rsp+0x8],rdi
  43dbe9:	lea    rax,[rip+0x271c0]        # 464db0 <strcmp@plt+0x61628>
  43dbf0:	cmp    DWORD PTR [rax],0x0
  43dbf3:	jle    43dc08 <strcmp@plt+0x3a480>
  43dbf5:	lea    rsi,[rip+0x11a5a]        # 44f656 <strcmp@plt+0x4bece>
  43dbfc:	mov    edi,0x5
  43dc01:	xor    eax,eax
  43dc03:	call   42e800 <strcmp@plt+0x2b078>
  43dc08:	lea    rax,[rip+0x32989]        # 470598 <strcmp@plt+0x6ce10>
  43dc0f:	mov    rdi,QWORD PTR [rax]
  43dc12:	call   40e9a0 <strcmp@plt+0xb218>
  43dc17:	mov    QWORD PTR [rsp+0x10],rax
  43dc1c:	mov    esi,DWORD PTR [r12+0x4]
  43dc21:	lea    rcx,[rip+0x1180c]        # 44f434 <strcmp@plt+0x4bcac>
  43dc28:	xor    edx,edx
  43dc2a:	mov    r8d,0x2160
  43dc30:	mov    rdi,rbx
  43dc33:	call   403030 <xmlReadMemory@plt>
  43dc38:	mov    r13,rax
  43dc3b:	mov    rdi,rax
  43dc3e:	call   4035f0 <xmlDocGetRootElement@plt>
  43dc43:	mov    rdi,rax
  43dc46:	call   403310 <xmlFirstElementChild@plt>
  43dc4b:	mov    r15,rax
  43dc4e:	lea    rdi,[rip+0x11a28]        # 44f67d <strcmp@plt+0x4bef5>
  43dc55:	call   4035b0 <xmlCharStrdup@plt>
  43dc5a:	mov    rbp,rax
  43dc5d:	mov    rdi,r15
  43dc60:	call   403310 <xmlFirstElementChild@plt>
  43dc65:	test   rax,rax
  43dc68:	je     43dc90 <strcmp@plt+0x3a508>
  43dc6a:	mov    r14,rax
  43dc6d:	nop    DWORD PTR [rax]
  43dc70:	mov    rdi,QWORD PTR [r14+0x10]
  43dc74:	mov    rsi,rbp
  43dc77:	call   403770 <xmlStrEqual@plt>
  43dc7c:	test   eax,eax
  43dc7e:	jne    43dc9c <strcmp@plt+0x3a514>
  43dc80:	mov    rdi,r14
  43dc83:	call   403210 <xmlNextElementSibling@plt>
  43dc88:	mov    r14,rax
  43dc8b:	test   rax,rax
  43dc8e:	jne    43dc70 <strcmp@plt+0x3a4e8>
  43dc90:	mov    rdi,rbp
  43dc93:	call   403780 <free@plt>
  43dc98:	xor    ebx,ebx
  43dc9a:	jmp    43dcc0 <strcmp@plt+0x3a538>
  43dc9c:	mov    rdi,rbp
  43dc9f:	call   403780 <free@plt>
  43dca4:	mov    rdi,r14
  43dca7:	call   403430 <xmlNodeGetContent@plt>
  43dcac:	lea    rsi,[rip+0x48a7]        # 44255a <strcmp@plt+0x3edd2>
  43dcb3:	mov    rdi,rax
  43dcb6:	call   403788 <strcmp@plt>
  43dcbb:	test   eax,eax
  43dcbd:	sete   bl
  43dcc0:	lea    rdi,[rip+0xfffffffffffd2229]        # 40fef0 <strcmp@plt+0xc768>
  43dcc7:	call   42bc00 <strcmp@plt+0x28478>
  43dccc:	mov    rbp,rax
  43dccf:	movzx  esi,bl
  43dcd2:	mov    rdi,r15
  43dcd5:	mov    rdx,rax
  43dcd8:	call   43d130 <strcmp@plt+0x399a8>
  43dcdd:	cmp    eax,0x1
  43dce0:	jne    43dd69 <strcmp@plt+0x3a5e1>
  43dce6:	mov    rdi,r13
  43dce9:	call   403710 <xmlFreeDoc@plt>
  43dcee:	mov    rbx,QWORD PTR [rsp+0x10]
  43dcf3:	mov    rdi,QWORD PTR [rbx+0x78]
  43dcf7:	call   42c250 <strcmp@plt+0x28ac8>
  43dcfc:	mov    QWORD PTR [rbx+0x78],rbp
  43dd00:	mov    rdi,rbx
  43dd03:	call   40efa0 <strcmp@plt+0xb818>
  43dd08:	lea    rax,[rip+0x270a1]        # 464db0 <strcmp@plt+0x61628>
  43dd0f:	cmp    DWORD PTR [rax],0x0
  43dd12:	jle    43dd27 <strcmp@plt+0x3a59f>
  43dd14:	lea    rsi,[rip+0x1199e]        # 44f6b9 <strcmp@plt+0x4bf31>
  43dd1b:	mov    edi,0x5
  43dd20:	xor    eax,eax
  43dd22:	call   42e800 <strcmp@plt+0x2b078>
  43dd27:	mov    esi,0x5
  43dd2c:	mov    rdi,rbx
  43dd2f:	call   40fcf0 <strcmp@plt+0xc568>
  43dd34:	movzx  esi,BYTE PTR [r12]
  43dd39:	movzx  edx,BYTE PTR [r12+0x1]
  43dd3f:	movzx  ecx,BYTE PTR [r12+0x2]
  43dd45:	mov    rdi,rsp
  43dd48:	xor    r8d,r8d
  43dd4b:	call   43b9e0 <strcmp@plt+0x38258>
  43dd50:	mov    rsi,QWORD PTR [rsp]
  43dd54:	xor    ecx,ecx
  43dd56:	mov    rdi,QWORD PTR [rsp+0x8]
  43dd5b:	mov    edx,eax
  43dd5d:	call   43bb20 <strcmp@plt+0x38398>
  43dd62:	mov    ebx,0x1
  43dd67:	jmp    43dde3 <strcmp@plt+0x3a65b>
  43dd69:	lea    rax,[rip+0x27040]        # 464db0 <strcmp@plt+0x61628>
  43dd70:	cmp    DWORD PTR [rax],0x0
  43dd73:	jle    43dd88 <strcmp@plt+0x3a600>
  43dd75:	lea    rsi,[rip+0x1190d]        # 44f689 <strcmp@plt+0x4bf01>
  43dd7c:	mov    edi,0x5
  43dd81:	xor    eax,eax
  43dd83:	call   42e800 <strcmp@plt+0x2b078>
  43dd88:	mov    rdi,rbp
  43dd8b:	call   42c250 <strcmp@plt+0x28ac8>
  43dd90:	test   r13,r13
  43dd93:	je     43dd9d <strcmp@plt+0x3a615>
  43dd95:	mov    rdi,r13
  43dd98:	call   403710 <xmlFreeDoc@plt>
  43dd9d:	movzx  esi,BYTE PTR [r12]
  43dda2:	movzx  edx,BYTE PTR [r12+0x1]
  43dda8:	movzx  ecx,BYTE PTR [r12+0x2]
  43ddae:	mov    rdi,rsp
  43ddb1:	mov    r8d,0x1
  43ddb7:	call   43b9e0 <strcmp@plt+0x38258>
  43ddbc:	mov    rsi,QWORD PTR [rsp]
  43ddc0:	xor    ebx,ebx
  43ddc2:	xor    ecx,ecx
  43ddc4:	mov    rdi,QWORD PTR [rsp+0x8]
  43ddc9:	mov    edx,eax
  43ddcb:	call   43bb20 <strcmp@plt+0x38398>
  43ddd0:	lea    rsi,[rip+0x11914]        # 44f6eb <strcmp@plt+0x4bf63>
  43ddd7:	mov    edi,0x3
  43dddc:	xor    eax,eax
  43ddde:	call   42e800 <strcmp@plt+0x2b078>
  43dde3:	mov    eax,ebx
  43dde5:	add    rsp,0x18
  43dde9:	pop    rbx
  43ddea:	pop    r12
  43ddec:	pop    r13
  43ddee:	pop    r14
  43ddf0:	pop    r15
  43ddf2:	pop    rbp
  43ddf3:	ret    
  43ddf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ddfe:	xchg   ax,ax
  43de00:	push   r15
  43de02:	push   r14
  43de04:	push   rbx
  43de05:	sub    rsp,0x10
  43de09:	mov    rbx,rsi
  43de0c:	mov    r14,rdi
  43de0f:	lea    r15,[rip+0x26f9a]        # 464db0 <strcmp@plt+0x61628>
  43de16:	cmp    DWORD PTR [r15],0x2
  43de1a:	jl     43de2f <strcmp@plt+0x3a6a7>
  43de1c:	lea    rsi,[rip+0x118fa]        # 44f71d <strcmp@plt+0x4bf95>
  43de23:	mov    edi,0x6
  43de28:	xor    eax,eax
  43de2a:	call   42e800 <strcmp@plt+0x2b078>
  43de2f:	lea    rax,[rip+0x32762]        # 470598 <strcmp@plt+0x6ce10>
  43de36:	mov    rdi,QWORD PTR [rax]
  43de39:	call   40e9a0 <strcmp@plt+0xb218>
  43de3e:	mov    rdi,QWORD PTR [rax+0x78]
  43de42:	cmp    DWORD PTR [rdi+0x18],0x0
  43de46:	je     43de8f <strcmp@plt+0x3a707>
  43de48:	call   42c1e0 <strcmp@plt+0x28a58>
  43de4d:	movzx  esi,BYTE PTR [rbx]
  43de50:	movzx  edx,BYTE PTR [rbx+0x1]
  43de54:	movzx  ecx,BYTE PTR [rbx+0x2]
  43de58:	lea    rdi,[rsp+0x8]
  43de5d:	xor    r8d,r8d
  43de60:	call   43b9e0 <strcmp@plt+0x38258>
  43de65:	mov    rsi,QWORD PTR [rsp+0x8]
  43de6a:	xor    ecx,ecx
  43de6c:	mov    rdi,r14
  43de6f:	mov    edx,eax
  43de71:	call   43bb20 <strcmp@plt+0x38398>
  43de76:	mov    ebx,0x1
  43de7b:	cmp    DWORD PTR [r15],0x0
  43de7f:	jle    43ded0 <strcmp@plt+0x3a748>
  43de81:	lea    rsi,[rip+0x118b8]        # 44f740 <strcmp@plt+0x4bfb8>
  43de88:	mov    edi,0x5
  43de8d:	jmp    43dec9 <strcmp@plt+0x3a741>
  43de8f:	movzx  esi,BYTE PTR [rbx]
  43de92:	movzx  edx,BYTE PTR [rbx+0x1]
  43de96:	movzx  ecx,BYTE PTR [rbx+0x2]
  43de9a:	lea    rdi,[rsp+0x8]
  43de9f:	mov    r8d,0x1
  43dea5:	call   43b9e0 <strcmp@plt+0x38258>
  43deaa:	mov    rsi,QWORD PTR [rsp+0x8]
  43deaf:	xor    ebx,ebx
  43deb1:	xor    ecx,ecx
  43deb3:	mov    rdi,r14
  43deb6:	mov    edx,eax
  43deb8:	call   43bb20 <strcmp@plt+0x38398>
  43debd:	lea    rsi,[rip+0x11727]        # 44f5eb <strcmp@plt+0x4be63>
  43dec4:	mov    edi,0x3
  43dec9:	xor    eax,eax
  43decb:	call   42e800 <strcmp@plt+0x2b078>
  43ded0:	mov    eax,ebx
  43ded2:	add    rsp,0x10
  43ded6:	pop    rbx
  43ded7:	pop    r14
  43ded9:	pop    r15
  43dedb:	ret    
  43dedc:	nop    DWORD PTR [rax+0x0]
  43dee0:	push   rbp
  43dee1:	push   r15
  43dee3:	push   r14
  43dee5:	push   r13
  43dee7:	push   r12
  43dee9:	push   rbx
  43deea:	sub    rsp,0x868
  43def1:	mov    rbx,rdx
  43def4:	mov    rbp,rsi
  43def7:	mov    QWORD PTR [rsp+0x8],rdi
  43defc:	lea    rax,[rip+0x26ead]        # 464db0 <strcmp@plt+0x61628>
  43df03:	cmp    DWORD PTR [rax],0x0
  43df06:	jle    43df1b <strcmp@plt+0x3a793>
  43df08:	lea    rsi,[rip+0x11853]        # 44f762 <strcmp@plt+0x4bfda>
  43df0f:	mov    edi,0x5
  43df14:	xor    eax,eax
  43df16:	call   42e800 <strcmp@plt+0x2b078>
  43df1b:	lea    rdi,[rip+0xfffffffffffe507e]        # 422fa0 <strcmp@plt+0x1f818>
  43df22:	call   436260 <strcmp@plt+0x32ad8>
  43df27:	mov    QWORD PTR [rsp+0x20],rax
  43df2c:	lea    rdi,[rip+0xfffffffffffc692d]        # 404860 <strcmp@plt+0x10d8>
  43df33:	call   42bc00 <strcmp@plt+0x28478>
  43df38:	mov    QWORD PTR [rsp+0x28],rax
  43df3d:	call   42bbd0 <strcmp@plt+0x28448>
  43df42:	mov    QWORD PTR [rsp],rax
  43df46:	call   42bbd0 <strcmp@plt+0x28448>
  43df4b:	mov    QWORD PTR [rsp+0x30],rax
  43df50:	lea    r13,[rip+0x32641]        # 470598 <strcmp@plt+0x6ce10>
  43df57:	mov    rdi,QWORD PTR [r13+0x0]
  43df5b:	call   40e9a0 <strcmp@plt+0xb218>
  43df60:	mov    QWORD PTR [rsp+0x18],rax
  43df65:	mov    QWORD PTR [rsp+0x48],rbp
  43df6a:	mov    esi,DWORD PTR [rbp+0x4]
  43df6d:	lea    rcx,[rip+0x114c0]        # 44f434 <strcmp@plt+0x4bcac>
  43df74:	xor    edx,edx
  43df76:	mov    r8d,0x2160
  43df7c:	mov    rdi,rbx
  43df7f:	call   403030 <xmlReadMemory@plt>
  43df84:	mov    r15,rax
  43df87:	mov    rdi,rax
  43df8a:	call   4035f0 <xmlDocGetRootElement@plt>
  43df8f:	mov    rdi,rax
  43df92:	call   403310 <xmlFirstElementChild@plt>
  43df97:	mov    rdi,rax
  43df9a:	call   403310 <xmlFirstElementChild@plt>
  43df9f:	test   rax,rax
  43dfa2:	je     43e007 <strcmp@plt+0x3a87f>
  43dfa4:	mov    rbx,rax
  43dfa7:	jmp    43dff0 <strcmp@plt+0x3a868>
  43dfa9:	nop    DWORD PTR [rax+0x0]
  43dfb0:	mov    rdi,rax
  43dfb3:	mov    rsi,QWORD PTR [rsp+0x28]
  43dfb8:	call   42bcf0 <strcmp@plt+0x28568>
  43dfbd:	mov    rbp,QWORD PTR [rbx+0x10]
  43dfc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43dfcb:	nop    DWORD PTR [rax+rax*1+0x0]
  43dfd0:	mov    rdi,rbx
  43dfd3:	call   403210 <xmlNextElementSibling@plt>
  43dfd8:	test   rax,rax
  43dfdb:	je     43e007 <strcmp@plt+0x3a87f>
  43dfdd:	mov    rbx,rax
  43dfe0:	mov    rdi,QWORD PTR [rax+0x10]
  43dfe4:	mov    rsi,rbp
  43dfe7:	call   403788 <strcmp@plt>
  43dfec:	test   eax,eax
  43dfee:	jne    43dfd0 <strcmp@plt+0x3a848>
  43dff0:	mov    rdi,rbx
  43dff3:	mov    rsi,QWORD PTR [rsp+0x20]
  43dff8:	call   43c770 <strcmp@plt+0x38fe8>
  43dffd:	test   rax,rax
  43e000:	jne    43dfb0 <strcmp@plt+0x3a828>
  43e002:	jmp    43e64b <strcmp@plt+0x3aec3>
  43e007:	mov    rdi,r15
  43e00a:	call   403710 <xmlFreeDoc@plt>
  43e00f:	mov    rax,QWORD PTR [rsp+0x28]
  43e014:	mov    r12,QWORD PTR [rax+0x8]
  43e018:	cmp    r12,rax
  43e01b:	je     43e157 <strcmp@plt+0x3a9cf>
  43e021:	mov    rax,QWORD PTR [rsp+0x18]
  43e026:	add    rax,0x70
  43e02a:	mov    QWORD PTR [rsp+0x10],rax
  43e02f:	xor    eax,eax
  43e031:	mov    QWORD PTR [rsp+0x40],rax
  43e036:	xor    r14d,r14d
  43e039:	nop    DWORD PTR [rax+0x0]
  43e040:	mov    r15,QWORD PTR [r12+0x10]
  43e045:	mov    ecx,0x1
  43e04a:	mov    rdi,QWORD PTR [rsp+0x18]
  43e04f:	mov    rsi,QWORD PTR [rsp+0x20]
  43e054:	mov    rdx,r15
  43e057:	call   405f90 <strcmp@plt+0x2808>
  43e05c:	test   rax,rax
  43e05f:	je     43e162 <strcmp@plt+0x3a9da>
  43e065:	mov    rbx,rax
  43e068:	mov    rdi,QWORD PTR [r13+0x0]
  43e06c:	call   4079d0 <strcmp@plt+0x4248>
  43e071:	cmp    eax,0x3
  43e074:	jne    43e0ca <strcmp@plt+0x3a942>
  43e076:	mov    rdi,rbx
  43e079:	call   4230e0 <strcmp@plt+0x1f958>
  43e07e:	mov    rdi,rax
  43e081:	call   423200 <strcmp@plt+0x1fa78>
  43e086:	movzx  eax,ax
  43e089:	cmp    eax,0xa
  43e08c:	je     43e0a3 <strcmp@plt+0x3a91b>
  43e08e:	cmp    eax,0x2
  43e091:	jne    43e0b0 <strcmp@plt+0x3a928>
  43e093:	mov    eax,r14d
  43e096:	add    eax,0x1
  43e099:	cmp    eax,0x1
  43e09c:	jle    43e0bc <strcmp@plt+0x3a934>
  43e09e:	jmp    43e1c3 <strcmp@plt+0x3aa3b>
  43e0a3:	mov    rax,QWORD PTR [rsp+0x40]
  43e0a8:	add    eax,0x1
  43e0ab:	mov    QWORD PTR [rsp+0x40],rax
  43e0b0:	mov    eax,r14d
  43e0b3:	cmp    eax,0x1
  43e0b6:	jg     43e1c3 <strcmp@plt+0x3aa3b>
  43e0bc:	mov    r14d,eax
  43e0bf:	cmp    DWORD PTR [rsp+0x40],0x2
  43e0c4:	jge    43e1c3 <strcmp@plt+0x3aa3b>
  43e0ca:	mov    BYTE PTR [rbx+0x35],0x1
  43e0ce:	mov    rdi,rbx
  43e0d1:	call   431b60 <strcmp@plt+0x2e3d8>
  43e0d6:	test   rax,rax
  43e0d9:	je     43e17e <strcmp@plt+0x3a9f6>
  43e0df:	mov    rbp,rax
  43e0e2:	mov    rcx,QWORD PTR [rsp+0x18]
  43e0e7:	mov    rax,QWORD PTR [rcx+0x38]
  43e0eb:	mov    rdi,QWORD PTR [rcx+0x40]
  43e0ef:	xor    edx,edx
  43e0f1:	mov    rsi,rbp
  43e0f4:	call   QWORD PTR [rax+0x10]
  43e0f7:	cmp    eax,0x1
  43e0fa:	jne    43e19a <strcmp@plt+0x3aa12>
  43e100:	mov    rax,QWORD PTR [rsp+0x10]
  43e105:	mov    rdi,QWORD PTR [rax]
  43e108:	mov    rsi,rbx
  43e10b:	call   407f30 <strcmp@plt+0x47a8>
  43e110:	test   rax,rax
  43e113:	je     43e138 <strcmp@plt+0x3a9b0>
  43e115:	mov    rdi,rax
  43e118:	call   431ad0 <strcmp@plt+0x2e348>
  43e11d:	mov    rdi,rax
  43e120:	mov    rsi,rbx
  43e123:	call   428f00 <strcmp@plt+0x25778>
  43e128:	test   eax,eax
  43e12a:	je     43e138 <strcmp@plt+0x3a9b0>
  43e12c:	mov    rdi,rbp
  43e12f:	mov    rsi,QWORD PTR [rsp]
  43e133:	call   42bcf0 <strcmp@plt+0x28568>
  43e138:	mov    rdi,rbp
  43e13b:	mov    rsi,QWORD PTR [rsp+0x30]
  43e140:	call   42bcf0 <strcmp@plt+0x28568>
  43e145:	mov    r12,QWORD PTR [r12+0x8]
  43e14a:	cmp    r12,QWORD PTR [rsp+0x28]
  43e14f:	jne    43e040 <strcmp@plt+0x3a8b8>
  43e155:	jmp    43e1d6 <strcmp@plt+0x3aa4e>
  43e157:	mov    rbx,QWORD PTR [rsp+0x18]
  43e15c:	add    rbx,0x70
  43e160:	jmp    43e1db <strcmp@plt+0x3aa53>
  43e162:	lea    rax,[rip+0x26c47]        # 464db0 <strcmp@plt+0x61628>
  43e169:	cmp    DWORD PTR [rax],0x2
  43e16c:	jl     43e5f6 <strcmp@plt+0x3ae6e>
  43e172:	mov    rdx,QWORD PTR [r15]
  43e175:	lea    rsi,[rip+0x1160c]        # 44f788 <strcmp@plt+0x4c000>
  43e17c:	jmp    43e1b4 <strcmp@plt+0x3aa2c>
  43e17e:	lea    rax,[rip+0x26c2b]        # 464db0 <strcmp@plt+0x61628>
  43e185:	cmp    DWORD PTR [rax],0x2
  43e188:	jl     43e5f6 <strcmp@plt+0x3ae6e>
  43e18e:	mov    rdx,QWORD PTR [r15]
  43e191:	lea    rsi,[rip+0x1165e]        # 44f7f6 <strcmp@plt+0x4c06e>
  43e198:	jmp    43e1b4 <strcmp@plt+0x3aa2c>
  43e19a:	lea    rax,[rip+0x26c0f]        # 464db0 <strcmp@plt+0x61628>
  43e1a1:	cmp    DWORD PTR [rax],0x2
  43e1a4:	jl     43e5f6 <strcmp@plt+0x3ae6e>
  43e1aa:	mov    rdx,QWORD PTR [r15]
  43e1ad:	lea    rsi,[rip+0x11672]        # 44f826 <strcmp@plt+0x4c09e>
  43e1b4:	xor    r15d,r15d
  43e1b7:	mov    edi,0x6
  43e1bc:	xor    eax,eax
  43e1be:	jmp    43e646 <strcmp@plt+0x3aebe>
  43e1c3:	lea    rsi,[rip+0x115e3]        # 44f7ad <strcmp@plt+0x4c025>
  43e1ca:	mov    edi,0x3
  43e1cf:	xor    eax,eax
  43e1d1:	call   42e800 <strcmp@plt+0x2b078>
  43e1d6:	mov    rbx,QWORD PTR [rsp+0x10]
  43e1db:	call   42bbd0 <strcmp@plt+0x28448>
  43e1e0:	mov    rbp,rax
  43e1e3:	mov    rax,QWORD PTR [rbx]
  43e1e6:	mov    rax,QWORD PTR [rax]
  43e1e9:	mov    rdi,QWORD PTR [rax]
  43e1ec:	mov    rsi,rbp
  43e1ef:	call   42bcf0 <strcmp@plt+0x28568>
  43e1f4:	mov    rax,QWORD PTR [rbx]
  43e1f7:	mov    rax,QWORD PTR [rax]
  43e1fa:	mov    rdi,QWORD PTR [rax+0x8]
  43e1fe:	mov    QWORD PTR [rsp+0x38],rbp
  43e203:	mov    rsi,rbp
  43e206:	call   42bcf0 <strcmp@plt+0x28568>
  43e20b:	mov    rax,QWORD PTR [rbx]
  43e20e:	mov    rcx,QWORD PTR [rax]
  43e211:	mov    rdx,QWORD PTR [rcx+0x10]
  43e215:	mov    rdx,QWORD PTR [rdx]
  43e218:	cmp    DWORD PTR [rdx],0x0
  43e21b:	mov    QWORD PTR [rsp+0x10],rbx
  43e220:	je     43e279 <strcmp@plt+0x3aaf1>
  43e222:	xor    ebx,ebx
  43e224:	mov    r14d,0x3
  43e22a:	xor    ebp,ebp
  43e22c:	nop    DWORD PTR [rax+0x0]
  43e230:	mov    rcx,QWORD PTR [rdx+0x10]
  43e234:	mov    esi,ebp
  43e236:	shr    esi,0x4
  43e239:	mov    edi,ebx
  43e23b:	and    dil,0x1e
  43e23f:	shlx   edi,r14d,edi
  43e244:	test   DWORD PTR [rcx+rsi*4],edi
  43e247:	jne    43e265 <strcmp@plt+0x3aadd>
  43e249:	mov    rax,QWORD PTR [rdx+0x20]
  43e24d:	mov    ecx,ebp
  43e24f:	mov    rdi,QWORD PTR [rax+rcx*8]
  43e253:	mov    rsi,QWORD PTR [rsp+0x38]
  43e258:	call   42bcf0 <strcmp@plt+0x28568>
  43e25d:	mov    rax,QWORD PTR [rsp+0x10]
  43e262:	mov    rax,QWORD PTR [rax]
  43e265:	add    ebp,0x1
  43e268:	mov    rcx,QWORD PTR [rax]
  43e26b:	mov    rdx,QWORD PTR [rcx+0x10]
  43e26f:	mov    rdx,QWORD PTR [rdx]
  43e272:	add    ebx,0x2
  43e275:	cmp    ebp,DWORD PTR [rdx]
  43e277:	jne    43e230 <strcmp@plt+0x3aaa8>
  43e279:	mov    rdx,QWORD PTR [rcx+0x18]
  43e27d:	mov    rdx,QWORD PTR [rdx]
  43e280:	cmp    DWORD PTR [rdx],0x0
  43e283:	je     43e2d9 <strcmp@plt+0x3ab51>
  43e285:	xor    ebx,ebx
  43e287:	mov    r14d,0x3
  43e28d:	xor    ebp,ebp
  43e28f:	nop
  43e290:	mov    rcx,QWORD PTR [rdx+0x10]
  43e294:	mov    esi,ebp
  43e296:	shr    esi,0x4
  43e299:	mov    edi,ebx
  43e29b:	and    dil,0x1e
  43e29f:	shlx   edi,r14d,edi
  43e2a4:	test   DWORD PTR [rcx+rsi*4],edi
  43e2a7:	jne    43e2c5 <strcmp@plt+0x3ab3d>
  43e2a9:	mov    rax,QWORD PTR [rdx+0x20]
  43e2ad:	mov    ecx,ebp
  43e2af:	mov    rdi,QWORD PTR [rax+rcx*8]
  43e2b3:	mov    rsi,QWORD PTR [rsp+0x38]
  43e2b8:	call   42bcf0 <strcmp@plt+0x28568>
  43e2bd:	mov    rax,QWORD PTR [rsp+0x10]
  43e2c2:	mov    rax,QWORD PTR [rax]
  43e2c5:	add    ebp,0x1
  43e2c8:	mov    rcx,QWORD PTR [rax]
  43e2cb:	mov    rdx,QWORD PTR [rcx+0x18]
  43e2cf:	mov    rdx,QWORD PTR [rdx]
  43e2d2:	add    ebx,0x2
  43e2d5:	cmp    ebp,DWORD PTR [rdx]
  43e2d7:	jne    43e290 <strcmp@plt+0x3ab08>
  43e2d9:	mov    rdi,QWORD PTR [rcx+0x20]
  43e2dd:	mov    rbx,QWORD PTR [rsp+0x38]
  43e2e2:	mov    rsi,rbx
  43e2e5:	call   42bcf0 <strcmp@plt+0x28568>
  43e2ea:	mov    rax,QWORD PTR [rsp+0x10]
  43e2ef:	mov    rax,QWORD PTR [rax]
  43e2f2:	mov    rax,QWORD PTR [rax]
  43e2f5:	mov    rdi,QWORD PTR [rax+0x20]
  43e2f9:	mov    rsi,rbx
  43e2fc:	call   42bcf0 <strcmp@plt+0x28568>
  43e301:	mov    rax,QWORD PTR [rbx+0x8]
  43e305:	cmp    rax,rbx
  43e308:	je     43e430 <strcmp@plt+0x3aca8>
  43e30e:	xchg   ax,ax
  43e310:	mov    QWORD PTR [rsp+0x40],rax
  43e315:	mov    rax,QWORD PTR [rax+0x10]
  43e319:	mov    r14,QWORD PTR [rax]
  43e31c:	test   r14,r14
  43e31f:	je     43e41c <strcmp@plt+0x3ac94>
  43e325:	xor    ebp,ebp
  43e327:	nop    WORD PTR [rax+rax*1+0x0]
  43e330:	cmp    QWORD PTR [r14+0x8],0x0
  43e335:	je     43e3c8 <strcmp@plt+0x3ac40>
  43e33b:	mov    rax,QWORD PTR [r14+0x28]
  43e33f:	mov    r12,QWORD PTR [rax]
  43e342:	test   r12,r12
  43e345:	je     43e3c8 <strcmp@plt+0x3ac40>
  43e34b:	xor    r15d,r15d
  43e34e:	xchg   ax,ax
  43e350:	cmp    QWORD PTR [r12+0x8],0x0
  43e356:	je     43e376 <strcmp@plt+0x3abee>
  43e358:	mov    rdi,QWORD PTR [r12+0x28]
  43e35d:	test   rdi,rdi
  43e360:	je     43e376 <strcmp@plt+0x3abee>
  43e362:	mov    rbx,QWORD PTR [r13+0x0]
  43e366:	call   431ad0 <strcmp@plt+0x2e348>
  43e36b:	mov    rdi,rbx
  43e36e:	mov    rsi,rax
  43e371:	call   407940 <strcmp@plt+0x41b8>
  43e376:	mov    rax,QWORD PTR [r12+0x10]
  43e37b:	mov    rcx,QWORD PTR [r12+0x18]
  43e380:	test   rax,rax
  43e383:	je     43e3a0 <strcmp@plt+0x3ac18>
  43e385:	test   rcx,rcx
  43e388:	je     43e3c0 <strcmp@plt+0x3ac38>
  43e38a:	mov    QWORD PTR [rsp+r15*8+0x460],rcx
  43e392:	add    r15,0x1
  43e396:	jmp    43e3c0 <strcmp@plt+0x3ac38>
  43e398:	nop    DWORD PTR [rax+rax*1+0x0]
  43e3a0:	test   rcx,rcx
  43e3a3:	je     43e3aa <strcmp@plt+0x3ac22>
  43e3a5:	mov    rax,rcx
  43e3a8:	jmp    43e3c0 <strcmp@plt+0x3ac38>
  43e3aa:	test   r15,r15
  43e3ad:	je     43e3c8 <strcmp@plt+0x3ac40>
  43e3af:	mov    rax,QWORD PTR [rsp+r15*8+0x458]
  43e3b7:	add    r15,0xffffffffffffffff
  43e3bb:	nop    DWORD PTR [rax+rax*1+0x0]
  43e3c0:	mov    r12,rax
  43e3c3:	test   rax,rax
  43e3c6:	jne    43e350 <strcmp@plt+0x3abc8>
  43e3c8:	mov    rax,QWORD PTR [r14+0x10]
  43e3cc:	mov    rcx,QWORD PTR [r14+0x18]
  43e3d0:	test   rax,rax
  43e3d3:	je     43e3f0 <strcmp@plt+0x3ac68>
  43e3d5:	test   rcx,rcx
  43e3d8:	je     43e410 <strcmp@plt+0x3ac88>
  43e3da:	mov    QWORD PTR [rsp+rbp*8+0x50],rcx
  43e3df:	add    rbp,0x1
  43e3e3:	jmp    43e410 <strcmp@plt+0x3ac88>
  43e3e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e3ef:	nop
  43e3f0:	test   rcx,rcx
  43e3f3:	je     43e3fa <strcmp@plt+0x3ac72>
  43e3f5:	mov    rax,rcx
  43e3f8:	jmp    43e410 <strcmp@plt+0x3ac88>
  43e3fa:	test   rbp,rbp
  43e3fd:	je     43e41c <strcmp@plt+0x3ac94>
  43e3ff:	mov    rax,QWORD PTR [rsp+rbp*8+0x48]
  43e404:	add    rbp,0xffffffffffffffff
  43e408:	nop    DWORD PTR [rax+rax*1+0x0]
  43e410:	mov    r14,rax
  43e413:	test   rax,rax
  43e416:	jne    43e330 <strcmp@plt+0x3aba8>
  43e41c:	mov    rax,QWORD PTR [rsp+0x40]
  43e421:	mov    rax,QWORD PTR [rax+0x8]
  43e425:	cmp    rax,QWORD PTR [rsp+0x38]
  43e42a:	jne    43e310 <strcmp@plt+0x3ab88>
  43e430:	mov    rdi,QWORD PTR [rsp+0x38]
  43e435:	call   42c250 <strcmp@plt+0x28ac8>
  43e43a:	mov    rbx,QWORD PTR [rsp+0x10]
  43e43f:	mov    rdi,QWORD PTR [rbx]
  43e442:	call   407d60 <strcmp@plt+0x45d8>
  43e447:	xor    eax,eax
  43e449:	call   407d20 <strcmp@plt+0x4598>
  43e44e:	mov    QWORD PTR [rbx],rax
  43e451:	mov    rax,QWORD PTR [rsp+0x30]
  43e456:	mov    rbx,QWORD PTR [rax+0x8]
  43e45a:	cmp    rbx,rax
  43e45d:	lea    r14,[rip+0x2694c]        # 464db0 <strcmp@plt+0x61628>
  43e464:	je     43e4f8 <strcmp@plt+0x3ad70>
  43e46a:	lea    r15,[rip+0x11430]        # 44f8a1 <strcmp@plt+0x4c119>
  43e471:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e47b:	nop    DWORD PTR [rax+rax*1+0x0]
  43e480:	mov    rbp,QWORD PTR [rbx+0x10]
  43e484:	mov    rdi,rbp
  43e487:	mov    rsi,QWORD PTR [rsp+0x18]
  43e48c:	call   406a40 <strcmp@plt+0x32b8>
  43e491:	mov    ecx,DWORD PTR [r14]
  43e494:	cmp    eax,0x1
  43e497:	jne    43e5f1 <strcmp@plt+0x3ae69>
  43e49d:	test   ecx,ecx
  43e49f:	jle    43e4c6 <strcmp@plt+0x3ad3e>
  43e4a1:	mov    rdi,rbp
  43e4a4:	call   431b40 <strcmp@plt+0x2e3b8>
  43e4a9:	mov    rdi,rax
  43e4ac:	call   423130 <strcmp@plt+0x1f9a8>
  43e4b1:	mov    rcx,rax
  43e4b4:	mov    edi,0x5
  43e4b9:	xor    eax,eax
  43e4bb:	mov    rsi,r15
  43e4be:	mov    rdx,rcx
  43e4c1:	call   42e800 <strcmp@plt+0x2b078>
  43e4c6:	mov    r14,QWORD PTR [r13+0x0]
  43e4ca:	mov    rdi,rbp
  43e4cd:	call   431ad0 <strcmp@plt+0x2e348>
  43e4d2:	mov    rdi,r14
  43e4d5:	mov    rsi,rax
  43e4d8:	call   4078f0 <strcmp@plt+0x4168>
  43e4dd:	cmp    eax,0x1
  43e4e0:	jne    43e5fb <strcmp@plt+0x3ae73>
  43e4e6:	mov    rbx,QWORD PTR [rbx+0x8]
  43e4ea:	cmp    rbx,QWORD PTR [rsp+0x30]
  43e4ef:	lea    r14,[rip+0x268ba]        # 464db0 <strcmp@plt+0x61628>
  43e4f6:	jne    43e480 <strcmp@plt+0x3acf8>
  43e4f8:	mov    rax,QWORD PTR [r13+0x0]
  43e4fc:	mov    rdi,QWORD PTR [rax+0x10]
  43e500:	call   4075a0 <strcmp@plt+0x3e18>
  43e505:	cmp    DWORD PTR [r14],0x0
  43e509:	jle    43e53e <strcmp@plt+0x3adb6>
  43e50b:	lea    rsi,[rip+0x113f2]        # 44f904 <strcmp@plt+0x4c17c>
  43e512:	mov    edi,0x5
  43e517:	xor    eax,eax
  43e519:	call   42e800 <strcmp@plt+0x2b078>
  43e51e:	cmp    DWORD PTR [r14],0x2
  43e522:	jl     43e53e <strcmp@plt+0x3adb6>
  43e524:	lea    rsi,[rip+0x113fe]        # 44f929 <strcmp@plt+0x4c1a1>
  43e52b:	lea    rdx,[rip+0x1141a]        # 44f94c <strcmp@plt+0x4c1c4>
  43e532:	mov    edi,0x6
  43e537:	xor    eax,eax
  43e539:	call   42e800 <strcmp@plt+0x2b078>
  43e53e:	mov    rbp,QWORD PTR [rsp+0x18]
  43e543:	mov    rdi,QWORD PTR [rbp+0x70]
  43e547:	mov    esi,0x5
  43e54c:	call   408500 <strcmp@plt+0x4d78>
  43e551:	mov    rdi,rbp
  43e554:	call   40efa0 <strcmp@plt+0xb818>
  43e559:	mov    r12,QWORD PTR [rsp]
  43e55d:	mov    rbx,QWORD PTR [r12+0x8]
  43e562:	cmp    rbx,r12
  43e565:	mov    r14,QWORD PTR [rsp+0x8]
  43e56a:	mov    r15,QWORD PTR [rsp+0x48]
  43e56f:	je     43e595 <strcmp@plt+0x3ae0d>
  43e571:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e57b:	nop    DWORD PTR [rax+rax*1+0x0]
  43e580:	mov    rsi,QWORD PTR [rbx+0x10]
  43e584:	mov    rdi,rbp
  43e587:	call   40f5d0 <strcmp@plt+0xbe48>
  43e58c:	mov    rbx,QWORD PTR [rbx+0x8]
  43e590:	cmp    rbx,r12
  43e593:	jne    43e580 <strcmp@plt+0x3adf8>
  43e595:	movzx  esi,BYTE PTR [r15]
  43e599:	movzx  edx,BYTE PTR [r15+0x1]
  43e59e:	movzx  ecx,BYTE PTR [r15+0x2]
  43e5a3:	lea    rdi,[rsp+0x50]
  43e5a8:	xor    r8d,r8d
  43e5ab:	call   43b9e0 <strcmp@plt+0x38258>
  43e5b0:	mov    rsi,QWORD PTR [rsp+0x50]
  43e5b5:	xor    ecx,ecx
  43e5b7:	mov    rdi,r14
  43e5ba:	mov    edx,eax
  43e5bc:	call   43bb20 <strcmp@plt+0x38398>
  43e5c1:	mov    rdi,QWORD PTR [rsp+0x28]
  43e5c6:	call   42c250 <strcmp@plt+0x28ac8>
  43e5cb:	mov    rdi,r12
  43e5ce:	call   42c250 <strcmp@plt+0x28ac8>
  43e5d3:	mov    rdi,QWORD PTR [rsp+0x30]
  43e5d8:	call   42c250 <strcmp@plt+0x28ac8>
  43e5dd:	mov    rdi,QWORD PTR [rsp+0x20]
  43e5e2:	call   436870 <strcmp@plt+0x330e8>
  43e5e7:	mov    ebx,0x1
  43e5ec:	jmp    43e6cd <strcmp@plt+0x3af45>
  43e5f1:	cmp    ecx,0x2
  43e5f4:	jge    43e61f <strcmp@plt+0x3ae97>
  43e5f6:	xor    r15d,r15d
  43e5f9:	jmp    43e64b <strcmp@plt+0x3aec3>
  43e5fb:	mov    rdi,rbp
  43e5fe:	call   431b40 <strcmp@plt+0x2e3b8>
  43e603:	mov    rdi,rax
  43e606:	call   423130 <strcmp@plt+0x1f9a8>
  43e60b:	mov    rcx,rax
  43e60e:	lea    rsi,[rip+0x112bb]        # 44f8d0 <strcmp@plt+0x4c148>
  43e615:	xor    r15d,r15d
  43e618:	mov    edi,0x2
  43e61d:	jmp    43e641 <strcmp@plt+0x3aeb9>
  43e61f:	mov    rdi,rbp
  43e622:	call   431b40 <strcmp@plt+0x2e3b8>
  43e627:	mov    rdi,rax
  43e62a:	call   423130 <strcmp@plt+0x1f9a8>
  43e62f:	mov    rcx,rax
  43e632:	lea    rsi,[rip+0x11235]        # 44f86e <strcmp@plt+0x4c0e6>
  43e639:	xor    r15d,r15d
  43e63c:	mov    edi,0x6
  43e641:	xor    eax,eax
  43e643:	mov    rdx,rcx
  43e646:	call   42e800 <strcmp@plt+0x2b078>
  43e64b:	mov    rbp,QWORD PTR [rsp+0x8]
  43e650:	mov    rbx,QWORD PTR [rsp]
  43e654:	mov    rdi,QWORD PTR [rsp+0x28]
  43e659:	call   42c250 <strcmp@plt+0x28ac8>
  43e65e:	mov    rdi,rbx
  43e661:	call   42c250 <strcmp@plt+0x28ac8>
  43e666:	mov    rdi,QWORD PTR [rsp+0x30]
  43e66b:	call   42c250 <strcmp@plt+0x28ac8>
  43e670:	mov    rdi,QWORD PTR [rsp+0x20]
  43e675:	call   436870 <strcmp@plt+0x330e8>
  43e67a:	test   r15,r15
  43e67d:	je     43e687 <strcmp@plt+0x3aeff>
  43e67f:	mov    rdi,r15
  43e682:	call   403710 <xmlFreeDoc@plt>
  43e687:	mov    rax,QWORD PTR [rsp+0x48]
  43e68c:	movzx  esi,BYTE PTR [rax]
  43e68f:	movzx  edx,BYTE PTR [rax+0x1]
  43e693:	movzx  ecx,BYTE PTR [rax+0x2]
  43e697:	lea    rdi,[rsp+0x50]
  43e69c:	mov    r8d,0x1
  43e6a2:	call   43b9e0 <strcmp@plt+0x38258>
  43e6a7:	mov    rsi,QWORD PTR [rsp+0x50]
  43e6ac:	xor    ebx,ebx
  43e6ae:	xor    ecx,ecx
  43e6b0:	mov    rdi,rbp
  43e6b3:	mov    edx,eax
  43e6b5:	call   43bb20 <strcmp@plt+0x38398>
  43e6ba:	lea    rsi,[rip+0x1129e]        # 44f95f <strcmp@plt+0x4c1d7>
  43e6c1:	mov    edi,0x3
  43e6c6:	xor    eax,eax
  43e6c8:	call   42e800 <strcmp@plt+0x2b078>
  43e6cd:	mov    eax,ebx
  43e6cf:	add    rsp,0x868
  43e6d6:	pop    rbx
  43e6d7:	pop    r12
  43e6d9:	pop    r13
  43e6db:	pop    r14
  43e6dd:	pop    r15
  43e6df:	pop    rbp
  43e6e0:	ret    
  43e6e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e6eb:	nop    DWORD PTR [rax+rax*1+0x0]
  43e6f0:	push   rbp
  43e6f1:	push   r15
  43e6f3:	push   r14
  43e6f5:	push   r13
  43e6f7:	push   r12
  43e6f9:	push   rbx
  43e6fa:	sub    rsp,0x848
  43e701:	mov    QWORD PTR [rsp+0x18],rsi
  43e706:	mov    QWORD PTR [rsp+0x20],rdi
  43e70b:	lea    rax,[rip+0x2669e]        # 464db0 <strcmp@plt+0x61628>
  43e712:	cmp    DWORD PTR [rax],0x2
  43e715:	jl     43e72a <strcmp@plt+0x3afa2>
  43e717:	lea    rsi,[rip+0x1127b]        # 44f999 <strcmp@plt+0x4c211>
  43e71e:	mov    edi,0x6
  43e723:	xor    eax,eax
  43e725:	call   42e800 <strcmp@plt+0x2b078>
  43e72a:	lea    rbp,[rip+0x31e67]        # 470598 <strcmp@plt+0x6ce10>
  43e731:	mov    rdi,QWORD PTR [rbp+0x0]
  43e735:	call   40e9a0 <strcmp@plt+0xb218>
  43e73a:	mov    r12,rax
  43e73d:	call   42bbd0 <strcmp@plt+0x28448>
  43e742:	mov    rbx,rax
  43e745:	mov    rax,QWORD PTR [r12+0x70]
  43e74a:	mov    rax,QWORD PTR [rax]
  43e74d:	mov    rdi,QWORD PTR [rax]
  43e750:	mov    rsi,rbx
  43e753:	call   42bcf0 <strcmp@plt+0x28568>
  43e758:	mov    rax,QWORD PTR [r12+0x70]
  43e75d:	mov    rax,QWORD PTR [rax]
  43e760:	mov    rdi,QWORD PTR [rax+0x8]
  43e764:	mov    QWORD PTR [rsp+0x8],rbx
  43e769:	mov    rsi,rbx
  43e76c:	call   42bcf0 <strcmp@plt+0x28568>
  43e771:	mov    rax,QWORD PTR [r12+0x70]
  43e776:	mov    rcx,QWORD PTR [rax]
  43e779:	mov    rdx,QWORD PTR [rcx+0x10]
  43e77d:	mov    rdx,QWORD PTR [rdx]
  43e780:	cmp    DWORD PTR [rdx],0x0
  43e783:	je     43e7d8 <strcmp@plt+0x3b050>
  43e785:	xor    r15d,r15d
  43e788:	mov    r14d,0x3
  43e78e:	xor    ebx,ebx
  43e790:	mov    rcx,QWORD PTR [rdx+0x10]
  43e794:	mov    esi,ebx
  43e796:	shr    esi,0x4
  43e799:	mov    edi,r15d
  43e79c:	and    dil,0x1e
  43e7a0:	shlx   edi,r14d,edi
  43e7a5:	test   DWORD PTR [rcx+rsi*4],edi
  43e7a8:	jne    43e7c3 <strcmp@plt+0x3b03b>
  43e7aa:	mov    rax,QWORD PTR [rdx+0x20]
  43e7ae:	mov    ecx,ebx
  43e7b0:	mov    rdi,QWORD PTR [rax+rcx*8]
  43e7b4:	mov    rsi,QWORD PTR [rsp+0x8]
  43e7b9:	call   42bcf0 <strcmp@plt+0x28568>
  43e7be:	mov    rax,QWORD PTR [r12+0x70]
  43e7c3:	add    ebx,0x1
  43e7c6:	mov    rcx,QWORD PTR [rax]
  43e7c9:	mov    rdx,QWORD PTR [rcx+0x10]
  43e7cd:	mov    rdx,QWORD PTR [rdx]
  43e7d0:	add    r15d,0x2
  43e7d4:	cmp    ebx,DWORD PTR [rdx]
  43e7d6:	jne    43e790 <strcmp@plt+0x3b008>
  43e7d8:	mov    rdx,QWORD PTR [rcx+0x18]
  43e7dc:	mov    rdx,QWORD PTR [rdx]
  43e7df:	cmp    DWORD PTR [rdx],0x0
  43e7e2:	je     43e838 <strcmp@plt+0x3b0b0>
  43e7e4:	xor    r15d,r15d
  43e7e7:	mov    r14d,0x3
  43e7ed:	xor    ebx,ebx
  43e7ef:	nop
  43e7f0:	mov    rcx,QWORD PTR [rdx+0x10]
  43e7f4:	mov    esi,ebx
  43e7f6:	shr    esi,0x4
  43e7f9:	mov    edi,r15d
  43e7fc:	and    dil,0x1e
  43e800:	shlx   edi,r14d,edi
  43e805:	test   DWORD PTR [rcx+rsi*4],edi
  43e808:	jne    43e823 <strcmp@plt+0x3b09b>
  43e80a:	mov    rax,QWORD PTR [rdx+0x20]
  43e80e:	mov    ecx,ebx
  43e810:	mov    rdi,QWORD PTR [rax+rcx*8]
  43e814:	mov    rsi,QWORD PTR [rsp+0x8]
  43e819:	call   42bcf0 <strcmp@plt+0x28568>
  43e81e:	mov    rax,QWORD PTR [r12+0x70]
  43e823:	add    ebx,0x1
  43e826:	mov    rcx,QWORD PTR [rax]
  43e829:	mov    rdx,QWORD PTR [rcx+0x18]
  43e82d:	mov    rdx,QWORD PTR [rdx]
  43e830:	add    r15d,0x2
  43e834:	cmp    ebx,DWORD PTR [rdx]
  43e836:	jne    43e7f0 <strcmp@plt+0x3b068>
  43e838:	mov    rdi,QWORD PTR [rcx+0x20]
  43e83c:	mov    rbx,QWORD PTR [rsp+0x8]
  43e841:	mov    rsi,rbx
  43e844:	call   42bcf0 <strcmp@plt+0x28568>
  43e849:	mov    QWORD PTR [rsp+0x10],r12
  43e84e:	mov    rax,QWORD PTR [r12+0x70]
  43e853:	mov    rax,QWORD PTR [rax]
  43e856:	mov    rdi,QWORD PTR [rax+0x20]
  43e85a:	mov    rsi,rbx
  43e85d:	call   42bcf0 <strcmp@plt+0x28568>
  43e862:	mov    rax,QWORD PTR [rbx+0x8]
  43e866:	cmp    rax,rbx
  43e869:	je     43e990 <strcmp@plt+0x3b208>
  43e86f:	nop
  43e870:	mov    QWORD PTR [rsp+0x28],rax
  43e875:	mov    rax,QWORD PTR [rax+0x10]
  43e879:	mov    r12,QWORD PTR [rax]
  43e87c:	test   r12,r12
  43e87f:	je     43e97c <strcmp@plt+0x3b1f4>
  43e885:	xor    r15d,r15d
  43e888:	nop    DWORD PTR [rax+rax*1+0x0]
  43e890:	cmp    QWORD PTR [r12+0x8],0x0
  43e896:	je     43e928 <strcmp@plt+0x3b1a0>
  43e89c:	mov    rax,QWORD PTR [r12+0x28]
  43e8a1:	mov    r14,QWORD PTR [rax]
  43e8a4:	test   r14,r14
  43e8a7:	je     43e928 <strcmp@plt+0x3b1a0>
  43e8ad:	xor    r13d,r13d
  43e8b0:	cmp    QWORD PTR [r14+0x8],0x0
  43e8b5:	je     43e8d4 <strcmp@plt+0x3b14c>
  43e8b7:	mov    rdi,QWORD PTR [r14+0x28]
  43e8bb:	test   rdi,rdi
  43e8be:	je     43e8d4 <strcmp@plt+0x3b14c>
  43e8c0:	mov    rbx,QWORD PTR [rbp+0x0]
  43e8c4:	call   431ad0 <strcmp@plt+0x2e348>
  43e8c9:	mov    rdi,rbx
  43e8cc:	mov    rsi,rax
  43e8cf:	call   407940 <strcmp@plt+0x41b8>
  43e8d4:	mov    rax,QWORD PTR [r14+0x10]
  43e8d8:	mov    rcx,QWORD PTR [r14+0x18]
  43e8dc:	test   rax,rax
  43e8df:	je     43e900 <strcmp@plt+0x3b178>
  43e8e1:	test   rcx,rcx
  43e8e4:	je     43e920 <strcmp@plt+0x3b198>
  43e8e6:	mov    QWORD PTR [rsp+r13*8+0x440],rcx
  43e8ee:	add    r13,0x1
  43e8f2:	jmp    43e920 <strcmp@plt+0x3b198>
  43e8f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e8fe:	xchg   ax,ax
  43e900:	test   rcx,rcx
  43e903:	je     43e90a <strcmp@plt+0x3b182>
  43e905:	mov    rax,rcx
  43e908:	jmp    43e920 <strcmp@plt+0x3b198>
  43e90a:	test   r13,r13
  43e90d:	je     43e928 <strcmp@plt+0x3b1a0>
  43e90f:	mov    rax,QWORD PTR [rsp+r13*8+0x438]
  43e917:	add    r13,0xffffffffffffffff
  43e91b:	nop    DWORD PTR [rax+rax*1+0x0]
  43e920:	mov    r14,rax
  43e923:	test   rax,rax
  43e926:	jne    43e8b0 <strcmp@plt+0x3b128>
  43e928:	mov    rax,QWORD PTR [r12+0x10]
  43e92d:	mov    rcx,QWORD PTR [r12+0x18]
  43e932:	test   rax,rax
  43e935:	je     43e950 <strcmp@plt+0x3b1c8>
  43e937:	test   rcx,rcx
  43e93a:	je     43e970 <strcmp@plt+0x3b1e8>
  43e93c:	mov    QWORD PTR [rsp+r15*8+0x30],rcx
  43e941:	add    r15,0x1
  43e945:	jmp    43e970 <strcmp@plt+0x3b1e8>
  43e947:	nop    WORD PTR [rax+rax*1+0x0]
  43e950:	test   rcx,rcx
  43e953:	je     43e95a <strcmp@plt+0x3b1d2>
  43e955:	mov    rax,rcx
  43e958:	jmp    43e970 <strcmp@plt+0x3b1e8>
  43e95a:	test   r15,r15
  43e95d:	je     43e97c <strcmp@plt+0x3b1f4>
  43e95f:	mov    rax,QWORD PTR [rsp+r15*8+0x28]
  43e964:	add    r15,0xffffffffffffffff
  43e968:	nop    DWORD PTR [rax+rax*1+0x0]
  43e970:	mov    r12,rax
  43e973:	test   rax,rax
  43e976:	jne    43e890 <strcmp@plt+0x3b108>
  43e97c:	mov    rax,QWORD PTR [rsp+0x28]
  43e981:	mov    rax,QWORD PTR [rax+0x8]
  43e985:	cmp    rax,QWORD PTR [rsp+0x8]
  43e98a:	jne    43e870 <strcmp@plt+0x3b0e8>
  43e990:	mov    rdi,QWORD PTR [rsp+0x8]
  43e995:	call   42c250 <strcmp@plt+0x28ac8>
  43e99a:	mov    rbx,QWORD PTR [rsp+0x10]
  43e99f:	mov    rdi,QWORD PTR [rbx+0x70]
  43e9a3:	call   407d60 <strcmp@plt+0x45d8>
  43e9a8:	xor    eax,eax
  43e9aa:	call   407d20 <strcmp@plt+0x4598>
  43e9af:	mov    QWORD PTR [rbx+0x70],rax
  43e9b3:	mov    rax,QWORD PTR [rsp+0x18]
  43e9b8:	movzx  esi,BYTE PTR [rax]
  43e9bb:	movzx  edx,BYTE PTR [rax+0x1]
  43e9bf:	movzx  ecx,BYTE PTR [rax+0x2]
  43e9c3:	lea    rdi,[rsp+0x30]
  43e9c8:	xor    r8d,r8d
  43e9cb:	call   43b9e0 <strcmp@plt+0x38258>
  43e9d0:	mov    rsi,QWORD PTR [rsp+0x30]
  43e9d5:	xor    ecx,ecx
  43e9d7:	mov    rdi,QWORD PTR [rsp+0x20]
  43e9dc:	mov    edx,eax
  43e9de:	call   43bb20 <strcmp@plt+0x38398>
  43e9e3:	lea    rax,[rip+0x263c6]        # 464db0 <strcmp@plt+0x61628>
  43e9ea:	cmp    DWORD PTR [rax],0x0
  43e9ed:	jle    43ea02 <strcmp@plt+0x3b27a>
  43e9ef:	lea    rsi,[rip+0x10fd1]        # 44f9c7 <strcmp@plt+0x4c23f>
  43e9f6:	mov    edi,0x5
  43e9fb:	xor    eax,eax
  43e9fd:	call   42e800 <strcmp@plt+0x2b078>
  43ea02:	mov    eax,0x1
  43ea07:	add    rsp,0x848
  43ea0e:	pop    rbx
  43ea0f:	pop    r12
  43ea11:	pop    r13
  43ea13:	pop    r14
  43ea15:	pop    r15
  43ea17:	pop    rbp
  43ea18:	ret    
  43ea19:	nop    DWORD PTR [rax+0x0]
  43ea20:	push   rbp
  43ea21:	push   r15
  43ea23:	push   r14
  43ea25:	push   r13
  43ea27:	push   r12
  43ea29:	push   rbx
  43ea2a:	sub    rsp,0x28
  43ea2e:	mov    rbp,rdx
  43ea31:	mov    rbx,rsi
  43ea34:	mov    QWORD PTR [rsp+0x8],rdi
  43ea39:	lea    rax,[rip+0x26370]        # 464db0 <strcmp@plt+0x61628>
  43ea40:	cmp    DWORD PTR [rax],0x0
  43ea43:	jle    43ea58 <strcmp@plt+0x3b2d0>
  43ea45:	lea    rsi,[rip+0x10fa3]        # 44f9ef <strcmp@plt+0x4c267>
  43ea4c:	mov    edi,0x5
  43ea51:	xor    eax,eax
  43ea53:	call   42e800 <strcmp@plt+0x2b078>
  43ea58:	lea    rax,[rip+0x31b39]        # 470598 <strcmp@plt+0x6ce10>
  43ea5f:	mov    rdi,QWORD PTR [rax]
  43ea62:	call   40e9a0 <strcmp@plt+0xb218>
  43ea67:	mov    r12,rax
  43ea6a:	mov    rdi,QWORD PTR [rip+0x25537]        # 463fa8 <strcmp@plt+0x60820>
  43ea71:	call   42bc00 <strcmp@plt+0x28478>
  43ea76:	mov    r13,rax
  43ea79:	mov    QWORD PTR [rsp],rbx
  43ea7d:	mov    esi,DWORD PTR [rbx+0x4]
  43ea80:	lea    rcx,[rip+0x109ad]        # 44f434 <strcmp@plt+0x4bcac>
  43ea87:	xor    ebx,ebx
  43ea89:	xor    edx,edx
  43ea8b:	mov    r8d,0x2160
  43ea91:	mov    rdi,rbp
  43ea94:	call   403030 <xmlReadMemory@plt>
  43ea99:	mov    r15,rax
  43ea9c:	mov    rdi,rax
  43ea9f:	call   4035f0 <xmlDocGetRootElement@plt>
  43eaa4:	mov    r14,rax
  43eaa7:	lea    rdi,[rip+0x10f6a]        # 44fa18 <strcmp@plt+0x4c290>
  43eaae:	call   4035b0 <xmlCharStrdup@plt>
  43eab3:	mov    rbp,rax
  43eab6:	mov    rdi,r14
  43eab9:	call   403310 <xmlFirstElementChild@plt>
  43eabe:	test   rax,rax
  43eac1:	je     43eaf2 <strcmp@plt+0x3b36a>
  43eac3:	mov    rbx,rax
  43eac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ead0:	mov    rdi,QWORD PTR [rbx+0x10]
  43ead4:	mov    rsi,rbp
  43ead7:	call   403770 <xmlStrEqual@plt>
  43eadc:	test   eax,eax
  43eade:	jne    43eaf2 <strcmp@plt+0x3b36a>
  43eae0:	mov    rdi,rbx
  43eae3:	call   403210 <xmlNextElementSibling@plt>
  43eae8:	mov    rbx,rax
  43eaeb:	test   rax,rax
  43eaee:	jne    43ead0 <strcmp@plt+0x3b348>
  43eaf0:	xor    ebx,ebx
  43eaf2:	mov    rdi,rbp
  43eaf5:	call   403780 <free@plt>
  43eafa:	lea    rdi,[rip+0x10f22]        # 44fa23 <strcmp@plt+0x4c29b>
  43eb01:	call   4035b0 <xmlCharStrdup@plt>
  43eb06:	mov    r14,rax
  43eb09:	mov    rdi,rbx
  43eb0c:	call   403310 <xmlFirstElementChild@plt>
  43eb11:	test   rax,rax
  43eb14:	je     43eb40 <strcmp@plt+0x3b3b8>
  43eb16:	mov    rbp,rax
  43eb19:	nop    DWORD PTR [rax+0x0]
  43eb20:	mov    rdi,QWORD PTR [rbp+0x10]
  43eb24:	mov    rsi,r14
  43eb27:	call   403770 <xmlStrEqual@plt>
  43eb2c:	test   eax,eax
  43eb2e:	jne    43eb4d <strcmp@plt+0x3b3c5>
  43eb30:	mov    rdi,rbp
  43eb33:	call   403210 <xmlNextElementSibling@plt>
  43eb38:	mov    rbp,rax
  43eb3b:	test   rax,rax
  43eb3e:	jne    43eb20 <strcmp@plt+0x3b398>
  43eb40:	mov    rdi,r14
  43eb43:	call   403780 <free@plt>
  43eb48:	jmp    43ecb5 <strcmp@plt+0x3b52d>
  43eb4d:	mov    rdi,r14
  43eb50:	call   403780 <free@plt>
  43eb55:	lea    rdi,[rip+0x10ed1]        # 44fa2d <strcmp@plt+0x4c2a5>
  43eb5c:	call   4035b0 <xmlCharStrdup@plt>
  43eb61:	mov    rbx,rax
  43eb64:	mov    rdi,rbp
  43eb67:	call   403310 <xmlFirstElementChild@plt>
  43eb6c:	test   rax,rax
  43eb6f:	je     43eba0 <strcmp@plt+0x3b418>
  43eb71:	mov    r14,rax
  43eb74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43eb7e:	xchg   ax,ax
  43eb80:	mov    rdi,QWORD PTR [r14+0x10]
  43eb84:	mov    rsi,rbx
  43eb87:	call   403770 <xmlStrEqual@plt>
  43eb8c:	test   eax,eax
  43eb8e:	jne    43ebad <strcmp@plt+0x3b425>
  43eb90:	mov    rdi,r14
  43eb93:	call   403210 <xmlNextElementSibling@plt>
  43eb98:	mov    r14,rax
  43eb9b:	test   rax,rax
  43eb9e:	jne    43eb80 <strcmp@plt+0x3b3f8>
  43eba0:	mov    rdi,rbx
  43eba3:	call   403780 <free@plt>
  43eba8:	jmp    43ec80 <strcmp@plt+0x3b4f8>
  43ebad:	mov    QWORD PTR [rsp+0x18],r15
  43ebb2:	mov    rdi,rbx
  43ebb5:	call   403780 <free@plt>
  43ebba:	jmp    43ec04 <strcmp@plt+0x3b47c>
  43ebbc:	nop    DWORD PTR [rax+0x0]
  43ebc0:	mov    rdi,rbx
  43ebc3:	mov    rsi,r13
  43ebc6:	call   42be30 <strcmp@plt+0x286a8>
  43ebcb:	mov    rdi,r15
  43ebce:	call   422fa0 <strcmp@plt+0x1f818>
  43ebd3:	mov    rbx,QWORD PTR [r14+0x10]
  43ebd7:	mov    r15,QWORD PTR [rsp+0x18]
  43ebdc:	nop    DWORD PTR [rax+0x0]
  43ebe0:	mov    rdi,r14
  43ebe3:	call   403210 <xmlNextElementSibling@plt>
  43ebe8:	test   rax,rax
  43ebeb:	je     43ec80 <strcmp@plt+0x3b4f8>
  43ebf1:	mov    r14,rax
  43ebf4:	mov    rdi,QWORD PTR [rax+0x10]
  43ebf8:	mov    rsi,rbx
  43ebfb:	call   403788 <strcmp@plt>
  43ec00:	test   eax,eax
  43ec02:	jne    43ebe0 <strcmp@plt+0x3b458>
  43ec04:	mov    rdi,r14
  43ec07:	call   403430 <xmlNodeGetContent@plt>
  43ec0c:	mov    rbx,rax
  43ec0f:	xor    eax,eax
  43ec11:	call   422f90 <strcmp@plt+0x1f808>
  43ec16:	mov    r15,rax
  43ec19:	mov    rdi,rbx
  43ec1c:	mov    rsi,rax
  43ec1f:	call   423c40 <strcmp@plt+0x204b8>
  43ec24:	cmp    eax,0x1
  43ec27:	jne    43ee1f <strcmp@plt+0x3b697>
  43ec2d:	mov    QWORD PTR [rsp+0x20],rbx
  43ec32:	lea    rax,[rip+0x318c7]        # 470500 <strcmp@plt+0x6cd78>
  43ec39:	mov    ebx,DWORD PTR [rax]
  43ec3b:	test   ebx,ebx
  43ec3d:	je     43ec52 <strcmp@plt+0x3b4ca>
  43ec3f:	mov    rdi,r15
  43ec42:	call   423200 <strcmp@plt+0x1fa78>
  43ec47:	movzx  eax,ax
  43ec4a:	cmp    ebx,eax
  43ec4c:	jne    43ee5c <strcmp@plt+0x3b6d4>
  43ec52:	mov    rbx,QWORD PTR [rsp+0x20]
  43ec57:	mov    rdi,rbx
  43ec5a:	mov    rsi,r13
  43ec5d:	mov    rdx,QWORD PTR [rip+0x2535c]        # 463fc0 <strcmp@plt+0x60838>
  43ec64:	call   42bee0 <strcmp@plt+0x28758>
  43ec69:	test   al,al
  43ec6b:	je     43ebc0 <strcmp@plt+0x3b438>
  43ec71:	jmp    43ee4c <strcmp@plt+0x3b6c4>
  43ec76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ec80:	mov    rbx,QWORD PTR [rbp+0x10]
  43ec84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ec8e:	xchg   ax,ax
  43ec90:	mov    rdi,rbp
  43ec93:	call   403210 <xmlNextElementSibling@plt>
  43ec98:	test   rax,rax
  43ec9b:	je     43ecb5 <strcmp@plt+0x3b52d>
  43ec9d:	mov    rbp,rax
  43eca0:	mov    rdi,QWORD PTR [rax+0x10]
  43eca4:	mov    rsi,rbx
  43eca7:	call   403788 <strcmp@plt>
  43ecac:	test   eax,eax
  43ecae:	jne    43ec90 <strcmp@plt+0x3b508>
  43ecb0:	jmp    43eb55 <strcmp@plt+0x3b3cd>
  43ecb5:	mov    rdi,r15
  43ecb8:	call   403710 <xmlFreeDoc@plt>
  43ecbd:	mov    rdi,QWORD PTR [r12+0x30]
  43ecc2:	mov    esi,0x2
  43ecc7:	call   4088a0 <strcmp@plt+0x5118>
  43eccc:	mov    r14,rax
  43eccf:	mov    rdi,QWORD PTR [r12+0x30]
  43ecd4:	mov    esi,0xa
  43ecd9:	call   4088a0 <strcmp@plt+0x5118>
  43ecde:	mov    r15,rax
  43ece1:	mov    rax,QWORD PTR [r14+0x8]
  43ece5:	mov    rdi,QWORD PTR [rax+0x28]
  43ece9:	call   42c1e0 <strcmp@plt+0x28a58>
  43ecee:	mov    rax,QWORD PTR [r15+0x8]
  43ecf2:	mov    rdi,QWORD PTR [rax+0x28]
  43ecf6:	call   42c1e0 <strcmp@plt+0x28a58>
  43ecfb:	mov    rbx,QWORD PTR [r13+0x8]
  43ecff:	cmp    rbx,r13
  43ed02:	je     43ed47 <strcmp@plt+0x3b5bf>
  43ed04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ed0e:	xchg   ax,ax
  43ed10:	mov    rbp,QWORD PTR [rbx+0x10]
  43ed14:	mov    edx,0x1
  43ed19:	mov    ecx,0x64
  43ed1e:	mov    rdi,r14
  43ed21:	mov    rsi,rbp
  43ed24:	call   405370 <strcmp@plt+0x1be8>
  43ed29:	mov    edx,0x1
  43ed2e:	mov    ecx,0x64
  43ed33:	mov    rdi,r15
  43ed36:	mov    rsi,rbp
  43ed39:	call   405370 <strcmp@plt+0x1be8>
  43ed3e:	mov    rbx,QWORD PTR [rbx+0x8]
  43ed42:	cmp    rbx,r13
  43ed45:	jne    43ed10 <strcmp@plt+0x3b588>
  43ed47:	mov    rax,QWORD PTR [r12+0x38]
  43ed4c:	mov    rdi,QWORD PTR [r12+0x40]
  43ed51:	mov    rsi,r14
  43ed54:	call   QWORD PTR [rax+0x38]
  43ed57:	mov    rdi,r14
  43ed5a:	call   430ae0 <strcmp@plt+0x2d358>
  43ed5f:	xor    edx,edx
  43ed61:	mov    rdi,r12
  43ed64:	mov    rsi,rax
  43ed67:	call   407ac0 <strcmp@plt+0x4338>
  43ed6c:	mov    rax,QWORD PTR [r12+0x38]
  43ed71:	mov    rdi,QWORD PTR [r12+0x40]
  43ed76:	mov    rsi,r15
  43ed79:	call   QWORD PTR [rax+0x38]
  43ed7c:	mov    rdi,r15
  43ed7f:	call   430ae0 <strcmp@plt+0x2d358>
  43ed84:	xor    edx,edx
  43ed86:	mov    rdi,r12
  43ed89:	mov    rsi,rax
  43ed8c:	call   407ac0 <strcmp@plt+0x4338>
  43ed91:	lea    rbx,[rip+0x26018]        # 464db0 <strcmp@plt+0x61628>
  43ed98:	cmp    DWORD PTR [rbx],0x0
  43ed9b:	jle    43edc8 <strcmp@plt+0x3b640>
  43ed9d:	lea    rsi,[rip+0x10d95]        # 44fb39 <strcmp@plt+0x4c3b1>
  43eda4:	mov    edi,0x5
  43eda9:	xor    eax,eax
  43edab:	call   42e800 <strcmp@plt+0x2b078>
  43edb0:	cmp    DWORD PTR [rbx],0x0
  43edb3:	jle    43edc8 <strcmp@plt+0x3b640>
  43edb5:	lea    rsi,[rip+0x10dae]        # 44fb6a <strcmp@plt+0x4c3e2>
  43edbc:	mov    edi,0x5
  43edc1:	xor    eax,eax
  43edc3:	call   42e800 <strcmp@plt+0x2b078>
  43edc8:	mov    rdi,QWORD PTR [r14+0x8]
  43edcc:	call   429040 <strcmp@plt+0x258b8>
  43edd1:	mov    rdi,QWORD PTR [r15+0x8]
  43edd5:	call   429040 <strcmp@plt+0x258b8>
  43edda:	mov    rax,QWORD PTR [rsp]
  43edde:	movzx  esi,BYTE PTR [rax]
  43ede1:	movzx  edx,BYTE PTR [rax+0x1]
  43ede5:	movzx  ecx,BYTE PTR [rax+0x2]
  43ede9:	lea    rdi,[rsp+0x10]
  43edee:	xor    r8d,r8d
  43edf1:	call   43b9e0 <strcmp@plt+0x38258>
  43edf6:	mov    rsi,QWORD PTR [rsp+0x10]
  43edfb:	xor    ecx,ecx
  43edfd:	mov    rdi,QWORD PTR [rsp+0x8]
  43ee02:	mov    edx,eax
  43ee04:	call   43bb20 <strcmp@plt+0x38398>
  43ee09:	mov    ebx,0x1
  43ee0e:	mov    eax,ebx
  43ee10:	add    rsp,0x28
  43ee14:	pop    rbx
  43ee15:	pop    r12
  43ee17:	pop    r13
  43ee19:	pop    r14
  43ee1b:	pop    r15
  43ee1d:	pop    rbp
  43ee1e:	ret    
  43ee1f:	lea    rax,[rip+0x25f8a]        # 464db0 <strcmp@plt+0x61628>
  43ee26:	cmp    DWORD PTR [rax],0x0
  43ee29:	mov    r14,QWORD PTR [rsp+0x8]
  43ee2e:	mov    rbp,QWORD PTR [rsp]
  43ee32:	jle    43ee80 <strcmp@plt+0x3b6f8>
  43ee34:	lea    rsi,[rip+0x10c04]        # 44fa3f <strcmp@plt+0x4c2b7>
  43ee3b:	mov    edi,0x5
  43ee40:	xor    eax,eax
  43ee42:	mov    rdx,rbx
  43ee45:	call   42e800 <strcmp@plt+0x2b078>
  43ee4a:	jmp    43ee80 <strcmp@plt+0x3b6f8>
  43ee4c:	lea    rsi,[rip+0x10c94]        # 44fae7 <strcmp@plt+0x4c35f>
  43ee53:	mov    edi,0x3
  43ee58:	xor    eax,eax
  43ee5a:	jmp    43ee6f <strcmp@plt+0x3b6e7>
  43ee5c:	lea    rsi,[rip+0x10c19]        # 44fa7c <strcmp@plt+0x4c2f4>
  43ee63:	mov    edi,0x3
  43ee68:	xor    eax,eax
  43ee6a:	mov    rbx,QWORD PTR [rsp+0x20]
  43ee6f:	mov    rdx,rbx
  43ee72:	call   42e800 <strcmp@plt+0x2b078>
  43ee77:	mov    r14,QWORD PTR [rsp+0x8]
  43ee7c:	mov    rbp,QWORD PTR [rsp]
  43ee80:	mov    rdi,r15
  43ee83:	call   422fa0 <strcmp@plt+0x1f818>
  43ee88:	mov    rdi,rbx
  43ee8b:	call   403780 <free@plt>
  43ee90:	mov    rdi,QWORD PTR [rsp+0x18]
  43ee95:	call   403710 <xmlFreeDoc@plt>
  43ee9a:	lea    rsi,[rip+0x106f6]        # 44f597 <strcmp@plt+0x4be0f>
  43eea1:	xor    ebx,ebx
  43eea3:	mov    edi,0x2
  43eea8:	xor    eax,eax
  43eeaa:	call   42e800 <strcmp@plt+0x2b078>
  43eeaf:	mov    rdi,r13
  43eeb2:	call   42c250 <strcmp@plt+0x28ac8>
  43eeb7:	movzx  esi,BYTE PTR [rbp+0x0]
  43eebb:	movzx  edx,BYTE PTR [rbp+0x1]
  43eebf:	movzx  ecx,BYTE PTR [rbp+0x2]
  43eec3:	lea    rdi,[rsp+0x10]
  43eec8:	mov    r8d,0x1
  43eece:	call   43b9e0 <strcmp@plt+0x38258>
  43eed3:	mov    rsi,QWORD PTR [rsp+0x10]
  43eed8:	xor    ecx,ecx
  43eeda:	mov    rdi,r14
  43eedd:	mov    edx,eax
  43eedf:	call   43bb20 <strcmp@plt+0x38398>
  43eee4:	jmp    43ee0e <strcmp@plt+0x3b686>
  43eee9:	nop    DWORD PTR [rax+0x0]
  43eef0:	push   r15
  43eef2:	push   r14
  43eef4:	push   r12
  43eef6:	push   rbx
  43eef7:	push   rax
  43eef8:	mov    r15,rsi
  43eefb:	mov    r14,rdi
  43eefe:	lea    rax,[rip+0x25eab]        # 464db0 <strcmp@plt+0x61628>
  43ef05:	cmp    DWORD PTR [rax],0x2
  43ef08:	jl     43ef1d <strcmp@plt+0x3b795>
  43ef0a:	lea    rsi,[rip+0x10ca0]        # 44fbb1 <strcmp@plt+0x4c429>
  43ef11:	mov    edi,0x6
  43ef16:	xor    eax,eax
  43ef18:	call   42e800 <strcmp@plt+0x2b078>
  43ef1d:	lea    rax,[rip+0x31674]        # 470598 <strcmp@plt+0x6ce10>
  43ef24:	mov    rdi,QWORD PTR [rax]
  43ef27:	call   40e9a0 <strcmp@plt+0xb218>
  43ef2c:	mov    rbx,rax
  43ef2f:	mov    rdi,QWORD PTR [rax+0x30]
  43ef33:	mov    esi,0x2
  43ef38:	call   4088a0 <strcmp@plt+0x5118>
  43ef3d:	mov    r12,rax
  43ef40:	mov    rdi,QWORD PTR [rbx+0x30]
  43ef44:	mov    esi,0xa
  43ef49:	call   4088a0 <strcmp@plt+0x5118>
  43ef4e:	mov    rbx,rax
  43ef51:	mov    rax,QWORD PTR [r12+0x8]
  43ef56:	mov    rdi,QWORD PTR [rax+0x28]
  43ef5a:	call   42c1e0 <strcmp@plt+0x28a58>
  43ef5f:	mov    rax,QWORD PTR [rbx+0x8]
  43ef63:	mov    rdi,QWORD PTR [rax+0x28]
  43ef67:	call   42c1e0 <strcmp@plt+0x28a58>
  43ef6c:	movzx  esi,BYTE PTR [r15]
  43ef70:	movzx  edx,BYTE PTR [r15+0x1]
  43ef75:	movzx  ecx,BYTE PTR [r15+0x2]
  43ef7a:	mov    rdi,rsp
  43ef7d:	xor    r8d,r8d
  43ef80:	call   43b9e0 <strcmp@plt+0x38258>
  43ef85:	mov    rsi,QWORD PTR [rsp]
  43ef89:	xor    ecx,ecx
  43ef8b:	mov    rdi,r14
  43ef8e:	mov    edx,eax
  43ef90:	call   43bb20 <strcmp@plt+0x38398>
  43ef95:	mov    eax,0x1
  43ef9a:	add    rsp,0x8
  43ef9e:	pop    rbx
  43ef9f:	pop    r12
  43efa1:	pop    r14
  43efa3:	pop    r15
  43efa5:	ret    
  43efa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43efb0:	push   rbp
  43efb1:	push   r14
  43efb3:	push   rbx
  43efb4:	mov    al,BYTE PTR [rdi]
  43efb6:	mov    bl,BYTE PTR [rdi+0x1]
  43efb9:	mov    bpl,BYTE PTR [rdi+0x2]
  43efbd:	cmp    al,0x3
  43efbf:	je     43f03d <strcmp@plt+0x3b8b5>
  43efc1:	test   al,al
  43efc3:	jne    43f05e <strcmp@plt+0x3b8d6>
  43efc9:	lea    r14,[rip+0x315c8]        # 470598 <strcmp@plt+0x6ce10>
  43efd0:	mov    rdi,QWORD PTR [r14]
  43efd3:	call   4079d0 <strcmp@plt+0x4248>
  43efd8:	test   eax,eax
  43efda:	je     43efed <strcmp@plt+0x3b865>
  43efdc:	mov    rdi,QWORD PTR [r14]
  43efdf:	call   4079d0 <strcmp@plt+0x4248>
  43efe4:	cmp    eax,0x3
  43efe7:	jne    43f06e <strcmp@plt+0x3b8e6>
  43efed:	cmp    bl,0x4
  43eff0:	ja     43f13a <strcmp@plt+0x3b9b2>
  43eff6:	movzx  eax,bl
  43eff9:	lea    rcx,[rip+0xff40]        # 44ef40 <strcmp@plt+0x4b7b8>
  43f000:	movsxd rax,DWORD PTR [rcx+rax*4]
  43f004:	add    rax,rcx
  43f007:	jmp    rax
  43f009:	cmp    bpl,0x3
  43f00d:	je     43f1bd <strcmp@plt+0x3ba35>
  43f013:	test   bpl,bpl
  43f016:	jne    43f25d <strcmp@plt+0x3bad5>
  43f01c:	lea    rax,[rip+0x25d8d]        # 464db0 <strcmp@plt+0x61628>
  43f023:	lea    rbx,[rip+0xffffffffffffe6b6]        # 43d6e0 <strcmp@plt+0x39f58>
  43f02a:	cmp    DWORD PTR [rax],0x2
  43f02d:	jl     43f08f <strcmp@plt+0x3b907>
  43f02f:	lea    rsi,[rip+0x10bc7]        # 44fbfd <strcmp@plt+0x4c475>
  43f036:	mov    edi,0x6
  43f03b:	jmp    43f088 <strcmp@plt+0x3b900>
  43f03d:	lea    rax,[rip+0x31554]        # 470598 <strcmp@plt+0x6ce10>
  43f044:	mov    rdi,QWORD PTR [rax]
  43f047:	call   4079d0 <strcmp@plt+0x4248>
  43f04c:	cmp    eax,0x2
  43f04f:	jne    43f06e <strcmp@plt+0x3b8e6>
  43f051:	test   bl,bl
  43f053:	je     43f09b <strcmp@plt+0x3b913>
  43f055:	lea    rsi,[rip+0x10fa1]        # 44fffd <strcmp@plt+0x4c875>
  43f05c:	jmp    43f065 <strcmp@plt+0x3b8dd>
  43f05e:	lea    rsi,[rip+0x10fcb]        # 450030 <strcmp@plt+0x4c8a8>
  43f065:	xor    ebx,ebx
  43f067:	mov    edi,0x3
  43f06c:	jmp    43f088 <strcmp@plt+0x3b900>
  43f06e:	lea    rax,[rip+0x25d3b]        # 464db0 <strcmp@plt+0x61628>
  43f075:	cmp    DWORD PTR [rax],0x0
  43f078:	jle    43f097 <strcmp@plt+0x3b90f>
  43f07a:	lea    rsi,[rip+0x10b52]        # 44fbd3 <strcmp@plt+0x4c44b>
  43f081:	xor    ebx,ebx
  43f083:	mov    edi,0x5
  43f088:	xor    eax,eax
  43f08a:	call   42e800 <strcmp@plt+0x2b078>
  43f08f:	mov    rax,rbx
  43f092:	pop    rbx
  43f093:	pop    r14
  43f095:	pop    rbp
  43f096:	ret    
  43f097:	xor    ebx,ebx
  43f099:	jmp    43f08f <strcmp@plt+0x3b907>
  43f09b:	cmp    bpl,0x3
  43f09f:	je     43f189 <strcmp@plt+0x3ba01>
  43f0a5:	test   bpl,bpl
  43f0a8:	jne    43f1b1 <strcmp@plt+0x3ba29>
  43f0ae:	lea    rax,[rip+0x25cfb]        # 464db0 <strcmp@plt+0x61628>
  43f0b5:	lea    rbx,[rip+0xffffffffffffe624]        # 43d6e0 <strcmp@plt+0x39f58>
  43f0bc:	cmp    DWORD PTR [rax],0x2
  43f0bf:	jl     43f08f <strcmp@plt+0x3b907>
  43f0c1:	lea    rsi,[rip+0x10e67]        # 44ff2f <strcmp@plt+0x4c7a7>
  43f0c8:	mov    edi,0x6
  43f0cd:	jmp    43f088 <strcmp@plt+0x3b900>
  43f0cf:	cmp    bpl,0x3
  43f0d3:	je     43f1e5 <strcmp@plt+0x3ba5d>
  43f0d9:	test   bpl,bpl
  43f0dc:	jne    43f269 <strcmp@plt+0x3bae1>
  43f0e2:	lea    rax,[rip+0x25cc7]        # 464db0 <strcmp@plt+0x61628>
  43f0e9:	lea    rbx,[rip+0xffffffffffffeae0]        # 43dbd0 <strcmp@plt+0x3a448>
  43f0f0:	cmp    DWORD PTR [rax],0x2
  43f0f3:	jl     43f08f <strcmp@plt+0x3b907>
  43f0f5:	lea    rsi,[rip+0x10bcf]        # 44fccb <strcmp@plt+0x4c543>
  43f0fc:	mov    edi,0x6
  43f101:	jmp    43f088 <strcmp@plt+0x3b900>
  43f103:	cmp    bpl,0x3
  43f107:	je     43f20d <strcmp@plt+0x3ba85>
  43f10d:	test   bpl,bpl
  43f110:	jne    43f17d <strcmp@plt+0x3b9f5>
  43f112:	lea    rax,[rip+0x25c97]        # 464db0 <strcmp@plt+0x61628>
  43f119:	lea    rbx,[rip+0xfffffffffffff900]        # 43ea20 <strcmp@plt+0x3b298>
  43f120:	cmp    DWORD PTR [rax],0x2
  43f123:	jl     43f08f <strcmp@plt+0x3b907>
  43f129:	lea    rsi,[rip+0x10d40]        # 44fe70 <strcmp@plt+0x4c6e8>
  43f130:	mov    edi,0x6
  43f135:	jmp    43f088 <strcmp@plt+0x3b900>
  43f13a:	lea    rsi,[rip+0x10dbb]        # 44fefc <strcmp@plt+0x4c774>
  43f141:	jmp    43f065 <strcmp@plt+0x3b8dd>
  43f146:	cmp    bpl,0x3
  43f14a:	je     43f235 <strcmp@plt+0x3baad>
  43f150:	test   bpl,bpl
  43f153:	jne    43f17d <strcmp@plt+0x3b9f5>
  43f155:	lea    rax,[rip+0x25c54]        # 464db0 <strcmp@plt+0x61628>
  43f15c:	lea    rbx,[rip+0xffffffffffffed7d]        # 43dee0 <strcmp@plt+0x3a758>
  43f163:	cmp    DWORD PTR [rax],0x2
  43f166:	jl     43f08f <strcmp@plt+0x3b907>
  43f16c:	lea    rsi,[rip+0x10c26]        # 44fd99 <strcmp@plt+0x4c611>
  43f173:	mov    edi,0x6
  43f178:	jmp    43f088 <strcmp@plt+0x3b900>
  43f17d:	lea    rsi,[rip+0x10ca1]        # 44fe25 <strcmp@plt+0x4c69d>
  43f184:	jmp    43f065 <strcmp@plt+0x3b8dd>
  43f189:	lea    rax,[rip+0x25c20]        # 464db0 <strcmp@plt+0x61628>
  43f190:	lea    rbx,[rip+0xffffffffffffe959]        # 43daf0 <strcmp@plt+0x3a368>
  43f197:	cmp    DWORD PTR [rax],0x2
  43f19a:	jl     43f08f <strcmp@plt+0x3b907>
  43f1a0:	lea    rsi,[rip+0x10dcb]        # 44ff72 <strcmp@plt+0x4c7ea>
  43f1a7:	mov    edi,0x6
  43f1ac:	jmp    43f088 <strcmp@plt+0x3b900>
  43f1b1:	lea    rsi,[rip+0x10dfd]        # 44ffb5 <strcmp@plt+0x4c82d>
  43f1b8:	jmp    43f065 <strcmp@plt+0x3b8dd>
  43f1bd:	lea    rax,[rip+0x25bec]        # 464db0 <strcmp@plt+0x61628>
  43f1c4:	lea    rbx,[rip+0xffffffffffffe925]        # 43daf0 <strcmp@plt+0x3a368>
  43f1cb:	cmp    DWORD PTR [rax],0x2
  43f1ce:	jl     43f08f <strcmp@plt+0x3b907>
  43f1d4:	lea    rsi,[rip+0x10a65]        # 44fc40 <strcmp@plt+0x4c4b8>
  43f1db:	mov    edi,0x6
  43f1e0:	jmp    43f088 <strcmp@plt+0x3b900>
  43f1e5:	lea    rax,[rip+0x25bc4]        # 464db0 <strcmp@plt+0x61628>
  43f1ec:	lea    rbx,[rip+0xffffffffffffec0d]        # 43de00 <strcmp@plt+0x3a678>
  43f1f3:	cmp    DWORD PTR [rax],0x2
  43f1f6:	jl     43f08f <strcmp@plt+0x3b907>
  43f1fc:	lea    rsi,[rip+0x10b0b]        # 44fd0e <strcmp@plt+0x4c586>
  43f203:	mov    edi,0x6
  43f208:	jmp    43f088 <strcmp@plt+0x3b900>
  43f20d:	lea    rax,[rip+0x25b9c]        # 464db0 <strcmp@plt+0x61628>
  43f214:	lea    rbx,[rip+0xfffffffffffffcd5]        # 43eef0 <strcmp@plt+0x3b768>
  43f21b:	cmp    DWORD PTR [rax],0x2
  43f21e:	jl     43f08f <strcmp@plt+0x3b907>
  43f224:	lea    rsi,[rip+0x10c8b]        # 44feb6 <strcmp@plt+0x4c72e>
  43f22b:	mov    edi,0x6
  43f230:	jmp    43f088 <strcmp@plt+0x3b900>
  43f235:	lea    rax,[rip+0x25b74]        # 464db0 <strcmp@plt+0x61628>
  43f23c:	lea    rbx,[rip+0xfffffffffffff4ad]        # 43e6f0 <strcmp@plt+0x3af68>
  43f243:	cmp    DWORD PTR [rax],0x2
  43f246:	jl     43f08f <strcmp@plt+0x3b907>
  43f24c:	lea    rsi,[rip+0x10b8c]        # 44fddf <strcmp@plt+0x4c657>
  43f253:	mov    edi,0x6
  43f258:	jmp    43f088 <strcmp@plt+0x3b900>
  43f25d:	lea    rsi,[rip+0x10a1f]        # 44fc83 <strcmp@plt+0x4c4fb>
  43f264:	jmp    43f065 <strcmp@plt+0x3b8dd>
  43f269:	lea    rsi,[rip+0x10ae1]        # 44fd51 <strcmp@plt+0x4c5c9>
  43f270:	jmp    43f065 <strcmp@plt+0x3b8dd>
  43f275:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43f27f:	nop
  43f280:	push   r14
  43f282:	push   rbx
  43f283:	push   rax
  43f284:	mov    r14,rdi
  43f287:	mov    edi,0x1000
  43f28c:	call   432070 <strcmp@plt+0x2e8e8>
  43f291:	mov    rbx,rax
  43f294:	mov    edx,0x1
  43f299:	mov    rdi,r14
  43f29c:	mov    rsi,rax
  43f29f:	call   43ba40 <strcmp@plt+0x382b8>
  43f2a4:	cmp    eax,0xfffffffe
  43f2a7:	je     43f336 <strcmp@plt+0x3bbae>
  43f2ad:	cmp    eax,0xffffffff
  43f2b0:	jne    43f2bb <strcmp@plt+0x3bb33>
  43f2b2:	lea    rsi,[rip+0x10d9c]        # 450055 <strcmp@plt+0x4c8cd>
  43f2b9:	jmp    43f2e1 <strcmp@plt+0x3bb59>
  43f2bb:	add    eax,0xfffffff8
  43f2be:	cmp    DWORD PTR [rbx+0x4],eax
  43f2c1:	jae    43f2d8 <strcmp@plt+0x3bb50>
  43f2c3:	lea    rsi,[rip+0x10dc4]        # 45008e <strcmp@plt+0x4c906>
  43f2ca:	mov    edi,0x3
  43f2cf:	xor    eax,eax
  43f2d1:	call   42e800 <strcmp@plt+0x2b078>
  43f2d6:	jmp    43f2ef <strcmp@plt+0x3bb67>
  43f2d8:	jbe    43f2ef <strcmp@plt+0x3bb67>
  43f2da:	lea    rsi,[rip+0x10ddc]        # 4500bd <strcmp@plt+0x4c935>
  43f2e1:	mov    edi,0x2
  43f2e6:	xor    eax,eax
  43f2e8:	call   42e800 <strcmp@plt+0x2b078>
  43f2ed:	jmp    43f336 <strcmp@plt+0x3bbae>
  43f2ef:	mov    rdi,rbx
  43f2f2:	call   43efb0 <strcmp@plt+0x3b828>
  43f2f7:	test   rax,rax
  43f2fa:	je     43f30d <strcmp@plt+0x3bb85>
  43f2fc:	mov    rdx,rbx
  43f2ff:	add    rdx,0x8
  43f303:	mov    rdi,r14
  43f306:	mov    rsi,rbx
  43f309:	call   rax
  43f30b:	jmp    43f336 <strcmp@plt+0x3bbae>
  43f30d:	movzx  esi,BYTE PTR [rbx]
  43f310:	movzx  edx,BYTE PTR [rbx+0x1]
  43f314:	movzx  ecx,BYTE PTR [rbx+0x2]
  43f318:	mov    rdi,rsp
  43f31b:	mov    r8d,0x1
  43f321:	call   43b9e0 <strcmp@plt+0x38258>
  43f326:	mov    rsi,QWORD PTR [rsp]
  43f32a:	xor    ecx,ecx
  43f32c:	mov    rdi,r14
  43f32f:	mov    edx,eax
  43f331:	call   43bb20 <strcmp@plt+0x38398>
  43f336:	mov    rdi,rbx
  43f339:	call   403780 <free@plt>
  43f33e:	add    rsp,0x8
  43f342:	pop    rbx
  43f343:	pop    r14
  43f345:	ret    
  43f346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43f350:	push   rbp
  43f351:	push   r15
  43f353:	push   r14
  43f355:	push   r13
  43f357:	push   r12
  43f359:	push   rbx
  43f35a:	sub    rsp,0x18
  43f35e:	mov    r14d,ecx
  43f361:	mov    ebp,edx
  43f363:	mov    QWORD PTR [rsp],rsi
  43f367:	mov    r12,rdi
  43f36a:	lea    rsi,[rip+0x10d7c]        # 4500ed <strcmp@plt+0x4c965>
  43f371:	call   4032c0 <cfg_getstr@plt>
  43f376:	test   rax,rax
  43f379:	je     43f5bf <strcmp@plt+0x3be37>
  43f37f:	mov    DWORD PTR [rsp+0x8],ebp
  43f383:	lea    rsi,[rip+0x10d63]        # 4500ed <strcmp@plt+0x4c965>
  43f38a:	mov    rdi,r12
  43f38d:	call   4032c0 <cfg_getstr@plt>
  43f392:	mov    rdi,rax
  43f395:	call   403700 <strdup@plt>
  43f39a:	mov    rbp,QWORD PTR [rsp]
  43f39e:	mov    QWORD PTR [rbp+0x0],rax
  43f3a2:	lea    rsi,[rip+0xcff9]        # 44c3a2 <strcmp@plt+0x48c1a>
  43f3a9:	mov    rdi,r12
  43f3ac:	call   4031b0 <cfg_getint@plt>
  43f3b1:	mov    DWORD PTR [rbp+0xc],eax
  43f3b4:	test   r14b,r14b
  43f3b7:	jne    43f3cf <strcmp@plt+0x3bc47>
  43f3b9:	lea    rsi,[rip+0xfd1f]        # 44f0df <strcmp@plt+0x4b957>
  43f3c0:	mov    rdi,r12
  43f3c3:	call   4031b0 <cfg_getint@plt>
  43f3c8:	mov    rcx,QWORD PTR [rsp]
  43f3cc:	mov    DWORD PTR [rcx+0x8],eax
  43f3cf:	lea    rsi,[rip+0x30f7]        # 4424cd <strcmp@plt+0x3ed45>
  43f3d6:	mov    rdi,r12
  43f3d9:	call   403720 <cfg_size@plt>
  43f3de:	test   eax,eax
  43f3e0:	mov    QWORD PTR [rsp+0x10],r12
  43f3e5:	je     43f4c1 <strcmp@plt+0x3bd39>
  43f3eb:	xor    r15d,r15d
  43f3ee:	lea    rbx,[rip+0x30d8]        # 4424cd <strcmp@plt+0x3ed45>
  43f3f5:	lea    rbp,[rip+0x6720]        # 445b1c <strcmp@plt+0x42394>
  43f3fc:	nop    DWORD PTR [rax+0x0]
  43f400:	mov    rdi,r12
  43f403:	mov    rsi,rbx
  43f406:	mov    edx,r15d
  43f409:	call   4031f0 <cfg_getnsec@plt>
  43f40e:	mov    r14,rax
  43f411:	mov    rdi,rax
  43f414:	mov    rsi,rbp
  43f417:	call   4032c0 <cfg_getstr@plt>
  43f41c:	test   rax,rax
  43f41f:	je     43f5c3 <strcmp@plt+0x3be3b>
  43f425:	mov    rdi,r14
  43f428:	mov    rsi,rbp
  43f42b:	call   4032c0 <cfg_getstr@plt>
  43f430:	mov    rbx,rbp
  43f433:	mov    rbp,rax
  43f436:	mov    rdi,r14
  43f439:	lea    rsi,[rip+0x36df]        # 442b1f <strcmp@plt+0x3f397>
  43f440:	call   4031b0 <cfg_getint@plt>
  43f445:	mov    r12,rax
  43f448:	mov    rdi,r14
  43f44b:	lea    rsi,[rip+0xfcc6]        # 44f118 <strcmp@plt+0x4b990>
  43f452:	call   4031b0 <cfg_getint@plt>
  43f457:	mov    r13,rax
  43f45a:	mov    rdi,r14
  43f45d:	lea    rsi,[rip+0x11cfd]        # 451161 <strcmp@plt+0x4d9d9>
  43f464:	call   403350 <cfg_getbool@plt>
  43f469:	xor    r9d,r9d
  43f46c:	test   eax,eax
  43f46e:	setne  r9b
  43f472:	movzx  esi,r12b
  43f476:	movzx  edx,r13b
  43f47a:	mov    ecx,0xff
  43f47f:	xor    r8d,r8d
  43f482:	mov    rdi,rbp
  43f485:	mov    rbp,rbx
  43f488:	lea    rbx,[rip+0x303e]        # 4424cd <strcmp@plt+0x3ed45>
  43f48f:	mov    r12,QWORD PTR [rsp+0x10]
  43f494:	call   404b70 <strcmp@plt+0x13e8>
  43f499:	mov    rcx,QWORD PTR [rsp]
  43f49d:	mov    rsi,QWORD PTR [rcx+0x10]
  43f4a1:	mov    rdi,rax
  43f4a4:	call   42be30 <strcmp@plt+0x286a8>
  43f4a9:	add    r15d,0x1
  43f4ad:	mov    rdi,r12
  43f4b0:	mov    rsi,rbx
  43f4b3:	call   403720 <cfg_size@plt>
  43f4b8:	cmp    r15d,eax
  43f4bb:	jb     43f400 <strcmp@plt+0x3bc78>
  43f4c1:	mov    ebp,0x1
  43f4c6:	cmp    BYTE PTR [rsp+0x8],0x0
  43f4cb:	je     43f5ef <strcmp@plt+0x3be67>
  43f4d1:	lea    rsi,[rip+0x10c5d]        # 450135 <strcmp@plt+0x4c9ad>
  43f4d8:	mov    rdi,r12
  43f4db:	call   403720 <cfg_size@plt>
  43f4e0:	test   eax,eax
  43f4e2:	je     43f5ef <strcmp@plt+0x3be67>
  43f4e8:	xor    r15d,r15d
  43f4eb:	lea    r14,[rip+0x10c43]        # 450135 <strcmp@plt+0x4c9ad>
  43f4f2:	lea    rbx,[rip+0x4181]        # 44367a <strcmp@plt+0x3fef2>
  43f4f9:	nop    DWORD PTR [rax+0x0]
  43f500:	mov    rdi,r12
  43f503:	mov    rsi,r14
  43f506:	mov    edx,r15d
  43f509:	call   4031f0 <cfg_getnsec@plt>
  43f50e:	mov    r12,rax
  43f511:	mov    rdi,rax
  43f514:	lea    rsi,[rip+0x10c25]        # 450140 <strcmp@plt+0x4c9b8>
  43f51b:	call   4031b0 <cfg_getint@plt>
  43f520:	mov    r13,rax
  43f523:	mov    rdi,r12
  43f526:	mov    rsi,rbx
  43f529:	call   4032c0 <cfg_getstr@plt>
  43f52e:	test   rax,rax
  43f531:	je     43f5d3 <strcmp@plt+0x3be4b>
  43f537:	mov    rdi,r12
  43f53a:	mov    rsi,rbx
  43f53d:	call   4032c0 <cfg_getstr@plt>
  43f542:	mov    QWORD PTR [rsp+0x8],rax
  43f547:	mov    rdi,r12
  43f54a:	lea    rsi,[rip+0x35ce]        # 442b1f <strcmp@plt+0x3f397>
  43f551:	call   4031b0 <cfg_getint@plt>
  43f556:	mov    rbx,rax
  43f559:	mov    rdi,r12
  43f55c:	lea    rsi,[rip+0xfbb5]        # 44f118 <strcmp@plt+0x4b990>
  43f563:	call   4031b0 <cfg_getint@plt>
  43f568:	movzx  edx,bl
  43f56b:	mov    rbp,QWORD PTR [rsp]
  43f56f:	mov    r12,QWORD PTR [rsp+0x10]
  43f574:	movzx  ecx,al
  43f577:	mov    r8d,0xff
  43f57d:	xor    r9d,r9d
  43f580:	mov    rdi,QWORD PTR [rsp+0x8]
  43f585:	lea    rbx,[rip+0x40ee]        # 44367a <strcmp@plt+0x3fef2>
  43f58c:	mov    esi,r13d
  43f58f:	call   404cc0 <strcmp@plt+0x1538>
  43f594:	mov    rsi,QWORD PTR [rbp+0x18]
  43f598:	mov    rdi,rax
  43f59b:	call   42be30 <strcmp@plt+0x286a8>
  43f5a0:	add    r15d,0x1
  43f5a4:	mov    rdi,r12
  43f5a7:	mov    rsi,r14
  43f5aa:	call   403720 <cfg_size@plt>
  43f5af:	cmp    r15d,eax
  43f5b2:	jb     43f500 <strcmp@plt+0x3bd78>
  43f5b8:	mov    ebp,0x1
  43f5bd:	jmp    43f5ef <strcmp@plt+0x3be67>
  43f5bf:	xor    ebp,ebp
  43f5c1:	jmp    43f5ef <strcmp@plt+0x3be67>
  43f5c3:	mov    rax,QWORD PTR [rsp]
  43f5c7:	mov    rdx,QWORD PTR [rax]
  43f5ca:	lea    rsi,[rip+0x10b27]        # 4500f8 <strcmp@plt+0x4c970>
  43f5d1:	jmp    43f5e1 <strcmp@plt+0x3be59>
  43f5d3:	mov    rax,QWORD PTR [rsp]
  43f5d7:	mov    rdx,QWORD PTR [rax]
  43f5da:	lea    rsi,[rip+0x10b6a]        # 45014b <strcmp@plt+0x4c9c3>
  43f5e1:	xor    ebp,ebp
  43f5e3:	mov    edi,0x3
  43f5e8:	xor    eax,eax
  43f5ea:	call   42e800 <strcmp@plt+0x2b078>
  43f5ef:	mov    eax,ebp
  43f5f1:	add    rsp,0x18
  43f5f5:	pop    rbx
  43f5f6:	pop    r12
  43f5f8:	pop    r13
  43f5fa:	pop    r14
  43f5fc:	pop    r15
  43f5fe:	pop    rbp
  43f5ff:	ret    
  43f600:	push   rbp
  43f601:	push   r15
  43f603:	push   r14
  43f605:	push   r13
  43f607:	push   r12
  43f609:	push   rbx
  43f60a:	push   rax
  43f60b:	mov    r12d,r8d
  43f60e:	mov    r13d,ecx
  43f611:	mov    r14,rdx
  43f614:	mov    r15,rsi
  43f617:	mov    rbp,rdi
  43f61a:	xor    eax,eax
  43f61c:	call   4047c0 <strcmp@plt+0x1038>
  43f621:	mov    rbx,rax
  43f624:	mov    rdi,rbp
  43f627:	mov    rsi,rax
  43f62a:	mov    edx,r13d
  43f62d:	mov    ecx,r12d
  43f630:	call   43f350 <strcmp@plt+0x3bbc8>
  43f635:	cmp    eax,0x1
  43f638:	jne    43f65c <strcmp@plt+0x3bed4>
  43f63a:	movzx  ecx,r13b
  43f63e:	mov    rdi,r15
  43f641:	mov    rsi,r14
  43f644:	mov    rdx,rbx
  43f647:	call   405f90 <strcmp@plt+0x2808>
  43f64c:	mov    rbp,rax
  43f64f:	mov    rdi,rbx
  43f652:	call   404860 <strcmp@plt+0x10d8>
  43f657:	mov    rax,rbp
  43f65a:	jmp    43f65e <strcmp@plt+0x3bed6>
  43f65c:	xor    eax,eax
  43f65e:	add    rsp,0x8
  43f662:	pop    rbx
  43f663:	pop    r12
  43f665:	pop    r13
  43f667:	pop    r14
  43f669:	pop    r15
  43f66b:	pop    rbp
  43f66c:	ret    
  43f66d:	nop    DWORD PTR [rax]
  43f670:	push   rbp
  43f671:	push   r15
  43f673:	push   r14
  43f675:	push   r13
  43f677:	push   r12
  43f679:	push   rbx
  43f67a:	sub    rsp,0x18
  43f67e:	mov    QWORD PTR [rsp+0x10],rsi
  43f683:	lea    rsi,[rip+0xfae1]        # 44f16b <strcmp@plt+0x4b9e3>
  43f68a:	mov    QWORD PTR [rsp+0x8],rdi
  43f68f:	call   403720 <cfg_size@plt>
  43f694:	mov    DWORD PTR [rsp+0x4],eax
  43f698:	test   eax,eax
  43f69a:	jle    43f79a <strcmp@plt+0x3c012>
  43f6a0:	lea    rbx,[rip+0x6475]        # 445b1c <strcmp@plt+0x42394>
  43f6a7:	xor    r15d,r15d
  43f6aa:	nop    WORD PTR [rax+rax*1+0x0]
  43f6b0:	mov    rdi,QWORD PTR [rsp+0x8]
  43f6b5:	lea    rsi,[rip+0xfaaf]        # 44f16b <strcmp@plt+0x4b9e3>
  43f6bc:	mov    edx,r15d
  43f6bf:	call   4031f0 <cfg_getnsec@plt>
  43f6c4:	mov    r13,rax
  43f6c7:	mov    rax,QWORD PTR [rsp+0x10]
  43f6cc:	mov    r12,QWORD PTR [rax+0x78]
  43f6d0:	mov    rdi,r13
  43f6d3:	mov    rsi,rbx
  43f6d6:	call   4032c0 <cfg_getstr@plt>
  43f6db:	mov    r14,rax
  43f6de:	mov    rdi,r13
  43f6e1:	lea    rsi,[rip+0xfad1]        # 44f1b9 <strcmp@plt+0x4ba31>
  43f6e8:	call   4031b0 <cfg_getint@plt>
  43f6ed:	mov    rbx,rax
  43f6f0:	mov    rdi,r13
  43f6f3:	lea    rsi,[rip+0x38cf]        # 442fc9 <strcmp@plt+0x3f841>
  43f6fa:	call   4032c0 <cfg_getstr@plt>
  43f6ff:	mov    rbp,rax
  43f702:	mov    rdi,r13
  43f705:	lea    rsi,[rip+0xff71]        # 44f67d <strcmp@plt+0x4bef5>
  43f70c:	call   403350 <cfg_getbool@plt>
  43f711:	xor    r8d,r8d
  43f714:	test   eax,eax
  43f716:	setne  r8b
  43f71a:	mov    rdi,r12
  43f71d:	mov    rsi,r14
  43f720:	mov    edx,ebx
  43f722:	mov    rcx,rbp
  43f725:	call   405220 <strcmp@plt+0x1a98>
  43f72a:	cmp    eax,0x1
  43f72d:	jne    43f760 <strcmp@plt+0x3bfd8>
  43f72f:	lea    rax,[rip+0x2567a]        # 464db0 <strcmp@plt+0x61628>
  43f736:	cmp    DWORD PTR [rax],0x0
  43f739:	lea    rbx,[rip+0x63dc]        # 445b1c <strcmp@plt+0x42394>
  43f740:	jle    43f78b <strcmp@plt+0x3c003>
  43f742:	mov    rdi,r13
  43f745:	mov    rsi,rbx
  43f748:	call   4032c0 <cfg_getstr@plt>
  43f74d:	mov    rcx,rax
  43f750:	mov    edi,0x5
  43f755:	xor    eax,eax
  43f757:	lea    rsi,[rip+0x10a2c]        # 45018a <strcmp@plt+0x4ca02>
  43f75e:	jmp    43f783 <strcmp@plt+0x3bffb>
  43f760:	mov    rdi,r13
  43f763:	lea    rbx,[rip+0x63b2]        # 445b1c <strcmp@plt+0x42394>
  43f76a:	mov    rsi,rbx
  43f76d:	call   4032c0 <cfg_getstr@plt>
  43f772:	mov    rcx,rax
  43f775:	mov    edi,0x3
  43f77a:	xor    eax,eax
  43f77c:	lea    rsi,[rip+0x10a23]        # 4501a6 <strcmp@plt+0x4ca1e>
  43f783:	mov    rdx,rcx
  43f786:	call   42e800 <strcmp@plt+0x2b078>
  43f78b:	add    r15d,0x1
  43f78f:	cmp    DWORD PTR [rsp+0x4],r15d
  43f794:	jne    43f6b0 <strcmp@plt+0x3bf28>
  43f79a:	mov    eax,0x1
  43f79f:	add    rsp,0x18
  43f7a3:	pop    rbx
  43f7a4:	pop    r12
  43f7a6:	pop    r13
  43f7a8:	pop    r14
  43f7aa:	pop    r15
  43f7ac:	pop    rbp
  43f7ad:	ret    
  43f7ae:	xchg   ax,ax
  43f7b0:	push   rbp
  43f7b1:	push   r15
  43f7b3:	push   r14
  43f7b5:	push   r13
  43f7b7:	push   r12
  43f7b9:	push   rbx
  43f7ba:	sub    rsp,0x28
  43f7be:	mov    rbx,rsi
  43f7c1:	mov    rbp,rdi
  43f7c4:	mov    rdi,QWORD PTR [rsi+0x30]
  43f7c8:	mov    esi,0x2
  43f7cd:	call   4088a0 <strcmp@plt+0x5118>
  43f7d2:	mov    QWORD PTR [rsp+0x18],rax
  43f7d7:	mov    QWORD PTR [rsp+0x20],rbx
  43f7dc:	mov    rdi,QWORD PTR [rbx+0x30]
  43f7e0:	mov    esi,0xa
  43f7e5:	call   4088a0 <strcmp@plt+0x5118>
  43f7ea:	mov    QWORD PTR [rsp+0x10],rax
  43f7ef:	lea    rsi,[rip+0x109c9]        # 4501bf <strcmp@plt+0x4ca37>
  43f7f6:	mov    QWORD PTR [rsp+0x8],rbp
  43f7fb:	mov    rdi,rbp
  43f7fe:	call   403720 <cfg_size@plt>
  43f803:	test   eax,eax
  43f805:	jle    43f8f1 <strcmp@plt+0x3c169>
  43f80b:	mov    ebp,eax
  43f80d:	lea    r14,[rip+0x6308]        # 445b1c <strcmp@plt+0x42394>
  43f814:	xor    r15d,r15d
  43f817:	nop    WORD PTR [rax+rax*1+0x0]
  43f820:	mov    rdi,QWORD PTR [rsp+0x8]
  43f825:	lea    rsi,[rip+0x10993]        # 4501bf <strcmp@plt+0x4ca37>
  43f82c:	mov    edx,r15d
  43f82f:	call   4031f0 <cfg_getnsec@plt>
  43f834:	mov    r12,rax
  43f837:	mov    rdi,rax
  43f83a:	mov    rsi,r14
  43f83d:	call   4032c0 <cfg_getstr@plt>
  43f842:	test   rax,rax
  43f845:	je     43fa41 <strcmp@plt+0x3c2b9>
  43f84b:	mov    rdi,r12
  43f84e:	mov    rsi,r14
  43f851:	call   4032c0 <cfg_getstr@plt>
  43f856:	mov    r13,rax
  43f859:	mov    rdi,r12
  43f85c:	lea    rsi,[rip+0x32bc]        # 442b1f <strcmp@plt+0x3f397>
  43f863:	call   4031b0 <cfg_getint@plt>
  43f868:	mov    rbx,rax
  43f86b:	mov    rdi,r12
  43f86e:	lea    rsi,[rip+0xf8a3]        # 44f118 <strcmp@plt+0x4b990>
  43f875:	call   4031b0 <cfg_getint@plt>
  43f87a:	mov    rdi,QWORD PTR [rsp+0x18]
  43f87f:	mov    rsi,r13
  43f882:	mov    edx,ebx
  43f884:	mov    ecx,eax
  43f886:	call   405370 <strcmp@plt+0x1be8>
  43f88b:	cmp    eax,0x1
  43f88e:	jne    43f8c0 <strcmp@plt+0x3c138>
  43f890:	lea    rax,[rip+0x25519]        # 464db0 <strcmp@plt+0x61628>
  43f897:	cmp    DWORD PTR [rax],0x0
  43f89a:	jle    43f8e4 <strcmp@plt+0x3c15c>
  43f89c:	mov    rdi,r12
  43f89f:	mov    rsi,r14
  43f8a2:	call   4032c0 <cfg_getstr@plt>
  43f8a7:	mov    rcx,rax
  43f8aa:	mov    edi,0x5
  43f8af:	xor    eax,eax
  43f8b1:	lea    rsi,[rip+0x1095a]        # 450212 <strcmp@plt+0x4ca8a>
  43f8b8:	jmp    43f8dc <strcmp@plt+0x3c154>
  43f8ba:	nop    WORD PTR [rax+rax*1+0x0]
  43f8c0:	mov    rdi,r12
  43f8c3:	mov    rsi,r14
  43f8c6:	call   4032c0 <cfg_getstr@plt>
  43f8cb:	mov    rcx,rax
  43f8ce:	mov    edi,0x2
  43f8d3:	xor    eax,eax
  43f8d5:	lea    rsi,[rip+0x1095f]        # 45023b <strcmp@plt+0x4cab3>
  43f8dc:	mov    rdx,rcx
  43f8df:	call   42e800 <strcmp@plt+0x2b078>
  43f8e4:	add    r15d,0x1
  43f8e8:	cmp    r15d,ebp
  43f8eb:	jl     43f820 <strcmp@plt+0x3c098>
  43f8f1:	lea    rsi,[rip+0x1095a]        # 450252 <strcmp@plt+0x4caca>
  43f8f8:	mov    rdi,QWORD PTR [rsp+0x8]
  43f8fd:	call   403720 <cfg_size@plt>
  43f902:	test   eax,eax
  43f904:	jle    43f9f1 <strcmp@plt+0x3c269>
  43f90a:	mov    r14d,eax
  43f90d:	lea    rbp,[rip+0x6208]        # 445b1c <strcmp@plt+0x42394>
  43f914:	xor    r15d,r15d
  43f917:	nop    WORD PTR [rax+rax*1+0x0]
  43f920:	mov    rdi,QWORD PTR [rsp+0x8]
  43f925:	lea    rsi,[rip+0x10926]        # 450252 <strcmp@plt+0x4caca>
  43f92c:	mov    edx,r15d
  43f92f:	call   4031f0 <cfg_getnsec@plt>
  43f934:	mov    r12,rax
  43f937:	mov    rdi,rax
  43f93a:	mov    rsi,rbp
  43f93d:	call   4032c0 <cfg_getstr@plt>
  43f942:	test   rax,rax
  43f945:	je     43fa4a <strcmp@plt+0x3c2c2>
  43f94b:	mov    rdi,r12
  43f94e:	mov    rsi,rbp
  43f951:	call   4032c0 <cfg_getstr@plt>
  43f956:	mov    rbx,rax
  43f959:	mov    rdi,r12
  43f95c:	lea    rsi,[rip+0x31bc]        # 442b1f <strcmp@plt+0x3f397>
  43f963:	call   4031b0 <cfg_getint@plt>
  43f968:	mov    r13,rax
  43f96b:	mov    rdi,r12
  43f96e:	lea    rsi,[rip+0xf7a3]        # 44f118 <strcmp@plt+0x4b990>
  43f975:	call   4031b0 <cfg_getint@plt>
  43f97a:	mov    rdi,QWORD PTR [rsp+0x10]
  43f97f:	mov    rsi,rbx
  43f982:	mov    edx,r13d
  43f985:	mov    ecx,eax
  43f987:	call   405370 <strcmp@plt+0x1be8>
  43f98c:	cmp    eax,0x1
  43f98f:	jne    43f9c0 <strcmp@plt+0x3c238>
  43f991:	lea    rax,[rip+0x25418]        # 464db0 <strcmp@plt+0x61628>
  43f998:	cmp    DWORD PTR [rax],0x0
  43f99b:	jle    43f9e4 <strcmp@plt+0x3c25c>
  43f99d:	mov    rdi,r12
  43f9a0:	mov    rsi,rbp
  43f9a3:	call   4032c0 <cfg_getstr@plt>
  43f9a8:	mov    rcx,rax
  43f9ab:	mov    edi,0x5
  43f9b0:	xor    eax,eax
  43f9b2:	lea    rsi,[rip+0x108ec]        # 4502a5 <strcmp@plt+0x4cb1d>
  43f9b9:	jmp    43f9dc <strcmp@plt+0x3c254>
  43f9bb:	nop    DWORD PTR [rax+rax*1+0x0]
  43f9c0:	mov    rdi,r12
  43f9c3:	mov    rsi,rbp
  43f9c6:	call   4032c0 <cfg_getstr@plt>
  43f9cb:	mov    rcx,rax
  43f9ce:	mov    edi,0x2
  43f9d3:	xor    eax,eax
  43f9d5:	lea    rsi,[rip+0x1085f]        # 45023b <strcmp@plt+0x4cab3>
  43f9dc:	mov    rdx,rcx
  43f9df:	call   42e800 <strcmp@plt+0x2b078>
  43f9e4:	add    r15d,0x1
  43f9e8:	cmp    r15d,r14d
  43f9eb:	jl     43f920 <strcmp@plt+0x3c198>
  43f9f1:	mov    rbx,QWORD PTR [rsp+0x20]
  43f9f6:	mov    rax,QWORD PTR [rbx+0x38]
  43f9fa:	mov    rdi,QWORD PTR [rbx+0x40]
  43f9fe:	mov    rsi,QWORD PTR [rsp+0x18]
  43fa03:	call   QWORD PTR [rax+0x20]
  43fa06:	cmp    eax,0x1
  43fa09:	jne    43fa25 <strcmp@plt+0x3c29d>
  43fa0b:	mov    rax,QWORD PTR [rbx+0x38]
  43fa0f:	mov    rdi,QWORD PTR [rbx+0x40]
  43fa13:	mov    rsi,QWORD PTR [rsp+0x10]
  43fa18:	call   QWORD PTR [rax+0x20]
  43fa1b:	mov    ebx,0x1
  43fa20:	cmp    eax,0x1
  43fa23:	je     43fa5f <strcmp@plt+0x3c2d7>
  43fa25:	lea    rax,[rip+0x25384]        # 464db0 <strcmp@plt+0x61628>
  43fa2c:	cmp    DWORD PTR [rax],0x0
  43fa2f:	jle    43fa70 <strcmp@plt+0x3c2e8>
  43fa31:	lea    rsi,[rip+0x10896]        # 4502ce <strcmp@plt+0x4cb46>
  43fa38:	xor    ebx,ebx
  43fa3a:	mov    edi,0x5
  43fa3f:	jmp    43fa58 <strcmp@plt+0x3c2d0>
  43fa41:	lea    rsi,[rip+0x10786]        # 4501ce <strcmp@plt+0x4ca46>
  43fa48:	jmp    43fa51 <strcmp@plt+0x3c2c9>
  43fa4a:	lea    rsi,[rip+0x10810]        # 450261 <strcmp@plt+0x4cad9>
  43fa51:	xor    ebx,ebx
  43fa53:	mov    edi,0x2
  43fa58:	xor    eax,eax
  43fa5a:	call   42e800 <strcmp@plt+0x2b078>
  43fa5f:	mov    eax,ebx
  43fa61:	add    rsp,0x28
  43fa65:	pop    rbx
  43fa66:	pop    r12
  43fa68:	pop    r13
  43fa6a:	pop    r14
  43fa6c:	pop    r15
  43fa6e:	pop    rbp
  43fa6f:	ret    
  43fa70:	xor    ebx,ebx
  43fa72:	jmp    43fa5f <strcmp@plt+0x3c2d7>
  43fa74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43fa7e:	xchg   ax,ax
  43fa80:	push   rbp
  43fa81:	push   r15
  43fa83:	push   r14
  43fa85:	push   r13
  43fa87:	push   r12
  43fa89:	push   rbx
  43fa8a:	push   rax
  43fa8b:	mov    r14,rsi
  43fa8e:	mov    rbx,rdi
  43fa91:	lea    rsi,[rip+0x10873]        # 45030b <strcmp@plt+0x4cb83>
  43fa98:	call   403720 <cfg_size@plt>
  43fa9d:	test   eax,eax
  43fa9f:	jle    43fb1f <strcmp@plt+0x3c397>
  43faa1:	mov    ebp,eax
  43faa3:	lea    r15,[rip+0x10861]        # 45030b <strcmp@plt+0x4cb83>
  43faaa:	xor    r12d,r12d
  43faad:	nop    DWORD PTR [rax]
  43fab0:	mov    rdi,rbx
  43fab3:	mov    rsi,r15
  43fab6:	mov    edx,r12d
  43fab9:	call   403120 <cfg_getnstr@plt>
  43fabe:	test   rax,rax
  43fac1:	je     43fb16 <strcmp@plt+0x3c38e>
  43fac3:	mov    r13,rax
  43fac6:	mov    rsi,QWORD PTR [r14+0x68]
  43faca:	mov    rdi,rax
  43facd:	call   405080 <strcmp@plt+0x18f8>
  43fad2:	cmp    eax,0x1
  43fad5:	jne    43fb00 <strcmp@plt+0x3c378>
  43fad7:	lea    rax,[rip+0x252d2]        # 464db0 <strcmp@plt+0x61628>
  43fade:	cmp    DWORD PTR [rax],0x0
  43fae1:	jle    43fb16 <strcmp@plt+0x3c38e>
  43fae3:	mov    edi,0x5
  43fae8:	xor    eax,eax
  43faea:	lea    rsi,[rip+0x10825]        # 450316 <strcmp@plt+0x4cb8e>
  43faf1:	jmp    43fb0e <strcmp@plt+0x3c386>
  43faf3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43fafd:	nop    DWORD PTR [rax]
  43fb00:	mov    edi,0x2
  43fb05:	xor    eax,eax
  43fb07:	lea    rsi,[rip+0x10823]        # 450331 <strcmp@plt+0x4cba9>
  43fb0e:	mov    rdx,r13
  43fb11:	call   42e800 <strcmp@plt+0x2b078>
  43fb16:	add    r12d,0x1
  43fb1a:	cmp    ebp,r12d
  43fb1d:	jne    43fab0 <strcmp@plt+0x3c328>
  43fb1f:	mov    eax,0x1
  43fb24:	add    rsp,0x8
  43fb28:	pop    rbx
  43fb29:	pop    r12
  43fb2b:	pop    r13
  43fb2d:	pop    r14
  43fb2f:	pop    r15
  43fb31:	pop    rbp
  43fb32:	ret    
  43fb33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43fb3d:	nop    DWORD PTR [rax]
  43fb40:	push   rbp
  43fb41:	push   r15
  43fb43:	push   r14
  43fb45:	push   r13
  43fb47:	push   r12
  43fb49:	push   rbx
  43fb4a:	push   rax
  43fb4b:	mov    r15,rsi
  43fb4e:	mov    rbp,rdi
  43fb51:	lea    rsi,[rip+0x10807]        # 45035f <strcmp@plt+0x4cbd7>
  43fb58:	call   403720 <cfg_size@plt>
  43fb5d:	mov    r14d,0x1
  43fb63:	test   eax,eax
  43fb65:	jle    43fc04 <strcmp@plt+0x3c47c>
  43fb6b:	mov    ebx,eax
  43fb6d:	xor    r14d,r14d
  43fb70:	mov    rdi,rbp
  43fb73:	lea    rsi,[rip+0x107e5]        # 45035f <strcmp@plt+0x4cbd7>
  43fb7a:	mov    edx,r14d
  43fb7d:	call   403120 <cfg_getnstr@plt>
  43fb82:	test   rax,rax
  43fb85:	je     43fbd2 <strcmp@plt+0x3c44a>
  43fb87:	mov    r13,rax
  43fb8a:	xor    eax,eax
  43fb8c:	call   422f90 <strcmp@plt+0x1f808>
  43fb91:	mov    r12,rax
  43fb94:	mov    rdi,r13
  43fb97:	mov    rsi,rax
  43fb9a:	call   423c60 <strcmp@plt+0x204d8>
  43fb9f:	cmp    eax,0x1
  43fba2:	jne    43fbe3 <strcmp@plt+0x3c45b>
  43fba4:	mov    rsi,QWORD PTR [r15+0x48]
  43fba8:	mov    rdi,r12
  43fbab:	call   42bcf0 <strcmp@plt+0x28568>
  43fbb0:	lea    rax,[rip+0x251f9]        # 464db0 <strcmp@plt+0x61628>
  43fbb7:	cmp    DWORD PTR [rax],0x0
  43fbba:	jle    43fbd2 <strcmp@plt+0x3c44a>
  43fbbc:	mov    edi,0x5
  43fbc1:	xor    eax,eax
  43fbc3:	lea    rsi,[rip+0x107cf]        # 450399 <strcmp@plt+0x4cc11>
  43fbca:	mov    rdx,r13
  43fbcd:	call   42e800 <strcmp@plt+0x2b078>
  43fbd2:	add    r14d,0x1
  43fbd6:	cmp    r14d,ebx
  43fbd9:	jl     43fb70 <strcmp@plt+0x3c3e8>
  43fbdb:	mov    r14d,0x1
  43fbe1:	jmp    43fc04 <strcmp@plt+0x3c47c>
  43fbe3:	mov    rdi,r12
  43fbe6:	call   422fa0 <strcmp@plt+0x1f818>
  43fbeb:	lea    rsi,[rip+0x1077e]        # 450370 <strcmp@plt+0x4cbe8>
  43fbf2:	xor    r14d,r14d
  43fbf5:	mov    edi,0x2
  43fbfa:	xor    eax,eax
  43fbfc:	mov    rdx,r13
  43fbff:	call   42e800 <strcmp@plt+0x2b078>
  43fc04:	mov    eax,r14d
  43fc07:	add    rsp,0x8
  43fc0b:	pop    rbx
  43fc0c:	pop    r12
  43fc0e:	pop    r13
  43fc10:	pop    r14
  43fc12:	pop    r15
  43fc14:	pop    rbp
  43fc15:	ret    
  43fc16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43fc20:	push   rbp
  43fc21:	push   r15
  43fc23:	push   r14
  43fc25:	push   r13
  43fc27:	push   r12
  43fc29:	push   rbx
  43fc2a:	sub    rsp,0x18
  43fc2e:	mov    QWORD PTR [rsp+0x8],rdx
  43fc33:	mov    r12,rsi
  43fc36:	lea    rsi,[rip+0x113d1]        # 45100e <strcmp@plt+0x4d886>
  43fc3d:	mov    QWORD PTR [rsp+0x10],rdi
  43fc42:	call   403720 <cfg_size@plt>
  43fc47:	mov    DWORD PTR [rsp+0x4],eax
  43fc4b:	test   eax,eax
  43fc4d:	jle    43fd48 <strcmp@plt+0x3c5c0>
  43fc53:	xor    r14d,r14d
  43fc56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43fc60:	mov    rdi,QWORD PTR [rsp+0x10]
  43fc65:	lea    rsi,[rip+0x113a2]        # 45100e <strcmp@plt+0x4d886>
  43fc6c:	mov    edx,r14d
  43fc6f:	call   4031f0 <cfg_getnsec@plt>
  43fc74:	mov    rbx,rax
  43fc77:	xor    eax,eax
  43fc79:	call   4047c0 <strcmp@plt+0x1038>
  43fc7e:	mov    rbp,rax
  43fc81:	mov    edx,0x1
  43fc86:	xor    ecx,ecx
  43fc88:	mov    rdi,rbx
  43fc8b:	mov    rsi,rax
  43fc8e:	call   43f350 <strcmp@plt+0x3bbc8>
  43fc93:	cmp    eax,0x1
  43fc96:	jne    43fd4f <strcmp@plt+0x3c5c7>
  43fc9c:	mov    ecx,0x1
  43fca1:	mov    rdi,r12
  43fca4:	mov    rsi,QWORD PTR [rsp+0x8]
  43fca9:	mov    rdx,rbp
  43fcac:	call   405f90 <strcmp@plt+0x2808>
  43fcb1:	mov    r15,rax
  43fcb4:	mov    rdi,rbp
  43fcb7:	call   404860 <strcmp@plt+0x10d8>
  43fcbc:	test   r15,r15
  43fcbf:	je     43fd4f <strcmp@plt+0x3c5c7>
  43fcc5:	mov    rdi,r15
  43fcc8:	call   431b60 <strcmp@plt+0x2e3d8>
  43fccd:	test   rax,rax
  43fcd0:	je     43fd00 <strcmp@plt+0x3c578>
  43fcd2:	mov    r13,rax
  43fcd5:	mov    rax,QWORD PTR [r12+0x38]
  43fcda:	mov    rdi,QWORD PTR [r12+0x40]
  43fcdf:	xor    edx,edx
  43fce1:	mov    rsi,r13
  43fce4:	call   QWORD PTR [rax+0x10]
  43fce7:	cmp    eax,0x1
  43fcea:	jne    43fd10 <strcmp@plt+0x3c588>
  43fcec:	mov    rdi,r13
  43fcef:	mov    rsi,r12
  43fcf2:	call   406a40 <strcmp@plt+0x32b8>
  43fcf7:	cmp    eax,0x1
  43fcfa:	jne    43fd31 <strcmp@plt+0x3c5a9>
  43fcfc:	jmp    43fd39 <strcmp@plt+0x3c5b1>
  43fcfe:	xchg   ax,ax
  43fd00:	mov    rdi,r15
  43fd03:	call   428ed0 <strcmp@plt+0x25748>
  43fd08:	jmp    43fd39 <strcmp@plt+0x3c5b1>
  43fd0a:	nop    WORD PTR [rax+rax*1+0x0]
  43fd10:	mov    rdi,r15
  43fd13:	call   423130 <strcmp@plt+0x1f9a8>
  43fd18:	mov    rcx,rax
  43fd1b:	mov    edi,0x2
  43fd20:	xor    eax,eax
  43fd22:	lea    rsi,[rip+0x10691]        # 4503ba <strcmp@plt+0x4cc32>
  43fd29:	mov    rdx,rcx
  43fd2c:	call   42e800 <strcmp@plt+0x2b078>
  43fd31:	mov    rdi,r13
  43fd34:	call   431c10 <strcmp@plt+0x2e488>
  43fd39:	add    r14d,0x1
  43fd3d:	cmp    r14d,DWORD PTR [rsp+0x4]
  43fd42:	jl     43fc60 <strcmp@plt+0x3c4d8>
  43fd48:	mov    eax,0x1
  43fd4d:	jmp    43fd51 <strcmp@plt+0x3c5c9>
  43fd4f:	xor    eax,eax
  43fd51:	add    rsp,0x18
  43fd55:	pop    rbx
  43fd56:	pop    r12
  43fd58:	pop    r13
  43fd5a:	pop    r14
  43fd5c:	pop    r15
  43fd5e:	pop    rbp
  43fd5f:	ret    
  43fd60:	push   rbp
  43fd61:	push   r15
  43fd63:	push   r14
  43fd65:	push   r13
  43fd67:	push   r12
  43fd69:	push   rbx
  43fd6a:	sub    rsp,0x18
  43fd6e:	mov    QWORD PTR [rsp+0x10],rcx
  43fd73:	mov    r12,rdx
  43fd76:	mov    QWORD PTR [rsp+0x8],rsi
  43fd7b:	mov    r13,rdi
  43fd7e:	lea    rdi,[rip+0x8db2]        # 448b37 <strcmp@plt+0x453af>
  43fd85:	call   420020 <strcmp@plt+0x1c898>
  43fd8a:	mov    QWORD PTR [r12+0x20],rax
  43fd8f:	lea    rcx,[rip+0x30802]        # 470598 <strcmp@plt+0x6ce10>
  43fd96:	mov    rdi,QWORD PTR [rcx]
  43fd99:	xor    ebp,ebp
  43fd9b:	xor    esi,esi
  43fd9d:	call   QWORD PTR [rax]
  43fd9f:	mov    QWORD PTR [r12+0x28],rax
  43fda4:	lea    rsi,[rip+0x7d05]        # 447ab0 <strcmp@plt+0x44328>
  43fdab:	mov    rdi,r13
  43fdae:	call   4032c0 <cfg_getstr@plt>
  43fdb3:	test   rax,rax
  43fdb6:	je     43fe30 <strcmp@plt+0x3c6a8>
  43fdb8:	mov    rdi,rax
  43fdbb:	call   437dd0 <strcmp@plt+0x34648>
  43fdc0:	mov    rbx,rax
  43fdc3:	lea    rsi,[rip+0x10642]        # 45040c <strcmp@plt+0x4cc84>
  43fdca:	mov    rdi,rax
  43fdcd:	call   403788 <strcmp@plt>
  43fdd2:	test   eax,eax
  43fdd4:	je     43fe0e <strcmp@plt+0x3c686>
  43fdd6:	lea    rsi,[rip+0x10634]        # 450411 <strcmp@plt+0x4cc89>
  43fddd:	mov    rdi,rbx
  43fde0:	call   403788 <strcmp@plt>
  43fde5:	test   eax,eax
  43fde7:	je     43fe14 <strcmp@plt+0x3c68c>
  43fde9:	lea    rsi,[rip+0x1062b]        # 45041b <strcmp@plt+0x4cc93>
  43fdf0:	xor    ebp,ebp
  43fdf2:	mov    edi,0x2
  43fdf7:	xor    eax,eax
  43fdf9:	mov    rdx,rbx
  43fdfc:	call   42e800 <strcmp@plt+0x2b078>
  43fe01:	mov    rdi,rbx
  43fe04:	call   403780 <free@plt>
  43fe09:	jmp    440124 <strcmp@plt+0x3c99c>
  43fe0e:	mov    ax,0x10f5
  43fe12:	jmp    43fe1d <strcmp@plt+0x3c695>
  43fe14:	mov    ax,0x12b6
  43fe18:	mov    ebp,0x1
  43fe1d:	mov    DWORD PTR [r12+0x40],ebp
  43fe22:	mov    WORD PTR [r12+0x44],ax
  43fe28:	mov    rdi,rbx
  43fe2b:	call   403780 <free@plt>
  43fe30:	lea    rsi,[rip+0x10603]        # 45043a <strcmp@plt+0x4ccb2>
  43fe37:	mov    rdi,r13
  43fe3a:	call   4031b0 <cfg_getint@plt>
  43fe3f:	test   eax,eax
  43fe41:	mov    ecx,0x3
  43fe46:	cmovne ecx,eax
  43fe49:	mov    DWORD PTR [r12+0x8],ecx
  43fe4e:	lea    rsi,[rip+0x105f9]        # 45044e <strcmp@plt+0x4ccc6>
  43fe55:	xor    edx,edx
  43fe57:	mov    rdi,r13
  43fe5a:	call   4031f0 <cfg_getnsec@plt>
  43fe5f:	test   rax,rax
  43fe62:	je     43febf <strcmp@plt+0x3c737>
  43fe64:	mov    rbx,rax
  43fe67:	lea    rsi,[rip+0x105ed]        # 45045b <strcmp@plt+0x4ccd3>
  43fe6e:	mov    rdi,rax
  43fe71:	call   4031b0 <cfg_getint@plt>
  43fe76:	lea    r14,[r12+0xc]
  43fe7b:	mov    DWORD PTR [r12+0xc],eax
  43fe80:	lea    rsi,[rip+0x105e8]        # 45046f <strcmp@plt+0x4cce7>
  43fe87:	mov    rdi,rbx
  43fe8a:	call   4031b0 <cfg_getint@plt>
  43fe8f:	lea    rbp,[r12+0x10]
  43fe94:	mov    DWORD PTR [r12+0x10],eax
  43fe99:	lea    rsi,[rip+0x105e2]        # 450482 <strcmp@plt+0x4ccfa>
  43fea0:	mov    rdi,rbx
  43fea3:	call   4031b0 <cfg_getint@plt>
  43fea8:	lea    rdx,[r12+0x14]
  43fead:	mov    DWORD PTR [r12+0x14],eax
  43feb2:	mov    rdi,r14
  43feb5:	mov    rsi,rbp
  43feb8:	call   404ef0 <strcmp@plt+0x1768>
  43febd:	jmp    43fefb <strcmp@plt+0x3c773>
  43febf:	lea    rax,[rip+0x24eea]        # 464db0 <strcmp@plt+0x61628>
  43fec6:	cmp    DWORD PTR [rax],0x0
  43fec9:	jle    43fee3 <strcmp@plt+0x3c75b>
  43fecb:	lea    rsi,[rip+0x105cc]        # 45049e <strcmp@plt+0x4cd16>
  43fed2:	mov    edi,0x5
  43fed7:	mov    edx,0x1e
  43fedc:	xor    eax,eax
  43fede:	call   42e800 <strcmp@plt+0x2b078>
  43fee3:	movabs rax,0x20000001e
  43feed:	mov    QWORD PTR [r12+0xc],rax
  43fef2:	mov    DWORD PTR [r12+0x14],0x5
  43fefb:	lea    rsi,[rip+0xf546]        # 44f448 <strcmp@plt+0x4bcc0>
  43ff02:	mov    rdi,r13
  43ff05:	call   403720 <cfg_size@plt>
  43ff0a:	test   eax,eax
  43ff0c:	jle    43ff8f <strcmp@plt+0x3c807>
  43ff12:	mov    ebp,eax
  43ff14:	lea    rbx,[rip+0xf52d]        # 44f448 <strcmp@plt+0x4bcc0>
  43ff1b:	xor    r14d,r14d
  43ff1e:	xchg   ax,ax
  43ff20:	mov    rdi,r13
  43ff23:	mov    rsi,rbx
  43ff26:	mov    edx,r14d
  43ff29:	call   403120 <cfg_getnstr@plt>
  43ff2e:	test   rax,rax
  43ff31:	je     43ff86 <strcmp@plt+0x3c7fe>
  43ff33:	mov    r15,rax
  43ff36:	mov    rsi,QWORD PTR [r12+0x30]
  43ff3b:	mov    rdi,rax
  43ff3e:	call   405080 <strcmp@plt+0x18f8>
  43ff43:	cmp    eax,0x1
  43ff46:	jne    43ff70 <strcmp@plt+0x3c7e8>
  43ff48:	lea    rax,[rip+0x24e61]        # 464db0 <strcmp@plt+0x61628>
  43ff4f:	cmp    DWORD PTR [rax],0x0
  43ff52:	jle    43ff86 <strcmp@plt+0x3c7fe>
  43ff54:	mov    edi,0x5
  43ff59:	xor    eax,eax
  43ff5b:	lea    rsi,[rip+0x105a1]        # 450503 <strcmp@plt+0x4cd7b>
  43ff62:	jmp    43ff7e <strcmp@plt+0x3c7f6>
  43ff64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ff6e:	xchg   ax,ax
  43ff70:	mov    edi,0x1
  43ff75:	xor    eax,eax
  43ff77:	lea    rsi,[rip+0x105a3]        # 450521 <strcmp@plt+0x4cd99>
  43ff7e:	mov    rdx,r15
  43ff81:	call   42e800 <strcmp@plt+0x2b078>
  43ff86:	add    r14d,0x1
  43ff8a:	cmp    ebp,r14d
  43ff8d:	jne    43ff20 <strcmp@plt+0x3c798>
  43ff8f:	lea    rsi,[rip+0x105a6]        # 45053c <strcmp@plt+0x4cdb4>
  43ff96:	mov    rdi,r13
  43ff99:	call   403720 <cfg_size@plt>
  43ff9e:	mov    DWORD PTR [rsp+0x4],eax
  43ffa2:	test   eax,eax
  43ffa4:	jle    4400f3 <strcmp@plt+0x3c96b>
  43ffaa:	xor    r14d,r14d
  43ffad:	jmp    440040 <strcmp@plt+0x3c8b8>
  43ffb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ffbc:	nop    DWORD PTR [rax+0x0]
  43ffc0:	mov    edx,0x2
  43ffc5:	mov    ecx,0x1
  43ffca:	mov    rdi,r12
  43ffcd:	mov    rsi,r15
  43ffd0:	call   40aaa0 <strcmp@plt+0x7318>
  43ffd5:	test   rax,rax
  43ffd8:	je     44001b <strcmp@plt+0x3c893>
  43ffda:	mov    rdi,r12
  43ffdd:	mov    rsi,rax
  43ffe0:	call   40ab80 <strcmp@plt+0x73f8>
  43ffe5:	lea    rax,[rip+0x24dc4]        # 464db0 <strcmp@plt+0x61628>
  43ffec:	cmp    DWORD PTR [rax],0x0
  43ffef:	jle    4400e4 <strcmp@plt+0x3c95c>
  43fff5:	mov    rdi,r15
  43fff8:	call   423130 <strcmp@plt+0x1f9a8>
  43fffd:	mov    rcx,rax
  440000:	mov    edi,0x5
  440005:	xor    eax,eax
  440007:	lea    rsi,[rip+0x10582]        # 450590 <strcmp@plt+0x4ce08>
  44000e:	mov    rdx,rcx
  440011:	call   42e800 <strcmp@plt+0x2b078>
  440016:	jmp    4400e4 <strcmp@plt+0x3c95c>
  44001b:	mov    edi,0x2
  440020:	xor    eax,eax
  440022:	lea    rsi,[rip+0x10524]        # 45054d <strcmp@plt+0x4cdc5>
  440029:	mov    rdx,r15
  44002c:	jmp    4400d7 <strcmp@plt+0x3c94f>
  440031:	nop    WORD PTR cs:[rax+rax*1+0x0]
  44003b:	nop    DWORD PTR [rax+rax*1+0x0]
  440040:	mov    rdi,r13
  440043:	lea    rsi,[rip+0x104f2]        # 45053c <strcmp@plt+0x4cdb4>
  44004a:	mov    edx,r14d
  44004d:	call   4031f0 <cfg_getnsec@plt>
  440052:	mov    rbx,rax
  440055:	xor    eax,eax
  440057:	call   4047c0 <strcmp@plt+0x1038>
  44005c:	mov    rbp,rax
  44005f:	xor    edx,edx
  440061:	mov    ecx,0x1
  440066:	mov    rdi,rbx
  440069:	mov    rsi,rax
  44006c:	call   43f350 <strcmp@plt+0x3bbc8>
  440071:	cmp    eax,0x1
  440074:	jne    4400fa <strcmp@plt+0x3c972>
  44007a:	xor    ecx,ecx
  44007c:	mov    rdi,QWORD PTR [rsp+0x8]
  440081:	mov    rsi,QWORD PTR [rsp+0x10]
  440086:	mov    rdx,rbp
  440089:	call   405f90 <strcmp@plt+0x2808>
  44008e:	mov    r15,rax
  440091:	mov    rdi,rbp
  440094:	call   404860 <strcmp@plt+0x10d8>
  440099:	test   r15,r15
  44009c:	je     4400fa <strcmp@plt+0x3c972>
  44009e:	mov    rdi,QWORD PTR [r12+0x18]
  4400a3:	mov    rsi,r15
  4400a6:	call   408890 <strcmp@plt+0x5108>
  4400ab:	test   rax,rax
  4400ae:	je     43ffc0 <strcmp@plt+0x3c838>
  4400b4:	mov    rdi,rbx
  4400b7:	lea    rsi,[rip+0x1002f]        # 4500ed <strcmp@plt+0x4c965>
  4400be:	call   4032c0 <cfg_getstr@plt>
  4400c3:	mov    rcx,rax
  4400c6:	mov    edi,0x2
  4400cb:	xor    eax,eax
  4400cd:	lea    rsi,[rip+0x104fd]        # 4505d1 <strcmp@plt+0x4ce49>
  4400d4:	mov    rdx,rcx
  4400d7:	call   42e800 <strcmp@plt+0x2b078>
  4400dc:	mov    rdi,r15
  4400df:	call   428ed0 <strcmp@plt+0x25748>
  4400e4:	add    r14d,0x1
  4400e8:	cmp    r14d,DWORD PTR [rsp+0x4]
  4400ed:	jl     440040 <strcmp@plt+0x3c8b8>
  4400f3:	mov    ebp,0x1
  4400f8:	jmp    440124 <strcmp@plt+0x3c99c>
  4400fa:	lea    rsi,[rip+0xffec]        # 4500ed <strcmp@plt+0x4c965>
  440101:	mov    rdi,rbx
  440104:	call   4032c0 <cfg_getstr@plt>
  440109:	mov    rcx,rax
  44010c:	lea    rsi,[rip+0x1043a]        # 45054d <strcmp@plt+0x4cdc5>
  440113:	xor    ebp,ebp
  440115:	mov    edi,0x2
  44011a:	xor    eax,eax
  44011c:	mov    rdx,rcx
  44011f:	call   42e800 <strcmp@plt+0x2b078>
  440124:	mov    eax,ebp
  440126:	add    rsp,0x18
  44012a:	pop    rbx
  44012b:	pop    r12
  44012d:	pop    r13
  44012f:	pop    r14
  440131:	pop    r15
  440133:	pop    rbp
  440134:	ret    
  440135:	nop    WORD PTR cs:[rax+rax*1+0x0]
  44013f:	nop
  440140:	push   rbp
  440141:	push   r15
  440143:	push   r14
  440145:	push   r13
  440147:	push   r12
  440149:	push   rbx
  44014a:	sub    rsp,0x28
  44014e:	mov    rbp,rdi
  440151:	lea    rbx,[rip+0x30440]        # 470598 <strcmp@plt+0x6ce10>
  440158:	mov    edi,0x2
  44015d:	mov    rsi,rbx
  440160:	call   407a10 <strcmp@plt+0x4288>
  440165:	cmp    eax,0x1
  440168:	jne    4402f5 <strcmp@plt+0x3cb6d>
  44016e:	mov    rdi,rbp
  440171:	call   440460 <strcmp@plt+0x3ccd8>
  440176:	mov    r14,rax
  440179:	mov    rdi,QWORD PTR [rbx]
  44017c:	call   40a1f0 <strcmp@plt+0x6a68>
  440181:	lea    rdx,[rax+0x18]
  440185:	mov    rdi,rbp
  440188:	mov    QWORD PTR [rsp],rax
  44018c:	mov    rsi,rax
  44018f:	mov    rcx,r14
  440192:	call   43fd60 <strcmp@plt+0x3c5d8>
  440197:	xor    ebx,ebx
  440199:	cmp    eax,0x1
  44019c:	jne    44030a <strcmp@plt+0x3cb82>
  4401a2:	lea    rsi,[rip+0x1049f]        # 450648 <strcmp@plt+0x4cec0>
  4401a9:	mov    rdi,rbp
  4401ac:	call   403720 <cfg_size@plt>
  4401b1:	test   eax,eax
  4401b3:	mov    QWORD PTR [rsp+0x18],r14
  4401b8:	je     440375 <strcmp@plt+0x3cbed>
  4401be:	lea    rsi,[rip+0x10483]        # 450648 <strcmp@plt+0x4cec0>
  4401c5:	mov    rdi,rbp
  4401c8:	call   403280 <cfg_getsec@plt>
  4401cd:	lea    rsi,[rip+0x1047f]        # 450653 <strcmp@plt+0x4cecb>
  4401d4:	mov    QWORD PTR [rsp+0x20],rax
  4401d9:	mov    rdi,rax
  4401dc:	call   403720 <cfg_size@plt>
  4401e1:	mov    DWORD PTR [rsp+0xc],eax
  4401e5:	test   eax,eax
  4401e7:	mov    QWORD PTR [rsp+0x10],rbp
  4401ec:	je     44031b <strcmp@plt+0x3cb93>
  4401f2:	jle    44032e <strcmp@plt+0x3cba6>
  4401f8:	lea    r15,[rip+0x1048e]        # 45068d <strcmp@plt+0x4cf05>
  4401ff:	xor    r13d,r13d
  440202:	nop    WORD PTR cs:[rax+rax*1+0x0]
  44020c:	nop    DWORD PTR [rax+0x0]
  440210:	mov    rdi,QWORD PTR [rsp+0x20]
  440215:	lea    rsi,[rip+0x10437]        # 450653 <strcmp@plt+0x4cecb>
  44021c:	mov    edx,r13d
  44021f:	call   4031f0 <cfg_getnsec@plt>
  440224:	mov    r12,rax
  440227:	mov    rdi,rax
  44022a:	mov    rsi,r15
  44022d:	call   4032c0 <cfg_getstr@plt>
  440232:	test   rax,rax
  440235:	je     440419 <strcmp@plt+0x3cc91>
  44023b:	mov    rdi,r12
  44023e:	mov    rsi,r15
  440241:	call   4032c0 <cfg_getstr@plt>
  440246:	mov    rbp,rax
  440249:	mov    rdi,r12
  44024c:	lea    rsi,[rip+0xfeed]        # 450140 <strcmp@plt+0x4c9b8>
  440253:	call   4031b0 <cfg_getint@plt>
  440258:	mov    rbx,rax
  44025b:	mov    rdi,r12
  44025e:	lea    rsi,[rip+0x28ba]        # 442b1f <strcmp@plt+0x3f397>
  440265:	call   4031b0 <cfg_getint@plt>
  44026a:	mov    r14,rax
  44026d:	mov    rdi,r12
  440270:	lea    rsi,[rip+0xeea1]        # 44f118 <strcmp@plt+0x4b990>
  440277:	call   4031b0 <cfg_getint@plt>
  44027c:	mov    rdi,QWORD PTR [rsp]
  440280:	mov    rsi,rbp
  440283:	mov    edx,ebx
  440285:	mov    ecx,r14d
  440288:	mov    r8d,eax
  44028b:	call   405640 <strcmp@plt+0x1eb8>
  440290:	cmp    eax,0x1
  440293:	jne    4402c0 <strcmp@plt+0x3cb38>
  440295:	lea    rax,[rip+0x24b14]        # 464db0 <strcmp@plt+0x61628>
  44029c:	cmp    DWORD PTR [rax],0x0
  44029f:	jle    4402e4 <strcmp@plt+0x3cb5c>
  4402a1:	mov    rdi,r12
  4402a4:	mov    rsi,r15
  4402a7:	call   4032c0 <cfg_getstr@plt>
  4402ac:	mov    rcx,rax
  4402af:	mov    edi,0x5
  4402b4:	xor    eax,eax
  4402b6:	lea    rsi,[rip+0x10412]        # 4506cf <strcmp@plt+0x4cf47>
  4402bd:	jmp    4402dc <strcmp@plt+0x3cb54>
  4402bf:	nop
  4402c0:	mov    rdi,r12
  4402c3:	mov    rsi,r15
  4402c6:	call   4032c0 <cfg_getstr@plt>
  4402cb:	mov    rcx,rax
  4402ce:	mov    edi,0x2
  4402d3:	xor    eax,eax
  4402d5:	lea    rsi,[rip+0x10413]        # 4506ef <strcmp@plt+0x4cf67>
  4402dc:	mov    rdx,rcx
  4402df:	call   42e800 <strcmp@plt+0x2b078>
  4402e4:	add    r13d,0x1
  4402e8:	cmp    r13d,DWORD PTR [rsp+0xc]
  4402ed:	jl     440210 <strcmp@plt+0x3ca88>
  4402f3:	jmp    44032e <strcmp@plt+0x3cba6>
  4402f5:	lea    rsi,[rip+0x1032c]        # 450628 <strcmp@plt+0x4cea0>
  4402fc:	xor    ebx,ebx
  4402fe:	mov    edi,0x1
  440303:	xor    eax,eax
  440305:	call   42e800 <strcmp@plt+0x2b078>
  44030a:	mov    eax,ebx
  44030c:	add    rsp,0x28
  440310:	pop    rbx
  440311:	pop    r12
  440313:	pop    r13
  440315:	pop    r14
  440317:	pop    r15
  440319:	pop    rbp
  44031a:	ret    
  44031b:	lea    rsi,[rip+0x1033b]        # 45065d <strcmp@plt+0x4ced5>
  440322:	mov    edi,0x2
  440327:	xor    eax,eax
  440329:	call   42e800 <strcmp@plt+0x2b078>
  44032e:	mov    rax,QWORD PTR [rsp]
  440332:	mov    rax,QWORD PTR [rax+0x68]
  440336:	cmp    QWORD PTR [rax+0x8],0x0
  44033b:	mov    rbp,QWORD PTR [rsp+0x10]
  440340:	jne    440375 <strcmp@plt+0x3cbed>
  440342:	lea    rsi,[rip+0x103c7]        # 450710 <strcmp@plt+0x4cf88>
  440349:	xor    ebx,ebx
  44034b:	mov    edi,0x2
  440350:	xor    eax,eax
  440352:	call   42e800 <strcmp@plt+0x2b078>
  440357:	mov    rcx,QWORD PTR [rsp]
  44035b:	mov    rax,QWORD PTR [rcx+0x38]
  44035f:	mov    rdi,QWORD PTR [rcx+0x40]
  440363:	mov    rsi,QWORD PTR [rcx+0x68]
  440367:	xor    edx,edx
  440369:	call   QWORD PTR [rax+0x10]
  44036c:	cmp    eax,0x1
  44036f:	jne    44042c <strcmp@plt+0x3cca4>
  440375:	lea    rsi,[rip+0x103e0]        # 45075c <strcmp@plt+0x4cfd4>
  44037c:	mov    rdi,rbp
  44037f:	call   403720 <cfg_size@plt>
  440384:	test   eax,eax
  440386:	jle    4403fe <strcmp@plt+0x3cc76>
  440388:	mov    ebx,eax
  44038a:	xor    r12d,r12d
  44038d:	nop    DWORD PTR [rax]
  440390:	mov    r14,rbp
  440393:	mov    rdi,rbp
  440396:	lea    rsi,[rip+0x103bf]        # 45075c <strcmp@plt+0x4cfd4>
  44039d:	mov    edx,r12d
  4403a0:	call   4031f0 <cfg_getnsec@plt>
  4403a5:	mov    rbp,rax
  4403a8:	mov    rdi,rax
  4403ab:	lea    rsi,[rip+0x576a]        # 445b1c <strcmp@plt+0x42394>
  4403b2:	call   4032c0 <cfg_getstr@plt>
  4403b7:	mov    r13,rax
  4403ba:	mov    rdi,rbp
  4403bd:	lea    rsi,[rip+0x2c05]        # 442fc9 <strcmp@plt+0x3f841>
  4403c4:	call   4032c0 <cfg_getstr@plt>
  4403c9:	mov    r15,rax
  4403cc:	mov    rdi,rbp
  4403cf:	lea    rsi,[rip+0x10392]        # 450768 <strcmp@plt+0x4cfe0>
  4403d6:	call   4032c0 <cfg_getstr@plt>
  4403db:	mov    rdi,QWORD PTR [rsp]
  4403df:	mov    rsi,r13
  4403e2:	mov    rdx,r15
  4403e5:	mov    rcx,rax
  4403e8:	call   406ed0 <strcmp@plt+0x3748>
  4403ed:	cmp    eax,0x1
  4403f0:	jne    440412 <strcmp@plt+0x3cc8a>
  4403f2:	add    r12d,0x1
  4403f6:	cmp    r12d,ebx
  4403f9:	mov    rbp,r14
  4403fc:	jl     440390 <strcmp@plt+0x3cc08>
  4403fe:	mov    rdi,QWORD PTR [rsp+0x18]
  440403:	call   436870 <strcmp@plt+0x330e8>
  440408:	mov    ebx,0x1
  44040d:	jmp    44030a <strcmp@plt+0x3cb82>
  440412:	xor    ebx,ebx
  440414:	jmp    44030a <strcmp@plt+0x3cb82>
  440419:	lea    rsi,[rip+0x10273]        # 450693 <strcmp@plt+0x4cf0b>
  440420:	xor    ebx,ebx
  440422:	mov    edi,0x2
  440427:	jmp    440303 <strcmp@plt+0x3cb7b>
  44042c:	lea    rsi,[rip+0x27b0]        # 442be3 <strcmp@plt+0x3f45b>
  440433:	mov    edi,0x2
  440438:	xor    eax,eax
  44043a:	call   42e800 <strcmp@plt+0x2b078>
  44043f:	mov    rax,QWORD PTR [rsp]
  440443:	mov    rdi,QWORD PTR [rax+0x68]
  440447:	call   431c10 <strcmp@plt+0x2e488>
  44044c:	jmp    44030a <strcmp@plt+0x3cb82>
  440451:	nop    WORD PTR cs:[rax+rax*1+0x0]
  44045b:	nop    DWORD PTR [rax+rax*1+0x0]
  440460:	push   rbp
  440461:	push   r15
  440463:	push   r14
  440465:	push   r13
  440467:	push   r12
  440469:	push   rbx
  44046a:	sub    rsp,0x28
  44046e:	mov    r12,rdi
  440471:	lea    rdi,[rip+0xfffffffffffe2b28]        # 422fa0 <strcmp@plt+0x1f818>
  440478:	call   436260 <strcmp@plt+0x32ad8>
  44047d:	mov    QWORD PTR [rsp+0x10],rax
  440482:	lea    rsi,[rip+0xeb91]        # 44f01a <strcmp@plt+0x4b892>
  440489:	mov    rdi,r12
  44048c:	call   403720 <cfg_size@plt>
  440491:	test   eax,eax
  440493:	mov    QWORD PTR [rsp+0x18],r12
  440498:	je     440756 <strcmp@plt+0x3cfce>
  44049e:	lea    r15,[rip+0xeb75]        # 44f01a <strcmp@plt+0x4b892>
  4404a5:	lea    r14,[rip+0x10af5]        # 450fa1 <strcmp@plt+0x4d819>
  4404ac:	xor    ebx,ebx
  4404ae:	xchg   ax,ax
  4404b0:	mov    rdi,r12
  4404b3:	mov    rsi,r15
  4404b6:	mov    edx,ebx
  4404b8:	call   4031f0 <cfg_getnsec@plt>
  4404bd:	mov    r13,rax
  4404c0:	mov    rdi,rax
  4404c3:	mov    rsi,r14
  4404c6:	call   4032c0 <cfg_getstr@plt>
  4404cb:	test   rax,rax
  4404ce:	je     4406d0 <strcmp@plt+0x3cf48>
  4404d4:	mov    QWORD PTR [rsp+0x20],rax
  4404d9:	mov    rdi,r13
  4404dc:	lea    rbp,[rip+0x10ac7]        # 450faa <strcmp@plt+0x4d822>
  4404e3:	mov    rsi,rbp
  4404e6:	call   403720 <cfg_size@plt>
  4404eb:	test   eax,eax
  4404ed:	je     4406f0 <strcmp@plt+0x3cf68>
  4404f3:	mov    DWORD PTR [rsp+0x8],ebx
  4404f7:	xor    eax,eax
  4404f9:	call   428200 <strcmp@plt+0x24a78>
  4404fe:	mov    QWORD PTR [rsp],rax
  440502:	mov    rdi,r13
  440505:	mov    rsi,rbp
  440508:	call   403720 <cfg_size@plt>
  44050d:	test   eax,eax
  44050f:	lea    rbx,[rip+0x5606]        # 445b1c <strcmp@plt+0x42394>
  440516:	je     440644 <strcmp@plt+0x3cebc>
  44051c:	mov    r12,rbp
  44051f:	xor    r15d,r15d
  440522:	nop    WORD PTR cs:[rax+rax*1+0x0]
  44052c:	nop    DWORD PTR [rax+0x0]
  440530:	mov    rdi,r13
  440533:	mov    rsi,r12
  440536:	mov    edx,r15d
  440539:	call   4031f0 <cfg_getnsec@plt>
  44053e:	mov    r14,rax
  440541:	mov    rdi,rax
  440544:	mov    rsi,rbx
  440547:	call   4032c0 <cfg_getstr@plt>
  44054c:	test   rax,rax
  44054f:	je     440705 <strcmp@plt+0x3cf7d>
  440555:	mov    edi,0x10
  44055a:	call   432070 <strcmp@plt+0x2e8e8>
  44055f:	mov    rbp,rax
  440562:	xor    eax,eax
  440564:	call   422f90 <strcmp@plt+0x1f808>
  440569:	mov    QWORD PTR [rbp+0x8],rax
  44056d:	mov    rdi,r14
  440570:	mov    rsi,rbx
  440573:	call   4032c0 <cfg_getstr@plt>
  440578:	mov    rsi,QWORD PTR [rbp+0x8]
  44057c:	mov    rdi,rax
  44057f:	call   423c40 <strcmp@plt+0x204b8>
  440584:	cmp    eax,0x1
  440587:	jne    440600 <strcmp@plt+0x3ce78>
  440589:	mov    rdi,r14
  44058c:	lea    rsi,[rip+0xeaaa]        # 44f03d <strcmp@plt+0x4b8b5>
  440593:	call   403350 <cfg_getbool@plt>
  440598:	test   eax,eax
  44059a:	setne  al
  44059d:	movzx  ecx,BYTE PTR [rbp+0x0]
  4405a1:	and    cl,0xfe
  4405a4:	or     cl,al
  4405a6:	mov    BYTE PTR [rbp+0x0],cl
  4405a9:	mov    rdi,r14
  4405ac:	lea    rsi,[rip+0x41d8]        # 44478b <strcmp@plt+0x41003>
  4405b3:	call   403350 <cfg_getbool@plt>
  4405b8:	test   eax,eax
  4405ba:	setne  al
  4405bd:	movzx  ecx,BYTE PTR [rbp+0x0]
  4405c1:	add    al,al
  4405c3:	and    cl,0xfd
  4405c6:	or     cl,al
  4405c8:	mov    BYTE PTR [rbp+0x0],cl
  4405cb:	mov    rdi,r14
  4405ce:	lea    rsi,[rip+0xea7a]        # 44f04f <strcmp@plt+0x4b8c7>
  4405d5:	call   403350 <cfg_getbool@plt>
  4405da:	test   eax,eax
  4405dc:	setne  al
  4405df:	movzx  ecx,BYTE PTR [rbp+0x0]
  4405e3:	shl    al,0x2
  4405e6:	and    cl,0xfb
  4405e9:	or     cl,al
  4405eb:	mov    BYTE PTR [rbp+0x0],cl
  4405ee:	mov    rax,QWORD PTR [rsp]
  4405f2:	mov    rsi,QWORD PTR [rax]
  4405f5:	mov    rdi,rbp
  4405f8:	call   42be30 <strcmp@plt+0x286a8>
  4405fd:	jmp    44062c <strcmp@plt+0x3cea4>
  4405ff:	nop
  440600:	mov    rdi,rbp
  440603:	call   428230 <strcmp@plt+0x24aa8>
  440608:	mov    rdi,r14
  44060b:	mov    rsi,rbx
  44060e:	call   4032c0 <cfg_getstr@plt>
  440613:	mov    rcx,rax
  440616:	mov    edi,0x3
  44061b:	xor    eax,eax
  44061d:	lea    rsi,[rip+0x10ca5]        # 4512c9 <strcmp@plt+0x4db41>
  440624:	mov    rdx,rcx
  440627:	call   42e800 <strcmp@plt+0x2b078>
  44062c:	add    r15d,0x1
  440630:	mov    rdi,r13
  440633:	mov    rsi,r12
  440636:	call   403720 <cfg_size@plt>
  44063b:	cmp    r15d,eax
  44063e:	jb     440530 <strcmp@plt+0x3cda8>
  440644:	mov    edi,0x3
  440649:	call   422ef0 <strcmp@plt+0x1f768>
  44064e:	mov    r14,rax
  440651:	mov    esi,0xa
  440656:	mov    rdi,rax
  440659:	call   423b40 <strcmp@plt+0x203b8>
  44065e:	mov    rdi,r14
  440661:	mov    rsi,QWORD PTR [rsp]
  440665:	call   423b20 <strcmp@plt+0x20398>
  44066a:	lea    rax,[rip+0x2473f]        # 464db0 <strcmp@plt+0x61628>
  440671:	cmp    DWORD PTR [rax],0x0
  440674:	mov    r12,QWORD PTR [rsp+0x18]
  440679:	lea    r15,[rip+0xe99a]        # 44f01a <strcmp@plt+0x4b892>
  440680:	mov    ebx,DWORD PTR [rsp+0x8]
  440684:	jle    4406a7 <strcmp@plt+0x3cf1f>
  440686:	mov    rdi,r14
  440689:	call   423130 <strcmp@plt+0x1f9a8>
  44068e:	mov    rcx,rax
  440691:	mov    edi,0x5
  440696:	xor    eax,eax
  440698:	lea    rsi,[rip+0x10c59]        # 4512f8 <strcmp@plt+0x4db70>
  44069f:	mov    rdx,rcx
  4406a2:	call   42e800 <strcmp@plt+0x2b078>
  4406a7:	mov    rdi,QWORD PTR [rsp+0x20]
  4406ac:	call   403700 <strdup@plt>
  4406b1:	mov    rdi,QWORD PTR [rsp+0x10]
  4406b6:	mov    rsi,rax
  4406b9:	mov    rdx,r14
  4406bc:	call   4362a0 <strcmp@plt+0x32b18>
  4406c1:	lea    r14,[rip+0x108d9]        # 450fa1 <strcmp@plt+0x4d819>
  4406c8:	jmp    440740 <strcmp@plt+0x3cfb8>
  4406ca:	nop    WORD PTR [rax+rax*1+0x0]
  4406d0:	mov    edi,0x3
  4406d5:	xor    eax,eax
  4406d7:	lea    rsi,[rip+0x10af8]        # 4511d6 <strcmp@plt+0x4da4e>
  4406de:	call   42e800 <strcmp@plt+0x2b078>
  4406e3:	jmp    440740 <strcmp@plt+0x3cfb8>
  4406e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4406ef:	nop
  4406f0:	mov    edi,0x3
  4406f5:	xor    eax,eax
  4406f7:	lea    rsi,[rip+0x10b27]        # 451225 <strcmp@plt+0x4da9d>
  4406fe:	call   42e800 <strcmp@plt+0x2b078>
  440703:	jmp    440740 <strcmp@plt+0x3cfb8>
  440705:	mov    edi,0x3
  44070a:	xor    eax,eax
  44070c:	lea    rsi,[rip+0x10b68]        # 45127b <strcmp@plt+0x4daf3>
  440713:	call   42e800 <strcmp@plt+0x2b078>
  440718:	mov    rdi,QWORD PTR [rsp]
  44071c:	call   424b10 <strcmp@plt+0x21388>
  440721:	mov    r12,QWORD PTR [rsp+0x18]
  440726:	lea    r15,[rip+0xe8ed]        # 44f01a <strcmp@plt+0x4b892>
  44072d:	lea    r14,[rip+0x1086d]        # 450fa1 <strcmp@plt+0x4d819>
  440734:	mov    ebx,DWORD PTR [rsp+0x8]
  440738:	nop    DWORD PTR [rax+rax*1+0x0]
  440740:	add    ebx,0x1
  440743:	mov    rdi,r12
  440746:	mov    rsi,r15
  440749:	call   403720 <cfg_size@plt>
  44074e:	cmp    ebx,eax
  440750:	jb     4404b0 <strcmp@plt+0x3cd28>
  440756:	lea    rsi,[rip+0x1091c]        # 451079 <strcmp@plt+0x4d8f1>
  44075d:	mov    rdi,r12
  440760:	call   403720 <cfg_size@plt>
  440765:	test   eax,eax
  440767:	je     440918 <strcmp@plt+0x3d190>
  44076d:	lea    rbx,[rip+0x10905]        # 451079 <strcmp@plt+0x4d8f1>
  440774:	xor    ebp,ebp
  440776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  440780:	mov    rdi,r12
  440783:	mov    rsi,rbx
  440786:	mov    DWORD PTR [rsp],ebp
  440789:	mov    edx,ebp
  44078b:	call   4031f0 <cfg_getnsec@plt>
  440790:	mov    r14,rax
  440793:	mov    rdi,rax
  440796:	lea    rsi,[rip+0x1081c]        # 450fb9 <strcmp@plt+0x4d831>
  44079d:	call   4032c0 <cfg_getstr@plt>
  4407a2:	mov    QWORD PTR [rsp+0x8],rax
  4407a7:	mov    edi,0x3
  4407ac:	call   422ef0 <strcmp@plt+0x1f768>
  4407b1:	mov    esi,0xd
  4407b6:	mov    QWORD PTR [rsp+0x20],rax
  4407bb:	mov    rdi,rax
  4407be:	call   423b40 <strcmp@plt+0x203b8>
  4407c3:	xor    eax,eax
  4407c5:	call   4283a0 <strcmp@plt+0x24c18>
  4407ca:	mov    rbx,rax
  4407cd:	mov    rdi,r14
  4407d0:	lea    rbp,[rip+0x107eb]        # 450fc2 <strcmp@plt+0x4d83a>
  4407d7:	mov    rsi,rbp
  4407da:	call   403720 <cfg_size@plt>
  4407df:	test   eax,eax
  4407e1:	je     44089c <strcmp@plt+0x3d114>
  4407e7:	xor    r12d,r12d
  4407ea:	nop    WORD PTR [rax+rax*1+0x0]
  4407f0:	mov    rdi,r14
  4407f3:	mov    rsi,rbp
  4407f6:	mov    edx,r12d
  4407f9:	call   4031f0 <cfg_getnsec@plt>
  4407fe:	mov    r13,rax
  440801:	xor    eax,eax
  440803:	call   428430 <strcmp@plt+0x24ca8>
  440808:	mov    r15,rax
  44080b:	mov    rdi,r13
  44080e:	lea    rsi,[rip+0x5307]        # 445b1c <strcmp@plt+0x42394>
  440815:	call   4032c0 <cfg_getstr@plt>
  44081a:	mov    rsi,QWORD PTR [r15]
  44081d:	mov    rdi,rax
  440820:	call   423c40 <strcmp@plt+0x204b8>
  440825:	cmp    eax,0x1
  440828:	je     440866 <strcmp@plt+0x3d0de>
  44082a:	mov    rdi,r15
  44082d:	call   4283d0 <strcmp@plt+0x24c48>
  440832:	lea    rax,[rip+0x24577]        # 464db0 <strcmp@plt+0x61628>
  440839:	cmp    DWORD PTR [rax],0x0
  44083c:	jle    440866 <strcmp@plt+0x3d0de>
  44083e:	mov    rdi,r13
  440841:	lea    rsi,[rip+0x52d4]        # 445b1c <strcmp@plt+0x42394>
  440848:	call   4032c0 <cfg_getstr@plt>
  44084d:	mov    rcx,rax
  440850:	mov    edi,0x5
  440855:	xor    eax,eax
  440857:	lea    rsi,[rip+0x10acf]        # 45132d <strcmp@plt+0x4dba5>
  44085e:	mov    rdx,rcx
  440861:	call   42e800 <strcmp@plt+0x2b078>
  440866:	mov    rdi,r13
  440869:	lea    rsi,[rip+0x10743]        # 450fb3 <strcmp@plt+0x4d82b>
  440870:	call   4031b0 <cfg_getint@plt>
  440875:	mov    BYTE PTR [r15+0x8],al
  440879:	mov    rsi,QWORD PTR [rbx]
  44087c:	mov    rdi,r15
  44087f:	call   42be30 <strcmp@plt+0x286a8>
  440884:	add    r12d,0x1
  440888:	mov    rdi,r14
  44088b:	mov    rsi,rbp
  44088e:	call   403720 <cfg_size@plt>
  440893:	cmp    r12d,eax
  440896:	jb     4407f0 <strcmp@plt+0x3d068>
  44089c:	mov    rbp,QWORD PTR [rsp+0x20]
  4408a1:	mov    rdi,rbp
  4408a4:	mov    rsi,rbx
  4408a7:	call   423b20 <strcmp@plt+0x20398>
  4408ac:	lea    rax,[rip+0x244fd]        # 464db0 <strcmp@plt+0x61628>
  4408b3:	cmp    DWORD PTR [rax],0x0
  4408b6:	jle    4408d9 <strcmp@plt+0x3d151>
  4408b8:	mov    rdi,rbp
  4408bb:	call   423130 <strcmp@plt+0x1f9a8>
  4408c0:	mov    rcx,rax
  4408c3:	mov    edi,0x5
  4408c8:	xor    eax,eax
  4408ca:	lea    rsi,[rip+0x10a87]        # 451358 <strcmp@plt+0x4dbd0>
  4408d1:	mov    rdx,rcx
  4408d4:	call   42e800 <strcmp@plt+0x2b078>
  4408d9:	mov    rdi,QWORD PTR [rsp+0x8]
  4408de:	call   403700 <strdup@plt>
  4408e3:	mov    rdi,QWORD PTR [rsp+0x10]
  4408e8:	mov    rsi,rax
  4408eb:	mov    rdx,rbp
  4408ee:	call   4362a0 <strcmp@plt+0x32b18>
  4408f3:	mov    ebp,DWORD PTR [rsp]
  4408f6:	add    ebp,0x1
  4408f9:	mov    r12,QWORD PTR [rsp+0x18]
  4408fe:	mov    rdi,r12
  440901:	lea    rbx,[rip+0x10771]        # 451079 <strcmp@plt+0x4d8f1>
  440908:	mov    rsi,rbx
  44090b:	call   403720 <cfg_size@plt>
  440910:	cmp    ebp,eax
  440912:	jb     440780 <strcmp@plt+0x3cff8>
  440918:	lea    rsi,[rip+0x1076b]        # 45108a <strcmp@plt+0x4d902>
  44091f:	mov    rdi,r12
  440922:	call   403720 <cfg_size@plt>
  440927:	test   eax,eax
  440929:	je     440a74 <strcmp@plt+0x3d2ec>
  44092f:	lea    rbx,[rip+0x10754]        # 45108a <strcmp@plt+0x4d902>
  440936:	xor    r15d,r15d
  440939:	nop    DWORD PTR [rax+0x0]
  440940:	mov    rdi,r12
  440943:	mov    rsi,rbx
  440946:	mov    edx,r15d
  440949:	call   4031f0 <cfg_getnsec@plt>
  44094e:	mov    rbp,rax
  440951:	mov    rdi,rax
  440954:	lea    rsi,[rip+0x10670]        # 450fcb <strcmp@plt+0x4d843>
  44095b:	call   4032c0 <cfg_getstr@plt>
  440960:	mov    r13,rax
  440963:	mov    edi,0x3
  440968:	call   422ef0 <strcmp@plt+0x1f768>
  44096d:	mov    r12,rax
  440970:	mov    esi,0x9
  440975:	mov    rdi,rax
  440978:	call   423b40 <strcmp@plt+0x203b8>
  44097d:	xor    eax,eax
  44097f:	call   427400 <strcmp@plt+0x23c78>
  440984:	mov    r14,rax
  440987:	mov    rdi,rbp
  44098a:	lea    rsi,[rip+0x10647]        # 450fd8 <strcmp@plt+0x4d850>
  440991:	call   4032c0 <cfg_getstr@plt>
  440996:	mov    rsi,QWORD PTR [r14+0x8]
  44099a:	mov    rdi,rax
  44099d:	call   423c40 <strcmp@plt+0x204b8>
  4409a2:	mov    rdi,rbp
  4409a5:	lea    rsi,[rip+0x10633]        # 450fdf <strcmp@plt+0x4d857>
  4409ac:	call   4031b0 <cfg_getint@plt>
  4409b1:	mov    BYTE PTR [r14],al
  4409b4:	mov    rdi,rbp
  4409b7:	lea    rsi,[rip+0x10634]        # 450ff2 <strcmp@plt+0x4d86a>
  4409be:	call   4032c0 <cfg_getstr@plt>
  4409c3:	mov    rsi,QWORD PTR [r14+0x10]
  4409c7:	mov    rdi,rax
  4409ca:	call   423c40 <strcmp@plt+0x204b8>
  4409cf:	mov    rdi,rbp
  4409d2:	lea    rsi,[rip+0x1061f]        # 450ff8 <strcmp@plt+0x4d870>
  4409d9:	call   4031b0 <cfg_getint@plt>
  4409de:	mov    BYTE PTR [r14],al
  4409e1:	mov    rdi,rbp
  4409e4:	lea    rsi,[rip+0xb9b7]        # 44c3a2 <strcmp@plt+0x48c1a>
  4409eb:	call   4031b0 <cfg_getint@plt>
  4409f0:	mov    DWORD PTR [r14+0x4],eax
  4409f4:	mov    rdi,r12
  4409f7:	mov    rsi,r14
  4409fa:	call   423b20 <strcmp@plt+0x20398>
  4409ff:	lea    rax,[rip+0x243aa]        # 464db0 <strcmp@plt+0x61628>
  440a06:	cmp    DWORD PTR [rax],0x0
  440a09:	jle    440a2c <strcmp@plt+0x3d2a4>
  440a0b:	mov    rdi,r12
  440a0e:	call   423130 <strcmp@plt+0x1f9a8>
  440a13:	mov    rcx,rax
  440a16:	mov    edi,0x5
  440a1b:	xor    eax,eax
  440a1d:	lea    rsi,[rip+0x10964]        # 451388 <strcmp@plt+0x4dc00>
  440a24:	mov    rdx,rcx
  440a27:	call   42e800 <strcmp@plt+0x2b078>
  440a2c:	mov    rdi,r13
  440a2f:	call   403700 <strdup@plt>
  440a34:	mov    rdi,QWORD PTR [rsp+0x10]
  440a39:	mov    rsi,rax
  440a3c:	mov    rdx,r12
  440a3f:	call   4362a0 <strcmp@plt+0x32b18>
  440a44:	add    r15d,0x1
  440a48:	mov    r12,QWORD PTR [rsp+0x18]
  440a4d:	mov    rdi,r12
  440a50:	mov    rsi,rbx
  440a53:	call   403720 <cfg_size@plt>
  440a58:	cmp    r15d,eax
  440a5b:	jb     440940 <strcmp@plt+0x3d1b8>
  440a61:	lea    rsi,[rip+0x1094e]        # 4513b6 <strcmp@plt+0x4dc2e>
  440a68:	mov    edi,0x4
  440a6d:	xor    eax,eax
  440a6f:	call   42e800 <strcmp@plt+0x2b078>
  440a74:	mov    rax,QWORD PTR [rsp+0x10]
  440a79:	add    rsp,0x28
  440a7d:	pop    rbx
  440a7e:	pop    r12
  440a80:	pop    r13
  440a82:	pop    r14
  440a84:	pop    r15
  440a86:	pop    rbp
  440a87:	ret    
  440a88:	nop    DWORD PTR [rax+rax*1+0x0]
  440a90:	push   rbp
  440a91:	push   r15
  440a93:	push   r14
  440a95:	push   r12
  440a97:	push   rbx
  440a98:	mov    r12,rdi
  440a9b:	lea    rbx,[rip+0x2faf6]        # 470598 <strcmp@plt+0x6ce10>
  440aa2:	xor    edi,edi
  440aa4:	mov    rsi,rbx
  440aa7:	call   407a10 <strcmp@plt+0x4288>
  440aac:	cmp    eax,0x1
  440aaf:	je     440acb <strcmp@plt+0x3d343>
  440ab1:	lea    rsi,[rip+0xfcbe]        # 450776 <strcmp@plt+0x4cfee>
  440ab8:	mov    edi,0x1
  440abd:	xor    eax,eax
  440abf:	call   42e800 <strcmp@plt+0x2b078>
  440ac4:	xor    eax,eax
  440ac6:	call   43b420 <strcmp@plt+0x37c98>
  440acb:	mov    rdi,r12
  440ace:	call   440460 <strcmp@plt+0x3ccd8>
  440ad3:	mov    r14,rax
  440ad6:	mov    rdi,QWORD PTR [rbx]
  440ad9:	call   40e9a0 <strcmp@plt+0xb218>
  440ade:	mov    rbx,rax
  440ae1:	mov    r15,rax
  440ae4:	lea    rsi,[rip+0xfcab]        # 450796 <strcmp@plt+0x4d00e>
  440aeb:	mov    rdi,r12
  440aee:	call   403350 <cfg_getbool@plt>
  440af3:	xor    ecx,ecx
  440af5:	test   eax,eax
  440af7:	setne  cl
  440afa:	mov    DWORD PTR [rbx+0x80],ecx
  440b00:	je     440b2e <strcmp@plt+0x3d3a6>
  440b02:	lea    rax,[rip+0x2f9f7]        # 470500 <strcmp@plt+0x6cd78>
  440b09:	mov    DWORD PTR [rax],0x2
  440b0f:	lea    rax,[rip+0x2429a]        # 464db0 <strcmp@plt+0x61628>
  440b16:	cmp    DWORD PTR [rax],0x0
  440b19:	jle    440b2e <strcmp@plt+0x3d3a6>
  440b1b:	lea    rsi,[rip+0xfc8a]        # 4507ac <strcmp@plt+0x4d024>
  440b22:	mov    edi,0x5
  440b27:	xor    eax,eax
  440b29:	call   42e800 <strcmp@plt+0x2b078>
  440b2e:	add    rbx,0x18
  440b32:	mov    rdi,r12
  440b35:	mov    rsi,r15
  440b38:	mov    rdx,rbx
  440b3b:	mov    rcx,r14
  440b3e:	call   43fd60 <strcmp@plt+0x3c5d8>
  440b43:	xor    ebp,ebp
  440b45:	cmp    eax,0x1
  440b48:	jne    440bd2 <strcmp@plt+0x3d44a>
  440b4e:	mov    rdi,r12
  440b51:	mov    rsi,r15
  440b54:	call   43f670 <strcmp@plt+0x3bee8>
  440b59:	mov    rdi,r12
  440b5c:	mov    rsi,r15
  440b5f:	call   43f7b0 <strcmp@plt+0x3c028>
  440b64:	cmp    eax,0x1
  440b67:	jne    440bd2 <strcmp@plt+0x3d44a>
  440b69:	mov    rdi,r12
  440b6c:	mov    rsi,r15
  440b6f:	call   43fa80 <strcmp@plt+0x3c2f8>
  440b74:	mov    rdi,r12
  440b77:	mov    rsi,rbx
  440b7a:	call   43fb40 <strcmp@plt+0x3c3b8>
  440b7f:	cmp    eax,0x1
  440b82:	jne    440bd2 <strcmp@plt+0x3d44a>
  440b84:	mov    rdi,r12
  440b87:	mov    rsi,r15
  440b8a:	mov    rdx,r14
  440b8d:	call   43fc20 <strcmp@plt+0x3c498>
  440b92:	cmp    eax,0x1
  440b95:	jne    440bd2 <strcmp@plt+0x3d44a>
  440b97:	mov    rdi,r15
  440b9a:	call   407030 <strcmp@plt+0x38a8>
  440b9f:	cmp    eax,0x1
  440ba2:	jne    440bbd <strcmp@plt+0x3d435>
  440ba4:	xor    esi,esi
  440ba6:	mov    rdi,r15
  440ba9:	call   407020 <strcmp@plt+0x3898>
  440bae:	mov    rdi,r14
  440bb1:	call   436870 <strcmp@plt+0x330e8>
  440bb6:	mov    ebp,0x1
  440bbb:	jmp    440bd2 <strcmp@plt+0x3d44a>
  440bbd:	lea    rsi,[rip+0xfc1c]        # 4507e0 <strcmp@plt+0x4d058>
  440bc4:	xor    ebp,ebp
  440bc6:	mov    edi,0x2
  440bcb:	xor    eax,eax
  440bcd:	call   42e800 <strcmp@plt+0x2b078>
  440bd2:	mov    eax,ebp
  440bd4:	pop    rbx
  440bd5:	pop    r12
  440bd7:	pop    r14
  440bd9:	pop    r15
  440bdb:	pop    rbp
  440bdc:	ret    
  440bdd:	nop    DWORD PTR [rax]
  440be0:	push   rbp
  440be1:	push   r15
  440be3:	push   r14
  440be5:	push   r12
  440be7:	push   rbx
  440be8:	mov    r12,rdi
  440beb:	lea    rbx,[rip+0x2f9a6]        # 470598 <strcmp@plt+0x6ce10>
  440bf2:	mov    edi,0x3
  440bf7:	mov    rsi,rbx
  440bfa:	call   407a10 <strcmp@plt+0x4288>
  440bff:	cmp    eax,0x1
  440c02:	je     440c1e <strcmp@plt+0x3d496>
  440c04:	lea    rsi,[rip+0xfbef]        # 4507fa <strcmp@plt+0x4d072>
  440c0b:	mov    edi,0x1
  440c10:	xor    eax,eax
  440c12:	call   42e800 <strcmp@plt+0x2b078>
  440c17:	xor    eax,eax
  440c19:	call   43b420 <strcmp@plt+0x37c98>
  440c1e:	mov    rdi,r12
  440c21:	call   440460 <strcmp@plt+0x3ccd8>
  440c26:	mov    r14,rax
  440c29:	mov    rdi,QWORD PTR [rbx]
  440c2c:	call   40e9a0 <strcmp@plt+0xb218>
  440c31:	mov    rbx,rax
  440c34:	mov    r15,rax
  440c37:	lea    rsi,[rip+0xfb58]        # 450796 <strcmp@plt+0x4d00e>
  440c3e:	mov    rdi,r12
  440c41:	call   403350 <cfg_getbool@plt>
  440c46:	xor    ecx,ecx
  440c48:	test   eax,eax
  440c4a:	setne  cl
  440c4d:	mov    DWORD PTR [rbx+0x80],ecx
  440c53:	je     440c81 <strcmp@plt+0x3d4f9>
  440c55:	lea    rax,[rip+0x2f8a4]        # 470500 <strcmp@plt+0x6cd78>
  440c5c:	mov    DWORD PTR [rax],0x2
  440c62:	lea    rax,[rip+0x24147]        # 464db0 <strcmp@plt+0x61628>
  440c69:	cmp    DWORD PTR [rax],0x0
  440c6c:	jle    440c81 <strcmp@plt+0x3d4f9>
  440c6e:	lea    rsi,[rip+0xfb37]        # 4507ac <strcmp@plt+0x4d024>
  440c75:	mov    edi,0x5
  440c7a:	xor    eax,eax
  440c7c:	call   42e800 <strcmp@plt+0x2b078>
  440c81:	add    rbx,0x18
  440c85:	mov    rdi,r12
  440c88:	mov    rsi,r15
  440c8b:	mov    rdx,rbx
  440c8e:	mov    rcx,r14
  440c91:	call   43fd60 <strcmp@plt+0x3c5d8>
  440c96:	xor    ebp,ebp
  440c98:	cmp    eax,0x1
  440c9b:	jne    440d37 <strcmp@plt+0x3d5af>
  440ca1:	mov    rdi,r12
  440ca4:	mov    rsi,r15
  440ca7:	call   43f670 <strcmp@plt+0x3bee8>
  440cac:	mov    rdi,r12
  440caf:	mov    rsi,r15
  440cb2:	call   43f7b0 <strcmp@plt+0x3c028>
  440cb7:	cmp    eax,0x1
  440cba:	jne    440d37 <strcmp@plt+0x3d5af>
  440cbc:	mov    rdi,r12
  440cbf:	mov    rsi,r15
  440cc2:	call   43fa80 <strcmp@plt+0x3c2f8>
  440cc7:	mov    rdi,r12
  440cca:	mov    rsi,rbx
  440ccd:	call   43fb40 <strcmp@plt+0x3c3b8>
  440cd2:	cmp    eax,0x1
  440cd5:	jne    440d37 <strcmp@plt+0x3d5af>
  440cd7:	mov    rax,QWORD PTR [r15+0x60]
  440cdb:	cmp    DWORD PTR [rax+0x18],0x0
  440cdf:	jne    440ce9 <strcmp@plt+0x3d561>
  440ce1:	mov    rdi,rbx
  440ce4:	call   4072d0 <strcmp@plt+0x3b48>
  440ce9:	mov    rdi,r12
  440cec:	mov    rsi,r15
  440cef:	mov    rdx,r14
  440cf2:	call   43fc20 <strcmp@plt+0x3c498>
  440cf7:	cmp    eax,0x1
  440cfa:	jne    440d37 <strcmp@plt+0x3d5af>
  440cfc:	mov    rdi,r15
  440cff:	call   407030 <strcmp@plt+0x38a8>
  440d04:	cmp    eax,0x1
  440d07:	jne    440d22 <strcmp@plt+0x3d59a>
  440d09:	xor    esi,esi
  440d0b:	mov    rdi,r15
  440d0e:	call   407020 <strcmp@plt+0x3898>
  440d13:	mov    rdi,r14
  440d16:	call   436870 <strcmp@plt+0x330e8>
  440d1b:	mov    ebp,0x1
  440d20:	jmp    440d37 <strcmp@plt+0x3d5af>
  440d22:	lea    rsi,[rip+0xfab7]        # 4507e0 <strcmp@plt+0x4d058>
  440d29:	xor    ebp,ebp
  440d2b:	mov    edi,0x2
  440d30:	xor    eax,eax
  440d32:	call   42e800 <strcmp@plt+0x2b078>
  440d37:	mov    eax,ebp
  440d39:	pop    rbx
  440d3a:	pop    r12
  440d3c:	pop    r14
  440d3e:	pop    r15
  440d40:	pop    rbp
  440d41:	ret    
  440d42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  440d4c:	nop    DWORD PTR [rax+0x0]
  440d50:	push   rbp
  440d51:	push   r15
  440d53:	push   r14
  440d55:	push   r13
  440d57:	push   r12
  440d59:	push   rbx
  440d5a:	sub    rsp,0x48
  440d5e:	mov    r13,rdi
  440d61:	lea    rbx,[rip+0x2f830]        # 470598 <strcmp@plt+0x6ce10>
  440d68:	mov    edi,0x1
  440d6d:	mov    rsi,rbx
  440d70:	call   407a10 <strcmp@plt+0x4288>
  440d75:	cmp    eax,0x1
  440d78:	je     440d94 <strcmp@plt+0x3d60c>
  440d7a:	lea    rsi,[rip+0xfaa1]        # 450822 <strcmp@plt+0x4d09a>
  440d81:	mov    edi,0x1
  440d86:	xor    eax,eax
  440d88:	call   42e800 <strcmp@plt+0x2b078>
  440d8d:	xor    eax,eax
  440d8f:	call   43b420 <strcmp@plt+0x37c98>
  440d94:	mov    rdi,QWORD PTR [rbx]
  440d97:	call   411320 <strcmp@plt+0xdb98>
  440d9c:	mov    r14,rax
  440d9f:	mov    rdi,r13
  440da2:	call   440460 <strcmp@plt+0x3ccd8>
  440da7:	mov    QWORD PTR [rsp+0x20],rax
  440dac:	lea    rsi,[rip+0xfa8e]        # 450841 <strcmp@plt+0x4d0b9>
  440db3:	mov    rdi,r13
  440db6:	call   4032c0 <cfg_getstr@plt>
  440dbb:	test   rax,rax
  440dbe:	je     441395 <strcmp@plt+0x3dc0d>
  440dc4:	mov    rdi,rax
  440dc7:	call   43ad30 <strcmp@plt+0x375a8>
  440dcc:	test   rax,rax
  440dcf:	je     44139e <strcmp@plt+0x3dc16>
  440dd5:	mov    rbx,rax
  440dd8:	mov    QWORD PTR [rsp+0x18],r14
  440ddd:	mov    esi,0x2
  440de2:	mov    rdi,rax
  440de5:	call   43a8b0 <strcmp@plt+0x37128>
  440dea:	mov    esi,0xa
  440def:	mov    rdi,rbx
  440df2:	call   43a8b0 <strcmp@plt+0x37128>
  440df7:	lea    rsi,[rip+0xfad6]        # 4508d4 <strcmp@plt+0x4d14c>
  440dfe:	mov    rdi,r13
  440e01:	call   403720 <cfg_size@plt>
  440e06:	test   eax,eax
  440e08:	mov    QWORD PTR [rsp+0x8],r13
  440e0d:	je     44108d <strcmp@plt+0x3d905>
  440e13:	lea    rbx,[rip+0xfaba]        # 4508d4 <strcmp@plt+0x4d14c>
  440e1a:	lea    r14,[rip+0xf2cc]        # 4500ed <strcmp@plt+0x4c965>
  440e21:	lea    r15,[rip+0x21a1]        # 442fc9 <strcmp@plt+0x3f841>
  440e28:	xor    ebp,ebp
  440e2a:	nop    WORD PTR [rax+rax*1+0x0]
  440e30:	mov    rdi,r13
  440e33:	mov    rsi,rbx
  440e36:	mov    edx,ebp
  440e38:	call   4031f0 <cfg_getnsec@plt>
  440e3d:	mov    r12,rax
  440e40:	mov    rdi,rax
  440e43:	mov    rsi,r14
  440e46:	call   4032c0 <cfg_getstr@plt>
  440e4b:	test   rax,rax
  440e4e:	je     4413a7 <strcmp@plt+0x3dc1f>
  440e54:	mov    rdi,r12
  440e57:	mov    rsi,r15
  440e5a:	call   4032c0 <cfg_getstr@plt>
  440e5f:	test   rax,rax
  440e62:	je     4413a7 <strcmp@plt+0x3dc1f>
  440e68:	mov    DWORD PTR [rsp+0x14],ebp
  440e6c:	call   42bbd0 <strcmp@plt+0x28448>
  440e71:	mov    r13,rax
  440e74:	mov    rdi,r12
  440e77:	lea    rsi,[rip+0xfaab]        # 450929 <strcmp@plt+0x4d1a1>
  440e7e:	call   403720 <cfg_size@plt>
  440e83:	test   eax,eax
  440e85:	jle    440eb8 <strcmp@plt+0x3d730>
  440e87:	mov    ebx,eax
  440e89:	xor    ebp,ebp
  440e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  440e90:	mov    rdi,r12
  440e93:	lea    rsi,[rip+0xfa8f]        # 450929 <strcmp@plt+0x4d1a1>
  440e9a:	mov    edx,ebp
  440e9c:	call   403120 <cfg_getnstr@plt>
  440ea1:	test   rax,rax
  440ea4:	je     440eb1 <strcmp@plt+0x3d729>
  440ea6:	mov    rdi,rax
  440ea9:	mov    rsi,r13
  440eac:	call   42be30 <strcmp@plt+0x286a8>
  440eb1:	add    ebp,0x1
  440eb4:	cmp    ebx,ebp
  440eb6:	jne    440e90 <strcmp@plt+0x3d708>
  440eb8:	mov    rdi,r12
  440ebb:	mov    rsi,r14
  440ebe:	call   4032c0 <cfg_getstr@plt>
  440ec3:	mov    QWORD PTR [rsp+0x40],rax
  440ec8:	mov    rdi,r12
  440ecb:	lea    rsi,[rip+0xb4d0]        # 44c3a2 <strcmp@plt+0x48c1a>
  440ed2:	call   4031b0 <cfg_getint@plt>
  440ed7:	mov    QWORD PTR [rsp+0x38],rax
  440edc:	mov    rdi,r12
  440edf:	lea    rsi,[rip+0xe2d3]        # 44f1b9 <strcmp@plt+0x4ba31>
  440ee6:	call   4031b0 <cfg_getint@plt>
  440eeb:	mov    QWORD PTR [rsp+0x30],rax
  440ef0:	mov    rdi,r12
  440ef3:	mov    rsi,r15
  440ef6:	call   4032c0 <cfg_getstr@plt>
  440efb:	mov    QWORD PTR [rsp+0x28],rax
  440f00:	mov    rdi,r12
  440f03:	lea    rsi,[rip+0xfa2c]        # 450936 <strcmp@plt+0x4d1ae>
  440f0a:	call   403350 <cfg_getbool@plt>
  440f0f:	xor    ebx,ebx
  440f11:	test   eax,eax
  440f13:	setne  bl
  440f16:	mov    rdi,r12
  440f19:	lea    rsi,[rip+0xe75d]        # 44f67d <strcmp@plt+0x4bef5>
  440f20:	call   403350 <cfg_getbool@plt>
  440f25:	xor    r14d,r14d
  440f28:	test   eax,eax
  440f2a:	setne  r14b
  440f2e:	mov    rdi,r12
  440f31:	lea    rsi,[rip+0xfa14]        # 45094c <strcmp@plt+0x4d1c4>
  440f38:	call   403350 <cfg_getbool@plt>
  440f3d:	xor    r15d,r15d
  440f40:	test   eax,eax
  440f42:	setne  r15b
  440f46:	mov    rdi,r12
  440f49:	lea    rsi,[rip+0xfa02]        # 450952 <strcmp@plt+0x4d1ca>
  440f50:	call   403350 <cfg_getbool@plt>
  440f55:	xor    ebp,ebp
  440f57:	test   eax,eax
  440f59:	setne  bpl
  440f5d:	sub    rsp,0x8
  440f61:	mov    rdi,QWORD PTR [rsp+0x20]
  440f66:	mov    rsi,QWORD PTR [rsp+0x48]
  440f6b:	mov    rdx,QWORD PTR [rsp+0x40]
  440f70:	mov    rcx,QWORD PTR [rsp+0x38]
  440f75:	mov    r8,QWORD PTR [rsp+0x30]
  440f7a:	mov    r9d,ebx
  440f7d:	push   QWORD PTR [rsp+0x28]
  440f81:	push   r13
  440f83:	push   rbp
  440f84:	push   r15
  440f86:	push   r14
  440f88:	call   405850 <strcmp@plt+0x20c8>
  440f8d:	add    rsp,0x30
  440f91:	mov    rbx,rax
  440f94:	mov    rdi,r13
  440f97:	call   42c250 <strcmp@plt+0x28ac8>
  440f9c:	test   rbx,rbx
  440f9f:	je     441000 <strcmp@plt+0x3d878>
  440fa1:	lea    r14,[rip+0xf145]        # 4500ed <strcmp@plt+0x4c965>
  440fa8:	mov    rbp,QWORD PTR [rsp+0x18]
  440fad:	mov    rdi,QWORD PTR [rbp+0x18]
  440fb1:	mov    rsi,QWORD PTR [rbx]
  440fb4:	call   42fcb0 <strcmp@plt+0x2c528>
  440fb9:	lea    rcx,[rip+0x23df0]        # 464db0 <strcmp@plt+0x61628>
  440fc0:	mov    ecx,DWORD PTR [rcx]
  440fc2:	test   rax,rax
  440fc5:	je     441030 <strcmp@plt+0x3d8a8>
  440fc7:	test   ecx,ecx
  440fc9:	jle    440fec <strcmp@plt+0x3d864>
  440fcb:	mov    rdi,QWORD PTR [rbx]
  440fce:	call   423130 <strcmp@plt+0x1f9a8>
  440fd3:	mov    rcx,rax
  440fd6:	mov    edi,0x5
  440fdb:	xor    eax,eax
  440fdd:	lea    rsi,[rip+0xf984]        # 450968 <strcmp@plt+0x4d1e0>
  440fe4:	mov    rdx,rcx
  440fe7:	call   42e800 <strcmp@plt+0x2b078>
  440fec:	mov    rdi,rbx
  440fef:	call   42e790 <strcmp@plt+0x2b008>
  440ff4:	jmp    441060 <strcmp@plt+0x3d8d8>
  440ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  441000:	mov    rdi,r12
  441003:	lea    r14,[rip+0xf0e3]        # 4500ed <strcmp@plt+0x4c965>
  44100a:	mov    rsi,r14
  44100d:	call   4032c0 <cfg_getstr@plt>
  441012:	mov    rcx,rax
  441015:	mov    edi,0x2
  44101a:	xor    eax,eax
  44101c:	lea    rsi,[rip+0xf9b8]        # 4509db <strcmp@plt+0x4d253>
  441023:	mov    rdx,rcx
  441026:	call   42e800 <strcmp@plt+0x2b078>
  44102b:	jmp    441060 <strcmp@plt+0x3d8d8>
  44102d:	nop    DWORD PTR [rax]
  441030:	test   ecx,ecx
  441032:	jle    441055 <strcmp@plt+0x3d8cd>
  441034:	mov    rdi,QWORD PTR [rbx]
  441037:	call   423130 <strcmp@plt+0x1f9a8>
  44103c:	mov    rcx,rax
  44103f:	mov    edi,0x5
  441044:	xor    eax,eax
  441046:	lea    rsi,[rip+0xf958]        # 4509a5 <strcmp@plt+0x4d21d>
  44104d:	mov    rdx,rcx
  441050:	call   42e800 <strcmp@plt+0x2b078>
  441055:	mov    rdi,rbp
  441058:	mov    rsi,rbx
  44105b:	call   410be0 <strcmp@plt+0xd458>
  441060:	mov    r13,QWORD PTR [rsp+0x8]
  441065:	lea    rbx,[rip+0xf868]        # 4508d4 <strcmp@plt+0x4d14c>
  44106c:	lea    r15,[rip+0x1f56]        # 442fc9 <strcmp@plt+0x3f841>
  441073:	mov    ebp,DWORD PTR [rsp+0x14]
  441077:	add    ebp,0x1
  44107a:	mov    rdi,r13
  44107d:	mov    rsi,rbx
  441080:	call   403720 <cfg_size@plt>
  441085:	cmp    ebp,eax
  441087:	jb     440e30 <strcmp@plt+0x3d6a8>
  44108d:	lea    rsi,[rip+0xf974]        # 450a08 <strcmp@plt+0x4d280>
  441094:	mov    rdi,r13
  441097:	call   403720 <cfg_size@plt>
  44109c:	test   eax,eax
  44109e:	je     4411da <strcmp@plt+0x3da52>
  4410a4:	lea    r15,[rip+0xf95d]        # 450a08 <strcmp@plt+0x4d280>
  4410ab:	xor    r12d,r12d
  4410ae:	xchg   ax,ax
  4410b0:	mov    rdi,r13
  4410b3:	mov    rsi,r15
  4410b6:	mov    edx,r12d
  4410b9:	call   4031f0 <cfg_getnsec@plt>
  4410be:	mov    rbp,rax
  4410c1:	xor    eax,eax
  4410c3:	call   4047c0 <strcmp@plt+0x1038>
  4410c8:	mov    r13,rax
  4410cb:	xor    edx,edx
  4410cd:	xor    ecx,ecx
  4410cf:	mov    rdi,rbp
  4410d2:	mov    rsi,rax
  4410d5:	call   43f350 <strcmp@plt+0x3bbc8>
  4410da:	cmp    eax,0x1
  4410dd:	mov    r14,QWORD PTR [rsp+0x18]
  4410e2:	jne    4413cd <strcmp@plt+0x3dc45>
  4410e8:	xor    ecx,ecx
  4410ea:	mov    rdi,r14
  4410ed:	mov    rsi,QWORD PTR [rsp+0x20]
  4410f2:	mov    rdx,r13
  4410f5:	call   405f90 <strcmp@plt+0x2808>
  4410fa:	mov    rbx,rax
  4410fd:	mov    rdi,r13
  441100:	call   404860 <strcmp@plt+0x10d8>
  441105:	test   rbx,rbx
  441108:	je     4413cd <strcmp@plt+0x3dc45>
  44110e:	mov    rdi,QWORD PTR [r14+0x20]
  441112:	mov    rsi,rbx
  441115:	call   42fcd0 <strcmp@plt+0x2c548>
  44111a:	test   rax,rax
  44111d:	je     441150 <strcmp@plt+0x3d9c8>
  44111f:	mov    rdi,rbp
  441122:	lea    rsi,[rip+0xefc4]        # 4500ed <strcmp@plt+0x4c965>
  441129:	call   4032c0 <cfg_getstr@plt>
  44112e:	mov    rcx,rax
  441131:	mov    edi,0x2
  441136:	xor    eax,eax
  441138:	lea    rsi,[rip+0xf998]        # 450ad7 <strcmp@plt+0x4d34f>
  44113f:	jmp    4411ad <strcmp@plt+0x3da25>
  441141:	nop    WORD PTR cs:[rax+rax*1+0x0]
  44114b:	nop    DWORD PTR [rax+rax*1+0x0]
  441150:	mov    rdi,r14
  441153:	mov    rsi,rbx
  441156:	call   410c10 <strcmp@plt+0xd488>
  44115b:	cmp    eax,0x1
  44115e:	jne    441194 <strcmp@plt+0x3da0c>
  441160:	lea    rax,[rip+0x23c49]        # 464db0 <strcmp@plt+0x61628>
  441167:	cmp    DWORD PTR [rax],0x0
  44116a:	mov    r13,QWORD PTR [rsp+0x8]
  44116f:	jle    4411c2 <strcmp@plt+0x3da3a>
  441171:	mov    rdi,rbx
  441174:	call   423130 <strcmp@plt+0x1f9a8>
  441179:	mov    rcx,rax
  44117c:	mov    edi,0x5
  441181:	xor    eax,eax
  441183:	lea    rsi,[rip+0xf8c1]        # 450a4b <strcmp@plt+0x4d2c3>
  44118a:	mov    rdx,rcx
  44118d:	call   42e800 <strcmp@plt+0x2b078>
  441192:	jmp    4411c2 <strcmp@plt+0x3da3a>
  441194:	mov    rdi,rbx
  441197:	call   423130 <strcmp@plt+0x1f9a8>
  44119c:	mov    rcx,rax
  44119f:	mov    edi,0x2
  4411a4:	xor    eax,eax
  4411a6:	lea    rsi,[rip+0xf8e0]        # 450a8d <strcmp@plt+0x4d305>
  4411ad:	mov    rdx,rcx
  4411b0:	call   42e800 <strcmp@plt+0x2b078>
  4411b5:	mov    rdi,rbx
  4411b8:	call   428ed0 <strcmp@plt+0x25748>
  4411bd:	mov    r13,QWORD PTR [rsp+0x8]
  4411c2:	add    r12d,0x1
  4411c6:	mov    rdi,r13
  4411c9:	mov    rsi,r15
  4411cc:	call   403720 <cfg_size@plt>
  4411d1:	cmp    r12d,eax
  4411d4:	jb     4410b0 <strcmp@plt+0x3d928>
  4411da:	lea    rsi,[rip+0xf942]        # 450b23 <strcmp@plt+0x4d39b>
  4411e1:	mov    rdi,r13
  4411e4:	call   403720 <cfg_size@plt>
  4411e9:	test   eax,eax
  4411eb:	je     441271 <strcmp@plt+0x3dae9>
  4411f1:	lea    rbx,[rip+0xf92b]        # 450b23 <strcmp@plt+0x4d39b>
  4411f8:	xor    ebp,ebp
  4411fa:	nop    WORD PTR [rax+rax*1+0x0]
  441200:	mov    rdi,r13
  441203:	mov    rsi,rbx
  441206:	mov    edx,ebp
  441208:	call   4031f0 <cfg_getnsec@plt>
  44120d:	mov    r14,rax
  441210:	mov    rdi,rax
  441213:	lea    rsi,[rip+0xf4b0]        # 4506ca <strcmp@plt+0x4cf42>
  44121a:	call   4032c0 <cfg_getstr@plt>
  44121f:	mov    r15,rax
  441222:	mov    rdi,r14
  441225:	lea    rsi,[rip+0x48f0]        # 445b1c <strcmp@plt+0x42394>
  44122c:	call   4032c0 <cfg_getstr@plt>
  441231:	mov    r12,rax
  441234:	mov    rdi,r14
  441237:	lea    rsi,[rip+0x1d8b]        # 442fc9 <strcmp@plt+0x3f841>
  44123e:	call   4032c0 <cfg_getstr@plt>
  441243:	mov    rdi,QWORD PTR [rsp+0x18]
  441248:	mov    rsi,r15
  44124b:	mov    rdx,r12
  44124e:	mov    rcx,rax
  441251:	call   406b20 <strcmp@plt+0x3398>
  441256:	cmp    eax,0x1
  441259:	jne    4413f9 <strcmp@plt+0x3dc71>
  44125f:	add    ebp,0x1
  441262:	mov    rdi,r13
  441265:	mov    rsi,rbx
  441268:	call   403720 <cfg_size@plt>
  44126d:	cmp    ebp,eax
  44126f:	jb     441200 <strcmp@plt+0x3da78>
  441271:	lea    rsi,[rip+0xf8b7]        # 450b2f <strcmp@plt+0x4d3a7>
  441278:	mov    rdi,r13
  44127b:	call   403720 <cfg_size@plt>
  441280:	test   eax,eax
  441282:	je     441361 <strcmp@plt+0x3dbd9>
  441288:	xor    ebp,ebp
  44128a:	lea    rbx,[rip+0xf89e]        # 450b2f <strcmp@plt+0x4d3a7>
  441291:	lea    r15,[rip+0xf8a3]        # 450b3b <strcmp@plt+0x4d3b3>
  441298:	nop    DWORD PTR [rax+rax*1+0x0]
  4412a0:	mov    rdi,r13
  4412a3:	mov    rsi,rbx
  4412a6:	mov    ebx,ebp
  4412a8:	mov    edx,ebp
  4412aa:	call   4031f0 <cfg_getnsec@plt>
  4412af:	mov    rbp,rax
  4412b2:	call   42bbd0 <strcmp@plt+0x28448>
  4412b7:	mov    r12,rax
  4412ba:	mov    rdi,rbp
  4412bd:	mov    rsi,r15
  4412c0:	call   403720 <cfg_size@plt>
  4412c5:	test   eax,eax
  4412c7:	jle    4412f7 <strcmp@plt+0x3db6f>
  4412c9:	mov    r13d,eax
  4412cc:	xor    r14d,r14d
  4412cf:	nop
  4412d0:	mov    rdi,rbp
  4412d3:	mov    rsi,r15
  4412d6:	mov    edx,r14d
  4412d9:	call   403120 <cfg_getnstr@plt>
  4412de:	test   rax,rax
  4412e1:	je     4412ee <strcmp@plt+0x3db66>
  4412e3:	mov    rdi,rax
  4412e6:	mov    rsi,r12
  4412e9:	call   42bcf0 <strcmp@plt+0x28568>
  4412ee:	add    r14d,0x1
  4412f2:	cmp    r13d,r14d
  4412f5:	jne    4412d0 <strcmp@plt+0x3db48>
  4412f7:	mov    rdi,rbp
  4412fa:	lea    rsi,[rip+0xf3c9]        # 4506ca <strcmp@plt+0x4cf42>
  441301:	call   4032c0 <cfg_getstr@plt>
  441306:	mov    r14,rax
  441309:	mov    rdi,rbp
  44130c:	lea    rsi,[rip+0xddcc]        # 44f0df <strcmp@plt+0x4b957>
  441313:	call   4031b0 <cfg_getint@plt>
  441318:	mov    rdi,QWORD PTR [rsp+0x18]
  44131d:	mov    rsi,r14
  441320:	mov    edx,eax
  441322:	mov    rcx,r12
  441325:	call   406ce0 <strcmp@plt+0x3558>
  44132a:	mov    ebp,eax
  44132c:	mov    rdi,r12
  44132f:	call   42c250 <strcmp@plt+0x28ac8>
  441334:	cmp    ebp,0x1
  441337:	jne    4413f9 <strcmp@plt+0x3dc71>
  44133d:	mov    ebp,ebx
  44133f:	add    ebp,0x1
  441342:	mov    r13,QWORD PTR [rsp+0x8]
  441347:	mov    rdi,r13
  44134a:	lea    rbx,[rip+0xf7de]        # 450b2f <strcmp@plt+0x4d3a7>
  441351:	mov    rsi,rbx
  441354:	call   403720 <cfg_size@plt>
  441359:	cmp    ebp,eax
  44135b:	jb     4412a0 <strcmp@plt+0x3db18>
  441361:	lea    rsi,[rip+0xf7d8]        # 450b40 <strcmp@plt+0x4d3b8>
  441368:	mov    rdi,r13
  44136b:	call   4032c0 <cfg_getstr@plt>
  441370:	mov    rdi,QWORD PTR [rsp+0x18]
  441375:	mov    rsi,rax
  441378:	call   406e50 <strcmp@plt+0x36c8>
  44137d:	xor    ebx,ebx
  44137f:	cmp    eax,0x1
  441382:	jne    4413bc <strcmp@plt+0x3dc34>
  441384:	mov    rdi,QWORD PTR [rsp+0x20]
  441389:	call   436870 <strcmp@plt+0x330e8>
  44138e:	mov    ebx,0x1
  441393:	jmp    4413bc <strcmp@plt+0x3dc34>
  441395:	lea    rsi,[rip+0xf4f8]        # 450894 <strcmp@plt+0x4d10c>
  44139c:	jmp    4413ae <strcmp@plt+0x3dc26>
  44139e:	lea    rsi,[rip+0xf4aa]        # 45084f <strcmp@plt+0x4d0c7>
  4413a5:	jmp    4413ae <strcmp@plt+0x3dc26>
  4413a7:	lea    rsi,[rip+0xf530]        # 4508de <strcmp@plt+0x4d156>
  4413ae:	xor    ebx,ebx
  4413b0:	mov    edi,0x2
  4413b5:	xor    eax,eax
  4413b7:	call   42e800 <strcmp@plt+0x2b078>
  4413bc:	mov    eax,ebx
  4413be:	add    rsp,0x48
  4413c2:	pop    rbx
  4413c3:	pop    r12
  4413c5:	pop    r13
  4413c7:	pop    r14
  4413c9:	pop    r15
  4413cb:	pop    rbp
  4413cc:	ret    
  4413cd:	lea    rsi,[rip+0xed19]        # 4500ed <strcmp@plt+0x4c965>
  4413d4:	mov    rdi,rbp
  4413d7:	call   4032c0 <cfg_getstr@plt>
  4413dc:	mov    rcx,rax
  4413df:	lea    rsi,[rip+0xf63c]        # 450a22 <strcmp@plt+0x4d29a>
  4413e6:	xor    ebx,ebx
  4413e8:	mov    edi,0x2
  4413ed:	xor    eax,eax
  4413ef:	mov    rdx,rcx
  4413f2:	call   42e800 <strcmp@plt+0x2b078>
  4413f7:	jmp    4413bc <strcmp@plt+0x3dc34>
  4413f9:	xor    ebx,ebx
  4413fb:	jmp    4413bc <strcmp@plt+0x3dc34>
  4413fd:	nop    DWORD PTR [rax]
  441400:	push   rbp
  441401:	push   r15
  441403:	push   r14
  441405:	push   r13
  441407:	push   r12
  441409:	push   rbx
  44140a:	sub    rsp,0x28
  44140e:	mov    rbp,rdi
  441411:	lea    rbx,[rip+0x2f180]        # 470598 <strcmp@plt+0x6ce10>
  441418:	mov    edi,0x4
  44141d:	mov    rsi,rbx
  441420:	call   407a10 <strcmp@plt+0x4288>
  441425:	cmp    eax,0x1
  441428:	je     441444 <strcmp@plt+0x3dcbc>
  44142a:	lea    rsi,[rip+0xf726]        # 450b57 <strcmp@plt+0x4d3cf>
  441431:	mov    edi,0x1
  441436:	xor    eax,eax
  441438:	call   42e800 <strcmp@plt+0x2b078>
  44143d:	xor    eax,eax
  44143f:	call   43b420 <strcmp@plt+0x37c98>
  441444:	mov    r14,QWORD PTR [rbx]
  441447:	mov    rdi,rbp
  44144a:	call   440460 <strcmp@plt+0x3ccd8>
  44144f:	mov    QWORD PTR [rsp+0x18],rax
  441454:	lea    rsi,[rip+0xf3e6]        # 450841 <strcmp@plt+0x4d0b9>
  44145b:	mov    rdi,rbp
  44145e:	call   4032c0 <cfg_getstr@plt>
  441463:	test   rax,rax
  441466:	je     44188c <strcmp@plt+0x3e104>
  44146c:	mov    rdi,rax
  44146f:	call   43ad30 <strcmp@plt+0x375a8>
  441474:	test   rax,rax
  441477:	je     441895 <strcmp@plt+0x3e10d>
  44147d:	mov    rbx,rax
  441480:	mov    QWORD PTR [rsp+0x20],r14
  441485:	mov    esi,0x2
  44148a:	mov    rdi,rax
  44148d:	call   43a8b0 <strcmp@plt+0x37128>
  441492:	mov    esi,0xa
  441497:	mov    rdi,rbx
  44149a:	call   43a8b0 <strcmp@plt+0x37128>
  44149f:	lea    rsi,[rip+0xf757]        # 450bfd <strcmp@plt+0x4d475>
  4414a6:	mov    rdi,rbp
  4414a9:	call   403720 <cfg_size@plt>
  4414ae:	test   eax,eax
  4414b0:	mov    QWORD PTR [rsp+0x10],rbp
  4414b5:	je     4415ff <strcmp@plt+0x3de77>
  4414bb:	lea    r12,[rip+0xf73b]        # 450bfd <strcmp@plt+0x4d475>
  4414c2:	lea    r14,[rip+0xec24]        # 4500ed <strcmp@plt+0x4c965>
  4414c9:	xor    r13d,r13d
  4414cc:	nop    DWORD PTR [rax+0x0]
  4414d0:	mov    rdi,rbp
  4414d3:	mov    rsi,r12
  4414d6:	mov    edx,r13d
  4414d9:	call   4031f0 <cfg_getnsec@plt>
  4414de:	mov    rbp,rax
  4414e1:	mov    rdi,rax
  4414e4:	mov    rsi,r14
  4414e7:	call   4032c0 <cfg_getstr@plt>
  4414ec:	test   rax,rax
  4414ef:	je     44189e <strcmp@plt+0x3e116>
  4414f5:	mov    rdi,rbp
  4414f8:	mov    rsi,r14
  4414fb:	call   4032c0 <cfg_getstr@plt>
  441500:	mov    rbx,rax
  441503:	mov    rdi,rbp
  441506:	lea    rsi,[rip+0xae95]        # 44c3a2 <strcmp@plt+0x48c1a>
  44150d:	call   4031b0 <cfg_getint@plt>
  441512:	mov    r15,QWORD PTR [rsp+0x20]
  441517:	mov    rdi,r15
  44151a:	mov    rsi,rbx
  44151d:	mov    edx,eax
  44151f:	mov    rcx,QWORD PTR [rsp+0x18]
  441524:	call   405aa0 <strcmp@plt+0x2318>
  441529:	test   rax,rax
  44152c:	je     441580 <strcmp@plt+0x3ddf8>
  44152e:	mov    rbx,rax
  441531:	mov    rdi,QWORD PTR [r15+0x18]
  441535:	mov    rsi,QWORD PTR [rax]
  441538:	call   42fcb0 <strcmp@plt+0x2c528>
  44153d:	lea    rcx,[rip+0x2386c]        # 464db0 <strcmp@plt+0x61628>
  441544:	mov    ecx,DWORD PTR [rcx]
  441546:	test   rax,rax
  441549:	je     4415b0 <strcmp@plt+0x3de28>
  44154b:	test   ecx,ecx
  44154d:	mov    rbp,QWORD PTR [rsp+0x10]
  441552:	jle    441575 <strcmp@plt+0x3dded>
  441554:	mov    rdi,QWORD PTR [rbx]
  441557:	call   423130 <strcmp@plt+0x1f9a8>
  44155c:	mov    rcx,rax
  44155f:	mov    edi,0x5
  441564:	xor    eax,eax
  441566:	lea    rsi,[rip+0xf6ef]        # 450c5c <strcmp@plt+0x4d4d4>
  44156d:	mov    rdx,rcx
  441570:	call   42e800 <strcmp@plt+0x2b078>
  441575:	mov    rdi,rbx
  441578:	call   4148d0 <strcmp@plt+0x11148>
  44157d:	jmp    4415e7 <strcmp@plt+0x3de5f>
  44157f:	nop
  441580:	mov    rdi,rbp
  441583:	mov    rsi,r14
  441586:	call   4032c0 <cfg_getstr@plt>
  44158b:	mov    rcx,rax
  44158e:	mov    edi,0x2
  441593:	xor    eax,eax
  441595:	lea    rsi,[rip+0xf73e]        # 450cda <strcmp@plt+0x4d552>
  44159c:	mov    rdx,rcx
  44159f:	call   42e800 <strcmp@plt+0x2b078>
  4415a4:	mov    rbp,QWORD PTR [rsp+0x10]
  4415a9:	jmp    4415e7 <strcmp@plt+0x3de5f>
  4415ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4415b0:	test   ecx,ecx
  4415b2:	mov    rbp,QWORD PTR [rsp+0x10]
  4415b7:	jle    4415da <strcmp@plt+0x3de52>
  4415b9:	mov    rdi,QWORD PTR [rbx]
  4415bc:	call   423130 <strcmp@plt+0x1f9a8>
  4415c1:	mov    rcx,rax
  4415c4:	mov    edi,0x5
  4415c9:	xor    eax,eax
  4415cb:	lea    rsi,[rip+0xf6c7]        # 450c99 <strcmp@plt+0x4d511>
  4415d2:	mov    rdx,rcx
  4415d5:	call   42e800 <strcmp@plt+0x2b078>
  4415da:	mov    rdi,QWORD PTR [rsp+0x20]
  4415df:	mov    rsi,rbx
  4415e2:	call   414080 <strcmp@plt+0x108f8>
  4415e7:	add    r13d,0x1
  4415eb:	mov    rdi,rbp
  4415ee:	mov    rsi,r12
  4415f1:	call   403720 <cfg_size@plt>
  4415f6:	cmp    r13d,eax
  4415f9:	jb     4414d0 <strcmp@plt+0x3dd48>
  4415ff:	lea    rsi,[rip+0xf704]        # 450d0a <strcmp@plt+0x4d582>
  441606:	mov    rdi,rbp
  441609:	call   403720 <cfg_size@plt>
  44160e:	test   eax,eax
  441610:	je     44187b <strcmp@plt+0x3e0f3>
  441616:	lea    r13,[rip+0xf6ed]        # 450d0a <strcmp@plt+0x4d582>
  44161d:	lea    r12,[rip+0xeac9]        # 4500ed <strcmp@plt+0x4c965>
  441624:	lea    r14,[rip+0xf744]        # 450d6f <strcmp@plt+0x4d5e7>
  44162b:	xor    ebx,ebx
  44162d:	nop    DWORD PTR [rax]
  441630:	mov    rdi,rbp
  441633:	mov    rsi,r13
  441636:	mov    DWORD PTR [rsp+0xc],ebx
  44163a:	mov    edx,ebx
  44163c:	call   4031f0 <cfg_getnsec@plt>
  441641:	mov    r13,rax
  441644:	call   42bbd0 <strcmp@plt+0x28448>
  441649:	mov    r15,rax
  44164c:	mov    rdi,r13
  44164f:	mov    rsi,r12
  441652:	call   4032c0 <cfg_getstr@plt>
  441657:	test   rax,rax
  44165a:	je     4418a7 <strcmp@plt+0x3e11f>
  441660:	mov    rdi,r13
  441663:	mov    rsi,r14
  441666:	call   4032c0 <cfg_getstr@plt>
  44166b:	test   rax,rax
  44166e:	je     4418a7 <strcmp@plt+0x3e11f>
  441674:	mov    rdi,r13
  441677:	lea    rsi,[rip+0xf701]        # 450d7f <strcmp@plt+0x4d5f7>
  44167e:	call   403720 <cfg_size@plt>
  441683:	test   eax,eax
  441685:	jle    4416b8 <strcmp@plt+0x3df30>
  441687:	mov    ebx,eax
  441689:	xor    ebp,ebp
  44168b:	nop    DWORD PTR [rax+rax*1+0x0]
  441690:	mov    rdi,r13
  441693:	lea    rsi,[rip+0xf6e5]        # 450d7f <strcmp@plt+0x4d5f7>
  44169a:	mov    edx,ebp
  44169c:	call   403120 <cfg_getnstr@plt>
  4416a1:	test   rax,rax
  4416a4:	je     4416b1 <strcmp@plt+0x3df29>
  4416a6:	mov    rdi,rax
  4416a9:	mov    rsi,r15
  4416ac:	call   42be30 <strcmp@plt+0x286a8>
  4416b1:	add    ebp,0x1
  4416b4:	cmp    ebx,ebp
  4416b6:	jne    441690 <strcmp@plt+0x3df08>
  4416b8:	mov    rdi,r13
  4416bb:	mov    rsi,r14
  4416be:	call   4032c0 <cfg_getstr@plt>
  4416c3:	test   rax,rax
  4416c6:	je     4418cd <strcmp@plt+0x3e145>
  4416cc:	mov    rbp,rax
  4416cf:	mov    rdi,rax
  4416d2:	call   437dd0 <strcmp@plt+0x34648>
  4416d7:	mov    r14,rax
  4416da:	mov    rdi,rax
  4416dd:	lea    rsi,[rip+0xf6d7]        # 450dbb <strcmp@plt+0x4d633>
  4416e4:	call   403788 <strcmp@plt>
  4416e9:	test   eax,eax
  4416eb:	je     441710 <strcmp@plt+0x3df88>
  4416ed:	mov    rdi,r14
  4416f0:	lea    rsi,[rip+0xf6d3]        # 450dca <strcmp@plt+0x4d642>
  4416f7:	call   403788 <strcmp@plt>
  4416fc:	mov    ebx,0x1
  441701:	test   eax,eax
  441703:	je     441712 <strcmp@plt+0x3df8a>
  441705:	jmp    4418e6 <strcmp@plt+0x3e15e>
  44170a:	nop    WORD PTR [rax+rax*1+0x0]
  441710:	xor    ebx,ebx
  441712:	mov    rdi,r14
  441715:	call   403780 <free@plt>
  44171a:	mov    rdi,r13
  44171d:	mov    rsi,r12
  441720:	call   4032c0 <cfg_getstr@plt>
  441725:	mov    rbp,rax
  441728:	mov    rdi,r13
  44172b:	lea    rsi,[rip+0xac70]        # 44c3a2 <strcmp@plt+0x48c1a>
  441732:	call   4031b0 <cfg_getint@plt>
  441737:	mov    r14,r12
  44173a:	mov    r12,QWORD PTR [rsp+0x20]
  44173f:	mov    rdi,r12
  441742:	mov    rsi,rbp
  441745:	mov    edx,eax
  441747:	mov    ecx,ebx
  441749:	mov    r8,r15
  44174c:	mov    r9,QWORD PTR [rsp+0x18]
  441751:	call   405b60 <strcmp@plt+0x23d8>
  441756:	mov    rbx,rax
  441759:	mov    rdi,r15
  44175c:	call   42c250 <strcmp@plt+0x28ac8>
  441761:	test   rbx,rbx
  441764:	je     4417e0 <strcmp@plt+0x3e058>
  441766:	mov    rdi,QWORD PTR [r12+0x20]
  44176b:	mov    rsi,QWORD PTR [rbx]
  44176e:	call   42fcb0 <strcmp@plt+0x2c528>
  441773:	lea    rcx,[rip+0x23636]        # 464db0 <strcmp@plt+0x61628>
  44177a:	mov    ecx,DWORD PTR [rcx]
  44177c:	test   rax,rax
  44177f:	mov    rbp,QWORD PTR [rsp+0x10]
  441784:	je     441820 <strcmp@plt+0x3e098>
  44178a:	test   ecx,ecx
  44178c:	mov    r15,rbx
  44178f:	lea    r13,[rip+0xf574]        # 450d0a <strcmp@plt+0x4d582>
  441796:	mov    ebx,DWORD PTR [rsp+0xc]
  44179a:	jle    4417bd <strcmp@plt+0x3e035>
  44179c:	mov    rdi,QWORD PTR [r15]
  44179f:	call   423130 <strcmp@plt+0x1f9a8>
  4417a4:	mov    rcx,rax
  4417a7:	mov    edi,0x5
  4417ac:	xor    eax,eax
  4417ae:	lea    rsi,[rip+0xf629]        # 450dde <strcmp@plt+0x4d656>
  4417b5:	mov    rdx,rcx
  4417b8:	call   42e800 <strcmp@plt+0x2b078>
  4417bd:	mov    rdi,r15
  4417c0:	call   4148f0 <strcmp@plt+0x11168>
  4417c5:	mov    r12,r14
  4417c8:	lea    r14,[rip+0xf5a0]        # 450d6f <strcmp@plt+0x4d5e7>
  4417cf:	jmp    441865 <strcmp@plt+0x3e0dd>
  4417d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4417de:	xchg   ax,ax
  4417e0:	mov    rdi,r13
  4417e3:	mov    rsi,r14
  4417e6:	call   4032c0 <cfg_getstr@plt>
  4417eb:	mov    rcx,rax
  4417ee:	mov    edi,0x2
  4417f3:	xor    eax,eax
  4417f5:	lea    rsi,[rip+0xf669]        # 450e65 <strcmp@plt+0x4d6dd>
  4417fc:	mov    rdx,rcx
  4417ff:	call   42e800 <strcmp@plt+0x2b078>
  441804:	mov    rbp,QWORD PTR [rsp+0x10]
  441809:	lea    r13,[rip+0xf4fa]        # 450d0a <strcmp@plt+0x4d582>
  441810:	jmp    441857 <strcmp@plt+0x3e0cf>
  441812:	nop    WORD PTR cs:[rax+rax*1+0x0]
  44181c:	nop    DWORD PTR [rax+0x0]
  441820:	test   ecx,ecx
  441822:	lea    r13,[rip+0xf4e1]        # 450d0a <strcmp@plt+0x4d582>
  441829:	jle    44184c <strcmp@plt+0x3e0c4>
  44182b:	mov    rdi,QWORD PTR [rbx]
  44182e:	call   423130 <strcmp@plt+0x1f9a8>
  441833:	mov    rcx,rax
  441836:	mov    edi,0x5
  44183b:	xor    eax,eax
  44183d:	lea    rsi,[rip+0xf5e6]        # 450e2a <strcmp@plt+0x4d6a2>
  441844:	mov    rdx,rcx
  441847:	call   42e800 <strcmp@plt+0x2b078>
  44184c:	mov    rdi,r12
  44184f:	mov    rsi,rbx
  441852:	call   4140c0 <strcmp@plt+0x10938>
  441857:	mov    r12,r14
  44185a:	lea    r14,[rip+0xf50e]        # 450d6f <strcmp@plt+0x4d5e7>
  441861:	mov    ebx,DWORD PTR [rsp+0xc]
  441865:	add    ebx,0x1
  441868:	mov    rdi,rbp
  44186b:	mov    rsi,r13
  44186e:	call   403720 <cfg_size@plt>
  441873:	cmp    ebx,eax
  441875:	jb     441630 <strcmp@plt+0x3dea8>
  44187b:	mov    rdi,QWORD PTR [rsp+0x18]
  441880:	call   436870 <strcmp@plt+0x330e8>
  441885:	mov    ebx,0x1
  44188a:	jmp    4418bc <strcmp@plt+0x3e134>
  44188c:	lea    rsi,[rip+0xf32c]        # 450bbf <strcmp@plt+0x4d437>
  441893:	jmp    4418ae <strcmp@plt+0x3e126>
  441895:	lea    rsi,[rip+0xf2e0]        # 450b7c <strcmp@plt+0x4d3f4>
  44189c:	jmp    4418ae <strcmp@plt+0x3e126>
  44189e:	lea    rsi,[rip+0xf366]        # 450c0b <strcmp@plt+0x4d483>
  4418a5:	jmp    4418ae <strcmp@plt+0x3e126>
  4418a7:	lea    rsi,[rip+0xf46b]        # 450d19 <strcmp@plt+0x4d591>
  4418ae:	xor    ebx,ebx
  4418b0:	mov    edi,0x2
  4418b5:	xor    eax,eax
  4418b7:	call   42e800 <strcmp@plt+0x2b078>
  4418bc:	mov    eax,ebx
  4418be:	add    rsp,0x28
  4418c2:	pop    rbx
  4418c3:	pop    r12
  4418c5:	pop    r13
  4418c7:	pop    r14
  4418c9:	pop    r15
  4418cb:	pop    rbp
  4418cc:	ret    
  4418cd:	lea    rsi,[rip+0xf4b7]        # 450d8b <strcmp@plt+0x4d603>
  4418d4:	xor    ebx,ebx
  4418d6:	mov    edi,0x1
  4418db:	xor    edx,edx
  4418dd:	xor    eax,eax
  4418df:	call   42e800 <strcmp@plt+0x2b078>
  4418e4:	jmp    4418bc <strcmp@plt+0x3e134>
  4418e6:	lea    rsi,[rip+0xf49e]        # 450d8b <strcmp@plt+0x4d603>
  4418ed:	xor    ebx,ebx
  4418ef:	mov    edi,0x1
  4418f4:	xor    eax,eax
  4418f6:	mov    rdx,rbp
  4418f9:	call   42e800 <strcmp@plt+0x2b078>
  4418fe:	mov    rdi,r14
  441901:	call   403780 <free@plt>
  441906:	jmp    4418bc <strcmp@plt+0x3e134>
  441908:	nop    DWORD PTR [rax+rax*1+0x0]
  441910:	push   rbp
  441911:	push   r15
  441913:	push   r14
  441915:	push   r13
  441917:	push   r12
  441919:	push   rbx
  44191a:	push   rax
  44191b:	mov    r13,rdi
  44191e:	lea    rbx,[rip+0x2ec73]        # 470598 <strcmp@plt+0x6ce10>
  441925:	mov    edi,0x5
  44192a:	mov    rsi,rbx
  44192d:	call   407a10 <strcmp@plt+0x4288>
  441932:	cmp    eax,0x1
  441935:	je     441951 <strcmp@plt+0x3e1c9>
  441937:	lea    rsi,[rip+0xf554]        # 450e92 <strcmp@plt+0x4d70a>
  44193e:	mov    edi,0x1
  441943:	xor    eax,eax
  441945:	call   42e800 <strcmp@plt+0x2b078>
  44194a:	xor    eax,eax
  44194c:	call   43b420 <strcmp@plt+0x37c98>
  441951:	mov    r15,QWORD PTR [rbx]
  441954:	mov    rdi,r13
  441957:	call   440460 <strcmp@plt+0x3ccd8>
  44195c:	mov    r14,rax
  44195f:	lea    rsi,[rip+0xeedb]        # 450841 <strcmp@plt+0x4d0b9>
  441966:	mov    rdi,r13
  441969:	call   4032c0 <cfg_getstr@plt>
  44196e:	test   rax,rax
  441971:	je     441a1a <strcmp@plt+0x3e292>
  441977:	mov    rdi,rax
  44197a:	call   43ad30 <strcmp@plt+0x375a8>
  44197f:	test   rax,rax
  441982:	je     441a23 <strcmp@plt+0x3e29b>
  441988:	mov    rbx,rax
  44198b:	mov    esi,0x2
  441990:	mov    rdi,rax
  441993:	call   43a8b0 <strcmp@plt+0x37128>
  441998:	mov    esi,0xa
  44199d:	mov    rdi,rbx
  4419a0:	call   43a8b0 <strcmp@plt+0x37128>
  4419a5:	call   42bbd0 <strcmp@plt+0x28448>
  4419aa:	mov    r12,rax
  4419ad:	lea    rsi,[rip+0xf59c]        # 450f50 <strcmp@plt+0x4d7c8>
  4419b4:	mov    rdi,r13
  4419b7:	call   403720 <cfg_size@plt>
  4419bc:	test   eax,eax
  4419be:	jle    441a2c <strcmp@plt+0x3e2a4>
  4419c0:	mov    ebp,eax
  4419c2:	mov    QWORD PTR [rsp],r15
  4419c6:	xor    ebx,ebx
  4419c8:	lea    r15,[rip+0xf581]        # 450f50 <strcmp@plt+0x4d7c8>
  4419cf:	nop
  4419d0:	mov    rdi,r13
  4419d3:	mov    rsi,r15
  4419d6:	mov    edx,ebx
  4419d8:	call   403120 <cfg_getnstr@plt>
  4419dd:	test   rax,rax
  4419e0:	je     4419ed <strcmp@plt+0x3e265>
  4419e2:	mov    rdi,rax
  4419e5:	mov    rsi,r12
  4419e8:	call   42be30 <strcmp@plt+0x286a8>
  4419ed:	add    ebx,0x1
  4419f0:	cmp    ebp,ebx
  4419f2:	jne    4419d0 <strcmp@plt+0x3e248>
  4419f4:	mov    rdi,QWORD PTR [rsp]
  4419f8:	mov    rsi,r12
  4419fb:	mov    rdx,r14
  4419fe:	call   405cd0 <strcmp@plt+0x2548>
  441a03:	mov    rdi,r14
  441a06:	call   436870 <strcmp@plt+0x330e8>
  441a0b:	mov    rdi,r12
  441a0e:	call   42c250 <strcmp@plt+0x28ac8>
  441a13:	mov    ebx,0x1
  441a18:	jmp    441a41 <strcmp@plt+0x3e2b9>
  441a1a:	lea    rsi,[rip+0xf4e9]        # 450f0a <strcmp@plt+0x4d782>
  441a21:	jmp    441a33 <strcmp@plt+0x3e2ab>
  441a23:	lea    rsi,[rip+0xf495]        # 450ebf <strcmp@plt+0x4d737>
  441a2a:	jmp    441a33 <strcmp@plt+0x3e2ab>
  441a2c:	lea    rsi,[rip+0xf530]        # 450f63 <strcmp@plt+0x4d7db>
  441a33:	xor    ebx,ebx
  441a35:	mov    edi,0x2
  441a3a:	xor    eax,eax
  441a3c:	call   42e800 <strcmp@plt+0x2b078>
  441a41:	mov    eax,ebx
  441a43:	add    rsp,0x8
  441a47:	pop    rbx
  441a48:	pop    r12
  441a4a:	pop    r13
  441a4c:	pop    r14
  441a4e:	pop    r15
  441a50:	pop    rbp
  441a51:	ret    
  441a52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  441a5c:	nop    DWORD PTR [rax+0x0]
  441a60:	push   rbp
  441a61:	push   r15
  441a63:	push   r14
  441a65:	push   r13
  441a67:	push   r12
  441a69:	push   rbx
  441a6a:	sub    rsp,0x13b8
  441a71:	lea    rsi,[rip+0x20f28]        # 4629a0 <strcmp@plt+0x5f218>
  441a78:	mov    rbx,rsp
  441a7b:	mov    edx,0x13b0
  441a80:	mov    rdi,rbx
  441a83:	call   403330 <memcpy@plt>
  441a88:	mov    esi,0x4
  441a8d:	mov    rdi,rbx
  441a90:	call   4033a0 <cfg_init@plt>
  441a95:	mov    r14,rax
  441a98:	lea    rbx,[rip+0x2ea59]        # 4704f8 <strcmp@plt+0x6cd70>
  441a9f:	mov    rsi,QWORD PTR [rbx]
  441aa2:	mov    rdi,rax
  441aa5:	call   4036b0 <cfg_parse@plt>
  441aaa:	cmp    eax,0x1
  441aad:	je     441ac2 <strcmp@plt+0x3e33a>
  441aaf:	mov    ebp,eax
  441ab1:	cmp    eax,0xffffffff
  441ab4:	jne    441af6 <strcmp@plt+0x3e36e>
  441ab6:	mov    rdx,QWORD PTR [rbx]
  441ab9:	lea    rsi,[rip+0xd206]        # 44ecc6 <strcmp@plt+0x4b53e>
  441ac0:	jmp    441acc <strcmp@plt+0x3e344>
  441ac2:	mov    rdx,QWORD PTR [rbx]
  441ac5:	lea    rsi,[rip+0xf5cd]        # 451099 <strcmp@plt+0x4d911>
  441acc:	xor    ebp,ebp
  441ace:	mov    edi,0x1
  441ad3:	xor    eax,eax
  441ad5:	call   42e800 <strcmp@plt+0x2b078>
  441ada:	mov    rdi,r14
  441add:	call   403150 <cfg_free@plt>
  441ae2:	mov    eax,ebp
  441ae4:	add    rsp,0x13b8
  441aeb:	pop    rbx
  441aec:	pop    r12
  441aee:	pop    r13
  441af0:	pop    r14
  441af2:	pop    r15
  441af4:	pop    rbp
  441af5:	ret    
  441af6:	lea    r13,[rip+0x232b3]        # 464db0 <strcmp@plt+0x61628>
  441afd:	mov    eax,DWORD PTR [r13+0x0]
  441b01:	cmp    eax,0xffffffff
  441b04:	je     441b1e <strcmp@plt+0x3e396>
  441b06:	cmp    eax,0x3
  441b09:	je     441b4c <strcmp@plt+0x3e3c4>
  441b0b:	cmp    eax,0x2
  441b0e:	je     441b55 <strcmp@plt+0x3e3cd>
  441b10:	cmp    eax,0x1
  441b13:	jne    441b68 <strcmp@plt+0x3e3e0>
  441b15:	lea    rsi,[rip+0xf5c5]        # 4510e1 <strcmp@plt+0x4d959>
  441b1c:	jmp    441b5c <strcmp@plt+0x3e3d4>
  441b1e:	lea    rsi,[rip+0xf5e3]        # 451108 <strcmp@plt+0x4d980>
  441b25:	mov    rdi,r14
  441b28:	call   4031b0 <cfg_getint@plt>
  441b2d:	mov    rbp,rax
  441b30:	sar    eax,0x1f
  441b33:	andn   ecx,eax,ebp
  441b38:	cmp    ecx,0x4
  441b3b:	mov    eax,0x3
  441b40:	cmovl  eax,ecx
  441b43:	mov    DWORD PTR [r13+0x0],eax
  441b47:	cmp    eax,0x3
  441b4a:	jne    441b0b <strcmp@plt+0x3e383>
  441b4c:	lea    rsi,[rip+0xf5bb]        # 45110e <strcmp@plt+0x4d986>
  441b53:	jmp    441b5c <strcmp@plt+0x3e3d4>
  441b55:	lea    rsi,[rip+0xf59a]        # 4510f6 <strcmp@plt+0x4d96e>
  441b5c:	mov    edi,0x4
  441b61:	xor    eax,eax
  441b63:	call   42e800 <strcmp@plt+0x2b078>
  441b68:	lea    rsi,[rip+0xf4c2]        # 451031 <strcmp@plt+0x4d8a9>
  441b6f:	mov    rdi,r14
  441b72:	call   4032c0 <cfg_getstr@plt>
  441b77:	lea    rcx,[rip+0x2e986]        # 470504 <strcmp@plt+0x6cd7c>
  441b7e:	cmp    DWORD PTR [rcx],0x1
  441b81:	jne    441b8b <strcmp@plt+0x3e403>
  441b83:	mov    rdi,rax
  441b86:	call   42ea70 <strcmp@plt+0x2b2e8>
  441b8b:	lea    rsi,[rip+0xf4a8]        # 45103a <strcmp@plt+0x4d8b2>
  441b92:	mov    rdi,r14
  441b95:	call   4032c0 <cfg_getstr@plt>
  441b9a:	mov    r12,rax
  441b9d:	mov    rdi,rax
  441ba0:	call   437dd0 <strcmp@plt+0x34648>
  441ba5:	mov    r15,rax
  441ba8:	lea    rsi,[rip+0xf575]        # 451124 <strcmp@plt+0x4d99c>
  441baf:	mov    rdi,rax
  441bb2:	call   403788 <strcmp@plt>
  441bb7:	test   eax,eax
  441bb9:	je     441bf3 <strcmp@plt+0x3e46b>
  441bbb:	lea    rsi,[rip+0x4f7f]        # 446b41 <strcmp@plt+0x433b9>
  441bc2:	mov    rdi,r15
  441bc5:	call   403788 <strcmp@plt>
  441bca:	test   eax,eax
  441bcc:	je     441c10 <strcmp@plt+0x3e488>
  441bce:	lea    rsi,[rip+0xf592]        # 451167 <strcmp@plt+0x4d9df>
  441bd5:	xor    ebp,ebp
  441bd7:	mov    edi,0x1
  441bdc:	xor    eax,eax
  441bde:	mov    rdx,r12
  441be1:	call   42e800 <strcmp@plt+0x2b078>
  441be6:	mov    rdi,r15
  441be9:	call   403780 <free@plt>
  441bee:	jmp    441ae2 <strcmp@plt+0x3e35a>
  441bf3:	lea    rax,[rip+0x2df26]        # 46fb20 <strcmp@plt+0x6c398>
  441bfa:	mov    DWORD PTR [rax],0x0
  441c00:	cmp    DWORD PTR [r13+0x0],0x0
  441c05:	jle    441c37 <strcmp@plt+0x3e4af>
  441c07:	lea    rsi,[rip+0xf51d]        # 45112b <strcmp@plt+0x4d9a3>
  441c0e:	jmp    441c2b <strcmp@plt+0x3e4a3>
  441c10:	lea    rax,[rip+0x2df09]        # 46fb20 <strcmp@plt+0x6c398>
  441c17:	mov    DWORD PTR [rax],0x1
  441c1d:	cmp    DWORD PTR [r13+0x0],0x0
  441c22:	jle    441c37 <strcmp@plt+0x3e4af>
  441c24:	lea    rsi,[rip+0xf51c]        # 451147 <strcmp@plt+0x4d9bf>
  441c2b:	mov    edi,0x5
  441c30:	xor    eax,eax
  441c32:	call   42e800 <strcmp@plt+0x2b078>
  441c37:	mov    rdi,r15
  441c3a:	call   403780 <free@plt>
  441c3f:	lea    rsi,[rip+0xf415]        # 45105b <strcmp@plt+0x4d8d3>
  441c46:	mov    rdi,r14
  441c49:	call   4032c0 <cfg_getstr@plt>
  441c4e:	test   rax,rax
  441c51:	je     441ada <strcmp@plt+0x3e352>
  441c57:	mov    rdi,rax
  441c5a:	call   437dd0 <strcmp@plt+0x34648>
  441c5f:	mov    r15,rax
  441c62:	lea    rsi,[rip+0xf529]        # 451192 <strcmp@plt+0x4da0a>
  441c69:	mov    rdi,rax
  441c6c:	call   403788 <strcmp@plt>
  441c71:	test   eax,eax
  441c73:	je     441cfd <strcmp@plt+0x3e575>
  441c79:	lea    rsi,[rip+0xf516]        # 451196 <strcmp@plt+0x4da0e>
  441c80:	mov    rdi,r15
  441c83:	call   403788 <strcmp@plt>
  441c88:	test   eax,eax
  441c8a:	je     441d07 <strcmp@plt+0x3e57f>
  441c8c:	lea    rsi,[rip+0x21db]        # 443e6e <strcmp@plt+0x406e6>
  441c93:	mov    rdi,r15
  441c96:	call   403788 <strcmp@plt>
  441c9b:	test   eax,eax
  441c9d:	je     441d11 <strcmp@plt+0x3e589>
  441c9f:	lea    rsi,[rip+0xf4f3]        # 451199 <strcmp@plt+0x4da11>
  441ca6:	mov    rdi,r15
  441ca9:	call   403788 <strcmp@plt>
  441cae:	test   eax,eax
  441cb0:	je     441d1b <strcmp@plt+0x3e593>
  441cb2:	lea    rsi,[rip+0xf4e3]        # 45119c <strcmp@plt+0x4da14>
  441cb9:	mov    rdi,r15
  441cbc:	call   403788 <strcmp@plt>
  441cc1:	test   eax,eax
  441cc3:	je     441d25 <strcmp@plt+0x3e59d>
  441cc5:	lea    rsi,[rip+0xf4d4]        # 4511a0 <strcmp@plt+0x4da18>
  441ccc:	mov    rdi,r15
  441ccf:	call   403788 <strcmp@plt>
  441cd4:	test   eax,eax
  441cd6:	je     441d2f <strcmp@plt+0x3e5a7>
  441cd8:	lea    rsi,[rip+0xf4c8]        # 4511a7 <strcmp@plt+0x4da1f>
  441cdf:	xor    ebp,ebp
  441ce1:	mov    edi,0x1
  441ce6:	xor    eax,eax
  441ce8:	mov    rdx,r15
  441ceb:	call   42e800 <strcmp@plt+0x2b078>
  441cf0:	mov    rdi,r14
  441cf3:	call   403150 <cfg_free@plt>
  441cf8:	jmp    441be6 <strcmp@plt+0x3e45e>
  441cfd:	mov    rdi,r14
  441d00:	call   440a90 <strcmp@plt+0x3d308>
  441d05:	jmp    441d37 <strcmp@plt+0x3e5af>
  441d07:	mov    rdi,r14
  441d0a:	call   440d50 <strcmp@plt+0x3d5c8>
  441d0f:	jmp    441d37 <strcmp@plt+0x3e5af>
  441d11:	mov    rdi,r14
  441d14:	call   440140 <strcmp@plt+0x3c9b8>
  441d19:	jmp    441d37 <strcmp@plt+0x3e5af>
  441d1b:	mov    rdi,r14
  441d1e:	call   440be0 <strcmp@plt+0x3d458>
  441d23:	jmp    441d37 <strcmp@plt+0x3e5af>
  441d25:	mov    rdi,r14
  441d28:	call   441400 <strcmp@plt+0x3dc78>
  441d2d:	jmp    441d37 <strcmp@plt+0x3e5af>
  441d2f:	mov    rdi,r14
  441d32:	call   441910 <strcmp@plt+0x3e188>
  441d37:	mov    ebp,eax
  441d39:	mov    rdi,r15
  441d3c:	call   403780 <free@plt>
  441d41:	jmp    441ada <strcmp@plt+0x3e352>
  441d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  441d50:	endbr64 
  441d54:	push   r15
  441d56:	lea    r15,[rip+0x20ae3]        # 462840 <strcmp@plt+0x5f0b8>
  441d5d:	push   r14
  441d5f:	mov    r14,rdx
  441d62:	push   r13
  441d64:	mov    r13,rsi
  441d67:	push   r12
  441d69:	mov    r12d,edi
  441d6c:	push   rbp
  441d6d:	lea    rbp,[rip+0x20ad4]        # 462848 <strcmp@plt+0x5f0c0>
  441d74:	push   rbx
  441d75:	sub    rbp,r15
  441d78:	sub    rsp,0x8
  441d7c:	call   403000 <xmlReadMemory@plt-0x30>
  441d81:	sar    rbp,0x3
  441d85:	je     441da6 <strcmp@plt+0x3e61e>
  441d87:	xor    ebx,ebx
  441d89:	nop    DWORD PTR [rax+0x0]
  441d90:	mov    rdx,r14
  441d93:	mov    rsi,r13
  441d96:	mov    edi,r12d
  441d99:	call   QWORD PTR [r15+rbx*8]
  441d9d:	add    rbx,0x1
  441da1:	cmp    rbp,rbx
  441da4:	jne    441d90 <strcmp@plt+0x3e608>
  441da6:	add    rsp,0x8
  441daa:	pop    rbx
  441dab:	pop    rbp
  441dac:	pop    r12
  441dae:	pop    r13
  441db0:	pop    r14
  441db2:	pop    r15
  441db4:	ret    
  441db5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  441dc0:	endbr64 
  441dc4:	ret    

Disassembly of section .fini:

0000000000441dc8 <.fini>:
  441dc8:	endbr64 
  441dcc:	sub    rsp,0x8
  441dd0:	add    rsp,0x8
  441dd4:	ret    
