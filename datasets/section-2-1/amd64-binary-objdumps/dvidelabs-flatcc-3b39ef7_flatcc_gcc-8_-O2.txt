
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000405000 <.init>:
  405000:	endbr64 
  405004:	sub    rsp,0x8
  405008:	mov    rax,QWORD PTR [rip+0x4cfd1]        # 451fe0 <__gmon_start__>
  40500f:	test   rax,rax
  405012:	je     405016 <__ctype_toupper_loc@plt-0x21a>
  405014:	call   rax
  405016:	add    rsp,0x8
  40501a:	ret    

Disassembly of section .plt:

0000000000405020 <.plt>:
  405020:	push   QWORD PTR [rip+0x4cfe2]        # 452008 <fb_value_set_missing@@Base+0x7020>
  405026:	bnd jmp QWORD PTR [rip+0x4cfe3]        # 452010 <fb_value_set_missing@@Base+0x7028>
  40502d:	nop    DWORD PTR [rax]
  405030:	endbr64 
  405034:	push   0x0
  405039:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40503f:	nop
  405040:	endbr64 
  405044:	push   0x1
  405049:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40504f:	nop
  405050:	endbr64 
  405054:	push   0x2
  405059:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40505f:	nop
  405060:	endbr64 
  405064:	push   0x3
  405069:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40506f:	nop
  405070:	endbr64 
  405074:	push   0x4
  405079:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40507f:	nop
  405080:	endbr64 
  405084:	push   0x5
  405089:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40508f:	nop
  405090:	endbr64 
  405094:	push   0x6
  405099:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40509f:	nop
  4050a0:	endbr64 
  4050a4:	push   0x7
  4050a9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  4050af:	nop
  4050b0:	endbr64 
  4050b4:	push   0x8
  4050b9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  4050bf:	nop
  4050c0:	endbr64 
  4050c4:	push   0x9
  4050c9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  4050cf:	nop
  4050d0:	endbr64 
  4050d4:	push   0xa
  4050d9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  4050df:	nop
  4050e0:	endbr64 
  4050e4:	push   0xb
  4050e9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  4050ef:	nop
  4050f0:	endbr64 
  4050f4:	push   0xc
  4050f9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  4050ff:	nop
  405100:	endbr64 
  405104:	push   0xd
  405109:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40510f:	nop
  405110:	endbr64 
  405114:	push   0xe
  405119:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40511f:	nop
  405120:	endbr64 
  405124:	push   0xf
  405129:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40512f:	nop
  405130:	endbr64 
  405134:	push   0x10
  405139:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40513f:	nop
  405140:	endbr64 
  405144:	push   0x11
  405149:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40514f:	nop
  405150:	endbr64 
  405154:	push   0x12
  405159:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40515f:	nop
  405160:	endbr64 
  405164:	push   0x13
  405169:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40516f:	nop
  405170:	endbr64 
  405174:	push   0x14
  405179:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40517f:	nop
  405180:	endbr64 
  405184:	push   0x15
  405189:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40518f:	nop
  405190:	endbr64 
  405194:	push   0x16
  405199:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40519f:	nop
  4051a0:	endbr64 
  4051a4:	push   0x17
  4051a9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  4051af:	nop
  4051b0:	endbr64 
  4051b4:	push   0x18
  4051b9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  4051bf:	nop
  4051c0:	endbr64 
  4051c4:	push   0x19
  4051c9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  4051cf:	nop
  4051d0:	endbr64 
  4051d4:	push   0x1a
  4051d9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  4051df:	nop
  4051e0:	endbr64 
  4051e4:	push   0x1b
  4051e9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  4051ef:	nop
  4051f0:	endbr64 
  4051f4:	push   0x1c
  4051f9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  4051ff:	nop
  405200:	endbr64 
  405204:	push   0x1d
  405209:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40520f:	nop
  405210:	endbr64 
  405214:	push   0x1e
  405219:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40521f:	nop
  405220:	endbr64 
  405224:	push   0x1f
  405229:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x210>
  40522f:	nop

Disassembly of section .plt.sec:

0000000000405230 <__ctype_toupper_loc@plt>:
  405230:	endbr64 
  405234:	bnd jmp QWORD PTR [rip+0x4cddd]        # 452018 <__ctype_toupper_loc@GLIBC_2.3>
  40523b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405240 <free@plt>:
  405240:	endbr64 
  405244:	bnd jmp QWORD PTR [rip+0x4cdd5]        # 452020 <free@GLIBC_2.2.5>
  40524b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405250 <__vfprintf_chk@plt>:
  405250:	endbr64 
  405254:	bnd jmp QWORD PTR [rip+0x4cdcd]        # 452028 <__vfprintf_chk@GLIBC_2.3.4>
  40525b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405260 <strncpy@plt>:
  405260:	endbr64 
  405264:	bnd jmp QWORD PTR [rip+0x4cdc5]        # 452030 <strncpy@GLIBC_2.2.5>
  40526b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405270 <strncmp@plt>:
  405270:	endbr64 
  405274:	bnd jmp QWORD PTR [rip+0x4cdbd]        # 452038 <strncmp@GLIBC_2.2.5>
  40527b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405280 <qsort@plt>:
  405280:	endbr64 
  405284:	bnd jmp QWORD PTR [rip+0x4cdb5]        # 452040 <qsort@GLIBC_2.2.5>
  40528b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405290 <fread@plt>:
  405290:	endbr64 
  405294:	bnd jmp QWORD PTR [rip+0x4cdad]        # 452048 <fread@GLIBC_2.2.5>
  40529b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004052a0 <strtod@plt>:
  4052a0:	endbr64 
  4052a4:	bnd jmp QWORD PTR [rip+0x4cda5]        # 452050 <strtod@GLIBC_2.2.5>
  4052ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004052b0 <fclose@plt>:
  4052b0:	endbr64 
  4052b4:	bnd jmp QWORD PTR [rip+0x4cd9d]        # 452058 <fclose@GLIBC_2.2.5>
  4052bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004052c0 <strlen@plt>:
  4052c0:	endbr64 
  4052c4:	bnd jmp QWORD PTR [rip+0x4cd95]        # 452060 <strlen@GLIBC_2.2.5>
  4052cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004052d0 <__stack_chk_fail@plt>:
  4052d0:	endbr64 
  4052d4:	bnd jmp QWORD PTR [rip+0x4cd8d]        # 452068 <__stack_chk_fail@GLIBC_2.4>
  4052db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004052e0 <strchr@plt>:
  4052e0:	endbr64 
  4052e4:	bnd jmp QWORD PTR [rip+0x4cd85]        # 452070 <strchr@GLIBC_2.2.5>
  4052eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004052f0 <rewind@plt>:
  4052f0:	endbr64 
  4052f4:	bnd jmp QWORD PTR [rip+0x4cd7d]        # 452078 <rewind@GLIBC_2.2.5>
  4052fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405300 <__assert_fail@plt>:
  405300:	endbr64 
  405304:	bnd jmp QWORD PTR [rip+0x4cd75]        # 452080 <__assert_fail@GLIBC_2.2.5>
  40530b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405310 <memset@plt>:
  405310:	endbr64 
  405314:	bnd jmp QWORD PTR [rip+0x4cd6d]        # 452088 <memset@GLIBC_2.2.5>
  40531b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405320 <memchr@plt>:
  405320:	endbr64 
  405324:	bnd jmp QWORD PTR [rip+0x4cd65]        # 452090 <memchr@GLIBC_2.2.5>
  40532b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405330 <memcmp@plt>:
  405330:	endbr64 
  405334:	bnd jmp QWORD PTR [rip+0x4cd5d]        # 452098 <memcmp@GLIBC_2.2.5>
  40533b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405340 <calloc@plt>:
  405340:	endbr64 
  405344:	bnd jmp QWORD PTR [rip+0x4cd55]        # 4520a0 <calloc@GLIBC_2.2.5>
  40534b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405350 <strcmp@plt>:
  405350:	endbr64 
  405354:	bnd jmp QWORD PTR [rip+0x4cd4d]        # 4520a8 <strcmp@GLIBC_2.2.5>
  40535b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405360 <ftell@plt>:
  405360:	endbr64 
  405364:	bnd jmp QWORD PTR [rip+0x4cd45]        # 4520b0 <ftell@GLIBC_2.2.5>
  40536b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405370 <memcpy@plt>:
  405370:	endbr64 
  405374:	bnd jmp QWORD PTR [rip+0x4cd3d]        # 4520b8 <memcpy@GLIBC_2.14>
  40537b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405380 <malloc@plt>:
  405380:	endbr64 
  405384:	bnd jmp QWORD PTR [rip+0x4cd35]        # 4520c0 <malloc@GLIBC_2.2.5>
  40538b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405390 <fseek@plt>:
  405390:	endbr64 
  405394:	bnd jmp QWORD PTR [rip+0x4cd2d]        # 4520c8 <fseek@GLIBC_2.2.5>
  40539b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004053a0 <__vsnprintf_chk@plt>:
  4053a0:	endbr64 
  4053a4:	bnd jmp QWORD PTR [rip+0x4cd25]        # 4520d0 <__vsnprintf_chk@GLIBC_2.3.4>
  4053ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004053b0 <realloc@plt>:
  4053b0:	endbr64 
  4053b4:	bnd jmp QWORD PTR [rip+0x4cd1d]        # 4520d8 <realloc@GLIBC_2.2.5>
  4053bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004053c0 <__printf_chk@plt>:
  4053c0:	endbr64 
  4053c4:	bnd jmp QWORD PTR [rip+0x4cd15]        # 4520e0 <__printf_chk@GLIBC_2.3.4>
  4053cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004053d0 <fopen@plt>:
  4053d0:	endbr64 
  4053d4:	bnd jmp QWORD PTR [rip+0x4cd0d]        # 4520e8 <fopen@GLIBC_2.2.5>
  4053db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004053e0 <exit@plt>:
  4053e0:	endbr64 
  4053e4:	bnd jmp QWORD PTR [rip+0x4cd05]        # 4520f0 <exit@GLIBC_2.2.5>
  4053eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004053f0 <fwrite@plt>:
  4053f0:	endbr64 
  4053f4:	bnd jmp QWORD PTR [rip+0x4ccfd]        # 4520f8 <fwrite@GLIBC_2.2.5>
  4053fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405400 <__fprintf_chk@plt>:
  405400:	endbr64 
  405404:	bnd jmp QWORD PTR [rip+0x4ccf5]        # 452100 <__fprintf_chk@GLIBC_2.3.4>
  40540b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405410 <posix_memalign@plt>:
  405410:	endbr64 
  405414:	bnd jmp QWORD PTR [rip+0x4cced]        # 452108 <posix_memalign@GLIBC_2.2.5>
  40541b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405420 <__sprintf_chk@plt>:
  405420:	endbr64 
  405424:	bnd jmp QWORD PTR [rip+0x4cce5]        # 452110 <__sprintf_chk@GLIBC_2.3.4>
  40542b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000405430 <main@@Base-0x10>:
  405430:	movzx  eax,BYTE PTR ds:0x0
  405438:	ud2    
  40543a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405440 <main@@Base>:
  405440:	endbr64 
  405444:	push   r13
  405446:	push   r12
  405448:	push   rbp
  405449:	push   rbx
  40544a:	sub    rsp,0x128
  405451:	mov    rax,QWORD PTR fs:0x28
  40545a:	mov    QWORD PTR [rsp+0x118],rax
  405462:	xor    eax,eax
  405464:	cmp    edi,0x1
  405467:	jle    40584d <main@@Base+0x40d>
  40546d:	mov    ebp,edi
  40546f:	mov    r13,rsp
  405472:	movsxd rbx,ebp
  405475:	mov    rdi,r13
  405478:	shl    rbx,0x3
  40547c:	mov    r12,rsi
  40547f:	call   406200 <flatcc_init_options@@Base>
  405484:	mov    rdi,rbx
  405487:	call   405380 <malloc@plt>
  40548c:	mov    QWORD PTR [rsp+0xf0],rax
  405494:	test   rax,rax
  405497:	je     405806 <main@@Base+0x3c6>
  40549d:	mov    rdi,rbx
  4054a0:	call   405380 <malloc@plt>
  4054a5:	mov    QWORD PTR [rsp+0xf8],rax
  4054ad:	test   rax,rax
  4054b0:	je     4057d4 <main@@Base+0x394>
  4054b6:	mov    rdx,r13
  4054b9:	mov    rsi,r12
  4054bc:	mov    edi,ebp
  4054be:	call   406110 <parse_opts@@Base>
  4054c3:	mov    edx,DWORD PTR [rsp+0xbc]
  4054ca:	test   edx,edx
  4054cc:	jne    40559d <main@@Base+0x15d>
  4054d2:	mov    eax,DWORD PTR [rsp+0x104]
  4054d9:	mov    DWORD PTR [rsp+0xb4],0x0
  4054e4:	test   eax,eax
  4054e6:	jne    4055c5 <main@@Base+0x185>
  4054ec:	cmp    DWORD PTR [rsp+0xb0],0x0
  4054f4:	je     4056eb <main@@Base+0x2ab>
  4054fa:	cmp    DWORD PTR [rsp+0xd4],0x0
  405502:	jne    4056eb <main@@Base+0x2ab>
  405508:	xor    ecx,ecx
  40550a:	xor    edx,edx
  40550c:	xor    esi,esi
  40550e:	mov    rdi,r13
  405511:	call   406300 <flatcc_create_context@@Base>
  405516:	mov    rbx,rax
  405519:	test   rax,rax
  40551c:	je     4056af <main@@Base+0x26f>
  405522:	mov    rdi,rax
  405525:	call   406470 <flatcc_generate_files@@Base>
  40552a:	mov    ebp,eax
  40552c:	test   eax,eax
  40552e:	je     40570d <main@@Base+0x2cd>
  405534:	mov    rdi,rbx
  405537:	call   4065f0 <flatcc_destroy_context@@Base>
  40553c:	mov    rbx,QWORD PTR [rip+0x4caa5]        # 451fe8 <stderr@GLIBC_2.2.5>
  405543:	mov    rdi,QWORD PTR [rbx]
  405546:	lea    rdx,[rip+0x2a158]        # 42f6a5 <_IO_stdin_used@@Base+0x16a5>
  40554d:	mov    esi,0x1
  405552:	xor    eax,eax
  405554:	call   405400 <__fprintf_chk@plt>
  405559:	or     ebp,0xffffffff
  40555c:	mov    rdi,QWORD PTR [rsp+0xf0]
  405564:	call   405240 <free@plt>
  405569:	mov    rdi,QWORD PTR [rsp+0xf8]
  405571:	call   405240 <free@plt>
  405576:	mov    rcx,QWORD PTR [rsp+0x118]
  40557e:	xor    rcx,QWORD PTR fs:0x28
  405587:	mov    eax,ebp
  405589:	jne    4057cf <main@@Base+0x38f>
  40558f:	add    rsp,0x128
  405596:	pop    rbx
  405597:	pop    rbp
  405598:	pop    r12
  40559a:	pop    r13
  40559c:	ret    
  40559d:	cmp    DWORD PTR [rsp+0xb0],0x0
  4055a5:	je     4056d1 <main@@Base+0x291>
  4055ab:	mov    eax,DWORD PTR [rsp+0x104]
  4055b2:	mov    DWORD PTR [rsp+0xb4],0x1
  4055bd:	test   eax,eax
  4055bf:	je     4054fa <main@@Base+0xba>
  4055c5:	mov    rsi,QWORD PTR [rsp+0xb8]
  4055cd:	mov    edi,DWORD PTR [rsp+0xc0]
  4055d4:	or     rsi,QWORD PTR [rsp+0xb0]
  4055dc:	mov    ecx,DWORD PTR [rsp+0xd4]
  4055e3:	jne    4055fb <main@@Base+0x1bb>
  4055e5:	mov    esi,DWORD PTR [rsp+0xc4]
  4055ec:	or     esi,edi
  4055ee:	or     esi,DWORD PTR [rsp+0xc8]
  4055f5:	je     40577a <main@@Base+0x33a>
  4055fb:	test   ecx,ecx
  4055fd:	je     405721 <main@@Base+0x2e1>
  405603:	cmp    DWORD PTR [rsp+0x80],0x0
  40560b:	jne    40582b <main@@Base+0x3eb>
  405611:	cmp    QWORD PTR [rsp+0x98],0x0
  40561a:	jne    40578b <main@@Base+0x34b>
  405620:	cmp    QWORD PTR [rsp+0x90],0x0
  405629:	je     40563a <main@@Base+0x1fa>
  40562b:	cmp    QWORD PTR [rsp+0x88],0x0
  405634:	je     4057ad <main@@Base+0x36d>
  40563a:	mov    r12,QWORD PTR [rsp+0xf8]
  405642:	xor    ebp,ebp
  405644:	test   eax,eax
  405646:	jg     405697 <main@@Base+0x257>
  405648:	jmp    40571a <main@@Base+0x2da>
  40564d:	nop    DWORD PTR [rax]
  405650:	mov    rsi,QWORD PTR [r12+rbp*8]
  405654:	mov    rdi,rax
  405657:	call   406640 <flatcc_parse_file@@Base>
  40565c:	test   eax,eax
  40565e:	jne    405534 <main@@Base+0xf4>
  405664:	mov    rdi,rbx
  405667:	call   406470 <flatcc_generate_files@@Base>
  40566c:	test   eax,eax
  40566e:	jne    405534 <main@@Base+0xf4>
  405674:	mov    rdi,rbx
  405677:	inc    rbp
  40567a:	call   4065f0 <flatcc_destroy_context@@Base>
  40567f:	mov    DWORD PTR [rsp+0xa0],0x1
  40568a:	cmp    DWORD PTR [rsp+0x104],ebp
  405691:	jle    40571a <main@@Base+0x2da>
  405697:	mov    rsi,QWORD PTR [r12+rbp*8]
  40569b:	xor    ecx,ecx
  40569d:	xor    edx,edx
  40569f:	mov    rdi,r13
  4056a2:	call   406300 <flatcc_create_context@@Base>
  4056a7:	mov    rbx,rax
  4056aa:	test   rax,rax
  4056ad:	jne    405650 <main@@Base+0x210>
  4056af:	mov    rbx,QWORD PTR [rip+0x4c932]        # 451fe8 <stderr@GLIBC_2.2.5>
  4056b6:	lea    rdx,[rip+0x29d6b]        # 42f428 <_IO_stdin_used@@Base+0x1428>
  4056bd:	mov    rdi,QWORD PTR [rbx]
  4056c0:	mov    esi,0x1
  4056c5:	xor    eax,eax
  4056c7:	call   405400 <__fprintf_chk@plt>
  4056cc:	jmp    405543 <main@@Base+0x103>
  4056d1:	mov    eax,DWORD PTR [rsp+0x104]
  4056d8:	mov    DWORD PTR [rsp+0xb4],0x0
  4056e3:	test   eax,eax
  4056e5:	jne    4055c5 <main@@Base+0x185>
  4056eb:	mov    rbx,QWORD PTR [rip+0x4c8f6]        # 451fe8 <stderr@GLIBC_2.2.5>
  4056f2:	lea    rdx,[rip+0x29f9a]        # 42f693 <_IO_stdin_used@@Base+0x1693>
  4056f9:	mov    rdi,QWORD PTR [rbx]
  4056fc:	mov    esi,0x1
  405701:	xor    eax,eax
  405703:	call   405400 <__fprintf_chk@plt>
  405708:	jmp    405543 <main@@Base+0x103>
  40570d:	mov    rdi,rbx
  405710:	call   4065f0 <flatcc_destroy_context@@Base>
  405715:	jmp    40555c <main@@Base+0x11c>
  40571a:	xor    ebp,ebp
  40571c:	jmp    40555c <main@@Base+0x11c>
  405721:	or     edx,edi
  405723:	jne    40577e <main@@Base+0x33e>
  405725:	cmp    QWORD PTR [rsp+0x90],0x0
  40572e:	je     40573b <main@@Base+0x2fb>
  405730:	cmp    QWORD PTR [rsp+0x88],0x0
  405739:	je     4057ad <main@@Base+0x36d>
  40573b:	cmp    DWORD PTR [rsp+0x80],0x0
  405743:	je     40563a <main@@Base+0x1fa>
  405749:	cmp    QWORD PTR [rsp+0x98],0x0
  405752:	je     40563a <main@@Base+0x1fa>
  405758:	mov    rbx,QWORD PTR [rip+0x4c889]        # 451fe8 <stderr@GLIBC_2.2.5>
  40575f:	lea    rdx,[rip+0x29daa]        # 42f510 <_IO_stdin_used@@Base+0x1510>
  405766:	mov    rdi,QWORD PTR [rbx]
  405769:	mov    esi,0x1
  40576e:	xor    eax,eax
  405770:	call   405400 <__fprintf_chk@plt>
  405775:	jmp    405543 <main@@Base+0x103>
  40577a:	test   ecx,ecx
  40577c:	jne    405725 <main@@Base+0x2e5>
  40577e:	mov    DWORD PTR [rsp+0xb8],0x1
  405789:	jmp    405725 <main@@Base+0x2e5>
  40578b:	mov    rbx,QWORD PTR [rip+0x4c856]        # 451fe8 <stderr@GLIBC_2.2.5>
  405792:	lea    rdx,[rip+0x29d07]        # 42f4a0 <_IO_stdin_used@@Base+0x14a0>
  405799:	mov    rdi,QWORD PTR [rbx]
  40579c:	mov    esi,0x1
  4057a1:	xor    eax,eax
  4057a3:	call   405400 <__fprintf_chk@plt>
  4057a8:	jmp    405543 <main@@Base+0x103>
  4057ad:	mov    rbx,QWORD PTR [rip+0x4c834]        # 451fe8 <stderr@GLIBC_2.2.5>
  4057b4:	lea    rdx,[rip+0x29d25]        # 42f4e0 <_IO_stdin_used@@Base+0x14e0>
  4057bb:	mov    rdi,QWORD PTR [rbx]
  4057be:	mov    esi,0x1
  4057c3:	xor    eax,eax
  4057c5:	call   405400 <__fprintf_chk@plt>
  4057ca:	jmp    405543 <main@@Base+0x103>
  4057cf:	call   4052d0 <__stack_chk_fail@plt>
  4057d4:	mov    rax,QWORD PTR [rip+0x4c80d]        # 451fe8 <stderr@GLIBC_2.2.5>
  4057db:	lea    rdx,[rip+0x29e96]        # 42f678 <_IO_stdin_used@@Base+0x1678>
  4057e2:	mov    rdi,QWORD PTR [rax]
  4057e5:	mov    esi,0x1
  4057ea:	xor    eax,eax
  4057ec:	call   405400 <__fprintf_chk@plt>
  4057f1:	mov    rdi,QWORD PTR [rsp+0xf0]
  4057f9:	call   405240 <free@plt>
  4057fe:	or     edi,0xffffffff
  405801:	call   4053e0 <exit@plt>
  405806:	mov    rax,QWORD PTR [rip+0x4c7db]        # 451fe8 <stderr@GLIBC_2.2.5>
  40580d:	lea    rdx,[rip+0x29e64]        # 42f678 <_IO_stdin_used@@Base+0x1678>
  405814:	mov    rdi,QWORD PTR [rax]
  405817:	mov    esi,0x1
  40581c:	xor    eax,eax
  40581e:	call   405400 <__fprintf_chk@plt>
  405823:	or     edi,0xffffffff
  405826:	call   4053e0 <exit@plt>
  40582b:	mov    rbx,QWORD PTR [rip+0x4c7b6]        # 451fe8 <stderr@GLIBC_2.2.5>
  405832:	lea    rdx,[rip+0x29c27]        # 42f460 <_IO_stdin_used@@Base+0x1460>
  405839:	mov    rdi,QWORD PTR [rbx]
  40583c:	mov    esi,0x1
  405841:	xor    eax,eax
  405843:	call   405400 <__fprintf_chk@plt>
  405848:	jmp    405543 <main@@Base+0x103>
  40584d:	mov    rax,QWORD PTR [rip+0x4c794]        # 451fe8 <stderr@GLIBC_2.2.5>
  405854:	mov    rdi,QWORD PTR [rax]
  405857:	call   405960 <usage@@Base>
  40585c:	or     edi,0xffffffff
  40585f:	call   4053e0 <exit@plt>
  405864:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40586e:	xchg   ax,ax

0000000000405870 <_start@@Base>:
  405870:	endbr64 
  405874:	xor    ebp,ebp
  405876:	mov    r9,rdx
  405879:	pop    rsi
  40587a:	mov    rdx,rsp
  40587d:	and    rsp,0xfffffffffffffff0
  405881:	push   rax
  405882:	push   rsp
  405883:	mov    r8,0x42da60
  40588a:	mov    rcx,0x42d9f0
  405891:	mov    rdi,0x405440
  405898:	call   QWORD PTR [rip+0x4c73a]        # 451fd8 <__libc_start_main@GLIBC_2.2.5>
  40589e:	hlt    
  40589f:	nop
  4058a0:	endbr64 
  4058a4:	ret    
  4058a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058af:	nop
  4058b0:	mov    eax,0x452128
  4058b5:	cmp    rax,0x452128
  4058bb:	je     4058d0 <_start@@Base+0x60>
  4058bd:	mov    eax,0x0
  4058c2:	test   rax,rax
  4058c5:	je     4058d0 <_start@@Base+0x60>
  4058c7:	mov    edi,0x452128
  4058cc:	jmp    rax
  4058ce:	xchg   ax,ax
  4058d0:	ret    
  4058d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4058dc:	nop    DWORD PTR [rax+0x0]
  4058e0:	mov    esi,0x452128
  4058e5:	sub    rsi,0x452128
  4058ec:	sar    rsi,0x3
  4058f0:	mov    rax,rsi
  4058f3:	shr    rax,0x3f
  4058f7:	add    rsi,rax
  4058fa:	sar    rsi,1
  4058fd:	je     405910 <_start@@Base+0xa0>
  4058ff:	mov    eax,0x0
  405904:	test   rax,rax
  405907:	je     405910 <_start@@Base+0xa0>
  405909:	mov    edi,0x452128
  40590e:	jmp    rax
  405910:	ret    
  405911:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40591c:	nop    DWORD PTR [rax+0x0]
  405920:	endbr64 
  405924:	cmp    BYTE PTR [rip+0x4c815],0x0        # 452140 <__bss_start@@Base+0x18>
  40592b:	jne    405940 <_start@@Base+0xd0>
  40592d:	push   rbp
  40592e:	mov    rbp,rsp
  405931:	call   4058b0 <_start@@Base+0x40>
  405936:	mov    BYTE PTR [rip+0x4c803],0x1        # 452140 <__bss_start@@Base+0x18>
  40593d:	pop    rbp
  40593e:	ret    
  40593f:	nop
  405940:	ret    
  405941:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40594c:	nop    DWORD PTR [rax+0x0]
  405950:	endbr64 
  405954:	jmp    4058e0 <_start@@Base+0x70>
  405956:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405960 <usage@@Base>:
  405960:	endbr64 
  405964:	push   rbx
  405965:	lea    rcx,[rip+0x2869c]        # 42e008 <_IO_stdin_used@@Base+0x8>
  40596c:	mov    rbx,rdi
  40596f:	lea    rdx,[rip+0x41a83]        # 4473f9 <_IO_stdin_used@@Base+0x193f9>
  405976:	mov    esi,0x1
  40597b:	xor    eax,eax
  40597d:	call   405400 <__fprintf_chk@plt>
  405982:	mov    rdi,rbx
  405985:	lea    rcx,[rip+0x29bab]        # 42f537 <_IO_stdin_used@@Base+0x1537>
  40598c:	lea    rdx,[rip+0x29baa]        # 42f53d <_IO_stdin_used@@Base+0x153d>
  405993:	mov    esi,0x1
  405998:	xor    eax,eax
  40599a:	call   405400 <__fprintf_chk@plt>
  40599f:	mov    rdi,rbx
  4059a2:	lea    rdx,[rip+0x28697]        # 42e040 <_IO_stdin_used@@Base+0x40>
  4059a9:	mov    esi,0x1
  4059ae:	xor    eax,eax
  4059b0:	call   405400 <__fprintf_chk@plt>
  4059b5:	mov    rdi,rbx
  4059b8:	lea    rdx,[rip+0x286a9]        # 42e068 <_IO_stdin_used@@Base+0x68>
  4059bf:	mov    esi,0x1
  4059c4:	xor    eax,eax
  4059c6:	pop    rbx
  4059c7:	jmp    405400 <__fprintf_chk@plt>
  4059cc:	nop    DWORD PTR [rax+0x0]

00000000004059d0 <help@@Base>:
  4059d0:	endbr64 
  4059d4:	push   rbx
  4059d5:	mov    rbx,rdi
  4059d8:	call   405960 <usage@@Base>
  4059dd:	mov    rdi,rbx
  4059e0:	lea    rdx,[rip+0x28c09]        # 42e5f0 <_IO_stdin_used@@Base+0x5f0>
  4059e7:	mov    esi,0x1
  4059ec:	xor    eax,eax
  4059ee:	pop    rbx
  4059ef:	jmp    405400 <__fprintf_chk@plt>
  4059f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4059ff:	nop

0000000000405a00 <parse_bool_arg@@Base>:
  405a00:	endbr64 
  405a04:	mov    rdx,rdi
  405a07:	mov    ecx,0x2
  405a0c:	lea    rdi,[rip+0x32946]        # 438359 <_IO_stdin_used@@Base+0xa359>
  405a13:	mov    rsi,rdx
  405a16:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405a18:	seta   al
  405a1b:	sbb    al,0x0
  405a1d:	movsx  eax,al
  405a20:	test   eax,eax
  405a22:	je     405a7c <parse_bool_arg@@Base+0x7c>
  405a24:	mov    ecx,0x3
  405a29:	lea    rdi,[rip+0x29b1a]        # 42f54a <_IO_stdin_used@@Base+0x154a>
  405a30:	mov    rsi,rdx
  405a33:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405a35:	seta   al
  405a38:	sbb    al,0x0
  405a3a:	movsx  eax,al
  405a3d:	test   eax,eax
  405a3f:	je     405a7c <parse_bool_arg@@Base+0x7c>
  405a41:	mov    ecx,0x2
  405a46:	lea    rdi,[rip+0x44c7a]        # 44a6c7 <fb_schema_table_missing@@Base+0x3207>
  405a4d:	mov    rsi,rdx
  405a50:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405a52:	mov    eax,0x1
  405a57:	seta   cl
  405a5a:	sbb    cl,0x0
  405a5d:	test   cl,cl
  405a5f:	je     405a7c <parse_bool_arg@@Base+0x7c>
  405a61:	mov    ecx,0x4
  405a66:	lea    rdi,[rip+0x29ae0]        # 42f54d <_IO_stdin_used@@Base+0x154d>
  405a6d:	mov    rsi,rdx
  405a70:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405a72:	seta   cl
  405a75:	sbb    cl,0x0
  405a78:	test   cl,cl
  405a7a:	jne    405a80 <parse_bool_arg@@Base+0x80>
  405a7c:	ret    
  405a7d:	nop    DWORD PTR [rax]
  405a80:	sub    rsp,0x8
  405a84:	mov    rax,QWORD PTR [rip+0x4c55d]        # 451fe8 <stderr@GLIBC_2.2.5>
  405a8b:	mov    rcx,rdx
  405a8e:	mov    rdi,QWORD PTR [rax]
  405a91:	lea    rdx,[rip+0x297a0]        # 42f238 <_IO_stdin_used@@Base+0x1238>
  405a98:	mov    esi,0x1
  405a9d:	xor    eax,eax
  405a9f:	call   405400 <__fprintf_chk@plt>
  405aa4:	mov    eax,0xffffffff
  405aa9:	add    rsp,0x8
  405aad:	ret    
  405aae:	xchg   ax,ax

0000000000405ab0 <match_long_arg@@Base>:
  405ab0:	endbr64 
  405ab4:	push   rbp
  405ab5:	mov    rbp,rdi
  405ab8:	push   rbx
  405ab9:	mov    rbx,rdx
  405abc:	sub    rsp,0x8
  405ac0:	call   405270 <strncmp@plt>
  405ac5:	xor    edx,edx
  405ac7:	test   eax,eax
  405ac9:	jne    405adb <match_long_arg@@Base+0x2b>
  405acb:	mov    rdi,rbp
  405ace:	call   4052c0 <strlen@plt>
  405ad3:	xor    edx,edx
  405ad5:	cmp    rax,rbx
  405ad8:	sete   dl
  405adb:	add    rsp,0x8
  405adf:	pop    rbx
  405ae0:	mov    eax,edx
  405ae2:	pop    rbp
  405ae3:	ret    
  405ae4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405aef:	nop

0000000000405af0 <set_opt@@Base>:
  405af0:	endbr64 
  405af4:	push   r14
  405af6:	mov    r14,rdi
  405af9:	mov    rdi,rsi
  405afc:	push   r13
  405afe:	push   r12
  405b00:	mov    r12,rdx
  405b03:	push   rbp
  405b04:	push   rbx
  405b05:	mov    rbx,rsi
  405b08:	call   4052c0 <strlen@plt>
  405b0d:	mov    esi,0x3d
  405b12:	mov    rdi,rbx
  405b15:	mov    r13,rax
  405b18:	call   4052e0 <strchr@plt>
  405b1d:	mov    rbp,rax
  405b20:	test   rax,rax
  405b23:	je     405b2f <set_opt@@Base+0x3f>
  405b25:	mov    r13,rax
  405b28:	lea    r12,[rax+0x1]
  405b2c:	sub    r13,rbx
  405b2f:	cmp    BYTE PTR [rbx],0x68
  405b32:	je     405c30 <set_opt@@Base+0x140>
  405b38:	mov    ecx,0x6
  405b3d:	lea    rsi,[rip+0x29a0d]        # 42f551 <_IO_stdin_used@@Base+0x1551>
  405b44:	mov    rdi,rbx
  405b47:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405b49:	seta   al
  405b4c:	sbb    al,0x0
  405b4e:	test   al,al
  405b50:	je     405c30 <set_opt@@Base+0x140>
  405b56:	mov    ecx,0x9
  405b5b:	lea    rsi,[rip+0x299f5]        # 42f557 <_IO_stdin_used@@Base+0x1557>
  405b62:	mov    rdi,rbx
  405b65:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405b67:	seta   al
  405b6a:	sbb    al,0x0
  405b6c:	test   al,al
  405b6e:	je     405c68 <set_opt@@Base+0x178>
  405b74:	mov    ecx,0x8
  405b79:	lea    rsi,[rip+0x299e0]        # 42f560 <_IO_stdin_used@@Base+0x1560>
  405b80:	mov    rdi,rbx
  405b83:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405b85:	seta   al
  405b88:	sbb    al,0x0
  405b8a:	movsx  eax,al
  405b8d:	test   eax,eax
  405b8f:	je     405c50 <set_opt@@Base+0x160>
  405b95:	mov    ecx,0x8
  405b9a:	lea    rsi,[rip+0x299c7]        # 42f568 <_IO_stdin_used@@Base+0x1568>
  405ba1:	mov    rdi,rbx
  405ba4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405ba6:	seta   al
  405ba9:	sbb    al,0x0
  405bab:	movsx  eax,al
  405bae:	test   eax,eax
  405bb0:	je     405cb0 <set_opt@@Base+0x1c0>
  405bb6:	mov    ecx,0xd
  405bbb:	lea    rsi,[rip+0x299ae]        # 42f570 <_IO_stdin_used@@Base+0x1570>
  405bc2:	mov    rdi,rbx
  405bc5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405bc7:	seta   al
  405bca:	sbb    al,0x0
  405bcc:	movsx  eax,al
  405bcf:	test   eax,eax
  405bd1:	je     405d70 <set_opt@@Base+0x280>
  405bd7:	mov    ecx,0xe
  405bdc:	lea    rsi,[rip+0x2999a]        # 42f57d <_IO_stdin_used@@Base+0x157d>
  405be3:	mov    rdi,rbx
  405be6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405be8:	seta   al
  405beb:	sbb    al,0x0
  405bed:	movsx  eax,al
  405bf0:	test   eax,eax
  405bf2:	je     405d80 <set_opt@@Base+0x290>
  405bf8:	mov    ecx,0x6
  405bfd:	lea    rsi,[rip+0x29987]        # 42f58b <_IO_stdin_used@@Base+0x158b>
  405c04:	mov    rdi,rbx
  405c07:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405c09:	seta   al
  405c0c:	sbb    al,0x0
  405c0e:	movsx  eax,al
  405c11:	test   eax,eax
  405c13:	jne    405cc0 <set_opt@@Base+0x1d0>
  405c19:	movabs rdx,0x100000001
  405c23:	mov    QWORD PTR [r14+0xc4],rdx
  405c2a:	jmp    405c5b <set_opt@@Base+0x16b>
  405c2c:	nop    DWORD PTR [rax+0x0]
  405c30:	mov    rax,QWORD PTR [rip+0x4c399]        # 451fd0 <stdout@GLIBC_2.2.5>
  405c37:	mov    rdi,QWORD PTR [rax]
  405c3a:	call   4059d0 <help@@Base>
  405c3f:	xor    edi,edi
  405c41:	call   4053e0 <exit@plt>
  405c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c50:	mov    DWORD PTR [r14+0x80],0x1
  405c5b:	pop    rbx
  405c5c:	pop    rbp
  405c5d:	pop    r12
  405c5f:	pop    r13
  405c61:	pop    r14
  405c63:	ret    
  405c64:	nop    DWORD PTR [rax+0x0]
  405c68:	mov    rbx,QWORD PTR [rip+0x4c379]        # 451fe8 <stderr@GLIBC_2.2.5>
  405c6f:	lea    rcx,[rip+0x28392]        # 42e008 <_IO_stdin_used@@Base+0x8>
  405c76:	mov    rdi,QWORD PTR [rbx]
  405c79:	lea    rdx,[rip+0x41779]        # 4473f9 <_IO_stdin_used@@Base+0x193f9>
  405c80:	mov    esi,0x1
  405c85:	call   405400 <__fprintf_chk@plt>
  405c8a:	mov    rdi,QWORD PTR [rbx]
  405c8d:	lea    rcx,[rip+0x298a3]        # 42f537 <_IO_stdin_used@@Base+0x1537>
  405c94:	lea    rdx,[rip+0x298a2]        # 42f53d <_IO_stdin_used@@Base+0x153d>
  405c9b:	mov    esi,0x1
  405ca0:	xor    eax,eax
  405ca2:	call   405400 <__fprintf_chk@plt>
  405ca7:	xor    edi,edi
  405ca9:	call   4053e0 <exit@plt>
  405cae:	xchg   ax,ax
  405cb0:	mov    DWORD PTR [r14+0xd4],0x1
  405cbb:	jmp    405c5b <set_opt@@Base+0x16b>
  405cbd:	nop    DWORD PTR [rax]
  405cc0:	mov    rdx,r13
  405cc3:	mov    rsi,rbx
  405cc6:	lea    rdi,[rip+0x298c4]        # 42f591 <_IO_stdin_used@@Base+0x1591>
  405ccd:	call   405ab0 <match_long_arg@@Base>
  405cd2:	test   eax,eax
  405cd4:	je     405d90 <set_opt@@Base+0x2a0>
  405cda:	mov    rbx,QWORD PTR [rip+0x4c307]        # 451fe8 <stderr@GLIBC_2.2.5>
  405ce1:	xor    eax,eax
  405ce3:	mov    rdi,QWORD PTR [rbx]
  405ce6:	lea    rdx,[rip+0x29593]        # 42f280 <_IO_stdin_used@@Base+0x1280>
  405ced:	mov    esi,0x1
  405cf2:	call   405400 <__fprintf_chk@plt>
  405cf7:	test   r12,r12
  405cfa:	je     405e7c <set_opt@@Base+0x38c>
  405d00:	mov    rdi,r12
  405d03:	call   405a00 <parse_bool_arg@@Base>
  405d08:	mov    DWORD PTR [r14+0xd8],eax
  405d0f:	test   eax,eax
  405d11:	js     405dca <set_opt@@Base+0x2da>
  405d17:	test   rbp,rbp
  405d1a:	je     405d5d <set_opt@@Base+0x26d>
  405d1c:	xor    eax,eax
  405d1e:	jmp    405c5b <set_opt@@Base+0x16b>
  405d23:	mov    rdx,r13
  405d26:	mov    rsi,rbx
  405d29:	lea    rdi,[rip+0x29882]        # 42f5b2 <_IO_stdin_used@@Base+0x15b2>
  405d30:	call   405ab0 <match_long_arg@@Base>
  405d35:	test   eax,eax
  405d37:	je     405dd8 <set_opt@@Base+0x2e8>
  405d3d:	test   r12,r12
  405d40:	je     405e9a <set_opt@@Base+0x3aa>
  405d46:	mov    QWORD PTR [r14+0x88],r12
  405d4d:	mov    DWORD PTR [r14+0x84],0x1
  405d58:	test   rbp,rbp
  405d5b:	jne    405d1c <set_opt@@Base+0x22c>
  405d5d:	mov    eax,0x2
  405d62:	jmp    405c5b <set_opt@@Base+0x16b>
  405d67:	nop    WORD PTR [rax+rax*1+0x0]
  405d70:	mov    DWORD PTR [r14+0xc4],0x1
  405d7b:	jmp    405c5b <set_opt@@Base+0x16b>
  405d80:	mov    DWORD PTR [r14+0xc8],0x1
  405d8b:	jmp    405c5b <set_opt@@Base+0x16b>
  405d90:	mov    rdx,r13
  405d93:	mov    rsi,rbx
  405d96:	lea    rdi,[rip+0x29806]        # 42f5a3 <_IO_stdin_used@@Base+0x15a3>
  405d9d:	call   405ab0 <match_long_arg@@Base>
  405da2:	test   eax,eax
  405da4:	je     405d23 <set_opt@@Base+0x233>
  405daa:	test   r12,r12
  405dad:	je     405ebc <set_opt@@Base+0x3cc>
  405db3:	mov    rdi,r12
  405db6:	call   405a00 <parse_bool_arg@@Base>
  405dbb:	mov    DWORD PTR [r14+0xdc],eax
  405dc2:	test   eax,eax
  405dc4:	jns    405d17 <set_opt@@Base+0x227>
  405dca:	or     edi,0xffffffff
  405dcd:	call   4053e0 <exit@plt>
  405dd2:	nop    WORD PTR [rax+rax*1+0x0]
  405dd8:	mov    rdx,r13
  405ddb:	mov    rsi,rbx
  405dde:	lea    rdi,[rip+0x297d6]        # 42f5bb <_IO_stdin_used@@Base+0x15bb>
  405de5:	call   405ab0 <match_long_arg@@Base>
  405dea:	test   eax,eax
  405dec:	je     405e15 <set_opt@@Base+0x325>
  405dee:	lea    rdx,[rip+0x2958b]        # 42f380 <_IO_stdin_used@@Base+0x1380>
  405df5:	test   r12,r12
  405df8:	je     405ea1 <set_opt@@Base+0x3b1>
  405dfe:	mov    QWORD PTR [r14+0x90],r12
  405e05:	test   rbp,rbp
  405e08:	je     405d5d <set_opt@@Base+0x26d>
  405e0e:	xor    eax,eax
  405e10:	jmp    405c5b <set_opt@@Base+0x16b>
  405e15:	mov    rdx,r13
  405e18:	mov    rsi,rbx
  405e1b:	lea    rdi,[rip+0x297a4]        # 42f5c6 <_IO_stdin_used@@Base+0x15c6>
  405e22:	call   405ab0 <match_long_arg@@Base>
  405e27:	test   eax,eax
  405e29:	je     405e43 <set_opt@@Base+0x353>
  405e2b:	lea    rdx,[rip+0x29576]        # 42f3a8 <_IO_stdin_used@@Base+0x13a8>
  405e32:	test   r12,r12
  405e35:	je     405ea1 <set_opt@@Base+0x3b1>
  405e37:	mov    QWORD PTR [r14+0x98],r12
  405e3e:	jmp    405d17 <set_opt@@Base+0x227>
  405e43:	mov    rdx,r13
  405e46:	mov    rsi,rbx
  405e49:	lea    rdi,[rip+0x2977f]        # 42f5cf <_IO_stdin_used@@Base+0x15cf>
  405e50:	call   405ab0 <match_long_arg@@Base>
  405e55:	test   eax,eax
  405e57:	je     405ec5 <set_opt@@Base+0x3d5>
  405e59:	lea    rdx,[rip+0x29570]        # 42f3d0 <_IO_stdin_used@@Base+0x13d0>
  405e60:	test   r12,r12
  405e63:	je     405ea1 <set_opt@@Base+0x3b1>
  405e65:	mov    QWORD PTR [r14+0xe8],r12
  405e6c:	test   rbp,rbp
  405e6f:	je     405d5d <set_opt@@Base+0x26d>
  405e75:	xor    eax,eax
  405e77:	jmp    405c5b <set_opt@@Base+0x16b>
  405e7c:	mov    rdi,QWORD PTR [rbx]
  405e7f:	lea    rdx,[rip+0x29472]        # 42f2f8 <_IO_stdin_used@@Base+0x12f8>
  405e86:	mov    esi,0x1
  405e8b:	xor    eax,eax
  405e8d:	call   405400 <__fprintf_chk@plt>
  405e92:	or     edi,0xffffffff
  405e95:	call   4053e0 <exit@plt>
  405e9a:	lea    rdx,[rip+0x294b7]        # 42f358 <_IO_stdin_used@@Base+0x1358>
  405ea1:	mov    rax,QWORD PTR [rip+0x4c140]        # 451fe8 <stderr@GLIBC_2.2.5>
  405ea8:	mov    esi,0x1
  405ead:	mov    rdi,QWORD PTR [rax]
  405eb0:	xor    eax,eax
  405eb2:	call   405400 <__fprintf_chk@plt>
  405eb7:	jmp    405dca <set_opt@@Base+0x2da>
  405ebc:	lea    rdx,[rip+0x29465]        # 42f328 <_IO_stdin_used@@Base+0x1328>
  405ec3:	jmp    405ea1 <set_opt@@Base+0x3b1>
  405ec5:	mov    rdx,r13
  405ec8:	mov    rsi,rbx
  405ecb:	lea    rdi,[rip+0x29704]        # 42f5d6 <_IO_stdin_used@@Base+0x15d6>
  405ed2:	call   405ab0 <match_long_arg@@Base>
  405ed7:	test   eax,eax
  405ed9:	je     405ef3 <set_opt@@Base+0x403>
  405edb:	lea    rdx,[rip+0x296fc]        # 42f5de <_IO_stdin_used@@Base+0x15de>
  405ee2:	test   r12,r12
  405ee5:	je     405ea1 <set_opt@@Base+0x3b1>
  405ee7:	mov    QWORD PTR [r14+0xe0],r12
  405eee:	jmp    405d17 <set_opt@@Base+0x227>
  405ef3:	movzx  edx,BYTE PTR [rbx]
  405ef6:	lea    ecx,[rdx-0x2d]
  405ef9:	cmp    cl,0x4a
  405efc:	ja     405f12 <set_opt@@Base+0x422>
  405efe:	lea    rsi,[rip+0x297af]        # 42f6b4 <_IO_stdin_used@@Base+0x16b4>
  405f05:	movzx  ecx,cl
  405f08:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  405f0c:	add    rcx,rsi
  405f0f:	notrack jmp rcx
  405f12:	mov    rax,QWORD PTR [rip+0x4c0cf]        # 451fe8 <stderr@GLIBC_2.2.5>
  405f19:	movsx  ecx,dl
  405f1c:	mov    rdi,QWORD PTR [rax]
  405f1f:	lea    rdx,[rip+0x29724]        # 42f64a <_IO_stdin_used@@Base+0x164a>
  405f26:	mov    esi,0x1
  405f2b:	xor    eax,eax
  405f2d:	call   405400 <__fprintf_chk@plt>
  405f32:	or     edi,0xffffffff
  405f35:	call   4053e0 <exit@plt>
  405f3a:	mov    DWORD PTR [r14+0xbc],0x1
  405f45:	jmp    405c5b <set_opt@@Base+0x16b>
  405f4a:	mov    DWORD PTR [r14+0xc0],0x1
  405f55:	jmp    405c5b <set_opt@@Base+0x16b>
  405f5a:	movabs rdx,0x100000001
  405f64:	mov    QWORD PTR [r14+0xb0],rdx
  405f6b:	mov    QWORD PTR [r14+0xb8],rdx
  405f72:	mov    DWORD PTR [r14+0xc0],0x1
  405f7d:	mov    DWORD PTR [r14+0xcc],0x1
  405f88:	jmp    405c5b <set_opt@@Base+0x16b>
  405f8d:	cmp    QWORD PTR [r14+0x108],0x0
  405f95:	lea    rdx,[rip+0x29464]        # 42f400 <_IO_stdin_used@@Base+0x1400>
  405f9c:	jne    405ea1 <set_opt@@Base+0x3b1>
  405fa2:	cmp    BYTE PTR [rbx+0x1],0x0
  405fa6:	je     405fcd <set_opt@@Base+0x4dd>
  405fa8:	lea    r12,[rbx+0x1]
  405fac:	mov    eax,0x1
  405fb1:	mov    QWORD PTR [r14+0x108],r12
  405fb8:	jmp    405c5b <set_opt@@Base+0x16b>
  405fbd:	mov    DWORD PTR [r14+0x84],0x1
  405fc8:	jmp    405c5b <set_opt@@Base+0x16b>
  405fcd:	mov    eax,0x2
  405fd2:	lea    rdx,[rip+0x29654]        # 42f62d <_IO_stdin_used@@Base+0x162d>
  405fd9:	test   r12,r12
  405fdc:	jne    405fb1 <set_opt@@Base+0x4c1>
  405fde:	jmp    405ea1 <set_opt@@Base+0x3b1>
  405fe3:	mov    DWORD PTR [r14+0xb0],0x1
  405fee:	jmp    405c5b <set_opt@@Base+0x16b>
  405ff3:	cmp    BYTE PTR [rbx+0x1],0x0
  405ff7:	je     40604b <set_opt@@Base+0x55b>
  405ff9:	lea    r12,[rbx+0x1]
  405ffd:	mov    eax,0x1
  406002:	movsxd rdx,DWORD PTR [r14+0x100]
  406009:	mov    rcx,QWORD PTR [r14+0xf0]
  406010:	lea    esi,[rdx+0x1]
  406013:	mov    DWORD PTR [r14+0x100],esi
  40601a:	mov    QWORD PTR [rcx+rdx*8],r12
  40601e:	jmp    405c5b <set_opt@@Base+0x16b>
  406023:	mov    rax,QWORD PTR [rip+0x4bfbe]        # 451fe8 <stderr@GLIBC_2.2.5>
  40602a:	mov    rcx,rbx
  40602d:	mov    rdi,QWORD PTR [rax]
  406030:	lea    rdx,[rip+0x295c4]        # 42f5fb <_IO_stdin_used@@Base+0x15fb>
  406037:	mov    esi,0x1
  40603c:	xor    eax,eax
  40603e:	call   405400 <__fprintf_chk@plt>
  406043:	or     edi,0xffffffff
  406046:	call   4053e0 <exit@plt>
  40604b:	mov    eax,0x2
  406050:	lea    rdx,[rip+0x295b9]        # 42f610 <_IO_stdin_used@@Base+0x1610>
  406057:	test   r12,r12
  40605a:	jne    406002 <set_opt@@Base+0x512>
  40605c:	jmp    405ea1 <set_opt@@Base+0x3b1>
  406061:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40606c:	nop    DWORD PTR [rax+0x0]

0000000000406070 <get_opt@@Base>:
  406070:	endbr64 
  406074:	push   r12
  406076:	mov    r12,rdx
  406079:	push   rbp
  40607a:	mov    rbp,rdi
  40607d:	push   rbx
  40607e:	lea    rbx,[rsi+0x1]
  406082:	movzx  eax,BYTE PTR [rsi+0x1]
  406086:	cmp    al,0x2d
  406088:	je     4060d0 <get_opt@@Base+0x60>
  40608a:	test   al,al
  40608c:	jne    40609c <get_opt@@Base+0x2c>
  40608e:	jmp    4060e6 <get_opt@@Base+0x76>
  406090:	cmp    eax,0x1
  406093:	adc    rbx,0x0
  406097:	cmp    BYTE PTR [rbx],0x0
  40609a:	je     4060c0 <get_opt@@Base+0x50>
  40609c:	mov    rdx,r12
  40609f:	mov    rsi,rbx
  4060a2:	mov    rdi,rbp
  4060a5:	call   405af0 <set_opt@@Base>
  4060aa:	cmp    eax,0x1
  4060ad:	je     4060c0 <get_opt@@Base+0x50>
  4060af:	cmp    eax,0x2
  4060b2:	jne    406090 <get_opt@@Base+0x20>
  4060b4:	pop    rbx
  4060b5:	pop    rbp
  4060b6:	mov    eax,0x1
  4060bb:	pop    r12
  4060bd:	ret    
  4060be:	xchg   ax,ax
  4060c0:	pop    rbx
  4060c1:	pop    rbp
  4060c2:	xor    eax,eax
  4060c4:	pop    r12
  4060c6:	ret    
  4060c7:	nop    WORD PTR [rax+rax*1+0x0]
  4060d0:	mov    rsi,rbx
  4060d3:	call   405af0 <set_opt@@Base>
  4060d8:	cmp    eax,0x2
  4060db:	pop    rbx
  4060dc:	sete   al
  4060df:	pop    rbp
  4060e0:	movzx  eax,al
  4060e3:	pop    r12
  4060e5:	ret    
  4060e6:	mov    rax,QWORD PTR [rip+0x4befb]        # 451fe8 <stderr@GLIBC_2.2.5>
  4060ed:	lea    rdx,[rip+0x2956b]        # 42f65f <_IO_stdin_used@@Base+0x165f>
  4060f4:	mov    rdi,QWORD PTR [rax]
  4060f7:	mov    esi,0x1
  4060fc:	xor    eax,eax
  4060fe:	call   405400 <__fprintf_chk@plt>
  406103:	or     edi,0xffffffff
  406106:	call   4053e0 <exit@plt>
  40610b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406110 <parse_opts@@Base>:
  406110:	endbr64 
  406114:	cmp    edi,0x1
  406117:	jle    4061a8 <parse_opts@@Base+0x98>
  40611d:	push   r13
  40611f:	mov    r13,rsi
  406122:	push   r12
  406124:	mov    r12d,edi
  406127:	push   rbp
  406128:	mov    rbp,rdx
  40612b:	push   rbx
  40612c:	mov    ebx,0x1
  406131:	sub    rsp,0x8
  406135:	jmp    406162 <parse_opts@@Base+0x52>
  406137:	nop    WORD PTR [rax+rax*1+0x0]
  406140:	movsxd rax,DWORD PTR [rbp+0x104]
  406147:	mov    rdx,QWORD PTR [rbp+0xf8]
  40614e:	lea    edi,[rax+0x1]
  406151:	mov    ebx,ecx
  406153:	mov    DWORD PTR [rbp+0x104],edi
  406159:	mov    QWORD PTR [rdx+rax*8],rsi
  40615d:	cmp    r12d,ebx
  406160:	jle    406197 <parse_opts@@Base+0x87>
  406162:	movsxd rax,ebx
  406165:	mov    rsi,QWORD PTR [r13+rax*8+0x0]
  40616a:	lea    rdi,[rax*8+0x0]
  406172:	cmp    BYTE PTR [rsi],0x2d
  406175:	lea    ecx,[rbx+0x1]
  406178:	jne    406140 <parse_opts@@Base+0x30>
  40617a:	xor    edx,edx
  40617c:	cmp    r12d,ecx
  40617f:	jle    406186 <parse_opts@@Base+0x76>
  406181:	mov    rdx,QWORD PTR [r13+rdi*1+0x8]
  406186:	mov    rdi,rbp
  406189:	call   406070 <get_opt@@Base>
  40618e:	lea    ebx,[rbx+rax*1+0x1]
  406192:	cmp    r12d,ebx
  406195:	jg     406162 <parse_opts@@Base+0x52>
  406197:	add    rsp,0x8
  40619b:	pop    rbx
  40619c:	pop    rbp
  40619d:	pop    r12
  40619f:	pop    r13
  4061a1:	ret    
  4061a2:	nop    WORD PTR [rax+rax*1+0x0]
  4061a8:	ret    
  4061a9:	nop    DWORD PTR [rax+0x0]
  4061b0:	endbr64 
  4061b4:	add    rdi,0x128
  4061bb:	mov    edx,0x1
  4061c0:	jmp    41b880 <ptr_set_insert_item@@Base>
  4061c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4061d0:	push   rax
  4061d1:	pop    rax
  4061d2:	lea    rdx,[rip+0x29607]        # 42f7e0 <_IO_stdin_used@@Base+0x17e0>
  4061d9:	mov    esi,0x1
  4061de:	sub    rsp,0x8
  4061e2:	mov    rax,QWORD PTR [rip+0x4bdff]        # 451fe8 <stderr@GLIBC_2.2.5>
  4061e9:	mov    rdi,QWORD PTR [rax]
  4061ec:	xor    eax,eax
  4061ee:	call   405400 <__fprintf_chk@plt>
  4061f3:	mov    edi,0x1
  4061f8:	call   4053e0 <exit@plt>
  4061fd:	nop    DWORD PTR [rax]

0000000000406200 <flatcc_init_options@@Base>:
  406200:	endbr64 
  406204:	mov    QWORD PTR [rdi+0x108],0x0
  40620f:	mov    rdx,rdi
  406212:	lea    rdi,[rdi+0x8]
  406216:	and    rdi,0xfffffffffffffff8
  40621a:	mov    rcx,rdx
  40621d:	sub    rcx,rdi
  406220:	add    ecx,0x110
  406226:	xor    eax,eax
  406228:	movabs rsi,0x200000004
  406232:	shr    ecx,0x3
  406235:	rep stos QWORD PTR es:[rdi],rax
  406238:	mov    QWORD PTR [rdx+0x44],rsi
  40623c:	movabs rsi,0x100000000
  406246:	movabs rax,0x6400000064
  406250:	mov    QWORD PTR [rdx+0x54],rsi
  406254:	lea    rsi,[rip+0x296ac]        # 42f907 <_IO_stdin_used@@Base+0x1907>
  40625b:	mov    QWORD PTR [rdx+0x8],rax
  40625f:	mov    QWORD PTR [rdx+0x68],rsi
  406263:	movabs rax,0x100000001
  40626d:	lea    rdi,[rip+0x29698]        # 42f90c <_IO_stdin_used@@Base+0x190c>
  406274:	lea    rsi,[rip+0x29697]        # 42f912 <_IO_stdin_used@@Base+0x1912>
  40627b:	mov    QWORD PTR [rdx],0x10000
  406282:	mov    QWORD PTR [rdx+0x14],rax
  406286:	mov    QWORD PTR [rdx+0x1c],rax
  40628a:	mov    QWORD PTR [rdx+0x24],rax
  40628e:	mov    QWORD PTR [rdx+0x2c],rax
  406292:	mov    QWORD PTR [rdx+0x34],rax
  406296:	mov    QWORD PTR [rdx+0x3c],0x0
  40629e:	mov    QWORD PTR [rdx+0x4c],rax
  4062a2:	mov    QWORD PTR [rdx+0x60],0xfffe
  4062aa:	mov    QWORD PTR [rdx+0x70],rdi
  4062ae:	mov    QWORD PTR [rdx+0x78],rsi
  4062b2:	mov    DWORD PTR [rdx+0xa4],0x0
  4062bc:	mov    QWORD PTR [rdx+0xa8],rax
  4062c3:	mov    QWORD PTR [rdx+0xb0],0x0
  4062ce:	mov    QWORD PTR [rdx+0xb8],0x0
  4062d9:	mov    DWORD PTR [rdx+0xc4],0x0
  4062e3:	mov    QWORD PTR [rdx+0xd0],0x4
  4062ee:	mov    QWORD PTR [rdx+0xd8],0x1
  4062f9:	ret    
  4062fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406300 <flatcc_create_context@@Base>:
  406300:	endbr64 
  406304:	push   r14
  406306:	mov    r14,rcx
  406309:	push   r13
  40630b:	mov    r13,rdx
  40630e:	push   r12
  406310:	mov    r12,rsi
  406313:	push   rbp
  406314:	mov    rbp,rdi
  406317:	mov    edi,0x358
  40631c:	push   rbx
  40631d:	call   405380 <malloc@plt>
  406322:	mov    rbx,rax
  406325:	test   rax,rax
  406328:	je     406345 <flatcc_create_context@@Base+0x45>
  40632a:	xor    r9d,r9d
  40632d:	mov    r8,r14
  406330:	mov    rcx,r13
  406333:	mov    rdx,r12
  406336:	mov    rsi,rbp
  406339:	mov    rdi,rax
  40633c:	call   41f8d0 <__flatcc_fb_init_parser@@Base>
  406341:	test   eax,eax
  406343:	jne    406358 <flatcc_create_context@@Base+0x58>
  406345:	mov    rax,rbx
  406348:	pop    rbx
  406349:	pop    rbp
  40634a:	pop    r12
  40634c:	pop    r13
  40634e:	pop    r14
  406350:	ret    
  406351:	nop    DWORD PTR [rax+0x0]
  406358:	mov    rdi,rbx
  40635b:	call   405240 <free@plt>
  406360:	xor    ebx,ebx
  406362:	jmp    406345 <flatcc_create_context@@Base+0x45>
  406364:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40636f:	nop

0000000000406370 <flatcc_parse_buffer@@Base>:
  406370:	endbr64 
  406374:	push   r12
  406376:	mov    r12,rsi
  406379:	push   rbp
  40637a:	mov    rbp,rdx
  40637d:	push   rbx
  40637e:	mov    rbx,rdi
  406381:	mov    DWORD PTR [rdi+0xf8],0x1
  40638b:	mov    rax,QWORD PTR [rdi+0xe8]
  406392:	cmp    rax,rdx
  406395:	jae    40639c <flatcc_parse_buffer@@Base+0x2c>
  406397:	test   rax,rax
  40639a:	jne    4063df <flatcc_parse_buffer@@Base+0x6f>
  40639c:	lea    rsi,[rbx+0x1f8]
  4063a3:	lea    rdi,[rbx+0x320]
  4063aa:	mov    edx,0x1
  4063af:	call   41b880 <ptr_set_insert_item@@Base>
  4063b4:	xor    ecx,ecx
  4063b6:	mov    rdx,rbp
  4063b9:	mov    rsi,r12
  4063bc:	mov    rdi,rbx
  4063bf:	call   41fc30 <__flatcc_fb_parse@@Base>
  4063c4:	test   eax,eax
  4063c6:	jne    4063f8 <flatcc_parse_buffer@@Base+0x88>
  4063c8:	mov    rdi,rbx
  4063cb:	call   425af0 <__flatcc_fb_build_schema@@Base>
  4063d0:	test   eax,eax
  4063d2:	setne  al
  4063d5:	movzx  eax,al
  4063d8:	neg    eax
  4063da:	pop    rbx
  4063db:	pop    rbp
  4063dc:	pop    r12
  4063de:	ret    
  4063df:	lea    rsi,[rip+0x29422]        # 42f808 <_IO_stdin_used@@Base+0x1808>
  4063e6:	xor    eax,eax
  4063e8:	call   41e1f0 <__flatcc_fb_print_error@@Base>
  4063ed:	mov    eax,0xffffffff
  4063f2:	jmp    4063da <flatcc_parse_buffer@@Base+0x6a>
  4063f4:	nop    DWORD PTR [rax+0x0]
  4063f8:	mov    eax,0xffffffff
  4063fd:	jmp    4063da <flatcc_parse_buffer@@Base+0x6a>
  4063ff:	nop

0000000000406400 <flatcc_generate_binary_schema_to_buffer@@Base>:
  406400:	endbr64 
  406404:	sub    rsp,0x18
  406408:	mov    rax,rsi
  40640b:	mov    QWORD PTR [rsp+0x8],rdx
  406410:	lea    rsi,[rdi+0x1f8]
  406417:	lea    rcx,[rsp+0x8]
  40641c:	add    rdi,0xe8
  406423:	mov    rdx,rax
  406426:	call   41a750 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
  40642b:	test   rax,rax
  40642e:	je     406440 <flatcc_generate_binary_schema_to_buffer@@Base+0x40>
  406430:	mov    eax,DWORD PTR [rsp+0x8]
  406434:	add    rsp,0x18
  406438:	ret    
  406439:	nop    DWORD PTR [rax+0x0]
  406440:	mov    eax,0xffffffff
  406445:	jmp    406434 <flatcc_generate_binary_schema_to_buffer@@Base+0x34>
  406447:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406450 <flatcc_generate_binary_schema@@Base>:
  406450:	endbr64 
  406454:	mov    rdx,rsi
  406457:	lea    rsi,[rdi+0x1f8]
  40645e:	add    rdi,0xe8
  406465:	jmp    41a810 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
  40646a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406470 <flatcc_generate_files@@Base>:
  406470:	endbr64 
  406474:	push   r13
  406476:	push   r12
  406478:	push   rbp
  406479:	push   rbx
  40647a:	sub    rsp,0x118
  406481:	mov    rax,QWORD PTR fs:0x28
  40648a:	mov    QWORD PTR [rsp+0x108],rax
  406492:	xor    eax,eax
  406494:	test   rdi,rdi
  406497:	je     4065a7 <flatcc_generate_files@@Base+0x137>
  40649d:	mov    rbp,rdi
  4064a0:	mov    edi,DWORD PTR [rdi+0xd0]
  4064a6:	test   edi,edi
  4064a8:	jne    4065a7 <flatcc_generate_files@@Base+0x137>
  4064ae:	mov    rbx,rbp
  4064b1:	xor    edx,edx
  4064b3:	jmp    4064bb <flatcc_generate_files@@Base+0x4b>
  4064b5:	nop    DWORD PTR [rax]
  4064b8:	mov    rbx,rax
  4064bb:	mov    rax,QWORD PTR [rbx]
  4064be:	mov    QWORD PTR [rbx+0x8],rdx
  4064c2:	mov    rdx,rbx
  4064c5:	test   rax,rax
  4064c8:	jne    4064b8 <flatcc_generate_files@@Base+0x48>
  4064ca:	mov    esi,DWORD PTR [rbp+0x1bc]
  4064d0:	lea    r13,[rbp+0xe8]
  4064d7:	test   esi,esi
  4064d9:	jne    406590 <flatcc_generate_files@@Base+0x120>
  4064df:	mov    r12,rsp
  4064e2:	mov    rsi,r13
  4064e5:	mov    rdi,r12
  4064e8:	call   406eb0 <__flatcc_fb_init_output_c@@Base>
  4064ed:	test   eax,eax
  4064ef:	jne    4065a7 <flatcc_generate_files@@Base+0x137>
  4064f5:	mov    ecx,DWORD PTR [rbp+0x188]
  4064fb:	test   ecx,ecx
  4064fd:	je     4065b0 <flatcc_generate_files@@Base+0x140>
  406503:	mov    r13d,DWORD PTR [rbp+0xe4]
  40650a:	test   r13d,r13d
  40650d:	je     406530 <flatcc_generate_files@@Base+0xc0>
  40650f:	mov    edx,DWORD PTR [rbp+0x1b4]
  406515:	test   edx,edx
  406517:	je     4065d0 <flatcc_generate_files@@Base+0x160>
  40651d:	nop    DWORD PTR [rax]
  406520:	mov    eax,DWORD PTR [rbx+0xd0]
  406526:	test   eax,eax
  406528:	je     406560 <flatcc_generate_files@@Base+0xf0>
  40652a:	mov    r13d,0x1
  406530:	mov    rdi,r12
  406533:	call   406e70 <__flatcc_fb_end_output_c@@Base>
  406538:	mov    rcx,QWORD PTR [rsp+0x108]
  406540:	xor    rcx,QWORD PTR fs:0x28
  406549:	mov    eax,r13d
  40654c:	jne    4065e7 <flatcc_generate_files@@Base+0x177>
  406552:	add    rsp,0x118
  406559:	pop    rbx
  40655a:	pop    rbp
  40655b:	pop    r12
  40655d:	pop    r13
  40655f:	ret    
  406560:	lea    rsi,[rbx+0x1f8]
  406567:	mov    rdi,r12
  40656a:	call   407550 <__flatcc_fb_codegen_c@@Base>
  40656f:	mov    rbx,QWORD PTR [rbx+0x8]
  406573:	test   rbx,rbx
  406576:	je     40657c <flatcc_generate_files@@Base+0x10c>
  406578:	test   eax,eax
  40657a:	je     406520 <flatcc_generate_files@@Base+0xb0>
  40657c:	xor    r13d,r13d
  40657f:	test   eax,eax
  406581:	setne  r13b
  406585:	jmp    406530 <flatcc_generate_files@@Base+0xc0>
  406587:	nop    WORD PTR [rax+rax*1+0x0]
  406590:	lea    rsi,[rbp+0x1f8]
  406597:	mov    rdi,r13
  40659a:	call   41a8c0 <__flatcc_fb_codegen_bfbs_to_file@@Base>
  40659f:	test   eax,eax
  4065a1:	je     4064df <flatcc_generate_files@@Base+0x6f>
  4065a7:	mov    r13d,0xffffffff
  4065ad:	jmp    406538 <flatcc_generate_files@@Base+0xc8>
  4065af:	nop
  4065b0:	mov    rdi,r12
  4065b3:	call   407480 <__flatcc_fb_codegen_common_c@@Base>
  4065b8:	mov    r13d,eax
  4065bb:	test   eax,eax
  4065bd:	je     406503 <flatcc_generate_files@@Base+0x93>
  4065c3:	jmp    406530 <flatcc_generate_files@@Base+0xc0>
  4065c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4065d0:	lea    rsi,[rbp+0x1f8]
  4065d7:	mov    rdi,r12
  4065da:	call   407550 <__flatcc_fb_codegen_c@@Base>
  4065df:	mov    r13d,eax
  4065e2:	jmp    406530 <flatcc_generate_files@@Base+0xc0>
  4065e7:	call   4052d0 <__stack_chk_fail@plt>
  4065ec:	nop    DWORD PTR [rax+0x0]

00000000004065f0 <flatcc_destroy_context@@Base>:
  4065f0:	endbr64 
  4065f4:	test   rdi,rdi
  4065f7:	je     406630 <flatcc_destroy_context@@Base+0x40>
  4065f9:	push   rbp
  4065fa:	push   rbx
  4065fb:	mov    rbx,rdi
  4065fe:	sub    rsp,0x8
  406602:	nop    WORD PTR [rax+rax*1+0x0]
  406608:	mov    rdi,rbx
  40660b:	mov    rbp,QWORD PTR [rbx]
  40660e:	call   422870 <__flatcc_fb_clear_parser@@Base>
  406613:	mov    rdi,rbx
  406616:	call   405240 <free@plt>
  40661b:	mov    rbx,rbp
  40661e:	test   rbp,rbp
  406621:	jne    406608 <flatcc_destroy_context@@Base+0x18>
  406623:	add    rsp,0x8
  406627:	pop    rbx
  406628:	pop    rbp
  406629:	ret    
  40662a:	nop    WORD PTR [rax+rax*1+0x0]
  406630:	ret    
  406631:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40663c:	nop    DWORD PTR [rax+0x0]

0000000000406640 <flatcc_parse_file@@Base>:
  406640:	endbr64 
  406644:	push   r15
  406646:	push   r14
  406648:	push   r13
  40664a:	push   r12
  40664c:	mov    r12,rsi
  40664f:	push   rbp
  406650:	push   rbx
  406651:	mov    rbx,rdi
  406654:	mov    rdi,rsi
  406657:	sub    rsp,0x38
  40665b:	mov    rax,QWORD PTR fs:0x28
  406664:	mov    QWORD PTR [rsp+0x28],rax
  406669:	xor    eax,eax
  40666b:	call   4052c0 <strlen@plt>
  406670:	mov    r14,rax
  406673:	mov    rax,QWORD PTR [rbx+0x260]
  40667a:	lea    rsi,[rbx+0x1f8]
  406681:	lea    rdi,[rax+0x40]
  406685:	mov    edx,0x1
  40668a:	mov    QWORD PTR [rsp+0x8],rsi
  40668f:	call   41d800 <fb_schema_table_insert_item@@Base>
  406694:	test   rax,rax
  406697:	je     4066c8 <flatcc_parse_file@@Base+0x88>
  406699:	xor    r14d,r14d
  40669c:	mov    rcx,QWORD PTR [rsp+0x28]
  4066a1:	xor    rcx,QWORD PTR fs:0x28
  4066aa:	mov    eax,r14d
  4066ad:	jne    406cbd <flatcc_parse_file@@Base+0x67d>
  4066b3:	add    rsp,0x38
  4066b7:	pop    rbx
  4066b8:	pop    rbp
  4066b9:	pop    r12
  4066bb:	pop    r13
  4066bd:	pop    r14
  4066bf:	pop    r15
  4066c1:	ret    
  4066c2:	nop    WORD PTR [rax+rax*1+0x0]
  4066c8:	mov    rax,QWORD PTR [rbx+0x350]
  4066cf:	mov    QWORD PTR [rsp+0x18],rax
  4066d4:	mov    QWORD PTR [rsp+0x10],rax
  4066d9:	test   rax,rax
  4066dc:	je     4069af <flatcc_parse_file@@Base+0x36f>
  4066e2:	mov    edx,DWORD PTR [rbx+0x1e8]
  4066e8:	test   edx,edx
  4066ea:	jle    406916 <flatcc_parse_file@@Base+0x2d6>
  4066f0:	xor    ebp,ebp
  4066f2:	lea    r15,[rsp+0x20]
  4066f7:	nop    WORD PTR [rax+rax*1+0x0]
  406700:	mov    rax,QWORD PTR [rbx+0x1d8]
  406707:	mov    r13,QWORD PTR [rax+rbp*8]
  40670b:	mov    rdi,r13
  40670e:	call   4052c0 <strlen@plt>
  406713:	mov    rsi,rax
  406716:	mov    rdi,r13
  406719:	mov    r9d,0x1
  40671f:	lea    r8,[rip+0x40238]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  406726:	mov    rcx,r14
  406729:	mov    rdx,r12
  40672c:	call   41d9f0 <__flatcc_fb_create_join_path_n@@Base>
  406731:	mov    r13,rax
  406734:	test   rax,rax
  406737:	je     406c37 <flatcc_parse_file@@Base+0x5f7>
  40673d:	mov    rsi,QWORD PTR [rbx+0xe8]
  406744:	mov    rdx,r15
  406747:	mov    rdi,rax
  40674a:	call   41ddc0 <__flatcc_fb_read_file@@Base>
  40674f:	mov    rsi,rax
  406752:	test   rax,rax
  406755:	je     4068d0 <flatcc_parse_file@@Base+0x290>
  40675b:	mov    rax,QWORD PTR [rbx+0x260]
  406762:	mov    rdx,QWORD PTR [rsp+0x20]
  406767:	mov    ecx,0x1
  40676c:	add    QWORD PTR [rax+0x68],rdx
  406770:	mov    QWORD PTR [rbx+0x348],r13
  406777:	mov    rdi,rbx
  40677a:	call   41fc30 <__flatcc_fb_parse@@Base>
  40677f:	mov    r14d,eax
  406782:	test   eax,eax
  406784:	jne    406699 <flatcc_parse_file@@Base+0x59>
  40678a:	mov    rbp,QWORD PTR [rbx+0x1f8]
  406791:	test   rbp,rbp
  406794:	je     406a58 <flatcc_parse_file@@Base+0x418>
  40679a:	lea    rax,[rbx+0xe8]
  4067a1:	mov    QWORD PTR [rsp+0x10],rax
  4067a6:	jmp    4067e5 <flatcc_parse_file@@Base+0x1a5>
  4067a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4067b0:	mov    rdx,QWORD PTR [rsp+0x8]
  4067b5:	lea    rdi,[rax+0x128]
  4067bc:	lea    rsi,[rip+0xfffffffffffff9ed]        # 4061b0 <parse_opts@@Base+0xa0>
  4067c3:	call   41b8f0 <ptr_set_visit@@Base>
  4067c8:	mov    rdi,r15
  4067cb:	call   4065f0 <flatcc_destroy_context@@Base>
  4067d0:	mov    rdi,r12
  4067d3:	call   405240 <free@plt>
  4067d8:	mov    rbp,QWORD PTR [rbp+0x0]
  4067dc:	test   rbp,rbp
  4067df:	je     406a58 <flatcc_parse_file@@Base+0x418>
  4067e5:	movsxd rsi,DWORD PTR [rbp+0x10]
  4067e9:	mov    rdi,QWORD PTR [rbp+0x8]
  4067ed:	call   41d8e0 <__flatcc_fb_copy_path_n@@Base>
  4067f2:	mov    r12,rax
  4067f5:	test   rax,rax
  4067f8:	je     406c1c <flatcc_parse_file@@Base+0x5dc>
  4067fe:	mov    r13,QWORD PTR [rbx+0x260]
  406805:	mov    eax,DWORD PTR [rbx+0xf0]
  40680b:	cmp    DWORD PTR [r13+0x64],eax
  40680f:	jl     406819 <flatcc_parse_file@@Base+0x1d9>
  406811:	test   eax,eax
  406813:	jg     406c21 <flatcc_parse_file@@Base+0x5e1>
  406819:	mov    eax,DWORD PTR [rbx+0xf4]
  40681f:	cmp    DWORD PTR [r13+0x60],eax
  406823:	jl     40682d <flatcc_parse_file@@Base+0x1ed>
  406825:	test   eax,eax
  406827:	jg     406a1a <flatcc_parse_file@@Base+0x3da>
  40682d:	mov    edi,0x358
  406832:	call   405380 <malloc@plt>
  406837:	mov    r15,rax
  40683a:	test   rax,rax
  40683d:	je     406a30 <flatcc_parse_file@@Base+0x3f0>
  406843:	mov    rcx,QWORD PTR [rbx+0x10]
  406847:	mov    r8,QWORD PTR [rbx+0x18]
  40684b:	mov    rsi,QWORD PTR [rsp+0x10]
  406850:	mov    r9,r13
  406853:	mov    rdx,r12
  406856:	mov    rdi,rax
  406859:	call   41f8d0 <__flatcc_fb_init_parser@@Base>
  40685e:	test   eax,eax
  406860:	jne    406a40 <flatcc_parse_file@@Base+0x400>
  406866:	lea    rsi,[r15+0x1f8]
  40686d:	lea    rdi,[r13+0x40]
  406871:	call   41d840 <fb_schema_table_find_item@@Base>
  406876:	test   rax,rax
  406879:	jne    4067b0 <flatcc_parse_file@@Base+0x170>
  40687f:	mov    rax,QWORD PTR [rbx]
  406882:	mov    QWORD PTR [rbx],r15
  406885:	mov    QWORD PTR [r15],rax
  406888:	mov    rax,QWORD PTR [rbx+0x348]
  40688f:	mov    rsi,r12
  406892:	mov    QWORD PTR [r15+0x350],rax
  406899:	inc    DWORD PTR [r13+0x64]
  40689d:	inc    DWORD PTR [r13+0x60]
  4068a1:	mov    rdi,r15
  4068a4:	call   406640 <flatcc_parse_file@@Base>
  4068a9:	test   eax,eax
  4068ab:	jne    406a30 <flatcc_parse_file@@Base+0x3f0>
  4068b1:	mov    rdx,QWORD PTR [rsp+0x8]
  4068b6:	lea    rdi,[r15+0x320]
  4068bd:	lea    rsi,[rip+0xfffffffffffff8ec]        # 4061b0 <parse_opts@@Base+0xa0>
  4068c4:	call   41b8f0 <ptr_set_visit@@Base>
  4068c9:	jmp    4067d0 <flatcc_parse_file@@Base+0x190>
  4068ce:	xchg   ax,ax
  4068d0:	mov    rdi,r13
  4068d3:	call   405240 <free@plt>
  4068d8:	mov    rax,QWORD PTR [rbx+0xe8]
  4068df:	cmp    rax,QWORD PTR [rsp+0x20]
  4068e4:	jae    4068ef <flatcc_parse_file@@Base+0x2af>
  4068e6:	test   rax,rax
  4068e9:	jne    406993 <flatcc_parse_file@@Base+0x353>
  4068ef:	inc    rbp
  4068f2:	cmp    DWORD PTR [rbx+0x1e8],ebp
  4068f8:	jg     406700 <flatcc_parse_file@@Base+0xc0>
  4068fe:	cmp    QWORD PTR [rsp+0x10],0x0
  406904:	je     4069fb <flatcc_parse_file@@Base+0x3bb>
  40690a:	mov    rax,QWORD PTR [rbx+0x350]
  406911:	mov    QWORD PTR [rsp+0x10],rax
  406916:	mov    r15,QWORD PTR [rsp+0x10]
  40691b:	mov    rdi,r15
  40691e:	call   4052c0 <strlen@plt>
  406923:	mov    rsi,rax
  406926:	mov    rdi,r15
  406929:	call   41dd10 <__flatcc_fb_find_basename@@Base>
  40692e:	mov    rsi,rax
  406931:	mov    r9d,0x1
  406937:	lea    r8,[rip+0x40020]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40693e:	mov    rcx,r14
  406941:	mov    rdx,r12
  406944:	mov    rdi,r15
  406947:	call   41d9f0 <__flatcc_fb_create_join_path_n@@Base>
  40694c:	mov    r13,rax
  40694f:	test   rax,rax
  406952:	je     406c1c <flatcc_parse_file@@Base+0x5dc>
  406958:	mov    rsi,QWORD PTR [rbx+0xe8]
  40695f:	lea    rdx,[rsp+0x20]
  406964:	mov    rdi,rax
  406967:	call   41ddc0 <__flatcc_fb_read_file@@Base>
  40696c:	mov    rsi,rax
  40696f:	test   rax,rax
  406972:	jne    40675b <flatcc_parse_file@@Base+0x11b>
  406978:	mov    rdi,r13
  40697b:	call   405240 <free@plt>
  406980:	mov    rax,QWORD PTR [rbx+0xe8]
  406987:	cmp    rax,QWORD PTR [rsp+0x20]
  40698c:	jae    4069fb <flatcc_parse_file@@Base+0x3bb>
  40698e:	test   rax,rax
  406991:	je     4069fb <flatcc_parse_file@@Base+0x3bb>
  406993:	lea    rsi,[rip+0x28e6e]        # 42f808 <_IO_stdin_used@@Base+0x1808>
  40699a:	mov    rdi,rbx
  40699d:	xor    eax,eax
  40699f:	call   41e1f0 <__flatcc_fb_print_error@@Base>
  4069a4:	mov    r14d,0xffffffff
  4069aa:	jmp    40669c <flatcc_parse_file@@Base+0x5c>
  4069af:	mov    rsi,QWORD PTR [rbx+0xe8]
  4069b6:	lea    rdx,[rsp+0x20]
  4069bb:	mov    rdi,r12
  4069be:	call   41ddc0 <__flatcc_fb_read_file@@Base>
  4069c3:	test   rax,rax
  4069c6:	jne    406bfe <flatcc_parse_file@@Base+0x5be>
  4069cc:	mov    rcx,QWORD PTR [rbx+0x260]
  4069d3:	mov    rax,QWORD PTR [rsp+0x20]
  4069d8:	mov    rdx,QWORD PTR [rbx+0xe8]
  4069df:	add    rax,QWORD PTR [rcx+0x68]
  4069e3:	cmp    rax,rdx
  4069e6:	jbe    4069ed <flatcc_parse_file@@Base+0x3ad>
  4069e8:	test   rdx,rdx
  4069eb:	jne    406993 <flatcc_parse_file@@Base+0x353>
  4069ed:	mov    eax,DWORD PTR [rbx+0x1e8]
  4069f3:	test   eax,eax
  4069f5:	jg     4066f0 <flatcc_parse_file@@Base+0xb0>
  4069fb:	mov    rdx,r12
  4069fe:	lea    rsi,[rip+0x28e2b]        # 42f830 <_IO_stdin_used@@Base+0x1830>
  406a05:	mov    rdi,rbx
  406a08:	xor    eax,eax
  406a0a:	call   41e1f0 <__flatcc_fb_print_error@@Base>
  406a0f:	mov    r14d,0xffffffff
  406a15:	jmp    40669c <flatcc_parse_file@@Base+0x5c>
  406a1a:	lea    rsi,[rip+0x28efd]        # 42f91e <_IO_stdin_used@@Base+0x191e>
  406a21:	mov    rdi,rbx
  406a24:	xor    eax,eax
  406a26:	call   41e1f0 <__flatcc_fb_print_error@@Base>
  406a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  406a30:	mov    rdi,r12
  406a33:	call   405240 <free@plt>
  406a38:	jmp    40669c <flatcc_parse_file@@Base+0x5c>
  406a3d:	nop    DWORD PTR [rax]
  406a40:	mov    rdi,r15
  406a43:	call   405240 <free@plt>
  406a48:	mov    rdi,r12
  406a4b:	call   405240 <free@plt>
  406a50:	jmp    40669c <flatcc_parse_file@@Base+0x5c>
  406a55:	nop    DWORD PTR [rax]
  406a58:	mov    rsi,QWORD PTR [rsp+0x8]
  406a5d:	lea    rdi,[rbx+0x320]
  406a64:	mov    edx,0x1
  406a69:	call   41b880 <ptr_set_insert_item@@Base>
  406a6e:	mov    rdi,rbx
  406a71:	call   425af0 <__flatcc_fb_build_schema@@Base>
  406a76:	mov    r14d,eax
  406a79:	test   eax,eax
  406a7b:	jne    406699 <flatcc_parse_file@@Base+0x59>
  406a81:	mov    esi,DWORD PTR [rbx+0x16c]
  406a87:	test   esi,esi
  406a89:	je     406699 <flatcc_parse_file@@Base+0x59>
  406a8f:	cmp    QWORD PTR [rsp+0x18],0x0
  406a95:	jne    406699 <flatcc_parse_file@@Base+0x59>
  406a9b:	cmp    QWORD PTR [rbx+0x350],0x0
  406aa3:	jne    406cc2 <flatcc_parse_file@@Base+0x682>
  406aa9:	mov    rbp,QWORD PTR [rbx+0x1f0]
  406ab0:	mov    rsi,QWORD PTR [rbx+0x170]
  406ab7:	lea    rdx,[rip+0x3fea0]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  406abe:	test   rbp,rbp
  406ac1:	cmove  rbp,rdx
  406ac5:	mov    rax,QWORD PTR [rbx+0x308]
  406acc:	mov    r15,QWORD PTR [rbx+0x178]
  406ad3:	mov    rdi,rdx
  406ad6:	test   rsi,rsi
  406ad9:	je     406cab <flatcc_parse_file@@Base+0x66b>
  406adf:	test   r15,r15
  406ae2:	je     406c89 <flatcc_parse_file@@Base+0x649>
  406ae8:	lea    rbp,[rip+0x3fe6f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  406aef:	mov    r13,rbp
  406af2:	mov    ecx,0x1
  406af7:	call   41db10 <__flatcc_fb_create_join_path@@Base>
  406afc:	mov    r12,rax
  406aff:	test   rax,rax
  406b02:	je     406c1c <flatcc_parse_file@@Base+0x5dc>
  406b08:	mov    rdi,rbp
  406b0b:	mov    ecx,0x1
  406b10:	mov    rdx,r13
  406b13:	mov    rsi,r15
  406b16:	call   41db10 <__flatcc_fb_create_join_path@@Base>
  406b1b:	mov    rbp,rax
  406b1e:	test   rax,rax
  406b21:	je     406c1c <flatcc_parse_file@@Base+0x5dc>
  406b27:	mov    rdi,rax
  406b2a:	call   41dcf0 <__flatcc_fb_create_make_path@@Base>
  406b2f:	mov    QWORD PTR [rsp+0x8],rax
  406b34:	test   rax,rax
  406b37:	je     406c1c <flatcc_parse_file@@Base+0x5dc>
  406b3d:	mov    rdi,rbp
  406b40:	call   405240 <free@plt>
  406b45:	lea    rsi,[rip+0x28e05]        # 42f951 <_IO_stdin_used@@Base+0x1951>
  406b4c:	mov    rdi,r12
  406b4f:	call   4053d0 <fopen@plt>
  406b54:	mov    rbp,rax
  406b57:	test   rax,rax
  406b5a:	je     406c5e <flatcc_parse_file@@Base+0x61e>
  406b60:	mov    rcx,QWORD PTR [rsp+0x8]
  406b65:	mov    rdi,rax
  406b68:	lea    rdx,[rip+0x28de5]        # 42f954 <_IO_stdin_used@@Base+0x1954>
  406b6f:	mov    esi,0x1
  406b74:	xor    eax,eax
  406b76:	call   405400 <__fprintf_chk@plt>
  406b7b:	mov    rbx,QWORD PTR [rbx]
  406b7e:	test   rbx,rbx
  406b81:	je     406bc9 <flatcc_parse_file@@Base+0x589>
  406b83:	lea    r15,[rip+0x28dce]        # 42f958 <_IO_stdin_used@@Base+0x1958>
  406b8a:	nop    WORD PTR [rax+rax*1+0x0]
  406b90:	mov    rdi,QWORD PTR [rbx+0x348]
  406b97:	call   41dcf0 <__flatcc_fb_create_make_path@@Base>
  406b9c:	mov    r13,rax
  406b9f:	test   rax,rax
  406ba2:	je     406c1c <flatcc_parse_file@@Base+0x5dc>
  406ba4:	mov    rcx,rax
  406ba7:	mov    rdi,rbp
  406baa:	xor    eax,eax
  406bac:	mov    rdx,r15
  406baf:	mov    esi,0x1
  406bb4:	call   405400 <__fprintf_chk@plt>
  406bb9:	mov    rbx,QWORD PTR [rbx]
  406bbc:	mov    rdi,r13
  406bbf:	call   405240 <free@plt>
  406bc4:	test   rbx,rbx
  406bc7:	jne    406b90 <flatcc_parse_file@@Base+0x550>
  406bc9:	lea    rdx,[rip+0x3fd8d]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  406bd0:	mov    esi,0x1
  406bd5:	mov    rdi,rbp
  406bd8:	xor    eax,eax
  406bda:	call   405400 <__fprintf_chk@plt>
  406bdf:	mov    rdi,r12
  406be2:	call   405240 <free@plt>
  406be7:	mov    rdi,QWORD PTR [rsp+0x8]
  406bec:	call   405240 <free@plt>
  406bf1:	mov    rdi,rbp
  406bf4:	call   4052b0 <fclose@plt>
  406bf9:	jmp    40669c <flatcc_parse_file@@Base+0x5c>
  406bfe:	mov    rdi,r12
  406c01:	mov    QWORD PTR [rsp+0x10],rax
  406c06:	call   41d940 <__flatcc_fb_copy_path@@Base>
  406c0b:	test   rax,rax
  406c0e:	mov    r13,rax
  406c11:	mov    rsi,QWORD PTR [rsp+0x10]
  406c16:	jne    40675b <flatcc_parse_file@@Base+0x11b>
  406c1c:	call   4061d0 <parse_opts@@Base+0xc0>
  406c21:	lea    rsi,[rip+0x28c30]        # 42f858 <_IO_stdin_used@@Base+0x1858>
  406c28:	mov    rdi,rbx
  406c2b:	xor    eax,eax
  406c2d:	call   41e1f0 <__flatcc_fb_print_error@@Base>
  406c32:	jmp    406a30 <flatcc_parse_file@@Base+0x3f0>
  406c37:	mov    rax,QWORD PTR [rip+0x4b3aa]        # 451fe8 <stderr@GLIBC_2.2.5>
  406c3e:	lea    rdx,[rip+0x28b9b]        # 42f7e0 <_IO_stdin_used@@Base+0x17e0>
  406c45:	mov    rdi,QWORD PTR [rax]
  406c48:	mov    esi,0x1
  406c4d:	xor    eax,eax
  406c4f:	call   405400 <__fprintf_chk@plt>
  406c54:	mov    edi,0x1
  406c59:	call   4053e0 <exit@plt>
  406c5e:	mov    rdx,r12
  406c61:	lea    rsi,[rip+0x28c70]        # 42f8d8 <_IO_stdin_used@@Base+0x18d8>
  406c68:	mov    rdi,rbx
  406c6b:	xor    eax,eax
  406c6d:	call   41e1f0 <__flatcc_fb_print_error@@Base>
  406c72:	mov    rdi,r12
  406c75:	call   405240 <free@plt>
  406c7a:	mov    rdi,QWORD PTR [rsp+0x8]
  406c7f:	call   405240 <free@plt>
  406c84:	jmp    40669c <flatcc_parse_file@@Base+0x5c>
  406c89:	mov    ecx,DWORD PTR [rbx+0x1bc]
  406c8f:	mov    r15,rax
  406c92:	test   ecx,ecx
  406c94:	lea    r13,[rip+0x28c71]        # 42f90c <_IO_stdin_used@@Base+0x190c>
  406c9b:	lea    rax,[rip+0x28db3]        # 42fa55 <_IO_stdin_used@@Base+0x1a55>
  406ca2:	cmove  r13,rax
  406ca6:	jmp    406af2 <flatcc_parse_file@@Base+0x4b2>
  406cab:	mov    rdi,rbp
  406cae:	mov    rsi,rax
  406cb1:	lea    rdx,[rip+0x28c5f]        # 42f917 <_IO_stdin_used@@Base+0x1917>
  406cb8:	jmp    406adf <flatcc_parse_file@@Base+0x49f>
  406cbd:	call   4052d0 <__stack_chk_fail@plt>
  406cc2:	lea    rcx,[rip+0x28c97]        # 42f960 <_IO_stdin_used@@Base+0x1960>
  406cc9:	mov    edx,0xdc
  406cce:	lea    rsi,[rip+0x28ba3]        # 42f878 <_IO_stdin_used@@Base+0x1878>
  406cd5:	lea    rdi,[rip+0x28c60]        # 42f93c <_IO_stdin_used@@Base+0x193c>
  406cdc:	call   405300 <__assert_fail@plt>
  406ce1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  406cf0:	endbr64 
  406cf4:	mov    rdi,rsi
  406cf7:	jmp    405240 <free@plt>
  406cfc:	nop    DWORD PTR [rax+0x0]
  406d00:	push   rax
  406d01:	pop    rax
  406d02:	lea    rdx,[rip+0x28ad7]        # 42f7e0 <_IO_stdin_used@@Base+0x17e0>
  406d09:	mov    esi,0x1
  406d0e:	sub    rsp,0x8
  406d12:	mov    rax,QWORD PTR [rip+0x4b2cf]        # 451fe8 <stderr@GLIBC_2.2.5>
  406d19:	mov    rdi,QWORD PTR [rax]
  406d1c:	xor    eax,eax
  406d1e:	call   405400 <__fprintf_chk@plt>
  406d23:	mov    edi,0x1
  406d28:	call   4053e0 <exit@plt>
  406d2d:	nop    DWORD PTR [rax]

0000000000406d30 <__flatcc_fb_open_output_file@@Base>:
  406d30:	endbr64 
  406d34:	push   r15
  406d36:	mov    r15,rcx
  406d39:	push   r14
  406d3b:	mov    r14,rdx
  406d3e:	push   r13
  406d40:	mov    r13,rsi
  406d43:	push   r12
  406d45:	push   rbp
  406d46:	push   rbx
  406d47:	mov    rbx,rdi
  406d4a:	sub    rsp,0x8
  406d4e:	mov    rax,QWORD PTR [rdi+0xe0]
  406d55:	mov    rbp,QWORD PTR [rax+0x108]
  406d5c:	test   rbp,rbp
  406d5f:	je     406d90 <__flatcc_fb_open_output_file@@Base+0x60>
  406d61:	mov    rdi,rbp
  406d64:	call   4052c0 <strlen@plt>
  406d69:	xor    r12d,r12d
  406d6c:	cmp    QWORD PTR [rbx+0xd0],0x0
  406d74:	je     406da6 <__flatcc_fb_open_output_file@@Base+0x76>
  406d76:	add    rsp,0x8
  406d7a:	pop    rbx
  406d7b:	pop    rbp
  406d7c:	mov    eax,r12d
  406d7f:	pop    r12
  406d81:	pop    r13
  406d83:	pop    r14
  406d85:	pop    r15
  406d87:	ret    
  406d88:	nop    DWORD PTR [rax+rax*1+0x0]
  406d90:	xor    eax,eax
  406d92:	xor    r12d,r12d
  406d95:	cmp    QWORD PTR [rbx+0xd0],0x0
  406d9d:	lea    rbp,[rip+0x3fbba]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  406da4:	jne    406d76 <__flatcc_fb_open_output_file@@Base+0x46>
  406da6:	mov    rdi,rbp
  406da9:	mov    r9d,0x1
  406daf:	mov    r8,r15
  406db2:	mov    rcx,r14
  406db5:	mov    rdx,r13
  406db8:	mov    rsi,rax
  406dbb:	call   41d9f0 <__flatcc_fb_create_join_path_n@@Base>
  406dc0:	mov    rbp,rax
  406dc3:	test   rax,rax
  406dc6:	je     406e18 <__flatcc_fb_open_output_file@@Base+0xe8>
  406dc8:	lea    rsi,[rip+0x28b82]        # 42f951 <_IO_stdin_used@@Base+0x1951>
  406dcf:	mov    rdi,rax
  406dd2:	call   4053d0 <fopen@plt>
  406dd7:	mov    QWORD PTR [rbx+0xd0],rax
  406dde:	test   rax,rax
  406de1:	je     406df0 <__flatcc_fb_open_output_file@@Base+0xc0>
  406de3:	mov    rdi,rbp
  406de6:	call   405240 <free@plt>
  406deb:	jmp    406d76 <__flatcc_fb_open_output_file@@Base+0x46>
  406ded:	nop    DWORD PTR [rax]
  406df0:	mov    rax,QWORD PTR [rip+0x4b1f1]        # 451fe8 <stderr@GLIBC_2.2.5>
  406df7:	mov    rcx,rbp
  406dfa:	mov    rdi,QWORD PTR [rax]
  406dfd:	lea    rdx,[rip+0x28b7c]        # 42f980 <_IO_stdin_used@@Base+0x1980>
  406e04:	mov    esi,0x1
  406e09:	xor    eax,eax
  406e0b:	call   405400 <__fprintf_chk@plt>
  406e10:	mov    r12d,0xffffffff
  406e16:	jmp    406de3 <__flatcc_fb_open_output_file@@Base+0xb3>
  406e18:	call   406d00 <flatcc_parse_file@@Base+0x6c0>
  406e1d:	nop    DWORD PTR [rax]

0000000000406e20 <__flatcc_fb_close_output_file@@Base>:
  406e20:	endbr64 
  406e24:	mov    rax,QWORD PTR [rdi+0xe0]
  406e2b:	cmp    QWORD PTR [rax+0x98],0x0
  406e33:	je     406e40 <__flatcc_fb_close_output_file@@Base+0x20>
  406e35:	ret    
  406e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e40:	mov    eax,DWORD PTR [rax+0x80]
  406e46:	test   eax,eax
  406e48:	jne    406e35 <__flatcc_fb_close_output_file@@Base+0x15>
  406e4a:	mov    rax,QWORD PTR [rdi+0xd0]
  406e51:	test   rax,rax
  406e54:	je     406e35 <__flatcc_fb_close_output_file@@Base+0x15>
  406e56:	push   rbx
  406e57:	mov    rbx,rdi
  406e5a:	mov    rdi,rax
  406e5d:	call   4052b0 <fclose@plt>
  406e62:	mov    QWORD PTR [rbx+0xd0],0x0
  406e6d:	pop    rbx
  406e6e:	ret    
  406e6f:	nop

0000000000406e70 <__flatcc_fb_end_output_c@@Base>:
  406e70:	endbr64 
  406e74:	push   rbx
  406e75:	mov    rax,QWORD PTR [rip+0x4b154]        # 451fd0 <stdout@GLIBC_2.2.5>
  406e7c:	mov    rbx,rdi
  406e7f:	mov    rdi,QWORD PTR [rdi+0xd0]
  406e86:	cmp    QWORD PTR [rax],rdi
  406e89:	je     406e95 <__flatcc_fb_end_output_c@@Base+0x25>
  406e8b:	test   rdi,rdi
  406e8e:	je     406e95 <__flatcc_fb_end_output_c@@Base+0x25>
  406e90:	call   4052b0 <fclose@plt>
  406e95:	mov    QWORD PTR [rbx+0xd0],0x0
  406ea0:	pop    rbx
  406ea1:	ret    
  406ea2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406ead:	nop    DWORD PTR [rax]

0000000000406eb0 <__flatcc_fb_init_output_c@@Base>:
  406eb0:	endbr64 
  406eb4:	push   r15
  406eb6:	push   r14
  406eb8:	push   r13
  406eba:	mov    r13,rsi
  406ebd:	push   r12
  406ebf:	lea    r12,[rip+0x28b68]        # 42fa2e <_IO_stdin_used@@Base+0x1a2e>
  406ec6:	push   rbp
  406ec7:	push   rbx
  406ec8:	mov    rbx,rdi
  406ecb:	mov    rcx,rbx
  406ece:	sub    rsp,0x18
  406ed2:	mov    eax,DWORD PTR [rsi+0xa0]
  406ed8:	mov    rbp,QWORD PTR [rsi+0x108]
  406edf:	test   eax,eax
  406ee1:	lea    rax,[rip+0x28a69]        # 42f951 <_IO_stdin_used@@Base+0x1951>
  406ee8:	cmovne rax,r12
  406eec:	test   rbp,rbp
  406eef:	mov    QWORD PTR [rsp+0x8],rax
  406ef4:	lea    rax,[rip+0x3fa63]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  406efb:	cmove  rbp,rax
  406eff:	mov    QWORD PTR [rdi],0x0
  406f06:	mov    QWORD PTR [rdi+0xf8],0x0
  406f11:	add    rdi,0x8
  406f15:	and    rdi,0xfffffffffffffff8
  406f19:	sub    rcx,rdi
  406f1c:	add    ecx,0x100
  406f22:	shr    ecx,0x3
  406f25:	xor    eax,eax
  406f27:	rep stos QWORD PTR es:[rdi],rax
  406f2a:	mov    QWORD PTR [rbx+0xe0],rsi
  406f31:	mov    r14,QWORD PTR [rsi+0xe8]
  406f38:	test   r14,r14
  406f3b:	je     407078 <__flatcc_fb_init_output_c@@Base+0x1c8>
  406f41:	mov    rdi,r14
  406f44:	call   4052c0 <strlen@plt>
  406f49:	mov    r12,rax
  406f4c:	cmp    rax,0x64
  406f50:	ja     4070eb <__flatcc_fb_init_output_c@@Base+0x23b>
  406f56:	mov    edx,0x64
  406f5b:	mov    rsi,r14
  406f5e:	mov    rdi,rbx
  406f61:	mov    QWORD PTR [rsp],rbx
  406f65:	call   405260 <strncpy@plt>
  406f6a:	test   r12,r12
  406f6d:	mov    BYTE PTR [rbx+0x64],0x0
  406f71:	mov    r8,QWORD PTR [rsp]
  406f75:	jne    407060 <__flatcc_fb_init_output_c@@Base+0x1b0>
  406f7b:	movsx  r14,BYTE PTR [rbx]
  406f7f:	mov    QWORD PTR [rsp],r8
  406f83:	lea    r15,[rbx+0x66]
  406f87:	test   r14b,r14b
  406f8a:	je     406fb2 <__flatcc_fb_init_output_c@@Base+0x102>
  406f8c:	call   405230 <__ctype_toupper_loc@plt>
  406f91:	mov    r8,QWORD PTR [rsp]
  406f95:	nop    DWORD PTR [rax]
  406f98:	mov    rdx,QWORD PTR [rax]
  406f9b:	inc    r15
  406f9e:	mov    edx,DWORD PTR [rdx+r14*4]
  406fa2:	inc    r8
  406fa5:	mov    BYTE PTR [r15-0x1],dl
  406fa9:	movsx  r14,BYTE PTR [r8]
  406fad:	test   r14b,r14b
  406fb0:	jne    406f98 <__flatcc_fb_init_output_c@@Base+0xe8>
  406fb2:	mov    BYTE PTR [r15],0x0
  406fb6:	mov    BYTE PTR [rbx+r12*1+0x66],0x0
  406fbc:	mov    eax,DWORD PTR [r13+0xd0]
  406fc3:	mov    r13d,DWORD PTR [r13+0x80]
  406fca:	mov    DWORD PTR [rbx+0xf4],eax
  406fd0:	test   r13d,r13d
  406fd3:	jne    407040 <__flatcc_fb_init_output_c@@Base+0x190>
  406fd5:	mov    rax,QWORD PTR [rbx+0xe0]
  406fdc:	mov    rsi,QWORD PTR [rax+0x98]
  406fe3:	test   rsi,rsi
  406fe6:	je     40702d <__flatcc_fb_init_output_c@@Base+0x17d>
  406fe8:	mov    rdi,rbp
  406feb:	mov    ecx,0x1
  406ff0:	lea    rdx,[rip+0x3f967]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  406ff7:	call   41db10 <__flatcc_fb_create_join_path@@Base>
  406ffc:	mov    rbp,rax
  406fff:	test   rax,rax
  407002:	je     407118 <__flatcc_fb_init_output_c@@Base+0x268>
  407008:	mov    rsi,QWORD PTR [rsp+0x8]
  40700d:	mov    rdi,rax
  407010:	call   4053d0 <fopen@plt>
  407015:	mov    QWORD PTR [rbx+0xd0],rax
  40701c:	test   rax,rax
  40701f:	je     4070c0 <__flatcc_fb_init_output_c@@Base+0x210>
  407025:	mov    rdi,rbp
  407028:	call   405240 <free@plt>
  40702d:	add    rsp,0x18
  407031:	pop    rbx
  407032:	pop    rbp
  407033:	pop    r12
  407035:	mov    eax,r13d
  407038:	pop    r13
  40703a:	pop    r14
  40703c:	pop    r15
  40703e:	ret    
  40703f:	nop
  407040:	mov    rax,QWORD PTR [rip+0x4af89]        # 451fd0 <stdout@GLIBC_2.2.5>
  407047:	xor    r13d,r13d
  40704a:	mov    rax,QWORD PTR [rax]
  40704d:	mov    QWORD PTR [rbx+0xd0],rax
  407054:	jmp    40702d <__flatcc_fb_init_output_c@@Base+0x17d>
  407056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407060:	lea    rax,[r12+0x1]
  407065:	mov    BYTE PTR [rbx+r12*1],0x5f
  40706a:	mov    BYTE PTR [rbx+rax*1],0x0
  40706e:	jmp    406f7b <__flatcc_fb_init_output_c@@Base+0xcb>
  407073:	nop    DWORD PTR [rax+rax*1+0x0]
  407078:	vmovdqa xmm0,XMMWORD PTR [rip+0x28a20]        # 42faa0 <_IO_stdin_used@@Base+0x1aa0>
  407080:	mov    r8,rbx
  407083:	vmovups XMMWORD PTR [rbx],xmm0
  407087:	vpxor  xmm0,xmm0,xmm0
  40708b:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  407090:	vmovups XMMWORD PTR [rbx+0x20],xmm0
  407095:	vmovups XMMWORD PTR [rbx+0x30],xmm0
  40709a:	vmovups XMMWORD PTR [rbx+0x40],xmm0
  40709f:	vmovups XMMWORD PTR [rbx+0x50],xmm0
  4070a4:	mov    DWORD PTR [rbx+0x60],0x0
  4070ab:	mov    BYTE PTR [rbx+0x64],0x0
  4070af:	mov    eax,0xc
  4070b4:	mov    r12d,0xb
  4070ba:	jmp    407065 <__flatcc_fb_init_output_c@@Base+0x1b5>
  4070bc:	nop    DWORD PTR [rax+0x0]
  4070c0:	mov    rax,QWORD PTR [rip+0x4af21]        # 451fe8 <stderr@GLIBC_2.2.5>
  4070c7:	mov    rcx,rbp
  4070ca:	mov    rdi,QWORD PTR [rax]
  4070cd:	lea    rdx,[rip+0x288ac]        # 42f980 <_IO_stdin_used@@Base+0x1980>
  4070d4:	mov    esi,0x1
  4070d9:	xor    eax,eax
  4070db:	call   405400 <__fprintf_chk@plt>
  4070e0:	mov    r13d,0xffffffff
  4070e6:	jmp    407025 <__flatcc_fb_init_output_c@@Base+0x175>
  4070eb:	mov    rax,QWORD PTR [rip+0x4aef6]        # 451fe8 <stderr@GLIBC_2.2.5>
  4070f2:	mov    ecx,0x64
  4070f7:	mov    rdi,QWORD PTR [rax]
  4070fa:	lea    rdx,[rip+0x288a7]        # 42f9a8 <_IO_stdin_used@@Base+0x19a8>
  407101:	mov    esi,0x1
  407106:	xor    eax,eax
  407108:	call   405400 <__fprintf_chk@plt>
  40710d:	mov    r13d,0xffffffff
  407113:	jmp    40702d <__flatcc_fb_init_output_c@@Base+0x17d>
  407118:	call   406d00 <flatcc_parse_file@@Base+0x6c0>
  40711d:	nop    DWORD PTR [rax]

0000000000407120 <__flatcc_fb_gen_c_includes@@Base>:
  407120:	endbr64 
  407124:	push   r15
  407126:	vpxor  xmm0,xmm0,xmm0
  40712a:	push   r14
  40712c:	push   r13
  40712e:	push   r12
  407130:	mov    r12,rdi
  407133:	push   rbp
  407134:	push   rbx
  407135:	sub    rsp,0x48
  407139:	mov    QWORD PTR [rsp],rsi
  40713d:	mov    QWORD PTR [rsp+0x8],rdx
  407142:	lea    r13,[rsp+0x10]
  407147:	mov    rax,QWORD PTR fs:0x28
  407150:	mov    QWORD PTR [rsp+0x38],rax
  407155:	xor    eax,eax
  407157:	mov    rax,QWORD PTR [rdi+0xd8]
  40715e:	mov    rdi,QWORD PTR [rax+0x118]
  407165:	mov    rbx,QWORD PTR [rax]
  407168:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  40716e:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  407174:	call   41d940 <__flatcc_fb_copy_path@@Base>
  407179:	mov    rsi,rax
  40717c:	mov    edx,0x1
  407181:	mov    rdi,r13
  407184:	call   41b170 <str_set_insert_item@@Base>
  407189:	nop    DWORD PTR [rax+0x0]
  407190:	test   rbx,rbx
  407193:	je     407237 <__flatcc_fb_gen_c_includes@@Base+0x117>
  407199:	mov    rax,QWORD PTR [r12+0xe0]
  4071a1:	movsxd rsi,DWORD PTR [rbx+0x10]
  4071a5:	mov    rdx,QWORD PTR [rax+0x68]
  4071a9:	mov    rdi,QWORD PTR [rbx+0x8]
  4071ad:	call   41dd60 <__flatcc_fb_create_basename@@Base>
  4071b2:	mov    rbp,rax
  4071b5:	test   rax,rax
  4071b8:	je     4072ad <__flatcc_fb_gen_c_includes@@Base+0x18d>
  4071be:	mov    rdi,rax
  4071c1:	mov    rbx,QWORD PTR [rbx]
  4071c4:	call   41d940 <__flatcc_fb_copy_path@@Base>
  4071c9:	mov    r15,rax
  4071cc:	test   rax,rax
  4071cf:	je     4072ad <__flatcc_fb_gen_c_includes@@Base+0x18d>
  4071d5:	movzx  r14d,BYTE PTR [rax]
  4071d9:	test   r14b,r14b
  4071dc:	je     407209 <__flatcc_fb_gen_c_includes@@Base+0xe9>
  4071de:	call   405230 <__ctype_toupper_loc@plt>
  4071e3:	mov    rsi,r15
  4071e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071f0:	mov    rdi,QWORD PTR [rax]
  4071f3:	movsx  rdx,r14b
  4071f7:	mov    edx,DWORD PTR [rdi+rdx*4]
  4071fa:	inc    rsi
  4071fd:	mov    BYTE PTR [rsi-0x1],dl
  407200:	movzx  r14d,BYTE PTR [rsi]
  407204:	test   r14b,r14b
  407207:	jne    4071f0 <__flatcc_fb_gen_c_includes@@Base+0xd0>
  407209:	mov    edx,0x1
  40720e:	mov    rsi,r15
  407211:	mov    rdi,r13
  407214:	call   41b170 <str_set_insert_item@@Base>
  407219:	test   rax,rax
  40721c:	je     407270 <__flatcc_fb_gen_c_includes@@Base+0x150>
  40721e:	mov    rdi,r15
  407221:	call   405240 <free@plt>
  407226:	mov    rdi,rbp
  407229:	call   405240 <free@plt>
  40722e:	test   rbx,rbx
  407231:	jne    407199 <__flatcc_fb_gen_c_includes@@Base+0x79>
  407237:	xor    edx,edx
  407239:	lea    rsi,[rip+0xfffffffffffffab0]        # 406cf0 <flatcc_parse_file@@Base+0x6b0>
  407240:	mov    rdi,r13
  407243:	call   41b070 <str_set_destroy@@Base>
  407248:	mov    rax,QWORD PTR [rsp+0x38]
  40724d:	xor    rax,QWORD PTR fs:0x28
  407256:	jne    4072d4 <__flatcc_fb_gen_c_includes@@Base+0x1b4>
  407258:	add    rsp,0x48
  40725c:	pop    rbx
  40725d:	pop    rbp
  40725e:	pop    r12
  407260:	pop    r13
  407262:	pop    r14
  407264:	pop    r15
  407266:	ret    
  407267:	nop    WORD PTR [rax+rax*1+0x0]
  407270:	sub    rsp,0x8
  407274:	push   QWORD PTR [rsp+0x8]
  407278:	mov    rdi,QWORD PTR [r12+0xd0]
  407280:	lea    rdx,[rip+0x28759]        # 42f9e0 <_IO_stdin_used@@Base+0x19e0>
  407287:	mov    r8,QWORD PTR [rsp+0x18]
  40728c:	mov    r9,rbp
  40728f:	mov    rcx,r15
  407292:	mov    esi,0x1
  407297:	xor    eax,eax
  407299:	call   405400 <__fprintf_chk@plt>
  40729e:	mov    rdi,rbp
  4072a1:	call   405240 <free@plt>
  4072a6:	pop    rax
  4072a7:	pop    rdx
  4072a8:	jmp    407190 <__flatcc_fb_gen_c_includes@@Base+0x70>
  4072ad:	mov    rax,QWORD PTR [rip+0x4ad34]        # 451fe8 <stderr@GLIBC_2.2.5>
  4072b4:	lea    rdx,[rip+0x28525]        # 42f7e0 <_IO_stdin_used@@Base+0x17e0>
  4072bb:	mov    rdi,QWORD PTR [rax]
  4072be:	mov    esi,0x1
  4072c3:	xor    eax,eax
  4072c5:	call   405400 <__fprintf_chk@plt>
  4072ca:	mov    edi,0x1
  4072cf:	call   4053e0 <exit@plt>
  4072d4:	call   4052d0 <__stack_chk_fail@plt>
  4072d9:	nop    DWORD PTR [rax+0x0]

00000000004072e0 <__flatcc_fb_copy_scope@@Base>:
  4072e0:	endbr64 
  4072e4:	push   r14
  4072e6:	push   r13
  4072e8:	push   r12
  4072ea:	push   rbp
  4072eb:	push   rbx
  4072ec:	movsxd r12,DWORD PTR [rdi+0x30]
  4072f0:	mov    rax,QWORD PTR [rdi]
  4072f3:	mov    r14,r12
  4072f6:	mov    rdx,r12
  4072f9:	test   rax,rax
  4072fc:	je     407315 <__flatcc_fb_copy_scope@@Base+0x35>
  4072fe:	xchg   ax,ax
  407300:	mov    rcx,QWORD PTR [rax+0x8]
  407304:	mov    rax,QWORD PTR [rax]
  407307:	mov    rcx,QWORD PTR [rcx+0x8]
  40730b:	lea    rdx,[rdx+rcx*1+0x1]
  407310:	test   rax,rax
  407313:	jne    407300 <__flatcc_fb_copy_scope@@Base+0x20>
  407315:	cmp    rdx,0x65
  407319:	ja     407383 <__flatcc_fb_copy_scope@@Base+0xa3>
  40731b:	mov    r13,rsi
  40731e:	mov    rsi,QWORD PTR [rdi+0x28]
  407322:	mov    rbx,rdi
  407325:	mov    rdx,r12
  407328:	mov    rdi,r13
  40732b:	call   405370 <memcpy@plt>
  407330:	mov    rbp,QWORD PTR [rbx]
  407333:	test   rbp,rbp
  407336:	je     407371 <__flatcc_fb_copy_scope@@Base+0x91>
  407338:	nop    DWORD PTR [rax+rax*1+0x0]
  407340:	mov    rax,QWORD PTR [rbp+0x8]
  407344:	lea    rdi,[r13+r12*1+0x0]
  407349:	mov    rbx,QWORD PTR [rax+0x8]
  40734d:	mov    rsi,QWORD PTR [rax]
  407350:	mov    rdx,rbx
  407353:	add    rbx,r12
  407356:	call   405370 <memcpy@plt>
  40735b:	mov    BYTE PTR [r13+rbx*1+0x0],0x5f
  407361:	lea    r12,[rbx+0x1]
  407365:	mov    rbp,QWORD PTR [rbp+0x0]
  407369:	test   rbp,rbp
  40736c:	jne    407340 <__flatcc_fb_copy_scope@@Base+0x60>
  40736e:	mov    r14d,r12d
  407371:	mov    BYTE PTR [r13+r12*1+0x0],0x0
  407377:	pop    rbx
  407378:	pop    rbp
  407379:	pop    r12
  40737b:	pop    r13
  40737d:	mov    eax,r14d
  407380:	pop    r14
  407382:	ret    
  407383:	mov    BYTE PTR [rsi],0x0
  407386:	mov    r14d,0xffffffff
  40738c:	jmp    407377 <__flatcc_fb_copy_scope@@Base+0x97>
  40738e:	xchg   ax,ax

0000000000407390 <__flatcc_fb_scoped_symbol_name@@Base>:
  407390:	endbr64 
  407394:	push   rbp
  407395:	push   rbx
  407396:	mov    rbx,rdx
  407399:	sub    rsp,0x8
  40739d:	mov    rbp,QWORD PTR [rsi+0x8]
  4073a1:	cmp    QWORD PTR [rdx+0xd0],rdi
  4073a8:	je     4073e7 <__flatcc_fb_scoped_symbol_name@@Base+0x57>
  4073aa:	mov    rsi,rdx
  4073ad:	call   4072e0 <__flatcc_fb_copy_scope@@Base>
  4073b2:	test   eax,eax
  4073b4:	js     4073c0 <__flatcc_fb_scoped_symbol_name@@Base+0x30>
  4073b6:	mov    DWORD PTR [rbx+0xd8],eax
  4073bc:	jmp    4073ed <__flatcc_fb_scoped_symbol_name@@Base+0x5d>
  4073be:	xchg   ax,ax
  4073c0:	mov    rax,QWORD PTR [rip+0x4ac21]        # 451fe8 <stderr@GLIBC_2.2.5>
  4073c7:	mov    DWORD PTR [rbx+0xd8],0x0
  4073d1:	mov    rdi,QWORD PTR [rax]
  4073d4:	lea    rdx,[rip+0x28656]        # 42fa31 <_IO_stdin_used@@Base+0x1a31>
  4073db:	mov    esi,0x1
  4073e0:	xor    eax,eax
  4073e2:	call   405400 <__fprintf_chk@plt>
  4073e7:	mov    eax,DWORD PTR [rbx+0xd8]
  4073ed:	mov    rcx,QWORD PTR [rbp+0x8]
  4073f1:	mov    rsi,QWORD PTR [rbp+0x0]
  4073f5:	lea    edi,[rax+rcx*1]
  4073f8:	mov    edx,ecx
  4073fa:	mov    DWORD PTR [rbx+0xdc],ecx
  407400:	mov    DWORD PTR [rbx+0xe0],edi
  407406:	cmp    edi,0xcb
  40740c:	jg     407430 <__flatcc_fb_scoped_symbol_name@@Base+0xa0>
  40740e:	cdqe   
  407410:	lea    rdi,[rbx+rax*1]
  407414:	movsxd rdx,edx
  407417:	call   405370 <memcpy@plt>
  40741c:	movsxd rax,DWORD PTR [rbx+0xe0]
  407423:	mov    BYTE PTR [rbx+rax*1],0x0
  407427:	add    rsp,0x8
  40742b:	pop    rbx
  40742c:	pop    rbp
  40742d:	ret    
  40742e:	xchg   ax,ax
  407430:	mov    rax,QWORD PTR [rip+0x4abb1]        # 451fe8 <stderr@GLIBC_2.2.5>
  407437:	mov    r8,rsi
  40743a:	mov    rdi,QWORD PTR [rax]
  40743d:	lea    rdx,[rip+0x285c4]        # 42fa08 <_IO_stdin_used@@Base+0x1a08>
  407444:	mov    esi,0x1
  407449:	xor    eax,eax
  40744b:	call   405400 <__fprintf_chk@plt>
  407450:	mov    eax,DWORD PTR [rbx+0xd8]
  407456:	mov    edx,0xcb
  40745b:	sub    edx,eax
  40745d:	mov    DWORD PTR [rbx+0xdc],edx
  407463:	mov    DWORD PTR [rbx+0xe0],0xcb
  40746d:	mov    rsi,QWORD PTR [rbp+0x0]
  407471:	jmp    40740e <__flatcc_fb_scoped_symbol_name@@Base+0x7e>
  407473:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40747e:	xchg   ax,ax

0000000000407480 <__flatcc_fb_codegen_common_c@@Base>:
  407480:	endbr64 
  407484:	push   r12
  407486:	push   rbp
  407487:	push   rbx
  407488:	mov    rbx,rdi
  40748b:	call   4052c0 <strlen@plt>
  407490:	lea    r12,[rax-0x1]
  407494:	mov    rax,QWORD PTR [rbx+0xe0]
  40749b:	mov    edx,DWORD PTR [rax+0xb0]
  4074a1:	test   edx,edx
  4074a3:	jne    4074c0 <__flatcc_fb_codegen_common_c@@Base+0x40>
  4074a5:	mov    ebp,DWORD PTR [rax+0xb4]
  4074ab:	test   ebp,ebp
  4074ad:	jne    407500 <__flatcc_fb_codegen_common_c@@Base+0x80>
  4074af:	pop    rbx
  4074b0:	mov    eax,ebp
  4074b2:	pop    rbp
  4074b3:	pop    r12
  4074b5:	ret    
  4074b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074c0:	lea    rcx,[rip+0x28587]        # 42fa4e <_IO_stdin_used@@Base+0x1a4e>
  4074c7:	mov    rdx,r12
  4074ca:	mov    rsi,rbx
  4074cd:	mov    rdi,rbx
  4074d0:	call   406d30 <__flatcc_fb_open_output_file@@Base>
  4074d5:	test   eax,eax
  4074d7:	jne    407538 <__flatcc_fb_codegen_common_c@@Base+0xb8>
  4074d9:	mov    rdi,rbx
  4074dc:	call   40b390 <__flatcc_fb_gen_common_c_header@@Base>
  4074e1:	mov    ebp,eax
  4074e3:	mov    rdi,rbx
  4074e6:	call   406e20 <__flatcc_fb_close_output_file@@Base>
  4074eb:	test   ebp,ebp
  4074ed:	jne    4074af <__flatcc_fb_codegen_common_c@@Base+0x2f>
  4074ef:	mov    rax,QWORD PTR [rbx+0xe0]
  4074f6:	mov    ebp,DWORD PTR [rax+0xb4]
  4074fc:	test   ebp,ebp
  4074fe:	je     4074af <__flatcc_fb_codegen_common_c@@Base+0x2f>
  407500:	lea    rcx,[rip+0x28558]        # 42fa5f <_IO_stdin_used@@Base+0x1a5f>
  407507:	mov    rdx,r12
  40750a:	mov    rsi,rbx
  40750d:	mov    rdi,rbx
  407510:	call   406d30 <__flatcc_fb_open_output_file@@Base>
  407515:	mov    ebp,eax
  407517:	test   eax,eax
  407519:	jne    407538 <__flatcc_fb_codegen_common_c@@Base+0xb8>
  40751b:	mov    rdi,rbx
  40751e:	call   40fdd0 <__flatcc_fb_gen_common_c_builder_header@@Base>
  407523:	mov    rdi,rbx
  407526:	call   406e20 <__flatcc_fb_close_output_file@@Base>
  40752b:	pop    rbx
  40752c:	mov    eax,ebp
  40752e:	pop    rbp
  40752f:	pop    r12
  407531:	ret    
  407532:	nop    WORD PTR [rax+rax*1+0x0]
  407538:	mov    ebp,0xffffffff
  40753d:	jmp    4074af <__flatcc_fb_codegen_common_c@@Base+0x2f>
  407542:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40754d:	nop    DWORD PTR [rax]

0000000000407550 <__flatcc_fb_codegen_c@@Base>:
  407550:	endbr64 
  407554:	push   r12
  407556:	xor    edx,edx
  407558:	push   rbp
  407559:	push   rbx
  40755a:	mov    rbx,rdi
  40755d:	sub    rsp,0x10
  407561:	mov    QWORD PTR [rdi+0xd8],rsi
  407568:	mov    rdi,QWORD PTR [rsi+0x68]
  40756c:	xor    esi,esi
  40756e:	call   41d090 <fb_scope_table_find@@Base>
  407573:	mov    QWORD PTR [rbx+0xe8],rax
  40757a:	mov    rax,QWORD PTR [rbx+0xd8]
  407581:	mov    rbp,QWORD PTR [rax+0x110]
  407588:	mov    rdi,rbp
  40758b:	call   4052c0 <strlen@plt>
  407590:	mov    r12,rax
  407593:	mov    rax,QWORD PTR [rbx+0xe0]
  40759a:	mov    edi,DWORD PTR [rax+0xb8]
  4075a0:	test   edi,edi
  4075a2:	jne    407640 <__flatcc_fb_codegen_c@@Base+0xf0>
  4075a8:	mov    esi,DWORD PTR [rax+0xbc]
  4075ae:	test   esi,esi
  4075b0:	jne    407690 <__flatcc_fb_codegen_c@@Base+0x140>
  4075b6:	mov    ecx,DWORD PTR [rax+0xc0]
  4075bc:	test   ecx,ecx
  4075be:	jne    4075e8 <__flatcc_fb_codegen_c@@Base+0x98>
  4075c0:	mov    edx,DWORD PTR [rax+0xc4]
  4075c6:	test   edx,edx
  4075c8:	jne    4076e0 <__flatcc_fb_codegen_c@@Base+0x190>
  4075ce:	mov    eax,DWORD PTR [rax+0xc8]
  4075d4:	test   eax,eax
  4075d6:	jne    407730 <__flatcc_fb_codegen_c@@Base+0x1e0>
  4075dc:	add    rsp,0x10
  4075e0:	pop    rbx
  4075e1:	pop    rbp
  4075e2:	pop    r12
  4075e4:	ret    
  4075e5:	nop    DWORD PTR [rax]
  4075e8:	mov    rax,QWORD PTR [rbx+0xd8]
  4075ef:	lea    rcx,[rip+0x2847b]        # 42fa71 <_IO_stdin_used@@Base+0x1a71>
  4075f6:	mov    rsi,QWORD PTR [rax+0x110]
  4075fd:	mov    rdx,r12
  407600:	mov    rdi,rbx
  407603:	call   406d30 <__flatcc_fb_open_output_file@@Base>
  407608:	test   eax,eax
  40760a:	jne    407780 <__flatcc_fb_codegen_c@@Base+0x230>
  407610:	mov    rdi,rbx
  407613:	call   4119d0 <__flatcc_fb_gen_c_verifier@@Base>
  407618:	test   eax,eax
  40761a:	jne    4075dc <__flatcc_fb_codegen_c@@Base+0x8c>
  40761c:	mov    rdi,rbx
  40761f:	call   406e20 <__flatcc_fb_close_output_file@@Base>
  407624:	mov    rax,QWORD PTR [rbx+0xe0]
  40762b:	mov    edx,DWORD PTR [rax+0xc4]
  407631:	test   edx,edx
  407633:	je     4075ce <__flatcc_fb_codegen_c@@Base+0x7e>
  407635:	jmp    4076e0 <__flatcc_fb_codegen_c@@Base+0x190>
  40763a:	nop    WORD PTR [rax+rax*1+0x0]
  407640:	lea    rcx,[rip+0x2840e]        # 42fa55 <_IO_stdin_used@@Base+0x1a55>
  407647:	mov    rdx,r12
  40764a:	mov    rsi,rbp
  40764d:	mov    rdi,rbx
  407650:	call   406d30 <__flatcc_fb_open_output_file@@Base>
  407655:	test   eax,eax
  407657:	jne    407780 <__flatcc_fb_codegen_c@@Base+0x230>
  40765d:	mov    rdi,rbx
  407660:	call   40c0e0 <__flatcc_fb_gen_c_reader@@Base>
  407665:	test   eax,eax
  407667:	jne    4075dc <__flatcc_fb_codegen_c@@Base+0x8c>
  40766d:	mov    rdi,rbx
  407670:	call   406e20 <__flatcc_fb_close_output_file@@Base>
  407675:	mov    rax,QWORD PTR [rbx+0xe0]
  40767c:	mov    esi,DWORD PTR [rax+0xbc]
  407682:	test   esi,esi
  407684:	je     4075b6 <__flatcc_fb_codegen_c@@Base+0x66>
  40768a:	nop    WORD PTR [rax+rax*1+0x0]
  407690:	mov    rax,QWORD PTR [rbx+0xd8]
  407697:	lea    rcx,[rip+0x283c8]        # 42fa66 <_IO_stdin_used@@Base+0x1a66>
  40769e:	mov    rsi,QWORD PTR [rax+0x110]
  4076a5:	mov    rdx,r12
  4076a8:	mov    rdi,rbx
  4076ab:	call   406d30 <__flatcc_fb_open_output_file@@Base>
  4076b0:	test   eax,eax
  4076b2:	jne    407780 <__flatcc_fb_codegen_c@@Base+0x230>
  4076b8:	mov    rdi,rbx
  4076bb:	call   4109c0 <__flatcc_fb_gen_c_builder@@Base>
  4076c0:	test   eax,eax
  4076c2:	jne    4075dc <__flatcc_fb_codegen_c@@Base+0x8c>
  4076c8:	mov    rdi,rbx
  4076cb:	call   406e20 <__flatcc_fb_close_output_file@@Base>
  4076d0:	mov    rax,QWORD PTR [rbx+0xe0]
  4076d7:	jmp    4075b6 <__flatcc_fb_codegen_c@@Base+0x66>
  4076dc:	nop    DWORD PTR [rax+0x0]
  4076e0:	mov    rax,QWORD PTR [rbx+0xd8]
  4076e7:	lea    rcx,[rip+0x2838f]        # 42fa7d <_IO_stdin_used@@Base+0x1a7d>
  4076ee:	mov    rsi,QWORD PTR [rax+0x110]
  4076f5:	mov    rdx,r12
  4076f8:	mov    rdi,rbx
  4076fb:	call   406d30 <__flatcc_fb_open_output_file@@Base>
  407700:	test   eax,eax
  407702:	jne    407780 <__flatcc_fb_codegen_c@@Base+0x230>
  407704:	mov    rdi,rbx
  407707:	call   415f90 <__flatcc_fb_gen_c_json_parser@@Base>
  40770c:	test   eax,eax
  40770e:	jne    4075dc <__flatcc_fb_codegen_c@@Base+0x8c>
  407714:	mov    rdi,rbx
  407717:	call   406e20 <__flatcc_fb_close_output_file@@Base>
  40771c:	mov    rax,QWORD PTR [rbx+0xe0]
  407723:	jmp    4075ce <__flatcc_fb_codegen_c@@Base+0x7e>
  407728:	nop    DWORD PTR [rax+rax*1+0x0]
  407730:	mov    rax,QWORD PTR [rbx+0xd8]
  407737:	lea    rcx,[rip+0x2834e]        # 42fa8c <_IO_stdin_used@@Base+0x1a8c>
  40773e:	mov    rsi,QWORD PTR [rax+0x110]
  407745:	mov    rdx,r12
  407748:	mov    rdi,rbx
  40774b:	call   406d30 <__flatcc_fb_open_output_file@@Base>
  407750:	test   eax,eax
  407752:	jne    407780 <__flatcc_fb_codegen_c@@Base+0x230>
  407754:	mov    rdi,rbx
  407757:	call   418890 <__flatcc_fb_gen_c_json_printer@@Base>
  40775c:	test   eax,eax
  40775e:	jne    4075dc <__flatcc_fb_codegen_c@@Base+0x8c>
  407764:	endbr64 
  407768:	mov    rdi,rbx
  40776b:	mov    DWORD PTR [rsp+0xc],eax
  40776f:	call   406e20 <__flatcc_fb_close_output_file@@Base>
  407774:	mov    eax,DWORD PTR [rsp+0xc]
  407778:	jmp    4075dc <__flatcc_fb_codegen_c@@Base+0x8c>
  40777d:	nop    DWORD PTR [rax]
  407780:	mov    eax,0xffffffff
  407785:	jmp    4075dc <__flatcc_fb_codegen_c@@Base+0x8c>
  40778a:	nop    WORD PTR [rax+rax*1+0x0]
  407790:	push   rax
  407791:	pop    rax
  407792:	lea    rcx,[rip+0x2834f]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  407799:	lea    rdx,[rip+0x2faf3]        # 437293 <_IO_stdin_used@@Base+0x9293>
  4077a0:	mov    esi,0x1
  4077a5:	lea    r9,[rip+0x28304]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  4077ac:	mov    r8d,0x8d
  4077b2:	sub    rsp,0x8
  4077b6:	mov    rax,QWORD PTR [rip+0x4a82b]        # 451fe8 <stderr@GLIBC_2.2.5>
  4077bd:	mov    rdi,QWORD PTR [rax]
  4077c0:	xor    eax,eax
  4077c2:	call   405400 <__fprintf_chk@plt>
  4077c7:	lea    rcx,[rip+0x300e2]        # 4378b0 <_IO_stdin_used@@Base+0x98b0>
  4077ce:	mov    edx,0x8d
  4077d3:	lea    rsi,[rip+0x2830e]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  4077da:	lea    rdi,[rip+0x30b78]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4077e1:	call   405300 <__assert_fail@plt>
  4077e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077f0:	push   rax
  4077f1:	pop    rax
  4077f2:	lea    rcx,[rip+0x282ef]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  4077f9:	lea    rdx,[rip+0x2fa93]        # 437293 <_IO_stdin_used@@Base+0x9293>
  407800:	mov    esi,0x1
  407805:	lea    r9,[rip+0x282a4]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  40780c:	mov    r8d,0x60
  407812:	sub    rsp,0x8
  407816:	mov    rax,QWORD PTR [rip+0x4a7cb]        # 451fe8 <stderr@GLIBC_2.2.5>
  40781d:	mov    rdi,QWORD PTR [rax]
  407820:	xor    eax,eax
  407822:	call   405400 <__fprintf_chk@plt>
  407827:	lea    rcx,[rip+0x30062]        # 437890 <_IO_stdin_used@@Base+0x9890>
  40782e:	mov    edx,0x60
  407833:	lea    rsi,[rip+0x282ae]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40783a:	lea    rdi,[rip+0x30b18]        # 438359 <_IO_stdin_used@@Base+0xa359>
  407841:	call   405300 <__assert_fail@plt>
  407846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407850:	push   rax
  407851:	pop    rax
  407852:	lea    rcx,[rip+0x2828f]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  407859:	lea    rdx,[rip+0x2fa33]        # 437293 <_IO_stdin_used@@Base+0x9293>
  407860:	mov    esi,0x1
  407865:	lea    r9,[rip+0x28244]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  40786c:	mov    r8d,0xe2
  407872:	sub    rsp,0x8
  407876:	mov    rax,QWORD PTR [rip+0x4a76b]        # 451fe8 <stderr@GLIBC_2.2.5>
  40787d:	mov    rdi,QWORD PTR [rax]
  407880:	xor    eax,eax
  407882:	call   405400 <__fprintf_chk@plt>
  407887:	lea    rcx,[rip+0x2ffca]        # 437858 <_IO_stdin_used@@Base+0x9858>
  40788e:	mov    edx,0xe2
  407893:	lea    rsi,[rip+0x2824e]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40789a:	lea    rdi,[rip+0x30ab8]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4078a1:	call   405300 <__assert_fail@plt>
  4078a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078b0:	push   r12
  4078b2:	mov    ecx,0x1d
  4078b7:	push   rbp
  4078b8:	mov    rbp,rdi
  4078bb:	push   rbx
  4078bc:	sub    rsp,0xf0
  4078c3:	mov    rax,QWORD PTR fs:0x28
  4078cc:	mov    QWORD PTR [rsp+0xe8],rax
  4078d4:	xor    eax,eax
  4078d6:	mov    rbx,rsp
  4078d9:	mov    rdi,rbx
  4078dc:	cmp    WORD PTR [rsi+0x10],0x1
  4078e1:	rep stos QWORD PTR es:[rdi],rax
  4078e4:	ja     407a63 <__flatcc_fb_codegen_c@@Base+0x513>
  4078ea:	mov    rdi,QWORD PTR [rsi+0x18]
  4078ee:	mov    r12,rsi
  4078f1:	mov    rdx,rbx
  4078f4:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  4078f9:	cmp    WORD PTR [r12+0x10],0x1
  407900:	mov    rdi,QWORD PTR [rbp+0xd0]
  407907:	jne    407a00 <__flatcc_fb_codegen_c@@Base+0x4b0>
  40790d:	cmp    QWORD PTR [r12+0xb8],0x0
  407916:	je     4079e0 <__flatcc_fb_codegen_c@@Base+0x490>
  40791c:	mov    r8,rbx
  40791f:	mov    rcx,rbx
  407922:	lea    rdx,[rip+0x2f975]        # 43729e <_IO_stdin_used@@Base+0x929e>
  407929:	mov    esi,0x1
  40792e:	xor    eax,eax
  407930:	call   405400 <__fprintf_chk@plt>
  407935:	mov    rdi,QWORD PTR [rbp+0xd0]
  40793c:	mov    r8,rbx
  40793f:	mov    rcx,rbx
  407942:	lea    rdx,[rip+0x282e7]        # 42fc30 <_IO_stdin_used@@Base+0x1c30>
  407949:	mov    esi,0x1
  40794e:	xor    eax,eax
  407950:	call   405400 <__fprintf_chk@plt>
  407955:	mov    rdi,QWORD PTR [rbp+0xd0]
  40795c:	mov    r8,rbx
  40795f:	mov    rcx,rbx
  407962:	lea    rdx,[rip+0x282ef]        # 42fc58 <_IO_stdin_used@@Base+0x1c58>
  407969:	mov    esi,0x1
  40796e:	xor    eax,eax
  407970:	call   405400 <__fprintf_chk@plt>
  407975:	mov    rdi,QWORD PTR [rbp+0xd0]
  40797c:	mov    r8,rbx
  40797f:	mov    rcx,rbx
  407982:	lea    rdx,[rip+0x282f7]        # 42fc80 <_IO_stdin_used@@Base+0x1c80>
  407989:	mov    esi,0x1
  40798e:	xor    eax,eax
  407990:	call   405400 <__fprintf_chk@plt>
  407995:	mov    rdi,QWORD PTR [rbp+0xd0]
  40799c:	mov    r8,rbx
  40799f:	mov    rcx,rbx
  4079a2:	lea    rdx,[rip+0x282f7]        # 42fca0 <_IO_stdin_used@@Base+0x1ca0>
  4079a9:	mov    esi,0x1
  4079ae:	xor    eax,eax
  4079b0:	call   405400 <__fprintf_chk@plt>
  4079b5:	mov    rax,QWORD PTR [rsp+0xe8]
  4079bd:	xor    rax,QWORD PTR fs:0x28
  4079c6:	jne    407a5e <__flatcc_fb_codegen_c@@Base+0x50e>
  4079cc:	add    rsp,0xf0
  4079d3:	pop    rbx
  4079d4:	pop    rbp
  4079d5:	pop    r12
  4079d7:	ret    
  4079d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4079e0:	mov    rcx,rbx
  4079e3:	lea    rdx,[rip+0x2821e]        # 42fc08 <_IO_stdin_used@@Base+0x1c08>
  4079ea:	mov    esi,0x1
  4079ef:	xor    eax,eax
  4079f1:	call   405400 <__fprintf_chk@plt>
  4079f6:	jmp    407935 <__flatcc_fb_codegen_c@@Base+0x3e5>
  4079fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407a00:	mov    r8,rbx
  407a03:	mov    rcx,rbx
  407a06:	lea    rdx,[rip+0x282bb]        # 42fcc8 <_IO_stdin_used@@Base+0x1cc8>
  407a0d:	mov    esi,0x1
  407a12:	xor    eax,eax
  407a14:	call   405400 <__fprintf_chk@plt>
  407a19:	mov    rdi,QWORD PTR [rbp+0xd0]
  407a20:	mov    r8,rbx
  407a23:	mov    rcx,rbp
  407a26:	lea    rdx,[rip+0x282cb]        # 42fcf8 <_IO_stdin_used@@Base+0x1cf8>
  407a2d:	mov    esi,0x1
  407a32:	xor    eax,eax
  407a34:	call   405400 <__fprintf_chk@plt>
  407a39:	mov    rdi,QWORD PTR [rbp+0xd0]
  407a40:	mov    r8,rbx
  407a43:	mov    rcx,rbp
  407a46:	lea    rdx,[rip+0x282d3]        # 42fd20 <_IO_stdin_used@@Base+0x1d20>
  407a4d:	mov    esi,0x1
  407a52:	xor    eax,eax
  407a54:	call   405400 <__fprintf_chk@plt>
  407a59:	jmp    4079b5 <__flatcc_fb_codegen_c@@Base+0x465>
  407a5e:	call   4052d0 <__stack_chk_fail@plt>
  407a63:	lea    rcx,[rip+0x2fe76]        # 4378e0 <_IO_stdin_used@@Base+0x98e0>
  407a6a:	mov    edx,0x35f
  407a6f:	lea    rsi,[rip+0x280da]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  407a76:	lea    rdi,[rip+0x28143]        # 42fbc0 <_IO_stdin_used@@Base+0x1bc0>
  407a7d:	call   405300 <__assert_fail@plt>
  407a82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407a8d:	nop    DWORD PTR [rax]
  407a90:	push   r15
  407a92:	mov    rax,rsi
  407a95:	push   r14
  407a97:	push   r13
  407a99:	push   r12
  407a9b:	push   rbp
  407a9c:	push   rbx
  407a9d:	sub    rsp,0x478
  407aa4:	mov    QWORD PTR [rsp+0x28],rsi
  407aa9:	mov    rsi,QWORD PTR fs:0x28
  407ab2:	mov    QWORD PTR [rsp+0x468],rsi
  407aba:	xor    esi,esi
  407abc:	cmp    WORD PTR [rax+0x10],0x0
  407ac1:	jne    40974b <__flatcc_fb_codegen_c@@Base+0x21fb>
  407ac7:	lea    r15,[rsp+0x40]
  407acc:	xor    eax,eax
  407ace:	lea    rsi,[rsp+0x130]
  407ad6:	mov    rbp,rdi
  407ad9:	mov    ecx,0x1d
  407ade:	mov    rdi,r15
  407ae1:	rep stos QWORD PTR es:[rdi],rax
  407ae4:	mov    rdi,rsi
  407ae7:	mov    ecx,0x1d
  407aec:	rep stos QWORD PTR es:[rdi],rax
  407aef:	mov    rdi,QWORD PTR [rbp+0xd0]
  407af6:	mov    QWORD PTR [rsp+0x10],rsi
  407afb:	lea    rdx,[rip+0x3ee5b]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  407b02:	mov    esi,0x1
  407b07:	call   405400 <__fprintf_chk@plt>
  407b0c:	mov    rbx,QWORD PTR [rsp+0x28]
  407b11:	mov    rdx,r15
  407b14:	mov    rdi,QWORD PTR [rbx+0x18]
  407b18:	mov    rsi,rbx
  407b1b:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  407b20:	mov    rbx,QWORD PTR [rbx+0x40]
  407b24:	test   rbx,rbx
  407b27:	je     407bbf <__flatcc_fb_codegen_c@@Base+0x66f>
  407b2d:	mov    ecx,0x1
  407b32:	xor    edx,edx
  407b34:	nop    DWORD PTR [rax+0x0]
  407b38:	mov    rax,QWORD PTR [rbx+0x8]
  407b3c:	mov    rdi,QWORD PTR [rbp+0xd0]
  407b43:	cmp    QWORD PTR [rax+0x10],rdx
  407b47:	je     407b79 <__flatcc_fb_codegen_c@@Base+0x629>
  407b49:	test   ecx,ecx
  407b4b:	lea    rdx,[rip+0x2f838]        # 43738a <_IO_stdin_used@@Base+0x938a>
  407b52:	lea    rcx,[rip+0x3ee05]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  407b59:	jne    407b62 <__flatcc_fb_codegen_c@@Base+0x612>
  407b5b:	lea    rdx,[rip+0x2f82f]        # 437391 <_IO_stdin_used@@Base+0x9391>
  407b62:	mov    esi,0x1
  407b67:	xor    eax,eax
  407b69:	call   405400 <__fprintf_chk@plt>
  407b6e:	mov    rax,QWORD PTR [rbx+0x8]
  407b72:	mov    rdi,QWORD PTR [rbp+0xd0]
  407b79:	mov    rcx,QWORD PTR [rax+0x8]
  407b7d:	mov    r8,QWORD PTR [rax]
  407b80:	lea    rdx,[rip+0x307e2]        # 438369 <_IO_stdin_used@@Base+0xa369>
  407b87:	mov    esi,0x1
  407b8c:	xor    eax,eax
  407b8e:	call   405400 <__fprintf_chk@plt>
  407b93:	mov    rax,QWORD PTR [rbx+0x8]
  407b97:	mov    rbx,QWORD PTR [rbx]
  407b9a:	mov    rdx,QWORD PTR [rax+0x10]
  407b9e:	xor    ecx,ecx
  407ba0:	test   rbx,rbx
  407ba3:	jne    407b38 <__flatcc_fb_codegen_c@@Base+0x5e8>
  407ba5:	mov    rdi,QWORD PTR [rbp+0xd0]
  407bac:	lea    rdx,[rip+0x2f9bc]        # 43756f <_IO_stdin_used@@Base+0x956f>
  407bb3:	mov    esi,0x1
  407bb8:	xor    eax,eax
  407bba:	call   405400 <__fprintf_chk@plt>
  407bbf:	mov    rdi,QWORD PTR [rbp+0xd0]
  407bc6:	mov    rcx,r15
  407bc9:	lea    rdx,[rip+0x28198]        # 42fd68 <_IO_stdin_used@@Base+0x1d68>
  407bd0:	mov    esi,0x1
  407bd5:	xor    eax,eax
  407bd7:	call   405400 <__fprintf_chk@plt>
  407bdc:	mov    rdi,QWORD PTR [rbp+0xd0]
  407be3:	mov    r8,r15
  407be6:	mov    rcx,r15
  407be9:	mov    r9,rbp
  407bec:	lea    rdx,[rip+0x281a5]        # 42fd98 <_IO_stdin_used@@Base+0x1d98>
  407bf3:	mov    esi,0x1
  407bf8:	xor    eax,eax
  407bfa:	call   405400 <__fprintf_chk@plt>
  407bff:	mov    rdi,QWORD PTR [rbp+0xd0]
  407c06:	push   r15
  407c08:	mov    r9,r15
  407c0b:	mov    r8,r15
  407c0e:	push   rbp
  407c0f:	mov    rcx,r15
  407c12:	lea    rdx,[rip+0x281bf]        # 42fdd8 <_IO_stdin_used@@Base+0x1dd8>
  407c19:	mov    esi,0x1
  407c1e:	xor    eax,eax
  407c20:	call   405400 <__fprintf_chk@plt>
  407c25:	mov    rdi,QWORD PTR [rbp+0xd0]
  407c2c:	mov    r8,r15
  407c2f:	mov    rcx,rbp
  407c32:	lea    rdx,[rip+0x2f75f]        # 437398 <_IO_stdin_used@@Base+0x9398>
  407c39:	mov    esi,0x1
  407c3e:	xor    eax,eax
  407c40:	call   405400 <__fprintf_chk@plt>
  407c45:	mov    rdi,QWORD PTR [rbp+0xd0]
  407c4c:	lea    rdx,[rip+0x3ed0a]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  407c53:	mov    esi,0x1
  407c58:	xor    eax,eax
  407c5a:	call   405400 <__fprintf_chk@plt>
  407c5f:	mov    rax,QWORD PTR [rsp+0x38]
  407c64:	pop    rdx
  407c65:	mov    rbx,QWORD PTR [rax+0x28]
  407c69:	pop    rcx
  407c6a:	mov    r14,r15
  407c6d:	mov    DWORD PTR [rsp+0x24],0x0
  407c75:	lea    r15,[rip+0x2f924]        # 4375a0 <_IO_stdin_used@@Base+0x95a0>
  407c7c:	test   rbx,rbx
  407c7f:	je     407e21 <__flatcc_fb_codegen_c@@Base+0x8d1>
  407c85:	nop    DWORD PTR [rax]
  407c88:	mov    r12,QWORD PTR [rbx+0x68]
  407c8c:	test   r12,r12
  407c8f:	je     407d2b <__flatcc_fb_codegen_c@@Base+0x7db>
  407c95:	mov    ecx,0x1
  407c9a:	xor    edx,edx
  407c9c:	nop    DWORD PTR [rax+0x0]
  407ca0:	mov    rax,QWORD PTR [r12+0x8]
  407ca5:	mov    rdi,QWORD PTR [rbp+0xd0]
  407cac:	cmp    QWORD PTR [rax+0x10],rdx
  407cb0:	je     407ce3 <__flatcc_fb_codegen_c@@Base+0x793>
  407cb2:	test   ecx,ecx
  407cb4:	lea    rdx,[rip+0x2f6cf]        # 43738a <_IO_stdin_used@@Base+0x938a>
  407cbb:	lea    rcx,[rip+0x3ec9c]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  407cc2:	jne    407ccb <__flatcc_fb_codegen_c@@Base+0x77b>
  407cc4:	lea    rdx,[rip+0x2f6c6]        # 437391 <_IO_stdin_used@@Base+0x9391>
  407ccb:	mov    esi,0x1
  407cd0:	xor    eax,eax
  407cd2:	call   405400 <__fprintf_chk@plt>
  407cd7:	mov    rax,QWORD PTR [r12+0x8]
  407cdc:	mov    rdi,QWORD PTR [rbp+0xd0]
  407ce3:	mov    rcx,QWORD PTR [rax+0x8]
  407ce7:	mov    r8,QWORD PTR [rax]
  407cea:	lea    rdx,[rip+0x30678]        # 438369 <_IO_stdin_used@@Base+0xa369>
  407cf1:	mov    esi,0x1
  407cf6:	xor    eax,eax
  407cf8:	call   405400 <__fprintf_chk@plt>
  407cfd:	mov    rax,QWORD PTR [r12+0x8]
  407d02:	mov    r12,QWORD PTR [r12]
  407d06:	mov    rdx,QWORD PTR [rax+0x10]
  407d0a:	xor    ecx,ecx
  407d0c:	test   r12,r12
  407d0f:	jne    407ca0 <__flatcc_fb_codegen_c@@Base+0x750>
  407d11:	mov    rdi,QWORD PTR [rbp+0xd0]
  407d18:	lea    rdx,[rip+0x2f850]        # 43756f <_IO_stdin_used@@Base+0x956f>
  407d1f:	mov    esi,0x1
  407d24:	xor    eax,eax
  407d26:	call   405400 <__fprintf_chk@plt>
  407d2b:	mov    rax,QWORD PTR [rbx+0x8]
  407d2f:	movzx  ecx,WORD PTR [rbx+0x70]
  407d33:	mov    r12,QWORD PTR [rax]
  407d36:	mov    r13,QWORD PTR [rax+0x8]
  407d3a:	test   cl,0x4
  407d3d:	jne    4088a8 <__flatcc_fb_codegen_c@@Base+0x1358>
  407d43:	movzx  eax,WORD PTR [rbx+0x28]
  407d47:	movzx  ecx,ch
  407d4a:	sub    eax,0x7
  407d4d:	and    ecx,0x1
  407d50:	cmp    ax,0x8
  407d54:	ja     4094ac <__flatcc_fb_codegen_c@@Base+0x1f5c>
  407d5a:	movzx  eax,ax
  407d5d:	movsxd rax,DWORD PTR [r15+rax*4]
  407d61:	add    rax,r15
  407d64:	notrack jmp rax
  407d67:	nop    WORD PTR [rax+rax*1+0x0]
  407d70:	mov    rsi,QWORD PTR [rbx+0x18]
  407d74:	mov    rdx,QWORD PTR [rsp+0x10]
  407d79:	mov    rdi,QWORD PTR [rsi+0x18]
  407d7d:	mov    DWORD PTR [rsp+0x8],ecx
  407d81:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  407d86:	mov    rax,QWORD PTR [rbx+0x18]
  407d8a:	movzx  eax,WORD PTR [rax+0x10]
  407d8e:	cmp    ax,0x4
  407d92:	ja     409594 <__flatcc_fb_codegen_c@@Base+0x2044>
  407d98:	mov    edx,0x1
  407d9d:	shlx   rdx,rdx,rax
  407da2:	and    edx,0x1b
  407da5:	mov    ecx,DWORD PTR [rsp+0x8]
  407da9:	je     409594 <__flatcc_fb_codegen_c@@Base+0x2044>
  407daf:	mov    r8,QWORD PTR [rbx+0x88]
  407db6:	mov    rdi,QWORD PTR [rbp+0xd0]
  407dbd:	cmp    ax,0x4
  407dc1:	je     4089e8 <__flatcc_fb_codegen_c@@Base+0x1498>
  407dc7:	push   rcx
  407dc8:	mov    r9,r14
  407dcb:	mov    rcx,rbp
  407dce:	push   QWORD PTR [rsp+0x18]
  407dd2:	lea    rdx,[rip+0x2873f]        # 430518 <_IO_stdin_used@@Base+0x2518>
  407dd9:	push   r12
  407ddb:	push   r13
  407ddd:	mov    esi,0x1
  407de2:	xor    eax,eax
  407de4:	call   405400 <__fprintf_chk@plt>
  407de9:	add    rsp,0x20
  407ded:	test   BYTE PTR [rbx+0x70],0x80
  407df1:	je     407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  407df3:	mov    rdi,QWORD PTR [rbp+0xd0]
  407dfa:	lea    rdx,[rip+0x28797]        # 430598 <_IO_stdin_used@@Base+0x2598>
  407e01:	mov    esi,0x1
  407e06:	xor    eax,eax
  407e08:	call   405400 <__fprintf_chk@plt>
  407e0d:	mov    DWORD PTR [rsp+0x24],0x1
  407e15:	mov    rbx,QWORD PTR [rbx]
  407e18:	test   rbx,rbx
  407e1b:	jne    407c88 <__flatcc_fb_codegen_c@@Base+0x738>
  407e21:	mov    rax,QWORD PTR [rsp+0x468]
  407e29:	xor    rax,QWORD PTR fs:0x28
  407e32:	jne    4097ec <__flatcc_fb_codegen_c@@Base+0x229c>
  407e38:	add    rsp,0x478
  407e3f:	pop    rbx
  407e40:	pop    rbp
  407e41:	pop    r12
  407e43:	pop    r13
  407e45:	pop    r14
  407e47:	pop    r15
  407e49:	ret    
  407e4a:	nop    WORD PTR [rax+rax*1+0x0]
  407e50:	mov    rsi,QWORD PTR [rbx+0x18]
  407e54:	mov    rdx,QWORD PTR [rsp+0x10]
  407e59:	mov    rdi,QWORD PTR [rsi+0x18]
  407e5d:	mov    DWORD PTR [rsp+0x8],ecx
  407e61:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  407e66:	mov    rdx,QWORD PTR [rbx+0x18]
  407e6a:	mov    ecx,DWORD PTR [rsp+0x8]
  407e6e:	movzx  eax,WORD PTR [rdx+0x10]
  407e72:	cmp    ax,0x1
  407e76:	je     408c48 <__flatcc_fb_codegen_c@@Base+0x16f8>
  407e7c:	test   ax,ax
  407e7f:	je     408c18 <__flatcc_fb_codegen_c@@Base+0x16c8>
  407e85:	cmp    ax,0x3
  407e89:	jne    4088d0 <__flatcc_fb_codegen_c@@Base+0x1380>
  407e8f:	movzx  eax,WORD PTR [rbx+0x58]
  407e93:	mov    edx,DWORD PTR [rdx+0x48]
  407e96:	cmp    ax,0x4
  407e9a:	je     408f48 <__flatcc_fb_codegen_c@@Base+0x19f8>
  407ea0:	jbe    408a10 <__flatcc_fb_codegen_c@@Base+0x14c0>
  407ea6:	cmp    ax,0x5
  407eaa:	jne    408bf0 <__flatcc_fb_codegen_c@@Base+0x16a0>
  407eb0:	cmp    edx,0x9
  407eb3:	ja     408e71 <__flatcc_fb_codegen_c@@Base+0x1921>
  407eb9:	lea    rcx,[rip+0x2f704]        # 4375c4 <_IO_stdin_used@@Base+0x95c4>
  407ec0:	movsxd rax,DWORD PTR [rcx+rdx*4]
  407ec4:	add    rax,rcx
  407ec7:	notrack jmp rax
  407eca:	nop    WORD PTR [rax+rax*1+0x0]
  407ed0:	mov    eax,DWORD PTR [rbx+0x18]
  407ed3:	cmp    eax,0x5
  407ed6:	je     408948 <__flatcc_fb_codegen_c@@Base+0x13f8>
  407edc:	cmp    eax,0xb
  407edf:	ja     40963e <__flatcc_fb_codegen_c@@Base+0x20ee>
  407ee5:	lea    rsi,[rip+0x2f700]        # 4375ec <_IO_stdin_used@@Base+0x95ec>
  407eec:	mov    ecx,eax
  407eee:	movsxd rdx,DWORD PTR [rsi+rcx*4]
  407ef2:	add    rdx,rsi
  407ef5:	notrack jmp rdx
  407ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  407f00:	cmp    DWORD PTR [rbx+0x18],0xb
  407f04:	ja     409544 <__flatcc_fb_codegen_c@@Base+0x1ff4>
  407f0a:	mov    eax,DWORD PTR [rbx+0x18]
  407f0d:	lea    rdx,[rip+0x2f708]        # 43761c <_IO_stdin_used@@Base+0x961c>
  407f14:	movsxd rax,DWORD PTR [rdx+rax*4]
  407f18:	add    rax,rdx
  407f1b:	notrack jmp rax
  407f1e:	xchg   ax,ax
  407f20:	sub    rsp,0x8
  407f24:	mov    r8,QWORD PTR [rbx+0x88]
  407f2b:	mov    rdi,QWORD PTR [rbp+0xd0]
  407f32:	push   rcx
  407f33:	mov    r9,r14
  407f36:	mov    rcx,rbp
  407f39:	push   r12
  407f3b:	lea    rdx,[rip+0x281d6]        # 430118 <_IO_stdin_used@@Base+0x2118>
  407f42:	mov    esi,0x1
  407f47:	push   r13
  407f49:	xor    eax,eax
  407f4b:	call   405400 <__fprintf_chk@plt>
  407f50:	mov    rax,QWORD PTR [rbp+0xe0]
  407f57:	add    rsp,0x20
  407f5b:	mov    eax,DWORD PTR [rax+0x24]
  407f5e:	test   eax,eax
  407f60:	jne    407f98 <__flatcc_fb_codegen_c@@Base+0xa48>
  407f62:	test   BYTE PTR [rbx+0x70],0x80
  407f66:	je     407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  407f6c:	sub    rsp,0x8
  407f70:	mov    rdi,QWORD PTR [rbp+0xd0]
  407f77:	push   r12
  407f79:	mov    r9d,r13d
  407f7c:	mov    r8,r14
  407f7f:	mov    rcx,rbp
  407f82:	lea    rdx,[rip+0x281bf]        # 430148 <_IO_stdin_used@@Base+0x2148>
  407f89:	mov    esi,0x1
  407f8e:	xor    eax,eax
  407f90:	call   405400 <__fprintf_chk@plt>
  407f95:	pop    r11
  407f97:	pop    rax
  407f98:	test   BYTE PTR [rbx+0x70],0x80
  407f9c:	je     407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  407fa2:	mov    r10d,DWORD PTR [rsp+0x24]
  407fa7:	mov    rdi,QWORD PTR [rbp+0xd0]
  407fae:	test   r10d,r10d
  407fb1:	jne    408c78 <__flatcc_fb_codegen_c@@Base+0x1728>
  407fb7:	sub    rsp,0x8
  407fbb:	push   r12
  407fbd:	mov    r8,r14
  407fc0:	mov    esi,0x1
  407fc5:	mov    r9d,r13d
  407fc8:	mov    rcx,rbp
  407fcb:	lea    rdx,[rip+0x281a6]        # 430178 <_IO_stdin_used@@Base+0x2178>
  407fd2:	xor    eax,eax
  407fd4:	call   405400 <__fprintf_chk@plt>
  407fd9:	mov    rax,QWORD PTR [rbp+0xe0]
  407fe0:	pop    rsi
  407fe1:	mov    r8d,DWORD PTR [rax+0xa8]
  407fe8:	pop    rdi
  407fe9:	test   r8d,r8d
  407fec:	je     408020 <__flatcc_fb_codegen_c@@Base+0xad0>
  407fee:	mov    rdi,QWORD PTR [rbp+0xd0]
  407ff5:	push   r8
  407ff7:	mov    r9d,r13d
  407ffa:	mov    r8,r14
  407ffd:	push   r12
  407fff:	mov    rcx,rbp
  408002:	lea    rdx,[rip+0x28627]        # 430630 <_IO_stdin_used@@Base+0x2630>
  408009:	mov    esi,0x1
  40800e:	xor    eax,eax
  408010:	call   405400 <__fprintf_chk@plt>
  408015:	pop    r9
  408017:	pop    r10
  408019:	nop    DWORD PTR [rax+0x0]
  408020:	sub    rsp,0x8
  408024:	mov    rdi,QWORD PTR [rbp+0xd0]
  40802b:	push   r12
  40802d:	mov    r9d,r13d
  408030:	mov    r8,r14
  408033:	mov    rcx,rbp
  408036:	lea    rdx,[rip+0x2816b]        # 4301a8 <_IO_stdin_used@@Base+0x21a8>
  40803d:	mov    esi,0x1
  408042:	xor    eax,eax
  408044:	call   405400 <__fprintf_chk@plt>
  408049:	mov    rdi,QWORD PTR [rbp+0xd0]
  408050:	mov    rcx,rbp
  408053:	lea    rdx,[rip+0x28186]        # 4301e0 <_IO_stdin_used@@Base+0x21e0>
  40805a:	mov    esi,0x1
  40805f:	mov    r9d,r13d
  408062:	mov    r8,r14
  408065:	xor    eax,eax
  408067:	mov    QWORD PTR [rsp],r12
  40806b:	call   405400 <__fprintf_chk@plt>
  408070:	mov    rax,QWORD PTR [rbp+0xe0]
  408077:	pop    rdx
  408078:	mov    esi,DWORD PTR [rax+0xa8]
  40807e:	pop    rcx
  40807f:	test   esi,esi
  408081:	je     407e0d <__flatcc_fb_codegen_c@@Base+0x8bd>
  408087:	sub    rsp,0x8
  40808b:	mov    rdi,QWORD PTR [rbp+0xd0]
  408092:	push   r12
  408094:	mov    r9d,r13d
  408097:	mov    r8,r14
  40809a:	mov    rcx,r14
  40809d:	lea    rdx,[rip+0x27f84]        # 430028 <_IO_stdin_used@@Base+0x2028>
  4080a4:	mov    esi,0x1
  4080a9:	xor    eax,eax
  4080ab:	call   405400 <__fprintf_chk@plt>
  4080b0:	pop    r10
  4080b2:	pop    r11
  4080b4:	mov    DWORD PTR [rsp+0x24],0x1
  4080bc:	jmp    407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  4080c1:	nop    DWORD PTR [rax+0x0]
  4080c8:	mov    r8,QWORD PTR [rbx+0x88]
  4080cf:	mov    rdi,QWORD PTR [rbp+0xd0]
  4080d6:	push   rcx
  4080d7:	mov    r9,r14
  4080da:	mov    rcx,rbp
  4080dd:	push   rbp
  4080de:	lea    rdx,[rip+0x28133]        # 430218 <_IO_stdin_used@@Base+0x2218>
  4080e5:	push   r12
  4080e7:	push   r13
  4080e9:	jmp    407ddd <__flatcc_fb_codegen_c@@Base+0x88d>
  4080ee:	xchg   ax,ax
  4080f0:	lea    rax,[rip+0x2f26d]        # 437364 <_IO_stdin_used@@Base+0x9364>
  4080f7:	nop    WORD PTR [rax+rax*1+0x0]
  408100:	sub    rsp,0x8
  408104:	mov    r8,QWORD PTR [rbx+0x88]
  40810b:	mov    rdi,QWORD PTR [rbp+0xd0]
  408112:	push   rcx
  408113:	mov    esi,0x1
  408118:	mov    r9,r14
  40811b:	push   rax
  40811c:	mov    rcx,rbp
  40811f:	lea    rdx,[rip+0x27f32]        # 430058 <_IO_stdin_used@@Base+0x2058>
  408126:	push   rbp
  408127:	xor    eax,eax
  408129:	push   r12
  40812b:	push   r13
  40812d:	call   405400 <__fprintf_chk@plt>
  408132:	mov    rsi,QWORD PTR [rbx+0x90]
  408139:	add    rsp,0x30
  40813d:	test   rsi,rsi
  408140:	jne    4081b8 <__flatcc_fb_codegen_c@@Base+0xc68>
  408142:	test   BYTE PTR [rbx+0x70],0x80
  408146:	je     407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  40814c:	jmp    407df3 <__flatcc_fb_codegen_c@@Base+0x8a3>
  408151:	nop    DWORD PTR [rax+0x0]
  408158:	lea    rax,[rip+0x2f211]        # 437370 <_IO_stdin_used@@Base+0x9370>
  40815f:	jmp    408100 <__flatcc_fb_codegen_c@@Base+0xbb0>
  408161:	nop    DWORD PTR [rax+0x0]
  408168:	sub    rsp,0x8
  40816c:	mov    r8,QWORD PTR [rbx+0x88]
  408173:	mov    rdi,QWORD PTR [rbp+0xd0]
  40817a:	push   rcx
  40817b:	lea    rax,[rip+0x2f24e]        # 4373d0 <_IO_stdin_used@@Base+0x93d0>
  408182:	mov    esi,0x1
  408187:	push   rax
  408188:	mov    r9,r14
  40818b:	mov    rcx,rbp
  40818e:	push   rbp
  40818f:	lea    rdx,[rip+0x27ec2]        # 430058 <_IO_stdin_used@@Base+0x2058>
  408196:	xor    eax,eax
  408198:	push   r12
  40819a:	push   r13
  40819c:	call   405400 <__fprintf_chk@plt>
  4081a1:	mov    rsi,QWORD PTR [rbx+0x90]
  4081a8:	add    rsp,0x30
  4081ac:	test   rsi,rsi
  4081af:	je     408142 <__flatcc_fb_codegen_c@@Base+0xbf2>
  4081b1:	nop    DWORD PTR [rax+0x0]
  4081b8:	lea    r12,[rsp+0x220]
  4081c0:	xor    eax,eax
  4081c2:	mov    ecx,0x1d
  4081c7:	mov    rdi,r12
  4081ca:	lea    r13,[rsp+0x310]
  4081d2:	rep stos QWORD PTR es:[rdi],rax
  4081d5:	mov    ecx,0x1d
  4081da:	mov    rdi,r13
  4081dd:	rep stos QWORD PTR es:[rdi],rax
  4081e0:	movzx  eax,WORD PTR [rsi+0x10]
  4081e4:	test   ax,ax
  4081e7:	jne    408928 <__flatcc_fb_codegen_c@@Base+0x13d8>
  4081ed:	lea    rax,[rip+0x2f13d]        # 437331 <_IO_stdin_used@@Base+0x9331>
  4081f4:	mov    QWORD PTR [rsp+0x8],rax
  4081f9:	mov    rdi,QWORD PTR [rsi+0x18]
  4081fd:	mov    rdx,r12
  408200:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  408205:	mov    rax,QWORD PTR [rsp+0x28]
  40820a:	cmp    WORD PTR [rax+0x10],0x0
  40820f:	jne    409708 <__flatcc_fb_codegen_c@@Base+0x21b8>
  408215:	mov    rsi,QWORD PTR [rsp+0x28]
  40821a:	mov    rdx,r13
  40821d:	mov    rdi,QWORD PTR [rsi+0x18]
  408221:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  408226:	mov    rax,QWORD PTR [rbx+0x8]
  40822a:	sub    rsp,0x8
  40822e:	mov    r9,QWORD PTR [rax+0x8]
  408232:	mov    rdi,QWORD PTR [rbp+0xd0]
  408239:	push   QWORD PTR [rsp+0x10]
  40823d:	mov    r8,r13
  408240:	mov    rcx,rbp
  408243:	push   r12
  408245:	lea    rdx,[rip+0x27e9c]        # 4300e8 <_IO_stdin_used@@Base+0x20e8>
  40824c:	mov    esi,0x1
  408251:	push   QWORD PTR [rax]
  408253:	xor    eax,eax
  408255:	call   405400 <__fprintf_chk@plt>
  40825a:	add    rsp,0x20
  40825e:	test   BYTE PTR [rbx+0x70],0x80
  408262:	jne    407df3 <__flatcc_fb_codegen_c@@Base+0x8a3>
  408268:	jmp    407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  40826d:	nop    DWORD PTR [rax]
  408270:	lea    rax,[rip+0x2f106]        # 43737d <_IO_stdin_used@@Base+0x937d>
  408277:	jmp    408100 <__flatcc_fb_codegen_c@@Base+0xbb0>
  40827c:	nop    DWORD PTR [rax+0x0]
  408280:	movzx  edx,WORD PTR [rbx+0x58]
  408284:	cmp    dx,0x4
  408288:	je     4091db <__flatcc_fb_codegen_c@@Base+0x1c8b>
  40828e:	jbe    408774 <__flatcc_fb_codegen_c@@Base+0x1224>
  408294:	cmp    dx,0x5
  408298:	je     408e80 <__flatcc_fb_codegen_c@@Base+0x1930>
  40829e:	cmp    dx,0x6
  4082a2:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  4082a8:	lea    rsi,[rip+0x2f058]        # 437307 <_IO_stdin_used@@Base+0x9307>
  4082af:	mov    QWORD PTR [rsp+0x8],rsi
  4082b4:	mov    r10,rsi
  4082b7:	jmp    408687 <__flatcc_fb_codegen_c@@Base+0x1137>
  4082bc:	nop    DWORD PTR [rax+0x0]
  4082c0:	movzx  edx,WORD PTR [rbx+0x58]
  4082c4:	cmp    dx,0x4
  4082c8:	je     4091b0 <__flatcc_fb_codegen_c@@Base+0x1c60>
  4082ce:	jbe    408704 <__flatcc_fb_codegen_c@@Base+0x11b4>
  4082d4:	cmp    dx,0x5
  4082d8:	je     408e46 <__flatcc_fb_codegen_c@@Base+0x18f6>
  4082de:	cmp    dx,0x6
  4082e2:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  4082e8:	lea    rsi,[rip+0x2f00b]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  4082ef:	mov    QWORD PTR [rsp+0x8],rsi
  4082f4:	lea    r10,[rip+0x2f007]        # 437302 <_IO_stdin_used@@Base+0x9302>
  4082fb:	jmp    408687 <__flatcc_fb_codegen_c@@Base+0x1137>
  408300:	movzx  edx,WORD PTR [rbx+0x58]
  408304:	cmp    dx,0x4
  408308:	je     409265 <__flatcc_fb_codegen_c@@Base+0x1d15>
  40830e:	jbe    408814 <__flatcc_fb_codegen_c@@Base+0x12c4>
  408314:	cmp    dx,0x5
  408318:	je     408edc <__flatcc_fb_codegen_c@@Base+0x198c>
  40831e:	cmp    dx,0x6
  408322:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  408328:	lea    rax,[rip+0x2ef9f]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  40832f:	mov    QWORD PTR [rsp+0x8],rax
  408334:	lea    r10,[rip+0x2ef9c]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  40833b:	lea    rax,[rip+0x3e61c]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  408342:	mov    QWORD PTR [rsp+0x18],rax
  408347:	lea    r8,[rip+0x2efd2]        # 437320 <_IO_stdin_used@@Base+0x9320>
  40834e:	jmp    408450 <__flatcc_fb_codegen_c@@Base+0xf00>
  408353:	nop    DWORD PTR [rax+rax*1+0x0]
  408358:	movzx  edx,WORD PTR [rbx+0x58]
  40835c:	cmp    dx,0x4
  408360:	je     409289 <__flatcc_fb_codegen_c@@Base+0x1d39>
  408366:	jbe    4087d6 <__flatcc_fb_codegen_c@@Base+0x1286>
  40836c:	cmp    dx,0x5
  408370:	je     408f24 <__flatcc_fb_codegen_c@@Base+0x19d4>
  408376:	cmp    dx,0x6
  40837a:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  408380:	lea    rax,[rip+0x2ef31]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  408387:	mov    QWORD PTR [rsp+0x8],rax
  40838c:	lea    r10,[rip+0x2ef2e]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  408393:	lea    rax,[rip+0x3e5c4]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40839a:	mov    QWORD PTR [rsp+0x18],rax
  40839f:	lea    r8,[rip+0x2ef69]        # 43730f <_IO_stdin_used@@Base+0x930f>
  4083a6:	jmp    408450 <__flatcc_fb_codegen_c@@Base+0xf00>
  4083ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4083b0:	movzx  edx,WORD PTR [rbx+0x58]
  4083b4:	cmp    dx,0x4
  4083b8:	je     40921d <__flatcc_fb_codegen_c@@Base+0x1ccd>
  4083be:	jbe    4087f5 <__flatcc_fb_codegen_c@@Base+0x12a5>
  4083c4:	cmp    dx,0x5
  4083c8:	je     408f00 <__flatcc_fb_codegen_c@@Base+0x19b0>
  4083ce:	cmp    dx,0x6
  4083d2:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  4083d8:	lea    rax,[rip+0x2eeff]        # 4372de <_IO_stdin_used@@Base+0x92de>
  4083df:	mov    QWORD PTR [rsp+0x8],rax
  4083e4:	lea    r10,[rip+0x2eefc]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  4083eb:	lea    rax,[rip+0x3e56c]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4083f2:	mov    QWORD PTR [rsp+0x18],rax
  4083f7:	lea    r8,[rip+0x2ef2b]        # 437329 <_IO_stdin_used@@Base+0x9329>
  4083fe:	jmp    408450 <__flatcc_fb_codegen_c@@Base+0xf00>
  408400:	movzx  edx,WORD PTR [rbx+0x58]
  408404:	cmp    dx,0x4
  408408:	je     409241 <__flatcc_fb_codegen_c@@Base+0x1cf1>
  40840e:	jbe    40879f <__flatcc_fb_codegen_c@@Base+0x124f>
  408414:	cmp    dx,0x5
  408418:	je     408ebb <__flatcc_fb_codegen_c@@Base+0x196b>
  40841e:	cmp    dx,0x6
  408422:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  408428:	lea    rax,[rip+0x2ee88]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  40842f:	mov    QWORD PTR [rsp+0x8],rax
  408434:	lea    rax,[rip+0x3e523]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40843b:	mov    QWORD PTR [rsp+0x18],rax
  408440:	lea    r10,[rip+0x2ee79]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  408447:	lea    r8,[rip+0x2eec0]        # 43730e <_IO_stdin_used@@Base+0x930e>
  40844e:	xchg   ax,ax
  408450:	lea    r11,[rsp+0x400]
  408458:	movzx  r9d,BYTE PTR [rbx+0x48]
  40845d:	mov    rdi,r11
  408460:	lea    rcx,[rip+0x2ef5a]        # 4373c1 <_IO_stdin_used@@Base+0x93c1>
  408467:	mov    edx,0x64
  40846c:	mov    esi,0x1
  408471:	xor    eax,eax
  408473:	mov    QWORD PTR [rsp+0x38],r10
  408478:	mov    QWORD PTR [rsp+0x30],r11
  40847d:	call   405420 <__sprintf_chk@plt>
  408482:	mov    r11,QWORD PTR [rsp+0x30]
  408487:	mov    r10,QWORD PTR [rsp+0x38]
  40848c:	sub    rsp,0x8
  408490:	mov    r8,QWORD PTR [rbx+0x88]
  408497:	mov    rdi,QWORD PTR [rbp+0xd0]
  40849e:	push   r11
  4084a0:	mov    r9,r14
  4084a3:	mov    rcx,rbp
  4084a6:	push   QWORD PTR [rsp+0x18]
  4084aa:	lea    rdx,[rip+0x279bf]        # 42fe70 <_IO_stdin_used@@Base+0x1e70>
  4084b1:	mov    esi,0x1
  4084b6:	push   QWORD PTR [rsp+0x30]
  4084ba:	xor    eax,eax
  4084bc:	push   r10
  4084be:	push   rbp
  4084bf:	push   r12
  4084c1:	push   r13
  4084c3:	call   405400 <__fprintf_chk@plt>
  4084c8:	mov    rax,QWORD PTR [rbp+0xe0]
  4084cf:	add    rsp,0x40
  4084d3:	mov    eax,DWORD PTR [rax+0x24]
  4084d6:	test   eax,eax
  4084d8:	jne    408519 <__flatcc_fb_codegen_c@@Base+0xfc9>
  4084da:	test   BYTE PTR [rbx+0x70],0x80
  4084de:	je     407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  4084e4:	sub    rsp,0x8
  4084e8:	mov    rdi,QWORD PTR [rbp+0xd0]
  4084ef:	push   QWORD PTR [rsp+0x10]
  4084f3:	mov    r9d,r13d
  4084f6:	mov    r8,r14
  4084f9:	push   QWORD PTR [rsp+0x28]
  4084fd:	mov    rcx,rbp
  408500:	lea    rdx,[rip+0x279a9]        # 42feb0 <_IO_stdin_used@@Base+0x1eb0>
  408507:	push   r12
  408509:	mov    esi,0x1
  40850e:	xor    eax,eax
  408510:	call   405400 <__fprintf_chk@plt>
  408515:	add    rsp,0x20
  408519:	test   BYTE PTR [rbx+0x70],0x80
  40851d:	je     407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  408523:	mov    eax,DWORD PTR [rsp+0x24]
  408527:	mov    rdi,QWORD PTR [rbp+0xd0]
  40852e:	test   eax,eax
  408530:	jne    408d00 <__flatcc_fb_codegen_c@@Base+0x17b0>
  408536:	lea    rdx,[rip+0x279f3]        # 42ff30 <_IO_stdin_used@@Base+0x1f30>
  40853d:	mov    esi,0x1
  408542:	xor    eax,eax
  408544:	call   405400 <__fprintf_chk@plt>
  408549:	sub    rsp,0x8
  40854d:	mov    rdi,QWORD PTR [rbp+0xd0]
  408554:	push   QWORD PTR [rsp+0x10]
  408558:	mov    r9d,r13d
  40855b:	mov    r8,r14
  40855e:	push   QWORD PTR [rsp+0x28]
  408562:	mov    rcx,rbp
  408565:	lea    rdx,[rip+0x27a04]        # 42ff70 <_IO_stdin_used@@Base+0x1f70>
  40856c:	push   r12
  40856e:	mov    esi,0x1
  408573:	xor    eax,eax
  408575:	call   405400 <__fprintf_chk@plt>
  40857a:	mov    rax,QWORD PTR [rbp+0xe0]
  408581:	add    rsp,0x20
  408585:	mov    r9d,DWORD PTR [rax+0xa8]
  40858c:	test   r9d,r9d
  40858f:	je     4085c8 <__flatcc_fb_codegen_c@@Base+0x1078>
  408591:	mov    rdi,QWORD PTR [rbp+0xd0]
  408598:	push   rbp
  408599:	mov    r9d,r13d
  40859c:	mov    r8,r14
  40859f:	push   QWORD PTR [rsp+0x10]
  4085a3:	mov    rcx,rbp
  4085a6:	lea    rdx,[rip+0x28043]        # 4305f0 <_IO_stdin_used@@Base+0x25f0>
  4085ad:	push   QWORD PTR [rsp+0x28]
  4085b1:	mov    esi,0x1
  4085b6:	xor    eax,eax
  4085b8:	push   r12
  4085ba:	call   405400 <__fprintf_chk@plt>
  4085bf:	add    rsp,0x20
  4085c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4085c8:	sub    rsp,0x8
  4085cc:	mov    rdi,QWORD PTR [rbp+0xd0]
  4085d3:	push   QWORD PTR [rsp+0x10]
  4085d7:	mov    r9d,r13d
  4085da:	mov    r8,r14
  4085dd:	push   QWORD PTR [rsp+0x28]
  4085e1:	mov    rcx,rbp
  4085e4:	lea    rdx,[rip+0x279bd]        # 42ffa8 <_IO_stdin_used@@Base+0x1fa8>
  4085eb:	push   r12
  4085ed:	mov    esi,0x1
  4085f2:	xor    eax,eax
  4085f4:	call   405400 <__fprintf_chk@plt>
  4085f9:	add    rsp,0x18
  4085fd:	mov    rdi,QWORD PTR [rbp+0xd0]
  408604:	push   QWORD PTR [rsp+0x10]
  408608:	mov    r9d,r13d
  40860b:	mov    r8,r14
  40860e:	push   QWORD PTR [rsp+0x28]
  408612:	mov    rcx,rbp
  408615:	lea    rdx,[rip+0x279cc]        # 42ffe8 <_IO_stdin_used@@Base+0x1fe8>
  40861c:	push   r12
  40861e:	mov    esi,0x1
  408623:	xor    eax,eax
  408625:	call   405400 <__fprintf_chk@plt>
  40862a:	mov    rax,QWORD PTR [rbp+0xe0]
  408631:	add    rsp,0x20
  408635:	mov    eax,DWORD PTR [rax+0xa8]
  40863b:	test   eax,eax
  40863d:	je     407e0d <__flatcc_fb_codegen_c@@Base+0x8bd>
  408643:	jmp    408087 <__flatcc_fb_codegen_c@@Base+0xb37>
  408648:	nop    DWORD PTR [rax+rax*1+0x0]
  408650:	movzx  edx,WORD PTR [rbx+0x58]
  408654:	cmp    dx,0x4
  408658:	je     40917a <__flatcc_fb_codegen_c@@Base+0x1c2a>
  40865e:	jbe    408833 <__flatcc_fb_codegen_c@@Base+0x12e3>
  408664:	cmp    dx,0x5
  408668:	je     408ea1 <__flatcc_fb_codegen_c@@Base+0x1951>
  40866e:	cmp    dx,0x6
  408672:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  408678:	lea    rsi,[rip+0x2ec48]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  40867f:	mov    QWORD PTR [rsp+0x8],rsi
  408684:	mov    r10,rsi
  408687:	cmp    eax,0x9
  40868a:	ja     408e71 <__flatcc_fb_codegen_c@@Base+0x1921>
  408690:	lea    rdx,[rip+0x2efb5]        # 43764c <_IO_stdin_used@@Base+0x964c>
  408697:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40869b:	add    rax,rdx
  40869e:	notrack jmp rax
  4086a1:	nop    DWORD PTR [rax+0x0]
  4086a8:	lea    rax,[rip+0x2eccf]        # 43737e <_IO_stdin_used@@Base+0x937e>
  4086af:	jmp    408100 <__flatcc_fb_codegen_c@@Base+0xbb0>
  4086b4:	nop    DWORD PTR [rax+0x0]
  4086b8:	lea    rax,[rip+0x2ed12]        # 4373d1 <_IO_stdin_used@@Base+0x93d1>
  4086bf:	jmp    408100 <__flatcc_fb_codegen_c@@Base+0xbb0>
  4086c4:	nop    DWORD PTR [rax+0x0]
  4086c8:	lea    rax,[rip+0x2ec7e]        # 43734d <_IO_stdin_used@@Base+0x934d>
  4086cf:	jmp    408100 <__flatcc_fb_codegen_c@@Base+0xbb0>
  4086d4:	nop    DWORD PTR [rax+0x0]
  4086d8:	lea    rax,[rip+0x2ec92]        # 437371 <_IO_stdin_used@@Base+0x9371>
  4086df:	jmp    408100 <__flatcc_fb_codegen_c@@Base+0xbb0>
  4086e4:	nop    DWORD PTR [rax+0x0]
  4086e8:	lea    rax,[rip+0x2ec51]        # 437340 <_IO_stdin_used@@Base+0x9340>
  4086ef:	jmp    408100 <__flatcc_fb_codegen_c@@Base+0xbb0>
  4086f4:	nop    DWORD PTR [rax+0x0]
  4086f8:	lea    rax,[rip+0x2ec5a]        # 437359 <_IO_stdin_used@@Base+0x9359>
  4086ff:	jmp    408100 <__flatcc_fb_codegen_c@@Base+0xbb0>
  408704:	cmp    dx,0x3
  408708:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  40870e:	lea    rax,[rip+0x2ebe5]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  408715:	mov    QWORD PTR [rsp+0x8],rax
  40871a:	lea    rax,[rip+0x3e23d]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  408721:	mov    QWORD PTR [rsp+0x18],rax
  408726:	lea    r10,[rip+0x2ebd5]        # 437302 <_IO_stdin_used@@Base+0x9302>
  40872d:	nop    DWORD PTR [rax]
  408730:	lea    r11,[rsp+0x400]
  408738:	vmovsd xmm0,QWORD PTR [rbx+0x48]
  40873d:	mov    rdi,r11
  408740:	lea    rcx,[rip+0x2ec85]        # 4373cc <_IO_stdin_used@@Base+0x93cc>
  408747:	mov    edx,0x64
  40874c:	mov    esi,0x1
  408751:	mov    eax,0x1
  408756:	mov    QWORD PTR [rsp+0x38],r10
  40875b:	mov    QWORD PTR [rsp+0x30],r11
  408760:	call   405420 <__sprintf_chk@plt>
  408765:	mov    r11,QWORD PTR [rsp+0x30]
  40876a:	mov    r10,QWORD PTR [rsp+0x38]
  40876f:	jmp    40848c <__flatcc_fb_codegen_c@@Base+0xf3c>
  408774:	cmp    dx,0x3
  408778:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  40877e:	lea    rax,[rip+0x2eb82]        # 437307 <_IO_stdin_used@@Base+0x9307>
  408785:	mov    QWORD PTR [rsp+0x8],rax
  40878a:	lea    rax,[rip+0x3e1cd]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  408791:	mov    QWORD PTR [rsp+0x18],rax
  408796:	lea    r10,[rip+0x2eb6a]        # 437307 <_IO_stdin_used@@Base+0x9307>
  40879d:	jmp    408730 <__flatcc_fb_codegen_c@@Base+0x11e0>
  40879f:	cmp    dx,0x3
  4087a3:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  4087a9:	lea    rsi,[rip+0x2eb07]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  4087b0:	mov    QWORD PTR [rsp+0x8],rsi
  4087b5:	lea    r10,[rip+0x2eb04]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  4087bc:	cmp    eax,0xb
  4087bf:	je     40884c <__flatcc_fb_codegen_c@@Base+0x12fc>
  4087c5:	lea    rax,[rip+0x3e192]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4087cc:	mov    QWORD PTR [rsp+0x18],rax
  4087d1:	jmp    408730 <__flatcc_fb_codegen_c@@Base+0x11e0>
  4087d6:	cmp    dx,0x3
  4087da:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  4087e0:	lea    rsi,[rip+0x2ead1]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  4087e7:	mov    QWORD PTR [rsp+0x8],rsi
  4087ec:	lea    r10,[rip+0x2eace]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  4087f3:	jmp    4087bc <__flatcc_fb_codegen_c@@Base+0x126c>
  4087f5:	cmp    dx,0x3
  4087f9:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  4087ff:	lea    rsi,[rip+0x2ead8]        # 4372de <_IO_stdin_used@@Base+0x92de>
  408806:	mov    QWORD PTR [rsp+0x8],rsi
  40880b:	lea    r10,[rip+0x2ead5]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  408812:	jmp    4087bc <__flatcc_fb_codegen_c@@Base+0x126c>
  408814:	cmp    dx,0x3
  408818:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  40881e:	lea    rsi,[rip+0x2eaa9]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  408825:	mov    QWORD PTR [rsp+0x8],rsi
  40882a:	lea    r10,[rip+0x2eaa6]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  408831:	jmp    4087bc <__flatcc_fb_codegen_c@@Base+0x126c>
  408833:	cmp    dx,0x3
  408837:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  40883d:	lea    rax,[rip+0x2ea83]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  408844:	mov    QWORD PTR [rsp+0x8],rax
  408849:	mov    r10,rax
  40884c:	lea    r11,[rsp+0x400]
  408854:	mov    rdi,r11
  408857:	vxorps xmm0,xmm0,xmm0
  40885b:	lea    rcx,[rip+0x2eb66]        # 4373c8 <_IO_stdin_used@@Base+0x93c8>
  408862:	mov    edx,0x64
  408867:	mov    esi,0x1
  40886c:	mov    eax,0x1
  408871:	mov    QWORD PTR [rsp+0x38],r10
  408876:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbx+0x48]
  40887b:	mov    QWORD PTR [rsp+0x30],r11
  408880:	vcvtss2sd xmm0,xmm0,xmm0
  408884:	call   405420 <__sprintf_chk@plt>
  408889:	lea    rax,[rip+0x3e0ce]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  408890:	mov    QWORD PTR [rsp+0x18],rax
  408895:	mov    r11,QWORD PTR [rsp+0x30]
  40889a:	mov    r10,QWORD PTR [rsp+0x38]
  40889f:	jmp    40848c <__flatcc_fb_codegen_c@@Base+0xf3c>
  4088a4:	nop    DWORD PTR [rax+0x0]
  4088a8:	mov    rdi,QWORD PTR [rbp+0xd0]
  4088af:	mov    r9,r12
  4088b2:	mov    r8d,r13d
  4088b5:	mov    rcx,r14
  4088b8:	lea    rdx,[rip+0x27581]        # 42fe40 <_IO_stdin_used@@Base+0x1e40>
  4088bf:	mov    esi,0x1
  4088c4:	xor    eax,eax
  4088c6:	call   405400 <__fprintf_chk@plt>
  4088cb:	jmp    407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  4088d0:	cmp    ax,0x4
  4088d4:	jne    40968e <__flatcc_fb_codegen_c@@Base+0x213e>
  4088da:	sub    rsp,0x8
  4088de:	mov    r9,QWORD PTR [rbx+0x88]
  4088e5:	mov    rdi,QWORD PTR [rbp+0xd0]
  4088ec:	push   rcx
  4088ed:	mov    r8,rbp
  4088f0:	mov    rcx,rbp
  4088f3:	push   QWORD PTR [rsp+0x20]
  4088f7:	lea    rdx,[rip+0x27b02]        # 430400 <_IO_stdin_used@@Base+0x2400>
  4088fe:	push   r12
  408900:	push   r13
  408902:	push   r14
  408904:	mov    esi,0x1
  408909:	xor    eax,eax
  40890b:	call   405400 <__fprintf_chk@plt>
  408910:	add    rsp,0x30
  408914:	test   BYTE PTR [rbx+0x70],0x80
  408918:	jne    407df3 <__flatcc_fb_codegen_c@@Base+0x8a3>
  40891e:	jmp    407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  408923:	nop    DWORD PTR [rax+rax*1+0x0]
  408928:	cmp    ax,0x1
  40892c:	jne    4097f1 <__flatcc_fb_codegen_c@@Base+0x22a1>
  408932:	lea    rax,[rip+0x2e9ff]        # 437338 <_IO_stdin_used@@Base+0x9338>
  408939:	mov    QWORD PTR [rsp+0x8],rax
  40893e:	jmp    4081f9 <__flatcc_fb_codegen_c@@Base+0xca9>
  408943:	nop    DWORD PTR [rax+rax*1+0x0]
  408948:	movzx  eax,WORD PTR [rbx+0x58]
  40894c:	cmp    ax,0x4
  408950:	je     408db0 <__flatcc_fb_codegen_c@@Base+0x1860>
  408956:	jbe    408990 <__flatcc_fb_codegen_c@@Base+0x1440>
  408958:	cmp    ax,0x5
  40895c:	jne    4089b7 <__flatcc_fb_codegen_c@@Base+0x1467>
  40895e:	lea    rax,[rip+0x2e988]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  408965:	mov    QWORD PTR [rsp+0x18],rbp
  40896a:	mov    QWORD PTR [rsp+0x8],rax
  40896f:	lea    r10,[rip+0x2e97e]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  408976:	mov    ecx,0x5
  40897b:	lea    rdx,[rip+0x2ecf2]        # 437674 <_IO_stdin_used@@Base+0x9674>
  408982:	movsxd rax,DWORD PTR [rdx+rcx*4]
  408986:	add    rax,rdx
  408989:	notrack jmp rax
  40898c:	nop    DWORD PTR [rax+0x0]
  408990:	cmp    ax,0x3
  408994:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  40899a:	lea    rax,[rip+0x2e94c]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  4089a1:	mov    QWORD PTR [rsp+0x18],rbp
  4089a6:	mov    QWORD PTR [rsp+0x8],rax
  4089ab:	lea    r10,[rip+0x2e942]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  4089b2:	jmp    408730 <__flatcc_fb_codegen_c@@Base+0x11e0>
  4089b7:	cmp    ax,0x6
  4089bb:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  4089c1:	lea    rax,[rip+0x2e925]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  4089c8:	mov    QWORD PTR [rsp+0x18],rbp
  4089cd:	mov    QWORD PTR [rsp+0x8],rax
  4089d2:	lea    r10,[rip+0x2e91b]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  4089d9:	lea    r8,[rip+0x2e937]        # 437317 <_IO_stdin_used@@Base+0x9317>
  4089e0:	jmp    408450 <__flatcc_fb_codegen_c@@Base+0xf00>
  4089e5:	nop    DWORD PTR [rax]
  4089e8:	sub    rsp,0x8
  4089ec:	push   rcx
  4089ed:	mov    r9,r8
  4089f0:	mov    rcx,rbp
  4089f3:	push   QWORD PTR [rsp+0x20]
  4089f7:	mov    r8,rbp
  4089fa:	lea    rdx,[rip+0x27ad7]        # 4304d8 <_IO_stdin_used@@Base+0x24d8>
  408a01:	push   r12
  408a03:	push   r13
  408a05:	push   r14
  408a07:	jmp    408904 <__flatcc_fb_codegen_c@@Base+0x13b4>
  408a0c:	nop    DWORD PTR [rax+0x0]
  408a10:	cmp    ax,0x3
  408a14:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  408a1a:	cmp    edx,0xb
  408a1d:	je     4091fc <__flatcc_fb_codegen_c@@Base+0x1cac>
  408a23:	vmovsd xmm0,QWORD PTR [rbx+0x48]
  408a28:	lea    r11,[rsp+0x400]
  408a30:	lea    rcx,[rip+0x2e995]        # 4373cc <_IO_stdin_used@@Base+0x93cc>
  408a37:	mov    rdi,r11
  408a3a:	mov    edx,0x64
  408a3f:	mov    esi,0x1
  408a44:	mov    eax,0x1
  408a49:	mov    QWORD PTR [rsp+0x8],r11
  408a4e:	call   405420 <__sprintf_chk@plt>
  408a53:	mov    r11,QWORD PTR [rsp+0x8]
  408a58:	sub    rsp,0x8
  408a5c:	mov    r8,QWORD PTR [rbx+0x88]
  408a63:	mov    rdi,QWORD PTR [rbp+0xd0]
  408a6a:	push   r11
  408a6c:	mov    r9,r14
  408a6f:	mov    rcx,rbp
  408a72:	mov    rax,QWORD PTR [rsp+0x20]
  408a77:	lea    rdx,[rip+0x27852]        # 4302d0 <_IO_stdin_used@@Base+0x22d0>
  408a7e:	push   rax
  408a7f:	mov    esi,0x1
  408a84:	push   rax
  408a85:	xor    eax,eax
  408a87:	push   r12
  408a89:	push   r13
  408a8b:	call   405400 <__fprintf_chk@plt>
  408a90:	mov    rax,QWORD PTR [rbp+0xe0]
  408a97:	add    rsp,0x30
  408a9b:	mov    r11d,DWORD PTR [rax+0x24]
  408a9f:	test   r11d,r11d
  408aa2:	jne    408adb <__flatcc_fb_codegen_c@@Base+0x158b>
  408aa4:	test   BYTE PTR [rbx+0x70],0x80
  408aa8:	je     407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  408aae:	mov    rdi,QWORD PTR [rbp+0xd0]
  408ab5:	push   QWORD PTR [rsp+0x10]
  408ab9:	mov    r9d,r13d
  408abc:	mov    r8,r14
  408abf:	push   r12
  408ac1:	mov    rcx,rbp
  408ac4:	lea    rdx,[rip+0x27845]        # 430310 <_IO_stdin_used@@Base+0x2310>
  408acb:	mov    esi,0x1
  408ad0:	xor    eax,eax
  408ad2:	call   405400 <__fprintf_chk@plt>
  408ad7:	pop    r9
  408ad9:	pop    r10
  408adb:	test   BYTE PTR [rbx+0x70],0x80
  408adf:	je     407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  408ae5:	mov    r8d,DWORD PTR [rsp+0x24]
  408aea:	mov    rdi,QWORD PTR [rbp+0xd0]
  408af1:	test   r8d,r8d
  408af4:	jne    408f62 <__flatcc_fb_codegen_c@@Base+0x1a12>
  408afa:	lea    rdx,[rip+0x2742f]        # 42ff30 <_IO_stdin_used@@Base+0x1f30>
  408b01:	mov    esi,0x1
  408b06:	xor    eax,eax
  408b08:	call   405400 <__fprintf_chk@plt>
  408b0d:	mov    rdi,QWORD PTR [rbp+0xd0]
  408b14:	push   QWORD PTR [rsp+0x10]
  408b18:	mov    rcx,rbp
  408b1b:	lea    rdx,[rip+0x27826]        # 430348 <_IO_stdin_used@@Base+0x2348>
  408b22:	push   r12
  408b24:	mov    r9d,r13d
  408b27:	mov    r8,r14
  408b2a:	mov    esi,0x1
  408b2f:	xor    eax,eax
  408b31:	call   405400 <__fprintf_chk@plt>
  408b36:	mov    rax,QWORD PTR [rbp+0xe0]
  408b3d:	pop    r11
  408b3f:	mov    ecx,DWORD PTR [rax+0xa8]
  408b45:	pop    rdx
  408b46:	test   ecx,ecx
  408b48:	je     408b79 <__flatcc_fb_codegen_c@@Base+0x1629>
  408b4a:	mov    rdi,QWORD PTR [rbp+0xd0]
  408b51:	push   rdx
  408b52:	mov    r9d,r13d
  408b55:	mov    r8,r14
  408b58:	push   rbp
  408b59:	mov    rcx,rbp
  408b5c:	lea    rdx,[rip+0x27afd]        # 430660 <_IO_stdin_used@@Base+0x2660>
  408b63:	push   QWORD PTR [rsp+0x20]
  408b67:	mov    esi,0x1
  408b6c:	xor    eax,eax
  408b6e:	push   r12
  408b70:	call   405400 <__fprintf_chk@plt>
  408b75:	add    rsp,0x20
  408b79:	mov    rdi,QWORD PTR [rbp+0xd0]
  408b80:	push   QWORD PTR [rsp+0x10]
  408b84:	mov    r9d,r13d
  408b87:	mov    r8,r14
  408b8a:	push   r12
  408b8c:	mov    rcx,rbp
  408b8f:	lea    rdx,[rip+0x277ea]        # 430380 <_IO_stdin_used@@Base+0x2380>
  408b96:	mov    esi,0x1
  408b9b:	xor    eax,eax
  408b9d:	call   405400 <__fprintf_chk@plt>
  408ba2:	mov    rdi,QWORD PTR [rbp+0xd0]
  408ba9:	push   QWORD PTR [rsp+0x20]
  408bad:	mov    r9d,r13d
  408bb0:	mov    r8,r14
  408bb3:	push   r12
  408bb5:	mov    rcx,rbp
  408bb8:	lea    rdx,[rip+0x27801]        # 4303c0 <_IO_stdin_used@@Base+0x23c0>
  408bbf:	mov    esi,0x1
  408bc4:	xor    eax,eax
  408bc6:	call   405400 <__fprintf_chk@plt>
  408bcb:	mov    rax,QWORD PTR [rbp+0xe0]
  408bd2:	add    rsp,0x20
  408bd6:	mov    eax,DWORD PTR [rax+0xa8]
  408bdc:	test   eax,eax
  408bde:	je     407e0d <__flatcc_fb_codegen_c@@Base+0x8bd>
  408be4:	jmp    408087 <__flatcc_fb_codegen_c@@Base+0xb37>
  408be9:	nop    DWORD PTR [rax+0x0]
  408bf0:	cmp    ax,0x6
  408bf4:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  408bfa:	cmp    edx,0x9
  408bfd:	ja     408e71 <__flatcc_fb_codegen_c@@Base+0x1921>
  408c03:	lea    rcx,[rip+0x2ea92]        # 43769c <_IO_stdin_used@@Base+0x969c>
  408c0a:	movsxd rax,DWORD PTR [rcx+rdx*4]
  408c0e:	add    rax,rcx
  408c11:	notrack jmp rax
  408c14:	nop    DWORD PTR [rax+0x0]
  408c18:	mov    r8,QWORD PTR [rbx+0x88]
  408c1f:	mov    rdi,QWORD PTR [rbp+0xd0]
  408c26:	push   rcx
  408c27:	mov    r9,r14
  408c2a:	mov    rcx,rbp
  408c2d:	push   QWORD PTR [rsp+0x18]
  408c31:	lea    rdx,[rip+0x27660]        # 430298 <_IO_stdin_used@@Base+0x2298>
  408c38:	push   r12
  408c3a:	push   r13
  408c3c:	jmp    407ddd <__flatcc_fb_codegen_c@@Base+0x88d>
  408c41:	nop    DWORD PTR [rax+0x0]
  408c48:	mov    r8,QWORD PTR [rbx+0x88]
  408c4f:	mov    rdi,QWORD PTR [rbp+0xd0]
  408c56:	push   rcx
  408c57:	mov    r9,r14
  408c5a:	mov    rcx,rbp
  408c5d:	push   QWORD PTR [rsp+0x18]
  408c61:	lea    rdx,[rip+0x275f0]        # 430258 <_IO_stdin_used@@Base+0x2258>
  408c68:	push   r12
  408c6a:	push   r13
  408c6c:	jmp    407ddd <__flatcc_fb_codegen_c@@Base+0x88d>
  408c71:	nop    DWORD PTR [rax+0x0]
  408c78:	lea    rdx,[rip+0x27269]        # 42fee8 <_IO_stdin_used@@Base+0x1ee8>
  408c7f:	mov    esi,0x1
  408c84:	xor    eax,eax
  408c86:	call   405400 <__fprintf_chk@plt>
  408c8b:	sub    rsp,0x8
  408c8f:	mov    rdi,QWORD PTR [rbp+0xd0]
  408c96:	push   r12
  408c98:	mov    r9d,r13d
  408c9b:	mov    r8,r14
  408c9e:	mov    rcx,rbp
  408ca1:	lea    rdx,[rip+0x274d0]        # 430178 <_IO_stdin_used@@Base+0x2178>
  408ca8:	mov    esi,0x1
  408cad:	xor    eax,eax
  408caf:	call   405400 <__fprintf_chk@plt>
  408cb4:	mov    rax,QWORD PTR [rbp+0xe0]
  408cbb:	pop    rdi
  408cbc:	mov    r9d,DWORD PTR [rax+0xa8]
  408cc3:	pop    r8
  408cc5:	test   r9d,r9d
  408cc8:	je     407e0d <__flatcc_fb_codegen_c@@Base+0x8bd>
  408cce:	mov    rdi,QWORD PTR [rbp+0xd0]
  408cd5:	push   rcx
  408cd6:	mov    esi,0x1
  408cdb:	mov    r9d,r13d
  408cde:	push   r12
  408ce0:	mov    r8,r14
  408ce3:	mov    rcx,rbp
  408ce6:	lea    rdx,[rip+0x27943]        # 430630 <_IO_stdin_used@@Base+0x2630>
  408ced:	xor    eax,eax
  408cef:	call   405400 <__fprintf_chk@plt>
  408cf4:	pop    rsi
  408cf5:	pop    rdi
  408cf6:	jmp    407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  408cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  408d00:	lea    rdx,[rip+0x271e1]        # 42fee8 <_IO_stdin_used@@Base+0x1ee8>
  408d07:	mov    esi,0x1
  408d0c:	xor    eax,eax
  408d0e:	call   405400 <__fprintf_chk@plt>
  408d13:	mov    rdi,QWORD PTR [rbp+0xd0]
  408d1a:	lea    rdx,[rip+0x2720f]        # 42ff30 <_IO_stdin_used@@Base+0x1f30>
  408d21:	mov    esi,0x1
  408d26:	xor    eax,eax
  408d28:	call   405400 <__fprintf_chk@plt>
  408d2d:	sub    rsp,0x8
  408d31:	mov    rdi,QWORD PTR [rbp+0xd0]
  408d38:	push   QWORD PTR [rsp+0x10]
  408d3c:	mov    r9d,r13d
  408d3f:	mov    r8,r14
  408d42:	push   QWORD PTR [rsp+0x28]
  408d46:	mov    rcx,rbp
  408d49:	lea    rdx,[rip+0x27220]        # 42ff70 <_IO_stdin_used@@Base+0x1f70>
  408d50:	push   r12
  408d52:	mov    esi,0x1
  408d57:	xor    eax,eax
  408d59:	call   405400 <__fprintf_chk@plt>
  408d5e:	mov    rax,QWORD PTR [rbp+0xe0]
  408d65:	add    rsp,0x20
  408d69:	mov    eax,DWORD PTR [rax+0xa8]
  408d6f:	test   eax,eax
  408d71:	je     407e0d <__flatcc_fb_codegen_c@@Base+0x8bd>
  408d77:	mov    rdi,QWORD PTR [rbp+0xd0]
  408d7e:	push   rbp
  408d7f:	mov    r9d,r13d
  408d82:	mov    r8,r14
  408d85:	push   QWORD PTR [rsp+0x10]
  408d89:	mov    rcx,rbp
  408d8c:	lea    rdx,[rip+0x2785d]        # 4305f0 <_IO_stdin_used@@Base+0x25f0>
  408d93:	push   QWORD PTR [rsp+0x28]
  408d97:	mov    esi,0x1
  408d9c:	xor    eax,eax
  408d9e:	push   r12
  408da0:	call   405400 <__fprintf_chk@plt>
  408da5:	add    rsp,0x20
  408da9:	jmp    407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  408dae:	xchg   ax,ax
  408db0:	lea    rax,[rip+0x2e536]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  408db7:	mov    QWORD PTR [rsp+0x18],rbp
  408dbc:	mov    QWORD PTR [rsp+0x8],rax
  408dc1:	lea    r10,[rip+0x2e52c]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  408dc8:	mov    ecx,0x5
  408dcd:	lea    rdx,[rip+0x2e8f0]        # 4376c4 <_IO_stdin_used@@Base+0x96c4>
  408dd4:	movsxd rax,DWORD PTR [rdx+rcx*4]
  408dd8:	add    rax,rdx
  408ddb:	notrack jmp rax
  408dde:	lea    r8,[rip+0x2e532]        # 437317 <_IO_stdin_used@@Base+0x9317>
  408de5:	mov    QWORD PTR [rsp+0x38],r10
  408dea:	mov    r9,QWORD PTR [rbx+0x48]
  408dee:	lea    r11,[rsp+0x400]
  408df6:	lea    rcx,[rip+0x2e5b2]        # 4373af <_IO_stdin_used@@Base+0x93af>
  408dfd:	mov    rdi,r11
  408e00:	mov    edx,0x64
  408e05:	mov    esi,0x1
  408e0a:	xor    eax,eax
  408e0c:	mov    QWORD PTR [rsp+0x30],r11
  408e11:	call   405420 <__sprintf_chk@plt>
  408e16:	mov    r11,QWORD PTR [rsp+0x30]
  408e1b:	mov    r10,QWORD PTR [rsp+0x38]
  408e20:	jmp    40848c <__flatcc_fb_codegen_c@@Base+0xf3c>
  408e25:	lea    r8,[rip+0x2e4eb]        # 437317 <_IO_stdin_used@@Base+0x9317>
  408e2c:	mov    QWORD PTR [rsp+0x38],r10
  408e31:	lea    r11,[rsp+0x400]
  408e39:	mov    r9,QWORD PTR [rbx+0x48]
  408e3d:	lea    rcx,[rip+0x2e574]        # 4373b8 <_IO_stdin_used@@Base+0x93b8>
  408e44:	jmp    408dfd <__flatcc_fb_codegen_c@@Base+0x18ad>
  408e46:	lea    rsi,[rip+0x2e4ad]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  408e4d:	mov    QWORD PTR [rsp+0x8],rsi
  408e52:	lea    rsi,[rip+0x3db05]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  408e59:	mov    QWORD PTR [rsp+0x18],rsi
  408e5e:	lea    r10,[rip+0x2e49d]        # 437302 <_IO_stdin_used@@Base+0x9302>
  408e65:	nop    DWORD PTR [rax]
  408e68:	cmp    eax,0x9
  408e6b:	jbe    40897b <__flatcc_fb_codegen_c@@Base+0x142b>
  408e71:	call   407850 <__flatcc_fb_codegen_c@@Base+0x300>
  408e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e80:	lea    rsi,[rip+0x2e480]        # 437307 <_IO_stdin_used@@Base+0x9307>
  408e87:	mov    QWORD PTR [rsp+0x8],rsi
  408e8c:	lea    rsi,[rip+0x3dacb]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  408e93:	mov    QWORD PTR [rsp+0x18],rsi
  408e98:	lea    r10,[rip+0x2e468]        # 437307 <_IO_stdin_used@@Base+0x9307>
  408e9f:	jmp    408e68 <__flatcc_fb_codegen_c@@Base+0x1918>
  408ea1:	lea    r10,[rip+0x2e41f]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  408ea8:	lea    rsi,[rip+0x3daaf]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  408eaf:	mov    QWORD PTR [rsp+0x8],r10
  408eb4:	mov    QWORD PTR [rsp+0x18],rsi
  408eb9:	jmp    408e68 <__flatcc_fb_codegen_c@@Base+0x1918>
  408ebb:	lea    rsi,[rip+0x2e3f5]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  408ec2:	mov    QWORD PTR [rsp+0x8],rsi
  408ec7:	lea    rsi,[rip+0x3da90]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  408ece:	mov    QWORD PTR [rsp+0x18],rsi
  408ed3:	lea    r10,[rip+0x2e3e6]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  408eda:	jmp    408e68 <__flatcc_fb_codegen_c@@Base+0x1918>
  408edc:	lea    rsi,[rip+0x2e3eb]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  408ee3:	mov    QWORD PTR [rsp+0x8],rsi
  408ee8:	lea    rsi,[rip+0x3da6f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  408eef:	mov    QWORD PTR [rsp+0x18],rsi
  408ef4:	lea    r10,[rip+0x2e3dc]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  408efb:	jmp    408e68 <__flatcc_fb_codegen_c@@Base+0x1918>
  408f00:	lea    rsi,[rip+0x2e3d7]        # 4372de <_IO_stdin_used@@Base+0x92de>
  408f07:	mov    QWORD PTR [rsp+0x8],rsi
  408f0c:	lea    rsi,[rip+0x3da4b]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  408f13:	mov    QWORD PTR [rsp+0x18],rsi
  408f18:	lea    r10,[rip+0x2e3c8]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  408f1f:	jmp    408e68 <__flatcc_fb_codegen_c@@Base+0x1918>
  408f24:	lea    rsi,[rip+0x2e38d]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  408f2b:	mov    QWORD PTR [rsp+0x8],rsi
  408f30:	lea    rsi,[rip+0x3da27]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  408f37:	mov    QWORD PTR [rsp+0x18],rsi
  408f3c:	lea    r10,[rip+0x2e37e]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  408f43:	jmp    408e68 <__flatcc_fb_codegen_c@@Base+0x1918>
  408f48:	cmp    edx,0x9
  408f4b:	ja     408e71 <__flatcc_fb_codegen_c@@Base+0x1921>
  408f51:	lea    rsi,[rip+0x2e794]        # 4376ec <_IO_stdin_used@@Base+0x96ec>
  408f58:	movsxd rax,DWORD PTR [rsi+rdx*4]
  408f5c:	add    rax,rsi
  408f5f:	notrack jmp rax
  408f62:	lea    rdx,[rip+0x26f7f]        # 42fee8 <_IO_stdin_used@@Base+0x1ee8>
  408f69:	mov    esi,0x1
  408f6e:	xor    eax,eax
  408f70:	call   405400 <__fprintf_chk@plt>
  408f75:	mov    rdi,QWORD PTR [rbp+0xd0]
  408f7c:	lea    rdx,[rip+0x26fad]        # 42ff30 <_IO_stdin_used@@Base+0x1f30>
  408f83:	mov    esi,0x1
  408f88:	xor    eax,eax
  408f8a:	call   405400 <__fprintf_chk@plt>
  408f8f:	mov    rdi,QWORD PTR [rbp+0xd0]
  408f96:	push   QWORD PTR [rsp+0x10]
  408f9a:	mov    rcx,rbp
  408f9d:	lea    rdx,[rip+0x273a4]        # 430348 <_IO_stdin_used@@Base+0x2348>
  408fa4:	push   r12
  408fa6:	mov    esi,0x1
  408fab:	mov    r9d,r13d
  408fae:	mov    r8,r14
  408fb1:	xor    eax,eax
  408fb3:	call   405400 <__fprintf_chk@plt>
  408fb8:	mov    rax,QWORD PTR [rbp+0xe0]
  408fbf:	pop    rdx
  408fc0:	mov    esi,DWORD PTR [rax+0xa8]
  408fc6:	pop    rcx
  408fc7:	test   esi,esi
  408fc9:	je     407e0d <__flatcc_fb_codegen_c@@Base+0x8bd>
  408fcf:	mov    rdi,QWORD PTR [rbp+0xd0]
  408fd6:	push   rax
  408fd7:	mov    r9d,r13d
  408fda:	mov    r8,r14
  408fdd:	push   rbp
  408fde:	mov    rcx,rbp
  408fe1:	lea    rdx,[rip+0x27678]        # 430660 <_IO_stdin_used@@Base+0x2660>
  408fe8:	push   QWORD PTR [rsp+0x20]
  408fec:	mov    esi,0x1
  408ff1:	xor    eax,eax
  408ff3:	push   r12
  408ff5:	call   405400 <__fprintf_chk@plt>
  408ffa:	add    rsp,0x20
  408ffe:	jmp    407e15 <__flatcc_fb_codegen_c@@Base+0x8c5>
  409003:	nop    DWORD PTR [rax+rax*1+0x0]
  409008:	movzx  edx,WORD PTR [rbx+0x58]
  40900c:	cmp    dx,0x4
  409010:	je     409520 <__flatcc_fb_codegen_c@@Base+0x1fd0>
  409016:	jbe    409344 <__flatcc_fb_codegen_c@@Base+0x1df4>
  40901c:	cmp    dx,0x5
  409020:	je     4094fc <__flatcc_fb_codegen_c@@Base+0x1fac>
  409026:	cmp    dx,0x6
  40902a:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  409030:	lea    rax,[rip+0x2e296]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  409037:	mov    QWORD PTR [rsp+0x8],rax
  40903c:	lea    r10,[rip+0x2e293]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  409043:	lea    rax,[rip+0x3d914]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40904a:	mov    QWORD PTR [rsp+0x18],rax
  40904f:	lea    r8,[rip+0x2e2c9]        # 43731f <_IO_stdin_used@@Base+0x931f>
  409056:	jmp    408450 <__flatcc_fb_codegen_c@@Base+0xf00>
  40905b:	lea    r8,[rip+0x2e2ad]        # 43730f <_IO_stdin_used@@Base+0x930f>
  409062:	jmp    408e2c <__flatcc_fb_codegen_c@@Base+0x18dc>
  409067:	lea    r8,[rip+0x2e2bb]        # 437329 <_IO_stdin_used@@Base+0x9329>
  40906e:	jmp    408e2c <__flatcc_fb_codegen_c@@Base+0x18dc>
  409073:	lea    r8,[rip+0x2e2a6]        # 437320 <_IO_stdin_used@@Base+0x9320>
  40907a:	jmp    408e2c <__flatcc_fb_codegen_c@@Base+0x18dc>
  40907f:	lea    r8,[rip+0x2e2a2]        # 437328 <_IO_stdin_used@@Base+0x9328>
  409086:	jmp    408e2c <__flatcc_fb_codegen_c@@Base+0x18dc>
  40908b:	lea    r8,[rip+0x2e28d]        # 43731f <_IO_stdin_used@@Base+0x931f>
  409092:	jmp    408e2c <__flatcc_fb_codegen_c@@Base+0x18dc>
  409097:	lea    r8,[rip+0x2e281]        # 43731f <_IO_stdin_used@@Base+0x931f>
  40909e:	jmp    408de5 <__flatcc_fb_codegen_c@@Base+0x1895>
  4090a3:	lea    r8,[rip+0x2e264]        # 43730e <_IO_stdin_used@@Base+0x930e>
  4090aa:	jmp    408de5 <__flatcc_fb_codegen_c@@Base+0x1895>
  4090af:	lea    r8,[rip+0x2e272]        # 437328 <_IO_stdin_used@@Base+0x9328>
  4090b6:	jmp    408de5 <__flatcc_fb_codegen_c@@Base+0x1895>
  4090bb:	lea    r8,[rip+0x2e24c]        # 43730e <_IO_stdin_used@@Base+0x930e>
  4090c2:	jmp    408e2c <__flatcc_fb_codegen_c@@Base+0x18dc>
  4090c7:	lea    r8,[rip+0x2e25b]        # 437329 <_IO_stdin_used@@Base+0x9329>
  4090ce:	jmp    408de5 <__flatcc_fb_codegen_c@@Base+0x1895>
  4090d3:	lea    r8,[rip+0x2e246]        # 437320 <_IO_stdin_used@@Base+0x9320>
  4090da:	jmp    408de5 <__flatcc_fb_codegen_c@@Base+0x1895>
  4090df:	lea    rax,[rip+0x3d878]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4090e6:	mov    QWORD PTR [rsp+0x18],rax
  4090eb:	lea    r8,[rip+0x2e236]        # 437328 <_IO_stdin_used@@Base+0x9328>
  4090f2:	jmp    408450 <__flatcc_fb_codegen_c@@Base+0xf00>
  4090f7:	lea    r8,[rip+0x2e21a]        # 437318 <_IO_stdin_used@@Base+0x9318>
  4090fe:	jmp    408de5 <__flatcc_fb_codegen_c@@Base+0x1895>
  409103:	lea    r8,[rip+0x2e205]        # 43730f <_IO_stdin_used@@Base+0x930f>
  40910a:	jmp    408de5 <__flatcc_fb_codegen_c@@Base+0x1895>
  40910f:	movzx  edx,WORD PTR [rbx+0x58]
  409113:	cmp    dx,0x4
  409117:	je     4097c8 <__flatcc_fb_codegen_c@@Base+0x2278>
  40911d:	jbe    4097a6 <__flatcc_fb_codegen_c@@Base+0x2256>
  409123:	cmp    dx,0x5
  409127:	je     4096de <__flatcc_fb_codegen_c@@Base+0x218e>
  40912d:	cmp    dx,0x6
  409131:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  409137:	lea    rax,[rip+0x2e1bb]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  40913e:	mov    QWORD PTR [rsp+0x8],rax
  409143:	lea    r10,[rip+0x2e1b7]        # 437301 <_IO_stdin_used@@Base+0x9301>
  40914a:	lea    rax,[rip+0x3d80d]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  409151:	mov    QWORD PTR [rsp+0x18],rax
  409156:	lea    r8,[rip+0x2e1ba]        # 437317 <_IO_stdin_used@@Base+0x9317>
  40915d:	jmp    408450 <__flatcc_fb_codegen_c@@Base+0xf00>
  409162:	lea    rax,[rip+0x3d7f5]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  409169:	mov    QWORD PTR [rsp+0x18],rax
  40916e:	lea    r8,[rip+0x2e1a3]        # 437318 <_IO_stdin_used@@Base+0x9318>
  409175:	jmp    408450 <__flatcc_fb_codegen_c@@Base+0xf00>
  40917a:	lea    r10,[rip+0x2e146]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  409181:	lea    rsi,[rip+0x3d7d6]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  409188:	mov    QWORD PTR [rsp+0x8],r10
  40918d:	mov    QWORD PTR [rsp+0x18],rsi
  409192:	nop    WORD PTR [rax+rax*1+0x0]
  409198:	cmp    eax,0x9
  40919b:	jbe    408dcd <__flatcc_fb_codegen_c@@Base+0x187d>
  4091a1:	jmp    408e71 <__flatcc_fb_codegen_c@@Base+0x1921>
  4091a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091b0:	lea    rax,[rip+0x2e143]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  4091b7:	mov    QWORD PTR [rsp+0x8],rax
  4091bc:	lea    rax,[rip+0x3d79b]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4091c3:	mov    QWORD PTR [rsp+0x18],rax
  4091c8:	lea    r10,[rip+0x2e133]        # 437302 <_IO_stdin_used@@Base+0x9302>
  4091cf:	lea    r8,[rip+0x2e142]        # 437318 <_IO_stdin_used@@Base+0x9318>
  4091d6:	jmp    408e2c <__flatcc_fb_codegen_c@@Base+0x18dc>
  4091db:	lea    rsi,[rip+0x2e125]        # 437307 <_IO_stdin_used@@Base+0x9307>
  4091e2:	mov    QWORD PTR [rsp+0x8],rsi
  4091e7:	lea    rsi,[rip+0x3d770]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4091ee:	mov    QWORD PTR [rsp+0x18],rsi
  4091f3:	lea    r10,[rip+0x2e10d]        # 437307 <_IO_stdin_used@@Base+0x9307>
  4091fa:	jmp    409198 <__flatcc_fb_codegen_c@@Base+0x1c48>
  4091fc:	vxorps xmm0,xmm0,xmm0
  409200:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbx+0x48]
  409205:	lea    r11,[rsp+0x400]
  40920d:	vcvtss2sd xmm0,xmm0,xmm0
  409211:	lea    rcx,[rip+0x2e1b0]        # 4373c8 <_IO_stdin_used@@Base+0x93c8>
  409218:	jmp    408a37 <__flatcc_fb_codegen_c@@Base+0x14e7>
  40921d:	lea    rsi,[rip+0x2e0ba]        # 4372de <_IO_stdin_used@@Base+0x92de>
  409224:	mov    QWORD PTR [rsp+0x8],rsi
  409229:	lea    rsi,[rip+0x3d72e]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  409230:	mov    QWORD PTR [rsp+0x18],rsi
  409235:	lea    r10,[rip+0x2e0ab]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  40923c:	jmp    409198 <__flatcc_fb_codegen_c@@Base+0x1c48>
  409241:	lea    rsi,[rip+0x2e06f]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  409248:	mov    QWORD PTR [rsp+0x8],rsi
  40924d:	lea    rsi,[rip+0x3d70a]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  409254:	mov    QWORD PTR [rsp+0x18],rsi
  409259:	lea    r10,[rip+0x2e060]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  409260:	jmp    409198 <__flatcc_fb_codegen_c@@Base+0x1c48>
  409265:	lea    rsi,[rip+0x2e062]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  40926c:	mov    QWORD PTR [rsp+0x8],rsi
  409271:	lea    rsi,[rip+0x3d6e6]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  409278:	mov    QWORD PTR [rsp+0x18],rsi
  40927d:	lea    r10,[rip+0x2e053]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  409284:	jmp    409198 <__flatcc_fb_codegen_c@@Base+0x1c48>
  409289:	lea    rsi,[rip+0x2e028]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  409290:	mov    QWORD PTR [rsp+0x8],rsi
  409295:	lea    rsi,[rip+0x3d6c2]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40929c:	mov    QWORD PTR [rsp+0x18],rsi
  4092a1:	lea    r10,[rip+0x2e019]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  4092a8:	jmp    409198 <__flatcc_fb_codegen_c@@Base+0x1c48>
  4092ad:	lea    r8,[rip+0x2e063]        # 437317 <_IO_stdin_used@@Base+0x9317>
  4092b4:	mov    r9,QWORD PTR [rbx+0x48]
  4092b8:	lea    r11,[rsp+0x400]
  4092c0:	lea    rcx,[rip+0x2e0e8]        # 4373af <_IO_stdin_used@@Base+0x93af>
  4092c7:	mov    rdi,r11
  4092ca:	mov    edx,0x64
  4092cf:	mov    esi,0x1
  4092d4:	xor    eax,eax
  4092d6:	mov    QWORD PTR [rsp+0x8],r11
  4092db:	call   405420 <__sprintf_chk@plt>
  4092e0:	mov    r11,QWORD PTR [rsp+0x8]
  4092e5:	jmp    408a58 <__flatcc_fb_codegen_c@@Base+0x1508>
  4092ea:	lea    r8,[rip+0x2e026]        # 437317 <_IO_stdin_used@@Base+0x9317>
  4092f1:	lea    r11,[rsp+0x400]
  4092f9:	movzx  r9d,BYTE PTR [rbx+0x48]
  4092fe:	mov    rdi,r11
  409301:	lea    rcx,[rip+0x2e0b9]        # 4373c1 <_IO_stdin_used@@Base+0x93c1>
  409308:	mov    edx,0x64
  40930d:	mov    esi,0x1
  409312:	xor    eax,eax
  409314:	mov    QWORD PTR [rsp+0x8],r11
  409319:	call   405420 <__sprintf_chk@plt>
  40931e:	mov    r11,QWORD PTR [rsp+0x8]
  409323:	jmp    408a58 <__flatcc_fb_codegen_c@@Base+0x1508>
  409328:	lea    r8,[rip+0x2dfe8]        # 437317 <_IO_stdin_used@@Base+0x9317>
  40932f:	lea    r11,[rsp+0x400]
  409337:	mov    r9,QWORD PTR [rbx+0x48]
  40933b:	lea    rcx,[rip+0x2e076]        # 4373b8 <_IO_stdin_used@@Base+0x93b8>
  409342:	jmp    4092c7 <__flatcc_fb_codegen_c@@Base+0x1d77>
  409344:	cmp    dx,0x3
  409348:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  40934e:	lea    rsi,[rip+0x2df78]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  409355:	mov    QWORD PTR [rsp+0x8],rsi
  40935a:	lea    r10,[rip+0x2df75]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  409361:	jmp    4087bc <__flatcc_fb_codegen_c@@Base+0x126c>
  409366:	movzx  edx,WORD PTR [rbx+0x58]
  40936a:	cmp    dx,0x4
  40936e:	je     40976a <__flatcc_fb_codegen_c@@Base+0x221a>
  409374:	jbe    4095e4 <__flatcc_fb_codegen_c@@Base+0x2094>
  40937a:	cmp    dx,0x5
  40937e:	je     409727 <__flatcc_fb_codegen_c@@Base+0x21d7>
  409384:	cmp    dx,0x6
  409388:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  40938e:	lea    rsi,[rip+0x2df48]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  409395:	mov    QWORD PTR [rsp+0x8],rsi
  40939a:	lea    r10,[rip+0x2df45]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  4093a1:	jmp    408687 <__flatcc_fb_codegen_c@@Base+0x1137>
  4093a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4093b0:	lea    r8,[rip+0x2df61]        # 437318 <_IO_stdin_used@@Base+0x9318>
  4093b7:	jmp    4092b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  4093bc:	lea    r8,[rip+0x2df4c]        # 43730f <_IO_stdin_used@@Base+0x930f>
  4093c3:	jmp    4092b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  4093c8:	lea    r8,[rip+0x2df5a]        # 437329 <_IO_stdin_used@@Base+0x9329>
  4093cf:	jmp    4092f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  4093d4:	lea    r8,[rip+0x2df45]        # 437320 <_IO_stdin_used@@Base+0x9320>
  4093db:	jmp    4092f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  4093e0:	lea    r8,[rip+0x2df27]        # 43730e <_IO_stdin_used@@Base+0x930e>
  4093e7:	jmp    4092b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  4093ec:	lea    r8,[rip+0x2df35]        # 437328 <_IO_stdin_used@@Base+0x9328>
  4093f3:	jmp    4092b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  4093f8:	lea    r8,[rip+0x2df0f]        # 43730e <_IO_stdin_used@@Base+0x930e>
  4093ff:	jmp    40932f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  409404:	lea    r8,[rip+0x2df1d]        # 437328 <_IO_stdin_used@@Base+0x9328>
  40940b:	jmp    40932f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  409410:	lea    r8,[rip+0x2df12]        # 437329 <_IO_stdin_used@@Base+0x9329>
  409417:	jmp    4092b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  40941c:	lea    r8,[rip+0x2defd]        # 437320 <_IO_stdin_used@@Base+0x9320>
  409423:	jmp    4092b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  409428:	lea    r8,[rip+0x2dedf]        # 43730e <_IO_stdin_used@@Base+0x930e>
  40942f:	jmp    4092f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  409434:	lea    r8,[rip+0x2deed]        # 437328 <_IO_stdin_used@@Base+0x9328>
  40943b:	jmp    4092f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  409440:	lea    r8,[rip+0x2ded1]        # 437318 <_IO_stdin_used@@Base+0x9318>
  409447:	jmp    4092f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  40944c:	lea    r8,[rip+0x2debc]        # 43730f <_IO_stdin_used@@Base+0x930f>
  409453:	jmp    4092f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  409458:	lea    r8,[rip+0x2dec0]        # 43731f <_IO_stdin_used@@Base+0x931f>
  40945f:	jmp    4092f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  409464:	lea    r8,[rip+0x2deb4]        # 43731f <_IO_stdin_used@@Base+0x931f>
  40946b:	jmp    4092b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  409470:	lea    r8,[rip+0x2deb2]        # 437329 <_IO_stdin_used@@Base+0x9329>
  409477:	jmp    40932f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  40947c:	lea    r8,[rip+0x2de9d]        # 437320 <_IO_stdin_used@@Base+0x9320>
  409483:	jmp    40932f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  409488:	lea    r8,[rip+0x2de89]        # 437318 <_IO_stdin_used@@Base+0x9318>
  40948f:	jmp    40932f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  409494:	lea    r8,[rip+0x2de74]        # 43730f <_IO_stdin_used@@Base+0x930f>
  40949b:	jmp    40932f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  4094a0:	lea    r8,[rip+0x2de78]        # 43731f <_IO_stdin_used@@Base+0x931f>
  4094a7:	jmp    40932f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  4094ac:	mov    rax,QWORD PTR [rip+0x48b35]        # 451fe8 <stderr@GLIBC_2.2.5>
  4094b3:	lea    rcx,[rip+0x26696]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  4094ba:	mov    rdi,QWORD PTR [rax]
  4094bd:	lea    rdx,[rip+0x2ddcf]        # 437293 <_IO_stdin_used@@Base+0x9293>
  4094c4:	mov    esi,0x1
  4094c9:	lea    r9,[rip+0x27080]        # 430550 <_IO_stdin_used@@Base+0x2550>
  4094d0:	mov    r8d,0x63f
  4094d6:	xor    eax,eax
  4094d8:	call   405400 <__fprintf_chk@plt>
  4094dd:	lea    rcx,[rip+0x2e364]        # 437848 <_IO_stdin_used@@Base+0x9848>
  4094e4:	mov    edx,0x63f
  4094e9:	lea    rsi,[rip+0x26660]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  4094f0:	lea    rdi,[rip+0x2ee62]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4094f7:	call   405300 <__assert_fail@plt>
  4094fc:	lea    rsi,[rip+0x2ddca]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  409503:	mov    QWORD PTR [rsp+0x8],rsi
  409508:	lea    rsi,[rip+0x3d44f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40950f:	mov    QWORD PTR [rsp+0x18],rsi
  409514:	lea    r10,[rip+0x2ddbb]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  40951b:	jmp    408e68 <__flatcc_fb_codegen_c@@Base+0x1918>
  409520:	lea    rsi,[rip+0x2dda6]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  409527:	mov    QWORD PTR [rsp+0x8],rsi
  40952c:	lea    rsi,[rip+0x3d42b]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  409533:	mov    QWORD PTR [rsp+0x18],rsi
  409538:	lea    r10,[rip+0x2dd97]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  40953f:	jmp    409198 <__flatcc_fb_codegen_c@@Base+0x1c48>
  409544:	mov    rax,QWORD PTR [rip+0x48a9d]        # 451fe8 <stderr@GLIBC_2.2.5>
  40954b:	lea    rcx,[rip+0x26596]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  409552:	mov    rdi,QWORD PTR [rax]
  409555:	lea    rdx,[rip+0x2dd37]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40955c:	mov    esi,0x1
  409561:	lea    r9,[rip+0x26548]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  409568:	mov    r8d,0xba
  40956e:	xor    eax,eax
  409570:	call   405400 <__fprintf_chk@plt>
  409575:	lea    rcx,[rip+0x2e2b4]        # 437830 <_IO_stdin_used@@Base+0x9830>
  40957c:	mov    edx,0xba
  409581:	lea    rsi,[rip+0x26560]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  409588:	lea    rdi,[rip+0x2edca]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40958f:	call   405300 <__assert_fail@plt>
  409594:	mov    rax,QWORD PTR [rip+0x48a4d]        # 451fe8 <stderr@GLIBC_2.2.5>
  40959b:	lea    rcx,[rip+0x265ae]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  4095a2:	mov    rdi,QWORD PTR [rax]
  4095a5:	lea    rdx,[rip+0x2dce7]        # 437293 <_IO_stdin_used@@Base+0x9293>
  4095ac:	mov    esi,0x1
  4095b1:	lea    r9,[rip+0x26ed0]        # 430488 <_IO_stdin_used@@Base+0x2488>
  4095b8:	mov    r8d,0x630
  4095be:	xor    eax,eax
  4095c0:	call   405400 <__fprintf_chk@plt>
  4095c5:	lea    rcx,[rip+0x2e27c]        # 437848 <_IO_stdin_used@@Base+0x9848>
  4095cc:	mov    edx,0x630
  4095d1:	lea    rsi,[rip+0x26578]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  4095d8:	lea    rdi,[rip+0x2ed7a]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4095df:	call   405300 <__assert_fail@plt>
  4095e4:	cmp    dx,0x3
  4095e8:	je     40978e <__flatcc_fb_codegen_c@@Base+0x223e>
  4095ee:	mov    rax,QWORD PTR [rip+0x489f3]        # 451fe8 <stderr@GLIBC_2.2.5>
  4095f5:	lea    rcx,[rip+0x264ec]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  4095fc:	mov    rdi,QWORD PTR [rax]
  4095ff:	lea    rdx,[rip+0x2dc8d]        # 437293 <_IO_stdin_used@@Base+0x9293>
  409606:	mov    esi,0x1
  40960b:	lea    r9,[rip+0x2649e]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  409612:	mov    r8d,0x104
  409618:	xor    eax,eax
  40961a:	call   405400 <__fprintf_chk@plt>
  40961f:	lea    rcx,[rip+0x2e242]        # 437868 <_IO_stdin_used@@Base+0x9868>
  409626:	mov    edx,0x104
  40962b:	lea    rsi,[rip+0x264b6]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  409632:	lea    rdi,[rip+0x2ed20]        # 438359 <_IO_stdin_used@@Base+0xa359>
  409639:	call   405300 <__assert_fail@plt>
  40963e:	mov    rax,QWORD PTR [rip+0x489a3]        # 451fe8 <stderr@GLIBC_2.2.5>
  409645:	lea    rcx,[rip+0x2649c]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40964c:	mov    rdi,QWORD PTR [rax]
  40964f:	lea    rdx,[rip+0x2dc3d]        # 437293 <_IO_stdin_used@@Base+0x9293>
  409656:	mov    esi,0x1
  40965b:	lea    r9,[rip+0x2644e]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  409662:	mov    r8d,0x8d
  409668:	xor    eax,eax
  40966a:	call   405400 <__fprintf_chk@plt>
  40966f:	lea    rcx,[rip+0x2e23a]        # 4378b0 <_IO_stdin_used@@Base+0x98b0>
  409676:	mov    edx,0x8d
  40967b:	lea    rsi,[rip+0x26466]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  409682:	lea    rdi,[rip+0x2ecd0]        # 438359 <_IO_stdin_used@@Base+0xa359>
  409689:	call   405300 <__assert_fail@plt>
  40968e:	mov    rax,QWORD PTR [rip+0x48953]        # 451fe8 <stderr@GLIBC_2.2.5>
  409695:	lea    rcx,[rip+0x264b4]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  40969c:	mov    rdi,QWORD PTR [rax]
  40969f:	lea    rdx,[rip+0x2dbed]        # 437293 <_IO_stdin_used@@Base+0x9293>
  4096a6:	mov    esi,0x1
  4096ab:	lea    r9,[rip+0x26d86]        # 430438 <_IO_stdin_used@@Base+0x2438>
  4096b2:	mov    r8d,0x620
  4096b8:	xor    eax,eax
  4096ba:	call   405400 <__fprintf_chk@plt>
  4096bf:	lea    rcx,[rip+0x2e182]        # 437848 <_IO_stdin_used@@Base+0x9848>
  4096c6:	mov    edx,0x620
  4096cb:	lea    rsi,[rip+0x2647e]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  4096d2:	lea    rdi,[rip+0x2ec80]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4096d9:	call   405300 <__assert_fail@plt>
  4096de:	lea    rsi,[rip+0x2dc14]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  4096e5:	mov    QWORD PTR [rsp+0x8],rsi
  4096ea:	lea    rsi,[rip+0x3d26d]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4096f1:	mov    QWORD PTR [rsp+0x18],rsi
  4096f6:	lea    r10,[rip+0x2dc04]        # 437301 <_IO_stdin_used@@Base+0x9301>
  4096fd:	jmp    408e68 <__flatcc_fb_codegen_c@@Base+0x1918>
  409702:	nop    WORD PTR [rax+rax*1+0x0]
  409708:	lea    rcx,[rip+0x2e111]        # 437820 <_IO_stdin_used@@Base+0x9820>
  40970f:	mov    edx,0x53f
  409714:	lea    rsi,[rip+0x26435]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  40971b:	lea    rdi,[rip+0x269a6]        # 4300c8 <_IO_stdin_used@@Base+0x20c8>
  409722:	call   405300 <__assert_fail@plt>
  409727:	lea    rsi,[rip+0x2dbaf]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  40972e:	mov    QWORD PTR [rsp+0x8],rsi
  409733:	lea    rsi,[rip+0x3d224]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40973a:	mov    QWORD PTR [rsp+0x18],rsi
  40973f:	lea    r10,[rip+0x2dba0]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  409746:	jmp    408e68 <__flatcc_fb_codegen_c@@Base+0x1918>
  40974b:	lea    rcx,[rip+0x2e0f6]        # 437848 <_IO_stdin_used@@Base+0x9848>
  409752:	mov    edx,0x552
  409757:	lea    rsi,[rip+0x263f2]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  40975e:	lea    rdi,[rip+0x265e3]        # 42fd48 <_IO_stdin_used@@Base+0x1d48>
  409765:	call   405300 <__assert_fail@plt>
  40976a:	lea    rsi,[rip+0x2db6c]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  409771:	mov    QWORD PTR [rsp+0x8],rsi
  409776:	lea    rsi,[rip+0x3d1e1]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40977d:	mov    QWORD PTR [rsp+0x18],rsi
  409782:	lea    r10,[rip+0x2db5d]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  409789:	jmp    409198 <__flatcc_fb_codegen_c@@Base+0x1c48>
  40978e:	lea    rsi,[rip+0x2db48]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  409795:	mov    QWORD PTR [rsp+0x8],rsi
  40979a:	lea    r10,[rip+0x2db45]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  4097a1:	jmp    4087bc <__flatcc_fb_codegen_c@@Base+0x126c>
  4097a6:	cmp    dx,0x3
  4097aa:	jne    4095ee <__flatcc_fb_codegen_c@@Base+0x209e>
  4097b0:	lea    rsi,[rip+0x2db42]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  4097b7:	mov    QWORD PTR [rsp+0x8],rsi
  4097bc:	lea    r10,[rip+0x2db3e]        # 437301 <_IO_stdin_used@@Base+0x9301>
  4097c3:	jmp    4087bc <__flatcc_fb_codegen_c@@Base+0x126c>
  4097c8:	lea    rsi,[rip+0x2db2a]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  4097cf:	mov    QWORD PTR [rsp+0x8],rsi
  4097d4:	lea    rsi,[rip+0x3d183]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4097db:	mov    QWORD PTR [rsp+0x18],rsi
  4097e0:	lea    r10,[rip+0x2db1a]        # 437301 <_IO_stdin_used@@Base+0x9301>
  4097e7:	jmp    409198 <__flatcc_fb_codegen_c@@Base+0x1c48>
  4097ec:	call   4052d0 <__stack_chk_fail@plt>
  4097f1:	mov    rax,QWORD PTR [rip+0x487f0]        # 451fe8 <stderr@GLIBC_2.2.5>
  4097f8:	lea    rcx,[rip+0x26351]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  4097ff:	mov    rdi,QWORD PTR [rax]
  409802:	lea    rdx,[rip+0x2da8a]        # 437293 <_IO_stdin_used@@Base+0x9293>
  409809:	mov    esi,0x1
  40980e:	lea    r9,[rip+0x2687b]        # 430090 <_IO_stdin_used@@Base+0x2090>
  409815:	mov    r8d,0x53b
  40981b:	xor    eax,eax
  40981d:	call   405400 <__fprintf_chk@plt>
  409822:	lea    rcx,[rip+0x2dff7]        # 437820 <_IO_stdin_used@@Base+0x9820>
  409829:	mov    edx,0x53b
  40982e:	lea    rsi,[rip+0x2631b]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  409835:	lea    rdi,[rip+0x2eb1d]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40983c:	call   405300 <__assert_fail@plt>
  409841:	lea    rax,[rip+0x3d116]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  409848:	mov    QWORD PTR [rsp+0x18],rax
  40984d:	lea    r8,[rip+0x2daba]        # 43730e <_IO_stdin_used@@Base+0x930e>
  409854:	jmp    408450 <__flatcc_fb_codegen_c@@Base+0xf00>
  409859:	nop    DWORD PTR [rax+0x0]
  409860:	push   r15
  409862:	mov    ecx,0x1d
  409867:	push   r14
  409869:	push   r13
  40986b:	push   r12
  40986d:	push   rbp
  40986e:	push   rbx
  40986f:	mov    rbx,rdi
  409872:	sub    rsp,0x188
  409879:	mov    rax,QWORD PTR fs:0x28
  409882:	mov    QWORD PTR [rsp+0x178],rax
  40988a:	xor    eax,eax
  40988c:	lea    r12,[rsp+0x20]
  409891:	mov    rdi,r12
  409894:	rep stos QWORD PTR es:[rdi],rax
  409897:	movzx  eax,WORD PTR [rsi+0x10]
  40989b:	mov    WORD PTR [rsp+0x1e],ax
  4098a0:	sub    eax,0x3
  4098a3:	cmp    ax,0x1
  4098a7:	ja     40a445 <__flatcc_fb_codegen_c@@Base+0x2ef5>
  4098ad:	cmp    WORD PTR [rsi+0x58],0x8
  4098b2:	mov    r13,rsi
  4098b5:	jne    40a421 <__flatcc_fb_codegen_c@@Base+0x2ed1>
  4098bb:	mov    eax,DWORD PTR [rsi+0x48]
  4098be:	cmp    eax,0x5
  4098c1:	je     4098e0 <__flatcc_fb_codegen_c@@Base+0x2390>
  4098c3:	cmp    eax,0xb
  4098c6:	ja     40a41c <__flatcc_fb_codegen_c@@Base+0x2ecc>
  4098cc:	lea    rdx,[rip+0x2de41]        # 437714 <_IO_stdin_used@@Base+0x9714>
  4098d3:	movsxd rax,DWORD PTR [rdx+rax*4]
  4098d7:	add    rax,rdx
  4098da:	notrack jmp rax
  4098dd:	nop    DWORD PTR [rax]
  4098e0:	mov    QWORD PTR [rsp+0x10],rbx
  4098e5:	lea    r15,[rip+0x2da01]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  4098ec:	mov    eax,DWORD PTR [r13+0xb8]
  4098f3:	cmp    WORD PTR [rsp+0x1e],0x3
  4098f9:	lea    ebp,[rax*8+0x0]
  409900:	mov    rdi,QWORD PTR [r13+0x18]
  409904:	mov    rdx,r12
  409907:	mov    rsi,r13
  40990a:	je     40a0e0 <__flatcc_fb_codegen_c@@Base+0x2b90>
  409910:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  409915:	mov    r14,QWORD PTR [r13+0x40]
  409919:	test   r14,r14
  40991c:	je     40a028 <__flatcc_fb_codegen_c@@Base+0x2ad8>
  409922:	lea    rax,[rip+0x2dab4]        # 4373dd <_IO_stdin_used@@Base+0x93dd>
  409929:	mov    QWORD PTR [rsp+0x8],rax
  40992e:	mov    ecx,0x1
  409933:	xor    edx,edx
  409935:	nop    DWORD PTR [rax]
  409938:	mov    rax,QWORD PTR [r14+0x8]
  40993c:	mov    rdi,QWORD PTR [rbx+0xd0]
  409943:	cmp    QWORD PTR [rax+0x10],rdx
  409947:	je     409979 <__flatcc_fb_codegen_c@@Base+0x2429>
  409949:	test   ecx,ecx
  40994b:	lea    rdx,[rip+0x2da38]        # 43738a <_IO_stdin_used@@Base+0x938a>
  409952:	lea    rcx,[rip+0x3d005]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  409959:	jne    409962 <__flatcc_fb_codegen_c@@Base+0x2412>
  40995b:	lea    rdx,[rip+0x2da2f]        # 437391 <_IO_stdin_used@@Base+0x9391>
  409962:	mov    esi,0x1
  409967:	xor    eax,eax
  409969:	call   405400 <__fprintf_chk@plt>
  40996e:	mov    rax,QWORD PTR [r14+0x8]
  409972:	mov    rdi,QWORD PTR [rbx+0xd0]
  409979:	mov    rcx,QWORD PTR [rax+0x8]
  40997d:	mov    r8,QWORD PTR [rax]
  409980:	lea    rdx,[rip+0x2e9e2]        # 438369 <_IO_stdin_used@@Base+0xa369>
  409987:	mov    esi,0x1
  40998c:	xor    eax,eax
  40998e:	call   405400 <__fprintf_chk@plt>
  409993:	mov    rax,QWORD PTR [r14+0x8]
  409997:	mov    r14,QWORD PTR [r14]
  40999a:	mov    rdx,QWORD PTR [rax+0x10]
  40999e:	xor    ecx,ecx
  4099a0:	test   r14,r14
  4099a3:	jne    409938 <__flatcc_fb_codegen_c@@Base+0x23e8>
  4099a5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4099ac:	lea    rdx,[rip+0x2dbbc]        # 43756f <_IO_stdin_used@@Base+0x956f>
  4099b3:	mov    esi,0x1
  4099b8:	xor    eax,eax
  4099ba:	call   405400 <__fprintf_chk@plt>
  4099bf:	sub    rsp,0x8
  4099c3:	mov    r14,QWORD PTR [rsp+0x10]
  4099c8:	mov    rdi,QWORD PTR [rbx+0xd0]
  4099cf:	push   r14
  4099d1:	mov    r9,r12
  4099d4:	mov    r8,r15
  4099d7:	mov    rcx,QWORD PTR [rsp+0x20]
  4099dc:	lea    rdx,[rip+0x2da05]        # 4373e8 <_IO_stdin_used@@Base+0x93e8>
  4099e3:	mov    esi,0x1
  4099e8:	xor    eax,eax
  4099ea:	call   405400 <__fprintf_chk@plt>
  4099ef:	push   rbp
  4099f0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4099f7:	xor    eax,eax
  4099f9:	push   r14
  4099fb:	mov    r9,r12
  4099fe:	mov    r8,r12
  409a01:	mov    rcx,rbx
  409a04:	lea    rdx,[rip+0x26cfd]        # 430708 <_IO_stdin_used@@Base+0x2708>
  409a0b:	mov    esi,0x1
  409a10:	call   405400 <__fprintf_chk@plt>
  409a15:	add    rsp,0x20
  409a19:	cmp    WORD PTR [rsp+0x1e],0x3
  409a1f:	jne    40a089 <__flatcc_fb_codegen_c@@Base+0x2b39>
  409a25:	mov    rbp,QWORD PTR [r13+0x28]
  409a29:	test   rbp,rbp
  409a2c:	je     40a103 <__flatcc_fb_codegen_c@@Base+0x2bb3>
  409a32:	mov    QWORD PTR [rsp+0x10],r13
  409a37:	nop    WORD PTR [rax+rax*1+0x0]
  409a40:	mov    r14,QWORD PTR [rbp+0x68]
  409a44:	test   r14,r14
  409a47:	je     409adf <__flatcc_fb_codegen_c@@Base+0x258f>
  409a4d:	mov    ecx,0x1
  409a52:	xor    edx,edx
  409a54:	nop    DWORD PTR [rax+0x0]
  409a58:	mov    rax,QWORD PTR [r14+0x8]
  409a5c:	mov    rdi,QWORD PTR [rbx+0xd0]
  409a63:	cmp    QWORD PTR [rax+0x10],rdx
  409a67:	je     409a99 <__flatcc_fb_codegen_c@@Base+0x2549>
  409a69:	test   ecx,ecx
  409a6b:	lea    rdx,[rip+0x2d918]        # 43738a <_IO_stdin_used@@Base+0x938a>
  409a72:	lea    rcx,[rip+0x3cee5]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  409a79:	jne    409a82 <__flatcc_fb_codegen_c@@Base+0x2532>
  409a7b:	lea    rdx,[rip+0x2d90f]        # 437391 <_IO_stdin_used@@Base+0x9391>
  409a82:	mov    esi,0x1
  409a87:	xor    eax,eax
  409a89:	call   405400 <__fprintf_chk@plt>
  409a8e:	mov    rax,QWORD PTR [r14+0x8]
  409a92:	mov    rdi,QWORD PTR [rbx+0xd0]
  409a99:	mov    rcx,QWORD PTR [rax+0x8]
  409a9d:	mov    r8,QWORD PTR [rax]
  409aa0:	lea    rdx,[rip+0x2e8c2]        # 438369 <_IO_stdin_used@@Base+0xa369>
  409aa7:	mov    esi,0x1
  409aac:	xor    eax,eax
  409aae:	call   405400 <__fprintf_chk@plt>
  409ab3:	mov    rax,QWORD PTR [r14+0x8]
  409ab7:	mov    r14,QWORD PTR [r14]
  409aba:	mov    rdx,QWORD PTR [rax+0x10]
  409abe:	xor    ecx,ecx
  409ac0:	test   r14,r14
  409ac3:	jne    409a58 <__flatcc_fb_codegen_c@@Base+0x2508>
  409ac5:	mov    rdi,QWORD PTR [rbx+0xd0]
  409acc:	lea    rdx,[rip+0x2da9c]        # 43756f <_IO_stdin_used@@Base+0x956f>
  409ad3:	mov    esi,0x1
  409ad8:	xor    eax,eax
  409ada:	call   405400 <__fprintf_chk@plt>
  409adf:	mov    rax,QWORD PTR [rbp+0x8]
  409ae3:	mov    r15,QWORD PTR [rax]
  409ae6:	mov    r14,QWORD PTR [rax+0x8]
  409aea:	mov    rax,QWORD PTR [rsp+0x10]
  409aef:	mov    edx,DWORD PTR [rax+0x48]
  409af2:	movzx  eax,WORD PTR [rbp+0x58]
  409af6:	cmp    ax,0x4
  409afa:	je     409f48 <__flatcc_fb_codegen_c@@Base+0x29f8>
  409b00:	jbe    409f00 <__flatcc_fb_codegen_c@@Base+0x29b0>
  409b06:	cmp    ax,0x5
  409b0a:	jne    409e30 <__flatcc_fb_codegen_c@@Base+0x28e0>
  409b10:	cmp    edx,0x9
  409b13:	ja     40a37c <__flatcc_fb_codegen_c@@Base+0x2e2c>
  409b19:	lea    rcx,[rip+0x2dc24]        # 437744 <_IO_stdin_used@@Base+0x9744>
  409b20:	movsxd rax,DWORD PTR [rcx+rdx*4]
  409b24:	add    rax,rcx
  409b27:	notrack jmp rax
  409b2a:	nop    WORD PTR [rax+rax*1+0x0]
  409b30:	lea    r8,[rip+0x2d7e0]        # 437317 <_IO_stdin_used@@Base+0x9317>
  409b37:	mov    r9,QWORD PTR [rbp+0x48]
  409b3b:	lea    r13,[rsp+0x110]
  409b43:	lea    rcx,[rip+0x2d865]        # 4373af <_IO_stdin_used@@Base+0x93af>
  409b4a:	mov    edx,0x64
  409b4f:	mov    esi,0x1
  409b54:	mov    rdi,r13
  409b57:	xor    eax,eax
  409b59:	call   405420 <__sprintf_chk@plt>
  409b5e:	sub    rsp,0x8
  409b62:	push   r13
  409b64:	mov    rdi,QWORD PTR [rbx+0xd0]
  409b6b:	mov    r9,r15
  409b6e:	push   QWORD PTR [rsp+0x18]
  409b72:	mov    r8d,r14d
  409b75:	mov    rcx,r12
  409b78:	push   r12
  409b7a:	lea    rdx,[rip+0x26bb7]        # 430738 <_IO_stdin_used@@Base+0x2738>
  409b81:	mov    esi,0x1
  409b86:	xor    eax,eax
  409b88:	call   405400 <__fprintf_chk@plt>
  409b8d:	mov    rbp,QWORD PTR [rbp+0x0]
  409b91:	add    rsp,0x20
  409b95:	test   rbp,rbp
  409b98:	jne    409a40 <__flatcc_fb_codegen_c@@Base+0x24f0>
  409b9e:	mov    rdi,QWORD PTR [rbx+0xd0]
  409ba5:	xor    eax,eax
  409ba7:	lea    rdx,[rip+0x3cdaf]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  409bae:	mov    esi,0x1
  409bb3:	mov    r13,QWORD PTR [rsp+0x10]
  409bb8:	call   405400 <__fprintf_chk@plt>
  409bbd:	cmp    WORD PTR [rsp+0x1e],0x3
  409bc3:	je     40a120 <__flatcc_fb_codegen_c@@Base+0x2bd0>
  409bc9:	mov    rdi,QWORD PTR [rbx+0xd0]
  409bd0:	mov    r8,r12
  409bd3:	mov    rcx,r12
  409bd6:	lea    rdx,[rip+0x26b7b]        # 430758 <_IO_stdin_used@@Base+0x2758>
  409bdd:	mov    esi,0x1
  409be2:	xor    eax,eax
  409be4:	call   405400 <__fprintf_chk@plt>
  409be9:	mov    rdi,QWORD PTR [rbx+0xd0]
  409bf0:	lea    rdx,[rip+0x2d822]        # 437419 <_IO_stdin_used@@Base+0x9419>
  409bf7:	mov    esi,0x1
  409bfc:	xor    eax,eax
  409bfe:	call   405400 <__fprintf_chk@plt>
  409c03:	mov    rbp,QWORD PTR [r13+0x28]
  409c07:	test   rbp,rbp
  409c0a:	je     40a2cf <__flatcc_fb_codegen_c@@Base+0x2d7f>
  409c10:	lea    r14,[rip+0x26bf1]        # 430808 <_IO_stdin_used@@Base+0x2808>
  409c17:	jmp    409c45 <__flatcc_fb_codegen_c@@Base+0x26f5>
  409c19:	nop    DWORD PTR [rax+0x0]
  409c20:	push   r9
  409c22:	mov    rcx,r12
  409c25:	mov    esi,0x1
  409c2a:	push   r8
  409c2c:	lea    rdx,[rip+0x26b9d]        # 4307d0 <_IO_stdin_used@@Base+0x27d0>
  409c33:	xor    eax,eax
  409c35:	call   405400 <__fprintf_chk@plt>
  409c3a:	mov    rbp,QWORD PTR [rbp+0x0]
  409c3e:	pop    rcx
  409c3f:	pop    rsi
  409c40:	test   rbp,rbp
  409c43:	je     409c7e <__flatcc_fb_codegen_c@@Base+0x272e>
  409c45:	mov    rax,QWORD PTR [rbp+0x8]
  409c49:	mov    rdi,QWORD PTR [rbx+0xd0]
  409c50:	mov    r9,QWORD PTR [rax]
  409c53:	mov    r8,QWORD PTR [rax+0x8]
  409c57:	test   BYTE PTR [rbp+0x12],0x4
  409c5b:	jne    409c20 <__flatcc_fb_codegen_c@@Base+0x26d0>
  409c5d:	push   r9
  409c5f:	mov    rdx,r14
  409c62:	mov    rcx,r12
  409c65:	push   r8
  409c67:	mov    esi,0x1
  409c6c:	xor    eax,eax
  409c6e:	call   405400 <__fprintf_chk@plt>
  409c73:	mov    rbp,QWORD PTR [rbp+0x0]
  409c77:	pop    rax
  409c78:	pop    rdx
  409c79:	test   rbp,rbp
  409c7c:	jne    409c45 <__flatcc_fb_codegen_c@@Base+0x26f5>
  409c7e:	mov    rdi,QWORD PTR [rbx+0xd0]
  409c85:	lea    rdx,[rip+0x26ba4]        # 430830 <_IO_stdin_used@@Base+0x2830>
  409c8c:	mov    esi,0x1
  409c91:	xor    eax,eax
  409c93:	call   405400 <__fprintf_chk@plt>
  409c98:	mov    rdi,QWORD PTR [rbx+0xd0]
  409c9f:	xor    eax,eax
  409ca1:	lea    rdx,[rip+0x3ccb5]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  409ca8:	mov    esi,0x1
  409cad:	call   405400 <__fprintf_chk@plt>
  409cb2:	cmp    WORD PTR [rsp+0x1e],0x3
  409cb8:	je     40a1a0 <__flatcc_fb_codegen_c@@Base+0x2c50>
  409cbe:	mov    rdi,QWORD PTR [rbx+0xd0]
  409cc5:	lea    rdx,[rip+0x26b8c]        # 430858 <_IO_stdin_used@@Base+0x2858>
  409ccc:	mov    esi,0x1
  409cd1:	mov    r8,r12
  409cd4:	mov    rcx,r12
  409cd7:	xor    eax,eax
  409cd9:	call   405400 <__fprintf_chk@plt>
  409cde:	mov    rdi,QWORD PTR [rbx+0xd0]
  409ce5:	lea    rdx,[rip+0x2d72d]        # 437419 <_IO_stdin_used@@Base+0x9419>
  409cec:	mov    esi,0x1
  409cf1:	xor    eax,eax
  409cf3:	call   405400 <__fprintf_chk@plt>
  409cf8:	mov    rbp,QWORD PTR [r13+0x28]
  409cfc:	lea    r13,[rip+0x2d741]        # 437444 <_IO_stdin_used@@Base+0x9444>
  409d03:	test   rbp,rbp
  409d06:	jne    409d2c <__flatcc_fb_codegen_c@@Base+0x27dc>
  409d08:	jmp    409d5f <__flatcc_fb_codegen_c@@Base+0x280f>
  409d0a:	nop    WORD PTR [rax+rax*1+0x0]
  409d10:	lea    rdx,[rip+0x26bd9]        # 4308f0 <_IO_stdin_used@@Base+0x28f0>
  409d17:	mov    esi,0x1
  409d1c:	xor    eax,eax
  409d1e:	call   405400 <__fprintf_chk@plt>
  409d23:	mov    rbp,QWORD PTR [rbp+0x0]
  409d27:	test   rbp,rbp
  409d2a:	je     409d5f <__flatcc_fb_codegen_c@@Base+0x280f>
  409d2c:	mov    rax,QWORD PTR [rbp+0x8]
  409d30:	mov    rdi,QWORD PTR [rbx+0xd0]
  409d37:	mov    r9,QWORD PTR [rax]
  409d3a:	mov    r8,QWORD PTR [rax+0x8]
  409d3e:	mov    rcx,r12
  409d41:	test   BYTE PTR [rbp+0x12],0x4
  409d45:	jne    409d10 <__flatcc_fb_codegen_c@@Base+0x27c0>
  409d47:	mov    rdx,r13
  409d4a:	mov    esi,0x1
  409d4f:	xor    eax,eax
  409d51:	call   405400 <__fprintf_chk@plt>
  409d56:	mov    rbp,QWORD PTR [rbp+0x0]
  409d5a:	test   rbp,rbp
  409d5d:	jne    409d2c <__flatcc_fb_codegen_c@@Base+0x27dc>
  409d5f:	mov    rdi,QWORD PTR [rbx+0xd0]
  409d66:	lea    rdx,[rip+0x26b63]        # 4308d0 <_IO_stdin_used@@Base+0x28d0>
  409d6d:	mov    esi,0x1
  409d72:	xor    eax,eax
  409d74:	call   405400 <__fprintf_chk@plt>
  409d79:	mov    rdi,QWORD PTR [rbx+0xd0]
  409d80:	xor    eax,eax
  409d82:	lea    rdx,[rip+0x3cbd4]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  409d89:	mov    esi,0x1
  409d8e:	call   405400 <__fprintf_chk@plt>
  409d93:	mov    rax,QWORD PTR [rsp+0x178]
  409d9b:	xor    rax,QWORD PTR fs:0x28
  409da4:	jne    40a440 <__flatcc_fb_codegen_c@@Base+0x2ef0>
  409daa:	add    rsp,0x188
  409db1:	pop    rbx
  409db2:	pop    rbp
  409db3:	pop    r12
  409db5:	pop    r13
  409db7:	pop    r14
  409db9:	pop    r15
  409dbb:	ret    
  409dbc:	nop    DWORD PTR [rax+0x0]
  409dc0:	lea    r8,[rip+0x2d559]        # 437320 <_IO_stdin_used@@Base+0x9320>
  409dc7:	jmp    409b37 <__flatcc_fb_codegen_c@@Base+0x25e7>
  409dcc:	nop    DWORD PTR [rax+0x0]
  409dd0:	lea    r8,[rip+0x2d552]        # 437329 <_IO_stdin_used@@Base+0x9329>
  409dd7:	jmp    409b37 <__flatcc_fb_codegen_c@@Base+0x25e7>
  409ddc:	nop    DWORD PTR [rax+0x0]
  409de0:	lea    r8,[rip+0x2d528]        # 43730f <_IO_stdin_used@@Base+0x930f>
  409de7:	jmp    409b37 <__flatcc_fb_codegen_c@@Base+0x25e7>
  409dec:	nop    DWORD PTR [rax+0x0]
  409df0:	lea    r8,[rip+0x2d521]        # 437318 <_IO_stdin_used@@Base+0x9318>
  409df7:	jmp    409b37 <__flatcc_fb_codegen_c@@Base+0x25e7>
  409dfc:	nop    DWORD PTR [rax+0x0]
  409e00:	lea    r8,[rip+0x2d521]        # 437328 <_IO_stdin_used@@Base+0x9328>
  409e07:	jmp    409b37 <__flatcc_fb_codegen_c@@Base+0x25e7>
  409e0c:	nop    DWORD PTR [rax+0x0]
  409e10:	lea    r8,[rip+0x2d4f7]        # 43730e <_IO_stdin_used@@Base+0x930e>
  409e17:	jmp    409b37 <__flatcc_fb_codegen_c@@Base+0x25e7>
  409e1c:	nop    DWORD PTR [rax+0x0]
  409e20:	lea    r8,[rip+0x2d4f8]        # 43731f <_IO_stdin_used@@Base+0x931f>
  409e27:	jmp    409b37 <__flatcc_fb_codegen_c@@Base+0x25e7>
  409e2c:	nop    DWORD PTR [rax+0x0]
  409e30:	cmp    ax,0x6
  409e34:	jne    40a3cc <__flatcc_fb_codegen_c@@Base+0x2e7c>
  409e3a:	cmp    edx,0x9
  409e3d:	ja     40a37c <__flatcc_fb_codegen_c@@Base+0x2e2c>
  409e43:	lea    rcx,[rip+0x2d922]        # 43776c <_IO_stdin_used@@Base+0x976c>
  409e4a:	movsxd rax,DWORD PTR [rcx+rdx*4]
  409e4e:	add    rax,rcx
  409e51:	notrack jmp rax
  409e54:	nop    DWORD PTR [rax+0x0]
  409e58:	lea    r8,[rip+0x2d4b8]        # 437317 <_IO_stdin_used@@Base+0x9317>
  409e5f:	lea    r13,[rsp+0x110]
  409e67:	movzx  r9d,BYTE PTR [rbp+0x48]
  409e6c:	lea    rcx,[rip+0x2d54e]        # 4373c1 <_IO_stdin_used@@Base+0x93c1>
  409e73:	mov    edx,0x64
  409e78:	mov    esi,0x1
  409e7d:	mov    rdi,r13
  409e80:	xor    eax,eax
  409e82:	call   405420 <__sprintf_chk@plt>
  409e87:	jmp    409b5e <__flatcc_fb_codegen_c@@Base+0x260e>
  409e8c:	nop    DWORD PTR [rax+0x0]
  409e90:	lea    r8,[rip+0x2d488]        # 43731f <_IO_stdin_used@@Base+0x931f>
  409e97:	jmp    409e5f <__flatcc_fb_codegen_c@@Base+0x290f>
  409e99:	nop    DWORD PTR [rax+0x0]
  409ea0:	lea    r8,[rip+0x2d481]        # 437328 <_IO_stdin_used@@Base+0x9328>
  409ea7:	jmp    409e5f <__flatcc_fb_codegen_c@@Base+0x290f>
  409ea9:	nop    DWORD PTR [rax+0x0]
  409eb0:	lea    r8,[rip+0x2d457]        # 43730e <_IO_stdin_used@@Base+0x930e>
  409eb7:	jmp    409e5f <__flatcc_fb_codegen_c@@Base+0x290f>
  409eb9:	nop    DWORD PTR [rax+0x0]
  409ec0:	lea    r8,[rip+0x2d459]        # 437320 <_IO_stdin_used@@Base+0x9320>
  409ec7:	jmp    409e5f <__flatcc_fb_codegen_c@@Base+0x290f>
  409ec9:	nop    DWORD PTR [rax+0x0]
  409ed0:	lea    r8,[rip+0x2d452]        # 437329 <_IO_stdin_used@@Base+0x9329>
  409ed7:	jmp    409e5f <__flatcc_fb_codegen_c@@Base+0x290f>
  409ed9:	nop    DWORD PTR [rax+0x0]
  409ee0:	lea    r8,[rip+0x2d428]        # 43730f <_IO_stdin_used@@Base+0x930f>
  409ee7:	jmp    409e5f <__flatcc_fb_codegen_c@@Base+0x290f>
  409eec:	nop    DWORD PTR [rax+0x0]
  409ef0:	lea    r8,[rip+0x2d421]        # 437318 <_IO_stdin_used@@Base+0x9318>
  409ef7:	jmp    409e5f <__flatcc_fb_codegen_c@@Base+0x290f>
  409efc:	nop    DWORD PTR [rax+0x0]
  409f00:	cmp    ax,0x3
  409f04:	jne    40a3cc <__flatcc_fb_codegen_c@@Base+0x2e7c>
  409f0a:	cmp    edx,0xb
  409f0d:	je     40a000 <__flatcc_fb_codegen_c@@Base+0x2ab0>
  409f13:	vmovsd xmm0,QWORD PTR [rbp+0x48]
  409f18:	lea    r13,[rsp+0x110]
  409f20:	lea    rcx,[rip+0x2d4a5]        # 4373cc <_IO_stdin_used@@Base+0x93cc>
  409f27:	mov    edx,0x64
  409f2c:	mov    esi,0x1
  409f31:	mov    rdi,r13
  409f34:	mov    eax,0x1
  409f39:	call   405420 <__sprintf_chk@plt>
  409f3e:	jmp    409b5e <__flatcc_fb_codegen_c@@Base+0x260e>
  409f43:	nop    DWORD PTR [rax+rax*1+0x0]
  409f48:	cmp    edx,0x9
  409f4b:	ja     40a37c <__flatcc_fb_codegen_c@@Base+0x2e2c>
  409f51:	lea    rsi,[rip+0x2d83c]        # 437794 <_IO_stdin_used@@Base+0x9794>
  409f58:	movsxd rax,DWORD PTR [rsi+rdx*4]
  409f5c:	add    rax,rsi
  409f5f:	notrack jmp rax
  409f62:	nop    WORD PTR [rax+rax*1+0x0]
  409f68:	lea    r8,[rip+0x2d3a8]        # 437317 <_IO_stdin_used@@Base+0x9317>
  409f6f:	lea    r13,[rsp+0x110]
  409f77:	mov    r9,QWORD PTR [rbp+0x48]
  409f7b:	lea    rcx,[rip+0x2d436]        # 4373b8 <_IO_stdin_used@@Base+0x93b8>
  409f82:	jmp    409b4a <__flatcc_fb_codegen_c@@Base+0x25fa>
  409f87:	nop    WORD PTR [rax+rax*1+0x0]
  409f90:	lea    r8,[rip+0x2d388]        # 43731f <_IO_stdin_used@@Base+0x931f>
  409f97:	jmp    409f6f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  409f99:	nop    DWORD PTR [rax+0x0]
  409fa0:	lea    r8,[rip+0x2d381]        # 437328 <_IO_stdin_used@@Base+0x9328>
  409fa7:	jmp    409f6f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  409fa9:	nop    DWORD PTR [rax+0x0]
  409fb0:	lea    r8,[rip+0x2d357]        # 43730e <_IO_stdin_used@@Base+0x930e>
  409fb7:	jmp    409f6f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  409fb9:	nop    DWORD PTR [rax+0x0]
  409fc0:	lea    r8,[rip+0x2d359]        # 437320 <_IO_stdin_used@@Base+0x9320>
  409fc7:	jmp    409f6f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  409fc9:	nop    DWORD PTR [rax+0x0]
  409fd0:	lea    r8,[rip+0x2d352]        # 437329 <_IO_stdin_used@@Base+0x9329>
  409fd7:	jmp    409f6f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  409fd9:	nop    DWORD PTR [rax+0x0]
  409fe0:	lea    r8,[rip+0x2d328]        # 43730f <_IO_stdin_used@@Base+0x930f>
  409fe7:	jmp    409f6f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  409fe9:	nop    DWORD PTR [rax+0x0]
  409ff0:	lea    r8,[rip+0x2d321]        # 437318 <_IO_stdin_used@@Base+0x9318>
  409ff7:	jmp    409f6f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  409ffc:	nop    DWORD PTR [rax+0x0]
  40a000:	vxorps xmm0,xmm0,xmm0
  40a004:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbp+0x48]
  40a009:	lea    r13,[rsp+0x110]
  40a011:	vcvtss2sd xmm0,xmm0,xmm0
  40a015:	lea    rcx,[rip+0x2d3ac]        # 4373c8 <_IO_stdin_used@@Base+0x93c8>
  40a01c:	jmp    409f27 <__flatcc_fb_codegen_c@@Base+0x29d7>
  40a021:	nop    DWORD PTR [rax+0x0]
  40a028:	sub    rsp,0x8
  40a02c:	lea    r14,[rip+0x2d3aa]        # 4373dd <_IO_stdin_used@@Base+0x93dd>
  40a033:	push   r14
  40a035:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a03c:	mov    r9,r12
  40a03f:	mov    rcx,QWORD PTR [rsp+0x20]
  40a044:	mov    r8,r15
  40a047:	lea    rdx,[rip+0x2d39a]        # 4373e8 <_IO_stdin_used@@Base+0x93e8>
  40a04e:	mov    esi,0x1
  40a053:	xor    eax,eax
  40a055:	call   405400 <__fprintf_chk@plt>
  40a05a:	push   rbp
  40a05b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a062:	mov    r9,r12
  40a065:	push   r14
  40a067:	mov    r8,r12
  40a06a:	mov    rcx,rbx
  40a06d:	lea    rdx,[rip+0x26694]        # 430708 <_IO_stdin_used@@Base+0x2708>
  40a074:	mov    esi,0x1
  40a079:	xor    eax,eax
  40a07b:	call   405400 <__fprintf_chk@plt>
  40a080:	add    rsp,0x20
  40a084:	mov    QWORD PTR [rsp+0x8],r14
  40a089:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a090:	mov    r9,r12
  40a093:	mov    r8,rbx
  40a096:	mov    rcx,rbx
  40a099:	lea    rdx,[rip+0x2d35f]        # 4373ff <_IO_stdin_used@@Base+0x93ff>
  40a0a0:	mov    esi,0x1
  40a0a5:	xor    eax,eax
  40a0a7:	call   405400 <__fprintf_chk@plt>
  40a0ac:	mov    rbp,QWORD PTR [r13+0x28]
  40a0b0:	test   rbp,rbp
  40a0b3:	jne    409a32 <__flatcc_fb_codegen_c@@Base+0x24e2>
  40a0b9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a0c0:	lea    rdx,[rip+0x3c896]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40a0c7:	mov    esi,0x1
  40a0cc:	xor    eax,eax
  40a0ce:	call   405400 <__fprintf_chk@plt>
  40a0d3:	jmp    409bc9 <__flatcc_fb_codegen_c@@Base+0x2679>
  40a0d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a0e0:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40a0e5:	mov    r14,QWORD PTR [r13+0x40]
  40a0e9:	test   r14,r14
  40a0ec:	je     40a308 <__flatcc_fb_codegen_c@@Base+0x2db8>
  40a0f2:	lea    rax,[rip+0x3f7f4]        # 4498ed <fb_schema_table_missing@@Base+0x242d>
  40a0f9:	mov    QWORD PTR [rsp+0x8],rax
  40a0fe:	jmp    40992e <__flatcc_fb_codegen_c@@Base+0x23de>
  40a103:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a10a:	lea    rdx,[rip+0x3c84c]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40a111:	mov    esi,0x1
  40a116:	xor    eax,eax
  40a118:	call   405400 <__fprintf_chk@plt>
  40a11d:	nop    DWORD PTR [rax]
  40a120:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a127:	mov    r8,r12
  40a12a:	mov    rcx,r12
  40a12d:	lea    rdx,[rip+0x26664]        # 430798 <_IO_stdin_used@@Base+0x2798>
  40a134:	mov    esi,0x1
  40a139:	xor    eax,eax
  40a13b:	call   405400 <__fprintf_chk@plt>
  40a140:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a147:	lea    rdx,[rip+0x2d2e0]        # 43742e <_IO_stdin_used@@Base+0x942e>
  40a14e:	mov    esi,0x1
  40a153:	xor    eax,eax
  40a155:	call   405400 <__fprintf_chk@plt>
  40a15a:	mov    rbp,QWORD PTR [r13+0x28]
  40a15e:	test   rbp,rbp
  40a161:	jne    409c10 <__flatcc_fb_codegen_c@@Base+0x26c0>
  40a167:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a16e:	lea    rdx,[rip+0x266bb]        # 430830 <_IO_stdin_used@@Base+0x2830>
  40a175:	mov    esi,0x1
  40a17a:	xor    eax,eax
  40a17c:	call   405400 <__fprintf_chk@plt>
  40a181:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a188:	lea    rdx,[rip+0x3c7ce]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40a18f:	mov    esi,0x1
  40a194:	xor    eax,eax
  40a196:	call   405400 <__fprintf_chk@plt>
  40a19b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1a0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a1a7:	mov    r8,r12
  40a1aa:	mov    rcx,r12
  40a1ad:	lea    rdx,[rip+0x266e4]        # 430898 <_IO_stdin_used@@Base+0x2898>
  40a1b4:	mov    esi,0x1
  40a1b9:	xor    eax,eax
  40a1bb:	call   405400 <__fprintf_chk@plt>
  40a1c0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a1c7:	lea    rdx,[rip+0x2d260]        # 43742e <_IO_stdin_used@@Base+0x942e>
  40a1ce:	mov    esi,0x1
  40a1d3:	xor    eax,eax
  40a1d5:	call   405400 <__fprintf_chk@plt>
  40a1da:	jmp    409cf8 <__flatcc_fb_codegen_c@@Base+0x27a8>
  40a1df:	lea    rax,[rip+0x3c778]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40a1e6:	mov    QWORD PTR [rsp+0x10],rax
  40a1eb:	lea    r15,[rip+0x2d115]        # 437307 <_IO_stdin_used@@Base+0x9307>
  40a1f2:	jmp    4098ec <__flatcc_fb_codegen_c@@Base+0x239c>
  40a1f7:	lea    rax,[rip+0x3c760]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40a1fe:	mov    QWORD PTR [rsp+0x10],rax
  40a203:	lea    r15,[rip+0x2d0ad]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  40a20a:	jmp    4098ec <__flatcc_fb_codegen_c@@Base+0x239c>
  40a20f:	lea    rax,[rip+0x3c748]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40a216:	mov    QWORD PTR [rsp+0x10],rax
  40a21b:	lea    r15,[rip+0x2d0bb]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  40a222:	jmp    4098ec <__flatcc_fb_codegen_c@@Base+0x239c>
  40a227:	lea    rax,[rip+0x3c730]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40a22e:	mov    QWORD PTR [rsp+0x10],rax
  40a233:	lea    r15,[rip+0x2d093]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  40a23a:	jmp    4098ec <__flatcc_fb_codegen_c@@Base+0x239c>
  40a23f:	lea    rax,[rip+0x3c718]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40a246:	mov    QWORD PTR [rsp+0x10],rax
  40a24b:	lea    r15,[rip+0x2d0a7]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  40a252:	jmp    4098ec <__flatcc_fb_codegen_c@@Base+0x239c>
  40a257:	lea    rax,[rip+0x3c700]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40a25e:	mov    QWORD PTR [rsp+0x10],rax
  40a263:	lea    r15,[rip+0x2d05d]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  40a26a:	jmp    4098ec <__flatcc_fb_codegen_c@@Base+0x239c>
  40a26f:	lea    rax,[rip+0x3c6e8]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40a276:	mov    QWORD PTR [rsp+0x10],rax
  40a27b:	lea    r15,[rip+0x2d036]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  40a282:	jmp    4098ec <__flatcc_fb_codegen_c@@Base+0x239c>
  40a287:	lea    rax,[rip+0x3c6d0]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40a28e:	mov    QWORD PTR [rsp+0x10],rax
  40a293:	lea    r15,[rip+0x2d044]        # 4372de <_IO_stdin_used@@Base+0x92de>
  40a29a:	jmp    4098ec <__flatcc_fb_codegen_c@@Base+0x239c>
  40a29f:	lea    rax,[rip+0x3c6b8]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40a2a6:	mov    QWORD PTR [rsp+0x10],rax
  40a2ab:	lea    r15,[rip+0x2d01c]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  40a2b2:	jmp    4098ec <__flatcc_fb_codegen_c@@Base+0x239c>
  40a2b7:	lea    rax,[rip+0x3c6a0]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40a2be:	mov    QWORD PTR [rsp+0x10],rax
  40a2c3:	lea    r15,[rip+0x2d030]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  40a2ca:	jmp    4098ec <__flatcc_fb_codegen_c@@Base+0x239c>
  40a2cf:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a2d6:	lea    rdx,[rip+0x26553]        # 430830 <_IO_stdin_used@@Base+0x2830>
  40a2dd:	mov    esi,0x1
  40a2e2:	xor    eax,eax
  40a2e4:	call   405400 <__fprintf_chk@plt>
  40a2e9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a2f0:	lea    rdx,[rip+0x3c666]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40a2f7:	mov    esi,0x1
  40a2fc:	xor    eax,eax
  40a2fe:	call   405400 <__fprintf_chk@plt>
  40a303:	jmp    409cbe <__flatcc_fb_codegen_c@@Base+0x276e>
  40a308:	sub    rsp,0x8
  40a30c:	lea    r10,[rip+0x3f5da]        # 4498ed <fb_schema_table_missing@@Base+0x242d>
  40a313:	push   r10
  40a315:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a31c:	mov    r9,r12
  40a31f:	mov    rcx,QWORD PTR [rsp+0x20]
  40a324:	mov    r8,r15
  40a327:	lea    rdx,[rip+0x2d0ba]        # 4373e8 <_IO_stdin_used@@Base+0x93e8>
  40a32e:	mov    esi,0x1
  40a333:	xor    eax,eax
  40a335:	call   405400 <__fprintf_chk@plt>
  40a33a:	push   rbp
  40a33b:	lea    r10,[rip+0x3f5ab]        # 4498ed <fb_schema_table_missing@@Base+0x242d>
  40a342:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a349:	push   r10
  40a34b:	mov    r9,r12
  40a34e:	mov    r8,r12
  40a351:	mov    rcx,rbx
  40a354:	lea    rdx,[rip+0x263ad]        # 430708 <_IO_stdin_used@@Base+0x2708>
  40a35b:	mov    esi,0x1
  40a360:	xor    eax,eax
  40a362:	call   405400 <__fprintf_chk@plt>
  40a367:	add    rsp,0x20
  40a36b:	lea    r10,[rip+0x3f57b]        # 4498ed <fb_schema_table_missing@@Base+0x242d>
  40a372:	mov    QWORD PTR [rsp+0x8],r10
  40a377:	jmp    409a25 <__flatcc_fb_codegen_c@@Base+0x24d5>
  40a37c:	mov    rax,QWORD PTR [rip+0x47c65]        # 451fe8 <stderr@GLIBC_2.2.5>
  40a383:	lea    rcx,[rip+0x2575e]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40a38a:	mov    rdi,QWORD PTR [rax]
  40a38d:	lea    rdx,[rip+0x2ceff]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40a394:	mov    esi,0x1
  40a399:	lea    r9,[rip+0x25710]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  40a3a0:	mov    r8d,0xe2
  40a3a6:	xor    eax,eax
  40a3a8:	call   405400 <__fprintf_chk@plt>
  40a3ad:	lea    rcx,[rip+0x2d4a4]        # 437858 <_IO_stdin_used@@Base+0x9858>
  40a3b4:	mov    edx,0xe2
  40a3b9:	lea    rsi,[rip+0x25728]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40a3c0:	lea    rdi,[rip+0x2df92]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40a3c7:	call   405300 <__assert_fail@plt>
  40a3cc:	mov    rax,QWORD PTR [rip+0x47c15]        # 451fe8 <stderr@GLIBC_2.2.5>
  40a3d3:	lea    rcx,[rip+0x2570e]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40a3da:	mov    rdi,QWORD PTR [rax]
  40a3dd:	lea    rdx,[rip+0x2ceaf]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40a3e4:	mov    esi,0x1
  40a3e9:	lea    r9,[rip+0x256c0]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  40a3f0:	mov    r8d,0x104
  40a3f6:	xor    eax,eax
  40a3f8:	call   405400 <__fprintf_chk@plt>
  40a3fd:	lea    rcx,[rip+0x2d464]        # 437868 <_IO_stdin_used@@Base+0x9868>
  40a404:	mov    edx,0x104
  40a409:	lea    rsi,[rip+0x256d8]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40a410:	lea    rdi,[rip+0x2df42]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40a417:	call   405300 <__assert_fail@plt>
  40a41c:	call   407790 <__flatcc_fb_codegen_c@@Base+0x240>
  40a421:	lea    rcx,[rip+0x2d450]        # 437878 <_IO_stdin_used@@Base+0x9878>
  40a428:	mov    edx,0x4b5
  40a42d:	lea    rsi,[rip+0x2571c]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  40a434:	lea    rdi,[rip+0x262ad]        # 4306e8 <_IO_stdin_used@@Base+0x26e8>
  40a43b:	call   405300 <__assert_fail@plt>
  40a440:	call   4052d0 <__stack_chk_fail@plt>
  40a445:	lea    rcx,[rip+0x2d42c]        # 437878 <_IO_stdin_used@@Base+0x9878>
  40a44c:	mov    edx,0x4b4
  40a451:	lea    rsi,[rip+0x256f8]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  40a458:	lea    rdi,[rip+0x26249]        # 4306a8 <_IO_stdin_used@@Base+0x26a8>
  40a45f:	call   405300 <__assert_fail@plt>
  40a464:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a46f:	nop
  40a470:	push   r15
  40a472:	mov    ecx,0x1d
  40a477:	push   r14
  40a479:	push   r13
  40a47b:	push   r12
  40a47d:	push   rbp
  40a47e:	push   rbx
  40a47f:	mov    rbx,rdi
  40a482:	sub    rsp,0x218
  40a489:	mov    QWORD PTR [rsp+0x8],rsi
  40a48e:	mov    rax,QWORD PTR fs:0x28
  40a497:	mov    QWORD PTR [rsp+0x208],rax
  40a49f:	xor    eax,eax
  40a4a1:	mov    rax,QWORD PTR [rdi+0xe0]
  40a4a8:	lea    rdi,[rsp+0x30]
  40a4ad:	mov    r14d,DWORD PTR [rax+0xa4]
  40a4b4:	xor    eax,eax
  40a4b6:	mov    QWORD PTR [rsp+0x20],rdi
  40a4bb:	cmp    WORD PTR [rsi+0x10],0x1
  40a4c0:	rep stos QWORD PTR es:[rdi],rax
  40a4c3:	lea    rdi,[rsp+0x120]
  40a4cb:	mov    ecx,0x1d
  40a4d0:	mov    QWORD PTR [rsp+0x10],rdi
  40a4d5:	rep stos QWORD PTR es:[rdi],rax
  40a4d8:	jne    40b365 <__flatcc_fb_codegen_c@@Base+0x3e15>
  40a4de:	mov    rax,QWORD PTR [rsp+0x8]
  40a4e3:	cmp    WORD PTR [rax+0xb0],0x0
  40a4eb:	je     40ab38 <__flatcc_fb_codegen_c@@Base+0x35e8>
  40a4f1:	mov    rax,QWORD PTR [rsp+0x8]
  40a4f6:	cmp    QWORD PTR [rax+0xb8],0x0
  40a4fe:	jne    40a50e <__flatcc_fb_codegen_c@@Base+0x2fbe>
  40a500:	cmp    QWORD PTR [rax+0xa8],0x0
  40a508:	jne    40b346 <__flatcc_fb_codegen_c@@Base+0x3df6>
  40a50e:	mov    r15,QWORD PTR [rsp+0x8]
  40a513:	mov    rdx,QWORD PTR [rsp+0x20]
  40a518:	mov    rdi,QWORD PTR [r15+0x18]
  40a51c:	mov    rsi,r15
  40a51f:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40a524:	mov    rbp,QWORD PTR [r15+0x40]
  40a528:	test   rbp,rbp
  40a52b:	je     40a5c8 <__flatcc_fb_codegen_c@@Base+0x3078>
  40a531:	mov    ecx,0x1
  40a536:	xor    edx,edx
  40a538:	nop    DWORD PTR [rax+rax*1+0x0]
  40a540:	mov    rax,QWORD PTR [rbp+0x8]
  40a544:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a54b:	cmp    QWORD PTR [rax+0x10],rdx
  40a54f:	je     40a581 <__flatcc_fb_codegen_c@@Base+0x3031>
  40a551:	test   ecx,ecx
  40a553:	lea    rdx,[rip+0x2ce30]        # 43738a <_IO_stdin_used@@Base+0x938a>
  40a55a:	lea    rcx,[rip+0x3c3fd]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40a561:	jne    40a56a <__flatcc_fb_codegen_c@@Base+0x301a>
  40a563:	lea    rdx,[rip+0x2ce27]        # 437391 <_IO_stdin_used@@Base+0x9391>
  40a56a:	mov    esi,0x1
  40a56f:	xor    eax,eax
  40a571:	call   405400 <__fprintf_chk@plt>
  40a576:	mov    rax,QWORD PTR [rbp+0x8]
  40a57a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a581:	mov    rcx,QWORD PTR [rax+0x8]
  40a585:	mov    r8,QWORD PTR [rax]
  40a588:	lea    rdx,[rip+0x2ddda]        # 438369 <_IO_stdin_used@@Base+0xa369>
  40a58f:	mov    esi,0x1
  40a594:	xor    eax,eax
  40a596:	call   405400 <__fprintf_chk@plt>
  40a59b:	mov    rax,QWORD PTR [rbp+0x8]
  40a59f:	mov    rbp,QWORD PTR [rbp+0x0]
  40a5a3:	mov    rdx,QWORD PTR [rax+0x10]
  40a5a7:	xor    ecx,ecx
  40a5a9:	test   rbp,rbp
  40a5ac:	jne    40a540 <__flatcc_fb_codegen_c@@Base+0x2ff0>
  40a5ae:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a5b5:	lea    rdx,[rip+0x2cfb3]        # 43756f <_IO_stdin_used@@Base+0x956f>
  40a5bc:	mov    esi,0x1
  40a5c1:	xor    eax,eax
  40a5c3:	call   405400 <__fprintf_chk@plt>
  40a5c8:	mov    rax,QWORD PTR [rsp+0x8]
  40a5cd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a5d4:	cmp    QWORD PTR [rax+0xb8],0x0
  40a5dc:	je     40afa0 <__flatcc_fb_codegen_c@@Base+0x3a50>
  40a5e2:	test   r14d,r14d
  40a5e5:	jne    40b030 <__flatcc_fb_codegen_c@@Base+0x3ae0>
  40a5eb:	mov    rcx,QWORD PTR [rsp+0x20]
  40a5f0:	lea    rdx,[rip+0x2ce81]        # 437478 <_IO_stdin_used@@Base+0x9478>
  40a5f7:	mov    esi,0x1
  40a5fc:	xor    eax,eax
  40a5fe:	call   405400 <__fprintf_chk@plt>
  40a603:	mov    rax,QWORD PTR [rsp+0x8]
  40a608:	mov    r15,QWORD PTR [rax+0x28]
  40a60c:	test   r15,r15
  40a60f:	je     40af80 <__flatcc_fb_codegen_c@@Base+0x3a30>
  40a615:	mov    DWORD PTR [rsp+0x18],0x0
  40a61d:	mov    DWORD PTR [rsp+0x2c],0x0
  40a625:	xor    ebp,ebp
  40a627:	nop    WORD PTR [rax+rax*1+0x0]
  40a630:	mov    r12,QWORD PTR [r15+0x68]
  40a634:	test   r12,r12
  40a637:	je     40a6d3 <__flatcc_fb_codegen_c@@Base+0x3183>
  40a63d:	mov    ecx,0x1
  40a642:	xor    edx,edx
  40a644:	nop    DWORD PTR [rax+0x0]
  40a648:	mov    rax,QWORD PTR [r12+0x8]
  40a64d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a654:	cmp    QWORD PTR [rax+0x10],rdx
  40a658:	je     40a68b <__flatcc_fb_codegen_c@@Base+0x313b>
  40a65a:	test   ecx,ecx
  40a65c:	lea    rdx,[rip+0x2cd27]        # 43738a <_IO_stdin_used@@Base+0x938a>
  40a663:	lea    rcx,[rip+0x3c334]        # 44699e <_IO_stdin_used@@Base+0x1899e>
  40a66a:	jne    40a673 <__flatcc_fb_codegen_c@@Base+0x3123>
  40a66c:	lea    rdx,[rip+0x2cd1e]        # 437391 <_IO_stdin_used@@Base+0x9391>
  40a673:	mov    esi,0x1
  40a678:	xor    eax,eax
  40a67a:	call   405400 <__fprintf_chk@plt>
  40a67f:	mov    rax,QWORD PTR [r12+0x8]
  40a684:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a68b:	mov    rcx,QWORD PTR [rax+0x8]
  40a68f:	mov    r8,QWORD PTR [rax]
  40a692:	lea    rdx,[rip+0x2dcd0]        # 438369 <_IO_stdin_used@@Base+0xa369>
  40a699:	mov    esi,0x1
  40a69e:	xor    eax,eax
  40a6a0:	call   405400 <__fprintf_chk@plt>
  40a6a5:	mov    rax,QWORD PTR [r12+0x8]
  40a6aa:	mov    r12,QWORD PTR [r12]
  40a6ae:	mov    rdx,QWORD PTR [rax+0x10]
  40a6b2:	xor    ecx,ecx
  40a6b4:	test   r12,r12
  40a6b7:	jne    40a648 <__flatcc_fb_codegen_c@@Base+0x30f8>
  40a6b9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a6c0:	lea    rdx,[rip+0x2cea8]        # 43756f <_IO_stdin_used@@Base+0x956f>
  40a6c7:	mov    esi,0x1
  40a6cc:	xor    eax,eax
  40a6ce:	call   405400 <__fprintf_chk@plt>
  40a6d3:	mov    rax,QWORD PTR [r15+0x8]
  40a6d7:	mov    r12,QWORD PTR [rax]
  40a6da:	mov    r13,QWORD PTR [rax+0x8]
  40a6de:	test   rbp,rbp
  40a6e1:	jne    40ac30 <__flatcc_fb_codegen_c@@Base+0x36e0>
  40a6e7:	mov    rax,QWORD PTR [rsp+0x8]
  40a6ec:	movzx  r11d,WORD PTR [rax+0xb0]
  40a6f4:	test   r14d,r14d
  40a6f7:	je     40abe8 <__flatcc_fb_codegen_c@@Base+0x3698>
  40a6fd:	mov    r8d,DWORD PTR [r15+0x78]
  40a701:	sub    r8d,ebp
  40a704:	jne    40ac68 <__flatcc_fb_codegen_c@@Base+0x3718>
  40a70a:	test   BYTE PTR [r15+0x70],0x4
  40a70f:	jne    40aca2 <__flatcc_fb_codegen_c@@Base+0x3752>
  40a715:	movzx  eax,WORD PTR [r15+0x28]
  40a71a:	cmp    ax,0x8
  40a71e:	jne    40ab68 <__flatcc_fb_codegen_c@@Base+0x3618>
  40a724:	mov    eax,DWORD PTR [r15+0x18]
  40a728:	cmp    eax,0x5
  40a72b:	je     40acd0 <__flatcc_fb_codegen_c@@Base+0x3780>
  40a731:	cmp    eax,0xb
  40a734:	ja     40b227 <__flatcc_fb_codegen_c@@Base+0x3cd7>
  40a73a:	lea    rsi,[rip+0x2d07b]        # 4377bc <_IO_stdin_used@@Base+0x97bc>
  40a741:	movsxd rax,DWORD PTR [rsi+rax*4]
  40a745:	add    rax,rsi
  40a748:	notrack jmp rax
  40a74b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a750:	lea    rcx,[rip+0x3c207]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40a757:	lea    r8,[rip+0x2cba9]        # 437307 <_IO_stdin_used@@Base+0x9307>
  40a75e:	xchg   ax,ax
  40a760:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a767:	test   r14d,r14d
  40a76a:	je     40aa50 <__flatcc_fb_codegen_c@@Base+0x3500>
  40a770:	lea    rdx,[rip+0x2cd2c]        # 4374a3 <_IO_stdin_used@@Base+0x94a3>
  40a777:	mov    esi,0x1
  40a77c:	xor    eax,eax
  40a77e:	call   405400 <__fprintf_chk@plt>
  40a783:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a78a:	mov    r8,r12
  40a78d:	mov    ecx,r13d
  40a790:	lea    rdx,[rip+0x2cd58]        # 4374ef <_IO_stdin_used@@Base+0x94ef>
  40a797:	mov    esi,0x1
  40a79c:	xor    eax,eax
  40a79e:	call   405400 <__fprintf_chk@plt>
  40a7a3:	mov    rbp,QWORD PTR [r15+0x80]
  40a7aa:	add    ebp,DWORD PTR [r15+0x78]
  40a7ae:	mov    r15,QWORD PTR [r15]
  40a7b1:	test   r15,r15
  40a7b4:	jne    40a630 <__flatcc_fb_codegen_c@@Base+0x30e0>
  40a7ba:	test   r14d,r14d
  40a7bd:	je     40af80 <__flatcc_fb_codegen_c@@Base+0x3a30>
  40a7c3:	mov    rax,QWORD PTR [rsp+0x8]
  40a7c8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a7cf:	mov    rax,QWORD PTR [rax+0xb8]
  40a7d6:	mov    QWORD PTR [rsp+0x18],rax
  40a7db:	mov    r8d,DWORD PTR [rsp+0x18]
  40a7e0:	sub    r8d,ebp
  40a7e3:	jne    40b204 <__flatcc_fb_codegen_c@@Base+0x3cb4>
  40a7e9:	lea    rdx,[rip+0x2dbc5]        # 4383b5 <_IO_stdin_used@@Base+0xa3b5>
  40a7f0:	mov    esi,0x1
  40a7f5:	xor    eax,eax
  40a7f7:	call   405400 <__fprintf_chk@plt>
  40a7fc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a803:	lea    rdx,[rip+0x2cd04]        # 43750e <_IO_stdin_used@@Base+0x950e>
  40a80a:	mov    esi,0x1
  40a80f:	xor    eax,eax
  40a811:	call   405400 <__fprintf_chk@plt>
  40a816:	mov    rax,QWORD PTR [rsp+0x8]
  40a81b:	mov    r14,QWORD PTR [rsp+0x20]
  40a820:	mov    r8,QWORD PTR [rax+0xb8]
  40a827:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a82e:	mov    rcx,r14
  40a831:	lea    rdx,[rip+0x26320]        # 430b58 <_IO_stdin_used@@Base+0x2b58>
  40a838:	mov    esi,0x1
  40a83d:	xor    eax,eax
  40a83f:	call   405400 <__fprintf_chk@plt>
  40a844:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a84b:	mov    r9,r14
  40a84e:	mov    r8,r14
  40a851:	mov    rcx,r14
  40a854:	lea    rdx,[rip+0x2633d]        # 430b98 <_IO_stdin_used@@Base+0x2b98>
  40a85b:	mov    esi,0x1
  40a860:	xor    eax,eax
  40a862:	call   405400 <__fprintf_chk@plt>
  40a867:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a86e:	mov    r9,r14
  40a871:	mov    r8,r14
  40a874:	mov    rcx,r14
  40a877:	lea    rdx,[rip+0x26372]        # 430bf0 <_IO_stdin_used@@Base+0x2bf0>
  40a87e:	mov    esi,0x1
  40a883:	xor    eax,eax
  40a885:	call   405400 <__fprintf_chk@plt>
  40a88a:	sub    rsp,0x8
  40a88e:	push   rbx
  40a88f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a896:	mov    r9,r14
  40a899:	mov    rcx,r14
  40a89c:	mov    r8,r14
  40a89f:	lea    rdx,[rip+0x26392]        # 430c38 <_IO_stdin_used@@Base+0x2c38>
  40a8a6:	mov    esi,0x1
  40a8ab:	xor    eax,eax
  40a8ad:	call   405400 <__fprintf_chk@plt>
  40a8b2:	pop    rbp
  40a8b3:	pop    r12
  40a8b5:	mov    r15,QWORD PTR [rsp+0x8]
  40a8ba:	mov    r14,QWORD PTR [rsp+0x20]
  40a8bf:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a8c6:	mov    r8,QWORD PTR [r15+0xb8]
  40a8cd:	mov    rcx,r14
  40a8d0:	lea    rdx,[rip+0x263b9]        # 430c90 <_IO_stdin_used@@Base+0x2c90>
  40a8d7:	mov    esi,0x1
  40a8dc:	xor    eax,eax
  40a8de:	call   405400 <__fprintf_chk@plt>
  40a8e3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a8ea:	mov    r9,rbx
  40a8ed:	mov    r8,r14
  40a8f0:	mov    rcx,r14
  40a8f3:	lea    rdx,[rip+0x2549e]        # 42fd98 <_IO_stdin_used@@Base+0x1d98>
  40a8fa:	mov    esi,0x1
  40a8ff:	xor    eax,eax
  40a901:	call   405400 <__fprintf_chk@plt>
  40a906:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a90d:	mov    r8,r14
  40a910:	mov    rcx,rbx
  40a913:	lea    rdx,[rip+0x2cbdc]        # 4374f6 <_IO_stdin_used@@Base+0x94f6>
  40a91a:	mov    esi,0x1
  40a91f:	xor    eax,eax
  40a921:	call   405400 <__fprintf_chk@plt>
  40a926:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a92d:	lea    rdx,[rip+0x3c029]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40a934:	mov    esi,0x1
  40a939:	xor    eax,eax
  40a93b:	call   405400 <__fprintf_chk@plt>
  40a940:	mov    rbp,QWORD PTR [r15+0x28]
  40a944:	xor    r13d,r13d
  40a947:	xor    r12d,r12d
  40a94a:	test   rbp,rbp
  40a94d:	je     40ace0 <__flatcc_fb_codegen_c@@Base+0x3790>
  40a953:	mov    DWORD PTR [rsp+0x8],r13d
  40a958:	mov    r14,QWORD PTR [rsp+0x10]
  40a95d:	jmp    40a9dd <__flatcc_fb_codegen_c@@Base+0x348d>
  40a95f:	nop
  40a960:	cmp    dx,0xe
  40a964:	jne    40a9a0 <__flatcc_fb_codegen_c@@Base+0x3450>
  40a966:	mov    rsi,QWORD PTR [rbp+0x18]
  40a96a:	mov    rdx,r14
  40a96d:	mov    rdi,QWORD PTR [rsi+0x18]
  40a971:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40a976:	mov    rdx,QWORD PTR [rbp+0x18]
  40a97a:	movzx  eax,WORD PTR [rdx+0x10]
  40a97e:	cmp    ax,0x1
  40a982:	je     40af48 <__flatcc_fb_codegen_c@@Base+0x39f8>
  40a988:	cmp    ax,0x3
  40a98c:	je     40ad78 <__flatcc_fb_codegen_c@@Base+0x3828>
  40a992:	movzx  eax,WORD PTR [rbp+0x70]
  40a996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a9a0:	test   al,0x80
  40a9a2:	je     40a9d0 <__flatcc_fb_codegen_c@@Base+0x3480>
  40a9a4:	test   r12d,r12d
  40a9a7:	jne    40a9d0 <__flatcc_fb_codegen_c@@Base+0x3480>
  40a9a9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a9b0:	lea    rdx,[rip+0x25be1]        # 430598 <_IO_stdin_used@@Base+0x2598>
  40a9b7:	mov    esi,0x1
  40a9bc:	xor    eax,eax
  40a9be:	call   405400 <__fprintf_chk@plt>
  40a9c3:	mov    DWORD PTR [rsp+0x8],0x1
  40a9cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a9d0:	mov    rbp,QWORD PTR [rbp+0x0]
  40a9d4:	test   rbp,rbp
  40a9d7:	je     40ace0 <__flatcc_fb_codegen_c@@Base+0x3790>
  40a9dd:	movzx  eax,WORD PTR [rbp+0x70]
  40a9e1:	test   al,0x4
  40a9e3:	jne    40a9d0 <__flatcc_fb_codegen_c@@Base+0x3480>
  40a9e5:	mov    rdx,QWORD PTR [rbp+0x8]
  40a9e9:	mov    r15,QWORD PTR [rdx]
  40a9ec:	mov    r13,QWORD PTR [rdx+0x8]
  40a9f0:	movzx  edx,WORD PTR [rbp+0x28]
  40a9f4:	cmp    dx,0x8
  40a9f8:	jne    40a960 <__flatcc_fb_codegen_c@@Base+0x3410>
  40a9fe:	mov    eax,DWORD PTR [rbp+0x18]
  40aa01:	cmp    eax,0x5
  40aa04:	je     40ad28 <__flatcc_fb_codegen_c@@Base+0x37d8>
  40aa0a:	cmp    eax,0xb
  40aa0d:	ja     40b389 <__flatcc_fb_codegen_c@@Base+0x3e39>
  40aa13:	lea    rdx,[rip+0x2cdd2]        # 4377ec <_IO_stdin_used@@Base+0x97ec>
  40aa1a:	movsxd rax,DWORD PTR [rdx+rax*4]
  40aa1e:	add    rax,rdx
  40aa21:	notrack jmp rax
  40aa24:	nop    DWORD PTR [rax+0x0]
  40aa28:	lea    rcx,[rip+0x3bf2f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40aa2f:	lea    r8,[rip+0x2c8c4]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  40aa36:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aa3d:	test   r14d,r14d
  40aa40:	jne    40a770 <__flatcc_fb_codegen_c@@Base+0x3220>
  40aa46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa50:	mov    r9,r8
  40aa53:	lea    rdx,[rip+0x2ca53]        # 4374ad <_IO_stdin_used@@Base+0x94ad>
  40aa5a:	mov    r8,rcx
  40aa5d:	mov    esi,0x1
  40aa62:	mov    ecx,r11d
  40aa65:	xor    eax,eax
  40aa67:	call   405400 <__fprintf_chk@plt>
  40aa6c:	jmp    40a783 <__flatcc_fb_codegen_c@@Base+0x3233>
  40aa71:	nop    DWORD PTR [rax+0x0]
  40aa78:	lea    rcx,[rip+0x3bedf]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40aa7f:	lea    r8,[rip+0x2c858]        # 4372de <_IO_stdin_used@@Base+0x92de>
  40aa86:	jmp    40a760 <__flatcc_fb_codegen_c@@Base+0x3210>
  40aa8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa90:	lea    rcx,[rip+0x3bec7]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40aa97:	lea    r8,[rip+0x2c81a]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  40aa9e:	jmp    40a760 <__flatcc_fb_codegen_c@@Base+0x3210>
  40aaa3:	nop    DWORD PTR [rax+rax*1+0x0]
  40aaa8:	lea    rcx,[rip+0x3beaf]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40aaaf:	lea    r8,[rip+0x2c818]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  40aab6:	jmp    40a760 <__flatcc_fb_codegen_c@@Base+0x3210>
  40aabb:	nop    DWORD PTR [rax+rax*1+0x0]
  40aac0:	lea    rcx,[rip+0x3be97]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40aac7:	lea    r8,[rip+0x2c7f9]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  40aace:	jmp    40a760 <__flatcc_fb_codegen_c@@Base+0x3210>
  40aad3:	nop    DWORD PTR [rax+rax*1+0x0]
  40aad8:	lea    rcx,[rip+0x3be7f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40aadf:	lea    r8,[rip+0x2c813]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  40aae6:	jmp    40a760 <__flatcc_fb_codegen_c@@Base+0x3210>
  40aaeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40aaf0:	lea    rcx,[rip+0x3be67]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40aaf7:	lea    r8,[rip+0x2c7cf]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  40aafe:	jmp    40a760 <__flatcc_fb_codegen_c@@Base+0x3210>
  40ab03:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab08:	lea    rcx,[rip+0x3be4f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40ab0f:	lea    r8,[rip+0x2c7c7]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  40ab16:	jmp    40a760 <__flatcc_fb_codegen_c@@Base+0x3210>
  40ab1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab20:	lea    rcx,[rip+0x3be37]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40ab27:	lea    r8,[rip+0x2c789]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  40ab2e:	jmp    40a760 <__flatcc_fb_codegen_c@@Base+0x3210>
  40ab33:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab38:	cmp    QWORD PTR [rax+0xa8],0x0
  40ab40:	je     40a50e <__flatcc_fb_codegen_c@@Base+0x2fbe>
  40ab46:	lea    rcx,[rip+0x2cd7b]        # 4378c8 <_IO_stdin_used@@Base+0x98c8>
  40ab4d:	mov    edx,0x3a9
  40ab52:	lea    rsi,[rip+0x24ff7]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  40ab59:	lea    rdi,[rip+0x25de0]        # 430940 <_IO_stdin_used@@Base+0x2940>
  40ab60:	call   405300 <__assert_fail@plt>
  40ab65:	nop    DWORD PTR [rax]
  40ab68:	cmp    ax,0xe
  40ab6c:	jne    40b277 <__flatcc_fb_codegen_c@@Base+0x3d27>
  40ab72:	mov    rsi,QWORD PTR [r15+0x18]
  40ab76:	movzx  eax,WORD PTR [rsi+0x10]
  40ab7a:	mov    edx,eax
  40ab7c:	and    edx,0xfffffffd
  40ab7f:	cmp    dx,0x1
  40ab83:	jne    40b2e8 <__flatcc_fb_codegen_c@@Base+0x3d98>
  40ab89:	mov    rdi,QWORD PTR [rsi+0x18]
  40ab8d:	mov    rdx,QWORD PTR [rsp+0x10]
  40ab92:	cmp    ax,0x1
  40ab96:	lea    rbp,[rip+0x2c8c4]        # 437461 <_IO_stdin_used@@Base+0x9461>
  40ab9d:	lea    rax,[rip+0x3bdba]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40aba4:	mov    DWORD PTR [rsp+0x28],r11d
  40aba9:	cmove  rbp,rax
  40abad:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40abb2:	test   r14d,r14d
  40abb5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40abbc:	mov    r11d,DWORD PTR [rsp+0x28]
  40abc1:	je     40ac40 <__flatcc_fb_codegen_c@@Base+0x36f0>
  40abc3:	mov    rcx,QWORD PTR [rsp+0x10]
  40abc8:	mov    r8,rbp
  40abcb:	lea    rdx,[rip+0x2c8f1]        # 4374c3 <_IO_stdin_used@@Base+0x94c3>
  40abd2:	mov    esi,0x1
  40abd7:	xor    eax,eax
  40abd9:	call   405400 <__fprintf_chk@plt>
  40abde:	jmp    40a783 <__flatcc_fb_codegen_c@@Base+0x3233>
  40abe3:	nop    DWORD PTR [rax+rax*1+0x0]
  40abe8:	test   BYTE PTR [r15+0x70],0x4
  40abed:	je     40a715 <__flatcc_fb_codegen_c@@Base+0x31c5>
  40abf3:	mov    r8d,DWORD PTR [rsp+0x18]
  40abf8:	mov    r9,QWORD PTR [r15+0x80]
  40abff:	push   r12
  40ac01:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac08:	lea    ebp,[r8+0x1]
  40ac0c:	push   r13
  40ac0e:	mov    ecx,r11d
  40ac11:	lea    rdx,[rip+0x26198]        # 430db0 <_IO_stdin_used@@Base+0x2db0>
  40ac18:	mov    esi,0x1
  40ac1d:	xor    eax,eax
  40ac1f:	call   405400 <__fprintf_chk@plt>
  40ac24:	pop    rcx
  40ac25:	pop    rsi
  40ac26:	mov    DWORD PTR [rsp+0x18],ebp
  40ac2a:	jmp    40a7a3 <__flatcc_fb_codegen_c@@Base+0x3253>
  40ac2f:	nop
  40ac30:	movzx  r11d,WORD PTR [r15+0x72]
  40ac35:	jmp    40a6f4 <__flatcc_fb_codegen_c@@Base+0x31a4>
  40ac3a:	nop    WORD PTR [rax+rax*1+0x0]
  40ac40:	mov    r8,QWORD PTR [rsp+0x10]
  40ac45:	mov    r9,rbp
  40ac48:	mov    ecx,r11d
  40ac4b:	lea    rdx,[rip+0x2c87d]        # 4374cf <_IO_stdin_used@@Base+0x94cf>
  40ac52:	mov    esi,0x1
  40ac57:	xor    eax,eax
  40ac59:	call   405400 <__fprintf_chk@plt>
  40ac5e:	jmp    40a783 <__flatcc_fb_codegen_c@@Base+0x3233>
  40ac63:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac68:	mov    ecx,DWORD PTR [rsp+0x2c]
  40ac6c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac73:	lea    ebp,[rcx+0x1]
  40ac76:	lea    rdx,[rip+0x2c808]        # 437485 <_IO_stdin_used@@Base+0x9485>
  40ac7d:	mov    esi,0x1
  40ac82:	xor    eax,eax
  40ac84:	mov    DWORD PTR [rsp+0x28],r11d
  40ac89:	call   405400 <__fprintf_chk@plt>
  40ac8e:	mov    DWORD PTR [rsp+0x2c],ebp
  40ac92:	mov    r11d,DWORD PTR [rsp+0x28]
  40ac97:	test   BYTE PTR [r15+0x70],0x4
  40ac9c:	je     40a715 <__flatcc_fb_codegen_c@@Base+0x31c5>
  40aca2:	mov    ecx,DWORD PTR [rsp+0x18]
  40aca6:	sub    rsp,0x8
  40acaa:	mov    r8,QWORD PTR [r15+0x80]
  40acb1:	lea    ebp,[rcx+0x1]
  40acb4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40acbb:	push   r12
  40acbd:	mov    r9d,r13d
  40acc0:	lea    rdx,[rip+0x260b1]        # 430d78 <_IO_stdin_used@@Base+0x2d78>
  40acc7:	jmp    40ac18 <__flatcc_fb_codegen_c@@Base+0x36c8>
  40accc:	nop    DWORD PTR [rax+0x0]
  40acd0:	mov    rcx,rbx
  40acd3:	lea    r8,[rip+0x2c613]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  40acda:	jmp    40a760 <__flatcc_fb_codegen_c@@Base+0x3210>
  40acdf:	nop
  40ace0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ace7:	xor    eax,eax
  40ace9:	lea    rdx,[rip+0x3bc6d]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40acf0:	mov    esi,0x1
  40acf5:	call   405400 <__fprintf_chk@plt>
  40acfa:	mov    rax,QWORD PTR [rsp+0x208]
  40ad02:	xor    rax,QWORD PTR fs:0x28
  40ad0b:	jne    40b341 <__flatcc_fb_codegen_c@@Base+0x3df1>
  40ad11:	add    rsp,0x218
  40ad18:	pop    rbx
  40ad19:	pop    rbp
  40ad1a:	pop    r12
  40ad1c:	pop    r13
  40ad1e:	pop    r14
  40ad20:	pop    r15
  40ad22:	ret    
  40ad23:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad28:	mov    rcx,rbx
  40ad2b:	lea    rax,[rip+0x2c5bb]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  40ad32:	lea    rdx,[rip+0x2c5bb]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  40ad39:	sub    rsp,0x8
  40ad3d:	push   rax
  40ad3e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ad45:	mov    r9d,r13d
  40ad48:	push   rcx
  40ad49:	mov    esi,0x1
  40ad4e:	mov    rcx,rbx
  40ad51:	push   rdx
  40ad52:	xor    eax,eax
  40ad54:	lea    rdx,[rip+0x25f6d]        # 430cc8 <_IO_stdin_used@@Base+0x2cc8>
  40ad5b:	push   rbx
  40ad5c:	push   r15
  40ad5e:	mov    r8,QWORD PTR [rsp+0x50]
  40ad63:	call   405400 <__fprintf_chk@plt>
  40ad68:	movzx  eax,WORD PTR [rbp+0x70]
  40ad6c:	add    rsp,0x30
  40ad70:	jmp    40a9a0 <__flatcc_fb_codegen_c@@Base+0x3450>
  40ad75:	nop    DWORD PTR [rax]
  40ad78:	mov    eax,DWORD PTR [rdx+0x48]
  40ad7b:	dec    eax
  40ad7d:	cmp    eax,0xa
  40ad80:	ja     40b384 <__flatcc_fb_codegen_c@@Base+0x3e34>
  40ad86:	sub    rsp,0x8
  40ad8a:	push   r14
  40ad8c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ad93:	mov    r9d,r13d
  40ad96:	push   r14
  40ad98:	mov    rcx,rbx
  40ad9b:	lea    rdx,[rip+0x25f5e]        # 430d00 <_IO_stdin_used@@Base+0x2d00>
  40ada2:	push   r15
  40ada4:	mov    esi,0x1
  40ada9:	xor    eax,eax
  40adab:	mov    r8,QWORD PTR [rsp+0x40]
  40adb0:	call   405400 <__fprintf_chk@plt>
  40adb5:	mov    rax,QWORD PTR [rbx+0xe0]
  40adbc:	add    rsp,0x20
  40adc0:	mov    r11d,DWORD PTR [rax+0x24]
  40adc4:	test   r11d,r11d
  40adc7:	jne    40ae00 <__flatcc_fb_codegen_c@@Base+0x38b0>
  40adc9:	test   BYTE PTR [rbp+0x70],0x80
  40adcd:	je     40a9d0 <__flatcc_fb_codegen_c@@Base+0x3480>
  40add3:	push   r14
  40add5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40addc:	mov    r9d,r13d
  40addf:	push   r15
  40ade1:	mov    rcx,rbx
  40ade4:	lea    rdx,[rip+0x25525]        # 430310 <_IO_stdin_used@@Base+0x2310>
  40adeb:	mov    r8,QWORD PTR [rsp+0x30]
  40adf0:	mov    esi,0x1
  40adf5:	xor    eax,eax
  40adf7:	call   405400 <__fprintf_chk@plt>
  40adfc:	pop    r9
  40adfe:	pop    r10
  40ae00:	test   BYTE PTR [rbp+0x70],0x80
  40ae04:	je     40a9d0 <__flatcc_fb_codegen_c@@Base+0x3480>
  40ae0a:	mov    r8d,DWORD PTR [rsp+0x8]
  40ae0f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae16:	test   r8d,r8d
  40ae19:	jne    40b184 <__flatcc_fb_codegen_c@@Base+0x3c34>
  40ae1f:	lea    rdx,[rip+0x2510a]        # 42ff30 <_IO_stdin_used@@Base+0x1f30>
  40ae26:	mov    esi,0x1
  40ae2b:	xor    eax,eax
  40ae2d:	call   405400 <__fprintf_chk@plt>
  40ae32:	push   r14
  40ae34:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae3b:	mov    r9d,r13d
  40ae3e:	push   r15
  40ae40:	mov    rcx,rbx
  40ae43:	lea    rdx,[rip+0x254fe]        # 430348 <_IO_stdin_used@@Base+0x2348>
  40ae4a:	mov    r8,QWORD PTR [rsp+0x30]
  40ae4f:	mov    esi,0x1
  40ae54:	xor    eax,eax
  40ae56:	call   405400 <__fprintf_chk@plt>
  40ae5b:	mov    rax,QWORD PTR [rbx+0xe0]
  40ae62:	pop    rdi
  40ae63:	mov    r9d,DWORD PTR [rax+0xa8]
  40ae6a:	pop    r8
  40ae6c:	test   r9d,r9d
  40ae6f:	je     40aea1 <__flatcc_fb_codegen_c@@Base+0x3951>
  40ae71:	push   rax
  40ae72:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae79:	mov    r9d,r13d
  40ae7c:	mov    r8,QWORD PTR [rsp+0x28]
  40ae81:	mov    rcx,rbx
  40ae84:	push   r8
  40ae86:	lea    rdx,[rip+0x25f63]        # 430df0 <_IO_stdin_used@@Base+0x2df0>
  40ae8d:	mov    esi,0x1
  40ae92:	push   r14
  40ae94:	xor    eax,eax
  40ae96:	push   r15
  40ae98:	call   405400 <__fprintf_chk@plt>
  40ae9d:	add    rsp,0x20
  40aea1:	push   r14
  40aea3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aeaa:	mov    r9d,r13d
  40aead:	push   r15
  40aeaf:	mov    rcx,rbx
  40aeb2:	lea    rdx,[rip+0x254c7]        # 430380 <_IO_stdin_used@@Base+0x2380>
  40aeb9:	mov    r12,QWORD PTR [rsp+0x30]
  40aebe:	mov    esi,0x1
  40aec3:	mov    r8,r12
  40aec6:	xor    eax,eax
  40aec8:	call   405400 <__fprintf_chk@plt>
  40aecd:	push   r14
  40aecf:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aed6:	mov    r9d,r13d
  40aed9:	push   r15
  40aedb:	mov    r8,r12
  40aede:	mov    rcx,rbx
  40aee1:	lea    rdx,[rip+0x254d8]        # 4303c0 <_IO_stdin_used@@Base+0x23c0>
  40aee8:	mov    esi,0x1
  40aeed:	xor    eax,eax
  40aeef:	call   405400 <__fprintf_chk@plt>
  40aef4:	mov    rax,QWORD PTR [rbx+0xe0]
  40aefb:	add    rsp,0x20
  40aeff:	mov    eax,DWORD PTR [rax+0xa8]
  40af05:	test   eax,eax
  40af07:	je     40b1f1 <__flatcc_fb_codegen_c@@Base+0x3ca1>
  40af0d:	sub    rsp,0x8
  40af11:	push   r15
  40af13:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af1a:	mov    r9d,r13d
  40af1d:	mov    rcx,QWORD PTR [rsp+0x30]
  40af22:	lea    rdx,[rip+0x250ff]        # 430028 <_IO_stdin_used@@Base+0x2028>
  40af29:	mov    r8,rcx
  40af2c:	mov    esi,0x1
  40af31:	xor    eax,eax
  40af33:	call   405400 <__fprintf_chk@plt>
  40af38:	pop    r12
  40af3a:	pop    r13
  40af3c:	jmp    40b1f1 <__flatcc_fb_codegen_c@@Base+0x3ca1>
  40af41:	nop    DWORD PTR [rax+0x0]
  40af48:	push   r14
  40af4a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af51:	mov    r9d,r13d
  40af54:	push   r15
  40af56:	mov    rcx,rbx
  40af59:	lea    rdx,[rip+0x25de0]        # 430d40 <_IO_stdin_used@@Base+0x2d40>
  40af60:	mov    r8,QWORD PTR [rsp+0x30]
  40af65:	mov    esi,0x1
  40af6a:	xor    eax,eax
  40af6c:	call   405400 <__fprintf_chk@plt>
  40af71:	pop    r10
  40af73:	movzx  eax,WORD PTR [rbp+0x70]
  40af77:	pop    r11
  40af79:	jmp    40a9a0 <__flatcc_fb_codegen_c@@Base+0x3450>
  40af7e:	xchg   ax,ax
  40af80:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af87:	lea    rdx,[rip+0x2d427]        # 4383b5 <_IO_stdin_used@@Base+0xa3b5>
  40af8e:	mov    esi,0x1
  40af93:	xor    eax,eax
  40af95:	call   405400 <__fprintf_chk@plt>
  40af9a:	jmp    40a816 <__flatcc_fb_codegen_c@@Base+0x32c6>
  40af9f:	nop
  40afa0:	mov    r14,QWORD PTR [rsp+0x20]
  40afa5:	lea    rdx,[rip+0x259d4]        # 430980 <_IO_stdin_used@@Base+0x2980>
  40afac:	mov    rcx,r14
  40afaf:	mov    esi,0x1
  40afb4:	xor    eax,eax
  40afb6:	call   405400 <__fprintf_chk@plt>
  40afbb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40afc2:	mov    r9,r14
  40afc5:	mov    r8,r14
  40afc8:	mov    rcx,r14
  40afcb:	lea    rdx,[rip+0x25a16]        # 4309e8 <_IO_stdin_used@@Base+0x29e8>
  40afd2:	mov    esi,0x1
  40afd7:	xor    eax,eax
  40afd9:	call   405400 <__fprintf_chk@plt>
  40afde:	mov    rdi,QWORD PTR [rbx+0xd0]
  40afe5:	mov    r9,r14
  40afe8:	mov    r8,r14
  40afeb:	mov    rcx,r14
  40afee:	lea    rdx,[rip+0x25a4b]        # 430a40 <_IO_stdin_used@@Base+0x2a40>
  40aff5:	mov    esi,0x1
  40affa:	xor    eax,eax
  40affc:	call   405400 <__fprintf_chk@plt>
  40b001:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b008:	mov    r9,r14
  40b00b:	mov    rcx,r14
  40b00e:	mov    r8,r14
  40b011:	lea    rdx,[rip+0x25a70]        # 430a88 <_IO_stdin_used@@Base+0x2a88>
  40b018:	mov    esi,0x1
  40b01d:	xor    eax,eax
  40b01f:	call   405400 <__fprintf_chk@plt>
  40b024:	jmp    40a8b5 <__flatcc_fb_codegen_c@@Base+0x3365>
  40b029:	nop    DWORD PTR [rax+0x0]
  40b030:	lea    rdx,[rip+0x2c430]        # 437467 <_IO_stdin_used@@Base+0x9467>
  40b037:	mov    esi,0x1
  40b03c:	xor    eax,eax
  40b03e:	call   405400 <__fprintf_chk@plt>
  40b043:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b04a:	mov    rcx,QWORD PTR [rsp+0x20]
  40b04f:	lea    rdx,[rip+0x2c422]        # 437478 <_IO_stdin_used@@Base+0x9478>
  40b056:	mov    esi,0x1
  40b05b:	xor    eax,eax
  40b05d:	call   405400 <__fprintf_chk@plt>
  40b062:	mov    rax,QWORD PTR [rsp+0x8]
  40b067:	mov    r15,QWORD PTR [rax+0x28]
  40b06b:	test   r15,r15
  40b06e:	jne    40a615 <__flatcc_fb_codegen_c@@Base+0x30c5>
  40b074:	xor    ebp,ebp
  40b076:	mov    DWORD PTR [rsp+0x2c],0x0
  40b07e:	jmp    40a7c3 <__flatcc_fb_codegen_c@@Base+0x3273>
  40b083:	nop    DWORD PTR [rax+rax*1+0x0]
  40b088:	lea    rax,[rip+0x2c278]        # 437307 <_IO_stdin_used@@Base+0x9307>
  40b08f:	lea    rcx,[rip+0x3b8c8]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40b096:	mov    rdx,rax
  40b099:	jmp    40ad39 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40b09e:	lea    rax,[rip+0x2c238]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  40b0a5:	lea    rcx,[rip+0x3b8b2]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40b0ac:	lea    rdx,[rip+0x2c233]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  40b0b3:	jmp    40ad39 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40b0b8:	lea    rax,[rip+0x2c1f8]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  40b0bf:	lea    rcx,[rip+0x3b898]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40b0c6:	lea    rdx,[rip+0x2c1f3]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  40b0cd:	jmp    40ad39 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40b0d2:	lea    rax,[rip+0x2c1df]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  40b0d9:	lea    rcx,[rip+0x3b87e]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40b0e0:	lea    rdx,[rip+0x2c1da]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  40b0e7:	jmp    40ad39 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40b0ec:	lea    rax,[rip+0x2c1d4]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  40b0f3:	lea    rcx,[rip+0x3b864]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40b0fa:	mov    rdx,rax
  40b0fd:	jmp    40ad39 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40b102:	lea    rax,[rip+0x2c1f0]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  40b109:	lea    rcx,[rip+0x3b84e]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40b110:	lea    rdx,[rip+0x2c1ea]        # 437301 <_IO_stdin_used@@Base+0x9301>
  40b117:	jmp    40ad39 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40b11c:	lea    rax,[rip+0x2c1aa]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  40b123:	lea    rcx,[rip+0x3b834]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40b12a:	lea    rdx,[rip+0x2c1a5]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  40b131:	jmp    40ad39 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40b136:	lea    rax,[rip+0x2c191]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  40b13d:	lea    rcx,[rip+0x3b81a]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40b144:	lea    rdx,[rip+0x2c18c]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  40b14b:	jmp    40ad39 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40b150:	lea    rax,[rip+0x2c187]        # 4372de <_IO_stdin_used@@Base+0x92de>
  40b157:	lea    rcx,[rip+0x3b800]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40b15e:	lea    rdx,[rip+0x2c182]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  40b165:	jmp    40ad39 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40b16a:	lea    rax,[rip+0x2c189]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  40b171:	lea    rcx,[rip+0x3b7e6]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40b178:	lea    rdx,[rip+0x2c183]        # 437302 <_IO_stdin_used@@Base+0x9302>
  40b17f:	jmp    40ad39 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40b184:	lea    rdx,[rip+0x24d5d]        # 42fee8 <_IO_stdin_used@@Base+0x1ee8>
  40b18b:	mov    esi,0x1
  40b190:	xor    eax,eax
  40b192:	call   405400 <__fprintf_chk@plt>
  40b197:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b19e:	lea    rdx,[rip+0x24d8b]        # 42ff30 <_IO_stdin_used@@Base+0x1f30>
  40b1a5:	mov    esi,0x1
  40b1aa:	xor    eax,eax
  40b1ac:	call   405400 <__fprintf_chk@plt>
  40b1b1:	push   r14
  40b1b3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b1ba:	mov    rcx,rbx
  40b1bd:	push   r15
  40b1bf:	lea    rdx,[rip+0x25182]        # 430348 <_IO_stdin_used@@Base+0x2348>
  40b1c6:	mov    esi,0x1
  40b1cb:	mov    r8,QWORD PTR [rsp+0x30]
  40b1d0:	mov    r9d,r13d
  40b1d3:	xor    eax,eax
  40b1d5:	call   405400 <__fprintf_chk@plt>
  40b1da:	mov    rax,QWORD PTR [rbx+0xe0]
  40b1e1:	pop    rdx
  40b1e2:	mov    esi,DWORD PTR [rax+0xa8]
  40b1e8:	pop    rcx
  40b1e9:	test   esi,esi
  40b1eb:	jne    40b307 <__flatcc_fb_codegen_c@@Base+0x3db7>
  40b1f1:	mov    DWORD PTR [rsp+0x8],0x1
  40b1f9:	mov    r12d,0x1
  40b1ff:	jmp    40a9d0 <__flatcc_fb_codegen_c@@Base+0x3480>
  40b204:	mov    ecx,DWORD PTR [rsp+0x2c]
  40b208:	lea    rdx,[rip+0x2c276]        # 437485 <_IO_stdin_used@@Base+0x9485>
  40b20f:	mov    esi,0x1
  40b214:	xor    eax,eax
  40b216:	call   405400 <__fprintf_chk@plt>
  40b21b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b222:	jmp    40a7e9 <__flatcc_fb_codegen_c@@Base+0x3299>
  40b227:	mov    rax,QWORD PTR [rip+0x46dba]        # 451fe8 <stderr@GLIBC_2.2.5>
  40b22e:	lea    rcx,[rip+0x248b3]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40b235:	mov    rdi,QWORD PTR [rax]
  40b238:	lea    rdx,[rip+0x2c054]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40b23f:	mov    esi,0x1
  40b244:	lea    r9,[rip+0x24865]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  40b24b:	mov    r8d,0x8d
  40b251:	xor    eax,eax
  40b253:	call   405400 <__fprintf_chk@plt>
  40b258:	lea    rcx,[rip+0x2c651]        # 4378b0 <_IO_stdin_used@@Base+0x98b0>
  40b25f:	mov    edx,0x8d
  40b264:	lea    rsi,[rip+0x2487d]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40b26b:	lea    rdi,[rip+0x2d0e7]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40b272:	call   405300 <__assert_fail@plt>
  40b277:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b27e:	lea    rcx,[rip+0x258b3]        # 430b38 <_IO_stdin_used@@Base+0x2b38>
  40b285:	lea    rdx,[rip+0x2c25b]        # 4374e7 <_IO_stdin_used@@Base+0x94e7>
  40b28c:	mov    esi,0x1
  40b291:	xor    eax,eax
  40b293:	call   405400 <__fprintf_chk@plt>
  40b298:	mov    rax,QWORD PTR [rip+0x46d49]        # 451fe8 <stderr@GLIBC_2.2.5>
  40b29f:	lea    rcx,[rip+0x248aa]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  40b2a6:	mov    rdi,QWORD PTR [rax]
  40b2a9:	lea    rdx,[rip+0x2bfe3]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40b2b0:	mov    esi,0x1
  40b2b5:	lea    r9,[rip+0x247f4]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  40b2bc:	mov    r8d,0x405
  40b2c2:	xor    eax,eax
  40b2c4:	call   405400 <__fprintf_chk@plt>
  40b2c9:	lea    rcx,[rip+0x2c5f8]        # 4378c8 <_IO_stdin_used@@Base+0x98c8>
  40b2d0:	mov    edx,0x405
  40b2d5:	lea    rsi,[rip+0x24874]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  40b2dc:	lea    rdi,[rip+0x2d076]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40b2e3:	call   405300 <__assert_fail@plt>
  40b2e8:	lea    rcx,[rip+0x2c5d9]        # 4378c8 <_IO_stdin_used@@Base+0x98c8>
  40b2ef:	mov    edx,0x3fa
  40b2f4:	lea    rsi,[rip+0x24855]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  40b2fb:	lea    rdi,[rip+0x257d6]        # 430ad8 <_IO_stdin_used@@Base+0x2ad8>
  40b302:	call   405300 <__assert_fail@plt>
  40b307:	push   rdx
  40b308:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b30f:	mov    r9d,r13d
  40b312:	mov    r8,QWORD PTR [rsp+0x28]
  40b317:	mov    rcx,rbx
  40b31a:	push   r8
  40b31c:	lea    rdx,[rip+0x25acd]        # 430df0 <_IO_stdin_used@@Base+0x2df0>
  40b323:	mov    esi,0x1
  40b328:	push   r14
  40b32a:	xor    eax,eax
  40b32c:	push   r15
  40b32e:	call   405400 <__fprintf_chk@plt>
  40b333:	add    rsp,0x20
  40b337:	mov    r12d,DWORD PTR [rsp+0x8]
  40b33c:	jmp    40a9d0 <__flatcc_fb_codegen_c@@Base+0x3480>
  40b341:	call   4052d0 <__stack_chk_fail@plt>
  40b346:	lea    rcx,[rip+0x2c57b]        # 4378c8 <_IO_stdin_used@@Base+0x98c8>
  40b34d:	mov    edx,0x3aa
  40b352:	lea    rsi,[rip+0x247f7]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  40b359:	lea    rdi,[rip+0x25600]        # 430960 <_IO_stdin_used@@Base+0x2960>
  40b360:	call   405300 <__assert_fail@plt>
  40b365:	lea    rcx,[rip+0x2c55c]        # 4378c8 <_IO_stdin_used@@Base+0x98c8>
  40b36c:	mov    edx,0x3a8
  40b371:	lea    rsi,[rip+0x247d8]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  40b378:	lea    rdi,[rip+0x255a1]        # 430920 <_IO_stdin_used@@Base+0x2920>
  40b37f:	call   405300 <__assert_fail@plt>
  40b384:	call   4077f0 <__flatcc_fb_codegen_c@@Base+0x2a0>
  40b389:	call   407790 <__flatcc_fb_codegen_c@@Base+0x240>
  40b38e:	xchg   ax,ax

000000000040b390 <__flatcc_fb_gen_common_c_header@@Base>:
  40b390:	endbr64 
  40b394:	push   rbp
  40b395:	lea    rbp,[rdi+0x66]
  40b399:	mov    r8,rbp
  40b39c:	push   rbx
  40b39d:	mov    rbx,rdi
  40b3a0:	mov    rcx,rbp
  40b3a3:	sub    rsp,0x8
  40b3a7:	mov    rdi,QWORD PTR [rdi+0xd0]
  40b3ae:	lea    rdx,[rip+0x25a7b]        # 430e30 <_IO_stdin_used@@Base+0x2e30>
  40b3b5:	mov    esi,0x1
  40b3ba:	xor    eax,eax
  40b3bc:	call   405400 <__fprintf_chk@plt>
  40b3c1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b3c8:	lea    rdx,[rip+0x25a99]        # 430e68 <_IO_stdin_used@@Base+0x2e68>
  40b3cf:	mov    esi,0x1
  40b3d4:	xor    eax,eax
  40b3d6:	call   405400 <__fprintf_chk@plt>
  40b3db:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b3e2:	lea    rdx,[rip+0x25ad7]        # 430ec0 <_IO_stdin_used@@Base+0x2ec0>
  40b3e9:	mov    esi,0x1
  40b3ee:	xor    eax,eax
  40b3f0:	call   405400 <__fprintf_chk@plt>
  40b3f5:	mov    rax,QWORD PTR [rbx+0xe0]
  40b3fc:	mov    r9d,DWORD PTR [rax+0xa8]
  40b403:	test   r9d,r9d
  40b406:	je     40c0b0 <__flatcc_fb_gen_common_c_header@@Base+0xd20>
  40b40c:	mov    r8d,DWORD PTR [rax+0xac]
  40b413:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b41a:	test   r8d,r8d
  40b41d:	jne    40c090 <__flatcc_fb_gen_common_c_header@@Base+0xd00>
  40b423:	mov    esi,0x1
  40b428:	xor    eax,eax
  40b42a:	lea    rdx,[rip+0x25b77]        # 430fa8 <_IO_stdin_used@@Base+0x2fa8>
  40b431:	call   405400 <__fprintf_chk@plt>
  40b436:	mov    ecx,0xd
  40b43b:	lea    rdi,[rip+0x2c0dc]        # 43751e <_IO_stdin_used@@Base+0x951e>
  40b442:	mov    rsi,rbx
  40b445:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b447:	seta   al
  40b44a:	sbb    al,0x0
  40b44c:	test   al,al
  40b44e:	jne    40bfe8 <__flatcc_fb_gen_common_c_header@@Base+0xc58>
  40b454:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b45b:	mov    r8,rbx
  40b45e:	mov    rcx,rbx
  40b461:	lea    rdx,[rip+0x26050]        # 4314b8 <_IO_stdin_used@@Base+0x34b8>
  40b468:	mov    esi,0x1
  40b46d:	xor    eax,eax
  40b46f:	call   405400 <__fprintf_chk@plt>
  40b474:	push   rbx
  40b475:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b47c:	mov    r9,rbx
  40b47f:	push   rbx
  40b480:	mov    r8,rbx
  40b483:	mov    rcx,rbx
  40b486:	push   rbx
  40b487:	lea    rdx,[rip+0x260ba]        # 431548 <_IO_stdin_used@@Base+0x3548>
  40b48e:	mov    esi,0x1
  40b493:	push   rbx
  40b494:	xor    eax,eax
  40b496:	call   405400 <__fprintf_chk@plt>
  40b49b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4a2:	add    rsp,0x20
  40b4a6:	mov    r8,rbx
  40b4a9:	mov    rcx,rbx
  40b4ac:	lea    rdx,[rip+0x2620d]        # 4316c0 <_IO_stdin_used@@Base+0x36c0>
  40b4b3:	mov    esi,0x1
  40b4b8:	xor    eax,eax
  40b4ba:	call   405400 <__fprintf_chk@plt>
  40b4bf:	sub    rsp,0x8
  40b4c3:	push   rbx
  40b4c4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4cb:	mov    rcx,rbx
  40b4ce:	lea    rdx,[rip+0x26243]        # 431718 <_IO_stdin_used@@Base+0x3718>
  40b4d5:	mov    esi,0x1
  40b4da:	xor    eax,eax
  40b4dc:	mov    r9,rbx
  40b4df:	mov    r8,rbx
  40b4e2:	call   405400 <__fprintf_chk@plt>
  40b4e7:	mov    rax,QWORD PTR [rbx+0xe0]
  40b4ee:	pop    rdx
  40b4ef:	mov    esi,DWORD PTR [rax+0x24]
  40b4f2:	pop    rcx
  40b4f3:	test   esi,esi
  40b4f5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4fc:	je     40bf80 <__flatcc_fb_gen_common_c_header@@Base+0xbf0>
  40b502:	mov    rcx,rbx
  40b505:	lea    rdx,[rip+0x26334]        # 431840 <_IO_stdin_used@@Base+0x3840>
  40b50c:	mov    esi,0x1
  40b511:	xor    eax,eax
  40b513:	call   405400 <__fprintf_chk@plt>
  40b518:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b51f:	mov    r8,rbx
  40b522:	mov    rcx,rbx
  40b525:	lea    rdx,[rip+0x26344]        # 431870 <_IO_stdin_used@@Base+0x3870>
  40b52c:	mov    esi,0x1
  40b531:	xor    eax,eax
  40b533:	call   405400 <__fprintf_chk@plt>
  40b538:	push   rbx
  40b539:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b540:	mov    r9,rbx
  40b543:	push   rbx
  40b544:	mov    r8,rbx
  40b547:	mov    rcx,rbx
  40b54a:	lea    rdx,[rip+0x263f7]        # 431948 <_IO_stdin_used@@Base+0x3948>
  40b551:	mov    esi,0x1
  40b556:	xor    eax,eax
  40b558:	call   405400 <__fprintf_chk@plt>
  40b55d:	push   rbx
  40b55e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b565:	mov    r9,rbx
  40b568:	push   rbx
  40b569:	mov    r8,rbx
  40b56c:	mov    rcx,rbx
  40b56f:	lea    rdx,[rip+0x26582]        # 431af8 <_IO_stdin_used@@Base+0x3af8>
  40b576:	mov    esi,0x1
  40b57b:	xor    eax,eax
  40b57d:	call   405400 <__fprintf_chk@plt>
  40b582:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b589:	add    rsp,0x20
  40b58d:	mov    r9,rbx
  40b590:	mov    r8,rbx
  40b593:	mov    rcx,rbx
  40b596:	lea    rdx,[rip+0x265fb]        # 431b98 <_IO_stdin_used@@Base+0x3b98>
  40b59d:	mov    esi,0x1
  40b5a2:	xor    eax,eax
  40b5a4:	call   405400 <__fprintf_chk@plt>
  40b5a9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5b0:	mov    r9,rbx
  40b5b3:	mov    r8,rbx
  40b5b6:	mov    rcx,rbx
  40b5b9:	lea    rdx,[rip+0x266b8]        # 431c78 <_IO_stdin_used@@Base+0x3c78>
  40b5c0:	mov    esi,0x1
  40b5c5:	xor    eax,eax
  40b5c7:	call   405400 <__fprintf_chk@plt>
  40b5cc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5d3:	mov    r9,rbx
  40b5d6:	mov    r8,rbx
  40b5d9:	mov    rcx,rbx
  40b5dc:	lea    rdx,[rip+0x26775]        # 431d58 <_IO_stdin_used@@Base+0x3d58>
  40b5e3:	mov    esi,0x1
  40b5e8:	xor    eax,eax
  40b5ea:	call   405400 <__fprintf_chk@plt>
  40b5ef:	push   rbx
  40b5f0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5f7:	xor    eax,eax
  40b5f9:	push   rbx
  40b5fa:	mov    r9,rbx
  40b5fd:	mov    r8,rbx
  40b600:	mov    rcx,rbx
  40b603:	lea    rdx,[rip+0x26826]        # 431e30 <_IO_stdin_used@@Base+0x3e30>
  40b60a:	mov    esi,0x1
  40b60f:	call   405400 <__fprintf_chk@plt>
  40b614:	mov    rax,QWORD PTR [rbx+0xe0]
  40b61b:	pop    r10
  40b61d:	mov    eax,DWORD PTR [rax+0x24]
  40b620:	pop    r11
  40b622:	test   eax,eax
  40b624:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b62b:	je     40bf20 <__flatcc_fb_gen_common_c_header@@Base+0xb90>
  40b631:	mov    rcx,rbx
  40b634:	lea    rdx,[rip+0x268dd]        # 431f18 <_IO_stdin_used@@Base+0x3f18>
  40b63b:	mov    esi,0x1
  40b640:	xor    eax,eax
  40b642:	call   405400 <__fprintf_chk@plt>
  40b647:	sub    rsp,0x8
  40b64b:	push   rbx
  40b64c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b653:	mov    r9,rbx
  40b656:	mov    r8,rbx
  40b659:	mov    rcx,rbx
  40b65c:	lea    rdx,[rip+0x268e5]        # 431f48 <_IO_stdin_used@@Base+0x3f48>
  40b663:	mov    esi,0x1
  40b668:	xor    eax,eax
  40b66a:	call   405400 <__fprintf_chk@plt>
  40b66f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b676:	mov    r8,rbx
  40b679:	mov    rcx,rbx
  40b67c:	lea    rdx,[rip+0x26965]        # 431fe8 <_IO_stdin_used@@Base+0x3fe8>
  40b683:	mov    esi,0x1
  40b688:	xor    eax,eax
  40b68a:	call   405400 <__fprintf_chk@plt>
  40b68f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b696:	mov    r9,rbx
  40b699:	mov    r8,rbx
  40b69c:	mov    rcx,rbx
  40b69f:	lea    rdx,[rip+0x2698a]        # 432030 <_IO_stdin_used@@Base+0x4030>
  40b6a6:	mov    esi,0x1
  40b6ab:	xor    eax,eax
  40b6ad:	call   405400 <__fprintf_chk@plt>
  40b6b2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b6b9:	mov    r8,rbx
  40b6bc:	mov    rcx,rbx
  40b6bf:	lea    rdx,[rip+0x269fa]        # 4320c0 <_IO_stdin_used@@Base+0x40c0>
  40b6c6:	mov    esi,0x1
  40b6cb:	xor    eax,eax
  40b6cd:	call   405400 <__fprintf_chk@plt>
  40b6d2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b6d9:	mov    r9,rbx
  40b6dc:	mov    r8,rbx
  40b6df:	mov    rcx,rbx
  40b6e2:	lea    rdx,[rip+0x26a4f]        # 432138 <_IO_stdin_used@@Base+0x4138>
  40b6e9:	mov    esi,0x1
  40b6ee:	xor    eax,eax
  40b6f0:	mov    QWORD PTR [rsp],rbx
  40b6f4:	call   405400 <__fprintf_chk@plt>
  40b6f9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b700:	mov    r8,rbx
  40b703:	mov    rcx,rbx
  40b706:	lea    rdx,[rip+0x26b4b]        # 432258 <_IO_stdin_used@@Base+0x4258>
  40b70d:	mov    esi,0x1
  40b712:	xor    eax,eax
  40b714:	call   405400 <__fprintf_chk@plt>
  40b719:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b720:	mov    r8,rbx
  40b723:	mov    rcx,rbx
  40b726:	lea    rdx,[rip+0x26ba3]        # 4322d0 <_IO_stdin_used@@Base+0x42d0>
  40b72d:	mov    esi,0x1
  40b732:	xor    eax,eax
  40b734:	call   405400 <__fprintf_chk@plt>
  40b739:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b740:	mov    r9,rbx
  40b743:	mov    r8,rbx
  40b746:	mov    rcx,rbx
  40b749:	lea    rdx,[rip+0x26c00]        # 432350 <_IO_stdin_used@@Base+0x4350>
  40b750:	mov    esi,0x1
  40b755:	xor    eax,eax
  40b757:	mov    QWORD PTR [rsp],rbx
  40b75b:	call   405400 <__fprintf_chk@plt>
  40b760:	mov    QWORD PTR [rsp],rbx
  40b764:	push   rbx
  40b765:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b76c:	mov    r9,rbx
  40b76f:	push   rbx
  40b770:	mov    r8,rbx
  40b773:	mov    rcx,rbx
  40b776:	push   rbx
  40b777:	lea    rdx,[rip+0x26c3a]        # 4323b8 <_IO_stdin_used@@Base+0x43b8>
  40b77e:	mov    esi,0x1
  40b783:	push   rbx
  40b784:	xor    eax,eax
  40b786:	push   rbx
  40b787:	push   rbx
  40b788:	push   rbx
  40b789:	push   rbx
  40b78a:	call   405400 <__fprintf_chk@plt>
  40b78f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b796:	add    rsp,0x50
  40b79a:	mov    rcx,rbx
  40b79d:	lea    rdx,[rip+0x26d3c]        # 4324e0 <_IO_stdin_used@@Base+0x44e0>
  40b7a4:	mov    esi,0x1
  40b7a9:	xor    eax,eax
  40b7ab:	call   405400 <__fprintf_chk@plt>
  40b7b0:	sub    rsp,0x8
  40b7b4:	push   rbx
  40b7b5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b7bc:	mov    r9,rbx
  40b7bf:	mov    r8,rbx
  40b7c2:	mov    rcx,rbx
  40b7c5:	lea    rdx,[rip+0x26d3c]        # 432508 <_IO_stdin_used@@Base+0x4508>
  40b7cc:	mov    esi,0x1
  40b7d1:	xor    eax,eax
  40b7d3:	call   405400 <__fprintf_chk@plt>
  40b7d8:	push   rbx
  40b7d9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b7e0:	mov    r9,rbx
  40b7e3:	push   rbx
  40b7e4:	mov    r8,rbx
  40b7e7:	mov    rcx,rbx
  40b7ea:	push   rbx
  40b7eb:	lea    rdx,[rip+0x26d9e]        # 432590 <_IO_stdin_used@@Base+0x4590>
  40b7f2:	mov    esi,0x1
  40b7f7:	push   rbx
  40b7f8:	xor    eax,eax
  40b7fa:	push   rbx
  40b7fb:	push   rbx
  40b7fc:	push   rbx
  40b7fd:	push   rbx
  40b7fe:	push   rbx
  40b7ff:	push   rbx
  40b800:	push   rbx
  40b801:	push   rbx
  40b802:	push   rbx
  40b803:	push   rbx
  40b804:	call   405400 <__fprintf_chk@plt>
  40b809:	add    rsp,0x78
  40b80d:	push   rbx
  40b80e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b815:	mov    r9,rbx
  40b818:	push   rbx
  40b819:	mov    r8,rbx
  40b81c:	mov    rcx,rbx
  40b81f:	push   rbx
  40b820:	lea    rdx,[rip+0x26f19]        # 432740 <_IO_stdin_used@@Base+0x4740>
  40b827:	mov    esi,0x1
  40b82c:	push   rbx
  40b82d:	xor    eax,eax
  40b82f:	push   rbx
  40b830:	call   405400 <__fprintf_chk@plt>
  40b835:	add    rsp,0x28
  40b839:	push   rbx
  40b83a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b841:	mov    r9,rbx
  40b844:	mov    r8,rbx
  40b847:	mov    rcx,rbx
  40b84a:	lea    rdx,[rip+0x26fb7]        # 432808 <_IO_stdin_used@@Base+0x4808>
  40b851:	mov    esi,0x1
  40b856:	xor    eax,eax
  40b858:	call   405400 <__fprintf_chk@plt>
  40b85d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b864:	mov    r9,rbx
  40b867:	mov    r8,rbx
  40b86a:	mov    rcx,rbx
  40b86d:	lea    rdx,[rip+0x27034]        # 4328a8 <_IO_stdin_used@@Base+0x48a8>
  40b874:	mov    esi,0x1
  40b879:	xor    eax,eax
  40b87b:	mov    QWORD PTR [rsp],rbx
  40b87f:	call   405400 <__fprintf_chk@plt>
  40b884:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b88b:	mov    rcx,rbx
  40b88e:	lea    rdx,[rip+0x2708b]        # 432920 <_IO_stdin_used@@Base+0x4920>
  40b895:	mov    esi,0x1
  40b89a:	xor    eax,eax
  40b89c:	call   405400 <__fprintf_chk@plt>
  40b8a1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b8a8:	mov    rcx,rbx
  40b8ab:	lea    rdx,[rip+0x27346]        # 432bf8 <_IO_stdin_used@@Base+0x4bf8>
  40b8b2:	mov    esi,0x1
  40b8b7:	xor    eax,eax
  40b8b9:	call   405400 <__fprintf_chk@plt>
  40b8be:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b8c5:	mov    rcx,rbx
  40b8c8:	lea    rdx,[rip+0x275c1]        # 432e90 <_IO_stdin_used@@Base+0x4e90>
  40b8cf:	mov    esi,0x1
  40b8d4:	xor    eax,eax
  40b8d6:	call   405400 <__fprintf_chk@plt>
  40b8db:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b8e2:	mov    rcx,rbx
  40b8e5:	lea    rdx,[rip+0x2762c]        # 432f18 <_IO_stdin_used@@Base+0x4f18>
  40b8ec:	mov    esi,0x1
  40b8f1:	xor    eax,eax
  40b8f3:	call   405400 <__fprintf_chk@plt>
  40b8f8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b8ff:	mov    rcx,rbx
  40b902:	lea    rdx,[rip+0x2767f]        # 432f88 <_IO_stdin_used@@Base+0x4f88>
  40b909:	mov    esi,0x1
  40b90e:	xor    eax,eax
  40b910:	call   405400 <__fprintf_chk@plt>
  40b915:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b91c:	mov    r9,rbx
  40b91f:	mov    r8,rbx
  40b922:	mov    rcx,rbx
  40b925:	lea    rdx,[rip+0x27844]        # 433170 <_IO_stdin_used@@Base+0x5170>
  40b92c:	mov    esi,0x1
  40b931:	xor    eax,eax
  40b933:	mov    QWORD PTR [rsp],rbx
  40b937:	call   405400 <__fprintf_chk@plt>
  40b93c:	mov    QWORD PTR [rsp],rbx
  40b940:	push   rbx
  40b941:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b948:	mov    r9,rbx
  40b94b:	push   rbx
  40b94c:	mov    r8,rbx
  40b94f:	mov    rcx,rbx
  40b952:	lea    rdx,[rip+0x278c7]        # 433220 <_IO_stdin_used@@Base+0x5220>
  40b959:	mov    esi,0x1
  40b95e:	xor    eax,eax
  40b960:	call   405400 <__fprintf_chk@plt>
  40b965:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b96c:	add    rsp,0x20
  40b970:	mov    r9,rbx
  40b973:	mov    r8,rbx
  40b976:	mov    rcx,rbx
  40b979:	lea    rdx,[rip+0x27a80]        # 433400 <_IO_stdin_used@@Base+0x5400>
  40b980:	mov    esi,0x1
  40b985:	xor    eax,eax
  40b987:	call   405400 <__fprintf_chk@plt>
  40b98c:	push   rbx
  40b98d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b994:	mov    r9,rbx
  40b997:	push   rbx
  40b998:	mov    r8,rbx
  40b99b:	mov    rcx,rbx
  40b99e:	push   rbx
  40b99f:	lea    rdx,[rip+0x27c7a]        # 433620 <_IO_stdin_used@@Base+0x5620>
  40b9a6:	mov    esi,0x1
  40b9ab:	push   rbx
  40b9ac:	xor    eax,eax
  40b9ae:	push   rbx
  40b9af:	push   rbx
  40b9b0:	push   rbx
  40b9b1:	push   rbx
  40b9b2:	call   405400 <__fprintf_chk@plt>
  40b9b7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b9be:	add    rsp,0x40
  40b9c2:	mov    r8,rbx
  40b9c5:	mov    rcx,rbx
  40b9c8:	lea    rdx,[rip+0x27da9]        # 433778 <_IO_stdin_used@@Base+0x5778>
  40b9cf:	mov    esi,0x1
  40b9d4:	xor    eax,eax
  40b9d6:	call   405400 <__fprintf_chk@plt>
  40b9db:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b9e2:	mov    r9,rbx
  40b9e5:	mov    r8,rbx
  40b9e8:	mov    rcx,rbx
  40b9eb:	lea    rdx,[rip+0x27e56]        # 433848 <_IO_stdin_used@@Base+0x5848>
  40b9f2:	mov    esi,0x1
  40b9f7:	xor    eax,eax
  40b9f9:	call   405400 <__fprintf_chk@plt>
  40b9fe:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba05:	mov    r9,rbx
  40ba08:	mov    r8,rbx
  40ba0b:	mov    rcx,rbx
  40ba0e:	lea    rdx,[rip+0x27eeb]        # 433900 <_IO_stdin_used@@Base+0x5900>
  40ba15:	mov    esi,0x1
  40ba1a:	xor    eax,eax
  40ba1c:	call   405400 <__fprintf_chk@plt>
  40ba21:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba28:	mov    rcx,rbx
  40ba2b:	lea    rdx,[rip+0x28086]        # 433ab8 <_IO_stdin_used@@Base+0x5ab8>
  40ba32:	mov    esi,0x1
  40ba37:	xor    eax,eax
  40ba39:	call   405400 <__fprintf_chk@plt>
  40ba3e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba45:	mov    rcx,rbx
  40ba48:	lea    rdx,[rip+0x28119]        # 433b68 <_IO_stdin_used@@Base+0x5b68>
  40ba4f:	mov    esi,0x1
  40ba54:	xor    eax,eax
  40ba56:	call   405400 <__fprintf_chk@plt>
  40ba5b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba62:	mov    r8,rbx
  40ba65:	mov    rcx,rbx
  40ba68:	lea    rdx,[rip+0x28229]        # 433c98 <_IO_stdin_used@@Base+0x5c98>
  40ba6f:	mov    esi,0x1
  40ba74:	xor    eax,eax
  40ba76:	call   405400 <__fprintf_chk@plt>
  40ba7b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba82:	mov    r8,rbx
  40ba85:	mov    rcx,rbx
  40ba88:	lea    rdx,[rip+0x28359]        # 433de8 <_IO_stdin_used@@Base+0x5de8>
  40ba8f:	mov    esi,0x1
  40ba94:	xor    eax,eax
  40ba96:	call   405400 <__fprintf_chk@plt>
  40ba9b:	push   rbx
  40ba9c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40baa3:	mov    r9,rbx
  40baa6:	push   rbx
  40baa7:	mov    r8,rbx
  40baaa:	mov    rcx,rbx
  40baad:	push   rbx
  40baae:	lea    rdx,[rip+0x2840b]        # 433ec0 <_IO_stdin_used@@Base+0x5ec0>
  40bab5:	mov    esi,0x1
  40baba:	push   rbx
  40babb:	xor    eax,eax
  40babd:	push   rbx
  40babe:	push   rbx
  40babf:	push   rbx
  40bac0:	push   rbx
  40bac1:	call   405400 <__fprintf_chk@plt>
  40bac6:	add    rsp,0x40
  40baca:	push   rbx
  40bacb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bad2:	mov    r9,rbx
  40bad5:	push   rbx
  40bad6:	mov    r8,rbx
  40bad9:	mov    rcx,rbx
  40badc:	push   rbx
  40badd:	lea    rdx,[rip+0x2855c]        # 434040 <_IO_stdin_used@@Base+0x6040>
  40bae4:	mov    esi,0x1
  40bae9:	push   rbx
  40baea:	xor    eax,eax
  40baec:	push   rbx
  40baed:	push   rbx
  40baee:	push   rbx
  40baef:	push   rbx
  40baf0:	call   405400 <__fprintf_chk@plt>
  40baf5:	add    rsp,0x40
  40baf9:	push   rbx
  40bafa:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb01:	mov    r9,rbx
  40bb04:	push   rbx
  40bb05:	mov    r8,rbx
  40bb08:	mov    rcx,rbx
  40bb0b:	push   rbx
  40bb0c:	lea    rdx,[rip+0x286b5]        # 4341c8 <_IO_stdin_used@@Base+0x61c8>
  40bb13:	mov    esi,0x1
  40bb18:	push   rbx
  40bb19:	xor    eax,eax
  40bb1b:	call   405400 <__fprintf_chk@plt>
  40bb20:	add    rsp,0x20
  40bb24:	push   rbx
  40bb25:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb2c:	mov    r9,rbx
  40bb2f:	push   rbx
  40bb30:	mov    r8,rbx
  40bb33:	mov    rcx,rbx
  40bb36:	push   rbx
  40bb37:	lea    rdx,[rip+0x289e2]        # 434520 <_IO_stdin_used@@Base+0x6520>
  40bb3e:	mov    esi,0x1
  40bb43:	push   rbx
  40bb44:	xor    eax,eax
  40bb46:	push   rbx
  40bb47:	push   rbx
  40bb48:	push   rbx
  40bb49:	push   rbx
  40bb4a:	call   405400 <__fprintf_chk@plt>
  40bb4f:	add    rsp,0x40
  40bb53:	push   rbx
  40bb54:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb5b:	mov    r9,rbx
  40bb5e:	push   rbx
  40bb5f:	mov    r8,rbx
  40bb62:	mov    rcx,rbx
  40bb65:	push   rbx
  40bb66:	lea    rdx,[rip+0x28cd3]        # 434840 <_IO_stdin_used@@Base+0x6840>
  40bb6d:	mov    esi,0x1
  40bb72:	push   rbx
  40bb73:	xor    eax,eax
  40bb75:	push   rbx
  40bb76:	push   rbx
  40bb77:	push   rbx
  40bb78:	push   rbx
  40bb79:	push   rbx
  40bb7a:	push   rbx
  40bb7b:	call   405400 <__fprintf_chk@plt>
  40bb80:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb87:	add    rsp,0x50
  40bb8b:	mov    rcx,rbx
  40bb8e:	lea    rdx,[rip+0x2937b]        # 434f10 <_IO_stdin_used@@Base+0x6f10>
  40bb95:	mov    esi,0x1
  40bb9a:	xor    eax,eax
  40bb9c:	call   405400 <__fprintf_chk@plt>
  40bba1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bba8:	mov    rcx,rbx
  40bbab:	lea    rdx,[rip+0x295ae]        # 435160 <_IO_stdin_used@@Base+0x7160>
  40bbb2:	mov    esi,0x1
  40bbb7:	xor    eax,eax
  40bbb9:	call   405400 <__fprintf_chk@plt>
  40bbbe:	mov    rax,QWORD PTR [rbx+0xe0]
  40bbc5:	mov    r9d,DWORD PTR [rax+0xa8]
  40bbcc:	test   r9d,r9d
  40bbcf:	je     40bf40 <__flatcc_fb_gen_common_c_header@@Base+0xbb0>
  40bbd5:	mov    rdi,rbx
  40bbd8:	call   40c700 <__flatcc_gen_sort@@Base>
  40bbdd:	push   rbx
  40bbde:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bbe5:	mov    r8,rbx
  40bbe8:	push   rbx
  40bbe9:	mov    esi,0x1
  40bbee:	xor    eax,eax
  40bbf0:	mov    r9,rbx
  40bbf3:	mov    rcx,rbx
  40bbf6:	lea    rdx,[rip+0x29a2b]        # 435628 <_IO_stdin_used@@Base+0x7628>
  40bbfd:	call   405400 <__fprintf_chk@plt>
  40bc02:	mov    rax,QWORD PTR [rbx+0xe0]
  40bc09:	pop    rsi
  40bc0a:	mov    r8d,DWORD PTR [rax+0xa8]
  40bc11:	pop    rdi
  40bc12:	test   r8d,r8d
  40bc15:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc1c:	je     40bf60 <__flatcc_fb_gen_common_c_header@@Base+0xbd0>
  40bc22:	mov    rcx,rbx
  40bc25:	lea    rdx,[rip+0x29ae4]        # 435710 <_IO_stdin_used@@Base+0x7710>
  40bc2c:	mov    esi,0x1
  40bc31:	xor    eax,eax
  40bc33:	call   405400 <__fprintf_chk@plt>
  40bc38:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc3f:	lea    rdx,[rip+0x3ad17]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40bc46:	mov    esi,0x1
  40bc4b:	xor    eax,eax
  40bc4d:	call   405400 <__fprintf_chk@plt>
  40bc52:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc59:	mov    r9,rbx
  40bc5c:	mov    r8,rbx
  40bc5f:	mov    rcx,rbx
  40bc62:	lea    rdx,[rip+0x29ac7]        # 435730 <_IO_stdin_used@@Base+0x7730>
  40bc69:	mov    esi,0x1
  40bc6e:	xor    eax,eax
  40bc70:	call   405400 <__fprintf_chk@plt>
  40bc75:	sub    rsp,0x8
  40bc79:	push   rbx
  40bc7a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc81:	mov    r9,rbx
  40bc84:	push   rbx
  40bc85:	mov    r8,rbx
  40bc88:	mov    rcx,rbx
  40bc8b:	push   rbx
  40bc8c:	lea    rdx,[rip+0x29b1d]        # 4357b0 <_IO_stdin_used@@Base+0x77b0>
  40bc93:	mov    esi,0x1
  40bc98:	push   rbx
  40bc99:	xor    eax,eax
  40bc9b:	push   rbx
  40bc9c:	push   rbx
  40bc9d:	push   rbx
  40bc9e:	push   rbx
  40bc9f:	push   rbx
  40bca0:	push   rbx
  40bca1:	push   rbx
  40bca2:	push   rbx
  40bca3:	push   rbx
  40bca4:	push   rbx
  40bca5:	push   rbx
  40bca6:	push   rbx
  40bca7:	push   rbx
  40bca8:	push   rbx
  40bca9:	push   rbx
  40bcaa:	push   rbx
  40bcab:	push   rbx
  40bcac:	push   rbx
  40bcad:	push   rbx
  40bcae:	call   405400 <__fprintf_chk@plt>
  40bcb3:	add    rsp,0xb8
  40bcba:	push   rbx
  40bcbb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bcc2:	mov    r9,rbx
  40bcc5:	push   rbx
  40bcc6:	mov    r8,rbx
  40bcc9:	mov    rcx,rbx
  40bccc:	push   rbx
  40bccd:	lea    rdx,[rip+0x29cf4]        # 4359c8 <_IO_stdin_used@@Base+0x79c8>
  40bcd4:	mov    esi,0x1
  40bcd9:	push   rbx
  40bcda:	xor    eax,eax
  40bcdc:	push   rbx
  40bcdd:	push   rbx
  40bcde:	push   rbx
  40bcdf:	push   rbx
  40bce0:	push   rbx
  40bce1:	call   405400 <__fprintf_chk@plt>
  40bce6:	add    rsp,0x48
  40bcea:	push   rbx
  40bceb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bcf2:	mov    rcx,rbx
  40bcf5:	push   rbx
  40bcf6:	mov    r9,rbx
  40bcf9:	mov    r8,rbx
  40bcfc:	push   rbx
  40bcfd:	lea    rdx,[rip+0x29e14]        # 435b18 <_IO_stdin_used@@Base+0x7b18>
  40bd04:	mov    esi,0x1
  40bd09:	push   rbx
  40bd0a:	xor    eax,eax
  40bd0c:	push   rbx
  40bd0d:	push   rbx
  40bd0e:	push   rbx
  40bd0f:	push   rbx
  40bd10:	push   rbx
  40bd11:	push   rbx
  40bd12:	push   rbx
  40bd13:	push   rbx
  40bd14:	push   rbx
  40bd15:	push   rbx
  40bd16:	push   rbx
  40bd17:	push   rbx
  40bd18:	push   rbx
  40bd19:	push   rbx
  40bd1a:	push   rbx
  40bd1b:	push   rbx
  40bd1c:	push   rbx
  40bd1d:	push   rbx
  40bd1e:	push   rbx
  40bd1f:	push   rbx
  40bd20:	push   rbx
  40bd21:	push   rbx
  40bd22:	push   rbx
  40bd23:	push   rbx
  40bd24:	push   rbx
  40bd25:	push   rbx
  40bd26:	push   rbx
  40bd27:	push   rbx
  40bd28:	push   rbx
  40bd29:	push   rbx
  40bd2a:	push   rbx
  40bd2b:	push   rbx
  40bd2c:	push   rbx
  40bd2d:	push   rbx
  40bd2e:	push   rbx
  40bd2f:	push   rbx
  40bd30:	push   rbx
  40bd31:	push   rbx
  40bd32:	push   rbx
  40bd33:	push   rbx
  40bd34:	push   rbx
  40bd35:	push   rbx
  40bd36:	push   rbx
  40bd37:	push   rbx
  40bd38:	push   rbx
  40bd39:	push   rbx
  40bd3a:	push   rbx
  40bd3b:	push   rbx
  40bd3c:	push   rbx
  40bd3d:	push   rbx
  40bd3e:	push   rbx
  40bd3f:	push   rbx
  40bd40:	push   rbx
  40bd41:	call   405400 <__fprintf_chk@plt>
  40bd46:	mov    rax,QWORD PTR [rbx+0xe0]
  40bd4d:	add    rsp,0x1d0
  40bd54:	mov    ecx,DWORD PTR [rax+0xa8]
  40bd5a:	test   ecx,ecx
  40bd5c:	jne    40bfc0 <__flatcc_fb_gen_common_c_header@@Base+0xc30>
  40bd62:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bd69:	lea    rdx,[rip+0x2a468]        # 4361d8 <_IO_stdin_used@@Base+0x81d8>
  40bd70:	xor    eax,eax
  40bd72:	mov    r8,rbx
  40bd75:	mov    rcx,rbx
  40bd78:	mov    esi,0x1
  40bd7d:	call   405400 <__fprintf_chk@plt>
  40bd82:	mov    rax,QWORD PTR [rbx+0xe0]
  40bd89:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bd90:	mov    edx,DWORD PTR [rax+0x24]
  40bd93:	test   edx,edx
  40bd95:	jne    40bf00 <__flatcc_fb_gen_common_c_header@@Base+0xb70>
  40bd9b:	lea    rdx,[rip+0x3abbb]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40bda2:	mov    esi,0x1
  40bda7:	xor    eax,eax
  40bda9:	call   405400 <__fprintf_chk@plt>
  40bdae:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bdb5:	mov    rcx,rbx
  40bdb8:	lea    rdx,[rip+0x2a4b9]        # 436278 <_IO_stdin_used@@Base+0x8278>
  40bdbf:	mov    esi,0x1
  40bdc4:	xor    eax,eax
  40bdc6:	call   405400 <__fprintf_chk@plt>
  40bdcb:	sub    rsp,0x8
  40bdcf:	push   rbx
  40bdd0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bdd7:	mov    r9,rbx
  40bdda:	push   rbx
  40bddb:	mov    r8,rbx
  40bdde:	mov    rcx,rbx
  40bde1:	push   rbx
  40bde2:	lea    rdx,[rip+0x2a50f]        # 4362f8 <_IO_stdin_used@@Base+0x82f8>
  40bde9:	mov    esi,0x1
  40bdee:	push   rbx
  40bdef:	xor    eax,eax
  40bdf1:	push   rbx
  40bdf2:	push   rbx
  40bdf3:	push   rbx
  40bdf4:	push   rbx
  40bdf5:	push   rbx
  40bdf6:	push   rbx
  40bdf7:	push   rbx
  40bdf8:	call   405400 <__fprintf_chk@plt>
  40bdfd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40be04:	add    rsp,0x60
  40be08:	mov    r9,rbx
  40be0b:	mov    r8,rbx
  40be0e:	mov    rcx,rbx
  40be11:	lea    rdx,[rip+0x2a830]        # 436648 <_IO_stdin_used@@Base+0x8648>
  40be18:	mov    esi,0x1
  40be1d:	xor    eax,eax
  40be1f:	call   405400 <__fprintf_chk@plt>
  40be24:	sub    rsp,0x8
  40be28:	push   rbx
  40be29:	mov    rdi,QWORD PTR [rbx+0xd0]
  40be30:	mov    r9,rbx
  40be33:	push   rbx
  40be34:	mov    r8,rbx
  40be37:	mov    rcx,rbx
  40be3a:	push   rbx
  40be3b:	lea    rdx,[rip+0x2a8be]        # 436700 <_IO_stdin_used@@Base+0x8700>
  40be42:	mov    esi,0x1
  40be47:	xor    eax,eax
  40be49:	call   405400 <__fprintf_chk@plt>
  40be4e:	add    rsp,0x18
  40be52:	push   rbx
  40be53:	mov    rdi,QWORD PTR [rbx+0xd0]
  40be5a:	mov    r9,rbx
  40be5d:	mov    r8,rbx
  40be60:	mov    rcx,rbx
  40be63:	lea    rdx,[rip+0x2aa5e]        # 4368c8 <_IO_stdin_used@@Base+0x88c8>
  40be6a:	mov    esi,0x1
  40be6f:	xor    eax,eax
  40be71:	call   405400 <__fprintf_chk@plt>
  40be76:	mov    QWORD PTR [rsp],rbx
  40be7a:	push   rbx
  40be7b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40be82:	mov    r9,rbx
  40be85:	push   rbx
  40be86:	mov    r8,rbx
  40be89:	mov    rcx,rbx
  40be8c:	push   rbx
  40be8d:	lea    rdx,[rip+0x2acb4]        # 436b48 <_IO_stdin_used@@Base+0x8b48>
  40be94:	mov    esi,0x1
  40be99:	push   rbx
  40be9a:	xor    eax,eax
  40be9c:	push   rbx
  40be9d:	push   rbx
  40be9e:	call   405400 <__fprintf_chk@plt>
  40bea3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40beaa:	add    rsp,0x40
  40beae:	lea    rdx,[rip+0x3aaa8]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40beb5:	mov    esi,0x1
  40beba:	xor    eax,eax
  40bebc:	call   405400 <__fprintf_chk@plt>
  40bec1:	mov    rax,QWORD PTR [rbx+0xe0]
  40bec8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40becf:	mov    eax,DWORD PTR [rax+0xac]
  40bed5:	test   eax,eax
  40bed7:	jne    40bfa0 <__flatcc_fb_gen_common_c_header@@Base+0xc10>
  40bedd:	mov    rcx,rbp
  40bee0:	lea    rdx,[rip+0x2b673]        # 43755a <_IO_stdin_used@@Base+0x955a>
  40bee7:	mov    esi,0x1
  40beec:	xor    eax,eax
  40beee:	call   405400 <__fprintf_chk@plt>
  40bef3:	add    rsp,0x8
  40bef7:	pop    rbx
  40bef8:	xor    eax,eax
  40befa:	pop    rbp
  40befb:	ret    
  40befc:	nop    DWORD PTR [rax+0x0]
  40bf00:	mov    rcx,rbx
  40bf03:	lea    rdx,[rip+0x25936]        # 431840 <_IO_stdin_used@@Base+0x3840>
  40bf0a:	mov    esi,0x1
  40bf0f:	xor    eax,eax
  40bf11:	call   405400 <__fprintf_chk@plt>
  40bf16:	jmp    40bdae <__flatcc_fb_gen_common_c_header@@Base+0xa1e>
  40bf1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf20:	lea    rdx,[rip+0x3aa36]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40bf27:	mov    esi,0x1
  40bf2c:	xor    eax,eax
  40bf2e:	call   405400 <__fprintf_chk@plt>
  40bf33:	jmp    40b647 <__flatcc_fb_gen_common_c_header@@Base+0x2b7>
  40bf38:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf40:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bf47:	lea    rdx,[rip+0x2b5dd]        # 43752b <_IO_stdin_used@@Base+0x952b>
  40bf4e:	mov    esi,0x1
  40bf53:	xor    eax,eax
  40bf55:	call   405400 <__fprintf_chk@plt>
  40bf5a:	jmp    40bbdd <__flatcc_fb_gen_common_c_header@@Base+0x84d>
  40bf5f:	nop
  40bf60:	lea    rdx,[rip+0x3a9f6]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40bf67:	mov    esi,0x1
  40bf6c:	xor    eax,eax
  40bf6e:	call   405400 <__fprintf_chk@plt>
  40bf73:	jmp    40bc38 <__flatcc_fb_gen_common_c_header@@Base+0x8a8>
  40bf78:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf80:	lea    rdx,[rip+0x3a9d6]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40bf87:	mov    esi,0x1
  40bf8c:	xor    eax,eax
  40bf8e:	call   405400 <__fprintf_chk@plt>
  40bf93:	jmp    40b518 <__flatcc_fb_gen_common_c_header@@Base+0x188>
  40bf98:	nop    DWORD PTR [rax+rax*1+0x0]
  40bfa0:	lea    rdx,[rip+0x2ae89]        # 436e30 <_IO_stdin_used@@Base+0x8e30>
  40bfa7:	mov    esi,0x1
  40bfac:	xor    eax,eax
  40bfae:	call   405400 <__fprintf_chk@plt>
  40bfb3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bfba:	jmp    40bedd <__flatcc_fb_gen_common_c_header@@Base+0xb4d>
  40bfbf:	nop
  40bfc0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bfc7:	mov    rcx,rbx
  40bfca:	lea    rdx,[rip+0x2b56f]        # 437540 <_IO_stdin_used@@Base+0x9540>
  40bfd1:	mov    esi,0x1
  40bfd6:	xor    eax,eax
  40bfd8:	call   405400 <__fprintf_chk@plt>
  40bfdd:	jmp    40bd62 <__flatcc_fb_gen_common_c_header@@Base+0x9d2>
  40bfe2:	nop    WORD PTR [rax+rax*1+0x0]
  40bfe8:	push   rbx
  40bfe9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bff0:	mov    r9,rbx
  40bff3:	push   rbx
  40bff4:	mov    r8,rbx
  40bff7:	mov    rcx,rbx
  40bffa:	lea    rdx,[rip+0x24fd7]        # 430fd8 <_IO_stdin_used@@Base+0x2fd8>
  40c001:	mov    esi,0x1
  40c006:	xor    eax,eax
  40c008:	call   405400 <__fprintf_chk@plt>
  40c00d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c014:	mov    r9,rbx
  40c017:	mov    r8,rbx
  40c01a:	lea    rcx,[rip+0x3a93c]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40c021:	lea    rdx,[rip+0x25080]        # 4310a8 <_IO_stdin_used@@Base+0x30a8>
  40c028:	mov    esi,0x1
  40c02d:	xor    eax,eax
  40c02f:	mov    QWORD PTR [rsp],rbx
  40c033:	call   405400 <__fprintf_chk@plt>
  40c038:	push   rbx
  40c039:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c040:	mov    r8,rbx
  40c043:	push   rbx
  40c044:	mov    rcx,rbx
  40c047:	mov    r9,rbx
  40c04a:	lea    rdx,[rip+0x251af]        # 431200 <_IO_stdin_used@@Base+0x3200>
  40c051:	mov    esi,0x1
  40c056:	xor    eax,eax
  40c058:	call   405400 <__fprintf_chk@plt>
  40c05d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c064:	add    rsp,0x20
  40c068:	mov    r8,rbp
  40c06b:	mov    rcx,rbp
  40c06e:	lea    rdx,[rip+0x253f3]        # 431468 <_IO_stdin_used@@Base+0x3468>
  40c075:	mov    esi,0x1
  40c07a:	xor    eax,eax
  40c07c:	call   405400 <__fprintf_chk@plt>
  40c081:	jmp    40b454 <__flatcc_fb_gen_common_c_header@@Base+0xc4>
  40c086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c090:	lea    rdx,[rip+0x24ee9]        # 430f80 <_IO_stdin_used@@Base+0x2f80>
  40c097:	mov    esi,0x1
  40c09c:	xor    eax,eax
  40c09e:	call   405400 <__fprintf_chk@plt>
  40c0a3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c0aa:	jmp    40b423 <__flatcc_fb_gen_common_c_header@@Base+0x93>
  40c0af:	nop
  40c0b0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c0b7:	lea    rdx,[rip+0x24e3a]        # 430ef8 <_IO_stdin_used@@Base+0x2ef8>
  40c0be:	mov    esi,0x1
  40c0c3:	xor    eax,eax
  40c0c5:	call   405400 <__fprintf_chk@plt>
  40c0ca:	mov    rax,QWORD PTR [rbx+0xe0]
  40c0d1:	jmp    40b40c <__flatcc_fb_gen_common_c_header@@Base+0x7c>
  40c0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040c0e0 <__flatcc_fb_gen_c_reader@@Base>:
  40c0e0:	endbr64 
  40c0e4:	push   r15
  40c0e6:	lea    rdx,[rip+0x2ad6b]        # 436e58 <_IO_stdin_used@@Base+0x8e58>
  40c0ed:	mov    esi,0x1
  40c0f2:	push   r14
  40c0f4:	push   r13
  40c0f6:	push   r12
  40c0f8:	lea    r12,[rdi+0x66]
  40c0fc:	push   rbp
  40c0fd:	mov    rbp,rdi
  40c100:	push   rbx
  40c101:	sub    rsp,0x118
  40c108:	mov    rax,QWORD PTR fs:0x28
  40c111:	mov    QWORD PTR [rsp+0x108],rax
  40c119:	xor    eax,eax
  40c11b:	mov    rax,QWORD PTR [rdi+0xe0]
  40c122:	mov    ebx,DWORD PTR [rax+0xa4]
  40c128:	mov    rax,QWORD PTR [rdi+0xd8]
  40c12f:	mov    rdi,QWORD PTR [rdi+0xd0]
  40c136:	mov    rcx,QWORD PTR [rax+0x118]
  40c13d:	xor    eax,eax
  40c13f:	mov    r8,rcx
  40c142:	call   405400 <__fprintf_chk@plt>
  40c147:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c14e:	lea    rdx,[rip+0x24d13]        # 430e68 <_IO_stdin_used@@Base+0x2e68>
  40c155:	mov    esi,0x1
  40c15a:	xor    eax,eax
  40c15c:	call   405400 <__fprintf_chk@plt>
  40c161:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c168:	test   ebx,ebx
  40c16a:	jne    40c610 <__flatcc_fb_gen_c_reader@@Base+0x530>
  40c170:	mov    r8,rbp
  40c173:	mov    rcx,r12
  40c176:	lea    rdx,[rip+0x2aecb]        # 437048 <_IO_stdin_used@@Base+0x9048>
  40c17d:	mov    esi,0x1
  40c182:	xor    eax,eax
  40c184:	call   405400 <__fprintf_chk@plt>
  40c189:	lea    rdx,[rip+0x2b3e4]        # 437574 <_IO_stdin_used@@Base+0x9574>
  40c190:	lea    rsi,[rip+0x238be]        # 42fa55 <_IO_stdin_used@@Base+0x1a55>
  40c197:	mov    rdi,rbp
  40c19a:	call   407120 <__flatcc_fb_gen_c_includes@@Base>
  40c19f:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c1a6:	lea    rdx,[rip+0x2aedb]        # 437088 <_IO_stdin_used@@Base+0x9088>
  40c1ad:	mov    esi,0x1
  40c1b2:	xor    eax,eax
  40c1b4:	call   405400 <__fprintf_chk@plt>
  40c1b9:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c1c0:	lea    rdx,[rip+0x2b091]        # 437258 <_IO_stdin_used@@Base+0x9258>
  40c1c7:	mov    esi,0x1
  40c1cc:	xor    eax,eax
  40c1ce:	call   405400 <__fprintf_chk@plt>
  40c1d3:	mov    rax,QWORD PTR [rbp+0xe0]
  40c1da:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c1e1:	mov    r8d,DWORD PTR [rax+0xac]
  40c1e8:	test   r8d,r8d
  40c1eb:	jne    40c5f0 <__flatcc_fb_gen_c_reader@@Base+0x510>
  40c1f1:	mov    rax,QWORD PTR [rbp+0xd8]
  40c1f8:	cmp    WORD PTR [rax+0x20],0x2
  40c1fd:	je     40c590 <__flatcc_fb_gen_c_reader@@Base+0x4b0>
  40c203:	mov    r8,rbp
  40c206:	mov    rcx,rbp
  40c209:	lea    rdx,[rip+0x2aed8]        # 4370e8 <_IO_stdin_used@@Base+0x90e8>
  40c210:	mov    esi,0x1
  40c215:	xor    eax,eax
  40c217:	call   405400 <__fprintf_chk@plt>
  40c21c:	mov    rax,QWORD PTR [rbp+0xd8]
  40c223:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c22a:	cmp    WORD PTR [rax+0x38],0x2
  40c22f:	je     40c5c0 <__flatcc_fb_gen_c_reader@@Base+0x4e0>
  40c235:	mov    rax,QWORD PTR [rbp+0xe0]
  40c23c:	mov    r8,rbp
  40c23f:	mov    r9,QWORD PTR [rax+0x78]
  40c243:	mov    rcx,rbp
  40c246:	lea    rdx,[rip+0x2af03]        # 437150 <_IO_stdin_used@@Base+0x9150>
  40c24d:	mov    esi,0x1
  40c252:	xor    eax,eax
  40c254:	call   405400 <__fprintf_chk@plt>
  40c259:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c260:	lea    rdx,[rip+0x3a6f6]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40c267:	mov    esi,0x1
  40c26c:	xor    eax,eax
  40c26e:	call   405400 <__fprintf_chk@plt>
  40c273:	mov    rax,QWORD PTR [rbp+0xd8]
  40c27a:	mov    rbx,QWORD PTR [rax+0x48]
  40c27e:	test   rbx,rbx
  40c281:	je     40c29f <__flatcc_fb_gen_c_reader@@Base+0x1bf>
  40c283:	nop    DWORD PTR [rax+rax*1+0x0]
  40c288:	mov    rsi,rbx
  40c28b:	mov    rdi,rbp
  40c28e:	call   4078b0 <__flatcc_fb_codegen_c@@Base+0x360>
  40c293:	mov    rbx,QWORD PTR [rbx+0xc0]
  40c29a:	test   rbx,rbx
  40c29d:	jne    40c288 <__flatcc_fb_gen_c_reader@@Base+0x1a8>
  40c29f:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c2a6:	lea    rdx,[rip+0x3a6b0]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40c2ad:	mov    esi,0x1
  40c2b2:	xor    eax,eax
  40c2b4:	call   405400 <__fprintf_chk@plt>
  40c2b9:	mov    rax,QWORD PTR [rbp+0xd8]
  40c2c0:	mov    rbx,QWORD PTR [rax+0x40]
  40c2c4:	test   rbx,rbx
  40c2c7:	jne    40c2d8 <__flatcc_fb_gen_c_reader@@Base+0x1f8>
  40c2c9:	jmp    40c412 <__flatcc_fb_gen_c_reader@@Base+0x332>
  40c2ce:	xchg   ax,ax
  40c2d0:	mov    rbx,QWORD PTR [rbx]
  40c2d3:	test   rbx,rbx
  40c2d6:	je     40c2f2 <__flatcc_fb_gen_c_reader@@Base+0x212>
  40c2d8:	cmp    WORD PTR [rbx+0x10],0x0
  40c2dd:	jne    40c2d0 <__flatcc_fb_gen_c_reader@@Base+0x1f0>
  40c2df:	mov    rsi,rbx
  40c2e2:	mov    rdi,rbp
  40c2e5:	call   4078b0 <__flatcc_fb_codegen_c@@Base+0x360>
  40c2ea:	mov    rbx,QWORD PTR [rbx]
  40c2ed:	test   rbx,rbx
  40c2f0:	jne    40c2d8 <__flatcc_fb_gen_c_reader@@Base+0x1f8>
  40c2f2:	mov    rax,QWORD PTR [rbp+0xd8]
  40c2f9:	mov    r15,QWORD PTR [rax+0x40]
  40c2fd:	test   r15,r15
  40c300:	je     40c412 <__flatcc_fb_gen_c_reader@@Base+0x332>
  40c306:	lea    r13,[rsp+0xf0]
  40c30e:	mov    rbx,rsp
  40c311:	lea    r12,[r13+0x10]
  40c315:	jmp    40c32c <__flatcc_fb_gen_c_reader@@Base+0x24c>
  40c317:	nop    WORD PTR [rax+rax*1+0x0]
  40c320:	mov    r15,QWORD PTR [r15]
  40c323:	test   r15,r15
  40c326:	je     40c412 <__flatcc_fb_gen_c_reader@@Base+0x332>
  40c32c:	cmp    WORD PTR [r15+0x10],0x1
  40c332:	ja     40c320 <__flatcc_fb_gen_c_reader@@Base+0x240>
  40c334:	xor    eax,eax
  40c336:	mov    ecx,0x1d
  40c33b:	mov    rdi,rbx
  40c33e:	rep stos QWORD PTR es:[rdi],rax
  40c341:	mov    rdx,rbx
  40c344:	mov    rsi,r15
  40c347:	mov    rdi,QWORD PTR [r15+0x18]
  40c34b:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40c350:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c357:	mov    r14d,DWORD PTR [r15+0xa0]
  40c35e:	mov    r9,rbp
  40c361:	mov    r8,rbx
  40c364:	mov    rcx,rbx
  40c367:	lea    rdx,[rip+0x2ae1a]        # 437188 <_IO_stdin_used@@Base+0x9188>
  40c36e:	mov    esi,0x1
  40c373:	xor    eax,eax
  40c375:	call   405400 <__fprintf_chk@plt>
  40c37a:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c381:	mov    r9d,r14d
  40c384:	mov    r8,rbp
  40c387:	mov    rcx,rbx
  40c38a:	lea    rdx,[rip+0x2ae3f]        # 4371d0 <_IO_stdin_used@@Base+0x91d0>
  40c391:	mov    esi,0x1
  40c396:	xor    eax,eax
  40c398:	call   405400 <__fprintf_chk@plt>
  40c39d:	mov    rax,r13
  40c3a0:	mov    edx,r14d
  40c3a3:	and    edx,0xf
  40c3a6:	cmp    dl,0xa
  40c3a9:	sbb    ecx,ecx
  40c3ab:	and    ecx,0xffffffd9
  40c3ae:	lea    edx,[rdx+rcx*1+0x57]
  40c3b2:	mov    BYTE PTR [rax+0x3],dl
  40c3b5:	mov    edx,r14d
  40c3b8:	shr    dl,0x4
  40c3bb:	cmp    dl,0xa
  40c3be:	sbb    ecx,ecx
  40c3c0:	and    ecx,0xffffffd9
  40c3c3:	lea    edx,[rdx+rcx*1+0x57]
  40c3c7:	mov    BYTE PTR [rax],0x5c
  40c3ca:	mov    BYTE PTR [rax+0x1],0x78
  40c3ce:	mov    BYTE PTR [rax+0x2],dl
  40c3d1:	add    rax,0x4
  40c3d5:	shr    r14d,0x8
  40c3d9:	cmp    rax,r12
  40c3dc:	jne    40c3a0 <__flatcc_fb_gen_c_reader@@Base+0x2c0>
  40c3de:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c3e5:	mov    r8,r13
  40c3e8:	mov    rcx,rbx
  40c3eb:	lea    rdx,[rip+0x2ae0e]        # 437200 <_IO_stdin_used@@Base+0x9200>
  40c3f2:	mov    esi,0x1
  40c3f7:	xor    eax,eax
  40c3f9:	mov    BYTE PTR [rsp+0x100],0x0
  40c401:	call   405400 <__fprintf_chk@plt>
  40c406:	mov    r15,QWORD PTR [r15]
  40c409:	test   r15,r15
  40c40c:	jne    40c32c <__flatcc_fb_gen_c_reader@@Base+0x24c>
  40c412:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c419:	lea    rdx,[rip+0x3a53d]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40c420:	mov    esi,0x1
  40c425:	xor    eax,eax
  40c427:	call   405400 <__fprintf_chk@plt>
  40c42c:	mov    rax,QWORD PTR [rbp+0xd8]
  40c433:	mov    rbx,QWORD PTR [rax+0x40]
  40c437:	test   rbx,rbx
  40c43a:	jne    40c448 <__flatcc_fb_gen_c_reader@@Base+0x368>
  40c43c:	jmp    40c468 <__flatcc_fb_gen_c_reader@@Base+0x388>
  40c43e:	xchg   ax,ax
  40c440:	mov    rbx,QWORD PTR [rbx]
  40c443:	test   rbx,rbx
  40c446:	je     40c468 <__flatcc_fb_gen_c_reader@@Base+0x388>
  40c448:	cmp    WORD PTR [rbx+0x10],0x3
  40c44d:	jne    40c440 <__flatcc_fb_gen_c_reader@@Base+0x360>
  40c44f:	mov    rsi,rbx
  40c452:	mov    rdi,rbp
  40c455:	call   409860 <__flatcc_fb_codegen_c@@Base+0x2310>
  40c45a:	mov    rbx,QWORD PTR [rbx]
  40c45d:	test   rbx,rbx
  40c460:	jne    40c448 <__flatcc_fb_gen_c_reader@@Base+0x368>
  40c462:	nop    WORD PTR [rax+rax*1+0x0]
  40c468:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c46f:	lea    rdx,[rip+0x3a4e7]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40c476:	mov    esi,0x1
  40c47b:	xor    eax,eax
  40c47d:	call   405400 <__fprintf_chk@plt>
  40c482:	mov    rax,QWORD PTR [rbp+0xd8]
  40c489:	mov    rbx,QWORD PTR [rax+0x48]
  40c48d:	test   rbx,rbx
  40c490:	je     40c4b6 <__flatcc_fb_gen_c_reader@@Base+0x3d6>
  40c492:	nop    WORD PTR [rax+rax*1+0x0]
  40c498:	mov    rsi,rbx
  40c49b:	mov    rdi,rbp
  40c49e:	call   40a470 <__flatcc_fb_codegen_c@@Base+0x2f20>
  40c4a3:	mov    rbx,QWORD PTR [rbx+0xc0]
  40c4aa:	test   rbx,rbx
  40c4ad:	jne    40c498 <__flatcc_fb_gen_c_reader@@Base+0x3b8>
  40c4af:	mov    rax,QWORD PTR [rbp+0xd8]
  40c4b6:	mov    rbx,QWORD PTR [rax+0x40]
  40c4ba:	test   rbx,rbx
  40c4bd:	jne    40c4e0 <__flatcc_fb_gen_c_reader@@Base+0x400>
  40c4bf:	jmp    40c507 <__flatcc_fb_gen_c_reader@@Base+0x427>
  40c4c1:	nop    DWORD PTR [rax+0x0]
  40c4c8:	test   ax,ax
  40c4cb:	jne    40c4d8 <__flatcc_fb_gen_c_reader@@Base+0x3f8>
  40c4cd:	mov    rsi,rbx
  40c4d0:	mov    rdi,rbp
  40c4d3:	call   407a90 <__flatcc_fb_codegen_c@@Base+0x540>
  40c4d8:	mov    rbx,QWORD PTR [rbx]
  40c4db:	test   rbx,rbx
  40c4de:	je     40c507 <__flatcc_fb_gen_c_reader@@Base+0x427>
  40c4e0:	movzx  eax,WORD PTR [rbx+0x10]
  40c4e4:	cmp    ax,0x3
  40c4e8:	jbe    40c4c8 <__flatcc_fb_gen_c_reader@@Base+0x3e8>
  40c4ea:	cmp    ax,0x4
  40c4ee:	jne    40c69f <__flatcc_fb_gen_c_reader@@Base+0x5bf>
  40c4f4:	mov    rsi,rbx
  40c4f7:	mov    rdi,rbp
  40c4fa:	call   409860 <__flatcc_fb_codegen_c@@Base+0x2310>
  40c4ff:	mov    rbx,QWORD PTR [rbx]
  40c502:	test   rbx,rbx
  40c505:	jne    40c4e0 <__flatcc_fb_gen_c_reader@@Base+0x400>
  40c507:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c50e:	lea    rdx,[rip+0x3a448]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40c515:	mov    esi,0x1
  40c51a:	xor    eax,eax
  40c51c:	call   405400 <__fprintf_chk@plt>
  40c521:	mov    rax,QWORD PTR [rbp+0xe0]
  40c528:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c52f:	mov    eax,DWORD PTR [rax+0xac]
  40c535:	test   eax,eax
  40c537:	jne    40c680 <__flatcc_fb_gen_c_reader@@Base+0x5a0>
  40c53d:	mov    rax,QWORD PTR [rbp+0xd8]
  40c544:	mov    esi,0x1
  40c549:	mov    rcx,QWORD PTR [rax+0x118]
  40c550:	lea    rdx,[rip+0x2b027]        # 43757e <_IO_stdin_used@@Base+0x957e>
  40c557:	xor    eax,eax
  40c559:	call   405400 <__fprintf_chk@plt>
  40c55e:	xor    eax,eax
  40c560:	mov    rsi,QWORD PTR [rsp+0x108]
  40c568:	xor    rsi,QWORD PTR fs:0x28
  40c571:	jne    40c6ef <__flatcc_fb_gen_c_reader@@Base+0x60f>
  40c577:	add    rsp,0x118
  40c57e:	pop    rbx
  40c57f:	pop    rbp
  40c580:	pop    r12
  40c582:	pop    r13
  40c584:	pop    r14
  40c586:	pop    r15
  40c588:	ret    
  40c589:	nop    DWORD PTR [rax+0x0]
  40c590:	sub    rsp,0x8
  40c594:	mov    r9d,DWORD PTR [rax+0x18]
  40c598:	push   QWORD PTR [rax+0x10]
  40c59b:	mov    esi,0x1
  40c5a0:	mov    r8,rbp
  40c5a3:	mov    rcx,rbp
  40c5a6:	lea    rdx,[rip+0x2ab03]        # 4370b0 <_IO_stdin_used@@Base+0x90b0>
  40c5ad:	xor    eax,eax
  40c5af:	call   405400 <__fprintf_chk@plt>
  40c5b4:	pop    rsi
  40c5b5:	pop    rdi
  40c5b6:	jmp    40c21c <__flatcc_fb_gen_c_reader@@Base+0x13c>
  40c5bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c5c0:	sub    rsp,0x8
  40c5c4:	mov    r9d,DWORD PTR [rax+0x30]
  40c5c8:	push   QWORD PTR [rax+0x28]
  40c5cb:	mov    rcx,rbp
  40c5ce:	lea    rdx,[rip+0x2ab4b]        # 437120 <_IO_stdin_used@@Base+0x9120>
  40c5d5:	mov    r8,rbp
  40c5d8:	mov    esi,0x1
  40c5dd:	xor    eax,eax
  40c5df:	call   405400 <__fprintf_chk@plt>
  40c5e4:	pop    rdx
  40c5e5:	pop    rcx
  40c5e6:	jmp    40c259 <__flatcc_fb_gen_c_reader@@Base+0x179>
  40c5eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c5f0:	lea    rdx,[rip+0x24989]        # 430f80 <_IO_stdin_used@@Base+0x2f80>
  40c5f7:	mov    esi,0x1
  40c5fc:	xor    eax,eax
  40c5fe:	call   405400 <__fprintf_chk@plt>
  40c603:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c60a:	jmp    40c1f1 <__flatcc_fb_gen_c_reader@@Base+0x111>
  40c60f:	nop
  40c610:	lea    rdx,[rip+0x2a871]        # 436e88 <_IO_stdin_used@@Base+0x8e88>
  40c617:	mov    esi,0x1
  40c61c:	xor    eax,eax
  40c61e:	call   405400 <__fprintf_chk@plt>
  40c623:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c62a:	mov    r8,rbp
  40c62d:	mov    rcx,r12
  40c630:	lea    rdx,[rip+0x2aa11]        # 437048 <_IO_stdin_used@@Base+0x9048>
  40c637:	mov    esi,0x1
  40c63c:	xor    eax,eax
  40c63e:	call   405400 <__fprintf_chk@plt>
  40c643:	mov    rdi,rbp
  40c646:	lea    rdx,[rip+0x2af27]        # 437574 <_IO_stdin_used@@Base+0x9574>
  40c64d:	lea    rsi,[rip+0x23401]        # 42fa55 <_IO_stdin_used@@Base+0x1a55>
  40c654:	call   407120 <__flatcc_fb_gen_c_includes@@Base>
  40c659:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c660:	lea    rdx,[rip+0x2aa21]        # 437088 <_IO_stdin_used@@Base+0x9088>
  40c667:	mov    esi,0x1
  40c66c:	xor    eax,eax
  40c66e:	call   405400 <__fprintf_chk@plt>
  40c673:	jmp    40c1d3 <__flatcc_fb_gen_c_reader@@Base+0xf3>
  40c678:	nop    DWORD PTR [rax+rax*1+0x0]
  40c680:	lea    rdx,[rip+0x2a7a9]        # 436e30 <_IO_stdin_used@@Base+0x8e30>
  40c687:	mov    esi,0x1
  40c68c:	xor    eax,eax
  40c68e:	call   405400 <__fprintf_chk@plt>
  40c693:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c69a:	jmp    40c53d <__flatcc_fb_gen_c_reader@@Base+0x45d>
  40c69f:	mov    rax,QWORD PTR [rip+0x45942]        # 451fe8 <stderr@GLIBC_2.2.5>
  40c6a6:	lea    rcx,[rip+0x234a3]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  40c6ad:	mov    rdi,QWORD PTR [rax]
  40c6b0:	lea    rdx,[rip+0x2abdc]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40c6b7:	mov    esi,0x1
  40c6bc:	lea    r9,[rip+0x2ab65]        # 437228 <_IO_stdin_used@@Base+0x9228>
  40c6c3:	mov    r8d,0x688
  40c6c9:	xor    eax,eax
  40c6cb:	call   405400 <__fprintf_chk@plt>
  40c6d0:	lea    rcx,[rip+0x2b229]        # 437900 <_IO_stdin_used@@Base+0x9900>
  40c6d7:	mov    edx,0x688
  40c6dc:	lea    rsi,[rip+0x2346d]        # 42fb50 <_IO_stdin_used@@Base+0x1b50>
  40c6e3:	lea    rdi,[rip+0x2bc6f]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40c6ea:	call   405300 <__assert_fail@plt>
  40c6ef:	call   4052d0 <__stack_chk_fail@plt>
  40c6f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c6fe:	xchg   ax,ax

000000000040c700 <__flatcc_gen_sort@@Base>:
  40c700:	endbr64 
  40c704:	push   rbx
  40c705:	mov    rbx,rdi
  40c708:	mov    rcx,rbx
  40c70b:	mov    rdi,QWORD PTR [rdi+0xd0]
  40c712:	lea    rdx,[rip+0x2b207]        # 437920 <_IO_stdin_used@@Base+0x9920>
  40c719:	mov    esi,0x1
  40c71e:	xor    eax,eax
  40c720:	call   405400 <__fprintf_chk@plt>
  40c725:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c72c:	mov    r8,rbx
  40c72f:	mov    rcx,rbx
  40c732:	lea    rdx,[rip+0x2b5b7]        # 437cf0 <_IO_stdin_used@@Base+0x9cf0>
  40c739:	mov    esi,0x1
  40c73e:	xor    eax,eax
  40c740:	call   405400 <__fprintf_chk@plt>
  40c745:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c74c:	mov    r9,rbx
  40c74f:	mov    r8,rbx
  40c752:	mov    rcx,rbx
  40c755:	lea    rdx,[rip+0x2b6a4]        # 437e00 <_IO_stdin_used@@Base+0x9e00>
  40c75c:	mov    esi,0x1
  40c761:	xor    eax,eax
  40c763:	call   405400 <__fprintf_chk@plt>
  40c768:	sub    rsp,0x8
  40c76c:	push   rbx
  40c76d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c774:	mov    r9,rbx
  40c777:	mov    r8,rbx
  40c77a:	mov    rcx,rbx
  40c77d:	lea    rdx,[rip+0x2b754]        # 437ed8 <_IO_stdin_used@@Base+0x9ed8>
  40c784:	mov    esi,0x1
  40c789:	xor    eax,eax
  40c78b:	call   405400 <__fprintf_chk@plt>
  40c790:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c797:	mov    r8,rbx
  40c79a:	mov    rcx,rbx
  40c79d:	lea    rdx,[rip+0x2b7cc]        # 437f70 <_IO_stdin_used@@Base+0x9f70>
  40c7a4:	mov    esi,0x1
  40c7a9:	xor    eax,eax
  40c7ab:	call   405400 <__fprintf_chk@plt>
  40c7b0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c7b7:	mov    r9,rbx
  40c7ba:	mov    r8,rbx
  40c7bd:	mov    rcx,rbx
  40c7c0:	lea    rdx,[rip+0x2b941]        # 438108 <_IO_stdin_used@@Base+0xa108>
  40c7c7:	mov    esi,0x1
  40c7cc:	xor    eax,eax
  40c7ce:	mov    QWORD PTR [rsp],rbx
  40c7d2:	call   405400 <__fprintf_chk@plt>
  40c7d7:	mov    QWORD PTR [rsp],rbx
  40c7db:	push   rbx
  40c7dc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c7e3:	mov    r9,rbx
  40c7e6:	push   rbx
  40c7e7:	mov    r8,rbx
  40c7ea:	mov    rcx,rbx
  40c7ed:	lea    rdx,[rip+0x2b99c]        # 438190 <_IO_stdin_used@@Base+0xa190>
  40c7f4:	mov    esi,0x1
  40c7f9:	xor    eax,eax
  40c7fb:	call   405400 <__fprintf_chk@plt>
  40c800:	add    rsp,0x18
  40c804:	push   rbx
  40c805:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c80c:	mov    r9,rbx
  40c80f:	mov    r8,rbx
  40c812:	mov    rcx,rbx
  40c815:	lea    rdx,[rip+0x2ba04]        # 438220 <_IO_stdin_used@@Base+0xa220>
  40c81c:	mov    esi,0x1
  40c821:	xor    eax,eax
  40c823:	call   405400 <__fprintf_chk@plt>
  40c828:	push   rbx
  40c829:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c830:	mov    r9,rbx
  40c833:	push   rbx
  40c834:	mov    r8,rbx
  40c837:	mov    rcx,rbx
  40c83a:	push   rbx
  40c83b:	lea    rdx,[rip+0x2ba46]        # 438288 <_IO_stdin_used@@Base+0xa288>
  40c842:	mov    esi,0x1
  40c847:	push   rbx
  40c848:	xor    eax,eax
  40c84a:	call   405400 <__fprintf_chk@plt>
  40c84f:	add    rsp,0x30
  40c853:	xor    eax,eax
  40c855:	pop    rbx
  40c856:	ret    
  40c857:	nop    WORD PTR [rax+rax*1+0x0]
  40c860:	push   rbp
  40c861:	xor    ebp,ebp
  40c863:	push   rbx
  40c864:	sub    rsp,0x8
  40c868:	test   rdi,rdi
  40c86b:	je     40c887 <__flatcc_gen_sort@@Base+0x187>
  40c86d:	mov    rbx,rdi
  40c870:	test   BYTE PTR [rbx+0x70],0x4
  40c874:	jne    40c87f <__flatcc_gen_sort@@Base+0x17f>
  40c876:	cmp    WORD PTR [rbx+0x28],0xe
  40c87b:	je     40c890 <__flatcc_gen_sort@@Base+0x190>
  40c87d:	inc    ebp
  40c87f:	mov    rbx,QWORD PTR [rbx]
  40c882:	test   rbx,rbx
  40c885:	jne    40c870 <__flatcc_gen_sort@@Base+0x170>
  40c887:	add    rsp,0x8
  40c88b:	pop    rbx
  40c88c:	mov    eax,ebp
  40c88e:	pop    rbp
  40c88f:	ret    
  40c890:	mov    rax,QWORD PTR [rbx+0x18]
  40c894:	cmp    WORD PTR [rax+0x10],0x1
  40c899:	jne    40c87d <__flatcc_gen_sort@@Base+0x17d>
  40c89b:	mov    rdi,QWORD PTR [rax+0x28]
  40c89f:	call   40c860 <__flatcc_gen_sort@@Base+0x160>
  40c8a4:	add    ebp,eax
  40c8a6:	jmp    40c87f <__flatcc_gen_sort@@Base+0x17f>
  40c8a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c8b0:	push   r15
  40c8b2:	mov    r15,rcx
  40c8b5:	mov    ecx,0x1d
  40c8ba:	push   r14
  40c8bc:	mov    r14d,edx
  40c8bf:	push   r13
  40c8c1:	mov    r13,rsi
  40c8c4:	mov    rsi,r8
  40c8c7:	push   r12
  40c8c9:	mov    r12,rdi
  40c8cc:	push   rbp
  40c8cd:	lea    rbp,[rip+0x2ba2b]        # 4382ff <_IO_stdin_used@@Base+0xa2ff>
  40c8d4:	push   rbx
  40c8d5:	sub    rsp,0x208
  40c8dc:	mov    rax,QWORD PTR fs:0x28
  40c8e5:	mov    QWORD PTR [rsp+0x1f8],rax
  40c8ed:	xor    eax,eax
  40c8ef:	test   r9d,r9d
  40c8f2:	lea    rax,[rip+0x3d03a]        # 449933 <fb_schema_table_missing@@Base+0x2473>
  40c8f9:	cmovne rax,rbp
  40c8fd:	lea    rbx,[rsp+0x20]
  40c902:	mov    QWORD PTR [rsp],rax
  40c906:	mov    rdi,rbx
  40c909:	xor    eax,eax
  40c90b:	rep stos QWORD PTR es:[rdi],rax
  40c90e:	lea    rdi,[rsp+0x110]
  40c916:	mov    ecx,0x1d
  40c91b:	mov    QWORD PTR [rsp+0x8],rdi
  40c920:	rep stos QWORD PTR es:[rdi],rax
  40c923:	mov    rdi,QWORD PTR [r8+0x18]
  40c927:	mov    rdx,rbx
  40c92a:	mov    QWORD PTR [rsp+0x10],r8
  40c92f:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40c934:	mov    r8,QWORD PTR [rsp+0x10]
  40c939:	mov    rbp,QWORD PTR [r8+0x28]
  40c93d:	test   rbp,rbp
  40c940:	je     40caa0 <__flatcc_gen_sort@@Base+0x3a0>
  40c946:	mov    rax,rbx
  40c949:	mov    rbx,rbp
  40c94c:	mov    rbp,r12
  40c94f:	mov    r12,rax
  40c952:	jmp    40c9e4 <__flatcc_gen_sort@@Base+0x2e4>
  40c957:	nop    WORD PTR [rax+rax*1+0x0]
  40c960:	mov    rsi,QWORD PTR [rbx+0x18]
  40c964:	mov    rdx,QWORD PTR [rsp+0x8]
  40c969:	mov    rdi,QWORD PTR [rsi+0x18]
  40c96d:	mov    QWORD PTR [rsp+0x18],rcx
  40c972:	mov    QWORD PTR [rsp+0x10],r8
  40c977:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40c97c:	mov    rax,QWORD PTR [rbx+0x18]
  40c980:	mov    r8,QWORD PTR [rsp+0x10]
  40c985:	movzx  eax,WORD PTR [rax+0x10]
  40c989:	mov    rcx,QWORD PTR [rsp+0x18]
  40c98e:	test   ax,ax
  40c991:	jne    40cad0 <__flatcc_gen_sort@@Base+0x3d0>
  40c997:	sub    rsp,0x8
  40c99b:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c9a2:	push   QWORD PTR [rsp+0x10]
  40c9a6:	mov    r9,rbp
  40c9a9:	lea    rdx,[rip+0x2bc10]        # 4385c0 <_IO_stdin_used@@Base+0xa5c0>
  40c9b0:	push   r8
  40c9b2:	mov    esi,0x1
  40c9b7:	xor    eax,eax
  40c9b9:	push   rcx
  40c9ba:	mov    rcx,rbp
  40c9bd:	push   r12
  40c9bf:	push   r15
  40c9c1:	push   r14
  40c9c3:	push   r13
  40c9c5:	mov    r8,QWORD PTR [rsp+0x40]
  40c9ca:	call   405400 <__fprintf_chk@plt>
  40c9cf:	add    rsp,0x40
  40c9d3:	nop    DWORD PTR [rax+rax*1+0x0]
  40c9d8:	mov    rbx,QWORD PTR [rbx]
  40c9db:	test   rbx,rbx
  40c9de:	je     40caa0 <__flatcc_gen_sort@@Base+0x3a0>
  40c9e4:	mov    rax,QWORD PTR [rbx+0x8]
  40c9e8:	mov    r8,QWORD PTR [rax]
  40c9eb:	mov    rcx,QWORD PTR [rax+0x8]
  40c9ef:	movzx  eax,WORD PTR [rbx+0x28]
  40c9f3:	cmp    ax,0xa
  40c9f7:	je     40ca60 <__flatcc_gen_sort@@Base+0x360>
  40c9f9:	cmp    ax,0xe
  40c9fd:	je     40c960 <__flatcc_gen_sort@@Base+0x260>
  40ca03:	test   ax,ax
  40ca06:	je     40c9d8 <__flatcc_gen_sort@@Base+0x2d8>
  40ca08:	mov    rax,QWORD PTR [rip+0x455d9]        # 451fe8 <stderr@GLIBC_2.2.5>
  40ca0f:	lea    rcx,[rip+0x2bc62]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40ca16:	mov    rdi,QWORD PTR [rax]
  40ca19:	lea    rdx,[rip+0x2a873]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40ca20:	mov    esi,0x1
  40ca25:	lea    r9,[rip+0x2bcf4]        # 438720 <_IO_stdin_used@@Base+0xa720>
  40ca2c:	mov    r8d,0x558
  40ca32:	xor    eax,eax
  40ca34:	call   405400 <__fprintf_chk@plt>
  40ca39:	lea    rcx,[rip+0x353c0]        # 441e00 <_IO_stdin_used@@Base+0x13e00>
  40ca40:	mov    edx,0x558
  40ca45:	lea    rsi,[rip+0x2bc2c]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40ca4c:	lea    rdi,[rip+0x2b906]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40ca53:	call   405300 <__assert_fail@plt>
  40ca58:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca60:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ca67:	push   r8
  40ca69:	mov    r9,rbp
  40ca6c:	lea    rdx,[rip+0x2bc75]        # 4386e8 <_IO_stdin_used@@Base+0xa6e8>
  40ca73:	push   rcx
  40ca74:	mov    esi,0x1
  40ca79:	mov    rcx,rbp
  40ca7c:	push   r12
  40ca7e:	xor    eax,eax
  40ca80:	push   r15
  40ca82:	push   r14
  40ca84:	push   r13
  40ca86:	mov    r8,QWORD PTR [rsp+0x30]
  40ca8b:	call   405400 <__fprintf_chk@plt>
  40ca90:	mov    rbx,QWORD PTR [rbx]
  40ca93:	add    rsp,0x30
  40ca97:	test   rbx,rbx
  40ca9a:	jne    40c9e4 <__flatcc_gen_sort@@Base+0x2e4>
  40caa0:	xor    eax,eax
  40caa2:	mov    rdx,QWORD PTR [rsp+0x1f8]
  40caaa:	xor    rdx,QWORD PTR fs:0x28
  40cab3:	jne    40cb67 <__flatcc_gen_sort@@Base+0x467>
  40cab9:	add    rsp,0x208
  40cac0:	pop    rbx
  40cac1:	pop    rbp
  40cac2:	pop    r12
  40cac4:	pop    r13
  40cac6:	pop    r14
  40cac8:	pop    r15
  40caca:	ret    
  40cacb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cad0:	cmp    ax,0x1
  40cad4:	jne    40cb17 <__flatcc_gen_sort@@Base+0x417>
  40cad6:	sub    rsp,0x8
  40cada:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cae1:	push   QWORD PTR [rsp+0x10]
  40cae5:	mov    r9,rbp
  40cae8:	lea    rdx,[rip+0x2bb11]        # 438600 <_IO_stdin_used@@Base+0xa600>
  40caef:	push   r8
  40caf1:	mov    esi,0x1
  40caf6:	xor    eax,eax
  40caf8:	push   rcx
  40caf9:	mov    rcx,rbp
  40cafc:	push   r12
  40cafe:	push   r15
  40cb00:	push   r14
  40cb02:	push   r13
  40cb04:	mov    r8,QWORD PTR [rsp+0x40]
  40cb09:	call   405400 <__fprintf_chk@plt>
  40cb0e:	add    rsp,0x40
  40cb12:	jmp    40c9d8 <__flatcc_gen_sort@@Base+0x2d8>
  40cb17:	mov    rax,QWORD PTR [rip+0x454ca]        # 451fe8 <stderr@GLIBC_2.2.5>
  40cb1e:	lea    rcx,[rip+0x2bb53]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40cb25:	mov    rdi,QWORD PTR [rax]
  40cb28:	lea    rdx,[rip+0x2a764]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40cb2f:	mov    esi,0x1
  40cb34:	lea    r9,[rip+0x2bb05]        # 438640 <_IO_stdin_used@@Base+0xa640>
  40cb3b:	mov    r8d,0x54e
  40cb41:	xor    eax,eax
  40cb43:	call   405400 <__fprintf_chk@plt>
  40cb48:	lea    rcx,[rip+0x352b1]        # 441e00 <_IO_stdin_used@@Base+0x13e00>
  40cb4f:	mov    edx,0x54e
  40cb54:	lea    rsi,[rip+0x2bb1d]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40cb5b:	lea    rdi,[rip+0x2b7f7]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40cb62:	call   405300 <__assert_fail@plt>
  40cb67:	call   4052d0 <__stack_chk_fail@plt>
  40cb6c:	nop    DWORD PTR [rax+0x0]
  40cb70:	push   rax
  40cb71:	pop    rax
  40cb72:	lea    rcx,[rip+0x22f6f]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40cb79:	lea    rdx,[rip+0x2a713]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40cb80:	mov    esi,0x1
  40cb85:	lea    r9,[rip+0x22f24]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  40cb8c:	mov    r8d,0xe2
  40cb92:	sub    rsp,0x8
  40cb96:	mov    rax,QWORD PTR [rip+0x4544b]        # 451fe8 <stderr@GLIBC_2.2.5>
  40cb9d:	mov    rdi,QWORD PTR [rax]
  40cba0:	xor    eax,eax
  40cba2:	call   405400 <__fprintf_chk@plt>
  40cba7:	lea    rcx,[rip+0x3526a]        # 441e18 <_IO_stdin_used@@Base+0x13e18>
  40cbae:	mov    edx,0xe2
  40cbb3:	lea    rsi,[rip+0x22f2e]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40cbba:	lea    rdi,[rip+0x2b798]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40cbc1:	call   405300 <__assert_fail@plt>
  40cbc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cbd0:	push   r15
  40cbd2:	push   r14
  40cbd4:	push   r13
  40cbd6:	push   r12
  40cbd8:	mov    r12d,edx
  40cbdb:	push   rbp
  40cbdc:	push   rbx
  40cbdd:	mov    rbx,rdi
  40cbe0:	sub    rsp,0x18
  40cbe4:	mov    rdi,QWORD PTR [rsi+0x28]
  40cbe8:	call   40c860 <__flatcc_gen_sort@@Base+0x160>
  40cbed:	test   eax,eax
  40cbef:	jle    40ccc0 <__flatcc_gen_sort@@Base+0x5c0>
  40cbf5:	test   r8d,r8d
  40cbf8:	lea    r14,[rip+0x2b70d]        # 43830c <_IO_stdin_used@@Base+0xa30c>
  40cbff:	mov    r13d,eax
  40cc02:	lea    rax,[rip+0x39d54]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40cc09:	cmovne rax,r14
  40cc0d:	mov    ebp,ecx
  40cc0f:	mov    QWORD PTR [rsp+0x8],rax
  40cc14:	xor    r14d,r14d
  40cc17:	jmp    40cc62 <__flatcc_gen_sort@@Base+0x562>
  40cc19:	nop    DWORD PTR [rax+0x0]
  40cc20:	cmp    ebp,0x4
  40cc23:	jle    40cc86 <__flatcc_gen_sort@@Base+0x586>
  40cc25:	mov    rcx,QWORD PTR [rsp+0x8]
  40cc2a:	lea    rdx,[rip+0x2b6de]        # 43830f <_IO_stdin_used@@Base+0xa30f>
  40cc31:	mov    esi,0x1
  40cc36:	xor    eax,eax
  40cc38:	call   405400 <__fprintf_chk@plt>
  40cc3d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40cc44:	mov    ecx,r15d
  40cc47:	lea    rdx,[rip+0x2b72a]        # 438378 <_IO_stdin_used@@Base+0xa378>
  40cc4e:	mov    esi,0x1
  40cc53:	xor    eax,eax
  40cc55:	inc    r14d
  40cc58:	call   405400 <__fprintf_chk@plt>
  40cc5d:	cmp    r13d,r14d
  40cc60:	je     40cca8 <__flatcc_gen_sort@@Base+0x5a8>
  40cc62:	lea    r15d,[r14+r12*1]
  40cc66:	mov    rdi,QWORD PTR [rbx+0xd0]
  40cc6d:	test   ebp,ebp
  40cc6f:	je     40cc44 <__flatcc_gen_sort@@Base+0x544>
  40cc71:	test   r14d,r14d
  40cc74:	je     40cc20 <__flatcc_gen_sort@@Base+0x520>
  40cc76:	test   r14b,0x3
  40cc7a:	jne    40cc86 <__flatcc_gen_sort@@Base+0x586>
  40cc7c:	mov    eax,ebp
  40cc7e:	sub    eax,r14d
  40cc81:	cmp    eax,0x2
  40cc84:	jg     40cc25 <__flatcc_gen_sort@@Base+0x525>
  40cc86:	lea    rdx,[rip+0x2b688]        # 438315 <_IO_stdin_used@@Base+0xa315>
  40cc8d:	mov    esi,0x1
  40cc92:	xor    eax,eax
  40cc94:	call   405400 <__fprintf_chk@plt>
  40cc99:	mov    rdi,QWORD PTR [rbx+0xd0]
  40cca0:	jmp    40cc44 <__flatcc_gen_sort@@Base+0x544>
  40cca2:	nop    WORD PTR [rax+rax*1+0x0]
  40cca8:	add    rsp,0x18
  40ccac:	pop    rbx
  40ccad:	pop    rbp
  40ccae:	lea    eax,[r13+r12*1+0x0]
  40ccb3:	pop    r12
  40ccb5:	pop    r13
  40ccb7:	pop    r14
  40ccb9:	pop    r15
  40ccbb:	ret    
  40ccbc:	nop    DWORD PTR [rax+0x0]
  40ccc0:	add    rsp,0x18
  40ccc4:	pop    rbx
  40ccc5:	pop    rbp
  40ccc6:	pop    r12
  40ccc8:	pop    r13
  40ccca:	pop    r14
  40cccc:	mov    eax,edx
  40ccce:	pop    r15
  40ccd0:	ret    
  40ccd1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40ccdc:	nop    DWORD PTR [rax+0x0]
  40cce0:	push   r15
  40cce2:	push   r14
  40cce4:	push   r13
  40cce6:	push   r12
  40cce8:	push   rbp
  40cce9:	mov    rbp,rdi
  40ccec:	push   rbx
  40cced:	sub    rsp,0x118
  40ccf4:	mov    DWORD PTR [rsp+0x1c],edx
  40ccf8:	mov    DWORD PTR [rsp+0x18],ecx
  40ccfc:	mov    DWORD PTR [rsp+0x8],r8d
  40cd01:	lea    rdi,[rsp+0x20]
  40cd06:	mov    edx,ecx
  40cd08:	mov    rax,QWORD PTR fs:0x28
  40cd11:	mov    QWORD PTR [rsp+0x108],rax
  40cd19:	xor    eax,eax
  40cd1b:	mov    ecx,0x1d
  40cd20:	mov    QWORD PTR [rsp],rdi
  40cd24:	rep stos QWORD PTR es:[rdi],rax
  40cd27:	lea    rax,[rip+0x2b5f1]        # 43831f <_IO_stdin_used@@Base+0xa31f>
  40cd2e:	mov    QWORD PTR [rsp+0x10],rax
  40cd33:	cmp    edx,0x1
  40cd36:	je     40cd52 <__flatcc_gen_sort@@Base+0x652>
  40cd38:	cmp    edx,0x2
  40cd3b:	lea    rax,[rip+0x39c1c]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40cd42:	lea    rdx,[rip+0x2b5cf]        # 438318 <_IO_stdin_used@@Base+0xa318>
  40cd49:	cmove  rax,rdx
  40cd4d:	mov    QWORD PTR [rsp+0x10],rax
  40cd52:	mov    r12,QWORD PTR [rsi]
  40cd55:	xor    r14d,r14d
  40cd58:	test   r12,r12
  40cd5b:	je     40d050 <__flatcc_gen_sort@@Base+0x950>
  40cd61:	mov    rax,QWORD PTR [r12+0x8]
  40cd66:	mov    DWORD PTR [rsp+0xc],0x0
  40cd6e:	mov    r15,QWORD PTR [rax]
  40cd71:	mov    ebx,DWORD PTR [rax+0x8]
  40cd74:	xor    r14d,r14d
  40cd77:	nop    WORD PTR [rax+rax*1+0x0]
  40cd80:	movzx  eax,WORD PTR [r12+0x28]
  40cd86:	cmp    ax,0x8
  40cd8a:	jne    40ce88 <__flatcc_gen_sort@@Base+0x788>
  40cd90:	cmp    DWORD PTR [r12+0x18],0xb
  40cd96:	ja     40d2db <__flatcc_gen_sort@@Base+0xbdb>
  40cd9c:	mov    eax,DWORD PTR [r12+0x18]
  40cda1:	lea    rcx,[rip+0x34df8]        # 441ba0 <_IO_stdin_used@@Base+0x13ba0>
  40cda8:	movsxd rax,DWORD PTR [rcx+rax*4]
  40cdac:	add    rax,rcx
  40cdaf:	notrack jmp rax
  40cdb2:	nop    WORD PTR [rax+rax*1+0x0]
  40cdb8:	lea    r8,[rip+0x2a508]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  40cdbf:	nop
  40cdc0:	lea    r13d,[r14+0x1]
  40cdc4:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cdcb:	test   BYTE PTR [r12+0x70],0x4
  40cdd1:	jne    40d020 <__flatcc_gen_sort@@Base+0x920>
  40cdd7:	cmp    QWORD PTR [r12+0x80],0x1
  40cde0:	je     40cfd0 <__flatcc_gen_sort@@Base+0x8d0>
  40cde6:	mov    eax,DWORD PTR [rsp+0x18]
  40cdea:	cmp    eax,0x1
  40cded:	je     40d110 <__flatcc_gen_sort@@Base+0xa10>
  40cdf3:	cmp    eax,0x2
  40cdf6:	jne    40cfd0 <__flatcc_gen_sort@@Base+0x8d0>
  40cdfc:	mov    r9d,DWORD PTR [rsp+0x8]
  40ce01:	test   r9d,r9d
  40ce04:	je     40d230 <__flatcc_gen_sort@@Base+0xb30>
  40ce0a:	sub    rsp,0x8
  40ce0e:	push   r15
  40ce10:	mov    r9d,ebx
  40ce13:	mov    rcx,rbp
  40ce16:	push   rbx
  40ce17:	lea    rdx,[rip+0x2ba7a]        # 438898 <_IO_stdin_used@@Base+0xa898>
  40ce1e:	mov    esi,0x1
  40ce23:	push   r15
  40ce25:	xor    eax,eax
  40ce27:	call   405400 <__fprintf_chk@plt>
  40ce2c:	add    rsp,0x20
  40ce30:	mov    r14d,r13d
  40ce33:	mov    r12,QWORD PTR [r12]
  40ce37:	test   r12,r12
  40ce3a:	je     40d050 <__flatcc_gen_sort@@Base+0x950>
  40ce40:	mov    rax,QWORD PTR [r12+0x8]
  40ce45:	mov    r15,QWORD PTR [rax]
  40ce48:	mov    ebx,DWORD PTR [rax+0x8]
  40ce4b:	test   r14d,r14d
  40ce4e:	jle    40cd80 <__flatcc_gen_sort@@Base+0x680>
  40ce54:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ce5b:	test   r14b,0x3
  40ce5f:	jne    40d008 <__flatcc_gen_sort@@Base+0x908>
  40ce65:	lea    rdx,[rip+0x2b4bc]        # 438328 <_IO_stdin_used@@Base+0xa328>
  40ce6c:	mov    esi,0x1
  40ce71:	xor    eax,eax
  40ce73:	call   405400 <__fprintf_chk@plt>
  40ce78:	movzx  eax,WORD PTR [r12+0x28]
  40ce7e:	cmp    ax,0x8
  40ce82:	je     40cd90 <__flatcc_gen_sort@@Base+0x690>
  40ce88:	cmp    ax,0xe
  40ce8c:	jne    40d32b <__flatcc_gen_sort@@Base+0xc2b>
  40ce92:	mov    rsi,QWORD PTR [r12+0x18]
  40ce97:	mov    rdx,QWORD PTR [rsp]
  40ce9b:	mov    rdi,QWORD PTR [rsi+0x18]
  40ce9f:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40cea4:	mov    rax,QWORD PTR [r12+0x18]
  40cea9:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ceb0:	cmp    WORD PTR [rax+0x10],0x1
  40ceb5:	je     40d0c0 <__flatcc_gen_sort@@Base+0x9c0>
  40cebb:	lea    r13d,[r14+0x1]
  40cebf:	test   BYTE PTR [r12+0x70],0x4
  40cec5:	jne    40d020 <__flatcc_gen_sort@@Base+0x920>
  40cecb:	cmp    QWORD PTR [r12+0x80],0x1
  40ced4:	je     40cfd0 <__flatcc_gen_sort@@Base+0x8d0>
  40ceda:	mov    eax,DWORD PTR [rsp+0x18]
  40cede:	cmp    eax,0x1
  40cee1:	je     40d1f8 <__flatcc_gen_sort@@Base+0xaf8>
  40cee7:	cmp    eax,0x2
  40ceea:	jne    40cfd0 <__flatcc_gen_sort@@Base+0x8d0>
  40cef0:	mov    r8d,DWORD PTR [rsp+0x8]
  40cef5:	test   r8d,r8d
  40cef8:	je     40d2b0 <__flatcc_gen_sort@@Base+0xbb0>
  40cefe:	push   r15
  40cf00:	mov    esi,0x1
  40cf05:	mov    r9,r15
  40cf08:	push   rbx
  40cf09:	mov    r8d,ebx
  40cf0c:	lea    rdx,[rip+0x2b8ed]        # 438800 <_IO_stdin_used@@Base+0xa800>
  40cf13:	mov    rcx,QWORD PTR [rsp+0x10]
  40cf18:	xor    eax,eax
  40cf1a:	call   405400 <__fprintf_chk@plt>
  40cf1f:	pop    rcx
  40cf20:	pop    rsi
  40cf21:	jmp    40ce30 <__flatcc_gen_sort@@Base+0x730>
  40cf26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf30:	lea    r8,[rip+0x2a3d0]        # 437307 <_IO_stdin_used@@Base+0x9307>
  40cf37:	jmp    40cdc0 <__flatcc_gen_sort@@Base+0x6c0>
  40cf3c:	nop    DWORD PTR [rax+0x0]
  40cf40:	lea    r8,[rip+0x2a390]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  40cf47:	jmp    40cdc0 <__flatcc_gen_sort@@Base+0x6c0>
  40cf4c:	nop    DWORD PTR [rax+0x0]
  40cf50:	lea    r8,[rip+0x2a390]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  40cf57:	jmp    40cdc0 <__flatcc_gen_sort@@Base+0x6c0>
  40cf5c:	nop    DWORD PTR [rax+0x0]
  40cf60:	lea    r8,[rip+0x2a39b]        # 437302 <_IO_stdin_used@@Base+0x9302>
  40cf67:	jmp    40cdc0 <__flatcc_gen_sort@@Base+0x6c0>
  40cf6c:	nop    DWORD PTR [rax+0x0]
  40cf70:	lea    r8,[rip+0x2a34a]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  40cf77:	jmp    40cdc0 <__flatcc_gen_sort@@Base+0x6c0>
  40cf7c:	nop    DWORD PTR [rax+0x0]
  40cf80:	lea    r8,[rip+0x2a36d]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  40cf87:	jmp    40cdc0 <__flatcc_gen_sort@@Base+0x6c0>
  40cf8c:	nop    DWORD PTR [rax+0x0]
  40cf90:	lea    r8,[rip+0x2a36a]        # 437301 <_IO_stdin_used@@Base+0x9301>
  40cf97:	jmp    40cdc0 <__flatcc_gen_sort@@Base+0x6c0>
  40cf9c:	nop    DWORD PTR [rax+0x0]
  40cfa0:	lea    r8,[rip+0x2a32f]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  40cfa7:	jmp    40cdc0 <__flatcc_gen_sort@@Base+0x6c0>
  40cfac:	nop    DWORD PTR [rax+0x0]
  40cfb0:	lea    r8,[rip+0x2a32f]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  40cfb7:	jmp    40cdc0 <__flatcc_gen_sort@@Base+0x6c0>
  40cfbc:	nop    DWORD PTR [rax+0x0]
  40cfc0:	lea    r8,[rip+0x2a2f9]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  40cfc7:	jmp    40cdc0 <__flatcc_gen_sort@@Base+0x6c0>
  40cfcc:	nop    DWORD PTR [rax+0x0]
  40cfd0:	mov    esi,DWORD PTR [rsp+0x8]
  40cfd4:	test   esi,esi
  40cfd6:	je     40d0a0 <__flatcc_gen_sort@@Base+0x9a0>
  40cfdc:	sub    rsp,0x8
  40cfe0:	push   r15
  40cfe2:	mov    ecx,ebx
  40cfe4:	lea    rdx,[rip+0x2b370]        # 43835b <_IO_stdin_used@@Base+0xa35b>
  40cfeb:	mov    r9d,ebx
  40cfee:	mov    r8,r15
  40cff1:	mov    esi,0x1
  40cff6:	xor    eax,eax
  40cff8:	call   405400 <__fprintf_chk@plt>
  40cffd:	pop    rdx
  40cffe:	pop    rcx
  40cfff:	jmp    40ce30 <__flatcc_gen_sort@@Base+0x730>
  40d004:	nop    DWORD PTR [rax+0x0]
  40d008:	lea    rdx,[rip+0x2b31e]        # 43832d <_IO_stdin_used@@Base+0xa32d>
  40d00f:	mov    esi,0x1
  40d014:	xor    eax,eax
  40d016:	call   405400 <__fprintf_chk@plt>
  40d01b:	jmp    40cd80 <__flatcc_gen_sort@@Base+0x680>
  40d020:	mov    ecx,DWORD PTR [rsp+0xc]
  40d024:	lea    rdx,[rip+0x2b31a]        # 438345 <_IO_stdin_used@@Base+0xa345>
  40d02b:	mov    esi,0x1
  40d030:	xor    eax,eax
  40d032:	lea    ebx,[rcx+0x1]
  40d035:	call   405400 <__fprintf_chk@plt>
  40d03a:	mov    r12,QWORD PTR [r12]
  40d03e:	mov    DWORD PTR [rsp+0xc],ebx
  40d042:	mov    r14d,r13d
  40d045:	test   r12,r12
  40d048:	jne    40ce40 <__flatcc_gen_sort@@Base+0x740>
  40d04e:	xchg   ax,ax
  40d050:	mov    eax,DWORD PTR [rsp+0x1c]
  40d054:	test   eax,eax
  40d056:	jle    40d072 <__flatcc_gen_sort@@Base+0x972>
  40d058:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d05f:	lea    rdx,[rip+0x2b2c2]        # 438328 <_IO_stdin_used@@Base+0xa328>
  40d066:	mov    esi,0x1
  40d06b:	xor    eax,eax
  40d06d:	call   405400 <__fprintf_chk@plt>
  40d072:	mov    rbx,QWORD PTR [rsp+0x108]
  40d07a:	xor    rbx,QWORD PTR fs:0x28
  40d083:	mov    eax,r14d
  40d086:	jne    40d37b <__flatcc_gen_sort@@Base+0xc7b>
  40d08c:	add    rsp,0x118
  40d093:	pop    rbx
  40d094:	pop    rbp
  40d095:	pop    r12
  40d097:	pop    r13
  40d099:	pop    r14
  40d09b:	pop    r15
  40d09d:	ret    
  40d09e:	xchg   ax,ax
  40d0a0:	mov    r9d,r14d
  40d0a3:	mov    r8,r15
  40d0a6:	mov    ecx,ebx
  40d0a8:	lea    rdx,[rip+0x2b2bf]        # 43836e <_IO_stdin_used@@Base+0xa36e>
  40d0af:	mov    esi,0x1
  40d0b4:	xor    eax,eax
  40d0b6:	call   405400 <__fprintf_chk@plt>
  40d0bb:	jmp    40ce30 <__flatcc_gen_sort@@Base+0x730>
  40d0c0:	test   BYTE PTR [r12+0x70],0x4
  40d0c6:	jne    40d1b8 <__flatcc_gen_sort@@Base+0xab8>
  40d0cc:	mov    ecx,DWORD PTR [rsp+0x8]
  40d0d0:	test   ecx,ecx
  40d0d2:	je     40d150 <__flatcc_gen_sort@@Base+0xa50>
  40d0d4:	sub    rsp,0x8
  40d0d8:	push   r15
  40d0da:	mov    r9d,ebx
  40d0dd:	lea    rdx,[rip+0x2b6ac]        # 438790 <_IO_stdin_used@@Base+0xa790>
  40d0e4:	push   rbx
  40d0e5:	mov    esi,0x1
  40d0ea:	xor    eax,eax
  40d0ec:	push   r15
  40d0ee:	inc    r14d
  40d0f1:	mov    r8,QWORD PTR [rsp+0x30]
  40d0f6:	mov    rcx,QWORD PTR [rsp+0x20]
  40d0fb:	call   405400 <__fprintf_chk@plt>
  40d100:	add    rsp,0x20
  40d104:	jmp    40ce33 <__flatcc_gen_sort@@Base+0x733>
  40d109:	nop    DWORD PTR [rax+0x0]
  40d110:	mov    eax,DWORD PTR [rsp+0x8]
  40d114:	test   eax,eax
  40d116:	je     40d258 <__flatcc_gen_sort@@Base+0xb58>
  40d11c:	sub    rsp,0x8
  40d120:	push   r15
  40d122:	mov    r9d,ebx
  40d125:	mov    rcx,rbp
  40d128:	push   rbx
  40d129:	lea    rdx,[rip+0x2b718]        # 438848 <_IO_stdin_used@@Base+0xa848>
  40d130:	mov    esi,0x1
  40d135:	push   r15
  40d137:	xor    eax,eax
  40d139:	call   405400 <__fprintf_chk@plt>
  40d13e:	add    rsp,0x20
  40d142:	jmp    40ce30 <__flatcc_gen_sort@@Base+0x730>
  40d147:	nop    WORD PTR [rax+rax*1+0x0]
  40d150:	sub    rsp,0x8
  40d154:	push   r15
  40d156:	mov    r9d,ebx
  40d159:	lea    rdx,[rip+0x2b1d0]        # 438330 <_IO_stdin_used@@Base+0xa330>
  40d160:	mov    r8,QWORD PTR [rsp+0x20]
  40d165:	mov    rcx,QWORD PTR [rsp+0x10]
  40d16a:	mov    esi,0x1
  40d16f:	xor    eax,eax
  40d171:	call   405400 <__fprintf_chk@plt>
  40d176:	mov    ecx,DWORD PTR [rsp+0x2c]
  40d17a:	mov    rsi,QWORD PTR [r12+0x18]
  40d17f:	mov    edx,r14d
  40d182:	xor    r8d,r8d
  40d185:	mov    rdi,rbp
  40d188:	call   40cbd0 <__flatcc_gen_sort@@Base+0x4d0>
  40d18d:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d194:	lea    rdx,[rip+0x2b30c]        # 4384a7 <_IO_stdin_used@@Base+0xa4a7>
  40d19b:	mov    r14d,eax
  40d19e:	mov    esi,0x1
  40d1a3:	xor    eax,eax
  40d1a5:	call   405400 <__fprintf_chk@plt>
  40d1aa:	pop    rax
  40d1ab:	pop    rdx
  40d1ac:	jmp    40ce33 <__flatcc_gen_sort@@Base+0x733>
  40d1b1:	nop    DWORD PTR [rax+0x0]
  40d1b8:	mov    ebx,DWORD PTR [rsp+0xc]
  40d1bc:	lea    rdx,[rip+0x2b58d]        # 438750 <_IO_stdin_used@@Base+0xa750>
  40d1c3:	mov    r8d,ebx
  40d1c6:	mov    ecx,ebx
  40d1c8:	mov    esi,0x1
  40d1cd:	xor    eax,eax
  40d1cf:	call   405400 <__fprintf_chk@plt>
  40d1d4:	mov    eax,ebx
  40d1d6:	inc    eax
  40d1d8:	mov    DWORD PTR [rsp+0xc],eax
  40d1dc:	mov    rax,QWORD PTR [r12+0x18]
  40d1e1:	mov    rdi,QWORD PTR [rax+0x28]
  40d1e5:	call   40c860 <__flatcc_gen_sort@@Base+0x160>
  40d1ea:	add    r14d,eax
  40d1ed:	jmp    40ce33 <__flatcc_gen_sort@@Base+0x733>
  40d1f2:	nop    WORD PTR [rax+rax*1+0x0]
  40d1f8:	mov    eax,DWORD PTR [rsp+0x8]
  40d1fc:	test   eax,eax
  40d1fe:	je     40d280 <__flatcc_gen_sort@@Base+0xb80>
  40d204:	push   r15
  40d206:	mov    r8d,ebx
  40d209:	mov    r9,r15
  40d20c:	push   rbx
  40d20d:	lea    rdx,[rip+0x2b59c]        # 4387b0 <_IO_stdin_used@@Base+0xa7b0>
  40d214:	mov    esi,0x1
  40d219:	mov    rcx,QWORD PTR [rsp+0x10]
  40d21e:	xor    eax,eax
  40d220:	call   405400 <__fprintf_chk@plt>
  40d225:	pop    r11
  40d227:	pop    rbx
  40d228:	jmp    40ce30 <__flatcc_gen_sort@@Base+0x730>
  40d22d:	nop    DWORD PTR [rax]
  40d230:	push   r14
  40d232:	mov    r9d,ebx
  40d235:	mov    rcx,rbp
  40d238:	push   r15
  40d23a:	lea    rdx,[rip+0x2b67f]        # 4388c0 <_IO_stdin_used@@Base+0xa8c0>
  40d241:	mov    esi,0x1
  40d246:	xor    eax,eax
  40d248:	call   405400 <__fprintf_chk@plt>
  40d24d:	pop    rdi
  40d24e:	pop    r8
  40d250:	jmp    40ce30 <__flatcc_gen_sort@@Base+0x730>
  40d255:	nop    DWORD PTR [rax]
  40d258:	push   r14
  40d25a:	mov    r9d,ebx
  40d25d:	mov    rcx,rbp
  40d260:	push   r15
  40d262:	lea    rdx,[rip+0x2b607]        # 438870 <_IO_stdin_used@@Base+0xa870>
  40d269:	mov    esi,0x1
  40d26e:	xor    eax,eax
  40d270:	call   405400 <__fprintf_chk@plt>
  40d275:	pop    r10
  40d277:	pop    r11
  40d279:	jmp    40ce30 <__flatcc_gen_sort@@Base+0x730>
  40d27e:	xchg   ax,ax
  40d280:	sub    rsp,0x8
  40d284:	push   r14
  40d286:	mov    r9,r15
  40d289:	mov    r8d,ebx
  40d28c:	mov    rcx,QWORD PTR [rsp+0x10]
  40d291:	lea    rdx,[rip+0x2b540]        # 4387d8 <_IO_stdin_used@@Base+0xa7d8>
  40d298:	mov    esi,0x1
  40d29d:	xor    eax,eax
  40d29f:	call   405400 <__fprintf_chk@plt>
  40d2a4:	pop    r9
  40d2a6:	pop    r10
  40d2a8:	jmp    40ce30 <__flatcc_gen_sort@@Base+0x730>
  40d2ad:	nop    DWORD PTR [rax]
  40d2b0:	sub    rsp,0x8
  40d2b4:	push   r14
  40d2b6:	lea    rdx,[rip+0x2b56b]        # 438828 <_IO_stdin_used@@Base+0xa828>
  40d2bd:	mov    r9,r15
  40d2c0:	mov    rcx,QWORD PTR [rsp+0x10]
  40d2c5:	mov    r8d,ebx
  40d2c8:	mov    esi,0x1
  40d2cd:	xor    eax,eax
  40d2cf:	call   405400 <__fprintf_chk@plt>
  40d2d4:	pop    rax
  40d2d5:	pop    rdx
  40d2d6:	jmp    40ce30 <__flatcc_gen_sort@@Base+0x730>
  40d2db:	mov    rax,QWORD PTR [rip+0x44d06]        # 451fe8 <stderr@GLIBC_2.2.5>
  40d2e2:	lea    rcx,[rip+0x227ff]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40d2e9:	mov    rdi,QWORD PTR [rax]
  40d2ec:	lea    rdx,[rip+0x29fa0]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40d2f3:	mov    esi,0x1
  40d2f8:	lea    r9,[rip+0x227b1]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  40d2ff:	mov    r8d,0x60
  40d305:	xor    eax,eax
  40d307:	call   405400 <__fprintf_chk@plt>
  40d30c:	lea    rcx,[rip+0x34b7d]        # 441e90 <_IO_stdin_used@@Base+0x13e90>
  40d313:	mov    edx,0x60
  40d318:	lea    rsi,[rip+0x227c9]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40d31f:	lea    rdi,[rip+0x2b033]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40d326:	call   405300 <__assert_fail@plt>
  40d32b:	mov    rax,QWORD PTR [rip+0x44cb6]        # 451fe8 <stderr@GLIBC_2.2.5>
  40d332:	lea    rcx,[rip+0x2b33f]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40d339:	mov    rdi,QWORD PTR [rax]
  40d33c:	lea    rdx,[rip+0x29f50]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40d343:	mov    esi,0x1
  40d348:	lea    r9,[rip+0x2b02d]        # 43837c <_IO_stdin_used@@Base+0xa37c>
  40d34f:	mov    r8d,0x3e1
  40d355:	xor    eax,eax
  40d357:	call   405400 <__fprintf_chk@plt>
  40d35c:	lea    rcx,[rip+0x34b5d]        # 441ec0 <_IO_stdin_used@@Base+0x13ec0>
  40d363:	mov    edx,0x3e1
  40d368:	lea    rsi,[rip+0x2b309]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40d36f:	lea    rdi,[rip+0x2afe3]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40d376:	call   405300 <__assert_fail@plt>
  40d37b:	call   4052d0 <__stack_chk_fail@plt>
  40d380:	push   r15
  40d382:	push   r14
  40d384:	push   r13
  40d386:	push   r12
  40d388:	push   rbp
  40d389:	mov    ebp,ecx
  40d38b:	mov    ecx,0x1d
  40d390:	push   rbx
  40d391:	mov    rbx,rdi
  40d394:	sub    rsp,0x118
  40d39b:	mov    DWORD PTR [rsp+0x1c],r8d
  40d3a0:	mov    r12,QWORD PTR [rsi]
  40d3a3:	lea    rdi,[rsp+0x20]
  40d3a8:	mov    rax,QWORD PTR fs:0x28
  40d3b1:	mov    QWORD PTR [rsp+0x108],rax
  40d3b9:	xor    eax,eax
  40d3bb:	mov    QWORD PTR [rsp+0x8],rdi
  40d3c0:	rep stos QWORD PTR es:[rdi],rax
  40d3c3:	test   r12,r12
  40d3c6:	je     40d6e0 <__flatcc_gen_sort@@Base+0xfe0>
  40d3cc:	test   r8d,r8d
  40d3cf:	lea    rcx,[rip+0x2af36]        # 43830c <_IO_stdin_used@@Base+0xa30c>
  40d3d6:	lea    rax,[rip+0x39580]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40d3dd:	cmovne rax,rcx
  40d3e1:	mov    r15d,edx
  40d3e4:	mov    QWORD PTR [rsp+0x10],rax
  40d3e9:	lea    r13,[rip+0x347e0]        # 441bd0 <_IO_stdin_used@@Base+0x13bd0>
  40d3f0:	test   BYTE PTR [r12+0x70],0x4
  40d3f6:	jne    40d4b8 <__flatcc_gen_sort@@Base+0xdb8>
  40d3fc:	movzx  eax,WORD PTR [r12+0x28]
  40d402:	cmp    ax,0x8
  40d406:	jne    40d4f8 <__flatcc_gen_sort@@Base+0xdf8>
  40d40c:	test   ebp,ebp
  40d40e:	je     40d434 <__flatcc_gen_sort@@Base+0xd34>
  40d410:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d417:	test   r15d,r15d
  40d41a:	jne    40d458 <__flatcc_gen_sort@@Base+0xd58>
  40d41c:	cmp    ebp,0x4
  40d41f:	jg     40d468 <__flatcc_gen_sort@@Base+0xd68>
  40d421:	lea    rdx,[rip+0x2aeed]        # 438315 <_IO_stdin_used@@Base+0xa315>
  40d428:	mov    esi,0x1
  40d42d:	xor    eax,eax
  40d42f:	call   405400 <__fprintf_chk@plt>
  40d434:	mov    eax,DWORD PTR [r12+0x18]
  40d439:	cmp    eax,0x5
  40d43c:	je     40d48a <__flatcc_gen_sort@@Base+0xd8a>
  40d43e:	cmp    eax,0xb
  40d441:	ja     40d6e8 <__flatcc_gen_sort@@Base+0xfe8>
  40d447:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  40d44c:	add    rax,r13
  40d44f:	notrack jmp rax
  40d452:	nop    WORD PTR [rax+rax*1+0x0]
  40d458:	test   r15b,0x3
  40d45c:	jne    40d421 <__flatcc_gen_sort@@Base+0xd21>
  40d45e:	mov    eax,ebp
  40d460:	sub    eax,r15d
  40d463:	cmp    eax,0x2
  40d466:	jle    40d421 <__flatcc_gen_sort@@Base+0xd21>
  40d468:	mov    rcx,QWORD PTR [rsp+0x10]
  40d46d:	lea    rdx,[rip+0x2ae9b]        # 43830f <_IO_stdin_used@@Base+0xa30f>
  40d474:	mov    esi,0x1
  40d479:	xor    eax,eax
  40d47b:	call   405400 <__fprintf_chk@plt>
  40d480:	mov    eax,DWORD PTR [r12+0x18]
  40d485:	cmp    eax,0x5
  40d488:	jne    40d43e <__flatcc_gen_sort@@Base+0xd3e>
  40d48a:	mov    rcx,rbx
  40d48d:	lea    r8,[rip+0x29e59]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  40d494:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d49b:	mov    r9d,r15d
  40d49e:	lea    r14d,[r15+0x1]
  40d4a2:	lea    rdx,[rip+0x2aefc]        # 4383a5 <_IO_stdin_used@@Base+0xa3a5>
  40d4a9:	mov    esi,0x1
  40d4ae:	xor    eax,eax
  40d4b0:	call   405400 <__fprintf_chk@plt>
  40d4b5:	mov    r15d,r14d
  40d4b8:	mov    r12,QWORD PTR [r12]
  40d4bc:	test   r12,r12
  40d4bf:	jne    40d3f0 <__flatcc_gen_sort@@Base+0xcf0>
  40d4c5:	mov    rbx,QWORD PTR [rsp+0x108]
  40d4cd:	xor    rbx,QWORD PTR fs:0x28
  40d4d6:	mov    eax,r15d
  40d4d9:	jne    40d788 <__flatcc_gen_sort@@Base+0x1088>
  40d4df:	add    rsp,0x118
  40d4e6:	pop    rbx
  40d4e7:	pop    rbp
  40d4e8:	pop    r12
  40d4ea:	pop    r13
  40d4ec:	pop    r14
  40d4ee:	pop    r15
  40d4f0:	ret    
  40d4f1:	nop    DWORD PTR [rax+0x0]
  40d4f8:	cmp    ax,0xe
  40d4fc:	jne    40d738 <__flatcc_gen_sort@@Base+0x1038>
  40d502:	mov    rsi,QWORD PTR [r12+0x18]
  40d507:	cmp    WORD PTR [rsi+0x10],0x1
  40d50c:	je     40d5c0 <__flatcc_gen_sort@@Base+0xec0>
  40d512:	test   ebp,ebp
  40d514:	je     40d53f <__flatcc_gen_sort@@Base+0xe3f>
  40d516:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d51d:	test   r15d,r15d
  40d520:	jne    40d590 <__flatcc_gen_sort@@Base+0xe90>
  40d522:	cmp    ebp,0x4
  40d525:	jg     40d5a0 <__flatcc_gen_sort@@Base+0xea0>
  40d527:	mov    esi,0x1
  40d52c:	lea    rdx,[rip+0x2ade2]        # 438315 <_IO_stdin_used@@Base+0xa315>
  40d533:	xor    eax,eax
  40d535:	call   405400 <__fprintf_chk@plt>
  40d53a:	mov    rsi,QWORD PTR [r12+0x18]
  40d53f:	mov    rdi,QWORD PTR [rsi+0x18]
  40d543:	mov    rdx,QWORD PTR [rsp+0x8]
  40d548:	lea    r14d,[r15+0x1]
  40d54c:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40d551:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d558:	mov    rcx,QWORD PTR [rsp+0x8]
  40d55d:	mov    r8d,r15d
  40d560:	lea    rdx,[rip+0x2ae30]        # 438397 <_IO_stdin_used@@Base+0xa397>
  40d567:	mov    esi,0x1
  40d56c:	xor    eax,eax
  40d56e:	call   405400 <__fprintf_chk@plt>
  40d573:	mov    r12,QWORD PTR [r12]
  40d577:	mov    r15d,r14d
  40d57a:	test   r12,r12
  40d57d:	jne    40d3f0 <__flatcc_gen_sort@@Base+0xcf0>
  40d583:	jmp    40d4c5 <__flatcc_gen_sort@@Base+0xdc5>
  40d588:	nop    DWORD PTR [rax+rax*1+0x0]
  40d590:	test   r15b,0x3
  40d594:	jne    40d527 <__flatcc_gen_sort@@Base+0xe27>
  40d596:	mov    eax,ebp
  40d598:	sub    eax,r15d
  40d59b:	cmp    eax,0x2
  40d59e:	jle    40d527 <__flatcc_gen_sort@@Base+0xe27>
  40d5a0:	mov    rcx,QWORD PTR [rsp+0x10]
  40d5a5:	mov    esi,0x1
  40d5aa:	lea    rdx,[rip+0x2ad5e]        # 43830f <_IO_stdin_used@@Base+0xa30f>
  40d5b1:	xor    eax,eax
  40d5b3:	call   405400 <__fprintf_chk@plt>
  40d5b8:	mov    rsi,QWORD PTR [r12+0x18]
  40d5bd:	jmp    40d53f <__flatcc_gen_sort@@Base+0xe3f>
  40d5bf:	nop
  40d5c0:	mov    r8d,DWORD PTR [rsp+0x1c]
  40d5c5:	mov    edx,r15d
  40d5c8:	add    rsi,0x28
  40d5cc:	mov    ecx,ebp
  40d5ce:	mov    rdi,rbx
  40d5d1:	call   40d380 <__flatcc_gen_sort@@Base+0xc80>
  40d5d6:	mov    r12,QWORD PTR [r12]
  40d5da:	mov    r15d,eax
  40d5dd:	test   r12,r12
  40d5e0:	jne    40d3f0 <__flatcc_gen_sort@@Base+0xcf0>
  40d5e6:	jmp    40d4c5 <__flatcc_gen_sort@@Base+0xdc5>
  40d5eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d5f0:	lea    rcx,[rip+0x39367]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40d5f7:	lea    r8,[rip+0x29d09]        # 437307 <_IO_stdin_used@@Base+0x9307>
  40d5fe:	jmp    40d494 <__flatcc_gen_sort@@Base+0xd94>
  40d603:	nop    DWORD PTR [rax+rax*1+0x0]
  40d608:	lea    rcx,[rip+0x3934f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40d60f:	lea    r8,[rip+0x29ce4]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  40d616:	jmp    40d494 <__flatcc_gen_sort@@Base+0xd94>
  40d61b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d620:	lea    rcx,[rip+0x39337]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40d627:	lea    r8,[rip+0x29ca0]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  40d62e:	jmp    40d494 <__flatcc_gen_sort@@Base+0xd94>
  40d633:	nop    DWORD PTR [rax+rax*1+0x0]
  40d638:	lea    rcx,[rip+0x3931f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40d63f:	lea    r8,[rip+0x29c98]        # 4372de <_IO_stdin_used@@Base+0x92de>
  40d646:	jmp    40d494 <__flatcc_gen_sort@@Base+0xd94>
  40d64b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d650:	lea    rcx,[rip+0x39307]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40d657:	lea    r8,[rip+0x29c5a]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  40d65e:	jmp    40d494 <__flatcc_gen_sort@@Base+0xd94>
  40d663:	nop    DWORD PTR [rax+rax*1+0x0]
  40d668:	lea    rcx,[rip+0x392ef]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40d66f:	lea    r8,[rip+0x29c51]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  40d676:	jmp    40d494 <__flatcc_gen_sort@@Base+0xd94>
  40d67b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d680:	lea    rcx,[rip+0x392d7]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40d687:	lea    r8,[rip+0x29c6b]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  40d68e:	jmp    40d494 <__flatcc_gen_sort@@Base+0xd94>
  40d693:	nop    DWORD PTR [rax+rax*1+0x0]
  40d698:	lea    rcx,[rip+0x392bf]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40d69f:	lea    r8,[rip+0x29c27]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  40d6a6:	jmp    40d494 <__flatcc_gen_sort@@Base+0xd94>
  40d6ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6b0:	lea    rcx,[rip+0x392a7]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40d6b7:	lea    r8,[rip+0x29c1f]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  40d6be:	jmp    40d494 <__flatcc_gen_sort@@Base+0xd94>
  40d6c3:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6c8:	lea    rcx,[rip+0x3928f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40d6cf:	lea    r8,[rip+0x29be1]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  40d6d6:	jmp    40d494 <__flatcc_gen_sort@@Base+0xd94>
  40d6db:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6e0:	mov    r15d,edx
  40d6e3:	jmp    40d4c5 <__flatcc_gen_sort@@Base+0xdc5>
  40d6e8:	mov    rax,QWORD PTR [rip+0x448f9]        # 451fe8 <stderr@GLIBC_2.2.5>
  40d6ef:	lea    rcx,[rip+0x223f2]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40d6f6:	mov    rdi,QWORD PTR [rax]
  40d6f9:	lea    rdx,[rip+0x29b93]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40d700:	mov    esi,0x1
  40d705:	lea    r9,[rip+0x223a4]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  40d70c:	mov    r8d,0x8d
  40d712:	xor    eax,eax
  40d714:	call   405400 <__fprintf_chk@plt>
  40d719:	lea    rcx,[rip+0x347c0]        # 441ee0 <_IO_stdin_used@@Base+0x13ee0>
  40d720:	mov    edx,0x8d
  40d725:	lea    rsi,[rip+0x223bc]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40d72c:	lea    rdi,[rip+0x2ac26]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40d733:	call   405300 <__assert_fail@plt>
  40d738:	mov    rax,QWORD PTR [rip+0x448a9]        # 451fe8 <stderr@GLIBC_2.2.5>
  40d73f:	lea    rcx,[rip+0x2af32]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40d746:	mov    rdi,QWORD PTR [rax]
  40d749:	lea    rdx,[rip+0x29b43]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40d750:	mov    esi,0x1
  40d755:	lea    r9,[rip+0x2b18c]        # 4388e8 <_IO_stdin_used@@Base+0xa8e8>
  40d75c:	mov    r8d,0x352
  40d762:	xor    eax,eax
  40d764:	call   405400 <__fprintf_chk@plt>
  40d769:	lea    rcx,[rip+0x34790]        # 441f00 <_IO_stdin_used@@Base+0x13f00>
  40d770:	mov    edx,0x352
  40d775:	lea    rsi,[rip+0x2aefc]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40d77c:	lea    rdi,[rip+0x2abd6]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40d783:	call   405300 <__assert_fail@plt>
  40d788:	call   4052d0 <__stack_chk_fail@plt>
  40d78d:	nop    DWORD PTR [rax]
  40d790:	push   r15
  40d792:	mov    ecx,0x1d
  40d797:	lea    r15,[rip+0x34462]        # 441c00 <_IO_stdin_used@@Base+0x13c00>
  40d79e:	push   r14
  40d7a0:	push   r13
  40d7a2:	push   r12
  40d7a4:	push   rbp
  40d7a5:	mov    rbp,rdi
  40d7a8:	push   rbx
  40d7a9:	mov    rbx,rsi
  40d7ac:	sub    rsp,0x288
  40d7b3:	mov    rax,QWORD PTR fs:0x28
  40d7bc:	mov    QWORD PTR [rsp+0x278],rax
  40d7c4:	xor    eax,eax
  40d7c6:	lea    r14,[rsp+0x30]
  40d7cb:	mov    rdi,r14
  40d7ce:	mov    rdx,r14
  40d7d1:	rep stos QWORD PTR es:[rdi],rax
  40d7d4:	lea    rdi,[rsp+0x120]
  40d7dc:	mov    ecx,0x1d
  40d7e1:	mov    QWORD PTR [rsp+0x8],rdi
  40d7e6:	rep stos QWORD PTR es:[rdi],rax
  40d7e9:	mov    rdi,QWORD PTR [rsi+0x18]
  40d7ed:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40d7f2:	mov    rbx,QWORD PTR [rbx+0x28]
  40d7f6:	test   rbx,rbx
  40d7f9:	je     40d8bc <__flatcc_gen_sort@@Base+0x11bc>
  40d7ff:	nop
  40d800:	mov    rax,QWORD PTR [rbx+0x8]
  40d804:	mov    r12,QWORD PTR [rax]
  40d807:	mov    r13,QWORD PTR [rax+0x8]
  40d80b:	test   BYTE PTR [rbx+0x70],0x4
  40d80f:	jne    40e080 <__flatcc_gen_sort@@Base+0x1980>
  40d815:	movzx  eax,WORD PTR [rbx+0x28]
  40d819:	sub    eax,0x7
  40d81c:	cmp    ax,0x8
  40d820:	ja     40ea7c <__flatcc_gen_sort@@Base+0x237c>
  40d826:	movzx  eax,ax
  40d829:	movsxd rax,DWORD PTR [r15+rax*4]
  40d82d:	add    rax,r15
  40d830:	notrack jmp rax
  40d833:	nop    DWORD PTR [rax+rax*1+0x0]
  40d838:	mov    rsi,QWORD PTR [rbx+0x18]
  40d83c:	mov    rdx,QWORD PTR [rsp+0x8]
  40d841:	mov    rdi,QWORD PTR [rsi+0x18]
  40d845:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40d84a:	mov    rdx,QWORD PTR [rbx+0x18]
  40d84e:	movzx  eax,WORD PTR [rdx+0x10]
  40d852:	cmp    ax,0x1
  40d856:	je     40e370 <__flatcc_gen_sort@@Base+0x1c70>
  40d85c:	test   ax,ax
  40d85f:	je     40e328 <__flatcc_gen_sort@@Base+0x1c28>
  40d865:	cmp    ax,0x3
  40d869:	jne    40e0b0 <__flatcc_gen_sort@@Base+0x19b0>
  40d86f:	sub    rsp,0x8
  40d873:	mov    rax,QWORD PTR [rsp+0x10]
  40d878:	mov    r8,QWORD PTR [rbx+0x88]
  40d87f:	push   rax
  40d880:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d887:	mov    r9,rbp
  40d88a:	push   rax
  40d88b:	mov    rcx,rbp
  40d88e:	lea    rdx,[rip+0x2b3fb]        # 438c90 <_IO_stdin_used@@Base+0xac90>
  40d895:	push   r12
  40d897:	mov    esi,0x1
  40d89c:	xor    eax,eax
  40d89e:	push   r13
  40d8a0:	push   r14
  40d8a2:	call   405400 <__fprintf_chk@plt>
  40d8a7:	add    rsp,0x30
  40d8ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d8b0:	mov    rbx,QWORD PTR [rbx]
  40d8b3:	test   rbx,rbx
  40d8b6:	jne    40d800 <__flatcc_gen_sort@@Base+0x1100>
  40d8bc:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d8c3:	xor    eax,eax
  40d8c5:	lea    rdx,[rip+0x39091]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40d8cc:	mov    esi,0x1
  40d8d1:	call   405400 <__fprintf_chk@plt>
  40d8d6:	xor    eax,eax
  40d8d8:	mov    rcx,QWORD PTR [rsp+0x278]
  40d8e0:	xor    rcx,QWORD PTR fs:0x28
  40d8e9:	jne    40ed00 <__flatcc_gen_sort@@Base+0x2600>
  40d8ef:	add    rsp,0x288
  40d8f6:	pop    rbx
  40d8f7:	pop    rbp
  40d8f8:	pop    r12
  40d8fa:	pop    r13
  40d8fc:	pop    r14
  40d8fe:	pop    r15
  40d900:	ret    
  40d901:	nop    DWORD PTR [rax+0x0]
  40d908:	mov    rsi,QWORD PTR [rbx+0x18]
  40d90c:	mov    rdx,QWORD PTR [rsp+0x8]
  40d911:	mov    rdi,QWORD PTR [rsi+0x18]
  40d915:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40d91a:	mov    rdx,QWORD PTR [rbx+0x18]
  40d91e:	movzx  eax,WORD PTR [rdx+0x10]
  40d922:	cmp    ax,0x1
  40d926:	je     40e400 <__flatcc_gen_sort@@Base+0x1d00>
  40d92c:	test   ax,ax
  40d92f:	je     40e3c0 <__flatcc_gen_sort@@Base+0x1cc0>
  40d935:	cmp    ax,0x3
  40d939:	jne    40e110 <__flatcc_gen_sort@@Base+0x1a10>
  40d93f:	movzx  eax,WORD PTR [rbx+0x58]
  40d943:	mov    edx,DWORD PTR [rdx+0x48]
  40d946:	cmp    ax,0x4
  40d94a:	je     40e5ff <__flatcc_gen_sort@@Base+0x1eff>
  40d950:	jbe    40e270 <__flatcc_gen_sort@@Base+0x1b70>
  40d956:	cmp    ax,0x5
  40d95a:	jne    40e300 <__flatcc_gen_sort@@Base+0x1c00>
  40d960:	cmp    edx,0x9
  40d963:	ja     40e509 <__flatcc_gen_sort@@Base+0x1e09>
  40d969:	lea    rcx,[rip+0x342b4]        # 441c24 <_IO_stdin_used@@Base+0x13c24>
  40d970:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40d974:	add    rax,rcx
  40d977:	notrack jmp rax
  40d97a:	nop    WORD PTR [rax+rax*1+0x0]
  40d980:	sub    rsp,0x8
  40d984:	mov    r8,QWORD PTR [rbx+0x88]
  40d98b:	push   r12
  40d98d:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d994:	mov    r9,rbp
  40d997:	push   r13
  40d999:	mov    rcx,rbp
  40d99c:	lea    rdx,[rip+0x2b105]        # 438aa8 <_IO_stdin_used@@Base+0xaaa8>
  40d9a3:	push   r14
  40d9a5:	mov    esi,0x1
  40d9aa:	xor    eax,eax
  40d9ac:	call   405400 <__fprintf_chk@plt>
  40d9b1:	add    rsp,0x20
  40d9b5:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x11b0>
  40d9ba:	nop    WORD PTR [rax+rax*1+0x0]
  40d9c0:	mov    eax,DWORD PTR [rbx+0x18]
  40d9c3:	cmp    eax,0x5
  40d9c6:	je     40e1e0 <__flatcc_gen_sort@@Base+0x1ae0>
  40d9cc:	cmp    eax,0xb
  40d9cf:	ja     40ebbc <__flatcc_gen_sort@@Base+0x24bc>
  40d9d5:	lea    rsi,[rip+0x34270]        # 441c4c <_IO_stdin_used@@Base+0x13c4c>
  40d9dc:	mov    ecx,eax
  40d9de:	movsxd rdx,DWORD PTR [rsi+rcx*4]
  40d9e2:	add    rdx,rsi
  40d9e5:	notrack jmp rdx
  40d9e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d9f0:	mov    eax,DWORD PTR [rbx+0x18]
  40d9f3:	cmp    eax,0x5
  40d9f6:	je     40e1c0 <__flatcc_gen_sort@@Base+0x1ac0>
  40d9fc:	cmp    eax,0xb
  40d9ff:	ja     40ebbc <__flatcc_gen_sort@@Base+0x24bc>
  40da05:	lea    rdx,[rip+0x34270]        # 441c7c <_IO_stdin_used@@Base+0x13c7c>
  40da0c:	movsxd rax,DWORD PTR [rdx+rax*4]
  40da10:	add    rax,rdx
  40da13:	notrack jmp rax
  40da16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40da20:	sub    rsp,0x8
  40da24:	mov    r8,QWORD PTR [rbx+0x88]
  40da2b:	push   r12
  40da2d:	mov    rdi,QWORD PTR [rbp+0xd0]
  40da34:	mov    r9,rbp
  40da37:	push   r13
  40da39:	mov    rcx,rbp
  40da3c:	lea    rdx,[rip+0x2b095]        # 438ad8 <_IO_stdin_used@@Base+0xaad8>
  40da43:	push   r14
  40da45:	mov    esi,0x1
  40da4a:	xor    eax,eax
  40da4c:	call   405400 <__fprintf_chk@plt>
  40da51:	add    rsp,0x20
  40da55:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x11b0>
  40da5a:	nop    WORD PTR [rax+rax*1+0x0]
  40da60:	movzx  edx,WORD PTR [rbx+0x58]
  40da64:	cmp    dx,0x4
  40da68:	je     40e855 <__flatcc_gen_sort@@Base+0x2155>
  40da6e:	ja     40df61 <__flatcc_gen_sort@@Base+0x1861>
  40da74:	cmp    dx,0x3
  40da78:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40da7e:	lea    r11,[rip+0x29882]        # 437307 <_IO_stdin_used@@Base+0x9307>
  40da85:	lea    rax,[rip+0x38ed2]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40da8c:	mov    QWORD PTR [rsp+0x10],rax
  40da91:	mov    r10,r11
  40da94:	jmp    40dae0 <__flatcc_gen_sort@@Base+0x13e0>
  40da96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40daa0:	movzx  edx,WORD PTR [rbx+0x58]
  40daa4:	cmp    dx,0x4
  40daa8:	je     40e870 <__flatcc_gen_sort@@Base+0x2170>
  40daae:	ja     40df3a <__flatcc_gen_sort@@Base+0x183a>
  40dab4:	cmp    dx,0x3
  40dab8:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40dabe:	lea    rax,[rip+0x38e99]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40dac5:	mov    QWORD PTR [rsp+0x10],rax
  40daca:	lea    r11,[rip+0x29829]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  40dad1:	lea    r10,[rip+0x2982a]        # 437302 <_IO_stdin_used@@Base+0x9302>
  40dad8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dae0:	lea    rax,[rsp+0x210]
  40dae8:	vmovsd xmm0,QWORD PTR [rbx+0x48]
  40daed:	mov    QWORD PTR [rsp+0x18],rax
  40daf2:	mov    rdi,rax
  40daf5:	lea    rcx,[rip+0x298d0]        # 4373cc <_IO_stdin_used@@Base+0x93cc>
  40dafc:	mov    edx,0x64
  40db01:	mov    esi,0x1
  40db06:	mov    eax,0x1
  40db0b:	mov    QWORD PTR [rsp+0x28],r10
  40db10:	mov    QWORD PTR [rsp+0x20],r11
  40db15:	call   405420 <__sprintf_chk@plt>
  40db1a:	mov    r11,QWORD PTR [rsp+0x20]
  40db1f:	mov    r10,QWORD PTR [rsp+0x28]
  40db24:	nop    DWORD PTR [rax+0x0]
  40db28:	mov    r8,QWORD PTR [rbx+0x88]
  40db2f:	push   QWORD PTR [rsp+0x18]
  40db33:	movzx  eax,WORD PTR [rbx+0x72]
  40db37:	mov    rdi,QWORD PTR [rbp+0xd0]
  40db3e:	push   rax
  40db3f:	mov    r9,rbp
  40db42:	mov    rcx,rbp
  40db45:	push   QWORD PTR [rbx+0x80]
  40db4b:	lea    rdx,[rip+0x2adfe]        # 438950 <_IO_stdin_used@@Base+0xa950>
  40db52:	mov    esi,0x1
  40db57:	push   r11
  40db59:	xor    eax,eax
  40db5b:	push   QWORD PTR [rsp+0x30]
  40db5f:	push   r10
  40db61:	push   rbp
  40db62:	push   r12
  40db64:	push   r13
  40db66:	push   r14
  40db68:	call   405400 <__fprintf_chk@plt>
  40db6d:	add    rsp,0x50
  40db71:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x11b0>
  40db76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db80:	movzx  edx,WORD PTR [rbx+0x58]
  40db84:	cmp    dx,0x4
  40db88:	je     40e788 <__flatcc_gen_sort@@Base+0x2088>
  40db8e:	jbe    40dff5 <__flatcc_gen_sort@@Base+0x18f5>
  40db94:	cmp    dx,0x5
  40db98:	je     40e52c <__flatcc_gen_sort@@Base+0x1e2c>
  40db9e:	cmp    dx,0x6
  40dba2:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40dba8:	lea    r11,[rip+0x2971f]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  40dbaf:	lea    r10,[rip+0x29721]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  40dbb6:	lea    rax,[rip+0x38da1]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40dbbd:	mov    QWORD PTR [rsp+0x10],rax
  40dbc2:	lea    r8,[rip+0x29757]        # 437320 <_IO_stdin_used@@Base+0x9320>
  40dbc9:	nop    DWORD PTR [rax+0x0]
  40dbd0:	lea    rax,[rsp+0x210]
  40dbd8:	movzx  r9d,BYTE PTR [rbx+0x48]
  40dbdd:	mov    QWORD PTR [rsp+0x18],rax
  40dbe2:	mov    rdi,rax
  40dbe5:	lea    rcx,[rip+0x297d5]        # 4373c1 <_IO_stdin_used@@Base+0x93c1>
  40dbec:	mov    edx,0x64
  40dbf1:	mov    esi,0x1
  40dbf6:	xor    eax,eax
  40dbf8:	mov    QWORD PTR [rsp+0x28],r10
  40dbfd:	mov    QWORD PTR [rsp+0x20],r11
  40dc02:	call   405420 <__sprintf_chk@plt>
  40dc07:	mov    r11,QWORD PTR [rsp+0x20]
  40dc0c:	mov    r10,QWORD PTR [rsp+0x28]
  40dc11:	jmp    40db28 <__flatcc_gen_sort@@Base+0x1428>
  40dc16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc20:	movzx  edx,WORD PTR [rbx+0x58]
  40dc24:	cmp    dx,0x4
  40dc28:	je     40e7c0 <__flatcc_gen_sort@@Base+0x20c0>
  40dc2e:	jbe    40df84 <__flatcc_gen_sort@@Base+0x1884>
  40dc34:	cmp    dx,0x5
  40dc38:	je     40e548 <__flatcc_gen_sort@@Base+0x1e48>
  40dc3e:	cmp    dx,0x6
  40dc42:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40dc48:	lea    r11,[rip+0x29678]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  40dc4f:	mov    r10,r11
  40dc52:	cmp    eax,0x9
  40dc55:	ja     40e509 <__flatcc_gen_sort@@Base+0x1e09>
  40dc5b:	lea    rdx,[rip+0x3404a]        # 441cac <_IO_stdin_used@@Base+0x13cac>
  40dc62:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40dc66:	add    rax,rdx
  40dc69:	notrack jmp rax
  40dc6c:	nop    DWORD PTR [rax+0x0]
  40dc70:	movzx  edx,WORD PTR [rbx+0x58]
  40dc74:	cmp    dx,0x4
  40dc78:	je     40e7f4 <__flatcc_gen_sort@@Base+0x20f4>
  40dc7e:	jbe    40e028 <__flatcc_gen_sort@@Base+0x1928>
  40dc84:	cmp    dx,0x5
  40dc88:	je     40e57c <__flatcc_gen_sort@@Base+0x1e7c>
  40dc8e:	cmp    dx,0x6
  40dc92:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40dc98:	lea    r11,[rip+0x2965a]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  40dc9f:	lea    r10,[rip+0x2965b]        # 437301 <_IO_stdin_used@@Base+0x9301>
  40dca6:	lea    rax,[rip+0x38cb1]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40dcad:	mov    QWORD PTR [rsp+0x10],rax
  40dcb2:	lea    r8,[rip+0x2965e]        # 437317 <_IO_stdin_used@@Base+0x9317>
  40dcb9:	jmp    40dbd0 <__flatcc_gen_sort@@Base+0x14d0>
  40dcbe:	xchg   ax,ax
  40dcc0:	movzx  edx,WORD PTR [rbx+0x58]
  40dcc4:	cmp    dx,0x4
  40dcc8:	je     40e810 <__flatcc_gen_sort@@Base+0x2110>
  40dcce:	jbe    40e042 <__flatcc_gen_sort@@Base+0x1942>
  40dcd4:	cmp    dx,0x5
  40dcd8:	je     40e59b <__flatcc_gen_sort@@Base+0x1e9b>
  40dcde:	cmp    dx,0x6
  40dce2:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40dce8:	lea    r11,[rip+0x295ee]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  40dcef:	lea    r10,[rip+0x295f0]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  40dcf6:	lea    rax,[rip+0x38c61]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40dcfd:	mov    QWORD PTR [rsp+0x10],rax
  40dd02:	lea    r8,[rip+0x2961f]        # 437328 <_IO_stdin_used@@Base+0x9328>
  40dd09:	jmp    40dbd0 <__flatcc_gen_sort@@Base+0x14d0>
  40dd0e:	xchg   ax,ax
  40dd10:	movzx  edx,WORD PTR [rbx+0x58]
  40dd14:	cmp    dx,0x4
  40dd18:	je     40e7d8 <__flatcc_gen_sort@@Base+0x20d8>
  40dd1e:	jbe    40e05c <__flatcc_gen_sort@@Base+0x195c>
  40dd24:	cmp    dx,0x5
  40dd28:	je     40e560 <__flatcc_gen_sort@@Base+0x1e60>
  40dd2e:	cmp    dx,0x6
  40dd32:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40dd38:	lea    r11,[rip+0x2958e]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  40dd3f:	lea    r10,[rip+0x29590]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  40dd46:	lea    rax,[rip+0x38c11]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40dd4d:	mov    QWORD PTR [rsp+0x10],rax
  40dd52:	lea    r8,[rip+0x295c6]        # 43731f <_IO_stdin_used@@Base+0x931f>
  40dd59:	jmp    40dbd0 <__flatcc_gen_sort@@Base+0x14d0>
  40dd5e:	xchg   ax,ax
  40dd60:	lea    rax,[rip+0x295a0]        # 437307 <_IO_stdin_used@@Base+0x9307>
  40dd67:	lea    rcx,[rip+0x38bf0]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40dd6e:	mov    rdx,rax
  40dd71:	nop    DWORD PTR [rax+0x0]
  40dd78:	sub    rsp,0x8
  40dd7c:	mov    r8,QWORD PTR [rbx+0x88]
  40dd83:	push   rax
  40dd84:	mov    rdi,QWORD PTR [rbp+0xd0]
  40dd8b:	mov    esi,0x1
  40dd90:	push   rcx
  40dd91:	mov    r9,rbp
  40dd94:	mov    rcx,rbp
  40dd97:	push   rdx
  40dd98:	xor    eax,eax
  40dd9a:	lea    rdx,[rip+0x2abf7]        # 438998 <_IO_stdin_used@@Base+0xa998>
  40dda1:	push   rbp
  40dda2:	push   r12
  40dda4:	push   r13
  40dda6:	push   r14
  40dda8:	call   405400 <__fprintf_chk@plt>
  40ddad:	mov    rsi,QWORD PTR [rbx+0x90]
  40ddb4:	add    rsp,0x40
  40ddb8:	test   rsi,rsi
  40ddbb:	je     40d8b0 <__flatcc_gen_sort@@Base+0x11b0>
  40ddc1:	movzx  eax,WORD PTR [rsi+0x10]
  40ddc5:	test   ax,ax
  40ddc8:	jne    40e158 <__flatcc_gen_sort@@Base+0x1a58>
  40ddce:	mov    rdx,QWORD PTR [rsp+0x8]
  40ddd3:	mov    rdi,QWORD PTR [rsi+0x18]
  40ddd7:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40dddc:	sub    rsp,0x8
  40dde0:	mov    rax,QWORD PTR [rsp+0x10]
  40dde5:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ddec:	push   rax
  40dded:	mov    r9,r14
  40ddf0:	mov    r8,rbp
  40ddf3:	push   rax
  40ddf4:	mov    rcx,rbp
  40ddf7:	lea    rdx,[rip+0x2abd2]        # 4389d0 <_IO_stdin_used@@Base+0xa9d0>
  40ddfe:	push   rax
  40ddff:	mov    esi,0x1
  40de04:	xor    eax,eax
  40de06:	push   r12
  40de08:	push   r13
  40de0a:	call   405400 <__fprintf_chk@plt>
  40de0f:	add    rsp,0x30
  40de13:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x11b0>
  40de18:	nop    DWORD PTR [rax+rax*1+0x0]
  40de20:	lea    rax,[rip+0x294b7]        # 4372de <_IO_stdin_used@@Base+0x92de>
  40de27:	lea    rcx,[rip+0x38b30]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40de2e:	lea    rdx,[rip+0x294b2]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  40de35:	jmp    40dd78 <__flatcc_gen_sort@@Base+0x1678>
  40de3a:	nop    WORD PTR [rax+rax*1+0x0]
  40de40:	lea    rax,[rip+0x294b3]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  40de47:	lea    rcx,[rip+0x38b10]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40de4e:	lea    rdx,[rip+0x294ad]        # 437302 <_IO_stdin_used@@Base+0x9302>
  40de55:	jmp    40dd78 <__flatcc_gen_sort@@Base+0x1678>
  40de5a:	nop    WORD PTR [rax+rax*1+0x0]
  40de60:	lea    rax,[rip+0x29467]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  40de67:	lea    rcx,[rip+0x38af0]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40de6e:	lea    rdx,[rip+0x29462]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  40de75:	jmp    40dd78 <__flatcc_gen_sort@@Base+0x1678>
  40de7a:	nop    WORD PTR [rax+rax*1+0x0]
  40de80:	lea    rax,[rip+0x29446]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  40de87:	lea    rcx,[rip+0x38ad0]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40de8e:	lea    rdx,[rip+0x29441]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  40de95:	jmp    40dd78 <__flatcc_gen_sort@@Base+0x1678>
  40de9a:	nop    WORD PTR [rax+rax*1+0x0]
  40dea0:	lea    rax,[rip+0x29436]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  40dea7:	lea    rcx,[rip+0x38ab0]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40deae:	lea    rdx,[rip+0x29431]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  40deb5:	jmp    40dd78 <__flatcc_gen_sort@@Base+0x1678>
  40deba:	nop    WORD PTR [rax+rax*1+0x0]
  40dec0:	lea    rax,[rip+0x293f0]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  40dec7:	lea    rcx,[rip+0x38a90]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40dece:	lea    rdx,[rip+0x293eb]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  40ded5:	jmp    40dd78 <__flatcc_gen_sort@@Base+0x1678>
  40deda:	nop    WORD PTR [rax+rax*1+0x0]
  40dee0:	lea    rax,[rip+0x293e0]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  40dee7:	lea    rcx,[rip+0x38a70]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40deee:	mov    rdx,rax
  40def1:	jmp    40dd78 <__flatcc_gen_sort@@Base+0x1678>
  40def6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40df00:	lea    rax,[rip+0x293f2]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  40df07:	lea    rcx,[rip+0x38a50]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40df0e:	lea    rdx,[rip+0x293ec]        # 437301 <_IO_stdin_used@@Base+0x9301>
  40df15:	jmp    40dd78 <__flatcc_gen_sort@@Base+0x1678>
  40df1a:	nop    WORD PTR [rax+rax*1+0x0]
  40df20:	lea    rax,[rip+0x29391]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  40df27:	lea    rcx,[rip+0x38a30]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40df2e:	lea    rdx,[rip+0x2938c]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  40df35:	jmp    40dd78 <__flatcc_gen_sort@@Base+0x1678>
  40df3a:	cmp    dx,0x5
  40df3e:	je     40e510 <__flatcc_gen_sort@@Base+0x1e10>
  40df44:	cmp    dx,0x6
  40df48:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40df4e:	lea    r11,[rip+0x293a5]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  40df55:	lea    r10,[rip+0x293a6]        # 437302 <_IO_stdin_used@@Base+0x9302>
  40df5c:	jmp    40dc52 <__flatcc_gen_sort@@Base+0x1552>
  40df61:	cmp    dx,0x5
  40df65:	je     40e4e8 <__flatcc_gen_sort@@Base+0x1de8>
  40df6b:	cmp    dx,0x6
  40df6f:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40df75:	lea    r11,[rip+0x2938b]        # 437307 <_IO_stdin_used@@Base+0x9307>
  40df7c:	mov    r10,r11
  40df7f:	jmp    40dc52 <__flatcc_gen_sort@@Base+0x1552>
  40df84:	cmp    dx,0x3
  40df88:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40df8e:	lea    r11,[rip+0x29332]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  40df95:	mov    r10,r11
  40df98:	lea    rax,[rsp+0x210]
  40dfa0:	mov    QWORD PTR [rsp+0x18],rax
  40dfa5:	mov    rdi,rax
  40dfa8:	vxorps xmm0,xmm0,xmm0
  40dfac:	lea    rcx,[rip+0x29415]        # 4373c8 <_IO_stdin_used@@Base+0x93c8>
  40dfb3:	mov    edx,0x64
  40dfb8:	mov    esi,0x1
  40dfbd:	mov    eax,0x1
  40dfc2:	mov    QWORD PTR [rsp+0x28],r10
  40dfc7:	mov    QWORD PTR [rsp+0x20],r11
  40dfcc:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbx+0x48]
  40dfd1:	vcvtss2sd xmm0,xmm0,xmm0
  40dfd5:	call   405420 <__sprintf_chk@plt>
  40dfda:	lea    rax,[rip+0x3897d]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40dfe1:	mov    QWORD PTR [rsp+0x10],rax
  40dfe6:	mov    r11,QWORD PTR [rsp+0x20]
  40dfeb:	mov    r10,QWORD PTR [rsp+0x28]
  40dff0:	jmp    40db28 <__flatcc_gen_sort@@Base+0x1428>
  40dff5:	cmp    dx,0x3
  40dff9:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40dfff:	lea    r11,[rip+0x292c8]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  40e006:	lea    r10,[rip+0x292ca]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  40e00d:	cmp    eax,0xb
  40e010:	je     40df98 <__flatcc_gen_sort@@Base+0x1898>
  40e012:	lea    rax,[rip+0x38945]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e019:	mov    QWORD PTR [rsp+0x10],rax
  40e01e:	jmp    40dae0 <__flatcc_gen_sort@@Base+0x13e0>
  40e023:	nop    DWORD PTR [rax+rax*1+0x0]
  40e028:	cmp    dx,0x3
  40e02c:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40e032:	lea    r11,[rip+0x292c0]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  40e039:	lea    r10,[rip+0x292c1]        # 437301 <_IO_stdin_used@@Base+0x9301>
  40e040:	jmp    40e00d <__flatcc_gen_sort@@Base+0x190d>
  40e042:	cmp    dx,0x3
  40e046:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40e04c:	lea    r11,[rip+0x2928a]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  40e053:	lea    r10,[rip+0x2928c]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  40e05a:	jmp    40e00d <__flatcc_gen_sort@@Base+0x190d>
  40e05c:	cmp    dx,0x3
  40e060:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40e066:	lea    r11,[rip+0x29260]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  40e06d:	lea    r10,[rip+0x29262]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  40e074:	jmp    40e00d <__flatcc_gen_sort@@Base+0x190d>
  40e076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e080:	mov    rdi,QWORD PTR [rbp+0xd0]
  40e087:	mov    r9,r12
  40e08a:	mov    r8d,r13d
  40e08d:	mov    rcx,r14
  40e090:	lea    rdx,[rip+0x2a881]        # 438918 <_IO_stdin_used@@Base+0xa918>
  40e097:	mov    esi,0x1
  40e09c:	xor    eax,eax
  40e09e:	call   405400 <__fprintf_chk@plt>
  40e0a3:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x11b0>
  40e0a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e0b0:	cmp    ax,0x4
  40e0b4:	jne    40eb6c <__flatcc_gen_sort@@Base+0x246c>
  40e0ba:	mov    r8,QWORD PTR [rbx+0x88]
  40e0c1:	push   QWORD PTR [rsp+0x8]
  40e0c5:	mov    rdi,QWORD PTR [rbp+0xd0]
  40e0cc:	mov    r9,rbp
  40e0cf:	push   r12
  40e0d1:	mov    rcx,rbp
  40e0d4:	lea    rdx,[rip+0x2abf5]        # 438cd0 <_IO_stdin_used@@Base+0xacd0>
  40e0db:	push   r13
  40e0dd:	mov    esi,0x1
  40e0e2:	xor    eax,eax
  40e0e4:	push   r14
  40e0e6:	call   405400 <__fprintf_chk@plt>
  40e0eb:	add    rsp,0x20
  40e0ef:	mov    r9d,0x1
  40e0f5:	mov    r8,QWORD PTR [rbx+0x18]
  40e0f9:	mov    rcx,r12
  40e0fc:	mov    edx,r13d
  40e0ff:	mov    rsi,r14
  40e102:	mov    rdi,rbp
  40e105:	call   40c8b0 <__flatcc_gen_sort@@Base+0x1b0>
  40e10a:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x11b0>
  40e10f:	nop
  40e110:	cmp    ax,0x4
  40e114:	jne    40eacc <__flatcc_gen_sort@@Base+0x23cc>
  40e11a:	mov    r8,QWORD PTR [rbx+0x88]
  40e121:	push   QWORD PTR [rsp+0x8]
  40e125:	mov    rdi,QWORD PTR [rbp+0xd0]
  40e12c:	mov    r9,rbp
  40e12f:	push   r12
  40e131:	mov    rcx,rbp
  40e134:	lea    rdx,[rip+0x2aa8d]        # 438bc8 <_IO_stdin_used@@Base+0xabc8>
  40e13b:	push   r13
  40e13d:	mov    esi,0x1
  40e142:	xor    eax,eax
  40e144:	push   r14
  40e146:	call   405400 <__fprintf_chk@plt>
  40e14b:	add    rsp,0x20
  40e14f:	xor    r9d,r9d
  40e152:	jmp    40e0f5 <__flatcc_gen_sort@@Base+0x19f5>
  40e154:	nop    DWORD PTR [rax+0x0]
  40e158:	cmp    ax,0x1
  40e15c:	jne    40ed05 <__flatcc_gen_sort@@Base+0x2605>
  40e162:	mov    rdx,QWORD PTR [rsp+0x8]
  40e167:	mov    rdi,QWORD PTR [rsi+0x18]
  40e16b:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40e170:	mov    rcx,QWORD PTR [rsp+0x8]
  40e175:	mov    rax,QWORD PTR [rbx+0x90]
  40e17c:	push   rcx
  40e17d:	movzx  eax,WORD PTR [rax+0xb0]
  40e184:	mov    rdi,QWORD PTR [rbp+0xd0]
  40e18b:	push   rcx
  40e18c:	mov    r9,r14
  40e18f:	mov    r8,rbp
  40e192:	push   rax
  40e193:	lea    rdx,[rip+0x2a88e]        # 438a28 <_IO_stdin_used@@Base+0xaa28>
  40e19a:	mov    esi,0x1
  40e19f:	push   rcx
  40e1a0:	xor    eax,eax
  40e1a2:	mov    rcx,rbp
  40e1a5:	push   r12
  40e1a7:	push   r13
  40e1a9:	call   405400 <__fprintf_chk@plt>
  40e1ae:	add    rsp,0x30
  40e1b2:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x11b0>
  40e1b7:	nop    WORD PTR [rax+rax*1+0x0]
  40e1c0:	mov    rcx,rbp
  40e1c3:	lea    rax,[rip+0x29123]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  40e1ca:	lea    rdx,[rip+0x29123]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  40e1d1:	jmp    40dd78 <__flatcc_gen_sort@@Base+0x1678>
  40e1d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e1e0:	movzx  eax,WORD PTR [rbx+0x58]
  40e1e4:	cmp    ax,0x4
  40e1e8:	je     40e448 <__flatcc_gen_sort@@Base+0x1d48>
  40e1ee:	jbe    40e220 <__flatcc_gen_sort@@Base+0x1b20>
  40e1f0:	cmp    ax,0x5
  40e1f4:	jne    40e242 <__flatcc_gen_sort@@Base+0x1b42>
  40e1f6:	mov    QWORD PTR [rsp+0x10],rbp
  40e1fb:	lea    r11,[rip+0x290eb]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  40e202:	lea    r10,[rip+0x290eb]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  40e209:	mov    ecx,0x5
  40e20e:	lea    rdx,[rip+0x33abf]        # 441cd4 <_IO_stdin_used@@Base+0x13cd4>
  40e215:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40e219:	add    rax,rdx
  40e21c:	notrack jmp rax
  40e21f:	nop
  40e220:	cmp    ax,0x3
  40e224:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40e22a:	mov    QWORD PTR [rsp+0x10],rbp
  40e22f:	lea    r11,[rip+0x290b7]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  40e236:	lea    r10,[rip+0x290b7]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  40e23d:	jmp    40dae0 <__flatcc_gen_sort@@Base+0x13e0>
  40e242:	cmp    ax,0x6
  40e246:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40e24c:	mov    QWORD PTR [rsp+0x10],rbp
  40e251:	lea    r11,[rip+0x29095]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  40e258:	lea    r10,[rip+0x29095]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  40e25f:	lea    r8,[rip+0x290b1]        # 437317 <_IO_stdin_used@@Base+0x9317>
  40e266:	jmp    40dbd0 <__flatcc_gen_sort@@Base+0x14d0>
  40e26b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e270:	cmp    ax,0x3
  40e274:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40e27a:	cmp    edx,0xb
  40e27d:	je     40e82f <__flatcc_gen_sort@@Base+0x212f>
  40e283:	lea    rax,[rsp+0x210]
  40e28b:	mov    QWORD PTR [rsp+0x18],rax
  40e290:	vmovsd xmm0,QWORD PTR [rbx+0x48]
  40e295:	lea    rcx,[rip+0x29130]        # 4373cc <_IO_stdin_used@@Base+0x93cc>
  40e29c:	mov    rdi,rax
  40e29f:	mov    edx,0x64
  40e2a4:	mov    esi,0x1
  40e2a9:	mov    eax,0x1
  40e2ae:	call   405420 <__sprintf_chk@plt>
  40e2b3:	mov    r8,QWORD PTR [rbx+0x88]
  40e2ba:	push   QWORD PTR [rsp+0x18]
  40e2be:	movzx  eax,WORD PTR [rbx+0x72]
  40e2c2:	mov    rdi,QWORD PTR [rbp+0xd0]
  40e2c9:	push   rax
  40e2ca:	mov    r9,rbp
  40e2cd:	mov    rcx,rbp
  40e2d0:	push   QWORD PTR [rbx+0x80]
  40e2d6:	lea    rdx,[rip+0x2a8a3]        # 438b80 <_IO_stdin_used@@Base+0xab80>
  40e2dd:	mov    esi,0x1
  40e2e2:	mov    rax,QWORD PTR [rsp+0x20]
  40e2e7:	push   rax
  40e2e8:	push   rax
  40e2e9:	xor    eax,eax
  40e2eb:	push   r12
  40e2ed:	push   r13
  40e2ef:	push   r14
  40e2f1:	call   405400 <__fprintf_chk@plt>
  40e2f6:	add    rsp,0x40
  40e2fa:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x11b0>
  40e2ff:	nop
  40e300:	cmp    ax,0x6
  40e304:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40e30a:	cmp    edx,0x9
  40e30d:	ja     40e509 <__flatcc_gen_sort@@Base+0x1e09>
  40e313:	lea    rcx,[rip+0x339e2]        # 441cfc <_IO_stdin_used@@Base+0x13cfc>
  40e31a:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40e31e:	add    rax,rcx
  40e321:	notrack jmp rax
  40e324:	nop    DWORD PTR [rax+0x0]
  40e328:	mov    rdi,QWORD PTR [rbp+0xd0]
  40e32f:	test   BYTE PTR [rdx+0x12],0x8
  40e333:	jne    40e5e0 <__flatcc_gen_sort@@Base+0x1ee0>
  40e339:	mov    r8,QWORD PTR [rbx+0x88]
  40e340:	push   QWORD PTR [rsp+0x8]
  40e344:	mov    r9,rbp
  40e347:	mov    rcx,rbp
  40e34a:	push   r12
  40e34c:	lea    rdx,[rip+0x2a905]        # 438c58 <_IO_stdin_used@@Base+0xac58>
  40e353:	mov    esi,0x1
  40e358:	push   r13
  40e35a:	xor    eax,eax
  40e35c:	push   r14
  40e35e:	call   405400 <__fprintf_chk@plt>
  40e363:	add    rsp,0x20
  40e367:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x11b0>
  40e36c:	nop    DWORD PTR [rax+0x0]
  40e370:	mov    rdi,QWORD PTR [rbp+0xd0]
  40e377:	test   BYTE PTR [rdx+0x12],0x8
  40e37b:	jne    40e5c0 <__flatcc_gen_sort@@Base+0x1ec0>
  40e381:	sub    rsp,0x8
  40e385:	mov    rax,QWORD PTR [rsp+0x10]
  40e38a:	mov    r8,QWORD PTR [rbx+0x88]
  40e391:	push   rax
  40e392:	mov    r9,rbp
  40e395:	mov    rcx,rbp
  40e398:	push   rax
  40e399:	lea    rdx,[rip+0x2a880]        # 438c20 <_IO_stdin_used@@Base+0xac20>
  40e3a0:	mov    esi,0x1
  40e3a5:	push   r12
  40e3a7:	xor    eax,eax
  40e3a9:	push   r13
  40e3ab:	push   r14
  40e3ad:	call   405400 <__fprintf_chk@plt>
  40e3b2:	add    rsp,0x30
  40e3b6:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x11b0>
  40e3bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e3c0:	mov    r8,QWORD PTR [rbx+0x88]
  40e3c7:	push   QWORD PTR [rsp+0x8]
  40e3cb:	mov    rdi,QWORD PTR [rbp+0xd0]
  40e3d2:	mov    r9,rbp
  40e3d5:	push   r12
  40e3d7:	mov    rcx,rbp
  40e3da:	lea    rdx,[rip+0x2a76f]        # 438b50 <_IO_stdin_used@@Base+0xab50>
  40e3e1:	push   r13
  40e3e3:	mov    esi,0x1
  40e3e8:	xor    eax,eax
  40e3ea:	push   r14
  40e3ec:	call   405400 <__fprintf_chk@plt>
  40e3f1:	add    rsp,0x20
  40e3f5:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x11b0>
  40e3fa:	nop    WORD PTR [rax+rax*1+0x0]
  40e400:	movzx  eax,WORD PTR [rbx+0x72]
  40e404:	mov    r8,QWORD PTR [rbx+0x88]
  40e40b:	push   rax
  40e40c:	mov    rdi,QWORD PTR [rbp+0xd0]
  40e413:	mov    r9,rbp
  40e416:	push   QWORD PTR [rbx+0x80]
  40e41c:	mov    rcx,rbp
  40e41f:	lea    rdx,[rip+0x2a6ea]        # 438b10 <_IO_stdin_used@@Base+0xab10>
  40e426:	push   QWORD PTR [rsp+0x18]
  40e42a:	mov    esi,0x1
  40e42f:	xor    eax,eax
  40e431:	push   r12
  40e433:	push   r13
  40e435:	push   r14
  40e437:	call   405400 <__fprintf_chk@plt>
  40e43c:	add    rsp,0x30
  40e440:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x11b0>
  40e445:	nop    DWORD PTR [rax]
  40e448:	mov    QWORD PTR [rsp+0x10],rbp
  40e44d:	lea    r11,[rip+0x28e99]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  40e454:	lea    r10,[rip+0x28e99]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  40e45b:	mov    ecx,0x5
  40e460:	lea    rdx,[rip+0x338bd]        # 441d24 <_IO_stdin_used@@Base+0x13d24>
  40e467:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40e46b:	add    rax,rdx
  40e46e:	notrack jmp rax
  40e471:	lea    r8,[rip+0x28e9f]        # 437317 <_IO_stdin_used@@Base+0x9317>
  40e478:	lea    rax,[rsp+0x210]
  40e480:	mov    QWORD PTR [rsp+0x28],r10
  40e485:	mov    QWORD PTR [rsp+0x20],r11
  40e48a:	mov    QWORD PTR [rsp+0x18],rax
  40e48f:	mov    r9,QWORD PTR [rbx+0x48]
  40e493:	lea    rcx,[rip+0x28f1e]        # 4373b8 <_IO_stdin_used@@Base+0x93b8>
  40e49a:	mov    rdi,rax
  40e49d:	mov    edx,0x64
  40e4a2:	mov    esi,0x1
  40e4a7:	xor    eax,eax
  40e4a9:	call   405420 <__sprintf_chk@plt>
  40e4ae:	mov    r11,QWORD PTR [rsp+0x20]
  40e4b3:	mov    r10,QWORD PTR [rsp+0x28]
  40e4b8:	jmp    40db28 <__flatcc_gen_sort@@Base+0x1428>
  40e4bd:	lea    r8,[rip+0x28e53]        # 437317 <_IO_stdin_used@@Base+0x9317>
  40e4c4:	lea    rax,[rsp+0x210]
  40e4cc:	mov    QWORD PTR [rsp+0x28],r10
  40e4d1:	mov    QWORD PTR [rsp+0x20],r11
  40e4d6:	mov    QWORD PTR [rsp+0x18],rax
  40e4db:	mov    r9,QWORD PTR [rbx+0x48]
  40e4df:	lea    rcx,[rip+0x28ec9]        # 4373af <_IO_stdin_used@@Base+0x93af>
  40e4e6:	jmp    40e49a <__flatcc_gen_sort@@Base+0x1d9a>
  40e4e8:	lea    rsi,[rip+0x3846f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e4ef:	mov    QWORD PTR [rsp+0x10],rsi
  40e4f4:	lea    r11,[rip+0x28e0c]        # 437307 <_IO_stdin_used@@Base+0x9307>
  40e4fb:	mov    r10,r11
  40e4fe:	xchg   ax,ax
  40e500:	cmp    eax,0x9
  40e503:	jbe    40e20e <__flatcc_gen_sort@@Base+0x1b0e>
  40e509:	call   40cb70 <__flatcc_gen_sort@@Base+0x470>
  40e50e:	xchg   ax,ax
  40e510:	lea    rsi,[rip+0x38447]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e517:	lea    r11,[rip+0x28ddc]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  40e51e:	mov    QWORD PTR [rsp+0x10],rsi
  40e523:	lea    r10,[rip+0x28dd8]        # 437302 <_IO_stdin_used@@Base+0x9302>
  40e52a:	jmp    40e500 <__flatcc_gen_sort@@Base+0x1e00>
  40e52c:	lea    rsi,[rip+0x3842b]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e533:	lea    r11,[rip+0x28d94]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  40e53a:	mov    QWORD PTR [rsp+0x10],rsi
  40e53f:	lea    r10,[rip+0x28d91]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  40e546:	jmp    40e500 <__flatcc_gen_sort@@Base+0x1e00>
  40e548:	lea    r11,[rip+0x28d78]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  40e54f:	lea    rsi,[rip+0x38408]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e556:	mov    QWORD PTR [rsp+0x10],rsi
  40e55b:	mov    r10,r11
  40e55e:	jmp    40e500 <__flatcc_gen_sort@@Base+0x1e00>
  40e560:	lea    rsi,[rip+0x383f7]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e567:	lea    r11,[rip+0x28d5f]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  40e56e:	mov    QWORD PTR [rsp+0x10],rsi
  40e573:	lea    r10,[rip+0x28d5c]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  40e57a:	jmp    40e500 <__flatcc_gen_sort@@Base+0x1e00>
  40e57c:	lea    rsi,[rip+0x383db]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e583:	lea    r11,[rip+0x28d6f]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  40e58a:	mov    QWORD PTR [rsp+0x10],rsi
  40e58f:	lea    r10,[rip+0x28d6b]        # 437301 <_IO_stdin_used@@Base+0x9301>
  40e596:	jmp    40e500 <__flatcc_gen_sort@@Base+0x1e00>
  40e59b:	lea    rsi,[rip+0x383bc]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e5a2:	lea    r11,[rip+0x28d34]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  40e5a9:	mov    QWORD PTR [rsp+0x10],rsi
  40e5ae:	lea    r10,[rip+0x28d31]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  40e5b5:	jmp    40e500 <__flatcc_gen_sort@@Base+0x1e00>
  40e5ba:	nop    WORD PTR [rax+rax*1+0x0]
  40e5c0:	lea    rdx,[rip+0x2a631]        # 438bf8 <_IO_stdin_used@@Base+0xabf8>
  40e5c7:	mov    esi,0x1
  40e5cc:	xor    eax,eax
  40e5ce:	call   405400 <__fprintf_chk@plt>
  40e5d3:	mov    rdi,QWORD PTR [rbp+0xd0]
  40e5da:	jmp    40e381 <__flatcc_gen_sort@@Base+0x1c81>
  40e5df:	nop
  40e5e0:	lea    rdx,[rip+0x2a611]        # 438bf8 <_IO_stdin_used@@Base+0xabf8>
  40e5e7:	mov    esi,0x1
  40e5ec:	xor    eax,eax
  40e5ee:	call   405400 <__fprintf_chk@plt>
  40e5f3:	mov    rdi,QWORD PTR [rbp+0xd0]
  40e5fa:	jmp    40e339 <__flatcc_gen_sort@@Base+0x1c39>
  40e5ff:	cmp    edx,0x9
  40e602:	ja     40e509 <__flatcc_gen_sort@@Base+0x1e09>
  40e608:	lea    rcx,[rip+0x3373d]        # 441d4c <_IO_stdin_used@@Base+0x13d4c>
  40e60f:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40e613:	add    rax,rcx
  40e616:	notrack jmp rax
  40e619:	nop    DWORD PTR [rax+0x0]
  40e620:	movzx  edx,WORD PTR [rbx+0x58]
  40e624:	cmp    dx,0x4
  40e628:	je     40ece1 <__flatcc_gen_sort@@Base+0x25e1>
  40e62e:	jbe    40e928 <__flatcc_gen_sort@@Base+0x2228>
  40e634:	cmp    dx,0x5
  40e638:	je     40ec67 <__flatcc_gen_sort@@Base+0x2567>
  40e63e:	cmp    dx,0x6
  40e642:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40e648:	lea    r11,[rip+0x28c69]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  40e64f:	lea    r10,[rip+0x28c6b]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  40e656:	lea    rax,[rip+0x38301]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e65d:	mov    QWORD PTR [rsp+0x10],rax
  40e662:	lea    r8,[rip+0x28ca6]        # 43730f <_IO_stdin_used@@Base+0x930f>
  40e669:	jmp    40dbd0 <__flatcc_gen_sort@@Base+0x14d0>
  40e66e:	lea    r8,[rip+0x28c99]        # 43730e <_IO_stdin_used@@Base+0x930e>
  40e675:	jmp    40e4c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40e67a:	lea    r8,[rip+0x28ca7]        # 437328 <_IO_stdin_used@@Base+0x9328>
  40e681:	jmp    40e4c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40e686:	lea    r8,[rip+0x28c92]        # 43731f <_IO_stdin_used@@Base+0x931f>
  40e68d:	jmp    40e4c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40e692:	lea    r8,[rip+0x28c76]        # 43730f <_IO_stdin_used@@Base+0x930f>
  40e699:	jmp    40e4c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40e69e:	lea    r8,[rip+0x28c84]        # 437329 <_IO_stdin_used@@Base+0x9329>
  40e6a5:	jmp    40e4c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40e6aa:	lea    r8,[rip+0x28c67]        # 437318 <_IO_stdin_used@@Base+0x9318>
  40e6b1:	jmp    40e4c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40e6b6:	lea    r8,[rip+0x28c62]        # 43731f <_IO_stdin_used@@Base+0x931f>
  40e6bd:	jmp    40e478 <__flatcc_gen_sort@@Base+0x1d78>
  40e6c2:	lea    r8,[rip+0x28c46]        # 43730f <_IO_stdin_used@@Base+0x930f>
  40e6c9:	jmp    40e478 <__flatcc_gen_sort@@Base+0x1d78>
  40e6ce:	lea    rax,[rip+0x38289]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e6d5:	mov    QWORD PTR [rsp+0x10],rax
  40e6da:	lea    r8,[rip+0x28c37]        # 437318 <_IO_stdin_used@@Base+0x9318>
  40e6e1:	jmp    40dbd0 <__flatcc_gen_sort@@Base+0x14d0>
  40e6e6:	movzx  edx,WORD PTR [rbx+0x58]
  40e6ea:	cmp    dx,0x4
  40e6ee:	je     40ec48 <__flatcc_gen_sort@@Base+0x2548>
  40e6f4:	jbe    40ec2b <__flatcc_gen_sort@@Base+0x252b>
  40e6fa:	cmp    dx,0x5
  40e6fe:	je     40ec0c <__flatcc_gen_sort@@Base+0x250c>
  40e704:	cmp    dx,0x6
  40e708:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40e70e:	lea    r11,[rip+0x28bc9]        # 4372de <_IO_stdin_used@@Base+0x92de>
  40e715:	lea    r10,[rip+0x28bcb]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  40e71c:	lea    rax,[rip+0x3823b]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e723:	mov    QWORD PTR [rsp+0x10],rax
  40e728:	lea    r8,[rip+0x28bfa]        # 437329 <_IO_stdin_used@@Base+0x9329>
  40e72f:	jmp    40dbd0 <__flatcc_gen_sort@@Base+0x14d0>
  40e734:	lea    r8,[rip+0x28bd3]        # 43730e <_IO_stdin_used@@Base+0x930e>
  40e73b:	jmp    40e478 <__flatcc_gen_sort@@Base+0x1d78>
  40e740:	lea    r8,[rip+0x28be1]        # 437328 <_IO_stdin_used@@Base+0x9328>
  40e747:	jmp    40e478 <__flatcc_gen_sort@@Base+0x1d78>
  40e74c:	lea    r8,[rip+0x28bcd]        # 437320 <_IO_stdin_used@@Base+0x9320>
  40e753:	jmp    40e4c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40e758:	lea    r8,[rip+0x28bca]        # 437329 <_IO_stdin_used@@Base+0x9329>
  40e75f:	jmp    40e478 <__flatcc_gen_sort@@Base+0x1d78>
  40e764:	lea    r8,[rip+0x28bb5]        # 437320 <_IO_stdin_used@@Base+0x9320>
  40e76b:	jmp    40e478 <__flatcc_gen_sort@@Base+0x1d78>
  40e770:	lea    rax,[rip+0x381e7]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e777:	mov    QWORD PTR [rsp+0x10],rax
  40e77c:	lea    r8,[rip+0x28b8b]        # 43730e <_IO_stdin_used@@Base+0x930e>
  40e783:	jmp    40dbd0 <__flatcc_gen_sort@@Base+0x14d0>
  40e788:	lea    rsi,[rip+0x381cf]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e78f:	mov    QWORD PTR [rsp+0x10],rsi
  40e794:	lea    r11,[rip+0x28b33]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  40e79b:	lea    r10,[rip+0x28b35]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  40e7a2:	nop    WORD PTR [rax+rax*1+0x0]
  40e7a8:	cmp    eax,0x9
  40e7ab:	jbe    40e460 <__flatcc_gen_sort@@Base+0x1d60>
  40e7b1:	jmp    40e509 <__flatcc_gen_sort@@Base+0x1e09>
  40e7b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e7c0:	lea    r11,[rip+0x28b00]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  40e7c7:	lea    rsi,[rip+0x38190]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e7ce:	mov    QWORD PTR [rsp+0x10],rsi
  40e7d3:	mov    r10,r11
  40e7d6:	jmp    40e7a8 <__flatcc_gen_sort@@Base+0x20a8>
  40e7d8:	lea    rsi,[rip+0x3817f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e7df:	lea    r11,[rip+0x28ae7]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  40e7e6:	mov    QWORD PTR [rsp+0x10],rsi
  40e7eb:	lea    r10,[rip+0x28ae4]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  40e7f2:	jmp    40e7a8 <__flatcc_gen_sort@@Base+0x20a8>
  40e7f4:	lea    rsi,[rip+0x38163]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e7fb:	lea    r11,[rip+0x28af7]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  40e802:	mov    QWORD PTR [rsp+0x10],rsi
  40e807:	lea    r10,[rip+0x28af3]        # 437301 <_IO_stdin_used@@Base+0x9301>
  40e80e:	jmp    40e7a8 <__flatcc_gen_sort@@Base+0x20a8>
  40e810:	lea    rsi,[rip+0x38147]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e817:	lea    r11,[rip+0x28abf]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  40e81e:	mov    QWORD PTR [rsp+0x10],rsi
  40e823:	lea    r10,[rip+0x28abc]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  40e82a:	jmp    40e7a8 <__flatcc_gen_sort@@Base+0x20a8>
  40e82f:	vxorps xmm0,xmm0,xmm0
  40e833:	lea    rax,[rsp+0x210]
  40e83b:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbx+0x48]
  40e840:	mov    QWORD PTR [rsp+0x18],rax
  40e845:	vcvtss2sd xmm0,xmm0,xmm0
  40e849:	lea    rcx,[rip+0x28b78]        # 4373c8 <_IO_stdin_used@@Base+0x93c8>
  40e850:	jmp    40e29c <__flatcc_gen_sort@@Base+0x1b9c>
  40e855:	lea    r11,[rip+0x28aab]        # 437307 <_IO_stdin_used@@Base+0x9307>
  40e85c:	lea    rsi,[rip+0x380fb]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e863:	mov    QWORD PTR [rsp+0x10],rsi
  40e868:	mov    r10,r11
  40e86b:	jmp    40e7a8 <__flatcc_gen_sort@@Base+0x20a8>
  40e870:	lea    rax,[rip+0x380e7]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40e877:	mov    QWORD PTR [rsp+0x10],rax
  40e87c:	lea    r11,[rip+0x28a77]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  40e883:	lea    r10,[rip+0x28a78]        # 437302 <_IO_stdin_used@@Base+0x9302>
  40e88a:	lea    r8,[rip+0x28a87]        # 437318 <_IO_stdin_used@@Base+0x9318>
  40e891:	jmp    40e478 <__flatcc_gen_sort@@Base+0x1d78>
  40e896:	lea    r8,[rip+0x28a7a]        # 437317 <_IO_stdin_used@@Base+0x9317>
  40e89d:	lea    rax,[rsp+0x210]
  40e8a5:	mov    QWORD PTR [rsp+0x18],rax
  40e8aa:	mov    r9,QWORD PTR [rbx+0x48]
  40e8ae:	lea    rcx,[rip+0x28b03]        # 4373b8 <_IO_stdin_used@@Base+0x93b8>
  40e8b5:	mov    rdi,rax
  40e8b8:	mov    edx,0x64
  40e8bd:	mov    esi,0x1
  40e8c2:	xor    eax,eax
  40e8c4:	call   405420 <__sprintf_chk@plt>
  40e8c9:	jmp    40e2b3 <__flatcc_gen_sort@@Base+0x1bb3>
  40e8ce:	lea    r8,[rip+0x28a42]        # 437317 <_IO_stdin_used@@Base+0x9317>
  40e8d5:	lea    rax,[rsp+0x210]
  40e8dd:	mov    QWORD PTR [rsp+0x18],rax
  40e8e2:	mov    r9,QWORD PTR [rbx+0x48]
  40e8e6:	lea    rcx,[rip+0x28ac2]        # 4373af <_IO_stdin_used@@Base+0x93af>
  40e8ed:	jmp    40e8b5 <__flatcc_gen_sort@@Base+0x21b5>
  40e8ef:	lea    r8,[rip+0x28a21]        # 437317 <_IO_stdin_used@@Base+0x9317>
  40e8f6:	lea    rax,[rsp+0x210]
  40e8fe:	movzx  r9d,BYTE PTR [rbx+0x48]
  40e903:	mov    QWORD PTR [rsp+0x18],rax
  40e908:	mov    rdi,rax
  40e90b:	lea    rcx,[rip+0x28aaf]        # 4373c1 <_IO_stdin_used@@Base+0x93c1>
  40e912:	mov    edx,0x64
  40e917:	mov    esi,0x1
  40e91c:	xor    eax,eax
  40e91e:	call   405420 <__sprintf_chk@plt>
  40e923:	jmp    40e2b3 <__flatcc_gen_sort@@Base+0x1bb3>
  40e928:	cmp    dx,0x3
  40e92c:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40e932:	lea    r11,[rip+0x2897f]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  40e939:	lea    r10,[rip+0x28981]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  40e940:	jmp    40e00d <__flatcc_gen_sort@@Base+0x190d>
  40e945:	movzx  edx,WORD PTR [rbx+0x58]
  40e949:	cmp    dx,0x4
  40e94d:	je     40ecc2 <__flatcc_gen_sort@@Base+0x25c2>
  40e953:	jbe    40eca5 <__flatcc_gen_sort@@Base+0x25a5>
  40e959:	cmp    dx,0x5
  40e95d:	je     40ec86 <__flatcc_gen_sort@@Base+0x2586>
  40e963:	cmp    dx,0x6
  40e967:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40e96d:	lea    r11,[rip+0x28943]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  40e974:	lea    r10,[rip+0x28945]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  40e97b:	jmp    40dc52 <__flatcc_gen_sort@@Base+0x1552>
  40e980:	lea    r8,[rip+0x28991]        # 437318 <_IO_stdin_used@@Base+0x9318>
  40e987:	jmp    40e8f6 <__flatcc_gen_sort@@Base+0x21f6>
  40e98c:	lea    r8,[rip+0x2897c]        # 43730f <_IO_stdin_used@@Base+0x930f>
  40e993:	jmp    40e8f6 <__flatcc_gen_sort@@Base+0x21f6>
  40e998:	lea    r8,[rip+0x2896f]        # 43730e <_IO_stdin_used@@Base+0x930e>
  40e99f:	jmp    40e89d <__flatcc_gen_sort@@Base+0x219d>
  40e9a4:	lea    r8,[rip+0x2897d]        # 437328 <_IO_stdin_used@@Base+0x9328>
  40e9ab:	jmp    40e89d <__flatcc_gen_sort@@Base+0x219d>
  40e9b0:	lea    r8,[rip+0x28968]        # 43731f <_IO_stdin_used@@Base+0x931f>
  40e9b7:	jmp    40e89d <__flatcc_gen_sort@@Base+0x219d>
  40e9bc:	lea    r8,[rip+0x2895d]        # 437320 <_IO_stdin_used@@Base+0x9320>
  40e9c3:	jmp    40e89d <__flatcc_gen_sort@@Base+0x219d>
  40e9c8:	lea    r8,[rip+0x28940]        # 43730f <_IO_stdin_used@@Base+0x930f>
  40e9cf:	jmp    40e89d <__flatcc_gen_sort@@Base+0x219d>
  40e9d4:	lea    r8,[rip+0x2894e]        # 437329 <_IO_stdin_used@@Base+0x9329>
  40e9db:	jmp    40e89d <__flatcc_gen_sort@@Base+0x219d>
  40e9e0:	lea    r8,[rip+0x28942]        # 437329 <_IO_stdin_used@@Base+0x9329>
  40e9e7:	jmp    40e8f6 <__flatcc_gen_sort@@Base+0x21f6>
  40e9ec:	lea    r8,[rip+0x2892d]        # 437320 <_IO_stdin_used@@Base+0x9320>
  40e9f3:	jmp    40e8f6 <__flatcc_gen_sort@@Base+0x21f6>
  40e9f8:	lea    r8,[rip+0x2890f]        # 43730e <_IO_stdin_used@@Base+0x930e>
  40e9ff:	jmp    40e8d5 <__flatcc_gen_sort@@Base+0x21d5>
  40ea04:	lea    r8,[rip+0x2891d]        # 437328 <_IO_stdin_used@@Base+0x9328>
  40ea0b:	jmp    40e8d5 <__flatcc_gen_sort@@Base+0x21d5>
  40ea10:	lea    r8,[rip+0x28901]        # 437318 <_IO_stdin_used@@Base+0x9318>
  40ea17:	jmp    40e8d5 <__flatcc_gen_sort@@Base+0x21d5>
  40ea1c:	lea    r8,[rip+0x288ec]        # 43730f <_IO_stdin_used@@Base+0x930f>
  40ea23:	jmp    40e8d5 <__flatcc_gen_sort@@Base+0x21d5>
  40ea28:	lea    r8,[rip+0x288f0]        # 43731f <_IO_stdin_used@@Base+0x931f>
  40ea2f:	jmp    40e8d5 <__flatcc_gen_sort@@Base+0x21d5>
  40ea34:	lea    r8,[rip+0x288dd]        # 437318 <_IO_stdin_used@@Base+0x9318>
  40ea3b:	jmp    40e89d <__flatcc_gen_sort@@Base+0x219d>
  40ea40:	lea    r8,[rip+0x288e2]        # 437329 <_IO_stdin_used@@Base+0x9329>
  40ea47:	jmp    40e8d5 <__flatcc_gen_sort@@Base+0x21d5>
  40ea4c:	lea    r8,[rip+0x288cd]        # 437320 <_IO_stdin_used@@Base+0x9320>
  40ea53:	jmp    40e8d5 <__flatcc_gen_sort@@Base+0x21d5>
  40ea58:	lea    r8,[rip+0x288af]        # 43730e <_IO_stdin_used@@Base+0x930e>
  40ea5f:	jmp    40e8f6 <__flatcc_gen_sort@@Base+0x21f6>
  40ea64:	lea    r8,[rip+0x288bd]        # 437328 <_IO_stdin_used@@Base+0x9328>
  40ea6b:	jmp    40e8f6 <__flatcc_gen_sort@@Base+0x21f6>
  40ea70:	lea    r8,[rip+0x288a8]        # 43731f <_IO_stdin_used@@Base+0x931f>
  40ea77:	jmp    40e8f6 <__flatcc_gen_sort@@Base+0x21f6>
  40ea7c:	mov    rax,QWORD PTR [rip+0x43565]        # 451fe8 <stderr@GLIBC_2.2.5>
  40ea83:	lea    rcx,[rip+0x29bee]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40ea8a:	mov    rdi,QWORD PTR [rax]
  40ea8d:	lea    rdx,[rip+0x287ff]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40ea94:	mov    esi,0x1
  40ea99:	lea    r9,[rip+0x21ab0]        # 430550 <_IO_stdin_used@@Base+0x2550>
  40eaa0:	mov    r8d,0x5e8
  40eaa6:	xor    eax,eax
  40eaa8:	call   405400 <__fprintf_chk@plt>
  40eaad:	lea    rcx,[rip+0x3338c]        # 441e40 <_IO_stdin_used@@Base+0x13e40>
  40eab4:	mov    edx,0x5e8
  40eab9:	lea    rsi,[rip+0x29bb8]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40eac0:	lea    rdi,[rip+0x29892]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40eac7:	call   405300 <__assert_fail@plt>
  40eacc:	mov    rax,QWORD PTR [rip+0x43515]        # 451fe8 <stderr@GLIBC_2.2.5>
  40ead3:	lea    rcx,[rip+0x29b9e]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40eada:	mov    rdi,QWORD PTR [rax]
  40eadd:	lea    rdx,[rip+0x287af]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40eae4:	mov    esi,0x1
  40eae9:	lea    r9,[rip+0x21948]        # 430438 <_IO_stdin_used@@Base+0x2438>
  40eaf0:	mov    r8d,0x5c0
  40eaf6:	xor    eax,eax
  40eaf8:	call   405400 <__fprintf_chk@plt>
  40eafd:	lea    rcx,[rip+0x3333c]        # 441e40 <_IO_stdin_used@@Base+0x13e40>
  40eb04:	mov    edx,0x5c0
  40eb09:	lea    rsi,[rip+0x29b68]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40eb10:	lea    rdi,[rip+0x29842]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40eb17:	call   405300 <__assert_fail@plt>
  40eb1c:	mov    rax,QWORD PTR [rip+0x434c5]        # 451fe8 <stderr@GLIBC_2.2.5>
  40eb23:	lea    rcx,[rip+0x20fbe]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40eb2a:	mov    rdi,QWORD PTR [rax]
  40eb2d:	lea    rdx,[rip+0x2875f]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40eb34:	mov    esi,0x1
  40eb39:	lea    r9,[rip+0x20f70]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  40eb40:	mov    r8d,0x104
  40eb46:	xor    eax,eax
  40eb48:	call   405400 <__fprintf_chk@plt>
  40eb4d:	lea    rcx,[rip+0x332d4]        # 441e28 <_IO_stdin_used@@Base+0x13e28>
  40eb54:	mov    edx,0x104
  40eb59:	lea    rsi,[rip+0x20f88]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40eb60:	lea    rdi,[rip+0x297f2]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40eb67:	call   405300 <__assert_fail@plt>
  40eb6c:	mov    rax,QWORD PTR [rip+0x43475]        # 451fe8 <stderr@GLIBC_2.2.5>
  40eb73:	lea    rcx,[rip+0x29afe]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40eb7a:	mov    rdi,QWORD PTR [rax]
  40eb7d:	lea    rdx,[rip+0x2870f]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40eb84:	mov    esi,0x1
  40eb89:	lea    r9,[rip+0x218f8]        # 430488 <_IO_stdin_used@@Base+0x2488>
  40eb90:	mov    r8d,0x5e3
  40eb96:	xor    eax,eax
  40eb98:	call   405400 <__fprintf_chk@plt>
  40eb9d:	lea    rcx,[rip+0x3329c]        # 441e40 <_IO_stdin_used@@Base+0x13e40>
  40eba4:	mov    edx,0x5e3
  40eba9:	lea    rsi,[rip+0x29ac8]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40ebb0:	lea    rdi,[rip+0x297a2]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40ebb7:	call   405300 <__assert_fail@plt>
  40ebbc:	mov    rax,QWORD PTR [rip+0x43425]        # 451fe8 <stderr@GLIBC_2.2.5>
  40ebc3:	lea    rcx,[rip+0x20f1e]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40ebca:	mov    rdi,QWORD PTR [rax]
  40ebcd:	lea    rdx,[rip+0x286bf]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40ebd4:	mov    esi,0x1
  40ebd9:	lea    r9,[rip+0x20ed0]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  40ebe0:	mov    r8d,0x8d
  40ebe6:	xor    eax,eax
  40ebe8:	call   405400 <__fprintf_chk@plt>
  40ebed:	lea    rcx,[rip+0x332ec]        # 441ee0 <_IO_stdin_used@@Base+0x13ee0>
  40ebf4:	mov    edx,0x8d
  40ebf9:	lea    rsi,[rip+0x20ee8]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40ec00:	lea    rdi,[rip+0x29752]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40ec07:	call   405300 <__assert_fail@plt>
  40ec0c:	lea    rsi,[rip+0x37d4b]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40ec13:	lea    r11,[rip+0x286c4]        # 4372de <_IO_stdin_used@@Base+0x92de>
  40ec1a:	mov    QWORD PTR [rsp+0x10],rsi
  40ec1f:	lea    r10,[rip+0x286c1]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  40ec26:	jmp    40e500 <__flatcc_gen_sort@@Base+0x1e00>
  40ec2b:	cmp    dx,0x3
  40ec2f:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40ec35:	lea    r11,[rip+0x286a2]        # 4372de <_IO_stdin_used@@Base+0x92de>
  40ec3c:	lea    r10,[rip+0x286a4]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  40ec43:	jmp    40e00d <__flatcc_gen_sort@@Base+0x190d>
  40ec48:	lea    rsi,[rip+0x37d0f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40ec4f:	lea    r11,[rip+0x28688]        # 4372de <_IO_stdin_used@@Base+0x92de>
  40ec56:	mov    QWORD PTR [rsp+0x10],rsi
  40ec5b:	lea    r10,[rip+0x28685]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  40ec62:	jmp    40e7a8 <__flatcc_gen_sort@@Base+0x20a8>
  40ec67:	lea    rsi,[rip+0x37cf0]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40ec6e:	lea    r11,[rip+0x28643]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  40ec75:	mov    QWORD PTR [rsp+0x10],rsi
  40ec7a:	lea    r10,[rip+0x28640]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  40ec81:	jmp    40e500 <__flatcc_gen_sort@@Base+0x1e00>
  40ec86:	lea    rsi,[rip+0x37cd1]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40ec8d:	lea    r11,[rip+0x28623]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  40ec94:	mov    QWORD PTR [rsp+0x10],rsi
  40ec99:	lea    r10,[rip+0x28620]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  40eca0:	jmp    40e500 <__flatcc_gen_sort@@Base+0x1e00>
  40eca5:	cmp    dx,0x3
  40eca9:	jne    40eb1c <__flatcc_gen_sort@@Base+0x241c>
  40ecaf:	lea    r11,[rip+0x28601]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  40ecb6:	lea    r10,[rip+0x28603]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  40ecbd:	jmp    40e00d <__flatcc_gen_sort@@Base+0x190d>
  40ecc2:	lea    rsi,[rip+0x37c95]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40ecc9:	lea    r11,[rip+0x285e7]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  40ecd0:	mov    QWORD PTR [rsp+0x10],rsi
  40ecd5:	lea    r10,[rip+0x285e4]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  40ecdc:	jmp    40e7a8 <__flatcc_gen_sort@@Base+0x20a8>
  40ece1:	lea    rsi,[rip+0x37c76]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40ece8:	lea    r11,[rip+0x285c9]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  40ecef:	mov    QWORD PTR [rsp+0x10],rsi
  40ecf4:	lea    r10,[rip+0x285c6]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  40ecfb:	jmp    40e7a8 <__flatcc_gen_sort@@Base+0x20a8>
  40ed00:	call   4052d0 <__stack_chk_fail@plt>
  40ed05:	mov    rax,QWORD PTR [rip+0x432dc]        # 451fe8 <stderr@GLIBC_2.2.5>
  40ed0c:	lea    rcx,[rip+0x29965]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40ed13:	mov    rdi,QWORD PTR [rax]
  40ed16:	lea    rdx,[rip+0x28576]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40ed1d:	mov    esi,0x1
  40ed22:	lea    r9,[rip+0x29d57]        # 438a80 <_IO_stdin_used@@Base+0xaa80>
  40ed29:	mov    r8d,0x596
  40ed2f:	xor    eax,eax
  40ed31:	call   405400 <__fprintf_chk@plt>
  40ed36:	lea    rcx,[rip+0x33103]        # 441e40 <_IO_stdin_used@@Base+0x13e40>
  40ed3d:	mov    edx,0x596
  40ed42:	lea    rsi,[rip+0x2992f]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40ed49:	lea    rdi,[rip+0x29609]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40ed50:	call   405300 <__assert_fail@plt>
  40ed55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40ed60:	push   r15
  40ed62:	mov    ecx,0x1d
  40ed67:	push   r14
  40ed69:	push   r13
  40ed6b:	push   r12
  40ed6d:	push   rbp
  40ed6e:	push   rbx
  40ed6f:	mov    rbx,rdi
  40ed72:	sub    rsp,0x1f8
  40ed79:	mov    rax,QWORD PTR fs:0x28
  40ed82:	mov    QWORD PTR [rsp+0x1e8],rax
  40ed8a:	xor    eax,eax
  40ed8c:	lea    rbp,[rsp+0x100]
  40ed94:	mov    rdi,rbp
  40ed97:	rep stos QWORD PTR es:[rdi],rax
  40ed9a:	mov    rax,QWORD PTR [rbx+0xd8]
  40eda1:	mov    r12,QWORD PTR [rax+0x40]
  40eda5:	test   r12,r12
  40eda8:	je     40fadf <__flatcc_gen_sort@@Base+0x33df>
  40edae:	xor    eax,eax
  40edb0:	lea    r13,[rip+0x29f51]        # 438d08 <_IO_stdin_used@@Base+0xad08>
  40edb7:	nop    WORD PTR [rax+rax*1+0x0]
  40edc0:	cmp    WORD PTR [r12+0x10],0x4
  40edc7:	jne    40ee06 <__flatcc_gen_sort@@Base+0x2706>
  40edc9:	mov    rdi,QWORD PTR [r12+0x18]
  40edce:	mov    rdx,rbp
  40edd1:	mov    rsi,r12
  40edd4:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40edd9:	sub    rsp,0x8
  40eddd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ede4:	push   rbp
  40ede5:	mov    r9,rbx
  40ede8:	mov    r8,rbp
  40edeb:	mov    rcx,rbx
  40edee:	mov    rdx,r13
  40edf1:	mov    esi,0x1
  40edf6:	xor    eax,eax
  40edf8:	call   405400 <__fprintf_chk@plt>
  40edfd:	pop    r14
  40edff:	pop    r15
  40ee01:	mov    eax,0x1
  40ee06:	mov    r12,QWORD PTR [r12]
  40ee0a:	test   r12,r12
  40ee0d:	jne    40edc0 <__flatcc_gen_sort@@Base+0x26c0>
  40ee0f:	test   eax,eax
  40ee11:	je     40ee2d <__flatcc_gen_sort@@Base+0x272d>
  40ee13:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ee1a:	lea    rdx,[rip+0x37b3c]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40ee21:	mov    esi,0x1
  40ee26:	xor    eax,eax
  40ee28:	call   405400 <__fprintf_chk@plt>
  40ee2d:	mov    rax,QWORD PTR [rbx+0xd8]
  40ee34:	mov    r12,QWORD PTR [rax+0x40]
  40ee38:	test   r12,r12
  40ee3b:	je     40fadf <__flatcc_gen_sort@@Base+0x33df>
  40ee41:	xor    eax,eax
  40ee43:	nop    DWORD PTR [rax+rax*1+0x0]
  40ee48:	cmp    WORD PTR [r12+0x10],0x0
  40ee4f:	jne    40efe1 <__flatcc_gen_sort@@Base+0x28e1>
  40ee55:	xor    eax,eax
  40ee57:	mov    ecx,0x1d
  40ee5c:	mov    rdi,rbp
  40ee5f:	rep stos QWORD PTR es:[rdi],rax
  40ee62:	xor    r14d,r14d
  40ee65:	mov    rax,QWORD PTR [r12+0x28]
  40ee6a:	test   rax,rax
  40ee6d:	je     40ee87 <__flatcc_gen_sort@@Base+0x2787>
  40ee6f:	nop
  40ee70:	movzx  edx,WORD PTR [rax+0x70]
  40ee74:	mov    rax,QWORD PTR [rax]
  40ee77:	and    edx,0x4
  40ee7a:	cmp    dx,0x1
  40ee7e:	adc    r14d,0x0
  40ee82:	test   rax,rax
  40ee85:	jne    40ee70 <__flatcc_gen_sort@@Base+0x2770>
  40ee87:	mov    rdi,QWORD PTR [r12+0x18]
  40ee8c:	mov    rdx,rbp
  40ee8f:	mov    rsi,r12
  40ee92:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40ee97:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ee9e:	mov    r8,rbp
  40eea1:	mov    rcx,rbx
  40eea4:	lea    rdx,[rip+0x29eb5]        # 438d60 <_IO_stdin_used@@Base+0xad60>
  40eeab:	mov    esi,0x1
  40eeb0:	xor    eax,eax
  40eeb2:	call   405400 <__fprintf_chk@plt>
  40eeb7:	mov    r13,QWORD PTR [r12+0x28]
  40eebc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eec3:	test   r13,r13
  40eec6:	je     40fbb0 <__flatcc_gen_sort@@Base+0x34b0>
  40eecc:	xor    r15d,r15d
  40eecf:	jmp    40ef3d <__flatcc_gen_sort@@Base+0x283d>
  40eed1:	nop    DWORD PTR [rax+0x0]
  40eed8:	test   r14d,r14d
  40eedb:	je     40ef10 <__flatcc_gen_sort@@Base+0x2810>
  40eedd:	test   r15b,0x3
  40eee1:	jne    40eef2 <__flatcc_gen_sort@@Base+0x27f2>
  40eee3:	mov    eax,r14d
  40eee6:	sub    eax,r15d
  40eee9:	cmp    eax,0x2
  40eeec:	jg     40fbd0 <__flatcc_gen_sort@@Base+0x34d0>
  40eef2:	lea    rdx,[rip+0x2941c]        # 438315 <_IO_stdin_used@@Base+0xa315>
  40eef9:	mov    esi,0x1
  40eefe:	xor    eax,eax
  40ef00:	call   405400 <__fprintf_chk@plt>
  40ef05:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ef0c:	nop    DWORD PTR [rax+0x0]
  40ef10:	mov    ecx,DWORD PTR [r13+0x88]
  40ef17:	lea    rdx,[rip+0x29490]        # 4383ae <_IO_stdin_used@@Base+0xa3ae>
  40ef1e:	mov    esi,0x1
  40ef23:	xor    eax,eax
  40ef25:	call   405400 <__fprintf_chk@plt>
  40ef2a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ef31:	inc    r15d
  40ef34:	mov    r13,QWORD PTR [r13+0x0]
  40ef38:	test   r13,r13
  40ef3b:	je     40ef70 <__flatcc_gen_sort@@Base+0x2870>
  40ef3d:	movzx  eax,WORD PTR [r13+0x70]
  40ef42:	test   al,0x4
  40ef44:	jne    40ef34 <__flatcc_gen_sort@@Base+0x2834>
  40ef46:	test   ah,0x1
  40ef49:	je     40ef34 <__flatcc_gen_sort@@Base+0x2834>
  40ef4b:	test   r15d,r15d
  40ef4e:	jne    40eed8 <__flatcc_gen_sort@@Base+0x27d8>
  40ef50:	lea    rdx,[rip+0x293d4]        # 43832b <_IO_stdin_used@@Base+0xa32b>
  40ef57:	mov    esi,0x1
  40ef5c:	xor    eax,eax
  40ef5e:	call   405400 <__fprintf_chk@plt>
  40ef63:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ef6a:	jmp    40ef10 <__flatcc_gen_sort@@Base+0x2810>
  40ef6c:	nop    DWORD PTR [rax+0x0]
  40ef70:	test   r15d,r15d
  40ef73:	je     40fbb0 <__flatcc_gen_sort@@Base+0x34b0>
  40ef79:	lea    rdx,[rip+0x29431]        # 4383b1 <_IO_stdin_used@@Base+0xa3b1>
  40ef80:	mov    esi,0x1
  40ef85:	xor    eax,eax
  40ef87:	call   405400 <__fprintf_chk@plt>
  40ef8c:	xor    eax,eax
  40ef8e:	mov    ecx,0x1d
  40ef93:	mov    rdi,rbp
  40ef96:	rep stos QWORD PTR es:[rdi],rax
  40ef99:	mov    rdx,rbp
  40ef9c:	mov    rsi,r12
  40ef9f:	mov    rdi,QWORD PTR [r12+0x18]
  40efa4:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40efa9:	sub    rsp,0x8
  40efad:	mov    rdi,QWORD PTR [rbx+0xd0]
  40efb4:	push   QWORD PTR [r12+0xa8]
  40efbc:	mov    r9,rbp
  40efbf:	mov    r8,rbx
  40efc2:	mov    rcx,rbx
  40efc5:	lea    rdx,[rip+0x29dc4]        # 438d90 <_IO_stdin_used@@Base+0xad90>
  40efcc:	mov    esi,0x1
  40efd1:	xor    eax,eax
  40efd3:	call   405400 <__fprintf_chk@plt>
  40efd8:	pop    r11
  40efda:	pop    r13
  40efdc:	mov    eax,0x1
  40efe1:	mov    r12,QWORD PTR [r12]
  40efe5:	test   r12,r12
  40efe8:	jne    40ee48 <__flatcc_gen_sort@@Base+0x2748>
  40efee:	mov    DWORD PTR [rsp+0xc],eax
  40eff2:	mov    rax,QWORD PTR [rbx+0xd8]
  40eff9:	mov    r15,QWORD PTR [rax+0x40]
  40effd:	test   r15,r15
  40f000:	je     40fc00 <__flatcc_gen_sort@@Base+0x3500>
  40f006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f010:	cmp    WORD PTR [r15+0x10],0x0
  40f016:	jne    40f671 <__flatcc_gen_sort@@Base+0x2f71>
  40f01c:	lea    rdx,[rsp+0x10]
  40f021:	xor    eax,eax
  40f023:	mov    rdi,rdx
  40f026:	mov    ecx,0x1d
  40f02b:	rep stos QWORD PTR es:[rdi],rax
  40f02e:	mov    rsi,r15
  40f031:	mov    QWORD PTR [rsp],rdx
  40f035:	xor    r12d,r12d
  40f038:	mov    rdi,QWORD PTR [r15+0x18]
  40f03c:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40f041:	mov    rax,QWORD PTR [r15+0x28]
  40f045:	test   rax,rax
  40f048:	je     40f067 <__flatcc_gen_sort@@Base+0x2967>
  40f04a:	nop    WORD PTR [rax+rax*1+0x0]
  40f050:	movzx  edx,WORD PTR [rax+0x70]
  40f054:	mov    rax,QWORD PTR [rax]
  40f057:	and    edx,0x4
  40f05a:	cmp    dx,0x1
  40f05e:	adc    r12d,0x0
  40f062:	test   rax,rax
  40f065:	jne    40f050 <__flatcc_gen_sort@@Base+0x2950>
  40f067:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f06e:	mov    rcx,QWORD PTR [rsp]
  40f072:	lea    rdx,[rip+0x29340]        # 4383b9 <_IO_stdin_used@@Base+0xa3b9>
  40f079:	mov    esi,0x1
  40f07e:	xor    eax,eax
  40f080:	call   405400 <__fprintf_chk@plt>
  40f085:	mov    ecx,0x1d
  40f08a:	xor    eax,eax
  40f08c:	mov    rdi,rbp
  40f08f:	rep stos QWORD PTR es:[rdi],rax
  40f092:	mov    r14,QWORD PTR [r15+0x28]
  40f096:	test   r14,r14
  40f099:	je     40f1a1 <__flatcc_gen_sort@@Base+0x2aa1>
  40f09f:	test   BYTE PTR [r14+0x70],0x4
  40f0a4:	jne    40f196 <__flatcc_gen_sort@@Base+0x2a96>
  40f0aa:	nop    WORD PTR [rax+rax*1+0x0]
  40f0b0:	lea    r13d,[rax+0x1]
  40f0b4:	test   r12d,r12d
  40f0b7:	je     40f0f0 <__flatcc_gen_sort@@Base+0x29f0>
  40f0b9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f0c0:	test   eax,eax
  40f0c2:	jne    40f5d0 <__flatcc_gen_sort@@Base+0x2ed0>
  40f0c8:	cmp    r12d,0x4
  40f0cc:	jle    40f5de <__flatcc_gen_sort@@Base+0x2ede>
  40f0d2:	lea    rcx,[rip+0x29233]        # 43830c <_IO_stdin_used@@Base+0xa30c>
  40f0d9:	lea    rdx,[rip+0x2922f]        # 43830f <_IO_stdin_used@@Base+0xa30f>
  40f0e0:	mov    esi,0x1
  40f0e5:	call   405400 <__fprintf_chk@plt>
  40f0ea:	nop    WORD PTR [rax+rax*1+0x0]
  40f0f0:	movzx  eax,WORD PTR [r14+0x28]
  40f0f5:	sub    eax,0x7
  40f0f8:	cmp    ax,0x8
  40f0fc:	ja     40fc2f <__flatcc_gen_sort@@Base+0x352f>
  40f102:	lea    rcx,[rip+0x32c6b]        # 441d74 <_IO_stdin_used@@Base+0x13d74>
  40f109:	movzx  eax,ax
  40f10c:	movsxd rax,DWORD PTR [rcx+rax*4]
  40f110:	add    rax,rcx
  40f113:	notrack jmp rax
  40f116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f120:	mov    rsi,QWORD PTR [r14+0x18]
  40f124:	mov    rdx,rbp
  40f127:	mov    rdi,QWORD PTR [rsi+0x18]
  40f12b:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40f130:	mov    rax,QWORD PTR [r14+0x18]
  40f134:	movzx  eax,WORD PTR [rax+0x10]
  40f138:	cmp    ax,0x3
  40f13c:	je     40f5a2 <__flatcc_gen_sort@@Base+0x2ea2>
  40f142:	jbe    40f598 <__flatcc_gen_sort@@Base+0x2e98>
  40f148:	cmp    ax,0x4
  40f14c:	jne    40fd6f <__flatcc_gen_sort@@Base+0x366f>
  40f152:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f159:	mov    r8,QWORD PTR [r14+0x88]
  40f160:	mov    rcx,rbp
  40f163:	lea    rdx,[rip+0x292c2]        # 43842c <_IO_stdin_used@@Base+0xa42c>
  40f16a:	mov    esi,0x1
  40f16f:	xor    eax,eax
  40f171:	call   405400 <__fprintf_chk@plt>
  40f176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f180:	mov    r14,QWORD PTR [r14]
  40f183:	test   r14,r14
  40f186:	je     40f1a1 <__flatcc_gen_sort@@Base+0x2aa1>
  40f188:	mov    eax,r13d
  40f18b:	test   BYTE PTR [r14+0x70],0x4
  40f190:	je     40f0b0 <__flatcc_gen_sort@@Base+0x29b0>
  40f196:	mov    r14,QWORD PTR [r14]
  40f199:	mov    r13d,eax
  40f19c:	test   r14,r14
  40f19f:	jne    40f188 <__flatcc_gen_sort@@Base+0x2a88>
  40f1a1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f1a8:	mov    rcx,QWORD PTR [rsp]
  40f1ac:	lea    rdx,[rip+0x29220]        # 4383d3 <_IO_stdin_used@@Base+0xa3d3>
  40f1b3:	mov    esi,0x1
  40f1b8:	xor    eax,eax
  40f1ba:	call   405400 <__fprintf_chk@plt>
  40f1bf:	mov    r14,QWORD PTR [r15+0x28]
  40f1c3:	test   r14,r14
  40f1c6:	je     40f620 <__flatcc_gen_sort@@Base+0x2f20>
  40f1cc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f1d3:	xor    r13d,r13d
  40f1d6:	jmp    40f237 <__flatcc_gen_sort@@Base+0x2b37>
  40f1d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f1e0:	cmp    r12d,0x4
  40f1e4:	jle    40f259 <__flatcc_gen_sort@@Base+0x2b59>
  40f1e6:	lea    rcx,[rip+0x2911f]        # 43830c <_IO_stdin_used@@Base+0xa30c>
  40f1ed:	lea    rdx,[rip+0x2911b]        # 43830f <_IO_stdin_used@@Base+0xa30f>
  40f1f4:	mov    esi,0x1
  40f1f9:	xor    eax,eax
  40f1fb:	call   405400 <__fprintf_chk@plt>
  40f200:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f207:	mov    rcx,QWORD PTR [r14+0x88]
  40f20e:	lea    rdx,[rip+0x29235]        # 43844a <_IO_stdin_used@@Base+0xa44a>
  40f215:	mov    esi,0x1
  40f21a:	xor    eax,eax
  40f21c:	call   405400 <__fprintf_chk@plt>
  40f221:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f228:	inc    r13d
  40f22b:	mov    r14,QWORD PTR [r14]
  40f22e:	test   r14,r14
  40f231:	je     40f630 <__flatcc_gen_sort@@Base+0x2f30>
  40f237:	test   BYTE PTR [r14+0x70],0x4
  40f23c:	jne    40f22b <__flatcc_gen_sort@@Base+0x2b2b>
  40f23e:	test   r12d,r12d
  40f241:	je     40f207 <__flatcc_gen_sort@@Base+0x2b07>
  40f243:	test   r13d,r13d
  40f246:	je     40f1e0 <__flatcc_gen_sort@@Base+0x2ae0>
  40f248:	test   r13b,0x3
  40f24c:	jne    40f259 <__flatcc_gen_sort@@Base+0x2b59>
  40f24e:	mov    eax,r12d
  40f251:	sub    eax,r13d
  40f254:	cmp    eax,0x2
  40f257:	jg     40f1e6 <__flatcc_gen_sort@@Base+0x2ae6>
  40f259:	lea    rdx,[rip+0x290b5]        # 438315 <_IO_stdin_used@@Base+0xa315>
  40f260:	mov    esi,0x1
  40f265:	xor    eax,eax
  40f267:	call   405400 <__fprintf_chk@plt>
  40f26c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f273:	jmp    40f207 <__flatcc_gen_sort@@Base+0x2b07>
  40f275:	nop    DWORD PTR [rax]
  40f278:	mov    rsi,QWORD PTR [r14+0x18]
  40f27c:	mov    rdx,rbp
  40f27f:	mov    rdi,QWORD PTR [rsi+0x18]
  40f283:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40f288:	mov    rax,QWORD PTR [r14+0x18]
  40f28c:	movzx  eax,WORD PTR [rax+0x10]
  40f290:	cmp    ax,0x1
  40f294:	je     40fb80 <__flatcc_gen_sort@@Base+0x3480>
  40f29a:	test   ax,ax
  40f29d:	je     40fb50 <__flatcc_gen_sort@@Base+0x3450>
  40f2a3:	cmp    ax,0x3
  40f2a7:	jne    40f560 <__flatcc_gen_sort@@Base+0x2e60>
  40f2ad:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f2b4:	mov    r8,QWORD PTR [r14+0x88]
  40f2bb:	mov    rcx,rbp
  40f2be:	lea    rdx,[rip+0x29133]        # 4383f8 <_IO_stdin_used@@Base+0xa3f8>
  40f2c5:	mov    esi,0x1
  40f2ca:	xor    eax,eax
  40f2cc:	call   405400 <__fprintf_chk@plt>
  40f2d1:	jmp    40f180 <__flatcc_gen_sort@@Base+0x2a80>
  40f2d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f2e0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f2e7:	mov    r8,QWORD PTR [r14+0x88]
  40f2ee:	mov    rcx,rbx
  40f2f1:	lea    rdx,[rip+0x2916d]        # 438465 <_IO_stdin_used@@Base+0xa465>
  40f2f8:	mov    esi,0x1
  40f2fd:	xor    eax,eax
  40f2ff:	call   405400 <__fprintf_chk@plt>
  40f304:	jmp    40f180 <__flatcc_gen_sort@@Base+0x2a80>
  40f309:	nop    DWORD PTR [rax+0x0]
  40f310:	mov    eax,DWORD PTR [r14+0x18]
  40f314:	cmp    eax,0x5
  40f317:	je     40fb40 <__flatcc_gen_sort@@Base+0x3440>
  40f31d:	cmp    eax,0xb
  40f320:	ja     40fccf <__flatcc_gen_sort@@Base+0x35cf>
  40f326:	lea    rdx,[rip+0x32a6b]        # 441d98 <_IO_stdin_used@@Base+0x13d98>
  40f32d:	movsxd rax,DWORD PTR [rdx+rax*4]
  40f331:	add    rax,rdx
  40f334:	notrack jmp rax
  40f337:	nop    WORD PTR [rax+rax*1+0x0]
  40f340:	cmp    DWORD PTR [r14+0x18],0xb
  40f345:	ja     40fc7f <__flatcc_gen_sort@@Base+0x357f>
  40f34b:	mov    eax,DWORD PTR [r14+0x18]
  40f34f:	lea    rsi,[rip+0x32a72]        # 441dc8 <_IO_stdin_used@@Base+0x13dc8>
  40f356:	movsxd rax,DWORD PTR [rsi+rax*4]
  40f35a:	add    rax,rsi
  40f35d:	notrack jmp rax
  40f360:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f367:	mov    r8,QWORD PTR [r14+0x88]
  40f36e:	mov    rcx,rbx
  40f371:	lea    rdx,[rip+0x29102]        # 43847a <_IO_stdin_used@@Base+0xa47a>
  40f378:	mov    esi,0x1
  40f37d:	xor    eax,eax
  40f37f:	call   405400 <__fprintf_chk@plt>
  40f384:	jmp    40f180 <__flatcc_gen_sort@@Base+0x2a80>
  40f389:	nop    DWORD PTR [rax+0x0]
  40f390:	lea    rcx,[rip+0x375c7]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40f397:	lea    r8,[rip+0x27f69]        # 437307 <_IO_stdin_used@@Base+0x9307>
  40f39e:	xchg   ax,ax
  40f3a0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f3a7:	mov    r9,QWORD PTR [r14+0x88]
  40f3ae:	lea    rdx,[rip+0x29090]        # 438445 <_IO_stdin_used@@Base+0xa445>
  40f3b5:	mov    esi,0x1
  40f3ba:	xor    eax,eax
  40f3bc:	call   405400 <__fprintf_chk@plt>
  40f3c1:	jmp    40f180 <__flatcc_gen_sort@@Base+0x2a80>
  40f3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f3d0:	lea    rcx,[rip+0x37587]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40f3d7:	lea    r8,[rip+0x27f1c]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  40f3de:	jmp    40f3a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40f3e0:	lea    rcx,[rip+0x37577]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40f3e7:	lea    r8,[rip+0x27ee0]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  40f3ee:	jmp    40f3a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40f3f0:	lea    rcx,[rip+0x37567]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40f3f7:	lea    r8,[rip+0x27ee0]        # 4372de <_IO_stdin_used@@Base+0x92de>
  40f3fe:	jmp    40f3a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40f400:	lea    rcx,[rip+0x37557]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40f407:	lea    r8,[rip+0x27eaa]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  40f40e:	jmp    40f3a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40f410:	lea    rcx,[rip+0x37547]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40f417:	lea    r8,[rip+0x27ea9]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  40f41e:	jmp    40f3a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40f420:	lea    rcx,[rip+0x37537]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40f427:	lea    r8,[rip+0x27ecb]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  40f42e:	jmp    40f3a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40f433:	nop    DWORD PTR [rax+rax*1+0x0]
  40f438:	lea    rcx,[rip+0x3751f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40f43f:	lea    r8,[rip+0x27e87]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  40f446:	jmp    40f3a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40f44b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f450:	lea    rcx,[rip+0x37507]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40f457:	lea    r8,[rip+0x27e7f]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  40f45e:	jmp    40f3a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40f463:	nop    DWORD PTR [rax+rax*1+0x0]
  40f468:	lea    rcx,[rip+0x374ef]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  40f46f:	lea    r8,[rip+0x27e41]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  40f476:	jmp    40f3a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40f47b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f480:	lea    r8,[rip+0x27e40]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  40f487:	nop    WORD PTR [rax+rax*1+0x0]
  40f490:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f497:	mov    r9,QWORD PTR [r14+0x88]
  40f49e:	mov    rcx,rbx
  40f4a1:	lea    rdx,[rip+0x28fa8]        # 438450 <_IO_stdin_used@@Base+0xa450>
  40f4a8:	mov    esi,0x1
  40f4ad:	xor    eax,eax
  40f4af:	call   405400 <__fprintf_chk@plt>
  40f4b4:	jmp    40f180 <__flatcc_gen_sort@@Base+0x2a80>
  40f4b9:	nop    DWORD PTR [rax+0x0]
  40f4c0:	lea    r8,[rip+0x27e40]        # 437307 <_IO_stdin_used@@Base+0x9307>
  40f4c7:	jmp    40f490 <__flatcc_gen_sort@@Base+0x2d90>
  40f4c9:	nop    DWORD PTR [rax+0x0]
  40f4d0:	lea    r8,[rip+0x27e2b]        # 437302 <_IO_stdin_used@@Base+0x9302>
  40f4d7:	jmp    40f490 <__flatcc_gen_sort@@Base+0x2d90>
  40f4d9:	nop    DWORD PTR [rax+0x0]
  40f4e0:	lea    r8,[rip+0x27df0]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  40f4e7:	jmp    40f490 <__flatcc_gen_sort@@Base+0x2d90>
  40f4e9:	nop    DWORD PTR [rax+0x0]
  40f4f0:	lea    r8,[rip+0x27df0]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  40f4f7:	jmp    40f490 <__flatcc_gen_sort@@Base+0x2d90>
  40f4f9:	nop    DWORD PTR [rax+0x0]
  40f500:	lea    r8,[rip+0x27dba]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  40f507:	jmp    40f490 <__flatcc_gen_sort@@Base+0x2d90>
  40f509:	nop    DWORD PTR [rax+0x0]
  40f510:	lea    r8,[rip+0x27ddd]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  40f517:	jmp    40f490 <__flatcc_gen_sort@@Base+0x2d90>
  40f51c:	nop    DWORD PTR [rax+0x0]
  40f520:	lea    r8,[rip+0x27dda]        # 437301 <_IO_stdin_used@@Base+0x9301>
  40f527:	jmp    40f490 <__flatcc_gen_sort@@Base+0x2d90>
  40f52c:	nop    DWORD PTR [rax+0x0]
  40f530:	lea    r8,[rip+0x27d9f]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  40f537:	jmp    40f490 <__flatcc_gen_sort@@Base+0x2d90>
  40f53c:	nop    DWORD PTR [rax+0x0]
  40f540:	lea    r8,[rip+0x27d9f]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  40f547:	jmp    40f490 <__flatcc_gen_sort@@Base+0x2d90>
  40f54c:	nop    DWORD PTR [rax+0x0]
  40f550:	lea    r8,[rip+0x27d69]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  40f557:	jmp    40f490 <__flatcc_gen_sort@@Base+0x2d90>
  40f55c:	nop    DWORD PTR [rax+0x0]
  40f560:	cmp    ax,0x4
  40f564:	jne    40fd1f <__flatcc_gen_sort@@Base+0x361f>
  40f56a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f571:	mov    r8,QWORD PTR [r14+0x88]
  40f578:	mov    rcx,rbp
  40f57b:	lea    rdx,[rip+0x28e95]        # 438417 <_IO_stdin_used@@Base+0xa417>
  40f582:	mov    esi,0x1
  40f587:	xor    eax,eax
  40f589:	call   405400 <__fprintf_chk@plt>
  40f58e:	jmp    40f180 <__flatcc_gen_sort@@Base+0x2a80>
  40f593:	nop    DWORD PTR [rax+rax*1+0x0]
  40f598:	cmp    ax,0x1
  40f59c:	ja     40fd6f <__flatcc_gen_sort@@Base+0x366f>
  40f5a2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f5a9:	mov    r8,QWORD PTR [r14+0x88]
  40f5b0:	mov    rcx,rbp
  40f5b3:	lea    rdx,[rip+0x28e98]        # 438452 <_IO_stdin_used@@Base+0xa452>
  40f5ba:	mov    esi,0x1
  40f5bf:	xor    eax,eax
  40f5c1:	call   405400 <__fprintf_chk@plt>
  40f5c6:	jmp    40f180 <__flatcc_gen_sort@@Base+0x2a80>
  40f5cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f5d0:	test   al,0x3
  40f5d2:	jne    40f5de <__flatcc_gen_sort@@Base+0x2ede>
  40f5d4:	mov    ecx,r12d
  40f5d7:	sub    ecx,eax
  40f5d9:	cmp    ecx,0x2
  40f5dc:	jg     40f600 <__flatcc_gen_sort@@Base+0x2f00>
  40f5de:	lea    rdx,[rip+0x28d30]        # 438315 <_IO_stdin_used@@Base+0xa315>
  40f5e5:	mov    esi,0x1
  40f5ea:	xor    eax,eax
  40f5ec:	call   405400 <__fprintf_chk@plt>
  40f5f1:	jmp    40f0f0 <__flatcc_gen_sort@@Base+0x29f0>
  40f5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f600:	lea    rcx,[rip+0x28d05]        # 43830c <_IO_stdin_used@@Base+0xa30c>
  40f607:	lea    rdx,[rip+0x28d01]        # 43830f <_IO_stdin_used@@Base+0xa30f>
  40f60e:	mov    esi,0x1
  40f613:	xor    eax,eax
  40f615:	call   405400 <__fprintf_chk@plt>
  40f61a:	jmp    40f0f0 <__flatcc_gen_sort@@Base+0x29f0>
  40f61f:	nop
  40f620:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f627:	nop    WORD PTR [rax+rax*1+0x0]
  40f630:	lea    rdx,[rip+0x37326]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40f637:	mov    esi,0x1
  40f63c:	xor    eax,eax
  40f63e:	call   405400 <__fprintf_chk@plt>
  40f643:	sub    rsp,0x8
  40f647:	mov    rcx,QWORD PTR [rsp+0x8]
  40f64c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f653:	push   rcx
  40f654:	mov    r9,rbx
  40f657:	mov    r8,rcx
  40f65a:	lea    rdx,[rip+0x297af]        # 438e10 <_IO_stdin_used@@Base+0xae10>
  40f661:	mov    esi,0x1
  40f666:	xor    eax,eax
  40f668:	call   405400 <__fprintf_chk@plt>
  40f66d:	pop    r9
  40f66f:	pop    r10
  40f671:	mov    r15,QWORD PTR [r15]
  40f674:	test   r15,r15
  40f677:	jne    40f010 <__flatcc_gen_sort@@Base+0x2910>
  40f67d:	mov    r8d,DWORD PTR [rsp+0xc]
  40f682:	test   r8d,r8d
  40f685:	jne    40fc10 <__flatcc_gen_sort@@Base+0x3510>
  40f68b:	mov    rax,QWORD PTR [rbx+0xd8]
  40f692:	mov    r12,QWORD PTR [rax+0x40]
  40f696:	test   r12,r12
  40f699:	je     40fadf <__flatcc_gen_sort@@Base+0x33df>
  40f69f:	xor    eax,eax
  40f6a1:	lea    r15,[rsp+0x10]
  40f6a6:	lea    r14,[rip+0x29853]        # 438f00 <_IO_stdin_used@@Base+0xaf00>
  40f6ad:	jmp    40f6bd <__flatcc_gen_sort@@Base+0x2fbd>
  40f6af:	nop
  40f6b0:	mov    r12,QWORD PTR [r12]
  40f6b4:	test   r12,r12
  40f6b7:	je     40f836 <__flatcc_gen_sort@@Base+0x3136>
  40f6bd:	cmp    WORD PTR [r12+0x10],0x4
  40f6c4:	jne    40f6b0 <__flatcc_gen_sort@@Base+0x2fb0>
  40f6c6:	xor    eax,eax
  40f6c8:	mov    ecx,0x1d
  40f6cd:	mov    rdi,r15
  40f6d0:	rep stos QWORD PTR es:[rdi],rax
  40f6d3:	mov    ecx,0x1d
  40f6d8:	mov    rdi,rbp
  40f6db:	rep stos QWORD PTR es:[rdi],rax
  40f6de:	mov    rdx,r15
  40f6e1:	mov    rsi,r12
  40f6e4:	mov    rdi,QWORD PTR [r12+0x18]
  40f6e9:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40f6ee:	mov    r13,QWORD PTR [r12+0x28]
  40f6f3:	test   r13,r13
  40f6f6:	jne    40f755 <__flatcc_gen_sort@@Base+0x3055>
  40f6f8:	jmp    40f801 <__flatcc_gen_sort@@Base+0x3101>
  40f6fd:	nop    DWORD PTR [rax]
  40f700:	mov    rsi,QWORD PTR [r13+0x18]
  40f704:	mov    rdx,rbp
  40f707:	mov    rdi,QWORD PTR [rsi+0x18]
  40f70b:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40f710:	mov    rdx,QWORD PTR [r13+0x8]
  40f714:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f71b:	mov    rax,QWORD PTR [rdx]
  40f71e:	mov    r9,QWORD PTR [rdx+0x8]
  40f722:	push   rax
  40f723:	mov    r8,r15
  40f726:	mov    rcx,r15
  40f729:	push   r9
  40f72b:	lea    rdx,[rip+0x29746]        # 438e78 <_IO_stdin_used@@Base+0xae78>
  40f732:	mov    esi,0x1
  40f737:	push   r15
  40f739:	push   r15
  40f73b:	push   rbp
  40f73c:	push   rax
  40f73d:	xor    eax,eax
  40f73f:	call   405400 <__fprintf_chk@plt>
  40f744:	add    rsp,0x30
  40f748:	mov    r13,QWORD PTR [r13+0x0]
  40f74c:	test   r13,r13
  40f74f:	je     40f801 <__flatcc_gen_sort@@Base+0x3101>
  40f755:	movzx  eax,WORD PTR [r13+0x28]
  40f75a:	cmp    ax,0xa
  40f75e:	je     40f7c0 <__flatcc_gen_sort@@Base+0x30c0>
  40f760:	cmp    ax,0xe
  40f764:	je     40f700 <__flatcc_gen_sort@@Base+0x3000>
  40f766:	test   ax,ax
  40f769:	je     40fb10 <__flatcc_gen_sort@@Base+0x3410>
  40f76f:	mov    rax,QWORD PTR [rip+0x42872]        # 451fe8 <stderr@GLIBC_2.2.5>
  40f776:	lea    rcx,[rip+0x28efb]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40f77d:	mov    rdi,QWORD PTR [rax]
  40f780:	lea    rdx,[rip+0x27b0c]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40f787:	mov    esi,0x1
  40f78c:	lea    r9,[rip+0x29875]        # 439008 <_IO_stdin_used@@Base+0xb008>
  40f793:	mov    r8d,0x648
  40f799:	xor    eax,eax
  40f79b:	call   405400 <__fprintf_chk@plt>
  40f7a0:	lea    rcx,[rip+0x326b9]        # 441e60 <_IO_stdin_used@@Base+0x13e60>
  40f7a7:	mov    edx,0x648
  40f7ac:	lea    rsi,[rip+0x28ec5]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40f7b3:	lea    rdi,[rip+0x28b9f]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40f7ba:	call   405300 <__assert_fail@plt>
  40f7bf:	nop
  40f7c0:	mov    rdx,QWORD PTR [r13+0x8]
  40f7c4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f7cb:	mov    rax,QWORD PTR [rdx]
  40f7ce:	mov    r9,QWORD PTR [rdx+0x8]
  40f7d2:	push   rax
  40f7d3:	mov    r8,r15
  40f7d6:	mov    rcx,r15
  40f7d9:	push   r9
  40f7db:	mov    rdx,r14
  40f7de:	mov    esi,0x1
  40f7e3:	push   r15
  40f7e5:	push   r15
  40f7e7:	push   rbx
  40f7e8:	push   rax
  40f7e9:	xor    eax,eax
  40f7eb:	call   405400 <__fprintf_chk@plt>
  40f7f0:	mov    r13,QWORD PTR [r13+0x0]
  40f7f4:	add    rsp,0x30
  40f7f8:	test   r13,r13
  40f7fb:	jne    40f755 <__flatcc_gen_sort@@Base+0x3055>
  40f801:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f808:	mov    r9,r15
  40f80b:	mov    r8,rbx
  40f80e:	mov    rcx,rbx
  40f811:	lea    rdx,[rip+0x29640]        # 438e58 <_IO_stdin_used@@Base+0xae58>
  40f818:	mov    esi,0x1
  40f81d:	xor    eax,eax
  40f81f:	call   405400 <__fprintf_chk@plt>
  40f824:	mov    r12,QWORD PTR [r12]
  40f828:	mov    eax,0x1
  40f82d:	test   r12,r12
  40f830:	jne    40f6bd <__flatcc_gen_sort@@Base+0x2fbd>
  40f836:	test   eax,eax
  40f838:	je     40f854 <__flatcc_gen_sort@@Base+0x3154>
  40f83a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f841:	lea    rdx,[rip+0x37115]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40f848:	mov    esi,0x1
  40f84d:	xor    eax,eax
  40f84f:	call   405400 <__fprintf_chk@plt>
  40f854:	mov    ecx,DWORD PTR [rsp+0xc]
  40f858:	test   ecx,ecx
  40f85a:	je     40fadf <__flatcc_gen_sort@@Base+0x33df>
  40f860:	mov    rax,QWORD PTR [rbx+0xd8]
  40f867:	mov    r14,QWORD PTR [rax+0x40]
  40f86b:	test   r14,r14
  40f86e:	je     40fadf <__flatcc_gen_sort@@Base+0x33df>
  40f874:	nop    DWORD PTR [rax+0x0]
  40f878:	cmp    WORD PTR [r14+0x10],0x0
  40f87e:	jne    40fad3 <__flatcc_gen_sort@@Base+0x33d3>
  40f884:	mov    rsi,r14
  40f887:	mov    rdi,rbx
  40f88a:	call   40d790 <__flatcc_gen_sort@@Base+0x1090>
  40f88f:	movzx  r12d,WORD PTR [r14+0xa4]
  40f897:	mov    ecx,0x1d
  40f89c:	and    r12w,0x8
  40f8a1:	sete   r15b
  40f8a5:	mov    rdi,rbp
  40f8a8:	xor    eax,eax
  40f8aa:	rep stos QWORD PTR es:[rdi],rax
  40f8ad:	mov    rdx,rbp
  40f8b0:	mov    rsi,r14
  40f8b3:	mov    rdi,QWORD PTR [r14+0x18]
  40f8b7:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40f8bc:	sub    rsp,0x8
  40f8c0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f8c7:	push   rbp
  40f8c8:	mov    r9,rbx
  40f8cb:	mov    r8,rbp
  40f8ce:	mov    rcx,rbp
  40f8d1:	lea    rdx,[rip+0x29760]        # 439038 <_IO_stdin_used@@Base+0xb038>
  40f8d8:	mov    esi,0x1
  40f8dd:	xor    eax,eax
  40f8df:	call   405400 <__fprintf_chk@plt>
  40f8e4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f8eb:	lea    rdx,[rip+0x28ba1]        # 438493 <_IO_stdin_used@@Base+0xa493>
  40f8f2:	mov    rcx,rbp
  40f8f5:	mov    esi,0x1
  40f8fa:	xor    eax,eax
  40f8fc:	call   405400 <__fprintf_chk@plt>
  40f901:	mov    r13,QWORD PTR [r14+0x30]
  40f905:	pop    rax
  40f906:	pop    rdx
  40f907:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f90e:	test   r13,r13
  40f911:	je     40fa60 <__flatcc_gen_sort@@Base+0x3360>
  40f917:	mov    DWORD PTR [rsp],0x0
  40f91e:	jmp    40f952 <__flatcc_gen_sort@@Base+0x3252>
  40f920:	sub    rsp,0x8
  40f924:	push   rax
  40f925:	mov    rcx,rbp
  40f928:	lea    rdx,[rip+0x29779]        # 4390a8 <_IO_stdin_used@@Base+0xb0a8>
  40f92f:	mov    esi,0x1
  40f934:	xor    eax,eax
  40f936:	call   405400 <__fprintf_chk@plt>
  40f93b:	pop    r9
  40f93d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f944:	pop    r10
  40f946:	mov    r13,QWORD PTR [r13+0x98]
  40f94d:	test   r13,r13
  40f950:	je     40f9c8 <__flatcc_gen_sort@@Base+0x32c8>
  40f952:	test   BYTE PTR [r13+0x70],0x4
  40f957:	jne    40f946 <__flatcc_gen_sort@@Base+0x3246>
  40f959:	mov    rax,QWORD PTR [r13+0x8]
  40f95d:	cmp    WORD PTR [r13+0x28],0xe
  40f963:	mov    r9,QWORD PTR [rax]
  40f966:	mov    r8,QWORD PTR [rax+0x8]
  40f96a:	mov    rax,QWORD PTR [r13+0x88]
  40f971:	jne    40f920 <__flatcc_gen_sort@@Base+0x3220>
  40f973:	mov    rdx,QWORD PTR [r13+0x18]
  40f977:	cmp    WORD PTR [rdx+0x10],0x4
  40f97c:	jne    40f920 <__flatcc_gen_sort@@Base+0x3220>
  40f97e:	mov    ecx,DWORD PTR [rsp+0xc]
  40f982:	mov    DWORD PTR [rsp],ecx
  40f985:	test   r12w,r12w
  40f989:	jne    40f920 <__flatcc_gen_sort@@Base+0x3220>
  40f98b:	sub    rsp,0x8
  40f98f:	push   rax
  40f990:	mov    rcx,rbp
  40f993:	lea    rdx,[rip+0x296e6]        # 439080 <_IO_stdin_used@@Base+0xb080>
  40f99a:	mov    esi,0x1
  40f99f:	xor    eax,eax
  40f9a1:	call   405400 <__fprintf_chk@plt>
  40f9a6:	pop    r11
  40f9a8:	pop    rax
  40f9a9:	mov    eax,DWORD PTR [rsp+0xc]
  40f9ad:	mov    r13,QWORD PTR [r13+0x98]
  40f9b4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f9bb:	mov    DWORD PTR [rsp],eax
  40f9be:	test   r13,r13
  40f9c1:	jne    40f952 <__flatcc_gen_sort@@Base+0x3252>
  40f9c3:	nop    DWORD PTR [rax+rax*1+0x0]
  40f9c8:	test   BYTE PTR [rsp],0x1
  40f9cc:	je     40fa60 <__flatcc_gen_sort@@Base+0x3360>
  40f9d2:	test   r15b,r15b
  40f9d5:	je     40fa60 <__flatcc_gen_sort@@Base+0x3360>
  40f9db:	mov    r12,QWORD PTR [r14+0x30]
  40f9df:	test   r12,r12
  40f9e2:	jne    40f9fd <__flatcc_gen_sort@@Base+0x32fd>
  40f9e4:	jmp    40fa60 <__flatcc_gen_sort@@Base+0x3360>
  40f9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f9f0:	mov    r12,QWORD PTR [r12+0x98]
  40f9f8:	test   r12,r12
  40f9fb:	je     40fa60 <__flatcc_gen_sort@@Base+0x3360>
  40f9fd:	test   BYTE PTR [r12+0x70],0x4
  40fa03:	jne    40f9f0 <__flatcc_gen_sort@@Base+0x32f0>
  40fa05:	cmp    WORD PTR [r12+0x28],0xe
  40fa0c:	jne    40f9f0 <__flatcc_gen_sort@@Base+0x32f0>
  40fa0e:	mov    rax,QWORD PTR [r12+0x18]
  40fa13:	cmp    WORD PTR [rax+0x10],0x4
  40fa18:	jne    40f9f0 <__flatcc_gen_sort@@Base+0x32f0>
  40fa1a:	mov    rax,QWORD PTR [r12+0x8]
  40fa1f:	sub    rsp,0x8
  40fa23:	mov    r8,QWORD PTR [rax+0x8]
  40fa27:	push   QWORD PTR [r12+0x88]
  40fa2f:	mov    r9,QWORD PTR [rax]
  40fa32:	mov    esi,0x1
  40fa37:	mov    rcx,rbp
  40fa3a:	lea    rdx,[rip+0x2968f]        # 4390d0 <_IO_stdin_used@@Base+0xb0d0>
  40fa41:	xor    eax,eax
  40fa43:	call   405400 <__fprintf_chk@plt>
  40fa48:	mov    r12,QWORD PTR [r12+0x98]
  40fa50:	pop    rsi
  40fa51:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fa58:	pop    r8
  40fa5a:	test   r12,r12
  40fa5d:	jne    40f9fd <__flatcc_gen_sort@@Base+0x32fd>
  40fa5f:	nop
  40fa60:	mov    rcx,rbp
  40fa63:	lea    rdx,[rip+0x29696]        # 439100 <_IO_stdin_used@@Base+0xb100>
  40fa6a:	mov    esi,0x1
  40fa6f:	xor    eax,eax
  40fa71:	call   405400 <__fprintf_chk@plt>
  40fa76:	xor    eax,eax
  40fa78:	mov    ecx,0x1d
  40fa7d:	mov    rdi,rbp
  40fa80:	rep stos QWORD PTR es:[rdi],rax
  40fa83:	mov    rdx,rbp
  40fa86:	mov    rsi,r14
  40fa89:	mov    rdi,QWORD PTR [r14+0x18]
  40fa8d:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  40fa92:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fa99:	push   rbp
  40fa9a:	mov    rcx,rbx
  40fa9d:	mov    r9,rbp
  40faa0:	push   rbp
  40faa1:	mov    r8,rbx
  40faa4:	lea    rdx,[rip+0x2968d]        # 439138 <_IO_stdin_used@@Base+0xb138>
  40faab:	mov    esi,0x1
  40fab0:	xor    eax,eax
  40fab2:	call   405400 <__fprintf_chk@plt>
  40fab7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fabe:	lea    rdx,[rip+0x36e98]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40fac5:	mov    esi,0x1
  40faca:	xor    eax,eax
  40facc:	call   405400 <__fprintf_chk@plt>
  40fad1:	pop    rdx
  40fad2:	pop    rcx
  40fad3:	mov    r14,QWORD PTR [r14]
  40fad6:	test   r14,r14
  40fad9:	jne    40f878 <__flatcc_gen_sort@@Base+0x3178>
  40fadf:	xor    eax,eax
  40fae1:	mov    rbx,QWORD PTR [rsp+0x1e8]
  40fae9:	xor    rbx,QWORD PTR fs:0x28
  40faf2:	jne    40fdbf <__flatcc_gen_sort@@Base+0x36bf>
  40faf8:	add    rsp,0x1f8
  40faff:	pop    rbx
  40fb00:	pop    rbp
  40fb01:	pop    r12
  40fb03:	pop    r13
  40fb05:	pop    r14
  40fb07:	pop    r15
  40fb09:	ret    
  40fb0a:	nop    WORD PTR [rax+rax*1+0x0]
  40fb10:	sub    rsp,0x8
  40fb14:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb1b:	push   r15
  40fb1d:	mov    esi,0x1
  40fb22:	mov    r9,r15
  40fb25:	mov    r8,r15
  40fb28:	mov    rcx,r15
  40fb2b:	lea    rdx,[rip+0x2945e]        # 438f90 <_IO_stdin_used@@Base+0xaf90>
  40fb32:	xor    eax,eax
  40fb34:	call   405400 <__fprintf_chk@plt>
  40fb39:	pop    rsi
  40fb3a:	pop    rdi
  40fb3b:	jmp    40f748 <__flatcc_gen_sort@@Base+0x3048>
  40fb40:	mov    rcx,rbx
  40fb43:	lea    r8,[rip+0x277a3]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  40fb4a:	jmp    40f3a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40fb4f:	nop
  40fb50:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb57:	mov    r8,QWORD PTR [r14+0x88]
  40fb5e:	mov    rcx,rbp
  40fb61:	lea    rdx,[rip+0x288a0]        # 438408 <_IO_stdin_used@@Base+0xa408>
  40fb68:	mov    esi,0x1
  40fb6d:	xor    eax,eax
  40fb6f:	call   405400 <__fprintf_chk@plt>
  40fb74:	jmp    40f180 <__flatcc_gen_sort@@Base+0x2a80>
  40fb79:	nop    DWORD PTR [rax+0x0]
  40fb80:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb87:	mov    r8,QWORD PTR [r14+0x88]
  40fb8e:	mov    rcx,rbp
  40fb91:	lea    rdx,[rip+0x28854]        # 4383ec <_IO_stdin_used@@Base+0xa3ec>
  40fb98:	mov    esi,0x1
  40fb9d:	xor    eax,eax
  40fb9f:	call   405400 <__fprintf_chk@plt>
  40fba4:	jmp    40f180 <__flatcc_gen_sort@@Base+0x2a80>
  40fba9:	nop    DWORD PTR [rax+0x0]
  40fbb0:	lea    rdx,[rip+0x287fb]        # 4383b2 <_IO_stdin_used@@Base+0xa3b2>
  40fbb7:	mov    esi,0x1
  40fbbc:	xor    eax,eax
  40fbbe:	call   405400 <__fprintf_chk@plt>
  40fbc3:	jmp    40ef8c <__flatcc_gen_sort@@Base+0x288c>
  40fbc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fbd0:	lea    rcx,[rip+0x36d86]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40fbd7:	lea    rdx,[rip+0x28731]        # 43830f <_IO_stdin_used@@Base+0xa30f>
  40fbde:	mov    esi,0x1
  40fbe3:	xor    eax,eax
  40fbe5:	call   405400 <__fprintf_chk@plt>
  40fbea:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fbf1:	jmp    40ef10 <__flatcc_gen_sort@@Base+0x2810>
  40fbf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc00:	mov    eax,DWORD PTR [rsp+0xc]
  40fc04:	test   eax,eax
  40fc06:	je     40fadf <__flatcc_gen_sort@@Base+0x33df>
  40fc0c:	nop    DWORD PTR [rax+0x0]
  40fc10:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc17:	lea    rdx,[rip+0x36d3f]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40fc1e:	mov    esi,0x1
  40fc23:	xor    eax,eax
  40fc25:	call   405400 <__fprintf_chk@plt>
  40fc2a:	jmp    40f68b <__flatcc_gen_sort@@Base+0x2f8b>
  40fc2f:	mov    rax,QWORD PTR [rip+0x423b2]        # 451fe8 <stderr@GLIBC_2.2.5>
  40fc36:	lea    rcx,[rip+0x28a3b]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40fc3d:	mov    rdi,QWORD PTR [rax]
  40fc40:	lea    rdx,[rip+0x2764c]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40fc47:	mov    esi,0x1
  40fc4c:	lea    r9,[rip+0x28c95]        # 4388e8 <_IO_stdin_used@@Base+0xa8e8>
  40fc53:	mov    r8d,0x4b9
  40fc59:	xor    eax,eax
  40fc5b:	call   405400 <__fprintf_chk@plt>
  40fc60:	lea    rcx,[rip+0x32209]        # 441e70 <_IO_stdin_used@@Base+0x13e70>
  40fc67:	mov    edx,0x4b9
  40fc6c:	lea    rsi,[rip+0x28a05]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40fc73:	lea    rdi,[rip+0x286df]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40fc7a:	call   405300 <__assert_fail@plt>
  40fc7f:	mov    rax,QWORD PTR [rip+0x42362]        # 451fe8 <stderr@GLIBC_2.2.5>
  40fc86:	lea    rcx,[rip+0x1fe5b]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40fc8d:	mov    rdi,QWORD PTR [rax]
  40fc90:	lea    rdx,[rip+0x275fc]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40fc97:	mov    esi,0x1
  40fc9c:	lea    r9,[rip+0x1fe0d]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  40fca3:	mov    r8d,0x60
  40fca9:	xor    eax,eax
  40fcab:	call   405400 <__fprintf_chk@plt>
  40fcb0:	lea    rcx,[rip+0x321d9]        # 441e90 <_IO_stdin_used@@Base+0x13e90>
  40fcb7:	mov    edx,0x60
  40fcbc:	lea    rsi,[rip+0x1fe25]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40fcc3:	lea    rdi,[rip+0x2868f]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40fcca:	call   405300 <__assert_fail@plt>
  40fccf:	mov    rax,QWORD PTR [rip+0x42312]        # 451fe8 <stderr@GLIBC_2.2.5>
  40fcd6:	lea    rcx,[rip+0x1fe0b]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40fcdd:	mov    rdi,QWORD PTR [rax]
  40fce0:	lea    rdx,[rip+0x275ac]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40fce7:	mov    esi,0x1
  40fcec:	lea    r9,[rip+0x1fdbd]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  40fcf3:	mov    r8d,0x8d
  40fcf9:	xor    eax,eax
  40fcfb:	call   405400 <__fprintf_chk@plt>
  40fd00:	lea    rcx,[rip+0x321d9]        # 441ee0 <_IO_stdin_used@@Base+0x13ee0>
  40fd07:	mov    edx,0x8d
  40fd0c:	lea    rsi,[rip+0x1fdd5]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  40fd13:	lea    rdi,[rip+0x2863f]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40fd1a:	call   405300 <__assert_fail@plt>
  40fd1f:	mov    rax,QWORD PTR [rip+0x422c2]        # 451fe8 <stderr@GLIBC_2.2.5>
  40fd26:	lea    rcx,[rip+0x2894b]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40fd2d:	mov    rdi,QWORD PTR [rax]
  40fd30:	lea    rdx,[rip+0x2755c]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40fd37:	mov    esi,0x1
  40fd3c:	lea    r9,[rip+0x2906d]        # 438db0 <_IO_stdin_used@@Base+0xadb0>
  40fd43:	mov    r8d,0x495
  40fd49:	xor    eax,eax
  40fd4b:	call   405400 <__fprintf_chk@plt>
  40fd50:	lea    rcx,[rip+0x32119]        # 441e70 <_IO_stdin_used@@Base+0x13e70>
  40fd57:	mov    edx,0x495
  40fd5c:	lea    rsi,[rip+0x28915]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40fd63:	lea    rdi,[rip+0x285ef]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40fd6a:	call   405300 <__assert_fail@plt>
  40fd6f:	mov    rax,QWORD PTR [rip+0x42272]        # 451fe8 <stderr@GLIBC_2.2.5>
  40fd76:	lea    rcx,[rip+0x288fb]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40fd7d:	mov    rdi,QWORD PTR [rax]
  40fd80:	lea    rdx,[rip+0x2750c]        # 437293 <_IO_stdin_used@@Base+0x9293>
  40fd87:	mov    esi,0x1
  40fd8c:	lea    r9,[rip+0x2904d]        # 438de0 <_IO_stdin_used@@Base+0xade0>
  40fd93:	mov    r8d,0x4a5
  40fd99:	xor    eax,eax
  40fd9b:	call   405400 <__fprintf_chk@plt>
  40fda0:	lea    rcx,[rip+0x320c9]        # 441e70 <_IO_stdin_used@@Base+0x13e70>
  40fda7:	mov    edx,0x4a5
  40fdac:	lea    rsi,[rip+0x288c5]        # 438678 <_IO_stdin_used@@Base+0xa678>
  40fdb3:	lea    rdi,[rip+0x2859f]        # 438359 <_IO_stdin_used@@Base+0xa359>
  40fdba:	call   405300 <__assert_fail@plt>
  40fdbf:	call   4052d0 <__stack_chk_fail@plt>
  40fdc4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40fdcf:	nop

000000000040fdd0 <__flatcc_fb_gen_common_c_builder_header@@Base>:
  40fdd0:	endbr64 
  40fdd4:	push   rbp
  40fdd5:	lea    rbp,[rdi+0x66]
  40fdd9:	mov    rcx,rbp
  40fddc:	push   rbx
  40fddd:	mov    rbx,rdi
  40fde0:	lea    rdx,[rip+0x286c2]        # 4384a9 <_IO_stdin_used@@Base+0xa4a9>
  40fde7:	sub    rsp,0x8
  40fdeb:	mov    rdi,QWORD PTR [rdi+0xd0]
  40fdf2:	mov    esi,0x1
  40fdf7:	xor    eax,eax
  40fdf9:	call   405400 <__fprintf_chk@plt>
  40fdfe:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe05:	mov    rcx,rbp
  40fe08:	lea    rdx,[rip+0x286b7]        # 4384c6 <_IO_stdin_used@@Base+0xa4c6>
  40fe0f:	mov    esi,0x1
  40fe14:	xor    eax,eax
  40fe16:	call   405400 <__fprintf_chk@plt>
  40fe1b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe22:	lea    rdx,[rip+0x2103f]        # 430e68 <_IO_stdin_used@@Base+0x2e68>
  40fe29:	mov    esi,0x1
  40fe2e:	xor    eax,eax
  40fe30:	call   405400 <__fprintf_chk@plt>
  40fe35:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe3c:	lea    rdx,[rip+0x2933d]        # 439180 <_IO_stdin_used@@Base+0xb180>
  40fe43:	mov    esi,0x1
  40fe48:	xor    eax,eax
  40fe4a:	call   405400 <__fprintf_chk@plt>
  40fe4f:	mov    rax,QWORD PTR [rbx+0xe0]
  40fe56:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe5d:	mov    r8d,DWORD PTR [rax+0xac]
  40fe64:	test   r8d,r8d
  40fe67:	jne    410880 <__flatcc_fb_gen_common_c_builder_header@@Base+0xab0>
  40fe6d:	lea    rdx,[rip+0x2866f]        # 4384e3 <_IO_stdin_used@@Base+0xa4e3>
  40fe74:	mov    esi,0x1
  40fe79:	xor    eax,eax
  40fe7b:	call   405400 <__fprintf_chk@plt>
  40fe80:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe87:	lea    rdx,[rip+0x2932a]        # 4391b8 <_IO_stdin_used@@Base+0xb1b8>
  40fe8e:	mov    esi,0x1
  40fe93:	xor    eax,eax
  40fe95:	call   405400 <__fprintf_chk@plt>
  40fe9a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fea1:	mov    esi,0x1
  40fea6:	xor    eax,eax
  40fea8:	lea    rdx,[rip+0x2864b]        # 4384fa <_IO_stdin_used@@Base+0xa4fa>
  40feaf:	call   405400 <__fprintf_chk@plt>
  40feb4:	mov    ecx,0x10
  40feb9:	lea    rdi,[rip+0x28642]        # 438502 <_IO_stdin_used@@Base+0xa502>
  40fec0:	mov    rsi,rbx
  40fec3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40fec5:	seta   al
  40fec8:	sbb    al,0x0
  40feca:	test   al,al
  40fecc:	jne    410900 <__flatcc_fb_gen_common_c_builder_header@@Base+0xb30>
  40fed2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fed9:	mov    r8,rbx
  40fedc:	mov    rcx,rbx
  40fedf:	lea    rdx,[rip+0x2862c]        # 438512 <_IO_stdin_used@@Base+0xa512>
  40fee6:	mov    esi,0x1
  40feeb:	xor    eax,eax
  40feed:	call   405400 <__fprintf_chk@plt>
  40fef2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fef9:	mov    rcx,rbx
  40fefc:	mov    esi,0x1
  40ff01:	xor    eax,eax
  40ff03:	mov    r8,rbx
  40ff06:	lea    rdx,[rip+0x29423]        # 439330 <_IO_stdin_used@@Base+0xb330>
  40ff0d:	call   405400 <__fprintf_chk@plt>
  40ff12:	mov    ecx,0xd
  40ff17:	lea    rdi,[rip+0x27600]        # 43751e <_IO_stdin_used@@Base+0x951e>
  40ff1e:	mov    rsi,rbx
  40ff21:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ff23:	seta   al
  40ff26:	sbb    al,0x0
  40ff28:	test   al,al
  40ff2a:	jne    4108c0 <__flatcc_fb_gen_common_c_builder_header@@Base+0xaf0>
  40ff30:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ff37:	lea    rdx,[rip+0x36a1f]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  40ff3e:	mov    esi,0x1
  40ff43:	xor    eax,eax
  40ff45:	call   405400 <__fprintf_chk@plt>
  40ff4a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ff51:	mov    rcx,rbx
  40ff54:	lea    rdx,[rip+0x2945d]        # 4393b8 <_IO_stdin_used@@Base+0xb3b8>
  40ff5b:	mov    esi,0x1
  40ff60:	xor    eax,eax
  40ff62:	call   405400 <__fprintf_chk@plt>
  40ff67:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ff6e:	mov    rcx,rbx
  40ff71:	lea    rdx,[rip+0x297b8]        # 439730 <_IO_stdin_used@@Base+0xb730>
  40ff78:	mov    esi,0x1
  40ff7d:	xor    eax,eax
  40ff7f:	call   405400 <__fprintf_chk@plt>
  40ff84:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ff8b:	mov    r9,rbx
  40ff8e:	mov    r8,rbx
  40ff91:	mov    rcx,rbx
  40ff94:	lea    rdx,[rip+0x29e65]        # 439e00 <_IO_stdin_used@@Base+0xbe00>
  40ff9b:	mov    esi,0x1
  40ffa0:	xor    eax,eax
  40ffa2:	call   405400 <__fprintf_chk@plt>
  40ffa7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ffae:	mov    rcx,rbx
  40ffb1:	lea    rdx,[rip+0x29ed8]        # 439e90 <_IO_stdin_used@@Base+0xbe90>
  40ffb8:	mov    esi,0x1
  40ffbd:	xor    eax,eax
  40ffbf:	call   405400 <__fprintf_chk@plt>
  40ffc4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ffcb:	mov    rcx,rbx
  40ffce:	lea    rdx,[rip+0x2a97b]        # 43a950 <_IO_stdin_used@@Base+0xc950>
  40ffd5:	mov    esi,0x1
  40ffda:	xor    eax,eax
  40ffdc:	call   405400 <__fprintf_chk@plt>
  40ffe1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ffe8:	mov    rcx,rbx
  40ffeb:	lea    rdx,[rip+0x2ad3e]        # 43ad30 <_IO_stdin_used@@Base+0xcd30>
  40fff2:	mov    esi,0x1
  40fff7:	xor    eax,eax
  40fff9:	call   405400 <__fprintf_chk@plt>
  40fffe:	mov    rdi,QWORD PTR [rbx+0xd0]
  410005:	mov    rcx,rbx
  410008:	lea    rdx,[rip+0x2b359]        # 43b368 <_IO_stdin_used@@Base+0xd368>
  41000f:	mov    esi,0x1
  410014:	xor    eax,eax
  410016:	call   405400 <__fprintf_chk@plt>
  41001b:	mov    rdi,QWORD PTR [rbx+0xd0]
  410022:	mov    r8,rbx
  410025:	mov    rcx,rbx
  410028:	lea    rdx,[rip+0x2b7b9]        # 43b7e8 <_IO_stdin_used@@Base+0xd7e8>
  41002f:	mov    esi,0x1
  410034:	xor    eax,eax
  410036:	call   405400 <__fprintf_chk@plt>
  41003b:	mov    rdi,QWORD PTR [rbx+0xd0]
  410042:	mov    r9,rbx
  410045:	mov    r8,rbx
  410048:	mov    rcx,rbx
  41004b:	lea    rdx,[rip+0x2bf0e]        # 43bf60 <_IO_stdin_used@@Base+0xdf60>
  410052:	mov    esi,0x1
  410057:	xor    eax,eax
  410059:	call   405400 <__fprintf_chk@plt>
  41005e:	mov    rdi,QWORD PTR [rbx+0xd0]
  410065:	mov    rcx,rbx
  410068:	lea    rdx,[rip+0x2c439]        # 43c4a8 <_IO_stdin_used@@Base+0xe4a8>
  41006f:	mov    esi,0x1
  410074:	xor    eax,eax
  410076:	call   405400 <__fprintf_chk@plt>
  41007b:	mov    rdi,QWORD PTR [rbx+0xd0]
  410082:	mov    rcx,rbx
  410085:	lea    rdx,[rip+0x2c89c]        # 43c928 <_IO_stdin_used@@Base+0xe928>
  41008c:	mov    esi,0x1
  410091:	xor    eax,eax
  410093:	call   405400 <__fprintf_chk@plt>
  410098:	mov    rdi,QWORD PTR [rbx+0xd0]
  41009f:	mov    rcx,rbx
  4100a2:	lea    rdx,[rip+0x2ca0f]        # 43cab8 <_IO_stdin_used@@Base+0xeab8>
  4100a9:	mov    esi,0x1
  4100ae:	xor    eax,eax
  4100b0:	call   405400 <__fprintf_chk@plt>
  4100b5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4100bc:	mov    r8,rbx
  4100bf:	mov    rcx,rbx
  4100c2:	lea    rdx,[rip+0x2cd4f]        # 43ce18 <_IO_stdin_used@@Base+0xee18>
  4100c9:	mov    esi,0x1
  4100ce:	xor    eax,eax
  4100d0:	call   405400 <__fprintf_chk@plt>
  4100d5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4100dc:	mov    rcx,rbx
  4100df:	lea    rdx,[rip+0x2cf3a]        # 43d020 <_IO_stdin_used@@Base+0xf020>
  4100e6:	mov    esi,0x1
  4100eb:	xor    eax,eax
  4100ed:	call   405400 <__fprintf_chk@plt>
  4100f2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4100f9:	mov    r9,rbx
  4100fc:	mov    r8,rbx
  4100ff:	mov    rcx,rbx
  410102:	lea    rdx,[rip+0x2d287]        # 43d390 <_IO_stdin_used@@Base+0xf390>
  410109:	mov    esi,0x1
  41010e:	xor    eax,eax
  410110:	call   405400 <__fprintf_chk@plt>
  410115:	sub    rsp,0x8
  410119:	push   rbx
  41011a:	mov    rdi,QWORD PTR [rbx+0xd0]
  410121:	mov    r9,rbx
  410124:	mov    r8,rbx
  410127:	mov    rcx,rbx
  41012a:	lea    rdx,[rip+0x2d75f]        # 43d890 <_IO_stdin_used@@Base+0xf890>
  410131:	mov    esi,0x1
  410136:	xor    eax,eax
  410138:	call   405400 <__fprintf_chk@plt>
  41013d:	mov    rdi,QWORD PTR [rbx+0xd0]
  410144:	mov    r8,rbx
  410147:	mov    rcx,rbx
  41014a:	lea    rdx,[rip+0x2d84f]        # 43d9a0 <_IO_stdin_used@@Base+0xf9a0>
  410151:	mov    esi,0x1
  410156:	xor    eax,eax
  410158:	call   405400 <__fprintf_chk@plt>
  41015d:	mov    rdi,QWORD PTR [rbx+0xd0]
  410164:	mov    r9,rbx
  410167:	mov    r8,rbx
  41016a:	mov    rcx,rbx
  41016d:	lea    rdx,[rip+0x2db94]        # 43dd08 <_IO_stdin_used@@Base+0xfd08>
  410174:	mov    esi,0x1
  410179:	xor    eax,eax
  41017b:	mov    QWORD PTR [rsp],rbx
  41017f:	call   405400 <__fprintf_chk@plt>
  410184:	mov    rdi,QWORD PTR [rbx+0xd0]
  41018b:	mov    r8,rbx
  41018e:	mov    rcx,rbx
  410191:	lea    rdx,[rip+0x2e170]        # 43e308 <_IO_stdin_used@@Base+0x10308>
  410198:	mov    esi,0x1
  41019d:	xor    eax,eax
  41019f:	call   405400 <__fprintf_chk@plt>
  4101a4:	mov    rdi,QWORD PTR [rbx+0xd0]
  4101ab:	mov    rcx,rbx
  4101ae:	lea    rdx,[rip+0x2e30b]        # 43e4c0 <_IO_stdin_used@@Base+0x104c0>
  4101b5:	mov    esi,0x1
  4101ba:	xor    eax,eax
  4101bc:	call   405400 <__fprintf_chk@plt>
  4101c1:	mov    rdi,QWORD PTR [rbx+0xd0]
  4101c8:	mov    rcx,rbx
  4101cb:	lea    rdx,[rip+0x2e516]        # 43e6e8 <_IO_stdin_used@@Base+0x106e8>
  4101d2:	mov    esi,0x1
  4101d7:	xor    eax,eax
  4101d9:	call   405400 <__fprintf_chk@plt>
  4101de:	mov    rdi,QWORD PTR [rbx+0xd0]
  4101e5:	mov    rcx,rbx
  4101e8:	lea    rdx,[rip+0x2e8b9]        # 43eaa8 <_IO_stdin_used@@Base+0x10aa8>
  4101ef:	mov    esi,0x1
  4101f4:	xor    eax,eax
  4101f6:	call   405400 <__fprintf_chk@plt>
  4101fb:	mov    rdi,QWORD PTR [rbx+0xd0]
  410202:	mov    rcx,rbx
  410205:	lea    rdx,[rip+0x2eb5c]        # 43ed68 <_IO_stdin_used@@Base+0x10d68>
  41020c:	mov    esi,0x1
  410211:	xor    eax,eax
  410213:	call   405400 <__fprintf_chk@plt>
  410218:	mov    rdi,QWORD PTR [rbx+0xd0]
  41021f:	mov    r8,rbx
  410222:	mov    rcx,rbx
  410225:	lea    rdx,[rip+0x2ef54]        # 43f180 <_IO_stdin_used@@Base+0x11180>
  41022c:	mov    esi,0x1
  410231:	xor    eax,eax
  410233:	call   405400 <__fprintf_chk@plt>
  410238:	mov    rdi,QWORD PTR [rbx+0xd0]
  41023f:	mov    rcx,rbx
  410242:	lea    rdx,[rip+0x2f027]        # 43f270 <_IO_stdin_used@@Base+0x11270>
  410249:	mov    esi,0x1
  41024e:	xor    eax,eax
  410250:	call   405400 <__fprintf_chk@plt>
  410255:	mov    rdi,QWORD PTR [rbx+0xd0]
  41025c:	mov    rcx,rbx
  41025f:	lea    rdx,[rip+0x2f272]        # 43f4d8 <_IO_stdin_used@@Base+0x114d8>
  410266:	mov    esi,0x1
  41026b:	xor    eax,eax
  41026d:	call   405400 <__fprintf_chk@plt>
  410272:	mov    rdi,QWORD PTR [rbx+0xd0]
  410279:	mov    r8,rbx
  41027c:	mov    rcx,rbx
  41027f:	lea    rdx,[rip+0x2f5ca]        # 43f850 <_IO_stdin_used@@Base+0x11850>
  410286:	mov    esi,0x1
  41028b:	xor    eax,eax
  41028d:	call   405400 <__fprintf_chk@plt>
  410292:	mov    rdi,QWORD PTR [rbx+0xd0]
  410299:	mov    r8,rbx
  41029c:	mov    rcx,rbx
  41029f:	lea    rdx,[rip+0x2f9fa]        # 43fca0 <_IO_stdin_used@@Base+0x11ca0>
  4102a6:	mov    esi,0x1
  4102ab:	xor    eax,eax
  4102ad:	call   405400 <__fprintf_chk@plt>
  4102b2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4102b9:	mov    r8,rbx
  4102bc:	mov    rcx,rbx
  4102bf:	lea    rdx,[rip+0x2fc72]        # 43ff38 <_IO_stdin_used@@Base+0x11f38>
  4102c6:	mov    esi,0x1
  4102cb:	xor    eax,eax
  4102cd:	call   405400 <__fprintf_chk@plt>
  4102d2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4102d9:	mov    r8,rbx
  4102dc:	mov    rcx,rbx
  4102df:	lea    rdx,[rip+0x30052]        # 440338 <_IO_stdin_used@@Base+0x12338>
  4102e6:	mov    esi,0x1
  4102eb:	xor    eax,eax
  4102ed:	call   405400 <__fprintf_chk@plt>
  4102f2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4102f9:	mov    r9,rbx
  4102fc:	mov    r8,rbx
  4102ff:	mov    rcx,rbx
  410302:	lea    rdx,[rip+0x3013f]        # 440448 <_IO_stdin_used@@Base+0x12448>
  410309:	mov    esi,0x1
  41030e:	xor    eax,eax
  410310:	call   405400 <__fprintf_chk@plt>
  410315:	mov    rdi,QWORD PTR [rbx+0xd0]
  41031c:	mov    r8,rbx
  41031f:	mov    rcx,rbx
  410322:	lea    rdx,[rip+0x301af]        # 4404d8 <_IO_stdin_used@@Base+0x124d8>
  410329:	mov    esi,0x1
  41032e:	xor    eax,eax
  410330:	call   405400 <__fprintf_chk@plt>
  410335:	mov    rdi,QWORD PTR [rbx+0xd0]
  41033c:	mov    rcx,rbx
  41033f:	lea    rdx,[rip+0x304e2]        # 440828 <_IO_stdin_used@@Base+0x12828>
  410346:	mov    esi,0x1
  41034b:	xor    eax,eax
  41034d:	call   405400 <__fprintf_chk@plt>
  410352:	mov    rdi,QWORD PTR [rbx+0xd0]
  410359:	mov    rcx,rbx
  41035c:	lea    rdx,[rip+0x3074d]        # 440ab0 <_IO_stdin_used@@Base+0x12ab0>
  410363:	mov    esi,0x1
  410368:	xor    eax,eax
  41036a:	call   405400 <__fprintf_chk@plt>
  41036f:	mov    rdi,QWORD PTR [rbx+0xd0]
  410376:	mov    rcx,rbx
  410379:	lea    rdx,[rip+0x309c0]        # 440d40 <_IO_stdin_used@@Base+0x12d40>
  410380:	mov    esi,0x1
  410385:	xor    eax,eax
  410387:	call   405400 <__fprintf_chk@plt>
  41038c:	mov    rdi,QWORD PTR [rbx+0xd0]
  410393:	mov    r9,rbx
  410396:	mov    r8,rbx
  410399:	mov    rcx,rbx
  41039c:	lea    rdx,[rip+0x30f55]        # 4412f8 <_IO_stdin_used@@Base+0x132f8>
  4103a3:	mov    esi,0x1
  4103a8:	xor    eax,eax
  4103aa:	call   405400 <__fprintf_chk@plt>
  4103af:	mov    rdi,QWORD PTR [rbx+0xd0]
  4103b6:	mov    rcx,rbx
  4103b9:	lea    rdx,[rip+0x30fc8]        # 441388 <_IO_stdin_used@@Base+0x13388>
  4103c0:	mov    esi,0x1
  4103c5:	xor    eax,eax
  4103c7:	call   405400 <__fprintf_chk@plt>
  4103cc:	mov    rdi,QWORD PTR [rbx+0xd0]
  4103d3:	mov    rcx,rbx
  4103d6:	lea    rdx,[rip+0x30fdb]        # 4413b8 <_IO_stdin_used@@Base+0x133b8>
  4103dd:	mov    esi,0x1
  4103e2:	xor    eax,eax
  4103e4:	call   405400 <__fprintf_chk@plt>
  4103e9:	mov    rdi,QWORD PTR [rbx+0xd0]
  4103f0:	mov    rcx,rbx
  4103f3:	lea    rdx,[rip+0x30fe6]        # 4413e0 <_IO_stdin_used@@Base+0x133e0>
  4103fa:	mov    esi,0x1
  4103ff:	xor    eax,eax
  410401:	call   405400 <__fprintf_chk@plt>
  410406:	mov    rdi,QWORD PTR [rbx+0xd0]
  41040d:	mov    rcx,rbx
  410410:	lea    rdx,[rip+0x30ff9]        # 441410 <_IO_stdin_used@@Base+0x13410>
  410417:	mov    esi,0x1
  41041c:	xor    eax,eax
  41041e:	call   405400 <__fprintf_chk@plt>
  410423:	mov    rdi,QWORD PTR [rbx+0xd0]
  41042a:	mov    r8,rbx
  41042d:	mov    rcx,rbx
  410430:	lea    rdx,[rip+0x31001]        # 441438 <_IO_stdin_used@@Base+0x13438>
  410437:	mov    esi,0x1
  41043c:	xor    eax,eax
  41043e:	call   405400 <__fprintf_chk@plt>
  410443:	mov    rdi,QWORD PTR [rbx+0xd0]
  41044a:	mov    rcx,rbx
  41044d:	lea    rdx,[rip+0x31014]        # 441468 <_IO_stdin_used@@Base+0x13468>
  410454:	mov    esi,0x1
  410459:	xor    eax,eax
  41045b:	call   405400 <__fprintf_chk@plt>
  410460:	mov    rdi,QWORD PTR [rbx+0xd0]
  410467:	mov    rcx,rbx
  41046a:	lea    rdx,[rip+0x3101f]        # 441490 <_IO_stdin_used@@Base+0x13490>
  410471:	mov    esi,0x1
  410476:	xor    eax,eax
  410478:	call   405400 <__fprintf_chk@plt>
  41047d:	mov    rdi,QWORD PTR [rbx+0xd0]
  410484:	mov    rcx,rbx
  410487:	lea    rdx,[rip+0x31032]        # 4414c0 <_IO_stdin_used@@Base+0x134c0>
  41048e:	mov    esi,0x1
  410493:	xor    eax,eax
  410495:	call   405400 <__fprintf_chk@plt>
  41049a:	mov    rdi,QWORD PTR [rbx+0xd0]
  4104a1:	mov    rcx,rbx
  4104a4:	lea    rdx,[rip+0x3103d]        # 4414e8 <_IO_stdin_used@@Base+0x134e8>
  4104ab:	mov    esi,0x1
  4104b0:	xor    eax,eax
  4104b2:	call   405400 <__fprintf_chk@plt>
  4104b7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4104be:	mov    rcx,rbx
  4104c1:	lea    rdx,[rip+0x31050]        # 441518 <_IO_stdin_used@@Base+0x13518>
  4104c8:	mov    esi,0x1
  4104cd:	xor    eax,eax
  4104cf:	call   405400 <__fprintf_chk@plt>
  4104d4:	mov    rdi,QWORD PTR [rbx+0xd0]
  4104db:	mov    rcx,rbx
  4104de:	lea    rdx,[rip+0x3105b]        # 441540 <_IO_stdin_used@@Base+0x13540>
  4104e5:	mov    esi,0x1
  4104ea:	xor    eax,eax
  4104ec:	call   405400 <__fprintf_chk@plt>
  4104f1:	mov    rdi,QWORD PTR [rbx+0xd0]
  4104f8:	mov    rcx,rbx
  4104fb:	lea    rdx,[rip+0x3106e]        # 441570 <_IO_stdin_used@@Base+0x13570>
  410502:	mov    esi,0x1
  410507:	xor    eax,eax
  410509:	call   405400 <__fprintf_chk@plt>
  41050e:	mov    rdi,QWORD PTR [rbx+0xd0]
  410515:	mov    rcx,rbx
  410518:	lea    rdx,[rip+0x31079]        # 441598 <_IO_stdin_used@@Base+0x13598>
  41051f:	mov    esi,0x1
  410524:	xor    eax,eax
  410526:	call   405400 <__fprintf_chk@plt>
  41052b:	mov    rdi,QWORD PTR [rbx+0xd0]
  410532:	mov    rcx,rbx
  410535:	lea    rdx,[rip+0x3108c]        # 4415c8 <_IO_stdin_used@@Base+0x135c8>
  41053c:	mov    esi,0x1
  410541:	xor    eax,eax
  410543:	call   405400 <__fprintf_chk@plt>
  410548:	mov    rdi,QWORD PTR [rbx+0xd0]
  41054f:	mov    rcx,rbx
  410552:	lea    rdx,[rip+0x31097]        # 4415f0 <_IO_stdin_used@@Base+0x135f0>
  410559:	mov    esi,0x1
  41055e:	xor    eax,eax
  410560:	call   405400 <__fprintf_chk@plt>
  410565:	mov    rdi,QWORD PTR [rbx+0xd0]
  41056c:	mov    rcx,rbx
  41056f:	lea    rdx,[rip+0x310aa]        # 441620 <_IO_stdin_used@@Base+0x13620>
  410576:	mov    esi,0x1
  41057b:	xor    eax,eax
  41057d:	call   405400 <__fprintf_chk@plt>
  410582:	mov    rdi,QWORD PTR [rbx+0xd0]
  410589:	mov    rcx,rbx
  41058c:	lea    rdx,[rip+0x310b5]        # 441648 <_IO_stdin_used@@Base+0x13648>
  410593:	mov    esi,0x1
  410598:	xor    eax,eax
  41059a:	call   405400 <__fprintf_chk@plt>
  41059f:	mov    rdi,QWORD PTR [rbx+0xd0]
  4105a6:	mov    rcx,rbx
  4105a9:	lea    rdx,[rip+0x310c8]        # 441678 <_IO_stdin_used@@Base+0x13678>
  4105b0:	mov    esi,0x1
  4105b5:	xor    eax,eax
  4105b7:	call   405400 <__fprintf_chk@plt>
  4105bc:	mov    rdi,QWORD PTR [rbx+0xd0]
  4105c3:	mov    rcx,rbx
  4105c6:	lea    rdx,[rip+0x310d3]        # 4416a0 <_IO_stdin_used@@Base+0x136a0>
  4105cd:	mov    esi,0x1
  4105d2:	xor    eax,eax
  4105d4:	call   405400 <__fprintf_chk@plt>
  4105d9:	mov    rdi,QWORD PTR [rbx+0xd0]
  4105e0:	mov    rcx,rbx
  4105e3:	lea    rdx,[rip+0x310e6]        # 4416d0 <_IO_stdin_used@@Base+0x136d0>
  4105ea:	mov    esi,0x1
  4105ef:	xor    eax,eax
  4105f1:	call   405400 <__fprintf_chk@plt>
  4105f6:	mov    rdi,QWORD PTR [rbx+0xd0]
  4105fd:	mov    rcx,rbx
  410600:	lea    rdx,[rip+0x310f1]        # 4416f8 <_IO_stdin_used@@Base+0x136f8>
  410607:	mov    esi,0x1
  41060c:	xor    eax,eax
  41060e:	call   405400 <__fprintf_chk@plt>
  410613:	mov    rdi,QWORD PTR [rbx+0xd0]
  41061a:	mov    rcx,rbx
  41061d:	lea    rdx,[rip+0x31104]        # 441728 <_IO_stdin_used@@Base+0x13728>
  410624:	mov    esi,0x1
  410629:	xor    eax,eax
  41062b:	call   405400 <__fprintf_chk@plt>
  410630:	mov    rdi,QWORD PTR [rbx+0xd0]
  410637:	lea    rdx,[rip+0x3631f]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  41063e:	mov    esi,0x1
  410643:	xor    eax,eax
  410645:	call   405400 <__fprintf_chk@plt>
  41064a:	mov    rdi,QWORD PTR [rbx+0xd0]
  410651:	mov    r9,rbx
  410654:	mov    r8,rbx
  410657:	mov    rcx,rbx
  41065a:	lea    rdx,[rip+0x310ef]        # 441750 <_IO_stdin_used@@Base+0x13750>
  410661:	mov    esi,0x1
  410666:	xor    eax,eax
  410668:	call   405400 <__fprintf_chk@plt>
  41066d:	mov    rdi,QWORD PTR [rbx+0xd0]
  410674:	mov    r9,rbx
  410677:	mov    r8,rbx
  41067a:	mov    rcx,rbx
  41067d:	lea    rdx,[rip+0x310f4]        # 441778 <_IO_stdin_used@@Base+0x13778>
  410684:	mov    esi,0x1
  410689:	xor    eax,eax
  41068b:	call   405400 <__fprintf_chk@plt>
  410690:	mov    rdi,QWORD PTR [rbx+0xd0]
  410697:	mov    r9,rbx
  41069a:	mov    r8,rbx
  41069d:	mov    rcx,rbx
  4106a0:	lea    rdx,[rip+0x310f9]        # 4417a0 <_IO_stdin_used@@Base+0x137a0>
  4106a7:	mov    esi,0x1
  4106ac:	xor    eax,eax
  4106ae:	mov    QWORD PTR [rsp],rbx
  4106b2:	call   405400 <__fprintf_chk@plt>
  4106b7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4106be:	mov    r9,rbx
  4106c1:	mov    r8,rbx
  4106c4:	mov    rcx,rbx
  4106c7:	lea    rdx,[rip+0x310fa]        # 4417c8 <_IO_stdin_used@@Base+0x137c8>
  4106ce:	mov    esi,0x1
  4106d3:	xor    eax,eax
  4106d5:	call   405400 <__fprintf_chk@plt>
  4106da:	mov    rdi,QWORD PTR [rbx+0xd0]
  4106e1:	mov    r9,rbx
  4106e4:	mov    r8,rbx
  4106e7:	mov    rcx,rbx
  4106ea:	lea    rdx,[rip+0x31107]        # 4417f8 <_IO_stdin_used@@Base+0x137f8>
  4106f1:	mov    esi,0x1
  4106f6:	xor    eax,eax
  4106f8:	call   405400 <__fprintf_chk@plt>
  4106fd:	mov    rdi,QWORD PTR [rbx+0xd0]
  410704:	mov    r9,rbx
  410707:	mov    r8,rbx
  41070a:	mov    rcx,rbx
  41070d:	lea    rdx,[rip+0x31114]        # 441828 <_IO_stdin_used@@Base+0x13828>
  410714:	mov    esi,0x1
  410719:	xor    eax,eax
  41071b:	call   405400 <__fprintf_chk@plt>
  410720:	mov    rdi,QWORD PTR [rbx+0xd0]
  410727:	mov    r9,rbx
  41072a:	mov    r8,rbx
  41072d:	mov    rcx,rbx
  410730:	lea    rdx,[rip+0x31121]        # 441858 <_IO_stdin_used@@Base+0x13858>
  410737:	mov    esi,0x1
  41073c:	xor    eax,eax
  41073e:	call   405400 <__fprintf_chk@plt>
  410743:	mov    rdi,QWORD PTR [rbx+0xd0]
  41074a:	mov    r9,rbx
  41074d:	mov    r8,rbx
  410750:	mov    rcx,rbx
  410753:	lea    rdx,[rip+0x31126]        # 441880 <_IO_stdin_used@@Base+0x13880>
  41075a:	mov    esi,0x1
  41075f:	xor    eax,eax
  410761:	call   405400 <__fprintf_chk@plt>
  410766:	mov    rdi,QWORD PTR [rbx+0xd0]
  41076d:	mov    r9,rbx
  410770:	mov    r8,rbx
  410773:	mov    rcx,rbx
  410776:	lea    rdx,[rip+0x3112b]        # 4418a8 <_IO_stdin_used@@Base+0x138a8>
  41077d:	mov    esi,0x1
  410782:	xor    eax,eax
  410784:	call   405400 <__fprintf_chk@plt>
  410789:	mov    rdi,QWORD PTR [rbx+0xd0]
  410790:	mov    r9,rbx
  410793:	mov    r8,rbx
  410796:	mov    rcx,rbx
  410799:	lea    rdx,[rip+0x31130]        # 4418d0 <_IO_stdin_used@@Base+0x138d0>
  4107a0:	mov    esi,0x1
  4107a5:	xor    eax,eax
  4107a7:	call   405400 <__fprintf_chk@plt>
  4107ac:	mov    rdi,QWORD PTR [rbx+0xd0]
  4107b3:	mov    r9,rbx
  4107b6:	mov    r8,rbx
  4107b9:	mov    rcx,rbx
  4107bc:	lea    rdx,[rip+0x31135]        # 4418f8 <_IO_stdin_used@@Base+0x138f8>
  4107c3:	mov    esi,0x1
  4107c8:	xor    eax,eax
  4107ca:	call   405400 <__fprintf_chk@plt>
  4107cf:	mov    rdi,QWORD PTR [rbx+0xd0]
  4107d6:	lea    rdx,[rip+0x36180]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  4107dd:	mov    esi,0x1
  4107e2:	xor    eax,eax
  4107e4:	call   405400 <__fprintf_chk@plt>
  4107e9:	mov    rdi,QWORD PTR [rbx+0xd0]
  4107f0:	mov    r8,rbx
  4107f3:	mov    rcx,rbx
  4107f6:	lea    rdx,[rip+0x27d30]        # 43852d <_IO_stdin_used@@Base+0xa52d>
  4107fd:	mov    esi,0x1
  410802:	xor    eax,eax
  410804:	call   405400 <__fprintf_chk@plt>
  410809:	mov    rdi,QWORD PTR [rbx+0xd0]
  410810:	lea    rdx,[rip+0x36146]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  410817:	mov    esi,0x1
  41081c:	xor    eax,eax
  41081e:	call   405400 <__fprintf_chk@plt>
  410823:	mov    rdi,QWORD PTR [rbx+0xd0]
  41082a:	mov    rcx,rbx
  41082d:	lea    rdx,[rip+0x27d0f]        # 438543 <_IO_stdin_used@@Base+0xa543>
  410834:	mov    esi,0x1
  410839:	mov    r8,rbx
  41083c:	xor    eax,eax
  41083e:	call   405400 <__fprintf_chk@plt>
  410843:	mov    rax,QWORD PTR [rbx+0xe0]
  41084a:	pop    rdx
  41084b:	mov    esi,DWORD PTR [rax+0xac]
  410851:	mov    rdi,QWORD PTR [rbx+0xd0]
  410858:	pop    rcx
  410859:	test   esi,esi
  41085b:	jne    4108a0 <__flatcc_fb_gen_common_c_builder_header@@Base+0xad0>
  41085d:	mov    rcx,rbp
  410860:	lea    rdx,[rip+0x310b9]        # 441920 <_IO_stdin_used@@Base+0x13920>
  410867:	mov    esi,0x1
  41086c:	xor    eax,eax
  41086e:	call   405400 <__fprintf_chk@plt>
  410873:	add    rsp,0x8
  410877:	pop    rbx
  410878:	xor    eax,eax
  41087a:	pop    rbp
  41087b:	ret    
  41087c:	nop    DWORD PTR [rax+0x0]
  410880:	lea    rdx,[rip+0x206f9]        # 430f80 <_IO_stdin_used@@Base+0x2f80>
  410887:	mov    esi,0x1
  41088c:	xor    eax,eax
  41088e:	call   405400 <__fprintf_chk@plt>
  410893:	mov    rdi,QWORD PTR [rbx+0xd0]
  41089a:	jmp    40fe6d <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d>
  41089f:	nop
  4108a0:	lea    rdx,[rip+0x26589]        # 436e30 <_IO_stdin_used@@Base+0x8e30>
  4108a7:	mov    esi,0x1
  4108ac:	xor    eax,eax
  4108ae:	call   405400 <__fprintf_chk@plt>
  4108b3:	mov    rdi,QWORD PTR [rbx+0xd0]
  4108ba:	jmp    41085d <__flatcc_fb_gen_common_c_builder_header@@Base+0xa8d>
  4108bc:	nop    DWORD PTR [rax+0x0]
  4108c0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4108c7:	mov    rcx,rbx
  4108ca:	lea    rdx,[rip+0x28a87]        # 439358 <_IO_stdin_used@@Base+0xb358>
  4108d1:	mov    esi,0x1
  4108d6:	xor    eax,eax
  4108d8:	call   405400 <__fprintf_chk@plt>
  4108dd:	mov    rdi,QWORD PTR [rbx+0xd0]
  4108e4:	mov    rcx,rbx
  4108e7:	lea    rdx,[rip+0x28aa2]        # 439390 <_IO_stdin_used@@Base+0xb390>
  4108ee:	mov    esi,0x1
  4108f3:	xor    eax,eax
  4108f5:	call   405400 <__fprintf_chk@plt>
  4108fa:	jmp    40ff30 <__flatcc_fb_gen_common_c_builder_header@@Base+0x160>
  4108ff:	nop
  410900:	mov    rdi,QWORD PTR [rbx+0xd0]
  410907:	mov    rcx,rbx
  41090a:	lea    rdx,[rip+0x288cf]        # 4391e0 <_IO_stdin_used@@Base+0xb1e0>
  410911:	mov    esi,0x1
  410916:	xor    eax,eax
  410918:	call   405400 <__fprintf_chk@plt>
  41091d:	mov    rdi,QWORD PTR [rbx+0xd0]
  410924:	mov    rcx,rbx
  410927:	lea    rdx,[rip+0x288da]        # 439208 <_IO_stdin_used@@Base+0xb208>
  41092e:	mov    esi,0x1
  410933:	xor    eax,eax
  410935:	call   405400 <__fprintf_chk@plt>
  41093a:	mov    rdi,QWORD PTR [rbx+0xd0]
  410941:	mov    rcx,rbx
  410944:	lea    rdx,[rip+0x288e5]        # 439230 <_IO_stdin_used@@Base+0xb230>
  41094b:	mov    esi,0x1
  410950:	xor    eax,eax
  410952:	call   405400 <__fprintf_chk@plt>
  410957:	mov    rdi,QWORD PTR [rbx+0xd0]
  41095e:	mov    rcx,rbx
  410961:	lea    rdx,[rip+0x288f8]        # 439260 <_IO_stdin_used@@Base+0xb260>
  410968:	mov    esi,0x1
  41096d:	xor    eax,eax
  41096f:	call   405400 <__fprintf_chk@plt>
  410974:	mov    rdi,QWORD PTR [rbx+0xd0]
  41097b:	mov    rcx,rbx
  41097e:	lea    rdx,[rip+0x28913]        # 439298 <_IO_stdin_used@@Base+0xb298>
  410985:	mov    esi,0x1
  41098a:	xor    eax,eax
  41098c:	call   405400 <__fprintf_chk@plt>
  410991:	mov    rdi,QWORD PTR [rbx+0xd0]
  410998:	mov    rcx,rbx
  41099b:	lea    rdx,[rip+0x28936]        # 4392d8 <_IO_stdin_used@@Base+0xb2d8>
  4109a2:	mov    esi,0x1
  4109a7:	xor    eax,eax
  4109a9:	call   405400 <__fprintf_chk@plt>
  4109ae:	jmp    40fed2 <__flatcc_fb_gen_common_c_builder_header@@Base+0x102>
  4109b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4109be:	xchg   ax,ax

00000000004109c0 <__flatcc_fb_gen_c_builder@@Base>:
  4109c0:	endbr64 
  4109c4:	push   r15
  4109c6:	lea    rdx,[rip+0x30f7b]        # 441948 <_IO_stdin_used@@Base+0x13948>
  4109cd:	mov    esi,0x1
  4109d2:	push   r14
  4109d4:	push   r13
  4109d6:	push   r12
  4109d8:	push   rbp
  4109d9:	push   rbx
  4109da:	mov    rbx,rdi
  4109dd:	sub    rsp,0xf8
  4109e4:	mov    rax,QWORD PTR fs:0x28
  4109ed:	mov    QWORD PTR [rsp+0xe8],rax
  4109f5:	xor    eax,eax
  4109f7:	mov    rax,QWORD PTR [rdi+0xd8]
  4109fe:	mov    rdi,QWORD PTR [rdi+0xd0]
  410a05:	mov    rcx,QWORD PTR [rax+0x118]
  410a0c:	xor    eax,eax
  410a0e:	mov    r8,rcx
  410a11:	call   405400 <__fprintf_chk@plt>
  410a16:	mov    rdi,QWORD PTR [rbx+0xd0]
  410a1d:	lea    rdx,[rip+0x20444]        # 430e68 <_IO_stdin_used@@Base+0x2e68>
  410a24:	mov    esi,0x1
  410a29:	xor    eax,eax
  410a2b:	call   405400 <__fprintf_chk@plt>
  410a30:	mov    rax,QWORD PTR [rbx+0xd8]
  410a37:	mov    rdi,QWORD PTR [rbx+0xd0]
  410a3e:	mov    rcx,QWORD PTR [rax+0x118]
  410a45:	lea    rdx,[rip+0x27b0d]        # 438559 <_IO_stdin_used@@Base+0xa559>
  410a4c:	mov    esi,0x1
  410a51:	xor    eax,eax
  410a53:	call   405400 <__fprintf_chk@plt>
  410a58:	mov    rax,QWORD PTR [rbx+0xd8]
  410a5f:	mov    rdi,QWORD PTR [rbx+0xd0]
  410a66:	mov    rcx,QWORD PTR [rax+0x110]
  410a6d:	lea    rdx,[rip+0x27afa]        # 43856e <_IO_stdin_used@@Base+0xa56e>
  410a74:	mov    esi,0x1
  410a79:	xor    eax,eax
  410a7b:	call   405400 <__fprintf_chk@plt>
  410a80:	mov    rdi,QWORD PTR [rbx+0xd0]
  410a87:	lea    rdx,[rip+0x27a6c]        # 4384fa <_IO_stdin_used@@Base+0xa4fa>
  410a8e:	mov    esi,0x1
  410a93:	xor    eax,eax
  410a95:	call   405400 <__fprintf_chk@plt>
  410a9a:	mov    rdi,QWORD PTR [rbx+0xd0]
  410aa1:	lea    rcx,[rbx+0x66]
  410aa5:	lea    rdx,[rip+0x279fd]        # 4384a9 <_IO_stdin_used@@Base+0xa4a9>
  410aac:	mov    esi,0x1
  410ab1:	xor    eax,eax
  410ab3:	call   405400 <__fprintf_chk@plt>
  410ab8:	mov    rdi,QWORD PTR [rbx+0xd0]
  410abf:	mov    rcx,rbx
  410ac2:	lea    rdx,[rip+0x30eaf]        # 441978 <_IO_stdin_used@@Base+0x13978>
  410ac9:	mov    esi,0x1
  410ace:	xor    eax,eax
  410ad0:	call   405400 <__fprintf_chk@plt>
  410ad5:	mov    rdi,QWORD PTR [rbx+0xd0]
  410adc:	lea    rdx,[rip+0x27a17]        # 4384fa <_IO_stdin_used@@Base+0xa4fa>
  410ae3:	mov    esi,0x1
  410ae8:	xor    eax,eax
  410aea:	call   405400 <__fprintf_chk@plt>
  410aef:	mov    rdi,rbx
  410af2:	lea    rdx,[rip+0x27a8d]        # 438586 <_IO_stdin_used@@Base+0xa586>
  410af9:	lea    rsi,[rip+0x1ef66]        # 42fa66 <_IO_stdin_used@@Base+0x1a66>
  410b00:	call   407120 <__flatcc_fb_gen_c_includes@@Base>
  410b05:	mov    rax,QWORD PTR [rbx+0xe0]
  410b0c:	mov    rdi,QWORD PTR [rbx+0xd0]
  410b13:	mov    r10d,DWORD PTR [rax+0xac]
  410b1a:	test   r10d,r10d
  410b1d:	jne    411150 <__flatcc_fb_gen_c_builder@@Base+0x790>
  410b23:	mov    rax,QWORD PTR [rbx+0xd8]
  410b2a:	cmp    WORD PTR [rax+0x20],0x2
  410b2f:	je     411120 <__flatcc_fb_gen_c_builder@@Base+0x760>
  410b35:	mov    r8,rbx
  410b38:	mov    rcx,rbx
  410b3b:	lea    rdx,[rip+0x265a6]        # 4370e8 <_IO_stdin_used@@Base+0x90e8>
  410b42:	mov    esi,0x1
  410b47:	xor    eax,eax
  410b49:	call   405400 <__fprintf_chk@plt>
  410b4e:	mov    rax,QWORD PTR [rbx+0xd8]
  410b55:	mov    rdi,QWORD PTR [rbx+0xd0]
  410b5c:	cmp    WORD PTR [rax+0x38],0x2
  410b61:	je     4110f0 <__flatcc_fb_gen_c_builder@@Base+0x730>
  410b67:	mov    rax,QWORD PTR [rbx+0xe0]
  410b6e:	mov    r8,rbx
  410b71:	mov    r9,QWORD PTR [rax+0x78]
  410b75:	mov    rcx,rbx
  410b78:	lea    rdx,[rip+0x265d1]        # 437150 <_IO_stdin_used@@Base+0x9150>
  410b7f:	mov    esi,0x1
  410b84:	xor    eax,eax
  410b86:	call   405400 <__fprintf_chk@plt>
  410b8b:	mov    rdi,QWORD PTR [rbx+0xd0]
  410b92:	lea    rdx,[rip+0x35dc4]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  410b99:	mov    esi,0x1
  410b9e:	xor    eax,eax
  410ba0:	mov    rbp,rsp
  410ba3:	call   405400 <__fprintf_chk@plt>
  410ba8:	xor    eax,eax
  410baa:	mov    ecx,0x1d
  410baf:	mov    rdi,rbp
  410bb2:	rep stos QWORD PTR es:[rdi],rax
  410bb5:	mov    rax,QWORD PTR [rbx+0xd8]
  410bbc:	mov    r12,QWORD PTR [rax+0x40]
  410bc0:	test   r12,r12
  410bc3:	je     410c6d <__flatcc_fb_gen_c_builder@@Base+0x2ad>
  410bc9:	xor    eax,eax
  410bcb:	lea    r13,[rip+0x30dc6]        # 441998 <_IO_stdin_used@@Base+0x13998>
  410bd2:	nop    WORD PTR [rax+rax*1+0x0]
  410bd8:	cmp    WORD PTR [r12+0x10],0x3
  410bdf:	jne    410c3f <__flatcc_fb_gen_c_builder@@Base+0x27f>
  410be1:	mov    rdi,QWORD PTR [r12+0x18]
  410be6:	mov    rdx,rbp
  410be9:	mov    rsi,r12
  410bec:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  410bf1:	mov    rdi,QWORD PTR [rbx+0xd0]
  410bf8:	mov    r9,rbp
  410bfb:	mov    r8,rbp
  410bfe:	mov    rcx,rbp
  410c01:	mov    rdx,r13
  410c04:	mov    esi,0x1
  410c09:	xor    eax,eax
  410c0b:	call   405400 <__fprintf_chk@plt>
  410c10:	sub    rsp,0x8
  410c14:	push   rbp
  410c15:	mov    rdi,QWORD PTR [rbx+0xd0]
  410c1c:	mov    rcx,rbx
  410c1f:	lea    rdx,[rip+0x30dba]        # 4419e0 <_IO_stdin_used@@Base+0x139e0>
  410c26:	mov    r9,rbp
  410c29:	mov    r8,rbx
  410c2c:	mov    esi,0x1
  410c31:	xor    eax,eax
  410c33:	call   405400 <__fprintf_chk@plt>
  410c38:	pop    rdx
  410c39:	pop    rcx
  410c3a:	mov    eax,0x1
  410c3f:	mov    r12,QWORD PTR [r12]
  410c43:	test   r12,r12
  410c46:	jne    410bd8 <__flatcc_fb_gen_c_builder@@Base+0x218>
  410c48:	test   eax,eax
  410c4a:	je     410c66 <__flatcc_fb_gen_c_builder@@Base+0x2a6>
  410c4c:	mov    rdi,QWORD PTR [rbx+0xd0]
  410c53:	lea    rdx,[rip+0x35d03]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  410c5a:	mov    esi,0x1
  410c5f:	xor    eax,eax
  410c61:	call   405400 <__fprintf_chk@plt>
  410c66:	mov    rax,QWORD PTR [rbx+0xd8]
  410c6d:	mov    r12,QWORD PTR [rax+0x48]
  410c71:	xor    r15d,r15d
  410c74:	test   r12,r12
  410c77:	je     41107a <__flatcc_fb_gen_c_builder@@Base+0x6ba>
  410c7d:	nop    DWORD PTR [rax]
  410c80:	mov    ecx,0x1d
  410c85:	mov    rdi,rbp
  410c88:	mov    rax,r15
  410c8b:	rep stos QWORD PTR es:[rdi],rax
  410c8e:	cmp    WORD PTR [r12+0x10],0x1
  410c95:	jne    41118f <__flatcc_fb_gen_c_builder@@Base+0x7cf>
  410c9b:	mov    rdi,QWORD PTR [r12+0x18]
  410ca0:	mov    rsi,r12
  410ca3:	mov    rdx,rbp
  410ca6:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  410cab:	mov    rdi,QWORD PTR [r12+0x28]
  410cb0:	lea    r14,[r12+0x28]
  410cb5:	call   40c860 <__flatcc_gen_sort@@Base+0x160>
  410cba:	mov    rdi,QWORD PTR [rbx+0xd0]
  410cc1:	mov    r13d,eax
  410cc4:	mov    rcx,rbp
  410cc7:	lea    rdx,[rip+0x276eb]        # 4383b9 <_IO_stdin_used@@Base+0xa3b9>
  410cce:	mov    esi,0x1
  410cd3:	xor    eax,eax
  410cd5:	call   405400 <__fprintf_chk@plt>
  410cda:	mov    r8d,0x1
  410ce0:	xor    edx,edx
  410ce2:	mov    ecx,r13d
  410ce5:	mov    rsi,r14
  410ce8:	mov    rdi,rbx
  410ceb:	call   40d380 <__flatcc_gen_sort@@Base+0xc80>
  410cf0:	mov    rdi,QWORD PTR [rbx+0xd0]
  410cf7:	mov    rcx,rbp
  410cfa:	lea    rdx,[rip+0x276d2]        # 4383d3 <_IO_stdin_used@@Base+0xa3d3>
  410d01:	mov    esi,0x1
  410d06:	xor    eax,eax
  410d08:	call   405400 <__fprintf_chk@plt>
  410d0d:	mov    r8d,0x1
  410d13:	mov    ecx,r13d
  410d16:	xor    edx,edx
  410d18:	mov    rsi,r12
  410d1b:	mov    rdi,rbx
  410d1e:	call   40cbd0 <__flatcc_gen_sort@@Base+0x4d0>
  410d23:	mov    rdi,QWORD PTR [rbx+0xd0]
  410d2a:	lea    rdx,[rip+0x35c2c]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  410d31:	mov    esi,0x1
  410d36:	xor    eax,eax
  410d38:	call   405400 <__fprintf_chk@plt>
  410d3d:	mov    rdi,QWORD PTR [rbx+0xd0]
  410d44:	mov    r9,rbp
  410d47:	mov    r8,rbp
  410d4a:	mov    rcx,rbp
  410d4d:	lea    rdx,[rip+0x30cb4]        # 441a08 <_IO_stdin_used@@Base+0x13a08>
  410d54:	mov    esi,0x1
  410d59:	xor    eax,eax
  410d5b:	call   405400 <__fprintf_chk@plt>
  410d60:	xor    r8d,r8d
  410d63:	mov    ecx,r13d
  410d66:	xor    edx,edx
  410d68:	mov    rsi,r14
  410d6b:	mov    rdi,rbx
  410d6e:	call   40d380 <__flatcc_gen_sort@@Base+0xc80>
  410d73:	mov    rdi,QWORD PTR [rbx+0xd0]
  410d7a:	lea    rdx,[rip+0x27810]        # 438591 <_IO_stdin_used@@Base+0xa591>
  410d81:	mov    esi,0x1
  410d86:	xor    eax,eax
  410d88:	call   405400 <__fprintf_chk@plt>
  410d8d:	xor    r8d,r8d
  410d90:	xor    ecx,ecx
  410d92:	mov    edx,r13d
  410d95:	mov    rsi,r14
  410d98:	mov    rdi,rbx
  410d9b:	call   40cce0 <__flatcc_gen_sort@@Base+0x5e0>
  410da0:	mov    rdi,QWORD PTR [rbx+0xd0]
  410da7:	lea    rdx,[rip+0x277e8]        # 438596 <_IO_stdin_used@@Base+0xa596>
  410dae:	mov    esi,0x1
  410db3:	xor    eax,eax
  410db5:	call   405400 <__fprintf_chk@plt>
  410dba:	sub    rsp,0x8
  410dbe:	push   rbp
  410dbf:	mov    rdi,QWORD PTR [rbx+0xd0]
  410dc6:	mov    r9,rbp
  410dc9:	mov    r8,rbp
  410dcc:	mov    rcx,rbp
  410dcf:	lea    rdx,[rip+0x30c5a]        # 441a30 <_IO_stdin_used@@Base+0x13a30>
  410dd6:	mov    esi,0x1
  410ddb:	xor    eax,eax
  410ddd:	call   405400 <__fprintf_chk@plt>
  410de2:	mov    rdi,QWORD PTR [rbx+0xd0]
  410de9:	lea    rdx,[rip+0x277a3]        # 438593 <_IO_stdin_used@@Base+0xa593>
  410df0:	mov    esi,0x1
  410df5:	xor    eax,eax
  410df7:	call   405400 <__fprintf_chk@plt>
  410dfc:	mov    r8d,0x1
  410e02:	xor    ecx,ecx
  410e04:	mov    edx,r13d
  410e07:	mov    rsi,r14
  410e0a:	mov    rdi,rbx
  410e0d:	call   40cce0 <__flatcc_gen_sort@@Base+0x5e0>
  410e12:	mov    rdi,QWORD PTR [rbx+0xd0]
  410e19:	lea    rdx,[rip+0x27776]        # 438596 <_IO_stdin_used@@Base+0xa596>
  410e20:	mov    esi,0x1
  410e25:	xor    eax,eax
  410e27:	call   405400 <__fprintf_chk@plt>
  410e2c:	mov    rdi,QWORD PTR [rbx+0xd0]
  410e33:	mov    r9,rbp
  410e36:	mov    r8,rbp
  410e39:	mov    rcx,rbp
  410e3c:	lea    rdx,[rip+0x30c25]        # 441a68 <_IO_stdin_used@@Base+0x13a68>
  410e43:	mov    esi,0x1
  410e48:	xor    eax,eax
  410e4a:	call   405400 <__fprintf_chk@plt>
  410e4f:	xor    r8d,r8d
  410e52:	mov    ecx,r13d
  410e55:	xor    edx,edx
  410e57:	mov    rsi,r14
  410e5a:	mov    rdi,rbx
  410e5d:	call   40d380 <__flatcc_gen_sort@@Base+0xc80>
  410e62:	mov    rdi,QWORD PTR [rbx+0xd0]
  410e69:	lea    rdx,[rip+0x27721]        # 438591 <_IO_stdin_used@@Base+0xa591>
  410e70:	mov    esi,0x1
  410e75:	xor    eax,eax
  410e77:	call   405400 <__fprintf_chk@plt>
  410e7c:	xor    r8d,r8d
  410e7f:	mov    ecx,0x2
  410e84:	mov    edx,r13d
  410e87:	mov    rsi,r14
  410e8a:	mov    rdi,rbx
  410e8d:	call   40cce0 <__flatcc_gen_sort@@Base+0x5e0>
  410e92:	mov    rdi,QWORD PTR [rbx+0xd0]
  410e99:	lea    rdx,[rip+0x276f6]        # 438596 <_IO_stdin_used@@Base+0xa596>
  410ea0:	mov    esi,0x1
  410ea5:	xor    eax,eax
  410ea7:	call   405400 <__fprintf_chk@plt>
  410eac:	mov    rdi,QWORD PTR [rbx+0xd0]
  410eb3:	mov    r9,rbp
  410eb6:	mov    r8,rbp
  410eb9:	mov    rcx,rbp
  410ebc:	lea    rdx,[rip+0x30bd5]        # 441a98 <_IO_stdin_used@@Base+0x13a98>
  410ec3:	mov    esi,0x1
  410ec8:	xor    eax,eax
  410eca:	mov    QWORD PTR [rsp],rbp
  410ece:	call   405400 <__fprintf_chk@plt>
  410ed3:	mov    rdi,QWORD PTR [rbx+0xd0]
  410eda:	lea    rdx,[rip+0x276b2]        # 438593 <_IO_stdin_used@@Base+0xa593>
  410ee1:	mov    esi,0x1
  410ee6:	xor    eax,eax
  410ee8:	call   405400 <__fprintf_chk@plt>
  410eed:	mov    r8d,0x1
  410ef3:	mov    ecx,0x2
  410ef8:	mov    edx,r13d
  410efb:	mov    rsi,r14
  410efe:	mov    rdi,rbx
  410f01:	call   40cce0 <__flatcc_gen_sort@@Base+0x5e0>
  410f06:	mov    rdi,QWORD PTR [rbx+0xd0]
  410f0d:	lea    rdx,[rip+0x27682]        # 438596 <_IO_stdin_used@@Base+0xa596>
  410f14:	mov    esi,0x1
  410f19:	xor    eax,eax
  410f1b:	call   405400 <__fprintf_chk@plt>
  410f20:	mov    rdi,QWORD PTR [rbx+0xd0]
  410f27:	mov    r9,rbp
  410f2a:	mov    r8,rbp
  410f2d:	mov    rcx,rbp
  410f30:	lea    rdx,[rip+0x30ba1]        # 441ad8 <_IO_stdin_used@@Base+0x13ad8>
  410f37:	mov    esi,0x1
  410f3c:	xor    eax,eax
  410f3e:	call   405400 <__fprintf_chk@plt>
  410f43:	xor    r8d,r8d
  410f46:	mov    ecx,r13d
  410f49:	xor    edx,edx
  410f4b:	mov    rsi,r14
  410f4e:	mov    rdi,rbx
  410f51:	call   40d380 <__flatcc_gen_sort@@Base+0xc80>
  410f56:	mov    rdi,QWORD PTR [rbx+0xd0]
  410f5d:	lea    rdx,[rip+0x2762d]        # 438591 <_IO_stdin_used@@Base+0xa591>
  410f64:	mov    esi,0x1
  410f69:	xor    eax,eax
  410f6b:	call   405400 <__fprintf_chk@plt>
  410f70:	xor    r8d,r8d
  410f73:	mov    ecx,0x1
  410f78:	mov    edx,r13d
  410f7b:	mov    rsi,r14
  410f7e:	mov    rdi,rbx
  410f81:	call   40cce0 <__flatcc_gen_sort@@Base+0x5e0>
  410f86:	mov    rdi,QWORD PTR [rbx+0xd0]
  410f8d:	lea    rdx,[rip+0x27602]        # 438596 <_IO_stdin_used@@Base+0xa596>
  410f94:	mov    esi,0x1
  410f99:	xor    eax,eax
  410f9b:	call   405400 <__fprintf_chk@plt>
  410fa0:	mov    rdi,QWORD PTR [rbx+0xd0]
  410fa7:	mov    r9,rbp
  410faa:	mov    r8,rbp
  410fad:	mov    rcx,rbp
  410fb0:	lea    rdx,[rip+0x30b51]        # 441b08 <_IO_stdin_used@@Base+0x13b08>
  410fb7:	mov    esi,0x1
  410fbc:	xor    eax,eax
  410fbe:	mov    QWORD PTR [rsp],rbp
  410fc2:	call   405400 <__fprintf_chk@plt>
  410fc7:	mov    rdi,QWORD PTR [rbx+0xd0]
  410fce:	xor    eax,eax
  410fd0:	lea    rdx,[rip+0x275bc]        # 438593 <_IO_stdin_used@@Base+0xa593>
  410fd7:	mov    esi,0x1
  410fdc:	call   405400 <__fprintf_chk@plt>
  410fe1:	mov    r8d,0x1
  410fe7:	mov    ecx,0x1
  410fec:	mov    edx,r13d
  410fef:	mov    rsi,r14
  410ff2:	mov    rdi,rbx
  410ff5:	call   40cce0 <__flatcc_gen_sort@@Base+0x5e0>
  410ffa:	mov    rdi,QWORD PTR [rbx+0xd0]
  411001:	lea    rdx,[rip+0x2758e]        # 438596 <_IO_stdin_used@@Base+0xa596>
  411008:	mov    esi,0x1
  41100d:	xor    eax,eax
  41100f:	call   405400 <__fprintf_chk@plt>
  411014:	push   rbp
  411015:	movzx  eax,WORD PTR [r12+0xb0]
  41101e:	mov    rdi,QWORD PTR [rbx+0xd0]
  411025:	push   rbp
  411026:	mov    r9,rbp
  411029:	mov    r8,rbx
  41102c:	push   rax
  41102d:	mov    rcx,rbx
  411030:	lea    rdx,[rip+0x30b11]        # 441b48 <_IO_stdin_used@@Base+0x13b48>
  411037:	push   QWORD PTR [r12+0xb8]
  41103f:	mov    esi,0x1
  411044:	xor    eax,eax
  411046:	call   405400 <__fprintf_chk@plt>
  41104b:	mov    rdi,QWORD PTR [rbx+0xd0]
  411052:	add    rsp,0x30
  411056:	lea    rdx,[rip+0x35900]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  41105d:	mov    esi,0x1
  411062:	xor    eax,eax
  411064:	call   405400 <__fprintf_chk@plt>
  411069:	mov    r12,QWORD PTR [r12+0xc0]
  411071:	test   r12,r12
  411074:	jne    410c80 <__flatcc_fb_gen_c_builder@@Base+0x2c0>
  41107a:	mov    rdi,rbx
  41107d:	call   40ed60 <__flatcc_gen_sort@@Base+0x2660>
  411082:	mov    rax,QWORD PTR [rbx+0xe0]
  411089:	mov    rdi,QWORD PTR [rbx+0xd0]
  411090:	mov    eax,DWORD PTR [rax+0xac]
  411096:	test   eax,eax
  411098:	jne    411170 <__flatcc_fb_gen_c_builder@@Base+0x7b0>
  41109e:	mov    rax,QWORD PTR [rbx+0xd8]
  4110a5:	lea    rdx,[rip+0x274f7]        # 4385a3 <_IO_stdin_used@@Base+0xa5a3>
  4110ac:	mov    rcx,QWORD PTR [rax+0x118]
  4110b3:	mov    esi,0x1
  4110b8:	xor    eax,eax
  4110ba:	call   405400 <__fprintf_chk@plt>
  4110bf:	xor    eax,eax
  4110c1:	mov    rcx,QWORD PTR [rsp+0xe8]
  4110c9:	xor    rcx,QWORD PTR fs:0x28
  4110d2:	jne    4111ae <__flatcc_fb_gen_c_builder@@Base+0x7ee>
  4110d8:	add    rsp,0xf8
  4110df:	pop    rbx
  4110e0:	pop    rbp
  4110e1:	pop    r12
  4110e3:	pop    r13
  4110e5:	pop    r14
  4110e7:	pop    r15
  4110e9:	ret    
  4110ea:	nop    WORD PTR [rax+rax*1+0x0]
  4110f0:	sub    rsp,0x8
  4110f4:	mov    r9d,DWORD PTR [rax+0x30]
  4110f8:	push   QWORD PTR [rax+0x28]
  4110fb:	mov    esi,0x1
  411100:	mov    r8,rbx
  411103:	mov    rcx,rbx
  411106:	lea    rdx,[rip+0x26013]        # 437120 <_IO_stdin_used@@Base+0x9120>
  41110d:	xor    eax,eax
  41110f:	call   405400 <__fprintf_chk@plt>
  411114:	pop    rsi
  411115:	pop    rdi
  411116:	jmp    410b8b <__flatcc_fb_gen_c_builder@@Base+0x1cb>
  41111b:	nop    DWORD PTR [rax+rax*1+0x0]
  411120:	sub    rsp,0x8
  411124:	mov    r9d,DWORD PTR [rax+0x18]
  411128:	push   QWORD PTR [rax+0x10]
  41112b:	mov    r8,rbx
  41112e:	mov    rcx,rbx
  411131:	lea    rdx,[rip+0x25f78]        # 4370b0 <_IO_stdin_used@@Base+0x90b0>
  411138:	mov    esi,0x1
  41113d:	xor    eax,eax
  41113f:	call   405400 <__fprintf_chk@plt>
  411144:	pop    r8
  411146:	pop    r9
  411148:	jmp    410b4e <__flatcc_fb_gen_c_builder@@Base+0x18e>
  41114d:	nop    DWORD PTR [rax]
  411150:	lea    rdx,[rip+0x1fe29]        # 430f80 <_IO_stdin_used@@Base+0x2f80>
  411157:	mov    esi,0x1
  41115c:	xor    eax,eax
  41115e:	call   405400 <__fprintf_chk@plt>
  411163:	mov    rdi,QWORD PTR [rbx+0xd0]
  41116a:	jmp    410b23 <__flatcc_fb_gen_c_builder@@Base+0x163>
  41116f:	nop
  411170:	lea    rdx,[rip+0x25cb9]        # 436e30 <_IO_stdin_used@@Base+0x8e30>
  411177:	mov    esi,0x1
  41117c:	xor    eax,eax
  41117e:	call   405400 <__fprintf_chk@plt>
  411183:	mov    rdi,QWORD PTR [rbx+0xd0]
  41118a:	jmp    41109e <__flatcc_fb_gen_c_builder@@Base+0x6de>
  41118f:	lea    rcx,[rip+0x30d8a]        # 441f20 <_IO_stdin_used@@Base+0x13f20>
  411196:	mov    edx,0x3f2
  41119b:	lea    rsi,[rip+0x274d6]        # 438678 <_IO_stdin_used@@Base+0xa678>
  4111a2:	lea    rdi,[rip+0x1f777]        # 430920 <_IO_stdin_used@@Base+0x2920>
  4111a9:	call   405300 <__assert_fail@plt>
  4111ae:	call   4052d0 <__stack_chk_fail@plt>
  4111b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4111bd:	nop    DWORD PTR [rax]
  4111c0:	push   r15
  4111c2:	mov    ecx,0x1d
  4111c7:	push   r14
  4111c9:	push   r13
  4111cb:	push   r12
  4111cd:	lea    r12,[rip+0x31b51]        # 442d25 <_IO_stdin_used@@Base+0x14d25>
  4111d4:	push   rbp
  4111d5:	mov    rbp,rsi
  4111d8:	push   rbx
  4111d9:	mov    rbx,rdi
  4111dc:	sub    rsp,0x1f8
  4111e3:	mov    rax,QWORD PTR fs:0x28
  4111ec:	mov    QWORD PTR [rsp+0x1e8],rax
  4111f4:	xor    eax,eax
  4111f6:	lea    r13,[rsp+0x10]
  4111fb:	mov    rdi,r13
  4111fe:	lea    r14,[rsp+0x100]
  411206:	mov    rdx,r13
  411209:	rep stos QWORD PTR es:[rdi],rax
  41120c:	mov    ecx,0x1d
  411211:	mov    rdi,r14
  411214:	rep stos QWORD PTR es:[rdi],rax
  411217:	mov    rdi,QWORD PTR [rsi+0x18]
  41121b:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  411220:	mov    rdi,QWORD PTR [rbx+0xd0]
  411227:	mov    rcx,r13
  41122a:	lea    rdx,[rip+0x30d07]        # 441f38 <_IO_stdin_used@@Base+0x13f38>
  411231:	mov    esi,0x1
  411236:	xor    eax,eax
  411238:	call   405400 <__fprintf_chk@plt>
  41123d:	mov    r15,QWORD PTR [rbp+0x28]
  411241:	mov    rdi,QWORD PTR [rbx+0xd0]
  411248:	mov    eax,0x1
  41124d:	lea    rbp,[rip+0x3190c]        # 442b60 <_IO_stdin_used@@Base+0x14b60>
  411254:	test   r15,r15
  411257:	je     411332 <__flatcc_fb_gen_c_builder@@Base+0x972>
  41125d:	nop    DWORD PTR [rax]
  411260:	test   BYTE PTR [r15+0x70],0x4
  411265:	jne    41130a <__flatcc_fb_gen_c_builder@@Base+0x94a>
  41126b:	test   eax,eax
  41126d:	je     4115d0 <__flatcc_fb_gen_c_builder@@Base+0xc10>
  411273:	lea    rdx,[rip+0x31865]        # 442adf <_IO_stdin_used@@Base+0x14adf>
  41127a:	mov    esi,0x1
  41127f:	xor    eax,eax
  411281:	call   405400 <__fprintf_chk@plt>
  411286:	movzx  eax,WORD PTR [r15+0x28]
  41128b:	movzx  r8d,BYTE PTR [r15+0x71]
  411290:	sub    eax,0x7
  411293:	and    r8d,0x1
  411297:	cmp    ax,0x8
  41129b:	ja     4112e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  41129d:	movzx  eax,ax
  4112a0:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
  4112a5:	add    rax,rbp
  4112a8:	notrack jmp rax
  4112ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4112b0:	mov    rcx,QWORD PTR [r15+0x88]
  4112b7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4112be:	movzx  r9d,WORD PTR [r15+0x72]
  4112c3:	mov    r8,QWORD PTR [r15+0x80]
  4112ca:	lea    rdx,[rip+0x30ccf]        # 441fa0 <_IO_stdin_used@@Base+0x13fa0>
  4112d1:	mov    esi,0x1
  4112d6:	xor    eax,eax
  4112d8:	call   405400 <__fprintf_chk@plt>
  4112dd:	nop    DWORD PTR [rax]
  4112e0:	mov    rax,QWORD PTR [r15+0x8]
  4112e4:	mov    rdi,QWORD PTR [rbx+0xd0]
  4112eb:	mov    rcx,QWORD PTR [rax+0x8]
  4112ef:	mov    r8,QWORD PTR [rax]
  4112f2:	mov    rdx,r12
  4112f5:	mov    esi,0x1
  4112fa:	xor    eax,eax
  4112fc:	call   405400 <__fprintf_chk@plt>
  411301:	mov    rdi,QWORD PTR [rbx+0xd0]
  411308:	xor    eax,eax
  41130a:	mov    r15,QWORD PTR [r15]
  41130d:	test   r15,r15
  411310:	jne    411260 <__flatcc_fb_gen_c_builder@@Base+0x8a0>
  411316:	test   eax,eax
  411318:	jne    411332 <__flatcc_fb_gen_c_builder@@Base+0x972>
  41131a:	lea    rdx,[rip+0x317db]        # 442afc <_IO_stdin_used@@Base+0x14afc>
  411321:	mov    esi,0x1
  411326:	call   405400 <__fprintf_chk@plt>
  41132b:	mov    rdi,QWORD PTR [rbx+0xd0]
  411332:	lea    rdx,[rip+0x317d3]        # 442b0c <_IO_stdin_used@@Base+0x14b0c>
  411339:	mov    esi,0x1
  41133e:	xor    eax,eax
  411340:	call   405400 <__fprintf_chk@plt>
  411345:	mov    rdi,QWORD PTR [rbx+0xd0]
  41134c:	lea    rdx,[rip+0x35608]        # 44695b <_IO_stdin_used@@Base+0x1895b>
  411353:	mov    esi,0x1
  411358:	xor    eax,eax
  41135a:	call   405400 <__fprintf_chk@plt>
  41135f:	mov    rdi,QWORD PTR [rbx+0xd0]
  411366:	mov    r9,r13
  411369:	mov    r8,r13
  41136c:	mov    rcx,r13
  41136f:	lea    rdx,[rip+0x30f72]        # 4422e8 <_IO_stdin_used@@Base+0x142e8>
  411376:	mov    esi,0x1
  41137b:	xor    eax,eax
  41137d:	call   405400 <__fprintf_chk@plt>
  411382:	mov    rdi,QWORD PTR [rbx+0xd0]
  411389:	mov    r9,r13
  41138c:	mov    r8,r13
  41138f:	mov    rcx,r13
  411392:	lea    rdx,[rip+0x30fef]        # 442388 <_IO_stdin_used@@Base+0x14388>
  411399:	mov    esi,0x1
  41139e:	xor    eax,eax
  4113a0:	call   405400 <__fprintf_chk@plt>
  4113a5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4113ac:	mov    r8,r13
  4113af:	mov    rcx,r13
  4113b2:	lea    rdx,[rip+0x3107f]        # 442438 <_IO_stdin_used@@Base+0x14438>
  4113b9:	mov    esi,0x1
  4113be:	xor    eax,eax
  4113c0:	call   405400 <__fprintf_chk@plt>
  4113c5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4113cc:	mov    r8,rbx
  4113cf:	xor    eax,eax
  4113d1:	mov    r9,r13
  4113d4:	mov    rcx,r13
  4113d7:	lea    rdx,[rip+0x31112]        # 4424f0 <_IO_stdin_used@@Base+0x144f0>
  4113de:	mov    esi,0x1
  4113e3:	call   405400 <__fprintf_chk@plt>
  4113e8:	xor    eax,eax
  4113ea:	mov    rbx,QWORD PTR [rsp+0x1e8]
  4113f2:	xor    rbx,QWORD PTR fs:0x28
  4113fb:	jne    411771 <__flatcc_fb_gen_c_builder@@Base+0xdb1>
  411401:	add    rsp,0x1f8
  411408:	pop    rbx
  411409:	pop    rbp
  41140a:	pop    r12
  41140c:	pop    r13
  41140e:	pop    r14
  411410:	pop    r15
  411412:	ret    
  411413:	nop    DWORD PTR [rax+rax*1+0x0]
  411418:	mov    rsi,QWORD PTR [r15+0x18]
  41141c:	mov    rdx,r14
  41141f:	mov    rdi,QWORD PTR [rsi+0x18]
  411423:	mov    DWORD PTR [rsp+0xc],r8d
  411428:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  41142d:	mov    rax,QWORD PTR [r15+0x18]
  411431:	mov    r8d,DWORD PTR [rsp+0xc]
  411436:	movzx  eax,WORD PTR [rax+0x10]
  41143a:	cmp    ax,0x1
  41143e:	je     4115f0 <__flatcc_fb_gen_c_builder@@Base+0xc30>
  411444:	test   ax,ax
  411447:	je     411638 <__flatcc_fb_gen_c_builder@@Base+0xc78>
  41144d:	cmp    ax,0x3
  411451:	je     4115f0 <__flatcc_fb_gen_c_builder@@Base+0xc30>
  411457:	cmp    ax,0x4
  41145b:	jne    411721 <__flatcc_fb_gen_c_builder@@Base+0xd61>
  411461:	mov    rcx,QWORD PTR [r15+0x88]
  411468:	mov    rdi,QWORD PTR [rbx+0xd0]
  41146f:	mov    r9,r14
  411472:	lea    rdx,[rip+0x30ddf]        # 442258 <_IO_stdin_used@@Base+0x14258>
  411479:	mov    esi,0x1
  41147e:	xor    eax,eax
  411480:	call   405400 <__fprintf_chk@plt>
  411485:	jmp    4112e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  41148a:	nop    WORD PTR [rax+rax*1+0x0]
  411490:	mov    rsi,QWORD PTR [r15+0x90]
  411497:	test   rsi,rsi
  41149a:	je     4115f0 <__flatcc_fb_gen_c_builder@@Base+0xc30>
  4114a0:	mov    rdi,QWORD PTR [rsi+0x18]
  4114a4:	mov    rdx,r14
  4114a7:	mov    DWORD PTR [rsp+0xc],r8d
  4114ac:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  4114b1:	mov    rax,QWORD PTR [r15+0x90]
  4114b8:	mov    r8d,DWORD PTR [rsp+0xc]
  4114bd:	cmp    WORD PTR [rax+0x10],0x0
  4114c2:	jne    411698 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
  4114c8:	sub    rsp,0x8
  4114cc:	mov    rdi,QWORD PTR [rbx+0xd0]
  4114d3:	movzx  r9d,WORD PTR [r15+0x72]
  4114d8:	mov    rcx,QWORD PTR [r15+0x88]
  4114df:	push   r14
  4114e1:	lea    rdx,[rip+0x30ae0]        # 441fc8 <_IO_stdin_used@@Base+0x13fc8>
  4114e8:	mov    esi,0x1
  4114ed:	xor    eax,eax
  4114ef:	call   405400 <__fprintf_chk@plt>
  4114f4:	pop    rdi
  4114f5:	pop    r8
  4114f7:	jmp    4112e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  4114fc:	nop    DWORD PTR [rax+0x0]
  411500:	mov    rcx,QWORD PTR [r15+0x88]
  411507:	mov    rdi,QWORD PTR [rbx+0xd0]
  41150e:	lea    rdx,[rip+0x30b7b]        # 442090 <_IO_stdin_used@@Base+0x14090>
  411515:	mov    esi,0x1
  41151a:	xor    eax,eax
  41151c:	call   405400 <__fprintf_chk@plt>
  411521:	jmp    4112e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  411526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411530:	mov    rsi,QWORD PTR [r15+0x18]
  411534:	mov    rdx,r14
  411537:	mov    rdi,QWORD PTR [rsi+0x18]
  41153b:	mov    DWORD PTR [rsp+0xc],r8d
  411540:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  411545:	mov    rax,QWORD PTR [r15+0x18]
  411549:	movzx  eax,WORD PTR [rax+0x10]
  41154d:	cmp    ax,0x1
  411551:	je     4112b0 <__flatcc_fb_gen_c_builder@@Base+0x8f0>
  411557:	test   ax,ax
  41155a:	mov    r8d,DWORD PTR [rsp+0xc]
  41155f:	je     411668 <__flatcc_fb_gen_c_builder@@Base+0xca8>
  411565:	cmp    ax,0x3
  411569:	je     4112b0 <__flatcc_fb_gen_c_builder@@Base+0x8f0>
  41156f:	cmp    ax,0x4
  411573:	jne    4116d1 <__flatcc_fb_gen_c_builder@@Base+0xd11>
  411579:	mov    rcx,QWORD PTR [r15+0x88]
  411580:	mov    rdi,QWORD PTR [rbx+0xd0]
  411587:	mov    r9,r14
  41158a:	lea    rdx,[rip+0x30b97]        # 442128 <_IO_stdin_used@@Base+0x14128>
  411591:	mov    esi,0x1
  411596:	xor    eax,eax
  411598:	call   405400 <__fprintf_chk@plt>
  41159d:	jmp    4112e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  4115a2:	nop    WORD PTR [rax+rax*1+0x0]
  4115a8:	mov    rcx,QWORD PTR [r15+0x88]
  4115af:	mov    rdi,QWORD PTR [rbx+0xd0]
  4115b6:	lea    rdx,[rip+0x30afb]        # 4420b8 <_IO_stdin_used@@Base+0x140b8>
  4115bd:	mov    esi,0x1
  4115c2:	xor    eax,eax
  4115c4:	call   405400 <__fprintf_chk@plt>
  4115c9:	jmp    4112e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  4115ce:	xchg   ax,ax
  4115d0:	lea    rdx,[rip+0x309a9]        # 441f80 <_IO_stdin_used@@Base+0x13f80>
  4115d7:	mov    esi,0x1
  4115dc:	xor    eax,eax
  4115de:	call   405400 <__fprintf_chk@plt>
  4115e3:	jmp    411286 <__flatcc_fb_gen_c_builder@@Base+0x8c6>
  4115e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4115f0:	mov    r9,QWORD PTR [r15+0x80]
  4115f7:	mov    eax,0xffffffff
  4115fc:	test   r9,r9
  4115ff:	je     411606 <__flatcc_fb_gen_c_builder@@Base+0xc46>
  411601:	xor    edx,edx
  411603:	div    r9
  411606:	mov    rcx,QWORD PTR [r15+0x88]
  41160d:	mov    rdi,QWORD PTR [rbx+0xd0]
  411614:	push   rax
  411615:	movzx  eax,WORD PTR [r15+0x72]
  41161a:	push   rax
  41161b:	lea    rdx,[rip+0x30a2e]        # 442050 <_IO_stdin_used@@Base+0x14050>
  411622:	mov    esi,0x1
  411627:	xor    eax,eax
  411629:	call   405400 <__fprintf_chk@plt>
  41162e:	pop    rax
  41162f:	pop    rdx
  411630:	jmp    4112e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  411635:	nop    DWORD PTR [rax]
  411638:	mov    rcx,QWORD PTR [r15+0x88]
  41163f:	mov    rdi,QWORD PTR [rbx+0xd0]
  411646:	mov    r9,r14
  411649:	lea    rdx,[rip+0x30bc8]        # 442218 <_IO_stdin_used@@Base+0x14218>
  411650:	mov    esi,0x1
  411655:	xor    eax,eax
  411657:	call   405400 <__fprintf_chk@plt>
  41165c:	jmp    4112e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  411661:	nop    DWORD PTR [rax+0x0]
  411668:	mov    rcx,QWORD PTR [r15+0x88]
  41166f:	mov    rdi,QWORD PTR [rbx+0xd0]
  411676:	mov    r9,r14
  411679:	lea    rdx,[rip+0x30a68]        # 4420e8 <_IO_stdin_used@@Base+0x140e8>
  411680:	mov    esi,0x1
  411685:	xor    eax,eax
  411687:	call   405400 <__fprintf_chk@plt>
  41168c:	jmp    4112e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  411691:	nop    DWORD PTR [rax+0x0]
  411698:	movzx  eax,WORD PTR [r15+0x72]
  41169d:	sub    rsp,0x8
  4116a1:	mov    rcx,QWORD PTR [r15+0x88]
  4116a8:	mov    r9,QWORD PTR [r15+0x80]
  4116af:	mov    rdi,QWORD PTR [rbx+0xd0]
  4116b6:	push   rax
  4116b7:	mov    esi,0x1
  4116bc:	lea    rdx,[rip+0x3094d]        # 442010 <_IO_stdin_used@@Base+0x14010>
  4116c3:	xor    eax,eax
  4116c5:	call   405400 <__fprintf_chk@plt>
  4116ca:	pop    rcx
  4116cb:	pop    rsi
  4116cc:	jmp    4112e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  4116d1:	mov    rax,QWORD PTR [rip+0x40910]        # 451fe8 <stderr@GLIBC_2.2.5>
  4116d8:	lea    rcx,[rip+0x30ac9]        # 4421a8 <_IO_stdin_used@@Base+0x141a8>
  4116df:	mov    rdi,QWORD PTR [rax]
  4116e2:	lea    rdx,[rip+0x25baa]        # 437293 <_IO_stdin_used@@Base+0x9293>
  4116e9:	mov    esi,0x1
  4116ee:	lea    r9,[rip+0x30a73]        # 442168 <_IO_stdin_used@@Base+0x14168>
  4116f5:	mov    r8d,0xb2
  4116fb:	xor    eax,eax
  4116fd:	call   405400 <__fprintf_chk@plt>
  411702:	lea    rcx,[rip+0x31487]        # 442b90 <_IO_stdin_used@@Base+0x14b90>
  411709:	mov    edx,0xb2
  41170e:	lea    rsi,[rip+0x30a93]        # 4421a8 <_IO_stdin_used@@Base+0x141a8>
  411715:	lea    rdi,[rip+0x26c3d]        # 438359 <_IO_stdin_used@@Base+0xa359>
  41171c:	call   405300 <__assert_fail@plt>
  411721:	mov    rax,QWORD PTR [rip+0x408c0]        # 451fe8 <stderr@GLIBC_2.2.5>
  411728:	lea    rcx,[rip+0x30a79]        # 4421a8 <_IO_stdin_used@@Base+0x141a8>
  41172f:	mov    rdi,QWORD PTR [rax]
  411732:	lea    rdx,[rip+0x25b5a]        # 437293 <_IO_stdin_used@@Base+0x9293>
  411739:	mov    esi,0x1
  41173e:	lea    r9,[rip+0x30b5b]        # 4422a0 <_IO_stdin_used@@Base+0x142a0>
  411745:	mov    r8d,0xca
  41174b:	xor    eax,eax
  41174d:	call   405400 <__fprintf_chk@plt>
  411752:	lea    rcx,[rip+0x31437]        # 442b90 <_IO_stdin_used@@Base+0x14b90>
  411759:	mov    edx,0xca
  41175e:	lea    rsi,[rip+0x30a43]        # 4421a8 <_IO_stdin_used@@Base+0x141a8>
  411765:	lea    rdi,[rip+0x26bed]        # 438359 <_IO_stdin_used@@Base+0xa359>
  41176c:	call   405300 <__assert_fail@plt>
  411771:	call   4052d0 <__stack_chk_fail@plt>
  411776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411780:	push   r15
  411782:	mov    ecx,0x1d
  411787:	push   r14
  411789:	push   r13
  41178b:	mov    r13,rsi
  41178e:	push   r12
  411790:	push   rbp
  411791:	mov    rbp,rdi
  411794:	push   rbx
  411795:	sub    rsp,0x1e8
  41179c:	mov    rax,QWORD PTR fs:0x28
  4117a5:	mov    QWORD PTR [rsp+0x1d8],rax
  4117ad:	xor    eax,eax
  4117af:	mov    rbx,rsp
  4117b2:	mov    rdi,rbx
  4117b5:	lea    r12,[rsp+0xf0]
  4117bd:	mov    rdx,rbx
  4117c0:	rep stos QWORD PTR es:[rdi],rax
  4117c3:	mov    ecx,0x1d
  4117c8:	mov    rdi,r12
  4117cb:	rep stos QWORD PTR es:[rdi],rax
  4117ce:	mov    rdi,QWORD PTR [rsi+0x18]
  4117d2:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  4117d7:	mov    rdi,QWORD PTR [rbp+0x0]
  4117db:	mov    rcx,rbx
  4117de:	lea    rdx,[rip+0x30dcb]        # 4425b0 <_IO_stdin_used@@Base+0x145b0>
  4117e5:	mov    esi,0x1
  4117ea:	xor    eax,eax
  4117ec:	call   405400 <__fprintf_chk@plt>
  4117f1:	mov    rbx,QWORD PTR [r13+0x28]
  4117f5:	test   rbx,rbx
  4117f8:	je     411908 <__flatcc_fb_gen_c_builder@@Base+0xf48>
  4117fe:	lea    r13,[rip+0x30eeb]        # 4426f0 <_IO_stdin_used@@Base+0x146f0>
  411805:	jmp    411866 <__flatcc_fb_gen_c_builder@@Base+0xea6>
  411807:	nop    WORD PTR [rax+rax*1+0x0]
  411810:	mov    rsi,QWORD PTR [rbx+0x18]
  411814:	mov    rdx,r12
  411817:	mov    rdi,QWORD PTR [rsi+0x18]
  41181b:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  411820:	mov    rdx,QWORD PTR [rbx+0x18]
  411824:	movzx  eax,WORD PTR [rdx+0x10]
  411828:	test   ax,ax
  41182b:	jne    411950 <__flatcc_fb_gen_c_builder@@Base+0xf90>
  411831:	sub    rsp,0x8
  411835:	mov    rcx,QWORD PTR [rbx+0x48]
  411839:	push   r15
  41183b:	mov    r9d,r14d
  41183e:	mov    r8,r12
  411841:	lea    rdx,[rip+0x30dc8]        # 442610 <_IO_stdin_used@@Base+0x14610>
  411848:	mov    rdi,QWORD PTR [rbp+0x0]
  41184c:	mov    esi,0x1
  411851:	xor    eax,eax
  411853:	call   405400 <__fprintf_chk@plt>
  411858:	pop    rax
  411859:	pop    rdx
  41185a:	mov    rbx,QWORD PTR [rbx]
  41185d:	test   rbx,rbx
  411860:	je     411908 <__flatcc_fb_gen_c_builder@@Base+0xf48>
  411866:	mov    rax,QWORD PTR [rbx+0x8]
  41186a:	mov    r15,QWORD PTR [rax]
  41186d:	mov    r14,QWORD PTR [rax+0x8]
  411871:	movzx  eax,WORD PTR [rbx+0x28]
  411875:	cmp    ax,0xa
  411879:	je     4118e0 <__flatcc_fb_gen_c_builder@@Base+0xf20>
  41187b:	cmp    ax,0xe
  41187f:	je     411810 <__flatcc_fb_gen_c_builder@@Base+0xe50>
  411881:	test   ax,ax
  411884:	je     41185a <__flatcc_fb_gen_c_builder@@Base+0xe9a>
  411886:	mov    rax,QWORD PTR [rip+0x4075b]        # 451fe8 <stderr@GLIBC_2.2.5>
  41188d:	lea    rcx,[rip+0x30914]        # 4421a8 <_IO_stdin_used@@Base+0x141a8>
  411894:	mov    rdi,QWORD PTR [rax]
  411897:	lea    rdx,[rip+0x259f5]        # 437293 <_IO_stdin_used@@Base+0x9293>
  41189e:	mov    esi,0x1
  4118a3:	lea    r9,[rip+0x30e86]        # 442730 <_IO_stdin_used@@Base+0x14730>
  4118aa:	mov    r8d,0x53
  4118b0:	xor    eax,eax
  4118b2:	call   405400 <__fprintf_chk@plt>
  4118b7:	lea    rcx,[rip+0x312f2]        # 442bb0 <_IO_stdin_used@@Base+0x14bb0>
  4118be:	mov    edx,0x53
  4118c3:	lea    rsi,[rip+0x308de]        # 4421a8 <_IO_stdin_used@@Base+0x141a8>
  4118ca:	lea    rdi,[rip+0x26a88]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4118d1:	call   405300 <__assert_fail@plt>
  4118d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4118e0:	mov    ecx,DWORD PTR [rbx+0x48]
  4118e3:	mov    rdi,QWORD PTR [rbp+0x0]
  4118e7:	mov    r9,r15
  4118ea:	mov    r8d,r14d
  4118ed:	mov    rdx,r13
  4118f0:	mov    esi,0x1
  4118f5:	xor    eax,eax
  4118f7:	call   405400 <__fprintf_chk@plt>
  4118fc:	mov    rbx,QWORD PTR [rbx]
  4118ff:	test   rbx,rbx
  411902:	jne    411866 <__flatcc_fb_gen_c_builder@@Base+0xea6>
  411908:	mov    rdi,QWORD PTR [rbp+0x0]
  41190c:	xor    eax,eax
  41190e:	lea    rdx,[rip+0x30e53]        # 442768 <_IO_stdin_used@@Base+0x14768>
  411915:	mov    esi,0x1
  41191a:	call   405400 <__fprintf_chk@plt>
  41191f:	xor    eax,eax
  411921:	mov    rcx,QWORD PTR [rsp+0x1d8]
  411929:	xor    rcx,QWORD PTR fs:0x28
  411932:	jne    4119c9 <__flatcc_fb_gen_c_builder@@Base+0x1009>
  411938:	add    rsp,0x1e8
  41193f:	pop    rbx
  411940:	pop    rbp
  411941:	pop    r12
  411943:	pop    r13
  411945:	pop    r14
  411947:	pop    r15
  411949:	ret    
  41194a:	nop    WORD PTR [rax+rax*1+0x0]
  411950:	cmp    ax,0x1
  411954:	jne    411979 <__flatcc_fb_gen_c_builder@@Base+0xfb9>
  411956:	movzx  r9d,WORD PTR [rdx+0xb0]
  41195e:	mov    r8,QWORD PTR [rdx+0xb8]
  411965:	mov    rcx,QWORD PTR [rbx+0x48]
  411969:	push   r15
  41196b:	lea    rdx,[rip+0x30cee]        # 442660 <_IO_stdin_used@@Base+0x14660>
  411972:	push   r14
  411974:	jmp    411848 <__flatcc_fb_gen_c_builder@@Base+0xe88>
  411979:	mov    rax,QWORD PTR [rip+0x40668]        # 451fe8 <stderr@GLIBC_2.2.5>
  411980:	lea    rcx,[rip+0x30821]        # 4421a8 <_IO_stdin_used@@Base+0x141a8>
  411987:	mov    rdi,QWORD PTR [rax]
  41198a:	lea    rdx,[rip+0x25902]        # 437293 <_IO_stdin_used@@Base+0x9293>
  411991:	mov    esi,0x1
  411996:	lea    r9,[rip+0x30d13]        # 4426b0 <_IO_stdin_used@@Base+0x146b0>
  41199d:	mov    r8d,0x4a
  4119a3:	xor    eax,eax
  4119a5:	call   405400 <__fprintf_chk@plt>
  4119aa:	lea    rcx,[rip+0x311ff]        # 442bb0 <_IO_stdin_used@@Base+0x14bb0>
  4119b1:	mov    edx,0x4a
  4119b6:	lea    rsi,[rip+0x307eb]        # 4421a8 <_IO_stdin_used@@Base+0x141a8>
  4119bd:	lea    rdi,[rip+0x26995]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4119c4:	call   405300 <__assert_fail@plt>
  4119c9:	call   4052d0 <__stack_chk_fail@plt>
  4119ce:	xchg   ax,ax

00000000004119d0 <__flatcc_fb_gen_c_verifier@@Base>:
  4119d0:	endbr64 
  4119d4:	push   r13
  4119d6:	lea    rdx,[rip+0x30dbb]        # 442798 <_IO_stdin_used@@Base+0x14798>
  4119dd:	mov    esi,0x1
  4119e2:	push   r12
  4119e4:	push   rbp
  4119e5:	push   rbx
  4119e6:	mov    rbx,rdi
  4119e9:	sub    rsp,0xf8
  4119f0:	mov    rax,QWORD PTR fs:0x28
  4119f9:	mov    QWORD PTR [rsp+0xe8],rax
  411a01:	xor    eax,eax
  411a03:	mov    rax,QWORD PTR [rdi+0xd8]
  411a0a:	mov    rdi,QWORD PTR [rdi+0xd0]
  411a11:	mov    rcx,QWORD PTR [rax+0x118]
  411a18:	xor    eax,eax
  411a1a:	mov    r8,rcx
  411a1d:	call   405400 <__fprintf_chk@plt>
  411a22:	mov    rdi,QWORD PTR [rbx+0xd0]
  411a29:	lea    rdx,[rip+0x1f438]        # 430e68 <_IO_stdin_used@@Base+0x2e68>
  411a30:	mov    esi,0x1
  411a35:	xor    eax,eax
  411a37:	call   405400 <__fprintf_chk@plt>
  411a3c:	mov    rax,QWORD PTR [rbx+0xd8]
  411a43:	mov    rdi,QWORD PTR [rbx+0xd0]
  411a4a:	mov    rcx,QWORD PTR [rax+0x118]
  411a51:	lea    rdx,[rip+0x26b01]        # 438559 <_IO_stdin_used@@Base+0xa559>
  411a58:	mov    esi,0x1
  411a5d:	xor    eax,eax
  411a5f:	call   405400 <__fprintf_chk@plt>
  411a64:	mov    rax,QWORD PTR [rbx+0xd8]
  411a6b:	mov    rdi,QWORD PTR [rbx+0xd0]
  411a72:	mov    rcx,QWORD PTR [rax+0x110]
  411a79:	lea    rdx,[rip+0x26aee]        # 43856e <_IO_stdin_used@@Base+0xa56e>
  411a80:	mov    esi,0x1
  411a85:	xor    eax,eax
  411a87:	call   405400 <__fprintf_chk@plt>
  411a8c:	mov    rdi,QWORD PTR [rbx+0xd0]
  411a93:	lea    rdx,[rip+0x26a60]        # 4384fa <_IO_stdin_used@@Base+0xa4fa>
  411a9a:	mov    esi,0x1
  411a9f:	xor    eax,eax
  411aa1:	call   405400 <__fprintf_chk@plt>
  411aa6:	mov    rdi,QWORD PTR [rbx+0xd0]
  411aad:	lea    rdx,[rip+0x30d14]        # 4427c8 <_IO_stdin_used@@Base+0x147c8>
  411ab4:	mov    esi,0x1
  411ab9:	xor    eax,eax
  411abb:	call   405400 <__fprintf_chk@plt>
  411ac0:	lea    rsi,[rip+0x1dfaa]        # 42fa71 <_IO_stdin_used@@Base+0x1a71>
  411ac7:	mov    rdi,rbx
  411aca:	lea    rdx,[rip+0x31059]        # 442b2a <_IO_stdin_used@@Base+0x14b2a>
  411ad1:	call   407120 <__flatcc_fb_gen_c_includes@@Base>
  411ad6:	mov    rax,QWORD PTR [rbx+0xe0]
  411add:	mov    rdi,QWORD PTR [rbx+0xd0]
  411ae4:	mov    esi,DWORD PTR [rax+0xac]
  411aea:	test   esi,esi
  411aec:	jne    411d90 <__flatcc_fb_gen_c_verifier@@Base+0x3c0>
  411af2:	lea    rdx,[rip+0x34e64]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  411af9:	mov    esi,0x1
  411afe:	xor    eax,eax
  411b00:	mov    r12,rsp
  411b03:	call   405400 <__fprintf_chk@plt>
  411b08:	xor    eax,eax
  411b0a:	mov    ecx,0x1d
  411b0f:	mov    rdi,r12
  411b12:	rep stos QWORD PTR es:[rdi],rax
  411b15:	mov    rax,QWORD PTR [rbx+0xd8]
  411b1c:	lea    r13,[rip+0x30ccd]        # 4427f0 <_IO_stdin_used@@Base+0x147f0>
  411b23:	mov    rbp,QWORD PTR [rax+0x40]
  411b27:	test   rbp,rbp
  411b2a:	jne    411b39 <__flatcc_fb_gen_c_verifier@@Base+0x169>
  411b2c:	jmp    411b71 <__flatcc_fb_gen_c_verifier@@Base+0x1a1>
  411b2e:	xchg   ax,ax
  411b30:	mov    rbp,QWORD PTR [rbp+0x0]
  411b34:	test   rbp,rbp
  411b37:	je     411b71 <__flatcc_fb_gen_c_verifier@@Base+0x1a1>
  411b39:	cmp    WORD PTR [rbp+0x10],0x0
  411b3e:	jne    411b30 <__flatcc_fb_gen_c_verifier@@Base+0x160>
  411b40:	mov    rdi,QWORD PTR [rbp+0x18]
  411b44:	mov    rsi,rbp
  411b47:	mov    rdx,r12
  411b4a:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  411b4f:	mov    rdi,QWORD PTR [rbx+0xd0]
  411b56:	mov    rcx,r12
  411b59:	mov    rdx,r13
  411b5c:	mov    esi,0x1
  411b61:	xor    eax,eax
  411b63:	call   405400 <__fprintf_chk@plt>
  411b68:	mov    rbp,QWORD PTR [rbp+0x0]
  411b6c:	test   rbp,rbp
  411b6f:	jne    411b39 <__flatcc_fb_gen_c_verifier@@Base+0x169>
  411b71:	mov    rdi,QWORD PTR [rbx+0xd0]
  411b78:	lea    rdx,[rip+0x34dde]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  411b7f:	mov    esi,0x1
  411b84:	xor    eax,eax
  411b86:	call   405400 <__fprintf_chk@plt>
  411b8b:	mov    rax,QWORD PTR [rbx+0xd8]
  411b92:	lea    r13,[rbx+0xd0]
  411b99:	mov    rbp,QWORD PTR [rax+0x40]
  411b9d:	test   rbp,rbp
  411ba0:	jne    411bb9 <__flatcc_fb_gen_c_verifier@@Base+0x1e9>
  411ba2:	jmp    411d2c <__flatcc_fb_gen_c_verifier@@Base+0x35c>
  411ba7:	nop    WORD PTR [rax+rax*1+0x0]
  411bb0:	mov    rbp,QWORD PTR [rbp+0x0]
  411bb4:	test   rbp,rbp
  411bb7:	je     411bd4 <__flatcc_fb_gen_c_verifier@@Base+0x204>
  411bb9:	cmp    WORD PTR [rbp+0x10],0x4
  411bbe:	jne    411bb0 <__flatcc_fb_gen_c_verifier@@Base+0x1e0>
  411bc0:	mov    rsi,rbp
  411bc3:	mov    rdi,r13
  411bc6:	call   411780 <__flatcc_fb_gen_c_builder@@Base+0xdc0>
  411bcb:	mov    rbp,QWORD PTR [rbp+0x0]
  411bcf:	test   rbp,rbp
  411bd2:	jne    411bb9 <__flatcc_fb_gen_c_verifier@@Base+0x1e9>
  411bd4:	mov    rax,QWORD PTR [rbx+0xd8]
  411bdb:	mov    rbp,QWORD PTR [rax+0x40]
  411bdf:	test   rbp,rbp
  411be2:	je     411d2c <__flatcc_fb_gen_c_verifier@@Base+0x35c>
  411be8:	xor    r13d,r13d
  411beb:	jmp    411bfd <__flatcc_fb_gen_c_verifier@@Base+0x22d>
  411bed:	nop    DWORD PTR [rax]
  411bf0:	mov    rbp,QWORD PTR [rbp+0x0]
  411bf4:	test   rbp,rbp
  411bf7:	je     411cf1 <__flatcc_fb_gen_c_verifier@@Base+0x321>
  411bfd:	cmp    WORD PTR [rbp+0x10],0x1
  411c02:	jne    411bf0 <__flatcc_fb_gen_c_verifier@@Base+0x220>
  411c04:	mov    rax,r13
  411c07:	mov    ecx,0x1d
  411c0c:	mov    rdi,r12
  411c0f:	rep stos QWORD PTR es:[rdi],rax
  411c12:	mov    rsi,rbp
  411c15:	mov    rdx,r12
  411c18:	mov    rdi,QWORD PTR [rbp+0x18]
  411c1c:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  411c21:	movzx  eax,WORD PTR [rbp+0xb0]
  411c28:	sub    rsp,0x8
  411c2c:	mov    r9,QWORD PTR [rbp+0xb8]
  411c33:	push   rax
  411c34:	mov    rdi,QWORD PTR [rbx+0xd0]
  411c3b:	mov    r8,r12
  411c3e:	mov    rcx,r12
  411c41:	lea    rdx,[rip+0x30bf0]        # 442838 <_IO_stdin_used@@Base+0x14838>
  411c48:	mov    esi,0x1
  411c4d:	xor    eax,eax
  411c4f:	call   405400 <__fprintf_chk@plt>
  411c54:	movzx  eax,WORD PTR [rbp+0xb0]
  411c5b:	mov    r9,QWORD PTR [rbp+0xb8]
  411c62:	mov    rdi,QWORD PTR [rbx+0xd0]
  411c69:	mov    DWORD PTR [rsp],eax
  411c6c:	mov    r8,r12
  411c6f:	mov    rcx,r12
  411c72:	lea    rdx,[rip+0x30c57]        # 4428d0 <_IO_stdin_used@@Base+0x148d0>
  411c79:	mov    esi,0x1
  411c7e:	xor    eax,eax
  411c80:	call   405400 <__fprintf_chk@plt>
  411c85:	movzx  eax,WORD PTR [rbp+0xb0]
  411c8c:	mov    r9,QWORD PTR [rbp+0xb8]
  411c93:	mov    rdi,QWORD PTR [rbx+0xd0]
  411c9a:	mov    DWORD PTR [rsp],eax
  411c9d:	mov    r8,rbx
  411ca0:	mov    rcx,r12
  411ca3:	lea    rdx,[rip+0x30cce]        # 442978 <_IO_stdin_used@@Base+0x14978>
  411caa:	mov    esi,0x1
  411caf:	xor    eax,eax
  411cb1:	call   405400 <__fprintf_chk@plt>
  411cb6:	movzx  r9d,WORD PTR [rbp+0xb0]
  411cbe:	mov    r8,QWORD PTR [rbp+0xb8]
  411cc5:	mov    rdi,QWORD PTR [rbx+0xd0]
  411ccc:	mov    rcx,r12
  411ccf:	lea    rdx,[rip+0x30d5a]        # 442a30 <_IO_stdin_used@@Base+0x14a30>
  411cd6:	mov    esi,0x1
  411cdb:	xor    eax,eax
  411cdd:	call   405400 <__fprintf_chk@plt>
  411ce2:	mov    rbp,QWORD PTR [rbp+0x0]
  411ce6:	pop    rdx
  411ce7:	pop    rcx
  411ce8:	test   rbp,rbp
  411ceb:	jne    411bfd <__flatcc_fb_gen_c_verifier@@Base+0x22d>
  411cf1:	mov    rax,QWORD PTR [rbx+0xd8]
  411cf8:	mov    rbp,QWORD PTR [rax+0x40]
  411cfc:	test   rbp,rbp
  411cff:	jne    411d11 <__flatcc_fb_gen_c_verifier@@Base+0x341>
  411d01:	jmp    411d2c <__flatcc_fb_gen_c_verifier@@Base+0x35c>
  411d03:	nop    DWORD PTR [rax+rax*1+0x0]
  411d08:	mov    rbp,QWORD PTR [rbp+0x0]
  411d0c:	test   rbp,rbp
  411d0f:	je     411d2c <__flatcc_fb_gen_c_verifier@@Base+0x35c>
  411d11:	cmp    WORD PTR [rbp+0x10],0x0
  411d16:	jne    411d08 <__flatcc_fb_gen_c_verifier@@Base+0x338>
  411d18:	mov    rsi,rbp
  411d1b:	mov    rdi,rbx
  411d1e:	call   4111c0 <__flatcc_fb_gen_c_builder@@Base+0x800>
  411d23:	mov    rbp,QWORD PTR [rbp+0x0]
  411d27:	test   rbp,rbp
  411d2a:	jne    411d11 <__flatcc_fb_gen_c_verifier@@Base+0x341>
  411d2c:	mov    rax,QWORD PTR [rbx+0xe0]
  411d33:	mov    rdi,QWORD PTR [rbx+0xd0]
  411d3a:	mov    eax,DWORD PTR [rax+0xac]
  411d40:	test   eax,eax
  411d42:	jne    411db0 <__flatcc_fb_gen_c_verifier@@Base+0x3e0>
  411d44:	mov    rax,QWORD PTR [rbx+0xd8]
  411d4b:	lea    rdx,[rip+0x30de4]        # 442b36 <_IO_stdin_used@@Base+0x14b36>
  411d52:	mov    rcx,QWORD PTR [rax+0x118]
  411d59:	mov    esi,0x1
  411d5e:	xor    eax,eax
  411d60:	call   405400 <__fprintf_chk@plt>
  411d65:	xor    eax,eax
  411d67:	mov    rdx,QWORD PTR [rsp+0xe8]
  411d6f:	xor    rdx,QWORD PTR fs:0x28
  411d78:	jne    411dcf <__flatcc_fb_gen_c_verifier@@Base+0x3ff>
  411d7a:	add    rsp,0xf8
  411d81:	pop    rbx
  411d82:	pop    rbp
  411d83:	pop    r12
  411d85:	pop    r13
  411d87:	ret    
  411d88:	nop    DWORD PTR [rax+rax*1+0x0]
  411d90:	lea    rdx,[rip+0x1f1e9]        # 430f80 <_IO_stdin_used@@Base+0x2f80>
  411d97:	mov    esi,0x1
  411d9c:	xor    eax,eax
  411d9e:	call   405400 <__fprintf_chk@plt>
  411da3:	mov    rdi,QWORD PTR [rbx+0xd0]
  411daa:	jmp    411af2 <__flatcc_fb_gen_c_verifier@@Base+0x122>
  411daf:	nop
  411db0:	lea    rdx,[rip+0x25079]        # 436e30 <_IO_stdin_used@@Base+0x8e30>
  411db7:	mov    esi,0x1
  411dbc:	xor    eax,eax
  411dbe:	call   405400 <__fprintf_chk@plt>
  411dc3:	mov    rdi,QWORD PTR [rbx+0xd0]
  411dca:	jmp    411d44 <__flatcc_fb_gen_c_verifier@@Base+0x374>
  411dcf:	call   4052d0 <__stack_chk_fail@plt>
  411dd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411dde:	xchg   ax,ax
  411de0:	endbr64 
  411de4:	mov    rdx,rdi
  411de7:	lea    rdi,[rsi+0x8]
  411deb:	lea    rsi,[rip+0x3f1e]        # 415d10 <__flatcc_fb_gen_c_verifier@@Base+0x4340>
  411df2:	jmp    41c080 <fb_symbol_table_visit@@Base>
  411df7:	nop    WORD PTR [rax+rax*1+0x0]
  411e00:	endbr64 
  411e04:	mov    rdx,rdi
  411e07:	lea    rdi,[rsi+0x8]
  411e0b:	lea    rsi,[rip+0x40be]        # 415ed0 <__flatcc_fb_gen_c_verifier@@Base+0x4500>
  411e12:	jmp    41c080 <fb_symbol_table_visit@@Base>
  411e17:	nop    WORD PTR [rax+rax*1+0x0]
  411e20:	push   rbp
  411e21:	movsxd rsi,esi
  411e24:	mov    rbp,rsi
  411e27:	push   rbx
  411e28:	lea    rcx,[rip+0xe1]        # 411f10 <__flatcc_fb_gen_c_verifier@@Base+0x540>
  411e2f:	mov    edx,0x10
  411e34:	sub    rsp,0x8
  411e38:	mov    rbx,rdi
  411e3b:	call   405280 <qsort@plt>
  411e40:	test   ebp,ebp
  411e42:	jle    411e6e <__flatcc_fb_gen_c_verifier@@Base+0x49e>
  411e44:	lea    ecx,[rbp-0x1]
  411e47:	xor    eax,eax
  411e49:	jmp    411e53 <__flatcc_fb_gen_c_verifier@@Base+0x483>
  411e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  411e50:	mov    rax,rdx
  411e53:	mov    rdx,rax
  411e56:	shl    rdx,0x4
  411e5a:	mov    rdx,QWORD PTR [rbx+rdx*1]
  411e5e:	mov    QWORD PTR [rdx+0xc8],rax
  411e65:	lea    rdx,[rax+0x1]
  411e69:	cmp    rcx,rax
  411e6c:	jne    411e50 <__flatcc_fb_gen_c_verifier@@Base+0x480>
  411e6e:	add    rsp,0x8
  411e72:	pop    rbx
  411e73:	pop    rbp
  411e74:	ret    
  411e75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  411e80:	endbr64 
  411e84:	push   rbp
  411e85:	push   rbx
  411e86:	sub    rsp,0x8
  411e8a:	mov    ebp,DWORD PTR [rsi+0x8]
  411e8d:	movsxd rbx,DWORD PTR [rdi+0x8]
  411e91:	movsxd rdx,ebp
  411e94:	cmp    ebx,ebp
  411e96:	cmovle rdx,rbx
  411e9a:	mov    rsi,QWORD PTR [rsi]
  411e9d:	mov    rdi,QWORD PTR [rdi]
  411ea0:	sub    ebx,ebp
  411ea2:	call   405330 <memcmp@plt>
  411ea7:	test   eax,eax
  411ea9:	cmove  eax,ebx
  411eac:	add    rsp,0x8
  411eb0:	pop    rbx
  411eb1:	pop    rbp
  411eb2:	ret    
  411eb3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  411ebe:	xchg   ax,ax
  411ec0:	push   rbx
  411ec1:	mov    rbx,rdi
  411ec4:	mov    rdi,QWORD PTR [rdi+0x18]
  411ec8:	test   rdi,rdi
  411ecb:	je     411ed2 <__flatcc_fb_gen_c_verifier@@Base+0x502>
  411ecd:	call   405240 <free@plt>
  411ed2:	mov    rdi,QWORD PTR [rbx+0x20]
  411ed6:	test   rdi,rdi
  411ed9:	je     411ee0 <__flatcc_fb_gen_c_verifier@@Base+0x510>
  411edb:	call   405240 <free@plt>
  411ee0:	mov    rdi,QWORD PTR [rbx+0x28]
  411ee4:	test   rdi,rdi
  411ee7:	je     411eee <__flatcc_fb_gen_c_verifier@@Base+0x51e>
  411ee9:	call   405240 <free@plt>
  411eee:	vpxor  xmm0,xmm0,xmm0
  411ef2:	vmovaps XMMWORD PTR [rbx],xmm0
  411ef6:	vmovaps XMMWORD PTR [rbx+0x10],xmm0
  411efb:	vmovaps XMMWORD PTR [rbx+0x20],xmm0
  411f00:	vmovaps XMMWORD PTR [rbx+0x30],xmm0
  411f05:	vmovaps XMMWORD PTR [rbx+0x40],xmm0
  411f0a:	pop    rbx
  411f0b:	ret    
  411f0c:	nop    DWORD PTR [rax+0x0]
  411f10:	endbr64 
  411f14:	mov    rsi,QWORD PTR [rsi+0x8]
  411f18:	mov    rdi,QWORD PTR [rdi+0x8]
  411f1c:	jmp    405350 <strcmp@plt>
  411f21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  411f2c:	nop    DWORD PTR [rax+0x0]
  411f30:	push   r14
  411f32:	mov    r14,rsi
  411f35:	push   r13
  411f37:	push   r12
  411f39:	push   rbp
  411f3a:	mov    rbp,rdi
  411f3d:	push   rbx
  411f3e:	sub    rsp,0xd0
  411f45:	mov    QWORD PTR [rsp+0x30],rdx
  411f4a:	mov    QWORD PTR [rsp+0x38],rcx
  411f4f:	mov    QWORD PTR [rsp+0x40],r8
  411f54:	mov    QWORD PTR [rsp+0x48],r9
  411f59:	test   al,al
  411f5b:	je     411f9c <__flatcc_fb_gen_c_verifier@@Base+0x5cc>
  411f5d:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  411f63:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  411f69:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  411f6f:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  411f78:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  411f81:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  411f8a:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  411f93:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  411f9c:	mov    rax,QWORD PTR fs:0x28
  411fa5:	mov    QWORD PTR [rsp+0x18],rax
  411faa:	xor    eax,eax
  411fac:	mov    rax,QWORD PTR [rbp+0xe0]
  411fb3:	cmp    BYTE PTR [rip+0x401a6],0x0        # 452160 <__bss_start@@Base+0x38>
  411fba:	mov    r12d,DWORD PTR [rbp+0xf0]
  411fc1:	mov    eax,DWORD PTR [rax+0xd0]
  411fc7:	je     4120c8 <__flatcc_fb_gen_c_verifier@@Base+0x6f8>
  411fcd:	cmp    BYTE PTR [r14],0x0
  411fd1:	je     41208a <__flatcc_fb_gen_c_verifier@@Base+0x6ba>
  411fd7:	imul   r12d,eax
  411fdb:	cmp    r12d,0x40
  411fdf:	jle    412029 <__flatcc_fb_gen_c_verifier@@Base+0x659>
  411fe1:	mov    ebx,r12d
  411fe4:	lea    r13,[rip+0x40175]        # 452160 <__bss_start@@Base+0x38>
  411feb:	nop    DWORD PTR [rax+rax*1+0x0]
  411ff0:	mov    rdi,QWORD PTR [rbp+0xd0]
  411ff7:	mov    r8,r13
  411ffa:	mov    ecx,0x40
  411fff:	lea    rdx,[rip+0x26363]        # 438369 <_IO_stdin_used@@Base+0xa369>
  412006:	mov    esi,0x1
  41200b:	xor    eax,eax
  41200d:	sub    ebx,0x40
  412010:	call   405400 <__fprintf_chk@plt>
  412015:	cmp    ebx,0x40
  412018:	jg     411ff0 <__flatcc_fb_gen_c_verifier@@Base+0x620>
  41201a:	lea    eax,[r12-0x41]
  41201f:	and    eax,0xffffffc0
  412022:	neg    eax
  412024:	lea    r12d,[r12+rax*1-0x40]
  412029:	mov    rdi,QWORD PTR [rbp+0xd0]
  412030:	mov    ecx,r12d
  412033:	lea    rdx,[rip+0x2632f]        # 438369 <_IO_stdin_used@@Base+0xa369>
  41203a:	mov    esi,0x1
  41203f:	lea    r8,[rip+0x4011a]        # 452160 <__bss_start@@Base+0x38>
  412046:	xor    eax,eax
  412048:	call   405400 <__fprintf_chk@plt>
  41204d:	lea    rax,[rsp+0x100]
  412055:	mov    rdi,QWORD PTR [rbp+0xd0]
  41205c:	mov    QWORD PTR [rsp+0x8],rax
  412061:	mov    rcx,rsp
  412064:	lea    rax,[rsp+0x20]
  412069:	mov    rdx,r14
  41206c:	mov    esi,0x1
  412071:	mov    DWORD PTR [rsp],0x10
  412078:	mov    DWORD PTR [rsp+0x4],0x30
  412080:	mov    QWORD PTR [rsp+0x10],rax
  412085:	call   405250 <__vfprintf_chk@plt>
  41208a:	mov    rdi,QWORD PTR [rbp+0xd0]
  412091:	xor    eax,eax
  412093:	lea    rdx,[rip+0x348c3]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  41209a:	mov    esi,0x1
  41209f:	call   405400 <__fprintf_chk@plt>
  4120a4:	mov    rax,QWORD PTR [rsp+0x18]
  4120a9:	xor    rax,QWORD PTR fs:0x28
  4120b2:	jne    4120f5 <__flatcc_fb_gen_c_verifier@@Base+0x725>
  4120b4:	add    rsp,0xd0
  4120bb:	pop    rbx
  4120bc:	pop    rbp
  4120bd:	pop    r12
  4120bf:	pop    r13
  4120c1:	pop    r14
  4120c3:	ret    
  4120c4:	nop    DWORD PTR [rax+0x0]
  4120c8:	vmovdqa xmm0,XMMWORD PTR [rip+0x33260]        # 445330 <_IO_stdin_used@@Base+0x17330>
  4120d0:	vmovaps XMMWORD PTR [rip+0x40088],xmm0        # 452160 <__bss_start@@Base+0x38>
  4120d8:	vmovaps XMMWORD PTR [rip+0x40090],xmm0        # 452170 <__bss_start@@Base+0x48>
  4120e0:	vmovaps XMMWORD PTR [rip+0x40098],xmm0        # 452180 <__bss_start@@Base+0x58>
  4120e8:	vmovaps XMMWORD PTR [rip+0x400a0],xmm0        # 452190 <__bss_start@@Base+0x68>
  4120f0:	jmp    411fcd <__flatcc_fb_gen_c_verifier@@Base+0x5fd>
  4120f5:	call   4052d0 <__stack_chk_fail@plt>
  4120fa:	nop    WORD PTR [rax+rax*1+0x0]
  412100:	endbr64 
  412104:	lea    rsi,[rip+0x30fdd]        # 4430e8 <_IO_stdin_used@@Base+0x150e8>
  41210b:	xor    eax,eax
  41210d:	jmp    411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412112:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41211d:	nop    DWORD PTR [rax]
  412120:	endbr64 
  412124:	lea    rsi,[rip+0x30a98]        # 442bc3 <_IO_stdin_used@@Base+0x14bc3>
  41212b:	xor    eax,eax
  41212d:	jmp    411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412132:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41213d:	nop    DWORD PTR [rax]
  412140:	endbr64 
  412144:	jmp    412120 <__flatcc_fb_gen_c_verifier@@Base+0x750>
  412146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412150:	push   r15
  412152:	mov    r11d,ecx
  412155:	sub    ecx,edx
  412157:	push   r14
  412159:	lea    eax,[rcx+0x1]
  41215c:	mov    ecx,eax
  41215e:	push   r13
  412160:	shr    ecx,0x1f
  412163:	add    ecx,eax
  412165:	push   r12
  412167:	sar    ecx,1
  412169:	lea    eax,[rcx+rdx*1]
  41216c:	push   rbp
  41216d:	mov    r15,rdi
  412170:	mov    r12,rsi
  412173:	push   rbx
  412174:	mov    r14d,edx
  412177:	mov    r13d,r8d
  41217a:	sub    rsp,0x28
  41217e:	mov    DWORD PTR [rsp+0xc],eax
  412182:	cdqe   
  412184:	shl    rax,0x5
  412188:	mov    r10,rax
  41218b:	add    rax,QWORD PTR [rsi]
  41218e:	mov    ecx,DWORD PTR [rax+0x8]
  412191:	mov    DWORD PTR [rsp+0x18],r9d
  412196:	cmp    r8d,ecx
  412199:	jg     412450 <__flatcc_fb_gen_c_verifier@@Base+0xa80>
  41219f:	movsxd rbp,r8d
  4121a2:	mov    edi,ecx
  4121a4:	sub    edi,r8d
  4121a7:	add    rbp,QWORD PTR [rax]
  4121aa:	mov    eax,0x8
  4121af:	cmp    edi,0x8
  4121b2:	mov    ebx,eax
  4121b4:	cmovle ebx,edi
  4121b7:	mov    rdx,0xffffffffffffffff
  4121be:	sub    eax,ebx
  4121c0:	shl    eax,0x3
  4121c3:	lea    r8d,[rbx-0x1]
  4121c7:	shlx   rdx,rdx,rax
  4121cc:	cmp    r13d,ecx
  4121cf:	je     4122f0 <__flatcc_fb_gen_c_verifier@@Base+0x920>
  4121d5:	movsxd r8,r8d
  4121d8:	add    r8,rbp
  4121db:	xor    esi,esi
  4121dd:	nop    DWORD PTR [rax]
  4121e0:	movsx  rcx,BYTE PTR [r8]
  4121e4:	dec    r8
  4121e7:	shlx   rcx,rcx,rax
  4121ec:	add    eax,0x8
  4121ef:	or     rsi,rcx
  4121f2:	cmp    eax,0x40
  4121f5:	jne    4121e0 <__flatcc_fb_gen_c_verifier@@Base+0x810>
  4121f7:	cmp    edi,0x7
  4121fa:	jle    4122f8 <__flatcc_fb_gen_c_verifier@@Base+0x928>
  412200:	mov    rdx,rsi
  412203:	mov    r8,rbp
  412206:	mov    ecx,0x8
  41220b:	lea    rsi,[rip+0x30f16]        # 443128 <_IO_stdin_used@@Base+0x15128>
  412212:	mov    rdi,r15
  412215:	xor    eax,eax
  412217:	mov    DWORD PTR [rsp+0x1c],r11d
  41221c:	mov    QWORD PTR [rsp+0x10],r10
  412221:	mov    ebx,0x8
  412226:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41222b:	inc    DWORD PTR [r15+0xf0]
  412232:	mov    r10,QWORD PTR [rsp+0x10]
  412237:	mov    r11d,DWORD PTR [rsp+0x1c]
  41223c:	cmp    r14d,DWORD PTR [rsp+0xc]
  412241:	jne    412338 <__flatcc_fb_gen_c_verifier@@Base+0x968>
  412247:	mov    rax,QWORD PTR [r12]
  41224b:	mov    rsi,QWORD PTR [r12+0x18]
  412250:	add    rax,r10
  412253:	mov    rdx,QWORD PTR [rax+0x10]
  412257:	mov    ecx,DWORD PTR [rax+0x18]
  41225a:	mov    r8d,ebx
  41225d:	mov    rdi,r15
  412260:	call   QWORD PTR [r12+0x8]
  412265:	mov    edx,DWORD PTR [rsp+0x18]
  412269:	test   edx,edx
  41226b:	jg     412460 <__flatcc_fb_gen_c_verifier@@Base+0xa90>
  412271:	mov    rdi,r15
  412274:	call   QWORD PTR [r12+0x10]
  412279:	mov    eax,DWORD PTR [r15+0xf0]
  412280:	test   eax,eax
  412282:	je     412515 <__flatcc_fb_gen_c_verifier@@Base+0xb45>
  412288:	dec    eax
  41228a:	mov    DWORD PTR [r15+0xf0],eax
  412291:	lea    rsi,[rip+0x30959]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  412298:	xor    eax,eax
  41229a:	mov    rdi,r15
  41229d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4122a2:	mov    eax,DWORD PTR [r15+0xf0]
  4122a9:	test   eax,eax
  4122ab:	je     4124f6 <__flatcc_fb_gen_c_verifier@@Base+0xb26>
  4122b1:	dec    eax
  4122b3:	mov    DWORD PTR [r15+0xf0],eax
  4122ba:	mov    rcx,rbp
  4122bd:	xor    eax,eax
  4122bf:	mov    edx,ebx
  4122c1:	lea    rsi,[rip+0x3092b]        # 442bf3 <_IO_stdin_used@@Base+0x14bf3>
  4122c8:	mov    rdi,r15
  4122cb:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4122d0:	mov    eax,DWORD PTR [rsp+0x18]
  4122d4:	inc    DWORD PTR [r15+0xf0]
  4122db:	test   eax,eax
  4122dd:	jg     4124a0 <__flatcc_fb_gen_c_verifier@@Base+0xad0>
  4122e3:	mov    rdi,r15
  4122e6:	call   QWORD PTR [r12+0x10]
  4122eb:	jmp    41240b <__flatcc_fb_gen_c_verifier@@Base+0xa3b>
  4122f0:	xor    esi,esi
  4122f2:	nop    WORD PTR [rax+rax*1+0x0]
  4122f8:	mov    rcx,rsi
  4122fb:	mov    r9,rbp
  4122fe:	mov    r8d,ebx
  412301:	lea    rsi,[rip+0x30e40]        # 443148 <_IO_stdin_used@@Base+0x15148>
  412308:	mov    rdi,r15
  41230b:	xor    eax,eax
  41230d:	mov    DWORD PTR [rsp+0x1c],r11d
  412312:	mov    QWORD PTR [rsp+0x10],r10
  412317:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41231c:	inc    DWORD PTR [r15+0xf0]
  412323:	mov    r11d,DWORD PTR [rsp+0x1c]
  412328:	mov    r10,QWORD PTR [rsp+0x10]
  41232d:	cmp    r14d,DWORD PTR [rsp+0xc]
  412332:	je     412247 <__flatcc_fb_gen_c_verifier@@Base+0x877>
  412338:	cmp    r11d,DWORD PTR [rsp+0xc]
  41233d:	jne    4123a0 <__flatcc_fb_gen_c_verifier@@Base+0x9d0>
  41233f:	mov    rax,QWORD PTR [r12]
  412343:	mov    rsi,QWORD PTR [r12+0x18]
  412348:	add    rax,r10
  41234b:	mov    rdx,QWORD PTR [rax+0x10]
  41234f:	mov    ecx,DWORD PTR [rax+0x18]
  412352:	mov    r8d,ebx
  412355:	mov    rdi,r15
  412358:	call   QWORD PTR [r12+0x8]
  41235d:	mov    edx,DWORD PTR [rsp+0x18]
  412361:	test   edx,edx
  412363:	jg     412480 <__flatcc_fb_gen_c_verifier@@Base+0xab0>
  412369:	mov    rdi,r15
  41236c:	call   QWORD PTR [r12+0x10]
  412371:	mov    eax,DWORD PTR [r15+0xf0]
  412378:	test   eax,eax
  41237a:	je     4124d7 <__flatcc_fb_gen_c_verifier@@Base+0xb07>
  412380:	dec    eax
  412382:	mov    DWORD PTR [r15+0xf0],eax
  412389:	lea    rsi,[rip+0x30861]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  412390:	mov    rdi,r15
  412393:	xor    eax,eax
  412395:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41239a:	jmp    4123ba <__flatcc_fb_gen_c_verifier@@Base+0x9ea>
  41239c:	nop    DWORD PTR [rax+0x0]
  4123a0:	mov    r9d,DWORD PTR [rsp+0x18]
  4123a5:	mov    edx,DWORD PTR [rsp+0xc]
  4123a9:	mov    r8d,r13d
  4123ac:	mov    ecx,r11d
  4123af:	mov    rsi,r12
  4123b2:	mov    rdi,r15
  4123b5:	call   412150 <__flatcc_fb_gen_c_verifier@@Base+0x780>
  4123ba:	mov    eax,DWORD PTR [r15+0xf0]
  4123c1:	test   eax,eax
  4123c3:	je     412534 <__flatcc_fb_gen_c_verifier@@Base+0xb64>
  4123c9:	dec    eax
  4123cb:	mov    DWORD PTR [r15+0xf0],eax
  4123d2:	mov    rcx,rbp
  4123d5:	mov    edx,ebx
  4123d7:	lea    rsi,[rip+0x30815]        # 442bf3 <_IO_stdin_used@@Base+0x14bf3>
  4123de:	mov    rdi,r15
  4123e1:	xor    eax,eax
  4123e3:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4123e8:	inc    DWORD PTR [r15+0xf0]
  4123ef:	mov    ecx,DWORD PTR [rsp+0xc]
  4123f3:	mov    r9d,DWORD PTR [rsp+0x18]
  4123f8:	dec    ecx
  4123fa:	mov    r8d,r13d
  4123fd:	mov    edx,r14d
  412400:	mov    rsi,r12
  412403:	mov    rdi,r15
  412406:	call   412150 <__flatcc_fb_gen_c_verifier@@Base+0x780>
  41240b:	mov    eax,DWORD PTR [r15+0xf0]
  412412:	test   eax,eax
  412414:	je     4124b8 <__flatcc_fb_gen_c_verifier@@Base+0xae8>
  41241a:	dec    eax
  41241c:	mov    DWORD PTR [r15+0xf0],eax
  412423:	add    rsp,0x28
  412427:	mov    edx,ebx
  412429:	pop    rbx
  41242a:	mov    rcx,rbp
  41242d:	pop    rbp
  41242e:	pop    r12
  412430:	pop    r13
  412432:	pop    r14
  412434:	mov    rdi,r15
  412437:	lea    rsi,[rip+0x307cb]        # 442c09 <_IO_stdin_used@@Base+0x14c09>
  41243e:	xor    eax,eax
  412440:	pop    r15
  412442:	jmp    411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412447:	nop    WORD PTR [rax+rax*1+0x0]
  412450:	xor    edx,edx
  412452:	xor    esi,esi
  412454:	xor    ebx,ebx
  412456:	xor    ebp,ebp
  412458:	jmp    4122f8 <__flatcc_fb_gen_c_verifier@@Base+0x928>
  41245d:	nop    DWORD PTR [rax]
  412460:	lea    rsi,[rip+0x3076e]        # 442bd5 <_IO_stdin_used@@Base+0x14bd5>
  412467:	mov    rdi,r15
  41246a:	xor    eax,eax
  41246c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412471:	jmp    412279 <__flatcc_fb_gen_c_verifier@@Base+0x8a9>
  412476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412480:	lea    rsi,[rip+0x3074e]        # 442bd5 <_IO_stdin_used@@Base+0x14bd5>
  412487:	mov    rdi,r15
  41248a:	xor    eax,eax
  41248c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412491:	jmp    412371 <__flatcc_fb_gen_c_verifier@@Base+0x9a1>
  412496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4124a0:	mov    edx,eax
  4124a2:	lea    rsi,[rip+0x3072c]        # 442bd5 <_IO_stdin_used@@Base+0x14bd5>
  4124a9:	mov    rdi,r15
  4124ac:	xor    eax,eax
  4124ae:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4124b3:	jmp    41240b <__flatcc_fb_gen_c_verifier@@Base+0xa3b>
  4124b8:	lea    rcx,[rip+0x32de1]        # 4452a0 <_IO_stdin_used@@Base+0x172a0>
  4124bf:	mov    edx,0x38e
  4124c4:	lea    rsi,[rip+0x30cad]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4124cb:	lea    rdi,[rip+0x30713]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4124d2:	call   405300 <__assert_fail@plt>
  4124d7:	lea    rcx,[rip+0x32dc2]        # 4452a0 <_IO_stdin_used@@Base+0x172a0>
  4124de:	mov    edx,0x387
  4124e3:	lea    rsi,[rip+0x30c8e]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4124ea:	lea    rdi,[rip+0x306f4]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4124f1:	call   405300 <__assert_fail@plt>
  4124f6:	lea    rcx,[rip+0x32da3]        # 4452a0 <_IO_stdin_used@@Base+0x172a0>
  4124fd:	mov    edx,0x379
  412502:	lea    rsi,[rip+0x30c6f]        # 443178 <_IO_stdin_used@@Base+0x15178>
  412509:	lea    rdi,[rip+0x306d5]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  412510:	call   405300 <__assert_fail@plt>
  412515:	lea    rcx,[rip+0x32d84]        # 4452a0 <_IO_stdin_used@@Base+0x172a0>
  41251c:	mov    edx,0x378
  412521:	lea    rsi,[rip+0x30c50]        # 443178 <_IO_stdin_used@@Base+0x15178>
  412528:	lea    rdi,[rip+0x306b6]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  41252f:	call   405300 <__assert_fail@plt>
  412534:	lea    rcx,[rip+0x32d65]        # 4452a0 <_IO_stdin_used@@Base+0x172a0>
  41253b:	mov    edx,0x38b
  412540:	lea    rsi,[rip+0x30c31]        # 443178 <_IO_stdin_used@@Base+0x15178>
  412547:	lea    rdi,[rip+0x30697]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  41254e:	call   405300 <__assert_fail@plt>
  412553:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41255e:	xchg   ax,ax
  412560:	push   r15
  412562:	movsxd rax,edx
  412565:	shl    rax,0x5
  412569:	push   r14
  41256b:	push   r13
  41256d:	push   r12
  41256f:	push   rbp
  412570:	push   rbx
  412571:	sub    rsp,0x38
  412575:	mov    rbx,QWORD PTR [rsi]
  412578:	mov    QWORD PTR [rsp+0x20],rax
  41257d:	mov    eax,DWORD PTR [rbx+rax*1+0x8]
  412581:	mov    QWORD PTR [rsp],rbx
  412585:	lea    ebx,[r8+0x7]
  412589:	mov    DWORD PTR [rsp+0x18],eax
  41258d:	mov    DWORD PTR [rsp+0x28],ebx
  412591:	cmp    ebx,eax
  412593:	jge    412998 <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
  412599:	sub    eax,r8d
  41259c:	cmp    eax,0x8
  41259f:	je     412998 <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
  4125a5:	mov    eax,ecx
  4125a7:	sub    eax,edx
  4125a9:	mov    ebp,eax
  4125ab:	shr    ebp,0x1f
  4125ae:	add    ebp,eax
  4125b0:	sar    ebp,1
  4125b2:	add    ebp,edx
  4125b4:	mov    ebx,r8d
  4125b7:	mov    DWORD PTR [rsp+0x14],ecx
  4125bb:	mov    DWORD PTR [rsp+0x10],edx
  4125bf:	mov    QWORD PTR [rsp+0x8],rsi
  4125c4:	mov    r12,rdi
  4125c7:	mov    eax,edx
  4125c9:	cmp    edx,ebp
  4125cb:	jge    4126de <__flatcc_fb_gen_c_verifier@@Base+0xd0e>
  4125d1:	movsxd r8,ebp
  4125d4:	shl    r8,0x5
  4125d8:	mov    r13d,ebp
  4125db:	mov    DWORD PTR [rsp+0x2c],ebp
  4125df:	add    r8,QWORD PTR [rsp]
  4125e3:	xor    edi,edi
  4125e5:	xor    edx,edx
  4125e7:	xor    r9d,r9d
  4125ea:	movsxd rcx,ebx
  4125ed:	mov    r10d,0x8
  4125f3:	mov    ebp,eax
  4125f5:	nop    DWORD PTR [rax]
  4125f8:	mov    r11d,DWORD PTR [r8-0x18]
  4125fc:	cmp    ebx,r11d
  4125ff:	jg     41265c <__flatcc_fb_gen_c_verifier@@Base+0xc8c>
  412601:	mov    esi,r11d
  412604:	sub    esi,ebx
  412606:	cmp    esi,0x8
  412609:	cmovg  esi,r10d
  41260d:	lea    eax,[rsi-0x1]
  412610:	cmp    ebx,r11d
  412613:	je     412b00 <__flatcc_fb_gen_c_verifier@@Base+0x1130>
  412619:	cdqe   
  41261b:	mov    edx,r10d
  41261e:	add    rax,rcx
  412621:	sub    edx,esi
  412623:	add    rax,QWORD PTR [r8-0x20]
  412627:	shl    edx,0x3
  41262a:	xor    r9d,r9d
  41262d:	nop    DWORD PTR [rax]
  412630:	movsx  r11,BYTE PTR [rax]
  412634:	dec    rax
  412637:	shlx   r11,r11,rdx
  41263c:	add    edx,0x8
  41263f:	or     r9,r11
  412642:	cmp    edx,0x40
  412645:	jne    412630 <__flatcc_fb_gen_c_verifier@@Base+0xc60>
  412647:	mov    edx,r10d
  41264a:	sub    edx,esi
  41264c:	shl    edx,0x3
  41264f:	mov    eax,0x1
  412654:	shlx   rdx,rax,rdx
  412659:	neg    rdx
  41265c:	mov    r11d,DWORD PTR [r8+0x8]
  412660:	mov    rax,r9
  412663:	mov    r15,QWORD PTR [r8]
  412666:	xor    rax,rdi
  412669:	cmp    ebx,r11d
  41266c:	jg     4126bd <__flatcc_fb_gen_c_verifier@@Base+0xced>
  41266e:	mov    esi,r11d
  412671:	sub    esi,ebx
  412673:	cmp    esi,0x8
  412676:	cmovg  esi,r10d
  41267a:	lea    eax,[rsi-0x1]
  41267d:	cmp    ebx,r11d
  412680:	je     4129e0 <__flatcc_fb_gen_c_verifier@@Base+0x1010>
  412686:	mov    edi,r10d
  412689:	sub    edi,esi
  41268b:	cdqe   
  41268d:	mov    esi,edi
  41268f:	add    rax,rcx
  412692:	add    rax,r15
  412695:	shl    esi,0x3
  412698:	xor    edi,edi
  41269a:	nop    WORD PTR [rax+rax*1+0x0]
  4126a0:	movsx  r14,BYTE PTR [rax]
  4126a4:	dec    rax
  4126a7:	shlx   r14,r14,rsi
  4126ac:	add    esi,0x8
  4126af:	or     rdi,r14
  4126b2:	cmp    esi,0x40
  4126b5:	jne    4126a0 <__flatcc_fb_gen_c_verifier@@Base+0xcd0>
  4126b7:	mov    rax,rdi
  4126ba:	xor    rax,r9
  4126bd:	lea    r14d,[r13-0x1]
  4126c1:	test   rdx,rax
  4126c4:	jne    4129f8 <__flatcc_fb_gen_c_verifier@@Base+0x1028>
  4126ca:	sub    r8,0x20
  4126ce:	mov    r13d,r14d
  4126d1:	cmp    ebp,r14d
  4126d4:	jne    4125f8 <__flatcc_fb_gen_c_verifier@@Base+0xc28>
  4126da:	mov    ebp,DWORD PTR [rsp+0x2c]
  4126de:	mov    r15d,ebp
  4126e1:	cmp    DWORD PTR [rsp+0x14],ebp
  4126e5:	jle    4127ee <__flatcc_fb_gen_c_verifier@@Base+0xe1e>
  4126eb:	movsxd rcx,ebp
  4126ee:	shl    rcx,0x5
  4126f2:	mov    r10d,DWORD PTR [rsp+0x14]
  4126f7:	add    rcx,QWORD PTR [rsp]
  4126fb:	xor    edi,edi
  4126fd:	xor    r11d,r11d
  412700:	xor    esi,esi
  412702:	movsxd r9,ebx
  412705:	mov    r8d,0x8
  41270b:	mov    r13d,0x1
  412711:	nop    DWORD PTR [rax+0x0]
  412718:	mov    edx,DWORD PTR [rcx+0x8]
  41271b:	cmp    ebx,edx
  41271d:	jg     412779 <__flatcc_fb_gen_c_verifier@@Base+0xda9>
  41271f:	mov    r14d,edx
  412722:	sub    r14d,ebx
  412725:	cmp    r14d,0x8
  412729:	cmovg  r14d,r8d
  41272d:	lea    eax,[r14-0x1]
  412731:	cmp    ebx,edx
  412733:	je     412b10 <__flatcc_fb_gen_c_verifier@@Base+0x1140>
  412739:	cdqe   
  41273b:	mov    edx,r8d
  41273e:	add    rax,r9
  412741:	sub    edx,r14d
  412744:	add    rax,QWORD PTR [rcx]
  412747:	shl    edx,0x3
  41274a:	xor    esi,esi
  41274c:	nop    DWORD PTR [rax+0x0]
  412750:	movsx  r11,BYTE PTR [rax]
  412754:	dec    rax
  412757:	shlx   r11,r11,rdx
  41275c:	add    edx,0x8
  41275f:	or     rsi,r11
  412762:	cmp    edx,0x40
  412765:	jne    412750 <__flatcc_fb_gen_c_verifier@@Base+0xd80>
  412767:	mov    r11d,r8d
  41276a:	sub    r11d,r14d
  41276d:	shl    r11d,0x3
  412771:	shlx   r11,r13,r11
  412776:	neg    r11
  412779:	mov    r14d,DWORD PTR [rcx+0x28]
  41277d:	mov    rax,rsi
  412780:	xor    rax,rdi
  412783:	cmp    ebx,r14d
  412786:	jg     4127d5 <__flatcc_fb_gen_c_verifier@@Base+0xe05>
  412788:	mov    edx,r14d
  41278b:	sub    edx,ebx
  41278d:	cmp    edx,0x8
  412790:	cmovg  edx,r8d
  412794:	lea    eax,[rdx-0x1]
  412797:	cmp    ebx,r14d
  41279a:	je     412b20 <__flatcc_fb_gen_c_verifier@@Base+0x1150>
  4127a0:	mov    edi,r8d
  4127a3:	sub    edi,edx
  4127a5:	cdqe   
  4127a7:	mov    edx,edi
  4127a9:	add    rax,r9
  4127ac:	add    rax,QWORD PTR [rcx+0x20]
  4127b0:	shl    edx,0x3
  4127b3:	xor    edi,edi
  4127b5:	nop    DWORD PTR [rax]
  4127b8:	movsx  r14,BYTE PTR [rax]
  4127bc:	dec    rax
  4127bf:	shlx   r14,r14,rdx
  4127c4:	add    edx,0x8
  4127c7:	or     rdi,r14
  4127ca:	cmp    edx,0x40
  4127cd:	jne    4127b8 <__flatcc_fb_gen_c_verifier@@Base+0xde8>
  4127cf:	mov    rax,rdi
  4127d2:	xor    rax,rsi
  4127d5:	lea    r15d,[rbp+0x1]
  4127d9:	test   r11,rax
  4127dc:	jne    4127f4 <__flatcc_fb_gen_c_verifier@@Base+0xe24>
  4127de:	add    rcx,0x20
  4127e2:	mov    ebp,r15d
  4127e5:	cmp    r10d,r15d
  4127e8:	jne    412718 <__flatcc_fb_gen_c_verifier@@Base+0xd48>
  4127ee:	mov    ebp,r15d
  4127f1:	inc    r15d
  4127f4:	mov    r13d,DWORD PTR [rsp+0x10]
  4127f9:	cmp    r13d,r15d
  4127fc:	jge    412df0 <__flatcc_fb_gen_c_verifier@@Base+0x1420>
  412802:	mov    rax,QWORD PTR [rsp]
  412806:	mov    rcx,QWORD PTR [rsp+0x20]
  41280b:	mov    esi,DWORD PTR [rsp+0x28]
  41280f:	lea    rax,[rax+rcx*1+0x28]
  412814:	mov    edx,DWORD PTR [rsp+0x18]
  412818:	jmp    412826 <__flatcc_fb_gen_c_verifier@@Base+0xe56>
  41281a:	nop    WORD PTR [rax+rax*1+0x0]
  412820:	mov    edx,DWORD PTR [rax]
  412822:	add    rax,0x20
  412826:	cmp    esi,edx
  412828:	jge    412837 <__flatcc_fb_gen_c_verifier@@Base+0xe67>
  41282a:	mov    ecx,edx
  41282c:	sub    ecx,ebx
  41282e:	cmp    ecx,0x8
  412831:	jg     412b30 <__flatcc_fb_gen_c_verifier@@Base+0x1160>
  412837:	inc    r13d
  41283a:	cmp    r13d,r15d
  41283d:	jne    412820 <__flatcc_fb_gen_c_verifier@@Base+0xe50>
  41283f:	cmp    DWORD PTR [rsp+0x10],r13d
  412844:	jge    412e6a <__flatcc_fb_gen_c_verifier@@Base+0x149a>
  41284a:	cmp    DWORD PTR [rsp+0x14],r13d
  41284f:	jl     412e6a <__flatcc_fb_gen_c_verifier@@Base+0x149a>
  412855:	mov    DWORD PTR [rsp],0x0
  41285c:	mov    r8d,r13d
  41285f:	lea    r14,[rip+0x340f8]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  412866:	mov    rax,QWORD PTR [rsp+0x8]
  41286b:	mov    edx,DWORD PTR [rsp+0x10]
  41286f:	mov    ecx,DWORD PTR [rax+0x28]
  412872:	mov    rsi,rax
  412875:	lea    ebp,[rcx+0x1]
  412878:	mov    DWORD PTR [rax+0x28],ebp
  41287b:	lea    ecx,[r8-0x1]
  41287f:	mov    r9d,ebp
  412882:	mov    r8d,ebx
  412885:	mov    rdi,r12
  412888:	mov    QWORD PTR [rsp+0x8],rax
  41288d:	call   412150 <__flatcc_fb_gen_c_verifier@@Base+0x780>
  412892:	mov    edx,ebp
  412894:	lea    rsi,[rip+0x30411]        # 442cac <_IO_stdin_used@@Base+0x14cac>
  41289b:	mov    rdi,r12
  41289e:	xor    eax,eax
  4128a0:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4128a5:	mov    eax,DWORD PTR [r12+0xf0]
  4128ad:	mov    DWORD PTR [r12+0xf0],0x0
  4128b9:	mov    DWORD PTR [r12+0xf8],eax
  4128c1:	mov    edx,ebp
  4128c3:	lea    rsi,[rip+0x303f8]        # 442cc2 <_IO_stdin_used@@Base+0x14cc2>
  4128ca:	mov    rdi,r12
  4128cd:	xor    eax,eax
  4128cf:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4128d4:	mov    eax,DWORD PTR [r12+0xf8]
  4128dc:	mov    ecx,DWORD PTR [rsp+0x14]
  4128e0:	mov    DWORD PTR [r12+0xf0],eax
  4128e8:	mov    rsi,QWORD PTR [rsp+0x8]
  4128ed:	mov    r8d,ebx
  4128f0:	mov    edx,r15d
  4128f3:	mov    rdi,r12
  4128f6:	call   412560 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  4128fb:	mov    eax,DWORD PTR [r12+0xf0]
  412903:	mov    DWORD PTR [r12+0xf0],0x0
  41290f:	mov    DWORD PTR [r12+0xf8],eax
  412917:	lea    rsi,[rip+0x303a1]        # 442cbf <_IO_stdin_used@@Base+0x14cbf>
  41291e:	mov    rdi,r12
  412921:	xor    eax,eax
  412923:	mov    edx,ebp
  412925:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41292a:	mov    eax,DWORD PTR [r12+0xf8]
  412932:	lea    rsi,[rip+0x30394]        # 442ccd <_IO_stdin_used@@Base+0x14ccd>
  412939:	mov    DWORD PTR [r12+0xf0],eax
  412941:	mov    rdi,r12
  412944:	xor    eax,eax
  412946:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41294b:	cmp    r13d,r15d
  41294e:	jge    412c83 <__flatcc_fb_gen_c_verifier@@Base+0x12b3>
  412954:	mov    eax,DWORD PTR [r12+0xf0]
  41295c:	test   eax,eax
  41295e:	je     412e2f <__flatcc_fb_gen_c_verifier@@Base+0x145f>
  412964:	dec    eax
  412966:	mov    DWORD PTR [r12+0xf0],eax
  41296e:	mov    edx,DWORD PTR [rsp]
  412971:	mov    rcx,r14
  412974:	lea    rsi,[rip+0x3035b]        # 442cd6 <_IO_stdin_used@@Base+0x14cd6>
  41297b:	add    rsp,0x38
  41297f:	pop    rbx
  412980:	pop    rbp
  412981:	mov    rdi,r12
  412984:	pop    r12
  412986:	pop    r13
  412988:	pop    r14
  41298a:	xor    eax,eax
  41298c:	pop    r15
  41298e:	jmp    411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412993:	nop    DWORD PTR [rax+rax*1+0x0]
  412998:	cmp    edx,ecx
  41299a:	je     4129c8 <__flatcc_fb_gen_c_verifier@@Base+0xff8>
  41299c:	lea    eax,[rdx+0x1]
  41299f:	cmp    eax,ecx
  4129a1:	jne    4125a5 <__flatcc_fb_gen_c_verifier@@Base+0xbd5>
  4129a7:	movsxd rax,ecx
  4129aa:	mov    rbx,QWORD PTR [rsp]
  4129ae:	shl    rax,0x5
  4129b2:	mov    eax,DWORD PTR [rbx+rax*1+0x8]
  4129b6:	cmp    DWORD PTR [rsp+0x28],eax
  4129ba:	jge    4129c8 <__flatcc_fb_gen_c_verifier@@Base+0xff8>
  4129bc:	sub    eax,r8d
  4129bf:	cmp    eax,0x8
  4129c2:	jne    4125a5 <__flatcc_fb_gen_c_verifier@@Base+0xbd5>
  4129c8:	add    rsp,0x38
  4129cc:	pop    rbx
  4129cd:	pop    rbp
  4129ce:	pop    r12
  4129d0:	pop    r13
  4129d2:	pop    r14
  4129d4:	xor    r9d,r9d
  4129d7:	pop    r15
  4129d9:	jmp    412150 <__flatcc_fb_gen_c_verifier@@Base+0x780>
  4129de:	xchg   ax,ax
  4129e0:	mov    rax,r9
  4129e3:	xor    edi,edi
  4129e5:	lea    r14d,[r13-0x1]
  4129e9:	test   rdx,rax
  4129ec:	je     4126ca <__flatcc_fb_gen_c_verifier@@Base+0xcfa>
  4129f2:	nop    WORD PTR [rax+rax*1+0x0]
  4129f8:	cmp    ebx,r11d
  4129fb:	jg     412cd8 <__flatcc_fb_gen_c_verifier@@Base+0x1308>
  412a01:	mov    ebp,r11d
  412a04:	movsxd rax,ebx
  412a07:	sub    ebp,ebx
  412a09:	add    r15,rax
  412a0c:	mov    eax,0x8
  412a11:	cmp    ebp,0x8
  412a14:	cmovg  ebp,eax
  412a17:	lea    esi,[rbp-0x1]
  412a1a:	cmp    ebx,r11d
  412a1d:	je     412de7 <__flatcc_fb_gen_c_verifier@@Base+0x1417>
  412a23:	movsxd rsi,esi
  412a26:	sub    eax,ebp
  412a28:	add    rsi,r15
  412a2b:	shl    eax,0x3
  412a2e:	xor    edx,edx
  412a30:	movsx  rcx,BYTE PTR [rsi]
  412a34:	dec    rsi
  412a37:	shlx   rcx,rcx,rax
  412a3c:	add    eax,0x8
  412a3f:	or     rdx,rcx
  412a42:	cmp    eax,0x40
  412a45:	jne    412a30 <__flatcc_fb_gen_c_verifier@@Base+0x1060>
  412a47:	xor    eax,eax
  412a49:	mov    r8,r15
  412a4c:	mov    ecx,ebp
  412a4e:	lea    rsi,[rip+0x30793]        # 4431e8 <_IO_stdin_used@@Base+0x151e8>
  412a55:	mov    rdi,r12
  412a58:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412a5d:	inc    DWORD PTR [r12+0xf0]
  412a65:	mov    edx,DWORD PTR [rsp+0x10]
  412a69:	mov    rsi,QWORD PTR [rsp+0x8]
  412a6e:	mov    r8d,ebx
  412a71:	mov    ecx,r14d
  412a74:	mov    rdi,r12
  412a77:	call   412560 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  412a7c:	mov    eax,DWORD PTR [r12+0xf0]
  412a84:	test   eax,eax
  412a86:	je     412ebd <__flatcc_fb_gen_c_verifier@@Base+0x14ed>
  412a8c:	dec    eax
  412a8e:	mov    DWORD PTR [r12+0xf0],eax
  412a96:	mov    rcx,r15
  412a99:	xor    eax,eax
  412a9b:	mov    edx,ebp
  412a9d:	lea    rsi,[rip+0x30174]        # 442c18 <_IO_stdin_used@@Base+0x14c18>
  412aa4:	mov    rdi,r12
  412aa7:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412aac:	inc    DWORD PTR [r12+0xf0]
  412ab4:	mov    ecx,DWORD PTR [rsp+0x14]
  412ab8:	mov    rsi,QWORD PTR [rsp+0x8]
  412abd:	mov    r8d,ebx
  412ac0:	mov    edx,r13d
  412ac3:	mov    rdi,r12
  412ac6:	call   412560 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  412acb:	mov    eax,DWORD PTR [r12+0xf0]
  412ad3:	test   eax,eax
  412ad5:	je     412edc <__flatcc_fb_gen_c_verifier@@Base+0x150c>
  412adb:	dec    eax
  412add:	mov    DWORD PTR [r12+0xf0],eax
  412ae5:	mov    rcx,r15
  412ae8:	mov    edx,ebp
  412aea:	lea    rsi,[rip+0x30144]        # 442c35 <_IO_stdin_used@@Base+0x14c35>
  412af1:	jmp    41297b <__flatcc_fb_gen_c_verifier@@Base+0xfab>
  412af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412b00:	xor    r9d,r9d
  412b03:	jmp    412647 <__flatcc_fb_gen_c_verifier@@Base+0xc77>
  412b08:	nop    DWORD PTR [rax+rax*1+0x0]
  412b10:	xor    esi,esi
  412b12:	jmp    412767 <__flatcc_fb_gen_c_verifier@@Base+0xd97>
  412b17:	nop    WORD PTR [rax+rax*1+0x0]
  412b20:	mov    rax,rsi
  412b23:	xor    edi,edi
  412b25:	jmp    4127d5 <__flatcc_fb_gen_c_verifier@@Base+0xe05>
  412b2a:	nop    WORD PTR [rax+rax*1+0x0]
  412b30:	movsxd r9,r13d
  412b33:	lea    eax,[rbx+0x8]
  412b36:	mov    DWORD PTR [rsp+0x18],edx
  412b3a:	shl    r9,0x5
  412b3e:	mov    DWORD PTR [rsp+0x28],eax
  412b42:	cmp    r13d,DWORD PTR [rsp+0x10]
  412b47:	jg     412c98 <__flatcc_fb_gen_c_verifier@@Base+0x12c8>
  412b4d:	cmp    ebx,DWORD PTR [rsp+0x18]
  412b51:	jg     412db8 <__flatcc_fb_gen_c_verifier@@Base+0x13e8>
  412b57:	mov    DWORD PTR [rsp+0x20],0x0
  412b5f:	mov    rax,QWORD PTR [rsp]
  412b63:	movsxd r14,ebx
  412b66:	add    r14,QWORD PTR [rax+r9*1]
  412b6a:	lea    rsi,[r14+0x7]
  412b6e:	xor    eax,eax
  412b70:	xor    edx,edx
  412b72:	nop    WORD PTR [rax+rax*1+0x0]
  412b78:	movsx  rcx,BYTE PTR [rsi]
  412b7c:	dec    rsi
  412b7f:	shlx   rcx,rcx,rax
  412b84:	add    eax,0x8
  412b87:	or     rdx,rcx
  412b8a:	cmp    eax,0x40
  412b8d:	jne    412b78 <__flatcc_fb_gen_c_verifier@@Base+0x11a8>
  412b8f:	mov    DWORD PTR [rsp],0x8
  412b96:	mov    ecx,DWORD PTR [rsp]
  412b99:	xor    eax,eax
  412b9b:	mov    r8,r14
  412b9e:	lea    rsi,[rip+0x3066b]        # 443210 <_IO_stdin_used@@Base+0x15210>
  412ba5:	mov    rdi,r12
  412ba8:	mov    QWORD PTR [rsp+0x18],r9
  412bad:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412bb2:	mov    eax,DWORD PTR [rsp+0x20]
  412bb6:	inc    DWORD PTR [r12+0xf0]
  412bbe:	test   eax,eax
  412bc0:	jne    412ce8 <__flatcc_fb_gen_c_verifier@@Base+0x1318>
  412bc6:	lea    rsi,[rip+0x3009a]        # 442c67 <_IO_stdin_used@@Base+0x14c67>
  412bcd:	mov    rdi,r12
  412bd0:	xor    eax,eax
  412bd2:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412bd7:	lea    rsi,[rip+0x3067a]        # 443258 <_IO_stdin_used@@Base+0x15258>
  412bde:	mov    rdi,r12
  412be1:	xor    eax,eax
  412be3:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412be8:	mov    r8d,DWORD PTR [rsp+0x28]
  412bed:	mov    rsi,QWORD PTR [rsp+0x8]
  412bf2:	mov    ecx,ebp
  412bf4:	mov    edx,r13d
  412bf7:	mov    rdi,r12
  412bfa:	call   412560 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  412bff:	mov    r8d,r13d
  412c02:	mov    eax,DWORD PTR [r12+0xf0]
  412c0a:	test   eax,eax
  412c0c:	je     412e9e <__flatcc_fb_gen_c_verifier@@Base+0x14ce>
  412c12:	dec    eax
  412c14:	mov    DWORD PTR [r12+0xf0],eax
  412c1c:	mov    edx,DWORD PTR [rsp]
  412c1f:	xor    eax,eax
  412c21:	mov    rcx,r14
  412c24:	lea    rsi,[rip+0x30063]        # 442c8e <_IO_stdin_used@@Base+0x14c8e>
  412c2b:	mov    rdi,r12
  412c2e:	mov    DWORD PTR [rsp+0x18],r8d
  412c33:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412c38:	mov    r8d,DWORD PTR [rsp+0x18]
  412c3d:	inc    DWORD PTR [r12+0xf0]
  412c45:	cmp    DWORD PTR [rsp+0x14],r15d
  412c4a:	setge  al
  412c4d:	cmp    r8d,DWORD PTR [rsp+0x10]
  412c52:	jle    412c5c <__flatcc_fb_gen_c_verifier@@Base+0x128c>
  412c54:	test   al,al
  412c56:	jne    412866 <__flatcc_fb_gen_c_verifier@@Base+0xe96>
  412c5c:	cmp    r8d,DWORD PTR [rsp+0x10]
  412c61:	jg     412e7e <__flatcc_fb_gen_c_verifier@@Base+0x14ae>
  412c67:	test   al,al
  412c69:	jne    412e4e <__flatcc_fb_gen_c_verifier@@Base+0x147e>
  412c6f:	mov    rax,QWORD PTR [rsp+0x8]
  412c74:	mov    rdi,r12
  412c77:	call   QWORD PTR [rax+0x10]
  412c7a:	cmp    r13d,r15d
  412c7d:	jl     412954 <__flatcc_fb_gen_c_verifier@@Base+0xf84>
  412c83:	add    rsp,0x38
  412c87:	pop    rbx
  412c88:	pop    rbp
  412c89:	pop    r12
  412c8b:	pop    r13
  412c8d:	pop    r14
  412c8f:	pop    r15
  412c91:	ret    
  412c92:	nop    WORD PTR [rax+rax*1+0x0]
  412c98:	mov    rax,QWORD PTR [rsp]
  412c9c:	mov    eax,DWORD PTR [rax+r9*1-0x18]
  412ca1:	cmp    eax,DWORD PTR [rsp+0x28]
  412ca5:	jg     412b4d <__flatcc_fb_gen_c_verifier@@Base+0x117d>
  412cab:	sub    eax,ebx
  412cad:	cmp    eax,0x8
  412cb0:	sete   al
  412cb3:	movzx  eax,al
  412cb6:	mov    DWORD PTR [rsp+0x20],eax
  412cba:	cmp    ebx,DWORD PTR [rsp+0x18]
  412cbe:	jle    412b5f <__flatcc_fb_gen_c_verifier@@Base+0x118f>
  412cc4:	xor    edx,edx
  412cc6:	xor    r14d,r14d
  412cc9:	mov    DWORD PTR [rsp],0x0
  412cd0:	jmp    412b96 <__flatcc_fb_gen_c_verifier@@Base+0x11c6>
  412cd5:	nop    DWORD PTR [rax]
  412cd8:	xor    edx,edx
  412cda:	xor    r15d,r15d
  412cdd:	xor    ebp,ebp
  412cdf:	jmp    412a47 <__flatcc_fb_gen_c_verifier@@Base+0x1077>
  412ce4:	nop    DWORD PTR [rax+0x0]
  412ce8:	mov    edx,DWORD PTR [rsp]
  412ceb:	mov    rcx,r14
  412cee:	lea    rsi,[rip+0x30543]        # 443238 <_IO_stdin_used@@Base+0x15238>
  412cf5:	mov    rdi,r12
  412cf8:	xor    eax,eax
  412cfa:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412cff:	mov    rdi,QWORD PTR [rsp+0x8]
  412d04:	mov    r9,QWORD PTR [rsp+0x18]
  412d09:	mov    rax,QWORD PTR [rdi]
  412d0c:	mov    rsi,QWORD PTR [rdi+0x18]
  412d10:	lea    rax,[rax+r9*1-0x20]
  412d15:	mov    ecx,DWORD PTR [rax+0x18]
  412d18:	mov    rdx,QWORD PTR [rax+0x10]
  412d1c:	mov    r8d,0x8
  412d22:	mov    rax,rdi
  412d25:	mov    rdi,r12
  412d28:	call   QWORD PTR [rax+0x8]
  412d2b:	mov    edx,DWORD PTR [rsp]
  412d2e:	mov    rcx,r14
  412d31:	lea    rsi,[rip+0x2ff13]        # 442c4b <_IO_stdin_used@@Base+0x14c4b>
  412d38:	mov    rdi,r12
  412d3b:	xor    eax,eax
  412d3d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412d42:	lea    rsi,[rip+0x2ff1e]        # 442c67 <_IO_stdin_used@@Base+0x14c67>
  412d49:	mov    rdi,r12
  412d4c:	xor    eax,eax
  412d4e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412d53:	xor    eax,eax
  412d55:	lea    rsi,[rip+0x304fc]        # 443258 <_IO_stdin_used@@Base+0x15258>
  412d5c:	mov    rdi,r12
  412d5f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412d64:	mov    r8d,DWORD PTR [rsp+0x28]
  412d69:	mov    rsi,QWORD PTR [rsp+0x8]
  412d6e:	mov    ecx,ebp
  412d70:	mov    edx,r13d
  412d73:	mov    rdi,r12
  412d76:	call   412560 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  412d7b:	mov    eax,DWORD PTR [r12+0xf0]
  412d83:	test   eax,eax
  412d85:	je     412e10 <__flatcc_fb_gen_c_verifier@@Base+0x1440>
  412d8b:	dec    eax
  412d8d:	mov    DWORD PTR [r12+0xf0],eax
  412d95:	mov    edx,DWORD PTR [rsp]
  412d98:	mov    rcx,r14
  412d9b:	lea    rsi,[rip+0x2fecf]        # 442c71 <_IO_stdin_used@@Base+0x14c71>
  412da2:	mov    rdi,r12
  412da5:	xor    eax,eax
  412da7:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412dac:	lea    r8d,[r13-0x1]
  412db0:	jmp    412c02 <__flatcc_fb_gen_c_verifier@@Base+0x1232>
  412db5:	nop    DWORD PTR [rax]
  412db8:	xor    r8d,r8d
  412dbb:	xor    ecx,ecx
  412dbd:	xor    edx,edx
  412dbf:	lea    rsi,[rip+0x3044a]        # 443210 <_IO_stdin_used@@Base+0x15210>
  412dc6:	mov    rdi,r12
  412dc9:	xor    eax,eax
  412dcb:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412dd0:	xor    r14d,r14d
  412dd3:	inc    DWORD PTR [r12+0xf0]
  412ddb:	mov    DWORD PTR [rsp],0x0
  412de2:	jmp    412bc6 <__flatcc_fb_gen_c_verifier@@Base+0x11f6>
  412de7:	xor    edx,edx
  412de9:	xor    ebp,ebp
  412deb:	jmp    412a47 <__flatcc_fb_gen_c_verifier@@Base+0x1077>
  412df0:	cmp    DWORD PTR [rsp+0x14],r15d
  412df5:	setge  al
  412df8:	mov    r13d,DWORD PTR [rsp+0x10]
  412dfd:	mov    DWORD PTR [rsp],0x0
  412e04:	lea    r14,[rip+0x33b53]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  412e0b:	jmp    412c67 <__flatcc_fb_gen_c_verifier@@Base+0x1297>
  412e10:	lea    rcx,[rip+0x32499]        # 4452b0 <_IO_stdin_used@@Base+0x172b0>
  412e17:	mov    edx,0x410
  412e1c:	lea    rsi,[rip+0x30355]        # 443178 <_IO_stdin_used@@Base+0x15178>
  412e23:	lea    rdi,[rip+0x2fdbb]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  412e2a:	call   405300 <__assert_fail@plt>
  412e2f:	lea    rcx,[rip+0x3247a]        # 4452b0 <_IO_stdin_used@@Base+0x172b0>
  412e36:	mov    edx,0x430
  412e3b:	lea    rsi,[rip+0x30336]        # 443178 <_IO_stdin_used@@Base+0x15178>
  412e42:	lea    rdi,[rip+0x2fd9c]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  412e49:	call   405300 <__assert_fail@plt>
  412e4e:	mov    ecx,DWORD PTR [rsp+0x14]
  412e52:	mov    rsi,QWORD PTR [rsp+0x8]
  412e57:	mov    r8d,ebx
  412e5a:	mov    edx,r15d
  412e5d:	mov    rdi,r12
  412e60:	call   412560 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  412e65:	jmp    41294b <__flatcc_fb_gen_c_verifier@@Base+0xf7b>
  412e6a:	mov    DWORD PTR [rsp],0x0
  412e71:	mov    r8d,r15d
  412e74:	mov    r13d,r15d
  412e77:	lea    r14,[rip+0x33ae0]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  412e7e:	mov    edx,DWORD PTR [rsp+0x10]
  412e82:	mov    rsi,QWORD PTR [rsp+0x8]
  412e87:	lea    ecx,[r8-0x1]
  412e8b:	xor    r9d,r9d
  412e8e:	mov    r8d,ebx
  412e91:	mov    rdi,r12
  412e94:	call   412150 <__flatcc_fb_gen_c_verifier@@Base+0x780>
  412e99:	jmp    41294b <__flatcc_fb_gen_c_verifier@@Base+0xf7b>
  412e9e:	lea    rcx,[rip+0x3240b]        # 4452b0 <_IO_stdin_used@@Base+0x172b0>
  412ea5:	mov    edx,0x414
  412eaa:	lea    rsi,[rip+0x302c7]        # 443178 <_IO_stdin_used@@Base+0x15178>
  412eb1:	lea    rdi,[rip+0x2fd2d]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  412eb8:	call   405300 <__assert_fail@plt>
  412ebd:	lea    rcx,[rip+0x323ec]        # 4452b0 <_IO_stdin_used@@Base+0x172b0>
  412ec4:	mov    edx,0x3cd
  412ec9:	lea    rsi,[rip+0x302a8]        # 443178 <_IO_stdin_used@@Base+0x15178>
  412ed0:	lea    rdi,[rip+0x2fd0e]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  412ed7:	call   405300 <__assert_fail@plt>
  412edc:	lea    rcx,[rip+0x323cd]        # 4452b0 <_IO_stdin_used@@Base+0x172b0>
  412ee3:	mov    edx,0x3cf
  412ee8:	lea    rsi,[rip+0x30289]        # 443178 <_IO_stdin_used@@Base+0x15178>
  412eef:	lea    rdi,[rip+0x2fcef]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  412ef6:	call   405300 <__assert_fail@plt>
  412efb:	nop    DWORD PTR [rax+rax*1+0x0]
  412f00:	endbr64 
  412f04:	push   rbp
  412f05:	push   rbx
  412f06:	mov    rbx,rdi
  412f09:	mov    rdi,rsi
  412f0c:	sub    rsp,0xe8
  412f13:	mov    rbp,rsp
  412f16:	mov    rsi,rbp
  412f19:	mov    rax,QWORD PTR fs:0x28
  412f22:	mov    QWORD PTR [rsp+0xd8],rax
  412f2a:	xor    eax,eax
  412f2c:	call   4072e0 <__flatcc_fb_copy_scope@@Base>
  412f31:	mov    rax,QWORD PTR [rbx+0xd8]
  412f38:	mov    rcx,rbp
  412f3b:	mov    rdx,QWORD PTR [rax+0x110]
  412f42:	lea    rsi,[rip+0x3033f]        # 443288 <_IO_stdin_used@@Base+0x15288>
  412f49:	xor    eax,eax
  412f4b:	mov    rdi,rbx
  412f4e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412f53:	xor    eax,eax
  412f55:	lea    rsi,[rip+0x3039c]        # 4432f8 <_IO_stdin_used@@Base+0x152f8>
  412f5c:	mov    rdi,rbx
  412f5f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412f64:	mov    rax,QWORD PTR [rsp+0xd8]
  412f6c:	xor    rax,QWORD PTR fs:0x28
  412f75:	jne    412f81 <__flatcc_fb_gen_c_verifier@@Base+0x15b1>
  412f77:	add    rsp,0xe8
  412f7e:	pop    rbx
  412f7f:	pop    rbp
  412f80:	ret    
  412f81:	call   4052d0 <__stack_chk_fail@plt>
  412f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f90:	push   r14
  412f92:	mov    ecx,0x1d
  412f97:	push   r13
  412f99:	mov    r13,rsi
  412f9c:	push   r12
  412f9e:	push   rbp
  412f9f:	mov    rbp,rdi
  412fa2:	push   rbx
  412fa3:	sub    rsp,0x1f0
  412faa:	mov    rax,QWORD PTR fs:0x28
  412fb3:	mov    QWORD PTR [rsp+0x1e8],rax
  412fbb:	xor    eax,eax
  412fbd:	lea    rbx,[rsp+0x10]
  412fc2:	mov    rdi,rbx
  412fc5:	lea    r12,[rsp+0x100]
  412fcd:	mov    rdx,rbx
  412fd0:	rep stos QWORD PTR es:[rdi],rax
  412fd3:	mov    ecx,0x1d
  412fd8:	mov    rdi,r12
  412fdb:	rep stos QWORD PTR es:[rdi],rax
  412fde:	mov    rdi,QWORD PTR [rsi+0x18]
  412fe2:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  412fe7:	mov    rdx,rbx
  412fea:	lea    rsi,[rip+0x3033f]        # 443330 <_IO_stdin_used@@Base+0x15330>
  412ff1:	mov    rdi,rbp
  412ff4:	xor    eax,eax
  412ff6:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412ffb:	lea    rsi,[rip+0x2fd06]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  413002:	mov    rdi,rbp
  413005:	xor    eax,eax
  413007:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41300c:	inc    DWORD PTR [rbp+0xf0]
  413012:	lea    rsi,[rip+0x33945]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  413019:	mov    rdi,rbp
  41301c:	xor    eax,eax
  41301e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413023:	lea    rsi,[rip+0x2fcc3]        # 442ced <_IO_stdin_used@@Base+0x14ced>
  41302a:	mov    rdi,rbp
  41302d:	xor    eax,eax
  41302f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413034:	lea    rsi,[rip+0x2fcbf]        # 442cfa <_IO_stdin_used@@Base+0x14cfa>
  41303b:	mov    rdi,rbp
  41303e:	xor    eax,eax
  413040:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413045:	lea    rsi,[rip+0x2fcbe]        # 442d0a <_IO_stdin_used@@Base+0x14d0a>
  41304c:	mov    rdi,rbp
  41304f:	xor    eax,eax
  413051:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413056:	inc    DWORD PTR [rbp+0xf0]
  41305c:	xor    eax,eax
  41305e:	lea    rsi,[rip+0x3035b]        # 4433c0 <_IO_stdin_used@@Base+0x153c0>
  413065:	mov    rdi,rbp
  413068:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41306d:	mov    eax,DWORD PTR [rbp+0xf0]
  413073:	test   eax,eax
  413075:	je     4134a1 <__flatcc_fb_gen_c_verifier@@Base+0x1ad1>
  41307b:	mov    rbx,QWORD PTR [r13+0x28]
  41307f:	dec    eax
  413081:	mov    DWORD PTR [rbp+0xf0],eax
  413087:	test   rbx,rbx
  41308a:	je     413238 <__flatcc_fb_gen_c_verifier@@Base+0x1868>
  413090:	lea    r13,[rip+0x2fc86]        # 442d1d <_IO_stdin_used@@Base+0x14d1d>
  413097:	jmp    41312b <__flatcc_fb_gen_c_verifier@@Base+0x175b>
  41309c:	nop    DWORD PTR [rax+0x0]
  4130a0:	mov    rsi,QWORD PTR [rbx+0x18]
  4130a4:	mov    rdx,r12
  4130a7:	mov    rdi,QWORD PTR [rsi+0x18]
  4130ab:	mov    QWORD PTR [rsp+0x8],r8
  4130b0:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  4130b5:	mov    r8,QWORD PTR [rsp+0x8]
  4130ba:	mov    edx,DWORD PTR [rbx+0x48]
  4130bd:	xor    eax,eax
  4130bf:	mov    ecx,r14d
  4130c2:	mov    rsi,r13
  4130c5:	mov    rdi,rbp
  4130c8:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4130cd:	mov    rax,QWORD PTR [rbx+0x18]
  4130d1:	inc    DWORD PTR [rbp+0xf0]
  4130d7:	movzx  eax,WORD PTR [rax+0x10]
  4130db:	test   ax,ax
  4130de:	jne    413210 <__flatcc_fb_gen_c_verifier@@Base+0x1840>
  4130e4:	mov    rdx,r12
  4130e7:	lea    rsi,[rip+0x30302]        # 4433f0 <_IO_stdin_used@@Base+0x153f0>
  4130ee:	mov    rdi,rbp
  4130f1:	xor    eax,eax
  4130f3:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4130f8:	xor    eax,eax
  4130fa:	lea    rsi,[rip+0x2fc30]        # 442d31 <_IO_stdin_used@@Base+0x14d31>
  413101:	mov    rdi,rbp
  413104:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413109:	mov    eax,DWORD PTR [rbp+0xf0]
  41310f:	test   eax,eax
  413111:	je     413425 <__flatcc_fb_gen_c_verifier@@Base+0x1a55>
  413117:	dec    eax
  413119:	mov    DWORD PTR [rbp+0xf0],eax
  41311f:	mov    rbx,QWORD PTR [rbx]
  413122:	test   rbx,rbx
  413125:	je     413238 <__flatcc_fb_gen_c_verifier@@Base+0x1868>
  41312b:	mov    rax,QWORD PTR [rbx+0x8]
  41312f:	mov    r8,QWORD PTR [rax]
  413132:	mov    r14,QWORD PTR [rax+0x8]
  413136:	movzx  eax,WORD PTR [rbx+0x28]
  41313a:	cmp    ax,0xa
  41313e:	je     4131a0 <__flatcc_fb_gen_c_verifier@@Base+0x17d0>
  413140:	cmp    ax,0xe
  413144:	je     4130a0 <__flatcc_fb_gen_c_verifier@@Base+0x16d0>
  41314a:	test   ax,ax
  41314d:	je     41311f <__flatcc_fb_gen_c_verifier@@Base+0x174f>
  41314f:	mov    rax,QWORD PTR [rip+0x3ee92]        # 451fe8 <stderr@GLIBC_2.2.5>
  413156:	lea    rcx,[rip+0x3001b]        # 443178 <_IO_stdin_used@@Base+0x15178>
  41315d:	mov    rdi,QWORD PTR [rax]
  413160:	lea    rdx,[rip+0x2412c]        # 437293 <_IO_stdin_used@@Base+0x9293>
  413167:	mov    esi,0x1
  41316c:	lea    r9,[rip+0x30365]        # 4434d8 <_IO_stdin_used@@Base+0x154d8>
  413173:	mov    r8d,0x5ff
  413179:	xor    eax,eax
  41317b:	call   405400 <__fprintf_chk@plt>
  413180:	lea    rcx,[rip+0x320f9]        # 445280 <_IO_stdin_used@@Base+0x17280>
  413187:	mov    edx,0x5ff
  41318c:	lea    rsi,[rip+0x2ffe5]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413193:	lea    rdi,[rip+0x251bf]        # 438359 <_IO_stdin_used@@Base+0xa359>
  41319a:	call   405300 <__assert_fail@plt>
  41319f:	nop
  4131a0:	mov    edx,DWORD PTR [rbx+0x48]
  4131a3:	mov    ecx,r14d
  4131a6:	mov    rsi,r13
  4131a9:	mov    rdi,rbp
  4131ac:	xor    eax,eax
  4131ae:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4131b3:	inc    DWORD PTR [rbp+0xf0]
  4131b9:	lea    rsi,[rip+0x302d8]        # 443498 <_IO_stdin_used@@Base+0x15498>
  4131c0:	mov    rdi,rbp
  4131c3:	xor    eax,eax
  4131c5:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4131ca:	xor    eax,eax
  4131cc:	lea    rsi,[rip+0x2fb5e]        # 442d31 <_IO_stdin_used@@Base+0x14d31>
  4131d3:	mov    rdi,rbp
  4131d6:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4131db:	mov    eax,DWORD PTR [rbp+0xf0]
  4131e1:	test   eax,eax
  4131e3:	jne    413117 <__flatcc_fb_gen_c_verifier@@Base+0x1747>
  4131e9:	lea    rcx,[rip+0x32090]        # 445280 <_IO_stdin_used@@Base+0x17280>
  4131f0:	mov    edx,0x5fc
  4131f5:	lea    rsi,[rip+0x2ff7c]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4131fc:	lea    rdi,[rip+0x2f9e2]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  413203:	call   405300 <__assert_fail@plt>
  413208:	nop    DWORD PTR [rax+rax*1+0x0]
  413210:	cmp    ax,0x1
  413214:	jne    4133d5 <__flatcc_fb_gen_c_verifier@@Base+0x1a05>
  41321a:	mov    rdx,r12
  41321d:	lea    rsi,[rip+0x30204]        # 443428 <_IO_stdin_used@@Base+0x15428>
  413224:	mov    rdi,rbp
  413227:	xor    eax,eax
  413229:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41322e:	jmp    4130f8 <__flatcc_fb_gen_c_verifier@@Base+0x1728>
  413233:	nop    DWORD PTR [rax+rax*1+0x0]
  413238:	lea    rsi,[rip+0x2faf9]        # 442d38 <_IO_stdin_used@@Base+0x14d38>
  41323f:	mov    rdi,rbp
  413242:	xor    eax,eax
  413244:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413249:	inc    DWORD PTR [rbp+0xf0]
  41324f:	lea    rsi,[rip+0x302b2]        # 443508 <_IO_stdin_used@@Base+0x15508>
  413256:	mov    rdi,rbp
  413259:	xor    eax,eax
  41325b:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413260:	inc    DWORD PTR [rbp+0xf0]
  413266:	xor    eax,eax
  413268:	lea    rsi,[rip+0x302d9]        # 443548 <_IO_stdin_used@@Base+0x15548>
  41326f:	mov    rdi,rbp
  413272:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413277:	mov    eax,DWORD PTR [rbp+0xf0]
  41327d:	test   eax,eax
  41327f:	je     4134e4 <__flatcc_fb_gen_c_verifier@@Base+0x1b14>
  413285:	dec    eax
  413287:	mov    DWORD PTR [rbp+0xf0],eax
  41328d:	lea    rsi,[rip+0x2faad]        # 442d41 <_IO_stdin_used@@Base+0x14d41>
  413294:	mov    rdi,rbp
  413297:	xor    eax,eax
  413299:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41329e:	inc    DWORD PTR [rbp+0xf0]
  4132a4:	xor    eax,eax
  4132a6:	lea    rsi,[rip+0x302fb]        # 4435a8 <_IO_stdin_used@@Base+0x155a8>
  4132ad:	mov    rdi,rbp
  4132b0:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4132b5:	mov    eax,DWORD PTR [rbp+0xf0]
  4132bb:	test   eax,eax
  4132bd:	je     413444 <__flatcc_fb_gen_c_verifier@@Base+0x1a74>
  4132c3:	dec    eax
  4132c5:	mov    DWORD PTR [rbp+0xf0],eax
  4132cb:	lea    rsi,[rip+0x2f91f]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  4132d2:	xor    eax,eax
  4132d4:	mov    rdi,rbp
  4132d7:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4132dc:	mov    eax,DWORD PTR [rbp+0xf0]
  4132e2:	test   eax,eax
  4132e4:	je     413463 <__flatcc_fb_gen_c_verifier@@Base+0x1a93>
  4132ea:	dec    eax
  4132ec:	mov    DWORD PTR [rbp+0xf0],eax
  4132f2:	lea    rsi,[rip+0x2f8f8]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  4132f9:	mov    rdi,rbp
  4132fc:	xor    eax,eax
  4132fe:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413303:	lea    rsi,[rip+0x2fa40]        # 442d4a <_IO_stdin_used@@Base+0x14d4a>
  41330a:	mov    rdi,rbp
  41330d:	xor    eax,eax
  41330f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413314:	lea    rsi,[rip+0x2fa4b]        # 442d66 <_IO_stdin_used@@Base+0x14d66>
  41331b:	mov    rdi,rbp
  41331e:	xor    eax,eax
  413320:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413325:	inc    DWORD PTR [rbp+0xf0]
  41332b:	xor    eax,eax
  41332d:	lea    rsi,[rip+0x302ac]        # 4435e0 <_IO_stdin_used@@Base+0x155e0>
  413334:	mov    rdi,rbp
  413337:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41333c:	mov    eax,DWORD PTR [rbp+0xf0]
  413342:	test   eax,eax
  413344:	je     413482 <__flatcc_fb_gen_c_verifier@@Base+0x1ab2>
  41334a:	dec    eax
  41334c:	mov    DWORD PTR [rbp+0xf0],eax
  413352:	lea    rsi,[rip+0x2f898]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  413359:	mov    rdi,rbp
  41335c:	xor    eax,eax
  41335e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413363:	xor    eax,eax
  413365:	lea    rsi,[rip+0x2f9ee]        # 442d5a <_IO_stdin_used@@Base+0x14d5a>
  41336c:	mov    rdi,rbp
  41336f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413374:	mov    eax,DWORD PTR [rbp+0xf0]
  41337a:	test   eax,eax
  41337c:	je     4134c5 <__flatcc_fb_gen_c_verifier@@Base+0x1af5>
  413382:	dec    eax
  413384:	mov    DWORD PTR [rbp+0xf0],eax
  41338a:	lea    rsi,[rip+0x2f860]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  413391:	xor    eax,eax
  413393:	mov    rdi,rbp
  413396:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41339b:	xor    eax,eax
  41339d:	lea    rsi,[rip+0x335ba]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4133a4:	mov    rdi,rbp
  4133a7:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4133ac:	xor    eax,eax
  4133ae:	mov    rcx,QWORD PTR [rsp+0x1e8]
  4133b6:	xor    rcx,QWORD PTR fs:0x28
  4133bf:	jne    4134c0 <__flatcc_fb_gen_c_verifier@@Base+0x1af0>
  4133c5:	add    rsp,0x1f0
  4133cc:	pop    rbx
  4133cd:	pop    rbp
  4133ce:	pop    r12
  4133d0:	pop    r13
  4133d2:	pop    r14
  4133d4:	ret    
  4133d5:	mov    rax,QWORD PTR [rip+0x3ec0c]        # 451fe8 <stderr@GLIBC_2.2.5>
  4133dc:	lea    rcx,[rip+0x2fd95]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4133e3:	mov    rdi,QWORD PTR [rax]
  4133e6:	lea    rdx,[rip+0x23ea6]        # 437293 <_IO_stdin_used@@Base+0x9293>
  4133ed:	mov    esi,0x1
  4133f2:	lea    r9,[rip+0x30067]        # 443460 <_IO_stdin_used@@Base+0x15460>
  4133f9:	mov    r8d,0x5f2
  4133ff:	xor    eax,eax
  413401:	call   405400 <__fprintf_chk@plt>
  413406:	lea    rcx,[rip+0x31e73]        # 445280 <_IO_stdin_used@@Base+0x17280>
  41340d:	mov    edx,0x5f2
  413412:	lea    rsi,[rip+0x2fd5f]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413419:	lea    rdi,[rip+0x24f39]        # 438359 <_IO_stdin_used@@Base+0xa359>
  413420:	call   405300 <__assert_fail@plt>
  413425:	lea    rcx,[rip+0x31e54]        # 445280 <_IO_stdin_used@@Base+0x17280>
  41342c:	mov    edx,0x5f6
  413431:	lea    rsi,[rip+0x2fd40]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413438:	lea    rdi,[rip+0x2f7a6]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  41343f:	call   405300 <__assert_fail@plt>
  413444:	lea    rcx,[rip+0x31e35]        # 445280 <_IO_stdin_used@@Base+0x17280>
  41344b:	mov    edx,0x609
  413450:	lea    rsi,[rip+0x2fd21]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413457:	lea    rdi,[rip+0x2f787]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  41345e:	call   405300 <__assert_fail@plt>
  413463:	lea    rcx,[rip+0x31e16]        # 445280 <_IO_stdin_used@@Base+0x17280>
  41346a:	mov    edx,0x60a
  41346f:	lea    rsi,[rip+0x2fd02]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413476:	lea    rdi,[rip+0x2f768]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  41347d:	call   405300 <__assert_fail@plt>
  413482:	lea    rcx,[rip+0x31df7]        # 445280 <_IO_stdin_used@@Base+0x17280>
  413489:	mov    edx,0x60e
  41348e:	lea    rsi,[rip+0x2fce3]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413495:	lea    rdi,[rip+0x2f749]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  41349c:	call   405300 <__assert_fail@plt>
  4134a1:	lea    rcx,[rip+0x31dd8]        # 445280 <_IO_stdin_used@@Base+0x17280>
  4134a8:	mov    edx,0x5df
  4134ad:	lea    rsi,[rip+0x2fcc4]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4134b4:	lea    rdi,[rip+0x2f72a]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4134bb:	call   405300 <__assert_fail@plt>
  4134c0:	call   4052d0 <__stack_chk_fail@plt>
  4134c5:	lea    rcx,[rip+0x31db4]        # 445280 <_IO_stdin_used@@Base+0x17280>
  4134cc:	mov    edx,0x610
  4134d1:	lea    rsi,[rip+0x2fca0]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4134d8:	lea    rdi,[rip+0x2f706]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4134df:	call   405300 <__assert_fail@plt>
  4134e4:	lea    rcx,[rip+0x31d95]        # 445280 <_IO_stdin_used@@Base+0x17280>
  4134eb:	mov    edx,0x607
  4134f0:	lea    rsi,[rip+0x2fc81]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4134f7:	lea    rdi,[rip+0x2f6e7]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4134fe:	call   405300 <__assert_fail@plt>
  413503:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41350e:	xchg   ax,ax
  413510:	push   r12
  413512:	mov    ecx,0x1d
  413517:	mov    r12,rsi
  41351a:	push   rbp
  41351b:	mov    rbp,rdi
  41351e:	push   rbx
  41351f:	sub    rsp,0x1e0
  413526:	mov    rax,QWORD PTR fs:0x28
  41352f:	mov    QWORD PTR [rsp+0x1d8],rax
  413537:	xor    eax,eax
  413539:	mov    rbx,rsp
  41353c:	mov    rdi,rbx
  41353f:	lea    rdx,[rsp+0xf0]
  413547:	rep stos QWORD PTR es:[rdi],rax
  41354a:	mov    rdi,rdx
  41354d:	mov    ecx,0x1d
  413552:	rep stos QWORD PTR es:[rdi],rax
  413555:	mov    rdi,QWORD PTR [rsi+0x18]
  413559:	mov    rdx,rbx
  41355c:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  413561:	mov    rdx,rbx
  413564:	lea    rsi,[rip+0x300cd]        # 443638 <_IO_stdin_used@@Base+0x15638>
  41356b:	mov    rdi,rbp
  41356e:	xor    eax,eax
  413570:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413575:	lea    rsi,[rip+0x2f78c]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  41357c:	mov    rdi,rbp
  41357f:	xor    eax,eax
  413581:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413586:	inc    DWORD PTR [rbp+0xf0]
  41358c:	lea    rsi,[rip+0x2f767]        # 442cfa <_IO_stdin_used@@Base+0x14cfa>
  413593:	mov    rdi,rbp
  413596:	xor    eax,eax
  413598:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41359d:	mov    rbx,QWORD PTR [r12+0x28]
  4135a2:	test   rbx,rbx
  4135a5:	je     4135f3 <__flatcc_fb_gen_c_verifier@@Base+0x1c23>
  4135a7:	lea    r12,[rip+0x2f7e5]        # 442d93 <_IO_stdin_used@@Base+0x14d93>
  4135ae:	jmp    4135d3 <__flatcc_fb_gen_c_verifier@@Base+0x1c03>
  4135b0:	mov    rax,QWORD PTR [rbx+0x8]
  4135b4:	mov    edx,DWORD PTR [rbx+0x48]
  4135b7:	mov    rcx,QWORD PTR [rax+0x8]
  4135bb:	mov    r8,QWORD PTR [rax]
  4135be:	mov    rsi,r12
  4135c1:	mov    rdi,rbp
  4135c4:	xor    eax,eax
  4135c6:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4135cb:	mov    rbx,QWORD PTR [rbx]
  4135ce:	test   rbx,rbx
  4135d1:	je     4135f3 <__flatcc_fb_gen_c_verifier@@Base+0x1c23>
  4135d3:	cmp    WORD PTR [rbx+0x28],0x0
  4135d8:	jne    4135b0 <__flatcc_fb_gen_c_verifier@@Base+0x1be0>
  4135da:	lea    rsi,[rip+0x2f795]        # 442d76 <_IO_stdin_used@@Base+0x14d76>
  4135e1:	mov    rdi,rbp
  4135e4:	xor    eax,eax
  4135e6:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4135eb:	mov    rbx,QWORD PTR [rbx]
  4135ee:	test   rbx,rbx
  4135f1:	jne    4135d3 <__flatcc_fb_gen_c_verifier@@Base+0x1c03>
  4135f3:	xor    eax,eax
  4135f5:	lea    rsi,[rip+0x2f7b5]        # 442db1 <_IO_stdin_used@@Base+0x14db1>
  4135fc:	mov    rdi,rbp
  4135ff:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413604:	mov    eax,DWORD PTR [rbp+0xf0]
  41360a:	lea    edx,[rax+0x1]
  41360d:	mov    DWORD PTR [rbp+0xf0],edx
  413613:	test   edx,edx
  413615:	je     413683 <__flatcc_fb_gen_c_verifier@@Base+0x1cb3>
  413617:	mov    DWORD PTR [rbp+0xf0],eax
  41361d:	lea    rsi,[rip+0x2f5cd]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  413624:	xor    eax,eax
  413626:	mov    rdi,rbp
  413629:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41362e:	mov    eax,DWORD PTR [rbp+0xf0]
  413634:	test   eax,eax
  413636:	je     4136a7 <__flatcc_fb_gen_c_verifier@@Base+0x1cd7>
  413638:	dec    eax
  41363a:	mov    DWORD PTR [rbp+0xf0],eax
  413640:	lea    rsi,[rip+0x2f5aa]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  413647:	xor    eax,eax
  413649:	mov    rdi,rbp
  41364c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413651:	xor    eax,eax
  413653:	lea    rsi,[rip+0x33304]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  41365a:	mov    rdi,rbp
  41365d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413662:	xor    eax,eax
  413664:	mov    rdx,QWORD PTR [rsp+0x1d8]
  41366c:	xor    rdx,QWORD PTR fs:0x28
  413675:	jne    4136a2 <__flatcc_fb_gen_c_verifier@@Base+0x1cd2>
  413677:	add    rsp,0x1e0
  41367e:	pop    rbx
  41367f:	pop    rbp
  413680:	pop    r12
  413682:	ret    
  413683:	lea    rcx,[rip+0x31bd6]        # 445260 <_IO_stdin_used@@Base+0x17260>
  41368a:	mov    edx,0x62e
  41368f:	lea    rsi,[rip+0x2fae2]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413696:	lea    rdi,[rip+0x2f548]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  41369d:	call   405300 <__assert_fail@plt>
  4136a2:	call   4052d0 <__stack_chk_fail@plt>
  4136a7:	lea    rcx,[rip+0x31bb2]        # 445260 <_IO_stdin_used@@Base+0x17260>
  4136ae:	mov    edx,0x62f
  4136b3:	lea    rsi,[rip+0x2fabe]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4136ba:	lea    rdi,[rip+0x2f524]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4136c1:	call   405300 <__assert_fail@plt>
  4136c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4136d0:	endbr64 
  4136d4:	push   r15
  4136d6:	mov    r15,rsi
  4136d9:	vpxor  xmm0,xmm0,xmm0
  4136dd:	push   r14
  4136df:	push   r13
  4136e1:	push   r12
  4136e3:	push   rbp
  4136e4:	push   rbx
  4136e5:	mov    rbx,rdi
  4136e8:	mov    rdi,r15
  4136eb:	sub    rsp,0x138
  4136f2:	lea    r13,[rsp+0x50]
  4136f7:	mov    rsi,r13
  4136fa:	mov    rax,QWORD PTR fs:0x28
  413703:	mov    QWORD PTR [rsp+0x128],rax
  41370b:	xor    eax,eax
  41370d:	mov    r14,rsp
  413710:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  413716:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  41371c:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  413722:	add    r15,0x8
  413726:	call   4072e0 <__flatcc_fb_copy_scope@@Base>
  41372b:	mov    rax,QWORD PTR [rbx+0xd8]
  413732:	vpxor  xmm0,xmm0,xmm0
  413736:	mov    rdx,r14
  413739:	lea    rsi,[rip+0x26e0]        # 415e20 <__flatcc_fb_gen_c_verifier@@Base+0x4450>
  413740:	mov    rdi,r15
  413743:	vmovaps XMMWORD PTR [rsp],xmm0
  413748:	mov    QWORD PTR [rsp+0x10],0x0
  413751:	mov    QWORD PTR [rsp+0x8],rax
  413756:	call   41c080 <fb_symbol_table_visit@@Base>
  41375b:	mov    r12d,DWORD PTR [rsp]
  41375f:	test   r12d,r12d
  413762:	je     4139a0 <__flatcc_fb_gen_c_verifier@@Base+0x1fd0>
  413768:	movsxd rdi,r12d
  41376b:	shl    rdi,0x5
  41376f:	call   405380 <malloc@plt>
  413774:	mov    rbp,rax
  413777:	test   rax,rax
  41377a:	je     4139b0 <__flatcc_fb_gen_c_verifier@@Base+0x1fe0>
  413780:	mov    rdx,r14
  413783:	lea    rsi,[rip+0x26d6]        # 415e60 <__flatcc_fb_gen_c_verifier@@Base+0x4490>
  41378a:	mov    rdi,r15
  41378d:	mov    QWORD PTR [rsp+0x10],rax
  413792:	call   41c080 <fb_symbol_table_visit@@Base>
  413797:	movsxd rsi,DWORD PTR [rsp]
  41379b:	lea    rcx,[rip+0xffffffffffffe6de]        # 411e80 <__flatcc_fb_gen_c_verifier@@Base+0x4b0>
  4137a2:	mov    edx,0x20
  4137a7:	mov    rdi,rbp
  4137aa:	call   405280 <qsort@plt>
  4137af:	mov    QWORD PTR [rsp+0x20],rbp
  4137b4:	lea    rax,[rip+0x3e5]        # 413ba0 <__flatcc_fb_gen_c_verifier@@Base+0x21d0>
  4137bb:	mov    QWORD PTR [rsp+0x28],rax
  4137c0:	lea    rax,[rip+0xffffffffffffe979]        # 412140 <__flatcc_fb_gen_c_verifier@@Base+0x770>
  4137c7:	mov    QWORD PTR [rsp+0x30],rax
  4137cc:	mov    rax,QWORD PTR [rbx+0xd8]
  4137d3:	mov    rcx,r13
  4137d6:	mov    rdx,QWORD PTR [rax+0x110]
  4137dd:	lea    rsi,[rip+0x2faa4]        # 443288 <_IO_stdin_used@@Base+0x15288>
  4137e4:	mov    rdi,rbx
  4137e7:	xor    eax,eax
  4137e9:	mov    QWORD PTR [rsp+0x38],0x0
  4137f2:	mov    DWORD PTR [rsp+0x40],0x3
  4137fa:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4137ff:	add    DWORD PTR [rbx+0xf0],0x2
  413806:	xor    eax,eax
  413808:	lea    rsi,[rip+0x2fea1]        # 4436b0 <_IO_stdin_used@@Base+0x156b0>
  41380f:	mov    rdi,rbx
  413812:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413817:	mov    eax,DWORD PTR [rbx+0xf0]
  41381d:	test   eax,eax
  41381f:	je     413a1c <__flatcc_fb_gen_c_verifier@@Base+0x204c>
  413825:	cmp    eax,0x1
  413828:	je     413a12 <__flatcc_fb_gen_c_verifier@@Base+0x2042>
  41382e:	sub    eax,0x2
  413831:	mov    DWORD PTR [rbx+0xf0],eax
  413837:	lea    rsi,[rip+0x2f4ca]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  41383e:	mov    rdi,rbx
  413841:	xor    eax,eax
  413843:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413848:	inc    DWORD PTR [rbx+0xf0]
  41384e:	test   r12d,r12d
  413851:	je     413948 <__flatcc_fb_gen_c_verifier@@Base+0x1f78>
  413857:	lea    rsi,[rip+0x2f583]        # 442de1 <_IO_stdin_used@@Base+0x14de1>
  41385e:	mov    rdi,rbx
  413861:	xor    eax,eax
  413863:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413868:	lea    rsi,[rip+0x2f58f]        # 442dfe <_IO_stdin_used@@Base+0x14dfe>
  41386f:	mov    rdi,rbx
  413872:	xor    eax,eax
  413874:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413879:	lea    rsi,[rip+0x2f590]        # 442e10 <_IO_stdin_used@@Base+0x14e10>
  413880:	mov    rdi,rbx
  413883:	xor    eax,eax
  413885:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41388a:	lea    rsi,[rip+0x330cd]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  413891:	mov    rdi,rbx
  413894:	xor    eax,eax
  413896:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41389b:	xor    eax,eax
  41389d:	lea    rsi,[rip+0x2f9b4]        # 443258 <_IO_stdin_used@@Base+0x15258>
  4138a4:	mov    rdi,rbx
  4138a7:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4138ac:	lea    ecx,[r12-0x1]
  4138b1:	lea    rsi,[rsp+0x20]
  4138b6:	xor    r8d,r8d
  4138b9:	xor    edx,edx
  4138bb:	mov    rdi,rbx
  4138be:	call   412560 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  4138c3:	xor    eax,eax
  4138c5:	lea    rsi,[rip+0x2f48e]        # 442d5a <_IO_stdin_used@@Base+0x14d5a>
  4138cc:	mov    rdi,rbx
  4138cf:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4138d4:	mov    eax,DWORD PTR [rbx+0xf0]
  4138da:	test   eax,eax
  4138dc:	je     413a40 <__flatcc_fb_gen_c_verifier@@Base+0x2070>
  4138e2:	dec    eax
  4138e4:	mov    DWORD PTR [rbx+0xf0],eax
  4138ea:	lea    rsi,[rip+0x2f300]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  4138f1:	mov    rdi,rbx
  4138f4:	xor    eax,eax
  4138f6:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4138fb:	mov    rdi,rbx
  4138fe:	lea    rsi,[rip+0x33059]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  413905:	xor    eax,eax
  413907:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41390c:	mov    rdi,QWORD PTR [rsp+0x20]
  413911:	test   rdi,rdi
  413914:	je     41391b <__flatcc_fb_gen_c_verifier@@Base+0x1f4b>
  413916:	call   405240 <free@plt>
  41391b:	mov    rax,QWORD PTR [rsp+0x128]
  413923:	xor    rax,QWORD PTR fs:0x28
  41392c:	jne    413a3b <__flatcc_fb_gen_c_verifier@@Base+0x206b>
  413932:	add    rsp,0x138
  413939:	pop    rbx
  41393a:	pop    rbp
  41393b:	pop    r12
  41393d:	pop    r13
  41393f:	pop    r14
  413941:	pop    r15
  413943:	ret    
  413944:	nop    DWORD PTR [rax+0x0]
  413948:	lea    rsi,[rip+0x2fd99]        # 4436e8 <_IO_stdin_used@@Base+0x156e8>
  41394f:	mov    rdi,rbx
  413952:	xor    eax,eax
  413954:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413959:	xor    eax,eax
  41395b:	lea    rsi,[rip+0x2f462]        # 442dc4 <_IO_stdin_used@@Base+0x14dc4>
  413962:	mov    rdi,rbx
  413965:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41396a:	mov    eax,DWORD PTR [rbx+0xf0]
  413970:	test   eax,eax
  413972:	jne    4138e2 <__flatcc_fb_gen_c_verifier@@Base+0x1f12>
  413978:	lea    rcx,[rip+0x31971]        # 4452f0 <_IO_stdin_used@@Base+0x172f0>
  41397f:	mov    edx,0x485
  413984:	lea    rsi,[rip+0x2f7ed]        # 443178 <_IO_stdin_used@@Base+0x15178>
  41398b:	lea    rdi,[rip+0x2f253]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  413992:	call   405300 <__assert_fail@plt>
  413997:	nop    WORD PTR [rax+rax*1+0x0]
  4139a0:	mov    QWORD PTR [rsp+0x20],0x0
  4139a9:	jmp    4137b4 <__flatcc_fb_gen_c_verifier@@Base+0x1de4>
  4139ae:	xchg   ax,ax
  4139b0:	mov    QWORD PTR [rsp+0x20],0x0
  4139b9:	test   r12d,r12d
  4139bc:	jle    4137b4 <__flatcc_fb_gen_c_verifier@@Base+0x1de4>
  4139c2:	mov    rax,QWORD PTR [rip+0x3e61f]        # 451fe8 <stderr@GLIBC_2.2.5>
  4139c9:	lea    rcx,[rip+0x2f7a8]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4139d0:	mov    rdi,QWORD PTR [rax]
  4139d3:	lea    rdx,[rip+0x238b9]        # 437293 <_IO_stdin_used@@Base+0x9293>
  4139da:	mov    esi,0x1
  4139df:	lea    r9,[rip+0x2fc8a]        # 443670 <_IO_stdin_used@@Base+0x15670>
  4139e6:	mov    r8d,0x474
  4139ec:	xor    eax,eax
  4139ee:	call   405400 <__fprintf_chk@plt>
  4139f3:	lea    rcx,[rip+0x318f6]        # 4452f0 <_IO_stdin_used@@Base+0x172f0>
  4139fa:	mov    edx,0x474
  4139ff:	lea    rsi,[rip+0x2f772]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413a06:	lea    rdi,[rip+0x2494c]        # 438359 <_IO_stdin_used@@Base+0xa359>
  413a0d:	call   405300 <__assert_fail@plt>
  413a12:	mov    DWORD PTR [rbx+0xf0],0x0
  413a1c:	lea    rcx,[rip+0x318cd]        # 4452f0 <_IO_stdin_used@@Base+0x172f0>
  413a23:	mov    edx,0x480
  413a28:	lea    rsi,[rip+0x2f749]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413a2f:	lea    rdi,[rip+0x2f1af]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  413a36:	call   405300 <__assert_fail@plt>
  413a3b:	call   4052d0 <__stack_chk_fail@plt>
  413a40:	lea    rcx,[rip+0x318a9]        # 4452f0 <_IO_stdin_used@@Base+0x172f0>
  413a47:	mov    edx,0x48e
  413a4c:	lea    rsi,[rip+0x2f725]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413a53:	lea    rdi,[rip+0x2f18b]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  413a5a:	call   405300 <__assert_fail@plt>
  413a5f:	nop
  413a60:	endbr64 
  413a64:	push   r12
  413a66:	xor    eax,eax
  413a68:	mov    r12,rdx
  413a6b:	push   rbp
  413a6c:	mov    edx,r8d
  413a6f:	mov    rbp,rsi
  413a72:	push   rbx
  413a73:	lea    rsi,[rip+0x2fca6]        # 443720 <_IO_stdin_used@@Base+0x15720>
  413a7a:	mov    rbx,rdi
  413a7d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413a82:	xor    eax,eax
  413a84:	lea    rsi,[rip+0x2f391]        # 442e1c <_IO_stdin_used@@Base+0x14e1c>
  413a8b:	mov    rdi,rbx
  413a8e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413a93:	mov    eax,DWORD PTR [rbp+0x48]
  413a96:	inc    DWORD PTR [rbx+0xf0]
  413a9c:	test   eax,eax
  413a9e:	je     413b30 <__flatcc_fb_gen_c_verifier@@Base+0x2160>
  413aa4:	cmp    eax,0x5
  413aa7:	jbe    413b18 <__flatcc_fb_gen_c_verifier@@Base+0x2148>
  413aa9:	cmp    eax,0x9
  413aac:	ja     413b30 <__flatcc_fb_gen_c_verifier@@Base+0x2160>
  413ab2:	mov    rdx,QWORD PTR [r12+0x48]
  413ab7:	test   rdx,rdx
  413aba:	js     413b00 <__flatcc_fb_gen_c_verifier@@Base+0x2130>
  413abc:	lea    rsi,[rip+0x2fcad]        # 443770 <_IO_stdin_used@@Base+0x15770>
  413ac3:	mov    rdi,rbx
  413ac6:	xor    eax,eax
  413ac8:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413acd:	mov    eax,DWORD PTR [rbx+0xf0]
  413ad3:	test   eax,eax
  413ad5:	je     413b80 <__flatcc_fb_gen_c_verifier@@Base+0x21b0>
  413adb:	dec    eax
  413add:	mov    DWORD PTR [rbx+0xf0],eax
  413ae3:	mov    rdi,rbx
  413ae6:	lea    rsi,[rip+0x2f254]        # 442d41 <_IO_stdin_used@@Base+0x14d41>
  413aed:	xor    eax,eax
  413aef:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413af4:	inc    DWORD PTR [rbx+0xf0]
  413afa:	pop    rbx
  413afb:	pop    rbp
  413afc:	pop    r12
  413afe:	ret    
  413aff:	nop
  413b00:	lea    rsi,[rip+0x2fc99]        # 4437a0 <_IO_stdin_used@@Base+0x157a0>
  413b07:	mov    rdi,rbx
  413b0a:	xor    eax,eax
  413b0c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413b11:	jmp    413acd <__flatcc_fb_gen_c_verifier@@Base+0x20fd>
  413b13:	nop    DWORD PTR [rax+rax*1+0x0]
  413b18:	mov    rdx,QWORD PTR [r12+0x48]
  413b1d:	lea    rsi,[rip+0x2fc4c]        # 443770 <_IO_stdin_used@@Base+0x15770>
  413b24:	mov    rdi,rbx
  413b27:	xor    eax,eax
  413b29:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413b2e:	jmp    413acd <__flatcc_fb_gen_c_verifier@@Base+0x20fd>
  413b30:	mov    rax,QWORD PTR [rip+0x3e4b1]        # 451fe8 <stderr@GLIBC_2.2.5>
  413b37:	lea    rcx,[rip+0x2f63a]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413b3e:	mov    rdi,QWORD PTR [rax]
  413b41:	lea    rdx,[rip+0x2374b]        # 437293 <_IO_stdin_used@@Base+0x9293>
  413b48:	mov    esi,0x1
  413b4d:	lea    r9,[rip+0x2fc7c]        # 4437d0 <_IO_stdin_used@@Base+0x157d0>
  413b54:	mov    r8d,0x2c6
  413b5a:	xor    eax,eax
  413b5c:	call   405400 <__fprintf_chk@plt>
  413b61:	lea    rcx,[rip+0x31608]        # 445170 <_IO_stdin_used@@Base+0x17170>
  413b68:	mov    edx,0x2c6
  413b6d:	lea    rsi,[rip+0x2f604]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413b74:	lea    rdi,[rip+0x247de]        # 438359 <_IO_stdin_used@@Base+0xa359>
  413b7b:	call   405300 <__assert_fail@plt>
  413b80:	lea    rcx,[rip+0x31601]        # 445188 <_IO_stdin_used@@Base+0x17188>
  413b87:	mov    edx,0x2cf
  413b8c:	lea    rsi,[rip+0x2f5e5]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413b93:	lea    rdi,[rip+0x2f04b]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  413b9a:	call   405300 <__assert_fail@plt>
  413b9f:	nop
  413ba0:	endbr64 
  413ba4:	push   r12
  413ba6:	lea    rsi,[rip+0x2fc4b]        # 4437f8 <_IO_stdin_used@@Base+0x157f8>
  413bad:	mov    r12,rdx
  413bb0:	push   rbp
  413bb1:	mov    edx,r8d
  413bb4:	push   rbx
  413bb5:	mov    rbx,rdi
  413bb8:	sub    rsp,0xf0
  413bbf:	mov    rax,QWORD PTR fs:0x28
  413bc8:	mov    QWORD PTR [rsp+0xe8],rax
  413bd0:	xor    eax,eax
  413bd2:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413bd7:	xor    eax,eax
  413bd9:	lea    rsi,[rip+0x2f23c]        # 442e1c <_IO_stdin_used@@Base+0x14e1c>
  413be0:	mov    rdi,rbx
  413be3:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413be8:	movzx  eax,WORD PTR [r12+0x10]
  413bee:	inc    DWORD PTR [rbx+0xf0]
  413bf4:	sub    eax,0x3
  413bf7:	cmp    ax,0x1
  413bfb:	ja     413c79 <__flatcc_fb_gen_c_verifier@@Base+0x22a9>
  413bfd:	mov    rbp,rsp
  413c00:	xor    eax,eax
  413c02:	mov    ecx,0x1d
  413c07:	mov    rdi,rbp
  413c0a:	rep stos QWORD PTR es:[rdi],rax
  413c0d:	mov    rdi,QWORD PTR [r12+0x18]
  413c12:	mov    rdx,rbp
  413c15:	mov    rsi,r12
  413c18:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  413c1d:	xor    eax,eax
  413c1f:	mov    rdx,rbp
  413c22:	lea    rsi,[rip+0x2fc17]        # 443840 <_IO_stdin_used@@Base+0x15840>
  413c29:	mov    rdi,rbx
  413c2c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413c31:	mov    eax,DWORD PTR [rbx+0xf0]
  413c37:	test   eax,eax
  413c39:	je     413c9d <__flatcc_fb_gen_c_verifier@@Base+0x22cd>
  413c3b:	dec    eax
  413c3d:	mov    DWORD PTR [rbx+0xf0],eax
  413c43:	lea    rsi,[rip+0x2f0f7]        # 442d41 <_IO_stdin_used@@Base+0x14d41>
  413c4a:	xor    eax,eax
  413c4c:	mov    rdi,rbx
  413c4f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413c54:	inc    DWORD PTR [rbx+0xf0]
  413c5a:	mov    rax,QWORD PTR [rsp+0xe8]
  413c62:	xor    rax,QWORD PTR fs:0x28
  413c6b:	jne    413c98 <__flatcc_fb_gen_c_verifier@@Base+0x22c8>
  413c6d:	add    rsp,0xf0
  413c74:	pop    rbx
  413c75:	pop    rbp
  413c76:	pop    r12
  413c78:	ret    
  413c79:	lea    rcx,[rip+0x31640]        # 4452c0 <_IO_stdin_used@@Base+0x172c0>
  413c80:	mov    edx,0x2d9
  413c85:	lea    rsi,[rip+0x2f4ec]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413c8c:	lea    rdi,[rip+0x1ca15]        # 4306a8 <_IO_stdin_used@@Base+0x26a8>
  413c93:	call   405300 <__assert_fail@plt>
  413c98:	call   4052d0 <__stack_chk_fail@plt>
  413c9d:	lea    rcx,[rip+0x3163c]        # 4452e0 <_IO_stdin_used@@Base+0x172e0>
  413ca4:	mov    edx,0x2e6
  413ca9:	lea    rsi,[rip+0x2f4c8]        # 443178 <_IO_stdin_used@@Base+0x15178>
  413cb0:	lea    rdi,[rip+0x2ef2e]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  413cb7:	call   405300 <__assert_fail@plt>
  413cbc:	nop    DWORD PTR [rax+0x0]
  413cc0:	push   r15
  413cc2:	push   r14
  413cc4:	push   r13
  413cc6:	push   r12
  413cc8:	mov    r12,rcx
  413ccb:	mov    ecx,0x1d
  413cd0:	push   rbp
  413cd1:	mov    rbp,rsi
  413cd4:	push   rbx
  413cd5:	mov    rbx,rdi
  413cd8:	sub    rsp,0x238
  413cdf:	mov    DWORD PTR [rsp+0x18],r8d
  413ce4:	lea    rdi,[rsp+0x60]
  413ce9:	mov    rax,QWORD PTR fs:0x28
  413cf2:	mov    QWORD PTR [rsp+0x228],rax
  413cfa:	xor    eax,eax
  413cfc:	mov    QWORD PTR [rsp+0x20],rdi
  413d01:	rep stos QWORD PTR es:[rdi],rax
  413d04:	lea    rax,[rsp+0x150]
  413d0c:	mov    rdi,QWORD PTR [rdx]
  413d0f:	mov    rsi,rax
  413d12:	mov    QWORD PTR [rsp+0x40],rax
  413d17:	call   4072e0 <__flatcc_fb_copy_scope@@Base>
  413d1c:	movzx  eax,WORD PTR [rbp+0x0]
  413d20:	cmp    ax,0x1
  413d24:	mov    WORD PTR [rsp+0x1e],ax
  413d29:	sete   al
  413d2c:	movzx  eax,al
  413d2f:	mov    DWORD PTR [rsp+0x4c],eax
  413d33:	movzx  eax,WORD PTR [r12+0x28]
  413d39:	cmp    ax,0xf
  413d3d:	ja     413d80 <__flatcc_fb_gen_c_verifier@@Base+0x23b0>
  413d3f:	mov    r13d,0x1
  413d45:	shlx   r13,r13,rax
  413d4a:	xor    ebp,ebp
  413d4c:	and    r13d,0x8280
  413d53:	setne  bpl
  413d57:	sub    eax,0x7
  413d5a:	cmp    ax,0x8
  413d5e:	ja     414ca7 <__flatcc_fb_gen_c_verifier@@Base+0x32d7>
  413d64:	lea    rdx,[rip+0x31345]        # 4450b0 <_IO_stdin_used@@Base+0x170b0>
  413d6b:	movzx  eax,ax
  413d6e:	movsxd rax,DWORD PTR [rdx+rax*4]
  413d72:	add    rax,rdx
  413d75:	notrack jmp rax
  413d78:	nop    DWORD PTR [rax+rax*1+0x0]
  413d80:	mov    eax,DWORD PTR [rsp+0x18]
  413d84:	test   eax,eax
  413d86:	je     414bf4 <__flatcc_fb_gen_c_verifier@@Base+0x3224>
  413d8c:	xor    r14d,r14d
  413d8f:	mov    DWORD PTR [rsp+0x30],0x0
  413d97:	mov    DWORD PTR [rsp+0x34],0x0
  413d9f:	mov    DWORD PTR [rsp+0x48],0x0
  413da7:	mov    DWORD PTR [rsp+0x54],0x0
  413daf:	xor    edx,edx
  413db1:	mov    DWORD PTR [rsp+0xc],0x0
  413db9:	xor    r15d,r15d
  413dbc:	mov    DWORD PTR [rsp+0x5c],0x0
  413dc4:	xor    ebp,ebp
  413dc6:	jmp    414a02 <__flatcc_fb_gen_c_verifier@@Base+0x3032>
  413dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  413dd0:	xor    eax,eax
  413dd2:	cmp    QWORD PTR [r12+0x90],0x0
  413ddb:	setne  al
  413dde:	mov    DWORD PTR [rsp+0xc],eax
  413de2:	movzx  eax,WORD PTR [r12+0x70]
  413de8:	mov    edx,eax
  413dea:	and    dx,0x400
  413def:	movzx  ecx,dx
  413df2:	mov    edx,eax
  413df4:	and    dx,0x800
  413df9:	mov    DWORD PTR [rsp+0x38],ecx
  413dfd:	and    eax,0xc00
  413e02:	movzx  ecx,dx
  413e05:	mov    DWORD PTR [rsp+0x3c],ecx
  413e09:	mov    edx,DWORD PTR [r12+0x18]
  413e0e:	mov    DWORD PTR [rsp+0x50],eax
  413e12:	je     4149ad <__flatcc_fb_gen_c_verifier@@Base+0x2fdd>
  413e18:	cmp    edx,0x4
  413e1b:	jne    414c52 <__flatcc_fb_gen_c_verifier@@Base+0x3282>
  413e21:	test   r13,r13
  413e24:	je     414c52 <__flatcc_fb_gen_c_verifier@@Base+0x3282>
  413e2a:	mov    DWORD PTR [rsp+0x30],0x0
  413e32:	mov    DWORD PTR [rsp+0x34],0x0
  413e3a:	mov    DWORD PTR [rsp+0x48],0x0
  413e42:	mov    DWORD PTR [rsp+0x54],0x0
  413e4a:	mov    DWORD PTR [rsp+0x58],0x0
  413e52:	xor    r14d,r14d
  413e55:	mov    edx,0x4
  413e5a:	xor    r15d,r15d
  413e5d:	xor    ebp,ebp
  413e5f:	mov    DWORD PTR [rsp+0x5c],0x0
  413e67:	mov    DWORD PTR [rsp+0xc],0x0
  413e6f:	lea    rax,[rip+0x2efb9]        # 442e2f <_IO_stdin_used@@Base+0x14e2f>
  413e76:	cmp    DWORD PTR [rsp+0xc],0x2
  413e7b:	mov    QWORD PTR [rsp+0x10],rax
  413e80:	mov    QWORD PTR [rsp+0x28],rax
  413e85:	lea    rcx,[rip+0x31248]        # 4450d4 <_IO_stdin_used@@Base+0x170d4>
  413e8c:	je     413fb9 <__flatcc_fb_gen_c_verifier@@Base+0x25e9>
  413e92:	mov    r13d,r15d
  413e95:	or     r13d,r14d
  413e98:	or     r13d,DWORD PTR [rsp+0x18]
  413e9d:	test   r15d,r15d
  413ea0:	je     4145a8 <__flatcc_fb_gen_c_verifier@@Base+0x2bd8>
  413ea6:	cmp    edx,0xb
  413ea9:	ja     414a6d <__flatcc_fb_gen_c_verifier@@Base+0x309d>
  413eaf:	movsxd rax,DWORD PTR [rcx+rdx*4]
  413eb3:	add    rax,rcx
  413eb6:	notrack jmp rax
  413eb9:	nop    DWORD PTR [rax+0x0]
  413ec0:	mov    rdx,QWORD PTR [r12+0x78]
  413ec5:	lea    rsi,[rip+0x2fc0c]        # 443ad8 <_IO_stdin_used@@Base+0x15ad8>
  413ecc:	mov    rdi,rbx
  413ecf:	xor    eax,eax
  413ed1:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413ed6:	test   r15d,r15d
  413ed9:	jne    4143d0 <__flatcc_fb_gen_c_verifier@@Base+0x2a00>
  413edf:	test   r14d,r14d
  413ee2:	jne    414083 <__flatcc_fb_gen_c_verifier@@Base+0x26b3>
  413ee8:	mov    eax,DWORD PTR [rsp+0x34]
  413eec:	test   eax,eax
  413eee:	jne    4146b0 <__flatcc_fb_gen_c_verifier@@Base+0x2ce0>
  413ef4:	mov    eax,DWORD PTR [rsp+0x50]
  413ef8:	test   eax,eax
  413efa:	jne    4146d0 <__flatcc_fb_gen_c_verifier@@Base+0x2d00>
  413f00:	mov    r11d,DWORD PTR [rsp+0x30]
  413f05:	test   r11d,r11d
  413f08:	jne    4147b0 <__flatcc_fb_gen_c_verifier@@Base+0x2de0>
  413f0e:	mov    r10d,DWORD PTR [rsp+0x54]
  413f13:	test   r10d,r10d
  413f16:	je     414748 <__flatcc_fb_gen_c_verifier@@Base+0x2d78>
  413f1c:	mov    r9d,DWORD PTR [rsp+0x58]
  413f21:	mov    rcx,QWORD PTR [r12+0x88]
  413f29:	mov    rdx,QWORD PTR [r12+0xa0]
  413f31:	mov    r8,QWORD PTR [rsp+0x20]
  413f36:	test   r9d,r9d
  413f39:	je     4147e0 <__flatcc_fb_gen_c_verifier@@Base+0x2e10>
  413f3f:	lea    rsi,[rip+0x2ff2a]        # 443e70 <_IO_stdin_used@@Base+0x15e70>
  413f46:	mov    rdi,rbx
  413f49:	xor    eax,eax
  413f4b:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413f50:	test   ebp,ebp
  413f52:	je     413fa6 <__flatcc_fb_gen_c_verifier@@Base+0x25d6>
  413f54:	test   r13d,r13d
  413f57:	je     414608 <__flatcc_fb_gen_c_verifier@@Base+0x2c38>
  413f5d:	xor    eax,eax
  413f5f:	lea    rsi,[rip+0x3015a]        # 4440c0 <_IO_stdin_used@@Base+0x160c0>
  413f66:	mov    rdi,rbx
  413f69:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413f6e:	mov    eax,DWORD PTR [rbx+0xf0]
  413f74:	test   eax,eax
  413f76:	je     4146f8 <__flatcc_fb_gen_c_verifier@@Base+0x2d28>
  413f7c:	dec    eax
  413f7e:	mov    DWORD PTR [rbx+0xf0],eax
  413f84:	lea    rsi,[rip+0x2ec66]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  413f8b:	mov    rdi,rbx
  413f8e:	xor    eax,eax
  413f90:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413f95:	lea    rsi,[rip+0x30224]        # 4441c0 <_IO_stdin_used@@Base+0x161c0>
  413f9c:	mov    rdi,rbx
  413f9f:	xor    eax,eax
  413fa1:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413fa6:	cmp    DWORD PTR [rsp+0xc],0x1
  413fab:	jne    414520 <__flatcc_fb_gen_c_verifier@@Base+0x2b50>
  413fb1:	mov    DWORD PTR [rsp+0xc],0x2
  413fb9:	mov    eax,DWORD PTR [rbx+0xf0]
  413fbf:	test   eax,eax
  413fc1:	je     414b1f <__flatcc_fb_gen_c_verifier@@Base+0x314f>
  413fc7:	dec    eax
  413fc9:	mov    DWORD PTR [rbx+0xf0],eax
  413fcf:	lea    rsi,[rip+0x2ee5d]        # 442e33 <_IO_stdin_used@@Base+0x14e33>
  413fd6:	xor    eax,eax
  413fd8:	mov    rdi,rbx
  413fdb:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413fe0:	mov    rsi,QWORD PTR [r12+0x90]
  413fe8:	inc    DWORD PTR [rbx+0xf0]
  413fee:	mov    rdi,QWORD PTR [rsi+0x18]
  413ff2:	mov    rdx,QWORD PTR [rsp+0x20]
  413ff7:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  413ffc:	mov    rdx,QWORD PTR [r12+0x90]
  414004:	mov    eax,0x1
  414009:	cmp    WORD PTR [rdx+0x10],0x0
  41400e:	cmovne r14d,eax
  414012:	cmovne eax,DWORD PTR [rsp+0x30]
  414017:	lea    rsi,[rip+0x2f8e2]        # 443900 <_IO_stdin_used@@Base+0x15900>
  41401e:	mov    DWORD PTR [rsp+0x30],eax
  414022:	mov    rdi,rbx
  414025:	xor    eax,eax
  414027:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41402c:	mov    r13d,DWORD PTR [rsp+0x18]
  414031:	xor    r15d,r15d
  414034:	or     r13d,r14d
  414037:	xor    ebp,ebp
  414039:	cmp    WORD PTR [rsp+0x1e],0x1
  41403f:	je     413ec0 <__flatcc_fb_gen_c_verifier@@Base+0x24f0>
  414045:	mov    eax,ebp
  414047:	xor    eax,0x1
  41404a:	test   eax,r14d
  41404d:	je     413ed6 <__flatcc_fb_gen_c_verifier@@Base+0x2506>
  414053:	mov    rcx,QWORD PTR [r12+0x80]
  41405b:	mov    rdx,QWORD PTR [r12+0x88]
  414063:	movzx  r8d,WORD PTR [r12+0x72]
  414069:	xor    eax,eax
  41406b:	lea    rsi,[rip+0x2fa96]        # 443b08 <_IO_stdin_used@@Base+0x15b08>
  414072:	mov    rdi,rbx
  414075:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41407a:	test   r15d,r15d
  41407d:	jne    4143d0 <__flatcc_fb_gen_c_verifier@@Base+0x2a00>
  414083:	mov    rdx,QWORD PTR [rsp+0x20]
  414088:	lea    rsi,[rip+0x2fac9]        # 443b58 <_IO_stdin_used@@Base+0x15b58>
  41408f:	mov    rdi,rbx
  414092:	xor    eax,eax
  414094:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414099:	jmp    413f50 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  41409e:	xchg   ax,ax
  4140a0:	lea    rax,[rip+0x23219]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  4140a7:	mov    QWORD PTR [rsp+0x10],rax
  4140ac:	lea    rax,[rip+0x23204]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  4140b3:	mov    r15d,ebp
  4140b6:	mov    QWORD PTR [rsp+0x28],rax
  4140bb:	test   ebp,ebp
  4140bd:	je     414128 <__flatcc_fb_gen_c_verifier@@Base+0x2758>
  4140bf:	mov    rsi,QWORD PTR [r12+0x80]
  4140c7:	mov    r8d,0xffffffff
  4140cd:	test   rsi,rsi
  4140d0:	je     4140dd <__flatcc_fb_gen_c_verifier@@Base+0x270d>
  4140d2:	mov    rax,r8
  4140d5:	xor    edx,edx
  4140d7:	div    rsi
  4140da:	mov    r8,rax
  4140dd:	movsx  ecx,WORD PTR [r12+0x72]
  4140e3:	mov    rdx,rsi
  4140e6:	mov    rdi,rbx
  4140e9:	lea    rsi,[rip+0x2f8d8]        # 4439c8 <_IO_stdin_used@@Base+0x159c8>
  4140f0:	xor    eax,eax
  4140f2:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4140f7:	lea    rsi,[rip+0x2f88a]        # 443988 <_IO_stdin_used@@Base+0x15988>
  4140fe:	mov    rdi,rbx
  414101:	xor    eax,eax
  414103:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414108:	lea    rsi,[rip+0x2ed3a]        # 442e49 <_IO_stdin_used@@Base+0x14e49>
  41410f:	mov    rdi,rbx
  414112:	xor    eax,eax
  414114:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414119:	inc    DWORD PTR [rbx+0xf0]
  41411f:	test   r15d,r15d
  414122:	je     4145f2 <__flatcc_fb_gen_c_verifier@@Base+0x2c22>
  414128:	mov    rdx,QWORD PTR [rsp+0x28]
  41412d:	lea    rsi,[rip+0x2ed24]        # 442e58 <_IO_stdin_used@@Base+0x14e58>
  414134:	mov    rdi,rbx
  414137:	xor    eax,eax
  414139:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41413e:	xor    eax,eax
  414140:	lea    rsi,[rip+0x2f8d9]        # 443a20 <_IO_stdin_used@@Base+0x15a20>
  414147:	mov    rdi,rbx
  41414a:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41414f:	mov    eax,DWORD PTR [rsp+0x48]
  414153:	add    DWORD PTR [rbx+0xf0],0x2
  41415a:	test   eax,eax
  41415c:	je     414174 <__flatcc_fb_gen_c_verifier@@Base+0x27a4>
  41415e:	mov    rdx,QWORD PTR [rsp+0x20]
  414163:	lea    rsi,[rip+0x2ecfa]        # 442e64 <_IO_stdin_used@@Base+0x14e64>
  41416a:	mov    rdi,rbx
  41416d:	xor    eax,eax
  41416f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414174:	mov    rax,QWORD PTR [rbx+0xd8]
  41417b:	mov    rcx,QWORD PTR [rsp+0x40]
  414180:	mov    rdx,QWORD PTR [rax+0x110]
  414187:	lea    rsi,[rip+0x2ecea]        # 442e78 <_IO_stdin_used@@Base+0x14e78>
  41418e:	mov    rdi,rbx
  414191:	xor    eax,eax
  414193:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414198:	mov    rax,QWORD PTR [rbx+0xd8]
  41419f:	lea    rsi,[rip+0x2f8c2]        # 443a68 <_IO_stdin_used@@Base+0x15a68>
  4141a6:	mov    rdx,QWORD PTR [rax+0x110]
  4141ad:	mov    rdi,rbx
  4141b0:	xor    eax,eax
  4141b2:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4141b7:	mov    eax,DWORD PTR [rbx+0xf0]
  4141bd:	test   eax,eax
  4141bf:	je     414ae1 <__flatcc_fb_gen_c_verifier@@Base+0x3111>
  4141c5:	cmp    eax,0x1
  4141c8:	je     414ad7 <__flatcc_fb_gen_c_verifier@@Base+0x3107>
  4141ce:	sub    eax,0x2
  4141d1:	test   r13d,r13d
  4141d4:	mov    DWORD PTR [rbx+0xf0],eax
  4141da:	setne  al
  4141dd:	and    eax,ebp
  4141df:	mov    r15d,0x1
  4141e5:	test   al,al
  4141e7:	je     414039 <__flatcc_fb_gen_c_verifier@@Base+0x2669>
  4141ed:	lea    rsi,[rip+0x2f89c]        # 443a90 <_IO_stdin_used@@Base+0x15a90>
  4141f4:	mov    rdi,rbx
  4141f7:	xor    eax,eax
  4141f9:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4141fe:	jmp    414039 <__flatcc_fb_gen_c_verifier@@Base+0x2669>
  414203:	nop    DWORD PTR [rax+rax*1+0x0]
  414208:	lea    rax,[rip+0x230be]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  41420f:	mov    QWORD PTR [rsp+0x28],rax
  414214:	lea    rax,[rip+0x230bb]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  41421b:	mov    QWORD PTR [rsp+0x10],rax
  414220:	mov    r15d,ebp
  414223:	test   ebp,ebp
  414225:	jne    4140bf <__flatcc_fb_gen_c_verifier@@Base+0x26ef>
  41422b:	jmp    414128 <__flatcc_fb_gen_c_verifier@@Base+0x2758>
  414230:	lea    rax,[rip+0x230c2]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  414237:	mov    QWORD PTR [rsp+0x28],rax
  41423c:	lea    rax,[rip+0x230b1]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  414243:	mov    QWORD PTR [rsp+0x10],rax
  414248:	jmp    414220 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  41424a:	nop    WORD PTR [rax+rax*1+0x0]
  414250:	lea    rax,[rip+0x23086]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  414257:	mov    QWORD PTR [rsp+0x28],rax
  41425c:	lea    rax,[rip+0x23083]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  414263:	mov    QWORD PTR [rsp+0x10],rax
  414268:	jmp    414220 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  41426a:	nop    WORD PTR [rax+rax*1+0x0]
  414270:	lea    rax,[rip+0x23082]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  414277:	mov    QWORD PTR [rsp+0x28],rax
  41427c:	lea    rax,[rip+0x2307e]        # 437301 <_IO_stdin_used@@Base+0x9301>
  414283:	mov    QWORD PTR [rsp+0x10],rax
  414288:	jmp    414220 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  41428a:	nop    WORD PTR [rax+rax*1+0x0]
  414290:	lea    rax,[rip+0x23047]        # 4372de <_IO_stdin_used@@Base+0x92de>
  414297:	mov    QWORD PTR [rsp+0x28],rax
  41429c:	lea    rax,[rip+0x23044]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  4142a3:	mov    QWORD PTR [rsp+0x10],rax
  4142a8:	jmp    414220 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  4142ad:	nop    DWORD PTR [rax]
  4142b0:	lea    rax,[rip+0x23001]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  4142b7:	mov    QWORD PTR [rsp+0x28],rax
  4142bc:	lea    rax,[rip+0x22ffe]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  4142c3:	mov    QWORD PTR [rsp+0x10],rax
  4142c8:	jmp    414220 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  4142cd:	nop    DWORD PTR [rax]
  4142d0:	lea    rax,[rip+0x22ff0]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  4142d7:	mov    QWORD PTR [rsp+0x28],rax
  4142dc:	mov    QWORD PTR [rsp+0x10],rax
  4142e1:	jmp    414220 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  4142e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4142f0:	lea    rax,[rip+0x23010]        # 437307 <_IO_stdin_used@@Base+0x9307>
  4142f7:	mov    QWORD PTR [rsp+0x28],rax
  4142fc:	mov    QWORD PTR [rsp+0x10],rax
  414301:	jmp    414220 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  414306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414310:	lea    rax,[rip+0x22fe3]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  414317:	mov    QWORD PTR [rsp+0x28],rax
  41431c:	lea    rax,[rip+0x22fdf]        # 437302 <_IO_stdin_used@@Base+0x9302>
  414323:	mov    QWORD PTR [rsp+0x10],rax
  414328:	jmp    414220 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  41432d:	nop    DWORD PTR [rax]
  414330:	lea    rax,[rip+0x22f97]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  414337:	mov    QWORD PTR [rsp+0x28],rax
  41433c:	lea    rax,[rip+0x22f94]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  414343:	mov    QWORD PTR [rsp+0x10],rax
  414348:	jmp    414220 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  41434d:	mov    rsi,QWORD PTR [r12+0x18]
  414352:	mov    rdx,QWORD PTR [rsp+0x20]
  414357:	mov    rdi,QWORD PTR [rsi+0x18]
  41435b:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  414360:	mov    rdx,QWORD PTR [r12+0x18]
  414365:	xor    ecx,ecx
  414367:	movzx  eax,WORD PTR [rdx+0x10]
  41436b:	cmp    ax,0x3
  41436f:	sete   cl
  414372:	xor    r14d,r14d
  414375:	cmp    ax,0x1
  414379:	sete   r14b
  41437d:	mov    DWORD PTR [rsp+0x48],ecx
  414381:	xor    ecx,ecx
  414383:	test   ax,ax
  414386:	sete   cl
  414389:	mov    DWORD PTR [rsp+0x30],ecx
  41438d:	cmp    ax,0x4
  414391:	jne    41439f <__flatcc_fb_gen_c_verifier@@Base+0x29cf>
  414393:	mov    ecx,DWORD PTR [rsp+0x18]
  414397:	test   ecx,ecx
  414399:	je     414abd <__flatcc_fb_gen_c_verifier@@Base+0x30ed>
  41439f:	cmp    ax,0x3
  4143a3:	je     414a47 <__flatcc_fb_gen_c_verifier@@Base+0x3077>
  4143a9:	xor    edx,edx
  4143ab:	mov    DWORD PTR [rsp+0x54],0x0
  4143b3:	xor    r15d,r15d
  4143b6:	mov    DWORD PTR [rsp+0x48],0x0
  4143be:	mov    DWORD PTR [rsp+0x34],0x0
  4143c6:	jmp    414986 <__flatcc_fb_gen_c_verifier@@Base+0x2fb6>
  4143cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4143d0:	mov    r15,QWORD PTR [rsp+0x10]
  4143d5:	lea    rsi,[rip+0x2f7b4]        # 443b90 <_IO_stdin_used@@Base+0x15b90>
  4143dc:	mov    rdx,r15
  4143df:	mov    rdi,rbx
  4143e2:	xor    eax,eax
  4143e4:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4143e9:	lea    rsi,[rip+0x2eaa5]        # 442e95 <_IO_stdin_used@@Base+0x14e95>
  4143f0:	mov    rdi,rbx
  4143f3:	xor    eax,eax
  4143f5:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4143fa:	inc    DWORD PTR [rbx+0xf0]
  414400:	mov    rdx,r15
  414403:	lea    rsi,[rip+0x2f7c6]        # 443bd0 <_IO_stdin_used@@Base+0x15bd0>
  41440a:	mov    rdi,rbx
  41440d:	xor    eax,eax
  41440f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414414:	xor    eax,eax
  414416:	lea    rsi,[rip+0x2f80b]        # 443c28 <_IO_stdin_used@@Base+0x15c28>
  41441d:	mov    rdi,rbx
  414420:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414425:	mov    eax,DWORD PTR [rbx+0xf0]
  41442b:	test   eax,eax
  41442d:	je     414b00 <__flatcc_fb_gen_c_verifier@@Base+0x3130>
  414433:	dec    eax
  414435:	mov    DWORD PTR [rbx+0xf0],eax
  41443b:	lea    rsi,[rip+0x2e7af]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  414442:	xor    eax,eax
  414444:	mov    rdi,rbx
  414447:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41444c:	mov    r15d,DWORD PTR [rsp+0x4c]
  414451:	mov    eax,DWORD PTR [rsp+0x3c]
  414455:	or     r15d,ebp
  414458:	or     eax,DWORD PTR [rsp+0x38]
  41445c:	or     eax,r15d
  41445f:	jne    414680 <__flatcc_fb_gen_c_verifier@@Base+0x2cb0>
  414465:	movzx  eax,WORD PTR [r12+0x58]
  41446b:	cmp    ax,0x4
  41446f:	je     414720 <__flatcc_fb_gen_c_verifier@@Base+0x2d50>
  414475:	ja     414578 <__flatcc_fb_gen_c_verifier@@Base+0x2ba8>
  41447b:	cmp    ax,0x3
  41447f:	jne    414b3e <__flatcc_fb_gen_c_verifier@@Base+0x316e>
  414485:	vmovsd xmm0,QWORD PTR [r12+0x48]
  41448c:	lea    rsi,[rip+0x2f855]        # 443ce8 <_IO_stdin_used@@Base+0x15ce8>
  414493:	mov    rdi,rbx
  414496:	mov    eax,0x1
  41449b:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4144a0:	inc    DWORD PTR [rbx+0xf0]
  4144a6:	mov    rcx,QWORD PTR [r12+0x80]
  4144ae:	mov    rdx,QWORD PTR [r12+0x88]
  4144b6:	movsx  r8d,WORD PTR [r12+0x72]
  4144bc:	lea    rsi,[rip+0x2f89d]        # 443d60 <_IO_stdin_used@@Base+0x15d60>
  4144c3:	mov    rdi,rbx
  4144c6:	xor    eax,eax
  4144c8:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4144cd:	mov    rcx,QWORD PTR [rsp+0x10]
  4144d2:	mov    rdx,rbx
  4144d5:	lea    rsi,[rip+0x2e9cc]        # 442ea8 <_IO_stdin_used@@Base+0x14ea8>
  4144dc:	mov    rdi,rbx
  4144df:	xor    eax,eax
  4144e1:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4144e6:	mov    eax,DWORD PTR [rbx+0xf0]
  4144ec:	test   eax,eax
  4144ee:	je     414b8e <__flatcc_fb_gen_c_verifier@@Base+0x31be>
  4144f4:	dec    eax
  4144f6:	mov    DWORD PTR [rbx+0xf0],eax
  4144fc:	lea    rsi,[rip+0x2e6ee]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  414503:	xor    eax,eax
  414505:	mov    rdi,rbx
  414508:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41450d:	cmp    DWORD PTR [rsp+0xc],0x1
  414512:	je     413fb1 <__flatcc_fb_gen_c_verifier@@Base+0x25e1>
  414518:	nop    DWORD PTR [rax+rax*1+0x0]
  414520:	cmp    DWORD PTR [rsp+0xc],0x2
  414525:	je     4148e6 <__flatcc_fb_gen_c_verifier@@Base+0x2f16>
  41452b:	mov    eax,DWORD PTR [rsp+0x3c]
  41452f:	or     eax,DWORD PTR [rsp+0x38]
  414533:	or     eax,DWORD PTR [rsp+0x34]
  414537:	or     eax,DWORD PTR [rsp+0x30]
  41453b:	or     eax,DWORD PTR [rsp+0xc]
  41453f:	or     eax,ebp
  414541:	jne    41492f <__flatcc_fb_gen_c_verifier@@Base+0x2f5f>
  414547:	xor    eax,eax
  414549:	mov    rcx,QWORD PTR [rsp+0x228]
  414551:	xor    rcx,QWORD PTR fs:0x28
  41455a:	jne    414ca2 <__flatcc_fb_gen_c_verifier@@Base+0x32d2>
  414560:	add    rsp,0x238
  414567:	pop    rbx
  414568:	pop    rbp
  414569:	pop    r12
  41456b:	pop    r13
  41456d:	pop    r14
  41456f:	pop    r15
  414571:	ret    
  414572:	nop    WORD PTR [rax+rax*1+0x0]
  414578:	cmp    ax,0x6
  41457c:	ja     414b3e <__flatcc_fb_gen_c_verifier@@Base+0x316e>
  414582:	mov    rdx,QWORD PTR [r12+0x48]
  414587:	lea    rsi,[rip+0x2f6ca]        # 443c58 <_IO_stdin_used@@Base+0x15c58>
  41458e:	mov    rdi,rbx
  414591:	xor    eax,eax
  414593:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414598:	inc    DWORD PTR [rbx+0xf0]
  41459e:	jmp    4144a6 <__flatcc_fb_gen_c_verifier@@Base+0x2ad6>
  4145a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4145a8:	test   ebp,ebp
  4145aa:	je     4147d0 <__flatcc_fb_gen_c_verifier@@Base+0x2e00>
  4145b0:	test   r13d,r13d
  4145b3:	jne    4140bf <__flatcc_fb_gen_c_verifier@@Base+0x26ef>
  4145b9:	lea    rsi,[rip+0x2f388]        # 443948 <_IO_stdin_used@@Base+0x15948>
  4145c0:	mov    rdi,rbx
  4145c3:	xor    eax,eax
  4145c5:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4145ca:	lea    rsi,[rip+0x2f3b7]        # 443988 <_IO_stdin_used@@Base+0x15988>
  4145d1:	mov    rdi,rbx
  4145d4:	xor    eax,eax
  4145d6:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4145db:	lea    rsi,[rip+0x2e867]        # 442e49 <_IO_stdin_used@@Base+0x14e49>
  4145e2:	mov    rdi,rbx
  4145e5:	xor    eax,eax
  4145e7:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4145ec:	inc    DWORD PTR [rbx+0xf0]
  4145f2:	test   r13d,r13d
  4145f5:	setne  al
  4145f8:	and    eax,ebp
  4145fa:	xor    r15d,r15d
  4145fd:	jmp    4141e5 <__flatcc_fb_gen_c_verifier@@Base+0x2815>
  414602:	nop    WORD PTR [rax+rax*1+0x0]
  414608:	lea    rsi,[rip+0x2fa59]        # 444068 <_IO_stdin_used@@Base+0x16068>
  41460f:	mov    rdi,rbx
  414612:	xor    eax,eax
  414614:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414619:	lea    rsi,[rip+0x2e8a5]        # 442ec5 <_IO_stdin_used@@Base+0x14ec5>
  414620:	mov    rdi,rbx
  414623:	xor    eax,eax
  414625:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41462a:	xor    eax,eax
  41462c:	lea    rsi,[rip+0x2fa8d]        # 4440c0 <_IO_stdin_used@@Base+0x160c0>
  414633:	mov    rdi,rbx
  414636:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41463b:	mov    eax,DWORD PTR [rbx+0xf0]
  414641:	test   eax,eax
  414643:	je     4146f8 <__flatcc_fb_gen_c_verifier@@Base+0x2d28>
  414649:	dec    eax
  41464b:	mov    DWORD PTR [rbx+0xf0],eax
  414651:	mov    rdi,rbx
  414654:	xor    eax,eax
  414656:	lea    rsi,[rip+0x2e594]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  41465d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414662:	lea    rsi,[rip+0x2fb1f]        # 444188 <_IO_stdin_used@@Base+0x16188>
  414669:	mov    rdi,rbx
  41466c:	xor    eax,eax
  41466e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414673:	jmp    413fa6 <__flatcc_fb_gen_c_verifier@@Base+0x25d6>
  414678:	nop    DWORD PTR [rax+rax*1+0x0]
  414680:	mov    rcx,QWORD PTR [rsp+0x10]
  414685:	xor    eax,eax
  414687:	mov    rdx,rbx
  41468a:	lea    rsi,[rip+0x2e817]        # 442ea8 <_IO_stdin_used@@Base+0x14ea8>
  414691:	mov    rdi,rbx
  414694:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414699:	test   r15d,r15d
  41469c:	jne    413f50 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  4146a2:	jmp    4144e6 <__flatcc_fb_gen_c_verifier@@Base+0x2b16>
  4146a7:	nop    WORD PTR [rax+rax*1+0x0]
  4146b0:	lea    rsi,[rip+0x2f6f9]        # 443db0 <_IO_stdin_used@@Base+0x15db0>
  4146b7:	mov    rdi,rbx
  4146ba:	xor    eax,eax
  4146bc:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4146c1:	jmp    413f50 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  4146c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4146d0:	mov    r15d,DWORD PTR [rsp+0x38]
  4146d5:	xor    edx,edx
  4146d7:	test   r15d,r15d
  4146da:	sete   dl
  4146dd:	lea    rsi,[rip+0x2f70c]        # 443df0 <_IO_stdin_used@@Base+0x15df0>
  4146e4:	mov    rdi,rbx
  4146e7:	xor    eax,eax
  4146e9:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4146ee:	jmp    413f50 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  4146f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4146f8:	lea    rcx,[rip+0x30b11]        # 445210 <_IO_stdin_used@@Base+0x17210>
  4146ff:	mov    edx,0x287
  414704:	lea    rsi,[rip+0x2ea6d]        # 443178 <_IO_stdin_used@@Base+0x15178>
  41470b:	lea    rdi,[rip+0x2e4d3]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  414712:	call   405300 <__assert_fail@plt>
  414717:	nop    WORD PTR [rax+rax*1+0x0]
  414720:	mov    rdx,QWORD PTR [r12+0x48]
  414725:	lea    rsi,[rip+0x2f574]        # 443ca0 <_IO_stdin_used@@Base+0x15ca0>
  41472c:	mov    rdi,rbx
  41472f:	xor    eax,eax
  414731:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414736:	inc    DWORD PTR [rbx+0xf0]
  41473c:	jmp    4144a6 <__flatcc_fb_gen_c_verifier@@Base+0x2ad6>
  414741:	nop    DWORD PTR [rax+0x0]
  414748:	mov    edi,DWORD PTR [rsp+0x18]
  41474c:	test   edi,edi
  41474e:	jne    414800 <__flatcc_fb_gen_c_verifier@@Base+0x2e30>
  414754:	test   ebp,ebp
  414756:	jne    413f54 <__flatcc_fb_gen_c_verifier@@Base+0x2584>
  41475c:	mov    rax,QWORD PTR [rip+0x3d885]        # 451fe8 <stderr@GLIBC_2.2.5>
  414763:	lea    rcx,[rip+0x2ea0e]        # 443178 <_IO_stdin_used@@Base+0x15178>
  41476a:	mov    rdi,QWORD PTR [rax]
  41476d:	lea    rdx,[rip+0x22b1f]        # 437293 <_IO_stdin_used@@Base+0x9293>
  414774:	mov    esi,0x1
  414779:	lea    r9,[rip+0x2f8b0]        # 444030 <_IO_stdin_used@@Base+0x16030>
  414780:	mov    r8d,0x27c
  414786:	xor    eax,eax
  414788:	call   405400 <__fprintf_chk@plt>
  41478d:	lea    rcx,[rip+0x30a7c]        # 445210 <_IO_stdin_used@@Base+0x17210>
  414794:	mov    edx,0x27c
  414799:	lea    rsi,[rip+0x2e9d8]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4147a0:	lea    rdi,[rip+0x23bb2]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4147a7:	call   405300 <__assert_fail@plt>
  4147ac:	nop    DWORD PTR [rax+0x0]
  4147b0:	mov    rdx,QWORD PTR [rsp+0x20]
  4147b5:	lea    rsi,[rip+0x2f684]        # 443e40 <_IO_stdin_used@@Base+0x15e40>
  4147bc:	mov    rdi,rbx
  4147bf:	xor    eax,eax
  4147c1:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4147c6:	jmp    413f50 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  4147cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4147d0:	mov    r15d,ebp
  4147d3:	jmp    414039 <__flatcc_fb_gen_c_verifier@@Base+0x2669>
  4147d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4147e0:	lea    rsi,[rip+0x2f6e9]        # 443ed0 <_IO_stdin_used@@Base+0x15ed0>
  4147e7:	mov    rdi,rbx
  4147ea:	xor    eax,eax
  4147ec:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4147f1:	jmp    413f50 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  4147f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414800:	lea    rsi,[rip+0x2f219]        # 443a20 <_IO_stdin_used@@Base+0x15a20>
  414807:	mov    rdi,rbx
  41480a:	xor    eax,eax
  41480c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414811:	add    DWORD PTR [rbx+0xf0],0x2
  414818:	mov    rdx,QWORD PTR [rsp+0x20]
  41481d:	lea    rsi,[rip+0x2e640]        # 442e64 <_IO_stdin_used@@Base+0x14e64>
  414824:	mov    rdi,rbx
  414827:	xor    eax,eax
  414829:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41482e:	mov    rax,QWORD PTR [rbx+0xd8]
  414835:	mov    rcx,QWORD PTR [rsp+0x40]
  41483a:	mov    rdx,QWORD PTR [rax+0x110]
  414841:	lea    rsi,[rip+0x2e630]        # 442e78 <_IO_stdin_used@@Base+0x14e78>
  414848:	mov    rdi,rbx
  41484b:	xor    eax,eax
  41484d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414852:	mov    rax,QWORD PTR [rbx+0xd8]
  414859:	lea    rsi,[rip+0x2f208]        # 443a68 <_IO_stdin_used@@Base+0x15a68>
  414860:	mov    rdx,QWORD PTR [rax+0x110]
  414867:	mov    rdi,rbx
  41486a:	xor    eax,eax
  41486c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414871:	mov    eax,DWORD PTR [rbx+0xf0]
  414877:	test   eax,eax
  414879:	je     414cde <__flatcc_fb_gen_c_verifier@@Base+0x330e>
  41487f:	cmp    eax,0x1
  414882:	je     414cd4 <__flatcc_fb_gen_c_verifier@@Base+0x3304>
  414888:	mov    esi,DWORD PTR [rsp+0x5c]
  41488c:	sub    eax,0x2
  41488f:	mov    DWORD PTR [rbx+0xf0],eax
  414895:	mov    rcx,QWORD PTR [r12+0x88]
  41489d:	mov    rdx,QWORD PTR [r12+0xa0]
  4148a5:	mov    r8,QWORD PTR [rsp+0x20]
  4148aa:	test   esi,esi
  4148ac:	je     4148d0 <__flatcc_fb_gen_c_verifier@@Base+0x2f00>
  4148ae:	mov    r9,r8
  4148b1:	lea    rsi,[rip+0x2f670]        # 443f28 <_IO_stdin_used@@Base+0x15f28>
  4148b8:	mov    rdi,rbx
  4148bb:	xor    eax,eax
  4148bd:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4148c2:	jmp    413f50 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  4148c7:	nop    WORD PTR [rax+rax*1+0x0]
  4148d0:	lea    rsi,[rip+0x2f6e9]        # 443fc0 <_IO_stdin_used@@Base+0x15fc0>
  4148d7:	mov    rdi,rbx
  4148da:	xor    eax,eax
  4148dc:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4148e1:	jmp    413f50 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  4148e6:	lea    rsi,[rip+0x2e5e5]        # 442ed2 <_IO_stdin_used@@Base+0x14ed2>
  4148ed:	mov    rdi,rbx
  4148f0:	xor    eax,eax
  4148f2:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4148f7:	xor    eax,eax
  4148f9:	lea    rsi,[rip+0x2f800]        # 444100 <_IO_stdin_used@@Base+0x16100>
  414900:	mov    rdi,rbx
  414903:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414908:	mov    eax,DWORD PTR [rbx+0xf0]
  41490e:	test   eax,eax
  414910:	je     414c33 <__flatcc_fb_gen_c_verifier@@Base+0x3263>
  414916:	dec    eax
  414918:	mov    DWORD PTR [rbx+0xf0],eax
  41491e:	lea    rsi,[rip+0x2e5c4]        # 442ee9 <_IO_stdin_used@@Base+0x14ee9>
  414925:	mov    rdi,rbx
  414928:	xor    eax,eax
  41492a:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41492f:	mov    rdx,QWORD PTR [r12+0x88]
  414937:	mov    rdi,rbx
  41493a:	xor    eax,eax
  41493c:	lea    rsi,[rip+0x2f7ed]        # 444130 <_IO_stdin_used@@Base+0x16130>
  414943:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414948:	lea    rsi,[rip+0x2e576]        # 442ec5 <_IO_stdin_used@@Base+0x14ec5>
  41494f:	mov    rdi,rbx
  414952:	xor    eax,eax
  414954:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414959:	jmp    414547 <__flatcc_fb_gen_c_verifier@@Base+0x2b77>
  41495e:	mov    DWORD PTR [rsp+0x54],0x0
  414966:	mov    DWORD PTR [rsp+0x30],0x0
  41496e:	mov    DWORD PTR [rsp+0x48],0x0
  414976:	mov    DWORD PTR [rsp+0x34],0x1
  41497e:	xor    edx,edx
  414980:	xor    r14d,r14d
  414983:	xor    r15d,r15d
  414986:	cmp    DWORD PTR [rsp+0x18],0x0
  41498b:	je     414a1b <__flatcc_fb_gen_c_verifier@@Base+0x304b>
  414991:	mov    DWORD PTR [rsp+0xc],0x0
  414999:	jmp    4149e1 <__flatcc_fb_gen_c_verifier@@Base+0x3011>
  41499b:	nop    DWORD PTR [rax+rax*1+0x0]
  4149a0:	mov    DWORD PTR [rsp+0xc],0x0
  4149a8:	mov    edx,DWORD PTR [r12+0x18]
  4149ad:	cmp    DWORD PTR [rsp+0x18],0x0
  4149b2:	mov    r15d,0x1
  4149b8:	je     414c03 <__flatcc_fb_gen_c_verifier@@Base+0x3233>
  4149be:	mov    DWORD PTR [rsp+0x30],0x0
  4149c6:	mov    DWORD PTR [rsp+0x34],0x0
  4149ce:	mov    DWORD PTR [rsp+0x48],0x0
  4149d6:	mov    DWORD PTR [rsp+0x54],0x0
  4149de:	xor    r14d,r14d
  4149e1:	xor    r15d,r15d
  4149e4:	cmp    r13,0x1
  4149e8:	sbb    eax,eax
  4149ea:	inc    eax
  4149ec:	mov    DWORD PTR [rsp+0x5c],eax
  4149f0:	test   r13,r13
  4149f3:	cmovne ebp,r15d
  4149f7:	cmp    DWORD PTR [rsp+0xc],0x1
  4149fc:	je     414bb0 <__flatcc_fb_gen_c_verifier@@Base+0x31e0>
  414a02:	mov    eax,DWORD PTR [rsp+0xc]
  414a06:	mov    DWORD PTR [rsp+0x38],eax
  414a0a:	mov    DWORD PTR [rsp+0x50],eax
  414a0e:	mov    DWORD PTR [rsp+0x58],eax
  414a12:	mov    DWORD PTR [rsp+0x3c],eax
  414a16:	jmp    413e6f <__flatcc_fb_gen_c_verifier@@Base+0x249f>
  414a1b:	mov    eax,DWORD PTR [rsp+0x54]
  414a1f:	mov    DWORD PTR [rsp+0x50],0x0
  414a27:	and    eax,ebp
  414a29:	mov    DWORD PTR [rsp+0x3c],0x0
  414a31:	mov    DWORD PTR [rsp+0x38],0x0
  414a39:	mov    DWORD PTR [rsp+0x58],eax
  414a3d:	cmovne ebp,DWORD PTR [rsp+0x18]
  414a42:	jmp    413e5f <__flatcc_fb_gen_c_verifier@@Base+0x248f>
  414a47:	mov    edx,DWORD PTR [rdx+0x48]
  414a4a:	mov    DWORD PTR [rsp+0x54],0x0
  414a52:	mov    r15d,0x1
  414a58:	mov    DWORD PTR [rsp+0x48],0x1
  414a60:	mov    DWORD PTR [rsp+0x34],0x0
  414a68:	jmp    414986 <__flatcc_fb_gen_c_verifier@@Base+0x2fb6>
  414a6d:	mov    rax,QWORD PTR [rip+0x3d574]        # 451fe8 <stderr@GLIBC_2.2.5>
  414a74:	lea    rcx,[rip+0x1b06d]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  414a7b:	mov    rdi,QWORD PTR [rax]
  414a7e:	lea    rdx,[rip+0x2280e]        # 437293 <_IO_stdin_used@@Base+0x9293>
  414a85:	mov    esi,0x1
  414a8a:	lea    r9,[rip+0x1b01f]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  414a91:	mov    r8d,0x60
  414a97:	xor    eax,eax
  414a99:	call   405400 <__fprintf_chk@plt>
  414a9e:	lea    rcx,[rip+0x3074b]        # 4451f0 <_IO_stdin_used@@Base+0x171f0>
  414aa5:	mov    edx,0x60
  414aaa:	lea    rsi,[rip+0x1b037]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  414ab1:	lea    rdi,[rip+0x238a1]        # 438359 <_IO_stdin_used@@Base+0xa359>
  414ab8:	call   405300 <__assert_fail@plt>
  414abd:	xor    edx,edx
  414abf:	mov    DWORD PTR [rsp+0x54],0x1
  414ac7:	xor    r15d,r15d
  414aca:	mov    DWORD PTR [rsp+0x34],0x0
  414ad2:	jmp    414986 <__flatcc_fb_gen_c_verifier@@Base+0x2fb6>
  414ad7:	mov    DWORD PTR [rbx+0xf0],0x0
  414ae1:	lea    rcx,[rip+0x30728]        # 445210 <_IO_stdin_used@@Base+0x17210>
  414ae8:	mov    edx,0x21b
  414aed:	lea    rsi,[rip+0x2e684]        # 443178 <_IO_stdin_used@@Base+0x15178>
  414af4:	lea    rdi,[rip+0x2e0ea]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  414afb:	call   405300 <__assert_fail@plt>
  414b00:	lea    rcx,[rip+0x30709]        # 445210 <_IO_stdin_used@@Base+0x17210>
  414b07:	mov    edx,0x22f
  414b0c:	lea    rsi,[rip+0x2e665]        # 443178 <_IO_stdin_used@@Base+0x15178>
  414b13:	lea    rdi,[rip+0x2e0cb]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  414b1a:	call   405300 <__assert_fail@plt>
  414b1f:	lea    rcx,[rip+0x306ea]        # 445210 <_IO_stdin_used@@Base+0x17210>
  414b26:	mov    edx,0x1ea
  414b2b:	lea    rsi,[rip+0x2e646]        # 443178 <_IO_stdin_used@@Base+0x15178>
  414b32:	lea    rdi,[rip+0x2e0ac]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  414b39:	call   405300 <__assert_fail@plt>
  414b3e:	mov    rax,QWORD PTR [rip+0x3d4a3]        # 451fe8 <stderr@GLIBC_2.2.5>
  414b45:	lea    rcx,[rip+0x2e62c]        # 443178 <_IO_stdin_used@@Base+0x15178>
  414b4c:	mov    rdi,QWORD PTR [rax]
  414b4f:	lea    rdx,[rip+0x2273d]        # 437293 <_IO_stdin_used@@Base+0x9293>
  414b56:	mov    esi,0x1
  414b5b:	lea    r9,[rip+0x2f1ce]        # 443d30 <_IO_stdin_used@@Base+0x15d30>
  414b62:	mov    r8d,0x24e
  414b68:	xor    eax,eax
  414b6a:	call   405400 <__fprintf_chk@plt>
  414b6f:	lea    rcx,[rip+0x3069a]        # 445210 <_IO_stdin_used@@Base+0x17210>
  414b76:	mov    edx,0x24e
  414b7b:	lea    rsi,[rip+0x2e5f6]        # 443178 <_IO_stdin_used@@Base+0x15178>
  414b82:	lea    rdi,[rip+0x237d0]        # 438359 <_IO_stdin_used@@Base+0xa359>
  414b89:	call   405300 <__assert_fail@plt>
  414b8e:	lea    rcx,[rip+0x3067b]        # 445210 <_IO_stdin_used@@Base+0x17210>
  414b95:	mov    edx,0x25a
  414b9a:	lea    rsi,[rip+0x2e5d7]        # 443178 <_IO_stdin_used@@Base+0x15178>
  414ba1:	lea    rdi,[rip+0x2e03d]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  414ba8:	call   405300 <__assert_fail@plt>
  414bad:	nop    DWORD PTR [rax]
  414bb0:	lea    rsi,[rip+0x2ed11]        # 4438c8 <_IO_stdin_used@@Base+0x158c8>
  414bb7:	mov    rdi,rbx
  414bba:	xor    eax,eax
  414bbc:	mov    DWORD PTR [rsp+0x10],edx
  414bc0:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414bc5:	inc    DWORD PTR [rbx+0xf0]
  414bcb:	mov    DWORD PTR [rsp+0x38],0x0
  414bd3:	mov    DWORD PTR [rsp+0x50],0x0
  414bdb:	mov    DWORD PTR [rsp+0x58],0x0
  414be3:	mov    DWORD PTR [rsp+0x3c],0x0
  414beb:	mov    edx,DWORD PTR [rsp+0x10]
  414bef:	jmp    413e6f <__flatcc_fb_gen_c_verifier@@Base+0x249f>
  414bf4:	mov    DWORD PTR [rsp+0xc],0x0
  414bfc:	xor    ebp,ebp
  414bfe:	xor    r15d,r15d
  414c01:	xor    edx,edx
  414c03:	xor    r14d,r14d
  414c06:	mov    DWORD PTR [rsp+0x30],0x0
  414c0e:	mov    DWORD PTR [rsp+0x34],0x0
  414c16:	mov    DWORD PTR [rsp+0x48],0x0
  414c1e:	mov    DWORD PTR [rsp+0x54],0x0
  414c26:	mov    DWORD PTR [rsp+0x5c],0x0
  414c2e:	jmp    4149f7 <__flatcc_fb_gen_c_verifier@@Base+0x3027>
  414c33:	lea    rcx,[rip+0x305d6]        # 445210 <_IO_stdin_used@@Base+0x17210>
  414c3a:	mov    edx,0x295
  414c3f:	lea    rsi,[rip+0x2e532]        # 443178 <_IO_stdin_used@@Base+0x15178>
  414c46:	lea    rdi,[rip+0x2df98]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  414c4d:	call   405300 <__assert_fail@plt>
  414c52:	mov    rax,QWORD PTR [rip+0x3d38f]        # 451fe8 <stderr@GLIBC_2.2.5>
  414c59:	lea    rcx,[rip+0x2e518]        # 443178 <_IO_stdin_used@@Base+0x15178>
  414c60:	mov    rdi,QWORD PTR [rax]
  414c63:	lea    rdx,[rip+0x22629]        # 437293 <_IO_stdin_used@@Base+0x9293>
  414c6a:	mov    esi,0x1
  414c6f:	lea    r9,[rip+0x2ec12]        # 443888 <_IO_stdin_used@@Base+0x15888>
  414c76:	mov    r8d,0x1d2
  414c7c:	xor    eax,eax
  414c7e:	call   405400 <__fprintf_chk@plt>
  414c83:	lea    rcx,[rip+0x30586]        # 445210 <_IO_stdin_used@@Base+0x17210>
  414c8a:	mov    edx,0x1d2
  414c8f:	lea    rsi,[rip+0x2e4e2]        # 443178 <_IO_stdin_used@@Base+0x15178>
  414c96:	lea    rdi,[rip+0x236bc]        # 438359 <_IO_stdin_used@@Base+0xa359>
  414c9d:	call   405300 <__assert_fail@plt>
  414ca2:	call   4052d0 <__stack_chk_fail@plt>
  414ca7:	xor    r14d,r14d
  414caa:	mov    DWORD PTR [rsp+0x30],0x0
  414cb2:	mov    DWORD PTR [rsp+0x34],0x0
  414cba:	mov    DWORD PTR [rsp+0x48],0x0
  414cc2:	mov    DWORD PTR [rsp+0x54],0x0
  414cca:	xor    edx,edx
  414ccc:	xor    r15d,r15d
  414ccf:	jmp    414986 <__flatcc_fb_gen_c_verifier@@Base+0x2fb6>
  414cd4:	mov    DWORD PTR [rbx+0xf0],0x0
  414cde:	lea    rcx,[rip+0x3052b]        # 445210 <_IO_stdin_used@@Base+0x17210>
  414ce5:	mov    edx,0x273
  414cea:	lea    rsi,[rip+0x2e487]        # 443178 <_IO_stdin_used@@Base+0x15178>
  414cf1:	lea    rdi,[rip+0x2deed]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  414cf8:	call   405300 <__assert_fail@plt>
  414cfd:	nop    DWORD PTR [rax]
  414d00:	endbr64 
  414d04:	push   r13
  414d06:	xor    eax,eax
  414d08:	mov    r13d,ecx
  414d0b:	push   r12
  414d0d:	mov    r12,rdx
  414d10:	mov    edx,r8d
  414d13:	push   rbp
  414d14:	mov    rbp,rsi
  414d17:	lea    rsi,[rip+0x2f4d2]        # 4441f0 <_IO_stdin_used@@Base+0x161f0>
  414d1e:	push   rbx
  414d1f:	mov    rbx,rdi
  414d22:	sub    rsp,0x8
  414d26:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414d2b:	lea    rsi,[rip+0x2e1ca]        # 442efc <_IO_stdin_used@@Base+0x14efc>
  414d32:	mov    rdi,rbx
  414d35:	xor    eax,eax
  414d37:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414d3c:	inc    DWORD PTR [rbx+0xf0]
  414d42:	lea    rdx,[rbp+0x18]
  414d46:	lea    rsi,[rbp+0x10]
  414d4a:	mov    r8d,r13d
  414d4d:	mov    rcx,r12
  414d50:	mov    rdi,rbx
  414d53:	call   413cc0 <__flatcc_fb_gen_c_verifier@@Base+0x22f0>
  414d58:	mov    eax,DWORD PTR [rbx+0xf0]
  414d5e:	test   eax,eax
  414d60:	je     414d8c <__flatcc_fb_gen_c_verifier@@Base+0x33bc>
  414d62:	dec    eax
  414d64:	mov    DWORD PTR [rbx+0xf0],eax
  414d6a:	mov    rdi,rbx
  414d6d:	lea    rsi,[rip+0x2dfcd]        # 442d41 <_IO_stdin_used@@Base+0x14d41>
  414d74:	xor    eax,eax
  414d76:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414d7b:	inc    DWORD PTR [rbx+0xf0]
  414d81:	add    rsp,0x8
  414d85:	pop    rbx
  414d86:	pop    rbp
  414d87:	pop    r12
  414d89:	pop    r13
  414d8b:	ret    
  414d8c:	lea    rcx,[rip+0x3049d]        # 445230 <_IO_stdin_used@@Base+0x17230>
  414d93:	mov    edx,0x2a3
  414d98:	lea    rsi,[rip+0x2e3d9]        # 443178 <_IO_stdin_used@@Base+0x15178>
  414d9f:	lea    rdi,[rip+0x2de3f]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  414da6:	call   405300 <__assert_fail@plt>
  414dab:	nop    DWORD PTR [rax+rax*1+0x0]
  414db0:	push   r14
  414db2:	push   r13
  414db4:	push   r12
  414db6:	push   rbp
  414db7:	push   rbx
  414db8:	test   rdi,rdi
  414dbb:	je     414f40 <__flatcc_fb_gen_c_verifier@@Base+0x3570>
  414dc1:	mov    rbx,rdi
  414dc4:	mov    rax,rdi
  414dc7:	xor    r8d,r8d
  414dca:	xor    ecx,ecx
  414dcc:	nop    DWORD PTR [rax+0x0]
  414dd0:	test   BYTE PTR [rax+0x70],0x4
  414dd4:	jne    414dec <__flatcc_fb_gen_c_verifier@@Base+0x341c>
  414dd6:	movzx  edx,WORD PTR [rax+0x28]
  414dda:	lea    edi,[rcx+0x1]
  414ddd:	sub    edx,0xe
  414de0:	cmp    dx,0x1
  414de4:	jbe    414f00 <__flatcc_fb_gen_c_verifier@@Base+0x3530>
  414dea:	mov    ecx,edi
  414dec:	mov    rax,QWORD PTR [rax]
  414def:	test   rax,rax
  414df2:	jne    414dd0 <__flatcc_fb_gen_c_verifier@@Base+0x3400>
  414df4:	mov    DWORD PTR [rsi],ecx
  414df6:	test   ecx,ecx
  414df8:	je     414f28 <__flatcc_fb_gen_c_verifier@@Base+0x3558>
  414dfe:	movsxd r12,ecx
  414e01:	mov    rbp,r12
  414e04:	movsxd rdi,r8d
  414e07:	shl    rbp,0x5
  414e0b:	add    rdi,rbp
  414e0e:	call   405380 <malloc@plt>
  414e13:	mov    r14,rax
  414e16:	test   rax,rax
  414e19:	je     414f28 <__flatcc_fb_gen_c_verifier@@Base+0x3558>
  414e1f:	lea    rcx,[rax+rbp*1]
  414e23:	xor    r8d,r8d
  414e26:	mov    rbp,rax
  414e29:	jmp    414e3f <__flatcc_fb_gen_c_verifier@@Base+0x346f>
  414e2b:	nop    DWORD PTR [rax+rax*1+0x0]
  414e30:	mov    rbp,rdi
  414e33:	mov    rbx,QWORD PTR [rbx]
  414e36:	test   rbx,rbx
  414e39:	je     414ed7 <__flatcc_fb_gen_c_verifier@@Base+0x3507>
  414e3f:	test   BYTE PTR [rbx+0x70],0x4
  414e43:	jne    414e33 <__flatcc_fb_gen_c_verifier@@Base+0x3463>
  414e45:	mov    rax,QWORD PTR [rbx+0x8]
  414e49:	lea    rdi,[rbp+0x20]
  414e4d:	mov    rsi,QWORD PTR [rax]
  414e50:	mov    rdx,QWORD PTR [rax+0x8]
  414e54:	movzx  eax,WORD PTR [rbx+0x28]
  414e58:	mov    QWORD PTR [rbp+0x0],rsi
  414e5c:	sub    eax,0xe
  414e5f:	mov    DWORD PTR [rbp+0x8],edx
  414e62:	mov    QWORD PTR [rbp+0x10],rbx
  414e66:	mov    DWORD PTR [rbp+0x18],0x0
  414e6d:	cmp    ax,0x1
  414e71:	ja     414e30 <__flatcc_fb_gen_c_verifier@@Base+0x3460>
  414e73:	mov    rax,QWORD PTR [rbx+0x18]
  414e77:	cmp    WORD PTR [rax+0x10],0x4
  414e7c:	jne    414e30 <__flatcc_fb_gen_c_verifier@@Base+0x3460>
  414e7e:	lea    eax,[rdx+0x5]
  414e81:	mov    QWORD PTR [rbx+0xa0],r8
  414e88:	mov    QWORD PTR [rbp+0x20],rcx
  414e8c:	mov    DWORD PTR [rbp+0x28],eax
  414e8f:	mov    rdi,rcx
  414e92:	lea    r13d,[r8+0x1]
  414e96:	call   405370 <memcpy@plt>
  414e9b:	mov    rcx,rax
  414e9e:	mov    rax,QWORD PTR [rbx+0x8]
  414ea2:	add    rbp,0x40
  414ea6:	add    rcx,QWORD PTR [rax+0x8]
  414eaa:	mov    eax,0x65
  414eaf:	mov    DWORD PTR [rcx],0x7079745f
  414eb5:	mov    WORD PTR [rcx+0x4],ax
  414eb9:	mov    QWORD PTR [rbp-0x10],rbx
  414ebd:	mov    DWORD PTR [rbp-0x8],0x1
  414ec4:	mov    rbx,QWORD PTR [rbx]
  414ec7:	add    rcx,0x6
  414ecb:	movsxd r8,r13d
  414ece:	test   rbx,rbx
  414ed1:	jne    414e3f <__flatcc_fb_gen_c_verifier@@Base+0x346f>
  414ed7:	mov    rsi,r12
  414eda:	mov    rdi,r14
  414edd:	lea    rcx,[rip+0xffffffffffffcf9c]        # 411e80 <__flatcc_fb_gen_c_verifier@@Base+0x4b0>
  414ee4:	mov    edx,0x20
  414ee9:	call   405280 <qsort@plt>
  414eee:	pop    rbx
  414eef:	pop    rbp
  414ef0:	pop    r12
  414ef2:	pop    r13
  414ef4:	mov    rax,r14
  414ef7:	pop    r14
  414ef9:	ret    
  414efa:	nop    WORD PTR [rax+rax*1+0x0]
  414f00:	mov    rdx,QWORD PTR [rax+0x18]
  414f04:	cmp    WORD PTR [rdx+0x10],0x4
  414f09:	jne    414dea <__flatcc_fb_gen_c_verifier@@Base+0x341a>
  414f0f:	mov    rdx,QWORD PTR [rax+0x8]
  414f13:	add    r8d,0x6
  414f17:	add    r8d,DWORD PTR [rdx+0x8]
  414f1b:	lea    edi,[rcx+0x2]
  414f1e:	jmp    414dea <__flatcc_fb_gen_c_verifier@@Base+0x341a>
  414f23:	nop    DWORD PTR [rax+rax*1+0x0]
  414f28:	pop    rbx
  414f29:	pop    rbp
  414f2a:	pop    r12
  414f2c:	xor    r14d,r14d
  414f2f:	pop    r13
  414f31:	mov    rax,r14
  414f34:	pop    r14
  414f36:	ret    
  414f37:	nop    WORD PTR [rax+rax*1+0x0]
  414f40:	mov    DWORD PTR [rsi],0x0
  414f46:	xor    r14d,r14d
  414f49:	mov    rax,r14
  414f4c:	pop    rbx
  414f4d:	pop    rbp
  414f4e:	pop    r12
  414f50:	pop    r13
  414f52:	pop    r14
  414f54:	ret    
  414f55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  414f60:	push   r12
  414f62:	vpxor  xmm0,xmm0,xmm0
  414f66:	push   rbp
  414f67:	push   rbx
  414f68:	sub    rsp,0x130
  414f6f:	mov    rax,QWORD PTR fs:0x28
  414f78:	mov    QWORD PTR [rsp+0x128],rax
  414f80:	xor    eax,eax
  414f82:	cmp    WORD PTR [rsi+0x10],0x1
  414f87:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  414f8d:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  414f93:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  414f99:	jne    41529c <__flatcc_fb_gen_c_verifier@@Base+0x38cc>
  414f9f:	mov    rbp,rsi
  414fa2:	mov    rbx,rdi
  414fa5:	mov    rdi,QWORD PTR [rbp+0x28]
  414fa9:	lea    rsi,[rsp+0xc]
  414fae:	call   414db0 <__flatcc_fb_gen_c_verifier@@Base+0x33e0>
  414fb3:	mov    QWORD PTR [rsp+0x10],rax
  414fb8:	test   rax,rax
  414fbb:	je     415240 <__flatcc_fb_gen_c_verifier@@Base+0x3870>
  414fc1:	lea    rax,[rip+0xfffffffffffffd38]        # 414d00 <__flatcc_fb_gen_c_verifier@@Base+0x3330>
  414fc8:	lea    r12,[rsp+0x40]
  414fcd:	mov    QWORD PTR [rsp+0x18],rax
  414fd2:	lea    rax,[rip+0xffffffffffffd127]        # 412100 <__flatcc_fb_gen_c_verifier@@Base+0x730>
  414fd9:	mov    QWORD PTR [rsp+0x20],rax
  414fde:	mov    ecx,0x1d
  414fe3:	xor    eax,eax
  414fe5:	mov    rdi,r12
  414fe8:	rep stos QWORD PTR es:[rdi],rax
  414feb:	mov    rdi,QWORD PTR [rbp+0x18]
  414fef:	mov    rdx,r12
  414ff2:	mov    rsi,rbp
  414ff5:	mov    QWORD PTR [rsp+0x28],rbp
  414ffa:	mov    DWORD PTR [rsp+0x30],0x1
  415002:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  415007:	mov    rdx,r12
  41500a:	lea    rsi,[rip+0x2f227]        # 444238 <_IO_stdin_used@@Base+0x16238>
  415011:	mov    rdi,rbx
  415014:	xor    eax,eax
  415016:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41501b:	lea    rsi,[rip+0x2dce6]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  415022:	mov    rdi,rbx
  415025:	xor    eax,eax
  415027:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41502c:	inc    DWORD PTR [rbx+0xf0]
  415032:	lea    rsi,[rip+0x2ded6]        # 442f0f <_IO_stdin_used@@Base+0x14f0f>
  415039:	mov    rdi,rbx
  41503c:	xor    eax,eax
  41503e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415043:	mov    ecx,DWORD PTR [rsp+0xc]
  415047:	test   ecx,ecx
  415049:	jle    41508f <__flatcc_fb_gen_c_verifier@@Base+0x36bf>
  41504b:	lea    rsi,[rip+0x2dec7]        # 442f19 <_IO_stdin_used@@Base+0x14f19>
  415052:	mov    rdi,rbx
  415055:	xor    eax,eax
  415057:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41505c:	lea    rsi,[rip+0x2ded0]        # 442f33 <_IO_stdin_used@@Base+0x14f33>
  415063:	mov    rdi,rbx
  415066:	xor    eax,eax
  415068:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41506d:	lea    rsi,[rip+0x2dd8a]        # 442dfe <_IO_stdin_used@@Base+0x14dfe>
  415074:	mov    rdi,rbx
  415077:	xor    eax,eax
  415079:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41507e:	lea    rsi,[rip+0x2dd8b]        # 442e10 <_IO_stdin_used@@Base+0x14e10>
  415085:	mov    rdi,rbx
  415088:	xor    eax,eax
  41508a:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41508f:	lea    rsi,[rip+0x318c8]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  415096:	mov    rdi,rbx
  415099:	xor    eax,eax
  41509b:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4150a0:	lea    rsi,[rip+0x2f211]        # 4442b8 <_IO_stdin_used@@Base+0x162b8>
  4150a7:	mov    rdi,rbx
  4150aa:	xor    eax,eax
  4150ac:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4150b1:	lea    rsi,[rip+0x2dd91]        # 442e49 <_IO_stdin_used@@Base+0x14e49>
  4150b8:	mov    rdi,rbx
  4150bb:	xor    eax,eax
  4150bd:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4150c2:	mov    edx,DWORD PTR [rsp+0xc]
  4150c6:	inc    DWORD PTR [rbx+0xf0]
  4150cc:	test   edx,edx
  4150ce:	je     415210 <__flatcc_fb_gen_c_verifier@@Base+0x3840>
  4150d4:	lea    rsi,[rip+0x2f21d]        # 4442f8 <_IO_stdin_used@@Base+0x162f8>
  4150db:	mov    rdi,rbx
  4150de:	xor    eax,eax
  4150e0:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4150e5:	lea    rsi,[rip+0x2e16c]        # 443258 <_IO_stdin_used@@Base+0x15258>
  4150ec:	mov    rdi,rbx
  4150ef:	xor    eax,eax
  4150f1:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4150f6:	mov    eax,DWORD PTR [rsp+0xc]
  4150fa:	lea    rsi,[rsp+0x10]
  4150ff:	lea    ecx,[rax-0x1]
  415102:	xor    r8d,r8d
  415105:	xor    edx,edx
  415107:	mov    rdi,rbx
  41510a:	call   412560 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  41510f:	xor    eax,eax
  415111:	lea    rsi,[rip+0x2f218]        # 444330 <_IO_stdin_used@@Base+0x16330>
  415118:	mov    rdi,rbx
  41511b:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415120:	mov    eax,DWORD PTR [rbx+0xf0]
  415126:	test   eax,eax
  415128:	je     4152bb <__flatcc_fb_gen_c_verifier@@Base+0x38eb>
  41512e:	dec    eax
  415130:	mov    DWORD PTR [rbx+0xf0],eax
  415136:	lea    rsi,[rip+0x2dab4]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  41513d:	mov    rdi,rbx
  415140:	xor    eax,eax
  415142:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415147:	xor    eax,eax
  415149:	lea    rsi,[rip+0x2dc0a]        # 442d5a <_IO_stdin_used@@Base+0x14d5a>
  415150:	mov    rdi,rbx
  415153:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415158:	mov    eax,DWORD PTR [rsp+0xc]
  41515c:	test   eax,eax
  41515e:	jle    4151a4 <__flatcc_fb_gen_c_verifier@@Base+0x37d4>
  415160:	mov    eax,DWORD PTR [rbx+0xf0]
  415166:	mov    DWORD PTR [rbx+0xf0],0x0
  415170:	mov    DWORD PTR [rbx+0xf8],eax
  415176:	lea    rsi,[rip+0x2ddd6]        # 442f53 <_IO_stdin_used@@Base+0x14f53>
  41517d:	mov    rdi,rbx
  415180:	xor    eax,eax
  415182:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415187:	mov    eax,DWORD PTR [rbx+0xf8]
  41518d:	lea    rsi,[rip+0x2e44c]        # 4435e0 <_IO_stdin_used@@Base+0x155e0>
  415194:	mov    DWORD PTR [rbx+0xf0],eax
  41519a:	mov    rdi,rbx
  41519d:	xor    eax,eax
  41519f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4151a4:	mov    eax,DWORD PTR [rbx+0xf0]
  4151aa:	test   eax,eax
  4151ac:	je     4152da <__flatcc_fb_gen_c_verifier@@Base+0x390a>
  4151b2:	dec    eax
  4151b4:	mov    DWORD PTR [rbx+0xf0],eax
  4151ba:	lea    rsi,[rip+0x2da30]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  4151c1:	mov    rdi,rbx
  4151c4:	xor    eax,eax
  4151c6:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4151cb:	mov    rdi,rbx
  4151ce:	lea    rsi,[rip+0x31789]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4151d5:	xor    eax,eax
  4151d7:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4151dc:	mov    rdi,QWORD PTR [rsp+0x10]
  4151e1:	test   rdi,rdi
  4151e4:	je     4151eb <__flatcc_fb_gen_c_verifier@@Base+0x381b>
  4151e6:	call   405240 <free@plt>
  4151eb:	xor    eax,eax
  4151ed:	mov    rdx,QWORD PTR [rsp+0x128]
  4151f5:	xor    rdx,QWORD PTR fs:0x28
  4151fe:	jne    4152f9 <__flatcc_fb_gen_c_verifier@@Base+0x3929>
  415204:	add    rsp,0x130
  41520b:	pop    rbx
  41520c:	pop    rbp
  41520d:	pop    r12
  41520f:	ret    
  415210:	mov    rdi,rbx
  415213:	xor    eax,eax
  415215:	lea    rsi,[rip+0x2dd23]        # 442f3f <_IO_stdin_used@@Base+0x14f3f>
  41521c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415221:	lea    rsi,[rip+0x2dec0]        # 4430e8 <_IO_stdin_used@@Base+0x150e8>
  415228:	mov    rdi,rbx
  41522b:	xor    eax,eax
  41522d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415232:	jmp    41510f <__flatcc_fb_gen_c_verifier@@Base+0x373f>
  415237:	nop    WORD PTR [rax+rax*1+0x0]
  415240:	mov    esi,DWORD PTR [rsp+0xc]
  415244:	test   esi,esi
  415246:	jle    414fc1 <__flatcc_fb_gen_c_verifier@@Base+0x35f1>
  41524c:	mov    rax,QWORD PTR [rip+0x3cd95]        # 451fe8 <stderr@GLIBC_2.2.5>
  415253:	lea    rcx,[rip+0x2df1e]        # 443178 <_IO_stdin_used@@Base+0x15178>
  41525a:	mov    rdi,QWORD PTR [rax]
  41525d:	lea    rdx,[rip+0x2202f]        # 437293 <_IO_stdin_used@@Base+0x9293>
  415264:	mov    esi,0x1
  415269:	lea    r9,[rip+0x2e400]        # 443670 <_IO_stdin_used@@Base+0x15670>
  415270:	mov    r8d,0x517
  415276:	xor    eax,eax
  415278:	call   405400 <__fprintf_chk@plt>
  41527d:	lea    rcx,[rip+0x2ffbc]        # 445240 <_IO_stdin_used@@Base+0x17240>
  415284:	mov    edx,0x517
  415289:	lea    rsi,[rip+0x2dee8]        # 443178 <_IO_stdin_used@@Base+0x15178>
  415290:	lea    rdi,[rip+0x230c2]        # 438359 <_IO_stdin_used@@Base+0xa359>
  415297:	call   405300 <__assert_fail@plt>
  41529c:	lea    rcx,[rip+0x2ff9d]        # 445240 <_IO_stdin_used@@Base+0x17240>
  4152a3:	mov    edx,0x515
  4152a8:	lea    rsi,[rip+0x2dec9]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4152af:	lea    rdi,[rip+0x1b66a]        # 430920 <_IO_stdin_used@@Base+0x2920>
  4152b6:	call   405300 <__assert_fail@plt>
  4152bb:	lea    rcx,[rip+0x2ff7e]        # 445240 <_IO_stdin_used@@Base+0x17240>
  4152c2:	mov    edx,0x536
  4152c7:	lea    rsi,[rip+0x2deaa]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4152ce:	lea    rdi,[rip+0x2d910]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4152d5:	call   405300 <__assert_fail@plt>
  4152da:	lea    rcx,[rip+0x2ff5f]        # 445240 <_IO_stdin_used@@Base+0x17240>
  4152e1:	mov    edx,0x53f
  4152e6:	lea    rsi,[rip+0x2de8b]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4152ed:	lea    rdi,[rip+0x2d8f1]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4152f4:	call   405300 <__assert_fail@plt>
  4152f9:	call   4052d0 <__stack_chk_fail@plt>
  4152fe:	xchg   ax,ax
  415300:	push   r13
  415302:	vpxor  xmm0,xmm0,xmm0
  415306:	push   r12
  415308:	push   rbp
  415309:	push   rbx
  41530a:	sub    rsp,0x138
  415311:	mov    rax,QWORD PTR fs:0x28
  41531a:	mov    QWORD PTR [rsp+0x128],rax
  415322:	xor    eax,eax
  415324:	cmp    WORD PTR [rsi+0x10],0x0
  415329:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  41532f:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  415335:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  41533b:	jne    415943 <__flatcc_fb_gen_c_verifier@@Base+0x3f73>
  415341:	mov    rbp,rsi
  415344:	mov    rbx,rdi
  415347:	mov    rdi,QWORD PTR [rbp+0x28]
  41534b:	lea    rsi,[rsp+0xc]
  415350:	call   414db0 <__flatcc_fb_gen_c_verifier@@Base+0x33e0>
  415355:	mov    QWORD PTR [rsp+0x10],rax
  41535a:	test   rax,rax
  41535d:	je     415880 <__flatcc_fb_gen_c_verifier@@Base+0x3eb0>
  415363:	lea    rcx,[rip+0xfffffffffffff996]        # 414d00 <__flatcc_fb_gen_c_verifier@@Base+0x3330>
  41536a:	mov    QWORD PTR [rsp+0x18],rcx
  41536f:	lea    rcx,[rip+0xffffffffffffcd8a]        # 412100 <__flatcc_fb_gen_c_verifier@@Base+0x730>
  415376:	mov    QWORD PTR [rsp+0x20],rcx
  41537b:	mov    ecx,DWORD PTR [rsp+0xc]
  41537f:	mov    QWORD PTR [rsp+0x28],rbp
  415384:	mov    QWORD PTR [rsp+0x30],0x0
  41538d:	test   ecx,ecx
  41538f:	jle    4153c2 <__flatcc_fb_gen_c_verifier@@Base+0x39f2>
  415391:	dec    ecx
  415393:	shl    rcx,0x5
  415397:	lea    rdx,[rax+0x18]
  41539b:	lea    rsi,[rax+rcx*1+0x38]
  4153a0:	xor    eax,eax
  4153a2:	nop    WORD PTR [rax+rax*1+0x0]
  4153a8:	mov    r8d,DWORD PTR [rdx]
  4153ab:	xor    ecx,ecx
  4153ad:	test   r8d,r8d
  4153b0:	setne  cl
  4153b3:	add    rdx,0x20
  4153b7:	add    eax,ecx
  4153b9:	cmp    rsi,rdx
  4153bc:	jne    4153a8 <__flatcc_fb_gen_c_verifier@@Base+0x39d8>
  4153be:	mov    DWORD PTR [rsp+0x34],eax
  4153c2:	lea    r12,[rsp+0x40]
  4153c7:	xor    eax,eax
  4153c9:	mov    ecx,0x1d
  4153ce:	mov    rdi,r12
  4153d1:	rep stos QWORD PTR es:[rdi],rax
  4153d4:	mov    rdi,QWORD PTR [rbp+0x18]
  4153d8:	mov    rdx,r12
  4153db:	mov    rsi,rbp
  4153de:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  4153e3:	mov    rdx,r12
  4153e6:	lea    rsi,[rip+0x2ef83]        # 444370 <_IO_stdin_used@@Base+0x16370>
  4153ed:	mov    rdi,rbx
  4153f0:	xor    eax,eax
  4153f2:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4153f7:	lea    rsi,[rip+0x2d90a]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  4153fe:	mov    rdi,rbx
  415401:	xor    eax,eax
  415403:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415408:	inc    DWORD PTR [rbx+0xf0]
  41540e:	mov    rdi,rbx
  415411:	lea    rsi,[rip+0x2daf7]        # 442f0f <_IO_stdin_used@@Base+0x14f0f>
  415418:	xor    eax,eax
  41541a:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41541f:	mov    edi,DWORD PTR [rsp+0xc]
  415423:	test   edi,edi
  415425:	jle    41546b <__flatcc_fb_gen_c_verifier@@Base+0x3a9b>
  415427:	lea    rsi,[rip+0x2db05]        # 442f33 <_IO_stdin_used@@Base+0x14f33>
  41542e:	mov    rdi,rbx
  415431:	xor    eax,eax
  415433:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415438:	lea    rsi,[rip+0x2efb9]        # 4443f8 <_IO_stdin_used@@Base+0x163f8>
  41543f:	mov    rdi,rbx
  415442:	xor    eax,eax
  415444:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415449:	lea    rsi,[rip+0x2d9ae]        # 442dfe <_IO_stdin_used@@Base+0x14dfe>
  415450:	mov    rdi,rbx
  415453:	xor    eax,eax
  415455:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41545a:	lea    rsi,[rip+0x2d9af]        # 442e10 <_IO_stdin_used@@Base+0x14e10>
  415461:	mov    rdi,rbx
  415464:	xor    eax,eax
  415466:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41546b:	mov    esi,DWORD PTR [rsp+0x34]
  41546f:	test   esi,esi
  415471:	jne    415860 <__flatcc_fb_gen_c_verifier@@Base+0x3e90>
  415477:	lea    rsi,[rip+0x314e0]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  41547e:	mov    rdi,rbx
  415481:	xor    eax,eax
  415483:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415488:	lea    rsi,[rip+0x2d85e]        # 442ced <_IO_stdin_used@@Base+0x14ced>
  41548f:	mov    rdi,rbx
  415492:	xor    eax,eax
  415494:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415499:	mov    rdx,QWORD PTR [rbp+0xa8]
  4154a0:	lea    rsi,[rip+0x2ef79]        # 444420 <_IO_stdin_used@@Base+0x16420>
  4154a7:	mov    rdi,rbx
  4154aa:	xor    eax,eax
  4154ac:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4154b1:	movsxd rdx,DWORD PTR [rsp+0x34]
  4154b6:	test   edx,edx
  4154b8:	jne    415840 <__flatcc_fb_gen_c_verifier@@Base+0x3e70>
  4154be:	lea    rsi,[rip+0x2edf3]        # 4442b8 <_IO_stdin_used@@Base+0x162b8>
  4154c5:	mov    rdi,rbx
  4154c8:	xor    eax,eax
  4154ca:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4154cf:	lea    rsi,[rip+0x2d973]        # 442e49 <_IO_stdin_used@@Base+0x14e49>
  4154d6:	mov    rdi,rbx
  4154d9:	xor    eax,eax
  4154db:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4154e0:	inc    DWORD PTR [rbx+0xf0]
  4154e6:	lea    rsi,[rip+0x2ee0b]        # 4442f8 <_IO_stdin_used@@Base+0x162f8>
  4154ed:	mov    rdi,rbx
  4154f0:	xor    eax,eax
  4154f2:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4154f7:	mov    ecx,DWORD PTR [rsp+0xc]
  4154fb:	test   ecx,ecx
  4154fd:	jle    4157f8 <__flatcc_fb_gen_c_verifier@@Base+0x3e28>
  415503:	lea    rsi,[rip+0x2dd4e]        # 443258 <_IO_stdin_used@@Base+0x15258>
  41550a:	mov    rdi,rbx
  41550d:	xor    eax,eax
  41550f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415514:	mov    eax,DWORD PTR [rsp+0xc]
  415518:	lea    rsi,[rsp+0x10]
  41551d:	lea    ecx,[rax-0x1]
  415520:	xor    r8d,r8d
  415523:	xor    edx,edx
  415525:	mov    rdi,rbx
  415528:	call   412560 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  41552d:	xor    eax,eax
  41552f:	lea    rsi,[rip+0x2ef8a]        # 4444c0 <_IO_stdin_used@@Base+0x164c0>
  415536:	mov    rdi,rbx
  415539:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41553e:	mov    eax,DWORD PTR [rbx+0xf0]
  415544:	test   eax,eax
  415546:	je     4159a5 <__flatcc_fb_gen_c_verifier@@Base+0x3fd5>
  41554c:	dec    eax
  41554e:	mov    DWORD PTR [rbx+0xf0],eax
  415554:	lea    rsi,[rip+0x2d696]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  41555b:	mov    rdi,rbx
  41555e:	xor    eax,eax
  415560:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415565:	lea    rsi,[rip+0x2da1b]        # 442f87 <_IO_stdin_used@@Base+0x14f87>
  41556c:	mov    rdi,rbx
  41556f:	xor    eax,eax
  415571:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415576:	mov    edx,DWORD PTR [rsp+0xc]
  41557a:	xor    ebp,ebp
  41557c:	mov    r13d,0x1
  415582:	test   edx,edx
  415584:	jg     4155b3 <__flatcc_fb_gen_c_verifier@@Base+0x3be3>
  415586:	jmp    41569b <__flatcc_fb_gen_c_verifier@@Base+0x3ccb>
  41558b:	nop    DWORD PTR [rax+rax*1+0x0]
  415590:	lea    rsi,[rip+0x2ef69]        # 444500 <_IO_stdin_used@@Base+0x16500>
  415597:	mov    rdi,rbx
  41559a:	xor    eax,eax
  41559c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4155a1:	inc    DWORD PTR [rbx+0xf0]
  4155a7:	xor    r13d,r13d
  4155aa:	inc    rbp
  4155ad:	cmp    DWORD PTR [rsp+0xc],ebp
  4155b1:	jle    415620 <__flatcc_fb_gen_c_verifier@@Base+0x3c50>
  4155b3:	mov    rax,rbp
  4155b6:	shl    rax,0x5
  4155ba:	add    rax,QWORD PTR [rsp+0x10]
  4155bf:	mov    rax,QWORD PTR [rax+0x10]
  4155c3:	movzx  ecx,WORD PTR [rax+0x70]
  4155c7:	test   cl,0x4
  4155ca:	jne    4155aa <__flatcc_fb_gen_c_verifier@@Base+0x3bda>
  4155cc:	movzx  edi,WORD PTR [rax+0x28]
  4155d0:	xor    esi,esi
  4155d2:	lea    edx,[rdi-0xe]
  4155d5:	cmp    dx,0x1
  4155d9:	ja     4155ea <__flatcc_fb_gen_c_verifier@@Base+0x3c1a>
  4155db:	mov    rdx,QWORD PTR [rax+0x18]
  4155df:	xor    esi,esi
  4155e1:	cmp    WORD PTR [rdx+0x10],0x4
  4155e6:	sete   sil
  4155ea:	and    ch,0x1
  4155ed:	je     4155aa <__flatcc_fb_gen_c_verifier@@Base+0x3bda>
  4155ef:	mov    rdx,QWORD PTR [rax+0x88]
  4155f6:	sub    rdx,rsi
  4155f9:	test   r13d,r13d
  4155fc:	jne    415590 <__flatcc_fb_gen_c_verifier@@Base+0x3bc0>
  4155fe:	lea    rsi,[rip+0x2ef33]        # 444538 <_IO_stdin_used@@Base+0x16538>
  415605:	mov    rdi,rbx
  415608:	xor    eax,eax
  41560a:	inc    rbp
  41560d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415612:	cmp    DWORD PTR [rsp+0xc],ebp
  415616:	jg     4155b3 <__flatcc_fb_gen_c_verifier@@Base+0x3be3>
  415618:	nop    DWORD PTR [rax+rax*1+0x0]
  415620:	test   r13d,r13d
  415623:	jne    41569b <__flatcc_fb_gen_c_verifier@@Base+0x3ccb>
  415625:	mov    eax,DWORD PTR [rbx+0xf0]
  41562b:	test   eax,eax
  41562d:	je     415986 <__flatcc_fb_gen_c_verifier@@Base+0x3fb6>
  415633:	dec    eax
  415635:	mov    DWORD PTR [rbx+0xf0],eax
  41563b:	lea    rsi,[rip+0x2d6c4]        # 442d06 <_IO_stdin_used@@Base+0x14d06>
  415642:	mov    rdi,rbx
  415645:	xor    eax,eax
  415647:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41564c:	inc    DWORD PTR [rbx+0xf0]
  415652:	lea    rsi,[rip+0x2ef17]        # 444570 <_IO_stdin_used@@Base+0x16570>
  415659:	mov    rdi,rbx
  41565c:	xor    eax,eax
  41565e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415663:	xor    eax,eax
  415665:	lea    rsi,[rip+0x2d870]        # 442edc <_IO_stdin_used@@Base+0x14edc>
  41566c:	mov    rdi,rbx
  41566f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415674:	mov    eax,DWORD PTR [rbx+0xf0]
  41567a:	test   eax,eax
  41567c:	je     4158b5 <__flatcc_fb_gen_c_verifier@@Base+0x3ee5>
  415682:	dec    eax
  415684:	mov    DWORD PTR [rbx+0xf0],eax
  41568a:	lea    rsi,[rip+0x2d560]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  415691:	mov    rdi,rbx
  415694:	xor    eax,eax
  415696:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41569b:	mov    eax,DWORD PTR [rsp+0x34]
  41569f:	test   eax,eax
  4156a1:	jne    415820 <__flatcc_fb_gen_c_verifier@@Base+0x3e50>
  4156a7:	lea    rsi,[rip+0x2ef62]        # 444610 <_IO_stdin_used@@Base+0x16610>
  4156ae:	mov    rdi,rbx
  4156b1:	xor    eax,eax
  4156b3:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4156b8:	lea    rsi,[rip+0x2d69b]        # 442d5a <_IO_stdin_used@@Base+0x14d5a>
  4156bf:	mov    rdi,rbx
  4156c2:	xor    eax,eax
  4156c4:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4156c9:	mov    eax,DWORD PTR [rbx+0xf0]
  4156cf:	mov    DWORD PTR [rbx+0xf0],0x0
  4156d9:	mov    DWORD PTR [rbx+0xf8],eax
  4156df:	lea    rsi,[rip+0x2d86d]        # 442f53 <_IO_stdin_used@@Base+0x14f53>
  4156e6:	mov    rdi,rbx
  4156e9:	xor    eax,eax
  4156eb:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4156f0:	mov    eax,DWORD PTR [rbx+0xf8]
  4156f6:	lea    rsi,[rip+0x2dee3]        # 4435e0 <_IO_stdin_used@@Base+0x155e0>
  4156fd:	mov    DWORD PTR [rbx+0xf0],eax
  415703:	mov    rdi,rbx
  415706:	xor    eax,eax
  415708:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41570d:	mov    eax,DWORD PTR [rbx+0xf0]
  415713:	test   eax,eax
  415715:	je     415924 <__flatcc_fb_gen_c_verifier@@Base+0x3f54>
  41571b:	dec    eax
  41571d:	mov    DWORD PTR [rbx+0xf0],eax
  415723:	lea    rsi,[rip+0x2d4c7]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  41572a:	mov    rdi,rbx
  41572d:	xor    eax,eax
  41572f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415734:	lea    rsi,[rip+0x31223]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  41573b:	mov    rdi,rbx
  41573e:	xor    eax,eax
  415740:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415745:	mov    rdx,r12
  415748:	lea    rsi,[rip+0x2ef09]        # 444658 <_IO_stdin_used@@Base+0x16658>
  41574f:	mov    rdi,rbx
  415752:	xor    eax,eax
  415754:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415759:	lea    rsi,[rip+0x2d5a8]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  415760:	mov    rdi,rbx
  415763:	xor    eax,eax
  415765:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41576a:	inc    DWORD PTR [rbx+0xf0]
  415770:	xor    eax,eax
  415772:	mov    rdx,r12
  415775:	lea    rsi,[rip+0x2ef74]        # 4446f0 <_IO_stdin_used@@Base+0x166f0>
  41577c:	mov    rdi,rbx
  41577f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415784:	mov    eax,DWORD PTR [rbx+0xf0]
  41578a:	test   eax,eax
  41578c:	je     415967 <__flatcc_fb_gen_c_verifier@@Base+0x3f97>
  415792:	dec    eax
  415794:	mov    DWORD PTR [rbx+0xf0],eax
  41579a:	lea    rsi,[rip+0x2d450]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  4157a1:	mov    rdi,rbx
  4157a4:	xor    eax,eax
  4157a6:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4157ab:	mov    rdi,rbx
  4157ae:	lea    rsi,[rip+0x311a9]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4157b5:	xor    eax,eax
  4157b7:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4157bc:	mov    rdi,QWORD PTR [rsp+0x10]
  4157c1:	test   rdi,rdi
  4157c4:	je     4157cb <__flatcc_fb_gen_c_verifier@@Base+0x3dfb>
  4157c6:	call   405240 <free@plt>
  4157cb:	xor    eax,eax
  4157cd:	mov    rbx,QWORD PTR [rsp+0x128]
  4157d5:	xor    rbx,QWORD PTR fs:0x28
  4157de:	jne    415962 <__flatcc_fb_gen_c_verifier@@Base+0x3f92>
  4157e4:	add    rsp,0x138
  4157eb:	pop    rbx
  4157ec:	pop    rbp
  4157ed:	pop    r12
  4157ef:	pop    r13
  4157f1:	ret    
  4157f2:	nop    WORD PTR [rax+rax*1+0x0]
  4157f8:	mov    rdi,rbx
  4157fb:	xor    eax,eax
  4157fd:	lea    rsi,[rip+0x2d768]        # 442f6c <_IO_stdin_used@@Base+0x14f6c>
  415804:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415809:	lea    rsi,[rip+0x2d8d8]        # 4430e8 <_IO_stdin_used@@Base+0x150e8>
  415810:	mov    rdi,rbx
  415813:	xor    eax,eax
  415815:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41581a:	jmp    41552d <__flatcc_fb_gen_c_verifier@@Base+0x3b5d>
  41581f:	nop
  415820:	lea    rsi,[rip+0x2eda1]        # 4445c8 <_IO_stdin_used@@Base+0x165c8>
  415827:	mov    rdi,rbx
  41582a:	xor    eax,eax
  41582c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415831:	jmp    4156a7 <__flatcc_fb_gen_c_verifier@@Base+0x3cd7>
  415836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415840:	lea    rsi,[rip+0x2ec19]        # 444460 <_IO_stdin_used@@Base+0x16460>
  415847:	mov    rdi,rbx
  41584a:	xor    eax,eax
  41584c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415851:	jmp    4154be <__flatcc_fb_gen_c_verifier@@Base+0x3aee>
  415856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415860:	lea    rsi,[rip+0x2d6f4]        # 442f5b <_IO_stdin_used@@Base+0x14f5b>
  415867:	mov    rdi,rbx
  41586a:	xor    eax,eax
  41586c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415871:	jmp    415477 <__flatcc_fb_gen_c_verifier@@Base+0x3aa7>
  415876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415880:	mov    r9d,DWORD PTR [rsp+0xc]
  415885:	test   r9d,r9d
  415888:	jg     4158d4 <__flatcc_fb_gen_c_verifier@@Base+0x3f04>
  41588a:	lea    rax,[rip+0xfffffffffffff46f]        # 414d00 <__flatcc_fb_gen_c_verifier@@Base+0x3330>
  415891:	mov    QWORD PTR [rsp+0x18],rax
  415896:	lea    rax,[rip+0xffffffffffffc863]        # 412100 <__flatcc_fb_gen_c_verifier@@Base+0x730>
  41589d:	mov    QWORD PTR [rsp+0x28],rbp
  4158a2:	mov    QWORD PTR [rsp+0x20],rax
  4158a7:	mov    QWORD PTR [rsp+0x30],0x0
  4158b0:	jmp    4153c2 <__flatcc_fb_gen_c_verifier@@Base+0x39f2>
  4158b5:	lea    rcx,[rip+0x2f8f4]        # 4451b0 <_IO_stdin_used@@Base+0x171b0>
  4158bc:	mov    edx,0x5b5
  4158c1:	lea    rsi,[rip+0x2d8b0]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4158c8:	lea    rdi,[rip+0x2d316]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4158cf:	call   405300 <__assert_fail@plt>
  4158d4:	mov    rax,QWORD PTR [rip+0x3c70d]        # 451fe8 <stderr@GLIBC_2.2.5>
  4158db:	lea    rcx,[rip+0x2d896]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4158e2:	mov    rdi,QWORD PTR [rax]
  4158e5:	lea    rdx,[rip+0x219a7]        # 437293 <_IO_stdin_used@@Base+0x9293>
  4158ec:	mov    esi,0x1
  4158f1:	lea    r9,[rip+0x2dd78]        # 443670 <_IO_stdin_used@@Base+0x15670>
  4158f8:	mov    r8d,0x570
  4158fe:	xor    eax,eax
  415900:	call   405400 <__fprintf_chk@plt>
  415905:	lea    rcx,[rip+0x2f8a4]        # 4451b0 <_IO_stdin_used@@Base+0x171b0>
  41590c:	mov    edx,0x570
  415911:	lea    rsi,[rip+0x2d860]        # 443178 <_IO_stdin_used@@Base+0x15178>
  415918:	lea    rdi,[rip+0x22a3a]        # 438359 <_IO_stdin_used@@Base+0xa359>
  41591f:	call   405300 <__assert_fail@plt>
  415924:	lea    rcx,[rip+0x2f885]        # 4451b0 <_IO_stdin_used@@Base+0x171b0>
  41592b:	mov    edx,0x5c1
  415930:	lea    rsi,[rip+0x2d841]        # 443178 <_IO_stdin_used@@Base+0x15178>
  415937:	lea    rdi,[rip+0x2d2a7]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  41593e:	call   405300 <__assert_fail@plt>
  415943:	lea    rcx,[rip+0x2f866]        # 4451b0 <_IO_stdin_used@@Base+0x171b0>
  41594a:	mov    edx,0x56e
  41594f:	lea    rsi,[rip+0x2d822]        # 443178 <_IO_stdin_used@@Base+0x15178>
  415956:	lea    rdi,[rip+0x1a3eb]        # 42fd48 <_IO_stdin_used@@Base+0x1d48>
  41595d:	call   405300 <__assert_fail@plt>
  415962:	call   4052d0 <__stack_chk_fail@plt>
  415967:	lea    rcx,[rip+0x2f842]        # 4451b0 <_IO_stdin_used@@Base+0x171b0>
  41596e:	mov    edx,0x5c7
  415973:	lea    rsi,[rip+0x2d7fe]        # 443178 <_IO_stdin_used@@Base+0x15178>
  41597a:	lea    rdi,[rip+0x2d264]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  415981:	call   405300 <__assert_fail@plt>
  415986:	lea    rcx,[rip+0x2f823]        # 4451b0 <_IO_stdin_used@@Base+0x171b0>
  41598d:	mov    edx,0x5b2
  415992:	lea    rsi,[rip+0x2d7df]        # 443178 <_IO_stdin_used@@Base+0x15178>
  415999:	lea    rdi,[rip+0x2d245]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4159a0:	call   405300 <__assert_fail@plt>
  4159a5:	lea    rcx,[rip+0x2f804]        # 4451b0 <_IO_stdin_used@@Base+0x171b0>
  4159ac:	mov    edx,0x59e
  4159b1:	lea    rsi,[rip+0x2d7c0]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4159b8:	lea    rdi,[rip+0x2d226]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4159bf:	call   405300 <__assert_fail@plt>
  4159c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4159cf:	nop
  4159d0:	push   r12
  4159d2:	vpxor  xmm0,xmm0,xmm0
  4159d6:	push   rbp
  4159d7:	push   rbx
  4159d8:	sub    rsp,0x130
  4159df:	mov    rax,QWORD PTR fs:0x28
  4159e8:	mov    QWORD PTR [rsp+0x128],rax
  4159f0:	xor    eax,eax
  4159f2:	movzx  eax,WORD PTR [rsi+0x10]
  4159f6:	mov    DWORD PTR [rsp+0xc],0x0
  4159fe:	sub    eax,0x3
  415a01:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  415a07:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  415a0d:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  415a13:	cmp    ax,0x1
  415a17:	ja     415cc5 <__flatcc_fb_gen_c_verifier@@Base+0x42f5>
  415a1d:	mov    rbp,rsi
  415a20:	mov    rbx,rdi
  415a23:	mov    rdi,QWORD PTR [rbp+0x28]
  415a27:	lea    rsi,[rsp+0xc]
  415a2c:	call   414db0 <__flatcc_fb_gen_c_verifier@@Base+0x33e0>
  415a31:	mov    QWORD PTR [rsp+0x10],rax
  415a36:	test   rax,rax
  415a39:	je     415c40 <__flatcc_fb_gen_c_verifier@@Base+0x4270>
  415a3f:	lea    rax,[rip+0xffffffffffffe01a]        # 413a60 <__flatcc_fb_gen_c_verifier@@Base+0x2090>
  415a46:	lea    r12,[rsp+0x40]
  415a4b:	mov    QWORD PTR [rsp+0x18],rax
  415a50:	lea    rax,[rip+0xffffffffffffc6c9]        # 412120 <__flatcc_fb_gen_c_verifier@@Base+0x750>
  415a57:	mov    QWORD PTR [rsp+0x20],rax
  415a5c:	mov    ecx,0x1d
  415a61:	xor    eax,eax
  415a63:	mov    rdi,r12
  415a66:	rep stos QWORD PTR es:[rdi],rax
  415a69:	mov    rdi,QWORD PTR [rbp+0x18]
  415a6d:	mov    rdx,r12
  415a70:	mov    rsi,rbp
  415a73:	mov    QWORD PTR [rsp+0x28],rbp
  415a78:	mov    DWORD PTR [rsp+0x30],0x2
  415a80:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  415a85:	mov    rdx,r12
  415a88:	lea    rsi,[rip+0x2ecc1]        # 444750 <_IO_stdin_used@@Base+0x16750>
  415a8f:	mov    rdi,rbx
  415a92:	xor    eax,eax
  415a94:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415a99:	add    DWORD PTR [rbx+0xf0],0x2
  415aa0:	xor    eax,eax
  415aa2:	lea    rsi,[rip+0x2ed0f]        # 4447b8 <_IO_stdin_used@@Base+0x167b8>
  415aa9:	mov    rdi,rbx
  415aac:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415ab1:	mov    eax,DWORD PTR [rbx+0xf0]
  415ab7:	test   eax,eax
  415ab9:	je     415ca6 <__flatcc_fb_gen_c_verifier@@Base+0x42d6>
  415abf:	cmp    eax,0x1
  415ac2:	je     415c9c <__flatcc_fb_gen_c_verifier@@Base+0x42cc>
  415ac8:	sub    eax,0x2
  415acb:	mov    DWORD PTR [rbx+0xf0],eax
  415ad1:	lea    rsi,[rip+0x2d230]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  415ad8:	xor    eax,eax
  415ada:	mov    rdi,rbx
  415add:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415ae2:	mov    eax,DWORD PTR [rsp+0xc]
  415ae6:	inc    DWORD PTR [rbx+0xf0]
  415aec:	test   eax,eax
  415aee:	je     415be0 <__flatcc_fb_gen_c_verifier@@Base+0x4210>
  415af4:	lea    rsi,[rip+0x2d2e6]        # 442de1 <_IO_stdin_used@@Base+0x14de1>
  415afb:	mov    rdi,rbx
  415afe:	xor    eax,eax
  415b00:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415b05:	lea    rsi,[rip+0x2d2f2]        # 442dfe <_IO_stdin_used@@Base+0x14dfe>
  415b0c:	mov    rdi,rbx
  415b0f:	xor    eax,eax
  415b11:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415b16:	lea    rsi,[rip+0x2d2f3]        # 442e10 <_IO_stdin_used@@Base+0x14e10>
  415b1d:	mov    rdi,rbx
  415b20:	xor    eax,eax
  415b22:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415b27:	lea    rsi,[rip+0x30e30]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  415b2e:	mov    rdi,rbx
  415b31:	xor    eax,eax
  415b33:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415b38:	lea    rsi,[rip+0x2d719]        # 443258 <_IO_stdin_used@@Base+0x15258>
  415b3f:	mov    rdi,rbx
  415b42:	xor    eax,eax
  415b44:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415b49:	mov    eax,DWORD PTR [rsp+0xc]
  415b4d:	lea    rsi,[rsp+0x10]
  415b52:	lea    ecx,[rax-0x1]
  415b55:	xor    r8d,r8d
  415b58:	xor    edx,edx
  415b5a:	mov    rdi,rbx
  415b5d:	call   412560 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  415b62:	xor    eax,eax
  415b64:	lea    rsi,[rip+0x2d1ef]        # 442d5a <_IO_stdin_used@@Base+0x14d5a>
  415b6b:	mov    rdi,rbx
  415b6e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415b73:	mov    eax,DWORD PTR [rbx+0xf0]
  415b79:	test   eax,eax
  415b7b:	je     415ce9 <__flatcc_fb_gen_c_verifier@@Base+0x4319>
  415b81:	dec    eax
  415b83:	mov    DWORD PTR [rbx+0xf0],eax
  415b89:	lea    rsi,[rip+0x2d061]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  415b90:	mov    rdi,rbx
  415b93:	xor    eax,eax
  415b95:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415b9a:	mov    rdi,rbx
  415b9d:	lea    rsi,[rip+0x30dba]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  415ba4:	xor    eax,eax
  415ba6:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415bab:	mov    rdi,QWORD PTR [rsp+0x10]
  415bb0:	test   rdi,rdi
  415bb3:	je     415bba <__flatcc_fb_gen_c_verifier@@Base+0x41ea>
  415bb5:	call   405240 <free@plt>
  415bba:	xor    eax,eax
  415bbc:	mov    rdx,QWORD PTR [rsp+0x128]
  415bc4:	xor    rdx,QWORD PTR fs:0x28
  415bcd:	jne    415ce4 <__flatcc_fb_gen_c_verifier@@Base+0x4314>
  415bd3:	add    rsp,0x130
  415bda:	pop    rbx
  415bdb:	pop    rbp
  415bdc:	pop    r12
  415bde:	ret    
  415bdf:	nop
  415be0:	lea    rsi,[rip+0x2d3bd]        # 442fa4 <_IO_stdin_used@@Base+0x14fa4>
  415be7:	mov    rdi,rbx
  415bea:	xor    eax,eax
  415bec:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415bf1:	lea    rsi,[rip+0x2d3c6]        # 442fbe <_IO_stdin_used@@Base+0x14fbe>
  415bf8:	mov    rdi,rbx
  415bfb:	xor    eax,eax
  415bfd:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415c02:	xor    eax,eax
  415c04:	lea    rsi,[rip+0x2d1b9]        # 442dc4 <_IO_stdin_used@@Base+0x14dc4>
  415c0b:	mov    rdi,rbx
  415c0e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415c13:	mov    eax,DWORD PTR [rbx+0xf0]
  415c19:	test   eax,eax
  415c1b:	jne    415b81 <__flatcc_fb_gen_c_verifier@@Base+0x41b1>
  415c21:	lea    rcx,[rip+0x2f578]        # 4451a0 <_IO_stdin_used@@Base+0x171a0>
  415c28:	mov    edx,0x4f5
  415c2d:	lea    rsi,[rip+0x2d544]        # 443178 <_IO_stdin_used@@Base+0x15178>
  415c34:	lea    rdi,[rip+0x2cfaa]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  415c3b:	call   405300 <__assert_fail@plt>
  415c40:	mov    edx,DWORD PTR [rsp+0xc]
  415c44:	test   edx,edx
  415c46:	jle    415a3f <__flatcc_fb_gen_c_verifier@@Base+0x406f>
  415c4c:	mov    rax,QWORD PTR [rip+0x3c395]        # 451fe8 <stderr@GLIBC_2.2.5>
  415c53:	lea    rcx,[rip+0x2d51e]        # 443178 <_IO_stdin_used@@Base+0x15178>
  415c5a:	mov    rdi,QWORD PTR [rax]
  415c5d:	lea    rdx,[rip+0x2162f]        # 437293 <_IO_stdin_used@@Base+0x9293>
  415c64:	mov    esi,0x1
  415c69:	lea    r9,[rip+0x2da00]        # 443670 <_IO_stdin_used@@Base+0x15670>
  415c70:	mov    r8d,0x4e1
  415c76:	xor    eax,eax
  415c78:	call   405400 <__fprintf_chk@plt>
  415c7d:	lea    rcx,[rip+0x2f51c]        # 4451a0 <_IO_stdin_used@@Base+0x171a0>
  415c84:	mov    edx,0x4e1
  415c89:	lea    rsi,[rip+0x2d4e8]        # 443178 <_IO_stdin_used@@Base+0x15178>
  415c90:	lea    rdi,[rip+0x226c2]        # 438359 <_IO_stdin_used@@Base+0xa359>
  415c97:	call   405300 <__assert_fail@plt>
  415c9c:	mov    DWORD PTR [rbx+0xf0],0x0
  415ca6:	lea    rcx,[rip+0x2f4f3]        # 4451a0 <_IO_stdin_used@@Base+0x171a0>
  415cad:	mov    edx,0x4ef
  415cb2:	lea    rsi,[rip+0x2d4bf]        # 443178 <_IO_stdin_used@@Base+0x15178>
  415cb9:	lea    rdi,[rip+0x2cf25]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  415cc0:	call   405300 <__assert_fail@plt>
  415cc5:	lea    rcx,[rip+0x2f4d4]        # 4451a0 <_IO_stdin_used@@Base+0x171a0>
  415ccc:	mov    edx,0x4de
  415cd1:	lea    rsi,[rip+0x2d4a0]        # 443178 <_IO_stdin_used@@Base+0x15178>
  415cd8:	lea    rdi,[rip+0x1a9c9]        # 4306a8 <_IO_stdin_used@@Base+0x26a8>
  415cdf:	call   405300 <__assert_fail@plt>
  415ce4:	call   4052d0 <__stack_chk_fail@plt>
  415ce9:	lea    rcx,[rip+0x2f4b0]        # 4451a0 <_IO_stdin_used@@Base+0x171a0>
  415cf0:	mov    edx,0x4fe
  415cf5:	lea    rsi,[rip+0x2d47c]        # 443178 <_IO_stdin_used@@Base+0x15178>
  415cfc:	lea    rdi,[rip+0x2cee2]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  415d03:	call   405300 <__assert_fail@plt>
  415d08:	nop    DWORD PTR [rax+rax*1+0x0]
  415d10:	endbr64 
  415d14:	cmp    WORD PTR [rsi+0x10],0x4
  415d19:	ja     415df0 <__flatcc_fb_gen_c_verifier@@Base+0x4420>
  415d1f:	push   r14
  415d21:	push   r13
  415d23:	push   r12
  415d25:	mov    r12,rdi
  415d28:	push   rbp
  415d29:	mov    rbp,rsi
  415d2c:	push   rbx
  415d2d:	mov    rax,QWORD PTR [rdi+0x48]
  415d31:	mov    rsi,QWORD PTR [rsi+0x20]
  415d35:	lea    rdi,[rax+0x128]
  415d3c:	call   41b8b0 <ptr_set_find_item@@Base>
  415d41:	test   rax,rax
  415d44:	je     415de7 <__flatcc_fb_gen_c_verifier@@Base+0x4417>
  415d4a:	mov    r13,QWORD PTR [r12+0x40]
  415d4f:	mov    eax,DWORD PTR [r12]
  415d53:	mov    rcx,r13
  415d56:	test   eax,eax
  415d58:	je     415d98 <__flatcc_fb_gen_c_verifier@@Base+0x43c8>
  415d5a:	mov    rax,QWORD PTR [rbp+0x18]
  415d5e:	mov    r14,QWORD PTR [rax]
  415d61:	test   r14,r14
  415d64:	je     415d98 <__flatcc_fb_gen_c_verifier@@Base+0x43c8>
  415d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415d70:	mov    rax,QWORD PTR [r14+0x8]
  415d74:	mov    rdi,rcx
  415d77:	movsxd rbx,DWORD PTR [rax+0x8]
  415d7b:	mov    rsi,QWORD PTR [rax]
  415d7e:	mov    rdx,rbx
  415d81:	call   405370 <memcpy@plt>
  415d86:	add    rbx,rax
  415d89:	mov    BYTE PTR [rbx],0x2e
  415d8c:	lea    rcx,[rbx+0x1]
  415d90:	mov    r14,QWORD PTR [r14]
  415d93:	test   r14,r14
  415d96:	jne    415d70 <__flatcc_fb_gen_c_verifier@@Base+0x43a0>
  415d98:	mov    rax,QWORD PTR [rbp+0x8]
  415d9c:	mov    rdi,rcx
  415d9f:	movsxd rbx,DWORD PTR [rax+0x8]
  415da3:	mov    rsi,QWORD PTR [rax]
  415da6:	mov    rdx,rbx
  415da9:	call   405370 <memcpy@plt>
  415dae:	mov    rcx,rax
  415db1:	add    rcx,rbx
  415db4:	mov    BYTE PTR [rcx],0x0
  415db7:	inc    rcx
  415dba:	mov    QWORD PTR [r12+0x40],rcx
  415dbf:	movzx  eax,WORD PTR [rbp+0x10]
  415dc3:	cmp    ax,0x1
  415dc7:	jbe    415df8 <__flatcc_fb_gen_c_verifier@@Base+0x4428>
  415dc9:	sub    eax,0x3
  415dcc:	cmp    ax,0x1
  415dd0:	ja     415de7 <__flatcc_fb_gen_c_verifier@@Base+0x4417>
  415dd2:	mov    rax,QWORD PTR [r12+0x38]
  415dd7:	mov    QWORD PTR [rax],rbp
  415dda:	mov    QWORD PTR [rax+0x8],r13
  415dde:	add    rax,0x10
  415de2:	mov    QWORD PTR [r12+0x38],rax
  415de7:	pop    rbx
  415de8:	pop    rbp
  415de9:	pop    r12
  415deb:	pop    r13
  415ded:	pop    r14
  415def:	ret    
  415df0:	ret    
  415df1:	nop    DWORD PTR [rax+0x0]
  415df8:	mov    rax,QWORD PTR [r12+0x30]
  415dfd:	mov    QWORD PTR [rax],rbp
  415e00:	mov    QWORD PTR [rax+0x8],r13
  415e04:	add    rax,0x10
  415e08:	mov    QWORD PTR [r12+0x30],rax
  415e0d:	pop    rbx
  415e0e:	pop    rbp
  415e0f:	pop    r12
  415e11:	pop    r13
  415e13:	pop    r14
  415e15:	ret    
  415e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415e20:	endbr64 
  415e24:	movzx  eax,WORD PTR [rsi+0x10]
  415e28:	sub    eax,0x3
  415e2b:	cmp    eax,0x1
  415e2e:	jbe    415e38 <__flatcc_fb_gen_c_verifier@@Base+0x4468>
  415e30:	ret    
  415e31:	nop    DWORD PTR [rax+0x0]
  415e38:	push   rbx
  415e39:	mov    rbx,rdi
  415e3c:	mov    rax,QWORD PTR [rdi+0x8]
  415e40:	mov    rsi,QWORD PTR [rsi+0x20]
  415e44:	lea    rdi,[rax+0x128]
  415e4b:	call   41b8b0 <ptr_set_find_item@@Base>
  415e50:	test   rax,rax
  415e53:	je     415e57 <__flatcc_fb_gen_c_verifier@@Base+0x4487>
  415e55:	inc    DWORD PTR [rbx]
  415e57:	pop    rbx
  415e58:	ret    
  415e59:	nop    DWORD PTR [rax+0x0]
  415e60:	endbr64 
  415e64:	movzx  eax,WORD PTR [rsi+0x10]
  415e68:	sub    eax,0x3
  415e6b:	cmp    eax,0x1
  415e6e:	jbe    415e78 <__flatcc_fb_gen_c_verifier@@Base+0x44a8>
  415e70:	ret    
  415e71:	nop    DWORD PTR [rax+0x0]
  415e78:	push   rbp
  415e79:	mov    rbp,rdi
  415e7c:	push   rbx
  415e7d:	mov    rbx,rsi
  415e80:	sub    rsp,0x8
  415e84:	mov    rax,QWORD PTR [rdi+0x8]
  415e88:	mov    rsi,QWORD PTR [rsi+0x20]
  415e8c:	lea    rdi,[rax+0x128]
  415e93:	call   41b8b0 <ptr_set_find_item@@Base>
  415e98:	test   rax,rax
  415e9b:	je     415ebe <__flatcc_fb_gen_c_verifier@@Base+0x44ee>
  415e9d:	mov    rdx,QWORD PTR [rbx+0x8]
  415ea1:	mov    rax,QWORD PTR [rbp+0x10]
  415ea5:	mov    rcx,QWORD PTR [rdx]
  415ea8:	mov    rdx,QWORD PTR [rdx+0x8]
  415eac:	mov    QWORD PTR [rax],rcx
  415eaf:	mov    DWORD PTR [rax+0x8],edx
  415eb2:	mov    QWORD PTR [rax+0x10],rbx
  415eb6:	add    rax,0x20
  415eba:	mov    QWORD PTR [rbp+0x10],rax
  415ebe:	add    rsp,0x8
  415ec2:	pop    rbx
  415ec3:	pop    rbp
  415ec4:	ret    
  415ec5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415ed0:	endbr64 
  415ed4:	cmp    WORD PTR [rsi+0x10],0x4
  415ed9:	ja     415f70 <__flatcc_fb_gen_c_verifier@@Base+0x45a0>
  415edf:	push   rbp
  415ee0:	mov    rbp,rdi
  415ee3:	push   rbx
  415ee4:	mov    rbx,rsi
  415ee7:	sub    rsp,0x8
  415eeb:	mov    rax,QWORD PTR [rdi+0x48]
  415eef:	mov    rsi,QWORD PTR [rsi+0x20]
  415ef3:	lea    rdi,[rax+0x128]
  415efa:	call   41b8b0 <ptr_set_find_item@@Base>
  415eff:	test   rax,rax
  415f02:	je     415f60 <__flatcc_fb_gen_c_verifier@@Base+0x4590>
  415f04:	mov    eax,DWORD PTR [rbp+0x0]
  415f07:	xor    edx,edx
  415f09:	test   eax,eax
  415f0b:	je     415f35 <__flatcc_fb_gen_c_verifier@@Base+0x4565>
  415f0d:	mov    rax,QWORD PTR [rbx+0x18]
  415f11:	mov    rax,QWORD PTR [rax]
  415f14:	test   rax,rax
  415f17:	je     415f35 <__flatcc_fb_gen_c_verifier@@Base+0x4565>
  415f19:	nop    DWORD PTR [rax+0x0]
  415f20:	mov    rcx,QWORD PTR [rax+0x8]
  415f24:	mov    rax,QWORD PTR [rax]
  415f27:	mov    rcx,QWORD PTR [rcx+0x8]
  415f2b:	lea    rdx,[rdx+rcx*1+0x1]
  415f30:	test   rax,rax
  415f33:	jne    415f20 <__flatcc_fb_gen_c_verifier@@Base+0x4550>
  415f35:	mov    rcx,QWORD PTR [rbx+0x8]
  415f39:	mov    rax,QWORD PTR [rbp+0x10]
  415f3d:	add    rax,QWORD PTR [rcx+0x8]
  415f41:	lea    rax,[rdx+rax*1+0x1]
  415f46:	mov    QWORD PTR [rbp+0x10],rax
  415f4a:	movzx  eax,WORD PTR [rbx+0x10]
  415f4e:	cmp    ax,0x1
  415f52:	jbe    415f78 <__flatcc_fb_gen_c_verifier@@Base+0x45a8>
  415f54:	sub    eax,0x3
  415f57:	cmp    ax,0x1
  415f5b:	ja     415f60 <__flatcc_fb_gen_c_verifier@@Base+0x4590>
  415f5d:	inc    DWORD PTR [rbp+0x8]
  415f60:	add    rsp,0x8
  415f64:	pop    rbx
  415f65:	pop    rbp
  415f66:	ret    
  415f67:	nop    WORD PTR [rax+rax*1+0x0]
  415f70:	ret    
  415f71:	nop    DWORD PTR [rax+0x0]
  415f78:	inc    DWORD PTR [rbp+0x4]
  415f7b:	add    rsp,0x8
  415f7f:	pop    rbx
  415f80:	pop    rbp
  415f81:	ret    
  415f82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415f8d:	nop    DWORD PTR [rax]

0000000000415f90 <__flatcc_fb_gen_c_json_parser@@Base>:
  415f90:	endbr64 
  415f94:	push   r15
  415f96:	lea    rsi,[rip+0x2d031]        # 442fce <_IO_stdin_used@@Base+0x14fce>
  415f9d:	push   r14
  415f9f:	push   r13
  415fa1:	push   r12
  415fa3:	push   rbp
  415fa4:	push   rbx
  415fa5:	mov    rbx,rdi
  415fa8:	sub    rsp,0x198
  415faf:	mov    rax,QWORD PTR fs:0x28
  415fb8:	mov    QWORD PTR [rsp+0x188],rax
  415fc0:	xor    eax,eax
  415fc2:	mov    rax,QWORD PTR [rdi+0xd8]
  415fc9:	mov    rdx,QWORD PTR [rax+0x118]
  415fd0:	xor    eax,eax
  415fd2:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415fd7:	mov    rax,QWORD PTR [rbx+0xd8]
  415fde:	lea    rsi,[rip+0x2d002]        # 442fe7 <_IO_stdin_used@@Base+0x14fe7>
  415fe5:	mov    rdx,QWORD PTR [rax+0x118]
  415fec:	mov    rdi,rbx
  415fef:	xor    eax,eax
  415ff1:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415ff6:	lea    rsi,[rip+0x30961]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  415ffd:	mov    rdi,rbx
  416000:	xor    eax,eax
  416002:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416007:	lea    rsi,[rip+0x2e7e2]        # 4447f0 <_IO_stdin_used@@Base+0x167f0>
  41600e:	mov    rdi,rbx
  416011:	xor    eax,eax
  416013:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416018:	lea    rsi,[rip+0x3093f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  41601f:	mov    rdi,rbx
  416022:	xor    eax,eax
  416024:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416029:	xor    eax,eax
  41602b:	lea    rsi,[rip+0x2e80e]        # 444840 <_IO_stdin_used@@Base+0x16840>
  416032:	mov    rdi,rbx
  416035:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41603a:	lea    rdx,[rip+0x2cfb0]        # 442ff1 <_IO_stdin_used@@Base+0x14ff1>
  416041:	lea    rsi,[rip+0x19a35]        # 42fa7d <_IO_stdin_used@@Base+0x1a7d>
  416048:	mov    rdi,rbx
  41604b:	call   407120 <__flatcc_fb_gen_c_includes@@Base>
  416050:	mov    rax,QWORD PTR [rbx+0xe0]
  416057:	mov    edx,DWORD PTR [rax+0xac]
  41605d:	test   edx,edx
  41605f:	jne    416d50 <__flatcc_fb_gen_c_json_parser@@Base+0xdc0>
  416065:	lea    rsi,[rip+0x308f2]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  41606c:	mov    rdi,rbx
  41606f:	xor    eax,eax
  416071:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416076:	mov    rdx,QWORD PTR [rbx+0xd8]
  41607d:	lea    rbp,[rsp+0xa0]
  416085:	mov    rsi,QWORD PTR [rdx+0x58]
  416089:	mov    ecx,0x1d
  41608e:	xor    eax,eax
  416090:	mov    rdi,rbp
  416093:	rep stos QWORD PTR es:[rdi],rax
  416096:	test   rsi,rsi
  416099:	je     4160a6 <__flatcc_fb_gen_c_json_parser@@Base+0x116>
  41609b:	cmp    WORD PTR [rsi+0x10],0x1
  4160a0:	jbe    416de0 <__flatcc_fb_gen_c_json_parser@@Base+0xe50>
  4160a6:	mov    r12,QWORD PTR [rdx+0x40]
  4160aa:	test   r12,r12
  4160ad:	je     416248 <__flatcc_fb_gen_c_json_parser@@Base+0x2b8>
  4160b3:	lea    r13,[rip+0x2ea7e]        # 444b38 <_IO_stdin_used@@Base+0x16b38>
  4160ba:	jmp    41615b <__flatcc_fb_gen_c_json_parser@@Base+0x1cb>
  4160bf:	nop
  4160c0:	cmp    ax,0x4
  4160c4:	jne    41614e <__flatcc_fb_gen_c_json_parser@@Base+0x1be>
  4160ca:	mov    rdi,QWORD PTR [r12+0x18]
  4160cf:	mov    rdx,rbp
  4160d2:	mov    rsi,r12
  4160d5:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  4160da:	mov    rdx,rbp
  4160dd:	lea    rsi,[rip+0x2e98c]        # 444a70 <_IO_stdin_used@@Base+0x16a70>
  4160e4:	mov    rdi,rbx
  4160e7:	xor    eax,eax
  4160e9:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4160ee:	mov    rdx,rbp
  4160f1:	lea    rsi,[rip+0x2ea08]        # 444b00 <_IO_stdin_used@@Base+0x16b00>
  4160f8:	mov    rdi,rbx
  4160fb:	xor    eax,eax
  4160fd:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416102:	mov    rdx,rbp
  416105:	lea    rsi,[rip+0x2e644]        # 444750 <_IO_stdin_used@@Base+0x16750>
  41610c:	mov    rdi,rbx
  41610f:	xor    eax,eax
  416111:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416116:	add    DWORD PTR [rbx+0xf0],0x2
  41611d:	xor    eax,eax
  41611f:	lea    rsi,[rip+0x2d1d2]        # 4432f8 <_IO_stdin_used@@Base+0x152f8>
  416126:	mov    rdi,rbx
  416129:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41612e:	mov    eax,DWORD PTR [rbx+0xf0]
  416134:	test   eax,eax
  416136:	je     416f6a <__flatcc_fb_gen_c_json_parser@@Base+0xfda>
  41613c:	cmp    eax,0x1
  41613f:	je     416f60 <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
  416145:	sub    eax,0x2
  416148:	mov    DWORD PTR [rbx+0xf0],eax
  41614e:	mov    r12,QWORD PTR [r12]
  416152:	test   r12,r12
  416155:	je     416241 <__flatcc_fb_gen_c_json_parser@@Base+0x2b1>
  41615b:	movzx  eax,WORD PTR [r12+0x10]
  416161:	cmp    ax,0x1
  416165:	je     416200 <__flatcc_fb_gen_c_json_parser@@Base+0x270>
  41616b:	test   ax,ax
  41616e:	je     416898 <__flatcc_fb_gen_c_json_parser@@Base+0x908>
  416174:	cmp    ax,0x3
  416178:	jne    4160c0 <__flatcc_fb_gen_c_json_parser@@Base+0x130>
  41617e:	mov    rdi,QWORD PTR [r12+0x18]
  416183:	mov    rdx,rbp
  416186:	mov    rsi,r12
  416189:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  41618e:	mov    rdx,rbp
  416191:	lea    rsi,[rip+0x2e5b8]        # 444750 <_IO_stdin_used@@Base+0x16750>
  416198:	mov    rdi,rbx
  41619b:	xor    eax,eax
  41619d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4161a2:	add    DWORD PTR [rbx+0xf0],0x2
  4161a9:	xor    eax,eax
  4161ab:	mov    rdx,rbp
  4161ae:	lea    rsi,[rip+0x2d143]        # 4432f8 <_IO_stdin_used@@Base+0x152f8>
  4161b5:	mov    rdi,rbx
  4161b8:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4161bd:	mov    eax,DWORD PTR [rbx+0xf0]
  4161c3:	test   eax,eax
  4161c5:	je     4161da <__flatcc_fb_gen_c_json_parser@@Base+0x24a>
  4161c7:	cmp    eax,0x1
  4161ca:	jne    416145 <__flatcc_fb_gen_c_json_parser@@Base+0x1b5>
  4161d0:	mov    DWORD PTR [rbx+0xf0],0x0
  4161da:	lea    rcx,[rip+0x2f12f]        # 445310 <_IO_stdin_used@@Base+0x17310>
  4161e1:	mov    edx,0x6d3
  4161e6:	lea    rsi,[rip+0x2cf8b]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4161ed:	lea    rdi,[rip+0x2c9f1]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4161f4:	call   405300 <__assert_fail@plt>
  4161f9:	nop    DWORD PTR [rax+0x0]
  416200:	mov    rdi,QWORD PTR [r12+0x18]
  416205:	mov    rsi,r12
  416208:	mov    rdx,rbp
  41620b:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  416210:	mov    rdx,rbp
  416213:	mov    rsi,r13
  416216:	mov    rdi,rbx
  416219:	xor    eax,eax
  41621b:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416220:	mov    rdx,rbp
  416223:	lea    rsi,[rip+0x2e98e]        # 444bb8 <_IO_stdin_used@@Base+0x16bb8>
  41622a:	mov    rdi,rbx
  41622d:	xor    eax,eax
  41622f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416234:	mov    r12,QWORD PTR [r12]
  416238:	test   r12,r12
  41623b:	jne    41615b <__flatcc_fb_gen_c_json_parser@@Base+0x1cb>
  416241:	mov    rdx,QWORD PTR [rbx+0xd8]
  416248:	mov    rdi,QWORD PTR [rdx+0x68]
  41624c:	lea    rsi,[rip+0xffffffffffffccad]        # 412f00 <__flatcc_fb_gen_c_verifier@@Base+0x1530>
  416253:	mov    rdx,rbx
  416256:	call   41d0f0 <fb_scope_table_visit@@Base>
  41625b:	mov    rax,QWORD PTR [rbx+0xd8]
  416262:	lea    rsi,[rip+0x2ea5f]        # 444cc8 <_IO_stdin_used@@Base+0x16cc8>
  416269:	mov    rdx,QWORD PTR [rax+0x110]
  416270:	mov    rdi,rbx
  416273:	xor    eax,eax
  416275:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41627a:	add    DWORD PTR [rbx+0xf0],0x2
  416281:	xor    eax,eax
  416283:	lea    rsi,[rip+0x2d06e]        # 4432f8 <_IO_stdin_used@@Base+0x152f8>
  41628a:	mov    rdi,rbx
  41628d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416292:	mov    eax,DWORD PTR [rbx+0xf0]
  416298:	test   eax,eax
  41629a:	je     416f93 <__flatcc_fb_gen_c_json_parser@@Base+0x1003>
  4162a0:	cmp    eax,0x1
  4162a3:	je     416f89 <__flatcc_fb_gen_c_json_parser@@Base+0xff9>
  4162a9:	sub    eax,0x2
  4162ac:	mov    DWORD PTR [rbx+0xf0],eax
  4162b2:	lea    rsi,[rip+0x306a5]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4162b9:	xor    eax,eax
  4162bb:	mov    rdi,rbx
  4162be:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4162c3:	mov    rax,QWORD PTR [rbx+0xd8]
  4162ca:	mov    r12,QWORD PTR [rax+0x40]
  4162ce:	test   r12,r12
  4162d1:	je     416353 <__flatcc_fb_gen_c_json_parser@@Base+0x3c3>
  4162d7:	xor    r13d,r13d
  4162da:	jmp    416319 <__flatcc_fb_gen_c_json_parser@@Base+0x389>
  4162dc:	nop    DWORD PTR [rax+0x0]
  4162e0:	cmp    ax,0x4
  4162e4:	jne    416310 <__flatcc_fb_gen_c_json_parser@@Base+0x380>
  4162e6:	mov    rsi,r12
  4162e9:	mov    rdi,rbx
  4162ec:	call   412f90 <__flatcc_fb_gen_c_verifier@@Base+0x15c0>
  4162f1:	mov    rsi,r12
  4162f4:	mov    rdi,rbx
  4162f7:	call   413510 <__flatcc_fb_gen_c_verifier@@Base+0x1b40>
  4162fc:	mov    rsi,r12
  4162ff:	mov    rdi,rbx
  416302:	call   4159d0 <__flatcc_fb_gen_c_verifier@@Base+0x4000>
  416307:	nop    WORD PTR [rax+rax*1+0x0]
  416310:	mov    r12,QWORD PTR [r12]
  416314:	test   r12,r12
  416317:	je     41634c <__flatcc_fb_gen_c_json_parser@@Base+0x3bc>
  416319:	movzx  eax,WORD PTR [r12+0x10]
  41631f:	cmp    ax,0x1
  416323:	je     4168e0 <__flatcc_fb_gen_c_json_parser@@Base+0x950>
  416329:	test   ax,ax
  41632c:	je     4168c8 <__flatcc_fb_gen_c_json_parser@@Base+0x938>
  416332:	cmp    ax,0x3
  416336:	jne    4162e0 <__flatcc_fb_gen_c_json_parser@@Base+0x350>
  416338:	mov    rsi,r12
  41633b:	mov    rdi,rbx
  41633e:	call   4159d0 <__flatcc_fb_gen_c_verifier@@Base+0x4000>
  416343:	mov    r12,QWORD PTR [r12]
  416347:	test   r12,r12
  41634a:	jne    416319 <__flatcc_fb_gen_c_json_parser@@Base+0x389>
  41634c:	mov    rax,QWORD PTR [rbx+0xd8]
  416353:	mov    rdi,QWORD PTR [rax+0x68]
  416357:	mov    rdx,rbx
  41635a:	lea    rsi,[rip+0xffffffffffffd36f]        # 4136d0 <__flatcc_fb_gen_c_verifier@@Base+0x1d00>
  416361:	call   41d0f0 <fb_scope_table_visit@@Base>
  416366:	mov    rdx,QWORD PTR [rbx+0xd8]
  41636d:	vpxor  xmm0,xmm0,xmm0
  416371:	mov    r15,QWORD PTR [rdx+0x68]
  416375:	lea    r14,[rsp+0x50]
  41637a:	vmovups XMMWORD PTR [rsp+0x54],xmm0
  416380:	lea    rsi,[rip+0xffffffffffffba79]        # 411e00 <__flatcc_fb_gen_c_verifier@@Base+0x430>
  416387:	vmovups XMMWORD PTR [r14+0x14],xmm0
  41638d:	vmovups XMMWORD PTR [r14+0x24],xmm0
  416393:	vmovups XMMWORD PTR [r14+0x34],xmm0
  416399:	mov    DWORD PTR [r14+0x44],0x0
  4163a1:	mov    rdi,r15
  4163a4:	mov    QWORD PTR [rsp+0x98],rdx
  4163ac:	mov    rdx,r14
  4163af:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  4163b5:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  4163bb:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4163c1:	mov    DWORD PTR [rsp+0x50],0x1
  4163c9:	call   41d0f0 <fb_scope_table_visit@@Base>
  4163ce:	movsxd rdi,DWORD PTR [rsp+0x54]
  4163d3:	mov    esi,0x10
  4163d8:	mov    DWORD PTR [rsp+0x1c],edi
  4163dc:	call   405340 <calloc@plt>
  4163e1:	movsxd rdi,DWORD PTR [rsp+0x58]
  4163e6:	mov    esi,0x10
  4163eb:	mov    r12,rax
  4163ee:	mov    DWORD PTR [rsp+0x10],edi
  4163f2:	mov    QWORD PTR [rsp+0x68],rax
  4163f7:	call   405340 <calloc@plt>
  4163fc:	mov    rsi,QWORD PTR [rsp+0x60]
  416401:	mov    r13,rax
  416404:	mov    rdi,rsi
  416407:	mov    QWORD PTR [rsp+0x8],rsi
  41640c:	mov    QWORD PTR [rsp+0x70],rax
  416411:	call   405380 <malloc@plt>
  416416:	test   r12,r12
  416419:	mov    QWORD PTR [rsp+0x78],rax
  41641e:	mov    QWORD PTR [rsp+0x80],r12
  416426:	mov    QWORD PTR [rsp+0x88],r13
  41642e:	mov    QWORD PTR [rsp+0x90],rax
  416436:	mov    rsi,QWORD PTR [rsp+0x8]
  41643b:	mov    ecx,DWORD PTR [rsp+0x10]
  41643f:	jne    41644d <__flatcc_fb_gen_c_json_parser@@Base+0x4bd>
  416441:	mov    edx,DWORD PTR [rsp+0x1c]
  416445:	test   edx,edx
  416447:	jg     4166a0 <__flatcc_fb_gen_c_json_parser@@Base+0x710>
  41644d:	test   r13,r13
  416450:	jne    41645a <__flatcc_fb_gen_c_json_parser@@Base+0x4ca>
  416452:	test   ecx,ecx
  416454:	jg     4166a0 <__flatcc_fb_gen_c_json_parser@@Base+0x710>
  41645a:	test   rax,rax
  41645d:	jne    416468 <__flatcc_fb_gen_c_json_parser@@Base+0x4d8>
  41645f:	test   rsi,rsi
  416462:	jne    4166a0 <__flatcc_fb_gen_c_json_parser@@Base+0x710>
  416468:	mov    rdx,r14
  41646b:	lea    rsi,[rip+0xffffffffffffb96e]        # 411de0 <__flatcc_fb_gen_c_verifier@@Base+0x410>
  416472:	mov    rdi,r15
  416475:	call   41d0f0 <fb_scope_table_visit@@Base>
  41647a:	mov    esi,DWORD PTR [rsp+0x54]
  41647e:	mov    rdi,QWORD PTR [rsp+0x68]
  416483:	call   411e20 <__flatcc_fb_gen_c_verifier@@Base+0x450>
  416488:	mov    esi,DWORD PTR [rsp+0x58]
  41648c:	mov    rdi,QWORD PTR [rsp+0x70]
  416491:	call   411e20 <__flatcc_fb_gen_c_verifier@@Base+0x450>
  416496:	mov    r13d,DWORD PTR [rsp+0x58]
  41649b:	test   r13d,r13d
  41649e:	je     416d90 <__flatcc_fb_gen_c_json_parser@@Base+0xe00>
  4164a4:	movsxd rax,r13d
  4164a7:	mov    rdi,rax
  4164aa:	shl    rdi,0x5
  4164ae:	mov    QWORD PTR [rsp+0x10],rax
  4164b3:	call   405380 <malloc@plt>
  4164b8:	mov    r15,rax
  4164bb:	test   rax,rax
  4164be:	je     416ef0 <__flatcc_fb_gen_c_json_parser@@Base+0xf60>
  4164c4:	test   r13d,r13d
  4164c7:	jle    41651a <__flatcc_fb_gen_c_json_parser@@Base+0x58a>
  4164c9:	dec    r13d
  4164cc:	inc    r13
  4164cf:	shl    r13,0x5
  4164d3:	mov    rdx,QWORD PTR [rsp+0x70]
  4164d8:	mov    r12,rax
  4164db:	add    r13,rax
  4164de:	xchg   ax,ax
  4164e0:	mov    rdi,QWORD PTR [rdx+0x8]
  4164e4:	mov    QWORD PTR [rsp+0x8],rdx
  4164e9:	mov    QWORD PTR [r12],rdi
  4164ed:	add    r12,0x20
  4164f1:	call   4052c0 <strlen@plt>
  4164f6:	mov    rdx,QWORD PTR [rsp+0x8]
  4164fb:	mov    DWORD PTR [r12-0x18],eax
  416500:	mov    rax,QWORD PTR [rdx]
  416503:	mov    DWORD PTR [r12-0x8],0x0
  41650c:	mov    QWORD PTR [r12-0x10],rax
  416511:	add    rdx,0x10
  416515:	cmp    r13,r12
  416518:	jne    4164e0 <__flatcc_fb_gen_c_json_parser@@Base+0x550>
  41651a:	mov    rsi,QWORD PTR [rsp+0x10]
  41651f:	lea    rcx,[rip+0xffffffffffffb95a]        # 411e80 <__flatcc_fb_gen_c_verifier@@Base+0x4b0>
  416526:	mov    edx,0x20
  41652b:	mov    rdi,r15
  41652e:	call   405280 <qsort@plt>
  416533:	mov    QWORD PTR [rsp+0x20],r15
  416538:	mov    r13d,DWORD PTR [rsp+0x58]
  41653d:	lea    rax,[rip+0xffffffffffffd65c]        # 413ba0 <__flatcc_fb_gen_c_verifier@@Base+0x21d0>
  416544:	mov    QWORD PTR [rsp+0x28],rax
  416549:	lea    rax,[rip+0xffffffffffffbbf0]        # 412140 <__flatcc_fb_gen_c_verifier@@Base+0x770>
  416550:	mov    QWORD PTR [rsp+0x30],rax
  416555:	mov    rax,QWORD PTR [rbx+0xd8]
  41655c:	lea    rsi,[rip+0x2e765]        # 444cc8 <_IO_stdin_used@@Base+0x16cc8>
  416563:	mov    rdx,QWORD PTR [rax+0x110]
  41656a:	mov    rdi,rbx
  41656d:	xor    eax,eax
  41656f:	mov    QWORD PTR [rsp+0x38],0x0
  416578:	mov    DWORD PTR [rsp+0x40],0x4
  416580:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416585:	add    DWORD PTR [rbx+0xf0],0x2
  41658c:	xor    eax,eax
  41658e:	lea    rsi,[rip+0x2d11b]        # 4436b0 <_IO_stdin_used@@Base+0x156b0>
  416595:	mov    rdi,rbx
  416598:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41659d:	mov    eax,DWORD PTR [rbx+0xf0]
  4165a3:	test   eax,eax
  4165a5:	je     416fbc <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
  4165ab:	cmp    eax,0x1
  4165ae:	je     416fb2 <__flatcc_fb_gen_c_json_parser@@Base+0x1022>
  4165b4:	sub    eax,0x2
  4165b7:	mov    DWORD PTR [rbx+0xf0],eax
  4165bd:	lea    rsi,[rip+0x2c744]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  4165c4:	mov    rdi,rbx
  4165c7:	xor    eax,eax
  4165c9:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4165ce:	inc    DWORD PTR [rbx+0xf0]
  4165d4:	test   r13d,r13d
  4165d7:	je     416ac8 <__flatcc_fb_gen_c_json_parser@@Base+0xb38>
  4165dd:	lea    rsi,[rip+0x2c7fd]        # 442de1 <_IO_stdin_used@@Base+0x14de1>
  4165e4:	mov    rdi,rbx
  4165e7:	xor    eax,eax
  4165e9:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4165ee:	lea    rsi,[rip+0x2c809]        # 442dfe <_IO_stdin_used@@Base+0x14dfe>
  4165f5:	mov    rdi,rbx
  4165f8:	xor    eax,eax
  4165fa:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4165ff:	lea    rsi,[rip+0x2c80a]        # 442e10 <_IO_stdin_used@@Base+0x14e10>
  416606:	mov    rdi,rbx
  416609:	xor    eax,eax
  41660b:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416610:	lea    rsi,[rip+0x30347]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  416617:	mov    rdi,rbx
  41661a:	xor    eax,eax
  41661c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416621:	xor    eax,eax
  416623:	lea    rsi,[rip+0x2cc2e]        # 443258 <_IO_stdin_used@@Base+0x15258>
  41662a:	mov    rdi,rbx
  41662d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416632:	lea    ecx,[r13-0x1]
  416636:	lea    rsi,[rsp+0x20]
  41663b:	xor    r8d,r8d
  41663e:	xor    edx,edx
  416640:	mov    rdi,rbx
  416643:	call   412560 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  416648:	xor    eax,eax
  41664a:	lea    rsi,[rip+0x2c709]        # 442d5a <_IO_stdin_used@@Base+0x14d5a>
  416651:	mov    rdi,rbx
  416654:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416659:	mov    eax,DWORD PTR [rbx+0xf0]
  41665f:	test   eax,eax
  416661:	je     417066 <__flatcc_fb_gen_c_json_parser@@Base+0x10d6>
  416667:	dec    eax
  416669:	mov    DWORD PTR [rbx+0xf0],eax
  41666f:	lea    rsi,[rip+0x2c57b]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  416676:	mov    rdi,rbx
  416679:	xor    eax,eax
  41667b:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416680:	mov    rdi,rbx
  416683:	lea    rsi,[rip+0x302d4]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  41668a:	xor    eax,eax
  41668c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416691:	mov    rdi,QWORD PTR [rsp+0x20]
  416696:	test   rdi,rdi
  416699:	je     4166a0 <__flatcc_fb_gen_c_json_parser@@Base+0x710>
  41669b:	call   405240 <free@plt>
  4166a0:	mov    rdi,r14
  4166a3:	call   411ec0 <__flatcc_fb_gen_c_verifier@@Base+0x4f0>
  4166a8:	mov    rax,QWORD PTR [rbx+0xd8]
  4166af:	mov    rsi,QWORD PTR [rax+0x58]
  4166b3:	test   rsi,rsi
  4166b6:	je     416ced <__flatcc_fb_gen_c_json_parser@@Base+0xd5d>
  4166bc:	movzx  eax,WORD PTR [rsi+0x10]
  4166c0:	test   ax,ax
  4166c3:	je     416b20 <__flatcc_fb_gen_c_json_parser@@Base+0xb90>
  4166c9:	cmp    ax,0x1
  4166cd:	jne    416ced <__flatcc_fb_gen_c_json_parser@@Base+0xd5d>
  4166d3:	xor    eax,eax
  4166d5:	mov    ecx,0x1d
  4166da:	mov    rdi,rbp
  4166dd:	rep stos QWORD PTR es:[rdi],rax
  4166e0:	mov    rdx,rbp
  4166e3:	mov    rdi,QWORD PTR [rsi+0x18]
  4166e7:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  4166ec:	mov    rax,QWORD PTR [rbx+0xd8]
  4166f3:	lea    rsi,[rip+0x2e2f6]        # 4449f0 <_IO_stdin_used@@Base+0x169f0>
  4166fa:	mov    rdx,QWORD PTR [rax+0x110]
  416701:	mov    rdi,rbx
  416704:	xor    eax,eax
  416706:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41670b:	add    DWORD PTR [rbx+0xf0],0x2
  416712:	xor    eax,eax
  416714:	lea    rsi,[rip+0x2e7f5]        # 444f10 <_IO_stdin_used@@Base+0x16f10>
  41671b:	mov    rdi,rbx
  41671e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416723:	mov    eax,DWORD PTR [rbx+0xf0]
  416729:	test   eax,eax
  41672b:	je     41708f <__flatcc_fb_gen_c_json_parser@@Base+0x10ff>
  416731:	cmp    eax,0x1
  416734:	je     417085 <__flatcc_fb_gen_c_json_parser@@Base+0x10f5>
  41673a:	sub    eax,0x2
  41673d:	mov    DWORD PTR [rbx+0xf0],eax
  416743:	lea    rsi,[rip+0x2c5be]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  41674a:	xor    eax,eax
  41674c:	mov    rdi,rbx
  41674f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416754:	inc    DWORD PTR [rbx+0xf0]
  41675a:	xor    eax,eax
  41675c:	lea    rsi,[rip+0x2c92f]        # 443092 <_IO_stdin_used@@Base+0x15092>
  416763:	mov    rdi,rbx
  416766:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41676b:	xor    eax,eax
  41676d:	lea    rsi,[rip+0x2c8af]        # 443023 <_IO_stdin_used@@Base+0x15023>
  416774:	mov    rdi,rbx
  416777:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41677c:	xor    eax,eax
  41677e:	lea    rsi,[rip+0x301d9]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  416785:	mov    rdi,rbx
  416788:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41678d:	xor    eax,eax
  41678f:	lea    rsi,[rip+0x2c917]        # 4430ad <_IO_stdin_used@@Base+0x150ad>
  416796:	mov    rdi,rbx
  416799:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41679e:	xor    eax,eax
  4167a0:	lea    rsi,[rip+0x2e799]        # 444f40 <_IO_stdin_used@@Base+0x16f40>
  4167a7:	mov    rdi,rbx
  4167aa:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4167af:	mov    rax,QWORD PTR [rbx+0xd8]
  4167b6:	cmp    WORD PTR [rax+0x20],0x2
  4167bb:	je     416dc0 <__flatcc_fb_gen_c_json_parser@@Base+0xe30>
  4167c1:	lea    rsi,[rip+0x2e7f8]        # 444fc0 <_IO_stdin_used@@Base+0x16fc0>
  4167c8:	mov    rdi,rbx
  4167cb:	xor    eax,eax
  4167cd:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4167d2:	mov    rdx,rbp
  4167d5:	lea    rsi,[rip+0x2e88c]        # 445068 <_IO_stdin_used@@Base+0x17068>
  4167dc:	mov    rdi,rbx
  4167df:	xor    eax,eax
  4167e1:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4167e6:	lea    rsi,[rip+0x2c86c]        # 443059 <_IO_stdin_used@@Base+0x15059>
  4167ed:	mov    rdi,rbx
  4167f0:	xor    eax,eax
  4167f2:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4167f7:	inc    DWORD PTR [rbx+0xf0]
  4167fd:	xor    eax,eax
  4167ff:	lea    rsi,[rip+0x2c865]        # 44306b <_IO_stdin_used@@Base+0x1506b>
  416806:	mov    rdi,rbx
  416809:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41680e:	mov    eax,DWORD PTR [rbx+0xf0]
  416814:	test   eax,eax
  416816:	je     4170ae <__flatcc_fb_gen_c_json_parser@@Base+0x111e>
  41681c:	dec    eax
  41681e:	mov    DWORD PTR [rbx+0xf0],eax
  416824:	lea    rsi,[rip+0x2c3c6]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  41682b:	mov    rdi,rbx
  41682e:	xor    eax,eax
  416830:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416835:	lea    rsi,[rip+0x2e7f4]        # 445030 <_IO_stdin_used@@Base+0x17030>
  41683c:	mov    rdi,rbx
  41683f:	xor    eax,eax
  416841:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416846:	lea    rsi,[rip+0x2c831]        # 44307e <_IO_stdin_used@@Base+0x1507e>
  41684d:	mov    rdi,rbx
  416850:	xor    eax,eax
  416852:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416857:	xor    eax,eax
  416859:	lea    rsi,[rip+0x2c55a]        # 442dba <_IO_stdin_used@@Base+0x14dba>
  416860:	mov    rdi,rbx
  416863:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416868:	mov    eax,DWORD PTR [rbx+0xf0]
  41686e:	test   eax,eax
  416870:	jne    416cc3 <__flatcc_fb_gen_c_json_parser@@Base+0xd33>
  416876:	lea    rcx,[rip+0x2e893]        # 445110 <_IO_stdin_used@@Base+0x17110>
  41687d:	mov    edx,0x681
  416882:	lea    rsi,[rip+0x2c8ef]        # 443178 <_IO_stdin_used@@Base+0x15178>
  416889:	lea    rdi,[rip+0x2c355]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  416890:	call   405300 <__assert_fail@plt>
  416895:	nop    DWORD PTR [rax]
  416898:	mov    rdi,QWORD PTR [r12+0x18]
  41689d:	mov    rdx,rbp
  4168a0:	mov    rsi,r12
  4168a3:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  4168a8:	mov    rdx,rbp
  4168ab:	lea    rsi,[rip+0x2e38e]        # 444c40 <_IO_stdin_used@@Base+0x16c40>
  4168b2:	mov    rdi,rbx
  4168b5:	xor    eax,eax
  4168b7:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4168bc:	jmp    41614e <__flatcc_fb_gen_c_json_parser@@Base+0x1be>
  4168c1:	nop    DWORD PTR [rax+0x0]
  4168c8:	mov    rsi,r12
  4168cb:	mov    rdi,rbx
  4168ce:	call   415300 <__flatcc_fb_gen_c_verifier@@Base+0x3930>
  4168d3:	jmp    416310 <__flatcc_fb_gen_c_json_parser@@Base+0x380>
  4168d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4168e0:	mov    rsi,r12
  4168e3:	mov    rdi,rbx
  4168e6:	call   414f60 <__flatcc_fb_gen_c_verifier@@Base+0x3590>
  4168eb:	cmp    WORD PTR [r12+0x10],0x1
  4168f2:	jne    417019 <__flatcc_fb_gen_c_json_parser@@Base+0x1089>
  4168f8:	mov    rax,r13
  4168fb:	mov    ecx,0x1d
  416900:	mov    rdi,rbp
  416903:	rep stos QWORD PTR es:[rdi],rax
  416906:	mov    rdx,rbp
  416909:	mov    rsi,r12
  41690c:	mov    rdi,QWORD PTR [r12+0x18]
  416911:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  416916:	mov    rdx,rbp
  416919:	lea    rsi,[rip+0x2e418]        # 444d38 <_IO_stdin_used@@Base+0x16d38>
  416920:	mov    rdi,rbx
  416923:	xor    eax,eax
  416925:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41692a:	lea    rsi,[rip+0x2c3d7]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  416931:	mov    rdi,rbx
  416934:	xor    eax,eax
  416936:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41693b:	inc    DWORD PTR [rbx+0xf0]
  416941:	lea    rsi,[rip+0x2c5eb]        # 442f33 <_IO_stdin_used@@Base+0x14f33>
  416948:	mov    rdi,rbx
  41694b:	xor    eax,eax
  41694d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416952:	lea    rsi,[rip+0x30005]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  416959:	mov    rdi,rbx
  41695c:	xor    eax,eax
  41695e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416963:	lea    rsi,[rip+0x2c383]        # 442ced <_IO_stdin_used@@Base+0x14ced>
  41696a:	mov    rdi,rbx
  41696d:	xor    eax,eax
  41696f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416974:	movzx  ecx,WORD PTR [r12+0xb0]
  41697d:	mov    rdx,QWORD PTR [r12+0xb8]
  416985:	lea    rsi,[rip+0x2e434]        # 444dc0 <_IO_stdin_used@@Base+0x16dc0>
  41698c:	mov    rdi,rbx
  41698f:	xor    eax,eax
  416991:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416996:	mov    rdx,rbp
  416999:	lea    rsi,[rip+0x2d1b8]        # 443b58 <_IO_stdin_used@@Base+0x15b58>
  4169a0:	mov    rdi,rbx
  4169a3:	xor    eax,eax
  4169a5:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4169aa:	lea    rsi,[rip+0x2e45f]        # 444e10 <_IO_stdin_used@@Base+0x16e10>
  4169b1:	mov    rdi,rbx
  4169b4:	xor    eax,eax
  4169b6:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4169bb:	lea    rsi,[rip+0x2c398]        # 442d5a <_IO_stdin_used@@Base+0x14d5a>
  4169c2:	mov    rdi,rbx
  4169c5:	xor    eax,eax
  4169c7:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4169cc:	mov    eax,DWORD PTR [rbx+0xf0]
  4169d2:	mov    DWORD PTR [rbx+0xf0],0x0
  4169dc:	mov    DWORD PTR [rbx+0xf8],eax
  4169e2:	lea    rsi,[rip+0x2c56a]        # 442f53 <_IO_stdin_used@@Base+0x14f53>
  4169e9:	mov    rdi,rbx
  4169ec:	xor    eax,eax
  4169ee:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4169f3:	mov    eax,DWORD PTR [rbx+0xf8]
  4169f9:	lea    rsi,[rip+0x2cbe0]        # 4435e0 <_IO_stdin_used@@Base+0x155e0>
  416a00:	mov    DWORD PTR [rbx+0xf0],eax
  416a06:	mov    rdi,rbx
  416a09:	xor    eax,eax
  416a0b:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416a10:	mov    eax,DWORD PTR [rbx+0xf0]
  416a16:	test   eax,eax
  416a18:	je     416ffa <__flatcc_fb_gen_c_json_parser@@Base+0x106a>
  416a1e:	dec    eax
  416a20:	mov    DWORD PTR [rbx+0xf0],eax
  416a26:	lea    rsi,[rip+0x2c1c4]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  416a2d:	mov    rdi,rbx
  416a30:	xor    eax,eax
  416a32:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416a37:	lea    rsi,[rip+0x2ff20]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  416a3e:	mov    rdi,rbx
  416a41:	xor    eax,eax
  416a43:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416a48:	mov    rdx,rbp
  416a4b:	lea    rsi,[rip+0x2dc06]        # 444658 <_IO_stdin_used@@Base+0x16658>
  416a52:	mov    rdi,rbx
  416a55:	xor    eax,eax
  416a57:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416a5c:	lea    rsi,[rip+0x2c2a5]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  416a63:	mov    rdi,rbx
  416a66:	xor    eax,eax
  416a68:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416a6d:	inc    DWORD PTR [rbx+0xf0]
  416a73:	xor    eax,eax
  416a75:	mov    rdx,rbp
  416a78:	lea    rsi,[rip+0x2e3e9]        # 444e68 <_IO_stdin_used@@Base+0x16e68>
  416a7f:	mov    rdi,rbx
  416a82:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416a87:	mov    eax,DWORD PTR [rbx+0xf0]
  416a8d:	test   eax,eax
  416a8f:	je     416fdb <__flatcc_fb_gen_c_json_parser@@Base+0x104b>
  416a95:	dec    eax
  416a97:	mov    DWORD PTR [rbx+0xf0],eax
  416a9d:	mov    rdi,rbx
  416aa0:	xor    eax,eax
  416aa2:	lea    rsi,[rip+0x2c148]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  416aa9:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416aae:	lea    rsi,[rip+0x2fea9]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  416ab5:	mov    rdi,rbx
  416ab8:	xor    eax,eax
  416aba:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416abf:	jmp    416310 <__flatcc_fb_gen_c_json_parser@@Base+0x380>
  416ac4:	nop    DWORD PTR [rax+0x0]
  416ac8:	lea    rsi,[rip+0x2e401]        # 444ed0 <_IO_stdin_used@@Base+0x16ed0>
  416acf:	mov    rdi,rbx
  416ad2:	xor    eax,eax
  416ad4:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416ad9:	xor    eax,eax
  416adb:	lea    rsi,[rip+0x2c2e2]        # 442dc4 <_IO_stdin_used@@Base+0x14dc4>
  416ae2:	mov    rdi,rbx
  416ae5:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416aea:	mov    eax,DWORD PTR [rbx+0xf0]
  416af0:	test   eax,eax
  416af2:	jne    416667 <__flatcc_fb_gen_c_json_parser@@Base+0x6d7>
  416af8:	lea    rcx,[rip+0x2e651]        # 445150 <_IO_stdin_used@@Base+0x17150>
  416aff:	mov    edx,0x4ba
  416b04:	lea    rsi,[rip+0x2c66d]        # 443178 <_IO_stdin_used@@Base+0x15178>
  416b0b:	lea    rdi,[rip+0x2c0d3]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  416b12:	call   405300 <__assert_fail@plt>
  416b17:	nop    WORD PTR [rax+rax*1+0x0]
  416b20:	xor    eax,eax
  416b22:	mov    ecx,0x1d
  416b27:	mov    rdi,rbp
  416b2a:	rep stos QWORD PTR es:[rdi],rax
  416b2d:	mov    rdx,rbp
  416b30:	mov    rdi,QWORD PTR [rsi+0x18]
  416b34:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  416b39:	mov    rax,QWORD PTR [rbx+0xd8]
  416b40:	lea    rsi,[rip+0x2dea9]        # 4449f0 <_IO_stdin_used@@Base+0x169f0>
  416b47:	mov    rdx,QWORD PTR [rax+0x110]
  416b4e:	mov    rdi,rbx
  416b51:	xor    eax,eax
  416b53:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416b58:	add    DWORD PTR [rbx+0xf0],0x2
  416b5f:	xor    eax,eax
  416b61:	lea    rsi,[rip+0x2e3a8]        # 444f10 <_IO_stdin_used@@Base+0x16f10>
  416b68:	mov    rdi,rbx
  416b6b:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416b70:	mov    eax,DWORD PTR [rbx+0xf0]
  416b76:	test   eax,eax
  416b78:	je     417047 <__flatcc_fb_gen_c_json_parser@@Base+0x10b7>
  416b7e:	cmp    eax,0x1
  416b81:	je     41703d <__flatcc_fb_gen_c_json_parser@@Base+0x10ad>
  416b87:	sub    eax,0x2
  416b8a:	mov    DWORD PTR [rbx+0xf0],eax
  416b90:	lea    rsi,[rip+0x2c171]        # 442d08 <_IO_stdin_used@@Base+0x14d08>
  416b97:	xor    eax,eax
  416b99:	mov    rdi,rbx
  416b9c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416ba1:	inc    DWORD PTR [rbx+0xf0]
  416ba7:	xor    eax,eax
  416ba9:	lea    rsi,[rip+0x2c456]        # 443006 <_IO_stdin_used@@Base+0x15006>
  416bb0:	mov    rdi,rbx
  416bb3:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416bb8:	xor    eax,eax
  416bba:	lea    rsi,[rip+0x2c462]        # 443023 <_IO_stdin_used@@Base+0x15023>
  416bc1:	mov    rdi,rbx
  416bc4:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416bc9:	xor    eax,eax
  416bcb:	lea    rsi,[rip+0x2fd8c]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  416bd2:	mov    rdi,rbx
  416bd5:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416bda:	xor    eax,eax
  416bdc:	lea    rsi,[rip+0x2c45b]        # 44303e <_IO_stdin_used@@Base+0x1503e>
  416be3:	mov    rdi,rbx
  416be6:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416beb:	xor    eax,eax
  416bed:	lea    rsi,[rip+0x2e34c]        # 444f40 <_IO_stdin_used@@Base+0x16f40>
  416bf4:	mov    rdi,rbx
  416bf7:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416bfc:	mov    rax,QWORD PTR [rbx+0xd8]
  416c03:	cmp    WORD PTR [rax+0x20],0x2
  416c08:	je     416da0 <__flatcc_fb_gen_c_json_parser@@Base+0xe10>
  416c0e:	lea    rsi,[rip+0x2e3ab]        # 444fc0 <_IO_stdin_used@@Base+0x16fc0>
  416c15:	mov    rdi,rbx
  416c18:	xor    eax,eax
  416c1a:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416c1f:	mov    rdx,rbp
  416c22:	lea    rsi,[rip+0x2e3cf]        # 444ff8 <_IO_stdin_used@@Base+0x16ff8>
  416c29:	mov    rdi,rbx
  416c2c:	xor    eax,eax
  416c2e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416c33:	lea    rsi,[rip+0x2c41f]        # 443059 <_IO_stdin_used@@Base+0x15059>
  416c3a:	mov    rdi,rbx
  416c3d:	xor    eax,eax
  416c3f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416c44:	inc    DWORD PTR [rbx+0xf0]
  416c4a:	xor    eax,eax
  416c4c:	lea    rsi,[rip+0x2c418]        # 44306b <_IO_stdin_used@@Base+0x1506b>
  416c53:	mov    rdi,rbx
  416c56:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416c5b:	mov    eax,DWORD PTR [rbx+0xf0]
  416c61:	test   eax,eax
  416c63:	je     4170ec <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
  416c69:	dec    eax
  416c6b:	mov    DWORD PTR [rbx+0xf0],eax
  416c71:	lea    rsi,[rip+0x2bf79]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  416c78:	mov    rdi,rbx
  416c7b:	xor    eax,eax
  416c7d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416c82:	lea    rsi,[rip+0x2e3a7]        # 445030 <_IO_stdin_used@@Base+0x17030>
  416c89:	mov    rdi,rbx
  416c8c:	xor    eax,eax
  416c8e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416c93:	lea    rsi,[rip+0x2c3e4]        # 44307e <_IO_stdin_used@@Base+0x1507e>
  416c9a:	mov    rdi,rbx
  416c9d:	xor    eax,eax
  416c9f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416ca4:	xor    eax,eax
  416ca6:	lea    rsi,[rip+0x2c10d]        # 442dba <_IO_stdin_used@@Base+0x14dba>
  416cad:	mov    rdi,rbx
  416cb0:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416cb5:	mov    eax,DWORD PTR [rbx+0xf0]
  416cbb:	test   eax,eax
  416cbd:	je     4170cd <__flatcc_fb_gen_c_json_parser@@Base+0x113d>
  416cc3:	dec    eax
  416cc5:	mov    DWORD PTR [rbx+0xf0],eax
  416ccb:	lea    rsi,[rip+0x2bf1f]        # 442bf1 <_IO_stdin_used@@Base+0x14bf1>
  416cd2:	mov    rdi,rbx
  416cd5:	xor    eax,eax
  416cd7:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416cdc:	lea    rsi,[rip+0x2fc7b]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  416ce3:	mov    rdi,rbx
  416ce6:	xor    eax,eax
  416ce8:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416ced:	mov    rax,QWORD PTR [rbx+0xe0]
  416cf4:	mov    eax,DWORD PTR [rax+0xac]
  416cfa:	test   eax,eax
  416cfc:	jne    416d70 <__flatcc_fb_gen_c_json_parser@@Base+0xde0>
  416cfe:	mov    rax,QWORD PTR [rbx+0xd8]
  416d05:	lea    rsi,[rip+0x2c3ba]        # 4430c6 <_IO_stdin_used@@Base+0x150c6>
  416d0c:	mov    rdx,QWORD PTR [rax+0x118]
  416d13:	mov    rdi,rbx
  416d16:	xor    eax,eax
  416d18:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416d1d:	xor    eax,eax
  416d1f:	mov    rcx,QWORD PTR [rsp+0x188]
  416d27:	xor    rcx,QWORD PTR fs:0x28
  416d30:	jne    417038 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
  416d36:	add    rsp,0x198
  416d3d:	pop    rbx
  416d3e:	pop    rbp
  416d3f:	pop    r12
  416d41:	pop    r13
  416d43:	pop    r14
  416d45:	pop    r15
  416d47:	ret    
  416d48:	nop    DWORD PTR [rax+rax*1+0x0]
  416d50:	mov    rdi,QWORD PTR [rbx+0xd0]
  416d57:	lea    rdx,[rip+0x1a222]        # 430f80 <_IO_stdin_used@@Base+0x2f80>
  416d5e:	mov    esi,0x1
  416d63:	xor    eax,eax
  416d65:	call   405400 <__fprintf_chk@plt>
  416d6a:	jmp    416065 <__flatcc_fb_gen_c_json_parser@@Base+0xd5>
  416d6f:	nop
  416d70:	mov    rdi,QWORD PTR [rbx+0xd0]
  416d77:	lea    rdx,[rip+0x200b2]        # 436e30 <_IO_stdin_used@@Base+0x8e30>
  416d7e:	mov    esi,0x1
  416d83:	xor    eax,eax
  416d85:	call   405400 <__fprintf_chk@plt>
  416d8a:	jmp    416cfe <__flatcc_fb_gen_c_json_parser@@Base+0xd6e>
  416d8f:	nop
  416d90:	mov    QWORD PTR [rsp+0x20],0x0
  416d99:	jmp    41653d <__flatcc_fb_gen_c_json_parser@@Base+0x5ad>
  416d9e:	xchg   ax,ax
  416da0:	mov    rcx,QWORD PTR [rax+0x10]
  416da4:	mov    edx,DWORD PTR [rax+0x18]
  416da7:	lea    rsi,[rip+0x2e1d2]        # 444f80 <_IO_stdin_used@@Base+0x16f80>
  416dae:	mov    rdi,rbx
  416db1:	xor    eax,eax
  416db3:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416db8:	jmp    416c1f <__flatcc_fb_gen_c_json_parser@@Base+0xc8f>
  416dbd:	nop    DWORD PTR [rax]
  416dc0:	mov    rcx,QWORD PTR [rax+0x10]
  416dc4:	mov    edx,DWORD PTR [rax+0x18]
  416dc7:	lea    rsi,[rip+0x2e1b2]        # 444f80 <_IO_stdin_used@@Base+0x16f80>
  416dce:	mov    rdi,rbx
  416dd1:	xor    eax,eax
  416dd3:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416dd8:	jmp    4167d2 <__flatcc_fb_gen_c_json_parser@@Base+0x842>
  416ddd:	nop    DWORD PTR [rax]
  416de0:	lea    rsi,[rip+0x2c219]        # 443000 <_IO_stdin_used@@Base+0x15000>
  416de7:	mov    rdi,rbx
  416dea:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416def:	lea    rsi,[rip+0x2da72]        # 444868 <_IO_stdin_used@@Base+0x16868>
  416df6:	mov    rdi,rbx
  416df9:	xor    eax,eax
  416dfb:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416e00:	lea    rsi,[rip+0x2c1fc]        # 443003 <_IO_stdin_used@@Base+0x15003>
  416e07:	mov    rdi,rbx
  416e0a:	xor    eax,eax
  416e0c:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416e11:	lea    rsi,[rip+0x2daa8]        # 4448c0 <_IO_stdin_used@@Base+0x168c0>
  416e18:	mov    rdi,rbx
  416e1b:	xor    eax,eax
  416e1d:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416e22:	lea    rsi,[rip+0x2dadf]        # 444908 <_IO_stdin_used@@Base+0x16908>
  416e29:	mov    rdi,rbx
  416e2c:	xor    eax,eax
  416e2e:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416e33:	lea    rsi,[rip+0x2db06]        # 444940 <_IO_stdin_used@@Base+0x16940>
  416e3a:	mov    rdi,rbx
  416e3d:	xor    eax,eax
  416e3f:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416e44:	lea    rsi,[rip+0x2db1d]        # 444968 <_IO_stdin_used@@Base+0x16968>
  416e4b:	mov    rdi,rbx
  416e4e:	xor    eax,eax
  416e50:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416e55:	lea    rsi,[rip+0x2db54]        # 4449b0 <_IO_stdin_used@@Base+0x169b0>
  416e5c:	mov    rdi,rbx
  416e5f:	xor    eax,eax
  416e61:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416e66:	lea    rsi,[rip+0x2bd98]        # 442c05 <_IO_stdin_used@@Base+0x14c05>
  416e6d:	mov    rdi,rbx
  416e70:	xor    eax,eax
  416e72:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416e77:	mov    rax,QWORD PTR [rbx+0xd8]
  416e7e:	lea    rsi,[rip+0x2db6b]        # 4449f0 <_IO_stdin_used@@Base+0x169f0>
  416e85:	mov    rdx,QWORD PTR [rax+0x110]
  416e8c:	mov    rdi,rbx
  416e8f:	xor    eax,eax
  416e91:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416e96:	add    DWORD PTR [rbx+0xf0],0x2
  416e9d:	xor    eax,eax
  416e9f:	lea    rsi,[rip+0x2db9a]        # 444a40 <_IO_stdin_used@@Base+0x16a40>
  416ea6:	mov    rdi,rbx
  416ea9:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416eae:	mov    eax,DWORD PTR [rbx+0xf0]
  416eb4:	test   eax,eax
  416eb6:	je     417115 <__flatcc_fb_gen_c_json_parser@@Base+0x1185>
  416ebc:	cmp    eax,0x1
  416ebf:	je     41710b <__flatcc_fb_gen_c_json_parser@@Base+0x117b>
  416ec5:	sub    eax,0x2
  416ec8:	mov    DWORD PTR [rbx+0xf0],eax
  416ece:	lea    rsi,[rip+0x2fa89]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  416ed5:	mov    rdi,rbx
  416ed8:	xor    eax,eax
  416eda:	call   411f30 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416edf:	mov    rdx,QWORD PTR [rbx+0xd8]
  416ee6:	jmp    4160a6 <__flatcc_fb_gen_c_json_parser@@Base+0x116>
  416eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  416ef0:	mov    QWORD PTR [rsp+0x20],0x0
  416ef9:	test   r13d,r13d
  416efc:	jle    41653d <__flatcc_fb_gen_c_json_parser@@Base+0x5ad>
  416f02:	mov    rdi,r14
  416f05:	call   411ec0 <__flatcc_fb_gen_c_verifier@@Base+0x4f0>
  416f0a:	mov    rax,QWORD PTR [rip+0x3b0d7]        # 451fe8 <stderr@GLIBC_2.2.5>
  416f11:	lea    rcx,[rip+0x2c260]        # 443178 <_IO_stdin_used@@Base+0x15178>
  416f18:	mov    rdi,QWORD PTR [rax]
  416f1b:	lea    rdx,[rip+0x20371]        # 437293 <_IO_stdin_used@@Base+0x9293>
  416f22:	mov    esi,0x1
  416f27:	lea    r9,[rip+0x2c742]        # 443670 <_IO_stdin_used@@Base+0x15670>
  416f2e:	mov    r8d,0x4aa
  416f34:	xor    eax,eax
  416f36:	call   405400 <__fprintf_chk@plt>
  416f3b:	lea    rcx,[rip+0x2e20e]        # 445150 <_IO_stdin_used@@Base+0x17150>
  416f42:	mov    edx,0x4aa
  416f47:	lea    rsi,[rip+0x2c22a]        # 443178 <_IO_stdin_used@@Base+0x15178>
  416f4e:	lea    rdi,[rip+0x21404]        # 438359 <_IO_stdin_used@@Base+0xa359>
  416f55:	call   405300 <__assert_fail@plt>
  416f5a:	nop    WORD PTR [rax+rax*1+0x0]
  416f60:	mov    DWORD PTR [rbx+0xf0],0x0
  416f6a:	lea    rcx,[rip+0x2e39f]        # 445310 <_IO_stdin_used@@Base+0x17310>
  416f71:	mov    edx,0x6c3
  416f76:	lea    rsi,[rip+0x2c1fb]        # 443178 <_IO_stdin_used@@Base+0x15178>
  416f7d:	lea    rdi,[rip+0x2bc61]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  416f84:	call   405300 <__assert_fail@plt>
  416f89:	mov    DWORD PTR [rbx+0xf0],0x0
  416f93:	lea    rcx,[rip+0x2e376]        # 445310 <_IO_stdin_used@@Base+0x17310>
  416f9a:	mov    edx,0x6db
  416f9f:	lea    rsi,[rip+0x2c1d2]        # 443178 <_IO_stdin_used@@Base+0x15178>
  416fa6:	lea    rdi,[rip+0x2bc38]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  416fad:	call   405300 <__assert_fail@plt>
  416fb2:	mov    DWORD PTR [rbx+0xf0],0x0
  416fbc:	lea    rcx,[rip+0x2e18d]        # 445150 <_IO_stdin_used@@Base+0x17150>
  416fc3:	mov    edx,0x4b5
  416fc8:	lea    rsi,[rip+0x2c1a9]        # 443178 <_IO_stdin_used@@Base+0x15178>
  416fcf:	lea    rdi,[rip+0x2bc0f]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  416fd6:	call   405300 <__assert_fail@plt>
  416fdb:	lea    rcx,[rip+0x2e1ee]        # 4451d0 <_IO_stdin_used@@Base+0x171d0>
  416fe2:	mov    edx,0x560
  416fe7:	lea    rsi,[rip+0x2c18a]        # 443178 <_IO_stdin_used@@Base+0x15178>
  416fee:	lea    rdi,[rip+0x2bbf0]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  416ff5:	call   405300 <__assert_fail@plt>
  416ffa:	lea    rcx,[rip+0x2e1cf]        # 4451d0 <_IO_stdin_used@@Base+0x171d0>
  417001:	mov    edx,0x55a
  417006:	lea    rsi,[rip+0x2c16b]        # 443178 <_IO_stdin_used@@Base+0x15178>
  41700d:	lea    rdi,[rip+0x2bbd1]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  417014:	call   405300 <__assert_fail@plt>
  417019:	lea    rcx,[rip+0x2e1b0]        # 4451d0 <_IO_stdin_used@@Base+0x171d0>
  417020:	mov    edx,0x549
  417025:	lea    rsi,[rip+0x2c14c]        # 443178 <_IO_stdin_used@@Base+0x15178>
  41702c:	lea    rdi,[rip+0x198ed]        # 430920 <_IO_stdin_used@@Base+0x2920>
  417033:	call   405300 <__assert_fail@plt>
  417038:	call   4052d0 <__stack_chk_fail@plt>
  41703d:	mov    DWORD PTR [rbx+0xf0],0x0
  417047:	lea    rcx,[rip+0x2e0e2]        # 445130 <_IO_stdin_used@@Base+0x17130>
  41704e:	mov    edx,0x64a
  417053:	lea    rsi,[rip+0x2c11e]        # 443178 <_IO_stdin_used@@Base+0x15178>
  41705a:	lea    rdi,[rip+0x2bb84]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  417061:	call   405300 <__assert_fail@plt>
  417066:	lea    rcx,[rip+0x2e0e3]        # 445150 <_IO_stdin_used@@Base+0x17150>
  41706d:	mov    edx,0x4c3
  417072:	lea    rsi,[rip+0x2c0ff]        # 443178 <_IO_stdin_used@@Base+0x15178>
  417079:	lea    rdi,[rip+0x2bb65]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  417080:	call   405300 <__assert_fail@plt>
  417085:	mov    DWORD PTR [rbx+0xf0],0x0
  41708f:	lea    rcx,[rip+0x2e07a]        # 445110 <_IO_stdin_used@@Base+0x17110>
  417096:	mov    edx,0x66d
  41709b:	lea    rsi,[rip+0x2c0d6]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4170a2:	lea    rdi,[rip+0x2bb3c]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4170a9:	call   405300 <__assert_fail@plt>
  4170ae:	lea    rcx,[rip+0x2e05b]        # 445110 <_IO_stdin_used@@Base+0x17110>
  4170b5:	mov    edx,0x67d
  4170ba:	lea    rsi,[rip+0x2c0b7]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4170c1:	lea    rdi,[rip+0x2bb1d]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4170c8:	call   405300 <__assert_fail@plt>
  4170cd:	lea    rcx,[rip+0x2e05c]        # 445130 <_IO_stdin_used@@Base+0x17130>
  4170d4:	mov    edx,0x65e
  4170d9:	lea    rsi,[rip+0x2c098]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4170e0:	lea    rdi,[rip+0x2bafe]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  4170e7:	call   405300 <__assert_fail@plt>
  4170ec:	lea    rcx,[rip+0x2e03d]        # 445130 <_IO_stdin_used@@Base+0x17130>
  4170f3:	mov    edx,0x65a
  4170f8:	lea    rsi,[rip+0x2c079]        # 443178 <_IO_stdin_used@@Base+0x15178>
  4170ff:	lea    rdi,[rip+0x2badf]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  417106:	call   405300 <__assert_fail@plt>
  41710b:	mov    DWORD PTR [rbx+0xf0],0x0
  417115:	lea    rcx,[rip+0x2e1f4]        # 445310 <_IO_stdin_used@@Base+0x17310>
  41711c:	mov    edx,0x6b4
  417121:	lea    rsi,[rip+0x2c050]        # 443178 <_IO_stdin_used@@Base+0x15178>
  417128:	lea    rdi,[rip+0x2bab6]        # 442be5 <_IO_stdin_used@@Base+0x14be5>
  41712f:	call   405300 <__assert_fail@plt>
  417134:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41713e:	xchg   ax,ax
  417140:	push   rax
  417141:	pop    rax
  417142:	lea    rcx,[rip+0x1899f]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  417149:	lea    rdx,[rip+0x20143]        # 437293 <_IO_stdin_used@@Base+0x9293>
  417150:	mov    esi,0x1
  417155:	lea    r9,[rip+0x18954]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  41715c:	mov    r8d,0x60
  417162:	sub    rsp,0x8
  417166:	mov    rax,QWORD PTR [rip+0x3ae7b]        # 451fe8 <stderr@GLIBC_2.2.5>
  41716d:	mov    rdi,QWORD PTR [rax]
  417170:	xor    eax,eax
  417172:	call   405400 <__fprintf_chk@plt>
  417177:	lea    rcx,[rip+0x2fa12]        # 446b90 <_IO_stdin_used@@Base+0x18b90>
  41717e:	mov    edx,0x60
  417183:	lea    rsi,[rip+0x1895e]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  41718a:	lea    rdi,[rip+0x211c8]        # 438359 <_IO_stdin_used@@Base+0xa359>
  417191:	call   405300 <__assert_fail@plt>
  417196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4171a0:	push   r13
  4171a2:	mov    ecx,0x1d
  4171a7:	mov    r13,rsi
  4171aa:	push   r12
  4171ac:	push   rbp
  4171ad:	mov    rbp,rdi
  4171b0:	push   rbx
  4171b1:	sub    rsp,0x1e8
  4171b8:	mov    rax,QWORD PTR fs:0x28
  4171c1:	mov    QWORD PTR [rsp+0x1d8],rax
  4171c9:	xor    eax,eax
  4171cb:	mov    rbx,rsp
  4171ce:	mov    rdi,rbx
  4171d1:	lea    r12,[rsp+0xf0]
  4171d9:	mov    rdx,rbx
  4171dc:	rep stos QWORD PTR es:[rdi],rax
  4171df:	mov    ecx,0x1d
  4171e4:	mov    rdi,r12
  4171e7:	rep stos QWORD PTR es:[rdi],rax
  4171ea:	mov    rdi,QWORD PTR [rsi+0x18]
  4171ee:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  4171f3:	mov    rdi,QWORD PTR [rbp+0x0]
  4171f7:	mov    rcx,rbx
  4171fa:	lea    rdx,[rip+0x2e13f]        # 445340 <_IO_stdin_used@@Base+0x17340>
  417201:	mov    esi,0x1
  417206:	xor    eax,eax
  417208:	call   405400 <__fprintf_chk@plt>
  41720d:	mov    rbx,QWORD PTR [r13+0x28]
  417211:	test   rbx,rbx
  417214:	je     41730a <__flatcc_fb_gen_c_json_parser@@Base+0x137a>
  41721a:	lea    r13,[rip+0x2e30f]        # 445530 <_IO_stdin_used@@Base+0x17530>
  417221:	jmp    41727c <__flatcc_fb_gen_c_json_parser@@Base+0x12ec>
  417223:	nop    DWORD PTR [rax+rax*1+0x0]
  417228:	mov    rsi,QWORD PTR [rbx+0x18]
  41722c:	mov    rdx,r12
  41722f:	mov    rdi,QWORD PTR [rsi+0x18]
  417233:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  417238:	mov    rax,QWORD PTR [rbx+0x18]
  41723c:	movzx  eax,WORD PTR [rax+0x10]
  417240:	test   ax,ax
  417243:	jne    417360 <__flatcc_fb_gen_c_json_parser@@Base+0x13d0>
  417249:	mov    ecx,DWORD PTR [rbx+0x48]
  41724c:	mov    rdi,QWORD PTR [rbp+0x0]
  417250:	mov    r8,r12
  417253:	lea    rdx,[rip+0x2e16e]        # 4453c8 <_IO_stdin_used@@Base+0x173c8>
  41725a:	mov    esi,0x1
  41725f:	xor    eax,eax
  417261:	call   405400 <__fprintf_chk@plt>
  417266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417270:	mov    rbx,QWORD PTR [rbx]
  417273:	test   rbx,rbx
  417276:	je     41730a <__flatcc_fb_gen_c_json_parser@@Base+0x137a>
  41727c:	movzx  eax,WORD PTR [rbx+0x28]
  417280:	cmp    ax,0xa
  417284:	je     4172e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1358>
  417286:	cmp    ax,0xe
  41728a:	je     417228 <__flatcc_fb_gen_c_json_parser@@Base+0x1298>
  41728c:	test   ax,ax
  41728f:	je     417270 <__flatcc_fb_gen_c_json_parser@@Base+0x12e0>
  417291:	mov    rax,QWORD PTR [rip+0x3ad50]        # 451fe8 <stderr@GLIBC_2.2.5>
  417298:	lea    rcx,[rip+0x2e221]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  41729f:	mov    rdi,QWORD PTR [rax]
  4172a2:	lea    rdx,[rip+0x1ffea]        # 437293 <_IO_stdin_used@@Base+0x9293>
  4172a9:	mov    esi,0x1
  4172ae:	lea    r9,[rip+0x2e1e3]        # 445498 <_IO_stdin_used@@Base+0x17498>
  4172b5:	mov    r8d,0xfb
  4172bb:	xor    eax,eax
  4172bd:	call   405400 <__fprintf_chk@plt>
  4172c2:	lea    rcx,[rip+0x2f8a7]        # 446b70 <_IO_stdin_used@@Base+0x18b70>
  4172c9:	mov    edx,0xfb
  4172ce:	lea    rsi,[rip+0x2e1eb]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  4172d5:	lea    rdi,[rip+0x2107d]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4172dc:	call   405300 <__assert_fail@plt>
  4172e1:	nop    DWORD PTR [rax+0x0]
  4172e8:	mov    ecx,DWORD PTR [rbx+0x48]
  4172eb:	mov    rdi,QWORD PTR [rbp+0x0]
  4172ef:	mov    rdx,r13
  4172f2:	mov    esi,0x1
  4172f7:	xor    eax,eax
  4172f9:	call   405400 <__fprintf_chk@plt>
  4172fe:	mov    rbx,QWORD PTR [rbx]
  417301:	test   rbx,rbx
  417304:	jne    41727c <__flatcc_fb_gen_c_json_parser@@Base+0x12ec>
  41730a:	mov    rdi,QWORD PTR [rbp+0x0]
  41730e:	lea    rdx,[rip+0x2f623]        # 446938 <_IO_stdin_used@@Base+0x18938>
  417315:	mov    esi,0x1
  41731a:	xor    eax,eax
  41731c:	call   405400 <__fprintf_chk@plt>
  417321:	mov    rdi,QWORD PTR [rbp+0x0]
  417325:	xor    eax,eax
  417327:	lea    rdx,[rip+0x2f627]        # 446955 <_IO_stdin_used@@Base+0x18955>
  41732e:	mov    esi,0x1
  417333:	call   405400 <__fprintf_chk@plt>
  417338:	xor    eax,eax
  41733a:	mov    rcx,QWORD PTR [rsp+0x1d8]
  417342:	xor    rcx,QWORD PTR fs:0x28
  41734b:	jne    4173d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1448>
  417351:	add    rsp,0x1e8
  417358:	pop    rbx
  417359:	pop    rbp
  41735a:	pop    r12
  41735c:	pop    r13
  41735e:	ret    
  41735f:	nop
  417360:	cmp    ax,0x1
  417364:	jne    417388 <__flatcc_fb_gen_c_json_parser@@Base+0x13f8>
  417366:	mov    ecx,DWORD PTR [rbx+0x48]
  417369:	mov    rdi,QWORD PTR [rbp+0x0]
  41736d:	mov    r8,r12
  417370:	lea    rdx,[rip+0x2e0b9]        # 445430 <_IO_stdin_used@@Base+0x17430>
  417377:	mov    esi,0x1
  41737c:	xor    eax,eax
  41737e:	call   405400 <__fprintf_chk@plt>
  417383:	jmp    417270 <__flatcc_fb_gen_c_json_parser@@Base+0x12e0>
  417388:	mov    rax,QWORD PTR [rip+0x3ac59]        # 451fe8 <stderr@GLIBC_2.2.5>
  41738f:	lea    rcx,[rip+0x2e12a]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  417396:	mov    rdi,QWORD PTR [rax]
  417399:	lea    rdx,[rip+0x1fef3]        # 437293 <_IO_stdin_used@@Base+0x9293>
  4173a0:	mov    esi,0x1
  4173a5:	lea    r9,[rip+0x2e0ec]        # 445498 <_IO_stdin_used@@Base+0x17498>
  4173ac:	mov    r8d,0xf0
  4173b2:	xor    eax,eax
  4173b4:	call   405400 <__fprintf_chk@plt>
  4173b9:	lea    rcx,[rip+0x2f7b0]        # 446b70 <_IO_stdin_used@@Base+0x18b70>
  4173c0:	mov    edx,0xf0
  4173c5:	lea    rsi,[rip+0x2e0f4]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  4173cc:	lea    rdi,[rip+0x20f86]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4173d3:	call   405300 <__assert_fail@plt>
  4173d8:	call   4052d0 <__stack_chk_fail@plt>
  4173dd:	nop    DWORD PTR [rax]
  4173e0:	push   r15
  4173e2:	mov    ecx,0x1d
  4173e7:	push   r14
  4173e9:	push   r13
  4173eb:	mov    r13,rsi
  4173ee:	push   r12
  4173f0:	push   rbp
  4173f1:	push   rbx
  4173f2:	mov    rbx,rdi
  4173f5:	sub    rsp,0x1e8
  4173fc:	mov    rax,QWORD PTR fs:0x28
  417405:	mov    QWORD PTR [rsp+0x1d8],rax
  41740d:	xor    eax,eax
  41740f:	mov    rbp,rsp
  417412:	mov    rdi,rbp
  417415:	lea    r12,[rsp+0xf0]
  41741d:	mov    rdx,rbp
  417420:	rep stos QWORD PTR es:[rdi],rax
  417423:	mov    ecx,0x1d
  417428:	mov    rdi,r12
  41742b:	rep stos QWORD PTR es:[rdi],rax
  41742e:	mov    rdi,QWORD PTR [rsi+0x18]
  417432:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  417437:	mov    rdi,QWORD PTR [rbx]
  41743a:	mov    rcx,rbp
  41743d:	lea    rdx,[rip+0x2e13c]        # 445580 <_IO_stdin_used@@Base+0x17580>
  417444:	mov    esi,0x1
  417449:	xor    eax,eax
  41744b:	call   405400 <__fprintf_chk@plt>
  417450:	mov    r15,QWORD PTR [r13+0x28]
  417454:	test   r15,r15
  417457:	je     417530 <__flatcc_fb_gen_c_json_parser@@Base+0x15a0>
  41745d:	xor    r14d,r14d
  417460:	lea    r13,[rip+0x2f599]        # 446a00 <_IO_stdin_used@@Base+0x18a00>
  417467:	nop    WORD PTR [rax+rax*1+0x0]
  417470:	test   BYTE PTR [r15+0x70],0x4
  417475:	jne    417521 <__flatcc_fb_gen_c_json_parser@@Base+0x1591>
  41747b:	movzx  eax,WORD PTR [r15+0x28]
  417480:	cmp    ax,0x8
  417484:	je     417590 <__flatcc_fb_gen_c_json_parser@@Base+0x1600>
  41748a:	cmp    ax,0xe
  41748e:	jne    417521 <__flatcc_fb_gen_c_json_parser@@Base+0x1591>
  417494:	mov    rsi,QWORD PTR [r15+0x18]
  417498:	mov    rdx,r12
  41749b:	mov    rdi,QWORD PTR [rsi+0x18]
  41749f:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  4174a4:	mov    rdx,QWORD PTR [r15+0x18]
  4174a8:	movzx  eax,WORD PTR [rdx+0x10]
  4174ac:	cmp    ax,0x1
  4174b0:	je     4175b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1620>
  4174b6:	cmp    ax,0x3
  4174ba:	jne    417521 <__flatcc_fb_gen_c_json_parser@@Base+0x1591>
  4174bc:	cmp    DWORD PTR [rdx+0x48],0xb
  4174c0:	ja     417723 <__flatcc_fb_gen_c_json_parser@@Base+0x1793>
  4174c6:	mov    eax,DWORD PTR [rdx+0x48]
  4174c9:	lea    rdx,[rip+0x2f500]        # 4469d0 <_IO_stdin_used@@Base+0x189d0>
  4174d0:	movsxd rax,DWORD PTR [rdx+rax*4]
  4174d4:	add    rax,rdx
  4174d7:	notrack jmp rax
  4174da:	nop    WORD PTR [rax+rax*1+0x0]
  4174e0:	lea    rcx,[rip+0x1fde0]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  4174e7:	nop    WORD PTR [rax+rax*1+0x0]
  4174f0:	mov    rdx,QWORD PTR [r15+0x8]
  4174f4:	sub    rsp,0x8
  4174f8:	mov    rax,QWORD PTR [rdx+0x8]
  4174fc:	mov    r9,QWORD PTR [r15+0x78]
  417500:	push   rax
  417501:	mov    r8d,r14d
  417504:	push   QWORD PTR [rdx]
  417506:	lea    rdx,[rip+0x2e0c3]        # 4455d0 <_IO_stdin_used@@Base+0x175d0>
  41750d:	push   rax
  41750e:	mov    rdi,QWORD PTR [rbx]
  417511:	mov    esi,0x1
  417516:	xor    eax,eax
  417518:	call   405400 <__fprintf_chk@plt>
  41751d:	add    rsp,0x20
  417521:	mov    r15,QWORD PTR [r15]
  417524:	inc    r14d
  417527:	test   r15,r15
  41752a:	jne    417470 <__flatcc_fb_gen_c_json_parser@@Base+0x14e0>
  417530:	mov    rdi,QWORD PTR [rbx]
  417533:	lea    rdx,[rip+0x2f421]        # 44695b <_IO_stdin_used@@Base+0x1895b>
  41753a:	mov    esi,0x1
  41753f:	xor    eax,eax
  417541:	call   405400 <__fprintf_chk@plt>
  417546:	mov    rdi,QWORD PTR [rbx]
  417549:	xor    eax,eax
  41754b:	mov    r8,rbp
  41754e:	mov    rcx,rbp
  417551:	lea    rdx,[rip+0x2e190]        # 4456e8 <_IO_stdin_used@@Base+0x176e8>
  417558:	mov    esi,0x1
  41755d:	call   405400 <__fprintf_chk@plt>
  417562:	xor    eax,eax
  417564:	mov    rbx,QWORD PTR [rsp+0x1d8]
  41756c:	xor    rbx,QWORD PTR fs:0x28
  417575:	jne    417728 <__flatcc_fb_gen_c_json_parser@@Base+0x1798>
  41757b:	add    rsp,0x1e8
  417582:	pop    rbx
  417583:	pop    rbp
  417584:	pop    r12
  417586:	pop    r13
  417588:	pop    r14
  41758a:	pop    r15
  41758c:	ret    
  41758d:	nop    DWORD PTR [rax]
  417590:	cmp    DWORD PTR [r15+0x18],0xb
  417595:	ja     417723 <__flatcc_fb_gen_c_json_parser@@Base+0x1793>
  41759b:	mov    eax,DWORD PTR [r15+0x18]
  41759f:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  4175a4:	add    rax,r13
  4175a7:	notrack jmp rax
  4175aa:	nop    WORD PTR [rax+rax*1+0x0]
  4175b0:	mov    rax,QWORD PTR [r15+0x8]
  4175b4:	sub    rsp,0x8
  4175b8:	mov    r9,QWORD PTR [rax+0x8]
  4175bc:	mov    r8,QWORD PTR [r15+0x78]
  4175c0:	push   r12
  4175c2:	mov    rdi,QWORD PTR [rbx]
  4175c5:	mov    ecx,r14d
  4175c8:	push   r9
  4175ca:	lea    rdx,[rip+0x2e0af]        # 445680 <_IO_stdin_used@@Base+0x17680>
  4175d1:	mov    esi,0x1
  4175d6:	push   QWORD PTR [rax]
  4175d8:	xor    eax,eax
  4175da:	inc    r14d
  4175dd:	call   405400 <__fprintf_chk@plt>
  4175e2:	mov    r15,QWORD PTR [r15]
  4175e5:	add    rsp,0x20
  4175e9:	test   r15,r15
  4175ec:	jne    417470 <__flatcc_fb_gen_c_json_parser@@Base+0x14e0>
  4175f2:	jmp    417530 <__flatcc_fb_gen_c_json_parser@@Base+0x15a0>
  4175f7:	nop    WORD PTR [rax+rax*1+0x0]
  417600:	lea    rcx,[rip+0x1fcb9]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  417607:	jmp    4174f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  41760c:	nop    DWORD PTR [rax+0x0]
  417610:	lea    rcx,[rip+0x1fccf]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  417617:	jmp    4174f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  41761c:	nop    DWORD PTR [rax+0x0]
  417620:	lea    rcx,[rip+0x1fcaf]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  417627:	jmp    4174f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  41762c:	nop    DWORD PTR [rax+0x0]
  417630:	lea    rcx,[rip+0x1fcca]        # 437301 <_IO_stdin_used@@Base+0x9301>
  417637:	jmp    4174f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  41763c:	nop    DWORD PTR [rax+0x0]
  417640:	lea    rcx,[rip+0x1fcad]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  417647:	jmp    4174f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  41764c:	nop    DWORD PTR [rax+0x0]
  417650:	lea    rcx,[rip+0x1fc6a]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  417657:	jmp    4174f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  41765c:	nop    DWORD PTR [rax+0x0]
  417660:	lea    rcx,[rip+0x1fc80]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  417667:	jmp    4174f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  41766c:	nop    DWORD PTR [rax+0x0]
  417670:	lea    rcx,[rip+0x1fc60]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  417677:	jmp    4174f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  41767c:	nop    DWORD PTR [rax+0x0]
  417680:	lea    rcx,[rip+0x1fc7b]        # 437302 <_IO_stdin_used@@Base+0x9302>
  417687:	jmp    4174f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  41768c:	nop    DWORD PTR [rax+0x0]
  417690:	lea    rcx,[rip+0x1fc70]        # 437307 <_IO_stdin_used@@Base+0x9307>
  417697:	jmp    4174f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  41769c:	lea    rcx,[rip+0x1fc43]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  4176a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4176a8:	mov    rdx,QWORD PTR [r15+0x8]
  4176ac:	mov    r9,QWORD PTR [r15+0x78]
  4176b0:	mov    rax,QWORD PTR [rdx+0x8]
  4176b4:	push   r12
  4176b6:	mov    r8d,r14d
  4176b9:	push   rax
  4176ba:	push   QWORD PTR [rdx]
  4176bc:	lea    rdx,[rip+0x2df55]        # 445618 <_IO_stdin_used@@Base+0x17618>
  4176c3:	push   rax
  4176c4:	jmp    41750e <__flatcc_fb_gen_c_json_parser@@Base+0x157e>
  4176c9:	lea    rcx,[rip+0x1fc06]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  4176d0:	jmp    4176a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  4176d2:	lea    rcx,[rip+0x1fc28]        # 437301 <_IO_stdin_used@@Base+0x9301>
  4176d9:	jmp    4176a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  4176db:	lea    rcx,[rip+0x1fc12]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  4176e2:	jmp    4176a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  4176e4:	lea    rcx,[rip+0x1fbd5]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  4176eb:	jmp    4176a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  4176ed:	lea    rcx,[rip+0x1fc13]        # 437307 <_IO_stdin_used@@Base+0x9307>
  4176f4:	jmp    4176a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  4176f6:	lea    rcx,[rip+0x1fbca]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  4176fd:	jmp    4176a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  4176ff:	lea    rcx,[rip+0x1fbbb]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  417706:	jmp    4176a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  417708:	lea    rcx,[rip+0x1fbd8]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  41770f:	jmp    4176a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  417711:	lea    rcx,[rip+0x1fbbf]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  417718:	jmp    4176a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  41771a:	lea    rcx,[rip+0x1fbe1]        # 437302 <_IO_stdin_used@@Base+0x9302>
  417721:	jmp    4176a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  417723:	call   417140 <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
  417728:	call   4052d0 <__stack_chk_fail@plt>
  41772d:	nop    DWORD PTR [rax]
  417730:	push   r15
  417732:	mov    ecx,0x1d
  417737:	push   r14
  417739:	mov    r14,rsi
  41773c:	push   r13
  41773e:	push   r12
  417740:	push   rbp
  417741:	mov    rbp,rdi
  417744:	push   rbx
  417745:	sub    rsp,0x1f8
  41774c:	mov    rax,QWORD PTR fs:0x28
  417755:	mov    QWORD PTR [rsp+0x1e8],rax
  41775d:	xor    eax,eax
  41775f:	lea    r13,[rsp+0x10]
  417764:	lea    rdx,[rsp+0x100]
  41776c:	mov    rdi,r13
  41776f:	rep stos QWORD PTR es:[rdi],rax
  417772:	mov    rdi,rdx
  417775:	mov    ecx,0x1d
  41777a:	rep stos QWORD PTR es:[rdi],rax
  41777d:	mov    rdi,QWORD PTR [rsi+0x18]
  417781:	mov    rdx,r13
  417784:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  417789:	cmp    DWORD PTR [r14+0x48],0xb
  41778e:	ja     417dbd <__flatcc_fb_gen_c_json_parser@@Base+0x1e2d>
  417794:	mov    eax,DWORD PTR [r14+0x48]
  417798:	lea    rdx,[rip+0x2f291]        # 446a30 <_IO_stdin_used@@Base+0x18a30>
  41779f:	movsxd rax,DWORD PTR [rdx+rax*4]
  4177a3:	add    rax,rdx
  4177a6:	notrack jmp rax
  4177a9:	lea    rax,[rip+0x1fb17]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  4177b0:	mov    QWORD PTR [rsp],rax
  4177b4:	mov    r11,rax
  4177b7:	lea    r8,[rip+0x2f1a0]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4177be:	xchg   ax,ax
  4177c0:	mov    rdi,QWORD PTR [rbp+0xd0]
  4177c7:	test   BYTE PTR [r14+0xa4],0x20
  4177cf:	jne    417a98 <__flatcc_fb_gen_c_json_parser@@Base+0x1b08>
  4177d5:	mov    r9,r11
  4177d8:	mov    rcx,r13
  4177db:	lea    rdx,[rip+0x2e25e]        # 445a40 <_IO_stdin_used@@Base+0x17a40>
  4177e2:	mov    esi,0x1
  4177e7:	xor    eax,eax
  4177e9:	call   405400 <__fprintf_chk@plt>
  4177ee:	mov    rdi,QWORD PTR [rbp+0xd0]
  4177f5:	lea    rdx,[rip+0x2f18e]        # 44698a <_IO_stdin_used@@Base+0x1898a>
  4177fc:	mov    esi,0x1
  417801:	xor    eax,eax
  417803:	call   405400 <__fprintf_chk@plt>
  417808:	mov    rbx,QWORD PTR [r14+0x28]
  41780c:	lea    r12,[rip+0x2e115]        # 445928 <_IO_stdin_used@@Base+0x17928>
  417813:	test   rbx,rbx
  417816:	jne    41785d <__flatcc_fb_gen_c_json_parser@@Base+0x18cd>
  417818:	jmp    417a35 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa5>
  41781d:	nop    DWORD PTR [rax]
  417820:	mov    rax,QWORD PTR [rbx+0x8]
  417824:	sub    rsp,0x8
  417828:	mov    r8,QWORD PTR [rax+0x8]
  41782c:	movzx  ecx,BYTE PTR [rbx+0x48]
  417830:	push   r8
  417832:	mov    r9,QWORD PTR [rax]
  417835:	mov    rdi,QWORD PTR [rbp+0xd0]
  41783c:	lea    rdx,[rip+0x2e175]        # 4459b8 <_IO_stdin_used@@Base+0x179b8>
  417843:	mov    esi,0x1
  417848:	xor    eax,eax
  41784a:	call   405400 <__fprintf_chk@plt>
  41784f:	pop    rax
  417850:	pop    rdx
  417851:	mov    rbx,QWORD PTR [rbx]
  417854:	test   rbx,rbx
  417857:	je     417a35 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa5>
  41785d:	movzx  eax,WORD PTR [rbx+0x58]
  417861:	cmp    ax,0x5
  417865:	je     417a60 <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
  41786b:	cmp    ax,0x6
  41786f:	je     417820 <__flatcc_fb_gen_c_json_parser@@Base+0x1890>
  417871:	cmp    ax,0x4
  417875:	je     4179f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a68>
  41787b:	mov    rax,QWORD PTR [rip+0x3a766]        # 451fe8 <stderr@GLIBC_2.2.5>
  417882:	lea    rcx,[rip+0x2dc37]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  417889:	mov    rdi,QWORD PTR [rax]
  41788c:	lea    rdx,[rip+0x1fa00]        # 437293 <_IO_stdin_used@@Base+0x9293>
  417893:	mov    esi,0x1
  417898:	lea    r9,[rip+0x2e049]        # 4458e8 <_IO_stdin_used@@Base+0x178e8>
  41789f:	mov    r8d,0x9d
  4178a5:	xor    eax,eax
  4178a7:	call   405400 <__fprintf_chk@plt>
  4178ac:	lea    rcx,[rip+0x2f2fd]        # 446bb0 <_IO_stdin_used@@Base+0x18bb0>
  4178b3:	mov    edx,0x9d
  4178b8:	lea    rsi,[rip+0x2dc01]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  4178bf:	lea    rdi,[rip+0x20a93]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4178c6:	call   405300 <__assert_fail@plt>
  4178cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4178d0:	lea    rax,[rip+0x1f9e9]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  4178d7:	mov    QWORD PTR [rsp],rax
  4178db:	lea    r11,[rip+0x1f9d5]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  4178e2:	lea    r8,[rip+0x2f075]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4178e9:	jmp    4177c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  4178ee:	lea    rax,[rip+0x1f9f1]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  4178f5:	mov    QWORD PTR [rsp],rax
  4178f9:	lea    r11,[rip+0x1f9dd]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  417900:	lea    r8,[rip+0x2f057]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  417907:	jmp    4177c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  41790c:	lea    rax,[rip+0x1f9c3]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  417913:	mov    QWORD PTR [rsp],rax
  417917:	lea    r11,[rip+0x1f9af]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  41791e:	lea    r8,[rip+0x2f039]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  417925:	jmp    4177c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  41792a:	lea    rax,[rip+0x1f9d0]        # 437301 <_IO_stdin_used@@Base+0x9301>
  417931:	mov    QWORD PTR [rsp],rax
  417935:	lea    r11,[rip+0x1f9bd]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  41793c:	lea    r8,[rip+0x2f01b]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  417943:	jmp    4177c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  417948:	lea    rax,[rip+0x1f9a5]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  41794f:	mov    r8,rbp
  417952:	mov    QWORD PTR [rsp],rax
  417956:	lea    r11,[rip+0x1f990]        # 4372ed <_IO_stdin_used@@Base+0x92ed>
  41795d:	jmp    4177c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  417962:	lea    rax,[rip+0x1f958]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  417969:	mov    QWORD PTR [rsp],rax
  41796d:	lea    r11,[rip+0x1f944]        # 4372b8 <_IO_stdin_used@@Base+0x92b8>
  417974:	lea    r8,[rip+0x2efe3]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  41797b:	jmp    4177c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  417980:	lea    rax,[rip+0x1f960]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  417987:	mov    QWORD PTR [rsp],rax
  41798b:	lea    r11,[rip+0x1f94c]        # 4372de <_IO_stdin_used@@Base+0x92de>
  417992:	lea    r8,[rip+0x2efc5]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  417999:	jmp    4177c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  41799e:	lea    rax,[rip+0x1f932]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  4179a5:	mov    QWORD PTR [rsp],rax
  4179a9:	lea    r11,[rip+0x1f91e]        # 4372ce <_IO_stdin_used@@Base+0x92ce>
  4179b0:	lea    r8,[rip+0x2efa7]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4179b7:	jmp    4177c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  4179bc:	lea    rax,[rip+0x1f93f]        # 437302 <_IO_stdin_used@@Base+0x9302>
  4179c3:	mov    QWORD PTR [rsp],rax
  4179c7:	lea    r11,[rip+0x1f92c]        # 4372fa <_IO_stdin_used@@Base+0x92fa>
  4179ce:	lea    r8,[rip+0x2ef89]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4179d5:	jmp    4177c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  4179da:	lea    rax,[rip+0x1f926]        # 437307 <_IO_stdin_used@@Base+0x9307>
  4179e1:	mov    QWORD PTR [rsp],rax
  4179e5:	mov    r11,rax
  4179e8:	lea    r8,[rip+0x2ef6f]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  4179ef:	jmp    4177c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  4179f4:	nop    DWORD PTR [rax+0x0]
  4179f8:	mov    rax,QWORD PTR [rbx+0x8]
  4179fc:	sub    rsp,0x8
  417a00:	mov    r8,QWORD PTR [rax+0x8]
  417a04:	mov    rcx,QWORD PTR [rbx+0x48]
  417a08:	push   r8
  417a0a:	mov    r9,QWORD PTR [rax]
  417a0d:	mov    rdi,QWORD PTR [rbp+0xd0]
  417a14:	mov    esi,0x1
  417a19:	lea    rdx,[rip+0x2df50]        # 445970 <_IO_stdin_used@@Base+0x17970>
  417a20:	xor    eax,eax
  417a22:	call   405400 <__fprintf_chk@plt>
  417a27:	mov    rbx,QWORD PTR [rbx]
  417a2a:	pop    rcx
  417a2b:	pop    rsi
  417a2c:	test   rbx,rbx
  417a2f:	jne    41785d <__flatcc_fb_gen_c_json_parser@@Base+0x18cd>
  417a35:	mov    rdi,QWORD PTR [rbp+0xd0]
  417a3c:	mov    rcx,QWORD PTR [rsp]
  417a40:	lea    rdx,[rip+0x2dfb9]        # 445a00 <_IO_stdin_used@@Base+0x17a00>
  417a47:	mov    esi,0x1
  417a4c:	xor    eax,eax
  417a4e:	call   405400 <__fprintf_chk@plt>
  417a53:	jmp    417ce2 <__flatcc_fb_gen_c_json_parser@@Base+0x1d52>
  417a58:	nop    DWORD PTR [rax+rax*1+0x0]
  417a60:	mov    rax,QWORD PTR [rbx+0x8]
  417a64:	sub    rsp,0x8
  417a68:	mov    r8,QWORD PTR [rax+0x8]
  417a6c:	mov    rcx,QWORD PTR [rbx+0x48]
  417a70:	push   r8
  417a72:	mov    rdi,QWORD PTR [rbp+0xd0]
  417a79:	mov    r9,QWORD PTR [rax]
  417a7c:	mov    rdx,r12
  417a7f:	mov    esi,0x1
  417a84:	xor    eax,eax
  417a86:	call   405400 <__fprintf_chk@plt>
  417a8b:	pop    rdi
  417a8c:	pop    r8
  417a8e:	jmp    417851 <__flatcc_fb_gen_c_json_parser@@Base+0x18c1>
  417a93:	nop    DWORD PTR [rax+rax*1+0x0]
  417a98:	mov    rax,QWORD PTR [r14+0xb8]
  417a9f:	cmp    rax,0x2
  417aa3:	je     417da0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
  417aa9:	cmp    rax,0x4
  417aad:	je     417d80 <__flatcc_fb_gen_c_json_parser@@Base+0x1df0>
  417ab3:	cmp    rax,0x1
  417ab7:	lea    rdx,[rip+0x1f7f9]        # 4372b7 <_IO_stdin_used@@Base+0x92b7>
  417abe:	lea    r15,[rip+0x1f834]        # 4372f9 <_IO_stdin_used@@Base+0x92f9>
  417ac5:	cmovne r15,rdx
  417ac9:	lea    r12,[rip+0x2ee93]        # 446963 <_IO_stdin_used@@Base+0x18963>
  417ad0:	lea    rdx,[rip+0x2ee88]        # 44695f <_IO_stdin_used@@Base+0x1895f>
  417ad7:	mov    ebx,0xff
  417adc:	mov    rax,0xffffffffffffffff
  417ae3:	cmovne r12,rdx
  417ae7:	cmovne rbx,rax
  417aeb:	mov    rax,QWORD PTR [r14+0x28]
  417aef:	test   rax,rax
  417af2:	jne    417b12 <__flatcc_fb_gen_c_json_parser@@Base+0x1b82>
  417af4:	jmp    417b37 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba7>
  417af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417b00:	cmp    dx,0x4
  417b04:	je     417ca0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d10>
  417b0a:	mov    rax,QWORD PTR [rax]
  417b0d:	test   rax,rax
  417b10:	je     417b37 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba7>
  417b12:	movzx  edx,WORD PTR [rax+0x58]
  417b16:	cmp    dx,0x5
  417b1a:	je     417ca0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d10>
  417b20:	cmp    dx,0x6
  417b24:	jne    417b00 <__flatcc_fb_gen_c_json_parser@@Base+0x1b70>
  417b26:	movzx  edx,BYTE PTR [rax+0x48]
  417b2a:	mov    rax,QWORD PTR [rax]
  417b2d:	andn   rbx,rdx,rbx
  417b32:	test   rax,rax
  417b35:	jne    417b12 <__flatcc_fb_gen_c_json_parser@@Base+0x1b82>
  417b37:	mov    r9,r11
  417b3a:	mov    esi,0x1
  417b3f:	xor    eax,eax
  417b41:	mov    rcx,r13
  417b44:	lea    rdx,[rip+0x2def5]        # 445a40 <_IO_stdin_used@@Base+0x17a40>
  417b4b:	mov    QWORD PTR [rsp+0x8],r11
  417b50:	call   405400 <__fprintf_chk@plt>
  417b55:	mov    r11,QWORD PTR [rsp+0x8]
  417b5a:	mov    rdi,r15
  417b5d:	mov    rsi,r11
  417b60:	call   405350 <strcmp@plt>
  417b65:	test   eax,eax
  417b67:	je     417d30 <__flatcc_fb_gen_c_json_parser@@Base+0x1da0>
  417b6d:	mov    rdi,QWORD PTR [rbp+0xd0]
  417b74:	mov    r8,r15
  417b77:	mov    rcx,r15
  417b7a:	lea    rdx,[rip+0x2ede7]        # 446968 <_IO_stdin_used@@Base+0x18968>
  417b81:	mov    esi,0x1
  417b86:	xor    eax,eax
  417b88:	call   405400 <__fprintf_chk@plt>
  417b8d:	mov    rdi,QWORD PTR [rbp+0xd0]
  417b94:	lea    rdx,[rip+0x2dc25]        # 4457c0 <_IO_stdin_used@@Base+0x177c0>
  417b9b:	mov    esi,0x1
  417ba0:	xor    eax,eax
  417ba2:	call   405400 <__fprintf_chk@plt>
  417ba7:	mov    rdi,QWORD PTR [rbp+0xd0]
  417bae:	xor    eax,eax
  417bb0:	lea    rdx,[rip+0x2eda6]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  417bb7:	mov    esi,0x1
  417bbc:	call   405400 <__fprintf_chk@plt>
  417bc1:	test   rbx,rbx
  417bc4:	jne    417d58 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc8>
  417bca:	mov    rdi,QWORD PTR [rbp+0xd0]
  417bd1:	lea    rdx,[rip+0x2dc80]        # 445858 <_IO_stdin_used@@Base+0x17858>
  417bd8:	mov    esi,0x1
  417bdd:	xor    eax,eax
  417bdf:	call   405400 <__fprintf_chk@plt>
  417be4:	mov    rbx,QWORD PTR [r14+0x28]
  417be8:	lea    r13,[rip+0x2dca9]        # 445898 <_IO_stdin_used@@Base+0x17898>
  417bef:	test   rbx,rbx
  417bf2:	jne    417c39 <__flatcc_fb_gen_c_json_parser@@Base+0x1ca9>
  417bf4:	jmp    417cc8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d38>
  417bf9:	nop    DWORD PTR [rax+0x0]
  417c00:	mov    rax,QWORD PTR [rbx+0x8]
  417c04:	movzx  ecx,BYTE PTR [rbx+0x48]
  417c08:	mov    r9,QWORD PTR [rax+0x8]
  417c0c:	push   r9
  417c0e:	mov    rdi,QWORD PTR [rbp+0xd0]
  417c15:	mov    r8,r12
  417c18:	push   QWORD PTR [rax]
  417c1a:	mov    rdx,r13
  417c1d:	mov    esi,0x1
  417c22:	xor    eax,eax
  417c24:	call   405400 <__fprintf_chk@plt>
  417c29:	mov    rbx,QWORD PTR [rbx]
  417c2c:	pop    r9
  417c2e:	pop    r10
  417c30:	test   rbx,rbx
  417c33:	je     417cc8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d38>
  417c39:	movzx  eax,WORD PTR [rbx+0x58]
  417c3d:	cmp    ax,0x5
  417c41:	je     417cb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d20>
  417c43:	cmp    ax,0x6
  417c47:	je     417c00 <__flatcc_fb_gen_c_json_parser@@Base+0x1c70>
  417c49:	cmp    ax,0x4
  417c4d:	je     417cb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d20>
  417c4f:	mov    rax,QWORD PTR [rip+0x3a392]        # 451fe8 <stderr@GLIBC_2.2.5>
  417c56:	lea    rcx,[rip+0x2d863]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  417c5d:	mov    rdi,QWORD PTR [rax]
  417c60:	lea    rdx,[rip+0x1f62c]        # 437293 <_IO_stdin_used@@Base+0x9293>
  417c67:	mov    esi,0x1
  417c6c:	lea    r9,[rip+0x2dc75]        # 4458e8 <_IO_stdin_used@@Base+0x178e8>
  417c73:	mov    r8d,0x86
  417c79:	xor    eax,eax
  417c7b:	call   405400 <__fprintf_chk@plt>
  417c80:	lea    rcx,[rip+0x2ef29]        # 446bb0 <_IO_stdin_used@@Base+0x18bb0>
  417c87:	mov    edx,0x86
  417c8c:	lea    rsi,[rip+0x2d82d]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  417c93:	lea    rdi,[rip+0x206bf]        # 438359 <_IO_stdin_used@@Base+0xa359>
  417c9a:	call   405300 <__assert_fail@plt>
  417c9f:	nop
  417ca0:	mov    rdx,QWORD PTR [rax+0x48]
  417ca4:	andn   rbx,rdx,rbx
  417ca9:	jmp    417b0a <__flatcc_fb_gen_c_json_parser@@Base+0x1b7a>
  417cae:	xchg   ax,ax
  417cb0:	mov    rax,QWORD PTR [rbx+0x8]
  417cb4:	mov    rcx,QWORD PTR [rbx+0x48]
  417cb8:	mov    r9,QWORD PTR [rax+0x8]
  417cbc:	jmp    417c0c <__flatcc_fb_gen_c_json_parser@@Base+0x1c7c>
  417cc1:	nop    DWORD PTR [rax+0x0]
  417cc8:	mov    rdi,QWORD PTR [rbp+0xd0]
  417ccf:	lea    rdx,[rip+0x2db82]        # 445858 <_IO_stdin_used@@Base+0x17858>
  417cd6:	mov    esi,0x1
  417cdb:	xor    eax,eax
  417cdd:	call   405400 <__fprintf_chk@plt>
  417ce2:	mov    rdi,QWORD PTR [rbp+0xd0]
  417ce9:	mov    esi,0x1
  417cee:	xor    eax,eax
  417cf0:	lea    rdx,[rip+0x2ec64]        # 44695b <_IO_stdin_used@@Base+0x1895b>
  417cf7:	call   405400 <__fprintf_chk@plt>
  417cfc:	xor    eax,eax
  417cfe:	mov    rsi,QWORD PTR [rsp+0x1e8]
  417d06:	xor    rsi,QWORD PTR fs:0x28
  417d0f:	jne    417db8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e28>
  417d15:	add    rsp,0x1f8
  417d1c:	pop    rbx
  417d1d:	pop    rbp
  417d1e:	pop    r12
  417d20:	pop    r13
  417d22:	pop    r14
  417d24:	pop    r15
  417d26:	ret    
  417d27:	nop    WORD PTR [rax+rax*1+0x0]
  417d30:	mov    rdi,QWORD PTR [rbp+0xd0]
  417d37:	mov    rcx,r15
  417d3a:	lea    rdx,[rip+0x2ec3a]        # 44697b <_IO_stdin_used@@Base+0x1897b>
  417d41:	mov    esi,0x1
  417d46:	xor    eax,eax
  417d48:	call   405400 <__fprintf_chk@plt>
  417d4d:	jmp    417b8d <__flatcc_fb_gen_c_json_parser@@Base+0x1bfd>
  417d52:	nop    WORD PTR [rax+rax*1+0x0]
  417d58:	mov    rdi,QWORD PTR [rbp+0xd0]
  417d5f:	mov    r8,QWORD PTR [rsp]
  417d63:	mov    rcx,rbx
  417d66:	lea    rdx,[rip+0x2da8b]        # 4457f8 <_IO_stdin_used@@Base+0x177f8>
  417d6d:	mov    esi,0x1
  417d72:	xor    eax,eax
  417d74:	call   405400 <__fprintf_chk@plt>
  417d79:	jmp    417bca <__flatcc_fb_gen_c_json_parser@@Base+0x1c3a>
  417d7e:	xchg   ax,ax
  417d80:	lea    r15,[rip+0x1f556]        # 4372dd <_IO_stdin_used@@Base+0x92dd>
  417d87:	lea    r12,[rip+0x2ebd7]        # 446965 <_IO_stdin_used@@Base+0x18965>
  417d8e:	mov    ebx,0xffffffff
  417d93:	jmp    417aeb <__flatcc_fb_gen_c_json_parser@@Base+0x1b5b>
  417d98:	nop    DWORD PTR [rax+rax*1+0x0]
  417da0:	lea    r15,[rip+0x1f526]        # 4372cd <_IO_stdin_used@@Base+0x92cd>
  417da7:	lea    r12,[rip+0x2ebb5]        # 446963 <_IO_stdin_used@@Base+0x18963>
  417dae:	mov    ebx,0xffff
  417db3:	jmp    417aeb <__flatcc_fb_gen_c_json_parser@@Base+0x1b5b>
  417db8:	call   4052d0 <__stack_chk_fail@plt>
  417dbd:	call   417140 <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
  417dc2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  417dcd:	nop    DWORD PTR [rax]
  417dd0:	push   r15
  417dd2:	mov    ecx,0x1d
  417dd7:	push   r14
  417dd9:	push   r13
  417ddb:	push   r12
  417ddd:	mov    r12,rdi
  417de0:	push   rbp
  417de1:	mov    rbp,rsi
  417de4:	push   rbx
  417de5:	sub    rsp,0x1f8
  417dec:	mov    rax,QWORD PTR fs:0x28
  417df5:	mov    QWORD PTR [rsp+0x1e8],rax
  417dfd:	xor    eax,eax
  417dff:	lea    rdi,[rsp+0x10]
  417e04:	mov    QWORD PTR [rsp+0x8],rdi
  417e09:	mov    rdx,QWORD PTR [rsp+0x8]
  417e0e:	rep stos QWORD PTR es:[rdi],rax
  417e11:	lea    rcx,[rsp+0x100]
  417e19:	mov    rbx,rcx
  417e1c:	mov    QWORD PTR [rsp],rcx
  417e20:	mov    rdi,rbx
  417e23:	mov    ecx,0x1d
  417e28:	rep stos QWORD PTR es:[rdi],rax
  417e2b:	mov    rdi,QWORD PTR [rsi+0x18]
  417e2f:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  417e34:	mov    r13,QWORD PTR [rbp+0xa8]
  417e3b:	mov    esi,0x8
  417e40:	mov    rdi,r13
  417e43:	call   405340 <calloc@plt>
  417e48:	mov    rbx,rax
  417e4b:	test   r13,r13
  417e4e:	je     417e59 <__flatcc_fb_gen_c_json_parser@@Base+0x1ec9>
  417e50:	test   rax,rax
  417e53:	je     4187da <__flatcc_fb_gen_c_json_parser@@Base+0x284a>
  417e59:	mov    rax,QWORD PTR [rbp+0x28]
  417e5d:	test   rax,rax
  417e60:	je     417e7b <__flatcc_fb_gen_c_json_parser@@Base+0x1eeb>
  417e62:	nop    WORD PTR [rax+rax*1+0x0]
  417e68:	mov    rdx,QWORD PTR [rax+0x88]
  417e6f:	mov    QWORD PTR [rbx+rdx*8],rax
  417e73:	mov    rax,QWORD PTR [rax]
  417e76:	test   rax,rax
  417e79:	jne    417e68 <__flatcc_fb_gen_c_json_parser@@Base+0x1ed8>
  417e7b:	mov    rcx,QWORD PTR [rsp+0x8]
  417e80:	mov    rdi,QWORD PTR [r12]
  417e84:	xor    eax,eax
  417e86:	lea    rdx,[rip+0x2dc2b]        # 445ab8 <_IO_stdin_used@@Base+0x17ab8>
  417e8d:	mov    esi,0x1
  417e92:	call   405400 <__fprintf_chk@plt>
  417e97:	cmp    QWORD PTR [rbp+0xa8],0x0
  417e9f:	je     418421 <__flatcc_fb_gen_c_json_parser@@Base+0x2491>
  417ea5:	mov    rdi,QWORD PTR [r12]
  417ea9:	xor    r15d,r15d
  417eac:	lea    r13,[rip+0x2ebad]        # 446a60 <_IO_stdin_used@@Base+0x18a60>
  417eb3:	nop    DWORD PTR [rax+rax*1+0x0]
  417eb8:	mov    r14,QWORD PTR [rbx+r15*8]
  417ebc:	test   r14,r14
  417ebf:	je     417fed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  417ec5:	test   BYTE PTR [r14+0x70],0x4
  417eca:	jne    417fed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  417ed0:	lea    rdx,[rip+0x2eac6]        # 44699d <_IO_stdin_used@@Base+0x1899d>
  417ed7:	mov    esi,0x1
  417edc:	xor    eax,eax
  417ede:	call   405400 <__fprintf_chk@plt>
  417ee3:	movzx  eax,WORD PTR [r14+0x28]
  417ee8:	sub    eax,0x7
  417eeb:	cmp    ax,0x8
  417eef:	ja     418118 <__flatcc_fb_gen_c_json_parser@@Base+0x2188>
  417ef5:	movzx  eax,ax
  417ef8:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  417efd:	add    rax,r13
  417f00:	notrack jmp rax
  417f03:	nop    DWORD PTR [rax+rax*1+0x0]
  417f08:	mov    rsi,QWORD PTR [r14+0x18]
  417f0c:	mov    rdx,QWORD PTR [rsp]
  417f10:	mov    rdi,QWORD PTR [rsi+0x18]
  417f14:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  417f19:	mov    rax,QWORD PTR [r14+0x18]
  417f1d:	movzx  eax,WORD PTR [rax+0x10]
  417f21:	cmp    ax,0x1
  417f25:	je     418258 <__flatcc_fb_gen_c_json_parser@@Base+0x22c8>
  417f2b:	test   ax,ax
  417f2e:	je     418230 <__flatcc_fb_gen_c_json_parser@@Base+0x22a0>
  417f34:	cmp    ax,0x3
  417f38:	jne    418128 <__flatcc_fb_gen_c_json_parser@@Base+0x2198>
  417f3e:	cmp    DWORD PTR [r14+0x18],0xb
  417f43:	ja     4186e5 <__flatcc_fb_gen_c_json_parser@@Base+0x2755>
  417f49:	mov    eax,DWORD PTR [r14+0x18]
  417f4d:	lea    rcx,[rip+0x2eb30]        # 446a84 <_IO_stdin_used@@Base+0x18a84>
  417f54:	movsxd rax,DWORD PTR [rcx+rax*4]
  417f58:	add    rax,rcx
  417f5b:	notrack jmp rax
  417f5e:	xchg   ax,ax
  417f60:	mov    rsi,QWORD PTR [r14+0x18]
  417f64:	mov    rdx,QWORD PTR [rsp]
  417f68:	mov    rdi,QWORD PTR [rsi+0x18]
  417f6c:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  417f71:	mov    rdx,QWORD PTR [r14+0x18]
  417f75:	movzx  eax,WORD PTR [rdx+0x10]
  417f79:	cmp    ax,0x1
  417f7d:	je     418208 <__flatcc_fb_gen_c_json_parser@@Base+0x2278>
  417f83:	test   ax,ax
  417f86:	je     4181e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2250>
  417f8c:	cmp    ax,0x3
  417f90:	jne    418178 <__flatcc_fb_gen_c_json_parser@@Base+0x21e8>
  417f96:	cmp    DWORD PTR [rdx+0x48],0xb
  417f9a:	ja     4186e5 <__flatcc_fb_gen_c_json_parser@@Base+0x2755>
  417fa0:	mov    eax,DWORD PTR [rdx+0x48]
  417fa3:	lea    rdx,[rip+0x2eb0a]        # 446ab4 <_IO_stdin_used@@Base+0x18ab4>
  417faa:	movsxd rax,DWORD PTR [rdx+rax*4]
  417fae:	add    rax,rdx
  417fb1:	notrack jmp rax
  417fb4:	nop    DWORD PTR [rax+0x0]
  417fb8:	mov    rax,QWORD PTR [r14+0x8]
  417fbc:	sub    rsp,0x8
  417fc0:	mov    r8,QWORD PTR [rax+0x8]
  417fc4:	mov    rcx,QWORD PTR [r14+0x88]
  417fcb:	push   r8
  417fcd:	mov    r9,QWORD PTR [rax]
  417fd0:	lea    rdx,[rip+0x2dd61]        # 445d38 <_IO_stdin_used@@Base+0x17d38>
  417fd7:	mov    rdi,QWORD PTR [r12]
  417fdb:	mov    esi,0x1
  417fe0:	xor    eax,eax
  417fe2:	call   405400 <__fprintf_chk@plt>
  417fe7:	pop    rax
  417fe8:	mov    rdi,QWORD PTR [r12]
  417fec:	pop    rdx
  417fed:	inc    r15
  417ff0:	cmp    r15,QWORD PTR [rbp+0xa8]
  417ff7:	jb     417eb8 <__flatcc_fb_gen_c_json_parser@@Base+0x1f28>
  417ffd:	lea    rdx,[rip+0x2e956]        # 44695a <_IO_stdin_used@@Base+0x1895a>
  418004:	mov    esi,0x1
  418009:	xor    eax,eax
  41800b:	call   405400 <__fprintf_chk@plt>
  418010:	mov    rcx,QWORD PTR [rsp+0x8]
  418015:	mov    rdi,QWORD PTR [r12]
  418019:	mov    r8,rcx
  41801c:	lea    rdx,[rip+0x2e1bd]        # 4461e0 <_IO_stdin_used@@Base+0x181e0>
  418023:	mov    esi,0x1
  418028:	xor    eax,eax
  41802a:	call   405400 <__fprintf_chk@plt>
  41802f:	mov    rdi,rbx
  418032:	call   405240 <free@plt>
  418037:	xor    eax,eax
  418039:	mov    rcx,QWORD PTR [rsp+0x1e8]
  418041:	xor    rcx,QWORD PTR fs:0x28
  41804a:	jne    418880 <__flatcc_fb_gen_c_json_parser@@Base+0x28f0>
  418050:	add    rsp,0x1f8
  418057:	pop    rbx
  418058:	pop    rbp
  418059:	pop    r12
  41805b:	pop    r13
  41805d:	pop    r14
  41805f:	pop    r15
  418061:	ret    
  418062:	nop    WORD PTR [rax+rax*1+0x0]
  418068:	cmp    DWORD PTR [r14+0x18],0xb
  41806d:	ja     418695 <__flatcc_fb_gen_c_json_parser@@Base+0x2705>
  418073:	mov    eax,DWORD PTR [r14+0x18]
  418077:	lea    rdx,[rip+0x2ea66]        # 446ae4 <_IO_stdin_used@@Base+0x18ae4>
  41807e:	movsxd rax,DWORD PTR [rdx+rax*4]
  418082:	add    rax,rdx
  418085:	notrack jmp rax
  418088:	nop    DWORD PTR [rax+rax*1+0x0]
  418090:	movzx  eax,WORD PTR [r14+0x70]
  418095:	test   ah,0xc
  418098:	jne    4181b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2220>
  41809e:	mov    rsi,QWORD PTR [r14+0x90]
  4180a5:	test   rsi,rsi
  4180a8:	je     4182a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
  4180ae:	mov    rdi,QWORD PTR [rsi+0x18]
  4180b2:	mov    rdx,QWORD PTR [rsp]
  4180b6:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  4180bb:	mov    rax,QWORD PTR [r14+0x90]
  4180c2:	mov    rcx,QWORD PTR [r14+0x88]
  4180c9:	cmp    WORD PTR [rax+0x10],0x0
  4180ce:	mov    rax,QWORD PTR [r14+0x8]
  4180d2:	mov    r8,QWORD PTR [rax+0x8]
  4180d6:	jne    418290 <__flatcc_fb_gen_c_json_parser@@Base+0x2300>
  4180dc:	push   QWORD PTR [rsp]
  4180df:	lea    rdx,[rip+0x2db52]        # 445c38 <_IO_stdin_used@@Base+0x17c38>
  4180e6:	push   r8
  4180e8:	mov    r9,QWORD PTR [rax]
  4180eb:	jmp    417fd7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  4180f0:	mov    rax,QWORD PTR [r14+0x8]
  4180f4:	sub    rsp,0x8
  4180f8:	mov    r8,QWORD PTR [rax+0x8]
  4180fc:	mov    rcx,QWORD PTR [r14+0x88]
  418103:	mov    r9,QWORD PTR [rax]
  418106:	push   r8
  418108:	lea    rdx,[rip+0x2dc69]        # 445d78 <_IO_stdin_used@@Base+0x17d78>
  41810f:	jmp    417fd7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  418114:	nop    DWORD PTR [rax+0x0]
  418118:	mov    rdi,QWORD PTR [r12]
  41811c:	jmp    417fed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  418121:	nop    DWORD PTR [rax+0x0]
  418128:	cmp    ax,0x4
  41812c:	jne    418830 <__flatcc_fb_gen_c_json_parser@@Base+0x28a0>
  418132:	sub    rsp,0x8
  418136:	mov    rax,QWORD PTR [r14+0x8]
  41813a:	mov    rsi,QWORD PTR [rsp+0x8]
  41813f:	mov    r8,QWORD PTR [rax+0x8]
  418143:	mov    rcx,QWORD PTR [r14+0x88]
  41814a:	push   rsi
  41814b:	lea    rdx,[rip+0x2dfce]        # 446120 <_IO_stdin_used@@Base+0x18120>
  418152:	push   rsi
  418153:	push   r8
  418155:	mov    r9,QWORD PTR [rax]
  418158:	mov    rdi,QWORD PTR [r12]
  41815c:	mov    esi,0x1
  418161:	xor    eax,eax
  418163:	call   405400 <__fprintf_chk@plt>
  418168:	mov    rdi,QWORD PTR [r12]
  41816c:	add    rsp,0x20
  418170:	jmp    417fed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  418175:	nop    DWORD PTR [rax]
  418178:	cmp    ax,0x4
  41817c:	jne    41878a <__flatcc_fb_gen_c_json_parser@@Base+0x27fa>
  418182:	sub    rsp,0x8
  418186:	mov    rax,QWORD PTR [r14+0x8]
  41818a:	mov    rsi,QWORD PTR [rsp+0x8]
  41818f:	mov    r8,QWORD PTR [rax+0x8]
  418193:	mov    rcx,QWORD PTR [r14+0x88]
  41819a:	push   rsi
  41819b:	lea    rdx,[rip+0x2ddb6]        # 445f58 <_IO_stdin_used@@Base+0x17f58>
  4181a2:	push   rsi
  4181a3:	push   r8
  4181a5:	mov    r9,QWORD PTR [rax]
  4181a8:	jmp    418158 <__flatcc_fb_gen_c_json_parser@@Base+0x21c8>
  4181aa:	nop    WORD PTR [rax+rax*1+0x0]
  4181b0:	shr    ax,0xa
  4181b4:	mov    rdx,QWORD PTR [r14+0x8]
  4181b8:	xor    eax,0x1
  4181bb:	and    eax,0x1
  4181be:	mov    r8,QWORD PTR [rdx+0x8]
  4181c2:	mov    rcx,QWORD PTR [r14+0x88]
  4181c9:	push   rax
  4181ca:	mov    r9,QWORD PTR [rdx]
  4181cd:	lea    rdx,[rip+0x2da14]        # 445be8 <_IO_stdin_used@@Base+0x17be8>
  4181d4:	push   r8
  4181d6:	jmp    417fd7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  4181db:	nop    DWORD PTR [rax+rax*1+0x0]
  4181e0:	mov    rax,QWORD PTR [r14+0x8]
  4181e4:	mov    rcx,QWORD PTR [r14+0x88]
  4181eb:	mov    r8,QWORD PTR [rax+0x8]
  4181ef:	push   QWORD PTR [rsp]
  4181f2:	lea    rdx,[rip+0x2dd07]        # 445f00 <_IO_stdin_used@@Base+0x17f00>
  4181f9:	push   r8
  4181fb:	mov    r9,QWORD PTR [rax]
  4181fe:	jmp    417fd7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  418203:	nop    DWORD PTR [rax+rax*1+0x0]
  418208:	mov    rax,QWORD PTR [r14+0x8]
  41820c:	mov    rcx,QWORD PTR [r14+0x88]
  418213:	mov    r8,QWORD PTR [rax+0x8]
  418217:	push   QWORD PTR [rsp]
  41821a:	lea    rdx,[rip+0x2dc87]        # 445ea8 <_IO_stdin_used@@Base+0x17ea8>
  418221:	push   r8
  418223:	mov    r9,QWORD PTR [rax]
  418226:	jmp    417fd7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  41822b:	nop    DWORD PTR [rax+rax*1+0x0]
  418230:	mov    rax,QWORD PTR [r14+0x8]
  418234:	mov    rcx,QWORD PTR [r14+0x88]
  41823b:	mov    r8,QWORD PTR [rax+0x8]
  41823f:	push   QWORD PTR [rsp]
  418242:	lea    rdx,[rip+0x2ddbf]        # 446008 <_IO_stdin_used@@Base+0x18008>
  418249:	push   r8
  41824b:	mov    r9,QWORD PTR [rax]
  41824e:	jmp    417fd7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  418253:	nop    DWORD PTR [rax+rax*1+0x0]
  418258:	mov    rax,QWORD PTR [r14+0x8]
  41825c:	sub    rsp,0x8
  418260:	mov    r8,QWORD PTR [rax+0x8]
  418264:	mov    rcx,QWORD PTR [r14+0x88]
  41826b:	push   QWORD PTR [rsp+0x8]
  41826f:	lea    rdx,[rip+0x2de4a]        # 4460c0 <_IO_stdin_used@@Base+0x180c0>
  418276:	push   QWORD PTR [r14+0x80]
  41827d:	mov    r9,QWORD PTR [rax]
  418280:	push   r8
  418282:	jmp    418158 <__flatcc_fb_gen_c_json_parser@@Base+0x21c8>
  418287:	nop    WORD PTR [rax+rax*1+0x0]
  418290:	push   QWORD PTR [rsp]
  418293:	lea    rdx,[rip+0x2d9fe]        # 445c98 <_IO_stdin_used@@Base+0x17c98>
  41829a:	push   r8
  41829c:	mov    r9,QWORD PTR [rax]
  41829f:	jmp    417fd7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  4182a4:	nop    DWORD PTR [rax+0x0]
  4182a8:	cmp    DWORD PTR [r14+0x18],0xb
  4182ad:	ja     4186e5 <__flatcc_fb_gen_c_json_parser@@Base+0x2755>
  4182b3:	mov    eax,DWORD PTR [r14+0x18]
  4182b7:	lea    rdx,[rip+0x2e856]        # 446b14 <_IO_stdin_used@@Base+0x18b14>
  4182be:	movsxd rax,DWORD PTR [rdx+rax*4]
  4182c2:	add    rax,rdx
  4182c5:	notrack jmp rax
  4182c8:	lea    rcx,[rip+0x1eff8]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  4182cf:	nop
  4182d0:	movzx  eax,WORD PTR [r14+0x58]
  4182d5:	cmp    ax,0x4
  4182d9:	je     418340 <__flatcc_fb_gen_c_json_parser@@Base+0x23b0>
  4182db:	ja     4183d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2448>
  4182e1:	cmp    ax,0x3
  4182e5:	jne    4186ea <__flatcc_fb_gen_c_json_parser@@Base+0x275a>
  4182eb:	mov    rax,QWORD PTR [r14+0x8]
  4182ef:	mov    r8,QWORD PTR [r14+0x88]
  4182f6:	mov    r9,QWORD PTR [rax+0x8]
  4182fa:	vmovsd xmm0,QWORD PTR [r14+0x48]
  418300:	push   r9
  418302:	mov    rdi,QWORD PTR [r12]
  418306:	lea    rdx,[rip+0x2d89b]        # 445ba8 <_IO_stdin_used@@Base+0x17ba8>
  41830d:	push   QWORD PTR [rax]
  41830f:	mov    esi,0x1
  418314:	mov    eax,0x1
  418319:	call   405400 <__fprintf_chk@plt>
  41831e:	pop    r8
  418320:	mov    rdi,QWORD PTR [r12]
  418324:	pop    r9
  418326:	jmp    417fed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  41832b:	movzx  eax,WORD PTR [r14+0x58]
  418330:	lea    rcx,[rip+0x1efd0]        # 437307 <_IO_stdin_used@@Base+0x9307>
  418337:	cmp    ax,0x4
  41833b:	jne    4182db <__flatcc_fb_gen_c_json_parser@@Base+0x234b>
  41833d:	nop    DWORD PTR [rax]
  418340:	mov    rax,QWORD PTR [r14+0x8]
  418344:	sub    rsp,0x8
  418348:	mov    r9,QWORD PTR [rax+0x8]
  41834c:	mov    r8,QWORD PTR [r14+0x88]
  418353:	push   QWORD PTR [r14+0x48]
  418357:	lea    rdx,[rip+0x2d80a]        # 445b68 <_IO_stdin_used@@Base+0x17b68>
  41835e:	push   r9
  418360:	push   QWORD PTR [rax]
  418362:	jmp    418404 <__flatcc_fb_gen_c_json_parser@@Base+0x2474>
  418367:	lea    rcx,[rip+0x1ef94]        # 437302 <_IO_stdin_used@@Base+0x9302>
  41836e:	jmp    4182d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  418373:	lea    rcx,[rip+0x1ef5d]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  41837a:	jmp    4182d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  41837f:	lea    rcx,[rip+0x1ef61]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  418386:	jmp    4182d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  41838b:	lea    rcx,[rip+0x1ef2f]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  418392:	jmp    4182d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  418397:	lea    rcx,[rip+0x1ef56]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  41839e:	jmp    4182d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  4183a3:	lea    rcx,[rip+0x1ef57]        # 437301 <_IO_stdin_used@@Base+0x9301>
  4183aa:	jmp    4182d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  4183af:	lea    rcx,[rip+0x1ef20]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  4183b6:	jmp    4182d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  4183bb:	lea    rcx,[rip+0x1ef24]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  4183c2:	jmp    4182d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  4183c7:	lea    rcx,[rip+0x1eef2]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  4183ce:	jmp    4182d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  4183d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4183d8:	cmp    ax,0x6
  4183dc:	ja     4186ea <__flatcc_fb_gen_c_json_parser@@Base+0x275a>
  4183e2:	mov    rax,QWORD PTR [r14+0x8]
  4183e6:	sub    rsp,0x8
  4183ea:	mov    r9,QWORD PTR [rax+0x8]
  4183ee:	mov    r8,QWORD PTR [r14+0x88]
  4183f5:	push   QWORD PTR [r14+0x48]
  4183f9:	lea    rdx,[rip+0x2d728]        # 445b28 <_IO_stdin_used@@Base+0x17b28>
  418400:	push   r9
  418402:	push   QWORD PTR [rax]
  418404:	mov    rdi,QWORD PTR [r12]
  418408:	mov    esi,0x1
  41840d:	xor    eax,eax
  41840f:	call   405400 <__fprintf_chk@plt>
  418414:	mov    rdi,QWORD PTR [r12]
  418418:	add    rsp,0x20
  41841c:	jmp    417fed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  418421:	mov    rdi,QWORD PTR [r12]
  418425:	lea    rdx,[rip+0x2e52e]        # 44695a <_IO_stdin_used@@Base+0x1895a>
  41842c:	mov    esi,0x1
  418431:	xor    eax,eax
  418433:	call   405400 <__fprintf_chk@plt>
  418438:	mov    rcx,QWORD PTR [rsp+0x8]
  41843d:	mov    rdi,QWORD PTR [r12]
  418441:	xor    eax,eax
  418443:	mov    r8,rcx
  418446:	lea    rdx,[rip+0x2dd93]        # 4461e0 <_IO_stdin_used@@Base+0x181e0>
  41844d:	mov    esi,0x1
  418452:	call   405400 <__fprintf_chk@plt>
  418457:	test   rbx,rbx
  41845a:	je     418037 <__flatcc_fb_gen_c_json_parser@@Base+0x20a7>
  418460:	jmp    41802f <__flatcc_fb_gen_c_json_parser@@Base+0x209f>
  418465:	nop    DWORD PTR [rax]
  418468:	lea    rcx,[rip+0x1ee58]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  41846f:	nop
  418470:	movzx  eax,WORD PTR [r14+0x58]
  418475:	cmp    ax,0x4
  418479:	jne    4185c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2630>
  41847f:	mov    rax,QWORD PTR [r14+0x8]
  418483:	mov    r8,QWORD PTR [r14+0x88]
  41848a:	mov    r9,QWORD PTR [rax+0x8]
  41848e:	push   QWORD PTR [rsp]
  418491:	lea    rdx,[rip+0x2d980]        # 445e18 <_IO_stdin_used@@Base+0x17e18>
  418498:	push   QWORD PTR [r14+0x48]
  41849c:	push   r9
  41849e:	push   QWORD PTR [rax]
  4184a0:	jmp    418404 <__flatcc_fb_gen_c_json_parser@@Base+0x2474>
  4184a5:	lea    rcx,[rip+0x1ee14]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  4184ac:	nop    DWORD PTR [rax+0x0]
  4184b0:	mov    rax,QWORD PTR [r14+0x8]
  4184b4:	mov    r8,QWORD PTR [r14+0x88]
  4184bb:	mov    r9,QWORD PTR [rax+0x8]
  4184bf:	push   QWORD PTR [rsp]
  4184c2:	lea    rdx,[rip+0x2db97]        # 446060 <_IO_stdin_used@@Base+0x18060>
  4184c9:	push   QWORD PTR [rbp+0xb8]
  4184cf:	push   r9
  4184d1:	push   QWORD PTR [rax]
  4184d3:	jmp    418404 <__flatcc_fb_gen_c_json_parser@@Base+0x2474>
  4184d8:	lea    rcx,[rip+0x1ede2]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  4184df:	jmp    4184b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  4184e1:	lea    rcx,[rip+0x1edff]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  4184e8:	jmp    4184b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  4184ea:	lea    rcx,[rip+0x1ede6]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  4184f1:	jmp    4184b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  4184f3:	lea    rcx,[rip+0x1ee08]        # 437302 <_IO_stdin_used@@Base+0x9302>
  4184fa:	jmp    4184b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  4184fc:	lea    rcx,[rip+0x1ee04]        # 437307 <_IO_stdin_used@@Base+0x9307>
  418503:	jmp    4184b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  418505:	lea    rcx,[rip+0x1edbb]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  41850c:	jmp    4184b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  41850e:	lea    rcx,[rip+0x1edab]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  418515:	jmp    418470 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  41851a:	lea    rcx,[rip+0x1edc5]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  418521:	jmp    418470 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  418526:	lea    rcx,[rip+0x1eda9]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  41852d:	jmp    418470 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  418532:	lea    rcx,[rip+0x1edc8]        # 437301 <_IO_stdin_used@@Base+0x9301>
  418539:	jmp    418470 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  41853e:	lea    rcx,[rip+0x1edaf]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  418545:	jmp    418470 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  41854a:	lea    rcx,[rip+0x1ed70]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  418551:	jmp    418470 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  418556:	lea    rcx,[rip+0x1ed8a]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  41855d:	jmp    418470 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  418562:	lea    rcx,[rip+0x1ed6e]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  418569:	jmp    418470 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  41856e:	lea    rcx,[rip+0x1ed8d]        # 437302 <_IO_stdin_used@@Base+0x9302>
  418575:	jmp    418470 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  41857a:	lea    rcx,[rip+0x1ed86]        # 437307 <_IO_stdin_used@@Base+0x9307>
  418581:	jmp    418470 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  418586:	lea    rcx,[rip+0x1ed59]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  41858d:	jmp    4184b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  418592:	lea    rcx,[rip+0x1ed3d]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  418599:	jmp    4184b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  41859e:	lea    rcx,[rip+0x1ed5c]        # 437301 <_IO_stdin_used@@Base+0x9301>
  4185a5:	jmp    4184b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  4185aa:	lea    rcx,[rip+0x1ed43]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  4185b1:	jmp    4184b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  4185b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4185c0:	jb     41873a <__flatcc_fb_gen_c_json_parser@@Base+0x27aa>
  4185c6:	cmp    ax,0x6
  4185ca:	ja     41873a <__flatcc_fb_gen_c_json_parser@@Base+0x27aa>
  4185d0:	mov    rax,QWORD PTR [r14+0x8]
  4185d4:	mov    r8,QWORD PTR [r14+0x88]
  4185db:	mov    r9,QWORD PTR [rax+0x8]
  4185df:	push   QWORD PTR [rsp]
  4185e2:	lea    rdx,[rip+0x2d7d7]        # 445dc0 <_IO_stdin_used@@Base+0x17dc0>
  4185e9:	push   QWORD PTR [r14+0x48]
  4185ed:	push   r9
  4185ef:	push   QWORD PTR [rax]
  4185f1:	jmp    418404 <__flatcc_fb_gen_c_json_parser@@Base+0x2474>
  4185f6:	lea    rcx,[rip+0x1ed05]        # 437302 <_IO_stdin_used@@Base+0x9302>
  4185fd:	nop    DWORD PTR [rax]
  418600:	mov    rax,QWORD PTR [r14+0x8]
  418604:	mov    r8,QWORD PTR [r14+0x88]
  41860b:	mov    r9,QWORD PTR [rax+0x8]
  41860f:	mov    rdi,QWORD PTR [r12]
  418613:	push   r9
  418615:	mov    esi,0x1
  41861a:	lea    rdx,[rip+0x2d6d7]        # 445cf8 <_IO_stdin_used@@Base+0x17cf8>
  418621:	push   QWORD PTR [rax]
  418623:	xor    eax,eax
  418625:	call   405400 <__fprintf_chk@plt>
  41862a:	pop    rcx
  41862b:	mov    rdi,QWORD PTR [r12]
  41862f:	pop    rsi
  418630:	jmp    417fed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  418635:	lea    rcx,[rip+0x1ec9b]        # 4372d7 <_IO_stdin_used@@Base+0x92d7>
  41863c:	jmp    418600 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  41863e:	lea    rcx,[rip+0x1eca2]        # 4372e7 <_IO_stdin_used@@Base+0x92e7>
  418645:	jmp    418600 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  418647:	lea    rcx,[rip+0x1ec73]        # 4372c1 <_IO_stdin_used@@Base+0x92c1>
  41864e:	jmp    418600 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  418650:	lea    rcx,[rip+0x1ec9d]        # 4372f4 <_IO_stdin_used@@Base+0x92f4>
  418657:	jmp    418600 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  418659:	lea    rcx,[rip+0x1eca1]        # 437301 <_IO_stdin_used@@Base+0x9301>
  418660:	jmp    418600 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  418662:	lea    rcx,[rip+0x1ec6d]        # 4372d6 <_IO_stdin_used@@Base+0x92d6>
  418669:	jmp    418600 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  41866b:	lea    rcx,[rip+0x1ec74]        # 4372e6 <_IO_stdin_used@@Base+0x92e6>
  418672:	jmp    418600 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  418674:	lea    rcx,[rip+0x1ec45]        # 4372c0 <_IO_stdin_used@@Base+0x92c0>
  41867b:	jmp    418600 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  41867d:	lea    rcx,[rip+0x1ec43]        # 4372c7 <_IO_stdin_used@@Base+0x92c7>
  418684:	jmp    418600 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  418689:	lea    rcx,[rip+0x1ec77]        # 437307 <_IO_stdin_used@@Base+0x9307>
  418690:	jmp    418600 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  418695:	mov    rax,QWORD PTR [rip+0x3994c]        # 451fe8 <stderr@GLIBC_2.2.5>
  41869c:	lea    rcx,[rip+0x17445]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  4186a3:	mov    rdi,QWORD PTR [rax]
  4186a6:	lea    rdx,[rip+0x1ebe6]        # 437293 <_IO_stdin_used@@Base+0x9293>
  4186ad:	mov    esi,0x1
  4186b2:	lea    r9,[rip+0x173f7]        # 42fab0 <_IO_stdin_used@@Base+0x1ab0>
  4186b9:	mov    r8d,0x60
  4186bf:	xor    eax,eax
  4186c1:	call   405400 <__fprintf_chk@plt>
  4186c6:	lea    rcx,[rip+0x2e4c3]        # 446b90 <_IO_stdin_used@@Base+0x18b90>
  4186cd:	mov    edx,0x60
  4186d2:	lea    rsi,[rip+0x1740f]        # 42fae8 <_IO_stdin_used@@Base+0x1ae8>
  4186d9:	lea    rdi,[rip+0x1fc79]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4186e0:	call   405300 <__assert_fail@plt>
  4186e5:	call   417140 <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
  4186ea:	mov    rax,QWORD PTR [rip+0x398f7]        # 451fe8 <stderr@GLIBC_2.2.5>
  4186f1:	lea    rcx,[rip+0x2cdc8]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  4186f8:	mov    rdi,QWORD PTR [rax]
  4186fb:	lea    rdx,[rip+0x1eb91]        # 437293 <_IO_stdin_used@@Base+0x9293>
  418702:	mov    esi,0x1
  418707:	lea    r9,[rip+0x2b622]        # 443d30 <_IO_stdin_used@@Base+0x15d30>
  41870e:	mov    r8d,0x196
  418714:	xor    eax,eax
  418716:	call   405400 <__fprintf_chk@plt>
  41871b:	lea    rcx,[rip+0x2e42e]        # 446b50 <_IO_stdin_used@@Base+0x18b50>
  418722:	mov    edx,0x196
  418727:	lea    rsi,[rip+0x2cd92]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  41872e:	lea    rdi,[rip+0x1fc24]        # 438359 <_IO_stdin_used@@Base+0xa359>
  418735:	call   405300 <__assert_fail@plt>
  41873a:	mov    rax,QWORD PTR [rip+0x398a7]        # 451fe8 <stderr@GLIBC_2.2.5>
  418741:	lea    rcx,[rip+0x2cd78]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  418748:	mov    rdi,QWORD PTR [rax]
  41874b:	lea    rdx,[rip+0x1eb41]        # 437293 <_IO_stdin_used@@Base+0x9293>
  418752:	mov    esi,0x1
  418757:	lea    r9,[rip+0x2d712]        # 445e70 <_IO_stdin_used@@Base+0x17e70>
  41875e:	mov    r8d,0x1e3
  418764:	xor    eax,eax
  418766:	call   405400 <__fprintf_chk@plt>
  41876b:	lea    rcx,[rip+0x2e3de]        # 446b50 <_IO_stdin_used@@Base+0x18b50>
  418772:	mov    edx,0x1e3
  418777:	lea    rsi,[rip+0x2cd42]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  41877e:	lea    rdi,[rip+0x1fbd4]        # 438359 <_IO_stdin_used@@Base+0xa359>
  418785:	call   405300 <__assert_fail@plt>
  41878a:	mov    rax,QWORD PTR [rip+0x39857]        # 451fe8 <stderr@GLIBC_2.2.5>
  418791:	lea    rcx,[rip+0x2cd28]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  418798:	mov    rdi,QWORD PTR [rax]
  41879b:	lea    rdx,[rip+0x1eaf1]        # 437293 <_IO_stdin_used@@Base+0x9293>
  4187a2:	mov    esi,0x1
  4187a7:	lea    r9,[rip+0x2d81a]        # 445fc8 <_IO_stdin_used@@Base+0x17fc8>
  4187ae:	mov    r8d,0x1f8
  4187b4:	xor    eax,eax
  4187b6:	call   405400 <__fprintf_chk@plt>
  4187bb:	lea    rcx,[rip+0x2e38e]        # 446b50 <_IO_stdin_used@@Base+0x18b50>
  4187c2:	mov    edx,0x1f8
  4187c7:	lea    rsi,[rip+0x2ccf2]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  4187ce:	lea    rdi,[rip+0x1fb84]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4187d5:	call   405300 <__assert_fail@plt>
  4187da:	mov    rax,QWORD PTR [rip+0x39807]        # 451fe8 <stderr@GLIBC_2.2.5>
  4187e1:	lea    rcx,[rip+0x2ccd8]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  4187e8:	mov    rdi,QWORD PTR [rax]
  4187eb:	lea    rdx,[rip+0x1eaa1]        # 437293 <_IO_stdin_used@@Base+0x9293>
  4187f2:	mov    esi,0x1
  4187f7:	lea    r9,[rip+0x2d28a]        # 445a88 <_IO_stdin_used@@Base+0x17a88>
  4187fe:	mov    r8d,0x169
  418804:	xor    eax,eax
  418806:	call   405400 <__fprintf_chk@plt>
  41880b:	lea    rcx,[rip+0x2e33e]        # 446b50 <_IO_stdin_used@@Base+0x18b50>
  418812:	mov    edx,0x169
  418817:	lea    rsi,[rip+0x2cca2]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  41881e:	lea    rdi,[rip+0x1fb34]        # 438359 <_IO_stdin_used@@Base+0xa359>
  418825:	call   405300 <__assert_fail@plt>
  41882a:	nop    WORD PTR [rax+rax*1+0x0]
  418830:	mov    rax,QWORD PTR [rip+0x397b1]        # 451fe8 <stderr@GLIBC_2.2.5>
  418837:	lea    rcx,[rip+0x2cc82]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  41883e:	mov    rdi,QWORD PTR [rax]
  418841:	lea    rdx,[rip+0x1ea4b]        # 437293 <_IO_stdin_used@@Base+0x9293>
  418848:	mov    esi,0x1
  41884d:	lea    r9,[rip+0x2d944]        # 446198 <_IO_stdin_used@@Base+0x18198>
  418854:	mov    r8d,0x21f
  41885a:	xor    eax,eax
  41885c:	call   405400 <__fprintf_chk@plt>
  418861:	lea    rcx,[rip+0x2e2e8]        # 446b50 <_IO_stdin_used@@Base+0x18b50>
  418868:	mov    edx,0x21f
  41886d:	lea    rsi,[rip+0x2cc4c]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  418874:	lea    rdi,[rip+0x1fade]        # 438359 <_IO_stdin_used@@Base+0xa359>
  41887b:	call   405300 <__assert_fail@plt>
  418880:	call   4052d0 <__stack_chk_fail@plt>
  418885:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000418890 <__flatcc_fb_gen_c_json_printer@@Base>:
  418890:	endbr64 
  418894:	push   r15
  418896:	lea    rdx,[rip+0x2da1b]        # 4462b8 <_IO_stdin_used@@Base+0x182b8>
  41889d:	mov    esi,0x1
  4188a2:	push   r14
  4188a4:	push   r13
  4188a6:	push   r12
  4188a8:	push   rbp
  4188a9:	push   rbx
  4188aa:	mov    rbx,rdi
  4188ad:	sub    rsp,0xf8
  4188b4:	mov    rax,QWORD PTR fs:0x28
  4188bd:	mov    QWORD PTR [rsp+0xe8],rax
  4188c5:	xor    eax,eax
  4188c7:	mov    rax,QWORD PTR [rdi+0xd8]
  4188ce:	mov    rdi,QWORD PTR [rdi+0xd0]
  4188d5:	mov    rcx,QWORD PTR [rax+0x118]
  4188dc:	xor    eax,eax
  4188de:	mov    r8,rcx
  4188e1:	call   405400 <__fprintf_chk@plt>
  4188e6:	mov    rdi,QWORD PTR [rbx+0xd0]
  4188ed:	lea    rdx,[rip+0x18574]        # 430e68 <_IO_stdin_used@@Base+0x2e68>
  4188f4:	mov    esi,0x1
  4188f9:	xor    eax,eax
  4188fb:	call   405400 <__fprintf_chk@plt>
  418900:	mov    rdi,QWORD PTR [rbx+0xd0]
  418907:	lea    rdx,[rip+0x2d9e2]        # 4462f0 <_IO_stdin_used@@Base+0x182f0>
  41890e:	mov    esi,0x1
  418913:	xor    eax,eax
  418915:	call   405400 <__fprintf_chk@plt>
  41891a:	lea    rsi,[rip+0x1716b]        # 42fa8c <_IO_stdin_used@@Base+0x1a8c>
  418921:	mov    rdi,rbx
  418924:	lea    rdx,[rip+0x2e078]        # 4469a3 <_IO_stdin_used@@Base+0x189a3>
  41892b:	call   407120 <__flatcc_fb_gen_c_includes@@Base>
  418930:	mov    rax,QWORD PTR [rbx+0xe0]
  418937:	mov    rdi,QWORD PTR [rbx+0xd0]
  41893e:	mov    esi,DWORD PTR [rax+0xac]
  418944:	test   esi,esi
  418946:	jne    418cd0 <__flatcc_fb_gen_c_json_printer@@Base+0x440>
  41894c:	lea    rdx,[rip+0x2e00a]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  418953:	mov    esi,0x1
  418958:	xor    eax,eax
  41895a:	call   405400 <__fprintf_chk@plt>
  41895f:	mov    rdx,QWORD PTR [rbx+0xd8]
  418966:	mov    rbp,rsp
  418969:	mov    rsi,QWORD PTR [rdx+0x58]
  41896d:	mov    ecx,0x1d
  418972:	xor    eax,eax
  418974:	mov    rdi,rbp
  418977:	rep stos QWORD PTR es:[rdi],rax
  41897a:	test   rsi,rsi
  41897d:	je     41898a <__flatcc_fb_gen_c_json_printer@@Base+0xfa>
  41897f:	cmp    WORD PTR [rsi+0x10],0x1
  418984:	jbe    418d10 <__flatcc_fb_gen_c_json_printer@@Base+0x480>
  41898a:	mov    r12,QWORD PTR [rdx+0x40]
  41898e:	lea    r13,[rip+0x2dd03]        # 446698 <_IO_stdin_used@@Base+0x18698>
  418995:	test   r12,r12
  418998:	jne    4189df <__flatcc_fb_gen_c_json_printer@@Base+0x14f>
  41899a:	jmp    418a2a <__flatcc_fb_gen_c_json_printer@@Base+0x19a>
  41899f:	nop
  4189a0:	cmp    ax,0x4
  4189a4:	jne    4189d6 <__flatcc_fb_gen_c_json_printer@@Base+0x146>
  4189a6:	mov    rdi,QWORD PTR [r12+0x18]
  4189ab:	mov    rdx,rbp
  4189ae:	mov    rsi,r12
  4189b1:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  4189b6:	mov    rdi,QWORD PTR [rbx+0xd0]
  4189bd:	mov    r8,rbp
  4189c0:	mov    rcx,rbp
  4189c3:	lea    rdx,[rip+0x2db96]        # 446560 <_IO_stdin_used@@Base+0x18560>
  4189ca:	mov    esi,0x1
  4189cf:	xor    eax,eax
  4189d1:	call   405400 <__fprintf_chk@plt>
  4189d6:	mov    r12,QWORD PTR [r12]
  4189da:	test   r12,r12
  4189dd:	je     418a2a <__flatcc_fb_gen_c_json_printer@@Base+0x19a>
  4189df:	movzx  eax,WORD PTR [r12+0x10]
  4189e5:	cmp    ax,0x1
  4189e9:	je     418ca0 <__flatcc_fb_gen_c_json_printer@@Base+0x410>
  4189ef:	test   ax,ax
  4189f2:	jne    4189a0 <__flatcc_fb_gen_c_json_printer@@Base+0x110>
  4189f4:	mov    rdi,QWORD PTR [r12+0x18]
  4189f9:	mov    rsi,r12
  4189fc:	mov    rdx,rbp
  4189ff:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  418a04:	mov    rdi,QWORD PTR [rbx+0xd0]
  418a0b:	mov    rcx,rbp
  418a0e:	lea    rdx,[rip+0x2dc13]        # 446628 <_IO_stdin_used@@Base+0x18628>
  418a15:	mov    esi,0x1
  418a1a:	xor    eax,eax
  418a1c:	call   405400 <__fprintf_chk@plt>
  418a21:	mov    r12,QWORD PTR [r12]
  418a25:	test   r12,r12
  418a28:	jne    4189df <__flatcc_fb_gen_c_json_printer@@Base+0x14f>
  418a2a:	mov    rdi,QWORD PTR [rbx+0xd0]
  418a31:	lea    rdx,[rip+0x2df25]        # 44695d <_IO_stdin_used@@Base+0x1895d>
  418a38:	mov    esi,0x1
  418a3d:	xor    eax,eax
  418a3f:	call   405400 <__fprintf_chk@plt>
  418a44:	mov    rax,QWORD PTR [rbx+0xd8]
  418a4b:	mov    r12,QWORD PTR [rax+0x40]
  418a4f:	test   r12,r12
  418a52:	jne    418a69 <__flatcc_fb_gen_c_json_printer@@Base+0x1d9>
  418a54:	jmp    418c1d <__flatcc_fb_gen_c_json_printer@@Base+0x38d>
  418a59:	nop    DWORD PTR [rax+0x0]
  418a60:	mov    r12,QWORD PTR [r12]
  418a64:	test   r12,r12
  418a67:	je     418a86 <__flatcc_fb_gen_c_json_printer@@Base+0x1f6>
  418a69:	cmp    WORD PTR [r12+0x10],0x3
  418a70:	jne    418a60 <__flatcc_fb_gen_c_json_printer@@Base+0x1d0>
  418a72:	mov    rsi,r12
  418a75:	mov    rdi,rbx
  418a78:	call   417730 <__flatcc_fb_gen_c_json_parser@@Base+0x17a0>
  418a7d:	mov    r12,QWORD PTR [r12]
  418a81:	test   r12,r12
  418a84:	jne    418a69 <__flatcc_fb_gen_c_json_printer@@Base+0x1d9>
  418a86:	mov    rax,QWORD PTR [rbx+0xd8]
  418a8d:	mov    r12,QWORD PTR [rax+0x40]
  418a91:	test   r12,r12
  418a94:	je     418c1d <__flatcc_fb_gen_c_json_printer@@Base+0x38d>
  418a9a:	lea    r15,[rip+0x2dcbf]        # 446760 <_IO_stdin_used@@Base+0x18760>
  418aa1:	jmp    418ab5 <__flatcc_fb_gen_c_json_printer@@Base+0x225>
  418aa3:	nop    DWORD PTR [rax+rax*1+0x0]
  418aa8:	mov    r12,QWORD PTR [r12]
  418aac:	test   r12,r12
  418aaf:	je     418b93 <__flatcc_fb_gen_c_json_printer@@Base+0x303>
  418ab5:	cmp    WORD PTR [r12+0x10],0x4
  418abc:	jne    418aa8 <__flatcc_fb_gen_c_json_printer@@Base+0x218>
  418abe:	xor    eax,eax
  418ac0:	mov    ecx,0x1d
  418ac5:	mov    rdi,rbp
  418ac8:	rep stos QWORD PTR es:[rdi],rax
  418acb:	mov    rdx,rbp
  418ace:	mov    rsi,r12
  418ad1:	lea    r14,[rbx+0xd0]
  418ad8:	mov    rdi,QWORD PTR [r12+0x18]
  418add:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  418ae2:	mov    rdi,QWORD PTR [rbx+0xd0]
  418ae9:	mov    rcx,rbp
  418aec:	lea    rdx,[rip+0x2dbf5]        # 4466e8 <_IO_stdin_used@@Base+0x186e8>
  418af3:	mov    esi,0x1
  418af8:	xor    eax,eax
  418afa:	call   405400 <__fprintf_chk@plt>
  418aff:	mov    r13,QWORD PTR [r12+0x28]
  418b04:	mov    rdi,QWORD PTR [rbx+0xd0]
  418b0b:	test   r13,r13
  418b0e:	je     418b4e <__flatcc_fb_gen_c_json_printer@@Base+0x2be>
  418b10:	cmp    WORD PTR [r13+0x28],0x0
  418b16:	je     418b45 <__flatcc_fb_gen_c_json_printer@@Base+0x2b5>
  418b18:	mov    rax,QWORD PTR [r13+0x8]
  418b1c:	sub    rsp,0x8
  418b20:	mov    r8,QWORD PTR [rax+0x8]
  418b24:	mov    rcx,QWORD PTR [r13+0x48]
  418b28:	push   r8
  418b2a:	mov    r9,QWORD PTR [rax]
  418b2d:	mov    rdx,r15
  418b30:	mov    esi,0x1
  418b35:	xor    eax,eax
  418b37:	call   405400 <__fprintf_chk@plt>
  418b3c:	pop    rdx
  418b3d:	mov    rdi,QWORD PTR [rbx+0xd0]
  418b44:	pop    rcx
  418b45:	mov    r13,QWORD PTR [r13+0x0]
  418b49:	test   r13,r13
  418b4c:	jne    418b10 <__flatcc_fb_gen_c_json_printer@@Base+0x280>
  418b4e:	lea    rdx,[rip+0x2dc63]        # 4467b8 <_IO_stdin_used@@Base+0x187b8>
  418b55:	mov    esi,0x1
  418b5a:	xor    eax,eax
  418b5c:	call   405400 <__fprintf_chk@plt>
  418b61:	mov    rdi,QWORD PTR [rbx+0xd0]
  418b68:	lea    rdx,[rip+0x2dde6]        # 446955 <_IO_stdin_used@@Base+0x18955>
  418b6f:	mov    esi,0x1
  418b74:	xor    eax,eax
  418b76:	call   405400 <__fprintf_chk@plt>
  418b7b:	mov    rsi,r12
  418b7e:	mov    rdi,r14
  418b81:	call   4171a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
  418b86:	mov    r12,QWORD PTR [r12]
  418b8a:	test   r12,r12
  418b8d:	jne    418ab5 <__flatcc_fb_gen_c_json_printer@@Base+0x225>
  418b93:	mov    rax,QWORD PTR [rbx+0xd8]
  418b9a:	mov    r12,QWORD PTR [rax+0x40]
  418b9e:	test   r12,r12
  418ba1:	je     418c1d <__flatcc_fb_gen_c_json_printer@@Base+0x38d>
  418ba3:	lea    r13,[rbx+0xd0]
  418baa:	jmp    418bb9 <__flatcc_fb_gen_c_json_printer@@Base+0x329>
  418bac:	nop    DWORD PTR [rax+0x0]
  418bb0:	mov    r12,QWORD PTR [r12]
  418bb4:	test   r12,r12
  418bb7:	je     418bd6 <__flatcc_fb_gen_c_json_printer@@Base+0x346>
  418bb9:	cmp    WORD PTR [r12+0x10],0x1
  418bc0:	jne    418bb0 <__flatcc_fb_gen_c_json_printer@@Base+0x320>
  418bc2:	mov    rsi,r12
  418bc5:	mov    rdi,r13
  418bc8:	call   4173e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1450>
  418bcd:	mov    r12,QWORD PTR [r12]
  418bd1:	test   r12,r12
  418bd4:	jne    418bb9 <__flatcc_fb_gen_c_json_printer@@Base+0x329>
  418bd6:	mov    rax,QWORD PTR [rbx+0xd8]
  418bdd:	mov    r12,QWORD PTR [rax+0x40]
  418be1:	test   r12,r12
  418be4:	je     418c1d <__flatcc_fb_gen_c_json_printer@@Base+0x38d>
  418be6:	lea    r13,[rbx+0xd0]
  418bed:	jmp    418bf9 <__flatcc_fb_gen_c_json_printer@@Base+0x369>
  418bef:	nop
  418bf0:	mov    r12,QWORD PTR [r12]
  418bf4:	test   r12,r12
  418bf7:	je     418c16 <__flatcc_fb_gen_c_json_printer@@Base+0x386>
  418bf9:	cmp    WORD PTR [r12+0x10],0x0
  418c00:	jne    418bf0 <__flatcc_fb_gen_c_json_printer@@Base+0x360>
  418c02:	mov    rsi,r12
  418c05:	mov    rdi,r13
  418c08:	call   417dd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
  418c0d:	mov    r12,QWORD PTR [r12]
  418c11:	test   r12,r12
  418c14:	jne    418bf9 <__flatcc_fb_gen_c_json_printer@@Base+0x369>
  418c16:	mov    rax,QWORD PTR [rbx+0xd8]
  418c1d:	mov    rsi,QWORD PTR [rax+0x58]
  418c21:	test   rsi,rsi
  418c24:	je     418c31 <__flatcc_fb_gen_c_json_printer@@Base+0x3a1>
  418c26:	cmp    WORD PTR [rsi+0x10],0x1
  418c2b:	jbe    418d60 <__flatcc_fb_gen_c_json_printer@@Base+0x4d0>
  418c31:	mov    rax,QWORD PTR [rbx+0xe0]
  418c38:	mov    rdi,QWORD PTR [rbx+0xd0]
  418c3f:	mov    eax,DWORD PTR [rax+0xac]
  418c45:	test   eax,eax
  418c47:	jne    418cf0 <__flatcc_fb_gen_c_json_printer@@Base+0x460>
  418c4d:	mov    rax,QWORD PTR [rbx+0xd8]
  418c54:	lea    rdx,[rip+0x2dcbd]        # 446918 <_IO_stdin_used@@Base+0x18918>
  418c5b:	mov    rcx,QWORD PTR [rax+0x118]
  418c62:	mov    esi,0x1
  418c67:	xor    eax,eax
  418c69:	call   405400 <__fprintf_chk@plt>
  418c6e:	xor    eax,eax
  418c70:	mov    rcx,QWORD PTR [rsp+0xe8]
  418c78:	xor    rcx,QWORD PTR fs:0x28
  418c81:	jne    418e2b <__flatcc_fb_gen_c_json_printer@@Base+0x59b>
  418c87:	add    rsp,0xf8
  418c8e:	pop    rbx
  418c8f:	pop    rbp
  418c90:	pop    r12
  418c92:	pop    r13
  418c94:	pop    r14
  418c96:	pop    r15
  418c98:	ret    
  418c99:	nop    DWORD PTR [rax+0x0]
  418ca0:	mov    rdi,QWORD PTR [r12+0x18]
  418ca5:	mov    rdx,rbp
  418ca8:	mov    rsi,r12
  418cab:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  418cb0:	mov    rdi,QWORD PTR [rbx+0xd0]
  418cb7:	mov    rcx,rbp
  418cba:	mov    rdx,r13
  418cbd:	mov    esi,0x1
  418cc2:	xor    eax,eax
  418cc4:	call   405400 <__fprintf_chk@plt>
  418cc9:	jmp    4189d6 <__flatcc_fb_gen_c_json_printer@@Base+0x146>
  418cce:	xchg   ax,ax
  418cd0:	lea    rdx,[rip+0x182a9]        # 430f80 <_IO_stdin_used@@Base+0x2f80>
  418cd7:	mov    esi,0x1
  418cdc:	xor    eax,eax
  418cde:	call   405400 <__fprintf_chk@plt>
  418ce3:	mov    rdi,QWORD PTR [rbx+0xd0]
  418cea:	jmp    41894c <__flatcc_fb_gen_c_json_printer@@Base+0xbc>
  418cef:	nop
  418cf0:	lea    rdx,[rip+0x1e139]        # 436e30 <_IO_stdin_used@@Base+0x8e30>
  418cf7:	mov    esi,0x1
  418cfc:	xor    eax,eax
  418cfe:	call   405400 <__fprintf_chk@plt>
  418d03:	mov    rdi,QWORD PTR [rbx+0xd0]
  418d0a:	jmp    418c4d <__flatcc_fb_gen_c_json_printer@@Base+0x3bd>
  418d0f:	nop
  418d10:	mov    rdi,QWORD PTR [rbx+0xd0]
  418d17:	lea    rdx,[rip+0x2d602]        # 446320 <_IO_stdin_used@@Base+0x18320>
  418d1e:	mov    esi,0x1
  418d23:	call   405400 <__fprintf_chk@plt>
  418d28:	mov    rax,QWORD PTR [rbx+0xd8]
  418d2f:	mov    rdi,QWORD PTR [rbx+0xd0]
  418d36:	mov    rcx,QWORD PTR [rax+0x110]
  418d3d:	lea    rdx,[rip+0x2d7c4]        # 446508 <_IO_stdin_used@@Base+0x18508>
  418d44:	mov    esi,0x1
  418d49:	xor    eax,eax
  418d4b:	call   405400 <__fprintf_chk@plt>
  418d50:	mov    rdx,QWORD PTR [rbx+0xd8]
  418d57:	jmp    41898a <__flatcc_fb_gen_c_json_printer@@Base+0xfa>
  418d5c:	nop    DWORD PTR [rax+0x0]
  418d60:	xor    eax,eax
  418d62:	mov    ecx,0x1d
  418d67:	mov    rdi,rbp
  418d6a:	rep stos QWORD PTR es:[rdi],rax
  418d6d:	mov    rdx,rbp
  418d70:	mov    rdi,QWORD PTR [rsi+0x18]
  418d74:	call   407390 <__flatcc_fb_scoped_symbol_name@@Base>
  418d79:	mov    rax,QWORD PTR [rbx+0xd8]
  418d80:	mov    rdi,QWORD PTR [rbx+0xd0]
  418d87:	mov    rcx,QWORD PTR [rax+0x110]
  418d8e:	lea    rdx,[rip+0x2da73]        # 446808 <_IO_stdin_used@@Base+0x18808>
  418d95:	mov    esi,0x1
  418d9a:	xor    eax,eax
  418d9c:	call   405400 <__fprintf_chk@plt>
  418da1:	mov    rdi,QWORD PTR [rbx+0xd0]
  418da8:	xor    eax,eax
  418daa:	mov    rcx,rbp
  418dad:	lea    rdx,[rip+0x2daac]        # 446860 <_IO_stdin_used@@Base+0x18860>
  418db4:	mov    esi,0x1
  418db9:	call   405400 <__fprintf_chk@plt>
  418dbe:	mov    rax,QWORD PTR [rbx+0xd8]
  418dc5:	cmp    WORD PTR [rax+0x20],0x2
  418dca:	je     418e08 <__flatcc_fb_gen_c_json_printer@@Base+0x578>
  418dcc:	mov    rdi,QWORD PTR [rbx+0xd0]
  418dd3:	lea    rdx,[rip+0x2dbe3]        # 4469bd <_IO_stdin_used@@Base+0x189bd>
  418dda:	mov    esi,0x1
  418ddf:	xor    eax,eax
  418de1:	call   405400 <__fprintf_chk@plt>
  418de6:	mov    rdi,QWORD PTR [rbx+0xd0]
  418ded:	lea    rdx,[rip+0x2db67]        # 44695b <_IO_stdin_used@@Base+0x1895b>
  418df4:	mov    esi,0x1
  418df9:	xor    eax,eax
  418dfb:	call   405400 <__fprintf_chk@plt>
  418e00:	jmp    418c31 <__flatcc_fb_gen_c_json_printer@@Base+0x3a1>
  418e05:	nop    DWORD PTR [rax]
  418e08:	mov    ecx,DWORD PTR [rax+0x18]
  418e0b:	mov    r8,QWORD PTR [rax+0x10]
  418e0f:	mov    rdi,QWORD PTR [rbx+0xd0]
  418e16:	lea    rdx,[rip+0x2db96]        # 4469b3 <_IO_stdin_used@@Base+0x189b3>
  418e1d:	mov    esi,0x1
  418e22:	xor    eax,eax
  418e24:	call   405400 <__fprintf_chk@plt>
  418e29:	jmp    418de6 <__flatcc_fb_gen_c_json_printer@@Base+0x556>
  418e2b:	call   4052d0 <__stack_chk_fail@plt>
  418e30:	endbr64 
  418e34:	mov    rdx,rdi
  418e37:	lea    rdi,[rsi+0x8]
  418e3b:	lea    rsi,[rip+0x35e]        # 4191a0 <__flatcc_fb_gen_c_json_printer@@Base+0x910>
  418e42:	jmp    41c080 <fb_symbol_table_visit@@Base>
  418e47:	nop    WORD PTR [rax+rax*1+0x0]
  418e50:	endbr64 
  418e54:	mov    rdx,rdi
  418e57:	lea    rdi,[rsi+0x8]
  418e5b:	lea    rsi,[rip+0x44e]        # 4192b0 <__flatcc_fb_gen_c_json_printer@@Base+0xa20>
  418e62:	jmp    41c080 <fb_symbol_table_visit@@Base>
  418e67:	nop    WORD PTR [rax+rax*1+0x0]
  418e70:	push   rbx
  418e71:	mov    rbx,rdi
  418e74:	mov    rdi,QWORD PTR [rdi+0x18]
  418e78:	test   rdi,rdi
  418e7b:	je     418e82 <__flatcc_fb_gen_c_json_printer@@Base+0x5f2>
  418e7d:	call   405240 <free@plt>
  418e82:	mov    rdi,QWORD PTR [rbx+0x20]
  418e86:	test   rdi,rdi
  418e89:	je     418e90 <__flatcc_fb_gen_c_json_printer@@Base+0x600>
  418e8b:	call   405240 <free@plt>
  418e90:	mov    rdi,QWORD PTR [rbx+0x28]
  418e94:	test   rdi,rdi
  418e97:	je     418e9e <__flatcc_fb_gen_c_json_printer@@Base+0x60e>
  418e99:	call   405240 <free@plt>
  418e9e:	vpxor  xmm0,xmm0,xmm0
  418ea2:	vmovaps XMMWORD PTR [rbx],xmm0
  418ea6:	vmovaps XMMWORD PTR [rbx+0x10],xmm0
  418eab:	vmovaps XMMWORD PTR [rbx+0x20],xmm0
  418eb0:	vmovaps XMMWORD PTR [rbx+0x30],xmm0
  418eb5:	vmovaps XMMWORD PTR [rbx+0x40],xmm0
  418eba:	pop    rbx
  418ebb:	ret    
  418ebc:	nop    DWORD PTR [rax+0x0]
  418ec0:	push   rbp
  418ec1:	movsxd rsi,esi
  418ec4:	mov    rbp,rsi
  418ec7:	push   rbx
  418ec8:	lea    rcx,[rip+0x51]        # 418f20 <__flatcc_fb_gen_c_json_printer@@Base+0x690>
  418ecf:	mov    edx,0x10
  418ed4:	sub    rsp,0x8
  418ed8:	mov    rbx,rdi
  418edb:	call   405280 <qsort@plt>
  418ee0:	test   ebp,ebp
  418ee2:	jle    418f0e <__flatcc_fb_gen_c_json_printer@@Base+0x67e>
  418ee4:	lea    ecx,[rbp-0x1]
  418ee7:	xor    eax,eax
  418ee9:	jmp    418ef3 <__flatcc_fb_gen_c_json_printer@@Base+0x663>
  418eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  418ef0:	mov    rax,rdx
  418ef3:	mov    rdx,rax
  418ef6:	shl    rdx,0x4
  418efa:	mov    rdx,QWORD PTR [rbx+rdx*1]
  418efe:	mov    QWORD PTR [rdx+0xc8],rax
  418f05:	lea    rdx,[rax+0x1]
  418f09:	cmp    rcx,rax
  418f0c:	jne    418ef0 <__flatcc_fb_gen_c_json_printer@@Base+0x660>
  418f0e:	add    rsp,0x8
  418f12:	pop    rbx
  418f13:	pop    rbp
  418f14:	ret    
  418f15:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  418f20:	endbr64 
  418f24:	mov    rsi,QWORD PTR [rsi+0x8]
  418f28:	mov    rdi,QWORD PTR [rdi+0x8]
  418f2c:	jmp    405350 <strcmp@plt>
  418f31:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  418f3c:	nop    DWORD PTR [rax+0x0]
  418f40:	push   r13
  418f42:	push   r12
  418f44:	push   rbp
  418f45:	push   rbx
  418f46:	mov    rbx,rdi
  418f49:	sub    rsp,0x8
  418f4d:	cmp    WORD PTR [rsp+0x40],0xf
  418f53:	ja     419118 <__flatcc_fb_gen_c_json_printer@@Base+0x888>
  418f59:	movzx  eax,WORD PTR [rsp+0x40]
  418f5e:	lea    rdx,[rip+0x2e1eb]        # 447150 <_IO_stdin_used@@Base+0x19150>
  418f65:	movsxd rax,DWORD PTR [rdx+rax*4]
  418f69:	add    rax,rdx
  418f6c:	notrack jmp rax
  418f6f:	nop
  418f70:	mov    ebp,0xd
  418f75:	mov    r13d,0xffffffff
  418f7b:	mov    r12d,0xe
  418f81:	nop    DWORD PTR [rax+0x0]
  418f88:	mov    esi,0x3
  418f8d:	mov    rdi,rbx
  418f90:	call   429dd0 <flatcc_builder_start_table@@Base>
  418f95:	test   eax,eax
  418f97:	jne    419155 <__flatcc_fb_gen_c_json_printer@@Base+0x8c5>
  418f9d:	cmp    r13d,0xffffffff
  418fa1:	je     418fc6 <__flatcc_fb_gen_c_json_printer@@Base+0x736>
  418fa3:	mov    ecx,0x4
  418fa8:	mov    edx,0x4
  418fad:	mov    esi,0x2
  418fb2:	mov    rdi,rbx
  418fb5:	call   42b650 <flatcc_builder_table_add@@Base>
  418fba:	test   rax,rax
  418fbd:	je     419155 <__flatcc_fb_gen_c_json_printer@@Base+0x8c5>
  418fc3:	mov    DWORD PTR [rax],r13d
  418fc6:	test   r12b,r12b
  418fc9:	je     418feb <__flatcc_fb_gen_c_json_printer@@Base+0x75b>
  418fcb:	xor    esi,esi
  418fcd:	mov    ecx,0x1
  418fd2:	mov    edx,0x1
  418fd7:	mov    rdi,rbx
  418fda:	call   42b650 <flatcc_builder_table_add@@Base>
  418fdf:	test   rax,rax
  418fe2:	je     419155 <__flatcc_fb_gen_c_json_printer@@Base+0x8c5>
  418fe8:	mov    BYTE PTR [rax],r12b
  418feb:	test   bpl,bpl
  418fee:	je     419013 <__flatcc_fb_gen_c_json_printer@@Base+0x783>
  418ff0:	mov    ecx,0x1
  418ff5:	mov    edx,0x1
  418ffa:	mov    esi,0x1
  418fff:	mov    rdi,rbx
  419002:	call   42b650 <flatcc_builder_table_add@@Base>
  419007:	test   rax,rax
  41900a:	je     419155 <__flatcc_fb_gen_c_json_printer@@Base+0x8c5>
  419010:	mov    BYTE PTR [rax],bpl
  419013:	xor    edx,edx
  419015:	lea    rsi,[rip+0x2e2d8]        # 4472f4 <_IO_stdin_used@@Base+0x192f4>
  41901c:	mov    rdi,rbx
  41901f:	call   42a6c0 <flatcc_builder_check_required@@Base>
  419024:	test   eax,eax
  419026:	je     419180 <__flatcc_fb_gen_c_json_printer@@Base+0x8f0>
  41902c:	add    rsp,0x8
  419030:	mov    rdi,rbx
  419033:	pop    rbx
  419034:	pop    rbp
  419035:	pop    r12
  419037:	pop    r13
  419039:	jmp    42a750 <flatcc_builder_end_table@@Base>
  41903e:	xchg   ax,ax
  419040:	mov    r13d,0xffffffff
  419046:	xor    ebp,ebp
  419048:	mov    r12d,0xd
  41904e:	jmp    418f88 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
  419053:	nop    DWORD PTR [rax+rax*1+0x0]
  419058:	mov    rdx,QWORD PTR [rsp+0x30]
  41905d:	movzx  eax,WORD PTR [rdx+0x10]
  419061:	mov    r13d,DWORD PTR [rdx+0xc8]
  419068:	cmp    ax,0x3
  41906c:	je     419178 <__flatcc_fb_gen_c_json_printer@@Base+0x8e8>
  419072:	ja     419130 <__flatcc_fb_gen_c_json_printer@@Base+0x8a0>
  419078:	mov    r12d,0xf
  41907e:	cmp    ax,0x1
  419082:	ja     419140 <__flatcc_fb_gen_c_json_printer@@Base+0x8b0>
  419088:	xor    ebp,ebp
  41908a:	jmp    418f88 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
  41908f:	nop
  419090:	mov    eax,DWORD PTR [rsp+0x30]
  419094:	mov    r13d,0xffffffff
  41909a:	dec    eax
  41909c:	cmp    eax,0xa
  41909f:	ja     41911e <__flatcc_fb_gen_c_json_printer@@Base+0x88e>
  4190a1:	lea    rdx,[rip+0x2e0e8]        # 447190 <_IO_stdin_used@@Base+0x19190>
  4190a8:	movzx  r12d,BYTE PTR [rdx+rax*1]
  4190ad:	xor    ebp,ebp
  4190af:	jmp    418f88 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
  4190b4:	nop    DWORD PTR [rax+0x0]
  4190b8:	mov    rax,QWORD PTR [rsp+0x30]
  4190bd:	movzx  edx,WORD PTR [rax+0x10]
  4190c1:	mov    r13d,DWORD PTR [rax+0xc8]
  4190c8:	cmp    dx,0x1
  4190cc:	jbe    419168 <__flatcc_fb_gen_c_json_printer@@Base+0x8d8>
  4190d2:	cmp    dx,0x3
  4190d6:	jne    41911e <__flatcc_fb_gen_c_json_printer@@Base+0x88e>
  4190d8:	mov    eax,DWORD PTR [rax+0x48]
  4190db:	jmp    4190ea <__flatcc_fb_gen_c_json_printer@@Base+0x85a>
  4190dd:	nop    DWORD PTR [rax]
  4190e0:	mov    eax,DWORD PTR [rsp+0x30]
  4190e4:	mov    r13d,0xffffffff
  4190ea:	dec    eax
  4190ec:	xor    ebp,ebp
  4190ee:	mov    r12d,0xe
  4190f4:	cmp    eax,0xa
  4190f7:	ja     418f88 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
  4190fd:	lea    rdx,[rip+0x2e08c]        # 447190 <_IO_stdin_used@@Base+0x19190>
  419104:	movzx  ebp,BYTE PTR [rdx+rax*1]
  419108:	mov    r12d,0xe
  41910e:	jmp    418f88 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
  419113:	nop    DWORD PTR [rax+rax*1+0x0]
  419118:	mov    r13d,0xffffffff
  41911e:	xor    ebp,ebp
  419120:	xor    r12d,r12d
  419123:	jmp    418f88 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
  419128:	nop    DWORD PTR [rax+rax*1+0x0]
  419130:	mov    r12d,0x10
  419136:	cmp    ax,0x4
  41913a:	je     419088 <__flatcc_fb_gen_c_json_printer@@Base+0x7f8>
  419140:	mov    esi,0x3
  419145:	mov    rdi,rbx
  419148:	call   429dd0 <flatcc_builder_start_table@@Base>
  41914d:	test   eax,eax
  41914f:	je     419013 <__flatcc_fb_gen_c_json_printer@@Base+0x783>
  419155:	add    rsp,0x8
  419159:	pop    rbx
  41915a:	pop    rbp
  41915b:	pop    r12
  41915d:	xor    eax,eax
  41915f:	pop    r13
  419161:	ret    
  419162:	nop    WORD PTR [rax+rax*1+0x0]
  419168:	mov    ebp,0xf
  41916d:	jmp    418f7b <__flatcc_fb_gen_c_json_printer@@Base+0x6eb>
  419172:	nop    WORD PTR [rax+rax*1+0x0]
  419178:	mov    eax,DWORD PTR [rdx+0x48]
  41917b:	jmp    41909a <__flatcc_fb_gen_c_json_printer@@Base+0x80a>
  419180:	lea    rcx,[rip+0x2e139]        # 4472c0 <_IO_stdin_used@@Base+0x192c0>
  419187:	mov    edx,0x17
  41918c:	lea    rsi,[rip+0x2da35]        # 446bc8 <_IO_stdin_used@@Base+0x18bc8>
  419193:	lea    rdi,[rip+0x2daae]        # 446c48 <_IO_stdin_used@@Base+0x18c48>
  41919a:	call   405300 <__assert_fail@plt>
  41919f:	nop
  4191a0:	endbr64 
  4191a4:	cmp    WORD PTR [rsi+0x10],0x4
  4191a9:	ja     419280 <__flatcc_fb_gen_c_json_printer@@Base+0x9f0>
  4191af:	push   r14
  4191b1:	push   r13
  4191b3:	push   r12
  4191b5:	mov    r12,rdi
  4191b8:	push   rbp
  4191b9:	mov    rbp,rsi
  4191bc:	push   rbx
  4191bd:	mov    rax,QWORD PTR [rdi+0x48]
  4191c1:	mov    rsi,QWORD PTR [rsi+0x20]
  4191c5:	lea    rdi,[rax+0x128]
  4191cc:	call   41b8b0 <ptr_set_find_item@@Base>
  4191d1:	test   rax,rax
  4191d4:	je     419277 <__flatcc_fb_gen_c_json_printer@@Base+0x9e7>
  4191da:	mov    r13,QWORD PTR [r12+0x40]
  4191df:	mov    eax,DWORD PTR [r12]
  4191e3:	mov    rcx,r13
  4191e6:	test   eax,eax
  4191e8:	je     419228 <__flatcc_fb_gen_c_json_printer@@Base+0x998>
  4191ea:	mov    rax,QWORD PTR [rbp+0x18]
  4191ee:	mov    r14,QWORD PTR [rax]
  4191f1:	test   r14,r14
  4191f4:	je     419228 <__flatcc_fb_gen_c_json_printer@@Base+0x998>
  4191f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419200:	mov    rax,QWORD PTR [r14+0x8]
  419204:	mov    rdi,rcx
  419207:	movsxd rbx,DWORD PTR [rax+0x8]
  41920b:	mov    rsi,QWORD PTR [rax]
  41920e:	mov    rdx,rbx
  419211:	call   405370 <memcpy@plt>
  419216:	add    rbx,rax
  419219:	mov    BYTE PTR [rbx],0x2e
  41921c:	lea    rcx,[rbx+0x1]
  419220:	mov    r14,QWORD PTR [r14]
  419223:	test   r14,r14
  419226:	jne    419200 <__flatcc_fb_gen_c_json_printer@@Base+0x970>
  419228:	mov    rax,QWORD PTR [rbp+0x8]
  41922c:	mov    rdi,rcx
  41922f:	movsxd rbx,DWORD PTR [rax+0x8]
  419233:	mov    rsi,QWORD PTR [rax]
  419236:	mov    rdx,rbx
  419239:	call   405370 <memcpy@plt>
  41923e:	mov    rcx,rax
  419241:	add    rcx,rbx
  419244:	mov    BYTE PTR [rcx],0x0
  419247:	inc    rcx
  41924a:	mov    QWORD PTR [r12+0x40],rcx
  41924f:	movzx  eax,WORD PTR [rbp+0x10]
  419253:	cmp    ax,0x1
  419257:	jbe    419288 <__flatcc_fb_gen_c_json_printer@@Base+0x9f8>
  419259:	sub    eax,0x3
  41925c:	cmp    ax,0x1
  419260:	ja     419277 <__flatcc_fb_gen_c_json_printer@@Base+0x9e7>
  419262:	mov    rax,QWORD PTR [r12+0x38]
  419267:	mov    QWORD PTR [rax],rbp
  41926a:	mov    QWORD PTR [rax+0x8],r13
  41926e:	add    rax,0x10
  419272:	mov    QWORD PTR [r12+0x38],rax
  419277:	pop    rbx
  419278:	pop    rbp
  419279:	pop    r12
  41927b:	pop    r13
  41927d:	pop    r14
  41927f:	ret    
  419280:	ret    
  419281:	nop    DWORD PTR [rax+0x0]
  419288:	mov    rax,QWORD PTR [r12+0x30]
  41928d:	mov    QWORD PTR [rax],rbp
  419290:	mov    QWORD PTR [rax+0x8],r13
  419294:	add    rax,0x10
  419298:	mov    QWORD PTR [r12+0x30],rax
  41929d:	pop    rbx
  41929e:	pop    rbp
  41929f:	pop    r12
  4192a1:	pop    r13
  4192a3:	pop    r14
  4192a5:	ret    
  4192a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4192b0:	endbr64 
  4192b4:	cmp    WORD PTR [rsi+0x10],0x4
  4192b9:	ja     419350 <__flatcc_fb_gen_c_json_printer@@Base+0xac0>
  4192bf:	push   rbp
  4192c0:	mov    rbp,rdi
  4192c3:	push   rbx
  4192c4:	mov    rbx,rsi
  4192c7:	sub    rsp,0x8
  4192cb:	mov    rax,QWORD PTR [rdi+0x48]
  4192cf:	mov    rsi,QWORD PTR [rsi+0x20]
  4192d3:	lea    rdi,[rax+0x128]
  4192da:	call   41b8b0 <ptr_set_find_item@@Base>
  4192df:	test   rax,rax
  4192e2:	je     419340 <__flatcc_fb_gen_c_json_printer@@Base+0xab0>
  4192e4:	mov    eax,DWORD PTR [rbp+0x0]
  4192e7:	xor    edx,edx
  4192e9:	test   eax,eax
  4192eb:	je     419315 <__flatcc_fb_gen_c_json_printer@@Base+0xa85>
  4192ed:	mov    rax,QWORD PTR [rbx+0x18]
  4192f1:	mov    rax,QWORD PTR [rax]
  4192f4:	test   rax,rax
  4192f7:	je     419315 <__flatcc_fb_gen_c_json_printer@@Base+0xa85>
  4192f9:	nop    DWORD PTR [rax+0x0]
  419300:	mov    rcx,QWORD PTR [rax+0x8]
  419304:	mov    rax,QWORD PTR [rax]
  419307:	mov    rcx,QWORD PTR [rcx+0x8]
  41930b:	lea    rdx,[rdx+rcx*1+0x1]
  419310:	test   rax,rax
  419313:	jne    419300 <__flatcc_fb_gen_c_json_printer@@Base+0xa70>
  419315:	mov    rcx,QWORD PTR [rbx+0x8]
  419319:	mov    rax,QWORD PTR [rbp+0x10]
  41931d:	add    rax,QWORD PTR [rcx+0x8]
  419321:	lea    rax,[rdx+rax*1+0x1]
  419326:	mov    QWORD PTR [rbp+0x10],rax
  41932a:	movzx  eax,WORD PTR [rbx+0x10]
  41932e:	cmp    ax,0x1
  419332:	jbe    419358 <__flatcc_fb_gen_c_json_printer@@Base+0xac8>
  419334:	sub    eax,0x3
  419337:	cmp    ax,0x1
  41933b:	ja     419340 <__flatcc_fb_gen_c_json_printer@@Base+0xab0>
  41933d:	inc    DWORD PTR [rbp+0x8]
  419340:	add    rsp,0x8
  419344:	pop    rbx
  419345:	pop    rbp
  419346:	ret    
  419347:	nop    WORD PTR [rax+rax*1+0x0]
  419350:	ret    
  419351:	nop    DWORD PTR [rax+0x0]
  419358:	inc    DWORD PTR [rbp+0x4]
  41935b:	add    rsp,0x8
  41935f:	pop    rbx
  419360:	pop    rbp
  419361:	ret    
  419362:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41936d:	nop    DWORD PTR [rax]
  419370:	push   r15
  419372:	vpxor  xmm0,xmm0,xmm0
  419376:	push   r14
  419378:	mov    r14,rdi
  41937b:	push   r13
  41937d:	push   r12
  41937f:	push   rbp
  419380:	push   rbx
  419381:	sub    rsp,0xc8
  419388:	mov    QWORD PTR [rsp+0x18],rdx
  41938d:	mov    QWORD PTR [rsp+0x8],rcx
  419392:	lea    rdx,[rsp+0x60]
  419397:	mov    r15,QWORD PTR [rcx+0x68]
  41939b:	mov    rax,QWORD PTR fs:0x28
  4193a4:	mov    QWORD PTR [rsp+0xb8],rax
  4193ac:	xor    eax,eax
  4193ae:	vmovups XMMWORD PTR [rsp+0x64],xmm0
  4193b4:	mov    DWORD PTR [rdx+0x44],0x0
  4193bb:	vmovups XMMWORD PTR [rdx+0x14],xmm0
  4193c0:	vmovups XMMWORD PTR [rdx+0x24],xmm0
  4193c5:	vmovups XMMWORD PTR [rdx+0x34],xmm0
  4193ca:	mov    DWORD PTR [rsp+0x60],esi
  4193ce:	mov    rdi,r15
  4193d1:	lea    rsi,[rip+0xfffffffffffffa78]        # 418e50 <__flatcc_fb_gen_c_json_printer@@Base+0x5c0>
  4193d8:	mov    QWORD PTR [rsp+0x28],rdx
  4193dd:	mov    QWORD PTR [rsp+0xa8],rcx
  4193e5:	call   41d0f0 <fb_scope_table_visit@@Base>
  4193ea:	movsxd rdi,DWORD PTR [rsp+0x64]
  4193ef:	mov    esi,0x10
  4193f4:	mov    r13,rdi
  4193f7:	call   405340 <calloc@plt>
  4193fc:	movsxd rdi,DWORD PTR [rsp+0x68]
  419401:	mov    esi,0x10
  419406:	mov    r12,rax
  419409:	mov    DWORD PTR [rsp+0x10],edi
  41940d:	mov    QWORD PTR [rsp+0x78],rax
  419412:	call   405340 <calloc@plt>
  419417:	mov    rbx,QWORD PTR [rsp+0x70]
  41941c:	mov    rbp,rax
  41941f:	mov    rdi,rbx
  419422:	mov    QWORD PTR [rsp+0x80],rax
  41942a:	call   405380 <malloc@plt>
  41942f:	test   r13d,r13d
  419432:	mov    QWORD PTR [rsp+0x88],rax
  41943a:	mov    QWORD PTR [rsp+0x90],r12
  419442:	mov    QWORD PTR [rsp+0x98],rbp
  41944a:	mov    QWORD PTR [rsp+0xa0],rax
  419452:	mov    edx,DWORD PTR [rsp+0x10]
  419456:	jle    419461 <__flatcc_fb_gen_c_json_printer@@Base+0xbd1>
  419458:	test   r12,r12
  41945b:	je     419f10 <__flatcc_fb_gen_c_json_printer@@Base+0x1680>
  419461:	test   rbp,rbp
  419464:	jne    41946e <__flatcc_fb_gen_c_json_printer@@Base+0xbde>
  419466:	test   edx,edx
  419468:	jg     419f10 <__flatcc_fb_gen_c_json_printer@@Base+0x1680>
  41946e:	test   rbx,rbx
  419471:	je     41947c <__flatcc_fb_gen_c_json_printer@@Base+0xbec>
  419473:	test   rax,rax
  419476:	je     419f10 <__flatcc_fb_gen_c_json_printer@@Base+0x1680>
  41947c:	mov    rdx,QWORD PTR [rsp+0x28]
  419481:	mov    rdi,r15
  419484:	lea    rsi,[rip+0xfffffffffffff9a5]        # 418e30 <__flatcc_fb_gen_c_json_printer@@Base+0x5a0>
  41948b:	call   41d0f0 <fb_scope_table_visit@@Base>
  419490:	mov    esi,DWORD PTR [rsp+0x64]
  419494:	mov    rdi,QWORD PTR [rsp+0x78]
  419499:	xor    r15d,r15d
  41949c:	call   418ec0 <__flatcc_fb_gen_c_json_printer@@Base+0x630>
  4194a1:	mov    rdi,QWORD PTR [rsp+0x80]
  4194a9:	mov    esi,DWORD PTR [rsp+0x68]
  4194ad:	call   418ec0 <__flatcc_fb_gen_c_json_printer@@Base+0x630>
  4194b2:	movsxd rdi,DWORD PTR [rsp+0x64]
  4194b7:	test   edi,edi
  4194b9:	jg     419ef8 <__flatcc_fb_gen_c_json_printer@@Base+0x1668>
  4194bf:	mov    rax,QWORD PTR [rsp+0x18]
  4194c4:	xor    ecx,ecx
  4194c6:	mov    edx,DWORD PTR [rax]
  4194c8:	test   edx,edx
  4194ca:	jne    419ee8 <__flatcc_fb_gen_c_json_printer@@Base+0x1658>
  4194d0:	xor    edx,edx
  4194d2:	lea    rsi,[rip+0x2de1d]        # 4472f6 <_IO_stdin_used@@Base+0x192f6>
  4194d9:	mov    rdi,r14
  4194dc:	call   429130 <flatcc_builder_start_buffer@@Base>
  4194e1:	test   eax,eax
  4194e3:	jne    4194f2 <__flatcc_fb_gen_c_json_printer@@Base+0xc62>
  4194e5:	mov    esi,0x5
  4194ea:	mov    rdi,r14
  4194ed:	call   429dd0 <flatcc_builder_start_table@@Base>
  4194f2:	mov    rax,QWORD PTR [rsp+0x8]
  4194f7:	cmp    WORD PTR [rax+0x20],0x2
  4194fc:	je     419f38 <__flatcc_fb_gen_c_json_printer@@Base+0x16a8>
  419502:	mov    rax,QWORD PTR [rsp+0x8]
  419507:	cmp    WORD PTR [rax+0x38],0x2
  41950c:	je     419f80 <__flatcc_fb_gen_c_json_printer@@Base+0x16f0>
  419512:	mov    eax,DWORD PTR [rsp+0x64]
  419516:	mov    ecx,eax
  419518:	mov    DWORD PTR [rsp+0x3c],eax
  41951c:	mov    rax,QWORD PTR [rsp+0x78]
  419521:	test   ecx,ecx
  419523:	jle    4197dd <__flatcc_fb_gen_c_json_printer@@Base+0xf4d>
  419529:	mov    rbp,rax
  41952c:	mov    eax,DWORD PTR [rsp+0x3c]
  419530:	mov    QWORD PTR [rsp+0x30],r15
  419535:	dec    eax
  419537:	shl    rax,0x4
  41953b:	lea    rax,[rbp+rax*1+0x10]
  419540:	mov    QWORD PTR [rsp+0x50],rax
  419545:	mov    QWORD PTR [rsp+0x58],r15
  41954a:	mov    r13,rbp
  41954d:	mov    r12,r14
  419550:	mov    esi,0x5
  419555:	mov    rdi,r12
  419558:	mov    r15,QWORD PTR [r13+0x0]
  41955c:	call   429dd0 <flatcc_builder_start_table@@Base>
  419561:	mov    rsi,QWORD PTR [r13+0x8]
  419565:	mov    rdi,r12
  419568:	call   42b4c0 <flatcc_builder_create_string_str@@Base>
  41956d:	mov    ebx,eax
  41956f:	test   eax,eax
  419571:	je     419584 <__flatcc_fb_gen_c_json_printer@@Base+0xcf4>
  419573:	xor    esi,esi
  419575:	mov    rdi,r12
  419578:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  41957d:	test   rax,rax
  419580:	je     419584 <__flatcc_fb_gen_c_json_printer@@Base+0xcf4>
  419582:	mov    DWORD PTR [rax],ebx
  419584:	mov    rdi,r12
  419587:	call   429c30 <flatcc_builder_start_offset_vector@@Base>
  41958c:	mov    r14,QWORD PTR [r15+0x28]
  419590:	xor    ebp,ebp
  419592:	test   r14,r14
  419595:	je     41973a <__flatcc_fb_gen_c_json_printer@@Base+0xeaa>
  41959b:	mov    QWORD PTR [rsp+0x20],r15
  4195a0:	mov    QWORD PTR [rsp+0x40],r13
  4195a5:	jmp    419706 <__flatcc_fb_gen_c_json_printer@@Base+0xe76>
  4195aa:	nop    WORD PTR [rax+rax*1+0x0]
  4195b0:	mov    eax,r13d
  4195b3:	and    ax,0x80
  4195b7:	mov    ecx,r13d
  4195ba:	shr    cl,0x7
  4195bd:	cmp    ax,0x1
  4195c1:	sbb    eax,eax
  4195c3:	inc    eax
  4195c5:	mov    BYTE PTR [rsp+0x3b],cl
  4195c9:	mov    DWORD PTR [rsp+0x10],eax
  4195cd:	mov    eax,r13d
  4195d0:	and    ax,0x4
  4195d4:	setne  r15b
  4195d8:	cmp    WORD PTR [r14+0x28],0xe
  4195de:	mov    WORD PTR [rsp+0x18],ax
  4195e3:	je     419d50 <__flatcc_fb_gen_c_json_printer@@Base+0x14c0>
  4195e9:	mov    esi,0x9
  4195ee:	mov    rdi,r12
  4195f1:	call   429dd0 <flatcc_builder_start_table@@Base>
  4195f6:	mov    rax,QWORD PTR [r14+0x8]
  4195fa:	mov    rdi,r12
  4195fd:	mov    rdx,QWORD PTR [rax+0x8]
  419601:	mov    rsi,QWORD PTR [rax]
  419604:	call   42b3a0 <flatcc_builder_create_string@@Base>
  419609:	mov    ebx,eax
  41960b:	test   eax,eax
  41960d:	je     419620 <__flatcc_fb_gen_c_json_printer@@Base+0xd90>
  41960f:	xor    esi,esi
  419611:	mov    rdi,r12
  419614:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  419619:	test   rax,rax
  41961c:	je     419620 <__flatcc_fb_gen_c_json_printer@@Base+0xd90>
  41961e:	mov    DWORD PTR [rax],ebx
  419620:	sub    rsp,0x8
  419624:	push   QWORD PTR [r14+0x28]
  419628:	mov    rdi,r12
  41962b:	push   QWORD PTR [r14+0x20]
  41962f:	push   QWORD PTR [r14+0x18]
  419633:	call   418f40 <__flatcc_fb_gen_c_json_printer@@Base+0x6b0>
  419638:	mov    ebx,eax
  41963a:	add    rsp,0x20
  41963e:	test   eax,eax
  419640:	je     419656 <__flatcc_fb_gen_c_json_printer@@Base+0xdc6>
  419642:	mov    esi,0x1
  419647:	mov    rdi,r12
  41964a:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  41964f:	test   rax,rax
  419652:	je     419656 <__flatcc_fb_gen_c_json_printer@@Base+0xdc6>
  419654:	mov    DWORD PTR [rax],ebx
  419656:	mov    rax,QWORD PTR [rsp+0x20]
  41965b:	movzx  eax,WORD PTR [rax+0x10]
  41965f:	test   ax,ax
  419662:	je     419bb8 <__flatcc_fb_gen_c_json_printer@@Base+0x1328>
  419668:	cmp    ax,0x1
  41966c:	jne    4196a0 <__flatcc_fb_gen_c_json_printer@@Base+0xe10>
  41966e:	mov    rbx,QWORD PTR [r14+0x78]
  419672:	test   bx,bx
  419675:	je     4196a0 <__flatcc_fb_gen_c_json_printer@@Base+0xe10>
  419677:	mov    ecx,0x2
  41967c:	mov    edx,0x2
  419681:	mov    esi,0x3
  419686:	mov    rdi,r12
  419689:	call   42b650 <flatcc_builder_table_add@@Base>
  41968e:	test   rax,rax
  419691:	je     4196a0 <__flatcc_fb_gen_c_json_printer@@Base+0xe10>
  419693:	mov    WORD PTR [rax],bx
  419696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4196a0:	cmp    WORD PTR [rsp+0x18],0x0
  4196a6:	je     4196c7 <__flatcc_fb_gen_c_json_printer@@Base+0xe37>
  4196a8:	mov    ecx,0x1
  4196ad:	mov    edx,0x1
  4196b2:	mov    esi,0x6
  4196b7:	mov    rdi,r12
  4196ba:	call   42b650 <flatcc_builder_table_add@@Base>
  4196bf:	test   rax,rax
  4196c2:	je     4196c7 <__flatcc_fb_gen_c_json_printer@@Base+0xe37>
  4196c4:	mov    BYTE PTR [rax],r15b
  4196c7:	mov    edx,0x2
  4196cc:	lea    rsi,[rip+0x2dc0d]        # 4472e0 <_IO_stdin_used@@Base+0x192e0>
  4196d3:	mov    rdi,r12
  4196d6:	call   42a6c0 <flatcc_builder_check_required@@Base>
  4196db:	test   eax,eax
  4196dd:	je     419fc0 <__flatcc_fb_gen_c_json_printer@@Base+0x1730>
  4196e3:	mov    rdi,r12
  4196e6:	call   42a750 <flatcc_builder_end_table@@Base>
  4196eb:	test   eax,eax
  4196ed:	je     4196f9 <__flatcc_fb_gen_c_json_printer@@Base+0xe69>
  4196ef:	mov    esi,eax
  4196f1:	mov    rdi,r12
  4196f4:	call   429740 <flatcc_builder_offset_vector_push@@Base>
  4196f9:	mov    r14,QWORD PTR [r14]
  4196fc:	or     bpl,BYTE PTR [rsp+0x3b]
  419701:	test   r14,r14
  419704:	je     419730 <__flatcc_fb_gen_c_json_printer@@Base+0xea0>
  419706:	movzx  r13d,WORD PTR [r14+0x70]
  41970b:	test   bpl,bpl
  41970e:	je     4195b0 <__flatcc_fb_gen_c_json_printer@@Base+0xd20>
  419714:	mov    BYTE PTR [rsp+0x3b],0x0
  419719:	mov    DWORD PTR [rsp+0x10],0x0
  419721:	jmp    4195cd <__flatcc_fb_gen_c_json_printer@@Base+0xd3d>
  419726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419730:	mov    r15,QWORD PTR [rsp+0x20]
  419735:	mov    r13,QWORD PTR [rsp+0x40]
  41973a:	mov    rdi,r12
  41973d:	call   42ab90 <flatcc_builder_end_offset_vector@@Base>
  419742:	mov    ebx,eax
  419744:	test   eax,eax
  419746:	je     41975c <__flatcc_fb_gen_c_json_printer@@Base+0xecc>
  419748:	mov    esi,0x1
  41974d:	mov    rdi,r12
  419750:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  419755:	test   rax,rax
  419758:	je     41975c <__flatcc_fb_gen_c_json_printer@@Base+0xecc>
  41975a:	mov    DWORD PTR [rax],ebx
  41975c:	cmp    WORD PTR [r15+0x10],0x1
  419762:	je     419b60 <__flatcc_fb_gen_c_json_printer@@Base+0x12d0>
  419768:	movzx  ebx,WORD PTR [r15+0xb0]
  419770:	test   ebx,ebx
  419772:	je     419792 <__flatcc_fb_gen_c_json_printer@@Base+0xf02>
  419774:	mov    ecx,0x4
  419779:	mov    edx,0x4
  41977e:	mov    esi,0x3
  419783:	mov    rdi,r12
  419786:	call   42b650 <flatcc_builder_table_add@@Base>
  41978b:	test   rax,rax
  41978e:	je     419792 <__flatcc_fb_gen_c_json_printer@@Base+0xf02>
  419790:	mov    DWORD PTR [rax],ebx
  419792:	mov    edx,0x2
  419797:	lea    rsi,[rip+0x2db3c]        # 4472da <_IO_stdin_used@@Base+0x192da>
  41979e:	mov    rdi,r12
  4197a1:	call   42a6c0 <flatcc_builder_check_required@@Base>
  4197a6:	test   eax,eax
  4197a8:	je     419fff <__flatcc_fb_gen_c_json_printer@@Base+0x176f>
  4197ae:	mov    rdi,r12
  4197b1:	call   42a750 <flatcc_builder_end_table@@Base>
  4197b6:	mov    rcx,QWORD PTR [rsp+0x30]
  4197bb:	add    r13,0x10
  4197bf:	mov    DWORD PTR [rcx],eax
  4197c1:	add    rcx,0x4
  4197c5:	mov    QWORD PTR [rsp+0x30],rcx
  4197ca:	cmp    QWORD PTR [rsp+0x50],r13
  4197cf:	jne    419550 <__flatcc_fb_gen_c_json_printer@@Base+0xcc0>
  4197d5:	mov    r15,QWORD PTR [rsp+0x58]
  4197da:	mov    r14,r12
  4197dd:	movsxd rdx,DWORD PTR [rsp+0x3c]
  4197e2:	mov    rsi,r15
  4197e5:	mov    rdi,r14
  4197e8:	call   42ac70 <flatcc_builder_create_offset_vector@@Base>
  4197ed:	mov    ebx,eax
  4197ef:	test   eax,eax
  4197f1:	je     419804 <__flatcc_fb_gen_c_json_printer@@Base+0xf74>
  4197f3:	xor    esi,esi
  4197f5:	mov    rdi,r14
  4197f8:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  4197fd:	test   rax,rax
  419800:	je     419804 <__flatcc_fb_gen_c_json_printer@@Base+0xf74>
  419802:	mov    DWORD PTR [rax],ebx
  419804:	mov    ebx,DWORD PTR [rsp+0x68]
  419808:	mov    rdi,r14
  41980b:	mov    rbp,QWORD PTR [rsp+0x80]
  419813:	call   429c30 <flatcc_builder_start_offset_vector@@Base>
  419818:	test   ebx,ebx
  41981a:	jle    419a92 <__flatcc_fb_gen_c_json_printer@@Base+0x1202>
  419820:	lea    eax,[rbx-0x1]
  419823:	shl    rax,0x4
  419827:	lea    rax,[rbp+rax*1+0x10]
  41982c:	mov    QWORD PTR [rsp+0x18],rax
  419831:	nop    DWORD PTR [rax+0x0]
  419838:	mov    r12,QWORD PTR [rbp+0x0]
  41983c:	mov    esi,0x4
  419841:	mov    rdi,r14
  419844:	movzx  r13d,WORD PTR [r12+0x10]
  41984a:	call   429dd0 <flatcc_builder_start_table@@Base>
  41984f:	mov    rsi,QWORD PTR [rbp+0x8]
  419853:	mov    rdi,r14
  419856:	call   42b4c0 <flatcc_builder_create_string_str@@Base>
  41985b:	mov    ebx,eax
  41985d:	test   eax,eax
  41985f:	je     419872 <__flatcc_fb_gen_c_json_printer@@Base+0xfe2>
  419861:	xor    esi,esi
  419863:	mov    rdi,r14
  419866:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  41986b:	test   rax,rax
  41986e:	je     419872 <__flatcc_fb_gen_c_json_printer@@Base+0xfe2>
  419870:	mov    DWORD PTR [rax],ebx
  419872:	mov    rdi,r14
  419875:	call   429c30 <flatcc_builder_start_offset_vector@@Base>
  41987a:	mov    rbx,QWORD PTR [r12+0x28]
  41987f:	test   rbx,rbx
  419882:	jne    419935 <__flatcc_fb_gen_c_json_printer@@Base+0x10a5>
  419888:	jmp    4199d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
  41988d:	nop    DWORD PTR [rax]
  419890:	call   429dd0 <flatcc_builder_start_table@@Base>
  419895:	mov    rax,QWORD PTR [rbx+0x8]
  419899:	mov    rdi,r14
  41989c:	mov    rdx,QWORD PTR [rax+0x8]
  4198a0:	mov    rsi,QWORD PTR [rax]
  4198a3:	call   42b3a0 <flatcc_builder_create_string@@Base>
  4198a8:	test   eax,eax
  4198aa:	mov    DWORD PTR [rsp+0x10],eax
  4198ae:	je     4198c5 <__flatcc_fb_gen_c_json_printer@@Base+0x1035>
  4198b0:	xor    esi,esi
  4198b2:	mov    rdi,r14
  4198b5:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  4198ba:	test   rax,rax
  4198bd:	je     4198c5 <__flatcc_fb_gen_c_json_printer@@Base+0x1035>
  4198bf:	mov    edx,DWORD PTR [rsp+0x10]
  4198c3:	mov    DWORD PTR [rax],edx
  4198c5:	mov    r8,QWORD PTR [rbx+0x48]
  4198c9:	test   r8,r8
  4198cc:	mov    QWORD PTR [rsp+0x10],r8
  4198d1:	je     4198f7 <__flatcc_fb_gen_c_json_printer@@Base+0x1067>
  4198d3:	mov    ecx,0x8
  4198d8:	mov    edx,0x8
  4198dd:	mov    esi,0x1
  4198e2:	mov    rdi,r14
  4198e5:	call   42b650 <flatcc_builder_table_add@@Base>
  4198ea:	test   rax,rax
  4198ed:	je     4198f7 <__flatcc_fb_gen_c_json_printer@@Base+0x1067>
  4198ef:	mov    r8,QWORD PTR [rsp+0x10]
  4198f4:	mov    QWORD PTR [rax],r8
  4198f7:	mov    edx,0x1
  4198fc:	lea    rsi,[rip+0x2d9ed]        # 4472f0 <_IO_stdin_used@@Base+0x192f0>
  419903:	mov    rdi,r14
  419906:	call   42a6c0 <flatcc_builder_check_required@@Base>
  41990b:	test   eax,eax
  41990d:	je     419fe0 <__flatcc_fb_gen_c_json_printer@@Base+0x1750>
  419913:	mov    rdi,r14
  419916:	call   42a750 <flatcc_builder_end_table@@Base>
  41991b:	test   eax,eax
  41991d:	je     419929 <__flatcc_fb_gen_c_json_printer@@Base+0x1099>
  41991f:	mov    esi,eax
  419921:	mov    rdi,r14
  419924:	call   429740 <flatcc_builder_offset_vector_push@@Base>
  419929:	mov    rbx,QWORD PTR [rbx]
  41992c:	test   rbx,rbx
  41992f:	je     4199d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
  419935:	mov    esi,0x3
  41993a:	mov    rdi,r14
  41993d:	cmp    r13w,0x4
  419942:	jne    419890 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
  419948:	call   429dd0 <flatcc_builder_start_table@@Base>
  41994d:	mov    rax,QWORD PTR [rbx+0x8]
  419951:	mov    rdi,r14
  419954:	mov    rdx,QWORD PTR [rax+0x8]
  419958:	mov    rsi,QWORD PTR [rax]
  41995b:	call   42b3a0 <flatcc_builder_create_string@@Base>
  419960:	test   eax,eax
  419962:	mov    DWORD PTR [rsp+0x10],eax
  419966:	je     41997d <__flatcc_fb_gen_c_json_printer@@Base+0x10ed>
  419968:	xor    esi,esi
  41996a:	mov    rdi,r14
  41996d:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  419972:	test   rax,rax
  419975:	je     41997d <__flatcc_fb_gen_c_json_printer@@Base+0x10ed>
  419977:	mov    edx,DWORD PTR [rsp+0x10]
  41997b:	mov    DWORD PTR [rax],edx
  41997d:	test   r15,r15
  419980:	je     4198c5 <__flatcc_fb_gen_c_json_printer@@Base+0x1035>
  419986:	cmp    WORD PTR [rbx+0x28],0xe
  41998b:	jne    4198c5 <__flatcc_fb_gen_c_json_printer@@Base+0x1035>
  419991:	mov    rax,QWORD PTR [rbx+0x18]
  419995:	mov    rax,QWORD PTR [rax+0xc8]
  41999c:	mov    edx,DWORD PTR [r15+rax*4]
  4199a0:	test   edx,edx
  4199a2:	mov    DWORD PTR [rsp+0x10],edx
  4199a6:	je     4198c5 <__flatcc_fb_gen_c_json_printer@@Base+0x1035>
  4199ac:	mov    esi,0x2
  4199b1:	mov    rdi,r14
  4199b4:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  4199b9:	test   rax,rax
  4199bc:	jne    4198bf <__flatcc_fb_gen_c_json_printer@@Base+0x102f>
  4199c2:	jmp    4198c5 <__flatcc_fb_gen_c_json_printer@@Base+0x1035>
  4199c7:	nop    WORD PTR [rax+rax*1+0x0]
  4199d0:	mov    rdi,r14
  4199d3:	call   42ab90 <flatcc_builder_end_offset_vector@@Base>
  4199d8:	mov    ebx,eax
  4199da:	test   eax,eax
  4199dc:	je     4199f2 <__flatcc_fb_gen_c_json_printer@@Base+0x1162>
  4199de:	mov    esi,0x1
  4199e3:	mov    rdi,r14
  4199e6:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  4199eb:	test   rax,rax
  4199ee:	je     4199f2 <__flatcc_fb_gen_c_json_printer@@Base+0x1162>
  4199f0:	mov    DWORD PTR [rax],ebx
  4199f2:	cmp    r13w,0x4
  4199f7:	jne    419a18 <__flatcc_fb_gen_c_json_printer@@Base+0x1188>
  4199f9:	mov    ecx,0x1
  4199fe:	mov    edx,0x1
  419a03:	mov    esi,0x2
  419a08:	mov    rdi,r14
  419a0b:	call   42b650 <flatcc_builder_table_add@@Base>
  419a10:	test   rax,rax
  419a13:	je     419a18 <__flatcc_fb_gen_c_json_printer@@Base+0x1188>
  419a15:	mov    BYTE PTR [rax],0x1
  419a18:	sub    rsp,0x8
  419a1c:	push   QWORD PTR [r12+0x58]
  419a21:	mov    rdi,r14
  419a24:	push   QWORD PTR [r12+0x50]
  419a29:	push   QWORD PTR [r12+0x48]
  419a2e:	call   418f40 <__flatcc_fb_gen_c_json_printer@@Base+0x6b0>
  419a33:	mov    ebx,eax
  419a35:	add    rsp,0x20
  419a39:	test   eax,eax
  419a3b:	je     419a51 <__flatcc_fb_gen_c_json_printer@@Base+0x11c1>
  419a3d:	mov    esi,0x3
  419a42:	mov    rdi,r14
  419a45:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  419a4a:	test   rax,rax
  419a4d:	je     419a51 <__flatcc_fb_gen_c_json_printer@@Base+0x11c1>
  419a4f:	mov    DWORD PTR [rax],ebx
  419a51:	mov    edx,0x3
  419a56:	lea    rsi,[rip+0x2d88b]        # 4472e8 <_IO_stdin_used@@Base+0x192e8>
  419a5d:	mov    rdi,r14
  419a60:	call   42a6c0 <flatcc_builder_check_required@@Base>
  419a65:	test   eax,eax
  419a67:	je     41a01e <__flatcc_fb_gen_c_json_printer@@Base+0x178e>
  419a6d:	mov    rdi,r14
  419a70:	call   42a750 <flatcc_builder_end_table@@Base>
  419a75:	test   eax,eax
  419a77:	je     419a83 <__flatcc_fb_gen_c_json_printer@@Base+0x11f3>
  419a79:	mov    esi,eax
  419a7b:	mov    rdi,r14
  419a7e:	call   429740 <flatcc_builder_offset_vector_push@@Base>
  419a83:	add    rbp,0x10
  419a87:	cmp    rbp,QWORD PTR [rsp+0x18]
  419a8c:	jne    419838 <__flatcc_fb_gen_c_json_printer@@Base+0xfa8>
  419a92:	mov    rdi,r14
  419a95:	call   42ab90 <flatcc_builder_end_offset_vector@@Base>
  419a9a:	mov    ebx,eax
  419a9c:	test   eax,eax
  419a9e:	je     419ab4 <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
  419aa0:	mov    esi,0x1
  419aa5:	mov    rdi,r14
  419aa8:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  419aad:	test   rax,rax
  419ab0:	je     419ab4 <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
  419ab2:	mov    DWORD PTR [rax],ebx
  419ab4:	mov    rax,QWORD PTR [rsp+0x8]
  419ab9:	mov    rax,QWORD PTR [rax+0x58]
  419abd:	test   rax,rax
  419ac0:	je     419aec <__flatcc_fb_gen_c_json_printer@@Base+0x125c>
  419ac2:	cmp    WORD PTR [rax+0x10],0x0
  419ac7:	jne    419aec <__flatcc_fb_gen_c_json_printer@@Base+0x125c>
  419ac9:	mov    rax,QWORD PTR [rax+0xc8]
  419ad0:	mov    ebx,DWORD PTR [r15+rax*4]
  419ad4:	test   ebx,ebx
  419ad6:	je     419aec <__flatcc_fb_gen_c_json_printer@@Base+0x125c>
  419ad8:	mov    esi,0x4
  419add:	mov    rdi,r14
  419ae0:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  419ae5:	test   rax,rax
  419ae8:	je     419aec <__flatcc_fb_gen_c_json_printer@@Base+0x125c>
  419aea:	mov    DWORD PTR [rax],ebx
  419aec:	mov    edx,0x2
  419af1:	lea    rsi,[rip+0x2d7dc]        # 4472d4 <_IO_stdin_used@@Base+0x192d4>
  419af8:	mov    rdi,r14
  419afb:	call   42a6c0 <flatcc_builder_check_required@@Base>
  419b00:	test   eax,eax
  419b02:	je     41a05c <__flatcc_fb_gen_c_json_printer@@Base+0x17cc>
  419b08:	mov    rdi,r14
  419b0b:	call   42a750 <flatcc_builder_end_table@@Base>
  419b10:	mov    esi,eax
  419b12:	mov    rdi,r14
  419b15:	call   429210 <flatcc_builder_end_buffer@@Base>
  419b1a:	mov    rdi,QWORD PTR [rsp+0x28]
  419b1f:	xor    ebx,ebx
  419b21:	call   418e70 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
  419b26:	test   r15,r15
  419b29:	je     419b33 <__flatcc_fb_gen_c_json_printer@@Base+0x12a3>
  419b2b:	mov    rdi,r15
  419b2e:	call   405240 <free@plt>
  419b33:	mov    rcx,QWORD PTR [rsp+0xb8]
  419b3b:	xor    rcx,QWORD PTR fs:0x28
  419b44:	mov    eax,ebx
  419b46:	jne    41a07b <__flatcc_fb_gen_c_json_printer@@Base+0x17eb>
  419b4c:	add    rsp,0xc8
  419b53:	pop    rbx
  419b54:	pop    rbp
  419b55:	pop    r12
  419b57:	pop    r13
  419b59:	pop    r14
  419b5b:	pop    r15
  419b5d:	ret    
  419b5e:	xchg   ax,ax
  419b60:	mov    rbx,QWORD PTR [r15+0xb8]
  419b67:	test   ebx,ebx
  419b69:	je     419b89 <__flatcc_fb_gen_c_json_printer@@Base+0x12f9>
  419b6b:	mov    ecx,0x4
  419b70:	mov    edx,0x4
  419b75:	mov    esi,0x4
  419b7a:	mov    rdi,r12
  419b7d:	call   42b650 <flatcc_builder_table_add@@Base>
  419b82:	test   rax,rax
  419b85:	je     419b89 <__flatcc_fb_gen_c_json_printer@@Base+0x12f9>
  419b87:	mov    DWORD PTR [rax],ebx
  419b89:	mov    ecx,0x1
  419b8e:	mov    edx,0x1
  419b93:	mov    esi,0x2
  419b98:	mov    rdi,r12
  419b9b:	call   42b650 <flatcc_builder_table_add@@Base>
  419ba0:	test   rax,rax
  419ba3:	je     419768 <__flatcc_fb_gen_c_json_printer@@Base+0xed8>
  419ba9:	mov    BYTE PTR [rax],0x1
  419bac:	jmp    419768 <__flatcc_fb_gen_c_json_printer@@Base+0xed8>
  419bb1:	nop    DWORD PTR [rax+0x0]
  419bb8:	movzx  eax,WORD PTR [r14+0x58]
  419bbd:	cmp    ax,0x4
  419bc1:	je     419d40 <__flatcc_fb_gen_c_json_printer@@Base+0x14b0>
  419bc7:	jbe    419ce8 <__flatcc_fb_gen_c_json_printer@@Base+0x1458>
  419bcd:	cmp    ax,0x5
  419bd1:	je     419d40 <__flatcc_fb_gen_c_json_printer@@Base+0x14b0>
  419bd7:	vxorpd xmm1,xmm1,xmm1
  419bdb:	vxorpd xmm0,xmm0,xmm0
  419bdf:	cmp    ax,0x6
  419be3:	jne    419d00 <__flatcc_fb_gen_c_json_printer@@Base+0x1470>
  419be9:	movzx  ebx,BYTE PTR [r14+0x48]
  419bee:	test   rbx,rbx
  419bf1:	je     419c12 <__flatcc_fb_gen_c_json_printer@@Base+0x1382>
  419bf3:	mov    ecx,0x8
  419bf8:	mov    edx,0x8
  419bfd:	mov    esi,0x4
  419c02:	mov    rdi,r12
  419c05:	call   42b650 <flatcc_builder_table_add@@Base>
  419c0a:	test   rax,rax
  419c0d:	je     419c12 <__flatcc_fb_gen_c_json_printer@@Base+0x1382>
  419c0f:	mov    QWORD PTR [rax],rbx
  419c12:	mov    r8,QWORD PTR [r14+0x88]
  419c19:	mov    ebx,0x4
  419c1e:	test   r8w,r8w
  419c22:	mov    QWORD PTR [rsp+0x48],r8
  419c27:	je     419cc0 <__flatcc_fb_gen_c_json_printer@@Base+0x1430>
  419c2d:	mov    ecx,0x2
  419c32:	mov    edx,0x2
  419c37:	mov    esi,0x2
  419c3c:	mov    rdi,r12
  419c3f:	call   42b650 <flatcc_builder_table_add@@Base>
  419c44:	test   rax,rax
  419c47:	je     419c52 <__flatcc_fb_gen_c_json_printer@@Base+0x13c2>
  419c49:	mov    r8,QWORD PTR [rsp+0x48]
  419c4e:	mov    WORD PTR [rax],r8w
  419c52:	mov    rbx,QWORD PTR [r14+0x88]
  419c59:	lea    ebx,[rbx+rbx*1+0x4]
  419c5d:	test   bx,bx
  419c60:	jne    419cc0 <__flatcc_fb_gen_c_json_printer@@Base+0x1430>
  419c62:	mov    eax,DWORD PTR [rsp+0x10]
  419c66:	test   eax,eax
  419c68:	je     419c89 <__flatcc_fb_gen_c_json_printer@@Base+0x13f9>
  419c6a:	mov    ecx,0x1
  419c6f:	mov    edx,0x1
  419c74:	mov    esi,0x8
  419c79:	mov    rdi,r12
  419c7c:	call   42b650 <flatcc_builder_table_add@@Base>
  419c81:	test   rax,rax
  419c84:	je     419c89 <__flatcc_fb_gen_c_json_printer@@Base+0x13f9>
  419c86:	mov    BYTE PTR [rax],0x1
  419c89:	test   r13w,0x100
  419c8f:	je     4196a0 <__flatcc_fb_gen_c_json_printer@@Base+0xe10>
  419c95:	mov    ecx,0x1
  419c9a:	mov    edx,0x1
  419c9f:	mov    esi,0x7
  419ca4:	mov    rdi,r12
  419ca7:	call   42b650 <flatcc_builder_table_add@@Base>
  419cac:	test   rax,rax
  419caf:	je     4196a0 <__flatcc_fb_gen_c_json_printer@@Base+0xe10>
  419cb5:	mov    BYTE PTR [rax],0x1
  419cb8:	jmp    4196a0 <__flatcc_fb_gen_c_json_printer@@Base+0xe10>
  419cbd:	nop    DWORD PTR [rax]
  419cc0:	mov    ecx,0x2
  419cc5:	mov    edx,0x2
  419cca:	mov    esi,0x3
  419ccf:	mov    rdi,r12
  419cd2:	call   42b650 <flatcc_builder_table_add@@Base>
  419cd7:	test   rax,rax
  419cda:	je     419c62 <__flatcc_fb_gen_c_json_printer@@Base+0x13d2>
  419cdc:	mov    WORD PTR [rax],bx
  419cdf:	jmp    419c62 <__flatcc_fb_gen_c_json_printer@@Base+0x13d2>
  419ce4:	nop    DWORD PTR [rax+0x0]
  419ce8:	vxorpd xmm1,xmm1,xmm1
  419cec:	vmovapd xmm0,xmm1
  419cf0:	cmp    ax,0x3
  419cf4:	jne    419d00 <__flatcc_fb_gen_c_json_printer@@Base+0x1470>
  419cf6:	vmovsd xmm0,QWORD PTR [r14+0x48]
  419cfc:	vxorpd xmm1,xmm1,xmm1
  419d00:	vucomisd xmm0,xmm1
  419d04:	jnp    419f28 <__flatcc_fb_gen_c_json_printer@@Base+0x1698>
  419d0a:	mov    ecx,0x8
  419d0f:	mov    edx,0x8
  419d14:	mov    esi,0x5
  419d19:	mov    rdi,r12
  419d1c:	vmovsd QWORD PTR [rsp+0x48],xmm0
  419d22:	call   42b650 <flatcc_builder_table_add@@Base>
  419d27:	test   rax,rax
  419d2a:	je     419c12 <__flatcc_fb_gen_c_json_printer@@Base+0x1382>
  419d30:	vmovsd xmm0,QWORD PTR [rsp+0x48]
  419d36:	vmovsd QWORD PTR [rax],xmm0
  419d3a:	jmp    419c12 <__flatcc_fb_gen_c_json_printer@@Base+0x1382>
  419d3f:	nop
  419d40:	mov    rbx,QWORD PTR [r14+0x48]
  419d44:	jmp    419bee <__flatcc_fb_gen_c_json_printer@@Base+0x135e>
  419d49:	nop    DWORD PTR [rax+0x0]
  419d50:	mov    rax,QWORD PTR [r14+0x18]
  419d54:	cmp    WORD PTR [rax+0x10],0x4
  419d59:	jne    4195e9 <__flatcc_fb_gen_c_json_printer@@Base+0xd59>
  419d5f:	mov    esi,0x9
  419d64:	mov    rdi,r12
  419d67:	call   429dd0 <flatcc_builder_start_table@@Base>
  419d6c:	mov    rdi,r12
  419d6f:	call   429c90 <flatcc_builder_start_string@@Base>
  419d74:	mov    rax,QWORD PTR [r14+0x8]
  419d78:	mov    rdi,r12
  419d7b:	mov    rdx,QWORD PTR [rax+0x8]
  419d7f:	mov    rsi,QWORD PTR [rax]
  419d82:	call   429900 <flatcc_builder_append_string@@Base>
  419d87:	mov    edx,0x5
  419d8c:	lea    rsi,[rip+0x1d64f]        # 4373e2 <_IO_stdin_used@@Base+0x93e2>
  419d93:	mov    rdi,r12
  419d96:	call   429900 <flatcc_builder_append_string@@Base>
  419d9b:	mov    rdi,r12
  419d9e:	call   42b530 <flatcc_builder_end_string@@Base>
  419da3:	mov    ebx,eax
  419da5:	test   eax,eax
  419da7:	je     419dba <__flatcc_fb_gen_c_json_printer@@Base+0x152a>
  419da9:	xor    esi,esi
  419dab:	mov    rdi,r12
  419dae:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  419db3:	test   rax,rax
  419db6:	je     419dba <__flatcc_fb_gen_c_json_printer@@Base+0x152a>
  419db8:	mov    DWORD PTR [rax],ebx
  419dba:	mov    esi,0x3
  419dbf:	mov    rdi,r12
  419dc2:	call   429dd0 <flatcc_builder_start_table@@Base>
  419dc7:	test   eax,eax
  419dc9:	jne    419e22 <__flatcc_fb_gen_c_json_printer@@Base+0x1592>
  419dcb:	xor    esi,esi
  419dcd:	mov    ecx,0x1
  419dd2:	mov    edx,0x1
  419dd7:	mov    rdi,r12
  419dda:	call   42b650 <flatcc_builder_table_add@@Base>
  419ddf:	test   rax,rax
  419de2:	je     419e22 <__flatcc_fb_gen_c_json_printer@@Base+0x1592>
  419de4:	mov    BYTE PTR [rax],0x1
  419de7:	xor    edx,edx
  419de9:	lea    rsi,[rip+0x2d504]        # 4472f4 <_IO_stdin_used@@Base+0x192f4>
  419df0:	mov    rdi,r12
  419df3:	call   42a6c0 <flatcc_builder_check_required@@Base>
  419df8:	test   eax,eax
  419dfa:	je     41a03d <__flatcc_fb_gen_c_json_printer@@Base+0x17ad>
  419e00:	mov    rdi,r12
  419e03:	call   42a750 <flatcc_builder_end_table@@Base>
  419e08:	mov    ebx,eax
  419e0a:	test   eax,eax
  419e0c:	je     419e22 <__flatcc_fb_gen_c_json_printer@@Base+0x1592>
  419e0e:	mov    esi,0x1
  419e13:	mov    rdi,r12
  419e16:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  419e1b:	test   rax,rax
  419e1e:	je     419e22 <__flatcc_fb_gen_c_json_printer@@Base+0x1592>
  419e20:	mov    DWORD PTR [rax],ebx
  419e22:	mov    rax,QWORD PTR [r14+0x88]
  419e29:	lea    ebx,[rax+rax*1+0x2]
  419e2d:	mov    edx,eax
  419e2f:	test   bx,bx
  419e32:	je     419e5b <__flatcc_fb_gen_c_json_printer@@Base+0x15cb>
  419e34:	mov    ecx,0x2
  419e39:	mov    edx,0x2
  419e3e:	mov    esi,0x3
  419e43:	mov    rdi,r12
  419e46:	call   42b650 <flatcc_builder_table_add@@Base>
  419e4b:	test   rax,rax
  419e4e:	je     419e53 <__flatcc_fb_gen_c_json_printer@@Base+0x15c3>
  419e50:	mov    WORD PTR [rax],bx
  419e53:	movzx  edx,WORD PTR [r14+0x88]
  419e5b:	dec    dx
  419e5e:	mov    ebx,edx
  419e60:	je     419e81 <__flatcc_fb_gen_c_json_printer@@Base+0x15f1>
  419e62:	mov    ecx,0x2
  419e67:	mov    edx,0x2
  419e6c:	mov    esi,0x2
  419e71:	mov    rdi,r12
  419e74:	call   42b650 <flatcc_builder_table_add@@Base>
  419e79:	test   rax,rax
  419e7c:	je     419e81 <__flatcc_fb_gen_c_json_printer@@Base+0x15f1>
  419e7e:	mov    WORD PTR [rax],bx
  419e81:	cmp    WORD PTR [rsp+0x18],0x0
  419e87:	je     419ea8 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
  419e89:	mov    ecx,0x1
  419e8e:	mov    edx,0x1
  419e93:	mov    esi,0x6
  419e98:	mov    rdi,r12
  419e9b:	call   42b650 <flatcc_builder_table_add@@Base>
  419ea0:	test   rax,rax
  419ea3:	je     419ea8 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
  419ea5:	mov    BYTE PTR [rax],r15b
  419ea8:	mov    edx,0x2
  419ead:	lea    rsi,[rip+0x2d42c]        # 4472e0 <_IO_stdin_used@@Base+0x192e0>
  419eb4:	mov    rdi,r12
  419eb7:	call   42a6c0 <flatcc_builder_check_required@@Base>
  419ebc:	test   eax,eax
  419ebe:	je     419fc0 <__flatcc_fb_gen_c_json_printer@@Base+0x1730>
  419ec4:	mov    rdi,r12
  419ec7:	call   42a750 <flatcc_builder_end_table@@Base>
  419ecc:	test   eax,eax
  419ece:	je     4195e9 <__flatcc_fb_gen_c_json_printer@@Base+0xd59>
  419ed4:	mov    esi,eax
  419ed6:	mov    rdi,r12
  419ed9:	call   429740 <flatcc_builder_offset_vector_push@@Base>
  419ede:	jmp    4195e9 <__flatcc_fb_gen_c_json_printer@@Base+0xd59>
  419ee3:	nop    DWORD PTR [rax+rax*1+0x0]
  419ee8:	mov    ecx,0x2
  419eed:	jmp    4194d0 <__flatcc_fb_gen_c_json_printer@@Base+0xc40>
  419ef2:	nop    WORD PTR [rax+rax*1+0x0]
  419ef8:	shl    rdi,0x2
  419efc:	call   405380 <malloc@plt>
  419f01:	mov    r15,rax
  419f04:	test   rax,rax
  419f07:	jne    4194bf <__flatcc_fb_gen_c_json_printer@@Base+0xc2f>
  419f0d:	nop    DWORD PTR [rax]
  419f10:	mov    rdi,QWORD PTR [rsp+0x28]
  419f15:	mov    ebx,0xffffffff
  419f1a:	call   418e70 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
  419f1f:	jmp    419b33 <__flatcc_fb_gen_c_json_printer@@Base+0x12a3>
  419f24:	nop    DWORD PTR [rax+0x0]
  419f28:	je     419c12 <__flatcc_fb_gen_c_json_printer@@Base+0x1382>
  419f2e:	jmp    419d0a <__flatcc_fb_gen_c_json_printer@@Base+0x147a>
  419f33:	nop    DWORD PTR [rax+rax*1+0x0]
  419f38:	movsxd rdx,DWORD PTR [rax+0x18]
  419f3c:	mov    rsi,QWORD PTR [rax+0x10]
  419f40:	mov    rdi,r14
  419f43:	call   42b3a0 <flatcc_builder_create_string@@Base>
  419f48:	mov    ebx,eax
  419f4a:	test   eax,eax
  419f4c:	je     419502 <__flatcc_fb_gen_c_json_printer@@Base+0xc72>
  419f52:	mov    esi,0x2
  419f57:	mov    rdi,r14
  419f5a:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  419f5f:	test   rax,rax
  419f62:	je     419502 <__flatcc_fb_gen_c_json_printer@@Base+0xc72>
  419f68:	mov    DWORD PTR [rax],ebx
  419f6a:	mov    rax,QWORD PTR [rsp+0x8]
  419f6f:	cmp    WORD PTR [rax+0x38],0x2
  419f74:	jne    419512 <__flatcc_fb_gen_c_json_printer@@Base+0xc82>
  419f7a:	nop    WORD PTR [rax+rax*1+0x0]
  419f80:	movsxd rdx,DWORD PTR [rax+0x30]
  419f84:	mov    rsi,QWORD PTR [rax+0x28]
  419f88:	mov    rdi,r14
  419f8b:	call   42b3a0 <flatcc_builder_create_string@@Base>
  419f90:	mov    ebx,eax
  419f92:	test   eax,eax
  419f94:	je     419512 <__flatcc_fb_gen_c_json_printer@@Base+0xc82>
  419f9a:	mov    esi,0x3
  419f9f:	mov    rdi,r14
  419fa2:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  419fa7:	test   rax,rax
  419faa:	je     419512 <__flatcc_fb_gen_c_json_printer@@Base+0xc82>
  419fb0:	mov    DWORD PTR [rax],ebx
  419fb2:	jmp    419512 <__flatcc_fb_gen_c_json_printer@@Base+0xc82>
  419fb7:	nop    WORD PTR [rax+rax*1+0x0]
  419fc0:	lea    rcx,[rip+0x2d2d9]        # 4472a0 <_IO_stdin_used@@Base+0x192a0>
  419fc7:	mov    edx,0x1d
  419fcc:	lea    rsi,[rip+0x2cbf5]        # 446bc8 <_IO_stdin_used@@Base+0x18bc8>
  419fd3:	lea    rdi,[rip+0x2ccfe]        # 446cd8 <_IO_stdin_used@@Base+0x18cd8>
  419fda:	call   405300 <__assert_fail@plt>
  419fdf:	nop
  419fe0:	lea    rcx,[rip+0x2d279]        # 447260 <_IO_stdin_used@@Base+0x19260>
  419fe7:	mov    edx,0x19
  419fec:	lea    rsi,[rip+0x2cbd5]        # 446bc8 <_IO_stdin_used@@Base+0x18bc8>
  419ff3:	lea    rdi,[rip+0x2ce06]        # 446e00 <_IO_stdin_used@@Base+0x18e00>
  419ffa:	call   405300 <__assert_fail@plt>
  419fff:	lea    rcx,[rip+0x2d27a]        # 447280 <_IO_stdin_used@@Base+0x19280>
  41a006:	mov    edx,0x1f
  41a00b:	lea    rsi,[rip+0x2cbb6]        # 446bc8 <_IO_stdin_used@@Base+0x18bc8>
  41a012:	lea    rdi,[rip+0x2cd4f]        # 446d68 <_IO_stdin_used@@Base+0x18d68>
  41a019:	call   405300 <__assert_fail@plt>
  41a01e:	lea    rcx,[rip+0x2d21b]        # 447240 <_IO_stdin_used@@Base+0x19240>
  41a025:	mov    edx,0x1b
  41a02a:	lea    rsi,[rip+0x2cb97]        # 446bc8 <_IO_stdin_used@@Base+0x18bc8>
  41a031:	lea    rdi,[rip+0x2ce60]        # 446e98 <_IO_stdin_used@@Base+0x18e98>
  41a038:	call   405300 <__assert_fail@plt>
  41a03d:	lea    rcx,[rip+0x2d27c]        # 4472c0 <_IO_stdin_used@@Base+0x192c0>
  41a044:	mov    edx,0x17
  41a049:	lea    rsi,[rip+0x2cb78]        # 446bc8 <_IO_stdin_used@@Base+0x18bc8>
  41a050:	lea    rdi,[rip+0x2cbf1]        # 446c48 <_IO_stdin_used@@Base+0x18c48>
  41a057:	call   405300 <__assert_fail@plt>
  41a05c:	lea    rcx,[rip+0x2d1bd]        # 447220 <_IO_stdin_used@@Base+0x19220>
  41a063:	mov    edx,0x21
  41a068:	lea    rsi,[rip+0x2cb59]        # 446bc8 <_IO_stdin_used@@Base+0x18bc8>
  41a06f:	lea    rdi,[rip+0x2ceb2]        # 446f28 <_IO_stdin_used@@Base+0x18f28>
  41a076:	call   405300 <__assert_fail@plt>
  41a07b:	call   4052d0 <__stack_chk_fail@plt>
  41a080:	push   r15
  41a082:	push   r14
  41a084:	push   r13
  41a086:	push   r12
  41a088:	push   rbp
  41a089:	push   rbx
  41a08a:	sub    rsp,0x48
  41a08e:	test   rdi,rdi
  41a091:	je     41a09c <__flatcc_fb_gen_c_json_printer@@Base+0x180c>
  41a093:	cmp    DWORD PTR [rdi+0x4],0x53424642
  41a09a:	je     41a0c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1830>
  41a09c:	lea    rcx,[rip+0x2d15d]        # 447200 <_IO_stdin_used@@Base+0x19200>
  41a0a3:	mov    edx,0xed
  41a0a8:	lea    rsi,[rip+0x2cf11]        # 446fc0 <_IO_stdin_used@@Base+0x18fc0>
  41a0af:	lea    rdi,[rip+0x2cf82]        # 447038 <_IO_stdin_used@@Base+0x19038>
  41a0b6:	call   405300 <__assert_fail@plt>
  41a0bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a0c0:	mov    eax,DWORD PTR [rdi]
  41a0c2:	add    rdi,rax
  41a0c5:	je     41a09c <__flatcc_fb_gen_c_json_printer@@Base+0x180c>
  41a0c7:	movsxd rax,DWORD PTR [rdi]
  41a0ca:	mov    rbx,rdi
  41a0cd:	sub    rbx,rax
  41a0d0:	cmp    WORD PTR [rbx],0x5
  41a0d4:	jbe    41a72e <__flatcc_fb_gen_c_json_printer@@Base+0x1e9e>
  41a0da:	movzx  eax,WORD PTR [rbx+0x4]
  41a0de:	test   ax,ax
  41a0e1:	je     41a72e <__flatcc_fb_gen_c_json_printer@@Base+0x1e9e>
  41a0e7:	add    rdi,rax
  41a0ea:	mov    eax,DWORD PTR [rdi]
  41a0ec:	lea    rcx,[rdi+rax*1+0x4]
  41a0f1:	mov    QWORD PTR [rsp+0x30],rcx
  41a0f6:	test   rcx,rcx
  41a0f9:	je     41a6c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e30>
  41a0ff:	mov    eax,DWORD PTR [rcx-0x4]
  41a102:	test   eax,eax
  41a104:	je     41a6c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e30>
  41a10a:	mov    eax,DWORD PTR [rcx]
  41a10c:	add    rax,rcx
  41a10f:	je     41a70f <__flatcc_fb_gen_c_json_printer@@Base+0x1e7f>
  41a115:	movsxd rdx,DWORD PTR [rax]
  41a118:	mov    rbx,rax
  41a11b:	sub    rbx,rdx
  41a11e:	cmp    WORD PTR [rbx],0x7
  41a122:	jbe    41a641 <__flatcc_fb_gen_c_json_printer@@Base+0x1db1>
  41a128:	movzx  edx,WORD PTR [rbx+0x6]
  41a12c:	test   dx,dx
  41a12f:	je     41a641 <__flatcc_fb_gen_c_json_printer@@Base+0x1db1>
  41a135:	mov    QWORD PTR [rsp+0x28],0x0
  41a13e:	add    rax,rdx
  41a141:	mov    edx,DWORD PTR [rax]
  41a143:	lea    rbp,[rax+rdx*1+0x4]
  41a148:	test   rbp,rbp
  41a14b:	je     41a5f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1d60>
  41a151:	mov    eax,DWORD PTR [rbp-0x4]
  41a154:	mov    QWORD PTR [rsp+0x38],rax
  41a159:	test   rax,rax
  41a15c:	je     41a5f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1d60>
  41a162:	lea    r13,[rax-0x1]
  41a166:	shr    rax,1
  41a169:	mov    r15,rax
  41a16c:	nop    DWORD PTR [rax+0x0]
  41a170:	lea    rbx,[r15+r15*1]
  41a174:	cmp    r13,rbx
  41a177:	jb     41a395 <__flatcc_fb_gen_c_json_printer@@Base+0x1b05>
  41a17d:	mov    r12,r15
  41a180:	mov    QWORD PTR [rsp+0x20],r15
  41a185:	jmp    41a1fd <__flatcc_fb_gen_c_json_printer@@Base+0x196d>
  41a187:	nop    WORD PTR [rax+rax*1+0x0]
  41a190:	mov    r10d,DWORD PTR [rdi-0x4]
  41a194:	mov    DWORD PTR [rsp+0x18],r8d
  41a199:	cmp    r11,r10
  41a19c:	mov    rdx,r10
  41a19f:	cmovbe rdx,r11
  41a1a3:	mov    QWORD PTR [rsp+0x10],r9
  41a1a8:	mov    QWORD PTR [rsp+0x8],r10
  41a1ad:	mov    QWORD PTR [rsp],r11
  41a1b1:	call   405270 <strncmp@plt>
  41a1b6:	test   eax,eax
  41a1b8:	mov    r11,QWORD PTR [rsp]
  41a1bc:	mov    r10,QWORD PTR [rsp+0x8]
  41a1c1:	mov    r9,QWORD PTR [rsp+0x10]
  41a1c6:	mov    r8d,DWORD PTR [rsp+0x18]
  41a1cb:	je     41a387 <__flatcc_fb_gen_c_json_printer@@Base+0x1af7>
  41a1d1:	jns    41a390 <__flatcc_fb_gen_c_json_printer@@Base+0x1b00>
  41a1d7:	sub    r12,rbx
  41a1da:	shl    r12d,0x2
  41a1de:	sub    r14d,r12d
  41a1e1:	add    r8d,r12d
  41a1e4:	lea    rax,[rbx+rbx*1]
  41a1e8:	mov    DWORD PTR [r9],r14d
  41a1eb:	mov    r12,rbx
  41a1ee:	mov    DWORD PTR [r15],r8d
  41a1f1:	cmp    r13,rax
  41a1f4:	jb     41a390 <__flatcc_fb_gen_c_json_printer@@Base+0x1b00>
  41a1fa:	mov    rbx,rax
  41a1fd:	mov    r14d,DWORD PTR [rbp-0x4]
  41a201:	cmp    r13,rbx
  41a204:	jbe    41a2e1 <__flatcc_fb_gen_c_json_printer@@Base+0x1a51>
  41a20a:	lea    rcx,[rbx*4+0x0]
  41a212:	lea    rax,[rbp+rcx*1+0x0]
  41a217:	cmp    r14,rbx
  41a21a:	jbe    41a6f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  41a220:	mov    edx,DWORD PTR [rax]
  41a222:	add    rax,rdx
  41a225:	je     41a6d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  41a22b:	movsxd rdx,DWORD PTR [rax]
  41a22e:	mov    rsi,rax
  41a231:	sub    rsi,rdx
  41a234:	cmp    WORD PTR [rsi],0x5
  41a238:	jbe    41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a23e:	movzx  edx,WORD PTR [rsi+0x4]
  41a242:	test   dx,dx
  41a245:	je     41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a24b:	add    rax,rdx
  41a24e:	mov    edx,DWORD PTR [rax]
  41a250:	lea    r15,[rbx+0x1]
  41a254:	lea    rdi,[rax+rdx*1+0x4]
  41a259:	lea    rax,[rbp+rcx*1+0x4]
  41a25e:	cmp    r15,r14
  41a261:	jae    41a6f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  41a267:	mov    edx,DWORD PTR [rax]
  41a269:	add    rax,rdx
  41a26c:	je     41a6d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  41a272:	movsxd rdx,DWORD PTR [rax]
  41a275:	mov    rsi,rax
  41a278:	sub    rsi,rdx
  41a27b:	cmp    WORD PTR [rsi],0x5
  41a27f:	jbe    41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a285:	movzx  edx,WORD PTR [rsi+0x4]
  41a289:	test   dx,dx
  41a28c:	je     41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a292:	add    rax,rdx
  41a295:	mov    edx,DWORD PTR [rax]
  41a297:	xor    r9d,r9d
  41a29a:	lea    rsi,[rax+rdx*1+0x4]
  41a29f:	test   rsi,rsi
  41a2a2:	je     41a2a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1a18>
  41a2a4:	mov    r9d,DWORD PTR [rsi-0x4]
  41a2a8:	test   rdi,rdi
  41a2ab:	je     41a660 <__flatcc_fb_gen_c_json_printer@@Base+0x1dd0>
  41a2b1:	mov    ecx,DWORD PTR [rdi-0x4]
  41a2b4:	mov    QWORD PTR [rsp],r9
  41a2b8:	cmp    r9,rcx
  41a2bb:	mov    rdx,rcx
  41a2be:	cmovbe rdx,r9
  41a2c2:	mov    QWORD PTR [rsp+0x8],rcx
  41a2c7:	call   405270 <strncmp@plt>
  41a2cc:	test   eax,eax
  41a2ce:	mov    r9,QWORD PTR [rsp]
  41a2d2:	mov    rcx,QWORD PTR [rsp+0x8]
  41a2d7:	je     41a662 <__flatcc_fb_gen_c_json_printer@@Base+0x1dd2>
  41a2dd:	cmovs  rbx,r15
  41a2e1:	lea    r9,[rbp+r12*4+0x0]
  41a2e6:	cmp    r12,r14
  41a2e9:	jae    41a6f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  41a2ef:	mov    eax,DWORD PTR [r9]
  41a2f2:	mov    r8,rax
  41a2f5:	add    rax,r9
  41a2f8:	je     41a6d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  41a2fe:	movsxd rdx,DWORD PTR [rax]
  41a301:	mov    rdi,rax
  41a304:	sub    rdi,rdx
  41a307:	cmp    WORD PTR [rdi],0x5
  41a30b:	jbe    41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a311:	movzx  edx,WORD PTR [rdi+0x4]
  41a315:	test   dx,dx
  41a318:	je     41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a31e:	add    rax,rdx
  41a321:	mov    edx,DWORD PTR [rax]
  41a323:	lea    r15,[rbp+rbx*4+0x0]
  41a328:	lea    rdi,[rax+rdx*1+0x4]
  41a32d:	cmp    rbx,r14
  41a330:	jae    41a6f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  41a336:	mov    eax,DWORD PTR [r15]
  41a339:	mov    r14,rax
  41a33c:	add    rax,r15
  41a33f:	je     41a6d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  41a345:	movsxd rdx,DWORD PTR [rax]
  41a348:	mov    rcx,rax
  41a34b:	sub    rcx,rdx
  41a34e:	cmp    WORD PTR [rcx],0x5
  41a352:	jbe    41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a358:	movzx  edx,WORD PTR [rcx+0x4]
  41a35c:	test   dx,dx
  41a35f:	je     41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a365:	add    rax,rdx
  41a368:	mov    edx,DWORD PTR [rax]
  41a36a:	xor    r11d,r11d
  41a36d:	lea    rsi,[rax+rdx*1+0x4]
  41a372:	test   rsi,rsi
  41a375:	je     41a37b <__flatcc_fb_gen_c_json_printer@@Base+0x1aeb>
  41a377:	mov    r11d,DWORD PTR [rsi-0x4]
  41a37b:	test   rdi,rdi
  41a37e:	jne    41a190 <__flatcc_fb_gen_c_json_printer@@Base+0x1900>
  41a384:	xor    r10d,r10d
  41a387:	cmp    r11,r10
  41a38a:	ja     41a1d7 <__flatcc_fb_gen_c_json_printer@@Base+0x1947>
  41a390:	mov    r15,QWORD PTR [rsp+0x20]
  41a395:	dec    r15
  41a398:	cmp    r15,0xffffffffffffffff
  41a39c:	jne    41a170 <__flatcc_fb_gen_c_json_printer@@Base+0x18e0>
  41a3a2:	test   r13,r13
  41a3a5:	je     41a5f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1d60>
  41a3ab:	mov    r15d,0x1
  41a3b1:	sub    r15,QWORD PTR [rsp+0x38]
  41a3b6:	lea    eax,[r15*4+0x0]
  41a3be:	mov    DWORD PTR [rsp+0x20],eax
  41a3c2:	nop    WORD PTR [rax+rax*1+0x0]
  41a3c8:	mov    eax,DWORD PTR [rbp+r13*4+0x0]
  41a3cd:	mov    edx,DWORD PTR [rbp+0x0]
  41a3d0:	mov    ecx,DWORD PTR [rsp+0x20]
  41a3d4:	xor    r12d,r12d
  41a3d7:	add    edx,ecx
  41a3d9:	sub    eax,ecx
  41a3db:	mov    DWORD PTR [rbp+0x0],eax
  41a3de:	xor    ebx,ebx
  41a3e0:	mov    DWORD PTR [rbp+r13*4+0x0],edx
  41a3e5:	dec    r13
  41a3e8:	jmp    41a46a <__flatcc_fb_gen_c_json_printer@@Base+0x1bda>
  41a3ed:	nop    DWORD PTR [rax]
  41a3f0:	mov    r10d,DWORD PTR [rsi-0x4]
  41a3f4:	test   rdi,rdi
  41a3f7:	je     41a670 <__flatcc_fb_gen_c_json_printer@@Base+0x1de0>
  41a3fd:	mov    r9d,DWORD PTR [rdi-0x4]
  41a401:	mov    QWORD PTR [rsp+0x18],r8
  41a406:	cmp    r10,r9
  41a409:	mov    rdx,r9
  41a40c:	cmovbe rdx,r10
  41a410:	mov    QWORD PTR [rsp+0x10],rcx
  41a415:	mov    QWORD PTR [rsp+0x8],r9
  41a41a:	mov    QWORD PTR [rsp],r10
  41a41e:	call   405270 <strncmp@plt>
  41a423:	test   eax,eax
  41a425:	mov    r10,QWORD PTR [rsp]
  41a429:	mov    r9,QWORD PTR [rsp+0x8]
  41a42e:	mov    rcx,QWORD PTR [rsp+0x10]
  41a433:	mov    r8,QWORD PTR [rsp+0x18]
  41a438:	je     41a673 <__flatcc_fb_gen_c_json_printer@@Base+0x1de3>
  41a43e:	jns    41a5e1 <__flatcc_fb_gen_c_json_printer@@Base+0x1d51>
  41a444:	sub    r12,rbx
  41a447:	shl    r12d,0x2
  41a44b:	sub    r14d,r12d
  41a44e:	add    r15d,r12d
  41a451:	lea    rax,[rbx+rbx*1]
  41a455:	mov    DWORD PTR [rcx],r14d
  41a458:	mov    r12,rbx
  41a45b:	mov    DWORD PTR [r8],r15d
  41a45e:	cmp    r13,rax
  41a461:	jb     41a5e1 <__flatcc_fb_gen_c_json_printer@@Base+0x1d51>
  41a467:	mov    rbx,rax
  41a46a:	mov    r14d,DWORD PTR [rbp-0x4]
  41a46e:	cmp    r13,rbx
  41a471:	jbe    41a54b <__flatcc_fb_gen_c_json_printer@@Base+0x1cbb>
  41a477:	lea    rcx,[rbx*4+0x0]
  41a47f:	lea    rax,[rbp+rcx*1+0x0]
  41a484:	cmp    r14,rbx
  41a487:	jbe    41a6f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  41a48d:	mov    edx,DWORD PTR [rax]
  41a48f:	add    rax,rdx
  41a492:	je     41a6d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  41a498:	movsxd rdx,DWORD PTR [rax]
  41a49b:	mov    rdi,rax
  41a49e:	sub    rdi,rdx
  41a4a1:	cmp    WORD PTR [rdi],0x5
  41a4a5:	jbe    41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a4ab:	movzx  edx,WORD PTR [rdi+0x4]
  41a4af:	test   dx,dx
  41a4b2:	je     41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a4b8:	add    rax,rdx
  41a4bb:	mov    edx,DWORD PTR [rax]
  41a4bd:	lea    r15,[rbx+0x1]
  41a4c1:	lea    rdi,[rax+rdx*1+0x4]
  41a4c6:	lea    rax,[rbp+rcx*1+0x4]
  41a4cb:	cmp    r15,r14
  41a4ce:	jae    41a6f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  41a4d4:	mov    edx,DWORD PTR [rax]
  41a4d6:	add    rax,rdx
  41a4d9:	je     41a6d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  41a4df:	movsxd rdx,DWORD PTR [rax]
  41a4e2:	mov    rsi,rax
  41a4e5:	sub    rsi,rdx
  41a4e8:	cmp    WORD PTR [rsi],0x5
  41a4ec:	jbe    41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a4f2:	movzx  edx,WORD PTR [rsi+0x4]
  41a4f6:	test   dx,dx
  41a4f9:	je     41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a4ff:	add    rax,rdx
  41a502:	mov    edx,DWORD PTR [rax]
  41a504:	lea    rsi,[rax+rdx*1+0x4]
  41a509:	test   rsi,rsi
  41a50c:	je     41a54b <__flatcc_fb_gen_c_json_printer@@Base+0x1cbb>
  41a50e:	mov    r8d,DWORD PTR [rsi-0x4]
  41a512:	test   rdi,rdi
  41a515:	je     41a690 <__flatcc_fb_gen_c_json_printer@@Base+0x1e00>
  41a51b:	mov    ecx,DWORD PTR [rdi-0x4]
  41a51e:	mov    QWORD PTR [rsp],r8
  41a522:	cmp    r8,rcx
  41a525:	mov    rdx,rcx
  41a528:	cmovbe rdx,r8
  41a52c:	mov    QWORD PTR [rsp+0x8],rcx
  41a531:	call   405270 <strncmp@plt>
  41a536:	test   eax,eax
  41a538:	mov    r8,QWORD PTR [rsp]
  41a53c:	mov    rcx,QWORD PTR [rsp+0x8]
  41a541:	je     41a692 <__flatcc_fb_gen_c_json_printer@@Base+0x1e02>
  41a547:	cmovs  rbx,r15
  41a54b:	lea    rcx,[rbp+r12*4+0x0]
  41a550:	cmp    r12,r14
  41a553:	jae    41a6f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  41a559:	mov    eax,DWORD PTR [rcx]
  41a55b:	mov    r15,rax
  41a55e:	add    rax,rcx
  41a561:	je     41a6d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  41a567:	movsxd rdx,DWORD PTR [rax]
  41a56a:	mov    rdi,rax
  41a56d:	sub    rdi,rdx
  41a570:	cmp    WORD PTR [rdi],0x5
  41a574:	jbe    41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a57a:	movzx  edx,WORD PTR [rdi+0x4]
  41a57e:	test   dx,dx
  41a581:	je     41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a587:	add    rax,rdx
  41a58a:	mov    edx,DWORD PTR [rax]
  41a58c:	lea    r8,[rbp+rbx*4+0x0]
  41a591:	lea    rdi,[rax+rdx*1+0x4]
  41a596:	cmp    rbx,r14
  41a599:	jae    41a6f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  41a59f:	mov    eax,DWORD PTR [r8]
  41a5a2:	mov    r14,rax
  41a5a5:	add    rax,r8
  41a5a8:	je     41a6d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  41a5ae:	movsxd rdx,DWORD PTR [rax]
  41a5b1:	mov    rsi,rax
  41a5b4:	sub    rsi,rdx
  41a5b7:	cmp    WORD PTR [rsi],0x5
  41a5bb:	jbe    41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a5c1:	movzx  edx,WORD PTR [rsi+0x4]
  41a5c5:	test   dx,dx
  41a5c8:	je     41a6a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41a5ce:	add    rax,rdx
  41a5d1:	mov    edx,DWORD PTR [rax]
  41a5d3:	lea    rsi,[rax+rdx*1+0x4]
  41a5d8:	test   rsi,rsi
  41a5db:	jne    41a3f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1b60>
  41a5e1:	add    DWORD PTR [rsp+0x20],0x4
  41a5e6:	test   r13,r13
  41a5e9:	jne    41a3c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1b38>
  41a5ef:	nop
  41a5f0:	inc    QWORD PTR [rsp+0x28]
  41a5f5:	mov    rax,QWORD PTR [rsp+0x30]
  41a5fa:	mov    eax,DWORD PTR [rax-0x4]
  41a5fd:	mov    rbx,QWORD PTR [rsp+0x28]
  41a602:	cmp    rbx,rax
  41a605:	jae    41a6c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e30>
  41a60b:	mov    rbx,QWORD PTR [rsp+0x30]
  41a610:	mov    rdi,QWORD PTR [rsp+0x28]
  41a615:	mov    edx,DWORD PTR [rbx+rdi*4]
  41a618:	lea    rax,[rbx+rdi*4]
  41a61c:	add    rax,rdx
  41a61f:	je     41a70f <__flatcc_fb_gen_c_json_printer@@Base+0x1e7f>
  41a625:	movsxd rdx,DWORD PTR [rax]
  41a628:	mov    rbx,rax
  41a62b:	sub    rbx,rdx
  41a62e:	cmp    WORD PTR [rbx],0x7
  41a632:	jbe    41a641 <__flatcc_fb_gen_c_json_printer@@Base+0x1db1>
  41a634:	movzx  edx,WORD PTR [rbx+0x6]
  41a638:	test   dx,dx
  41a63b:	jne    41a13e <__flatcc_fb_gen_c_json_printer@@Base+0x18ae>
  41a641:	lea    rcx,[rip+0x2cb98]        # 4471e0 <_IO_stdin_used@@Base+0x191e0>
  41a648:	mov    edx,0xe0
  41a64d:	lea    rsi,[rip+0x2c96c]        # 446fc0 <_IO_stdin_used@@Base+0x18fc0>
  41a654:	lea    rdi,[rip+0x2ca05]        # 447060 <_IO_stdin_used@@Base+0x19060>
  41a65b:	call   405300 <__assert_fail@plt>
  41a660:	xor    ecx,ecx
  41a662:	cmp    r9,rcx
  41a665:	cmova  rbx,r15
  41a669:	jmp    41a2e1 <__flatcc_fb_gen_c_json_printer@@Base+0x1a51>
  41a66e:	xchg   ax,ax
  41a670:	xor    r9d,r9d
  41a673:	cmp    r10,r9
  41a676:	ja     41a444 <__flatcc_fb_gen_c_json_printer@@Base+0x1bb4>
  41a67c:	add    DWORD PTR [rsp+0x20],0x4
  41a681:	test   r13,r13
  41a684:	jne    41a3c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1b38>
  41a68a:	jmp    41a5f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1d60>
  41a68f:	nop
  41a690:	xor    ecx,ecx
  41a692:	cmp    r8,rcx
  41a695:	cmova  rbx,r15
  41a699:	jmp    41a54b <__flatcc_fb_gen_c_json_printer@@Base+0x1cbb>
  41a69e:	xchg   ax,ax
  41a6a0:	lea    rcx,[rip+0x2caf9]        # 4471a0 <_IO_stdin_used@@Base+0x191a0>
  41a6a7:	mov    edx,0xc3
  41a6ac:	lea    rsi,[rip+0x2c90d]        # 446fc0 <_IO_stdin_used@@Base+0x18fc0>
  41a6b3:	lea    rdi,[rip+0x2c9a6]        # 447060 <_IO_stdin_used@@Base+0x19060>
  41a6ba:	call   405300 <__assert_fail@plt>
  41a6bf:	nop
  41a6c0:	add    rsp,0x48
  41a6c4:	pop    rbx
  41a6c5:	pop    rbp
  41a6c6:	pop    r12
  41a6c8:	pop    r13
  41a6ca:	pop    r14
  41a6cc:	pop    r15
  41a6ce:	ret    
  41a6cf:	nop
  41a6d0:	lea    rcx,[rip+0x2cac9]        # 4471a0 <_IO_stdin_used@@Base+0x191a0>
  41a6d7:	mov    edx,0xc3
  41a6dc:	lea    rsi,[rip+0x2c8dd]        # 446fc0 <_IO_stdin_used@@Base+0x18fc0>
  41a6e3:	lea    rdi,[rip+0x2c94e]        # 447038 <_IO_stdin_used@@Base+0x19038>
  41a6ea:	call   405300 <__assert_fail@plt>
  41a6ef:	nop
  41a6f0:	lea    rcx,[rip+0x2cac9]        # 4471c0 <_IO_stdin_used@@Base+0x191c0>
  41a6f7:	mov    edx,0xc0
  41a6fc:	lea    rsi,[rip+0x2c8bd]        # 446fc0 <_IO_stdin_used@@Base+0x18fc0>
  41a703:	lea    rdi,[rip+0x2c97e]        # 447088 <_IO_stdin_used@@Base+0x19088>
  41a70a:	call   405300 <__assert_fail@plt>
  41a70f:	lea    rcx,[rip+0x2caca]        # 4471e0 <_IO_stdin_used@@Base+0x191e0>
  41a716:	mov    edx,0xe0
  41a71b:	lea    rsi,[rip+0x2c89e]        # 446fc0 <_IO_stdin_used@@Base+0x18fc0>
  41a722:	lea    rdi,[rip+0x2c90f]        # 447038 <_IO_stdin_used@@Base+0x19038>
  41a729:	call   405300 <__assert_fail@plt>
  41a72e:	lea    rcx,[rip+0x2cacb]        # 447200 <_IO_stdin_used@@Base+0x19200>
  41a735:	mov    edx,0xed
  41a73a:	lea    rsi,[rip+0x2c87f]        # 446fc0 <_IO_stdin_used@@Base+0x18fc0>
  41a741:	lea    rdi,[rip+0x2c918]        # 447060 <_IO_stdin_used@@Base+0x19060>
  41a748:	call   405300 <__assert_fail@plt>
  41a74d:	nop    DWORD PTR [rax]

000000000041a750 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
  41a750:	endbr64 
  41a754:	push   r14
  41a756:	mov    r14,rsi
  41a759:	push   r13
  41a75b:	mov    r13,rdi
  41a75e:	push   r12
  41a760:	mov    r12,rcx
  41a763:	push   rbp
  41a764:	mov    rbp,rdx
  41a767:	push   rbx
  41a768:	sub    rsp,0x190
  41a76f:	mov    rbx,rsp
  41a772:	mov    rdi,rbx
  41a775:	mov    rax,QWORD PTR fs:0x28
  41a77e:	mov    QWORD PTR [rsp+0x188],rax
  41a786:	xor    eax,eax
  41a788:	call   428780 <flatcc_builder_init@@Base>
  41a78d:	mov    esi,DWORD PTR [r13+0xd8]
  41a794:	lea    rdx,[r13+0xdc]
  41a79b:	mov    rdi,rbx
  41a79e:	mov    rcx,r14
  41a7a1:	call   419370 <__flatcc_fb_gen_c_json_printer@@Base+0xae0>
  41a7a6:	mov    rdx,QWORD PTR [r12]
  41a7aa:	mov    rsi,rbp
  41a7ad:	mov    rdi,rbx
  41a7b0:	call   42bd40 <flatcc_builder_copy_buffer@@Base>
  41a7b5:	test   rax,rax
  41a7b8:	je     41a7c2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x72>
  41a7ba:	mov    rdi,rbp
  41a7bd:	call   41a080 <__flatcc_fb_gen_c_json_printer@@Base+0x17f0>
  41a7c2:	mov    rdi,rbx
  41a7c5:	call   42bc20 <flatcc_builder_get_buffer_size@@Base>
  41a7ca:	mov    QWORD PTR [r12],rax
  41a7ce:	mov    rdi,rbx
  41a7d1:	call   428940 <flatcc_builder_clear@@Base>
  41a7d6:	mov    rcx,QWORD PTR [rsp+0x188]
  41a7de:	xor    rcx,QWORD PTR fs:0x28
  41a7e7:	mov    rax,rbp
  41a7ea:	jne    41a7fc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xac>
  41a7ec:	add    rsp,0x190
  41a7f3:	pop    rbx
  41a7f4:	pop    rbp
  41a7f5:	pop    r12
  41a7f7:	pop    r13
  41a7f9:	pop    r14
  41a7fb:	ret    
  41a7fc:	call   4052d0 <__stack_chk_fail@plt>
  41a801:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a80c:	nop    DWORD PTR [rax+0x0]

000000000041a810 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
  41a810:	endbr64 
  41a814:	push   r13
  41a816:	mov    r13,rsi
  41a819:	push   r12
  41a81b:	mov    r12,rdx
  41a81e:	push   rbp
  41a81f:	mov    rbp,rdi
  41a822:	push   rbx
  41a823:	sub    rsp,0x198
  41a82a:	mov    rbx,rsp
  41a82d:	mov    rdi,rbx
  41a830:	mov    rax,QWORD PTR fs:0x28
  41a839:	mov    QWORD PTR [rsp+0x188],rax
  41a841:	xor    eax,eax
  41a843:	call   428780 <flatcc_builder_init@@Base>
  41a848:	mov    esi,DWORD PTR [rbp+0xd8]
  41a84e:	lea    rdx,[rbp+0xdc]
  41a855:	mov    rcx,r13
  41a858:	mov    rdi,rbx
  41a85b:	call   419370 <__flatcc_fb_gen_c_json_printer@@Base+0xae0>
  41a860:	xor    ebp,ebp
  41a862:	test   eax,eax
  41a864:	jne    41a881 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x71>
  41a866:	mov    rsi,r12
  41a869:	mov    rdi,rbx
  41a86c:	call   42bda0 <flatcc_builder_finalize_buffer@@Base>
  41a871:	mov    rbp,rax
  41a874:	test   rax,rax
  41a877:	je     41a881 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x71>
  41a879:	mov    rdi,rax
  41a87c:	call   41a080 <__flatcc_fb_gen_c_json_printer@@Base+0x17f0>
  41a881:	mov    rdi,rbx
  41a884:	call   428940 <flatcc_builder_clear@@Base>
  41a889:	mov    rcx,QWORD PTR [rsp+0x188]
  41a891:	xor    rcx,QWORD PTR fs:0x28
  41a89a:	mov    rax,rbp
  41a89d:	jne    41a8ad <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x9d>
  41a89f:	add    rsp,0x198
  41a8a6:	pop    rbx
  41a8a7:	pop    rbp
  41a8a8:	pop    r12
  41a8aa:	pop    r13
  41a8ac:	ret    
  41a8ad:	call   4052d0 <__stack_chk_fail@plt>
  41a8b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a8bd:	nop    DWORD PTR [rax]

000000000041a8c0 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
  41a8c0:	endbr64 
  41a8c4:	push   r14
  41a8c6:	push   r13
  41a8c8:	push   r12
  41a8ca:	mov    r12,rsi
  41a8cd:	push   rbp
  41a8ce:	mov    rbp,rdi
  41a8d1:	push   rbx
  41a8d2:	sub    rsp,0x10
  41a8d6:	mov    rbx,QWORD PTR [rdi+0x108]
  41a8dd:	mov    rax,QWORD PTR fs:0x28
  41a8e6:	mov    QWORD PTR [rsp+0x8],rax
  41a8eb:	xor    eax,eax
  41a8ed:	mov    r13d,DWORD PTR [rdi+0x80]
  41a8f4:	test   rbx,rbx
  41a8f7:	je     41aa00 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x140>
  41a8fd:	mov    rdi,rbx
  41a900:	call   4052c0 <strlen@plt>
  41a905:	mov    r14,rax
  41a908:	test   r13d,r13d
  41a90b:	je     41a9a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe0>
  41a911:	mov    rax,QWORD PTR [rip+0x376b8]        # 451fd0 <stdout@GLIBC_2.2.5>
  41a918:	mov    rbx,QWORD PTR [rax]
  41a91b:	test   rbx,rbx
  41a91e:	je     41aa85 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c5>
  41a924:	mov    rdi,rbp
  41a927:	mov    rdx,rsp
  41a92a:	mov    rsi,r12
  41a92d:	call   41a810 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
  41a932:	mov    rbp,rax
  41a935:	test   rax,rax
  41a938:	je     41aa40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x180>
  41a93e:	mov    rdx,QWORD PTR [rsp]
  41a942:	mov    rcx,rbx
  41a945:	mov    esi,0x1
  41a94a:	mov    rdi,rax
  41a94d:	call   4053f0 <fwrite@plt>
  41a952:	xor    r12d,r12d
  41a955:	cmp    rax,QWORD PTR [rsp]
  41a959:	jne    41aa10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x150>
  41a95f:	mov    rdi,rbp
  41a962:	call   405240 <free@plt>
  41a967:	mov    rax,QWORD PTR [rip+0x37662]        # 451fd0 <stdout@GLIBC_2.2.5>
  41a96e:	cmp    QWORD PTR [rax],rbx
  41a971:	je     41a97b <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbb>
  41a973:	mov    rdi,rbx
  41a976:	call   4052b0 <fclose@plt>
  41a97b:	mov    rcx,QWORD PTR [rsp+0x8]
  41a980:	xor    rcx,QWORD PTR fs:0x28
  41a989:	mov    eax,r12d
  41a98c:	jne    41aa90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d0>
  41a992:	add    rsp,0x10
  41a996:	pop    rbx
  41a997:	pop    rbp
  41a998:	pop    r12
  41a99a:	pop    r13
  41a99c:	pop    r14
  41a99e:	ret    
  41a99f:	nop
  41a9a0:	mov    r13,QWORD PTR [r12+0x110]
  41a9a8:	mov    rdi,r13
  41a9ab:	call   4052c0 <strlen@plt>
  41a9b0:	mov    rcx,rax
  41a9b3:	mov    rdx,r13
  41a9b6:	mov    r9d,0x1
  41a9bc:	lea    r8,[rip+0x14f49]        # 42f90c <_IO_stdin_used@@Base+0x190c>
  41a9c3:	mov    rsi,r14
  41a9c6:	mov    rdi,rbx
  41a9c9:	call   41d9f0 <__flatcc_fb_create_join_path_n@@Base>
  41a9ce:	mov    r13,rax
  41a9d1:	test   rax,rax
  41a9d4:	je     41aa95 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d5>
  41a9da:	lea    rsi,[rip+0x14f70]        # 42f951 <_IO_stdin_used@@Base+0x1951>
  41a9e1:	mov    rdi,rax
  41a9e4:	call   4053d0 <fopen@plt>
  41a9e9:	mov    rbx,rax
  41a9ec:	test   rax,rax
  41a9ef:	je     41aa60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0>
  41a9f1:	mov    rdi,r13
  41a9f4:	call   405240 <free@plt>
  41a9f9:	jmp    41a91b <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b>
  41a9fe:	xchg   ax,ax
  41aa00:	xor    r14d,r14d
  41aa03:	lea    rbx,[rip+0x2bf54]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  41aa0a:	jmp    41a908 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x48>
  41aa0f:	nop
  41aa10:	mov    rax,QWORD PTR [rip+0x375d1]        # 451fe8 <stderr@GLIBC_2.2.5>
  41aa17:	lea    rdx,[rip+0x2c702]        # 447120 <_IO_stdin_used@@Base+0x19120>
  41aa1e:	mov    rdi,QWORD PTR [rax]
  41aa21:	mov    esi,0x1
  41aa26:	xor    eax,eax
  41aa28:	call   405400 <__fprintf_chk@plt>
  41aa2d:	mov    r12d,0xffffffff
  41aa33:	jmp    41a95f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x9f>
  41aa38:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa40:	lea    rsi,[rip+0x2c6b1]        # 4470f8 <_IO_stdin_used@@Base+0x190f8>
  41aa47:	mov    edi,0x1
  41aa4c:	xor    eax,eax
  41aa4e:	call   4053c0 <__printf_chk@plt>
  41aa53:	mov    r12d,0xffffffff
  41aa59:	jmp    41a967 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa7>
  41aa5e:	xchg   ax,ax
  41aa60:	mov    rax,QWORD PTR [rip+0x37581]        # 451fe8 <stderr@GLIBC_2.2.5>
  41aa67:	mov    rcx,r13
  41aa6a:	mov    rdi,QWORD PTR [rax]
  41aa6d:	lea    rdx,[rip+0x2c64c]        # 4470c0 <_IO_stdin_used@@Base+0x190c0>
  41aa74:	mov    esi,0x1
  41aa79:	xor    eax,eax
  41aa7b:	call   405400 <__fprintf_chk@plt>
  41aa80:	jmp    41a9f1 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x131>
  41aa85:	mov    r12d,0xffffffff
  41aa8b:	jmp    41a97b <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbb>
  41aa90:	call   4052d0 <__stack_chk_fail@plt>
  41aa95:	mov    rax,QWORD PTR [rip+0x3754c]        # 451fe8 <stderr@GLIBC_2.2.5>
  41aa9c:	lea    rdx,[rip+0x14d3d]        # 42f7e0 <_IO_stdin_used@@Base+0x17e0>
  41aaa3:	mov    rdi,QWORD PTR [rax]
  41aaa6:	mov    esi,0x1
  41aaab:	xor    eax,eax
  41aaad:	call   405400 <__fprintf_chk@plt>
  41aab2:	mov    edi,0x1
  41aab7:	call   4053e0 <exit@plt>
  41aabc:	nop    DWORD PTR [rax+0x0]
  41aac0:	push   rbx
  41aac1:	mov    rbx,rdi
  41aac4:	mov    rdi,QWORD PTR [rdi]
  41aac7:	test   rdi,rdi
  41aaca:	je     41aad1 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x211>
  41aacc:	call   405240 <free@plt>
  41aad1:	vpxor  xmm0,xmm0,xmm0
  41aad5:	vmovups XMMWORD PTR [rbx],xmm0
  41aad9:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41aade:	pop    rbx
  41aadf:	ret    
  41aae0:	push   r15
  41aae2:	mov    rax,rdi
  41aae5:	push   r14
  41aae7:	push   r13
  41aae9:	push   r12
  41aaeb:	push   rbp
  41aaec:	push   rbx
  41aaed:	sub    rsp,0x38
  41aaf1:	mov    QWORD PTR [rsp+0x18],rdi
  41aaf6:	mov    QWORD PTR [rsp+0x8],rsi
  41aafb:	mov    r12,QWORD PTR [rdi]
  41aafe:	mov    rcx,QWORD PTR fs:0x28
  41ab07:	mov    QWORD PTR [rsp+0x28],rcx
  41ab0c:	xor    ecx,ecx
  41ab0e:	test   r12,r12
  41ab11:	je     41ab87 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c7>
  41ab13:	mov    rax,QWORD PTR [rax+0x18]
  41ab17:	mov    r14,rdx
  41ab1a:	mov    rdi,rsi
  41ab1d:	lea    rcx,[rsp+0x20]
  41ab22:	mov    edx,0x2f693b52
  41ab27:	mov    rsi,r14
  41ab2a:	mov    QWORD PTR [rsp+0x10],rax
  41ab2f:	lea    rbp,[rax-0x1]
  41ab33:	call   42c690 <cmetrohash64_1@@Base>
  41ab38:	mov    ecx,DWORD PTR [rsp+0x20]
  41ab3c:	mov    rax,rbp
  41ab3f:	and    rax,rcx
  41ab42:	lea    r15,[r12+rax*8]
  41ab46:	mov    rbx,QWORD PTR [r15]
  41ab49:	test   rbx,rbx
  41ab4c:	je     41ab87 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c7>
  41ab4e:	lea    r13,[rcx+0x1]
  41ab52:	nop    WORD PTR [rax+rax*1+0x0]
  41ab58:	cmp    rbx,0x2
  41ab5c:	je     41ab72 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b2>
  41ab5e:	mov    rdi,QWORD PTR [rsp+0x8]
  41ab63:	mov    rdx,r14
  41ab66:	mov    rsi,rbx
  41ab69:	call   405270 <strncmp@plt>
  41ab6e:	test   eax,eax
  41ab70:	je     41abb0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f0>
  41ab72:	mov    rax,r13
  41ab75:	and    rax,rbp
  41ab78:	lea    r15,[r12+rax*8]
  41ab7c:	mov    rbx,QWORD PTR [r15]
  41ab7f:	inc    r13
  41ab82:	test   rbx,rbx
  41ab85:	jne    41ab58 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x298>
  41ab87:	xor    ebx,ebx
  41ab89:	mov    rcx,QWORD PTR [rsp+0x28]
  41ab8e:	xor    rcx,QWORD PTR fs:0x28
  41ab97:	mov    rax,rbx
  41ab9a:	jne    41abc2 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x302>
  41ab9c:	add    rsp,0x38
  41aba0:	pop    rbx
  41aba1:	pop    rbp
  41aba2:	pop    r12
  41aba4:	pop    r13
  41aba6:	pop    r14
  41aba8:	pop    r15
  41abaa:	ret    
  41abab:	nop    DWORD PTR [rax+rax*1+0x0]
  41abb0:	mov    rax,QWORD PTR [rsp+0x18]
  41abb5:	mov    QWORD PTR [r15],0x2
  41abbc:	dec    QWORD PTR [rax+0x10]
  41abc0:	jmp    41ab89 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c9>
  41abc2:	call   4052d0 <__stack_chk_fail@plt>
  41abc7:	nop    WORD PTR [rax+rax*1+0x0]
  41abd0:	push   r14
  41abd2:	push   r13
  41abd4:	push   r12
  41abd6:	mov    r12,rdi
  41abd9:	push   rbp
  41abda:	push   rbx
  41abdb:	sub    rsp,0x30
  41abdf:	mov    rax,QWORD PTR fs:0x28
  41abe8:	mov    QWORD PTR [rsp+0x28],rax
  41abed:	xor    eax,eax
  41abef:	cmp    QWORD PTR [rdi+0x10],rsi
  41abf3:	cmovae rsi,QWORD PTR [rdi+0x10]
  41abf8:	mov    r13,QWORD PTR [rdi]
  41abfb:	cmp    rsi,0x2
  41abff:	jbe    41acf0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x430>
  41ac05:	mov    eax,0x4
  41ac0a:	nop    WORD PTR [rax+rax*1+0x0]
  41ac10:	lea    rbx,[rax+rax*1]
  41ac14:	imul   rax,rax,0x166
  41ac1b:	shr    rax,0x8
  41ac1f:	mov    rdx,rax
  41ac22:	mov    rax,rbx
  41ac25:	cmp    rsi,rdx
  41ac28:	ja     41ac10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x350>
  41ac2a:	mov    esi,0x8
  41ac2f:	mov    rdi,rbx
  41ac32:	call   405340 <calloc@plt>
  41ac37:	mov    QWORD PTR [rsp],rax
  41ac3b:	test   rax,rax
  41ac3e:	je     41acfa <__flatcc_fb_codegen_bfbs_to_file@@Base+0x43a>
  41ac44:	cmp    QWORD PTR [r12+0x18],0x0
  41ac4a:	mov    QWORD PTR [rsp+0x8],0x0
  41ac53:	mov    QWORD PTR [rsp+0x18],rbx
  41ac58:	mov    QWORD PTR [rsp+0x10],0x0
  41ac61:	je     41aca9 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e9>
  41ac63:	xor    ebx,ebx
  41ac65:	mov    r14,rsp
  41ac68:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac70:	mov    rbp,QWORD PTR [r13+rbx*8+0x0]
  41ac75:	test   rbp,rbp
  41ac78:	je     41ac9f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3df>
  41ac7a:	cmp    rbp,0x2
  41ac7e:	je     41ac9f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3df>
  41ac80:	mov    rdi,rbp
  41ac83:	call   4052c0 <strlen@plt>
  41ac88:	mov    rdx,rax
  41ac8b:	mov    r8d,0x3
  41ac91:	mov    rcx,rbp
  41ac94:	mov    rsi,rbp
  41ac97:	mov    rdi,r14
  41ac9a:	call   41ad10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
  41ac9f:	inc    rbx
  41aca2:	cmp    QWORD PTR [r12+0x18],rbx
  41aca7:	ja     41ac70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b0>
  41aca9:	mov    rdi,r12
  41acac:	call   41aac0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x200>
  41acb1:	vmovdqa xmm0,XMMWORD PTR [rsp]
  41acb6:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  41acbc:	vmovups XMMWORD PTR [r12],xmm0
  41acc2:	vmovups XMMWORD PTR [r12+0x10],xmm1
  41acc9:	xor    eax,eax
  41accb:	mov    rcx,QWORD PTR [rsp+0x28]
  41acd0:	xor    rcx,QWORD PTR fs:0x28
  41acd9:	jne    41ad01 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x441>
  41acdb:	add    rsp,0x30
  41acdf:	pop    rbx
  41ace0:	pop    rbp
  41ace1:	pop    r12
  41ace3:	pop    r13
  41ace5:	pop    r14
  41ace7:	ret    
  41ace8:	nop    DWORD PTR [rax+rax*1+0x0]
  41acf0:	mov    ebx,0x4
  41acf5:	jmp    41ac2a <__flatcc_fb_codegen_bfbs_to_file@@Base+0x36a>
  41acfa:	mov    eax,0xffffffff
  41acff:	jmp    41accb <__flatcc_fb_codegen_bfbs_to_file@@Base+0x40b>
  41ad01:	call   4052d0 <__stack_chk_fail@plt>
  41ad06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad10:	push   r15
  41ad12:	push   r14
  41ad14:	push   r13
  41ad16:	push   r12
  41ad18:	push   rbp
  41ad19:	push   rbx
  41ad1a:	sub    rsp,0x48
  41ad1e:	mov    QWORD PTR [rsp+0x20],rdi
  41ad23:	mov    QWORD PTR [rsp+0x8],rsi
  41ad28:	mov    QWORD PTR [rsp+0x10],rdx
  41ad2d:	mov    QWORD PTR [rsp+0x18],rcx
  41ad32:	mov    DWORD PTR [rsp+0x2c],r8d
  41ad37:	mov    rdi,QWORD PTR fs:0x28
  41ad40:	mov    QWORD PTR [rsp+0x38],rdi
  41ad45:	xor    edi,edi
  41ad47:	test   rcx,rcx
  41ad4a:	je     41af44 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x684>
  41ad50:	cmp    QWORD PTR [rsp+0x18],0x2
  41ad56:	je     41af25 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x665>
  41ad5c:	cmp    QWORD PTR [rsp+0x18],0x1
  41ad62:	je     41af06 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x646>
  41ad68:	mov    rcx,QWORD PTR [rsp+0x20]
  41ad6d:	mov    rbx,QWORD PTR [rcx+0x18]
  41ad71:	mov    rsi,QWORD PTR [rcx+0x10]
  41ad75:	imul   rax,rbx,0xb3
  41ad7c:	shr    rax,0x8
  41ad80:	cmp    rsi,rax
  41ad83:	jae    41ae30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x570>
  41ad89:	mov    rax,QWORD PTR [rsp+0x20]
  41ad8e:	mov    rsi,QWORD PTR [rsp+0x10]
  41ad93:	mov    rdi,QWORD PTR [rsp+0x8]
  41ad98:	lea    rcx,[rsp+0x30]
  41ad9d:	mov    edx,0x2f693b52
  41ada2:	mov    rbp,QWORD PTR [rax]
  41ada5:	dec    rbx
  41ada8:	call   42c690 <cmetrohash64_1@@Base>
  41adad:	mov    r8d,DWORD PTR [rsp+0x30]
  41adb2:	mov    rax,rbx
  41adb5:	and    rax,r8
  41adb8:	lea    r13,[rbp+rax*8+0x0]
  41adbd:	mov    eax,DWORD PTR [rsp+0x2c]
  41adc1:	sub    eax,0x2
  41adc4:	cmp    eax,0x1
  41adc7:	jbe    41aeb0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5f0>
  41adcd:	mov    r15,QWORD PTR [r13+0x0]
  41add1:	lea    r14,[r8+0x1]
  41add5:	xor    r12d,r12d
  41add8:	test   r15,r15
  41addb:	jne    41ae19 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x559>
  41addd:	jmp    41aefe <__flatcc_fb_codegen_bfbs_to_file@@Base+0x63e>
  41ade2:	nop    WORD PTR [rax+rax*1+0x0]
  41ade8:	mov    rdx,QWORD PTR [rsp+0x10]
  41aded:	mov    rdi,QWORD PTR [rsp+0x8]
  41adf2:	mov    rsi,r15
  41adf5:	call   405270 <strncmp@plt>
  41adfa:	test   eax,eax
  41adfc:	je     41ae98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5d8>
  41ae02:	mov    rax,rbx
  41ae05:	and    rax,r14
  41ae08:	lea    r13,[rbp+rax*8+0x0]
  41ae0d:	mov    r15,QWORD PTR [r13+0x0]
  41ae11:	inc    r14
  41ae14:	test   r15,r15
  41ae17:	je     41ae50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x590>
  41ae19:	cmp    r15,0x2
  41ae1d:	jne    41ade8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x528>
  41ae1f:	test   r12,r12
  41ae22:	cmove  r12,r13
  41ae26:	jmp    41ae02 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x542>
  41ae28:	nop    DWORD PTR [rax+rax*1+0x0]
  41ae30:	add    rsi,rsi
  41ae33:	mov    rdi,rcx
  41ae36:	mov    rbx,rcx
  41ae39:	call   41abd0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x310>
  41ae3e:	test   eax,eax
  41ae40:	jne    41af63 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6a3>
  41ae46:	mov    rbx,QWORD PTR [rbx+0x18]
  41ae4a:	jmp    41ad89 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c9>
  41ae4f:	nop
  41ae50:	test   r12,r12
  41ae53:	cmove  r12,r13
  41ae57:	mov    rax,QWORD PTR [rsp+0x20]
  41ae5c:	xor    r15d,r15d
  41ae5f:	inc    QWORD PTR [rax+0x10]
  41ae63:	mov    rax,QWORD PTR [rsp+0x18]
  41ae68:	mov    QWORD PTR [r12],rax
  41ae6c:	mov    rdi,QWORD PTR [rsp+0x38]
  41ae71:	xor    rdi,QWORD PTR fs:0x28
  41ae7a:	mov    rax,r15
  41ae7d:	jne    41af91 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d1>
  41ae83:	add    rsp,0x48
  41ae87:	pop    rbx
  41ae88:	pop    rbp
  41ae89:	pop    r12
  41ae8b:	pop    r13
  41ae8d:	pop    r14
  41ae8f:	pop    r15
  41ae91:	ret    
  41ae92:	nop    WORD PTR [rax+rax*1+0x0]
  41ae98:	mov    eax,DWORD PTR [rsp+0x2c]
  41ae9c:	test   eax,eax
  41ae9e:	jne    41ae6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ac>
  41aea0:	mov    rax,QWORD PTR [rsp+0x18]
  41aea5:	mov    QWORD PTR [r13+0x0],rax
  41aea9:	jmp    41ae6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ac>
  41aeab:	nop    DWORD PTR [rax+rax*1+0x0]
  41aeb0:	mov    rax,QWORD PTR [rsp+0x20]
  41aeb5:	inc    QWORD PTR [rax+0x10]
  41aeb9:	mov    rax,QWORD PTR [r13+0x0]
  41aebd:	test   rax,rax
  41aec0:	je     41aeed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x62d>
  41aec2:	cmp    rax,0x2
  41aec6:	je     41aeed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x62d>
  41aec8:	lea    rax,[r8+0x1]
  41aecc:	jmp    41aed6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x616>
  41aece:	xchg   ax,ax
  41aed0:	cmp    rdx,0x2
  41aed4:	je     41aeed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x62d>
  41aed6:	mov    rdx,rbx
  41aed9:	and    rdx,rax
  41aedc:	lea    r13,[rbp+rdx*8+0x0]
  41aee1:	mov    rdx,QWORD PTR [r13+0x0]
  41aee5:	inc    rax
  41aee8:	test   rdx,rdx
  41aeeb:	jne    41aed0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x610>
  41aeed:	mov    rax,QWORD PTR [rsp+0x18]
  41aef2:	xor    r15d,r15d
  41aef5:	mov    QWORD PTR [r13+0x0],rax
  41aef9:	jmp    41ae6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ac>
  41aefe:	mov    r12,r13
  41af01:	jmp    41ae57 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x597>
  41af06:	lea    rcx,[rip+0x2c4f3]        # 447400 <_IO_stdin_used@@Base+0x19400>
  41af0d:	mov    edx,0x74
  41af12:	lea    rsi,[rip+0x2c3e7]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41af19:	lea    rdi,[rip+0x2c4b1]        # 4473d1 <_IO_stdin_used@@Base+0x193d1>
  41af20:	call   405300 <__assert_fail@plt>
  41af25:	lea    rcx,[rip+0x2c4d4]        # 447400 <_IO_stdin_used@@Base+0x19400>
  41af2c:	mov    edx,0x73
  41af31:	lea    rsi,[rip+0x2c3c8]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41af38:	lea    rdi,[rip+0x2c47b]        # 4473ba <_IO_stdin_used@@Base+0x193ba>
  41af3f:	call   405300 <__assert_fail@plt>
  41af44:	lea    rcx,[rip+0x2c4b5]        # 447400 <_IO_stdin_used@@Base+0x19400>
  41af4b:	mov    edx,0x72
  41af50:	lea    rsi,[rip+0x2c3a9]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41af57:	lea    rdi,[rip+0x2c445]        # 4473a3 <_IO_stdin_used@@Base+0x193a3>
  41af5e:	call   405300 <__assert_fail@plt>
  41af63:	mov    rax,QWORD PTR [rip+0x3707e]        # 451fe8 <stderr@GLIBC_2.2.5>
  41af6a:	lea    rcx,[rip+0x2c3ff]        # 447370 <_IO_stdin_used@@Base+0x19370>
  41af71:	mov    rdi,QWORD PTR [rax]
  41af74:	lea    rdx,[rip+0x2c46b]        # 4473e6 <_IO_stdin_used@@Base+0x193e6>
  41af7b:	mov    esi,0x1
  41af80:	xor    eax,eax
  41af82:	call   405400 <__fprintf_chk@plt>
  41af87:	mov    edi,0x1
  41af8c:	call   4053e0 <exit@plt>
  41af91:	call   4052d0 <__stack_chk_fail@plt>
  41af96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41afa0:	push   r15
  41afa2:	push   r14
  41afa4:	push   r13
  41afa6:	push   r12
  41afa8:	push   rbp
  41afa9:	push   rbx
  41afaa:	sub    rsp,0x18
  41afae:	mov    rax,QWORD PTR fs:0x28
  41afb7:	mov    QWORD PTR [rsp+0x8],rax
  41afbc:	xor    eax,eax
  41afbe:	test   rdi,rdi
  41afc1:	je     41b02b <__flatcc_fb_codegen_bfbs_to_file@@Base+0x76b>
  41afc3:	mov    r12,QWORD PTR [rsi]
  41afc6:	mov    r14,rdx
  41afc9:	mov    r15,rcx
  41afcc:	mov    r13,rdi
  41afcf:	mov    rcx,rsp
  41afd2:	mov    edx,0x2f693b52
  41afd7:	mov    rsi,r15
  41afda:	mov    rdi,r14
  41afdd:	call   42c690 <cmetrohash64_1@@Base>
  41afe2:	dec    r12
  41afe5:	mov    ebp,DWORD PTR [rsp]
  41afe8:	mov    rax,r12
  41afeb:	and    rax,rbp
  41afee:	mov    rbx,QWORD PTR [r13+rax*8+0x0]
  41aff3:	test   rbx,rbx
  41aff6:	je     41b02b <__flatcc_fb_codegen_bfbs_to_file@@Base+0x76b>
  41aff8:	inc    rbp
  41affb:	nop    DWORD PTR [rax+rax*1+0x0]
  41b000:	cmp    rbx,0x2
  41b004:	je     41b018 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x758>
  41b006:	mov    rdx,r15
  41b009:	mov    rsi,rbx
  41b00c:	mov    rdi,r14
  41b00f:	call   405270 <strncmp@plt>
  41b014:	test   eax,eax
  41b016:	je     41b02d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x76d>
  41b018:	mov    rax,r12
  41b01b:	and    rax,rbp
  41b01e:	mov    rbx,QWORD PTR [r13+rax*8+0x0]
  41b023:	inc    rbp
  41b026:	test   rbx,rbx
  41b029:	jne    41b000 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x740>
  41b02b:	xor    ebx,ebx
  41b02d:	mov    rcx,QWORD PTR [rsp+0x8]
  41b032:	xor    rcx,QWORD PTR fs:0x28
  41b03b:	mov    rax,rbx
  41b03e:	jne    41b04f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x78f>
  41b040:	add    rsp,0x18
  41b044:	pop    rbx
  41b045:	pop    rbp
  41b046:	pop    r12
  41b048:	pop    r13
  41b04a:	pop    r14
  41b04c:	pop    r15
  41b04e:	ret    
  41b04f:	call   4052d0 <__stack_chk_fail@plt>
  41b054:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41b05f:	nop

000000000041b060 <str_set_clear@@Base>:
  41b060:	endbr64 
  41b064:	jmp    41aac0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x200>
  41b069:	nop    DWORD PTR [rax+0x0]

000000000041b070 <str_set_destroy@@Base>:
  41b070:	endbr64 
  41b074:	push   r14
  41b076:	push   r13
  41b078:	push   r12
  41b07a:	push   rbp
  41b07b:	mov    rbp,rdi
  41b07e:	push   rbx
  41b07f:	test   rsi,rsi
  41b082:	je     41b0be <str_set_destroy@@Base+0x4e>
  41b084:	cmp    QWORD PTR [rdi+0x18],0x0
  41b089:	mov    r12,QWORD PTR [rdi]
  41b08c:	je     41b0be <str_set_destroy@@Base+0x4e>
  41b08e:	mov    r13,rsi
  41b091:	mov    r14,rdx
  41b094:	xor    ebx,ebx
  41b096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b0a0:	mov    rsi,QWORD PTR [r12+rbx*8]
  41b0a4:	test   rsi,rsi
  41b0a7:	je     41b0b5 <str_set_destroy@@Base+0x45>
  41b0a9:	cmp    rsi,0x2
  41b0ad:	je     41b0b5 <str_set_destroy@@Base+0x45>
  41b0af:	mov    rdi,r14
  41b0b2:	call   r13
  41b0b5:	inc    rbx
  41b0b8:	cmp    rbx,QWORD PTR [rbp+0x18]
  41b0bc:	jb     41b0a0 <str_set_destroy@@Base+0x30>
  41b0be:	pop    rbx
  41b0bf:	mov    rdi,rbp
  41b0c2:	pop    rbp
  41b0c3:	pop    r12
  41b0c5:	pop    r13
  41b0c7:	pop    r14
  41b0c9:	jmp    41aac0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x200>
  41b0ce:	xchg   ax,ax

000000000041b0d0 <str_set_init@@Base>:
  41b0d0:	endbr64 
  41b0d4:	push   rbp
  41b0d5:	push   rbx
  41b0d6:	mov    rbx,rdi
  41b0d9:	sub    rsp,0x8
  41b0dd:	cmp    rsi,0x2
  41b0e1:	jbe    41b140 <str_set_init@@Base+0x70>
  41b0e3:	mov    eax,0x4
  41b0e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b0f0:	lea    rbp,[rax+rax*1]
  41b0f4:	imul   rax,rax,0x166
  41b0fb:	shr    rax,0x8
  41b0ff:	mov    rdx,rax
  41b102:	mov    rax,rbp
  41b105:	cmp    rsi,rdx
  41b108:	ja     41b0f0 <str_set_init@@Base+0x20>
  41b10a:	mov    esi,0x8
  41b10f:	mov    rdi,rbp
  41b112:	call   405340 <calloc@plt>
  41b117:	mov    QWORD PTR [rbx],rax
  41b11a:	test   rax,rax
  41b11d:	je     41b147 <str_set_init@@Base+0x77>
  41b11f:	mov    QWORD PTR [rbx+0x8],0x0
  41b127:	mov    QWORD PTR [rbx+0x18],rbp
  41b12b:	mov    QWORD PTR [rbx+0x10],0x0
  41b133:	xor    eax,eax
  41b135:	add    rsp,0x8
  41b139:	pop    rbx
  41b13a:	pop    rbp
  41b13b:	ret    
  41b13c:	nop    DWORD PTR [rax+0x0]
  41b140:	mov    ebp,0x4
  41b145:	jmp    41b10a <str_set_init@@Base+0x3a>
  41b147:	mov    eax,0xffffffff
  41b14c:	jmp    41b135 <str_set_init@@Base+0x65>
  41b14e:	xchg   ax,ax

000000000041b150 <str_set_resize@@Base>:
  41b150:	endbr64 
  41b154:	jmp    41abd0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x310>
  41b159:	nop    DWORD PTR [rax+0x0]

000000000041b160 <str_set_insert@@Base>:
  41b160:	endbr64 
  41b164:	jmp    41ad10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
  41b169:	nop    DWORD PTR [rax+0x0]

000000000041b170 <str_set_insert_item@@Base>:
  41b170:	endbr64 
  41b174:	push   r12
  41b176:	mov    r12d,edx
  41b179:	push   rbp
  41b17a:	mov    rbp,rdi
  41b17d:	mov    rdi,rsi
  41b180:	push   rbx
  41b181:	mov    rbx,rsi
  41b184:	call   4052c0 <strlen@plt>
  41b189:	mov    rcx,rbx
  41b18c:	mov    rsi,rbx
  41b18f:	pop    rbx
  41b190:	mov    rdi,rbp
  41b193:	pop    rbp
  41b194:	mov    r8d,r12d
  41b197:	mov    rdx,rax
  41b19a:	pop    r12
  41b19c:	jmp    41ad10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
  41b1a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41b1ac:	nop    DWORD PTR [rax+0x0]

000000000041b1b0 <str_set_find@@Base>:
  41b1b0:	endbr64 
  41b1b4:	mov    rax,rsi
  41b1b7:	lea    rsi,[rdi+0x18]
  41b1bb:	mov    rdi,QWORD PTR [rdi]
  41b1be:	mov    rcx,rdx
  41b1c1:	mov    rdx,rax
  41b1c4:	jmp    41afa0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e0>
  41b1c9:	nop    DWORD PTR [rax+0x0]

000000000041b1d0 <str_set_find_item@@Base>:
  41b1d0:	endbr64 
  41b1d4:	push   rbp
  41b1d5:	mov    rbp,rsi
  41b1d8:	push   rbx
  41b1d9:	mov    rbx,rdi
  41b1dc:	mov    rdi,rsi
  41b1df:	sub    rsp,0x8
  41b1e3:	call   4052c0 <strlen@plt>
  41b1e8:	mov    rdi,QWORD PTR [rbx]
  41b1eb:	add    rsp,0x8
  41b1ef:	lea    rsi,[rbx+0x18]
  41b1f3:	pop    rbx
  41b1f4:	mov    rdx,rbp
  41b1f7:	mov    rcx,rax
  41b1fa:	pop    rbp
  41b1fb:	jmp    41afa0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e0>

000000000041b200 <str_set_remove@@Base>:
  41b200:	endbr64 
  41b204:	jmp    41aae0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x220>
  41b209:	nop    DWORD PTR [rax+0x0]

000000000041b210 <str_set_remove_item@@Base>:
  41b210:	endbr64 
  41b214:	push   rbp
  41b215:	mov    rbp,rdi
  41b218:	mov    rdi,rsi
  41b21b:	push   rbx
  41b21c:	mov    rbx,rsi
  41b21f:	sub    rsp,0x8
  41b223:	call   4052c0 <strlen@plt>
  41b228:	add    rsp,0x8
  41b22c:	mov    rsi,rbx
  41b22f:	pop    rbx
  41b230:	mov    rdi,rbp
  41b233:	mov    rdx,rax
  41b236:	pop    rbp
  41b237:	jmp    41aae0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x220>
  41b23c:	nop    DWORD PTR [rax+0x0]

000000000041b240 <str_set_visit@@Base>:
  41b240:	endbr64 
  41b244:	push   r14
  41b246:	push   r13
  41b248:	push   r12
  41b24a:	push   rbp
  41b24b:	push   rbx
  41b24c:	cmp    QWORD PTR [rdi+0x18],0x0
  41b251:	mov    r14,QWORD PTR [rdi]
  41b254:	je     41b286 <str_set_visit@@Base+0x46>
  41b256:	mov    r13,rdx
  41b259:	mov    r12,rsi
  41b25c:	mov    rbp,rdi
  41b25f:	xor    ebx,ebx
  41b261:	nop    DWORD PTR [rax+0x0]
  41b268:	mov    rsi,QWORD PTR [r14+rbx*8]
  41b26c:	test   rsi,rsi
  41b26f:	je     41b27d <str_set_visit@@Base+0x3d>
  41b271:	cmp    rsi,0x2
  41b275:	je     41b27d <str_set_visit@@Base+0x3d>
  41b277:	mov    rdi,r13
  41b27a:	call   r12
  41b27d:	inc    rbx
  41b280:	cmp    rbx,QWORD PTR [rbp+0x18]
  41b284:	jb     41b268 <str_set_visit@@Base+0x28>
  41b286:	pop    rbx
  41b287:	pop    rbp
  41b288:	pop    r12
  41b28a:	pop    r13
  41b28c:	pop    r14
  41b28e:	ret    
  41b28f:	nop
  41b290:	push   rbx
  41b291:	mov    rbx,rdi
  41b294:	mov    rdi,QWORD PTR [rdi]
  41b297:	test   rdi,rdi
  41b29a:	je     41b2a1 <str_set_visit@@Base+0x61>
  41b29c:	call   405240 <free@plt>
  41b2a1:	vpxor  xmm0,xmm0,xmm0
  41b2a5:	vmovups XMMWORD PTR [rbx],xmm0
  41b2a9:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41b2ae:	pop    rbx
  41b2af:	ret    
  41b2b0:	push   r15
  41b2b2:	push   r14
  41b2b4:	push   r13
  41b2b6:	push   r12
  41b2b8:	push   rbp
  41b2b9:	push   rbx
  41b2ba:	sub    rsp,0x28
  41b2be:	mov    rax,QWORD PTR fs:0x28
  41b2c7:	mov    QWORD PTR [rsp+0x18],rax
  41b2cc:	xor    eax,eax
  41b2ce:	test   rdx,rdx
  41b2d1:	je     41b488 <str_set_visit@@Base+0x248>
  41b2d7:	mov    r14,rdx
  41b2da:	cmp    rdx,0x2
  41b2de:	je     41b469 <str_set_visit@@Base+0x229>
  41b2e4:	cmp    rdx,0x1
  41b2e8:	je     41b44a <str_set_visit@@Base+0x20a>
  41b2ee:	mov    rbx,QWORD PTR [rdi+0x18]
  41b2f2:	mov    r13,rsi
  41b2f5:	imul   rax,rbx,0xb3
  41b2fc:	mov    rsi,QWORD PTR [rdi+0x10]
  41b300:	mov    r15,rdi
  41b303:	shr    rax,0x8
  41b307:	mov    ebp,ecx
  41b309:	cmp    rsi,rax
  41b30c:	jae    41b398 <str_set_visit@@Base+0x158>
  41b312:	lea    rcx,[rsp+0x10]
  41b317:	mov    edx,0x2f693b52
  41b31c:	lea    rdi,[rsp+0x8]
  41b321:	mov    esi,0x8
  41b326:	mov    r12,QWORD PTR [r15]
  41b329:	dec    rbx
  41b32c:	mov    QWORD PTR [rsp+0x8],r13
  41b331:	call   42c690 <cmetrohash64_1@@Base>
  41b336:	mov    edx,DWORD PTR [rsp+0x10]
  41b33a:	mov    rax,rbx
  41b33d:	and    rax,rdx
  41b340:	lea    rcx,[r12+rax*8]
  41b344:	lea    eax,[rbp-0x2]
  41b347:	cmp    eax,0x1
  41b34a:	jbe    41b400 <str_set_visit@@Base+0x1c0>
  41b350:	mov    rax,QWORD PTR [rcx]
  41b353:	inc    rdx
  41b356:	xor    esi,esi
  41b358:	test   rax,rax
  41b35b:	jne    41b386 <str_set_visit@@Base+0x146>
  41b35d:	jmp    41b442 <str_set_visit@@Base+0x202>
  41b362:	nop    WORD PTR [rax+rax*1+0x0]
  41b368:	cmp    r13,rax
  41b36b:	je     41b3f0 <str_set_visit@@Base+0x1b0>
  41b371:	mov    rax,rbx
  41b374:	and    rax,rdx
  41b377:	lea    rcx,[r12+rax*8]
  41b37b:	mov    rax,QWORD PTR [rcx]
  41b37e:	inc    rdx
  41b381:	test   rax,rax
  41b384:	je     41b3b8 <str_set_visit@@Base+0x178>
  41b386:	cmp    rax,0x2
  41b38a:	jne    41b368 <str_set_visit@@Base+0x128>
  41b38c:	test   rsi,rsi
  41b38f:	cmove  rsi,rcx
  41b393:	jmp    41b371 <str_set_visit@@Base+0x131>
  41b395:	nop    DWORD PTR [rax]
  41b398:	add    rsi,rsi
  41b39b:	call   41b4e0 <str_set_visit@@Base+0x2a0>
  41b3a0:	test   eax,eax
  41b3a2:	jne    41b4a7 <str_set_visit@@Base+0x267>
  41b3a8:	mov    rbx,QWORD PTR [r15+0x18]
  41b3ac:	jmp    41b312 <str_set_visit@@Base+0xd2>
  41b3b1:	nop    DWORD PTR [rax+0x0]
  41b3b8:	test   rsi,rsi
  41b3bb:	cmove  rsi,rcx
  41b3bf:	inc    QWORD PTR [r15+0x10]
  41b3c3:	mov    QWORD PTR [rsi],r14
  41b3c6:	xor    eax,eax
  41b3c8:	mov    rdi,QWORD PTR [rsp+0x18]
  41b3cd:	xor    rdi,QWORD PTR fs:0x28
  41b3d6:	jne    41b4d5 <str_set_visit@@Base+0x295>
  41b3dc:	add    rsp,0x28
  41b3e0:	pop    rbx
  41b3e1:	pop    rbp
  41b3e2:	pop    r12
  41b3e4:	pop    r13
  41b3e6:	pop    r14
  41b3e8:	pop    r15
  41b3ea:	ret    
  41b3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41b3f0:	test   ebp,ebp
  41b3f2:	jne    41b3c8 <str_set_visit@@Base+0x188>
  41b3f4:	mov    QWORD PTR [rcx],r14
  41b3f7:	jmp    41b3c8 <str_set_visit@@Base+0x188>
  41b3f9:	nop    DWORD PTR [rax+0x0]
  41b400:	mov    rax,QWORD PTR [rcx]
  41b403:	inc    QWORD PTR [r15+0x10]
  41b407:	test   rax,rax
  41b40a:	je     41b43b <str_set_visit@@Base+0x1fb>
  41b40c:	cmp    rax,0x2
  41b410:	je     41b43b <str_set_visit@@Base+0x1fb>
  41b412:	lea    rax,[rdx+0x1]
  41b416:	jmp    41b426 <str_set_visit@@Base+0x1e6>
  41b418:	nop    DWORD PTR [rax+rax*1+0x0]
  41b420:	cmp    rdx,0x2
  41b424:	je     41b43b <str_set_visit@@Base+0x1fb>
  41b426:	mov    rdx,rbx
  41b429:	and    rdx,rax
  41b42c:	lea    rcx,[r12+rdx*8]
  41b430:	mov    rdx,QWORD PTR [rcx]
  41b433:	inc    rax
  41b436:	test   rdx,rdx
  41b439:	jne    41b420 <str_set_visit@@Base+0x1e0>
  41b43b:	mov    QWORD PTR [rcx],r14
  41b43e:	xor    eax,eax
  41b440:	jmp    41b3c8 <str_set_visit@@Base+0x188>
  41b442:	mov    rsi,rcx
  41b445:	jmp    41b3bf <str_set_visit@@Base+0x17f>
  41b44a:	lea    rcx,[rip+0x2bfd7]        # 447428 <str_set_missing@@Base+0x8>
  41b451:	mov    edx,0x74
  41b456:	lea    rsi,[rip+0x2bea3]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41b45d:	lea    rdi,[rip+0x2bf6d]        # 4473d1 <_IO_stdin_used@@Base+0x193d1>
  41b464:	call   405300 <__assert_fail@plt>
  41b469:	lea    rcx,[rip+0x2bfb8]        # 447428 <str_set_missing@@Base+0x8>
  41b470:	mov    edx,0x73
  41b475:	lea    rsi,[rip+0x2be84]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41b47c:	lea    rdi,[rip+0x2bf37]        # 4473ba <_IO_stdin_used@@Base+0x193ba>
  41b483:	call   405300 <__assert_fail@plt>
  41b488:	lea    rcx,[rip+0x2bf99]        # 447428 <str_set_missing@@Base+0x8>
  41b48f:	mov    edx,0x72
  41b494:	lea    rsi,[rip+0x2be65]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41b49b:	lea    rdi,[rip+0x2bf01]        # 4473a3 <_IO_stdin_used@@Base+0x193a3>
  41b4a2:	call   405300 <__assert_fail@plt>
  41b4a7:	mov    rax,QWORD PTR [rip+0x36b3a]        # 451fe8 <stderr@GLIBC_2.2.5>
  41b4ae:	lea    rcx,[rip+0x2bebb]        # 447370 <_IO_stdin_used@@Base+0x19370>
  41b4b5:	mov    rdi,QWORD PTR [rax]
  41b4b8:	lea    rdx,[rip+0x2bf27]        # 4473e6 <_IO_stdin_used@@Base+0x193e6>
  41b4bf:	mov    esi,0x1
  41b4c4:	xor    eax,eax
  41b4c6:	call   405400 <__fprintf_chk@plt>
  41b4cb:	mov    edi,0x1
  41b4d0:	call   4053e0 <exit@plt>
  41b4d5:	call   4052d0 <__stack_chk_fail@plt>
  41b4da:	nop    WORD PTR [rax+rax*1+0x0]
  41b4e0:	push   r13
  41b4e2:	push   r12
  41b4e4:	push   rbp
  41b4e5:	mov    rbp,rdi
  41b4e8:	push   rbx
  41b4e9:	sub    rsp,0x38
  41b4ed:	mov    rax,QWORD PTR fs:0x28
  41b4f6:	mov    QWORD PTR [rsp+0x28],rax
  41b4fb:	xor    eax,eax
  41b4fd:	cmp    QWORD PTR [rdi+0x10],rsi
  41b501:	cmovae rsi,QWORD PTR [rdi+0x10]
  41b506:	mov    r12,QWORD PTR [rdi]
  41b509:	cmp    rsi,0x2
  41b50d:	jbe    41b5e8 <str_set_visit@@Base+0x3a8>
  41b513:	mov    eax,0x4
  41b518:	nop    DWORD PTR [rax+rax*1+0x0]
  41b520:	lea    rbx,[rax+rax*1]
  41b524:	imul   rax,rax,0x166
  41b52b:	shr    rax,0x8
  41b52f:	mov    rdx,rax
  41b532:	mov    rax,rbx
  41b535:	cmp    rsi,rdx
  41b538:	ja     41b520 <str_set_visit@@Base+0x2e0>
  41b53a:	mov    esi,0x8
  41b53f:	mov    rdi,rbx
  41b542:	call   405340 <calloc@plt>
  41b547:	mov    QWORD PTR [rsp],rax
  41b54b:	test   rax,rax
  41b54e:	je     41b5f2 <str_set_visit@@Base+0x3b2>
  41b554:	cmp    QWORD PTR [rbp+0x18],0x0
  41b559:	mov    QWORD PTR [rsp+0x8],0x0
  41b562:	mov    QWORD PTR [rsp+0x18],rbx
  41b567:	mov    QWORD PTR [rsp+0x10],0x0
  41b570:	je     41b5a8 <str_set_visit@@Base+0x368>
  41b572:	xor    ebx,ebx
  41b574:	mov    r13,rsp
  41b577:	nop    WORD PTR [rax+rax*1+0x0]
  41b580:	mov    rsi,QWORD PTR [r12+rbx*8]
  41b584:	test   rsi,rsi
  41b587:	je     41b59f <str_set_visit@@Base+0x35f>
  41b589:	cmp    rsi,0x2
  41b58d:	je     41b59f <str_set_visit@@Base+0x35f>
  41b58f:	mov    ecx,0x3
  41b594:	mov    rdx,rsi
  41b597:	mov    rdi,r13
  41b59a:	call   41b2b0 <str_set_visit@@Base+0x70>
  41b59f:	inc    rbx
  41b5a2:	cmp    QWORD PTR [rbp+0x18],rbx
  41b5a6:	ja     41b580 <str_set_visit@@Base+0x340>
  41b5a8:	mov    rdi,rbp
  41b5ab:	call   41b290 <str_set_visit@@Base+0x50>
  41b5b0:	vmovdqa xmm0,XMMWORD PTR [rsp]
  41b5b5:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  41b5bb:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  41b5c0:	vmovups XMMWORD PTR [rbp+0x10],xmm1
  41b5c5:	xor    eax,eax
  41b5c7:	mov    rcx,QWORD PTR [rsp+0x28]
  41b5cc:	xor    rcx,QWORD PTR fs:0x28
  41b5d5:	jne    41b5f9 <str_set_visit@@Base+0x3b9>
  41b5d7:	add    rsp,0x38
  41b5db:	pop    rbx
  41b5dc:	pop    rbp
  41b5dd:	pop    r12
  41b5df:	pop    r13
  41b5e1:	ret    
  41b5e2:	nop    WORD PTR [rax+rax*1+0x0]
  41b5e8:	mov    ebx,0x4
  41b5ed:	jmp    41b53a <str_set_visit@@Base+0x2fa>
  41b5f2:	mov    eax,0xffffffff
  41b5f7:	jmp    41b5c7 <str_set_visit@@Base+0x387>
  41b5f9:	call   4052d0 <__stack_chk_fail@plt>
  41b5fe:	xchg   ax,ax
  41b600:	push   r12
  41b602:	push   rbp
  41b603:	push   rbx
  41b604:	sub    rsp,0x20
  41b608:	mov    rax,QWORD PTR fs:0x28
  41b611:	mov    QWORD PTR [rsp+0x18],rax
  41b616:	xor    eax,eax
  41b618:	test   rdi,rdi
  41b61b:	je     41b67e <str_set_visit@@Base+0x43e>
  41b61d:	mov    rbx,QWORD PTR [rsi]
  41b620:	mov    rbp,rdi
  41b623:	mov    QWORD PTR [rsp+0x8],rdx
  41b628:	mov    r12,rdx
  41b62b:	lea    rcx,[rsp+0x10]
  41b630:	mov    edx,0x2f693b52
  41b635:	lea    rdi,[rsp+0x8]
  41b63a:	mov    esi,0x8
  41b63f:	call   42c690 <cmetrohash64_1@@Base>
  41b644:	dec    rbx
  41b647:	mov    edx,DWORD PTR [rsp+0x10]
  41b64b:	mov    rax,rbx
  41b64e:	and    rax,rdx
  41b651:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
  41b656:	test   rax,rax
  41b659:	je     41b67e <str_set_visit@@Base+0x43e>
  41b65b:	inc    rdx
  41b65e:	xchg   ax,ax
  41b660:	cmp    rax,0x2
  41b664:	je     41b66b <str_set_visit@@Base+0x42b>
  41b666:	cmp    r12,rax
  41b669:	je     41b680 <str_set_visit@@Base+0x440>
  41b66b:	mov    rax,rbx
  41b66e:	and    rax,rdx
  41b671:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
  41b676:	inc    rdx
  41b679:	test   rax,rax
  41b67c:	jne    41b660 <str_set_visit@@Base+0x420>
  41b67e:	xor    eax,eax
  41b680:	mov    rcx,QWORD PTR [rsp+0x18]
  41b685:	xor    rcx,QWORD PTR fs:0x28
  41b68e:	jne    41b699 <str_set_visit@@Base+0x459>
  41b690:	add    rsp,0x20
  41b694:	pop    rbx
  41b695:	pop    rbp
  41b696:	pop    r12
  41b698:	ret    
  41b699:	call   4052d0 <__stack_chk_fail@plt>
  41b69e:	xchg   ax,ax
  41b6a0:	push   r13
  41b6a2:	push   r12
  41b6a4:	push   rbp
  41b6a5:	push   rbx
  41b6a6:	sub    rsp,0x28
  41b6aa:	mov    rbp,QWORD PTR [rdi]
  41b6ad:	mov    rax,QWORD PTR fs:0x28
  41b6b6:	mov    QWORD PTR [rsp+0x18],rax
  41b6bb:	xor    eax,eax
  41b6bd:	test   rbp,rbp
  41b6c0:	je     41b731 <str_set_visit@@Base+0x4f1>
  41b6c2:	mov    rax,QWORD PTR [rdi+0x18]
  41b6c6:	mov    QWORD PTR [rsp+0x8],rsi
  41b6cb:	lea    rcx,[rsp+0x10]
  41b6d0:	mov    edx,0x2f693b52
  41b6d5:	mov    r13,rdi
  41b6d8:	mov    r12,rsi
  41b6db:	lea    rdi,[rsp+0x8]
  41b6e0:	mov    esi,0x8
  41b6e5:	lea    rbx,[rax-0x1]
  41b6e9:	call   42c690 <cmetrohash64_1@@Base>
  41b6ee:	mov    edx,DWORD PTR [rsp+0x10]
  41b6f2:	mov    rax,rbx
  41b6f5:	and    rax,rdx
  41b6f8:	lea    rcx,[rbp+rax*8+0x0]
  41b6fd:	mov    rax,QWORD PTR [rcx]
  41b700:	test   rax,rax
  41b703:	je     41b731 <str_set_visit@@Base+0x4f1>
  41b705:	inc    rdx
  41b708:	nop    DWORD PTR [rax+rax*1+0x0]
  41b710:	cmp    rax,0x2
  41b714:	je     41b71b <str_set_visit@@Base+0x4db>
  41b716:	cmp    r12,rax
  41b719:	je     41b750 <str_set_visit@@Base+0x510>
  41b71b:	mov    rax,rbx
  41b71e:	and    rax,rdx
  41b721:	lea    rcx,[rbp+rax*8+0x0]
  41b726:	mov    rax,QWORD PTR [rcx]
  41b729:	inc    rdx
  41b72c:	test   rax,rax
  41b72f:	jne    41b710 <str_set_visit@@Base+0x4d0>
  41b731:	xor    eax,eax
  41b733:	mov    rsi,QWORD PTR [rsp+0x18]
  41b738:	xor    rsi,QWORD PTR fs:0x28
  41b741:	jne    41b75d <str_set_visit@@Base+0x51d>
  41b743:	add    rsp,0x28
  41b747:	pop    rbx
  41b748:	pop    rbp
  41b749:	pop    r12
  41b74b:	pop    r13
  41b74d:	ret    
  41b74e:	xchg   ax,ax
  41b750:	mov    QWORD PTR [rcx],0x2
  41b757:	dec    QWORD PTR [r13+0x10]
  41b75b:	jmp    41b733 <str_set_visit@@Base+0x4f3>
  41b75d:	call   4052d0 <__stack_chk_fail@plt>
  41b762:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41b76d:	nop    DWORD PTR [rax]

000000000041b770 <ptr_set_clear@@Base>:
  41b770:	endbr64 
  41b774:	jmp    41b290 <str_set_visit@@Base+0x50>
  41b779:	nop    DWORD PTR [rax+0x0]

000000000041b780 <ptr_set_destroy@@Base>:
  41b780:	endbr64 
  41b784:	push   r14
  41b786:	push   r13
  41b788:	push   r12
  41b78a:	push   rbp
  41b78b:	mov    rbp,rdi
  41b78e:	push   rbx
  41b78f:	test   rsi,rsi
  41b792:	je     41b7ce <ptr_set_destroy@@Base+0x4e>
  41b794:	cmp    QWORD PTR [rdi+0x18],0x0
  41b799:	mov    r12,QWORD PTR [rdi]
  41b79c:	je     41b7ce <ptr_set_destroy@@Base+0x4e>
  41b79e:	mov    r13,rsi
  41b7a1:	mov    r14,rdx
  41b7a4:	xor    ebx,ebx
  41b7a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b7b0:	mov    rsi,QWORD PTR [r12+rbx*8]
  41b7b4:	test   rsi,rsi
  41b7b7:	je     41b7c5 <ptr_set_destroy@@Base+0x45>
  41b7b9:	cmp    rsi,0x2
  41b7bd:	je     41b7c5 <ptr_set_destroy@@Base+0x45>
  41b7bf:	mov    rdi,r14
  41b7c2:	call   r13
  41b7c5:	inc    rbx
  41b7c8:	cmp    rbx,QWORD PTR [rbp+0x18]
  41b7cc:	jb     41b7b0 <ptr_set_destroy@@Base+0x30>
  41b7ce:	pop    rbx
  41b7cf:	mov    rdi,rbp
  41b7d2:	pop    rbp
  41b7d3:	pop    r12
  41b7d5:	pop    r13
  41b7d7:	pop    r14
  41b7d9:	jmp    41b290 <str_set_visit@@Base+0x50>
  41b7de:	xchg   ax,ax

000000000041b7e0 <ptr_set_init@@Base>:
  41b7e0:	endbr64 
  41b7e4:	push   rbp
  41b7e5:	push   rbx
  41b7e6:	mov    rbx,rdi
  41b7e9:	sub    rsp,0x8
  41b7ed:	cmp    rsi,0x2
  41b7f1:	jbe    41b850 <ptr_set_init@@Base+0x70>
  41b7f3:	mov    eax,0x4
  41b7f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b800:	lea    rbp,[rax+rax*1]
  41b804:	imul   rax,rax,0x166
  41b80b:	shr    rax,0x8
  41b80f:	mov    rdx,rax
  41b812:	mov    rax,rbp
  41b815:	cmp    rsi,rdx
  41b818:	ja     41b800 <ptr_set_init@@Base+0x20>
  41b81a:	mov    esi,0x8
  41b81f:	mov    rdi,rbp
  41b822:	call   405340 <calloc@plt>
  41b827:	mov    QWORD PTR [rbx],rax
  41b82a:	test   rax,rax
  41b82d:	je     41b857 <ptr_set_init@@Base+0x77>
  41b82f:	mov    QWORD PTR [rbx+0x8],0x0
  41b837:	mov    QWORD PTR [rbx+0x18],rbp
  41b83b:	mov    QWORD PTR [rbx+0x10],0x0
  41b843:	xor    eax,eax
  41b845:	add    rsp,0x8
  41b849:	pop    rbx
  41b84a:	pop    rbp
  41b84b:	ret    
  41b84c:	nop    DWORD PTR [rax+0x0]
  41b850:	mov    ebp,0x4
  41b855:	jmp    41b81a <ptr_set_init@@Base+0x3a>
  41b857:	mov    eax,0xffffffff
  41b85c:	jmp    41b845 <ptr_set_init@@Base+0x65>
  41b85e:	xchg   ax,ax

000000000041b860 <ptr_set_resize@@Base>:
  41b860:	endbr64 
  41b864:	jmp    41b4e0 <str_set_visit@@Base+0x2a0>
  41b869:	nop    DWORD PTR [rax+0x0]

000000000041b870 <ptr_set_insert@@Base>:
  41b870:	endbr64 
  41b874:	mov    rdx,rcx
  41b877:	mov    ecx,r8d
  41b87a:	jmp    41b2b0 <str_set_visit@@Base+0x70>
  41b87f:	nop

000000000041b880 <ptr_set_insert_item@@Base>:
  41b880:	endbr64 
  41b884:	mov    ecx,edx
  41b886:	mov    rdx,rsi
  41b889:	jmp    41b2b0 <str_set_visit@@Base+0x70>
  41b88e:	xchg   ax,ax

000000000041b890 <ptr_set_find@@Base>:
  41b890:	endbr64 
  41b894:	mov    rdx,rsi
  41b897:	lea    rsi,[rdi+0x18]
  41b89b:	mov    rdi,QWORD PTR [rdi]
  41b89e:	jmp    41b600 <str_set_visit@@Base+0x3c0>
  41b8a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41b8ae:	xchg   ax,ax

000000000041b8b0 <ptr_set_find_item@@Base>:
  41b8b0:	endbr64 
  41b8b4:	mov    rdx,rsi
  41b8b7:	lea    rsi,[rdi+0x18]
  41b8bb:	mov    rdi,QWORD PTR [rdi]
  41b8be:	jmp    41b600 <str_set_visit@@Base+0x3c0>
  41b8c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41b8ce:	xchg   ax,ax

000000000041b8d0 <ptr_set_remove@@Base>:
  41b8d0:	endbr64 
  41b8d4:	jmp    41b6a0 <str_set_visit@@Base+0x460>
  41b8d9:	nop    DWORD PTR [rax+0x0]

000000000041b8e0 <ptr_set_remove_item@@Base>:
  41b8e0:	endbr64 
  41b8e4:	jmp    41b6a0 <str_set_visit@@Base+0x460>
  41b8e9:	nop    DWORD PTR [rax+0x0]

000000000041b8f0 <ptr_set_visit@@Base>:
  41b8f0:	endbr64 
  41b8f4:	push   r14
  41b8f6:	push   r13
  41b8f8:	push   r12
  41b8fa:	push   rbp
  41b8fb:	push   rbx
  41b8fc:	cmp    QWORD PTR [rdi+0x18],0x0
  41b901:	mov    r14,QWORD PTR [rdi]
  41b904:	je     41b936 <ptr_set_visit@@Base+0x46>
  41b906:	mov    r13,rdx
  41b909:	mov    r12,rsi
  41b90c:	mov    rbp,rdi
  41b90f:	xor    ebx,ebx
  41b911:	nop    DWORD PTR [rax+0x0]
  41b918:	mov    rsi,QWORD PTR [r14+rbx*8]
  41b91c:	test   rsi,rsi
  41b91f:	je     41b92d <ptr_set_visit@@Base+0x3d>
  41b921:	cmp    rsi,0x2
  41b925:	je     41b92d <ptr_set_visit@@Base+0x3d>
  41b927:	mov    rdi,r13
  41b92a:	call   r12
  41b92d:	inc    rbx
  41b930:	cmp    rbx,QWORD PTR [rbp+0x18]
  41b934:	jb     41b918 <ptr_set_visit@@Base+0x28>
  41b936:	pop    rbx
  41b937:	pop    rbp
  41b938:	pop    r12
  41b93a:	pop    r13
  41b93c:	pop    r14
  41b93e:	ret    
  41b93f:	nop
  41b940:	push   rbx
  41b941:	mov    rbx,rdi
  41b944:	mov    rdi,QWORD PTR [rdi]
  41b947:	test   rdi,rdi
  41b94a:	je     41b951 <ptr_set_visit@@Base+0x61>
  41b94c:	call   405240 <free@plt>
  41b951:	vpxor  xmm0,xmm0,xmm0
  41b955:	vmovups XMMWORD PTR [rbx],xmm0
  41b959:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41b95e:	pop    rbx
  41b95f:	ret    
  41b960:	push   r15
  41b962:	push   r14
  41b964:	push   r13
  41b966:	mov    r13,rdi
  41b969:	push   r12
  41b96b:	push   rbp
  41b96c:	push   rbx
  41b96d:	sub    rsp,0x28
  41b971:	mov    QWORD PTR [rsp+0x8],rsi
  41b976:	mov    r15,QWORD PTR [rdi]
  41b979:	mov    rax,QWORD PTR fs:0x28
  41b982:	mov    QWORD PTR [rsp+0x18],rax
  41b987:	xor    eax,eax
  41b989:	test   r15,r15
  41b98c:	je     41ba50 <ptr_set_visit@@Base+0x160>
  41b992:	mov    r8,rdx
  41b995:	mov    rax,QWORD PTR [r13+0x18]
  41b999:	mov    rdi,rsi
  41b99c:	lea    rcx,[rsp+0x10]
  41b9a1:	mov    edx,0x2f693b52
  41b9a6:	mov    rsi,r8
  41b9a9:	lea    r14,[rax-0x1]
  41b9ad:	mov    QWORD PTR [rsp],r8
  41b9b1:	call   42c690 <cmetrohash64_1@@Base>
  41b9b6:	mov    ebp,DWORD PTR [rsp+0x10]
  41b9ba:	mov    rax,r14
  41b9bd:	and    rax,rbp
  41b9c0:	lea    r12,[r15+rax*8]
  41b9c4:	mov    rbx,QWORD PTR [r12]
  41b9c8:	test   rbx,rbx
  41b9cb:	je     41ba50 <ptr_set_visit@@Base+0x160>
  41b9d1:	inc    rbp
  41b9d4:	mov    r8,QWORD PTR [rsp]
  41b9d8:	jmp    41b9f6 <ptr_set_visit@@Base+0x106>
  41b9da:	nop    WORD PTR [rax+rax*1+0x0]
  41b9e0:	mov    rax,r14
  41b9e3:	and    rax,rbp
  41b9e6:	lea    r12,[r15+rax*8]
  41b9ea:	mov    rbx,QWORD PTR [r12]
  41b9ee:	inc    rbp
  41b9f1:	test   rbx,rbx
  41b9f4:	je     41ba50 <ptr_set_visit@@Base+0x160>
  41b9f6:	cmp    rbx,0x2
  41b9fa:	je     41b9e0 <ptr_set_visit@@Base+0xf0>
  41b9fc:	mov    rax,QWORD PTR [rbx+0x8]
  41ba00:	cmp    r8,QWORD PTR [rax+0x8]
  41ba04:	jne    41b9e0 <ptr_set_visit@@Base+0xf0>
  41ba06:	mov    rsi,QWORD PTR [rax]
  41ba09:	mov    rdi,QWORD PTR [rsp+0x8]
  41ba0e:	mov    rdx,r8
  41ba11:	mov    QWORD PTR [rsp],r8
  41ba15:	call   405330 <memcmp@plt>
  41ba1a:	test   eax,eax
  41ba1c:	mov    r8,QWORD PTR [rsp]
  41ba20:	jne    41b9e0 <ptr_set_visit@@Base+0xf0>
  41ba22:	mov    QWORD PTR [r12],0x2
  41ba2a:	dec    QWORD PTR [r13+0x10]
  41ba2e:	mov    rcx,QWORD PTR [rsp+0x18]
  41ba33:	xor    rcx,QWORD PTR fs:0x28
  41ba3c:	mov    rax,rbx
  41ba3f:	jne    41ba54 <ptr_set_visit@@Base+0x164>
  41ba41:	add    rsp,0x28
  41ba45:	pop    rbx
  41ba46:	pop    rbp
  41ba47:	pop    r12
  41ba49:	pop    r13
  41ba4b:	pop    r14
  41ba4d:	pop    r15
  41ba4f:	ret    
  41ba50:	xor    ebx,ebx
  41ba52:	jmp    41ba2e <ptr_set_visit@@Base+0x13e>
  41ba54:	call   4052d0 <__stack_chk_fail@plt>
  41ba59:	nop    DWORD PTR [rax+0x0]
  41ba60:	push   r13
  41ba62:	push   r12
  41ba64:	push   rbp
  41ba65:	mov    rbp,rdi
  41ba68:	push   rbx
  41ba69:	sub    rsp,0x38
  41ba6d:	mov    rax,QWORD PTR fs:0x28
  41ba76:	mov    QWORD PTR [rsp+0x28],rax
  41ba7b:	xor    eax,eax
  41ba7d:	cmp    QWORD PTR [rdi+0x10],rsi
  41ba81:	cmovae rsi,QWORD PTR [rdi+0x10]
  41ba86:	mov    r12,QWORD PTR [rdi]
  41ba89:	cmp    rsi,0x2
  41ba8d:	jbe    41bb70 <ptr_set_visit@@Base+0x280>
  41ba93:	mov    eax,0x4
  41ba98:	nop    DWORD PTR [rax+rax*1+0x0]
  41baa0:	lea    rbx,[rax+rax*1]
  41baa4:	imul   rax,rax,0x166
  41baab:	shr    rax,0x8
  41baaf:	mov    rdx,rax
  41bab2:	mov    rax,rbx
  41bab5:	cmp    rsi,rdx
  41bab8:	ja     41baa0 <ptr_set_visit@@Base+0x1b0>
  41baba:	mov    esi,0x8
  41babf:	mov    rdi,rbx
  41bac2:	call   405340 <calloc@plt>
  41bac7:	mov    QWORD PTR [rsp],rax
  41bacb:	test   rax,rax
  41bace:	je     41bb7a <ptr_set_visit@@Base+0x28a>
  41bad4:	cmp    QWORD PTR [rbp+0x18],0x0
  41bad9:	mov    QWORD PTR [rsp+0x8],0x0
  41bae2:	mov    QWORD PTR [rsp+0x18],rbx
  41bae7:	mov    QWORD PTR [rsp+0x10],0x0
  41baf0:	je     41bb31 <ptr_set_visit@@Base+0x241>
  41baf2:	xor    ebx,ebx
  41baf4:	mov    r13,rsp
  41baf7:	nop    WORD PTR [rax+rax*1+0x0]
  41bb00:	mov    rcx,QWORD PTR [r12+rbx*8]
  41bb04:	test   rcx,rcx
  41bb07:	je     41bb28 <ptr_set_visit@@Base+0x238>
  41bb09:	cmp    rcx,0x2
  41bb0d:	je     41bb28 <ptr_set_visit@@Base+0x238>
  41bb0f:	mov    rax,QWORD PTR [rcx+0x8]
  41bb13:	mov    r8d,0x3
  41bb19:	mov    rdx,QWORD PTR [rax+0x8]
  41bb1d:	mov    rsi,QWORD PTR [rax]
  41bb20:	mov    rdi,r13
  41bb23:	call   41bb90 <ptr_set_visit@@Base+0x2a0>
  41bb28:	inc    rbx
  41bb2b:	cmp    QWORD PTR [rbp+0x18],rbx
  41bb2f:	ja     41bb00 <ptr_set_visit@@Base+0x210>
  41bb31:	mov    rdi,rbp
  41bb34:	call   41b940 <ptr_set_visit@@Base+0x50>
  41bb39:	vmovdqa xmm0,XMMWORD PTR [rsp]
  41bb3e:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  41bb44:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  41bb49:	vmovups XMMWORD PTR [rbp+0x10],xmm1
  41bb4e:	xor    eax,eax
  41bb50:	mov    rdi,QWORD PTR [rsp+0x28]
  41bb55:	xor    rdi,QWORD PTR fs:0x28
  41bb5e:	jne    41bb81 <ptr_set_visit@@Base+0x291>
  41bb60:	add    rsp,0x38
  41bb64:	pop    rbx
  41bb65:	pop    rbp
  41bb66:	pop    r12
  41bb68:	pop    r13
  41bb6a:	ret    
  41bb6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bb70:	mov    ebx,0x4
  41bb75:	jmp    41baba <ptr_set_visit@@Base+0x1ca>
  41bb7a:	mov    eax,0xffffffff
  41bb7f:	jmp    41bb50 <ptr_set_visit@@Base+0x260>
  41bb81:	call   4052d0 <__stack_chk_fail@plt>
  41bb86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb90:	push   r15
  41bb92:	push   r14
  41bb94:	push   r13
  41bb96:	mov    r13,rdx
  41bb99:	push   r12
  41bb9b:	push   rbp
  41bb9c:	push   rbx
  41bb9d:	sub    rsp,0x48
  41bba1:	mov    QWORD PTR [rsp+0x10],rsi
  41bba6:	mov    QWORD PTR [rsp+0x8],rcx
  41bbab:	mov    DWORD PTR [rsp+0x1c],r8d
  41bbb0:	mov    rdx,QWORD PTR fs:0x28
  41bbb9:	mov    QWORD PTR [rsp+0x38],rdx
  41bbbe:	xor    edx,edx
  41bbc0:	test   rcx,rcx
  41bbc3:	je     41bd9e <ptr_set_visit@@Base+0x4ae>
  41bbc9:	cmp    QWORD PTR [rsp+0x8],0x2
  41bbcf:	je     41bd7f <ptr_set_visit@@Base+0x48f>
  41bbd5:	cmp    QWORD PTR [rsp+0x8],0x1
  41bbdb:	je     41bdc2 <ptr_set_visit@@Base+0x4d2>
  41bbe1:	mov    r12,QWORD PTR [rdi+0x18]
  41bbe5:	mov    rsi,QWORD PTR [rdi+0x10]
  41bbe9:	imul   rax,r12,0xb3
  41bbf0:	mov    r15,rdi
  41bbf3:	shr    rax,0x8
  41bbf7:	cmp    rsi,rax
  41bbfa:	jae    41bce0 <ptr_set_visit@@Base+0x3f0>
  41bc00:	mov    rdi,QWORD PTR [rsp+0x10]
  41bc05:	lea    rcx,[rsp+0x30]
  41bc0a:	mov    edx,0x2f693b52
  41bc0f:	mov    rsi,r13
  41bc12:	mov    r14,QWORD PTR [r15]
  41bc15:	dec    r12
  41bc18:	call   42c690 <cmetrohash64_1@@Base>
  41bc1d:	mov    ebp,DWORD PTR [rsp+0x30]
  41bc21:	mov    rax,r12
  41bc24:	and    rax,rbp
  41bc27:	lea    rcx,[r14+rax*8]
  41bc2b:	mov    eax,DWORD PTR [rsp+0x1c]
  41bc2f:	sub    eax,0x2
  41bc32:	cmp    eax,0x1
  41bc35:	jbe    41bd30 <ptr_set_visit@@Base+0x440>
  41bc3b:	mov    rbx,QWORD PTR [rcx]
  41bc3e:	inc    rbp
  41bc41:	xor    r11d,r11d
  41bc44:	test   rbx,rbx
  41bc47:	jne    41bc73 <ptr_set_visit@@Base+0x383>
  41bc49:	jmp    41bd7a <ptr_set_visit@@Base+0x48a>
  41bc4e:	xchg   ax,ax
  41bc50:	mov    rax,QWORD PTR [rbx+0x8]
  41bc54:	cmp    r13,QWORD PTR [rax+0x8]
  41bc58:	je     41bc88 <ptr_set_visit@@Base+0x398>
  41bc5a:	mov    rax,r12
  41bc5d:	and    rax,rbp
  41bc60:	lea    rcx,[r14+rax*8]
  41bc64:	mov    rbx,QWORD PTR [rcx]
  41bc67:	inc    rbp
  41bc6a:	test   rbx,rbx
  41bc6d:	je     41bd10 <ptr_set_visit@@Base+0x420>
  41bc73:	cmp    rbx,0x2
  41bc77:	jne    41bc50 <ptr_set_visit@@Base+0x360>
  41bc79:	test   r11,r11
  41bc7c:	cmove  r11,rcx
  41bc80:	jmp    41bc5a <ptr_set_visit@@Base+0x36a>
  41bc82:	nop    WORD PTR [rax+rax*1+0x0]
  41bc88:	mov    rsi,QWORD PTR [rax]
  41bc8b:	mov    rdi,QWORD PTR [rsp+0x10]
  41bc90:	mov    rdx,r13
  41bc93:	mov    QWORD PTR [rsp+0x20],r11
  41bc98:	mov    QWORD PTR [rsp+0x28],rcx
  41bc9d:	call   405330 <memcmp@plt>
  41bca2:	test   eax,eax
  41bca4:	mov    r11,QWORD PTR [rsp+0x20]
  41bca9:	jne    41bc5a <ptr_set_visit@@Base+0x36a>
  41bcab:	mov    eax,DWORD PTR [rsp+0x1c]
  41bcaf:	test   eax,eax
  41bcb1:	je     41bd00 <ptr_set_visit@@Base+0x410>
  41bcb3:	mov    rdi,QWORD PTR [rsp+0x38]
  41bcb8:	xor    rdi,QWORD PTR fs:0x28
  41bcc1:	mov    rax,rbx
  41bcc4:	jne    41bdbd <ptr_set_visit@@Base+0x4cd>
  41bcca:	add    rsp,0x48
  41bcce:	pop    rbx
  41bccf:	pop    rbp
  41bcd0:	pop    r12
  41bcd2:	pop    r13
  41bcd4:	pop    r14
  41bcd6:	pop    r15
  41bcd8:	ret    
  41bcd9:	nop    DWORD PTR [rax+0x0]
  41bce0:	add    rsi,rsi
  41bce3:	call   41ba60 <ptr_set_visit@@Base+0x170>
  41bce8:	test   eax,eax
  41bcea:	jne    41bde1 <ptr_set_visit@@Base+0x4f1>
  41bcf0:	mov    r12,QWORD PTR [r15+0x18]
  41bcf4:	jmp    41bc00 <ptr_set_visit@@Base+0x310>
  41bcf9:	nop    DWORD PTR [rax+0x0]
  41bd00:	mov    rax,QWORD PTR [rsp+0x8]
  41bd05:	mov    rcx,QWORD PTR [rsp+0x28]
  41bd0a:	mov    QWORD PTR [rcx],rax
  41bd0d:	jmp    41bcb3 <ptr_set_visit@@Base+0x3c3>
  41bd0f:	nop
  41bd10:	test   r11,r11
  41bd13:	cmove  r11,rcx
  41bd17:	mov    rax,QWORD PTR [rsp+0x8]
  41bd1c:	inc    QWORD PTR [r15+0x10]
  41bd20:	xor    ebx,ebx
  41bd22:	mov    QWORD PTR [r11],rax
  41bd25:	jmp    41bcb3 <ptr_set_visit@@Base+0x3c3>
  41bd27:	nop    WORD PTR [rax+rax*1+0x0]
  41bd30:	mov    rax,QWORD PTR [rcx]
  41bd33:	inc    QWORD PTR [r15+0x10]
  41bd37:	test   rax,rax
  41bd3a:	je     41bd6b <ptr_set_visit@@Base+0x47b>
  41bd3c:	cmp    rax,0x2
  41bd40:	je     41bd6b <ptr_set_visit@@Base+0x47b>
  41bd42:	inc    rbp
  41bd45:	jmp    41bd56 <ptr_set_visit@@Base+0x466>
  41bd47:	nop    WORD PTR [rax+rax*1+0x0]
  41bd50:	cmp    rax,0x2
  41bd54:	je     41bd6b <ptr_set_visit@@Base+0x47b>
  41bd56:	mov    rax,r12
  41bd59:	and    rax,rbp
  41bd5c:	lea    rcx,[r14+rax*8]
  41bd60:	mov    rax,QWORD PTR [rcx]
  41bd63:	inc    rbp
  41bd66:	test   rax,rax
  41bd69:	jne    41bd50 <ptr_set_visit@@Base+0x460>
  41bd6b:	mov    rax,QWORD PTR [rsp+0x8]
  41bd70:	xor    ebx,ebx
  41bd72:	mov    QWORD PTR [rcx],rax
  41bd75:	jmp    41bcb3 <ptr_set_visit@@Base+0x3c3>
  41bd7a:	mov    r11,rcx
  41bd7d:	jmp    41bd17 <ptr_set_visit@@Base+0x427>
  41bd7f:	lea    rcx,[rip+0x2b6ca]        # 447450 <ptr_set_missing@@Base+0x8>
  41bd86:	mov    edx,0x73
  41bd8b:	lea    rsi,[rip+0x2b56e]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41bd92:	lea    rdi,[rip+0x2b621]        # 4473ba <_IO_stdin_used@@Base+0x193ba>
  41bd99:	call   405300 <__assert_fail@plt>
  41bd9e:	lea    rcx,[rip+0x2b6ab]        # 447450 <ptr_set_missing@@Base+0x8>
  41bda5:	mov    edx,0x72
  41bdaa:	lea    rsi,[rip+0x2b54f]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41bdb1:	lea    rdi,[rip+0x2b5eb]        # 4473a3 <_IO_stdin_used@@Base+0x193a3>
  41bdb8:	call   405300 <__assert_fail@plt>
  41bdbd:	call   4052d0 <__stack_chk_fail@plt>
  41bdc2:	lea    rcx,[rip+0x2b687]        # 447450 <ptr_set_missing@@Base+0x8>
  41bdc9:	mov    edx,0x74
  41bdce:	lea    rsi,[rip+0x2b52b]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41bdd5:	lea    rdi,[rip+0x2b5f5]        # 4473d1 <_IO_stdin_used@@Base+0x193d1>
  41bddc:	call   405300 <__assert_fail@plt>
  41bde1:	mov    rax,QWORD PTR [rip+0x36200]        # 451fe8 <stderr@GLIBC_2.2.5>
  41bde8:	lea    rcx,[rip+0x2b581]        # 447370 <_IO_stdin_used@@Base+0x19370>
  41bdef:	mov    rdi,QWORD PTR [rax]
  41bdf2:	lea    rdx,[rip+0x2b5ed]        # 4473e6 <_IO_stdin_used@@Base+0x193e6>
  41bdf9:	mov    esi,0x1
  41bdfe:	xor    eax,eax
  41be00:	call   405400 <__fprintf_chk@plt>
  41be05:	mov    edi,0x1
  41be0a:	call   4053e0 <exit@plt>
  41be0f:	nop
  41be10:	push   r15
  41be12:	push   r14
  41be14:	push   r13
  41be16:	push   r12
  41be18:	push   rbp
  41be19:	push   rbx
  41be1a:	sub    rsp,0x18
  41be1e:	mov    rax,QWORD PTR fs:0x28
  41be27:	mov    QWORD PTR [rsp+0x8],rax
  41be2c:	xor    eax,eax
  41be2e:	test   rdi,rdi
  41be31:	je     41bed0 <ptr_set_visit@@Base+0x5e0>
  41be37:	mov    r13,QWORD PTR [rsi]
  41be3a:	mov    r12,rdx
  41be3d:	mov    r15,rcx
  41be40:	mov    r14,rdi
  41be43:	mov    rcx,rsp
  41be46:	mov    edx,0x2f693b52
  41be4b:	mov    rsi,r15
  41be4e:	mov    rdi,r12
  41be51:	call   42c690 <cmetrohash64_1@@Base>
  41be56:	dec    r13
  41be59:	mov    ebp,DWORD PTR [rsp]
  41be5c:	mov    rax,r13
  41be5f:	and    rax,rbp
  41be62:	mov    rbx,QWORD PTR [r14+rax*8]
  41be66:	test   rbx,rbx
  41be69:	je     41bed0 <ptr_set_visit@@Base+0x5e0>
  41be6b:	inc    rbp
  41be6e:	jmp    41be82 <ptr_set_visit@@Base+0x592>
  41be70:	mov    rax,r13
  41be73:	and    rax,rbp
  41be76:	mov    rbx,QWORD PTR [r14+rax*8]
  41be7a:	inc    rbp
  41be7d:	test   rbx,rbx
  41be80:	je     41bed0 <ptr_set_visit@@Base+0x5e0>
  41be82:	cmp    rbx,0x2
  41be86:	je     41be70 <ptr_set_visit@@Base+0x580>
  41be88:	mov    rax,QWORD PTR [rbx+0x8]
  41be8c:	cmp    r15,QWORD PTR [rax+0x8]
  41be90:	jne    41be70 <ptr_set_visit@@Base+0x580>
  41be92:	mov    rsi,QWORD PTR [rax]
  41be95:	mov    rdx,r15
  41be98:	mov    rdi,r12
  41be9b:	call   405330 <memcmp@plt>
  41bea0:	test   eax,eax
  41bea2:	jne    41be70 <ptr_set_visit@@Base+0x580>
  41bea4:	mov    rdx,QWORD PTR [rsp+0x8]
  41bea9:	xor    rdx,QWORD PTR fs:0x28
  41beb2:	mov    rax,rbx
  41beb5:	jne    41bed4 <ptr_set_visit@@Base+0x5e4>
  41beb7:	add    rsp,0x18
  41bebb:	pop    rbx
  41bebc:	pop    rbp
  41bebd:	pop    r12
  41bebf:	pop    r13
  41bec1:	pop    r14
  41bec3:	pop    r15
  41bec5:	ret    
  41bec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bed0:	xor    ebx,ebx
  41bed2:	jmp    41bea4 <ptr_set_visit@@Base+0x5b4>
  41bed4:	call   4052d0 <__stack_chk_fail@plt>
  41bed9:	nop    DWORD PTR [rax+0x0]

000000000041bee0 <fb_symbol_table_clear@@Base>:
  41bee0:	endbr64 
  41bee4:	jmp    41b940 <ptr_set_visit@@Base+0x50>
  41bee9:	nop    DWORD PTR [rax+0x0]

000000000041bef0 <fb_symbol_table_destroy@@Base>:
  41bef0:	endbr64 
  41bef4:	push   r14
  41bef6:	push   r13
  41bef8:	push   r12
  41befa:	push   rbp
  41befb:	mov    rbp,rdi
  41befe:	push   rbx
  41beff:	test   rsi,rsi
  41bf02:	je     41bf3e <fb_symbol_table_destroy@@Base+0x4e>
  41bf04:	cmp    QWORD PTR [rdi+0x18],0x0
  41bf09:	mov    r12,QWORD PTR [rdi]
  41bf0c:	je     41bf3e <fb_symbol_table_destroy@@Base+0x4e>
  41bf0e:	mov    r13,rsi
  41bf11:	mov    r14,rdx
  41bf14:	xor    ebx,ebx
  41bf16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bf20:	mov    rsi,QWORD PTR [r12+rbx*8]
  41bf24:	test   rsi,rsi
  41bf27:	je     41bf35 <fb_symbol_table_destroy@@Base+0x45>
  41bf29:	cmp    rsi,0x2
  41bf2d:	je     41bf35 <fb_symbol_table_destroy@@Base+0x45>
  41bf2f:	mov    rdi,r14
  41bf32:	call   r13
  41bf35:	inc    rbx
  41bf38:	cmp    rbx,QWORD PTR [rbp+0x18]
  41bf3c:	jb     41bf20 <fb_symbol_table_destroy@@Base+0x30>
  41bf3e:	pop    rbx
  41bf3f:	mov    rdi,rbp
  41bf42:	pop    rbp
  41bf43:	pop    r12
  41bf45:	pop    r13
  41bf47:	pop    r14
  41bf49:	jmp    41b940 <ptr_set_visit@@Base+0x50>
  41bf4e:	xchg   ax,ax

000000000041bf50 <fb_symbol_table_init@@Base>:
  41bf50:	endbr64 
  41bf54:	push   rbp
  41bf55:	push   rbx
  41bf56:	mov    rbx,rdi
  41bf59:	sub    rsp,0x8
  41bf5d:	cmp    rsi,0x2
  41bf61:	jbe    41bfc0 <fb_symbol_table_init@@Base+0x70>
  41bf63:	mov    eax,0x4
  41bf68:	nop    DWORD PTR [rax+rax*1+0x0]
  41bf70:	lea    rbp,[rax+rax*1]
  41bf74:	imul   rax,rax,0x166
  41bf7b:	shr    rax,0x8
  41bf7f:	mov    rdx,rax
  41bf82:	mov    rax,rbp
  41bf85:	cmp    rsi,rdx
  41bf88:	ja     41bf70 <fb_symbol_table_init@@Base+0x20>
  41bf8a:	mov    esi,0x8
  41bf8f:	mov    rdi,rbp
  41bf92:	call   405340 <calloc@plt>
  41bf97:	mov    QWORD PTR [rbx],rax
  41bf9a:	test   rax,rax
  41bf9d:	je     41bfc7 <fb_symbol_table_init@@Base+0x77>
  41bf9f:	mov    QWORD PTR [rbx+0x8],0x0
  41bfa7:	mov    QWORD PTR [rbx+0x18],rbp
  41bfab:	mov    QWORD PTR [rbx+0x10],0x0
  41bfb3:	xor    eax,eax
  41bfb5:	add    rsp,0x8
  41bfb9:	pop    rbx
  41bfba:	pop    rbp
  41bfbb:	ret    
  41bfbc:	nop    DWORD PTR [rax+0x0]
  41bfc0:	mov    ebp,0x4
  41bfc5:	jmp    41bf8a <fb_symbol_table_init@@Base+0x3a>
  41bfc7:	mov    eax,0xffffffff
  41bfcc:	jmp    41bfb5 <fb_symbol_table_init@@Base+0x65>
  41bfce:	xchg   ax,ax

000000000041bfd0 <fb_symbol_table_resize@@Base>:
  41bfd0:	endbr64 
  41bfd4:	jmp    41ba60 <ptr_set_visit@@Base+0x170>
  41bfd9:	nop    DWORD PTR [rax+0x0]

000000000041bfe0 <fb_symbol_table_insert@@Base>:
  41bfe0:	endbr64 
  41bfe4:	jmp    41bb90 <ptr_set_visit@@Base+0x2a0>
  41bfe9:	nop    DWORD PTR [rax+0x0]

000000000041bff0 <fb_symbol_table_insert_item@@Base>:
  41bff0:	endbr64 
  41bff4:	mov    rax,QWORD PTR [rsi+0x8]
  41bff8:	mov    rcx,rsi
  41bffb:	mov    r8d,edx
  41bffe:	mov    rsi,QWORD PTR [rax]
  41c001:	mov    rdx,QWORD PTR [rax+0x8]
  41c005:	jmp    41bb90 <ptr_set_visit@@Base+0x2a0>
  41c00a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c010 <fb_symbol_table_find@@Base>:
  41c010:	endbr64 
  41c014:	mov    rax,rsi
  41c017:	lea    rsi,[rdi+0x18]
  41c01b:	mov    rdi,QWORD PTR [rdi]
  41c01e:	mov    rcx,rdx
  41c021:	mov    rdx,rax
  41c024:	jmp    41be10 <ptr_set_visit@@Base+0x520>
  41c029:	nop    DWORD PTR [rax+0x0]

000000000041c030 <fb_symbol_table_find_item@@Base>:
  41c030:	endbr64 
  41c034:	mov    rax,QWORD PTR [rsi+0x8]
  41c038:	lea    rsi,[rdi+0x18]
  41c03c:	mov    rcx,QWORD PTR [rax+0x8]
  41c040:	mov    rdx,QWORD PTR [rax]
  41c043:	mov    rdi,QWORD PTR [rdi]
  41c046:	jmp    41be10 <ptr_set_visit@@Base+0x520>
  41c04b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c050 <fb_symbol_table_remove@@Base>:
  41c050:	endbr64 
  41c054:	jmp    41b960 <ptr_set_visit@@Base+0x70>
  41c059:	nop    DWORD PTR [rax+0x0]

000000000041c060 <fb_symbol_table_remove_item@@Base>:
  41c060:	endbr64 
  41c064:	mov    rax,QWORD PTR [rsi+0x8]
  41c068:	mov    rdx,QWORD PTR [rax+0x8]
  41c06c:	mov    rsi,QWORD PTR [rax]
  41c06f:	jmp    41b960 <ptr_set_visit@@Base+0x70>
  41c074:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c07f:	nop

000000000041c080 <fb_symbol_table_visit@@Base>:
  41c080:	endbr64 
  41c084:	push   r14
  41c086:	push   r13
  41c088:	push   r12
  41c08a:	push   rbp
  41c08b:	push   rbx
  41c08c:	cmp    QWORD PTR [rdi+0x18],0x0
  41c091:	mov    r14,QWORD PTR [rdi]
  41c094:	je     41c0c6 <fb_symbol_table_visit@@Base+0x46>
  41c096:	mov    r13,rdx
  41c099:	mov    r12,rsi
  41c09c:	mov    rbp,rdi
  41c09f:	xor    ebx,ebx
  41c0a1:	nop    DWORD PTR [rax+0x0]
  41c0a8:	mov    rsi,QWORD PTR [r14+rbx*8]
  41c0ac:	test   rsi,rsi
  41c0af:	je     41c0bd <fb_symbol_table_visit@@Base+0x3d>
  41c0b1:	cmp    rsi,0x2
  41c0b5:	je     41c0bd <fb_symbol_table_visit@@Base+0x3d>
  41c0b7:	mov    rdi,r13
  41c0ba:	call   r12
  41c0bd:	inc    rbx
  41c0c0:	cmp    rbx,QWORD PTR [rbp+0x18]
  41c0c4:	jb     41c0a8 <fb_symbol_table_visit@@Base+0x28>
  41c0c6:	pop    rbx
  41c0c7:	pop    rbp
  41c0c8:	pop    r12
  41c0ca:	pop    r13
  41c0cc:	pop    r14
  41c0ce:	ret    
  41c0cf:	nop
  41c0d0:	push   rbx
  41c0d1:	mov    rbx,rdi
  41c0d4:	mov    rdi,QWORD PTR [rdi]
  41c0d7:	test   rdi,rdi
  41c0da:	je     41c0e1 <fb_symbol_table_visit@@Base+0x61>
  41c0dc:	call   405240 <free@plt>
  41c0e1:	vpxor  xmm0,xmm0,xmm0
  41c0e5:	vmovups XMMWORD PTR [rbx],xmm0
  41c0e9:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41c0ee:	pop    rbx
  41c0ef:	ret    
  41c0f0:	push   r15
  41c0f2:	push   r14
  41c0f4:	push   r13
  41c0f6:	push   r12
  41c0f8:	push   rbp
  41c0f9:	push   rbx
  41c0fa:	sub    rsp,0x48
  41c0fe:	mov    QWORD PTR [rsp+0x30],rdi
  41c103:	mov    QWORD PTR [rsp+0x18],rsi
  41c108:	mov    QWORD PTR [rsp+0x20],rdx
  41c10d:	mov    QWORD PTR [rsp+0x28],rcx
  41c112:	mov    DWORD PTR [rsp+0x3c],r8d
  41c117:	test   rcx,rcx
  41c11a:	je     41c66a <fb_symbol_table_visit@@Base+0x5ea>
  41c120:	cmp    QWORD PTR [rsp+0x28],0x2
  41c126:	je     41c61d <fb_symbol_table_visit@@Base+0x59d>
  41c12c:	cmp    QWORD PTR [rsp+0x28],0x1
  41c132:	je     41c5fe <fb_symbol_table_visit@@Base+0x57e>
  41c138:	mov    rbx,QWORD PTR [rsp+0x30]
  41c13d:	mov    r12,QWORD PTR [rbx+0x18]
  41c141:	mov    rsi,QWORD PTR [rbx+0x10]
  41c145:	imul   rax,r12,0xb3
  41c14c:	shr    rax,0x8
  41c150:	cmp    rsi,rax
  41c153:	jae    41c4a0 <fb_symbol_table_visit@@Base+0x420>
  41c159:	mov    rax,QWORD PTR [rsp+0x30]
  41c15e:	mov    rax,QWORD PTR [rax]
  41c161:	mov    QWORD PTR [rsp+0x8],rax
  41c166:	lea    rax,[r12-0x1]
  41c16b:	mov    QWORD PTR [rsp+0x10],rax
  41c170:	mov    rax,QWORD PTR [rsp+0x20]
  41c175:	mov    DWORD PTR [rsp+0x38],eax
  41c179:	test   eax,eax
  41c17b:	jle    41c4c0 <fb_symbol_table_visit@@Base+0x440>
  41c181:	mov    r11,QWORD PTR [rsp+0x20]
  41c186:	mov    r10,QWORD PTR [rsp+0x18]
  41c18b:	xor    ecx,ecx
  41c18d:	mov    rbp,0xffffffffffffffff
  41c194:	mov    ebx,0x9e3779b1
  41c199:	test   r11,r11
  41c19c:	je     41c24b <fb_symbol_table_visit@@Base+0x1cb>
  41c1a2:	nop    WORD PTR [rax+rax*1+0x0]
  41c1a8:	cmp    BYTE PTR [r10],0x2e
  41c1ac:	je     41c580 <fb_symbol_table_visit@@Base+0x500>
  41c1b2:	xor    edx,edx
  41c1b4:	jmp    41c1cf <fb_symbol_table_visit@@Base+0x14f>
  41c1b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c1c0:	cmp    BYTE PTR [r10+rdx*1+0x1],0x2e
  41c1c6:	je     41c3c0 <fb_symbol_table_visit@@Base+0x340>
  41c1cc:	mov    rdx,r8
  41c1cf:	lea    r8,[rdx+0x1]
  41c1d3:	cmp    r8,r11
  41c1d6:	jne    41c1c0 <fb_symbol_table_visit@@Base+0x140>
  41c1d8:	test   rdx,rdx
  41c1db:	je     41c260 <fb_symbol_table_visit@@Base+0x1e0>
  41c1e1:	movzx  esi,BYTE PTR [r10]
  41c1e5:	mov    r8,r11
  41c1e8:	lea    r9,[r10+0x1]
  41c1ec:	test   sil,sil
  41c1ef:	je     41c260 <fb_symbol_table_visit@@Base+0x1e0>
  41c1f1:	lea    rdi,[r10+rdx*1]
  41c1f5:	mov    eax,0x2f692e57
  41c1fa:	jmp    41c20d <fb_symbol_table_visit@@Base+0x18d>
  41c1fc:	nop    DWORD PTR [rax+0x0]
  41c200:	inc    r9
  41c203:	movzx  esi,BYTE PTR [r9-0x1]
  41c208:	test   sil,sil
  41c20b:	je     41c21f <fb_symbol_table_visit@@Base+0x19f>
  41c20d:	mov    rdx,rax
  41c210:	shl    rdx,0x5
  41c214:	add    rax,rdx
  41c217:	xor    rax,rsi
  41c21a:	cmp    r9,rdi
  41c21d:	jne    41c200 <fb_symbol_table_visit@@Base+0x180>
  41c21f:	xor    rax,rcx
  41c222:	xor    rax,0x2f693b52
  41c228:	imul   rax,rbx
  41c22c:	mov    rcx,rax
  41c22f:	cmp    r11,r8
  41c232:	je     41c270 <fb_symbol_table_visit@@Base+0x1f0>
  41c234:	mov    rax,r8
  41c237:	not    rax
  41c23a:	add    r11,rax
  41c23d:	lea    r10,[r10+r8*1+0x1]
  41c242:	test   r11,r11
  41c245:	jne    41c1a8 <fb_symbol_table_visit@@Base+0x128>
  41c24b:	movzx  esi,BYTE PTR [r10]
  41c24f:	xor    r8d,r8d
  41c252:	mov    rdx,rbp
  41c255:	lea    r9,[r10+0x1]
  41c259:	test   sil,sil
  41c25c:	jne    41c1f1 <fb_symbol_table_visit@@Base+0x171>
  41c25e:	xchg   ax,ax
  41c260:	xor    rcx,0x1505
  41c267:	mov    edx,0x9e3779b1
  41c26c:	imul   rcx,rdx
  41c270:	mov    rax,QWORD PTR [rsp+0x10]
  41c275:	mov    rbx,QWORD PTR [rsp+0x8]
  41c27a:	and    rax,rcx
  41c27d:	lea    r14,[rbx+rax*8]
  41c281:	mov    eax,DWORD PTR [rsp+0x3c]
  41c285:	mov    r15,QWORD PTR [r14]
  41c288:	sub    eax,0x2
  41c28b:	cmp    eax,0x1
  41c28e:	jbe    41c590 <fb_symbol_table_visit@@Base+0x510>
  41c294:	lea    r12,[rcx+0x1]
  41c298:	mov    QWORD PTR [rsp],0x0
  41c2a0:	test   r15,r15
  41c2a3:	je     41c38b <fb_symbol_table_visit@@Base+0x30b>
  41c2a9:	mov    rax,r15
  41c2ac:	mov    r15,r12
  41c2af:	mov    r12,rax
  41c2b2:	nop    WORD PTR [rax+rax*1+0x0]
  41c2b8:	cmp    r12,0x2
  41c2bc:	je     41c3f0 <fb_symbol_table_visit@@Base+0x370>
  41c2c2:	mov    edx,DWORD PTR [rsp+0x38]
  41c2c6:	mov    r13,QWORD PTR [r12]
  41c2ca:	test   edx,edx
  41c2cc:	jle    41c408 <fb_symbol_table_visit@@Base+0x388>
  41c2d2:	test   r13,r13
  41c2d5:	je     41c360 <fb_symbol_table_visit@@Base+0x2e0>
  41c2db:	mov    rax,QWORD PTR [r13+0x8]
  41c2df:	mov    r11,QWORD PTR [rsp+0x20]
  41c2e4:	mov    rdx,QWORD PTR [rax+0x8]
  41c2e8:	mov    rdi,QWORD PTR [rax]
  41c2eb:	cmp    r11,rdx
  41c2ee:	jb     41c360 <fb_symbol_table_visit@@Base+0x2e0>
  41c2f0:	mov    rsi,QWORD PTR [rsp+0x18]
  41c2f5:	test   rdx,rdx
  41c2f8:	je     41c570 <fb_symbol_table_visit@@Base+0x4f0>
  41c2fe:	movzx  eax,BYTE PTR [rdi]
  41c301:	cmp    BYTE PTR [rsi],al
  41c303:	jne    41c360 <fb_symbol_table_visit@@Base+0x2e0>
  41c305:	xor    eax,eax
  41c307:	jmp    41c319 <fb_symbol_table_visit@@Base+0x299>
  41c309:	nop    DWORD PTR [rax+0x0]
  41c310:	movzx  ebx,BYTE PTR [rsi+rax*1]
  41c314:	cmp    BYTE PTR [rdi+rax*1],bl
  41c317:	jne    41c360 <fb_symbol_table_visit@@Base+0x2e0>
  41c319:	inc    rax
  41c31c:	cmp    rax,rdx
  41c31f:	jne    41c310 <fb_symbol_table_visit@@Base+0x290>
  41c321:	mov    rax,rdx
  41c324:	cmp    rdx,r11
  41c327:	je     41c5e3 <fb_symbol_table_visit@@Base+0x563>
  41c32d:	cmp    BYTE PTR [rsi+rax*1],0x2e
  41c331:	jne    41c360 <fb_symbol_table_visit@@Base+0x2e0>
  41c333:	mov    rax,rdx
  41c336:	mov    r13,QWORD PTR [r13+0x0]
  41c33a:	not    rax
  41c33d:	add    r11,rax
  41c340:	lea    rsi,[rsi+rdx*1+0x1]
  41c345:	test   r13,r13
  41c348:	je     41c360 <fb_symbol_table_visit@@Base+0x2e0>
  41c34a:	mov    rax,QWORD PTR [r13+0x8]
  41c34e:	mov    rdx,QWORD PTR [rax+0x8]
  41c352:	mov    rdi,QWORD PTR [rax]
  41c355:	cmp    rdx,r11
  41c358:	jbe    41c2f5 <fb_symbol_table_visit@@Base+0x275>
  41c35a:	nop    WORD PTR [rax+rax*1+0x0]
  41c360:	mov    rax,QWORD PTR [rsp+0x10]
  41c365:	mov    rbx,QWORD PTR [rsp+0x8]
  41c36a:	and    rax,r15
  41c36d:	lea    r14,[rbx+rax*8]
  41c371:	mov    r12,QWORD PTR [r14]
  41c374:	inc    r15
  41c377:	test   r12,r12
  41c37a:	jne    41c2b8 <fb_symbol_table_visit@@Base+0x238>
  41c380:	mov    rax,QWORD PTR [rsp]
  41c384:	test   rax,rax
  41c387:	cmovne r14,rax
  41c38b:	mov    QWORD PTR [rsp],r14
  41c38f:	mov    rax,QWORD PTR [rsp+0x30]
  41c394:	mov    rbx,QWORD PTR [rsp+0x28]
  41c399:	inc    QWORD PTR [rax+0x10]
  41c39d:	mov    rax,QWORD PTR [rsp]
  41c3a1:	xor    r15d,r15d
  41c3a4:	mov    QWORD PTR [rax],rbx
  41c3a7:	add    rsp,0x48
  41c3ab:	pop    rbx
  41c3ac:	pop    rbp
  41c3ad:	pop    r12
  41c3af:	pop    r13
  41c3b1:	pop    r14
  41c3b3:	mov    rax,r15
  41c3b6:	pop    r15
  41c3b8:	ret    
  41c3b9:	nop    DWORD PTR [rax+0x0]
  41c3c0:	test   rdx,rdx
  41c3c3:	je     41c3d6 <fb_symbol_table_visit@@Base+0x356>
  41c3c5:	movzx  esi,BYTE PTR [r10]
  41c3c9:	lea    r9,[r10+0x1]
  41c3cd:	test   sil,sil
  41c3d0:	jne    41c1f1 <fb_symbol_table_visit@@Base+0x171>
  41c3d6:	mov    rax,rcx
  41c3d9:	xor    rax,0x1505
  41c3df:	imul   rax,rbx
  41c3e3:	mov    rcx,rax
  41c3e6:	jmp    41c234 <fb_symbol_table_visit@@Base+0x1b4>
  41c3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c3f0:	mov    rax,QWORD PTR [rsp]
  41c3f4:	test   rax,rax
  41c3f7:	cmovne r14,rax
  41c3fb:	mov    QWORD PTR [rsp],r14
  41c3ff:	jmp    41c360 <fb_symbol_table_visit@@Base+0x2e0>
  41c404:	nop    DWORD PTR [rax+0x0]
  41c408:	mov    rbp,QWORD PTR [rsp+0x18]
  41c40d:	mov    ebx,DWORD PTR [rsp+0x38]
  41c411:	jmp    41c437 <fb_symbol_table_visit@@Base+0x3b7>
  41c413:	nop    DWORD PTR [rax+rax*1+0x0]
  41c418:	mov    rsi,QWORD PTR [rcx]
  41c41b:	mov    rdi,QWORD PTR [rax]
  41c41e:	call   405270 <strncmp@plt>
  41c423:	test   eax,eax
  41c425:	jne    41c360 <fb_symbol_table_visit@@Base+0x2e0>
  41c42b:	mov    r13,QWORD PTR [r13+0x0]
  41c42f:	mov    rbp,QWORD PTR [rbp+0x0]
  41c433:	inc    ebx
  41c435:	je     41c488 <fb_symbol_table_visit@@Base+0x408>
  41c437:	test   r13,r13
  41c43a:	je     41c460 <fb_symbol_table_visit@@Base+0x3e0>
  41c43c:	test   rbp,rbp
  41c43f:	je     41c460 <fb_symbol_table_visit@@Base+0x3e0>
  41c441:	mov    rax,QWORD PTR [r13+0x8]
  41c445:	mov    rcx,QWORD PTR [rbp+0x8]
  41c449:	mov    rdx,QWORD PTR [rax+0x8]
  41c44d:	cmp    rdx,QWORD PTR [rcx+0x8]
  41c451:	je     41c418 <fb_symbol_table_visit@@Base+0x398>
  41c453:	jmp    41c360 <fb_symbol_table_visit@@Base+0x2e0>
  41c458:	nop    DWORD PTR [rax+rax*1+0x0]
  41c460:	or     r13,rbp
  41c463:	jne    41c360 <fb_symbol_table_visit@@Base+0x2e0>
  41c469:	mov    eax,DWORD PTR [rsp+0x3c]
  41c46d:	mov    r15,r12
  41c470:	test   eax,eax
  41c472:	jne    41c3a7 <fb_symbol_table_visit@@Base+0x327>
  41c478:	mov    rax,QWORD PTR [rsp+0x28]
  41c47d:	mov    QWORD PTR [r14],rax
  41c480:	jmp    41c3a7 <fb_symbol_table_visit@@Base+0x327>
  41c485:	nop    DWORD PTR [rax]
  41c488:	xor    eax,eax
  41c48a:	test   r13,r13
  41c48d:	sete   al
  41c490:	test   eax,eax
  41c492:	je     41c360 <fb_symbol_table_visit@@Base+0x2e0>
  41c498:	jmp    41c469 <fb_symbol_table_visit@@Base+0x3e9>
  41c49a:	nop    WORD PTR [rax+rax*1+0x0]
  41c4a0:	add    rsi,rsi
  41c4a3:	mov    rdi,rbx
  41c4a6:	call   41c690 <fb_symbol_table_visit@@Base+0x610>
  41c4ab:	test   eax,eax
  41c4ad:	jne    41c63c <fb_symbol_table_visit@@Base+0x5bc>
  41c4b3:	mov    r12,QWORD PTR [rbx+0x18]
  41c4b7:	jmp    41c159 <fb_symbol_table_visit@@Base+0xd9>
  41c4bc:	nop    DWORD PTR [rax+0x0]
  41c4c0:	mov    r8,QWORD PTR [rsp+0x18]
  41c4c5:	test   r8,r8
  41c4c8:	je     41c5f2 <fb_symbol_table_visit@@Base+0x572>
  41c4ce:	mov    rdx,QWORD PTR [r8+0x8]
  41c4d2:	mov    r9d,eax
  41c4d5:	mov    r11,QWORD PTR [rdx]
  41c4d8:	mov    rdx,QWORD PTR [rdx+0x8]
  41c4dc:	xor    ecx,ecx
  41c4de:	mov    r10d,0x9e3779b1
  41c4e4:	dec    rdx
  41c4e7:	je     41c563 <fb_symbol_table_visit@@Base+0x4e3>
  41c4e9:	nop    DWORD PTR [rax+0x0]
  41c4f0:	movzx  esi,BYTE PTR [r11]
  41c4f4:	lea    rdi,[r11+0x1]
  41c4f8:	test   sil,sil
  41c4fb:	je     41c563 <fb_symbol_table_visit@@Base+0x4e3>
  41c4fd:	add    r11,rdx
  41c500:	mov    eax,0x2f692e57
  41c505:	jmp    41c51c <fb_symbol_table_visit@@Base+0x49c>
  41c507:	nop    WORD PTR [rax+rax*1+0x0]
  41c510:	inc    rdi
  41c513:	movzx  esi,BYTE PTR [rdi-0x1]
  41c517:	test   sil,sil
  41c51a:	je     41c52e <fb_symbol_table_visit@@Base+0x4ae>
  41c51c:	mov    rdx,rax
  41c51f:	shl    rdx,0x5
  41c523:	add    rax,rdx
  41c526:	xor    rax,rsi
  41c529:	cmp    rdi,r11
  41c52c:	jne    41c510 <fb_symbol_table_visit@@Base+0x490>
  41c52e:	xor    rax,rcx
  41c531:	xor    rax,0x2f693b52
  41c537:	imul   rax,r10
  41c53b:	mov    r8,QWORD PTR [r8]
  41c53e:	mov    rcx,rax
  41c541:	inc    r9d
  41c544:	je     41c270 <fb_symbol_table_visit@@Base+0x1f0>
  41c54a:	test   r8,r8
  41c54d:	je     41c270 <fb_symbol_table_visit@@Base+0x1f0>
  41c553:	mov    rdx,QWORD PTR [r8+0x8]
  41c557:	mov    r11,QWORD PTR [rdx]
  41c55a:	mov    rdx,QWORD PTR [rdx+0x8]
  41c55e:	dec    rdx
  41c561:	jne    41c4f0 <fb_symbol_table_visit@@Base+0x470>
  41c563:	mov    eax,0x2f692e57
  41c568:	jmp    41c52e <fb_symbol_table_visit@@Base+0x4ae>
  41c56a:	nop    WORD PTR [rax+rax*1+0x0]
  41c570:	xor    eax,eax
  41c572:	jmp    41c324 <fb_symbol_table_visit@@Base+0x2a4>
  41c577:	nop    WORD PTR [rax+rax*1+0x0]
  41c580:	xor    r8d,r8d
  41c583:	mov    rdx,rbp
  41c586:	jmp    41c3c5 <fb_symbol_table_visit@@Base+0x345>
  41c58b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c590:	mov    rax,QWORD PTR [rsp+0x30]
  41c595:	inc    QWORD PTR [rax+0x10]
  41c599:	test   r15,r15
  41c59c:	je     41c5d3 <fb_symbol_table_visit@@Base+0x553>
  41c59e:	cmp    r15,0x2
  41c5a2:	je     41c5d3 <fb_symbol_table_visit@@Base+0x553>
  41c5a4:	inc    rcx
  41c5a7:	mov    rdx,QWORD PTR [rsp+0x8]
  41c5ac:	mov    rsi,QWORD PTR [rsp+0x10]
  41c5b1:	jmp    41c5be <fb_symbol_table_visit@@Base+0x53e>
  41c5b3:	nop    DWORD PTR [rax+rax*1+0x0]
  41c5b8:	cmp    rax,0x2
  41c5bc:	je     41c5d3 <fb_symbol_table_visit@@Base+0x553>
  41c5be:	mov    rax,rsi
  41c5c1:	and    rax,rcx
  41c5c4:	lea    r14,[rdx+rax*8]
  41c5c8:	mov    rax,QWORD PTR [r14]
  41c5cb:	inc    rcx
  41c5ce:	test   rax,rax
  41c5d1:	jne    41c5b8 <fb_symbol_table_visit@@Base+0x538>
  41c5d3:	mov    rax,QWORD PTR [rsp+0x28]
  41c5d8:	xor    r15d,r15d
  41c5db:	mov    QWORD PTR [r14],rax
  41c5de:	jmp    41c3a7 <fb_symbol_table_visit@@Base+0x327>
  41c5e3:	xor    eax,eax
  41c5e5:	cmp    QWORD PTR [r13+0x0],0x0
  41c5ea:	sete   al
  41c5ed:	jmp    41c490 <fb_symbol_table_visit@@Base+0x410>
  41c5f2:	mov    r14,QWORD PTR [rsp+0x8]
  41c5f7:	xor    ecx,ecx
  41c5f9:	jmp    41c281 <fb_symbol_table_visit@@Base+0x201>
  41c5fe:	lea    rcx,[rip+0x2ae73]        # 447478 <fb_symbol_table_missing@@Base+0x8>
  41c605:	mov    edx,0x74
  41c60a:	lea    rsi,[rip+0x2acef]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41c611:	lea    rdi,[rip+0x2adb9]        # 4473d1 <_IO_stdin_used@@Base+0x193d1>
  41c618:	call   405300 <__assert_fail@plt>
  41c61d:	lea    rcx,[rip+0x2ae54]        # 447478 <fb_symbol_table_missing@@Base+0x8>
  41c624:	mov    edx,0x73
  41c629:	lea    rsi,[rip+0x2acd0]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41c630:	lea    rdi,[rip+0x2ad83]        # 4473ba <_IO_stdin_used@@Base+0x193ba>
  41c637:	call   405300 <__assert_fail@plt>
  41c63c:	mov    rax,QWORD PTR [rip+0x359a5]        # 451fe8 <stderr@GLIBC_2.2.5>
  41c643:	lea    rcx,[rip+0x2ad26]        # 447370 <_IO_stdin_used@@Base+0x19370>
  41c64a:	mov    rdi,QWORD PTR [rax]
  41c64d:	lea    rdx,[rip+0x2ad92]        # 4473e6 <_IO_stdin_used@@Base+0x193e6>
  41c654:	mov    esi,0x1
  41c659:	xor    eax,eax
  41c65b:	call   405400 <__fprintf_chk@plt>
  41c660:	mov    edi,0x1
  41c665:	call   4053e0 <exit@plt>
  41c66a:	lea    rcx,[rip+0x2ae07]        # 447478 <fb_symbol_table_missing@@Base+0x8>
  41c671:	mov    edx,0x72
  41c676:	lea    rsi,[rip+0x2ac83]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41c67d:	lea    rdi,[rip+0x2ad1f]        # 4473a3 <_IO_stdin_used@@Base+0x193a3>
  41c684:	call   405300 <__assert_fail@plt>
  41c689:	nop    DWORD PTR [rax+0x0]
  41c690:	push   r13
  41c692:	push   r12
  41c694:	push   rbp
  41c695:	mov    rbp,rdi
  41c698:	push   rbx
  41c699:	sub    rsp,0x38
  41c69d:	mov    rax,QWORD PTR fs:0x28
  41c6a6:	mov    QWORD PTR [rsp+0x28],rax
  41c6ab:	xor    eax,eax
  41c6ad:	cmp    QWORD PTR [rdi+0x10],rsi
  41c6b1:	cmovae rsi,QWORD PTR [rdi+0x10]
  41c6b6:	mov    r12,QWORD PTR [rdi]
  41c6b9:	cmp    rsi,0x2
  41c6bd:	jbe    41c7a0 <fb_symbol_table_visit@@Base+0x720>
  41c6c3:	mov    eax,0x4
  41c6c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c6d0:	lea    rbx,[rax+rax*1]
  41c6d4:	imul   rax,rax,0x166
  41c6db:	shr    rax,0x8
  41c6df:	mov    rdx,rax
  41c6e2:	mov    rax,rbx
  41c6e5:	cmp    rsi,rdx
  41c6e8:	ja     41c6d0 <fb_symbol_table_visit@@Base+0x650>
  41c6ea:	mov    esi,0x8
  41c6ef:	mov    rdi,rbx
  41c6f2:	call   405340 <calloc@plt>
  41c6f7:	mov    QWORD PTR [rsp],rax
  41c6fb:	test   rax,rax
  41c6fe:	je     41c7aa <fb_symbol_table_visit@@Base+0x72a>
  41c704:	cmp    QWORD PTR [rbp+0x18],0x0
  41c709:	mov    QWORD PTR [rsp+0x8],0x0
  41c712:	mov    QWORD PTR [rsp+0x18],rbx
  41c717:	mov    QWORD PTR [rsp+0x10],0x0
  41c720:	je     41c75e <fb_symbol_table_visit@@Base+0x6de>
  41c722:	xor    ebx,ebx
  41c724:	mov    r13,rsp
  41c727:	nop    WORD PTR [rax+rax*1+0x0]
  41c730:	mov    rax,QWORD PTR [r12+rbx*8]
  41c734:	test   rax,rax
  41c737:	je     41c755 <fb_symbol_table_visit@@Base+0x6d5>
  41c739:	cmp    rax,0x2
  41c73d:	je     41c755 <fb_symbol_table_visit@@Base+0x6d5>
  41c73f:	mov    rsi,QWORD PTR [rax]
  41c742:	mov    r8d,0x3
  41c748:	mov    rcx,rax
  41c74b:	xor    edx,edx
  41c74d:	mov    rdi,r13
  41c750:	call   41c0f0 <fb_symbol_table_visit@@Base+0x70>
  41c755:	inc    rbx
  41c758:	cmp    QWORD PTR [rbp+0x18],rbx
  41c75c:	ja     41c730 <fb_symbol_table_visit@@Base+0x6b0>
  41c75e:	mov    rdi,rbp
  41c761:	call   41c0d0 <fb_symbol_table_visit@@Base+0x50>
  41c766:	vmovdqa xmm0,XMMWORD PTR [rsp]
  41c76b:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  41c771:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  41c776:	vmovups XMMWORD PTR [rbp+0x10],xmm1
  41c77b:	xor    eax,eax
  41c77d:	mov    rcx,QWORD PTR [rsp+0x28]
  41c782:	xor    rcx,QWORD PTR fs:0x28
  41c78b:	jne    41c7b1 <fb_symbol_table_visit@@Base+0x731>
  41c78d:	add    rsp,0x38
  41c791:	pop    rbx
  41c792:	pop    rbp
  41c793:	pop    r12
  41c795:	pop    r13
  41c797:	ret    
  41c798:	nop    DWORD PTR [rax+rax*1+0x0]
  41c7a0:	mov    ebx,0x4
  41c7a5:	jmp    41c6ea <fb_symbol_table_visit@@Base+0x66a>
  41c7aa:	mov    eax,0xffffffff
  41c7af:	jmp    41c77d <fb_symbol_table_visit@@Base+0x6fd>
  41c7b1:	call   4052d0 <__stack_chk_fail@plt>
  41c7b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c7c0:	push   r15
  41c7c2:	push   r14
  41c7c4:	push   r13
  41c7c6:	push   r12
  41c7c8:	push   rbp
  41c7c9:	push   rbx
  41c7ca:	sub    rsp,0x28
  41c7ce:	test   rdi,rdi
  41c7d1:	je     41cb50 <fb_symbol_table_visit@@Base+0xad0>
  41c7d7:	mov    rbx,QWORD PTR [rsi]
  41c7da:	mov    DWORD PTR [rsp+0xc],ecx
  41c7de:	lea    rax,[rbx-0x1]
  41c7e2:	mov    QWORD PTR [rsp],rax
  41c7e6:	test   ecx,ecx
  41c7e8:	jle    41c9e8 <fb_symbol_table_visit@@Base+0x968>
  41c7ee:	mov    r14,rcx
  41c7f1:	mov    r13,rdx
  41c7f4:	xor    r8d,r8d
  41c7f7:	mov    r15d,0x9e3779b1
  41c7fd:	test   r14,r14
  41c800:	je     41c8ab <fb_symbol_table_visit@@Base+0x82b>
  41c806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c810:	cmp    BYTE PTR [r13+0x0],0x2e
  41c815:	je     41cb40 <fb_symbol_table_visit@@Base+0xac0>
  41c81b:	xor    esi,esi
  41c81d:	jmp    41c82f <fb_symbol_table_visit@@Base+0x7af>
  41c81f:	nop
  41c820:	cmp    BYTE PTR [r13+rsi*1+0x1],0x2e
  41c826:	je     41cae0 <fb_symbol_table_visit@@Base+0xa60>
  41c82c:	mov    rsi,r10
  41c82f:	lea    r10,[rsi+0x1]
  41c833:	cmp    r10,r14
  41c836:	jne    41c820 <fb_symbol_table_visit@@Base+0x7a0>
  41c838:	test   rsi,rsi
  41c83b:	je     41c8c8 <fb_symbol_table_visit@@Base+0x848>
  41c841:	movzx  r9d,BYTE PTR [r13+0x0]
  41c846:	mov    r10,r14
  41c849:	lea    r11,[r13+0x1]
  41c84d:	test   r9b,r9b
  41c850:	je     41c8c8 <fb_symbol_table_visit@@Base+0x848>
  41c852:	lea    rbx,[r13+rsi*1+0x0]
  41c857:	mov    eax,0x2f692e57
  41c85c:	jmp    41c86d <fb_symbol_table_visit@@Base+0x7ed>
  41c85e:	xchg   ax,ax
  41c860:	inc    r11
  41c863:	movzx  r9d,BYTE PTR [r11-0x1]
  41c868:	test   r9b,r9b
  41c86b:	je     41c87f <fb_symbol_table_visit@@Base+0x7ff>
  41c86d:	mov    rsi,rax
  41c870:	shl    rsi,0x5
  41c874:	add    rax,rsi
  41c877:	xor    rax,r9
  41c87a:	cmp    r11,rbx
  41c87d:	jne    41c860 <fb_symbol_table_visit@@Base+0x7e0>
  41c87f:	xor    rax,r8
  41c882:	xor    rax,0x2f693b52
  41c888:	imul   rax,r15
  41c88c:	mov    r8,rax
  41c88f:	cmp    r14,r10
  41c892:	je     41c8d8 <fb_symbol_table_visit@@Base+0x858>
  41c894:	mov    rax,r10
  41c897:	not    rax
  41c89a:	add    r14,rax
  41c89d:	lea    r13,[r13+r10*1+0x1]
  41c8a2:	test   r14,r14
  41c8a5:	jne    41c810 <fb_symbol_table_visit@@Base+0x790>
  41c8ab:	movzx  r9d,BYTE PTR [r13+0x0]
  41c8b0:	xor    r10d,r10d
  41c8b3:	mov    rsi,0xffffffffffffffff
  41c8ba:	lea    r11,[r13+0x1]
  41c8be:	test   r9b,r9b
  41c8c1:	jne    41c852 <fb_symbol_table_visit@@Base+0x7d2>
  41c8c3:	nop    DWORD PTR [rax+rax*1+0x0]
  41c8c8:	xor    r8,0x1505
  41c8cf:	mov    esi,0x9e3779b1
  41c8d4:	imul   r8,rsi
  41c8d8:	mov    rax,QWORD PTR [rsp]
  41c8dc:	and    rax,r8
  41c8df:	lea    rax,[rdi+rax*8]
  41c8e3:	mov    r13,QWORD PTR [rax]
  41c8e6:	test   r13,r13
  41c8e9:	je     41c9d2 <fb_symbol_table_visit@@Base+0x952>
  41c8ef:	mov    QWORD PTR [rsp+0x18],rcx
  41c8f4:	mov    QWORD PTR [rsp+0x10],rdx
  41c8f9:	lea    r12,[r8+0x1]
  41c8fd:	mov    rax,r13
  41c900:	mov    r14,rdi
  41c903:	mov    r13,r12
  41c906:	mov    r12,rax
  41c909:	nop    DWORD PTR [rax+0x0]
  41c910:	cmp    r12,0x2
  41c914:	je     41c9b8 <fb_symbol_table_visit@@Base+0x938>
  41c91a:	mov    eax,DWORD PTR [rsp+0xc]
  41c91e:	mov    r15,QWORD PTR [r12]
  41c922:	test   eax,eax
  41c924:	jle    41ca90 <fb_symbol_table_visit@@Base+0xa10>
  41c92a:	test   r15,r15
  41c92d:	je     41c9b8 <fb_symbol_table_visit@@Base+0x938>
  41c933:	mov    rax,QWORD PTR [r15+0x8]
  41c937:	mov    r8,QWORD PTR [rsp+0x18]
  41c93c:	mov    rdx,QWORD PTR [rax+0x8]
  41c940:	mov    rdi,QWORD PTR [rax]
  41c943:	cmp    r8,rdx
  41c946:	jb     41c9b8 <fb_symbol_table_visit@@Base+0x938>
  41c948:	mov    rsi,QWORD PTR [rsp+0x10]
  41c94d:	test   rdx,rdx
  41c950:	je     41cb38 <fb_symbol_table_visit@@Base+0xab8>
  41c956:	movzx  eax,BYTE PTR [rdi]
  41c959:	cmp    BYTE PTR [rsi],al
  41c95b:	jne    41c9b8 <fb_symbol_table_visit@@Base+0x938>
  41c95d:	xor    eax,eax
  41c95f:	jmp    41c971 <fb_symbol_table_visit@@Base+0x8f1>
  41c961:	nop    DWORD PTR [rax+0x0]
  41c968:	movzx  ecx,BYTE PTR [rsi+rax*1]
  41c96c:	cmp    BYTE PTR [rdi+rax*1],cl
  41c96f:	jne    41c9b8 <fb_symbol_table_visit@@Base+0x938>
  41c971:	inc    rax
  41c974:	cmp    rax,rdx
  41c977:	jne    41c968 <fb_symbol_table_visit@@Base+0x8e8>
  41c979:	mov    rax,rdx
  41c97c:	cmp    rdx,r8
  41c97f:	je     41cb58 <fb_symbol_table_visit@@Base+0xad8>
  41c985:	cmp    BYTE PTR [rsi+rax*1],0x2e
  41c989:	jne    41c9b8 <fb_symbol_table_visit@@Base+0x938>
  41c98b:	mov    rax,rdx
  41c98e:	mov    r15,QWORD PTR [r15]
  41c991:	not    rax
  41c994:	add    r8,rax
  41c997:	lea    rsi,[rsi+rdx*1+0x1]
  41c99c:	test   r15,r15
  41c99f:	je     41c9b8 <fb_symbol_table_visit@@Base+0x938>
  41c9a1:	mov    rax,QWORD PTR [r15+0x8]
  41c9a5:	mov    rdx,QWORD PTR [rax+0x8]
  41c9a9:	mov    rdi,QWORD PTR [rax]
  41c9ac:	cmp    rdx,r8
  41c9af:	jbe    41c94d <fb_symbol_table_visit@@Base+0x8cd>
  41c9b1:	nop    DWORD PTR [rax+0x0]
  41c9b8:	mov    rax,QWORD PTR [rsp]
  41c9bc:	and    rax,r13
  41c9bf:	mov    r12,QWORD PTR [r14+rax*8]
  41c9c3:	inc    r13
  41c9c6:	test   r12,r12
  41c9c9:	jne    41c910 <fb_symbol_table_visit@@Base+0x890>
  41c9cf:	mov    r13,r12
  41c9d2:	add    rsp,0x28
  41c9d6:	pop    rbx
  41c9d7:	pop    rbp
  41c9d8:	pop    r12
  41c9da:	mov    rax,r13
  41c9dd:	pop    r13
  41c9df:	pop    r14
  41c9e1:	pop    r15
  41c9e3:	ret    
  41c9e4:	nop    DWORD PTR [rax+0x0]
  41c9e8:	test   rdx,rdx
  41c9eb:	je     41cb63 <fb_symbol_table_visit@@Base+0xae3>
  41c9f1:	mov    r9,rdx
  41c9f4:	mov    rax,QWORD PTR [r9+0x8]
  41c9f8:	mov    r10d,ecx
  41c9fb:	mov    rbp,QWORD PTR [rax]
  41c9fe:	mov    rax,QWORD PTR [rax+0x8]
  41ca02:	xor    r8d,r8d
  41ca05:	mov    r11d,0x9e3779b1
  41ca0b:	dec    rax
  41ca0e:	je     41ca83 <fb_symbol_table_visit@@Base+0xa03>
  41ca10:	movzx  esi,BYTE PTR [rbp+0x0]
  41ca14:	lea    rbx,[rbp+0x1]
  41ca18:	test   sil,sil
  41ca1b:	je     41ca83 <fb_symbol_table_visit@@Base+0xa03>
  41ca1d:	add    rbp,rax
  41ca20:	mov    eax,0x2f692e57
  41ca25:	jmp    41ca3c <fb_symbol_table_visit@@Base+0x9bc>
  41ca27:	nop    WORD PTR [rax+rax*1+0x0]
  41ca30:	inc    rbx
  41ca33:	movzx  esi,BYTE PTR [rbx-0x1]
  41ca37:	test   sil,sil
  41ca3a:	je     41ca4e <fb_symbol_table_visit@@Base+0x9ce>
  41ca3c:	mov    r12,rax
  41ca3f:	shl    r12,0x5
  41ca43:	add    rax,r12
  41ca46:	xor    rax,rsi
  41ca49:	cmp    rbx,rbp
  41ca4c:	jne    41ca30 <fb_symbol_table_visit@@Base+0x9b0>
  41ca4e:	xor    rax,r8
  41ca51:	xor    rax,0x2f693b52
  41ca57:	imul   rax,r11
  41ca5b:	mov    r9,QWORD PTR [r9]
  41ca5e:	mov    r8,rax
  41ca61:	inc    r10d
  41ca64:	je     41c8d8 <fb_symbol_table_visit@@Base+0x858>
  41ca6a:	test   r9,r9
  41ca6d:	je     41c8d8 <fb_symbol_table_visit@@Base+0x858>
  41ca73:	mov    rax,QWORD PTR [r9+0x8]
  41ca77:	mov    rbp,QWORD PTR [rax]
  41ca7a:	mov    rax,QWORD PTR [rax+0x8]
  41ca7e:	dec    rax
  41ca81:	jne    41ca10 <fb_symbol_table_visit@@Base+0x990>
  41ca83:	mov    eax,0x2f692e57
  41ca88:	jmp    41ca4e <fb_symbol_table_visit@@Base+0x9ce>
  41ca8a:	nop    WORD PTR [rax+rax*1+0x0]
  41ca90:	mov    rbp,QWORD PTR [rsp+0x10]
  41ca95:	mov    ebx,DWORD PTR [rsp+0xc]
  41ca99:	jmp    41cabe <fb_symbol_table_visit@@Base+0xa3e>
  41ca9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41caa0:	mov    rsi,QWORD PTR [rsi]
  41caa3:	mov    rdi,QWORD PTR [rax]
  41caa6:	call   405270 <strncmp@plt>
  41caab:	test   eax,eax
  41caad:	jne    41c9b8 <fb_symbol_table_visit@@Base+0x938>
  41cab3:	mov    r15,QWORD PTR [r15]
  41cab6:	mov    rbp,QWORD PTR [rbp+0x0]
  41caba:	inc    ebx
  41cabc:	je     41cb20 <fb_symbol_table_visit@@Base+0xaa0>
  41cabe:	test   r15,r15
  41cac1:	je     41cb10 <fb_symbol_table_visit@@Base+0xa90>
  41cac3:	test   rbp,rbp
  41cac6:	je     41cb10 <fb_symbol_table_visit@@Base+0xa90>
  41cac8:	mov    rax,QWORD PTR [r15+0x8]
  41cacc:	mov    rsi,QWORD PTR [rbp+0x8]
  41cad0:	mov    rdx,QWORD PTR [rax+0x8]
  41cad4:	cmp    rdx,QWORD PTR [rsi+0x8]
  41cad8:	je     41caa0 <fb_symbol_table_visit@@Base+0xa20>
  41cada:	jmp    41c9b8 <fb_symbol_table_visit@@Base+0x938>
  41cadf:	nop
  41cae0:	test   rsi,rsi
  41cae3:	je     41caf7 <fb_symbol_table_visit@@Base+0xa77>
  41cae5:	movzx  r9d,BYTE PTR [r13+0x0]
  41caea:	lea    r11,[r13+0x1]
  41caee:	test   r9b,r9b
  41caf1:	jne    41c852 <fb_symbol_table_visit@@Base+0x7d2>
  41caf7:	mov    rax,r8
  41cafa:	xor    rax,0x1505
  41cb00:	imul   rax,r15
  41cb04:	mov    r8,rax
  41cb07:	jmp    41c894 <fb_symbol_table_visit@@Base+0x814>
  41cb0c:	nop    DWORD PTR [rax+0x0]
  41cb10:	or     r15,rbp
  41cb13:	jne    41c9b8 <fb_symbol_table_visit@@Base+0x938>
  41cb19:	jmp    41c9cf <fb_symbol_table_visit@@Base+0x94f>
  41cb1e:	xchg   ax,ax
  41cb20:	xor    eax,eax
  41cb22:	test   r15,r15
  41cb25:	sete   al
  41cb28:	test   eax,eax
  41cb2a:	je     41c9b8 <fb_symbol_table_visit@@Base+0x938>
  41cb30:	jmp    41c9cf <fb_symbol_table_visit@@Base+0x94f>
  41cb35:	nop    DWORD PTR [rax]
  41cb38:	xor    eax,eax
  41cb3a:	jmp    41c97c <fb_symbol_table_visit@@Base+0x8fc>
  41cb3f:	nop
  41cb40:	mov    rsi,0xffffffffffffffff
  41cb47:	xor    r10d,r10d
  41cb4a:	jmp    41cae5 <fb_symbol_table_visit@@Base+0xa65>
  41cb4c:	nop    DWORD PTR [rax+0x0]
  41cb50:	xor    r13d,r13d
  41cb53:	jmp    41c9d2 <fb_symbol_table_visit@@Base+0x952>
  41cb58:	xor    eax,eax
  41cb5a:	cmp    QWORD PTR [r15],0x0
  41cb5e:	sete   al
  41cb61:	jmp    41cb28 <fb_symbol_table_visit@@Base+0xaa8>
  41cb63:	mov    rax,rdi
  41cb66:	xor    r8d,r8d
  41cb69:	jmp    41c8e3 <fb_symbol_table_visit@@Base+0x863>
  41cb6e:	xchg   ax,ax
  41cb70:	push   r15
  41cb72:	push   r14
  41cb74:	push   r13
  41cb76:	push   r12
  41cb78:	push   rbp
  41cb79:	push   rbx
  41cb7a:	sub    rsp,0x38
  41cb7e:	mov    rax,QWORD PTR [rdi]
  41cb81:	mov    QWORD PTR [rsp],rax
  41cb85:	test   rax,rax
  41cb88:	je     41cf40 <fb_symbol_table_visit@@Base+0xec0>
  41cb8e:	mov    rax,QWORD PTR [rdi+0x18]
  41cb92:	mov    rbp,rsi
  41cb95:	dec    rax
  41cb98:	mov    QWORD PTR [rsp+0x8],rax
  41cb9d:	mov    DWORD PTR [rsp+0x14],edx
  41cba1:	test   edx,edx
  41cba3:	jle    41cdb0 <fb_symbol_table_visit@@Base+0xd30>
  41cba9:	mov    r14,rdx
  41cbac:	mov    rbx,rsi
  41cbaf:	mov    r15,0xffffffffffffffff
  41cbb6:	xor    esi,esi
  41cbb8:	mov    r13d,0x9e3779b1
  41cbbe:	test   r14,r14
  41cbc1:	je     41cc6b <fb_symbol_table_visit@@Base+0xbeb>
  41cbc7:	nop    WORD PTR [rax+rax*1+0x0]
  41cbd0:	cmp    BYTE PTR [rbx],0x2e
  41cbd3:	je     41cf30 <fb_symbol_table_visit@@Base+0xeb0>
  41cbd9:	xor    ecx,ecx
  41cbdb:	jmp    41cbee <fb_symbol_table_visit@@Base+0xb6e>
  41cbdd:	nop    DWORD PTR [rax]
  41cbe0:	cmp    BYTE PTR [rbx+rcx*1+0x1],0x2e
  41cbe5:	je     41ceb0 <fb_symbol_table_visit@@Base+0xe30>
  41cbeb:	mov    rcx,r9
  41cbee:	lea    r9,[rcx+0x1]
  41cbf2:	cmp    r9,r14
  41cbf5:	jne    41cbe0 <fb_symbol_table_visit@@Base+0xb60>
  41cbf7:	test   rcx,rcx
  41cbfa:	je     41cc80 <fb_symbol_table_visit@@Base+0xc00>
  41cc00:	movzx  r8d,BYTE PTR [rbx]
  41cc04:	mov    r9,r14
  41cc07:	lea    r10,[rbx+0x1]
  41cc0b:	test   r8b,r8b
  41cc0e:	je     41cc80 <fb_symbol_table_visit@@Base+0xc00>
  41cc10:	lea    r11,[rbx+rcx*1]
  41cc14:	mov    eax,0x2f692e57
  41cc19:	jmp    41cc2d <fb_symbol_table_visit@@Base+0xbad>
  41cc1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc20:	inc    r10
  41cc23:	movzx  r8d,BYTE PTR [r10-0x1]
  41cc28:	test   r8b,r8b
  41cc2b:	je     41cc3f <fb_symbol_table_visit@@Base+0xbbf>
  41cc2d:	mov    rcx,rax
  41cc30:	shl    rcx,0x5
  41cc34:	add    rax,rcx
  41cc37:	xor    rax,r8
  41cc3a:	cmp    r10,r11
  41cc3d:	jne    41cc20 <fb_symbol_table_visit@@Base+0xba0>
  41cc3f:	xor    rax,rsi
  41cc42:	xor    rax,0x2f693b52
  41cc48:	imul   rax,r13
  41cc4c:	mov    rsi,rax
  41cc4f:	cmp    r14,r9
  41cc52:	je     41cc90 <fb_symbol_table_visit@@Base+0xc10>
  41cc54:	mov    rax,r9
  41cc57:	not    rax
  41cc5a:	add    r14,rax
  41cc5d:	lea    rbx,[rbx+r9*1+0x1]
  41cc62:	test   r14,r14
  41cc65:	jne    41cbd0 <fb_symbol_table_visit@@Base+0xb50>
  41cc6b:	movzx  r8d,BYTE PTR [rbx]
  41cc6f:	xor    r9d,r9d
  41cc72:	mov    rcx,r15
  41cc75:	lea    r10,[rbx+0x1]
  41cc79:	test   r8b,r8b
  41cc7c:	jne    41cc10 <fb_symbol_table_visit@@Base+0xb90>
  41cc7e:	xchg   ax,ax
  41cc80:	xor    rsi,0x1505
  41cc87:	mov    ecx,0x9e3779b1
  41cc8c:	imul   rsi,rcx
  41cc90:	mov    rax,QWORD PTR [rsp+0x8]
  41cc95:	mov    rbx,QWORD PTR [rsp]
  41cc99:	and    rax,rsi
  41cc9c:	lea    r14,[rbx+rax*8]
  41cca0:	mov    r15,QWORD PTR [r14]
  41cca3:	test   r15,r15
  41cca6:	je     41cd9a <fb_symbol_table_visit@@Base+0xd1a>
  41ccac:	mov    QWORD PTR [rsp+0x20],rdx
  41ccb1:	mov    QWORD PTR [rsp+0x18],rbp
  41ccb6:	mov    QWORD PTR [rsp+0x28],rdi
  41ccbb:	lea    r13,[rsi+0x1]
  41ccbf:	mov    rax,r15
  41ccc2:	mov    r15,r13
  41ccc5:	mov    r13,rax
  41ccc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ccd0:	cmp    r13,0x2
  41ccd4:	je     41cd78 <fb_symbol_table_visit@@Base+0xcf8>
  41ccda:	mov    eax,DWORD PTR [rsp+0x14]
  41ccde:	mov    r12,QWORD PTR [r13+0x0]
  41cce2:	test   eax,eax
  41cce4:	jle    41ce58 <fb_symbol_table_visit@@Base+0xdd8>
  41ccea:	test   r12,r12
  41cced:	je     41cd78 <fb_symbol_table_visit@@Base+0xcf8>
  41ccf3:	mov    rax,QWORD PTR [r12+0x8]
  41ccf8:	mov    r8,QWORD PTR [rsp+0x20]
  41ccfd:	mov    rdx,QWORD PTR [rax+0x8]
  41cd01:	mov    rdi,QWORD PTR [rax]
  41cd04:	cmp    r8,rdx
  41cd07:	jb     41cd78 <fb_symbol_table_visit@@Base+0xcf8>
  41cd09:	mov    rsi,QWORD PTR [rsp+0x18]
  41cd0e:	test   rdx,rdx
  41cd11:	je     41cf20 <fb_symbol_table_visit@@Base+0xea0>
  41cd17:	movzx  eax,BYTE PTR [rdi]
  41cd1a:	cmp    BYTE PTR [rsi],al
  41cd1c:	jne    41cd78 <fb_symbol_table_visit@@Base+0xcf8>
  41cd1e:	xor    eax,eax
  41cd20:	jmp    41cd31 <fb_symbol_table_visit@@Base+0xcb1>
  41cd22:	nop    WORD PTR [rax+rax*1+0x0]
  41cd28:	movzx  ebx,BYTE PTR [rsi+rax*1]
  41cd2c:	cmp    BYTE PTR [rdi+rax*1],bl
  41cd2f:	jne    41cd78 <fb_symbol_table_visit@@Base+0xcf8>
  41cd31:	inc    rax
  41cd34:	cmp    rax,rdx
  41cd37:	jne    41cd28 <fb_symbol_table_visit@@Base+0xca8>
  41cd39:	mov    rax,rdx
  41cd3c:	cmp    rdx,r8
  41cd3f:	je     41cf48 <fb_symbol_table_visit@@Base+0xec8>
  41cd45:	cmp    BYTE PTR [rsi+rax*1],0x2e
  41cd49:	jne    41cd78 <fb_symbol_table_visit@@Base+0xcf8>
  41cd4b:	mov    rax,rdx
  41cd4e:	mov    r12,QWORD PTR [r12]
  41cd52:	not    rax
  41cd55:	add    r8,rax
  41cd58:	lea    rsi,[rsi+rdx*1+0x1]
  41cd5d:	test   r12,r12
  41cd60:	je     41cd78 <fb_symbol_table_visit@@Base+0xcf8>
  41cd62:	mov    rax,QWORD PTR [r12+0x8]
  41cd67:	mov    rdx,QWORD PTR [rax+0x8]
  41cd6b:	mov    rdi,QWORD PTR [rax]
  41cd6e:	cmp    rdx,r8
  41cd71:	jbe    41cd0e <fb_symbol_table_visit@@Base+0xc8e>
  41cd73:	nop    DWORD PTR [rax+rax*1+0x0]
  41cd78:	mov    rax,QWORD PTR [rsp+0x8]
  41cd7d:	mov    rdi,QWORD PTR [rsp]
  41cd81:	and    rax,r15
  41cd84:	lea    r14,[rdi+rax*8]
  41cd88:	mov    r13,QWORD PTR [r14]
  41cd8b:	inc    r15
  41cd8e:	test   r13,r13
  41cd91:	jne    41ccd0 <fb_symbol_table_visit@@Base+0xc50>
  41cd97:	mov    r15,r13
  41cd9a:	add    rsp,0x38
  41cd9e:	pop    rbx
  41cd9f:	pop    rbp
  41cda0:	pop    r12
  41cda2:	pop    r13
  41cda4:	pop    r14
  41cda6:	mov    rax,r15
  41cda9:	pop    r15
  41cdab:	ret    
  41cdac:	nop    DWORD PTR [rax+0x0]
  41cdb0:	test   rsi,rsi
  41cdb3:	je     41cf54 <fb_symbol_table_visit@@Base+0xed4>
  41cdb9:	mov    r8,rsi
  41cdbc:	mov    rax,QWORD PTR [r8+0x8]
  41cdc0:	mov    r9d,edx
  41cdc3:	mov    rbx,QWORD PTR [rax]
  41cdc6:	mov    rax,QWORD PTR [rax+0x8]
  41cdca:	xor    esi,esi
  41cdcc:	mov    r10d,0x9e3779b1
  41cdd2:	dec    rax
  41cdd5:	je     41ce4b <fb_symbol_table_visit@@Base+0xdcb>
  41cdd7:	nop    WORD PTR [rax+rax*1+0x0]
  41cde0:	movzx  ecx,BYTE PTR [rbx]
  41cde3:	lea    r11,[rbx+0x1]
  41cde7:	test   cl,cl
  41cde9:	je     41ce4b <fb_symbol_table_visit@@Base+0xdcb>
  41cdeb:	add    rbx,rax
  41cdee:	mov    eax,0x2f692e57
  41cdf3:	jmp    41ce04 <fb_symbol_table_visit@@Base+0xd84>
  41cdf5:	nop    DWORD PTR [rax]
  41cdf8:	inc    r11
  41cdfb:	movzx  ecx,BYTE PTR [r11-0x1]
  41ce00:	test   cl,cl
  41ce02:	je     41ce16 <fb_symbol_table_visit@@Base+0xd96>
  41ce04:	mov    r12,rax
  41ce07:	shl    r12,0x5
  41ce0b:	add    rax,r12
  41ce0e:	xor    rax,rcx
  41ce11:	cmp    r11,rbx
  41ce14:	jne    41cdf8 <fb_symbol_table_visit@@Base+0xd78>
  41ce16:	xor    rax,rsi
  41ce19:	xor    rax,0x2f693b52
  41ce1f:	imul   rax,r10
  41ce23:	mov    r8,QWORD PTR [r8]
  41ce26:	mov    rsi,rax
  41ce29:	inc    r9d
  41ce2c:	je     41cc90 <fb_symbol_table_visit@@Base+0xc10>
  41ce32:	test   r8,r8
  41ce35:	je     41cc90 <fb_symbol_table_visit@@Base+0xc10>
  41ce3b:	mov    rax,QWORD PTR [r8+0x8]
  41ce3f:	mov    rbx,QWORD PTR [rax]
  41ce42:	mov    rax,QWORD PTR [rax+0x8]
  41ce46:	dec    rax
  41ce49:	jne    41cde0 <fb_symbol_table_visit@@Base+0xd60>
  41ce4b:	mov    eax,0x2f692e57
  41ce50:	jmp    41ce16 <fb_symbol_table_visit@@Base+0xd96>
  41ce52:	nop    WORD PTR [rax+rax*1+0x0]
  41ce58:	mov    rbp,QWORD PTR [rsp+0x18]
  41ce5d:	mov    ebx,DWORD PTR [rsp+0x14]
  41ce61:	jmp    41ce8b <fb_symbol_table_visit@@Base+0xe0b>
  41ce63:	nop    DWORD PTR [rax+rax*1+0x0]
  41ce68:	mov    rsi,QWORD PTR [rsi]
  41ce6b:	mov    rdi,QWORD PTR [rax]
  41ce6e:	call   405270 <strncmp@plt>
  41ce73:	test   eax,eax
  41ce75:	jne    41cd78 <fb_symbol_table_visit@@Base+0xcf8>
  41ce7b:	mov    r12,QWORD PTR [r12]
  41ce7f:	mov    rbp,QWORD PTR [rbp+0x0]
  41ce83:	inc    ebx
  41ce85:	je     41cf08 <fb_symbol_table_visit@@Base+0xe88>
  41ce8b:	test   r12,r12
  41ce8e:	je     41cee0 <fb_symbol_table_visit@@Base+0xe60>
  41ce90:	test   rbp,rbp
  41ce93:	je     41cee0 <fb_symbol_table_visit@@Base+0xe60>
  41ce95:	mov    rax,QWORD PTR [r12+0x8]
  41ce9a:	mov    rsi,QWORD PTR [rbp+0x8]
  41ce9e:	mov    rdx,QWORD PTR [rax+0x8]
  41cea2:	cmp    rdx,QWORD PTR [rsi+0x8]
  41cea6:	je     41ce68 <fb_symbol_table_visit@@Base+0xde8>
  41cea8:	jmp    41cd78 <fb_symbol_table_visit@@Base+0xcf8>
  41cead:	nop    DWORD PTR [rax]
  41ceb0:	test   rcx,rcx
  41ceb3:	je     41cec6 <fb_symbol_table_visit@@Base+0xe46>
  41ceb5:	movzx  r8d,BYTE PTR [rbx]
  41ceb9:	lea    r10,[rbx+0x1]
  41cebd:	test   r8b,r8b
  41cec0:	jne    41cc10 <fb_symbol_table_visit@@Base+0xb90>
  41cec6:	mov    rax,rsi
  41cec9:	xor    rax,0x1505
  41cecf:	imul   rax,r13
  41ced3:	mov    rsi,rax
  41ced6:	jmp    41cc54 <fb_symbol_table_visit@@Base+0xbd4>
  41cedb:	nop    DWORD PTR [rax+rax*1+0x0]
  41cee0:	or     r12,rbp
  41cee3:	jne    41cd78 <fb_symbol_table_visit@@Base+0xcf8>
  41cee9:	mov    rax,QWORD PTR [rsp+0x28]
  41ceee:	mov    QWORD PTR [r14],0x2
  41cef5:	mov    r15,r13
  41cef8:	dec    QWORD PTR [rax+0x10]
  41cefc:	jmp    41cd9a <fb_symbol_table_visit@@Base+0xd1a>
  41cf01:	nop    DWORD PTR [rax+0x0]
  41cf08:	xor    eax,eax
  41cf0a:	test   r12,r12
  41cf0d:	sete   al
  41cf10:	test   eax,eax
  41cf12:	je     41cd78 <fb_symbol_table_visit@@Base+0xcf8>
  41cf18:	jmp    41cee9 <fb_symbol_table_visit@@Base+0xe69>
  41cf1a:	nop    WORD PTR [rax+rax*1+0x0]
  41cf20:	xor    eax,eax
  41cf22:	jmp    41cd3c <fb_symbol_table_visit@@Base+0xcbc>
  41cf27:	nop    WORD PTR [rax+rax*1+0x0]
  41cf30:	mov    rcx,r15
  41cf33:	xor    r9d,r9d
  41cf36:	jmp    41ceb5 <fb_symbol_table_visit@@Base+0xe35>
  41cf3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cf40:	xor    r15d,r15d
  41cf43:	jmp    41cd9a <fb_symbol_table_visit@@Base+0xd1a>
  41cf48:	xor    eax,eax
  41cf4a:	cmp    QWORD PTR [r12],0x0
  41cf4f:	sete   al
  41cf52:	jmp    41cf10 <fb_symbol_table_visit@@Base+0xe90>
  41cf54:	mov    r14,QWORD PTR [rsp]
  41cf58:	xor    esi,esi
  41cf5a:	jmp    41cca0 <fb_symbol_table_visit@@Base+0xc20>
  41cf5f:	nop

000000000041cf60 <fb_scope_table_clear@@Base>:
  41cf60:	endbr64 
  41cf64:	jmp    41c0d0 <fb_symbol_table_visit@@Base+0x50>
  41cf69:	nop    DWORD PTR [rax+0x0]

000000000041cf70 <fb_scope_table_destroy@@Base>:
  41cf70:	endbr64 
  41cf74:	push   r14
  41cf76:	push   r13
  41cf78:	push   r12
  41cf7a:	push   rbp
  41cf7b:	mov    rbp,rdi
  41cf7e:	push   rbx
  41cf7f:	test   rsi,rsi
  41cf82:	je     41cfbe <fb_scope_table_destroy@@Base+0x4e>
  41cf84:	cmp    QWORD PTR [rdi+0x18],0x0
  41cf89:	mov    r12,QWORD PTR [rdi]
  41cf8c:	je     41cfbe <fb_scope_table_destroy@@Base+0x4e>
  41cf8e:	mov    r13,rsi
  41cf91:	mov    r14,rdx
  41cf94:	xor    ebx,ebx
  41cf96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cfa0:	mov    rsi,QWORD PTR [r12+rbx*8]
  41cfa4:	test   rsi,rsi
  41cfa7:	je     41cfb5 <fb_scope_table_destroy@@Base+0x45>
  41cfa9:	cmp    rsi,0x2
  41cfad:	je     41cfb5 <fb_scope_table_destroy@@Base+0x45>
  41cfaf:	mov    rdi,r14
  41cfb2:	call   r13
  41cfb5:	inc    rbx
  41cfb8:	cmp    rbx,QWORD PTR [rbp+0x18]
  41cfbc:	jb     41cfa0 <fb_scope_table_destroy@@Base+0x30>
  41cfbe:	pop    rbx
  41cfbf:	mov    rdi,rbp
  41cfc2:	pop    rbp
  41cfc3:	pop    r12
  41cfc5:	pop    r13
  41cfc7:	pop    r14
  41cfc9:	jmp    41c0d0 <fb_symbol_table_visit@@Base+0x50>
  41cfce:	xchg   ax,ax

000000000041cfd0 <fb_scope_table_init@@Base>:
  41cfd0:	endbr64 
  41cfd4:	push   rbp
  41cfd5:	push   rbx
  41cfd6:	mov    rbx,rdi
  41cfd9:	sub    rsp,0x8
  41cfdd:	cmp    rsi,0x2
  41cfe1:	jbe    41d040 <fb_scope_table_init@@Base+0x70>
  41cfe3:	mov    eax,0x4
  41cfe8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cff0:	lea    rbp,[rax+rax*1]
  41cff4:	imul   rax,rax,0x166
  41cffb:	shr    rax,0x8
  41cfff:	mov    rdx,rax
  41d002:	mov    rax,rbp
  41d005:	cmp    rsi,rdx
  41d008:	ja     41cff0 <fb_scope_table_init@@Base+0x20>
  41d00a:	mov    esi,0x8
  41d00f:	mov    rdi,rbp
  41d012:	call   405340 <calloc@plt>
  41d017:	mov    QWORD PTR [rbx],rax
  41d01a:	test   rax,rax
  41d01d:	je     41d047 <fb_scope_table_init@@Base+0x77>
  41d01f:	mov    QWORD PTR [rbx+0x8],0x0
  41d027:	mov    QWORD PTR [rbx+0x18],rbp
  41d02b:	mov    QWORD PTR [rbx+0x10],0x0
  41d033:	xor    eax,eax
  41d035:	add    rsp,0x8
  41d039:	pop    rbx
  41d03a:	pop    rbp
  41d03b:	ret    
  41d03c:	nop    DWORD PTR [rax+0x0]
  41d040:	mov    ebp,0x4
  41d045:	jmp    41d00a <fb_scope_table_init@@Base+0x3a>
  41d047:	mov    eax,0xffffffff
  41d04c:	jmp    41d035 <fb_scope_table_init@@Base+0x65>
  41d04e:	xchg   ax,ax

000000000041d050 <fb_scope_table_resize@@Base>:
  41d050:	endbr64 
  41d054:	jmp    41c690 <fb_symbol_table_visit@@Base+0x610>
  41d059:	nop    DWORD PTR [rax+0x0]

000000000041d060 <fb_scope_table_insert@@Base>:
  41d060:	endbr64 
  41d064:	jmp    41c0f0 <fb_symbol_table_visit@@Base+0x70>
  41d069:	nop    DWORD PTR [rax+0x0]

000000000041d070 <fb_scope_table_insert_item@@Base>:
  41d070:	endbr64 
  41d074:	mov    rcx,rsi
  41d077:	mov    rsi,QWORD PTR [rsi]
  41d07a:	mov    r8d,edx
  41d07d:	xor    edx,edx
  41d07f:	jmp    41c0f0 <fb_symbol_table_visit@@Base+0x70>
  41d084:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41d08f:	nop

000000000041d090 <fb_scope_table_find@@Base>:
  41d090:	endbr64 
  41d094:	mov    rax,rsi
  41d097:	lea    rsi,[rdi+0x18]
  41d09b:	mov    rdi,QWORD PTR [rdi]
  41d09e:	mov    rcx,rdx
  41d0a1:	mov    rdx,rax
  41d0a4:	jmp    41c7c0 <fb_symbol_table_visit@@Base+0x740>
  41d0a9:	nop    DWORD PTR [rax+0x0]

000000000041d0b0 <fb_scope_table_find_item@@Base>:
  41d0b0:	endbr64 
  41d0b4:	lea    rax,[rdi+0x18]
  41d0b8:	mov    rdx,QWORD PTR [rsi]
  41d0bb:	mov    rdi,QWORD PTR [rdi]
  41d0be:	xor    ecx,ecx
  41d0c0:	mov    rsi,rax
  41d0c3:	jmp    41c7c0 <fb_symbol_table_visit@@Base+0x740>
  41d0c8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d0d0 <fb_scope_table_remove@@Base>:
  41d0d0:	endbr64 
  41d0d4:	jmp    41cb70 <fb_symbol_table_visit@@Base+0xaf0>
  41d0d9:	nop    DWORD PTR [rax+0x0]

000000000041d0e0 <fb_scope_table_remove_item@@Base>:
  41d0e0:	endbr64 
  41d0e4:	mov    rsi,QWORD PTR [rsi]
  41d0e7:	xor    edx,edx
  41d0e9:	jmp    41cb70 <fb_symbol_table_visit@@Base+0xaf0>
  41d0ee:	xchg   ax,ax

000000000041d0f0 <fb_scope_table_visit@@Base>:
  41d0f0:	endbr64 
  41d0f4:	push   r14
  41d0f6:	push   r13
  41d0f8:	push   r12
  41d0fa:	push   rbp
  41d0fb:	push   rbx
  41d0fc:	cmp    QWORD PTR [rdi+0x18],0x0
  41d101:	mov    r14,QWORD PTR [rdi]
  41d104:	je     41d136 <fb_scope_table_visit@@Base+0x46>
  41d106:	mov    r13,rdx
  41d109:	mov    r12,rsi
  41d10c:	mov    rbp,rdi
  41d10f:	xor    ebx,ebx
  41d111:	nop    DWORD PTR [rax+0x0]
  41d118:	mov    rsi,QWORD PTR [r14+rbx*8]
  41d11c:	test   rsi,rsi
  41d11f:	je     41d12d <fb_scope_table_visit@@Base+0x3d>
  41d121:	cmp    rsi,0x2
  41d125:	je     41d12d <fb_scope_table_visit@@Base+0x3d>
  41d127:	mov    rdi,r13
  41d12a:	call   r12
  41d12d:	inc    rbx
  41d130:	cmp    rbx,QWORD PTR [rbp+0x18]
  41d134:	jb     41d118 <fb_scope_table_visit@@Base+0x28>
  41d136:	pop    rbx
  41d137:	pop    rbp
  41d138:	pop    r12
  41d13a:	pop    r13
  41d13c:	pop    r14
  41d13e:	ret    
  41d13f:	nop
  41d140:	push   rbx
  41d141:	mov    rbx,rdi
  41d144:	mov    rdi,QWORD PTR [rdi]
  41d147:	test   rdi,rdi
  41d14a:	je     41d151 <fb_scope_table_visit@@Base+0x61>
  41d14c:	call   405240 <free@plt>
  41d151:	vpxor  xmm0,xmm0,xmm0
  41d155:	vmovups XMMWORD PTR [rbx],xmm0
  41d159:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41d15e:	pop    rbx
  41d15f:	ret    
  41d160:	push   r15
  41d162:	push   r14
  41d164:	push   r13
  41d166:	mov    r13,rdi
  41d169:	push   r12
  41d16b:	push   rbp
  41d16c:	push   rbx
  41d16d:	sub    rsp,0x28
  41d171:	mov    QWORD PTR [rsp+0x8],rsi
  41d176:	mov    r15,QWORD PTR [rdi]
  41d179:	mov    rax,QWORD PTR fs:0x28
  41d182:	mov    QWORD PTR [rsp+0x18],rax
  41d187:	xor    eax,eax
  41d189:	test   r15,r15
  41d18c:	je     41d260 <fb_scope_table_visit@@Base+0x170>
  41d192:	mov    r8,rdx
  41d195:	mov    rax,QWORD PTR [r13+0x18]
  41d199:	mov    rdi,rsi
  41d19c:	lea    rcx,[rsp+0x10]
  41d1a1:	mov    edx,0x2f693b52
  41d1a6:	mov    rsi,r8
  41d1a9:	lea    r14,[rax-0x1]
  41d1ad:	mov    QWORD PTR [rsp],r8
  41d1b1:	call   42c690 <cmetrohash64_1@@Base>
  41d1b6:	mov    ebp,DWORD PTR [rsp+0x10]
  41d1ba:	mov    rax,r14
  41d1bd:	and    rax,rbp
  41d1c0:	lea    r12,[r15+rax*8]
  41d1c4:	mov    rbx,QWORD PTR [r12]
  41d1c8:	test   rbx,rbx
  41d1cb:	je     41d260 <fb_scope_table_visit@@Base+0x170>
  41d1d1:	inc    rbp
  41d1d4:	mov    r8,QWORD PTR [rsp]
  41d1d8:	jmp    41d1f6 <fb_scope_table_visit@@Base+0x106>
  41d1da:	nop    WORD PTR [rax+rax*1+0x0]
  41d1e0:	mov    rax,rbp
  41d1e3:	and    rax,r14
  41d1e6:	lea    r12,[r15+rax*8]
  41d1ea:	mov    rbx,QWORD PTR [r12]
  41d1ee:	inc    rbp
  41d1f1:	test   rbx,rbx
  41d1f4:	je     41d260 <fb_scope_table_visit@@Base+0x170>
  41d1f6:	cmp    rbx,0x2
  41d1fa:	je     41d1e0 <fb_scope_table_visit@@Base+0xf0>
  41d1fc:	movsxd rax,DWORD PTR [rbx+0x100]
  41d203:	cmp    r8,rax
  41d206:	jne    41d1e0 <fb_scope_table_visit@@Base+0xf0>
  41d208:	mov    rsi,QWORD PTR [rbx+0xf8]
  41d20f:	mov    rdi,QWORD PTR [rsp+0x8]
  41d214:	mov    rdx,r8
  41d217:	mov    QWORD PTR [rsp],r8
  41d21b:	call   405330 <memcmp@plt>
  41d220:	test   eax,eax
  41d222:	mov    r8,QWORD PTR [rsp]
  41d226:	jne    41d1e0 <fb_scope_table_visit@@Base+0xf0>
  41d228:	mov    QWORD PTR [r12],0x2
  41d230:	dec    QWORD PTR [r13+0x10]
  41d234:	mov    rcx,QWORD PTR [rsp+0x18]
  41d239:	xor    rcx,QWORD PTR fs:0x28
  41d242:	mov    rax,rbx
  41d245:	jne    41d264 <fb_scope_table_visit@@Base+0x174>
  41d247:	add    rsp,0x28
  41d24b:	pop    rbx
  41d24c:	pop    rbp
  41d24d:	pop    r12
  41d24f:	pop    r13
  41d251:	pop    r14
  41d253:	pop    r15
  41d255:	ret    
  41d256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d260:	xor    ebx,ebx
  41d262:	jmp    41d234 <fb_scope_table_visit@@Base+0x144>
  41d264:	call   4052d0 <__stack_chk_fail@plt>
  41d269:	nop    DWORD PTR [rax+0x0]
  41d270:	push   r13
  41d272:	push   r12
  41d274:	push   rbp
  41d275:	mov    rbp,rdi
  41d278:	push   rbx
  41d279:	sub    rsp,0x38
  41d27d:	mov    rax,QWORD PTR fs:0x28
  41d286:	mov    QWORD PTR [rsp+0x28],rax
  41d28b:	xor    eax,eax
  41d28d:	cmp    QWORD PTR [rdi+0x10],rsi
  41d291:	cmovae rsi,QWORD PTR [rdi+0x10]
  41d296:	mov    r12,QWORD PTR [rdi]
  41d299:	cmp    rsi,0x2
  41d29d:	jbe    41d380 <fb_scope_table_visit@@Base+0x290>
  41d2a3:	mov    eax,0x4
  41d2a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d2b0:	lea    rbx,[rax+rax*1]
  41d2b4:	imul   rax,rax,0x166
  41d2bb:	shr    rax,0x8
  41d2bf:	mov    rdx,rax
  41d2c2:	mov    rax,rbx
  41d2c5:	cmp    rsi,rdx
  41d2c8:	ja     41d2b0 <fb_scope_table_visit@@Base+0x1c0>
  41d2ca:	mov    esi,0x8
  41d2cf:	mov    rdi,rbx
  41d2d2:	call   405340 <calloc@plt>
  41d2d7:	mov    QWORD PTR [rsp],rax
  41d2db:	test   rax,rax
  41d2de:	je     41d38a <fb_scope_table_visit@@Base+0x29a>
  41d2e4:	cmp    QWORD PTR [rbp+0x18],0x0
  41d2e9:	mov    QWORD PTR [rsp+0x8],0x0
  41d2f2:	mov    QWORD PTR [rsp+0x18],rbx
  41d2f7:	mov    QWORD PTR [rsp+0x10],0x0
  41d300:	je     41d344 <fb_scope_table_visit@@Base+0x254>
  41d302:	xor    ebx,ebx
  41d304:	mov    r13,rsp
  41d307:	nop    WORD PTR [rax+rax*1+0x0]
  41d310:	mov    rcx,QWORD PTR [r12+rbx*8]
  41d314:	test   rcx,rcx
  41d317:	je     41d33b <fb_scope_table_visit@@Base+0x24b>
  41d319:	cmp    rcx,0x2
  41d31d:	je     41d33b <fb_scope_table_visit@@Base+0x24b>
  41d31f:	movsxd rdx,DWORD PTR [rcx+0x100]
  41d326:	mov    rsi,QWORD PTR [rcx+0xf8]
  41d32d:	mov    r8d,0x3
  41d333:	mov    rdi,r13
  41d336:	call   41d3a0 <fb_scope_table_visit@@Base+0x2b0>
  41d33b:	inc    rbx
  41d33e:	cmp    QWORD PTR [rbp+0x18],rbx
  41d342:	ja     41d310 <fb_scope_table_visit@@Base+0x220>
  41d344:	mov    rdi,rbp
  41d347:	call   41d140 <fb_scope_table_visit@@Base+0x50>
  41d34c:	vmovdqa xmm0,XMMWORD PTR [rsp]
  41d351:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  41d357:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  41d35c:	vmovups XMMWORD PTR [rbp+0x10],xmm1
  41d361:	xor    eax,eax
  41d363:	mov    rdi,QWORD PTR [rsp+0x28]
  41d368:	xor    rdi,QWORD PTR fs:0x28
  41d371:	jne    41d391 <fb_scope_table_visit@@Base+0x2a1>
  41d373:	add    rsp,0x38
  41d377:	pop    rbx
  41d378:	pop    rbp
  41d379:	pop    r12
  41d37b:	pop    r13
  41d37d:	ret    
  41d37e:	xchg   ax,ax
  41d380:	mov    ebx,0x4
  41d385:	jmp    41d2ca <fb_scope_table_visit@@Base+0x1da>
  41d38a:	mov    eax,0xffffffff
  41d38f:	jmp    41d363 <fb_scope_table_visit@@Base+0x273>
  41d391:	call   4052d0 <__stack_chk_fail@plt>
  41d396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d3a0:	push   r15
  41d3a2:	push   r14
  41d3a4:	push   r13
  41d3a6:	mov    r13,rdx
  41d3a9:	push   r12
  41d3ab:	push   rbp
  41d3ac:	push   rbx
  41d3ad:	sub    rsp,0x48
  41d3b1:	mov    QWORD PTR [rsp+0x10],rsi
  41d3b6:	mov    QWORD PTR [rsp+0x8],rcx
  41d3bb:	mov    DWORD PTR [rsp+0x1c],r8d
  41d3c0:	mov    rdx,QWORD PTR fs:0x28
  41d3c9:	mov    QWORD PTR [rsp+0x38],rdx
  41d3ce:	xor    edx,edx
  41d3d0:	test   rcx,rcx
  41d3d3:	je     41d5ae <fb_scope_table_visit@@Base+0x4be>
  41d3d9:	cmp    QWORD PTR [rsp+0x8],0x2
  41d3df:	je     41d58f <fb_scope_table_visit@@Base+0x49f>
  41d3e5:	cmp    QWORD PTR [rsp+0x8],0x1
  41d3eb:	je     41d5d2 <fb_scope_table_visit@@Base+0x4e2>
  41d3f1:	mov    r12,QWORD PTR [rdi+0x18]
  41d3f5:	mov    rsi,QWORD PTR [rdi+0x10]
  41d3f9:	imul   rax,r12,0xb3
  41d400:	mov    r15,rdi
  41d403:	shr    rax,0x8
  41d407:	cmp    rsi,rax
  41d40a:	jae    41d4f0 <fb_scope_table_visit@@Base+0x400>
  41d410:	mov    rdi,QWORD PTR [rsp+0x10]
  41d415:	lea    rcx,[rsp+0x30]
  41d41a:	mov    edx,0x2f693b52
  41d41f:	mov    rsi,r13
  41d422:	mov    r14,QWORD PTR [r15]
  41d425:	dec    r12
  41d428:	call   42c690 <cmetrohash64_1@@Base>
  41d42d:	mov    ebp,DWORD PTR [rsp+0x30]
  41d431:	mov    rax,r12
  41d434:	and    rax,rbp
  41d437:	lea    rcx,[r14+rax*8]
  41d43b:	mov    eax,DWORD PTR [rsp+0x1c]
  41d43f:	sub    eax,0x2
  41d442:	cmp    eax,0x1
  41d445:	jbe    41d540 <fb_scope_table_visit@@Base+0x450>
  41d44b:	mov    rbx,QWORD PTR [rcx]
  41d44e:	inc    rbp
  41d451:	xor    r11d,r11d
  41d454:	test   rbx,rbx
  41d457:	jne    41d485 <fb_scope_table_visit@@Base+0x395>
  41d459:	jmp    41d58a <fb_scope_table_visit@@Base+0x49a>
  41d45e:	xchg   ax,ax
  41d460:	movsxd rax,DWORD PTR [rbx+0x100]
  41d467:	cmp    r13,rax
  41d46a:	je     41d498 <fb_scope_table_visit@@Base+0x3a8>
  41d46c:	mov    rax,r12
  41d46f:	and    rax,rbp
  41d472:	lea    rcx,[r14+rax*8]
  41d476:	mov    rbx,QWORD PTR [rcx]
  41d479:	inc    rbp
  41d47c:	test   rbx,rbx
  41d47f:	je     41d520 <fb_scope_table_visit@@Base+0x430>
  41d485:	cmp    rbx,0x2
  41d489:	jne    41d460 <fb_scope_table_visit@@Base+0x370>
  41d48b:	test   r11,r11
  41d48e:	cmove  r11,rcx
  41d492:	jmp    41d46c <fb_scope_table_visit@@Base+0x37c>
  41d494:	nop    DWORD PTR [rax+0x0]
  41d498:	mov    rsi,QWORD PTR [rbx+0xf8]
  41d49f:	mov    rdi,QWORD PTR [rsp+0x10]
  41d4a4:	mov    rdx,r13
  41d4a7:	mov    QWORD PTR [rsp+0x20],r11
  41d4ac:	mov    QWORD PTR [rsp+0x28],rcx
  41d4b1:	call   405330 <memcmp@plt>
  41d4b6:	test   eax,eax
  41d4b8:	mov    r11,QWORD PTR [rsp+0x20]
  41d4bd:	jne    41d46c <fb_scope_table_visit@@Base+0x37c>
  41d4bf:	mov    eax,DWORD PTR [rsp+0x1c]
  41d4c3:	test   eax,eax
  41d4c5:	je     41d510 <fb_scope_table_visit@@Base+0x420>
  41d4c7:	mov    rdi,QWORD PTR [rsp+0x38]
  41d4cc:	xor    rdi,QWORD PTR fs:0x28
  41d4d5:	mov    rax,rbx
  41d4d8:	jne    41d5cd <fb_scope_table_visit@@Base+0x4dd>
  41d4de:	add    rsp,0x48
  41d4e2:	pop    rbx
  41d4e3:	pop    rbp
  41d4e4:	pop    r12
  41d4e6:	pop    r13
  41d4e8:	pop    r14
  41d4ea:	pop    r15
  41d4ec:	ret    
  41d4ed:	nop    DWORD PTR [rax]
  41d4f0:	add    rsi,rsi
  41d4f3:	call   41d270 <fb_scope_table_visit@@Base+0x180>
  41d4f8:	test   eax,eax
  41d4fa:	jne    41d5f1 <fb_scope_table_visit@@Base+0x501>
  41d500:	mov    r12,QWORD PTR [r15+0x18]
  41d504:	jmp    41d410 <fb_scope_table_visit@@Base+0x320>
  41d509:	nop    DWORD PTR [rax+0x0]
  41d510:	mov    rax,QWORD PTR [rsp+0x8]
  41d515:	mov    rcx,QWORD PTR [rsp+0x28]
  41d51a:	mov    QWORD PTR [rcx],rax
  41d51d:	jmp    41d4c7 <fb_scope_table_visit@@Base+0x3d7>
  41d51f:	nop
  41d520:	test   r11,r11
  41d523:	cmove  r11,rcx
  41d527:	mov    rax,QWORD PTR [rsp+0x8]
  41d52c:	inc    QWORD PTR [r15+0x10]
  41d530:	xor    ebx,ebx
  41d532:	mov    QWORD PTR [r11],rax
  41d535:	jmp    41d4c7 <fb_scope_table_visit@@Base+0x3d7>
  41d537:	nop    WORD PTR [rax+rax*1+0x0]
  41d540:	mov    rax,QWORD PTR [rcx]
  41d543:	inc    QWORD PTR [r15+0x10]
  41d547:	test   rax,rax
  41d54a:	je     41d57b <fb_scope_table_visit@@Base+0x48b>
  41d54c:	cmp    rax,0x2
  41d550:	je     41d57b <fb_scope_table_visit@@Base+0x48b>
  41d552:	inc    rbp
  41d555:	jmp    41d566 <fb_scope_table_visit@@Base+0x476>
  41d557:	nop    WORD PTR [rax+rax*1+0x0]
  41d560:	cmp    rax,0x2
  41d564:	je     41d57b <fb_scope_table_visit@@Base+0x48b>
  41d566:	mov    rax,r12
  41d569:	and    rax,rbp
  41d56c:	lea    rcx,[r14+rax*8]
  41d570:	mov    rax,QWORD PTR [rcx]
  41d573:	inc    rbp
  41d576:	test   rax,rax
  41d579:	jne    41d560 <fb_scope_table_visit@@Base+0x470>
  41d57b:	mov    rax,QWORD PTR [rsp+0x8]
  41d580:	xor    ebx,ebx
  41d582:	mov    QWORD PTR [rcx],rax
  41d585:	jmp    41d4c7 <fb_scope_table_visit@@Base+0x3d7>
  41d58a:	mov    r11,rcx
  41d58d:	jmp    41d527 <fb_scope_table_visit@@Base+0x437>
  41d58f:	lea    rcx,[rip+0x29f0a]        # 4474a0 <fb_scope_table_missing@@Base+0x8>
  41d596:	mov    edx,0x73
  41d59b:	lea    rsi,[rip+0x29d5e]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41d5a2:	lea    rdi,[rip+0x29e11]        # 4473ba <_IO_stdin_used@@Base+0x193ba>
  41d5a9:	call   405300 <__assert_fail@plt>
  41d5ae:	lea    rcx,[rip+0x29eeb]        # 4474a0 <fb_scope_table_missing@@Base+0x8>
  41d5b5:	mov    edx,0x72
  41d5ba:	lea    rsi,[rip+0x29d3f]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41d5c1:	lea    rdi,[rip+0x29ddb]        # 4473a3 <_IO_stdin_used@@Base+0x193a3>
  41d5c8:	call   405300 <__assert_fail@plt>
  41d5cd:	call   4052d0 <__stack_chk_fail@plt>
  41d5d2:	lea    rcx,[rip+0x29ec7]        # 4474a0 <fb_scope_table_missing@@Base+0x8>
  41d5d9:	mov    edx,0x74
  41d5de:	lea    rsi,[rip+0x29d1b]        # 447300 <_IO_stdin_used@@Base+0x19300>
  41d5e5:	lea    rdi,[rip+0x29de5]        # 4473d1 <_IO_stdin_used@@Base+0x193d1>
  41d5ec:	call   405300 <__assert_fail@plt>
  41d5f1:	mov    rax,QWORD PTR [rip+0x349f0]        # 451fe8 <stderr@GLIBC_2.2.5>
  41d5f8:	lea    rcx,[rip+0x29d71]        # 447370 <_IO_stdin_used@@Base+0x19370>
  41d5ff:	mov    rdi,QWORD PTR [rax]
  41d602:	lea    rdx,[rip+0x29ddd]        # 4473e6 <_IO_stdin_used@@Base+0x193e6>
  41d609:	mov    esi,0x1
  41d60e:	xor    eax,eax
  41d610:	call   405400 <__fprintf_chk@plt>
  41d615:	mov    edi,0x1
  41d61a:	call   4053e0 <exit@plt>
  41d61f:	nop
  41d620:	push   r15
  41d622:	push   r14
  41d624:	push   r13
  41d626:	push   r12
  41d628:	push   rbp
  41d629:	push   rbx
  41d62a:	sub    rsp,0x18
  41d62e:	mov    rax,QWORD PTR fs:0x28
  41d637:	mov    QWORD PTR [rsp+0x8],rax
  41d63c:	xor    eax,eax
  41d63e:	test   rdi,rdi
  41d641:	je     41d6e0 <fb_scope_table_visit@@Base+0x5f0>
  41d647:	mov    r12,QWORD PTR [rsi]
  41d64a:	mov    r13,rdx
  41d64d:	mov    r15,rcx
  41d650:	mov    r14,rdi
  41d653:	mov    rcx,rsp
  41d656:	mov    edx,0x2f693b52
  41d65b:	mov    rsi,r15
  41d65e:	mov    rdi,r13
  41d661:	call   42c690 <cmetrohash64_1@@Base>
  41d666:	dec    r12
  41d669:	mov    ebp,DWORD PTR [rsp]
  41d66c:	mov    rax,r12
  41d66f:	and    rax,rbp
  41d672:	mov    rbx,QWORD PTR [r14+rax*8]
  41d676:	test   rbx,rbx
  41d679:	je     41d6e0 <fb_scope_table_visit@@Base+0x5f0>
  41d67b:	inc    rbp
  41d67e:	jmp    41d692 <fb_scope_table_visit@@Base+0x5a2>
  41d680:	mov    rax,r12
  41d683:	and    rax,rbp
  41d686:	mov    rbx,QWORD PTR [r14+rax*8]
  41d68a:	inc    rbp
  41d68d:	test   rbx,rbx
  41d690:	je     41d6e0 <fb_scope_table_visit@@Base+0x5f0>
  41d692:	cmp    rbx,0x2
  41d696:	je     41d680 <fb_scope_table_visit@@Base+0x590>
  41d698:	movsxd rax,DWORD PTR [rbx+0x100]
  41d69f:	cmp    r15,rax
  41d6a2:	jne    41d680 <fb_scope_table_visit@@Base+0x590>
  41d6a4:	mov    rsi,QWORD PTR [rbx+0xf8]
  41d6ab:	mov    rdx,r15
  41d6ae:	mov    rdi,r13
  41d6b1:	call   405330 <memcmp@plt>
  41d6b6:	test   eax,eax
  41d6b8:	jne    41d680 <fb_scope_table_visit@@Base+0x590>
  41d6ba:	mov    rdx,QWORD PTR [rsp+0x8]
  41d6bf:	xor    rdx,QWORD PTR fs:0x28
  41d6c8:	mov    rax,rbx
  41d6cb:	jne    41d6e4 <fb_scope_table_visit@@Base+0x5f4>
  41d6cd:	add    rsp,0x18
  41d6d1:	pop    rbx
  41d6d2:	pop    rbp
  41d6d3:	pop    r12
  41d6d5:	pop    r13
  41d6d7:	pop    r14
  41d6d9:	pop    r15
  41d6db:	ret    
  41d6dc:	nop    DWORD PTR [rax+0x0]
  41d6e0:	xor    ebx,ebx
  41d6e2:	jmp    41d6ba <fb_scope_table_visit@@Base+0x5ca>
  41d6e4:	call   4052d0 <__stack_chk_fail@plt>
  41d6e9:	nop    DWORD PTR [rax+0x0]

000000000041d6f0 <fb_schema_table_clear@@Base>:
  41d6f0:	endbr64 
  41d6f4:	jmp    41d140 <fb_scope_table_visit@@Base+0x50>
  41d6f9:	nop    DWORD PTR [rax+0x0]

000000000041d700 <fb_schema_table_destroy@@Base>:
  41d700:	endbr64 
  41d704:	push   r14
  41d706:	push   r13
  41d708:	push   r12
  41d70a:	push   rbp
  41d70b:	mov    rbp,rdi
  41d70e:	push   rbx
  41d70f:	test   rsi,rsi
  41d712:	je     41d74e <fb_schema_table_destroy@@Base+0x4e>
  41d714:	cmp    QWORD PTR [rdi+0x18],0x0
  41d719:	mov    r12,QWORD PTR [rdi]
  41d71c:	je     41d74e <fb_schema_table_destroy@@Base+0x4e>
  41d71e:	mov    r13,rsi
  41d721:	mov    r14,rdx
  41d724:	xor    ebx,ebx
  41d726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d730:	mov    rsi,QWORD PTR [r12+rbx*8]
  41d734:	test   rsi,rsi
  41d737:	je     41d745 <fb_schema_table_destroy@@Base+0x45>
  41d739:	cmp    rsi,0x2
  41d73d:	je     41d745 <fb_schema_table_destroy@@Base+0x45>
  41d73f:	mov    rdi,r14
  41d742:	call   r13
  41d745:	inc    rbx
  41d748:	cmp    rbx,QWORD PTR [rbp+0x18]
  41d74c:	jb     41d730 <fb_schema_table_destroy@@Base+0x30>
  41d74e:	pop    rbx
  41d74f:	mov    rdi,rbp
  41d752:	pop    rbp
  41d753:	pop    r12
  41d755:	pop    r13
  41d757:	pop    r14
  41d759:	jmp    41d140 <fb_scope_table_visit@@Base+0x50>
  41d75e:	xchg   ax,ax

000000000041d760 <fb_schema_table_init@@Base>:
  41d760:	endbr64 
  41d764:	push   rbp
  41d765:	push   rbx
  41d766:	mov    rbx,rdi
  41d769:	sub    rsp,0x8
  41d76d:	cmp    rsi,0x2
  41d771:	jbe    41d7d0 <fb_schema_table_init@@Base+0x70>
  41d773:	mov    eax,0x4
  41d778:	nop    DWORD PTR [rax+rax*1+0x0]
  41d780:	lea    rbp,[rax+rax*1]
  41d784:	imul   rax,rax,0x166
  41d78b:	shr    rax,0x8
  41d78f:	mov    rdx,rax
  41d792:	mov    rax,rbp
  41d795:	cmp    rsi,rdx
  41d798:	ja     41d780 <fb_schema_table_init@@Base+0x20>
  41d79a:	mov    esi,0x8
  41d79f:	mov    rdi,rbp
  41d7a2:	call   405340 <calloc@plt>
  41d7a7:	mov    QWORD PTR [rbx],rax
  41d7aa:	test   rax,rax
  41d7ad:	je     41d7d7 <fb_schema_table_init@@Base+0x77>
  41d7af:	mov    QWORD PTR [rbx+0x8],0x0
  41d7b7:	mov    QWORD PTR [rbx+0x18],rbp
  41d7bb:	mov    QWORD PTR [rbx+0x10],0x0
  41d7c3:	xor    eax,eax
  41d7c5:	add    rsp,0x8
  41d7c9:	pop    rbx
  41d7ca:	pop    rbp
  41d7cb:	ret    
  41d7cc:	nop    DWORD PTR [rax+0x0]
  41d7d0:	mov    ebp,0x4
  41d7d5:	jmp    41d79a <fb_schema_table_init@@Base+0x3a>
  41d7d7:	mov    eax,0xffffffff
  41d7dc:	jmp    41d7c5 <fb_schema_table_init@@Base+0x65>
  41d7de:	xchg   ax,ax

000000000041d7e0 <fb_schema_table_resize@@Base>:
  41d7e0:	endbr64 
  41d7e4:	jmp    41d270 <fb_scope_table_visit@@Base+0x180>
  41d7e9:	nop    DWORD PTR [rax+0x0]

000000000041d7f0 <fb_schema_table_insert@@Base>:
  41d7f0:	endbr64 
  41d7f4:	jmp    41d3a0 <fb_scope_table_visit@@Base+0x2b0>
  41d7f9:	nop    DWORD PTR [rax+0x0]

000000000041d800 <fb_schema_table_insert_item@@Base>:
  41d800:	endbr64 
  41d804:	mov    rcx,rsi
  41d807:	mov    r8d,edx
  41d80a:	movsxd rdx,DWORD PTR [rsi+0x100]
  41d811:	mov    rsi,QWORD PTR [rsi+0xf8]
  41d818:	jmp    41d3a0 <fb_scope_table_visit@@Base+0x2b0>
  41d81d:	nop    DWORD PTR [rax]

000000000041d820 <fb_schema_table_find@@Base>:
  41d820:	endbr64 
  41d824:	mov    rax,rsi
  41d827:	lea    rsi,[rdi+0x18]
  41d82b:	mov    rdi,QWORD PTR [rdi]
  41d82e:	mov    rcx,rdx
  41d831:	mov    rdx,rax
  41d834:	jmp    41d620 <fb_scope_table_visit@@Base+0x530>
  41d839:	nop    DWORD PTR [rax+0x0]

000000000041d840 <fb_schema_table_find_item@@Base>:
  41d840:	endbr64 
  41d844:	movsxd rcx,DWORD PTR [rsi+0x100]
  41d84b:	mov    rdx,QWORD PTR [rsi+0xf8]
  41d852:	lea    rsi,[rdi+0x18]
  41d856:	mov    rdi,QWORD PTR [rdi]
  41d859:	jmp    41d620 <fb_scope_table_visit@@Base+0x530>
  41d85e:	xchg   ax,ax

000000000041d860 <fb_schema_table_remove@@Base>:
  41d860:	endbr64 
  41d864:	jmp    41d160 <fb_scope_table_visit@@Base+0x70>
  41d869:	nop    DWORD PTR [rax+0x0]

000000000041d870 <fb_schema_table_remove_item@@Base>:
  41d870:	endbr64 
  41d874:	movsxd rdx,DWORD PTR [rsi+0x100]
  41d87b:	mov    rsi,QWORD PTR [rsi+0xf8]
  41d882:	jmp    41d160 <fb_scope_table_visit@@Base+0x70>
  41d887:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d890 <fb_schema_table_visit@@Base>:
  41d890:	endbr64 
  41d894:	push   r14
  41d896:	push   r13
  41d898:	push   r12
  41d89a:	push   rbp
  41d89b:	push   rbx
  41d89c:	cmp    QWORD PTR [rdi+0x18],0x0
  41d8a1:	mov    r14,QWORD PTR [rdi]
  41d8a4:	je     41d8d6 <fb_schema_table_visit@@Base+0x46>
  41d8a6:	mov    r13,rdx
  41d8a9:	mov    r12,rsi
  41d8ac:	mov    rbp,rdi
  41d8af:	xor    ebx,ebx
  41d8b1:	nop    DWORD PTR [rax+0x0]
  41d8b8:	mov    rsi,QWORD PTR [r14+rbx*8]
  41d8bc:	test   rsi,rsi
  41d8bf:	je     41d8cd <fb_schema_table_visit@@Base+0x3d>
  41d8c1:	cmp    rsi,0x2
  41d8c5:	je     41d8cd <fb_schema_table_visit@@Base+0x3d>
  41d8c7:	mov    rdi,r13
  41d8ca:	call   r12
  41d8cd:	inc    rbx
  41d8d0:	cmp    rbx,QWORD PTR [rbp+0x18]
  41d8d4:	jb     41d8b8 <fb_schema_table_visit@@Base+0x28>
  41d8d6:	pop    rbx
  41d8d7:	pop    rbp
  41d8d8:	pop    r12
  41d8da:	pop    r13
  41d8dc:	pop    r14
  41d8de:	ret    
  41d8df:	nop

000000000041d8e0 <__flatcc_fb_copy_path_n@@Base>:
  41d8e0:	endbr64 
  41d8e4:	push   rbp
  41d8e5:	mov    rdx,rsi
  41d8e8:	mov    rbp,rdi
  41d8eb:	push   rbx
  41d8ec:	mov    rbx,rsi
  41d8ef:	xor    esi,esi
  41d8f1:	sub    rsp,0x8
  41d8f5:	call   405320 <memchr@plt>
  41d8fa:	mov    rdx,rax
  41d8fd:	sub    rdx,rbp
  41d900:	test   rax,rax
  41d903:	cmovne rbx,rdx
  41d907:	lea    rdi,[rbx+0x1]
  41d90b:	call   405380 <malloc@plt>
  41d910:	mov    rcx,rax
  41d913:	test   rax,rax
  41d916:	je     41d92d <__flatcc_fb_copy_path_n@@Base+0x4d>
  41d918:	mov    rdx,rbx
  41d91b:	mov    rsi,rbp
  41d91e:	mov    rdi,rax
  41d921:	call   405370 <memcpy@plt>
  41d926:	mov    BYTE PTR [rax+rbx*1],0x0
  41d92a:	mov    rcx,rax
  41d92d:	add    rsp,0x8
  41d931:	pop    rbx
  41d932:	mov    rax,rcx
  41d935:	pop    rbp
  41d936:	ret    
  41d937:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d940 <__flatcc_fb_copy_path@@Base>:
  41d940:	endbr64 
  41d944:	push   rbp
  41d945:	mov    rbp,rdi
  41d948:	push   rbx
  41d949:	sub    rsp,0x8
  41d94d:	call   4052c0 <strlen@plt>
  41d952:	lea    rdi,[rax+0x1]
  41d956:	mov    rbx,rax
  41d959:	call   405380 <malloc@plt>
  41d95e:	mov    rcx,rax
  41d961:	test   rax,rax
  41d964:	je     41d97b <__flatcc_fb_copy_path@@Base+0x3b>
  41d966:	mov    rdx,rbx
  41d969:	mov    rsi,rbp
  41d96c:	mov    rdi,rax
  41d96f:	call   405370 <memcpy@plt>
  41d974:	mov    BYTE PTR [rax+rbx*1],0x0
  41d978:	mov    rcx,rax
  41d97b:	add    rsp,0x8
  41d97f:	pop    rbx
  41d980:	mov    rax,rcx
  41d983:	pop    rbp
  41d984:	ret    
  41d985:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041d990 <__flatcc_fb_chomp@@Base>:
  41d990:	endbr64 
  41d994:	push   r13
  41d996:	push   r12
  41d998:	push   rbp
  41d999:	push   rbx
  41d99a:	mov    rbx,rsi
  41d99d:	sub    rsp,0x8
  41d9a1:	test   rdx,rdx
  41d9a4:	je     41d9d4 <__flatcc_fb_chomp@@Base+0x44>
  41d9a6:	mov    r12,rdi
  41d9a9:	mov    rdi,rdx
  41d9ac:	mov    rbp,rdx
  41d9af:	call   4052c0 <strlen@plt>
  41d9b4:	cmp    rax,rbx
  41d9b7:	jae    41d9d4 <__flatcc_fb_chomp@@Base+0x44>
  41d9b9:	mov    r13,rbx
  41d9bc:	sub    r13,rax
  41d9bf:	lea    rdi,[r12+r13*1]
  41d9c3:	mov    rdx,rax
  41d9c6:	mov    rsi,rbp
  41d9c9:	call   405270 <strncmp@plt>
  41d9ce:	test   eax,eax
  41d9d0:	cmove  rbx,r13
  41d9d4:	add    rsp,0x8
  41d9d8:	mov    rax,rbx
  41d9db:	pop    rbx
  41d9dc:	pop    rbp
  41d9dd:	pop    r12
  41d9df:	pop    r13
  41d9e1:	ret    
  41d9e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41d9ed:	nop    DWORD PTR [rax]

000000000041d9f0 <__flatcc_fb_create_join_path_n@@Base>:
  41d9f0:	endbr64 
  41d9f4:	push   r15
  41d9f6:	mov    r15d,r9d
  41d9f9:	push   r14
  41d9fb:	mov    r14,rdi
  41d9fe:	push   r13
  41da00:	mov    r13,r8
  41da03:	push   r12
  41da05:	mov    r12,rcx
  41da08:	push   rbp
  41da09:	xor    ebp,ebp
  41da0b:	push   rbx
  41da0c:	mov    rbx,rsi
  41da0f:	sub    rsp,0x18
  41da13:	mov    QWORD PTR [rsp+0x8],rdx
  41da18:	test   r8,r8
  41da1b:	je     41da28 <__flatcc_fb_create_join_path_n@@Base+0x38>
  41da1d:	mov    rdi,r8
  41da20:	call   4052c0 <strlen@plt>
  41da25:	mov    rbp,rax
  41da28:	test   r14,r14
  41da2b:	je     41daa0 <__flatcc_fb_create_join_path_n@@Base+0xb0>
  41da2d:	test   r12,r12
  41da30:	je     41da4e <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41da32:	mov    rcx,QWORD PTR [rsp+0x8]
  41da37:	movzx  eax,BYTE PTR [rcx]
  41da3a:	cmp    al,0x2f
  41da3c:	je     41daa0 <__flatcc_fb_create_join_path_n@@Base+0xb0>
  41da3e:	cmp    al,0x5c
  41da40:	je     41daa0 <__flatcc_fb_create_join_path_n@@Base+0xb0>
  41da42:	cmp    r12,0x1
  41da46:	jbe    41da4e <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41da48:	cmp    BYTE PTR [rcx+0x1],0x3a
  41da4c:	je     41daa0 <__flatcc_fb_create_join_path_n@@Base+0xb0>
  41da4e:	test   r15d,r15d
  41da51:	je     41daa2 <__flatcc_fb_create_join_path_n@@Base+0xb2>
  41da53:	test   rbx,rbx
  41da56:	je     41daa2 <__flatcc_fb_create_join_path_n@@Base+0xb2>
  41da58:	movzx  eax,BYTE PTR [r14+rbx*1-0x1]
  41da5e:	cmp    al,0x2f
  41da60:	je     41daa2 <__flatcc_fb_create_join_path_n@@Base+0xb2>
  41da62:	cmp    al,0x5c
  41da64:	je     41daa2 <__flatcc_fb_create_join_path_n@@Base+0xb2>
  41da66:	movsxd r9,r15d
  41da69:	lea    rdi,[rbx+r9*1+0x1]
  41da6e:	add    rdi,r12
  41da71:	add    rdi,rbp
  41da74:	call   405380 <malloc@plt>
  41da79:	mov    r15,rax
  41da7c:	test   rax,rax
  41da7f:	je     41dab7 <__flatcc_fb_create_join_path_n@@Base+0xc7>
  41da81:	mov    rdx,rbx
  41da84:	mov    rsi,r14
  41da87:	mov    rdi,r15
  41da8a:	call   405370 <memcpy@plt>
  41da8f:	mov    BYTE PTR [r15+rbx*1],0x2f
  41da94:	inc    rbx
  41da97:	jmp    41dade <__flatcc_fb_create_join_path_n@@Base+0xee>
  41da99:	nop    DWORD PTR [rax+0x0]
  41daa0:	xor    ebx,ebx
  41daa2:	lea    rdi,[rbp+r12*1+0x1]
  41daa7:	add    rdi,rbx
  41daaa:	call   405380 <malloc@plt>
  41daaf:	mov    r15,rax
  41dab2:	test   rax,rax
  41dab5:	jne    41dad0 <__flatcc_fb_create_join_path_n@@Base+0xe0>
  41dab7:	xor    r15d,r15d
  41daba:	add    rsp,0x18
  41dabe:	pop    rbx
  41dabf:	pop    rbp
  41dac0:	pop    r12
  41dac2:	pop    r13
  41dac4:	pop    r14
  41dac6:	mov    rax,r15
  41dac9:	pop    r15
  41dacb:	ret    
  41dacc:	nop    DWORD PTR [rax+0x0]
  41dad0:	mov    rdx,rbx
  41dad3:	mov    rsi,r14
  41dad6:	mov    rdi,r15
  41dad9:	call   405370 <memcpy@plt>
  41dade:	mov    rsi,QWORD PTR [rsp+0x8]
  41dae3:	lea    rdi,[r15+rbx*1]
  41dae7:	mov    rdx,r12
  41daea:	add    rbx,r12
  41daed:	call   405370 <memcpy@plt>
  41daf2:	mov    rdx,rbp
  41daf5:	lea    rdi,[r15+rbx*1]
  41daf9:	mov    rsi,r13
  41dafc:	add    rbp,r15
  41daff:	call   405370 <memcpy@plt>
  41db04:	mov    BYTE PTR [rbp+rbx*1+0x0],0x0
  41db09:	jmp    41daba <__flatcc_fb_create_join_path_n@@Base+0xca>
  41db0b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041db10 <__flatcc_fb_create_join_path@@Base>:
  41db10:	endbr64 
  41db14:	push   r14
  41db16:	mov    r14d,ecx
  41db19:	push   r13
  41db1b:	mov    r13,rdx
  41db1e:	push   r12
  41db20:	xor    r12d,r12d
  41db23:	push   rbp
  41db24:	mov    rbp,rsi
  41db27:	push   rbx
  41db28:	mov    rbx,rdi
  41db2b:	test   rsi,rsi
  41db2e:	je     41db3b <__flatcc_fb_create_join_path@@Base+0x2b>
  41db30:	mov    rdi,rsi
  41db33:	call   4052c0 <strlen@plt>
  41db38:	mov    r12,rax
  41db3b:	xor    esi,esi
  41db3d:	test   rbx,rbx
  41db40:	je     41db4d <__flatcc_fb_create_join_path@@Base+0x3d>
  41db42:	mov    rdi,rbx
  41db45:	call   4052c0 <strlen@plt>
  41db4a:	mov    rsi,rax
  41db4d:	mov    rdi,rbx
  41db50:	pop    rbx
  41db51:	mov    rdx,rbp
  41db54:	pop    rbp
  41db55:	mov    rcx,r12
  41db58:	pop    r12
  41db5a:	mov    r8,r13
  41db5d:	pop    r13
  41db5f:	mov    r9d,r14d
  41db62:	pop    r14
  41db64:	jmp    41d9f0 <__flatcc_fb_create_join_path_n@@Base>
  41db69:	nop    DWORD PTR [rax+0x0]

000000000041db70 <__flatcc_fb_create_path_ext_n@@Base>:
  41db70:	endbr64 
  41db74:	mov    rcx,rsi
  41db77:	mov    r8,rdx
  41db7a:	xor    r9d,r9d
  41db7d:	mov    rdx,rdi
  41db80:	xor    esi,esi
  41db82:	xor    edi,edi
  41db84:	jmp    41d9f0 <__flatcc_fb_create_join_path_n@@Base>
  41db89:	nop    DWORD PTR [rax+0x0]

000000000041db90 <__flatcc_fb_create_path_ext@@Base>:
  41db90:	endbr64 
  41db94:	mov    rdx,rsi
  41db97:	xor    ecx,ecx
  41db99:	mov    rsi,rdi
  41db9c:	xor    edi,edi
  41db9e:	jmp    41db10 <__flatcc_fb_create_join_path@@Base>
  41dba3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41dbae:	xchg   ax,ax

000000000041dbb0 <__flatcc_fb_create_make_path_n@@Base>:
  41dbb0:	endbr64 
  41dbb4:	push   r12
  41dbb6:	push   rbp
  41dbb7:	push   rbx
  41dbb8:	cmp    rsi,0x1
  41dbbc:	je     41dcb0 <__flatcc_fb_create_make_path_n@@Base+0x100>
  41dbc2:	jbe    41dcbd <__flatcc_fb_create_make_path_n@@Base+0x10d>
  41dbc8:	movzx  ebp,BYTE PTR [rdi]
  41dbcb:	lea    rbx,[rdi+0x1]
  41dbcf:	lea    r12,[rdi+rsi*1]
  41dbd3:	mov    rax,rbx
  41dbd6:	mov    edx,ebp
  41dbd8:	nop    DWORD PTR [rax+rax*1+0x0]
  41dbe0:	movzx  ecx,BYTE PTR [rax]
  41dbe3:	cmp    dl,0x5c
  41dbe6:	jne    41dbf4 <__flatcc_fb_create_make_path_n@@Base+0x44>
  41dbe8:	xor    edi,edi
  41dbea:	cmp    cl,0x20
  41dbed:	sete   dil
  41dbf1:	add    rsi,rdi
  41dbf4:	cmp    dl,0x20
  41dbf7:	sete   dl
  41dbfa:	movzx  edx,dl
  41dbfd:	inc    rax
  41dc00:	add    rsi,rdx
  41dc03:	mov    edx,ecx
  41dc05:	cmp    r12,rax
  41dc08:	jne    41dbe0 <__flatcc_fb_create_make_path_n@@Base+0x30>
  41dc0a:	xor    eax,eax
  41dc0c:	cmp    cl,0x20
  41dc0f:	sete   al
  41dc12:	lea    rdi,[rsi+rax*1+0x1]
  41dc17:	call   405380 <malloc@plt>
  41dc1c:	test   rax,rax
  41dc1f:	je     41dc8e <__flatcc_fb_create_make_path_n@@Base+0xde>
  41dc21:	xor    edx,edx
  41dc23:	jmp    41dc52 <__flatcc_fb_create_make_path_n@@Base+0xa2>
  41dc25:	nop    DWORD PTR [rax]
  41dc28:	cmp    bpl,0x20
  41dc2c:	jne    41dc42 <__flatcc_fb_create_make_path_n@@Base+0x92>
  41dc2e:	lea    rdx,[r9+0x2]
  41dc32:	mov    BYTE PTR [rsi],0x5c
  41dc35:	mov    r9,rcx
  41dc38:	mov    rsi,r8
  41dc3b:	mov    rcx,rdx
  41dc3e:	lea    r8,[rax+rdx*1]
  41dc42:	inc    rbx
  41dc45:	mov    BYTE PTR [rsi],bpl
  41dc48:	mov    rdx,rcx
  41dc4b:	mov    ebp,edi
  41dc4d:	cmp    r12,rbx
  41dc50:	je     41dc80 <__flatcc_fb_create_make_path_n@@Base+0xd0>
  41dc52:	lea    rcx,[rdx+0x1]
  41dc56:	movzx  edi,BYTE PTR [rbx]
  41dc59:	lea    rsi,[rax+rdx*1]
  41dc5d:	lea    r8,[rax+rcx*1]
  41dc61:	mov    r9,rdx
  41dc64:	cmp    bpl,0x5c
  41dc68:	jne    41dc28 <__flatcc_fb_create_make_path_n@@Base+0x78>
  41dc6a:	cmp    dil,0x20
  41dc6e:	je     41dc2e <__flatcc_fb_create_make_path_n@@Base+0x7e>
  41dc70:	inc    rbx
  41dc73:	mov    BYTE PTR [rsi],bpl
  41dc76:	mov    rdx,rcx
  41dc79:	mov    ebp,edi
  41dc7b:	cmp    r12,rbx
  41dc7e:	jne    41dc52 <__flatcc_fb_create_make_path_n@@Base+0xa2>
  41dc80:	cmp    dil,0x20
  41dc84:	je     41dc98 <__flatcc_fb_create_make_path_n@@Base+0xe8>
  41dc86:	mov    BYTE PTR [r8],dil
  41dc89:	mov    BYTE PTR [rax+rcx*1+0x1],0x0
  41dc8e:	pop    rbx
  41dc8f:	pop    rbp
  41dc90:	pop    r12
  41dc92:	ret    
  41dc93:	nop    DWORD PTR [rax+rax*1+0x0]
  41dc98:	lea    rcx,[r9+0x2]
  41dc9c:	mov    BYTE PTR [r8],0x5c
  41dca0:	lea    r8,[rax+rcx*1]
  41dca4:	mov    BYTE PTR [r8],dil
  41dca7:	mov    BYTE PTR [rax+rcx*1+0x1],0x0
  41dcac:	jmp    41dc8e <__flatcc_fb_create_make_path_n@@Base+0xde>
  41dcae:	xchg   ax,ax
  41dcb0:	movzx  ebx,BYTE PTR [rdi]
  41dcb3:	cmp    bl,0x20
  41dcb6:	je     41dcd0 <__flatcc_fb_create_make_path_n@@Base+0x120>
  41dcb8:	cmp    bl,0x5c
  41dcbb:	je     41dcd0 <__flatcc_fb_create_make_path_n@@Base+0x120>
  41dcbd:	pop    rbx
  41dcbe:	pop    rbp
  41dcbf:	pop    r12
  41dcc1:	jmp    41d8e0 <__flatcc_fb_copy_path_n@@Base>
  41dcc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dcd0:	mov    edi,0x3
  41dcd5:	call   405380 <malloc@plt>
  41dcda:	test   rax,rax
  41dcdd:	je     41dc8e <__flatcc_fb_create_make_path_n@@Base+0xde>
  41dcdf:	mov    BYTE PTR [rax],0x5c
  41dce2:	mov    BYTE PTR [rax+0x1],bl
  41dce5:	mov    BYTE PTR [rax+0x2],0x0
  41dce9:	jmp    41dc8e <__flatcc_fb_create_make_path_n@@Base+0xde>
  41dceb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041dcf0 <__flatcc_fb_create_make_path@@Base>:
  41dcf0:	endbr64 
  41dcf4:	push   rbx
  41dcf5:	mov    rbx,rdi
  41dcf8:	call   4052c0 <strlen@plt>
  41dcfd:	mov    rsi,rax
  41dd00:	mov    rdi,rbx
  41dd03:	pop    rbx
  41dd04:	jmp    41dbb0 <__flatcc_fb_create_make_path_n@@Base>
  41dd09:	nop    DWORD PTR [rax+0x0]

000000000041dd10 <__flatcc_fb_find_basename@@Base>:
  41dd10:	endbr64 
  41dd14:	add    rsi,rdi
  41dd17:	cmp    rdi,rsi
  41dd1a:	je     41dd4a <__flatcc_fb_find_basename@@Base+0x3a>
  41dd1c:	movzx  edx,BYTE PTR [rsi-0x1]
  41dd20:	lea    rax,[rsi-0x1]
  41dd24:	cmp    dl,0x5c
  41dd27:	je     41dd51 <__flatcc_fb_find_basename@@Base+0x41>
  41dd29:	cmp    dl,0x2f
  41dd2c:	jne    41dd45 <__flatcc_fb_find_basename@@Base+0x35>
  41dd2e:	jmp    41dd51 <__flatcc_fb_find_basename@@Base+0x41>
  41dd30:	movzx  edx,BYTE PTR [rax-0x1]
  41dd34:	lea    rcx,[rax-0x1]
  41dd38:	cmp    dl,0x2f
  41dd3b:	je     41dd4d <__flatcc_fb_find_basename@@Base+0x3d>
  41dd3d:	cmp    dl,0x5c
  41dd40:	je     41dd4d <__flatcc_fb_find_basename@@Base+0x3d>
  41dd42:	mov    rax,rcx
  41dd45:	cmp    rdi,rax
  41dd48:	jne    41dd30 <__flatcc_fb_find_basename@@Base+0x20>
  41dd4a:	mov    rax,rdi
  41dd4d:	sub    rax,rdi
  41dd50:	ret    
  41dd51:	mov    rax,rsi
  41dd54:	jmp    41dd4d <__flatcc_fb_find_basename@@Base+0x3d>
  41dd56:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041dd60 <__flatcc_fb_create_basename@@Base>:
  41dd60:	endbr64 
  41dd64:	push   r12
  41dd66:	mov    r12,rdx
  41dd69:	push   rbp
  41dd6a:	mov    rbp,rdi
  41dd6d:	push   rbx
  41dd6e:	mov    rbx,rsi
  41dd71:	call   41dd10 <__flatcc_fb_find_basename@@Base>
  41dd76:	add    rbp,rax
  41dd79:	mov    rsi,rbx
  41dd7c:	sub    rsi,rax
  41dd7f:	mov    rdx,r12
  41dd82:	mov    rdi,rbp
  41dd85:	call   41d990 <__flatcc_fb_chomp@@Base>
  41dd8a:	lea    rdi,[rax+0x1]
  41dd8e:	mov    rbx,rax
  41dd91:	call   405380 <malloc@plt>
  41dd96:	mov    rcx,rax
  41dd99:	test   rax,rax
  41dd9c:	je     41ddb3 <__flatcc_fb_create_basename@@Base+0x53>
  41dd9e:	mov    rdx,rbx
  41dda1:	mov    rsi,rbp
  41dda4:	mov    rdi,rax
  41dda7:	call   405370 <memcpy@plt>
  41ddac:	mov    BYTE PTR [rax+rbx*1],0x0
  41ddb0:	mov    rcx,rax
  41ddb3:	pop    rbx
  41ddb4:	pop    rbp
  41ddb5:	mov    rax,rcx
  41ddb8:	pop    r12
  41ddba:	ret    
  41ddbb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ddc0 <__flatcc_fb_read_file@@Base>:
  41ddc0:	endbr64 
  41ddc4:	push   r14
  41ddc6:	mov    r14,rdx
  41ddc9:	push   r13
  41ddcb:	push   r12
  41ddcd:	push   rbp
  41ddce:	push   rbx
  41ddcf:	mov    rbx,rsi
  41ddd2:	lea    rsi,[rip+0x296ef]        # 4474c8 <fb_schema_table_missing@@Base+0x8>
  41ddd9:	sub    rsp,0x10
  41dddd:	mov    rax,QWORD PTR fs:0x28
  41dde6:	mov    QWORD PTR [rsp+0x8],rax
  41ddeb:	xor    eax,eax
  41dded:	test   rdx,rdx
  41ddf0:	mov    rax,rsp
  41ddf3:	cmove  r14,rax
  41ddf7:	call   4053d0 <fopen@plt>
  41ddfc:	test   rax,rax
  41ddff:	je     41ded0 <__flatcc_fb_read_file@@Base+0x110>
  41de05:	mov    rbp,rax
  41de08:	mov    edx,0x2
  41de0d:	xor    esi,esi
  41de0f:	mov    rdi,rax
  41de12:	call   405390 <fseek@plt>
  41de17:	mov    rdi,rbp
  41de1a:	call   405360 <ftell@plt>
  41de1f:	mov    r12,rax
  41de22:	mov    QWORD PTR [r14],rax
  41de25:	mov    rdi,rbp
  41de28:	test   rbx,rbx
  41de2b:	je     41de32 <__flatcc_fb_read_file@@Base+0x72>
  41de2d:	cmp    rax,rbx
  41de30:	ja     41deb0 <__flatcc_fb_read_file@@Base+0xf0>
  41de32:	call   4052f0 <rewind@plt>
  41de37:	test   r12,r12
  41de3a:	mov    edi,0x1
  41de3f:	cmovne rdi,r12
  41de43:	call   405380 <malloc@plt>
  41de48:	mov    r13,rax
  41de4b:	test   rax,rax
  41de4e:	je     41ded5 <__flatcc_fb_read_file@@Base+0x115>
  41de54:	xor    ebx,ebx
  41de56:	jmp    41de63 <__flatcc_fb_read_file@@Base+0xa3>
  41de58:	nop    DWORD PTR [rax+rax*1+0x0]
  41de60:	add    rbx,rax
  41de63:	mov    rdx,r12
  41de66:	sub    rdx,rbx
  41de69:	lea    rdi,[r13+rbx*1+0x0]
  41de6e:	mov    rcx,rbp
  41de71:	mov    esi,0x1
  41de76:	call   405290 <fread@plt>
  41de7b:	test   rax,rax
  41de7e:	jne    41de60 <__flatcc_fb_read_file@@Base+0xa0>
  41de80:	mov    rdi,rbp
  41de83:	cmp    rbx,r12
  41de86:	jne    41dec0 <__flatcc_fb_read_file@@Base+0x100>
  41de88:	call   4052b0 <fclose@plt>
  41de8d:	mov    QWORD PTR [r14],rbx
  41de90:	mov    rcx,QWORD PTR [rsp+0x8]
  41de95:	xor    rcx,QWORD PTR fs:0x28
  41de9e:	mov    rax,r13
  41dea1:	jne    41dedf <__flatcc_fb_read_file@@Base+0x11f>
  41dea3:	add    rsp,0x10
  41dea7:	pop    rbx
  41dea8:	pop    rbp
  41dea9:	pop    r12
  41deab:	pop    r13
  41dead:	pop    r14
  41deaf:	ret    
  41deb0:	call   4052b0 <fclose@plt>
  41deb5:	mov    QWORD PTR [r14],r12
  41deb8:	xor    r13d,r13d
  41debb:	jmp    41de90 <__flatcc_fb_read_file@@Base+0xd0>
  41debd:	nop    DWORD PTR [rax]
  41dec0:	call   4052b0 <fclose@plt>
  41dec5:	mov    rdi,r13
  41dec8:	call   405240 <free@plt>
  41decd:	jmp    41deb5 <__flatcc_fb_read_file@@Base+0xf5>
  41decf:	nop
  41ded0:	xor    r12d,r12d
  41ded3:	jmp    41deb5 <__flatcc_fb_read_file@@Base+0xf5>
  41ded5:	mov    rdi,rbp
  41ded8:	call   4052b0 <fclose@plt>
  41dedd:	jmp    41deb5 <__flatcc_fb_read_file@@Base+0xf5>
  41dedf:	call   4052d0 <__stack_chk_fail@plt>
  41dee4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41deee:	xchg   ax,ax

000000000041def0 <__flatcc_fb_default_error_out@@Base>:
  41def0:	endbr64 
  41def4:	mov    rax,QWORD PTR [rip+0x340ed]        # 451fe8 <stderr@GLIBC_2.2.5>
  41defb:	mov    rdi,rsi
  41defe:	mov    rcx,QWORD PTR [rax]
  41df01:	movsxd rdx,edx
  41df04:	mov    esi,0x1
  41df09:	jmp    4053f0 <fwrite@plt>
  41df0e:	xchg   ax,ax
  41df10:	endbr64 
  41df14:	lea    rdi,[rsi+0x8]
  41df18:	jmp    41bee0 <fb_symbol_table_clear@@Base>
  41df1d:	nop    DWORD PTR [rax]
  41df20:	push   rax
  41df21:	pop    rax
  41df22:	lea    rdx,[rip+0x118b7]        # 42f7e0 <_IO_stdin_used@@Base+0x17e0>
  41df29:	mov    esi,0x1
  41df2e:	sub    rsp,0x8
  41df32:	mov    rax,QWORD PTR [rip+0x340af]        # 451fe8 <stderr@GLIBC_2.2.5>
  41df39:	mov    rdi,QWORD PTR [rax]
  41df3c:	xor    eax,eax
  41df3e:	call   405400 <__fprintf_chk@plt>
  41df43:	mov    edi,0x1
  41df48:	call   4053e0 <exit@plt>
  41df4d:	nop    DWORD PTR [rax]
  41df50:	push   r12
  41df52:	mov    r12,rsi
  41df55:	push   rbp
  41df56:	push   rbx
  41df57:	mov    rbx,rdi
  41df5a:	sub    rsp,0x10
  41df5e:	movsxd rax,DWORD PTR [rbx+0x38]
  41df62:	mov    rdi,QWORD PTR [rdi+0x28]
  41df66:	mov    r8,rax
  41df69:	lea    rax,[rax+rax*4]
  41df6d:	lea    rsi,[rdi+rax*8]
  41df71:	mov    rax,QWORD PTR [rbx+0x48]
  41df75:	mov    QWORD PTR [rbx+0x30],rsi
  41df79:	cmp    rsi,rax
  41df7c:	je     41dfb0 <__flatcc_fb_default_error_out@@Base+0xc0>
  41df7e:	sub    rcx,rdx
  41df81:	mov    QWORD PTR [rax],rdx
  41df84:	mov    QWORD PTR [rax+0x8],rcx
  41df88:	sub    rdx,QWORD PTR [rbx+0x70]
  41df8c:	mov    rcx,QWORD PTR [rbx+0x78]
  41df90:	inc    rdx
  41df93:	mov    QWORD PTR [rax+0x20],r12
  41df97:	mov    QWORD PTR [rax+0x10],rcx
  41df9b:	mov    QWORD PTR [rax+0x18],rdx
  41df9f:	add    rax,0x28
  41dfa3:	mov    QWORD PTR [rbx+0x48],rax
  41dfa7:	add    rsp,0x10
  41dfab:	pop    rbx
  41dfac:	pop    rbp
  41dfad:	pop    r12
  41dfaf:	ret    
  41dfb0:	sub    rsi,rdi
  41dfb3:	mov    rbp,rsi
  41dfb6:	test   r8d,r8d
  41dfb9:	jne    41e008 <__flatcc_fb_default_error_out@@Base+0x118>
  41dfbb:	mov    esi,0xa000
  41dfc0:	mov    r8d,0x400
  41dfc6:	mov    DWORD PTR [rbx+0x38],r8d
  41dfca:	mov    QWORD PTR [rsp+0x8],rcx
  41dfcf:	mov    QWORD PTR [rsp],rdx
  41dfd3:	call   4053b0 <realloc@plt>
  41dfd8:	test   rax,rax
  41dfdb:	mov    QWORD PTR [rbx+0x28],rax
  41dfdf:	mov    rdx,QWORD PTR [rsp]
  41dfe3:	mov    rcx,QWORD PTR [rsp+0x8]
  41dfe8:	je     41e018 <__flatcc_fb_default_error_out@@Base+0x128>
  41dfea:	movsxd rsi,DWORD PTR [rbx+0x38]
  41dfee:	lea    rsi,[rsi+rsi*4]
  41dff2:	lea    rsi,[rax+rsi*8]
  41dff6:	mov    QWORD PTR [rbx+0x30],rsi
  41dffa:	add    rax,rbp
  41dffd:	jmp    41df7e <__flatcc_fb_default_error_out@@Base+0x8e>
  41e002:	nop    WORD PTR [rax+rax*1+0x0]
  41e008:	add    r8d,r8d
  41e00b:	movsxd rax,r8d
  41e00e:	lea    rsi,[rax+rax*4]
  41e012:	shl    rsi,0x3
  41e016:	jmp    41dfc6 <__flatcc_fb_default_error_out@@Base+0xd6>
  41e018:	call   41df20 <__flatcc_fb_default_error_out@@Base+0x30>
  41e01d:	nop    DWORD PTR [rax]
  41e020:	push   r12
  41e022:	push   rbp
  41e023:	push   rbx
  41e024:	mov    rbx,rdi
  41e027:	mov    rcx,QWORD PTR [rdi+0x48]
  41e02b:	mov    r12,QWORD PTR [rdi+0x30]
  41e02f:	lea    rbp,[rcx+0x28]
  41e033:	mov    rdx,rcx
  41e036:	mov    QWORD PTR [rdi+0x48],rbp
  41e03a:	cmp    rbp,r12
  41e03d:	je     41e0e0 <__flatcc_fb_default_error_out@@Base+0x1f0>
  41e043:	cmp    QWORD PTR [rcx+0x48],0xfffffffffffffc3c
  41e04b:	jne    41e0d8 <__flatcc_fb_default_error_out@@Base+0x1e8>
  41e051:	mov    rcx,rbp
  41e054:	mov    rax,QWORD PTR [rdi+0x60]
  41e058:	jmp    41e090 <__flatcc_fb_default_error_out@@Base+0x1a0>
  41e05a:	nop    WORD PTR [rax+rax*1+0x0]
  41e060:	mov    rsi,QWORD PTR [rbx+0x40]
  41e064:	mov    QWORD PTR [rbx+0x60],rax
  41e068:	mov    QWORD PTR [rdx+0x8],rbp
  41e06c:	lea    rbp,[rcx+0x28]
  41e070:	mov    QWORD PTR [rdx],rsi
  41e073:	mov    QWORD PTR [rbx+0x40],rdx
  41e077:	mov    QWORD PTR [rbx+0x48],rbp
  41e07b:	mov    rdx,rcx
  41e07e:	mov    rcx,rbp
  41e081:	cmp    rbp,r12
  41e084:	je     41e0e0 <__flatcc_fb_default_error_out@@Base+0x1f0>
  41e086:	cmp    QWORD PTR [rdx+0x48],0xfffffffffffffc3c
  41e08e:	jne    41e0d8 <__flatcc_fb_default_error_out@@Base+0x1e8>
  41e090:	mov    rdx,rax
  41e093:	add    rax,0x20
  41e097:	cmp    rax,QWORD PTR [rbx+0x50]
  41e09b:	jbe    41e060 <__flatcc_fb_default_error_out@@Base+0x170>
  41e09d:	mov    esi,0x1
  41e0a2:	mov    edi,0x10000
  41e0a7:	call   405340 <calloc@plt>
  41e0ac:	test   rax,rax
  41e0af:	je     41e103 <__flatcc_fb_default_error_out@@Base+0x213>
  41e0b1:	mov    rdx,QWORD PTR [rbx+0x58]
  41e0b5:	lea    rcx,[rax+0x10000]
  41e0bc:	mov    QWORD PTR [rax],rdx
  41e0bf:	mov    QWORD PTR [rbx+0x58],rax
  41e0c3:	lea    rdx,[rax+0x10]
  41e0c7:	mov    QWORD PTR [rbx+0x50],rcx
  41e0cb:	add    rax,0x30
  41e0cf:	mov    rcx,QWORD PTR [rbx+0x48]
  41e0d3:	jmp    41e060 <__flatcc_fb_default_error_out@@Base+0x170>
  41e0d5:	nop    DWORD PTR [rax]
  41e0d8:	pop    rbx
  41e0d9:	mov    rax,rbp
  41e0dc:	pop    rbp
  41e0dd:	pop    r12
  41e0df:	ret    
  41e0e0:	mov    QWORD PTR [rbx+0x48],rdx
  41e0e4:	lea    rcx,[rip+0x2a259]        # 448344 <fb_schema_table_missing@@Base+0xe84>
  41e0eb:	mov    edx,0x155
  41e0f0:	lea    rsi,[rip+0x293d9]        # 4474d0 <fb_schema_table_missing@@Base+0x10>
  41e0f7:	lea    rdi,[rip+0x1a25b]        # 438359 <_IO_stdin_used@@Base+0xa359>
  41e0fe:	call   405300 <__assert_fail@plt>
  41e103:	mov    rax,QWORD PTR [rip+0x33ede]        # 451fe8 <stderr@GLIBC_2.2.5>
  41e10a:	lea    rdx,[rip+0x116cf]        # 42f7e0 <_IO_stdin_used@@Base+0x17e0>
  41e111:	mov    rdi,QWORD PTR [rax]
  41e114:	mov    esi,0x1
  41e119:	xor    eax,eax
  41e11b:	call   405400 <__fprintf_chk@plt>
  41e120:	mov    edi,0x1
  41e125:	call   4053e0 <exit@plt>
  41e12a:	nop    WORD PTR [rax+rax*1+0x0]
  41e130:	mov    rax,QWORD PTR [rdi+0x48]
  41e134:	mov    rax,QWORD PTR [rax+0x20]
  41e138:	test   rax,rax
  41e13b:	je     41e18a <__flatcc_fb_default_error_out@@Base+0x29a>
  41e13d:	push   rbx
  41e13e:	mov    rbx,rdi
  41e141:	jmp    41e163 <__flatcc_fb_default_error_out@@Base+0x273>
  41e143:	nop    DWORD PTR [rax+rax*1+0x0]
  41e148:	cmp    rax,0x7d
  41e14c:	je     41e180 <__flatcc_fb_default_error_out@@Base+0x290>
  41e14e:	mov    rdi,rbx
  41e151:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e156:	mov    rax,QWORD PTR [rbx+0x48]
  41e15a:	mov    rax,QWORD PTR [rax+0x20]
  41e15e:	test   rax,rax
  41e161:	je     41e179 <__flatcc_fb_default_error_out@@Base+0x289>
  41e163:	cmp    rax,0x3b
  41e167:	jne    41e148 <__flatcc_fb_default_error_out@@Base+0x258>
  41e169:	mov    rdi,rbx
  41e16c:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e171:	mov    QWORD PTR [rbx+0x40],0x0
  41e179:	pop    rbx
  41e17a:	ret    
  41e17b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e180:	mov    QWORD PTR [rbx+0x40],0x0
  41e188:	pop    rbx
  41e189:	ret    
  41e18a:	ret    
  41e18b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e190:	mov    rax,QWORD PTR [rdi+0x48]
  41e194:	mov    rax,QWORD PTR [rax+0x20]
  41e198:	test   rax,rax
  41e19b:	je     41e1ef <__flatcc_fb_default_error_out@@Base+0x2ff>
  41e19d:	push   rbp
  41e19e:	mov    rbp,rsi
  41e1a1:	push   rbx
  41e1a2:	mov    rbx,rdi
  41e1a5:	sub    rsp,0x8
  41e1a9:	cmp    rsi,rax
  41e1ac:	jne    41e1b5 <__flatcc_fb_default_error_out@@Base+0x2c5>
  41e1ae:	jmp    41e1d8 <__flatcc_fb_default_error_out@@Base+0x2e8>
  41e1b0:	cmp    rbp,rax
  41e1b3:	je     41e1d8 <__flatcc_fb_default_error_out@@Base+0x2e8>
  41e1b5:	mov    rdi,rbx
  41e1b8:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e1bd:	mov    rax,QWORD PTR [rbx+0x48]
  41e1c1:	mov    rax,QWORD PTR [rax+0x20]
  41e1c5:	test   rax,rax
  41e1c8:	jne    41e1b0 <__flatcc_fb_default_error_out@@Base+0x2c0>
  41e1ca:	add    rsp,0x8
  41e1ce:	pop    rbx
  41e1cf:	pop    rbp
  41e1d0:	ret    
  41e1d1:	nop    DWORD PTR [rax+0x0]
  41e1d8:	mov    rdi,rbx
  41e1db:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e1e0:	mov    QWORD PTR [rbx+0x40],0x0
  41e1e8:	add    rsp,0x8
  41e1ec:	pop    rbx
  41e1ed:	pop    rbp
  41e1ee:	ret    
  41e1ef:	ret    

000000000041e1f0 <__flatcc_fb_print_error@@Base>:
  41e1f0:	endbr64 
  41e1f4:	push   r12
  41e1f6:	mov    r12,rdi
  41e1f9:	push   rbp
  41e1fa:	push   rbx
  41e1fb:	sub    rsp,0x1a0
  41e202:	mov    QWORD PTR [rsp+0x100],rdx
  41e20a:	mov    QWORD PTR [rsp+0x108],rcx
  41e212:	mov    QWORD PTR [rsp+0x110],r8
  41e21a:	mov    QWORD PTR [rsp+0x118],r9
  41e222:	test   al,al
  41e224:	je     41e26e <__flatcc_fb_print_error@@Base+0x7e>
  41e226:	vmovaps XMMWORD PTR [rsp+0x120],xmm0
  41e22f:	vmovaps XMMWORD PTR [rsp+0x130],xmm1
  41e238:	vmovaps XMMWORD PTR [rsp+0x140],xmm2
  41e241:	vmovaps XMMWORD PTR [rsp+0x150],xmm3
  41e24a:	vmovaps XMMWORD PTR [rsp+0x160],xmm4
  41e253:	vmovaps XMMWORD PTR [rsp+0x170],xmm5
  41e25c:	vmovaps XMMWORD PTR [rsp+0x180],xmm6
  41e265:	vmovaps XMMWORD PTR [rsp+0x190],xmm7
  41e26e:	mov    rax,QWORD PTR fs:0x28
  41e277:	mov    QWORD PTR [rsp+0xe8],rax
  41e27f:	xor    eax,eax
  41e281:	lea    rbp,[rsp+0x20]
  41e286:	lea    rax,[rsp+0x1c0]
  41e28e:	mov    QWORD PTR [rsp+0x10],rax
  41e293:	mov    r8,rsi
  41e296:	lea    rax,[rsp+0xf0]
  41e29e:	lea    r9,[rsp+0x8]
  41e2a3:	mov    ecx,0xc8
  41e2a8:	mov    edx,0x1
  41e2ad:	mov    esi,0xc8
  41e2b2:	mov    rdi,rbp
  41e2b5:	mov    DWORD PTR [rsp+0x8],0x10
  41e2bd:	mov    DWORD PTR [rsp+0xc],0x30
  41e2c5:	mov    QWORD PTR [rsp+0x18],rax
  41e2ca:	call   4053a0 <__vsnprintf_chk@plt>
  41e2cf:	mov    ebx,eax
  41e2d1:	cmp    eax,0xc7
  41e2d6:	jg     41e310 <__flatcc_fb_print_error@@Base+0x120>
  41e2d8:	mov    rdi,QWORD PTR [r12+0x18]
  41e2dd:	mov    edx,ebx
  41e2df:	mov    rsi,rbp
  41e2e2:	call   QWORD PTR [r12+0x10]
  41e2e7:	mov    rcx,QWORD PTR [rsp+0xe8]
  41e2ef:	xor    rcx,QWORD PTR fs:0x28
  41e2f8:	mov    eax,ebx
  41e2fa:	jne    41e329 <__flatcc_fb_print_error@@Base+0x139>
  41e2fc:	add    rsp,0x1a0
  41e303:	pop    rbx
  41e304:	pop    rbp
  41e305:	pop    r12
  41e307:	ret    
  41e308:	nop    DWORD PTR [rax+rax*1+0x0]
  41e310:	mov    DWORD PTR [rsp+0xe3],0xa2e2e2e
  41e31b:	mov    ebx,0xc7
  41e320:	mov    BYTE PTR [rbp+0xc7],0x0
  41e327:	jmp    41e2d8 <__flatcc_fb_print_error@@Base+0xe8>
  41e329:	call   4052d0 <__stack_chk_fail@plt>
  41e32e:	xchg   ax,ax

000000000041e330 <__flatcc_error_find_file_of_token@@Base>:
  41e330:	endbr64 
  41e334:	jmp    41e34f <__flatcc_error_find_file_of_token@@Base+0x1f>
  41e336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e340:	cmp    QWORD PTR [rdi+0x28],rsi
  41e344:	ja     41e34c <__flatcc_error_find_file_of_token@@Base+0x1c>
  41e346:	cmp    QWORD PTR [rdi+0x30],rsi
  41e34a:	ja     41e360 <__flatcc_error_find_file_of_token@@Base+0x30>
  41e34c:	mov    rdi,QWORD PTR [rdi]
  41e34f:	test   rdi,rdi
  41e352:	jne    41e340 <__flatcc_error_find_file_of_token@@Base+0x10>
  41e354:	lea    rax,[rip+0x28603]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  41e35b:	ret    
  41e35c:	nop    DWORD PTR [rax+0x0]
  41e360:	mov    rax,QWORD PTR [rdi+0x318]
  41e367:	ret    
  41e368:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e370 <__flatcc_error_report@@Base>:
  41e370:	endbr64 
  41e374:	push   r14
  41e376:	push   r13
  41e378:	mov    r13,rdx
  41e37b:	push   r12
  41e37d:	mov    r12,rdi
  41e380:	push   rbp
  41e381:	mov    rbp,rsi
  41e384:	push   rbx
  41e385:	mov    rbx,rcx
  41e388:	sub    rsp,0x10
  41e38c:	test   rsi,rsi
  41e38f:	setne  al
  41e392:	test   r8,r8
  41e395:	jne    41e3a2 <__flatcc_error_report@@Base+0x32>
  41e397:	test   al,al
  41e399:	je     41e3a2 <__flatcc_error_report@@Base+0x32>
  41e39b:	mov    r8,QWORD PTR [rsi]
  41e39e:	mov    r9d,DWORD PTR [rsi+0x8]
  41e3a2:	lea    rdx,[rip+0x285b5]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  41e3a9:	test   r13,r13
  41e3ac:	cmove  r13,rdx
  41e3b0:	test   r8,r8
  41e3b3:	je     41e4d8 <__flatcc_error_report@@Base+0x168>
  41e3b9:	mov    DWORD PTR [rsp+0xc],r9d
  41e3be:	mov    QWORD PTR [rsp],r8
  41e3c2:	test   rbx,rbx
  41e3c5:	jne    41e3cf <__flatcc_error_report@@Base+0x5f>
  41e3c7:	test   al,al
  41e3c9:	jne    41e450 <__flatcc_error_report@@Base+0xe0>
  41e3cf:	test   rbx,rbx
  41e3d2:	je     41e490 <__flatcc_error_report@@Base+0x120>
  41e3d8:	test   al,al
  41e3da:	je     41e490 <__flatcc_error_report@@Base+0x120>
  41e3e0:	mov    rsi,rbp
  41e3e3:	mov    rdi,r12
  41e3e6:	call   41e330 <__flatcc_error_find_file_of_token@@Base>
  41e3eb:	mov    rsi,rbx
  41e3ee:	mov    rdi,r12
  41e3f1:	mov    r14,rax
  41e3f4:	call   41e330 <__flatcc_error_find_file_of_token@@Base>
  41e3f9:	sub    rsp,0x8
  41e3fd:	mov    rcx,QWORD PTR [rbp+0x10]
  41e401:	push   QWORD PTR [rbx]
  41e403:	mov    rdx,QWORD PTR [rbx+0x8]
  41e407:	lea    rsi,[rip+0x29142]        # 447550 <fb_schema_table_missing@@Base+0x90>
  41e40e:	push   rdx
  41e40f:	mov    rdi,r12
  41e412:	mov    rdx,r14
  41e415:	push   QWORD PTR [rbx+0x18]
  41e418:	push   QWORD PTR [rbx+0x10]
  41e41b:	push   rax
  41e41c:	xor    eax,eax
  41e41e:	push   r13
  41e420:	mov    r8,QWORD PTR [rsp+0x38]
  41e425:	push   r8
  41e427:	mov    r8,QWORD PTR [rbp+0x18]
  41e42b:	mov    r9d,DWORD PTR [rsp+0x4c]
  41e430:	call   41e1f0 <__flatcc_fb_print_error@@Base>
  41e435:	add    rsp,0x40
  41e439:	inc    DWORD PTR [r12+0xd0]
  41e441:	add    rsp,0x10
  41e445:	pop    rbx
  41e446:	pop    rbp
  41e447:	pop    r12
  41e449:	pop    r13
  41e44b:	pop    r14
  41e44d:	ret    
  41e44e:	xchg   ax,ax
  41e450:	mov    rsi,rbp
  41e453:	mov    rdi,r12
  41e456:	call   41e330 <__flatcc_error_find_file_of_token@@Base>
  41e45b:	mov    rcx,QWORD PTR [rbp+0x10]
  41e45f:	push   r13
  41e461:	mov    rdx,rax
  41e464:	lea    rsi,[rip+0x290c5]        # 447530 <fb_schema_table_missing@@Base+0x70>
  41e46b:	mov    r8,QWORD PTR [rsp+0x8]
  41e470:	mov    rdi,r12
  41e473:	push   r8
  41e475:	mov    r8,QWORD PTR [rbp+0x18]
  41e479:	xor    eax,eax
  41e47b:	mov    r9d,DWORD PTR [rsp+0x1c]
  41e480:	call   41e1f0 <__flatcc_fb_print_error@@Base>
  41e485:	pop    rcx
  41e486:	pop    rsi
  41e487:	jmp    41e439 <__flatcc_error_report@@Base+0xc9>
  41e489:	nop    DWORD PTR [rax+0x0]
  41e490:	or     rbp,rbx
  41e493:	je     41e4e8 <__flatcc_error_report@@Base+0x178>
  41e495:	test   rbx,rbx
  41e498:	je     41e508 <__flatcc_error_report@@Base+0x198>
  41e49a:	mov    rsi,rbx
  41e49d:	mov    rdi,r12
  41e4a0:	call   41e330 <__flatcc_error_find_file_of_token@@Base>
  41e4a5:	push   QWORD PTR [rbx]
  41e4a7:	mov    rdx,QWORD PTR [rbx+0x8]
  41e4ab:	mov    r9,QWORD PTR [rbx+0x18]
  41e4af:	push   rdx
  41e4b0:	mov    r8,QWORD PTR [rbx+0x10]
  41e4b4:	mov    rcx,rax
  41e4b7:	mov    rdx,r13
  41e4ba:	lea    rsi,[rip+0x290c7]        # 447588 <fb_schema_table_missing@@Base+0xc8>
  41e4c1:	mov    rdi,r12
  41e4c4:	xor    eax,eax
  41e4c6:	call   41e1f0 <__flatcc_fb_print_error@@Base>
  41e4cb:	pop    rax
  41e4cc:	pop    rdx
  41e4cd:	jmp    41e439 <__flatcc_error_report@@Base+0xc9>
  41e4d2:	nop    WORD PTR [rax+rax*1+0x0]
  41e4d8:	xor    r9d,r9d
  41e4db:	mov    r8,rdx
  41e4de:	jmp    41e3b9 <__flatcc_error_report@@Base+0x49>
  41e4e3:	nop    DWORD PTR [rax+rax*1+0x0]
  41e4e8:	mov    rdx,r13
  41e4eb:	lea    rsi,[rip+0x298ec]        # 447dde <fb_schema_table_missing@@Base+0x91e>
  41e4f2:	mov    rdi,r12
  41e4f5:	xor    eax,eax
  41e4f7:	call   41e1f0 <__flatcc_fb_print_error@@Base>
  41e4fc:	jmp    41e439 <__flatcc_error_report@@Base+0xc9>
  41e501:	nop    DWORD PTR [rax+0x0]
  41e508:	lea    rsi,[rip+0x29099]        # 4475a8 <fb_schema_table_missing@@Base+0xe8>
  41e50f:	mov    rdi,r12
  41e512:	xor    eax,eax
  41e514:	call   41e1f0 <__flatcc_fb_print_error@@Base>
  41e519:	jmp    41e439 <__flatcc_error_report@@Base+0xc9>
  41e51e:	xchg   ax,ax
  41e520:	push   r12
  41e522:	push   rbp
  41e523:	mov    rbp,rsi
  41e526:	push   rbx
  41e527:	mov    rbx,rdi
  41e52a:	mov    rdx,QWORD PTR [rdi+0x60]
  41e52e:	mov    r12,QWORD PTR [rdi+0x48]
  41e532:	lea    rax,[rdx+0x20]
  41e536:	cmp    rax,QWORD PTR [rdi+0x50]
  41e53a:	ja     41e5b0 <__flatcc_error_report@@Base+0x240>
  41e53c:	mov    QWORD PTR [rbx+0x60],rax
  41e540:	mov    QWORD PTR [rdx+0x8],r12
  41e544:	mov    QWORD PTR [rbp+0x0],rdx
  41e548:	mov    rdi,rbx
  41e54b:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e550:	mov    rax,QWORD PTR [rbx+0x48]
  41e554:	cmp    QWORD PTR [rax+0x20],0x2e
  41e559:	je     41e560 <__flatcc_error_report@@Base+0x1f0>
  41e55b:	pop    rbx
  41e55c:	pop    rbp
  41e55d:	pop    r12
  41e55f:	ret    
  41e560:	mov    r12,QWORD PTR [rbp+0x0]
  41e564:	mov    rdi,rbx
  41e567:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e56c:	mov    rbp,QWORD PTR [rbx+0x48]
  41e570:	cmp    QWORD PTR [rbp+0x20],0x9
  41e575:	jne    41e630 <__flatcc_error_report@@Base+0x2c0>
  41e57b:	mov    rdx,QWORD PTR [rbx+0x60]
  41e57f:	lea    rax,[rdx+0x20]
  41e583:	cmp    rax,QWORD PTR [rbx+0x50]
  41e587:	ja     41e5f0 <__flatcc_error_report@@Base+0x280>
  41e589:	mov    QWORD PTR [rbx+0x60],rax
  41e58d:	mov    QWORD PTR [rdx+0x8],rbp
  41e591:	mov    QWORD PTR [r12],rdx
  41e595:	mov    rdi,rbx
  41e598:	mov    r12,rdx
  41e59b:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e5a0:	mov    rax,QWORD PTR [rbx+0x48]
  41e5a4:	cmp    QWORD PTR [rax+0x20],0x2e
  41e5a9:	je     41e564 <__flatcc_error_report@@Base+0x1f4>
  41e5ab:	pop    rbx
  41e5ac:	pop    rbp
  41e5ad:	pop    r12
  41e5af:	ret    
  41e5b0:	mov    esi,0x1
  41e5b5:	mov    edi,0x10000
  41e5ba:	call   405340 <calloc@plt>
  41e5bf:	test   rax,rax
  41e5c2:	je     41e64e <__flatcc_error_report@@Base+0x2de>
  41e5c8:	mov    rdx,QWORD PTR [rbx+0x58]
  41e5cc:	lea    rcx,[rax+0x10000]
  41e5d3:	mov    QWORD PTR [rax],rdx
  41e5d6:	mov    QWORD PTR [rbx+0x58],rax
  41e5da:	lea    rdx,[rax+0x10]
  41e5de:	mov    QWORD PTR [rbx+0x50],rcx
  41e5e2:	add    rax,0x30
  41e5e6:	jmp    41e53c <__flatcc_error_report@@Base+0x1cc>
  41e5eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41e5f0:	mov    esi,0x1
  41e5f5:	mov    edi,0x10000
  41e5fa:	call   405340 <calloc@plt>
  41e5ff:	test   rax,rax
  41e602:	je     41e64e <__flatcc_error_report@@Base+0x2de>
  41e604:	mov    rdx,QWORD PTR [rbx+0x58]
  41e608:	lea    rcx,[rax+0x10000]
  41e60f:	mov    QWORD PTR [rax],rdx
  41e612:	mov    QWORD PTR [rbx+0x58],rax
  41e616:	lea    rdx,[rax+0x10]
  41e61a:	mov    QWORD PTR [rbx+0x50],rcx
  41e61e:	add    rax,0x30
  41e622:	jmp    41e589 <__flatcc_error_report@@Base+0x219>
  41e627:	nop    WORD PTR [rax+rax*1+0x0]
  41e630:	mov    rdi,rbx
  41e633:	pop    rbx
  41e634:	mov    rsi,rbp
  41e637:	pop    rbp
  41e638:	xor    r9d,r9d
  41e63b:	xor    r8d,r8d
  41e63e:	xor    ecx,ecx
  41e640:	lea    rdx,[rip+0x28f89]        # 4475d0 <fb_schema_table_missing@@Base+0x110>
  41e647:	pop    r12
  41e649:	jmp    41e370 <__flatcc_error_report@@Base>
  41e64e:	call   41df20 <__flatcc_fb_default_error_out@@Base+0x30>
  41e653:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41e65e:	xchg   ax,ax
  41e660:	mov    rax,QWORD PTR [rdi+0x48]
  41e664:	mov    QWORD PTR [rdi+0x40],0x0
  41e66c:	cmp    QWORD PTR [rax+0x20],rsi
  41e670:	jne    41e680 <__flatcc_error_report@@Base+0x310>
  41e672:	jmp    41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e677:	nop    WORD PTR [rax+rax*1+0x0]
  41e680:	push   rbx
  41e681:	mov    rsi,rax
  41e684:	mov    rbx,rdi
  41e687:	xor    r9d,r9d
  41e68a:	xor    r8d,r8d
  41e68d:	call   41e370 <__flatcc_error_report@@Base>
  41e692:	mov    rax,QWORD PTR [rbx+0x48]
  41e696:	pop    rbx
  41e697:	ret    
  41e698:	nop    DWORD PTR [rax+rax*1+0x0]
  41e6a0:	push   r13
  41e6a2:	mov    eax,0x1
  41e6a7:	mov    r13,rsi
  41e6aa:	push   r12
  41e6ac:	push   rbp
  41e6ad:	push   rbx
  41e6ae:	mov    rbx,rdi
  41e6b1:	sub    rsp,0x8
  41e6b5:	mov    r12,QWORD PTR [rdi+0x48]
  41e6b9:	mov    WORD PTR [rsi+0x10],ax
  41e6bd:	mov    rax,QWORD PTR [r12+0x20]
  41e6c2:	cmp    rax,0x5b
  41e6c6:	je     41e870 <__flatcc_error_report@@Base+0x500>
  41e6cc:	cmp    rax,0xfffffffffffffc28
  41e6d2:	jle    41e748 <__flatcc_error_report@@Base+0x3d8>
  41e6d4:	cmp    rax,0xfffffffffffffc32
  41e6da:	je     41e9b0 <__flatcc_error_report@@Base+0x640>
  41e6e0:	jle    41e848 <__flatcc_error_report@@Base+0x4d8>
  41e6e6:	cmp    rax,0x9
  41e6ea:	je     41e990 <__flatcc_error_report@@Base+0x620>
  41e6f0:	xor    ebp,ebp
  41e6f2:	cmp    rax,0x5d
  41e6f6:	je     41e8d7 <__flatcc_error_report@@Base+0x567>
  41e6fc:	cmp    rax,0xfffffffffffffc34
  41e702:	je     41e778 <__flatcc_error_report@@Base+0x408>
  41e704:	nop    DWORD PTR [rax+0x0]
  41e708:	xor    r9d,r9d
  41e70b:	xor    r8d,r8d
  41e70e:	xor    ecx,ecx
  41e710:	lea    rdx,[rip+0x296ee]        # 447e05 <fb_schema_table_missing@@Base+0x945>
  41e717:	xor    esi,esi
  41e719:	mov    rdi,rbx
  41e71c:	call   41e370 <__flatcc_error_report@@Base>
  41e721:	nop    DWORD PTR [rax+0x0]
  41e728:	mov    rax,QWORD PTR [rbx+0x48]
  41e72c:	cmp    QWORD PTR [rax+0x20],0x5d
  41e731:	je     41e79b <__flatcc_error_report@@Base+0x42b>
  41e733:	test   ebp,ebp
  41e735:	jne    41e7b0 <__flatcc_error_report@@Base+0x440>
  41e737:	add    rsp,0x8
  41e73b:	pop    rbx
  41e73c:	pop    rbp
  41e73d:	pop    r12
  41e73f:	pop    r13
  41e741:	ret    
  41e742:	nop    WORD PTR [rax+rax*1+0x0]
  41e748:	cmp    rax,0xfffffffffffffc27
  41e74e:	jge    41e778 <__flatcc_error_report@@Base+0x408>
  41e750:	cmp    rax,0xfffffffffffffc23
  41e756:	jg     41e830 <__flatcc_error_report@@Base+0x4c0>
  41e75c:	cmp    rax,0xfffffffffffffc1c
  41e762:	jge    41e778 <__flatcc_error_report@@Base+0x408>
  41e764:	add    rax,0x3e7
  41e76a:	xor    ebp,ebp
  41e76c:	cmp    rax,0x1
  41e770:	ja     41e708 <__flatcc_error_report@@Base+0x398>
  41e772:	nop    WORD PTR [rax+rax*1+0x0]
  41e778:	mov    QWORD PTR [r13+0x0],r12
  41e77c:	xor    ebp,ebp
  41e77e:	mov    eax,0x8
  41e783:	mov    WORD PTR [r13+0x10],ax
  41e788:	mov    rdi,rbx
  41e78b:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e790:	mov    rax,QWORD PTR [rbx+0x48]
  41e794:	cmp    QWORD PTR [rax+0x20],0x5d
  41e799:	jne    41e733 <__flatcc_error_report@@Base+0x3c3>
  41e79b:	mov    rdi,rbx
  41e79e:	dec    ebp
  41e7a0:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e7a5:	cmp    ebp,0xffffffff
  41e7a8:	jne    41e728 <__flatcc_error_report@@Base+0x3b8>
  41e7ae:	xchg   ax,ax
  41e7b0:	xor    r9d,r9d
  41e7b3:	xor    r8d,r8d
  41e7b6:	xor    esi,esi
  41e7b8:	mov    rcx,r12
  41e7bb:	lea    rdx,[rip+0x28e5e]        # 447620 <fb_schema_table_missing@@Base+0x160>
  41e7c2:	mov    rdi,rbx
  41e7c5:	call   41e370 <__flatcc_error_report@@Base>
  41e7ca:	mov    rbp,QWORD PTR [rbx+0x48]
  41e7ce:	cmp    QWORD PTR [rbp+0x20],0x5d
  41e7d3:	jne    41e737 <__flatcc_error_report@@Base+0x3c7>
  41e7d9:	mov    rdi,rbx
  41e7dc:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e7e1:	xor    r9d,r9d
  41e7e4:	xor    r8d,r8d
  41e7e7:	mov    rcx,r12
  41e7ea:	lea    rdx,[rip+0x2962b]        # 447e1c <fb_schema_table_missing@@Base+0x95c>
  41e7f1:	mov    rsi,rbp
  41e7f4:	mov    rdi,rbx
  41e7f7:	call   41e370 <__flatcc_error_report@@Base>
  41e7fc:	mov    rax,QWORD PTR [rbx+0x48]
  41e800:	cmp    QWORD PTR [rax+0x20],0x5d
  41e805:	jne    41e737 <__flatcc_error_report@@Base+0x3c7>
  41e80b:	mov    rdi,rbx
  41e80e:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e813:	mov    rax,QWORD PTR [rbx+0x48]
  41e817:	cmp    QWORD PTR [rax+0x20],0x5d
  41e81c:	je     41e80b <__flatcc_error_report@@Base+0x49b>
  41e81e:	add    rsp,0x8
  41e822:	pop    rbx
  41e823:	pop    rbp
  41e824:	pop    r12
  41e826:	pop    r13
  41e828:	ret    
  41e829:	nop    DWORD PTR [rax+0x0]
  41e830:	cmp    rax,0xfffffffffffffc25
  41e836:	je     41e778 <__flatcc_error_report@@Base+0x408>
  41e83c:	xor    ebp,ebp
  41e83e:	jmp    41e708 <__flatcc_error_report@@Base+0x398>
  41e843:	nop    DWORD PTR [rax+rax*1+0x0]
  41e848:	cmp    rax,0xfffffffffffffc2a
  41e84e:	jl     41e83c <__flatcc_error_report@@Base+0x4cc>
  41e850:	cmp    rax,0xfffffffffffffc2f
  41e856:	jle    41e778 <__flatcc_error_report@@Base+0x408>
  41e85c:	cmp    rax,0xfffffffffffffc31
  41e862:	je     41e778 <__flatcc_error_report@@Base+0x408>
  41e868:	xor    ebp,ebp
  41e86a:	jmp    41e708 <__flatcc_error_report@@Base+0x398>
  41e86f:	nop
  41e870:	xor    ebp,ebp
  41e872:	mov    rdi,rbx
  41e875:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e87a:	mov    rdx,QWORD PTR [rbx+0x48]
  41e87e:	inc    ebp
  41e880:	mov    rax,QWORD PTR [rdx+0x20]
  41e884:	cmp    rax,0x5b
  41e888:	je     41e872 <__flatcc_error_report@@Base+0x502>
  41e88a:	cmp    ebp,0x1
  41e88d:	je     41e8f5 <__flatcc_error_report@@Base+0x585>
  41e88f:	lea    rdx,[rip+0x28d62]        # 4475f8 <fb_schema_table_missing@@Base+0x138>
  41e896:	xor    r9d,r9d
  41e899:	xor    r8d,r8d
  41e89c:	xor    ecx,ecx
  41e89e:	mov    rsi,r12
  41e8a1:	mov    rdi,rbx
  41e8a4:	call   41e370 <__flatcc_error_report@@Base>
  41e8a9:	mov    rdx,QWORD PTR [rbx+0x48]
  41e8ad:	mov    rax,QWORD PTR [rdx+0x20]
  41e8b1:	cmp    rax,0xfffffffffffffc28
  41e8b7:	jle    41e900 <__flatcc_error_report@@Base+0x590>
  41e8b9:	cmp    rax,0xfffffffffffffc32
  41e8bf:	je     41e9e8 <__flatcc_error_report@@Base+0x678>
  41e8c5:	jle    41e940 <__flatcc_error_report@@Base+0x5d0>
  41e8c7:	cmp    rax,0x9
  41e8cb:	je     41e9d0 <__flatcc_error_report@@Base+0x660>
  41e8d1:	cmp    rax,0x5d
  41e8d5:	jne    41e930 <__flatcc_error_report@@Base+0x5c0>
  41e8d7:	xor    r9d,r9d
  41e8da:	xor    r8d,r8d
  41e8dd:	xor    ecx,ecx
  41e8df:	lea    rdx,[rip+0x29503]        # 447de9 <fb_schema_table_missing@@Base+0x929>
  41e8e6:	xor    esi,esi
  41e8e8:	mov    rdi,rbx
  41e8eb:	call   41e370 <__flatcc_error_report@@Base>
  41e8f0:	jmp    41e728 <__flatcc_error_report@@Base+0x3b8>
  41e8f5:	cmp    rax,0xfffffffffffffc28
  41e8fb:	jg     41e8b9 <__flatcc_error_report@@Base+0x549>
  41e8fd:	nop    DWORD PTR [rax]
  41e900:	cmp    rax,0xfffffffffffffc27
  41e906:	jge    41e960 <__flatcc_error_report@@Base+0x5f0>
  41e908:	cmp    rax,0xfffffffffffffc23
  41e90e:	jg     41e980 <__flatcc_error_report@@Base+0x610>
  41e910:	cmp    rax,0xfffffffffffffc1c
  41e916:	jge    41e960 <__flatcc_error_report@@Base+0x5f0>
  41e918:	add    rax,0x3e7
  41e91e:	cmp    rax,0x1
  41e922:	ja     41e708 <__flatcc_error_report@@Base+0x398>
  41e928:	jmp    41e960 <__flatcc_error_report@@Base+0x5f0>
  41e92a:	nop    WORD PTR [rax+rax*1+0x0]
  41e930:	cmp    rax,0xfffffffffffffc34
  41e936:	jne    41e708 <__flatcc_error_report@@Base+0x398>
  41e93c:	jmp    41e960 <__flatcc_error_report@@Base+0x5f0>
  41e93e:	xchg   ax,ax
  41e940:	cmp    rax,0xfffffffffffffc2a
  41e946:	jl     41e708 <__flatcc_error_report@@Base+0x398>
  41e94c:	cmp    rax,0xfffffffffffffc2f
  41e952:	jle    41e960 <__flatcc_error_report@@Base+0x5f0>
  41e954:	cmp    rax,0xfffffffffffffc31
  41e95a:	jne    41e708 <__flatcc_error_report@@Base+0x398>
  41e960:	mov    eax,0x7
  41e965:	mov    QWORD PTR [r13+0x0],rdx
  41e969:	mov    WORD PTR [r13+0x10],ax
  41e96e:	mov    rdi,rbx
  41e971:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e976:	jmp    41e790 <__flatcc_error_report@@Base+0x420>
  41e97b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e980:	cmp    rax,0xfffffffffffffc25
  41e986:	jne    41e708 <__flatcc_error_report@@Base+0x398>
  41e98c:	jmp    41e960 <__flatcc_error_report@@Base+0x5f0>
  41e98e:	xchg   ax,ax
  41e990:	call   41e520 <__flatcc_error_report@@Base+0x1b0>
  41e995:	xor    ebp,ebp
  41e997:	mov    eax,0xc
  41e99c:	mov    WORD PTR [r13+0x10],ax
  41e9a1:	jmp    41e728 <__flatcc_error_report@@Base+0x3b8>
  41e9a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e9b0:	mov    eax,0xa
  41e9b5:	mov    QWORD PTR [rsi],r12
  41e9b8:	mov    WORD PTR [r13+0x10],ax
  41e9bd:	mov    rdi,rbx
  41e9c0:	xor    ebp,ebp
  41e9c2:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41e9c7:	jmp    41e790 <__flatcc_error_report@@Base+0x420>
  41e9cc:	nop    DWORD PTR [rax+0x0]
  41e9d0:	mov    rsi,r13
  41e9d3:	mov    rdi,rbx
  41e9d6:	call   41e520 <__flatcc_error_report@@Base+0x1b0>
  41e9db:	mov    eax,0xb
  41e9e0:	jmp    41e99c <__flatcc_error_report@@Base+0x62c>
  41e9e2:	nop    WORD PTR [rax+rax*1+0x0]
  41e9e8:	mov    QWORD PTR [r13+0x0],rdx
  41e9ec:	mov    eax,0x9
  41e9f1:	jmp    41e783 <__flatcc_error_report@@Base+0x413>
  41e9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ea00:	push   r12
  41ea02:	mov    r12,rdi
  41ea05:	push   rbp
  41ea06:	mov    rbp,rsi
  41ea09:	push   rbx
  41ea0a:	lea    rbx,[rip+0x296ef]        # 448100 <fb_schema_table_missing@@Base+0xc40>
  41ea11:	mov    rsi,QWORD PTR [r12+0x48]
  41ea16:	mov    rax,QWORD PTR [rsi+0x20]
  41ea1a:	sub    rax,0x6
  41ea1e:	cmp    rax,0x11
  41ea22:	ja     41ea30 <__flatcc_error_report@@Base+0x6c0>
  41ea24:	movsxd rax,DWORD PTR [rbx+rax*4]
  41ea28:	add    rax,rbx
  41ea2b:	notrack jmp rax
  41ea2e:	xchg   ax,ax
  41ea30:	lea    rdx,[rip+0x28c61]        # 447698 <fb_schema_table_missing@@Base+0x1d8>
  41ea37:	xor    r9d,r9d
  41ea3a:	xor    r8d,r8d
  41ea3d:	xor    ecx,ecx
  41ea3f:	mov    rdi,r12
  41ea42:	call   41e370 <__flatcc_error_report@@Base>
  41ea47:	mov    edx,0x1
  41ea4c:	mov    WORD PTR [rbp+0x10],dx
  41ea50:	mov    rsi,QWORD PTR [r12+0x48]
  41ea55:	mov    rdx,QWORD PTR [rbp+0x0]
  41ea59:	test   rdx,rdx
  41ea5c:	je     41ea6c <__flatcc_error_report@@Base+0x6fc>
  41ea5e:	mov    rax,QWORD PTR [rsi]
  41ea61:	sub    rax,rdx
  41ea64:	mov    DWORD PTR [rbp+0x8],eax
  41ea67:	mov    rsi,QWORD PTR [r12+0x48]
  41ea6c:	cmp    QWORD PTR [rsi+0x20],0x16
  41ea71:	jne    41eb28 <__flatcc_error_report@@Base+0x7b8>
  41ea77:	pop    rbx
  41ea78:	pop    rbp
  41ea79:	mov    rdi,r12
  41ea7c:	pop    r12
  41ea7e:	jmp    41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41ea83:	nop    DWORD PTR [rax+rax*1+0x0]
  41ea88:	mov    r8d,0x1
  41ea8e:	mov    WORD PTR [rbp+0x10],r8w
  41ea93:	xor    r9d,r9d
  41ea96:	xor    r8d,r8d
  41ea99:	xor    ecx,ecx
  41ea9b:	lea    rdx,[rip+0x29391]        # 447e33 <fb_schema_table_missing@@Base+0x973>
  41eaa2:	mov    rdi,r12
  41eaa5:	call   41e370 <__flatcc_error_report@@Base>
  41eaaa:	mov    rdi,r12
  41eaad:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41eab2:	jmp    41ea11 <__flatcc_error_report@@Base+0x6a1>
  41eab7:	nop    WORD PTR [rax+rax*1+0x0]
  41eac0:	cmp    QWORD PTR [rbp+0x0],0x0
  41eac5:	jne    41eaaa <__flatcc_error_report@@Base+0x73a>
  41eac7:	mov    rax,QWORD PTR [rsi]
  41eaca:	mov    QWORD PTR [rbp+0x0],rax
  41eace:	jmp    41eaaa <__flatcc_error_report@@Base+0x73a>
  41ead0:	mov    ecx,0x1
  41ead5:	mov    WORD PTR [rbp+0x10],cx
  41ead9:	xor    r9d,r9d
  41eadc:	xor    r8d,r8d
  41eadf:	xor    ecx,ecx
  41eae1:	lea    rdx,[rip+0x28b90]        # 447678 <fb_schema_table_missing@@Base+0x1b8>
  41eae8:	mov    rdi,r12
  41eaeb:	call   41e370 <__flatcc_error_report@@Base>
  41eaf0:	jmp    41eaaa <__flatcc_error_report@@Base+0x73a>
  41eaf2:	nop    WORD PTR [rax+rax*1+0x0]
  41eaf8:	mov    edi,0x1
  41eafd:	mov    WORD PTR [rbp+0x10],di
  41eb01:	mov    r9d,0x1
  41eb07:	lea    r8,[rip+0x29343]        # 447e51 <fb_schema_table_missing@@Base+0x991>
  41eb0e:	xor    ecx,ecx
  41eb10:	lea    rdx,[rip+0x28b31]        # 447648 <fb_schema_table_missing@@Base+0x188>
  41eb17:	mov    rdi,r12
  41eb1a:	call   41e370 <__flatcc_error_report@@Base>
  41eb1f:	jmp    41eaaa <__flatcc_error_report@@Base+0x73a>
  41eb21:	nop    DWORD PTR [rax+0x0]
  41eb28:	mov    rdi,r12
  41eb2b:	xor    r9d,r9d
  41eb2e:	xor    r8d,r8d
  41eb31:	xor    ecx,ecx
  41eb33:	lea    rdx,[rip+0x29319]        # 447e53 <fb_schema_table_missing@@Base+0x993>
  41eb3a:	call   41e370 <__flatcc_error_report@@Base>
  41eb3f:	pop    rbx
  41eb40:	mov    eax,0x1
  41eb45:	mov    WORD PTR [rbp+0x10],ax
  41eb49:	pop    rbp
  41eb4a:	pop    r12
  41eb4c:	ret    
  41eb4d:	nop    DWORD PTR [rax]
  41eb50:	push   r15
  41eb52:	push   r14
  41eb54:	mov    r14d,edx
  41eb57:	push   r13
  41eb59:	mov    r13,rcx
  41eb5c:	push   r12
  41eb5e:	mov    r12,rsi
  41eb61:	push   rbp
  41eb62:	mov    rbp,rdi
  41eb65:	push   rbx
  41eb66:	sub    rsp,0x28
  41eb6a:	mov    rbx,QWORD PTR [rdi+0x48]
  41eb6e:	mov    rax,QWORD PTR fs:0x28
  41eb77:	mov    QWORD PTR [rsp+0x18],rax
  41eb7c:	xor    eax,eax
  41eb7e:	mov    rax,QWORD PTR [rbx+0x20]
  41eb82:	cmp    rax,0x2d
  41eb86:	je     41ecf0 <__flatcc_error_report@@Base+0x980>
  41eb8c:	cmp    rax,0xa
  41eb90:	je     41ef28 <__flatcc_error_report@@Base+0xbb8>
  41eb96:	jle    41ec30 <__flatcc_error_report@@Base+0x8c0>
  41eb9c:	cmp    rax,0xe
  41eba0:	je     41ee08 <__flatcc_error_report@@Base+0xa98>
  41eba6:	cmp    rax,0x13
  41ebaa:	je     41ec78 <__flatcc_error_report@@Base+0x908>
  41ebb0:	cmp    rax,0xb
  41ebb4:	jne    41ed2e <__flatcc_error_report@@Base+0x9be>
  41ebba:	xor    r13d,r13d
  41ebbd:	mov    r15d,0x3
  41ebc3:	mov    WORD PTR [r12+0x10],r15w
  41ebc9:	mov    rdi,QWORD PTR [rbx]
  41ebcc:	lea    rsi,[rsp+0x10]
  41ebd1:	call   4052a0 <strtod@plt>
  41ebd6:	mov    rax,QWORD PTR [rbx]
  41ebd9:	mov    rdx,QWORD PTR [rbx+0x8]
  41ebdd:	vmovsd QWORD PTR [r12],xmm0
  41ebe3:	add    rdx,rax
  41ebe6:	cmp    QWORD PTR [rsp+0x10],rdx
  41ebeb:	je     41eee0 <__flatcc_error_report@@Base+0xb70>
  41ebf1:	mov    r14d,0x1
  41ebf7:	mov    WORD PTR [r12+0x10],r14w
  41ebfd:	xor    r9d,r9d
  41ec00:	xor    r8d,r8d
  41ec03:	xor    ecx,ecx
  41ec05:	lea    rdx,[rip+0x2928d]        # 447e99 <fb_schema_table_missing@@Base+0x9d9>
  41ec0c:	mov    rsi,rbx
  41ec0f:	mov    rdi,rbp
  41ec12:	call   41e370 <__flatcc_error_report@@Base>
  41ec17:	test   r13,r13
  41ec1a:	je     41ec68 <__flatcc_error_report@@Base+0x8f8>
  41ec1c:	cmp    WORD PTR [r12+0x10],0x6
  41ec23:	jne    41ec68 <__flatcc_error_report@@Base+0x8f8>
  41ec25:	mov    r15,rbx
  41ec28:	jmp    41f0a5 <__flatcc_error_report@@Base+0xd35>
  41ec2d:	nop    DWORD PTR [rax]
  41ec30:	cmp    rax,0xfffffffffffffc26
  41ec36:	je     41edb0 <__flatcc_error_report@@Base+0xa40>
  41ec3c:	cmp    rax,0x9
  41ec40:	je     41ed98 <__flatcc_error_report@@Base+0xa28>
  41ec46:	cmp    rax,0xfffffffffffffc24
  41ec4c:	jne    41ed2e <__flatcc_error_report@@Base+0x9be>
  41ec52:	mov    r10d,0x6
  41ec58:	mov    BYTE PTR [r12],0x1
  41ec5d:	mov    WORD PTR [r12+0x10],r10w
  41ec63:	nop    DWORD PTR [rax+rax*1+0x0]
  41ec68:	mov    rdi,rbp
  41ec6b:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41ec70:	jmp    41ed48 <__flatcc_error_report@@Base+0x9d8>
  41ec75:	nop    DWORD PTR [rax]
  41ec78:	xor    edx,edx
  41ec7a:	mov    rdi,rbp
  41ec7d:	mov    QWORD PTR [rsp+0x8],rdx
  41ec82:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41ec87:	mov    r8d,0x2
  41ec8d:	mov    WORD PTR [r12+0x10],r8w
  41ec93:	mov    QWORD PTR [r12],0x0
  41ec9b:	mov    DWORD PTR [r12+0x8],0x0
  41eca4:	mov    rsi,r12
  41eca7:	mov    rdi,rbp
  41ecaa:	call   41ea00 <__flatcc_error_report@@Base+0x690>
  41ecaf:	and    r14d,0x1
  41ecb3:	mov    rdx,QWORD PTR [rsp+0x8]
  41ecb8:	je     41f060 <__flatcc_error_report@@Base+0xcf0>
  41ecbe:	test   rdx,rdx
  41ecc1:	je     41ed48 <__flatcc_error_report@@Base+0x9d8>
  41ecc7:	mov    esi,0x1
  41eccc:	mov    WORD PTR [r12+0x10],si
  41ecd2:	xor    r9d,r9d
  41ecd5:	xor    r8d,r8d
  41ecd8:	xor    ecx,ecx
  41ecda:	lea    rdx,[rip+0x28a0f]        # 4476f0 <fb_schema_table_missing@@Base+0x230>
  41ece1:	mov    rsi,rbx
  41ece4:	mov    rdi,rbp
  41ece7:	call   41e370 <__flatcc_error_report@@Base>
  41ecec:	jmp    41ed48 <__flatcc_error_report@@Base+0x9d8>
  41ecee:	xchg   ax,ax
  41ecf0:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41ecf5:	mov    r15,QWORD PTR [rbp+0x48]
  41ecf9:	mov    rax,QWORD PTR [r15+0x20]
  41ecfd:	cmp    rax,0xa
  41ed01:	je     41f0d0 <__flatcc_error_report@@Base+0xd60>
  41ed07:	jg     41ed70 <__flatcc_error_report@@Base+0xa00>
  41ed09:	cmp    rax,0xfffffffffffffc26
  41ed0f:	je     41f0e0 <__flatcc_error_report@@Base+0xd70>
  41ed15:	cmp    rax,0x9
  41ed19:	je     41edd0 <__flatcc_error_report@@Base+0xa60>
  41ed1f:	cmp    rax,0xfffffffffffffc24
  41ed25:	je     41f0a0 <__flatcc_error_report@@Base+0xd30>
  41ed2b:	mov    rbx,r15
  41ed2e:	xor    r9d,r9d
  41ed31:	xor    r8d,r8d
  41ed34:	xor    ecx,ecx
  41ed36:	mov    rdx,r13
  41ed39:	mov    rsi,rbx
  41ed3c:	mov    rdi,rbp
  41ed3f:	call   41e370 <__flatcc_error_report@@Base>
  41ed44:	nop    DWORD PTR [rax+0x0]
  41ed48:	mov    rax,QWORD PTR [rsp+0x18]
  41ed4d:	xor    rax,QWORD PTR fs:0x28
  41ed56:	jne    41f140 <__flatcc_error_report@@Base+0xdd0>
  41ed5c:	add    rsp,0x28
  41ed60:	pop    rbx
  41ed61:	pop    rbp
  41ed62:	pop    r12
  41ed64:	pop    r13
  41ed66:	pop    r14
  41ed68:	pop    r15
  41ed6a:	ret    
  41ed6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ed70:	cmp    rax,0xe
  41ed74:	je     41ef18 <__flatcc_error_report@@Base+0xba8>
  41ed7a:	cmp    rax,0x13
  41ed7e:	je     41ef08 <__flatcc_error_report@@Base+0xb98>
  41ed84:	cmp    rax,0xb
  41ed88:	jne    41ed2b <__flatcc_error_report@@Base+0x9bb>
  41ed8a:	mov    r13,rbx
  41ed8d:	mov    rbx,r15
  41ed90:	jmp    41ebbd <__flatcc_error_report@@Base+0x84d>
  41ed95:	nop    DWORD PTR [rax]
  41ed98:	mov    rsi,r12
  41ed9b:	mov    rdi,rbp
  41ed9e:	call   41e520 <__flatcc_error_report@@Base+0x1b0>
  41eda3:	mov    eax,0xd
  41eda8:	mov    WORD PTR [r12+0x10],ax
  41edae:	jmp    41ed48 <__flatcc_error_report@@Base+0x9d8>
  41edb0:	mov    r9d,0x6
  41edb6:	mov    BYTE PTR [r12],0x0
  41edbb:	mov    WORD PTR [r12+0x10],r9w
  41edc1:	jmp    41ec68 <__flatcc_error_report@@Base+0x8f8>
  41edc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41edd0:	mov    rsi,r12
  41edd3:	mov    rdi,rbp
  41edd6:	call   41e520 <__flatcc_error_report@@Base+0x1b0>
  41eddb:	mov    edx,0x1
  41ede0:	mov    WORD PTR [r12+0x10],dx
  41ede6:	xor    r9d,r9d
  41ede9:	xor    r8d,r8d
  41edec:	xor    ecx,ecx
  41edee:	lea    rdx,[rip+0x290b9]        # 447eae <fb_schema_table_missing@@Base+0x9ee>
  41edf5:	mov    rsi,r15
  41edf8:	mov    rdi,rbp
  41edfb:	call   41e370 <__flatcc_error_report@@Base>
  41ee00:	jmp    41ed48 <__flatcc_error_report@@Base+0x9d8>
  41ee05:	nop    DWORD PTR [rax]
  41ee08:	xor    r13d,r13d
  41ee0b:	mov    eax,0x5
  41ee10:	mov    WORD PTR [r12+0x10],ax
  41ee16:	movsxd rdx,DWORD PTR [rbx+0x8]
  41ee1a:	mov    rax,QWORD PTR [rbx]
  41ee1d:	lea    r8,[rax+rdx*1]
  41ee21:	cmp    rax,r8
  41ee24:	je     41f030 <__flatcc_error_report@@Base+0xcc0>
  41ee2a:	movzx  edi,BYTE PTR [rax]
  41ee2d:	xor    esi,esi
  41ee2f:	cmp    dil,0x2d
  41ee33:	sete   sil
  41ee37:	sub    rdx,rsi
  41ee3a:	cmp    rdx,0x1
  41ee3e:	jle    41f030 <__flatcc_error_report@@Base+0xcc0>
  41ee44:	add    rax,rsi
  41ee47:	cmp    BYTE PTR [rax],0x30
  41ee4a:	jne    41f030 <__flatcc_error_report@@Base+0xcc0>
  41ee50:	movzx  edx,BYTE PTR [rax+0x1]
  41ee54:	or     edx,0x20
  41ee57:	cmp    dl,0x78
  41ee5a:	jne    41f030 <__flatcc_error_report@@Base+0xcc0>
  41ee60:	lea    r10,[rax+0x2]
  41ee64:	mov    rdx,r8
  41ee67:	sub    rdx,r10
  41ee6a:	add    rax,0x12
  41ee6e:	cmp    rdx,0x10
  41ee72:	cmovle rax,r8
  41ee76:	mov    rdx,r10
  41ee79:	mov    rsi,rax
  41ee7c:	xor    ecx,ecx
  41ee7e:	cmp    r10,rax
  41ee81:	jne    41eea5 <__flatcc_error_report@@Base+0xb35>
  41ee83:	jmp    41f030 <__flatcc_error_report@@Base+0xcc0>
  41ee88:	nop    DWORD PTR [rax+rax*1+0x0]
  41ee90:	shl    rcx,0x4
  41ee94:	lea    rcx,[rcx+rax*1-0x30]
  41ee99:	inc    rdx
  41ee9c:	cmp    rdx,rsi
  41ee9f:	je     41f0f0 <__flatcc_error_report@@Base+0xd80>
  41eea5:	movzx  eax,BYTE PTR [rdx]
  41eea8:	lea    r9d,[rax-0x30]
  41eeac:	cmp    r9b,0x9
  41eeb0:	jbe    41ee90 <__flatcc_error_report@@Base+0xb20>
  41eeb2:	mov    r9d,eax
  41eeb5:	or     r9d,0x20
  41eeb9:	lea    r11d,[r9-0x61]
  41eebd:	cmp    r11b,0x5
  41eec1:	ja     41f110 <__flatcc_error_report@@Base+0xda0>
  41eec7:	shl    rcx,0x4
  41eecb:	movzx  r9d,r9b
  41eecf:	lea    rcx,[rcx+r9*1-0x57]
  41eed4:	jmp    41ee99 <__flatcc_error_report@@Base+0xb29>
  41eed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eee0:	cmp    BYTE PTR [rax],0x2e
  41eee3:	je     41f070 <__flatcc_error_report@@Base+0xd00>
  41eee9:	test   r13,r13
  41eeec:	je     41ec68 <__flatcc_error_report@@Base+0x8f8>
  41eef2:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x29586]        # 448480 <fb_schema_table_missing@@Base+0xfc0>
  41eefa:	vmovsd QWORD PTR [r12],xmm0
  41ef00:	jmp    41ec1c <__flatcc_error_report@@Base+0x8ac>
  41ef05:	nop    DWORD PTR [rax]
  41ef08:	mov    rdx,rbx
  41ef0b:	mov    rbx,r15
  41ef0e:	jmp    41ec7a <__flatcc_error_report@@Base+0x90a>
  41ef13:	nop    DWORD PTR [rax+rax*1+0x0]
  41ef18:	mov    r13,rbx
  41ef1b:	mov    rbx,r15
  41ef1e:	jmp    41ee0b <__flatcc_error_report@@Base+0xa9b>
  41ef23:	nop    DWORD PTR [rax+rax*1+0x0]
  41ef28:	xor    r13d,r13d
  41ef2b:	mov    r8,QWORD PTR [rbx]
  41ef2e:	movsxd rsi,DWORD PTR [rbx+0x8]
  41ef32:	mov    eax,0x5
  41ef37:	add    rsi,r8
  41ef3a:	mov    WORD PTR [r12+0x10],ax
  41ef40:	cmp    r8,rsi
  41ef43:	je     41efb0 <__flatcc_error_report@@Base+0xc40>
  41ef45:	movzx  r9d,BYTE PTR [r8]
  41ef49:	xor    edi,edi
  41ef4b:	cmp    r9b,0x2d
  41ef4f:	sete   dil
  41ef53:	add    rdi,r8
  41ef56:	cmp    rsi,rdi
  41ef59:	je     41efb0 <__flatcc_error_report@@Base+0xc40>
  41ef5b:	movsx  rdx,BYTE PTR [rdi]
  41ef5f:	lea    eax,[rdx-0x30]
  41ef62:	cmp    al,0x9
  41ef64:	ja     41efb0 <__flatcc_error_report@@Base+0xc40>
  41ef66:	sub    rdx,0x30
  41ef6a:	mov    rcx,rdi
  41ef6d:	jmp    41ef81 <__flatcc_error_report@@Base+0xc11>
  41ef6f:	nop
  41ef70:	lea    r10,[rdx+rdx*4]
  41ef74:	lea    rax,[rax+r10*2-0x30]
  41ef79:	cmp    rax,rdx
  41ef7c:	jb     41efb0 <__flatcc_error_report@@Base+0xc40>
  41ef7e:	mov    rdx,rax
  41ef81:	inc    rcx
  41ef84:	cmp    rsi,rcx
  41ef87:	je     41efe8 <__flatcc_error_report@@Base+0xc78>
  41ef89:	movsx  rax,BYTE PTR [rcx]
  41ef8d:	lea    r10d,[rax-0x30]
  41ef91:	cmp    r10b,0x9
  41ef95:	jbe    41ef70 <__flatcc_error_report@@Base+0xc00>
  41ef97:	cmp    r8,rcx
  41ef9a:	je     41efb0 <__flatcc_error_report@@Base+0xc40>
  41ef9c:	cmp    rdi,rcx
  41ef9f:	je     41efb0 <__flatcc_error_report@@Base+0xc40>
  41efa1:	cmp    al,0x50
  41efa3:	je     41efb0 <__flatcc_error_report@@Base+0xc40>
  41efa5:	jg     41efe0 <__flatcc_error_report@@Base+0xc70>
  41efa7:	cmp    al,0x2e
  41efa9:	je     41efb0 <__flatcc_error_report@@Base+0xc40>
  41efab:	cmp    al,0x45
  41efad:	jne    41efe8 <__flatcc_error_report@@Base+0xc78>
  41efaf:	nop
  41efb0:	mov    eax,0x1
  41efb5:	mov    WORD PTR [r12+0x10],ax
  41efbb:	xor    r9d,r9d
  41efbe:	xor    r8d,r8d
  41efc1:	xor    ecx,ecx
  41efc3:	lea    rdx,[rip+0x28eb8]        # 447e82 <fb_schema_table_missing@@Base+0x9c2>
  41efca:	mov    rsi,rbx
  41efcd:	mov    rdi,rbp
  41efd0:	call   41e370 <__flatcc_error_report@@Base>
  41efd5:	jmp    41eff2 <__flatcc_error_report@@Base+0xc82>
  41efd7:	nop    WORD PTR [rax+rax*1+0x0]
  41efe0:	cmp    al,0x65
  41efe2:	je     41efb0 <__flatcc_error_report@@Base+0xc40>
  41efe4:	cmp    al,0x70
  41efe6:	je     41efb0 <__flatcc_error_report@@Base+0xc40>
  41efe8:	mov    QWORD PTR [r12],rdx
  41efec:	cmp    r9b,0x2d
  41eff0:	je     41efb0 <__flatcc_error_report@@Base+0xc40>
  41eff2:	test   r13,r13
  41eff5:	je     41ec68 <__flatcc_error_report@@Base+0x8f8>
  41effb:	mov    eax,0x4
  41f000:	neg    QWORD PTR [r12]
  41f004:	mov    WORD PTR [r12+0x10],ax
  41f00a:	jmp    41ec68 <__flatcc_error_report@@Base+0x8f8>
  41f00f:	movzx  eax,BYTE PTR [rdx]
  41f012:	lea    edx,[rax-0x30]
  41f015:	cmp    dl,0x9
  41f018:	jbe    41f030 <__flatcc_error_report@@Base+0xcc0>
  41f01a:	or     eax,0x20
  41f01d:	lea    edx,[rax-0x61]
  41f020:	cmp    dl,0x5
  41f023:	ja     41f127 <__flatcc_error_report@@Base+0xdb7>
  41f029:	nop    DWORD PTR [rax+0x0]
  41f030:	mov    eax,0x1
  41f035:	mov    WORD PTR [r12+0x10],ax
  41f03b:	xor    r9d,r9d
  41f03e:	xor    r8d,r8d
  41f041:	xor    ecx,ecx
  41f043:	lea    rdx,[rip+0x28e1d]        # 447e67 <fb_schema_table_missing@@Base+0x9a7>
  41f04a:	mov    rsi,rbx
  41f04d:	mov    rdi,rbp
  41f050:	call   41e370 <__flatcc_error_report@@Base>
  41f055:	jmp    41eff2 <__flatcc_error_report@@Base+0xc82>
  41f057:	nop    WORD PTR [rax+rax*1+0x0]
  41f060:	mov    edi,0x1
  41f065:	mov    WORD PTR [r12+0x10],di
  41f06b:	jmp    41ed2e <__flatcc_error_report@@Base+0x9be>
  41f070:	mov    r11d,0x1
  41f076:	mov    WORD PTR [r12+0x10],r11w
  41f07c:	xor    r9d,r9d
  41f07f:	xor    r8d,r8d
  41f082:	xor    ecx,ecx
  41f084:	lea    rdx,[rip+0x2863d]        # 4476c8 <fb_schema_table_missing@@Base+0x208>
  41f08b:	mov    rsi,rbx
  41f08e:	mov    rdi,rbp
  41f091:	call   41e370 <__flatcc_error_report@@Base>
  41f096:	jmp    41ec17 <__flatcc_error_report@@Base+0x8a7>
  41f09b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f0a0:	mov    BYTE PTR [r12],0x1
  41f0a5:	mov    ecx,0x1
  41f0aa:	mov    WORD PTR [r12+0x10],cx
  41f0b0:	xor    r9d,r9d
  41f0b3:	xor    r8d,r8d
  41f0b6:	xor    ecx,ecx
  41f0b8:	lea    rdx,[rip+0x28659]        # 447718 <fb_schema_table_missing@@Base+0x258>
  41f0bf:	mov    rsi,r15
  41f0c2:	mov    rdi,rbp
  41f0c5:	call   41e370 <__flatcc_error_report@@Base>
  41f0ca:	jmp    41ec68 <__flatcc_error_report@@Base+0x8f8>
  41f0cf:	nop
  41f0d0:	mov    r13,rbx
  41f0d3:	mov    rbx,r15
  41f0d6:	jmp    41ef2b <__flatcc_error_report@@Base+0xbbb>
  41f0db:	nop    DWORD PTR [rax+rax*1+0x0]
  41f0e0:	mov    BYTE PTR [r12],0x0
  41f0e5:	jmp    41f0a5 <__flatcc_error_report@@Base+0xd35>
  41f0e7:	nop    WORD PTR [rax+rax*1+0x0]
  41f0f0:	cmp    r8,rdx
  41f0f3:	jne    41f00f <__flatcc_error_report@@Base+0xc9f>
  41f0f9:	mov    QWORD PTR [r12],rcx
  41f0fd:	cmp    dil,0x2d
  41f101:	jne    41eff2 <__flatcc_error_report@@Base+0xc82>
  41f107:	jmp    41f030 <__flatcc_error_report@@Base+0xcc0>
  41f10c:	nop    DWORD PTR [rax+0x0]
  41f110:	cmp    r10,rdx
  41f113:	je     41f030 <__flatcc_error_report@@Base+0xcc0>
  41f119:	cmp    r8,rdx
  41f11c:	je     41f0f9 <__flatcc_error_report@@Base+0xd89>
  41f11e:	cmp    rsi,rdx
  41f121:	je     41f012 <__flatcc_error_report@@Base+0xca2>
  41f127:	cmp    al,0x50
  41f129:	je     41f030 <__flatcc_error_report@@Base+0xcc0>
  41f12f:	cmp    al,0x70
  41f131:	je     41f030 <__flatcc_error_report@@Base+0xcc0>
  41f137:	cmp    al,0x2e
  41f139:	jne    41f0f9 <__flatcc_error_report@@Base+0xd89>
  41f13b:	jmp    41f030 <__flatcc_error_report@@Base+0xcc0>
  41f140:	call   4052d0 <__stack_chk_fail@plt>
  41f145:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f150:	push   r15
  41f152:	push   r14
  41f154:	push   r13
  41f156:	push   r12
  41f158:	push   rbp
  41f159:	push   rbx
  41f15a:	xor    ebx,ebx
  41f15c:	sub    rsp,0x18
  41f160:	mov    r12,QWORD PTR [rdi+0x48]
  41f164:	cmp    QWORD PTR [r12+0x20],0x28
  41f16a:	je     41f180 <__flatcc_error_report@@Base+0xe10>
  41f16c:	add    rsp,0x18
  41f170:	mov    rax,rbx
  41f173:	pop    rbx
  41f174:	pop    rbp
  41f175:	pop    r12
  41f177:	pop    r13
  41f179:	pop    r14
  41f17b:	pop    r15
  41f17d:	ret    
  41f17e:	xchg   ax,ax
  41f180:	mov    rbp,rdi
  41f183:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f188:	mov    r15,QWORD PTR [rbp+0x48]
  41f18c:	cmp    QWORD PTR [r15+0x20],0x9
  41f191:	je     41f1b0 <__flatcc_error_report@@Base+0xe40>
  41f193:	mov    rcx,r12
  41f196:	lea    rdx,[rip+0x285a3]        # 447740 <fb_schema_table_missing@@Base+0x280>
  41f19d:	mov    esi,0x29
  41f1a2:	mov    rdi,rbp
  41f1a5:	call   41e660 <__flatcc_error_report@@Base+0x2f0>
  41f1aa:	jmp    41f16c <__flatcc_error_report@@Base+0xdfc>
  41f1ac:	nop    DWORD PTR [rax+0x0]
  41f1b0:	mov    rdi,rbp
  41f1b3:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f1b8:	lea    r14,[rip+0x285a1]        # 447760 <fb_schema_table_missing@@Base+0x2a0>
  41f1bf:	xor    edx,edx
  41f1c1:	mov    r13,QWORD PTR [rbp+0x60]
  41f1c5:	lea    rax,[r13+0x30]
  41f1c9:	cmp    rax,QWORD PTR [rbp+0x50]
  41f1cd:	ja     41f288 <__flatcc_error_report@@Base+0xf18>
  41f1d3:	mov    QWORD PTR [rbp+0x60],rax
  41f1d7:	mov    rax,QWORD PTR [rbp+0x48]
  41f1db:	mov    rbx,r13
  41f1de:	cmp    QWORD PTR [rax+0x20],0x3a
  41f1e3:	mov    QWORD PTR [r13+0x0],rdx
  41f1e7:	mov    QWORD PTR [r13+0x8],r15
  41f1eb:	jne    41f209 <__flatcc_error_report@@Base+0xe99>
  41f1ed:	mov    rdi,rbp
  41f1f0:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f1f5:	lea    rsi,[r13+0x10]
  41f1f9:	mov    rcx,r14
  41f1fc:	mov    edx,0x1
  41f201:	mov    rdi,rbp
  41f204:	call   41eb50 <__flatcc_error_report@@Base+0x7e0>
  41f209:	cmp    DWORD PTR [rbp+0xd0],0x9
  41f210:	jg     41f16c <__flatcc_error_report@@Base+0xdfc>
  41f216:	mov    rax,QWORD PTR [rbp+0x48]
  41f21a:	cmp    QWORD PTR [rax+0x20],0x2c
  41f21f:	je     41f260 <__flatcc_error_report@@Base+0xef0>
  41f221:	lea    rdx,[rip+0x28518]        # 447740 <fb_schema_table_missing@@Base+0x280>
  41f228:	mov    rcx,r12
  41f22b:	mov    esi,0x29
  41f230:	mov    rdi,rbp
  41f233:	call   41e660 <__flatcc_error_report@@Base+0x2f0>
  41f238:	xor    edx,edx
  41f23a:	jmp    41f243 <__flatcc_error_report@@Base+0xed3>
  41f23c:	nop    DWORD PTR [rax+0x0]
  41f240:	mov    rbx,rax
  41f243:	mov    rax,QWORD PTR [rbx]
  41f246:	mov    QWORD PTR [rbx],rdx
  41f249:	mov    rdx,rbx
  41f24c:	test   rax,rax
  41f24f:	jne    41f240 <__flatcc_error_report@@Base+0xed0>
  41f251:	jmp    41f16c <__flatcc_error_report@@Base+0xdfc>
  41f256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f260:	mov    rdi,rbp
  41f263:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f268:	mov    r15,QWORD PTR [rbp+0x48]
  41f26c:	cmp    QWORD PTR [r15+0x20],0x9
  41f271:	jne    41f2d0 <__flatcc_error_report@@Base+0xf60>
  41f273:	mov    rdi,rbp
  41f276:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f27b:	mov    rdx,r13
  41f27e:	jmp    41f1c1 <__flatcc_error_report@@Base+0xe51>
  41f283:	nop    DWORD PTR [rax+rax*1+0x0]
  41f288:	mov    esi,0x1
  41f28d:	mov    edi,0x10000
  41f292:	mov    QWORD PTR [rsp+0x8],rdx
  41f297:	call   405340 <calloc@plt>
  41f29c:	test   rax,rax
  41f29f:	mov    rdx,QWORD PTR [rsp+0x8]
  41f2a4:	je     41f2ef <__flatcc_error_report@@Base+0xf7f>
  41f2a6:	mov    rcx,QWORD PTR [rbp+0x58]
  41f2aa:	lea    r13,[rax+0x10]
  41f2ae:	mov    QWORD PTR [rax],rcx
  41f2b1:	lea    rcx,[rax+0x10000]
  41f2b8:	mov    QWORD PTR [rbp+0x58],rax
  41f2bc:	mov    QWORD PTR [rbp+0x50],rcx
  41f2c0:	add    rax,0x40
  41f2c4:	jmp    41f1d3 <__flatcc_error_report@@Base+0xe63>
  41f2c9:	nop    DWORD PTR [rax+0x0]
  41f2d0:	xor    r9d,r9d
  41f2d3:	xor    r8d,r8d
  41f2d6:	xor    ecx,ecx
  41f2d8:	lea    rdx,[rip+0x284a1]        # 447780 <fb_schema_table_missing@@Base+0x2c0>
  41f2df:	mov    rsi,r15
  41f2e2:	mov    rdi,rbp
  41f2e5:	call   41e370 <__flatcc_error_report@@Base>
  41f2ea:	jmp    41f221 <__flatcc_error_report@@Base+0xeb1>
  41f2ef:	call   41df20 <__flatcc_fb_default_error_out@@Base+0x30>
  41f2f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f2ff:	nop
  41f300:	push   r15
  41f302:	push   r14
  41f304:	push   r13
  41f306:	push   r12
  41f308:	push   rbp
  41f309:	push   rbx
  41f30a:	mov    rbx,rdi
  41f30d:	sub    rsp,0x8
  41f311:	mov    rbp,QWORD PTR [rdi+0x48]
  41f315:	cmp    QWORD PTR [rbp+0x20],0x9
  41f31a:	jne    41f710 <__flatcc_error_report@@Base+0x13a0>
  41f320:	mov    r12,rsi
  41f323:	mov    r13,rdx
  41f326:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f32b:	mov    QWORD PTR [r12+0x8],rbp
  41f330:	mov    rdi,rbx
  41f333:	call   41f150 <__flatcc_error_report@@Base+0xde0>
  41f338:	mov    rsi,QWORD PTR [rbx+0x48]
  41f33c:	mov    QWORD PTR [r12+0x38],rax
  41f341:	cmp    QWORD PTR [rsi+0x20],0x7b
  41f346:	jne    41f4c0 <__flatcc_error_report@@Base+0x1150>
  41f34c:	mov    rdi,rbx
  41f34f:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f354:	mov    r15,QWORD PTR [rbx+0x48]
  41f358:	mov    r14,QWORD PTR [r15+0x20]
  41f35c:	cmp    r14,0x7d
  41f360:	je     41f47e <__flatcc_error_report@@Base+0x110e>
  41f366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f370:	mov    rbp,QWORD PTR [rbx+0x60]
  41f374:	mov    rcx,QWORD PTR [rbx+0x50]
  41f378:	lea    rax,[rbp+0xb0]
  41f37f:	cmp    r13,0xfffffffffffffc39
  41f386:	je     41f4f8 <__flatcc_error_report@@Base+0x1188>
  41f38c:	cmp    rcx,rax
  41f38f:	jb     41f630 <__flatcc_error_report@@Base+0x12c0>
  41f395:	mov    QWORD PTR [rbx+0x60],rax
  41f399:	mov    rax,QWORD PTR [r12+0x28]
  41f39e:	mov    QWORD PTR [rbp+0x0],rax
  41f3a2:	mov    eax,0x5
  41f3a7:	mov    WORD PTR [rbp+0x10],ax
  41f3ab:	mov    QWORD PTR [r12+0x28],rbp
  41f3b0:	mov    rax,QWORD PTR [rbx+0x40]
  41f3b4:	test   rax,rax
  41f3b7:	je     41f3d1 <__flatcc_error_report@@Base+0x1061>
  41f3b9:	xor    esi,esi
  41f3bb:	jmp    41f3c3 <__flatcc_error_report@@Base+0x1053>
  41f3bd:	nop    DWORD PTR [rax]
  41f3c0:	mov    rax,rcx
  41f3c3:	mov    rcx,QWORD PTR [rax]
  41f3c6:	mov    QWORD PTR [rax],rsi
  41f3c9:	mov    rsi,rax
  41f3cc:	test   rcx,rcx
  41f3cf:	jne    41f3c0 <__flatcc_error_report@@Base+0x1050>
  41f3d1:	mov    QWORD PTR [rbp+0x68],rax
  41f3d5:	mov    QWORD PTR [rbx+0x40],0x0
  41f3dd:	cmp    r14,0x9
  41f3e1:	jne    41f600 <__flatcc_error_report@@Base+0x1290>
  41f3e7:	mov    rdi,rbx
  41f3ea:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f3ef:	mov    rsi,QWORD PTR [rbx+0x48]
  41f3f3:	mov    QWORD PTR [rbp+0x8],r15
  41f3f7:	cmp    QWORD PTR [rsi+0x20],0x3a
  41f3fc:	jne    41f670 <__flatcc_error_report@@Base+0x1300>
  41f402:	mov    rdi,rbx
  41f405:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f40a:	lea    rsi,[rbp+0x18]
  41f40e:	mov    rdi,rbx
  41f411:	call   41e6a0 <__flatcc_error_report@@Base+0x330>
  41f416:	mov    rax,QWORD PTR [rbx+0x48]
  41f41a:	cmp    QWORD PTR [rax+0x20],0x3d
  41f41f:	jne    41f441 <__flatcc_error_report@@Base+0x10d1>
  41f421:	mov    rdi,rbx
  41f424:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f429:	lea    rsi,[rbp+0x48]
  41f42d:	lea    rcx,[rip+0x284ac]        # 4478e0 <fb_schema_table_missing@@Base+0x420>
  41f434:	mov    edx,0x2
  41f439:	mov    rdi,rbx
  41f43c:	call   41eb50 <__flatcc_error_report@@Base+0x7e0>
  41f441:	mov    rdi,rbx
  41f444:	call   41f150 <__flatcc_error_report@@Base+0xde0>
  41f449:	mov    QWORD PTR [rbp+0x60],rax
  41f44d:	xor    ecx,ecx
  41f44f:	lea    rdx,[rip+0x284b2]        # 447908 <fb_schema_table_missing@@Base+0x448>
  41f456:	mov    esi,0x3b
  41f45b:	mov    rdi,rbx
  41f45e:	call   41e660 <__flatcc_error_report@@Base+0x2f0>
  41f463:	cmp    DWORD PTR [rbx+0xd0],0x9
  41f46a:	jg     41f4d7 <__flatcc_error_report@@Base+0x1167>
  41f46c:	mov    r15,QWORD PTR [rbx+0x48]
  41f470:	mov    r14,QWORD PTR [r15+0x20]
  41f474:	cmp    r14,0x7d
  41f478:	jne    41f370 <__flatcc_error_report@@Base+0x1000>
  41f47e:	mov    rdi,rbx
  41f481:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f486:	mov    rax,QWORD PTR [r12+0x28]
  41f48b:	test   rax,rax
  41f48e:	je     41f4a9 <__flatcc_error_report@@Base+0x1139>
  41f490:	xor    ecx,ecx
  41f492:	jmp    41f49b <__flatcc_error_report@@Base+0x112b>
  41f494:	nop    DWORD PTR [rax+0x0]
  41f498:	mov    rax,rdx
  41f49b:	mov    rdx,QWORD PTR [rax]
  41f49e:	mov    QWORD PTR [rax],rcx
  41f4a1:	mov    rcx,rax
  41f4a4:	test   rdx,rdx
  41f4a7:	jne    41f498 <__flatcc_error_report@@Base+0x1128>
  41f4a9:	mov    QWORD PTR [r12+0x28],rax
  41f4ae:	add    rsp,0x8
  41f4b2:	pop    rbx
  41f4b3:	pop    rbp
  41f4b4:	pop    r12
  41f4b6:	pop    r13
  41f4b8:	pop    r14
  41f4ba:	pop    r15
  41f4bc:	ret    
  41f4bd:	nop    DWORD PTR [rax]
  41f4c0:	xor    r9d,r9d
  41f4c3:	xor    r8d,r8d
  41f4c6:	xor    ecx,ecx
  41f4c8:	lea    rdx,[rip+0x289fd]        # 447ecc <fb_schema_table_missing@@Base+0xa0c>
  41f4cf:	mov    rdi,rbx
  41f4d2:	call   41e370 <__flatcc_error_report@@Base>
  41f4d7:	add    rsp,0x8
  41f4db:	mov    rdi,rbx
  41f4de:	pop    rbx
  41f4df:	pop    rbp
  41f4e0:	pop    r12
  41f4e2:	pop    r13
  41f4e4:	pop    r14
  41f4e6:	mov    esi,0x7d
  41f4eb:	pop    r15
  41f4ed:	jmp    41e190 <__flatcc_fb_default_error_out@@Base+0x2a0>
  41f4f2:	nop    WORD PTR [rax+rax*1+0x0]
  41f4f8:	cmp    rcx,rax
  41f4fb:	jb     41f6b0 <__flatcc_error_report@@Base+0x1340>
  41f501:	mov    QWORD PTR [rbx+0x60],rax
  41f505:	mov    rax,QWORD PTR [r12+0x28]
  41f50a:	mov    edx,0x5
  41f50f:	mov    QWORD PTR [rbp+0x0],rax
  41f513:	mov    WORD PTR [rbp+0x10],dx
  41f517:	mov    QWORD PTR [r12+0x28],rbp
  41f51c:	mov    rax,QWORD PTR [rbx+0x40]
  41f520:	test   rax,rax
  41f523:	je     41f541 <__flatcc_error_report@@Base+0x11d1>
  41f525:	xor    esi,esi
  41f527:	jmp    41f533 <__flatcc_error_report@@Base+0x11c3>
  41f529:	nop    DWORD PTR [rax+0x0]
  41f530:	mov    rax,rcx
  41f533:	mov    rcx,QWORD PTR [rax]
  41f536:	mov    QWORD PTR [rax],rsi
  41f539:	mov    rsi,rax
  41f53c:	test   rcx,rcx
  41f53f:	jne    41f530 <__flatcc_error_report@@Base+0x11c0>
  41f541:	mov    QWORD PTR [rbp+0x68],rax
  41f545:	mov    QWORD PTR [rbx+0x40],0x0
  41f54d:	cmp    r14,0x9
  41f551:	jne    41f690 <__flatcc_error_report@@Base+0x1320>
  41f557:	mov    rdi,rbx
  41f55a:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f55f:	mov    rsi,QWORD PTR [rbx+0x48]
  41f563:	mov    QWORD PTR [rbp+0x8],r15
  41f567:	cmp    QWORD PTR [rsi+0x20],0x28
  41f56c:	jne    41f6f0 <__flatcc_error_report@@Base+0x1380>
  41f572:	mov    rdi,rbx
  41f575:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f57a:	lea    rsi,[rbp+0x30]
  41f57e:	mov    rdi,rbx
  41f581:	call   41e6a0 <__flatcc_error_report@@Base+0x330>
  41f586:	mov    rsi,QWORD PTR [rbx+0x48]
  41f58a:	cmp    QWORD PTR [rsi+0x20],0x29
  41f58f:	jne    41f730 <__flatcc_error_report@@Base+0x13c0>
  41f595:	mov    rdi,rbx
  41f598:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f59d:	mov    rsi,QWORD PTR [rbx+0x48]
  41f5a1:	cmp    QWORD PTR [rsi+0x20],0x3a
  41f5a6:	jne    41f750 <__flatcc_error_report@@Base+0x13e0>
  41f5ac:	mov    rdi,rbx
  41f5af:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f5b4:	lea    rsi,[rbp+0x18]
  41f5b8:	mov    rdi,rbx
  41f5bb:	call   41e6a0 <__flatcc_error_report@@Base+0x330>
  41f5c0:	mov    r15,QWORD PTR [rbx+0x48]
  41f5c4:	cmp    QWORD PTR [r15+0x20],0x3d
  41f5c9:	je     41f770 <__flatcc_error_report@@Base+0x1400>
  41f5cf:	mov    rdi,rbx
  41f5d2:	call   41f150 <__flatcc_error_report@@Base+0xde0>
  41f5d7:	mov    QWORD PTR [rbp+0x60],rax
  41f5db:	xor    ecx,ecx
  41f5dd:	lea    rdx,[rip+0x2827c]        # 447860 <fb_schema_table_missing@@Base+0x3a0>
  41f5e4:	mov    esi,0x3b
  41f5e9:	mov    rdi,rbx
  41f5ec:	call   41e660 <__flatcc_error_report@@Base+0x2f0>
  41f5f1:	jmp    41f463 <__flatcc_error_report@@Base+0x10f3>
  41f5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f600:	xor    r9d,r9d
  41f603:	xor    r8d,r8d
  41f606:	xor    ecx,ecx
  41f608:	lea    rdx,[rip+0x288f1]        # 447f00 <fb_schema_table_missing@@Base+0xa40>
  41f60f:	mov    rsi,r15
  41f612:	mov    rdi,rbx
  41f615:	call   41e370 <__flatcc_error_report@@Base>
  41f61a:	mov    rdi,rbx
  41f61d:	call   41e130 <__flatcc_fb_default_error_out@@Base+0x240>
  41f622:	jmp    41f463 <__flatcc_error_report@@Base+0x10f3>
  41f627:	nop    WORD PTR [rax+rax*1+0x0]
  41f630:	mov    esi,0x1
  41f635:	mov    edi,0x10000
  41f63a:	call   405340 <calloc@plt>
  41f63f:	test   rax,rax
  41f642:	je     41f797 <__flatcc_error_report@@Base+0x1427>
  41f648:	mov    rcx,QWORD PTR [rbx+0x58]
  41f64c:	lea    rbp,[rax+0x10]
  41f650:	mov    QWORD PTR [rax],rcx
  41f653:	lea    rcx,[rax+0x10000]
  41f65a:	mov    QWORD PTR [rbx+0x58],rax
  41f65e:	mov    QWORD PTR [rbx+0x50],rcx
  41f662:	add    rax,0xc0
  41f668:	jmp    41f395 <__flatcc_error_report@@Base+0x1025>
  41f66d:	nop    DWORD PTR [rax]
  41f670:	xor    r9d,r9d
  41f673:	xor    r8d,r8d
  41f676:	xor    ecx,ecx
  41f678:	lea    rdx,[rip+0x28231]        # 4478b0 <fb_schema_table_missing@@Base+0x3f0>
  41f67f:	mov    rdi,rbx
  41f682:	call   41e370 <__flatcc_error_report@@Base>
  41f687:	jmp    41f61a <__flatcc_error_report@@Base+0x12aa>
  41f689:	nop    DWORD PTR [rax+0x0]
  41f690:	xor    r9d,r9d
  41f693:	xor    r8d,r8d
  41f696:	xor    ecx,ecx
  41f698:	lea    rdx,[rip+0x28846]        # 447ee5 <fb_schema_table_missing@@Base+0xa25>
  41f69f:	mov    rsi,r15
  41f6a2:	mov    rdi,rbx
  41f6a5:	call   41e370 <__flatcc_error_report@@Base>
  41f6aa:	jmp    41f61a <__flatcc_error_report@@Base+0x12aa>
  41f6af:	nop
  41f6b0:	mov    esi,0x1
  41f6b5:	mov    edi,0x10000
  41f6ba:	call   405340 <calloc@plt>
  41f6bf:	test   rax,rax
  41f6c2:	je     41f797 <__flatcc_error_report@@Base+0x1427>
  41f6c8:	mov    rcx,QWORD PTR [rbx+0x58]
  41f6cc:	lea    rbp,[rax+0x10]
  41f6d0:	mov    QWORD PTR [rax],rcx
  41f6d3:	lea    rcx,[rax+0x10000]
  41f6da:	mov    QWORD PTR [rbx+0x58],rax
  41f6de:	mov    QWORD PTR [rbx+0x50],rcx
  41f6e2:	add    rax,0xc0
  41f6e8:	jmp    41f501 <__flatcc_error_report@@Base+0x1191>
  41f6ed:	nop    DWORD PTR [rax]
  41f6f0:	xor    r9d,r9d
  41f6f3:	xor    r8d,r8d
  41f6f6:	xor    ecx,ecx
  41f6f8:	lea    rdx,[rip+0x280d9]        # 4477d8 <fb_schema_table_missing@@Base+0x318>
  41f6ff:	mov    rdi,rbx
  41f702:	call   41e370 <__flatcc_error_report@@Base>
  41f707:	jmp    41f61a <__flatcc_error_report@@Base+0x12aa>
  41f70c:	nop    DWORD PTR [rax+0x0]
  41f710:	xor    r9d,r9d
  41f713:	xor    r8d,r8d
  41f716:	xor    ecx,ecx
  41f718:	lea    rdx,[rip+0x28091]        # 4477b0 <fb_schema_table_missing@@Base+0x2f0>
  41f71f:	mov    rsi,rbp
  41f722:	call   41e370 <__flatcc_error_report@@Base>
  41f727:	jmp    41f4d7 <__flatcc_error_report@@Base+0x1167>
  41f72c:	nop    DWORD PTR [rax+0x0]
  41f730:	xor    r9d,r9d
  41f733:	xor    r8d,r8d
  41f736:	xor    ecx,ecx
  41f738:	lea    rdx,[rip+0x280c1]        # 447800 <fb_schema_table_missing@@Base+0x340>
  41f73f:	mov    rdi,rbx
  41f742:	call   41e370 <__flatcc_error_report@@Base>
  41f747:	jmp    41f61a <__flatcc_error_report@@Base+0x12aa>
  41f74c:	nop    DWORD PTR [rax+0x0]
  41f750:	xor    r9d,r9d
  41f753:	xor    r8d,r8d
  41f756:	xor    ecx,ecx
  41f758:	lea    rdx,[rip+0x280c9]        # 447828 <fb_schema_table_missing@@Base+0x368>
  41f75f:	mov    rdi,rbx
  41f762:	call   41e370 <__flatcc_error_report@@Base>
  41f767:	jmp    41f61a <__flatcc_error_report@@Base+0x12aa>
  41f76c:	nop    DWORD PTR [rax+0x0]
  41f770:	mov    rdi,rbx
  41f773:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41f778:	xor    r9d,r9d
  41f77b:	xor    r8d,r8d
  41f77e:	xor    ecx,ecx
  41f780:	lea    rdx,[rip+0x28101]        # 447888 <fb_schema_table_missing@@Base+0x3c8>
  41f787:	mov    rsi,r15
  41f78a:	mov    rdi,rbx
  41f78d:	call   41e370 <__flatcc_error_report@@Base>
  41f792:	jmp    41f61a <__flatcc_error_report@@Base+0x12aa>
  41f797:	call   41df20 <__flatcc_fb_default_error_out@@Base+0x30>
  41f79c:	nop    DWORD PTR [rax+0x0]

000000000041f7a0 <error_ref_sym@@Base>:
  41f7a0:	endbr64 
  41f7a4:	push   r15
  41f7a6:	push   r14
  41f7a8:	push   r13
  41f7aa:	push   r12
  41f7ac:	mov    r12,rcx
  41f7af:	push   rbp
  41f7b0:	push   rbx
  41f7b1:	sub    rsp,0x68
  41f7b5:	mov    QWORD PTR [rsp+0x8],rdi
  41f7ba:	mov    QWORD PTR [rsp+0x10],rsi
  41f7bf:	mov    QWORD PTR [rsp+0x18],rdx
  41f7c4:	mov    rdx,QWORD PTR fs:0x28
  41f7cd:	mov    QWORD PTR [rsp+0x58],rdx
  41f7d2:	xor    edx,edx
  41f7d4:	test   rsi,rsi
  41f7d7:	je     41f8b0 <error_ref_sym@@Base+0x110>
  41f7dd:	mov    r13,rsi
  41f7e0:	xor    r15d,r15d
  41f7e3:	mov    r14d,0x32
  41f7e9:	lea    rbp,[rsp+0x20]
  41f7ee:	xchg   ax,ax
  41f7f0:	mov    rax,QWORD PTR [r13+0x8]
  41f7f4:	movsxd rdi,r15d
  41f7f7:	mov    rbx,QWORD PTR [rax+0x8]
  41f7fb:	mov    rsi,QWORD PTR [rax]
  41f7fe:	cmp    ebx,r14d
  41f801:	cmovg  ebx,r14d
  41f805:	add    rdi,rbp
  41f808:	movsxd rdx,ebx
  41f80b:	call   405370 <memcpy@plt>
  41f810:	lea    r9d,[rbx+r15*1]
  41f814:	movsxd rax,r9d
  41f817:	mov    BYTE PTR [rsp+rax*1+0x20],0x2e
  41f81c:	mov    ecx,r14d
  41f81f:	sub    ecx,ebx
  41f821:	mov    r13,QWORD PTR [r13+0x0]
  41f825:	lea    r14d,[rcx-0x1]
  41f829:	lea    r15d,[r9+0x1]
  41f82d:	test   r13,r13
  41f830:	je     41f837 <error_ref_sym@@Base+0x97>
  41f832:	test   r14d,r14d
  41f835:	jg     41f7f0 <error_ref_sym@@Base+0x50>
  41f837:	movsxd rax,r15d
  41f83a:	test   r15d,r15d
  41f83d:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  41f842:	cmovle r9d,r15d
  41f846:	test   r14d,r14d
  41f849:	jle    41f898 <error_ref_sym@@Base+0xf8>
  41f84b:	test   r12,r12
  41f84e:	je     41f855 <error_ref_sym@@Base+0xb5>
  41f850:	mov    r12,QWORD PTR [r12+0x8]
  41f855:	mov    rax,QWORD PTR [rsp+0x10]
  41f85a:	mov    rdx,QWORD PTR [rsp+0x18]
  41f85f:	mov    rsi,QWORD PTR [rax+0x8]
  41f863:	mov    rdi,QWORD PTR [rsp+0x8]
  41f868:	mov    r8,rbp
  41f86b:	mov    rcx,r12
  41f86e:	call   41e370 <__flatcc_error_report@@Base>
  41f873:	mov    rax,QWORD PTR [rsp+0x58]
  41f878:	xor    rax,QWORD PTR fs:0x28
  41f881:	jne    41f8bf <error_ref_sym@@Base+0x11f>
  41f883:	add    rsp,0x68
  41f887:	pop    rbx
  41f888:	pop    rbp
  41f889:	pop    r12
  41f88b:	pop    r13
  41f88d:	pop    r14
  41f88f:	pop    r15
  41f891:	ret    
  41f892:	nop    WORD PTR [rax+rax*1+0x0]
  41f898:	mov    DWORD PTR [rsp+0x4f],0x2e2e2e
  41f8a0:	mov    r9d,0x32
  41f8a6:	jmp    41f84b <error_ref_sym@@Base+0xab>
  41f8a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f8b0:	mov    BYTE PTR [rsp+0x20],0x0
  41f8b5:	xor    r9d,r9d
  41f8b8:	lea    rbp,[rsp+0x20]
  41f8bd:	jmp    41f84b <error_ref_sym@@Base+0xab>
  41f8bf:	call   4052d0 <__stack_chk_fail@plt>
  41f8c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f8cf:	nop

000000000041f8d0 <__flatcc_fb_init_parser@@Base>:
  41f8d0:	endbr64 
  41f8d4:	push   r15
  41f8d6:	mov    r15,r8
  41f8d9:	push   r14
  41f8db:	mov    r14,rcx
  41f8de:	push   r13
  41f8e0:	mov    r13,r9
  41f8e3:	push   r12
  41f8e5:	mov    r12,rdx
  41f8e8:	mov    edx,0x358
  41f8ed:	push   rbp
  41f8ee:	mov    rbp,rsi
  41f8f1:	xor    esi,esi
  41f8f3:	push   rbx
  41f8f4:	mov    rbx,rdi
  41f8f7:	sub    rsp,0x18
  41f8fb:	call   405310 <memset@plt>
  41f900:	test   r14,r14
  41f903:	je     41faf0 <__flatcc_fb_init_parser@@Base+0x220>
  41f909:	mov    QWORD PTR [rbx+0x10],r14
  41f90d:	mov    QWORD PTR [rbx+0x18],r15
  41f911:	lea    rcx,[rbx+0xe8]
  41f918:	test   rbp,rbp
  41f91b:	je     41fb0b <__flatcc_fb_init_parser@@Base+0x23b>
  41f921:	mov    rax,QWORD PTR [rbp+0x0]
  41f925:	lea    rdi,[rbx+0xf0]
  41f92c:	mov    QWORD PTR [rbx+0xe8],rax
  41f933:	and    rdi,0xfffffffffffffff8
  41f937:	sub    rcx,rdi
  41f93a:	mov    rax,QWORD PTR [rbp+0x108]
  41f941:	mov    rsi,rbp
  41f944:	mov    QWORD PTR [rbx+0x1f0],rax
  41f94b:	sub    rsi,rcx
  41f94e:	add    ecx,0x110
  41f954:	shr    ecx,0x3
  41f957:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41f95a:	lea    rax,[rbx+0x268]
  41f961:	test   r13,r13
  41f964:	cmove  r13,rax
  41f968:	mov    eax,DWORD PTR [rbx+0x12c]
  41f96e:	mov    QWORD PTR [rbx+0x260],r13
  41f975:	cmp    eax,0x8
  41f978:	ja     41fbb8 <__flatcc_fb_init_parser@@Base+0x2e8>
  41f97e:	mov    edx,0x1
  41f983:	shlx   rax,rdx,rax
  41f988:	test   eax,0x114
  41f98d:	je     41fbb8 <__flatcc_fb_init_parser@@Base+0x2e8>
  41f993:	mov    eax,DWORD PTR [rbx+0x130]
  41f999:	cmp    eax,0x8
  41f99c:	ja     41fbe0 <__flatcc_fb_init_parser@@Base+0x310>
  41f9a2:	shlx   rdx,rdx,rax
  41f9a7:	test   edx,0x114
  41f9ad:	je     41fbe0 <__flatcc_fb_init_parser@@Base+0x310>
  41f9b3:	test   r12,r12
  41f9b6:	je     41fb20 <__flatcc_fb_init_parser@@Base+0x250>
  41f9bc:	mov    rdi,r12
  41f9bf:	call   4052c0 <strlen@plt>
  41f9c4:	mov    QWORD PTR [rsp+0x8],rax
  41f9c9:	mov    rdx,QWORD PTR [rbp+0x68]
  41f9cd:	mov    rsi,QWORD PTR [rsp+0x8]
  41f9d2:	mov    rdi,r12
  41f9d5:	call   41dd60 <__flatcc_fb_create_basename@@Base>
  41f9da:	mov    r13,rax
  41f9dd:	mov    QWORD PTR [rbx+0x308],rax
  41f9e4:	test   rax,rax
  41f9e7:	je     41fc03 <__flatcc_fb_init_parser@@Base+0x333>
  41f9ed:	mov    rdi,r13
  41f9f0:	call   4052c0 <strlen@plt>
  41f9f5:	mov    rsi,rax
  41f9f8:	mov    rdi,r13
  41f9fb:	mov    r14,rax
  41f9fe:	call   41d8e0 <__flatcc_fb_copy_path_n@@Base>
  41fa03:	mov    r15,rax
  41fa06:	test   rax,rax
  41fa09:	je     41fc03 <__flatcc_fb_init_parser@@Base+0x333>
  41fa0f:	test   r14,r14
  41fa12:	je     41fa4b <__flatcc_fb_init_parser@@Base+0x17b>
  41fa14:	movsx  r13,BYTE PTR [rax]
  41fa18:	test   r13b,r13b
  41fa1b:	je     41fa4b <__flatcc_fb_init_parser@@Base+0x17b>
  41fa1d:	call   405230 <__ctype_toupper_loc@plt>
  41fa22:	lea    rdi,[r15+r14*1-0x1]
  41fa27:	mov    rdx,r15
  41fa2a:	jmp    41fa3c <__flatcc_fb_init_parser@@Base+0x16c>
  41fa2c:	nop    DWORD PTR [rax+0x0]
  41fa30:	inc    rdx
  41fa33:	movsx  r13,BYTE PTR [rdx]
  41fa37:	test   r13b,r13b
  41fa3a:	je     41fa4b <__flatcc_fb_init_parser@@Base+0x17b>
  41fa3c:	mov    rsi,QWORD PTR [rax]
  41fa3f:	mov    esi,DWORD PTR [rsi+r13*4]
  41fa43:	mov    BYTE PTR [rdx],sil
  41fa46:	cmp    rdx,rdi
  41fa49:	jne    41fa30 <__flatcc_fb_init_parser@@Base+0x160>
  41fa4b:	mov    QWORD PTR [rbx+0x310],r15
  41fa52:	mov    QWORD PTR [rbx+0x2f0],r15
  41fa59:	mov    DWORD PTR [rbx+0x2f8],r14d
  41fa60:	mov    rsi,QWORD PTR [rsp+0x8]
  41fa65:	lea    rdx,[rip+0x26ef2]        # 44695e <_IO_stdin_used@@Base+0x1895e>
  41fa6c:	mov    rdi,r12
  41fa6f:	call   41dd60 <__flatcc_fb_create_basename@@Base>
  41fa74:	mov    QWORD PTR [rbx+0x318],rax
  41fa7b:	test   rax,rax
  41fa7e:	je     41fc03 <__flatcc_fb_init_parser@@Base+0x333>
  41fa84:	mov    rdi,QWORD PTR [rbp+0xe0]
  41fa8b:	test   rdi,rdi
  41fa8e:	je     41faa2 <__flatcc_fb_init_parser@@Base+0x1d2>
  41fa90:	mov    QWORD PTR [rbx+0x2d8],rdi
  41fa97:	call   4052c0 <strlen@plt>
  41fa9c:	mov    DWORD PTR [rbx+0x2e0],eax
  41faa2:	mov    rdi,QWORD PTR [rbx+0x260]
  41faa9:	xor    edx,edx
  41faab:	xor    esi,esi
  41faad:	call   41d090 <fb_scope_table_find@@Base>
  41fab2:	mov    rbp,rax
  41fab5:	test   rax,rax
  41fab8:	je     41fb38 <__flatcc_fb_init_parser@@Base+0x268>
  41faba:	mov    QWORD PTR [rbx+0x340],rbp
  41fac1:	mov    rdi,QWORD PTR [rbx+0x260]
  41fac8:	xor    edx,edx
  41faca:	xor    esi,esi
  41facc:	call   41d090 <fb_scope_table_find@@Base>
  41fad1:	cmp    rax,rbp
  41fad4:	jne    41fc08 <__flatcc_fb_init_parser@@Base+0x338>
  41fada:	xor    eax,eax
  41fadc:	add    rsp,0x18
  41fae0:	pop    rbx
  41fae1:	pop    rbp
  41fae2:	pop    r12
  41fae4:	pop    r13
  41fae6:	pop    r14
  41fae8:	pop    r15
  41faea:	ret    
  41faeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41faf0:	mov    rax,0x41def0
  41faf7:	lea    rcx,[rbx+0xe8]
  41fafe:	mov    QWORD PTR [rbx+0x10],rax
  41fb02:	test   rbp,rbp
  41fb05:	jne    41f921 <__flatcc_fb_init_parser@@Base+0x51>
  41fb0b:	mov    rdi,rcx
  41fb0e:	call   406200 <flatcc_init_options@@Base>
  41fb13:	jmp    41f95a <__flatcc_fb_init_parser@@Base+0x8a>
  41fb18:	nop    DWORD PTR [rax+rax*1+0x0]
  41fb20:	mov    QWORD PTR [rsp+0x8],0x4
  41fb29:	lea    r12,[rip+0x283ea]        # 447f1a <fb_schema_table_missing@@Base+0xa5a>
  41fb30:	jmp    41f9c9 <__flatcc_fb_init_parser@@Base+0xf9>
  41fb35:	nop    DWORD PTR [rax]
  41fb38:	mov    rbp,QWORD PTR [rbx+0x60]
  41fb3c:	lea    rax,[rbp+0x40]
  41fb40:	cmp    rax,QWORD PTR [rbx+0x50]
  41fb44:	ja     41fb80 <__flatcc_fb_init_parser@@Base+0x2b0>
  41fb46:	mov    QWORD PTR [rbx+0x60],rax
  41fb4a:	vmovdqu xmm0,XMMWORD PTR [rbx+0x2d8]
  41fb52:	mov    QWORD PTR [rbp+0x0],0x0
  41fb5a:	mov    rdi,QWORD PTR [rbx+0x260]
  41fb61:	vmovups XMMWORD PTR [rbp+0x28],xmm0
  41fb66:	mov    edx,0x1
  41fb6b:	mov    rsi,rbp
  41fb6e:	call   41d070 <fb_scope_table_insert_item@@Base>
  41fb73:	jmp    41faba <__flatcc_fb_init_parser@@Base+0x1ea>
  41fb78:	nop    DWORD PTR [rax+rax*1+0x0]
  41fb80:	mov    esi,0x1
  41fb85:	mov    edi,0x10000
  41fb8a:	call   405340 <calloc@plt>
  41fb8f:	test   rax,rax
  41fb92:	je     41fc03 <__flatcc_fb_init_parser@@Base+0x333>
  41fb94:	mov    rdx,QWORD PTR [rbx+0x58]
  41fb98:	lea    rbp,[rax+0x10]
  41fb9c:	mov    QWORD PTR [rax],rdx
  41fb9f:	lea    rdx,[rax+0x10000]
  41fba6:	mov    QWORD PTR [rbx+0x58],rax
  41fbaa:	mov    QWORD PTR [rbx+0x50],rdx
  41fbae:	add    rax,0x50
  41fbb2:	jmp    41fb46 <__flatcc_fb_init_parser@@Base+0x276>
  41fbb4:	nop    DWORD PTR [rax+0x0]
  41fbb8:	xor    r9d,r9d
  41fbbb:	xor    r8d,r8d
  41fbbe:	xor    ecx,ecx
  41fbc0:	lea    rdx,[rip+0x27d69]        # 447930 <fb_schema_table_missing@@Base+0x470>
  41fbc7:	xor    esi,esi
  41fbc9:	mov    rdi,rbx
  41fbcc:	call   41e370 <__flatcc_error_report@@Base>
  41fbd1:	mov    eax,0xffffffff
  41fbd6:	jmp    41fadc <__flatcc_fb_init_parser@@Base+0x20c>
  41fbdb:	nop    DWORD PTR [rax+rax*1+0x0]
  41fbe0:	xor    r9d,r9d
  41fbe3:	xor    r8d,r8d
  41fbe6:	xor    ecx,ecx
  41fbe8:	lea    rdx,[rip+0x27d79]        # 447968 <fb_schema_table_missing@@Base+0x4a8>
  41fbef:	xor    esi,esi
  41fbf1:	mov    rdi,rbx
  41fbf4:	call   41e370 <__flatcc_error_report@@Base>
  41fbf9:	mov    eax,0xffffffff
  41fbfe:	jmp    41fadc <__flatcc_fb_init_parser@@Base+0x20c>
  41fc03:	call   41df20 <__flatcc_fb_default_error_out@@Base+0x30>
  41fc08:	lea    rcx,[rip+0x28741]        # 448350 <fb_schema_table_missing@@Base+0xe90>
  41fc0f:	mov    edx,0x533
  41fc14:	lea    rsi,[rip+0x278b5]        # 4474d0 <fb_schema_table_missing@@Base+0x10>
  41fc1b:	lea    rdi,[rip+0x27d86]        # 4479a8 <fb_schema_table_missing@@Base+0x4e8>
  41fc22:	call   405300 <__assert_fail@plt>
  41fc27:	nop    WORD PTR [rax+rax*1+0x0]

000000000041fc30 <__flatcc_fb_parse@@Base>:
  41fc30:	endbr64 
  41fc34:	push   r15
  41fc36:	mov    r15,rsi
  41fc39:	push   r14
  41fc3b:	push   r13
  41fc3d:	push   r12
  41fc3f:	push   rbp
  41fc40:	push   rbx
  41fc41:	mov    rbx,rdi
  41fc44:	sub    rsp,0x48
  41fc48:	mov    rax,QWORD PTR fs:0x28
  41fc51:	mov    QWORD PTR [rsp+0x38],rax
  41fc56:	xor    eax,eax
  41fc58:	lea    rax,[rip+0x282c0]        # 447f1f <fb_schema_table_missing@@Base+0xa5f>
  41fc5f:	mov    QWORD PTR [rdi+0x80],rax
  41fc66:	lea    rax,[rip+0x282b7]        # 447f24 <fb_schema_table_missing@@Base+0xa64>
  41fc6d:	mov    QWORD PTR [rdi+0x70],rsi
  41fc71:	mov    QWORD PTR [rdi+0x78],0x1
  41fc79:	mov    QWORD PTR [rdi+0xa0],0x9
  41fc84:	mov    QWORD PTR [rdi+0x88],0x4
  41fc8f:	mov    QWORD PTR [rdi+0x98],0x0
  41fc9a:	mov    QWORD PTR [rdi+0x90],0x0
  41fca5:	mov    QWORD PTR [rdi+0xc8],0xfffffffffffffc2a
  41fcb0:	mov    QWORD PTR [rdi+0xa8],rax
  41fcb7:	mov    QWORD PTR [rdi+0xb0],0x5
  41fcc2:	mov    QWORD PTR [rdi+0xc0],0x0
  41fccd:	mov    QWORD PTR [rdi+0xb8],0x0
  41fcd8:	test   ecx,ecx
  41fcda:	je     41fce0 <__flatcc_fb_parse@@Base+0xb0>
  41fcdc:	mov    QWORD PTR [rbx+0x20],rsi
  41fce0:	lea    rbp,[r15+rdx*1]
  41fce4:	lea    r12,[rip+0x2845d]        # 448148 <fb_schema_table_missing@@Base+0xc88>
  41fceb:	cmp    rbp,r15
  41fcee:	je     41fdc3 <__flatcc_fb_parse@@Base+0x193>
  41fcf4:	movzx  esi,BYTE PTR [r15]
  41fcf8:	cmp    sil,0x7e
  41fcfc:	ja     421460 <__flatcc_fb_parse@@Base+0x1830>
  41fd02:	movzx  edx,sil
  41fd06:	movsxd rdx,DWORD PTR [r12+rdx*4]
  41fd0a:	add    rdx,r12
  41fd0d:	notrack jmp rdx
  41fd10:	inc    r15
  41fd13:	cmp    rbp,r15
  41fd16:	je     41fdc3 <__flatcc_fb_parse@@Base+0x193>
  41fd1c:	movzx  esi,BYTE PTR [r15]
  41fd20:	cmp    sil,0x20
  41fd24:	je     41fd10 <__flatcc_fb_parse@@Base+0xe0>
  41fd26:	cmp    sil,0x9
  41fd2a:	je     41fd10 <__flatcc_fb_parse@@Base+0xe0>
  41fd2c:	jmp    41fcf8 <__flatcc_fb_parse@@Base+0xc8>
  41fd2e:	xchg   ax,ax
  41fd30:	lea    r14,[r15+0x2]
  41fd34:	cmp    rbp,r14
  41fd37:	je     41fd50 <__flatcc_fb_parse@@Base+0x120>
  41fd39:	movzx  edx,BYTE PTR [r15+0x2]
  41fd3e:	cmp    dl,0x2f
  41fd41:	je     4223d0 <__flatcc_fb_parse@@Base+0x27a0>
  41fd47:	cmp    dl,0x21
  41fd4a:	je     4223d0 <__flatcc_fb_parse@@Base+0x27a0>
  41fd50:	mov    DWORD PTR [rbx+0x3c],0x0
  41fd57:	nop    WORD PTR [rax+rax*1+0x0]
  41fd60:	lea    r13,[r14-0x1]
  41fd64:	jmp    41fd84 <__flatcc_fb_parse@@Base+0x154>
  41fd66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd70:	movzx  eax,BYTE PTR [r13+0x1]
  41fd75:	lea    edx,[rax-0x20]
  41fd78:	cmp    dl,0x5e
  41fd7b:	ja     4220f0 <__flatcc_fb_parse@@Base+0x24c0>
  41fd81:	mov    r13,r15
  41fd84:	lea    r15,[r13+0x1]
  41fd88:	cmp    rbp,r15
  41fd8b:	jne    41fd70 <__flatcc_fb_parse@@Base+0x140>
  41fd8d:	cmp    r14,rbp
  41fd90:	je     41fdb0 <__flatcc_fb_parse@@Base+0x180>
  41fd92:	mov    edx,DWORD PTR [rbx+0x3c]
  41fd95:	test   edx,edx
  41fd97:	je     41fdb0 <__flatcc_fb_parse@@Base+0x180>
  41fd99:	mov    rcx,rbp
  41fd9c:	mov    rdx,r14
  41fd9f:	mov    rsi,0xfffffffffffffc3c
  41fda6:	mov    rdi,rbx
  41fda9:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  41fdae:	xchg   ax,ax
  41fdb0:	mov    rcx,r15
  41fdb3:	mov    rdx,r15
  41fdb6:	mov    esi,0x1b
  41fdbb:	mov    rdi,rbx
  41fdbe:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  41fdc3:	mov    rcx,r15
  41fdc6:	mov    rdx,r15
  41fdc9:	xor    esi,esi
  41fdcb:	mov    rdi,rbx
  41fdce:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  41fdd3:	mov    rax,QWORD PTR [rbx+0x48]
  41fdd7:	mov    r12,QWORD PTR [rbx+0x28]
  41fddb:	mov    QWORD PTR [rbx+0x30],rax
  41fddf:	mov    QWORD PTR [rbx+0x48],r12
  41fde3:	mov    rdi,QWORD PTR [rbx+0x148]
  41fdea:	call   405380 <malloc@plt>
  41fdef:	mov    QWORD PTR [rbx+0xd8],rax
  41fdf6:	test   rax,rax
  41fdf9:	je     42285e <__flatcc_fb_parse@@Base+0x2c2e>
  41fdff:	mov    rdx,QWORD PTR [r12+0x20]
  41fe04:	cmp    rdx,0xfffffffffffffc3c
  41fe0b:	je     421988 <__flatcc_fb_parse@@Base+0x1d58>
  41fe11:	mov    rbp,r12
  41fe14:	lea    r13,[rip+0x27be5]        # 447a00 <fb_schema_table_missing@@Base+0x540>
  41fe1b:	cmp    rdx,0xfffffffffffffc35
  41fe22:	je     4201d8 <__flatcc_fb_parse@@Base+0x5a8>
  41fe28:	mov    eax,DWORD PTR [rbx+0xd0]
  41fe2e:	lea    rdi,[rsp+0x28]
  41fe33:	mov    QWORD PTR [rsp+0x10],rdi
  41fe38:	lea    rdi,[rsp+0x30]
  41fe3d:	lea    r12,[rbx+0x248]
  41fe44:	mov    QWORD PTR [rsp+0x8],rdi
  41fe49:	jmp    41feba <__flatcc_fb_parse@@Base+0x28a>
  41fe4b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fe50:	cmp    rax,0xfffffffffffffc33
  41fe56:	je     4207c8 <__flatcc_fb_parse@@Base+0xb98>
  41fe5c:	jg     4200f0 <__flatcc_fb_parse@@Base+0x4c0>
  41fe62:	cmp    rax,0xfffffffffffffc29
  41fe68:	je     4206c8 <__flatcc_fb_parse@@Base+0xa98>
  41fe6e:	cmp    rax,0xfffffffffffffc30
  41fe74:	je     420460 <__flatcc_fb_parse@@Base+0x830>
  41fe7a:	cmp    rax,0xfffffffffffffc1b
  41fe80:	je     420290 <__flatcc_fb_parse@@Base+0x660>
  41fe86:	xor    r9d,r9d
  41fe89:	xor    r8d,r8d
  41fe8c:	xor    ecx,ecx
  41fe8e:	lea    rdx,[rip+0x27f23]        # 447db8 <fb_schema_table_missing@@Base+0x8f8>
  41fe95:	mov    rdi,rbx
  41fe98:	call   41e370 <__flatcc_error_report@@Base>
  41fe9d:	nop    DWORD PTR [rax]
  41fea0:	mov    rcx,QWORD PTR [rbx+0x48]
  41fea4:	mov    eax,DWORD PTR [rbx+0xd0]
  41feaa:	cmp    rbp,rcx
  41fead:	je     41ffe0 <__flatcc_fb_parse@@Base+0x3b0>
  41feb3:	mov    rdx,QWORD PTR [rcx+0x20]
  41feb7:	mov    rbp,rcx
  41feba:	test   rdx,rdx
  41febd:	je     4214b0 <__flatcc_fb_parse@@Base+0x1880>
  41fec3:	cmp    eax,0x9
  41fec6:	jg     420008 <__flatcc_fb_parse@@Base+0x3d8>
  41fecc:	mov    rsi,QWORD PTR [rbx+0x48]
  41fed0:	mov    rax,QWORD PTR [rsi+0x20]
  41fed4:	cmp    rax,0xfffffffffffffc38
  41feda:	je     420858 <__flatcc_fb_parse@@Base+0xc28>
  41fee0:	jle    41fe50 <__flatcc_fb_parse@@Base+0x220>
  41fee6:	cmp    rax,0x5
  41feea:	je     4207a0 <__flatcc_fb_parse@@Base+0xb70>
  41fef0:	jg     420130 <__flatcc_fb_parse@@Base+0x500>
  41fef6:	cmp    rax,0xfffffffffffffc3a
  41fefc:	je     420950 <__flatcc_fb_parse@@Base+0xd20>
  41ff02:	jl     4208c0 <__flatcc_fb_parse@@Base+0xc90>
  41ff08:	cmp    rax,0xfffffffffffffc3b
  41ff0e:	jne    41fe86 <__flatcc_fb_parse@@Base+0x256>
  41ff14:	mov    rdi,rbx
  41ff17:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41ff1c:	cmp    WORD PTR [rbx+0x218],0x0
  41ff24:	lea    r14,[rbx+0x208]
  41ff2b:	jne    4212a0 <__flatcc_fb_parse@@Base+0x1670>
  41ff31:	mov    rsi,QWORD PTR [rbx+0x48]
  41ff35:	cmp    QWORD PTR [rsi+0x20],0x13
  41ff3a:	jne    420af0 <__flatcc_fb_parse@@Base+0xec0>
  41ff40:	mov    rdi,rbx
  41ff43:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41ff48:	mov    edi,0x2
  41ff4d:	mov    WORD PTR [rbx+0x218],di
  41ff54:	mov    QWORD PTR [rbx+0x208],0x0
  41ff5f:	mov    DWORD PTR [rbx+0x210],0x0
  41ff69:	mov    rax,QWORD PTR [rbx+0x48]
  41ff6d:	mov    rsi,r14
  41ff70:	mov    rdi,rbx
  41ff73:	mov    r15,rax
  41ff76:	call   41ea00 <__flatcc_error_report@@Base+0x690>
  41ff7b:	cmp    QWORD PTR [rbx+0x208],0x0
  41ff83:	je     41ffb6 <__flatcc_fb_parse@@Base+0x386>
  41ff85:	cmp    DWORD PTR [rbx+0x210],0x4
  41ff8c:	je     41ffb6 <__flatcc_fb_parse@@Base+0x386>
  41ff8e:	mov    r13d,0x1
  41ff94:	mov    WORD PTR [rbx+0x218],r13w
  41ff9c:	xor    r9d,r9d
  41ff9f:	xor    r8d,r8d
  41ffa2:	xor    ecx,ecx
  41ffa4:	lea    rdx,[rip+0x27b75]        # 447b20 <fb_schema_table_missing@@Base+0x660>
  41ffab:	mov    rsi,r15
  41ffae:	mov    rdi,rbx
  41ffb1:	call   41e370 <__flatcc_error_report@@Base>
  41ffb6:	mov    rsi,QWORD PTR [rbx+0x48]
  41ffba:	cmp    QWORD PTR [rsi+0x20],0x3b
  41ffbf:	jne    421200 <__flatcc_fb_parse@@Base+0x15d0>
  41ffc5:	mov    rdi,rbx
  41ffc8:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  41ffcd:	mov    rcx,QWORD PTR [rbx+0x48]
  41ffd1:	mov    eax,DWORD PTR [rbx+0xd0]
  41ffd7:	cmp    rbp,rcx
  41ffda:	jne    41feb3 <__flatcc_fb_parse@@Base+0x283>
  41ffe0:	test   eax,eax
  41ffe2:	jne    420008 <__flatcc_fb_parse@@Base+0x3d8>
  41ffe4:	xor    r9d,r9d
  41ffe7:	xor    r8d,r8d
  41ffea:	xor    ecx,ecx
  41ffec:	lea    rdx,[rip+0x280f1]        # 4480e4 <fb_schema_table_missing@@Base+0xc24>
  41fff3:	mov    rsi,rbp
  41fff6:	mov    rdi,rbx
  41fff9:	call   41e370 <__flatcc_error_report@@Base>
  41fffe:	mov    eax,DWORD PTR [rbx+0xd0]
  420004:	nop    DWORD PTR [rax+0x0]
  420008:	mov    rdi,QWORD PTR [rsp+0x38]
  42000d:	xor    rdi,QWORD PTR fs:0x28
  420016:	jne    422863 <__flatcc_fb_parse@@Base+0x2c33>
  42001c:	add    rsp,0x48
  420020:	pop    rbx
  420021:	pop    rbp
  420022:	pop    r12
  420024:	pop    r13
  420026:	pop    r14
  420028:	pop    r15
  42002a:	ret    
  42002b:	nop    DWORD PTR [rax+rax*1+0x0]
  420030:	lea    r13,[r15+0x1]
  420034:	mov    rcx,r13
  420037:	mov    rdx,r15
  42003a:	mov    esi,0x13
  42003f:	mov    rdi,rbx
  420042:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  420047:	mov    r14,r13
  42004a:	nop    WORD PTR [rax+rax*1+0x0]
  420050:	dec    r13
  420053:	jmp    420072 <__flatcc_fb_parse@@Base+0x442>
  420055:	nop    DWORD PTR [rax]
  420058:	movzx  edx,BYTE PTR [r13+0x1]
  42005d:	cmp    dl,0x22
  420060:	je     42007b <__flatcc_fb_parse@@Base+0x44b>
  420062:	cmp    dl,0x5c
  420065:	je     42007b <__flatcc_fb_parse@@Base+0x44b>
  420067:	sub    edx,0x20
  42006a:	cmp    dl,0x5e
  42006d:	ja     42007b <__flatcc_fb_parse@@Base+0x44b>
  42006f:	mov    r13,r15
  420072:	lea    r15,[r13+0x1]
  420076:	cmp    rbp,r15
  420079:	jne    420058 <__flatcc_fb_parse@@Base+0x428>
  42007b:	cmp    r15,r14
  42007e:	je     420093 <__flatcc_fb_parse@@Base+0x463>
  420080:	mov    rcx,r15
  420083:	mov    rdx,r14
  420086:	mov    esi,0x14
  42008b:	mov    rdi,rbx
  42008e:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  420093:	movzx  edx,BYTE PTR [r15]
  420097:	cmp    dl,0x22
  42009a:	je     421c80 <__flatcc_fb_parse@@Base+0x2050>
  4200a0:	cmp    rbp,r15
  4200a3:	je     421490 <__flatcc_fb_parse@@Base+0x1860>
  4200a9:	test   dl,dl
  4200ab:	je     421490 <__flatcc_fb_parse@@Base+0x1860>
  4200b1:	cmp    dl,0x5c
  4200b4:	je     420178 <__flatcc_fb_parse@@Base+0x548>
  4200ba:	cmp    dl,0xa
  4200bd:	je     421490 <__flatcc_fb_parse@@Base+0x1860>
  4200c3:	cmp    dl,0xd
  4200c6:	je     421490 <__flatcc_fb_parse@@Base+0x1860>
  4200cc:	lea    r13,[r15+0x1]
  4200d0:	mov    rcx,r13
  4200d3:	mov    rdx,r15
  4200d6:	mov    esi,0x6
  4200db:	mov    rdi,rbx
  4200de:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4200e3:	mov    r14,r13
  4200e6:	jmp    420050 <__flatcc_fb_parse@@Base+0x420>
  4200eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4200f0:	cmp    rax,0xfffffffffffffc36
  4200f6:	je     420a40 <__flatcc_fb_parse@@Base+0xe10>
  4200fc:	jg     4209e0 <__flatcc_fb_parse@@Base+0xdb0>
  420102:	cmp    rax,0xfffffffffffffc35
  420108:	jne    41fe86 <__flatcc_fb_parse@@Base+0x256>
  42010e:	xor    r9d,r9d
  420111:	xor    r8d,r8d
  420114:	xor    ecx,ecx
  420116:	lea    rdx,[rip+0x27b9b]        # 447cb8 <fb_schema_table_missing@@Base+0x7f8>
  42011d:	mov    rdi,rbx
  420120:	call   41e370 <__flatcc_error_report@@Base>
  420125:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  42012a:	nop    WORD PTR [rax+rax*1+0x0]
  420130:	cmp    rax,0x1b
  420134:	je     420778 <__flatcc_fb_parse@@Base+0xb48>
  42013a:	cmp    rax,0x7b
  42013e:	je     420758 <__flatcc_fb_parse@@Base+0xb28>
  420144:	cmp    rax,0x7
  420148:	jne    41fe86 <__flatcc_fb_parse@@Base+0x256>
  42014e:	mov    r9d,0x1
  420154:	lea    r8,[rip+0x27cf6]        # 447e51 <fb_schema_table_missing@@Base+0x991>
  42015b:	xor    ecx,ecx
  42015d:	lea    rdx,[rip+0x27c2c]        # 447d90 <fb_schema_table_missing@@Base+0x8d0>
  420164:	mov    rdi,rbx
  420167:	call   41e370 <__flatcc_error_report@@Base>
  42016c:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  420171:	nop    DWORD PTR [rax+0x0]
  420178:	lea    r14,[r13+0x2]
  42017c:	mov    rcx,r14
  42017f:	mov    rdx,r15
  420182:	mov    esi,0x15
  420187:	mov    rdi,rbx
  42018a:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  42018f:	cmp    rbp,r14
  420192:	je     422280 <__flatcc_fb_parse@@Base+0x2650>
  420198:	movzx  edx,BYTE PTR [r15+0x1]
  42019d:	test   dl,dl
  42019f:	je     422280 <__flatcc_fb_parse@@Base+0x2650>
  4201a5:	cmp    dl,0x5c
  4201a8:	je     420ac8 <__flatcc_fb_parse@@Base+0xe98>
  4201ae:	cmp    dl,0x22
  4201b1:	je     420ac8 <__flatcc_fb_parse@@Base+0xe98>
  4201b7:	cmp    dl,0xa
  4201ba:	je     421b80 <__flatcc_fb_parse@@Base+0x1f50>
  4201c0:	cmp    dl,0xd
  4201c3:	je     421ca0 <__flatcc_fb_parse@@Base+0x2070>
  4201c9:	mov    r15,r14
  4201cc:	jmp    4200cc <__flatcc_fb_parse@@Base+0x49c>
  4201d1:	nop    DWORD PTR [rax+0x0]
  4201d8:	mov    rdi,rbx
  4201db:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  4201e0:	mov    r14d,DWORD PTR [rbx+0xf8]
  4201e7:	test   r14d,r14d
  4201ea:	jne    4219a0 <__flatcc_fb_parse@@Base+0x1d70>
  4201f0:	mov    rbp,QWORD PTR [rbx+0x48]
  4201f4:	mov    eax,DWORD PTR [rbx+0xd0]
  4201fa:	mov    rdx,QWORD PTR [rbp+0x20]
  4201fe:	cmp    eax,0x9
  420201:	jg     41fe2e <__flatcc_fb_parse@@Base+0x1fe>
  420207:	cmp    rdx,0x13
  42020b:	jne    420b70 <__flatcc_fb_parse@@Base+0xf40>
  420211:	mov    rdi,rbx
  420214:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  420219:	mov    rsi,QWORD PTR [rbx+0x60]
  42021d:	lea    rax,[rsi+0x20]
  420221:	cmp    rax,QWORD PTR [rbx+0x50]
  420225:	ja     4219c0 <__flatcc_fb_parse@@Base+0x1d90>
  42022b:	mov    QWORD PTR [rbx+0x60],rax
  42022f:	mov    rax,QWORD PTR [rbx+0x1f8]
  420236:	mov    r15d,0x2
  42023c:	mov    QWORD PTR [rsi],rax
  42023f:	mov    QWORD PTR [rbx+0x1f8],rsi
  420246:	mov    WORD PTR [rsi+0x18],r15w
  42024b:	mov    QWORD PTR [rsi+0x8],0x0
  420253:	mov    DWORD PTR [rsi+0x10],0x0
  42025a:	mov    rdi,rbx
  42025d:	add    rsi,0x8
  420261:	call   41ea00 <__flatcc_error_report@@Base+0x690>
  420266:	mov    rsi,QWORD PTR [rbx+0x48]
  42026a:	cmp    QWORD PTR [rsi+0x20],0x3b
  42026f:	jne    421560 <__flatcc_fb_parse@@Base+0x1930>
  420275:	mov    rdi,rbx
  420278:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  42027d:	mov    rbp,QWORD PTR [rbx+0x48]
  420281:	mov    rdx,QWORD PTR [rbp+0x20]
  420285:	jmp    41fe1b <__flatcc_fb_parse@@Base+0x1eb>
  42028a:	nop    WORD PTR [rax+rax*1+0x0]
  420290:	mov    rdi,rbx
  420293:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  420298:	mov    r15,QWORD PTR [rbx+0x60]
  42029c:	lea    rax,[r15+0xd0]
  4202a3:	cmp    rax,QWORD PTR [rbx+0x50]
  4202a7:	ja     421390 <__flatcc_fb_parse@@Base+0x1760>
  4202ad:	mov    QWORD PTR [rbx+0x60],rax
  4202b1:	mov    rax,QWORD PTR [rbx+0x238]
  4202b8:	mov    r8d,0x3
  4202be:	mov    QWORD PTR [r15],rax
  4202c1:	mov    rax,QWORD PTR [rbx+0x340]
  4202c8:	mov    WORD PTR [r15+0x10],r8w
  4202cd:	mov    QWORD PTR [rbx+0x238],r15
  4202d4:	mov    QWORD PTR [r15+0x18],rax
  4202d8:	mov    rax,QWORD PTR [rbx+0x40]
  4202dc:	test   rax,rax
  4202df:	je     4202f9 <__flatcc_fb_parse@@Base+0x6c9>
  4202e1:	xor    ecx,ecx
  4202e3:	jmp    4202eb <__flatcc_fb_parse@@Base+0x6bb>
  4202e5:	nop    DWORD PTR [rax]
  4202e8:	mov    rax,rdx
  4202eb:	mov    rdx,QWORD PTR [rax]
  4202ee:	mov    QWORD PTR [rax],rcx
  4202f1:	mov    rcx,rax
  4202f4:	test   rdx,rdx
  4202f7:	jne    4202e8 <__flatcc_fb_parse@@Base+0x6b8>
  4202f9:	mov    r14,QWORD PTR [rbx+0x48]
  4202fd:	mov    QWORD PTR [r15+0x40],rax
  420301:	cmp    QWORD PTR [r14+0x20],0x9
  420306:	mov    QWORD PTR [rbx+0x40],0x0
  42030e:	jne    420ba0 <__flatcc_fb_parse@@Base+0xf70>
  420314:	mov    rdi,rbx
  420317:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  42031c:	mov    rax,QWORD PTR [rbx+0x48]
  420320:	mov    QWORD PTR [r15+0x8],r14
  420324:	cmp    QWORD PTR [rax+0x20],0x3a
  420329:	je     4213d0 <__flatcc_fb_parse@@Base+0x17a0>
  42032f:	mov    rdi,rbx
  420332:	call   41f150 <__flatcc_error_report@@Base+0xde0>
  420337:	mov    r14,QWORD PTR [rbx+0x48]
  42033b:	mov    QWORD PTR [r15+0x38],rax
  42033f:	cmp    QWORD PTR [r14+0x20],0x7b
  420344:	jne    4211e0 <__flatcc_fb_parse@@Base+0x15b0>
  42034a:	mov    rdi,rbx
  42034d:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  420352:	mov    r13,QWORD PTR [rbx+0x48]
  420356:	cmp    QWORD PTR [r13+0x20],0x9
  42035b:	jne    42153c <__flatcc_fb_parse@@Base+0x190c>
  420361:	mov    rdi,rbx
  420364:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  420369:	cmp    DWORD PTR [rbx+0xd0],0x9
  420370:	jg     420bc2 <__flatcc_fb_parse@@Base+0xf92>
  420376:	mov    rsi,QWORD PTR [rbx+0x60]
  42037a:	lea    rax,[rsi+0xb0]
  420381:	cmp    rax,QWORD PTR [rbx+0x50]
  420385:	ja     421a00 <__flatcc_fb_parse@@Base+0x1dd0>
  42038b:	mov    QWORD PTR [rbx+0x60],rax
  42038f:	mov    rax,QWORD PTR [r15+0x28]
  420393:	mov    edi,0x5
  420398:	mov    QWORD PTR [rsi],rax
  42039b:	mov    WORD PTR [rsi+0x10],di
  42039f:	mov    QWORD PTR [r15+0x28],rsi
  4203a3:	mov    rax,QWORD PTR [rbx+0x40]
  4203a7:	test   rax,rax
  4203aa:	je     4203c1 <__flatcc_fb_parse@@Base+0x791>
  4203ac:	xor    ecx,ecx
  4203ae:	jmp    4203b3 <__flatcc_fb_parse@@Base+0x783>
  4203b0:	mov    rax,rdx
  4203b3:	mov    rdx,QWORD PTR [rax]
  4203b6:	mov    QWORD PTR [rax],rcx
  4203b9:	mov    rcx,rax
  4203bc:	test   rdx,rdx
  4203bf:	jne    4203b0 <__flatcc_fb_parse@@Base+0x780>
  4203c1:	mov    QWORD PTR [rsi+0x68],rax
  4203c5:	mov    rax,QWORD PTR [rbx+0x48]
  4203c9:	mov    QWORD PTR [rbx+0x40],0x0
  4203d1:	cmp    QWORD PTR [rax+0x20],0x3d
  4203d6:	mov    QWORD PTR [rsi+0x8],r13
  4203da:	jne    420407 <__flatcc_fb_parse@@Base+0x7d7>
  4203dc:	mov    rdi,rbx
  4203df:	mov    QWORD PTR [rsp+0x18],rsi
  4203e4:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  4203e9:	mov    rsi,QWORD PTR [rsp+0x18]
  4203ee:	lea    rcx,[rip+0x27c9d]        # 448092 <fb_schema_table_missing@@Base+0xbd2>
  4203f5:	add    rsi,0x48
  4203f9:	xor    edx,edx
  4203fb:	mov    rdi,rbx
  4203fe:	call   41eb50 <__flatcc_error_report@@Base+0x7e0>
  420403:	mov    rax,QWORD PTR [rbx+0x48]
  420407:	cmp    QWORD PTR [rax+0x20],0x2c
  42040c:	je     421510 <__flatcc_fb_parse@@Base+0x18e0>
  420412:	mov    rcx,r14
  420415:	lea    rdx,[rip+0x277c4]        # 447be0 <fb_schema_table_missing@@Base+0x720>
  42041c:	mov    esi,0x7d
  420421:	mov    rdi,rbx
  420424:	call   41e660 <__flatcc_error_report@@Base+0x2f0>
  420429:	mov    rax,QWORD PTR [r15+0x28]
  42042d:	test   rax,rax
  420430:	je     420451 <__flatcc_fb_parse@@Base+0x821>
  420432:	xor    ecx,ecx
  420434:	jmp    420443 <__flatcc_fb_parse@@Base+0x813>
  420436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420440:	mov    rax,rdx
  420443:	mov    rdx,QWORD PTR [rax]
  420446:	mov    QWORD PTR [rax],rcx
  420449:	mov    rcx,rax
  42044c:	test   rdx,rdx
  42044f:	jne    420440 <__flatcc_fb_parse@@Base+0x810>
  420451:	mov    QWORD PTR [r15+0x28],rax
  420455:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  42045a:	nop    WORD PTR [rax+rax*1+0x0]
  420460:	mov    rdi,rbx
  420463:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  420468:	mov    r15,QWORD PTR [rbx+0x60]
  42046c:	lea    rax,[r15+0xd0]
  420473:	cmp    rax,QWORD PTR [rbx+0x50]
  420477:	ja     421310 <__flatcc_fb_parse@@Base+0x16e0>
  42047d:	mov    QWORD PTR [rbx+0x60],rax
  420481:	mov    rax,QWORD PTR [rbx+0x238]
  420488:	mov    esi,0x4
  42048d:	mov    QWORD PTR [r15],rax
  420490:	mov    rax,QWORD PTR [rbx+0x340]
  420497:	mov    WORD PTR [r15+0x10],si
  42049c:	mov    QWORD PTR [rbx+0x238],r15
  4204a3:	mov    QWORD PTR [r15+0x18],rax
  4204a7:	mov    rax,QWORD PTR [rbx+0x40]
  4204ab:	test   rax,rax
  4204ae:	je     4204c9 <__flatcc_fb_parse@@Base+0x899>
  4204b0:	xor    ecx,ecx
  4204b2:	jmp    4204bb <__flatcc_fb_parse@@Base+0x88b>
  4204b4:	nop    DWORD PTR [rax+0x0]
  4204b8:	mov    rax,rdx
  4204bb:	mov    rdx,QWORD PTR [rax]
  4204be:	mov    QWORD PTR [rax],rcx
  4204c1:	mov    rcx,rax
  4204c4:	test   rdx,rdx
  4204c7:	jne    4204b8 <__flatcc_fb_parse@@Base+0x888>
  4204c9:	mov    r14,QWORD PTR [rbx+0x48]
  4204cd:	mov    QWORD PTR [r15+0x40],rax
  4204d1:	cmp    QWORD PTR [r14+0x20],0x9
  4204d6:	mov    QWORD PTR [rbx+0x40],0x0
  4204de:	jne    420bd8 <__flatcc_fb_parse@@Base+0xfa8>
  4204e4:	mov    rdi,rbx
  4204e7:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  4204ec:	mov    QWORD PTR [r15+0x8],r14
  4204f0:	mov    rdi,rbx
  4204f3:	call   41f150 <__flatcc_error_report@@Base+0xde0>
  4204f8:	mov    r14,QWORD PTR [rbx+0x48]
  4204fc:	mov    QWORD PTR [r15+0x38],rax
  420500:	cmp    QWORD PTR [r14+0x20],0x7b
  420505:	jne    421b58 <__flatcc_fb_parse@@Base+0x1f28>
  42050b:	mov    rdi,rbx
  42050e:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  420513:	mov    rax,QWORD PTR [rbx+0x48]
  420517:	cmp    QWORD PTR [rax+0x20],0x9
  42051c:	mov    QWORD PTR [rsp+0x18],rax
  420521:	jne    421a89 <__flatcc_fb_parse@@Base+0x1e59>
  420527:	cmp    DWORD PTR [rbx+0xd0],0x9
  42052e:	jg     420bfa <__flatcc_fb_parse@@Base+0xfca>
  420534:	mov    r13,QWORD PTR [rbx+0x60]
  420538:	lea    rax,[r13+0xb0]
  42053f:	cmp    rax,QWORD PTR [rbx+0x50]
  420543:	ja     421bf8 <__flatcc_fb_parse@@Base+0x1fc8>
  420549:	mov    QWORD PTR [rbx+0x60],rax
  42054d:	mov    rax,QWORD PTR [r15+0x28]
  420551:	mov    ecx,0x5
  420556:	mov    QWORD PTR [r13+0x0],rax
  42055a:	mov    WORD PTR [r13+0x10],cx
  42055f:	mov    QWORD PTR [r15+0x28],r13
  420563:	mov    rax,QWORD PTR [rbx+0x40]
  420567:	test   rax,rax
  42056a:	je     420581 <__flatcc_fb_parse@@Base+0x951>
  42056c:	xor    ecx,ecx
  42056e:	jmp    420573 <__flatcc_fb_parse@@Base+0x943>
  420570:	mov    rax,rdx
  420573:	mov    rdx,QWORD PTR [rax]
  420576:	mov    QWORD PTR [rax],rcx
  420579:	mov    rcx,rax
  42057c:	test   rdx,rdx
  42057f:	jne    420570 <__flatcc_fb_parse@@Base+0x940>
  420581:	mov    QWORD PTR [r13+0x68],rax
  420585:	mov    QWORD PTR [rbx+0x40],0x0
  42058d:	mov    rsi,QWORD PTR [rsp+0x8]
  420592:	mov    rdi,rbx
  420595:	call   41e520 <__flatcc_error_report@@Base+0x1b0>
  42059a:	mov    rax,QWORD PTR [rsp+0x30]
  42059f:	mov    edx,0xc
  4205a4:	mov    QWORD PTR [r13+0x18],rax
  4205a8:	mov    WORD PTR [r13+0x28],dx
  4205ad:	mov    rdx,QWORD PTR [rax]
  4205b0:	test   rdx,rdx
  4205b3:	jne    4205c3 <__flatcc_fb_parse@@Base+0x993>
  4205b5:	jmp    4222a0 <__flatcc_fb_parse@@Base+0x2670>
  4205ba:	nop    WORD PTR [rax+rax*1+0x0]
  4205c0:	mov    rdx,rax
  4205c3:	mov    rax,QWORD PTR [rdx]
  4205c6:	test   rax,rax
  4205c9:	jne    4205c0 <__flatcc_fb_parse@@Base+0x990>
  4205cb:	mov    QWORD PTR [rsp+0x30],rdx
  4205d0:	mov    rax,QWORD PTR [rdx+0x8]
  4205d4:	mov    QWORD PTR [r13+0x8],rax
  4205d8:	mov    rax,QWORD PTR [rbx+0x48]
  4205dc:	mov    rax,QWORD PTR [rax+0x20]
  4205e0:	cmp    rax,0x3a
  4205e4:	je     421ab0 <__flatcc_fb_parse@@Base+0x1e80>
  4205ea:	cmp    rax,0x3d
  4205ee:	jne    420615 <__flatcc_fb_parse@@Base+0x9e5>
  4205f0:	mov    rdi,rbx
  4205f3:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  4205f8:	lea    rsi,[r13+0x48]
  4205fc:	lea    rcx,[rip+0x27a8f]        # 448092 <fb_schema_table_missing@@Base+0xbd2>
  420603:	xor    edx,edx
  420605:	mov    rdi,rbx
  420608:	call   41eb50 <__flatcc_error_report@@Base+0x7e0>
  42060d:	mov    rax,QWORD PTR [rbx+0x48]
  420611:	mov    rax,QWORD PTR [rax+0x20]
  420615:	cmp    rax,0x2c
  420619:	je     421a58 <__flatcc_fb_parse@@Base+0x1e28>
  42061f:	lea    rdx,[rip+0x2766a]        # 447c90 <fb_schema_table_missing@@Base+0x7d0>
  420626:	mov    rcx,r14
  420629:	mov    esi,0x7d
  42062e:	mov    rdi,rbx
  420631:	call   41e660 <__flatcc_error_report@@Base+0x2f0>
  420636:	mov    rdx,QWORD PTR [r15+0x28]
  42063a:	test   rdx,rdx
  42063d:	je     420659 <__flatcc_fb_parse@@Base+0xa29>
  42063f:	xor    ecx,ecx
  420641:	jmp    42064b <__flatcc_fb_parse@@Base+0xa1b>
  420643:	nop    DWORD PTR [rax+rax*1+0x0]
  420648:	mov    rdx,rax
  42064b:	mov    rax,QWORD PTR [rdx]
  42064e:	mov    QWORD PTR [rdx],rcx
  420651:	mov    rcx,rdx
  420654:	test   rax,rax
  420657:	jne    420648 <__flatcc_fb_parse@@Base+0xa18>
  420659:	mov    rsi,QWORD PTR [rbx+0x60]
  42065d:	mov    QWORD PTR [r15+0x28],rdx
  420661:	lea    rax,[rsi+0xb0]
  420668:	cmp    rax,QWORD PTR [rbx+0x50]
  42066c:	ja     421d48 <__flatcc_fb_parse@@Base+0x2118>
  420672:	mov    r11d,0x5
  420678:	mov    QWORD PTR [rbx+0x60],rax
  42067c:	mov    QWORD PTR [rsi],rdx
  42067f:	mov    WORD PTR [rsi+0x10],r11w
  420684:	mov    QWORD PTR [r15+0x28],rsi
  420688:	mov    rax,QWORD PTR [rbx+0x40]
  42068c:	test   rax,rax
  42068f:	je     4206a9 <__flatcc_fb_parse@@Base+0xa79>
  420691:	xor    ecx,ecx
  420693:	jmp    42069b <__flatcc_fb_parse@@Base+0xa6b>
  420695:	nop    DWORD PTR [rax]
  420698:	mov    rax,rdx
  42069b:	mov    rdx,QWORD PTR [rax]
  42069e:	mov    QWORD PTR [rax],rcx
  4206a1:	mov    rcx,rax
  4206a4:	test   rdx,rdx
  4206a7:	jne    420698 <__flatcc_fb_parse@@Base+0xa68>
  4206a9:	mov    QWORD PTR [rsi+0x68],rax
  4206ad:	lea    rax,[rbx+0x80]
  4206b4:	mov    QWORD PTR [rbx+0x40],0x0
  4206bc:	mov    QWORD PTR [rsi+0x8],rax
  4206c0:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  4206c5:	nop    DWORD PTR [rax]
  4206c8:	mov    rdi,rbx
  4206cb:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  4206d0:	mov    rsi,QWORD PTR [rbx+0x60]
  4206d4:	lea    rax,[rsi+0xd0]
  4206db:	cmp    rax,QWORD PTR [rbx+0x50]
  4206df:	ja     4212d0 <__flatcc_fb_parse@@Base+0x16a0>
  4206e5:	mov    QWORD PTR [rbx+0x60],rax
  4206e9:	mov    rax,QWORD PTR [rbx+0x238]
  4206f0:	xor    r10d,r10d
  4206f3:	mov    QWORD PTR [rsi],rax
  4206f6:	mov    rax,QWORD PTR [rbx+0x340]
  4206fd:	mov    WORD PTR [rsi+0x10],r10w
  420702:	mov    QWORD PTR [rbx+0x238],rsi
  420709:	mov    QWORD PTR [rsi+0x18],rax
  42070d:	mov    rax,QWORD PTR [rbx+0x40]
  420711:	test   rax,rax
  420714:	je     420731 <__flatcc_fb_parse@@Base+0xb01>
  420716:	xor    ecx,ecx
  420718:	jmp    420723 <__flatcc_fb_parse@@Base+0xaf3>
  42071a:	nop    WORD PTR [rax+rax*1+0x0]
  420720:	mov    rax,rdx
  420723:	mov    rdx,QWORD PTR [rax]
  420726:	mov    QWORD PTR [rax],rcx
  420729:	mov    rcx,rax
  42072c:	test   rdx,rdx
  42072f:	jne    420720 <__flatcc_fb_parse@@Base+0xaf0>
  420731:	mov    QWORD PTR [rsi+0x40],rax
  420735:	mov    QWORD PTR [rbx+0x40],0x0
  42073d:	mov    rdx,0xfffffffffffffc29
  420744:	mov    rdi,rbx
  420747:	call   41f300 <__flatcc_error_report@@Base+0xf90>
  42074c:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  420751:	nop    DWORD PTR [rax+0x0]
  420758:	xor    r9d,r9d
  42075b:	xor    r8d,r8d
  42075e:	xor    ecx,ecx
  420760:	lea    rdx,[rip+0x27589]        # 447cf0 <fb_schema_table_missing@@Base+0x830>
  420767:	mov    rdi,rbx
  42076a:	call   41e370 <__flatcc_error_report@@Base>
  42076f:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  420774:	nop    DWORD PTR [rax+0x0]
  420778:	mov    r9d,0x5
  42077e:	lea    r8,[rip+0x27944]        # 4480c9 <fb_schema_table_missing@@Base+0xc09>
  420785:	xor    ecx,ecx
  420787:	lea    rdx,[rip+0x27941]        # 4480cf <fb_schema_table_missing@@Base+0xc0f>
  42078e:	mov    rdi,rbx
  420791:	call   41e370 <__flatcc_error_report@@Base>
  420796:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  42079b:	nop    DWORD PTR [rax+rax*1+0x0]
  4207a0:	mov    r9d,0x1
  4207a6:	lea    r8,[rip+0x276a4]        # 447e51 <fb_schema_table_missing@@Base+0x991>
  4207ad:	xor    ecx,ecx
  4207af:	lea    rdx,[rip+0x275a2]        # 447d58 <fb_schema_table_missing@@Base+0x898>
  4207b6:	mov    rdi,rbx
  4207b9:	call   41e370 <__flatcc_error_report@@Base>
  4207be:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  4207c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4207c8:	mov    rdi,rbx
  4207cb:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  4207d0:	mov    rsi,QWORD PTR [rbx+0x60]
  4207d4:	lea    rax,[rsi+0xd0]
  4207db:	cmp    rax,QWORD PTR [rbx+0x50]
  4207df:	ja     421260 <__flatcc_fb_parse@@Base+0x1630>
  4207e5:	mov    QWORD PTR [rbx+0x60],rax
  4207e9:	mov    rax,QWORD PTR [rbx+0x238]
  4207f0:	mov    r11d,0x1
  4207f6:	mov    QWORD PTR [rsi],rax
  4207f9:	mov    rax,QWORD PTR [rbx+0x340]
  420800:	mov    WORD PTR [rsi+0x10],r11w
  420805:	mov    QWORD PTR [rbx+0x238],rsi
  42080c:	mov    QWORD PTR [rsi+0x18],rax
  420810:	mov    rax,QWORD PTR [rbx+0x40]
  420814:	test   rax,rax
  420817:	je     420831 <__flatcc_fb_parse@@Base+0xc01>
  420819:	xor    ecx,ecx
  42081b:	jmp    420823 <__flatcc_fb_parse@@Base+0xbf3>
  42081d:	nop    DWORD PTR [rax]
  420820:	mov    rax,rdx
  420823:	mov    rdx,QWORD PTR [rax]
  420826:	mov    QWORD PTR [rax],rcx
  420829:	mov    rcx,rax
  42082c:	test   rdx,rdx
  42082f:	jne    420820 <__flatcc_fb_parse@@Base+0xbf0>
  420831:	mov    QWORD PTR [rsi+0x40],rax
  420835:	mov    QWORD PTR [rbx+0x40],0x0
  42083d:	mov    rdx,0xfffffffffffffc33
  420844:	mov    rdi,rbx
  420847:	call   41f300 <__flatcc_error_report@@Base+0xf90>
  42084c:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  420851:	nop    DWORD PTR [rax+0x0]
  420858:	mov    rdi,rbx
  42085b:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  420860:	cmp    QWORD PTR [rbx+0x248],0x0
  420868:	mov    r14,QWORD PTR [rbx+0x48]
  42086c:	je     420888 <__flatcc_fb_parse@@Base+0xc58>
  42086e:	xor    r9d,r9d
  420871:	xor    r8d,r8d
  420874:	xor    ecx,ecx
  420876:	lea    rdx,[rip+0x27798]        # 448015 <fb_schema_table_missing@@Base+0xb55>
  42087d:	mov    rsi,r14
  420880:	mov    rdi,rbx
  420883:	call   41e370 <__flatcc_error_report@@Base>
  420888:	mov    rsi,r12
  42088b:	mov    rdi,rbx
  42088e:	call   41e520 <__flatcc_error_report@@Base+0x1b0>
  420893:	mov    rax,QWORD PTR [rbx+0x340]
  42089a:	mov    rcx,r14
  42089d:	mov    QWORD PTR [rbx+0x258],rax
  4208a4:	lea    rdx,[rip+0x2729d]        # 447b48 <fb_schema_table_missing@@Base+0x688>
  4208ab:	mov    esi,0x3b
  4208b0:	mov    rdi,rbx
  4208b3:	call   41e660 <__flatcc_error_report@@Base+0x2f0>
  4208b8:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  4208bd:	nop    DWORD PTR [rax]
  4208c0:	mov    rdi,rbx
  4208c3:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  4208c8:	mov    rsi,QWORD PTR [rbx+0x60]
  4208cc:	lea    rax,[rsi+0xd0]
  4208d3:	cmp    rax,QWORD PTR [rbx+0x50]
  4208d7:	ja     421220 <__flatcc_fb_parse@@Base+0x15f0>
  4208dd:	mov    QWORD PTR [rbx+0x60],rax
  4208e1:	mov    rax,QWORD PTR [rbx+0x238]
  4208e8:	mov    r9d,0x2
  4208ee:	mov    QWORD PTR [rsi],rax
  4208f1:	mov    rax,QWORD PTR [rbx+0x340]
  4208f8:	mov    WORD PTR [rsi+0x10],r9w
  4208fd:	mov    QWORD PTR [rbx+0x238],rsi
  420904:	mov    QWORD PTR [rsi+0x18],rax
  420908:	mov    rax,QWORD PTR [rbx+0x40]
  42090c:	test   rax,rax
  42090f:	je     420929 <__flatcc_fb_parse@@Base+0xcf9>
  420911:	xor    ecx,ecx
  420913:	jmp    42091b <__flatcc_fb_parse@@Base+0xceb>
  420915:	nop    DWORD PTR [rax]
  420918:	mov    rax,rdx
  42091b:	mov    rdx,QWORD PTR [rax]
  42091e:	mov    QWORD PTR [rax],rcx
  420921:	mov    rcx,rax
  420924:	test   rdx,rdx
  420927:	jne    420918 <__flatcc_fb_parse@@Base+0xce8>
  420929:	mov    QWORD PTR [rsi+0x40],rax
  42092d:	mov    QWORD PTR [rbx+0x40],0x0
  420935:	mov    rdx,0xfffffffffffffc39
  42093c:	mov    rdi,rbx
  42093f:	call   41f300 <__flatcc_error_report@@Base+0xf90>
  420944:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  420949:	nop    DWORD PTR [rax+0x0]
  420950:	mov    rdi,rbx
  420953:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  420958:	cmp    WORD PTR [rbx+0x230],0x2
  420960:	lea    r14,[rbx+0x220]
  420967:	je     421ce8 <__flatcc_fb_parse@@Base+0x20b8>
  42096d:	mov    rsi,QWORD PTR [rbx+0x48]
  420971:	cmp    QWORD PTR [rsi+0x20],0x13
  420976:	jne    420ad8 <__flatcc_fb_parse@@Base+0xea8>
  42097c:	mov    rdi,rbx
  42097f:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  420984:	mov    r8d,0x2
  42098a:	mov    WORD PTR [rbx+0x230],r8w
  420992:	mov    QWORD PTR [rbx+0x220],0x0
  42099d:	mov    DWORD PTR [rbx+0x228],0x0
  4209a7:	mov    rsi,r14
  4209aa:	mov    rdi,rbx
  4209ad:	call   41ea00 <__flatcc_error_report@@Base+0x690>
  4209b2:	mov    rsi,QWORD PTR [rbx+0x48]
  4209b6:	cmp    QWORD PTR [rsi+0x20],0x3b
  4209bb:	je     41ffc5 <__flatcc_fb_parse@@Base+0x395>
  4209c1:	xor    r9d,r9d
  4209c4:	xor    r8d,r8d
  4209c7:	xor    ecx,ecx
  4209c9:	lea    rdx,[rip+0x275f0]        # 447fc0 <fb_schema_table_missing@@Base+0xb00>
  4209d0:	mov    rdi,rbx
  4209d3:	call   41e370 <__flatcc_error_report@@Base>
  4209d8:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  4209dd:	nop    DWORD PTR [rax]
  4209e0:	mov    rdi,rbx
  4209e3:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  4209e8:	mov    r14,QWORD PTR [rbx+0x48]
  4209ec:	mov    QWORD PTR [rsp+0x28],0x0
  4209f5:	mov    rax,QWORD PTR [r14+0x20]
  4209f9:	cmp    rax,0x3b
  4209fd:	je     4211c8 <__flatcc_fb_parse@@Base+0x1598>
  420a03:	cmp    rax,0x9
  420a07:	je     421b00 <__flatcc_fb_parse@@Base+0x1ed0>
  420a0d:	xor    r9d,r9d
  420a10:	xor    r8d,r8d
  420a13:	xor    ecx,ecx
  420a15:	lea    rdx,[rip+0x2706c]        # 447a88 <fb_schema_table_missing@@Base+0x5c8>
  420a1c:	mov    rsi,r14
  420a1f:	mov    rdi,rbx
  420a22:	call   41e370 <__flatcc_error_report@@Base>
  420a27:	mov    esi,0x3b
  420a2c:	mov    rdi,rbx
  420a2f:	call   41e190 <__flatcc_fb_default_error_out@@Base+0x2a0>
  420a34:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  420a39:	nop    DWORD PTR [rax+0x0]
  420a40:	mov    rdi,rbx
  420a43:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  420a48:	mov    r14,QWORD PTR [rbx+0x60]
  420a4c:	lea    rax,[r14+0x30]
  420a50:	cmp    rax,QWORD PTR [rbx+0x50]
  420a54:	ja     421350 <__flatcc_fb_parse@@Base+0x1720>
  420a5a:	mov    r10,QWORD PTR [rbx+0x48]
  420a5e:	mov    QWORD PTR [rbx+0x60],rax
  420a62:	mov    rax,QWORD PTR [rbx+0x200]
  420a69:	cmp    QWORD PTR [r10+0x20],0x13
  420a6e:	mov    QWORD PTR [r14],rax
  420a71:	mov    QWORD PTR [rbx+0x200],r14
  420a78:	je     420b08 <__flatcc_fb_parse@@Base+0xed8>
  420a7e:	xor    r9d,r9d
  420a81:	xor    r8d,r8d
  420a84:	xor    ecx,ecx
  420a86:	lea    rdx,[rip+0x270e3]        # 447b70 <fb_schema_table_missing@@Base+0x6b0>
  420a8d:	mov    rsi,r10
  420a90:	mov    rdi,rbx
  420a93:	call   41e370 <__flatcc_error_report@@Base>
  420a98:	mov    rsi,QWORD PTR [rbx+0x48]
  420a9c:	cmp    QWORD PTR [rsi+0x20],0x3b
  420aa1:	je     41ffc5 <__flatcc_fb_parse@@Base+0x395>
  420aa7:	xor    r9d,r9d
  420aaa:	xor    r8d,r8d
  420aad:	xor    ecx,ecx
  420aaf:	lea    rdx,[rip+0x27575]        # 44802b <fb_schema_table_missing@@Base+0xb6b>
  420ab6:	mov    rdi,rbx
  420ab9:	call   41e370 <__flatcc_error_report@@Base>
  420abe:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  420ac3:	nop    DWORD PTR [rax+rax*1+0x0]
  420ac8:	lea    r13,[r15+0x2]
  420acc:	jmp    420050 <__flatcc_fb_parse@@Base+0x420>
  420ad1:	nop    DWORD PTR [rax+0x0]
  420ad8:	xor    r9d,r9d
  420adb:	xor    r8d,r8d
  420ade:	xor    ecx,ecx
  420ae0:	lea    rdx,[rip+0x26fe9]        # 447ad0 <fb_schema_table_missing@@Base+0x610>
  420ae7:	jmp    420a1f <__flatcc_fb_parse@@Base+0xdef>
  420aec:	nop    DWORD PTR [rax+0x0]
  420af0:	xor    r9d,r9d
  420af3:	xor    r8d,r8d
  420af6:	xor    ecx,ecx
  420af8:	lea    rdx,[rip+0x26ff9]        # 447af8 <fb_schema_table_missing@@Base+0x638>
  420aff:	jmp    420a1f <__flatcc_fb_parse@@Base+0xdef>
  420b04:	nop    DWORD PTR [rax+0x0]
  420b08:	mov    rdi,rbx
  420b0b:	mov    QWORD PTR [rsp+0x18],r10
  420b10:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  420b15:	mov    r9d,0x2
  420b1b:	mov    WORD PTR [r14+0x18],r9w
  420b20:	mov    QWORD PTR [r14+0x8],0x0
  420b28:	mov    DWORD PTR [r14+0x10],0x0
  420b30:	lea    rsi,[r14+0x8]
  420b34:	mov    rdi,rbx
  420b37:	call   41ea00 <__flatcc_error_report@@Base+0x690>
  420b3c:	mov    r10d,DWORD PTR [r14+0x10]
  420b40:	test   r10d,r10d
  420b43:	mov    r10,QWORD PTR [rsp+0x18]
  420b48:	jne    420a98 <__flatcc_fb_parse@@Base+0xe68>
  420b4e:	xor    r9d,r9d
  420b51:	xor    r8d,r8d
  420b54:	xor    ecx,ecx
  420b56:	lea    rdx,[rip+0x2703b]        # 447b98 <fb_schema_table_missing@@Base+0x6d8>
  420b5d:	mov    rsi,r10
  420b60:	mov    rdi,rbx
  420b63:	call   41e370 <__flatcc_error_report@@Base>
  420b68:	jmp    420a98 <__flatcc_fb_parse@@Base+0xe68>
  420b6d:	nop    DWORD PTR [rax]
  420b70:	mov    rsi,rbp
  420b73:	mov    rdi,rbx
  420b76:	xor    r9d,r9d
  420b79:	xor    r8d,r8d
  420b7c:	xor    ecx,ecx
  420b7e:	lea    rdx,[rip+0x26eb3]        # 447a38 <fb_schema_table_missing@@Base+0x578>
  420b85:	call   41e370 <__flatcc_error_report@@Base>
  420b8a:	mov    esi,0x3b
  420b8f:	mov    rdi,rbx
  420b92:	call   41e190 <__flatcc_fb_default_error_out@@Base+0x2a0>
  420b97:	jmp    420219 <__flatcc_fb_parse@@Base+0x5e9>
  420b9c:	nop    DWORD PTR [rax+0x0]
  420ba0:	xor    r9d,r9d
  420ba3:	xor    r8d,r8d
  420ba6:	xor    ecx,ecx
  420ba8:	lea    rdx,[rip+0x27009]        # 447bb8 <fb_schema_table_missing@@Base+0x6f8>
  420baf:	mov    rsi,r14
  420bb2:	mov    rdi,rbx
  420bb5:	call   41e370 <__flatcc_error_report@@Base>
  420bba:	mov    QWORD PTR [r15+0x8],0x0
  420bc2:	mov    esi,0x7d
  420bc7:	mov    rdi,rbx
  420bca:	call   41e190 <__flatcc_fb_default_error_out@@Base+0x2a0>
  420bcf:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  420bd4:	nop    DWORD PTR [rax+0x0]
  420bd8:	xor    r9d,r9d
  420bdb:	xor    r8d,r8d
  420bde:	xor    ecx,ecx
  420be0:	lea    rdx,[rip+0x27021]        # 447c08 <fb_schema_table_missing@@Base+0x748>
  420be7:	mov    rsi,r14
  420bea:	mov    rdi,rbx
  420bed:	call   41e370 <__flatcc_error_report@@Base>
  420bf2:	mov    QWORD PTR [r15+0x8],0x0
  420bfa:	mov    rdi,rbx
  420bfd:	call   41e130 <__flatcc_fb_default_error_out@@Base+0x240>
  420c02:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  420c07:	nop    WORD PTR [rax+rax*1+0x0]
  420c10:	lea    r13,[r15+0x1]
  420c14:	cmp    rbp,r13
  420c17:	je     420c30 <__flatcc_fb_parse@@Base+0x1000>
  420c19:	movzx  edx,BYTE PTR [r15+0x1]
  420c1e:	cmp    dl,0x58
  420c21:	je     420cf0 <__flatcc_fb_parse@@Base+0x10c0>
  420c27:	cmp    dl,0x78
  420c2a:	je     420cf0 <__flatcc_fb_parse@@Base+0x10c0>
  420c30:	mov    r14,r15
  420c33:	nop    DWORD PTR [rax+rax*1+0x0]
  420c38:	inc    r14
  420c3b:	je     405430 <__sprintf_chk@plt+0x10>
  420c41:	movzx  edx,BYTE PTR [r14]
  420c45:	lea    ecx,[rdx-0x30]
  420c48:	cmp    cl,0x9
  420c4b:	jbe    420c38 <__flatcc_fb_parse@@Base+0x1008>
  420c4d:	cmp    dl,0x2e
  420c50:	je     422340 <__flatcc_fb_parse@@Base+0x2710>
  420c56:	cmp    rbp,r14
  420c59:	je     421cc8 <__flatcc_fb_parse@@Base+0x2098>
  420c5f:	and    edx,0xffffffdf
  420c62:	mov    rsi,r14
  420c65:	cmp    dl,0x45
  420c68:	jne    421cc8 <__flatcc_fb_parse@@Base+0x2098>
  420c6e:	lea    r13,[r14+0x1]
  420c72:	cmp    rbp,r13
  420c75:	je     421451 <__flatcc_fb_parse@@Base+0x1821>
  420c7b:	movzx  eax,BYTE PTR [r14+0x1]
  420c80:	lea    edx,[rax-0x2b]
  420c83:	and    edx,0xfd
  420c89:	cmovne r13,r14
  420c8d:	jmp    421451 <__flatcc_fb_parse@@Base+0x1821>
  420c92:	nop    WORD PTR [rax+rax*1+0x0]
  420c98:	lea    r13,[r15+0x1]
  420c9c:	cmp    rbp,r13
  420c9f:	je     420ccb <__flatcc_fb_parse@@Base+0x109b>
  420ca1:	movzx  edx,BYTE PTR [r15+0x1]
  420ca6:	cmp    dl,0x3d
  420ca9:	je     421e60 <__flatcc_fb_parse@@Base+0x2230>
  420caf:	cmp    dl,0x7c
  420cb2:	jne    420ccb <__flatcc_fb_parse@@Base+0x109b>
  420cb4:	lea    r13,[r15+0x2]
  420cb8:	mov    rcx,r13
  420cbb:	mov    rdx,r15
  420cbe:	mov    esi,0x7c7c
  420cc3:	mov    rdi,rbx
  420cc6:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  420ccb:	mov    rdx,r15
  420cce:	mov    rcx,r13
  420cd1:	mov    esi,0x7c
  420cd6:	mov    rdi,rbx
  420cd9:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  420cde:	mov    r15,r13
  420ce1:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  420ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420cf0:	inc    r13
  420cf3:	cmp    rbp,r13
  420cf6:	je     420d10 <__flatcc_fb_parse@@Base+0x10e0>
  420cf8:	movzx  edx,BYTE PTR [r13+0x0]
  420cfd:	lea    ecx,[rdx-0x30]
  420d00:	cmp    cl,0x9
  420d03:	jbe    420cf0 <__flatcc_fb_parse@@Base+0x10c0>
  420d05:	or     edx,0x20
  420d08:	sub    edx,0x61
  420d0b:	cmp    dl,0x5
  420d0e:	jbe    420cf0 <__flatcc_fb_parse@@Base+0x10c0>
  420d10:	mov    rdx,r15
  420d13:	mov    rcx,r13
  420d16:	mov    esi,0xe
  420d1b:	mov    rdi,rbx
  420d1e:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  420d23:	mov    r15,r13
  420d26:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  420d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  420d30:	lea    r13,[r15+0x1]
  420d34:	cmp    rbp,r13
  420d37:	je     421dd0 <__flatcc_fb_parse@@Base+0x21a0>
  420d3d:	movzx  edx,BYTE PTR [r15+0x1]
  420d42:	cmp    dl,0x3a
  420d45:	je     421ee0 <__flatcc_fb_parse@@Base+0x22b0>
  420d4b:	cmp    dl,0x3d
  420d4e:	jne    421dd0 <__flatcc_fb_parse@@Base+0x21a0>
  420d54:	lea    r13,[r15+0x2]
  420d58:	mov    rdx,r15
  420d5b:	mov    rcx,r13
  420d5e:	mov    esi,0x3d3a
  420d63:	mov    rdi,rbx
  420d66:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  420d6b:	mov    r15,r13
  420d6e:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  420d73:	nop    DWORD PTR [rax+rax*1+0x0]
  420d78:	lea    r13,[r15+0x1]
  420d7c:	cmp    rbp,r13
  420d7f:	je     420da1 <__flatcc_fb_parse@@Base+0x1171>
  420d81:	movzx  edx,BYTE PTR [r15+0x1]
  420d86:	cmp    dl,0x3c
  420d89:	je     4221f0 <__flatcc_fb_parse@@Base+0x25c0>
  420d8f:	cmp    dl,0x3d
  420d92:	je     4221d0 <__flatcc_fb_parse@@Base+0x25a0>
  420d98:	cmp    dl,0x2d
  420d9b:	je     4221b0 <__flatcc_fb_parse@@Base+0x2580>
  420da1:	mov    rdx,r15
  420da4:	mov    rcx,r13
  420da7:	mov    esi,0x3c
  420dac:	mov    rdi,rbx
  420daf:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  420db4:	mov    r15,r13
  420db7:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  420dbc:	nop    DWORD PTR [rax+0x0]
  420dc0:	lea    r13,[r15+0x1]
  420dc4:	cmp    rbp,r13
  420dc7:	je     421db0 <__flatcc_fb_parse@@Base+0x2180>
  420dcd:	movzx  edx,BYTE PTR [r15+0x1]
  420dd2:	cmp    dl,0x2b
  420dd5:	je     421ec0 <__flatcc_fb_parse@@Base+0x2290>
  420ddb:	cmp    dl,0x3d
  420dde:	jne    421db0 <__flatcc_fb_parse@@Base+0x2180>
  420de4:	lea    r13,[r15+0x2]
  420de8:	mov    rdx,r15
  420deb:	mov    rcx,r13
  420dee:	mov    esi,0x3d2b
  420df3:	mov    rdi,rbx
  420df6:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  420dfb:	mov    r15,r13
  420dfe:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  420e03:	nop    DWORD PTR [rax+rax*1+0x0]
  420e08:	lea    r13,[r15+0x1]
  420e0c:	cmp    rbp,r13
  420e0f:	je     420e31 <__flatcc_fb_parse@@Base+0x1201>
  420e11:	movzx  edx,BYTE PTR [r15+0x1]
  420e16:	cmp    dl,0x3d
  420e19:	je     422260 <__flatcc_fb_parse@@Base+0x2630>
  420e1f:	cmp    dl,0x3e
  420e22:	je     422238 <__flatcc_fb_parse@@Base+0x2608>
  420e28:	cmp    dl,0x2d
  420e2b:	je     422190 <__flatcc_fb_parse@@Base+0x2560>
  420e31:	mov    rdx,r15
  420e34:	mov    rcx,r13
  420e37:	mov    esi,0x2d
  420e3c:	mov    rdi,rbx
  420e3f:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  420e44:	mov    r15,r13
  420e47:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  420e4c:	nop    DWORD PTR [rax+0x0]
  420e50:	lea    r13,[r15+0x1]
  420e54:	cmp    rbp,r13
  420e57:	je     421e10 <__flatcc_fb_parse@@Base+0x21e0>
  420e5d:	movzx  edx,BYTE PTR [r15+0x1]
  420e62:	cmp    dl,0x2e
  420e65:	je     421e30 <__flatcc_fb_parse@@Base+0x2200>
  420e6b:	jl     421e10 <__flatcc_fb_parse@@Base+0x21e0>
  420e71:	sub    edx,0x30
  420e74:	mov    rsi,r15
  420e77:	cmp    dl,0x9
  420e7a:	jbe    420e99 <__flatcc_fb_parse@@Base+0x1269>
  420e7c:	jmp    421e10 <__flatcc_fb_parse@@Base+0x21e0>
  420e81:	nop    DWORD PTR [rax+0x0]
  420e88:	movzx  edx,BYTE PTR [r13+0x0]
  420e8d:	lea    ecx,[rdx-0x30]
  420e90:	cmp    cl,0x9
  420e93:	ja     421f10 <__flatcc_fb_parse@@Base+0x22e0>
  420e99:	inc    r13
  420e9c:	cmp    rbp,r13
  420e9f:	jne    420e88 <__flatcc_fb_parse@@Base+0x1258>
  420ea1:	cmp    r13,rsi
  420ea4:	je     421cc1 <__flatcc_fb_parse@@Base+0x2091>
  420eaa:	mov    rdx,r15
  420ead:	mov    rcx,r13
  420eb0:	mov    esi,0xb
  420eb5:	mov    rdi,rbx
  420eb8:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  420ebd:	mov    r15,r13
  420ec0:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  420ec5:	nop    DWORD PTR [rax]
  420ec8:	lea    r13,[r15+0x1]
  420ecc:	cmp    rbp,r13
  420ecf:	je     420ef1 <__flatcc_fb_parse@@Base+0x12c1>
  420ed1:	movzx  edx,BYTE PTR [r15+0x1]
  420ed6:	cmp    dl,0x2f
  420ed9:	je     41fd30 <__flatcc_fb_parse@@Base+0x100>
  420edf:	cmp    dl,0x3d
  420ee2:	je     4220d0 <__flatcc_fb_parse@@Base+0x24a0>
  420ee8:	cmp    dl,0x2a
  420eeb:	je     421f28 <__flatcc_fb_parse@@Base+0x22f8>
  420ef1:	mov    rdx,r15
  420ef4:	mov    rcx,r13
  420ef7:	mov    esi,0x2f
  420efc:	mov    rdi,rbx
  420eff:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  420f04:	mov    r15,r13
  420f07:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  420f0c:	nop    DWORD PTR [rax+0x0]
  420f10:	lea    r13,[r15+0x1]
  420f14:	cmp    rbp,r13
  420f17:	je     421d90 <__flatcc_fb_parse@@Base+0x2160>
  420f1d:	movzx  edx,BYTE PTR [r15+0x1]
  420f22:	cmp    dl,0x3d
  420f25:	je     421ea0 <__flatcc_fb_parse@@Base+0x2270>
  420f2b:	cmp    dl,0x3e
  420f2e:	jne    421d90 <__flatcc_fb_parse@@Base+0x2160>
  420f34:	lea    r13,[r15+0x2]
  420f38:	cmp    rbp,r13
  420f3b:	je     421d10 <__flatcc_fb_parse@@Base+0x20e0>
  420f41:	movzx  edx,BYTE PTR [r15+0x2]
  420f46:	cmp    dl,0x3d
  420f49:	je     422370 <__flatcc_fb_parse@@Base+0x2740>
  420f4f:	cmp    dl,0x3e
  420f52:	jne    421d10 <__flatcc_fb_parse@@Base+0x20e0>
  420f58:	lea    r13,[r15+0x3]
  420f5c:	cmp    rbp,r13
  420f5f:	je     420f6c <__flatcc_fb_parse@@Base+0x133c>
  420f61:	cmp    BYTE PTR [r15+0x3],0x3d
  420f66:	je     422820 <__flatcc_fb_parse@@Base+0x2bf0>
  420f6c:	mov    rdx,r15
  420f6f:	mov    rcx,r13
  420f72:	mov    esi,0x3e3e3e
  420f77:	mov    rdi,rbx
  420f7a:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  420f7f:	mov    r15,r13
  420f82:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  420f87:	nop    WORD PTR [rax+rax*1+0x0]
  420f90:	movsx  rdx,sil
  420f94:	mov    rsi,rdx
  420f97:	lea    r14,[r15+0x1]
  420f9b:	shl    rsi,0x8
  420f9f:	mov    ecx,0x31
  420fa4:	cmp    rbp,r14
  420fa7:	je     420fc0 <__flatcc_fb_parse@@Base+0x1390>
  420fa9:	movzx  r10d,BYTE PTR [r15+0x1]
  420fae:	lea    rdi,[rip+0x273cb]        # 448380 <fb_schema_table_missing@@Base+0xec0>
  420fb5:	cmp    BYTE PTR [rdi+r10*1],0x0
  420fba:	jne    4222f8 <__flatcc_fb_parse@@Base+0x26c8>
  420fc0:	or     rcx,rsi
  420fc3:	mov    rsi,rdx
  420fc6:	shl    rsi,0x18
  420fca:	or     rsi,rcx
  420fcd:	cmp    rsi,0x6570723b
  420fd4:	je     42255a <__flatcc_fb_parse@@Base+0x292a>
  420fda:	ja     421670 <__flatcc_fb_parse@@Base+0x1a40>
  420fe0:	cmp    rsi,0x38697535
  420fe7:	je     422536 <__flatcc_fb_parse@@Base+0x2906>
  420fed:	ja     421610 <__flatcc_fb_parse@@Base+0x19e0>
  420ff3:	cmp    rsi,0x34697536
  420ffa:	je     422510 <__flatcc_fb_parse@@Base+0x28e0>
  421000:	jbe    4215c0 <__flatcc_fb_parse@@Base+0x1990>
  421006:	cmp    rsi,0x346e6935
  42100d:	je     4224c0 <__flatcc_fb_parse@@Base+0x2890>
  421013:	jbe    421580 <__flatcc_fb_parse@@Base+0x1950>
  421019:	cmp    rsi,0x36697536
  421020:	jne    421950 <__flatcc_fb_parse@@Base+0x1d20>
  421026:	cmp    DWORD PTR [r15],0x746e6975
  42102d:	je     421d2b <__flatcc_fb_parse@@Base+0x20fb>
  421033:	nop    DWORD PTR [rax+rax*1+0x0]
  421038:	mov    esi,0x9
  42103d:	mov    rdx,r15
  421040:	mov    rcx,r14
  421043:	mov    rdi,rbx
  421046:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  42104b:	mov    r15,r14
  42104e:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421053:	nop    DWORD PTR [rax+rax*1+0x0]
  421058:	lea    rdx,[r15+0x1]
  42105c:	cmp    rbp,rdx
  42105f:	je     421068 <__flatcc_fb_parse@@Base+0x1438>
  421061:	cmp    BYTE PTR [r15+0x1],0xd
  421066:	je     421090 <__flatcc_fb_parse@@Base+0x1460>
  421068:	inc    QWORD PTR [rbx+0x78]
  42106c:	mov    QWORD PTR [rbx+0x70],rdx
  421070:	mov    r15,rdx
  421073:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421078:	nop    DWORD PTR [rax+rax*1+0x0]
  421080:	lea    rdx,[r15+0x1]
  421084:	cmp    rbp,rdx
  421087:	je     421068 <__flatcc_fb_parse@@Base+0x1438>
  421089:	cmp    BYTE PTR [r15+0x1],0xa
  42108e:	jne    421068 <__flatcc_fb_parse@@Base+0x1438>
  421090:	lea    rdx,[r15+0x2]
  421094:	jmp    421068 <__flatcc_fb_parse@@Base+0x1438>
  421096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4210a0:	lea    r13,[r15+0x1]
  4210a4:	movsx  rsi,sil
  4210a8:	mov    rdx,r15
  4210ab:	mov    rcx,r13
  4210ae:	mov    rdi,rbx
  4210b1:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4210b6:	mov    r15,r13
  4210b9:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  4210be:	xchg   ax,ax
  4210c0:	lea    r13,[r15+0x1]
  4210c4:	cmp    rbp,r13
  4210c7:	je     421bd7 <__flatcc_fb_parse@@Base+0x1fa7>
  4210cd:	movzx  edx,BYTE PTR [r15+0x1]
  4210d2:	cmp    dl,0x26
  4210d5:	je     421bc0 <__flatcc_fb_parse@@Base+0x1f90>
  4210db:	cmp    dl,0x3d
  4210de:	jne    421bd7 <__flatcc_fb_parse@@Base+0x1fa7>
  4210e4:	lea    r13,[r15+0x2]
  4210e8:	mov    rdx,r15
  4210eb:	mov    rcx,r13
  4210ee:	mov    esi,0x3d26
  4210f3:	mov    rdi,rbx
  4210f6:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4210fb:	mov    r15,r13
  4210fe:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421103:	nop    DWORD PTR [rax+rax*1+0x0]
  421108:	lea    r13,[r15+0x1]
  42110c:	cmp    rbp,r13
  42110f:	je     421df0 <__flatcc_fb_parse@@Base+0x21c0>
  421115:	movzx  edx,BYTE PTR [r15+0x1]
  42111a:	cmp    dl,0x2a
  42111d:	je     421e80 <__flatcc_fb_parse@@Base+0x2250>
  421123:	cmp    dl,0x3d
  421126:	jne    421df0 <__flatcc_fb_parse@@Base+0x21c0>
  42112c:	mov    rdx,r15
  42112f:	mov    esi,0x3d2a
  421134:	mov    rcx,r13
  421137:	mov    rdi,rbx
  42113a:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  42113f:	movzx  esi,BYTE PTR [r15+0x1]
  421144:	mov    r15,r13
  421147:	jmp    41fcf8 <__flatcc_fb_parse@@Base+0xc8>
  42114c:	nop    DWORD PTR [rax+0x0]
  421150:	lea    r13,[r15+0x1]
  421154:	movsx  rsi,sil
  421158:	cmp    rbp,r13
  42115b:	je     4210a8 <__flatcc_fb_parse@@Base+0x1478>
  421161:	cmp    BYTE PTR [r15+0x1],0x3d
  421166:	jne    4210a8 <__flatcc_fb_parse@@Base+0x1478>
  42116c:	lea    r13,[r15+0x2]
  421170:	or     rsi,0x3d00
  421177:	jmp    4210a8 <__flatcc_fb_parse@@Base+0x1478>
  42117c:	nop    DWORD PTR [rax+0x0]
  421180:	lea    r13,[r15+0x1]
  421184:	cmp    rbp,r13
  421187:	je     421c5f <__flatcc_fb_parse@@Base+0x202f>
  42118d:	movzx  edx,BYTE PTR [r15+0x1]
  421192:	cmp    dl,0x3d
  421195:	je     421c38 <__flatcc_fb_parse@@Base+0x2008>
  42119b:	cmp    dl,0x3e
  42119e:	jne    421c5f <__flatcc_fb_parse@@Base+0x202f>
  4211a4:	lea    r13,[r15+0x2]
  4211a8:	mov    rdx,r15
  4211ab:	mov    rcx,r13
  4211ae:	mov    esi,0x3e3d
  4211b3:	mov    rdi,rbx
  4211b6:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4211bb:	mov    r15,r13
  4211be:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  4211c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4211c8:	mov    rdi,rbx
  4211cb:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  4211d0:	mov    QWORD PTR [rbx+0x340],0x0
  4211db:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  4211e0:	xor    r9d,r9d
  4211e3:	xor    r8d,r8d
  4211e6:	xor    ecx,ecx
  4211e8:	lea    rdx,[rip+0x26e6a]        # 448059 <fb_schema_table_missing@@Base+0xb99>
  4211ef:	mov    rsi,r14
  4211f2:	mov    rdi,rbx
  4211f5:	call   41e370 <__flatcc_error_report@@Base>
  4211fa:	jmp    420bc2 <__flatcc_fb_parse@@Base+0xf92>
  4211ff:	nop
  421200:	xor    r9d,r9d
  421203:	xor    r8d,r8d
  421206:	xor    ecx,ecx
  421208:	lea    rdx,[rip+0x26de9]        # 447ff8 <fb_schema_table_missing@@Base+0xb38>
  42120f:	mov    rdi,rbx
  421212:	call   41e370 <__flatcc_error_report@@Base>
  421217:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  42121c:	nop    DWORD PTR [rax+0x0]
  421220:	mov    esi,0x1
  421225:	mov    edi,0x10000
  42122a:	call   405340 <calloc@plt>
  42122f:	test   rax,rax
  421232:	je     42285e <__flatcc_fb_parse@@Base+0x2c2e>
  421238:	mov    rdx,QWORD PTR [rbx+0x58]
  42123c:	lea    rsi,[rax+0x10]
  421240:	mov    QWORD PTR [rax],rdx
  421243:	lea    rdx,[rax+0x10000]
  42124a:	mov    QWORD PTR [rbx+0x58],rax
  42124e:	mov    QWORD PTR [rbx+0x50],rdx
  421252:	add    rax,0xe0
  421258:	jmp    4208dd <__flatcc_fb_parse@@Base+0xcad>
  42125d:	nop    DWORD PTR [rax]
  421260:	mov    esi,0x1
  421265:	mov    edi,0x10000
  42126a:	call   405340 <calloc@plt>
  42126f:	test   rax,rax
  421272:	je     42285e <__flatcc_fb_parse@@Base+0x2c2e>
  421278:	mov    rdx,QWORD PTR [rbx+0x58]
  42127c:	lea    rsi,[rax+0x10]
  421280:	mov    QWORD PTR [rax],rdx
  421283:	lea    rdx,[rax+0x10000]
  42128a:	mov    QWORD PTR [rbx+0x58],rax
  42128e:	mov    QWORD PTR [rbx+0x50],rdx
  421292:	add    rax,0xe0
  421298:	jmp    4207e5 <__flatcc_fb_parse@@Base+0xbb5>
  42129d:	nop    DWORD PTR [rax]
  4212a0:	mov    rsi,QWORD PTR [rbx+0x48]
  4212a4:	mov    r9d,DWORD PTR [rbx+0x210]
  4212ab:	mov    r8,QWORD PTR [rbx+0x208]
  4212b2:	xor    ecx,ecx
  4212b4:	lea    rdx,[rip+0x26d21]        # 447fdc <fb_schema_table_missing@@Base+0xb1c>
  4212bb:	mov    rdi,rbx
  4212be:	call   41e370 <__flatcc_error_report@@Base>
  4212c3:	jmp    41ff31 <__flatcc_fb_parse@@Base+0x301>
  4212c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4212d0:	mov    esi,0x1
  4212d5:	mov    edi,0x10000
  4212da:	call   405340 <calloc@plt>
  4212df:	test   rax,rax
  4212e2:	je     42285e <__flatcc_fb_parse@@Base+0x2c2e>
  4212e8:	mov    rdx,QWORD PTR [rbx+0x58]
  4212ec:	lea    rsi,[rax+0x10]
  4212f0:	mov    QWORD PTR [rax],rdx
  4212f3:	lea    rdx,[rax+0x10000]
  4212fa:	mov    QWORD PTR [rbx+0x58],rax
  4212fe:	mov    QWORD PTR [rbx+0x50],rdx
  421302:	add    rax,0xe0
  421308:	jmp    4206e5 <__flatcc_fb_parse@@Base+0xab5>
  42130d:	nop    DWORD PTR [rax]
  421310:	mov    esi,0x1
  421315:	mov    edi,0x10000
  42131a:	call   405340 <calloc@plt>
  42131f:	test   rax,rax
  421322:	je     42285e <__flatcc_fb_parse@@Base+0x2c2e>
  421328:	mov    rdx,QWORD PTR [rbx+0x58]
  42132c:	lea    r15,[rax+0x10]
  421330:	mov    QWORD PTR [rax],rdx
  421333:	lea    rdx,[rax+0x10000]
  42133a:	mov    QWORD PTR [rbx+0x58],rax
  42133e:	mov    QWORD PTR [rbx+0x50],rdx
  421342:	add    rax,0xe0
  421348:	jmp    42047d <__flatcc_fb_parse@@Base+0x84d>
  42134d:	nop    DWORD PTR [rax]
  421350:	mov    esi,0x1
  421355:	mov    edi,0x10000
  42135a:	call   405340 <calloc@plt>
  42135f:	test   rax,rax
  421362:	je     42285e <__flatcc_fb_parse@@Base+0x2c2e>
  421368:	mov    rdx,QWORD PTR [rbx+0x58]
  42136c:	lea    r14,[rax+0x10]
  421370:	mov    QWORD PTR [rax],rdx
  421373:	lea    rdx,[rax+0x10000]
  42137a:	mov    QWORD PTR [rbx+0x58],rax
  42137e:	mov    QWORD PTR [rbx+0x50],rdx
  421382:	add    rax,0x40
  421386:	jmp    420a5a <__flatcc_fb_parse@@Base+0xe2a>
  42138b:	nop    DWORD PTR [rax+rax*1+0x0]
  421390:	mov    esi,0x1
  421395:	mov    edi,0x10000
  42139a:	call   405340 <calloc@plt>
  42139f:	test   rax,rax
  4213a2:	je     42285e <__flatcc_fb_parse@@Base+0x2c2e>
  4213a8:	mov    rdx,QWORD PTR [rbx+0x58]
  4213ac:	lea    r15,[rax+0x10]
  4213b0:	mov    QWORD PTR [rax],rdx
  4213b3:	lea    rdx,[rax+0x10000]
  4213ba:	mov    QWORD PTR [rbx+0x58],rax
  4213be:	mov    QWORD PTR [rbx+0x50],rdx
  4213c2:	add    rax,0xe0
  4213c8:	jmp    4202ad <__flatcc_fb_parse@@Base+0x67d>
  4213cd:	nop    DWORD PTR [rax]
  4213d0:	mov    rdi,rbx
  4213d3:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  4213d8:	lea    rsi,[r15+0x48]
  4213dc:	mov    rdi,rbx
  4213df:	call   41e6a0 <__flatcc_error_report@@Base+0x330>
  4213e4:	cmp    WORD PTR [r15+0x58],0x8
  4213ea:	mov    rsi,QWORD PTR [r15+0x48]
  4213ee:	jne    421420 <__flatcc_fb_parse@@Base+0x17f0>
  4213f0:	mov    rax,QWORD PTR [rsi+0x20]
  4213f4:	add    rax,0x3e4
  4213fa:	cmp    rax,0x15
  4213fe:	ja     42032f <__flatcc_fb_parse@@Base+0x6ff>
  421404:	mov    edx,0x1
  421409:	shlx   rax,rdx,rax
  42140e:	test   eax,0x200803
  421413:	je     42032f <__flatcc_fb_parse@@Base+0x6ff>
  421419:	nop    DWORD PTR [rax+0x0]
  421420:	xor    r9d,r9d
  421423:	xor    r8d,r8d
  421426:	xor    ecx,ecx
  421428:	lea    rdx,[rip+0x26c13]        # 448042 <fb_schema_table_missing@@Base+0xb82>
  42142f:	mov    rdi,rbx
  421432:	call   41e370 <__flatcc_error_report@@Base>
  421437:	jmp    42032f <__flatcc_fb_parse@@Base+0x6ff>
  42143c:	nop    DWORD PTR [rax+0x0]
  421440:	movzx  eax,BYTE PTR [r13+0x0]
  421445:	lea    edx,[rax-0x30]
  421448:	cmp    dl,0x9
  42144b:	ja     420ea1 <__flatcc_fb_parse@@Base+0x1271>
  421451:	inc    r13
  421454:	cmp    rbp,r13
  421457:	jne    421440 <__flatcc_fb_parse@@Base+0x1810>
  421459:	jmp    420ea1 <__flatcc_fb_parse@@Base+0x1271>
  42145e:	xchg   ax,ax
  421460:	lea    r14,[r15+0x1]
  421464:	sub    esi,0x20
  421467:	mov    rcx,r14
  42146a:	mov    rdx,r15
  42146d:	cmp    sil,0x5e
  421471:	jbe    421a40 <__flatcc_fb_parse@@Base+0x1e10>
  421477:	mov    esi,0x5
  42147c:	mov    rdi,rbx
  42147f:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421484:	mov    r15,r14
  421487:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  42148c:	nop    DWORD PTR [rax+0x0]
  421490:	mov    rcx,r15
  421493:	mov    rdx,r15
  421496:	mov    esi,0x17
  42149b:	mov    rdi,rbx
  42149e:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4214a3:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  4214a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4214b0:	mov    rdx,QWORD PTR [rbx+0x200]
  4214b7:	test   rdx,rdx
  4214ba:	je     4214d1 <__flatcc_fb_parse@@Base+0x18a1>
  4214bc:	xor    esi,esi
  4214be:	jmp    4214c3 <__flatcc_fb_parse@@Base+0x1893>
  4214c0:	mov    rdx,rcx
  4214c3:	mov    rcx,QWORD PTR [rdx]
  4214c6:	mov    QWORD PTR [rdx],rsi
  4214c9:	mov    rsi,rdx
  4214cc:	test   rcx,rcx
  4214cf:	jne    4214c0 <__flatcc_fb_parse@@Base+0x1890>
  4214d1:	mov    QWORD PTR [rbx+0x200],rdx
  4214d8:	mov    rdx,QWORD PTR [rbx+0x238]
  4214df:	test   rdx,rdx
  4214e2:	je     421501 <__flatcc_fb_parse@@Base+0x18d1>
  4214e4:	xor    esi,esi
  4214e6:	jmp    4214f3 <__flatcc_fb_parse@@Base+0x18c3>
  4214e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4214f0:	mov    rdx,rcx
  4214f3:	mov    rcx,QWORD PTR [rdx]
  4214f6:	mov    QWORD PTR [rdx],rsi
  4214f9:	mov    rsi,rdx
  4214fc:	test   rcx,rcx
  4214ff:	jne    4214f0 <__flatcc_fb_parse@@Base+0x18c0>
  421501:	mov    QWORD PTR [rbx+0x238],rdx
  421508:	jmp    420008 <__flatcc_fb_parse@@Base+0x3d8>
  42150d:	nop    DWORD PTR [rax]
  421510:	mov    rdi,rbx
  421513:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  421518:	mov    r13,QWORD PTR [rbx+0x48]
  42151c:	mov    rax,QWORD PTR [r13+0x20]
  421520:	cmp    rax,0x7d
  421524:	je     420412 <__flatcc_fb_parse@@Base+0x7e2>
  42152a:	mov    QWORD PTR [rbx+0x40],0x0
  421532:	cmp    rax,0x9
  421536:	je     420361 <__flatcc_fb_parse@@Base+0x731>
  42153c:	xor    r9d,r9d
  42153f:	xor    r8d,r8d
  421542:	xor    ecx,ecx
  421544:	lea    rdx,[rip+0x26b2c]        # 448077 <fb_schema_table_missing@@Base+0xbb7>
  42154b:	mov    rsi,r13
  42154e:	mov    rdi,rbx
  421551:	call   41e370 <__flatcc_error_report@@Base>
  421556:	jmp    420bc2 <__flatcc_fb_parse@@Base+0xf92>
  42155b:	nop    DWORD PTR [rax+rax*1+0x0]
  421560:	xor    r9d,r9d
  421563:	xor    r8d,r8d
  421566:	xor    ecx,ecx
  421568:	lea    rdx,[rip+0x264f9]        # 447a68 <fb_schema_table_missing@@Base+0x5a8>
  42156f:	mov    rdi,rbx
  421572:	call   41e370 <__flatcc_error_report@@Base>
  421577:	jmp    42027d <__flatcc_fb_parse@@Base+0x64d>
  42157c:	nop    DWORD PTR [rax+0x0]
  421580:	cmp    rsi,0x346c6637
  421587:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42158d:	cmp    DWORD PTR [r15],0x616f6c66
  421594:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42159a:	cmp    WORD PTR [r15+0x4],0x3674
  4215a1:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4215a7:	cmp    BYTE PTR [r15+0x6],0x34
  4215ac:	mov    rsi,0xfffffffffffffc1d
  4215b3:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4215b9:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  4215be:	xchg   ax,ax
  4215c0:	cmp    rsi,0x326c6637
  4215c7:	je     4225c0 <__flatcc_fb_parse@@Base+0x2990>
  4215cd:	cmp    rsi,0x326e6935
  4215d4:	je     422710 <__flatcc_fb_parse@@Base+0x2ae0>
  4215da:	cmp    rsi,0x32697536
  4215e1:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4215e7:	cmp    DWORD PTR [r15],0x746e6975
  4215ee:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4215f4:	cmp    WORD PTR [r15+0x4],0x3233
  4215fb:	mov    rsi,0xfffffffffffffc2d
  421602:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  421608:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  42160d:	nop    DWORD PTR [rax]
  421610:	cmp    rsi,0x65617435
  421617:	je     422598 <__flatcc_fb_parse@@Base+0x2968>
  42161d:	jbe    421748 <__flatcc_fb_parse@@Base+0x1b18>
  421623:	cmp    rsi,0x656e6937
  42162a:	je     422620 <__flatcc_fb_parse@@Base+0x29f0>
  421630:	jbe    421710 <__flatcc_fb_parse@@Base+0x1ae0>
  421636:	cmp    rsi,0x656f6436
  42163d:	jne    4216d8 <__flatcc_fb_parse@@Base+0x1aa8>
  421643:	cmp    DWORD PTR [r15],0x62756f64
  42164a:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  421650:	cmp    WORD PTR [r15+0x4],0x656c
  421657:	mov    rsi,0xfffffffffffffc31
  42165e:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  421664:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  421669:	nop    DWORD PTR [rax+0x0]
  421670:	cmp    rsi,0x6e69663e
  421677:	je     4227e4 <__flatcc_fb_parse@@Base+0x2bb4>
  42167d:	ja     421808 <__flatcc_fb_parse@@Base+0x1bd8>
  421683:	cmp    rsi,0x676c7535
  42168a:	je     4227c0 <__flatcc_fb_parse@@Base+0x2b90>
  421690:	jbe    4217c0 <__flatcc_fb_parse@@Base+0x1b90>
  421696:	cmp    rsi,0x67747336
  42169d:	je     422790 <__flatcc_fb_parse@@Base+0x2b60>
  4216a3:	jbe    421860 <__flatcc_fb_parse@@Base+0x1c30>
  4216a9:	cmp    rsi,0x6c6f6234
  4216b0:	jne    421790 <__flatcc_fb_parse@@Base+0x1b60>
  4216b6:	cmp    DWORD PTR [r15],0x6c6f6f62
  4216bd:	mov    esi,0x9
  4216c2:	mov    rdx,0xfffffffffffffc19
  4216c9:	cmove  rsi,rdx
  4216cd:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  4216d2:	nop    WORD PTR [rax+rax*1+0x0]
  4216d8:	cmp    rsi,0x656f7239
  4216df:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4216e5:	movabs rdx,0x7079745f746f6f72
  4216ef:	cmp    QWORD PTR [r15],rdx
  4216f2:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4216f8:	cmp    BYTE PTR [r15+0x8],0x65
  4216fd:	mov    rsi,0xfffffffffffffc38
  421704:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42170a:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  42170f:	nop
  421710:	cmp    rsi,0x65627535
  421717:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42171d:	cmp    DWORD PTR [r15],0x74796275
  421724:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42172a:	cmp    BYTE PTR [r15+0x4],0x65
  42172f:	mov    rsi,0xfffffffffffffc2a
  421736:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42173c:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  421741:	nop    DWORD PTR [rax+0x0]
  421748:	cmp    rsi,0x65616635
  42174f:	je     422768 <__flatcc_fb_parse@@Base+0x2b38>
  421755:	cmp    rsi,0x65616e39
  42175c:	je     422738 <__flatcc_fb_parse@@Base+0x2b08>
  421762:	cmp    rsi,0x386e6934
  421769:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42176f:	cmp    DWORD PTR [r15],0x38746e69
  421776:	mov    esi,0x9
  42177b:	mov    rdx,0xfffffffffffffc1f
  421782:	cmove  rsi,rdx
  421786:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  42178b:	nop    DWORD PTR [rax+rax*1+0x0]
  421790:	cmp    rsi,0x6d6e6534
  421797:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42179d:	cmp    DWORD PTR [r15],0x6d756e65
  4217a4:	mov    esi,0x9
  4217a9:	mov    rdx,0xfffffffffffffc1b
  4217b0:	cmove  rsi,rdx
  4217b4:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  4217b9:	nop    DWORD PTR [rax+0x0]
  4217c0:	cmp    rsi,0x65746139
  4217c7:	je     4226c0 <__flatcc_fb_parse@@Base+0x2a90>
  4217cd:	cmp    rsi,0x65796234
  4217d4:	je     4226f0 <__flatcc_fb_parse@@Base+0x2ac0>
  4217da:	cmp    rsi,0x65727434
  4217e1:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4217e7:	cmp    DWORD PTR [r15],0x65757274
  4217ee:	mov    esi,0x9
  4217f3:	mov    rdx,0xfffffffffffffc24
  4217fa:	cmove  rsi,rdx
  4217fe:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  421803:	nop    DWORD PTR [rax+rax*1+0x0]
  421808:	cmp    rsi,0x74697534
  42180f:	je     4226a0 <__flatcc_fb_parse@@Base+0x2a70>
  421815:	jbe    421900 <__flatcc_fb_parse@@Base+0x1cd0>
  42181b:	cmp    rsi,0x746e6933
  421822:	je     4225f8 <__flatcc_fb_parse@@Base+0x29c8>
  421828:	jbe    4218c8 <__flatcc_fb_parse@@Base+0x1c98>
  42182e:	cmp    rsi,0x74737536
  421835:	jne    421890 <__flatcc_fb_parse@@Base+0x1c60>
  421837:	cmp    DWORD PTR [r15],0x6f687375
  42183e:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  421844:	cmp    WORD PTR [r15+0x4],0x7472
  42184b:	mov    rsi,0xfffffffffffffc34
  421852:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  421858:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  42185d:	nop    DWORD PTR [rax]
  421860:	cmp    rsi,0x676f6c34
  421867:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42186d:	cmp    DWORD PTR [r15],0x676e6f6c
  421874:	mov    esi,0x9
  421879:	mov    rdx,0xfffffffffffffc23
  421880:	cmove  rsi,rdx
  421884:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  421889:	nop    DWORD PTR [rax+0x0]
  421890:	cmp    rsi,0x74747336
  421897:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42189d:	cmp    DWORD PTR [r15],0x75727473
  4218a4:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4218aa:	cmp    WORD PTR [r15+0x4],0x7463
  4218b1:	mov    rsi,0xfffffffffffffc33
  4218b8:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4218be:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  4218c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4218c8:	cmp    rsi,0x746c6635
  4218cf:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4218d5:	cmp    DWORD PTR [r15],0x616f6c66
  4218dc:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4218e2:	cmp    BYTE PTR [r15+0x4],0x74
  4218e7:	mov    rsi,0xfffffffffffffc27
  4218ee:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4218f4:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  4218f9:	nop    DWORD PTR [rax+0x0]
  421900:	cmp    rsi,0x7269663f
  421907:	je     422658 <__flatcc_fb_parse@@Base+0x2a28>
  42190d:	cmp    rsi,0x74687335
  421914:	je     4224e8 <__flatcc_fb_parse@@Base+0x28b8>
  42191a:	cmp    rsi,0x6e6e7535
  421921:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  421927:	cmp    DWORD PTR [r15],0x6f696e75
  42192e:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  421934:	cmp    BYTE PTR [r15+0x4],0x6e
  421939:	mov    rsi,0xfffffffffffffc30
  421940:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  421946:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  42194b:	nop    DWORD PTR [rax+rax*1+0x0]
  421950:	cmp    rsi,0x366e6935
  421957:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42195d:	cmp    DWORD PTR [r15],0x31746e69
  421964:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42196a:	cmp    BYTE PTR [r15+0x4],0x36
  42196f:	mov    rsi,0xfffffffffffffc20
  421976:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42197c:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  421981:	nop    DWORD PTR [rax+0x0]
  421988:	mov    rdi,rbx
  42198b:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  421990:	mov    r12,QWORD PTR [rbx+0x48]
  421994:	mov    rdx,QWORD PTR [r12+0x20]
  421999:	jmp    41fe11 <__flatcc_fb_parse@@Base+0x1e1>
  42199e:	xchg   ax,ax
  4219a0:	xor    r9d,r9d
  4219a3:	xor    r8d,r8d
  4219a6:	xor    ecx,ecx
  4219a8:	mov    rdx,r13
  4219ab:	mov    rsi,r12
  4219ae:	mov    rdi,rbx
  4219b1:	call   41e370 <__flatcc_error_report@@Base>
  4219b6:	jmp    4201f0 <__flatcc_fb_parse@@Base+0x5c0>
  4219bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4219c0:	mov    esi,0x1
  4219c5:	mov    edi,0x10000
  4219ca:	call   405340 <calloc@plt>
  4219cf:	test   rax,rax
  4219d2:	je     42285e <__flatcc_fb_parse@@Base+0x2c2e>
  4219d8:	mov    rdx,QWORD PTR [rbx+0x58]
  4219dc:	lea    rsi,[rax+0x10]
  4219e0:	mov    QWORD PTR [rax],rdx
  4219e3:	lea    rdx,[rax+0x10000]
  4219ea:	mov    QWORD PTR [rbx+0x58],rax
  4219ee:	mov    QWORD PTR [rbx+0x50],rdx
  4219f2:	add    rax,0x30
  4219f6:	jmp    42022b <__flatcc_fb_parse@@Base+0x5fb>
  4219fb:	nop    DWORD PTR [rax+rax*1+0x0]
  421a00:	mov    esi,0x1
  421a05:	mov    edi,0x10000
  421a0a:	call   405340 <calloc@plt>
  421a0f:	test   rax,rax
  421a12:	je     42285e <__flatcc_fb_parse@@Base+0x2c2e>
  421a18:	mov    rdx,QWORD PTR [rbx+0x58]
  421a1c:	lea    rsi,[rax+0x10]
  421a20:	mov    QWORD PTR [rax],rdx
  421a23:	lea    rdx,[rax+0x10000]
  421a2a:	mov    QWORD PTR [rbx+0x58],rax
  421a2e:	mov    QWORD PTR [rbx+0x50],rdx
  421a32:	add    rax,0xc0
  421a38:	jmp    42038b <__flatcc_fb_parse@@Base+0x75b>
  421a3d:	nop    DWORD PTR [rax]
  421a40:	mov    esi,0x8
  421a45:	mov    rdi,rbx
  421a48:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421a4d:	mov    r15,r14
  421a50:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421a55:	nop    DWORD PTR [rax]
  421a58:	mov    rdi,rbx
  421a5b:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  421a60:	mov    rax,QWORD PTR [rbx+0x48]
  421a64:	mov    QWORD PTR [rsp+0x18],rax
  421a69:	mov    rax,QWORD PTR [rax+0x20]
  421a6d:	cmp    rax,0x7d
  421a71:	je     42061f <__flatcc_fb_parse@@Base+0x9ef>
  421a77:	mov    QWORD PTR [rbx+0x40],0x0
  421a7f:	cmp    rax,0x9
  421a83:	je     420527 <__flatcc_fb_parse@@Base+0x8f7>
  421a89:	mov    rsi,QWORD PTR [rsp+0x18]
  421a8e:	xor    r9d,r9d
  421a91:	xor    r8d,r8d
  421a94:	xor    ecx,ecx
  421a96:	lea    rdx,[rip+0x26610]        # 4480ad <fb_schema_table_missing@@Base+0xbed>
  421a9d:	mov    rdi,rbx
  421aa0:	call   41e370 <__flatcc_error_report@@Base>
  421aa5:	jmp    420bfa <__flatcc_fb_parse@@Base+0xfca>
  421aaa:	nop    WORD PTR [rax+rax*1+0x0]
  421ab0:	mov    rdi,rbx
  421ab3:	call   41e020 <__flatcc_fb_default_error_out@@Base+0x130>
  421ab8:	mov    rax,QWORD PTR [r13+0x18]
  421abc:	cmp    QWORD PTR [rax],0x0
  421ac0:	je     421ade <__flatcc_fb_parse@@Base+0x1eae>
  421ac2:	mov    rsi,QWORD PTR [rsp+0x18]
  421ac7:	xor    r9d,r9d
  421aca:	xor    r8d,r8d
  421acd:	xor    ecx,ecx
  421acf:	lea    rdx,[rip+0x2617a]        # 447c50 <fb_schema_table_missing@@Base+0x790>
  421ad6:	mov    rdi,rbx
  421ad9:	call   41e370 <__flatcc_error_report@@Base>
  421ade:	lea    rsi,[r13+0x18]
  421ae2:	mov    rdi,rbx
  421ae5:	call   41e6a0 <__flatcc_error_report@@Base+0x330>
  421aea:	mov    rax,QWORD PTR [rbx+0x48]
  421aee:	mov    rax,QWORD PTR [rax+0x20]
  421af2:	jmp    4205ea <__flatcc_fb_parse@@Base+0x9ba>
  421af7:	nop    WORD PTR [rax+rax*1+0x0]
  421b00:	mov    rsi,QWORD PTR [rsp+0x10]
  421b05:	mov    rdi,rbx
  421b08:	call   41e520 <__flatcc_error_report@@Base+0x1b0>
  421b0d:	mov    rcx,r14
  421b10:	lea    rdx,[rip+0x25f91]        # 447aa8 <fb_schema_table_missing@@Base+0x5e8>
  421b17:	mov    esi,0x3b
  421b1c:	mov    rdi,rbx
  421b1f:	call   41e660 <__flatcc_error_report@@Base+0x2f0>
  421b24:	mov    r14,QWORD PTR [rsp+0x28]
  421b29:	mov    rdi,QWORD PTR [rbx+0x260]
  421b30:	xor    edx,edx
  421b32:	mov    rsi,r14
  421b35:	call   41d090 <fb_scope_table_find@@Base>
  421b3a:	mov    r13,rax
  421b3d:	test   rax,rax
  421b40:	je     4222b0 <__flatcc_fb_parse@@Base+0x2680>
  421b46:	mov    QWORD PTR [rbx+0x340],r13
  421b4d:	jmp    41fea0 <__flatcc_fb_parse@@Base+0x270>
  421b52:	nop    WORD PTR [rax+rax*1+0x0]
  421b58:	xor    r9d,r9d
  421b5b:	xor    r8d,r8d
  421b5e:	xor    ecx,ecx
  421b60:	lea    rdx,[rip+0x260c9]        # 447c30 <fb_schema_table_missing@@Base+0x770>
  421b67:	mov    rsi,r14
  421b6a:	mov    rdi,rbx
  421b6d:	call   41e370 <__flatcc_error_report@@Base>
  421b72:	jmp    420bfa <__flatcc_fb_parse@@Base+0xfca>
  421b77:	nop    WORD PTR [rax+rax*1+0x0]
  421b80:	lea    r13,[r15+0x2]
  421b84:	cmp    rbp,r13
  421b87:	je     421b94 <__flatcc_fb_parse@@Base+0x1f64>
  421b89:	cmp    BYTE PTR [r15+0x2],0xd
  421b8e:	je     421cb8 <__flatcc_fb_parse@@Base+0x2088>
  421b94:	inc    QWORD PTR [rbx+0x78]
  421b98:	mov    QWORD PTR [rbx+0x70],r13
  421b9c:	mov    rdx,r14
  421b9f:	mov    rcx,r13
  421ba2:	mov    esi,0x12
  421ba7:	mov    rdi,rbx
  421baa:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421baf:	mov    r14,r13
  421bb2:	jmp    420050 <__flatcc_fb_parse@@Base+0x420>
  421bb7:	nop    WORD PTR [rax+rax*1+0x0]
  421bc0:	lea    r13,[r15+0x2]
  421bc4:	mov    rcx,r13
  421bc7:	mov    rdx,r15
  421bca:	mov    esi,0x2626
  421bcf:	mov    rdi,rbx
  421bd2:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421bd7:	mov    rdx,r15
  421bda:	mov    rcx,r13
  421bdd:	mov    esi,0x26
  421be2:	mov    rdi,rbx
  421be5:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421bea:	mov    r15,r13
  421bed:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421bf2:	nop    WORD PTR [rax+rax*1+0x0]
  421bf8:	mov    esi,0x1
  421bfd:	mov    edi,0x10000
  421c02:	call   405340 <calloc@plt>
  421c07:	test   rax,rax
  421c0a:	je     42285e <__flatcc_fb_parse@@Base+0x2c2e>
  421c10:	mov    rdx,QWORD PTR [rbx+0x58]
  421c14:	lea    r13,[rax+0x10]
  421c18:	mov    QWORD PTR [rax],rdx
  421c1b:	lea    rdx,[rax+0x10000]
  421c22:	mov    QWORD PTR [rbx+0x58],rax
  421c26:	mov    QWORD PTR [rbx+0x50],rdx
  421c2a:	add    rax,0xc0
  421c30:	jmp    420549 <__flatcc_fb_parse@@Base+0x919>
  421c35:	nop    DWORD PTR [rax]
  421c38:	lea    r13,[r15+0x2]
  421c3c:	cmp    rbp,r13
  421c3f:	je     421c4c <__flatcc_fb_parse@@Base+0x201c>
  421c41:	cmp    BYTE PTR [r15+0x2],0x3d
  421c46:	je     42249d <__flatcc_fb_parse@@Base+0x286d>
  421c4c:	mov    rcx,r13
  421c4f:	mov    rdx,r15
  421c52:	mov    esi,0x3d3d
  421c57:	mov    rdi,rbx
  421c5a:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421c5f:	mov    rdx,r15
  421c62:	mov    rcx,r13
  421c65:	mov    esi,0x3d
  421c6a:	mov    rdi,rbx
  421c6d:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421c72:	mov    r15,r13
  421c75:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421c7a:	nop    WORD PTR [rax+rax*1+0x0]
  421c80:	add    r13,0x2
  421c84:	mov    rdx,r15
  421c87:	mov    rcx,r13
  421c8a:	mov    esi,0x16
  421c8f:	mov    rdi,rbx
  421c92:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421c97:	mov    r15,r13
  421c9a:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421c9f:	nop
  421ca0:	lea    r13,[r15+0x2]
  421ca4:	cmp    rbp,r13
  421ca7:	je     421b94 <__flatcc_fb_parse@@Base+0x1f64>
  421cad:	cmp    BYTE PTR [r15+0x2],0xa
  421cb2:	jne    421b94 <__flatcc_fb_parse@@Base+0x1f64>
  421cb8:	lea    r13,[r15+0x3]
  421cbc:	jmp    421b94 <__flatcc_fb_parse@@Base+0x1f64>
  421cc1:	mov    r14,r13
  421cc4:	nop    DWORD PTR [rax+0x0]
  421cc8:	mov    rdx,r15
  421ccb:	mov    rcx,r14
  421cce:	mov    esi,0xa
  421cd3:	mov    rdi,rbx
  421cd6:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421cdb:	mov    r15,r14
  421cde:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421ce3:	nop    DWORD PTR [rax+rax*1+0x0]
  421ce8:	mov    rsi,QWORD PTR [rbx+0x48]
  421cec:	mov    r9d,DWORD PTR [rbx+0x228]
  421cf3:	mov    r8,QWORD PTR [rbx+0x220]
  421cfa:	xor    ecx,ecx
  421cfc:	lea    rdx,[rip+0x262a2]        # 447fa5 <fb_schema_table_missing@@Base+0xae5>
  421d03:	mov    rdi,rbx
  421d06:	call   41e370 <__flatcc_error_report@@Base>
  421d0b:	jmp    42096d <__flatcc_fb_parse@@Base+0xd3d>
  421d10:	mov    rdx,r15
  421d13:	mov    rcx,r13
  421d16:	mov    esi,0x3e3e
  421d1b:	mov    rdi,rbx
  421d1e:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421d23:	mov    r15,r13
  421d26:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421d2b:	cmp    WORD PTR [r15+0x4],0x3631
  421d32:	mov    rsi,0xfffffffffffffc2c
  421d39:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  421d3f:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  421d44:	nop    DWORD PTR [rax+0x0]
  421d48:	mov    esi,0x1
  421d4d:	mov    edi,0x10000
  421d52:	call   405340 <calloc@plt>
  421d57:	test   rax,rax
  421d5a:	je     42285e <__flatcc_fb_parse@@Base+0x2c2e>
  421d60:	mov    rdx,QWORD PTR [rbx+0x58]
  421d64:	mov    QWORD PTR [rbx+0x58],rax
  421d68:	mov    QWORD PTR [rax],rdx
  421d6b:	lea    rdx,[rax+0x10000]
  421d72:	lea    rsi,[rax+0x10]
  421d76:	mov    QWORD PTR [rbx+0x50],rdx
  421d7a:	add    rax,0xc0
  421d80:	mov    rdx,QWORD PTR [r15+0x28]
  421d84:	jmp    420672 <__flatcc_fb_parse@@Base+0xa42>
  421d89:	nop    DWORD PTR [rax+0x0]
  421d90:	mov    rdx,r15
  421d93:	mov    rcx,r13
  421d96:	mov    esi,0x3e
  421d9b:	mov    rdi,rbx
  421d9e:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421da3:	mov    r15,r13
  421da6:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421dab:	nop    DWORD PTR [rax+rax*1+0x0]
  421db0:	mov    rdx,r15
  421db3:	mov    rcx,r13
  421db6:	mov    esi,0x2b
  421dbb:	mov    rdi,rbx
  421dbe:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421dc3:	mov    r15,r13
  421dc6:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  421dd0:	mov    rdx,r15
  421dd3:	mov    rcx,r13
  421dd6:	mov    esi,0x3a
  421ddb:	mov    rdi,rbx
  421dde:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421de3:	mov    r15,r13
  421de6:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421deb:	nop    DWORD PTR [rax+rax*1+0x0]
  421df0:	mov    rdx,r15
  421df3:	mov    rcx,r13
  421df6:	mov    esi,0x2a
  421dfb:	mov    rdi,rbx
  421dfe:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421e03:	mov    r15,r13
  421e06:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  421e10:	mov    rdx,r15
  421e13:	mov    rcx,r13
  421e16:	mov    esi,0x2e
  421e1b:	mov    rdi,rbx
  421e1e:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421e23:	mov    r15,r13
  421e26:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421e2b:	nop    DWORD PTR [rax+rax*1+0x0]
  421e30:	lea    r13,[r15+0x2]
  421e34:	cmp    rbp,r13
  421e37:	je     421e44 <__flatcc_fb_parse@@Base+0x2214>
  421e39:	cmp    BYTE PTR [r15+0x2],0x2e
  421e3e:	je     42245f <__flatcc_fb_parse@@Base+0x282f>
  421e44:	mov    rdx,r15
  421e47:	mov    rcx,r13
  421e4a:	mov    esi,0x2e2e
  421e4f:	mov    rdi,rbx
  421e52:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421e57:	mov    r15,r13
  421e5a:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421e5f:	nop
  421e60:	lea    r13,[r15+0x2]
  421e64:	mov    rdx,r15
  421e67:	mov    rcx,r13
  421e6a:	mov    esi,0x3d7c
  421e6f:	mov    rdi,rbx
  421e72:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421e77:	mov    r15,r13
  421e7a:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421e7f:	nop
  421e80:	mov    rdx,r15
  421e83:	mov    esi,0x2a2a
  421e88:	mov    rcx,r13
  421e8b:	mov    rdi,rbx
  421e8e:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421e93:	movzx  esi,BYTE PTR [r15+0x1]
  421e98:	mov    r15,r13
  421e9b:	jmp    41fcf8 <__flatcc_fb_parse@@Base+0xc8>
  421ea0:	lea    r13,[r15+0x2]
  421ea4:	mov    rdx,r15
  421ea7:	mov    rcx,r13
  421eaa:	mov    esi,0x3d3e
  421eaf:	mov    rdi,rbx
  421eb2:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421eb7:	mov    r15,r13
  421eba:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421ebf:	nop
  421ec0:	lea    r13,[r15+0x2]
  421ec4:	mov    rdx,r15
  421ec7:	mov    rcx,r13
  421eca:	mov    esi,0x2b2b
  421ecf:	mov    rdi,rbx
  421ed2:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421ed7:	mov    r15,r13
  421eda:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421edf:	nop
  421ee0:	lea    r13,[r15+0x2]
  421ee4:	cmp    rbp,r13
  421ee7:	je     421ef4 <__flatcc_fb_parse@@Base+0x22c4>
  421ee9:	cmp    BYTE PTR [r15+0x2],0x3d
  421eee:	je     42247e <__flatcc_fb_parse@@Base+0x284e>
  421ef4:	mov    rdx,r15
  421ef7:	mov    rcx,r13
  421efa:	mov    esi,0x3a3a
  421eff:	mov    rdi,rbx
  421f02:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  421f07:	mov    r15,r13
  421f0a:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  421f0f:	nop
  421f10:	and    edx,0xffffffdf
  421f13:	cmp    dl,0x45
  421f16:	jne    420ea1 <__flatcc_fb_parse@@Base+0x1271>
  421f1c:	mov    r14,r13
  421f1f:	jmp    420c6e <__flatcc_fb_parse@@Base+0x103e>
  421f24:	nop    DWORD PTR [rax+0x0]
  421f28:	lea    r14,[r15+0x2]
  421f2c:	cmp    rbp,r14
  421f2f:	je     421f48 <__flatcc_fb_parse@@Base+0x2318>
  421f31:	movzx  edx,BYTE PTR [r15+0x2]
  421f36:	cmp    dl,0x2a
  421f39:	je     4223ab <__flatcc_fb_parse@@Base+0x277b>
  421f3f:	cmp    dl,0x21
  421f42:	je     4223ab <__flatcc_fb_parse@@Base+0x277b>
  421f48:	mov    DWORD PTR [rbx+0x3c],0x0
  421f4f:	mov    r13,0xfffffffffffffc3c
  421f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421f60:	lea    rcx,[r14-0x1]
  421f64:	jmp    421f73 <__flatcc_fb_parse@@Base+0x2343>
  421f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421f70:	mov    rcx,r15
  421f73:	lea    r15,[rcx+0x1]
  421f77:	cmp    rbp,r15
  421f7a:	je     422018 <__flatcc_fb_parse@@Base+0x23e8>
  421f80:	movzx  edx,BYTE PTR [rcx+0x1]
  421f84:	lea    esi,[rdx-0x20]
  421f87:	cmp    sil,0x5e
  421f8b:	ja     422048 <__flatcc_fb_parse@@Base+0x2418>
  421f91:	cmp    dl,0x2f
  421f94:	jne    421f70 <__flatcc_fb_parse@@Base+0x2340>
  421f96:	cmp    BYTE PTR [r15-0x1],0x2a
  421f9b:	jne    421f70 <__flatcc_fb_parse@@Base+0x2340>
  421f9d:	mov    r15,r14
  421fa0:	cmp    r14,rcx
  421fa3:	je     421fb0 <__flatcc_fb_parse@@Base+0x2380>
  421fa5:	mov    eax,DWORD PTR [rbx+0x3c]
  421fa8:	mov    r15,rcx
  421fab:	test   eax,eax
  421fad:	jne    42202c <__flatcc_fb_parse@@Base+0x23fc>
  421faf:	nop
  421fb0:	cmp    rbp,r15
  421fb3:	je     41fdb0 <__flatcc_fb_parse@@Base+0x180>
  421fb9:	movzx  edx,BYTE PTR [r15]
  421fbd:	test   dl,dl
  421fbf:	je     41fdb0 <__flatcc_fb_parse@@Base+0x180>
  421fc5:	cmp    dl,0xa
  421fc8:	je     422070 <__flatcc_fb_parse@@Base+0x2440>
  421fce:	cmp    dl,0xd
  421fd1:	je     422090 <__flatcc_fb_parse@@Base+0x2460>
  421fd7:	lea    ecx,[rdx-0x20]
  421fda:	cmp    cl,0x5e
  421fdd:	jbe    422060 <__flatcc_fb_parse@@Base+0x2430>
  421fe3:	lea    r14,[r15+0x1]
  421fe7:	cmp    dl,0x9
  421fea:	jne    4220b0 <__flatcc_fb_parse@@Base+0x2480>
  421ff0:	mov    eax,DWORD PTR [rbx+0x3c]
  421ff3:	test   eax,eax
  421ff5:	je     421f60 <__flatcc_fb_parse@@Base+0x2330>
  421ffb:	mov    rcx,r14
  421ffe:	mov    rdx,r15
  422001:	mov    rsi,r13
  422004:	mov    rdi,rbx
  422007:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  42200c:	jmp    421f60 <__flatcc_fb_parse@@Base+0x2330>
  422011:	nop    DWORD PTR [rax+0x0]
  422018:	cmp    r14,rbp
  42201b:	je     41fdb0 <__flatcc_fb_parse@@Base+0x180>
  422021:	mov    ecx,DWORD PTR [rbx+0x3c]
  422024:	test   ecx,ecx
  422026:	je     41fdb0 <__flatcc_fb_parse@@Base+0x180>
  42202c:	mov    rcx,r15
  42202f:	mov    rdx,r14
  422032:	mov    rsi,r13
  422035:	mov    rdi,rbx
  422038:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  42203d:	jmp    421fb0 <__flatcc_fb_parse@@Base+0x2380>
  422042:	nop    WORD PTR [rax+rax*1+0x0]
  422048:	cmp    r14,r15
  42204b:	je     421fbd <__flatcc_fb_parse@@Base+0x238d>
  422051:	mov    esi,DWORD PTR [rbx+0x3c]
  422054:	test   esi,esi
  422056:	je     421fb9 <__flatcc_fb_parse@@Base+0x2389>
  42205c:	jmp    42202c <__flatcc_fb_parse@@Base+0x23fc>
  42205e:	xchg   ax,ax
  422060:	add    r15,0x2
  422064:	mov    DWORD PTR [rbx+0x3c],0x0
  42206b:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  422070:	lea    r14,[r15+0x1]
  422074:	cmp    rbp,r14
  422077:	je     422080 <__flatcc_fb_parse@@Base+0x2450>
  422079:	cmp    BYTE PTR [r15+0x1],0xd
  42207e:	je     4220a0 <__flatcc_fb_parse@@Base+0x2470>
  422080:	inc    QWORD PTR [rbx+0x78]
  422084:	mov    QWORD PTR [rbx+0x70],r14
  422088:	jmp    421f60 <__flatcc_fb_parse@@Base+0x2330>
  42208d:	nop    DWORD PTR [rax]
  422090:	lea    r14,[r15+0x1]
  422094:	cmp    rbp,r14
  422097:	je     422080 <__flatcc_fb_parse@@Base+0x2450>
  422099:	cmp    BYTE PTR [r15+0x1],0xa
  42209e:	jne    422080 <__flatcc_fb_parse@@Base+0x2450>
  4220a0:	lea    r14,[r15+0x2]
  4220a4:	jmp    422080 <__flatcc_fb_parse@@Base+0x2450>
  4220a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4220b0:	mov    rcx,r14
  4220b3:	mov    rdx,r15
  4220b6:	mov    esi,0x7
  4220bb:	mov    rdi,rbx
  4220be:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4220c3:	jmp    421f60 <__flatcc_fb_parse@@Base+0x2330>
  4220c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4220d0:	lea    r13,[r15+0x2]
  4220d4:	mov    rdx,r15
  4220d7:	mov    rcx,r13
  4220da:	mov    esi,0x3d2f
  4220df:	mov    rdi,rbx
  4220e2:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4220e7:	mov    r15,r13
  4220ea:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  4220ef:	nop
  4220f0:	cmp    r14,r15
  4220f3:	jne    422168 <__flatcc_fb_parse@@Base+0x2538>
  4220f5:	movzx  edx,BYTE PTR [r15]
  4220f9:	test   dl,dl
  4220fb:	je     41fdb0 <__flatcc_fb_parse@@Base+0x180>
  422101:	cmp    dl,0xa
  422104:	je     422064 <__flatcc_fb_parse@@Base+0x2434>
  42210a:	cmp    dl,0xd
  42210d:	je     422064 <__flatcc_fb_parse@@Base+0x2434>
  422113:	lea    r14,[r13+0x2]
  422117:	cmp    dl,0x20
  42211a:	je     422140 <__flatcc_fb_parse@@Base+0x2510>
  42211c:	cmp    dl,0x9
  42211f:	je     422140 <__flatcc_fb_parse@@Base+0x2510>
  422121:	mov    rcx,r14
  422124:	mov    rdx,r15
  422127:	mov    esi,0x7
  42212c:	mov    rdi,rbx
  42212f:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  422134:	jmp    41fd60 <__flatcc_fb_parse@@Base+0x130>
  422139:	nop    DWORD PTR [rax+0x0]
  422140:	mov    eax,DWORD PTR [rbx+0x3c]
  422143:	test   eax,eax
  422145:	je     41fd60 <__flatcc_fb_parse@@Base+0x130>
  42214b:	mov    rcx,r14
  42214e:	mov    rdx,r15
  422151:	mov    rsi,0xfffffffffffffc3c
  422158:	mov    rdi,rbx
  42215b:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  422160:	jmp    41fd60 <__flatcc_fb_parse@@Base+0x130>
  422165:	nop    DWORD PTR [rax]
  422168:	mov    eax,DWORD PTR [rbx+0x3c]
  42216b:	test   eax,eax
  42216d:	je     4220f5 <__flatcc_fb_parse@@Base+0x24c5>
  42216f:	mov    rcx,r15
  422172:	mov    rdx,r14
  422175:	mov    rsi,0xfffffffffffffc3c
  42217c:	mov    rdi,rbx
  42217f:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  422184:	jmp    4220f5 <__flatcc_fb_parse@@Base+0x24c5>
  422189:	nop    DWORD PTR [rax+0x0]
  422190:	lea    r13,[r15+0x2]
  422194:	mov    rdx,r15
  422197:	mov    rcx,r13
  42219a:	mov    esi,0x2d2d
  42219f:	mov    rdi,rbx
  4221a2:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4221a7:	mov    r15,r13
  4221aa:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  4221af:	nop
  4221b0:	lea    r13,[r15+0x2]
  4221b4:	mov    rdx,r15
  4221b7:	mov    rcx,r13
  4221ba:	mov    esi,0x2d3c
  4221bf:	mov    rdi,rbx
  4221c2:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4221c7:	mov    r15,r13
  4221ca:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  4221cf:	nop
  4221d0:	lea    r13,[r15+0x2]
  4221d4:	mov    rdx,r15
  4221d7:	mov    rcx,r13
  4221da:	mov    esi,0x3d3c
  4221df:	mov    rdi,rbx
  4221e2:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4221e7:	mov    r15,r13
  4221ea:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  4221ef:	nop
  4221f0:	lea    r13,[r15+0x2]
  4221f4:	cmp    rbp,r13
  4221f7:	je     422390 <__flatcc_fb_parse@@Base+0x2760>
  4221fd:	movzx  edx,BYTE PTR [r15+0x2]
  422202:	cmp    dl,0x3c
  422205:	je     422430 <__flatcc_fb_parse@@Base+0x2800>
  42220b:	cmp    dl,0x3d
  42220e:	jne    422390 <__flatcc_fb_parse@@Base+0x2760>
  422214:	lea    r13,[r15+0x3]
  422218:	mov    rdx,r15
  42221b:	mov    rcx,r13
  42221e:	mov    esi,0x3d3c3c
  422223:	mov    rdi,rbx
  422226:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  42222b:	mov    r15,r13
  42222e:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  422233:	nop    DWORD PTR [rax+rax*1+0x0]
  422238:	lea    r13,[r15+0x2]
  42223c:	mov    rdx,r15
  42223f:	mov    rcx,r13
  422242:	mov    esi,0x3e2d
  422247:	mov    rdi,rbx
  42224a:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  42224f:	mov    r15,r13
  422252:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  422257:	nop    WORD PTR [rax+rax*1+0x0]
  422260:	lea    r13,[r15+0x2]
  422264:	mov    rdx,r15
  422267:	mov    rcx,r13
  42226a:	mov    esi,0x3d2d
  42226f:	mov    rdi,rbx
  422272:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  422277:	mov    r15,r13
  42227a:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  42227f:	nop
  422280:	mov    rcx,r14
  422283:	mov    rdx,r14
  422286:	mov    esi,0x17
  42228b:	mov    rdi,rbx
  42228e:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  422293:	mov    r15,r14
  422296:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  42229b:	nop    DWORD PTR [rax+rax*1+0x0]
  4222a0:	mov    rdx,rax
  4222a3:	jmp    4205d0 <__flatcc_fb_parse@@Base+0x9a0>
  4222a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4222b0:	mov    rcx,QWORD PTR [rbx+0x60]
  4222b4:	lea    rax,[rcx+0x40]
  4222b8:	cmp    rax,QWORD PTR [rbx+0x50]
  4222bc:	ja     4223f5 <__flatcc_fb_parse@@Base+0x27c5>
  4222c2:	mov    QWORD PTR [rbx+0x60],rax
  4222c6:	vmovdqu xmm0,XMMWORD PTR [rbx+0x2d8]
  4222ce:	mov    QWORD PTR [rcx],r14
  4222d1:	mov    rdi,QWORD PTR [rbx+0x260]
  4222d8:	vmovups XMMWORD PTR [rcx+0x28],xmm0
  4222dd:	mov    edx,0x1
  4222e2:	mov    rsi,rcx
  4222e5:	mov    r13,rcx
  4222e8:	call   41d070 <fb_scope_table_insert_item@@Base>
  4222ed:	jmp    421b46 <__flatcc_fb_parse@@Base+0x1f16>
  4222f2:	nop    WORD PTR [rax+rax*1+0x0]
  4222f8:	movsx  r9,r10b
  4222fc:	shl    r9,0x10
  422300:	or     rsi,r9
  422303:	mov    rcx,r14
  422306:	jmp    42231d <__flatcc_fb_parse@@Base+0x26ed>
  422308:	nop    DWORD PTR [rax+rax*1+0x0]
  422310:	movzx  edx,BYTE PTR [r14]
  422314:	cmp    BYTE PTR [rdi+rdx*1],0x0
  422318:	je     422350 <__flatcc_fb_parse@@Base+0x2720>
  42231a:	mov    rcx,r14
  42231d:	inc    r14
  422320:	cmp    rbp,r14
  422323:	jne    422310 <__flatcc_fb_parse@@Base+0x26e0>
  422325:	movsx  rdx,BYTE PTR [rcx]
  422329:	mov    rcx,rbp
  42232c:	sub    rcx,r15
  42232f:	movzx  ecx,cl
  422332:	add    rcx,0x30
  422336:	jmp    420fc0 <__flatcc_fb_parse@@Base+0x1390>
  42233b:	nop    DWORD PTR [rax+rax*1+0x0]
  422340:	endbr64 
  422344:	mov    rsi,r14
  422347:	mov    r13,r14
  42234a:	jmp    420e99 <__flatcc_fb_parse@@Base+0x1269>
  42234f:	nop
  422350:	movsx  rdx,BYTE PTR [rcx]
  422354:	mov    rcx,r14
  422357:	sub    rcx,r15
  42235a:	movzx  ecx,cl
  42235d:	add    rcx,0x30
  422361:	jmp    420fc0 <__flatcc_fb_parse@@Base+0x1390>
  422366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422370:	lea    r13,[r15+0x3]
  422374:	mov    rdx,r15
  422377:	mov    rcx,r13
  42237a:	mov    esi,0x3d3e3e
  42237f:	mov    rdi,rbx
  422382:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  422387:	mov    r15,r13
  42238a:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  42238f:	nop
  422390:	mov    rdx,r15
  422393:	mov    rcx,r13
  422396:	mov    esi,0x3c3c
  42239b:	mov    rdi,rbx
  42239e:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4223a3:	mov    r15,r13
  4223a6:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  4223ab:	mov    DWORD PTR [rbx+0x3c],0x1
  4223b2:	lea    r14,[r15+0x3]
  4223b6:	mov    rcx,r14
  4223b9:	mov    rdx,r14
  4223bc:	mov    rsi,0xfffffffffffffc3c
  4223c3:	mov    rdi,rbx
  4223c6:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4223cb:	jmp    421f4f <__flatcc_fb_parse@@Base+0x231f>
  4223d0:	mov    DWORD PTR [rbx+0x3c],0x1
  4223d7:	lea    r14,[r15+0x3]
  4223db:	mov    rcx,r14
  4223de:	mov    rdx,r14
  4223e1:	mov    rsi,0xfffffffffffffc3c
  4223e8:	mov    rdi,rbx
  4223eb:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4223f0:	jmp    41fd60 <__flatcc_fb_parse@@Base+0x130>
  4223f5:	mov    esi,0x1
  4223fa:	mov    edi,0x10000
  4223ff:	call   405340 <calloc@plt>
  422404:	test   rax,rax
  422407:	je     42285e <__flatcc_fb_parse@@Base+0x2c2e>
  42240d:	mov    rdx,QWORD PTR [rbx+0x58]
  422411:	lea    rcx,[rax+0x10]
  422415:	mov    QWORD PTR [rax],rdx
  422418:	lea    rdx,[rax+0x10000]
  42241f:	mov    QWORD PTR [rbx+0x58],rax
  422423:	mov    QWORD PTR [rbx+0x50],rdx
  422427:	add    rax,0x50
  42242b:	jmp    4222c2 <__flatcc_fb_parse@@Base+0x2692>
  422430:	lea    r13,[r15+0x3]
  422434:	cmp    rbp,r13
  422437:	je     422444 <__flatcc_fb_parse@@Base+0x2814>
  422439:	cmp    BYTE PTR [r15+0x3],0x3d
  42243e:	je     42283f <__flatcc_fb_parse@@Base+0x2c0f>
  422444:	mov    rdx,r15
  422447:	mov    rcx,r13
  42244a:	mov    esi,0x3c3c3c
  42244f:	mov    rdi,rbx
  422452:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  422457:	mov    r15,r13
  42245a:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  42245f:	lea    r13,[r15+0x3]
  422463:	mov    rdx,r15
  422466:	mov    rcx,r13
  422469:	mov    esi,0x2e2e2e
  42246e:	mov    rdi,rbx
  422471:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  422476:	mov    r15,r13
  422479:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  42247e:	lea    r13,[r15+0x3]
  422482:	mov    rdx,r15
  422485:	mov    rcx,r13
  422488:	mov    esi,0x3d3a3a
  42248d:	mov    rdi,rbx
  422490:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  422495:	mov    r15,r13
  422498:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  42249d:	lea    r13,[r15+0x3]
  4224a1:	mov    rdx,r15
  4224a4:	mov    rcx,r13
  4224a7:	mov    esi,0x3d3d3d
  4224ac:	mov    rdi,rbx
  4224af:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  4224b4:	mov    r15,r13
  4224b7:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  4224bc:	nop    DWORD PTR [rax+0x0]
  4224c0:	cmp    DWORD PTR [r15],0x36746e69
  4224c7:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4224cd:	cmp    BYTE PTR [r15+0x4],0x34
  4224d2:	mov    rsi,0xfffffffffffffc22
  4224d9:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4224df:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  4224e4:	nop    DWORD PTR [rax+0x0]
  4224e8:	cmp    DWORD PTR [r15],0x726f6873
  4224ef:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4224f5:	cmp    BYTE PTR [r15+0x4],0x74
  4224fa:	mov    rsi,0xfffffffffffffc28
  422501:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  422507:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  42250c:	nop    DWORD PTR [rax+0x0]
  422510:	cmp    DWORD PTR [r15],0x746e6975
  422517:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42251d:	cmp    WORD PTR [r15+0x4],0x3436
  422524:	mov    rsi,0xfffffffffffffc2e
  42252b:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  422531:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  422536:	cmp    DWORD PTR [r15],0x746e6975
  42253d:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  422543:	cmp    BYTE PTR [r15+0x4],0x38
  422548:	mov    rsi,0xfffffffffffffc2b
  42254f:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  422555:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  42255a:	movabs rax,0x767265735f637072
  422564:	cmp    QWORD PTR [r15],rax
  422567:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42256d:	cmp    WORD PTR [r15+0x8],0x6369
  422574:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42257a:	cmp    BYTE PTR [r15+0xa],0x65
  42257f:	mov    rsi,0xfffffffffffffc39
  422586:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42258c:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  422591:	nop    DWORD PTR [rax+0x0]
  422598:	cmp    DWORD PTR [r15],0x6c626174
  42259f:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4225a5:	cmp    BYTE PTR [r15+0x4],0x65
  4225aa:	mov    rsi,0xfffffffffffffc29
  4225b1:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4225b7:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  4225bc:	nop    DWORD PTR [rax+0x0]
  4225c0:	cmp    DWORD PTR [r15],0x616f6c66
  4225c7:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4225cd:	cmp    WORD PTR [r15+0x4],0x3374
  4225d4:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4225da:	cmp    BYTE PTR [r15+0x6],0x32
  4225df:	mov    rsi,0xfffffffffffffc1c
  4225e6:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4225ec:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  4225f1:	nop    DWORD PTR [rax+0x0]
  4225f8:	cmp    WORD PTR [r15],0x6e69
  4225fe:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  422604:	cmp    BYTE PTR [r15+0x2],0x74
  422609:	mov    rsi,0xfffffffffffffc1e
  422610:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  422616:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  42261b:	nop    DWORD PTR [rax+rax*1+0x0]
  422620:	cmp    DWORD PTR [r15],0x6c636e69
  422627:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42262d:	cmp    WORD PTR [r15+0x4],0x6475
  422634:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42263a:	cmp    BYTE PTR [r15+0x6],0x65
  42263f:	mov    rsi,0xfffffffffffffc35
  422646:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42264c:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  422651:	nop    DWORD PTR [rax+0x0]
  422658:	movabs rax,0x6564695f656c6966
  422662:	cmp    QWORD PTR [r15],rax
  422665:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42266b:	cmp    DWORD PTR [r15+0x8],0x6669746e
  422673:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  422679:	cmp    WORD PTR [r15+0xc],0x6569
  422680:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  422686:	cmp    BYTE PTR [r15+0xe],0x72
  42268b:	mov    rsi,0xfffffffffffffc3b
  422692:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  422698:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  42269d:	nop    DWORD PTR [rax]
  4226a0:	cmp    DWORD PTR [r15],0x746e6975
  4226a7:	mov    esi,0x9
  4226ac:	mov    rdx,0xfffffffffffffc25
  4226b3:	cmove  rsi,rdx
  4226b7:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  4226bc:	nop    DWORD PTR [rax+0x0]
  4226c0:	movabs rdx,0x7475626972747461
  4226ca:	cmp    QWORD PTR [r15],rdx
  4226cd:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4226d3:	cmp    BYTE PTR [r15+0x8],0x65
  4226d8:	mov    rsi,0xfffffffffffffc36
  4226df:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4226e5:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  4226ea:	nop    WORD PTR [rax+rax*1+0x0]
  4226f0:	cmp    DWORD PTR [r15],0x65747962
  4226f7:	mov    esi,0x9
  4226fc:	mov    rdx,0xfffffffffffffc1a
  422703:	cmove  rsi,rdx
  422707:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  42270c:	nop    DWORD PTR [rax+0x0]
  422710:	cmp    DWORD PTR [r15],0x33746e69
  422717:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42271d:	cmp    BYTE PTR [r15+0x4],0x32
  422722:	mov    rsi,0xfffffffffffffc21
  422729:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42272f:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  422734:	nop    DWORD PTR [rax+0x0]
  422738:	movabs rdx,0x63617073656d616e
  422742:	cmp    QWORD PTR [r15],rdx
  422745:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42274b:	cmp    BYTE PTR [r15+0x8],0x65
  422750:	mov    rsi,0xfffffffffffffc37
  422757:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42275d:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  422762:	nop    WORD PTR [rax+rax*1+0x0]
  422768:	cmp    DWORD PTR [r15],0x736c6166
  42276f:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  422775:	cmp    BYTE PTR [r15+0x4],0x65
  42277a:	mov    rsi,0xfffffffffffffc26
  422781:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  422787:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  42278c:	nop    DWORD PTR [rax+0x0]
  422790:	cmp    DWORD PTR [r15],0x69727473
  422797:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  42279d:	cmp    WORD PTR [r15+0x4],0x676e
  4227a4:	mov    rsi,0xfffffffffffffc32
  4227ab:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4227b1:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  4227b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4227c0:	cmp    DWORD PTR [r15],0x6e6f6c75
  4227c7:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4227cd:	cmp    BYTE PTR [r15+0x4],0x67
  4227d2:	mov    rsi,0xfffffffffffffc2f
  4227d9:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4227df:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  4227e4:	movabs rax,0x7478655f656c6966
  4227ee:	cmp    QWORD PTR [r15],rax
  4227f1:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  4227f7:	cmp    DWORD PTR [r15+0x8],0x69736e65
  4227ff:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  422805:	cmp    WORD PTR [r15+0xc],0x6e6f
  42280c:	mov    rsi,0xfffffffffffffc3a
  422813:	jne    421038 <__flatcc_fb_parse@@Base+0x1408>
  422819:	jmp    42103d <__flatcc_fb_parse@@Base+0x140d>
  42281e:	xchg   ax,ax
  422820:	lea    r13,[r15+0x4]
  422824:	mov    rdx,r15
  422827:	mov    rcx,r13
  42282a:	mov    esi,0x3d3e3e3e
  42282f:	mov    rdi,rbx
  422832:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  422837:	mov    r15,r13
  42283a:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  42283f:	lea    r13,[r15+0x4]
  422843:	mov    rdx,r15
  422846:	mov    rcx,r13
  422849:	mov    esi,0x3d3c3c3c
  42284e:	mov    rdi,rbx
  422851:	call   41df50 <__flatcc_fb_default_error_out@@Base+0x60>
  422856:	mov    r15,r13
  422859:	jmp    41fceb <__flatcc_fb_parse@@Base+0xbb>
  42285e:	call   41df20 <__flatcc_fb_default_error_out@@Base+0x30>
  422863:	call   4052d0 <__stack_chk_fail@plt>
  422868:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000422870 <__flatcc_fb_clear_parser@@Base>:
  422870:	endbr64 
  422874:	push   rbp
  422875:	mov    rbp,rdi
  422878:	push   rbx
  422879:	sub    rsp,0x8
  42287d:	mov    rbx,QWORD PTR [rdi+0x238]
  422884:	test   rbx,rbx
  422887:	jne    422898 <__flatcc_fb_clear_parser@@Base+0x28>
  422889:	jmp    4228bc <__flatcc_fb_clear_parser@@Base+0x4c>
  42288b:	nop    DWORD PTR [rax+rax*1+0x0]
  422890:	mov    rbx,QWORD PTR [rbx]
  422893:	test   rbx,rbx
  422896:	je     4228bc <__flatcc_fb_clear_parser@@Base+0x4c>
  422898:	cmp    WORD PTR [rbx+0x10],0x4
  42289d:	ja     422890 <__flatcc_fb_clear_parser@@Base+0x20>
  42289f:	lea    rdi,[rbx+0x60]
  4228a3:	call   41bee0 <fb_symbol_table_clear@@Base>
  4228a8:	lea    rdi,[rbx+0x80]
  4228af:	call   42d820 <fb_value_set_clear@@Base>
  4228b4:	mov    rbx,QWORD PTR [rbx]
  4228b7:	test   rbx,rbx
  4228ba:	jne    422898 <__flatcc_fb_clear_parser@@Base+0x28>
  4228bc:	lea    rdi,[rbp+0x2a8]
  4228c3:	call   41d6f0 <fb_schema_table_clear@@Base>
  4228c8:	lea    rdi,[rbp+0x288]
  4228cf:	call   42d100 <fb_name_table_clear@@Base>
  4228d4:	lea    rdi,[rbp+0x320]
  4228db:	call   41b770 <ptr_set_clear@@Base>
  4228e0:	mov    rdi,QWORD PTR [rbp+0xd8]
  4228e7:	test   rdi,rdi
  4228ea:	je     4228f1 <__flatcc_fb_clear_parser@@Base+0x81>
  4228ec:	call   405240 <free@plt>
  4228f1:	mov    rdi,QWORD PTR [rbp+0x28]
  4228f5:	test   rdi,rdi
  4228f8:	je     4228ff <__flatcc_fb_clear_parser@@Base+0x8f>
  4228fa:	call   405240 <free@plt>
  4228ff:	mov    rdi,QWORD PTR [rbp+0x308]
  422906:	test   rdi,rdi
  422909:	je     422910 <__flatcc_fb_clear_parser@@Base+0xa0>
  42290b:	call   405240 <free@plt>
  422910:	mov    rdi,QWORD PTR [rbp+0x310]
  422917:	test   rdi,rdi
  42291a:	je     422921 <__flatcc_fb_clear_parser@@Base+0xb1>
  42291c:	call   405240 <free@plt>
  422921:	mov    rdi,QWORD PTR [rbp+0x318]
  422928:	test   rdi,rdi
  42292b:	je     422932 <__flatcc_fb_clear_parser@@Base+0xc2>
  42292d:	call   405240 <free@plt>
  422932:	mov    rdi,QWORD PTR [rbp+0x348]
  422939:	test   rdi,rdi
  42293c:	je     422943 <__flatcc_fb_clear_parser@@Base+0xd3>
  42293e:	call   405240 <free@plt>
  422943:	lea    rdi,[rbp+0x268]
  42294a:	xor    edx,edx
  42294c:	lea    rsi,[rip+0xffffffffffffb5bd]        # 41df10 <__flatcc_fb_default_error_out@@Base+0x20>
  422953:	call   41cf70 <fb_scope_table_destroy@@Base>
  422958:	mov    rdi,QWORD PTR [rbp+0x58]
  42295c:	test   rdi,rdi
  42295f:	je     422978 <__flatcc_fb_clear_parser@@Base+0x108>
  422961:	nop    DWORD PTR [rax+0x0]
  422968:	mov    rbx,QWORD PTR [rdi]
  42296b:	call   405240 <free@plt>
  422970:	mov    rdi,rbx
  422973:	test   rbx,rbx
  422976:	jne    422968 <__flatcc_fb_clear_parser@@Base+0xf8>
  422978:	mov    rdi,QWORD PTR [rbp+0x20]
  42297c:	test   rdi,rdi
  42297f:	je     422986 <__flatcc_fb_clear_parser@@Base+0x116>
  422981:	call   405240 <free@plt>
  422986:	add    rsp,0x8
  42298a:	pop    rbx
  42298b:	mov    rdi,rbp
  42298e:	mov    edx,0x358
  422993:	xor    esi,esi
  422995:	pop    rbp
  422996:	jmp    405310 <memset@plt>
  42299b:	nop    DWORD PTR [rax+rax*1+0x0]
  4229a0:	push   r15
  4229a2:	push   r14
  4229a4:	push   r13
  4229a6:	push   r12
  4229a8:	push   rbp
  4229a9:	push   rbx
  4229aa:	sub    rsp,0x18
  4229ae:	movzx  r12d,WORD PTR [rsi+0x10]
  4229b3:	cmp    r12w,0x1
  4229b8:	jne    422e28 <__flatcc_fb_clear_parser@@Base+0x5b8>
  4229be:	movzx  eax,WORD PTR [rsi+0x12]
  4229c2:	mov    rbp,rsi
  4229c5:	test   al,0x1
  4229c7:	jne    422e09 <__flatcc_fb_clear_parser@@Base+0x599>
  4229cd:	test   al,0x2
  4229cf:	jne    422aae <__flatcc_fb_clear_parser@@Base+0x23e>
  4229d5:	cmp    QWORD PTR [rsi+0xc0],0x0
  4229dd:	jne    422e47 <__flatcc_fb_clear_parser@@Base+0x5d7>
  4229e3:	mov    rbx,QWORD PTR [rsi+0x28]
  4229e7:	or     eax,0x1
  4229ea:	mov    r13,rdi
  4229ed:	mov    WORD PTR [rsi+0x12],ax
  4229f1:	test   rbx,rbx
  4229f4:	je     422c44 <__flatcc_fb_clear_parser@@Base+0x3d4>
  4229fa:	lea    r10,[rip+0x2715f]        # 449b60 <fb_schema_table_missing@@Base+0x26a0>
  422a01:	lea    r15,[rip+0x27258]        # 449c60 <fb_schema_table_missing@@Base+0x27a0>
  422a08:	lea    r11,[rip+0x25bf1]        # 448600 <fb_schema_table_missing@@Base+0x1140>
  422a0f:	cmp    DWORD PTR [r13+0xe0],0x63
  422a17:	jg     422d38 <__flatcc_fb_clear_parser@@Base+0x4c8>
  422a1d:	movzx  edx,WORD PTR [rbx+0x28]
  422a21:	cmp    dx,0x8
  422a25:	je     422b80 <__flatcc_fb_clear_parser@@Base+0x310>
  422a2b:	cmp    dx,0xe
  422a2f:	je     422ac0 <__flatcc_fb_clear_parser@@Base+0x250>
  422a35:	mov    eax,0xffffffff
  422a3a:	cmp    dx,0x1
  422a3e:	je     422a63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  422a40:	mov    rsi,QWORD PTR [rbx+0x8]
  422a44:	xor    r9d,r9d
  422a47:	xor    r8d,r8d
  422a4a:	xor    ecx,ecx
  422a4c:	lea    rdx,[rip+0x26e46]        # 449899 <fb_schema_table_missing@@Base+0x23d9>
  422a53:	mov    rdi,r13
  422a56:	mov    DWORD PTR [rsp+0xc],eax
  422a5a:	call   41e370 <__flatcc_error_report@@Base>
  422a5f:	mov    eax,DWORD PTR [rsp+0xc]
  422a63:	add    rsp,0x18
  422a67:	pop    rbx
  422a68:	pop    rbp
  422a69:	pop    r12
  422a6b:	pop    r13
  422a6d:	pop    r14
  422a6f:	pop    r15
  422a71:	ret    
  422a72:	mov    rax,QWORD PTR [rbp+0xb8]
  422a79:	lea    rax,[rdx+rax*1-0x1]
  422a7e:	neg    rdx
  422a81:	and    rdx,rax
  422a84:	movzx  eax,WORD PTR [rbp+0x12]
  422a88:	mov    QWORD PTR [rbp+0xb8],rdx
  422a8f:	and    eax,0xfffffffe
  422a92:	or     eax,0x2
  422a95:	mov    WORD PTR [rbp+0x12],ax
  422a99:	mov    rax,QWORD PTR [r13+0x240]
  422aa0:	mov    QWORD PTR [rbp+0xc0],rax
  422aa7:	mov    QWORD PTR [r13+0x240],rbp
  422aae:	add    rsp,0x18
  422ab2:	pop    rbx
  422ab3:	pop    rbp
  422ab4:	pop    r12
  422ab6:	pop    r13
  422ab8:	pop    r14
  422aba:	xor    eax,eax
  422abc:	pop    r15
  422abe:	ret    
  422abf:	nop
  422ac0:	mov    r14,QWORD PTR [rbx+0x18]
  422ac4:	movzx  eax,WORD PTR [r14+0x10]
  422ac9:	cmp    ax,0x3
  422acd:	je     422cd0 <__flatcc_fb_clear_parser@@Base+0x460>
  422ad3:	cmp    ax,0x1
  422ad7:	jne    422de4 <__flatcc_fb_clear_parser@@Base+0x574>
  422add:	movzx  eax,WORD PTR [r14+0x12]
  422ae2:	test   al,0x1
  422ae4:	jne    422dbd <__flatcc_fb_clear_parser@@Base+0x54d>
  422aea:	test   al,0x2
  422aec:	jne    422b2c <__flatcc_fb_clear_parser@@Base+0x2bc>
  422aee:	mov    eax,DWORD PTR [r13+0x128]
  422af5:	test   eax,eax
  422af7:	jne    422d10 <__flatcc_fb_clear_parser@@Base+0x4a0>
  422afd:	inc    DWORD PTR [r13+0xe0]
  422b04:	mov    rsi,r14
  422b07:	mov    rdi,r13
  422b0a:	call   4229a0 <__flatcc_fb_clear_parser@@Base+0x130>
  422b0f:	dec    DWORD PTR [r13+0xe0]
  422b16:	test   eax,eax
  422b18:	lea    r10,[rip+0x27041]        # 449b60 <fb_schema_table_missing@@Base+0x26a0>
  422b1f:	lea    r11,[rip+0x25ada]        # 448600 <fb_schema_table_missing@@Base+0x1140>
  422b26:	jne    422a63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  422b2c:	movzx  ecx,WORD PTR [r14+0xb0]
  422b34:	mov    rax,QWORD PTR [r14+0xb8]
  422b3b:	movzx  edx,cx
  422b3e:	mov    QWORD PTR [rbx+0x80],rax
  422b45:	lea    rax,[rdx-0x1]
  422b49:	mov    WORD PTR [rbx+0x72],cx
  422b4d:	cmp    rax,0xff
  422b53:	jbe    422bc8 <__flatcc_fb_clear_parser@@Base+0x358>
  422b55:	nop    DWORD PTR [rax]
  422b58:	lea    rcx,[rip+0x270d9]        # 449c38 <fb_schema_table_missing@@Base+0x2778>
  422b5f:	mov    edx,0x6c
  422b64:	lea    rsi,[rip+0x25925]        # 448490 <fb_schema_table_missing@@Base+0xfd0>
  422b6b:	lea    rdi,[rip+0x26d37]        # 4498a9 <fb_schema_table_missing@@Base+0x23e9>
  422b72:	call   405300 <__assert_fail@plt>
  422b77:	nop    WORD PTR [rax+rax*1+0x0]
  422b80:	mov    rcx,QWORD PTR [rbx+0x18]
  422b84:	mov    rax,QWORD PTR [rcx+0x20]
  422b88:	add    rax,0x3e7
  422b8e:	cmp    rax,0x1b
  422b92:	ja     422ce0 <__flatcc_fb_clear_parser@@Base+0x470>
  422b98:	mov    eax,DWORD PTR [r10+rax*4]
  422b9c:	mov    DWORD PTR [rbx+0x18],eax
  422b9f:	movsxd rax,DWORD PTR [r15+rax*4]
  422ba3:	test   rax,rax
  422ba6:	je     422ce7 <__flatcc_fb_clear_parser@@Base+0x477>
  422bac:	mov    ecx,eax
  422bae:	movzx  edx,cx
  422bb1:	mov    WORD PTR [rbx+0x72],ax
  422bb5:	mov    QWORD PTR [rbx+0x80],rax
  422bbc:	lea    rax,[rdx-0x1]
  422bc0:	cmp    rax,0xff
  422bc6:	ja     422b58 <__flatcc_fb_clear_parser@@Base+0x2e8>
  422bc8:	cmp    rdx,0x1
  422bcc:	je     422bf1 <__flatcc_fb_clear_parser@@Base+0x381>
  422bce:	mov    eax,0x2
  422bd3:	cmp    rdx,rax
  422bd6:	je     422bf1 <__flatcc_fb_clear_parser@@Base+0x381>
  422bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  422be0:	add    rax,rax
  422be3:	cmp    rdx,rax
  422be6:	jb     422b58 <__flatcc_fb_clear_parser@@Base+0x2e8>
  422bec:	cmp    rdx,rax
  422bef:	jne    422be0 <__flatcc_fb_clear_parser@@Base+0x370>
  422bf1:	mov    rsi,QWORD PTR [rbp+0xb8]
  422bf8:	lea    rax,[rdx+rsi*1-0x1]
  422bfd:	neg    rdx
  422c00:	and    rdx,rax
  422c03:	mov    QWORD PTR [rbx+0x78],rdx
  422c07:	cmp    rsi,rdx
  422c0a:	ja     422d5b <__flatcc_fb_clear_parser@@Base+0x4eb>
  422c10:	add    rdx,QWORD PTR [rbx+0x80]
  422c17:	mov    r14,rdx
  422c1a:	jb     422d5b <__flatcc_fb_clear_parser@@Base+0x4eb>
  422c20:	cmp    rdx,0xffff
  422c27:	ja     422ca0 <__flatcc_fb_clear_parser@@Base+0x430>
  422c29:	mov    rbx,QWORD PTR [rbx]
  422c2c:	cmp    r12w,cx
  422c30:	mov    QWORD PTR [rbp+0xb8],r14
  422c37:	cmovb  r12d,ecx
  422c3b:	test   rbx,rbx
  422c3e:	jne    422a0f <__flatcc_fb_clear_parser@@Base+0x19f>
  422c44:	movzx  edx,WORD PTR [rbp+0xb0]
  422c4b:	test   dx,dx
  422c4e:	je     422d80 <__flatcc_fb_clear_parser@@Base+0x510>
  422c54:	cmp    dx,r12w
  422c58:	jb     422d91 <__flatcc_fb_clear_parser@@Base+0x521>
  422c5e:	lea    rax,[rdx-0x1]
  422c62:	cmp    rax,0xff
  422c68:	ja     422b58 <__flatcc_fb_clear_parser@@Base+0x2e8>
  422c6e:	cmp    rdx,0x1
  422c72:	je     422a72 <__flatcc_fb_clear_parser@@Base+0x202>
  422c78:	mov    eax,0x2
  422c7d:	nop    DWORD PTR [rax]
  422c80:	cmp    rdx,rax
  422c83:	je     422a72 <__flatcc_fb_clear_parser@@Base+0x202>
  422c89:	add    rax,rax
  422c8c:	cmp    rdx,rax
  422c8f:	jae    422c80 <__flatcc_fb_clear_parser@@Base+0x410>
  422c91:	jmp    422b58 <__flatcc_fb_clear_parser@@Base+0x2e8>
  422c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422ca0:	mov    rsi,QWORD PTR [rbx+0x8]
  422ca4:	xor    ecx,ecx
  422ca6:	mov    rdx,r11
  422ca9:	xor    r9d,r9d
  422cac:	xor    r8d,r8d
  422caf:	mov    rdi,r13
  422cb2:	call   41e370 <__flatcc_error_report@@Base>
  422cb7:	movzx  ecx,WORD PTR [rbx+0x72]
  422cbb:	lea    r10,[rip+0x26e9e]        # 449b60 <fb_schema_table_missing@@Base+0x26a0>
  422cc2:	lea    r11,[rip+0x25937]        # 448600 <fb_schema_table_missing@@Base+0x1140>
  422cc9:	jmp    422c29 <__flatcc_fb_clear_parser@@Base+0x3b9>
  422cce:	xchg   ax,ax
  422cd0:	mov    rax,QWORD PTR [r14+0xb8]
  422cd7:	jmp    422bac <__flatcc_fb_clear_parser@@Base+0x33c>
  422cdc:	nop    DWORD PTR [rax+0x0]
  422ce0:	mov    DWORD PTR [rbx+0x18],0x0
  422ce7:	mov    rsi,QWORD PTR [rbx+0x8]
  422ceb:	xor    r9d,r9d
  422cee:	xor    r8d,r8d
  422cf1:	lea    rdx,[rip+0x26ba1]        # 449899 <fb_schema_table_missing@@Base+0x23d9>
  422cf8:	mov    rdi,r13
  422cfb:	call   41e370 <__flatcc_error_report@@Base>
  422d00:	mov    eax,0xffffffff
  422d05:	jmp    422a63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  422d0a:	nop    WORD PTR [rax+rax*1+0x0]
  422d10:	mov    rcx,QWORD PTR [r14+0x8]
  422d14:	mov    rsi,QWORD PTR [rbx+0x8]
  422d18:	xor    r9d,r9d
  422d1b:	xor    r8d,r8d
  422d1e:	lea    rdx,[rip+0x2586b]        # 448590 <fb_schema_table_missing@@Base+0x10d0>
  422d25:	mov    rdi,r13
  422d28:	call   41e370 <__flatcc_error_report@@Base>
  422d2d:	jmp    422afd <__flatcc_fb_clear_parser@@Base+0x28d>
  422d32:	nop    WORD PTR [rax+rax*1+0x0]
  422d38:	xor    r9d,r9d
  422d3b:	xor    r8d,r8d
  422d3e:	xor    ecx,ecx
  422d40:	lea    rdx,[rip+0x257d9]        # 448520 <fb_schema_table_missing@@Base+0x1060>
  422d47:	xor    esi,esi
  422d49:	mov    rdi,r13
  422d4c:	call   41e370 <__flatcc_error_report@@Base>
  422d51:	mov    eax,0xffffffff
  422d56:	jmp    422a63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  422d5b:	mov    rsi,QWORD PTR [rbx+0x8]
  422d5f:	xor    r9d,r9d
  422d62:	xor    r8d,r8d
  422d65:	xor    ecx,ecx
  422d67:	lea    rdx,[rip+0x26b51]        # 4498bf <fb_schema_table_missing@@Base+0x23ff>
  422d6e:	mov    rdi,r13
  422d71:	call   41e370 <__flatcc_error_report@@Base>
  422d76:	mov    eax,0xffffffff
  422d7b:	jmp    422a63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  422d80:	mov    WORD PTR [rbp+0xb0],r12w
  422d88:	movzx  edx,r12w
  422d8c:	jmp    422c5e <__flatcc_fb_clear_parser@@Base+0x3ee>
  422d91:	mov    rsi,QWORD PTR [rbp+0x8]
  422d95:	lea    rdx,[rip+0x2589c]        # 448638 <fb_schema_table_missing@@Base+0x1178>
  422d9c:	xor    r9d,r9d
  422d9f:	xor    r8d,r8d
  422da2:	xor    ecx,ecx
  422da4:	mov    rdi,r13
  422da7:	call   41e370 <__flatcc_error_report@@Base>
  422dac:	mov    WORD PTR [rbp+0xb0],r12w
  422db4:	movzx  edx,r12w
  422db8:	jmp    422c5e <__flatcc_fb_clear_parser@@Base+0x3ee>
  422dbd:	mov    rcx,QWORD PTR [r14+0x8]
  422dc1:	mov    rsi,QWORD PTR [rbx+0x8]
  422dc5:	xor    r9d,r9d
  422dc8:	xor    r8d,r8d
  422dcb:	lea    rdx,[rip+0x2579e]        # 448570 <fb_schema_table_missing@@Base+0x10b0>
  422dd2:	mov    rdi,r13
  422dd5:	call   41e370 <__flatcc_error_report@@Base>
  422dda:	mov    eax,0xffffffff
  422ddf:	jmp    422a63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  422de4:	mov    rsi,QWORD PTR [rbx+0x8]
  422de8:	xor    r9d,r9d
  422deb:	xor    r8d,r8d
  422dee:	xor    ecx,ecx
  422df0:	lea    rdx,[rip+0x257e1]        # 4485d8 <fb_schema_table_missing@@Base+0x1118>
  422df7:	mov    rdi,r13
  422dfa:	call   41e370 <__flatcc_error_report@@Base>
  422dff:	mov    eax,0xffffffff
  422e04:	jmp    422a63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  422e09:	lea    rcx,[rip+0x26e38]        # 449c48 <fb_schema_table_missing@@Base+0x2788>
  422e10:	mov    edx,0x1f8
  422e15:	lea    rsi,[rip+0x25674]        # 448490 <fb_schema_table_missing@@Base+0xfd0>
  422e1c:	lea    rdi,[rip+0x256d5]        # 4484f8 <fb_schema_table_missing@@Base+0x1038>
  422e23:	call   405300 <__assert_fail@plt>
  422e28:	lea    rcx,[rip+0x26e19]        # 449c48 <fb_schema_table_missing@@Base+0x2788>
  422e2f:	mov    edx,0x1f6
  422e34:	lea    rsi,[rip+0x25655]        # 448490 <fb_schema_table_missing@@Base+0xfd0>
  422e3b:	lea    rdi,[rip+0xdade]        # 430920 <_IO_stdin_used@@Base+0x2920>
  422e42:	call   405300 <__assert_fail@plt>
  422e47:	lea    rcx,[rip+0x26dfa]        # 449c48 <fb_schema_table_missing@@Base+0x2788>
  422e4e:	mov    edx,0x1fc
  422e53:	lea    rsi,[rip+0x25636]        # 448490 <fb_schema_table_missing@@Base+0xfd0>
  422e5a:	lea    rdi,[rip+0x26a2d]        # 44988e <fb_schema_table_missing@@Base+0x23ce>
  422e61:	call   405300 <__assert_fail@plt>
  422e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422e70:	push   r15
  422e72:	push   r14
  422e74:	mov    r14,rsi
  422e77:	push   r13
  422e79:	push   r12
  422e7b:	push   rbp
  422e7c:	push   rbx
  422e7d:	mov    rbx,rdi
  422e80:	sub    rsp,0xf8
  422e87:	mov    rax,QWORD PTR fs:0x28
  422e90:	mov    QWORD PTR [rsp+0xe8],rax
  422e98:	xor    eax,eax
  422e9a:	movzx  eax,WORD PTR [rsi+0x10]
  422e9e:	mov    WORD PTR [rsp+0x16],ax
  422ea3:	cmp    ax,0x4
  422ea7:	je     423740 <__flatcc_fb_clear_parser@@Base+0xed0>
  422ead:	cmp    ax,0x3
  422eb1:	jne    423b19 <__flatcc_fb_clear_parser@@Base+0x12a9>
  422eb7:	movzx  eax,WORD PTR [rsi+0x58]
  422ebb:	test   ax,ax
  422ebe:	je     423aec <__flatcc_fb_clear_parser@@Base+0x127c>
  422ec4:	cmp    ax,0x8
  422ec8:	jne    423a89 <__flatcc_fb_clear_parser@@Base+0x1219>
  422ece:	mov    rax,QWORD PTR [rsi+0x48]
  422ed2:	mov    rax,QWORD PTR [rax+0x20]
  422ed6:	add    rax,0x3e7
  422edc:	cmp    rax,0x1b
  422ee0:	ja     4232b8 <__flatcc_fb_clear_parser@@Base+0xa48>
  422ee6:	lea    rdx,[rip+0x26c73]        # 449b60 <fb_schema_table_missing@@Base+0x26a0>
  422eed:	mov    ecx,DWORD PTR [rdx+rax*4]
  422ef0:	lea    rax,[rip+0x26d69]        # 449c60 <fb_schema_table_missing@@Base+0x27a0>
  422ef7:	movsxd rax,DWORD PTR [rax+rcx*4]
  422efb:	mov    rdx,rcx
  422efe:	mov    ecx,eax
  422f00:	mov    DWORD PTR [r14+0x48],edx
  422f04:	mov    QWORD PTR [r14+0xb8],rax
  422f0b:	mov    WORD PTR [r14+0xb0],cx
  422f13:	lea    r13,[rsp+0x80]
  422f1b:	mov    r15,QWORD PTR [r14+0x38]
  422f1f:	mov    ecx,0xc
  422f24:	xor    eax,eax
  422f26:	mov    rdi,r13
  422f29:	rep stos QWORD PTR es:[rdi],rax
  422f2c:	mov    ebp,0x64
  422f31:	xor    r12d,r12d
  422f34:	test   r15,r15
  422f37:	jne    422f76 <__flatcc_fb_clear_parser@@Base+0x706>
  422f39:	jmp    4239a5 <__flatcc_fb_clear_parser@@Base+0x1135>
  422f3e:	xchg   ax,ax
  422f40:	lea    rsi,[rip+0x26d79]        # 449cc0 <fb_schema_table_missing@@Base+0x2800>
  422f47:	mov    eax,DWORD PTR [rsi+rax*4]
  422f4a:	mov    QWORD PTR [rdx],r15
  422f4d:	test   eax,eax
  422f4f:	jne    4232c8 <__flatcc_fb_clear_parser@@Base+0xa58>
  422f55:	cmp    WORD PTR [r15+0x20],0x0
  422f5b:	jne    42379e <__flatcc_fb_clear_parser@@Base+0xf2e>
  422f61:	nop    DWORD PTR [rax+0x0]
  422f68:	mov    r15,QWORD PTR [r15]
  422f6b:	dec    ebp
  422f6d:	test   r15,r15
  422f70:	je     422ff0 <__flatcc_fb_clear_parser@@Base+0x780>
  422f72:	test   ebp,ebp
  422f74:	je     422ff0 <__flatcc_fb_clear_parser@@Base+0x780>
  422f76:	mov    rax,QWORD PTR [r15+0x8]
  422f7a:	mov    rcx,QWORD PTR [rbx+0x260]
  422f81:	mov    rdx,QWORD PTR [rax+0x8]
  422f85:	mov    rsi,QWORD PTR [rax]
  422f88:	lea    rdi,[rcx+0x20]
  422f8c:	call   42d230 <fb_name_table_find@@Base>
  422f91:	test   rax,rax
  422f94:	je     423570 <__flatcc_fb_clear_parser@@Base+0xd00>
  422f9a:	movsxd rax,DWORD PTR [rax+0x20]
  422f9e:	test   eax,eax
  422fa0:	je     422f68 <__flatcc_fb_clear_parser@@Base+0x6f8>
  422fa2:	cmp    al,0x5
  422fa4:	jne    423348 <__flatcc_fb_clear_parser@@Base+0xad8>
  422faa:	mov    edx,0x1
  422faf:	shlx   edx,edx,eax
  422fb4:	or     r12d,edx
  422fb7:	lea    rdx,[r13+rax*8+0x0]
  422fbc:	cmp    QWORD PTR [rdx],0x0
  422fc0:	je     422f40 <__flatcc_fb_clear_parser@@Base+0x6d0>
  422fc6:	mov    rsi,QWORD PTR [r15+0x8]
  422fca:	xor    r9d,r9d
  422fcd:	xor    r8d,r8d
  422fd0:	xor    ecx,ecx
  422fd2:	lea    rdx,[rip+0x25767]        # 448740 <fb_schema_table_missing@@Base+0x1280>
  422fd9:	mov    rdi,rbx
  422fdc:	call   41e370 <__flatcc_error_report@@Base>
  422fe1:	mov    r15,QWORD PTR [r15]
  422fe4:	dec    ebp
  422fe6:	test   r15,r15
  422fe9:	jne    422f72 <__flatcc_fb_clear_parser@@Base+0x702>
  422feb:	nop    DWORD PTR [rax+rax*1+0x0]
  422ff0:	mov    ebp,r12d
  422ff3:	and    ebp,0x20
  422ff6:	test   r15,r15
  422ff9:	je     423016 <__flatcc_fb_clear_parser@@Base+0x7a6>
  422ffb:	mov    rsi,QWORD PTR [r15+0x8]
  422fff:	xor    r9d,r9d
  423002:	xor    r8d,r8d
  423005:	xor    ecx,ecx
  423007:	lea    rdx,[rip+0x268fa]        # 449908 <fb_schema_table_missing@@Base+0x2448>
  42300e:	mov    rdi,rbx
  423011:	call   41e370 <__flatcc_error_report@@Base>
  423016:	mov    WORD PTR [r14+0xa4],r12w
  42301e:	mov    DWORD PTR [rsp+0x38],0x0
  423026:	test   bp,bp
  423029:	je     42303c <__flatcc_fb_clear_parser@@Base+0x7cc>
  42302b:	mov    QWORD PTR [rsp+0x40],0x0
  423034:	mov    DWORD PTR [rsp+0x38],0x1
  42303c:	mov    edx,DWORD PTR [r14+0x48]
  423040:	cmp    edx,0x5
  423043:	jne    4236c0 <__flatcc_fb_clear_parser@@Base+0xe50>
  423049:	mov    esi,0x6
  42304e:	mov    BYTE PTR [rsp+0x40],0x0
  423053:	mov    WORD PTR [rsp+0x50],si
  423058:	vmovdqa xmm4,XMMWORD PTR [rsp+0x40]
  42305e:	mov    rax,QWORD PTR [rsp+0x50]
  423063:	mov    r15,QWORD PTR [r14+0x28]
  423067:	vmovaps XMMWORD PTR [rsp+0x60],xmm4
  42306d:	mov    QWORD PTR [rsp+0x70],rax
  423072:	test   r15,r15
  423075:	je     423288 <__flatcc_fb_clear_parser@@Base+0xa18>
  42307b:	lea    rax,[r14+0x60]
  42307f:	mov    QWORD PTR [rsp+0x8],rax
  423084:	lea    rax,[r14+0x80]
  42308b:	mov    QWORD PTR [rsp+0x18],rax
  423090:	lea    rax,[rsp+0x40]
  423095:	mov    ebp,0x1
  42309a:	mov    QWORD PTR [rsp+0x28],rax
  42309f:	mov    QWORD PTR [rsp+0x20],r14
  4230a4:	jmp    4230f5 <__flatcc_fb_clear_parser@@Base+0x885>
  4230a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4230b0:	mov    rcx,QWORD PTR [rax+0x8]
  4230b4:	lea    rax,[rbx+0x80]
  4230bb:	mov    rsi,QWORD PTR [r15+0x8]
  4230bf:	xor    r9d,r9d
  4230c2:	xor    r8d,r8d
  4230c5:	cmp    rcx,rax
  4230c8:	je     423370 <__flatcc_fb_clear_parser@@Base+0xb00>
  4230ce:	lea    rdx,[rip+0x26864]        # 449939 <fb_schema_table_missing@@Base+0x2479>
  4230d5:	mov    rdi,rbx
  4230d8:	call   41e370 <__flatcc_error_report@@Base>
  4230dd:	mov    eax,0x1
  4230e2:	mov    WORD PTR [r15+0x28],ax
  4230e7:	mov    r15,QWORD PTR [r15]
  4230ea:	xor    ebp,ebp
  4230ec:	test   r15,r15
  4230ef:	je     423288 <__flatcc_fb_clear_parser@@Base+0xa18>
  4230f5:	mov    rdi,QWORD PTR [rsp+0x8]
  4230fa:	mov    edx,0x1
  4230ff:	mov    rsi,r15
  423102:	call   41bff0 <fb_symbol_table_insert_item@@Base>
  423107:	test   rax,rax
  42310a:	jne    4230b0 <__flatcc_fb_clear_parser@@Base+0x840>
  42310c:	cmp    WORD PTR [r15+0x10],0x5
  423112:	jne    42391e <__flatcc_fb_clear_parser@@Base+0x10ae>
  423118:	cmp    QWORD PTR [r15+0x60],0x0
  42311d:	jne    423aab <__flatcc_fb_clear_parser@@Base+0x123b>
  423123:	cmp    WORD PTR [rsp+0x16],0x4
  423129:	je     423390 <__flatcc_fb_clear_parser@@Base+0xb20>
  42312f:	movzx  eax,WORD PTR [r15+0x58]
  423134:	xor    ebp,0x1
  423137:	test   ax,ax
  42313a:	jne    423145 <__flatcc_fb_clear_parser@@Base+0x8d5>
  42313c:	test   bpl,bpl
  42313f:	jne    423410 <__flatcc_fb_clear_parser@@Base+0xba0>
  423145:	mov    r10d,DWORD PTR [rsp+0x38]
  42314a:	test   r10d,r10d
  42314d:	je     4233f0 <__flatcc_fb_clear_parser@@Base+0xb80>
  423153:	test   ax,ax
  423156:	je     423177 <__flatcc_fb_clear_parser@@Base+0x907>
  423158:	cmp    ax,0x5
  42315c:	jne    423a41 <__flatcc_fb_clear_parser@@Base+0x11d1>
  423162:	mov    rax,QWORD PTR [r15+0x58]
  423166:	vmovdqu xmm2,XMMWORD PTR [r15+0x48]
  42316c:	mov    QWORD PTR [rsp+0x50],rax
  423171:	vmovaps XMMWORD PTR [rsp+0x40],xmm2
  423177:	mov    rax,QWORD PTR [rsp+0x20]
  42317c:	lea    rdi,[rip+0x26add]        # 449c60 <fb_schema_table_missing@@Base+0x27a0>
  423183:	mov    eax,DWORD PTR [rax+0x48]
  423186:	mov    rcx,QWORD PTR [rsp+0x40]
  42318b:	mov    rdx,rax
  42318e:	movsxd rax,DWORD PTR [rdi+rax*4]
  423192:	shl    rax,0x3
  423196:	cmp    rcx,rax
  423199:	jae    423943 <__flatcc_fb_clear_parser@@Base+0x10d3>
  42319f:	mov    eax,0x1
  4231a4:	mov    r9d,0x5
  4231aa:	shlx   rax,rax,rcx
  4231af:	mov    WORD PTR [r15+0x58],r9w
  4231b4:	mov    QWORD PTR [r15+0x48],rax
  4231b8:	lea    rcx,[r15+0x48]
  4231bc:	mov    rsi,r15
  4231bf:	mov    rdi,rbx
  4231c2:	call   427830 <__flatcc_fb_coerce_scalar_type@@Base>
  4231c7:	test   eax,eax
  4231c9:	jne    423943 <__flatcc_fb_clear_parser@@Base+0x10d3>
  4231cf:	test   bpl,bpl
  4231d2:	je     423210 <__flatcc_fb_clear_parser@@Base+0x9a0>
  4231d4:	mov    r8d,DWORD PTR [rbx+0x120]
  4231db:	test   r8d,r8d
  4231de:	je     423210 <__flatcc_fb_clear_parser@@Base+0x9a0>
  4231e0:	movzx  eax,WORD PTR [rsp+0x50]
  4231e5:	cmp    ax,0x5
  4231e9:	je     423590 <__flatcc_fb_clear_parser@@Base+0xd20>
  4231ef:	cmp    ax,0x4
  4231f3:	jne    4235e8 <__flatcc_fb_clear_parser@@Base+0xd78>
  4231f9:	mov    rax,QWORD PTR [rsp+0x60]
  4231fe:	cmp    QWORD PTR [rsp+0x40],rax
  423203:	jle    4235a0 <__flatcc_fb_clear_parser@@Base+0xd30>
  423209:	nop    DWORD PTR [rax+0x0]
  423210:	vmovdqa xmm0,XMMWORD PTR [rsp+0x40]
  423216:	mov    rax,QWORD PTR [rsp+0x50]
  42321b:	mov    rdi,QWORD PTR [rsp+0x18]
  423220:	lea    rsi,[r15+0x48]
  423224:	mov    edx,0x1
  423229:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  42322f:	mov    QWORD PTR [rsp+0x70],rax
  423234:	call   42d930 <fb_value_set_insert_item@@Base>
  423239:	test   rax,rax
  42323c:	je     423250 <__flatcc_fb_clear_parser@@Base+0x9e0>
  42323e:	cmp    WORD PTR [rsp+0x16],0x4
  423244:	je     4239e8 <__flatcc_fb_clear_parser@@Base+0x1178>
  42324a:	or     WORD PTR [r15+0x12],0x4
  423250:	cmp    QWORD PTR [r15+0x60],0x0
  423255:	je     4230e7 <__flatcc_fb_clear_parser@@Base+0x877>
  42325b:	mov    rsi,QWORD PTR [r15+0x8]
  42325f:	xor    r9d,r9d
  423262:	xor    r8d,r8d
  423265:	xor    ecx,ecx
  423267:	lea    rdx,[rip+0x258aa]        # 448b18 <fb_schema_table_missing@@Base+0x1658>
  42326e:	mov    rdi,rbx
  423271:	call   41e370 <__flatcc_error_report@@Base>
  423276:	mov    r15,QWORD PTR [r15]
  423279:	xor    ebp,ebp
  42327b:	test   r15,r15
  42327e:	jne    4230f5 <__flatcc_fb_clear_parser@@Base+0x885>
  423284:	nop    DWORD PTR [rax+0x0]
  423288:	xor    eax,eax
  42328a:	mov    rbx,QWORD PTR [rsp+0xe8]
  423292:	xor    rbx,QWORD PTR fs:0x28
  42329b:	jne    423b38 <__flatcc_fb_clear_parser@@Base+0x12c8>
  4232a1:	add    rsp,0xf8
  4232a8:	pop    rbx
  4232a9:	pop    rbp
  4232aa:	pop    r12
  4232ac:	pop    r13
  4232ae:	pop    r14
  4232b0:	pop    r15
  4232b2:	ret    
  4232b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4232b8:	xor    ecx,ecx
  4232ba:	xor    eax,eax
  4232bc:	xor    edx,edx
  4232be:	jmp    422f00 <__flatcc_fb_clear_parser@@Base+0x690>
  4232c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4232c8:	cmp    eax,0x2
  4232cb:	jne    423300 <__flatcc_fb_clear_parser@@Base+0xa90>
  4232cd:	cmp    WORD PTR [r15+0x20],0x2
  4232d3:	je     422f68 <__flatcc_fb_clear_parser@@Base+0x6f8>
  4232d9:	mov    rsi,QWORD PTR [r15+0x8]
  4232dd:	xor    r9d,r9d
  4232e0:	xor    r8d,r8d
  4232e3:	xor    ecx,ecx
  4232e5:	lea    rdx,[rip+0x254a4]        # 448790 <fb_schema_table_missing@@Base+0x12d0>
  4232ec:	mov    rdi,rbx
  4232ef:	call   41e370 <__flatcc_error_report@@Base>
  4232f4:	jmp    422f68 <__flatcc_fb_clear_parser@@Base+0x6f8>
  4232f9:	nop    DWORD PTR [rax+0x0]
  423300:	cmp    eax,0x5
  423303:	je     423630 <__flatcc_fb_clear_parser@@Base+0xdc0>
  423309:	cmp    eax,0x4
  42330c:	jne    423660 <__flatcc_fb_clear_parser@@Base+0xdf0>
  423312:	movzx  eax,WORD PTR [r15+0x20]
  423317:	sub    eax,0x4
  42331a:	cmp    ax,0x1
  42331e:	jbe    422f68 <__flatcc_fb_clear_parser@@Base+0x6f8>
  423324:	mov    rsi,QWORD PTR [r15+0x8]
  423328:	xor    r9d,r9d
  42332b:	xor    r8d,r8d
  42332e:	xor    ecx,ecx
  423330:	lea    rdx,[rip+0x254b1]        # 4487e8 <fb_schema_table_missing@@Base+0x1328>
  423337:	mov    rdi,rbx
  42333a:	call   41e370 <__flatcc_error_report@@Base>
  42333f:	jmp    422f68 <__flatcc_fb_clear_parser@@Base+0x6f8>
  423344:	nop    DWORD PTR [rax+0x0]
  423348:	mov    rsi,QWORD PTR [r15+0x8]
  42334c:	xor    r9d,r9d
  42334f:	xor    r8d,r8d
  423352:	xor    ecx,ecx
  423354:	lea    rdx,[rip+0x253b5]        # 448710 <fb_schema_table_missing@@Base+0x1250>
  42335b:	mov    rdi,rbx
  42335e:	call   41e370 <__flatcc_error_report@@Base>
  423363:	jmp    422f68 <__flatcc_fb_clear_parser@@Base+0x6f8>
  423368:	nop    DWORD PTR [rax+rax*1+0x0]
  423370:	lea    rdx,[rip+0x265a5]        # 44991c <fb_schema_table_missing@@Base+0x245c>
  423377:	xor    ecx,ecx
  423379:	mov    rdi,rbx
  42337c:	call   41e370 <__flatcc_error_report@@Base>
  423381:	mov    edx,0x1
  423386:	mov    WORD PTR [r15+0x28],dx
  42338b:	jmp    4230e7 <__flatcc_fb_clear_parser@@Base+0x877>
  423390:	mov    rsi,QWORD PTR [r15+0x8]
  423394:	lea    rax,[rbx+0x80]
  42339b:	cmp    rsi,rax
  42339e:	je     423560 <__flatcc_fb_clear_parser@@Base+0xcf0>
  4233a4:	movzx  eax,WORD PTR [r15+0x28]
  4233a9:	cmp    ax,0xa
  4233ad:	je     42354b <__flatcc_fb_clear_parser@@Base+0xcdb>
  4233b3:	cmp    ax,0xc
  4233b7:	je     423490 <__flatcc_fb_clear_parser@@Base+0xc20>
  4233bd:	cmp    ax,0x1
  4233c1:	je     4230e7 <__flatcc_fb_clear_parser@@Base+0x877>
  4233c7:	xor    r9d,r9d
  4233ca:	xor    r8d,r8d
  4233cd:	xor    ecx,ecx
  4233cf:	lea    rdx,[rip+0x254da]        # 4488b0 <fb_schema_table_missing@@Base+0x13f0>
  4233d6:	mov    rdi,rbx
  4233d9:	call   41e370 <__flatcc_error_report@@Base>
  4233de:	mov    eax,0x1
  4233e3:	mov    WORD PTR [r15+0x28],ax
  4233e8:	jmp    4230e7 <__flatcc_fb_clear_parser@@Base+0x877>
  4233ed:	nop    DWORD PTR [rax]
  4233f0:	test   ax,ax
  4233f3:	jne    423448 <__flatcc_fb_clear_parser@@Base+0xbd8>
  4233f5:	vmovdqa xmm1,XMMWORD PTR [rsp+0x40]
  4233fb:	mov    rax,QWORD PTR [rsp+0x50]
  423400:	vmovups XMMWORD PTR [r15+0x48],xmm1
  423406:	mov    QWORD PTR [r15+0x58],rax
  42340a:	jmp    4231cf <__flatcc_fb_clear_parser@@Base+0x95f>
  42340f:	nop
  423410:	movzx  eax,WORD PTR [rsp+0x50]
  423415:	cmp    ax,0x5
  423419:	je     423698 <__flatcc_fb_clear_parser@@Base+0xe28>
  42341f:	cmp    ax,0x4
  423423:	je     423710 <__flatcc_fb_clear_parser@@Base+0xea0>
  423429:	cmp    ax,0x6
  42342d:	je     42377b <__flatcc_fb_clear_parser@@Base+0xf0b>
  423433:	mov    eax,DWORD PTR [rsp+0x38]
  423437:	test   eax,eax
  423439:	jne    423177 <__flatcc_fb_clear_parser@@Base+0x907>
  42343f:	jmp    4233f5 <__flatcc_fb_clear_parser@@Base+0xb85>
  423441:	nop    DWORD PTR [rax+0x0]
  423448:	mov    rax,QWORD PTR [r15+0x58]
  42344c:	vmovdqu xmm3,XMMWORD PTR [r15+0x48]
  423452:	mov    QWORD PTR [rsp+0x50],rax
  423457:	mov    rax,QWORD PTR [rsp+0x20]
  42345c:	mov    rcx,QWORD PTR [rsp+0x28]
  423461:	mov    edx,DWORD PTR [rax+0x48]
  423464:	mov    rsi,r15
  423467:	mov    rdi,rbx
  42346a:	vmovaps XMMWORD PTR [rsp+0x40],xmm3
  423470:	call   427830 <__flatcc_fb_coerce_scalar_type@@Base>
  423475:	test   eax,eax
  423477:	je     4233f5 <__flatcc_fb_clear_parser@@Base+0xb85>
  42347d:	mov    eax,0xffffffff
  423482:	jmp    42328a <__flatcc_fb_clear_parser@@Base+0xa1a>
  423487:	nop    WORD PTR [rax+rax*1+0x0]
  423490:	mov    rax,QWORD PTR [rsp+0x20]
  423495:	mov    r8,QWORD PTR [r15+0x18]
  423499:	mov    r13,QWORD PTR [rax+0x18]
  42349d:	test   r8,r8
  4234a0:	je     42382c <__flatcc_fb_clear_parser@@Base+0xfbc>
  4234a6:	mov    rcx,r8
  4234a9:	xor    eax,eax
  4234ab:	jmp    4234b5 <__flatcc_fb_clear_parser@@Base+0xc45>
  4234ad:	nop    DWORD PTR [rax]
  4234b0:	mov    eax,edx
  4234b2:	mov    rcx,rsi
  4234b5:	mov    rsi,QWORD PTR [rcx]
  4234b8:	lea    edx,[rax+0x1]
  4234bb:	test   rsi,rsi
  4234be:	jne    4234b0 <__flatcc_fb_clear_parser@@Base+0xc40>
  4234c0:	mov    r14,rcx
  4234c3:	test   r13,r13
  4234c6:	je     4237be <__flatcc_fb_clear_parser@@Base+0xf4e>
  4234cc:	lea    rcx,[rbx+0x320]
  4234d3:	mov    QWORD PTR [rsp+0x30],rcx
  4234d8:	cmp    edx,0x1
  4234db:	jne    4237be <__flatcc_fb_clear_parser@@Base+0xf4e>
  4234e1:	mov    DWORD PTR [rsp+0x3c],ebp
  4234e5:	nop    DWORD PTR [rax]
  4234e8:	mov    rax,QWORD PTR [r14+0x8]
  4234ec:	lea    rdi,[r13+0x8]
  4234f0:	mov    rdx,QWORD PTR [rax+0x8]
  4234f4:	mov    rsi,QWORD PTR [rax]
  4234f7:	call   41c010 <fb_symbol_table_find@@Base>
  4234fc:	mov    r12,rax
  4234ff:	test   rax,rax
  423502:	je     423850 <__flatcc_fb_clear_parser@@Base+0xfe0>
  423508:	cmp    WORD PTR [rax+0x10],0x4
  42350d:	ja     423850 <__flatcc_fb_clear_parser@@Base+0xfe0>
  423513:	mov    rsi,QWORD PTR [rax+0x20]
  423517:	mov    rdi,QWORD PTR [rsp+0x30]
  42351c:	call   41b8b0 <ptr_set_find_item@@Base>
  423521:	test   rax,rax
  423524:	je     423850 <__flatcc_fb_clear_parser@@Base+0xfe0>
  42352a:	mov    ebp,DWORD PTR [rsp+0x3c]
  42352e:	mov    r14,r12
  423531:	cmp    WORD PTR [r14+0x10],0x1
  423537:	ja     4239bc <__flatcc_fb_clear_parser@@Base+0x114c>
  42353d:	mov    eax,0xe
  423542:	mov    WORD PTR [r15+0x28],ax
  423547:	mov    QWORD PTR [r15+0x18],r14
  42354b:	mov    QWORD PTR [r15+0x80],0x0
  423556:	jmp    42312f <__flatcc_fb_clear_parser@@Base+0x8bf>
  42355b:	nop    DWORD PTR [rax+rax*1+0x0]
  423560:	xor    eax,eax
  423562:	mov    WORD PTR [r15+0x28],ax
  423567:	jmp    42312f <__flatcc_fb_clear_parser@@Base+0x8bf>
  42356c:	nop    DWORD PTR [rax+0x0]
  423570:	mov    rsi,QWORD PTR [r15+0x8]
  423574:	xor    r9d,r9d
  423577:	xor    r8d,r8d
  42357a:	xor    ecx,ecx
  42357c:	lea    rdx,[rip+0x2516d]        # 4486f0 <fb_schema_table_missing@@Base+0x1230>
  423583:	mov    rdi,rbx
  423586:	call   41e370 <__flatcc_error_report@@Base>
  42358b:	jmp    422f68 <__flatcc_fb_clear_parser@@Base+0x6f8>
  423590:	mov    rax,QWORD PTR [rsp+0x60]
  423595:	cmp    QWORD PTR [rsp+0x40],rax
  42359a:	ja     423210 <__flatcc_fb_clear_parser@@Base+0x9a0>
  4235a0:	xor    r9d,r9d
  4235a3:	xor    r8d,r8d
  4235a6:	xor    ecx,ecx
  4235a8:	cmp    WORD PTR [rsp+0x16],0x4
  4235ae:	mov    rsi,QWORD PTR [r15+0x8]
  4235b2:	jne    4235c0 <__flatcc_fb_clear_parser@@Base+0xd50>
  4235b4:	cmp    QWORD PTR [rsp+0x60],0x0
  4235ba:	je     423a66 <__flatcc_fb_clear_parser@@Base+0x11f6>
  4235c0:	lea    rdx,[rip+0x25499]        # 448a60 <fb_schema_table_missing@@Base+0x15a0>
  4235c7:	mov    rdi,rbx
  4235ca:	call   41e370 <__flatcc_error_report@@Base>
  4235cf:	mov    esi,0x1
  4235d4:	mov    WORD PTR [r15+0x58],si
  4235d9:	mov    eax,0xffffffff
  4235de:	jmp    42328a <__flatcc_fb_clear_parser@@Base+0xa1a>
  4235e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4235e8:	cmp    ax,0x6
  4235ec:	jne    423210 <__flatcc_fb_clear_parser@@Base+0x9a0>
  4235f2:	movzx  eax,BYTE PTR [rsp+0x60]
  4235f7:	cmp    BYTE PTR [rsp+0x40],al
  4235fb:	ja     423210 <__flatcc_fb_clear_parser@@Base+0x9a0>
  423601:	mov    rsi,QWORD PTR [r15+0x8]
  423605:	xor    ecx,ecx
  423607:	xor    r9d,r9d
  42360a:	xor    r8d,r8d
  42360d:	lea    rdx,[rip+0x25474]        # 448a88 <fb_schema_table_missing@@Base+0x15c8>
  423614:	mov    rdi,rbx
  423617:	call   41e370 <__flatcc_error_report@@Base>
  42361c:	mov    ecx,0x1
  423621:	mov    WORD PTR [r15+0x58],cx
  423626:	mov    eax,0xffffffff
  42362b:	jmp    42328a <__flatcc_fb_clear_parser@@Base+0xa1a>
  423630:	cmp    WORD PTR [r15+0x20],0x5
  423636:	je     422f68 <__flatcc_fb_clear_parser@@Base+0x6f8>
  42363c:	mov    rsi,QWORD PTR [r15+0x8]
  423640:	xor    r9d,r9d
  423643:	xor    r8d,r8d
  423646:	xor    ecx,ecx
  423648:	lea    rdx,[rip+0x25169]        # 4487b8 <fb_schema_table_missing@@Base+0x12f8>
  42364f:	mov    rdi,rbx
  423652:	call   41e370 <__flatcc_error_report@@Base>
  423657:	jmp    422f68 <__flatcc_fb_clear_parser@@Base+0x6f8>
  42365c:	nop    DWORD PTR [rax+0x0]
  423660:	cmp    eax,0x6
  423663:	jne    422f68 <__flatcc_fb_clear_parser@@Base+0x6f8>
  423669:	cmp    WORD PTR [r15+0x20],0x6
  42366f:	je     422f68 <__flatcc_fb_clear_parser@@Base+0x6f8>
  423675:	mov    rsi,QWORD PTR [r15+0x8]
  423679:	xor    r9d,r9d
  42367c:	xor    r8d,r8d
  42367f:	xor    ecx,ecx
  423681:	lea    rdx,[rip+0x25188]        # 448810 <fb_schema_table_missing@@Base+0x1350>
  423688:	mov    rdi,rbx
  42368b:	call   41e370 <__flatcc_error_report@@Base>
  423690:	jmp    422f68 <__flatcc_fb_clear_parser@@Base+0x6f8>
  423695:	nop    DWORD PTR [rax]
  423698:	mov    rax,QWORD PTR [rsp+0x20]
  42369d:	cmp    DWORD PTR [rax+0x48],0x6
  4236a1:	je     4238e8 <__flatcc_fb_clear_parser@@Base+0x1078>
  4236a7:	mov    r13d,DWORD PTR [rsp+0x38]
  4236ac:	inc    QWORD PTR [rsp+0x40]
  4236b1:	test   r13d,r13d
  4236b4:	jne    423177 <__flatcc_fb_clear_parser@@Base+0x907>
  4236ba:	jmp    4233f5 <__flatcc_fb_clear_parser@@Base+0xb85>
  4236bf:	nop
  4236c0:	mov    ecx,0x4
  4236c5:	mov    WORD PTR [rsp+0x50],cx
  4236ca:	mov    rsi,r14
  4236cd:	lea    rcx,[rsp+0x40]
  4236d2:	mov    rdi,rbx
  4236d5:	mov    QWORD PTR [rsp+0x40],0x0
  4236de:	call   427830 <__flatcc_fb_coerce_scalar_type@@Base>
  4236e3:	test   eax,eax
  4236e5:	je     423058 <__flatcc_fb_clear_parser@@Base+0x7e8>
  4236eb:	xor    r9d,r9d
  4236ee:	xor    r8d,r8d
  4236f1:	xor    ecx,ecx
  4236f3:	lea    rdx,[rip+0x25146]        # 448840 <fb_schema_table_missing@@Base+0x1380>
  4236fa:	xor    esi,esi
  4236fc:	mov    rdi,rbx
  4236ff:	call   41e370 <__flatcc_error_report@@Base>
  423704:	mov    eax,0xffffffff
  423709:	jmp    42328a <__flatcc_fb_clear_parser@@Base+0xa1a>
  42370e:	xchg   ax,ax
  423710:	mov    rcx,QWORD PTR [rsp+0x20]
  423715:	mov    rax,QWORD PTR [rsp+0x40]
  42371a:	cmp    DWORD PTR [rcx+0x48],0x6
  42371e:	je     423968 <__flatcc_fb_clear_parser@@Base+0x10f8>
  423724:	mov    r12d,DWORD PTR [rsp+0x38]
  423729:	inc    rax
  42372c:	mov    QWORD PTR [rsp+0x40],rax
  423731:	test   r12d,r12d
  423734:	jne    423177 <__flatcc_fb_clear_parser@@Base+0x907>
  42373a:	jmp    4233f5 <__flatcc_fb_clear_parser@@Base+0xb85>
  42373f:	nop
  423740:	cmp    WORD PTR [rsi+0x58],0x0
  423745:	jne    423aca <__flatcc_fb_clear_parser@@Base+0x125a>
  42374b:	mov    r8d,0x8
  423751:	mov    r9d,0x1
  423757:	mov    WORD PTR [rsi+0x58],r8w
  42375c:	mov    DWORD PTR [rsi+0x48],0x4
  423763:	mov    QWORD PTR [rsi+0xb8],0x1
  42376e:	mov    WORD PTR [rsi+0xb0],r9w
  423776:	jmp    422f13 <__flatcc_fb_clear_parser@@Base+0x6a3>
  42377b:	cmp    BYTE PTR [rsp+0x40],0x1
  423780:	je     423a17 <__flatcc_fb_clear_parser@@Base+0x11a7>
  423786:	mov    r11d,DWORD PTR [rsp+0x38]
  42378b:	mov    BYTE PTR [rsp+0x40],0x1
  423790:	test   r11d,r11d
  423793:	jne    423177 <__flatcc_fb_clear_parser@@Base+0x907>
  423799:	jmp    4233f5 <__flatcc_fb_clear_parser@@Base+0xb85>
  42379e:	mov    rsi,QWORD PTR [r15+0x8]
  4237a2:	xor    r9d,r9d
  4237a5:	xor    r8d,r8d
  4237a8:	xor    ecx,ecx
  4237aa:	lea    rdx,[rip+0x24fb7]        # 448768 <fb_schema_table_missing@@Base+0x12a8>
  4237b1:	mov    rdi,rbx
  4237b4:	call   41e370 <__flatcc_error_report@@Base>
  4237b9:	jmp    422f68 <__flatcc_fb_clear_parser@@Base+0x6f8>
  4237be:	cmp    edx,0x1
  4237c1:	cmovne rsi,r8
  4237c5:	cmp    rbx,0xfffffffffffffe08
  4237cc:	je     42382c <__flatcc_fb_clear_parser@@Base+0xfbc>
  4237ce:	mov    rdi,QWORD PTR [rbx+0x260]
  4237d5:	test   rdi,rdi
  4237d8:	je     42382c <__flatcc_fb_clear_parser@@Base+0xfbc>
  4237da:	neg    eax
  4237dc:	movsxd rdx,eax
  4237df:	call   41d090 <fb_scope_table_find@@Base>
  4237e4:	test   rax,rax
  4237e7:	je     423828 <__flatcc_fb_clear_parser@@Base+0xfb8>
  4237e9:	mov    rcx,QWORD PTR [r14+0x8]
  4237ed:	lea    rdi,[rax+0x8]
  4237f1:	mov    rdx,QWORD PTR [rcx+0x8]
  4237f5:	mov    rsi,QWORD PTR [rcx]
  4237f8:	call   41c010 <fb_symbol_table_find@@Base>
  4237fd:	mov    r14,rax
  423800:	test   rax,rax
  423803:	je     423828 <__flatcc_fb_clear_parser@@Base+0xfb8>
  423805:	cmp    WORD PTR [rax+0x10],0x4
  42380a:	ja     423828 <__flatcc_fb_clear_parser@@Base+0xfb8>
  42380c:	mov    rsi,QWORD PTR [rax+0x20]
  423810:	lea    rdi,[rbx+0x320]
  423817:	call   41b8b0 <ptr_set_find_item@@Base>
  42381c:	test   rax,rax
  42381f:	jne    423531 <__flatcc_fb_clear_parser@@Base+0xcc1>
  423825:	nop    DWORD PTR [rax]
  423828:	mov    r8,QWORD PTR [r15+0x18]
  42382c:	mov    rcx,r15
  42382f:	lea    rdx,[rip+0x250c2]        # 4488f8 <fb_schema_table_missing@@Base+0x1438>
  423836:	mov    rsi,r8
  423839:	mov    rdi,rbx
  42383c:	call   41f7a0 <error_ref_sym@@Base>
  423841:	mov    eax,0x1
  423846:	mov    WORD PTR [r15+0x28],ax
  42384b:	jmp    4230e7 <__flatcc_fb_clear_parser@@Base+0x877>
  423850:	mov    rax,QWORD PTR [r13+0x0]
  423854:	test   rax,rax
  423857:	je     423828 <__flatcc_fb_clear_parser@@Base+0xfb8>
  423859:	xor    ecx,ecx
  42385b:	jmp    423862 <__flatcc_fb_clear_parser@@Base+0xff2>
  42385d:	nop    DWORD PTR [rax]
  423860:	mov    ecx,edx
  423862:	mov    rax,QWORD PTR [rax]
  423865:	lea    edx,[rcx+0x1]
  423868:	test   rax,rax
  42386b:	jne    423860 <__flatcc_fb_clear_parser@@Base+0xff0>
  42386d:	neg    ecx
  42386f:	mov    ebp,ecx
  423871:	lea    r12,[rbx+0x1f8]
  423878:	test   ebp,ebp
  42387a:	je     4238a8 <__flatcc_fb_clear_parser@@Base+0x1038>
  42387c:	nop    DWORD PTR [rax+0x0]
  423880:	test   r12,r12
  423883:	je     4238a2 <__flatcc_fb_clear_parser@@Base+0x1032>
  423885:	mov    rdi,QWORD PTR [rbx+0x260]
  42388c:	test   rdi,rdi
  42388f:	je     4238a2 <__flatcc_fb_clear_parser@@Base+0x1032>
  423891:	mov    rsi,QWORD PTR [r13+0x0]
  423895:	movsxd rdx,ebp
  423898:	call   41d090 <fb_scope_table_find@@Base>
  42389d:	test   rax,rax
  4238a0:	jne    4238e0 <__flatcc_fb_clear_parser@@Base+0x1070>
  4238a2:	inc    ebp
  4238a4:	test   ebp,ebp
  4238a6:	jne    423880 <__flatcc_fb_clear_parser@@Base+0x1010>
  4238a8:	test   r12,r12
  4238ab:	je     423828 <__flatcc_fb_clear_parser@@Base+0xfb8>
  4238b1:	mov    rdi,QWORD PTR [rbx+0x260]
  4238b8:	test   rdi,rdi
  4238bb:	je     423828 <__flatcc_fb_clear_parser@@Base+0xfb8>
  4238c1:	xor    edx,edx
  4238c3:	xor    esi,esi
  4238c5:	call   41d090 <fb_scope_table_find@@Base>
  4238ca:	mov    r13,rax
  4238cd:	test   rax,rax
  4238d0:	jne    4234e8 <__flatcc_fb_clear_parser@@Base+0xc78>
  4238d6:	jmp    423828 <__flatcc_fb_clear_parser@@Base+0xfb8>
  4238db:	nop    DWORD PTR [rax+rax*1+0x0]
  4238e0:	mov    r13,rax
  4238e3:	jmp    4234e8 <__flatcc_fb_clear_parser@@Base+0xc78>
  4238e8:	cmp    QWORD PTR [rsp+0x40],0xffffffffffffffff
  4238ee:	jne    4236a7 <__flatcc_fb_clear_parser@@Base+0xe37>
  4238f4:	mov    rsi,QWORD PTR [r15+0x8]
  4238f8:	xor    r9d,r9d
  4238fb:	xor    r8d,r8d
  4238fe:	xor    ecx,ecx
  423900:	lea    rdx,[rip+0x26063]        # 44996a <fb_schema_table_missing@@Base+0x24aa>
  423907:	mov    rdi,rbx
  42390a:	call   41e370 <__flatcc_error_report@@Base>
  42390f:	movzx  eax,WORD PTR [r15+0x58]
  423914:	inc    QWORD PTR [rsp+0x40]
  423919:	jmp    423145 <__flatcc_fb_clear_parser@@Base+0x8d5>
  42391e:	mov    rsi,QWORD PTR [r15+0x8]
  423922:	xor    r9d,r9d
  423925:	xor    r8d,r8d
  423928:	xor    ecx,ecx
  42392a:	lea    rdx,[rip+0x24f4f]        # 448880 <fb_schema_table_missing@@Base+0x13c0>
  423931:	mov    rdi,rbx
  423934:	call   41e370 <__flatcc_error_report@@Base>
  423939:	mov    eax,0xffffffff
  42393e:	jmp    42328a <__flatcc_fb_clear_parser@@Base+0xa1a>
  423943:	mov    rsi,QWORD PTR [r15+0x8]
  423947:	xor    r9d,r9d
  42394a:	xor    r8d,r8d
  42394d:	xor    ecx,ecx
  42394f:	lea    rdx,[rip+0x2508a]        # 4489e0 <fb_schema_table_missing@@Base+0x1520>
  423956:	mov    rdi,rbx
  423959:	call   41e370 <__flatcc_error_report@@Base>
  42395e:	mov    eax,0xffffffff
  423963:	jmp    42328a <__flatcc_fb_clear_parser@@Base+0xa1a>
  423968:	movabs rcx,0x7fffffffffffffff
  423972:	cmp    rax,rcx
  423975:	jne    423724 <__flatcc_fb_clear_parser@@Base+0xeb4>
  42397b:	mov    rsi,QWORD PTR [r15+0x8]
  42397f:	xor    r9d,r9d
  423982:	xor    r8d,r8d
  423985:	xor    ecx,ecx
  423987:	lea    rdx,[rip+0x25ff9]        # 449987 <fb_schema_table_missing@@Base+0x24c7>
  42398e:	mov    rdi,rbx
  423991:	call   41e370 <__flatcc_error_report@@Base>
  423996:	movzx  eax,WORD PTR [r15+0x58]
  42399b:	inc    QWORD PTR [rsp+0x40]
  4239a0:	jmp    423145 <__flatcc_fb_clear_parser@@Base+0x8d5>
  4239a5:	xor    edi,edi
  4239a7:	mov    WORD PTR [r14+0xa4],di
  4239af:	mov    DWORD PTR [rsp+0x38],0x0
  4239b7:	jmp    42303c <__flatcc_fb_clear_parser@@Base+0x7cc>
  4239bc:	mov    rcx,QWORD PTR [r14+0x8]
  4239c0:	mov    rsi,QWORD PTR [r15+0x8]
  4239c4:	xor    r9d,r9d
  4239c7:	xor    r8d,r8d
  4239ca:	lea    rdx,[rip+0x24f57]        # 448928 <fb_schema_table_missing@@Base+0x1468>
  4239d1:	mov    rdi,rbx
  4239d4:	call   41e370 <__flatcc_error_report@@Base>
  4239d9:	mov    eax,0x1
  4239de:	mov    WORD PTR [r15+0x28],ax
  4239e3:	jmp    4230e7 <__flatcc_fb_clear_parser@@Base+0x877>
  4239e8:	mov    rsi,QWORD PTR [r15+0x8]
  4239ec:	lea    rdx,[rip+0x250d5]        # 448ac8 <fb_schema_table_missing@@Base+0x1608>
  4239f3:	xor    r9d,r9d
  4239f6:	xor    r8d,r8d
  4239f9:	xor    ecx,ecx
  4239fb:	mov    rdi,rbx
  4239fe:	call   41e370 <__flatcc_error_report@@Base>
  423a03:	mov    edx,0x1
  423a08:	mov    WORD PTR [r15+0x58],dx
  423a0d:	mov    eax,0xffffffff
  423a12:	jmp    42328a <__flatcc_fb_clear_parser@@Base+0xa1a>
  423a17:	mov    rsi,QWORD PTR [r15+0x8]
  423a1b:	xor    r9d,r9d
  423a1e:	xor    r8d,r8d
  423a21:	xor    ecx,ecx
  423a23:	lea    rdx,[rip+0x24f46]        # 448970 <fb_schema_table_missing@@Base+0x14b0>
  423a2a:	mov    rdi,rbx
  423a2d:	call   41e370 <__flatcc_error_report@@Base>
  423a32:	movzx  eax,WORD PTR [r15+0x58]
  423a37:	mov    BYTE PTR [rsp+0x40],0x1
  423a3c:	jmp    423145 <__flatcc_fb_clear_parser@@Base+0x8d5>
  423a41:	mov    rsi,QWORD PTR [r15+0x8]
  423a45:	xor    r9d,r9d
  423a48:	xor    r8d,r8d
  423a4b:	xor    ecx,ecx
  423a4d:	lea    rdx,[rip+0x24f4c]        # 4489a0 <fb_schema_table_missing@@Base+0x14e0>
  423a54:	mov    rdi,rbx
  423a57:	call   41e370 <__flatcc_error_report@@Base>
  423a5c:	mov    eax,0xffffffff
  423a61:	jmp    42328a <__flatcc_fb_clear_parser@@Base+0xa1a>
  423a66:	mov    rdi,rbx
  423a69:	lea    rdx,[rip+0x24fa8]        # 448a18 <fb_schema_table_missing@@Base+0x1558>
  423a70:	call   41e370 <__flatcc_error_report@@Base>
  423a75:	mov    edi,0x1
  423a7a:	mov    WORD PTR [r15+0x58],di
  423a7f:	mov    eax,0xffffffff
  423a84:	jmp    42328a <__flatcc_fb_clear_parser@@Base+0xa1a>
  423a89:	mov    rsi,QWORD PTR [rsi+0x8]
  423a8d:	xor    r9d,r9d
  423a90:	xor    r8d,r8d
  423a93:	xor    ecx,ecx
  423a95:	lea    rdx,[rip+0x24bdc]        # 448678 <fb_schema_table_missing@@Base+0x11b8>
  423a9c:	call   41e370 <__flatcc_error_report@@Base>
  423aa1:	mov    eax,0xffffffff
  423aa6:	jmp    42328a <__flatcc_fb_clear_parser@@Base+0xa1a>
  423aab:	lea    rcx,[rip+0x261de]        # 449c90 <fb_schema_table_missing@@Base+0x27d0>
  423ab2:	mov    edx,0x523
  423ab7:	lea    rsi,[rip+0x249d2]        # 448490 <fb_schema_table_missing@@Base+0xfd0>
  423abe:	lea    rdi,[rip+0x25e8f]        # 449954 <fb_schema_table_missing@@Base+0x2494>
  423ac5:	call   405300 <__assert_fail@plt>
  423aca:	mov    rsi,QWORD PTR [rsi+0x8]
  423ace:	xor    r9d,r9d
  423ad1:	xor    r8d,r8d
  423ad4:	xor    ecx,ecx
  423ad6:	lea    rdx,[rip+0x24bd3]        # 4486b0 <fb_schema_table_missing@@Base+0x11f0>
  423add:	call   41e370 <__flatcc_error_report@@Base>
  423ae2:	mov    eax,0xffffffff
  423ae7:	jmp    42328a <__flatcc_fb_clear_parser@@Base+0xa1a>
  423aec:	mov    r10d,0x1
  423af2:	mov    WORD PTR [rsi+0x58],r10w
  423af7:	mov    rsi,QWORD PTR [rsi+0x8]
  423afb:	xor    r9d,r9d
  423afe:	xor    r8d,r8d
  423b01:	xor    ecx,ecx
  423b03:	lea    rdx,[rip+0x25de8]        # 4498f2 <fb_schema_table_missing@@Base+0x2432>
  423b0a:	call   41e370 <__flatcc_error_report@@Base>
  423b0f:	mov    eax,0xffffffff
  423b14:	jmp    42328a <__flatcc_fb_clear_parser@@Base+0xa1a>
  423b19:	lea    rcx,[rip+0x26170]        # 449c90 <fb_schema_table_missing@@Base+0x27d0>
  423b20:	mov    edx,0x4cd
  423b25:	lea    rsi,[rip+0x24964]        # 448490 <fb_schema_table_missing@@Base+0xfd0>
  423b2c:	lea    rdi,[rip+0x25da1]        # 4498d4 <fb_schema_table_missing@@Base+0x2414>
  423b33:	call   405300 <__assert_fail@plt>
  423b38:	call   4052d0 <__stack_chk_fail@plt>
  423b3d:	nop    DWORD PTR [rax]
  423b40:	push   r15
  423b42:	push   r14
  423b44:	push   r13
  423b46:	push   r12
  423b48:	push   rbp
  423b49:	push   rbx
  423b4a:	sub    rsp,0x158
  423b51:	mov    QWORD PTR [rsp+0x38],rsi
  423b56:	mov    rcx,QWORD PTR fs:0x28
  423b5f:	mov    QWORD PTR [rsp+0x148],rcx
  423b67:	xor    ecx,ecx
  423b69:	cmp    WORD PTR [rsi+0x10],0x0
  423b6e:	jne    425a41 <__flatcc_fb_clear_parser@@Base+0x31d1>
  423b74:	mov    rax,QWORD PTR [rsp+0x38]
  423b79:	cmp    WORD PTR [rax+0x58],0x0
  423b7e:	jne    425ac3 <__flatcc_fb_clear_parser@@Base+0x3253>
  423b84:	mov    rax,QWORD PTR [rsp+0x38]
  423b89:	lea    r14,[rsp+0x80]
  423b91:	mov    r13,QWORD PTR [rax+0x38]
  423b95:	mov    r15,rdi
  423b98:	mov    ecx,0xc
  423b9d:	xor    eax,eax
  423b9f:	mov    rdi,r14
  423ba2:	mov    QWORD PTR [rsp+0x8],r14
  423ba7:	rep stos QWORD PTR es:[rdi],rax
  423baa:	xor    ebp,ebp
  423bac:	test   r13,r13
  423baf:	je     423c90 <__flatcc_fb_clear_parser@@Base+0x1420>
  423bb5:	mov    ebx,0x64
  423bba:	lea    r12,[rip+0x260ff]        # 449cc0 <fb_schema_table_missing@@Base+0x2800>
  423bc1:	jmp    423bf7 <__flatcc_fb_clear_parser@@Base+0x1387>
  423bc3:	nop    DWORD PTR [rax+rax*1+0x0]
  423bc8:	mov    eax,DWORD PTR [r12+rax*4]
  423bcc:	mov    QWORD PTR [rdx],r13
  423bcf:	test   eax,eax
  423bd1:	jne    4240c0 <__flatcc_fb_clear_parser@@Base+0x1850>
  423bd7:	cmp    WORD PTR [r13+0x20],0x0
  423bdd:	jne    425188 <__flatcc_fb_clear_parser@@Base+0x2918>
  423be3:	nop    DWORD PTR [rax+rax*1+0x0]
  423be8:	mov    r13,QWORD PTR [r13+0x0]
  423bec:	dec    ebx
  423bee:	test   r13,r13
  423bf1:	je     423c70 <__flatcc_fb_clear_parser@@Base+0x1400>
  423bf3:	test   ebx,ebx
  423bf5:	je     423c70 <__flatcc_fb_clear_parser@@Base+0x1400>
  423bf7:	mov    rax,QWORD PTR [r13+0x8]
  423bfb:	mov    rcx,QWORD PTR [r15+0x260]
  423c02:	mov    rdx,QWORD PTR [rax+0x8]
  423c06:	mov    rsi,QWORD PTR [rax]
  423c09:	lea    rdi,[rcx+0x20]
  423c0d:	call   42d230 <fb_name_table_find@@Base>
  423c12:	test   rax,rax
  423c15:	je     424d20 <__flatcc_fb_clear_parser@@Base+0x24b0>
  423c1b:	movsxd rax,DWORD PTR [rax+0x20]
  423c1f:	test   eax,eax
  423c21:	je     423be8 <__flatcc_fb_clear_parser@@Base+0x1378>
  423c23:	cmp    al,0x3
  423c25:	jne    424ca8 <__flatcc_fb_clear_parser@@Base+0x2438>
  423c2b:	mov    edx,0x1
  423c30:	shlx   edx,edx,eax
  423c35:	or     ebp,edx
  423c37:	lea    rdx,[r14+rax*8]
  423c3b:	cmp    QWORD PTR [rdx],0x0
  423c3f:	je     423bc8 <__flatcc_fb_clear_parser@@Base+0x1358>
  423c41:	mov    rsi,QWORD PTR [r13+0x8]
  423c45:	xor    r9d,r9d
  423c48:	xor    r8d,r8d
  423c4b:	xor    ecx,ecx
  423c4d:	lea    rdx,[rip+0x24aec]        # 448740 <fb_schema_table_missing@@Base+0x1280>
  423c54:	mov    rdi,r15
  423c57:	call   41e370 <__flatcc_error_report@@Base>
  423c5c:	mov    r13,QWORD PTR [r13+0x0]
  423c60:	dec    ebx
  423c62:	test   r13,r13
  423c65:	jne    423bf3 <__flatcc_fb_clear_parser@@Base+0x1383>
  423c67:	nop    WORD PTR [rax+rax*1+0x0]
  423c70:	test   r13,r13
  423c73:	je     423c90 <__flatcc_fb_clear_parser@@Base+0x1420>
  423c75:	mov    rsi,QWORD PTR [r13+0x8]
  423c79:	xor    r9d,r9d
  423c7c:	xor    r8d,r8d
  423c7f:	xor    ecx,ecx
  423c81:	lea    rdx,[rip+0x25c80]        # 449908 <fb_schema_table_missing@@Base+0x2448>
  423c88:	mov    rdi,r15
  423c8b:	call   41e370 <__flatcc_error_report@@Base>
  423c90:	mov    rax,QWORD PTR [rsp+0x38]
  423c95:	mov    r12,QWORD PTR [rax+0x28]
  423c99:	mov    WORD PTR [rax+0xa4],bp
  423ca0:	test   r12,r12
  423ca3:	je     4256e9 <__flatcc_fb_clear_parser@@Base+0x2e79>
  423ca9:	mov    rax,QWORD PTR [rsp+0x38]
  423cae:	mov    QWORD PTR [rsp+0x50],0x0
  423cb7:	add    rax,0x60
  423cbb:	mov    QWORD PTR [rsp+0x30],rax
  423cc0:	mov    DWORD PTR [rsp+0x4c],0x0
  423cc8:	mov    QWORD PTR [rsp+0x58],0x0
  423cd1:	mov    DWORD PTR [rsp+0x1c],0x0
  423cd9:	mov    DWORD PTR [rsp+0x48],0x0
  423ce1:	mov    QWORD PTR [rsp+0x28],0x0
  423cea:	mov    rbp,r15
  423ced:	nop    DWORD PTR [rax]
  423cf0:	mov    rdi,QWORD PTR [rsp+0x30]
  423cf5:	mov    edx,0x1
  423cfa:	mov    rsi,r12
  423cfd:	call   41bff0 <fb_symbol_table_insert_item@@Base>
  423d02:	mov    r15,rax
  423d05:	test   rax,rax
  423d08:	jne    424930 <__flatcc_fb_clear_parser@@Base+0x20c0>
  423d0e:	cmp    WORD PTR [r12+0x10],0x5
  423d15:	jne    4250d8 <__flatcc_fb_clear_parser@@Base+0x2868>
  423d1b:	movzx  eax,WORD PTR [r12+0x28]
  423d21:	cmp    ax,0x1
  423d25:	je     424220 <__flatcc_fb_clear_parser@@Base+0x19b0>
  423d2b:	sub    eax,0x7
  423d2e:	cmp    ax,0x1
  423d32:	jbe    424b98 <__flatcc_fb_clear_parser@@Base+0x2328>
  423d38:	mov    rdi,QWORD PTR [rsp+0x8]
  423d3d:	mov    r14,QWORD PTR [r12+0x60]
  423d42:	mov    ecx,0xc
  423d47:	xor    eax,eax
  423d49:	rep stos QWORD PTR es:[rdi],rax
  423d4c:	xor    r13d,r13d
  423d4f:	mov    ebx,0x64
  423d54:	test   r14,r14
  423d57:	jne    423d9e <__flatcc_fb_clear_parser@@Base+0x152e>
  423d59:	jmp    424da8 <__flatcc_fb_clear_parser@@Base+0x2538>
  423d5e:	xchg   ax,ax
  423d60:	lea    rcx,[rip+0x25f59]        # 449cc0 <fb_schema_table_missing@@Base+0x2800>
  423d67:	mov    eax,DWORD PTR [rcx+rax*4]
  423d6a:	mov    QWORD PTR [rdx],r14
  423d6d:	test   eax,eax
  423d6f:	jne    424290 <__flatcc_fb_clear_parser@@Base+0x1a20>
  423d75:	cmp    WORD PTR [r14+0x20],0x0
  423d7b:	jne    424c30 <__flatcc_fb_clear_parser@@Base+0x23c0>
  423d81:	nop    DWORD PTR [rax+0x0]
  423d88:	mov    r14,QWORD PTR [r14]
  423d8b:	dec    ebx
  423d8d:	test   r14,r14
  423d90:	je     423e28 <__flatcc_fb_clear_parser@@Base+0x15b8>
  423d96:	test   ebx,ebx
  423d98:	je     423e28 <__flatcc_fb_clear_parser@@Base+0x15b8>
  423d9e:	mov    rax,QWORD PTR [r14+0x8]
  423da2:	mov    rcx,QWORD PTR [rbp+0x260]
  423da9:	mov    rdx,QWORD PTR [rax+0x8]
  423dad:	mov    rsi,QWORD PTR [rax]
  423db0:	lea    rdi,[rcx+0x20]
  423db4:	call   42d230 <fb_name_table_find@@Base>
  423db9:	test   rax,rax
  423dbc:	je     424910 <__flatcc_fb_clear_parser@@Base+0x20a0>
  423dc2:	movsxd rax,DWORD PTR [rax+0x20]
  423dc6:	test   eax,eax
  423dc8:	je     423d88 <__flatcc_fb_clear_parser@@Base+0x1518>
  423dca:	mov    edx,0xfc6
  423dcf:	bt     edx,eax
  423dd2:	jae    424310 <__flatcc_fb_clear_parser@@Base+0x1aa0>
  423dd8:	mov    rcx,QWORD PTR [rsp+0x8]
  423ddd:	mov    edx,0x1
  423de2:	shlx   edx,edx,eax
  423de7:	or     r13d,edx
  423dea:	lea    rdx,[rcx+rax*8]
  423dee:	cmp    QWORD PTR [rdx],0x0
  423df2:	je     423d60 <__flatcc_fb_clear_parser@@Base+0x14f0>
  423df8:	mov    rsi,QWORD PTR [r14+0x8]
  423dfc:	xor    r9d,r9d
  423dff:	xor    r8d,r8d
  423e02:	xor    ecx,ecx
  423e04:	lea    rdx,[rip+0x24935]        # 448740 <fb_schema_table_missing@@Base+0x1280>
  423e0b:	mov    rdi,rbp
  423e0e:	call   41e370 <__flatcc_error_report@@Base>
  423e13:	mov    r14,QWORD PTR [r14]
  423e16:	dec    ebx
  423e18:	test   r14,r14
  423e1b:	jne    423d96 <__flatcc_fb_clear_parser@@Base+0x1526>
  423e21:	nop    DWORD PTR [rax+0x0]
  423e28:	mov    rax,QWORD PTR [rsp+0xb0]
  423e30:	mov    QWORD PTR [rsp+0x10],rax
  423e35:	test   r14,r14
  423e38:	je     423e55 <__flatcc_fb_clear_parser@@Base+0x15e5>
  423e3a:	mov    rsi,QWORD PTR [r14+0x8]
  423e3e:	xor    r9d,r9d
  423e41:	xor    r8d,r8d
  423e44:	xor    ecx,ecx
  423e46:	lea    rdx,[rip+0x25abb]        # 449908 <fb_schema_table_missing@@Base+0x2448>
  423e4d:	mov    rdi,rbp
  423e50:	call   41e370 <__flatcc_error_report@@Base>
  423e55:	cmp    QWORD PTR [rsp+0x10],0x0
  423e5b:	mov    WORD PTR [r12+0x70],r13w
  423e61:	je     423f81 <__flatcc_fb_clear_parser@@Base+0x1711>
  423e67:	mov    rax,QWORD PTR [rsp+0x38]
  423e6c:	cmp    WORD PTR [r12+0x28],0x7
  423e73:	mov    rbx,QWORD PTR [rax+0x18]
  423e77:	mov    rax,QWORD PTR [rsp+0x10]
  423e7c:	jne    425619 <__flatcc_fb_clear_parser@@Base+0x2da9>
  423e82:	cmp    DWORD PTR [r12+0x18],0x4
  423e88:	jne    425619 <__flatcc_fb_clear_parser@@Base+0x2da9>
  423e8e:	cmp    WORD PTR [rax+0x20],0x2
  423e93:	jne    425608 <__flatcc_fb_clear_parser@@Base+0x2d98>
  423e99:	mov    r9d,DWORD PTR [rax+0x18]
  423e9d:	mov    rsi,QWORD PTR [rax+0x10]
  423ea1:	test   r9d,r9d
  423ea4:	jle    4255f0 <__flatcc_fb_clear_parser@@Base+0x2d80>
  423eaa:	lea    eax,[r9-0x1]
  423eae:	movsxd rcx,eax
  423eb1:	cmp    BYTE PTR [rsi+rcx*1],0x2e
  423eb5:	je     425600 <__flatcc_fb_clear_parser@@Base+0x2d90>
  423ebb:	lea    ecx,[r9-0x2]
  423ebf:	movsxd rcx,ecx
  423ec2:	jmp    423edf <__flatcc_fb_clear_parser@@Base+0x166f>
  423ec4:	nop    DWORD PTR [rax+0x0]
  423ec8:	lea    rdx,[rcx-0x1]
  423ecc:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x2e
  423ed1:	lea    edi,[rax-0x1]
  423ed4:	je     424c50 <__flatcc_fb_clear_parser@@Base+0x23e0>
  423eda:	mov    rcx,rdx
  423edd:	mov    eax,edi
  423edf:	test   eax,eax
  423ee1:	jne    423ec8 <__flatcc_fb_clear_parser@@Base+0x1658>
  423ee3:	mov    r13d,r9d
  423ee6:	mov    r14,rsi
  423ee9:	test   rbx,rbx
  423eec:	je     424be0 <__flatcc_fb_clear_parser@@Base+0x2370>
  423ef2:	test   eax,eax
  423ef4:	jne    424be0 <__flatcc_fb_clear_parser@@Base+0x2370>
  423efa:	movsxd rax,r13d
  423efd:	mov    QWORD PTR [rsp+0x20],rax
  423f02:	lea    rax,[rbp+0x320]
  423f09:	mov    QWORD PTR [rsp+0x40],rax
  423f0e:	xchg   ax,ax
  423f10:	mov    rdx,QWORD PTR [rsp+0x20]
  423f15:	lea    rdi,[rbx+0x8]
  423f19:	mov    rsi,r14
  423f1c:	call   41c010 <fb_symbol_table_find@@Base>
  423f21:	mov    r13,rax
  423f24:	test   rax,rax
  423f27:	je     424850 <__flatcc_fb_clear_parser@@Base+0x1fe0>
  423f2d:	cmp    WORD PTR [rax+0x10],0x4
  423f32:	ja     424850 <__flatcc_fb_clear_parser@@Base+0x1fe0>
  423f38:	mov    rsi,QWORD PTR [rax+0x20]
  423f3c:	mov    rdi,QWORD PTR [rsp+0x40]
  423f41:	call   41b8b0 <ptr_set_find_item@@Base>
  423f46:	test   rax,rax
  423f49:	je     424850 <__flatcc_fb_clear_parser@@Base+0x1fe0>
  423f4f:	movzx  eax,WORD PTR [r13+0x10]
  423f54:	test   ax,ax
  423f57:	je     423f73 <__flatcc_fb_clear_parser@@Base+0x1703>
  423f59:	mov    r9d,DWORD PTR [rbp+0x11c]
  423f60:	test   r9d,r9d
  423f63:	je     425a14 <__flatcc_fb_clear_parser@@Base+0x31a4>
  423f69:	cmp    ax,0x1
  423f6d:	jne    4259c0 <__flatcc_fb_clear_parser@@Base+0x3150>
  423f73:	mov    QWORD PTR [r12+0x90],r13
  423f7b:	movzx  r13d,WORD PTR [r12+0x70]
  423f81:	test   r13w,0x100
  423f87:	je     423f96 <__flatcc_fb_clear_parser@@Base+0x1726>
  423f89:	cmp    WORD PTR [r12+0x28],0x8
  423f90:	je     424dc0 <__flatcc_fb_clear_parser@@Base+0x2550>
  423f96:	test   r13w,0x400
  423f9c:	je     423fd5 <__flatcc_fb_clear_parser@@Base+0x1765>
  423f9e:	cmp    WORD PTR [r12+0x28],0x7
  423fa5:	jne    423fb3 <__flatcc_fb_clear_parser@@Base+0x1743>
  423fa7:	cmp    DWORD PTR [r12+0x18],0x4
  423fad:	je     4250c0 <__flatcc_fb_clear_parser@@Base+0x2850>
  423fb3:	mov    rsi,QWORD PTR [r12+0x8]
  423fb8:	xor    r9d,r9d
  423fbb:	xor    r8d,r8d
  423fbe:	xor    ecx,ecx
  423fc0:	lea    rdx,[rip+0x24eb9]        # 448e80 <fb_schema_table_missing@@Base+0x19c0>
  423fc7:	mov    rdi,rbp
  423fca:	call   41e370 <__flatcc_error_report@@Base>
  423fcf:	movzx  r13d,WORD PTR [r12+0x70]
  423fd5:	test   r13w,0x800
  423fdb:	je     42400c <__flatcc_fb_clear_parser@@Base+0x179c>
  423fdd:	cmp    WORD PTR [r12+0x28],0x7
  423fe4:	je     424c68 <__flatcc_fb_clear_parser@@Base+0x23f8>
  423fea:	mov    rsi,QWORD PTR [r12+0x8]
  423fef:	xor    r9d,r9d
  423ff2:	xor    r8d,r8d
  423ff5:	xor    ecx,ecx
  423ff7:	lea    rdx,[rip+0x24ec2]        # 448ec0 <fb_schema_table_missing@@Base+0x1a00>
  423ffe:	mov    rdi,rbp
  424001:	call   41e370 <__flatcc_error_report@@Base>
  424006:	movzx  r13d,WORD PTR [r12+0x70]
  42400c:	and    r13w,0xc00
  424012:	cmp    r13w,0xc00
  424018:	je     424c80 <__flatcc_fb_clear_parser@@Base+0x2410>
  42401e:	mov    rax,QWORD PTR [rsp+0x88]
  424026:	test   rax,rax
  424029:	setne  BYTE PTR [rsp+0x10]
  42402e:	cmp    QWORD PTR [rsp+0x28],0x0
  424034:	mov    QWORD PTR [rsp+0x20],rax
  424039:	movzx  eax,BYTE PTR [rsp+0x10]
  42403e:	jne    424b18 <__flatcc_fb_clear_parser@@Base+0x22a8>
  424044:	test   al,al
  424046:	je     424b18 <__flatcc_fb_clear_parser@@Base+0x22a8>
  42404c:	mov    rax,QWORD PTR [rbp+0xd8]
  424053:	mov    rdx,QWORD PTR [rbp+0x148]
  42405a:	xor    esi,esi
  42405c:	mov    rdi,rax
  42405f:	mov    QWORD PTR [rsp+0x50],rax
  424064:	call   405310 <memset@plt>
  424069:	mov    r8d,DWORD PTR [rsp+0x1c]
  42406e:	test   r8d,r8d
  424071:	jne    424cd0 <__flatcc_fb_clear_parser@@Base+0x2460>
  424077:	cmp    QWORD PTR [rbp+0x148],0x0
  42407f:	mov    DWORD PTR [rsp+0x48],0x1
  424087:	je     424cf0 <__flatcc_fb_clear_parser@@Base+0x2480>
  42408d:	inc    QWORD PTR [rsp+0x28]
  424092:	movzx  eax,WORD PTR [r12+0x28]
  424098:	sub    eax,0x7
  42409b:	cmp    ax,0x5
  42409f:	ja     424738 <__flatcc_fb_clear_parser@@Base+0x1ec8>
  4240a5:	lea    rcx,[rip+0x25a74]        # 449b20 <fb_schema_table_missing@@Base+0x2660>
  4240ac:	movzx  eax,ax
  4240af:	movsxd rax,DWORD PTR [rcx+rax*4]
  4240b3:	add    rax,rcx
  4240b6:	notrack jmp rax
  4240b9:	nop    DWORD PTR [rax+0x0]
  4240c0:	cmp    eax,0x2
  4240c3:	jne    4240f8 <__flatcc_fb_clear_parser@@Base+0x1888>
  4240c5:	cmp    WORD PTR [r13+0x20],0x2
  4240cb:	je     423be8 <__flatcc_fb_clear_parser@@Base+0x1378>
  4240d1:	mov    rsi,QWORD PTR [r13+0x8]
  4240d5:	xor    r9d,r9d
  4240d8:	xor    r8d,r8d
  4240db:	xor    ecx,ecx
  4240dd:	lea    rdx,[rip+0x246ac]        # 448790 <fb_schema_table_missing@@Base+0x12d0>
  4240e4:	mov    rdi,r15
  4240e7:	call   41e370 <__flatcc_error_report@@Base>
  4240ec:	jmp    423be8 <__flatcc_fb_clear_parser@@Base+0x1378>
  4240f1:	nop    DWORD PTR [rax+0x0]
  4240f8:	cmp    eax,0x5
  4240fb:	je     424d40 <__flatcc_fb_clear_parser@@Base+0x24d0>
  424101:	cmp    eax,0x4
  424104:	jne    424d70 <__flatcc_fb_clear_parser@@Base+0x2500>
  42410a:	movzx  eax,WORD PTR [r13+0x20]
  42410f:	sub    eax,0x4
  424112:	cmp    ax,0x1
  424116:	jbe    423be8 <__flatcc_fb_clear_parser@@Base+0x1378>
  42411c:	mov    rsi,QWORD PTR [r13+0x8]
  424120:	xor    r9d,r9d
  424123:	xor    r8d,r8d
  424126:	xor    ecx,ecx
  424128:	lea    rdx,[rip+0x246b9]        # 4487e8 <fb_schema_table_missing@@Base+0x1328>
  42412f:	mov    rdi,r15
  424132:	call   41e370 <__flatcc_error_report@@Base>
  424137:	jmp    423be8 <__flatcc_fb_clear_parser@@Base+0x1378>
  42413c:	nop    DWORD PTR [rax+0x0]
  424140:	xor    r14d,r14d
  424143:	mov    eax,0xe
  424148:	mov    WORD PTR [r12+0x28],ax
  42414e:	mov    rax,QWORD PTR [r15+0xb8]
  424155:	mov    QWORD PTR [r12+0x18],r15
  42415a:	mov    QWORD PTR [r12+0x80],rax
  424162:	movzx  eax,WORD PTR [r15+0xb0]
  42416a:	movzx  edx,WORD PTR [r12+0x58]
  424170:	mov    WORD PTR [r12+0x72],ax
  424176:	movzx  eax,WORD PTR [r15+0x10]
  42417b:	cmp    ax,0x4
  42417f:	je     4251b0 <__flatcc_fb_clear_parser@@Base+0x2940>
  424185:	test   dx,dx
  424188:	jne    425280 <__flatcc_fb_clear_parser@@Base+0x2a10>
  42418e:	cmp    ax,0x3
  424192:	jne    424474 <__flatcc_fb_clear_parser@@Base+0x1c04>
  424198:	mov    r9d,0x5
  42419e:	mov    WORD PTR [r12+0x58],r9w
  4241a4:	mov    QWORD PTR [r12+0x48],0x0
  4241ad:	lea    rbx,[r12+0x48]
  4241b2:	mov    edx,DWORD PTR [r15+0x48]
  4241b6:	mov    rcx,rbx
  4241b9:	mov    rsi,r15
  4241bc:	mov    rdi,rbp
  4241bf:	call   427830 <__flatcc_fb_coerce_scalar_type@@Base>
  4241c4:	test   eax,eax
  4241c6:	jne    424754 <__flatcc_fb_clear_parser@@Base+0x1ee4>
  4241cc:	mov    r8d,DWORD PTR [rbp+0x140]
  4241d3:	test   r8d,r8d
  4241d6:	je     424474 <__flatcc_fb_clear_parser@@Base+0x1c04>
  4241dc:	mov    rax,QWORD PTR [r12+0x18]
  4241e1:	mov    rsi,rbx
  4241e4:	lea    rdi,[rax+0x80]
  4241eb:	call   42d960 <fb_value_set_find_item@@Base>
  4241f0:	test   rax,rax
  4241f3:	jne    424474 <__flatcc_fb_clear_parser@@Base+0x1c04>
  4241f9:	mov    rcx,QWORD PTR [r15+0x8]
  4241fd:	mov    rsi,QWORD PTR [r12+0x8]
  424202:	xor    r9d,r9d
  424205:	xor    r8d,r8d
  424208:	lea    rdx,[rip+0x24f59]        # 449168 <fb_schema_table_missing@@Base+0x1ca8>
  42420f:	mov    rdi,rbp
  424212:	call   41e370 <__flatcc_error_report@@Base>
  424217:	mov    WORD PTR [r12+0x28],0x1
  42421f:	nop
  424220:	mov    r12,QWORD PTR [r12]
  424224:	test   r12,r12
  424227:	jne    423cf0 <__flatcc_fb_clear_parser@@Base+0x1480>
  42422d:	mov    r9d,DWORD PTR [rsp+0x1c]
  424232:	mov    r15,rbp
  424235:	test   r9d,r9d
  424238:	je     424e50 <__flatcc_fb_clear_parser@@Base+0x25e0>
  42423e:	mov    eax,DWORD PTR [rsp+0x4c]
  424242:	test   eax,eax
  424244:	je     42427a <__flatcc_fb_clear_parser@@Base+0x1a0a>
  424246:	mov    rax,QWORD PTR [rsp+0x38]
  42424b:	or     WORD PTR [rax+0x12],0x8
  424250:	cmp    DWORD PTR [rsp+0x4c],0x1
  424255:	je     42427a <__flatcc_fb_clear_parser@@Base+0x1a0a>
  424257:	mov    edi,DWORD PTR [r15+0x108]
  42425e:	test   edi,edi
  424260:	je     425a8a <__flatcc_fb_clear_parser@@Base+0x321a>
  424266:	mov    DWORD PTR [rsp+0x4c],0x0
  42426e:	mov    esi,DWORD PTR [rsp+0x1c]
  424272:	test   esi,esi
  424274:	je     4250fc <__flatcc_fb_clear_parser@@Base+0x288c>
  42427a:	mov    DWORD PTR [rsp+0x4c],0xffffffff
  424282:	jmp    4250fc <__flatcc_fb_clear_parser@@Base+0x288c>
  424287:	nop    WORD PTR [rax+rax*1+0x0]
  424290:	cmp    eax,0x2
  424293:	jne    4242c8 <__flatcc_fb_clear_parser@@Base+0x1a58>
  424295:	cmp    WORD PTR [r14+0x20],0x2
  42429b:	je     423d88 <__flatcc_fb_clear_parser@@Base+0x1518>
  4242a1:	mov    rsi,QWORD PTR [r14+0x8]
  4242a5:	xor    r9d,r9d
  4242a8:	xor    r8d,r8d
  4242ab:	xor    ecx,ecx
  4242ad:	lea    rdx,[rip+0x244dc]        # 448790 <fb_schema_table_missing@@Base+0x12d0>
  4242b4:	mov    rdi,rbp
  4242b7:	call   41e370 <__flatcc_error_report@@Base>
  4242bc:	jmp    423d88 <__flatcc_fb_clear_parser@@Base+0x1518>
  4242c1:	nop    DWORD PTR [rax+0x0]
  4242c8:	cmp    eax,0x5
  4242cb:	je     424ae8 <__flatcc_fb_clear_parser@@Base+0x2278>
  4242d1:	cmp    eax,0x4
  4242d4:	jne    424b60 <__flatcc_fb_clear_parser@@Base+0x22f0>
  4242da:	movzx  eax,WORD PTR [r14+0x20]
  4242df:	sub    eax,0x4
  4242e2:	cmp    ax,0x1
  4242e6:	jbe    423d88 <__flatcc_fb_clear_parser@@Base+0x1518>
  4242ec:	mov    rsi,QWORD PTR [r14+0x8]
  4242f0:	xor    r9d,r9d
  4242f3:	xor    r8d,r8d
  4242f6:	xor    ecx,ecx
  4242f8:	lea    rdx,[rip+0x244e9]        # 4487e8 <fb_schema_table_missing@@Base+0x1328>
  4242ff:	mov    rdi,rbp
  424302:	call   41e370 <__flatcc_error_report@@Base>
  424307:	jmp    423d88 <__flatcc_fb_clear_parser@@Base+0x1518>
  42430c:	nop    DWORD PTR [rax+0x0]
  424310:	mov    rsi,QWORD PTR [r14+0x8]
  424314:	xor    r9d,r9d
  424317:	xor    r8d,r8d
  42431a:	xor    ecx,ecx
  42431c:	lea    rdx,[rip+0x243ed]        # 448710 <fb_schema_table_missing@@Base+0x1250>
  424323:	mov    rdi,rbp
  424326:	call   41e370 <__flatcc_error_report@@Base>
  42432b:	jmp    423d88 <__flatcc_fb_clear_parser@@Base+0x1518>
  424330:	mov    rax,QWORD PTR [rsp+0x38]
  424335:	mov    r8,QWORD PTR [r12+0x18]
  42433a:	mov    rbx,QWORD PTR [rax+0x18]
  42433e:	test   r8,r8
  424341:	je     4249f5 <__flatcc_fb_clear_parser@@Base+0x2185>
  424347:	mov    r13,r8
  42434a:	xor    edx,edx
  42434c:	jmp    424355 <__flatcc_fb_clear_parser@@Base+0x1ae5>
  42434e:	xchg   ax,ax
  424350:	mov    edx,eax
  424352:	mov    r13,rsi
  424355:	mov    rsi,QWORD PTR [r13+0x0]
  424359:	lea    eax,[rdx+0x1]
  42435c:	test   rsi,rsi
  42435f:	jne    424350 <__flatcc_fb_clear_parser@@Base+0x1ae0>
  424361:	test   rbx,rbx
  424364:	je     424fa8 <__flatcc_fb_clear_parser@@Base+0x2738>
  42436a:	lea    rcx,[rbp+0x320]
  424371:	mov    QWORD PTR [rsp+0x40],rcx
  424376:	cmp    eax,0x1
  424379:	jne    424fa8 <__flatcc_fb_clear_parser@@Base+0x2738>
  42437f:	nop
  424380:	mov    rax,QWORD PTR [r13+0x8]
  424384:	lea    rdi,[rbx+0x8]
  424388:	mov    rdx,QWORD PTR [rax+0x8]
  42438c:	mov    rsi,QWORD PTR [rax]
  42438f:	call   41c010 <fb_symbol_table_find@@Base>
  424394:	mov    r15,rax
  424397:	test   rax,rax
  42439a:	je     424960 <__flatcc_fb_clear_parser@@Base+0x20f0>
  4243a0:	cmp    WORD PTR [rax+0x10],0x4
  4243a5:	ja     424960 <__flatcc_fb_clear_parser@@Base+0x20f0>
  4243ab:	mov    rsi,QWORD PTR [rax+0x20]
  4243af:	mov    rdi,QWORD PTR [rsp+0x40]
  4243b4:	call   41b8b0 <ptr_set_find_item@@Base>
  4243b9:	test   rax,rax
  4243bc:	je     424960 <__flatcc_fb_clear_parser@@Base+0x20f0>
  4243c2:	movzx  eax,WORD PTR [r15+0x10]
  4243c7:	cmp    ax,0x4
  4243cb:	ja     424f68 <__flatcc_fb_clear_parser@@Base+0x26f8>
  4243d1:	mov    edx,0x1
  4243d6:	shlx   rdx,rdx,rax
  4243db:	and    edx,0x1b
  4243de:	je     424f68 <__flatcc_fb_clear_parser@@Base+0x26f8>
  4243e4:	cmp    WORD PTR [r12+0x58],0x0
  4243eb:	jne    4251e0 <__flatcc_fb_clear_parser@@Base+0x2970>
  4243f1:	mov    edx,0xf
  4243f6:	mov    WORD PTR [r12+0x28],dx
  4243fc:	mov    rdx,QWORD PTR [r15+0xb8]
  424403:	mov    QWORD PTR [r12+0x18],r15
  424408:	mov    QWORD PTR [r12+0x80],rdx
  424410:	movzx  edx,WORD PTR [r15+0xb0]
  424418:	xor    r14d,r14d
  42441b:	mov    WORD PTR [r12+0x72],dx
  424421:	cmp    ax,0x4
  424425:	jne    424474 <__flatcc_fb_clear_parser@@Base+0x1c04>
  424427:	mov    r14d,DWORD PTR [rsp+0x1c]
  42442c:	test   r14d,r14d
  42442f:	jne    42572b <__flatcc_fb_clear_parser@@Base+0x2ebb>
  424435:	mov    r13d,DWORD PTR [rsp+0x48]
  42443a:	test   r13d,r13d
  42443d:	jne    42444c <__flatcc_fb_clear_parser@@Base+0x1bdc>
  42443f:	movzx  eax,WORD PTR [rsp+0x28]
  424444:	mov    QWORD PTR [r12+0x88],rax
  42444c:	inc    QWORD PTR [rsp+0x28]
  424451:	xor    r14d,r14d
  424454:	jmp    42447e <__flatcc_fb_clear_parser@@Base+0x1c0e>
  424456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424460:	cmp    WORD PTR [r12+0x58],0x0
  424467:	jne    4255b0 <__flatcc_fb_clear_parser@@Base+0x2d40>
  42446d:	mov    r14d,DWORD PTR [rbp+0x110]
  424474:	mov    r11d,DWORD PTR [rsp+0x1c]
  424479:	test   r11d,r11d
  42447c:	jne    4244f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  42447e:	test   BYTE PTR [rsp+0x48],0x1
  424483:	jne    424490 <__flatcc_fb_clear_parser@@Base+0x1c20>
  424485:	cmp    BYTE PTR [rsp+0x10],0x0
  42448a:	jne    424df0 <__flatcc_fb_clear_parser@@Base+0x2580>
  424490:	cmp    QWORD PTR [rsp+0x20],0x0
  424496:	jne    4244a3 <__flatcc_fb_clear_parser@@Base+0x1c33>
  424498:	test   BYTE PTR [rsp+0x48],0x1
  42449d:	jne    424e20 <__flatcc_fb_clear_parser@@Base+0x25b0>
  4244a3:	mov    rax,QWORD PTR [rsp+0x20]
  4244a8:	test   rax,rax
  4244ab:	je     4247aa <__flatcc_fb_clear_parser@@Base+0x1f3a>
  4244b1:	movzx  eax,WORD PTR [rax+0x20]
  4244b5:	cmp    ax,0x5
  4244b9:	je     424778 <__flatcc_fb_clear_parser@@Base+0x1f08>
  4244bf:	mov    rcx,QWORD PTR [rsp+0x20]
  4244c4:	xor    r9d,r9d
  4244c7:	mov    rsi,QWORD PTR [rcx+0x8]
  4244cb:	xor    r8d,r8d
  4244ce:	xor    ecx,ecx
  4244d0:	cmp    ax,0x4
  4244d4:	je     425310 <__flatcc_fb_clear_parser@@Base+0x2aa0>
  4244da:	lea    rdx,[rip+0x2550d]        # 4499ee <fb_schema_table_missing@@Base+0x252e>
  4244e1:	mov    rdi,rbp
  4244e4:	call   41e370 <__flatcc_error_report@@Base>
  4244e9:	mov    DWORD PTR [rsp+0x1c],0x1
  4244f1:	nop    DWORD PTR [rax+0x0]
  4244f8:	test   BYTE PTR [r12+0x70],0x80
  4244fe:	je     424220 <__flatcc_fb_clear_parser@@Base+0x19b0>
  424504:	inc    DWORD PTR [rsp+0x4c]
  424508:	test   r14d,r14d
  42450b:	jne    424220 <__flatcc_fb_clear_parser@@Base+0x19b0>
  424511:	mov    rsi,QWORD PTR [r12+0x8]
  424516:	xor    r9d,r9d
  424519:	xor    r8d,r8d
  42451c:	xor    ecx,ecx
  42451e:	lea    rdx,[rip+0x24e43]        # 449368 <fb_schema_table_missing@@Base+0x1ea8>
  424525:	mov    rdi,rbp
  424528:	call   41e370 <__flatcc_error_report@@Base>
  42452d:	mov    r12,QWORD PTR [r12]
  424531:	test   r12,r12
  424534:	jne    423cf0 <__flatcc_fb_clear_parser@@Base+0x1480>
  42453a:	jmp    42422d <__flatcc_fb_clear_parser@@Base+0x19bd>
  42453f:	nop
  424540:	xor    r14d,r14d
  424543:	cmp    WORD PTR [r12+0x58],0x0
  42454a:	je     424474 <__flatcc_fb_clear_parser@@Base+0x1c04>
  424550:	mov    rsi,QWORD PTR [r12+0x8]
  424555:	xor    r9d,r9d
  424558:	xor    r8d,r8d
  42455b:	xor    ecx,ecx
  42455d:	lea    rdx,[rip+0x24a84]        # 448fe8 <fb_schema_table_missing@@Base+0x1b28>
  424564:	mov    rdi,rbp
  424567:	call   41e370 <__flatcc_error_report@@Base>
  42456c:	mov    eax,0x1
  424571:	mov    WORD PTR [r12+0x28],ax
  424577:	mov    r12,QWORD PTR [r12]
  42457b:	test   r12,r12
  42457e:	jne    423cf0 <__flatcc_fb_clear_parser@@Base+0x1480>
  424584:	jmp    42422d <__flatcc_fb_clear_parser@@Base+0x19bd>
  424589:	nop    DWORD PTR [rax+0x0]
  424590:	movzx  eax,WORD PTR [r12+0x58]
  424596:	cmp    ax,0xd
  42459a:	je     4253f0 <__flatcc_fb_clear_parser@@Base+0x2b80>
  4245a0:	test   ax,ax
  4245a3:	jne    4245b9 <__flatcc_fb_clear_parser@@Base+0x1d49>
  4245a5:	mov    ecx,0x5
  4245aa:	mov    WORD PTR [r12+0x58],cx
  4245b0:	mov    QWORD PTR [r12+0x48],0x0
  4245b9:	mov    edx,DWORD PTR [r12+0x18]
  4245be:	lea    rcx,[r12+0x48]
  4245c3:	mov    rsi,r12
  4245c6:	mov    rdi,rbp
  4245c9:	call   427830 <__flatcc_fb_coerce_scalar_type@@Base>
  4245ce:	test   eax,eax
  4245d0:	jne    424754 <__flatcc_fb_clear_parser@@Base+0x1ee4>
  4245d6:	mov    edx,DWORD PTR [r12+0x18]
  4245db:	lea    rax,[rip+0x2567e]        # 449c60 <fb_schema_table_missing@@Base+0x27a0>
  4245e2:	movsxd rax,DWORD PTR [rax+rdx*4]
  4245e6:	mov    r14d,0x1
  4245ec:	mov    QWORD PTR [r12+0x80],rax
  4245f4:	mov    WORD PTR [r12+0x72],ax
  4245fa:	jmp    424474 <__flatcc_fb_clear_parser@@Base+0x1c04>
  4245ff:	nop
  424600:	mov    edx,DWORD PTR [r12+0x18]
  424605:	lea    rax,[rip+0x25654]        # 449c60 <fb_schema_table_missing@@Base+0x27a0>
  42460c:	movsxd rax,DWORD PTR [rax+rdx*4]
  424610:	xor    r14d,r14d
  424613:	cmp    WORD PTR [r12+0x58],0x0
  42461a:	mov    QWORD PTR [r12+0x80],rax
  424622:	mov    WORD PTR [r12+0x72],ax
  424628:	je     424474 <__flatcc_fb_clear_parser@@Base+0x1c04>
  42462e:	mov    rsi,QWORD PTR [r12+0x8]
  424633:	lea    rdx,[rip+0x24956]        # 448f90 <fb_schema_table_missing@@Base+0x1ad0>
  42463a:	xor    r9d,r9d
  42463d:	xor    r8d,r8d
  424640:	xor    ecx,ecx
  424642:	mov    rdi,rbp
  424645:	call   41e370 <__flatcc_error_report@@Base>
  42464a:	mov    edx,0x1
  42464f:	mov    WORD PTR [r12+0x28],dx
  424655:	mov    r12,QWORD PTR [r12]
  424659:	test   r12,r12
  42465c:	jne    423cf0 <__flatcc_fb_clear_parser@@Base+0x1480>
  424662:	jmp    42422d <__flatcc_fb_clear_parser@@Base+0x19bd>
  424667:	nop    WORD PTR [rax+rax*1+0x0]
  424670:	mov    rax,QWORD PTR [rsp+0x38]
  424675:	mov    r8,QWORD PTR [r12+0x18]
  42467a:	mov    rbx,QWORD PTR [rax+0x18]
  42467e:	test   r8,r8
  424681:	je     424ab5 <__flatcc_fb_clear_parser@@Base+0x2245>
  424687:	mov    r13,r8
  42468a:	xor    edx,edx
  42468c:	jmp    424695 <__flatcc_fb_clear_parser@@Base+0x1e25>
  42468e:	xchg   ax,ax
  424690:	mov    edx,eax
  424692:	mov    r13,rcx
  424695:	mov    rcx,QWORD PTR [r13+0x0]
  424699:	lea    eax,[rdx+0x1]
  42469c:	test   rcx,rcx
  42469f:	jne    424690 <__flatcc_fb_clear_parser@@Base+0x1e20>
  4246a1:	mov    QWORD PTR [rsp+0x60],rcx
  4246a6:	test   rbx,rbx
  4246a9:	je     425030 <__flatcc_fb_clear_parser@@Base+0x27c0>
  4246af:	lea    rcx,[rbp+0x320]
  4246b6:	mov    QWORD PTR [rsp+0x40],rcx
  4246bb:	cmp    eax,0x1
  4246be:	jne    425030 <__flatcc_fb_clear_parser@@Base+0x27c0>
  4246c4:	nop    DWORD PTR [rax+0x0]
  4246c8:	mov    rax,QWORD PTR [r13+0x8]
  4246cc:	lea    rdi,[rbx+0x8]
  4246d0:	mov    rdx,QWORD PTR [rax+0x8]
  4246d4:	mov    rsi,QWORD PTR [rax]
  4246d7:	call   41c010 <fb_symbol_table_find@@Base>
  4246dc:	mov    r15,rax
  4246df:	test   rax,rax
  4246e2:	je     424a20 <__flatcc_fb_clear_parser@@Base+0x21b0>
  4246e8:	cmp    WORD PTR [rax+0x10],0x4
  4246ed:	ja     424a20 <__flatcc_fb_clear_parser@@Base+0x21b0>
  4246f3:	mov    rdi,QWORD PTR [rsp+0x40]
  4246f8:	mov    rsi,QWORD PTR [rax+0x20]
  4246fc:	mov    r14,rdi
  4246ff:	call   41b8b0 <ptr_set_find_item@@Base>
  424704:	test   rax,rax
  424707:	je     424a20 <__flatcc_fb_clear_parser@@Base+0x21b0>
  42470d:	mov    QWORD PTR [rsp+0x40],r14
  424712:	cmp    WORD PTR [r15+0x10],0x4
  424718:	ja     4253b0 <__flatcc_fb_clear_parser@@Base+0x2b40>
  42471e:	movzx  eax,WORD PTR [r15+0x10]
  424723:	lea    rdx,[rip+0x2540e]        # 449b38 <fb_schema_table_missing@@Base+0x2678>
  42472a:	movsxd rax,DWORD PTR [rdx+rax*4]
  42472e:	add    rax,rdx
  424731:	notrack jmp rax
  424734:	nop    DWORD PTR [rax+0x0]
  424738:	mov    rsi,QWORD PTR [r12+0x8]
  42473d:	xor    r9d,r9d
  424740:	xor    r8d,r8d
  424743:	xor    ecx,ecx
  424745:	lea    rdx,[rip+0x24aec]        # 449238 <fb_schema_table_missing@@Base+0x1d78>
  42474c:	mov    rdi,rbp
  42474f:	call   41e370 <__flatcc_error_report@@Base>
  424754:	mov    ebx,0x1
  424759:	mov    WORD PTR [r12+0x28],bx
  42475f:	mov    r12,QWORD PTR [r12]
  424763:	test   r12,r12
  424766:	jne    423cf0 <__flatcc_fb_clear_parser@@Base+0x1480>
  42476c:	jmp    42422d <__flatcc_fb_clear_parser@@Base+0x19bd>
  424771:	nop    DWORD PTR [rax+0x0]
  424778:	mov    rax,QWORD PTR [rsp+0x20]
  42477d:	mov    rax,QWORD PTR [rax+0x10]
  424781:	cmp    rax,QWORD PTR [rbp+0x148]
  424788:	jae    425748 <__flatcc_fb_clear_parser@@Base+0x2ed8>
  42478e:	mov    rcx,QWORD PTR [rsp+0x58]
  424793:	movzx  eax,ax
  424796:	cmp    rcx,rax
  424799:	mov    QWORD PTR [r12+0x88],rax
  4247a1:	cmovae rax,rcx
  4247a5:	mov    QWORD PTR [rsp+0x58],rax
  4247aa:	mov    r10d,DWORD PTR [rsp+0x48]
  4247af:	test   r10d,r10d
  4247b2:	je     425ab6 <__flatcc_fb_clear_parser@@Base+0x3246>
  4247b8:	mov    rdx,QWORD PTR [rsp+0x50]
  4247bd:	add    rdx,QWORD PTR [r12+0x88]
  4247c5:	movzx  eax,BYTE PTR [rdx]
  4247c8:	cmp    al,0x2
  4247ca:	je     425158 <__flatcc_fb_clear_parser@@Base+0x28e8>
  4247d0:	test   al,al
  4247d2:	jne    425130 <__flatcc_fb_clear_parser@@Base+0x28c0>
  4247d8:	mov    BYTE PTR [rdx],0x1
  4247db:	mov    DWORD PTR [rsp+0x1c],0x0
  4247e3:	test   r15,r15
  4247e6:	je     4244f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  4247ec:	cmp    WORD PTR [r15+0x10],0x4
  4247f2:	jne    4244f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  4247f8:	mov    rax,QWORD PTR [r12+0x88]
  424800:	movzx  edx,WORD PTR [r12+0x28]
  424806:	cmp    rax,0x1
  42480a:	jbe    42532c <__flatcc_fb_clear_parser@@Base+0x2abc>
  424810:	mov    rcx,QWORD PTR [rsp+0x50]
  424815:	lea    rcx,[rcx+rax*1-0x1]
  42481a:	movzx  eax,BYTE PTR [rcx]
  42481d:	cmp    al,0x2
  42481f:	je     425771 <__flatcc_fb_clear_parser@@Base+0x2f01>
  424825:	test   al,al
  424827:	je     425740 <__flatcc_fb_clear_parser@@Base+0x2ed0>
  42482d:	cmp    dx,0xb
  424831:	lea    rax,[rip+0x24470]        # 448ca8 <fb_schema_table_missing@@Base+0x17e8>
  424838:	lea    rdx,[rip+0x244c1]        # 448d00 <fb_schema_table_missing@@Base+0x1840>
  42483f:	cmove  rdx,rax
  424843:	jmp    425342 <__flatcc_fb_clear_parser@@Base+0x2ad2>
  424848:	nop    DWORD PTR [rax+rax*1+0x0]
  424850:	mov    rax,QWORD PTR [rbx]
  424853:	test   rax,rax
  424856:	je     4248c0 <__flatcc_fb_clear_parser@@Base+0x2050>
  424858:	xor    r13d,r13d
  42485b:	jmp    424863 <__flatcc_fb_clear_parser@@Base+0x1ff3>
  42485d:	nop    DWORD PTR [rax]
  424860:	mov    r13d,edx
  424863:	mov    rax,QWORD PTR [rax]
  424866:	lea    edx,[r13+0x1]
  42486a:	test   rax,rax
  42486d:	jne    424860 <__flatcc_fb_clear_parser@@Base+0x1ff0>
  42486f:	neg    r13d
  424872:	mov    rdi,QWORD PTR [rbp+0x260]
  424879:	jmp    42489f <__flatcc_fb_clear_parser@@Base+0x202f>
  42487b:	nop    DWORD PTR [rax+rax*1+0x0]
  424880:	test   rdi,rdi
  424883:	je     42489c <__flatcc_fb_clear_parser@@Base+0x202c>
  424885:	mov    rsi,QWORD PTR [rbx]
  424888:	movsxd rdx,r13d
  42488b:	call   41d090 <fb_scope_table_find@@Base>
  424890:	test   rax,rax
  424893:	jne    424900 <__flatcc_fb_clear_parser@@Base+0x2090>
  424895:	mov    rdi,QWORD PTR [rbp+0x260]
  42489c:	inc    r13d
  42489f:	test   r13d,r13d
  4248a2:	jne    424880 <__flatcc_fb_clear_parser@@Base+0x2010>
  4248a4:	test   rdi,rdi
  4248a7:	je     4248c0 <__flatcc_fb_clear_parser@@Base+0x2050>
  4248a9:	xor    edx,edx
  4248ab:	xor    esi,esi
  4248ad:	call   41d090 <fb_scope_table_find@@Base>
  4248b2:	mov    rbx,rax
  4248b5:	test   rax,rax
  4248b8:	jne    423f10 <__flatcc_fb_clear_parser@@Base+0x16a0>
  4248be:	xchg   ax,ax
  4248c0:	mov    rax,QWORD PTR [rsp+0x10]
  4248c5:	mov    r9d,DWORD PTR [rax+0x18]
  4248c9:	mov    rsi,QWORD PTR [rax+0x10]
  4248cd:	mov    rax,QWORD PTR [rsp+0x10]
  4248d2:	mov    r8,rsi
  4248d5:	mov    rax,QWORD PTR [rax+0x8]
  4248d9:	xor    ecx,ecx
  4248db:	lea    rdx,[rip+0x250cf]        # 4499b1 <fb_schema_table_missing@@Base+0x24f1>
  4248e2:	mov    rsi,rax
  4248e5:	mov    rdi,rbp
  4248e8:	call   41e370 <__flatcc_error_report@@Base>
  4248ed:	movzx  r13d,WORD PTR [r12+0x70]
  4248f3:	jmp    423f81 <__flatcc_fb_clear_parser@@Base+0x1711>
  4248f8:	nop    DWORD PTR [rax+rax*1+0x0]
  424900:	mov    rbx,rax
  424903:	jmp    423f10 <__flatcc_fb_clear_parser@@Base+0x16a0>
  424908:	nop    DWORD PTR [rax+rax*1+0x0]
  424910:	mov    rsi,QWORD PTR [r14+0x8]
  424914:	xor    r9d,r9d
  424917:	xor    r8d,r8d
  42491a:	xor    ecx,ecx
  42491c:	lea    rdx,[rip+0x23dcd]        # 4486f0 <fb_schema_table_missing@@Base+0x1230>
  424923:	mov    rdi,rbp
  424926:	call   41e370 <__flatcc_error_report@@Base>
  42492b:	jmp    423d88 <__flatcc_fb_clear_parser@@Base+0x1518>
  424930:	mov    rsi,QWORD PTR [r12+0x8]
  424935:	mov    rcx,QWORD PTR [rax+0x8]
  424939:	xor    r9d,r9d
  42493c:	xor    r8d,r8d
  42493f:	lea    rdx,[rip+0x2440a]        # 448d50 <fb_schema_table_missing@@Base+0x1890>
  424946:	mov    rdi,rbp
  424949:	call   41e370 <__flatcc_error_report@@Base>
  42494e:	mov    r12,QWORD PTR [r12]
  424952:	test   r12,r12
  424955:	jne    423cf0 <__flatcc_fb_clear_parser@@Base+0x1480>
  42495b:	jmp    42422d <__flatcc_fb_clear_parser@@Base+0x19bd>
  424960:	mov    rax,QWORD PTR [rbx]
  424963:	test   rax,rax
  424966:	je     4249f0 <__flatcc_fb_clear_parser@@Base+0x2180>
  42496c:	xor    r14d,r14d
  42496f:	jmp    42497b <__flatcc_fb_clear_parser@@Base+0x210b>
  424971:	nop    DWORD PTR [rax+0x0]
  424978:	mov    r14d,edx
  42497b:	mov    rax,QWORD PTR [rax]
  42497e:	lea    edx,[r14+0x1]
  424982:	test   rax,rax
  424985:	jne    424978 <__flatcc_fb_clear_parser@@Base+0x2108>
  424987:	lea    r15,[rbp+0x1f8]
  42498e:	neg    r14d
  424991:	jmp    4249c0 <__flatcc_fb_clear_parser@@Base+0x2150>
  424993:	nop    DWORD PTR [rax+rax*1+0x0]
  424998:	test   r15,r15
  42499b:	je     4249bd <__flatcc_fb_clear_parser@@Base+0x214d>
  42499d:	mov    rdi,QWORD PTR [rbp+0x260]
  4249a4:	test   rdi,rdi
  4249a7:	je     4249bd <__flatcc_fb_clear_parser@@Base+0x214d>
  4249a9:	mov    rsi,QWORD PTR [rbx]
  4249ac:	movsxd rdx,r14d
  4249af:	call   41d090 <fb_scope_table_find@@Base>
  4249b4:	test   rax,rax
  4249b7:	jne    424bd0 <__flatcc_fb_clear_parser@@Base+0x2360>
  4249bd:	inc    r14d
  4249c0:	test   r14d,r14d
  4249c3:	jne    424998 <__flatcc_fb_clear_parser@@Base+0x2128>
  4249c5:	test   r15,r15
  4249c8:	je     4249f0 <__flatcc_fb_clear_parser@@Base+0x2180>
  4249ca:	mov    rdi,QWORD PTR [rbp+0x260]
  4249d1:	test   rdi,rdi
  4249d4:	je     4249f0 <__flatcc_fb_clear_parser@@Base+0x2180>
  4249d6:	xor    edx,edx
  4249d8:	xor    esi,esi
  4249da:	call   41d090 <fb_scope_table_find@@Base>
  4249df:	mov    rbx,rax
  4249e2:	test   rax,rax
  4249e5:	jne    424380 <__flatcc_fb_clear_parser@@Base+0x1b10>
  4249eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4249f0:	mov    r8,QWORD PTR [r12+0x18]
  4249f5:	mov    rdi,rbp
  4249f8:	mov    rcx,r12
  4249fb:	lea    rdx,[rip+0x247ae]        # 4491b0 <fb_schema_table_missing@@Base+0x1cf0>
  424a02:	mov    rsi,r8
  424a05:	call   41f7a0 <error_ref_sym@@Base>
  424a0a:	mov    edi,0x1
  424a0f:	mov    WORD PTR [r12+0x28],di
  424a15:	jmp    424220 <__flatcc_fb_clear_parser@@Base+0x19b0>
  424a1a:	nop    WORD PTR [rax+rax*1+0x0]
  424a20:	mov    rax,QWORD PTR [rbx]
  424a23:	test   rax,rax
  424a26:	je     424ab0 <__flatcc_fb_clear_parser@@Base+0x2240>
  424a2c:	xor    r14d,r14d
  424a2f:	jmp    424a3b <__flatcc_fb_clear_parser@@Base+0x21cb>
  424a31:	nop    DWORD PTR [rax+0x0]
  424a38:	mov    r14d,edx
  424a3b:	mov    rax,QWORD PTR [rax]
  424a3e:	lea    edx,[r14+0x1]
  424a42:	test   rax,rax
  424a45:	jne    424a38 <__flatcc_fb_clear_parser@@Base+0x21c8>
  424a47:	lea    r15,[rbp+0x1f8]
  424a4e:	neg    r14d
  424a51:	jmp    424a80 <__flatcc_fb_clear_parser@@Base+0x2210>
  424a53:	nop    DWORD PTR [rax+rax*1+0x0]
  424a58:	test   r15,r15
  424a5b:	je     424a7d <__flatcc_fb_clear_parser@@Base+0x220d>
  424a5d:	mov    rdi,QWORD PTR [rbp+0x260]
  424a64:	test   rdi,rdi
  424a67:	je     424a7d <__flatcc_fb_clear_parser@@Base+0x220d>
  424a69:	mov    rsi,QWORD PTR [rbx]
  424a6c:	movsxd rdx,r14d
  424a6f:	call   41d090 <fb_scope_table_find@@Base>
  424a74:	test   rax,rax
  424a77:	jne    424bc8 <__flatcc_fb_clear_parser@@Base+0x2358>
  424a7d:	inc    r14d
  424a80:	test   r14d,r14d
  424a83:	jne    424a58 <__flatcc_fb_clear_parser@@Base+0x21e8>
  424a85:	test   r15,r15
  424a88:	je     424ab0 <__flatcc_fb_clear_parser@@Base+0x2240>
  424a8a:	mov    rdi,QWORD PTR [rbp+0x260]
  424a91:	test   rdi,rdi
  424a94:	je     424ab0 <__flatcc_fb_clear_parser@@Base+0x2240>
  424a96:	xor    edx,edx
  424a98:	xor    esi,esi
  424a9a:	call   41d090 <fb_scope_table_find@@Base>
  424a9f:	mov    rbx,rax
  424aa2:	test   rax,rax
  424aa5:	jne    4246c8 <__flatcc_fb_clear_parser@@Base+0x1e58>
  424aab:	nop    DWORD PTR [rax+rax*1+0x0]
  424ab0:	mov    r8,QWORD PTR [r12+0x18]
  424ab5:	mov    rcx,r12
  424ab8:	lea    rdx,[rip+0x24559]        # 449018 <fb_schema_table_missing@@Base+0x1b58>
  424abf:	mov    rsi,r8
  424ac2:	mov    rdi,rbp
  424ac5:	call   41f7a0 <error_ref_sym@@Base>
  424aca:	mov    eax,0x1
  424acf:	mov    WORD PTR [r12+0x28],ax
  424ad5:	mov    DWORD PTR [rsp+0x1c],0x1
  424add:	jmp    424220 <__flatcc_fb_clear_parser@@Base+0x19b0>
  424ae2:	nop    WORD PTR [rax+rax*1+0x0]
  424ae8:	cmp    WORD PTR [r14+0x20],0x5
  424aee:	je     423d88 <__flatcc_fb_clear_parser@@Base+0x1518>
  424af4:	mov    rsi,QWORD PTR [r14+0x8]
  424af8:	xor    r9d,r9d
  424afb:	xor    r8d,r8d
  424afe:	xor    ecx,ecx
  424b00:	lea    rdx,[rip+0x23cb1]        # 4487b8 <fb_schema_table_missing@@Base+0x12f8>
  424b07:	mov    rdi,rbp
  424b0a:	call   41e370 <__flatcc_error_report@@Base>
  424b0f:	jmp    423d88 <__flatcc_fb_clear_parser@@Base+0x1518>
  424b14:	nop    DWORD PTR [rax+0x0]
  424b18:	mov    edi,DWORD PTR [rsp+0x1c]
  424b1c:	test   edi,edi
  424b1e:	jne    424092 <__flatcc_fb_clear_parser@@Base+0x1822>
  424b24:	mov    rax,QWORD PTR [rsp+0x28]
  424b29:	cmp    QWORD PTR [rbp+0x148],rax
  424b30:	jbe    424cf0 <__flatcc_fb_clear_parser@@Base+0x2480>
  424b36:	mov    ecx,DWORD PTR [rsp+0x48]
  424b3a:	test   ecx,ecx
  424b3c:	jne    42408d <__flatcc_fb_clear_parser@@Base+0x181d>
  424b42:	movzx  eax,WORD PTR [rsp+0x28]
  424b47:	mov    DWORD PTR [rsp+0x1c],ecx
  424b4b:	mov    QWORD PTR [r12+0x88],rax
  424b53:	jmp    42408d <__flatcc_fb_clear_parser@@Base+0x181d>
  424b58:	nop    DWORD PTR [rax+rax*1+0x0]
  424b60:	cmp    eax,0x6
  424b63:	jne    423d88 <__flatcc_fb_clear_parser@@Base+0x1518>
  424b69:	cmp    WORD PTR [r14+0x20],0x6
  424b6f:	je     423d88 <__flatcc_fb_clear_parser@@Base+0x1518>
  424b75:	mov    rsi,QWORD PTR [r14+0x8]
  424b79:	xor    r9d,r9d
  424b7c:	xor    r8d,r8d
  424b7f:	xor    ecx,ecx
  424b81:	lea    rdx,[rip+0x23c88]        # 448810 <fb_schema_table_missing@@Base+0x1350>
  424b88:	mov    rdi,rbp
  424b8b:	call   41e370 <__flatcc_error_report@@Base>
  424b90:	jmp    423d88 <__flatcc_fb_clear_parser@@Base+0x1518>
  424b95:	nop    DWORD PTR [rax]
  424b98:	mov    rax,QWORD PTR [r12+0x18]
  424b9d:	xor    edx,edx
  424b9f:	mov    rax,QWORD PTR [rax+0x20]
  424ba3:	add    rax,0x3e7
  424ba9:	cmp    rax,0x1b
  424bad:	ja     424bb9 <__flatcc_fb_clear_parser@@Base+0x2349>
  424baf:	lea    rdx,[rip+0x24faa]        # 449b60 <fb_schema_table_missing@@Base+0x26a0>
  424bb6:	mov    edx,DWORD PTR [rdx+rax*4]
  424bb9:	mov    DWORD PTR [r12+0x18],edx
  424bbe:	jmp    423d38 <__flatcc_fb_clear_parser@@Base+0x14c8>
  424bc3:	nop    DWORD PTR [rax+rax*1+0x0]
  424bc8:	mov    rbx,rax
  424bcb:	jmp    4246c8 <__flatcc_fb_clear_parser@@Base+0x1e58>
  424bd0:	mov    rbx,rax
  424bd3:	jmp    424380 <__flatcc_fb_clear_parser@@Base+0x1b10>
  424bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  424be0:	mov    rdi,QWORD PTR [rbp+0x260]
  424be7:	test   rdi,rdi
  424bea:	je     4248cd <__flatcc_fb_clear_parser@@Base+0x205d>
  424bf0:	test   eax,eax
  424bf2:	mov    edx,0x0
  424bf7:	cmove  rsi,rdx
  424bfb:	movsxd rdx,eax
  424bfe:	call   41d090 <fb_scope_table_find@@Base>
  424c03:	test   rax,rax
  424c06:	je     4248c0 <__flatcc_fb_clear_parser@@Base+0x2050>
  424c0c:	movsxd rdx,r13d
  424c0f:	lea    rdi,[rax+0x8]
  424c13:	mov    rsi,r14
  424c16:	call   41c010 <fb_symbol_table_find@@Base>
  424c1b:	mov    r13,rax
  424c1e:	test   rax,rax
  424c21:	jne    423f4f <__flatcc_fb_clear_parser@@Base+0x16df>
  424c27:	jmp    4248c0 <__flatcc_fb_clear_parser@@Base+0x2050>
  424c2c:	nop    DWORD PTR [rax+0x0]
  424c30:	mov    rsi,QWORD PTR [r14+0x8]
  424c34:	xor    r9d,r9d
  424c37:	xor    r8d,r8d
  424c3a:	xor    ecx,ecx
  424c3c:	lea    rdx,[rip+0x23b25]        # 448768 <fb_schema_table_missing@@Base+0x12a8>
  424c43:	mov    rdi,rbp
  424c46:	call   41e370 <__flatcc_error_report@@Base>
  424c4b:	jmp    423d88 <__flatcc_fb_clear_parser@@Base+0x1518>
  424c50:	mov    r13d,r9d
  424c53:	sub    r13d,eax
  424c56:	mov    eax,edi
  424c58:	lea    r14,[rsi+rcx*1+0x1]
  424c5d:	jmp    423ee9 <__flatcc_fb_clear_parser@@Base+0x1679>
  424c62:	nop    WORD PTR [rax+rax*1+0x0]
  424c68:	cmp    DWORD PTR [r12+0x18],0x4
  424c6e:	jne    423fea <__flatcc_fb_clear_parser@@Base+0x177a>
  424c74:	jmp    424006 <__flatcc_fb_clear_parser@@Base+0x1796>
  424c79:	nop    DWORD PTR [rax+0x0]
  424c80:	mov    rsi,QWORD PTR [r12+0x8]
  424c85:	xor    r9d,r9d
  424c88:	xor    r8d,r8d
  424c8b:	xor    ecx,ecx
  424c8d:	lea    rdx,[rip+0x2426c]        # 448f00 <fb_schema_table_missing@@Base+0x1a40>
  424c94:	mov    rdi,rbp
  424c97:	call   41e370 <__flatcc_error_report@@Base>
  424c9c:	jmp    42401e <__flatcc_fb_clear_parser@@Base+0x17ae>
  424ca1:	nop    DWORD PTR [rax+0x0]
  424ca8:	mov    rsi,QWORD PTR [r13+0x8]
  424cac:	xor    r9d,r9d
  424caf:	xor    r8d,r8d
  424cb2:	xor    ecx,ecx
  424cb4:	lea    rdx,[rip+0x23a55]        # 448710 <fb_schema_table_missing@@Base+0x1250>
  424cbb:	mov    rdi,r15
  424cbe:	call   41e370 <__flatcc_error_report@@Base>
  424cc3:	jmp    423be8 <__flatcc_fb_clear_parser@@Base+0x1378>
  424cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  424cd0:	mov    eax,DWORD PTR [rsp+0x1c]
  424cd4:	mov    QWORD PTR [rsp+0x28],0x0
  424cdd:	mov    DWORD PTR [rsp+0x48],eax
  424ce1:	jmp    424092 <__flatcc_fb_clear_parser@@Base+0x1822>
  424ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424cf0:	mov    rsi,QWORD PTR [r12+0x8]
  424cf5:	xor    r9d,r9d
  424cf8:	xor    r8d,r8d
  424cfb:	xor    ecx,ecx
  424cfd:	lea    rdx,[rip+0x24234]        # 448f38 <fb_schema_table_missing@@Base+0x1a78>
  424d04:	mov    rdi,rbp
  424d07:	call   41e370 <__flatcc_error_report@@Base>
  424d0c:	mov    DWORD PTR [rsp+0x1c],0x1
  424d14:	jmp    42408d <__flatcc_fb_clear_parser@@Base+0x181d>
  424d19:	nop    DWORD PTR [rax+0x0]
  424d20:	mov    rsi,QWORD PTR [r13+0x8]
  424d24:	xor    r9d,r9d
  424d27:	xor    r8d,r8d
  424d2a:	xor    ecx,ecx
  424d2c:	lea    rdx,[rip+0x239bd]        # 4486f0 <fb_schema_table_missing@@Base+0x1230>
  424d33:	mov    rdi,r15
  424d36:	call   41e370 <__flatcc_error_report@@Base>
  424d3b:	jmp    423be8 <__flatcc_fb_clear_parser@@Base+0x1378>
  424d40:	cmp    WORD PTR [r13+0x20],0x5
  424d46:	je     423be8 <__flatcc_fb_clear_parser@@Base+0x1378>
  424d4c:	mov    rsi,QWORD PTR [r13+0x8]
  424d50:	xor    r9d,r9d
  424d53:	xor    r8d,r8d
  424d56:	xor    ecx,ecx
  424d58:	lea    rdx,[rip+0x23a59]        # 4487b8 <fb_schema_table_missing@@Base+0x12f8>
  424d5f:	mov    rdi,r15
  424d62:	call   41e370 <__flatcc_error_report@@Base>
  424d67:	jmp    423be8 <__flatcc_fb_clear_parser@@Base+0x1378>
  424d6c:	nop    DWORD PTR [rax+0x0]
  424d70:	cmp    eax,0x6
  424d73:	jne    423be8 <__flatcc_fb_clear_parser@@Base+0x1378>
  424d79:	cmp    WORD PTR [r13+0x20],0x6
  424d7f:	je     423be8 <__flatcc_fb_clear_parser@@Base+0x1378>
  424d85:	mov    rsi,QWORD PTR [r13+0x8]
  424d89:	xor    r9d,r9d
  424d8c:	xor    r8d,r8d
  424d8f:	xor    ecx,ecx
  424d91:	lea    rdx,[rip+0x23a78]        # 448810 <fb_schema_table_missing@@Base+0x1350>
  424d98:	mov    rdi,r15
  424d9b:	call   41e370 <__flatcc_error_report@@Base>
  424da0:	jmp    423be8 <__flatcc_fb_clear_parser@@Base+0x1378>
  424da5:	nop    DWORD PTR [rax]
  424da8:	xor    r10d,r10d
  424dab:	mov    WORD PTR [r12+0x70],r10w
  424db1:	jmp    423fd5 <__flatcc_fb_clear_parser@@Base+0x1765>
  424db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424dc0:	mov    rsi,QWORD PTR [r12+0x8]
  424dc5:	xor    r9d,r9d
  424dc8:	xor    r8d,r8d
  424dcb:	xor    ecx,ecx
  424dcd:	lea    rdx,[rip+0x24074]        # 448e48 <fb_schema_table_missing@@Base+0x1988>
  424dd4:	mov    rdi,rbp
  424dd7:	call   41e370 <__flatcc_error_report@@Base>
  424ddc:	movzx  r13d,WORD PTR [r12+0x70]
  424de2:	jmp    423f96 <__flatcc_fb_clear_parser@@Base+0x1726>
  424de7:	nop    WORD PTR [rax+rax*1+0x0]
  424df0:	mov    rax,QWORD PTR [rsp+0x20]
  424df5:	xor    r9d,r9d
  424df8:	mov    rsi,QWORD PTR [rax+0x8]
  424dfc:	xor    r8d,r8d
  424dff:	xor    ecx,ecx
  424e01:	lea    rdx,[rip+0x24458]        # 449260 <fb_schema_table_missing@@Base+0x1da0>
  424e08:	mov    rdi,rbp
  424e0b:	call   41e370 <__flatcc_error_report@@Base>
  424e10:	mov    DWORD PTR [rsp+0x1c],0x1
  424e18:	jmp    4244f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  424e1d:	nop    DWORD PTR [rax]
  424e20:	mov    rsi,QWORD PTR [r12+0x8]
  424e25:	xor    r9d,r9d
  424e28:	xor    r8d,r8d
  424e2b:	xor    ecx,ecx
  424e2d:	lea    rdx,[rip+0x2446c]        # 4492a0 <fb_schema_table_missing@@Base+0x1de0>
  424e34:	mov    rdi,rbp
  424e37:	call   41e370 <__flatcc_error_report@@Base>
  424e3c:	mov    DWORD PTR [rsp+0x1c],0x1
  424e44:	jmp    4244f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  424e49:	nop    DWORD PTR [rax+0x0]
  424e50:	mov    r14,QWORD PTR [rsp+0x38]
  424e55:	mov    rax,QWORD PTR [rsp+0x28]
  424e5a:	mov    r8d,DWORD PTR [rsp+0x48]
  424e5f:	mov    QWORD PTR [r14+0xa8],rax
  424e66:	test   r8d,r8d
  424e69:	je     425a60 <__flatcc_fb_clear_parser@@Base+0x31f0>
  424e6f:	test   rax,rax
  424e72:	je     425370 <__flatcc_fb_clear_parser@@Base+0x2b00>
  424e78:	mov    rbp,QWORD PTR [rsp+0x58]
  424e7d:	cmp    rax,rbp
  424e80:	ja     425370 <__flatcc_fb_clear_parser@@Base+0x2b00>
  424e86:	test   rbp,rbp
  424e89:	je     424f02 <__flatcc_fb_clear_parser@@Base+0x2692>
  424e8b:	mov    QWORD PTR [rsp+0x8],r15
  424e90:	mov    r15,QWORD PTR [rsp+0x50]
  424e95:	mov    eax,0xa
  424e9a:	lea    rbx,[rsp+0xe0]
  424ea2:	nop    WORD PTR [rax+rax*1+0x0]
  424ea8:	cmp    BYTE PTR [r15+r12*1],0x0
  424ead:	jne    424ef5 <__flatcc_fb_clear_parser@@Base+0x2685>
  424eaf:	lea    r13d,[rax-0x1]
  424eb3:	test   eax,eax
  424eb5:	je     425701 <__flatcc_fb_clear_parser@@Base+0x2e91>
  424ebb:	mov    r8,r12
  424ebe:	lea    rcx,[rip+0x244db]        # 4493a0 <fb_schema_table_missing@@Base+0x1ee0>
  424ec5:	mov    edx,0x64
  424eca:	mov    esi,0x1
  424ecf:	mov    rdi,rbx
  424ed2:	xor    eax,eax
  424ed4:	call   405420 <__sprintf_chk@plt>
  424ed9:	mov    rsi,QWORD PTR [r14+0x8]
  424edd:	mov    rdi,QWORD PTR [rsp+0x8]
  424ee2:	xor    r9d,r9d
  424ee5:	xor    r8d,r8d
  424ee8:	xor    ecx,ecx
  424eea:	mov    rdx,rbx
  424eed:	call   41e370 <__flatcc_error_report@@Base>
  424ef2:	mov    eax,r13d
  424ef5:	inc    r12
  424ef8:	cmp    rbp,r12
  424efb:	jne    424ea8 <__flatcc_fb_clear_parser@@Base+0x2638>
  424efd:	mov    r15,QWORD PTR [rsp+0x8]
  424f02:	mov    eax,DWORD PTR [rsp+0x4c]
  424f06:	test   eax,eax
  424f08:	je     42427a <__flatcc_fb_clear_parser@@Base+0x1a0a>
  424f0e:	mov    rcx,QWORD PTR [rsp+0x38]
  424f13:	or     WORD PTR [rcx+0x12],0x8
  424f18:	cmp    eax,0x1
  424f1b:	je     42427a <__flatcc_fb_clear_parser@@Base+0x1a0a>
  424f21:	mov    edx,DWORD PTR [r15+0x108]
  424f28:	test   edx,edx
  424f2a:	jne    42427a <__flatcc_fb_clear_parser@@Base+0x1a0a>
  424f30:	mov    rax,QWORD PTR [rsp+0x38]
  424f35:	xor    r9d,r9d
  424f38:	mov    rsi,QWORD PTR [rax+0x8]
  424f3c:	xor    r8d,r8d
  424f3f:	xor    ecx,ecx
  424f41:	lea    rdx,[rip+0x24490]        # 4493d8 <fb_schema_table_missing@@Base+0x1f18>
  424f48:	mov    rdi,r15
  424f4b:	call   41e370 <__flatcc_error_report@@Base>
  424f50:	mov    eax,DWORD PTR [rsp+0x48]
  424f54:	mov    DWORD PTR [rsp+0x4c],0xffffffff
  424f5c:	mov    DWORD PTR [rsp+0x1c],eax
  424f60:	jmp    42426e <__flatcc_fb_clear_parser@@Base+0x19fe>
  424f65:	nop    DWORD PTR [rax]
  424f68:	mov    rsi,QWORD PTR [r12+0x8]
  424f6d:	mov    rcx,QWORD PTR [r12+0x18]
  424f72:	xor    r9d,r9d
  424f75:	xor    r8d,r8d
  424f78:	lea    rdx,[rip+0x24269]        # 4491e8 <fb_schema_table_missing@@Base+0x1d28>
  424f7f:	mov    rdi,rbp
  424f82:	call   41e370 <__flatcc_error_report@@Base>
  424f87:	mov    esi,0x1
  424f8c:	mov    WORD PTR [r12+0x28],si
  424f92:	mov    r12,QWORD PTR [r12]
  424f96:	test   r12,r12
  424f99:	jne    423cf0 <__flatcc_fb_clear_parser@@Base+0x1480>
  424f9f:	jmp    42422d <__flatcc_fb_clear_parser@@Base+0x19bd>
  424fa4:	nop    DWORD PTR [rax+0x0]
  424fa8:	cmp    eax,0x1
  424fab:	cmovne rsi,r8
  424faf:	cmp    rbp,0xfffffffffffffe08
  424fb6:	je     4249f5 <__flatcc_fb_clear_parser@@Base+0x2185>
  424fbc:	mov    rdi,QWORD PTR [rbp+0x260]
  424fc3:	test   rdi,rdi
  424fc6:	je     4249f5 <__flatcc_fb_clear_parser@@Base+0x2185>
  424fcc:	neg    edx
  424fce:	movsxd rdx,edx
  424fd1:	call   41d090 <fb_scope_table_find@@Base>
  424fd6:	test   rax,rax
  424fd9:	je     4249f0 <__flatcc_fb_clear_parser@@Base+0x2180>
  424fdf:	mov    rcx,QWORD PTR [r13+0x8]
  424fe3:	lea    rdi,[rax+0x8]
  424fe7:	mov    rdx,QWORD PTR [rcx+0x8]
  424feb:	mov    rsi,QWORD PTR [rcx]
  424fee:	call   41c010 <fb_symbol_table_find@@Base>
  424ff3:	mov    r15,rax
  424ff6:	test   rax,rax
  424ff9:	je     4249f0 <__flatcc_fb_clear_parser@@Base+0x2180>
  424fff:	cmp    WORD PTR [rax+0x10],0x4
  425004:	ja     4249f0 <__flatcc_fb_clear_parser@@Base+0x2180>
  42500a:	mov    rsi,QWORD PTR [rax+0x20]
  42500e:	lea    rdi,[rbp+0x320]
  425015:	call   41b8b0 <ptr_set_find_item@@Base>
  42501a:	test   rax,rax
  42501d:	jne    4243c2 <__flatcc_fb_clear_parser@@Base+0x1b52>
  425023:	jmp    4249f0 <__flatcc_fb_clear_parser@@Base+0x2180>
  425028:	nop    DWORD PTR [rax+rax*1+0x0]
  425030:	cmp    eax,0x1
  425033:	mov    esi,0x0
  425038:	cmovne rsi,r8
  42503c:	cmp    rbp,0xfffffffffffffe08
  425043:	je     424ab5 <__flatcc_fb_clear_parser@@Base+0x2245>
  425049:	mov    rdi,QWORD PTR [rbp+0x260]
  425050:	test   rdi,rdi
  425053:	je     424ab5 <__flatcc_fb_clear_parser@@Base+0x2245>
  425059:	neg    edx
  42505b:	movsxd rdx,edx
  42505e:	call   41d090 <fb_scope_table_find@@Base>
  425063:	test   rax,rax
  425066:	je     424ab0 <__flatcc_fb_clear_parser@@Base+0x2240>
  42506c:	mov    rcx,QWORD PTR [r13+0x8]
  425070:	lea    rdi,[rax+0x8]
  425074:	mov    rdx,QWORD PTR [rcx+0x8]
  425078:	mov    rsi,QWORD PTR [rcx]
  42507b:	call   41c010 <fb_symbol_table_find@@Base>
  425080:	mov    r15,rax
  425083:	test   rax,rax
  425086:	je     424ab0 <__flatcc_fb_clear_parser@@Base+0x2240>
  42508c:	cmp    WORD PTR [rax+0x10],0x4
  425091:	ja     424ab0 <__flatcc_fb_clear_parser@@Base+0x2240>
  425097:	mov    rsi,QWORD PTR [rax+0x20]
  42509b:	lea    rax,[rbp+0x320]
  4250a2:	mov    rdi,rax
  4250a5:	mov    QWORD PTR [rsp+0x40],rax
  4250aa:	call   41b8b0 <ptr_set_find_item@@Base>
  4250af:	test   rax,rax
  4250b2:	jne    424712 <__flatcc_fb_clear_parser@@Base+0x1ea2>
  4250b8:	jmp    424ab0 <__flatcc_fb_clear_parser@@Base+0x2240>
  4250bd:	nop    DWORD PTR [rax]
  4250c0:	test   r13w,0x800
  4250c6:	jne    424006 <__flatcc_fb_clear_parser@@Base+0x1796>
  4250cc:	jmp    42400c <__flatcc_fb_clear_parser@@Base+0x179c>
  4250d1:	nop    DWORD PTR [rax+0x0]
  4250d8:	mov    rsi,QWORD PTR [r12+0x8]
  4250dd:	xor    r9d,r9d
  4250e0:	xor    r8d,r8d
  4250e3:	xor    ecx,ecx
  4250e5:	lea    rdx,[rip+0x23c8c]        # 448d78 <fb_schema_table_missing@@Base+0x18b8>
  4250ec:	mov    rdi,rbp
  4250ef:	call   41e370 <__flatcc_error_report@@Base>
  4250f4:	mov    DWORD PTR [rsp+0x4c],0xffffffff
  4250fc:	mov    rcx,QWORD PTR [rsp+0x148]
  425104:	xor    rcx,QWORD PTR fs:0x28
  42510d:	mov    eax,DWORD PTR [rsp+0x4c]
  425111:	jne    425a85 <__flatcc_fb_clear_parser@@Base+0x3215>
  425117:	add    rsp,0x158
  42511e:	pop    rbx
  42511f:	pop    rbp
  425120:	pop    r12
  425122:	pop    r13
  425124:	pop    r14
  425126:	pop    r15
  425128:	ret    
  425129:	nop    DWORD PTR [rax+0x0]
  425130:	mov    rax,QWORD PTR [rsp+0x20]
  425135:	xor    r9d,r9d
  425138:	mov    rsi,QWORD PTR [rax+0x8]
  42513c:	xor    r8d,r8d
  42513f:	xor    ecx,ecx
  425141:	lea    rdx,[rip+0x241f0]        # 449338 <fb_schema_table_missing@@Base+0x1e78>
  425148:	mov    rdi,rbp
  42514b:	call   41e370 <__flatcc_error_report@@Base>
  425150:	jmp    4247db <__flatcc_fb_clear_parser@@Base+0x1f6b>
  425155:	nop    DWORD PTR [rax]
  425158:	mov    rax,QWORD PTR [rsp+0x20]
  42515d:	xor    r9d,r9d
  425160:	mov    rsi,QWORD PTR [rax+0x8]
  425164:	xor    r8d,r8d
  425167:	xor    ecx,ecx
  425169:	lea    rdx,[rip+0x24190]        # 449300 <fb_schema_table_missing@@Base+0x1e40>
  425170:	mov    rdi,rbp
  425173:	call   41e370 <__flatcc_error_report@@Base>
  425178:	mov    eax,DWORD PTR [rsp+0x48]
  42517c:	mov    DWORD PTR [rsp+0x1c],eax
  425180:	jmp    4244f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  425185:	nop    DWORD PTR [rax]
  425188:	mov    rsi,QWORD PTR [r13+0x8]
  42518c:	xor    r9d,r9d
  42518f:	xor    r8d,r8d
  425192:	xor    ecx,ecx
  425194:	lea    rdx,[rip+0x235cd]        # 448768 <fb_schema_table_missing@@Base+0x12a8>
  42519b:	mov    rdi,r15
  42519e:	call   41e370 <__flatcc_error_report@@Base>
  4251a3:	jmp    423be8 <__flatcc_fb_clear_parser@@Base+0x1378>
  4251a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4251b0:	test   BYTE PTR [rsp+0x1c],0x1
  4251b5:	jne    424185 <__flatcc_fb_clear_parser@@Base+0x1915>
  4251bb:	mov    r13d,DWORD PTR [rsp+0x48]
  4251c0:	test   r13d,r13d
  4251c3:	jne    4251d2 <__flatcc_fb_clear_parser@@Base+0x2962>
  4251c5:	movzx  eax,WORD PTR [rsp+0x28]
  4251ca:	mov    QWORD PTR [r12+0x88],rax
  4251d2:	inc    QWORD PTR [rsp+0x28]
  4251d7:	test   dx,dx
  4251da:	je     42447e <__flatcc_fb_clear_parser@@Base+0x1c0e>
  4251e0:	mov    rsi,QWORD PTR [r12+0x8]
  4251e5:	xor    ecx,ecx
  4251e7:	xor    r9d,r9d
  4251ea:	xor    r8d,r8d
  4251ed:	lea    rdx,[rip+0x23ee4]        # 4490d8 <fb_schema_table_missing@@Base+0x1c18>
  4251f4:	mov    rdi,rbp
  4251f7:	call   41e370 <__flatcc_error_report@@Base>
  4251fc:	mov    ecx,0x1
  425201:	mov    WORD PTR [r12+0x28],cx
  425207:	mov    r12,QWORD PTR [r12]
  42520b:	test   r12,r12
  42520e:	jne    423cf0 <__flatcc_fb_clear_parser@@Base+0x1480>
  425214:	jmp    42422d <__flatcc_fb_clear_parser@@Base+0x19bd>
  425219:	nop    DWORD PTR [rax+0x0]
  425220:	test   BYTE PTR [r12+0x71],0x1
  425226:	jne    4256c8 <__flatcc_fb_clear_parser@@Base+0x2e58>
  42522c:	mov    r14d,DWORD PTR [rbp+0x100]
  425233:	jmp    424143 <__flatcc_fb_clear_parser@@Base+0x18d3>
  425238:	nop    DWORD PTR [rax+rax*1+0x0]
  425240:	mov    rsi,QWORD PTR [r12+0x8]
  425245:	mov    rcx,QWORD PTR [r15+0x8]
  425249:	xor    r9d,r9d
  42524c:	xor    r8d,r8d
  42524f:	lea    rdx,[rip+0x23e2a]        # 449080 <fb_schema_table_missing@@Base+0x1bc0>
  425256:	mov    rdi,rbp
  425259:	call   41e370 <__flatcc_error_report@@Base>
  42525e:	mov    eax,0x1
  425263:	mov    WORD PTR [r12+0x28],ax
  425269:	mov    r12,QWORD PTR [r12]
  42526d:	test   r12,r12
  425270:	jne    423cf0 <__flatcc_fb_clear_parser@@Base+0x1480>
  425276:	jmp    42422d <__flatcc_fb_clear_parser@@Base+0x19bd>
  42527b:	nop    DWORD PTR [rax+rax*1+0x0]
  425280:	cmp    ax,0x3
  425284:	jne    4251e0 <__flatcc_fb_clear_parser@@Base+0x2970>
  42528a:	cmp    dx,0xd
  42528e:	je     42578c <__flatcc_fb_clear_parser@@Base+0x2f1c>
  425294:	lea    rbx,[r12+0x48]
  425299:	mov    edx,DWORD PTR [r15+0x48]
  42529d:	mov    rcx,rbx
  4252a0:	mov    rsi,r12
  4252a3:	mov    rdi,rbp
  4252a6:	call   427830 <__flatcc_fb_coerce_scalar_type@@Base>
  4252ab:	test   eax,eax
  4252ad:	jne    424754 <__flatcc_fb_clear_parser@@Base+0x1ee4>
  4252b3:	mov    r11d,DWORD PTR [rbp+0x140]
  4252ba:	test   r11d,r11d
  4252bd:	je     424474 <__flatcc_fb_clear_parser@@Base+0x1c04>
  4252c3:	mov    rax,QWORD PTR [r12+0x18]
  4252c8:	mov    rsi,rbx
  4252cb:	lea    rdi,[rax+0x80]
  4252d2:	call   42d960 <fb_value_set_find_item@@Base>
  4252d7:	test   rax,rax
  4252da:	jne    424474 <__flatcc_fb_clear_parser@@Base+0x1c04>
  4252e0:	mov    rsi,QWORD PTR [r12+0x8]
  4252e5:	xor    r9d,r9d
  4252e8:	xor    r8d,r8d
  4252eb:	xor    ecx,ecx
  4252ed:	lea    rdx,[rip+0x23e44]        # 449138 <fb_schema_table_missing@@Base+0x1c78>
  4252f4:	mov    rdi,rbp
  4252f7:	call   41e370 <__flatcc_error_report@@Base>
  4252fc:	mov    r10d,0x1
  425302:	mov    WORD PTR [r12+0x28],r10w
  425308:	jmp    424220 <__flatcc_fb_clear_parser@@Base+0x19b0>
  42530d:	nop    DWORD PTR [rax]
  425310:	lea    rdx,[rip+0x23fc9]        # 4492e0 <fb_schema_table_missing@@Base+0x1e20>
  425317:	mov    rdi,rbp
  42531a:	call   41e370 <__flatcc_error_report@@Base>
  42531f:	mov    DWORD PTR [rsp+0x1c],0x1
  425327:	jmp    4244f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  42532c:	cmp    dx,0xb
  425330:	lea    rax,[rip+0x23859]        # 448b90 <fb_schema_table_missing@@Base+0x16d0>
  425337:	lea    rdx,[rip+0x23802]        # 448b40 <fb_schema_table_missing@@Base+0x1680>
  42533e:	cmovne rdx,rax
  425342:	mov    rax,QWORD PTR [rsp+0x20]
  425347:	xor    r9d,r9d
  42534a:	mov    rsi,QWORD PTR [rax+0x8]
  42534e:	xor    r8d,r8d
  425351:	xor    ecx,ecx
  425353:	mov    rdi,rbp
  425356:	call   41e370 <__flatcc_error_report@@Base>
  42535b:	mov    eax,DWORD PTR [rsp+0x48]
  42535f:	mov    DWORD PTR [rsp+0x1c],eax
  425363:	jmp    4244f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  425368:	nop    DWORD PTR [rax+rax*1+0x0]
  425370:	mov    ecx,DWORD PTR [rsp+0x4c]
  425374:	test   ecx,ecx
  425376:	je     4250fc <__flatcc_fb_clear_parser@@Base+0x288c>
  42537c:	mov    rax,QWORD PTR [rsp+0x38]
  425381:	or     WORD PTR [rax+0x12],0x8
  425386:	cmp    DWORD PTR [rsp+0x4c],0x1
  42538b:	je     4253a0 <__flatcc_fb_clear_parser@@Base+0x2b30>
  42538d:	mov    eax,DWORD PTR [r15+0x108]
  425394:	mov    DWORD PTR [rsp+0x48],eax
  425398:	test   eax,eax
  42539a:	je     424f30 <__flatcc_fb_clear_parser@@Base+0x26c0>
  4253a0:	mov    DWORD PTR [rsp+0x4c],0x0
  4253a8:	jmp    4250fc <__flatcc_fb_clear_parser@@Base+0x288c>
  4253ad:	nop    DWORD PTR [rax]
  4253b0:	mov    rsi,QWORD PTR [r12+0x8]
  4253b5:	mov    rcx,QWORD PTR [r15+0x8]
  4253b9:	xor    r9d,r9d
  4253bc:	xor    r8d,r8d
  4253bf:	lea    rdx,[rip+0x23cea]        # 4490b0 <fb_schema_table_missing@@Base+0x1bf0>
  4253c6:	mov    rdi,rbp
  4253c9:	call   41e370 <__flatcc_error_report@@Base>
  4253ce:	mov    eax,0x1
  4253d3:	mov    WORD PTR [r12+0x28],ax
  4253d9:	mov    r12,QWORD PTR [r12]
  4253dd:	test   r12,r12
  4253e0:	jne    423cf0 <__flatcc_fb_clear_parser@@Base+0x1480>
  4253e6:	jmp    42422d <__flatcc_fb_clear_parser@@Base+0x19bd>
  4253eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4253f0:	mov    rax,QWORD PTR [rsp+0x38]
  4253f5:	mov    r8,QWORD PTR [r12+0x48]
  4253fa:	mov    rbx,QWORD PTR [rax+0x18]
  4253fe:	test   r8,r8
  425401:	je     425a97 <__flatcc_fb_clear_parser@@Base+0x3227>
  425407:	xor    edi,edi
  425409:	mov    rdx,r8
  42540c:	xor    eax,eax
  42540e:	jmp    425418 <__flatcc_fb_clear_parser@@Base+0x2ba8>
  425410:	mov    rdi,rdx
  425413:	mov    eax,ecx
  425415:	mov    rdx,rsi
  425418:	mov    rsi,QWORD PTR [rdx]
  42541b:	lea    ecx,[rax+0x1]
  42541e:	test   rsi,rsi
  425421:	jne    425410 <__flatcc_fb_clear_parser@@Base+0x2ba0>
  425423:	mov    QWORD PTR [rsp+0x68],rdx
  425428:	mov    r14,rdi
  42542b:	test   rdi,rdi
  42542e:	je     4254ad <__flatcc_fb_clear_parser@@Base+0x2c3d>
  425430:	test   rbx,rbx
  425433:	je     42563f <__flatcc_fb_clear_parser@@Base+0x2dcf>
  425439:	lea    rcx,[rbp+0x320]
  425440:	mov    QWORD PTR [rsp+0x40],rcx
  425445:	cmp    eax,0x1
  425448:	jne    42563f <__flatcc_fb_clear_parser@@Base+0x2dcf>
  42544e:	mov    QWORD PTR [rsp+0x60],r15
  425453:	nop    DWORD PTR [rax+rax*1+0x0]
  425458:	mov    rax,QWORD PTR [r14+0x8]
  42545c:	lea    rdi,[rbx+0x8]
  425460:	mov    rdx,QWORD PTR [rax+0x8]
  425464:	mov    rsi,QWORD PTR [rax]
  425467:	call   41c010 <fb_symbol_table_find@@Base>
  42546c:	mov    r13,rax
  42546f:	test   rax,rax
  425472:	je     425510 <__flatcc_fb_clear_parser@@Base+0x2ca0>
  425478:	cmp    WORD PTR [rax+0x10],0x4
  42547d:	ja     425510 <__flatcc_fb_clear_parser@@Base+0x2ca0>
  425483:	mov    rsi,QWORD PTR [rax+0x20]
  425487:	mov    rdi,QWORD PTR [rsp+0x40]
  42548c:	call   41b8b0 <ptr_set_find_item@@Base>
  425491:	test   rax,rax
  425494:	je     425510 <__flatcc_fb_clear_parser@@Base+0x2ca0>
  425496:	mov    r15,QWORD PTR [rsp+0x60]
  42549b:	cmp    WORD PTR [r13+0x10],0x3
  4254a1:	je     4254d2 <__flatcc_fb_clear_parser@@Base+0x2c62>
  4254a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4254a8:	mov    r8,QWORD PTR [r12+0x48]
  4254ad:	mov    rsi,r8
  4254b0:	mov    rcx,r12
  4254b3:	lea    rdx,[rip+0x23a9e]        # 448f58 <fb_schema_table_missing@@Base+0x1a98>
  4254ba:	mov    rdi,rbp
  4254bd:	call   41f7a0 <error_ref_sym@@Base>
  4254c2:	mov    esi,0x1
  4254c7:	mov    WORD PTR [r12+0x28],si
  4254cd:	jmp    424220 <__flatcc_fb_clear_parser@@Base+0x19b0>
  4254d2:	mov    rax,QWORD PTR [rsp+0x68]
  4254d7:	lea    rdi,[r13+0x60]
  4254db:	mov    rax,QWORD PTR [rax+0x8]
  4254df:	mov    rdx,QWORD PTR [rax+0x8]
  4254e3:	mov    rsi,QWORD PTR [rax]
  4254e6:	call   41c010 <fb_symbol_table_find@@Base>
  4254eb:	test   rax,rax
  4254ee:	je     4254a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  4254f0:	vmovdqu xmm0,XMMWORD PTR [rax+0x48]
  4254f5:	vmovups XMMWORD PTR [r12+0x48],xmm0
  4254fc:	mov    rax,QWORD PTR [rax+0x58]
  425500:	mov    QWORD PTR [r12+0x58],rax
  425505:	jmp    4245a0 <__flatcc_fb_clear_parser@@Base+0x1d30>
  42550a:	nop    WORD PTR [rax+rax*1+0x0]
  425510:	mov    rax,QWORD PTR [rbx]
  425513:	test   rax,rax
  425516:	je     4254a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  425518:	xor    ecx,ecx
  42551a:	jmp    425522 <__flatcc_fb_clear_parser@@Base+0x2cb2>
  42551c:	nop    DWORD PTR [rax+0x0]
  425520:	mov    ecx,edx
  425522:	mov    rax,QWORD PTR [rax]
  425525:	lea    edx,[rcx+0x1]
  425528:	test   rax,rax
  42552b:	jne    425520 <__flatcc_fb_clear_parser@@Base+0x2cb0>
  42552d:	neg    ecx
  42552f:	lea    r13,[rbp+0x1f8]
  425536:	mov    r15d,ecx
  425539:	jmp    425564 <__flatcc_fb_clear_parser@@Base+0x2cf4>
  42553b:	nop    DWORD PTR [rax+rax*1+0x0]
  425540:	test   r13,r13
  425543:	je     425561 <__flatcc_fb_clear_parser@@Base+0x2cf1>
  425545:	mov    rdi,QWORD PTR [rbp+0x260]
  42554c:	test   rdi,rdi
  42554f:	je     425561 <__flatcc_fb_clear_parser@@Base+0x2cf1>
  425551:	mov    rsi,QWORD PTR [rbx]
  425554:	movsxd rdx,r15d
  425557:	call   41d090 <fb_scope_table_find@@Base>
  42555c:	test   rax,rax
  42555f:	jne    4255a0 <__flatcc_fb_clear_parser@@Base+0x2d30>
  425561:	inc    r15d
  425564:	test   r15d,r15d
  425567:	jne    425540 <__flatcc_fb_clear_parser@@Base+0x2cd0>
  425569:	test   r13,r13
  42556c:	je     4254a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  425572:	mov    rdi,QWORD PTR [rbp+0x260]
  425579:	test   rdi,rdi
  42557c:	je     4254a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  425582:	xor    edx,edx
  425584:	xor    esi,esi
  425586:	call   41d090 <fb_scope_table_find@@Base>
  42558b:	mov    rbx,rax
  42558e:	test   rax,rax
  425591:	jne    425458 <__flatcc_fb_clear_parser@@Base+0x2be8>
  425597:	jmp    4254a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  42559c:	nop    DWORD PTR [rax+0x0]
  4255a0:	mov    rbx,rax
  4255a3:	jmp    425458 <__flatcc_fb_clear_parser@@Base+0x2be8>
  4255a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4255b0:	mov    rsi,QWORD PTR [r12+0x8]
  4255b5:	xor    r9d,r9d
  4255b8:	xor    r8d,r8d
  4255bb:	xor    ecx,ecx
  4255bd:	lea    rdx,[rip+0x239fc]        # 448fc0 <fb_schema_table_missing@@Base+0x1b00>
  4255c4:	mov    rdi,rbp
  4255c7:	call   41e370 <__flatcc_error_report@@Base>
  4255cc:	mov    eax,0x1
  4255d1:	mov    WORD PTR [r12+0x28],ax
  4255d7:	mov    r12,QWORD PTR [r12]
  4255db:	test   r12,r12
  4255de:	jne    423cf0 <__flatcc_fb_clear_parser@@Base+0x1480>
  4255e4:	jmp    42422d <__flatcc_fb_clear_parser@@Base+0x19bd>
  4255e9:	nop    DWORD PTR [rax+0x0]
  4255f0:	mov    eax,r9d
  4255f3:	mov    r14,rsi
  4255f6:	xor    r13d,r13d
  4255f9:	jmp    423ee9 <__flatcc_fb_clear_parser@@Base+0x1679>
  4255fe:	xchg   ax,ax
  425600:	xor    r13d,r13d
  425603:	jmp    424c58 <__flatcc_fb_clear_parser@@Base+0x23e8>
  425608:	test   r13w,0x400
  42560e:	je     423fd5 <__flatcc_fb_clear_parser@@Base+0x1765>
  425614:	jmp    423fa7 <__flatcc_fb_clear_parser@@Base+0x1737>
  425619:	mov    rsi,QWORD PTR [rax+0x8]
  42561d:	xor    r9d,r9d
  425620:	xor    r8d,r8d
  425623:	xor    ecx,ecx
  425625:	lea    rdx,[rip+0x23774]        # 448da0 <fb_schema_table_missing@@Base+0x18e0>
  42562c:	mov    rdi,rbp
  42562f:	call   41e370 <__flatcc_error_report@@Base>
  425634:	movzx  r13d,WORD PTR [r12+0x70]
  42563a:	jmp    423f81 <__flatcc_fb_clear_parser@@Base+0x1711>
  42563f:	cmp    eax,0x1
  425642:	cmovne rsi,r8
  425646:	cmp    rbp,0xfffffffffffffe08
  42564d:	je     4254ad <__flatcc_fb_clear_parser@@Base+0x2c3d>
  425653:	mov    rdi,QWORD PTR [rbp+0x260]
  42565a:	test   rdi,rdi
  42565d:	je     4254ad <__flatcc_fb_clear_parser@@Base+0x2c3d>
  425663:	mov    edx,0x1
  425668:	sub    edx,eax
  42566a:	movsxd rdx,edx
  42566d:	call   41d090 <fb_scope_table_find@@Base>
  425672:	test   rax,rax
  425675:	je     4254a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  42567b:	mov    rcx,QWORD PTR [r14+0x8]
  42567f:	lea    rdi,[rax+0x8]
  425683:	mov    rdx,QWORD PTR [rcx+0x8]
  425687:	mov    rsi,QWORD PTR [rcx]
  42568a:	call   41c010 <fb_symbol_table_find@@Base>
  42568f:	mov    r13,rax
  425692:	test   rax,rax
  425695:	je     4254a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  42569b:	cmp    WORD PTR [rax+0x10],0x4
  4256a0:	ja     4254a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  4256a6:	mov    rsi,QWORD PTR [rax+0x20]
  4256aa:	lea    rdi,[rbp+0x320]
  4256b1:	call   41b8b0 <ptr_set_find_item@@Base>
  4256b6:	test   rax,rax
  4256b9:	jne    42549b <__flatcc_fb_clear_parser@@Base+0x2c2b>
  4256bf:	jmp    4254a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  4256c4:	nop    DWORD PTR [rax+0x0]
  4256c8:	mov    rsi,QWORD PTR [r12+0x8]
  4256cd:	xor    r9d,r9d
  4256d0:	xor    r8d,r8d
  4256d3:	xor    ecx,ecx
  4256d5:	lea    rdx,[rip+0x2396c]        # 449048 <fb_schema_table_missing@@Base+0x1b88>
  4256dc:	mov    rdi,rbp
  4256df:	call   41e370 <__flatcc_error_report@@Base>
  4256e4:	jmp    42522c <__flatcc_fb_clear_parser@@Base+0x29bc>
  4256e9:	mov    QWORD PTR [rax+0xa8],0x0
  4256f4:	mov    DWORD PTR [rsp+0x4c],0x0
  4256fc:	jmp    4250fc <__flatcc_fb_clear_parser@@Base+0x288c>
  425701:	mov    rax,QWORD PTR [rsp+0x38]
  425706:	mov    r15,QWORD PTR [rsp+0x8]
  42570b:	mov    rsi,QWORD PTR [rax+0x8]
  42570f:	xor    r9d,r9d
  425712:	xor    r8d,r8d
  425715:	xor    ecx,ecx
  425717:	lea    rdx,[rip+0x242ec]        # 449a0a <fb_schema_table_missing@@Base+0x254a>
  42571e:	mov    rdi,r15
  425721:	call   41e370 <__flatcc_error_report@@Base>
  425726:	jmp    424f02 <__flatcc_fb_clear_parser@@Base+0x2692>
  42572b:	test   BYTE PTR [r12+0x70],0x80
  425731:	je     424220 <__flatcc_fb_clear_parser@@Base+0x19b0>
  425737:	inc    DWORD PTR [rsp+0x4c]
  42573b:	jmp    424511 <__flatcc_fb_clear_parser@@Base+0x1ca1>
  425740:	mov    BYTE PTR [rcx],0x2
  425743:	jmp    4244f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  425748:	mov    rsi,QWORD PTR [r12+0x8]
  42574d:	xor    r9d,r9d
  425750:	xor    r8d,r8d
  425753:	xor    ecx,ecx
  425755:	lea    rdx,[rip+0x24274]        # 4499d0 <fb_schema_table_missing@@Base+0x2510>
  42575c:	mov    rdi,rbp
  42575f:	call   41e370 <__flatcc_error_report@@Base>
  425764:	mov    DWORD PTR [rsp+0x1c],0x1
  42576c:	jmp    4244f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  425771:	cmp    dx,0xb
  425775:	lea    rax,[rip+0x234cc]        # 448c48 <fb_schema_table_missing@@Base+0x1788>
  42577c:	lea    rdx,[rip+0x2345d]        # 448be0 <fb_schema_table_missing@@Base+0x1720>
  425783:	cmovne rdx,rax
  425787:	jmp    425342 <__flatcc_fb_clear_parser@@Base+0x2ad2>
  42578c:	mov    rdx,QWORD PTR [r12+0x48]
  425791:	mov    rax,QWORD PTR [rsp+0x38]
  425796:	mov    QWORD PTR [rsp+0x70],rdx
  42579b:	mov    rbx,QWORD PTR [rax+0x18]
  42579f:	test   rdx,rdx
  4257a2:	je     425a97 <__flatcc_fb_clear_parser@@Base+0x3227>
  4257a8:	xor    eax,eax
  4257aa:	mov    rdi,QWORD PTR [rsp+0x60]
  4257af:	jmp    4257c0 <__flatcc_fb_clear_parser@@Base+0x2f50>
  4257b1:	nop    DWORD PTR [rax+0x0]
  4257b8:	mov    rdi,rdx
  4257bb:	mov    eax,ecx
  4257bd:	mov    rdx,rsi
  4257c0:	mov    rsi,QWORD PTR [rdx]
  4257c3:	lea    ecx,[rax+0x1]
  4257c6:	test   rsi,rsi
  4257c9:	jne    4257b8 <__flatcc_fb_clear_parser@@Base+0x2f48>
  4257cb:	mov    QWORD PTR [rsp+0x78],rdx
  4257d0:	mov    QWORD PTR [rsp+0x60],rdi
  4257d5:	test   rdi,rdi
  4257d8:	je     42584d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  4257da:	test   rbx,rbx
  4257dd:	je     425936 <__flatcc_fb_clear_parser@@Base+0x30c6>
  4257e3:	cmp    eax,0x1
  4257e6:	jne    425936 <__flatcc_fb_clear_parser@@Base+0x30c6>
  4257ec:	mov    QWORD PTR [rsp+0x68],r12
  4257f1:	mov    r12,QWORD PTR [rsp+0x60]
  4257f6:	mov    DWORD PTR [rsp+0x60],r14d
  4257fb:	nop    DWORD PTR [rax+rax*1+0x0]
  425800:	mov    rax,QWORD PTR [r12+0x8]
  425805:	lea    rdi,[rbx+0x8]
  425809:	mov    rdx,QWORD PTR [rax+0x8]
  42580d:	mov    rsi,QWORD PTR [rax]
  425810:	call   41c010 <fb_symbol_table_find@@Base>
  425815:	mov    r13,rax
  425818:	test   rax,rax
  42581b:	je     4258a0 <__flatcc_fb_clear_parser@@Base+0x3030>
  425821:	cmp    WORD PTR [rax+0x10],0x4
  425826:	ja     4258a0 <__flatcc_fb_clear_parser@@Base+0x3030>
  425828:	mov    rsi,QWORD PTR [rax+0x20]
  42582c:	mov    rdi,QWORD PTR [rsp+0x40]
  425831:	call   41b8b0 <ptr_set_find_item@@Base>
  425836:	test   rax,rax
  425839:	je     4258a0 <__flatcc_fb_clear_parser@@Base+0x3030>
  42583b:	mov    r12,QWORD PTR [rsp+0x68]
  425840:	mov    r14d,DWORD PTR [rsp+0x60]
  425845:	cmp    WORD PTR [r13+0x10],0x3
  42584b:	je     42585f <__flatcc_fb_clear_parser@@Base+0x2fef>
  42584d:	mov    rax,QWORD PTR [rsp+0x70]
  425852:	cmp    QWORD PTR [rax],0x0
  425856:	jne    4259ed <__flatcc_fb_clear_parser@@Base+0x317d>
  42585c:	mov    r13,r15
  42585f:	mov    rax,QWORD PTR [rsp+0x78]
  425864:	lea    rdi,[r13+0x60]
  425868:	mov    rax,QWORD PTR [rax+0x8]
  42586c:	mov    rdx,QWORD PTR [rax+0x8]
  425870:	mov    rsi,QWORD PTR [rax]
  425873:	call   41c010 <fb_symbol_table_find@@Base>
  425878:	test   rax,rax
  42587b:	je     4259ed <__flatcc_fb_clear_parser@@Base+0x317d>
  425881:	vmovdqu xmm1,XMMWORD PTR [rax+0x48]
  425886:	vmovups XMMWORD PTR [r12+0x48],xmm1
  42588d:	mov    rax,QWORD PTR [rax+0x58]
  425891:	mov    QWORD PTR [r12+0x58],rax
  425896:	jmp    424474 <__flatcc_fb_clear_parser@@Base+0x1c04>
  42589b:	nop    DWORD PTR [rax+rax*1+0x0]
  4258a0:	mov    rax,QWORD PTR [rbx]
  4258a3:	test   rax,rax
  4258a6:	je     42591f <__flatcc_fb_clear_parser@@Base+0x30af>
  4258a8:	xor    ecx,ecx
  4258aa:	jmp    4258b2 <__flatcc_fb_clear_parser@@Base+0x3042>
  4258ac:	nop    DWORD PTR [rax+0x0]
  4258b0:	mov    ecx,edx
  4258b2:	mov    rax,QWORD PTR [rax]
  4258b5:	lea    edx,[rcx+0x1]
  4258b8:	test   rax,rax
  4258bb:	jne    4258b0 <__flatcc_fb_clear_parser@@Base+0x3040>
  4258bd:	neg    ecx
  4258bf:	lea    r13,[rbp+0x1f8]
  4258c6:	mov    r14d,ecx
  4258c9:	jmp    4258f4 <__flatcc_fb_clear_parser@@Base+0x3084>
  4258cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4258d0:	test   r13,r13
  4258d3:	je     4258f1 <__flatcc_fb_clear_parser@@Base+0x3081>
  4258d5:	mov    rdi,QWORD PTR [rbp+0x260]
  4258dc:	test   rdi,rdi
  4258df:	je     4258f1 <__flatcc_fb_clear_parser@@Base+0x3081>
  4258e1:	mov    rsi,QWORD PTR [rbx]
  4258e4:	movsxd rdx,r14d
  4258e7:	call   41d090 <fb_scope_table_find@@Base>
  4258ec:	test   rax,rax
  4258ef:	jne    42592e <__flatcc_fb_clear_parser@@Base+0x30be>
  4258f1:	inc    r14d
  4258f4:	test   r14d,r14d
  4258f7:	jne    4258d0 <__flatcc_fb_clear_parser@@Base+0x3060>
  4258f9:	test   r13,r13
  4258fc:	je     42591f <__flatcc_fb_clear_parser@@Base+0x30af>
  4258fe:	mov    rdi,QWORD PTR [rbp+0x260]
  425905:	test   rdi,rdi
  425908:	je     42591f <__flatcc_fb_clear_parser@@Base+0x30af>
  42590a:	xor    edx,edx
  42590c:	xor    esi,esi
  42590e:	call   41d090 <fb_scope_table_find@@Base>
  425913:	mov    rbx,rax
  425916:	test   rax,rax
  425919:	jne    425800 <__flatcc_fb_clear_parser@@Base+0x2f90>
  42591f:	mov    r12,QWORD PTR [rsp+0x68]
  425924:	mov    r14d,DWORD PTR [rsp+0x60]
  425929:	jmp    42584d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  42592e:	mov    rbx,rax
  425931:	jmp    425800 <__flatcc_fb_clear_parser@@Base+0x2f90>
  425936:	cmp    eax,0x1
  425939:	cmovne rsi,QWORD PTR [rsp+0x70]
  42593f:	cmp    rbp,0xfffffffffffffe08
  425946:	je     42584d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  42594c:	mov    rdi,QWORD PTR [rbp+0x260]
  425953:	test   rdi,rdi
  425956:	je     42584d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  42595c:	mov    edx,0x1
  425961:	sub    edx,eax
  425963:	movsxd rdx,edx
  425966:	call   41d090 <fb_scope_table_find@@Base>
  42596b:	test   rax,rax
  42596e:	je     42584d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  425974:	mov    rcx,QWORD PTR [rsp+0x60]
  425979:	lea    rdi,[rax+0x8]
  42597d:	mov    rcx,QWORD PTR [rcx+0x8]
  425981:	mov    rdx,QWORD PTR [rcx+0x8]
  425985:	mov    rsi,QWORD PTR [rcx]
  425988:	call   41c010 <fb_symbol_table_find@@Base>
  42598d:	mov    r13,rax
  425990:	test   rax,rax
  425993:	je     42584d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  425999:	cmp    WORD PTR [rax+0x10],0x4
  42599e:	ja     42584d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  4259a4:	mov    rsi,QWORD PTR [rax+0x20]
  4259a8:	mov    rdi,QWORD PTR [rsp+0x40]
  4259ad:	call   41b8b0 <ptr_set_find_item@@Base>
  4259b2:	test   rax,rax
  4259b5:	jne    425845 <__flatcc_fb_clear_parser@@Base+0x2fd5>
  4259bb:	jmp    42584d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  4259c0:	mov    rax,QWORD PTR [rsp+0x10]
  4259c5:	mov    rcx,QWORD PTR [r13+0x8]
  4259c9:	mov    rsi,QWORD PTR [rax+0x8]
  4259cd:	xor    r9d,r9d
  4259d0:	xor    r8d,r8d
  4259d3:	lea    rdx,[rip+0x23436]        # 448e10 <fb_schema_table_missing@@Base+0x1950>
  4259da:	mov    rdi,rbp
  4259dd:	call   41e370 <__flatcc_error_report@@Base>
  4259e2:	movzx  r13d,WORD PTR [r12+0x70]
  4259e8:	jmp    423f81 <__flatcc_fb_clear_parser@@Base+0x1711>
  4259ed:	mov    rsi,QWORD PTR [r12+0x48]
  4259f2:	mov    rcx,r12
  4259f5:	lea    rdx,[rip+0x2370c]        # 449108 <fb_schema_table_missing@@Base+0x1c48>
  4259fc:	mov    rdi,rbp
  4259ff:	mov    ebx,0x1
  425a04:	call   41f7a0 <error_ref_sym@@Base>
  425a09:	mov    WORD PTR [r12+0x28],bx
  425a0f:	jmp    424220 <__flatcc_fb_clear_parser@@Base+0x19b0>
  425a14:	mov    rax,QWORD PTR [rsp+0x10]
  425a19:	mov    rcx,QWORD PTR [r13+0x8]
  425a1d:	mov    rsi,QWORD PTR [rax+0x8]
  425a21:	xor    r9d,r9d
  425a24:	xor    r8d,r8d
  425a27:	lea    rdx,[rip+0x233b2]        # 448de0 <fb_schema_table_missing@@Base+0x1920>
  425a2e:	mov    rdi,rbp
  425a31:	call   41e370 <__flatcc_error_report@@Base>
  425a36:	movzx  r13d,WORD PTR [r12+0x70]
  425a3c:	jmp    423f81 <__flatcc_fb_clear_parser@@Base+0x1711>
  425a41:	lea    rcx,[rip+0x241e0]        # 449c28 <fb_schema_table_missing@@Base+0x2768>
  425a48:	mov    edx,0x301
  425a4d:	lea    rsi,[rip+0x22a3c]        # 448490 <fb_schema_table_missing@@Base+0xfd0>
  425a54:	lea    rdi,[rip+0xa2ed]        # 42fd48 <_IO_stdin_used@@Base+0x1d48>
  425a5b:	call   405300 <__assert_fail@plt>
  425a60:	cmp    DWORD PTR [rsp+0x4c],0x0
  425a65:	je     4250fc <__flatcc_fb_clear_parser@@Base+0x288c>
  425a6b:	mov    rax,QWORD PTR [rsp+0x38]
  425a70:	or     WORD PTR [rax+0x12],0x8
  425a75:	cmp    DWORD PTR [rsp+0x4c],0x1
  425a7a:	jne    424257 <__flatcc_fb_clear_parser@@Base+0x19e7>
  425a80:	jmp    4253a0 <__flatcc_fb_clear_parser@@Base+0x2b30>
  425a85:	call   4052d0 <__stack_chk_fail@plt>
  425a8a:	mov    eax,DWORD PTR [rsp+0x1c]
  425a8e:	mov    DWORD PTR [rsp+0x48],eax
  425a92:	jmp    424f30 <__flatcc_fb_clear_parser@@Base+0x26c0>
  425a97:	lea    rcx,[rip+0x24172]        # 449c10 <fb_schema_table_missing@@Base+0x2750>
  425a9e:	mov    edx,0x15b
  425aa3:	lea    rsi,[rip+0x229e6]        # 448490 <fb_schema_table_missing@@Base+0xfd0>
  425aaa:	lea    rdi,[rip+0x23f1b]        # 4499cc <fb_schema_table_missing@@Base+0x250c>
  425ab1:	call   405300 <__assert_fail@plt>
  425ab6:	mov    DWORD PTR [rsp+0x1c],0x0
  425abe:	jmp    4244f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  425ac3:	lea    rcx,[rip+0x2415e]        # 449c28 <fb_schema_table_missing@@Base+0x2768>
  425aca:	mov    edx,0x302
  425acf:	lea    rsi,[rip+0x229ba]        # 448490 <fb_schema_table_missing@@Base+0xfd0>
  425ad6:	lea    rdi,[rip+0x23ec5]        # 4499a2 <fb_schema_table_missing@@Base+0x24e2>
  425add:	call   405300 <__assert_fail@plt>
  425ae2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425aed:	nop    DWORD PTR [rax]

0000000000425af0 <__flatcc_fb_build_schema@@Base>:
  425af0:	endbr64 
  425af4:	push   r15
  425af6:	mov    r15,rdi
  425af9:	push   r14
  425afb:	lea    r14,[rdi+0x1f8]
  425b02:	mov    rsi,r14
  425b05:	push   r13
  425b07:	push   r12
  425b09:	push   rbp
  425b0a:	push   rbx
  425b0b:	sub    rsp,0x118
  425b12:	mov    rax,QWORD PTR fs:0x28
  425b1b:	mov    QWORD PTR [rsp+0x108],rax
  425b23:	xor    eax,eax
  425b25:	lea    rax,[rdi+0x320]
  425b2c:	mov    rdi,rax
  425b2f:	mov    QWORD PTR [rsp+0x8],rax
  425b34:	call   41b8b0 <ptr_set_find_item@@Base>
  425b39:	test   rax,rax
  425b3c:	je     4277e2 <__flatcc_fb_build_schema@@Base+0x1cf2>
  425b42:	mov    rbx,QWORD PTR [r15+0x238]
  425b49:	mov    ebp,0x811c9dc5
  425b4e:	test   rbx,rbx
  425b51:	jne    425b6c <__flatcc_fb_build_schema@@Base+0x7c>
  425b53:	jmp    425c20 <__flatcc_fb_build_schema@@Base+0x130>
  425b58:	nop    DWORD PTR [rax+rax*1+0x0]
  425b60:	mov    rbx,QWORD PTR [rbx]
  425b63:	test   rbx,rbx
  425b66:	je     425c20 <__flatcc_fb_build_schema@@Base+0x130>
  425b6c:	cmp    WORD PTR [rbx+0x10],0x4
  425b71:	ja     425b60 <__flatcc_fb_build_schema@@Base+0x70>
  425b73:	mov    rax,QWORD PTR [rbx+0x8]
  425b77:	mov    rdi,QWORD PTR [rbx+0x18]
  425b7b:	mov    rdx,QWORD PTR [rax]
  425b7e:	mov    r8,QWORD PTR [rax+0x8]
  425b82:	test   rdi,rdi
  425b85:	je     4269c8 <__flatcc_fb_build_schema@@Base+0xed8>
  425b8b:	mov    r10,QWORD PTR [rdi]
  425b8e:	mov    eax,0x811c9dc5
  425b93:	test   r10,r10
  425b96:	jne    425d28 <__flatcc_fb_build_schema@@Base+0x238>
  425b9c:	test   r8,r8
  425b9f:	je     4273f8 <__flatcc_fb_build_schema@@Base+0x1908>
  425ba5:	lea    rsi,[rdx+r8*1]
  425ba9:	nop    DWORD PTR [rax+0x0]
  425bb0:	inc    rdx
  425bb3:	movzx  ecx,BYTE PTR [rdx-0x1]
  425bb7:	xor    eax,ecx
  425bb9:	imul   eax,eax,0x1000193
  425bbf:	cmp    rdx,rsi
  425bc2:	jne    425bb0 <__flatcc_fb_build_schema@@Base+0xc0>
  425bc4:	test   eax,eax
  425bc6:	cmove  eax,ebp
  425bc9:	mov    QWORD PTR [rbx+0x20],r14
  425bcd:	mov    DWORD PTR [rbx+0xa0],eax
  425bd3:	test   rdi,rdi
  425bd6:	je     425b60 <__flatcc_fb_build_schema@@Base+0x70>
  425bd8:	add    rdi,0x8
  425bdc:	mov    edx,0x1
  425be1:	mov    rsi,rbx
  425be4:	call   41bff0 <fb_symbol_table_insert_item@@Base>
  425be9:	test   rax,rax
  425bec:	je     425b60 <__flatcc_fb_build_schema@@Base+0x70>
  425bf2:	mov    rsi,QWORD PTR [rbx+0x8]
  425bf6:	mov    rcx,QWORD PTR [rax+0x8]
  425bfa:	xor    r9d,r9d
  425bfd:	xor    r8d,r8d
  425c00:	lea    rdx,[rip+0x23e19]        # 449a20 <fb_schema_table_missing@@Base+0x2560>
  425c07:	mov    rdi,r15
  425c0a:	call   41e370 <__flatcc_error_report@@Base>
  425c0f:	mov    rbx,QWORD PTR [rbx]
  425c12:	test   rbx,rbx
  425c15:	jne    425b6c <__flatcc_fb_build_schema@@Base+0x7c>
  425c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  425c20:	mov    rbx,QWORD PTR [r15+0x200]
  425c27:	lea    rbp,[rip+0x23e0e]        # 449a3c <fb_schema_table_missing@@Base+0x257c>
  425c2e:	test   rbx,rbx
  425c31:	je     425c74 <__flatcc_fb_build_schema@@Base+0x184>
  425c33:	nop    DWORD PTR [rax+rax*1+0x0]
  425c38:	mov    rax,QWORD PTR [r15+0x260]
  425c3f:	mov    edx,0x1
  425c44:	lea    rdi,[rax+0x20]
  425c48:	mov    rsi,rbx
  425c4b:	call   42d210 <fb_name_table_insert_item@@Base>
  425c50:	test   rax,rax
  425c53:	je     425c6c <__flatcc_fb_build_schema@@Base+0x17c>
  425c55:	mov    r9d,DWORD PTR [rbx+0x10]
  425c59:	mov    r8,QWORD PTR [rbx+0x8]
  425c5d:	xor    ecx,ecx
  425c5f:	mov    rdx,rbp
  425c62:	xor    esi,esi
  425c64:	mov    rdi,r15
  425c67:	call   41e370 <__flatcc_error_report@@Base>
  425c6c:	mov    rbx,QWORD PTR [rbx]
  425c6f:	test   rbx,rbx
  425c72:	jne    425c38 <__flatcc_fb_build_schema@@Base+0x148>
  425c74:	xor    r12d,r12d
  425c77:	lea    rbp,[rip+0x2c122]        # 451da0 <fb_value_set_missing@@Base+0x6db8>
  425c7e:	jmp    425cd9 <__flatcc_fb_build_schema@@Base+0x1e9>
  425c80:	mov    rdi,QWORD PTR [rbp+r12*8+0x0]
  425c85:	mov    QWORD PTR [r15+0x60],rax
  425c89:	mov    QWORD PTR [rbx+0x8],rdi
  425c8d:	mov    DWORD PTR [rbx+0x20],r12d
  425c91:	call   4052c0 <strlen@plt>
  425c96:	mov    r11d,0x2
  425c9c:	mov    DWORD PTR [rbx+0x10],eax
  425c9f:	mov    WORD PTR [rbx+0x18],r11w
  425ca4:	mov    rax,QWORD PTR [r15+0x260]
  425cab:	mov    QWORD PTR [rbx],0x0
  425cb2:	lea    rdi,[rax+0x20]
  425cb6:	mov    edx,0x1
  425cbb:	mov    rsi,rbx
  425cbe:	call   42d210 <fb_name_table_insert_item@@Base>
  425cc3:	test   rax,rax
  425cc6:	je     425ccc <__flatcc_fb_build_schema@@Base+0x1dc>
  425cc8:	mov    DWORD PTR [rax+0x20],r12d
  425ccc:	inc    r12
  425ccf:	cmp    r12,0xc
  425cd3:	je     425d90 <__flatcc_fb_build_schema@@Base+0x2a0>
  425cd9:	mov    rbx,QWORD PTR [r15+0x60]
  425cdd:	lea    rax,[rbx+0x30]
  425ce1:	cmp    rax,QWORD PTR [r15+0x50]
  425ce5:	jbe    425c80 <__flatcc_fb_build_schema@@Base+0x190>
  425ce7:	mov    esi,0x1
  425cec:	mov    edi,0x10000
  425cf1:	call   405340 <calloc@plt>
  425cf6:	test   rax,rax
  425cf9:	je     4277bb <__flatcc_fb_build_schema@@Base+0x1ccb>
  425cff:	mov    rdx,QWORD PTR [r15+0x58]
  425d03:	lea    rbx,[rax+0x10]
  425d07:	mov    QWORD PTR [rax],rdx
  425d0a:	lea    rdx,[rax+0x10000]
  425d11:	mov    QWORD PTR [r15+0x58],rax
  425d15:	mov    QWORD PTR [r15+0x50],rdx
  425d19:	add    rax,0x40
  425d1d:	jmp    425c80 <__flatcc_fb_build_schema@@Base+0x190>
  425d22:	nop    WORD PTR [rax+rax*1+0x0]
  425d28:	mov    rcx,QWORD PTR [r10+0x8]
  425d2c:	mov    r9,QWORD PTR [rcx+0x8]
  425d30:	mov    rcx,QWORD PTR [rcx]
  425d33:	test   r9,r9
  425d36:	je     425d54 <__flatcc_fb_build_schema@@Base+0x264>
  425d38:	add    r9,rcx
  425d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  425d40:	inc    rcx
  425d43:	movzx  esi,BYTE PTR [rcx-0x1]
  425d47:	xor    eax,esi
  425d49:	imul   eax,eax,0x1000193
  425d4f:	cmp    rcx,r9
  425d52:	jne    425d40 <__flatcc_fb_build_schema@@Base+0x250>
  425d54:	mov    r10,QWORD PTR [r10]
  425d57:	xor    eax,0x2e
  425d5a:	imul   eax,eax,0x1000193
  425d60:	test   r10,r10
  425d63:	jne    425d28 <__flatcc_fb_build_schema@@Base+0x238>
  425d65:	test   r8,r8
  425d68:	jne    425ba5 <__flatcc_fb_build_schema@@Base+0xb5>
  425d6e:	test   eax,eax
  425d70:	jne    4273f8 <__flatcc_fb_build_schema@@Base+0x1908>
  425d76:	mov    DWORD PTR [rbx+0xa0],0x811c9dc5
  425d80:	mov    QWORD PTR [rbx+0x20],r14
  425d84:	jmp    425bd8 <__flatcc_fb_build_schema@@Base+0xe8>
  425d89:	nop    DWORD PTR [rax+0x0]
  425d90:	mov    r10d,DWORD PTR [r15+0x124]
  425d97:	mov    rbp,QWORD PTR [r15+0x238]
  425d9e:	test   r10d,r10d
  425da1:	je     426c38 <__flatcc_fb_build_schema@@Base+0x1148>
  425da7:	test   rbp,rbp
  425daa:	je     4276ff <__flatcc_fb_build_schema@@Base+0x1c0f>
  425db0:	lea    rax,[rsp+0xa0]
  425db8:	mov    QWORD PTR [rsp+0x10],rax
  425dbd:	mov    QWORD PTR [rsp+0x30],r14
  425dc2:	cmp    WORD PTR [rbp+0x10],0x4
  425dc7:	ja     4269e8 <__flatcc_fb_build_schema@@Base+0xef8>
  425dcd:	movzx  eax,WORD PTR [rbp+0x10]
  425dd1:	lea    rcx,[rip+0x23d74]        # 449b4c <fb_schema_table_missing@@Base+0x268c>
  425dd8:	movsxd rax,DWORD PTR [rcx+rax*4]
  425ddc:	add    rax,rcx
  425ddf:	notrack jmp rax
  425de2:	nop    WORD PTR [rax+rax*1+0x0]
  425de8:	mov    rcx,QWORD PTR [rax+0x8]
  425dec:	mov    rsi,QWORD PTR [r12+0x8]
  425df1:	xor    r9d,r9d
  425df4:	xor    r8d,r8d
  425df7:	lea    rdx,[rip+0x236d2]        # 4494d0 <fb_schema_table_missing@@Base+0x2010>
  425dfe:	mov    rdi,r15
  425e01:	call   41e370 <__flatcc_error_report@@Base>
  425e06:	mov    r12,QWORD PTR [r12]
  425e0a:	test   r12,r12
  425e0d:	jne    4266a7 <__flatcc_fb_build_schema@@Base+0xbb7>
  425e13:	mov    eax,DWORD PTR [rsp+0x3c]
  425e17:	mov    rbp,QWORD PTR [rsp+0x28]
  425e1c:	test   eax,eax
  425e1e:	je     425e60 <__flatcc_fb_build_schema@@Base+0x370>
  425e20:	or     WORD PTR [rbp+0x12],0x8
  425e25:	cmp    eax,0x1
  425e28:	je     425e60 <__flatcc_fb_build_schema@@Base+0x370>
  425e2a:	mov    eax,DWORD PTR [r15+0x108]
  425e31:	test   eax,eax
  425e33:	jne    425e60 <__flatcc_fb_build_schema@@Base+0x370>
  425e35:	mov    rsi,QWORD PTR [rbp+0x8]
  425e39:	xor    r9d,r9d
  425e3c:	xor    r8d,r8d
  425e3f:	xor    ecx,ecx
  425e41:	lea    rdx,[rip+0x23590]        # 4493d8 <fb_schema_table_missing@@Base+0x1f18>
  425e48:	mov    rdi,r15
  425e4b:	call   41e370 <__flatcc_error_report@@Base>
  425e50:	mov    r13d,0x1
  425e56:	mov    WORD PTR [rbp+0x58],r13w
  425e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  425e60:	mov    rbp,QWORD PTR [rbp+0x0]
  425e64:	test   rbp,rbp
  425e67:	jne    425dc2 <__flatcc_fb_build_schema@@Base+0x2d2>
  425e6d:	mov    rbx,QWORD PTR [r15+0x238]
  425e74:	mov    r14,QWORD PTR [rsp+0x30]
  425e79:	test   rbx,rbx
  425e7c:	je     4276ff <__flatcc_fb_build_schema@@Base+0x1c0f>
  425e82:	nop    WORD PTR [rax+rax*1+0x0]
  425e88:	cmp    WORD PTR [rbx+0x10],0x1
  425e8d:	jne    425eb0 <__flatcc_fb_build_schema@@Base+0x3c0>
  425e8f:	cmp    WORD PTR [rbx+0x58],0x1
  425e94:	je     425eb0 <__flatcc_fb_build_schema@@Base+0x3c0>
  425e96:	mov    rsi,rbx
  425e99:	mov    rdi,r15
  425e9c:	call   4229a0 <__flatcc_fb_clear_parser@@Base+0x130>
  425ea1:	test   eax,eax
  425ea3:	jne    427530 <__flatcc_fb_build_schema@@Base+0x1a40>
  425ea9:	nop    DWORD PTR [rax+0x0]
  425eb0:	mov    rbx,QWORD PTR [rbx]
  425eb3:	test   rbx,rbx
  425eb6:	jne    425e88 <__flatcc_fb_build_schema@@Base+0x398>
  425eb8:	mov    r13,QWORD PTR [r15+0x238]
  425ebf:	test   r13,r13
  425ec2:	je     4276ff <__flatcc_fb_build_schema@@Base+0x1c0f>
  425ec8:	lea    rax,[rsp+0xa0]
  425ed0:	mov    QWORD PTR [rsp+0x20],rax
  425ed5:	nop    DWORD PTR [rax]
  425ed8:	movzx  eax,WORD PTR [r13+0x10]
  425edd:	test   ax,ax
  425ee0:	je     427180 <__flatcc_fb_build_schema@@Base+0x1690>
  425ee6:	cmp    ax,0x2
  425eea:	jne    426220 <__flatcc_fb_build_schema@@Base+0x730>
  425ef0:	movzx  eax,WORD PTR [r13+0x58]
  425ef5:	cmp    ax,0x1
  425ef9:	je     426220 <__flatcc_fb_build_schema@@Base+0x730>
  425eff:	test   ax,ax
  425f02:	jne    427806 <__flatcc_fb_build_schema@@Base+0x1d16>
  425f08:	cmp    QWORD PTR [r13+0x38],0x0
  425f0d:	je     425f2a <__flatcc_fb_build_schema@@Base+0x43a>
  425f0f:	mov    rsi,QWORD PTR [r13+0x8]
  425f13:	xor    r9d,r9d
  425f16:	xor    r8d,r8d
  425f19:	xor    ecx,ecx
  425f1b:	lea    rdx,[rip+0x2379e]        # 4496c0 <fb_schema_table_missing@@Base+0x2200>
  425f22:	mov    rdi,r15
  425f25:	call   41e370 <__flatcc_error_report@@Base>
  425f2a:	mov    rbp,QWORD PTR [r13+0x28]
  425f2e:	lea    rax,[r13+0x60]
  425f32:	mov    QWORD PTR [rsp+0x10],rax
  425f37:	test   rbp,rbp
  425f3a:	je     426220 <__flatcc_fb_build_schema@@Base+0x730>
  425f40:	mov    QWORD PTR [rsp+0x18],r13
  425f45:	nop    DWORD PTR [rax]
  425f48:	mov    rdi,QWORD PTR [rsp+0x10]
  425f4d:	mov    edx,0x1
  425f52:	mov    rsi,rbp
  425f55:	call   41bff0 <fb_symbol_table_insert_item@@Base>
  425f5a:	test   rax,rax
  425f5d:	jne    426fd0 <__flatcc_fb_build_schema@@Base+0x14e0>
  425f63:	cmp    WORD PTR [rbp+0x10],0x5
  425f68:	jne    427570 <__flatcc_fb_build_schema@@Base+0x1a80>
  425f6e:	cmp    WORD PTR [rbp+0x58],0x0
  425f73:	jne    427158 <__flatcc_fb_build_schema@@Base+0x1668>
  425f79:	movzx  eax,WORD PTR [rbp+0x28]
  425f7d:	cmp    ax,0x1
  425f81:	je     42620a <__flatcc_fb_build_schema@@Base+0x71a>
  425f87:	cmp    ax,0xc
  425f8b:	je     425fa8 <__flatcc_fb_build_schema@@Base+0x4b8>
  425f8d:	mov    rsi,QWORD PTR [rbp+0x8]
  425f91:	xor    r9d,r9d
  425f94:	xor    r8d,r8d
  425f97:	xor    ecx,ecx
  425f99:	lea    rdx,[rip+0x237a8]        # 449748 <fb_schema_table_missing@@Base+0x2288>
  425fa0:	mov    rdi,r15
  425fa3:	call   41e370 <__flatcc_error_report@@Base>
  425fa8:	mov    rax,QWORD PTR [rsp+0x18]
  425fad:	mov    r8,QWORD PTR [rbp+0x30]
  425fb1:	mov    rbx,QWORD PTR [rax+0x18]
  425fb5:	test   r8,r8
  425fb8:	je     426de4 <__flatcc_fb_build_schema@@Base+0x12f4>
  425fbe:	mov    r12,r8
  425fc1:	xor    edx,edx
  425fc3:	jmp    425fcd <__flatcc_fb_build_schema@@Base+0x4dd>
  425fc5:	nop    DWORD PTR [rax]
  425fc8:	mov    edx,eax
  425fca:	mov    r12,rsi
  425fcd:	mov    rsi,QWORD PTR [r12]
  425fd1:	lea    eax,[rdx+0x1]
  425fd4:	test   rsi,rsi
  425fd7:	jne    425fc8 <__flatcc_fb_build_schema@@Base+0x4d8>
  425fd9:	test   rbx,rbx
  425fdc:	je     427090 <__flatcc_fb_build_schema@@Base+0x15a0>
  425fe2:	cmp    eax,0x1
  425fe5:	jne    427090 <__flatcc_fb_build_schema@@Base+0x15a0>
  425feb:	nop    DWORD PTR [rax+rax*1+0x0]
  425ff0:	mov    rax,QWORD PTR [r12+0x8]
  425ff5:	lea    rdi,[rbx+0x8]
  425ff9:	mov    rdx,QWORD PTR [rax+0x8]
  425ffd:	mov    rsi,QWORD PTR [rax]
  426000:	call   41c010 <fb_symbol_table_find@@Base>
  426005:	mov    r13,rax
  426008:	test   rax,rax
  42600b:	je     426d60 <__flatcc_fb_build_schema@@Base+0x1270>
  426011:	cmp    WORD PTR [rax+0x10],0x4
  426016:	ja     426d60 <__flatcc_fb_build_schema@@Base+0x1270>
  42601c:	mov    rsi,QWORD PTR [rax+0x20]
  426020:	mov    rdi,QWORD PTR [rsp+0x8]
  426025:	call   41b8b0 <ptr_set_find_item@@Base>
  42602a:	test   rax,rax
  42602d:	je     426d60 <__flatcc_fb_build_schema@@Base+0x1270>
  426033:	cmp    WORD PTR [r13+0x10],0x0
  426039:	jne    427118 <__flatcc_fb_build_schema@@Base+0x1628>
  42603f:	mov    rax,QWORD PTR [rsp+0x18]
  426044:	mov    r8,QWORD PTR [rbp+0x18]
  426048:	mov    r10d,0xe
  42604e:	mov    WORD PTR [rbp+0x40],r10w
  426053:	mov    QWORD PTR [rbp+0x30],r13
  426057:	mov    rbx,QWORD PTR [rax+0x18]
  42605b:	test   r8,r8
  42605e:	je     426e9c <__flatcc_fb_build_schema@@Base+0x13ac>
  426064:	mov    r12,r8
  426067:	xor    edx,edx
  426069:	jmp    426075 <__flatcc_fb_build_schema@@Base+0x585>
  42606b:	nop    DWORD PTR [rax+rax*1+0x0]
  426070:	mov    edx,eax
  426072:	mov    r12,rsi
  426075:	mov    rsi,QWORD PTR [r12]
  426079:	lea    eax,[rdx+0x1]
  42607c:	test   rsi,rsi
  42607f:	jne    426070 <__flatcc_fb_build_schema@@Base+0x580>
  426081:	test   rbx,rbx
  426084:	je     427210 <__flatcc_fb_build_schema@@Base+0x1720>
  42608a:	cmp    eax,0x1
  42608d:	jne    427210 <__flatcc_fb_build_schema@@Base+0x1720>
  426093:	nop    DWORD PTR [rax+rax*1+0x0]
  426098:	mov    rax,QWORD PTR [r12+0x8]
  42609d:	lea    rdi,[rbx+0x8]
  4260a1:	mov    rdx,QWORD PTR [rax+0x8]
  4260a5:	mov    rsi,QWORD PTR [rax]
  4260a8:	call   41c010 <fb_symbol_table_find@@Base>
  4260ad:	mov    r13,rax
  4260b0:	test   rax,rax
  4260b3:	je     426e18 <__flatcc_fb_build_schema@@Base+0x1328>
  4260b9:	cmp    WORD PTR [rax+0x10],0x4
  4260be:	ja     426e18 <__flatcc_fb_build_schema@@Base+0x1328>
  4260c4:	mov    rsi,QWORD PTR [rax+0x20]
  4260c8:	mov    rdi,QWORD PTR [rsp+0x8]
  4260cd:	call   41b8b0 <ptr_set_find_item@@Base>
  4260d2:	test   rax,rax
  4260d5:	je     426e18 <__flatcc_fb_build_schema@@Base+0x1328>
  4260db:	movzx  r12d,WORD PTR [r13+0x10]
  4260e0:	test   r12w,r12w
  4260e4:	jne    427298 <__flatcc_fb_build_schema@@Base+0x17a8>
  4260ea:	mov    edi,0xe
  4260ef:	mov    WORD PTR [rbp+0x28],di
  4260f3:	mov    QWORD PTR [rbp+0x18],r13
  4260f7:	mov    rdi,QWORD PTR [rsp+0x20]
  4260fc:	mov    r13,QWORD PTR [rbp+0x60]
  426100:	mov    ecx,0xc
  426105:	xor    eax,eax
  426107:	mov    QWORD PTR [rbp+0x80],0x0
  426112:	rep stos QWORD PTR es:[rdi],rax
  426115:	test   r13,r13
  426118:	je     426205 <__flatcc_fb_build_schema@@Base+0x715>
  42611e:	mov    QWORD PTR [rsp+0x28],rbp
  426123:	mov    ebx,0x64
  426128:	mov    rbp,QWORD PTR [rsp+0x20]
  42612d:	jmp    426167 <__flatcc_fb_build_schema@@Base+0x677>
  42612f:	nop
  426130:	lea    rcx,[rip+0x23b89]        # 449cc0 <fb_schema_table_missing@@Base+0x2800>
  426137:	mov    eax,DWORD PTR [rcx+rax*4]
  42613a:	mov    QWORD PTR [rdx],r13
  42613d:	test   eax,eax
  42613f:	jne    427010 <__flatcc_fb_build_schema@@Base+0x1520>
  426145:	cmp    WORD PTR [r13+0x20],0x0
  42614b:	jne    427550 <__flatcc_fb_build_schema@@Base+0x1a60>
  426151:	nop    DWORD PTR [rax+0x0]
  426158:	mov    r13,QWORD PTR [r13+0x0]
  42615c:	dec    ebx
  42615e:	test   r13,r13
  426161:	je     4261e0 <__flatcc_fb_build_schema@@Base+0x6f0>
  426163:	test   ebx,ebx
  426165:	je     4261e0 <__flatcc_fb_build_schema@@Base+0x6f0>
  426167:	mov    rax,QWORD PTR [r13+0x8]
  42616b:	mov    rcx,QWORD PTR [r15+0x260]
  426172:	mov    rdx,QWORD PTR [rax+0x8]
  426176:	mov    rsi,QWORD PTR [rax]
  426179:	lea    rdi,[rcx+0x20]
  42617d:	call   42d230 <fb_name_table_find@@Base>
  426182:	test   rax,rax
  426185:	je     4271f0 <__flatcc_fb_build_schema@@Base+0x1700>
  42618b:	movsxd rax,DWORD PTR [rax+0x20]
  42618f:	test   eax,eax
  426191:	je     426158 <__flatcc_fb_build_schema@@Base+0x668>
  426193:	cmp    al,0x2
  426195:	jne    4271c0 <__flatcc_fb_build_schema@@Base+0x16d0>
  42619b:	mov    edx,0x1
  4261a0:	shlx   edx,edx,eax
  4261a5:	or     r12d,edx
  4261a8:	lea    rdx,[rbp+rax*8+0x0]
  4261ad:	cmp    QWORD PTR [rdx],0x0
  4261b1:	je     426130 <__flatcc_fb_build_schema@@Base+0x640>
  4261b7:	mov    rsi,QWORD PTR [r13+0x8]
  4261bb:	xor    r9d,r9d
  4261be:	xor    r8d,r8d
  4261c1:	xor    ecx,ecx
  4261c3:	lea    rdx,[rip+0x22576]        # 448740 <fb_schema_table_missing@@Base+0x1280>
  4261ca:	mov    rdi,r15
  4261cd:	call   41e370 <__flatcc_error_report@@Base>
  4261d2:	mov    r13,QWORD PTR [r13+0x0]
  4261d6:	dec    ebx
  4261d8:	test   r13,r13
  4261db:	jne    426163 <__flatcc_fb_build_schema@@Base+0x673>
  4261dd:	nop    DWORD PTR [rax]
  4261e0:	mov    rbp,QWORD PTR [rsp+0x28]
  4261e5:	test   r13,r13
  4261e8:	je     426205 <__flatcc_fb_build_schema@@Base+0x715>
  4261ea:	mov    rsi,QWORD PTR [r13+0x8]
  4261ee:	xor    r9d,r9d
  4261f1:	xor    r8d,r8d
  4261f4:	xor    ecx,ecx
  4261f6:	lea    rdx,[rip+0x2370b]        # 449908 <fb_schema_table_missing@@Base+0x2448>
  4261fd:	mov    rdi,r15
  426200:	call   41e370 <__flatcc_error_report@@Base>
  426205:	mov    WORD PTR [rbp+0x70],r12w
  42620a:	mov    rbp,QWORD PTR [rbp+0x0]
  42620e:	test   rbp,rbp
  426211:	jne    425f48 <__flatcc_fb_build_schema@@Base+0x458>
  426217:	mov    r13,QWORD PTR [rsp+0x18]
  42621c:	nop    DWORD PTR [rax+0x0]
  426220:	mov    r13,QWORD PTR [r13+0x0]
  426224:	test   r13,r13
  426227:	jne    425ed8 <__flatcc_fb_build_schema@@Base+0x3e8>
  42622d:	mov    rax,QWORD PTR [r15+0x240]
  426234:	mov    rdx,QWORD PTR [r15+0x238]
  42623b:	test   rax,rax
  42623e:	je     426261 <__flatcc_fb_build_schema@@Base+0x771>
  426240:	xor    esi,esi
  426242:	jmp    42624b <__flatcc_fb_build_schema@@Base+0x75b>
  426244:	nop    DWORD PTR [rax+0x0]
  426248:	mov    rax,rcx
  42624b:	mov    rcx,QWORD PTR [rax+0xc0]
  426252:	mov    QWORD PTR [rax+0xc0],rsi
  426259:	mov    rsi,rax
  42625c:	test   rcx,rcx
  42625f:	jne    426248 <__flatcc_fb_build_schema@@Base+0x758>
  426261:	mov    QWORD PTR [r15+0x240],rax
  426268:	test   rdx,rdx
  42626b:	je     426421 <__flatcc_fb_build_schema@@Base+0x931>
  426271:	lea    rdi,[rsp+0x90]
  426279:	mov    esi,0x1
  42627e:	mov    ecx,0x7
  426283:	lea    r8,[rsp+0x48]
  426288:	nop    DWORD PTR [rax+rax*1+0x0]
  426290:	cmp    WORD PTR [rdx+0x10],0x0
  426295:	jne    426415 <__flatcc_fb_build_schema@@Base+0x925>
  42629b:	mov    r10,QWORD PTR [rdx+0x28]
  42629f:	test   BYTE PTR [rdx+0xa4],0x8
  4262a6:	jne    427330 <__flatcc_fb_build_schema@@Base+0x1840>
  4262ac:	vpxor  xmm0,xmm0,xmm0
  4262b0:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  4262b6:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  4262bc:	vmovaps XMMWORD PTR [rsp+0x70],xmm0
  4262c2:	vmovaps XMMWORD PTR [rsp+0x80],xmm0
  4262cb:	mov    QWORD PTR [rsp+0x90],0x0
  4262d7:	vmovaps XMMWORD PTR [rsp+0xa0],xmm0
  4262e0:	vmovaps XMMWORD PTR [rsp+0xb0],xmm0
  4262e9:	vmovaps XMMWORD PTR [rsp+0xc0],xmm0
  4262f2:	vmovaps XMMWORD PTR [rsp+0xd0],xmm0
  4262fb:	mov    QWORD PTR [rsp+0xe0],0x0
  426307:	test   r10,r10
  42630a:	je     4263cc <__flatcc_fb_build_schema@@Base+0x8dc>
  426310:	mov    r11,r10
  426313:	nop    DWORD PTR [rax+rax*1+0x0]
  426318:	movzx  eax,WORD PTR [r11+0x28]
  42631d:	movzx  r9d,WORD PTR [r11+0x72]
  426322:	cmp    ax,0xf
  426326:	ja     426366 <__flatcc_fb_build_schema@@Base+0x876>
  426328:	shlx   rax,rsi,rax
  42632d:	test   eax,0x8680
  426332:	jne    42635e <__flatcc_fb_build_schema@@Base+0x86e>
  426334:	test   al,0x2
  426336:	jne    4275a0 <__flatcc_fb_build_schema@@Base+0x1ab0>
  42633c:	test   ah,0x40
  42633f:	je     426366 <__flatcc_fb_build_schema@@Base+0x876>
  426341:	mov    r9,QWORD PTR [r11+0x18]
  426345:	movzx  eax,WORD PTR [r9+0x10]
  42634a:	cmp    ax,0x1
  42634e:	je     4271e0 <__flatcc_fb_build_schema@@Base+0x16f0>
  426354:	cmp    ax,0x3
  426358:	je     4271e0 <__flatcc_fb_build_schema@@Base+0x16f0>
  42635e:	movzx  r9d,WORD PTR [r15+0x12c]
  426366:	test   r9w,r9w
  42636a:	je     42779c <__flatcc_fb_build_schema@@Base+0x1cac>
  426370:	xor    eax,eax
  426372:	shr    r9w,1
  426376:	je     426fc0 <__flatcc_fb_build_schema@@Base+0x14d0>
  42637c:	nop    DWORD PTR [rax+0x0]
  426380:	inc    eax
  426382:	shr    r9w,1
  426386:	jne    426380 <__flatcc_fb_build_schema@@Base+0x890>
  426388:	cmp    ax,0x7
  42638c:	cmova  eax,ecx
  42638f:	movzx  eax,ax
  426392:	cmp    QWORD PTR [rsp+rax*8+0x50],0x0
  426398:	je     426f70 <__flatcc_fb_build_schema@@Base+0x1480>
  42639e:	mov    r9,QWORD PTR [rsp+rax*8+0xa0]
  4263a6:	mov    QWORD PTR [r9],r11
  4263a9:	lea    r9,[r11+0x98]
  4263b0:	mov    r11,QWORD PTR [r11]
  4263b3:	mov    QWORD PTR [rsp+rax*8+0xa0],r9
  4263bb:	test   r11,r11
  4263be:	jne    426318 <__flatcc_fb_build_schema@@Base+0x828>
  4263c4:	mov    r10,QWORD PTR [rsp+0x88]
  4263cc:	mov    QWORD PTR [rsp+0xe0],rdi
  4263d4:	mov    r11,rdi
  4263d7:	mov    eax,0x8
  4263dc:	jmp    4263ee <__flatcc_fb_build_schema@@Base+0x8fe>
  4263de:	xchg   ax,ax
  4263e0:	sub    eax,0x2
  4263e3:	movzx  eax,ax
  4263e6:	mov    r10,QWORD PTR [rsp+rax*8+0x50]
  4263eb:	mov    eax,r9d
  4263ee:	lea    r9d,[rax-0x1]
  4263f2:	test   r10,r10
  4263f5:	jne    426f80 <__flatcc_fb_build_schema@@Base+0x1490>
  4263fb:	test   r9w,r9w
  4263ff:	jne    4263e0 <__flatcc_fb_build_schema@@Base+0x8f0>
  426401:	mov    rax,QWORD PTR [rsp+0x50]
  426406:	mov    QWORD PTR [r11],rax
  426409:	mov    rax,QWORD PTR [rsp+0x90]
  426411:	mov    QWORD PTR [rdx+0x30],rax
  426415:	mov    rdx,QWORD PTR [rdx]
  426418:	test   rdx,rdx
  42641b:	jne    426290 <__flatcc_fb_build_schema@@Base+0x7a0>
  426421:	mov    r8,QWORD PTR [r15+0x248]
  426428:	test   r8,r8
  42642b:	je     4273c8 <__flatcc_fb_build_schema@@Base+0x18d8>
  426431:	mov    rbp,QWORD PTR [r15+0x258]
  426438:	mov    r12,r8
  42643b:	xor    eax,eax
  42643d:	jmp    426445 <__flatcc_fb_build_schema@@Base+0x955>
  42643f:	nop
  426440:	mov    eax,edx
  426442:	mov    r12,rsi
  426445:	mov    rsi,QWORD PTR [r12]
  426449:	lea    edx,[rax+0x1]
  42644c:	test   rsi,rsi
  42644f:	jne    426440 <__flatcc_fb_build_schema@@Base+0x950>
  426451:	test   rbp,rbp
  426454:	je     4275ea <__flatcc_fb_build_schema@@Base+0x1afa>
  42645a:	cmp    edx,0x1
  42645d:	jne    4275ea <__flatcc_fb_build_schema@@Base+0x1afa>
  426463:	nop    DWORD PTR [rax+rax*1+0x0]
  426468:	mov    rax,QWORD PTR [r12+0x8]
  42646d:	lea    rdi,[rbp+0x8]
  426471:	mov    rdx,QWORD PTR [rax+0x8]
  426475:	mov    rsi,QWORD PTR [rax]
  426478:	call   41c010 <fb_symbol_table_find@@Base>
  42647d:	mov    rbx,rax
  426480:	test   rax,rax
  426483:	je     427410 <__flatcc_fb_build_schema@@Base+0x1920>
  426489:	cmp    WORD PTR [rax+0x10],0x4
  42648e:	ja     427410 <__flatcc_fb_build_schema@@Base+0x1920>
  426494:	mov    rsi,QWORD PTR [rax+0x20]
  426498:	mov    rdi,QWORD PTR [rsp+0x8]
  42649d:	call   41b8b0 <ptr_set_find_item@@Base>
  4264a2:	test   rax,rax
  4264a5:	je     427410 <__flatcc_fb_build_schema@@Base+0x1920>
  4264ab:	mov    edx,DWORD PTR [r15+0x11c]
  4264b2:	mov    QWORD PTR [r15+0x250],rbx
  4264b9:	movzx  eax,WORD PTR [rbx+0x10]
  4264bd:	test   edx,edx
  4264bf:	je     427668 <__flatcc_fb_build_schema@@Base+0x1b78>
  4264c5:	cmp    ax,0x1
  4264c9:	ja     42768e <__flatcc_fb_build_schema@@Base+0x1b9e>
  4264cf:	mov    QWORD PTR [r15+0x248],0x0
  4264da:	jmp    4273d7 <__flatcc_fb_build_schema@@Base+0x18e7>
  4264df:	nop
  4264e0:	mov    r14d,DWORD PTR [r15+0x124]
  4264e7:	test   r14d,r14d
  4264ea:	je     425e60 <__flatcc_fb_build_schema@@Base+0x370>
  4264f0:	mov    rsi,rbp
  4264f3:	mov    rdi,r15
  4264f6:	call   422e70 <__flatcc_fb_clear_parser@@Base+0x600>
  4264fb:	test   eax,eax
  4264fd:	jne    425e50 <__flatcc_fb_build_schema@@Base+0x360>
  426503:	mov    rbp,QWORD PTR [rbp+0x0]
  426507:	test   rbp,rbp
  42650a:	jne    425dc2 <__flatcc_fb_build_schema@@Base+0x2d2>
  426510:	jmp    425e6d <__flatcc_fb_build_schema@@Base+0x37d>
  426515:	nop    DWORD PTR [rax]
  426518:	cmp    WORD PTR [rbp+0x58],0x0
  42651d:	jne    427716 <__flatcc_fb_build_schema@@Base+0x1c26>
  426523:	mov    rdi,QWORD PTR [rsp+0x10]
  426528:	mov    r13,QWORD PTR [rbp+0x38]
  42652c:	mov    ecx,0xc
  426531:	xor    eax,eax
  426533:	rep stos QWORD PTR es:[rdi],rax
  426536:	xor    r12d,r12d
  426539:	mov    ebx,0x64
  42653e:	mov    r14,QWORD PTR [rsp+0x10]
  426543:	test   r13,r13
  426546:	jne    426587 <__flatcc_fb_build_schema@@Base+0xa97>
  426548:	jmp    4275da <__flatcc_fb_build_schema@@Base+0x1aea>
  42654d:	nop    DWORD PTR [rax]
  426550:	lea    rcx,[rip+0x23769]        # 449cc0 <fb_schema_table_missing@@Base+0x2800>
  426557:	mov    eax,DWORD PTR [rcx+rax*4]
  42655a:	mov    QWORD PTR [rdx],r13
  42655d:	test   eax,eax
  42655f:	jne    426948 <__flatcc_fb_build_schema@@Base+0xe58>
  426565:	cmp    WORD PTR [r13+0x20],0x0
  42656b:	jne    427510 <__flatcc_fb_build_schema@@Base+0x1a20>
  426571:	nop    DWORD PTR [rax+0x0]
  426578:	mov    r13,QWORD PTR [r13+0x0]
  42657c:	dec    ebx
  42657e:	test   r13,r13
  426581:	je     426600 <__flatcc_fb_build_schema@@Base+0xb10>
  426583:	test   ebx,ebx
  426585:	je     426600 <__flatcc_fb_build_schema@@Base+0xb10>
  426587:	mov    rax,QWORD PTR [r13+0x8]
  42658b:	mov    rcx,QWORD PTR [r15+0x260]
  426592:	mov    rdx,QWORD PTR [rax+0x8]
  426596:	mov    rsi,QWORD PTR [rax]
  426599:	lea    rdi,[rcx+0x20]
  42659d:	call   42d230 <fb_name_table_find@@Base>
  4265a2:	test   rax,rax
  4265a5:	je     426bc0 <__flatcc_fb_build_schema@@Base+0x10d0>
  4265ab:	movsxd rax,DWORD PTR [rax+0x20]
  4265af:	test   eax,eax
  4265b1:	je     426578 <__flatcc_fb_build_schema@@Base+0xa88>
  4265b3:	cmp    al,0x4
  4265b5:	jne    426a38 <__flatcc_fb_build_schema@@Base+0xf48>
  4265bb:	mov    edx,0x1
  4265c0:	shlx   edx,edx,eax
  4265c5:	or     r12d,edx
  4265c8:	lea    rdx,[r14+rax*8]
  4265cc:	cmp    QWORD PTR [rdx],0x0
  4265d0:	je     426550 <__flatcc_fb_build_schema@@Base+0xa60>
  4265d6:	mov    rsi,QWORD PTR [r13+0x8]
  4265da:	xor    r9d,r9d
  4265dd:	xor    r8d,r8d
  4265e0:	xor    ecx,ecx
  4265e2:	lea    rdx,[rip+0x22157]        # 448740 <fb_schema_table_missing@@Base+0x1280>
  4265e9:	mov    rdi,r15
  4265ec:	call   41e370 <__flatcc_error_report@@Base>
  4265f1:	mov    r13,QWORD PTR [r13+0x0]
  4265f5:	dec    ebx
  4265f7:	test   r13,r13
  4265fa:	jne    426583 <__flatcc_fb_build_schema@@Base+0xa93>
  4265fc:	nop    DWORD PTR [rax+0x0]
  426600:	mov    rbx,QWORD PTR [rsp+0xc0]
  426608:	test   r13,r13
  42660b:	je     426628 <__flatcc_fb_build_schema@@Base+0xb38>
  42660d:	mov    rsi,QWORD PTR [r13+0x8]
  426611:	xor    r9d,r9d
  426614:	xor    r8d,r8d
  426617:	xor    ecx,ecx
  426619:	lea    rdx,[rip+0x232e8]        # 449908 <fb_schema_table_missing@@Base+0x2448>
  426620:	mov    rdi,r15
  426623:	call   41e370 <__flatcc_error_report@@Base>
  426628:	mov    WORD PTR [rbp+0xa4],r12w
  426630:	test   rbx,rbx
  426633:	je     426684 <__flatcc_fb_build_schema@@Base+0xb94>
  426635:	mov    rdx,QWORD PTR [rbx+0x10]
  426639:	lea    rax,[rdx-0x1]
  42663d:	cmp    rax,0xff
  426643:	ja     426669 <__flatcc_fb_build_schema@@Base+0xb79>
  426645:	cmp    rdx,0x1
  426649:	je     427540 <__flatcc_fb_build_schema@@Base+0x1a50>
  42664f:	mov    eax,0x2
  426654:	nop    DWORD PTR [rax+0x0]
  426658:	cmp    rdx,rax
  42665b:	je     427540 <__flatcc_fb_build_schema@@Base+0x1a50>
  426661:	add    rax,rax
  426664:	cmp    rdx,rax
  426667:	jae    426658 <__flatcc_fb_build_schema@@Base+0xb68>
  426669:	mov    rsi,QWORD PTR [rbp+0x8]
  42666d:	xor    r9d,r9d
  426670:	xor    r8d,r8d
  426673:	xor    ecx,ecx
  426675:	lea    rdx,[rip+0x22e04]        # 449480 <fb_schema_table_missing@@Base+0x1fc0>
  42667c:	mov    rdi,r15
  42667f:	call   41e370 <__flatcc_error_report@@Base>
  426684:	mov    r12,QWORD PTR [rbp+0x28]
  426688:	test   r12,r12
  42668b:	je     425e60 <__flatcc_fb_build_schema@@Base+0x370>
  426691:	lea    rax,[rbp+0x60]
  426695:	mov    QWORD PTR [rsp+0x18],rax
  42669a:	mov    DWORD PTR [rsp+0x3c],0x0
  4266a2:	mov    QWORD PTR [rsp+0x28],rbp
  4266a7:	mov    rdi,QWORD PTR [rsp+0x18]
  4266ac:	mov    edx,0x1
  4266b1:	mov    rsi,r12
  4266b4:	call   41bff0 <fb_symbol_table_insert_item@@Base>
  4266b9:	test   rax,rax
  4266bc:	jne    425de8 <__flatcc_fb_build_schema@@Base+0x2f8>
  4266c2:	cmp    WORD PTR [r12+0x10],0x5
  4266c9:	jne    4276d9 <__flatcc_fb_build_schema@@Base+0x1be9>
  4266cf:	mov    esi,DWORD PTR [r15+0x118]
  4266d6:	xor    ebp,ebp
  4266d8:	mov    edi,DWORD PTR [r15+0x114]
  4266df:	test   esi,esi
  4266e1:	setne  bpl
  4266e5:	shl    ebp,0x7
  4266e8:	test   edi,edi
  4266ea:	je     4266ef <__flatcc_fb_build_schema@@Base+0xbff>
  4266ec:	or     ebp,0x4
  4266ef:	mov    rdi,QWORD PTR [rsp+0x10]
  4266f4:	mov    r14,QWORD PTR [r12+0x60]
  4266f9:	mov    ecx,0xc
  4266fe:	xor    eax,eax
  426700:	movzx  ebp,bp
  426703:	rep stos QWORD PTR es:[rdi],rax
  426706:	test   r14,r14
  426709:	je     4273a8 <__flatcc_fb_build_schema@@Base+0x18b8>
  42670f:	mov    QWORD PTR [rsp+0x20],r12
  426714:	xor    r13d,r13d
  426717:	mov    ebx,0x64
  42671c:	mov    r12,QWORD PTR [rsp+0x10]
  426721:	jmp    42675e <__flatcc_fb_build_schema@@Base+0xc6e>
  426723:	nop    DWORD PTR [rax+rax*1+0x0]
  426728:	lea    rcx,[rip+0x23591]        # 449cc0 <fb_schema_table_missing@@Base+0x2800>
  42672f:	mov    eax,DWORD PTR [rcx+rax*4]
  426732:	mov    QWORD PTR [rdx],r14
  426735:	test   eax,eax
  426737:	jne    426a60 <__flatcc_fb_build_schema@@Base+0xf70>
  42673d:	cmp    WORD PTR [r14+0x20],0x0
  426743:	jne    4272d8 <__flatcc_fb_build_schema@@Base+0x17e8>
  426749:	nop    DWORD PTR [rax+0x0]
  426750:	mov    r14,QWORD PTR [r14]
  426753:	dec    ebx
  426755:	test   r14,r14
  426758:	je     4267d8 <__flatcc_fb_build_schema@@Base+0xce8>
  42675a:	test   ebx,ebx
  42675c:	je     4267d8 <__flatcc_fb_build_schema@@Base+0xce8>
  42675e:	mov    rax,QWORD PTR [r14+0x8]
  426762:	mov    rcx,QWORD PTR [r15+0x260]
  426769:	mov    rdx,QWORD PTR [rax+0x8]
  42676d:	mov    rsi,QWORD PTR [rax]
  426770:	lea    rdi,[rcx+0x20]
  426774:	call   42d230 <fb_name_table_find@@Base>
  426779:	test   rax,rax
  42677c:	je     426b00 <__flatcc_fb_build_schema@@Base+0x1010>
  426782:	movsxd rax,DWORD PTR [rax+0x20]
  426786:	test   eax,eax
  426788:	je     426750 <__flatcc_fb_build_schema@@Base+0xc60>
  42678a:	bt     ebp,eax
  42678d:	jae    426ae0 <__flatcc_fb_build_schema@@Base+0xff0>
  426793:	mov    edx,0x1
  426798:	shlx   edx,edx,eax
  42679d:	or     r13d,edx
  4267a0:	lea    rdx,[r12+rax*8]
  4267a4:	cmp    QWORD PTR [rdx],0x0
  4267a8:	je     426728 <__flatcc_fb_build_schema@@Base+0xc38>
  4267ae:	mov    rsi,QWORD PTR [r14+0x8]
  4267b2:	xor    r9d,r9d
  4267b5:	xor    r8d,r8d
  4267b8:	xor    ecx,ecx
  4267ba:	lea    rdx,[rip+0x21f7f]        # 448740 <fb_schema_table_missing@@Base+0x1280>
  4267c1:	mov    rdi,r15
  4267c4:	call   41e370 <__flatcc_error_report@@Base>
  4267c9:	mov    r14,QWORD PTR [r14]
  4267cc:	dec    ebx
  4267ce:	test   r14,r14
  4267d1:	jne    42675a <__flatcc_fb_build_schema@@Base+0xc6a>
  4267d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4267d8:	mov    r12,QWORD PTR [rsp+0x20]
  4267dd:	test   r14,r14
  4267e0:	je     4267fd <__flatcc_fb_build_schema@@Base+0xd0d>
  4267e2:	mov    rsi,QWORD PTR [r14+0x8]
  4267e6:	xor    r9d,r9d
  4267e9:	xor    r8d,r8d
  4267ec:	xor    ecx,ecx
  4267ee:	lea    rdx,[rip+0x23113]        # 449908 <fb_schema_table_missing@@Base+0x2448>
  4267f5:	mov    rdi,r15
  4267f8:	call   41e370 <__flatcc_error_report@@Base>
  4267fd:	movzx  eax,WORD PTR [r12+0x28]
  426803:	mov    WORD PTR [r12+0x70],r13w
  426809:	cmp    ax,0x8
  42680d:	je     426be0 <__flatcc_fb_build_schema@@Base+0x10f0>
  426813:	cmp    ax,0xc
  426817:	jne    426b88 <__flatcc_fb_build_schema@@Base+0x1098>
  42681d:	mov    rax,QWORD PTR [rsp+0x28]
  426822:	mov    r8,QWORD PTR [r12+0x18]
  426827:	mov    rbx,QWORD PTR [rax+0x18]
  42682b:	test   r8,r8
  42682e:	je     426d35 <__flatcc_fb_build_schema@@Base+0x1245>
  426834:	mov    rbp,r8
  426837:	xor    edx,edx
  426839:	jmp    426845 <__flatcc_fb_build_schema@@Base+0xd55>
  42683b:	nop    DWORD PTR [rax+rax*1+0x0]
  426840:	mov    edx,eax
  426842:	mov    rbp,rsi
  426845:	mov    rsi,QWORD PTR [rbp+0x0]
  426849:	lea    eax,[rdx+0x1]
  42684c:	test   rsi,rsi
  42684f:	jne    426840 <__flatcc_fb_build_schema@@Base+0xd50>
  426851:	test   rbx,rbx
  426854:	je     426cc8 <__flatcc_fb_build_schema@@Base+0x11d8>
  42685a:	mov    r14,QWORD PTR [rsp+0x30]
  42685f:	cmp    eax,0x1
  426862:	jne    426cc8 <__flatcc_fb_build_schema@@Base+0x11d8>
  426868:	nop    DWORD PTR [rax+rax*1+0x0]
  426870:	mov    rax,QWORD PTR [rbp+0x8]
  426874:	lea    rdi,[rbx+0x8]
  426878:	mov    rdx,QWORD PTR [rax+0x8]
  42687c:	mov    rsi,QWORD PTR [rax]
  42687f:	call   41c010 <fb_symbol_table_find@@Base>
  426884:	mov    r13,rax
  426887:	test   rax,rax
  42688a:	je     426ed0 <__flatcc_fb_build_schema@@Base+0x13e0>
  426890:	cmp    WORD PTR [rax+0x10],0x4
  426895:	ja     426ed0 <__flatcc_fb_build_schema@@Base+0x13e0>
  42689b:	mov    rsi,QWORD PTR [rax+0x20]
  42689f:	mov    rdi,QWORD PTR [rsp+0x8]
  4268a4:	call   41b8b0 <ptr_set_find_item@@Base>
  4268a9:	test   rax,rax
  4268ac:	je     426ed0 <__flatcc_fb_build_schema@@Base+0x13e0>
  4268b2:	movzx  eax,WORD PTR [r13+0x10]
  4268b7:	mov    ecx,0xe
  4268bc:	mov    QWORD PTR [r12+0x18],r13
  4268c1:	mov    WORD PTR [r12+0x28],cx
  4268c7:	cmp    ax,0x1
  4268cb:	je     4274d0 <__flatcc_fb_build_schema@@Base+0x19e0>
  4268d1:	mov    edx,DWORD PTR [r15+0x104]
  4268d8:	test   edx,edx
  4268da:	je     427736 <__flatcc_fb_build_schema@@Base+0x1c46>
  4268e0:	cmp    ax,0x3
  4268e4:	jne    427769 <__flatcc_fb_build_schema@@Base+0x1c79>
  4268ea:	test   BYTE PTR [r12+0x70],0x80
  4268f0:	je     426bf0 <__flatcc_fb_build_schema@@Base+0x1100>
  4268f6:	mov    eax,DWORD PTR [r15+0x100]
  4268fd:	test   eax,eax
  4268ff:	je     4274dc <__flatcc_fb_build_schema@@Base+0x19ec>
  426905:	inc    DWORD PTR [rsp+0x3c]
  426909:	cmp    WORD PTR [r12+0x58],0x0
  426910:	je     425e06 <__flatcc_fb_build_schema@@Base+0x316>
  426916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426920:	mov    rsi,QWORD PTR [r12+0x8]
  426925:	xor    r9d,r9d
  426928:	xor    r8d,r8d
  42692b:	xor    ecx,ecx
  42692d:	lea    rdx,[rip+0x22d1c]        # 449650 <fb_schema_table_missing@@Base+0x2190>
  426934:	mov    rdi,r15
  426937:	call   41e370 <__flatcc_error_report@@Base>
  42693c:	jmp    425e06 <__flatcc_fb_build_schema@@Base+0x316>
  426941:	nop    DWORD PTR [rax+0x0]
  426948:	cmp    eax,0x2
  42694b:	jne    426980 <__flatcc_fb_build_schema@@Base+0xe90>
  42694d:	cmp    WORD PTR [r13+0x20],0x2
  426953:	je     426578 <__flatcc_fb_build_schema@@Base+0xa88>
  426959:	mov    rsi,QWORD PTR [r13+0x8]
  42695d:	xor    r9d,r9d
  426960:	xor    r8d,r8d
  426963:	xor    ecx,ecx
  426965:	lea    rdx,[rip+0x21e24]        # 448790 <fb_schema_table_missing@@Base+0x12d0>
  42696c:	mov    rdi,r15
  42696f:	call   41e370 <__flatcc_error_report@@Base>
  426974:	jmp    426578 <__flatcc_fb_build_schema@@Base+0xa88>
  426979:	nop    DWORD PTR [rax+0x0]
  426980:	cmp    eax,0x5
  426983:	je     426c08 <__flatcc_fb_build_schema@@Base+0x1118>
  426989:	cmp    eax,0x4
  42698c:	jne    426c90 <__flatcc_fb_build_schema@@Base+0x11a0>
  426992:	movzx  eax,WORD PTR [r13+0x20]
  426997:	sub    eax,0x4
  42699a:	cmp    ax,0x1
  42699e:	jbe    426578 <__flatcc_fb_build_schema@@Base+0xa88>
  4269a4:	mov    rsi,QWORD PTR [r13+0x8]
  4269a8:	xor    r9d,r9d
  4269ab:	xor    r8d,r8d
  4269ae:	xor    ecx,ecx
  4269b0:	lea    rdx,[rip+0x21e31]        # 4487e8 <fb_schema_table_missing@@Base+0x1328>
  4269b7:	mov    rdi,r15
  4269ba:	call   41e370 <__flatcc_error_report@@Base>
  4269bf:	jmp    426578 <__flatcc_fb_build_schema@@Base+0xa88>
  4269c4:	nop    DWORD PTR [rax+0x0]
  4269c8:	mov    eax,0x811c9dc5
  4269cd:	test   r8,r8
  4269d0:	jne    425ba5 <__flatcc_fb_build_schema@@Base+0xb5>
  4269d6:	mov    DWORD PTR [rbx+0xa0],eax
  4269dc:	mov    QWORD PTR [rbx+0x20],r14
  4269e0:	jmp    425b60 <__flatcc_fb_build_schema@@Base+0x70>
  4269e5:	nop    DWORD PTR [rax]
  4269e8:	mov    rsi,QWORD PTR [rbp+0x8]
  4269ec:	xor    r9d,r9d
  4269ef:	xor    r8d,r8d
  4269f2:	xor    ecx,ecx
  4269f4:	lea    rdx,[rip+0x22c8d]        # 449688 <fb_schema_table_missing@@Base+0x21c8>
  4269fb:	mov    rdi,r15
  4269fe:	call   41e370 <__flatcc_error_report@@Base>
  426a03:	mov    eax,0xffffffff
  426a08:	mov    rcx,QWORD PTR [rsp+0x108]
  426a10:	xor    rcx,QWORD PTR fs:0x28
  426a19:	jne    427801 <__flatcc_fb_build_schema@@Base+0x1d11>
  426a1f:	add    rsp,0x118
  426a26:	pop    rbx
  426a27:	pop    rbp
  426a28:	pop    r12
  426a2a:	pop    r13
  426a2c:	pop    r14
  426a2e:	pop    r15
  426a30:	ret    
  426a31:	nop    DWORD PTR [rax+0x0]
  426a38:	mov    rsi,QWORD PTR [r13+0x8]
  426a3c:	xor    r9d,r9d
  426a3f:	xor    r8d,r8d
  426a42:	xor    ecx,ecx
  426a44:	lea    rdx,[rip+0x21cc5]        # 448710 <fb_schema_table_missing@@Base+0x1250>
  426a4b:	mov    rdi,r15
  426a4e:	call   41e370 <__flatcc_error_report@@Base>
  426a53:	jmp    426578 <__flatcc_fb_build_schema@@Base+0xa88>
  426a58:	nop    DWORD PTR [rax+rax*1+0x0]
  426a60:	cmp    eax,0x2
  426a63:	jne    426a98 <__flatcc_fb_build_schema@@Base+0xfa8>
  426a65:	cmp    WORD PTR [r14+0x20],0x2
  426a6b:	je     426750 <__flatcc_fb_build_schema@@Base+0xc60>
  426a71:	mov    rsi,QWORD PTR [r14+0x8]
  426a75:	xor    r9d,r9d
  426a78:	xor    r8d,r8d
  426a7b:	xor    ecx,ecx
  426a7d:	lea    rdx,[rip+0x21d0c]        # 448790 <fb_schema_table_missing@@Base+0x12d0>
  426a84:	mov    rdi,r15
  426a87:	call   41e370 <__flatcc_error_report@@Base>
  426a8c:	jmp    426750 <__flatcc_fb_build_schema@@Base+0xc60>
  426a91:	nop    DWORD PTR [rax+0x0]
  426a98:	cmp    eax,0x5
  426a9b:	je     426b20 <__flatcc_fb_build_schema@@Base+0x1030>
  426aa1:	cmp    eax,0x4
  426aa4:	jne    426b50 <__flatcc_fb_build_schema@@Base+0x1060>
  426aaa:	movzx  eax,WORD PTR [r14+0x20]
  426aaf:	sub    eax,0x4
  426ab2:	cmp    ax,0x1
  426ab6:	jbe    426750 <__flatcc_fb_build_schema@@Base+0xc60>
  426abc:	mov    rsi,QWORD PTR [r14+0x8]
  426ac0:	xor    r9d,r9d
  426ac3:	xor    r8d,r8d
  426ac6:	xor    ecx,ecx
  426ac8:	lea    rdx,[rip+0x21d19]        # 4487e8 <fb_schema_table_missing@@Base+0x1328>
  426acf:	mov    rdi,r15
  426ad2:	call   41e370 <__flatcc_error_report@@Base>
  426ad7:	jmp    426750 <__flatcc_fb_build_schema@@Base+0xc60>
  426adc:	nop    DWORD PTR [rax+0x0]
  426ae0:	mov    rsi,QWORD PTR [r14+0x8]
  426ae4:	xor    r9d,r9d
  426ae7:	xor    r8d,r8d
  426aea:	xor    ecx,ecx
  426aec:	lea    rdx,[rip+0x21c1d]        # 448710 <fb_schema_table_missing@@Base+0x1250>
  426af3:	mov    rdi,r15
  426af6:	call   41e370 <__flatcc_error_report@@Base>
  426afb:	jmp    426750 <__flatcc_fb_build_schema@@Base+0xc60>
  426b00:	mov    rsi,QWORD PTR [r14+0x8]
  426b04:	xor    r9d,r9d
  426b07:	xor    r8d,r8d
  426b0a:	xor    ecx,ecx
  426b0c:	lea    rdx,[rip+0x21bdd]        # 4486f0 <fb_schema_table_missing@@Base+0x1230>
  426b13:	mov    rdi,r15
  426b16:	call   41e370 <__flatcc_error_report@@Base>
  426b1b:	jmp    426750 <__flatcc_fb_build_schema@@Base+0xc60>
  426b20:	cmp    WORD PTR [r14+0x20],0x5
  426b26:	je     426750 <__flatcc_fb_build_schema@@Base+0xc60>
  426b2c:	mov    rsi,QWORD PTR [r14+0x8]
  426b30:	xor    r9d,r9d
  426b33:	xor    r8d,r8d
  426b36:	xor    ecx,ecx
  426b38:	lea    rdx,[rip+0x21c79]        # 4487b8 <fb_schema_table_missing@@Base+0x12f8>
  426b3f:	mov    rdi,r15
  426b42:	call   41e370 <__flatcc_error_report@@Base>
  426b47:	jmp    426750 <__flatcc_fb_build_schema@@Base+0xc60>
  426b4c:	nop    DWORD PTR [rax+0x0]
  426b50:	cmp    eax,0x6
  426b53:	jne    426750 <__flatcc_fb_build_schema@@Base+0xc60>
  426b59:	cmp    WORD PTR [r14+0x20],0x6
  426b5f:	je     426750 <__flatcc_fb_build_schema@@Base+0xc60>
  426b65:	mov    rsi,QWORD PTR [r14+0x8]
  426b69:	xor    r9d,r9d
  426b6c:	xor    r8d,r8d
  426b6f:	xor    ecx,ecx
  426b71:	lea    rdx,[rip+0x21c98]        # 448810 <fb_schema_table_missing@@Base+0x1350>
  426b78:	mov    rdi,r15
  426b7b:	call   41e370 <__flatcc_error_report@@Base>
  426b80:	jmp    426750 <__flatcc_fb_build_schema@@Base+0xc60>
  426b85:	nop    DWORD PTR [rax]
  426b88:	mov    rbp,QWORD PTR [rsp+0x28]
  426b8d:	mov    rsi,QWORD PTR [r12+0x8]
  426b92:	xor    r9d,r9d
  426b95:	xor    r8d,r8d
  426b98:	xor    ecx,ecx
  426b9a:	lea    rdx,[rip+0x22a6f]        # 449610 <fb_schema_table_missing@@Base+0x2150>
  426ba1:	mov    rdi,r15
  426ba4:	mov    r13d,0x1
  426baa:	call   41e370 <__flatcc_error_report@@Base>
  426baf:	mov    WORD PTR [rbp+0x58],r13w
  426bb4:	jmp    425e60 <__flatcc_fb_build_schema@@Base+0x370>
  426bb9:	nop    DWORD PTR [rax+0x0]
  426bc0:	mov    rsi,QWORD PTR [r13+0x8]
  426bc4:	xor    r9d,r9d
  426bc7:	xor    r8d,r8d
  426bca:	xor    ecx,ecx
  426bcc:	lea    rdx,[rip+0x21b1d]        # 4486f0 <fb_schema_table_missing@@Base+0x1230>
  426bd3:	mov    rdi,r15
  426bd6:	call   41e370 <__flatcc_error_report@@Base>
  426bdb:	jmp    426578 <__flatcc_fb_build_schema@@Base+0xa88>
  426be0:	and    r13w,0x80
  426be6:	cmp    r13w,0x1
  426beb:	sbb    DWORD PTR [rsp+0x3c],0xffffffff
  426bf0:	cmp    WORD PTR [r12+0x58],0x0
  426bf7:	je     425e06 <__flatcc_fb_build_schema@@Base+0x316>
  426bfd:	jmp    426920 <__flatcc_fb_build_schema@@Base+0xe30>
  426c02:	nop    WORD PTR [rax+rax*1+0x0]
  426c08:	cmp    WORD PTR [r13+0x20],0x5
  426c0e:	je     426578 <__flatcc_fb_build_schema@@Base+0xa88>
  426c14:	mov    rsi,QWORD PTR [r13+0x8]
  426c18:	xor    r9d,r9d
  426c1b:	xor    r8d,r8d
  426c1e:	xor    ecx,ecx
  426c20:	lea    rdx,[rip+0x21b91]        # 4487b8 <fb_schema_table_missing@@Base+0x12f8>
  426c27:	mov    rdi,r15
  426c2a:	call   41e370 <__flatcc_error_report@@Base>
  426c2f:	jmp    426578 <__flatcc_fb_build_schema@@Base+0xa88>
  426c34:	nop    DWORD PTR [rax+0x0]
  426c38:	test   rbp,rbp
  426c3b:	jne    426c51 <__flatcc_fb_build_schema@@Base+0x1161>
  426c3d:	jmp    4276ff <__flatcc_fb_build_schema@@Base+0x1c0f>
  426c42:	nop    WORD PTR [rax+rax*1+0x0]
  426c48:	mov    rbp,QWORD PTR [rbp+0x0]
  426c4c:	test   rbp,rbp
  426c4f:	je     426c80 <__flatcc_fb_build_schema@@Base+0x1190>
  426c51:	cmp    WORD PTR [rbp+0x10],0x3
  426c56:	jne    426c48 <__flatcc_fb_build_schema@@Base+0x1158>
  426c58:	mov    rsi,rbp
  426c5b:	mov    rdi,r15
  426c5e:	call   422e70 <__flatcc_fb_clear_parser@@Base+0x600>
  426c63:	test   eax,eax
  426c65:	je     426c48 <__flatcc_fb_build_schema@@Base+0x1158>
  426c67:	mov    r9d,0x1
  426c6d:	mov    WORD PTR [rbp+0x58],r9w
  426c72:	mov    rbp,QWORD PTR [rbp+0x0]
  426c76:	test   rbp,rbp
  426c79:	jne    426c51 <__flatcc_fb_build_schema@@Base+0x1161>
  426c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  426c80:	mov    rbp,QWORD PTR [r15+0x238]
  426c87:	jmp    425da7 <__flatcc_fb_build_schema@@Base+0x2b7>
  426c8c:	nop    DWORD PTR [rax+0x0]
  426c90:	cmp    eax,0x6
  426c93:	jne    426578 <__flatcc_fb_build_schema@@Base+0xa88>
  426c99:	cmp    WORD PTR [r13+0x20],0x6
  426c9f:	je     426578 <__flatcc_fb_build_schema@@Base+0xa88>
  426ca5:	mov    rsi,QWORD PTR [r13+0x8]
  426ca9:	xor    r9d,r9d
  426cac:	xor    r8d,r8d
  426caf:	xor    ecx,ecx
  426cb1:	lea    rdx,[rip+0x21b58]        # 448810 <fb_schema_table_missing@@Base+0x1350>
  426cb8:	mov    rdi,r15
  426cbb:	call   41e370 <__flatcc_error_report@@Base>
  426cc0:	jmp    426578 <__flatcc_fb_build_schema@@Base+0xa88>
  426cc5:	nop    DWORD PTR [rax]
  426cc8:	cmp    eax,0x1
  426ccb:	cmovne rsi,r8
  426ccf:	cmp    QWORD PTR [rsp+0x30],0x0
  426cd5:	je     426d35 <__flatcc_fb_build_schema@@Base+0x1245>
  426cd7:	mov    rdi,QWORD PTR [r15+0x260]
  426cde:	test   rdi,rdi
  426ce1:	je     426d35 <__flatcc_fb_build_schema@@Base+0x1245>
  426ce3:	neg    edx
  426ce5:	movsxd rdx,edx
  426ce8:	call   41d090 <fb_scope_table_find@@Base>
  426ced:	test   rax,rax
  426cf0:	je     426d30 <__flatcc_fb_build_schema@@Base+0x1240>
  426cf2:	mov    rcx,QWORD PTR [rbp+0x8]
  426cf6:	lea    rdi,[rax+0x8]
  426cfa:	mov    rdx,QWORD PTR [rcx+0x8]
  426cfe:	mov    rsi,QWORD PTR [rcx]
  426d01:	call   41c010 <fb_symbol_table_find@@Base>
  426d06:	mov    r13,rax
  426d09:	test   rax,rax
  426d0c:	je     426d30 <__flatcc_fb_build_schema@@Base+0x1240>
  426d0e:	cmp    WORD PTR [rax+0x10],0x4
  426d13:	ja     426d30 <__flatcc_fb_build_schema@@Base+0x1240>
  426d15:	mov    rsi,QWORD PTR [rax+0x20]
  426d19:	mov    rdi,QWORD PTR [rsp+0x8]
  426d1e:	call   41b8b0 <ptr_set_find_item@@Base>
  426d23:	test   rax,rax
  426d26:	jne    4268b2 <__flatcc_fb_build_schema@@Base+0xdc2>
  426d2c:	nop    DWORD PTR [rax+0x0]
  426d30:	mov    r8,QWORD PTR [r12+0x18]
  426d35:	mov    rcx,r12
  426d38:	lea    rdx,[rip+0x227e1]        # 449520 <fb_schema_table_missing@@Base+0x2060>
  426d3f:	mov    rsi,r8
  426d42:	mov    rdi,r15
  426d45:	call   41f7a0 <error_ref_sym@@Base>
  426d4a:	mov    ecx,0x1
  426d4f:	mov    WORD PTR [r12+0x28],cx
  426d55:	jmp    425e06 <__flatcc_fb_build_schema@@Base+0x316>
  426d5a:	nop    WORD PTR [rax+rax*1+0x0]
  426d60:	mov    rax,QWORD PTR [rbx]
  426d63:	test   rax,rax
  426d66:	je     426de0 <__flatcc_fb_build_schema@@Base+0x12f0>
  426d68:	xor    r13d,r13d
  426d6b:	jmp    426d73 <__flatcc_fb_build_schema@@Base+0x1283>
  426d6d:	nop    DWORD PTR [rax]
  426d70:	mov    r13d,edx
  426d73:	mov    rax,QWORD PTR [rax]
  426d76:	lea    edx,[r13+0x1]
  426d7a:	test   rax,rax
  426d7d:	jne    426d70 <__flatcc_fb_build_schema@@Base+0x1280>
  426d7f:	neg    r13d
  426d82:	jmp    426db0 <__flatcc_fb_build_schema@@Base+0x12c0>
  426d84:	nop    DWORD PTR [rax+0x0]
  426d88:	test   r14,r14
  426d8b:	je     426dad <__flatcc_fb_build_schema@@Base+0x12bd>
  426d8d:	mov    rdi,QWORD PTR [r15+0x260]
  426d94:	test   rdi,rdi
  426d97:	je     426dad <__flatcc_fb_build_schema@@Base+0x12bd>
  426d99:	mov    rsi,QWORD PTR [rbx]
  426d9c:	movsxd rdx,r13d
  426d9f:	call   41d090 <fb_scope_table_find@@Base>
  426da4:	test   rax,rax
  426da7:	jne    426f60 <__flatcc_fb_build_schema@@Base+0x1470>
  426dad:	inc    r13d
  426db0:	test   r13d,r13d
  426db3:	jne    426d88 <__flatcc_fb_build_schema@@Base+0x1298>
  426db5:	test   r14,r14
  426db8:	je     426de0 <__flatcc_fb_build_schema@@Base+0x12f0>
  426dba:	mov    rdi,QWORD PTR [r15+0x260]
  426dc1:	test   rdi,rdi
  426dc4:	je     426de0 <__flatcc_fb_build_schema@@Base+0x12f0>
  426dc6:	xor    edx,edx
  426dc8:	xor    esi,esi
  426dca:	call   41d090 <fb_scope_table_find@@Base>
  426dcf:	mov    rbx,rax
  426dd2:	test   rax,rax
  426dd5:	jne    425ff0 <__flatcc_fb_build_schema@@Base+0x500>
  426ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  426de0:	mov    r8,QWORD PTR [rbp+0x30]
  426de4:	mov    rcx,rbp
  426de7:	lea    rdx,[rip+0x2299a]        # 449788 <fb_schema_table_missing@@Base+0x22c8>
  426dee:	mov    rsi,r8
  426df1:	mov    rdi,r15
  426df4:	mov    ebx,0x1
  426df9:	call   41f7a0 <error_ref_sym@@Base>
  426dfe:	mov    WORD PTR [rbp+0x28],bx
  426e02:	mov    rbp,QWORD PTR [rbp+0x0]
  426e06:	test   rbp,rbp
  426e09:	jne    425f48 <__flatcc_fb_build_schema@@Base+0x458>
  426e0f:	jmp    426217 <__flatcc_fb_build_schema@@Base+0x727>
  426e14:	nop    DWORD PTR [rax+0x0]
  426e18:	mov    rax,QWORD PTR [rbx]
  426e1b:	test   rax,rax
  426e1e:	je     426e98 <__flatcc_fb_build_schema@@Base+0x13a8>
  426e20:	xor    r13d,r13d
  426e23:	jmp    426e2b <__flatcc_fb_build_schema@@Base+0x133b>
  426e25:	nop    DWORD PTR [rax]
  426e28:	mov    r13d,edx
  426e2b:	mov    rax,QWORD PTR [rax]
  426e2e:	lea    edx,[r13+0x1]
  426e32:	test   rax,rax
  426e35:	jne    426e28 <__flatcc_fb_build_schema@@Base+0x1338>
  426e37:	neg    r13d
  426e3a:	jmp    426e68 <__flatcc_fb_build_schema@@Base+0x1378>
  426e3c:	nop    DWORD PTR [rax+0x0]
  426e40:	test   r14,r14
  426e43:	je     426e65 <__flatcc_fb_build_schema@@Base+0x1375>
  426e45:	mov    rdi,QWORD PTR [r15+0x260]
  426e4c:	test   rdi,rdi
  426e4f:	je     426e65 <__flatcc_fb_build_schema@@Base+0x1375>
  426e51:	mov    rsi,QWORD PTR [rbx]
  426e54:	movsxd rdx,r13d
  426e57:	call   41d090 <fb_scope_table_find@@Base>
  426e5c:	test   rax,rax
  426e5f:	jne    426fb0 <__flatcc_fb_build_schema@@Base+0x14c0>
  426e65:	inc    r13d
  426e68:	test   r13d,r13d
  426e6b:	jne    426e40 <__flatcc_fb_build_schema@@Base+0x1350>
  426e6d:	test   r14,r14
  426e70:	je     426e98 <__flatcc_fb_build_schema@@Base+0x13a8>
  426e72:	mov    rdi,QWORD PTR [r15+0x260]
  426e79:	test   rdi,rdi
  426e7c:	je     426e98 <__flatcc_fb_build_schema@@Base+0x13a8>
  426e7e:	xor    edx,edx
  426e80:	xor    esi,esi
  426e82:	call   41d090 <fb_scope_table_find@@Base>
  426e87:	mov    rbx,rax
  426e8a:	test   rax,rax
  426e8d:	jne    426098 <__flatcc_fb_build_schema@@Base+0x5a8>
  426e93:	nop    DWORD PTR [rax+rax*1+0x0]
  426e98:	mov    r8,QWORD PTR [rbp+0x18]
  426e9c:	mov    rcx,rbp
  426e9f:	lea    rdx,[rip+0x22952]        # 4497f8 <fb_schema_table_missing@@Base+0x2338>
  426ea6:	mov    rsi,r8
  426ea9:	mov    rdi,r15
  426eac:	call   41f7a0 <error_ref_sym@@Base>
  426eb1:	mov    r9d,0x1
  426eb7:	mov    WORD PTR [rbp+0x28],r9w
  426ebc:	mov    rbp,QWORD PTR [rbp+0x0]
  426ec0:	test   rbp,rbp
  426ec3:	jne    425f48 <__flatcc_fb_build_schema@@Base+0x458>
  426ec9:	jmp    426217 <__flatcc_fb_build_schema@@Base+0x727>
  426ece:	xchg   ax,ax
  426ed0:	mov    rax,QWORD PTR [rbx]
  426ed3:	test   rax,rax
  426ed6:	je     426d30 <__flatcc_fb_build_schema@@Base+0x1240>
  426edc:	xor    r13d,r13d
  426edf:	jmp    426eeb <__flatcc_fb_build_schema@@Base+0x13fb>
  426ee1:	nop    DWORD PTR [rax+0x0]
  426ee8:	mov    r13d,edx
  426eeb:	mov    rax,QWORD PTR [rax]
  426eee:	lea    edx,[r13+0x1]
  426ef2:	test   rax,rax
  426ef5:	jne    426ee8 <__flatcc_fb_build_schema@@Base+0x13f8>
  426ef7:	neg    r13d
  426efa:	jmp    426f28 <__flatcc_fb_build_schema@@Base+0x1438>
  426efc:	nop    DWORD PTR [rax+0x0]
  426f00:	test   r14,r14
  426f03:	je     426f25 <__flatcc_fb_build_schema@@Base+0x1435>
  426f05:	mov    rdi,QWORD PTR [r15+0x260]
  426f0c:	test   rdi,rdi
  426f0f:	je     426f25 <__flatcc_fb_build_schema@@Base+0x1435>
  426f11:	mov    rsi,QWORD PTR [rbx]
  426f14:	movsxd rdx,r13d
  426f17:	call   41d090 <fb_scope_table_find@@Base>
  426f1c:	test   rax,rax
  426f1f:	jne    427000 <__flatcc_fb_build_schema@@Base+0x1510>
  426f25:	inc    r13d
  426f28:	test   r13d,r13d
  426f2b:	jne    426f00 <__flatcc_fb_build_schema@@Base+0x1410>
  426f2d:	test   r14,r14
  426f30:	je     426d30 <__flatcc_fb_build_schema@@Base+0x1240>
  426f36:	mov    rdi,QWORD PTR [r15+0x260]
  426f3d:	test   rdi,rdi
  426f40:	je     426d30 <__flatcc_fb_build_schema@@Base+0x1240>
  426f46:	xor    edx,edx
  426f48:	xor    esi,esi
  426f4a:	call   41d090 <fb_scope_table_find@@Base>
  426f4f:	mov    rbx,rax
  426f52:	test   rax,rax
  426f55:	jne    426870 <__flatcc_fb_build_schema@@Base+0xd80>
  426f5b:	jmp    426d30 <__flatcc_fb_build_schema@@Base+0x1240>
  426f60:	mov    rbx,rax
  426f63:	jmp    425ff0 <__flatcc_fb_build_schema@@Base+0x500>
  426f68:	nop    DWORD PTR [rax+rax*1+0x0]
  426f70:	mov    QWORD PTR [rsp+rax*8+0x50],r11
  426f75:	jmp    4263a9 <__flatcc_fb_build_schema@@Base+0x8b9>
  426f7a:	nop    WORD PTR [rax+rax*1+0x0]
  426f80:	mov    QWORD PTR [r11],r10
  426f83:	test   r9w,r9w
  426f87:	je     426409 <__flatcc_fb_build_schema@@Base+0x919>
  426f8d:	sub    eax,0x2
  426f90:	movzx  r10d,r9w
  426f94:	movzx  eax,ax
  426f97:	mov    r11,QWORD PTR [rsp+r10*8+0xa0]
  426f9f:	mov    r10,QWORD PTR [rsp+rax*8+0x50]
  426fa4:	mov    eax,r9d
  426fa7:	jmp    4263ee <__flatcc_fb_build_schema@@Base+0x8fe>
  426fac:	nop    DWORD PTR [rax+0x0]
  426fb0:	mov    rbx,rax
  426fb3:	jmp    426098 <__flatcc_fb_build_schema@@Base+0x5a8>
  426fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  426fc0:	xor    eax,eax
  426fc2:	jmp    426392 <__flatcc_fb_build_schema@@Base+0x8a2>
  426fc7:	nop    WORD PTR [rax+rax*1+0x0]
  426fd0:	mov    rsi,QWORD PTR [rbp+0x8]
  426fd4:	mov    rcx,QWORD PTR [rax+0x8]
  426fd8:	xor    r9d,r9d
  426fdb:	xor    r8d,r8d
  426fde:	lea    rdx,[rip+0x22703]        # 4496e8 <fb_schema_table_missing@@Base+0x2228>
  426fe5:	mov    rdi,r15
  426fe8:	call   41e370 <__flatcc_error_report@@Base>
  426fed:	mov    rbp,QWORD PTR [rbp+0x0]
  426ff1:	test   rbp,rbp
  426ff4:	jne    425f48 <__flatcc_fb_build_schema@@Base+0x458>
  426ffa:	jmp    426217 <__flatcc_fb_build_schema@@Base+0x727>
  426fff:	nop
  427000:	mov    rbx,rax
  427003:	jmp    426870 <__flatcc_fb_build_schema@@Base+0xd80>
  427008:	nop    DWORD PTR [rax+rax*1+0x0]
  427010:	cmp    eax,0x2
  427013:	jne    427048 <__flatcc_fb_build_schema@@Base+0x1558>
  427015:	cmp    WORD PTR [r13+0x20],0x2
  42701b:	je     426158 <__flatcc_fb_build_schema@@Base+0x668>
  427021:	mov    rsi,QWORD PTR [r13+0x8]
  427025:	xor    r9d,r9d
  427028:	xor    r8d,r8d
  42702b:	xor    ecx,ecx
  42702d:	lea    rdx,[rip+0x2175c]        # 448790 <fb_schema_table_missing@@Base+0x12d0>
  427034:	mov    rdi,r15
  427037:	call   41e370 <__flatcc_error_report@@Base>
  42703c:	jmp    426158 <__flatcc_fb_build_schema@@Base+0x668>
  427041:	nop    DWORD PTR [rax+0x0]
  427048:	cmp    eax,0x5
  42704b:	je     427300 <__flatcc_fb_build_schema@@Base+0x1810>
  427051:	cmp    eax,0x4
  427054:	jne    427370 <__flatcc_fb_build_schema@@Base+0x1880>
  42705a:	movzx  eax,WORD PTR [r13+0x20]
  42705f:	sub    eax,0x4
  427062:	cmp    ax,0x1
  427066:	jbe    426158 <__flatcc_fb_build_schema@@Base+0x668>
  42706c:	mov    rsi,QWORD PTR [r13+0x8]
  427070:	xor    r9d,r9d
  427073:	xor    r8d,r8d
  427076:	xor    ecx,ecx
  427078:	lea    rdx,[rip+0x21769]        # 4487e8 <fb_schema_table_missing@@Base+0x1328>
  42707f:	mov    rdi,r15
  427082:	call   41e370 <__flatcc_error_report@@Base>
  427087:	jmp    426158 <__flatcc_fb_build_schema@@Base+0x668>
  42708c:	nop    DWORD PTR [rax+0x0]
  427090:	cmp    eax,0x1
  427093:	cmovne rsi,r8
  427097:	test   r14,r14
  42709a:	je     426de4 <__flatcc_fb_build_schema@@Base+0x12f4>
  4270a0:	mov    rdi,QWORD PTR [r15+0x260]
  4270a7:	test   rdi,rdi
  4270aa:	je     426de4 <__flatcc_fb_build_schema@@Base+0x12f4>
  4270b0:	neg    edx
  4270b2:	movsxd rdx,edx
  4270b5:	call   41d090 <fb_scope_table_find@@Base>
  4270ba:	test   rax,rax
  4270bd:	je     426de0 <__flatcc_fb_build_schema@@Base+0x12f0>
  4270c3:	mov    rcx,QWORD PTR [r12+0x8]
  4270c8:	lea    rdi,[rax+0x8]
  4270cc:	mov    rdx,QWORD PTR [rcx+0x8]
  4270d0:	mov    rsi,QWORD PTR [rcx]
  4270d3:	call   41c010 <fb_symbol_table_find@@Base>
  4270d8:	mov    r13,rax
  4270db:	test   rax,rax
  4270de:	je     426de0 <__flatcc_fb_build_schema@@Base+0x12f0>
  4270e4:	cmp    WORD PTR [rax+0x10],0x4
  4270e9:	ja     426de0 <__flatcc_fb_build_schema@@Base+0x12f0>
  4270ef:	mov    rsi,QWORD PTR [rax+0x20]
  4270f3:	mov    rdi,QWORD PTR [rsp+0x8]
  4270f8:	call   41b8b0 <ptr_set_find_item@@Base>
  4270fd:	test   rax,rax
  427100:	je     426de0 <__flatcc_fb_build_schema@@Base+0x12f0>
  427106:	cmp    WORD PTR [r13+0x10],0x0
  42710c:	je     42603f <__flatcc_fb_build_schema@@Base+0x54f>
  427112:	nop    WORD PTR [rax+rax*1+0x0]
  427118:	mov    rsi,QWORD PTR [rbp+0x8]
  42711c:	mov    rcx,QWORD PTR [r13+0x8]
  427120:	xor    r9d,r9d
  427123:	xor    r8d,r8d
  427126:	lea    rdx,[rip+0x22693]        # 4497c0 <fb_schema_table_missing@@Base+0x2300>
  42712d:	mov    rdi,r15
  427130:	call   41e370 <__flatcc_error_report@@Base>
  427135:	mov    r11d,0x1
  42713b:	mov    WORD PTR [rbp+0x28],r11w
  427140:	mov    rbp,QWORD PTR [rbp+0x0]
  427144:	test   rbp,rbp
  427147:	jne    425f48 <__flatcc_fb_build_schema@@Base+0x458>
  42714d:	jmp    426217 <__flatcc_fb_build_schema@@Base+0x727>
  427152:	nop    WORD PTR [rax+rax*1+0x0]
  427158:	mov    rsi,QWORD PTR [rbp+0x8]
  42715c:	xor    r9d,r9d
  42715f:	xor    r8d,r8d
  427162:	xor    ecx,ecx
  427164:	lea    rdx,[rip+0x2259d]        # 449708 <fb_schema_table_missing@@Base+0x2248>
  42716b:	mov    rdi,r15
  42716e:	call   41e370 <__flatcc_error_report@@Base>
  427173:	jmp    425f79 <__flatcc_fb_build_schema@@Base+0x489>
  427178:	nop    DWORD PTR [rax+rax*1+0x0]
  427180:	cmp    WORD PTR [r13+0x58],0x1
  427186:	je     426220 <__flatcc_fb_build_schema@@Base+0x730>
  42718c:	mov    rsi,r13
  42718f:	mov    rdi,r15
  427192:	call   423b40 <__flatcc_fb_clear_parser@@Base+0x12d0>
  427197:	test   eax,eax
  427199:	je     426220 <__flatcc_fb_build_schema@@Base+0x730>
  42719f:	mov    ebp,0x1
  4271a4:	mov    WORD PTR [r13+0x58],bp
  4271a9:	mov    r13,QWORD PTR [r13+0x0]
  4271ad:	test   r13,r13
  4271b0:	jne    425ed8 <__flatcc_fb_build_schema@@Base+0x3e8>
  4271b6:	jmp    42622d <__flatcc_fb_build_schema@@Base+0x73d>
  4271bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4271c0:	mov    rsi,QWORD PTR [r13+0x8]
  4271c4:	xor    r9d,r9d
  4271c7:	xor    r8d,r8d
  4271ca:	xor    ecx,ecx
  4271cc:	lea    rdx,[rip+0x2153d]        # 448710 <fb_schema_table_missing@@Base+0x1250>
  4271d3:	mov    rdi,r15
  4271d6:	call   41e370 <__flatcc_error_report@@Base>
  4271db:	jmp    426158 <__flatcc_fb_build_schema@@Base+0x668>
  4271e0:	movzx  r9d,WORD PTR [r9+0xb0]
  4271e8:	jmp    426366 <__flatcc_fb_build_schema@@Base+0x876>
  4271ed:	nop    DWORD PTR [rax]
  4271f0:	mov    rsi,QWORD PTR [r13+0x8]
  4271f4:	xor    r9d,r9d
  4271f7:	xor    r8d,r8d
  4271fa:	xor    ecx,ecx
  4271fc:	lea    rdx,[rip+0x214ed]        # 4486f0 <fb_schema_table_missing@@Base+0x1230>
  427203:	mov    rdi,r15
  427206:	call   41e370 <__flatcc_error_report@@Base>
  42720b:	jmp    426158 <__flatcc_fb_build_schema@@Base+0x668>
  427210:	cmp    eax,0x1
  427213:	cmovne rsi,r8
  427217:	test   r14,r14
  42721a:	je     426e9c <__flatcc_fb_build_schema@@Base+0x13ac>
  427220:	mov    rdi,QWORD PTR [r15+0x260]
  427227:	test   rdi,rdi
  42722a:	je     426e9c <__flatcc_fb_build_schema@@Base+0x13ac>
  427230:	neg    edx
  427232:	movsxd rdx,edx
  427235:	call   41d090 <fb_scope_table_find@@Base>
  42723a:	test   rax,rax
  42723d:	je     426e98 <__flatcc_fb_build_schema@@Base+0x13a8>
  427243:	mov    rcx,QWORD PTR [r12+0x8]
  427248:	lea    rdi,[rax+0x8]
  42724c:	mov    rdx,QWORD PTR [rcx+0x8]
  427250:	mov    rsi,QWORD PTR [rcx]
  427253:	call   41c010 <fb_symbol_table_find@@Base>
  427258:	mov    r13,rax
  42725b:	test   rax,rax
  42725e:	je     426e98 <__flatcc_fb_build_schema@@Base+0x13a8>
  427264:	cmp    WORD PTR [rax+0x10],0x4
  427269:	ja     426e98 <__flatcc_fb_build_schema@@Base+0x13a8>
  42726f:	mov    rsi,QWORD PTR [rax+0x20]
  427273:	mov    rdi,QWORD PTR [rsp+0x8]
  427278:	call   41b8b0 <ptr_set_find_item@@Base>
  42727d:	test   rax,rax
  427280:	je     426e98 <__flatcc_fb_build_schema@@Base+0x13a8>
  427286:	movzx  r12d,WORD PTR [r13+0x10]
  42728b:	test   r12w,r12w
  42728f:	je     4260ea <__flatcc_fb_build_schema@@Base+0x5fa>
  427295:	nop    DWORD PTR [rax]
  427298:	mov    rsi,QWORD PTR [rbp+0x8]
  42729c:	mov    rcx,QWORD PTR [r13+0x8]
  4272a0:	xor    r8d,r8d
  4272a3:	xor    r9d,r9d
  4272a6:	lea    rdx,[rip+0x22583]        # 449830 <fb_schema_table_missing@@Base+0x2370>
  4272ad:	mov    rdi,r15
  4272b0:	call   41e370 <__flatcc_error_report@@Base>
  4272b5:	mov    r8d,0x1
  4272bb:	mov    WORD PTR [rbp+0x28],r8w
  4272c0:	mov    rbp,QWORD PTR [rbp+0x0]
  4272c4:	test   rbp,rbp
  4272c7:	jne    425f48 <__flatcc_fb_build_schema@@Base+0x458>
  4272cd:	jmp    426217 <__flatcc_fb_build_schema@@Base+0x727>
  4272d2:	nop    WORD PTR [rax+rax*1+0x0]
  4272d8:	mov    rsi,QWORD PTR [r14+0x8]
  4272dc:	xor    r9d,r9d
  4272df:	xor    r8d,r8d
  4272e2:	xor    ecx,ecx
  4272e4:	lea    rdx,[rip+0x2147d]        # 448768 <fb_schema_table_missing@@Base+0x12a8>
  4272eb:	mov    rdi,r15
  4272ee:	call   41e370 <__flatcc_error_report@@Base>
  4272f3:	jmp    426750 <__flatcc_fb_build_schema@@Base+0xc60>
  4272f8:	nop    DWORD PTR [rax+rax*1+0x0]
  427300:	cmp    WORD PTR [r13+0x20],0x5
  427306:	je     426158 <__flatcc_fb_build_schema@@Base+0x668>
  42730c:	mov    rsi,QWORD PTR [r13+0x8]
  427310:	xor    r9d,r9d
  427313:	xor    r8d,r8d
  427316:	xor    ecx,ecx
  427318:	lea    rdx,[rip+0x21499]        # 4487b8 <fb_schema_table_missing@@Base+0x12f8>
  42731f:	mov    rdi,r15
  427322:	call   41e370 <__flatcc_error_report@@Base>
  427327:	jmp    426158 <__flatcc_fb_build_schema@@Base+0x668>
  42732c:	nop    DWORD PTR [rax+0x0]
  427330:	mov    QWORD PTR [rsp+0x48],0x0
  427339:	mov    rax,r8
  42733c:	test   r10,r10
  42733f:	je     42735a <__flatcc_fb_build_schema@@Base+0x186a>
  427341:	nop    DWORD PTR [rax+0x0]
  427348:	mov    QWORD PTR [rax],r10
  42734b:	lea    rax,[r10+0x98]
  427352:	mov    r10,QWORD PTR [r10]
  427355:	test   r10,r10
  427358:	jne    427348 <__flatcc_fb_build_schema@@Base+0x1858>
  42735a:	mov    QWORD PTR [rax],0x0
  427361:	mov    rax,QWORD PTR [rsp+0x48]
  427366:	mov    QWORD PTR [rdx+0x30],rax
  42736a:	jmp    426415 <__flatcc_fb_build_schema@@Base+0x925>
  42736f:	nop
  427370:	cmp    eax,0x6
  427373:	jne    426158 <__flatcc_fb_build_schema@@Base+0x668>
  427379:	cmp    WORD PTR [r13+0x20],0x6
  42737f:	je     426158 <__flatcc_fb_build_schema@@Base+0x668>
  427385:	mov    rsi,QWORD PTR [r13+0x8]
  427389:	xor    r9d,r9d
  42738c:	xor    r8d,r8d
  42738f:	xor    ecx,ecx
  427391:	lea    rdx,[rip+0x21478]        # 448810 <fb_schema_table_missing@@Base+0x1350>
  427398:	mov    rdi,r15
  42739b:	call   41e370 <__flatcc_error_report@@Base>
  4273a0:	jmp    426158 <__flatcc_fb_build_schema@@Base+0x668>
  4273a5:	nop    DWORD PTR [rax]
  4273a8:	xor    eax,eax
  4273aa:	mov    WORD PTR [r12+0x70],ax
  4273b0:	movzx  eax,WORD PTR [r12+0x28]
  4273b6:	cmp    ax,0x8
  4273ba:	jne    426813 <__flatcc_fb_build_schema@@Base+0xd23>
  4273c0:	jmp    426bf0 <__flatcc_fb_build_schema@@Base+0x1100>
  4273c5:	nop    DWORD PTR [rax]
  4273c8:	mov    esi,DWORD PTR [r15+0x13c]
  4273cf:	test   esi,esi
  4273d1:	jne    4276bb <__flatcc_fb_build_schema@@Base+0x1bcb>
  4273d7:	mov    eax,DWORD PTR [r15+0xd0]
  4273de:	xor    edx,edx
  4273e0:	test   eax,eax
  4273e2:	sete   dl
  4273e5:	mov    DWORD PTR [r15+0xe4],edx
  4273ec:	jmp    426a08 <__flatcc_fb_build_schema@@Base+0xf18>
  4273f1:	nop    DWORD PTR [rax+0x0]
  4273f8:	mov    DWORD PTR [rbx+0xa0],eax
  4273fe:	mov    QWORD PTR [rbx+0x20],r14
  427402:	jmp    425bd8 <__flatcc_fb_build_schema@@Base+0xe8>
  427407:	nop    WORD PTR [rax+rax*1+0x0]
  427410:	mov    rax,QWORD PTR [rbp+0x0]
  427414:	test   rax,rax
  427417:	je     427490 <__flatcc_fb_build_schema@@Base+0x19a0>
  427419:	xor    ebx,ebx
  42741b:	jmp    427422 <__flatcc_fb_build_schema@@Base+0x1932>
  42741d:	nop    DWORD PTR [rax]
  427420:	mov    ebx,edx
  427422:	mov    rax,QWORD PTR [rax]
  427425:	lea    edx,[rbx+0x1]
  427428:	test   rax,rax
  42742b:	jne    427420 <__flatcc_fb_build_schema@@Base+0x1930>
  42742d:	neg    ebx
  42742f:	test   ebx,ebx
  427431:	je     427460 <__flatcc_fb_build_schema@@Base+0x1970>
  427433:	nop    DWORD PTR [rax+rax*1+0x0]
  427438:	test   r14,r14
  42743b:	je     42745a <__flatcc_fb_build_schema@@Base+0x196a>
  42743d:	mov    rdi,QWORD PTR [r15+0x260]
  427444:	test   rdi,rdi
  427447:	je     42745a <__flatcc_fb_build_schema@@Base+0x196a>
  427449:	mov    rsi,QWORD PTR [rbp+0x0]
  42744d:	movsxd rdx,ebx
  427450:	call   41d090 <fb_scope_table_find@@Base>
  427455:	test   rax,rax
  427458:	jne    4274c0 <__flatcc_fb_build_schema@@Base+0x19d0>
  42745a:	inc    ebx
  42745c:	test   ebx,ebx
  42745e:	jne    427438 <__flatcc_fb_build_schema@@Base+0x1948>
  427460:	test   r14,r14
  427463:	je     427490 <__flatcc_fb_build_schema@@Base+0x19a0>
  427465:	mov    rdi,QWORD PTR [r15+0x260]
  42746c:	test   rdi,rdi
  42746f:	je     427490 <__flatcc_fb_build_schema@@Base+0x19a0>
  427471:	xor    edx,edx
  427473:	xor    esi,esi
  427475:	call   41d090 <fb_scope_table_find@@Base>
  42747a:	mov    rbp,rax
  42747d:	test   rax,rax
  427480:	jne    426468 <__flatcc_fb_build_schema@@Base+0x978>
  427486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427490:	mov    QWORD PTR [r15+0x250],0x0
  42749b:	mov    r8,QWORD PTR [r15+0x248]
  4274a2:	xor    ecx,ecx
  4274a4:	lea    rdx,[rip+0x225c8]        # 449a73 <fb_schema_table_missing@@Base+0x25b3>
  4274ab:	mov    rsi,r8
  4274ae:	mov    rdi,r15
  4274b1:	call   41f7a0 <error_ref_sym@@Base>
  4274b6:	jmp    4264cf <__flatcc_fb_build_schema@@Base+0x9df>
  4274bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4274c0:	mov    rbp,rax
  4274c3:	jmp    426468 <__flatcc_fb_build_schema@@Base+0x978>
  4274c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4274d0:	test   BYTE PTR [r12+0x70],0x80
  4274d6:	je     426bf0 <__flatcc_fb_build_schema@@Base+0x1100>
  4274dc:	mov    rsi,QWORD PTR [r12+0x8]
  4274e1:	xor    r9d,r9d
  4274e4:	xor    r8d,r8d
  4274e7:	xor    ecx,ecx
  4274e9:	lea    rdx,[rip+0x220a8]        # 449598 <fb_schema_table_missing@@Base+0x20d8>
  4274f0:	mov    rdi,r15
  4274f3:	mov    rbp,QWORD PTR [rsp+0x28]
  4274f8:	call   41e370 <__flatcc_error_report@@Base>
  4274fd:	mov    eax,0x1
  427502:	mov    WORD PTR [r12+0x28],ax
  427508:	jmp    425e50 <__flatcc_fb_build_schema@@Base+0x360>
  42750d:	nop    DWORD PTR [rax]
  427510:	mov    rsi,QWORD PTR [r13+0x8]
  427514:	xor    r9d,r9d
  427517:	xor    r8d,r8d
  42751a:	xor    ecx,ecx
  42751c:	lea    rdx,[rip+0x21245]        # 448768 <fb_schema_table_missing@@Base+0x12a8>
  427523:	mov    rdi,r15
  427526:	call   41e370 <__flatcc_error_report@@Base>
  42752b:	jmp    426578 <__flatcc_fb_build_schema@@Base+0xa88>
  427530:	mov    r12d,0x1
  427536:	mov    WORD PTR [rbx+0x58],r12w
  42753b:	jmp    425eb0 <__flatcc_fb_build_schema@@Base+0x3c0>
  427540:	mov    WORD PTR [rbp+0xb0],dx
  427547:	jmp    426684 <__flatcc_fb_build_schema@@Base+0xb94>
  42754c:	nop    DWORD PTR [rax+0x0]
  427550:	mov    rsi,QWORD PTR [r13+0x8]
  427554:	xor    r9d,r9d
  427557:	xor    r8d,r8d
  42755a:	xor    ecx,ecx
  42755c:	lea    rdx,[rip+0x21205]        # 448768 <fb_schema_table_missing@@Base+0x12a8>
  427563:	mov    rdi,r15
  427566:	call   41e370 <__flatcc_error_report@@Base>
  42756b:	jmp    426158 <__flatcc_fb_build_schema@@Base+0x668>
  427570:	mov    r13,QWORD PTR [rsp+0x18]
  427575:	mov    rsi,QWORD PTR [rbp+0x8]
  427579:	xor    r9d,r9d
  42757c:	xor    r8d,r8d
  42757f:	xor    ecx,ecx
  427581:	lea    rdx,[rip+0x217f0]        # 448d78 <fb_schema_table_missing@@Base+0x18b8>
  427588:	mov    rdi,r15
  42758b:	mov    ebp,0x1
  427590:	call   41e370 <__flatcc_error_report@@Base>
  427595:	mov    WORD PTR [r13+0x58],bp
  42759a:	jmp    4271a9 <__flatcc_fb_build_schema@@Base+0x16b9>
  42759f:	nop
  4275a0:	mov    QWORD PTR [rsp+0x48],0x0
  4275a9:	mov    r9,r8
  4275ac:	jmp    4275b3 <__flatcc_fb_build_schema@@Base+0x1ac3>
  4275ae:	xchg   ax,ax
  4275b0:	mov    r10,rax
  4275b3:	mov    rax,QWORD PTR [r10]
  4275b6:	mov    QWORD PTR [r9],r10
  4275b9:	lea    r9,[r10+0x98]
  4275c0:	test   rax,rax
  4275c3:	jne    4275b0 <__flatcc_fb_build_schema@@Base+0x1ac0>
  4275c5:	mov    QWORD PTR [r10+0x98],0x0
  4275d0:	mov    rax,QWORD PTR [rsp+0x48]
  4275d5:	jmp    426411 <__flatcc_fb_build_schema@@Base+0x921>
  4275da:	xor    r8d,r8d
  4275dd:	mov    WORD PTR [rbp+0xa4],r8w
  4275e5:	jmp    426684 <__flatcc_fb_build_schema@@Base+0xb94>
  4275ea:	cmp    edx,0x1
  4275ed:	cmovne rsi,r8
  4275f1:	test   r14,r14
  4275f4:	je     4276ab <__flatcc_fb_build_schema@@Base+0x1bbb>
  4275fa:	mov    rdi,QWORD PTR [r15+0x260]
  427601:	test   rdi,rdi
  427604:	je     4276ab <__flatcc_fb_build_schema@@Base+0x1bbb>
  42760a:	neg    eax
  42760c:	movsxd rdx,eax
  42760f:	call   41d090 <fb_scope_table_find@@Base>
  427614:	test   rax,rax
  427617:	je     427490 <__flatcc_fb_build_schema@@Base+0x19a0>
  42761d:	mov    rcx,QWORD PTR [r12+0x8]
  427622:	lea    rdi,[rax+0x8]
  427626:	mov    rdx,QWORD PTR [rcx+0x8]
  42762a:	mov    rsi,QWORD PTR [rcx]
  42762d:	call   41c010 <fb_symbol_table_find@@Base>
  427632:	mov    rbx,rax
  427635:	test   rax,rax
  427638:	je     427490 <__flatcc_fb_build_schema@@Base+0x19a0>
  42763e:	cmp    WORD PTR [rax+0x10],0x4
  427643:	ja     427490 <__flatcc_fb_build_schema@@Base+0x19a0>
  427649:	mov    rsi,QWORD PTR [rax+0x20]
  42764d:	mov    rdi,QWORD PTR [rsp+0x8]
  427652:	call   41b8b0 <ptr_set_find_item@@Base>
  427657:	test   rax,rax
  42765a:	jne    4264ab <__flatcc_fb_build_schema@@Base+0x9bb>
  427660:	jmp    427490 <__flatcc_fb_build_schema@@Base+0x19a0>
  427665:	nop    DWORD PTR [rax]
  427668:	test   ax,ax
  42766b:	je     4264cf <__flatcc_fb_build_schema@@Base+0x9df>
  427671:	mov    rsi,QWORD PTR [r15+0x248]
  427678:	xor    ecx,ecx
  42767a:	lea    rdx,[rip+0x22406]        # 449a87 <fb_schema_table_missing@@Base+0x25c7>
  427681:	mov    rdi,r15
  427684:	call   41f7a0 <error_ref_sym@@Base>
  427689:	jmp    4264cf <__flatcc_fb_build_schema@@Base+0x9df>
  42768e:	mov    rsi,QWORD PTR [r15+0x248]
  427695:	xor    ecx,ecx
  427697:	lea    rdx,[rip+0x221ca]        # 449868 <fb_schema_table_missing@@Base+0x23a8>
  42769e:	mov    rdi,r15
  4276a1:	call   41f7a0 <error_ref_sym@@Base>
  4276a6:	jmp    4264cf <__flatcc_fb_build_schema@@Base+0x9df>
  4276ab:	mov    QWORD PTR [r15+0x250],0x0
  4276b6:	jmp    4274a2 <__flatcc_fb_build_schema@@Base+0x19b2>
  4276bb:	xor    r9d,r9d
  4276be:	xor    r8d,r8d
  4276c1:	xor    ecx,ecx
  4276c3:	lea    rdx,[rip+0x22392]        # 449a5c <fb_schema_table_missing@@Base+0x259c>
  4276ca:	xor    esi,esi
  4276cc:	mov    rdi,r15
  4276cf:	call   41e370 <__flatcc_error_report@@Base>
  4276d4:	jmp    4273d7 <__flatcc_fb_build_schema@@Base+0x18e7>
  4276d9:	mov    rsi,QWORD PTR [r12+0x8]
  4276de:	xor    r9d,r9d
  4276e1:	xor    r8d,r8d
  4276e4:	xor    ecx,ecx
  4276e6:	lea    rdx,[rip+0x21e0b]        # 4494f8 <fb_schema_table_missing@@Base+0x2038>
  4276ed:	mov    rdi,r15
  4276f0:	mov    rbp,QWORD PTR [rsp+0x28]
  4276f5:	call   41e370 <__flatcc_error_report@@Base>
  4276fa:	jmp    425e50 <__flatcc_fb_build_schema@@Base+0x360>
  4276ff:	mov    rax,QWORD PTR [r15+0x240]
  427706:	xor    edx,edx
  427708:	test   rax,rax
  42770b:	jne    426240 <__flatcc_fb_build_schema@@Base+0x750>
  427711:	jmp    426421 <__flatcc_fb_build_schema@@Base+0x931>
  427716:	mov    rsi,QWORD PTR [rbp+0x8]
  42771a:	xor    r9d,r9d
  42771d:	xor    r8d,r8d
  427720:	xor    ecx,ecx
  427722:	lea    rdx,[rip+0x21d27]        # 449450 <fb_schema_table_missing@@Base+0x1f90>
  427729:	mov    rdi,r15
  42772c:	call   41e370 <__flatcc_error_report@@Base>
  427731:	jmp    425e50 <__flatcc_fb_build_schema@@Base+0x360>
  427736:	mov    rcx,QWORD PTR [r13+0x8]
  42773a:	mov    rsi,QWORD PTR [r12+0x8]
  42773f:	xor    r9d,r9d
  427742:	xor    r8d,r8d
  427745:	lea    rdx,[rip+0x21e84]        # 4495d0 <fb_schema_table_missing@@Base+0x2110>
  42774c:	mov    rdi,r15
  42774f:	mov    rbp,QWORD PTR [rsp+0x28]
  427754:	call   41e370 <__flatcc_error_report@@Base>
  427759:	mov    eax,0x1
  42775e:	mov    WORD PTR [r12+0x28],ax
  427764:	jmp    425e50 <__flatcc_fb_build_schema@@Base+0x360>
  427769:	mov    rcx,QWORD PTR [r13+0x8]
  42776d:	mov    rsi,QWORD PTR [r12+0x8]
  427772:	xor    r9d,r9d
  427775:	xor    r8d,r8d
  427778:	lea    rdx,[rip+0x21dd1]        # 449550 <fb_schema_table_missing@@Base+0x2090>
  42777f:	mov    rdi,r15
  427782:	mov    rbp,QWORD PTR [rsp+0x28]
  427787:	call   41e370 <__flatcc_error_report@@Base>
  42778c:	mov    eax,0x1
  427791:	mov    WORD PTR [r12+0x28],ax
  427797:	jmp    425e50 <__flatcc_fb_build_schema@@Base+0x360>
  42779c:	lea    rcx,[rip+0x2242d]        # 449bd0 <fb_schema_table_missing@@Base+0x2710>
  4277a3:	mov    edx,0x5f1
  4277a8:	lea    rsi,[rip+0x20ce1]        # 448490 <fb_schema_table_missing@@Base+0xfd0>
  4277af:	lea    rdi,[rip+0x222a0]        # 449a56 <fb_schema_table_missing@@Base+0x2596>
  4277b6:	call   405300 <__assert_fail@plt>
  4277bb:	mov    rax,QWORD PTR [rip+0x2a826]        # 451fe8 <stderr@GLIBC_2.2.5>
  4277c2:	lea    rdx,[rip+0x8017]        # 42f7e0 <_IO_stdin_used@@Base+0x17e0>
  4277c9:	mov    rdi,QWORD PTR [rax]
  4277cc:	mov    esi,0x1
  4277d1:	xor    eax,eax
  4277d3:	call   405400 <__fprintf_chk@plt>
  4277d8:	mov    edi,0x1
  4277dd:	call   4053e0 <exit@plt>
  4277e2:	lea    rcx,[rip+0x224b7]        # 449ca0 <fb_schema_table_missing@@Base+0x27e0>
  4277e9:	mov    edx,0x616
  4277ee:	lea    rsi,[rip+0x20c9b]        # 448490 <fb_schema_table_missing@@Base+0xfd0>
  4277f5:	lea    rdi,[rip+0x21c1c]        # 449418 <fb_schema_table_missing@@Base+0x1f58>
  4277fc:	call   405300 <__assert_fail@plt>
  427801:	call   4052d0 <__stack_chk_fail@plt>
  427806:	lea    rcx,[rip+0x223e3]        # 449bf0 <fb_schema_table_missing@@Base+0x2730>
  42780d:	mov    edx,0x469
  427812:	lea    rsi,[rip+0x20c77]        # 448490 <fb_schema_table_missing@@Base+0xfd0>
  427819:	lea    rdi,[rip+0x22182]        # 4499a2 <fb_schema_table_missing@@Base+0x24e2>
  427820:	call   405300 <__assert_fail@plt>
  427825:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42782f:	nop

0000000000427830 <__flatcc_fb_coerce_scalar_type@@Base>:
  427830:	endbr64 
  427834:	movzx  eax,WORD PTR [rcx+0x10]
  427838:	test   ax,ax
  42783b:	je     427910 <__flatcc_fb_coerce_scalar_type@@Base+0xe0>
  427841:	push   rbx
  427842:	mov    rbx,rcx
  427845:	cmp    ax,0x4
  427849:	je     4278b0 <__flatcc_fb_coerce_scalar_type@@Base+0x80>
  42784b:	cmp    ax,0x1
  42784f:	je     427909 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  427855:	cmp    ax,0x6
  427859:	jne    427918 <__flatcc_fb_coerce_scalar_type@@Base+0xe8>
  42785f:	cmp    edx,0x5
  427862:	je     427909 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  427868:	mov    r11d,DWORD PTR [rdi+0xfc]
  42786f:	test   r11d,r11d
  427872:	je     427958 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
  427878:	movzx  eax,BYTE PTR [rcx]
  42787b:	mov    r10d,0x5
  427881:	mov    WORD PTR [rcx+0x10],r10w
  427886:	mov    QWORD PTR [rcx],rax
  427889:	cmp    rax,0x1
  42788d:	ja     427fb4 <__flatcc_fb_coerce_scalar_type@@Base+0x784>
  427893:	cmp    edx,0xb
  427896:	ja     427d60 <__flatcc_fb_coerce_scalar_type@@Base+0x530>
  42789c:	lea    rcx,[rip+0x228fd]        # 44a1a0 <fb_schema_table_missing@@Base+0x2ce0>
  4278a3:	mov    edx,edx
  4278a5:	movsxd rax,DWORD PTR [rcx+rdx*4]
  4278a9:	add    rax,rcx
  4278ac:	notrack jmp rax
  4278af:	nop
  4278b0:	cmp    QWORD PTR [rcx],0x0
  4278b4:	js     427938 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
  4278ba:	mov    eax,0x5
  4278bf:	mov    WORD PTR [rcx+0x10],ax
  4278c3:	cmp    edx,0xb
  4278c6:	ja     427d60 <__flatcc_fb_coerce_scalar_type@@Base+0x530>
  4278cc:	lea    rcx,[rip+0x228fd]        # 44a1d0 <fb_schema_table_missing@@Base+0x2d10>
  4278d3:	mov    edx,edx
  4278d5:	movsxd rax,DWORD PTR [rcx+rdx*4]
  4278d9:	add    rax,rcx
  4278dc:	notrack jmp rax
  4278df:	nop
  4278e0:	movzx  eax,WORD PTR [rbx+0x10]
  4278e4:	cmp    ax,0x4
  4278e8:	je     427909 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  4278ea:	cmp    ax,0x5
  4278ee:	jne    427e8a <__flatcc_fb_coerce_scalar_type@@Base+0x65a>
  4278f4:	cmp    QWORD PTR [rbx],0x0
  4278f8:	js     427f91 <__flatcc_fb_coerce_scalar_type@@Base+0x761>
  4278fe:	mov    r9d,0x4
  427904:	mov    WORD PTR [rbx+0x10],r9w
  427909:	xor    eax,eax
  42790b:	pop    rbx
  42790c:	ret    
  42790d:	nop    DWORD PTR [rax]
  427910:	xor    eax,eax
  427912:	ret    
  427913:	nop    DWORD PTR [rax+rax*1+0x0]
  427918:	cmp    edx,0xb
  42791b:	ja     427d60 <__flatcc_fb_coerce_scalar_type@@Base+0x530>
  427921:	lea    rcx,[rip+0x228d8]        # 44a200 <fb_schema_table_missing@@Base+0x2d40>
  427928:	mov    edx,edx
  42792a:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  42792e:	add    rdx,rcx
  427931:	notrack jmp rdx
  427934:	nop    DWORD PTR [rax+0x0]
  427938:	cmp    edx,0xb
  42793b:	ja     427d60 <__flatcc_fb_coerce_scalar_type@@Base+0x530>
  427941:	lea    rcx,[rip+0x228e8]        # 44a230 <fb_schema_table_missing@@Base+0x2d70>
  427948:	mov    edx,edx
  42794a:	movsxd rax,DWORD PTR [rcx+rdx*4]
  42794e:	add    rax,rcx
  427951:	notrack jmp rax
  427954:	nop    DWORD PTR [rax+0x0]
  427958:	cmp    edx,0xb
  42795b:	ja     427d60 <__flatcc_fb_coerce_scalar_type@@Base+0x530>
  427961:	lea    rcx,[rip+0x228f8]        # 44a260 <fb_schema_table_missing@@Base+0x2da0>
  427968:	mov    edx,edx
  42796a:	movsxd rax,DWORD PTR [rcx+rdx*4]
  42796e:	add    rax,rcx
  427971:	notrack jmp rax
  427974:	nop    DWORD PTR [rax+0x0]
  427978:	movzx  eax,WORD PTR [rbx+0x10]
  42797c:	cmp    ax,0x5
  427980:	jne    427d14 <__flatcc_fb_coerce_scalar_type@@Base+0x4e4>
  427986:	cmp    QWORD PTR [rbx],0xff
  42798d:	jbe    427909 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  427993:	mov    rsi,QWORD PTR [rsi+0x8]
  427997:	xor    r9d,r9d
  42799a:	xor    r8d,r8d
  42799d:	xor    ecx,ecx
  42799f:	lea    rdx,[rip+0x2271f]        # 44a0c5 <fb_schema_table_missing@@Base+0x2c05>
  4279a6:	call   41e370 <__flatcc_error_report@@Base>
  4279ab:	mov    WORD PTR [rbx+0x10],0x1
  4279b1:	or     eax,0xffffffff
  4279b4:	pop    rbx
  4279b5:	ret    
  4279b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4279c0:	movzx  eax,WORD PTR [rbx+0x10]
  4279c4:	cmp    ax,0x5
  4279c8:	jne    427d37 <__flatcc_fb_coerce_scalar_type@@Base+0x507>
  4279ce:	cmp    QWORD PTR [rbx],0xffff
  4279d5:	jbe    427909 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  4279db:	mov    rsi,QWORD PTR [rsi+0x8]
  4279df:	xor    r9d,r9d
  4279e2:	xor    r8d,r8d
  4279e5:	xor    ecx,ecx
  4279e7:	lea    rdx,[rip+0x22432]        # 449e20 <fb_schema_table_missing@@Base+0x2960>
  4279ee:	call   41e370 <__flatcc_error_report@@Base>
  4279f3:	mov    WORD PTR [rbx+0x10],0x1
  4279f9:	or     eax,0xffffffff
  4279fc:	pop    rbx
  4279fd:	ret    
  4279fe:	xchg   ax,ax
  427a00:	movzx  eax,WORD PTR [rbx+0x10]
  427a04:	cmp    ax,0x5
  427a08:	jne    427cf1 <__flatcc_fb_coerce_scalar_type@@Base+0x4c1>
  427a0e:	mov    eax,0xffffffff
  427a13:	cmp    QWORD PTR [rbx],rax
  427a16:	jbe    427909 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  427a1c:	mov    rsi,QWORD PTR [rsi+0x8]
  427a20:	xor    r9d,r9d
  427a23:	xor    r8d,r8d
  427a26:	xor    ecx,ecx
  427a28:	lea    rdx,[rip+0x22679]        # 44a0a8 <fb_schema_table_missing@@Base+0x2be8>
  427a2f:	call   41e370 <__flatcc_error_report@@Base>
  427a34:	mov    WORD PTR [rbx+0x10],0x1
  427a3a:	or     eax,0xffffffff
  427a3d:	pop    rbx
  427a3e:	ret    
  427a3f:	nop
  427a40:	cmp    WORD PTR [rbx+0x10],0x5
  427a45:	je     427909 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  427a4b:	mov    rsi,QWORD PTR [rsi+0x8]
  427a4f:	xor    r9d,r9d
  427a52:	xor    r8d,r8d
  427a55:	xor    ecx,ecx
  427a57:	lea    rdx,[rip+0x22312]        # 449d70 <fb_schema_table_missing@@Base+0x28b0>
  427a5e:	call   41e370 <__flatcc_error_report@@Base>
  427a63:	mov    WORD PTR [rbx+0x10],0x1
  427a69:	or     eax,0xffffffff
  427a6c:	pop    rbx
  427a6d:	ret    
  427a6e:	xchg   ax,ax
  427a70:	movzx  eax,WORD PTR [rbx+0x10]
  427a74:	cmp    ax,0x4
  427a78:	je     427c80 <__flatcc_fb_coerce_scalar_type@@Base+0x450>
  427a7e:	cmp    ax,0x5
  427a82:	je     427df8 <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
  427a88:	cmp    ax,0x3
  427a8c:	je     427909 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  427a92:	mov    rsi,QWORD PTR [rsi+0x8]
  427a96:	lea    rdx,[rip+0x225d3]        # 44a070 <fb_schema_table_missing@@Base+0x2bb0>
  427a9d:	xor    r9d,r9d
  427aa0:	xor    r8d,r8d
  427aa3:	xor    ecx,ecx
  427aa5:	call   41e370 <__flatcc_error_report@@Base>
  427aaa:	mov    edx,0x1
  427aaf:	mov    WORD PTR [rbx+0x10],dx
  427ab3:	mov    eax,0xffffffff
  427ab8:	pop    rbx
  427ab9:	ret    
  427aba:	nop    WORD PTR [rax+rax*1+0x0]
  427ac0:	movzx  eax,WORD PTR [rbx+0x10]
  427ac4:	cmp    ax,0x4
  427ac8:	je     427cb8 <__flatcc_fb_coerce_scalar_type@@Base+0x488>
  427ace:	cmp    ax,0x5
  427ad2:	je     427e50 <__flatcc_fb_coerce_scalar_type@@Base+0x620>
  427ad8:	cmp    ax,0x3
  427adc:	je     427909 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  427ae2:	mov    rsi,QWORD PTR [rsi+0x8]
  427ae6:	xor    r9d,r9d
  427ae9:	xor    r8d,r8d
  427aec:	xor    ecx,ecx
  427aee:	lea    rdx,[rip+0x2250b]        # 44a000 <fb_schema_table_missing@@Base+0x2b40>
  427af5:	call   41e370 <__flatcc_error_report@@Base>
  427afa:	mov    esi,0x1
  427aff:	mov    WORD PTR [rbx+0x10],si
  427b03:	mov    eax,0xffffffff
  427b08:	pop    rbx
  427b09:	ret    
  427b0a:	nop    WORD PTR [rax+rax*1+0x0]
  427b10:	movzx  eax,WORD PTR [rbx+0x10]
  427b14:	cmp    ax,0x4
  427b18:	je     427bf0 <__flatcc_fb_coerce_scalar_type@@Base+0x3c0>
  427b1e:	cmp    ax,0x5
  427b22:	jne    427d88 <__flatcc_fb_coerce_scalar_type@@Base+0x558>
  427b28:	cmp    QWORD PTR [rbx],0x7f
  427b2c:	jle    4278fe <__flatcc_fb_coerce_scalar_type@@Base+0xce>
  427b32:	mov    rsi,QWORD PTR [rsi+0x8]
  427b36:	xor    r9d,r9d
  427b39:	xor    r8d,r8d
  427b3c:	xor    ecx,ecx
  427b3e:	lea    rdx,[rip+0x2262b]        # 44a170 <fb_schema_table_missing@@Base+0x2cb0>
  427b45:	call   41e370 <__flatcc_error_report@@Base>
  427b4a:	mov    WORD PTR [rbx+0x10],0x1
  427b50:	or     eax,0xffffffff
  427b53:	pop    rbx
  427b54:	ret    
  427b55:	nop    DWORD PTR [rax]
  427b58:	movzx  eax,WORD PTR [rbx+0x10]
  427b5c:	cmp    ax,0x4
  427b60:	je     427c20 <__flatcc_fb_coerce_scalar_type@@Base+0x3f0>
  427b66:	cmp    ax,0x5
  427b6a:	jne    427dab <__flatcc_fb_coerce_scalar_type@@Base+0x57b>
  427b70:	cmp    QWORD PTR [rbx],0x7fff
  427b77:	jle    4278fe <__flatcc_fb_coerce_scalar_type@@Base+0xce>
  427b7d:	mov    rsi,QWORD PTR [rsi+0x8]
  427b81:	xor    r9d,r9d
  427b84:	xor    r8d,r8d
  427b87:	xor    ecx,ecx
  427b89:	lea    rdx,[rip+0x225a7]        # 44a137 <fb_schema_table_missing@@Base+0x2c77>
  427b90:	call   41e370 <__flatcc_error_report@@Base>
  427b95:	mov    WORD PTR [rbx+0x10],0x1
  427b9b:	or     eax,0xffffffff
  427b9e:	pop    rbx
  427b9f:	ret    
  427ba0:	movzx  eax,WORD PTR [rbx+0x10]
  427ba4:	cmp    ax,0x4
  427ba8:	je     427c50 <__flatcc_fb_coerce_scalar_type@@Base+0x420>
  427bae:	cmp    ax,0x5
  427bb2:	jne    427dce <__flatcc_fb_coerce_scalar_type@@Base+0x59e>
  427bb8:	cmp    QWORD PTR [rbx],0x7fffffff
  427bbf:	jle    4278fe <__flatcc_fb_coerce_scalar_type@@Base+0xce>
  427bc5:	mov    rsi,QWORD PTR [rsi+0x8]
  427bc9:	xor    r9d,r9d
  427bcc:	xor    r8d,r8d
  427bcf:	xor    ecx,ecx
  427bd1:	lea    rdx,[rip+0x22526]        # 44a0fe <fb_schema_table_missing@@Base+0x2c3e>
  427bd8:	call   41e370 <__flatcc_error_report@@Base>
  427bdd:	mov    WORD PTR [rbx+0x10],0x1
  427be3:	or     eax,0xffffffff
  427be6:	pop    rbx
  427be7:	ret    
  427be8:	nop    DWORD PTR [rax+rax*1+0x0]
  427bf0:	cmp    QWORD PTR [rbx],0xffffffffffffff80
  427bf4:	jge    427909 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  427bfa:	mov    rsi,QWORD PTR [rsi+0x8]
  427bfe:	xor    r9d,r9d
  427c01:	xor    r8d,r8d
  427c04:	xor    ecx,ecx
  427c06:	lea    rdx,[rip+0x22547]        # 44a154 <fb_schema_table_missing@@Base+0x2c94>
  427c0d:	call   41e370 <__flatcc_error_report@@Base>
  427c12:	mov    WORD PTR [rbx+0x10],0x1
  427c18:	or     eax,0xffffffff
  427c1b:	pop    rbx
  427c1c:	ret    
  427c1d:	nop    DWORD PTR [rax]
  427c20:	cmp    QWORD PTR [rbx],0xffffffffffff8000
  427c27:	jge    427909 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  427c2d:	mov    rsi,QWORD PTR [rsi+0x8]
  427c31:	xor    r9d,r9d
  427c34:	xor    r8d,r8d
  427c37:	xor    ecx,ecx
  427c39:	lea    rdx,[rip+0x224d9]        # 44a119 <fb_schema_table_missing@@Base+0x2c59>
  427c40:	call   41e370 <__flatcc_error_report@@Base>
  427c45:	mov    WORD PTR [rbx+0x10],0x1
  427c4b:	or     eax,0xffffffff
  427c4e:	pop    rbx
  427c4f:	ret    
  427c50:	cmp    QWORD PTR [rbx],0xffffffff80000000
  427c57:	jge    427909 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  427c5d:	mov    rsi,QWORD PTR [rsi+0x8]
  427c61:	xor    r9d,r9d
  427c64:	xor    r8d,r8d
  427c67:	xor    ecx,ecx
  427c69:	lea    rdx,[rip+0x22472]        # 44a0e2 <fb_schema_table_missing@@Base+0x2c22>
  427c70:	call   41e370 <__flatcc_error_report@@Base>
  427c75:	mov    WORD PTR [rbx+0x10],0x1
  427c7b:	or     eax,0xffffffff
  427c7e:	pop    rbx
  427c7f:	ret    
  427c80:	mov    rax,QWORD PTR [rbx]
  427c83:	vxorps xmm0,xmm0,xmm0
  427c87:	vcvtsi2ss xmm0,xmm0,rax
  427c8c:	vcvttss2si rdx,xmm0
  427c91:	cmp    rax,rdx
  427c94:	jne    427e29 <__flatcc_fb_coerce_scalar_type@@Base+0x5f9>
  427c9a:	vcvtss2sd xmm0,xmm0,xmm0
  427c9e:	mov    ecx,0x3
  427ca3:	vmovsd QWORD PTR [rbx],xmm0
  427ca7:	mov    WORD PTR [rbx+0x10],cx
  427cab:	xor    eax,eax
  427cad:	jmp    42790b <__flatcc_fb_coerce_scalar_type@@Base+0xdb>
  427cb2:	nop    WORD PTR [rax+rax*1+0x0]
  427cb8:	mov    rax,QWORD PTR [rbx]
  427cbb:	vxorpd xmm0,xmm0,xmm0
  427cbf:	vcvtsi2sd xmm0,xmm0,rax
  427cc4:	vcvttsd2si rdx,xmm0
  427cc9:	cmp    rax,rdx
  427ccc:	je     427c9e <__flatcc_fb_coerce_scalar_type@@Base+0x46e>
  427cce:	mov    rsi,QWORD PTR [rsi+0x8]
  427cd2:	xor    r9d,r9d
  427cd5:	xor    r8d,r8d
  427cd8:	xor    ecx,ecx
  427cda:	lea    rdx,[rip+0x222ef]        # 449fd0 <fb_schema_table_missing@@Base+0x2b10>
  427ce1:	call   41e370 <__flatcc_error_report@@Base>
  427ce6:	mov    WORD PTR [rbx+0x10],0x1
  427cec:	or     eax,0xffffffff
  427cef:	pop    rbx
  427cf0:	ret    
  427cf1:	mov    rsi,QWORD PTR [rsi+0x8]
  427cf5:	xor    r9d,r9d
  427cf8:	xor    r8d,r8d
  427cfb:	xor    ecx,ecx
  427cfd:	lea    rdx,[rip+0x220a4]        # 449da8 <fb_schema_table_missing@@Base+0x28e8>
  427d04:	call   41e370 <__flatcc_error_report@@Base>
  427d09:	mov    WORD PTR [rbx+0x10],0x1
  427d0f:	or     eax,0xffffffff
  427d12:	pop    rbx
  427d13:	ret    
  427d14:	mov    rsi,QWORD PTR [rsi+0x8]
  427d18:	xor    r9d,r9d
  427d1b:	xor    r8d,r8d
  427d1e:	xor    ecx,ecx
  427d20:	lea    rdx,[rip+0x22119]        # 449e40 <fb_schema_table_missing@@Base+0x2980>
  427d27:	call   41e370 <__flatcc_error_report@@Base>
  427d2c:	mov    WORD PTR [rbx+0x10],0x1
  427d32:	or     eax,0xffffffff
  427d35:	pop    rbx
  427d36:	ret    
  427d37:	mov    rsi,QWORD PTR [rsi+0x8]
  427d3b:	xor    r9d,r9d
  427d3e:	xor    r8d,r8d
  427d41:	xor    ecx,ecx
  427d43:	lea    rdx,[rip+0x22096]        # 449de0 <fb_schema_table_missing@@Base+0x2920>
  427d4a:	call   41e370 <__flatcc_error_report@@Base>
  427d4f:	mov    WORD PTR [rbx+0x10],0x1
  427d55:	or     eax,0xffffffff
  427d58:	pop    rbx
  427d59:	ret    
  427d5a:	nop    WORD PTR [rax+rax*1+0x0]
  427d60:	mov    rsi,QWORD PTR [rsi+0x8]
  427d64:	xor    r9d,r9d
  427d67:	xor    r8d,r8d
  427d6a:	xor    ecx,ecx
  427d6c:	lea    rdx,[rip+0x22418]        # 44a18b <fb_schema_table_missing@@Base+0x2ccb>
  427d73:	call   41e370 <__flatcc_error_report@@Base>
  427d78:	mov    eax,0x1
  427d7d:	mov    WORD PTR [rbx+0x10],ax
  427d81:	mov    eax,0xffffffff
  427d86:	pop    rbx
  427d87:	ret    
  427d88:	mov    rsi,QWORD PTR [rsi+0x8]
  427d8c:	xor    r9d,r9d
  427d8f:	xor    r8d,r8d
  427d92:	xor    ecx,ecx
  427d94:	lea    rdx,[rip+0x2218d]        # 449f28 <fb_schema_table_missing@@Base+0x2a68>
  427d9b:	call   41e370 <__flatcc_error_report@@Base>
  427da0:	mov    WORD PTR [rbx+0x10],0x1
  427da6:	or     eax,0xffffffff
  427da9:	pop    rbx
  427daa:	ret    
  427dab:	mov    rsi,QWORD PTR [rsi+0x8]
  427daf:	xor    r9d,r9d
  427db2:	xor    r8d,r8d
  427db5:	xor    ecx,ecx
  427db7:	lea    rdx,[rip+0x2213a]        # 449ef8 <fb_schema_table_missing@@Base+0x2a38>
  427dbe:	call   41e370 <__flatcc_error_report@@Base>
  427dc3:	mov    WORD PTR [rbx+0x10],0x1
  427dc9:	or     eax,0xffffffff
  427dcc:	pop    rbx
  427dcd:	ret    
  427dce:	mov    rsi,QWORD PTR [rsi+0x8]
  427dd2:	xor    r9d,r9d
  427dd5:	xor    r8d,r8d
  427dd8:	xor    ecx,ecx
  427dda:	lea    rdx,[rip+0x220e7]        # 449ec8 <fb_schema_table_missing@@Base+0x2a08>
  427de1:	call   41e370 <__flatcc_error_report@@Base>
  427de6:	mov    WORD PTR [rbx+0x10],0x1
  427dec:	or     eax,0xffffffff
  427def:	pop    rbx
  427df0:	ret    
  427df1:	nop    DWORD PTR [rax+0x0]
  427df8:	mov    rdx,QWORD PTR [rbx]
  427dfb:	test   rdx,rdx
  427dfe:	js     427f4f <__flatcc_fb_coerce_scalar_type@@Base+0x71f>
  427e04:	vxorps xmm0,xmm0,xmm0
  427e08:	vcvtsi2ss xmm0,xmm0,rdx
  427e0d:	vcomiss xmm0,DWORD PTR [rip+0x224a3]        # 44a2b8 <fb_schema_table_missing@@Base+0x2df8>
  427e15:	jae    427f25 <__flatcc_fb_coerce_scalar_type@@Base+0x6f5>
  427e1b:	vcvttss2si rax,xmm0
  427e20:	cmp    rdx,rax
  427e23:	je     427c9a <__flatcc_fb_coerce_scalar_type@@Base+0x46a>
  427e29:	mov    rsi,QWORD PTR [rsi+0x8]
  427e2d:	xor    r9d,r9d
  427e30:	xor    r8d,r8d
  427e33:	xor    ecx,ecx
  427e35:	lea    rdx,[rip+0x22204]        # 44a040 <fb_schema_table_missing@@Base+0x2b80>
  427e3c:	call   41e370 <__flatcc_error_report@@Base>
  427e41:	mov    WORD PTR [rbx+0x10],0x1
  427e47:	or     eax,0xffffffff
  427e4a:	pop    rbx
  427e4b:	ret    
  427e4c:	nop    DWORD PTR [rax+0x0]
  427e50:	mov    rdx,QWORD PTR [rbx]
  427e53:	test   rdx,rdx
  427e56:	js     427f70 <__flatcc_fb_coerce_scalar_type@@Base+0x740>
  427e5c:	vxorpd xmm0,xmm0,xmm0
  427e60:	vcvtsi2sd xmm0,xmm0,rdx
  427e65:	vmovsd xmm1,QWORD PTR [rip+0x22443]        # 44a2b0 <fb_schema_table_missing@@Base+0x2df0>
  427e6d:	vcomisd xmm0,xmm1
  427e71:	jae    427f3c <__flatcc_fb_coerce_scalar_type@@Base+0x70c>
  427e77:	vcvttsd2si rax,xmm0
  427e7c:	cmp    rdx,rax
  427e7f:	je     427c9e <__flatcc_fb_coerce_scalar_type@@Base+0x46e>
  427e85:	jmp    427cce <__flatcc_fb_coerce_scalar_type@@Base+0x49e>
  427e8a:	mov    rsi,QWORD PTR [rsi+0x8]
  427e8e:	xor    r9d,r9d
  427e91:	xor    r8d,r8d
  427e94:	xor    ecx,ecx
  427e96:	lea    rdx,[rip+0x21ffb]        # 449e98 <fb_schema_table_missing@@Base+0x29d8>
  427e9d:	call   41e370 <__flatcc_error_report@@Base>
  427ea2:	mov    WORD PTR [rbx+0x10],0x1
  427ea8:	or     eax,0xffffffff
  427eab:	pop    rbx
  427eac:	ret    
  427ead:	nop    DWORD PTR [rax]
  427eb0:	cmp    ax,0x5
  427eb4:	jne    427f18 <__flatcc_fb_coerce_scalar_type@@Base+0x6e8>
  427eb6:	mov    r8d,DWORD PTR [rdi+0xfc]
  427ebd:	test   r8d,r8d
  427ec0:	jne    427ee8 <__flatcc_fb_coerce_scalar_type@@Base+0x6b8>
  427ec2:	mov    rsi,QWORD PTR [rsi+0x8]
  427ec6:	xor    r9d,r9d
  427ec9:	xor    r8d,r8d
  427ecc:	xor    ecx,ecx
  427ece:	lea    rdx,[rip+0x220c3]        # 449f98 <fb_schema_table_missing@@Base+0x2ad8>
  427ed5:	call   41e370 <__flatcc_error_report@@Base>
  427eda:	mov    WORD PTR [rbx+0x10],0x1
  427ee0:	or     eax,0xffffffff
  427ee3:	pop    rbx
  427ee4:	ret    
  427ee5:	nop    DWORD PTR [rax]
  427ee8:	cmp    QWORD PTR [rbx],0x1
  427eec:	jbe    427909 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  427ef2:	mov    rsi,QWORD PTR [rsi+0x8]
  427ef6:	xor    r9d,r9d
  427ef9:	xor    r8d,r8d
  427efc:	xor    ecx,ecx
  427efe:	lea    rdx,[rip+0x22053]        # 449f58 <fb_schema_table_missing@@Base+0x2a98>
  427f05:	call   41e370 <__flatcc_error_report@@Base>
  427f0a:	mov    WORD PTR [rbx+0x10],0x1
  427f10:	or     eax,0xffffffff
  427f13:	pop    rbx
  427f14:	ret    
  427f15:	nop    DWORD PTR [rax]
  427f18:	cmp    ax,0x6
  427f1c:	jne    427ec2 <__flatcc_fb_coerce_scalar_type@@Base+0x692>
  427f1e:	xor    eax,eax
  427f20:	jmp    42790b <__flatcc_fb_coerce_scalar_type@@Base+0xdb>
  427f25:	vsubss xmm1,xmm0,DWORD PTR [rip+0x2238b]        # 44a2b8 <fb_schema_table_missing@@Base+0x2df8>
  427f2d:	vcvttss2si rax,xmm1
  427f32:	btc    rax,0x3f
  427f37:	jmp    427e20 <__flatcc_fb_coerce_scalar_type@@Base+0x5f0>
  427f3c:	vsubsd xmm1,xmm0,xmm1
  427f40:	vcvttsd2si rax,xmm1
  427f45:	btc    rax,0x3f
  427f4a:	jmp    427e7c <__flatcc_fb_coerce_scalar_type@@Base+0x64c>
  427f4f:	mov    rax,rdx
  427f52:	mov    rcx,rdx
  427f55:	shr    rax,1
  427f58:	and    ecx,0x1
  427f5b:	or     rax,rcx
  427f5e:	vxorps xmm0,xmm0,xmm0
  427f62:	vcvtsi2ss xmm0,xmm0,rax
  427f67:	vaddss xmm0,xmm0,xmm0
  427f6b:	jmp    427e0d <__flatcc_fb_coerce_scalar_type@@Base+0x5dd>
  427f70:	mov    rax,rdx
  427f73:	mov    rcx,rdx
  427f76:	shr    rax,1
  427f79:	and    ecx,0x1
  427f7c:	or     rax,rcx
  427f7f:	vxorpd xmm0,xmm0,xmm0
  427f83:	vcvtsi2sd xmm0,xmm0,rax
  427f88:	vaddsd xmm0,xmm0,xmm0
  427f8c:	jmp    427e65 <__flatcc_fb_coerce_scalar_type@@Base+0x635>
  427f91:	mov    rsi,QWORD PTR [rsi+0x8]
  427f95:	xor    r9d,r9d
  427f98:	xor    r8d,r8d
  427f9b:	xor    ecx,ecx
  427f9d:	lea    rdx,[rip+0x21ed4]        # 449e78 <fb_schema_table_missing@@Base+0x29b8>
  427fa4:	call   41e370 <__flatcc_error_report@@Base>
  427fa9:	mov    WORD PTR [rbx+0x10],0x1
  427faf:	or     eax,0xffffffff
  427fb2:	pop    rbx
  427fb3:	ret    
  427fb4:	lea    rcx,[rip+0x222d5]        # 44a290 <fb_schema_table_missing@@Base+0x2dd0>
  427fbb:	mov    edx,0x34
  427fc0:	lea    rsi,[rip+0x21d29]        # 449cf0 <fb_schema_table_missing@@Base+0x2830>
  427fc7:	lea    rdi,[rip+0x21d82]        # 449d50 <fb_schema_table_missing@@Base+0x2890>
  427fce:	call   405300 <__assert_fail@plt>
  427fd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427fdd:	nop    DWORD PTR [rax]
  427fe0:	push   rbp
  427fe1:	mov    ebp,edx
  427fe3:	mov    r8d,0x1
  427fe9:	push   rbx
  427fea:	mov    rbx,rdi
  427fed:	mov    ecx,0x1
  427ff2:	sub    rsp,0x8
  427ff6:	mov    edx,DWORD PTR [rdi+0x28]
  427ff9:	add    rdx,rsi
  427ffc:	lea    rsi,[rdi+0x68]
  428000:	mov    rdi,QWORD PTR [rdi+0x40]
  428004:	call   QWORD PTR [rbx+0x50]
  428007:	test   eax,eax
  428009:	jne    428038 <__flatcc_fb_coerce_scalar_type@@Base+0x808>
  42800b:	mov    edx,DWORD PTR [rbx+0x28]
  42800e:	mov    rcx,rdx
  428011:	add    rdx,QWORD PTR [rbx+0x68]
  428015:	mov    QWORD PTR [rbx+0x18],rdx
  428019:	mov    edx,DWORD PTR [rbx+0x70]
  42801c:	sub    edx,ecx
  42801e:	cmp    ebp,edx
  428020:	cmovb  edx,ebp
  428023:	mov    DWORD PTR [rbx+0x24],edx
  428026:	mov    rdx,QWORD PTR [rbx+0x30]
  42802a:	mov    DWORD PTR [rdx+0x4],ebp
  42802d:	add    rsp,0x8
  428031:	pop    rbx
  428032:	pop    rbp
  428033:	ret    
  428034:	nop    DWORD PTR [rax+0x0]
  428038:	mov    eax,0xffffffff
  42803d:	jmp    42802d <__flatcc_fb_coerce_scalar_type@@Base+0x7fd>
  42803f:	nop

0000000000428040 <flatcc_builder_default_alloc@@Base>:
  428040:	endbr64 
  428044:	push   r13
  428046:	push   r12
  428048:	push   rbp
  428049:	mov    rbp,rsi
  42804c:	push   rbx
  42804d:	sub    rsp,0x18
  428051:	test   rdx,rdx
  428054:	je     428118 <flatcc_builder_default_alloc@@Base+0xd8>
  42805a:	mov    r13d,ecx
  42805d:	cmp    r8d,0x4
  428061:	je     428150 <flatcc_builder_default_alloc@@Base+0x110>
  428067:	jle    4280e0 <flatcc_builder_default_alloc@@Base+0xa0>
  428069:	mov    rbx,rdx
  42806c:	cmp    r8d,0x5
  428070:	je     428098 <flatcc_builder_default_alloc@@Base+0x58>
  428072:	cmp    r8d,0x7
  428076:	mov    ebx,0x40
  42807b:	mov    eax,0x20
  428080:	cmovne rbx,rax
  428084:	cmp    rbx,rdx
  428087:	jae    428098 <flatcc_builder_default_alloc@@Base+0x58>
  428089:	nop    DWORD PTR [rax+0x0]
  428090:	add    rbx,rbx
  428093:	cmp    rdx,rbx
  428096:	ja     428090 <flatcc_builder_default_alloc@@Base+0x50>
  428098:	mov    rax,QWORD PTR [rbp+0x8]
  42809c:	cmp    rdx,rax
  42809f:	ja     4280ae <flatcc_builder_default_alloc@@Base+0x6e>
  4280a1:	shr    rax,1
  4280a4:	mov    rdx,rax
  4280a7:	xor    eax,eax
  4280a9:	cmp    rdx,rbx
  4280ac:	jae    4280d5 <flatcc_builder_default_alloc@@Base+0x95>
  4280ae:	mov    rdi,QWORD PTR [rbp+0x0]
  4280b2:	mov    rsi,rbx
  4280b5:	call   4053b0 <realloc@plt>
  4280ba:	mov    r12,rax
  4280bd:	test   rax,rax
  4280c0:	je     42815a <flatcc_builder_default_alloc@@Base+0x11a>
  4280c6:	test   r13d,r13d
  4280c9:	jne    4280f8 <flatcc_builder_default_alloc@@Base+0xb8>
  4280cb:	mov    QWORD PTR [rbp+0x0],r12
  4280cf:	mov    QWORD PTR [rbp+0x8],rbx
  4280d3:	xor    eax,eax
  4280d5:	add    rsp,0x18
  4280d9:	pop    rbx
  4280da:	pop    rbp
  4280db:	pop    r12
  4280dd:	pop    r13
  4280df:	ret    
  4280e0:	cmp    r8d,0x1
  4280e4:	mov    ebx,0x100
  4280e9:	mov    eax,0x20
  4280ee:	cmovne rbx,rax
  4280f2:	jmp    428084 <flatcc_builder_default_alloc@@Base+0x44>
  4280f4:	nop    DWORD PTR [rax+0x0]
  4280f8:	mov    rax,QWORD PTR [rbp+0x8]
  4280fc:	cmp    rax,rbx
  4280ff:	jae    4280cb <flatcc_builder_default_alloc@@Base+0x8b>
  428101:	mov    rdx,rbx
  428104:	sub    rdx,rax
  428107:	lea    rdi,[r12+rax*1]
  42810b:	xor    esi,esi
  42810d:	call   405310 <memset@plt>
  428112:	jmp    4280cb <flatcc_builder_default_alloc@@Base+0x8b>
  428114:	nop    DWORD PTR [rax+0x0]
  428118:	mov    rdi,QWORD PTR [rsi]
  42811b:	xor    eax,eax
  42811d:	test   rdi,rdi
  428120:	je     4280d5 <flatcc_builder_default_alloc@@Base+0x95>
  428122:	mov    DWORD PTR [rsp+0xc],eax
  428126:	call   405240 <free@plt>
  42812b:	mov    QWORD PTR [rbp+0x0],0x0
  428133:	mov    QWORD PTR [rbp+0x8],0x0
  42813b:	mov    eax,DWORD PTR [rsp+0xc]
  42813f:	add    rsp,0x18
  428143:	pop    rbx
  428144:	pop    rbp
  428145:	pop    r12
  428147:	pop    r13
  428149:	ret    
  42814a:	nop    WORD PTR [rax+rax*1+0x0]
  428150:	mov    ebx,0x120
  428155:	jmp    428084 <flatcc_builder_default_alloc@@Base+0x44>
  42815a:	mov    eax,0xffffffff
  42815f:	jmp    4280d5 <flatcc_builder_default_alloc@@Base+0x95>
  428164:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42816f:	nop
  428170:	push   rax
  428171:	pop    rax
  428172:	lea    rcx,[rip+0x22bf7]        # 44ad70 <fb_schema_table_missing@@Base+0x38b0>
  428179:	mov    edx,0x134
  42817e:	lea    rsi,[rip+0x2213b]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  428185:	lea    rdi,[rip+0x101cd]        # 438359 <_IO_stdin_used@@Base+0xa359>
  42818c:	sub    rsp,0x8
  428190:	call   405300 <__assert_fail@plt>
  428195:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4281a0:	push   rax
  4281a1:	pop    rax
  4281a2:	lea    rcx,[rip+0x22b57]        # 44ad00 <fb_schema_table_missing@@Base+0x3840>
  4281a9:	mov    edx,0x2a5
  4281ae:	lea    rsi,[rip+0x2210b]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  4281b5:	lea    rdi,[rip+0x1019d]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4281bc:	sub    rsp,0x8
  4281c0:	call   405300 <__assert_fail@plt>
  4281c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4281d0:	push   rbx
  4281d1:	mov    r9,rdi
  4281d4:	sub    rsp,0xa0
  4281db:	mov    rbx,QWORD PTR fs:0x28
  4281e4:	mov    QWORD PTR [rsp+0x98],rbx
  4281ec:	xor    ebx,ebx
  4281ee:	test   dx,dx
  4281f1:	je     428250 <flatcc_builder_default_alloc@@Base+0x210>
  4281f3:	mov    eax,edx
  4281f5:	movzx  edx,dx
  4281f8:	movzx  edi,WORD PTR [rsi]
  4281fb:	cmp    di,0x3
  4281ff:	ja     42820e <flatcc_builder_default_alloc@@Base+0x1ce>
  428201:	mov    edi,0x4
  428206:	mov    WORD PTR [rsi],di
  428209:	mov    edi,0x4
  42820e:	cmp    ax,di
  428211:	jbe    428216 <flatcc_builder_default_alloc@@Base+0x1d6>
  428213:	mov    WORD PTR [rsi],ax
  428216:	test   ecx,ecx
  428218:	jne    428227 <flatcc_builder_default_alloc@@Base+0x1e7>
  42821a:	mov    ebx,DWORD PTR [r9+0xf4]
  428221:	dec    edx
  428223:	and    edx,ebx
  428225:	jne    428270 <flatcc_builder_default_alloc@@Base+0x230>
  428227:	xor    eax,eax
  428229:	mov    rbx,QWORD PTR [rsp+0x98]
  428231:	xor    rbx,QWORD PTR fs:0x28
  42823a:	jne    4282dd <flatcc_builder_default_alloc@@Base+0x29d>
  428240:	add    rsp,0xa0
  428247:	pop    rbx
  428248:	ret    
  428249:	nop    DWORD PTR [rax+0x0]
  428250:	movzx  eax,WORD PTR [rdi+0xec]
  428257:	movzx  edx,ax
  42825a:	test   ax,ax
  42825d:	jne    4281f8 <flatcc_builder_default_alloc@@Base+0x1b8>
  42825f:	mov    edx,0x1
  428264:	mov    eax,0x1
  428269:	jmp    4281f8 <flatcc_builder_default_alloc@@Base+0x1b8>
  42826b:	nop    DWORD PTR [rax+rax*1+0x0]
  428270:	mov    rax,0x44ada0
  428277:	movsxd r8,edx
  42827a:	add    edx,ebx
  42827c:	mov    QWORD PTR [rsp],r8
  428280:	mov    QWORD PTR [rsp+0x10],rax
  428285:	mov    QWORD PTR [rsp+0x18],r8
  42828a:	mov    DWORD PTR [rsp+0x8],0x1
  428292:	mov    DWORD PTR [r9+0xf4],edx
  428299:	cmp    ebx,edx
  42829b:	jg     4282e7 <flatcc_builder_default_alloc@@Base+0x2a7>
  42829d:	mov    rdi,QWORD PTR [r9+0x38]
  4282a1:	lea    rsi,[rsp+0x10]
  4282a6:	mov    ecx,ebx
  4282a8:	mov    edx,0x1
  4282ad:	call   QWORD PTR [r9+0x48]
  4282b1:	test   eax,eax
  4282b3:	jne    4282e2 <flatcc_builder_default_alloc@@Base+0x2a2>
  4282b5:	cmp    ebx,0xffffffff
  4282b8:	jne    428227 <flatcc_builder_default_alloc@@Base+0x1e7>
  4282be:	lea    rcx,[rip+0x22a4b]        # 44ad10 <fb_schema_table_missing@@Base+0x3850>
  4282c5:	mov    edx,0x2be
  4282ca:	lea    rsi,[rip+0x21fef]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  4282d1:	lea    rdi,[rip+0x10081]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4282d8:	call   405300 <__assert_fail@plt>
  4282dd:	call   4052d0 <__stack_chk_fail@plt>
  4282e2:	call   4281a0 <flatcc_builder_default_alloc@@Base+0x160>
  4282e7:	lea    rcx,[rip+0x22a12]        # 44ad00 <fb_schema_table_missing@@Base+0x3840>
  4282ee:	mov    edx,0x2a1
  4282f3:	lea    rsi,[rip+0x21fc6]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  4282fa:	lea    rdi,[rip+0x10058]        # 438359 <_IO_stdin_used@@Base+0xa359>
  428301:	call   405300 <__assert_fail@plt>
  428306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428310:	push   rax
  428311:	pop    rax
  428312:	lea    rcx,[rip+0x229d7]        # 44acf0 <fb_schema_table_missing@@Base+0x3830>
  428319:	mov    edx,0x28b
  42831e:	lea    rsi,[rip+0x21f9b]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  428325:	lea    rdi,[rip+0x1002d]        # 438359 <_IO_stdin_used@@Base+0xa359>
  42832c:	sub    rsp,0x8
  428330:	call   405300 <__assert_fail@plt>
  428335:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428340:	push   rax
  428341:	pop    rax
  428342:	lea    rcx,[rip+0x22907]        # 44ac50 <fb_schema_table_missing@@Base+0x3790>
  428349:	mov    edx,0x37c
  42834e:	lea    rsi,[rip+0x21f6b]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  428355:	lea    rdi,[rip+0x222d4]        # 44a630 <fb_schema_table_missing@@Base+0x3170>
  42835c:	sub    rsp,0x8
  428360:	call   405300 <__assert_fail@plt>
  428365:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428370:	push   r12
  428372:	mov    r12d,esi
  428375:	push   rbp
  428376:	push   rbx
  428377:	mov    rbx,rdi
  42837a:	movsxd rax,DWORD PTR [rdi+0x104]
  428381:	lea    edx,[rax+0x1]
  428384:	mov    DWORD PTR [rdi+0x104],edx
  42838a:	cmp    edx,DWORD PTR [rdi+0x108]
  428390:	jle    428460 <flatcc_builder_default_alloc@@Base+0x420>
  428396:	mov    ecx,DWORD PTR [rdi+0x120]
  42839c:	cmp    edx,ecx
  42839e:	jle    4283a8 <flatcc_builder_default_alloc@@Base+0x368>
  4283a0:	test   ecx,ecx
  4283a2:	jg     428478 <flatcc_builder_default_alloc@@Base+0x438>
  4283a8:	lea    rcx,[rax+rax*8]
  4283ac:	lea    rbp,[rcx*4+0x0]
  4283b4:	lea    rdx,[rbp+0x24]
  4283b8:	cmp    rdx,QWORD PTR [rbx+0xa0]
  4283bf:	jbe    4283df <flatcc_builder_default_alloc@@Base+0x39f>
  4283c1:	mov    rdi,QWORD PTR [rbx+0x40]
  4283c5:	xor    ecx,ecx
  4283c7:	lea    rsi,[rbx+0x98]
  4283ce:	mov    r8d,0x4
  4283d4:	call   QWORD PTR [rbx+0x50]
  4283d7:	test   eax,eax
  4283d9:	jne    42847f <flatcc_builder_default_alloc@@Base+0x43f>
  4283df:	mov    rcx,rbp
  4283e2:	add    rcx,QWORD PTR [rbx+0x98]
  4283e9:	mov    QWORD PTR [rbx+0x30],rcx
  4283ed:	je     428478 <flatcc_builder_default_alloc@@Base+0x438>
  4283f3:	movabs rdx,0xe38e38e38e38e38f
  4283fd:	mov    rax,rdx
  428400:	mul    QWORD PTR [rbx+0xa0]
  428407:	mov    eax,DWORD PTR [rbx+0x120]
  42840d:	shr    rdx,0x5
  428411:	mov    DWORD PTR [rbx+0x108],edx
  428417:	cmp    eax,edx
  428419:	jge    428420 <flatcc_builder_default_alloc@@Base+0x3e0>
  42841b:	test   eax,eax
  42841d:	jg     428470 <flatcc_builder_default_alloc@@Base+0x430>
  42841f:	nop
  428420:	movzx  eax,WORD PTR [rbx+0xea]
  428427:	mov    edx,DWORD PTR [rbx+0x20]
  42842a:	mov    WORD PTR [rcx+0xc],ax
  42842e:	mov    eax,DWORD PTR [rbx+0x28]
  428431:	mov    DWORD PTR [rcx+0x8],edx
  428434:	mov    WORD PTR [rbx+0xea],r12w
  42843c:	mov    DWORD PTR [rcx],eax
  42843e:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  428445:	lea    eax,[rdx+rax*1+0x7]
  428449:	mov    DWORD PTR [rbx+0x20],0x0
  428450:	and    eax,0xfffffff8
  428453:	mov    DWORD PTR [rbx+0x28],eax
  428456:	xor    eax,eax
  428458:	pop    rbx
  428459:	pop    rbp
  42845a:	pop    r12
  42845c:	ret    
  42845d:	nop    DWORD PTR [rax]
  428460:	mov    rax,QWORD PTR [rdi+0x30]
  428464:	lea    rcx,[rax+0x24]
  428468:	mov    QWORD PTR [rdi+0x30],rcx
  42846c:	jmp    428420 <flatcc_builder_default_alloc@@Base+0x3e0>
  42846e:	xchg   ax,ax
  428470:	mov    DWORD PTR [rbx+0x108],eax
  428476:	jmp    428420 <flatcc_builder_default_alloc@@Base+0x3e0>
  428478:	mov    eax,0xffffffff
  42847d:	jmp    428458 <flatcc_builder_default_alloc@@Base+0x418>
  42847f:	call   428170 <flatcc_builder_default_alloc@@Base+0x130>
  428484:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42848f:	nop
  428490:	push   rbp
  428491:	push   rbx
  428492:	sub    rsp,0xb8
  428499:	mov    rax,QWORD PTR fs:0x28
  4284a2:	mov    QWORD PTR [rsp+0xa8],rax
  4284aa:	xor    eax,eax
  4284ac:	cmp    edx,0x3fffffff
  4284b2:	ja     428648 <flatcc_builder_default_alloc@@Base+0x608>
  4284b8:	cmp    WORD PTR [rdi+0xe8],0x3
  4284c0:	mov    rbx,rdi
  4284c3:	ja     4284d1 <flatcc_builder_default_alloc@@Base+0x491>
  4284c5:	mov    eax,0x4
  4284ca:	mov    WORD PTR [rdi+0xe8],ax
  4284d1:	mov    edi,DWORD PTR [rbx+0xf0]
  4284d7:	mov    r9d,edx
  4284da:	mov    eax,edi
  4284dc:	lea    r8,[rsp+0xc]
  4284e1:	and    eax,0x3
  4284e4:	shl    r9d,0x2
  4284e8:	mov    QWORD PTR [rsp+0x20],r8
  4284ed:	mov    DWORD PTR [rsp+0xc],edx
  4284f1:	mov    QWORD PTR [rsp+0x10],0x4
  4284fa:	mov    QWORD PTR [rsp+0x28],0x4
  428503:	mov    DWORD PTR [rsp+0x18],0x1
  42850b:	mov    r8d,0x4
  428511:	je     428531 <flatcc_builder_default_alloc@@Base+0x4f1>
  428513:	mov    r9d,r9d
  428516:	lea    r8,[r9+0x4]
  42851a:	mov    QWORD PTR [rsp+0x10],r8
  42851f:	mov    QWORD PTR [rsp+0x30],rsi
  428524:	mov    QWORD PTR [rsp+0x38],r9
  428529:	mov    DWORD PTR [rsp+0x18],0x2
  428531:	test   eax,eax
  428533:	jne    428610 <flatcc_builder_default_alloc@@Base+0x5d0>
  428539:	mov    r10d,r8d
  42853c:	test   edx,edx
  42853e:	je     4285b6 <flatcc_builder_default_alloc@@Base+0x576>
  428540:	sub    r10d,edi
  428543:	lea    r9d,[rdx-0x1]
  428547:	xor    eax,eax
  428549:	sub    r10d,0x4
  42854d:	jmp    428578 <flatcc_builder_default_alloc@@Base+0x538>
  42854f:	nop
  428550:	mov    edi,eax
  428552:	neg    edi
  428554:	lea    edi,[r10+rdi*4]
  428558:	add    edx,edi
  42855a:	mov    DWORD PTR [rsi+rax*4],edx
  42855d:	test   rcx,rcx
  428560:	je     42856c <flatcc_builder_default_alloc@@Base+0x52c>
  428562:	cmp    BYTE PTR [rcx+rax*1],0x0
  428566:	je     42866b <flatcc_builder_default_alloc@@Base+0x62b>
  42856c:	lea    rdx,[rax+0x1]
  428570:	cmp    rax,r9
  428573:	je     4285b0 <flatcc_builder_default_alloc@@Base+0x570>
  428575:	mov    rax,rdx
  428578:	mov    edx,DWORD PTR [rsi+rax*4]
  42857b:	test   edx,edx
  42857d:	jne    428550 <flatcc_builder_default_alloc@@Base+0x510>
  42857f:	test   rcx,rcx
  428582:	je     42864c <flatcc_builder_default_alloc@@Base+0x60c>
  428588:	cmp    BYTE PTR [rcx+rax*1],0x0
  42858c:	je     42856c <flatcc_builder_default_alloc@@Base+0x52c>
  42858e:	lea    rcx,[rip+0x223db]        # 44a970 <fb_schema_table_missing@@Base+0x34b0>
  428595:	mov    edx,0x5b5
  42859a:	lea    rsi,[rip+0x21d1f]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  4285a1:	lea    rdi,[rip+0x220b1]        # 44a659 <fb_schema_table_missing@@Base+0x3199>
  4285a8:	call   405300 <__assert_fail@plt>
  4285ad:	nop    DWORD PTR [rax]
  4285b0:	mov    edi,DWORD PTR [rbx+0xf0]
  4285b6:	mov    ebp,edi
  4285b8:	sub    ebp,r8d
  4285bb:	cmp    ebp,edi
  4285bd:	jge    42868a <flatcc_builder_default_alloc@@Base+0x64a>
  4285c3:	mov    rdi,QWORD PTR [rbx+0x38]
  4285c7:	mov    edx,DWORD PTR [rsp+0x18]
  4285cb:	lea    rsi,[rsp+0x20]
  4285d0:	mov    ecx,ebp
  4285d2:	call   QWORD PTR [rbx+0x48]
  4285d5:	test   eax,eax
  4285d7:	jne    4286ae <flatcc_builder_default_alloc@@Base+0x66e>
  4285dd:	mov    DWORD PTR [rbx+0xf0],ebp
  4285e3:	mov    rbx,QWORD PTR [rsp+0xa8]
  4285eb:	xor    rbx,QWORD PTR fs:0x28
  4285f4:	mov    eax,ebp
  4285f6:	jne    4286a9 <flatcc_builder_default_alloc@@Base+0x669>
  4285fc:	add    rsp,0xb8
  428603:	pop    rbx
  428604:	pop    rbp
  428605:	ret    
  428606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428610:	movsxd r10,DWORD PTR [rsp+0x18]
  428615:	mov    r11,0x44ada0
  42861c:	mov    r9,r10
  42861f:	add    r8,rax
  428622:	shl    r10,0x4
  428626:	inc    r9d
  428629:	mov    QWORD PTR [rsp+0x10],r8
  42862e:	mov    QWORD PTR [rsp+r10*1+0x20],r11
  428633:	mov    QWORD PTR [rsp+r10*1+0x28],rax
  428638:	mov    DWORD PTR [rsp+0x18],r9d
  42863d:	jmp    428539 <flatcc_builder_default_alloc@@Base+0x4f9>
  428642:	nop    WORD PTR [rax+rax*1+0x0]
  428648:	xor    ebp,ebp
  42864a:	jmp    4285e3 <flatcc_builder_default_alloc@@Base+0x5a3>
  42864c:	lea    rcx,[rip+0x2231d]        # 44a970 <fb_schema_table_missing@@Base+0x34b0>
  428653:	mov    edx,0x5b7
  428658:	lea    rsi,[rip+0x21c61]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42865f:	lea    rdi,[rip+0xfcf3]        # 438359 <_IO_stdin_used@@Base+0xa359>
  428666:	call   405300 <__assert_fail@plt>
  42866b:	lea    rcx,[rip+0x222fe]        # 44a970 <fb_schema_table_missing@@Base+0x34b0>
  428672:	mov    edx,0x5b1
  428677:	lea    rsi,[rip+0x21c42]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42867e:	lea    rdi,[rip+0x21fc6]        # 44a64b <fb_schema_table_missing@@Base+0x318b>
  428685:	call   405300 <__assert_fail@plt>
  42868a:	lea    rcx,[rip+0x2265f]        # 44acf0 <fb_schema_table_missing@@Base+0x3830>
  428691:	mov    edx,0x287
  428696:	lea    rsi,[rip+0x21c23]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42869d:	lea    rdi,[rip+0xfcb5]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4286a4:	call   405300 <__assert_fail@plt>
  4286a9:	call   4052d0 <__stack_chk_fail@plt>
  4286ae:	call   428310 <flatcc_builder_default_alloc@@Base+0x2d0>
  4286b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4286be:	xchg   ax,ax

00000000004286c0 <flatcc_builder_flush_vtable_cache@@Base>:
  4286c0:	endbr64 
  4286c4:	cmp    QWORD PTR [rdi+0xd8],0x0
  4286cc:	jne    4286d0 <flatcc_builder_flush_vtable_cache@@Base+0x10>
  4286ce:	ret    
  4286cf:	nop
  4286d0:	push   rbx
  4286d1:	mov    rbx,rdi
  4286d4:	xor    esi,esi
  4286d6:	mov    rdx,QWORD PTR [rbx+0xb0]
  4286dd:	mov    rdi,QWORD PTR [rdi+0xa8]
  4286e4:	call   405310 <memset@plt>
  4286e9:	movabs rax,0x1000000000
  4286f3:	mov    QWORD PTR [rbx+0xe0],rax
  4286fa:	pop    rbx
  4286fb:	ret    
  4286fc:	nop    DWORD PTR [rax+0x0]

0000000000428700 <flatcc_builder_custom_init@@Base>:
  428700:	endbr64 
  428704:	mov    QWORD PTR [rdi],0x0
  42870b:	mov    QWORD PTR [rdi+0x180],0x0
  428716:	mov    r9,rdi
  428719:	lea    rdi,[rdi+0x8]
  42871d:	and    rdi,0xfffffffffffffff8
  428721:	mov    r10,rcx
  428724:	mov    rcx,r9
  428727:	sub    rcx,rdi
  42872a:	add    ecx,0x188
  428730:	shr    ecx,0x3
  428733:	xor    eax,eax
  428735:	rep stos QWORD PTR es:[rdi],rax
  428738:	test   rsi,rsi
  42873b:	je     428758 <flatcc_builder_custom_init@@Base+0x58>
  42873d:	test   r10,r10
  428740:	je     428776 <flatcc_builder_custom_init@@Base+0x76>
  428742:	mov    QWORD PTR [r9+0x40],r8
  428746:	mov    QWORD PTR [r9+0x50],r10
  42874a:	mov    QWORD PTR [r9+0x38],rdx
  42874e:	mov    QWORD PTR [r9+0x48],rsi
  428752:	xor    eax,eax
  428754:	ret    
  428755:	nop    DWORD PTR [rax]
  428758:	mov    DWORD PTR [r9+0x128],0x1
  428763:	lea    rdx,[r9+0x130]
  42876a:	mov    rsi,0x42c1b0
  428771:	test   r10,r10
  428774:	jne    428742 <flatcc_builder_custom_init@@Base+0x42>
  428776:	mov    r10,0x428040
  42877d:	jmp    428742 <flatcc_builder_custom_init@@Base+0x42>
  42877f:	nop

0000000000428780 <flatcc_builder_init@@Base>:
  428780:	endbr64 
  428784:	xor    r8d,r8d
  428787:	xor    ecx,ecx
  428789:	xor    edx,edx
  42878b:	xor    esi,esi
  42878d:	jmp    428700 <flatcc_builder_custom_init@@Base>
  428792:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42879d:	nop    DWORD PTR [rax]

00000000004287a0 <flatcc_builder_custom_reset@@Base>:
  4287a0:	endbr64 
  4287a4:	push   r14
  4287a6:	mov    r14d,esi
  4287a9:	push   r13
  4287ab:	mov    r13d,edx
  4287ae:	push   r12
  4287b0:	mov    r12,rdi
  4287b3:	push   rbp
  4287b4:	xor    ebp,ebp
  4287b6:	push   rbx
  4287b7:	lea    rbx,[rdi+0x58]
  4287bb:	jmp    428805 <flatcc_builder_custom_reset@@Base+0x65>
  4287bd:	nop    DWORD PTR [rax]
  4287c0:	cmp    ebp,0x5
  4287c3:	je     4287ef <flatcc_builder_custom_reset@@Base+0x4f>
  4287c5:	test   r13d,r13d
  4287c8:	je     4287ef <flatcc_builder_custom_reset@@Base+0x4f>
  4287ca:	mov    rdi,QWORD PTR [r12+0x40]
  4287cf:	mov    r8d,ebp
  4287d2:	mov    ecx,0x1
  4287d7:	mov    edx,0x1
  4287dc:	mov    rsi,rbx
  4287df:	call   QWORD PTR [r12+0x50]
  4287e4:	test   eax,eax
  4287e6:	jne    428920 <flatcc_builder_custom_reset@@Base+0x180>
  4287ec:	mov    rdi,QWORD PTR [rbx]
  4287ef:	mov    rdx,QWORD PTR [rbx+0x8]
  4287f3:	xor    esi,esi
  4287f5:	call   405310 <memset@plt>
  4287fa:	inc    ebp
  4287fc:	add    rbx,0x10
  428800:	cmp    ebp,0x8
  428803:	je     428838 <flatcc_builder_custom_reset@@Base+0x98>
  428805:	mov    rdi,QWORD PTR [rbx]
  428808:	test   rdi,rdi
  42880b:	jne    4287c0 <flatcc_builder_custom_reset@@Base+0x20>
  42880d:	cmp    QWORD PTR [rbx+0x8],0x0
  428812:	je     4287fa <flatcc_builder_custom_reset@@Base+0x5a>
  428814:	lea    rcx,[rip+0x22565]        # 44ad80 <fb_schema_table_missing@@Base+0x38c0>
  42881b:	mov    edx,0x1b2
  428820:	lea    rsi,[rip+0x21a99]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  428827:	lea    rdi,[rip+0x21e39]        # 44a667 <fb_schema_table_missing@@Base+0x31a7>
  42882e:	call   405300 <__assert_fail@plt>
  428833:	nop    DWORD PTR [rax+rax*1+0x0]
  428838:	mov    edx,DWORD PTR [r12+0xe4]
  428840:	mov    DWORD PTR [r12+0xe0],0x0
  42884c:	test   edx,edx
  42884e:	je     42885c <flatcc_builder_custom_reset@@Base+0xbc>
  428850:	mov    DWORD PTR [r12+0xe4],0x10
  42885c:	xor    eax,eax
  42885e:	mov    WORD PTR [r12+0xe8],ax
  428867:	mov    rax,QWORD PTR [r12+0x68]
  42886c:	mov    QWORD PTR [r12+0xf0],0x0
  428878:	mov    QWORD PTR [r12+0x18],rax
  42887d:	mov    rax,QWORD PTR [r12+0x88]
  428885:	mov    QWORD PTR [r12+0x20],0x0
  42888e:	mov    QWORD PTR [r12],rax
  428892:	mov    rax,QWORD PTR [r12+0x58]
  428897:	mov    QWORD PTR [r12+0xfc],0x0
  4288a3:	mov    QWORD PTR [r12+0x104],0x0
  4288af:	mov    QWORD PTR [r12+0x8],rax
  4288b4:	mov    QWORD PTR [r12+0x30],0x0
  4288bd:	test   r14d,r14d
  4288c0:	jne    4288e0 <flatcc_builder_custom_reset@@Base+0x140>
  4288c2:	mov    eax,DWORD PTR [r12+0x128]
  4288ca:	test   eax,eax
  4288cc:	jne    428904 <flatcc_builder_custom_reset@@Base+0x164>
  4288ce:	pop    rbx
  4288cf:	pop    rbp
  4288d0:	pop    r12
  4288d2:	pop    r13
  4288d4:	pop    r14
  4288d6:	ret    
  4288d7:	nop    WORD PTR [rax+rax*1+0x0]
  4288e0:	mov    eax,DWORD PTR [r12+0x128]
  4288e8:	mov    QWORD PTR [r12+0x118],0x0
  4288f4:	mov    QWORD PTR [r12+0x120],0x0
  428900:	test   eax,eax
  428902:	je     4288ce <flatcc_builder_custom_reset@@Base+0x12e>
  428904:	lea    rdi,[r12+0x130]
  42890c:	call   42c020 <flatcc_emitter_reset@@Base>
  428911:	pop    rbx
  428912:	pop    rbp
  428913:	pop    r12
  428915:	pop    r13
  428917:	xor    eax,eax
  428919:	pop    r14
  42891b:	ret    
  42891c:	nop    DWORD PTR [rax+0x0]
  428920:	pop    rbx
  428921:	pop    rbp
  428922:	pop    r12
  428924:	pop    r13
  428926:	mov    eax,0xffffffff
  42892b:	pop    r14
  42892d:	ret    
  42892e:	xchg   ax,ax

0000000000428930 <flatcc_builder_reset@@Base>:
  428930:	endbr64 
  428934:	xor    edx,edx
  428936:	xor    esi,esi
  428938:	jmp    4287a0 <flatcc_builder_custom_reset@@Base>
  42893d:	nop    DWORD PTR [rax]

0000000000428940 <flatcc_builder_clear@@Base>:
  428940:	endbr64 
  428944:	push   r12
  428946:	lea    r12,[rdi+0x58]
  42894a:	push   rbp
  42894b:	xor    ebp,ebp
  42894d:	push   rbx
  42894e:	mov    rbx,rdi
  428951:	nop    DWORD PTR [rax+0x0]
  428958:	mov    rdi,QWORD PTR [rbx+0x40]
  42895c:	mov    r8d,ebp
  42895f:	mov    rsi,r12
  428962:	xor    ecx,ecx
  428964:	xor    edx,edx
  428966:	inc    ebp
  428968:	call   QWORD PTR [rbx+0x50]
  42896b:	add    r12,0x10
  42896f:	cmp    ebp,0x8
  428972:	jne    428958 <flatcc_builder_clear@@Base+0x18>
  428974:	mov    eax,DWORD PTR [rbx+0x128]
  42897a:	test   eax,eax
  42897c:	jne    4289b0 <flatcc_builder_clear@@Base+0x70>
  42897e:	lea    rdi,[rbx+0x8]
  428982:	and    rdi,0xfffffffffffffff8
  428986:	mov    QWORD PTR [rbx],0x0
  42898d:	mov    QWORD PTR [rbx+0x180],0x0
  428998:	sub    rbx,rdi
  42899b:	lea    ecx,[rbx+0x188]
  4289a1:	shr    ecx,0x3
  4289a4:	xor    eax,eax
  4289a6:	rep stos QWORD PTR es:[rdi],rax
  4289a9:	pop    rbx
  4289aa:	pop    rbp
  4289ab:	pop    r12
  4289ad:	ret    
  4289ae:	xchg   ax,ax
  4289b0:	lea    rdi,[rbx+0x130]
  4289b7:	call   42c110 <flatcc_emitter_clear@@Base>
  4289bc:	jmp    42897e <flatcc_builder_clear@@Base+0x3e>
  4289be:	xchg   ax,ax

00000000004289c0 <flatcc_builder_enter_user_frame_ptr@@Base>:
  4289c0:	endbr64 
  4289c4:	push   r12
  4289c6:	push   rbp
  4289c7:	lea    rbp,[rsi+0x7]
  4289cb:	and    rbp,0xfffffffffffffff8
  4289cf:	push   rbx
  4289d0:	add    rbp,0x8
  4289d4:	mov    rbx,rdi
  4289d7:	mov    r12,QWORD PTR [rdi+0x180]
  4289de:	lea    rdx,[r12+rbp*1]
  4289e2:	cmp    rdx,QWORD PTR [rdi+0xd0]
  4289e9:	jbe    428a05 <flatcc_builder_enter_user_frame_ptr@@Base+0x45>
  4289eb:	lea    rsi,[rdi+0xc8]
  4289f2:	mov    rdi,QWORD PTR [rdi+0x40]
  4289f6:	xor    ecx,ecx
  4289f8:	mov    r8d,0x7
  4289fe:	call   QWORD PTR [rbx+0x50]
  428a01:	test   eax,eax
  428a03:	jne    428a57 <flatcc_builder_enter_user_frame_ptr@@Base+0x97>
  428a05:	add    r12,QWORD PTR [rbx+0xc8]
  428a0c:	je     428a50 <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
  428a0e:	mov    rdx,rbp
  428a11:	mov    rdi,r12
  428a14:	xor    esi,esi
  428a16:	call   405310 <memset@plt>
  428a1b:	mov    rdx,QWORD PTR [rbx+0x178]
  428a22:	lea    rax,[r12+0x8]
  428a27:	mov    QWORD PTR [r12],rdx
  428a2b:	mov    rdx,QWORD PTR [rbx+0x180]
  428a32:	add    rbp,rdx
  428a35:	lea    rcx,[rdx+0x8]
  428a39:	mov    QWORD PTR [rbx+0x180],rbp
  428a40:	mov    QWORD PTR [rbx+0x178],rcx
  428a47:	pop    rbx
  428a48:	pop    rbp
  428a49:	pop    r12
  428a4b:	ret    
  428a4c:	nop    DWORD PTR [rax+0x0]
  428a50:	pop    rbx
  428a51:	pop    rbp
  428a52:	xor    eax,eax
  428a54:	pop    r12
  428a56:	ret    
  428a57:	call   428170 <flatcc_builder_default_alloc@@Base+0x130>
  428a5c:	nop    DWORD PTR [rax+0x0]

0000000000428a60 <flatcc_builder_enter_user_frame@@Base>:
  428a60:	endbr64 
  428a64:	push   r12
  428a66:	push   rbp
  428a67:	mov    rbp,rdi
  428a6a:	push   rbx
  428a6b:	lea    rbx,[rsi+0x7]
  428a6f:	and    rbx,0xfffffffffffffff8
  428a73:	mov    r12,QWORD PTR [rdi+0x180]
  428a7a:	add    rbx,0x8
  428a7e:	lea    rdx,[r12+rbx*1]
  428a82:	cmp    rdx,QWORD PTR [rdi+0xd0]
  428a89:	jbe    428aa5 <flatcc_builder_enter_user_frame@@Base+0x45>
  428a8b:	lea    rsi,[rdi+0xc8]
  428a92:	mov    rdi,QWORD PTR [rdi+0x40]
  428a96:	xor    ecx,ecx
  428a98:	mov    r8d,0x7
  428a9e:	call   QWORD PTR [rbp+0x50]
  428aa1:	test   eax,eax
  428aa3:	jne    428aea <flatcc_builder_enter_user_frame@@Base+0x8a>
  428aa5:	add    r12,QWORD PTR [rbp+0xc8]
  428aac:	je     428ae2 <flatcc_builder_enter_user_frame@@Base+0x82>
  428aae:	mov    rdx,rbx
  428ab1:	mov    rdi,r12
  428ab4:	xor    esi,esi
  428ab6:	call   405310 <memset@plt>
  428abb:	mov    rax,QWORD PTR [rbp+0x178]
  428ac2:	mov    QWORD PTR [r12],rax
  428ac6:	mov    rax,QWORD PTR [rbp+0x180]
  428acd:	lea    r12,[rax+0x8]
  428ad1:	add    rbx,rax
  428ad4:	mov    QWORD PTR [rbp+0x178],r12
  428adb:	mov    QWORD PTR [rbp+0x180],rbx
  428ae2:	pop    rbx
  428ae3:	pop    rbp
  428ae4:	mov    rax,r12
  428ae7:	pop    r12
  428ae9:	ret    
  428aea:	call   428170 <flatcc_builder_default_alloc@@Base+0x130>
  428aef:	nop

0000000000428af0 <flatcc_builder_exit_user_frame@@Base>:
  428af0:	endbr64 
  428af4:	mov    rax,QWORD PTR [rdi+0x178]
  428afb:	test   rax,rax
  428afe:	je     428b20 <flatcc_builder_exit_user_frame@@Base+0x30>
  428b00:	mov    edx,eax
  428b02:	sub    rax,0x8
  428b06:	mov    QWORD PTR [rdi+0x180],rax
  428b0d:	add    rdx,QWORD PTR [rdi+0xc8]
  428b14:	mov    rax,QWORD PTR [rdx-0x8]
  428b18:	mov    QWORD PTR [rdi+0x178],rax
  428b1f:	ret    
  428b20:	push   rax
  428b21:	lea    rcx,[rip+0x22228]        # 44ad50 <fb_schema_table_missing@@Base+0x3890>
  428b28:	mov    edx,0x21e
  428b2d:	lea    rsi,[rip+0x2178c]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  428b34:	lea    rdi,[rip+0x21b3e]        # 44a679 <fb_schema_table_missing@@Base+0x31b9>
  428b3b:	call   405300 <__assert_fail@plt>

0000000000428b40 <flatcc_builder_exit_user_frame_at@@Base>:
  428b40:	endbr64 
  428b44:	cmp    QWORD PTR [rdi+0x178],rsi
  428b4b:	jb     428b59 <flatcc_builder_exit_user_frame_at@@Base+0x19>
  428b4d:	mov    QWORD PTR [rdi+0x178],rsi
  428b54:	jmp    428af0 <flatcc_builder_exit_user_frame@@Base>
  428b59:	push   rax
  428b5a:	lea    rcx,[rip+0x221bf]        # 44ad20 <fb_schema_table_missing@@Base+0x3860>
  428b61:	mov    edx,0x227
  428b66:	lea    rsi,[rip+0x21753]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  428b6d:	lea    rdi,[rip+0x217ac]        # 44a320 <fb_schema_table_missing@@Base+0x2e60>
  428b74:	call   405300 <__assert_fail@plt>
  428b79:	nop    DWORD PTR [rax+0x0]

0000000000428b80 <flatcc_builder_get_current_user_frame@@Base>:
  428b80:	endbr64 
  428b84:	mov    rax,QWORD PTR [rdi+0x178]
  428b8b:	ret    
  428b8c:	nop    DWORD PTR [rax+0x0]

0000000000428b90 <flatcc_builder_get_user_frame_ptr@@Base>:
  428b90:	endbr64 
  428b94:	mov    eax,esi
  428b96:	add    rax,QWORD PTR [rdi+0xc8]
  428b9d:	ret    
  428b9e:	xchg   ax,ax

0000000000428ba0 <flatcc_builder_embed_buffer@@Base>:
  428ba0:	endbr64 
  428ba4:	push   r13
  428ba6:	mov    r13d,r9d
  428ba9:	push   r12
  428bab:	mov    r12,rcx
  428bae:	push   rbp
  428baf:	mov    rbp,rdx
  428bb2:	movzx  edx,si
  428bb5:	push   rbx
  428bb6:	mov    rbx,rdi
  428bb9:	sub    rsp,0xc8
  428bc0:	mov    WORD PTR [rsp+0xc],r8w
  428bc6:	mov    r8d,DWORD PTR [rdi+0x100]
  428bcd:	mov    rax,QWORD PTR fs:0x28
  428bd6:	mov    QWORD PTR [rsp+0xb8],rax
  428bde:	xor    eax,eax
  428be0:	test   r8d,r8d
  428be3:	setne  cl
  428be6:	lea    rax,[rsp+0xc]
  428beb:	movzx  ecx,cl
  428bee:	mov    rsi,rax
  428bf1:	call   4281d0 <flatcc_builder_default_alloc@@Base+0x190>
  428bf6:	test   eax,eax
  428bf8:	jne    428d30 <flatcc_builder_embed_buffer@@Base+0x190>
  428bfe:	mov    edx,DWORD PTR [rbx+0xf0]
  428c04:	xor    esi,esi
  428c06:	and    r13d,0x2
  428c0a:	setne  sil
  428c0e:	movzx  ecx,WORD PTR [rsp+0xc]
  428c13:	mov    eax,edx
  428c15:	shl    esi,0x2
  428c18:	sub    eax,r12d
  428c1b:	dec    ecx
  428c1d:	sub    eax,esi
  428c1f:	and    eax,ecx
  428c21:	lea    ecx,[rax+r12*1]
  428c25:	mov    DWORD PTR [rsp+0x1c],ecx
  428c29:	mov    ecx,DWORD PTR [rbx+0x100]
  428c2f:	mov    QWORD PTR [rsp+0x20],0x0
  428c38:	mov    DWORD PTR [rsp+0x28],0x0
  428c40:	xor    r8d,r8d
  428c43:	test   ecx,ecx
  428c45:	je     428c71 <flatcc_builder_embed_buffer@@Base+0xd1>
  428c47:	lea    rcx,[rsp+0x1c]
  428c4c:	mov    QWORD PTR [rsp+0x20],0x4
  428c55:	mov    QWORD PTR [rsp+0x30],rcx
  428c5a:	mov    QWORD PTR [rsp+0x38],0x4
  428c63:	mov    DWORD PTR [rsp+0x28],0x1
  428c6b:	mov    r8d,0x4
  428c71:	test   r12,r12
  428c74:	je     428c9a <flatcc_builder_embed_buffer@@Base+0xfa>
  428c76:	movsxd rsi,DWORD PTR [rsp+0x28]
  428c7b:	add    r8,r12
  428c7e:	mov    rcx,rsi
  428c81:	inc    ecx
  428c83:	shl    rsi,0x4
  428c87:	mov    QWORD PTR [rsp+0x20],r8
  428c8c:	mov    QWORD PTR [rsp+rsi*1+0x30],rbp
  428c91:	mov    QWORD PTR [rsp+rsi*1+0x38],r12
  428c96:	mov    DWORD PTR [rsp+0x28],ecx
  428c9a:	test   eax,eax
  428c9c:	jne    428d00 <flatcc_builder_embed_buffer@@Base+0x160>
  428c9e:	mov    ebp,edx
  428ca0:	sub    ebp,r8d
  428ca3:	cmp    edx,ebp
  428ca5:	jle    428d34 <flatcc_builder_embed_buffer@@Base+0x194>
  428cab:	movabs rax,0x10000000f
  428cb5:	cmp    r8,rax
  428cb8:	ja     428d34 <flatcc_builder_embed_buffer@@Base+0x194>
  428cba:	mov    rdi,QWORD PTR [rbx+0x38]
  428cbe:	mov    edx,DWORD PTR [rsp+0x28]
  428cc2:	lea    rsi,[rsp+0x30]
  428cc7:	mov    ecx,ebp
  428cc9:	call   QWORD PTR [rbx+0x48]
  428ccc:	test   eax,eax
  428cce:	jne    428d58 <flatcc_builder_embed_buffer@@Base+0x1b8>
  428cd4:	mov    DWORD PTR [rbx+0xf0],ebp
  428cda:	mov    rdi,QWORD PTR [rsp+0xb8]
  428ce2:	xor    rdi,QWORD PTR fs:0x28
  428ceb:	mov    eax,ebp
  428ced:	jne    428d53 <flatcc_builder_embed_buffer@@Base+0x1b3>
  428cef:	add    rsp,0xc8
  428cf6:	pop    rbx
  428cf7:	pop    rbp
  428cf8:	pop    r12
  428cfa:	pop    r13
  428cfc:	ret    
  428cfd:	nop    DWORD PTR [rax]
  428d00:	movsxd rsi,DWORD PTR [rsp+0x28]
  428d05:	mov    rdi,0x44ada0
  428d0c:	mov    rcx,rsi
  428d0f:	add    r8,rax
  428d12:	shl    rsi,0x4
  428d16:	inc    ecx
  428d18:	mov    QWORD PTR [rsp+0x20],r8
  428d1d:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  428d22:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  428d27:	mov    DWORD PTR [rsp+0x28],ecx
  428d2b:	jmp    428c9e <flatcc_builder_embed_buffer@@Base+0xfe>
  428d30:	xor    ebp,ebp
  428d32:	jmp    428cda <flatcc_builder_embed_buffer@@Base+0x13a>
  428d34:	lea    rcx,[rip+0x21fb5]        # 44acf0 <fb_schema_table_missing@@Base+0x3830>
  428d3b:	mov    edx,0x287
  428d40:	lea    rsi,[rip+0x21579]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  428d47:	lea    rdi,[rip+0xf60b]        # 438359 <_IO_stdin_used@@Base+0xa359>
  428d4e:	call   405300 <__assert_fail@plt>
  428d53:	call   4052d0 <__stack_chk_fail@plt>
  428d58:	call   428310 <flatcc_builder_default_alloc@@Base+0x2d0>
  428d5d:	nop    DWORD PTR [rax]

0000000000428d60 <flatcc_builder_create_buffer@@Base>:
  428d60:	endbr64 
  428d64:	push   r14
  428d66:	movzx  edx,dx
  428d69:	mov    r14,rsi
  428d6c:	push   r13
  428d6e:	mov    r13d,r9d
  428d71:	push   r12
  428d73:	mov    r12d,r9d
  428d76:	and    r12d,0x1
  428d7a:	push   rbp
  428d7b:	mov    rbp,rdi
  428d7e:	push   rbx
  428d7f:	mov    ebx,ecx
  428d81:	mov    ecx,r12d
  428d84:	sub    rsp,0xc0
  428d8b:	mov    WORD PTR [rsp+0xc],r8w
  428d91:	lea    rsi,[rsp+0xc]
  428d96:	mov    rax,QWORD PTR fs:0x28
  428d9f:	mov    QWORD PTR [rsp+0xb8],rax
  428da7:	xor    eax,eax
  428da9:	mov    DWORD PTR [rsp+0x1c],0x0
  428db1:	call   4281d0 <flatcc_builder_default_alloc@@Base+0x190>
  428db6:	test   eax,eax
  428db8:	jne    428f58 <flatcc_builder_create_buffer@@Base+0x1f8>
  428dbe:	movzx  esi,WORD PTR [rsp+0xc]
  428dc3:	cmp    si,WORD PTR [rbp+0xe8]
  428dca:	jbe    428dd3 <flatcc_builder_create_buffer@@Base+0x73>
  428dcc:	mov    WORD PTR [rbp+0xe8],si
  428dd3:	mov    edx,DWORD PTR [rsp+0x1c]
  428dd7:	test   r14,r14
  428dda:	je     428de3 <flatcc_builder_create_buffer@@Base+0x83>
  428ddc:	mov    edx,DWORD PTR [r14]
  428ddf:	mov    DWORD PTR [rsp+0x1c],edx
  428de3:	test   edx,edx
  428de5:	mov    eax,0x4
  428dea:	mov    ecx,DWORD PTR [rbp+0xf0]
  428df0:	cmovne rdx,rax
  428df4:	xor    edi,edi
  428df6:	test   r13b,0x2
  428dfa:	setne  dil
  428dfe:	lea    eax,[rcx-0x4]
  428e01:	shl    edi,0x2
  428e04:	sub    eax,edx
  428e06:	sub    eax,edi
  428e08:	dec    esi
  428e0a:	and    eax,esi
  428e0c:	and    r13d,0x3
  428e10:	jne    428f28 <flatcc_builder_create_buffer@@Base+0x1c8>
  428e16:	xor    r9d,r9d
  428e19:	mov    esi,0x1
  428e1e:	mov    r8d,0x4
  428e24:	movsxd rdi,r9d
  428e27:	shl    rdi,0x4
  428e2b:	lea    r10,[rsp+0x14]
  428e30:	mov    QWORD PTR [rsp+0x20],r8
  428e35:	mov    QWORD PTR [rsp+rdi*1+0x30],r10
  428e3a:	mov    QWORD PTR [rsp+rdi*1+0x38],0x4
  428e43:	mov    DWORD PTR [rsp+0x28],esi
  428e47:	test   edx,edx
  428e49:	je     428e6f <flatcc_builder_create_buffer@@Base+0x10f>
  428e4b:	shl    rsi,0x4
  428e4f:	add    r8,rdx
  428e52:	lea    rdi,[rsp+0x1c]
  428e57:	add    r9d,0x2
  428e5b:	mov    QWORD PTR [rsp+0x20],r8
  428e60:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  428e65:	mov    QWORD PTR [rsp+rsi*1+0x38],rdx
  428e6a:	mov    DWORD PTR [rsp+0x28],r9d
  428e6f:	test   eax,eax
  428e71:	je     428e9e <flatcc_builder_create_buffer@@Base+0x13e>
  428e73:	movsxd rsi,DWORD PTR [rsp+0x28]
  428e78:	mov    rdi,0x44ada0
  428e7f:	mov    rdx,rsi
  428e82:	add    r8,rax
  428e85:	shl    rsi,0x4
  428e89:	inc    edx
  428e8b:	mov    QWORD PTR [rsp+0x20],r8
  428e90:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  428e95:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  428e9a:	mov    DWORD PTR [rsp+0x28],edx
  428e9e:	mov    eax,ecx
  428ea0:	sub    eax,r8d
  428ea3:	lea    edx,[rax+0x4]
  428ea6:	test   r13d,r13d
  428ea9:	cmovne eax,edx
  428eac:	test   r12d,r12d
  428eaf:	je     428f60 <flatcc_builder_create_buffer@@Base+0x200>
  428eb5:	mov    edx,DWORD PTR [rbp+0xf8]
  428ebb:	sub    edx,eax
  428ebd:	sub    ebx,eax
  428ebf:	mov    DWORD PTR [rsp+0x14],ebx
  428ec3:	mov    ebx,ecx
  428ec5:	sub    ebx,r8d
  428ec8:	mov    DWORD PTR [rsp+0x18],edx
  428ecc:	cmp    ecx,ebx
  428ece:	jle    428f6d <flatcc_builder_create_buffer@@Base+0x20d>
  428ed4:	mov    rdi,QWORD PTR [rbp+0x38]
  428ed8:	mov    edx,DWORD PTR [rsp+0x28]
  428edc:	lea    rsi,[rsp+0x30]
  428ee1:	mov    ecx,ebx
  428ee3:	call   QWORD PTR [rbp+0x48]
  428ee6:	test   eax,eax
  428ee8:	jne    428f91 <flatcc_builder_create_buffer@@Base+0x231>
  428eee:	mov    DWORD PTR [rbp+0xf0],ebx
  428ef4:	test   ebx,ebx
  428ef6:	je     428f96 <flatcc_builder_create_buffer@@Base+0x236>
  428efc:	mov    rcx,QWORD PTR [rsp+0xb8]
  428f04:	xor    rcx,QWORD PTR fs:0x28
  428f0d:	mov    eax,ebx
  428f0f:	jne    428f8c <flatcc_builder_create_buffer@@Base+0x22c>
  428f11:	add    rsp,0xc0
  428f18:	pop    rbx
  428f19:	pop    rbp
  428f1a:	pop    r12
  428f1c:	pop    r13
  428f1e:	pop    r14
  428f20:	ret    
  428f21:	nop    DWORD PTR [rax+0x0]
  428f28:	lea    rsi,[rsp+0x18]
  428f2d:	mov    QWORD PTR [rsp+0x30],rsi
  428f32:	mov    QWORD PTR [rsp+0x38],0x4
  428f3b:	mov    esi,0x2
  428f40:	mov    r9d,0x1
  428f46:	mov    r8d,0x8
  428f4c:	jmp    428e24 <flatcc_builder_create_buffer@@Base+0xc4>
  428f51:	nop    DWORD PTR [rax+0x0]
  428f58:	xor    ebx,ebx
  428f5a:	jmp    428efc <flatcc_builder_create_buffer@@Base+0x19c>
  428f5c:	nop    DWORD PTR [rax+0x0]
  428f60:	mov    edx,DWORD PTR [rbp+0xf4]
  428f66:	sub    edx,eax
  428f68:	jmp    428ebd <flatcc_builder_create_buffer@@Base+0x15d>
  428f6d:	lea    rcx,[rip+0x21d7c]        # 44acf0 <fb_schema_table_missing@@Base+0x3830>
  428f74:	mov    edx,0x287
  428f79:	lea    rsi,[rip+0x21340]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  428f80:	lea    rdi,[rip+0xf3d2]        # 438359 <_IO_stdin_used@@Base+0xa359>
  428f87:	call   405300 <__assert_fail@plt>
  428f8c:	call   4052d0 <__stack_chk_fail@plt>
  428f91:	call   428310 <flatcc_builder_default_alloc@@Base+0x2d0>
  428f96:	lea    rcx,[rip+0x21d33]        # 44acd0 <fb_schema_table_missing@@Base+0x3810>
  428f9d:	mov    edx,0x304
  428fa2:	lea    rsi,[rip+0x21317]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  428fa9:	lea    rdi,[rip+0xf3a9]        # 438359 <_IO_stdin_used@@Base+0xa359>
  428fb0:	call   405300 <__assert_fail@plt>
  428fb5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000428fc0 <flatcc_builder_create_struct@@Base>:
  428fc0:	endbr64 
  428fc4:	push   rbp
  428fc5:	push   rbx
  428fc6:	sub    rsp,0xa8
  428fcd:	mov    rax,QWORD PTR fs:0x28
  428fd6:	mov    QWORD PTR [rsp+0x98],rax
  428fde:	xor    eax,eax
  428fe0:	test   cx,cx
  428fe3:	je     429103 <flatcc_builder_create_struct@@Base+0x143>
  428fe9:	mov    r8,rdx
  428fec:	mov    rbx,rdi
  428fef:	movzx  edx,cx
  428ff2:	cmp    cx,WORD PTR [rdi+0xe8]
  428ff9:	jbe    429002 <flatcc_builder_create_struct@@Base+0x42>
  428ffb:	mov    WORD PTR [rdi+0xe8],cx
  429002:	mov    ecx,DWORD PTR [rbx+0xf0]
  429008:	dec    edx
  42900a:	mov    eax,ecx
  42900c:	sub    eax,r8d
  42900f:	and    eax,edx
  429011:	mov    edx,eax
  429013:	mov    QWORD PTR [rsp],0x0
  42901b:	mov    DWORD PTR [rsp+0x8],0x0
  429023:	test   r8,r8
  429026:	jne    4290b8 <flatcc_builder_create_struct@@Base+0xf8>
  42902c:	test   eax,eax
  42902e:	je     4290e4 <flatcc_builder_create_struct@@Base+0x124>
  429034:	mov    r8,rdx
  429037:	mov    esi,0x1
  42903c:	xor    eax,eax
  42903e:	mov    rdi,0x44ada0
  429045:	shl    rax,0x4
  429049:	mov    QWORD PTR [rsp],r8
  42904d:	mov    QWORD PTR [rsp+rax*1+0x10],rdi
  429052:	mov    QWORD PTR [rsp+rax*1+0x18],rdx
  429057:	mov    DWORD PTR [rsp+0x8],esi
  42905b:	mov    ebp,ecx
  42905d:	movabs rax,0x10000000f
  429067:	sub    ebp,r8d
  42906a:	cmp    r8,rax
  42906d:	ja     4290e4 <flatcc_builder_create_struct@@Base+0x124>
  42906f:	cmp    ecx,ebp
  429071:	jle    4290e4 <flatcc_builder_create_struct@@Base+0x124>
  429073:	mov    rdi,QWORD PTR [rbx+0x38]
  429077:	mov    edx,DWORD PTR [rsp+0x8]
  42907b:	lea    rsi,[rsp+0x10]
  429080:	mov    ecx,ebp
  429082:	call   QWORD PTR [rbx+0x48]
  429085:	test   eax,eax
  429087:	jne    429122 <flatcc_builder_create_struct@@Base+0x162>
  42908d:	mov    DWORD PTR [rbx+0xf0],ebp
  429093:	mov    eax,ebp
  429095:	mov    rdi,QWORD PTR [rsp+0x98]
  42909d:	xor    rdi,QWORD PTR fs:0x28
  4290a6:	jne    429127 <flatcc_builder_create_struct@@Base+0x167>
  4290a8:	add    rsp,0xa8
  4290af:	pop    rbx
  4290b0:	pop    rbp
  4290b1:	ret    
  4290b2:	nop    WORD PTR [rax+rax*1+0x0]
  4290b8:	mov    QWORD PTR [rsp],r8
  4290bc:	mov    QWORD PTR [rsp+0x10],rsi
  4290c1:	mov    QWORD PTR [rsp+0x18],r8
  4290c6:	mov    DWORD PTR [rsp+0x8],0x1
  4290ce:	test   eax,eax
  4290d0:	je     42905b <flatcc_builder_create_struct@@Base+0x9b>
  4290d2:	add    r8,rdx
  4290d5:	mov    esi,0x2
  4290da:	mov    eax,0x1
  4290df:	jmp    42903e <flatcc_builder_create_struct@@Base+0x7e>
  4290e4:	lea    rcx,[rip+0x21c05]        # 44acf0 <fb_schema_table_missing@@Base+0x3830>
  4290eb:	mov    edx,0x287
  4290f0:	lea    rsi,[rip+0x211c9]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  4290f7:	lea    rdi,[rip+0xf25b]        # 438359 <_IO_stdin_used@@Base+0xa359>
  4290fe:	call   405300 <__assert_fail@plt>
  429103:	lea    rcx,[rip+0x21ba6]        # 44acb0 <fb_schema_table_missing@@Base+0x37f0>
  42910a:	mov    edx,0x30f
  42910f:	lea    rsi,[rip+0x211aa]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  429116:	lea    rdi,[rip+0x21575]        # 44a692 <fb_schema_table_missing@@Base+0x31d2>
  42911d:	call   405300 <__assert_fail@plt>
  429122:	call   428310 <flatcc_builder_default_alloc@@Base+0x2d0>
  429127:	call   4052d0 <__stack_chk_fail@plt>
  42912c:	nop    DWORD PTR [rax+0x0]

0000000000429130 <flatcc_builder_start_buffer@@Base>:
  429130:	endbr64 
  429134:	push   r13
  429136:	mov    r13d,edx
  429139:	push   r12
  42913b:	mov    r12d,ecx
  42913e:	push   rbp
  42913f:	mov    rbp,rsi
  429142:	push   rbx
  429143:	mov    rbx,rdi
  429146:	sub    rsp,0x8
  42914a:	movzx  esi,WORD PTR [rdi+0xe8]
  429151:	call   428370 <flatcc_builder_default_alloc@@Base+0x330>
  429156:	test   eax,eax
  429158:	jne    429208 <flatcc_builder_start_buffer@@Base+0xd8>
  42915e:	movzx  edx,WORD PTR [rbx+0xec]
  429165:	mov    rsi,QWORD PTR [rbx+0x30]
  429169:	mov    ecx,0x1
  42916e:	mov    WORD PTR [rbx+0xe8],cx
  429175:	mov    WORD PTR [rsi+0x22],dx
  429179:	movzx  edx,WORD PTR [rbx+0x10c]
  429180:	mov    WORD PTR [rbx+0xec],r13w
  429188:	mov    WORD PTR [rsi+0x20],dx
  42918c:	mov    edx,DWORD PTR [rbx+0xf8]
  429192:	mov    WORD PTR [rbx+0x10c],r12w
  42919a:	mov    DWORD PTR [rsi+0x14],edx
  42919d:	mov    edx,DWORD PTR [rbx+0x100]
  4291a3:	mov    DWORD PTR [rsi+0x1c],edx
  4291a6:	mov    edx,DWORD PTR [rbx+0xf0]
  4291ac:	mov    DWORD PTR [rbx+0xf8],edx
  4291b2:	mov    edx,DWORD PTR [rbx+0xfc]
  4291b8:	lea    ecx,[rdx+0x1]
  4291bb:	mov    DWORD PTR [rbx+0x100],edx
  4291c1:	mov    edx,DWORD PTR [rbx+0x110]
  4291c7:	mov    DWORD PTR [rbx+0xfc],ecx
  4291cd:	mov    DWORD PTR [rsi+0x10],edx
  4291d0:	test   rbp,rbp
  4291d3:	je     4291f8 <flatcc_builder_start_buffer@@Base+0xc8>
  4291d5:	mov    edx,DWORD PTR [rbp+0x0]
  4291d8:	mov    DWORD PTR [rbx+0x110],edx
  4291de:	mov    edx,0x1
  4291e3:	mov    WORD PTR [rsi+0xe],dx
  4291e7:	add    rsp,0x8
  4291eb:	pop    rbx
  4291ec:	pop    rbp
  4291ed:	pop    r12
  4291ef:	pop    r13
  4291f1:	ret    
  4291f2:	nop    WORD PTR [rax+rax*1+0x0]
  4291f8:	mov    rbp,0x44ada0
  4291ff:	jmp    4291d5 <flatcc_builder_start_buffer@@Base+0xa5>
  429201:	nop    DWORD PTR [rax+0x0]
  429208:	mov    eax,0xffffffff
  42920d:	jmp    4291e7 <flatcc_builder_start_buffer@@Base+0xb7>
  42920f:	nop

0000000000429210 <flatcc_builder_end_buffer@@Base>:
  429210:	endbr64 
  429214:	push   rbp
  429215:	xor    eax,eax
  429217:	push   rbx
  429218:	sub    rsp,0x8
  42921c:	movzx  r9d,WORD PTR [rdi+0x10c]
  429224:	mov    edx,DWORD PTR [rdi+0x100]
  42922a:	and    r9d,0x2
  42922e:	test   edx,edx
  429230:	setne  al
  429233:	movzx  r9d,r9w
  429237:	or     r9d,eax
  42923a:	mov    rax,QWORD PTR [rdi+0x30]
  42923e:	cmp    WORD PTR [rax+0xe],0x1
  429243:	jne    429334 <flatcc_builder_end_buffer@@Base+0x124>
  429249:	movzx  edx,WORD PTR [rdi+0xec]
  429250:	movzx  eax,WORD PTR [rdi+0xe8]
  429257:	mov    rbx,rdi
  42925a:	mov    ecx,esi
  42925c:	mov    r8d,edx
  42925f:	cmp    dx,ax
  429262:	ja     429328 <flatcc_builder_end_buffer@@Base+0x118>
  429268:	movzx  r8d,ax
  42926c:	lea    rsi,[rbx+0x110]
  429273:	mov    rdi,rbx
  429276:	call   428d60 <flatcc_builder_create_buffer@@Base>
  42927b:	mov    ebp,eax
  42927d:	test   eax,eax
  42927f:	je     42931c <flatcc_builder_end_buffer@@Base+0x10c>
  429285:	mov    rax,QWORD PTR [rbx+0x30]
  429289:	mov    rdi,QWORD PTR [rbx+0x18]
  42928d:	mov    edx,DWORD PTR [rax+0x14]
  429290:	xor    esi,esi
  429292:	mov    DWORD PTR [rbx+0xf8],edx
  429298:	mov    edx,DWORD PTR [rax+0x1c]
  42929b:	mov    DWORD PTR [rbx+0x100],edx
  4292a1:	mov    edx,DWORD PTR [rax+0x10]
  4292a4:	movzx  eax,WORD PTR [rax+0x20]
  4292a8:	mov    DWORD PTR [rbx+0x110],edx
  4292ae:	mov    WORD PTR [rbx+0x10c],ax
  4292b5:	mov    edx,DWORD PTR [rbx+0x20]
  4292b8:	call   405310 <memset@plt>
  4292bd:	mov    rax,QWORD PTR [rbx+0x30]
  4292c1:	mov    edi,DWORD PTR [rbx+0x70]
  4292c4:	mov    edx,DWORD PTR [rax+0x8]
  4292c7:	mov    esi,DWORD PTR [rax]
  4292c9:	mov    ecx,DWORD PTR [rax+0x4]
  4292cc:	mov    DWORD PTR [rbx+0x20],edx
  4292cf:	mov    rdx,rsi
  4292d2:	sub    edi,edx
  4292d4:	mov    DWORD PTR [rbx+0x28],esi
  4292d7:	mov    edx,edi
  4292d9:	add    rsi,QWORD PTR [rbx+0x68]
  4292dd:	cmp    ecx,edi
  4292df:	cmovb  edx,ecx
  4292e2:	mov    QWORD PTR [rbx+0x18],rsi
  4292e6:	mov    DWORD PTR [rbx+0x24],edx
  4292e9:	movzx  edx,WORD PTR [rbx+0xea]
  4292f0:	mov    DWORD PTR [rax+0x4],ecx
  4292f3:	cmp    dx,WORD PTR [rbx+0xe8]
  4292fa:	jbe    429303 <flatcc_builder_end_buffer@@Base+0xf3>
  4292fc:	mov    WORD PTR [rbx+0xe8],dx
  429303:	movzx  edx,WORD PTR [rax+0xc]
  429307:	sub    rax,0x24
  42930b:	dec    DWORD PTR [rbx+0x104]
  429311:	mov    WORD PTR [rbx+0xea],dx
  429318:	mov    QWORD PTR [rbx+0x30],rax
  42931c:	add    rsp,0x8
  429320:	pop    rbx
  429321:	mov    eax,ebp
  429323:	pop    rbp
  429324:	ret    
  429325:	nop    DWORD PTR [rax]
  429328:	mov    WORD PTR [rbx+0xe8],dx
  42932f:	jmp    42926c <flatcc_builder_end_buffer@@Base+0x5c>
  429334:	lea    rcx,[rip+0x21955]        # 44ac90 <fb_schema_table_missing@@Base+0x37d0>
  42933b:	mov    edx,0x346
  429340:	lea    rsi,[rip+0x20f79]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  429347:	lea    rdi,[rip+0x20ff2]        # 44a340 <fb_schema_table_missing@@Base+0x2e80>
  42934e:	call   405300 <__assert_fail@plt>
  429353:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42935e:	xchg   ax,ax

0000000000429360 <flatcc_builder_start_struct@@Base>:
  429360:	endbr64 
  429364:	push   r12
  429366:	push   rbp
  429367:	mov    rbp,rsi
  42936a:	movzx  esi,dx
  42936d:	push   rbx
  42936e:	mov    rbx,rdi
  429371:	call   428370 <flatcc_builder_default_alloc@@Base+0x330>
  429376:	test   eax,eax
  429378:	jne    429400 <flatcc_builder_start_struct@@Base+0xa0>
  42937e:	mov    rcx,QWORD PTR [rbx+0x30]
  429382:	mov    eax,0x2
  429387:	mov    WORD PTR [rcx+0xe],ax
  42938b:	mov    eax,DWORD PTR [rbx+0x28]
  42938e:	mov    edi,DWORD PTR [rbx+0x70]
  429391:	mov    rdx,rax
  429394:	sub    edi,edx
  429396:	add    rax,QWORD PTR [rbx+0x68]
  42939a:	mov    QWORD PTR [rbx+0x18],rax
  42939e:	mov    edx,edi
  4293a0:	cmp    edi,0xfffffffc
  4293a3:	ja     4293d0 <flatcc_builder_start_struct@@Base+0x70>
  4293a5:	mov    DWORD PTR [rbx+0x24],edi
  4293a8:	mov    r12d,DWORD PTR [rbx+0x20]
  4293ac:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4293b3:	mov    rsi,r12
  4293b6:	add    esi,ebp
  4293b8:	mov    DWORD PTR [rbx+0x20],esi
  4293bb:	cmp    esi,edx
  4293bd:	jae    4293e0 <flatcc_builder_start_struct@@Base+0x80>
  4293bf:	pop    rbx
  4293c0:	pop    rbp
  4293c1:	add    rax,r12
  4293c4:	pop    r12
  4293c6:	ret    
  4293c7:	nop    WORD PTR [rax+rax*1+0x0]
  4293d0:	mov    DWORD PTR [rbx+0x24],0xfffffffc
  4293d7:	mov    edx,0xfffffffc
  4293dc:	jmp    4293a8 <flatcc_builder_start_struct@@Base+0x48>
  4293de:	xchg   ax,ax
  4293e0:	inc    esi
  4293e2:	mov    edx,0xfffffffc
  4293e7:	mov    rdi,rbx
  4293ea:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  4293ef:	test   eax,eax
  4293f1:	jne    429400 <flatcc_builder_start_struct@@Base+0xa0>
  4293f3:	mov    rax,QWORD PTR [rbx+0x18]
  4293f7:	jmp    4293bf <flatcc_builder_start_struct@@Base+0x5f>
  4293f9:	nop    DWORD PTR [rax+0x0]
  429400:	pop    rbx
  429401:	pop    rbp
  429402:	xor    eax,eax
  429404:	pop    r12
  429406:	ret    
  429407:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429410 <flatcc_builder_struct_edit@@Base>:
  429410:	endbr64 
  429414:	mov    rax,QWORD PTR [rdi+0x18]
  429418:	ret    
  429419:	nop    DWORD PTR [rax+0x0]

0000000000429420 <flatcc_builder_end_struct@@Base>:
  429420:	endbr64 
  429424:	push   rbp
  429425:	push   rbx
  429426:	sub    rsp,0x8
  42942a:	mov    rax,QWORD PTR [rdi+0x30]
  42942e:	cmp    WORD PTR [rax+0xe],0x2
  429433:	jne    4294d6 <flatcc_builder_end_struct@@Base+0xb6>
  429439:	movzx  ecx,WORD PTR [rdi+0xea]
  429440:	mov    edx,DWORD PTR [rdi+0x20]
  429443:	mov    rsi,QWORD PTR [rdi+0x18]
  429447:	mov    rbx,rdi
  42944a:	call   428fc0 <flatcc_builder_create_struct@@Base>
  42944f:	mov    ebp,eax
  429451:	test   eax,eax
  429453:	jne    429460 <flatcc_builder_end_struct@@Base+0x40>
  429455:	add    rsp,0x8
  429459:	pop    rbx
  42945a:	mov    eax,ebp
  42945c:	pop    rbp
  42945d:	ret    
  42945e:	xchg   ax,ax
  429460:	mov    edx,DWORD PTR [rbx+0x20]
  429463:	mov    rdi,QWORD PTR [rbx+0x18]
  429467:	xor    esi,esi
  429469:	call   405310 <memset@plt>
  42946e:	mov    rax,QWORD PTR [rbx+0x30]
  429472:	mov    edi,DWORD PTR [rbx+0x70]
  429475:	mov    edx,DWORD PTR [rax+0x8]
  429478:	mov    esi,DWORD PTR [rax]
  42947a:	mov    ecx,DWORD PTR [rax+0x4]
  42947d:	mov    DWORD PTR [rbx+0x20],edx
  429480:	mov    rdx,rsi
  429483:	sub    edi,edx
  429485:	mov    DWORD PTR [rbx+0x28],esi
  429488:	mov    edx,edi
  42948a:	add    rsi,QWORD PTR [rbx+0x68]
  42948e:	cmp    ecx,edi
  429490:	cmovb  edx,ecx
  429493:	mov    QWORD PTR [rbx+0x18],rsi
  429497:	mov    DWORD PTR [rbx+0x24],edx
  42949a:	movzx  edx,WORD PTR [rbx+0xea]
  4294a1:	mov    DWORD PTR [rax+0x4],ecx
  4294a4:	cmp    dx,WORD PTR [rbx+0xe8]
  4294ab:	jbe    4294b4 <flatcc_builder_end_struct@@Base+0x94>
  4294ad:	mov    WORD PTR [rbx+0xe8],dx
  4294b4:	movzx  edx,WORD PTR [rax+0xc]
  4294b8:	dec    DWORD PTR [rbx+0x104]
  4294be:	sub    rax,0x24
  4294c2:	mov    QWORD PTR [rbx+0x30],rax
  4294c6:	mov    WORD PTR [rbx+0xea],dx
  4294cd:	add    rsp,0x8
  4294d1:	mov    eax,ebp
  4294d3:	pop    rbx
  4294d4:	pop    rbp
  4294d5:	ret    
  4294d6:	lea    rcx,[rip+0x21793]        # 44ac70 <fb_schema_table_missing@@Base+0x37b0>
  4294dd:	mov    edx,0x368
  4294e2:	lea    rsi,[rip+0x20dd7]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  4294e9:	lea    rdi,[rip+0x20e80]        # 44a370 <fb_schema_table_missing@@Base+0x2eb0>
  4294f0:	call   405300 <__assert_fail@plt>
  4294f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000429500 <flatcc_builder_extend_vector@@Base>:
  429500:	endbr64 
  429504:	push   rbp
  429505:	mov    eax,esi
  429507:	push   rbx
  429508:	sub    rsp,0x8
  42950c:	mov    rdx,QWORD PTR [rdi+0x30]
  429510:	add    eax,DWORD PTR [rdx+0x14]
  429513:	setb   cl
  429516:	cmp    DWORD PTR [rdx+0x18],eax
  429519:	jb     429564 <flatcc_builder_extend_vector@@Base+0x64>
  42951b:	movzx  ecx,cl
  42951e:	test   ecx,ecx
  429520:	jne    429564 <flatcc_builder_extend_vector@@Base+0x64>
  429522:	imul   esi,DWORD PTR [rdx+0x10]
  429526:	mov    ebp,DWORD PTR [rdi+0x20]
  429529:	mov    DWORD PTR [rdx+0x14],eax
  42952c:	add    esi,ebp
  42952e:	mov    rbx,rdi
  429531:	mov    DWORD PTR [rdi+0x20],esi
  429534:	cmp    esi,DWORD PTR [rdi+0x24]
  429537:	jae    429550 <flatcc_builder_extend_vector@@Base+0x50>
  429539:	mov    rax,QWORD PTR [rbx+0x18]
  42953d:	add    rax,rbp
  429540:	add    rsp,0x8
  429544:	pop    rbx
  429545:	pop    rbp
  429546:	ret    
  429547:	nop    WORD PTR [rax+rax*1+0x0]
  429550:	inc    esi
  429552:	mov    edx,0xfffffffc
  429557:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42955c:	test   eax,eax
  42955e:	je     429539 <flatcc_builder_extend_vector@@Base+0x39>
  429560:	xor    eax,eax
  429562:	jmp    429540 <flatcc_builder_extend_vector@@Base+0x40>
  429564:	call   428340 <flatcc_builder_default_alloc@@Base+0x300>
  429569:	nop    DWORD PTR [rax+0x0]

0000000000429570 <flatcc_builder_vector_push@@Base>:
  429570:	endbr64 
  429574:	push   r13
  429576:	push   r12
  429578:	push   rbp
  429579:	push   rbx
  42957a:	sub    rsp,0x8
  42957e:	mov    rax,QWORD PTR [rdi+0x30]
  429582:	cmp    WORD PTR [rax+0xe],0x4
  429587:	jne    4295ed <flatcc_builder_vector_push@@Base+0x7d>
  429589:	mov    edx,DWORD PTR [rax+0x14]
  42958c:	cmp    edx,DWORD PTR [rax+0x18]
  42958f:	ja     42960c <flatcc_builder_vector_push@@Base+0x9c>
  429591:	mov    ebp,DWORD PTR [rdi+0x20]
  429594:	mov    r12d,DWORD PTR [rax+0x10]
  429598:	mov    rcx,rbp
  42959b:	inc    edx
  42959d:	add    ecx,r12d
  4295a0:	mov    DWORD PTR [rax+0x14],edx
  4295a3:	mov    rbx,rdi
  4295a6:	mov    r13,rsi
  4295a9:	mov    DWORD PTR [rdi+0x20],ecx
  4295ac:	cmp    ecx,DWORD PTR [rdi+0x24]
  4295af:	jae    4295d8 <flatcc_builder_vector_push@@Base+0x68>
  4295b1:	add    rbp,QWORD PTR [rbx+0x18]
  4295b5:	je     4295c5 <flatcc_builder_vector_push@@Base+0x55>
  4295b7:	mov    edx,r12d
  4295ba:	mov    rsi,r13
  4295bd:	mov    rdi,rbp
  4295c0:	call   405370 <memcpy@plt>
  4295c5:	add    rsp,0x8
  4295c9:	pop    rbx
  4295ca:	mov    rax,rbp
  4295cd:	pop    rbp
  4295ce:	pop    r12
  4295d0:	pop    r13
  4295d2:	ret    
  4295d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4295d8:	lea    esi,[rcx+0x1]
  4295db:	mov    edx,0xfffffffc
  4295e0:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  4295e5:	test   eax,eax
  4295e7:	je     4295b1 <flatcc_builder_vector_push@@Base+0x41>
  4295e9:	xor    ebp,ebp
  4295eb:	jmp    4295c5 <flatcc_builder_vector_push@@Base+0x55>
  4295ed:	lea    rcx,[rip+0x2163c]        # 44ac30 <fb_schema_table_missing@@Base+0x3770>
  4295f4:	mov    edx,0x38b
  4295f9:	lea    rsi,[rip+0x20cc0]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  429600:	lea    rdi,[rip+0x20d99]        # 44a3a0 <fb_schema_table_missing@@Base+0x2ee0>
  429607:	call   405300 <__assert_fail@plt>
  42960c:	lea    rcx,[rip+0x2161d]        # 44ac30 <fb_schema_table_missing@@Base+0x3770>
  429613:	mov    edx,0x38c
  429618:	lea    rsi,[rip+0x20ca1]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42961f:	lea    rdi,[rip+0x20daa]        # 44a3d0 <fb_schema_table_missing@@Base+0x2f10>
  429626:	call   405300 <__assert_fail@plt>
  42962b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429630 <flatcc_builder_append_vector@@Base>:
  429630:	endbr64 
  429634:	push   r13
  429636:	push   r12
  429638:	push   rbp
  429639:	push   rbx
  42963a:	sub    rsp,0x8
  42963e:	mov    rax,QWORD PTR [rdi+0x30]
  429642:	cmp    WORD PTR [rax+0xe],0x4
  429647:	jne    4296b6 <flatcc_builder_append_vector@@Base+0x86>
  429649:	mov    ecx,edx
  42964b:	mov    r13,rsi
  42964e:	xor    esi,esi
  429650:	add    ecx,DWORD PTR [rax+0x14]
  429653:	setb   sil
  429657:	cmp    DWORD PTR [rax+0x18],ecx
  42965a:	jb     4296d5 <flatcc_builder_append_vector@@Base+0xa5>
  42965c:	test   esi,esi
  42965e:	jne    4296d5 <flatcc_builder_append_vector@@Base+0xa5>
  429660:	mov    ebx,DWORD PTR [rax+0x10]
  429663:	mov    r12d,DWORD PTR [rdi+0x20]
  429667:	imul   ebx,edx
  42966a:	mov    rdx,r12
  42966d:	mov    DWORD PTR [rax+0x14],ecx
  429670:	add    edx,ebx
  429672:	mov    rbp,rdi
  429675:	mov    DWORD PTR [rdi+0x20],edx
  429678:	cmp    edx,DWORD PTR [rdi+0x24]
  42967b:	jae    4296a0 <flatcc_builder_append_vector@@Base+0x70>
  42967d:	add    r12,QWORD PTR [rbp+0x18]
  429681:	je     429690 <flatcc_builder_append_vector@@Base+0x60>
  429683:	mov    edx,ebx
  429685:	mov    rsi,r13
  429688:	mov    rdi,r12
  42968b:	call   405370 <memcpy@plt>
  429690:	add    rsp,0x8
  429694:	pop    rbx
  429695:	pop    rbp
  429696:	mov    rax,r12
  429699:	pop    r12
  42969b:	pop    r13
  42969d:	ret    
  42969e:	xchg   ax,ax
  4296a0:	lea    esi,[rdx+0x1]
  4296a3:	mov    edx,0xfffffffc
  4296a8:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  4296ad:	test   eax,eax
  4296af:	je     42967d <flatcc_builder_append_vector@@Base+0x4d>
  4296b1:	xor    r12d,r12d
  4296b4:	jmp    429690 <flatcc_builder_append_vector@@Base+0x60>
  4296b6:	lea    rcx,[rip+0x21553]        # 44ac10 <fb_schema_table_missing@@Base+0x3750>
  4296bd:	mov    edx,0x393
  4296c2:	lea    rsi,[rip+0x20bf7]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  4296c9:	lea    rdi,[rip+0x20cd0]        # 44a3a0 <fb_schema_table_missing@@Base+0x2ee0>
  4296d0:	call   405300 <__assert_fail@plt>
  4296d5:	call   428340 <flatcc_builder_default_alloc@@Base+0x300>
  4296da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004296e0 <flatcc_builder_extend_offset_vector@@Base>:
  4296e0:	endbr64 
  4296e4:	push   rbp
  4296e5:	mov    edx,esi
  4296e7:	push   rbx
  4296e8:	sub    rsp,0x8
  4296ec:	mov    rax,QWORD PTR [rdi+0x30]
  4296f0:	add    edx,DWORD PTR [rax+0x14]
  4296f3:	jb     429735 <flatcc_builder_extend_offset_vector@@Base+0x55>
  4296f5:	cmp    edx,0x3fffffff
  4296fb:	ja     429735 <flatcc_builder_extend_offset_vector@@Base+0x55>
  4296fd:	mov    ebp,DWORD PTR [rdi+0x20]
  429700:	mov    DWORD PTR [rax+0x14],edx
  429703:	lea    eax,[rbp+rsi*4+0x0]
  429707:	mov    rbx,rdi
  42970a:	mov    DWORD PTR [rdi+0x20],eax
  42970d:	cmp    eax,DWORD PTR [rdi+0x24]
  429710:	jae    429720 <flatcc_builder_extend_offset_vector@@Base+0x40>
  429712:	mov    rax,QWORD PTR [rbx+0x18]
  429716:	add    rax,rbp
  429719:	add    rsp,0x8
  42971d:	pop    rbx
  42971e:	pop    rbp
  42971f:	ret    
  429720:	lea    esi,[rax+0x1]
  429723:	mov    edx,0xfffffffc
  429728:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42972d:	test   eax,eax
  42972f:	je     429712 <flatcc_builder_extend_offset_vector@@Base+0x32>
  429731:	xor    eax,eax
  429733:	jmp    429719 <flatcc_builder_extend_offset_vector@@Base+0x39>
  429735:	call   428340 <flatcc_builder_default_alloc@@Base+0x300>
  42973a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429740 <flatcc_builder_offset_vector_push@@Base>:
  429740:	endbr64 
  429744:	push   r12
  429746:	push   rbp
  429747:	push   rbx
  429748:	mov    rdx,QWORD PTR [rdi+0x30]
  42974c:	cmp    WORD PTR [rdx+0xe],0x5
  429751:	jne    4297a8 <flatcc_builder_offset_vector_push@@Base+0x68>
  429753:	mov    eax,DWORD PTR [rdx+0x14]
  429756:	cmp    eax,0x3fffffff
  42975b:	je     4297a1 <flatcc_builder_offset_vector_push@@Base+0x61>
  42975d:	mov    ebp,DWORD PTR [rdi+0x20]
  429760:	inc    eax
  429762:	mov    DWORD PTR [rdx+0x14],eax
  429765:	lea    edx,[rbp+0x4]
  429768:	mov    rbx,rdi
  42976b:	mov    r12d,esi
  42976e:	mov    DWORD PTR [rdi+0x20],edx
  429771:	cmp    edx,DWORD PTR [rdi+0x24]
  429774:	jae    429790 <flatcc_builder_offset_vector_push@@Base+0x50>
  429776:	mov    rax,rbp
  429779:	add    rax,QWORD PTR [rbx+0x18]
  42977d:	je     429782 <flatcc_builder_offset_vector_push@@Base+0x42>
  42977f:	mov    DWORD PTR [rax],r12d
  429782:	pop    rbx
  429783:	pop    rbp
  429784:	pop    r12
  429786:	ret    
  429787:	nop    WORD PTR [rax+rax*1+0x0]
  429790:	lea    esi,[rbp+0x5]
  429793:	mov    edx,0xfffffffc
  429798:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42979d:	test   eax,eax
  42979f:	je     429776 <flatcc_builder_offset_vector_push@@Base+0x36>
  4297a1:	pop    rbx
  4297a2:	pop    rbp
  4297a3:	xor    eax,eax
  4297a5:	pop    r12
  4297a7:	ret    
  4297a8:	lea    rcx,[rip+0x21431]        # 44abe0 <fb_schema_table_missing@@Base+0x3720>
  4297af:	mov    edx,0x3a6
  4297b4:	lea    rsi,[rip+0x20b05]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  4297bb:	lea    rdi,[rip+0x20c4e]        # 44a410 <fb_schema_table_missing@@Base+0x2f50>
  4297c2:	call   405300 <__assert_fail@plt>
  4297c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004297d0 <flatcc_builder_append_offset_vector@@Base>:
  4297d0:	endbr64 
  4297d4:	push   r13
  4297d6:	push   r12
  4297d8:	push   rbp
  4297d9:	push   rbx
  4297da:	sub    rsp,0x8
  4297de:	mov    rax,QWORD PTR [rdi+0x30]
  4297e2:	cmp    WORD PTR [rax+0xe],0x5
  4297e7:	jne    429856 <flatcc_builder_append_offset_vector@@Base+0x86>
  4297e9:	mov    ecx,edx
  4297eb:	add    ecx,DWORD PTR [rax+0x14]
  4297ee:	jb     429875 <flatcc_builder_append_offset_vector@@Base+0xa5>
  4297f4:	cmp    ecx,0x3fffffff
  4297fa:	ja     429875 <flatcc_builder_append_offset_vector@@Base+0xa5>
  4297fc:	mov    r12d,DWORD PTR [rdi+0x20]
  429800:	lea    ebx,[rdx*4+0x0]
  429807:	mov    rdx,r12
  42980a:	add    edx,ebx
  42980c:	mov    DWORD PTR [rax+0x14],ecx
  42980f:	mov    rbp,rdi
  429812:	mov    r13,rsi
  429815:	mov    DWORD PTR [rdi+0x20],edx
  429818:	cmp    edx,DWORD PTR [rdi+0x24]
  42981b:	jae    429840 <flatcc_builder_append_offset_vector@@Base+0x70>
  42981d:	add    r12,QWORD PTR [rbp+0x18]
  429821:	je     429830 <flatcc_builder_append_offset_vector@@Base+0x60>
  429823:	mov    edx,ebx
  429825:	mov    rsi,r13
  429828:	mov    rdi,r12
  42982b:	call   405370 <memcpy@plt>
  429830:	add    rsp,0x8
  429834:	pop    rbx
  429835:	pop    rbp
  429836:	mov    rax,r12
  429839:	pop    r12
  42983b:	pop    r13
  42983d:	ret    
  42983e:	xchg   ax,ax
  429840:	lea    esi,[rdx+0x1]
  429843:	mov    edx,0xfffffffc
  429848:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42984d:	test   eax,eax
  42984f:	je     42981d <flatcc_builder_append_offset_vector@@Base+0x4d>
  429851:	xor    r12d,r12d
  429854:	jmp    429830 <flatcc_builder_append_offset_vector@@Base+0x60>
  429856:	lea    rcx,[rip+0x21343]        # 44aba0 <fb_schema_table_missing@@Base+0x36e0>
  42985d:	mov    edx,0x3b4
  429862:	lea    rsi,[rip+0x20a57]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  429869:	lea    rdi,[rip+0x20ba0]        # 44a410 <fb_schema_table_missing@@Base+0x2f50>
  429870:	call   405300 <__assert_fail@plt>
  429875:	call   428340 <flatcc_builder_default_alloc@@Base+0x300>
  42987a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429880 <flatcc_builder_extend_string@@Base>:
  429880:	endbr64 
  429884:	push   rbp
  429885:	push   rbx
  429886:	sub    rsp,0x8
  42988a:	mov    rax,QWORD PTR [rdi+0x30]
  42988e:	cmp    WORD PTR [rax+0xe],0x6
  429893:	jne    4298d9 <flatcc_builder_extend_string@@Base+0x59>
  429895:	mov    edx,esi
  429897:	add    edx,DWORD PTR [rax+0x14]
  42989a:	jb     4298d4 <flatcc_builder_extend_string@@Base+0x54>
  42989c:	mov    ebp,DWORD PTR [rdi+0x20]
  42989f:	mov    DWORD PTR [rax+0x14],edx
  4298a2:	add    esi,ebp
  4298a4:	mov    rbx,rdi
  4298a7:	mov    DWORD PTR [rdi+0x20],esi
  4298aa:	cmp    esi,DWORD PTR [rdi+0x24]
  4298ad:	jae    4298c0 <flatcc_builder_extend_string@@Base+0x40>
  4298af:	mov    rax,QWORD PTR [rbx+0x18]
  4298b3:	add    rax,rbp
  4298b6:	add    rsp,0x8
  4298ba:	pop    rbx
  4298bb:	pop    rbp
  4298bc:	ret    
  4298bd:	nop    DWORD PTR [rax]
  4298c0:	inc    esi
  4298c2:	mov    edx,0xfffffffc
  4298c7:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  4298cc:	test   eax,eax
  4298ce:	je     4298af <flatcc_builder_extend_string@@Base+0x2f>
  4298d0:	xor    eax,eax
  4298d2:	jmp    4298b6 <flatcc_builder_extend_string@@Base+0x36>
  4298d4:	call   428340 <flatcc_builder_default_alloc@@Base+0x300>
  4298d9:	lea    rcx,[rip+0x21290]        # 44ab70 <fb_schema_table_missing@@Base+0x36b0>
  4298e0:	mov    edx,0x3bd
  4298e5:	lea    rsi,[rip+0x209d4]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  4298ec:	lea    rdi,[rip+0x20b55]        # 44a448 <fb_schema_table_missing@@Base+0x2f88>
  4298f3:	call   405300 <__assert_fail@plt>
  4298f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429900 <flatcc_builder_append_string@@Base>:
  429900:	endbr64 
  429904:	push   r13
  429906:	push   r12
  429908:	push   rbp
  429909:	push   rbx
  42990a:	sub    rsp,0x8
  42990e:	mov    rax,QWORD PTR [rdi+0x30]
  429912:	cmp    WORD PTR [rax+0xe],0x6
  429917:	jne    42997b <flatcc_builder_append_string@@Base+0x7b>
  429919:	mov    rbp,rdx
  42991c:	add    edx,DWORD PTR [rax+0x14]
  42991f:	jb     429976 <flatcc_builder_append_string@@Base+0x76>
  429921:	mov    r12d,DWORD PTR [rdi+0x20]
  429925:	mov    DWORD PTR [rax+0x14],edx
  429928:	mov    rdx,r12
  42992b:	add    edx,ebp
  42992d:	mov    rbx,rdi
  429930:	mov    r13,rsi
  429933:	mov    DWORD PTR [rdi+0x20],edx
  429936:	cmp    edx,DWORD PTR [rdi+0x24]
  429939:	jae    429960 <flatcc_builder_append_string@@Base+0x60>
  42993b:	add    r12,QWORD PTR [rbx+0x18]
  42993f:	je     42994e <flatcc_builder_append_string@@Base+0x4e>
  429941:	mov    edx,ebp
  429943:	mov    rsi,r13
  429946:	mov    rdi,r12
  429949:	call   405370 <memcpy@plt>
  42994e:	add    rsp,0x8
  429952:	pop    rbx
  429953:	pop    rbp
  429954:	mov    rax,r12
  429957:	pop    r12
  429959:	pop    r13
  42995b:	ret    
  42995c:	nop    DWORD PTR [rax+0x0]
  429960:	lea    esi,[rdx+0x1]
  429963:	mov    edx,0xfffffffc
  429968:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42996d:	test   eax,eax
  42996f:	je     42993b <flatcc_builder_append_string@@Base+0x3b>
  429971:	xor    r12d,r12d
  429974:	jmp    42994e <flatcc_builder_append_string@@Base+0x4e>
  429976:	call   428340 <flatcc_builder_default_alloc@@Base+0x300>
  42997b:	lea    rcx,[rip+0x211ce]        # 44ab50 <fb_schema_table_missing@@Base+0x3690>
  429982:	mov    edx,0x3c6
  429987:	lea    rsi,[rip+0x20932]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42998e:	lea    rdi,[rip+0x20ab3]        # 44a448 <fb_schema_table_missing@@Base+0x2f88>
  429995:	call   405300 <__assert_fail@plt>
  42999a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004299a0 <flatcc_builder_append_string_str@@Base>:
  4299a0:	endbr64 
  4299a4:	push   rbp
  4299a5:	mov    rbp,rdi
  4299a8:	mov    rdi,rsi
  4299ab:	push   rbx
  4299ac:	mov    rbx,rsi
  4299af:	sub    rsp,0x8
  4299b3:	call   4052c0 <strlen@plt>
  4299b8:	add    rsp,0x8
  4299bc:	mov    rsi,rbx
  4299bf:	pop    rbx
  4299c0:	mov    rdi,rbp
  4299c3:	mov    rdx,rax
  4299c6:	pop    rbp
  4299c7:	jmp    429900 <flatcc_builder_append_string@@Base>
  4299cc:	nop    DWORD PTR [rax+0x0]

00000000004299d0 <flatcc_builder_append_string_strn@@Base>:
  4299d0:	endbr64 
  4299d4:	push   r12
  4299d6:	mov    r12,rdi
  4299d9:	push   rbp
  4299da:	mov    rbp,rsi
  4299dd:	mov    rdi,rbp
  4299e0:	push   rbx
  4299e1:	xor    esi,esi
  4299e3:	mov    rbx,rdx
  4299e6:	call   405320 <memchr@plt>
  4299eb:	mov    rdx,rax
  4299ee:	sub    rdx,rbp
  4299f1:	test   rax,rax
  4299f4:	cmovne rbx,rdx
  4299f8:	mov    rsi,rbp
  4299fb:	mov    rdx,rbx
  4299fe:	pop    rbx
  4299ff:	pop    rbp
  429a00:	mov    rdi,r12
  429a03:	pop    r12
  429a05:	jmp    429900 <flatcc_builder_append_string@@Base>
  429a0a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429a10 <flatcc_builder_truncate_vector@@Base>:
  429a10:	endbr64 
  429a14:	sub    rsp,0x8
  429a18:	mov    rax,QWORD PTR [rdi+0x30]
  429a1c:	cmp    WORD PTR [rax+0xe],0x4
  429a21:	jne    429a56 <flatcc_builder_truncate_vector@@Base+0x46>
  429a23:	mov    ecx,DWORD PTR [rax+0x14]
  429a26:	mov    rdx,rcx
  429a29:	cmp    rcx,rsi
  429a2c:	jb     429a75 <flatcc_builder_truncate_vector@@Base+0x65>
  429a2e:	sub    edx,esi
  429a30:	mov    DWORD PTR [rax+0x14],edx
  429a33:	imul   esi,DWORD PTR [rax+0x10]
  429a37:	mov    eax,DWORD PTR [rdi+0x20]
  429a3a:	mov    edx,esi
  429a3c:	sub    eax,esi
  429a3e:	mov    DWORD PTR [rdi+0x20],eax
  429a41:	add    rax,QWORD PTR [rdi+0x18]
  429a45:	mov    rdi,rax
  429a48:	xor    esi,esi
  429a4a:	call   405310 <memset@plt>
  429a4f:	xor    eax,eax
  429a51:	add    rsp,0x8
  429a55:	ret    
  429a56:	lea    rcx,[rip+0x210d3]        # 44ab30 <fb_schema_table_missing@@Base+0x3670>
  429a5d:	mov    edx,0x3d9
  429a62:	lea    rsi,[rip+0x20857]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  429a69:	lea    rdi,[rip+0x20930]        # 44a3a0 <fb_schema_table_missing@@Base+0x2ee0>
  429a70:	call   405300 <__assert_fail@plt>
  429a75:	lea    rcx,[rip+0x210b4]        # 44ab30 <fb_schema_table_missing@@Base+0x3670>
  429a7c:	mov    edx,0x3da
  429a81:	lea    rsi,[rip+0x20838]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  429a88:	lea    rdi,[rip+0x209e9]        # 44a478 <fb_schema_table_missing@@Base+0x2fb8>
  429a8f:	call   405300 <__assert_fail@plt>
  429a94:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429a9f:	nop

0000000000429aa0 <flatcc_builder_truncate_offset_vector@@Base>:
  429aa0:	endbr64 
  429aa4:	sub    rsp,0x8
  429aa8:	mov    rax,QWORD PTR [rdi+0x30]
  429aac:	cmp    WORD PTR [rax+0xe],0x5
  429ab1:	jne    429ae2 <flatcc_builder_truncate_offset_vector@@Base+0x42>
  429ab3:	mov    edx,DWORD PTR [rax+0x14]
  429ab6:	cmp    edx,esi
  429ab8:	jb     429b01 <flatcc_builder_truncate_offset_vector@@Base+0x61>
  429aba:	sub    edx,esi
  429abc:	mov    DWORD PTR [rax+0x14],edx
  429abf:	imul   esi,DWORD PTR [rax+0x10]
  429ac3:	mov    eax,DWORD PTR [rdi+0x20]
  429ac6:	mov    edx,esi
  429ac8:	sub    eax,esi
  429aca:	mov    DWORD PTR [rdi+0x20],eax
  429acd:	add    rax,QWORD PTR [rdi+0x18]
  429ad1:	mov    rdi,rax
  429ad4:	xor    esi,esi
  429ad6:	call   405310 <memset@plt>
  429adb:	xor    eax,eax
  429add:	add    rsp,0x8
  429ae1:	ret    
  429ae2:	lea    rcx,[rip+0x21017]        # 44ab00 <fb_schema_table_missing@@Base+0x3640>
  429ae9:	mov    edx,0x3e2
  429aee:	lea    rsi,[rip+0x207cb]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  429af5:	lea    rdi,[rip+0x20914]        # 44a410 <fb_schema_table_missing@@Base+0x2f50>
  429afc:	call   405300 <__assert_fail@plt>
  429b01:	lea    rcx,[rip+0x20ff8]        # 44ab00 <fb_schema_table_missing@@Base+0x3640>
  429b08:	mov    edx,0x3e3
  429b0d:	lea    rsi,[rip+0x207ac]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  429b14:	lea    rdi,[rip+0x20985]        # 44a4a0 <fb_schema_table_missing@@Base+0x2fe0>
  429b1b:	call   405300 <__assert_fail@plt>

0000000000429b20 <flatcc_builder_truncate_string@@Base>:
  429b20:	endbr64 
  429b24:	sub    rsp,0x8
  429b28:	mov    rdx,QWORD PTR [rdi+0x30]
  429b2c:	cmp    WORD PTR [rdx+0xe],0x6
  429b31:	jne    429b63 <flatcc_builder_truncate_string@@Base+0x43>
  429b33:	mov    ecx,DWORD PTR [rdx+0x14]
  429b36:	mov    rax,rcx
  429b39:	cmp    rcx,rsi
  429b3c:	jb     429b82 <flatcc_builder_truncate_string@@Base+0x62>
  429b3e:	sub    eax,esi
  429b40:	mov    DWORD PTR [rdx+0x14],eax
  429b43:	mov    rdx,rsi
  429b46:	mov    eax,DWORD PTR [rdi+0x20]
  429b49:	sub    eax,esi
  429b4b:	mov    DWORD PTR [rdi+0x20],eax
  429b4e:	add    rax,QWORD PTR [rdi+0x18]
  429b52:	mov    rdi,rax
  429b55:	xor    esi,esi
  429b57:	call   405310 <memset@plt>
  429b5c:	xor    eax,eax
  429b5e:	add    rsp,0x8
  429b62:	ret    
  429b63:	lea    rcx,[rip+0x20f76]        # 44aae0 <fb_schema_table_missing@@Base+0x3620>
  429b6a:	mov    edx,0x3eb
  429b6f:	lea    rsi,[rip+0x2074a]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  429b76:	lea    rdi,[rip+0x208cb]        # 44a448 <fb_schema_table_missing@@Base+0x2f88>
  429b7d:	call   405300 <__assert_fail@plt>
  429b82:	lea    rcx,[rip+0x20f57]        # 44aae0 <fb_schema_table_missing@@Base+0x3620>
  429b89:	mov    edx,0x3ec
  429b8e:	lea    rsi,[rip+0x2072b]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  429b95:	lea    rdi,[rip+0x20944]        # 44a4e0 <fb_schema_table_missing@@Base+0x3020>
  429b9c:	call   405300 <__assert_fail@plt>
  429ba1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429bac:	nop    DWORD PTR [rax+0x0]

0000000000429bb0 <flatcc_builder_start_vector@@Base>:
  429bb0:	endbr64 
  429bb4:	push   r12
  429bb6:	cmp    dx,0x4
  429bba:	mov    r12,rcx
  429bbd:	push   rbp
  429bbe:	mov    rbp,rsi
  429bc1:	mov    esi,0x4
  429bc6:	push   rbx
  429bc7:	cmovae esi,edx
  429bca:	mov    rbx,rdi
  429bcd:	movzx  esi,si
  429bd0:	call   428370 <flatcc_builder_default_alloc@@Base+0x330>
  429bd5:	test   eax,eax
  429bd7:	jne    429c20 <flatcc_builder_start_vector@@Base+0x70>
  429bd9:	mov    rsi,QWORD PTR [rbx+0x30]
  429bdd:	mov    edx,0x4
  429be2:	mov    WORD PTR [rsi+0xe],dx
  429be6:	mov    edx,DWORD PTR [rbx+0x28]
  429be9:	mov    DWORD PTR [rsi+0x10],ebp
  429bec:	mov    rcx,rdx
  429bef:	add    rdx,QWORD PTR [rbx+0x68]
  429bf3:	mov    DWORD PTR [rsi+0x14],0x0
  429bfa:	mov    DWORD PTR [rsi+0x18],r12d
  429bfe:	mov    QWORD PTR [rbx+0x18],rdx
  429c02:	mov    edx,DWORD PTR [rbx+0x70]
  429c05:	sub    edx,ecx
  429c07:	mov    ecx,0xfffffffc
  429c0c:	cmp    edx,ecx
  429c0e:	cmova  edx,ecx
  429c11:	mov    DWORD PTR [rbx+0x24],edx
  429c14:	mov    DWORD PTR [rsi+0x4],ecx
  429c17:	pop    rbx
  429c18:	pop    rbp
  429c19:	pop    r12
  429c1b:	ret    
  429c1c:	nop    DWORD PTR [rax+0x0]
  429c20:	mov    eax,0xffffffff
  429c25:	jmp    429c17 <flatcc_builder_start_vector@@Base+0x67>
  429c27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429c30 <flatcc_builder_start_offset_vector@@Base>:
  429c30:	endbr64 
  429c34:	push   rbx
  429c35:	mov    esi,0x4
  429c3a:	mov    rbx,rdi
  429c3d:	call   428370 <flatcc_builder_default_alloc@@Base+0x330>
  429c42:	test   eax,eax
  429c44:	jne    429c80 <flatcc_builder_start_offset_vector@@Base+0x50>
  429c46:	mov    rcx,QWORD PTR [rbx+0x30]
  429c4a:	xor    edx,edx
  429c4c:	mov    QWORD PTR [rcx+0xe],0x40005
  429c54:	mov    WORD PTR [rcx+0x16],dx
  429c58:	mov    edx,DWORD PTR [rbx+0x28]
  429c5b:	mov    rsi,rdx
  429c5e:	add    rdx,QWORD PTR [rbx+0x68]
  429c62:	mov    QWORD PTR [rbx+0x18],rdx
  429c66:	mov    edx,DWORD PTR [rbx+0x70]
  429c69:	sub    edx,esi
  429c6b:	mov    esi,0xfffffffc
  429c70:	cmp    edx,esi
  429c72:	cmova  edx,esi
  429c75:	mov    DWORD PTR [rbx+0x24],edx
  429c78:	mov    DWORD PTR [rcx+0x4],esi
  429c7b:	pop    rbx
  429c7c:	ret    
  429c7d:	nop    DWORD PTR [rax]
  429c80:	mov    eax,0xffffffff
  429c85:	pop    rbx
  429c86:	ret    
  429c87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429c90 <flatcc_builder_start_string@@Base>:
  429c90:	endbr64 
  429c94:	push   rbx
  429c95:	mov    esi,0x1
  429c9a:	mov    rbx,rdi
  429c9d:	call   428370 <flatcc_builder_default_alloc@@Base+0x330>
  429ca2:	test   eax,eax
  429ca4:	jne    429ce0 <flatcc_builder_start_string@@Base+0x50>
  429ca6:	mov    rcx,QWORD PTR [rbx+0x30]
  429caa:	xor    edx,edx
  429cac:	mov    QWORD PTR [rcx+0xe],0x10006
  429cb4:	mov    WORD PTR [rcx+0x16],dx
  429cb8:	mov    edx,DWORD PTR [rbx+0x28]
  429cbb:	mov    rsi,rdx
  429cbe:	add    rdx,QWORD PTR [rbx+0x68]
  429cc2:	mov    QWORD PTR [rbx+0x18],rdx
  429cc6:	mov    edx,DWORD PTR [rbx+0x70]
  429cc9:	sub    edx,esi
  429ccb:	mov    esi,0xfffffffc
  429cd0:	cmp    edx,esi
  429cd2:	cmova  edx,esi
  429cd5:	mov    DWORD PTR [rbx+0x24],edx
  429cd8:	mov    DWORD PTR [rcx+0x4],esi
  429cdb:	pop    rbx
  429cdc:	ret    
  429cdd:	nop    DWORD PTR [rax]
  429ce0:	mov    eax,0xffffffff
  429ce5:	pop    rbx
  429ce6:	ret    
  429ce7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429cf0 <flatcc_builder_reserve_table@@Base>:
  429cf0:	endbr64 
  429cf4:	push   r12
  429cf6:	push   rbp
  429cf7:	push   rbx
  429cf8:	test   esi,esi
  429cfa:	js     429daf <flatcc_builder_reserve_table@@Base+0xbf>
  429d00:	mov    rax,QWORD PTR [rdi+0x30]
  429d04:	lea    r12d,[rsi+rsi*1+0x4]
  429d09:	movzx  edx,WORD PTR [rax+0x1c]
  429d0d:	mov    eax,DWORD PTR [rax+0x10]
  429d10:	mov    rbx,rdi
  429d13:	lea    ebp,[rax+rdx*2]
  429d16:	mov    edx,r12d
  429d19:	add    rdx,rbp
  429d1c:	cmp    rdx,QWORD PTR [rdi+0x60]
  429d20:	ja     429d60 <flatcc_builder_reserve_table@@Base+0x70>
  429d22:	add    rbp,QWORD PTR [rbx+0x58]
  429d26:	je     429da0 <flatcc_builder_reserve_table@@Base+0xb0>
  429d28:	mov    rax,QWORD PTR [rbx+0x30]
  429d2c:	add    rbp,0x4
  429d30:	mov    QWORD PTR [rbx+0x8],rbp
  429d34:	mov    ebp,DWORD PTR [rax+0x14]
  429d37:	lea    edx,[r12-0x3]
  429d3c:	add    rdx,rbp
  429d3f:	cmp    rdx,QWORD PTR [rbx+0x90]
  429d46:	ja     429d80 <flatcc_builder_reserve_table@@Base+0x90>
  429d48:	add    rbp,QWORD PTR [rbx+0x88]
  429d4f:	sete   al
  429d52:	mov    QWORD PTR [rbx],rbp
  429d55:	movzx  eax,al
  429d58:	neg    eax
  429d5a:	pop    rbx
  429d5b:	pop    rbp
  429d5c:	pop    r12
  429d5e:	ret    
  429d5f:	nop
  429d60:	lea    rsi,[rdi+0x58]
  429d64:	mov    rdi,QWORD PTR [rdi+0x40]
  429d68:	xor    r8d,r8d
  429d6b:	mov    ecx,0x1
  429d70:	call   QWORD PTR [rbx+0x50]
  429d73:	test   eax,eax
  429d75:	je     429d22 <flatcc_builder_reserve_table@@Base+0x32>
  429d77:	call   428170 <flatcc_builder_default_alloc@@Base+0x130>
  429d7c:	nop    DWORD PTR [rax+0x0]
  429d80:	mov    rdi,QWORD PTR [rbx+0x40]
  429d84:	xor    ecx,ecx
  429d86:	lea    rsi,[rbx+0x88]
  429d8d:	mov    r8d,0x3
  429d93:	call   QWORD PTR [rbx+0x50]
  429d96:	test   eax,eax
  429d98:	je     429d48 <flatcc_builder_reserve_table@@Base+0x58>
  429d9a:	jmp    429d77 <flatcc_builder_reserve_table@@Base+0x87>
  429d9c:	nop    DWORD PTR [rax+0x0]
  429da0:	mov    QWORD PTR [rbx+0x8],0x0
  429da8:	mov    eax,0xffffffff
  429dad:	jmp    429d5a <flatcc_builder_reserve_table@@Base+0x6a>
  429daf:	lea    rcx,[rip+0x20d0a]        # 44aac0 <fb_schema_table_missing@@Base+0x3600>
  429db6:	mov    edx,0x429
  429dbb:	lea    rsi,[rip+0x204fe]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  429dc2:	lea    rdi,[rip+0x208ea]        # 44a6b3 <fb_schema_table_missing@@Base+0x31f3>
  429dc9:	call   405300 <__assert_fail@plt>
  429dce:	xchg   ax,ax

0000000000429dd0 <flatcc_builder_start_table@@Base>:
  429dd0:	endbr64 
  429dd4:	push   r13
  429dd6:	push   r12
  429dd8:	mov    r12d,esi
  429ddb:	mov    esi,0x4
  429de0:	push   rbp
  429de1:	push   rbx
  429de2:	mov    rbx,rdi
  429de5:	sub    rsp,0x8
  429de9:	call   428370 <flatcc_builder_default_alloc@@Base+0x330>
  429dee:	test   eax,eax
  429df0:	jne    429f08 <flatcc_builder_start_table@@Base+0x138>
  429df6:	mov    rsi,QWORD PTR [rbx]
  429df9:	mov    rdx,QWORD PTR [rbx+0x30]
  429dfd:	sub    rsi,QWORD PTR [rbx+0x88]
  429e04:	mov    rcx,QWORD PTR [rbx+0x8]
  429e08:	mov    ebp,eax
  429e0a:	mov    rax,QWORD PTR [rbx+0x58]
  429e0e:	mov    DWORD PTR [rdx+0x14],esi
  429e11:	mov    esi,DWORD PTR [rbx+0x14]
  429e14:	sub    rcx,rax
  429e17:	mov    DWORD PTR [rdx+0x18],esi
  429e1a:	movzx  esi,WORD PTR [rbx+0x10]
  429e1e:	xor    edi,edi
  429e20:	mov    r8d,0x3
  429e26:	mov    DWORD PTR [rdx+0x10],ecx
  429e29:	mov    WORD PTR [rdx+0x1c],si
  429e2d:	lea    r13d,[rcx+rsi*2]
  429e31:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  429e38:	mov    WORD PTR [rbx+0x10],di
  429e3c:	mov    WORD PTR [rdx+0xe],r8w
  429e41:	lea    edx,[r12+r12*1+0x4]
  429e46:	add    rdx,r13
  429e49:	cmp    rdx,QWORD PTR [rbx+0x60]
  429e4d:	jbe    429e6e <flatcc_builder_start_table@@Base+0x9e>
  429e4f:	mov    rdi,QWORD PTR [rbx+0x40]
  429e53:	xor    r8d,r8d
  429e56:	lea    rsi,[rbx+0x58]
  429e5a:	mov    ecx,0x1
  429e5f:	call   QWORD PTR [rbx+0x50]
  429e62:	test   eax,eax
  429e64:	jne    429efa <flatcc_builder_start_table@@Base+0x12a>
  429e6a:	mov    rax,QWORD PTR [rbx+0x58]
  429e6e:	add    rax,r13
  429e71:	je     429f00 <flatcc_builder_start_table@@Base+0x130>
  429e77:	add    rax,0x4
  429e7b:	mov    QWORD PTR [rbx+0x8],rax
  429e7f:	mov    rax,QWORD PTR [rbx+0x30]
  429e83:	lea    edx,[r12+r12*1+0x1]
  429e88:	mov    r13d,DWORD PTR [rax+0x14]
  429e8c:	add    rdx,r13
  429e8f:	cmp    rdx,QWORD PTR [rbx+0x90]
  429e96:	ja     429ee0 <flatcc_builder_start_table@@Base+0x110>
  429e98:	add    r13,QWORD PTR [rbx+0x88]
  429e9f:	mov    QWORD PTR [rbx],r13
  429ea2:	je     429f08 <flatcc_builder_start_table@@Base+0x138>
  429ea4:	mov    eax,DWORD PTR [rbx+0x28]
  429ea7:	mov    rdx,rax
  429eaa:	add    rax,QWORD PTR [rbx+0x68]
  429eae:	mov    QWORD PTR [rbx+0x18],rax
  429eb2:	mov    eax,DWORD PTR [rbx+0x70]
  429eb5:	sub    eax,edx
  429eb7:	cmp    eax,0xfffc
  429ebc:	mov    edx,0xfffc
  429ec1:	cmova  eax,edx
  429ec4:	mov    DWORD PTR [rbx+0x24],eax
  429ec7:	mov    rax,QWORD PTR [rbx+0x30]
  429ecb:	mov    DWORD PTR [rax+0x4],0xfffc
  429ed2:	add    rsp,0x8
  429ed6:	pop    rbx
  429ed7:	mov    eax,ebp
  429ed9:	pop    rbp
  429eda:	pop    r12
  429edc:	pop    r13
  429ede:	ret    
  429edf:	nop
  429ee0:	mov    rdi,QWORD PTR [rbx+0x40]
  429ee4:	xor    ecx,ecx
  429ee6:	lea    rsi,[rbx+0x88]
  429eed:	mov    r8d,0x3
  429ef3:	call   QWORD PTR [rbx+0x50]
  429ef6:	test   eax,eax
  429ef8:	je     429e98 <flatcc_builder_start_table@@Base+0xc8>
  429efa:	call   428170 <flatcc_builder_default_alloc@@Base+0x130>
  429eff:	nop
  429f00:	mov    QWORD PTR [rbx+0x8],0x0
  429f08:	mov    ebp,0xffffffff
  429f0d:	jmp    429ed2 <flatcc_builder_start_table@@Base+0x102>
  429f0f:	nop

0000000000429f10 <flatcc_builder_create_vtable@@Base>:
  429f10:	endbr64 
  429f14:	push   rbp
  429f15:	mov    rbp,rdi
  429f18:	push   rbx
  429f19:	sub    rsp,0xa8
  429f20:	mov    rax,QWORD PTR fs:0x28
  429f29:	mov    QWORD PTR [rsp+0x98],rax
  429f31:	xor    eax,eax
  429f33:	mov    QWORD PTR [rsp],0x0
  429f3b:	mov    DWORD PTR [rsp+0x8],0x0
  429f43:	mov    eax,DWORD PTR [rdi+0x100]
  429f49:	test   dx,dx
  429f4c:	je     429fd0 <flatcc_builder_create_vtable@@Base+0xc0>
  429f52:	movzx  r8d,dx
  429f56:	mov    QWORD PTR [rsp],r8
  429f5a:	mov    QWORD PTR [rsp+0x10],rsi
  429f5f:	mov    QWORD PTR [rsp+0x18],r8
  429f64:	mov    DWORD PTR [rsp+0x8],0x1
  429f6c:	movzx  edx,dx
  429f6f:	test   eax,eax
  429f71:	je     42a000 <flatcc_builder_create_vtable@@Base+0xf0>
  429f77:	mov    eax,DWORD PTR [rbp+0xf0]
  429f7d:	mov    ebx,eax
  429f7f:	sub    ebx,edx
  429f81:	cmp    eax,ebx
  429f83:	jle    429fde <flatcc_builder_create_vtable@@Base+0xce>
  429f85:	mov    rdi,QWORD PTR [rbp+0x38]
  429f89:	mov    edx,DWORD PTR [rsp+0x8]
  429f8d:	lea    rsi,[rsp+0x10]
  429f92:	mov    ecx,ebx
  429f94:	call   QWORD PTR [rbp+0x48]
  429f97:	test   eax,eax
  429f99:	jne    42a050 <flatcc_builder_create_vtable@@Base+0x140>
  429f9f:	cmp    ebx,0x1
  429fa2:	mov    DWORD PTR [rbp+0xf0],ebx
  429fa8:	sbb    ebx,0xffffffff
  429fab:	mov    rcx,QWORD PTR [rsp+0x98]
  429fb3:	xor    rcx,QWORD PTR fs:0x28
  429fbc:	mov    eax,ebx
  429fbe:	jne    42a04b <flatcc_builder_create_vtable@@Base+0x13b>
  429fc4:	add    rsp,0xa8
  429fcb:	pop    rbx
  429fcc:	pop    rbp
  429fcd:	ret    
  429fce:	xchg   ax,ax
  429fd0:	test   eax,eax
  429fd2:	jne    429fde <flatcc_builder_create_vtable@@Base+0xce>
  429fd4:	mov    eax,DWORD PTR [rdi+0x124]
  429fda:	test   eax,eax
  429fdc:	je     42a040 <flatcc_builder_create_vtable@@Base+0x130>
  429fde:	lea    rcx,[rip+0x20d0b]        # 44acf0 <fb_schema_table_missing@@Base+0x3830>
  429fe5:	mov    edx,0x287
  429fea:	lea    rsi,[rip+0x202cf]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  429ff1:	lea    rdi,[rip+0xe361]        # 438359 <_IO_stdin_used@@Base+0xa359>
  429ff8:	call   405300 <__assert_fail@plt>
  429ffd:	nop    DWORD PTR [rax]
  42a000:	mov    ecx,DWORD PTR [rdi+0x124]
  42a006:	test   ecx,ecx
  42a008:	jne    429f77 <flatcc_builder_create_vtable@@Base+0x67>
  42a00e:	mov    ebx,DWORD PTR [rdi+0xf4]
  42a014:	add    edx,ebx
  42a016:	mov    DWORD PTR [rdi+0xf4],edx
  42a01c:	mov    rdi,QWORD PTR [rbp+0x38]
  42a020:	mov    edx,DWORD PTR [rsp+0x8]
  42a024:	lea    rsi,[rsp+0x10]
  42a029:	mov    ecx,ebx
  42a02b:	call   QWORD PTR [rbp+0x48]
  42a02e:	test   eax,eax
  42a030:	jne    42a055 <flatcc_builder_create_vtable@@Base+0x145>
  42a032:	inc    ebx
  42a034:	jmp    429fab <flatcc_builder_create_vtable@@Base+0x9b>
  42a039:	nop    DWORD PTR [rax+0x0]
  42a040:	mov    ebx,DWORD PTR [rbp+0xf4]
  42a046:	xor    r8d,r8d
  42a049:	jmp    42a01c <flatcc_builder_create_vtable@@Base+0x10c>
  42a04b:	call   4052d0 <__stack_chk_fail@plt>
  42a050:	call   428310 <flatcc_builder_default_alloc@@Base+0x2d0>
  42a055:	call   4281a0 <flatcc_builder_default_alloc@@Base+0x160>
  42a05a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a060 <flatcc_builder_create_cached_vtable@@Base>:
  42a060:	endbr64 
  42a064:	push   r15
  42a066:	mov    r15,rdi
  42a069:	push   r14
  42a06b:	push   r13
  42a06d:	push   r12
  42a06f:	movzx  r12d,dx
  42a073:	push   rbp
  42a074:	mov    ebp,ecx
  42a076:	push   rbx
  42a077:	sub    rsp,0x38
  42a07b:	mov    rbx,QWORD PTR [rdi+0xd8]
  42a082:	mov    QWORD PTR [rsp+0x18],rsi
  42a087:	mov    DWORD PTR [rsp+0x2c],edx
  42a08b:	test   rbx,rbx
  42a08e:	je     42a228 <flatcc_builder_create_cached_vtable@@Base+0x1c8>
  42a094:	mov    eax,0x20
  42a099:	sub    eax,ebx
  42a09b:	shrx   ebp,ebp,eax
  42a0a0:	mov    rax,QWORD PTR [r15+0xa8]
  42a0a7:	lea    r14,[rax+rbp*4]
  42a0ab:	test   r14,r14
  42a0ae:	je     42a210 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  42a0b4:	mov    ebp,DWORD PTR [r14]
  42a0b7:	test   ebp,ebp
  42a0b9:	je     42a300 <flatcc_builder_create_cached_vtable@@Base+0x2a0>
  42a0bf:	mov    QWORD PTR [rsp+0x20],0x0
  42a0c8:	mov    r11,QWORD PTR [r15+0xb8]
  42a0cf:	mov    r8,QWORD PTR [r15+0x78]
  42a0d3:	mov    r13,r14
  42a0d6:	mov    ebx,ebp
  42a0d8:	add    rbx,r11
  42a0db:	mov    esi,DWORD PTR [rbx+0x8]
  42a0de:	add    rsi,r8
  42a0e1:	cmp    WORD PTR [rsi],r12w
  42a0e5:	jne    42a1d0 <flatcc_builder_create_cached_vtable@@Base+0x170>
  42a0eb:	mov    rdi,QWORD PTR [rsp+0x18]
  42a0f0:	movzx  edx,r12w
  42a0f4:	mov    QWORD PTR [rsp+0x10],r8
  42a0f9:	mov    QWORD PTR [rsp+0x8],r11
  42a0fe:	call   405330 <memcmp@plt>
  42a103:	test   eax,eax
  42a105:	mov    r11,QWORD PTR [rsp+0x8]
  42a10a:	mov    r8,QWORD PTR [rsp+0x10]
  42a10f:	jne    42a1d0 <flatcc_builder_create_cached_vtable@@Base+0x170>
  42a115:	mov    eax,DWORD PTR [r15+0x100]
  42a11c:	cmp    DWORD PTR [rbx+0x4],eax
  42a11f:	je     42a1e0 <flatcc_builder_create_cached_vtable@@Base+0x180>
  42a125:	mov    QWORD PTR [rsp+0x20],rbx
  42a12a:	mov    ebp,DWORD PTR [rbx+0xc]
  42a12d:	lea    r13,[rbx+0xc]
  42a131:	test   ebp,ebp
  42a133:	jne    42a0d6 <flatcc_builder_create_cached_vtable@@Base+0x76>
  42a135:	mov    ebp,DWORD PTR [r15+0xe4]
  42a13c:	lea    rdx,[rbp+0x10]
  42a140:	cmp    rdx,QWORD PTR [r15+0xc0]
  42a147:	jbe    42a168 <flatcc_builder_create_cached_vtable@@Base+0x108>
  42a149:	mov    rdi,QWORD PTR [r15+0x40]
  42a14d:	xor    ecx,ecx
  42a14f:	lea    rsi,[r15+0xb8]
  42a156:	mov    r8d,0x6
  42a15c:	call   QWORD PTR [r15+0x50]
  42a160:	test   eax,eax
  42a162:	jne    42a2f4 <flatcc_builder_create_cached_vtable@@Base+0x294>
  42a168:	add    rbp,QWORD PTR [r15+0xb8]
  42a16f:	je     42a210 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  42a175:	mov    eax,DWORD PTR [r15+0xe4]
  42a17c:	mov    rsi,QWORD PTR [rsp+0x18]
  42a181:	lea    edx,[rax+0x10]
  42a184:	mov    DWORD PTR [r15+0xe4],edx
  42a18b:	mov    edx,DWORD PTR [r15+0x100]
  42a192:	mov    rdi,r15
  42a195:	mov    DWORD PTR [rbp+0x4],edx
  42a198:	mov    edx,DWORD PTR [r14]
  42a19b:	mov    DWORD PTR [rbp+0xc],edx
  42a19e:	mov    DWORD PTR [r14],eax
  42a1a1:	mov    eax,DWORD PTR [rsp+0x2c]
  42a1a5:	movzx  edx,ax
  42a1a8:	movzx  ebx,ax
  42a1ab:	call   429f10 <flatcc_builder_create_vtable@@Base>
  42a1b0:	mov    DWORD PTR [rbp+0x0],eax
  42a1b3:	test   eax,eax
  42a1b5:	je     42a210 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  42a1b7:	mov    rdi,QWORD PTR [rsp+0x20]
  42a1bc:	test   rdi,rdi
  42a1bf:	je     42a315 <flatcc_builder_create_cached_vtable@@Base+0x2b5>
  42a1c5:	mov    edx,DWORD PTR [rdi+0x8]
  42a1c8:	mov    DWORD PTR [rbp+0x8],edx
  42a1cb:	jmp    42a1f7 <flatcc_builder_create_cached_vtable@@Base+0x197>
  42a1cd:	nop    DWORD PTR [rax]
  42a1d0:	lea    r13,[rbx+0xc]
  42a1d4:	mov    ebp,DWORD PTR [rbx+0xc]
  42a1d7:	jmp    42a131 <flatcc_builder_create_cached_vtable@@Base+0xd1>
  42a1dc:	nop    DWORD PTR [rax+0x0]
  42a1e0:	cmp    r14,r13
  42a1e3:	je     42a1f5 <flatcc_builder_create_cached_vtable@@Base+0x195>
  42a1e5:	mov    eax,DWORD PTR [rbx+0xc]
  42a1e8:	mov    DWORD PTR [r13+0x0],eax
  42a1ec:	mov    eax,DWORD PTR [r14]
  42a1ef:	mov    DWORD PTR [rbx+0xc],eax
  42a1f2:	mov    DWORD PTR [r14],ebp
  42a1f5:	mov    eax,DWORD PTR [rbx]
  42a1f7:	add    rsp,0x38
  42a1fb:	pop    rbx
  42a1fc:	pop    rbp
  42a1fd:	pop    r12
  42a1ff:	pop    r13
  42a201:	pop    r14
  42a203:	pop    r15
  42a205:	ret    
  42a206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a210:	add    rsp,0x38
  42a214:	pop    rbx
  42a215:	pop    rbp
  42a216:	pop    r12
  42a218:	pop    r13
  42a21a:	pop    r14
  42a21c:	xor    eax,eax
  42a21e:	pop    r15
  42a220:	ret    
  42a221:	nop    DWORD PTR [rax+0x0]
  42a228:	mov    eax,DWORD PTR [rdi+0xe4]
  42a22e:	lea    r13,[rdi+0xa8]
  42a235:	test   eax,eax
  42a237:	jne    42a39f <flatcc_builder_create_cached_vtable@@Base+0x33f>
  42a23d:	cmp    QWORD PTR [rdi+0xc0],0xf
  42a245:	jbe    42a2d0 <flatcc_builder_create_cached_vtable@@Base+0x270>
  42a24b:	cmp    QWORD PTR [r15+0xb8],0x0
  42a253:	je     42a210 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  42a255:	mov    DWORD PTR [r15+0xe4],0x10
  42a260:	mov    rdi,QWORD PTR [r15+0x40]
  42a264:	mov    r8d,0x5
  42a26a:	mov    ecx,0x1
  42a26f:	mov    edx,0x100
  42a274:	mov    rsi,r13
  42a277:	call   QWORD PTR [r15+0x50]
  42a27b:	test   eax,eax
  42a27d:	jne    42a210 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  42a27f:	mov    rcx,QWORD PTR [r15+0xb0]
  42a286:	mov    eax,0x100
  42a28b:	jmp    42a293 <flatcc_builder_create_cached_vtable@@Base+0x233>
  42a28d:	nop    DWORD PTR [rax]
  42a290:	mov    rax,rdx
  42a293:	lea    rdx,[rax+rax*1]
  42a297:	cmp    rdx,rcx
  42a29a:	jbe    42a290 <flatcc_builder_create_cached_vtable@@Base+0x230>
  42a29c:	shr    rax,0x2
  42a2a0:	cmp    rax,0x1
  42a2a4:	jbe    42a30e <flatcc_builder_create_cached_vtable@@Base+0x2ae>
  42a2a6:	mov    esi,0x1
  42a2ab:	nop    DWORD PTR [rax+rax*1+0x0]
  42a2b0:	inc    rbx
  42a2b3:	shlx   rdx,rsi,rbx
  42a2b8:	cmp    rax,rdx
  42a2bb:	ja     42a2b0 <flatcc_builder_create_cached_vtable@@Base+0x250>
  42a2bd:	mov    eax,0x20
  42a2c2:	sub    eax,ebx
  42a2c4:	mov    QWORD PTR [r15+0xd8],rbx
  42a2cb:	jmp    42a09b <flatcc_builder_create_cached_vtable@@Base+0x3b>
  42a2d0:	lea    rsi,[rdi+0xb8]
  42a2d7:	mov    rdi,QWORD PTR [rdi+0x40]
  42a2db:	xor    ecx,ecx
  42a2dd:	mov    r8d,0x6
  42a2e3:	mov    edx,0x10
  42a2e8:	call   QWORD PTR [r15+0x50]
  42a2ec:	test   eax,eax
  42a2ee:	je     42a24b <flatcc_builder_create_cached_vtable@@Base+0x1eb>
  42a2f4:	call   428170 <flatcc_builder_default_alloc@@Base+0x130>
  42a2f9:	nop    DWORD PTR [rax+0x0]
  42a300:	mov    QWORD PTR [rsp+0x20],0x0
  42a309:	jmp    42a135 <flatcc_builder_create_cached_vtable@@Base+0xd5>
  42a30e:	mov    eax,0x20
  42a313:	jmp    42a2c4 <flatcc_builder_create_cached_vtable@@Base+0x264>
  42a315:	mov    rax,QWORD PTR [r15+0x118]
  42a31c:	mov    r14d,DWORD PTR [r15+0xe0]
  42a323:	test   rax,rax
  42a326:	je     42a331 <flatcc_builder_create_cached_vtable@@Base+0x2d1>
  42a328:	lea    edx,[rbx+r14*1]
  42a32c:	cmp    rax,rdx
  42a32f:	jb     42a387 <flatcc_builder_create_cached_vtable@@Base+0x327>
  42a331:	lea    rdx,[r12+r14*1]
  42a335:	cmp    rdx,QWORD PTR [r15+0x80]
  42a33c:	jbe    42a356 <flatcc_builder_create_cached_vtable@@Base+0x2f6>
  42a33e:	mov    rdi,QWORD PTR [r15+0x40]
  42a342:	xor    ecx,ecx
  42a344:	lea    rsi,[r15+0x78]
  42a348:	mov    r8d,0x2
  42a34e:	call   QWORD PTR [r15+0x50]
  42a352:	test   eax,eax
  42a354:	jne    42a2f4 <flatcc_builder_create_cached_vtable@@Base+0x294>
  42a356:	mov    rdi,r14
  42a359:	add    rdi,QWORD PTR [r15+0x78]
  42a35d:	je     42a397 <flatcc_builder_create_cached_vtable@@Base+0x337>
  42a35f:	mov    eax,DWORD PTR [r15+0xe0]
  42a366:	mov    rsi,QWORD PTR [rsp+0x18]
  42a36b:	add    ebx,eax
  42a36d:	mov    DWORD PTR [rbp+0x8],eax
  42a370:	mov    DWORD PTR [r15+0xe0],ebx
  42a377:	mov    rdx,r12
  42a37a:	call   405370 <memcpy@plt>
  42a37f:	mov    eax,DWORD PTR [rbp+0x0]
  42a382:	jmp    42a1f7 <flatcc_builder_create_cached_vtable@@Base+0x197>
  42a387:	mov    rdi,r15
  42a38a:	call   4286c0 <flatcc_builder_flush_vtable_cache@@Base>
  42a38f:	mov    eax,DWORD PTR [rbp+0x0]
  42a392:	jmp    42a1f7 <flatcc_builder_create_cached_vtable@@Base+0x197>
  42a397:	or     eax,0xffffffff
  42a39a:	jmp    42a1f7 <flatcc_builder_create_cached_vtable@@Base+0x197>
  42a39f:	lea    rcx,[rip+0x2070a]        # 44aab0 <fb_schema_table_missing@@Base+0x35f0>
  42a3a6:	mov    edx,0x156
  42a3ab:	lea    rsi,[rip+0x1ff0e]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42a3b2:	lea    rdi,[rip+0x202e4]        # 44a69d <fb_schema_table_missing@@Base+0x31dd>
  42a3b9:	call   405300 <__assert_fail@plt>
  42a3be:	xchg   ax,ax

000000000042a3c0 <flatcc_builder_create_table@@Base>:
  42a3c0:	endbr64 
  42a3c4:	push   rbp
  42a3c5:	push   rbx
  42a3c6:	mov    rbx,rdi
  42a3c9:	sub    rsp,0xb8
  42a3d0:	mov    edi,DWORD PTR [rsp+0xd0]
  42a3d7:	mov    rax,QWORD PTR fs:0x28
  42a3e0:	mov    QWORD PTR [rsp+0xa8],rax
  42a3e8:	xor    eax,eax
  42a3ea:	test   r9d,r9d
  42a3ed:	js     42a5af <flatcc_builder_create_table@@Base+0x1ef>
  42a3f3:	test   dil,0x1
  42a3f7:	je     42a58b <flatcc_builder_create_table@@Base+0x1cb>
  42a3fd:	cmp    cx,0x4
  42a401:	mov    eax,0x4
  42a406:	cmovb  ecx,eax
  42a409:	movzx  r11d,cx
  42a40d:	cmp    WORD PTR [rbx+0xe8],cx
  42a414:	jb     42a560 <flatcc_builder_create_table@@Base+0x1a0>
  42a41a:	mov    eax,DWORD PTR [rbx+0xf0]
  42a420:	lea    ecx,[r11-0x1]
  42a424:	mov    r10d,eax
  42a427:	sub    r10d,edx
  42a42a:	and    r10d,ecx
  42a42d:	mov    ecx,eax
  42a42f:	sub    ecx,edx
  42a431:	lea    r11d,[rcx-0x4]
  42a435:	dec    edi
  42a437:	mov    ecx,r11d
  42a43a:	sub    ecx,edi
  42a43c:	sub    ecx,r10d
  42a43f:	mov    DWORD PTR [rsp+0xc],ecx
  42a443:	test   r9d,r9d
  42a446:	je     42a47d <flatcc_builder_create_table@@Base+0xbd>
  42a448:	mov    edi,r10d
  42a44b:	sub    edi,r11d
  42a44e:	lea    eax,[r9-0x1]
  42a452:	sub    edi,0x4
  42a455:	lea    r9,[r8+rax*2+0x2]
  42a45a:	nop    WORD PTR [rax+rax*1+0x0]
  42a460:	movzx  ecx,WORD PTR [r8]
  42a464:	mov    r11d,edi
  42a467:	sub    r11d,ecx
  42a46a:	add    r8,0x2
  42a46e:	add    DWORD PTR [rsi+rcx*1],r11d
  42a472:	cmp    r9,r8
  42a475:	jne    42a460 <flatcc_builder_create_table@@Base+0xa0>
  42a477:	mov    eax,DWORD PTR [rbx+0xf0]
  42a47d:	lea    rcx,[rsp+0xc]
  42a482:	mov    QWORD PTR [rsp+0x10],0x4
  42a48b:	mov    QWORD PTR [rsp+0x20],rcx
  42a490:	mov    QWORD PTR [rsp+0x28],0x4
  42a499:	mov    DWORD PTR [rsp+0x18],0x1
  42a4a1:	mov    r8d,0x4
  42a4a7:	test   rdx,rdx
  42a4aa:	je     42a4c7 <flatcc_builder_create_table@@Base+0x107>
  42a4ac:	lea    r8,[rdx+0x4]
  42a4b0:	mov    QWORD PTR [rsp+0x10],r8
  42a4b5:	mov    QWORD PTR [rsp+0x30],rsi
  42a4ba:	mov    QWORD PTR [rsp+0x38],rdx
  42a4bf:	mov    DWORD PTR [rsp+0x18],0x2
  42a4c7:	test   r10d,r10d
  42a4ca:	jne    42a530 <flatcc_builder_create_table@@Base+0x170>
  42a4cc:	mov    ebp,eax
  42a4ce:	movabs rdx,0x10000000f
  42a4d8:	sub    ebp,r8d
  42a4db:	cmp    r8,rdx
  42a4de:	ja     42a56c <flatcc_builder_create_table@@Base+0x1ac>
  42a4e4:	cmp    ebp,eax
  42a4e6:	jge    42a56c <flatcc_builder_create_table@@Base+0x1ac>
  42a4ec:	mov    rdi,QWORD PTR [rbx+0x38]
  42a4f0:	mov    edx,DWORD PTR [rsp+0x18]
  42a4f4:	lea    rsi,[rsp+0x20]
  42a4f9:	mov    ecx,ebp
  42a4fb:	call   QWORD PTR [rbx+0x48]
  42a4fe:	test   eax,eax
  42a500:	jne    42a5aa <flatcc_builder_create_table@@Base+0x1ea>
  42a506:	mov    DWORD PTR [rbx+0xf0],ebp
  42a50c:	mov    eax,ebp
  42a50e:	mov    rbx,QWORD PTR [rsp+0xa8]
  42a516:	xor    rbx,QWORD PTR fs:0x28
  42a51f:	jne    42a5ce <flatcc_builder_create_table@@Base+0x20e>
  42a525:	add    rsp,0xb8
  42a52c:	pop    rbx
  42a52d:	pop    rbp
  42a52e:	ret    
  42a52f:	nop
  42a530:	movsxd rcx,DWORD PTR [rsp+0x18]
  42a535:	mov    rsi,0x44ada0
  42a53c:	mov    rdx,rcx
  42a53f:	add    r8,r10
  42a542:	shl    rcx,0x4
  42a546:	inc    edx
  42a548:	mov    QWORD PTR [rsp+0x10],r8
  42a54d:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  42a552:	mov    QWORD PTR [rsp+rcx*1+0x28],r10
  42a557:	mov    DWORD PTR [rsp+0x18],edx
  42a55b:	jmp    42a4cc <flatcc_builder_create_table@@Base+0x10c>
  42a560:	mov    WORD PTR [rbx+0xe8],cx
  42a567:	jmp    42a41a <flatcc_builder_create_table@@Base+0x5a>
  42a56c:	lea    rcx,[rip+0x2077d]        # 44acf0 <fb_schema_table_missing@@Base+0x3830>
  42a573:	mov    edx,0x287
  42a578:	lea    rsi,[rip+0x1fd41]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42a57f:	lea    rdi,[rip+0xddd3]        # 438359 <_IO_stdin_used@@Base+0xa359>
  42a586:	call   405300 <__assert_fail@plt>
  42a58b:	lea    rcx,[rip+0x204fe]        # 44aa90 <fb_schema_table_missing@@Base+0x35d0>
  42a592:	mov    edx,0x4db
  42a597:	lea    rsi,[rip+0x1fd22]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42a59e:	lea    rdi,[rip+0x20119]        # 44a6be <fb_schema_table_missing@@Base+0x31fe>
  42a5a5:	call   405300 <__assert_fail@plt>
  42a5aa:	call   428310 <flatcc_builder_default_alloc@@Base+0x2d0>
  42a5af:	lea    rcx,[rip+0x204da]        # 44aa90 <fb_schema_table_missing@@Base+0x35d0>
  42a5b6:	mov    edx,0x4d5
  42a5bb:	lea    rsi,[rip+0x1fcfe]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42a5c2:	lea    rdi,[rip+0x200e3]        # 44a6ac <fb_schema_table_missing@@Base+0x31ec>
  42a5c9:	call   405300 <__assert_fail@plt>
  42a5ce:	call   4052d0 <__stack_chk_fail@plt>
  42a5d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a5de:	xchg   ax,ax

000000000042a5e0 <flatcc_builder_check_required_field@@Base>:
  42a5e0:	endbr64 
  42a5e4:	mov    rax,QWORD PTR [rdi+0x30]
  42a5e8:	cmp    WORD PTR [rax+0xe],0x3
  42a5ed:	jne    42a60a <flatcc_builder_check_required_field@@Base+0x2a>
  42a5ef:	xor    eax,eax
  42a5f1:	cmp    WORD PTR [rdi+0x10],si
  42a5f5:	jbe    42a609 <flatcc_builder_check_required_field@@Base+0x29>
  42a5f7:	mov    rax,QWORD PTR [rdi+0x8]
  42a5fb:	movzx  edx,si
  42a5fe:	cmp    WORD PTR [rax+rdx*2],0x0
  42a603:	setne  al
  42a606:	movzx  eax,al
  42a609:	ret    
  42a60a:	push   rax
  42a60b:	lea    rcx,[rip+0x2044e]        # 44aa60 <fb_schema_table_missing@@Base+0x35a0>
  42a612:	mov    edx,0x4f8
  42a617:	lea    rsi,[rip+0x1fca2]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42a61e:	lea    rdi,[rip+0x1fee3]        # 44a508 <fb_schema_table_missing@@Base+0x3048>
  42a625:	call   405300 <__assert_fail@plt>
  42a62a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a630 <flatcc_builder_check_union_field@@Base>:
  42a630:	endbr64 
  42a634:	mov    rax,QWORD PTR [rdi+0x30]
  42a638:	cmp    WORD PTR [rax+0xe],0x3
  42a63d:	jne    42a699 <flatcc_builder_check_union_field@@Base+0x69>
  42a63f:	xor    eax,eax
  42a641:	test   si,si
  42a644:	je     42a676 <flatcc_builder_check_union_field@@Base+0x46>
  42a646:	cmp    WORD PTR [rdi+0x10],si
  42a64a:	jbe    42a676 <flatcc_builder_check_union_field@@Base+0x46>
  42a64c:	mov    rcx,QWORD PTR [rdi+0x8]
  42a650:	movzx  edx,si
  42a653:	movzx  eax,WORD PTR [rcx+rdx*2-0x2]
  42a658:	movzx  ecx,WORD PTR [rcx+rdx*2]
  42a65c:	test   ax,ax
  42a65f:	je     42a690 <flatcc_builder_check_union_field@@Base+0x60>
  42a661:	mov    rsi,QWORD PTR [rdi+0x18]
  42a665:	movzx  edx,ax
  42a668:	xor    eax,eax
  42a66a:	test   cx,cx
  42a66d:	sete   al
  42a670:	cmp    BYTE PTR [rsi+rdx*1],0x0
  42a674:	jne    42a680 <flatcc_builder_check_union_field@@Base+0x50>
  42a676:	ret    
  42a677:	nop    WORD PTR [rax+rax*1+0x0]
  42a680:	xor    eax,eax
  42a682:	test   cx,cx
  42a685:	setne  al
  42a688:	ret    
  42a689:	nop    DWORD PTR [rax+0x0]
  42a690:	xor    eax,eax
  42a692:	test   cx,cx
  42a695:	sete   al
  42a698:	ret    
  42a699:	push   rax
  42a69a:	lea    rcx,[rip+0x2037f]        # 44aa20 <fb_schema_table_missing@@Base+0x3560>
  42a6a1:	mov    edx,0x4ff
  42a6a6:	lea    rsi,[rip+0x1fc13]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42a6ad:	lea    rdi,[rip+0x1fe54]        # 44a508 <fb_schema_table_missing@@Base+0x3048>
  42a6b4:	call   405300 <__assert_fail@plt>
  42a6b9:	nop    DWORD PTR [rax+0x0]

000000000042a6c0 <flatcc_builder_check_required@@Base>:
  42a6c0:	endbr64 
  42a6c4:	mov    rax,QWORD PTR [rdi+0x30]
  42a6c8:	cmp    WORD PTR [rax+0xe],0x3
  42a6cd:	jne    42a723 <flatcc_builder_check_required@@Base+0x63>
  42a6cf:	movzx  ecx,WORD PTR [rdi+0x10]
  42a6d3:	xor    eax,eax
  42a6d5:	cmp    ecx,edx
  42a6d7:	jl     42a722 <flatcc_builder_check_required@@Base+0x62>
  42a6d9:	test   edx,edx
  42a6db:	jle    42a713 <flatcc_builder_check_required@@Base+0x53>
  42a6dd:	mov    rcx,QWORD PTR [rdi+0x8]
  42a6e1:	movzx  edi,WORD PTR [rsi]
  42a6e4:	cmp    WORD PTR [rcx+rdi*2],0x0
  42a6e9:	je     42a722 <flatcc_builder_check_required@@Base+0x62>
  42a6eb:	add    rsi,0x2
  42a6ef:	lea    eax,[rdx-0x1]
  42a6f2:	lea    rdx,[rsi+rax*2]
  42a6f6:	jmp    42a70e <flatcc_builder_check_required@@Base+0x4e>
  42a6f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a700:	movzx  eax,WORD PTR [rsi]
  42a703:	add    rsi,0x2
  42a707:	cmp    WORD PTR [rcx+rax*2],0x0
  42a70c:	je     42a720 <flatcc_builder_check_required@@Base+0x60>
  42a70e:	cmp    rsi,rdx
  42a711:	jne    42a700 <flatcc_builder_check_required@@Base+0x40>
  42a713:	mov    eax,0x1
  42a718:	ret    
  42a719:	nop    DWORD PTR [rax+0x0]
  42a720:	xor    eax,eax
  42a722:	ret    
  42a723:	push   rax
  42a724:	lea    rcx,[rip+0x202c5]        # 44a9f0 <fb_schema_table_missing@@Base+0x3530>
  42a72b:	mov    edx,0x511
  42a730:	lea    rsi,[rip+0x1fb89]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42a737:	lea    rdi,[rip+0x1fdca]        # 44a508 <fb_schema_table_missing@@Base+0x3048>
  42a73e:	call   405300 <__assert_fail@plt>
  42a743:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a74e:	xchg   ax,ax

000000000042a750 <flatcc_builder_end_table@@Base>:
  42a750:	endbr64 
  42a754:	push   r13
  42a756:	push   r12
  42a758:	push   rbp
  42a759:	push   rbx
  42a75a:	sub    rsp,0x8
  42a75e:	mov    rax,QWORD PTR [rdi+0x30]
  42a762:	cmp    WORD PTR [rax+0xe],0x3
  42a767:	jne    42a8bd <flatcc_builder_end_table@@Base+0x16d>
  42a76d:	movzx  ebp,WORD PTR [rdi+0x10]
  42a771:	movzx  eax,WORD PTR [rdi+0x20]
  42a775:	lea    ebp,[rbp+rbp*1+0x4]
  42a779:	movzx  ecx,bp
  42a77c:	xor    ecx,DWORD PTR [rdi+0x14]
  42a77f:	mov    rdx,QWORD PTR [rdi+0x8]
  42a783:	imul   ecx,ecx,0x9e3779b1
  42a789:	add    eax,0x4
  42a78c:	mov    WORD PTR [rdx-0x2],ax
  42a790:	movzx  eax,ax
  42a793:	xor    ecx,eax
  42a795:	imul   ecx,ecx,0x9e3779b1
  42a79b:	mov    WORD PTR [rdx-0x4],bp
  42a79f:	lea    r12,[rdx-0x4]
  42a7a3:	mov    DWORD PTR [rdi+0x14],ecx
  42a7a6:	movzx  edx,bp
  42a7a9:	mov    rsi,r12
  42a7ac:	mov    rbx,rdi
  42a7af:	call   42a060 <flatcc_builder_create_cached_vtable@@Base>
  42a7b4:	mov    r13d,eax
  42a7b7:	test   eax,eax
  42a7b9:	jne    42a7d0 <flatcc_builder_end_table@@Base+0x80>
  42a7bb:	add    rsp,0x8
  42a7bf:	pop    rbx
  42a7c0:	xor    ebp,ebp
  42a7c2:	mov    eax,ebp
  42a7c4:	pop    rbp
  42a7c5:	pop    r12
  42a7c7:	pop    r13
  42a7c9:	ret    
  42a7ca:	nop    WORD PTR [rax+rax*1+0x0]
  42a7d0:	movzx  edx,bp
  42a7d3:	xor    esi,esi
  42a7d5:	mov    rdi,r12
  42a7d8:	call   405310 <memset@plt>
  42a7dd:	mov    rax,QWORD PTR [rbx+0x30]
  42a7e1:	sub    rsp,0x8
  42a7e5:	mov    r8d,DWORD PTR [rax+0x14]
  42a7e9:	mov    r9,QWORD PTR [rbx]
  42a7ec:	add    r8,QWORD PTR [rbx+0x88]
  42a7f3:	mov    edx,DWORD PTR [rbx+0x20]
  42a7f6:	movzx  ecx,WORD PTR [rbx+0xea]
  42a7fd:	mov    rsi,QWORD PTR [rbx+0x18]
  42a801:	push   r13
  42a803:	sub    r9,r8
  42a806:	sar    r9,1
  42a809:	mov    rdi,rbx
  42a80c:	call   42a3c0 <flatcc_builder_create_table@@Base>
  42a811:	mov    ebp,eax
  42a813:	pop    rax
  42a814:	pop    rdx
  42a815:	test   ebp,ebp
  42a817:	je     42a7bb <flatcc_builder_end_table@@Base+0x6b>
  42a819:	mov    rax,QWORD PTR [rbx+0x30]
  42a81d:	mov    rdi,QWORD PTR [rbx+0x18]
  42a821:	mov    edx,DWORD PTR [rax+0x18]
  42a824:	xor    esi,esi
  42a826:	mov    DWORD PTR [rbx+0x14],edx
  42a829:	movzx  edx,WORD PTR [rax+0x1c]
  42a82d:	mov    WORD PTR [rbx+0x10],dx
  42a831:	mov    edx,DWORD PTR [rax+0x10]
  42a834:	mov    eax,DWORD PTR [rax+0x14]
  42a837:	add    rdx,QWORD PTR [rbx+0x58]
  42a83b:	add    rax,QWORD PTR [rbx+0x88]
  42a842:	mov    QWORD PTR [rbx+0x8],rdx
  42a846:	mov    QWORD PTR [rbx],rax
  42a849:	mov    edx,DWORD PTR [rbx+0x20]
  42a84c:	call   405310 <memset@plt>
  42a851:	mov    rax,QWORD PTR [rbx+0x30]
  42a855:	mov    edi,DWORD PTR [rbx+0x70]
  42a858:	mov    edx,DWORD PTR [rax+0x8]
  42a85b:	mov    esi,DWORD PTR [rax]
  42a85d:	mov    ecx,DWORD PTR [rax+0x4]
  42a860:	mov    DWORD PTR [rbx+0x20],edx
  42a863:	mov    rdx,rsi
  42a866:	sub    edi,edx
  42a868:	mov    DWORD PTR [rbx+0x28],esi
  42a86b:	mov    edx,edi
  42a86d:	add    rsi,QWORD PTR [rbx+0x68]
  42a871:	cmp    ecx,edi
  42a873:	cmovb  edx,ecx
  42a876:	mov    QWORD PTR [rbx+0x18],rsi
  42a87a:	mov    DWORD PTR [rbx+0x24],edx
  42a87d:	movzx  edx,WORD PTR [rbx+0xea]
  42a884:	mov    DWORD PTR [rax+0x4],ecx
  42a887:	cmp    dx,WORD PTR [rbx+0xe8]
  42a88e:	jbe    42a897 <flatcc_builder_end_table@@Base+0x147>
  42a890:	mov    WORD PTR [rbx+0xe8],dx
  42a897:	movzx  edx,WORD PTR [rax+0xc]
  42a89b:	dec    DWORD PTR [rbx+0x104]
  42a8a1:	sub    rax,0x24
  42a8a5:	mov    QWORD PTR [rbx+0x30],rax
  42a8a9:	mov    WORD PTR [rbx+0xea],dx
  42a8b0:	add    rsp,0x8
  42a8b4:	mov    eax,ebp
  42a8b6:	pop    rbx
  42a8b7:	pop    rbp
  42a8b8:	pop    r12
  42a8ba:	pop    r13
  42a8bc:	ret    
  42a8bd:	lea    rcx,[rip+0x2010c]        # 44a9d0 <fb_schema_table_missing@@Base+0x3510>
  42a8c4:	mov    edx,0x525
  42a8c9:	lea    rsi,[rip+0x1f9f0]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42a8d0:	lea    rdi,[rip+0x1fc31]        # 44a508 <fb_schema_table_missing@@Base+0x3048>
  42a8d7:	call   405300 <__assert_fail@plt>
  42a8dc:	nop    DWORD PTR [rax+0x0]

000000000042a8e0 <flatcc_builder_create_vector@@Base>:
  42a8e0:	endbr64 
  42a8e4:	push   rbp
  42a8e5:	push   rbx
  42a8e6:	sub    rsp,0xb8
  42a8ed:	mov    rax,QWORD PTR fs:0x28
  42a8f6:	mov    QWORD PTR [rsp+0xa8],rax
  42a8fe:	xor    eax,eax
  42a900:	cmp    rdx,r9
  42a903:	ja     42aa44 <flatcc_builder_create_vector@@Base+0x164>
  42a909:	cmp    r8w,0x4
  42a90e:	mov    eax,0x4
  42a913:	cmovb  r8d,eax
  42a917:	mov    rbx,rdi
  42a91a:	movzx  edi,r8w
  42a91e:	cmp    r8w,WORD PTR [rbx+0xe8]
  42a926:	jbe    42a930 <flatcc_builder_create_vector@@Base+0x50>
  42a928:	mov    WORD PTR [rbx+0xe8],r8w
  42a930:	imul   ecx,edx
  42a933:	mov    DWORD PTR [rsp+0xc],edx
  42a937:	mov    edx,DWORD PTR [rbx+0xf0]
  42a93d:	dec    edi
  42a93f:	mov    eax,edx
  42a941:	sub    eax,ecx
  42a943:	and    eax,edi
  42a945:	lea    rdi,[rsp+0xc]
  42a94a:	mov    QWORD PTR [rsp+0x10],0x4
  42a953:	mov    QWORD PTR [rsp+0x20],rdi
  42a958:	mov    QWORD PTR [rsp+0x28],0x4
  42a961:	mov    DWORD PTR [rsp+0x18],0x1
  42a969:	mov    r8d,0x4
  42a96f:	test   ecx,ecx
  42a971:	je     42a98e <flatcc_builder_create_vector@@Base+0xae>
  42a973:	lea    r8,[rcx+0x4]
  42a977:	mov    QWORD PTR [rsp+0x10],r8
  42a97c:	mov    QWORD PTR [rsp+0x30],rsi
  42a981:	mov    QWORD PTR [rsp+0x38],rcx
  42a986:	mov    DWORD PTR [rsp+0x18],0x2
  42a98e:	test   eax,eax
  42a990:	jne    42a9f0 <flatcc_builder_create_vector@@Base+0x110>
  42a992:	mov    ebp,edx
  42a994:	movabs rax,0x10000000f
  42a99e:	sub    ebp,r8d
  42a9a1:	cmp    r8,rax
  42a9a4:	ja     42aa20 <flatcc_builder_create_vector@@Base+0x140>
  42a9a6:	cmp    edx,ebp
  42a9a8:	jle    42aa20 <flatcc_builder_create_vector@@Base+0x140>
  42a9aa:	mov    rdi,QWORD PTR [rbx+0x38]
  42a9ae:	mov    edx,DWORD PTR [rsp+0x18]
  42a9b2:	lea    rsi,[rsp+0x20]
  42a9b7:	mov    ecx,ebp
  42a9b9:	call   QWORD PTR [rbx+0x48]
  42a9bc:	test   eax,eax
  42a9be:	jne    42aa3f <flatcc_builder_create_vector@@Base+0x15f>
  42a9c0:	mov    DWORD PTR [rbx+0xf0],ebp
  42a9c6:	mov    eax,ebp
  42a9c8:	mov    rbx,QWORD PTR [rsp+0xa8]
  42a9d0:	xor    rbx,QWORD PTR fs:0x28
  42a9d9:	jne    42aa63 <flatcc_builder_create_vector@@Base+0x183>
  42a9df:	add    rsp,0xb8
  42a9e6:	pop    rbx
  42a9e7:	pop    rbp
  42a9e8:	ret    
  42a9e9:	nop    DWORD PTR [rax+0x0]
  42a9f0:	movsxd rsi,DWORD PTR [rsp+0x18]
  42a9f5:	mov    rdi,0x44ada0
  42a9fc:	mov    rcx,rsi
  42a9ff:	add    r8,rax
  42aa02:	shl    rsi,0x4
  42aa06:	inc    ecx
  42aa08:	mov    QWORD PTR [rsp+0x10],r8
  42aa0d:	mov    QWORD PTR [rsp+rsi*1+0x20],rdi
  42aa12:	mov    QWORD PTR [rsp+rsi*1+0x28],rax
  42aa17:	mov    DWORD PTR [rsp+0x18],ecx
  42aa1b:	jmp    42a992 <flatcc_builder_create_vector@@Base+0xb2>
  42aa20:	lea    rcx,[rip+0x202c9]        # 44acf0 <fb_schema_table_missing@@Base+0x3830>
  42aa27:	mov    edx,0x287
  42aa2c:	lea    rsi,[rip+0x1f88d]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42aa33:	lea    rdi,[rip+0xd91f]        # 438359 <_IO_stdin_used@@Base+0xa359>
  42aa3a:	call   405300 <__assert_fail@plt>
  42aa3f:	call   428310 <flatcc_builder_default_alloc@@Base+0x2d0>
  42aa44:	lea    rcx,[rip+0x1ff65]        # 44a9b0 <fb_schema_table_missing@@Base+0x34f0>
  42aa4b:	mov    edx,0x555
  42aa50:	lea    rsi,[rip+0x1f869]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42aa57:	lea    rdi,[rip+0x1fc6b]        # 44a6c9 <fb_schema_table_missing@@Base+0x3209>
  42aa5e:	call   405300 <__assert_fail@plt>
  42aa63:	call   4052d0 <__stack_chk_fail@plt>
  42aa68:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042aa70 <flatcc_builder_end_vector@@Base>:
  42aa70:	endbr64 
  42aa74:	push   rbp
  42aa75:	push   rbx
  42aa76:	sub    rsp,0x8
  42aa7a:	mov    rax,QWORD PTR [rdi+0x30]
  42aa7e:	cmp    WORD PTR [rax+0xe],0x4
  42aa83:	jne    42ab36 <flatcc_builder_end_vector@@Base+0xc6>
  42aa89:	mov    ecx,DWORD PTR [rax+0x10]
  42aa8c:	mov    edx,DWORD PTR [rax+0x14]
  42aa8f:	mov    rsi,QWORD PTR [rdi+0x18]
  42aa93:	mov    r9d,DWORD PTR [rax+0x18]
  42aa97:	movzx  r8d,WORD PTR [rdi+0xea]
  42aa9f:	mov    rbx,rdi
  42aaa2:	call   42a8e0 <flatcc_builder_create_vector@@Base>
  42aaa7:	mov    ebp,eax
  42aaa9:	test   eax,eax
  42aaab:	jne    42aac0 <flatcc_builder_end_vector@@Base+0x50>
  42aaad:	add    rsp,0x8
  42aab1:	pop    rbx
  42aab2:	mov    eax,ebp
  42aab4:	pop    rbp
  42aab5:	ret    
  42aab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aac0:	mov    edx,DWORD PTR [rbx+0x20]
  42aac3:	mov    rdi,QWORD PTR [rbx+0x18]
  42aac7:	xor    esi,esi
  42aac9:	call   405310 <memset@plt>
  42aace:	mov    rax,QWORD PTR [rbx+0x30]
  42aad2:	mov    edi,DWORD PTR [rbx+0x70]
  42aad5:	mov    edx,DWORD PTR [rax+0x8]
  42aad8:	mov    esi,DWORD PTR [rax]
  42aada:	mov    ecx,DWORD PTR [rax+0x4]
  42aadd:	mov    DWORD PTR [rbx+0x20],edx
  42aae0:	mov    rdx,rsi
  42aae3:	sub    edi,edx
  42aae5:	mov    DWORD PTR [rbx+0x28],esi
  42aae8:	mov    edx,edi
  42aaea:	add    rsi,QWORD PTR [rbx+0x68]
  42aaee:	cmp    ecx,edi
  42aaf0:	cmovb  edx,ecx
  42aaf3:	mov    QWORD PTR [rbx+0x18],rsi
  42aaf7:	mov    DWORD PTR [rbx+0x24],edx
  42aafa:	movzx  edx,WORD PTR [rbx+0xea]
  42ab01:	mov    DWORD PTR [rax+0x4],ecx
  42ab04:	cmp    dx,WORD PTR [rbx+0xe8]
  42ab0b:	jbe    42ab14 <flatcc_builder_end_vector@@Base+0xa4>
  42ab0d:	mov    WORD PTR [rbx+0xe8],dx
  42ab14:	movzx  edx,WORD PTR [rax+0xc]
  42ab18:	dec    DWORD PTR [rbx+0x104]
  42ab1e:	sub    rax,0x24
  42ab22:	mov    QWORD PTR [rbx+0x30],rax
  42ab26:	mov    WORD PTR [rbx+0xea],dx
  42ab2d:	add    rsp,0x8
  42ab31:	mov    eax,ebp
  42ab33:	pop    rbx
  42ab34:	pop    rbp
  42ab35:	ret    
  42ab36:	lea    rcx,[rip+0x1fe53]        # 44a990 <fb_schema_table_missing@@Base+0x34d0>
  42ab3d:	mov    edx,0x578
  42ab42:	lea    rsi,[rip+0x1f777]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42ab49:	lea    rdi,[rip+0x1f850]        # 44a3a0 <fb_schema_table_missing@@Base+0x2ee0>
  42ab50:	call   405300 <__assert_fail@plt>
  42ab55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042ab60 <flatcc_builder_vector_count@@Base>:
  42ab60:	endbr64 
  42ab64:	mov    rax,QWORD PTR [rdi+0x30]
  42ab68:	mov    eax,DWORD PTR [rax+0x14]
  42ab6b:	ret    
  42ab6c:	nop    DWORD PTR [rax+0x0]

000000000042ab70 <flatcc_builder_vector_edit@@Base>:
  42ab70:	endbr64 
  42ab74:	mov    rax,QWORD PTR [rdi+0x18]
  42ab78:	ret    
  42ab79:	nop    DWORD PTR [rax+0x0]

000000000042ab80 <flatcc_builder_create_offset_vector_direct@@Base>:
  42ab80:	endbr64 
  42ab84:	xor    ecx,ecx
  42ab86:	jmp    428490 <flatcc_builder_default_alloc@@Base+0x450>
  42ab8b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ab90 <flatcc_builder_end_offset_vector@@Base>:
  42ab90:	endbr64 
  42ab94:	push   rbp
  42ab95:	push   rbx
  42ab96:	sub    rsp,0x8
  42ab9a:	mov    rax,QWORD PTR [rdi+0x30]
  42ab9e:	cmp    WORD PTR [rax+0xe],0x5
  42aba3:	jne    42ac46 <flatcc_builder_end_offset_vector@@Base+0xb6>
  42aba9:	mov    edx,DWORD PTR [rax+0x14]
  42abac:	mov    rsi,QWORD PTR [rdi+0x18]
  42abb0:	mov    rbx,rdi
  42abb3:	call   42ab80 <flatcc_builder_create_offset_vector_direct@@Base>
  42abb8:	mov    ebp,eax
  42abba:	test   eax,eax
  42abbc:	jne    42abd0 <flatcc_builder_end_offset_vector@@Base+0x40>
  42abbe:	add    rsp,0x8
  42abc2:	pop    rbx
  42abc3:	mov    eax,ebp
  42abc5:	pop    rbp
  42abc6:	ret    
  42abc7:	nop    WORD PTR [rax+rax*1+0x0]
  42abd0:	mov    edx,DWORD PTR [rbx+0x20]
  42abd3:	mov    rdi,QWORD PTR [rbx+0x18]
  42abd7:	xor    esi,esi
  42abd9:	call   405310 <memset@plt>
  42abde:	mov    rax,QWORD PTR [rbx+0x30]
  42abe2:	mov    edi,DWORD PTR [rbx+0x70]
  42abe5:	mov    edx,DWORD PTR [rax+0x8]
  42abe8:	mov    esi,DWORD PTR [rax]
  42abea:	mov    ecx,DWORD PTR [rax+0x4]
  42abed:	mov    DWORD PTR [rbx+0x20],edx
  42abf0:	mov    rdx,rsi
  42abf3:	sub    edi,edx
  42abf5:	mov    DWORD PTR [rbx+0x28],esi
  42abf8:	mov    edx,edi
  42abfa:	add    rsi,QWORD PTR [rbx+0x68]
  42abfe:	cmp    ecx,edi
  42ac00:	cmovb  edx,ecx
  42ac03:	mov    QWORD PTR [rbx+0x18],rsi
  42ac07:	mov    DWORD PTR [rbx+0x24],edx
  42ac0a:	movzx  edx,WORD PTR [rbx+0xea]
  42ac11:	mov    DWORD PTR [rax+0x4],ecx
  42ac14:	cmp    dx,WORD PTR [rbx+0xe8]
  42ac1b:	jbe    42ac24 <flatcc_builder_end_offset_vector@@Base+0x94>
  42ac1d:	mov    WORD PTR [rbx+0xe8],dx
  42ac24:	movzx  edx,WORD PTR [rax+0xc]
  42ac28:	dec    DWORD PTR [rbx+0x104]
  42ac2e:	sub    rax,0x24
  42ac32:	mov    QWORD PTR [rbx+0x30],rax
  42ac36:	mov    WORD PTR [rbx+0xea],dx
  42ac3d:	add    rsp,0x8
  42ac41:	mov    eax,ebp
  42ac43:	pop    rbx
  42ac44:	pop    rbp
  42ac45:	ret    
  42ac46:	lea    rcx,[rip+0x1fcf3]        # 44a940 <fb_schema_table_missing@@Base+0x3480>
  42ac4d:	mov    edx,0x5c8
  42ac52:	lea    rsi,[rip+0x1f667]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42ac59:	lea    rdi,[rip+0x1f7b0]        # 44a410 <fb_schema_table_missing@@Base+0x2f50>
  42ac60:	call   405300 <__assert_fail@plt>
  42ac65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042ac70 <flatcc_builder_create_offset_vector@@Base>:
  42ac70:	endbr64 
  42ac74:	push   r12
  42ac76:	mov    r12,rsi
  42ac79:	push   rbp
  42ac7a:	mov    rbp,rdx
  42ac7d:	push   rbx
  42ac7e:	mov    rbx,rdi
  42ac81:	call   429c30 <flatcc_builder_start_offset_vector@@Base>
  42ac86:	test   eax,eax
  42ac88:	je     42ac98 <flatcc_builder_create_offset_vector@@Base+0x28>
  42ac8a:	pop    rbx
  42ac8b:	pop    rbp
  42ac8c:	xor    eax,eax
  42ac8e:	pop    r12
  42ac90:	ret    
  42ac91:	nop    DWORD PTR [rax+0x0]
  42ac98:	mov    rsi,rbp
  42ac9b:	mov    rdi,rbx
  42ac9e:	call   4296e0 <flatcc_builder_extend_offset_vector@@Base>
  42aca3:	test   rax,rax
  42aca6:	je     42ac8a <flatcc_builder_create_offset_vector@@Base+0x1a>
  42aca8:	lea    rdx,[rbp*4+0x0]
  42acb0:	mov    rsi,r12
  42acb3:	mov    rdi,rax
  42acb6:	call   405370 <memcpy@plt>
  42acbb:	mov    rdi,rbx
  42acbe:	pop    rbx
  42acbf:	pop    rbp
  42acc0:	pop    r12
  42acc2:	jmp    42ab90 <flatcc_builder_end_offset_vector@@Base>
  42acc7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042acd0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  42acd0:	endbr64 
  42acd4:	push   rbp
  42acd5:	push   rbx
  42acd6:	sub    rsp,0x8
  42acda:	mov    rax,QWORD PTR [rdi+0x30]
  42acde:	cmp    WORD PTR [rax+0xe],0x5
  42ace3:	jne    42ad86 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb6>
  42ace9:	mov    rcx,rsi
  42acec:	mov    edx,DWORD PTR [rax+0x14]
  42acef:	mov    rsi,QWORD PTR [rdi+0x18]
  42acf3:	mov    rbx,rdi
  42acf6:	call   428490 <flatcc_builder_default_alloc@@Base+0x450>
  42acfb:	mov    ebp,eax
  42acfd:	test   eax,eax
  42acff:	jne    42ad10 <flatcc_builder_end_offset_vector_for_unions@@Base+0x40>
  42ad01:	add    rsp,0x8
  42ad05:	pop    rbx
  42ad06:	mov    eax,ebp
  42ad08:	pop    rbp
  42ad09:	ret    
  42ad0a:	nop    WORD PTR [rax+rax*1+0x0]
  42ad10:	mov    edx,DWORD PTR [rbx+0x20]
  42ad13:	mov    rdi,QWORD PTR [rbx+0x18]
  42ad17:	xor    esi,esi
  42ad19:	call   405310 <memset@plt>
  42ad1e:	mov    rax,QWORD PTR [rbx+0x30]
  42ad22:	mov    edi,DWORD PTR [rbx+0x70]
  42ad25:	mov    edx,DWORD PTR [rax+0x8]
  42ad28:	mov    esi,DWORD PTR [rax]
  42ad2a:	mov    ecx,DWORD PTR [rax+0x4]
  42ad2d:	mov    DWORD PTR [rbx+0x20],edx
  42ad30:	mov    rdx,rsi
  42ad33:	sub    edi,edx
  42ad35:	mov    DWORD PTR [rbx+0x28],esi
  42ad38:	mov    edx,edi
  42ad3a:	add    rsi,QWORD PTR [rbx+0x68]
  42ad3e:	cmp    ecx,edi
  42ad40:	cmovb  edx,ecx
  42ad43:	mov    QWORD PTR [rbx+0x18],rsi
  42ad47:	mov    DWORD PTR [rbx+0x24],edx
  42ad4a:	movzx  edx,WORD PTR [rbx+0xea]
  42ad51:	mov    DWORD PTR [rax+0x4],ecx
  42ad54:	cmp    dx,WORD PTR [rbx+0xe8]
  42ad5b:	jbe    42ad64 <flatcc_builder_end_offset_vector_for_unions@@Base+0x94>
  42ad5d:	mov    WORD PTR [rbx+0xe8],dx
  42ad64:	movzx  edx,WORD PTR [rax+0xc]
  42ad68:	dec    DWORD PTR [rbx+0x104]
  42ad6e:	sub    rax,0x24
  42ad72:	mov    QWORD PTR [rbx+0x30],rax
  42ad76:	mov    WORD PTR [rbx+0xea],dx
  42ad7d:	add    rsp,0x8
  42ad81:	mov    eax,ebp
  42ad83:	pop    rbx
  42ad84:	pop    rbp
  42ad85:	ret    
  42ad86:	lea    rcx,[rip+0x1fb73]        # 44a900 <fb_schema_table_missing@@Base+0x3440>
  42ad8d:	mov    edx,0x5d5
  42ad92:	lea    rsi,[rip+0x1f527]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42ad99:	lea    rdi,[rip+0x1f670]        # 44a410 <fb_schema_table_missing@@Base+0x2f50>
  42ada0:	call   405300 <__assert_fail@plt>
  42ada5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042adb0 <flatcc_builder_offset_vector_edit@@Base>:
  42adb0:	endbr64 
  42adb4:	mov    rax,QWORD PTR [rdi+0x18]
  42adb8:	ret    
  42adb9:	nop    DWORD PTR [rax+0x0]

000000000042adc0 <flatcc_builder_offset_vector_count@@Base>:
  42adc0:	endbr64 
  42adc4:	mov    rax,QWORD PTR [rdi+0x30]
  42adc8:	mov    eax,DWORD PTR [rax+0x14]
  42adcb:	ret    
  42adcc:	nop    DWORD PTR [rax+0x0]

000000000042add0 <flatcc_builder_create_union_vector_direct@@Base>:
  42add0:	endbr64 
  42add4:	push   r13
  42add6:	mov    r13,rcx
  42add9:	push   r12
  42addb:	mov    r12,rsi
  42adde:	mov    rcx,r12
  42ade1:	push   rbp
  42ade2:	mov    rsi,rdx
  42ade5:	mov    rdx,r13
  42ade8:	push   rbx
  42ade9:	mov    rbp,rdi
  42adec:	sub    rsp,0x8
  42adf0:	call   428490 <flatcc_builder_default_alloc@@Base+0x450>
  42adf5:	test   eax,eax
  42adf7:	jne    42ae10 <flatcc_builder_create_union_vector_direct@@Base+0x40>
  42adf9:	add    rsp,0x8
  42adfd:	pop    rbx
  42adfe:	pop    rbp
  42adff:	pop    r12
  42ae01:	xor    eax,eax
  42ae03:	pop    r13
  42ae05:	ret    
  42ae06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ae10:	mov    rdx,r13
  42ae13:	mov    rsi,r12
  42ae16:	mov    rdi,rbp
  42ae19:	mov    r9d,0xffffffff
  42ae1f:	mov    r8d,0x1
  42ae25:	mov    ecx,0x1
  42ae2a:	mov    ebx,eax
  42ae2c:	call   42a8e0 <flatcc_builder_create_vector@@Base>
  42ae31:	mov    edx,eax
  42ae33:	mov    rsi,rbx
  42ae36:	shl    rsi,0x20
  42ae3a:	mov    rax,rdx
  42ae3d:	or     rax,rsi
  42ae40:	test   edx,edx
  42ae42:	mov    rdx,rax
  42ae45:	mov    rax,rsi
  42ae48:	cmovne rax,rdx
  42ae4c:	add    rsp,0x8
  42ae50:	pop    rbx
  42ae51:	pop    rbp
  42ae52:	pop    r12
  42ae54:	pop    r13
  42ae56:	ret    
  42ae57:	nop    WORD PTR [rax+rax*1+0x0]

000000000042ae60 <flatcc_builder_create_union_vector@@Base>:
  42ae60:	endbr64 
  42ae64:	push   r13
  42ae66:	push   r12
  42ae68:	mov    r12,rdx
  42ae6b:	push   rbp
  42ae6c:	mov    rbp,rsi
  42ae6f:	push   rbx
  42ae70:	mov    rbx,rdi
  42ae73:	sub    rsp,0x8
  42ae77:	call   429c30 <flatcc_builder_start_offset_vector@@Base>
  42ae7c:	test   eax,eax
  42ae7e:	je     42ae90 <flatcc_builder_create_union_vector@@Base+0x30>
  42ae80:	add    rsp,0x8
  42ae84:	pop    rbx
  42ae85:	pop    rbp
  42ae86:	pop    r12
  42ae88:	xor    eax,eax
  42ae8a:	pop    r13
  42ae8c:	ret    
  42ae8d:	nop    DWORD PTR [rax]
  42ae90:	mov    rsi,r12
  42ae93:	mov    rdi,rbx
  42ae96:	call   4296e0 <flatcc_builder_extend_offset_vector@@Base>
  42ae9b:	test   rax,rax
  42ae9e:	je     42ae80 <flatcc_builder_create_union_vector@@Base+0x20>
  42aea0:	mov    r13d,DWORD PTR [rbx+0x20]
  42aea4:	mov    rax,r13
  42aea7:	add    eax,r12d
  42aeaa:	mov    DWORD PTR [rbx+0x20],eax
  42aead:	cmp    eax,DWORD PTR [rbx+0x24]
  42aeb0:	jae    42af80 <flatcc_builder_create_union_vector@@Base+0x120>
  42aeb6:	add    r13,QWORD PTR [rbx+0x18]
  42aeba:	je     42ae80 <flatcc_builder_create_union_vector@@Base+0x20>
  42aebc:	mov    rdi,rbx
  42aebf:	call   42adb0 <flatcc_builder_offset_vector_edit@@Base>
  42aec4:	test   r12,r12
  42aec7:	je     42aee9 <flatcc_builder_create_union_vector@@Base+0x89>
  42aec9:	xor    edi,edi
  42aecb:	nop    DWORD PTR [rax+rax*1+0x0]
  42aed0:	movzx  ecx,BYTE PTR [rbp+rdi*8+0x0]
  42aed5:	mov    BYTE PTR [r13+rdi*1+0x0],cl
  42aeda:	mov    ecx,DWORD PTR [rbp+rdi*8+0x4]
  42aede:	mov    DWORD PTR [rax+rdi*4],ecx
  42aee1:	inc    rdi
  42aee4:	cmp    r12,rdi
  42aee7:	jne    42aed0 <flatcc_builder_create_union_vector@@Base+0x70>
  42aee9:	mov    rcx,r12
  42aeec:	mov    rdx,rax
  42aeef:	mov    rsi,r13
  42aef2:	mov    rdi,rbx
  42aef5:	call   42add0 <flatcc_builder_create_union_vector_direct@@Base>
  42aefa:	mov    edx,DWORD PTR [rbx+0x20]
  42aefd:	mov    rdi,QWORD PTR [rbx+0x18]
  42af01:	xor    esi,esi
  42af03:	mov    rbp,rax
  42af06:	call   405310 <memset@plt>
  42af0b:	mov    rax,QWORD PTR [rbx+0x30]
  42af0f:	mov    edx,DWORD PTR [rax+0x8]
  42af12:	mov    esi,DWORD PTR [rax]
  42af14:	mov    DWORD PTR [rbx+0x20],edx
  42af17:	mov    DWORD PTR [rbx+0x28],esi
  42af1a:	mov    rdx,rsi
  42af1d:	add    rsi,QWORD PTR [rbx+0x68]
  42af21:	mov    ecx,DWORD PTR [rax+0x4]
  42af24:	mov    QWORD PTR [rbx+0x18],rsi
  42af28:	mov    esi,DWORD PTR [rbx+0x70]
  42af2b:	sub    esi,edx
  42af2d:	mov    edx,esi
  42af2f:	cmp    ecx,esi
  42af31:	cmovb  edx,ecx
  42af34:	mov    DWORD PTR [rbx+0x24],edx
  42af37:	movzx  edx,WORD PTR [rbx+0xea]
  42af3e:	mov    DWORD PTR [rax+0x4],ecx
  42af41:	cmp    dx,WORD PTR [rbx+0xe8]
  42af48:	jbe    42af51 <flatcc_builder_create_union_vector@@Base+0xf1>
  42af4a:	mov    WORD PTR [rbx+0xe8],dx
  42af51:	movzx  edx,WORD PTR [rax+0xc]
  42af55:	sub    rax,0x24
  42af59:	mov    QWORD PTR [rbx+0x30],rax
  42af5d:	mov    WORD PTR [rbx+0xea],dx
  42af64:	dec    DWORD PTR [rbx+0x104]
  42af6a:	add    rsp,0x8
  42af6e:	pop    rbx
  42af6f:	mov    rax,rbp
  42af72:	pop    rbp
  42af73:	pop    r12
  42af75:	pop    r13
  42af77:	ret    
  42af78:	nop    DWORD PTR [rax+rax*1+0x0]
  42af80:	lea    esi,[rax+0x1]
  42af83:	mov    edx,0xfffffffc
  42af88:	mov    rdi,rbx
  42af8b:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42af90:	test   eax,eax
  42af92:	je     42aeb6 <flatcc_builder_create_union_vector@@Base+0x56>
  42af98:	jmp    42ae80 <flatcc_builder_create_union_vector@@Base+0x20>
  42af9d:	nop    DWORD PTR [rax]

000000000042afa0 <flatcc_builder_start_union_vector@@Base>:
  42afa0:	endbr64 
  42afa4:	push   rbx
  42afa5:	mov    esi,0x4
  42afaa:	mov    rbx,rdi
  42afad:	call   428370 <flatcc_builder_default_alloc@@Base+0x330>
  42afb2:	test   eax,eax
  42afb4:	jne    42aff0 <flatcc_builder_start_union_vector@@Base+0x50>
  42afb6:	mov    rcx,QWORD PTR [rbx+0x30]
  42afba:	xor    edx,edx
  42afbc:	mov    QWORD PTR [rcx+0xe],0x80007
  42afc4:	mov    WORD PTR [rcx+0x16],dx
  42afc8:	mov    edx,DWORD PTR [rbx+0x28]
  42afcb:	mov    rsi,rdx
  42afce:	add    rdx,QWORD PTR [rbx+0x68]
  42afd2:	mov    QWORD PTR [rbx+0x18],rdx
  42afd6:	mov    edx,DWORD PTR [rbx+0x70]
  42afd9:	sub    edx,esi
  42afdb:	mov    esi,0xfffffffc
  42afe0:	cmp    edx,esi
  42afe2:	cmova  edx,esi
  42afe5:	mov    DWORD PTR [rbx+0x24],edx
  42afe8:	mov    DWORD PTR [rcx+0x4],esi
  42afeb:	pop    rbx
  42afec:	ret    
  42afed:	nop    DWORD PTR [rax]
  42aff0:	mov    eax,0xffffffff
  42aff5:	pop    rbx
  42aff6:	ret    
  42aff7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b000 <flatcc_builder_union_vector_edit@@Base>:
  42b000:	endbr64 
  42b004:	mov    rax,QWORD PTR [rdi+0x18]
  42b008:	ret    
  42b009:	nop    DWORD PTR [rax+0x0]

000000000042b010 <flatcc_builder_union_vector_count@@Base>:
  42b010:	endbr64 
  42b014:	mov    rax,QWORD PTR [rdi+0x30]
  42b018:	mov    eax,DWORD PTR [rax+0x14]
  42b01b:	ret    
  42b01c:	nop    DWORD PTR [rax+0x0]

000000000042b020 <flatcc_builder_end_union_vector@@Base>:
  42b020:	endbr64 
  42b024:	push   r13
  42b026:	push   r12
  42b028:	push   rbp
  42b029:	push   rbx
  42b02a:	sub    rsp,0x8
  42b02e:	mov    rax,QWORD PTR [rdi+0x30]
  42b032:	cmp    WORD PTR [rax+0xe],0x7
  42b037:	jne    42b15d <flatcc_builder_end_union_vector@@Base+0x13d>
  42b03d:	mov    rbx,rdi
  42b040:	call   42b010 <flatcc_builder_union_vector_count@@Base>
  42b045:	mov    ebp,DWORD PTR [rbx+0x20]
  42b048:	mov    r12,rax
  42b04b:	lea    eax,[rax+rax*4]
  42b04e:	add    eax,ebp
  42b050:	mov    DWORD PTR [rbx+0x20],eax
  42b053:	cmp    eax,DWORD PTR [rbx+0x24]
  42b056:	jae    42b138 <flatcc_builder_end_union_vector@@Base+0x118>
  42b05c:	add    rbp,QWORD PTR [rbx+0x18]
  42b060:	je     42b150 <flatcc_builder_end_union_vector@@Base+0x130>
  42b066:	mov    rdi,rbx
  42b069:	lea    r13,[rbp+r12*4+0x0]
  42b06e:	call   42b000 <flatcc_builder_union_vector_edit@@Base>
  42b073:	test   r12,r12
  42b076:	je     42b09c <flatcc_builder_end_union_vector@@Base+0x7c>
  42b078:	xor    edi,edi
  42b07a:	nop    WORD PTR [rax+rax*1+0x0]
  42b080:	movzx  r8d,BYTE PTR [rax+rdi*8]
  42b085:	mov    BYTE PTR [r13+rdi*1+0x0],r8b
  42b08a:	mov    r8d,DWORD PTR [rax+rdi*8+0x4]
  42b08f:	mov    DWORD PTR [rbp+rdi*4+0x0],r8d
  42b094:	inc    rdi
  42b097:	cmp    r12,rdi
  42b09a:	jne    42b080 <flatcc_builder_end_union_vector@@Base+0x60>
  42b09c:	mov    rcx,r12
  42b09f:	mov    rdx,rbp
  42b0a2:	mov    rsi,r13
  42b0a5:	mov    rdi,rbx
  42b0a8:	call   42add0 <flatcc_builder_create_union_vector_direct@@Base>
  42b0ad:	mov    edx,DWORD PTR [rbx+0x20]
  42b0b0:	mov    rdi,QWORD PTR [rbx+0x18]
  42b0b4:	xor    esi,esi
  42b0b6:	mov    rbp,rax
  42b0b9:	call   405310 <memset@plt>
  42b0be:	mov    rdx,QWORD PTR [rbx+0x30]
  42b0c2:	mov    esi,DWORD PTR [rdx]
  42b0c4:	mov    eax,DWORD PTR [rdx+0x8]
  42b0c7:	mov    rcx,rsi
  42b0ca:	mov    DWORD PTR [rbx+0x28],esi
  42b0cd:	add    rsi,QWORD PTR [rbx+0x68]
  42b0d1:	mov    DWORD PTR [rbx+0x20],eax
  42b0d4:	mov    eax,DWORD PTR [rdx+0x4]
  42b0d7:	mov    QWORD PTR [rbx+0x18],rsi
  42b0db:	mov    esi,DWORD PTR [rbx+0x70]
  42b0de:	sub    esi,ecx
  42b0e0:	cmp    eax,esi
  42b0e2:	mov    ecx,esi
  42b0e4:	cmovb  ecx,eax
  42b0e7:	mov    DWORD PTR [rbx+0x24],ecx
  42b0ea:	mov    DWORD PTR [rdx+0x4],eax
  42b0ed:	movzx  eax,WORD PTR [rbx+0xea]
  42b0f4:	cmp    ax,WORD PTR [rbx+0xe8]
  42b0fb:	ja     42b128 <flatcc_builder_end_union_vector@@Base+0x108>
  42b0fd:	movzx  eax,WORD PTR [rdx+0xc]
  42b101:	dec    DWORD PTR [rbx+0x104]
  42b107:	sub    rdx,0x24
  42b10b:	mov    WORD PTR [rbx+0xea],ax
  42b112:	mov    QWORD PTR [rbx+0x30],rdx
  42b116:	add    rsp,0x8
  42b11a:	mov    rax,rbp
  42b11d:	pop    rbx
  42b11e:	pop    rbp
  42b11f:	pop    r12
  42b121:	pop    r13
  42b123:	ret    
  42b124:	nop    DWORD PTR [rax+0x0]
  42b128:	mov    WORD PTR [rbx+0xe8],ax
  42b12f:	jmp    42b0fd <flatcc_builder_end_union_vector@@Base+0xdd>
  42b131:	nop    DWORD PTR [rax+0x0]
  42b138:	lea    esi,[rax+0x1]
  42b13b:	mov    edx,0xfffffffc
  42b140:	mov    rdi,rbx
  42b143:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42b148:	test   eax,eax
  42b14a:	je     42b05c <flatcc_builder_end_union_vector@@Base+0x3c>
  42b150:	add    rsp,0x8
  42b154:	pop    rbx
  42b155:	pop    rbp
  42b156:	pop    r12
  42b158:	xor    eax,eax
  42b15a:	pop    r13
  42b15c:	ret    
  42b15d:	lea    rcx,[rip+0x1f71c]        # 44a880 <fb_schema_table_missing@@Base+0x33c0>
  42b164:	mov    edx,0x651
  42b169:	lea    rsi,[rip+0x1f150]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b170:	lea    rdi,[rip+0x1f3c1]        # 44a538 <fb_schema_table_missing@@Base+0x3078>
  42b177:	call   405300 <__assert_fail@plt>
  42b17c:	nop    DWORD PTR [rax+0x0]

000000000042b180 <flatcc_builder_extend_union_vector@@Base>:
  42b180:	endbr64 
  42b184:	push   rbp
  42b185:	mov    edx,esi
  42b187:	push   rbx
  42b188:	sub    rsp,0x8
  42b18c:	mov    rax,QWORD PTR [rdi+0x30]
  42b190:	add    edx,DWORD PTR [rax+0x14]
  42b193:	jb     42b1d5 <flatcc_builder_extend_union_vector@@Base+0x55>
  42b195:	cmp    edx,0x1fffffff
  42b19b:	ja     42b1d5 <flatcc_builder_extend_union_vector@@Base+0x55>
  42b19d:	mov    ebp,DWORD PTR [rdi+0x20]
  42b1a0:	mov    DWORD PTR [rax+0x14],edx
  42b1a3:	lea    eax,[rbp+rsi*8+0x0]
  42b1a7:	mov    rbx,rdi
  42b1aa:	mov    DWORD PTR [rdi+0x20],eax
  42b1ad:	cmp    eax,DWORD PTR [rdi+0x24]
  42b1b0:	jae    42b1c0 <flatcc_builder_extend_union_vector@@Base+0x40>
  42b1b2:	mov    rax,QWORD PTR [rbx+0x18]
  42b1b6:	add    rax,rbp
  42b1b9:	add    rsp,0x8
  42b1bd:	pop    rbx
  42b1be:	pop    rbp
  42b1bf:	ret    
  42b1c0:	lea    esi,[rax+0x1]
  42b1c3:	mov    edx,0xfffffffc
  42b1c8:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42b1cd:	test   eax,eax
  42b1cf:	je     42b1b2 <flatcc_builder_extend_union_vector@@Base+0x32>
  42b1d1:	xor    eax,eax
  42b1d3:	jmp    42b1b9 <flatcc_builder_extend_union_vector@@Base+0x39>
  42b1d5:	call   428340 <flatcc_builder_default_alloc@@Base+0x300>
  42b1da:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b1e0 <flatcc_builder_truncate_union_vector@@Base>:
  42b1e0:	endbr64 
  42b1e4:	sub    rsp,0x8
  42b1e8:	mov    rax,QWORD PTR [rdi+0x30]
  42b1ec:	cmp    WORD PTR [rax+0xe],0x7
  42b1f1:	jne    42b222 <flatcc_builder_truncate_union_vector@@Base+0x42>
  42b1f3:	mov    edx,DWORD PTR [rax+0x14]
  42b1f6:	cmp    edx,esi
  42b1f8:	jb     42b241 <flatcc_builder_truncate_union_vector@@Base+0x61>
  42b1fa:	sub    edx,esi
  42b1fc:	mov    DWORD PTR [rax+0x14],edx
  42b1ff:	imul   esi,DWORD PTR [rax+0x10]
  42b203:	mov    eax,DWORD PTR [rdi+0x20]
  42b206:	mov    edx,esi
  42b208:	sub    eax,esi
  42b20a:	mov    DWORD PTR [rdi+0x20],eax
  42b20d:	add    rax,QWORD PTR [rdi+0x18]
  42b211:	mov    rdi,rax
  42b214:	xor    esi,esi
  42b216:	call   405310 <memset@plt>
  42b21b:	xor    eax,eax
  42b21d:	add    rsp,0x8
  42b221:	ret    
  42b222:	lea    rcx,[rip+0x1f617]        # 44a840 <fb_schema_table_missing@@Base+0x3380>
  42b229:	mov    edx,0x681
  42b22e:	lea    rsi,[rip+0x1f08b]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b235:	lea    rdi,[rip+0x1f2fc]        # 44a538 <fb_schema_table_missing@@Base+0x3078>
  42b23c:	call   405300 <__assert_fail@plt>
  42b241:	lea    rcx,[rip+0x1f5f8]        # 44a840 <fb_schema_table_missing@@Base+0x3380>
  42b248:	mov    edx,0x682
  42b24d:	lea    rsi,[rip+0x1f06c]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b254:	lea    rdi,[rip+0x1f245]        # 44a4a0 <fb_schema_table_missing@@Base+0x2fe0>
  42b25b:	call   405300 <__assert_fail@plt>

000000000042b260 <flatcc_builder_union_vector_push@@Base>:
  42b260:	endbr64 
  42b264:	push   r12
  42b266:	push   rbp
  42b267:	push   rbx
  42b268:	mov    rdx,QWORD PTR [rdi+0x30]
  42b26c:	cmp    WORD PTR [rdx+0xe],0x7
  42b271:	jne    42b2c8 <flatcc_builder_union_vector_push@@Base+0x68>
  42b273:	mov    eax,DWORD PTR [rdx+0x14]
  42b276:	cmp    eax,0x1fffffff
  42b27b:	je     42b2c1 <flatcc_builder_union_vector_push@@Base+0x61>
  42b27d:	mov    ebp,DWORD PTR [rdi+0x20]
  42b280:	inc    eax
  42b282:	mov    DWORD PTR [rdx+0x14],eax
  42b285:	lea    edx,[rbp+0x8]
  42b288:	mov    rbx,rdi
  42b28b:	mov    r12,rsi
  42b28e:	mov    DWORD PTR [rdi+0x20],edx
  42b291:	cmp    edx,DWORD PTR [rdi+0x24]
  42b294:	jae    42b2b0 <flatcc_builder_union_vector_push@@Base+0x50>
  42b296:	mov    rax,rbp
  42b299:	add    rax,QWORD PTR [rbx+0x18]
  42b29d:	je     42b2a2 <flatcc_builder_union_vector_push@@Base+0x42>
  42b29f:	mov    QWORD PTR [rax],r12
  42b2a2:	pop    rbx
  42b2a3:	pop    rbp
  42b2a4:	pop    r12
  42b2a6:	ret    
  42b2a7:	nop    WORD PTR [rax+rax*1+0x0]
  42b2b0:	lea    esi,[rbp+0x9]
  42b2b3:	mov    edx,0xfffffffc
  42b2b8:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42b2bd:	test   eax,eax
  42b2bf:	je     42b296 <flatcc_builder_union_vector_push@@Base+0x36>
  42b2c1:	pop    rbx
  42b2c2:	pop    rbp
  42b2c3:	xor    eax,eax
  42b2c5:	pop    r12
  42b2c7:	ret    
  42b2c8:	lea    rcx,[rip+0x1f531]        # 44a800 <fb_schema_table_missing@@Base+0x3340>
  42b2cf:	mov    edx,0x68d
  42b2d4:	lea    rsi,[rip+0x1efe5]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b2db:	lea    rdi,[rip+0x1f256]        # 44a538 <fb_schema_table_missing@@Base+0x3078>
  42b2e2:	call   405300 <__assert_fail@plt>
  42b2e7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b2f0 <flatcc_builder_append_union_vector@@Base>:
  42b2f0:	endbr64 
  42b2f4:	push   r13
  42b2f6:	push   r12
  42b2f8:	push   rbp
  42b2f9:	push   rbx
  42b2fa:	sub    rsp,0x8
  42b2fe:	mov    rax,QWORD PTR [rdi+0x30]
  42b302:	cmp    WORD PTR [rax+0xe],0x7
  42b307:	jne    42b376 <flatcc_builder_append_union_vector@@Base+0x86>
  42b309:	mov    ecx,edx
  42b30b:	add    ecx,DWORD PTR [rax+0x14]
  42b30e:	jb     42b395 <flatcc_builder_append_union_vector@@Base+0xa5>
  42b314:	cmp    ecx,0x1fffffff
  42b31a:	ja     42b395 <flatcc_builder_append_union_vector@@Base+0xa5>
  42b31c:	mov    r12d,DWORD PTR [rdi+0x20]
  42b320:	lea    ebx,[rdx*8+0x0]
  42b327:	mov    rdx,r12
  42b32a:	add    edx,ebx
  42b32c:	mov    DWORD PTR [rax+0x14],ecx
  42b32f:	mov    rbp,rdi
  42b332:	mov    r13,rsi
  42b335:	mov    DWORD PTR [rdi+0x20],edx
  42b338:	cmp    edx,DWORD PTR [rdi+0x24]
  42b33b:	jae    42b360 <flatcc_builder_append_union_vector@@Base+0x70>
  42b33d:	add    r12,QWORD PTR [rbp+0x18]
  42b341:	je     42b350 <flatcc_builder_append_union_vector@@Base+0x60>
  42b343:	mov    edx,ebx
  42b345:	mov    rsi,r13
  42b348:	mov    rdi,r12
  42b34b:	call   405370 <memcpy@plt>
  42b350:	add    rsp,0x8
  42b354:	pop    rbx
  42b355:	pop    rbp
  42b356:	mov    rax,r12
  42b359:	pop    r12
  42b35b:	pop    r13
  42b35d:	ret    
  42b35e:	xchg   ax,ax
  42b360:	lea    esi,[rdx+0x1]
  42b363:	mov    edx,0xfffffffc
  42b368:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42b36d:	test   eax,eax
  42b36f:	je     42b33d <flatcc_builder_append_union_vector@@Base+0x4d>
  42b371:	xor    r12d,r12d
  42b374:	jmp    42b350 <flatcc_builder_append_union_vector@@Base+0x60>
  42b376:	lea    rcx,[rip+0x1f443]        # 44a7c0 <fb_schema_table_missing@@Base+0x3300>
  42b37d:	mov    edx,0x69c
  42b382:	lea    rsi,[rip+0x1ef37]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b389:	lea    rdi,[rip+0x1f1a8]        # 44a538 <fb_schema_table_missing@@Base+0x3078>
  42b390:	call   405300 <__assert_fail@plt>
  42b395:	call   428340 <flatcc_builder_default_alloc@@Base+0x300>
  42b39a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b3a0 <flatcc_builder_create_string@@Base>:
  42b3a0:	endbr64 
  42b3a4:	push   rbp
  42b3a5:	push   rbx
  42b3a6:	sub    rsp,0xb8
  42b3ad:	mov    rax,QWORD PTR fs:0x28
  42b3b6:	mov    QWORD PTR [rsp+0xa8],rax
  42b3be:	xor    eax,eax
  42b3c0:	mov    eax,0xffffffff
  42b3c5:	cmp    rdx,rax
  42b3c8:	ja     42b490 <flatcc_builder_create_string@@Base+0xf0>
  42b3ce:	mov    rbx,rdi
  42b3d1:	mov    edi,DWORD PTR [rdi+0xf0]
  42b3d7:	lea    rcx,[rsp+0xc]
  42b3dc:	lea    eax,[rdi-0x1]
  42b3df:	sub    eax,edx
  42b3e1:	and    eax,0x3
  42b3e4:	mov    DWORD PTR [rsp+0xc],edx
  42b3e8:	inc    eax
  42b3ea:	mov    QWORD PTR [rsp+0x20],rcx
  42b3ef:	mov    QWORD PTR [rsp+0x28],0x4
  42b3f8:	test   rdx,rdx
  42b3fb:	jne    42b470 <flatcc_builder_create_string@@Base+0xd0>
  42b3fd:	mov    edx,0x2
  42b402:	mov    ecx,0x1
  42b407:	mov    r8d,0x4
  42b40d:	add    r8,rax
  42b410:	mov    rsi,0x44ada0
  42b417:	mov    ebp,edi
  42b419:	shl    rcx,0x4
  42b41d:	sub    ebp,r8d
  42b420:	mov    QWORD PTR [rsp+0x10],r8
  42b425:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  42b42a:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  42b42f:	mov    DWORD PTR [rsp+0x18],edx
  42b433:	cmp    edi,ebp
  42b435:	jle    42b494 <flatcc_builder_create_string@@Base+0xf4>
  42b437:	mov    rdi,QWORD PTR [rbx+0x38]
  42b43b:	lea    rsi,[rsp+0x20]
  42b440:	mov    ecx,ebp
  42b442:	call   QWORD PTR [rbx+0x48]
  42b445:	test   eax,eax
  42b447:	jne    42b4b8 <flatcc_builder_create_string@@Base+0x118>
  42b449:	mov    DWORD PTR [rbx+0xf0],ebp
  42b44f:	mov    rbx,QWORD PTR [rsp+0xa8]
  42b457:	xor    rbx,QWORD PTR fs:0x28
  42b460:	mov    eax,ebp
  42b462:	jne    42b4b3 <flatcc_builder_create_string@@Base+0x113>
  42b464:	add    rsp,0xb8
  42b46b:	pop    rbx
  42b46c:	pop    rbp
  42b46d:	ret    
  42b46e:	xchg   ax,ax
  42b470:	lea    r8,[rdx+0x4]
  42b474:	mov    QWORD PTR [rsp+0x38],rdx
  42b479:	mov    QWORD PTR [rsp+0x30],rsi
  42b47e:	mov    edx,0x3
  42b483:	mov    ecx,0x2
  42b488:	jmp    42b40d <flatcc_builder_create_string@@Base+0x6d>
  42b48d:	nop    DWORD PTR [rax]
  42b490:	xor    ebp,ebp
  42b492:	jmp    42b44f <flatcc_builder_create_string@@Base+0xaf>
  42b494:	lea    rcx,[rip+0x1f855]        # 44acf0 <fb_schema_table_missing@@Base+0x3830>
  42b49b:	mov    edx,0x287
  42b4a0:	lea    rsi,[rip+0x1ee19]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b4a7:	lea    rdi,[rip+0xceab]        # 438359 <_IO_stdin_used@@Base+0xa359>
  42b4ae:	call   405300 <__assert_fail@plt>
  42b4b3:	call   4052d0 <__stack_chk_fail@plt>
  42b4b8:	call   428310 <flatcc_builder_default_alloc@@Base+0x2d0>
  42b4bd:	nop    DWORD PTR [rax]

000000000042b4c0 <flatcc_builder_create_string_str@@Base>:
  42b4c0:	endbr64 
  42b4c4:	push   rbp
  42b4c5:	mov    rbp,rdi
  42b4c8:	mov    rdi,rsi
  42b4cb:	push   rbx
  42b4cc:	mov    rbx,rsi
  42b4cf:	sub    rsp,0x8
  42b4d3:	call   4052c0 <strlen@plt>
  42b4d8:	add    rsp,0x8
  42b4dc:	mov    rsi,rbx
  42b4df:	pop    rbx
  42b4e0:	mov    rdi,rbp
  42b4e3:	mov    rdx,rax
  42b4e6:	pop    rbp
  42b4e7:	jmp    42b3a0 <flatcc_builder_create_string@@Base>
  42b4ec:	nop    DWORD PTR [rax+0x0]

000000000042b4f0 <flatcc_builder_create_string_strn@@Base>:
  42b4f0:	endbr64 
  42b4f4:	push   r12
  42b4f6:	mov    r12,rdi
  42b4f9:	push   rbp
  42b4fa:	mov    rbp,rsi
  42b4fd:	mov    rdi,rbp
  42b500:	push   rbx
  42b501:	xor    esi,esi
  42b503:	mov    rbx,rdx
  42b506:	call   405320 <memchr@plt>
  42b50b:	mov    rdx,rax
  42b50e:	sub    rdx,rbp
  42b511:	test   rax,rax
  42b514:	cmovne rbx,rdx
  42b518:	mov    rsi,rbp
  42b51b:	mov    rdx,rbx
  42b51e:	pop    rbx
  42b51f:	pop    rbp
  42b520:	mov    rdi,r12
  42b523:	pop    r12
  42b525:	jmp    42b3a0 <flatcc_builder_create_string@@Base>
  42b52a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b530 <flatcc_builder_end_string@@Base>:
  42b530:	endbr64 
  42b534:	push   rbp
  42b535:	push   rbx
  42b536:	sub    rsp,0x8
  42b53a:	mov    rax,QWORD PTR [rdi+0x30]
  42b53e:	cmp    WORD PTR [rax+0xe],0x6
  42b543:	jne    42b605 <flatcc_builder_end_string@@Base+0xd5>
  42b549:	mov    edx,DWORD PTR [rdi+0x20]
  42b54c:	mov    rbx,rdi
  42b54f:	cmp    DWORD PTR [rax+0x14],edx
  42b552:	jne    42b5e6 <flatcc_builder_end_string@@Base+0xb6>
  42b558:	mov    rsi,QWORD PTR [rdi+0x18]
  42b55c:	call   42b3a0 <flatcc_builder_create_string@@Base>
  42b561:	mov    ebp,eax
  42b563:	test   eax,eax
  42b565:	jne    42b570 <flatcc_builder_end_string@@Base+0x40>
  42b567:	add    rsp,0x8
  42b56b:	pop    rbx
  42b56c:	mov    eax,ebp
  42b56e:	pop    rbp
  42b56f:	ret    
  42b570:	mov    edx,DWORD PTR [rbx+0x20]
  42b573:	mov    rdi,QWORD PTR [rbx+0x18]
  42b577:	xor    esi,esi
  42b579:	call   405310 <memset@plt>
  42b57e:	mov    rax,QWORD PTR [rbx+0x30]
  42b582:	mov    edi,DWORD PTR [rbx+0x70]
  42b585:	mov    edx,DWORD PTR [rax+0x8]
  42b588:	mov    esi,DWORD PTR [rax]
  42b58a:	mov    ecx,DWORD PTR [rax+0x4]
  42b58d:	mov    DWORD PTR [rbx+0x20],edx
  42b590:	mov    rdx,rsi
  42b593:	sub    edi,edx
  42b595:	mov    DWORD PTR [rbx+0x28],esi
  42b598:	mov    edx,edi
  42b59a:	add    rsi,QWORD PTR [rbx+0x68]
  42b59e:	cmp    ecx,edi
  42b5a0:	cmovb  edx,ecx
  42b5a3:	mov    QWORD PTR [rbx+0x18],rsi
  42b5a7:	mov    DWORD PTR [rbx+0x24],edx
  42b5aa:	movzx  edx,WORD PTR [rbx+0xea]
  42b5b1:	mov    DWORD PTR [rax+0x4],ecx
  42b5b4:	cmp    dx,WORD PTR [rbx+0xe8]
  42b5bb:	jbe    42b5c4 <flatcc_builder_end_string@@Base+0x94>
  42b5bd:	mov    WORD PTR [rbx+0xe8],dx
  42b5c4:	movzx  edx,WORD PTR [rax+0xc]
  42b5c8:	dec    DWORD PTR [rbx+0x104]
  42b5ce:	sub    rax,0x24
  42b5d2:	mov    QWORD PTR [rbx+0x30],rax
  42b5d6:	mov    WORD PTR [rbx+0xea],dx
  42b5dd:	add    rsp,0x8
  42b5e1:	mov    eax,ebp
  42b5e3:	pop    rbx
  42b5e4:	pop    rbp
  42b5e5:	ret    
  42b5e6:	lea    rcx,[rip+0x1f1b3]        # 44a7a0 <fb_schema_table_missing@@Base+0x32e0>
  42b5ed:	mov    edx,0x6c5
  42b5f2:	lea    rsi,[rip+0x1ecc7]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b5f9:	lea    rdi,[rip+0x1ef70]        # 44a570 <fb_schema_table_missing@@Base+0x30b0>
  42b600:	call   405300 <__assert_fail@plt>
  42b605:	lea    rcx,[rip+0x1f194]        # 44a7a0 <fb_schema_table_missing@@Base+0x32e0>
  42b60c:	mov    edx,0x6c4
  42b611:	lea    rsi,[rip+0x1eca8]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b618:	lea    rdi,[rip+0x1ee29]        # 44a448 <fb_schema_table_missing@@Base+0x2f88>
  42b61f:	call   405300 <__assert_fail@plt>
  42b624:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b62f:	nop

000000000042b630 <flatcc_builder_string_edit@@Base>:
  42b630:	endbr64 
  42b634:	mov    rax,QWORD PTR [rdi+0x18]
  42b638:	ret    
  42b639:	nop    DWORD PTR [rax+0x0]

000000000042b640 <flatcc_builder_string_len@@Base>:
  42b640:	endbr64 
  42b644:	mov    rax,QWORD PTR [rdi+0x30]
  42b648:	mov    eax,DWORD PTR [rax+0x14]
  42b64b:	ret    
  42b64c:	nop    DWORD PTR [rax+0x0]

000000000042b650 <flatcc_builder_table_add@@Base>:
  42b650:	endbr64 
  42b654:	push   r13
  42b656:	push   r12
  42b658:	push   rbp
  42b659:	push   rbx
  42b65a:	sub    rsp,0x8
  42b65e:	mov    rax,QWORD PTR [rdi+0x30]
  42b662:	cmp    WORD PTR [rax+0xe],0x3
  42b667:	jne    42b734 <flatcc_builder_table_add@@Base+0xe4>
  42b66d:	mov    r12d,esi
  42b670:	cmp    esi,0x7ffc
  42b676:	ja     42b772 <flatcc_builder_table_add@@Base+0x122>
  42b67c:	mov    rbx,rdi
  42b67f:	cmp    WORD PTR [rdi+0xea],cx
  42b686:	jb     42b6f0 <flatcc_builder_table_add@@Base+0xa0>
  42b688:	movsxd r13,r12d
  42b68b:	mov    rsi,QWORD PTR [rbx+0x8]
  42b68f:	add    r13,r13
  42b692:	add    rsi,r13
  42b695:	cmp    WORD PTR [rsi],0x0
  42b699:	jne    42b753 <flatcc_builder_table_add@@Base+0x103>
  42b69f:	mov    eax,DWORD PTR [rbx+0x14]
  42b6a2:	movzx  ecx,cx
  42b6a5:	xor    eax,r12d
  42b6a8:	imul   eax,eax,0x9e3779b1
  42b6ae:	xor    eax,edx
  42b6b0:	imul   eax,eax,0x9e3779b1
  42b6b6:	mov    DWORD PTR [rbx+0x14],eax
  42b6b9:	mov    eax,DWORD PTR [rbx+0x20]
  42b6bc:	lea    ebp,[rcx+rax*1-0x1]
  42b6c0:	neg    ecx
  42b6c2:	and    ebp,ecx
  42b6c4:	add    edx,ebp
  42b6c6:	mov    DWORD PTR [rbx+0x20],edx
  42b6c9:	cmp    edx,DWORD PTR [rbx+0x24]
  42b6cc:	jae    42b710 <flatcc_builder_table_add@@Base+0xc0>
  42b6ce:	lea    eax,[rbp+0x4]
  42b6d1:	mov    WORD PTR [rsi],ax
  42b6d4:	cmp    r12w,WORD PTR [rbx+0x10]
  42b6d9:	jae    42b700 <flatcc_builder_table_add@@Base+0xb0>
  42b6db:	mov    eax,ebp
  42b6dd:	add    rax,QWORD PTR [rbx+0x18]
  42b6e1:	add    rsp,0x8
  42b6e5:	pop    rbx
  42b6e6:	pop    rbp
  42b6e7:	pop    r12
  42b6e9:	pop    r13
  42b6eb:	ret    
  42b6ec:	nop    DWORD PTR [rax+0x0]
  42b6f0:	mov    WORD PTR [rdi+0xea],cx
  42b6f7:	jmp    42b688 <flatcc_builder_table_add@@Base+0x38>
  42b6f9:	nop    DWORD PTR [rax+0x0]
  42b700:	inc    r12d
  42b703:	mov    WORD PTR [rbx+0x10],r12w
  42b708:	jmp    42b6db <flatcc_builder_table_add@@Base+0x8b>
  42b70a:	nop    WORD PTR [rax+rax*1+0x0]
  42b710:	lea    esi,[rdx+0x1]
  42b713:	mov    rdi,rbx
  42b716:	mov    edx,0xfffc
  42b71b:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42b720:	test   eax,eax
  42b722:	jne    42b730 <flatcc_builder_table_add@@Base+0xe0>
  42b724:	mov    rsi,QWORD PTR [rbx+0x8]
  42b728:	add    rsi,r13
  42b72b:	jmp    42b6ce <flatcc_builder_table_add@@Base+0x7e>
  42b72d:	nop    DWORD PTR [rax]
  42b730:	xor    eax,eax
  42b732:	jmp    42b6e1 <flatcc_builder_table_add@@Base+0x91>
  42b734:	lea    rcx,[rip+0x1f045]        # 44a780 <fb_schema_table_missing@@Base+0x32c0>
  42b73b:	mov    edx,0x6ed
  42b740:	lea    rsi,[rip+0x1eb79]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b747:	lea    rdi,[rip+0x1edba]        # 44a508 <fb_schema_table_missing@@Base+0x3048>
  42b74e:	call   405300 <__assert_fail@plt>
  42b753:	lea    rcx,[rip+0x1f026]        # 44a780 <fb_schema_table_missing@@Base+0x32c0>
  42b75a:	mov    edx,0x6f8
  42b75f:	lea    rsi,[rip+0x1eb5a]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b766:	lea    rdi,[rip+0xcbec]        # 438359 <_IO_stdin_used@@Base+0xa359>
  42b76d:	call   405300 <__assert_fail@plt>
  42b772:	lea    rcx,[rip+0x1f007]        # 44a780 <fb_schema_table_missing@@Base+0x32c0>
  42b779:	mov    edx,0x6ee
  42b77e:	lea    rsi,[rip+0x1eb3b]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b785:	lea    rdi,[rip+0x1ee0c]        # 44a598 <fb_schema_table_missing@@Base+0x30d8>
  42b78c:	call   405300 <__assert_fail@plt>
  42b791:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b79c:	nop    DWORD PTR [rax+0x0]

000000000042b7a0 <flatcc_builder_table_edit@@Base>:
  42b7a0:	endbr64 
  42b7a4:	mov    rax,QWORD PTR [rdi+0x30]
  42b7a8:	cmp    WORD PTR [rax+0xe],0x3
  42b7ad:	jne    42b7ba <flatcc_builder_table_edit@@Base+0x1a>
  42b7af:	mov    eax,DWORD PTR [rdi+0x20]
  42b7b2:	sub    rax,rsi
  42b7b5:	add    rax,QWORD PTR [rdi+0x18]
  42b7b9:	ret    
  42b7ba:	push   rax
  42b7bb:	lea    rcx,[rip+0x1ef9e]        # 44a760 <fb_schema_table_missing@@Base+0x32a0>
  42b7c2:	mov    edx,0x702
  42b7c7:	lea    rsi,[rip+0x1eaf2]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b7ce:	lea    rdi,[rip+0x1ed33]        # 44a508 <fb_schema_table_missing@@Base+0x3048>
  42b7d5:	call   405300 <__assert_fail@plt>
  42b7da:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b7e0 <flatcc_builder_table_add_copy@@Base>:
  42b7e0:	endbr64 
  42b7e4:	push   rbp
  42b7e5:	mov    rbp,rdx
  42b7e8:	push   rbx
  42b7e9:	mov    rbx,rcx
  42b7ec:	mov    rdx,rbx
  42b7ef:	movzx  ecx,r8w
  42b7f3:	sub    rsp,0x8
  42b7f7:	call   42b650 <flatcc_builder_table_add@@Base>
  42b7fc:	mov    rcx,rax
  42b7ff:	test   rax,rax
  42b802:	je     42b815 <flatcc_builder_table_add_copy@@Base+0x35>
  42b804:	mov    rdx,rbx
  42b807:	mov    rsi,rbp
  42b80a:	mov    rdi,rax
  42b80d:	call   405370 <memcpy@plt>
  42b812:	mov    rcx,rax
  42b815:	add    rsp,0x8
  42b819:	pop    rbx
  42b81a:	mov    rax,rcx
  42b81d:	pop    rbp
  42b81e:	ret    
  42b81f:	nop

000000000042b820 <flatcc_builder_table_add_offset@@Base>:
  42b820:	endbr64 
  42b824:	push   r13
  42b826:	push   r12
  42b828:	push   rbp
  42b829:	push   rbx
  42b82a:	sub    rsp,0x8
  42b82e:	mov    rax,QWORD PTR [rdi+0x30]
  42b832:	cmp    WORD PTR [rax+0xe],0x3
  42b837:	jne    42b8f4 <flatcc_builder_table_add_offset@@Base+0xd4>
  42b83d:	mov    r12d,esi
  42b840:	cmp    esi,0x7ffc
  42b846:	ja     42b932 <flatcc_builder_table_add_offset@@Base+0x112>
  42b84c:	movsxd r13,esi
  42b84f:	mov    rdx,QWORD PTR [rdi+0x8]
  42b853:	add    r13,r13
  42b856:	add    rdx,r13
  42b859:	cmp    WORD PTR [rdx],0x0
  42b85d:	mov    rbx,rdi
  42b860:	jne    42b913 <flatcc_builder_table_add_offset@@Base+0xf3>
  42b866:	mov    eax,DWORD PTR [rdi+0x14]
  42b869:	xor    eax,esi
  42b86b:	imul   eax,eax,0x9e3779b1
  42b871:	xor    eax,0x4
  42b874:	imul   eax,eax,0x9e3779b1
  42b87a:	mov    DWORD PTR [rdi+0x14],eax
  42b87d:	mov    eax,DWORD PTR [rdi+0x20]
  42b880:	lea    ebp,[rax+0x3]
  42b883:	and    ebp,0xfffffffc
  42b886:	lea    esi,[rbp+0x4]
  42b889:	mov    DWORD PTR [rdi+0x20],esi
  42b88c:	cmp    esi,DWORD PTR [rdi+0x24]
  42b88f:	ja     42b8d0 <flatcc_builder_table_add_offset@@Base+0xb0>
  42b891:	lea    eax,[rbp+0x4]
  42b894:	mov    WORD PTR [rdx],ax
  42b897:	cmp    r12w,WORD PTR [rbx+0x10]
  42b89c:	jae    42b8c0 <flatcc_builder_table_add_offset@@Base+0xa0>
  42b89e:	mov    rax,QWORD PTR [rbx]
  42b8a1:	lea    rdx,[rax+0x2]
  42b8a5:	mov    QWORD PTR [rbx],rdx
  42b8a8:	mov    WORD PTR [rax],bp
  42b8ab:	mov    eax,ebp
  42b8ad:	add    rax,QWORD PTR [rbx+0x18]
  42b8b1:	add    rsp,0x8
  42b8b5:	pop    rbx
  42b8b6:	pop    rbp
  42b8b7:	pop    r12
  42b8b9:	pop    r13
  42b8bb:	ret    
  42b8bc:	nop    DWORD PTR [rax+0x0]
  42b8c0:	lea    esi,[r12+0x1]
  42b8c5:	mov    WORD PTR [rbx+0x10],si
  42b8c9:	jmp    42b89e <flatcc_builder_table_add_offset@@Base+0x7e>
  42b8cb:	nop    DWORD PTR [rax+rax*1+0x0]
  42b8d0:	mov    edx,0xfffc
  42b8d5:	call   427fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42b8da:	test   eax,eax
  42b8dc:	jne    42b8f0 <flatcc_builder_table_add_offset@@Base+0xd0>
  42b8de:	mov    rdx,QWORD PTR [rbx+0x8]
  42b8e2:	add    rdx,r13
  42b8e5:	jmp    42b891 <flatcc_builder_table_add_offset@@Base+0x71>
  42b8e7:	nop    WORD PTR [rax+rax*1+0x0]
  42b8f0:	xor    eax,eax
  42b8f2:	jmp    42b8b1 <flatcc_builder_table_add_offset@@Base+0x91>
  42b8f4:	lea    rcx,[rip+0x1ee45]        # 44a740 <fb_schema_table_missing@@Base+0x3280>
  42b8fb:	mov    edx,0x713
  42b900:	lea    rsi,[rip+0x1e9b9]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b907:	lea    rdi,[rip+0x1ebfa]        # 44a508 <fb_schema_table_missing@@Base+0x3048>
  42b90e:	call   405300 <__assert_fail@plt>
  42b913:	lea    rcx,[rip+0x1ee26]        # 44a740 <fb_schema_table_missing@@Base+0x3280>
  42b91a:	mov    edx,0x71b
  42b91f:	lea    rsi,[rip+0x1e99a]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b926:	lea    rdi,[rip+0xca2c]        # 438359 <_IO_stdin_used@@Base+0xa359>
  42b92d:	call   405300 <__assert_fail@plt>
  42b932:	lea    rcx,[rip+0x1ee07]        # 44a740 <fb_schema_table_missing@@Base+0x3280>
  42b939:	mov    edx,0x714
  42b93e:	lea    rsi,[rip+0x1e97b]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b945:	lea    rdi,[rip+0x1ec4c]        # 44a598 <fb_schema_table_missing@@Base+0x30d8>
  42b94c:	call   405300 <__assert_fail@plt>
  42b951:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b95c:	nop    DWORD PTR [rax+0x0]

000000000042b960 <flatcc_builder_table_add_union@@Base>:
  42b960:	endbr64 
  42b964:	push   r13
  42b966:	mov    r13,rdx
  42b969:	sar    r13,0x20
  42b96d:	push   r12
  42b96f:	push   rbp
  42b970:	push   rbx
  42b971:	sub    rsp,0x8
  42b975:	mov    rax,QWORD PTR [rdi+0x30]
  42b979:	cmp    WORD PTR [rax+0xe],0x3
  42b97e:	jne    42b9f4 <flatcc_builder_table_add_union@@Base+0x94>
  42b980:	mov    r12,rdi
  42b983:	mov    ebx,esi
  42b985:	mov    rbp,rdx
  42b988:	test   dl,dl
  42b98a:	je     42b9d0 <flatcc_builder_table_add_union@@Base+0x70>
  42b98c:	test   r13d,r13d
  42b98f:	je     42b9a2 <flatcc_builder_table_add_union@@Base+0x42>
  42b991:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  42b996:	test   rax,rax
  42b999:	je     42ba32 <flatcc_builder_table_add_union@@Base+0xd2>
  42b99f:	mov    DWORD PTR [rax],r13d
  42b9a2:	lea    esi,[rbx-0x1]
  42b9a5:	mov    ecx,0x1
  42b9aa:	mov    edx,0x1
  42b9af:	mov    rdi,r12
  42b9b2:	call   42b650 <flatcc_builder_table_add@@Base>
  42b9b7:	test   rax,rax
  42b9ba:	je     42ba13 <flatcc_builder_table_add_union@@Base+0xb3>
  42b9bc:	mov    BYTE PTR [rax],bpl
  42b9bf:	add    rsp,0x8
  42b9c3:	xor    eax,eax
  42b9c5:	pop    rbx
  42b9c6:	pop    rbp
  42b9c7:	pop    r12
  42b9c9:	pop    r13
  42b9cb:	ret    
  42b9cc:	nop    DWORD PTR [rax+0x0]
  42b9d0:	test   r13d,r13d
  42b9d3:	je     42b9a2 <flatcc_builder_table_add_union@@Base+0x42>
  42b9d5:	lea    rcx,[rip+0x1eef4]        # 44a8d0 <fb_schema_table_missing@@Base+0x3410>
  42b9dc:	mov    edx,0x5ef
  42b9e1:	lea    rsi,[rip+0x1e8d8]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42b9e8:	lea    rdi,[rip+0x1ebf1]        # 44a5e0 <fb_schema_table_missing@@Base+0x3120>
  42b9ef:	call   405300 <__assert_fail@plt>
  42b9f4:	lea    rcx,[rip+0x1eed5]        # 44a8d0 <fb_schema_table_missing@@Base+0x3410>
  42b9fb:	mov    edx,0x5ee
  42ba00:	lea    rsi,[rip+0x1e8b9]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42ba07:	lea    rdi,[rip+0x1eafa]        # 44a508 <fb_schema_table_missing@@Base+0x3048>
  42ba0e:	call   405300 <__assert_fail@plt>
  42ba13:	lea    rcx,[rip+0x1eeb6]        # 44a8d0 <fb_schema_table_missing@@Base+0x3410>
  42ba1a:	mov    edx,0x5f6
  42ba1f:	lea    rsi,[rip+0x1e89a]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42ba26:	lea    rdi,[rip+0x1ecb9]        # 44a6e6 <fb_schema_table_missing@@Base+0x3226>
  42ba2d:	call   405300 <__assert_fail@plt>
  42ba32:	lea    rcx,[rip+0x1ee97]        # 44a8d0 <fb_schema_table_missing@@Base+0x3410>
  42ba39:	mov    edx,0x5f2
  42ba3e:	lea    rsi,[rip+0x1e87b]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42ba45:	lea    rdi,[rip+0x1ec90]        # 44a6dc <fb_schema_table_missing@@Base+0x321c>
  42ba4c:	call   405300 <__assert_fail@plt>
  42ba51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42ba5c:	nop    DWORD PTR [rax+0x0]

000000000042ba60 <flatcc_builder_table_add_union_vector@@Base>:
  42ba60:	endbr64 
  42ba64:	push   r12
  42ba66:	push   rbp
  42ba67:	mov    rbp,rdx
  42ba6a:	sar    rbp,0x20
  42ba6e:	push   rbx
  42ba6f:	sub    rsp,0x10
  42ba73:	mov    rcx,QWORD PTR [rdi+0x30]
  42ba77:	cmp    WORD PTR [rcx+0xe],0x3
  42ba7c:	jne    42baf1 <flatcc_builder_table_add_union_vector@@Base+0x91>
  42ba7e:	test   ebp,ebp
  42ba80:	sete   cl
  42ba83:	test   edx,edx
  42ba85:	mov    r12d,esi
  42ba88:	sete   sil
  42ba8c:	cmp    sil,cl
  42ba8f:	je     42bab0 <flatcc_builder_table_add_union_vector@@Base+0x50>
  42ba91:	test   edx,edx
  42ba93:	setne  al
  42ba96:	cmp    cl,al
  42ba98:	je     42bb10 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  42ba9a:	mov    eax,0xffffffff
  42ba9f:	add    rsp,0x10
  42baa3:	pop    rbx
  42baa4:	pop    rbp
  42baa5:	pop    r12
  42baa7:	ret    
  42baa8:	nop    DWORD PTR [rax+rax*1+0x0]
  42bab0:	mov    eax,edx
  42bab2:	test   edx,edx
  42bab4:	je     42ba9f <flatcc_builder_table_add_union_vector@@Base+0x3f>
  42bab6:	lea    esi,[r12-0x1]
  42babb:	mov    QWORD PTR [rsp+0x8],rdx
  42bac0:	mov    rbx,rdi
  42bac3:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  42bac8:	test   rax,rax
  42bacb:	mov    rdx,QWORD PTR [rsp+0x8]
  42bad0:	je     42bb4e <flatcc_builder_table_add_union_vector@@Base+0xee>
  42bad2:	mov    DWORD PTR [rax],edx
  42bad4:	mov    esi,r12d
  42bad7:	mov    rdi,rbx
  42bada:	call   42b820 <flatcc_builder_table_add_offset@@Base>
  42badf:	test   rax,rax
  42bae2:	je     42bb2f <flatcc_builder_table_add_union_vector@@Base+0xcf>
  42bae4:	mov    DWORD PTR [rax],ebp
  42bae6:	add    rsp,0x10
  42baea:	xor    eax,eax
  42baec:	pop    rbx
  42baed:	pop    rbp
  42baee:	pop    r12
  42baf0:	ret    
  42baf1:	lea    rcx,[rip+0x1eda8]        # 44a8a0 <fb_schema_table_missing@@Base+0x33e0>
  42baf8:	mov    edx,0x600
  42bafd:	lea    rsi,[rip+0x1e7bc]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42bb04:	lea    rdi,[rip+0x1e9fd]        # 44a508 <fb_schema_table_missing@@Base+0x3048>
  42bb0b:	call   405300 <__assert_fail@plt>
  42bb10:	lea    rcx,[rip+0x1ed89]        # 44a8a0 <fb_schema_table_missing@@Base+0x33e0>
  42bb17:	mov    edx,0x601
  42bb1c:	lea    rsi,[rip+0x1e79d]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42bb23:	lea    rdi,[rip+0x1eade]        # 44a608 <fb_schema_table_missing@@Base+0x3148>
  42bb2a:	call   405300 <__assert_fail@plt>
  42bb2f:	lea    rcx,[rip+0x1ed6a]        # 44a8a0 <fb_schema_table_missing@@Base+0x33e0>
  42bb36:	mov    edx,0x608
  42bb3b:	lea    rsi,[rip+0x1e77e]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42bb42:	lea    rdi,[rip+0x1eb93]        # 44a6dc <fb_schema_table_missing@@Base+0x321c>
  42bb49:	call   405300 <__assert_fail@plt>
  42bb4e:	lea    rcx,[rip+0x1ed4b]        # 44a8a0 <fb_schema_table_missing@@Base+0x33e0>
  42bb55:	mov    edx,0x604
  42bb5a:	lea    rsi,[rip+0x1e75f]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42bb61:	lea    rdi,[rip+0x1eb74]        # 44a6dc <fb_schema_table_missing@@Base+0x321c>
  42bb68:	call   405300 <__assert_fail@plt>
  42bb6d:	nop    DWORD PTR [rax]

000000000042bb70 <flatcc_builder_push_buffer_alignment@@Base>:
  42bb70:	endbr64 
  42bb74:	mov    edx,0x4
  42bb79:	movzx  eax,WORD PTR [rdi+0xe8]
  42bb80:	mov    WORD PTR [rdi+0xe8],dx
  42bb87:	ret    
  42bb88:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042bb90 <flatcc_builder_pop_buffer_alignment@@Base>:
  42bb90:	endbr64 
  42bb94:	cmp    si,WORD PTR [rdi+0xe8]
  42bb9b:	jbe    42bba4 <flatcc_builder_pop_buffer_alignment@@Base+0x14>
  42bb9d:	mov    WORD PTR [rdi+0xe8],si
  42bba4:	ret    
  42bba5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042bbb0 <flatcc_builder_get_buffer_alignment@@Base>:
  42bbb0:	endbr64 
  42bbb4:	movzx  eax,WORD PTR [rdi+0xe8]
  42bbbb:	ret    
  42bbbc:	nop    DWORD PTR [rax+0x0]

000000000042bbc0 <flatcc_builder_set_vtable_clustering@@Base>:
  42bbc0:	endbr64 
  42bbc4:	xor    eax,eax
  42bbc6:	test   esi,esi
  42bbc8:	sete   al
  42bbcb:	mov    DWORD PTR [rdi+0x124],eax
  42bbd1:	ret    
  42bbd2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42bbdd:	nop    DWORD PTR [rax]

000000000042bbe0 <flatcc_builder_set_block_align@@Base>:
  42bbe0:	endbr64 
  42bbe4:	mov    WORD PTR [rdi+0xec],si
  42bbeb:	ret    
  42bbec:	nop    DWORD PTR [rax+0x0]

000000000042bbf0 <flatcc_builder_get_level@@Base>:
  42bbf0:	endbr64 
  42bbf4:	mov    eax,DWORD PTR [rdi+0x104]
  42bbfa:	ret    
  42bbfb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042bc00 <flatcc_builder_set_max_level@@Base>:
  42bc00:	endbr64 
  42bc04:	mov    DWORD PTR [rdi+0x120],esi
  42bc0a:	cmp    DWORD PTR [rdi+0x108],esi
  42bc10:	jge    42bc18 <flatcc_builder_set_max_level@@Base+0x18>
  42bc12:	mov    DWORD PTR [rdi+0x108],esi
  42bc18:	ret    
  42bc19:	nop    DWORD PTR [rax+0x0]

000000000042bc20 <flatcc_builder_get_buffer_size@@Base>:
  42bc20:	endbr64 
  42bc24:	mov    eax,DWORD PTR [rdi+0xf4]
  42bc2a:	sub    eax,DWORD PTR [rdi+0xf0]
  42bc30:	cdqe   
  42bc32:	ret    
  42bc33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42bc3e:	xchg   ax,ax

000000000042bc40 <flatcc_builder_get_buffer_start@@Base>:
  42bc40:	endbr64 
  42bc44:	mov    eax,DWORD PTR [rdi+0xf0]
  42bc4a:	ret    
  42bc4b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042bc50 <flatcc_builder_get_buffer_end@@Base>:
  42bc50:	endbr64 
  42bc54:	mov    eax,DWORD PTR [rdi+0xf4]
  42bc5a:	ret    
  42bc5b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042bc60 <flatcc_builder_set_vtable_cache_limit@@Base>:
  42bc60:	endbr64 
  42bc64:	mov    QWORD PTR [rdi+0x118],rsi
  42bc6b:	ret    
  42bc6c:	nop    DWORD PTR [rax+0x0]

000000000042bc70 <flatcc_builder_set_identifier@@Base>:
  42bc70:	endbr64 
  42bc74:	test   rsi,rsi
  42bc77:	je     42bc88 <flatcc_builder_set_identifier@@Base+0x18>
  42bc79:	mov    eax,DWORD PTR [rsi]
  42bc7b:	mov    DWORD PTR [rdi+0x110],eax
  42bc81:	ret    
  42bc82:	nop    WORD PTR [rax+rax*1+0x0]
  42bc88:	mov    rsi,0x44ada0
  42bc8f:	mov    eax,DWORD PTR [rsi]
  42bc91:	mov    DWORD PTR [rdi+0x110],eax
  42bc97:	ret    
  42bc98:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042bca0 <flatcc_builder_get_type@@Base>:
  42bca0:	endbr64 
  42bca4:	mov    rdx,QWORD PTR [rdi+0x30]
  42bca8:	xor    eax,eax
  42bcaa:	test   rdx,rdx
  42bcad:	je     42bcb3 <flatcc_builder_get_type@@Base+0x13>
  42bcaf:	movzx  eax,WORD PTR [rdx+0xe]
  42bcb3:	ret    
  42bcb4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42bcbf:	nop

000000000042bcc0 <flatcc_builder_get_type_at@@Base>:
  42bcc0:	endbr64 
  42bcc4:	xor    eax,eax
  42bcc6:	test   esi,esi
  42bcc8:	jle    42bce9 <flatcc_builder_get_type_at@@Base+0x29>
  42bcca:	mov    edx,DWORD PTR [rdi+0x104]
  42bcd0:	cmp    edx,esi
  42bcd2:	jl     42bce9 <flatcc_builder_get_type_at@@Base+0x29>
  42bcd4:	sub    esi,edx
  42bcd6:	movsxd rsi,esi
  42bcd9:	mov    rdx,QWORD PTR [rdi+0x30]
  42bcdd:	lea    rax,[rsi+rsi*8]
  42bce1:	lea    rax,[rdx+rax*4]
  42bce5:	movzx  eax,WORD PTR [rax+0xe]
  42bce9:	ret    
  42bcea:	nop    WORD PTR [rax+rax*1+0x0]

000000000042bcf0 <flatcc_builder_get_direct_buffer@@Base>:
  42bcf0:	endbr64 
  42bcf4:	mov    eax,DWORD PTR [rdi+0x128]
  42bcfa:	test   eax,eax
  42bcfc:	jne    42bd10 <flatcc_builder_get_direct_buffer@@Base+0x20>
  42bcfe:	xor    eax,eax
  42bd00:	test   rsi,rsi
  42bd03:	je     42bd0c <flatcc_builder_get_direct_buffer@@Base+0x1c>
  42bd05:	mov    QWORD PTR [rsi],0x0
  42bd0c:	ret    
  42bd0d:	nop    DWORD PTR [rax]
  42bd10:	mov    rax,QWORD PTR [rdi+0x138]
  42bd17:	cmp    QWORD PTR [rdi+0x130],rax
  42bd1e:	jne    42bcfe <flatcc_builder_get_direct_buffer@@Base+0xe>
  42bd20:	test   rsi,rsi
  42bd23:	je     42bd2f <flatcc_builder_get_direct_buffer@@Base+0x3f>
  42bd25:	mov    rax,QWORD PTR [rdi+0x160]
  42bd2c:	mov    QWORD PTR [rsi],rax
  42bd2f:	mov    rax,QWORD PTR [rdi+0x140]
  42bd36:	ret    
  42bd37:	nop    WORD PTR [rax+rax*1+0x0]

000000000042bd40 <flatcc_builder_copy_buffer@@Base>:
  42bd40:	endbr64 
  42bd44:	mov    eax,DWORD PTR [rdi+0x128]
  42bd4a:	test   eax,eax
  42bd4c:	je     42bd70 <flatcc_builder_copy_buffer@@Base+0x30>
  42bd4e:	sub    rsp,0x8
  42bd52:	add    rdi,0x130
  42bd59:	call   42c5b0 <flatcc_emitter_copy_buffer@@Base>
  42bd5e:	test   rax,rax
  42bd61:	je     42bd73 <flatcc_builder_copy_buffer@@Base+0x33>
  42bd63:	add    rsp,0x8
  42bd67:	ret    
  42bd68:	nop    DWORD PTR [rax+rax*1+0x0]
  42bd70:	xor    eax,eax
  42bd72:	ret    
  42bd73:	lea    rcx,[rip+0x1e9a6]        # 44a720 <fb_schema_table_missing@@Base+0x3260>
  42bd7a:	mov    edx,0x786
  42bd7f:	lea    rsi,[rip+0x1e53a]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42bd86:	lea    rdi,[rip+0x1dd52]        # 449adf <fb_schema_table_missing@@Base+0x261f>
  42bd8d:	call   405300 <__assert_fail@plt>
  42bd92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42bd9d:	nop    DWORD PTR [rax]

000000000042bda0 <flatcc_builder_finalize_buffer@@Base>:
  42bda0:	endbr64 
  42bda4:	push   r12
  42bda6:	mov    r12,rdi
  42bda9:	push   rbp
  42bdaa:	push   rbx
  42bdab:	mov    rbx,rsi
  42bdae:	call   42bc20 <flatcc_builder_get_buffer_size@@Base>
  42bdb3:	mov    rbp,rax
  42bdb6:	test   rbx,rbx
  42bdb9:	je     42bdbe <flatcc_builder_finalize_buffer@@Base+0x1e>
  42bdbb:	mov    QWORD PTR [rbx],rax
  42bdbe:	mov    rdi,rbp
  42bdc1:	call   405380 <malloc@plt>
  42bdc6:	mov    rbx,rax
  42bdc9:	test   rax,rax
  42bdcc:	je     42bde9 <flatcc_builder_finalize_buffer@@Base+0x49>
  42bdce:	mov    rdx,rbp
  42bdd1:	mov    rsi,rax
  42bdd4:	mov    rdi,r12
  42bdd7:	call   42bd40 <flatcc_builder_copy_buffer@@Base>
  42bddc:	test   rax,rax
  42bddf:	je     42be08 <flatcc_builder_finalize_buffer@@Base+0x68>
  42bde1:	mov    rax,rbx
  42bde4:	pop    rbx
  42bde5:	pop    rbp
  42bde6:	pop    r12
  42bde8:	ret    
  42bde9:	lea    rcx,[rip+0x1e910]        # 44a700 <fb_schema_table_missing@@Base+0x3240>
  42bdf0:	mov    edx,0x798
  42bdf5:	lea    rsi,[rip+0x1e4c4]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42bdfc:	lea    rdi,[rip+0xc556]        # 438359 <_IO_stdin_used@@Base+0xa359>
  42be03:	call   405300 <__assert_fail@plt>
  42be08:	lea    rcx,[rip+0x1e8f1]        # 44a700 <fb_schema_table_missing@@Base+0x3240>
  42be0f:	mov    edx,0x79c
  42be14:	lea    rsi,[rip+0x1e4a5]        # 44a2c0 <fb_schema_table_missing@@Base+0x2e00>
  42be1b:	lea    rdi,[rip+0xc537]        # 438359 <_IO_stdin_used@@Base+0xa359>
  42be22:	call   405300 <__assert_fail@plt>
  42be27:	nop    WORD PTR [rax+rax*1+0x0]

000000000042be30 <flatcc_builder_finalize_aligned_buffer@@Base>:
  42be30:	endbr64 
  42be34:	push   r13
  42be36:	push   r12
  42be38:	mov    r12,rsi
  42be3b:	push   rbp
  42be3c:	mov    rbp,rdi
  42be3f:	push   rbx
  42be40:	sub    rsp,0x18
  42be44:	mov    rax,QWORD PTR fs:0x28
  42be4d:	mov    QWORD PTR [rsp+0x8],rax
  42be52:	xor    eax,eax
  42be54:	call   42bc20 <flatcc_builder_get_buffer_size@@Base>
  42be59:	mov    rbx,rax
  42be5c:	test   r12,r12
  42be5f:	je     42be65 <flatcc_builder_finalize_aligned_buffer@@Base+0x35>
  42be61:	mov    QWORD PTR [r12],rax
  42be65:	mov    rdi,rbp
  42be68:	call   42bbb0 <flatcc_builder_get_buffer_alignment@@Base>
  42be6d:	movzx  eax,ax
  42be70:	lea    rdx,[rbx+rax*1-0x1]
  42be75:	mov    rbx,rax
  42be78:	neg    rbx
  42be7b:	and    rbx,rdx
  42be7e:	mov    esi,0x8
  42be83:	cmp    rax,0x8
  42be87:	cmovae rsi,rax
  42be8b:	mov    rdi,rsp
  42be8e:	mov    rdx,rbx
  42be91:	mov    QWORD PTR [rsp],0x0
  42be99:	call   405410 <posix_memalign@plt>
  42be9e:	test   eax,eax
  42bea0:	je     42bec8 <flatcc_builder_finalize_aligned_buffer@@Base+0x98>
  42bea2:	mov    rdi,QWORD PTR [rsp]
  42bea6:	test   rdi,rdi
  42bea9:	je     42beb0 <flatcc_builder_finalize_aligned_buffer@@Base+0x80>
  42beab:	call   405240 <free@plt>
  42beb0:	test   r12,r12
  42beb3:	je     42bf12 <flatcc_builder_finalize_aligned_buffer@@Base+0xe2>
  42beb5:	mov    QWORD PTR [r12],0x0
  42bebd:	xor    r13d,r13d
  42bec0:	jmp    42bee4 <flatcc_builder_finalize_aligned_buffer@@Base+0xb4>
  42bec2:	nop    WORD PTR [rax+rax*1+0x0]
  42bec8:	mov    r13,QWORD PTR [rsp]
  42becc:	test   r13,r13
  42becf:	je     42beb0 <flatcc_builder_finalize_aligned_buffer@@Base+0x80>
  42bed1:	mov    rdx,rbx
  42bed4:	mov    rsi,r13
  42bed7:	mov    rdi,rbp
  42beda:	call   42bd40 <flatcc_builder_copy_buffer@@Base>
  42bedf:	test   rax,rax
  42bee2:	je     42bf08 <flatcc_builder_finalize_aligned_buffer@@Base+0xd8>
  42bee4:	mov    rcx,QWORD PTR [rsp+0x8]
  42bee9:	xor    rcx,QWORD PTR fs:0x28
  42bef2:	mov    rax,r13
  42bef5:	jne    42bf0d <flatcc_builder_finalize_aligned_buffer@@Base+0xdd>
  42bef7:	add    rsp,0x18
  42befb:	pop    rbx
  42befc:	pop    rbp
  42befd:	pop    r12
  42beff:	pop    r13
  42bf01:	ret    
  42bf02:	nop    WORD PTR [rax+rax*1+0x0]
  42bf08:	mov    rdi,r13
  42bf0b:	jmp    42beab <flatcc_builder_finalize_aligned_buffer@@Base+0x7b>
  42bf0d:	call   4052d0 <__stack_chk_fail@plt>
  42bf12:	xor    r13d,r13d
  42bf15:	jmp    42bee4 <flatcc_builder_finalize_aligned_buffer@@Base+0xb4>
  42bf17:	nop    WORD PTR [rax+rax*1+0x0]

000000000042bf20 <flatcc_builder_aligned_alloc@@Base>:
  42bf20:	endbr64 
  42bf24:	sub    rsp,0x18
  42bf28:	mov    rax,QWORD PTR fs:0x28
  42bf31:	mov    QWORD PTR [rsp+0x8],rax
  42bf36:	xor    eax,eax
  42bf38:	mov    rdx,rsi
  42bf3b:	cmp    rdi,0x8
  42bf3f:	mov    esi,0x8
  42bf44:	cmovae rsi,rdi
  42bf48:	mov    rdi,rsp
  42bf4b:	mov    QWORD PTR [rsp],0x0
  42bf53:	call   405410 <posix_memalign@plt>
  42bf58:	test   eax,eax
  42bf5a:	mov    rax,QWORD PTR [rsp]
  42bf5e:	je     42bf6f <flatcc_builder_aligned_alloc@@Base+0x4f>
  42bf60:	test   rax,rax
  42bf63:	je     42bf6f <flatcc_builder_aligned_alloc@@Base+0x4f>
  42bf65:	mov    rdi,rax
  42bf68:	call   405240 <free@plt>
  42bf6d:	xor    eax,eax
  42bf6f:	mov    rcx,QWORD PTR [rsp+0x8]
  42bf74:	xor    rcx,QWORD PTR fs:0x28
  42bf7d:	jne    42bf84 <flatcc_builder_aligned_alloc@@Base+0x64>
  42bf7f:	add    rsp,0x18
  42bf83:	ret    
  42bf84:	call   4052d0 <__stack_chk_fail@plt>
  42bf89:	nop    DWORD PTR [rax+0x0]

000000000042bf90 <flatcc_builder_aligned_free@@Base>:
  42bf90:	endbr64 
  42bf94:	jmp    405240 <free@plt>
  42bf99:	nop    DWORD PTR [rax+0x0]

000000000042bfa0 <flatcc_builder_get_emit_context@@Base>:
  42bfa0:	endbr64 
  42bfa4:	mov    rax,QWORD PTR [rdi+0x38]
  42bfa8:	ret    
  42bfa9:	nop    DWORD PTR [rax+0x0]

000000000042bfb0 <flatcc_emitter_recycle_page@@Base>:
  42bfb0:	endbr64 
  42bfb4:	mov    rax,QWORD PTR [rdi]
  42bfb7:	cmp    rax,rsi
  42bfba:	je     42c00b <flatcc_emitter_recycle_page@@Base+0x5b>
  42bfbc:	cmp    QWORD PTR [rdi+0x8],rsi
  42bfc0:	je     42c00b <flatcc_emitter_recycle_page@@Base+0x5b>
  42bfc2:	mov    rdx,QWORD PTR [rsi+0xb88]
  42bfc9:	mov    rcx,QWORD PTR [rsi+0xb80]
  42bfd0:	mov    QWORD PTR [rcx+0xb88],rdx
  42bfd7:	mov    QWORD PTR [rdx+0xb80],rcx
  42bfde:	mov    rdx,QWORD PTR [rax+0xb88]
  42bfe5:	mov    QWORD PTR [rsi+0xb80],rax
  42bfec:	mov    QWORD PTR [rsi+0xb88],rdx
  42bff3:	mov    QWORD PTR [rdx+0xb80],rsi
  42bffa:	mov    rax,QWORD PTR [rsi+0xb80]
  42c001:	mov    QWORD PTR [rax+0xb88],rsi
  42c008:	xor    eax,eax
  42c00a:	ret    
  42c00b:	mov    eax,0xffffffff
  42c010:	ret    
  42c011:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c01c:	nop    DWORD PTR [rax+0x0]

000000000042c020 <flatcc_emitter_reset@@Base>:
  42c020:	endbr64 
  42c024:	mov    rax,QWORD PTR [rdi]
  42c027:	test   rax,rax
  42c02a:	je     42c100 <flatcc_emitter_reset@@Base+0xe0>
  42c030:	mov    rcx,QWORD PTR [rdi+0x40]
  42c034:	mov    rsi,QWORD PTR [rdi+0x30]
  42c038:	test   rcx,rcx
  42c03b:	cmove  rcx,rsi
  42c03f:	lea    rdx,[rax+0x5c0]
  42c046:	mov    QWORD PTR [rdi+0x10],rdx
  42c04a:	mov    QWORD PTR [rdi+0x20],rdx
  42c04e:	lea    rdx,[rcx+rcx*2]
  42c052:	shr    rdx,0x2
  42c056:	shr    rsi,0x2
  42c05a:	add    rdx,rsi
  42c05d:	mov    QWORD PTR [rdi+0x8],rax
  42c061:	mov    QWORD PTR [rdi+0x18],0x5c0
  42c069:	mov    QWORD PTR [rdi+0x28],0x5c0
  42c071:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42c07b:	mov    QWORD PTR [rdi+0x40],rdx
  42c07f:	add    rdx,rdx
  42c082:	mov    QWORD PTR [rdi+0x30],0x0
  42c08a:	cmp    rdx,QWORD PTR [rdi+0x38]
  42c08e:	jae    42c100 <flatcc_emitter_reset@@Base+0xe0>
  42c090:	push   rbx
  42c091:	mov    rbx,rdi
  42c094:	mov    rdi,QWORD PTR [rax+0xb80]
  42c09b:	cmp    rax,rdi
  42c09e:	jne    42c0b8 <flatcc_emitter_reset@@Base+0x98>
  42c0a0:	jmp    42c0f4 <flatcc_emitter_reset@@Base+0xd4>
  42c0a2:	nop    WORD PTR [rax+rax*1+0x0]
  42c0a8:	mov    rax,QWORD PTR [rbx+0x8]
  42c0ac:	mov    rdi,QWORD PTR [rax+0xb80]
  42c0b3:	cmp    rdi,QWORD PTR [rbx]
  42c0b6:	je     42c0f4 <flatcc_emitter_reset@@Base+0xd4>
  42c0b8:	mov    rdx,QWORD PTR [rdi+0xb80]
  42c0bf:	mov    QWORD PTR [rax+0xb80],rdx
  42c0c6:	mov    rdx,QWORD PTR [rdi+0xb80]
  42c0cd:	mov    QWORD PTR [rdx+0xb88],rax
  42c0d4:	call   405240 <free@plt>
  42c0d9:	mov    rax,QWORD PTR [rbx+0x38]
  42c0dd:	mov    rcx,QWORD PTR [rbx+0x40]
  42c0e1:	sub    rax,0xb80
  42c0e7:	lea    rdx,[rcx+rcx*1]
  42c0eb:	mov    QWORD PTR [rbx+0x38],rax
  42c0ef:	cmp    rax,rdx
  42c0f2:	ja     42c0a8 <flatcc_emitter_reset@@Base+0x88>
  42c0f4:	pop    rbx
  42c0f5:	ret    
  42c0f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c100:	ret    
  42c101:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c10c:	nop    DWORD PTR [rax+0x0]

000000000042c110 <flatcc_emitter_clear@@Base>:
  42c110:	endbr64 
  42c114:	mov    rax,QWORD PTR [rdi]
  42c117:	test   rax,rax
  42c11a:	je     42c198 <flatcc_emitter_clear@@Base+0x88>
  42c11c:	push   rbp
  42c11d:	mov    rbp,rdi
  42c120:	push   rbx
  42c121:	sub    rsp,0x8
  42c125:	mov    rdx,QWORD PTR [rax+0xb88]
  42c12c:	mov    QWORD PTR [rdx+0xb80],0x0
  42c137:	mov    rbx,QWORD PTR [rax+0xb80]
  42c13e:	test   rbx,rbx
  42c141:	jne    42c14b <flatcc_emitter_clear@@Base+0x3b>
  42c143:	jmp    42c1a0 <flatcc_emitter_clear@@Base+0x90>
  42c145:	nop    DWORD PTR [rax]
  42c148:	mov    rbx,rax
  42c14b:	mov    rdi,QWORD PTR [rbx+0xb88]
  42c152:	call   405240 <free@plt>
  42c157:	mov    rax,QWORD PTR [rbx+0xb80]
  42c15e:	test   rax,rax
  42c161:	jne    42c148 <flatcc_emitter_clear@@Base+0x38>
  42c163:	mov    rdi,rbx
  42c166:	call   405240 <free@plt>
  42c16b:	mov    QWORD PTR [rbp+0x40],0x0
  42c173:	vpxor  xmm0,xmm0,xmm0
  42c177:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  42c17c:	vmovups XMMWORD PTR [rbp+0x10],xmm0
  42c181:	vmovups XMMWORD PTR [rbp+0x20],xmm0
  42c186:	vmovups XMMWORD PTR [rbp+0x30],xmm0
  42c18b:	add    rsp,0x8
  42c18f:	pop    rbx
  42c190:	pop    rbp
  42c191:	ret    
  42c192:	nop    WORD PTR [rax+rax*1+0x0]
  42c198:	ret    
  42c199:	nop    DWORD PTR [rax+0x0]
  42c1a0:	mov    rbx,rax
  42c1a3:	jmp    42c163 <flatcc_emitter_clear@@Base+0x53>
  42c1a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042c1b0 <flatcc_emitter@@Base>:
  42c1b0:	endbr64 
  42c1b4:	push   r15
  42c1b6:	push   r14
  42c1b8:	push   r13
  42c1ba:	push   r12
  42c1bc:	push   rbp
  42c1bd:	mov    rbp,rsi
  42c1c0:	push   rbx
  42c1c1:	mov    rbx,rdi
  42c1c4:	sub    rsp,0x18
  42c1c8:	add    QWORD PTR [rdi+0x30],r8
  42c1cc:	test   ecx,ecx
  42c1ce:	js     42c3e0 <flatcc_emitter@@Base+0x230>
  42c1d4:	mov    rax,QWORD PTR [rdi+0x28]
  42c1d8:	cmp    rax,r8
  42c1db:	jae    42c268 <flatcc_emitter@@Base+0xb8>
  42c1e1:	test   edx,edx
  42c1e3:	je     42c253 <flatcc_emitter@@Base+0xa3>
  42c1e5:	lea    r14d,[rdx-0x1]
  42c1e9:	inc    r14
  42c1ec:	shl    r14,0x4
  42c1f0:	lea    rax,[rbp+r14*1+0x0]
  42c1f5:	mov    QWORD PTR [rsp+0x8],rax
  42c1fa:	nop    WORD PTR [rax+rax*1+0x0]
  42c200:	mov    r15,QWORD PTR [rbp+0x8]
  42c204:	mov    r13,QWORD PTR [rbp+0x0]
  42c208:	test   r15,r15
  42c20b:	je     42c248 <flatcc_emitter@@Base+0x98>
  42c20d:	nop    DWORD PTR [rax]
  42c210:	mov    r12,QWORD PTR [rbx+0x28]
  42c214:	cmp    r15,r12
  42c217:	jbe    42c310 <flatcc_emitter@@Base+0x160>
  42c21d:	test   r12,r12
  42c220:	je     42c2b8 <flatcc_emitter@@Base+0x108>
  42c226:	sub    r15,r12
  42c229:	mov    rdi,QWORD PTR [rbx+0x20]
  42c22d:	mov    rsi,r13
  42c230:	mov    rdx,r12
  42c233:	call   405370 <memcpy@plt>
  42c238:	add    r13,r12
  42c23b:	add    QWORD PTR [rbx+0x20],r12
  42c23f:	sub    QWORD PTR [rbx+0x28],r12
  42c243:	test   r15,r15
  42c246:	jne    42c210 <flatcc_emitter@@Base+0x60>
  42c248:	add    rbp,0x10
  42c24c:	cmp    rbp,QWORD PTR [rsp+0x8]
  42c251:	jne    42c200 <flatcc_emitter@@Base+0x50>
  42c253:	add    rsp,0x18
  42c257:	pop    rbx
  42c258:	pop    rbp
  42c259:	pop    r12
  42c25b:	pop    r13
  42c25d:	pop    r14
  42c25f:	xor    eax,eax
  42c261:	pop    r15
  42c263:	ret    
  42c264:	nop    DWORD PTR [rax+0x0]
  42c268:	mov    rcx,QWORD PTR [rdi+0x20]
  42c26c:	sub    rax,r8
  42c26f:	lea    rsi,[rcx+r8*1]
  42c273:	mov    QWORD PTR [rdi+0x20],rsi
  42c277:	mov    QWORD PTR [rdi+0x28],rax
  42c27b:	test   edx,edx
  42c27d:	je     42c253 <flatcc_emitter@@Base+0xa3>
  42c27f:	lea    ebx,[rdx-0x1]
  42c282:	inc    rbx
  42c285:	shl    rbx,0x4
  42c289:	add    rbx,rbp
  42c28c:	nop    DWORD PTR [rax+0x0]
  42c290:	mov    rsi,QWORD PTR [rbp+0x0]
  42c294:	mov    rdx,QWORD PTR [rbp+0x8]
  42c298:	mov    rdi,rcx
  42c29b:	call   405370 <memcpy@plt>
  42c2a0:	mov    rcx,QWORD PTR [rbp+0x8]
  42c2a4:	add    rbp,0x10
  42c2a8:	add    rcx,rax
  42c2ab:	cmp    rbp,rbx
  42c2ae:	jne    42c290 <flatcc_emitter@@Base+0xe0>
  42c2b0:	jmp    42c253 <flatcc_emitter@@Base+0xa3>
  42c2b2:	nop    WORD PTR [rax+rax*1+0x0]
  42c2b8:	mov    r12,QWORD PTR [rbx+0x8]
  42c2bc:	test   r12,r12
  42c2bf:	je     42c368 <flatcc_emitter@@Base+0x1b8>
  42c2c5:	mov    rax,QWORD PTR [r12+0xb80]
  42c2cd:	mov    r14,QWORD PTR [rbx]
  42c2d0:	cmp    rax,r14
  42c2d3:	je     42c320 <flatcc_emitter@@Base+0x170>
  42c2d5:	mov    QWORD PTR [rbx+0x8],rax
  42c2d9:	mov    QWORD PTR [rbx+0x28],0xb80
  42c2e1:	mov    rdx,QWORD PTR [rax+0xb88]
  42c2e8:	mov    QWORD PTR [rbx+0x20],rax
  42c2ec:	mov    edx,DWORD PTR [rdx+0xb90]
  42c2f2:	mov    r12,QWORD PTR [rbx+0x28]
  42c2f6:	add    edx,0xb80
  42c2fc:	mov    DWORD PTR [rax+0xb90],edx
  42c302:	cmp    r15,r12
  42c305:	ja     42c21d <flatcc_emitter@@Base+0x6d>
  42c30b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c310:	mov    r12,r15
  42c313:	xor    r15d,r15d
  42c316:	jmp    42c229 <flatcc_emitter@@Base+0x79>
  42c31b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c320:	mov    edi,0xb98
  42c325:	call   405380 <malloc@plt>
  42c32a:	test   rax,rax
  42c32d:	je     42c3c8 <flatcc_emitter@@Base+0x218>
  42c333:	add    QWORD PTR [rbx+0x38],0xb80
  42c33b:	mov    QWORD PTR [rax+0xb88],r12
  42c342:	mov    QWORD PTR [rax+0xb80],r14
  42c349:	mov    QWORD PTR [r14+0xb88],rax
  42c350:	mov    QWORD PTR [r12+0xb80],rax
  42c358:	mov    QWORD PTR [rbx+0x8],rax
  42c35c:	jmp    42c2d9 <flatcc_emitter@@Base+0x129>
  42c361:	nop    DWORD PTR [rax+0x0]
  42c368:	mov    edi,0xb98
  42c36d:	call   405380 <malloc@plt>
  42c372:	test   rax,rax
  42c375:	je     42c3c8 <flatcc_emitter@@Base+0x218>
  42c377:	lea    rdx,[rax+0x5c0]
  42c37e:	add    QWORD PTR [rbx+0x38],0xb80
  42c386:	mov    QWORD PTR [rbx],rax
  42c389:	mov    QWORD PTR [rbx+0x8],rax
  42c38d:	mov    QWORD PTR [rax+0xb80],rax
  42c394:	mov    QWORD PTR [rax+0xb88],rax
  42c39b:	mov    QWORD PTR [rbx+0x10],rdx
  42c39f:	mov    QWORD PTR [rbx+0x20],rdx
  42c3a3:	mov    QWORD PTR [rbx+0x18],0x5c0
  42c3ab:	mov    QWORD PTR [rbx+0x28],0x5c0
  42c3b3:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42c3bd:	jmp    42c210 <flatcc_emitter@@Base+0x60>
  42c3c2:	nop    WORD PTR [rax+rax*1+0x0]
  42c3c8:	add    rsp,0x18
  42c3cc:	pop    rbx
  42c3cd:	pop    rbp
  42c3ce:	pop    r12
  42c3d0:	pop    r13
  42c3d2:	pop    r14
  42c3d4:	mov    eax,0xffffffff
  42c3d9:	pop    r15
  42c3db:	ret    
  42c3dc:	nop    DWORD PTR [rax+0x0]
  42c3e0:	mov    rax,QWORD PTR [rdi+0x18]
  42c3e4:	cmp    rax,r8
  42c3e7:	jae    42c590 <flatcc_emitter@@Base+0x3e0>
  42c3ed:	movsxd rax,edx
  42c3f0:	shl    rax,0x4
  42c3f4:	add    rbp,rax
  42c3f7:	mov    edx,edx
  42c3f9:	shl    rdx,0x4
  42c3fd:	mov    rax,rbp
  42c400:	sub    rax,rdx
  42c403:	mov    QWORD PTR [rsp+0x8],rax
  42c408:	nop    DWORD PTR [rax+rax*1+0x0]
  42c410:	cmp    rbp,QWORD PTR [rsp+0x8]
  42c415:	je     42c253 <flatcc_emitter@@Base+0xa3>
  42c41b:	sub    rbp,0x10
  42c41f:	mov    r12,QWORD PTR [rbp+0x8]
  42c423:	mov    r13,QWORD PTR [rbp+0x0]
  42c427:	add    r13,r12
  42c42a:	test   r12,r12
  42c42d:	je     42c410 <flatcc_emitter@@Base+0x260>
  42c42f:	mov    rdx,QWORD PTR [rbx+0x18]
  42c433:	cmp    rdx,r12
  42c436:	jae    42c470 <flatcc_emitter@@Base+0x2c0>
  42c438:	test   rdx,rdx
  42c43b:	je     42c480 <flatcc_emitter@@Base+0x2d0>
  42c43d:	sub    r12,rdx
  42c440:	xor    ecx,ecx
  42c442:	mov    rdi,QWORD PTR [rbx+0x10]
  42c446:	mov    rax,rdx
  42c449:	neg    rax
  42c44c:	add    rdi,rax
  42c44f:	mov    QWORD PTR [rbx+0x10],rdi
  42c453:	mov    QWORD PTR [rbx+0x18],rcx
  42c457:	add    r13,rax
  42c45a:	mov    rsi,r13
  42c45d:	call   405370 <memcpy@plt>
  42c462:	test   r12,r12
  42c465:	je     42c410 <flatcc_emitter@@Base+0x260>
  42c467:	mov    rdx,QWORD PTR [rbx+0x18]
  42c46b:	cmp    rdx,r12
  42c46e:	jb     42c438 <flatcc_emitter@@Base+0x288>
  42c470:	mov    rcx,rdx
  42c473:	sub    rcx,r12
  42c476:	mov    rdx,r12
  42c479:	xor    r12d,r12d
  42c47c:	jmp    42c442 <flatcc_emitter@@Base+0x292>
  42c47e:	xchg   ax,ax
  42c480:	mov    r15,QWORD PTR [rbx]
  42c483:	test   r15,r15
  42c486:	je     42c528 <flatcc_emitter@@Base+0x378>
  42c48c:	mov    rax,QWORD PTR [r15+0xb88]
  42c493:	mov    r14,QWORD PTR [rbx+0x8]
  42c497:	cmp    rax,r14
  42c49a:	je     42c4e8 <flatcc_emitter@@Base+0x338>
  42c49c:	mov    edx,DWORD PTR [r15+0xb90]
  42c4a3:	sub    edx,0xb80
  42c4a9:	mov    DWORD PTR [rax+0xb90],edx
  42c4af:	mov    QWORD PTR [rbx],rax
  42c4b2:	lea    rdx,[rax+0xb80]
  42c4b9:	mov    QWORD PTR [rbx+0x10],rdx
  42c4bd:	mov    rdx,QWORD PTR [rax+0xb80]
  42c4c4:	mov    QWORD PTR [rbx+0x18],0xb80
  42c4cc:	mov    edx,DWORD PTR [rdx+0xb90]
  42c4d2:	sub    edx,0xb80
  42c4d8:	mov    DWORD PTR [rax+0xb90],edx
  42c4de:	jmp    42c42f <flatcc_emitter@@Base+0x27f>
  42c4e3:	nop    DWORD PTR [rax+rax*1+0x0]
  42c4e8:	mov    edi,0xb98
  42c4ed:	call   405380 <malloc@plt>
  42c4f2:	test   rax,rax
  42c4f5:	je     42c3c8 <flatcc_emitter@@Base+0x218>
  42c4fb:	add    QWORD PTR [rbx+0x38],0xb80
  42c503:	mov    QWORD PTR [rax+0xb88],r14
  42c50a:	mov    QWORD PTR [rax+0xb80],r15
  42c511:	mov    QWORD PTR [r15+0xb88],rax
  42c518:	mov    QWORD PTR [r14+0xb80],rax
  42c51f:	mov    QWORD PTR [rbx],rax
  42c522:	jmp    42c4b2 <flatcc_emitter@@Base+0x302>
  42c524:	nop    DWORD PTR [rax+0x0]
  42c528:	mov    edi,0xb98
  42c52d:	call   405380 <malloc@plt>
  42c532:	test   rax,rax
  42c535:	je     42c3c8 <flatcc_emitter@@Base+0x218>
  42c53b:	lea    rdx,[rax+0x5c0]
  42c542:	add    QWORD PTR [rbx+0x38],0xb80
  42c54a:	mov    QWORD PTR [rbx],rax
  42c54d:	mov    QWORD PTR [rbx+0x8],rax
  42c551:	mov    QWORD PTR [rax+0xb80],rax
  42c558:	mov    QWORD PTR [rax+0xb88],rax
  42c55f:	mov    QWORD PTR [rbx+0x10],rdx
  42c563:	mov    QWORD PTR [rbx+0x20],rdx
  42c567:	mov    QWORD PTR [rbx+0x18],0x5c0
  42c56f:	mov    QWORD PTR [rbx+0x28],0x5c0
  42c577:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42c581:	jmp    42c42f <flatcc_emitter@@Base+0x27f>
  42c586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c590:	mov    rcx,QWORD PTR [rdi+0x10]
  42c594:	sub    rax,r8
  42c597:	sub    rcx,r8
  42c59a:	mov    QWORD PTR [rdi+0x10],rcx
  42c59e:	mov    QWORD PTR [rdi+0x18],rax
  42c5a2:	jmp    42c27b <flatcc_emitter@@Base+0xcb>
  42c5a7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c5b0 <flatcc_emitter_copy_buffer@@Base>:
  42c5b0:	endbr64 
  42c5b4:	mov    rax,QWORD PTR [rdi+0x30]
  42c5b8:	cmp    rax,rdx
  42c5bb:	ja     42c660 <flatcc_emitter_copy_buffer@@Base+0xb0>
  42c5c1:	mov    rcx,QWORD PTR [rdi]
  42c5c4:	test   rcx,rcx
  42c5c7:	je     42c662 <flatcc_emitter_copy_buffer@@Base+0xb2>
  42c5cd:	push   rbp
  42c5ce:	mov    r8,rsi
  42c5d1:	mov    rbp,rdi
  42c5d4:	push   rbx
  42c5d5:	sub    rsp,0x8
  42c5d9:	mov    rsi,QWORD PTR [rdi+0x10]
  42c5dd:	cmp    rcx,QWORD PTR [rdi+0x8]
  42c5e1:	je     42c670 <flatcc_emitter_copy_buffer@@Base+0xc0>
  42c5e7:	mov    ecx,0xb80
  42c5ec:	mov    rbx,rcx
  42c5ef:	sub    rbx,QWORD PTR [rdi+0x18]
  42c5f3:	mov    rdx,rbx
  42c5f6:	mov    rdi,r8
  42c5f9:	call   405370 <memcpy@plt>
  42c5fe:	lea    rcx,[rax+rbx*1]
  42c602:	mov    rax,QWORD PTR [rbp+0x0]
  42c606:	mov    rbx,QWORD PTR [rax+0xb80]
  42c60d:	cmp    rbx,QWORD PTR [rbp+0x8]
  42c611:	je     42c63f <flatcc_emitter_copy_buffer@@Base+0x8f>
  42c613:	nop    DWORD PTR [rax+rax*1+0x0]
  42c618:	mov    rsi,rbx
  42c61b:	mov    rdi,rcx
  42c61e:	mov    edx,0xb80
  42c623:	call   405370 <memcpy@plt>
  42c628:	mov    rbx,QWORD PTR [rbx+0xb80]
  42c62f:	mov    rcx,rax
  42c632:	add    rcx,0xb80
  42c639:	cmp    QWORD PTR [rbp+0x8],rbx
  42c63d:	jne    42c618 <flatcc_emitter_copy_buffer@@Base+0x68>
  42c63f:	mov    edx,0xb80
  42c644:	sub    rdx,QWORD PTR [rbp+0x28]
  42c648:	mov    rsi,rbx
  42c64b:	mov    rdi,rcx
  42c64e:	call   405370 <memcpy@plt>
  42c653:	add    rsp,0x8
  42c657:	mov    rcx,rax
  42c65a:	pop    rbx
  42c65b:	mov    rax,rcx
  42c65e:	pop    rbp
  42c65f:	ret    
  42c660:	xor    ecx,ecx
  42c662:	mov    rax,rcx
  42c665:	ret    
  42c666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c670:	mov    rdx,rax
  42c673:	mov    rdi,r8
  42c676:	call   405370 <memcpy@plt>
  42c67b:	add    rsp,0x8
  42c67f:	mov    rcx,rax
  42c682:	pop    rbx
  42c683:	mov    rax,rcx
  42c686:	pop    rbp
  42c687:	ret    
  42c688:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c690 <cmetrohash64_1@@Base>:
  42c690:	endbr64 
  42c694:	push   r13
  42c696:	mov    edx,edx
  42c698:	mov    r10d,0xc83a91e1
  42c69e:	push   r12
  42c6a0:	imul   rdx,r10
  42c6a4:	movabs r8,0x60e25d3baf065edb
  42c6ae:	push   rbp
  42c6af:	add    r8,rsi
  42c6b2:	lea    rbp,[rdi+rsi*1]
  42c6b6:	push   rbx
  42c6b7:	add    r8,rdx
  42c6ba:	cmp    rsi,0x1f
  42c6be:	jbe    42c79f <cmetrohash64_1@@Base+0x10f>
  42c6c4:	lea    rbx,[rbp-0x20]
  42c6c8:	mov    r12,r8
  42c6cb:	mov    r13,r8
  42c6ce:	mov    rsi,r8
  42c6d1:	mov    r9,r8
  42c6d4:	mov    r11d,0x8648dbdb
  42c6da:	nop    WORD PTR [rax+rax*1+0x0]
  42c6e0:	mov    rax,QWORD PTR [rdi]
  42c6e3:	imul   rdx,QWORD PTR [rdi+0x10],0x7bdec03b
  42c6eb:	imul   rax,r10
  42c6ef:	add    rdi,0x20
  42c6f3:	add    rdx,r13
  42c6f6:	add    r9,rax
  42c6f9:	mov    rax,QWORD PTR [rdi-0x18]
  42c6fd:	rorx   r9,r9,0x1d
  42c703:	imul   rax,r11
  42c707:	add    r9,r13
  42c70a:	rorx   rdx,rdx,0x1d
  42c710:	add    rsi,rax
  42c713:	imul   rax,QWORD PTR [rdi-0x8],0x2f5870a5
  42c71b:	rorx   rsi,rsi,0x1d
  42c721:	add    rsi,r12
  42c724:	add    rax,r12
  42c727:	rorx   rax,rax,0x1d
  42c72d:	lea    r13,[rdx+r9*1]
  42c731:	lea    r12,[rax+rsi*1]
  42c735:	cmp    rdi,rbx
  42c738:	jbe    42c6e0 <cmetrohash64_1@@Base+0x50>
  42c73a:	lea    rdx,[r9+r12*1]
  42c73e:	imul   rdx,r10
  42c742:	add    rdx,rsi
  42c745:	rorx   rdx,rdx,0x21
  42c74b:	imul   rdx,r11
  42c74f:	xor    rdx,r13
  42c752:	lea    rax,[rsi+rdx*1]
  42c756:	imul   rax,r11
  42c75a:	lea    rbx,[r9+rdx*1]
  42c75e:	imul   rbx,r10
  42c762:	add    rax,r9
  42c765:	rorx   rax,rax,0x21
  42c76b:	imul   rax,r10
  42c76f:	xor    r9,rsi
  42c772:	xor    rax,r12
  42c775:	add    rbx,rax
  42c778:	add    rsi,rax
  42c77b:	rorx   rbx,rbx,0x21
  42c781:	imul   rbx,r11
  42c785:	imul   r11,rsi
  42c789:	xor    r9,rbx
  42c78c:	add    r11,rdx
  42c78f:	rorx   r11,r11,0x21
  42c795:	imul   r10,r11
  42c799:	xor    r10,r9
  42c79c:	add    r8,r10
  42c79f:	mov    rax,rbp
  42c7a2:	sub    rax,rdi
  42c7a5:	cmp    rax,0xf
  42c7a9:	jle    42c820 <cmetrohash64_1@@Base+0x190>
  42c7ab:	mov    eax,0xc83a91e1
  42c7b0:	imul   rax,QWORD PTR [rdi]
  42c7b4:	mov    esi,0x8648dbdb
  42c7b9:	movabs rdx,0x6907a4ca322e467b
  42c7c3:	add    rax,r8
  42c7c6:	rorx   rax,rax,0x21
  42c7cc:	mov    r10,rax
  42c7cf:	imul   r10,rsi
  42c7d3:	imul   rsi,QWORD PTR [rdi+0x8]
  42c7d8:	imul   rax,rdx
  42c7dc:	add    rdi,0x10
  42c7e0:	add    rsi,r8
  42c7e3:	rorx   rsi,rsi,0x21
  42c7e9:	imul   r9,rsi,0x7bdec03b
  42c7f0:	rorx   rdx,rax,0x23
  42c7f6:	movabs rax,0x16e8b05e33f3b607
  42c800:	imul   rsi,rax
  42c804:	add    rdx,r9
  42c807:	xor    rdx,r10
  42c80a:	rorx   rsi,rsi,0x23
  42c810:	lea    rax,[rdx+rsi*1]
  42c814:	xor    rax,r9
  42c817:	add    r8,rax
  42c81a:	mov    rax,rbp
  42c81d:	sub    rax,rdi
  42c820:	cmp    rax,0x7
  42c824:	jle    42c84c <cmetrohash64_1@@Base+0x1bc>
  42c826:	imul   rax,QWORD PTR [rdi],0x2f5870a5
  42c82d:	mov    edx,0x8648dbdb
  42c832:	add    rdi,0x8
  42c836:	add    rax,r8
  42c839:	rorx   r8,rax,0x21
  42c83f:	imul   r8,rdx
  42c843:	xor    r8,rax
  42c846:	mov    rax,rbp
  42c849:	sub    rax,rdi
  42c84c:	cmp    rax,0x3
  42c850:	jle    42c87a <cmetrohash64_1@@Base+0x1ea>
  42c852:	mov    eax,DWORD PTR [rdi]
  42c854:	mov    edx,0x8648dbdb
  42c859:	imul   rax,rax,0x2f5870a5
  42c860:	add    rdi,0x4
  42c864:	add    rax,r8
  42c867:	rorx   r8,rax,0xf
  42c86d:	imul   r8,rdx
  42c871:	xor    r8,rax
  42c874:	mov    rax,rbp
  42c877:	sub    rax,rdi
  42c87a:	cmp    rax,0x1
  42c87e:	jle    42c8a9 <cmetrohash64_1@@Base+0x219>
  42c880:	movzx  eax,WORD PTR [rdi]
  42c883:	mov    edx,0x8648dbdb
  42c888:	imul   rax,rax,0x2f5870a5
  42c88f:	add    rdi,0x2
  42c893:	add    rax,r8
  42c896:	rorx   r8,rax,0xd
  42c89c:	imul   r8,rdx
  42c8a0:	xor    r8,rax
  42c8a3:	mov    rax,rbp
  42c8a6:	sub    rax,rdi
  42c8a9:	test   rax,rax
  42c8ac:	jle    42c8cd <cmetrohash64_1@@Base+0x23d>
  42c8ae:	movzx  eax,BYTE PTR [rdi]
  42c8b1:	mov    edx,0x8648dbdb
  42c8b6:	imul   rax,rax,0x2f5870a5
  42c8bd:	add    rax,r8
  42c8c0:	rorx   r8,rax,0x19
  42c8c6:	imul   r8,rdx
  42c8ca:	xor    r8,rax
  42c8cd:	rorx   rax,r8,0x21
  42c8d3:	xor    r8,rax
  42c8d6:	mov    eax,0xc83a91e1
  42c8db:	imul   r8,rax
  42c8df:	pop    rbx
  42c8e0:	pop    rbp
  42c8e1:	rorx   rax,r8,0x21
  42c8e7:	pop    r12
  42c8e9:	xor    r8,rax
  42c8ec:	mov    QWORD PTR [rcx],r8
  42c8ef:	pop    r13
  42c8f1:	ret    
  42c8f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c8fd:	nop    DWORD PTR [rax]

000000000042c900 <cmetrohash64_2@@Base>:
  42c900:	endbr64 
  42c904:	push   r13
  42c906:	mov    edx,edx
  42c908:	mov    r10d,0xd6d018f5
  42c90e:	push   r12
  42c910:	imul   rdx,r10
  42c914:	movabs r8,0x52bc33fedbe4cbb5
  42c91e:	push   rbp
  42c91f:	add    r8,rsi
  42c922:	lea    rbp,[rdi+rsi*1]
  42c926:	push   rbx
  42c927:	add    r8,rdx
  42c92a:	cmp    rsi,0x1f
  42c92e:	jbe    42ca0f <cmetrohash64_2@@Base+0x10f>
  42c934:	lea    rbx,[rbp-0x20]
  42c938:	mov    r12,r8
  42c93b:	mov    r13,r8
  42c93e:	mov    rsi,r8
  42c941:	mov    r9,r8
  42c944:	mov    r11d,0xa2aa033b
  42c94a:	nop    WORD PTR [rax+rax*1+0x0]
  42c950:	mov    rax,QWORD PTR [rdi]
  42c953:	imul   rdx,QWORD PTR [rdi+0x10],0x62992fc1
  42c95b:	imul   rax,r10
  42c95f:	add    rdi,0x20
  42c963:	add    rdx,r13
  42c966:	add    r9,rax
  42c969:	mov    rax,QWORD PTR [rdi-0x18]
  42c96d:	rorx   r9,r9,0x1d
  42c973:	imul   rax,r11
  42c977:	add    r9,r13
  42c97a:	rorx   rdx,rdx,0x1d
  42c980:	add    rsi,rax
  42c983:	imul   rax,QWORD PTR [rdi-0x8],0x30bc5b29
  42c98b:	rorx   rsi,rsi,0x1d
  42c991:	add    rsi,r12
  42c994:	add    rax,r12
  42c997:	rorx   rax,rax,0x1d
  42c99d:	lea    r13,[rdx+r9*1]
  42c9a1:	lea    r12,[rax+rsi*1]
  42c9a5:	cmp    rdi,rbx
  42c9a8:	jbe    42c950 <cmetrohash64_2@@Base+0x50>
  42c9aa:	lea    rdx,[r9+r12*1]
  42c9ae:	imul   rdx,r10
  42c9b2:	add    rdx,rsi
  42c9b5:	rorx   rdx,rdx,0x1e
  42c9bb:	imul   rdx,r11
  42c9bf:	xor    rdx,r13
  42c9c2:	lea    rax,[rsi+rdx*1]
  42c9c6:	imul   rax,r11
  42c9ca:	lea    rbx,[r9+rdx*1]
  42c9ce:	imul   rbx,r10
  42c9d2:	add    rax,r9
  42c9d5:	rorx   rax,rax,0x1e
  42c9db:	imul   rax,r10
  42c9df:	xor    r9,rsi
  42c9e2:	xor    rax,r12
  42c9e5:	add    rbx,rax
  42c9e8:	add    rsi,rax
  42c9eb:	rorx   rbx,rbx,0x1e
  42c9f1:	imul   rbx,r11
  42c9f5:	imul   r11,rsi
  42c9f9:	xor    r9,rbx
  42c9fc:	add    r11,rdx
  42c9ff:	rorx   r11,r11,0x1e
  42ca05:	imul   r10,r11
  42ca09:	xor    r10,r9
  42ca0c:	add    r8,r10
  42ca0f:	mov    rax,rbp
  42ca12:	sub    rax,rdi
  42ca15:	cmp    rax,0xf
  42ca19:	jle    42ca8c <cmetrohash64_2@@Base+0x18c>
  42ca1b:	imul   rax,QWORD PTR [rdi],0x62992fc1
  42ca22:	imul   rsi,QWORD PTR [rdi+0x8],0x62992fc1
  42ca2a:	movabs rdx,0x28e511fea41f163d
  42ca34:	add    rax,r8
  42ca37:	rorx   rax,rax,0x1d
  42ca3d:	imul   r10,rax,0x30bc5b29
  42ca44:	imul   rax,rdx
  42ca48:	add    rsi,r8
  42ca4b:	rorx   rsi,rsi,0x1d
  42ca51:	imul   r9,rsi,0x30bc5b29
  42ca58:	rorx   rdx,rax,0x22
  42ca5e:	movabs rax,0x9472cc564ae2c91
  42ca68:	imul   rsi,rax
  42ca6c:	add    rdx,r9
  42ca6f:	xor    rdx,r10
  42ca72:	rorx   rsi,rsi,0x22
  42ca78:	lea    rax,[rdx+rsi*1]
  42ca7c:	xor    rax,r9
  42ca7f:	add    rdi,0x10
  42ca83:	add    r8,rax
  42ca86:	mov    rax,rbp
  42ca89:	sub    rax,rdi
  42ca8c:	cmp    rax,0x7
  42ca90:	jle    42cab8 <cmetrohash64_2@@Base+0x1b8>
  42ca92:	imul   rax,QWORD PTR [rdi],0x30bc5b29
  42ca99:	mov    edx,0xa2aa033b
  42ca9e:	add    rdi,0x8
  42caa2:	add    rax,r8
  42caa5:	rorx   r8,rax,0x24
  42caab:	imul   r8,rdx
  42caaf:	xor    r8,rax
  42cab2:	mov    rax,rbp
  42cab5:	sub    rax,rdi
  42cab8:	cmp    rax,0x3
  42cabc:	jle    42cae6 <cmetrohash64_2@@Base+0x1e6>
  42cabe:	mov    eax,DWORD PTR [rdi]
  42cac0:	mov    edx,0xa2aa033b
  42cac5:	imul   rax,rax,0x30bc5b29
  42cacc:	add    rdi,0x4
  42cad0:	add    rax,r8
  42cad3:	rorx   r8,rax,0xf
  42cad9:	imul   r8,rdx
  42cadd:	xor    r8,rax
  42cae0:	mov    rax,rbp
  42cae3:	sub    rax,rdi
  42cae6:	cmp    rax,0x1
  42caea:	jle    42cb15 <cmetrohash64_2@@Base+0x215>
  42caec:	movzx  eax,WORD PTR [rdi]
  42caef:	mov    edx,0xa2aa033b
  42caf4:	imul   rax,rax,0x30bc5b29
  42cafb:	add    rdi,0x2
  42caff:	add    rax,r8
  42cb02:	rorx   r8,rax,0xf
  42cb08:	imul   r8,rdx
  42cb0c:	xor    r8,rax
  42cb0f:	mov    rax,rbp
  42cb12:	sub    rax,rdi
  42cb15:	test   rax,rax
  42cb18:	jle    42cb39 <cmetrohash64_2@@Base+0x239>
  42cb1a:	movzx  eax,BYTE PTR [rdi]
  42cb1d:	mov    edx,0xa2aa033b
  42cb22:	imul   rax,rax,0x30bc5b29
  42cb29:	add    rax,r8
  42cb2c:	rorx   r8,rax,0x17
  42cb32:	imul   r8,rdx
  42cb36:	xor    r8,rax
  42cb39:	rorx   rax,r8,0x1c
  42cb3f:	xor    r8,rax
  42cb42:	mov    eax,0xd6d018f5
  42cb47:	imul   r8,rax
  42cb4b:	pop    rbx
  42cb4c:	pop    rbp
  42cb4d:	rorx   rax,r8,0x1d
  42cb53:	pop    r12
  42cb55:	xor    r8,rax
  42cb58:	mov    QWORD PTR [rcx],r8
  42cb5b:	pop    r13
  42cb5d:	ret    
  42cb5e:	xchg   ax,ax
  42cb60:	push   rbx
  42cb61:	mov    rbx,rdi
  42cb64:	mov    rdi,QWORD PTR [rdi]
  42cb67:	test   rdi,rdi
  42cb6a:	je     42cb71 <cmetrohash64_2@@Base+0x271>
  42cb6c:	call   405240 <free@plt>
  42cb71:	vpxor  xmm0,xmm0,xmm0
  42cb75:	vmovups XMMWORD PTR [rbx],xmm0
  42cb79:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  42cb7e:	pop    rbx
  42cb7f:	ret    
  42cb80:	push   r15
  42cb82:	push   r14
  42cb84:	push   r13
  42cb86:	mov    r13,rdi
  42cb89:	push   r12
  42cb8b:	push   rbp
  42cb8c:	push   rbx
  42cb8d:	sub    rsp,0x28
  42cb91:	mov    QWORD PTR [rsp+0x8],rsi
  42cb96:	mov    r15,QWORD PTR [rdi]
  42cb99:	mov    rax,QWORD PTR fs:0x28
  42cba2:	mov    QWORD PTR [rsp+0x18],rax
  42cba7:	xor    eax,eax
  42cba9:	test   r15,r15
  42cbac:	je     42cc70 <cmetrohash64_2@@Base+0x370>
  42cbb2:	mov    r8,rdx
  42cbb5:	mov    rax,QWORD PTR [r13+0x18]
  42cbb9:	mov    rdi,rsi
  42cbbc:	lea    rcx,[rsp+0x10]
  42cbc1:	mov    edx,0x2f693b52
  42cbc6:	mov    rsi,r8
  42cbc9:	lea    r14,[rax-0x1]
  42cbcd:	mov    QWORD PTR [rsp],r8
  42cbd1:	call   42c690 <cmetrohash64_1@@Base>
  42cbd6:	mov    ebp,DWORD PTR [rsp+0x10]
  42cbda:	mov    rax,r14
  42cbdd:	and    rax,rbp
  42cbe0:	lea    r12,[r15+rax*8]
  42cbe4:	mov    rbx,QWORD PTR [r12]
  42cbe8:	test   rbx,rbx
  42cbeb:	je     42cc70 <cmetrohash64_2@@Base+0x370>
  42cbf1:	inc    rbp
  42cbf4:	mov    r8,QWORD PTR [rsp]
  42cbf8:	jmp    42cc16 <cmetrohash64_2@@Base+0x316>
  42cbfa:	nop    WORD PTR [rax+rax*1+0x0]
  42cc00:	mov    rax,rbp
  42cc03:	and    rax,r14
  42cc06:	lea    r12,[r15+rax*8]
  42cc0a:	mov    rbx,QWORD PTR [r12]
  42cc0e:	inc    rbp
  42cc11:	test   rbx,rbx
  42cc14:	je     42cc70 <cmetrohash64_2@@Base+0x370>
  42cc16:	cmp    rbx,0x2
  42cc1a:	je     42cc00 <cmetrohash64_2@@Base+0x300>
  42cc1c:	movsxd rax,DWORD PTR [rbx+0x10]
  42cc20:	cmp    r8,rax
  42cc23:	jne    42cc00 <cmetrohash64_2@@Base+0x300>
  42cc25:	mov    rsi,QWORD PTR [rbx+0x8]
  42cc29:	mov    rdi,QWORD PTR [rsp+0x8]
  42cc2e:	mov    rdx,r8
  42cc31:	mov    QWORD PTR [rsp],r8
  42cc35:	call   405330 <memcmp@plt>
  42cc3a:	test   eax,eax
  42cc3c:	mov    r8,QWORD PTR [rsp]
  42cc40:	jne    42cc00 <cmetrohash64_2@@Base+0x300>
  42cc42:	mov    QWORD PTR [r12],0x2
  42cc4a:	dec    QWORD PTR [r13+0x10]
  42cc4e:	mov    rcx,QWORD PTR [rsp+0x18]
  42cc53:	xor    rcx,QWORD PTR fs:0x28
  42cc5c:	mov    rax,rbx
  42cc5f:	jne    42cc74 <cmetrohash64_2@@Base+0x374>
  42cc61:	add    rsp,0x28
  42cc65:	pop    rbx
  42cc66:	pop    rbp
  42cc67:	pop    r12
  42cc69:	pop    r13
  42cc6b:	pop    r14
  42cc6d:	pop    r15
  42cc6f:	ret    
  42cc70:	xor    ebx,ebx
  42cc72:	jmp    42cc4e <cmetrohash64_2@@Base+0x34e>
  42cc74:	call   4052d0 <__stack_chk_fail@plt>
  42cc79:	nop    DWORD PTR [rax+0x0]
  42cc80:	push   r13
  42cc82:	push   r12
  42cc84:	push   rbp
  42cc85:	mov    rbp,rdi
  42cc88:	push   rbx
  42cc89:	sub    rsp,0x38
  42cc8d:	mov    rax,QWORD PTR fs:0x28
  42cc96:	mov    QWORD PTR [rsp+0x28],rax
  42cc9b:	xor    eax,eax
  42cc9d:	cmp    QWORD PTR [rdi+0x10],rsi
  42cca1:	cmovae rsi,QWORD PTR [rdi+0x10]
  42cca6:	mov    r12,QWORD PTR [rdi]
  42cca9:	cmp    rsi,0x2
  42ccad:	jbe    42cd90 <cmetrohash64_2@@Base+0x490>
  42ccb3:	mov    eax,0x4
  42ccb8:	nop    DWORD PTR [rax+rax*1+0x0]
  42ccc0:	lea    rbx,[rax+rax*1]
  42ccc4:	imul   rax,rax,0x166
  42cccb:	shr    rax,0x8
  42cccf:	mov    rdx,rax
  42ccd2:	mov    rax,rbx
  42ccd5:	cmp    rsi,rdx
  42ccd8:	ja     42ccc0 <cmetrohash64_2@@Base+0x3c0>
  42ccda:	mov    esi,0x8
  42ccdf:	mov    rdi,rbx
  42cce2:	call   405340 <calloc@plt>
  42cce7:	mov    QWORD PTR [rsp],rax
  42cceb:	test   rax,rax
  42ccee:	je     42cd9a <cmetrohash64_2@@Base+0x49a>
  42ccf4:	cmp    QWORD PTR [rbp+0x18],0x0
  42ccf9:	mov    QWORD PTR [rsp+0x8],0x0
  42cd02:	mov    QWORD PTR [rsp+0x18],rbx
  42cd07:	mov    QWORD PTR [rsp+0x10],0x0
  42cd10:	je     42cd4e <cmetrohash64_2@@Base+0x44e>
  42cd12:	xor    ebx,ebx
  42cd14:	mov    r13,rsp
  42cd17:	nop    WORD PTR [rax+rax*1+0x0]
  42cd20:	mov    rcx,QWORD PTR [r12+rbx*8]
  42cd24:	test   rcx,rcx
  42cd27:	je     42cd45 <cmetrohash64_2@@Base+0x445>
  42cd29:	cmp    rcx,0x2
  42cd2d:	je     42cd45 <cmetrohash64_2@@Base+0x445>
  42cd2f:	movsxd rdx,DWORD PTR [rcx+0x10]
  42cd33:	mov    rsi,QWORD PTR [rcx+0x8]
  42cd37:	mov    r8d,0x3
  42cd3d:	mov    rdi,r13
  42cd40:	call   42cdb0 <cmetrohash64_2@@Base+0x4b0>
  42cd45:	inc    rbx
  42cd48:	cmp    QWORD PTR [rbp+0x18],rbx
  42cd4c:	ja     42cd20 <cmetrohash64_2@@Base+0x420>
  42cd4e:	mov    rdi,rbp
  42cd51:	call   42cb60 <cmetrohash64_2@@Base+0x260>
  42cd56:	vmovdqa xmm0,XMMWORD PTR [rsp]
  42cd5b:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  42cd61:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  42cd66:	vmovups XMMWORD PTR [rbp+0x10],xmm1
  42cd6b:	xor    eax,eax
  42cd6d:	mov    rdi,QWORD PTR [rsp+0x28]
  42cd72:	xor    rdi,QWORD PTR fs:0x28
  42cd7b:	jne    42cda1 <cmetrohash64_2@@Base+0x4a1>
  42cd7d:	add    rsp,0x38
  42cd81:	pop    rbx
  42cd82:	pop    rbp
  42cd83:	pop    r12
  42cd85:	pop    r13
  42cd87:	ret    
  42cd88:	nop    DWORD PTR [rax+rax*1+0x0]
  42cd90:	mov    ebx,0x4
  42cd95:	jmp    42ccda <cmetrohash64_2@@Base+0x3da>
  42cd9a:	mov    eax,0xffffffff
  42cd9f:	jmp    42cd6d <cmetrohash64_2@@Base+0x46d>
  42cda1:	call   4052d0 <__stack_chk_fail@plt>
  42cda6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cdb0:	push   r15
  42cdb2:	push   r14
  42cdb4:	push   r13
  42cdb6:	mov    r13,rdx
  42cdb9:	push   r12
  42cdbb:	push   rbp
  42cdbc:	push   rbx
  42cdbd:	sub    rsp,0x48
  42cdc1:	mov    QWORD PTR [rsp+0x10],rsi
  42cdc6:	mov    QWORD PTR [rsp+0x8],rcx
  42cdcb:	mov    DWORD PTR [rsp+0x1c],r8d
  42cdd0:	mov    rdx,QWORD PTR fs:0x28
  42cdd9:	mov    QWORD PTR [rsp+0x38],rdx
  42cdde:	xor    edx,edx
  42cde0:	test   rcx,rcx
  42cde3:	je     42cfbe <cmetrohash64_2@@Base+0x6be>
  42cde9:	cmp    QWORD PTR [rsp+0x8],0x2
  42cdef:	je     42cf9f <cmetrohash64_2@@Base+0x69f>
  42cdf5:	cmp    QWORD PTR [rsp+0x8],0x1
  42cdfb:	je     42cfe2 <cmetrohash64_2@@Base+0x6e2>
  42ce01:	mov    r12,QWORD PTR [rdi+0x18]
  42ce05:	mov    rsi,QWORD PTR [rdi+0x10]
  42ce09:	imul   rax,r12,0xb3
  42ce10:	mov    r15,rdi
  42ce13:	shr    rax,0x8
  42ce17:	cmp    rsi,rax
  42ce1a:	jae    42cf00 <cmetrohash64_2@@Base+0x600>
  42ce20:	mov    rdi,QWORD PTR [rsp+0x10]
  42ce25:	lea    rcx,[rsp+0x30]
  42ce2a:	mov    edx,0x2f693b52
  42ce2f:	mov    rsi,r13
  42ce32:	mov    r14,QWORD PTR [r15]
  42ce35:	dec    r12
  42ce38:	call   42c690 <cmetrohash64_1@@Base>
  42ce3d:	mov    ebp,DWORD PTR [rsp+0x30]
  42ce41:	mov    rax,r12
  42ce44:	and    rax,rbp
  42ce47:	lea    rcx,[r14+rax*8]
  42ce4b:	mov    eax,DWORD PTR [rsp+0x1c]
  42ce4f:	sub    eax,0x2
  42ce52:	cmp    eax,0x1
  42ce55:	jbe    42cf50 <cmetrohash64_2@@Base+0x650>
  42ce5b:	mov    rbx,QWORD PTR [rcx]
  42ce5e:	inc    rbp
  42ce61:	xor    r11d,r11d
  42ce64:	test   rbx,rbx
  42ce67:	jne    42ce92 <cmetrohash64_2@@Base+0x592>
  42ce69:	jmp    42cf9a <cmetrohash64_2@@Base+0x69a>
  42ce6e:	xchg   ax,ax
  42ce70:	movsxd rax,DWORD PTR [rbx+0x10]
  42ce74:	cmp    r13,rax
  42ce77:	je     42cea8 <cmetrohash64_2@@Base+0x5a8>
  42ce79:	mov    rax,r12
  42ce7c:	and    rax,rbp
  42ce7f:	lea    rcx,[r14+rax*8]
  42ce83:	mov    rbx,QWORD PTR [rcx]
  42ce86:	inc    rbp
  42ce89:	test   rbx,rbx
  42ce8c:	je     42cf30 <cmetrohash64_2@@Base+0x630>
  42ce92:	cmp    rbx,0x2
  42ce96:	jne    42ce70 <cmetrohash64_2@@Base+0x570>
  42ce98:	test   r11,r11
  42ce9b:	cmove  r11,rcx
  42ce9f:	jmp    42ce79 <cmetrohash64_2@@Base+0x579>
  42cea1:	nop    DWORD PTR [rax+0x0]
  42cea8:	mov    rsi,QWORD PTR [rbx+0x8]
  42ceac:	mov    rdi,QWORD PTR [rsp+0x10]
  42ceb1:	mov    rdx,r13
  42ceb4:	mov    QWORD PTR [rsp+0x20],r11
  42ceb9:	mov    QWORD PTR [rsp+0x28],rcx
  42cebe:	call   405330 <memcmp@plt>
  42cec3:	test   eax,eax
  42cec5:	mov    r11,QWORD PTR [rsp+0x20]
  42ceca:	jne    42ce79 <cmetrohash64_2@@Base+0x579>
  42cecc:	mov    eax,DWORD PTR [rsp+0x1c]
  42ced0:	test   eax,eax
  42ced2:	je     42cf20 <cmetrohash64_2@@Base+0x620>
  42ced4:	mov    rdi,QWORD PTR [rsp+0x38]
  42ced9:	xor    rdi,QWORD PTR fs:0x28
  42cee2:	mov    rax,rbx
  42cee5:	jne    42cfdd <cmetrohash64_2@@Base+0x6dd>
  42ceeb:	add    rsp,0x48
  42ceef:	pop    rbx
  42cef0:	pop    rbp
  42cef1:	pop    r12
  42cef3:	pop    r13
  42cef5:	pop    r14
  42cef7:	pop    r15
  42cef9:	ret    
  42cefa:	nop    WORD PTR [rax+rax*1+0x0]
  42cf00:	add    rsi,rsi
  42cf03:	call   42cc80 <cmetrohash64_2@@Base+0x380>
  42cf08:	test   eax,eax
  42cf0a:	jne    42d001 <cmetrohash64_2@@Base+0x701>
  42cf10:	mov    r12,QWORD PTR [r15+0x18]
  42cf14:	jmp    42ce20 <cmetrohash64_2@@Base+0x520>
  42cf19:	nop    DWORD PTR [rax+0x0]
  42cf20:	mov    rax,QWORD PTR [rsp+0x8]
  42cf25:	mov    rcx,QWORD PTR [rsp+0x28]
  42cf2a:	mov    QWORD PTR [rcx],rax
  42cf2d:	jmp    42ced4 <cmetrohash64_2@@Base+0x5d4>
  42cf2f:	nop
  42cf30:	test   r11,r11
  42cf33:	cmove  r11,rcx
  42cf37:	mov    rax,QWORD PTR [rsp+0x8]
  42cf3c:	inc    QWORD PTR [r15+0x10]
  42cf40:	xor    ebx,ebx
  42cf42:	mov    QWORD PTR [r11],rax
  42cf45:	jmp    42ced4 <cmetrohash64_2@@Base+0x5d4>
  42cf47:	nop    WORD PTR [rax+rax*1+0x0]
  42cf50:	mov    rax,QWORD PTR [rcx]
  42cf53:	inc    QWORD PTR [r15+0x10]
  42cf57:	test   rax,rax
  42cf5a:	je     42cf8b <cmetrohash64_2@@Base+0x68b>
  42cf5c:	cmp    rax,0x2
  42cf60:	je     42cf8b <cmetrohash64_2@@Base+0x68b>
  42cf62:	inc    rbp
  42cf65:	jmp    42cf76 <cmetrohash64_2@@Base+0x676>
  42cf67:	nop    WORD PTR [rax+rax*1+0x0]
  42cf70:	cmp    rax,0x2
  42cf74:	je     42cf8b <cmetrohash64_2@@Base+0x68b>
  42cf76:	mov    rax,r12
  42cf79:	and    rax,rbp
  42cf7c:	lea    rcx,[r14+rax*8]
  42cf80:	mov    rax,QWORD PTR [rcx]
  42cf83:	inc    rbp
  42cf86:	test   rax,rax
  42cf89:	jne    42cf70 <cmetrohash64_2@@Base+0x670>
  42cf8b:	mov    rax,QWORD PTR [rsp+0x8]
  42cf90:	xor    ebx,ebx
  42cf92:	mov    QWORD PTR [rcx],rax
  42cf95:	jmp    42ced4 <cmetrohash64_2@@Base+0x5d4>
  42cf9a:	mov    r11,rcx
  42cf9d:	jmp    42cf37 <cmetrohash64_2@@Base+0x637>
  42cf9f:	lea    rcx,[rip+0x1dffa]        # 44afa0 <flatcc_builder_padding_base@@Base+0x200>
  42cfa6:	mov    edx,0x73
  42cfab:	lea    rsi,[rip+0x1a34e]        # 447300 <_IO_stdin_used@@Base+0x19300>
  42cfb2:	lea    rdi,[rip+0x1a401]        # 4473ba <_IO_stdin_used@@Base+0x193ba>
  42cfb9:	call   405300 <__assert_fail@plt>
  42cfbe:	lea    rcx,[rip+0x1dfdb]        # 44afa0 <flatcc_builder_padding_base@@Base+0x200>
  42cfc5:	mov    edx,0x72
  42cfca:	lea    rsi,[rip+0x1a32f]        # 447300 <_IO_stdin_used@@Base+0x19300>
  42cfd1:	lea    rdi,[rip+0x1a3cb]        # 4473a3 <_IO_stdin_used@@Base+0x193a3>
  42cfd8:	call   405300 <__assert_fail@plt>
  42cfdd:	call   4052d0 <__stack_chk_fail@plt>
  42cfe2:	lea    rcx,[rip+0x1dfb7]        # 44afa0 <flatcc_builder_padding_base@@Base+0x200>
  42cfe9:	mov    edx,0x74
  42cfee:	lea    rsi,[rip+0x1a30b]        # 447300 <_IO_stdin_used@@Base+0x19300>
  42cff5:	lea    rdi,[rip+0x1a3d5]        # 4473d1 <_IO_stdin_used@@Base+0x193d1>
  42cffc:	call   405300 <__assert_fail@plt>
  42d001:	mov    rax,QWORD PTR [rip+0x24fe0]        # 451fe8 <stderr@GLIBC_2.2.5>
  42d008:	lea    rcx,[rip+0x1a361]        # 447370 <_IO_stdin_used@@Base+0x19370>
  42d00f:	mov    rdi,QWORD PTR [rax]
  42d012:	lea    rdx,[rip+0x1a3cd]        # 4473e6 <_IO_stdin_used@@Base+0x193e6>
  42d019:	mov    esi,0x1
  42d01e:	xor    eax,eax
  42d020:	call   405400 <__fprintf_chk@plt>
  42d025:	mov    edi,0x1
  42d02a:	call   4053e0 <exit@plt>
  42d02f:	nop
  42d030:	push   r15
  42d032:	push   r14
  42d034:	push   r13
  42d036:	push   r12
  42d038:	push   rbp
  42d039:	push   rbx
  42d03a:	sub    rsp,0x18
  42d03e:	mov    rax,QWORD PTR fs:0x28
  42d047:	mov    QWORD PTR [rsp+0x8],rax
  42d04c:	xor    eax,eax
  42d04e:	test   rdi,rdi
  42d051:	je     42d0f0 <cmetrohash64_2@@Base+0x7f0>
  42d057:	mov    r12,QWORD PTR [rsi]
  42d05a:	mov    r13,rdx
  42d05d:	mov    r15,rcx
  42d060:	mov    r14,rdi
  42d063:	mov    rcx,rsp
  42d066:	mov    edx,0x2f693b52
  42d06b:	mov    rsi,r15
  42d06e:	mov    rdi,r13
  42d071:	call   42c690 <cmetrohash64_1@@Base>
  42d076:	dec    r12
  42d079:	mov    ebp,DWORD PTR [rsp]
  42d07c:	mov    rax,r12
  42d07f:	and    rax,rbp
  42d082:	mov    rbx,QWORD PTR [r14+rax*8]
  42d086:	test   rbx,rbx
  42d089:	je     42d0f0 <cmetrohash64_2@@Base+0x7f0>
  42d08b:	inc    rbp
  42d08e:	jmp    42d0a2 <cmetrohash64_2@@Base+0x7a2>
  42d090:	mov    rax,r12
  42d093:	and    rax,rbp
  42d096:	mov    rbx,QWORD PTR [r14+rax*8]
  42d09a:	inc    rbp
  42d09d:	test   rbx,rbx
  42d0a0:	je     42d0f0 <cmetrohash64_2@@Base+0x7f0>
  42d0a2:	cmp    rbx,0x2
  42d0a6:	je     42d090 <cmetrohash64_2@@Base+0x790>
  42d0a8:	movsxd rax,DWORD PTR [rbx+0x10]
  42d0ac:	cmp    r15,rax
  42d0af:	jne    42d090 <cmetrohash64_2@@Base+0x790>
  42d0b1:	mov    rsi,QWORD PTR [rbx+0x8]
  42d0b5:	mov    rdx,r15
  42d0b8:	mov    rdi,r13
  42d0bb:	call   405330 <memcmp@plt>
  42d0c0:	test   eax,eax
  42d0c2:	jne    42d090 <cmetrohash64_2@@Base+0x790>
  42d0c4:	mov    rdx,QWORD PTR [rsp+0x8]
  42d0c9:	xor    rdx,QWORD PTR fs:0x28
  42d0d2:	mov    rax,rbx
  42d0d5:	jne    42d0f4 <cmetrohash64_2@@Base+0x7f4>
  42d0d7:	add    rsp,0x18
  42d0db:	pop    rbx
  42d0dc:	pop    rbp
  42d0dd:	pop    r12
  42d0df:	pop    r13
  42d0e1:	pop    r14
  42d0e3:	pop    r15
  42d0e5:	ret    
  42d0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d0f0:	xor    ebx,ebx
  42d0f2:	jmp    42d0c4 <cmetrohash64_2@@Base+0x7c4>
  42d0f4:	call   4052d0 <__stack_chk_fail@plt>
  42d0f9:	nop    DWORD PTR [rax+0x0]

000000000042d100 <fb_name_table_clear@@Base>:
  42d100:	endbr64 
  42d104:	jmp    42cb60 <cmetrohash64_2@@Base+0x260>
  42d109:	nop    DWORD PTR [rax+0x0]

000000000042d110 <fb_name_table_destroy@@Base>:
  42d110:	endbr64 
  42d114:	push   r14
  42d116:	push   r13
  42d118:	push   r12
  42d11a:	push   rbp
  42d11b:	mov    rbp,rdi
  42d11e:	push   rbx
  42d11f:	test   rsi,rsi
  42d122:	je     42d15e <fb_name_table_destroy@@Base+0x4e>
  42d124:	cmp    QWORD PTR [rdi+0x18],0x0
  42d129:	mov    r12,QWORD PTR [rdi]
  42d12c:	je     42d15e <fb_name_table_destroy@@Base+0x4e>
  42d12e:	mov    r13,rsi
  42d131:	mov    r14,rdx
  42d134:	xor    ebx,ebx
  42d136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d140:	mov    rsi,QWORD PTR [r12+rbx*8]
  42d144:	test   rsi,rsi
  42d147:	je     42d155 <fb_name_table_destroy@@Base+0x45>
  42d149:	cmp    rsi,0x2
  42d14d:	je     42d155 <fb_name_table_destroy@@Base+0x45>
  42d14f:	mov    rdi,r14
  42d152:	call   r13
  42d155:	inc    rbx
  42d158:	cmp    rbx,QWORD PTR [rbp+0x18]
  42d15c:	jb     42d140 <fb_name_table_destroy@@Base+0x30>
  42d15e:	pop    rbx
  42d15f:	mov    rdi,rbp
  42d162:	pop    rbp
  42d163:	pop    r12
  42d165:	pop    r13
  42d167:	pop    r14
  42d169:	jmp    42cb60 <cmetrohash64_2@@Base+0x260>
  42d16e:	xchg   ax,ax

000000000042d170 <fb_name_table_init@@Base>:
  42d170:	endbr64 
  42d174:	push   rbp
  42d175:	push   rbx
  42d176:	mov    rbx,rdi
  42d179:	sub    rsp,0x8
  42d17d:	cmp    rsi,0x2
  42d181:	jbe    42d1e0 <fb_name_table_init@@Base+0x70>
  42d183:	mov    eax,0x4
  42d188:	nop    DWORD PTR [rax+rax*1+0x0]
  42d190:	lea    rbp,[rax+rax*1]
  42d194:	imul   rax,rax,0x166
  42d19b:	shr    rax,0x8
  42d19f:	mov    rdx,rax
  42d1a2:	mov    rax,rbp
  42d1a5:	cmp    rsi,rdx
  42d1a8:	ja     42d190 <fb_name_table_init@@Base+0x20>
  42d1aa:	mov    esi,0x8
  42d1af:	mov    rdi,rbp
  42d1b2:	call   405340 <calloc@plt>
  42d1b7:	mov    QWORD PTR [rbx],rax
  42d1ba:	test   rax,rax
  42d1bd:	je     42d1e7 <fb_name_table_init@@Base+0x77>
  42d1bf:	mov    QWORD PTR [rbx+0x8],0x0
  42d1c7:	mov    QWORD PTR [rbx+0x18],rbp
  42d1cb:	mov    QWORD PTR [rbx+0x10],0x0
  42d1d3:	xor    eax,eax
  42d1d5:	add    rsp,0x8
  42d1d9:	pop    rbx
  42d1da:	pop    rbp
  42d1db:	ret    
  42d1dc:	nop    DWORD PTR [rax+0x0]
  42d1e0:	mov    ebp,0x4
  42d1e5:	jmp    42d1aa <fb_name_table_init@@Base+0x3a>
  42d1e7:	mov    eax,0xffffffff
  42d1ec:	jmp    42d1d5 <fb_name_table_init@@Base+0x65>
  42d1ee:	xchg   ax,ax

000000000042d1f0 <fb_name_table_resize@@Base>:
  42d1f0:	endbr64 
  42d1f4:	jmp    42cc80 <cmetrohash64_2@@Base+0x380>
  42d1f9:	nop    DWORD PTR [rax+0x0]

000000000042d200 <fb_name_table_insert@@Base>:
  42d200:	endbr64 
  42d204:	jmp    42cdb0 <cmetrohash64_2@@Base+0x4b0>
  42d209:	nop    DWORD PTR [rax+0x0]

000000000042d210 <fb_name_table_insert_item@@Base>:
  42d210:	endbr64 
  42d214:	mov    rcx,rsi
  42d217:	mov    r8d,edx
  42d21a:	movsxd rdx,DWORD PTR [rsi+0x10]
  42d21e:	mov    rsi,QWORD PTR [rsi+0x8]
  42d222:	jmp    42cdb0 <cmetrohash64_2@@Base+0x4b0>
  42d227:	nop    WORD PTR [rax+rax*1+0x0]

000000000042d230 <fb_name_table_find@@Base>:
  42d230:	endbr64 
  42d234:	mov    rax,rsi
  42d237:	lea    rsi,[rdi+0x18]
  42d23b:	mov    rdi,QWORD PTR [rdi]
  42d23e:	mov    rcx,rdx
  42d241:	mov    rdx,rax
  42d244:	jmp    42d030 <cmetrohash64_2@@Base+0x730>
  42d249:	nop    DWORD PTR [rax+0x0]

000000000042d250 <fb_name_table_find_item@@Base>:
  42d250:	endbr64 
  42d254:	movsxd rcx,DWORD PTR [rsi+0x10]
  42d258:	mov    rdx,QWORD PTR [rsi+0x8]
  42d25c:	lea    rsi,[rdi+0x18]
  42d260:	mov    rdi,QWORD PTR [rdi]
  42d263:	jmp    42d030 <cmetrohash64_2@@Base+0x730>
  42d268:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042d270 <fb_name_table_remove@@Base>:
  42d270:	endbr64 
  42d274:	jmp    42cb80 <cmetrohash64_2@@Base+0x280>
  42d279:	nop    DWORD PTR [rax+0x0]

000000000042d280 <fb_name_table_remove_item@@Base>:
  42d280:	endbr64 
  42d284:	movsxd rdx,DWORD PTR [rsi+0x10]
  42d288:	mov    rsi,QWORD PTR [rsi+0x8]
  42d28c:	jmp    42cb80 <cmetrohash64_2@@Base+0x280>
  42d291:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d29c:	nop    DWORD PTR [rax+0x0]

000000000042d2a0 <fb_name_table_visit@@Base>:
  42d2a0:	endbr64 
  42d2a4:	push   r14
  42d2a6:	push   r13
  42d2a8:	push   r12
  42d2aa:	push   rbp
  42d2ab:	push   rbx
  42d2ac:	cmp    QWORD PTR [rdi+0x18],0x0
  42d2b1:	mov    r14,QWORD PTR [rdi]
  42d2b4:	je     42d2e6 <fb_name_table_visit@@Base+0x46>
  42d2b6:	mov    r13,rdx
  42d2b9:	mov    r12,rsi
  42d2bc:	mov    rbp,rdi
  42d2bf:	xor    ebx,ebx
  42d2c1:	nop    DWORD PTR [rax+0x0]
  42d2c8:	mov    rsi,QWORD PTR [r14+rbx*8]
  42d2cc:	test   rsi,rsi
  42d2cf:	je     42d2dd <fb_name_table_visit@@Base+0x3d>
  42d2d1:	cmp    rsi,0x2
  42d2d5:	je     42d2dd <fb_name_table_visit@@Base+0x3d>
  42d2d7:	mov    rdi,r13
  42d2da:	call   r12
  42d2dd:	inc    rbx
  42d2e0:	cmp    rbx,QWORD PTR [rbp+0x18]
  42d2e4:	jb     42d2c8 <fb_name_table_visit@@Base+0x28>
  42d2e6:	pop    rbx
  42d2e7:	pop    rbp
  42d2e8:	pop    r12
  42d2ea:	pop    r13
  42d2ec:	pop    r14
  42d2ee:	ret    
  42d2ef:	nop
  42d2f0:	push   rbx
  42d2f1:	mov    rbx,rdi
  42d2f4:	mov    rdi,QWORD PTR [rdi]
  42d2f7:	test   rdi,rdi
  42d2fa:	je     42d301 <fb_name_table_visit@@Base+0x61>
  42d2fc:	call   405240 <free@plt>
  42d301:	vpxor  xmm0,xmm0,xmm0
  42d305:	vmovups XMMWORD PTR [rbx],xmm0
  42d309:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  42d30e:	pop    rbx
  42d30f:	ret    
  42d310:	movzx  edx,WORD PTR [rdi+0x10]
  42d314:	cmp    dx,0x5
  42d318:	je     42d368 <fb_name_table_visit@@Base+0xc8>
  42d31a:	cmp    dx,0x6
  42d31e:	je     42d348 <fb_name_table_visit@@Base+0xa8>
  42d320:	xor    eax,eax
  42d322:	cmp    dx,0x4
  42d326:	je     42d330 <fb_name_table_visit@@Base+0x90>
  42d328:	ret    
  42d329:	nop    DWORD PTR [rax+0x0]
  42d330:	mov    rax,QWORD PTR [rdi]
  42d333:	mov    edx,0x9e3779b1
  42d338:	xor    rax,0x2f693b56
  42d33e:	imul   rax,rdx
  42d342:	ret    
  42d343:	nop    DWORD PTR [rax+rax*1+0x0]
  42d348:	movzx  eax,BYTE PTR [rdi]
  42d34b:	mov    edx,0x9e3779b1
  42d350:	xor    eax,0x6
  42d353:	movzx  eax,al
  42d356:	xor    rax,0x2f693b52
  42d35c:	imul   rax,rdx
  42d360:	ret    
  42d361:	nop    DWORD PTR [rax+0x0]
  42d368:	mov    rax,QWORD PTR [rdi]
  42d36b:	mov    edx,0x9e3779b1
  42d370:	xor    rax,0x2f693b57
  42d376:	imul   rax,rdx
  42d37a:	ret    
  42d37b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d380:	test   rdi,rdi
  42d383:	je     42d40d <fb_name_table_visit@@Base+0x16d>
  42d389:	mov    r9,QWORD PTR [rsi]
  42d38c:	mov    r8,rdi
  42d38f:	mov    rdi,rdx
  42d392:	mov    r10,rdx
  42d395:	dec    r9
  42d398:	call   42d310 <fb_name_table_visit@@Base+0x70>
  42d39d:	mov    rdx,r9
  42d3a0:	and    rdx,rax
  42d3a3:	mov    rcx,QWORD PTR [r8+rdx*8]
  42d3a7:	test   rcx,rcx
  42d3aa:	je     42d3fc <fb_name_table_visit@@Base+0x15c>
  42d3ac:	inc    rax
  42d3af:	jmp    42d3d0 <fb_name_table_visit@@Base+0x130>
  42d3b1:	nop    DWORD PTR [rax+0x0]
  42d3b8:	cmp    si,0x4
  42d3bc:	je     42d400 <fb_name_table_visit@@Base+0x160>
  42d3be:	mov    rcx,r9
  42d3c1:	and    rcx,rax
  42d3c4:	mov    rcx,QWORD PTR [r8+rcx*8]
  42d3c8:	inc    rax
  42d3cb:	test   rcx,rcx
  42d3ce:	je     42d3fc <fb_name_table_visit@@Base+0x15c>
  42d3d0:	cmp    rcx,0x2
  42d3d4:	je     42d3be <fb_name_table_visit@@Base+0x11e>
  42d3d6:	movzx  esi,WORD PTR [r10+0x10]
  42d3db:	cmp    si,WORD PTR [rcx+0x10]
  42d3df:	jne    42d3be <fb_name_table_visit@@Base+0x11e>
  42d3e1:	cmp    si,0x5
  42d3e5:	je     42d400 <fb_name_table_visit@@Base+0x160>
  42d3e7:	cmp    si,0x6
  42d3eb:	jne    42d3b8 <fb_name_table_visit@@Base+0x118>
  42d3ed:	movzx  edi,BYTE PTR [rcx]
  42d3f0:	xor    edx,edx
  42d3f2:	cmp    BYTE PTR [r10],dil
  42d3f5:	sete   dl
  42d3f8:	test   edx,edx
  42d3fa:	je     42d3be <fb_name_table_visit@@Base+0x11e>
  42d3fc:	mov    rax,rcx
  42d3ff:	ret    
  42d400:	mov    rdi,QWORD PTR [rcx]
  42d403:	xor    edx,edx
  42d405:	cmp    QWORD PTR [r10],rdi
  42d408:	sete   dl
  42d40b:	jmp    42d3f8 <fb_name_table_visit@@Base+0x158>
  42d40d:	xor    ecx,ecx
  42d40f:	jmp    42d3fc <fb_name_table_visit@@Base+0x15c>
  42d411:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d41c:	nop    DWORD PTR [rax+0x0]
  42d420:	mov    r10,QWORD PTR [rdi]
  42d423:	test   r10,r10
  42d426:	je     42d4c5 <fb_name_table_visit@@Base+0x225>
  42d42c:	mov    rax,QWORD PTR [rdi+0x18]
  42d430:	mov    r11,rdi
  42d433:	mov    rdi,rsi
  42d436:	lea    r9,[rax-0x1]
  42d43a:	call   42d310 <fb_name_table_visit@@Base+0x70>
  42d43f:	mov    rdx,r9
  42d442:	and    rdx,rax
  42d445:	lea    r8,[r10+rdx*8]
  42d449:	mov    rdx,QWORD PTR [r8]
  42d44c:	test   rdx,rdx
  42d44f:	je     42d4b1 <fb_name_table_visit@@Base+0x211>
  42d451:	inc    rax
  42d454:	jmp    42d47b <fb_name_table_visit@@Base+0x1db>
  42d456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d460:	cmp    cx,0x4
  42d464:	je     42d4b8 <fb_name_table_visit@@Base+0x218>
  42d466:	mov    rdx,r9
  42d469:	and    rdx,rax
  42d46c:	lea    r8,[r10+rdx*8]
  42d470:	mov    rdx,QWORD PTR [r8]
  42d473:	inc    rax
  42d476:	test   rdx,rdx
  42d479:	je     42d4b1 <fb_name_table_visit@@Base+0x211>
  42d47b:	cmp    rdx,0x2
  42d47f:	je     42d466 <fb_name_table_visit@@Base+0x1c6>
  42d481:	movzx  ecx,WORD PTR [rsi+0x10]
  42d485:	cmp    cx,WORD PTR [rdx+0x10]
  42d489:	jne    42d466 <fb_name_table_visit@@Base+0x1c6>
  42d48b:	cmp    cx,0x5
  42d48f:	je     42d4b8 <fb_name_table_visit@@Base+0x218>
  42d491:	cmp    cx,0x6
  42d495:	jne    42d460 <fb_name_table_visit@@Base+0x1c0>
  42d497:	movzx  edi,BYTE PTR [rdx]
  42d49a:	xor    ecx,ecx
  42d49c:	cmp    BYTE PTR [rsi],dil
  42d49f:	sete   cl
  42d4a2:	test   ecx,ecx
  42d4a4:	je     42d466 <fb_name_table_visit@@Base+0x1c6>
  42d4a6:	mov    QWORD PTR [r8],0x2
  42d4ad:	dec    QWORD PTR [r11+0x10]
  42d4b1:	mov    rax,rdx
  42d4b4:	ret    
  42d4b5:	nop    DWORD PTR [rax]
  42d4b8:	mov    rdi,QWORD PTR [rdx]
  42d4bb:	xor    ecx,ecx
  42d4bd:	cmp    QWORD PTR [rsi],rdi
  42d4c0:	sete   cl
  42d4c3:	jmp    42d4a2 <fb_name_table_visit@@Base+0x202>
  42d4c5:	xor    edx,edx
  42d4c7:	jmp    42d4b1 <fb_name_table_visit@@Base+0x211>
  42d4c9:	nop    DWORD PTR [rax+0x0]
  42d4d0:	push   r13
  42d4d2:	push   r12
  42d4d4:	push   rbp
  42d4d5:	push   rbx
  42d4d6:	sub    rsp,0x8
  42d4da:	test   rdx,rdx
  42d4dd:	je     42d68d <fb_name_table_visit@@Base+0x3ed>
  42d4e3:	mov    r13,rdx
  42d4e6:	cmp    rdx,0x2
  42d4ea:	je     42d66e <fb_name_table_visit@@Base+0x3ce>
  42d4f0:	cmp    rdx,0x1
  42d4f4:	je     42d6ac <fb_name_table_visit@@Base+0x40c>
  42d4fa:	mov    ebx,ecx
  42d4fc:	mov    rcx,QWORD PTR [rdi+0x18]
  42d500:	mov    rbp,rsi
  42d503:	imul   rax,rcx,0xb3
  42d50a:	mov    rsi,QWORD PTR [rdi+0x10]
  42d50e:	mov    r12,rdi
  42d511:	shr    rax,0x8
  42d515:	cmp    rsi,rax
  42d518:	jae    42d600 <fb_name_table_visit@@Base+0x360>
  42d51e:	mov    rdi,rbp
  42d521:	mov    r9,QWORD PTR [r12]
  42d525:	dec    rcx
  42d528:	call   42d310 <fb_name_table_visit@@Base+0x70>
  42d52d:	mov    rdx,rcx
  42d530:	and    rdx,rax
  42d533:	lea    rdi,[r9+rdx*8]
  42d537:	lea    edx,[rbx-0x2]
  42d53a:	mov    rsi,QWORD PTR [rdi]
  42d53d:	cmp    edx,0x1
  42d540:	jbe    42d620 <fb_name_table_visit@@Base+0x380>
  42d546:	inc    rax
  42d549:	xor    edx,edx
  42d54b:	test   rsi,rsi
  42d54e:	jne    42d58e <fb_name_table_visit@@Base+0x2ee>
  42d550:	jmp    42d666 <fb_name_table_visit@@Base+0x3c6>
  42d555:	nop    DWORD PTR [rax]
  42d558:	movzx  r8d,WORD PTR [rbp+0x10]
  42d55d:	cmp    r8w,WORD PTR [rsi+0x10]
  42d562:	jne    42d579 <fb_name_table_visit@@Base+0x2d9>
  42d564:	cmp    r8w,0x5
  42d569:	je     42d5c0 <fb_name_table_visit@@Base+0x320>
  42d56b:	cmp    r8w,0x6
  42d570:	je     42d5a0 <fb_name_table_visit@@Base+0x300>
  42d572:	cmp    r8w,0x4
  42d577:	je     42d5d0 <fb_name_table_visit@@Base+0x330>
  42d579:	mov    rsi,rcx
  42d57c:	and    rsi,rax
  42d57f:	lea    rdi,[r9+rsi*8]
  42d583:	mov    rsi,QWORD PTR [rdi]
  42d586:	inc    rax
  42d589:	test   rsi,rsi
  42d58c:	je     42d5e0 <fb_name_table_visit@@Base+0x340>
  42d58e:	cmp    rsi,0x2
  42d592:	jne    42d558 <fb_name_table_visit@@Base+0x2b8>
  42d594:	test   rdx,rdx
  42d597:	cmove  rdx,rdi
  42d59b:	jmp    42d579 <fb_name_table_visit@@Base+0x2d9>
  42d59d:	nop    DWORD PTR [rax]
  42d5a0:	movzx  r10d,BYTE PTR [rsi]
  42d5a4:	xor    r8d,r8d
  42d5a7:	cmp    BYTE PTR [rbp+0x0],r10b
  42d5ab:	sete   r8b
  42d5af:	test   r8d,r8d
  42d5b2:	je     42d579 <fb_name_table_visit@@Base+0x2d9>
  42d5b4:	test   ebx,ebx
  42d5b6:	jne    42d5f1 <fb_name_table_visit@@Base+0x351>
  42d5b8:	mov    QWORD PTR [rdi],r13
  42d5bb:	jmp    42d5f1 <fb_name_table_visit@@Base+0x351>
  42d5bd:	nop    DWORD PTR [rax]
  42d5c0:	mov    r11,QWORD PTR [rsi]
  42d5c3:	xor    r8d,r8d
  42d5c6:	cmp    QWORD PTR [rbp+0x0],r11
  42d5ca:	sete   r8b
  42d5ce:	jmp    42d5af <fb_name_table_visit@@Base+0x30f>
  42d5d0:	mov    r10,QWORD PTR [rsi]
  42d5d3:	xor    r8d,r8d
  42d5d6:	cmp    QWORD PTR [rbp+0x0],r10
  42d5da:	sete   r8b
  42d5de:	jmp    42d5af <fb_name_table_visit@@Base+0x30f>
  42d5e0:	test   rdx,rdx
  42d5e3:	cmove  rdx,rdi
  42d5e7:	inc    QWORD PTR [r12+0x10]
  42d5ec:	mov    QWORD PTR [rdx],r13
  42d5ef:	xor    esi,esi
  42d5f1:	add    rsp,0x8
  42d5f5:	pop    rbx
  42d5f6:	pop    rbp
  42d5f7:	pop    r12
  42d5f9:	mov    rax,rsi
  42d5fc:	pop    r13
  42d5fe:	ret    
  42d5ff:	nop
  42d600:	add    rsi,rsi
  42d603:	call   42d700 <fb_name_table_visit@@Base+0x460>
  42d608:	test   eax,eax
  42d60a:	jne    42d6cb <fb_name_table_visit@@Base+0x42b>
  42d610:	mov    rcx,QWORD PTR [r12+0x18]
  42d615:	jmp    42d51e <fb_name_table_visit@@Base+0x27e>
  42d61a:	nop    WORD PTR [rax+rax*1+0x0]
  42d620:	inc    QWORD PTR [r12+0x10]
  42d625:	test   rsi,rsi
  42d628:	je     42d653 <fb_name_table_visit@@Base+0x3b3>
  42d62a:	cmp    rsi,0x2
  42d62e:	je     42d653 <fb_name_table_visit@@Base+0x3b3>
  42d630:	inc    rax
  42d633:	jmp    42d63e <fb_name_table_visit@@Base+0x39e>
  42d635:	nop    DWORD PTR [rax]
  42d638:	cmp    rdx,0x2
  42d63c:	je     42d653 <fb_name_table_visit@@Base+0x3b3>
  42d63e:	mov    rdx,rcx
  42d641:	and    rdx,rax
  42d644:	lea    rdi,[r9+rdx*8]
  42d648:	mov    rdx,QWORD PTR [rdi]
  42d64b:	inc    rax
  42d64e:	test   rdx,rdx
  42d651:	jne    42d638 <fb_name_table_visit@@Base+0x398>
  42d653:	mov    QWORD PTR [rdi],r13
  42d656:	add    rsp,0x8
  42d65a:	xor    esi,esi
  42d65c:	pop    rbx
  42d65d:	pop    rbp
  42d65e:	pop    r12
  42d660:	mov    rax,rsi
  42d663:	pop    r13
  42d665:	ret    
  42d666:	mov    rdx,rdi
  42d669:	jmp    42d5e7 <fb_name_table_visit@@Base+0x347>
  42d66e:	lea    rcx,[rip+0x1d953]        # 44afc8 <fb_name_table_missing@@Base+0x8>
  42d675:	mov    edx,0x73
  42d67a:	lea    rsi,[rip+0x19c7f]        # 447300 <_IO_stdin_used@@Base+0x19300>
  42d681:	lea    rdi,[rip+0x19d32]        # 4473ba <_IO_stdin_used@@Base+0x193ba>
  42d688:	call   405300 <__assert_fail@plt>
  42d68d:	lea    rcx,[rip+0x1d934]        # 44afc8 <fb_name_table_missing@@Base+0x8>
  42d694:	mov    edx,0x72
  42d699:	lea    rsi,[rip+0x19c60]        # 447300 <_IO_stdin_used@@Base+0x19300>
  42d6a0:	lea    rdi,[rip+0x19cfc]        # 4473a3 <_IO_stdin_used@@Base+0x193a3>
  42d6a7:	call   405300 <__assert_fail@plt>
  42d6ac:	lea    rcx,[rip+0x1d915]        # 44afc8 <fb_name_table_missing@@Base+0x8>
  42d6b3:	mov    edx,0x74
  42d6b8:	lea    rsi,[rip+0x19c41]        # 447300 <_IO_stdin_used@@Base+0x19300>
  42d6bf:	lea    rdi,[rip+0x19d0b]        # 4473d1 <_IO_stdin_used@@Base+0x193d1>
  42d6c6:	call   405300 <__assert_fail@plt>
  42d6cb:	mov    rax,QWORD PTR [rip+0x24916]        # 451fe8 <stderr@GLIBC_2.2.5>
  42d6d2:	lea    rcx,[rip+0x19c97]        # 447370 <_IO_stdin_used@@Base+0x19370>
  42d6d9:	mov    rdi,QWORD PTR [rax]
  42d6dc:	lea    rdx,[rip+0x19d03]        # 4473e6 <_IO_stdin_used@@Base+0x193e6>
  42d6e3:	mov    esi,0x1
  42d6e8:	xor    eax,eax
  42d6ea:	call   405400 <__fprintf_chk@plt>
  42d6ef:	mov    edi,0x1
  42d6f4:	call   4053e0 <exit@plt>
  42d6f9:	nop    DWORD PTR [rax+0x0]
  42d700:	push   r13
  42d702:	push   r12
  42d704:	push   rbp
  42d705:	mov    rbp,rdi
  42d708:	push   rbx
  42d709:	sub    rsp,0x38
  42d70d:	mov    rax,QWORD PTR fs:0x28
  42d716:	mov    QWORD PTR [rsp+0x28],rax
  42d71b:	xor    eax,eax
  42d71d:	cmp    QWORD PTR [rdi+0x10],rsi
  42d721:	cmovae rsi,QWORD PTR [rdi+0x10]
  42d726:	mov    r12,QWORD PTR [rdi]
  42d729:	cmp    rsi,0x2
  42d72d:	jbe    42d808 <fb_name_table_visit@@Base+0x568>
  42d733:	mov    eax,0x4
  42d738:	nop    DWORD PTR [rax+rax*1+0x0]
  42d740:	lea    rbx,[rax+rax*1]
  42d744:	imul   rax,rax,0x166
  42d74b:	shr    rax,0x8
  42d74f:	mov    rdx,rax
  42d752:	mov    rax,rbx
  42d755:	cmp    rsi,rdx
  42d758:	ja     42d740 <fb_name_table_visit@@Base+0x4a0>
  42d75a:	mov    esi,0x8
  42d75f:	mov    rdi,rbx
  42d762:	call   405340 <calloc@plt>
  42d767:	mov    QWORD PTR [rsp],rax
  42d76b:	test   rax,rax
  42d76e:	je     42d812 <fb_name_table_visit@@Base+0x572>
  42d774:	cmp    QWORD PTR [rbp+0x18],0x0
  42d779:	mov    QWORD PTR [rsp+0x8],0x0
  42d782:	mov    QWORD PTR [rsp+0x18],rbx
  42d787:	mov    QWORD PTR [rsp+0x10],0x0
  42d790:	je     42d7c8 <fb_name_table_visit@@Base+0x528>
  42d792:	xor    ebx,ebx
  42d794:	mov    r13,rsp
  42d797:	nop    WORD PTR [rax+rax*1+0x0]
  42d7a0:	mov    rsi,QWORD PTR [r12+rbx*8]
  42d7a4:	test   rsi,rsi
  42d7a7:	je     42d7bf <fb_name_table_visit@@Base+0x51f>
  42d7a9:	cmp    rsi,0x2
  42d7ad:	je     42d7bf <fb_name_table_visit@@Base+0x51f>
  42d7af:	mov    ecx,0x3
  42d7b4:	mov    rdx,rsi
  42d7b7:	mov    rdi,r13
  42d7ba:	call   42d4d0 <fb_name_table_visit@@Base+0x230>
  42d7bf:	inc    rbx
  42d7c2:	cmp    QWORD PTR [rbp+0x18],rbx
  42d7c6:	ja     42d7a0 <fb_name_table_visit@@Base+0x500>
  42d7c8:	mov    rdi,rbp
  42d7cb:	call   42d2f0 <fb_name_table_visit@@Base+0x50>
  42d7d0:	vmovdqa xmm0,XMMWORD PTR [rsp]
  42d7d5:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  42d7db:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  42d7e0:	vmovups XMMWORD PTR [rbp+0x10],xmm1
  42d7e5:	xor    eax,eax
  42d7e7:	mov    rcx,QWORD PTR [rsp+0x28]
  42d7ec:	xor    rcx,QWORD PTR fs:0x28
  42d7f5:	jne    42d819 <fb_name_table_visit@@Base+0x579>
  42d7f7:	add    rsp,0x38
  42d7fb:	pop    rbx
  42d7fc:	pop    rbp
  42d7fd:	pop    r12
  42d7ff:	pop    r13
  42d801:	ret    
  42d802:	nop    WORD PTR [rax+rax*1+0x0]
  42d808:	mov    ebx,0x4
  42d80d:	jmp    42d75a <fb_name_table_visit@@Base+0x4ba>
  42d812:	mov    eax,0xffffffff
  42d817:	jmp    42d7e7 <fb_name_table_visit@@Base+0x547>
  42d819:	call   4052d0 <__stack_chk_fail@plt>
  42d81e:	xchg   ax,ax

000000000042d820 <fb_value_set_clear@@Base>:
  42d820:	endbr64 
  42d824:	jmp    42d2f0 <fb_name_table_visit@@Base+0x50>
  42d829:	nop    DWORD PTR [rax+0x0]

000000000042d830 <fb_value_set_destroy@@Base>:
  42d830:	endbr64 
  42d834:	push   r14
  42d836:	push   r13
  42d838:	push   r12
  42d83a:	push   rbp
  42d83b:	mov    rbp,rdi
  42d83e:	push   rbx
  42d83f:	test   rsi,rsi
  42d842:	je     42d87e <fb_value_set_destroy@@Base+0x4e>
  42d844:	cmp    QWORD PTR [rdi+0x18],0x0
  42d849:	mov    r12,QWORD PTR [rdi]
  42d84c:	je     42d87e <fb_value_set_destroy@@Base+0x4e>
  42d84e:	mov    r13,rsi
  42d851:	mov    r14,rdx
  42d854:	xor    ebx,ebx
  42d856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d860:	mov    rsi,QWORD PTR [r12+rbx*8]
  42d864:	test   rsi,rsi
  42d867:	je     42d875 <fb_value_set_destroy@@Base+0x45>
  42d869:	cmp    rsi,0x2
  42d86d:	je     42d875 <fb_value_set_destroy@@Base+0x45>
  42d86f:	mov    rdi,r14
  42d872:	call   r13
  42d875:	inc    rbx
  42d878:	cmp    rbx,QWORD PTR [rbp+0x18]
  42d87c:	jb     42d860 <fb_value_set_destroy@@Base+0x30>
  42d87e:	pop    rbx
  42d87f:	mov    rdi,rbp
  42d882:	pop    rbp
  42d883:	pop    r12
  42d885:	pop    r13
  42d887:	pop    r14
  42d889:	jmp    42d2f0 <fb_name_table_visit@@Base+0x50>
  42d88e:	xchg   ax,ax

000000000042d890 <fb_value_set_init@@Base>:
  42d890:	endbr64 
  42d894:	push   rbp
  42d895:	push   rbx
  42d896:	mov    rbx,rdi
  42d899:	sub    rsp,0x8
  42d89d:	cmp    rsi,0x2
  42d8a1:	jbe    42d900 <fb_value_set_init@@Base+0x70>
  42d8a3:	mov    eax,0x4
  42d8a8:	nop    DWORD PTR [rax+rax*1+0x0]
  42d8b0:	lea    rbp,[rax+rax*1]
  42d8b4:	imul   rax,rax,0x166
  42d8bb:	shr    rax,0x8
  42d8bf:	mov    rdx,rax
  42d8c2:	mov    rax,rbp
  42d8c5:	cmp    rsi,rdx
  42d8c8:	ja     42d8b0 <fb_value_set_init@@Base+0x20>
  42d8ca:	mov    esi,0x8
  42d8cf:	mov    rdi,rbp
  42d8d2:	call   405340 <calloc@plt>
  42d8d7:	mov    QWORD PTR [rbx],rax
  42d8da:	test   rax,rax
  42d8dd:	je     42d907 <fb_value_set_init@@Base+0x77>
  42d8df:	mov    QWORD PTR [rbx+0x8],0x0
  42d8e7:	mov    QWORD PTR [rbx+0x18],rbp
  42d8eb:	mov    QWORD PTR [rbx+0x10],0x0
  42d8f3:	xor    eax,eax
  42d8f5:	add    rsp,0x8
  42d8f9:	pop    rbx
  42d8fa:	pop    rbp
  42d8fb:	ret    
  42d8fc:	nop    DWORD PTR [rax+0x0]
  42d900:	mov    ebp,0x4
  42d905:	jmp    42d8ca <fb_value_set_init@@Base+0x3a>
  42d907:	mov    eax,0xffffffff
  42d90c:	jmp    42d8f5 <fb_value_set_init@@Base+0x65>
  42d90e:	xchg   ax,ax

000000000042d910 <fb_value_set_resize@@Base>:
  42d910:	endbr64 
  42d914:	jmp    42d700 <fb_name_table_visit@@Base+0x460>
  42d919:	nop    DWORD PTR [rax+0x0]

000000000042d920 <fb_value_set_insert@@Base>:
  42d920:	endbr64 
  42d924:	mov    rdx,rcx
  42d927:	mov    ecx,r8d
  42d92a:	jmp    42d4d0 <fb_name_table_visit@@Base+0x230>
  42d92f:	nop

000000000042d930 <fb_value_set_insert_item@@Base>:
  42d930:	endbr64 
  42d934:	mov    ecx,edx
  42d936:	mov    rdx,rsi
  42d939:	jmp    42d4d0 <fb_name_table_visit@@Base+0x230>
  42d93e:	xchg   ax,ax

000000000042d940 <fb_value_set_find@@Base>:
  42d940:	endbr64 
  42d944:	mov    rdx,rsi
  42d947:	lea    rsi,[rdi+0x18]
  42d94b:	mov    rdi,QWORD PTR [rdi]
  42d94e:	jmp    42d380 <fb_name_table_visit@@Base+0xe0>
  42d953:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d95e:	xchg   ax,ax

000000000042d960 <fb_value_set_find_item@@Base>:
  42d960:	endbr64 
  42d964:	mov    rdx,rsi
  42d967:	lea    rsi,[rdi+0x18]
  42d96b:	mov    rdi,QWORD PTR [rdi]
  42d96e:	jmp    42d380 <fb_name_table_visit@@Base+0xe0>
  42d973:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d97e:	xchg   ax,ax

000000000042d980 <fb_value_set_remove@@Base>:
  42d980:	endbr64 
  42d984:	jmp    42d420 <fb_name_table_visit@@Base+0x180>
  42d989:	nop    DWORD PTR [rax+0x0]

000000000042d990 <fb_value_set_remove_item@@Base>:
  42d990:	endbr64 
  42d994:	jmp    42d420 <fb_name_table_visit@@Base+0x180>
  42d999:	nop    DWORD PTR [rax+0x0]

000000000042d9a0 <fb_value_set_visit@@Base>:
  42d9a0:	endbr64 
  42d9a4:	push   r14
  42d9a6:	push   r13
  42d9a8:	push   r12
  42d9aa:	push   rbp
  42d9ab:	push   rbx
  42d9ac:	cmp    QWORD PTR [rdi+0x18],0x0
  42d9b1:	mov    r14,QWORD PTR [rdi]
  42d9b4:	je     42d9e6 <fb_value_set_visit@@Base+0x46>
  42d9b6:	mov    r13,rdx
  42d9b9:	mov    r12,rsi
  42d9bc:	mov    rbp,rdi
  42d9bf:	xor    ebx,ebx
  42d9c1:	nop    DWORD PTR [rax+0x0]
  42d9c8:	mov    rsi,QWORD PTR [r14+rbx*8]
  42d9cc:	test   rsi,rsi
  42d9cf:	je     42d9dd <fb_value_set_visit@@Base+0x3d>
  42d9d1:	cmp    rsi,0x2
  42d9d5:	je     42d9dd <fb_value_set_visit@@Base+0x3d>
  42d9d7:	mov    rdi,r13
  42d9da:	call   r12
  42d9dd:	inc    rbx
  42d9e0:	cmp    rbx,QWORD PTR [rbp+0x18]
  42d9e4:	jb     42d9c8 <fb_value_set_visit@@Base+0x28>
  42d9e6:	pop    rbx
  42d9e7:	pop    rbp
  42d9e8:	pop    r12
  42d9ea:	pop    r13
  42d9ec:	pop    r14
  42d9ee:	ret    
  42d9ef:	nop

000000000042d9f0 <__libc_csu_init@@Base>:
  42d9f0:	endbr64 
  42d9f4:	push   r15
  42d9f6:	lea    r15,[rip+0x24393]        # 451d90 <fb_value_set_missing@@Base+0x6da8>
  42d9fd:	push   r14
  42d9ff:	mov    r14,rdx
  42da02:	push   r13
  42da04:	mov    r13,rsi
  42da07:	push   r12
  42da09:	mov    r12d,edi
  42da0c:	push   rbp
  42da0d:	lea    rbp,[rip+0x24384]        # 451d98 <fb_value_set_missing@@Base+0x6db0>
  42da14:	push   rbx
  42da15:	sub    rbp,r15
  42da18:	sub    rsp,0x8
  42da1c:	call   405000 <__ctype_toupper_loc@plt-0x230>
  42da21:	sar    rbp,0x3
  42da25:	je     42da46 <__libc_csu_init@@Base+0x56>
  42da27:	xor    ebx,ebx
  42da29:	nop    DWORD PTR [rax+0x0]
  42da30:	mov    rdx,r14
  42da33:	mov    rsi,r13
  42da36:	mov    edi,r12d
  42da39:	call   QWORD PTR [r15+rbx*8]
  42da3d:	add    rbx,0x1
  42da41:	cmp    rbp,rbx
  42da44:	jne    42da30 <__libc_csu_init@@Base+0x40>
  42da46:	add    rsp,0x8
  42da4a:	pop    rbx
  42da4b:	pop    rbp
  42da4c:	pop    r12
  42da4e:	pop    r13
  42da50:	pop    r14
  42da52:	pop    r15
  42da54:	ret    
  42da55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042da60 <__libc_csu_fini@@Base>:
  42da60:	endbr64 
  42da64:	ret    

Disassembly of section .fini:

000000000042da68 <.fini>:
  42da68:	endbr64 
  42da6c:	sub    rsp,0x8
  42da70:	add    rsp,0x8
  42da74:	ret    
