
../repos/dvidelabs-flatcc-3b39ef7/test/monster_test/monster_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000404000 <.init>:
  404000:	endbr64 
  404004:	sub    rsp,0x8
  404008:	mov    rax,QWORD PTR [rip+0x19fe1]        # 41dff0 <__gmon_start__>
  40400f:	test   rax,rax
  404012:	je     404016 <free@plt-0x1a>
  404014:	call   rax
  404016:	add    rsp,0x8
  40401a:	ret    

Disassembly of section .plt:

0000000000404020 <free@plt-0x10>:
  404020:	push   QWORD PTR [rip+0x19fe2]        # 41e008 <flatcc_builder_padding_base@@Base+0x5628>
  404026:	jmp    QWORD PTR [rip+0x19fe4]        # 41e010 <flatcc_builder_padding_base@@Base+0x5630>
  40402c:	nop    DWORD PTR [rax+0x0]

0000000000404030 <free@plt>:
  404030:	jmp    QWORD PTR [rip+0x19fe2]        # 41e018 <free@GLIBC_2.2.5>
  404036:	push   0x0
  40403b:	jmp    404020 <free@plt-0x10>

0000000000404040 <strncpy@plt>:
  404040:	jmp    QWORD PTR [rip+0x19fda]        # 41e020 <strncpy@GLIBC_2.2.5>
  404046:	push   0x1
  40404b:	jmp    404020 <free@plt-0x10>

0000000000404050 <strncmp@plt>:
  404050:	jmp    QWORD PTR [rip+0x19fd2]        # 41e028 <strncmp@GLIBC_2.2.5>
  404056:	push   0x2
  40405b:	jmp    404020 <free@plt-0x10>

0000000000404060 <puts@plt>:
  404060:	jmp    QWORD PTR [rip+0x19fca]        # 41e030 <puts@GLIBC_2.2.5>
  404066:	push   0x3
  40406b:	jmp    404020 <free@plt-0x10>

0000000000404070 <strlen@plt>:
  404070:	jmp    QWORD PTR [rip+0x19fc2]        # 41e038 <strlen@GLIBC_2.2.5>
  404076:	push   0x4
  40407b:	jmp    404020 <free@plt-0x10>

0000000000404080 <printf@plt>:
  404080:	jmp    QWORD PTR [rip+0x19fba]        # 41e040 <printf@GLIBC_2.2.5>
  404086:	push   0x5
  40408b:	jmp    404020 <free@plt-0x10>

0000000000404090 <gettimeofday@plt>:
  404090:	jmp    QWORD PTR [rip+0x19fb2]        # 41e048 <gettimeofday@GLIBC_2.2.5>
  404096:	push   0x6
  40409b:	jmp    404020 <free@plt-0x10>

00000000004040a0 <__assert_fail@plt>:
  4040a0:	jmp    QWORD PTR [rip+0x19faa]        # 41e050 <__assert_fail@GLIBC_2.2.5>
  4040a6:	push   0x7
  4040ab:	jmp    404020 <free@plt-0x10>

00000000004040b0 <memset@plt>:
  4040b0:	jmp    QWORD PTR [rip+0x19fa2]        # 41e058 <memset@GLIBC_2.2.5>
  4040b6:	push   0x8
  4040bb:	jmp    404020 <free@plt-0x10>

00000000004040c0 <fputc@plt>:
  4040c0:	jmp    QWORD PTR [rip+0x19f9a]        # 41e060 <fputc@GLIBC_2.2.5>
  4040c6:	push   0x9
  4040cb:	jmp    404020 <free@plt-0x10>

00000000004040d0 <memchr@plt>:
  4040d0:	jmp    QWORD PTR [rip+0x19f92]        # 41e068 <memchr@GLIBC_2.2.5>
  4040d6:	push   0xa
  4040db:	jmp    404020 <free@plt-0x10>

00000000004040e0 <memcmp@plt>:
  4040e0:	jmp    QWORD PTR [rip+0x19f8a]        # 41e070 <memcmp@GLIBC_2.2.5>
  4040e6:	push   0xb
  4040eb:	jmp    404020 <free@plt-0x10>

00000000004040f0 <strcmp@plt>:
  4040f0:	jmp    QWORD PTR [rip+0x19f82]        # 41e078 <strcmp@GLIBC_2.2.5>
  4040f6:	push   0xc
  4040fb:	jmp    404020 <free@plt-0x10>

0000000000404100 <fprintf@plt>:
  404100:	jmp    QWORD PTR [rip+0x19f7a]        # 41e080 <fprintf@GLIBC_2.2.5>
  404106:	push   0xd
  40410b:	jmp    404020 <free@plt-0x10>

0000000000404110 <memcpy@plt>:
  404110:	jmp    QWORD PTR [rip+0x19f72]        # 41e088 <memcpy@GLIBC_2.14>
  404116:	push   0xe
  40411b:	jmp    404020 <free@plt-0x10>

0000000000404120 <malloc@plt>:
  404120:	jmp    QWORD PTR [rip+0x19f6a]        # 41e090 <malloc@GLIBC_2.2.5>
  404126:	push   0xf
  40412b:	jmp    404020 <free@plt-0x10>

0000000000404130 <realloc@plt>:
  404130:	jmp    QWORD PTR [rip+0x19f62]        # 41e098 <realloc@GLIBC_2.2.5>
  404136:	push   0x10
  40413b:	jmp    404020 <free@plt-0x10>

0000000000404140 <fwrite@plt>:
  404140:	jmp    QWORD PTR [rip+0x19f5a]        # 41e0a0 <fwrite@GLIBC_2.2.5>
  404146:	push   0x11
  40414b:	jmp    404020 <free@plt-0x10>

0000000000404150 <posix_memalign@plt>:
  404150:	jmp    QWORD PTR [rip+0x19f52]        # 41e0a8 <posix_memalign@GLIBC_2.2.5>
  404156:	push   0x12
  40415b:	jmp    404020 <free@plt-0x10>

Disassembly of section .text:

0000000000404160 <_start@@Base>:
  404160:	endbr64 
  404164:	xor    ebp,ebp
  404166:	mov    r9,rdx
  404169:	pop    rsi
  40416a:	mov    rdx,rsp
  40416d:	and    rsp,0xfffffffffffffff0
  404171:	push   rax
  404172:	push   rsp
  404173:	mov    r8,0x414bc0
  40417a:	mov    rcx,0x414b50
  404181:	mov    rdi,0x40d3c0
  404188:	call   QWORD PTR [rip+0x19e5a]        # 41dfe8 <__libc_start_main@GLIBC_2.2.5>
  40418e:	hlt    
  40418f:	nop
  404190:	endbr64 
  404194:	ret    
  404195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40419f:	nop
  4041a0:	mov    eax,0x41e0c0
  4041a5:	cmp    rax,0x41e0c0
  4041ab:	je     4041c0 <_start@@Base+0x60>
  4041ad:	mov    eax,0x0
  4041b2:	test   rax,rax
  4041b5:	je     4041c0 <_start@@Base+0x60>
  4041b7:	mov    edi,0x41e0c0
  4041bc:	jmp    rax
  4041be:	xchg   ax,ax
  4041c0:	ret    
  4041c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4041cc:	nop    DWORD PTR [rax+0x0]
  4041d0:	mov    esi,0x41e0c0
  4041d5:	sub    rsi,0x41e0c0
  4041dc:	mov    rax,rsi
  4041df:	shr    rsi,0x3f
  4041e3:	sar    rax,0x3
  4041e7:	add    rsi,rax
  4041ea:	sar    rsi,1
  4041ed:	je     404200 <_start@@Base+0xa0>
  4041ef:	mov    eax,0x0
  4041f4:	test   rax,rax
  4041f7:	je     404200 <_start@@Base+0xa0>
  4041f9:	mov    edi,0x41e0c0
  4041fe:	jmp    rax
  404200:	ret    
  404201:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40420c:	nop    DWORD PTR [rax+0x0]
  404210:	endbr64 
  404214:	cmp    BYTE PTR [rip+0x19ea5],0x0        # 41e0c0 <__bss_start@@Base>
  40421b:	jne    404230 <_start@@Base+0xd0>
  40421d:	push   rbp
  40421e:	mov    rbp,rsp
  404221:	call   4041a0 <_start@@Base+0x40>
  404226:	mov    BYTE PTR [rip+0x19e93],0x1        # 41e0c0 <__bss_start@@Base>
  40422d:	pop    rbp
  40422e:	ret    
  40422f:	nop
  404230:	ret    
  404231:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40423c:	nop    DWORD PTR [rax+0x0]
  404240:	endbr64 
  404244:	jmp    4041d0 <_start@@Base+0x70>
  404246:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404250 <verify_empty_monster@@Base>:
  404250:	push   rax
  404251:	test   rdi,rdi
  404254:	je     404296 <verify_empty_monster@@Base+0x46>
  404256:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  40425d:	jne    404296 <verify_empty_monster@@Base+0x46>
  40425f:	mov    eax,DWORD PTR [rdi]
  404261:	lea    rcx,[rdi+rax*1]
  404265:	movsxd rdx,DWORD PTR [rdi+rax*1]
  404269:	mov    rax,rcx
  40426c:	sub    rax,rdx
  40426f:	neg    rdx
  404272:	movzx  eax,WORD PTR [rax]
  404275:	cmp    eax,0x9
  404278:	jbe    4042a9 <verify_empty_monster@@Base+0x59>
  40427a:	movzx  eax,WORD PTR [rcx+rdx*1+0x8]
  40427f:	test   rax,rax
  404282:	je     4042b3 <verify_empty_monster@@Base+0x63>
  404284:	movzx  eax,WORD PTR [rcx+rax*1]
  404288:	cmp    eax,0x64
  40428b:	jne    4042c4 <verify_empty_monster@@Base+0x74>
  40428d:	lea    rdi,[rip+0x12dec]        # 417080 <_IO_stdin_used@@Base+0x2080>
  404294:	jmp    40429d <verify_empty_monster@@Base+0x4d>
  404296:	lea    rdi,[rip+0x12fc3]        # 417260 <_IO_stdin_used@@Base+0x2260>
  40429d:	call   404060 <puts@plt>
  4042a2:	mov    eax,0xffffffff
  4042a7:	pop    rcx
  4042a8:	ret    
  4042a9:	movzx  esi,ax
  4042ac:	xor    eax,eax
  4042ae:	cmp    esi,0x6
  4042b1:	jb     4042a7 <verify_empty_monster@@Base+0x57>
  4042b3:	cmp    WORD PTR [rcx+rdx*1+0x4],0x0
  4042b9:	je     4042cd <verify_empty_monster@@Base+0x7d>
  4042bb:	lea    rdi,[rip+0x1301e]        # 4172e0 <_IO_stdin_used@@Base+0x22e0>
  4042c2:	jmp    40429d <verify_empty_monster@@Base+0x4d>
  4042c4:	lea    rdi,[rip+0x134a5]        # 417770 <_IO_stdin_used@@Base+0x2770>
  4042cb:	jmp    40429d <verify_empty_monster@@Base+0x4d>
  4042cd:	xor    eax,eax
  4042cf:	pop    rcx
  4042d0:	ret    
  4042d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004042e0 <test_enums@@Base>:
  4042e0:	xor    eax,eax
  4042e2:	ret    
  4042e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042ed:	nop    DWORD PTR [rax]

00000000004042f0 <test_type_aliases@@Base>:
  4042f0:	push   rbp
  4042f1:	push   r15
  4042f3:	push   r14
  4042f5:	push   rbx
  4042f6:	push   rax
  4042f7:	mov    rbx,rdi
  4042fa:	call   40e610 <flatcc_builder_reset@@Base>
  4042ff:	xor    r14d,r14d
  404302:	mov    esi,0x0
  404307:	xor    edx,edx
  404309:	mov    ecx,0x1
  40430e:	mov    r8d,0x1
  404314:	mov    r9d,0xffffffff
  40431a:	mov    rdi,rbx
  40431d:	call   411020 <flatcc_builder_create_vector@@Base>
  404322:	mov    ebp,eax
  404324:	mov    esi,0x0
  404329:	xor    edx,edx
  40432b:	mov    ecx,0x8
  404330:	mov    r8d,0x8
  404336:	mov    r9d,0x1fffffff
  40433c:	mov    rdi,rbx
  40433f:	call   411020 <flatcc_builder_create_vector@@Base>
  404344:	mov    r15d,eax
  404347:	lea    rsi,[rip+0x10dfa]        # 415148 <_IO_stdin_used@@Base+0x148>
  40434e:	xor    edx,edx
  404350:	xor    ecx,ecx
  404352:	mov    rdi,rbx
  404355:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40435a:	test   eax,eax
  40435c:	jne    40437e <test_type_aliases@@Base+0x8e>
  40435e:	mov    esi,0xc
  404363:	mov    rdi,rbx
  404366:	call   410480 <flatcc_builder_start_table@@Base>
  40436b:	test   eax,eax
  40436d:	je     4044bb <test_type_aliases@@Base+0x1cb>
  404373:	mov    rdi,rbx
  404376:	mov    esi,r14d
  404379:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40437e:	mov    rsi,rsp
  404381:	mov    rdi,rbx
  404384:	call   412b90 <flatcc_builder_finalize_aligned_buffer@@Base>
  404389:	mov    rbx,rax
  40438c:	mov    rsi,QWORD PTR [rsp]
  404390:	lea    rdx,[rip+0x10db1]        # 415148 <_IO_stdin_used@@Base+0x148>
  404397:	lea    rcx,[rip+0x91c2]        # 40d560 <main@@Base+0x1a0>
  40439e:	mov    rdi,rax
  4043a1:	call   413ff0 <flatcc_verify_table_as_root@@Base>
  4043a6:	test   eax,eax
  4043a8:	je     4043e9 <test_type_aliases@@Base+0xf9>
  4043aa:	mov    ebp,eax
  4043ac:	mov    rdx,QWORD PTR [rsp]
  4043b0:	mov    rax,QWORD PTR [rip+0x19c41]        # 41dff8 <stderr@GLIBC_2.2.5>
  4043b7:	mov    rcx,QWORD PTR [rax]
  4043ba:	lea    rdi,[rip+0x10d8c]        # 41514d <_IO_stdin_used@@Base+0x14d>
  4043c1:	mov    rsi,rbx
  4043c4:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  4043c9:	mov    edi,ebp
  4043cb:	call   413470 <flatcc_verify_error_string@@Base>
  4043d0:	mov    rcx,rax
  4043d3:	lea    rdi,[rip+0x10d86]        # 415160 <_IO_stdin_used@@Base+0x160>
  4043da:	xor    eax,eax
  4043dc:	mov    rsi,rcx
  4043df:	call   404080 <printf@plt>
  4043e4:	jmp    4044a6 <test_type_aliases@@Base+0x1b6>
  4043e9:	test   rbx,rbx
  4043ec:	je     404768 <test_type_aliases@@Base+0x478>
  4043f2:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  4043f9:	jne    404768 <test_type_aliases@@Base+0x478>
  4043ff:	mov    ecx,DWORD PTR [rbx]
  404401:	mov    rax,rbx
  404404:	add    rax,rcx
  404407:	movsxd rcx,DWORD PTR [rbx+rcx*1]
  40440b:	mov    rdx,rax
  40440e:	sub    rdx,rcx
  404411:	movzx  edx,WORD PTR [rdx]
  404414:	cmp    edx,0x5
  404417:	jbe    404495 <test_type_aliases@@Base+0x1a5>
  404419:	neg    rcx
  40441c:	movzx  esi,WORD PTR [rax+rcx*1+0x4]
  404421:	test   rsi,rsi
  404424:	je     404495 <test_type_aliases@@Base+0x1a5>
  404426:	movzx  edx,dx
  404429:	cmp    edx,0xa
  40442c:	jb     404495 <test_type_aliases@@Base+0x1a5>
  40442e:	cmp    BYTE PTR [rax+rsi*1],0x80
  404432:	jne    404495 <test_type_aliases@@Base+0x1a5>
  404434:	movzx  esi,WORD PTR [rax+rcx*1+0x8]
  404439:	test   rsi,rsi
  40443c:	je     404495 <test_type_aliases@@Base+0x1a5>
  40443e:	cmp    edx,0xe
  404441:	jb     404495 <test_type_aliases@@Base+0x1a5>
  404443:	movzx  esi,WORD PTR [rax+rsi*1]
  404447:	cmp    esi,0x8000
  40444d:	jne    404495 <test_type_aliases@@Base+0x1a5>
  40444f:	movzx  esi,WORD PTR [rax+rcx*1+0xc]
  404454:	test   rsi,rsi
  404457:	je     404495 <test_type_aliases@@Base+0x1a5>
  404459:	cmp    edx,0x12
  40445c:	jb     404495 <test_type_aliases@@Base+0x1a5>
  40445e:	cmp    DWORD PTR [rax+rsi*1],0x80000000
  404465:	jne    404495 <test_type_aliases@@Base+0x1a5>
  404467:	movzx  esi,WORD PTR [rax+rcx*1+0x10]
  40446c:	test   rsi,rsi
  40446f:	je     404495 <test_type_aliases@@Base+0x1a5>
  404471:	movabs rdi,0x8000000000000000
  40447b:	cmp    QWORD PTR [rax+rsi*1],rdi
  40447f:	jne    404495 <test_type_aliases@@Base+0x1a5>
  404481:	movzx  esi,WORD PTR [rax+rcx*1+0x6]
  404486:	test   rsi,rsi
  404489:	je     404495 <test_type_aliases@@Base+0x1a5>
  40448b:	cmp    BYTE PTR [rax+rsi*1],0xff
  40448f:	je     4046a9 <test_type_aliases@@Base+0x3b9>
  404495:	lea    rdi,[rip+0x12c04]        # 4170a0 <_IO_stdin_used@@Base+0x20a0>
  40449c:	call   404060 <puts@plt>
  4044a1:	mov    ebp,0xffffffff
  4044a6:	mov    rdi,rbx
  4044a9:	call   412cc0 <flatcc_builder_aligned_free@@Base>
  4044ae:	mov    eax,ebp
  4044b0:	add    rsp,0x8
  4044b4:	pop    rbx
  4044b5:	pop    r14
  4044b7:	pop    r15
  4044b9:	pop    rbp
  4044ba:	ret    
  4044bb:	mov    esi,0x6
  4044c0:	mov    edx,0x8
  4044c5:	mov    ecx,0x8
  4044ca:	mov    rdi,rbx
  4044cd:	call   411800 <flatcc_builder_table_add@@Base>
  4044d2:	test   rax,rax
  4044d5:	je     404373 <test_type_aliases@@Base+0x83>
  4044db:	movabs rcx,0x8000000000000000
  4044e5:	mov    QWORD PTR [rax],rcx
  4044e8:	mov    esi,0x7
  4044ed:	mov    edx,0x8
  4044f2:	mov    ecx,0x8
  4044f7:	mov    rdi,rbx
  4044fa:	call   411800 <flatcc_builder_table_add@@Base>
  4044ff:	test   rax,rax
  404502:	je     404373 <test_type_aliases@@Base+0x83>
  404508:	mov    QWORD PTR [rax],0xffffffffffffffff
  40450f:	mov    esi,0x9
  404514:	mov    edx,0x8
  404519:	mov    ecx,0x8
  40451e:	mov    rdi,rbx
  404521:	call   411800 <flatcc_builder_table_add@@Base>
  404526:	test   rax,rax
  404529:	je     404373 <test_type_aliases@@Base+0x83>
  40452f:	movabs rcx,0x4002666666666666
  404539:	mov    QWORD PTR [rax],rcx
  40453c:	mov    esi,0x4
  404541:	mov    edx,0x4
  404546:	mov    ecx,0x4
  40454b:	mov    rdi,rbx
  40454e:	call   411800 <flatcc_builder_table_add@@Base>
  404553:	test   rax,rax
  404556:	je     404373 <test_type_aliases@@Base+0x83>
  40455c:	mov    DWORD PTR [rax],0x80000000
  404562:	mov    esi,0x5
  404567:	mov    edx,0x4
  40456c:	mov    ecx,0x4
  404571:	mov    rdi,rbx
  404574:	call   411800 <flatcc_builder_table_add@@Base>
  404579:	test   rax,rax
  40457c:	je     404373 <test_type_aliases@@Base+0x83>
  404582:	mov    DWORD PTR [rax],0xffffffff
  404588:	mov    esi,0x8
  40458d:	mov    edx,0x4
  404592:	mov    ecx,0x4
  404597:	mov    rdi,rbx
  40459a:	call   411800 <flatcc_builder_table_add@@Base>
  40459f:	test   rax,rax
  4045a2:	je     404373 <test_type_aliases@@Base+0x83>
  4045a8:	mov    DWORD PTR [rax],0x40133333
  4045ae:	test   ebp,ebp
  4045b0:	je     404373 <test_type_aliases@@Base+0x83>
  4045b6:	mov    esi,0xa
  4045bb:	mov    rdi,rbx
  4045be:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4045c3:	test   rax,rax
  4045c6:	je     404373 <test_type_aliases@@Base+0x83>
  4045cc:	mov    DWORD PTR [rax],ebp
  4045ce:	test   r15d,r15d
  4045d1:	je     404373 <test_type_aliases@@Base+0x83>
  4045d7:	mov    esi,0xb
  4045dc:	mov    rdi,rbx
  4045df:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4045e4:	test   rax,rax
  4045e7:	je     404373 <test_type_aliases@@Base+0x83>
  4045ed:	mov    DWORD PTR [rax],r15d
  4045f0:	mov    esi,0x2
  4045f5:	mov    edx,0x2
  4045fa:	mov    ecx,0x2
  4045ff:	mov    rdi,rbx
  404602:	call   411800 <flatcc_builder_table_add@@Base>
  404607:	test   rax,rax
  40460a:	je     404373 <test_type_aliases@@Base+0x83>
  404610:	mov    WORD PTR [rax],0x8000
  404615:	mov    esi,0x3
  40461a:	mov    edx,0x2
  40461f:	mov    ecx,0x2
  404624:	mov    rdi,rbx
  404627:	call   411800 <flatcc_builder_table_add@@Base>
  40462c:	test   rax,rax
  40462f:	je     404373 <test_type_aliases@@Base+0x83>
  404635:	mov    WORD PTR [rax],0xffff
  40463a:	xor    r14d,r14d
  40463d:	xor    esi,esi
  40463f:	mov    edx,0x1
  404644:	mov    ecx,0x1
  404649:	mov    rdi,rbx
  40464c:	call   411800 <flatcc_builder_table_add@@Base>
  404651:	test   rax,rax
  404654:	je     404373 <test_type_aliases@@Base+0x83>
  40465a:	mov    BYTE PTR [rax],0x80
  40465d:	mov    esi,0x1
  404662:	mov    edx,0x1
  404667:	mov    ecx,0x1
  40466c:	mov    rdi,rbx
  40466f:	call   411800 <flatcc_builder_table_add@@Base>
  404674:	test   rax,rax
  404677:	je     404373 <test_type_aliases@@Base+0x83>
  40467d:	mov    BYTE PTR [rax],0xff
  404680:	lea    rsi,[rip+0x10aaf]        # 415136 <_IO_stdin_used@@Base+0x136>
  404687:	xor    edx,edx
  404689:	mov    rdi,rbx
  40468c:	call   410e20 <flatcc_builder_check_required@@Base>
  404691:	test   eax,eax
  404693:	je     404787 <test_type_aliases@@Base+0x497>
  404699:	mov    rdi,rbx
  40469c:	call   410e90 <flatcc_builder_end_table@@Base>
  4046a1:	mov    r14d,eax
  4046a4:	jmp    404373 <test_type_aliases@@Base+0x83>
  4046a9:	movzx  esi,WORD PTR [rax+rcx*1+0xa]
  4046ae:	test   rsi,rsi
  4046b1:	je     404495 <test_type_aliases@@Base+0x1a5>
  4046b7:	movzx  esi,WORD PTR [rax+rsi*1]
  4046bb:	cmp    esi,0xffff
  4046c1:	jne    404495 <test_type_aliases@@Base+0x1a5>
  4046c7:	movzx  esi,WORD PTR [rax+rcx*1+0xe]
  4046cc:	test   rsi,rsi
  4046cf:	je     404495 <test_type_aliases@@Base+0x1a5>
  4046d5:	cmp    edx,0x14
  4046d8:	jb     404495 <test_type_aliases@@Base+0x1a5>
  4046de:	cmp    DWORD PTR [rax+rsi*1],0xffffffff
  4046e2:	jne    404495 <test_type_aliases@@Base+0x1a5>
  4046e8:	movzx  esi,WORD PTR [rax+rcx*1+0x12]
  4046ed:	test   rsi,rsi
  4046f0:	je     404495 <test_type_aliases@@Base+0x1a5>
  4046f6:	cmp    edx,0x16
  4046f9:	jb     404495 <test_type_aliases@@Base+0x1a5>
  4046ff:	cmp    QWORD PTR [rax+rsi*1],0xffffffffffffffff
  404704:	jne    404495 <test_type_aliases@@Base+0x1a5>
  40470a:	movzx  esi,WORD PTR [rax+rcx*1+0x14]
  40470f:	test   rsi,rsi
  404712:	je     404495 <test_type_aliases@@Base+0x1a5>
  404718:	cmp    edx,0x18
  40471b:	jb     404495 <test_type_aliases@@Base+0x1a5>
  404721:	vmovss xmm0,DWORD PTR [rax+rsi*1]
  404726:	vucomiss xmm0,DWORD PTR [rip+0x108d6]        # 415004 <_IO_stdin_used@@Base+0x4>
  40472e:	jne    404495 <test_type_aliases@@Base+0x1a5>
  404734:	jp     404495 <test_type_aliases@@Base+0x1a5>
  40473a:	movzx  ecx,WORD PTR [rax+rcx*1+0x16]
  40473f:	test   rcx,rcx
  404742:	je     404495 <test_type_aliases@@Base+0x1a5>
  404748:	vmovsd xmm0,QWORD PTR [rax+rcx*1]
  40474d:	vucomisd xmm0,QWORD PTR [rip+0x108cb]        # 415020 <_IO_stdin_used@@Base+0x20>
  404755:	jne    404495 <test_type_aliases@@Base+0x1a5>
  40475b:	jp     404495 <test_type_aliases@@Base+0x1a5>
  404761:	xor    ebp,ebp
  404763:	jmp    4044a6 <test_type_aliases@@Base+0x1b6>
  404768:	lea    rdi,[rip+0x116f7]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  40476f:	lea    rsi,[rip+0x11716]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  404776:	lea    rcx,[rip+0x119b7]        # 416134 <_IO_stdin_used@@Base+0x1134>
  40477d:	mov    edx,0x2ed
  404782:	call   4040a0 <__assert_fail@plt>
  404787:	lea    rdi,[rip+0x11805]        # 415f93 <_IO_stdin_used@@Base+0xf93>
  40478e:	lea    rsi,[rip+0x118ac]        # 416041 <_IO_stdin_used@@Base+0x1041>
  404795:	lea    rcx,[rip+0x11922]        # 4160be <_IO_stdin_used@@Base+0x10be>
  40479c:	mov    edx,0xed
  4047a1:	call   4040a0 <__assert_fail@plt>
  4047a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047b0:	push   rbp
  4047b1:	push   r15
  4047b3:	push   r14
  4047b5:	push   r13
  4047b7:	push   r12
  4047b9:	push   rbx
  4047ba:	sub    rsp,0x18
  4047be:	mov    r14,rcx
  4047c1:	mov    rbx,rdx
  4047c4:	mov    r15,rsi
  4047c7:	test   rdi,rdi
  4047ca:	je     4047e3 <test_type_aliases@@Base+0x4f3>
  4047cc:	mov    rcx,rdi
  4047cf:	lea    rsi,[rip+0x11941]        # 416117 <_IO_stdin_used@@Base+0x1117>
  4047d6:	xor    eax,eax
  4047d8:	mov    rdi,r14
  4047db:	mov    rdx,rcx
  4047de:	call   404100 <fprintf@plt>
  4047e3:	test   ebx,ebx
  4047e5:	je     4048bf <test_type_aliases@@Base+0x5cf>
  4047eb:	mov    r12d,ebx
  4047ee:	xor    ebp,ebp
  4047f0:	mov    r13d,ebp
  4047f3:	and    r13d,0xf
  4047f7:	test   r13d,r13d
  4047fa:	je     404820 <test_type_aliases@@Base+0x530>
  4047fc:	test   bpl,0x7
  404800:	jne    40484c <test_type_aliases@@Base+0x55c>
  404802:	mov    edi,0x20
  404807:	mov    rsi,r14
  40480a:	call   4040c0 <fputc@plt>
  40480f:	jmp    40484c <test_type_aliases@@Base+0x55c>
  404811:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40481b:	nop    DWORD PTR [rax+rax*1+0x0]
  404820:	test   rbp,rbp
  404823:	je     404839 <test_type_aliases@@Base+0x549>
  404825:	xor    eax,eax
  404827:	mov    rdi,r14
  40482a:	lea    rsi,[rip+0x118eb]        # 41611c <_IO_stdin_used@@Base+0x111c>
  404831:	mov    rdx,rsp
  404834:	call   404100 <fprintf@plt>
  404839:	xor    eax,eax
  40483b:	mov    rdi,r14
  40483e:	lea    rsi,[rip+0x118dd]        # 416122 <_IO_stdin_used@@Base+0x1122>
  404845:	mov    edx,ebp
  404847:	call   404100 <fprintf@plt>
  40484c:	movzx  edx,BYTE PTR [r15+rbp*1]
  404851:	xor    eax,eax
  404853:	mov    rdi,r14
  404856:	lea    rsi,[rip+0x118cd]        # 41612a <_IO_stdin_used@@Base+0x112a>
  40485d:	call   404100 <fprintf@plt>
  404862:	movzx  eax,BYTE PTR [r15+rbp*1]
  404867:	mov    edx,eax
  404869:	add    dl,0xe0
  40486c:	mov    cl,0x2e
  40486e:	cmp    dl,0x5e
  404871:	ja     404875 <test_type_aliases@@Base+0x585>
  404873:	mov    ecx,eax
  404875:	mov    BYTE PTR [rsp+r13*1],cl
  404879:	mov    BYTE PTR [rsp+r13*1+0x1],0x0
  40487f:	add    rbp,0x1
  404883:	cmp    r12,rbp
  404886:	jne    4047f0 <test_type_aliases@@Base+0x500>
  40488c:	test   bl,0xf
  40488f:	je     4048bf <test_type_aliases@@Base+0x5cf>
  404891:	add    ebx,0x1
  404894:	lea    r15,[rip+0x11895]        # 416130 <_IO_stdin_used@@Base+0x1130>
  40489b:	mov    ebp,ebx
  40489d:	nop    DWORD PTR [rax]
  4048a0:	mov    esi,0x3
  4048a5:	mov    edx,0x1
  4048aa:	mov    rdi,r15
  4048ad:	mov    rcx,r14
  4048b0:	call   404140 <fwrite@plt>
  4048b5:	add    ebp,0x1
  4048b8:	test   bl,0xf
  4048bb:	mov    ebx,ebp
  4048bd:	jne    4048a0 <test_type_aliases@@Base+0x5b0>
  4048bf:	lea    rsi,[rip+0x11856]        # 41611c <_IO_stdin_used@@Base+0x111c>
  4048c6:	mov    rdx,rsp
  4048c9:	xor    eax,eax
  4048cb:	mov    rdi,r14
  4048ce:	call   404100 <fprintf@plt>
  4048d3:	add    rsp,0x18
  4048d7:	pop    rbx
  4048d8:	pop    r12
  4048da:	pop    r13
  4048dc:	pop    r14
  4048de:	pop    r15
  4048e0:	pop    rbp
  4048e1:	ret    
  4048e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048ec:	nop    DWORD PTR [rax+0x0]

00000000004048f0 <test_empty_monster@@Base>:
  4048f0:	push   rbp
  4048f1:	push   rbx
  4048f2:	push   rax
  4048f3:	mov    rbx,rdi
  4048f6:	call   40e610 <flatcc_builder_reset@@Base>
  4048fb:	lea    rsi,[rip+0x10846]        # 415148 <_IO_stdin_used@@Base+0x148>
  404902:	xor    edx,edx
  404904:	xor    ecx,ecx
  404906:	mov    rdi,rbx
  404909:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40490e:	mov    esi,0x24
  404913:	mov    rdi,rbx
  404916:	call   410480 <flatcc_builder_start_table@@Base>
  40491b:	lea    rsi,[rip+0x1086a]        # 41518c <_IO_stdin_used@@Base+0x18c>
  404922:	mov    rdi,rbx
  404925:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40492a:	test   eax,eax
  40492c:	je     404944 <test_empty_monster@@Base+0x54>
  40492e:	mov    ebp,eax
  404930:	mov    esi,0x3
  404935:	mov    rdi,rbx
  404938:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40493d:	test   rax,rax
  404940:	je     404944 <test_empty_monster@@Base+0x54>
  404942:	mov    DWORD PTR [rax],ebp
  404944:	lea    rsi,[rip+0x107ed]        # 415138 <_IO_stdin_used@@Base+0x138>
  40494b:	mov    edx,0x1
  404950:	mov    rdi,rbx
  404953:	call   410e20 <flatcc_builder_check_required@@Base>
  404958:	test   eax,eax
  40495a:	je     404aa2 <test_empty_monster@@Base+0x1b2>
  404960:	mov    rdi,rbx
  404963:	call   410e90 <flatcc_builder_end_table@@Base>
  404968:	mov    rdi,rbx
  40496b:	mov    esi,eax
  40496d:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  404972:	mov    rsi,rsp
  404975:	mov    rdi,rbx
  404978:	call   412b90 <flatcc_builder_finalize_aligned_buffer@@Base>
  40497d:	mov    rbx,rax
  404980:	mov    rdx,QWORD PTR [rsp]
  404984:	mov    rax,QWORD PTR [rip+0x1966d]        # 41dff8 <stderr@GLIBC_2.2.5>
  40498b:	mov    rcx,QWORD PTR [rax]
  40498e:	lea    rdi,[rip+0x10801]        # 415196 <_IO_stdin_used@@Base+0x196>
  404995:	mov    rsi,rbx
  404998:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  40499d:	test   rbx,rbx
  4049a0:	je     4049e8 <test_empty_monster@@Base+0xf8>
  4049a2:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  4049a9:	jne    4049e8 <test_empty_monster@@Base+0xf8>
  4049ab:	mov    ecx,DWORD PTR [rbx]
  4049ad:	mov    rax,rbx
  4049b0:	add    rax,rcx
  4049b3:	movsxd rcx,DWORD PTR [rbx+rcx*1]
  4049b7:	mov    rdx,rax
  4049ba:	sub    rdx,rcx
  4049bd:	neg    rcx
  4049c0:	movzx  edx,WORD PTR [rdx]
  4049c3:	cmp    edx,0x9
  4049c6:	jbe    404a0a <test_empty_monster@@Base+0x11a>
  4049c8:	movzx  edx,WORD PTR [rax+rcx*1+0x8]
  4049cd:	test   rdx,rdx
  4049d0:	je     404a12 <test_empty_monster@@Base+0x122>
  4049d2:	movzx  eax,WORD PTR [rax+rdx*1]
  4049d6:	cmp    eax,0x64
  4049d9:	jne    404a63 <test_empty_monster@@Base+0x173>
  4049df:	lea    rdi,[rip+0x1269a]        # 417080 <_IO_stdin_used@@Base+0x2080>
  4049e6:	jmp    4049ef <test_empty_monster@@Base+0xff>
  4049e8:	lea    rdi,[rip+0x12871]        # 417260 <_IO_stdin_used@@Base+0x2260>
  4049ef:	call   404060 <puts@plt>
  4049f4:	mov    ebp,0xffffffff
  4049f9:	mov    rdi,rbx
  4049fc:	call   412cc0 <flatcc_builder_aligned_free@@Base>
  404a01:	mov    eax,ebp
  404a03:	add    rsp,0x8
  404a07:	pop    rbx
  404a08:	pop    rbp
  404a09:	ret    
  404a0a:	movzx  edx,dx
  404a0d:	cmp    edx,0x6
  404a10:	jb     404a23 <test_empty_monster@@Base+0x133>
  404a12:	cmp    WORD PTR [rax+rcx*1+0x4],0x0
  404a18:	je     404a23 <test_empty_monster@@Base+0x133>
  404a1a:	lea    rdi,[rip+0x128bf]        # 4172e0 <_IO_stdin_used@@Base+0x22e0>
  404a21:	jmp    4049ef <test_empty_monster@@Base+0xff>
  404a23:	mov    rsi,QWORD PTR [rsp]
  404a27:	lea    rdx,[rip+0x1071a]        # 415148 <_IO_stdin_used@@Base+0x148>
  404a2e:	lea    rcx,[rip+0x8c9b]        # 40d6d0 <main@@Base+0x310>
  404a35:	mov    rdi,rbx
  404a38:	call   413ff0 <flatcc_verify_table_as_root@@Base>
  404a3d:	test   eax,eax
  404a3f:	je     404a6c <test_empty_monster@@Base+0x17c>
  404a41:	mov    edi,eax
  404a43:	call   413470 <flatcc_verify_error_string@@Base>
  404a48:	mov    rcx,rax
  404a4b:	lea    rdi,[rip+0x10758]        # 4151aa <_IO_stdin_used@@Base+0x1aa>
  404a52:	xor    eax,eax
  404a54:	mov    rsi,rcx
  404a57:	call   404080 <printf@plt>
  404a5c:	mov    ebp,0xffffffff
  404a61:	jmp    404a01 <test_empty_monster@@Base+0x111>
  404a63:	lea    rdi,[rip+0x12d06]        # 417770 <_IO_stdin_used@@Base+0x2770>
  404a6a:	jmp    4049ef <test_empty_monster@@Base+0xff>
  404a6c:	mov    rsi,QWORD PTR [rsp]
  404a70:	add    rsi,0xffffffffffffffff
  404a74:	lea    rdx,[rip+0x106cd]        # 415148 <_IO_stdin_used@@Base+0x148>
  404a7b:	lea    rcx,[rip+0x8c4e]        # 40d6d0 <main@@Base+0x310>
  404a82:	mov    rdi,rbx
  404a85:	call   413ff0 <flatcc_verify_table_as_root@@Base>
  404a8a:	xor    ebp,ebp
  404a8c:	test   eax,eax
  404a8e:	jne    4049f9 <test_empty_monster@@Base+0x109>
  404a94:	lea    rdi,[rip+0x12635]        # 4170d0 <_IO_stdin_used@@Base+0x20d0>
  404a9b:	call   404060 <puts@plt>
  404aa0:	jmp    404a5c <test_empty_monster@@Base+0x16c>
  404aa2:	lea    rdi,[rip+0x116d4]        # 41617d <_IO_stdin_used@@Base+0x117d>
  404aa9:	lea    rsi,[rip+0x11591]        # 416041 <_IO_stdin_used@@Base+0x1041>
  404ab0:	lea    rcx,[rip+0x11768]        # 41621f <_IO_stdin_used@@Base+0x121f>
  404ab7:	mov    edx,0xeb
  404abc:	call   4040a0 <__assert_fail@plt>
  404ac1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404acb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404ad0 <test_typed_empty_monster@@Base>:
  404ad0:	push   rbp
  404ad1:	push   rbx
  404ad2:	sub    rsp,0x18
  404ad6:	mov    rbx,rdi
  404ad9:	mov    DWORD PTR [rsp+0x14],0x0
  404ae1:	call   40e610 <flatcc_builder_reset@@Base>
  404ae6:	lea    rsi,[rip+0x106e5]        # 4151d2 <_IO_stdin_used@@Base+0x1d2>
  404aed:	xor    edx,edx
  404aef:	xor    ecx,ecx
  404af1:	mov    rdi,rbx
  404af4:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  404af9:	mov    esi,0x24
  404afe:	mov    rdi,rbx
  404b01:	call   410480 <flatcc_builder_start_table@@Base>
  404b06:	lea    rsi,[rip+0x1067f]        # 41518c <_IO_stdin_used@@Base+0x18c>
  404b0d:	mov    rdi,rbx
  404b10:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  404b15:	test   eax,eax
  404b17:	je     404b2f <test_typed_empty_monster@@Base+0x5f>
  404b19:	mov    ebp,eax
  404b1b:	mov    esi,0x3
  404b20:	mov    rdi,rbx
  404b23:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  404b28:	test   rax,rax
  404b2b:	je     404b2f <test_typed_empty_monster@@Base+0x5f>
  404b2d:	mov    DWORD PTR [rax],ebp
  404b2f:	lea    rsi,[rip+0x10602]        # 415138 <_IO_stdin_used@@Base+0x138>
  404b36:	mov    edx,0x1
  404b3b:	mov    rdi,rbx
  404b3e:	call   410e20 <flatcc_builder_check_required@@Base>
  404b43:	test   eax,eax
  404b45:	je     404cea <test_typed_empty_monster@@Base+0x21a>
  404b4b:	mov    rdi,rbx
  404b4e:	call   410e90 <flatcc_builder_end_table@@Base>
  404b53:	mov    rdi,rbx
  404b56:	mov    esi,eax
  404b58:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  404b5d:	lea    rsi,[rsp+0x8]
  404b62:	mov    rdi,rbx
  404b65:	call   412b90 <flatcc_builder_finalize_aligned_buffer@@Base>
  404b6a:	mov    rbx,rax
  404b6d:	mov    rdx,QWORD PTR [rsp+0x8]
  404b72:	mov    rax,QWORD PTR [rip+0x1947f]        # 41dff8 <stderr@GLIBC_2.2.5>
  404b79:	mov    rcx,QWORD PTR [rax]
  404b7c:	lea    rdi,[rip+0x10654]        # 4151d7 <_IO_stdin_used@@Base+0x1d7>
  404b83:	mov    rsi,rbx
  404b86:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  404b8b:	mov    esi,DWORD PTR [rbx+0x4]
  404b8e:	cmp    rsi,0x330ef481
  404b95:	jne    404c00 <test_typed_empty_monster@@Base+0x130>
  404b97:	lea    rdi,[rip+0x126c2]        # 417260 <_IO_stdin_used@@Base+0x2260>
  404b9e:	call   404060 <puts@plt>
  404ba3:	mov    rsi,QWORD PTR [rsp+0x8]
  404ba8:	lea    rdx,[rip+0x10623]        # 4151d2 <_IO_stdin_used@@Base+0x1d2>
  404baf:	lea    rcx,[rip+0x8b1a]        # 40d6d0 <main@@Base+0x310>
  404bb6:	mov    rdi,rbx
  404bb9:	call   413ff0 <flatcc_verify_table_as_root@@Base>
  404bbe:	test   eax,eax
  404bc0:	jne    404be1 <test_typed_empty_monster@@Base+0x111>
  404bc2:	mov    rsi,QWORD PTR [rsp+0x8]
  404bc7:	lea    rdx,[rip+0x10604]        # 4151d2 <_IO_stdin_used@@Base+0x1d2>
  404bce:	lea    rcx,[rip+0x8afb]        # 40d6d0 <main@@Base+0x310>
  404bd5:	mov    rdi,rbx
  404bd8:	call   413ff0 <flatcc_verify_table_as_root@@Base>
  404bdd:	test   eax,eax
  404bdf:	je     404c24 <test_typed_empty_monster@@Base+0x154>
  404be1:	mov    ebp,eax
  404be3:	mov    edi,eax
  404be5:	call   413470 <flatcc_verify_error_string@@Base>
  404bea:	mov    rcx,rax
  404bed:	lea    rdi,[rip+0x1062f]        # 415223 <_IO_stdin_used@@Base+0x223>
  404bf4:	xor    eax,eax
  404bf6:	mov    rsi,rcx
  404bf9:	call   404080 <printf@plt>
  404bfe:	jmp    404c13 <test_typed_empty_monster@@Base+0x143>
  404c00:	lea    rdi,[rip+0x105ea]        # 4151f1 <_IO_stdin_used@@Base+0x1f1>
  404c07:	xor    eax,eax
  404c09:	call   404080 <printf@plt>
  404c0e:	mov    ebp,0xffffffff
  404c13:	mov    rdi,rbx
  404c16:	call   412cc0 <flatcc_builder_aligned_free@@Base>
  404c1b:	mov    eax,ebp
  404c1d:	add    rsp,0x18
  404c21:	pop    rbx
  404c22:	pop    rbp
  404c23:	ret    
  404c24:	mov    rsi,QWORD PTR [rsp+0x8]
  404c29:	lea    rcx,[rip+0x8aa0]        # 40d6d0 <main@@Base+0x310>
  404c30:	mov    edx,0x330ef481
  404c35:	mov    rdi,rbx
  404c38:	call   414170 <flatcc_verify_table_as_typed_root@@Base>
  404c3d:	test   eax,eax
  404c3f:	je     404c56 <test_typed_empty_monster@@Base+0x186>
  404c41:	mov    ebp,eax
  404c43:	mov    edi,eax
  404c45:	call   413470 <flatcc_verify_error_string@@Base>
  404c4a:	mov    rcx,rax
  404c4d:	lea    rdi,[rip+0x105fd]        # 415251 <_IO_stdin_used@@Base+0x251>
  404c54:	jmp    404bf4 <test_typed_empty_monster@@Base+0x124>
  404c56:	mov    rsi,QWORD PTR [rsp+0x8]
  404c5b:	lea    rcx,[rip+0x8a6e]        # 40d6d0 <main@@Base+0x310>
  404c62:	mov    edx,0x330ef481
  404c67:	mov    rdi,rbx
  404c6a:	call   414170 <flatcc_verify_table_as_typed_root@@Base>
  404c6f:	test   eax,eax
  404c71:	je     404c8b <test_typed_empty_monster@@Base+0x1bb>
  404c73:	mov    ebp,eax
  404c75:	mov    edi,eax
  404c77:	call   413470 <flatcc_verify_error_string@@Base>
  404c7c:	mov    rcx,rax
  404c7f:	lea    rdi,[rip+0x10602]        # 415288 <_IO_stdin_used@@Base+0x288>
  404c86:	jmp    404bf4 <test_typed_empty_monster@@Base+0x124>
  404c8b:	mov    DWORD PTR [rsp+0x14],0x330ef481
  404c93:	mov    rsi,QWORD PTR [rsp+0x8]
  404c98:	lea    rcx,[rip+0x8a31]        # 40d6d0 <main@@Base+0x310>
  404c9f:	lea    rdx,[rsp+0x14]
  404ca4:	mov    rdi,rbx
  404ca7:	call   413ff0 <flatcc_verify_table_as_root@@Base>
  404cac:	test   eax,eax
  404cae:	jne    404be1 <test_typed_empty_monster@@Base+0x111>
  404cb4:	mov    rsi,QWORD PTR [rsp+0x8]
  404cb9:	lea    rdx,[rip+0x10488]        # 415148 <_IO_stdin_used@@Base+0x148>
  404cc0:	lea    rcx,[rip+0x8a09]        # 40d6d0 <main@@Base+0x310>
  404cc7:	mov    rdi,rbx
  404cca:	call   413ff0 <flatcc_verify_table_as_root@@Base>
  404ccf:	xor    ebp,ebp
  404cd1:	test   eax,eax
  404cd3:	jne    404c13 <test_typed_empty_monster@@Base+0x143>
  404cd9:	lea    rdi,[rip+0x12420]        # 417100 <_IO_stdin_used@@Base+0x2100>
  404ce0:	call   404060 <puts@plt>
  404ce5:	jmp    404c13 <test_typed_empty_monster@@Base+0x143>
  404cea:	lea    rdi,[rip+0x1148c]        # 41617d <_IO_stdin_used@@Base+0x117d>
  404cf1:	lea    rsi,[rip+0x11349]        # 416041 <_IO_stdin_used@@Base+0x1041>
  404cf8:	lea    rcx,[rip+0x11520]        # 41621f <_IO_stdin_used@@Base+0x121f>
  404cff:	mov    edx,0xeb
  404d04:	call   4040a0 <__assert_fail@plt>
  404d09:	nop    DWORD PTR [rax+0x0]

0000000000404d10 <verify_table_with_emptystruct@@Base>:
  404d10:	push   rax
  404d11:	test   rdi,rdi
  404d14:	je     404d4d <verify_table_with_emptystruct@@Base+0x3d>
  404d16:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  404d1d:	jne    404d4d <verify_table_with_emptystruct@@Base+0x3d>
  404d1f:	mov    eax,DWORD PTR [rdi]
  404d21:	lea    rcx,[rdi+rax*1]
  404d25:	movsxd rax,DWORD PTR [rdi+rax*1]
  404d29:	mov    rdx,rcx
  404d2c:	sub    rdx,rax
  404d2f:	movzx  edx,WORD PTR [rdx]
  404d32:	cmp    edx,0x5
  404d35:	jbe    404d56 <verify_table_with_emptystruct@@Base+0x46>
  404d37:	neg    rax
  404d3a:	movzx  edx,WORD PTR [rcx+rax*1+0x4]
  404d3f:	test   rdx,rdx
  404d42:	je     404d56 <verify_table_with_emptystruct@@Base+0x46>
  404d44:	xor    eax,eax
  404d46:	add    rcx,rdx
  404d49:	je     404d56 <verify_table_with_emptystruct@@Base+0x46>
  404d4b:	pop    rcx
  404d4c:	ret    
  404d4d:	lea    rdi,[rip+0x123fc]        # 417150 <_IO_stdin_used@@Base+0x2150>
  404d54:	jmp    404d5d <verify_table_with_emptystruct@@Base+0x4d>
  404d56:	lea    rdi,[rip+0x12423]        # 417180 <_IO_stdin_used@@Base+0x2180>
  404d5d:	call   404060 <puts@plt>
  404d62:	mov    eax,0xffffffff
  404d67:	pop    rcx
  404d68:	ret    
  404d69:	nop    DWORD PTR [rax+0x0]

0000000000404d70 <test_table_with_emptystruct@@Base>:
  404d70:	push   rbp
  404d71:	push   r14
  404d73:	push   rbx
  404d74:	sub    rsp,0x10
  404d78:	mov    rbx,rdi
  404d7b:	call   40e610 <flatcc_builder_reset@@Base>
  404d80:	lea    rsi,[rip+0x103c1]        # 415148 <_IO_stdin_used@@Base+0x148>
  404d87:	xor    r14d,r14d
  404d8a:	xor    edx,edx
  404d8c:	xor    ecx,ecx
  404d8e:	mov    rdi,rbx
  404d91:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  404d96:	test   eax,eax
  404d98:	jne    404df3 <test_table_with_emptystruct@@Base+0x83>
  404d9a:	mov    esi,0x1
  404d9f:	mov    rdi,rbx
  404da2:	call   410480 <flatcc_builder_start_table@@Base>
  404da7:	test   eax,eax
  404da9:	jne    404de8 <test_table_with_emptystruct@@Base+0x78>
  404dab:	xor    r14d,r14d
  404dae:	xor    esi,esi
  404db0:	xor    edx,edx
  404db2:	mov    ecx,0x1
  404db7:	mov    rdi,rbx
  404dba:	call   411800 <flatcc_builder_table_add@@Base>
  404dbf:	test   rax,rax
  404dc2:	je     404de8 <test_table_with_emptystruct@@Base+0x78>
  404dc4:	lea    rsi,[rip+0x10371]        # 41513c <_IO_stdin_used@@Base+0x13c>
  404dcb:	xor    edx,edx
  404dcd:	mov    rdi,rbx
  404dd0:	call   410e20 <flatcc_builder_check_required@@Base>
  404dd5:	test   eax,eax
  404dd7:	je     404e8a <test_table_with_emptystruct@@Base+0x11a>
  404ddd:	mov    rdi,rbx
  404de0:	call   410e90 <flatcc_builder_end_table@@Base>
  404de5:	mov    r14d,eax
  404de8:	mov    rdi,rbx
  404deb:	mov    esi,r14d
  404dee:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  404df3:	lea    rsi,[rsp+0x8]
  404df8:	mov    rdi,rbx
  404dfb:	call   412b90 <flatcc_builder_finalize_aligned_buffer@@Base>
  404e00:	mov    rbx,rax
  404e03:	mov    rdx,QWORD PTR [rsp+0x8]
  404e08:	mov    rax,QWORD PTR [rip+0x191e9]        # 41dff8 <stderr@GLIBC_2.2.5>
  404e0f:	mov    rcx,QWORD PTR [rax]
  404e12:	lea    rdi,[rip+0x104b5]        # 4152ce <_IO_stdin_used@@Base+0x2ce>
  404e19:	mov    rsi,rbx
  404e1c:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  404e21:	test   rbx,rbx
  404e24:	je     404e66 <test_table_with_emptystruct@@Base+0xf6>
  404e26:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  404e2d:	jne    404e66 <test_table_with_emptystruct@@Base+0xf6>
  404e2f:	mov    ecx,DWORD PTR [rbx]
  404e31:	mov    rax,rbx
  404e34:	add    rax,rcx
  404e37:	movsxd rcx,DWORD PTR [rbx+rcx*1]
  404e3b:	mov    rdx,rax
  404e3e:	sub    rdx,rcx
  404e41:	movzx  edx,WORD PTR [rdx]
  404e44:	cmp    edx,0x5
  404e47:	jbe    404e5d <test_table_with_emptystruct@@Base+0xed>
  404e49:	neg    rcx
  404e4c:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  404e51:	test   rcx,rcx
  404e54:	je     404e5d <test_table_with_emptystruct@@Base+0xed>
  404e56:	xor    ebp,ebp
  404e58:	add    rax,rcx
  404e5b:	jne    404e77 <test_table_with_emptystruct@@Base+0x107>
  404e5d:	lea    rdi,[rip+0x1231c]        # 417180 <_IO_stdin_used@@Base+0x2180>
  404e64:	jmp    404e6d <test_table_with_emptystruct@@Base+0xfd>
  404e66:	lea    rdi,[rip+0x122e3]        # 417150 <_IO_stdin_used@@Base+0x2150>
  404e6d:	call   404060 <puts@plt>
  404e72:	mov    ebp,0xffffffff
  404e77:	mov    rdi,rbx
  404e7a:	call   412cc0 <flatcc_builder_aligned_free@@Base>
  404e7f:	mov    eax,ebp
  404e81:	add    rsp,0x10
  404e85:	pop    rbx
  404e86:	pop    r14
  404e88:	pop    rbp
  404e89:	ret    
  404e8a:	lea    rdi,[rip+0x113df]        # 416270 <_IO_stdin_used@@Base+0x1270>
  404e91:	lea    rsi,[rip+0x111a9]        # 416041 <_IO_stdin_used@@Base+0x1041>
  404e98:	lea    rcx,[rip+0x1148e]        # 41632d <_IO_stdin_used@@Base+0x132d>
  404e9f:	mov    edx,0xd7
  404ea4:	call   4040a0 <__assert_fail@plt>
  404ea9:	nop    DWORD PTR [rax+0x0]

0000000000404eb0 <test_typed_table_with_emptystruct@@Base>:
  404eb0:	push   r14
  404eb2:	push   rbx
  404eb3:	push   rax
  404eb4:	mov    rbx,rdi
  404eb7:	call   40e610 <flatcc_builder_reset@@Base>
  404ebc:	lea    rsi,[rip+0x10423]        # 4152e6 <_IO_stdin_used@@Base+0x2e6>
  404ec3:	xor    r14d,r14d
  404ec6:	xor    edx,edx
  404ec8:	xor    ecx,ecx
  404eca:	mov    rdi,rbx
  404ecd:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  404ed2:	test   eax,eax
  404ed4:	jne    404f2f <test_typed_table_with_emptystruct@@Base+0x7f>
  404ed6:	mov    esi,0x1
  404edb:	mov    rdi,rbx
  404ede:	call   410480 <flatcc_builder_start_table@@Base>
  404ee3:	test   eax,eax
  404ee5:	jne    404f24 <test_typed_table_with_emptystruct@@Base+0x74>
  404ee7:	xor    r14d,r14d
  404eea:	xor    esi,esi
  404eec:	xor    edx,edx
  404eee:	mov    ecx,0x1
  404ef3:	mov    rdi,rbx
  404ef6:	call   411800 <flatcc_builder_table_add@@Base>
  404efb:	test   rax,rax
  404efe:	je     404f24 <test_typed_table_with_emptystruct@@Base+0x74>
  404f00:	lea    rsi,[rip+0x10235]        # 41513c <_IO_stdin_used@@Base+0x13c>
  404f07:	xor    edx,edx
  404f09:	mov    rdi,rbx
  404f0c:	call   410e20 <flatcc_builder_check_required@@Base>
  404f11:	test   eax,eax
  404f13:	je     404fff <test_typed_table_with_emptystruct@@Base+0x14f>
  404f19:	mov    rdi,rbx
  404f1c:	call   410e90 <flatcc_builder_end_table@@Base>
  404f21:	mov    r14d,eax
  404f24:	mov    rdi,rbx
  404f27:	mov    esi,r14d
  404f2a:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  404f2f:	mov    rsi,rsp
  404f32:	mov    rdi,rbx
  404f35:	call   412a50 <flatcc_builder_get_direct_buffer@@Base>
  404f3a:	mov    rbx,rax
  404f3d:	mov    rdx,QWORD PTR [rsp]
  404f41:	mov    rax,QWORD PTR [rip+0x190b0]        # 41dff8 <stderr@GLIBC_2.2.5>
  404f48:	mov    rcx,QWORD PTR [rax]
  404f4b:	lea    rdi,[rip+0x10376]        # 4152c8 <_IO_stdin_used@@Base+0x2c8>
  404f52:	mov    rsi,rbx
  404f55:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  404f5a:	mov    rsi,QWORD PTR [rsp]
  404f5e:	lea    rdx,[rip+0x10381]        # 4152e6 <_IO_stdin_used@@Base+0x2e6>
  404f65:	lea    rcx,[rip+0x9014]        # 40df80 <main@@Base+0xbc0>
  404f6c:	mov    rdi,rbx
  404f6f:	call   413ff0 <flatcc_verify_table_as_root@@Base>
  404f74:	test   eax,eax
  404f76:	je     404f81 <test_typed_table_with_emptystruct@@Base+0xd1>
  404f78:	lea    rdi,[rip+0x12291]        # 417210 <_IO_stdin_used@@Base+0x2210>
  404f7f:	jmp    404fcb <test_typed_table_with_emptystruct@@Base+0x11b>
  404f81:	mov    rsi,QWORD PTR [rsp]
  404f85:	lea    rdx,[rip+0x1035a]        # 4152e6 <_IO_stdin_used@@Base+0x2e6>
  404f8c:	lea    rcx,[rip+0x8fed]        # 40df80 <main@@Base+0xbc0>
  404f93:	mov    rdi,rbx
  404f96:	call   413ff0 <flatcc_verify_table_as_root@@Base>
  404f9b:	test   eax,eax
  404f9d:	je     404fa8 <test_typed_table_with_emptystruct@@Base+0xf8>
  404f9f:	lea    rdi,[rip+0x1224a]        # 4171f0 <_IO_stdin_used@@Base+0x21f0>
  404fa6:	jmp    404fcb <test_typed_table_with_emptystruct@@Base+0x11b>
  404fa8:	mov    rsi,QWORD PTR [rsp]
  404fac:	lea    rcx,[rip+0x8fcd]        # 40df80 <main@@Base+0xbc0>
  404fb3:	mov    edx,0xb0dd37b6
  404fb8:	mov    rdi,rbx
  404fbb:	call   414170 <flatcc_verify_table_as_typed_root@@Base>
  404fc0:	test   eax,eax
  404fc2:	je     404fdd <test_typed_table_with_emptystruct@@Base+0x12d>
  404fc4:	lea    rdi,[rip+0x121f5]        # 4171c0 <_IO_stdin_used@@Base+0x21c0>
  404fcb:	call   404060 <puts@plt>
  404fd0:	mov    eax,0xffffffff
  404fd5:	add    rsp,0x8
  404fd9:	pop    rbx
  404fda:	pop    r14
  404fdc:	ret    
  404fdd:	test   rbx,rbx
  404fe0:	je     404ff6 <test_typed_table_with_emptystruct@@Base+0x146>
  404fe2:	xor    eax,eax
  404fe4:	cmp    DWORD PTR [rbx+0x4],0xb0dd37b6
  404feb:	je     404fd5 <test_typed_table_with_emptystruct@@Base+0x125>
  404fed:	lea    rdi,[rip+0x12037]        # 41702b <_IO_stdin_used@@Base+0x202b>
  404ff4:	jmp    404fcb <test_typed_table_with_emptystruct@@Base+0x11b>
  404ff6:	lea    rdi,[rip+0x121a3]        # 4171a0 <_IO_stdin_used@@Base+0x21a0>
  404ffd:	jmp    404fcb <test_typed_table_with_emptystruct@@Base+0x11b>
  404fff:	lea    rdi,[rip+0x1126a]        # 416270 <_IO_stdin_used@@Base+0x1270>
  405006:	lea    rsi,[rip+0x11034]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40500d:	lea    rcx,[rip+0x11319]        # 41632d <_IO_stdin_used@@Base+0x132d>
  405014:	mov    edx,0xd7
  405019:	call   4040a0 <__assert_fail@plt>
  40501e:	xchg   ax,ax

0000000000405020 <verify_monster@@Base>:
  405020:	push   rbp
  405021:	push   r15
  405023:	push   r14
  405025:	push   r13
  405027:	push   r12
  405029:	push   rbx
  40502a:	push   rax
  40502b:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  405032:	jne    40509d <verify_monster@@Base+0x7d>
  405034:	mov    ebx,DWORD PTR [rdi]
  405036:	add    rbx,rdi
  405039:	je     4050af <verify_monster@@Base+0x8f>
  40503b:	movsxd rax,DWORD PTR [rbx]
  40503e:	mov    rcx,rbx
  405041:	sub    rcx,rax
  405044:	movzx  ecx,WORD PTR [rcx]
  405047:	cmp    ecx,0xa
  40504a:	jb     4050a6 <verify_monster@@Base+0x86>
  40504c:	neg    rax
  40504f:	movzx  ecx,WORD PTR [rbx+rax*1+0x8]
  405054:	test   rcx,rcx
  405057:	je     4050a6 <verify_monster@@Base+0x86>
  405059:	movzx  ecx,WORD PTR [rbx+rcx*1]
  40505d:	cmp    ecx,0x50
  405060:	jne    4050a6 <verify_monster@@Base+0x86>
  405062:	movzx  ebp,WORD PTR [rbx+rax*1+0x4]
  405067:	test   rbp,rbp
  40506a:	je     4050cf <verify_monster@@Base+0xaf>
  40506c:	add    rbp,rbx
  40506f:	je     4050cf <verify_monster@@Base+0xaf>
  405071:	test   bpl,0xf
  405075:	je     405083 <verify_monster@@Base+0x63>
  405077:	lea    rdi,[rip+0x126c2]        # 417740 <_IO_stdin_used@@Base+0x2740>
  40507e:	call   404060 <puts@plt>
  405083:	vmovss xmm0,DWORD PTR [rbp+0x8]
  405088:	vucomiss xmm0,DWORD PTR [rip+0xff78]        # 415008 <_IO_stdin_used@@Base+0x8>
  405090:	jne    405094 <verify_monster@@Base+0x74>
  405092:	jnp    4050d8 <verify_monster@@Base+0xb8>
  405094:	lea    rdi,[rip+0x12675]        # 417710 <_IO_stdin_used@@Base+0x2710>
  40509b:	jmp    4050b6 <verify_monster@@Base+0x96>
  40509d:	lea    rdi,[rip+0x1218c]        # 417230 <_IO_stdin_used@@Base+0x2230>
  4050a4:	jmp    4050b6 <verify_monster@@Base+0x96>
  4050a6:	lea    rdi,[rip+0x126c3]        # 417770 <_IO_stdin_used@@Base+0x2770>
  4050ad:	jmp    4050b6 <verify_monster@@Base+0x96>
  4050af:	lea    rdi,[rip+0x121aa]        # 417260 <_IO_stdin_used@@Base+0x2260>
  4050b6:	call   404060 <puts@plt>
  4050bb:	mov    eax,0xffffffff
  4050c0:	add    rsp,0x8
  4050c4:	pop    rbx
  4050c5:	pop    r12
  4050c7:	pop    r13
  4050c9:	pop    r14
  4050cb:	pop    r15
  4050cd:	pop    rbp
  4050ce:	ret    
  4050cf:	lea    rdi,[rip+0x121aa]        # 417280 <_IO_stdin_used@@Base+0x2280>
  4050d6:	jmp    4050b6 <verify_monster@@Base+0x96>
  4050d8:	vmovss xmm0,DWORD PTR [rbp+0x0]
  4050dd:	vucomiss xmm0,DWORD PTR [rip+0xff27]        # 41500c <_IO_stdin_used@@Base+0xc>
  4050e5:	jne    4050fa <verify_monster@@Base+0xda>
  4050e7:	jp     4050fa <verify_monster@@Base+0xda>
  4050e9:	vmovss xmm0,DWORD PTR [rbp+0x4]
  4050ee:	vucomiss xmm0,DWORD PTR [rip+0xff1a]        # 415010 <_IO_stdin_used@@Base+0x10>
  4050f6:	jne    4050fa <verify_monster@@Base+0xda>
  4050f8:	jnp    405103 <verify_monster@@Base+0xe3>
  4050fa:	lea    rdi,[rip+0x125ef]        # 4176f0 <_IO_stdin_used@@Base+0x26f0>
  405101:	jmp    4050b6 <verify_monster@@Base+0x96>
  405103:	vmovsd xmm0,QWORD PTR [rbp+0x10]
  405108:	vxorps xmm1,xmm1,xmm1
  40510c:	vucomisd xmm0,xmm1
  405110:	jne    40511a <verify_monster@@Base+0xfa>
  405112:	jp     40511a <verify_monster@@Base+0xfa>
  405114:	cmp    DWORD PTR [rbp+0x1a],0x0
  405118:	je     405123 <verify_monster@@Base+0x103>
  40511a:	lea    rdi,[rip+0x1259f]        # 4176c0 <_IO_stdin_used@@Base+0x26c0>
  405121:	jmp    4050b6 <verify_monster@@Base+0x96>
  405123:	movsxd r15,DWORD PTR [rbx]
  405126:	mov    rax,rbx
  405129:	sub    rax,r15
  40512c:	movzx  ebp,WORD PTR [rax]
  40512f:	cmp    ebp,0xc
  405132:	jb     405ac8 <verify_monster@@Base+0xaa8>
  405138:	neg    r15
  40513b:	movzx  eax,WORD PTR [rbx+r15*1+0xa]
  405141:	test   rax,rax
  405144:	je     405ac8 <verify_monster@@Base+0xaa8>
  40514a:	lea    rcx,[rbx+rax*1]
  40514e:	mov    eax,DWORD PTR [rbx+rax*1]
  405151:	lea    r14,[rax+rcx*1]
  405155:	add    r14,0x4
  405159:	lea    rsi,[rip+0x1002c]        # 41518c <_IO_stdin_used@@Base+0x18c>
  405160:	mov    rdi,r14
  405163:	call   4040f0 <strcmp@plt>
  405168:	test   eax,eax
  40516a:	je     405178 <verify_monster@@Base+0x158>
  40516c:	lea    rdi,[rip+0x1212d]        # 4172a0 <_IO_stdin_used@@Base+0x22a0>
  405173:	jmp    4050b6 <verify_monster@@Base+0x96>
  405178:	cmp    DWORD PTR [r14-0x4],0x9
  40517d:	jne    405284 <verify_monster@@Base+0x264>
  405183:	movzx  ebp,bp
  405186:	cmp    ebp,0x12
  405189:	jb     405290 <verify_monster@@Base+0x270>
  40518f:	movzx  eax,WORD PTR [rbx+r15*1+0x10]
  405195:	test   rax,rax
  405198:	je     405290 <verify_monster@@Base+0x270>
  40519e:	cmp    BYTE PTR [rbx+rax*1],0x2
  4051a2:	jne    405290 <verify_monster@@Base+0x270>
  4051a8:	movzx  ecx,WORD PTR [rbx+r15*1+0xe]
  4051ae:	test   rcx,rcx
  4051b1:	je     40529c <verify_monster@@Base+0x27c>
  4051b7:	lea    rax,[rbx+rcx*1]
  4051bb:	mov    ecx,DWORD PTR [rbx+rcx*1]
  4051be:	cmp    DWORD PTR [rcx+rax*1],0xa
  4051c2:	jne    40529c <verify_monster@@Base+0x27c>
  4051c8:	xor    esi,esi
  4051ca:	cmp    BYTE PTR [rax+rcx*1+0x4],0x0
  4051cf:	jne    4052a8 <verify_monster@@Base+0x288>
  4051d5:	mov    esi,0x1
  4051da:	cmp    BYTE PTR [rax+rcx*1+0x5],0x1
  4051df:	jne    4052a8 <verify_monster@@Base+0x288>
  4051e5:	mov    esi,0x2
  4051ea:	cmp    BYTE PTR [rax+rcx*1+0x6],0x2
  4051ef:	jne    4052a8 <verify_monster@@Base+0x288>
  4051f5:	mov    esi,0x3
  4051fa:	cmp    BYTE PTR [rax+rcx*1+0x7],0x3
  4051ff:	jne    4052a8 <verify_monster@@Base+0x288>
  405205:	mov    esi,0x4
  40520a:	cmp    BYTE PTR [rax+rcx*1+0x8],0x4
  40520f:	jne    4052a8 <verify_monster@@Base+0x288>
  405215:	mov    esi,0x5
  40521a:	cmp    BYTE PTR [rax+rcx*1+0x9],0x5
  40521f:	jne    4052a8 <verify_monster@@Base+0x288>
  405225:	mov    esi,0x6
  40522a:	cmp    BYTE PTR [rax+rcx*1+0xa],0x6
  40522f:	jne    4052a8 <verify_monster@@Base+0x288>
  405231:	mov    esi,0x7
  405236:	cmp    BYTE PTR [rax+rcx*1+0xb],0x7
  40523b:	jne    4052a8 <verify_monster@@Base+0x288>
  40523d:	mov    esi,0x8
  405242:	cmp    BYTE PTR [rax+rcx*1+0xc],0x8
  405247:	jne    4052a8 <verify_monster@@Base+0x288>
  405249:	mov    esi,0x9
  40524e:	cmp    BYTE PTR [rax+rcx*1+0xd],0x9
  405253:	jne    4052a8 <verify_monster@@Base+0x288>
  405255:	cmp    ebp,0x7
  405258:	jbe    40544e <verify_monster@@Base+0x42e>
  40525e:	movzx  eax,WORD PTR [rbx+r15*1+0x6]
  405264:	test   rax,rax
  405267:	je     4052bb <verify_monster@@Base+0x29b>
  405269:	movzx  eax,WORD PTR [rbx+rax*1]
  40526d:	cmp    eax,0x96
  405272:	jne    40545a <verify_monster@@Base+0x43a>
  405278:	lea    rdi,[rip+0x123a1]        # 417620 <_IO_stdin_used@@Base+0x2620>
  40527f:	jmp    4050b6 <verify_monster@@Base+0x96>
  405284:	lea    rdi,[rip+0x12415]        # 4176a0 <_IO_stdin_used@@Base+0x26a0>
  40528b:	jmp    4050b6 <verify_monster@@Base+0x96>
  405290:	lea    rdi,[rip+0x123e9]        # 417680 <_IO_stdin_used@@Base+0x2680>
  405297:	jmp    4050b6 <verify_monster@@Base+0x96>
  40529c:	lea    rdi,[rip+0x123bd]        # 417660 <_IO_stdin_used@@Base+0x2660>
  4052a3:	jmp    4050b6 <verify_monster@@Base+0x96>
  4052a8:	lea    rdi,[rip+0x1003c]        # 4152eb <_IO_stdin_used@@Base+0x2eb>
  4052af:	xor    eax,eax
  4052b1:	call   404080 <printf@plt>
  4052b6:	jmp    4050bb <verify_monster@@Base+0x9b>
  4052bb:	cmp    ebp,0xa
  4052be:	jb     40544e <verify_monster@@Base+0x42e>
  4052c4:	cmp    WORD PTR [rbx+r15*1+0x8],0x0
  4052cb:	je     40544e <verify_monster@@Base+0x42e>
  4052d1:	cmp    WORD PTR [rbx+r15*1+0x4],0x0
  4052d8:	je     405472 <verify_monster@@Base+0x452>
  4052de:	cmp    ebp,0x18
  4052e1:	jb     405466 <verify_monster@@Base+0x446>
  4052e7:	movzx  ecx,WORD PTR [rbx+r15*1+0x16]
  4052ed:	test   rcx,rcx
  4052f0:	je     405466 <verify_monster@@Base+0x446>
  4052f6:	lea    rax,[rbx+rcx*1]
  4052fa:	mov    ecx,DWORD PTR [rbx+rcx*1]
  4052fd:	cmp    DWORD PTR [rcx+rax*1],0x5
  405301:	jne    405466 <verify_monster@@Base+0x446>
  405307:	movzx  edx,WORD PTR [rax+rcx*1+0x4]
  40530c:	xor    esi,esi
  40530e:	cmp    edx,0x10
  405311:	jne    40547e <verify_monster@@Base+0x45e>
  405317:	xor    esi,esi
  405319:	cmp    BYTE PTR [rax+rcx*1+0x6],0x20
  40531e:	jne    40547e <verify_monster@@Base+0x45e>
  405324:	movzx  edx,WORD PTR [rax+rcx*1+0x8]
  405329:	mov    esi,0x1
  40532e:	cmp    edx,0x30
  405331:	jne    40547e <verify_monster@@Base+0x45e>
  405337:	mov    esi,0x1
  40533c:	cmp    BYTE PTR [rax+rcx*1+0xa],0x40
  405341:	jne    40547e <verify_monster@@Base+0x45e>
  405347:	movzx  edx,WORD PTR [rax+rcx*1+0xc]
  40534c:	mov    esi,0x2
  405351:	cmp    edx,0x50
  405354:	jne    40547e <verify_monster@@Base+0x45e>
  40535a:	mov    esi,0x2
  40535f:	cmp    BYTE PTR [rax+rcx*1+0xe],0x60
  405364:	jne    40547e <verify_monster@@Base+0x45e>
  40536a:	movzx  edx,WORD PTR [rax+rcx*1+0x10]
  40536f:	mov    esi,0x3
  405374:	cmp    edx,0x70
  405377:	jne    40547e <verify_monster@@Base+0x45e>
  40537d:	mov    esi,0x3
  405382:	cmp    BYTE PTR [rax+rcx*1+0x12],0x80
  405387:	jne    40547e <verify_monster@@Base+0x45e>
  40538d:	movzx  edx,WORD PTR [rax+rcx*1+0x14]
  405392:	mov    esi,0x4
  405397:	cmp    edx,0x191
  40539d:	jne    40547e <verify_monster@@Base+0x45e>
  4053a3:	mov    esi,0x4
  4053a8:	cmp    BYTE PTR [rax+rcx*1+0x16],0x91
  4053ad:	jne    40547e <verify_monster@@Base+0x45e>
  4053b3:	cmp    ebp,0x1b
  4053b6:	jbe    40548a <verify_monster@@Base+0x46a>
  4053bc:	movzx  eax,WORD PTR [rbx+r15*1+0x1a]
  4053c2:	test   rax,rax
  4053c5:	je     40548a <verify_monster@@Base+0x46a>
  4053cb:	lea    rcx,[rbx+rax*1]
  4053cf:	mov    eax,DWORD PTR [rbx+rax*1]
  4053d2:	cmp    DWORD PTR [rax+rcx*1],0x8
  4053d6:	jne    40548a <verify_monster@@Base+0x46a>
  4053dc:	lea    r12,[rax+rcx*1]
  4053e0:	add    r12,0x4
  4053e4:	mov    eax,DWORD PTR [r12+0x14]
  4053e9:	lea    r13,[r12+rax*1]
  4053ed:	add    r13,0x14
  4053f1:	movsxd r14,DWORD PTR [r12+rax*1+0x14]
  4053f6:	mov    rax,r13
  4053f9:	sub    rax,r14
  4053fc:	movzx  eax,WORD PTR [rax]
  4053ff:	cmp    eax,0xc
  405402:	jb     405ac8 <verify_monster@@Base+0xaa8>
  405408:	neg    r14
  40540b:	movzx  eax,WORD PTR [r13+r14*1+0xa]
  405411:	test   rax,rax
  405414:	je     405ac8 <verify_monster@@Base+0xaa8>
  40541a:	lea    rcx,[rax+r13*1]
  40541e:	mov    eax,DWORD PTR [r13+rax*1+0x0]
  405423:	lea    rdi,[rax+rcx*1]
  405427:	add    rdi,0x4
  40542b:	lea    rsi,[rip+0xff7d]        # 4153af <_IO_stdin_used@@Base+0x3af>
  405432:	call   4040f0 <strcmp@plt>
  405437:	test   eax,eax
  405439:	je     405496 <verify_monster@@Base+0x476>
  40543b:	lea    rdi,[rip+0xff5d]        # 41539f <_IO_stdin_used@@Base+0x39f>
  405442:	xor    eax,eax
  405444:	call   404080 <printf@plt>
  405449:	jmp    4050bb <verify_monster@@Base+0x9b>
  40544e:	lea    rdi,[rip+0x11e6b]        # 4172c0 <_IO_stdin_used@@Base+0x22c0>
  405455:	jmp    4050b6 <verify_monster@@Base+0x96>
  40545a:	lea    rdi,[rip+0x121df]        # 417640 <_IO_stdin_used@@Base+0x2640>
  405461:	jmp    4050b6 <verify_monster@@Base+0x96>
  405466:	lea    rdi,[rip+0x12183]        # 4175f0 <_IO_stdin_used@@Base+0x25f0>
  40546d:	jmp    4050b6 <verify_monster@@Base+0x96>
  405472:	lea    rdi,[rip+0x11e67]        # 4172e0 <_IO_stdin_used@@Base+0x22e0>
  405479:	jmp    4050b6 <verify_monster@@Base+0x96>
  40547e:	lea    rdi,[rip+0xfe83]        # 415308 <_IO_stdin_used@@Base+0x308>
  405485:	jmp    4052af <verify_monster@@Base+0x28f>
  40548a:	lea    rdi,[rip+0x1212f]        # 4175c0 <_IO_stdin_used@@Base+0x25c0>
  405491:	jmp    4050b6 <verify_monster@@Base+0x96>
  405496:	mov    eax,DWORD PTR [r12+0x4]
  40549b:	add    rax,r12
  40549e:	add    rax,0x4
  4054a2:	cmp    rax,r13
  4054a5:	je     4054b3 <verify_monster@@Base+0x493>
  4054a7:	lea    rdi,[rip+0x120d2]        # 417580 <_IO_stdin_used@@Base+0x2580>
  4054ae:	jmp    4050b6 <verify_monster@@Base+0x96>
  4054b3:	movzx  ecx,WORD PTR [rax+r14*1]
  4054b8:	cmp    ecx,0xc
  4054bb:	jb     405ac8 <verify_monster@@Base+0xaa8>
  4054c1:	movzx  ecx,WORD PTR [rax+r14*1+0xa]
  4054c7:	test   rcx,rcx
  4054ca:	je     405ac8 <verify_monster@@Base+0xaa8>
  4054d0:	lea    rdx,[rax+rcx*1]
  4054d4:	mov    eax,DWORD PTR [rax+rcx*1]
  4054d7:	lea    r14,[rax+rdx*1]
  4054db:	add    r14,0x4
  4054df:	lea    rsi,[rip+0xfec9]        # 4153af <_IO_stdin_used@@Base+0x3af>
  4054e6:	mov    rdi,r14
  4054e9:	call   4040f0 <strcmp@plt>
  4054ee:	test   eax,eax
  4054f0:	je     4054fe <verify_monster@@Base+0x4de>
  4054f2:	lea    rdi,[rip+0xfebe]        # 4153b7 <_IO_stdin_used@@Base+0x3b7>
  4054f9:	jmp    405742 <verify_monster@@Base+0x722>
  4054fe:	mov    ecx,DWORD PTR [r12+0x8]
  405503:	lea    rax,[r12+rcx*1]
  405507:	add    rax,0x8
  40550b:	movsxd rcx,DWORD PTR [r12+rcx*1+0x8]
  405510:	mov    rdx,rax
  405513:	sub    rdx,rcx
  405516:	movzx  edx,WORD PTR [rdx]
  405519:	cmp    edx,0xc
  40551c:	jb     405ac8 <verify_monster@@Base+0xaa8>
  405522:	neg    rcx
  405525:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  40552a:	test   rcx,rcx
  40552d:	je     405ac8 <verify_monster@@Base+0xaa8>
  405533:	lea    rdx,[rax+rcx*1]
  405537:	mov    eax,DWORD PTR [rax+rcx*1]
  40553a:	lea    r14,[rax+rdx*1]
  40553e:	add    r14,0x4
  405542:	lea    rsi,[rip+0xfe90]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  405549:	mov    rdi,r14
  40554c:	call   4040f0 <strcmp@plt>
  405551:	test   eax,eax
  405553:	je     405561 <verify_monster@@Base+0x541>
  405555:	lea    rdi,[rip+0xfe83]        # 4153df <_IO_stdin_used@@Base+0x3df>
  40555c:	jmp    405742 <verify_monster@@Base+0x722>
  405561:	mov    ecx,DWORD PTR [r12]
  405565:	lea    rax,[r12+rcx*1]
  405569:	movsxd rcx,DWORD PTR [r12+rcx*1]
  40556d:	mov    rdx,rax
  405570:	sub    rdx,rcx
  405573:	movzx  edx,WORD PTR [rdx]
  405576:	cmp    edx,0xc
  405579:	jb     405ac8 <verify_monster@@Base+0xaa8>
  40557f:	neg    rcx
  405582:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  405587:	test   rcx,rcx
  40558a:	je     405ac8 <verify_monster@@Base+0xaa8>
  405590:	lea    rdx,[rax+rcx*1]
  405594:	mov    eax,DWORD PTR [rax+rcx*1]
  405597:	lea    r14,[rax+rdx*1]
  40559b:	add    r14,0x4
  40559f:	lea    rsi,[rip+0xfe5b]        # 415401 <_IO_stdin_used@@Base+0x401>
  4055a6:	mov    rdi,r14
  4055a9:	call   4040f0 <strcmp@plt>
  4055ae:	test   eax,eax
  4055b0:	je     4055be <verify_monster@@Base+0x59e>
  4055b2:	lea    rdi,[rip+0xfe51]        # 41540a <_IO_stdin_used@@Base+0x40a>
  4055b9:	jmp    405742 <verify_monster@@Base+0x722>
  4055be:	mov    ecx,DWORD PTR [r12+0xc]
  4055c3:	lea    rax,[r12+rcx*1]
  4055c7:	add    rax,0xc
  4055cb:	movsxd rcx,DWORD PTR [r12+rcx*1+0xc]
  4055d0:	mov    rdx,rax
  4055d3:	sub    rdx,rcx
  4055d6:	movzx  edx,WORD PTR [rdx]
  4055d9:	cmp    edx,0xc
  4055dc:	jb     405ac8 <verify_monster@@Base+0xaa8>
  4055e2:	neg    rcx
  4055e5:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  4055ea:	test   rcx,rcx
  4055ed:	je     405ac8 <verify_monster@@Base+0xaa8>
  4055f3:	lea    rdx,[rax+rcx*1]
  4055f7:	mov    eax,DWORD PTR [rax+rcx*1]
  4055fa:	lea    r14,[rax+rdx*1]
  4055fe:	add    r14,0x4
  405602:	lea    rsi,[rip+0xfda6]        # 4153af <_IO_stdin_used@@Base+0x3af>
  405609:	mov    rdi,r14
  40560c:	call   4040f0 <strcmp@plt>
  405611:	test   eax,eax
  405613:	je     405621 <verify_monster@@Base+0x601>
  405615:	lea    rdi,[rip+0xfe13]        # 41542f <_IO_stdin_used@@Base+0x42f>
  40561c:	jmp    405742 <verify_monster@@Base+0x722>
  405621:	mov    ecx,DWORD PTR [r12+0x10]
  405626:	lea    rax,[r12+rcx*1]
  40562a:	add    rax,0x10
  40562e:	movsxd rcx,DWORD PTR [r12+rcx*1+0x10]
  405633:	mov    rdx,rax
  405636:	sub    rdx,rcx
  405639:	movzx  edx,WORD PTR [rdx]
  40563c:	cmp    edx,0xc
  40563f:	jb     405ac8 <verify_monster@@Base+0xaa8>
  405645:	neg    rcx
  405648:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  40564d:	test   rcx,rcx
  405650:	je     405ac8 <verify_monster@@Base+0xaa8>
  405656:	lea    rdx,[rax+rcx*1]
  40565a:	mov    eax,DWORD PTR [rax+rcx*1]
  40565d:	lea    r14,[rax+rdx*1]
  405661:	add    r14,0x4
  405665:	lea    rsi,[rip+0xfd6d]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  40566c:	mov    rdi,r14
  40566f:	call   4040f0 <strcmp@plt>
  405674:	test   eax,eax
  405676:	je     405684 <verify_monster@@Base+0x664>
  405678:	lea    rdi,[rip+0xfdd4]        # 415453 <_IO_stdin_used@@Base+0x453>
  40567f:	jmp    405742 <verify_monster@@Base+0x722>
  405684:	mov    ecx,DWORD PTR [r12+0x18]
  405689:	lea    rax,[r12+rcx*1]
  40568d:	add    rax,0x18
  405691:	movsxd rcx,DWORD PTR [r12+rcx*1+0x18]
  405696:	mov    rdx,rax
  405699:	sub    rdx,rcx
  40569c:	movzx  edx,WORD PTR [rdx]
  40569f:	cmp    edx,0xc
  4056a2:	jb     405ac8 <verify_monster@@Base+0xaa8>
  4056a8:	neg    rcx
  4056ab:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  4056b0:	test   rcx,rcx
  4056b3:	je     405ac8 <verify_monster@@Base+0xaa8>
  4056b9:	lea    rdx,[rax+rcx*1]
  4056bd:	mov    eax,DWORD PTR [rax+rcx*1]
  4056c0:	lea    r14,[rax+rdx*1]
  4056c4:	add    r14,0x4
  4056c8:	lea    rsi,[rip+0xfd32]        # 415401 <_IO_stdin_used@@Base+0x401>
  4056cf:	mov    rdi,r14
  4056d2:	call   4040f0 <strcmp@plt>
  4056d7:	test   eax,eax
  4056d9:	je     4056e4 <verify_monster@@Base+0x6c4>
  4056db:	lea    rdi,[rip+0xfd93]        # 415475 <_IO_stdin_used@@Base+0x475>
  4056e2:	jmp    405742 <verify_monster@@Base+0x722>
  4056e4:	mov    ecx,DWORD PTR [r12+0x1c]
  4056e9:	lea    rax,[r12+rcx*1]
  4056ed:	add    rax,0x1c
  4056f1:	movsxd rcx,DWORD PTR [r12+rcx*1+0x1c]
  4056f6:	mov    rdx,rax
  4056f9:	sub    rdx,rcx
  4056fc:	movzx  edx,WORD PTR [rdx]
  4056ff:	cmp    edx,0xc
  405702:	jb     405ac8 <verify_monster@@Base+0xaa8>
  405708:	neg    rcx
  40570b:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  405710:	test   rcx,rcx
  405713:	je     405ac8 <verify_monster@@Base+0xaa8>
  405719:	lea    rdx,[rax+rcx*1]
  40571d:	mov    eax,DWORD PTR [rax+rcx*1]
  405720:	lea    r14,[rax+rdx*1]
  405724:	add    r14,0x4
  405728:	lea    rsi,[rip+0xfcaa]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  40572f:	mov    rdi,r14
  405732:	call   4040f0 <strcmp@plt>
  405737:	test   eax,eax
  405739:	je     405751 <verify_monster@@Base+0x731>
  40573b:	lea    rdi,[rip+0xfd58]        # 41549a <_IO_stdin_used@@Base+0x49a>
  405742:	xor    eax,eax
  405744:	mov    rsi,r14
  405747:	call   404080 <printf@plt>
  40574c:	jmp    4050bb <verify_monster@@Base+0x9b>
  405751:	movzx  eax,WORD PTR [rbx+r15*1+0x18]
  405757:	test   rax,rax
  40575a:	je     405798 <verify_monster@@Base+0x778>
  40575c:	lea    rcx,[rbx+rax*1]
  405760:	mov    eax,DWORD PTR [rbx+rax*1]
  405763:	cmp    DWORD PTR [rax+rcx*1],0x3
  405767:	jne    405798 <verify_monster@@Base+0x778>
  405769:	lea    r14,[rax+rcx*1]
  40576d:	add    r14,0x4
  405771:	mov    eax,DWORD PTR [r14]
  405774:	lea    rdi,[r14+rax*1]
  405778:	add    rdi,0x4
  40577c:	lea    rsi,[rip+0xfd3c]        # 4154bf <_IO_stdin_used@@Base+0x4bf>
  405783:	call   4040f0 <strcmp@plt>
  405788:	test   eax,eax
  40578a:	je     4057a4 <verify_monster@@Base+0x784>
  40578c:	lea    rdi,[rip+0x11d9d]        # 417530 <_IO_stdin_used@@Base+0x2530>
  405793:	jmp    4050b6 <verify_monster@@Base+0x96>
  405798:	lea    rdi,[rip+0x11db1]        # 417550 <_IO_stdin_used@@Base+0x2550>
  40579f:	jmp    4050b6 <verify_monster@@Base+0x96>
  4057a4:	mov    eax,DWORD PTR [r14+0x4]
  4057a8:	cmp    DWORD PTR [r14+rax*1+0x4],0x2
  4057ae:	jne    4057ca <verify_monster@@Base+0x7aa>
  4057b0:	lea    rcx,[r14+0x4]
  4057b4:	movzx  eax,WORD PTR [rcx+rax*1+0x4]
  4057b9:	cmp    eax,0x2c
  4057bc:	je     4057d6 <verify_monster@@Base+0x7b6>
  4057be:	lea    rdi,[rip+0x11d4b]        # 417510 <_IO_stdin_used@@Base+0x2510>
  4057c5:	jmp    4050b6 <verify_monster@@Base+0x96>
  4057ca:	lea    rdi,[rip+0xfcf4]        # 4154c5 <_IO_stdin_used@@Base+0x4c5>
  4057d1:	jmp    405442 <verify_monster@@Base+0x422>
  4057d6:	mov    eax,DWORD PTR [r14+0x8]
  4057da:	lea    rdi,[r14+rax*1]
  4057de:	add    rdi,0xc
  4057e2:	lea    rsi,[rip+0xfcf6]        # 4154df <_IO_stdin_used@@Base+0x4df>
  4057e9:	call   4040f0 <strcmp@plt>
  4057ee:	test   eax,eax
  4057f0:	je     4057fe <verify_monster@@Base+0x7de>
  4057f2:	lea    rdi,[rip+0x11cf7]        # 4174f0 <_IO_stdin_used@@Base+0x24f0>
  4057f9:	jmp    4050b6 <verify_monster@@Base+0x96>
  4057fe:	cmp    ebp,0x36
  405801:	jb     405854 <verify_monster@@Base+0x834>
  405803:	movzx  ecx,WORD PTR [rbx+r15*1+0x34]
  405809:	test   rcx,rcx
  40580c:	je     405854 <verify_monster@@Base+0x834>
  40580e:	lea    rax,[rbx+rcx*1]
  405812:	mov    ecx,DWORD PTR [rbx+rcx*1]
  405815:	cmp    DWORD PTR [rcx+rax*1],0x4
  405819:	jne    405860 <verify_monster@@Base+0x840>
  40581b:	xor    esi,esi
  40581d:	cmp    BYTE PTR [rax+rcx*1+0x4],0x0
  405822:	jne    405848 <verify_monster@@Base+0x828>
  405824:	mov    esi,0x1
  405829:	cmp    BYTE PTR [rax+rcx*1+0x5],0x1
  40582e:	jne    405848 <verify_monster@@Base+0x828>
  405830:	mov    esi,0x2
  405835:	cmp    BYTE PTR [rax+rcx*1+0x6],0x1
  40583a:	jne    405848 <verify_monster@@Base+0x828>
  40583c:	mov    esi,0x3
  405841:	cmp    BYTE PTR [rax+rcx*1+0x7],0x0
  405846:	je     40586c <verify_monster@@Base+0x84c>
  405848:	lea    rdi,[rip+0xfc97]        # 4154e6 <_IO_stdin_used@@Base+0x4e6>
  40584f:	jmp    4052af <verify_monster@@Base+0x28f>
  405854:	lea    rdi,[rip+0x11aa5]        # 417300 <_IO_stdin_used@@Base+0x2300>
  40585b:	jmp    4050b6 <verify_monster@@Base+0x96>
  405860:	lea    rdi,[rip+0x11c69]        # 4174d0 <_IO_stdin_used@@Base+0x24d0>
  405867:	jmp    4050b6 <verify_monster@@Base+0x96>
  40586c:	movzx  eax,WORD PTR [rbx+r15*1+0x12]
  405872:	test   rax,rax
  405875:	je     4058ed <verify_monster@@Base+0x8cd>
  405877:	cmp    BYTE PTR [rbx+rax*1],0x1
  40587b:	jne    4058ed <verify_monster@@Base+0x8cd>
  40587d:	movzx  eax,WORD PTR [rbx+r15*1+0x14]
  405883:	test   rax,rax
  405886:	je     405b31 <verify_monster@@Base+0xb11>
  40588c:	lea    rcx,[rbx+rax*1]
  405890:	mov    eax,DWORD PTR [rbx+rax*1]
  405893:	add    rax,rcx
  405896:	je     405b31 <verify_monster@@Base+0xb11>
  40589c:	movsxd rcx,DWORD PTR [rax]
  40589f:	mov    rdx,rax
  4058a2:	sub    rdx,rcx
  4058a5:	movzx  edx,WORD PTR [rdx]
  4058a8:	cmp    edx,0xc
  4058ab:	jb     405ac8 <verify_monster@@Base+0xaa8>
  4058b1:	neg    rcx
  4058b4:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  4058b9:	test   rcx,rcx
  4058bc:	je     405ac8 <verify_monster@@Base+0xaa8>
  4058c2:	lea    rdx,[rax+rcx*1]
  4058c6:	mov    eax,DWORD PTR [rax+rcx*1]
  4058c9:	lea    rdi,[rax+rdx*1]
  4058cd:	add    rdi,0x4
  4058d1:	lea    rsi,[rip+0xfad7]        # 4153af <_IO_stdin_used@@Base+0x3af>
  4058d8:	call   4040f0 <strcmp@plt>
  4058dd:	test   eax,eax
  4058df:	je     4058f9 <verify_monster@@Base+0x8d9>
  4058e1:	lea    rdi,[rip+0x11b98]        # 417480 <_IO_stdin_used@@Base+0x2480>
  4058e8:	jmp    4050b6 <verify_monster@@Base+0x96>
  4058ed:	lea    rdi,[rip+0x11bac]        # 4174a0 <_IO_stdin_used@@Base+0x24a0>
  4058f4:	jmp    4050b6 <verify_monster@@Base+0x96>
  4058f9:	movzx  eax,WORD PTR [rbx+r15*1+0x1c]
  4058ff:	test   rax,rax
  405902:	je     405b31 <verify_monster@@Base+0xb11>
  405908:	lea    rcx,[rbx+rax*1]
  40590c:	mov    ebp,DWORD PTR [rbx+rax*1]
  40590f:	add    rbp,rcx
  405912:	je     405b31 <verify_monster@@Base+0xb11>
  405918:	movsxd r14,DWORD PTR [rbp+0x0]
  40591c:	mov    rax,rbp
  40591f:	sub    rax,r14
  405922:	movzx  r12d,WORD PTR [rax]
  405926:	cmp    r12d,0xc
  40592a:	jb     405ac8 <verify_monster@@Base+0xaa8>
  405930:	neg    r14
  405933:	movzx  eax,WORD PTR [rbp+r14*1+0xa]
  405939:	test   rax,rax
  40593c:	je     405ac8 <verify_monster@@Base+0xaa8>
  405942:	lea    rcx,[rax+rbp*1]
  405946:	mov    eax,DWORD PTR [rbp+rax*1+0x0]
  40594a:	lea    rdi,[rax+rcx*1]
  40594e:	add    rdi,0x4
  405952:	lea    rsi,[rip+0xfbac]        # 415505 <_IO_stdin_used@@Base+0x505>
  405959:	call   4040f0 <strcmp@plt>
  40595e:	test   eax,eax
  405960:	je     40596e <verify_monster@@Base+0x94e>
  405962:	lea    rdi,[rip+0x11af7]        # 417460 <_IO_stdin_used@@Base+0x2460>
  405969:	jmp    4050b6 <verify_monster@@Base+0x96>
  40596e:	movzx  eax,r12w
  405972:	cmp    eax,0x14
  405975:	jb     405995 <verify_monster@@Base+0x975>
  405977:	movzx  ecx,WORD PTR [rbp+r14*1+0x12]
  40597d:	test   rcx,rcx
  405980:	je     405995 <verify_monster@@Base+0x975>
  405982:	cmp    BYTE PTR [rbp+rcx*1+0x0],0x0
  405987:	je     405995 <verify_monster@@Base+0x975>
  405989:	lea    rdi,[rip+0x11aa0]        # 417430 <_IO_stdin_used@@Base+0x2430>
  405990:	jmp    4050b6 <verify_monster@@Base+0x96>
  405995:	movzx  ecx,WORD PTR [rbx+r15*1+0x14]
  40599b:	test   rcx,rcx
  40599e:	je     4059ac <verify_monster@@Base+0x98c>
  4059a0:	lea    rdx,[rbx+rcx*1]
  4059a4:	mov    ecx,DWORD PTR [rbx+rcx*1]
  4059a7:	add    rcx,rdx
  4059aa:	jmp    4059ae <verify_monster@@Base+0x98e>
  4059ac:	xor    ecx,ecx
  4059ae:	movzx  edx,WORD PTR [rbx+r15*1+0x14]
  4059b4:	test   rdx,rdx
  4059b7:	je     4059ca <verify_monster@@Base+0x9aa>
  4059b9:	lea    rsi,[rbx+rdx*1]
  4059bd:	mov    edx,DWORD PTR [rbx+rdx*1]
  4059c0:	add    rdx,rsi
  4059c3:	cmp    rcx,rdx
  4059c6:	jne    4059d1 <verify_monster@@Base+0x9b1>
  4059c8:	jmp    4059dd <verify_monster@@Base+0x9bd>
  4059ca:	xor    edx,edx
  4059cc:	cmp    rcx,rdx
  4059cf:	je     4059dd <verify_monster@@Base+0x9bd>
  4059d1:	lea    rdi,[rip+0x11a38]        # 417410 <_IO_stdin_used@@Base+0x2410>
  4059d8:	jmp    4050b6 <verify_monster@@Base+0x96>
  4059dd:	cmp    eax,0x1c
  4059e0:	jb     405ae7 <verify_monster@@Base+0xac7>
  4059e6:	movzx  ecx,WORD PTR [rbp+r14*1+0x1a]
  4059ec:	test   rcx,rcx
  4059ef:	je     405ae7 <verify_monster@@Base+0xac7>
  4059f5:	lea    rax,[rcx+rbp*1]
  4059f9:	mov    edx,DWORD PTR [rbp+rcx*1+0x0]
  4059fd:	mov    ecx,DWORD PTR [rdx+rax*1]
  405a00:	test   rcx,rcx
  405a03:	je     405ae7 <verify_monster@@Base+0xac7>
  405a09:	add    rax,rdx
  405a0c:	add    rax,0x4
  405a10:	lea    rdx,[rax+rcx*4]
  405a14:	add    rdx,0xfffffffffffffffc
  405a18:	mov    eax,DWORD PTR [rax+rcx*4-0x4]
  405a1c:	add    rax,rdx
  405a1f:	je     405b06 <verify_monster@@Base+0xae6>
  405a25:	movsxd rcx,DWORD PTR [rax]
  405a28:	mov    rdx,rax
  405a2b:	sub    rdx,rcx
  405a2e:	movzx  edx,WORD PTR [rdx]
  405a31:	cmp    edx,0x14
  405a34:	jb     405b25 <verify_monster@@Base+0xb05>
  405a3a:	neg    rcx
  405a3d:	movzx  esi,WORD PTR [rax+rcx*1+0x12]
  405a42:	test   rsi,rsi
  405a45:	je     405b25 <verify_monster@@Base+0xb05>
  405a4b:	cmp    BYTE PTR [rax+rsi*1],0x1
  405a4f:	jne    405b25 <verify_monster@@Base+0xb05>
  405a55:	movzx  edx,dx
  405a58:	cmp    edx,0x16
  405a5b:	jb     405b31 <verify_monster@@Base+0xb11>
  405a61:	movzx  ecx,WORD PTR [rax+rcx*1+0x14]
  405a66:	test   rcx,rcx
  405a69:	je     405b31 <verify_monster@@Base+0xb11>
  405a6f:	lea    rdx,[rax+rcx*1]
  405a73:	mov    eax,DWORD PTR [rax+rcx*1]
  405a76:	add    rax,rdx
  405a79:	je     405b31 <verify_monster@@Base+0xb11>
  405a7f:	movsxd rcx,DWORD PTR [rax]
  405a82:	mov    rdx,rax
  405a85:	sub    rdx,rcx
  405a88:	movzx  edx,WORD PTR [rdx]
  405a8b:	cmp    edx,0xc
  405a8e:	jb     405ac8 <verify_monster@@Base+0xaa8>
  405a90:	neg    rcx
  405a93:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  405a98:	test   rcx,rcx
  405a9b:	je     405ac8 <verify_monster@@Base+0xaa8>
  405a9d:	lea    rdx,[rax+rcx*1]
  405aa1:	mov    eax,DWORD PTR [rax+rcx*1]
  405aa4:	lea    rdi,[rax+rdx*1]
  405aa8:	add    rdi,0x4
  405aac:	lea    rsi,[rip+0xf8fc]        # 4153af <_IO_stdin_used@@Base+0x3af>
  405ab3:	call   4040f0 <strcmp@plt>
  405ab8:	test   eax,eax
  405aba:	je     405b3a <verify_monster@@Base+0xb1a>
  405abc:	lea    rdi,[rip+0x118bd]        # 417380 <_IO_stdin_used@@Base+0x2380>
  405ac3:	jmp    4050b6 <verify_monster@@Base+0x96>
  405ac8:	lea    rdi,[rip+0x10912]        # 4163e1 <_IO_stdin_used@@Base+0x13e1>
  405acf:	lea    rsi,[rip+0x103b6]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  405ad6:	lea    rcx,[rip+0x108b3]        # 416390 <_IO_stdin_used@@Base+0x1390>
  405add:	mov    edx,0x2bb
  405ae2:	call   4040a0 <__assert_fail@plt>
  405ae7:	lea    rdi,[rip+0x1096d]        # 41645b <_IO_stdin_used@@Base+0x145b>
  405aee:	lea    rsi,[rip+0x10397]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  405af5:	lea    rcx,[rip+0x10ac0]        # 4165bc <_IO_stdin_used@@Base+0x15bc>
  405afc:	mov    edx,0x2b5
  405b01:	call   4040a0 <__assert_fail@plt>
  405b06:	lea    rdi,[rip+0x10359]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  405b0d:	lea    rsi,[rip+0x10378]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  405b14:	lea    rcx,[rip+0x10b55]        # 416670 <_IO_stdin_used@@Base+0x1670>
  405b1b:	mov    edx,0x2cd
  405b20:	call   4040a0 <__assert_fail@plt>
  405b25:	lea    rdi,[rip+0x11894]        # 4173c0 <_IO_stdin_used@@Base+0x23c0>
  405b2c:	jmp    4050b6 <verify_monster@@Base+0x96>
  405b31:	lea    rdi,[rip+0x1032e]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  405b38:	jmp    405acf <verify_monster@@Base+0xaaf>
  405b3a:	movzx  eax,WORD PTR [rbx+r15*1+0x22]
  405b40:	test   rax,rax
  405b43:	je     405b4b <verify_monster@@Base+0xb2b>
  405b45:	cmp    BYTE PTR [rbx+rax*1],0x0
  405b49:	je     405b57 <verify_monster@@Base+0xb37>
  405b4b:	lea    rdi,[rip+0x1180e]        # 417360 <_IO_stdin_used@@Base+0x2360>
  405b52:	jmp    4050b6 <verify_monster@@Base+0x96>
  405b57:	movzx  eax,WORD PTR [rbx+r15*1+0x20]
  405b5d:	test   rax,rax
  405b60:	je     405bc5 <verify_monster@@Base+0xba5>
  405b62:	lea    rdx,[rbx+rax*1]
  405b66:	mov    ecx,DWORD PTR [rbx+rax*1]
  405b69:	add    rcx,rdx
  405b6c:	je     405bd1 <verify_monster@@Base+0xbb1>
  405b6e:	movsxd rdx,DWORD PTR [rcx]
  405b71:	mov    rax,rcx
  405b74:	sub    rax,rdx
  405b77:	movzx  esi,WORD PTR [rax]
  405b7a:	xor    eax,eax
  405b7c:	cmp    esi,0x6
  405b7f:	jb     4050c0 <verify_monster@@Base+0xa0>
  405b85:	neg    rdx
  405b88:	cmp    WORD PTR [rcx+rdx*1+0x4],0x0
  405b8e:	jne    405bb9 <verify_monster@@Base+0xb99>
  405b90:	movzx  esi,si
  405b93:	cmp    esi,0x8
  405b96:	jb     4050c0 <verify_monster@@Base+0xa0>
  405b9c:	cmp    WORD PTR [rcx+rdx*1+0x6],0x0
  405ba2:	jne    405bb9 <verify_monster@@Base+0xb99>
  405ba4:	cmp    esi,0xa
  405ba7:	jb     4050c0 <verify_monster@@Base+0xa0>
  405bad:	cmp    WORD PTR [rcx+rdx*1+0x8],0x0
  405bb3:	je     4050c0 <verify_monster@@Base+0xa0>
  405bb9:	lea    rdi,[rip+0x11780]        # 417340 <_IO_stdin_used@@Base+0x2340>
  405bc0:	jmp    4050b6 <verify_monster@@Base+0x96>
  405bc5:	lea    rdi,[rip+0x11754]        # 417320 <_IO_stdin_used@@Base+0x2320>
  405bcc:	jmp    4050b6 <verify_monster@@Base+0x96>
  405bd1:	lea    rdi,[rip+0x1028e]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  405bd8:	lea    rsi,[rip+0x102ad]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  405bdf:	lea    rcx,[rip+0x10aeb]        # 4166d1 <_IO_stdin_used@@Base+0x16d1>
  405be6:	mov    edx,0x25f
  405beb:	call   4040a0 <__assert_fail@plt>

0000000000405bf0 <gen_monster@@Base>:
  405bf0:	push   rbp
  405bf1:	push   r14
  405bf3:	push   rbx
  405bf4:	sub    rsp,0x30
  405bf8:	mov    ebp,esi
  405bfa:	mov    rbx,rdi
  405bfd:	movabs rax,0x706050403020100
  405c07:	mov    QWORD PTR [rsp+0x20],rax
  405c0c:	mov    WORD PTR [rsp+0x28],0x908
  405c13:	mov    DWORD PTR [rsp+0x8],0x10100
  405c1b:	call   40e610 <flatcc_builder_reset@@Base>
  405c20:	lea    rsi,[rip+0xf521]        # 415148 <_IO_stdin_used@@Base+0x148>
  405c27:	xor    edx,edx
  405c29:	test   ebp,ebp
  405c2b:	je     405c34 <gen_monster@@Base+0x44>
  405c2d:	mov    ecx,0x2
  405c32:	jmp    405c36 <gen_monster@@Base+0x46>
  405c34:	xor    ecx,ecx
  405c36:	mov    rdi,rbx
  405c39:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  405c3e:	test   eax,eax
  405c40:	jne    405c4f <gen_monster@@Base+0x5f>
  405c42:	mov    esi,0x24
  405c47:	mov    rdi,rbx
  405c4a:	call   410480 <flatcc_builder_start_table@@Base>
  405c4f:	mov    esi,0x2
  405c54:	mov    edx,0x2
  405c59:	mov    ecx,0x2
  405c5e:	mov    rdi,rbx
  405c61:	call   411800 <flatcc_builder_table_add@@Base>
  405c66:	test   rax,rax
  405c69:	je     405c70 <gen_monster@@Base+0x80>
  405c6b:	mov    WORD PTR [rax],0x50
  405c70:	xor    esi,esi
  405c72:	mov    edx,0x20
  405c77:	mov    ecx,0x10
  405c7c:	mov    rdi,rbx
  405c7f:	call   411800 <flatcc_builder_table_add@@Base>
  405c84:	movabs rcx,0x400000003f800000
  405c8e:	mov    QWORD PTR [rax],rcx
  405c91:	mov    DWORD PTR [rax+0x8],0xc04ccccd
  405c98:	lea    rsi,[rip+0xf4ed]        # 41518c <_IO_stdin_used@@Base+0x18c>
  405c9f:	mov    rdi,rbx
  405ca2:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  405ca7:	test   eax,eax
  405ca9:	je     405cc1 <gen_monster@@Base+0xd1>
  405cab:	mov    ebp,eax
  405cad:	mov    esi,0x3
  405cb2:	mov    rdi,rbx
  405cb5:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  405cba:	test   rax,rax
  405cbd:	je     405cc1 <gen_monster@@Base+0xd1>
  405cbf:	mov    DWORD PTR [rax],ebp
  405cc1:	mov    esi,0x6
  405cc6:	mov    edx,0x1
  405ccb:	mov    ecx,0x1
  405cd0:	mov    rdi,rbx
  405cd3:	call   411800 <flatcc_builder_table_add@@Base>
  405cd8:	test   rax,rax
  405cdb:	je     405ce0 <gen_monster@@Base+0xf0>
  405cdd:	mov    BYTE PTR [rax],0x2
  405ce0:	lea    rsi,[rsp+0x20]
  405ce5:	mov    edx,0xa
  405cea:	mov    ecx,0x1
  405cef:	mov    r8d,0x1
  405cf5:	mov    r9d,0xffffffff
  405cfb:	mov    rdi,rbx
  405cfe:	call   411020 <flatcc_builder_create_vector@@Base>
  405d03:	test   eax,eax
  405d05:	je     405d1d <gen_monster@@Base+0x12d>
  405d07:	mov    ebp,eax
  405d09:	mov    esi,0x5
  405d0e:	mov    rdi,rbx
  405d11:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  405d16:	test   rax,rax
  405d19:	je     405d1d <gen_monster@@Base+0x12d>
  405d1b:	mov    DWORD PTR [rax],ebp
  405d1d:	mov    esi,0x4
  405d22:	mov    edx,0x2
  405d27:	mov    ecx,0x3fffffff
  405d2c:	mov    rdi,rbx
  405d2f:	call   410010 <flatcc_builder_start_vector@@Base>
  405d34:	mov    esi,0x1
  405d39:	mov    rdi,rbx
  405d3c:	call   40f6a0 <flatcc_builder_extend_vector@@Base>
  405d41:	mov    WORD PTR [rax],0x10
  405d46:	mov    BYTE PTR [rax+0x2],0x20
  405d4a:	mov    esi,0x2
  405d4f:	mov    rdi,rbx
  405d52:	call   40f6a0 <flatcc_builder_extend_vector@@Base>
  405d57:	mov    WORD PTR [rax],0x30
  405d5c:	mov    BYTE PTR [rax+0x2],0x40
  405d60:	mov    WORD PTR [rax+0x4],0x50
  405d66:	mov    BYTE PTR [rax+0x6],0x60
  405d6a:	mov    esi,0x1
  405d6f:	mov    rdi,rbx
  405d72:	call   40f6a0 <flatcc_builder_extend_vector@@Base>
  405d77:	test   rax,rax
  405d7a:	je     405d85 <gen_monster@@Base+0x195>
  405d7c:	mov    WORD PTR [rax],0x70
  405d81:	mov    BYTE PTR [rax+0x2],0x80
  405d85:	mov    esi,0x1
  405d8a:	mov    rdi,rbx
  405d8d:	call   40f6a0 <flatcc_builder_extend_vector@@Base>
  405d92:	test   rax,rax
  405d95:	je     405d9d <gen_monster@@Base+0x1ad>
  405d97:	mov    DWORD PTR [rax],0x910190
  405d9d:	mov    esi,0x1
  405da2:	mov    rdi,rbx
  405da5:	call   40f6a0 <flatcc_builder_extend_vector@@Base>
  405daa:	test   rax,rax
  405dad:	je     405db5 <gen_monster@@Base+0x1c5>
  405daf:	mov    DWORD PTR [rax],0x910190
  405db5:	mov    esi,0x1
  405dba:	mov    rdi,rbx
  405dbd:	call   40f6a0 <flatcc_builder_extend_vector@@Base>
  405dc2:	test   rax,rax
  405dc5:	je     405dcd <gen_monster@@Base+0x1dd>
  405dc7:	mov    DWORD PTR [rax],0x910190
  405dcd:	mov    rdi,rbx
  405dd0:	call   411270 <flatcc_builder_vector_count@@Base>
  405dd5:	cmp    rax,0x7
  405dd9:	jne    406458 <gen_monster@@Base+0x868>
  405ddf:	mov    esi,0x2
  405de4:	mov    rdi,rbx
  405de7:	call   40fe80 <flatcc_builder_truncate_vector@@Base>
  405dec:	mov    rdi,rbx
  405def:	call   411270 <flatcc_builder_vector_count@@Base>
  405df4:	cmp    rax,0x5
  405df8:	jne    406477 <gen_monster@@Base+0x887>
  405dfe:	mov    rdi,rbx
  405e01:	call   411280 <flatcc_builder_vector_edit@@Base>
  405e06:	add    WORD PTR [rax+0x10],0x1
  405e0b:	mov    rdi,rbx
  405e0e:	call   4111a0 <flatcc_builder_end_vector@@Base>
  405e13:	test   eax,eax
  405e15:	je     405e2d <gen_monster@@Base+0x23d>
  405e17:	mov    ebp,eax
  405e19:	mov    esi,0x9
  405e1e:	mov    rdi,rbx
  405e21:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  405e26:	test   rax,rax
  405e29:	je     405e2d <gen_monster@@Base+0x23d>
  405e2b:	mov    DWORD PTR [rax],ebp
  405e2d:	mov    esi,0x24
  405e32:	mov    rdi,rbx
  405e35:	call   410480 <flatcc_builder_start_table@@Base>
  405e3a:	lea    rsi,[rip+0xf56e]        # 4153af <_IO_stdin_used@@Base+0x3af>
  405e41:	mov    edx,0x7
  405e46:	mov    rdi,rbx
  405e49:	call   4125b0 <flatcc_builder_create_string@@Base>
  405e4e:	test   eax,eax
  405e50:	je     405e68 <gen_monster@@Base+0x278>
  405e52:	mov    ebp,eax
  405e54:	mov    esi,0x3
  405e59:	mov    rdi,rbx
  405e5c:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  405e61:	test   rax,rax
  405e64:	je     405e68 <gen_monster@@Base+0x278>
  405e66:	mov    DWORD PTR [rax],ebp
  405e68:	lea    rsi,[rip+0xf2c9]        # 415138 <_IO_stdin_used@@Base+0x138>
  405e6f:	mov    edx,0x1
  405e74:	mov    rdi,rbx
  405e77:	call   410e20 <flatcc_builder_check_required@@Base>
  405e7c:	test   eax,eax
  405e7e:	je     406439 <gen_monster@@Base+0x849>
  405e84:	mov    rdi,rbx
  405e87:	call   410e90 <flatcc_builder_end_table@@Base>
  405e8c:	mov    r14d,eax
  405e8f:	mov    rdi,rbx
  405e92:	call   410090 <flatcc_builder_start_offset_vector@@Base>
  405e97:	mov    esi,0x2
  405e9c:	mov    rdi,rbx
  405e9f:	call   40f990 <flatcc_builder_extend_offset_vector@@Base>
  405ea4:	mov    DWORD PTR [rax],r14d
  405ea7:	mov    DWORD PTR [rax+0x4],r14d
  405eab:	mov    esi,0x24
  405eb0:	mov    rdi,rbx
  405eb3:	call   410480 <flatcc_builder_start_table@@Base>
  405eb8:	lea    rsi,[rip+0xf51a]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  405ebf:	mov    edx,0x1e
  405ec4:	mov    rdi,rbx
  405ec7:	call   412720 <flatcc_builder_create_string_strn@@Base>
  405ecc:	test   eax,eax
  405ece:	je     405ee6 <gen_monster@@Base+0x2f6>
  405ed0:	mov    ebp,eax
  405ed2:	mov    esi,0x3
  405ed7:	mov    rdi,rbx
  405eda:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  405edf:	test   rax,rax
  405ee2:	je     405ee6 <gen_monster@@Base+0x2f6>
  405ee4:	mov    DWORD PTR [rax],ebp
  405ee6:	lea    rsi,[rip+0xf24b]        # 415138 <_IO_stdin_used@@Base+0x138>
  405eed:	mov    edx,0x1
  405ef2:	mov    rdi,rbx
  405ef5:	call   410e20 <flatcc_builder_check_required@@Base>
  405efa:	test   eax,eax
  405efc:	je     406439 <gen_monster@@Base+0x849>
  405f02:	mov    rdi,rbx
  405f05:	call   410e90 <flatcc_builder_end_table@@Base>
  405f0a:	mov    rdi,rbx
  405f0d:	mov    esi,eax
  405f0f:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  405f14:	mov    ebp,DWORD PTR [rax]
  405f16:	mov    esi,0x3
  405f1b:	mov    rdi,rbx
  405f1e:	call   40f990 <flatcc_builder_extend_offset_vector@@Base>
  405f23:	mov    DWORD PTR [rax],r14d
  405f26:	mov    DWORD PTR [rax+0x4],ebp
  405f29:	mov    esi,0x1
  405f2e:	mov    rdi,rbx
  405f31:	call   40ff10 <flatcc_builder_truncate_offset_vector@@Base>
  405f36:	mov    rdi,rbx
  405f39:	call   4115a0 <flatcc_builder_offset_vector_count@@Base>
  405f3e:	cmp    rax,0x5
  405f42:	jne    406496 <gen_monster@@Base+0x8a6>
  405f48:	mov    esi,0x24
  405f4d:	mov    rdi,rbx
  405f50:	call   410480 <flatcc_builder_start_table@@Base>
  405f55:	lea    rsi,[rip+0xf65d]        # 4155b9 <_IO_stdin_used@@Base+0x5b9>
  405f5c:	mov    edx,0x8
  405f61:	mov    rdi,rbx
  405f64:	call   412720 <flatcc_builder_create_string_strn@@Base>
  405f69:	test   eax,eax
  405f6b:	je     405f83 <gen_monster@@Base+0x393>
  405f6d:	mov    ebp,eax
  405f6f:	mov    esi,0x3
  405f74:	mov    rdi,rbx
  405f77:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  405f7c:	test   rax,rax
  405f7f:	je     405f83 <gen_monster@@Base+0x393>
  405f81:	mov    DWORD PTR [rax],ebp
  405f83:	lea    rsi,[rip+0xf1ae]        # 415138 <_IO_stdin_used@@Base+0x138>
  405f8a:	mov    edx,0x1
  405f8f:	mov    rdi,rbx
  405f92:	call   410e20 <flatcc_builder_check_required@@Base>
  405f97:	test   eax,eax
  405f99:	je     406439 <gen_monster@@Base+0x849>
  405f9f:	mov    rdi,rbx
  405fa2:	call   410e90 <flatcc_builder_end_table@@Base>
  405fa7:	mov    rdi,rbx
  405faa:	mov    esi,eax
  405fac:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  405fb1:	mov    eax,DWORD PTR [rax]
  405fb3:	mov    DWORD PTR [rsp+0xc],eax
  405fb7:	mov    rdi,rbx
  405fba:	call   4115a0 <flatcc_builder_offset_vector_count@@Base>
  405fbf:	cmp    rax,0x6
  405fc3:	jne    4064b5 <gen_monster@@Base+0x8c5>
  405fc9:	mov    rdi,rbx
  405fcc:	call   411590 <flatcc_builder_offset_vector_edit@@Base>
  405fd1:	mov    ecx,DWORD PTR [rax+0x8]
  405fd4:	mov    edx,DWORD PTR [rax+0x14]
  405fd7:	mov    DWORD PTR [rsp+0x10],ecx
  405fdb:	mov    DWORD PTR [rax+0x14],r14d
  405fdf:	mov    DWORD PTR [rax],edx
  405fe1:	lea    rsi,[rsp+0xc]
  405fe6:	mov    edx,0x2
  405feb:	mov    rdi,rbx
  405fee:	call   40fb20 <flatcc_builder_append_offset_vector@@Base>
  405ff3:	mov    rdi,rbx
  405ff6:	call   410250 <flatcc_builder_end_offset_vector@@Base>
  405ffb:	test   eax,eax
  405ffd:	je     406015 <gen_monster@@Base+0x425>
  405fff:	mov    ebp,eax
  406001:	mov    esi,0xb
  406006:	mov    rdi,rbx
  406009:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40600e:	test   rax,rax
  406011:	je     406015 <gen_monster@@Base+0x425>
  406013:	mov    DWORD PTR [rax],ebp
  406015:	lea    rsi,[rip+0xf4a3]        # 4154bf <_IO_stdin_used@@Base+0x4bf>
  40601c:	mov    rdi,rbx
  40601f:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  406024:	mov    DWORD PTR [rsp+0x14],eax
  406028:	lea    rsi,[rip+0xf0e5]        # 415114 <_IO_stdin_used@@Base+0x114>
  40602f:	mov    edx,0x2
  406034:	mov    rdi,rbx
  406037:	call   4125b0 <flatcc_builder_create_string@@Base>
  40603c:	mov    DWORD PTR [rsp+0x18],eax
  406040:	lea    rsi,[rip+0xf498]        # 4154df <_IO_stdin_used@@Base+0x4df>
  406047:	mov    rdi,rbx
  40604a:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40604f:	mov    DWORD PTR [rsp+0x1c],eax
  406053:	lea    rsi,[rsp+0x14]
  406058:	mov    edx,0x3
  40605d:	mov    rdi,rbx
  406060:	call   410100 <flatcc_builder_create_offset_vector@@Base>
  406065:	test   eax,eax
  406067:	je     40607f <gen_monster@@Base+0x48f>
  406069:	mov    ebp,eax
  40606b:	mov    esi,0xa
  406070:	mov    rdi,rbx
  406073:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  406078:	test   rax,rax
  40607b:	je     40607f <gen_monster@@Base+0x48f>
  40607d:	mov    DWORD PTR [rax],ebp
  40607f:	mov    esi,0x1
  406084:	mov    edx,0x1
  406089:	mov    ecx,0xffffffff
  40608e:	mov    rdi,rbx
  406091:	call   410010 <flatcc_builder_start_vector@@Base>
  406096:	lea    rsi,[rsp+0x8]
  40609b:	mov    edx,0x1
  4060a0:	mov    rdi,rbx
  4060a3:	call   40f870 <flatcc_builder_append_vector@@Base>
  4060a8:	lea    rsi,[rsp+0x9]
  4060ad:	mov    edx,0x3
  4060b2:	mov    rdi,rbx
  4060b5:	call   40f870 <flatcc_builder_append_vector@@Base>
  4060ba:	mov    rdi,rbx
  4060bd:	call   4111a0 <flatcc_builder_end_vector@@Base>
  4060c2:	test   eax,eax
  4060c4:	je     4060dc <gen_monster@@Base+0x4ec>
  4060c6:	mov    ebp,eax
  4060c8:	mov    esi,0x18
  4060cd:	mov    rdi,rbx
  4060d0:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4060d5:	test   rax,rax
  4060d8:	je     4060dc <gen_monster@@Base+0x4ec>
  4060da:	mov    DWORD PTR [rax],ebp
  4060dc:	test   r14d,r14d
  4060df:	je     406119 <gen_monster@@Base+0x529>
  4060e1:	mov    esi,0x7
  4060e6:	mov    edx,0x1
  4060eb:	mov    ecx,0x1
  4060f0:	mov    rdi,rbx
  4060f3:	call   411800 <flatcc_builder_table_add@@Base>
  4060f8:	test   rax,rax
  4060fb:	je     406119 <gen_monster@@Base+0x529>
  4060fd:	mov    rbp,rax
  406100:	mov    esi,0x8
  406105:	mov    rdi,rbx
  406108:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40610d:	test   rax,rax
  406110:	je     406119 <gen_monster@@Base+0x529>
  406112:	mov    BYTE PTR [rbp+0x0],0x1
  406116:	mov    DWORD PTR [rax],r14d
  406119:	mov    esi,0x24
  40611e:	mov    rdi,rbx
  406121:	call   410480 <flatcc_builder_start_table@@Base>
  406126:	lea    rsi,[rip+0xf3d8]        # 415505 <_IO_stdin_used@@Base+0x505>
  40612d:	mov    rdi,rbx
  406130:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  406135:	test   eax,eax
  406137:	je     40614f <gen_monster@@Base+0x55f>
  406139:	mov    ebp,eax
  40613b:	mov    esi,0x3
  406140:	mov    rdi,rbx
  406143:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  406148:	test   rax,rax
  40614b:	je     40614f <gen_monster@@Base+0x55f>
  40614d:	mov    DWORD PTR [rax],ebp
  40614f:	mov    rdi,rbx
  406152:	call   410090 <flatcc_builder_start_offset_vector@@Base>
  406157:	mov    esi,0x24
  40615c:	mov    rdi,rbx
  40615f:	call   410480 <flatcc_builder_start_table@@Base>
  406164:	test   r14d,r14d
  406167:	je     4061a1 <gen_monster@@Base+0x5b1>
  406169:	mov    esi,0x7
  40616e:	mov    edx,0x1
  406173:	mov    ecx,0x1
  406178:	mov    rdi,rbx
  40617b:	call   411800 <flatcc_builder_table_add@@Base>
  406180:	test   rax,rax
  406183:	je     4061a1 <gen_monster@@Base+0x5b1>
  406185:	mov    rbp,rax
  406188:	mov    esi,0x8
  40618d:	mov    rdi,rbx
  406190:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  406195:	test   rax,rax
  406198:	je     4061a1 <gen_monster@@Base+0x5b1>
  40619a:	mov    BYTE PTR [rbp+0x0],0x1
  40619e:	mov    DWORD PTR [rax],r14d
  4061a1:	lea    rsi,[rip+0xf460]        # 415608 <_IO_stdin_used@@Base+0x608>
  4061a8:	mov    rdi,rbx
  4061ab:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  4061b0:	test   eax,eax
  4061b2:	je     4061ca <gen_monster@@Base+0x5da>
  4061b4:	mov    ebp,eax
  4061b6:	mov    esi,0x3
  4061bb:	mov    rdi,rbx
  4061be:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4061c3:	test   rax,rax
  4061c6:	je     4061ca <gen_monster@@Base+0x5da>
  4061c8:	mov    DWORD PTR [rax],ebp
  4061ca:	lea    rsi,[rip+0xef67]        # 415138 <_IO_stdin_used@@Base+0x138>
  4061d1:	mov    edx,0x1
  4061d6:	mov    rdi,rbx
  4061d9:	call   410e20 <flatcc_builder_check_required@@Base>
  4061de:	test   eax,eax
  4061e0:	je     406439 <gen_monster@@Base+0x849>
  4061e6:	mov    rdi,rbx
  4061e9:	call   410e90 <flatcc_builder_end_table@@Base>
  4061ee:	test   eax,eax
  4061f0:	je     4061fc <gen_monster@@Base+0x60c>
  4061f2:	mov    rdi,rbx
  4061f5:	mov    esi,eax
  4061f7:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  4061fc:	mov    esi,0x24
  406201:	mov    rdi,rbx
  406204:	call   410480 <flatcc_builder_start_table@@Base>
  406209:	test   r14d,r14d
  40620c:	je     406246 <gen_monster@@Base+0x656>
  40620e:	mov    esi,0x7
  406213:	mov    edx,0x1
  406218:	mov    ecx,0x1
  40621d:	mov    rdi,rbx
  406220:	call   411800 <flatcc_builder_table_add@@Base>
  406225:	test   rax,rax
  406228:	je     406246 <gen_monster@@Base+0x656>
  40622a:	mov    rbp,rax
  40622d:	mov    esi,0x8
  406232:	mov    rdi,rbx
  406235:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40623a:	test   rax,rax
  40623d:	je     406246 <gen_monster@@Base+0x656>
  40623f:	mov    BYTE PTR [rbp+0x0],0x1
  406243:	mov    DWORD PTR [rax],r14d
  406246:	lea    rsi,[rip+0xf3bb]        # 415608 <_IO_stdin_used@@Base+0x608>
  40624d:	mov    rdi,rbx
  406250:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  406255:	test   eax,eax
  406257:	je     40626f <gen_monster@@Base+0x67f>
  406259:	mov    ebp,eax
  40625b:	mov    esi,0x3
  406260:	mov    rdi,rbx
  406263:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  406268:	test   rax,rax
  40626b:	je     40626f <gen_monster@@Base+0x67f>
  40626d:	mov    DWORD PTR [rax],ebp
  40626f:	lea    rsi,[rip+0xeec2]        # 415138 <_IO_stdin_used@@Base+0x138>
  406276:	mov    edx,0x1
  40627b:	mov    rdi,rbx
  40627e:	call   410e20 <flatcc_builder_check_required@@Base>
  406283:	test   eax,eax
  406285:	je     406439 <gen_monster@@Base+0x849>
  40628b:	mov    rdi,rbx
  40628e:	call   410e90 <flatcc_builder_end_table@@Base>
  406293:	test   eax,eax
  406295:	je     4062a1 <gen_monster@@Base+0x6b1>
  406297:	mov    rdi,rbx
  40629a:	mov    esi,eax
  40629c:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  4062a1:	mov    esi,0x24
  4062a6:	mov    rdi,rbx
  4062a9:	call   410480 <flatcc_builder_start_table@@Base>
  4062ae:	mov    esi,0x8
  4062b3:	mov    rdi,rbx
  4062b6:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4062bb:	test   rax,rax
  4062be:	je     4062c3 <gen_monster@@Base+0x6d3>
  4062c0:	mov    DWORD PTR [rax],r14d
  4062c3:	lea    rsi,[rip+0xf33e]        # 415608 <_IO_stdin_used@@Base+0x608>
  4062ca:	mov    rdi,rbx
  4062cd:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  4062d2:	test   eax,eax
  4062d4:	je     4062ec <gen_monster@@Base+0x6fc>
  4062d6:	mov    ebp,eax
  4062d8:	mov    esi,0x3
  4062dd:	mov    rdi,rbx
  4062e0:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4062e5:	test   rax,rax
  4062e8:	je     4062ec <gen_monster@@Base+0x6fc>
  4062ea:	mov    DWORD PTR [rax],ebp
  4062ec:	mov    esi,0x7
  4062f1:	mov    edx,0x1
  4062f6:	mov    ecx,0x1
  4062fb:	mov    rdi,rbx
  4062fe:	call   411800 <flatcc_builder_table_add@@Base>
  406303:	test   rax,rax
  406306:	je     40630b <gen_monster@@Base+0x71b>
  406308:	mov    BYTE PTR [rax],0x1
  40630b:	lea    rsi,[rip+0xee26]        # 415138 <_IO_stdin_used@@Base+0x138>
  406312:	mov    edx,0x1
  406317:	mov    rdi,rbx
  40631a:	call   410e20 <flatcc_builder_check_required@@Base>
  40631f:	test   eax,eax
  406321:	je     406439 <gen_monster@@Base+0x849>
  406327:	mov    rdi,rbx
  40632a:	call   410e90 <flatcc_builder_end_table@@Base>
  40632f:	test   eax,eax
  406331:	je     40633d <gen_monster@@Base+0x74d>
  406333:	mov    rdi,rbx
  406336:	mov    esi,eax
  406338:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  40633d:	mov    rdi,rbx
  406340:	call   410250 <flatcc_builder_end_offset_vector@@Base>
  406345:	test   eax,eax
  406347:	je     40635f <gen_monster@@Base+0x76f>
  406349:	mov    ebp,eax
  40634b:	mov    esi,0xb
  406350:	mov    rdi,rbx
  406353:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  406358:	test   rax,rax
  40635b:	je     40635f <gen_monster@@Base+0x76f>
  40635d:	mov    DWORD PTR [rax],ebp
  40635f:	lea    rsi,[rip+0xedd2]        # 415138 <_IO_stdin_used@@Base+0x138>
  406366:	mov    edx,0x1
  40636b:	mov    rdi,rbx
  40636e:	call   410e20 <flatcc_builder_check_required@@Base>
  406373:	test   eax,eax
  406375:	je     406439 <gen_monster@@Base+0x849>
  40637b:	mov    rdi,rbx
  40637e:	call   410e90 <flatcc_builder_end_table@@Base>
  406383:	test   eax,eax
  406385:	je     40639d <gen_monster@@Base+0x7ad>
  406387:	mov    ebp,eax
  406389:	mov    esi,0xc
  40638e:	mov    rdi,rbx
  406391:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  406396:	test   rax,rax
  406399:	je     40639d <gen_monster@@Base+0x7ad>
  40639b:	mov    DWORD PTR [rax],ebp
  40639d:	mov    esi,0xf
  4063a2:	mov    edx,0x1
  4063a7:	mov    ecx,0x1
  4063ac:	mov    rdi,rbx
  4063af:	call   411800 <flatcc_builder_table_add@@Base>
  4063b4:	test   rax,rax
  4063b7:	je     4063bc <gen_monster@@Base+0x7cc>
  4063b9:	mov    BYTE PTR [rax],0x0
  4063bc:	mov    esi,0x3
  4063c1:	mov    rdi,rbx
  4063c4:	call   410480 <flatcc_builder_start_table@@Base>
  4063c9:	lea    rsi,[rip+0xed6e]        # 41513e <_IO_stdin_used@@Base+0x13e>
  4063d0:	xor    edx,edx
  4063d2:	mov    rdi,rbx
  4063d5:	call   410e20 <flatcc_builder_check_required@@Base>
  4063da:	test   eax,eax
  4063dc:	je     4064d4 <gen_monster@@Base+0x8e4>
  4063e2:	mov    rdi,rbx
  4063e5:	call   410e90 <flatcc_builder_end_table@@Base>
  4063ea:	test   eax,eax
  4063ec:	je     406404 <gen_monster@@Base+0x814>
  4063ee:	mov    ebp,eax
  4063f0:	mov    esi,0xe
  4063f5:	mov    rdi,rbx
  4063f8:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4063fd:	test   rax,rax
  406400:	je     406404 <gen_monster@@Base+0x814>
  406402:	mov    DWORD PTR [rax],ebp
  406404:	lea    rsi,[rip+0xed2d]        # 415138 <_IO_stdin_used@@Base+0x138>
  40640b:	mov    edx,0x1
  406410:	mov    rdi,rbx
  406413:	call   410e20 <flatcc_builder_check_required@@Base>
  406418:	test   eax,eax
  40641a:	je     406439 <gen_monster@@Base+0x849>
  40641c:	mov    rdi,rbx
  40641f:	call   410e90 <flatcc_builder_end_table@@Base>
  406424:	mov    rdi,rbx
  406427:	mov    esi,eax
  406429:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40642e:	xor    eax,eax
  406430:	add    rsp,0x30
  406434:	pop    rbx
  406435:	pop    r14
  406437:	pop    rbp
  406438:	ret    
  406439:	lea    rdi,[rip+0xfd3d]        # 41617d <_IO_stdin_used@@Base+0x117d>
  406440:	lea    rsi,[rip+0xfbfa]        # 416041 <_IO_stdin_used@@Base+0x1041>
  406447:	lea    rcx,[rip+0xfdd1]        # 41621f <_IO_stdin_used@@Base+0x121f>
  40644e:	mov    edx,0xeb
  406453:	call   4040a0 <__assert_fail@plt>
  406458:	lea    rdi,[rip+0xf0b0]        # 41550f <_IO_stdin_used@@Base+0x50f>
  40645f:	lea    rsi,[rip+0xeece]        # 415334 <_IO_stdin_used@@Base+0x334>
  406466:	lea    rcx,[rip+0xf0c9]        # 415536 <_IO_stdin_used@@Base+0x536>
  40646d:	mov    edx,0x371
  406472:	call   4040a0 <__assert_fail@plt>
  406477:	lea    rdi,[rip+0xf0e1]        # 41555f <_IO_stdin_used@@Base+0x55f>
  40647e:	lea    rsi,[rip+0xeeaf]        # 415334 <_IO_stdin_used@@Base+0x334>
  406485:	lea    rcx,[rip+0xf0aa]        # 415536 <_IO_stdin_used@@Base+0x536>
  40648c:	mov    edx,0x373
  406491:	call   4040a0 <__assert_fail@plt>
  406496:	lea    rdi,[rip+0xf0e9]        # 415586 <_IO_stdin_used@@Base+0x586>
  40649d:	lea    rsi,[rip+0xee90]        # 415334 <_IO_stdin_used@@Base+0x334>
  4064a4:	lea    rcx,[rip+0xf08b]        # 415536 <_IO_stdin_used@@Base+0x536>
  4064ab:	mov    edx,0x39b
  4064b0:	call   4040a0 <__assert_fail@plt>
  4064b5:	lea    rdi,[rip+0xf119]        # 4155d5 <_IO_stdin_used@@Base+0x5d5>
  4064bc:	lea    rsi,[rip+0xee71]        # 415334 <_IO_stdin_used@@Base+0x334>
  4064c3:	lea    rcx,[rip+0xf06c]        # 415536 <_IO_stdin_used@@Base+0x536>
  4064ca:	mov    edx,0x3a1
  4064cf:	call   4040a0 <__assert_fail@plt>
  4064d4:	lea    rdi,[rip+0x10239]        # 416714 <_IO_stdin_used@@Base+0x1714>
  4064db:	lea    rsi,[rip+0xfb5f]        # 416041 <_IO_stdin_used@@Base+0x1041>
  4064e2:	lea    rcx,[rip+0x102c4]        # 4167ad <_IO_stdin_used@@Base+0x17ad>
  4064e9:	mov    edx,0xdd
  4064ee:	call   4040a0 <__assert_fail@plt>
  4064f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064fd:	nop    DWORD PTR [rax]

0000000000406500 <test_monster@@Base>:
  406500:	push   rbp
  406501:	push   rbx
  406502:	push   rax
  406503:	mov    rbx,rdi
  406506:	xor    esi,esi
  406508:	call   405bf0 <gen_monster@@Base>
  40650d:	mov    rsi,rsp
  406510:	mov    rdi,rbx
  406513:	call   412b90 <flatcc_builder_finalize_aligned_buffer@@Base>
  406518:	mov    rbx,rax
  40651b:	mov    rdx,QWORD PTR [rsp]
  40651f:	mov    rax,QWORD PTR [rip+0x17ad2]        # 41dff8 <stderr@GLIBC_2.2.5>
  406526:	mov    rcx,QWORD PTR [rax]
  406529:	lea    rdi,[rip+0xecb3]        # 4151e3 <_IO_stdin_used@@Base+0x1e3>
  406530:	mov    rsi,rbx
  406533:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  406538:	mov    rsi,QWORD PTR [rsp]
  40653c:	lea    rdx,[rip+0xec05]        # 415148 <_IO_stdin_used@@Base+0x148>
  406543:	lea    rcx,[rip+0x7186]        # 40d6d0 <main@@Base+0x310>
  40654a:	mov    rdi,rbx
  40654d:	call   413ff0 <flatcc_verify_table_as_root@@Base>
  406552:	test   eax,eax
  406554:	je     406578 <test_monster@@Base+0x78>
  406556:	mov    edi,eax
  406558:	call   413470 <flatcc_verify_error_string@@Base>
  40655d:	mov    rcx,rax
  406560:	lea    rdi,[rip+0xf0aa]        # 415611 <_IO_stdin_used@@Base+0x611>
  406567:	xor    eax,eax
  406569:	mov    rsi,rcx
  40656c:	call   404080 <printf@plt>
  406571:	mov    ebp,0xffffffff
  406576:	jmp    40658a <test_monster@@Base+0x8a>
  406578:	mov    rdi,rbx
  40657b:	call   405020 <verify_monster@@Base>
  406580:	mov    ebp,eax
  406582:	mov    rdi,rbx
  406585:	call   412cc0 <flatcc_builder_aligned_free@@Base>
  40658a:	mov    eax,ebp
  40658c:	add    rsp,0x8
  406590:	pop    rbx
  406591:	pop    rbp
  406592:	ret    
  406593:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40659d:	nop    DWORD PTR [rax]

00000000004065a0 <test_monster_with_size@@Base>:
  4065a0:	push   r14
  4065a2:	push   rbx
  4065a3:	push   rax
  4065a4:	mov    rbx,rdi
  4065a7:	mov    esi,0x1
  4065ac:	call   405bf0 <gen_monster@@Base>
  4065b1:	mov    rsi,rsp
  4065b4:	mov    rdi,rbx
  4065b7:	call   412b90 <flatcc_builder_finalize_aligned_buffer@@Base>
  4065bc:	mov    rbx,rax
  4065bf:	mov    r14,rax
  4065c2:	mov    rdx,QWORD PTR [rsp]
  4065c6:	mov    rax,QWORD PTR [rip+0x17a2b]        # 41dff8 <stderr@GLIBC_2.2.5>
  4065cd:	mov    rcx,QWORD PTR [rax]
  4065d0:	lea    rdi,[rip+0xf064]        # 41563b <_IO_stdin_used@@Base+0x63b>
  4065d7:	mov    rsi,rbx
  4065da:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  4065df:	test   bl,0xf
  4065e2:	je     40660a <test_monster_with_size@@Base+0x6a>
  4065e4:	lea    rdi,[rip+0xf068]        # 415653 <_IO_stdin_used@@Base+0x653>
  4065eb:	xor    eax,eax
  4065ed:	call   404080 <printf@plt>
  4065f2:	lea    rdi,[rip+0xf0ab]        # 4156a4 <_IO_stdin_used@@Base+0x6a4>
  4065f9:	xor    eax,eax
  4065fb:	mov    esi,r14d
  4065fe:	call   404080 <printf@plt>
  406603:	mov    ebx,0xffffffff
  406608:	jmp    406681 <test_monster_with_size@@Base+0xe1>
  40660a:	mov    esi,DWORD PTR [r14]
  40660d:	mov    rdx,QWORD PTR [rsp]
  406611:	add    rdx,0xfffffffffffffffc
  406615:	cmp    rdx,rsi
  406618:	jne    40665a <test_monster_with_size@@Base+0xba>
  40661a:	add    rbx,0x4
  40661e:	lea    rdx,[rip+0xeb23]        # 415148 <_IO_stdin_used@@Base+0x148>
  406625:	lea    rcx,[rip+0x70a4]        # 40d6d0 <main@@Base+0x310>
  40662c:	mov    rdi,rbx
  40662f:	call   413ff0 <flatcc_verify_table_as_root@@Base>
  406634:	test   eax,eax
  406636:	je     40666f <test_monster_with_size@@Base+0xcf>
  406638:	mov    edi,eax
  40663a:	call   413470 <flatcc_verify_error_string@@Base>
  40663f:	mov    rcx,rax
  406642:	lea    rdi,[rip+0xf0a5]        # 4156ee <_IO_stdin_used@@Base+0x6ee>
  406649:	xor    eax,eax
  40664b:	mov    rsi,rcx
  40664e:	call   404080 <printf@plt>
  406653:	mov    ebx,0xffffffff
  406658:	jmp    406681 <test_monster_with_size@@Base+0xe1>
  40665a:	lea    rdi,[rip+0xf057]        # 4156b8 <_IO_stdin_used@@Base+0x6b8>
  406661:	xor    eax,eax
  406663:	call   404080 <printf@plt>
  406668:	mov    ebx,0xffffffff
  40666d:	jmp    406681 <test_monster_with_size@@Base+0xe1>
  40666f:	mov    rdi,rbx
  406672:	call   405020 <verify_monster@@Base>
  406677:	mov    ebx,eax
  406679:	mov    rdi,r14
  40667c:	call   412cc0 <flatcc_builder_aligned_free@@Base>
  406681:	mov    eax,ebx
  406683:	add    rsp,0x8
  406687:	pop    rbx
  406688:	pop    r14
  40668a:	ret    
  40668b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406690 <test_string@@Base>:
  406690:	push   rbp
  406691:	push   rbx
  406692:	push   rax
  406693:	mov    rbx,rdi
  406696:	call   40e610 <flatcc_builder_reset@@Base>
  40669b:	lea    rsi,[rip+0xeaa6]        # 415148 <_IO_stdin_used@@Base+0x148>
  4066a2:	xor    edx,edx
  4066a4:	xor    ecx,ecx
  4066a6:	mov    rdi,rbx
  4066a9:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  4066ae:	test   eax,eax
  4066b0:	jne    4066bf <test_string@@Base+0x2f>
  4066b2:	mov    esi,0x24
  4066b7:	mov    rdi,rbx
  4066ba:	call   410480 <flatcc_builder_start_table@@Base>
  4066bf:	mov    rdi,rbx
  4066c2:	call   410310 <flatcc_builder_start_string@@Base>
  4066c7:	mov    esi,0x3
  4066cc:	mov    rdi,rbx
  4066cf:	call   40fc30 <flatcc_builder_extend_string@@Base>
  4066d4:	mov    WORD PTR [rax],0x3231
  4066d9:	mov    BYTE PTR [rax+0x2],0x33
  4066dd:	lea    rsi,[rip+0xf069]        # 41574d <_IO_stdin_used@@Base+0x74d>
  4066e4:	mov    rdi,rbx
  4066e7:	call   40fe10 <flatcc_builder_append_string_str@@Base>
  4066ec:	mov    rdi,rbx
  4066ef:	call   412860 <flatcc_builder_string_len@@Base>
  4066f4:	cmp    rax,0x4
  4066f8:	jne    406853 <test_string@@Base+0x1c3>
  4066fe:	lea    rsi,[rip+0xf06e]        # 415773 <_IO_stdin_used@@Base+0x773>
  406705:	mov    edx,0x1e
  40670a:	mov    rdi,rbx
  40670d:	call   40fe40 <flatcc_builder_append_string_strn@@Base>
  406712:	mov    rdi,rbx
  406715:	call   412860 <flatcc_builder_string_len@@Base>
  40671a:	cmp    rax,0x8
  40671e:	jne    406872 <test_string@@Base+0x1e2>
  406724:	lea    rsi,[rip+0xf073]        # 41579e <_IO_stdin_used@@Base+0x79e>
  40672b:	mov    edx,0x2
  406730:	mov    rdi,rbx
  406733:	call   40fd10 <flatcc_builder_append_string@@Base>
  406738:	mov    rdi,rbx
  40673b:	call   412860 <flatcc_builder_string_len@@Base>
  406740:	cmp    rax,0xa
  406744:	jne    406891 <test_string@@Base+0x201>
  40674a:	mov    esi,0x3
  40674f:	mov    rdi,rbx
  406752:	call   40ff90 <flatcc_builder_truncate_string@@Base>
  406757:	mov    rdi,rbx
  40675a:	call   412860 <flatcc_builder_string_len@@Base>
  40675f:	cmp    rax,0x7
  406763:	jne    4068b0 <test_string@@Base+0x220>
  406769:	mov    rdi,rbx
  40676c:	call   412850 <flatcc_builder_string_edit@@Base>
  406771:	mov    BYTE PTR [rax+0x4],0x2e
  406775:	mov    rdi,rbx
  406778:	call   412760 <flatcc_builder_end_string@@Base>
  40677d:	test   eax,eax
  40677f:	je     406797 <test_string@@Base+0x107>
  406781:	mov    ebp,eax
  406783:	mov    esi,0x3
  406788:	mov    rdi,rbx
  40678b:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  406790:	test   rax,rax
  406793:	je     406797 <test_string@@Base+0x107>
  406795:	mov    DWORD PTR [rax],ebp
  406797:	lea    rsi,[rip+0xe99a]        # 415138 <_IO_stdin_used@@Base+0x138>
  40679e:	mov    edx,0x1
  4067a3:	mov    rdi,rbx
  4067a6:	call   410e20 <flatcc_builder_check_required@@Base>
  4067ab:	test   eax,eax
  4067ad:	je     4068cf <test_string@@Base+0x23f>
  4067b3:	mov    rdi,rbx
  4067b6:	call   410e90 <flatcc_builder_end_table@@Base>
  4067bb:	mov    rdi,rbx
  4067be:	mov    esi,eax
  4067c0:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  4067c5:	xor    esi,esi
  4067c7:	mov    rdi,rbx
  4067ca:	call   412a50 <flatcc_builder_get_direct_buffer@@Base>
  4067cf:	test   rax,rax
  4067d2:	je     4068ee <test_string@@Base+0x25e>
  4067d8:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  4067df:	jne    40690d <test_string@@Base+0x27d>
  4067e5:	mov    edx,DWORD PTR [rax]
  4067e7:	mov    rcx,rax
  4067ea:	add    rcx,rdx
  4067ed:	movsxd rax,DWORD PTR [rax+rdx*1]
  4067f1:	mov    rdx,rcx
  4067f4:	sub    rdx,rax
  4067f7:	movzx  edx,WORD PTR [rdx]
  4067fa:	cmp    edx,0xb
  4067fd:	jbe    406847 <test_string@@Base+0x1b7>
  4067ff:	neg    rax
  406802:	movzx  eax,WORD PTR [rcx+rax*1+0xa]
  406807:	test   rax,rax
  40680a:	je     406847 <test_string@@Base+0x1b7>
  40680c:	lea    rdx,[rcx+rax*1]
  406810:	mov    eax,DWORD PTR [rcx+rax*1]
  406813:	lea    rdi,[rax+rdx*1]
  406817:	add    rdi,0x4
  40681b:	lea    rsi,[rip+0xefcc]        # 4157ee <_IO_stdin_used@@Base+0x7ee>
  406822:	call   4040f0 <strcmp@plt>
  406827:	test   eax,eax
  406829:	je     40683e <test_string@@Base+0x1ae>
  40682b:	lea    rdi,[rip+0x10f6e]        # 4177a0 <_IO_stdin_used@@Base+0x27a0>
  406832:	call   404060 <puts@plt>
  406837:	mov    eax,0xffffffff
  40683c:	jmp    406840 <test_string@@Base+0x1b0>
  40683e:	xor    eax,eax
  406840:	add    rsp,0x8
  406844:	pop    rbx
  406845:	pop    rbp
  406846:	ret    
  406847:	lea    rdi,[rip+0xfb93]        # 4163e1 <_IO_stdin_used@@Base+0x13e1>
  40684e:	jmp    406914 <test_string@@Base+0x284>
  406853:	lea    rdi,[rip+0xeecf]        # 415729 <_IO_stdin_used@@Base+0x729>
  40685a:	lea    rsi,[rip+0xead3]        # 415334 <_IO_stdin_used@@Base+0x334>
  406861:	lea    rcx,[rip+0xeee7]        # 41574f <_IO_stdin_used@@Base+0x74f>
  406868:	mov    edx,0x438
  40686d:	call   4040a0 <__assert_fail@plt>
  406872:	lea    rdi,[rip+0xeeff]        # 415778 <_IO_stdin_used@@Base+0x778>
  406879:	lea    rsi,[rip+0xeab4]        # 415334 <_IO_stdin_used@@Base+0x334>
  406880:	lea    rcx,[rip+0xeec8]        # 41574f <_IO_stdin_used@@Base+0x74f>
  406887:	mov    edx,0x43a
  40688c:	call   4040a0 <__assert_fail@plt>
  406891:	lea    rdi,[rip+0xef09]        # 4157a1 <_IO_stdin_used@@Base+0x7a1>
  406898:	lea    rsi,[rip+0xea95]        # 415334 <_IO_stdin_used@@Base+0x334>
  40689f:	lea    rcx,[rip+0xeea9]        # 41574f <_IO_stdin_used@@Base+0x74f>
  4068a6:	mov    edx,0x43c
  4068ab:	call   4040a0 <__assert_fail@plt>
  4068b0:	lea    rdi,[rip+0xef11]        # 4157c8 <_IO_stdin_used@@Base+0x7c8>
  4068b7:	lea    rsi,[rip+0xea76]        # 415334 <_IO_stdin_used@@Base+0x334>
  4068be:	lea    rcx,[rip+0xee8a]        # 41574f <_IO_stdin_used@@Base+0x74f>
  4068c5:	mov    edx,0x43e
  4068ca:	call   4040a0 <__assert_fail@plt>
  4068cf:	lea    rdi,[rip+0xf8a7]        # 41617d <_IO_stdin_used@@Base+0x117d>
  4068d6:	lea    rsi,[rip+0xf764]        # 416041 <_IO_stdin_used@@Base+0x1041>
  4068dd:	lea    rcx,[rip+0xf93b]        # 41621f <_IO_stdin_used@@Base+0x121f>
  4068e4:	mov    edx,0xeb
  4068e9:	call   4040a0 <__assert_fail@plt>
  4068ee:	lea    rdi,[rip+0xf019]        # 41590e <_IO_stdin_used@@Base+0x90e>
  4068f5:	lea    rsi,[rip+0xea38]        # 415334 <_IO_stdin_used@@Base+0x334>
  4068fc:	lea    rcx,[rip+0xee4c]        # 41574f <_IO_stdin_used@@Base+0x74f>
  406903:	mov    edx,0x445
  406908:	call   4040a0 <__assert_fail@plt>
  40690d:	lea    rdi,[rip+0xf552]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  406914:	lea    rsi,[rip+0xf571]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40691b:	lea    rcx,[rip+0xfa6e]        # 416390 <_IO_stdin_used@@Base+0x1390>
  406922:	mov    edx,0x2bb
  406927:	call   4040a0 <__assert_fail@plt>
  40692c:	nop    DWORD PTR [rax+0x0]

0000000000406930 <test_sort_find@@Base>:
  406930:	push   rbp
  406931:	push   r15
  406933:	push   r14
  406935:	push   r13
  406937:	push   r12
  406939:	push   rbx
  40693a:	sub    rsp,0x28
  40693e:	mov    rbx,rdi
  406941:	call   40e610 <flatcc_builder_reset@@Base>
  406946:	lea    rsi,[rip+0xe7fb]        # 415148 <_IO_stdin_used@@Base+0x148>
  40694d:	xor    edx,edx
  40694f:	xor    ecx,ecx
  406951:	mov    rdi,rbx
  406954:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  406959:	test   eax,eax
  40695b:	jne    40696a <test_sort_find@@Base+0x3a>
  40695d:	mov    esi,0x24
  406962:	mov    rdi,rbx
  406965:	call   410480 <flatcc_builder_start_table@@Base>
  40696a:	lea    rsi,[rip+0xe81b]        # 41518c <_IO_stdin_used@@Base+0x18c>
  406971:	mov    rdi,rbx
  406974:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  406979:	test   eax,eax
  40697b:	je     406993 <test_sort_find@@Base+0x63>
  40697d:	mov    ebp,eax
  40697f:	mov    esi,0x3
  406984:	mov    rdi,rbx
  406987:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40698c:	test   rax,rax
  40698f:	je     406993 <test_sort_find@@Base+0x63>
  406991:	mov    DWORD PTR [rax],ebp
  406993:	mov    rdi,rbx
  406996:	call   410090 <flatcc_builder_start_offset_vector@@Base>
  40699b:	mov    esi,0x24
  4069a0:	mov    rdi,rbx
  4069a3:	call   410480 <flatcc_builder_start_table@@Base>
  4069a8:	lea    rsi,[rip+0xea00]        # 4153af <_IO_stdin_used@@Base+0x3af>
  4069af:	mov    rdi,rbx
  4069b2:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  4069b7:	test   eax,eax
  4069b9:	je     4069d1 <test_sort_find@@Base+0xa1>
  4069bb:	mov    ebp,eax
  4069bd:	mov    esi,0x3
  4069c2:	mov    rdi,rbx
  4069c5:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4069ca:	test   rax,rax
  4069cd:	je     4069d1 <test_sort_find@@Base+0xa1>
  4069cf:	mov    DWORD PTR [rax],ebp
  4069d1:	lea    rsi,[rip+0xe760]        # 415138 <_IO_stdin_used@@Base+0x138>
  4069d8:	mov    edx,0x1
  4069dd:	mov    rdi,rbx
  4069e0:	call   410e20 <flatcc_builder_check_required@@Base>
  4069e5:	test   eax,eax
  4069e7:	je     40740f <test_sort_find@@Base+0xadf>
  4069ed:	mov    rdi,rbx
  4069f0:	call   410e90 <flatcc_builder_end_table@@Base>
  4069f5:	test   eax,eax
  4069f7:	je     406a03 <test_sort_find@@Base+0xd3>
  4069f9:	mov    rdi,rbx
  4069fc:	mov    esi,eax
  4069fe:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  406a03:	mov    esi,0x24
  406a08:	mov    rdi,rbx
  406a0b:	call   410480 <flatcc_builder_start_table@@Base>
  406a10:	lea    rsi,[rip+0xe9c2]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  406a17:	mov    rdi,rbx
  406a1a:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  406a1f:	test   eax,eax
  406a21:	je     406a39 <test_sort_find@@Base+0x109>
  406a23:	mov    ebp,eax
  406a25:	mov    esi,0x3
  406a2a:	mov    rdi,rbx
  406a2d:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  406a32:	test   rax,rax
  406a35:	je     406a39 <test_sort_find@@Base+0x109>
  406a37:	mov    DWORD PTR [rax],ebp
  406a39:	lea    rsi,[rip+0xe6f8]        # 415138 <_IO_stdin_used@@Base+0x138>
  406a40:	mov    edx,0x1
  406a45:	mov    rdi,rbx
  406a48:	call   410e20 <flatcc_builder_check_required@@Base>
  406a4d:	test   eax,eax
  406a4f:	je     40740f <test_sort_find@@Base+0xadf>
  406a55:	mov    rdi,rbx
  406a58:	call   410e90 <flatcc_builder_end_table@@Base>
  406a5d:	test   eax,eax
  406a5f:	je     406a6b <test_sort_find@@Base+0x13b>
  406a61:	mov    rdi,rbx
  406a64:	mov    esi,eax
  406a66:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  406a6b:	mov    esi,0x24
  406a70:	mov    rdi,rbx
  406a73:	call   410480 <flatcc_builder_start_table@@Base>
  406a78:	lea    rsi,[rip+0xe982]        # 415401 <_IO_stdin_used@@Base+0x401>
  406a7f:	mov    rdi,rbx
  406a82:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  406a87:	test   eax,eax
  406a89:	je     406aa1 <test_sort_find@@Base+0x171>
  406a8b:	mov    ebp,eax
  406a8d:	mov    esi,0x3
  406a92:	mov    rdi,rbx
  406a95:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  406a9a:	test   rax,rax
  406a9d:	je     406aa1 <test_sort_find@@Base+0x171>
  406a9f:	mov    DWORD PTR [rax],ebp
  406aa1:	lea    rsi,[rip+0xe690]        # 415138 <_IO_stdin_used@@Base+0x138>
  406aa8:	mov    edx,0x1
  406aad:	mov    rdi,rbx
  406ab0:	call   410e20 <flatcc_builder_check_required@@Base>
  406ab5:	test   eax,eax
  406ab7:	je     40740f <test_sort_find@@Base+0xadf>
  406abd:	mov    rdi,rbx
  406ac0:	call   410e90 <flatcc_builder_end_table@@Base>
  406ac5:	test   eax,eax
  406ac7:	je     406ad3 <test_sort_find@@Base+0x1a3>
  406ac9:	mov    rdi,rbx
  406acc:	mov    esi,eax
  406ace:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  406ad3:	mov    esi,0x24
  406ad8:	mov    rdi,rbx
  406adb:	call   410480 <flatcc_builder_start_table@@Base>
  406ae0:	lea    rsi,[rip+0xed0f]        # 4157f6 <_IO_stdin_used@@Base+0x7f6>
  406ae7:	mov    rdi,rbx
  406aea:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  406aef:	test   eax,eax
  406af1:	je     406b09 <test_sort_find@@Base+0x1d9>
  406af3:	mov    ebp,eax
  406af5:	mov    esi,0x3
  406afa:	mov    rdi,rbx
  406afd:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  406b02:	test   rax,rax
  406b05:	je     406b09 <test_sort_find@@Base+0x1d9>
  406b07:	mov    DWORD PTR [rax],ebp
  406b09:	lea    rsi,[rip+0xe628]        # 415138 <_IO_stdin_used@@Base+0x138>
  406b10:	mov    edx,0x1
  406b15:	mov    rdi,rbx
  406b18:	call   410e20 <flatcc_builder_check_required@@Base>
  406b1d:	test   eax,eax
  406b1f:	je     40740f <test_sort_find@@Base+0xadf>
  406b25:	mov    rdi,rbx
  406b28:	call   410e90 <flatcc_builder_end_table@@Base>
  406b2d:	test   eax,eax
  406b2f:	je     406b3b <test_sort_find@@Base+0x20b>
  406b31:	mov    rdi,rbx
  406b34:	mov    esi,eax
  406b36:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  406b3b:	mov    esi,0x24
  406b40:	mov    rdi,rbx
  406b43:	call   410480 <flatcc_builder_start_table@@Base>
  406b48:	lea    rsi,[rip+0xe8b2]        # 415401 <_IO_stdin_used@@Base+0x401>
  406b4f:	mov    rdi,rbx
  406b52:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  406b57:	test   eax,eax
  406b59:	je     406b71 <test_sort_find@@Base+0x241>
  406b5b:	mov    ebp,eax
  406b5d:	mov    esi,0x3
  406b62:	mov    rdi,rbx
  406b65:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  406b6a:	test   rax,rax
  406b6d:	je     406b71 <test_sort_find@@Base+0x241>
  406b6f:	mov    DWORD PTR [rax],ebp
  406b71:	lea    rsi,[rip+0xe5c0]        # 415138 <_IO_stdin_used@@Base+0x138>
  406b78:	mov    edx,0x1
  406b7d:	mov    rdi,rbx
  406b80:	call   410e20 <flatcc_builder_check_required@@Base>
  406b85:	test   eax,eax
  406b87:	je     40740f <test_sort_find@@Base+0xadf>
  406b8d:	mov    rdi,rbx
  406b90:	call   410e90 <flatcc_builder_end_table@@Base>
  406b95:	test   eax,eax
  406b97:	je     406ba3 <test_sort_find@@Base+0x273>
  406b99:	mov    rdi,rbx
  406b9c:	mov    esi,eax
  406b9e:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  406ba3:	mov    rdi,rbx
  406ba6:	call   410250 <flatcc_builder_end_offset_vector@@Base>
  406bab:	test   eax,eax
  406bad:	je     406bc5 <test_sort_find@@Base+0x295>
  406baf:	mov    ebp,eax
  406bb1:	mov    esi,0xb
  406bb6:	mov    rdi,rbx
  406bb9:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  406bbe:	test   rax,rax
  406bc1:	je     406bc5 <test_sort_find@@Base+0x295>
  406bc3:	mov    DWORD PTR [rax],ebp
  406bc5:	lea    rsi,[rip+0xe56c]        # 415138 <_IO_stdin_used@@Base+0x138>
  406bcc:	mov    edx,0x1
  406bd1:	mov    rdi,rbx
  406bd4:	call   410e20 <flatcc_builder_check_required@@Base>
  406bd9:	test   eax,eax
  406bdb:	je     40740f <test_sort_find@@Base+0xadf>
  406be1:	mov    rdi,rbx
  406be4:	call   410e90 <flatcc_builder_end_table@@Base>
  406be9:	mov    rdi,rbx
  406bec:	mov    esi,eax
  406bee:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  406bf3:	lea    rsi,[rsp+0x20]
  406bf8:	mov    rdi,rbx
  406bfb:	call   412b90 <flatcc_builder_finalize_aligned_buffer@@Base>
  406c00:	mov    rbx,rax
  406c03:	mov    rdx,QWORD PTR [rsp+0x20]
  406c08:	mov    r15,QWORD PTR [rip+0x173e9]        # 41dff8 <stderr@GLIBC_2.2.5>
  406c0f:	mov    rcx,QWORD PTR [r15]
  406c12:	lea    rdi,[rip+0xebe3]        # 4157fc <_IO_stdin_used@@Base+0x7fc>
  406c19:	mov    rsi,rax
  406c1c:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  406c21:	test   rbx,rbx
  406c24:	je     40742e <test_sort_find@@Base+0xafe>
  406c2a:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  406c31:	jne    40742e <test_sort_find@@Base+0xafe>
  406c37:	mov    ecx,DWORD PTR [rbx]
  406c39:	lea    rax,[rbx+rcx*1]
  406c3d:	mov    QWORD PTR [rsp],rbx
  406c41:	mov    QWORD PTR [rsp+0x8],rcx
  406c46:	movsxd rcx,DWORD PTR [rbx+rcx*1]
  406c4a:	mov    rdx,rax
  406c4d:	sub    rdx,rcx
  406c50:	movzx  edx,WORD PTR [rdx]
  406c53:	cmp    edx,0x1b
  406c56:	jbe    40744d <test_sort_find@@Base+0xb1d>
  406c5c:	neg    rcx
  406c5f:	movzx  ecx,WORD PTR [rax+rcx*1+0x1a]
  406c64:	test   rcx,rcx
  406c67:	je     40744d <test_sort_find@@Base+0xb1d>
  406c6d:	mov    edx,DWORD PTR [rax+rcx*1]
  406c70:	mov    QWORD PTR [rsp+0x18],rcx
  406c75:	add    rax,rcx
  406c78:	lea    r13,[rdx+rax*1]
  406c7c:	add    r13,0x4
  406c80:	mov    QWORD PTR [rsp+0x10],rdx
  406c85:	mov    r14d,DWORD PTR [rdx+rax*1]
  406c89:	test   r14,r14
  406c8c:	je     406d37 <test_sort_find@@Base+0x407>
  406c92:	lea    rbx,[r14-0x1]
  406c96:	mov    rbp,r14
  406c99:	shr    rbp,1
  406c9c:	nop    DWORD PTR [rax+0x0]
  406ca0:	mov    rdi,r13
  406ca3:	mov    rsi,rbp
  406ca6:	mov    rdx,rbx
  406ca9:	call   40df90 <main@@Base+0xbd0>
  406cae:	add    rbp,0xffffffffffffffff
  406cb2:	cmp    rbp,0xffffffffffffffff
  406cb6:	jne    406ca0 <test_sort_find@@Base+0x370>
  406cb8:	test   rbx,rbx
  406cbb:	je     406d37 <test_sort_find@@Base+0x407>
  406cbd:	mov    rax,QWORD PTR [rsp+0x10]
  406cc2:	lea    rbp,[rax+r14*4]
  406cc6:	mov    rbx,r14
  406cc9:	add    rbx,0xfffffffffffffffe
  406ccd:	add    rbp,QWORD PTR [rsp+0x18]
  406cd2:	add    rbp,QWORD PTR [rsp+0x8]
  406cd7:	add    rbp,QWORD PTR [rsp]
  406cdb:	lea    eax,[r14*4+0x0]
  406ce3:	lea    r12d,[r14*4-0x4]
  406ceb:	mov    r14d,0x4
  406cf1:	sub    r14d,eax
  406cf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cfe:	xchg   ax,ax
  406d00:	mov    eax,DWORD PTR [rbp+0x0]
  406d03:	add    eax,r12d
  406d06:	mov    ecx,DWORD PTR [r13+0x0]
  406d0a:	add    ecx,r14d
  406d0d:	mov    DWORD PTR [r13+0x0],eax
  406d11:	mov    DWORD PTR [rbp+0x0],ecx
  406d14:	xor    esi,esi
  406d16:	mov    rdi,r13
  406d19:	mov    rdx,rbx
  406d1c:	call   40df90 <main@@Base+0xbd0>
  406d21:	add    rbx,0xffffffffffffffff
  406d25:	add    rbp,0xfffffffffffffffc
  406d29:	add    r12d,0xfffffffc
  406d2d:	add    r14d,0x4
  406d31:	cmp    rbx,0xffffffffffffffff
  406d35:	jne    406d00 <test_sort_find@@Base+0x3d0>
  406d37:	mov    rdx,QWORD PTR [rsp+0x20]
  406d3c:	mov    rcx,QWORD PTR [r15]
  406d3f:	lea    rdi,[rip+0xeab8]        # 4157fe <_IO_stdin_used@@Base+0x7fe>
  406d46:	mov    rbp,QWORD PTR [rsp]
  406d4a:	mov    rsi,rbp
  406d4d:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  406d52:	cmp    DWORD PTR [r13-0x4],0x5
  406d57:	jne    406db1 <test_sort_find@@Base+0x481>
  406d59:	mov    ecx,DWORD PTR [r13+0x0]
  406d5d:	lea    rax,[rcx+r13*1]
  406d61:	movsxd rcx,DWORD PTR [r13+rcx*1+0x0]
  406d66:	mov    rdx,rax
  406d69:	sub    rdx,rcx
  406d6c:	movzx  edx,WORD PTR [rdx]
  406d6f:	cmp    edx,0xc
  406d72:	jb     40746c <test_sort_find@@Base+0xb3c>
  406d78:	neg    rcx
  406d7b:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  406d80:	test   rcx,rcx
  406d83:	je     40746c <test_sort_find@@Base+0xb3c>
  406d89:	lea    rdx,[rax+rcx*1]
  406d8d:	mov    eax,DWORD PTR [rax+rcx*1]
  406d90:	lea    rdi,[rax+rdx*1]
  406d94:	add    rdi,0x4
  406d98:	lea    rsi,[rip+0xea57]        # 4157f6 <_IO_stdin_used@@Base+0x7f6>
  406d9f:	call   4040f0 <strcmp@plt>
  406da4:	test   eax,eax
  406da6:	je     406ddd <test_sort_find@@Base+0x4ad>
  406da8:	lea    rdi,[rip+0x10ba1]        # 417950 <_IO_stdin_used@@Base+0x2950>
  406daf:	jmp    406db8 <test_sort_find@@Base+0x488>
  406db1:	lea    rdi,[rip+0x10bb8]        # 417970 <_IO_stdin_used@@Base+0x2970>
  406db8:	call   404060 <puts@plt>
  406dbd:	mov    r15d,0xffffffff
  406dc3:	mov    rdi,rbp
  406dc6:	call   412cc0 <flatcc_builder_aligned_free@@Base>
  406dcb:	mov    eax,r15d
  406dce:	add    rsp,0x28
  406dd2:	pop    rbx
  406dd3:	pop    r12
  406dd5:	pop    r13
  406dd7:	pop    r14
  406dd9:	pop    r15
  406ddb:	pop    rbp
  406ddc:	ret    
  406ddd:	mov    eax,DWORD PTR [r13+0x4]
  406de1:	lea    rbx,[rax+r13*1]
  406de5:	add    rbx,0x4
  406de9:	movsxd rax,DWORD PTR [r13+rax*1+0x4]
  406dee:	mov    rcx,rbx
  406df1:	sub    rcx,rax
  406df4:	movzx  ecx,WORD PTR [rcx]
  406df7:	cmp    ecx,0xc
  406dfa:	jb     40746c <test_sort_find@@Base+0xb3c>
  406e00:	neg    rax
  406e03:	movzx  eax,WORD PTR [rbx+rax*1+0xa]
  406e08:	test   rax,rax
  406e0b:	je     40746c <test_sort_find@@Base+0xb3c>
  406e11:	lea    rcx,[rbx+rax*1]
  406e15:	mov    eax,DWORD PTR [rbx+rax*1]
  406e18:	lea    rdi,[rax+rcx*1]
  406e1c:	add    rdi,0x4
  406e20:	lea    rsi,[rip+0xe5da]        # 415401 <_IO_stdin_used@@Base+0x401>
  406e27:	call   4040f0 <strcmp@plt>
  406e2c:	test   eax,eax
  406e2e:	je     406e3c <test_sort_find@@Base+0x50c>
  406e30:	lea    rdi,[rip+0x10af9]        # 417930 <_IO_stdin_used@@Base+0x2930>
  406e37:	jmp    406db8 <test_sort_find@@Base+0x488>
  406e3c:	mov    eax,DWORD PTR [r13+0x8]
  406e40:	lea    r14,[rax+r13*1]
  406e44:	add    r14,0x8
  406e48:	movsxd rax,DWORD PTR [r13+rax*1+0x8]
  406e4d:	mov    rcx,r14
  406e50:	sub    rcx,rax
  406e53:	movzx  ecx,WORD PTR [rcx]
  406e56:	cmp    ecx,0xc
  406e59:	jb     40746c <test_sort_find@@Base+0xb3c>
  406e5f:	neg    rax
  406e62:	movzx  eax,WORD PTR [r14+rax*1+0xa]
  406e68:	test   rax,rax
  406e6b:	je     40746c <test_sort_find@@Base+0xb3c>
  406e71:	lea    rcx,[r14+rax*1]
  406e75:	mov    eax,DWORD PTR [r14+rax*1]
  406e79:	lea    rdi,[rax+rcx*1]
  406e7d:	add    rdi,0x4
  406e81:	lea    rsi,[rip+0xe579]        # 415401 <_IO_stdin_used@@Base+0x401>
  406e88:	call   4040f0 <strcmp@plt>
  406e8d:	test   eax,eax
  406e8f:	je     406e9d <test_sort_find@@Base+0x56d>
  406e91:	lea    rdi,[rip+0x10a78]        # 417910 <_IO_stdin_used@@Base+0x2910>
  406e98:	jmp    406db8 <test_sort_find@@Base+0x488>
  406e9d:	mov    ecx,DWORD PTR [r13+0xc]
  406ea1:	lea    rax,[rcx+r13*1]
  406ea5:	add    rax,0xc
  406ea9:	movsxd rcx,DWORD PTR [r13+rcx*1+0xc]
  406eae:	mov    rdx,rax
  406eb1:	sub    rdx,rcx
  406eb4:	movzx  edx,WORD PTR [rdx]
  406eb7:	cmp    edx,0xc
  406eba:	jb     40746c <test_sort_find@@Base+0xb3c>
  406ec0:	neg    rcx
  406ec3:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  406ec8:	test   rcx,rcx
  406ecb:	je     40746c <test_sort_find@@Base+0xb3c>
  406ed1:	lea    rdx,[rax+rcx*1]
  406ed5:	mov    eax,DWORD PTR [rax+rcx*1]
  406ed8:	lea    rdi,[rax+rdx*1]
  406edc:	add    rdi,0x4
  406ee0:	lea    rsi,[rip+0xe4f2]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  406ee7:	call   4040f0 <strcmp@plt>
  406eec:	test   eax,eax
  406eee:	je     406efc <test_sort_find@@Base+0x5cc>
  406ef0:	lea    rdi,[rip+0x109f9]        # 4178f0 <_IO_stdin_used@@Base+0x28f0>
  406ef7:	jmp    406db8 <test_sort_find@@Base+0x488>
  406efc:	mov    ecx,DWORD PTR [r13+0x10]
  406f00:	lea    rax,[rcx+r13*1]
  406f04:	add    rax,0x10
  406f08:	movsxd rcx,DWORD PTR [r13+rcx*1+0x10]
  406f0d:	mov    rdx,rax
  406f10:	sub    rdx,rcx
  406f13:	movzx  edx,WORD PTR [rdx]
  406f16:	cmp    edx,0xc
  406f19:	jb     40746c <test_sort_find@@Base+0xb3c>
  406f1f:	neg    rcx
  406f22:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  406f27:	test   rcx,rcx
  406f2a:	je     40746c <test_sort_find@@Base+0xb3c>
  406f30:	lea    rdx,[rax+rcx*1]
  406f34:	mov    eax,DWORD PTR [rax+rcx*1]
  406f37:	lea    rdi,[rax+rdx*1]
  406f3b:	add    rdi,0x4
  406f3f:	lea    rsi,[rip+0xe469]        # 4153af <_IO_stdin_used@@Base+0x3af>
  406f46:	call   4040f0 <strcmp@plt>
  406f4b:	test   eax,eax
  406f4d:	je     406f5b <test_sort_find@@Base+0x62b>
  406f4f:	lea    rdi,[rip+0x1097a]        # 4178d0 <_IO_stdin_used@@Base+0x28d0>
  406f56:	jmp    406db8 <test_sort_find@@Base+0x488>
  406f5b:	cmp    rbx,r14
  406f5e:	je     407280 <test_sort_find@@Base+0x950>
  406f64:	lea    rsi,[rip+0xe46e]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  406f6b:	mov    rdi,r13
  406f6e:	call   4074c0 <test_sort_find@@Base+0xb90>
  406f73:	cmp    rax,0x3
  406f77:	jne    40728c <test_sort_find@@Base+0x95c>
  406f7d:	mov    r12d,DWORD PTR [r13-0x4]
  406f81:	test   r12,r12
  406f84:	je     407298 <test_sort_find@@Base+0x968>
  406f8a:	mov    rbp,r12
  406f8d:	xor    r14d,r14d
  406f90:	add    rbp,0xffffffffffffffff
  406f94:	je     407055 <test_sort_find@@Base+0x725>
  406f9a:	mov    r15,rbp
  406f9d:	sub    r15,r14
  406fa0:	shr    r15,1
  406fa3:	add    r15,r14
  406fa6:	cmp    r15,r12
  406fa9:	jae    40748b <test_sort_find@@Base+0xb5b>
  406faf:	lea    rcx,[r15*4+0x0]
  406fb7:	add    rcx,r13
  406fba:	mov    eax,DWORD PTR [r13+r15*4+0x0]
  406fbf:	add    rax,rcx
  406fc2:	je     4074aa <test_sort_find@@Base+0xb7a>
  406fc8:	movsxd rcx,DWORD PTR [rax]
  406fcb:	mov    rdx,rax
  406fce:	sub    rdx,rcx
  406fd1:	movzx  edx,WORD PTR [rdx]
  406fd4:	cmp    edx,0xc
  406fd7:	jb     40746c <test_sort_find@@Base+0xb3c>
  406fdd:	neg    rcx
  406fe0:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  406fe5:	test   rcx,rcx
  406fe8:	je     40746c <test_sort_find@@Base+0xb3c>
  406fee:	lea    rdx,[rax+rcx*1]
  406ff2:	mov    eax,DWORD PTR [rax+rcx*1]
  406ff5:	lea    rdi,[rax+rdx*1]
  406ff9:	add    rdi,0x4
  406ffd:	mov    edx,DWORD PTR [rax+rdx*1]
  407000:	cmp    edx,0x5
  407003:	setb   bl
  407006:	mov    eax,0x5
  40700b:	cmovae edx,eax
  40700e:	lea    rsi,[rip+0xe82f]        # 415844 <_IO_stdin_used@@Base+0x844>
  407015:	call   404050 <strncmp@plt>
  40701a:	test   eax,eax
  40701c:	setne  al
  40701f:	setle  cl
  407022:	or     al,bl
  407024:	test   al,cl
  407026:	jne    407036 <test_sort_find@@Base+0x706>
  407028:	mov    rbp,r15
  40702b:	cmp    rbp,r14
  40702e:	ja     406f9a <test_sort_find@@Base+0x66a>
  407034:	jmp    407046 <test_sort_find@@Base+0x716>
  407036:	add    r15,0x1
  40703a:	mov    r14,r15
  40703d:	cmp    rbp,r14
  407040:	ja     406f9a <test_sort_find@@Base+0x66a>
  407046:	jne    407298 <test_sort_find@@Base+0x968>
  40704c:	cmp    r14,r12
  40704f:	jae    40748b <test_sort_find@@Base+0xb5b>
  407055:	lea    rcx,[r14*4+0x0]
  40705d:	add    rcx,r13
  407060:	mov    eax,DWORD PTR [r13+r14*4+0x0]
  407065:	add    rax,rcx
  407068:	je     4074aa <test_sort_find@@Base+0xb7a>
  40706e:	movsxd rcx,DWORD PTR [rax]
  407071:	mov    rdx,rax
  407074:	sub    rdx,rcx
  407077:	movzx  edx,WORD PTR [rdx]
  40707a:	cmp    edx,0xc
  40707d:	jb     40746c <test_sort_find@@Base+0xb3c>
  407083:	neg    rcx
  407086:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  40708b:	test   rcx,rcx
  40708e:	je     40746c <test_sort_find@@Base+0xb3c>
  407094:	lea    rdx,[rax+rcx*1]
  407098:	mov    eax,DWORD PTR [rax+rcx*1]
  40709b:	lea    rdi,[rax+rdx*1]
  40709f:	add    rdi,0x4
  4070a3:	mov    ebx,DWORD PTR [rax+rdx*1]
  4070a6:	xor    ebp,ebp
  4070a8:	cmp    ebx,0x5
  4070ab:	mov    edx,0x5
  4070b0:	cmovb  edx,ebx
  4070b3:	lea    rsi,[rip+0xe78a]        # 415844 <_IO_stdin_used@@Base+0x844>
  4070ba:	seta   bpl
  4070be:	call   404050 <strncmp@plt>
  4070c3:	cmp    eax,0x1
  4070c6:	sbb    ecx,ecx
  4070c8:	or     ecx,eax
  4070ca:	test   eax,eax
  4070cc:	cmovne ebp,ecx
  4070cf:	cmp    ebx,0x5
  4070d2:	cmovb  ebp,ecx
  4070d5:	cmp    r14,0x3
  4070d9:	jne    407298 <test_sort_find@@Base+0x968>
  4070df:	test   ebp,ebp
  4070e1:	jne    407298 <test_sort_find@@Base+0x968>
  4070e7:	lea    rsi,[rip+0xe2eb]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  4070ee:	mov    rdi,r13
  4070f1:	call   4074c0 <test_sort_find@@Base+0xb90>
  4070f6:	cmp    rax,0x3
  4070fa:	jne    4072b3 <test_sort_find@@Base+0x983>
  407100:	mov    r12d,DWORD PTR [r13-0x4]
  407104:	test   r12,r12
  407107:	je     4072bc <test_sort_find@@Base+0x98c>
  40710d:	mov    rbp,r12
  407110:	xor    r14d,r14d
  407113:	add    rbp,0xffffffffffffffff
  407117:	je     4071d8 <test_sort_find@@Base+0x8a8>
  40711d:	mov    r15,rbp
  407120:	sub    r15,r14
  407123:	shr    r15,1
  407126:	add    r15,r14
  407129:	cmp    r15,r12
  40712c:	jae    40748b <test_sort_find@@Base+0xb5b>
  407132:	lea    rcx,[r15*4+0x0]
  40713a:	add    rcx,r13
  40713d:	mov    eax,DWORD PTR [r13+r15*4+0x0]
  407142:	add    rax,rcx
  407145:	je     4074aa <test_sort_find@@Base+0xb7a>
  40714b:	movsxd rcx,DWORD PTR [rax]
  40714e:	mov    rdx,rax
  407151:	sub    rdx,rcx
  407154:	movzx  edx,WORD PTR [rdx]
  407157:	cmp    edx,0xc
  40715a:	jb     40746c <test_sort_find@@Base+0xb3c>
  407160:	neg    rcx
  407163:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  407168:	test   rcx,rcx
  40716b:	je     40746c <test_sort_find@@Base+0xb3c>
  407171:	lea    rdx,[rax+rcx*1]
  407175:	mov    eax,DWORD PTR [rax+rcx*1]
  407178:	lea    rdi,[rax+rdx*1]
  40717c:	add    rdi,0x4
  407180:	mov    edx,DWORD PTR [rax+rdx*1]
  407183:	cmp    edx,0x5
  407186:	setb   bl
  407189:	mov    eax,0x5
  40718e:	cmovae edx,eax
  407191:	lea    rsi,[rip+0xe6b3]        # 41584b <_IO_stdin_used@@Base+0x84b>
  407198:	call   404050 <strncmp@plt>
  40719d:	test   eax,eax
  40719f:	setne  al
  4071a2:	setle  cl
  4071a5:	or     al,bl
  4071a7:	test   al,cl
  4071a9:	jne    4071b9 <test_sort_find@@Base+0x889>
  4071ab:	mov    rbp,r15
  4071ae:	cmp    rbp,r14
  4071b1:	ja     40711d <test_sort_find@@Base+0x7ed>
  4071b7:	jmp    4071c9 <test_sort_find@@Base+0x899>
  4071b9:	add    r15,0x1
  4071bd:	mov    r14,r15
  4071c0:	cmp    rbp,r14
  4071c3:	ja     40711d <test_sort_find@@Base+0x7ed>
  4071c9:	jne    4072bc <test_sort_find@@Base+0x98c>
  4071cf:	cmp    r14,r12
  4071d2:	jae    40748b <test_sort_find@@Base+0xb5b>
  4071d8:	lea    rcx,[r14*4+0x0]
  4071e0:	add    rcx,r13
  4071e3:	mov    eax,DWORD PTR [r13+r14*4+0x0]
  4071e8:	add    rax,rcx
  4071eb:	je     4074aa <test_sort_find@@Base+0xb7a>
  4071f1:	movsxd rcx,DWORD PTR [rax]
  4071f4:	mov    rdx,rax
  4071f7:	sub    rdx,rcx
  4071fa:	movzx  edx,WORD PTR [rdx]
  4071fd:	cmp    edx,0xc
  407200:	jb     40746c <test_sort_find@@Base+0xb3c>
  407206:	neg    rcx
  407209:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  40720e:	test   rcx,rcx
  407211:	je     40746c <test_sort_find@@Base+0xb3c>
  407217:	lea    rdx,[rax+rcx*1]
  40721b:	mov    eax,DWORD PTR [rax+rcx*1]
  40721e:	lea    rdi,[rax+rdx*1]
  407222:	add    rdi,0x4
  407226:	mov    ebx,DWORD PTR [rax+rdx*1]
  407229:	xor    ebp,ebp
  40722b:	cmp    ebx,0x5
  40722e:	mov    edx,0x5
  407233:	cmovb  edx,ebx
  407236:	lea    rsi,[rip+0xe60e]        # 41584b <_IO_stdin_used@@Base+0x84b>
  40723d:	seta   bpl
  407241:	call   404050 <strncmp@plt>
  407246:	cmp    eax,0x1
  407249:	sbb    ecx,ecx
  40724b:	or     ecx,eax
  40724d:	test   eax,eax
  40724f:	cmovne ebp,ecx
  407252:	cmp    ebx,0x5
  407255:	cmovb  ebp,ecx
  407258:	cmp    r14,0x3
  40725c:	jne    4072bc <test_sort_find@@Base+0x98c>
  40725e:	test   ebp,ebp
  407260:	jne    4072bc <test_sort_find@@Base+0x98c>
  407262:	lea    rsi,[rip+0xe5e9]        # 415852 <_IO_stdin_used@@Base+0x852>
  407269:	mov    rdi,r13
  40726c:	call   4074c0 <test_sort_find@@Base+0xb90>
  407271:	cmp    rax,0xffffffffffffffff
  407275:	je     4072c5 <test_sort_find@@Base+0x995>
  407277:	lea    rdi,[rip+0x10c72]        # 417ef0 <_IO_stdin_used@@Base+0x2ef0>
  40727e:	jmp    40729f <test_sort_find@@Base+0x96f>
  407280:	lea    rdi,[rip+0x105f9]        # 417880 <_IO_stdin_used@@Base+0x2880>
  407287:	jmp    406db8 <test_sort_find@@Base+0x488>
  40728c:	lea    rdi,[rip+0x105bd]        # 417850 <_IO_stdin_used@@Base+0x2850>
  407293:	jmp    406db8 <test_sort_find@@Base+0x488>
  407298:	lea    rdi,[rip+0x10571]        # 417810 <_IO_stdin_used@@Base+0x2810>
  40729f:	call   404060 <puts@plt>
  4072a4:	mov    r15d,0xffffffff
  4072aa:	mov    rbp,QWORD PTR [rsp]
  4072ae:	jmp    406dc3 <test_sort_find@@Base+0x493>
  4072b3:	lea    rdi,[rip+0x10536]        # 4177f0 <_IO_stdin_used@@Base+0x27f0>
  4072ba:	jmp    40729f <test_sort_find@@Base+0x96f>
  4072bc:	lea    rdi,[rip+0x104fd]        # 4177c0 <_IO_stdin_used@@Base+0x27c0>
  4072c3:	jmp    40729f <test_sort_find@@Base+0x96f>
  4072c5:	lea    rsi,[rip+0xe52a]        # 4157f6 <_IO_stdin_used@@Base+0x7f6>
  4072cc:	mov    rdi,r13
  4072cf:	call   4074c0 <test_sort_find@@Base+0xb90>
  4072d4:	test   rax,rax
  4072d7:	je     4072e2 <test_sort_find@@Base+0x9b2>
  4072d9:	lea    rdi,[rip+0xfd5b]        # 41703b <_IO_stdin_used@@Base+0x203b>
  4072e0:	jmp    40729f <test_sort_find@@Base+0x96f>
  4072e2:	lea    rsi,[rip+0xe118]        # 415401 <_IO_stdin_used@@Base+0x401>
  4072e9:	mov    rdi,r13
  4072ec:	call   4074c0 <test_sort_find@@Base+0xb90>
  4072f1:	cmp    rax,0x1
  4072f5:	jne    4073d6 <test_sort_find@@Base+0xaa6>
  4072fb:	lea    rsi,[rip+0xe0ad]        # 4153af <_IO_stdin_used@@Base+0x3af>
  407302:	mov    rdi,r13
  407305:	call   4074c0 <test_sort_find@@Base+0xb90>
  40730a:	cmp    rax,0x4
  40730e:	jne    4073e2 <test_sort_find@@Base+0xab2>
  407314:	mov    r12d,DWORD PTR [r13-0x4]
  407318:	xor    r15d,r15d
  40731b:	test   r12,r12
  40731e:	je     407406 <test_sort_find@@Base+0xad6>
  407324:	lea    rbx,[r12-0x1]
  407329:	mov    rbp,r12
  40732c:	shr    rbp,1
  40732f:	mov    rdi,r13
  407332:	mov    rsi,rbp
  407335:	mov    rdx,rbx
  407338:	call   40df90 <main@@Base+0xbd0>
  40733d:	add    rbp,0xffffffffffffffff
  407341:	cmp    rbp,0xffffffffffffffff
  407345:	jne    40732f <test_sort_find@@Base+0x9ff>
  407347:	test   rbx,rbx
  40734a:	mov    rbp,QWORD PTR [rsp]
  40734e:	je     406dc3 <test_sort_find@@Base+0x493>
  407354:	mov    rax,QWORD PTR [rsp+0x10]
  407359:	lea    rax,[rax+r12*4]
  40735d:	mov    rcx,r12
  407360:	add    rcx,0xfffffffffffffffe
  407364:	mov    rdx,rcx
  407367:	add    rax,QWORD PTR [rsp+0x18]
  40736c:	add    rax,QWORD PTR [rsp+0x8]
  407371:	mov    r14,rbp
  407374:	add    r14,rax
  407377:	lea    eax,[r12*4+0x0]
  40737f:	lea    ecx,[r12*4-0x4]
  407387:	mov    ebx,0x4
  40738c:	sub    ebx,eax
  40738e:	mov    eax,DWORD PTR [r14]
  407391:	mov    DWORD PTR [rsp+0x8],ecx
  407395:	add    eax,ecx
  407397:	mov    ecx,DWORD PTR [r13+0x0]
  40739b:	add    ecx,ebx
  40739d:	mov    DWORD PTR [r13+0x0],eax
  4073a1:	mov    DWORD PTR [r14],ecx
  4073a4:	xor    r15d,r15d
  4073a7:	xor    esi,esi
  4073a9:	mov    rdi,r13
  4073ac:	mov    r12,rdx
  4073af:	call   40df90 <main@@Base+0xbd0>
  4073b4:	add    r12,0xffffffffffffffff
  4073b8:	add    r14,0xfffffffffffffffc
  4073bc:	mov    eax,DWORD PTR [rsp+0x8]
  4073c0:	add    eax,0xfffffffc
  4073c3:	mov    ecx,eax
  4073c5:	add    ebx,0x4
  4073c8:	mov    rdx,r12
  4073cb:	cmp    r12,0xffffffffffffffff
  4073cf:	jne    40738e <test_sort_find@@Base+0xa5e>
  4073d1:	jmp    406dc3 <test_sort_find@@Base+0x493>
  4073d6:	mov    rbx,rax
  4073d9:	lea    rdi,[rip+0x10ad0]        # 417eb0 <_IO_stdin_used@@Base+0x2eb0>
  4073e0:	jmp    4073ec <test_sort_find@@Base+0xabc>
  4073e2:	mov    rbx,rax
  4073e5:	lea    rdi,[rip+0x10ae4]        # 417ed0 <_IO_stdin_used@@Base+0x2ed0>
  4073ec:	call   404060 <puts@plt>
  4073f1:	lea    rdi,[rip+0xe461]        # 415859 <_IO_stdin_used@@Base+0x859>
  4073f8:	xor    eax,eax
  4073fa:	mov    esi,ebx
  4073fc:	call   404080 <printf@plt>
  407401:	jmp    4072a4 <test_sort_find@@Base+0x974>
  407406:	mov    rbp,QWORD PTR [rsp]
  40740a:	jmp    406dc3 <test_sort_find@@Base+0x493>
  40740f:	lea    rdi,[rip+0xed67]        # 41617d <_IO_stdin_used@@Base+0x117d>
  407416:	lea    rsi,[rip+0xec24]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40741d:	lea    rcx,[rip+0xedfb]        # 41621f <_IO_stdin_used@@Base+0x121f>
  407424:	mov    edx,0xeb
  407429:	call   4040a0 <__assert_fail@plt>
  40742e:	lea    rdi,[rip+0xea31]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  407435:	lea    rsi,[rip+0xea50]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40743c:	lea    rcx,[rip+0xf113]        # 416556 <_IO_stdin_used@@Base+0x1556>
  407443:	mov    edx,0x2c7
  407448:	call   4040a0 <__assert_fail@plt>
  40744d:	lea    rdi,[rip+0xe3c0]        # 415814 <_IO_stdin_used@@Base+0x814>
  407454:	lea    rsi,[rip+0xded9]        # 415334 <_IO_stdin_used@@Base+0x334>
  40745b:	lea    rcx,[rip+0xe3bb]        # 41581d <_IO_stdin_used@@Base+0x81d>
  407462:	mov    edx,0x47b
  407467:	call   4040a0 <__assert_fail@plt>
  40746c:	lea    rdi,[rip+0xef6e]        # 4163e1 <_IO_stdin_used@@Base+0x13e1>
  407473:	lea    rsi,[rip+0xea12]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40747a:	lea    rcx,[rip+0xef0f]        # 416390 <_IO_stdin_used@@Base+0x1390>
  407481:	mov    edx,0x2bb
  407486:	call   4040a0 <__assert_fail@plt>
  40748b:	lea    rdi,[rip+0xefc9]        # 41645b <_IO_stdin_used@@Base+0x145b>
  407492:	lea    rsi,[rip+0xe9f3]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  407499:	lea    rcx,[rip+0xf11c]        # 4165bc <_IO_stdin_used@@Base+0x15bc>
  4074a0:	mov    edx,0x2b5
  4074a5:	call   4040a0 <__assert_fail@plt>
  4074aa:	lea    rdi,[rip+0xe9b5]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  4074b1:	jmp    407473 <test_sort_find@@Base+0xb43>
  4074b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074bd:	nop    DWORD PTR [rax]
  4074c0:	push   rbp
  4074c1:	push   r15
  4074c3:	push   r14
  4074c5:	push   r13
  4074c7:	push   r12
  4074c9:	push   rbx
  4074ca:	push   rax
  4074cb:	mov    r13,0xffffffffffffffff
  4074d2:	test   rdi,rdi
  4074d5:	je     4075e4 <test_sort_find@@Base+0xcb4>
  4074db:	mov    r15,rdi
  4074de:	mov    r12d,DWORD PTR [rdi-0x4]
  4074e2:	test   r12,r12
  4074e5:	je     4075e4 <test_sort_find@@Base+0xcb4>
  4074eb:	mov    r14,rsi
  4074ee:	mov    rbx,r12
  4074f1:	xor    r13d,r13d
  4074f4:	add    rbx,0xffffffffffffffff
  4074f8:	je     407592 <test_sort_find@@Base+0xc62>
  4074fe:	xchg   ax,ax
  407500:	mov    rbp,rbx
  407503:	sub    rbp,r13
  407506:	shr    rbp,1
  407509:	add    rbp,r13
  40750c:	cmp    rbp,r12
  40750f:	jae    4075ff <test_sort_find@@Base+0xccf>
  407515:	lea    rcx,[r15+rbp*4]
  407519:	mov    eax,DWORD PTR [r15+rbp*4]
  40751d:	add    rax,rcx
  407520:	je     40761e <test_sort_find@@Base+0xcee>
  407526:	movsxd rcx,DWORD PTR [rax]
  407529:	mov    rdx,rax
  40752c:	sub    rdx,rcx
  40752f:	movzx  edx,WORD PTR [rdx]
  407532:	cmp    edx,0xc
  407535:	jb     4075f6 <test_sort_find@@Base+0xcc6>
  40753b:	neg    rcx
  40753e:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  407543:	test   rcx,rcx
  407546:	je     4075f6 <test_sort_find@@Base+0xcc6>
  40754c:	lea    rdx,[rax+rcx*1]
  407550:	mov    eax,DWORD PTR [rax+rcx*1]
  407553:	lea    rdi,[rax+rdx*1]
  407557:	add    rdi,0x4
  40755b:	mov    rsi,r14
  40755e:	call   4040f0 <strcmp@plt>
  407563:	test   eax,eax
  407565:	js     407580 <test_sort_find@@Base+0xc50>
  407567:	mov    rbx,rbp
  40756a:	cmp    rbx,r13
  40756d:	ja     407500 <test_sort_find@@Base+0xbd0>
  40756f:	jmp    407590 <test_sort_find@@Base+0xc60>
  407571:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40757b:	nop    DWORD PTR [rax+rax*1+0x0]
  407580:	add    rbp,0x1
  407584:	mov    r13,rbp
  407587:	cmp    rbx,r13
  40758a:	ja     407500 <test_sort_find@@Base+0xbd0>
  407590:	jne    4075dd <test_sort_find@@Base+0xcad>
  407592:	cmp    r13,r12
  407595:	jae    4075ff <test_sort_find@@Base+0xccf>
  407597:	lea    rcx,[r15+r13*4]
  40759b:	mov    eax,DWORD PTR [r15+r13*4]
  40759f:	add    rax,rcx
  4075a2:	je     40761e <test_sort_find@@Base+0xcee>
  4075a4:	movsxd rcx,DWORD PTR [rax]
  4075a7:	mov    rdx,rax
  4075aa:	sub    rdx,rcx
  4075ad:	movzx  edx,WORD PTR [rdx]
  4075b0:	cmp    edx,0xc
  4075b3:	jb     4075f6 <test_sort_find@@Base+0xcc6>
  4075b5:	neg    rcx
  4075b8:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  4075bd:	test   rcx,rcx
  4075c0:	je     4075f6 <test_sort_find@@Base+0xcc6>
  4075c2:	lea    rdx,[rax+rcx*1]
  4075c6:	mov    eax,DWORD PTR [rax+rcx*1]
  4075c9:	lea    rdi,[rax+rdx*1]
  4075cd:	add    rdi,0x4
  4075d1:	mov    rsi,r14
  4075d4:	call   4040f0 <strcmp@plt>
  4075d9:	test   eax,eax
  4075db:	je     4075e4 <test_sort_find@@Base+0xcb4>
  4075dd:	mov    r13,0xffffffffffffffff
  4075e4:	mov    rax,r13
  4075e7:	add    rsp,0x8
  4075eb:	pop    rbx
  4075ec:	pop    r12
  4075ee:	pop    r13
  4075f0:	pop    r14
  4075f2:	pop    r15
  4075f4:	pop    rbp
  4075f5:	ret    
  4075f6:	lea    rdi,[rip+0xede4]        # 4163e1 <_IO_stdin_used@@Base+0x13e1>
  4075fd:	jmp    407625 <test_sort_find@@Base+0xcf5>
  4075ff:	lea    rdi,[rip+0xee55]        # 41645b <_IO_stdin_used@@Base+0x145b>
  407606:	lea    rsi,[rip+0xe87f]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40760d:	lea    rcx,[rip+0xefa8]        # 4165bc <_IO_stdin_used@@Base+0x15bc>
  407614:	mov    edx,0x2b5
  407619:	call   4040a0 <__assert_fail@plt>
  40761e:	lea    rdi,[rip+0xe841]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  407625:	lea    rsi,[rip+0xe860]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40762c:	lea    rcx,[rip+0xed5d]        # 416390 <_IO_stdin_used@@Base+0x1390>
  407633:	mov    edx,0x2bb
  407638:	call   4040a0 <__assert_fail@plt>
  40763d:	nop    DWORD PTR [rax]

0000000000407640 <test_scan@@Base>:
  407640:	push   rbp
  407641:	push   r15
  407643:	push   r14
  407645:	push   r13
  407647:	push   r12
  407649:	push   rbx
  40764a:	sub    rsp,0xb8
  407651:	mov    rbx,rdi
  407654:	mov    BYTE PTR [rsp+0x86],0x2
  40765c:	mov    WORD PTR [rsp+0x84],0x304
  407666:	mov    DWORD PTR [rsp+0x80],0x3010706
  407671:	call   40e610 <flatcc_builder_reset@@Base>
  407676:	lea    rsi,[rip+0xdacb]        # 415148 <_IO_stdin_used@@Base+0x148>
  40767d:	xor    edx,edx
  40767f:	xor    ecx,ecx
  407681:	mov    rdi,rbx
  407684:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  407689:	test   eax,eax
  40768b:	jne    40769a <test_scan@@Base+0x5a>
  40768d:	mov    esi,0x24
  407692:	mov    rdi,rbx
  407695:	call   410480 <flatcc_builder_start_table@@Base>
  40769a:	lea    rsi,[rip+0xdaeb]        # 41518c <_IO_stdin_used@@Base+0x18c>
  4076a1:	mov    rdi,rbx
  4076a4:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  4076a9:	test   eax,eax
  4076ab:	je     4076c3 <test_scan@@Base+0x83>
  4076ad:	mov    ebp,eax
  4076af:	mov    esi,0x3
  4076b4:	mov    rdi,rbx
  4076b7:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4076bc:	test   rax,rax
  4076bf:	je     4076c3 <test_scan@@Base+0x83>
  4076c1:	mov    DWORD PTR [rax],ebp
  4076c3:	lea    rsi,[rsp+0x80]
  4076cb:	mov    edx,0x7
  4076d0:	mov    ecx,0x1
  4076d5:	mov    r8d,0x1
  4076db:	mov    r9d,0xffffffff
  4076e1:	mov    rdi,rbx
  4076e4:	call   411020 <flatcc_builder_create_vector@@Base>
  4076e9:	test   eax,eax
  4076eb:	je     407703 <test_scan@@Base+0xc3>
  4076ed:	mov    ebp,eax
  4076ef:	mov    esi,0x5
  4076f4:	mov    rdi,rbx
  4076f7:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4076fc:	test   rax,rax
  4076ff:	je     407703 <test_scan@@Base+0xc3>
  407701:	mov    DWORD PTR [rax],ebp
  407703:	mov    rdi,rbx
  407706:	call   410090 <flatcc_builder_start_offset_vector@@Base>
  40770b:	mov    rdi,rbx
  40770e:	call   410250 <flatcc_builder_end_offset_vector@@Base>
  407713:	test   eax,eax
  407715:	je     40772d <test_scan@@Base+0xed>
  407717:	mov    ebp,eax
  407719:	mov    esi,0xa
  40771e:	mov    rdi,rbx
  407721:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  407726:	test   rax,rax
  407729:	je     40772d <test_scan@@Base+0xed>
  40772b:	mov    DWORD PTR [rax],ebp
  40772d:	mov    rdi,rbx
  407730:	call   410090 <flatcc_builder_start_offset_vector@@Base>
  407735:	mov    esi,0x24
  40773a:	mov    rdi,rbx
  40773d:	call   410480 <flatcc_builder_start_table@@Base>
  407742:	lea    rsi,[rip+0xdc66]        # 4153af <_IO_stdin_used@@Base+0x3af>
  407749:	mov    rdi,rbx
  40774c:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  407751:	test   eax,eax
  407753:	je     40776b <test_scan@@Base+0x12b>
  407755:	mov    ebp,eax
  407757:	mov    esi,0x3
  40775c:	mov    rdi,rbx
  40775f:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  407764:	test   rax,rax
  407767:	je     40776b <test_scan@@Base+0x12b>
  407769:	mov    DWORD PTR [rax],ebp
  40776b:	lea    rsi,[rip+0xd9c6]        # 415138 <_IO_stdin_used@@Base+0x138>
  407772:	mov    edx,0x1
  407777:	mov    rdi,rbx
  40777a:	call   410e20 <flatcc_builder_check_required@@Base>
  40777f:	test   eax,eax
  407781:	je     408567 <test_scan@@Base+0xf27>
  407787:	mov    rdi,rbx
  40778a:	call   410e90 <flatcc_builder_end_table@@Base>
  40778f:	test   eax,eax
  407791:	je     40779d <test_scan@@Base+0x15d>
  407793:	mov    rdi,rbx
  407796:	mov    esi,eax
  407798:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  40779d:	mov    esi,0x24
  4077a2:	mov    rdi,rbx
  4077a5:	call   410480 <flatcc_builder_start_table@@Base>
  4077aa:	lea    rsi,[rip+0xdc28]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  4077b1:	mov    rdi,rbx
  4077b4:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  4077b9:	test   eax,eax
  4077bb:	je     4077d3 <test_scan@@Base+0x193>
  4077bd:	mov    ebp,eax
  4077bf:	mov    esi,0x3
  4077c4:	mov    rdi,rbx
  4077c7:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4077cc:	test   rax,rax
  4077cf:	je     4077d3 <test_scan@@Base+0x193>
  4077d1:	mov    DWORD PTR [rax],ebp
  4077d3:	lea    rsi,[rip+0xd95e]        # 415138 <_IO_stdin_used@@Base+0x138>
  4077da:	mov    edx,0x1
  4077df:	mov    rdi,rbx
  4077e2:	call   410e20 <flatcc_builder_check_required@@Base>
  4077e7:	test   eax,eax
  4077e9:	je     408567 <test_scan@@Base+0xf27>
  4077ef:	mov    rdi,rbx
  4077f2:	call   410e90 <flatcc_builder_end_table@@Base>
  4077f7:	test   eax,eax
  4077f9:	je     407805 <test_scan@@Base+0x1c5>
  4077fb:	mov    rdi,rbx
  4077fe:	mov    esi,eax
  407800:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  407805:	mov    esi,0x24
  40780a:	mov    rdi,rbx
  40780d:	call   410480 <flatcc_builder_start_table@@Base>
  407812:	lea    rsi,[rip+0xdbe8]        # 415401 <_IO_stdin_used@@Base+0x401>
  407819:	mov    rdi,rbx
  40781c:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  407821:	test   eax,eax
  407823:	je     40783b <test_scan@@Base+0x1fb>
  407825:	mov    ebp,eax
  407827:	mov    esi,0x3
  40782c:	mov    rdi,rbx
  40782f:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  407834:	test   rax,rax
  407837:	je     40783b <test_scan@@Base+0x1fb>
  407839:	mov    DWORD PTR [rax],ebp
  40783b:	lea    rsi,[rip+0xd8f6]        # 415138 <_IO_stdin_used@@Base+0x138>
  407842:	mov    edx,0x1
  407847:	mov    rdi,rbx
  40784a:	call   410e20 <flatcc_builder_check_required@@Base>
  40784f:	test   eax,eax
  407851:	je     408567 <test_scan@@Base+0xf27>
  407857:	mov    rdi,rbx
  40785a:	call   410e90 <flatcc_builder_end_table@@Base>
  40785f:	test   eax,eax
  407861:	je     40786d <test_scan@@Base+0x22d>
  407863:	mov    rdi,rbx
  407866:	mov    esi,eax
  407868:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  40786d:	mov    esi,0x24
  407872:	mov    rdi,rbx
  407875:	call   410480 <flatcc_builder_start_table@@Base>
  40787a:	lea    rsi,[rip+0xdf75]        # 4157f6 <_IO_stdin_used@@Base+0x7f6>
  407881:	mov    rdi,rbx
  407884:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  407889:	test   eax,eax
  40788b:	je     4078a3 <test_scan@@Base+0x263>
  40788d:	mov    ebp,eax
  40788f:	mov    esi,0x3
  407894:	mov    rdi,rbx
  407897:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40789c:	test   rax,rax
  40789f:	je     4078a3 <test_scan@@Base+0x263>
  4078a1:	mov    DWORD PTR [rax],ebp
  4078a3:	lea    rsi,[rip+0xd88e]        # 415138 <_IO_stdin_used@@Base+0x138>
  4078aa:	mov    edx,0x1
  4078af:	mov    rdi,rbx
  4078b2:	call   410e20 <flatcc_builder_check_required@@Base>
  4078b7:	test   eax,eax
  4078b9:	je     408567 <test_scan@@Base+0xf27>
  4078bf:	mov    rdi,rbx
  4078c2:	call   410e90 <flatcc_builder_end_table@@Base>
  4078c7:	test   eax,eax
  4078c9:	je     4078d5 <test_scan@@Base+0x295>
  4078cb:	mov    rdi,rbx
  4078ce:	mov    esi,eax
  4078d0:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  4078d5:	mov    esi,0x24
  4078da:	mov    rdi,rbx
  4078dd:	call   410480 <flatcc_builder_start_table@@Base>
  4078e2:	lea    rsi,[rip+0xdb18]        # 415401 <_IO_stdin_used@@Base+0x401>
  4078e9:	mov    rdi,rbx
  4078ec:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  4078f1:	test   eax,eax
  4078f3:	je     40790b <test_scan@@Base+0x2cb>
  4078f5:	mov    ebp,eax
  4078f7:	mov    esi,0x3
  4078fc:	mov    rdi,rbx
  4078ff:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  407904:	test   rax,rax
  407907:	je     40790b <test_scan@@Base+0x2cb>
  407909:	mov    DWORD PTR [rax],ebp
  40790b:	lea    rsi,[rip+0xd826]        # 415138 <_IO_stdin_used@@Base+0x138>
  407912:	mov    edx,0x1
  407917:	mov    rdi,rbx
  40791a:	call   410e20 <flatcc_builder_check_required@@Base>
  40791f:	test   eax,eax
  407921:	je     408567 <test_scan@@Base+0xf27>
  407927:	mov    rdi,rbx
  40792a:	call   410e90 <flatcc_builder_end_table@@Base>
  40792f:	test   eax,eax
  407931:	je     40793d <test_scan@@Base+0x2fd>
  407933:	mov    rdi,rbx
  407936:	mov    esi,eax
  407938:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  40793d:	mov    rdi,rbx
  407940:	call   410250 <flatcc_builder_end_offset_vector@@Base>
  407945:	test   eax,eax
  407947:	je     40795f <test_scan@@Base+0x31f>
  407949:	mov    ebp,eax
  40794b:	mov    esi,0xb
  407950:	mov    rdi,rbx
  407953:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  407958:	test   rax,rax
  40795b:	je     40795f <test_scan@@Base+0x31f>
  40795d:	mov    DWORD PTR [rax],ebp
  40795f:	lea    rsi,[rip+0xd7d2]        # 415138 <_IO_stdin_used@@Base+0x138>
  407966:	mov    edx,0x1
  40796b:	mov    rdi,rbx
  40796e:	call   410e20 <flatcc_builder_check_required@@Base>
  407973:	test   eax,eax
  407975:	je     408567 <test_scan@@Base+0xf27>
  40797b:	mov    rdi,rbx
  40797e:	call   410e90 <flatcc_builder_end_table@@Base>
  407983:	mov    rdi,rbx
  407986:	mov    esi,eax
  407988:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40798d:	lea    rsi,[rsp+0xb0]
  407995:	mov    rdi,rbx
  407998:	call   412b90 <flatcc_builder_finalize_aligned_buffer@@Base>
  40799d:	test   rax,rax
  4079a0:	je     408632 <test_scan@@Base+0xff2>
  4079a6:	mov    r14,rax
  4079a9:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  4079b0:	jne    408632 <test_scan@@Base+0xff2>
  4079b6:	mov    ecx,DWORD PTR [r14]
  4079b9:	lea    rax,[r14+rcx*1]
  4079bd:	mov    QWORD PTR [rsp+0x18],rcx
  4079c2:	movsxd rcx,DWORD PTR [r14+rcx*1]
  4079c6:	mov    rdx,rax
  4079c9:	sub    rdx,rcx
  4079cc:	movzx  edx,WORD PTR [rdx]
  4079cf:	cmp    edx,0x1b
  4079d2:	jbe    408651 <test_scan@@Base+0x1011>
  4079d8:	neg    rcx
  4079db:	movzx  esi,WORD PTR [rax+rcx*1+0x1a]
  4079e0:	test   rsi,rsi
  4079e3:	je     408651 <test_scan@@Base+0x1011>
  4079e9:	movzx  edx,WORD PTR [rax+rcx*1+0xe]
  4079ee:	mov    QWORD PTR [rsp+0x90],rdx
  4079f6:	test   rdx,rdx
  4079f9:	je     408885 <test_scan@@Base+0x1245>
  4079ff:	movzx  edx,WORD PTR [rax+rcx*1+0x18]
  407a04:	mov    rcx,rdx
  407a07:	mov    QWORD PTR [rsp+0x98],rdx
  407a0f:	test   rdx,rdx
  407a12:	je     4088a4 <test_scan@@Base+0x1264>
  407a18:	lea    rcx,[rax+rsi*1]
  407a1c:	mov    QWORD PTR [rsp+0x48],rsi
  407a21:	mov    edx,DWORD PTR [rax+rsi*1]
  407a24:	mov    QWORD PTR [rsp+0x58],rdx
  407a29:	add    rcx,rdx
  407a2c:	add    rcx,0x4
  407a30:	mov    QWORD PTR [rsp+0x78],rcx
  407a35:	mov    edx,DWORD PTR [rcx-0x4]
  407a38:	test   rdx,rdx
  407a3b:	je     407c74 <test_scan@@Base+0x634>
  407a41:	mov    rsi,QWORD PTR [rsp+0x90]
  407a49:	lea    rcx,[rax+rsi*1]
  407a4d:	mov    edi,DWORD PTR [rax+rsi*1]
  407a50:	mov    rsi,rdi
  407a53:	mov    QWORD PTR [rsp+0xa0],rdi
  407a5b:	lea    rcx,[rdi+rcx*1+0x4]
  407a60:	mov    QWORD PTR [rsp+0x70],rcx
  407a65:	mov    rcx,QWORD PTR [rsp+0x98]
  407a6d:	mov    esi,DWORD PTR [rax+rcx*1]
  407a70:	add    rax,rcx
  407a73:	mov    QWORD PTR [rsp+0xa8],rsi
  407a7b:	add    rax,rsi
  407a7e:	add    rax,0x4
  407a82:	mov    QWORD PTR [rsp+0x50],rax
  407a87:	mov    rax,QWORD PTR [rsp+0x78]
  407a8c:	lea    rax,[rax-0x4]
  407a90:	mov    QWORD PTR [rsp+0x10],rax
  407a95:	mov    rcx,QWORD PTR [rsp+0x18]
  407a9a:	mov    rdi,QWORD PTR [rsp+0x58]
  407a9f:	lea    rbp,[rcx+rdi*1]
  407aa3:	mov    rsi,QWORD PTR [rsp+0x48]
  407aa8:	mov    rax,rbp
  407aab:	mov    QWORD PTR [rsp+0x88],rbp
  407ab3:	lea    rax,[rbp+rsi*1+0x0]
  407ab8:	mov    QWORD PTR [rsp+0x40],rax
  407abd:	lea    r15,[r14+rax*1]
  407ac1:	lea    rax,[rsi+rcx*1]
  407ac5:	add    rax,rdi
  407ac8:	lea    r12,[r14+rax*1]
  407acc:	add    r12,0x4
  407ad0:	xor    ebx,ebx
  407ad2:	lea    r13,[rip+0xd900]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  407ad9:	xor    ebp,ebp
  407adb:	mov    QWORD PTR [rsp],rdx
  407adf:	nop
  407ae0:	cmp    rbp,rdx
  407ae3:	jae    409bc3 <test_scan@@Base+0x2583>
  407ae9:	mov    rax,QWORD PTR [rsp+0x10]
  407aee:	mov    eax,DWORD PTR [rax+rbx*1+0x4]
  407af2:	lea    rcx,[rbx+rax*1]
  407af6:	add    rcx,r12
  407af9:	je     409353 <test_scan@@Base+0x1d13>
  407aff:	lea    rcx,[r15+rax*1]
  407b03:	movsxd rdx,DWORD PTR [rbx+rcx*1+0x4]
  407b08:	mov    rcx,rax
  407b0b:	sub    rcx,rdx
  407b0e:	add    rcx,r15
  407b11:	movzx  edx,WORD PTR [rbx+rcx*1+0x4]
  407b16:	cmp    edx,0xc
  407b19:	jb     40934a <test_scan@@Base+0x1d0a>
  407b1f:	movzx  ecx,WORD PTR [rbx+rcx*1+0xe]
  407b24:	test   rcx,rcx
  407b27:	je     40934a <test_scan@@Base+0x1d0a>
  407b2d:	add    rax,rcx
  407b30:	lea    rcx,[r15+rax*1]
  407b34:	mov    ecx,DWORD PTR [rbx+rcx*1+0x4]
  407b38:	add    rcx,rax
  407b3b:	add    rcx,rbx
  407b3e:	lea    rdi,[r15+rcx*1]
  407b42:	add    rdi,0x8
  407b46:	mov    rsi,r13
  407b49:	call   4040f0 <strcmp@plt>
  407b4e:	test   eax,eax
  407b50:	je     407b6c <test_scan@@Base+0x52c>
  407b52:	add    rbp,0x1
  407b56:	add    rbx,0x4
  407b5a:	mov    rdx,QWORD PTR [rsp]
  407b5e:	cmp    rbp,rdx
  407b61:	jb     407ae0 <test_scan@@Base+0x4a0>
  407b67:	jmp    407c74 <test_scan@@Base+0x634>
  407b6c:	cmp    rbx,0x4
  407b70:	mov    rax,QWORD PTR [rsp]
  407b74:	jne    407c74 <test_scan@@Base+0x634>
  407b7a:	lea    rcx,[rax*4+0x0]
  407b82:	mov    rsi,QWORD PTR [rsp+0x18]
  407b87:	lea    rdx,[rsi+rax*4]
  407b8b:	mov    rbp,QWORD PTR [rsp+0x58]
  407b90:	add    rdx,rbp
  407b93:	mov    rdi,QWORD PTR [rsp+0x48]
  407b98:	add    rdx,rdi
  407b9b:	add    rdx,r14
  407b9e:	mov    QWORD PTR [rsp+0x38],rdx
  407ba3:	mov    rdx,rdi
  407ba6:	neg    rdx
  407ba9:	sub    rdx,rbp
  407bac:	sub    rdx,rsi
  407baf:	mov    QWORD PTR [rsp+0x68],rcx
  407bb4:	sub    rdx,rcx
  407bb7:	sub    rdx,r14
  407bba:	mov    QWORD PTR [rsp+0x60],rdx
  407bbf:	lea    rbp,[rax-0x1]
  407bc3:	xor    ebx,ebx
  407bc5:	lea    r13,[rip+0xd80d]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  407bcc:	nop    DWORD PTR [rax+0x0]
  407bd0:	mov    rax,QWORD PTR [rsp+0x68]
  407bd5:	add    rax,rbx
  407bd8:	je     407c6b <test_scan@@Base+0x62b>
  407bde:	cmp    rbp,QWORD PTR [rsp]
  407be2:	jae    409bc3 <test_scan@@Base+0x2583>
  407be8:	mov    rsi,QWORD PTR [rsp+0x38]
  407bed:	mov    eax,DWORD PTR [rsi+rbx*1]
  407bf0:	mov    rcx,QWORD PTR [rsp+0x60]
  407bf5:	sub    rcx,rax
  407bf8:	cmp    rcx,rbx
  407bfb:	je     409353 <test_scan@@Base+0x1d13>
  407c01:	lea    rcx,[rsi+rax*1]
  407c05:	movsxd rdx,DWORD PTR [rbx+rcx*1]
  407c09:	mov    rcx,rax
  407c0c:	sub    rcx,rdx
  407c0f:	add    rcx,rsi
  407c12:	movzx  edx,WORD PTR [rbx+rcx*1]
  407c16:	cmp    edx,0xc
  407c19:	jb     40934a <test_scan@@Base+0x1d0a>
  407c1f:	movzx  ecx,WORD PTR [rbx+rcx*1+0xa]
  407c24:	test   rcx,rcx
  407c27:	je     40934a <test_scan@@Base+0x1d0a>
  407c2d:	add    rax,rcx
  407c30:	lea    rcx,[rsi+rax*1]
  407c34:	mov    ecx,DWORD PTR [rbx+rcx*1]
  407c37:	add    rcx,rax
  407c3a:	add    rcx,rbx
  407c3d:	lea    rdi,[rsi+rcx*1]
  407c41:	add    rdi,0x4
  407c45:	mov    rsi,r13
  407c48:	call   4040f0 <strcmp@plt>
  407c4d:	add    rbx,0xfffffffffffffffc
  407c51:	add    rbp,0xffffffffffffffff
  407c55:	test   eax,eax
  407c57:	jne    407bd0 <test_scan@@Base+0x590>
  407c5d:	mov    rax,QWORD PTR [rsp]
  407c61:	lea    rax,[rbx+rax*4]
  407c65:	cmp    rax,0x4
  407c69:	je     407ca1 <test_scan@@Base+0x661>
  407c6b:	lea    rdi,[rip+0x102fe]        # 417f70 <_IO_stdin_used@@Base+0x2f70>
  407c72:	jmp    407c7b <test_scan@@Base+0x63b>
  407c74:	lea    rdi,[rip+0x10315]        # 417f90 <_IO_stdin_used@@Base+0x2f90>
  407c7b:	call   404060 <puts@plt>
  407c80:	mov    ebp,0xffffffff
  407c85:	mov    rdi,r14
  407c88:	call   412cc0 <flatcc_builder_aligned_free@@Base>
  407c8d:	mov    eax,ebp
  407c8f:	add    rsp,0xb8
  407c96:	pop    rbx
  407c97:	pop    r12
  407c99:	pop    r13
  407c9b:	pop    r14
  407c9d:	pop    r15
  407c9f:	pop    rbp
  407ca0:	ret    
  407ca1:	xor    ebp,ebp
  407ca3:	xor    r13d,r13d
  407ca6:	mov    rax,QWORD PTR [rsp]
  407caa:	mov    QWORD PTR [rsp+0x8],r14
  407caf:	nop
  407cb0:	cmp    r13,rax
  407cb3:	jae    409bc3 <test_scan@@Base+0x2583>
  407cb9:	mov    rax,QWORD PTR [rsp+0x10]
  407cbe:	mov    eax,DWORD PTR [rax+rbp*1+0x4]
  407cc2:	lea    rcx,[rax+rbp*1]
  407cc6:	add    rcx,r12
  407cc9:	je     409353 <test_scan@@Base+0x1d13>
  407ccf:	lea    rcx,[r15+rax*1]
  407cd3:	movsxd rdx,DWORD PTR [rbp+rcx*1+0x4]
  407cd8:	mov    rcx,rax
  407cdb:	sub    rcx,rdx
  407cde:	add    rcx,r15
  407ce1:	movzx  edx,WORD PTR [rbp+rcx*1+0x4]
  407ce6:	cmp    edx,0xc
  407ce9:	jb     40934a <test_scan@@Base+0x1d0a>
  407cef:	movzx  ecx,WORD PTR [rbp+rcx*1+0xe]
  407cf4:	test   rcx,rcx
  407cf7:	je     40934a <test_scan@@Base+0x1d0a>
  407cfd:	add    rax,rcx
  407d00:	lea    rcx,[r15+rax*1]
  407d04:	mov    ecx,DWORD PTR [rbp+rcx*1+0x4]
  407d08:	add    rcx,rax
  407d0b:	lea    rax,[rcx+rbp*1]
  407d0f:	lea    rdi,[r15+rax*1]
  407d13:	add    rdi,0x8
  407d17:	add    rcx,r15
  407d1a:	mov    ebx,DWORD PTR [rbp+rcx*1+0x4]
  407d1e:	xor    r14d,r14d
  407d21:	cmp    ebx,0x5
  407d24:	mov    edx,0x5
  407d29:	cmovb  edx,ebx
  407d2c:	seta   r14b
  407d30:	lea    rsi,[rip+0xdb14]        # 41584b <_IO_stdin_used@@Base+0x84b>
  407d37:	call   404050 <strncmp@plt>
  407d3c:	cmp    eax,0x1
  407d3f:	sbb    ecx,ecx
  407d41:	or     ecx,eax
  407d43:	test   eax,eax
  407d45:	cmovne r14d,ecx
  407d49:	cmp    ebx,0x5
  407d4c:	cmovb  r14d,ecx
  407d50:	test   r14d,r14d
  407d53:	je     407d74 <test_scan@@Base+0x734>
  407d55:	add    r13,0x1
  407d59:	add    rbp,0x4
  407d5d:	mov    rax,QWORD PTR [rsp]
  407d61:	cmp    r13,rax
  407d64:	mov    r14,QWORD PTR [rsp+0x8]
  407d69:	jb     407cb0 <test_scan@@Base+0x670>
  407d6f:	jmp    407e69 <test_scan@@Base+0x829>
  407d74:	cmp    rbp,0x4
  407d78:	mov    r14,QWORD PTR [rsp+0x8]
  407d7d:	mov    rax,QWORD PTR [rsp]
  407d81:	jne    407e69 <test_scan@@Base+0x829>
  407d87:	lea    r13,[rax-0x1]
  407d8b:	xor    ebp,ebp
  407d8d:	mov    rax,QWORD PTR [rsp+0x68]
  407d92:	add    rax,rbp
  407d95:	je     407e69 <test_scan@@Base+0x829>
  407d9b:	cmp    r13,QWORD PTR [rsp]
  407d9f:	jae    409bc3 <test_scan@@Base+0x2583>
  407da5:	mov    rsi,QWORD PTR [rsp+0x38]
  407daa:	mov    eax,DWORD PTR [rsi+rbp*1]
  407dad:	mov    rcx,QWORD PTR [rsp+0x60]
  407db2:	sub    rcx,rax
  407db5:	cmp    rcx,rbp
  407db8:	je     409353 <test_scan@@Base+0x1d13>
  407dbe:	lea    rcx,[rsi+rax*1]
  407dc2:	movsxd rdx,DWORD PTR [rbp+rcx*1+0x0]
  407dc7:	mov    rcx,rax
  407dca:	sub    rcx,rdx
  407dcd:	add    rcx,rsi
  407dd0:	movzx  edx,WORD PTR [rbp+rcx*1+0x0]
  407dd5:	cmp    edx,0xc
  407dd8:	jb     40934a <test_scan@@Base+0x1d0a>
  407dde:	movzx  ecx,WORD PTR [rbp+rcx*1+0xa]
  407de3:	test   rcx,rcx
  407de6:	je     40934a <test_scan@@Base+0x1d0a>
  407dec:	add    rax,rcx
  407def:	lea    rcx,[rsi+rax*1]
  407df3:	mov    ecx,DWORD PTR [rbp+rcx*1+0x0]
  407df7:	add    rcx,rax
  407dfa:	lea    rax,[rcx+rbp*1]
  407dfe:	lea    rdi,[rsi+rax*1]
  407e02:	add    rdi,0x4
  407e06:	add    rcx,rsi
  407e09:	mov    r14d,DWORD PTR [rbp+rcx*1+0x0]
  407e0e:	xor    ebx,ebx
  407e10:	cmp    r14d,0x5
  407e14:	mov    edx,0x5
  407e19:	cmovb  edx,r14d
  407e1d:	seta   bl
  407e20:	lea    rsi,[rip+0xda24]        # 41584b <_IO_stdin_used@@Base+0x84b>
  407e27:	call   404050 <strncmp@plt>
  407e2c:	cmp    eax,0x1
  407e2f:	sbb    ecx,ecx
  407e31:	or     ecx,eax
  407e33:	test   eax,eax
  407e35:	cmovne ebx,ecx
  407e38:	cmp    r14d,0x5
  407e3c:	cmovb  ebx,ecx
  407e3f:	add    rbp,0xfffffffffffffffc
  407e43:	add    r13,0xffffffffffffffff
  407e47:	test   ebx,ebx
  407e49:	mov    r14,QWORD PTR [rsp+0x8]
  407e4e:	jne    407d8d <test_scan@@Base+0x74d>
  407e54:	mov    rax,QWORD PTR [rsp]
  407e58:	lea    rax,[rax*4+0x0]
  407e60:	add    rax,rbp
  407e63:	cmp    rax,0x4
  407e67:	je     407e75 <test_scan@@Base+0x835>
  407e69:	lea    rdi,[rip+0x100d0]        # 417f40 <_IO_stdin_used@@Base+0x2f40>
  407e70:	jmp    407c7b <test_scan@@Base+0x63b>
  407e75:	mov    rax,QWORD PTR [rsp]
  407e79:	cmp    eax,0x3
  407e7c:	jb     407f07 <test_scan@@Base+0x8c7>
  407e82:	mov    ebx,0x2
  407e87:	lea    r13,[rip+0xd54b]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  407e8e:	mov    rbp,QWORD PTR [rsp+0x10]
  407e93:	cmp    rbx,rax
  407e96:	jae    409bc3 <test_scan@@Base+0x2583>
  407e9c:	mov    eax,DWORD PTR [rbp+0xc]
  407e9f:	lea    rcx,[rax+rbp*1]
  407ea3:	cmp    rcx,0xfffffffffffffff4
  407ea7:	je     409353 <test_scan@@Base+0x1d13>
  407ead:	movsxd rdx,DWORD PTR [rbp+rax*1+0xc]
  407eb2:	mov    rcx,rax
  407eb5:	sub    rcx,rdx
  407eb8:	movzx  edx,WORD PTR [rbp+rcx*1+0xc]
  407ebd:	cmp    edx,0xc
  407ec0:	jb     40934a <test_scan@@Base+0x1d0a>
  407ec6:	movzx  ecx,WORD PTR [rbp+rcx*1+0x16]
  407ecb:	test   rcx,rcx
  407ece:	je     40934a <test_scan@@Base+0x1d0a>
  407ed4:	add    rax,rcx
  407ed7:	mov    ecx,DWORD PTR [rbp+rax*1+0xc]
  407edb:	add    rcx,rax
  407ede:	lea    rdi,[rcx+rbp*1]
  407ee2:	add    rdi,0x10
  407ee6:	mov    rsi,r13
  407ee9:	call   4040f0 <strcmp@plt>
  407eee:	test   eax,eax
  407ef0:	je     408029 <test_scan@@Base+0x9e9>
  407ef6:	add    rbx,0x1
  407efa:	add    rbp,0x4
  407efe:	mov    rax,QWORD PTR [rsp]
  407f02:	cmp    rbx,rax
  407f05:	jb     407e93 <test_scan@@Base+0x853>
  407f07:	xor    ebx,ebx
  407f09:	lea    r13,[rip+0xd942]        # 415852 <_IO_stdin_used@@Base+0x852>
  407f10:	mov    rbp,QWORD PTR [rsp+0x10]
  407f15:	cmp    rbx,rax
  407f18:	jae    409bc3 <test_scan@@Base+0x2583>
  407f1e:	mov    eax,DWORD PTR [rbp+0x4]
  407f21:	lea    rcx,[rax+rbp*1]
  407f25:	cmp    rcx,0xfffffffffffffffc
  407f29:	je     409353 <test_scan@@Base+0x1d13>
  407f2f:	movsxd rdx,DWORD PTR [rbp+rax*1+0x4]
  407f34:	mov    rcx,rax
  407f37:	sub    rcx,rdx
  407f3a:	movzx  edx,WORD PTR [rbp+rcx*1+0x4]
  407f3f:	cmp    edx,0xc
  407f42:	jb     40934a <test_scan@@Base+0x1d0a>
  407f48:	movzx  ecx,WORD PTR [rbp+rcx*1+0xe]
  407f4d:	test   rcx,rcx
  407f50:	je     40934a <test_scan@@Base+0x1d0a>
  407f56:	add    rax,rcx
  407f59:	mov    ecx,DWORD PTR [rbp+rax*1+0x4]
  407f5d:	add    rcx,rax
  407f60:	lea    rdi,[rcx+rbp*1]
  407f64:	add    rdi,0x8
  407f68:	mov    rsi,r13
  407f6b:	call   4040f0 <strcmp@plt>
  407f70:	test   eax,eax
  407f72:	je     40801d <test_scan@@Base+0x9dd>
  407f78:	add    rbx,0x1
  407f7c:	add    rbp,0x4
  407f80:	mov    rax,QWORD PTR [rsp]
  407f84:	cmp    rbx,rax
  407f87:	jb     407f15 <test_scan@@Base+0x8d5>
  407f89:	xor    ebx,ebx
  407f8b:	lea    r13,[rip+0xd41d]        # 4153af <_IO_stdin_used@@Base+0x3af>
  407f92:	xor    ebp,ebp
  407f94:	cmp    rbp,rax
  407f97:	jae    409bc3 <test_scan@@Base+0x2583>
  407f9d:	mov    rax,QWORD PTR [rsp+0x10]
  407fa2:	mov    eax,DWORD PTR [rax+rbx*1+0x4]
  407fa6:	lea    rcx,[rbx+rax*1]
  407faa:	add    rcx,r12
  407fad:	je     409353 <test_scan@@Base+0x1d13>
  407fb3:	lea    rcx,[r15+rax*1]
  407fb7:	movsxd rdx,DWORD PTR [rbx+rcx*1+0x4]
  407fbc:	mov    rcx,rax
  407fbf:	sub    rcx,rdx
  407fc2:	add    rcx,r15
  407fc5:	movzx  edx,WORD PTR [rbx+rcx*1+0x4]
  407fca:	cmp    edx,0xc
  407fcd:	jb     40934a <test_scan@@Base+0x1d0a>
  407fd3:	movzx  ecx,WORD PTR [rbx+rcx*1+0xe]
  407fd8:	test   rcx,rcx
  407fdb:	je     40934a <test_scan@@Base+0x1d0a>
  407fe1:	add    rax,rcx
  407fe4:	lea    rcx,[r15+rax*1]
  407fe8:	mov    ecx,DWORD PTR [rbx+rcx*1+0x4]
  407fec:	add    rcx,rax
  407fef:	add    rcx,rbx
  407ff2:	lea    rdi,[r15+rcx*1]
  407ff6:	add    rdi,0x8
  407ffa:	mov    rsi,r13
  407ffd:	call   4040f0 <strcmp@plt>
  408002:	test   eax,eax
  408004:	je     408035 <test_scan@@Base+0x9f5>
  408006:	add    rbp,0x1
  40800a:	add    rbx,0x4
  40800e:	mov    rax,QWORD PTR [rsp]
  408012:	cmp    rbp,rax
  408015:	jb     407f94 <test_scan@@Base+0x954>
  40801b:	jmp    40803e <test_scan@@Base+0x9fe>
  40801d:	lea    rdi,[rip+0xfecc]        # 417ef0 <_IO_stdin_used@@Base+0x2ef0>
  408024:	jmp    407c7b <test_scan@@Base+0x63b>
  408029:	lea    rdi,[rip+0xfee0]        # 417f10 <_IO_stdin_used@@Base+0x2f10>
  408030:	jmp    407c7b <test_scan@@Base+0x63b>
  408035:	test   rbx,rbx
  408038:	mov    rax,QWORD PTR [rsp]
  40803c:	je     40804a <test_scan@@Base+0xa0a>
  40803e:	lea    rdi,[rip+0xfe8b]        # 417ed0 <_IO_stdin_used@@Base+0x2ed0>
  408045:	jmp    407c7b <test_scan@@Base+0x63b>
  40804a:	xor    ebx,ebx
  40804c:	lea    r13,[rip+0xd3ae]        # 415401 <_IO_stdin_used@@Base+0x401>
  408053:	xor    ebp,ebp
  408055:	cmp    rbp,rax
  408058:	jae    409bc3 <test_scan@@Base+0x2583>
  40805e:	mov    rax,QWORD PTR [rsp+0x10]
  408063:	mov    eax,DWORD PTR [rax+rbx*1+0x4]
  408067:	lea    rcx,[rbx+rax*1]
  40806b:	add    rcx,r12
  40806e:	je     409353 <test_scan@@Base+0x1d13>
  408074:	lea    rcx,[r15+rax*1]
  408078:	movsxd rdx,DWORD PTR [rbx+rcx*1+0x4]
  40807d:	mov    rcx,rax
  408080:	sub    rcx,rdx
  408083:	add    rcx,r15
  408086:	movzx  edx,WORD PTR [rbx+rcx*1+0x4]
  40808b:	cmp    edx,0xc
  40808e:	jb     40934a <test_scan@@Base+0x1d0a>
  408094:	movzx  ecx,WORD PTR [rbx+rcx*1+0xe]
  408099:	test   rcx,rcx
  40809c:	je     40934a <test_scan@@Base+0x1d0a>
  4080a2:	add    rax,rcx
  4080a5:	lea    rcx,[r15+rax*1]
  4080a9:	mov    ecx,DWORD PTR [rbx+rcx*1+0x4]
  4080ad:	add    rcx,rax
  4080b0:	add    rcx,rbx
  4080b3:	lea    rdi,[r15+rcx*1]
  4080b7:	add    rdi,0x8
  4080bb:	mov    rsi,r13
  4080be:	call   4040f0 <strcmp@plt>
  4080c3:	test   eax,eax
  4080c5:	je     4080e1 <test_scan@@Base+0xaa1>
  4080c7:	add    rbp,0x1
  4080cb:	add    rbx,0x4
  4080cf:	mov    rax,QWORD PTR [rsp]
  4080d3:	cmp    rbp,rax
  4080d6:	jb     408055 <test_scan@@Base+0xa15>
  4080dc:	jmp    4081b2 <test_scan@@Base+0xb72>
  4080e1:	cmp    rbx,0x8
  4080e5:	mov    rax,QWORD PTR [rsp]
  4080e9:	jne    4081b2 <test_scan@@Base+0xb72>
  4080ef:	lea    rbp,[rax-0x1]
  4080f3:	xor    ebx,ebx
  4080f5:	lea    r12,[rip+0xd305]        # 415401 <_IO_stdin_used@@Base+0x401>
  4080fc:	mov    rax,QWORD PTR [rsp+0x68]
  408101:	add    rax,rbx
  408104:	je     408197 <test_scan@@Base+0xb57>
  40810a:	cmp    rbp,QWORD PTR [rsp]
  40810e:	mov    rsi,QWORD PTR [rsp+0x38]
  408113:	jae    409bc3 <test_scan@@Base+0x2583>
  408119:	mov    eax,DWORD PTR [rsi+rbx*1]
  40811c:	mov    rcx,QWORD PTR [rsp+0x60]
  408121:	sub    rcx,rax
  408124:	cmp    rcx,rbx
  408127:	je     409353 <test_scan@@Base+0x1d13>
  40812d:	lea    rcx,[rsi+rax*1]
  408131:	movsxd rdx,DWORD PTR [rbx+rcx*1]
  408135:	mov    rcx,rax
  408138:	sub    rcx,rdx
  40813b:	add    rcx,rsi
  40813e:	movzx  edx,WORD PTR [rbx+rcx*1]
  408142:	cmp    edx,0xc
  408145:	jb     40934a <test_scan@@Base+0x1d0a>
  40814b:	movzx  ecx,WORD PTR [rbx+rcx*1+0xa]
  408150:	test   rcx,rcx
  408153:	je     40934a <test_scan@@Base+0x1d0a>
  408159:	add    rax,rcx
  40815c:	lea    rcx,[rsi+rax*1]
  408160:	mov    ecx,DWORD PTR [rbx+rcx*1]
  408163:	add    rcx,rax
  408166:	add    rcx,rbx
  408169:	lea    rdi,[rsi+rcx*1]
  40816d:	add    rdi,0x4
  408171:	mov    rsi,r12
  408174:	call   4040f0 <strcmp@plt>
  408179:	add    rbx,0xfffffffffffffffc
  40817d:	add    rbp,0xffffffffffffffff
  408181:	test   eax,eax
  408183:	jne    4080fc <test_scan@@Base+0xabc>
  408189:	mov    rax,QWORD PTR [rsp]
  40818d:	lea    rax,[rbx+rax*4]
  408191:	cmp    rax,0x10
  408195:	je     4081be <test_scan@@Base+0xb7e>
  408197:	lea    rdi,[rip+0xfd12]        # 417eb0 <_IO_stdin_used@@Base+0x2eb0>
  40819e:	call   404060 <puts@plt>
  4081a3:	mov    ebp,0xffffffff
  4081a8:	mov    r14,QWORD PTR [rsp+0x8]
  4081ad:	jmp    407c85 <test_scan@@Base+0x645>
  4081b2:	lea    rdi,[rip+0xfcf7]        # 417eb0 <_IO_stdin_used@@Base+0x2eb0>
  4081b9:	jmp    407c7b <test_scan@@Base+0x63b>
  4081be:	mov    rax,QWORD PTR [rsp]
  4081c2:	lea    r13,[rax-0x1]
  4081c6:	xor    ebp,ebp
  4081c8:	lea    r12,[rip+0xd6c0]        # 41588f <_IO_stdin_used@@Base+0x88f>
  4081cf:	mov    rax,QWORD PTR [rsp+0x68]
  4081d4:	add    rax,rbp
  4081d7:	je     4083db <test_scan@@Base+0xd9b>
  4081dd:	cmp    r13,QWORD PTR [rsp]
  4081e1:	jae    409bc3 <test_scan@@Base+0x2583>
  4081e7:	mov    rsi,QWORD PTR [rsp+0x38]
  4081ec:	mov    eax,DWORD PTR [rsi+rbp*1]
  4081ef:	mov    rcx,QWORD PTR [rsp+0x60]
  4081f4:	sub    rcx,rax
  4081f7:	cmp    rcx,rbp
  4081fa:	je     409353 <test_scan@@Base+0x1d13>
  408200:	lea    rcx,[rsi+rax*1]
  408204:	movsxd rdx,DWORD PTR [rbp+rcx*1+0x0]
  408209:	mov    rcx,rax
  40820c:	sub    rcx,rdx
  40820f:	add    rcx,rsi
  408212:	movzx  edx,WORD PTR [rbp+rcx*1+0x0]
  408217:	cmp    edx,0xc
  40821a:	jb     40934a <test_scan@@Base+0x1d0a>
  408220:	movzx  ecx,WORD PTR [rbp+rcx*1+0xa]
  408225:	test   rcx,rcx
  408228:	je     40934a <test_scan@@Base+0x1d0a>
  40822e:	add    rax,rcx
  408231:	lea    rcx,[rsi+rax*1]
  408235:	mov    ecx,DWORD PTR [rbp+rcx*1+0x0]
  408239:	add    rcx,rax
  40823c:	lea    rax,[rcx+rbp*1]
  408240:	lea    rdi,[rsi+rax*1]
  408244:	add    rdi,0x4
  408248:	add    rcx,rsi
  40824b:	mov    r14d,DWORD PTR [rbp+rcx*1+0x0]
  408250:	xor    ebx,ebx
  408252:	cmp    r14d,0x8
  408256:	mov    edx,0x8
  40825b:	cmovb  edx,r14d
  40825f:	seta   bl
  408262:	mov    rsi,r12
  408265:	call   404050 <strncmp@plt>
  40826a:	cmp    eax,0x1
  40826d:	sbb    ecx,ecx
  40826f:	or     ecx,eax
  408271:	test   eax,eax
  408273:	cmovne ebx,ecx
  408276:	cmp    r14d,0x8
  40827a:	cmovb  ebx,ecx
  40827d:	add    rbp,0xfffffffffffffffc
  408281:	add    r13,0xffffffffffffffff
  408285:	test   ebx,ebx
  408287:	jne    4081cf <test_scan@@Base+0xb8f>
  40828d:	mov    rax,QWORD PTR [rsp]
  408291:	lea    rax,[rax*4+0x0]
  408299:	add    rax,rbp
  40829c:	cmp    rax,0x10
  4082a0:	jne    4083db <test_scan@@Base+0xd9b>
  4082a6:	mov    rax,QWORD PTR [rsp]
  4082aa:	cmp    eax,0x3
  4082ad:	mov    edi,0x3
  4082b2:	cmovb  edi,eax
  4082b5:	mov    rcx,QWORD PTR [rsp+0x18]
  4082ba:	lea    rbp,[rcx+rdi*4]
  4082be:	mov    rsi,QWORD PTR [rsp+0x58]
  4082c3:	add    rbp,rsi
  4082c6:	mov    rax,QWORD PTR [rsp+0x48]
  4082cb:	mov    rdx,rax
  4082ce:	add    rbp,rax
  4082d1:	mov    rax,QWORD PTR [rsp+0x8]
  4082d6:	add    rbp,rax
  4082d9:	mov    QWORD PTR [rsp+0x20],rbp
  4082de:	mov    QWORD PTR [rsp+0x30],rdi
  4082e3:	lea    r13,[rsi+rdi*4]
  4082e7:	add    r13,rdx
  4082ea:	add    r13,rcx
  4082ed:	add    r13,rax
  4082f0:	neg    r13
  4082f3:	xor    r12d,r12d
  4082f6:	xor    ebp,ebp
  4082f8:	mov    rax,QWORD PTR [rsp+0x30]
  4082fd:	lea    rax,[rax+rbp*1]
  408301:	cmp    rax,0x2
  408305:	jb     4083db <test_scan@@Base+0xd9b>
  40830b:	mov    rax,QWORD PTR [rsp+0x30]
  408310:	add    rax,rbp
  408313:	add    rax,0xffffffffffffffff
  408317:	cmp    rax,QWORD PTR [rsp]
  40831b:	jae    409bc3 <test_scan@@Base+0x2583>
  408321:	mov    rax,QWORD PTR [rsp+0x20]
  408326:	mov    eax,DWORD PTR [rax+rbp*4]
  408329:	cmp    rax,r13
  40832c:	je     409353 <test_scan@@Base+0x1d13>
  408332:	mov    rsi,QWORD PTR [rsp+0x20]
  408337:	lea    rcx,[rsi+rax*1]
  40833b:	movsxd rdx,DWORD PTR [rcx+rbp*4]
  40833f:	mov    rcx,rax
  408342:	sub    rcx,rdx
  408345:	add    rcx,rsi
  408348:	movzx  edx,WORD PTR [rcx+rbp*4]
  40834c:	cmp    edx,0xc
  40834f:	jb     40934a <test_scan@@Base+0x1d0a>
  408355:	movzx  ecx,WORD PTR [rcx+rbp*4+0xa]
  40835a:	test   rcx,rcx
  40835d:	je     40934a <test_scan@@Base+0x1d0a>
  408363:	add    rax,rcx
  408366:	mov    rdx,QWORD PTR [rsp+0x20]
  40836b:	lea    rcx,[rdx+rax*1]
  40836f:	mov    ecx,DWORD PTR [rcx+rbp*4]
  408372:	add    rcx,rax
  408375:	lea    rax,[r12+rcx*1]
  408379:	lea    rdi,[rdx+rax*1]
  40837d:	add    rdi,0x4
  408381:	add    rcx,rdx
  408384:	mov    r14d,DWORD PTR [rcx+rbp*4]
  408388:	xor    ebx,ebx
  40838a:	cmp    r14d,0x8
  40838e:	mov    edx,0x8
  408393:	cmovb  edx,r14d
  408397:	seta   bl
  40839a:	lea    rsi,[rip+0xd4ee]        # 41588f <_IO_stdin_used@@Base+0x88f>
  4083a1:	call   404050 <strncmp@plt>
  4083a6:	cmp    eax,0x1
  4083a9:	sbb    ecx,ecx
  4083ab:	or     ecx,eax
  4083ad:	test   eax,eax
  4083af:	cmovne ebx,ecx
  4083b2:	cmp    r14d,0x8
  4083b6:	cmovb  ebx,ecx
  4083b9:	add    rbp,0xffffffffffffffff
  4083bd:	add    r13,0x4
  4083c1:	add    r12,0xfffffffffffffffc
  4083c5:	test   ebx,ebx
  4083c7:	jne    4082f8 <test_scan@@Base+0xcb8>
  4083cd:	mov    rax,QWORD PTR [rsp+0x30]
  4083d2:	add    rax,rbp
  4083d5:	cmp    rax,0x2
  4083d9:	je     4083e7 <test_scan@@Base+0xda7>
  4083db:	lea    rdi,[rip+0xfaae]        # 417e90 <_IO_stdin_used@@Base+0x2e90>
  4083e2:	jmp    40819e <test_scan@@Base+0xb5e>
  4083e7:	cmp    DWORD PTR [rsp],0x3
  4083eb:	jb     40855b <test_scan@@Base+0xf1b>
  4083f1:	mov    rax,QWORD PTR [rsp+0x8]
  4083f6:	mov    rcx,QWORD PTR [rsp+0x40]
  4083fb:	lea    r13,[rax+rcx*1]
  4083ff:	add    r13,0xc
  408403:	mov    ebx,0x2
  408408:	xor    ebp,ebp
  40840a:	lea    r12,[rip+0xcff0]        # 415401 <_IO_stdin_used@@Base+0x401>
  408411:	cmp    rbx,QWORD PTR [rsp]
  408415:	jae    409bc3 <test_scan@@Base+0x2583>
  40841b:	mov    eax,DWORD PTR [r13+rbp*1+0x0]
  408420:	lea    rcx,[rax+rbp*1]
  408424:	add    rcx,r13
  408427:	je     409353 <test_scan@@Base+0x1d13>
  40842d:	lea    rcx,[rax+r13*1]
  408431:	movsxd rdx,DWORD PTR [rbp+rcx*1+0x0]
  408436:	mov    rcx,rax
  408439:	sub    rcx,rdx
  40843c:	add    rcx,r13
  40843f:	movzx  edx,WORD PTR [rbp+rcx*1+0x0]
  408444:	cmp    edx,0xc
  408447:	jb     40934a <test_scan@@Base+0x1d0a>
  40844d:	movzx  ecx,WORD PTR [rbp+rcx*1+0xa]
  408452:	test   rcx,rcx
  408455:	je     40934a <test_scan@@Base+0x1d0a>
  40845b:	add    rax,rcx
  40845e:	lea    rcx,[rax+r13*1]
  408462:	mov    ecx,DWORD PTR [rbp+rcx*1+0x0]
  408466:	add    rcx,rax
  408469:	add    rcx,rbp
  40846c:	lea    rdi,[r15+rcx*1]
  408470:	add    rdi,0x10
  408474:	mov    rsi,r12
  408477:	call   4040f0 <strcmp@plt>
  40847c:	test   eax,eax
  40847e:	je     408493 <test_scan@@Base+0xe53>
  408480:	add    rbx,0x1
  408484:	add    rbp,0x4
  408488:	cmp    rbx,QWORD PTR [rsp]
  40848c:	jb     408411 <test_scan@@Base+0xdd1>
  40848e:	jmp    40855b <test_scan@@Base+0xf1b>
  408493:	test   rbp,rbp
  408496:	jne    40855b <test_scan@@Base+0xf1b>
  40849c:	mov    r14d,0x2
  4084a2:	xor    r12d,r12d
  4084a5:	cmp    r14,QWORD PTR [rsp]
  4084a9:	jae    409bc3 <test_scan@@Base+0x2583>
  4084af:	mov    eax,DWORD PTR [r13+r12*1+0x0]
  4084b4:	lea    rcx,[r12+rax*1]
  4084b8:	add    rcx,r13
  4084bb:	je     409353 <test_scan@@Base+0x1d13>
  4084c1:	lea    rcx,[rax+r13*1]
  4084c5:	movsxd rdx,DWORD PTR [r12+rcx*1]
  4084c9:	mov    rcx,rax
  4084cc:	sub    rcx,rdx
  4084cf:	add    rcx,r13
  4084d2:	movzx  edx,WORD PTR [r12+rcx*1]
  4084d7:	cmp    edx,0xc
  4084da:	jb     40934a <test_scan@@Base+0x1d0a>
  4084e0:	movzx  ecx,WORD PTR [r12+rcx*1+0xa]
  4084e6:	test   rcx,rcx
  4084e9:	je     40934a <test_scan@@Base+0x1d0a>
  4084ef:	add    rax,rcx
  4084f2:	lea    rcx,[rax+r13*1]
  4084f6:	mov    ecx,DWORD PTR [r12+rcx*1]
  4084fa:	add    rcx,rax
  4084fd:	lea    rax,[r12+rcx*1]
  408501:	lea    rdi,[r15+rax*1]
  408505:	add    rdi,0x10
  408509:	add    rcx,r13
  40850c:	mov    ebp,DWORD PTR [r12+rcx*1]
  408510:	xor    ebx,ebx
  408512:	cmp    ebp,0x8
  408515:	mov    edx,0x8
  40851a:	cmovb  edx,ebp
  40851d:	seta   bl
  408520:	lea    rsi,[rip+0xd368]        # 41588f <_IO_stdin_used@@Base+0x88f>
  408527:	call   404050 <strncmp@plt>
  40852c:	cmp    eax,0x1
  40852f:	sbb    ecx,ecx
  408531:	or     ecx,eax
  408533:	test   eax,eax
  408535:	cmovne ebx,ecx
  408538:	cmp    ebp,0x8
  40853b:	cmovb  ebx,ecx
  40853e:	test   ebx,ebx
  408540:	je     408556 <test_scan@@Base+0xf16>
  408542:	add    r14,0x1
  408546:	add    r12,0x4
  40854a:	cmp    r14,QWORD PTR [rsp]
  40854e:	jb     4084a5 <test_scan@@Base+0xe65>
  408554:	jmp    40855b <test_scan@@Base+0xf1b>
  408556:	test   r12,r12
  408559:	je     408586 <test_scan@@Base+0xf46>
  40855b:	lea    rdi,[rip+0xf8fe]        # 417e60 <_IO_stdin_used@@Base+0x2e60>
  408562:	jmp    40819e <test_scan@@Base+0xb5e>
  408567:	lea    rdi,[rip+0xdc0f]        # 41617d <_IO_stdin_used@@Base+0x117d>
  40856e:	lea    rsi,[rip+0xdacc]        # 416041 <_IO_stdin_used@@Base+0x1041>
  408575:	lea    rcx,[rip+0xdca3]        # 41621f <_IO_stdin_used@@Base+0x121f>
  40857c:	mov    edx,0xeb
  408581:	call   4040a0 <__assert_fail@plt>
  408586:	cmp    DWORD PTR [rsp],0x4
  40858a:	jb     408879 <test_scan@@Base+0x1239>
  408590:	mov    rax,QWORD PTR [rsp+0x8]
  408595:	mov    rcx,QWORD PTR [rsp+0x40]
  40859a:	lea    r13,[rax+rcx*1]
  40859e:	add    r13,0x10
  4085a2:	mov    ebx,0x3
  4085a7:	xor    ebp,ebp
  4085a9:	lea    r12,[rip+0xce51]        # 415401 <_IO_stdin_used@@Base+0x401>
  4085b0:	cmp    rbx,QWORD PTR [rsp]
  4085b4:	jae    409bc3 <test_scan@@Base+0x2583>
  4085ba:	mov    eax,DWORD PTR [r13+rbp*1+0x0]
  4085bf:	lea    rcx,[rax+rbp*1]
  4085c3:	add    rcx,r13
  4085c6:	je     409353 <test_scan@@Base+0x1d13>
  4085cc:	lea    rcx,[rax+r13*1]
  4085d0:	movsxd rdx,DWORD PTR [rbp+rcx*1+0x0]
  4085d5:	mov    rcx,rax
  4085d8:	sub    rcx,rdx
  4085db:	add    rcx,r13
  4085de:	movzx  edx,WORD PTR [rbp+rcx*1+0x0]
  4085e3:	cmp    edx,0xc
  4085e6:	jb     40934a <test_scan@@Base+0x1d0a>
  4085ec:	movzx  ecx,WORD PTR [rbp+rcx*1+0xa]
  4085f1:	test   rcx,rcx
  4085f4:	je     40934a <test_scan@@Base+0x1d0a>
  4085fa:	add    rax,rcx
  4085fd:	lea    rcx,[rax+r13*1]
  408601:	mov    ecx,DWORD PTR [rbp+rcx*1+0x0]
  408605:	add    rcx,rax
  408608:	add    rcx,rbp
  40860b:	lea    rdi,[r15+rcx*1]
  40860f:	add    rdi,0x14
  408613:	mov    rsi,r12
  408616:	call   4040f0 <strcmp@plt>
  40861b:	test   eax,eax
  40861d:	je     408670 <test_scan@@Base+0x1030>
  40861f:	add    rbx,0x1
  408623:	add    rbp,0x4
  408627:	cmp    rbx,QWORD PTR [rsp]
  40862b:	jb     4085b0 <test_scan@@Base+0xf70>
  40862d:	jmp    408879 <test_scan@@Base+0x1239>
  408632:	lea    rdi,[rip+0xd82d]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  408639:	lea    rsi,[rip+0xd84c]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  408640:	lea    rcx,[rip+0xdf0f]        # 416556 <_IO_stdin_used@@Base+0x1556>
  408647:	mov    edx,0x2c7
  40864c:	call   4040a0 <__assert_fail@plt>
  408651:	lea    rdi,[rip+0xd1bc]        # 415814 <_IO_stdin_used@@Base+0x814>
  408658:	lea    rsi,[rip+0xccd5]        # 415334 <_IO_stdin_used@@Base+0x334>
  40865f:	lea    rcx,[rip+0xd1fb]        # 415861 <_IO_stdin_used@@Base+0x861>
  408666:	mov    edx,0x519
  40866b:	call   4040a0 <__assert_fail@plt>
  408670:	cmp    rbp,0x4
  408674:	jne    408879 <test_scan@@Base+0x1239>
  40867a:	cmp    DWORD PTR [rsp],0x2
  40867e:	jb     4088e0 <test_scan@@Base+0x12a0>
  408684:	mov    rax,QWORD PTR [rsp]
  408688:	cmp    rax,0x3
  40868c:	mov    r13d,0x3
  408692:	cmovb  r13,rax
  408696:	mov    ebp,0x1
  40869b:	lea    r12,[rip+0xd1b0]        # 415852 <_IO_stdin_used@@Base+0x852>
  4086a2:	mov    rbx,QWORD PTR [rsp+0x10]
  4086a7:	cmp    rbp,QWORD PTR [rsp]
  4086ab:	jae    409bc3 <test_scan@@Base+0x2583>
  4086b1:	mov    eax,DWORD PTR [rbx+0x8]
  4086b4:	lea    rcx,[rbx+rax*1]
  4086b8:	cmp    rcx,0xfffffffffffffff8
  4086bc:	je     409353 <test_scan@@Base+0x1d13>
  4086c2:	movsxd rdx,DWORD PTR [rbx+rax*1+0x8]
  4086c7:	mov    rcx,rax
  4086ca:	sub    rcx,rdx
  4086cd:	movzx  edx,WORD PTR [rbx+rcx*1+0x8]
  4086d2:	cmp    edx,0xc
  4086d5:	jb     40934a <test_scan@@Base+0x1d0a>
  4086db:	movzx  ecx,WORD PTR [rbx+rcx*1+0x12]
  4086e0:	test   rcx,rcx
  4086e3:	je     40934a <test_scan@@Base+0x1d0a>
  4086e9:	add    rax,rcx
  4086ec:	mov    ecx,DWORD PTR [rbx+rax*1+0x8]
  4086f0:	add    rcx,rax
  4086f3:	lea    rdi,[rbx+rcx*1]
  4086f7:	add    rdi,0xc
  4086fb:	mov    rsi,r12
  4086fe:	call   4040f0 <strcmp@plt>
  408703:	test   eax,eax
  408705:	je     4088c3 <test_scan@@Base+0x1283>
  40870b:	add    rbp,0x1
  40870f:	add    rbx,0x4
  408713:	cmp    rbp,r13
  408716:	jb     4086a7 <test_scan@@Base+0x1067>
  408718:	cmp    DWORD PTR [rsp],0x2
  40871c:	jb     4088e0 <test_scan@@Base+0x12a0>
  408722:	mov    rax,QWORD PTR [rsp]
  408726:	cmp    rax,0x3
  40872a:	mov    r13d,0x3
  408730:	cmovb  r13,rax
  408734:	mov    ebp,0x1
  408739:	lea    r12,[rip+0xcc6f]        # 4153af <_IO_stdin_used@@Base+0x3af>
  408740:	mov    rbx,QWORD PTR [rsp+0x10]
  408745:	cmp    rbp,QWORD PTR [rsp]
  408749:	jae    409bc3 <test_scan@@Base+0x2583>
  40874f:	mov    eax,DWORD PTR [rbx+0x8]
  408752:	lea    rcx,[rbx+rax*1]
  408756:	cmp    rcx,0xfffffffffffffff8
  40875a:	je     409353 <test_scan@@Base+0x1d13>
  408760:	movsxd rdx,DWORD PTR [rbx+rax*1+0x8]
  408765:	mov    rcx,rax
  408768:	sub    rcx,rdx
  40876b:	movzx  edx,WORD PTR [rbx+rcx*1+0x8]
  408770:	cmp    edx,0xc
  408773:	jb     40934a <test_scan@@Base+0x1d0a>
  408779:	movzx  ecx,WORD PTR [rbx+rcx*1+0x12]
  40877e:	test   rcx,rcx
  408781:	je     40934a <test_scan@@Base+0x1d0a>
  408787:	add    rax,rcx
  40878a:	mov    ecx,DWORD PTR [rbx+rax*1+0x8]
  40878e:	add    rcx,rax
  408791:	lea    rdi,[rbx+rcx*1]
  408795:	add    rdi,0xc
  408799:	mov    rsi,r12
  40879c:	call   4040f0 <strcmp@plt>
  4087a1:	test   eax,eax
  4087a3:	je     4088cf <test_scan@@Base+0x128f>
  4087a9:	add    rbp,0x1
  4087ad:	add    rbx,0x4
  4087b1:	cmp    rbp,r13
  4087b4:	jb     408745 <test_scan@@Base+0x1105>
  4087b6:	cmp    DWORD PTR [rsp],0x2
  4087ba:	jb     4088e0 <test_scan@@Base+0x12a0>
  4087c0:	mov    rax,QWORD PTR [rsp]
  4087c4:	cmp    rax,0x3
  4087c8:	mov    r13d,0x3
  4087ce:	cmovb  r13,rax
  4087d2:	mov    rax,QWORD PTR [rsp+0x8]
  4087d7:	mov    rcx,QWORD PTR [rsp+0x40]
  4087dc:	lea    r14,[rax+rcx*1]
  4087e0:	add    r14,0x8
  4087e4:	mov    ebx,0x1
  4087e9:	xor    ebp,ebp
  4087eb:	lea    r12,[rip+0xcbe7]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  4087f2:	cmp    rbx,QWORD PTR [rsp]
  4087f6:	jae    409bc3 <test_scan@@Base+0x2583>
  4087fc:	mov    rdx,r14
  4087ff:	mov    eax,DWORD PTR [r14+rbp*1]
  408803:	lea    rcx,[rax+rbp*1]
  408807:	add    rcx,r14
  40880a:	je     409353 <test_scan@@Base+0x1d13>
  408810:	mov    rsi,r14
  408813:	lea    rcx,[r14+rax*1]
  408817:	movsxd rdx,DWORD PTR [rbp+rcx*1+0x0]
  40881c:	mov    rcx,rax
  40881f:	sub    rcx,rdx
  408822:	add    rcx,r14
  408825:	movzx  edx,WORD PTR [rbp+rcx*1+0x0]
  40882a:	cmp    edx,0xc
  40882d:	jb     40934a <test_scan@@Base+0x1d0a>
  408833:	movzx  ecx,WORD PTR [rbp+rcx*1+0xa]
  408838:	test   rcx,rcx
  40883b:	je     40934a <test_scan@@Base+0x1d0a>
  408841:	add    rax,rcx
  408844:	lea    rcx,[r14+rax*1]
  408848:	mov    ecx,DWORD PTR [rbp+rcx*1+0x0]
  40884c:	add    rcx,rax
  40884f:	add    rcx,rbp
  408852:	lea    rdi,[r15+rcx*1]
  408856:	add    rdi,0xc
  40885a:	mov    rsi,r12
  40885d:	call   4040f0 <strcmp@plt>
  408862:	test   eax,eax
  408864:	je     4088db <test_scan@@Base+0x129b>
  408866:	add    rbx,0x1
  40886a:	add    rbp,0x4
  40886e:	cmp    rbx,r13
  408871:	jb     4087f2 <test_scan@@Base+0x11b2>
  408877:	jmp    4088e0 <test_scan@@Base+0x12a0>
  408879:	lea    rdi,[rip+0xf5c0]        # 417e40 <_IO_stdin_used@@Base+0x2e40>
  408880:	jmp    40819e <test_scan@@Base+0xb5e>
  408885:	lea    rdi,[rip+0xcff7]        # 415883 <_IO_stdin_used@@Base+0x883>
  40888c:	lea    rsi,[rip+0xcaa1]        # 415334 <_IO_stdin_used@@Base+0x334>
  408893:	lea    rcx,[rip+0xcfc7]        # 415861 <_IO_stdin_used@@Base+0x861>
  40889a:	mov    edx,0x51b
  40889f:	call   4040a0 <__assert_fail@plt>
  4088a4:	lea    rdi,[rip+0xcfdc]        # 415887 <_IO_stdin_used@@Base+0x887>
  4088ab:	lea    rsi,[rip+0xca82]        # 415334 <_IO_stdin_used@@Base+0x334>
  4088b2:	lea    rcx,[rip+0xcfa8]        # 415861 <_IO_stdin_used@@Base+0x861>
  4088b9:	mov    edx,0x51d
  4088be:	call   4040a0 <__assert_fail@plt>
  4088c3:	lea    rdi,[rip+0xf546]        # 417e10 <_IO_stdin_used@@Base+0x2e10>
  4088ca:	jmp    40819e <test_scan@@Base+0xb5e>
  4088cf:	lea    rdi,[rip+0xf50a]        # 417de0 <_IO_stdin_used@@Base+0x2de0>
  4088d6:	jmp    40819e <test_scan@@Base+0xb5e>
  4088db:	test   rbp,rbp
  4088de:	je     4088ec <test_scan@@Base+0x12ac>
  4088e0:	lea    rdi,[rip+0xf4c9]        # 417db0 <_IO_stdin_used@@Base+0x2db0>
  4088e7:	jmp    40819e <test_scan@@Base+0xb5e>
  4088ec:	mov    rax,QWORD PTR [rsp]
  4088f0:	cmp    rax,0x3
  4088f4:	mov    r13d,0x3
  4088fa:	cmovb  r13,rax
  4088fe:	mov    ebx,0x1
  408903:	xor    ebp,ebp
  408905:	lea    r12,[rip+0xcaf5]        # 415401 <_IO_stdin_used@@Base+0x401>
  40890c:	cmp    rbx,QWORD PTR [rsp]
  408910:	jae    409bc3 <test_scan@@Base+0x2583>
  408916:	mov    rdx,r14
  408919:	mov    eax,DWORD PTR [r14+rbp*1]
  40891d:	lea    rcx,[rax+rbp*1]
  408921:	add    rcx,r14
  408924:	je     409353 <test_scan@@Base+0x1d13>
  40892a:	mov    rsi,r14
  40892d:	lea    rcx,[r14+rax*1]
  408931:	movsxd rdx,DWORD PTR [rbp+rcx*1+0x0]
  408936:	mov    rcx,rax
  408939:	sub    rcx,rdx
  40893c:	add    rcx,r14
  40893f:	movzx  edx,WORD PTR [rbp+rcx*1+0x0]
  408944:	cmp    edx,0xc
  408947:	jb     40934a <test_scan@@Base+0x1d0a>
  40894d:	movzx  ecx,WORD PTR [rbp+rcx*1+0xa]
  408952:	test   rcx,rcx
  408955:	je     40934a <test_scan@@Base+0x1d0a>
  40895b:	add    rax,rcx
  40895e:	lea    rcx,[r14+rax*1]
  408962:	mov    ecx,DWORD PTR [rbp+rcx*1+0x0]
  408966:	add    rcx,rax
  408969:	add    rcx,rbp
  40896c:	lea    rdi,[r15+rcx*1]
  408970:	add    rdi,0xc
  408974:	mov    rsi,r12
  408977:	call   4040f0 <strcmp@plt>
  40897c:	test   eax,eax
  40897e:	je     408996 <test_scan@@Base+0x1356>
  408980:	add    rbx,0x1
  408984:	add    rbp,0x4
  408988:	cmp    rbx,r13
  40898b:	jb     40890c <test_scan@@Base+0x12cc>
  408991:	jmp    408b0b <test_scan@@Base+0x14cb>
  408996:	cmp    rbp,0x4
  40899a:	jne    408b0b <test_scan@@Base+0x14cb>
  4089a0:	mov    rax,QWORD PTR [rsp]
  4089a4:	cmp    rax,0x3
  4089a8:	mov    r12d,0x3
  4089ae:	cmovb  r12,rax
  4089b2:	mov    ebp,0x1
  4089b7:	lea    r15,[rip+0xce38]        # 4157f6 <_IO_stdin_used@@Base+0x7f6>
  4089be:	mov    rbx,QWORD PTR [rsp+0x10]
  4089c3:	cmp    rbp,QWORD PTR [rsp]
  4089c7:	jae    409bc3 <test_scan@@Base+0x2583>
  4089cd:	mov    eax,DWORD PTR [rbx+0x8]
  4089d0:	lea    rcx,[rbx+rax*1]
  4089d4:	cmp    rcx,0xfffffffffffffff8
  4089d8:	je     409353 <test_scan@@Base+0x1d13>
  4089de:	movsxd rdx,DWORD PTR [rbx+rax*1+0x8]
  4089e3:	mov    rcx,rax
  4089e6:	sub    rcx,rdx
  4089e9:	movzx  edx,WORD PTR [rbx+rcx*1+0x8]
  4089ee:	cmp    edx,0xc
  4089f1:	jb     40934a <test_scan@@Base+0x1d0a>
  4089f7:	movzx  ecx,WORD PTR [rbx+rcx*1+0x12]
  4089fc:	test   rcx,rcx
  4089ff:	je     40934a <test_scan@@Base+0x1d0a>
  408a05:	add    rax,rcx
  408a08:	mov    ecx,DWORD PTR [rbx+rax*1+0x8]
  408a0c:	add    rcx,rax
  408a0f:	lea    rdi,[rbx+rcx*1]
  408a13:	add    rdi,0xc
  408a17:	mov    rsi,r15
  408a1a:	call   4040f0 <strcmp@plt>
  408a1f:	test   eax,eax
  408a21:	je     408b17 <test_scan@@Base+0x14d7>
  408a27:	add    rbp,0x1
  408a2b:	add    rbx,0x4
  408a2f:	cmp    rbp,r12
  408a32:	jb     4089c3 <test_scan@@Base+0x1383>
  408a34:	mov    rax,QWORD PTR [rsp]
  408a38:	cmp    rax,0x3
  408a3c:	mov    ebp,0x3
  408a41:	cmovb  rbp,rax
  408a45:	mov    rcx,QWORD PTR [rsp+0x48]
  408a4a:	mov    rdx,QWORD PTR [rsp+0x58]
  408a4f:	lea    rbx,[rdx+rcx*1]
  408a53:	add    rbx,QWORD PTR [rsp+0x18]
  408a58:	mov    rcx,rax
  408a5b:	not    rcx
  408a5e:	cmp    rcx,0xfffffffffffffffc
  408a62:	mov    rax,0xfffffffffffffffc
  408a69:	mov    QWORD PTR [rsp+0x30],rcx
  408a6e:	cmova  rax,rcx
  408a72:	shl    rax,0x2
  408a76:	mov    QWORD PTR [rsp+0x28],rbx
  408a7b:	sub    rbx,rax
  408a7e:	add    rbx,QWORD PTR [rsp+0x8]
  408a83:	lea    r15,[rip+0xcdc8]        # 415852 <_IO_stdin_used@@Base+0x852>
  408a8a:	mov    QWORD PTR [rsp+0x20],rbp
  408a8f:	cmp    rbp,0x1
  408a93:	jbe    408b23 <test_scan@@Base+0x14e3>
  408a99:	add    rbp,0xffffffffffffffff
  408a9d:	cmp    rbp,QWORD PTR [rsp]
  408aa1:	jae    409bc3 <test_scan@@Base+0x2583>
  408aa7:	mov    eax,DWORD PTR [rbx-0x4]
  408aaa:	mov    ecx,0x4
  408aaf:	sub    rcx,rax
  408ab2:	cmp    rcx,rbx
  408ab5:	je     409353 <test_scan@@Base+0x1d13>
  408abb:	movsxd rdx,DWORD PTR [rbx+rax*1-0x4]
  408ac0:	mov    rcx,rax
  408ac3:	sub    rcx,rdx
  408ac6:	movzx  edx,WORD PTR [rbx+rcx*1-0x4]
  408acb:	cmp    edx,0xc
  408ace:	jb     40934a <test_scan@@Base+0x1d0a>
  408ad4:	movzx  ecx,WORD PTR [rbx+rcx*1+0x6]
  408ad9:	test   rcx,rcx
  408adc:	je     40934a <test_scan@@Base+0x1d0a>
  408ae2:	add    rax,rcx
  408ae5:	mov    edi,DWORD PTR [rbx+rax*1-0x4]
  408ae9:	add    rdi,rax
  408aec:	add    rdi,rbx
  408aef:	mov    rsi,r15
  408af2:	call   4040f0 <strcmp@plt>
  408af7:	add    rbx,0xfffffffffffffffc
  408afb:	test   eax,eax
  408afd:	jne    408a8f <test_scan@@Base+0x144f>
  408aff:	lea    rdi,[rip+0xf21a]        # 417d20 <_IO_stdin_used@@Base+0x2d20>
  408b06:	jmp    40819e <test_scan@@Base+0xb5e>
  408b0b:	lea    rdi,[rip+0xf26e]        # 417d80 <_IO_stdin_used@@Base+0x2d80>
  408b12:	jmp    40819e <test_scan@@Base+0xb5e>
  408b17:	lea    rdi,[rip+0xf232]        # 417d50 <_IO_stdin_used@@Base+0x2d50>
  408b1e:	jmp    40819e <test_scan@@Base+0xb5e>
  408b23:	mov    rcx,QWORD PTR [rsp+0x30]
  408b28:	cmp    rcx,0xfffffffffffffffc
  408b2c:	mov    rax,0xfffffffffffffffc
  408b33:	cmova  rax,rcx
  408b37:	shl    rax,0x2
  408b3b:	mov    rbx,QWORD PTR [rsp+0x28]
  408b40:	sub    rbx,rax
  408b43:	add    rbx,QWORD PTR [rsp+0x8]
  408b48:	lea    r15,[rip+0xc860]        # 4153af <_IO_stdin_used@@Base+0x3af>
  408b4f:	mov    rbp,QWORD PTR [rsp+0x20]
  408b54:	cmp    rbp,0x1
  408b58:	jbe    408bcc <test_scan@@Base+0x158c>
  408b5a:	add    rbp,0xffffffffffffffff
  408b5e:	cmp    rbp,QWORD PTR [rsp]
  408b62:	jae    409bc3 <test_scan@@Base+0x2583>
  408b68:	mov    eax,DWORD PTR [rbx-0x4]
  408b6b:	mov    ecx,0x4
  408b70:	sub    rcx,rax
  408b73:	cmp    rcx,rbx
  408b76:	je     409353 <test_scan@@Base+0x1d13>
  408b7c:	movsxd rdx,DWORD PTR [rbx+rax*1-0x4]
  408b81:	mov    rcx,rax
  408b84:	sub    rcx,rdx
  408b87:	movzx  edx,WORD PTR [rbx+rcx*1-0x4]
  408b8c:	cmp    edx,0xc
  408b8f:	jb     40934a <test_scan@@Base+0x1d0a>
  408b95:	movzx  ecx,WORD PTR [rbx+rcx*1+0x6]
  408b9a:	test   rcx,rcx
  408b9d:	je     40934a <test_scan@@Base+0x1d0a>
  408ba3:	add    rax,rcx
  408ba6:	mov    edi,DWORD PTR [rbx+rax*1-0x4]
  408baa:	add    rdi,rax
  408bad:	add    rdi,rbx
  408bb0:	mov    rsi,r15
  408bb3:	call   4040f0 <strcmp@plt>
  408bb8:	add    rbx,0xfffffffffffffffc
  408bbc:	test   eax,eax
  408bbe:	jne    408b54 <test_scan@@Base+0x1514>
  408bc0:	lea    rdi,[rip+0xf129]        # 417cf0 <_IO_stdin_used@@Base+0x2cf0>
  408bc7:	jmp    40819e <test_scan@@Base+0xb5e>
  408bcc:	mov    rax,QWORD PTR [rsp+0x20]
  408bd1:	lea    r12,[rax+0x1]
  408bd5:	mov    rax,QWORD PTR [rsp+0x48]
  408bda:	mov    rcx,QWORD PTR [rsp+0x88]
  408be2:	lea    rbp,[rax+rcx*1]
  408be6:	add    rbp,0xfffffffffffffffc
  408bea:	mov    rcx,QWORD PTR [rsp+0x30]
  408bef:	cmp    rcx,0xfffffffffffffffc
  408bf3:	mov    rax,0xfffffffffffffffc
  408bfa:	cmova  rax,rcx
  408bfe:	shl    rax,0x2
  408c02:	mov    QWORD PTR [rsp+0x88],rbp
  408c0a:	sub    rbp,rax
  408c0d:	mov    rcx,QWORD PTR [rsp+0x8]
  408c12:	add    rbp,rcx
  408c15:	mov    r15,QWORD PTR [rsp+0x40]
  408c1a:	sub    r15,rax
  408c1d:	add    r15,rcx
  408c20:	xor    r13d,r13d
  408c23:	xor    ebx,ebx
  408c25:	lea    rax,[r12+rbx*1]
  408c29:	add    rax,0xffffffffffffffff
  408c2d:	cmp    rax,0x2
  408c31:	jb     408cc0 <test_scan@@Base+0x1680>
  408c37:	lea    rax,[r12+rbx*1]
  408c3b:	add    rax,0xfffffffffffffffe
  408c3f:	cmp    rax,QWORD PTR [rsp]
  408c43:	jae    409bc3 <test_scan@@Base+0x2583>
  408c49:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  408c4d:	lea    rcx,[rax+r13*1]
  408c51:	add    rcx,rbp
  408c54:	je     409353 <test_scan@@Base+0x1d13>
  408c5a:	lea    rcx,[rax+rbp*1]
  408c5e:	movsxd rdx,DWORD PTR [rcx+rbx*4]
  408c62:	mov    rcx,rax
  408c65:	sub    rcx,rdx
  408c68:	add    rcx,rbp
  408c6b:	movzx  edx,WORD PTR [rcx+rbx*4]
  408c6f:	cmp    edx,0xc
  408c72:	jb     40934a <test_scan@@Base+0x1d0a>
  408c78:	movzx  ecx,WORD PTR [rcx+rbx*4+0xa]
  408c7d:	test   rcx,rcx
  408c80:	je     40934a <test_scan@@Base+0x1d0a>
  408c86:	add    rax,rcx
  408c89:	lea    rcx,[rax+rbp*1]
  408c8d:	mov    edi,DWORD PTR [rcx+rbx*4]
  408c90:	add    rdi,rax
  408c93:	add    rdi,r13
  408c96:	add    rdi,r15
  408c99:	lea    rsi,[rip+0xc739]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  408ca0:	call   4040f0 <strcmp@plt>
  408ca5:	add    rbx,0xffffffffffffffff
  408ca9:	add    r13,0xfffffffffffffffc
  408cad:	test   eax,eax
  408caf:	jne    408c25 <test_scan@@Base+0x15e5>
  408cb5:	add    rbx,QWORD PTR [rsp+0x20]
  408cba:	cmp    rbx,0x1
  408cbe:	je     408ccc <test_scan@@Base+0x168c>
  408cc0:	lea    rdi,[rip+0xeff9]        # 417cc0 <_IO_stdin_used@@Base+0x2cc0>
  408cc7:	jmp    40819e <test_scan@@Base+0xb5e>
  408ccc:	mov    rcx,QWORD PTR [rsp+0x30]
  408cd1:	cmp    rcx,0xfffffffffffffffc
  408cd5:	mov    rax,0xfffffffffffffffc
  408cdc:	cmova  rax,rcx
  408ce0:	shl    rax,0x2
  408ce4:	mov    r15,QWORD PTR [rsp+0x88]
  408cec:	sub    r15,rax
  408cef:	mov    rcx,QWORD PTR [rsp+0x8]
  408cf4:	add    r15,rcx
  408cf7:	mov    r13,QWORD PTR [rsp+0x40]
  408cfc:	sub    r13,rax
  408cff:	add    r13,rcx
  408d02:	xor    ebp,ebp
  408d04:	xor    ebx,ebx
  408d06:	lea    rax,[r12+rbx*1]
  408d0a:	add    rax,0xffffffffffffffff
  408d0e:	cmp    rax,0x2
  408d12:	jb     408da7 <test_scan@@Base+0x1767>
  408d18:	lea    rax,[r12+rbx*1]
  408d1c:	add    rax,0xfffffffffffffffe
  408d20:	cmp    rax,QWORD PTR [rsp]
  408d24:	jae    409bc3 <test_scan@@Base+0x2583>
  408d2a:	mov    rdx,r15
  408d2d:	mov    eax,DWORD PTR [r15+rbx*4]
  408d31:	lea    rcx,[rax+rbp*1]
  408d35:	add    rcx,r15
  408d38:	je     409353 <test_scan@@Base+0x1d13>
  408d3e:	mov    rsi,r15
  408d41:	lea    rcx,[r15+rax*1]
  408d45:	movsxd rdx,DWORD PTR [rcx+rbx*4]
  408d49:	mov    rcx,rax
  408d4c:	sub    rcx,rdx
  408d4f:	add    rcx,r15
  408d52:	movzx  edx,WORD PTR [rcx+rbx*4]
  408d56:	cmp    edx,0xc
  408d59:	jb     40934a <test_scan@@Base+0x1d0a>
  408d5f:	movzx  ecx,WORD PTR [rcx+rbx*4+0xa]
  408d64:	test   rcx,rcx
  408d67:	je     40934a <test_scan@@Base+0x1d0a>
  408d6d:	add    rax,rcx
  408d70:	lea    rcx,[r15+rax*1]
  408d74:	mov    edi,DWORD PTR [rcx+rbx*4]
  408d77:	add    rdi,rax
  408d7a:	add    rdi,rbp
  408d7d:	add    rdi,r13
  408d80:	lea    rsi,[rip+0xc67a]        # 415401 <_IO_stdin_used@@Base+0x401>
  408d87:	call   4040f0 <strcmp@plt>
  408d8c:	add    rbx,0xffffffffffffffff
  408d90:	add    rbp,0xfffffffffffffffc
  408d94:	test   eax,eax
  408d96:	jne    408d06 <test_scan@@Base+0x16c6>
  408d9c:	add    rbx,QWORD PTR [rsp+0x20]
  408da1:	cmp    rbx,0x2
  408da5:	je     408db3 <test_scan@@Base+0x1773>
  408da7:	lea    rdi,[rip+0xeee2]        # 417c90 <_IO_stdin_used@@Base+0x2c90>
  408dae:	jmp    40819e <test_scan@@Base+0xb5e>
  408db3:	mov    rcx,QWORD PTR [rsp+0x30]
  408db8:	cmp    rcx,0xfffffffffffffffc
  408dbc:	mov    rax,0xfffffffffffffffc
  408dc3:	cmova  rax,rcx
  408dc7:	shl    rax,0x2
  408dcb:	mov    rbx,QWORD PTR [rsp+0x28]
  408dd0:	sub    rbx,rax
  408dd3:	add    rbx,QWORD PTR [rsp+0x8]
  408dd8:	lea    rbp,[rip+0xca17]        # 4157f6 <_IO_stdin_used@@Base+0x7f6>
  408ddf:	cmp    QWORD PTR [rsp+0x20],0x1
  408de5:	jbe    408e63 <test_scan@@Base+0x1823>
  408de7:	mov    rax,QWORD PTR [rsp+0x20]
  408dec:	add    rax,0xffffffffffffffff
  408df0:	mov    QWORD PTR [rsp+0x20],rax
  408df5:	cmp    rax,QWORD PTR [rsp]
  408df9:	jae    409bc3 <test_scan@@Base+0x2583>
  408dff:	mov    eax,DWORD PTR [rbx-0x4]
  408e02:	mov    ecx,0x4
  408e07:	sub    rcx,rax
  408e0a:	cmp    rcx,rbx
  408e0d:	je     409353 <test_scan@@Base+0x1d13>
  408e13:	movsxd rdx,DWORD PTR [rbx+rax*1-0x4]
  408e18:	mov    rcx,rax
  408e1b:	sub    rcx,rdx
  408e1e:	movzx  edx,WORD PTR [rbx+rcx*1-0x4]
  408e23:	cmp    edx,0xc
  408e26:	jb     40934a <test_scan@@Base+0x1d0a>
  408e2c:	movzx  ecx,WORD PTR [rbx+rcx*1+0x6]
  408e31:	test   rcx,rcx
  408e34:	je     40934a <test_scan@@Base+0x1d0a>
  408e3a:	add    rax,rcx
  408e3d:	mov    edi,DWORD PTR [rbx+rax*1-0x4]
  408e41:	add    rdi,rax
  408e44:	add    rdi,rbx
  408e47:	mov    rsi,rbp
  408e4a:	call   4040f0 <strcmp@plt>
  408e4f:	add    rbx,0xfffffffffffffffc
  408e53:	test   eax,eax
  408e55:	jne    408ddf <test_scan@@Base+0x179f>
  408e57:	lea    rdi,[rip+0xee02]        # 417c60 <_IO_stdin_used@@Base+0x2c60>
  408e5e:	jmp    40819e <test_scan@@Base+0xb5e>
  408e63:	mov    rax,QWORD PTR [rsp]
  408e67:	mov    rcx,QWORD PTR [rsp+0x58]
  408e6c:	lea    rbx,[rcx+rax*4]
  408e70:	add    rbx,QWORD PTR [rsp+0x48]
  408e75:	add    rbx,QWORD PTR [rsp+0x18]
  408e7a:	add    rbx,QWORD PTR [rsp+0x8]
  408e7f:	lea    r15,[rip+0xc529]        # 4153af <_IO_stdin_used@@Base+0x3af>
  408e86:	mov    rbp,rax
  408e89:	cmp    rbp,QWORD PTR [rsp]
  408e8d:	jbe    408efd <test_scan@@Base+0x18bd>
  408e8f:	add    rbp,0xffffffffffffffff
  408e93:	cmp    rbp,QWORD PTR [rsp]
  408e97:	jae    409bc3 <test_scan@@Base+0x2583>
  408e9d:	mov    eax,DWORD PTR [rbx]
  408e9f:	mov    rcx,rbx
  408ea2:	add    rcx,rax
  408ea5:	je     409353 <test_scan@@Base+0x1d13>
  408eab:	movsxd rdx,DWORD PTR [rbx+rax*1]
  408eaf:	mov    rcx,rax
  408eb2:	sub    rcx,rdx
  408eb5:	movzx  edx,WORD PTR [rbx+rcx*1]
  408eb9:	cmp    edx,0xc
  408ebc:	jb     40934a <test_scan@@Base+0x1d0a>
  408ec2:	movzx  ecx,WORD PTR [rbx+rcx*1+0xa]
  408ec7:	test   rcx,rcx
  408eca:	je     40934a <test_scan@@Base+0x1d0a>
  408ed0:	add    rax,rcx
  408ed3:	mov    ecx,DWORD PTR [rbx+rax*1]
  408ed6:	add    rcx,rax
  408ed9:	lea    rdi,[rbx+rcx*1]
  408edd:	add    rdi,0x4
  408ee1:	mov    rsi,r15
  408ee4:	call   4040f0 <strcmp@plt>
  408ee9:	add    rbx,0xfffffffffffffffc
  408eed:	test   eax,eax
  408eef:	jne    408e89 <test_scan@@Base+0x1849>
  408ef1:	lea    rdi,[rip+0xed38]        # 417c30 <_IO_stdin_used@@Base+0x2c30>
  408ef8:	jmp    40819e <test_scan@@Base+0xb5e>
  408efd:	xor    ebp,ebp
  408eff:	lea    r15,[rip+0xc4d3]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  408f06:	mov    rbx,QWORD PTR [rsp+0x10]
  408f0b:	cmp    rbp,QWORD PTR [rsp]
  408f0f:	jae    409bc3 <test_scan@@Base+0x2583>
  408f15:	mov    eax,DWORD PTR [rbx+0x4]
  408f18:	lea    rcx,[rbx+rax*1]
  408f1c:	cmp    rcx,0xfffffffffffffffc
  408f20:	je     409353 <test_scan@@Base+0x1d13>
  408f26:	movsxd rdx,DWORD PTR [rbx+rax*1+0x4]
  408f2b:	mov    rcx,rax
  408f2e:	sub    rcx,rdx
  408f31:	movzx  edx,WORD PTR [rbx+rcx*1+0x4]
  408f36:	cmp    edx,0xc
  408f39:	jb     40934a <test_scan@@Base+0x1d0a>
  408f3f:	movzx  ecx,WORD PTR [rbx+rcx*1+0xe]
  408f44:	test   rcx,rcx
  408f47:	je     40934a <test_scan@@Base+0x1d0a>
  408f4d:	add    rax,rcx
  408f50:	mov    ecx,DWORD PTR [rbx+rax*1+0x4]
  408f54:	add    rcx,rax
  408f57:	lea    rdi,[rbx+rcx*1]
  408f5b:	add    rdi,0x8
  408f5f:	mov    rsi,r15
  408f62:	call   4040f0 <strcmp@plt>
  408f67:	test   eax,eax
  408f69:	je     408f7e <test_scan@@Base+0x193e>
  408f6b:	add    rbp,0x1
  408f6f:	add    rbx,0x4
  408f73:	cmp    rbp,QWORD PTR [rsp]
  408f77:	jb     408f0b <test_scan@@Base+0x18cb>
  408f79:	jmp    409014 <test_scan@@Base+0x19d4>
  408f7e:	mov    rax,QWORD PTR [rsp+0x28]
  408f83:	add    rax,QWORD PTR [rsp+0x8]
  408f88:	mov    QWORD PTR [rsp+0x28],rax
  408f8d:	xor    r13d,r13d
  408f90:	lea    r15,[rip+0xc442]        # 4153d9 <_IO_stdin_used@@Base+0x3d9>
  408f97:	jmp    408f9c <test_scan@@Base+0x195c>
  408f99:	mov    r13,r12
  408f9c:	lea    r12,[r13+0x1]
  408fa0:	mov    rax,QWORD PTR [rsp+0x28]
  408fa5:	lea    rbx,[rax+rbp*4]
  408fa9:	add    rbp,0x1
  408fad:	cmp    rbp,QWORD PTR [rsp]
  408fb1:	jae    40900f <test_scan@@Base+0x19cf>
  408fb3:	mov    eax,DWORD PTR [rbx+0x8]
  408fb6:	lea    rcx,[rbx+rax*1]
  408fba:	cmp    rcx,0xfffffffffffffff8
  408fbe:	je     409353 <test_scan@@Base+0x1d13>
  408fc4:	movsxd rdx,DWORD PTR [rbx+rax*1+0x8]
  408fc9:	mov    rcx,rax
  408fcc:	sub    rcx,rdx
  408fcf:	movzx  edx,WORD PTR [rbx+rcx*1+0x8]
  408fd4:	cmp    edx,0xc
  408fd7:	jb     40934a <test_scan@@Base+0x1d0a>
  408fdd:	movzx  ecx,WORD PTR [rbx+rcx*1+0x12]
  408fe2:	test   rcx,rcx
  408fe5:	je     40934a <test_scan@@Base+0x1d0a>
  408feb:	add    rax,rcx
  408fee:	mov    ecx,DWORD PTR [rbx+rax*1+0x8]
  408ff2:	add    rcx,rax
  408ff5:	lea    rdi,[rbx+rcx*1]
  408ff9:	add    rdi,0xc
  408ffd:	mov    rsi,r15
  409000:	call   4040f0 <strcmp@plt>
  409005:	add    rbx,0x4
  409009:	test   eax,eax
  40900b:	jne    408fa9 <test_scan@@Base+0x1969>
  40900d:	jmp    408f99 <test_scan@@Base+0x1959>
  40900f:	test   r13,r13
  409012:	je     409020 <test_scan@@Base+0x19e0>
  409014:	lea    rdi,[rip+0xebf5]        # 417c10 <_IO_stdin_used@@Base+0x2c10>
  40901b:	jmp    40819e <test_scan@@Base+0xb5e>
  409020:	xor    ebp,ebp
  409022:	lea    r15,[rip+0xc829]        # 415852 <_IO_stdin_used@@Base+0x852>
  409029:	mov    rbx,QWORD PTR [rsp+0x10]
  40902e:	cmp    rbp,QWORD PTR [rsp]
  409032:	jae    409bc3 <test_scan@@Base+0x2583>
  409038:	mov    eax,DWORD PTR [rbx+0x4]
  40903b:	lea    rcx,[rbx+rax*1]
  40903f:	cmp    rcx,0xfffffffffffffffc
  409043:	je     409353 <test_scan@@Base+0x1d13>
  409049:	movsxd rdx,DWORD PTR [rbx+rax*1+0x4]
  40904e:	mov    rcx,rax
  409051:	sub    rcx,rdx
  409054:	movzx  edx,WORD PTR [rbx+rcx*1+0x4]
  409059:	cmp    edx,0xc
  40905c:	jb     40934a <test_scan@@Base+0x1d0a>
  409062:	movzx  ecx,WORD PTR [rbx+rcx*1+0xe]
  409067:	test   rcx,rcx
  40906a:	je     40934a <test_scan@@Base+0x1d0a>
  409070:	add    rax,rcx
  409073:	mov    ecx,DWORD PTR [rbx+rax*1+0x4]
  409077:	add    rcx,rax
  40907a:	lea    rdi,[rbx+rcx*1]
  40907e:	add    rdi,0x8
  409082:	mov    rsi,r15
  409085:	call   4040f0 <strcmp@plt>
  40908a:	test   eax,eax
  40908c:	je     4090a1 <test_scan@@Base+0x1a61>
  40908e:	add    rbp,0x1
  409092:	add    rbx,0x4
  409096:	cmp    rbp,QWORD PTR [rsp]
  40909a:	jb     40902e <test_scan@@Base+0x19ee>
  40909c:	jmp    40912f <test_scan@@Base+0x1aef>
  4090a1:	xor    r12d,r12d
  4090a4:	lea    r15,[rip+0xc7a7]        # 415852 <_IO_stdin_used@@Base+0x852>
  4090ab:	add    r12,0x1
  4090af:	mov    rax,QWORD PTR [rsp+0x28]
  4090b4:	lea    rbx,[rax+rbp*4]
  4090b8:	add    rbp,0x1
  4090bc:	cmp    rbp,QWORD PTR [rsp]
  4090c0:	jae    40911e <test_scan@@Base+0x1ade>
  4090c2:	mov    eax,DWORD PTR [rbx+0x8]
  4090c5:	lea    rcx,[rbx+rax*1]
  4090c9:	cmp    rcx,0xfffffffffffffff8
  4090cd:	je     409353 <test_scan@@Base+0x1d13>
  4090d3:	movsxd rdx,DWORD PTR [rbx+rax*1+0x8]
  4090d8:	mov    rcx,rax
  4090db:	sub    rcx,rdx
  4090de:	movzx  edx,WORD PTR [rbx+rcx*1+0x8]
  4090e3:	cmp    edx,0xc
  4090e6:	jb     40934a <test_scan@@Base+0x1d0a>
  4090ec:	movzx  ecx,WORD PTR [rbx+rcx*1+0x12]
  4090f1:	test   rcx,rcx
  4090f4:	je     40934a <test_scan@@Base+0x1d0a>
  4090fa:	add    rax,rcx
  4090fd:	mov    ecx,DWORD PTR [rbx+rax*1+0x8]
  409101:	add    rcx,rax
  409104:	lea    rdi,[rbx+rcx*1]
  409108:	add    rdi,0xc
  40910c:	mov    rsi,r15
  40910f:	call   4040f0 <strcmp@plt>
  409114:	add    rbx,0x4
  409118:	test   eax,eax
  40911a:	jne    4090b8 <test_scan@@Base+0x1a78>
  40911c:	jmp    4090ab <test_scan@@Base+0x1a6b>
  40911e:	test   r12,r12
  409121:	je     40912f <test_scan@@Base+0x1aef>
  409123:	lea    rdi,[rip+0xeac6]        # 417bf0 <_IO_stdin_used@@Base+0x2bf0>
  40912a:	jmp    40819e <test_scan@@Base+0xb5e>
  40912f:	xor    ebp,ebp
  409131:	lea    r15,[rip+0xc277]        # 4153af <_IO_stdin_used@@Base+0x3af>
  409138:	mov    rbx,QWORD PTR [rsp+0x10]
  40913d:	cmp    rbp,QWORD PTR [rsp]
  409141:	jae    409bc3 <test_scan@@Base+0x2583>
  409147:	mov    eax,DWORD PTR [rbx+0x4]
  40914a:	lea    rcx,[rbx+rax*1]
  40914e:	cmp    rcx,0xfffffffffffffffc
  409152:	je     409353 <test_scan@@Base+0x1d13>
  409158:	movsxd rdx,DWORD PTR [rbx+rax*1+0x4]
  40915d:	mov    rcx,rax
  409160:	sub    rcx,rdx
  409163:	movzx  edx,WORD PTR [rbx+rcx*1+0x4]
  409168:	cmp    edx,0xc
  40916b:	jb     40934a <test_scan@@Base+0x1d0a>
  409171:	movzx  ecx,WORD PTR [rbx+rcx*1+0xe]
  409176:	test   rcx,rcx
  409179:	je     40934a <test_scan@@Base+0x1d0a>
  40917f:	add    rax,rcx
  409182:	mov    ecx,DWORD PTR [rbx+rax*1+0x4]
  409186:	add    rcx,rax
  409189:	lea    rdi,[rbx+rcx*1]
  40918d:	add    rdi,0x8
  409191:	mov    rsi,r15
  409194:	call   4040f0 <strcmp@plt>
  409199:	test   eax,eax
  40919b:	je     4091b0 <test_scan@@Base+0x1b70>
  40919d:	add    rbp,0x1
  4091a1:	add    rbx,0x4
  4091a5:	cmp    rbp,QWORD PTR [rsp]
  4091a9:	jb     40913d <test_scan@@Base+0x1afd>
  4091ab:	jmp    409237 <test_scan@@Base+0x1bf7>
  4091b0:	xor    r13d,r13d
  4091b3:	lea    r15,[rip+0xc1f5]        # 4153af <_IO_stdin_used@@Base+0x3af>
  4091ba:	jmp    4091bf <test_scan@@Base+0x1b7f>
  4091bc:	mov    r13,r12
  4091bf:	lea    r12,[r13+0x1]
  4091c3:	mov    rax,QWORD PTR [rsp+0x28]
  4091c8:	lea    rbx,[rax+rbp*4]
  4091cc:	add    rbp,0x1
  4091d0:	cmp    rbp,QWORD PTR [rsp]
  4091d4:	jae    409232 <test_scan@@Base+0x1bf2>
  4091d6:	mov    eax,DWORD PTR [rbx+0x8]
  4091d9:	lea    rcx,[rbx+rax*1]
  4091dd:	cmp    rcx,0xfffffffffffffff8
  4091e1:	je     409353 <test_scan@@Base+0x1d13>
  4091e7:	movsxd rdx,DWORD PTR [rbx+rax*1+0x8]
  4091ec:	mov    rcx,rax
  4091ef:	sub    rcx,rdx
  4091f2:	movzx  edx,WORD PTR [rbx+rcx*1+0x8]
  4091f7:	cmp    edx,0xc
  4091fa:	jb     40934a <test_scan@@Base+0x1d0a>
  409200:	movzx  ecx,WORD PTR [rbx+rcx*1+0x12]
  409205:	test   rcx,rcx
  409208:	je     40934a <test_scan@@Base+0x1d0a>
  40920e:	add    rax,rcx
  409211:	mov    ecx,DWORD PTR [rbx+rax*1+0x8]
  409215:	add    rcx,rax
  409218:	lea    rdi,[rbx+rcx*1]
  40921c:	add    rdi,0xc
  409220:	mov    rsi,r15
  409223:	call   4040f0 <strcmp@plt>
  409228:	add    rbx,0x4
  40922c:	test   eax,eax
  40922e:	jne    4091cc <test_scan@@Base+0x1b8c>
  409230:	jmp    4091bc <test_scan@@Base+0x1b7c>
  409232:	test   r13,r13
  409235:	je     409243 <test_scan@@Base+0x1c03>
  409237:	lea    rdi,[rip+0xe992]        # 417bd0 <_IO_stdin_used@@Base+0x2bd0>
  40923e:	jmp    40819e <test_scan@@Base+0xb5e>
  409243:	xor    ebp,ebp
  409245:	lea    r15,[rip+0xc1b5]        # 415401 <_IO_stdin_used@@Base+0x401>
  40924c:	cmp    rbp,QWORD PTR [rsp]
  409250:	jae    409bc3 <test_scan@@Base+0x2583>
  409256:	mov    rcx,QWORD PTR [rsp+0x10]
  40925b:	mov    eax,DWORD PTR [rcx+0x4]
  40925e:	lea    rcx,[rcx+rax*1]
  409262:	cmp    rcx,0xfffffffffffffffc
  409266:	je     409353 <test_scan@@Base+0x1d13>
  40926c:	mov    rsi,QWORD PTR [rsp+0x10]
  409271:	movsxd rdx,DWORD PTR [rsi+rax*1+0x4]
  409276:	mov    rcx,rax
  409279:	sub    rcx,rdx
  40927c:	movzx  edx,WORD PTR [rsi+rcx*1+0x4]
  409281:	cmp    edx,0xc
  409284:	jb     40934a <test_scan@@Base+0x1d0a>
  40928a:	mov    rdx,QWORD PTR [rsp+0x10]
  40928f:	movzx  ecx,WORD PTR [rdx+rcx*1+0xe]
  409294:	test   rcx,rcx
  409297:	je     40934a <test_scan@@Base+0x1d0a>
  40929d:	add    rax,rcx
  4092a0:	mov    rdx,QWORD PTR [rsp+0x10]
  4092a5:	mov    ecx,DWORD PTR [rdx+rax*1+0x4]
  4092a9:	add    rcx,rax
  4092ac:	lea    rdi,[rdx+rcx*1]
  4092b0:	add    rdi,0x8
  4092b4:	mov    rsi,r15
  4092b7:	call   4040f0 <strcmp@plt>
  4092bc:	test   eax,eax
  4092be:	je     4092d9 <test_scan@@Base+0x1c99>
  4092c0:	add    rbp,0x1
  4092c4:	add    QWORD PTR [rsp+0x10],0x4
  4092ca:	cmp    rbp,QWORD PTR [rsp]
  4092ce:	jb     40924c <test_scan@@Base+0x1c0c>
  4092d4:	jmp    4093c6 <test_scan@@Base+0x1d86>
  4092d9:	xor    r15d,r15d
  4092dc:	lea    r12,[rip+0xc11e]        # 415401 <_IO_stdin_used@@Base+0x401>
  4092e3:	add    r15,0x1
  4092e7:	mov    rax,QWORD PTR [rsp+0x28]
  4092ec:	lea    rbx,[rax+rbp*4]
  4092f0:	add    rbp,0x1
  4092f4:	cmp    rbp,QWORD PTR [rsp]
  4092f8:	jae    409372 <test_scan@@Base+0x1d32>
  4092fa:	mov    eax,DWORD PTR [rbx+0x8]
  4092fd:	lea    rcx,[rbx+rax*1]
  409301:	cmp    rcx,0xfffffffffffffff8
  409305:	je     409353 <test_scan@@Base+0x1d13>
  409307:	movsxd rdx,DWORD PTR [rbx+rax*1+0x8]
  40930c:	mov    rcx,rax
  40930f:	sub    rcx,rdx
  409312:	movzx  edx,WORD PTR [rbx+rcx*1+0x8]
  409317:	cmp    edx,0xc
  40931a:	jb     40934a <test_scan@@Base+0x1d0a>
  40931c:	movzx  ecx,WORD PTR [rbx+rcx*1+0x12]
  409321:	test   rcx,rcx
  409324:	je     40934a <test_scan@@Base+0x1d0a>
  409326:	add    rax,rcx
  409329:	mov    ecx,DWORD PTR [rbx+rax*1+0x8]
  40932d:	add    rcx,rax
  409330:	lea    rdi,[rbx+rcx*1]
  409334:	add    rdi,0xc
  409338:	mov    rsi,r12
  40933b:	call   4040f0 <strcmp@plt>
  409340:	add    rbx,0x4
  409344:	test   eax,eax
  409346:	jne    4092f0 <test_scan@@Base+0x1cb0>
  409348:	jmp    4092e3 <test_scan@@Base+0x1ca3>
  40934a:	lea    rdi,[rip+0xd090]        # 4163e1 <_IO_stdin_used@@Base+0x13e1>
  409351:	jmp    40935a <test_scan@@Base+0x1d1a>
  409353:	lea    rdi,[rip+0xcb0c]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  40935a:	lea    rsi,[rip+0xcb2b]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  409361:	lea    rcx,[rip+0xd028]        # 416390 <_IO_stdin_used@@Base+0x1390>
  409368:	mov    edx,0x2bb
  40936d:	call   4040a0 <__assert_fail@plt>
  409372:	cmp    r15,0x2
  409376:	jne    4093c6 <test_scan@@Base+0x1d86>
  409378:	mov    rax,QWORD PTR [rsp+0x70]
  40937d:	mov    eax,DWORD PTR [rax-0x4]
  409380:	test   rax,rax
  409383:	je     4093d7 <test_scan@@Base+0x1d97>
  409385:	mov    rcx,QWORD PTR [rsp+0x18]
  40938a:	mov    rdx,QWORD PTR [rsp+0xa0]
  409392:	lea    rcx,[rcx+rdx*1]
  409396:	add    rcx,QWORD PTR [rsp+0x90]
  40939e:	mov    rdx,QWORD PTR [rsp+0x8]
  4093a3:	add    rdx,rcx
  4093a6:	add    rdx,0x4
  4093aa:	xor    esi,esi
  4093ac:	cmp    rsi,rax
  4093af:	jae    409bfa <test_scan@@Base+0x25ba>
  4093b5:	cmp    BYTE PTR [rdx+rsi*1],0x6
  4093b9:	je     4093d2 <test_scan@@Base+0x1d92>
  4093bb:	add    rsi,0x1
  4093bf:	cmp    rsi,rax
  4093c2:	jb     4093ac <test_scan@@Base+0x1d6c>
  4093c4:	jmp    4093d7 <test_scan@@Base+0x1d97>
  4093c6:	lea    rdi,[rip+0xe7e3]        # 417bb0 <_IO_stdin_used@@Base+0x2bb0>
  4093cd:	jmp    40819e <test_scan@@Base+0xb5e>
  4093d2:	test   rsi,rsi
  4093d5:	je     4093e3 <test_scan@@Base+0x1da3>
  4093d7:	lea    rdi,[rip+0xe7a2]        # 417b80 <_IO_stdin_used@@Base+0x2b80>
  4093de:	jmp    40819e <test_scan@@Base+0xb5e>
  4093e3:	xor    esi,esi
  4093e5:	cmp    rsi,rax
  4093e8:	jae    409bfa <test_scan@@Base+0x25ba>
  4093ee:	cmp    BYTE PTR [rdx+rsi*1],0x1
  4093f2:	je     4093ff <test_scan@@Base+0x1dbf>
  4093f4:	add    rsi,0x1
  4093f8:	cmp    rsi,rax
  4093fb:	jb     4093e5 <test_scan@@Base+0x1da5>
  4093fd:	jmp    40946e <test_scan@@Base+0x1e2e>
  4093ff:	cmp    rsi,0x2
  409403:	jne    40946e <test_scan@@Base+0x1e2e>
  409405:	cmp    eax,0x4
  409408:	jb     409434 <test_scan@@Base+0x1df4>
  40940a:	mov    rsi,QWORD PTR [rsp+0x8]
  40940f:	add    rsi,rcx
  409412:	add    rsi,0x7
  409416:	mov    edi,0x3
  40941b:	cmp    rdi,rax
  40941e:	jae    409bfa <test_scan@@Base+0x25ba>
  409424:	cmp    BYTE PTR [rsi+rdi*1-0x3],0x1
  409429:	je     40947a <test_scan@@Base+0x1e3a>
  40942b:	add    rdi,0x1
  40942f:	cmp    rdi,rax
  409432:	jb     40941b <test_scan@@Base+0x1ddb>
  409434:	xor    esi,esi
  409436:	cmp    rsi,rax
  409439:	jae    409bfa <test_scan@@Base+0x25ba>
  40943f:	cmp    BYTE PTR [rdx+rsi*1],0x5
  409443:	je     4094ec <test_scan@@Base+0x1eac>
  409449:	add    rsi,0x1
  40944d:	cmp    rsi,rax
  409450:	jb     409436 <test_scan@@Base+0x1df6>
  409452:	xor    esi,esi
  409454:	cmp    rsi,rax
  409457:	jae    409bfa <test_scan@@Base+0x25ba>
  40945d:	cmp    BYTE PTR [rdx+rsi*1],0x2
  409461:	je     409486 <test_scan@@Base+0x1e46>
  409463:	add    rsi,0x1
  409467:	cmp    rsi,rax
  40946a:	jb     409454 <test_scan@@Base+0x1e14>
  40946c:	jmp    4094a8 <test_scan@@Base+0x1e68>
  40946e:	lea    rdi,[rip+0xe6db]        # 417b50 <_IO_stdin_used@@Base+0x2b50>
  409475:	jmp    40819e <test_scan@@Base+0xb5e>
  40947a:	lea    rdi,[rip+0xe68f]        # 417b10 <_IO_stdin_used@@Base+0x2b10>
  409481:	jmp    40819e <test_scan@@Base+0xb5e>
  409486:	cmp    rsi,0x6
  40948a:	jne    4094a8 <test_scan@@Base+0x1e68>
  40948c:	xor    esi,esi
  40948e:	cmp    rsi,rax
  409491:	jae    409bfa <test_scan@@Base+0x25ba>
  409497:	cmp    BYTE PTR [rdx+rsi*1],0x3
  40949b:	je     4094b4 <test_scan@@Base+0x1e74>
  40949d:	add    rsi,0x1
  4094a1:	cmp    rsi,rax
  4094a4:	jb     40948e <test_scan@@Base+0x1e4e>
  4094a6:	jmp    4094ec <test_scan@@Base+0x1eac>
  4094a8:	lea    rdi,[rip+0xe5f1]        # 417aa0 <_IO_stdin_used@@Base+0x2aa0>
  4094af:	jmp    40819e <test_scan@@Base+0xb5e>
  4094b4:	cmp    rsi,0x3
  4094b8:	jne    4094ec <test_scan@@Base+0x1eac>
  4094ba:	cmp    eax,0x4
  4094bd:	jb     409536 <test_scan@@Base+0x1ef6>
  4094bf:	mov    rdx,QWORD PTR [rsp+0x8]
  4094c4:	lea    rsi,[rdx+rcx*1]
  4094c8:	add    rsi,0x7
  4094cc:	mov    edx,0x3
  4094d1:	cmp    rdx,rax
  4094d4:	jae    409bfa <test_scan@@Base+0x25ba>
  4094da:	cmp    BYTE PTR [rsi+rdx*1-0x3],0x3
  4094df:	je     4094f8 <test_scan@@Base+0x1eb8>
  4094e1:	add    rdx,0x1
  4094e5:	cmp    rdx,rax
  4094e8:	jb     4094d1 <test_scan@@Base+0x1e91>
  4094ea:	jmp    409536 <test_scan@@Base+0x1ef6>
  4094ec:	lea    rdi,[rip+0xe5dd]        # 417ad0 <_IO_stdin_used@@Base+0x2ad0>
  4094f3:	jmp    40819e <test_scan@@Base+0xb5e>
  4094f8:	cmp    rdx,0x3
  4094fc:	jne    409536 <test_scan@@Base+0x1ef6>
  4094fe:	cmp    eax,0x5
  409501:	jb     409be2 <test_scan@@Base+0x25a2>
  409507:	mov    rdx,QWORD PTR [rsp+0x8]
  40950c:	add    rdx,rcx
  40950f:	add    rdx,0x8
  409513:	mov    ecx,0x4
  409518:	cmp    rcx,rax
  40951b:	jae    409bfa <test_scan@@Base+0x25ba>
  409521:	cmp    BYTE PTR [rdx+rcx*1-0x4],0x3
  409526:	je     409542 <test_scan@@Base+0x1f02>
  409528:	add    rcx,0x1
  40952c:	cmp    rcx,rax
  40952f:	jb     409518 <test_scan@@Base+0x1ed8>
  409531:	jmp    409be2 <test_scan@@Base+0x25a2>
  409536:	lea    rdi,[rip+0xe523]        # 417a60 <_IO_stdin_used@@Base+0x2a60>
  40953d:	jmp    40819e <test_scan@@Base+0xb5e>
  409542:	cmp    rcx,0x5
  409546:	jne    409be2 <test_scan@@Base+0x25a2>
  40954c:	lea    rcx,[rax-0x1]
  409550:	mov    rsi,QWORD PTR [rsp+0xa0]
  409558:	add    rsi,QWORD PTR [rsp+0x90]
  409560:	add    rsi,QWORD PTR [rsp+0x18]
  409565:	add    rsi,rax
  409568:	mov    rdx,QWORD PTR [rsp+0x8]
  40956d:	add    rdx,rsi
  409570:	add    rdx,0x3
  409574:	cmp    rcx,0xffffffffffffffff
  409578:	je     409bee <test_scan@@Base+0x25ae>
  40957e:	cmp    rcx,rax
  409581:	jae    409bfa <test_scan@@Base+0x25ba>
  409587:	add    rcx,0xffffffffffffffff
  40958b:	cmp    BYTE PTR [rdx],0x3
  40958e:	lea    rdx,[rdx-0x1]
  409592:	jne    409574 <test_scan@@Base+0x1f34>
  409594:	cmp    rcx,0x4
  409598:	jne    409bee <test_scan@@Base+0x25ae>
  40959e:	cmp    eax,0x4
  4095a1:	mov    ecx,0x4
  4095a6:	cmovb  ecx,eax
  4095a9:	cmp    ecx,0x2
  4095ac:	jb     409c19 <test_scan@@Base+0x25d9>
  4095b2:	lea    rdx,[rcx-0x1]
  4095b6:	cmp    rdx,rax
  4095b9:	jae    409bfa <test_scan@@Base+0x25ba>
  4095bf:	mov    rsi,QWORD PTR [rsp+0x70]
  4095c4:	cmp    BYTE PTR [rsi+rdx*1],0x3
  4095c8:	je     409628 <test_scan@@Base+0x1fe8>
  4095ca:	cmp    rdx,0x2
  4095ce:	jb     409c19 <test_scan@@Base+0x25d9>
  4095d4:	lea    rdx,[rcx-0x2]
  4095d8:	cmp    rdx,rax
  4095db:	jae    409bfa <test_scan@@Base+0x25ba>
  4095e1:	mov    rsi,QWORD PTR [rsp+0x70]
  4095e6:	cmp    BYTE PTR [rsi+rdx*1],0x3
  4095ea:	je     409628 <test_scan@@Base+0x1fe8>
  4095ec:	cmp    rdx,0x2
  4095f0:	jb     409c19 <test_scan@@Base+0x25d9>
  4095f6:	lea    rdx,[rcx-0x3]
  4095fa:	cmp    rdx,rax
  4095fd:	jae    409bfa <test_scan@@Base+0x25ba>
  409603:	mov    rsi,QWORD PTR [rsp+0x70]
  409608:	cmp    BYTE PTR [rsi+rdx*1],0x3
  40960c:	je     409628 <test_scan@@Base+0x1fe8>
  40960e:	cmp    rdx,0x2
  409612:	jb     409c19 <test_scan@@Base+0x25d9>
  409618:	add    rcx,0xfffffffffffffffc
  40961c:	mov    rdx,rcx
  40961f:	cmp    rcx,rax
  409622:	jae    409bfa <test_scan@@Base+0x25ba>
  409628:	cmp    rdx,0x3
  40962c:	jne    409c19 <test_scan@@Base+0x25d9>
  409632:	mov    rax,QWORD PTR [rsp+0x50]
  409637:	mov    ecx,DWORD PTR [rax-0x4]
  40963a:	mov    QWORD PTR [rsp+0x10],rcx
  40963f:	add    rax,0xfffffffffffffffc
  409643:	mov    QWORD PTR [rsp+0x50],rax
  409648:	mov    rax,QWORD PTR [rsp+0x98]
  409650:	mov    rcx,QWORD PTR [rsp+0xa8]
  409658:	lea    r12,[rcx+rax*1]
  40965c:	add    r12,QWORD PTR [rsp+0x18]
  409661:	mov    rax,QWORD PTR [rsp+0x8]
  409666:	lea    rbx,[rax+r12*1]
  40966a:	add    rbx,0x8
  40966e:	xor    ebp,ebp
  409670:	lea    r15,[rip+0xbe48]        # 4154bf <_IO_stdin_used@@Base+0x4bf>
  409677:	cmp    rbp,QWORD PTR [rsp+0x10]
  40967c:	jae    409698 <test_scan@@Base+0x2058>
  40967e:	mov    edi,DWORD PTR [rbx-0x4]
  409681:	add    rdi,rbx
  409684:	mov    rsi,r15
  409687:	call   4040f0 <strcmp@plt>
  40968c:	add    rbp,0x1
  409690:	add    rbx,0x4
  409694:	test   eax,eax
  409696:	jne    409677 <test_scan@@Base+0x2037>
  409698:	mov    rax,QWORD PTR [rsp+0x8]
  40969d:	lea    rbx,[rax+r12*1]
  4096a1:	add    rbx,0x8
  4096a5:	xor    ebp,ebp
  4096a7:	lea    r15,[rip+0xbe11]        # 4154bf <_IO_stdin_used@@Base+0x4bf>
  4096ae:	cmp    rbp,QWORD PTR [rsp+0x10]
  4096b3:	jae    4096cf <test_scan@@Base+0x208f>
  4096b5:	mov    edi,DWORD PTR [rbx-0x4]
  4096b8:	add    rdi,rbx
  4096bb:	mov    rsi,r15
  4096be:	call   4040f0 <strcmp@plt>
  4096c3:	add    rbp,0x1
  4096c7:	add    rbx,0x4
  4096cb:	test   eax,eax
  4096cd:	jne    4096ae <test_scan@@Base+0x206e>
  4096cf:	mov    rax,QWORD PTR [rsp+0x8]
  4096d4:	lea    rbx,[rax+r12*1]
  4096d8:	add    rbx,0x8
  4096dc:	xor    r15d,r15d
  4096df:	cmp    r15,QWORD PTR [rsp+0x10]
  4096e4:	jae    409730 <test_scan@@Base+0x20f0>
  4096e6:	mov    eax,DWORD PTR [rbx-0x4]
  4096e9:	lea    rdi,[rbx+rax*1]
  4096ed:	mov    r13d,DWORD PTR [rbx+rax*1-0x4]
  4096f2:	xor    ebp,ebp
  4096f4:	cmp    r13d,0x4
  4096f8:	mov    edx,0x4
  4096fd:	cmovb  edx,r13d
  409701:	seta   bpl
  409705:	lea    rsi,[rip+0xbdb3]        # 4154bf <_IO_stdin_used@@Base+0x4bf>
  40970c:	call   404050 <strncmp@plt>
  409711:	cmp    eax,0x1
  409714:	sbb    ecx,ecx
  409716:	or     ecx,eax
  409718:	test   eax,eax
  40971a:	cmovne ebp,ecx
  40971d:	cmp    r13d,0x4
  409721:	cmovb  ebp,ecx
  409724:	add    r15,0x1
  409728:	add    rbx,0x4
  40972c:	test   ebp,ebp
  40972e:	jne    4096df <test_scan@@Base+0x209f>
  409730:	mov    rax,QWORD PTR [rsp+0x8]
  409735:	lea    rbx,[rax+r12*1]
  409739:	add    rbx,0x8
  40973d:	xor    r13d,r13d
  409740:	lea    r15,[rip+0xbd78]        # 4154bf <_IO_stdin_used@@Base+0x4bf>
  409747:	cmp    r13,QWORD PTR [rsp+0x10]
  40974c:	jae    409794 <test_scan@@Base+0x2154>
  40974e:	mov    eax,DWORD PTR [rbx-0x4]
  409751:	lea    rdi,[rbx+rax*1]
  409755:	mov    r12d,DWORD PTR [rbx+rax*1-0x4]
  40975a:	xor    ebp,ebp
  40975c:	cmp    r12d,0x4
  409760:	mov    edx,0x4
  409765:	cmovb  edx,r12d
  409769:	seta   bpl
  40976d:	mov    rsi,r15
  409770:	call   404050 <strncmp@plt>
  409775:	cmp    eax,0x1
  409778:	sbb    ecx,ecx
  40977a:	or     ecx,eax
  40977c:	test   eax,eax
  40977e:	cmovne ebp,ecx
  409781:	cmp    r12d,0x4
  409785:	cmovb  ebp,ecx
  409788:	add    r13,0x1
  40978c:	add    rbx,0x4
  409790:	test   ebp,ebp
  409792:	jne    409747 <test_scan@@Base+0x2107>
  409794:	mov    rax,QWORD PTR [rsp+0xa8]
  40979c:	mov    rcx,QWORD PTR [rsp+0x10]
  4097a1:	lea    r12,[rax+rcx*4]
  4097a5:	add    r12,QWORD PTR [rsp+0x98]
  4097ad:	add    r12,QWORD PTR [rsp+0x18]
  4097b2:	mov    rax,QWORD PTR [rsp+0x8]
  4097b7:	lea    rbp,[rax+r12*1]
  4097bb:	add    rbp,0x4
  4097bf:	lea    rbx,[rcx-0x1]
  4097c3:	lea    r15,[rip+0xbcf5]        # 4154bf <_IO_stdin_used@@Base+0x4bf>
  4097ca:	cmp    rbx,0xffffffffffffffff
  4097ce:	je     4097f5 <test_scan@@Base+0x21b5>
  4097d0:	cmp    rbx,QWORD PTR [rsp+0x10]
  4097d5:	jae    409c25 <test_scan@@Base+0x25e5>
  4097db:	mov    edi,DWORD PTR [rbp-0x4]
  4097de:	add    rdi,rbp
  4097e1:	lea    rbp,[rbp-0x4]
  4097e5:	mov    rsi,r15
  4097e8:	call   4040f0 <strcmp@plt>
  4097ed:	add    rbx,0xffffffffffffffff
  4097f1:	test   eax,eax
  4097f3:	jne    4097ca <test_scan@@Base+0x218a>
  4097f5:	mov    rax,QWORD PTR [rsp+0x8]
  4097fa:	lea    rbx,[rax+r12*1]
  4097fe:	add    rbx,0x4
  409802:	mov    rax,QWORD PTR [rsp+0x10]
  409807:	lea    rbp,[rax-0x1]
  40980b:	lea    r15,[rip+0xbcad]        # 4154bf <_IO_stdin_used@@Base+0x4bf>
  409812:	cmp    rbp,0xffffffffffffffff
  409816:	je     40983d <test_scan@@Base+0x21fd>
  409818:	cmp    rbp,QWORD PTR [rsp+0x10]
  40981d:	jae    409c25 <test_scan@@Base+0x25e5>
  409823:	mov    edi,DWORD PTR [rbx-0x4]
  409826:	add    rdi,rbx
  409829:	lea    rbx,[rbx-0x4]
  40982d:	mov    rsi,r15
  409830:	call   4040f0 <strcmp@plt>
  409835:	add    rbp,0xffffffffffffffff
  409839:	test   eax,eax
  40983b:	jne    409812 <test_scan@@Base+0x21d2>
  40983d:	mov    rax,QWORD PTR [rsp+0x10]
  409842:	lea    rcx,[rax*4+0x0]
  40984a:	mov    QWORD PTR [rsp+0x18],rcx
  40984f:	lea    r13,[rax-0x1]
  409853:	xor    ebp,ebp
  409855:	mov    rbx,QWORD PTR [rsp+0x50]
  40985a:	cmp    QWORD PTR [rsp+0x18],rbp
  40985f:	je     4098cd <test_scan@@Base+0x228d>
  409861:	cmp    r13,QWORD PTR [rsp+0x10]
  409866:	jae    409c25 <test_scan@@Base+0x25e5>
  40986c:	mov    rdx,QWORD PTR [rsp+0x18]
  409871:	lea    rax,[rbx+rdx*1]
  409875:	mov    ecx,DWORD PTR [rbx+rdx*1]
  409878:	lea    rdi,[rcx+rax*1]
  40987c:	add    rdi,0x4
  409880:	add    rcx,rdx
  409883:	mov    r12d,DWORD PTR [rbx+rcx*1]
  409887:	xor    r15d,r15d
  40988a:	cmp    r12d,0x4
  40988e:	mov    edx,0x4
  409893:	cmovb  edx,r12d
  409897:	seta   r15b
  40989b:	lea    rsi,[rip+0xbc1d]        # 4154bf <_IO_stdin_used@@Base+0x4bf>
  4098a2:	call   404050 <strncmp@plt>
  4098a7:	cmp    eax,0x1
  4098aa:	sbb    ecx,ecx
  4098ac:	or     ecx,eax
  4098ae:	test   eax,eax
  4098b0:	cmovne r15d,ecx
  4098b4:	cmp    r12d,0x4
  4098b8:	cmovb  r15d,ecx
  4098bc:	add    rbx,0xfffffffffffffffc
  4098c0:	add    rbp,0x4
  4098c4:	add    r13,0xffffffffffffffff
  4098c8:	test   r15d,r15d
  4098cb:	jne    40985a <test_scan@@Base+0x221a>
  4098cd:	mov    rax,QWORD PTR [rsp+0x10]
  4098d2:	lea    r13,[rax-0x1]
  4098d6:	xor    r12d,r12d
  4098d9:	cmp    QWORD PTR [rsp+0x18],r12
  4098de:	je     409953 <test_scan@@Base+0x2313>
  4098e0:	cmp    r13,QWORD PTR [rsp+0x10]
  4098e5:	jae    409c25 <test_scan@@Base+0x25e5>
  4098eb:	mov    rbp,QWORD PTR [rsp+0x50]
  4098f0:	mov    rdx,QWORD PTR [rsp+0x18]
  4098f5:	lea    rax,[rdx+rbp*1]
  4098f9:	mov    ecx,DWORD PTR [rbp+rdx*1+0x0]
  4098fd:	lea    rdi,[rcx+rax*1]
  409901:	add    rdi,0x4
  409905:	add    rcx,rdx
  409908:	mov    r15d,DWORD PTR [rbp+rcx*1+0x0]
  40990d:	xor    ebx,ebx
  40990f:	cmp    r15d,0x4
  409913:	mov    edx,0x4
  409918:	cmovb  edx,r15d
  40991c:	seta   bl
  40991f:	lea    rsi,[rip+0xbb99]        # 4154bf <_IO_stdin_used@@Base+0x4bf>
  409926:	call   404050 <strncmp@plt>
  40992b:	cmp    eax,0x1
  40992e:	sbb    ecx,ecx
  409930:	or     ecx,eax
  409932:	test   eax,eax
  409934:	cmovne ebx,ecx
  409937:	cmp    r15d,0x4
  40993b:	cmovb  ebx,ecx
  40993e:	add    rbp,0xfffffffffffffffc
  409942:	mov    QWORD PTR [rsp+0x50],rbp
  409947:	add    r12,0x4
  40994b:	add    r13,0xffffffffffffffff
  40994f:	test   ebx,ebx
  409951:	jne    4098d9 <test_scan@@Base+0x2299>
  409953:	mov    rax,QWORD PTR [rsp+0x8]
  409958:	mov    rcx,QWORD PTR [rsp+0x40]
  40995d:	add    rax,rcx
  409960:	add    rax,0x4
  409964:	xor    ecx,ecx
  409966:	xor    edx,edx
  409968:	cmp    rdx,QWORD PTR [rsp]
  40996c:	jae    409bc3 <test_scan@@Base+0x2583>
  409972:	mov    esi,DWORD PTR [rax+rdx*4]
  409975:	lea    rdi,[rax+rsi*1]
  409979:	cmp    rdi,rcx
  40997c:	je     409ba4 <test_scan@@Base+0x2564>
  409982:	movsxd rbp,DWORD PTR [rdi+rdx*4]
  409986:	mov    rdi,rsi
  409989:	sub    rdi,rbp
  40998c:	add    rdi,rax
  40998f:	movzx  ebp,WORD PTR [rdi+rdx*4]
  409993:	cmp    ebp,0xa
  409996:	jb     4099b1 <test_scan@@Base+0x2371>
  409998:	movzx  edi,WORD PTR [rdi+rdx*4+0x8]
  40999d:	test   rdi,rdi
  4099a0:	je     4099b1 <test_scan@@Base+0x2371>
  4099a2:	add    rsi,rdi
  4099a5:	add    rsi,rax
  4099a8:	movzx  esi,WORD PTR [rsi+rdx*4]
  4099ac:	cmp    esi,0xd
  4099af:	je     4099bf <test_scan@@Base+0x237f>
  4099b1:	add    rdx,0x1
  4099b5:	add    rcx,0xfffffffffffffffc
  4099b9:	cmp    rdx,QWORD PTR [rsp]
  4099bd:	jb     409968 <test_scan@@Base+0x2328>
  4099bf:	mov    eax,0x1
  4099c4:	xor    ecx,ecx
  4099c6:	cmp    rax,QWORD PTR [rsp]
  4099ca:	jae    409bc3 <test_scan@@Base+0x2583>
  4099d0:	mov    rsi,r14
  4099d3:	mov    edx,DWORD PTR [r14+rax*4-0x4]
  4099d8:	lea    rsi,[r14+rdx*1]
  4099dc:	cmp    rsi,rcx
  4099df:	je     409ba4 <test_scan@@Base+0x2564>
  4099e5:	movsxd rdi,DWORD PTR [rsi+rax*4-0x4]
  4099ea:	mov    rsi,rdx
  4099ed:	sub    rsi,rdi
  4099f0:	add    rsi,r14
  4099f3:	movzx  edi,WORD PTR [rsi+rax*4-0x4]
  4099f8:	cmp    edi,0xa
  4099fb:	jb     409a17 <test_scan@@Base+0x23d7>
  4099fd:	movzx  esi,WORD PTR [rsi+rax*4+0x4]
  409a02:	test   rsi,rsi
  409a05:	je     409a17 <test_scan@@Base+0x23d7>
  409a07:	add    rdx,rsi
  409a0a:	add    rdx,r14
  409a0d:	movzx  edx,WORD PTR [rdx+rax*4-0x4]
  409a12:	cmp    edx,0x2a
  409a15:	je     409a25 <test_scan@@Base+0x23e5>
  409a17:	add    rax,0x1
  409a1b:	add    rcx,0xfffffffffffffffc
  409a1f:	cmp    rax,QWORD PTR [rsp]
  409a23:	jb     4099c6 <test_scan@@Base+0x2386>
  409a25:	mov    rax,QWORD PTR [rsp]
  409a29:	lea    rax,[rax-0x1]
  409a2d:	xor    ecx,ecx
  409a2f:	mov    edx,0xffffffff
  409a34:	mov    rsi,QWORD PTR [rsp+0x68]
  409a39:	add    rsi,rcx
  409a3c:	je     409aba <test_scan@@Base+0x247a>
  409a3e:	cmp    rax,QWORD PTR [rsp]
  409a42:	jae    409bc3 <test_scan@@Base+0x2583>
  409a48:	mov    rsi,QWORD PTR [rsp+0x38]
  409a4d:	mov    ebp,DWORD PTR [rsi+rcx*1]
  409a50:	mov    rsi,QWORD PTR [rsp+0x60]
  409a55:	sub    rsi,rbp
  409a58:	cmp    rsi,rcx
  409a5b:	je     409ba4 <test_scan@@Base+0x2564>
  409a61:	mov    rbx,QWORD PTR [rsp+0x38]
  409a66:	lea    rsi,[rbx+rbp*1]
  409a6a:	movsxd rdi,DWORD PTR [rcx+rsi*1]
  409a6e:	mov    rsi,rbp
  409a71:	sub    rsi,rdi
  409a74:	add    rsi,rbx
  409a77:	movzx  ebx,WORD PTR [rcx+rsi*1]
  409a7b:	mov    edi,0x1
  409a80:	cmp    ebx,0xa
  409a83:	jb     409aaa <test_scan@@Base+0x246a>
  409a85:	movzx  esi,WORD PTR [rcx+rsi*1+0x8]
  409a8a:	test   rsi,rsi
  409a8d:	je     409aaa <test_scan@@Base+0x246a>
  409a8f:	add    rbp,rsi
  409a92:	add    rbp,QWORD PTR [rsp+0x38]
  409a97:	movzx  esi,WORD PTR [rcx+rbp*1]
  409a9b:	xor    edi,edi
  409a9d:	cmp    esi,0x1
  409aa0:	setne  dil
  409aa4:	test   si,si
  409aa7:	cmovle edi,edx
  409aaa:	add    rcx,0xfffffffffffffffc
  409aae:	add    rax,0xffffffffffffffff
  409ab2:	test   edi,edi
  409ab4:	jne    409a34 <test_scan@@Base+0x23f4>
  409aba:	mov    rax,QWORD PTR [rsp]
  409abe:	mov    rcx,rax
  409ac1:	cmp    ecx,0x2
  409ac4:	mov    eax,0x2
  409ac9:	cmovb  eax,ecx
  409acc:	xor    ebp,ebp
  409ace:	test   eax,eax
  409ad0:	je     4081a8 <test_scan@@Base+0xb68>
  409ad6:	lea    rcx,[rax-0x1]
  409ada:	cmp    rcx,QWORD PTR [rsp]
  409ade:	jae    409bc3 <test_scan@@Base+0x2583>
  409ae4:	mov    rdx,QWORD PTR [rsp+0x78]
  409ae9:	lea    rsi,[rdx+rcx*4]
  409aed:	mov    edx,DWORD PTR [rdx+rcx*4]
  409af0:	add    rdx,rsi
  409af3:	je     409ba4 <test_scan@@Base+0x2564>
  409af9:	movsxd rsi,DWORD PTR [rdx]
  409afc:	mov    rdi,rdx
  409aff:	sub    rdi,rsi
  409b02:	movzx  edi,WORD PTR [rdi]
  409b05:	cmp    edi,0xa
  409b08:	jb     409b24 <test_scan@@Base+0x24e4>
  409b0a:	neg    rsi
  409b0d:	movzx  esi,WORD PTR [rdx+rsi*1+0x8]
  409b12:	test   rsi,rsi
  409b15:	je     409b24 <test_scan@@Base+0x24e4>
  409b17:	movzx  edx,WORD PTR [rdx+rsi*1]
  409b1b:	cmp    edx,0x2a
  409b1e:	je     4081a8 <test_scan@@Base+0xb68>
  409b24:	test   rcx,rcx
  409b27:	je     4081a8 <test_scan@@Base+0xb68>
  409b2d:	lea    rcx,[rax-0x2]
  409b31:	cmp    rcx,QWORD PTR [rsp]
  409b35:	jae    409bc3 <test_scan@@Base+0x2583>
  409b3b:	mov    rdx,QWORD PTR [rsp+0x78]
  409b40:	lea    rsi,[rdx+rcx*4]
  409b44:	mov    edx,DWORD PTR [rdx+rcx*4]
  409b47:	add    rdx,rsi
  409b4a:	je     409ba4 <test_scan@@Base+0x2564>
  409b4c:	movsxd rsi,DWORD PTR [rdx]
  409b4f:	mov    rdi,rdx
  409b52:	sub    rdi,rsi
  409b55:	movzx  edi,WORD PTR [rdi]
  409b58:	cmp    edi,0xa
  409b5b:	jb     409b77 <test_scan@@Base+0x2537>
  409b5d:	neg    rsi
  409b60:	movzx  esi,WORD PTR [rdx+rsi*1+0x8]
  409b65:	test   rsi,rsi
  409b68:	je     409b77 <test_scan@@Base+0x2537>
  409b6a:	movzx  edx,WORD PTR [rdx+rsi*1]
  409b6e:	cmp    edx,0x2a
  409b71:	je     4081a8 <test_scan@@Base+0xb68>
  409b77:	test   rcx,rcx
  409b7a:	je     4081a8 <test_scan@@Base+0xb68>
  409b80:	add    rax,0xfffffffffffffffd
  409b84:	cmp    rax,QWORD PTR [rsp]
  409b88:	jae    409bc3 <test_scan@@Base+0x2583>
  409b8a:	mov    rdx,QWORD PTR [rsp+0x78]
  409b8f:	lea    rcx,[rdx+rax*4]
  409b93:	mov    eax,DWORD PTR [rdx+rax*4]
  409b96:	add    rax,rcx
  409b99:	mov    r14,QWORD PTR [rsp+0x8]
  409b9e:	jne    407c85 <test_scan@@Base+0x645>
  409ba4:	lea    rdi,[rip+0xc2bb]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  409bab:	lea    rsi,[rip+0xc2da]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  409bb2:	lea    rcx,[rip+0xc34f]        # 415f08 <_IO_stdin_used@@Base+0xf08>
  409bb9:	mov    edx,0x2b9
  409bbe:	call   4040a0 <__assert_fail@plt>
  409bc3:	lea    rdi,[rip+0xc891]        # 41645b <_IO_stdin_used@@Base+0x145b>
  409bca:	lea    rsi,[rip+0xc2bb]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  409bd1:	lea    rcx,[rip+0xc9e4]        # 4165bc <_IO_stdin_used@@Base+0x15bc>
  409bd8:	mov    edx,0x2b5
  409bdd:	call   4040a0 <__assert_fail@plt>
  409be2:	lea    rdi,[rip+0xde37]        # 417a20 <_IO_stdin_used@@Base+0x2a20>
  409be9:	jmp    40819e <test_scan@@Base+0xb5e>
  409bee:	lea    rdi,[rip+0xddeb]        # 4179e0 <_IO_stdin_used@@Base+0x29e0>
  409bf5:	jmp    40819e <test_scan@@Base+0xb5e>
  409bfa:	lea    rdi,[rip+0xc85a]        # 41645b <_IO_stdin_used@@Base+0x145b>
  409c01:	lea    rsi,[rip+0xc88a]        # 416492 <_IO_stdin_used@@Base+0x1492>
  409c08:	lea    rcx,[rip+0xc905]        # 416514 <_IO_stdin_used@@Base+0x1514>
  409c0f:	mov    edx,0x18b
  409c14:	call   4040a0 <__assert_fail@plt>
  409c19:	lea    rdi,[rip+0xdd80]        # 4179a0 <_IO_stdin_used@@Base+0x29a0>
  409c20:	jmp    40819e <test_scan@@Base+0xb5e>
  409c25:	lea    rdi,[rip+0xc82f]        # 41645b <_IO_stdin_used@@Base+0x145b>
  409c2c:	lea    rsi,[rip+0xc85f]        # 416492 <_IO_stdin_used@@Base+0x1492>
  409c33:	lea    rcx,[rip+0xc9e5]        # 41661f <_IO_stdin_used@@Base+0x161f>
  409c3a:	mov    edx,0x6c
  409c3f:	call   4040a0 <__assert_fail@plt>
  409c44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c4e:	xchg   ax,ax

0000000000409c50 <test_basic_sort@@Base>:
  409c50:	push   rbp
  409c51:	push   rbx
  409c52:	sub    rsp,0x18
  409c56:	mov    rbx,rdi
  409c59:	mov    BYTE PTR [rsp+0xe],0x2
  409c5e:	mov    WORD PTR [rsp+0xc],0x304
  409c65:	mov    DWORD PTR [rsp+0x8],0x3010706
  409c6d:	call   40e610 <flatcc_builder_reset@@Base>
  409c72:	lea    rsi,[rip+0xb4cf]        # 415148 <_IO_stdin_used@@Base+0x148>
  409c79:	xor    edx,edx
  409c7b:	xor    ecx,ecx
  409c7d:	mov    rdi,rbx
  409c80:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  409c85:	test   eax,eax
  409c87:	jne    409c96 <test_basic_sort@@Base+0x46>
  409c89:	mov    esi,0x24
  409c8e:	mov    rdi,rbx
  409c91:	call   410480 <flatcc_builder_start_table@@Base>
  409c96:	lea    rsi,[rip+0xb4ef]        # 41518c <_IO_stdin_used@@Base+0x18c>
  409c9d:	mov    rdi,rbx
  409ca0:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  409ca5:	test   eax,eax
  409ca7:	je     409cbf <test_basic_sort@@Base+0x6f>
  409ca9:	mov    ebp,eax
  409cab:	mov    esi,0x3
  409cb0:	mov    rdi,rbx
  409cb3:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  409cb8:	test   rax,rax
  409cbb:	je     409cbf <test_basic_sort@@Base+0x6f>
  409cbd:	mov    DWORD PTR [rax],ebp
  409cbf:	lea    rsi,[rsp+0x8]
  409cc4:	mov    edx,0x7
  409cc9:	mov    ecx,0x1
  409cce:	mov    r8d,0x1
  409cd4:	mov    r9d,0xffffffff
  409cda:	mov    rdi,rbx
  409cdd:	call   411020 <flatcc_builder_create_vector@@Base>
  409ce2:	test   eax,eax
  409ce4:	je     409cfc <test_basic_sort@@Base+0xac>
  409ce6:	mov    ebp,eax
  409ce8:	mov    esi,0x5
  409ced:	mov    rdi,rbx
  409cf0:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  409cf5:	test   rax,rax
  409cf8:	je     409cfc <test_basic_sort@@Base+0xac>
  409cfa:	mov    DWORD PTR [rax],ebp
  409cfc:	lea    rsi,[rip+0xb435]        # 415138 <_IO_stdin_used@@Base+0x138>
  409d03:	mov    edx,0x1
  409d08:	mov    rdi,rbx
  409d0b:	call   410e20 <flatcc_builder_check_required@@Base>
  409d10:	test   eax,eax
  409d12:	je     409fcb <test_basic_sort@@Base+0x37b>
  409d18:	mov    rdi,rbx
  409d1b:	call   410e90 <flatcc_builder_end_table@@Base>
  409d20:	mov    rdi,rbx
  409d23:	mov    esi,eax
  409d25:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  409d2a:	lea    rsi,[rsp+0x10]
  409d2f:	mov    rdi,rbx
  409d32:	call   412a50 <flatcc_builder_get_direct_buffer@@Base>
  409d37:	test   rax,rax
  409d3a:	je     409fac <test_basic_sort@@Base+0x35c>
  409d40:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  409d47:	jne    409fac <test_basic_sort@@Base+0x35c>
  409d4d:	mov    edx,DWORD PTR [rax]
  409d4f:	mov    rcx,rax
  409d52:	add    rcx,rdx
  409d55:	movsxd rax,DWORD PTR [rax+rdx*1]
  409d59:	mov    rdx,rcx
  409d5c:	sub    rdx,rax
  409d5f:	movzx  edx,WORD PTR [rdx]
  409d62:	cmp    edx,0xf
  409d65:	jbe    409f8d <test_basic_sort@@Base+0x33d>
  409d6b:	neg    rax
  409d6e:	movzx  edx,WORD PTR [rcx+rax*1+0xe]
  409d73:	test   rdx,rdx
  409d76:	je     409f8d <test_basic_sort@@Base+0x33d>
  409d7c:	lea    rax,[rcx+rdx*1]
  409d80:	mov    ecx,DWORD PTR [rcx+rdx*1]
  409d83:	mov    r8d,DWORD PTR [rcx+rax*1]
  409d87:	test   r8,r8
  409d8a:	je     409f8d <test_basic_sort@@Base+0x33d>
  409d90:	add    rax,rcx
  409d93:	add    rax,0x4
  409d97:	lea    r9,[r8-0x1]
  409d9b:	shr    r8,1
  409d9e:	xchg   ax,ax
  409da0:	lea    rbp,[r8+r8*1]
  409da4:	cmp    rbp,r9
  409da7:	ja     409e0d <test_basic_sort@@Base+0x1bd>
  409da9:	mov    rsi,r8
  409dac:	nop    DWORD PTR [rax+0x0]
  409db0:	mov    ebx,DWORD PTR [rax-0x4]
  409db3:	cmp    rbp,r9
  409db6:	jae    409dda <test_basic_sort@@Base+0x18a>
  409db8:	cmp    rbp,rbx
  409dbb:	jae    409f6e <test_basic_sort@@Base+0x31e>
  409dc1:	mov    rdi,rbp
  409dc4:	or     rdi,0x1
  409dc8:	cmp    rdi,rbx
  409dcb:	jae    409f6e <test_basic_sort@@Base+0x31e>
  409dd1:	movzx  ecx,BYTE PTR [rax+rbp*1]
  409dd5:	cmp    cl,BYTE PTR [rax+rdi*1]
  409dd8:	jb     409ddd <test_basic_sort@@Base+0x18d>
  409dda:	mov    rdi,rbp
  409ddd:	cmp    rsi,rbx
  409de0:	jae    409f6e <test_basic_sort@@Base+0x31e>
  409de6:	cmp    rdi,rbx
  409de9:	jae    409f6e <test_basic_sort@@Base+0x31e>
  409def:	movzx  ebx,BYTE PTR [rax+rsi*1]
  409df3:	movzx  edx,BYTE PTR [rax+rdi*1]
  409df7:	cmp    bl,dl
  409df9:	jae    409e0d <test_basic_sort@@Base+0x1bd>
  409dfb:	mov    BYTE PTR [rax+rdi*1],bl
  409dfe:	mov    BYTE PTR [rax+rsi*1],dl
  409e01:	lea    rbp,[rdi+rdi*1]
  409e05:	mov    rsi,rdi
  409e08:	cmp    rbp,r9
  409e0b:	jbe    409db0 <test_basic_sort@@Base+0x160>
  409e0d:	test   r8,r8
  409e10:	lea    r8,[r8-0x1]
  409e14:	jne    409da0 <test_basic_sort@@Base+0x150>
  409e16:	jmp    409e9d <test_basic_sort@@Base+0x24d>
  409e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  409e20:	mov    cl,BYTE PTR [rax+r9*1]
  409e24:	mov    dl,BYTE PTR [rax]
  409e26:	mov    BYTE PTR [rax+r9*1],dl
  409e2a:	mov    BYTE PTR [rax],cl
  409e2c:	add    r9,0xffffffffffffffff
  409e30:	xor    edi,edi
  409e32:	xor    edx,edx
  409e34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e3e:	xchg   ax,ax
  409e40:	mov    ebp,DWORD PTR [rax-0x4]
  409e43:	cmp    rdi,r9
  409e46:	jae    409e6a <test_basic_sort@@Base+0x21a>
  409e48:	cmp    rdi,rbp
  409e4b:	jae    409f6e <test_basic_sort@@Base+0x31e>
  409e51:	mov    rsi,rdi
  409e54:	or     rsi,0x1
  409e58:	cmp    rsi,rbp
  409e5b:	jae    409f6e <test_basic_sort@@Base+0x31e>
  409e61:	movzx  ecx,BYTE PTR [rax+rdi*1]
  409e65:	cmp    cl,BYTE PTR [rax+rsi*1]
  409e68:	jb     409e6d <test_basic_sort@@Base+0x21d>
  409e6a:	mov    rsi,rdi
  409e6d:	cmp    rdx,rbp
  409e70:	jae    409f6e <test_basic_sort@@Base+0x31e>
  409e76:	cmp    rsi,rbp
  409e79:	jae    409f6e <test_basic_sort@@Base+0x31e>
  409e7f:	movzx  ebx,BYTE PTR [rax+rdx*1]
  409e83:	movzx  ecx,BYTE PTR [rax+rsi*1]
  409e87:	cmp    bl,cl
  409e89:	jae    409e9d <test_basic_sort@@Base+0x24d>
  409e8b:	mov    BYTE PTR [rax+rsi*1],bl
  409e8e:	mov    BYTE PTR [rax+rdx*1],cl
  409e91:	lea    rdi,[rsi+rsi*1]
  409e95:	mov    rdx,rsi
  409e98:	cmp    rdi,r9
  409e9b:	jbe    409e40 <test_basic_sort@@Base+0x1f0>
  409e9d:	test   r9,r9
  409ea0:	jne    409e20 <test_basic_sort@@Base+0x1d0>
  409ea6:	cmp    DWORD PTR [rax-0x4],0x7
  409eaa:	jne    409f8d <test_basic_sort@@Base+0x33d>
  409eb0:	xor    ecx,ecx
  409eb2:	lea    rdx,[rip+0xb265]        # 41511e <_IO_stdin_used@@Base+0x11e>
  409eb9:	nop    DWORD PTR [rax+0x0]
  409ec0:	cmp    rcx,0x7
  409ec4:	jae    409f6e <test_basic_sort@@Base+0x31e>
  409eca:	mov    bl,BYTE PTR [rax+rcx*1]
  409ecd:	cmp    bl,BYTE PTR [rcx+rdx*1]
  409ed0:	jne    409f56 <test_basic_sort@@Base+0x306>
  409ed6:	mov    ebp,0x6
  409edb:	xor    esi,esi
  409edd:	nop    DWORD PTR [rax]
  409ee0:	mov    rdi,rbp
  409ee3:	sub    rdi,rsi
  409ee6:	shr    rdi,1
  409ee9:	add    rdi,rsi
  409eec:	cmp    rdi,0x7
  409ef0:	jae    409f6e <test_basic_sort@@Base+0x31e>
  409ef2:	cmp    BYTE PTR [rax+rdi*1],bl
  409ef5:	jb     409f10 <test_basic_sort@@Base+0x2c0>
  409ef7:	mov    rbp,rdi
  409efa:	cmp    rbp,rsi
  409efd:	ja     409ee0 <test_basic_sort@@Base+0x290>
  409eff:	jmp    409f1c <test_basic_sort@@Base+0x2cc>
  409f01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  409f10:	add    rdi,0x1
  409f14:	mov    rsi,rdi
  409f17:	cmp    rbp,rsi
  409f1a:	ja     409ee0 <test_basic_sort@@Base+0x290>
  409f1c:	jne    409f4d <test_basic_sort@@Base+0x2fd>
  409f1e:	cmp    rsi,0x7
  409f22:	jae    409f6e <test_basic_sort@@Base+0x31e>
  409f24:	cmp    BYTE PTR [rax+rsi*1],bl
  409f27:	jne    409f4d <test_basic_sort@@Base+0x2fd>
  409f29:	mov    bl,0x2
  409f2b:	cmp    cl,0x3
  409f2e:	je     409f32 <test_basic_sort@@Base+0x2e2>
  409f30:	mov    ebx,ecx
  409f32:	movzx  edi,bl
  409f35:	cmp    rsi,rdi
  409f38:	jne    409f4d <test_basic_sort@@Base+0x2fd>
  409f3a:	add    cl,0x1
  409f3d:	movzx  ecx,cl
  409f40:	cmp    cl,0x6
  409f43:	jbe    409ec0 <test_basic_sort@@Base+0x270>
  409f49:	xor    eax,eax
  409f4b:	jmp    409f67 <test_basic_sort@@Base+0x317>
  409f4d:	lea    rdi,[rip+0xe05c]        # 417fb0 <_IO_stdin_used@@Base+0x2fb0>
  409f54:	jmp    409f5d <test_basic_sort@@Base+0x30d>
  409f56:	lea    rdi,[rip+0xe073]        # 417fd0 <_IO_stdin_used@@Base+0x2fd0>
  409f5d:	call   404060 <puts@plt>
  409f62:	mov    eax,0xffffffff
  409f67:	add    rsp,0x18
  409f6b:	pop    rbx
  409f6c:	pop    rbp
  409f6d:	ret    
  409f6e:	lea    rdi,[rip+0xc4e6]        # 41645b <_IO_stdin_used@@Base+0x145b>
  409f75:	lea    rsi,[rip+0xc516]        # 416492 <_IO_stdin_used@@Base+0x1492>
  409f7c:	lea    rcx,[rip+0xc591]        # 416514 <_IO_stdin_used@@Base+0x1514>
  409f83:	mov    edx,0x18b
  409f88:	call   4040a0 <__assert_fail@plt>
  409f8d:	lea    rdi,[rip+0xb906]        # 41589a <_IO_stdin_used@@Base+0x89a>
  409f94:	lea    rsi,[rip+0xb399]        # 415334 <_IO_stdin_used@@Base+0x334>
  409f9b:	lea    rcx,[rip+0xb926]        # 4158c8 <_IO_stdin_used@@Base+0x8c8>
  409fa2:	mov    edx,0x610
  409fa7:	call   4040a0 <__assert_fail@plt>
  409fac:	lea    rdi,[rip+0xbeb3]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  409fb3:	lea    rsi,[rip+0xbed2]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  409fba:	lea    rcx,[rip+0xc441]        # 416402 <_IO_stdin_used@@Base+0x1402>
  409fc1:	mov    edx,0x2c2
  409fc6:	call   4040a0 <__assert_fail@plt>
  409fcb:	lea    rdi,[rip+0xc1ab]        # 41617d <_IO_stdin_used@@Base+0x117d>
  409fd2:	lea    rsi,[rip+0xc068]        # 416041 <_IO_stdin_used@@Base+0x1041>
  409fd9:	lea    rcx,[rip+0xc23f]        # 41621f <_IO_stdin_used@@Base+0x121f>
  409fe0:	mov    edx,0xeb
  409fe5:	call   4040a0 <__assert_fail@plt>
  409fea:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409ff0 <test_clone_slice@@Base>:
  409ff0:	push   rbp
  409ff1:	push   r15
  409ff3:	push   r14
  409ff5:	push   r13
  409ff7:	push   r12
  409ff9:	push   rbx
  409ffa:	sub    rsp,0x28
  409ffe:	mov    rbp,rdi
  40a001:	mov    BYTE PTR [rsp+0x6],0x0
  40a006:	mov    WORD PTR [rsp+0x4],0x1
  40a00d:	mov    DWORD PTR [rsp],0x100
  40a014:	call   40e610 <flatcc_builder_reset@@Base>
  40a019:	lea    rsi,[rip+0xb128]        # 415148 <_IO_stdin_used@@Base+0x148>
  40a020:	xor    edx,edx
  40a022:	xor    ecx,ecx
  40a024:	mov    rdi,rbp
  40a027:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40a02c:	test   eax,eax
  40a02e:	jne    40a03d <test_clone_slice@@Base+0x4d>
  40a030:	mov    esi,0x24
  40a035:	mov    rdi,rbp
  40a038:	call   410480 <flatcc_builder_start_table@@Base>
  40a03d:	lea    rsi,[rip+0xb8ac]        # 4158f0 <_IO_stdin_used@@Base+0x8f0>
  40a044:	mov    rdi,rbp
  40a047:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40a04c:	test   eax,eax
  40a04e:	je     40a066 <test_clone_slice@@Base+0x76>
  40a050:	mov    ebx,eax
  40a052:	mov    esi,0x3
  40a057:	mov    rdi,rbp
  40a05a:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40a05f:	test   rax,rax
  40a062:	je     40a066 <test_clone_slice@@Base+0x76>
  40a064:	mov    DWORD PTR [rax],ebx
  40a066:	mov    rsi,rsp
  40a069:	mov    edx,0x7
  40a06e:	mov    ecx,0x1
  40a073:	mov    r8d,0x1
  40a079:	mov    r9d,0xffffffff
  40a07f:	mov    rdi,rbp
  40a082:	call   411020 <flatcc_builder_create_vector@@Base>
  40a087:	test   eax,eax
  40a089:	je     40a0a1 <test_clone_slice@@Base+0xb1>
  40a08b:	mov    ebx,eax
  40a08d:	mov    esi,0x18
  40a092:	mov    rdi,rbp
  40a095:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40a09a:	test   rax,rax
  40a09d:	je     40a0a1 <test_clone_slice@@Base+0xb1>
  40a09f:	mov    DWORD PTR [rax],ebx
  40a0a1:	mov    esi,0x4
  40a0a6:	mov    edx,0x2
  40a0ab:	mov    ecx,0x3fffffff
  40a0b0:	mov    rdi,rbp
  40a0b3:	call   410010 <flatcc_builder_start_vector@@Base>
  40a0b8:	mov    esi,0x2
  40a0bd:	mov    rdi,rbp
  40a0c0:	call   40f6a0 <flatcc_builder_extend_vector@@Base>
  40a0c5:	mov    WORD PTR [rax],0x16
  40a0ca:	mov    WORD PTR [rax+0x4],0x2c
  40a0d0:	mov    rdi,rbp
  40a0d3:	call   4111a0 <flatcc_builder_end_vector@@Base>
  40a0d8:	test   eax,eax
  40a0da:	je     40a0f2 <test_clone_slice@@Base+0x102>
  40a0dc:	mov    ebx,eax
  40a0de:	mov    esi,0x9
  40a0e3:	mov    rdi,rbp
  40a0e6:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40a0eb:	test   rax,rax
  40a0ee:	je     40a0f2 <test_clone_slice@@Base+0x102>
  40a0f0:	mov    DWORD PTR [rax],ebx
  40a0f2:	xor    esi,esi
  40a0f4:	mov    edx,0x20
  40a0f9:	mov    ecx,0x10
  40a0fe:	mov    rdi,rbp
  40a101:	call   411800 <flatcc_builder_table_add@@Base>
  40a106:	mov    DWORD PTR [rax],0xc2293333
  40a10c:	lea    rsi,[rip+0xb025]        # 415138 <_IO_stdin_used@@Base+0x138>
  40a113:	mov    edx,0x1
  40a118:	mov    rdi,rbp
  40a11b:	call   410e20 <flatcc_builder_check_required@@Base>
  40a120:	test   eax,eax
  40a122:	je     40a8c3 <test_clone_slice@@Base+0x8d3>
  40a128:	mov    rdi,rbp
  40a12b:	call   410e90 <flatcc_builder_end_table@@Base>
  40a130:	mov    rdi,rbp
  40a133:	mov    esi,eax
  40a135:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40a13a:	lea    rsi,[rsp+0x8]
  40a13f:	mov    rdi,rbp
  40a142:	call   412b90 <flatcc_builder_finalize_aligned_buffer@@Base>
  40a147:	mov    rbx,rax
  40a14a:	mov    rdx,QWORD PTR [rsp+0x8]
  40a14f:	mov    rax,QWORD PTR [rip+0x13ea2]        # 41dff8 <stderr@GLIBC_2.2.5>
  40a156:	mov    rcx,QWORD PTR [rax]
  40a159:	lea    rdi,[rip+0xb79b]        # 4158fb <_IO_stdin_used@@Base+0x8fb>
  40a160:	mov    rsi,rbx
  40a163:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  40a168:	test   rbx,rbx
  40a16b:	je     40a180 <test_clone_slice@@Base+0x190>
  40a16d:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40a174:	jne    40a180 <test_clone_slice@@Base+0x190>
  40a176:	mov    eax,DWORD PTR [rbx]
  40a178:	mov    r15,rbx
  40a17b:	add    r15,rax
  40a17e:	jmp    40a183 <test_clone_slice@@Base+0x193>
  40a180:	xor    r15d,r15d
  40a183:	mov    rdi,rbp
  40a186:	call   40e610 <flatcc_builder_reset@@Base>
  40a18b:	lea    rsi,[rip+0xafb6]        # 415148 <_IO_stdin_used@@Base+0x148>
  40a192:	xor    edx,edx
  40a194:	xor    ecx,ecx
  40a196:	mov    rdi,rbp
  40a199:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40a19e:	test   eax,eax
  40a1a0:	jne    40a1af <test_clone_slice@@Base+0x1bf>
  40a1a2:	mov    esi,0x24
  40a1a7:	mov    rdi,rbp
  40a1aa:	call   410480 <flatcc_builder_start_table@@Base>
  40a1af:	test   r15,r15
  40a1b2:	je     40a8e2 <test_clone_slice@@Base+0x8f2>
  40a1b8:	movsxd rax,DWORD PTR [r15]
  40a1bb:	mov    rcx,r15
  40a1be:	sub    rcx,rax
  40a1c1:	movzx  edx,WORD PTR [rcx]
  40a1c4:	cmp    edx,0xc
  40a1c7:	jb     40a8ba <test_clone_slice@@Base+0x8ca>
  40a1cd:	neg    rax
  40a1d0:	movzx  ecx,WORD PTR [r15+rax*1+0xa]
  40a1d6:	test   rcx,rcx
  40a1d9:	je     40a8ba <test_clone_slice@@Base+0x8ca>
  40a1df:	movzx  edx,dx
  40a1e2:	cmp    edx,0x36
  40a1e5:	jb     40a901 <test_clone_slice@@Base+0x911>
  40a1eb:	movzx  r13d,WORD PTR [r15+rax*1+0x34]
  40a1f1:	test   r13,r13
  40a1f4:	je     40a901 <test_clone_slice@@Base+0x911>
  40a1fa:	mov    QWORD PTR [rsp+0x20],rbx
  40a1ff:	movzx  r12d,WORD PTR [r15+rax*1+0x16]
  40a205:	test   r12,r12
  40a208:	je     40a93f <test_clone_slice@@Base+0x94f>
  40a20e:	lea    rax,[r15+rcx*1]
  40a212:	mov    ecx,DWORD PTR [r15+rcx*1]
  40a216:	lea    rbx,[rcx+rax*1]
  40a21a:	add    rbx,0x4
  40a21e:	mov    eax,DWORD PTR [r15+r13*1]
  40a222:	mov    QWORD PTR [rsp+0x10],rax
  40a227:	mov    eax,DWORD PTR [r15+r12*1]
  40a22b:	mov    QWORD PTR [rsp+0x18],rax
  40a230:	mov    edx,DWORD PTR [rbx-0x4]
  40a233:	mov    rdi,rbp
  40a236:	mov    rsi,rbx
  40a239:	call   4125b0 <flatcc_builder_create_string@@Base>
  40a23e:	test   eax,eax
  40a240:	je     40a25a <test_clone_slice@@Base+0x26a>
  40a242:	mov    r14d,eax
  40a245:	mov    esi,0x3
  40a24a:	mov    rdi,rbp
  40a24d:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40a252:	test   rax,rax
  40a255:	je     40a25a <test_clone_slice@@Base+0x26a>
  40a257:	mov    DWORD PTR [rax],r14d
  40a25a:	mov    rdi,rbp
  40a25d:	call   410090 <flatcc_builder_start_offset_vector@@Base>
  40a262:	mov    edx,DWORD PTR [rbx-0x4]
  40a265:	mov    rdi,rbp
  40a268:	mov    rsi,rbx
  40a26b:	call   4125b0 <flatcc_builder_create_string@@Base>
  40a270:	test   eax,eax
  40a272:	je     40a27e <test_clone_slice@@Base+0x28e>
  40a274:	mov    rdi,rbp
  40a277:	mov    esi,eax
  40a279:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  40a27e:	mov    eax,DWORD PTR [rbx-0x4]
  40a281:	cmp    rax,0x4
  40a285:	mov    esi,0x4
  40a28a:	cmovb  rsi,rax
  40a28e:	sub    rax,rsi
  40a291:	cmp    rax,0x14
  40a295:	mov    edx,0x14
  40a29a:	cmovb  rdx,rax
  40a29e:	add    rsi,rbx
  40a2a1:	mov    rdi,rbp
  40a2a4:	call   4125b0 <flatcc_builder_create_string@@Base>
  40a2a9:	test   eax,eax
  40a2ab:	je     40a2b7 <test_clone_slice@@Base+0x2c7>
  40a2ad:	mov    rdi,rbp
  40a2b0:	mov    esi,eax
  40a2b2:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  40a2b7:	mov    eax,DWORD PTR [rbx-0x4]
  40a2ba:	cmp    rax,0x3
  40a2be:	mov    edx,0x3
  40a2c3:	cmovb  rdx,rax
  40a2c7:	mov    rdi,rbp
  40a2ca:	mov    rsi,rbx
  40a2cd:	call   4125b0 <flatcc_builder_create_string@@Base>
  40a2d2:	test   eax,eax
  40a2d4:	je     40a2e0 <test_clone_slice@@Base+0x2f0>
  40a2d6:	mov    rdi,rbp
  40a2d9:	mov    esi,eax
  40a2db:	call   40fa50 <flatcc_builder_offset_vector_push@@Base>
  40a2e0:	add    r13,r15
  40a2e3:	mov    rdi,rbp
  40a2e6:	call   410250 <flatcc_builder_end_offset_vector@@Base>
  40a2eb:	test   eax,eax
  40a2ed:	je     40a307 <test_clone_slice@@Base+0x317>
  40a2ef:	mov    r14d,eax
  40a2f2:	mov    esi,0xa
  40a2f7:	mov    rdi,rbp
  40a2fa:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40a2ff:	test   rax,rax
  40a302:	je     40a307 <test_clone_slice@@Base+0x317>
  40a304:	mov    DWORD PTR [rax],r14d
  40a307:	add    r12,r15
  40a30a:	mov    rax,QWORD PTR [rsp+0x10]
  40a30f:	add    r13,rax
  40a312:	add    r13,0x4
  40a316:	mov    esi,0x24
  40a31b:	mov    rdi,rbp
  40a31e:	call   410480 <flatcc_builder_start_table@@Base>
  40a323:	mov    eax,DWORD PTR [rbx-0x4]
  40a326:	cmp    rax,0x2
  40a32a:	mov    esi,0x2
  40a32f:	cmovb  rsi,rax
  40a333:	sub    rax,rsi
  40a336:	cmp    rax,0x14
  40a33a:	mov    edx,0x14
  40a33f:	cmovb  rdx,rax
  40a343:	add    rsi,rbx
  40a346:	mov    rdi,rbp
  40a349:	call   4125b0 <flatcc_builder_create_string@@Base>
  40a34e:	test   eax,eax
  40a350:	je     40a368 <test_clone_slice@@Base+0x378>
  40a352:	mov    ebx,eax
  40a354:	mov    esi,0x3
  40a359:	mov    rdi,rbp
  40a35c:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40a361:	test   rax,rax
  40a364:	je     40a368 <test_clone_slice@@Base+0x378>
  40a366:	mov    DWORD PTR [rax],ebx
  40a368:	mov    rax,QWORD PTR [rsp+0x18]
  40a36d:	add    r12,rax
  40a370:	add    r12,0x4
  40a374:	mov    edx,DWORD PTR [r13-0x4]
  40a378:	mov    ecx,0x1
  40a37d:	mov    r8d,0x1
  40a383:	mov    r9d,0xffffffff
  40a389:	mov    rdi,rbp
  40a38c:	mov    rsi,r13
  40a38f:	call   411020 <flatcc_builder_create_vector@@Base>
  40a394:	test   eax,eax
  40a396:	je     40a3ae <test_clone_slice@@Base+0x3be>
  40a398:	mov    ebx,eax
  40a39a:	mov    esi,0x18
  40a39f:	mov    rdi,rbp
  40a3a2:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40a3a7:	test   rax,rax
  40a3aa:	je     40a3ae <test_clone_slice@@Base+0x3be>
  40a3ac:	mov    DWORD PTR [rax],ebx
  40a3ae:	mov    eax,DWORD PTR [r12-0x4]
  40a3b3:	xor    ecx,ecx
  40a3b5:	test   rax,rax
  40a3b8:	setne  cl
  40a3bb:	sub    rax,rcx
  40a3be:	cmp    rax,0x2
  40a3c2:	mov    edx,0x2
  40a3c7:	cmovb  rdx,rax
  40a3cb:	lea    rsi,[r12+rcx*4]
  40a3cf:	mov    ecx,0x4
  40a3d4:	mov    r8d,0x2
  40a3da:	mov    r9d,0x3fffffff
  40a3e0:	mov    rdi,rbp
  40a3e3:	call   411020 <flatcc_builder_create_vector@@Base>
  40a3e8:	test   eax,eax
  40a3ea:	je     40a402 <test_clone_slice@@Base+0x412>
  40a3ec:	mov    ebx,eax
  40a3ee:	mov    esi,0x9
  40a3f3:	mov    rdi,rbp
  40a3f6:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40a3fb:	test   rax,rax
  40a3fe:	je     40a402 <test_clone_slice@@Base+0x412>
  40a400:	mov    DWORD PTR [rax],ebx
  40a402:	lea    rsi,[rip+0xad2f]        # 415138 <_IO_stdin_used@@Base+0x138>
  40a409:	mov    edx,0x1
  40a40e:	mov    rdi,rbp
  40a411:	call   410e20 <flatcc_builder_check_required@@Base>
  40a416:	test   eax,eax
  40a418:	je     40a8c3 <test_clone_slice@@Base+0x8d3>
  40a41e:	mov    rdi,rbp
  40a421:	call   410e90 <flatcc_builder_end_table@@Base>
  40a426:	test   eax,eax
  40a428:	je     40a463 <test_clone_slice@@Base+0x473>
  40a42a:	mov    ebx,eax
  40a42c:	mov    esi,0x7
  40a431:	mov    edx,0x1
  40a436:	mov    ecx,0x1
  40a43b:	mov    rdi,rbp
  40a43e:	call   411800 <flatcc_builder_table_add@@Base>
  40a443:	test   rax,rax
  40a446:	je     40a463 <test_clone_slice@@Base+0x473>
  40a448:	mov    r14,rax
  40a44b:	mov    esi,0x8
  40a450:	mov    rdi,rbp
  40a453:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40a458:	test   rax,rax
  40a45b:	je     40a463 <test_clone_slice@@Base+0x473>
  40a45d:	mov    BYTE PTR [r14],0x1
  40a461:	mov    DWORD PTR [rax],ebx
  40a463:	mov    edx,DWORD PTR [r13-0x4]
  40a467:	cmp    rdx,0x3
  40a46b:	mov    esi,0x3
  40a470:	cmovb  rsi,rdx
  40a474:	sub    rdx,rsi
  40a477:	add    rsi,r13
  40a47a:	mov    ecx,0x1
  40a47f:	mov    r8d,0x1
  40a485:	mov    r9d,0xffffffff
  40a48b:	mov    rdi,rbp
  40a48e:	call   411020 <flatcc_builder_create_vector@@Base>
  40a493:	test   eax,eax
  40a495:	je     40a4ad <test_clone_slice@@Base+0x4bd>
  40a497:	mov    ebx,eax
  40a499:	mov    esi,0x18
  40a49e:	mov    rdi,rbp
  40a4a1:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40a4a6:	test   rax,rax
  40a4a9:	je     40a4ad <test_clone_slice@@Base+0x4bd>
  40a4ab:	mov    DWORD PTR [rax],ebx
  40a4ad:	movsxd rax,DWORD PTR [r15]
  40a4b0:	mov    rcx,r15
  40a4b3:	sub    rcx,rax
  40a4b6:	movzx  ecx,WORD PTR [rcx]
  40a4b9:	cmp    ecx,0x6
  40a4bc:	mov    r14,QWORD PTR [rip+0x13b35]        # 41dff8 <stderr@GLIBC_2.2.5>
  40a4c3:	jb     40a4d8 <test_clone_slice@@Base+0x4e8>
  40a4c5:	neg    rax
  40a4c8:	movzx  eax,WORD PTR [r15+rax*1+0x4]
  40a4ce:	test   rax,rax
  40a4d1:	je     40a4d8 <test_clone_slice@@Base+0x4e8>
  40a4d3:	add    r15,rax
  40a4d6:	jmp    40a4db <test_clone_slice@@Base+0x4eb>
  40a4d8:	xor    r15d,r15d
  40a4db:	xor    esi,esi
  40a4dd:	mov    ecx,0x20
  40a4e2:	mov    r8d,0x10
  40a4e8:	mov    rdi,rbp
  40a4eb:	mov    rdx,r15
  40a4ee:	call   4128b0 <flatcc_builder_table_add_copy@@Base>
  40a4f3:	mov    edx,DWORD PTR [r12-0x4]
  40a4f8:	mov    ecx,0x4
  40a4fd:	mov    r8d,0x2
  40a503:	mov    r9d,0x3fffffff
  40a509:	mov    rdi,rbp
  40a50c:	mov    rsi,r12
  40a50f:	call   411020 <flatcc_builder_create_vector@@Base>
  40a514:	test   eax,eax
  40a516:	je     40a52e <test_clone_slice@@Base+0x53e>
  40a518:	mov    ebx,eax
  40a51a:	mov    esi,0x9
  40a51f:	mov    rdi,rbp
  40a522:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40a527:	test   rax,rax
  40a52a:	je     40a52e <test_clone_slice@@Base+0x53e>
  40a52c:	mov    DWORD PTR [rax],ebx
  40a52e:	lea    rsi,[rip+0xac03]        # 415138 <_IO_stdin_used@@Base+0x138>
  40a535:	mov    edx,0x1
  40a53a:	mov    rdi,rbp
  40a53d:	call   410e20 <flatcc_builder_check_required@@Base>
  40a542:	test   eax,eax
  40a544:	je     40a8c3 <test_clone_slice@@Base+0x8d3>
  40a54a:	mov    rdi,rbp
  40a54d:	call   410e90 <flatcc_builder_end_table@@Base>
  40a552:	mov    rdi,rbp
  40a555:	mov    esi,eax
  40a557:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40a55c:	lea    rsi,[rsp+0x8]
  40a561:	mov    rdi,rbp
  40a564:	call   412a50 <flatcc_builder_get_direct_buffer@@Base>
  40a569:	mov    rbx,rax
  40a56c:	mov    rdx,QWORD PTR [rsp+0x8]
  40a571:	mov    rcx,QWORD PTR [r14]
  40a574:	lea    rdi,[rip+0xb3cf]        # 41594a <_IO_stdin_used@@Base+0x94a>
  40a57b:	mov    rsi,rax
  40a57e:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  40a583:	test   rbx,rbx
  40a586:	je     40a8e2 <test_clone_slice@@Base+0x8f2>
  40a58c:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40a593:	jne    40a8e2 <test_clone_slice@@Base+0x8f2>
  40a599:	mov    eax,DWORD PTR [rbx]
  40a59b:	mov    rbp,rbx
  40a59e:	add    rbp,rax
  40a5a1:	movsxd r13,DWORD PTR [rbx+rax*1]
  40a5a5:	mov    rax,rbp
  40a5a8:	sub    rax,r13
  40a5ab:	movzx  ebx,WORD PTR [rax]
  40a5ae:	cmp    ebx,0xb
  40a5b1:	jbe    40a8ba <test_clone_slice@@Base+0x8ca>
  40a5b7:	neg    r13
  40a5ba:	movzx  eax,WORD PTR [rbp+r13*1+0xa]
  40a5c0:	test   rax,rax
  40a5c3:	je     40a8ba <test_clone_slice@@Base+0x8ca>
  40a5c9:	lea    rcx,[rax+rbp*1]
  40a5cd:	mov    eax,DWORD PTR [rbp+rax*1+0x0]
  40a5d1:	lea    rdi,[rax+rcx*1]
  40a5d5:	add    rdi,0x4
  40a5d9:	lea    rsi,[rip+0xb310]        # 4158f0 <_IO_stdin_used@@Base+0x8f0>
  40a5e0:	call   4040f0 <strcmp@plt>
  40a5e5:	test   eax,eax
  40a5e7:	je     40a5f5 <test_clone_slice@@Base+0x605>
  40a5e9:	lea    rdi,[rip+0xdc20]        # 418210 <_IO_stdin_used@@Base+0x3210>
  40a5f0:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a5f5:	movzx  r14d,bx
  40a5f9:	cmp    r14d,0x1a
  40a5fd:	jb     40a920 <test_clone_slice@@Base+0x930>
  40a603:	movzx  ecx,WORD PTR [rbp+r13*1+0x18]
  40a609:	test   rcx,rcx
  40a60c:	je     40a920 <test_clone_slice@@Base+0x930>
  40a612:	lea    rax,[rcx+rbp*1]
  40a616:	mov    ecx,DWORD PTR [rbp+rcx*1+0x0]
  40a61a:	mov    r12d,DWORD PTR [rcx+rax*1]
  40a61e:	test   r12d,r12d
  40a621:	je     40a920 <test_clone_slice@@Base+0x930>
  40a627:	lea    r15,[rcx+rax*1]
  40a62b:	add    r15,0x4
  40a62f:	mov    eax,DWORD PTR [r15]
  40a632:	lea    rdi,[r15+rax*1]
  40a636:	add    rdi,0x4
  40a63a:	lea    rsi,[rip+0xb2af]        # 4158f0 <_IO_stdin_used@@Base+0x8f0>
  40a641:	call   4040f0 <strcmp@plt>
  40a646:	test   eax,eax
  40a648:	je     40a653 <test_clone_slice@@Base+0x663>
  40a64a:	lea    rdi,[rip+0xdb9f]        # 4181f0 <_IO_stdin_used@@Base+0x31f0>
  40a651:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a653:	cmp    r12d,0x1
  40a657:	jbe    40a920 <test_clone_slice@@Base+0x930>
  40a65d:	mov    eax,DWORD PTR [r15+0x4]
  40a661:	cmp    DWORD PTR [r15+rax*1+0x4],0x6
  40a667:	jne    40a68a <test_clone_slice@@Base+0x69a>
  40a669:	lea    rdi,[r15+rax*1]
  40a66d:	add    rdi,0x8
  40a671:	lea    rsi,[rip+0xb27c]        # 4158f4 <_IO_stdin_used@@Base+0x8f4>
  40a678:	call   4040f0 <strcmp@plt>
  40a67d:	test   eax,eax
  40a67f:	je     40a6b6 <test_clone_slice@@Base+0x6c6>
  40a681:	lea    rdi,[rip+0xdb18]        # 4181a0 <_IO_stdin_used@@Base+0x31a0>
  40a688:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a68a:	lea    rdi,[rip+0xdb2f]        # 4181c0 <_IO_stdin_used@@Base+0x31c0>
  40a691:	call   404060 <puts@plt>
  40a696:	mov    ebx,0xffffffff
  40a69b:	mov    rdi,QWORD PTR [rsp+0x20]
  40a6a0:	call   412cc0 <flatcc_builder_aligned_free@@Base>
  40a6a5:	mov    eax,ebx
  40a6a7:	add    rsp,0x28
  40a6ab:	pop    rbx
  40a6ac:	pop    r12
  40a6ae:	pop    r13
  40a6b0:	pop    r14
  40a6b2:	pop    r15
  40a6b4:	pop    rbp
  40a6b5:	ret    
  40a6b6:	cmp    r12d,0x2
  40a6ba:	jbe    40a920 <test_clone_slice@@Base+0x930>
  40a6c0:	mov    eax,DWORD PTR [r15+0x8]
  40a6c4:	cmp    DWORD PTR [r15+rax*1+0x8],0x3
  40a6ca:	jne    40a6ed <test_clone_slice@@Base+0x6fd>
  40a6cc:	lea    rdi,[r15+rax*1]
  40a6d0:	add    rdi,0xc
  40a6d4:	lea    rsi,[rip+0xb286]        # 415961 <_IO_stdin_used@@Base+0x961>
  40a6db:	call   4040f0 <strcmp@plt>
  40a6e0:	test   eax,eax
  40a6e2:	je     40a6f6 <test_clone_slice@@Base+0x706>
  40a6e4:	lea    rdi,[rip+0xda75]        # 418160 <_IO_stdin_used@@Base+0x3160>
  40a6eb:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a6ed:	lea    rdi,[rip+0xda8c]        # 418180 <_IO_stdin_used@@Base+0x3180>
  40a6f4:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a6f6:	movzx  eax,WORD PTR [rbp+r13*1+0x14]
  40a6fc:	test   rax,rax
  40a6ff:	je     40a95e <test_clone_slice@@Base+0x96e>
  40a705:	lea    rcx,[rax+rbp*1]
  40a709:	mov    r15d,DWORD PTR [rbp+rax*1+0x0]
  40a70e:	add    r15,rcx
  40a711:	je     40a95e <test_clone_slice@@Base+0x96e>
  40a717:	movsxd r12,DWORD PTR [r15]
  40a71a:	mov    rax,r15
  40a71d:	sub    rax,r12
  40a720:	movzx  ebx,WORD PTR [rax]
  40a723:	cmp    ebx,0xc
  40a726:	jb     40a8ba <test_clone_slice@@Base+0x8ca>
  40a72c:	neg    r12
  40a72f:	movzx  eax,WORD PTR [r15+r12*1+0xa]
  40a735:	test   rax,rax
  40a738:	je     40a8ba <test_clone_slice@@Base+0x8ca>
  40a73e:	lea    rcx,[r15+rax*1]
  40a742:	mov    eax,DWORD PTR [r15+rax*1]
  40a746:	lea    rdi,[rax+rcx*1]
  40a74a:	add    rdi,0x4
  40a74e:	lea    rsi,[rip+0xb19d]        # 4158f2 <_IO_stdin_used@@Base+0x8f2>
  40a755:	call   4040f0 <strcmp@plt>
  40a75a:	test   eax,eax
  40a75c:	je     40a771 <test_clone_slice@@Base+0x781>
  40a75e:	lea    rdi,[rip+0xb200]        # 415965 <_IO_stdin_used@@Base+0x965>
  40a765:	xor    eax,eax
  40a767:	call   404080 <printf@plt>
  40a76c:	jmp    40a696 <test_clone_slice@@Base+0x6a6>
  40a771:	movzx  eax,bx
  40a774:	cmp    eax,0x36
  40a777:	jb     40a7b7 <test_clone_slice@@Base+0x7c7>
  40a779:	movzx  eax,WORD PTR [r15+r12*1+0x34]
  40a77f:	test   rax,rax
  40a782:	je     40a7b7 <test_clone_slice@@Base+0x7c7>
  40a784:	lea    rcx,[r15+rax*1]
  40a788:	mov    eax,DWORD PTR [r15+rax*1]
  40a78c:	cmp    DWORD PTR [rax+rcx*1],0x7
  40a790:	jne    40a7b7 <test_clone_slice@@Base+0x7c7>
  40a792:	lea    rdi,[rax+rcx*1]
  40a796:	add    rdi,0x4
  40a79a:	mov    rsi,rsp
  40a79d:	mov    edx,0x7
  40a7a2:	call   4040e0 <memcmp@plt>
  40a7a7:	test   eax,eax
  40a7a9:	je     40a7c3 <test_clone_slice@@Base+0x7d3>
  40a7ab:	lea    rdi,[rip+0xd96e]        # 418120 <_IO_stdin_used@@Base+0x3120>
  40a7b2:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a7b7:	lea    rdi,[rip+0xd982]        # 418140 <_IO_stdin_used@@Base+0x3140>
  40a7be:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a7c3:	cmp    r14d,0x36
  40a7c7:	jb     40a7f8 <test_clone_slice@@Base+0x808>
  40a7c9:	movzx  eax,WORD PTR [rbp+r13*1+0x34]
  40a7cf:	test   rax,rax
  40a7d2:	je     40a7f8 <test_clone_slice@@Base+0x808>
  40a7d4:	lea    rcx,[rax+rbp*1]
  40a7d8:	mov    eax,DWORD PTR [rbp+rax*1+0x0]
  40a7dc:	cmp    DWORD PTR [rax+rcx*1],0x4
  40a7e0:	jne    40a7f8 <test_clone_slice@@Base+0x808>
  40a7e2:	mov    eax,DWORD PTR [rcx+rax*1+0x4]
  40a7e6:	cmp    eax,DWORD PTR [rsp+0x3]
  40a7ea:	je     40a804 <test_clone_slice@@Base+0x814>
  40a7ec:	lea    rdi,[rip+0xd8ed]        # 4180e0 <_IO_stdin_used@@Base+0x30e0>
  40a7f3:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a7f8:	lea    rdi,[rip+0xd901]        # 418100 <_IO_stdin_used@@Base+0x3100>
  40a7ff:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a804:	movzx  eax,WORD PTR [rbp+r13*1+0x4]
  40a80a:	vmovss xmm0,DWORD PTR [rbp+rax*1+0x0]
  40a810:	vucomiss xmm0,DWORD PTR [rip+0xa7fc]        # 415014 <_IO_stdin_used@@Base+0x14>
  40a818:	jne    40a81c <test_clone_slice@@Base+0x82c>
  40a81a:	jnp    40a828 <test_clone_slice@@Base+0x838>
  40a81c:	lea    rdi,[rip+0xd89d]        # 4180c0 <_IO_stdin_used@@Base+0x30c0>
  40a823:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a828:	movzx  ecx,WORD PTR [rbp+r13*1+0x16]
  40a82e:	test   rcx,rcx
  40a831:	je     40a88a <test_clone_slice@@Base+0x89a>
  40a833:	lea    rax,[rcx+rbp*1]
  40a837:	mov    ecx,DWORD PTR [rbp+rcx*1+0x0]
  40a83b:	cmp    DWORD PTR [rcx+rax*1],0x2
  40a83f:	jne    40a88a <test_clone_slice@@Base+0x89a>
  40a841:	movzx  edx,WORD PTR [rax+rcx*1+0x4]
  40a846:	cmp    edx,0x16
  40a849:	jne    40a896 <test_clone_slice@@Base+0x8a6>
  40a84b:	movzx  eax,WORD PTR [rax+rcx*1+0x8]
  40a850:	cmp    eax,0x2c
  40a853:	jne    40a8a2 <test_clone_slice@@Base+0x8b2>
  40a855:	movzx  eax,WORD PTR [r15+r12*1+0x16]
  40a85b:	test   rax,rax
  40a85e:	je     40a8ae <test_clone_slice@@Base+0x8be>
  40a860:	lea    rcx,[r15+rax*1]
  40a864:	mov    eax,DWORD PTR [r15+rax*1]
  40a868:	cmp    DWORD PTR [rax+rcx*1],0x1
  40a86c:	jne    40a8ae <test_clone_slice@@Base+0x8be>
  40a86e:	movzx  eax,WORD PTR [rcx+rax*1+0x4]
  40a873:	xor    ebx,ebx
  40a875:	cmp    eax,0x2c
  40a878:	je     40a69b <test_clone_slice@@Base+0x6ab>
  40a87e:	lea    rdi,[rip+0xd76b]        # 417ff0 <_IO_stdin_used@@Base+0x2ff0>
  40a885:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a88a:	lea    rdi,[rip+0xd7ef]        # 418080 <_IO_stdin_used@@Base+0x3080>
  40a891:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a896:	lea    rdi,[rip+0xd7c3]        # 418060 <_IO_stdin_used@@Base+0x3060>
  40a89d:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a8a2:	lea    rdi,[rip+0xd797]        # 418040 <_IO_stdin_used@@Base+0x3040>
  40a8a9:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a8ae:	lea    rdi,[rip+0xd76b]        # 418020 <_IO_stdin_used@@Base+0x3020>
  40a8b5:	jmp    40a691 <test_clone_slice@@Base+0x6a1>
  40a8ba:	lea    rdi,[rip+0xbb20]        # 4163e1 <_IO_stdin_used@@Base+0x13e1>
  40a8c1:	jmp    40a8e9 <test_clone_slice@@Base+0x8f9>
  40a8c3:	lea    rdi,[rip+0xb8b3]        # 41617d <_IO_stdin_used@@Base+0x117d>
  40a8ca:	lea    rsi,[rip+0xb770]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40a8d1:	lea    rcx,[rip+0xb947]        # 41621f <_IO_stdin_used@@Base+0x121f>
  40a8d8:	mov    edx,0xeb
  40a8dd:	call   4040a0 <__assert_fail@plt>
  40a8e2:	lea    rdi,[rip+0xb57d]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  40a8e9:	lea    rsi,[rip+0xb59c]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40a8f0:	lea    rcx,[rip+0xba99]        # 416390 <_IO_stdin_used@@Base+0x1390>
  40a8f7:	mov    edx,0x2bb
  40a8fc:	call   4040a0 <__assert_fail@plt>
  40a901:	lea    rdi,[rip+0xb036]        # 41593e <_IO_stdin_used@@Base+0x93e>
  40a908:	lea    rsi,[rip+0xaa25]        # 415334 <_IO_stdin_used@@Base+0x334>
  40a90f:	lea    rcx,[rip+0xafff]        # 415915 <_IO_stdin_used@@Base+0x915>
  40a916:	mov    edx,0x646
  40a91b:	call   4040a0 <__assert_fail@plt>
  40a920:	lea    rdi,[rip+0xbb34]        # 41645b <_IO_stdin_used@@Base+0x145b>
  40a927:	lea    rsi,[rip+0xbb64]        # 416492 <_IO_stdin_used@@Base+0x1492>
  40a92e:	lea    rcx,[rip+0xbcea]        # 41661f <_IO_stdin_used@@Base+0x161f>
  40a935:	mov    edx,0x6c
  40a93a:	call   4040a0 <__assert_fail@plt>
  40a93f:	lea    rdi,[rip+0xaffe]        # 415944 <_IO_stdin_used@@Base+0x944>
  40a946:	lea    rsi,[rip+0xa9e7]        # 415334 <_IO_stdin_used@@Base+0x334>
  40a94d:	lea    rcx,[rip+0xafc1]        # 415915 <_IO_stdin_used@@Base+0x915>
  40a954:	mov    edx,0x648
  40a959:	call   4040a0 <__assert_fail@plt>
  40a95e:	lea    rdi,[rip+0xa9cb]        # 415330 <_IO_stdin_used@@Base+0x330>
  40a965:	lea    rsi,[rip+0xa9c8]        # 415334 <_IO_stdin_used@@Base+0x334>
  40a96c:	lea    rcx,[rip+0xafa2]        # 415915 <_IO_stdin_used@@Base+0x915>
  40a973:	mov    edx,0x680
  40a978:	call   4040a0 <__assert_fail@plt>
  40a97d:	nop    DWORD PTR [rax]

000000000040a980 <test_create_add_field@@Base>:
  40a980:	push   rbp
  40a981:	push   rbx
  40a982:	push   rax
  40a983:	mov    rbx,rdi
  40a986:	call   40e610 <flatcc_builder_reset@@Base>
  40a98b:	lea    rsi,[rip+0xa7b6]        # 415148 <_IO_stdin_used@@Base+0x148>
  40a992:	xor    edx,edx
  40a994:	xor    ecx,ecx
  40a996:	mov    rdi,rbx
  40a999:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40a99e:	test   eax,eax
  40a9a0:	jne    40a9af <test_create_add_field@@Base+0x2f>
  40a9a2:	mov    esi,0x24
  40a9a7:	mov    rdi,rbx
  40a9aa:	call   410480 <flatcc_builder_start_table@@Base>
  40a9af:	lea    rsi,[rip+0xa7d6]        # 41518c <_IO_stdin_used@@Base+0x18c>
  40a9b6:	mov    rdi,rbx
  40a9b9:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40a9be:	test   eax,eax
  40a9c0:	je     40a9d8 <test_create_add_field@@Base+0x58>
  40a9c2:	mov    ebp,eax
  40a9c4:	mov    esi,0x3
  40a9c9:	mov    rdi,rbx
  40a9cc:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40a9d1:	test   rax,rax
  40a9d4:	je     40a9d8 <test_create_add_field@@Base+0x58>
  40a9d6:	mov    DWORD PTR [rax],ebp
  40a9d8:	lea    rsi,[rip+0xafb6]        # 415995 <_IO_stdin_used@@Base+0x995>
  40a9df:	mov    rdi,rbx
  40a9e2:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40a9e7:	mov    ebp,eax
  40a9e9:	mov    esi,0x3
  40a9ee:	mov    rdi,rbx
  40a9f1:	call   410480 <flatcc_builder_start_table@@Base>
  40a9f6:	test   eax,eax
  40a9f8:	je     40aa89 <test_create_add_field@@Base+0x109>
  40a9fe:	lea    rsi,[rip+0xa733]        # 415138 <_IO_stdin_used@@Base+0x138>
  40aa05:	mov    edx,0x1
  40aa0a:	mov    rdi,rbx
  40aa0d:	call   410e20 <flatcc_builder_check_required@@Base>
  40aa12:	test   eax,eax
  40aa14:	je     40abdf <test_create_add_field@@Base+0x25f>
  40aa1a:	mov    rdi,rbx
  40aa1d:	call   410e90 <flatcc_builder_end_table@@Base>
  40aa22:	mov    rdi,rbx
  40aa25:	mov    esi,eax
  40aa27:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40aa2c:	mov    rsi,rsp
  40aa2f:	mov    rdi,rbx
  40aa32:	call   412b90 <flatcc_builder_finalize_aligned_buffer@@Base>
  40aa37:	test   rax,rax
  40aa3a:	je     40abc0 <test_create_add_field@@Base+0x240>
  40aa40:	mov    rbx,rax
  40aa43:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  40aa4a:	jne    40abc0 <test_create_add_field@@Base+0x240>
  40aa50:	mov    ecx,DWORD PTR [rbx]
  40aa52:	mov    rax,rbx
  40aa55:	add    rax,rcx
  40aa58:	movsxd rcx,DWORD PTR [rbx+rcx*1]
  40aa5c:	mov    rdx,rax
  40aa5f:	sub    rdx,rcx
  40aa62:	movzx  edx,WORD PTR [rdx]
  40aa65:	cmp    edx,0x1d
  40aa68:	jbe    40aba1 <test_create_add_field@@Base+0x221>
  40aa6e:	neg    rcx
  40aa71:	cmp    WORD PTR [rax+rcx*1+0x1c],0x0
  40aa77:	je     40ab3a <test_create_add_field@@Base+0x1ba>
  40aa7d:	lea    rdi,[rip+0xd7cc]        # 418250 <_IO_stdin_used@@Base+0x3250>
  40aa84:	jmp    40ab86 <test_create_add_field@@Base+0x206>
  40aa89:	mov    esi,0x1
  40aa8e:	mov    edx,0x8
  40aa93:	mov    ecx,0x8
  40aa98:	mov    rdi,rbx
  40aa9b:	call   411800 <flatcc_builder_table_add@@Base>
  40aaa0:	test   rax,rax
  40aaa3:	je     40a9fe <test_create_add_field@@Base+0x7e>
  40aaa9:	mov    QWORD PTR [rax],0xffffffffffffff9c
  40aab0:	test   ebp,ebp
  40aab2:	je     40a9fe <test_create_add_field@@Base+0x7e>
  40aab8:	xor    esi,esi
  40aaba:	mov    rdi,rbx
  40aabd:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40aac2:	test   rax,rax
  40aac5:	je     40a9fe <test_create_add_field@@Base+0x7e>
  40aacb:	mov    DWORD PTR [rax],ebp
  40aacd:	mov    esi,0x2
  40aad2:	mov    edx,0x2
  40aad7:	mov    ecx,0x2
  40aadc:	mov    rdi,rbx
  40aadf:	call   411800 <flatcc_builder_table_add@@Base>
  40aae4:	test   rax,rax
  40aae7:	je     40a9fe <test_create_add_field@@Base+0x7e>
  40aaed:	mov    WORD PTR [rax],0x2
  40aaf2:	lea    rsi,[rip+0xa645]        # 41513e <_IO_stdin_used@@Base+0x13e>
  40aaf9:	xor    edx,edx
  40aafb:	mov    rdi,rbx
  40aafe:	call   410e20 <flatcc_builder_check_required@@Base>
  40ab03:	test   eax,eax
  40ab05:	je     40abfe <test_create_add_field@@Base+0x27e>
  40ab0b:	mov    rdi,rbx
  40ab0e:	call   410e90 <flatcc_builder_end_table@@Base>
  40ab13:	test   eax,eax
  40ab15:	je     40a9fe <test_create_add_field@@Base+0x7e>
  40ab1b:	mov    ebp,eax
  40ab1d:	mov    esi,0xe
  40ab22:	mov    rdi,rbx
  40ab25:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40ab2a:	test   rax,rax
  40ab2d:	je     40a9fe <test_create_add_field@@Base+0x7e>
  40ab33:	mov    DWORD PTR [rax],ebp
  40ab35:	jmp    40a9fe <test_create_add_field@@Base+0x7e>
  40ab3a:	movzx  edx,dx
  40ab3d:	cmp    edx,0x22
  40ab40:	jb     40aba1 <test_create_add_field@@Base+0x221>
  40ab42:	movzx  ecx,WORD PTR [rax+rcx*1+0x20]
  40ab47:	test   rcx,rcx
  40ab4a:	je     40aba1 <test_create_add_field@@Base+0x221>
  40ab4c:	lea    rdx,[rax+rcx*1]
  40ab50:	mov    eax,DWORD PTR [rax+rcx*1]
  40ab53:	add    rax,rdx
  40ab56:	je     40aba1 <test_create_add_field@@Base+0x221>
  40ab58:	movsxd rcx,DWORD PTR [rax]
  40ab5b:	mov    rdx,rax
  40ab5e:	sub    rdx,rcx
  40ab61:	movzx  edx,WORD PTR [rdx]
  40ab64:	cmp    edx,0x8
  40ab67:	jb     40ab7f <test_create_add_field@@Base+0x1ff>
  40ab69:	neg    rcx
  40ab6c:	movzx  ecx,WORD PTR [rax+rcx*1+0x6]
  40ab71:	test   rcx,rcx
  40ab74:	je     40ab7f <test_create_add_field@@Base+0x1ff>
  40ab76:	xor    ebp,ebp
  40ab78:	cmp    QWORD PTR [rax+rcx*1],0xffffffffffffff9c
  40ab7d:	je     40ab90 <test_create_add_field@@Base+0x210>
  40ab7f:	lea    rdi,[rip+0xd6aa]        # 418230 <_IO_stdin_used@@Base+0x3230>
  40ab86:	call   404060 <puts@plt>
  40ab8b:	mov    ebp,0xffffffff
  40ab90:	mov    rdi,rbx
  40ab93:	call   412cc0 <flatcc_builder_aligned_free@@Base>
  40ab98:	mov    eax,ebp
  40ab9a:	add    rsp,0x8
  40ab9e:	pop    rbx
  40ab9f:	pop    rbp
  40aba0:	ret    
  40aba1:	lea    rdi,[rip+0xb2be]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  40aba8:	lea    rsi,[rip+0xb2dd]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40abaf:	lea    rcx,[rip+0xbc8e]        # 416844 <_IO_stdin_used@@Base+0x1844>
  40abb6:	mov    edx,0x260
  40abbb:	call   4040a0 <__assert_fail@plt>
  40abc0:	lea    rdi,[rip+0xb29f]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  40abc7:	lea    rsi,[rip+0xb2be]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40abce:	lea    rcx,[rip+0xbc23]        # 4167f8 <_IO_stdin_used@@Base+0x17f8>
  40abd5:	mov    edx,0x2cc
  40abda:	call   4040a0 <__assert_fail@plt>
  40abdf:	lea    rdi,[rip+0xb597]        # 41617d <_IO_stdin_used@@Base+0x117d>
  40abe6:	lea    rsi,[rip+0xb454]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40abed:	lea    rcx,[rip+0xb62b]        # 41621f <_IO_stdin_used@@Base+0x121f>
  40abf4:	mov    edx,0xeb
  40abf9:	call   4040a0 <__assert_fail@plt>
  40abfe:	lea    rdi,[rip+0xbb0f]        # 416714 <_IO_stdin_used@@Base+0x1714>
  40ac05:	lea    rsi,[rip+0xb435]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40ac0c:	lea    rcx,[rip+0xbb9a]        # 4167ad <_IO_stdin_used@@Base+0x17ad>
  40ac13:	mov    edx,0xdd
  40ac18:	call   4040a0 <__assert_fail@plt>
  40ac1d:	nop    DWORD PTR [rax]

000000000040ac20 <test_union_vector@@Base>:
  40ac20:	push   rbp
  40ac21:	push   r14
  40ac23:	push   rbx
  40ac24:	sub    rsp,0x10
  40ac28:	mov    rbx,rdi
  40ac2b:	call   40e610 <flatcc_builder_reset@@Base>
  40ac30:	lea    rsi,[rip+0xa511]        # 415148 <_IO_stdin_used@@Base+0x148>
  40ac37:	xor    edx,edx
  40ac39:	xor    ecx,ecx
  40ac3b:	mov    rdi,rbx
  40ac3e:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40ac43:	test   eax,eax
  40ac45:	jne    40ac54 <test_union_vector@@Base+0x34>
  40ac47:	mov    esi,0x24
  40ac4c:	mov    rdi,rbx
  40ac4f:	call   410480 <flatcc_builder_start_table@@Base>
  40ac54:	lea    rsi,[rip+0xad40]        # 41599b <_IO_stdin_used@@Base+0x99b>
  40ac5b:	mov    rdi,rbx
  40ac5e:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40ac63:	test   eax,eax
  40ac65:	je     40ac7d <test_union_vector@@Base+0x5d>
  40ac67:	mov    ebp,eax
  40ac69:	mov    esi,0x3
  40ac6e:	mov    rdi,rbx
  40ac71:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40ac76:	test   rax,rax
  40ac79:	je     40ac7d <test_union_vector@@Base+0x5d>
  40ac7b:	mov    DWORD PTR [rax],ebp
  40ac7d:	mov    esi,0x4
  40ac82:	mov    rdi,rbx
  40ac85:	call   410480 <flatcc_builder_start_table@@Base>
  40ac8a:	xor    ebp,ebp
  40ac8c:	test   eax,eax
  40ac8e:	jne    40acb3 <test_union_vector@@Base+0x93>
  40ac90:	lea    rsi,[rip+0xa4a9]        # 415140 <_IO_stdin_used@@Base+0x140>
  40ac97:	xor    edx,edx
  40ac99:	mov    rdi,rbx
  40ac9c:	call   410e20 <flatcc_builder_check_required@@Base>
  40aca1:	test   eax,eax
  40aca3:	je     40b0b7 <test_union_vector@@Base+0x497>
  40aca9:	mov    rdi,rbx
  40acac:	call   410e90 <flatcc_builder_end_table@@Base>
  40acb1:	mov    ebp,eax
  40acb3:	mov    rdi,rbx
  40acb6:	call   411dc0 <flatcc_builder_start_union_vector@@Base>
  40acbb:	shl    rbp,0x20
  40acbf:	or     rbp,0x2
  40acc3:	mov    rdi,rbx
  40acc6:	mov    rsi,rbp
  40acc9:	call   4123d0 <flatcc_builder_union_vector_push@@Base>
  40acce:	mov    rdi,rbx
  40acd1:	call   411e30 <flatcc_builder_end_union_vector@@Base>
  40acd6:	mov    r14,rax
  40acd9:	mov    esi,0x4
  40acde:	mov    rdi,rbx
  40ace1:	call   410480 <flatcc_builder_start_table@@Base>
  40ace6:	test   r14d,r14d
  40ace9:	je     40ad1f <test_union_vector@@Base+0xff>
  40aceb:	mov    rbp,r14
  40acee:	shr    rbp,0x20
  40acf2:	test   ebp,ebp
  40acf4:	je     40ad1f <test_union_vector@@Base+0xff>
  40acf6:	mov    esi,0x2
  40acfb:	mov    rdi,rbx
  40acfe:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40ad03:	test   rax,rax
  40ad06:	je     40ad1f <test_union_vector@@Base+0xff>
  40ad08:	mov    DWORD PTR [rax],r14d
  40ad0b:	mov    esi,0x3
  40ad10:	mov    rdi,rbx
  40ad13:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40ad18:	test   rax,rax
  40ad1b:	je     40ad1f <test_union_vector@@Base+0xff>
  40ad1d:	mov    DWORD PTR [rax],ebp
  40ad1f:	lea    rsi,[rip+0xa41c]        # 415142 <_IO_stdin_used@@Base+0x142>
  40ad26:	xor    edx,edx
  40ad28:	mov    rdi,rbx
  40ad2b:	call   410e20 <flatcc_builder_check_required@@Base>
  40ad30:	test   eax,eax
  40ad32:	je     40b05a <test_union_vector@@Base+0x43a>
  40ad38:	mov    rdi,rbx
  40ad3b:	call   410e90 <flatcc_builder_end_table@@Base>
  40ad40:	test   eax,eax
  40ad42:	je     40ad7d <test_union_vector@@Base+0x15d>
  40ad44:	mov    ebp,eax
  40ad46:	mov    esi,0x7
  40ad4b:	mov    edx,0x1
  40ad50:	mov    ecx,0x1
  40ad55:	mov    rdi,rbx
  40ad58:	call   411800 <flatcc_builder_table_add@@Base>
  40ad5d:	test   rax,rax
  40ad60:	je     40ad7d <test_union_vector@@Base+0x15d>
  40ad62:	mov    r14,rax
  40ad65:	mov    esi,0x8
  40ad6a:	mov    rdi,rbx
  40ad6d:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40ad72:	test   rax,rax
  40ad75:	je     40ad7d <test_union_vector@@Base+0x15d>
  40ad77:	mov    BYTE PTR [r14],0x4
  40ad7b:	mov    DWORD PTR [rax],ebp
  40ad7d:	lea    rsi,[rip+0xa3b4]        # 415138 <_IO_stdin_used@@Base+0x138>
  40ad84:	mov    edx,0x1
  40ad89:	mov    rdi,rbx
  40ad8c:	call   410e20 <flatcc_builder_check_required@@Base>
  40ad91:	test   eax,eax
  40ad93:	je     40b079 <test_union_vector@@Base+0x459>
  40ad99:	mov    rdi,rbx
  40ad9c:	call   410e90 <flatcc_builder_end_table@@Base>
  40ada1:	mov    rdi,rbx
  40ada4:	mov    esi,eax
  40ada6:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40adab:	lea    rsi,[rsp+0x8]
  40adb0:	mov    rdi,rbx
  40adb3:	call   412b90 <flatcc_builder_finalize_aligned_buffer@@Base>
  40adb8:	mov    rbx,rax
  40adbb:	mov    rsi,QWORD PTR [rsp+0x8]
  40adc0:	lea    rdx,[rip+0xa381]        # 415148 <_IO_stdin_used@@Base+0x148>
  40adc7:	lea    rcx,[rip+0x2902]        # 40d6d0 <main@@Base+0x310>
  40adce:	mov    rdi,rax
  40add1:	call   413ff0 <flatcc_verify_table_as_root@@Base>
  40add6:	test   eax,eax
  40add8:	je     40adff <test_union_vector@@Base+0x1df>
  40adda:	mov    edi,eax
  40addc:	call   413470 <flatcc_verify_error_string@@Base>
  40ade1:	mov    rcx,rax
  40ade4:	lea    rdi,[rip+0xabb7]        # 4159a2 <_IO_stdin_used@@Base+0x9a2>
  40adeb:	xor    eax,eax
  40aded:	mov    rsi,rcx
  40adf0:	call   404080 <printf@plt>
  40adf5:	mov    eax,0xffffffff
  40adfa:	jmp    40aea2 <test_union_vector@@Base+0x282>
  40adff:	test   rbx,rbx
  40ae02:	je     40b098 <test_union_vector@@Base+0x478>
  40ae08:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40ae0f:	jne    40b098 <test_union_vector@@Base+0x478>
  40ae15:	mov    ecx,DWORD PTR [rbx]
  40ae17:	mov    rax,rbx
  40ae1a:	add    rax,rcx
  40ae1d:	movsxd rcx,DWORD PTR [rbx+rcx*1]
  40ae21:	mov    rdx,rax
  40ae24:	sub    rdx,rcx
  40ae27:	movzx  edx,WORD PTR [rdx]
  40ae2a:	cmp    edx,0x13
  40ae2d:	jbe    40ae8a <test_union_vector@@Base+0x26a>
  40ae2f:	neg    rcx
  40ae32:	movzx  esi,WORD PTR [rax+rcx*1+0x12]
  40ae37:	test   rsi,rsi
  40ae3a:	je     40ae8a <test_union_vector@@Base+0x26a>
  40ae3c:	cmp    BYTE PTR [rax+rsi*1],0x4
  40ae40:	jne    40ae8a <test_union_vector@@Base+0x26a>
  40ae42:	movzx  edx,dx
  40ae45:	cmp    edx,0x16
  40ae48:	jb     40ae7c <test_union_vector@@Base+0x25c>
  40ae4a:	movzx  ecx,WORD PTR [rax+rcx*1+0x14]
  40ae4f:	test   rcx,rcx
  40ae52:	je     40ae7c <test_union_vector@@Base+0x25c>
  40ae54:	lea    rdx,[rax+rcx*1]
  40ae58:	mov    ecx,DWORD PTR [rax+rcx*1]
  40ae5b:	add    rcx,rdx
  40ae5e:	je     40ae7c <test_union_vector@@Base+0x25c>
  40ae60:	movsxd rdx,DWORD PTR [rcx]
  40ae63:	mov    rax,rcx
  40ae66:	sub    rax,rdx
  40ae69:	neg    rdx
  40ae6c:	movzx  eax,WORD PTR [rax]
  40ae6f:	cmp    eax,0xc
  40ae72:	jb     40aeab <test_union_vector@@Base+0x28b>
  40ae74:	cmp    WORD PTR [rcx+rdx*1+0xa],0x0
  40ae7a:	je     40aeb7 <test_union_vector@@Base+0x297>
  40ae7c:	lea    rdi,[rip+0xd3fd]        # 418280 <_IO_stdin_used@@Base+0x3280>
  40ae83:	call   404060 <puts@plt>
  40ae88:	jmp    40ae98 <test_union_vector@@Base+0x278>
  40ae8a:	lea    rdi,[rip+0xab4d]        # 4159de <_IO_stdin_used@@Base+0x9de>
  40ae91:	xor    eax,eax
  40ae93:	call   404080 <printf@plt>
  40ae98:	mov    rdi,rbx
  40ae9b:	call   412cc0 <flatcc_builder_aligned_free@@Base>
  40aea0:	xor    eax,eax
  40aea2:	add    rsp,0x10
  40aea6:	pop    rbx
  40aea7:	pop    r14
  40aea9:	pop    rbp
  40aeaa:	ret    
  40aeab:	movzx  esi,ax
  40aeae:	cmp    esi,0xa
  40aeb1:	jb     40af6e <test_union_vector@@Base+0x34e>
  40aeb7:	movzx  edi,WORD PTR [rcx+rdx*1+0x8]
  40aebc:	test   rdi,rdi
  40aebf:	je     40aed1 <test_union_vector@@Base+0x2b1>
  40aec1:	lea    rsi,[rcx+rdi*1]
  40aec5:	mov    ebp,DWORD PTR [rcx+rdi*1]
  40aec8:	add    rsi,rbp
  40aecb:	add    rsi,0x4
  40aecf:	jmp    40aed3 <test_union_vector@@Base+0x2b3>
  40aed1:	xor    esi,esi
  40aed3:	movzx  r8d,ax
  40aed7:	xor    ebp,ebp
  40aed9:	cmp    r8d,0xc
  40aedd:	jb     40af00 <test_union_vector@@Base+0x2e0>
  40aedf:	movzx  eax,WORD PTR [rcx+rdx*1+0xa]
  40aee4:	test   rax,rax
  40aee7:	je     40aefe <test_union_vector@@Base+0x2de>
  40aee9:	lea    rbp,[rcx+rax*1]
  40aeed:	mov    eax,DWORD PTR [rcx+rax*1]
  40aef0:	add    rbp,rax
  40aef3:	add    rbp,0x4
  40aef7:	test   rsi,rsi
  40aefa:	jne    40af05 <test_union_vector@@Base+0x2e5>
  40aefc:	jmp    40af6e <test_union_vector@@Base+0x34e>
  40aefe:	xor    ebp,ebp
  40af00:	test   rsi,rsi
  40af03:	je     40af6e <test_union_vector@@Base+0x34e>
  40af05:	cmp    DWORD PTR [rsi-0x4],0x1
  40af09:	jne    40af6e <test_union_vector@@Base+0x34e>
  40af0b:	cmp    BYTE PTR [rsi],0x2
  40af0e:	jne    40af7a <test_union_vector@@Base+0x35a>
  40af10:	test   rbp,rbp
  40af13:	je     40b0d6 <test_union_vector@@Base+0x4b6>
  40af19:	cmp    DWORD PTR [rbp-0x4],0x0
  40af1d:	je     40b0d6 <test_union_vector@@Base+0x4b6>
  40af23:	mov    esi,DWORD PTR [rbp+0x0]
  40af26:	add    rbp,rsi
  40af29:	je     40af86 <test_union_vector@@Base+0x366>
  40af2b:	movsxd rsi,DWORD PTR [rbp+0x0]
  40af2f:	mov    rax,rbp
  40af32:	sub    rax,rsi
  40af35:	movzx  eax,WORD PTR [rax]
  40af38:	cmp    eax,0x6
  40af3b:	jb     40af58 <test_union_vector@@Base+0x338>
  40af3d:	neg    rsi
  40af40:	movzx  esi,WORD PTR [rbp+rsi*1+0x4]
  40af45:	test   rsi,rsi
  40af48:	je     40af58 <test_union_vector@@Base+0x338>
  40af4a:	movsx  esi,BYTE PTR [rbp+rsi*1+0x0]
  40af4f:	cmp    esi,0x2
  40af52:	jne    40b047 <test_union_vector@@Base+0x427>
  40af58:	test   di,di
  40af5b:	je     40af92 <test_union_vector@@Base+0x372>
  40af5d:	lea    rax,[rcx+rdi*1]
  40af61:	mov    esi,DWORD PTR [rcx+rdi*1]
  40af64:	lea    rdi,[rsi+rax*1]
  40af68:	add    rdi,0x4
  40af6c:	jmp    40af94 <test_union_vector@@Base+0x374>
  40af6e:	lea    rdi,[rip+0xd3fb]        # 418370 <_IO_stdin_used@@Base+0x3370>
  40af75:	jmp    40ae83 <test_union_vector@@Base+0x263>
  40af7a:	lea    rdi,[rip+0xd3bf]        # 418340 <_IO_stdin_used@@Base+0x3340>
  40af81:	jmp    40ae83 <test_union_vector@@Base+0x263>
  40af86:	lea    rdi,[rip+0xc0be]        # 41704b <_IO_stdin_used@@Base+0x204b>
  40af8d:	jmp    40ae83 <test_union_vector@@Base+0x263>
  40af92:	xor    edi,edi
  40af94:	xor    esi,esi
  40af96:	cmp    r8d,0xc
  40af9a:	jb     40afbe <test_union_vector@@Base+0x39e>
  40af9c:	movzx  edx,WORD PTR [rcx+rdx*1+0xa]
  40afa1:	test   rdx,rdx
  40afa4:	je     40afbc <test_union_vector@@Base+0x39c>
  40afa6:	lea    rax,[rcx+rdx*1]
  40afaa:	mov    ecx,DWORD PTR [rcx+rdx*1]
  40afad:	lea    rsi,[rcx+rax*1]
  40afb1:	add    rsi,0x4
  40afb5:	test   rdi,rdi
  40afb8:	jne    40afc3 <test_union_vector@@Base+0x3a3>
  40afba:	jmp    40afcd <test_union_vector@@Base+0x3ad>
  40afbc:	xor    esi,esi
  40afbe:	test   rdi,rdi
  40afc1:	je     40afcd <test_union_vector@@Base+0x3ad>
  40afc3:	mov    ecx,DWORD PTR [rdi-0x4]
  40afc6:	test   rsi,rsi
  40afc9:	jne    40afd4 <test_union_vector@@Base+0x3b4>
  40afcb:	jmp    40afe1 <test_union_vector@@Base+0x3c1>
  40afcd:	xor    ecx,ecx
  40afcf:	test   rsi,rsi
  40afd2:	je     40afe1 <test_union_vector@@Base+0x3c1>
  40afd4:	mov    edx,DWORD PTR [rsi-0x4]
  40afd7:	cmp    rcx,rdx
  40afda:	je     40afec <test_union_vector@@Base+0x3cc>
  40afdc:	jmp    40b0f5 <test_union_vector@@Base+0x4d5>
  40afe1:	xor    edx,edx
  40afe3:	cmp    rcx,rdx
  40afe6:	jne    40b0f5 <test_union_vector@@Base+0x4d5>
  40afec:	test   rdi,rdi
  40afef:	je     40b02f <test_union_vector@@Base+0x40f>
  40aff1:	cmp    DWORD PTR [rdi-0x4],0x1
  40aff5:	jne    40b02f <test_union_vector@@Base+0x40f>
  40aff7:	mov    cl,BYTE PTR [rdi]
  40aff9:	test   cl,cl
  40affb:	je     40b03b <test_union_vector@@Base+0x41b>
  40affd:	test   rsi,rsi
  40b000:	je     40b0d6 <test_union_vector@@Base+0x4b6>
  40b006:	cmp    DWORD PTR [rsi-0x4],0x0
  40b00a:	je     40b0d6 <test_union_vector@@Base+0x4b6>
  40b010:	cmp    cl,0x2
  40b013:	jne    40b03b <test_union_vector@@Base+0x41b>
  40b015:	mov    eax,DWORD PTR [rsi]
  40b017:	add    rsi,rax
  40b01a:	cmp    rsi,rbp
  40b01d:	je     40ae98 <test_union_vector@@Base+0x278>
  40b023:	lea    rdi,[rip+0xd286]        # 4182b0 <_IO_stdin_used@@Base+0x32b0>
  40b02a:	jmp    40ae83 <test_union_vector@@Base+0x263>
  40b02f:	lea    rdi,[rip+0xd2ba]        # 4182f0 <_IO_stdin_used@@Base+0x32f0>
  40b036:	jmp    40ae83 <test_union_vector@@Base+0x263>
  40b03b:	lea    rdi,[rip+0xd28e]        # 4182d0 <_IO_stdin_used@@Base+0x32d0>
  40b042:	jmp    40ae83 <test_union_vector@@Base+0x263>
  40b047:	lea    rdi,[rip+0xa9b2]        # 415a00 <_IO_stdin_used@@Base+0xa00>
  40b04e:	xor    eax,eax
  40b050:	call   404080 <printf@plt>
  40b055:	jmp    40ae98 <test_union_vector@@Base+0x278>
  40b05a:	lea    rdi,[rip+0xb963]        # 4169c4 <_IO_stdin_used@@Base+0x19c4>
  40b061:	lea    rsi,[rip+0xafd9]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40b068:	lea    rcx,[rip+0xb9eb]        # 416a5a <_IO_stdin_used@@Base+0x1a5a>
  40b06f:	mov    edx,0xdf
  40b074:	call   4040a0 <__assert_fail@plt>
  40b079:	lea    rdi,[rip+0xb0fd]        # 41617d <_IO_stdin_used@@Base+0x117d>
  40b080:	lea    rsi,[rip+0xafba]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40b087:	lea    rcx,[rip+0xb191]        # 41621f <_IO_stdin_used@@Base+0x121f>
  40b08e:	mov    edx,0xeb
  40b093:	call   4040a0 <__assert_fail@plt>
  40b098:	lea    rdi,[rip+0xadc7]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  40b09f:	lea    rsi,[rip+0xade6]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40b0a6:	lea    rcx,[rip+0xb5c3]        # 416670 <_IO_stdin_used@@Base+0x1670>
  40b0ad:	mov    edx,0x2cd
  40b0b2:	call   4040a0 <__assert_fail@plt>
  40b0b7:	lea    rdi,[rip+0xb7c3]        # 416881 <_IO_stdin_used@@Base+0x1881>
  40b0be:	lea    rsi,[rip+0xaf7c]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40b0c5:	lea    rcx,[rip+0xb887]        # 416953 <_IO_stdin_used@@Base+0x1953>
  40b0cc:	mov    edx,0xd9
  40b0d1:	call   4040a0 <__assert_fail@plt>
  40b0d6:	lea    rdi,[rip+0xb37e]        # 41645b <_IO_stdin_used@@Base+0x145b>
  40b0dd:	lea    rsi,[rip+0xb3ae]        # 416492 <_IO_stdin_used@@Base+0x1492>
  40b0e4:	lea    rcx,[rip+0xba15]        # 416b00 <_IO_stdin_used@@Base+0x1b00>
  40b0eb:	mov    edx,0x75
  40b0f0:	call   4040a0 <__assert_fail@plt>
  40b0f5:	lea    rdi,[rip+0xba58]        # 416b54 <_IO_stdin_used@@Base+0x1b54>
  40b0fc:	lea    rsi,[rip+0xad89]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40b103:	lea    rcx,[rip+0xbaaf]        # 416bb9 <_IO_stdin_used@@Base+0x1bb9>
  40b10a:	mov    edx,0x26d
  40b10f:	call   4040a0 <__assert_fail@plt>
  40b114:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b11e:	xchg   ax,ax

000000000040b120 <test_mixed_type_union@@Base>:
  40b120:	push   rbp
  40b121:	push   r15
  40b123:	push   r14
  40b125:	push   r13
  40b127:	push   r12
  40b129:	push   rbx
  40b12a:	push   rax
  40b12b:	mov    rbx,rdi
  40b12e:	call   40e610 <flatcc_builder_reset@@Base>
  40b133:	lea    rsi,[rip+0xa00e]        # 415148 <_IO_stdin_used@@Base+0x148>
  40b13a:	xor    r14d,r14d
  40b13d:	xor    edx,edx
  40b13f:	xor    ecx,ecx
  40b141:	mov    rdi,rbx
  40b144:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40b149:	test   eax,eax
  40b14b:	jne    40b15a <test_mixed_type_union@@Base+0x3a>
  40b14d:	mov    esi,0xa
  40b152:	mov    rdi,rbx
  40b155:	call   410480 <flatcc_builder_start_table@@Base>
  40b15a:	mov    esi,0x4
  40b15f:	mov    edx,0x4
  40b164:	mov    rdi,rbx
  40b167:	call   40f500 <flatcc_builder_start_struct@@Base>
  40b16c:	test   rax,rax
  40b16f:	je     40b182 <test_mixed_type_union@@Base+0x62>
  40b171:	mov    DWORD PTR [rax],0xa
  40b177:	mov    rdi,rbx
  40b17a:	call   40f5d0 <flatcc_builder_end_struct@@Base>
  40b17f:	mov    r14d,eax
  40b182:	mov    esi,0x2
  40b187:	mov    edx,0x2
  40b18c:	mov    rdi,rbx
  40b18f:	call   40f500 <flatcc_builder_start_struct@@Base>
  40b194:	test   rax,rax
  40b197:	je     40b1ab <test_mixed_type_union@@Base+0x8b>
  40b199:	mov    WORD PTR [rax],0x16
  40b19e:	mov    rdi,rbx
  40b1a1:	call   40f5d0 <flatcc_builder_end_struct@@Base>
  40b1a6:	mov    r15d,eax
  40b1a9:	jmp    40b1ae <test_mixed_type_union@@Base+0x8e>
  40b1ab:	xor    r15d,r15d
  40b1ae:	mov    esi,0x2
  40b1b3:	mov    edx,0x2
  40b1b8:	mov    rdi,rbx
  40b1bb:	call   40f500 <flatcc_builder_start_struct@@Base>
  40b1c0:	test   rax,rax
  40b1c3:	je     40b20d <test_mixed_type_union@@Base+0xed>
  40b1c5:	mov    WORD PTR [rax],0x13
  40b1ca:	mov    rdi,rbx
  40b1cd:	call   40f5d0 <flatcc_builder_end_struct@@Base>
  40b1d2:	test   eax,eax
  40b1d4:	je     40b20d <test_mixed_type_union@@Base+0xed>
  40b1d6:	mov    ebp,eax
  40b1d8:	xor    esi,esi
  40b1da:	mov    edx,0x1
  40b1df:	mov    ecx,0x1
  40b1e4:	mov    rdi,rbx
  40b1e7:	call   411800 <flatcc_builder_table_add@@Base>
  40b1ec:	test   rax,rax
  40b1ef:	je     40b20d <test_mixed_type_union@@Base+0xed>
  40b1f1:	mov    r12,rax
  40b1f4:	mov    esi,0x1
  40b1f9:	mov    rdi,rbx
  40b1fc:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40b201:	test   rax,rax
  40b204:	je     40b20d <test_mixed_type_union@@Base+0xed>
  40b206:	mov    BYTE PTR [r12],0x8
  40b20b:	mov    DWORD PTR [rax],ebp
  40b20d:	test   r15d,r15d
  40b210:	je     40b24a <test_mixed_type_union@@Base+0x12a>
  40b212:	mov    esi,0x6
  40b217:	mov    edx,0x1
  40b21c:	mov    ecx,0x1
  40b221:	mov    rdi,rbx
  40b224:	call   411800 <flatcc_builder_table_add@@Base>
  40b229:	test   rax,rax
  40b22c:	je     40b24a <test_mixed_type_union@@Base+0x12a>
  40b22e:	mov    rbp,rax
  40b231:	mov    esi,0x7
  40b236:	mov    rdi,rbx
  40b239:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40b23e:	test   rax,rax
  40b241:	je     40b24a <test_mixed_type_union@@Base+0x12a>
  40b243:	mov    BYTE PTR [rbp+0x0],0x8
  40b247:	mov    DWORD PTR [rax],r15d
  40b24a:	mov    esi,0x1
  40b24f:	mov    rdi,rbx
  40b252:	call   410480 <flatcc_builder_start_table@@Base>
  40b257:	xor    r12d,r12d
  40b25a:	test   eax,eax
  40b25c:	je     40b2fc <test_mixed_type_union@@Base+0x1dc>
  40b262:	shl    r15,0x20
  40b266:	or     r15,0x8
  40b26a:	lea    rsi,[rip+0xa7ac]        # 415a1d <_IO_stdin_used@@Base+0xa1d>
  40b271:	mov    rdi,rbx
  40b274:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40b279:	test   eax,eax
  40b27b:	je     40b2b7 <test_mixed_type_union@@Base+0x197>
  40b27d:	mov    ebp,eax
  40b27f:	mov    esi,0x4
  40b284:	mov    edx,0x1
  40b289:	mov    ecx,0x1
  40b28e:	mov    rdi,rbx
  40b291:	call   411800 <flatcc_builder_table_add@@Base>
  40b296:	test   rax,rax
  40b299:	je     40b2b7 <test_mixed_type_union@@Base+0x197>
  40b29b:	mov    r13,rax
  40b29e:	mov    esi,0x5
  40b2a3:	mov    rdi,rbx
  40b2a6:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40b2ab:	test   rax,rax
  40b2ae:	je     40b2b7 <test_mixed_type_union@@Base+0x197>
  40b2b0:	mov    BYTE PTR [r13+0x0],0xb
  40b2b5:	mov    DWORD PTR [rax],ebp
  40b2b7:	mov    rdi,rbx
  40b2ba:	call   411dc0 <flatcc_builder_start_union_vector@@Base>
  40b2bf:	mov    rdi,rbx
  40b2c2:	mov    rsi,r15
  40b2c5:	call   4123d0 <flatcc_builder_union_vector_push@@Base>
  40b2ca:	shl    r12,0x20
  40b2ce:	or     r12,0x2
  40b2d2:	mov    rdi,rbx
  40b2d5:	mov    rsi,r12
  40b2d8:	call   4123d0 <flatcc_builder_union_vector_push@@Base>
  40b2dd:	mov    esi,0x1
  40b2e2:	mov    rdi,rbx
  40b2e5:	call   410480 <flatcc_builder_start_table@@Base>
  40b2ea:	test   eax,eax
  40b2ec:	je     40b390 <test_mixed_type_union@@Base+0x270>
  40b2f2:	mov    esi,0x2
  40b2f7:	jmp    40b3de <test_mixed_type_union@@Base+0x2be>
  40b2fc:	xor    r12d,r12d
  40b2ff:	xor    esi,esi
  40b301:	mov    edx,0x4
  40b306:	mov    ecx,0x4
  40b30b:	mov    rdi,rbx
  40b30e:	call   411800 <flatcc_builder_table_add@@Base>
  40b313:	test   rax,rax
  40b316:	je     40b262 <test_mixed_type_union@@Base+0x142>
  40b31c:	mov    DWORD PTR [rax],0x2a
  40b322:	lea    rsi,[rip+0x9e1b]        # 415144 <_IO_stdin_used@@Base+0x144>
  40b329:	xor    r12d,r12d
  40b32c:	xor    edx,edx
  40b32e:	mov    rdi,rbx
  40b331:	call   410e20 <flatcc_builder_check_required@@Base>
  40b336:	test   eax,eax
  40b338:	je     40ba8f <test_mixed_type_union@@Base+0x96f>
  40b33e:	mov    rdi,rbx
  40b341:	call   410e90 <flatcc_builder_end_table@@Base>
  40b346:	test   eax,eax
  40b348:	je     40b262 <test_mixed_type_union@@Base+0x142>
  40b34e:	mov    ebp,eax
  40b350:	mov    esi,0x2
  40b355:	mov    edx,0x1
  40b35a:	mov    ecx,0x1
  40b35f:	mov    rdi,rbx
  40b362:	call   411800 <flatcc_builder_table_add@@Base>
  40b367:	test   rax,rax
  40b36a:	je     40b388 <test_mixed_type_union@@Base+0x268>
  40b36c:	mov    r12,rax
  40b36f:	mov    esi,0x3
  40b374:	mov    rdi,rbx
  40b377:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40b37c:	test   rax,rax
  40b37f:	je     40b388 <test_mixed_type_union@@Base+0x268>
  40b381:	mov    BYTE PTR [r12],0x2
  40b386:	mov    DWORD PTR [rax],ebp
  40b388:	mov    r12d,ebp
  40b38b:	jmp    40b262 <test_mixed_type_union@@Base+0x142>
  40b390:	xor    esi,esi
  40b392:	mov    edx,0x4
  40b397:	mov    ecx,0x4
  40b39c:	mov    rdi,rbx
  40b39f:	call   411800 <flatcc_builder_table_add@@Base>
  40b3a4:	test   rax,rax
  40b3a7:	je     40b2f2 <test_mixed_type_union@@Base+0x1d2>
  40b3ad:	mov    DWORD PTR [rax],0x1
  40b3b3:	lea    rsi,[rip+0x9d8a]        # 415144 <_IO_stdin_used@@Base+0x144>
  40b3ba:	xor    edx,edx
  40b3bc:	mov    rdi,rbx
  40b3bf:	call   410e20 <flatcc_builder_check_required@@Base>
  40b3c4:	test   eax,eax
  40b3c6:	je     40ba8f <test_mixed_type_union@@Base+0x96f>
  40b3cc:	mov    rdi,rbx
  40b3cf:	call   410e90 <flatcc_builder_end_table@@Base>
  40b3d4:	mov    esi,eax
  40b3d6:	shl    rsi,0x20
  40b3da:	or     rsi,0x2
  40b3de:	mov    rdi,rbx
  40b3e1:	call   4123d0 <flatcc_builder_union_vector_push@@Base>
  40b3e6:	lea    rsi,[rip+0xa63b]        # 415a28 <_IO_stdin_used@@Base+0xa28>
  40b3ed:	mov    rdi,rbx
  40b3f0:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40b3f5:	shl    rax,0x20
  40b3f9:	lea    rsi,[rax+0xb]
  40b3fd:	mov    rdi,rbx
  40b400:	call   4123d0 <flatcc_builder_union_vector_push@@Base>
  40b405:	shl    r14,0x20
  40b409:	or     r14,0x9
  40b40d:	mov    rdi,rbx
  40b410:	mov    rsi,r14
  40b413:	call   4123d0 <flatcc_builder_union_vector_push@@Base>
  40b418:	mov    esi,0x4
  40b41d:	mov    edx,0x4
  40b422:	mov    rdi,rbx
  40b425:	call   40f500 <flatcc_builder_start_struct@@Base>
  40b42a:	mov    DWORD PTR [rax],0x3
  40b430:	mov    rdi,rbx
  40b433:	call   40f5d0 <flatcc_builder_end_struct@@Base>
  40b438:	shl    rax,0x20
  40b43c:	lea    rsi,[rax+0x9]
  40b440:	mov    rdi,rbx
  40b443:	call   4123d0 <flatcc_builder_union_vector_push@@Base>
  40b448:	mov    esi,0x4
  40b44d:	mov    edx,0x4
  40b452:	mov    rdi,rbx
  40b455:	call   40f500 <flatcc_builder_start_struct@@Base>
  40b45a:	test   rax,rax
  40b45d:	je     40b471 <test_mixed_type_union@@Base+0x351>
  40b45f:	mov    DWORD PTR [rax],0x1
  40b465:	mov    rdi,rbx
  40b468:	call   40f5d0 <flatcc_builder_end_struct@@Base>
  40b46d:	mov    esi,eax
  40b46f:	jmp    40b473 <test_mixed_type_union@@Base+0x353>
  40b471:	xor    esi,esi
  40b473:	shl    rsi,0x20
  40b477:	or     rsi,0x9
  40b47b:	mov    rdi,rbx
  40b47e:	call   4123d0 <flatcc_builder_union_vector_push@@Base>
  40b483:	mov    esi,0x4
  40b488:	mov    edx,0x4
  40b48d:	mov    rdi,rbx
  40b490:	call   40f500 <flatcc_builder_start_struct@@Base>
  40b495:	test   rax,rax
  40b498:	je     40b4b4 <test_mixed_type_union@@Base+0x394>
  40b49a:	mov    DWORD PTR [rax],0x2
  40b4a0:	mov    rdi,rbx
  40b4a3:	call   40f5d0 <flatcc_builder_end_struct@@Base>
  40b4a8:	mov    esi,eax
  40b4aa:	shl    rsi,0x20
  40b4ae:	or     rsi,0x9
  40b4b2:	jmp    40b4b9 <test_mixed_type_union@@Base+0x399>
  40b4b4:	mov    esi,0x9
  40b4b9:	mov    rdi,rbx
  40b4bc:	call   4123d0 <flatcc_builder_union_vector_push@@Base>
  40b4c1:	lea    rsi,[rip+0xa55e]        # 415a26 <_IO_stdin_used@@Base+0xa26>
  40b4c8:	mov    rdi,rbx
  40b4cb:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40b4d0:	shl    rax,0x20
  40b4d4:	lea    rsi,[rax+0xb]
  40b4d8:	mov    rdi,rbx
  40b4db:	call   4123d0 <flatcc_builder_union_vector_push@@Base>
  40b4e0:	lea    rsi,[rip+0xa53b]        # 415a22 <_IO_stdin_used@@Base+0xa22>
  40b4e7:	mov    rdi,rbx
  40b4ea:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40b4ef:	shl    rax,0x20
  40b4f3:	lea    rsi,[rax+0xb]
  40b4f7:	mov    rdi,rbx
  40b4fa:	call   4123d0 <flatcc_builder_union_vector_push@@Base>
  40b4ff:	mov    rdi,rbx
  40b502:	call   411e30 <flatcc_builder_end_union_vector@@Base>
  40b507:	mov    rbp,rax
  40b50a:	test   ebp,ebp
  40b50c:	je     40b543 <test_mixed_type_union@@Base+0x423>
  40b50e:	mov    r14,rbp
  40b511:	shr    r14,0x20
  40b515:	test   r14d,r14d
  40b518:	je     40b543 <test_mixed_type_union@@Base+0x423>
  40b51a:	mov    esi,0x8
  40b51f:	mov    rdi,rbx
  40b522:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40b527:	test   rax,rax
  40b52a:	je     40b543 <test_mixed_type_union@@Base+0x423>
  40b52c:	mov    DWORD PTR [rax],ebp
  40b52e:	mov    esi,0x9
  40b533:	mov    rdi,rbx
  40b536:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40b53b:	test   rax,rax
  40b53e:	je     40b543 <test_mixed_type_union@@Base+0x423>
  40b540:	mov    DWORD PTR [rax],r14d
  40b543:	lea    rsi,[rip+0x9bfc]        # 415146 <_IO_stdin_used@@Base+0x146>
  40b54a:	xor    edx,edx
  40b54c:	mov    rdi,rbx
  40b54f:	call   410e20 <flatcc_builder_check_required@@Base>
  40b554:	test   eax,eax
  40b556:	je     40ba51 <test_mixed_type_union@@Base+0x931>
  40b55c:	mov    rdi,rbx
  40b55f:	call   410e90 <flatcc_builder_end_table@@Base>
  40b564:	mov    rdi,rbx
  40b567:	mov    esi,eax
  40b569:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40b56e:	mov    rsi,rsp
  40b571:	mov    rdi,rbx
  40b574:	call   412b90 <flatcc_builder_finalize_aligned_buffer@@Base>
  40b579:	mov    rbx,rax
  40b57c:	mov    rdx,QWORD PTR [rsp]
  40b580:	mov    rax,QWORD PTR [rip+0x12a71]        # 41dff8 <stderr@GLIBC_2.2.5>
  40b587:	mov    rcx,QWORD PTR [rax]
  40b58a:	lea    rdi,[rip+0xa49d]        # 415a2e <_IO_stdin_used@@Base+0xa2e>
  40b591:	mov    rsi,rbx
  40b594:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  40b599:	mov    rsi,QWORD PTR [rsp]
  40b59d:	lea    rdx,[rip+0x9ba4]        # 415148 <_IO_stdin_used@@Base+0x148>
  40b5a4:	lea    rcx,[rip+0x2775]        # 40dd20 <main@@Base+0x960>
  40b5ab:	mov    rdi,rbx
  40b5ae:	call   413ff0 <flatcc_verify_table_as_root@@Base>
  40b5b3:	test   eax,eax
  40b5b5:	je     40b5dc <test_mixed_type_union@@Base+0x4bc>
  40b5b7:	mov    edi,eax
  40b5b9:	call   413470 <flatcc_verify_error_string@@Base>
  40b5be:	mov    rcx,rax
  40b5c1:	lea    rdi,[rip+0xa473]        # 415a3b <_IO_stdin_used@@Base+0xa3b>
  40b5c8:	xor    eax,eax
  40b5ca:	mov    rsi,rcx
  40b5cd:	call   404080 <printf@plt>
  40b5d2:	mov    ebp,0xffffffff
  40b5d7:	jmp    40b690 <test_mixed_type_union@@Base+0x570>
  40b5dc:	test   rbx,rbx
  40b5df:	je     40ba70 <test_mixed_type_union@@Base+0x950>
  40b5e5:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40b5ec:	jne    40ba70 <test_mixed_type_union@@Base+0x950>
  40b5f2:	mov    eax,DWORD PTR [rbx]
  40b5f4:	mov    r13,rbx
  40b5f7:	add    r13,rax
  40b5fa:	movsxd rbp,DWORD PTR [rbx+rax*1]
  40b5fe:	mov    rax,r13
  40b601:	sub    rax,rbp
  40b604:	movzx  ecx,WORD PTR [rax]
  40b607:	cmp    ecx,0x7
  40b60a:	jbe    40b665 <test_mixed_type_union@@Base+0x545>
  40b60c:	neg    rbp
  40b60f:	movzx  eax,WORD PTR [r13+rbp*1+0x6]
  40b615:	test   rax,rax
  40b618:	je     40b665 <test_mixed_type_union@@Base+0x545>
  40b61a:	movzx  ecx,cx
  40b61d:	cmp    ecx,0x18
  40b620:	jb     40b66e <test_mixed_type_union@@Base+0x54e>
  40b622:	movzx  r12d,WORD PTR [r13+rbp*1+0x16]
  40b628:	test   r12,r12
  40b62b:	je     40b66e <test_mixed_type_union@@Base+0x54e>
  40b62d:	movzx  ecx,WORD PTR [r13+rbp*1+0x4]
  40b633:	test   rcx,rcx
  40b636:	je     40b677 <test_mixed_type_union@@Base+0x557>
  40b638:	mov    cl,BYTE PTR [r13+rcx*1+0x0]
  40b63d:	test   cl,cl
  40b63f:	je     40b677 <test_mixed_type_union@@Base+0x557>
  40b641:	cmp    cl,0x8
  40b644:	jne    40b677 <test_mixed_type_union@@Base+0x557>
  40b646:	lea    rcx,[rax+r13*1]
  40b64a:	mov    eax,DWORD PTR [r13+rax*1+0x0]
  40b64f:	add    rax,rcx
  40b652:	je     40b6a1 <test_mixed_type_union@@Base+0x581>
  40b654:	movzx  eax,WORD PTR [rax]
  40b657:	cmp    eax,0x14
  40b65a:	jb     40b6b2 <test_mixed_type_union@@Base+0x592>
  40b65c:	lea    rdi,[rip+0xcfcd]        # 418630 <_IO_stdin_used@@Base+0x3630>
  40b663:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40b665:	lea    rdi,[rip+0xcd34]        # 4183a0 <_IO_stdin_used@@Base+0x33a0>
  40b66c:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40b66e:	lea    rdi,[rip+0xcd5b]        # 4183d0 <_IO_stdin_used@@Base+0x33d0>
  40b675:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40b677:	lea    rdi,[rip+0xcfe2]        # 418660 <_IO_stdin_used@@Base+0x3660>
  40b67e:	call   404060 <puts@plt>
  40b683:	mov    ebp,0xffffffff
  40b688:	mov    rdi,rbx
  40b68b:	call   412cc0 <flatcc_builder_aligned_free@@Base>
  40b690:	mov    eax,ebp
  40b692:	add    rsp,0x8
  40b696:	pop    rbx
  40b697:	pop    r12
  40b699:	pop    r13
  40b69b:	pop    r14
  40b69d:	pop    r15
  40b69f:	pop    rbp
  40b6a0:	ret    
  40b6a1:	lea    rdi,[rip+0xcd58]        # 418400 <_IO_stdin_used@@Base+0x3400>
  40b6a8:	call   404060 <puts@plt>
  40b6ad:	jmp    40b7df <test_mixed_type_union@@Base+0x6bf>
  40b6b2:	movzx  eax,ax
  40b6b5:	cmp    eax,0x13
  40b6b8:	jne    40b7df <test_mixed_type_union@@Base+0x6bf>
  40b6be:	movzx  eax,WORD PTR [r13+rbp*1+0x10]
  40b6c4:	test   rax,rax
  40b6c7:	je     40b7eb <test_mixed_type_union@@Base+0x6cb>
  40b6cd:	cmp    BYTE PTR [r13+rax*1+0x0],0x8
  40b6d3:	jne    40b7eb <test_mixed_type_union@@Base+0x6cb>
  40b6d9:	movzx  eax,WORD PTR [r13+rbp*1+0x12]
  40b6df:	test   rax,rax
  40b6e2:	je     40b7f7 <test_mixed_type_union@@Base+0x6d7>
  40b6e8:	lea    rcx,[rax+r13*1]
  40b6ec:	mov    eax,DWORD PTR [r13+rax*1+0x0]
  40b6f1:	add    rax,rcx
  40b6f4:	je     40b7f7 <test_mixed_type_union@@Base+0x6d7>
  40b6fa:	movzx  eax,WORD PTR [rax]
  40b6fd:	cmp    eax,0x16
  40b700:	jne    40b803 <test_mixed_type_union@@Base+0x6e3>
  40b706:	movzx  eax,WORD PTR [r13+rbp*1+0x8]
  40b70c:	test   rax,rax
  40b70f:	je     40b80f <test_mixed_type_union@@Base+0x6ef>
  40b715:	cmp    BYTE PTR [r13+rax*1+0x0],0x2
  40b71b:	jne    40b80f <test_mixed_type_union@@Base+0x6ef>
  40b721:	movzx  eax,WORD PTR [r13+rbp*1+0xa]
  40b727:	test   rax,rax
  40b72a:	je     40b81b <test_mixed_type_union@@Base+0x6fb>
  40b730:	lea    rcx,[rax+r13*1]
  40b734:	mov    eax,DWORD PTR [r13+rax*1+0x0]
  40b739:	add    rax,rcx
  40b73c:	je     40b81b <test_mixed_type_union@@Base+0x6fb>
  40b742:	movsxd rcx,DWORD PTR [rax]
  40b745:	mov    rdx,rax
  40b748:	sub    rdx,rcx
  40b74b:	movzx  edx,WORD PTR [rdx]
  40b74e:	cmp    edx,0x6
  40b751:	jb     40b81b <test_mixed_type_union@@Base+0x6fb>
  40b757:	neg    rcx
  40b75a:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  40b75f:	test   rcx,rcx
  40b762:	je     40b81b <test_mixed_type_union@@Base+0x6fb>
  40b768:	cmp    DWORD PTR [rax+rcx*1],0x2a
  40b76c:	jne    40b81b <test_mixed_type_union@@Base+0x6fb>
  40b772:	movzx  eax,WORD PTR [r13+rbp*1+0xc]
  40b778:	test   rax,rax
  40b77b:	je     40b827 <test_mixed_type_union@@Base+0x707>
  40b781:	cmp    BYTE PTR [r13+rax*1+0x0],0xb
  40b787:	jne    40b827 <test_mixed_type_union@@Base+0x707>
  40b78d:	movzx  eax,WORD PTR [r13+rbp*1+0xe]
  40b793:	test   rax,rax
  40b796:	je     40b833 <test_mixed_type_union@@Base+0x713>
  40b79c:	lea    r15,[rax+r13*1]
  40b7a0:	mov    eax,DWORD PTR [r13+rax*1+0x0]
  40b7a5:	lea    r14,[rax+r15*1]
  40b7a9:	add    r14,0x4
  40b7ad:	add    r15,rax
  40b7b0:	cmovne r15,r14
  40b7b4:	je     40b833 <test_mixed_type_union@@Base+0x713>
  40b7b6:	lea    rsi,[rip+0xa260]        # 415a1d <_IO_stdin_used@@Base+0xa1d>
  40b7bd:	mov    rdi,r15
  40b7c0:	call   4040f0 <strcmp@plt>
  40b7c5:	test   eax,eax
  40b7c7:	je     40b83f <test_mixed_type_union@@Base+0x71f>
  40b7c9:	lea    rdi,[rip+0xa2ba]        # 415a8a <_IO_stdin_used@@Base+0xa8a>
  40b7d0:	xor    eax,eax
  40b7d2:	mov    rsi,r15
  40b7d5:	call   404080 <printf@plt>
  40b7da:	jmp    40b683 <test_mixed_type_union@@Base+0x563>
  40b7df:	lea    rdi,[rip+0xce1a]        # 418600 <_IO_stdin_used@@Base+0x3600>
  40b7e6:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40b7eb:	lea    rdi,[rip+0xcdce]        # 4185c0 <_IO_stdin_used@@Base+0x35c0>
  40b7f2:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40b7f7:	lea    rdi,[rip+0xcc22]        # 418420 <_IO_stdin_used@@Base+0x3420>
  40b7fe:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40b803:	lea    rdi,[rip+0xcd86]        # 418590 <_IO_stdin_used@@Base+0x3590>
  40b80a:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40b80f:	lea    rdi,[rip+0xcd5a]        # 418570 <_IO_stdin_used@@Base+0x3570>
  40b816:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40b81b:	lea    rdi,[rip+0xcc2e]        # 418450 <_IO_stdin_used@@Base+0x3450>
  40b822:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40b827:	lea    rdi,[rip+0xcd22]        # 418550 <_IO_stdin_used@@Base+0x3550>
  40b82e:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40b833:	lea    rdi,[rip+0xcc46]        # 418480 <_IO_stdin_used@@Base+0x3480>
  40b83a:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40b83f:	lea    rsi,[rip+0xa1d7]        # 415a1d <_IO_stdin_used@@Base+0xa1d>
  40b846:	mov    rdi,r14
  40b849:	call   4040f0 <strcmp@plt>
  40b84e:	test   eax,eax
  40b850:	je     40b85b <test_mixed_type_union@@Base+0x73b>
  40b852:	lea    rdi,[rip+0xa255]        # 415aae <_IO_stdin_used@@Base+0xaae>
  40b859:	jmp    40b875 <test_mixed_type_union@@Base+0x755>
  40b85b:	lea    rsi,[rip+0xa1bb]        # 415a1d <_IO_stdin_used@@Base+0xa1d>
  40b862:	mov    rdi,r14
  40b865:	call   4040f0 <strcmp@plt>
  40b86a:	test   eax,eax
  40b86c:	je     40b884 <test_mixed_type_union@@Base+0x764>
  40b86e:	lea    rdi,[rip+0xa266]        # 415adb <_IO_stdin_used@@Base+0xadb>
  40b875:	xor    eax,eax
  40b877:	mov    rsi,r14
  40b87a:	call   404080 <printf@plt>
  40b87f:	jmp    40b683 <test_mixed_type_union@@Base+0x563>
  40b884:	movzx  eax,WORD PTR [r13+rbp*1+0x14]
  40b88a:	test   rax,rax
  40b88d:	je     40b8a2 <test_mixed_type_union@@Base+0x782>
  40b88f:	lea    rcx,[rax+r13*1]
  40b893:	mov    edx,DWORD PTR [r13+rax*1+0x0]
  40b898:	lea    r14,[rdx+rcx*1]
  40b89c:	add    r14,0x4
  40b8a0:	jmp    40b8a5 <test_mixed_type_union@@Base+0x785>
  40b8a2:	xor    r14d,r14d
  40b8a5:	lea    rcx,[r12+r13*1]
  40b8a9:	mov    edx,DWORD PTR [r13+r12*1+0x0]
  40b8ae:	add    rcx,rdx
  40b8b1:	add    rcx,0x4
  40b8b5:	test   r14,r14
  40b8b8:	je     40b8c0 <test_mixed_type_union@@Base+0x7a0>
  40b8ba:	mov    edx,DWORD PTR [r14-0x4]
  40b8be:	jmp    40b8c2 <test_mixed_type_union@@Base+0x7a2>
  40b8c0:	xor    edx,edx
  40b8c2:	mov    esi,DWORD PTR [rcx-0x4]
  40b8c5:	cmp    rdx,rsi
  40b8c8:	jne    40bc53 <test_mixed_type_union@@Base+0xb33>
  40b8ce:	test   r14,r14
  40b8d1:	je     40bc34 <test_mixed_type_union@@Base+0xb14>
  40b8d7:	mov    r15d,DWORD PTR [r14-0x4]
  40b8db:	test   r15d,r15d
  40b8de:	je     40bc34 <test_mixed_type_union@@Base+0xb14>
  40b8e4:	mov    dl,BYTE PTR [r14]
  40b8e7:	test   dl,dl
  40b8e9:	je     40ba2c <test_mixed_type_union@@Base+0x90c>
  40b8ef:	mov    r12d,DWORD PTR [rcx-0x4]
  40b8f3:	test   r12d,r12d
  40b8f6:	je     40bc72 <test_mixed_type_union@@Base+0xb52>
  40b8fc:	cmp    dl,0x8
  40b8ff:	jne    40ba2c <test_mixed_type_union@@Base+0x90c>
  40b905:	cmp    r15d,0x1
  40b909:	jbe    40bc34 <test_mixed_type_union@@Base+0xb14>
  40b90f:	mov    dl,BYTE PTR [r14+0x1]
  40b913:	test   dl,dl
  40b915:	je     40ba35 <test_mixed_type_union@@Base+0x915>
  40b91b:	cmp    r12d,0x1
  40b91f:	jbe    40bc72 <test_mixed_type_union@@Base+0xb52>
  40b925:	cmp    dl,0x2
  40b928:	jne    40ba35 <test_mixed_type_union@@Base+0x915>
  40b92e:	lea    rsi,[rcx+0x4]
  40b932:	mov    edi,DWORD PTR [rsi]
  40b934:	lea    rdx,[rsi+rdi*1]
  40b938:	movsxd rsi,DWORD PTR [rsi+rdi*1]
  40b93c:	mov    rdi,rdx
  40b93f:	sub    rdi,rsi
  40b942:	movzx  edi,WORD PTR [rdi]
  40b945:	cmp    edi,0x6
  40b948:	jb     40ba3e <test_mixed_type_union@@Base+0x91e>
  40b94e:	neg    rsi
  40b951:	movzx  esi,WORD PTR [rdx+rsi*1+0x4]
  40b956:	test   rsi,rsi
  40b959:	je     40ba3e <test_mixed_type_union@@Base+0x91e>
  40b95f:	cmp    DWORD PTR [rdx+rsi*1],0x2a
  40b963:	jne    40ba3e <test_mixed_type_union@@Base+0x91e>
  40b969:	cmp    r15d,0x2
  40b96d:	jbe    40bc34 <test_mixed_type_union@@Base+0xb14>
  40b973:	mov    dl,BYTE PTR [r14+0x2]
  40b977:	test   dl,dl
  40b979:	je     40baae <test_mixed_type_union@@Base+0x98e>
  40b97f:	cmp    r12d,0x2
  40b983:	jbe    40bc72 <test_mixed_type_union@@Base+0xb52>
  40b989:	cmp    dl,0x2
  40b98c:	jne    40baae <test_mixed_type_union@@Base+0x98e>
  40b992:	lea    rsi,[rcx+0x8]
  40b996:	mov    edi,DWORD PTR [rsi]
  40b998:	lea    rdx,[rsi+rdi*1]
  40b99c:	movsxd rsi,DWORD PTR [rsi+rdi*1]
  40b9a0:	mov    rdi,rdx
  40b9a3:	sub    rdi,rsi
  40b9a6:	movzx  edi,WORD PTR [rdi]
  40b9a9:	cmp    edi,0x6
  40b9ac:	jb     40bab7 <test_mixed_type_union@@Base+0x997>
  40b9b2:	neg    rsi
  40b9b5:	movzx  esi,WORD PTR [rdx+rsi*1+0x4]
  40b9ba:	test   rsi,rsi
  40b9bd:	je     40bab7 <test_mixed_type_union@@Base+0x997>
  40b9c3:	cmp    DWORD PTR [rdx+rsi*1],0x1
  40b9c7:	jne    40bab7 <test_mixed_type_union@@Base+0x997>
  40b9cd:	test   ax,ax
  40b9d0:	je     40bc91 <test_mixed_type_union@@Base+0xb71>
  40b9d6:	lea    rdx,[rax+r13*1]
  40b9da:	mov    eax,DWORD PTR [r13+rax*1+0x0]
  40b9df:	cmp    DWORD PTR [rax+rdx*1],0x3
  40b9e3:	jbe    40bc91 <test_mixed_type_union@@Base+0xb71>
  40b9e9:	cmp    BYTE PTR [rdx+rax*1+0x7],0xb
  40b9ee:	jne    40bac0 <test_mixed_type_union@@Base+0x9a0>
  40b9f4:	cmp    r12d,0x3
  40b9f8:	jbe    40bcb0 <test_mixed_type_union@@Base+0xb90>
  40b9fe:	mov    eax,DWORD PTR [rcx+0xc]
  40ba01:	lea    rbp,[rcx+rax*1]
  40ba05:	add    rbp,0x10
  40ba09:	lea    rsi,[rip+0xa018]        # 415a28 <_IO_stdin_used@@Base+0xa28>
  40ba10:	mov    rdi,rbp
  40ba13:	call   4040f0 <strcmp@plt>
  40ba18:	test   eax,eax
  40ba1a:	je     40bacc <test_mixed_type_union@@Base+0x9ac>
  40ba20:	lea    rdi,[rip+0xca79]        # 4184a0 <_IO_stdin_used@@Base+0x34a0>
  40ba27:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40ba2c:	lea    rdi,[rip+0xa0d5]        # 415b08 <_IO_stdin_used@@Base+0xb08>
  40ba33:	jmp    40ba45 <test_mixed_type_union@@Base+0x925>
  40ba35:	lea    rdi,[rip+0xa0f1]        # 415b2d <_IO_stdin_used@@Base+0xb2d>
  40ba3c:	jmp    40ba45 <test_mixed_type_union@@Base+0x925>
  40ba3e:	lea    rdi,[rip+0xa10b]        # 415b50 <_IO_stdin_used@@Base+0xb50>
  40ba45:	xor    eax,eax
  40ba47:	call   404080 <printf@plt>
  40ba4c:	jmp    40b683 <test_mixed_type_union@@Base+0x563>
  40ba51:	lea    rdi,[rip+0xb2b2]        # 416d0a <_IO_stdin_used@@Base+0x1d0a>
  40ba58:	lea    rsi,[rip+0xa5e2]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40ba5f:	lea    rcx,[rip+0xb32b]        # 416d91 <_IO_stdin_used@@Base+0x1d91>
  40ba66:	mov    edx,0xf1
  40ba6b:	call   4040a0 <__assert_fail@plt>
  40ba70:	lea    rdi,[rip+0xa3ef]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  40ba77:	lea    rsi,[rip+0xa40e]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40ba7e:	lea    rcx,[rip+0xb34b]        # 416dd0 <_IO_stdin_used@@Base+0x1dd0>
  40ba85:	mov    edx,0x333
  40ba8a:	call   4040a0 <__assert_fail@plt>
  40ba8f:	lea    rdi,[rip+0xb19f]        # 416c35 <_IO_stdin_used@@Base+0x1c35>
  40ba96:	lea    rsi,[rip+0xa5a4]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40ba9d:	lea    rcx,[rip+0xb221]        # 416cc5 <_IO_stdin_used@@Base+0x1cc5>
  40baa4:	mov    edx,0xef
  40baa9:	call   4040a0 <__assert_fail@plt>
  40baae:	lea    rdi,[rip+0xa0cd]        # 415b82 <_IO_stdin_used@@Base+0xb82>
  40bab5:	jmp    40ba45 <test_mixed_type_union@@Base+0x925>
  40bab7:	lea    rdi,[rip+0xa0e6]        # 415ba4 <_IO_stdin_used@@Base+0xba4>
  40babe:	jmp    40ba45 <test_mixed_type_union@@Base+0x925>
  40bac0:	lea    rdi,[rip+0xca59]        # 418520 <_IO_stdin_used@@Base+0x3520>
  40bac7:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40bacc:	cmp    r15d,0x3
  40bad0:	jbe    40bc34 <test_mixed_type_union@@Base+0xb14>
  40bad6:	cmp    BYTE PTR [r14+0x3],0xb
  40badb:	jne    40bafc <test_mixed_type_union@@Base+0x9dc>
  40badd:	lea    rsi,[rip+0x9f44]        # 415a28 <_IO_stdin_used@@Base+0xa28>
  40bae4:	mov    rdi,rbp
  40bae7:	call   4040f0 <strcmp@plt>
  40baec:	test   eax,eax
  40baee:	je     40bb08 <test_mixed_type_union@@Base+0x9e8>
  40baf0:	lea    rdi,[rip+0xc9e9]        # 4184e0 <_IO_stdin_used@@Base+0x34e0>
  40baf7:	jmp    40b67e <test_mixed_type_union@@Base+0x55e>
  40bafc:	lea    rdi,[rip+0xa0d2]        # 415bd5 <_IO_stdin_used@@Base+0xbd5>
  40bb03:	jmp    40ba45 <test_mixed_type_union@@Base+0x925>
  40bb08:	cmp    r15d,0x4
  40bb0c:	jbe    40bc34 <test_mixed_type_union@@Base+0xb14>
  40bb12:	mov    al,BYTE PTR [r14+0x4]
  40bb16:	test   al,al
  40bb18:	je     40bbf8 <test_mixed_type_union@@Base+0xad8>
  40bb1e:	cmp    r12d,0x4
  40bb22:	jbe    40bc72 <test_mixed_type_union@@Base+0xb52>
  40bb28:	cmp    al,0x9
  40bb2a:	jne    40bbf8 <test_mixed_type_union@@Base+0xad8>
  40bb30:	cmp    r15d,0x5
  40bb34:	jbe    40bc34 <test_mixed_type_union@@Base+0xb14>
  40bb3a:	mov    al,BYTE PTR [r14+0x5]
  40bb3e:	test   al,al
  40bb40:	je     40bc04 <test_mixed_type_union@@Base+0xae4>
  40bb46:	cmp    r12d,0x5
  40bb4a:	jbe    40bc72 <test_mixed_type_union@@Base+0xb52>
  40bb50:	cmp    al,0x9
  40bb52:	jne    40bc04 <test_mixed_type_union@@Base+0xae4>
  40bb58:	cmp    r15d,0x6
  40bb5c:	jbe    40bc34 <test_mixed_type_union@@Base+0xb14>
  40bb62:	mov    al,BYTE PTR [r14+0x6]
  40bb66:	test   al,al
  40bb68:	je     40bc10 <test_mixed_type_union@@Base+0xaf0>
  40bb6e:	cmp    r12d,0x6
  40bb72:	jbe    40bc72 <test_mixed_type_union@@Base+0xb52>
  40bb78:	cmp    al,0x9
  40bb7a:	jne    40bc10 <test_mixed_type_union@@Base+0xaf0>
  40bb80:	cmp    r15d,0x7
  40bb84:	jbe    40bc34 <test_mixed_type_union@@Base+0xb14>
  40bb8a:	mov    al,BYTE PTR [r14+0x7]
  40bb8e:	test   al,al
  40bb90:	je     40bc1c <test_mixed_type_union@@Base+0xafc>
  40bb96:	cmp    r12d,0x7
  40bb9a:	jbe    40bc72 <test_mixed_type_union@@Base+0xb52>
  40bba0:	cmp    al,0x9
  40bba2:	jne    40bc1c <test_mixed_type_union@@Base+0xafc>
  40bba4:	cmp    r15d,0x8
  40bba8:	jbe    40bc34 <test_mixed_type_union@@Base+0xb14>
  40bbae:	mov    al,BYTE PTR [r14+0x8]
  40bbb2:	test   al,al
  40bbb4:	je     40bc28 <test_mixed_type_union@@Base+0xb08>
  40bbb6:	cmp    r12d,0x8
  40bbba:	jbe    40bc72 <test_mixed_type_union@@Base+0xb52>
  40bbc0:	cmp    al,0xb
  40bbc2:	jne    40bc28 <test_mixed_type_union@@Base+0xb08>
  40bbc4:	cmp    r15d,0x9
  40bbc8:	jbe    40bc34 <test_mixed_type_union@@Base+0xb14>
  40bbca:	mov    al,BYTE PTR [r14+0x9]
  40bbce:	test   al,al
  40bbd0:	je     40bc28 <test_mixed_type_union@@Base+0xb08>
  40bbd2:	cmp    r12d,0x9
  40bbd6:	jbe    40bc72 <test_mixed_type_union@@Base+0xb52>
  40bbdc:	cmp    al,0xb
  40bbde:	jne    40bc28 <test_mixed_type_union@@Base+0xb08>
  40bbe0:	xor    ebp,ebp
  40bbe2:	cmp    r15d,0xa
  40bbe6:	je     40b688 <test_mixed_type_union@@Base+0x568>
  40bbec:	lea    rdi,[rip+0xa0d1]        # 415cc4 <_IO_stdin_used@@Base+0xcc4>
  40bbf3:	jmp    40ba45 <test_mixed_type_union@@Base+0x925>
  40bbf8:	lea    rdi,[rip+0xa00e]        # 415c0d <_IO_stdin_used@@Base+0xc0d>
  40bbff:	jmp    40ba45 <test_mixed_type_union@@Base+0x925>
  40bc04:	lea    rdi,[rip+0xa024]        # 415c2f <_IO_stdin_used@@Base+0xc2f>
  40bc0b:	jmp    40ba45 <test_mixed_type_union@@Base+0x925>
  40bc10:	lea    rdi,[rip+0xa03a]        # 415c51 <_IO_stdin_used@@Base+0xc51>
  40bc17:	jmp    40ba45 <test_mixed_type_union@@Base+0x925>
  40bc1c:	lea    rdi,[rip+0xa052]        # 415c75 <_IO_stdin_used@@Base+0xc75>
  40bc23:	jmp    40ba45 <test_mixed_type_union@@Base+0x925>
  40bc28:	lea    rdi,[rip+0xa069]        # 415c98 <_IO_stdin_used@@Base+0xc98>
  40bc2f:	jmp    40ba45 <test_mixed_type_union@@Base+0x925>
  40bc34:	lea    rdi,[rip+0xafda]        # 416c15 <_IO_stdin_used@@Base+0x1c15>
  40bc3b:	lea    rsi,[rip+0xa24a]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40bc42:	lea    rcx,[rip+0xb21e]        # 416e67 <_IO_stdin_used@@Base+0x1e67>
  40bc49:	mov    edx,0x305
  40bc4e:	call   4040a0 <__assert_fail@plt>
  40bc53:	lea    rdi,[rip+0xaefa]        # 416b54 <_IO_stdin_used@@Base+0x1b54>
  40bc5a:	lea    rsi,[rip+0xa22b]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40bc61:	lea    rcx,[rip+0xb1ab]        # 416e13 <_IO_stdin_used@@Base+0x1e13>
  40bc68:	mov    edx,0x337
  40bc6d:	call   4040a0 <__assert_fail@plt>
  40bc72:	lea    rdi,[rip+0xa7e2]        # 41645b <_IO_stdin_used@@Base+0x145b>
  40bc79:	lea    rsi,[rip+0xa812]        # 416492 <_IO_stdin_used@@Base+0x1492>
  40bc80:	lea    rcx,[rip+0xae79]        # 416b00 <_IO_stdin_used@@Base+0x1b00>
  40bc87:	mov    edx,0x75
  40bc8c:	call   4040a0 <__assert_fail@plt>
  40bc91:	lea    rdi,[rip+0xa7c3]        # 41645b <_IO_stdin_used@@Base+0x145b>
  40bc98:	lea    rsi,[rip+0xa7f3]        # 416492 <_IO_stdin_used@@Base+0x1492>
  40bc9f:	lea    rcx,[rip+0xadfd]        # 416aa3 <_IO_stdin_used@@Base+0x1aa3>
  40bca6:	mov    edx,0x195
  40bcab:	call   4040a0 <__assert_fail@plt>
  40bcb0:	lea    rdi,[rip+0xa7a4]        # 41645b <_IO_stdin_used@@Base+0x145b>
  40bcb7:	lea    rsi,[rip+0xa7d4]        # 416492 <_IO_stdin_used@@Base+0x1492>
  40bcbe:	lea    rcx,[rip+0xb202]        # 416ec7 <_IO_stdin_used@@Base+0x1ec7>
  40bcc5:	mov    edx,0x77
  40bcca:	call   4040a0 <__assert_fail@plt>
  40bccf:	nop

000000000040bcd0 <test_add_set_defaults@@Base>:
  40bcd0:	push   rbp
  40bcd1:	push   rbx
  40bcd2:	push   rax
  40bcd3:	mov    rbx,rdi
  40bcd6:	call   40e610 <flatcc_builder_reset@@Base>
  40bcdb:	lea    rsi,[rip+0x9466]        # 415148 <_IO_stdin_used@@Base+0x148>
  40bce2:	xor    edx,edx
  40bce4:	xor    ecx,ecx
  40bce6:	mov    rdi,rbx
  40bce9:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40bcee:	test   eax,eax
  40bcf0:	jne    40bcff <test_add_set_defaults@@Base+0x2f>
  40bcf2:	mov    esi,0x24
  40bcf7:	mov    rdi,rbx
  40bcfa:	call   410480 <flatcc_builder_start_table@@Base>
  40bcff:	lea    rsi,[rip+0x9486]        # 41518c <_IO_stdin_used@@Base+0x18c>
  40bd06:	mov    rdi,rbx
  40bd09:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40bd0e:	test   eax,eax
  40bd10:	je     40bd28 <test_add_set_defaults@@Base+0x58>
  40bd12:	mov    ebp,eax
  40bd14:	mov    esi,0x3
  40bd19:	mov    rdi,rbx
  40bd1c:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40bd21:	test   rax,rax
  40bd24:	je     40bd28 <test_add_set_defaults@@Base+0x58>
  40bd26:	mov    DWORD PTR [rax],ebp
  40bd28:	mov    esi,0x1
  40bd2d:	mov    edx,0x2
  40bd32:	mov    ecx,0x2
  40bd37:	mov    rdi,rbx
  40bd3a:	call   411800 <flatcc_builder_table_add@@Base>
  40bd3f:	test   rax,rax
  40bd42:	je     40bd49 <test_add_set_defaults@@Base+0x79>
  40bd44:	mov    WORD PTR [rax],0x64
  40bd49:	lea    rsi,[rip+0x93e8]        # 415138 <_IO_stdin_used@@Base+0x138>
  40bd50:	mov    edx,0x1
  40bd55:	mov    rdi,rbx
  40bd58:	call   410e20 <flatcc_builder_check_required@@Base>
  40bd5d:	test   eax,eax
  40bd5f:	je     40bf86 <test_add_set_defaults@@Base+0x2b6>
  40bd65:	mov    rdi,rbx
  40bd68:	call   410e90 <flatcc_builder_end_table@@Base>
  40bd6d:	mov    rdi,rbx
  40bd70:	mov    esi,eax
  40bd72:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40bd77:	mov    rsi,rsp
  40bd7a:	mov    rdi,rbx
  40bd7d:	call   412a50 <flatcc_builder_get_direct_buffer@@Base>
  40bd82:	test   rax,rax
  40bd85:	je     40bf67 <test_add_set_defaults@@Base+0x297>
  40bd8b:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  40bd92:	jne    40bf67 <test_add_set_defaults@@Base+0x297>
  40bd98:	mov    edx,DWORD PTR [rax]
  40bd9a:	mov    rcx,rax
  40bd9d:	add    rcx,rdx
  40bda0:	movsxd rax,DWORD PTR [rax+rdx*1]
  40bda4:	mov    rdx,rcx
  40bda7:	sub    rdx,rax
  40bdaa:	neg    rax
  40bdad:	movzx  edx,WORD PTR [rdx]
  40bdb0:	cmp    edx,0x9
  40bdb3:	jbe    40bdc9 <test_add_set_defaults@@Base+0xf9>
  40bdb5:	cmp    WORD PTR [rcx+rax*1+0x8],0x0
  40bdbb:	je     40bdd1 <test_add_set_defaults@@Base+0x101>
  40bdbd:	lea    rdi,[rip+0xc9dc]        # 4187a0 <_IO_stdin_used@@Base+0x37a0>
  40bdc4:	jmp    40bf4d <test_add_set_defaults@@Base+0x27d>
  40bdc9:	movzx  esi,dx
  40bdcc:	cmp    esi,0x8
  40bdcf:	jb     40bdf5 <test_add_set_defaults@@Base+0x125>
  40bdd1:	cmp    WORD PTR [rcx+rax*1+0x6],0x0
  40bdd7:	je     40bdf5 <test_add_set_defaults@@Base+0x125>
  40bdd9:	movzx  edx,dx
  40bddc:	cmp    edx,0x12
  40bddf:	jb     40be01 <test_add_set_defaults@@Base+0x131>
  40bde1:	cmp    WORD PTR [rcx+rax*1+0x10],0x0
  40bde7:	je     40be01 <test_add_set_defaults@@Base+0x131>
  40bde9:	lea    rdi,[rip+0xc980]        # 418770 <_IO_stdin_used@@Base+0x3770>
  40bdf0:	jmp    40bf4d <test_add_set_defaults@@Base+0x27d>
  40bdf5:	lea    rdi,[rip+0xc884]        # 418680 <_IO_stdin_used@@Base+0x3680>
  40bdfc:	jmp    40bf4d <test_add_set_defaults@@Base+0x27d>
  40be01:	mov    rdi,rbx
  40be04:	call   40e610 <flatcc_builder_reset@@Base>
  40be09:	lea    rsi,[rip+0x9338]        # 415148 <_IO_stdin_used@@Base+0x148>
  40be10:	xor    edx,edx
  40be12:	xor    ecx,ecx
  40be14:	mov    rdi,rbx
  40be17:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40be1c:	test   eax,eax
  40be1e:	jne    40be2d <test_add_set_defaults@@Base+0x15d>
  40be20:	mov    esi,0x24
  40be25:	mov    rdi,rbx
  40be28:	call   410480 <flatcc_builder_start_table@@Base>
  40be2d:	lea    rsi,[rip+0x9358]        # 41518c <_IO_stdin_used@@Base+0x18c>
  40be34:	mov    rdi,rbx
  40be37:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40be3c:	test   eax,eax
  40be3e:	je     40be56 <test_add_set_defaults@@Base+0x186>
  40be40:	mov    ebp,eax
  40be42:	mov    esi,0x3
  40be47:	mov    rdi,rbx
  40be4a:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40be4f:	test   rax,rax
  40be52:	je     40be56 <test_add_set_defaults@@Base+0x186>
  40be54:	mov    DWORD PTR [rax],ebp
  40be56:	mov    esi,0x2
  40be5b:	mov    edx,0x2
  40be60:	mov    ecx,0x2
  40be65:	mov    rdi,rbx
  40be68:	call   411800 <flatcc_builder_table_add@@Base>
  40be6d:	test   rax,rax
  40be70:	je     40be77 <test_add_set_defaults@@Base+0x1a7>
  40be72:	mov    WORD PTR [rax],0x64
  40be77:	mov    esi,0x1
  40be7c:	mov    edx,0x2
  40be81:	mov    ecx,0x2
  40be86:	mov    rdi,rbx
  40be89:	call   411800 <flatcc_builder_table_add@@Base>
  40be8e:	test   rax,rax
  40be91:	je     40be98 <test_add_set_defaults@@Base+0x1c8>
  40be93:	mov    WORD PTR [rax],0x64
  40be98:	mov    esi,0x6
  40be9d:	mov    edx,0x1
  40bea2:	mov    ecx,0x1
  40bea7:	mov    rdi,rbx
  40beaa:	call   411800 <flatcc_builder_table_add@@Base>
  40beaf:	test   rax,rax
  40beb2:	je     40beb7 <test_add_set_defaults@@Base+0x1e7>
  40beb4:	mov    BYTE PTR [rax],0x8
  40beb7:	lea    rsi,[rip+0x927a]        # 415138 <_IO_stdin_used@@Base+0x138>
  40bebe:	mov    edx,0x1
  40bec3:	mov    rdi,rbx
  40bec6:	call   410e20 <flatcc_builder_check_required@@Base>
  40becb:	test   eax,eax
  40becd:	je     40bf86 <test_add_set_defaults@@Base+0x2b6>
  40bed3:	mov    rdi,rbx
  40bed6:	call   410e90 <flatcc_builder_end_table@@Base>
  40bedb:	mov    rdi,rbx
  40bede:	mov    esi,eax
  40bee0:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40bee5:	mov    rsi,rsp
  40bee8:	mov    rdi,rbx
  40beeb:	call   412a50 <flatcc_builder_get_direct_buffer@@Base>
  40bef0:	test   rax,rax
  40bef3:	je     40bf67 <test_add_set_defaults@@Base+0x297>
  40bef5:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  40befc:	jne    40bf67 <test_add_set_defaults@@Base+0x297>
  40befe:	mov    edx,DWORD PTR [rax]
  40bf00:	mov    rcx,rax
  40bf03:	add    rcx,rdx
  40bf06:	movsxd rdx,DWORD PTR [rax+rdx*1]
  40bf0a:	mov    rax,rcx
  40bf0d:	sub    rax,rdx
  40bf10:	movzx  eax,WORD PTR [rax]
  40bf13:	cmp    eax,0x9
  40bf16:	jbe    40bf46 <test_add_set_defaults@@Base+0x276>
  40bf18:	neg    rdx
  40bf1b:	cmp    WORD PTR [rcx+rdx*1+0x8],0x0
  40bf21:	je     40bf46 <test_add_set_defaults@@Base+0x276>
  40bf23:	cmp    WORD PTR [rcx+rdx*1+0x6],0x0
  40bf29:	je     40bf5e <test_add_set_defaults@@Base+0x28e>
  40bf2b:	movzx  eax,ax
  40bf2e:	cmp    eax,0x12
  40bf31:	jb     40bf3d <test_add_set_defaults@@Base+0x26d>
  40bf33:	xor    eax,eax
  40bf35:	cmp    WORD PTR [rcx+rdx*1+0x10],0x0
  40bf3b:	jne    40bf57 <test_add_set_defaults@@Base+0x287>
  40bf3d:	lea    rdi,[rip+0xc7ec]        # 418730 <_IO_stdin_used@@Base+0x3730>
  40bf44:	jmp    40bf4d <test_add_set_defaults@@Base+0x27d>
  40bf46:	lea    rdi,[rip+0xc763]        # 4186b0 <_IO_stdin_used@@Base+0x36b0>
  40bf4d:	call   404060 <puts@plt>
  40bf52:	mov    eax,0xffffffff
  40bf57:	add    rsp,0x8
  40bf5b:	pop    rbx
  40bf5c:	pop    rbp
  40bf5d:	ret    
  40bf5e:	lea    rdi,[rip+0xc78b]        # 4186f0 <_IO_stdin_used@@Base+0x36f0>
  40bf65:	jmp    40bf4d <test_add_set_defaults@@Base+0x27d>
  40bf67:	lea    rdi,[rip+0x9ef8]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  40bf6e:	lea    rsi,[rip+0x9f17]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40bf75:	lea    rcx,[rip+0x9fce]        # 415f4a <_IO_stdin_used@@Base+0xf4a>
  40bf7c:	mov    edx,0x2b9
  40bf81:	call   4040a0 <__assert_fail@plt>
  40bf86:	lea    rdi,[rip+0xa1f0]        # 41617d <_IO_stdin_used@@Base+0x117d>
  40bf8d:	lea    rsi,[rip+0xa0ad]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40bf94:	lea    rcx,[rip+0xa284]        # 41621f <_IO_stdin_used@@Base+0x121f>
  40bf9b:	mov    edx,0xeb
  40bfa0:	call   4040a0 <__assert_fail@plt>
  40bfa5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bfaf:	nop

000000000040bfb0 <test_nested_buffer@@Base>:
  40bfb0:	push   rbp
  40bfb1:	push   r14
  40bfb3:	push   rbx
  40bfb4:	sub    rsp,0x10
  40bfb8:	mov    rbx,rdi
  40bfbb:	call   40e610 <flatcc_builder_reset@@Base>
  40bfc0:	lea    rsi,[rip+0x9181]        # 415148 <_IO_stdin_used@@Base+0x148>
  40bfc7:	xor    edx,edx
  40bfc9:	xor    ecx,ecx
  40bfcb:	mov    rdi,rbx
  40bfce:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40bfd3:	test   eax,eax
  40bfd5:	jne    40bfe4 <test_nested_buffer@@Base+0x34>
  40bfd7:	mov    esi,0x24
  40bfdc:	mov    rdi,rbx
  40bfdf:	call   410480 <flatcc_builder_start_table@@Base>
  40bfe4:	lea    rsi,[rip+0x91a1]        # 41518c <_IO_stdin_used@@Base+0x18c>
  40bfeb:	mov    rdi,rbx
  40bfee:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40bff3:	test   eax,eax
  40bff5:	je     40c00d <test_nested_buffer@@Base+0x5d>
  40bff7:	mov    ebp,eax
  40bff9:	mov    esi,0x3
  40bffe:	mov    rdi,rbx
  40c001:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40c006:	test   rax,rax
  40c009:	je     40c00d <test_nested_buffer@@Base+0x5d>
  40c00b:	mov    DWORD PTR [rax],ebp
  40c00d:	lea    rsi,[rip+0x9134]        # 415148 <_IO_stdin_used@@Base+0x148>
  40c014:	xor    edx,edx
  40c016:	xor    ecx,ecx
  40c018:	mov    rdi,rbx
  40c01b:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40c020:	test   eax,eax
  40c022:	jne    40c031 <test_nested_buffer@@Base+0x81>
  40c024:	mov    esi,0x24
  40c029:	mov    rdi,rbx
  40c02c:	call   410480 <flatcc_builder_start_table@@Base>
  40c031:	lea    rsi,[rip+0x9cb2]        # 415cea <_IO_stdin_used@@Base+0xcea>
  40c038:	mov    rdi,rbx
  40c03b:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40c040:	test   eax,eax
  40c042:	je     40c05a <test_nested_buffer@@Base+0xaa>
  40c044:	mov    ebp,eax
  40c046:	mov    esi,0x3
  40c04b:	mov    rdi,rbx
  40c04e:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40c053:	test   rax,rax
  40c056:	je     40c05a <test_nested_buffer@@Base+0xaa>
  40c058:	mov    DWORD PTR [rax],ebp
  40c05a:	lea    rsi,[rip+0x90d7]        # 415138 <_IO_stdin_used@@Base+0x138>
  40c061:	mov    edx,0x1
  40c066:	mov    rdi,rbx
  40c069:	call   410e20 <flatcc_builder_check_required@@Base>
  40c06e:	test   eax,eax
  40c070:	je     40c26c <test_nested_buffer@@Base+0x2bc>
  40c076:	mov    rdi,rbx
  40c079:	call   410e90 <flatcc_builder_end_table@@Base>
  40c07e:	mov    rdi,rbx
  40c081:	mov    esi,eax
  40c083:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40c088:	test   eax,eax
  40c08a:	je     40c0a2 <test_nested_buffer@@Base+0xf2>
  40c08c:	mov    ebp,eax
  40c08e:	mov    esi,0xd
  40c093:	mov    rdi,rbx
  40c096:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40c09b:	test   rax,rax
  40c09e:	je     40c0a2 <test_nested_buffer@@Base+0xf2>
  40c0a0:	mov    DWORD PTR [rax],ebp
  40c0a2:	mov    esi,0x2
  40c0a7:	mov    edx,0x2
  40c0ac:	mov    ecx,0x2
  40c0b1:	mov    rdi,rbx
  40c0b4:	call   411800 <flatcc_builder_table_add@@Base>
  40c0b9:	test   rax,rax
  40c0bc:	je     40c0c3 <test_nested_buffer@@Base+0x113>
  40c0be:	mov    WORD PTR [rax],0xa
  40c0c3:	lea    rsi,[rip+0x906e]        # 415138 <_IO_stdin_used@@Base+0x138>
  40c0ca:	mov    edx,0x1
  40c0cf:	mov    rdi,rbx
  40c0d2:	call   410e20 <flatcc_builder_check_required@@Base>
  40c0d7:	test   eax,eax
  40c0d9:	je     40c26c <test_nested_buffer@@Base+0x2bc>
  40c0df:	mov    rdi,rbx
  40c0e2:	call   410e90 <flatcc_builder_end_table@@Base>
  40c0e7:	mov    rdi,rbx
  40c0ea:	mov    esi,eax
  40c0ec:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40c0f1:	lea    rsi,[rsp+0x8]
  40c0f6:	mov    rdi,rbx
  40c0f9:	call   412a50 <flatcc_builder_get_direct_buffer@@Base>
  40c0fe:	mov    rbx,rax
  40c101:	mov    rdx,QWORD PTR [rsp+0x8]
  40c106:	mov    rax,QWORD PTR [rip+0x11eeb]        # 41dff8 <stderr@GLIBC_2.2.5>
  40c10d:	mov    rcx,QWORD PTR [rax]
  40c110:	lea    rdi,[rip+0x9be3]        # 415cfa <_IO_stdin_used@@Base+0xcfa>
  40c117:	mov    rsi,rbx
  40c11a:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  40c11f:	test   rbx,rbx
  40c122:	je     40c244 <test_nested_buffer@@Base+0x294>
  40c128:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40c12f:	jne    40c244 <test_nested_buffer@@Base+0x294>
  40c135:	mov    eax,DWORD PTR [rbx]
  40c137:	mov    rbp,rbx
  40c13a:	add    rbp,rax
  40c13d:	movsxd rbx,DWORD PTR [rbx+rax*1]
  40c141:	mov    rax,rbp
  40c144:	sub    rax,rbx
  40c147:	movzx  r14d,WORD PTR [rax]
  40c14b:	cmp    r14d,0xb
  40c14f:	jbe    40c24d <test_nested_buffer@@Base+0x29d>
  40c155:	neg    rbx
  40c158:	movzx  eax,WORD PTR [rbp+rbx*1+0xa]
  40c15d:	test   rax,rax
  40c160:	je     40c24d <test_nested_buffer@@Base+0x29d>
  40c166:	lea    rcx,[rax+rbp*1]
  40c16a:	mov    eax,DWORD PTR [rbp+rax*1+0x0]
  40c16e:	lea    rdi,[rax+rcx*1]
  40c172:	add    rdi,0x4
  40c176:	lea    rsi,[rip+0x900f]        # 41518c <_IO_stdin_used@@Base+0x18c>
  40c17d:	call   4040f0 <strcmp@plt>
  40c182:	test   eax,eax
  40c184:	je     40c192 <test_nested_buffer@@Base+0x1e2>
  40c186:	lea    rdi,[rip+0xc6e3]        # 418870 <_IO_stdin_used@@Base+0x3870>
  40c18d:	jmp    40c22d <test_nested_buffer@@Base+0x27d>
  40c192:	movzx  eax,r14w
  40c196:	cmp    eax,0x20
  40c199:	jb     40c1c5 <test_nested_buffer@@Base+0x215>
  40c19b:	movzx  eax,WORD PTR [rbp+rbx*1+0x1e]
  40c1a0:	test   rax,rax
  40c1a3:	je     40c1c5 <test_nested_buffer@@Base+0x215>
  40c1a5:	lea    rcx,[rax+rbp*1]
  40c1a9:	mov    eax,DWORD PTR [rbp+rax*1+0x0]
  40c1ad:	cmp    DWORD PTR [rax+rcx*1+0x8],0x534e4f4d
  40c1b5:	jne    40c1c5 <test_nested_buffer@@Base+0x215>
  40c1b7:	add    rcx,rax
  40c1ba:	add    rcx,0x4
  40c1be:	mov    eax,DWORD PTR [rcx]
  40c1c0:	add    rax,rcx
  40c1c3:	jmp    40c1c7 <test_nested_buffer@@Base+0x217>
  40c1c5:	xor    eax,eax
  40c1c7:	movzx  ecx,WORD PTR [rbp+rbx*1+0x8]
  40c1cc:	test   rcx,rcx
  40c1cf:	je     40c226 <test_nested_buffer@@Base+0x276>
  40c1d1:	movzx  ecx,WORD PTR [rbp+rcx*1+0x0]
  40c1d6:	cmp    ecx,0xa
  40c1d9:	jne    40c226 <test_nested_buffer@@Base+0x276>
  40c1db:	test   rax,rax
  40c1de:	je     40c244 <test_nested_buffer@@Base+0x294>
  40c1e0:	movsxd rcx,DWORD PTR [rax]
  40c1e3:	mov    rdx,rax
  40c1e6:	sub    rdx,rcx
  40c1e9:	movzx  edx,WORD PTR [rdx]
  40c1ec:	cmp    edx,0xc
  40c1ef:	jb     40c24d <test_nested_buffer@@Base+0x29d>
  40c1f1:	neg    rcx
  40c1f4:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  40c1f9:	test   rcx,rcx
  40c1fc:	je     40c24d <test_nested_buffer@@Base+0x29d>
  40c1fe:	lea    rdx,[rax+rcx*1]
  40c202:	mov    eax,DWORD PTR [rax+rcx*1]
  40c205:	lea    rdi,[rax+rdx*1]
  40c209:	add    rdi,0x4
  40c20d:	lea    rsi,[rip+0x9ad6]        # 415cea <_IO_stdin_used@@Base+0xcea>
  40c214:	call   4040f0 <strcmp@plt>
  40c219:	test   eax,eax
  40c21b:	je     40c240 <test_nested_buffer@@Base+0x290>
  40c21d:	lea    rdi,[rip+0xc5fc]        # 418820 <_IO_stdin_used@@Base+0x3820>
  40c224:	jmp    40c22d <test_nested_buffer@@Base+0x27d>
  40c226:	lea    rdi,[rip+0xc613]        # 418840 <_IO_stdin_used@@Base+0x3840>
  40c22d:	call   404060 <puts@plt>
  40c232:	mov    eax,0xffffffff
  40c237:	add    rsp,0x10
  40c23b:	pop    rbx
  40c23c:	pop    r14
  40c23e:	pop    rbp
  40c23f:	ret    
  40c240:	xor    eax,eax
  40c242:	jmp    40c237 <test_nested_buffer@@Base+0x287>
  40c244:	lea    rdi,[rip+0x9c1b]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  40c24b:	jmp    40c254 <test_nested_buffer@@Base+0x2a4>
  40c24d:	lea    rdi,[rip+0xa18d]        # 4163e1 <_IO_stdin_used@@Base+0x13e1>
  40c254:	lea    rsi,[rip+0x9c31]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40c25b:	lea    rcx,[rip+0xa12e]        # 416390 <_IO_stdin_used@@Base+0x1390>
  40c262:	mov    edx,0x2bb
  40c267:	call   4040a0 <__assert_fail@plt>
  40c26c:	lea    rdi,[rip+0x9f0a]        # 41617d <_IO_stdin_used@@Base+0x117d>
  40c273:	lea    rsi,[rip+0x9dc7]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40c27a:	lea    rcx,[rip+0x9f9e]        # 41621f <_IO_stdin_used@@Base+0x121f>
  40c281:	mov    edx,0xeb
  40c286:	call   4040a0 <__assert_fail@plt>
  40c28b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040c290 <test_nested_buffer_first@@Base>:
  40c290:	push   rbp
  40c291:	push   r14
  40c293:	push   rbx
  40c294:	sub    rsp,0x10
  40c298:	mov    rbx,rdi
  40c29b:	call   40e610 <flatcc_builder_reset@@Base>
  40c2a0:	lea    rsi,[rip+0x8ea1]        # 415148 <_IO_stdin_used@@Base+0x148>
  40c2a7:	xor    edx,edx
  40c2a9:	xor    ecx,ecx
  40c2ab:	mov    rdi,rbx
  40c2ae:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40c2b3:	test   eax,eax
  40c2b5:	jne    40c2c4 <test_nested_buffer_first@@Base+0x34>
  40c2b7:	mov    esi,0x24
  40c2bc:	mov    rdi,rbx
  40c2bf:	call   410480 <flatcc_builder_start_table@@Base>
  40c2c4:	lea    rsi,[rip+0x8e7d]        # 415148 <_IO_stdin_used@@Base+0x148>
  40c2cb:	xor    edx,edx
  40c2cd:	xor    ecx,ecx
  40c2cf:	mov    rdi,rbx
  40c2d2:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40c2d7:	test   eax,eax
  40c2d9:	jne    40c2e8 <test_nested_buffer_first@@Base+0x58>
  40c2db:	mov    esi,0x24
  40c2e0:	mov    rdi,rbx
  40c2e3:	call   410480 <flatcc_builder_start_table@@Base>
  40c2e8:	lea    rsi,[rip+0x99fb]        # 415cea <_IO_stdin_used@@Base+0xcea>
  40c2ef:	mov    rdi,rbx
  40c2f2:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40c2f7:	test   eax,eax
  40c2f9:	je     40c311 <test_nested_buffer_first@@Base+0x81>
  40c2fb:	mov    ebp,eax
  40c2fd:	mov    esi,0x3
  40c302:	mov    rdi,rbx
  40c305:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40c30a:	test   rax,rax
  40c30d:	je     40c311 <test_nested_buffer_first@@Base+0x81>
  40c30f:	mov    DWORD PTR [rax],ebp
  40c311:	lea    rsi,[rip+0x8e20]        # 415138 <_IO_stdin_used@@Base+0x138>
  40c318:	mov    edx,0x1
  40c31d:	mov    rdi,rbx
  40c320:	call   410e20 <flatcc_builder_check_required@@Base>
  40c325:	test   eax,eax
  40c327:	je     40c54c <test_nested_buffer_first@@Base+0x2bc>
  40c32d:	mov    rdi,rbx
  40c330:	call   410e90 <flatcc_builder_end_table@@Base>
  40c335:	mov    rdi,rbx
  40c338:	mov    esi,eax
  40c33a:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40c33f:	test   eax,eax
  40c341:	je     40c359 <test_nested_buffer_first@@Base+0xc9>
  40c343:	mov    ebp,eax
  40c345:	mov    esi,0xd
  40c34a:	mov    rdi,rbx
  40c34d:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40c352:	test   rax,rax
  40c355:	je     40c359 <test_nested_buffer_first@@Base+0xc9>
  40c357:	mov    DWORD PTR [rax],ebp
  40c359:	mov    esi,0x2
  40c35e:	mov    edx,0x2
  40c363:	mov    ecx,0x2
  40c368:	mov    rdi,rbx
  40c36b:	call   411800 <flatcc_builder_table_add@@Base>
  40c370:	test   rax,rax
  40c373:	je     40c37a <test_nested_buffer_first@@Base+0xea>
  40c375:	mov    WORD PTR [rax],0xa
  40c37a:	lea    rsi,[rip+0x8e0b]        # 41518c <_IO_stdin_used@@Base+0x18c>
  40c381:	mov    rdi,rbx
  40c384:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40c389:	test   eax,eax
  40c38b:	je     40c3a3 <test_nested_buffer_first@@Base+0x113>
  40c38d:	mov    ebp,eax
  40c38f:	mov    esi,0x3
  40c394:	mov    rdi,rbx
  40c397:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40c39c:	test   rax,rax
  40c39f:	je     40c3a3 <test_nested_buffer_first@@Base+0x113>
  40c3a1:	mov    DWORD PTR [rax],ebp
  40c3a3:	lea    rsi,[rip+0x8d8e]        # 415138 <_IO_stdin_used@@Base+0x138>
  40c3aa:	mov    edx,0x1
  40c3af:	mov    rdi,rbx
  40c3b2:	call   410e20 <flatcc_builder_check_required@@Base>
  40c3b7:	test   eax,eax
  40c3b9:	je     40c54c <test_nested_buffer_first@@Base+0x2bc>
  40c3bf:	mov    rdi,rbx
  40c3c2:	call   410e90 <flatcc_builder_end_table@@Base>
  40c3c7:	mov    rdi,rbx
  40c3ca:	mov    esi,eax
  40c3cc:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40c3d1:	lea    rsi,[rsp+0x8]
  40c3d6:	mov    rdi,rbx
  40c3d9:	call   412a50 <flatcc_builder_get_direct_buffer@@Base>
  40c3de:	mov    rbx,rax
  40c3e1:	mov    rdx,QWORD PTR [rsp+0x8]
  40c3e6:	mov    rax,QWORD PTR [rip+0x11c0b]        # 41dff8 <stderr@GLIBC_2.2.5>
  40c3ed:	mov    rcx,QWORD PTR [rax]
  40c3f0:	lea    rdi,[rip+0x9903]        # 415cfa <_IO_stdin_used@@Base+0xcfa>
  40c3f7:	mov    rsi,rbx
  40c3fa:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  40c3ff:	test   rbx,rbx
  40c402:	je     40c524 <test_nested_buffer_first@@Base+0x294>
  40c408:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40c40f:	jne    40c524 <test_nested_buffer_first@@Base+0x294>
  40c415:	mov    eax,DWORD PTR [rbx]
  40c417:	mov    rbp,rbx
  40c41a:	add    rbp,rax
  40c41d:	movsxd rbx,DWORD PTR [rbx+rax*1]
  40c421:	mov    rax,rbp
  40c424:	sub    rax,rbx
  40c427:	movzx  r14d,WORD PTR [rax]
  40c42b:	cmp    r14d,0xb
  40c42f:	jbe    40c52d <test_nested_buffer_first@@Base+0x29d>
  40c435:	neg    rbx
  40c438:	movzx  eax,WORD PTR [rbp+rbx*1+0xa]
  40c43d:	test   rax,rax
  40c440:	je     40c52d <test_nested_buffer_first@@Base+0x29d>
  40c446:	lea    rcx,[rax+rbp*1]
  40c44a:	mov    eax,DWORD PTR [rbp+rax*1+0x0]
  40c44e:	lea    rdi,[rax+rcx*1]
  40c452:	add    rdi,0x4
  40c456:	lea    rsi,[rip+0x8d2f]        # 41518c <_IO_stdin_used@@Base+0x18c>
  40c45d:	call   4040f0 <strcmp@plt>
  40c462:	test   eax,eax
  40c464:	je     40c472 <test_nested_buffer_first@@Base+0x1e2>
  40c466:	lea    rdi,[rip+0xc403]        # 418870 <_IO_stdin_used@@Base+0x3870>
  40c46d:	jmp    40c50d <test_nested_buffer_first@@Base+0x27d>
  40c472:	movzx  eax,r14w
  40c476:	cmp    eax,0x20
  40c479:	jb     40c4a5 <test_nested_buffer_first@@Base+0x215>
  40c47b:	movzx  eax,WORD PTR [rbp+rbx*1+0x1e]
  40c480:	test   rax,rax
  40c483:	je     40c4a5 <test_nested_buffer_first@@Base+0x215>
  40c485:	lea    rcx,[rax+rbp*1]
  40c489:	mov    eax,DWORD PTR [rbp+rax*1+0x0]
  40c48d:	cmp    DWORD PTR [rax+rcx*1+0x8],0x534e4f4d
  40c495:	jne    40c4a5 <test_nested_buffer_first@@Base+0x215>
  40c497:	add    rcx,rax
  40c49a:	add    rcx,0x4
  40c49e:	mov    eax,DWORD PTR [rcx]
  40c4a0:	add    rax,rcx
  40c4a3:	jmp    40c4a7 <test_nested_buffer_first@@Base+0x217>
  40c4a5:	xor    eax,eax
  40c4a7:	movzx  ecx,WORD PTR [rbp+rbx*1+0x8]
  40c4ac:	test   rcx,rcx
  40c4af:	je     40c506 <test_nested_buffer_first@@Base+0x276>
  40c4b1:	movzx  ecx,WORD PTR [rbp+rcx*1+0x0]
  40c4b6:	cmp    ecx,0xa
  40c4b9:	jne    40c506 <test_nested_buffer_first@@Base+0x276>
  40c4bb:	test   rax,rax
  40c4be:	je     40c524 <test_nested_buffer_first@@Base+0x294>
  40c4c0:	movsxd rcx,DWORD PTR [rax]
  40c4c3:	mov    rdx,rax
  40c4c6:	sub    rdx,rcx
  40c4c9:	movzx  edx,WORD PTR [rdx]
  40c4cc:	cmp    edx,0xc
  40c4cf:	jb     40c52d <test_nested_buffer_first@@Base+0x29d>
  40c4d1:	neg    rcx
  40c4d4:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  40c4d9:	test   rcx,rcx
  40c4dc:	je     40c52d <test_nested_buffer_first@@Base+0x29d>
  40c4de:	lea    rdx,[rax+rcx*1]
  40c4e2:	mov    eax,DWORD PTR [rax+rcx*1]
  40c4e5:	lea    rdi,[rax+rdx*1]
  40c4e9:	add    rdi,0x4
  40c4ed:	lea    rsi,[rip+0x97f6]        # 415cea <_IO_stdin_used@@Base+0xcea>
  40c4f4:	call   4040f0 <strcmp@plt>
  40c4f9:	test   eax,eax
  40c4fb:	je     40c520 <test_nested_buffer_first@@Base+0x290>
  40c4fd:	lea    rdi,[rip+0xc31c]        # 418820 <_IO_stdin_used@@Base+0x3820>
  40c504:	jmp    40c50d <test_nested_buffer_first@@Base+0x27d>
  40c506:	lea    rdi,[rip+0xc333]        # 418840 <_IO_stdin_used@@Base+0x3840>
  40c50d:	call   404060 <puts@plt>
  40c512:	mov    eax,0xffffffff
  40c517:	add    rsp,0x10
  40c51b:	pop    rbx
  40c51c:	pop    r14
  40c51e:	pop    rbp
  40c51f:	ret    
  40c520:	xor    eax,eax
  40c522:	jmp    40c517 <test_nested_buffer_first@@Base+0x287>
  40c524:	lea    rdi,[rip+0x993b]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  40c52b:	jmp    40c534 <test_nested_buffer_first@@Base+0x2a4>
  40c52d:	lea    rdi,[rip+0x9ead]        # 4163e1 <_IO_stdin_used@@Base+0x13e1>
  40c534:	lea    rsi,[rip+0x9951]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40c53b:	lea    rcx,[rip+0x9e4e]        # 416390 <_IO_stdin_used@@Base+0x1390>
  40c542:	mov    edx,0x2bb
  40c547:	call   4040a0 <__assert_fail@plt>
  40c54c:	lea    rdi,[rip+0x9c2a]        # 41617d <_IO_stdin_used@@Base+0x117d>
  40c553:	lea    rsi,[rip+0x9ae7]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40c55a:	lea    rcx,[rip+0x9cbe]        # 41621f <_IO_stdin_used@@Base+0x121f>
  40c561:	mov    edx,0xeb
  40c566:	call   4040a0 <__assert_fail@plt>
  40c56b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040c570 <test_nested_buffer_using_nest@@Base>:
  40c570:	push   rbp
  40c571:	push   r14
  40c573:	push   rbx
  40c574:	sub    rsp,0x410
  40c57b:	mov    rbx,rdi
  40c57e:	call   40e610 <flatcc_builder_reset@@Base>
  40c583:	lea    rsi,[rip+0x8bbe]        # 415148 <_IO_stdin_used@@Base+0x148>
  40c58a:	xor    edx,edx
  40c58c:	xor    ecx,ecx
  40c58e:	mov    rdi,rbx
  40c591:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40c596:	test   eax,eax
  40c598:	jne    40c5a7 <test_nested_buffer_using_nest@@Base+0x37>
  40c59a:	mov    esi,0x24
  40c59f:	mov    rdi,rbx
  40c5a2:	call   410480 <flatcc_builder_start_table@@Base>
  40c5a7:	lea    rsi,[rip+0x973c]        # 415cea <_IO_stdin_used@@Base+0xcea>
  40c5ae:	mov    rdi,rbx
  40c5b1:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40c5b6:	test   eax,eax
  40c5b8:	je     40c5d0 <test_nested_buffer_using_nest@@Base+0x60>
  40c5ba:	mov    ebp,eax
  40c5bc:	mov    esi,0x3
  40c5c1:	mov    rdi,rbx
  40c5c4:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40c5c9:	test   rax,rax
  40c5cc:	je     40c5d0 <test_nested_buffer_using_nest@@Base+0x60>
  40c5ce:	mov    DWORD PTR [rax],ebp
  40c5d0:	mov    esi,0x1
  40c5d5:	mov    edx,0x2
  40c5da:	mov    ecx,0x2
  40c5df:	mov    rdi,rbx
  40c5e2:	call   411800 <flatcc_builder_table_add@@Base>
  40c5e7:	test   rax,rax
  40c5ea:	je     40c5f1 <test_nested_buffer_using_nest@@Base+0x81>
  40c5ec:	mov    WORD PTR [rax],0x2a
  40c5f1:	lea    rsi,[rip+0x8b40]        # 415138 <_IO_stdin_used@@Base+0x138>
  40c5f8:	mov    edx,0x1
  40c5fd:	mov    rdi,rbx
  40c600:	call   410e20 <flatcc_builder_check_required@@Base>
  40c605:	test   eax,eax
  40c607:	je     40c8b2 <test_nested_buffer_using_nest@@Base+0x342>
  40c60d:	mov    rdi,rbx
  40c610:	call   410e90 <flatcc_builder_end_table@@Base>
  40c615:	mov    rdi,rbx
  40c618:	mov    esi,eax
  40c61a:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40c61f:	mov    rdi,rbx
  40c622:	call   412990 <flatcc_builder_get_buffer_size@@Base>
  40c627:	mov    r14,rax
  40c62a:	lea    rsi,[rsp+0x10]
  40c62f:	mov    edx,0x400
  40c634:	mov    rdi,rbx
  40c637:	call   412a90 <flatcc_builder_copy_buffer@@Base>
  40c63c:	test   rax,rax
  40c63f:	je     40c7c5 <test_nested_buffer_using_nest@@Base+0x255>
  40c645:	mov    rdi,rbx
  40c648:	call   40e610 <flatcc_builder_reset@@Base>
  40c64d:	lea    rsi,[rip+0x8af4]        # 415148 <_IO_stdin_used@@Base+0x148>
  40c654:	xor    edx,edx
  40c656:	xor    ecx,ecx
  40c658:	mov    rdi,rbx
  40c65b:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40c660:	test   eax,eax
  40c662:	jne    40c671 <test_nested_buffer_using_nest@@Base+0x101>
  40c664:	mov    esi,0x24
  40c669:	mov    rdi,rbx
  40c66c:	call   410480 <flatcc_builder_start_table@@Base>
  40c671:	lea    rsi,[rsp+0x10]
  40c676:	mov    ecx,0x1
  40c67b:	mov    r8d,0x8
  40c681:	mov    r9d,0xffffffff
  40c687:	mov    rdi,rbx
  40c68a:	mov    rdx,r14
  40c68d:	call   411020 <flatcc_builder_create_vector@@Base>
  40c692:	test   eax,eax
  40c694:	je     40c6ac <test_nested_buffer_using_nest@@Base+0x13c>
  40c696:	mov    ebp,eax
  40c698:	mov    esi,0xd
  40c69d:	mov    rdi,rbx
  40c6a0:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40c6a5:	test   rax,rax
  40c6a8:	je     40c6ac <test_nested_buffer_using_nest@@Base+0x13c>
  40c6aa:	mov    DWORD PTR [rax],ebp
  40c6ac:	mov    esi,0x2
  40c6b1:	mov    edx,0x2
  40c6b6:	mov    ecx,0x2
  40c6bb:	mov    rdi,rbx
  40c6be:	call   411800 <flatcc_builder_table_add@@Base>
  40c6c3:	test   rax,rax
  40c6c6:	je     40c6cd <test_nested_buffer_using_nest@@Base+0x15d>
  40c6c8:	mov    WORD PTR [rax],0xa
  40c6cd:	lea    rsi,[rip+0x8ab8]        # 41518c <_IO_stdin_used@@Base+0x18c>
  40c6d4:	mov    rdi,rbx
  40c6d7:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40c6dc:	test   eax,eax
  40c6de:	je     40c6f6 <test_nested_buffer_using_nest@@Base+0x186>
  40c6e0:	mov    ebp,eax
  40c6e2:	mov    esi,0x3
  40c6e7:	mov    rdi,rbx
  40c6ea:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40c6ef:	test   rax,rax
  40c6f2:	je     40c6f6 <test_nested_buffer_using_nest@@Base+0x186>
  40c6f4:	mov    DWORD PTR [rax],ebp
  40c6f6:	lea    rsi,[rip+0x8a3b]        # 415138 <_IO_stdin_used@@Base+0x138>
  40c6fd:	mov    edx,0x1
  40c702:	mov    rdi,rbx
  40c705:	call   410e20 <flatcc_builder_check_required@@Base>
  40c70a:	test   eax,eax
  40c70c:	je     40c8b2 <test_nested_buffer_using_nest@@Base+0x342>
  40c712:	mov    rdi,rbx
  40c715:	call   410e90 <flatcc_builder_end_table@@Base>
  40c71a:	mov    rdi,rbx
  40c71d:	mov    esi,eax
  40c71f:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40c724:	lea    rsi,[rsp+0x8]
  40c729:	mov    rdi,rbx
  40c72c:	call   412a50 <flatcc_builder_get_direct_buffer@@Base>
  40c731:	mov    rbx,rax
  40c734:	mov    rdx,QWORD PTR [rsp+0x8]
  40c739:	mov    rax,QWORD PTR [rip+0x118b8]        # 41dff8 <stderr@GLIBC_2.2.5>
  40c740:	mov    rcx,QWORD PTR [rax]
  40c743:	lea    rdi,[rip+0x95c2]        # 415d0c <_IO_stdin_used@@Base+0xd0c>
  40c74a:	mov    rsi,rbx
  40c74d:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  40c752:	test   rbx,rbx
  40c755:	je     40c8d1 <test_nested_buffer_using_nest@@Base+0x361>
  40c75b:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40c762:	jne    40c8d1 <test_nested_buffer_using_nest@@Base+0x361>
  40c768:	mov    eax,DWORD PTR [rbx]
  40c76a:	mov    rbp,rbx
  40c76d:	add    rbp,rax
  40c770:	movsxd rbx,DWORD PTR [rbx+rax*1]
  40c774:	mov    rax,rbp
  40c777:	sub    rax,rbx
  40c77a:	movzx  r14d,WORD PTR [rax]
  40c77e:	cmp    r14d,0xb
  40c782:	jbe    40c8da <test_nested_buffer_using_nest@@Base+0x36a>
  40c788:	neg    rbx
  40c78b:	movzx  eax,WORD PTR [rbp+rbx*1+0xa]
  40c790:	test   rax,rax
  40c793:	je     40c8da <test_nested_buffer_using_nest@@Base+0x36a>
  40c799:	lea    rcx,[rax+rbp*1]
  40c79d:	mov    eax,DWORD PTR [rbp+rax*1+0x0]
  40c7a1:	lea    rdi,[rax+rcx*1]
  40c7a5:	add    rdi,0x4
  40c7a9:	lea    rsi,[rip+0x89dc]        # 41518c <_IO_stdin_used@@Base+0x18c>
  40c7b0:	call   4040f0 <strcmp@plt>
  40c7b5:	test   eax,eax
  40c7b7:	je     40c7d1 <test_nested_buffer_using_nest@@Base+0x261>
  40c7b9:	lea    rdi,[rip+0xc0b0]        # 418870 <_IO_stdin_used@@Base+0x3870>
  40c7c0:	jmp    40c87c <test_nested_buffer_using_nest@@Base+0x30c>
  40c7c5:	lea    rdi,[rip+0xc004]        # 4187d0 <_IO_stdin_used@@Base+0x37d0>
  40c7cc:	jmp    40c87c <test_nested_buffer_using_nest@@Base+0x30c>
  40c7d1:	movzx  eax,r14w
  40c7d5:	cmp    eax,0x20
  40c7d8:	jb     40c805 <test_nested_buffer_using_nest@@Base+0x295>
  40c7da:	movzx  eax,WORD PTR [rbp+rbx*1+0x1e]
  40c7df:	test   rax,rax
  40c7e2:	je     40c805 <test_nested_buffer_using_nest@@Base+0x295>
  40c7e4:	lea    rcx,[rax+rbp*1]
  40c7e8:	mov    eax,DWORD PTR [rbp+rax*1+0x0]
  40c7ec:	cmp    DWORD PTR [rax+rcx*1+0x8],0x534e4f4d
  40c7f4:	jne    40c805 <test_nested_buffer_using_nest@@Base+0x295>
  40c7f6:	add    rax,rcx
  40c7f9:	add    rax,0x4
  40c7fd:	mov    r14d,DWORD PTR [rax]
  40c800:	add    r14,rax
  40c803:	jmp    40c808 <test_nested_buffer_using_nest@@Base+0x298>
  40c805:	xor    r14d,r14d
  40c808:	movzx  eax,WORD PTR [rbp+rbx*1+0x8]
  40c80d:	test   rax,rax
  40c810:	je     40c875 <test_nested_buffer_using_nest@@Base+0x305>
  40c812:	movzx  eax,WORD PTR [rbp+rax*1+0x0]
  40c817:	cmp    eax,0xa
  40c81a:	jne    40c875 <test_nested_buffer_using_nest@@Base+0x305>
  40c81c:	test   r14,r14
  40c81f:	je     40c8d1 <test_nested_buffer_using_nest@@Base+0x361>
  40c825:	movsxd rbx,DWORD PTR [r14]
  40c828:	mov    rax,r14
  40c82b:	sub    rax,rbx
  40c82e:	movzx  eax,WORD PTR [rax]
  40c831:	cmp    eax,0xc
  40c834:	jb     40c8da <test_nested_buffer_using_nest@@Base+0x36a>
  40c83a:	neg    rbx
  40c83d:	movzx  eax,WORD PTR [r14+rbx*1+0xa]
  40c843:	test   rax,rax
  40c846:	je     40c8da <test_nested_buffer_using_nest@@Base+0x36a>
  40c84c:	lea    rcx,[r14+rax*1]
  40c850:	mov    eax,DWORD PTR [r14+rax*1]
  40c854:	lea    rdi,[rax+rcx*1]
  40c858:	add    rdi,0x4
  40c85c:	lea    rsi,[rip+0x9487]        # 415cea <_IO_stdin_used@@Base+0xcea>
  40c863:	call   4040f0 <strcmp@plt>
  40c868:	test   eax,eax
  40c86a:	je     40c892 <test_nested_buffer_using_nest@@Base+0x322>
  40c86c:	lea    rdi,[rip+0xbfad]        # 418820 <_IO_stdin_used@@Base+0x3820>
  40c873:	jmp    40c87c <test_nested_buffer_using_nest@@Base+0x30c>
  40c875:	lea    rdi,[rip+0xbfc4]        # 418840 <_IO_stdin_used@@Base+0x3840>
  40c87c:	call   404060 <puts@plt>
  40c881:	mov    eax,0xffffffff
  40c886:	add    rsp,0x410
  40c88d:	pop    rbx
  40c88e:	pop    r14
  40c890:	pop    rbp
  40c891:	ret    
  40c892:	movzx  eax,WORD PTR [r14+rbx*1+0x6]
  40c898:	test   rax,rax
  40c89b:	je     40c8a9 <test_nested_buffer_using_nest@@Base+0x339>
  40c89d:	movzx  ecx,WORD PTR [r14+rax*1]
  40c8a2:	xor    eax,eax
  40c8a4:	cmp    ecx,0x2a
  40c8a7:	je     40c886 <test_nested_buffer_using_nest@@Base+0x316>
  40c8a9:	lea    rdi,[rip+0xbf40]        # 4187f0 <_IO_stdin_used@@Base+0x37f0>
  40c8b0:	jmp    40c87c <test_nested_buffer_using_nest@@Base+0x30c>
  40c8b2:	lea    rdi,[rip+0x98c4]        # 41617d <_IO_stdin_used@@Base+0x117d>
  40c8b9:	lea    rsi,[rip+0x9781]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40c8c0:	lea    rcx,[rip+0x9958]        # 41621f <_IO_stdin_used@@Base+0x121f>
  40c8c7:	mov    edx,0xeb
  40c8cc:	call   4040a0 <__assert_fail@plt>
  40c8d1:	lea    rdi,[rip+0x958e]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  40c8d8:	jmp    40c8e1 <test_nested_buffer_using_nest@@Base+0x371>
  40c8da:	lea    rdi,[rip+0x9b00]        # 4163e1 <_IO_stdin_used@@Base+0x13e1>
  40c8e1:	lea    rsi,[rip+0x95a4]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40c8e8:	lea    rcx,[rip+0x9aa1]        # 416390 <_IO_stdin_used@@Base+0x1390>
  40c8ef:	mov    edx,0x2bb
  40c8f4:	call   4040a0 <__assert_fail@plt>
  40c8f9:	nop    DWORD PTR [rax+0x0]

000000000040c900 <verify_include@@Base>:
  40c900:	xor    eax,eax
  40c902:	ret    
  40c903:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c90d:	nop    DWORD PTR [rax]

000000000040c910 <test_struct_buffer@@Base>:
  40c910:	push   rbx
  40c911:	sub    rsp,0x70
  40c915:	mov    rbx,rdi
  40c918:	call   40e610 <flatcc_builder_reset@@Base>
  40c91d:	mov    esi,0x20
  40c922:	mov    edx,0x10
  40c927:	mov    rdi,rbx
  40c92a:	call   40f500 <flatcc_builder_start_struct@@Base>
  40c92f:	test   rax,rax
  40c932:	je     40c970 <test_struct_buffer@@Base+0x60>
  40c934:	movabs rcx,0x400000003f800000
  40c93e:	mov    QWORD PTR [rax],rcx
  40c941:	mov    DWORD PTR [rax+0x8],0x40400000
  40c948:	movabs rcx,0x4010cccccccccccd
  40c952:	mov    QWORD PTR [rax+0x10],rcx
  40c956:	mov    BYTE PTR [rax+0x18],0x8
  40c95a:	mov    WORD PTR [rax+0x1a],0xaaa
  40c960:	mov    BYTE PTR [rax+0x1c],0xef
  40c964:	mov    rdi,rbx
  40c967:	call   40f5d0 <flatcc_builder_end_struct@@Base>
  40c96c:	mov    ecx,eax
  40c96e:	jmp    40c972 <test_struct_buffer@@Base+0x62>
  40c970:	xor    ecx,ecx
  40c972:	lea    rsi,[rip+0x87cf]        # 415148 <_IO_stdin_used@@Base+0x148>
  40c979:	xor    edx,edx
  40c97b:	mov    r8d,0x10
  40c981:	xor    r9d,r9d
  40c984:	mov    rdi,rbx
  40c987:	call   40ee20 <flatcc_builder_create_buffer@@Base>
  40c98c:	mov    rdi,rbx
  40c98f:	call   412990 <flatcc_builder_get_buffer_size@@Base>
  40c994:	cmp    rax,0x30
  40c998:	jne    40ca94 <test_struct_buffer@@Base+0x184>
  40c99e:	lea    rdi,[rip+0x93bf]        # 415d64 <_IO_stdin_used@@Base+0xd64>
  40c9a5:	mov    esi,0x30
  40c9aa:	xor    eax,eax
  40c9ac:	call   404080 <printf@plt>
  40c9b1:	mov    rdi,rbx
  40c9b4:	call   412cd0 <flatcc_builder_get_emit_context@@Base>
  40c9b9:	cmp    QWORD PTR [rax+0x30],0x30
  40c9be:	jne    40cab3 <test_struct_buffer@@Base+0x1a3>
  40c9c4:	mov    rsi,rsp
  40c9c7:	mov    edx,0x64
  40c9cc:	mov    rdi,rbx
  40c9cf:	call   412a90 <flatcc_builder_copy_buffer@@Base>
  40c9d4:	test   rax,rax
  40c9d7:	je     40ca74 <test_struct_buffer@@Base+0x164>
  40c9dd:	mov    rax,QWORD PTR [rip+0x11614]        # 41dff8 <stderr@GLIBC_2.2.5>
  40c9e4:	mov    rcx,QWORD PTR [rax]
  40c9e7:	lea    rdi,[rip+0x9415]        # 415e03 <_IO_stdin_used@@Base+0xe03>
  40c9ee:	mov    rsi,rsp
  40c9f1:	mov    edx,0x30
  40c9f6:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  40c9fb:	cmp    DWORD PTR [rsp+0x4],0x534e4f4d
  40ca03:	jne    40ca7d <test_struct_buffer@@Base+0x16d>
  40ca05:	mov    ecx,DWORD PTR [rsp]
  40ca08:	vmovss xmm0,DWORD PTR [rsp+rcx*1]
  40ca0d:	vucomiss xmm0,DWORD PTR [rip+0x85f7]        # 41500c <_IO_stdin_used@@Base+0xc>
  40ca15:	jne    40ca6b <test_struct_buffer@@Base+0x15b>
  40ca17:	jp     40ca6b <test_struct_buffer@@Base+0x15b>
  40ca19:	vmovss xmm0,DWORD PTR [rsp+rcx*1+0x4]
  40ca1f:	vucomiss xmm0,DWORD PTR [rip+0x85e9]        # 415010 <_IO_stdin_used@@Base+0x10>
  40ca27:	jne    40ca6b <test_struct_buffer@@Base+0x15b>
  40ca29:	jp     40ca6b <test_struct_buffer@@Base+0x15b>
  40ca2b:	vmovss xmm0,DWORD PTR [rsp+rcx*1+0x8]
  40ca31:	vucomiss xmm0,DWORD PTR [rip+0x85df]        # 415018 <_IO_stdin_used@@Base+0x18>
  40ca39:	jne    40ca6b <test_struct_buffer@@Base+0x15b>
  40ca3b:	jp     40ca6b <test_struct_buffer@@Base+0x15b>
  40ca3d:	vmovsd xmm0,QWORD PTR [rsp+rcx*1+0x10]
  40ca43:	vucomisd xmm0,QWORD PTR [rip+0x85dd]        # 415028 <_IO_stdin_used@@Base+0x28>
  40ca4b:	jne    40ca6b <test_struct_buffer@@Base+0x15b>
  40ca4d:	jp     40ca6b <test_struct_buffer@@Base+0x15b>
  40ca4f:	cmp    BYTE PTR [rsp+rcx*1+0x18],0x8
  40ca54:	jne    40ca6b <test_struct_buffer@@Base+0x15b>
  40ca56:	movzx  eax,WORD PTR [rsp+rcx*1+0x1a]
  40ca5b:	cmp    eax,0xaaa
  40ca60:	jne    40ca6b <test_struct_buffer@@Base+0x15b>
  40ca62:	xor    eax,eax
  40ca64:	cmp    BYTE PTR [rsp+rcx*1+0x1c],0xef
  40ca69:	je     40ca8e <test_struct_buffer@@Base+0x17e>
  40ca6b:	lea    rdi,[rip+0xbe6e]        # 4188e0 <_IO_stdin_used@@Base+0x38e0>
  40ca72:	jmp    40ca84 <test_struct_buffer@@Base+0x174>
  40ca74:	lea    rdi,[rip+0xa5e0]        # 41705b <_IO_stdin_used@@Base+0x205b>
  40ca7b:	jmp    40ca84 <test_struct_buffer@@Base+0x174>
  40ca7d:	lea    rdi,[rip+0xbe0c]        # 418890 <_IO_stdin_used@@Base+0x3890>
  40ca84:	call   404060 <puts@plt>
  40ca89:	mov    eax,0xffffffff
  40ca8e:	add    rsp,0x70
  40ca92:	pop    rbx
  40ca93:	ret    
  40ca94:	lea    rdi,[rip+0x9293]        # 415d2e <_IO_stdin_used@@Base+0xd2e>
  40ca9b:	lea    rsi,[rip+0x8892]        # 415334 <_IO_stdin_used@@Base+0x334>
  40caa2:	lea    rcx,[rip+0x9290]        # 415d39 <_IO_stdin_used@@Base+0xd39>
  40caa9:	mov    edx,0x923
  40caae:	call   4040a0 <__assert_fail@plt>
  40cab3:	lea    rdi,[rip+0x92c7]        # 415d81 <_IO_stdin_used@@Base+0xd81>
  40caba:	lea    rsi,[rip+0x8873]        # 415334 <_IO_stdin_used@@Base+0x334>
  40cac1:	lea    rcx,[rip+0x9271]        # 415d39 <_IO_stdin_used@@Base+0xd39>
  40cac8:	mov    edx,0x925
  40cacd:	call   4040a0 <__assert_fail@plt>
  40cad2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cadc:	nop    DWORD PTR [rax+0x0]

000000000040cae0 <test_typed_struct_buffer@@Base>:
  40cae0:	push   rbx
  40cae1:	sub    rsp,0x70
  40cae5:	mov    rbx,rdi
  40cae8:	call   40e610 <flatcc_builder_reset@@Base>
  40caed:	mov    esi,0x20
  40caf2:	mov    edx,0x10
  40caf7:	mov    rdi,rbx
  40cafa:	call   40f500 <flatcc_builder_start_struct@@Base>
  40caff:	test   rax,rax
  40cb02:	je     40cb40 <test_typed_struct_buffer@@Base+0x60>
  40cb04:	movabs rcx,0x400000003f800000
  40cb0e:	mov    QWORD PTR [rax],rcx
  40cb11:	mov    DWORD PTR [rax+0x8],0x40400000
  40cb18:	movabs rcx,0x4010cccccccccccd
  40cb22:	mov    QWORD PTR [rax+0x10],rcx
  40cb26:	mov    BYTE PTR [rax+0x18],0x8
  40cb2a:	mov    WORD PTR [rax+0x1a],0xaaa
  40cb30:	mov    BYTE PTR [rax+0x1c],0xef
  40cb34:	mov    rdi,rbx
  40cb37:	call   40f5d0 <flatcc_builder_end_struct@@Base>
  40cb3c:	mov    ecx,eax
  40cb3e:	jmp    40cb42 <test_typed_struct_buffer@@Base+0x62>
  40cb40:	xor    ecx,ecx
  40cb42:	lea    rsi,[rip+0x92cd]        # 415e16 <_IO_stdin_used@@Base+0xe16>
  40cb49:	xor    edx,edx
  40cb4b:	mov    r8d,0x10
  40cb51:	xor    r9d,r9d
  40cb54:	mov    rdi,rbx
  40cb57:	call   40ee20 <flatcc_builder_create_buffer@@Base>
  40cb5c:	mov    rdi,rbx
  40cb5f:	call   412990 <flatcc_builder_get_buffer_size@@Base>
  40cb64:	cmp    rax,0x30
  40cb68:	jne    40ccce <test_typed_struct_buffer@@Base+0x1ee>
  40cb6e:	lea    rdi,[rip+0x91ef]        # 415d64 <_IO_stdin_used@@Base+0xd64>
  40cb75:	mov    esi,0x30
  40cb7a:	xor    eax,eax
  40cb7c:	call   404080 <printf@plt>
  40cb81:	mov    rdi,rbx
  40cb84:	call   412cd0 <flatcc_builder_get_emit_context@@Base>
  40cb89:	cmp    QWORD PTR [rax+0x30],0x30
  40cb8e:	jne    40cced <test_typed_struct_buffer@@Base+0x20d>
  40cb94:	mov    rsi,rsp
  40cb97:	mov    edx,0x64
  40cb9c:	mov    rdi,rbx
  40cb9f:	call   412a90 <flatcc_builder_copy_buffer@@Base>
  40cba4:	test   rax,rax
  40cba7:	je     40cbfb <test_typed_struct_buffer@@Base+0x11b>
  40cba9:	mov    rax,QWORD PTR [rip+0x11448]        # 41dff8 <stderr@GLIBC_2.2.5>
  40cbb0:	mov    rcx,QWORD PTR [rax]
  40cbb3:	lea    rdi,[rip+0x9243]        # 415dfd <_IO_stdin_used@@Base+0xdfd>
  40cbba:	mov    rsi,rsp
  40cbbd:	mov    edx,0x30
  40cbc2:	call   4047b0 <test_type_aliases@@Base+0x4c0>
  40cbc7:	cmp    DWORD PTR [rsp+0x4],0xa8f53ed2
  40cbcf:	jne    40cc04 <test_typed_struct_buffer@@Base+0x124>
  40cbd1:	mov    rdi,rsp
  40cbd4:	mov    esi,0x30
  40cbd9:	mov    edx,0xa8f53ed2
  40cbde:	mov    ecx,0x20
  40cbe3:	mov    r8d,0x10
  40cbe9:	call   413f80 <flatcc_verify_struct_as_typed_root@@Base>
  40cbee:	test   eax,eax
  40cbf0:	je     40cc1b <test_typed_struct_buffer@@Base+0x13b>
  40cbf2:	lea    rdi,[rip+0xbd37]        # 418930 <_IO_stdin_used@@Base+0x3930>
  40cbf9:	jmp    40cc0b <test_typed_struct_buffer@@Base+0x12b>
  40cbfb:	lea    rdi,[rip+0xa459]        # 41705b <_IO_stdin_used@@Base+0x205b>
  40cc02:	jmp    40cc0b <test_typed_struct_buffer@@Base+0x12b>
  40cc04:	lea    rdi,[rip+0xbc85]        # 418890 <_IO_stdin_used@@Base+0x3890>
  40cc0b:	call   404060 <puts@plt>
  40cc10:	mov    eax,0xffffffff
  40cc15:	add    rsp,0x70
  40cc19:	pop    rbx
  40cc1a:	ret    
  40cc1b:	cmp    DWORD PTR [rsp+0x4],0xa8f53ed2
  40cc23:	jne    40cc52 <test_typed_struct_buffer@@Base+0x172>
  40cc25:	mov    ebx,DWORD PTR [rsp]
  40cc28:	mov    rdi,rsp
  40cc2b:	mov    esi,0x30
  40cc30:	mov    edx,0xa8f53ed2
  40cc35:	mov    ecx,0x20
  40cc3a:	mov    r8d,0x10
  40cc40:	call   413f80 <flatcc_verify_struct_as_typed_root@@Base>
  40cc45:	test   eax,eax
  40cc47:	je     40cc5b <test_typed_struct_buffer@@Base+0x17b>
  40cc49:	lea    rdi,[rip+0xbcb0]        # 418900 <_IO_stdin_used@@Base+0x3900>
  40cc50:	jmp    40cc0b <test_typed_struct_buffer@@Base+0x12b>
  40cc52:	lea    rdi,[rip+0xbc67]        # 4188c0 <_IO_stdin_used@@Base+0x38c0>
  40cc59:	jmp    40cc0b <test_typed_struct_buffer@@Base+0x12b>
  40cc5b:	vmovss xmm0,DWORD PTR [rsp+rbx*1]
  40cc60:	vucomiss xmm0,DWORD PTR [rip+0x83a4]        # 41500c <_IO_stdin_used@@Base+0xc>
  40cc68:	jne    40ccc2 <test_typed_struct_buffer@@Base+0x1e2>
  40cc6a:	jp     40ccc2 <test_typed_struct_buffer@@Base+0x1e2>
  40cc6c:	vmovss xmm0,DWORD PTR [rsp+rbx*1+0x4]
  40cc72:	vucomiss xmm0,DWORD PTR [rip+0x8396]        # 415010 <_IO_stdin_used@@Base+0x10>
  40cc7a:	jne    40ccc2 <test_typed_struct_buffer@@Base+0x1e2>
  40cc7c:	jp     40ccc2 <test_typed_struct_buffer@@Base+0x1e2>
  40cc7e:	vmovss xmm0,DWORD PTR [rsp+rbx*1+0x8]
  40cc84:	vucomiss xmm0,DWORD PTR [rip+0x838c]        # 415018 <_IO_stdin_used@@Base+0x18>
  40cc8c:	jne    40ccc2 <test_typed_struct_buffer@@Base+0x1e2>
  40cc8e:	jp     40ccc2 <test_typed_struct_buffer@@Base+0x1e2>
  40cc90:	vmovsd xmm0,QWORD PTR [rsp+rbx*1+0x10]
  40cc96:	vucomisd xmm0,QWORD PTR [rip+0x838a]        # 415028 <_IO_stdin_used@@Base+0x28>
  40cc9e:	jne    40ccc2 <test_typed_struct_buffer@@Base+0x1e2>
  40cca0:	jp     40ccc2 <test_typed_struct_buffer@@Base+0x1e2>
  40cca2:	cmp    BYTE PTR [rsp+rbx*1+0x18],0x8
  40cca7:	jne    40ccc2 <test_typed_struct_buffer@@Base+0x1e2>
  40cca9:	movzx  eax,WORD PTR [rsp+rbx*1+0x1a]
  40ccae:	cmp    eax,0xaaa
  40ccb3:	jne    40ccc2 <test_typed_struct_buffer@@Base+0x1e2>
  40ccb5:	xor    eax,eax
  40ccb7:	cmp    BYTE PTR [rsp+rbx*1+0x1c],0xef
  40ccbc:	je     40cc15 <test_typed_struct_buffer@@Base+0x135>
  40ccc2:	lea    rdi,[rip+0xbc17]        # 4188e0 <_IO_stdin_used@@Base+0x38e0>
  40ccc9:	jmp    40cc0b <test_typed_struct_buffer@@Base+0x12b>
  40ccce:	lea    rdi,[rip+0x9059]        # 415d2e <_IO_stdin_used@@Base+0xd2e>
  40ccd5:	lea    rsi,[rip+0x8658]        # 415334 <_IO_stdin_used@@Base+0x334>
  40ccdc:	lea    rcx,[rip+0x90e9]        # 415dcc <_IO_stdin_used@@Base+0xdcc>
  40cce3:	mov    edx,0x954
  40cce8:	call   4040a0 <__assert_fail@plt>
  40cced:	lea    rdi,[rip+0x908d]        # 415d81 <_IO_stdin_used@@Base+0xd81>
  40ccf4:	lea    rsi,[rip+0x8639]        # 415334 <_IO_stdin_used@@Base+0x334>
  40ccfb:	lea    rcx,[rip+0x90ca]        # 415dcc <_IO_stdin_used@@Base+0xdcc>
  40cd02:	mov    edx,0x956
  40cd07:	call   4040a0 <__assert_fail@plt>
  40cd0c:	nop    DWORD PTR [rax+0x0]

000000000040cd10 <gen_monster_benchmark@@Base>:
  40cd10:	push   rbp
  40cd11:	push   rbx
  40cd12:	sub    rsp,0x18
  40cd16:	mov    rbx,rdi
  40cd19:	movabs rax,0x706050403020100
  40cd23:	mov    QWORD PTR [rsp+0x8],rax
  40cd28:	mov    WORD PTR [rsp+0x10],0x908
  40cd2f:	call   40e610 <flatcc_builder_reset@@Base>
  40cd34:	lea    rsi,[rip+0x840d]        # 415148 <_IO_stdin_used@@Base+0x148>
  40cd3b:	xor    edx,edx
  40cd3d:	xor    ecx,ecx
  40cd3f:	mov    rdi,rbx
  40cd42:	call   40f1b0 <flatcc_builder_start_buffer@@Base>
  40cd47:	test   eax,eax
  40cd49:	jne    40cd58 <gen_monster_benchmark@@Base+0x48>
  40cd4b:	mov    esi,0x24
  40cd50:	mov    rdi,rbx
  40cd53:	call   410480 <flatcc_builder_start_table@@Base>
  40cd58:	mov    esi,0x2
  40cd5d:	mov    edx,0x2
  40cd62:	mov    ecx,0x2
  40cd67:	mov    rdi,rbx
  40cd6a:	call   411800 <flatcc_builder_table_add@@Base>
  40cd6f:	test   rax,rax
  40cd72:	je     40cd79 <gen_monster_benchmark@@Base+0x69>
  40cd74:	mov    WORD PTR [rax],0x50
  40cd79:	xor    esi,esi
  40cd7b:	mov    edx,0x20
  40cd80:	mov    ecx,0x10
  40cd85:	mov    rdi,rbx
  40cd88:	call   411800 <flatcc_builder_table_add@@Base>
  40cd8d:	movabs rcx,0x400000003f800000
  40cd97:	mov    QWORD PTR [rax],rcx
  40cd9a:	mov    DWORD PTR [rax+0x8],0xc04ccccd
  40cda1:	lea    rsi,[rip+0x83e4]        # 41518c <_IO_stdin_used@@Base+0x18c>
  40cda8:	mov    rdi,rbx
  40cdab:	call   4126f0 <flatcc_builder_create_string_str@@Base>
  40cdb0:	test   eax,eax
  40cdb2:	je     40cdca <gen_monster_benchmark@@Base+0xba>
  40cdb4:	mov    ebp,eax
  40cdb6:	mov    esi,0x3
  40cdbb:	mov    rdi,rbx
  40cdbe:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40cdc3:	test   rax,rax
  40cdc6:	je     40cdca <gen_monster_benchmark@@Base+0xba>
  40cdc8:	mov    DWORD PTR [rax],ebp
  40cdca:	lea    rsi,[rsp+0x8]
  40cdcf:	mov    edx,0xa
  40cdd4:	mov    ecx,0x1
  40cdd9:	mov    r8d,0x1
  40cddf:	mov    r9d,0xffffffff
  40cde5:	mov    rdi,rbx
  40cde8:	call   411020 <flatcc_builder_create_vector@@Base>
  40cded:	test   eax,eax
  40cdef:	je     40ce07 <gen_monster_benchmark@@Base+0xf7>
  40cdf1:	mov    ebp,eax
  40cdf3:	mov    esi,0x5
  40cdf8:	mov    rdi,rbx
  40cdfb:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40ce00:	test   rax,rax
  40ce03:	je     40ce07 <gen_monster_benchmark@@Base+0xf7>
  40ce05:	mov    DWORD PTR [rax],ebp
  40ce07:	mov    esi,0x4
  40ce0c:	mov    edx,0x2
  40ce11:	mov    ecx,0x3fffffff
  40ce16:	mov    rdi,rbx
  40ce19:	call   410010 <flatcc_builder_start_vector@@Base>
  40ce1e:	mov    esi,0x1
  40ce23:	mov    rdi,rbx
  40ce26:	call   40f6a0 <flatcc_builder_extend_vector@@Base>
  40ce2b:	mov    WORD PTR [rax],0x10
  40ce30:	mov    BYTE PTR [rax+0x2],0x20
  40ce34:	mov    esi,0x2
  40ce39:	mov    rdi,rbx
  40ce3c:	call   40f6a0 <flatcc_builder_extend_vector@@Base>
  40ce41:	mov    WORD PTR [rax],0x30
  40ce46:	mov    BYTE PTR [rax+0x2],0x40
  40ce4a:	mov    WORD PTR [rax+0x4],0x50
  40ce50:	mov    BYTE PTR [rax+0x6],0x60
  40ce54:	mov    esi,0x1
  40ce59:	mov    rdi,rbx
  40ce5c:	call   40f6a0 <flatcc_builder_extend_vector@@Base>
  40ce61:	test   rax,rax
  40ce64:	je     40ce6f <gen_monster_benchmark@@Base+0x15f>
  40ce66:	mov    WORD PTR [rax],0x70
  40ce6b:	mov    BYTE PTR [rax+0x2],0x80
  40ce6f:	mov    esi,0x1
  40ce74:	mov    rdi,rbx
  40ce77:	call   40f6a0 <flatcc_builder_extend_vector@@Base>
  40ce7c:	test   rax,rax
  40ce7f:	je     40ce87 <gen_monster_benchmark@@Base+0x177>
  40ce81:	mov    DWORD PTR [rax],0x910191
  40ce87:	mov    rdi,rbx
  40ce8a:	call   4111a0 <flatcc_builder_end_vector@@Base>
  40ce8f:	test   eax,eax
  40ce91:	je     40cea9 <gen_monster_benchmark@@Base+0x199>
  40ce93:	mov    ebp,eax
  40ce95:	mov    esi,0x9
  40ce9a:	mov    rdi,rbx
  40ce9d:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  40cea2:	test   rax,rax
  40cea5:	je     40cea9 <gen_monster_benchmark@@Base+0x199>
  40cea7:	mov    DWORD PTR [rax],ebp
  40cea9:	lea    rsi,[rip+0x8288]        # 415138 <_IO_stdin_used@@Base+0x138>
  40ceb0:	mov    edx,0x1
  40ceb5:	mov    rdi,rbx
  40ceb8:	call   410e20 <flatcc_builder_check_required@@Base>
  40cebd:	test   eax,eax
  40cebf:	je     40cedc <gen_monster_benchmark@@Base+0x1cc>
  40cec1:	mov    rdi,rbx
  40cec4:	call   410e90 <flatcc_builder_end_table@@Base>
  40cec9:	mov    rdi,rbx
  40cecc:	mov    esi,eax
  40cece:	call   40f3d0 <flatcc_builder_end_buffer@@Base>
  40ced3:	xor    eax,eax
  40ced5:	add    rsp,0x18
  40ced9:	pop    rbx
  40ceda:	pop    rbp
  40cedb:	ret    
  40cedc:	lea    rdi,[rip+0x929a]        # 41617d <_IO_stdin_used@@Base+0x117d>
  40cee3:	lea    rsi,[rip+0x9157]        # 416041 <_IO_stdin_used@@Base+0x1041>
  40ceea:	lea    rcx,[rip+0x932e]        # 41621f <_IO_stdin_used@@Base+0x121f>
  40cef1:	mov    edx,0xeb
  40cef6:	call   4040a0 <__assert_fail@plt>
  40cefb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040cf00 <time_monster@@Base>:
  40cf00:	push   rbp
  40cf01:	push   r14
  40cf03:	push   rbx
  40cf04:	sub    rsp,0x20
  40cf08:	mov    rbx,rdi
  40cf0b:	lea    rdi,[rip+0xba4e]        # 418960 <_IO_stdin_used@@Base+0x3960>
  40cf12:	call   404060 <puts@plt>
  40cf17:	lea    rdi,[rsp+0x10]
  40cf1c:	xor    esi,esi
  40cf1e:	call   404090 <gettimeofday@plt>
  40cf23:	mov    rax,QWORD PTR [rip+0x1119e]        # 41e0c8 <__bss_start@@Base+0x8>
  40cf2a:	test   rax,rax
  40cf2d:	jne    40cf44 <time_monster@@Base+0x44>
  40cf2f:	vmovups xmm0,XMMWORD PTR [rsp+0x10]
  40cf35:	vmovups XMMWORD PTR [rip+0x1118b],xmm0        # 41e0c8 <__bss_start@@Base+0x8>
  40cf3d:	mov    rax,QWORD PTR [rip+0x11184]        # 41e0c8 <__bss_start@@Base+0x8>
  40cf44:	mov    r14,QWORD PTR [rsp+0x10]
  40cf49:	mov    rcx,QWORD PTR [rsp+0x18]
  40cf4e:	sub    rcx,QWORD PTR [rip+0x1117b]        # 41e0d0 <__bss_start@@Base+0x10>
  40cf55:	sub    r14,rax
  40cf58:	vcvtsi2sd xmm0,xmm1,rcx
  40cf5d:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x80cb]        # 415030 <_IO_stdin_used@@Base+0x30>
  40cf65:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40cf6b:	mov    ebp,0xf4240
  40cf70:	mov    rdi,rbx
  40cf73:	call   40cd10 <gen_monster_benchmark@@Base>
  40cf78:	add    ebp,0xffffffff
  40cf7b:	jne    40cf70 <time_monster@@Base+0x70>
  40cf7d:	vcvtsi2sd xmm0,xmm1,r14
  40cf82:	vaddsd xmm0,xmm0,QWORD PTR [rsp+0x8]
  40cf88:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40cf8e:	mov    rdi,rbx
  40cf91:	call   412990 <flatcc_builder_get_buffer_size@@Base>
  40cf96:	mov    rbx,rax
  40cf99:	lea    rdi,[rsp+0x10]
  40cf9e:	xor    esi,esi
  40cfa0:	call   404090 <gettimeofday@plt>
  40cfa5:	mov    rax,QWORD PTR [rip+0x1111c]        # 41e0c8 <__bss_start@@Base+0x8>
  40cfac:	test   rax,rax
  40cfaf:	jne    40cfc6 <time_monster@@Base+0xc6>
  40cfb1:	vmovupd xmm0,XMMWORD PTR [rsp+0x10]
  40cfb7:	vmovupd XMMWORD PTR [rip+0x11109],xmm0        # 41e0c8 <__bss_start@@Base+0x8>
  40cfbf:	mov    rax,QWORD PTR [rip+0x11102]        # 41e0c8 <__bss_start@@Base+0x8>
  40cfc6:	mov    rcx,QWORD PTR [rsp+0x10]
  40cfcb:	sub    rcx,rax
  40cfce:	mov    rax,QWORD PTR [rsp+0x18]
  40cfd3:	vcvtsi2sd xmm0,xmm1,rcx
  40cfd8:	sub    rax,QWORD PTR [rip+0x110f1]        # 41e0d0 <__bss_start@@Base+0x10>
  40cfdf:	vcvtsi2sd xmm1,xmm1,rax
  40cfe4:	vdivsd xmm1,xmm1,QWORD PTR [rip+0x8044]        # 415030 <_IO_stdin_used@@Base+0x30>
  40cfec:	vaddsd xmm1,xmm1,xmm0
  40cff0:	lea    rdi,[rip+0x8e24]        # 415e1b <_IO_stdin_used@@Base+0xe1b>
  40cff7:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  40cffd:	mov    rsi,rbx
  40d000:	call   40d010 <time_monster@@Base+0x110>
  40d005:	xor    eax,eax
  40d007:	add    rsp,0x20
  40d00b:	pop    rbx
  40d00c:	pop    r14
  40d00e:	pop    rbp
  40d00f:	ret    
  40d010:	push   rbx
  40d011:	sub    rsp,0x10
  40d015:	mov    rbx,rsi
  40d018:	mov    rcx,rdi
  40d01b:	vsubsd xmm0,xmm1,xmm0
  40d01f:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40d025:	lea    rdi,[rip+0x9ef9]        # 416f25 <_IO_stdin_used@@Base+0x1f25>
  40d02c:	xor    eax,eax
  40d02e:	mov    rsi,rcx
  40d031:	call   404080 <printf@plt>
  40d036:	lea    rdi,[rip+0x9ef7]        # 416f34 <_IO_stdin_used@@Base+0x1f34>
  40d03d:	mov    al,0x1
  40d03f:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  40d045:	call   404080 <printf@plt>
  40d04a:	lea    rdi,[rip+0x9efb]        # 416f4c <_IO_stdin_used@@Base+0x1f4c>
  40d051:	mov    esi,0xf4240
  40d056:	xor    eax,eax
  40d058:	call   404080 <printf@plt>
  40d05d:	lea    rdi,[rip+0x9ef8]        # 416f5c <_IO_stdin_used@@Base+0x1f5c>
  40d064:	xor    eax,eax
  40d066:	mov    rsi,rbx
  40d069:	call   404080 <printf@plt>
  40d06e:	vmovq  xmm0,rbx
  40d073:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x7fd5]        # 415050 <_IO_stdin_used@@Base+0x50>
  40d07b:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x7fdd]        # 415060 <_IO_stdin_used@@Base+0x60>
  40d083:	vhaddpd xmm0,xmm0,xmm0
  40d087:	vmovsd xmm1,QWORD PTR [rip+0x7fa1]        # 415030 <_IO_stdin_used@@Base+0x30>
  40d08f:	vmulsd xmm0,xmm0,xmm1
  40d093:	vdivsd xmm0,xmm0,xmm1
  40d097:	vdivsd xmm0,xmm0,QWORD PTR [rsp+0x8]
  40d09d:	lea    rdi,[rip+0x9ecb]        # 416f6f <_IO_stdin_used@@Base+0x1f6f>
  40d0a4:	mov    al,0x1
  40d0a6:	call   404080 <printf@plt>
  40d0ab:	vmovsd xmm0,QWORD PTR [rip+0x7f7d]        # 415030 <_IO_stdin_used@@Base+0x30>
  40d0b3:	vdivsd xmm0,xmm0,QWORD PTR [rsp+0x8]
  40d0b9:	lea    rdi,[rip+0x9ec7]        # 416f87 <_IO_stdin_used@@Base+0x1f87>
  40d0c0:	mov    al,0x1
  40d0c2:	call   404080 <printf@plt>
  40d0c7:	vmovsd xmm0,QWORD PTR [rip+0x7f69]        # 415038 <_IO_stdin_used@@Base+0x38>
  40d0cf:	vdivsd xmm0,xmm0,QWORD PTR [rsp+0x8]
  40d0d5:	lea    rdi,[rip+0x9ecc]        # 416fa8 <_IO_stdin_used@@Base+0x1fa8>
  40d0dc:	lea    rsi,[rip+0x8d4e]        # 415e31 <_IO_stdin_used@@Base+0xe31>
  40d0e3:	mov    al,0x1
  40d0e5:	call   404080 <printf@plt>
  40d0ea:	vmovsd xmm2,QWORD PTR [rip+0x7f3e]        # 415030 <_IO_stdin_used@@Base+0x30>
  40d0f2:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  40d0f8:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x7f40]        # 415040 <_IO_stdin_used@@Base+0x40>
  40d100:	vdivsd xmm0,xmm0,xmm2
  40d104:	vmovsd xmm1,QWORD PTR [rip+0x7f3c]        # 415048 <_IO_stdin_used@@Base+0x48>
  40d10c:	vucomisd xmm1,xmm0
  40d110:	jbe    40d11b <time_monster@@Base+0x21b>
  40d112:	lea    rdi,[rip+0x9eb3]        # 416fcc <_IO_stdin_used@@Base+0x1fcc>
  40d119:	jmp    40d160 <time_monster@@Base+0x260>
  40d11b:	vucomisd xmm2,xmm0
  40d11f:	jbe    40d132 <time_monster@@Base+0x232>
  40d121:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x7f1f]        # 415048 <_IO_stdin_used@@Base+0x48>
  40d129:	lea    rdi,[rip+0x9eb4]        # 416fe4 <_IO_stdin_used@@Base+0x1fe4>
  40d130:	jmp    40d160 <time_monster@@Base+0x260>
  40d132:	vmovsd xmm1,QWORD PTR [rip+0x7f06]        # 415040 <_IO_stdin_used@@Base+0x40>
  40d13a:	vucomisd xmm1,xmm0
  40d13e:	jbe    40d151 <time_monster@@Base+0x251>
  40d140:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x7ee8]        # 415030 <_IO_stdin_used@@Base+0x30>
  40d148:	lea    rdi,[rip+0x9ead]        # 416ffc <_IO_stdin_used@@Base+0x1ffc>
  40d14f:	jmp    40d160 <time_monster@@Base+0x260>
  40d151:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x7ee7]        # 415040 <_IO_stdin_used@@Base+0x40>
  40d159:	lea    rdi,[rip+0x9eb4]        # 417014 <_IO_stdin_used@@Base+0x2014>
  40d160:	mov    al,0x1
  40d162:	add    rsp,0x10
  40d166:	pop    rbx
  40d167:	jmp    404080 <printf@plt>
  40d16c:	nop    DWORD PTR [rax+0x0]

000000000040d170 <gen_struct_buffer_benchmark@@Base>:
  40d170:	push   rbx
  40d171:	mov    rbx,rdi
  40d174:	call   40e610 <flatcc_builder_reset@@Base>
  40d179:	mov    esi,0x20
  40d17e:	mov    edx,0x10
  40d183:	mov    rdi,rbx
  40d186:	call   40f500 <flatcc_builder_start_struct@@Base>
  40d18b:	test   rax,rax
  40d18e:	je     40d1cc <gen_struct_buffer_benchmark@@Base+0x5c>
  40d190:	movabs rcx,0x400000003f800000
  40d19a:	mov    QWORD PTR [rax],rcx
  40d19d:	mov    DWORD PTR [rax+0x8],0x40400000
  40d1a4:	movabs rcx,0x4010cccccccccccd
  40d1ae:	mov    QWORD PTR [rax+0x10],rcx
  40d1b2:	mov    BYTE PTR [rax+0x18],0x8
  40d1b6:	mov    WORD PTR [rax+0x1a],0xaaa
  40d1bc:	mov    BYTE PTR [rax+0x1c],0xef
  40d1c0:	mov    rdi,rbx
  40d1c3:	call   40f5d0 <flatcc_builder_end_struct@@Base>
  40d1c8:	mov    ecx,eax
  40d1ca:	jmp    40d1ce <gen_struct_buffer_benchmark@@Base+0x5e>
  40d1cc:	xor    ecx,ecx
  40d1ce:	lea    rsi,[rip+0x7f73]        # 415148 <_IO_stdin_used@@Base+0x148>
  40d1d5:	xor    edx,edx
  40d1d7:	mov    r8d,0x10
  40d1dd:	xor    r9d,r9d
  40d1e0:	mov    rdi,rbx
  40d1e3:	call   40ee20 <flatcc_builder_create_buffer@@Base>
  40d1e8:	xor    esi,esi
  40d1ea:	mov    rdi,rbx
  40d1ed:	call   412a50 <flatcc_builder_get_direct_buffer@@Base>
  40d1f2:	test   rax,rax
  40d1f5:	je     40d264 <gen_struct_buffer_benchmark@@Base+0xf4>
  40d1f7:	mov    edx,DWORD PTR [rax]
  40d1f9:	vmovss xmm0,DWORD PTR [rax+rdx*1]
  40d1fe:	vucomiss xmm0,DWORD PTR [rip+0x7e06]        # 41500c <_IO_stdin_used@@Base+0xc>
  40d206:	jne    40d264 <gen_struct_buffer_benchmark@@Base+0xf4>
  40d208:	jp     40d264 <gen_struct_buffer_benchmark@@Base+0xf4>
  40d20a:	vmovss xmm0,DWORD PTR [rax+rdx*1+0x4]
  40d210:	vucomiss xmm0,DWORD PTR [rip+0x7df8]        # 415010 <_IO_stdin_used@@Base+0x10>
  40d218:	jne    40d264 <gen_struct_buffer_benchmark@@Base+0xf4>
  40d21a:	jp     40d264 <gen_struct_buffer_benchmark@@Base+0xf4>
  40d21c:	vmovss xmm0,DWORD PTR [rax+rdx*1+0x8]
  40d222:	vucomiss xmm0,DWORD PTR [rip+0x7dee]        # 415018 <_IO_stdin_used@@Base+0x18>
  40d22a:	jne    40d264 <gen_struct_buffer_benchmark@@Base+0xf4>
  40d22c:	jp     40d264 <gen_struct_buffer_benchmark@@Base+0xf4>
  40d22e:	vmovsd xmm0,QWORD PTR [rax+rdx*1+0x10]
  40d234:	vucomisd xmm0,QWORD PTR [rip+0x7dec]        # 415028 <_IO_stdin_used@@Base+0x28>
  40d23c:	jne    40d264 <gen_struct_buffer_benchmark@@Base+0xf4>
  40d23e:	jp     40d264 <gen_struct_buffer_benchmark@@Base+0xf4>
  40d240:	cmp    BYTE PTR [rax+rdx*1+0x18],0x8
  40d245:	jne    40d264 <gen_struct_buffer_benchmark@@Base+0xf4>
  40d247:	movzx  ecx,WORD PTR [rax+rdx*1+0x1a]
  40d24c:	cmp    ecx,0xaaa
  40d252:	jne    40d264 <gen_struct_buffer_benchmark@@Base+0xf4>
  40d254:	xor    ecx,ecx
  40d256:	cmp    BYTE PTR [rax+rdx*1+0x1c],0xef
  40d25b:	setne  cl
  40d25e:	neg    ecx
  40d260:	mov    eax,ecx
  40d262:	pop    rbx
  40d263:	ret    
  40d264:	mov    eax,0xffffffff
  40d269:	pop    rbx
  40d26a:	ret    
  40d26b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040d270 <time_struct_buffer@@Base>:
  40d270:	push   rbp
  40d271:	push   r15
  40d273:	push   r14
  40d275:	push   rbx
  40d276:	sub    rsp,0x28
  40d27a:	mov    r14,rdi
  40d27d:	lea    rdi,[rip+0xb6dc]        # 418960 <_IO_stdin_used@@Base+0x3960>
  40d284:	call   404060 <puts@plt>
  40d289:	xor    ebx,ebx
  40d28b:	lea    rdi,[rsp+0x18]
  40d290:	xor    esi,esi
  40d292:	call   404090 <gettimeofday@plt>
  40d297:	mov    rax,QWORD PTR [rip+0x10e2a]        # 41e0c8 <__bss_start@@Base+0x8>
  40d29e:	test   rax,rax
  40d2a1:	jne    40d2b8 <time_struct_buffer@@Base+0x48>
  40d2a3:	vmovups xmm0,XMMWORD PTR [rsp+0x18]
  40d2a9:	vmovups XMMWORD PTR [rip+0x10e17],xmm0        # 41e0c8 <__bss_start@@Base+0x8>
  40d2b1:	mov    rax,QWORD PTR [rip+0x10e10]        # 41e0c8 <__bss_start@@Base+0x8>
  40d2b8:	mov    r15,QWORD PTR [rsp+0x18]
  40d2bd:	mov    rcx,QWORD PTR [rsp+0x20]
  40d2c2:	sub    rcx,QWORD PTR [rip+0x10e07]        # 41e0d0 <__bss_start@@Base+0x10>
  40d2c9:	sub    r15,rax
  40d2cc:	vcvtsi2sd xmm0,xmm1,rcx
  40d2d1:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x7d57]        # 415030 <_IO_stdin_used@@Base+0x30>
  40d2d9:	vmovsd QWORD PTR [rsp+0x10],xmm0
  40d2df:	mov    ebp,0xf4240
  40d2e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d2ee:	xchg   ax,ax
  40d2f0:	mov    rdi,r14
  40d2f3:	call   40d170 <gen_struct_buffer_benchmark@@Base>
  40d2f8:	or     ebx,eax
  40d2fa:	add    ebp,0xffffffff
  40d2fd:	jne    40d2f0 <time_struct_buffer@@Base+0x80>
  40d2ff:	vcvtsi2sd xmm0,xmm1,r15
  40d304:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40d30a:	lea    rdi,[rsp+0x18]
  40d30f:	xor    esi,esi
  40d311:	call   404090 <gettimeofday@plt>
  40d316:	mov    rax,QWORD PTR [rip+0x10dab]        # 41e0c8 <__bss_start@@Base+0x8>
  40d31d:	test   rax,rax
  40d320:	jne    40d337 <time_struct_buffer@@Base+0xc7>
  40d322:	vmovups xmm0,XMMWORD PTR [rsp+0x18]
  40d328:	vmovups XMMWORD PTR [rip+0x10d98],xmm0        # 41e0c8 <__bss_start@@Base+0x8>
  40d330:	mov    rax,QWORD PTR [rip+0x10d91]        # 41e0c8 <__bss_start@@Base+0x8>
  40d337:	mov    rcx,QWORD PTR [rsp+0x18]
  40d33c:	sub    rcx,rax
  40d33f:	mov    rax,QWORD PTR [rsp+0x20]
  40d344:	vcvtsi2sd xmm0,xmm1,rcx
  40d349:	sub    rax,QWORD PTR [rip+0x10d80]        # 41e0d0 <__bss_start@@Base+0x10>
  40d350:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  40d356:	vaddsd xmm1,xmm1,QWORD PTR [rsp+0x10]
  40d35c:	vmovsd QWORD PTR [rsp+0x10],xmm1
  40d362:	vcvtsi2sd xmm1,xmm2,rax
  40d367:	vdivsd xmm1,xmm1,QWORD PTR [rip+0x7cc1]        # 415030 <_IO_stdin_used@@Base+0x30>
  40d36f:	vaddsd xmm0,xmm1,xmm0
  40d373:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40d379:	mov    rdi,r14
  40d37c:	call   412990 <flatcc_builder_get_buffer_size@@Base>
  40d381:	mov    r14,rax
  40d384:	test   ebx,ebx
  40d386:	je     40d394 <time_struct_buffer@@Base+0x124>
  40d388:	lea    rdi,[rip+0xb5f1]        # 418980 <_IO_stdin_used@@Base+0x3980>
  40d38f:	call   404060 <puts@plt>
  40d394:	lea    rdi,[rip+0x8a9e]        # 415e39 <_IO_stdin_used@@Base+0xe39>
  40d39b:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  40d3a1:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  40d3a7:	mov    rsi,r14
  40d3aa:	call   40d010 <time_monster@@Base+0x110>
  40d3af:	mov    eax,ebx
  40d3b1:	add    rsp,0x28
  40d3b5:	pop    rbx
  40d3b6:	pop    r14
  40d3b8:	pop    r15
  40d3ba:	pop    rbp
  40d3bb:	ret    
  40d3bc:	nop    DWORD PTR [rax+0x0]

000000000040d3c0 <main@@Base>:
  40d3c0:	push   rbx
  40d3c1:	sub    rsp,0x190
  40d3c8:	lea    rbx,[rsp+0x8]
  40d3cd:	mov    rdi,rbx
  40d3d0:	call   40e410 <flatcc_builder_init@@Base>
  40d3d5:	lea    rdi,[rip+0xb5c4]        # 4189a0 <_IO_stdin_used@@Base+0x39a0>
  40d3dc:	call   404060 <puts@plt>
  40d3e1:	mov    rdi,rbx
  40d3e4:	call   404d70 <test_table_with_emptystruct@@Base>
  40d3e9:	test   eax,eax
  40d3eb:	jne    40d531 <main@@Base+0x171>
  40d3f1:	lea    rdi,[rsp+0x8]
  40d3f6:	call   4048f0 <test_empty_monster@@Base>
  40d3fb:	test   eax,eax
  40d3fd:	jne    40d531 <main@@Base+0x171>
  40d403:	lea    rdi,[rsp+0x8]
  40d408:	call   406500 <test_monster@@Base>
  40d40d:	test   eax,eax
  40d40f:	jne    40d531 <main@@Base+0x171>
  40d415:	lea    rdi,[rsp+0x8]
  40d41a:	call   4065a0 <test_monster_with_size@@Base>
  40d41f:	test   eax,eax
  40d421:	jne    40d531 <main@@Base+0x171>
  40d427:	lea    rdi,[rsp+0x8]
  40d42c:	call   406690 <test_string@@Base>
  40d431:	test   eax,eax
  40d433:	jne    40d531 <main@@Base+0x171>
  40d439:	lea    rdi,[rsp+0x8]
  40d43e:	call   40c910 <test_struct_buffer@@Base>
  40d443:	test   eax,eax
  40d445:	jne    40d531 <main@@Base+0x171>
  40d44b:	lea    rdi,[rsp+0x8]
  40d450:	call   404ad0 <test_typed_empty_monster@@Base>
  40d455:	test   eax,eax
  40d457:	jne    40d531 <main@@Base+0x171>
  40d45d:	lea    rdi,[rsp+0x8]
  40d462:	call   404eb0 <test_typed_table_with_emptystruct@@Base>
  40d467:	test   eax,eax
  40d469:	jne    40d531 <main@@Base+0x171>
  40d46f:	lea    rdi,[rsp+0x8]
  40d474:	call   40cae0 <test_typed_struct_buffer@@Base>
  40d479:	test   eax,eax
  40d47b:	jne    40d531 <main@@Base+0x171>
  40d481:	lea    rdi,[rsp+0x8]
  40d486:	call   409ff0 <test_clone_slice@@Base>
  40d48b:	test   eax,eax
  40d48d:	jne    40d531 <main@@Base+0x171>
  40d493:	lea    rdi,[rsp+0x8]
  40d498:	call   40bcd0 <test_add_set_defaults@@Base>
  40d49d:	test   eax,eax
  40d49f:	jne    40d531 <main@@Base+0x171>
  40d4a5:	lea    rdi,[rsp+0x8]
  40d4aa:	call   40a980 <test_create_add_field@@Base>
  40d4af:	test   eax,eax
  40d4b1:	jne    40d531 <main@@Base+0x171>
  40d4b3:	lea    rdi,[rsp+0x8]
  40d4b8:	call   40ac20 <test_union_vector@@Base>
  40d4bd:	test   eax,eax
  40d4bf:	jne    40d531 <main@@Base+0x171>
  40d4c1:	lea    rdi,[rsp+0x8]
  40d4c6:	call   409c50 <test_basic_sort@@Base>
  40d4cb:	test   eax,eax
  40d4cd:	jne    40d531 <main@@Base+0x171>
  40d4cf:	lea    rdi,[rsp+0x8]
  40d4d4:	call   406930 <test_sort_find@@Base>
  40d4d9:	test   eax,eax
  40d4db:	jne    40d531 <main@@Base+0x171>
  40d4dd:	lea    rdi,[rsp+0x8]
  40d4e2:	call   407640 <test_scan@@Base>
  40d4e7:	test   eax,eax
  40d4e9:	jne    40d531 <main@@Base+0x171>
  40d4eb:	lea    rdi,[rsp+0x8]
  40d4f0:	call   40bfb0 <test_nested_buffer@@Base>
  40d4f5:	test   eax,eax
  40d4f7:	jne    40d531 <main@@Base+0x171>
  40d4f9:	lea    rdi,[rsp+0x8]
  40d4fe:	call   40c290 <test_nested_buffer_first@@Base>
  40d503:	test   eax,eax
  40d505:	jne    40d531 <main@@Base+0x171>
  40d507:	lea    rdi,[rsp+0x8]
  40d50c:	call   40c570 <test_nested_buffer_using_nest@@Base>
  40d511:	test   eax,eax
  40d513:	jne    40d531 <main@@Base+0x171>
  40d515:	lea    rdi,[rsp+0x8]
  40d51a:	call   4042f0 <test_type_aliases@@Base>
  40d51f:	test   eax,eax
  40d521:	jne    40d531 <main@@Base+0x171>
  40d523:	lea    rdi,[rsp+0x8]
  40d528:	call   40b120 <test_mixed_type_union@@Base>
  40d52d:	test   eax,eax
  40d52f:	je     40d54b <main@@Base+0x18b>
  40d531:	lea    rdi,[rip+0x9b2f]        # 417067 <_IO_stdin_used@@Base+0x2067>
  40d538:	call   404060 <puts@plt>
  40d53d:	mov    eax,0xffffffff
  40d542:	add    rsp,0x190
  40d549:	pop    rbx
  40d54a:	ret    
  40d54b:	lea    rdi,[rsp+0x8]
  40d550:	call   40e7d0 <flatcc_builder_clear@@Base>
  40d555:	xor    eax,eax
  40d557:	jmp    40d542 <main@@Base+0x182>
  40d559:	nop    DWORD PTR [rax+0x0]
  40d560:	push   rbx
  40d561:	mov    rbx,rdi
  40d564:	xor    esi,esi
  40d566:	mov    edx,0x1
  40d56b:	mov    ecx,0x1
  40d570:	call   413490 <flatcc_verify_field@@Base>
  40d575:	test   eax,eax
  40d577:	jne    40d6a8 <main@@Base+0x2e8>
  40d57d:	mov    esi,0x1
  40d582:	mov    edx,0x1
  40d587:	mov    ecx,0x1
  40d58c:	mov    rdi,rbx
  40d58f:	call   413490 <flatcc_verify_field@@Base>
  40d594:	test   eax,eax
  40d596:	jne    40d6a8 <main@@Base+0x2e8>
  40d59c:	mov    esi,0x2
  40d5a1:	mov    edx,0x2
  40d5a6:	mov    ecx,0x2
  40d5ab:	mov    rdi,rbx
  40d5ae:	call   413490 <flatcc_verify_field@@Base>
  40d5b3:	test   eax,eax
  40d5b5:	jne    40d6a8 <main@@Base+0x2e8>
  40d5bb:	mov    esi,0x3
  40d5c0:	mov    edx,0x2
  40d5c5:	mov    ecx,0x2
  40d5ca:	mov    rdi,rbx
  40d5cd:	call   413490 <flatcc_verify_field@@Base>
  40d5d2:	test   eax,eax
  40d5d4:	jne    40d6a8 <main@@Base+0x2e8>
  40d5da:	mov    esi,0x4
  40d5df:	mov    edx,0x4
  40d5e4:	mov    ecx,0x4
  40d5e9:	mov    rdi,rbx
  40d5ec:	call   413490 <flatcc_verify_field@@Base>
  40d5f1:	test   eax,eax
  40d5f3:	jne    40d6a8 <main@@Base+0x2e8>
  40d5f9:	mov    esi,0x5
  40d5fe:	mov    edx,0x4
  40d603:	mov    ecx,0x4
  40d608:	mov    rdi,rbx
  40d60b:	call   413490 <flatcc_verify_field@@Base>
  40d610:	test   eax,eax
  40d612:	jne    40d6a8 <main@@Base+0x2e8>
  40d618:	mov    esi,0x6
  40d61d:	mov    edx,0x8
  40d622:	mov    ecx,0x8
  40d627:	mov    rdi,rbx
  40d62a:	call   413490 <flatcc_verify_field@@Base>
  40d62f:	test   eax,eax
  40d631:	jne    40d6a8 <main@@Base+0x2e8>
  40d633:	mov    esi,0x7
  40d638:	mov    edx,0x8
  40d63d:	mov    ecx,0x8
  40d642:	mov    rdi,rbx
  40d645:	call   413490 <flatcc_verify_field@@Base>
  40d64a:	test   eax,eax
  40d64c:	jne    40d6a8 <main@@Base+0x2e8>
  40d64e:	mov    esi,0x8
  40d653:	mov    edx,0x4
  40d658:	mov    ecx,0x4
  40d65d:	mov    rdi,rbx
  40d660:	call   413490 <flatcc_verify_field@@Base>
  40d665:	test   eax,eax
  40d667:	jne    40d6a8 <main@@Base+0x2e8>
  40d669:	mov    esi,0x9
  40d66e:	mov    edx,0x8
  40d673:	mov    ecx,0x8
  40d678:	mov    rdi,rbx
  40d67b:	call   413490 <flatcc_verify_field@@Base>
  40d680:	test   eax,eax
  40d682:	jne    40d6a8 <main@@Base+0x2e8>
  40d684:	mov    esi,0xa
  40d689:	xor    edx,edx
  40d68b:	mov    ecx,0x1
  40d690:	mov    r8d,0x1
  40d696:	mov    r9d,0xffffffff
  40d69c:	mov    rdi,rbx
  40d69f:	call   4135a0 <flatcc_verify_vector_field@@Base>
  40d6a4:	test   eax,eax
  40d6a6:	je     40d6aa <main@@Base+0x2ea>
  40d6a8:	pop    rbx
  40d6a9:	ret    
  40d6aa:	mov    esi,0xb
  40d6af:	xor    edx,edx
  40d6b1:	mov    ecx,0x8
  40d6b6:	mov    r8d,0x8
  40d6bc:	mov    r9d,0x1fffffff
  40d6c2:	mov    rdi,rbx
  40d6c5:	pop    rbx
  40d6c6:	jmp    4135a0 <flatcc_verify_vector_field@@Base>
  40d6cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6d0:	push   rbx
  40d6d1:	mov    rbx,rdi
  40d6d4:	xor    esi,esi
  40d6d6:	mov    edx,0x20
  40d6db:	mov    ecx,0x10
  40d6e0:	call   413490 <flatcc_verify_field@@Base>
  40d6e5:	test   eax,eax
  40d6e7:	jne    40daf2 <main@@Base+0x732>
  40d6ed:	mov    esi,0x2
  40d6f2:	mov    edx,0x2
  40d6f7:	mov    ecx,0x2
  40d6fc:	mov    rdi,rbx
  40d6ff:	call   413490 <flatcc_verify_field@@Base>
  40d704:	test   eax,eax
  40d706:	jne    40daf2 <main@@Base+0x732>
  40d70c:	mov    esi,0x1
  40d711:	mov    edx,0x2
  40d716:	mov    ecx,0x2
  40d71b:	mov    rdi,rbx
  40d71e:	call   413490 <flatcc_verify_field@@Base>
  40d723:	test   eax,eax
  40d725:	jne    40daf2 <main@@Base+0x732>
  40d72b:	mov    esi,0x3
  40d730:	mov    edx,0x1
  40d735:	mov    rdi,rbx
  40d738:	call   4134f0 <flatcc_verify_string_field@@Base>
  40d73d:	test   eax,eax
  40d73f:	jne    40daf2 <main@@Base+0x732>
  40d745:	mov    esi,0x6
  40d74a:	mov    edx,0x1
  40d74f:	mov    ecx,0x1
  40d754:	mov    rdi,rbx
  40d757:	call   413490 <flatcc_verify_field@@Base>
  40d75c:	test   eax,eax
  40d75e:	jne    40daf2 <main@@Base+0x732>
  40d764:	mov    esi,0x5
  40d769:	xor    edx,edx
  40d76b:	mov    ecx,0x1
  40d770:	mov    r8d,0x1
  40d776:	mov    r9d,0xffffffff
  40d77c:	mov    rdi,rbx
  40d77f:	call   4135a0 <flatcc_verify_vector_field@@Base>
  40d784:	test   eax,eax
  40d786:	jne    40daf2 <main@@Base+0x732>
  40d78c:	lea    rcx,[rip+0xffffffffffffff3d]        # 40d6d0 <main@@Base+0x310>
  40d793:	mov    esi,0xb
  40d798:	xor    edx,edx
  40d79a:	mov    rdi,rbx
  40d79d:	call   413910 <flatcc_verify_table_vector_field@@Base>
  40d7a2:	test   eax,eax
  40d7a4:	jne    40daf2 <main@@Base+0x732>
  40d7aa:	mov    esi,0xa
  40d7af:	xor    edx,edx
  40d7b1:	mov    rdi,rbx
  40d7b4:	call   413670 <flatcc_verify_string_vector_field@@Base>
  40d7b9:	test   eax,eax
  40d7bb:	jne    40daf2 <main@@Base+0x732>
  40d7c1:	mov    esi,0x1c
  40d7c6:	xor    edx,edx
  40d7c8:	mov    rdi,rbx
  40d7cb:	call   413670 <flatcc_verify_string_vector_field@@Base>
  40d7d0:	test   eax,eax
  40d7d2:	jne    40daf2 <main@@Base+0x732>
  40d7d8:	mov    esi,0x18
  40d7dd:	xor    edx,edx
  40d7df:	mov    ecx,0x1
  40d7e4:	mov    r8d,0x1
  40d7ea:	mov    r9d,0xffffffff
  40d7f0:	mov    rdi,rbx
  40d7f3:	call   4135a0 <flatcc_verify_vector_field@@Base>
  40d7f8:	test   eax,eax
  40d7fa:	jne    40daf2 <main@@Base+0x732>
  40d800:	mov    esi,0x1d
  40d805:	xor    edx,edx
  40d807:	mov    ecx,0x8
  40d80c:	mov    r8d,0x4
  40d812:	mov    r9d,0x1fffffff
  40d818:	mov    rdi,rbx
  40d81b:	call   4135a0 <flatcc_verify_vector_field@@Base>
  40d820:	test   eax,eax
  40d822:	jne    40daf2 <main@@Base+0x732>
  40d828:	lea    rcx,[rip+0xfffffffffffffea1]        # 40d6d0 <main@@Base+0x310>
  40d82f:	mov    esi,0xc
  40d834:	xor    edx,edx
  40d836:	mov    rdi,rbx
  40d839:	call   4137d0 <flatcc_verify_table_field@@Base>
  40d83e:	test   eax,eax
  40d840:	jne    40daf2 <main@@Base+0x732>
  40d846:	lea    rcx,[rip+0x2c3]        # 40db10 <main@@Base+0x750>
  40d84d:	mov    esi,0x8
  40d852:	xor    edx,edx
  40d854:	mov    rdi,rbx
  40d857:	call   4146e0 <flatcc_verify_union_field@@Base>
  40d85c:	test   eax,eax
  40d85e:	jne    40daf2 <main@@Base+0x732>
  40d864:	mov    esi,0x9
  40d869:	xor    edx,edx
  40d86b:	mov    ecx,0x4
  40d870:	mov    r8d,0x2
  40d876:	mov    r9d,0x3fffffff
  40d87c:	mov    rdi,rbx
  40d87f:	call   4135a0 <flatcc_verify_vector_field@@Base>
  40d884:	test   eax,eax
  40d886:	jne    40daf2 <main@@Base+0x732>
  40d88c:	mov    esi,0x1f
  40d891:	xor    edx,edx
  40d893:	mov    ecx,0x4
  40d898:	mov    r8d,0x2
  40d89e:	mov    r9d,0x3fffffff
  40d8a4:	mov    rdi,rbx
  40d8a7:	call   4135a0 <flatcc_verify_vector_field@@Base>
  40d8ac:	test   eax,eax
  40d8ae:	jne    40daf2 <main@@Base+0x732>
  40d8b4:	lea    r9,[rip+0xfffffffffffffe15]        # 40d6d0 <main@@Base+0x310>
  40d8bb:	mov    esi,0xd
  40d8c0:	xor    edx,edx
  40d8c2:	xor    ecx,ecx
  40d8c4:	mov    r8d,0x1
  40d8ca:	mov    rdi,rbx
  40d8cd:	call   414400 <flatcc_verify_table_as_nested_root@@Base>
  40d8d2:	test   eax,eax
  40d8d4:	jne    40daf2 <main@@Base+0x732>
  40d8da:	lea    rcx,[rip+0x24f]        # 40db30 <main@@Base+0x770>
  40d8e1:	mov    esi,0xe
  40d8e6:	xor    edx,edx
  40d8e8:	mov    rdi,rbx
  40d8eb:	call   4137d0 <flatcc_verify_table_field@@Base>
  40d8f0:	test   eax,eax
  40d8f2:	jne    40daf2 <main@@Base+0x732>
  40d8f8:	mov    esi,0xf
  40d8fd:	mov    edx,0x1
  40d902:	mov    ecx,0x1
  40d907:	mov    rdi,rbx
  40d90a:	call   413490 <flatcc_verify_field@@Base>
  40d90f:	test   eax,eax
  40d911:	jne    40daf2 <main@@Base+0x732>
  40d917:	mov    esi,0x10
  40d91c:	mov    edx,0x4
  40d921:	mov    ecx,0x4
  40d926:	mov    rdi,rbx
  40d929:	call   413490 <flatcc_verify_field@@Base>
  40d92e:	test   eax,eax
  40d930:	jne    40daf2 <main@@Base+0x732>
  40d936:	mov    esi,0x11
  40d93b:	mov    edx,0x4
  40d940:	mov    ecx,0x4
  40d945:	mov    rdi,rbx
  40d948:	call   413490 <flatcc_verify_field@@Base>
  40d94d:	test   eax,eax
  40d94f:	jne    40daf2 <main@@Base+0x732>
  40d955:	mov    esi,0x12
  40d95a:	mov    edx,0x8
  40d95f:	mov    ecx,0x8
  40d964:	mov    rdi,rbx
  40d967:	call   413490 <flatcc_verify_field@@Base>
  40d96c:	test   eax,eax
  40d96e:	jne    40daf2 <main@@Base+0x732>
  40d974:	mov    esi,0x13
  40d979:	mov    edx,0x8
  40d97e:	mov    ecx,0x8
  40d983:	mov    rdi,rbx
  40d986:	call   413490 <flatcc_verify_field@@Base>
  40d98b:	test   eax,eax
  40d98d:	jne    40daf2 <main@@Base+0x732>
  40d993:	mov    esi,0x14
  40d998:	mov    edx,0x4
  40d99d:	mov    ecx,0x4
  40d9a2:	mov    rdi,rbx
  40d9a5:	call   413490 <flatcc_verify_field@@Base>
  40d9aa:	test   eax,eax
  40d9ac:	jne    40daf2 <main@@Base+0x732>
  40d9b2:	mov    esi,0x15
  40d9b7:	mov    edx,0x4
  40d9bc:	mov    ecx,0x4
  40d9c1:	mov    rdi,rbx
  40d9c4:	call   413490 <flatcc_verify_field@@Base>
  40d9c9:	test   eax,eax
  40d9cb:	jne    40daf2 <main@@Base+0x732>
  40d9d1:	mov    esi,0x16
  40d9d6:	mov    edx,0x8
  40d9db:	mov    ecx,0x8
  40d9e0:	mov    rdi,rbx
  40d9e3:	call   413490 <flatcc_verify_field@@Base>
  40d9e8:	test   eax,eax
  40d9ea:	jne    40daf2 <main@@Base+0x732>
  40d9f0:	mov    esi,0x17
  40d9f5:	mov    edx,0x8
  40d9fa:	mov    ecx,0x8
  40d9ff:	mov    rdi,rbx
  40da02:	call   413490 <flatcc_verify_field@@Base>
  40da07:	test   eax,eax
  40da09:	jne    40daf2 <main@@Base+0x732>
  40da0f:	mov    esi,0x19
  40da14:	mov    edx,0x4
  40da19:	mov    ecx,0x4
  40da1e:	mov    rdi,rbx
  40da21:	call   413490 <flatcc_verify_field@@Base>
  40da26:	test   eax,eax
  40da28:	jne    40daf2 <main@@Base+0x732>
  40da2e:	mov    esi,0x1a
  40da33:	mov    edx,0x4
  40da38:	mov    ecx,0x4
  40da3d:	mov    rdi,rbx
  40da40:	call   413490 <flatcc_verify_field@@Base>
  40da45:	test   eax,eax
  40da47:	jne    40daf2 <main@@Base+0x732>
  40da4d:	mov    esi,0x1b
  40da52:	mov    edx,0x4
  40da57:	mov    ecx,0x4
  40da5c:	mov    rdi,rbx
  40da5f:	call   413490 <flatcc_verify_field@@Base>
  40da64:	test   eax,eax
  40da66:	jne    40daf2 <main@@Base+0x732>
  40da6c:	mov    esi,0x1e
  40da71:	xor    edx,edx
  40da73:	mov    ecx,0x1
  40da78:	mov    r8d,0x1
  40da7e:	mov    r9d,0xffffffff
  40da84:	mov    rdi,rbx
  40da87:	call   4135a0 <flatcc_verify_vector_field@@Base>
  40da8c:	test   eax,eax
  40da8e:	jne    40daf2 <main@@Base+0x732>
  40da90:	mov    esi,0x20
  40da95:	xor    edx,edx
  40da97:	mov    ecx,0x8
  40da9c:	mov    r8d,0x8
  40daa2:	mov    r9d,0x1fffffff
  40daa8:	mov    rdi,rbx
  40daab:	call   4135a0 <flatcc_verify_vector_field@@Base>
  40dab0:	test   eax,eax
  40dab2:	jne    40daf2 <main@@Base+0x732>
  40dab4:	mov    esi,0x21
  40dab9:	xor    edx,edx
  40dabb:	mov    ecx,0x8
  40dac0:	mov    r8d,0x8
  40dac6:	mov    r9d,0x1fffffff
  40dacc:	mov    rdi,rbx
  40dacf:	call   4135a0 <flatcc_verify_vector_field@@Base>
  40dad4:	test   eax,eax
  40dad6:	jne    40daf2 <main@@Base+0x732>
  40dad8:	lea    rcx,[rip+0xa1]        # 40db80 <main@@Base+0x7c0>
  40dadf:	mov    esi,0x22
  40dae4:	xor    edx,edx
  40dae6:	mov    rdi,rbx
  40dae9:	call   4137d0 <flatcc_verify_table_field@@Base>
  40daee:	test   eax,eax
  40daf0:	je     40daf4 <main@@Base+0x734>
  40daf2:	pop    rbx
  40daf3:	ret    
  40daf4:	lea    rcx,[rip+0x95]        # 40db90 <main@@Base+0x7d0>
  40dafb:	mov    esi,0x23
  40db00:	xor    edx,edx
  40db02:	mov    rdi,rbx
  40db05:	pop    rbx
  40db06:	jmp    4137d0 <flatcc_verify_table_field@@Base>
  40db0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40db10:	mov    al,BYTE PTR [rdi+0x10]
  40db13:	add    al,0xff
  40db15:	cmp    al,0x3
  40db17:	ja     40db2d <main@@Base+0x76d>
  40db19:	movsx  rax,al
  40db1d:	lea    rcx,[rip+0x1019c]        # 41dcc0 <flatcc_builder_padding_base@@Base+0x52e0>
  40db24:	mov    rsi,QWORD PTR [rcx+rax*8]
  40db28:	jmp    413c50 <flatcc_verify_union_table@@Base>
  40db2d:	xor    eax,eax
  40db2f:	ret    
  40db30:	push   rbx
  40db31:	mov    rbx,rdi
  40db34:	xor    esi,esi
  40db36:	xor    edx,edx
  40db38:	call   4134f0 <flatcc_verify_string_field@@Base>
  40db3d:	test   eax,eax
  40db3f:	jne    40db5c <main@@Base+0x79c>
  40db41:	mov    esi,0x1
  40db46:	mov    edx,0x8
  40db4b:	mov    ecx,0x8
  40db50:	mov    rdi,rbx
  40db53:	call   413490 <flatcc_verify_field@@Base>
  40db58:	test   eax,eax
  40db5a:	je     40db5e <main@@Base+0x79e>
  40db5c:	pop    rbx
  40db5d:	ret    
  40db5e:	mov    esi,0x2
  40db63:	mov    edx,0x2
  40db68:	mov    ecx,0x2
  40db6d:	mov    rdi,rbx
  40db70:	pop    rbx
  40db71:	jmp    413490 <flatcc_verify_field@@Base>
  40db76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db80:	xor    eax,eax
  40db82:	ret    
  40db83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db8d:	nop    DWORD PTR [rax]
  40db90:	push   rbx
  40db91:	mov    rbx,rdi
  40db94:	xor    esi,esi
  40db96:	xor    edx,edx
  40db98:	mov    ecx,0x1
  40db9d:	mov    r8d,0x1
  40dba3:	mov    r9d,0xffffffff
  40dba9:	call   4135a0 <flatcc_verify_vector_field@@Base>
  40dbae:	test   eax,eax
  40dbb0:	jne    40dbd6 <main@@Base+0x816>
  40dbb2:	mov    esi,0x1
  40dbb7:	xor    edx,edx
  40dbb9:	mov    ecx,0x1
  40dbbe:	mov    r8d,0x1
  40dbc4:	mov    r9d,0xffffffff
  40dbca:	mov    rdi,rbx
  40dbcd:	call   4135a0 <flatcc_verify_vector_field@@Base>
  40dbd2:	test   eax,eax
  40dbd4:	je     40dbd8 <main@@Base+0x818>
  40dbd6:	pop    rbx
  40dbd7:	ret    
  40dbd8:	lea    r9,[rip+0xfffffffffffffaf1]        # 40d6d0 <main@@Base+0x310>
  40dbdf:	mov    esi,0x2
  40dbe4:	xor    edx,edx
  40dbe6:	xor    ecx,ecx
  40dbe8:	mov    r8d,0x1
  40dbee:	mov    rdi,rbx
  40dbf1:	pop    rbx
  40dbf2:	jmp    414400 <flatcc_verify_table_as_nested_root@@Base>
  40dbf7:	nop    WORD PTR [rax+rax*1+0x0]
  40dc00:	push   rbx
  40dc01:	mov    rbx,rdi
  40dc04:	xor    esi,esi
  40dc06:	mov    edx,0x1
  40dc0b:	mov    ecx,0x1
  40dc10:	call   413490 <flatcc_verify_field@@Base>
  40dc15:	test   eax,eax
  40dc17:	jne    40dc4f <main@@Base+0x88f>
  40dc19:	mov    esi,0x1
  40dc1e:	mov    edx,0x1
  40dc23:	mov    ecx,0x1
  40dc28:	mov    rdi,rbx
  40dc2b:	call   413490 <flatcc_verify_field@@Base>
  40dc30:	test   eax,eax
  40dc32:	jne    40dc4f <main@@Base+0x88f>
  40dc34:	mov    esi,0x2
  40dc39:	mov    edx,0x1
  40dc3e:	mov    ecx,0x1
  40dc43:	mov    rdi,rbx
  40dc46:	call   413490 <flatcc_verify_field@@Base>
  40dc4b:	test   eax,eax
  40dc4d:	je     40dc51 <main@@Base+0x891>
  40dc4f:	pop    rbx
  40dc50:	ret    
  40dc51:	mov    esi,0x3
  40dc56:	mov    edx,0x1
  40dc5b:	mov    ecx,0x1
  40dc60:	mov    rdi,rbx
  40dc63:	pop    rbx
  40dc64:	jmp    413490 <flatcc_verify_field@@Base>
  40dc69:	nop    DWORD PTR [rax+0x0]
  40dc70:	xor    eax,eax
  40dc72:	ret    
  40dc73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc7d:	nop    DWORD PTR [rax]
  40dc80:	push   rbx
  40dc81:	mov    rbx,rdi
  40dc84:	lea    rcx,[rip+0x45]        # 40dcd0 <main@@Base+0x910>
  40dc8b:	xor    esi,esi
  40dc8d:	xor    edx,edx
  40dc8f:	call   4137d0 <flatcc_verify_table_field@@Base>
  40dc94:	test   eax,eax
  40dc96:	jne    40dcb2 <main@@Base+0x8f2>
  40dc98:	lea    rcx,[rip+0x81]        # 40dd20 <main@@Base+0x960>
  40dc9f:	mov    esi,0x1
  40dca4:	xor    edx,edx
  40dca6:	mov    rdi,rbx
  40dca9:	call   4137d0 <flatcc_verify_table_field@@Base>
  40dcae:	test   eax,eax
  40dcb0:	je     40dcb4 <main@@Base+0x8f4>
  40dcb2:	pop    rbx
  40dcb3:	ret    
  40dcb4:	lea    rcx,[rip+0xfffffffffffffe55]        # 40db10 <main@@Base+0x750>
  40dcbb:	mov    esi,0x3
  40dcc0:	xor    edx,edx
  40dcc2:	mov    rdi,rbx
  40dcc5:	pop    rbx
  40dcc6:	jmp    414820 <flatcc_verify_union_vector_field@@Base>
  40dccb:	nop    DWORD PTR [rax+rax*1+0x0]
  40dcd0:	push   rbx
  40dcd1:	mov    rbx,rdi
  40dcd4:	lea    rcx,[rip+0xd5]        # 40ddb0 <main@@Base+0x9f0>
  40dcdb:	xor    esi,esi
  40dcdd:	xor    edx,edx
  40dcdf:	call   4137d0 <flatcc_verify_table_field@@Base>
  40dce4:	test   eax,eax
  40dce6:	jne    40dd02 <main@@Base+0x942>
  40dce8:	lea    rcx,[rip+0x1a1]        # 40de90 <main@@Base+0xad0>
  40dcef:	mov    esi,0x1
  40dcf4:	xor    edx,edx
  40dcf6:	mov    rdi,rbx
  40dcf9:	call   4137d0 <flatcc_verify_table_field@@Base>
  40dcfe:	test   eax,eax
  40dd00:	je     40dd04 <main@@Base+0x944>
  40dd02:	pop    rbx
  40dd03:	ret    
  40dd04:	lea    rcx,[rip+0x1c5]        # 40ded0 <main@@Base+0xb10>
  40dd0b:	mov    esi,0x2
  40dd10:	xor    edx,edx
  40dd12:	mov    rdi,rbx
  40dd15:	pop    rbx
  40dd16:	jmp    4137d0 <flatcc_verify_table_field@@Base>
  40dd1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd20:	push   rbx
  40dd21:	mov    rbx,rdi
  40dd24:	lea    rcx,[rip+0x1e5]        # 40df10 <main@@Base+0xb50>
  40dd2b:	mov    esi,0x1
  40dd30:	xor    edx,edx
  40dd32:	call   4146e0 <flatcc_verify_union_field@@Base>
  40dd37:	test   eax,eax
  40dd39:	jne    40dd89 <main@@Base+0x9c9>
  40dd3b:	lea    rcx,[rip+0x1ce]        # 40df10 <main@@Base+0xb50>
  40dd42:	mov    esi,0x3
  40dd47:	xor    edx,edx
  40dd49:	mov    rdi,rbx
  40dd4c:	call   4146e0 <flatcc_verify_union_field@@Base>
  40dd51:	test   eax,eax
  40dd53:	jne    40dd89 <main@@Base+0x9c9>
  40dd55:	lea    rcx,[rip+0x1b4]        # 40df10 <main@@Base+0xb50>
  40dd5c:	mov    esi,0x5
  40dd61:	xor    edx,edx
  40dd63:	mov    rdi,rbx
  40dd66:	call   4146e0 <flatcc_verify_union_field@@Base>
  40dd6b:	test   eax,eax
  40dd6d:	jne    40dd89 <main@@Base+0x9c9>
  40dd6f:	lea    rcx,[rip+0x19a]        # 40df10 <main@@Base+0xb50>
  40dd76:	mov    esi,0x7
  40dd7b:	xor    edx,edx
  40dd7d:	mov    rdi,rbx
  40dd80:	call   4146e0 <flatcc_verify_union_field@@Base>
  40dd85:	test   eax,eax
  40dd87:	je     40dd8b <main@@Base+0x9cb>
  40dd89:	pop    rbx
  40dd8a:	ret    
  40dd8b:	lea    rcx,[rip+0x17e]        # 40df10 <main@@Base+0xb50>
  40dd92:	mov    esi,0x9
  40dd97:	xor    edx,edx
  40dd99:	mov    rdi,rbx
  40dd9c:	pop    rbx
  40dd9d:	jmp    414820 <flatcc_verify_union_vector_field@@Base>
  40dda2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ddac:	nop    DWORD PTR [rax+0x0]
  40ddb0:	push   rbx
  40ddb1:	mov    rbx,rdi
  40ddb4:	xor    esi,esi
  40ddb6:	xor    edx,edx
  40ddb8:	call   4134f0 <flatcc_verify_string_field@@Base>
  40ddbd:	test   eax,eax
  40ddbf:	jne    40de76 <main@@Base+0xab6>
  40ddc5:	mov    esi,0x1
  40ddca:	mov    edx,0x4
  40ddcf:	mov    ecx,0x4
  40ddd4:	mov    rdi,rbx
  40ddd7:	call   413490 <flatcc_verify_field@@Base>
  40dddc:	test   eax,eax
  40ddde:	jne    40de76 <main@@Base+0xab6>
  40dde4:	mov    esi,0x2
  40dde9:	xor    edx,edx
  40ddeb:	mov    rdi,rbx
  40ddee:	call   4134f0 <flatcc_verify_string_field@@Base>
  40ddf3:	test   eax,eax
  40ddf5:	jne    40de76 <main@@Base+0xab6>
  40ddf7:	mov    esi,0x3
  40ddfc:	mov    edx,0x8
  40de01:	mov    ecx,0x8
  40de06:	mov    rdi,rbx
  40de09:	call   413490 <flatcc_verify_field@@Base>
  40de0e:	test   eax,eax
  40de10:	jne    40de76 <main@@Base+0xab6>
  40de12:	mov    esi,0x4
  40de17:	xor    edx,edx
  40de19:	mov    rdi,rbx
  40de1c:	call   4134f0 <flatcc_verify_string_field@@Base>
  40de21:	test   eax,eax
  40de23:	jne    40de76 <main@@Base+0xab6>
  40de25:	mov    esi,0x5
  40de2a:	mov    edx,0x8
  40de2f:	mov    ecx,0x8
  40de34:	mov    rdi,rbx
  40de37:	call   413490 <flatcc_verify_field@@Base>
  40de3c:	test   eax,eax
  40de3e:	jne    40de76 <main@@Base+0xab6>
  40de40:	mov    esi,0x6
  40de45:	mov    edx,0x4
  40de4a:	mov    ecx,0x4
  40de4f:	mov    rdi,rbx
  40de52:	call   413490 <flatcc_verify_field@@Base>
  40de57:	test   eax,eax
  40de59:	jne    40de76 <main@@Base+0xab6>
  40de5b:	mov    esi,0x7
  40de60:	mov    edx,0x8
  40de65:	mov    ecx,0x8
  40de6a:	mov    rdi,rbx
  40de6d:	call   413490 <flatcc_verify_field@@Base>
  40de72:	test   eax,eax
  40de74:	je     40de78 <main@@Base+0xab8>
  40de76:	pop    rbx
  40de77:	ret    
  40de78:	mov    esi,0x8
  40de7d:	mov    edx,0x4
  40de82:	mov    ecx,0x4
  40de87:	mov    rdi,rbx
  40de8a:	pop    rbx
  40de8b:	jmp    413490 <flatcc_verify_field@@Base>
  40de90:	push   rbx
  40de91:	mov    rbx,rdi
  40de94:	xor    esi,esi
  40de96:	mov    edx,0x8
  40de9b:	mov    ecx,0x8
  40dea0:	call   413490 <flatcc_verify_field@@Base>
  40dea5:	test   eax,eax
  40dea7:	je     40deab <main@@Base+0xaeb>
  40dea9:	pop    rbx
  40deaa:	ret    
  40deab:	mov    esi,0x1
  40deb0:	mov    edx,0x4
  40deb5:	mov    ecx,0x4
  40deba:	mov    rdi,rbx
  40debd:	pop    rbx
  40debe:	jmp    413490 <flatcc_verify_field@@Base>
  40dec3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40decd:	nop    DWORD PTR [rax]
  40ded0:	push   rbx
  40ded1:	mov    rbx,rdi
  40ded4:	xor    esi,esi
  40ded6:	mov    edx,0x8
  40dedb:	mov    ecx,0x8
  40dee0:	call   413490 <flatcc_verify_field@@Base>
  40dee5:	test   eax,eax
  40dee7:	je     40deeb <main@@Base+0xb2b>
  40dee9:	pop    rbx
  40deea:	ret    
  40deeb:	mov    esi,0x1
  40def0:	mov    edx,0x4
  40def5:	mov    ecx,0x4
  40defa:	mov    rdi,rbx
  40defd:	pop    rbx
  40defe:	jmp    413490 <flatcc_verify_field@@Base>
  40df03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40df0d:	nop    DWORD PTR [rax]
  40df10:	mov    al,BYTE PTR [rdi+0x10]
  40df13:	add    al,0x1
  40df15:	cmp    al,0xc
  40df17:	ja     40df40 <main@@Base+0xb80>
  40df19:	movzx  eax,al
  40df1c:	lea    rcx,[rip+0x714d]        # 415070 <_IO_stdin_used@@Base+0x70>
  40df23:	movsxd rax,DWORD PTR [rcx+rax*4]
  40df27:	add    rax,rcx
  40df2a:	jmp    rax
  40df2c:	jmp    413d80 <flatcc_verify_union_string@@Base>
  40df31:	mov    esi,0x4
  40df36:	mov    edx,0x4
  40df3b:	jmp    413d40 <flatcc_verify_union_struct@@Base>
  40df40:	xor    eax,eax
  40df42:	ret    
  40df43:	lea    rsi,[rip+0x16]        # 40df60 <main@@Base+0xba0>
  40df4a:	jmp    413c50 <flatcc_verify_union_table@@Base>
  40df4f:	mov    esi,0x2
  40df54:	mov    edx,0x2
  40df59:	jmp    413d40 <flatcc_verify_union_struct@@Base>
  40df5e:	xchg   ax,ax
  40df60:	xor    esi,esi
  40df62:	mov    edx,0x4
  40df67:	mov    ecx,0x4
  40df6c:	jmp    413490 <flatcc_verify_field@@Base>
  40df71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40df7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40df80:	xor    esi,esi
  40df82:	xor    edx,edx
  40df84:	mov    ecx,0x1
  40df89:	jmp    413490 <flatcc_verify_field@@Base>
  40df8e:	xchg   ax,ax
  40df90:	push   rbp
  40df91:	push   r15
  40df93:	push   r14
  40df95:	push   r13
  40df97:	push   r12
  40df99:	push   rbx
  40df9a:	sub    rsp,0x18
  40df9e:	lea    rbp,[rsi+rsi*1]
  40dfa2:	mov    QWORD PTR [rsp+0x10],rdx
  40dfa7:	cmp    rbp,rdx
  40dfaa:	ja     40e1de <main@@Base+0xe1e>
  40dfb0:	mov    r13,rsi
  40dfb3:	mov    QWORD PTR [rsp+0x8],rdi
  40dfb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dfc0:	cmp    rbp,QWORD PTR [rsp+0x10]
  40dfc5:	jae    40e0d0 <main@@Base+0xd10>
  40dfcb:	test   rdi,rdi
  40dfce:	je     40e1f6 <main@@Base+0xe36>
  40dfd4:	mov    esi,DWORD PTR [rdi-0x4]
  40dfd7:	cmp    rbp,rsi
  40dfda:	jae    40e1f6 <main@@Base+0xe36>
  40dfe0:	lea    rcx,[rdi+rbp*4]
  40dfe4:	mov    eax,DWORD PTR [rdi+rbp*4]
  40dfe7:	add    rax,rcx
  40dfea:	je     40e215 <main@@Base+0xe55>
  40dff0:	movsxd rcx,DWORD PTR [rax]
  40dff3:	mov    rdx,rax
  40dff6:	sub    rdx,rcx
  40dff9:	movzx  edx,WORD PTR [rdx]
  40dffc:	cmp    edx,0xc
  40dfff:	jb     40e1ed <main@@Base+0xe2d>
  40e005:	neg    rcx
  40e008:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  40e00d:	test   rcx,rcx
  40e010:	je     40e1ed <main@@Base+0xe2d>
  40e016:	mov    rbx,rbp
  40e019:	or     rbx,0x1
  40e01d:	cmp    rbx,rsi
  40e020:	jae    40e1f6 <main@@Base+0xe36>
  40e026:	lea    r8,[rdi+rbx*4]
  40e02a:	mov    edx,DWORD PTR [rdi+rbx*4]
  40e02d:	add    rdx,r8
  40e030:	je     40e215 <main@@Base+0xe55>
  40e036:	mov    QWORD PTR [rsp],rsi
  40e03a:	movsxd rsi,DWORD PTR [rdx]
  40e03d:	mov    rdi,rdx
  40e040:	sub    rdi,rsi
  40e043:	movzx  edi,WORD PTR [rdi]
  40e046:	cmp    edi,0xc
  40e049:	jb     40e1ed <main@@Base+0xe2d>
  40e04f:	neg    rsi
  40e052:	movzx  esi,WORD PTR [rdx+rsi*1+0xa]
  40e057:	test   rsi,rsi
  40e05a:	je     40e1ed <main@@Base+0xe2d>
  40e060:	lea    rdi,[rax+rcx*1]
  40e064:	mov    eax,DWORD PTR [rax+rcx*1]
  40e067:	add    rdi,rax
  40e06a:	add    rdi,0x4
  40e06e:	lea    rax,[rdx+rsi*1]
  40e072:	mov    ecx,DWORD PTR [rdx+rsi*1]
  40e075:	lea    rsi,[rcx+rax*1]
  40e079:	add    rsi,0x4
  40e07d:	mov    r14d,DWORD PTR [rcx+rax*1]
  40e081:	mov    r15d,DWORD PTR [rdi-0x4]
  40e085:	cmp    r15d,r14d
  40e088:	mov    edx,r14d
  40e08b:	cmovb  edx,r15d
  40e08f:	call   404050 <strncmp@plt>
  40e094:	test   eax,eax
  40e096:	mov    rax,rbx
  40e099:	cmovne rax,rbp
  40e09d:	cmovs  rax,rbx
  40e0a1:	cmovne rbp,rax
  40e0a5:	cmp    r15d,r14d
  40e0a8:	cmovb  rbp,rax
  40e0ac:	mov    r12,rbp
  40e0af:	mov    rdi,QWORD PTR [rsp+0x8]
  40e0b4:	mov    rbx,QWORD PTR [rsp]
  40e0b8:	cmp    r13,rbx
  40e0bb:	jb     40e0e8 <main@@Base+0xd28>
  40e0bd:	jmp    40e1f6 <main@@Base+0xe36>
  40e0c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e0cc:	nop    DWORD PTR [rax+0x0]
  40e0d0:	test   rdi,rdi
  40e0d3:	je     40e1f6 <main@@Base+0xe36>
  40e0d9:	mov    ebx,DWORD PTR [rdi-0x4]
  40e0dc:	mov    r12,rbp
  40e0df:	cmp    r13,rbx
  40e0e2:	jae    40e1f6 <main@@Base+0xe36>
  40e0e8:	lea    rsi,[rdi+r13*4]
  40e0ec:	mov    r14d,DWORD PTR [rdi+r13*4]
  40e0f0:	mov    rax,rsi
  40e0f3:	add    rax,r14
  40e0f6:	je     40e215 <main@@Base+0xe55>
  40e0fc:	movsxd rcx,DWORD PTR [rax]
  40e0ff:	mov    rdx,rax
  40e102:	sub    rdx,rcx
  40e105:	movzx  edx,WORD PTR [rdx]
  40e108:	cmp    edx,0xc
  40e10b:	jb     40e1ed <main@@Base+0xe2d>
  40e111:	neg    rcx
  40e114:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  40e119:	test   rcx,rcx
  40e11c:	je     40e1ed <main@@Base+0xe2d>
  40e122:	cmp    r12,rbx
  40e125:	jae    40e1f6 <main@@Base+0xe36>
  40e12b:	lea    rbx,[rdi+r12*4]
  40e12f:	mov    ebp,DWORD PTR [rdi+r12*4]
  40e133:	mov    rdx,rbx
  40e136:	add    rdx,rbp
  40e139:	je     40e215 <main@@Base+0xe55>
  40e13f:	mov    QWORD PTR [rsp],rsi
  40e143:	movsxd rsi,DWORD PTR [rdx]
  40e146:	mov    rdi,rdx
  40e149:	sub    rdi,rsi
  40e14c:	movzx  edi,WORD PTR [rdi]
  40e14f:	cmp    edi,0xc
  40e152:	jb     40e1ed <main@@Base+0xe2d>
  40e158:	neg    rsi
  40e15b:	movzx  esi,WORD PTR [rdx+rsi*1+0xa]
  40e160:	test   rsi,rsi
  40e163:	je     40e1ed <main@@Base+0xe2d>
  40e169:	lea    rdi,[rax+rcx*1]
  40e16d:	mov    eax,DWORD PTR [rax+rcx*1]
  40e170:	add    rdi,rax
  40e173:	add    rdi,0x4
  40e177:	lea    rax,[rdx+rsi*1]
  40e17b:	mov    ecx,DWORD PTR [rdx+rsi*1]
  40e17e:	lea    rsi,[rcx+rax*1]
  40e182:	add    rsi,0x4
  40e186:	mov    edx,DWORD PTR [rcx+rax*1]
  40e189:	mov    eax,DWORD PTR [rdi-0x4]
  40e18c:	cmp    eax,edx
  40e18e:	setb   r15b
  40e192:	cmovb  edx,eax
  40e195:	call   404050 <strncmp@plt>
  40e19a:	test   eax,eax
  40e19c:	setne  cl
  40e19f:	setle  al
  40e1a2:	or     cl,r15b
  40e1a5:	cmp    cl,0x1
  40e1a8:	mov    rdi,QWORD PTR [rsp+0x8]
  40e1ad:	jne    40e1de <main@@Base+0xe1e>
  40e1af:	test   al,al
  40e1b1:	je     40e1de <main@@Base+0xe1e>
  40e1b3:	sub    r13d,r12d
  40e1b6:	lea    eax,[r13*4+0x0]
  40e1be:	sub    ebp,eax
  40e1c0:	lea    eax,[r14+r13*4]
  40e1c4:	mov    rcx,QWORD PTR [rsp]
  40e1c8:	mov    DWORD PTR [rcx],ebp
  40e1ca:	mov    DWORD PTR [rbx],eax
  40e1cc:	lea    rbp,[r12+r12*1]
  40e1d0:	mov    r13,r12
  40e1d3:	cmp    rbp,QWORD PTR [rsp+0x10]
  40e1d8:	jbe    40dfc0 <main@@Base+0xc00>
  40e1de:	add    rsp,0x18
  40e1e2:	pop    rbx
  40e1e3:	pop    r12
  40e1e5:	pop    r13
  40e1e7:	pop    r14
  40e1e9:	pop    r15
  40e1eb:	pop    rbp
  40e1ec:	ret    
  40e1ed:	lea    rdi,[rip+0x81ed]        # 4163e1 <_IO_stdin_used@@Base+0x13e1>
  40e1f4:	jmp    40e21c <main@@Base+0xe5c>
  40e1f6:	lea    rdi,[rip+0x825e]        # 41645b <_IO_stdin_used@@Base+0x145b>
  40e1fd:	lea    rsi,[rip+0x7c88]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40e204:	lea    rcx,[rip+0x83b1]        # 4165bc <_IO_stdin_used@@Base+0x15bc>
  40e20b:	mov    edx,0x2b5
  40e210:	call   4040a0 <__assert_fail@plt>
  40e215:	lea    rdi,[rip+0x7c4a]        # 415e66 <_IO_stdin_used@@Base+0xe66>
  40e21c:	lea    rsi,[rip+0x7c69]        # 415e8c <_IO_stdin_used@@Base+0xe8c>
  40e223:	lea    rcx,[rip+0x8166]        # 416390 <_IO_stdin_used@@Base+0x1390>
  40e22a:	mov    edx,0x2bb
  40e22f:	call   4040a0 <__assert_fail@plt>
  40e234:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e23e:	xchg   ax,ax

000000000040e240 <flatcc_builder_default_alloc@@Base>:
  40e240:	push   rbp
  40e241:	push   r15
  40e243:	push   r14
  40e245:	push   r12
  40e247:	push   rbx
  40e248:	mov    rbx,rsi
  40e24b:	test   rdx,rdx
  40e24e:	je     40e279 <flatcc_builder_default_alloc@@Base+0x39>
  40e250:	mov    r14d,ecx
  40e253:	add    r8d,0xffffffff
  40e257:	cmp    r8d,0x6
  40e25b:	ja     40e297 <flatcc_builder_default_alloc@@Base+0x57>
  40e25d:	mov    eax,0x100
  40e262:	lea    rcx,[rip+0xa757]        # 4189c0 <_IO_stdin_used@@Base+0x39c0>
  40e269:	movsxd rsi,DWORD PTR [rcx+r8*4]
  40e26d:	add    rsi,rcx
  40e270:	jmp    rsi
  40e272:	mov    eax,0x120
  40e277:	jmp    40e2b0 <flatcc_builder_default_alloc@@Base+0x70>
  40e279:	mov    rdi,QWORD PTR [rbx]
  40e27c:	xor    r15d,r15d
  40e27f:	test   rdi,rdi
  40e282:	je     40e310 <flatcc_builder_default_alloc@@Base+0xd0>
  40e288:	call   404030 <free@plt>
  40e28d:	vxorps xmm0,xmm0,xmm0
  40e291:	vmovups XMMWORD PTR [rbx],xmm0
  40e295:	jmp    40e310 <flatcc_builder_default_alloc@@Base+0xd0>
  40e297:	mov    eax,0x20
  40e29c:	jmp    40e2b0 <flatcc_builder_default_alloc@@Base+0x70>
  40e29e:	mov    rax,rdx
  40e2a1:	jmp    40e2b0 <flatcc_builder_default_alloc@@Base+0x70>
  40e2a3:	mov    eax,0x40
  40e2a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e2b0:	mov    rbp,rax
  40e2b3:	lea    rax,[rax+rax*1]
  40e2b7:	cmp    rbp,rdx
  40e2ba:	jb     40e2b0 <flatcc_builder_default_alloc@@Base+0x70>
  40e2bc:	mov    rax,QWORD PTR [rbx+0x8]
  40e2c0:	xor    r15d,r15d
  40e2c3:	cmp    rax,rdx
  40e2c6:	jb     40e2d0 <flatcc_builder_default_alloc@@Base+0x90>
  40e2c8:	shr    rax,1
  40e2cb:	cmp    rax,rbp
  40e2ce:	jae    40e310 <flatcc_builder_default_alloc@@Base+0xd0>
  40e2d0:	mov    rdi,QWORD PTR [rbx]
  40e2d3:	mov    rsi,rbp
  40e2d6:	call   404130 <realloc@plt>
  40e2db:	test   rax,rax
  40e2de:	je     40e30a <flatcc_builder_default_alloc@@Base+0xca>
  40e2e0:	mov    r12,rax
  40e2e3:	test   r14d,r14d
  40e2e6:	je     40e301 <flatcc_builder_default_alloc@@Base+0xc1>
  40e2e8:	mov    rax,QWORD PTR [rbx+0x8]
  40e2ec:	mov    rdx,rbp
  40e2ef:	sub    rdx,rax
  40e2f2:	jbe    40e301 <flatcc_builder_default_alloc@@Base+0xc1>
  40e2f4:	mov    rdi,r12
  40e2f7:	add    rdi,rax
  40e2fa:	xor    esi,esi
  40e2fc:	call   4040b0 <memset@plt>
  40e301:	mov    QWORD PTR [rbx],r12
  40e304:	mov    QWORD PTR [rbx+0x8],rbp
  40e308:	jmp    40e310 <flatcc_builder_default_alloc@@Base+0xd0>
  40e30a:	mov    r15d,0xffffffff
  40e310:	mov    eax,r15d
  40e313:	pop    rbx
  40e314:	pop    r12
  40e316:	pop    r14
  40e318:	pop    r15
  40e31a:	pop    rbp
  40e31b:	ret    
  40e31c:	nop    DWORD PTR [rax+0x0]

000000000040e320 <flatcc_builder_flush_vtable_cache@@Base>:
  40e320:	cmp    QWORD PTR [rdi+0xd8],0x0
  40e328:	je     40e355 <flatcc_builder_flush_vtable_cache@@Base+0x35>
  40e32a:	push   rbx
  40e32b:	mov    rbx,rdi
  40e32e:	mov    rdi,QWORD PTR [rdi+0xa8]
  40e335:	mov    rdx,QWORD PTR [rbx+0xb0]
  40e33c:	xor    esi,esi
  40e33e:	call   4040b0 <memset@plt>
  40e343:	movabs rax,0x1000000000
  40e34d:	mov    QWORD PTR [rbx+0xe0],rax
  40e354:	pop    rbx
  40e355:	ret    
  40e356:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040e360 <flatcc_builder_custom_init@@Base>:
  40e360:	vxorps xmm0,xmm0,xmm0
  40e364:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  40e36c:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  40e374:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  40e37c:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  40e384:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  40e38c:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  40e394:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  40e39c:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  40e3a4:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  40e3a9:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  40e3ae:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  40e3b3:	vmovups YMMWORD PTR [rdi],ymm0
  40e3b7:	mov    QWORD PTR [rdi+0x180],0x0
  40e3c2:	test   rsi,rsi
  40e3c5:	je     40e3e9 <flatcc_builder_custom_init@@Base+0x89>
  40e3c7:	test   rcx,rcx
  40e3ca:	jne    40e3d3 <flatcc_builder_custom_init@@Base+0x73>
  40e3cc:	lea    rcx,[rip+0xfffffffffffffe6d]        # 40e240 <flatcc_builder_default_alloc@@Base>
  40e3d3:	mov    QWORD PTR [rdi+0x40],r8
  40e3d7:	mov    QWORD PTR [rdi+0x50],rcx
  40e3db:	mov    QWORD PTR [rdi+0x38],rdx
  40e3df:	mov    QWORD PTR [rdi+0x48],rsi
  40e3e3:	xor    eax,eax
  40e3e5:	vzeroupper 
  40e3e8:	ret    
  40e3e9:	mov    DWORD PTR [rdi+0x128],0x1
  40e3f3:	lea    rdx,[rdi+0x130]
  40e3fa:	lea    rsi,[rip+0x4acf]        # 412ed0 <flatcc_emitter@@Base>
  40e401:	test   rcx,rcx
  40e404:	je     40e3cc <flatcc_builder_custom_init@@Base+0x6c>
  40e406:	jmp    40e3d3 <flatcc_builder_custom_init@@Base+0x73>
  40e408:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040e410 <flatcc_builder_init@@Base>:
  40e410:	vxorps xmm0,xmm0,xmm0
  40e414:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  40e41c:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  40e421:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  40e426:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  40e42e:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  40e436:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  40e43e:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  40e446:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  40e44e:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  40e456:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  40e45e:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  40e463:	vmovups YMMWORD PTR [rdi],ymm0
  40e467:	mov    QWORD PTR [rdi+0x180],0x0
  40e472:	mov    DWORD PTR [rdi+0x128],0x1
  40e47c:	lea    rax,[rdi+0x130]
  40e483:	mov    QWORD PTR [rdi+0x40],0x0
  40e48b:	lea    rcx,[rip+0xfffffffffffffdae]        # 40e240 <flatcc_builder_default_alloc@@Base>
  40e492:	mov    QWORD PTR [rdi+0x50],rcx
  40e496:	mov    QWORD PTR [rdi+0x38],rax
  40e49a:	lea    rax,[rip+0x4a2f]        # 412ed0 <flatcc_emitter@@Base>
  40e4a1:	mov    QWORD PTR [rdi+0x48],rax
  40e4a5:	xor    eax,eax
  40e4a7:	vzeroupper 
  40e4aa:	ret    
  40e4ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040e4b0 <flatcc_builder_custom_reset@@Base>:
  40e4b0:	push   rbp
  40e4b1:	push   r15
  40e4b3:	push   r14
  40e4b5:	push   r12
  40e4b7:	push   rbx
  40e4b8:	mov    r15d,edx
  40e4bb:	mov    r14d,esi
  40e4be:	mov    r12,rdi
  40e4c1:	lea    rbp,[rdi+0x58]
  40e4c5:	xor    ebx,ebx
  40e4c7:	nop    WORD PTR [rax+rax*1+0x0]
  40e4d0:	mov    rdi,QWORD PTR [rbp+0x0]
  40e4d4:	test   rdi,rdi
  40e4d7:	je     40e520 <flatcc_builder_custom_reset@@Base+0x70>
  40e4d9:	test   r15d,r15d
  40e4dc:	je     40e50a <flatcc_builder_custom_reset@@Base+0x5a>
  40e4de:	cmp    rbx,0x5
  40e4e2:	je     40e50a <flatcc_builder_custom_reset@@Base+0x5a>
  40e4e4:	mov    rdi,QWORD PTR [r12+0x40]
  40e4e9:	mov    edx,0x1
  40e4ee:	mov    ecx,0x1
  40e4f3:	mov    rsi,rbp
  40e4f6:	mov    r8d,ebx
  40e4f9:	call   QWORD PTR [r12+0x50]
  40e4fe:	test   eax,eax
  40e500:	jne    40e5e0 <flatcc_builder_custom_reset@@Base+0x130>
  40e506:	mov    rdi,QWORD PTR [rbp+0x0]
  40e50a:	mov    rdx,QWORD PTR [rbp+0x8]
  40e50e:	xor    esi,esi
  40e510:	call   4040b0 <memset@plt>
  40e515:	jmp    40e52b <flatcc_builder_custom_reset@@Base+0x7b>
  40e517:	nop    WORD PTR [rax+rax*1+0x0]
  40e520:	cmp    QWORD PTR [rbp+0x8],0x0
  40e525:	jne    40e5f0 <flatcc_builder_custom_reset@@Base+0x140>
  40e52b:	add    rbx,0x1
  40e52f:	add    rbp,0x10
  40e533:	cmp    rbx,0x8
  40e537:	jb     40e4d0 <flatcc_builder_custom_reset@@Base+0x20>
  40e539:	mov    DWORD PTR [r12+0xe0],0x0
  40e545:	cmp    DWORD PTR [r12+0xe4],0x0
  40e54e:	je     40e55c <flatcc_builder_custom_reset@@Base+0xac>
  40e550:	mov    DWORD PTR [r12+0xe4],0x10
  40e55c:	mov    WORD PTR [r12+0xe8],0x0
  40e567:	mov    QWORD PTR [r12+0xf0],0x0
  40e573:	mov    QWORD PTR [r12+0x20],0x0
  40e57c:	vxorps xmm0,xmm0,xmm0
  40e580:	vmovups XMMWORD PTR [r12+0xfc],xmm0
  40e58a:	mov    rax,QWORD PTR [r12+0x58]
  40e58f:	mov    rcx,QWORD PTR [r12+0x68]
  40e594:	mov    QWORD PTR [r12+0x18],rcx
  40e599:	mov    rcx,QWORD PTR [r12+0x88]
  40e5a1:	mov    QWORD PTR [r12],rcx
  40e5a5:	mov    QWORD PTR [r12+0x8],rax
  40e5aa:	mov    QWORD PTR [r12+0x30],0x0
  40e5b3:	test   r14d,r14d
  40e5b6:	je     40e5c2 <flatcc_builder_custom_reset@@Base+0x112>
  40e5b8:	vmovups XMMWORD PTR [r12+0x118],xmm0
  40e5c2:	xor    ebx,ebx
  40e5c4:	cmp    DWORD PTR [r12+0x128],0x0
  40e5cd:	je     40e5e5 <flatcc_builder_custom_reset@@Base+0x135>
  40e5cf:	add    r12,0x130
  40e5d6:	mov    rdi,r12
  40e5d9:	call   412d50 <flatcc_emitter_reset@@Base>
  40e5de:	jmp    40e5e5 <flatcc_builder_custom_reset@@Base+0x135>
  40e5e0:	mov    ebx,0xffffffff
  40e5e5:	mov    eax,ebx
  40e5e7:	pop    rbx
  40e5e8:	pop    r12
  40e5ea:	pop    r14
  40e5ec:	pop    r15
  40e5ee:	pop    rbp
  40e5ef:	ret    
  40e5f0:	lea    rdi,[rip+0xa659]        # 418c50 <flatcc_builder_padding_base@@Base+0x270>
  40e5f7:	lea    rsi,[rip+0xa664]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40e5fe:	lea    rcx,[rip+0xa6bd]        # 418cc2 <flatcc_builder_padding_base@@Base+0x2e2>
  40e605:	mov    edx,0x1b2
  40e60a:	call   4040a0 <__assert_fail@plt>
  40e60f:	nop

000000000040e610 <flatcc_builder_reset@@Base>:
  40e610:	push   rbx
  40e611:	mov    rbx,rdi
  40e614:	mov    rdi,QWORD PTR [rdi+0x58]
  40e618:	mov    rdx,QWORD PTR [rbx+0x60]
  40e61c:	test   rdi,rdi
  40e61f:	je     40e62a <flatcc_builder_reset@@Base+0x1a>
  40e621:	xor    esi,esi
  40e623:	call   4040b0 <memset@plt>
  40e628:	jmp    40e633 <flatcc_builder_reset@@Base+0x23>
  40e62a:	test   rdx,rdx
  40e62d:	jne    40e7b0 <flatcc_builder_reset@@Base+0x1a0>
  40e633:	mov    rdi,QWORD PTR [rbx+0x68]
  40e637:	mov    rdx,QWORD PTR [rbx+0x70]
  40e63b:	test   rdi,rdi
  40e63e:	je     40e649 <flatcc_builder_reset@@Base+0x39>
  40e640:	xor    esi,esi
  40e642:	call   4040b0 <memset@plt>
  40e647:	jmp    40e652 <flatcc_builder_reset@@Base+0x42>
  40e649:	test   rdx,rdx
  40e64c:	jne    40e7b0 <flatcc_builder_reset@@Base+0x1a0>
  40e652:	mov    rdi,QWORD PTR [rbx+0x78]
  40e656:	mov    rdx,QWORD PTR [rbx+0x80]
  40e65d:	test   rdi,rdi
  40e660:	je     40e66b <flatcc_builder_reset@@Base+0x5b>
  40e662:	xor    esi,esi
  40e664:	call   4040b0 <memset@plt>
  40e669:	jmp    40e674 <flatcc_builder_reset@@Base+0x64>
  40e66b:	test   rdx,rdx
  40e66e:	jne    40e7b0 <flatcc_builder_reset@@Base+0x1a0>
  40e674:	mov    rdi,QWORD PTR [rbx+0x88]
  40e67b:	mov    rdx,QWORD PTR [rbx+0x90]
  40e682:	test   rdi,rdi
  40e685:	je     40e690 <flatcc_builder_reset@@Base+0x80>
  40e687:	xor    esi,esi
  40e689:	call   4040b0 <memset@plt>
  40e68e:	jmp    40e699 <flatcc_builder_reset@@Base+0x89>
  40e690:	test   rdx,rdx
  40e693:	jne    40e7b0 <flatcc_builder_reset@@Base+0x1a0>
  40e699:	mov    rdi,QWORD PTR [rbx+0x98]
  40e6a0:	mov    rdx,QWORD PTR [rbx+0xa0]
  40e6a7:	test   rdi,rdi
  40e6aa:	je     40e6b5 <flatcc_builder_reset@@Base+0xa5>
  40e6ac:	xor    esi,esi
  40e6ae:	call   4040b0 <memset@plt>
  40e6b3:	jmp    40e6be <flatcc_builder_reset@@Base+0xae>
  40e6b5:	test   rdx,rdx
  40e6b8:	jne    40e7b0 <flatcc_builder_reset@@Base+0x1a0>
  40e6be:	mov    rdi,QWORD PTR [rbx+0xa8]
  40e6c5:	mov    rdx,QWORD PTR [rbx+0xb0]
  40e6cc:	test   rdi,rdi
  40e6cf:	je     40e6da <flatcc_builder_reset@@Base+0xca>
  40e6d1:	xor    esi,esi
  40e6d3:	call   4040b0 <memset@plt>
  40e6d8:	jmp    40e6e3 <flatcc_builder_reset@@Base+0xd3>
  40e6da:	test   rdx,rdx
  40e6dd:	jne    40e7b0 <flatcc_builder_reset@@Base+0x1a0>
  40e6e3:	mov    rdi,QWORD PTR [rbx+0xb8]
  40e6ea:	mov    rdx,QWORD PTR [rbx+0xc0]
  40e6f1:	test   rdi,rdi
  40e6f4:	je     40e6ff <flatcc_builder_reset@@Base+0xef>
  40e6f6:	xor    esi,esi
  40e6f8:	call   4040b0 <memset@plt>
  40e6fd:	jmp    40e708 <flatcc_builder_reset@@Base+0xf8>
  40e6ff:	test   rdx,rdx
  40e702:	jne    40e7b0 <flatcc_builder_reset@@Base+0x1a0>
  40e708:	mov    rdi,QWORD PTR [rbx+0xc8]
  40e70f:	mov    rdx,QWORD PTR [rbx+0xd0]
  40e716:	test   rdi,rdi
  40e719:	je     40e724 <flatcc_builder_reset@@Base+0x114>
  40e71b:	xor    esi,esi
  40e71d:	call   4040b0 <memset@plt>
  40e722:	jmp    40e72d <flatcc_builder_reset@@Base+0x11d>
  40e724:	test   rdx,rdx
  40e727:	jne    40e7b0 <flatcc_builder_reset@@Base+0x1a0>
  40e72d:	mov    DWORD PTR [rbx+0xe0],0x0
  40e737:	cmp    DWORD PTR [rbx+0xe4],0x0
  40e73e:	je     40e74a <flatcc_builder_reset@@Base+0x13a>
  40e740:	mov    DWORD PTR [rbx+0xe4],0x10
  40e74a:	mov    WORD PTR [rbx+0xe8],0x0
  40e753:	mov    QWORD PTR [rbx+0xf0],0x0
  40e75e:	mov    QWORD PTR [rbx+0x20],0x0
  40e766:	vxorps xmm0,xmm0,xmm0
  40e76a:	vmovups XMMWORD PTR [rbx+0xfc],xmm0
  40e772:	mov    rax,QWORD PTR [rbx+0x58]
  40e776:	mov    rcx,QWORD PTR [rbx+0x68]
  40e77a:	mov    QWORD PTR [rbx+0x18],rcx
  40e77e:	mov    rcx,QWORD PTR [rbx+0x88]
  40e785:	mov    QWORD PTR [rbx],rcx
  40e788:	mov    QWORD PTR [rbx+0x8],rax
  40e78c:	mov    QWORD PTR [rbx+0x30],0x0
  40e794:	cmp    DWORD PTR [rbx+0x128],0x0
  40e79b:	je     40e7ac <flatcc_builder_reset@@Base+0x19c>
  40e79d:	add    rbx,0x130
  40e7a4:	mov    rdi,rbx
  40e7a7:	call   412d50 <flatcc_emitter_reset@@Base>
  40e7ac:	xor    eax,eax
  40e7ae:	pop    rbx
  40e7af:	ret    
  40e7b0:	lea    rdi,[rip+0xa499]        # 418c50 <flatcc_builder_padding_base@@Base+0x270>
  40e7b7:	lea    rsi,[rip+0xa4a4]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40e7be:	lea    rcx,[rip+0xa4fd]        # 418cc2 <flatcc_builder_padding_base@@Base+0x2e2>
  40e7c5:	mov    edx,0x1b2
  40e7ca:	call   4040a0 <__assert_fail@plt>
  40e7cf:	nop

000000000040e7d0 <flatcc_builder_clear@@Base>:
  40e7d0:	push   rbx
  40e7d1:	mov    rbx,rdi
  40e7d4:	lea    rsi,[rdi+0x58]
  40e7d8:	mov    rdi,QWORD PTR [rdi+0x40]
  40e7dc:	xor    edx,edx
  40e7de:	xor    ecx,ecx
  40e7e0:	xor    r8d,r8d
  40e7e3:	call   QWORD PTR [rbx+0x50]
  40e7e6:	lea    rsi,[rbx+0x68]
  40e7ea:	mov    rdi,QWORD PTR [rbx+0x40]
  40e7ee:	xor    edx,edx
  40e7f0:	xor    ecx,ecx
  40e7f2:	mov    r8d,0x1
  40e7f8:	call   QWORD PTR [rbx+0x50]
  40e7fb:	lea    rsi,[rbx+0x78]
  40e7ff:	mov    rdi,QWORD PTR [rbx+0x40]
  40e803:	xor    edx,edx
  40e805:	xor    ecx,ecx
  40e807:	mov    r8d,0x2
  40e80d:	call   QWORD PTR [rbx+0x50]
  40e810:	lea    rsi,[rbx+0x88]
  40e817:	mov    rdi,QWORD PTR [rbx+0x40]
  40e81b:	xor    edx,edx
  40e81d:	xor    ecx,ecx
  40e81f:	mov    r8d,0x3
  40e825:	call   QWORD PTR [rbx+0x50]
  40e828:	lea    rsi,[rbx+0x98]
  40e82f:	mov    rdi,QWORD PTR [rbx+0x40]
  40e833:	xor    edx,edx
  40e835:	xor    ecx,ecx
  40e837:	mov    r8d,0x4
  40e83d:	call   QWORD PTR [rbx+0x50]
  40e840:	lea    rsi,[rbx+0xa8]
  40e847:	mov    rdi,QWORD PTR [rbx+0x40]
  40e84b:	xor    edx,edx
  40e84d:	xor    ecx,ecx
  40e84f:	mov    r8d,0x5
  40e855:	call   QWORD PTR [rbx+0x50]
  40e858:	lea    rsi,[rbx+0xb8]
  40e85f:	mov    rdi,QWORD PTR [rbx+0x40]
  40e863:	xor    edx,edx
  40e865:	xor    ecx,ecx
  40e867:	mov    r8d,0x6
  40e86d:	call   QWORD PTR [rbx+0x50]
  40e870:	lea    rsi,[rbx+0xc8]
  40e877:	mov    rdi,QWORD PTR [rbx+0x40]
  40e87b:	xor    edx,edx
  40e87d:	xor    ecx,ecx
  40e87f:	mov    r8d,0x7
  40e885:	call   QWORD PTR [rbx+0x50]
  40e888:	cmp    DWORD PTR [rbx+0x128],0x0
  40e88f:	je     40e89d <flatcc_builder_clear@@Base+0xcd>
  40e891:	lea    rdi,[rbx+0x130]
  40e898:	call   412e50 <flatcc_emitter_clear@@Base>
  40e89d:	vxorps xmm0,xmm0,xmm0
  40e8a1:	vmovups YMMWORD PTR [rbx+0x160],ymm0
  40e8a9:	vmovups YMMWORD PTR [rbx+0x140],ymm0
  40e8b1:	vmovups YMMWORD PTR [rbx+0x120],ymm0
  40e8b9:	vmovups YMMWORD PTR [rbx+0x100],ymm0
  40e8c1:	vmovups YMMWORD PTR [rbx+0xe0],ymm0
  40e8c9:	vmovups YMMWORD PTR [rbx+0xc0],ymm0
  40e8d1:	vmovups YMMWORD PTR [rbx+0xa0],ymm0
  40e8d9:	vmovups YMMWORD PTR [rbx+0x80],ymm0
  40e8e1:	vmovups YMMWORD PTR [rbx+0x60],ymm0
  40e8e6:	vmovups YMMWORD PTR [rbx+0x40],ymm0
  40e8eb:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  40e8f0:	vmovups YMMWORD PTR [rbx],ymm0
  40e8f4:	mov    QWORD PTR [rbx+0x180],0x0
  40e8ff:	pop    rbx
  40e900:	vzeroupper 
  40e903:	ret    
  40e904:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e90e:	xchg   ax,ax

000000000040e910 <flatcc_builder_enter_user_frame_ptr@@Base>:
  40e910:	push   r15
  40e912:	push   r14
  40e914:	push   r12
  40e916:	push   rbx
  40e917:	push   rax
  40e918:	mov    r14,rsi
  40e91b:	mov    r15,rdi
  40e91e:	add    r14,0xf
  40e922:	and    r14,0xfffffffffffffff8
  40e926:	mov    rbx,QWORD PTR [rdi+0x180]
  40e92d:	lea    r12,[rdi+0xc8]
  40e934:	lea    rdx,[rbx+r14*1]
  40e938:	cmp    rdx,QWORD PTR [rdi+0xd0]
  40e93f:	jbe    40e958 <flatcc_builder_enter_user_frame_ptr@@Base+0x48>
  40e941:	mov    rdi,QWORD PTR [r15+0x40]
  40e945:	xor    ecx,ecx
  40e947:	mov    r8d,0x7
  40e94d:	mov    rsi,r12
  40e950:	call   QWORD PTR [r15+0x50]
  40e954:	test   eax,eax
  40e956:	jne    40e9a8 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
  40e958:	add    rbx,QWORD PTR [r12]
  40e95c:	je     40e997 <flatcc_builder_enter_user_frame_ptr@@Base+0x87>
  40e95e:	xor    esi,esi
  40e960:	mov    rdi,rbx
  40e963:	mov    rdx,r14
  40e966:	call   4040b0 <memset@plt>
  40e96b:	mov    rax,QWORD PTR [r15+0x178]
  40e972:	mov    QWORD PTR [rbx],rax
  40e975:	add    rbx,0x8
  40e979:	mov    rax,QWORD PTR [r15+0x180]
  40e980:	lea    rcx,[rax+0x8]
  40e984:	mov    QWORD PTR [r15+0x178],rcx
  40e98b:	add    rax,r14
  40e98e:	mov    QWORD PTR [r15+0x180],rax
  40e995:	jmp    40e999 <flatcc_builder_enter_user_frame_ptr@@Base+0x89>
  40e997:	xor    ebx,ebx
  40e999:	mov    rax,rbx
  40e99c:	add    rsp,0x8
  40e9a0:	pop    rbx
  40e9a1:	pop    r12
  40e9a3:	pop    r14
  40e9a5:	pop    r15
  40e9a7:	ret    
  40e9a8:	lea    rdi,[rip+0xb473]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  40e9af:	lea    rsi,[rip+0xa2ac]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40e9b6:	lea    rcx,[rip+0xb29f]        # 419c5c <flatcc_builder_padding_base@@Base+0x127c>
  40e9bd:	mov    edx,0x134
  40e9c2:	call   4040a0 <__assert_fail@plt>
  40e9c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040e9d0 <flatcc_builder_enter_user_frame@@Base>:
  40e9d0:	push   r15
  40e9d2:	push   r14
  40e9d4:	push   r12
  40e9d6:	push   rbx
  40e9d7:	push   rax
  40e9d8:	mov    r14,rsi
  40e9db:	mov    rbx,rdi
  40e9de:	add    r14,0xf
  40e9e2:	and    r14,0xfffffffffffffff8
  40e9e6:	mov    r15,QWORD PTR [rdi+0x180]
  40e9ed:	lea    r12,[rdi+0xc8]
  40e9f4:	lea    rdx,[r15+r14*1]
  40e9f8:	cmp    rdx,QWORD PTR [rdi+0xd0]
  40e9ff:	jbe    40ea17 <flatcc_builder_enter_user_frame@@Base+0x47>
  40ea01:	mov    rdi,QWORD PTR [rbx+0x40]
  40ea05:	xor    ecx,ecx
  40ea07:	mov    r8d,0x7
  40ea0d:	mov    rsi,r12
  40ea10:	call   QWORD PTR [rbx+0x50]
  40ea13:	test   eax,eax
  40ea15:	jne    40ea60 <flatcc_builder_enter_user_frame@@Base+0x90>
  40ea17:	add    r15,QWORD PTR [r12]
  40ea1b:	je     40ea52 <flatcc_builder_enter_user_frame@@Base+0x82>
  40ea1d:	xor    esi,esi
  40ea1f:	mov    rdi,r15
  40ea22:	mov    rdx,r14
  40ea25:	call   4040b0 <memset@plt>
  40ea2a:	mov    rax,QWORD PTR [rbx+0x178]
  40ea31:	mov    QWORD PTR [r15],rax
  40ea34:	mov    rcx,QWORD PTR [rbx+0x180]
  40ea3b:	lea    rax,[rcx+0x8]
  40ea3f:	mov    QWORD PTR [rbx+0x178],rax
  40ea46:	add    rcx,r14
  40ea49:	mov    QWORD PTR [rbx+0x180],rcx
  40ea50:	jmp    40ea54 <flatcc_builder_enter_user_frame@@Base+0x84>
  40ea52:	xor    eax,eax
  40ea54:	add    rsp,0x8
  40ea58:	pop    rbx
  40ea59:	pop    r12
  40ea5b:	pop    r14
  40ea5d:	pop    r15
  40ea5f:	ret    
  40ea60:	lea    rdi,[rip+0xb3bb]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  40ea67:	lea    rsi,[rip+0xa1f4]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40ea6e:	lea    rcx,[rip+0xb1e7]        # 419c5c <flatcc_builder_padding_base@@Base+0x127c>
  40ea75:	mov    edx,0x134
  40ea7a:	call   4040a0 <__assert_fail@plt>
  40ea7f:	nop

000000000040ea80 <flatcc_builder_exit_user_frame@@Base>:
  40ea80:	mov    rax,QWORD PTR [rdi+0x178]
  40ea87:	test   rax,rax
  40ea8a:	je     40eaad <flatcc_builder_exit_user_frame@@Base+0x2d>
  40ea8c:	mov    rcx,QWORD PTR [rdi+0xc8]
  40ea93:	mov    edx,eax
  40ea95:	add    rax,0xfffffffffffffff8
  40ea99:	mov    QWORD PTR [rdi+0x180],rax
  40eaa0:	mov    rax,QWORD PTR [rcx+rdx*1-0x8]
  40eaa5:	mov    QWORD PTR [rdi+0x178],rax
  40eaac:	ret    
  40eaad:	push   rax
  40eaae:	lea    rdi,[rip+0xa24b]        # 418d00 <flatcc_builder_padding_base@@Base+0x320>
  40eab5:	lea    rsi,[rip+0xa1a6]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40eabc:	lea    rcx,[rip+0xa256]        # 418d19 <flatcc_builder_padding_base@@Base+0x339>
  40eac3:	mov    edx,0x21e
  40eac8:	call   4040a0 <__assert_fail@plt>
  40eacd:	nop    DWORD PTR [rax]

000000000040ead0 <flatcc_builder_exit_user_frame_at@@Base>:
  40ead0:	push   rax
  40ead1:	cmp    QWORD PTR [rdi+0x178],rsi
  40ead8:	jb     40eb08 <flatcc_builder_exit_user_frame_at@@Base+0x38>
  40eada:	mov    QWORD PTR [rdi+0x178],rsi
  40eae1:	test   rsi,rsi
  40eae4:	je     40eb27 <flatcc_builder_exit_user_frame_at@@Base+0x57>
  40eae6:	mov    rax,QWORD PTR [rdi+0xc8]
  40eaed:	mov    ecx,esi
  40eaef:	add    rsi,0xfffffffffffffff8
  40eaf3:	mov    QWORD PTR [rdi+0x180],rsi
  40eafa:	mov    rax,QWORD PTR [rax+rcx*1-0x8]
  40eaff:	mov    QWORD PTR [rdi+0x178],rax
  40eb06:	pop    rcx
  40eb07:	ret    
  40eb08:	lea    rdi,[rip+0xa244]        # 418d53 <flatcc_builder_padding_base@@Base+0x373>
  40eb0f:	lea    rsi,[rip+0xa14c]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40eb16:	lea    rcx,[rip+0xa255]        # 418d72 <flatcc_builder_padding_base@@Base+0x392>
  40eb1d:	mov    edx,0x227
  40eb22:	call   4040a0 <__assert_fail@plt>
  40eb27:	lea    rdi,[rip+0xa1d2]        # 418d00 <flatcc_builder_padding_base@@Base+0x320>
  40eb2e:	lea    rsi,[rip+0xa12d]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40eb35:	lea    rcx,[rip+0xa1dd]        # 418d19 <flatcc_builder_padding_base@@Base+0x339>
  40eb3c:	mov    edx,0x21e
  40eb41:	call   4040a0 <__assert_fail@plt>
  40eb46:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040eb50 <flatcc_builder_get_current_user_frame@@Base>:
  40eb50:	mov    rax,QWORD PTR [rdi+0x178]
  40eb57:	ret    
  40eb58:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040eb60 <flatcc_builder_get_user_frame_ptr@@Base>:
  40eb60:	mov    eax,esi
  40eb62:	add    rax,QWORD PTR [rdi+0xc8]
  40eb69:	ret    
  40eb6a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040eb70 <flatcc_builder_embed_buffer@@Base>:
  40eb70:	push   rbp
  40eb71:	push   r15
  40eb73:	push   r14
  40eb75:	push   r12
  40eb77:	push   rbx
  40eb78:	sub    rsp,0xa0
  40eb7f:	mov    ebx,r9d
  40eb82:	mov    rbp,rcx
  40eb85:	mov    r15,rdx
  40eb88:	mov    eax,esi
  40eb8a:	mov    r12,rdi
  40eb8d:	mov    WORD PTR [rsp+0xa],r8w
  40eb93:	xor    ecx,ecx
  40eb95:	cmp    DWORD PTR [rdi+0x100],0x0
  40eb9c:	setne  cl
  40eb9f:	lea    rsi,[rsp+0xa]
  40eba4:	mov    edx,eax
  40eba6:	call   40ed10 <flatcc_builder_embed_buffer@@Base+0x1a0>
  40ebab:	and    ebx,0x2
  40ebae:	movzx  eax,WORD PTR [rsp+0xa]
  40ebb3:	mov    r14d,DWORD PTR [r12+0xf0]
  40ebbb:	lea    ecx,[rbp+rbx*2+0x0]
  40ebbf:	mov    edx,r14d
  40ebc2:	sub    edx,ecx
  40ebc4:	add    eax,0xffffffff
  40ebc7:	and    eax,edx
  40ebc9:	lea    ecx,[rax+rbp*1]
  40ebcc:	mov    DWORD PTR [rsp+0xc],ecx
  40ebd0:	mov    QWORD PTR [rsp+0x10],0x0
  40ebd9:	mov    DWORD PTR [rsp+0x18],0x0
  40ebe1:	cmp    DWORD PTR [r12+0x100],0x0
  40ebea:	je     40ecbe <flatcc_builder_embed_buffer@@Base+0x14e>
  40ebf0:	mov    QWORD PTR [rsp+0x10],0x4
  40ebf9:	lea    rcx,[rsp+0xc]
  40ebfe:	mov    QWORD PTR [rsp+0x20],rcx
  40ec03:	mov    QWORD PTR [rsp+0x28],0x4
  40ec0c:	mov    DWORD PTR [rsp+0x18],0x1
  40ec14:	mov    edx,0x1
  40ec19:	mov    r8d,0x4
  40ec1f:	test   rbp,rbp
  40ec22:	je     40ec43 <flatcc_builder_embed_buffer@@Base+0xd3>
  40ec24:	add    r8,rbp
  40ec27:	mov    QWORD PTR [rsp+0x10],r8
  40ec2c:	mov    ecx,edx
  40ec2e:	shl    rcx,0x4
  40ec32:	mov    QWORD PTR [rsp+rcx*1+0x20],r15
  40ec37:	mov    QWORD PTR [rsp+rcx*1+0x28],rbp
  40ec3c:	add    edx,0x1
  40ec3f:	mov    DWORD PTR [rsp+0x18],edx
  40ec43:	test   eax,eax
  40ec45:	je     40ec6f <flatcc_builder_embed_buffer@@Base+0xff>
  40ec47:	mov    eax,eax
  40ec49:	add    r8,rax
  40ec4c:	mov    QWORD PTR [rsp+0x10],r8
  40ec51:	mov    ecx,edx
  40ec53:	shl    rcx,0x4
  40ec57:	lea    rsi,[rip+0x9d82]        # 4189e0 <flatcc_builder_padding_base@@Base>
  40ec5e:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  40ec63:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  40ec68:	add    edx,0x1
  40ec6b:	mov    DWORD PTR [rsp+0x18],edx
  40ec6f:	cmp    r8,0x11
  40ec73:	setb   al
  40ec76:	lea    rcx,[r8-0x10]
  40ec7a:	shr    rcx,0x20
  40ec7e:	sete   cl
  40ec81:	test   r8d,r8d
  40ec84:	jle    40ecd1 <flatcc_builder_embed_buffer@@Base+0x161>
  40ec86:	or     al,cl
  40ec88:	je     40ecd1 <flatcc_builder_embed_buffer@@Base+0x161>
  40ec8a:	sub    r14d,r8d
  40ec8d:	mov    rdi,QWORD PTR [r12+0x38]
  40ec92:	lea    rsi,[rsp+0x20]
  40ec97:	mov    ecx,r14d
  40ec9a:	call   QWORD PTR [r12+0x48]
  40ec9f:	test   eax,eax
  40eca1:	jne    40ecf0 <flatcc_builder_embed_buffer@@Base+0x180>
  40eca3:	mov    DWORD PTR [r12+0xf0],r14d
  40ecab:	mov    eax,r14d
  40ecae:	add    rsp,0xa0
  40ecb5:	pop    rbx
  40ecb6:	pop    r12
  40ecb8:	pop    r14
  40ecba:	pop    r15
  40ecbc:	pop    rbp
  40ecbd:	ret    
  40ecbe:	xor    edx,edx
  40ecc0:	xor    r8d,r8d
  40ecc3:	test   rbp,rbp
  40ecc6:	jne    40ec24 <flatcc_builder_embed_buffer@@Base+0xb4>
  40eccc:	jmp    40ec43 <flatcc_builder_embed_buffer@@Base+0xd3>
  40ecd1:	lea    rdi,[rip+0xb14a]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  40ecd8:	lea    rsi,[rip+0x9f83]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40ecdf:	lea    rcx,[rip+0xaffb]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  40ece6:	mov    edx,0x287
  40eceb:	call   4040a0 <__assert_fail@plt>
  40ecf0:	lea    rdi,[rip+0xb12b]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  40ecf7:	lea    rsi,[rip+0x9f64]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40ecfe:	lea    rcx,[rip+0xafdc]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  40ed05:	mov    edx,0x28b
  40ed0a:	call   4040a0 <__assert_fail@plt>
  40ed0f:	nop
  40ed10:	push   rbx
  40ed11:	sub    rsp,0x90
  40ed18:	mov    rax,rdi
  40ed1b:	test   dx,dx
  40ed1e:	jne    40ed31 <flatcc_builder_embed_buffer@@Base+0x1c1>
  40ed20:	mov    edi,DWORD PTR [rax+0xec]
  40ed26:	test   di,di
  40ed29:	mov    edx,0x1
  40ed2e:	cmovne edx,edi
  40ed31:	movzx  ebx,WORD PTR [rsi]
  40ed34:	mov    edi,0x4
  40ed39:	cmp    ebx,0x4
  40ed3c:	cmovae edi,ebx
  40ed3f:	jb     40ed4c <flatcc_builder_embed_buffer@@Base+0x1dc>
  40ed41:	cmp    di,dx
  40ed44:	jb     40ed4c <flatcc_builder_embed_buffer@@Base+0x1dc>
  40ed46:	test   ecx,ecx
  40ed48:	jne    40edb4 <flatcc_builder_embed_buffer@@Base+0x244>
  40ed4a:	jmp    40ed59 <flatcc_builder_embed_buffer@@Base+0x1e9>
  40ed4c:	cmp    di,dx
  40ed4f:	cmovb  edi,edx
  40ed52:	mov    WORD PTR [rsi],di
  40ed55:	test   ecx,ecx
  40ed57:	jne    40edb4 <flatcc_builder_embed_buffer@@Base+0x244>
  40ed59:	mov    ebx,DWORD PTR [rax+0xf4]
  40ed5f:	movzx  r8d,dx
  40ed63:	add    r8d,0xffffffff
  40ed67:	and    r8d,ebx
  40ed6a:	je     40edb4 <flatcc_builder_embed_buffer@@Base+0x244>
  40ed6c:	mov    QWORD PTR [rsp],r8
  40ed70:	lea    rcx,[rip+0x9c69]        # 4189e0 <flatcc_builder_padding_base@@Base>
  40ed77:	mov    QWORD PTR [rsp+0x10],rcx
  40ed7c:	mov    QWORD PTR [rsp+0x18],r8
  40ed81:	mov    DWORD PTR [rsp+0x8],0x1
  40ed89:	lea    ecx,[r8+rbx*1]
  40ed8d:	mov    DWORD PTR [rax+0xf4],ecx
  40ed93:	test   r8d,r8d
  40ed96:	js     40edbd <flatcc_builder_embed_buffer@@Base+0x24d>
  40ed98:	mov    rdi,QWORD PTR [rax+0x38]
  40ed9c:	lea    rsi,[rsp+0x10]
  40eda1:	mov    edx,0x1
  40eda6:	mov    ecx,ebx
  40eda8:	call   QWORD PTR [rax+0x48]
  40edab:	test   eax,eax
  40edad:	jne    40eddc <flatcc_builder_embed_buffer@@Base+0x26c>
  40edaf:	cmp    ebx,0xffffffff
  40edb2:	je     40edfb <flatcc_builder_embed_buffer@@Base+0x28b>
  40edb4:	add    rsp,0x90
  40edbb:	pop    rbx
  40edbc:	ret    
  40edbd:	lea    rdi,[rip+0xb05e]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  40edc4:	lea    rsi,[rip+0x9e97]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40edcb:	lea    rcx,[rip+0xafcb]        # 419d9d <flatcc_builder_padding_base@@Base+0x13bd>
  40edd2:	mov    edx,0x2a1
  40edd7:	call   4040a0 <__assert_fail@plt>
  40eddc:	lea    rdi,[rip+0xb03f]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  40ede3:	lea    rsi,[rip+0x9e78]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40edea:	lea    rcx,[rip+0xafac]        # 419d9d <flatcc_builder_padding_base@@Base+0x13bd>
  40edf1:	mov    edx,0x2a5
  40edf6:	call   4040a0 <__assert_fail@plt>
  40edfb:	lea    rdi,[rip+0xb020]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  40ee02:	lea    rsi,[rip+0x9e59]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40ee09:	lea    rcx,[rip+0xae8f]        # 419c9f <flatcc_builder_padding_base@@Base+0x12bf>
  40ee10:	mov    edx,0x2be
  40ee15:	call   4040a0 <__assert_fail@plt>
  40ee1a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040ee20 <flatcc_builder_create_buffer@@Base>:
  40ee20:	push   rbp
  40ee21:	push   r15
  40ee23:	push   r14
  40ee25:	push   r13
  40ee27:	push   r12
  40ee29:	push   rbx
  40ee2a:	sub    rsp,0xa8
  40ee31:	mov    r12d,r9d
  40ee34:	mov    r14d,ecx
  40ee37:	mov    rbp,rsi
  40ee3a:	mov    r13,rdi
  40ee3d:	mov    WORD PTR [rsp+0xa],r8w
  40ee43:	mov    DWORD PTR [rsp+0xc],0x0
  40ee4b:	mov    r15d,r9d
  40ee4e:	and    r15d,0x1
  40ee52:	lea    rsi,[rsp+0xa]
  40ee57:	mov    ecx,r15d
  40ee5a:	call   40ed10 <flatcc_builder_embed_buffer@@Base+0x1a0>
  40ee5f:	movzx  eax,WORD PTR [rsp+0xa]
  40ee64:	cmp    WORD PTR [r13+0xe8],ax
  40ee6c:	jae    40ee76 <flatcc_builder_create_buffer@@Base+0x56>
  40ee6e:	mov    WORD PTR [r13+0xe8],ax
  40ee76:	movzx  edx,ax
  40ee79:	xor    eax,eax
  40ee7b:	test   rbp,rbp
  40ee7e:	je     40ee98 <flatcc_builder_create_buffer@@Base+0x78>
  40ee80:	mov    ecx,DWORD PTR [rbp+0x0]
  40ee83:	mov    DWORD PTR [rsp+0xc],ecx
  40ee87:	xor    edi,edi
  40ee89:	test   ecx,ecx
  40ee8b:	setne  dil
  40ee8f:	mov    rsi,rdi
  40ee92:	shl    rsi,0x2
  40ee96:	jmp    40ee9c <flatcc_builder_create_buffer@@Base+0x7c>
  40ee98:	xor    edi,edi
  40ee9a:	xor    esi,esi
  40ee9c:	lea    ecx,[r12+r12*1]
  40eea0:	and    ecx,0x4
  40eea3:	mov    ebp,DWORD PTR [r13+0xf0]
  40eeaa:	xor    ecx,0xfffffffc
  40eead:	add    ecx,ebp
  40eeaf:	sub    ecx,esi
  40eeb1:	add    edx,0xffffffff
  40eeb4:	mov    QWORD PTR [rsp+0x18],0x0
  40eebd:	mov    DWORD PTR [rsp+0x20],0x0
  40eec5:	test   r12b,0x3
  40eec9:	je     40eefc <flatcc_builder_create_buffer@@Base+0xdc>
  40eecb:	mov    QWORD PTR [rsp+0x18],0x4
  40eed4:	lea    rax,[rsp+0x10]
  40eed9:	mov    QWORD PTR [rsp+0x28],rax
  40eede:	mov    QWORD PTR [rsp+0x30],0x4
  40eee7:	mov    DWORD PTR [rsp+0x20],0x1
  40eeef:	mov    eax,0x1
  40eef4:	mov    r8d,0x8
  40eefa:	jmp    40ef02 <flatcc_builder_create_buffer@@Base+0xe2>
  40eefc:	mov    r8d,0x4
  40ef02:	and    ecx,edx
  40ef04:	mov    QWORD PTR [rsp+0x18],r8
  40ef09:	mov    edx,eax
  40ef0b:	shl    rdx,0x4
  40ef0f:	lea    rbx,[rsp+0x14]
  40ef14:	mov    QWORD PTR [rsp+rdx*1+0x28],rbx
  40ef19:	mov    QWORD PTR [rsp+rdx*1+0x30],0x4
  40ef22:	lea    edx,[rax+0x1]
  40ef25:	mov    DWORD PTR [rsp+0x20],edx
  40ef29:	test   dil,dil
  40ef2c:	je     40ef54 <flatcc_builder_create_buffer@@Base+0x134>
  40ef2e:	add    r8,rsi
  40ef31:	mov    QWORD PTR [rsp+0x18],r8
  40ef36:	mov    edx,edx
  40ef38:	shl    rdx,0x4
  40ef3c:	lea    rdi,[rsp+0xc]
  40ef41:	mov    QWORD PTR [rsp+rdx*1+0x28],rdi
  40ef46:	mov    QWORD PTR [rsp+rdx*1+0x30],rsi
  40ef4b:	or     eax,0x2
  40ef4e:	mov    DWORD PTR [rsp+0x20],eax
  40ef52:	mov    edx,eax
  40ef54:	test   ecx,ecx
  40ef56:	je     40ef80 <flatcc_builder_create_buffer@@Base+0x160>
  40ef58:	mov    eax,ecx
  40ef5a:	add    r8,rax
  40ef5d:	mov    QWORD PTR [rsp+0x18],r8
  40ef62:	mov    ecx,edx
  40ef64:	shl    rcx,0x4
  40ef68:	lea    rsi,[rip+0x9a71]        # 4189e0 <flatcc_builder_padding_base@@Base>
  40ef6f:	mov    QWORD PTR [rsp+rcx*1+0x28],rsi
  40ef74:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
  40ef79:	add    edx,0x1
  40ef7c:	mov    DWORD PTR [rsp+0x20],edx
  40ef80:	xor    eax,eax
  40ef82:	test   r12b,0x3
  40ef86:	setne  al
  40ef89:	sub    ebp,r8d
  40ef8c:	lea    eax,[rbp+rax*4+0x0]
  40ef90:	mov    ecx,r15d
  40ef93:	mov    ecx,DWORD PTR [r13+rcx*4+0xf4]
  40ef9b:	sub    ecx,eax
  40ef9d:	mov    DWORD PTR [rsp+0x10],ecx
  40efa1:	sub    r14d,eax
  40efa4:	mov    DWORD PTR [rsp+0x14],r14d
  40efa9:	cmp    r8,0x11
  40efad:	setb   al
  40efb0:	lea    rcx,[r8-0x10]
  40efb4:	shr    rcx,0x20
  40efb8:	sete   cl
  40efbb:	test   r8d,r8d
  40efbe:	jle    40eff6 <flatcc_builder_create_buffer@@Base+0x1d6>
  40efc0:	or     al,cl
  40efc2:	je     40eff6 <flatcc_builder_create_buffer@@Base+0x1d6>
  40efc4:	mov    rdi,QWORD PTR [r13+0x38]
  40efc8:	lea    rsi,[rsp+0x28]
  40efcd:	mov    ecx,ebp
  40efcf:	call   QWORD PTR [r13+0x48]
  40efd3:	test   eax,eax
  40efd5:	jne    40f015 <flatcc_builder_create_buffer@@Base+0x1f5>
  40efd7:	mov    DWORD PTR [r13+0xf0],ebp
  40efde:	test   ebp,ebp
  40efe0:	je     40f034 <flatcc_builder_create_buffer@@Base+0x214>
  40efe2:	mov    eax,ebp
  40efe4:	add    rsp,0xa8
  40efeb:	pop    rbx
  40efec:	pop    r12
  40efee:	pop    r13
  40eff0:	pop    r14
  40eff2:	pop    r15
  40eff4:	pop    rbp
  40eff5:	ret    
  40eff6:	lea    rdi,[rip+0xae25]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  40effd:	lea    rsi,[rip+0x9c5e]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f004:	lea    rcx,[rip+0xacd6]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  40f00b:	mov    edx,0x287
  40f010:	call   4040a0 <__assert_fail@plt>
  40f015:	lea    rdi,[rip+0xae06]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  40f01c:	lea    rsi,[rip+0x9c3f]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f023:	lea    rcx,[rip+0xacb7]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  40f02a:	mov    edx,0x28b
  40f02f:	call   4040a0 <__assert_fail@plt>
  40f034:	lea    rdi,[rip+0xade7]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  40f03b:	lea    rsi,[rip+0x9c20]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f042:	lea    rcx,[rip+0x9d6e]        # 418db7 <flatcc_builder_padding_base@@Base+0x3d7>
  40f049:	mov    edx,0x304
  40f04e:	call   4040a0 <__assert_fail@plt>
  40f053:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f05d:	nop    DWORD PTR [rax]

000000000040f060 <flatcc_builder_create_struct@@Base>:
  40f060:	push   rbp
  40f061:	push   r14
  40f063:	push   rbx
  40f064:	sub    rsp,0x90
  40f06b:	test   cx,cx
  40f06e:	je     40f169 <flatcc_builder_create_struct@@Base+0x109>
  40f074:	mov    rax,rdx
  40f077:	mov    r14,rdi
  40f07a:	cmp    WORD PTR [rdi+0xe8],cx
  40f081:	jae    40f08b <flatcc_builder_create_struct@@Base+0x2b>
  40f083:	mov    WORD PTR [r14+0xe8],cx
  40f08b:	mov    ebp,DWORD PTR [r14+0xf0]
  40f092:	mov    edx,ebp
  40f094:	sub    edx,eax
  40f096:	movzx  ecx,cx
  40f099:	add    ecx,0xffffffff
  40f09c:	and    ecx,edx
  40f09e:	mov    QWORD PTR [rsp],0x0
  40f0a6:	mov    DWORD PTR [rsp+0x8],0x0
  40f0ae:	test   rax,rax
  40f0b1:	je     40f142 <flatcc_builder_create_struct@@Base+0xe2>
  40f0b7:	mov    QWORD PTR [rsp],rax
  40f0bb:	mov    QWORD PTR [rsp+0x10],rsi
  40f0c0:	mov    QWORD PTR [rsp+0x18],rax
  40f0c5:	mov    DWORD PTR [rsp+0x8],0x1
  40f0cd:	mov    edx,0x1
  40f0d2:	test   ecx,ecx
  40f0d4:	je     40f0fb <flatcc_builder_create_struct@@Base+0x9b>
  40f0d6:	add    rax,rcx
  40f0d9:	mov    QWORD PTR [rsp],rax
  40f0dd:	mov    esi,edx
  40f0df:	shl    rsi,0x4
  40f0e3:	lea    rdi,[rip+0x98f6]        # 4189e0 <flatcc_builder_padding_base@@Base>
  40f0ea:	mov    QWORD PTR [rsp+rsi*1+0x10],rdi
  40f0ef:	mov    QWORD PTR [rsp+rsi*1+0x18],rcx
  40f0f4:	add    edx,0x1
  40f0f7:	mov    DWORD PTR [rsp+0x8],edx
  40f0fb:	cmp    rax,0x11
  40f0ff:	setb   cl
  40f102:	lea    rsi,[rax-0x10]
  40f106:	shr    rsi,0x20
  40f10a:	sete   bl
  40f10d:	test   eax,eax
  40f10f:	jle    40f14a <flatcc_builder_create_struct@@Base+0xea>
  40f111:	or     cl,bl
  40f113:	je     40f14a <flatcc_builder_create_struct@@Base+0xea>
  40f115:	sub    ebp,eax
  40f117:	mov    rdi,QWORD PTR [r14+0x38]
  40f11b:	lea    rsi,[rsp+0x10]
  40f120:	mov    ecx,ebp
  40f122:	mov    r8,rax
  40f125:	call   QWORD PTR [r14+0x48]
  40f129:	test   eax,eax
  40f12b:	jne    40f188 <flatcc_builder_create_struct@@Base+0x128>
  40f12d:	mov    DWORD PTR [r14+0xf0],ebp
  40f134:	mov    eax,ebp
  40f136:	add    rsp,0x90
  40f13d:	pop    rbx
  40f13e:	pop    r14
  40f140:	pop    rbp
  40f141:	ret    
  40f142:	xor    edx,edx
  40f144:	test   ecx,ecx
  40f146:	jne    40f0d6 <flatcc_builder_create_struct@@Base+0x76>
  40f148:	jmp    40f0fb <flatcc_builder_create_struct@@Base+0x9b>
  40f14a:	lea    rdi,[rip+0xacd1]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  40f151:	lea    rsi,[rip+0x9b0a]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f158:	lea    rcx,[rip+0xab82]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  40f15f:	mov    edx,0x287
  40f164:	call   4040a0 <__assert_fail@plt>
  40f169:	lea    rdi,[rip+0x9cca]        # 418e3a <flatcc_builder_padding_base@@Base+0x45a>
  40f170:	lea    rsi,[rip+0x9aeb]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f177:	lea    rcx,[rip+0x9cc7]        # 418e45 <flatcc_builder_padding_base@@Base+0x465>
  40f17e:	mov    edx,0x30f
  40f183:	call   4040a0 <__assert_fail@plt>
  40f188:	lea    rdi,[rip+0xac93]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  40f18f:	lea    rsi,[rip+0x9acc]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f196:	lea    rcx,[rip+0xab44]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  40f19d:	mov    edx,0x28b
  40f1a2:	call   4040a0 <__assert_fail@plt>
  40f1a7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040f1b0 <flatcc_builder_start_buffer@@Base>:
  40f1b0:	push   rbp
  40f1b1:	push   r15
  40f1b3:	push   r14
  40f1b5:	push   rbx
  40f1b6:	push   rax
  40f1b7:	mov    r15d,ecx
  40f1ba:	mov    ebp,edx
  40f1bc:	mov    r14,rsi
  40f1bf:	mov    rbx,rdi
  40f1c2:	movzx  esi,WORD PTR [rdi+0xe8]
  40f1c9:	call   40f290 <flatcc_builder_start_buffer@@Base+0xe0>
  40f1ce:	mov    ecx,eax
  40f1d0:	mov    eax,0xffffffff
  40f1d5:	test   ecx,ecx
  40f1d7:	jne    40f27c <flatcc_builder_start_buffer@@Base+0xcc>
  40f1dd:	mov    WORD PTR [rbx+0xe8],0x1
  40f1e6:	movzx  eax,WORD PTR [rbx+0xec]
  40f1ed:	mov    rcx,QWORD PTR [rbx+0x30]
  40f1f1:	mov    WORD PTR [rcx+0x22],ax
  40f1f5:	mov    WORD PTR [rbx+0xec],bp
  40f1fc:	movzx  eax,WORD PTR [rbx+0x10c]
  40f203:	mov    rcx,QWORD PTR [rbx+0x30]
  40f207:	mov    WORD PTR [rcx+0x20],ax
  40f20b:	mov    WORD PTR [rbx+0x10c],r15w
  40f213:	mov    eax,DWORD PTR [rbx+0xf8]
  40f219:	mov    rcx,QWORD PTR [rbx+0x30]
  40f21d:	mov    DWORD PTR [rcx+0x14],eax
  40f220:	mov    eax,DWORD PTR [rbx+0x100]
  40f226:	mov    rcx,QWORD PTR [rbx+0x30]
  40f22a:	mov    DWORD PTR [rcx+0x1c],eax
  40f22d:	mov    eax,DWORD PTR [rbx+0xf0]
  40f233:	mov    DWORD PTR [rbx+0xf8],eax
  40f239:	mov    eax,DWORD PTR [rbx+0xfc]
  40f23f:	lea    ecx,[rax+0x1]
  40f242:	mov    DWORD PTR [rbx+0xfc],ecx
  40f248:	mov    DWORD PTR [rbx+0x100],eax
  40f24e:	mov    eax,DWORD PTR [rbx+0x110]
  40f254:	mov    rcx,QWORD PTR [rbx+0x30]
  40f258:	mov    DWORD PTR [rcx+0x10],eax
  40f25b:	test   r14,r14
  40f25e:	jne    40f267 <flatcc_builder_start_buffer@@Base+0xb7>
  40f260:	lea    r14,[rip+0x9779]        # 4189e0 <flatcc_builder_padding_base@@Base>
  40f267:	mov    eax,DWORD PTR [r14]
  40f26a:	mov    DWORD PTR [rbx+0x110],eax
  40f270:	mov    rax,QWORD PTR [rbx+0x30]
  40f274:	mov    WORD PTR [rax+0xe],0x1
  40f27a:	xor    eax,eax
  40f27c:	add    rsp,0x8
  40f280:	pop    rbx
  40f281:	pop    r14
  40f283:	pop    r15
  40f285:	pop    rbp
  40f286:	ret    
  40f287:	nop    WORD PTR [rax+rax*1+0x0]
  40f290:	push   rbp
  40f291:	push   r15
  40f293:	push   r14
  40f295:	push   rbx
  40f296:	push   rax
  40f297:	mov    r14d,esi
  40f29a:	mov    rbx,rdi
  40f29d:	movsxd rbp,DWORD PTR [rdi+0x104]
  40f2a4:	lea    eax,[rbp+0x1]
  40f2a7:	mov    DWORD PTR [rdi+0x104],eax
  40f2ad:	cmp    ebp,DWORD PTR [rdi+0x108]
  40f2b3:	jge    40f2c6 <flatcc_builder_start_buffer@@Base+0x116>
  40f2b5:	mov    rax,QWORD PTR [rbx+0x30]
  40f2b9:	add    rax,0x24
  40f2bd:	mov    QWORD PTR [rbx+0x30],rax
  40f2c1:	jmp    40f35b <flatcc_builder_start_buffer@@Base+0x1ab>
  40f2c6:	mov    eax,DWORD PTR [rbx+0x120]
  40f2cc:	mov    r15d,0xffffffff
  40f2d2:	test   eax,eax
  40f2d4:	jle    40f2de <flatcc_builder_start_buffer@@Base+0x12e>
  40f2d6:	cmp    ebp,eax
  40f2d8:	jge    40f396 <flatcc_builder_start_buffer@@Base+0x1e6>
  40f2de:	shl    rbp,0x2
  40f2e2:	lea    rdx,[rbp*8+0x24]
  40f2ea:	add    rdx,rbp
  40f2ed:	cmp    rdx,QWORD PTR [rbx+0xa0]
  40f2f4:	jbe    40f314 <flatcc_builder_start_buffer@@Base+0x164>
  40f2f6:	lea    rsi,[rbx+0x98]
  40f2fd:	mov    rdi,QWORD PTR [rbx+0x40]
  40f301:	xor    ecx,ecx
  40f303:	mov    r8d,0x4
  40f309:	call   QWORD PTR [rbx+0x50]
  40f30c:	test   eax,eax
  40f30e:	jne    40f3a4 <flatcc_builder_start_buffer@@Base+0x1f4>
  40f314:	lea    rax,[rbp*8+0x0]
  40f31c:	add    rax,rbp
  40f31f:	add    rax,QWORD PTR [rbx+0x98]
  40f326:	mov    QWORD PTR [rbx+0x30],rax
  40f32a:	je     40f396 <flatcc_builder_start_buffer@@Base+0x1e6>
  40f32c:	movabs rdx,0xe38e38e38e38e38f
  40f336:	mulx   rdx,rcx,QWORD PTR [rbx+0xa0]
  40f33f:	shr    rdx,0x5
  40f343:	mov    ecx,DWORD PTR [rbx+0x120]
  40f349:	cmp    ecx,edx
  40f34b:	mov    esi,edx
  40f34d:	cmovle esi,ecx
  40f350:	test   ecx,ecx
  40f352:	cmovle esi,edx
  40f355:	mov    DWORD PTR [rbx+0x108],esi
  40f35b:	mov    ecx,DWORD PTR [rbx+0x20]
  40f35e:	mov    DWORD PTR [rax+0x8],ecx
  40f361:	movzx  edx,WORD PTR [rbx+0xea]
  40f368:	mov    WORD PTR [rax+0xc],dx
  40f36c:	mov    WORD PTR [rbx+0xea],r14w
  40f374:	mov    edx,DWORD PTR [rbx+0x28]
  40f377:	mov    DWORD PTR [rax],edx
  40f379:	mov    DWORD PTR [rax+0x4],0xfffffffc
  40f380:	lea    eax,[rcx+rdx*1]
  40f383:	add    eax,0x7
  40f386:	and    eax,0xfffffff8
  40f389:	mov    DWORD PTR [rbx+0x28],eax
  40f38c:	mov    DWORD PTR [rbx+0x20],0x0
  40f393:	xor    r15d,r15d
  40f396:	mov    eax,r15d
  40f399:	add    rsp,0x8
  40f39d:	pop    rbx
  40f39e:	pop    r14
  40f3a0:	pop    r15
  40f3a2:	pop    rbp
  40f3a3:	ret    
  40f3a4:	lea    rdi,[rip+0xaa77]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  40f3ab:	lea    rsi,[rip+0x98b0]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f3b2:	lea    rcx,[rip+0xa8a3]        # 419c5c <flatcc_builder_padding_base@@Base+0x127c>
  40f3b9:	mov    edx,0x134
  40f3be:	call   4040a0 <__assert_fail@plt>
  40f3c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f3cd:	nop    DWORD PTR [rax]

000000000040f3d0 <flatcc_builder_end_buffer@@Base>:
  40f3d0:	push   rbp
  40f3d1:	push   rbx
  40f3d2:	push   rax
  40f3d3:	mov    rcx,QWORD PTR [rdi+0x30]
  40f3d7:	movzx  ecx,WORD PTR [rcx+0xe]
  40f3db:	cmp    ecx,0x1
  40f3de:	jne    40f4de <flatcc_builder_end_buffer@@Base+0x10e>
  40f3e4:	mov    eax,esi
  40f3e6:	mov    rbx,rdi
  40f3e9:	movzx  ecx,WORD PTR [rdi+0x10c]
  40f3f0:	and    ecx,0x2
  40f3f3:	xor    r9d,r9d
  40f3f6:	cmp    DWORD PTR [rdi+0x100],0x0
  40f3fd:	setne  r9b
  40f401:	or     r9d,ecx
  40f404:	movzx  edi,WORD PTR [rdi+0xe8]
  40f40b:	movzx  ecx,WORD PTR [rbx+0xec]
  40f412:	cmp    di,cx
  40f415:	jae    40f420 <flatcc_builder_end_buffer@@Base+0x50>
  40f417:	mov    WORD PTR [rbx+0xe8],cx
  40f41e:	mov    edi,ecx
  40f420:	lea    rsi,[rbx+0x110]
  40f427:	movzx  edx,cx
  40f42a:	movzx  r8d,di
  40f42e:	mov    rdi,rbx
  40f431:	mov    ecx,eax
  40f433:	call   40ee20 <flatcc_builder_create_buffer@@Base>
  40f438:	mov    ebp,eax
  40f43a:	test   eax,eax
  40f43c:	je     40f4d5 <flatcc_builder_end_buffer@@Base+0x105>
  40f442:	mov    rax,QWORD PTR [rbx+0x30]
  40f446:	mov    ecx,DWORD PTR [rax+0x14]
  40f449:	mov    DWORD PTR [rbx+0xf8],ecx
  40f44f:	mov    ecx,DWORD PTR [rax+0x1c]
  40f452:	mov    DWORD PTR [rbx+0x100],ecx
  40f458:	mov    ecx,DWORD PTR [rax+0x10]
  40f45b:	mov    DWORD PTR [rbx+0x110],ecx
  40f461:	movzx  eax,WORD PTR [rax+0x20]
  40f465:	mov    WORD PTR [rbx+0x10c],ax
  40f46c:	mov    rdi,QWORD PTR [rbx+0x18]
  40f470:	mov    edx,DWORD PTR [rbx+0x20]
  40f473:	xor    esi,esi
  40f475:	call   4040b0 <memset@plt>
  40f47a:	mov    rax,QWORD PTR [rbx+0x30]
  40f47e:	mov    ecx,DWORD PTR [rax+0x8]
  40f481:	mov    DWORD PTR [rbx+0x20],ecx
  40f484:	mov    ecx,DWORD PTR [rax]
  40f486:	mov    DWORD PTR [rbx+0x28],ecx
  40f489:	mov    edx,DWORD PTR [rax+0x4]
  40f48c:	mov    rsi,rcx
  40f48f:	add    rsi,QWORD PTR [rbx+0x68]
  40f493:	mov    QWORD PTR [rbx+0x18],rsi
  40f497:	mov    esi,DWORD PTR [rbx+0x70]
  40f49a:	sub    esi,ecx
  40f49c:	cmp    esi,edx
  40f49e:	cmova  esi,edx
  40f4a1:	mov    DWORD PTR [rbx+0x24],esi
  40f4a4:	movzx  ecx,WORD PTR [rbx+0xea]
  40f4ab:	cmp    WORD PTR [rbx+0xe8],cx
  40f4b2:	jae    40f4bb <flatcc_builder_end_buffer@@Base+0xeb>
  40f4b4:	mov    WORD PTR [rbx+0xe8],cx
  40f4bb:	movzx  ecx,WORD PTR [rax+0xc]
  40f4bf:	mov    WORD PTR [rbx+0xea],cx
  40f4c6:	add    rax,0xffffffffffffffdc
  40f4ca:	mov    QWORD PTR [rbx+0x30],rax
  40f4ce:	add    DWORD PTR [rbx+0x104],0xffffffff
  40f4d5:	mov    eax,ebp
  40f4d7:	add    rsp,0x8
  40f4db:	pop    rbx
  40f4dc:	pop    rbp
  40f4dd:	ret    
  40f4de:	lea    rdi,[rip+0x99c6]        # 418eab <flatcc_builder_padding_base@@Base+0x4cb>
  40f4e5:	lea    rsi,[rip+0x9776]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f4ec:	lea    rcx,[rip+0x99e4]        # 418ed7 <flatcc_builder_padding_base@@Base+0x4f7>
  40f4f3:	mov    edx,0x346
  40f4f8:	call   4040a0 <__assert_fail@plt>
  40f4fd:	nop    DWORD PTR [rax]

000000000040f500 <flatcc_builder_start_struct@@Base>:
  40f500:	push   r15
  40f502:	push   r14
  40f504:	push   rbx
  40f505:	mov    r14,rsi
  40f508:	mov    rbx,rdi
  40f50b:	mov    esi,edx
  40f50d:	call   40f290 <flatcc_builder_start_buffer@@Base+0xe0>
  40f512:	test   eax,eax
  40f514:	je     40f51d <flatcc_builder_start_struct@@Base+0x1d>
  40f516:	xor    eax,eax
  40f518:	jmp    40f5b2 <flatcc_builder_start_struct@@Base+0xb2>
  40f51d:	mov    rdx,QWORD PTR [rbx+0x30]
  40f521:	mov    WORD PTR [rdx+0xe],0x2
  40f527:	mov    ecx,DWORD PTR [rbx+0x28]
  40f52a:	mov    esi,DWORD PTR [rbx+0x70]
  40f52d:	mov    rax,QWORD PTR [rbx+0x68]
  40f531:	add    rax,rcx
  40f534:	mov    QWORD PTR [rbx+0x18],rax
  40f538:	sub    esi,ecx
  40f53a:	cmp    esi,0xfffffffc
  40f53d:	mov    edi,0xfffffffc
  40f542:	cmovb  edi,esi
  40f545:	mov    DWORD PTR [rbx+0x24],edi
  40f548:	mov    DWORD PTR [rdx+0x4],0xfffffffc
  40f54f:	mov    r15d,DWORD PTR [rbx+0x20]
  40f553:	add    r14d,r15d
  40f556:	mov    DWORD PTR [rbx+0x20],r14d
  40f55a:	cmp    r14d,edi
  40f55d:	jb     40f5af <flatcc_builder_start_struct@@Base+0xaf>
  40f55f:	add    r14d,0x1
  40f563:	lea    rsi,[rbx+0x68]
  40f567:	mov    rdi,QWORD PTR [rbx+0x40]
  40f56b:	add    r14,rcx
  40f56e:	mov    ecx,0x1
  40f573:	mov    r8d,0x1
  40f579:	mov    rdx,r14
  40f57c:	call   QWORD PTR [rbx+0x50]
  40f57f:	test   eax,eax
  40f581:	jne    40f516 <flatcc_builder_start_struct@@Base+0x16>
  40f583:	mov    ecx,DWORD PTR [rbx+0x28]
  40f586:	mov    rax,rcx
  40f589:	add    rax,QWORD PTR [rbx+0x68]
  40f58d:	mov    QWORD PTR [rbx+0x18],rax
  40f591:	mov    edx,DWORD PTR [rbx+0x70]
  40f594:	sub    edx,ecx
  40f596:	cmp    edx,0xfffffffc
  40f599:	mov    ecx,0xfffffffc
  40f59e:	cmovb  ecx,edx
  40f5a1:	mov    DWORD PTR [rbx+0x24],ecx
  40f5a4:	mov    rcx,QWORD PTR [rbx+0x30]
  40f5a8:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  40f5af:	add    rax,r15
  40f5b2:	pop    rbx
  40f5b3:	pop    r14
  40f5b5:	pop    r15
  40f5b7:	ret    
  40f5b8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040f5c0 <flatcc_builder_struct_edit@@Base>:
  40f5c0:	mov    rax,QWORD PTR [rdi+0x18]
  40f5c4:	ret    
  40f5c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f5cf:	nop

000000000040f5d0 <flatcc_builder_end_struct@@Base>:
  40f5d0:	push   rbp
  40f5d1:	push   rbx
  40f5d2:	push   rax
  40f5d3:	mov    rax,QWORD PTR [rdi+0x30]
  40f5d7:	movzx  eax,WORD PTR [rax+0xe]
  40f5db:	cmp    eax,0x2
  40f5de:	jne    40f672 <flatcc_builder_end_struct@@Base+0xa2>
  40f5e4:	mov    rbx,rdi
  40f5e7:	mov    rsi,QWORD PTR [rdi+0x18]
  40f5eb:	mov    edx,DWORD PTR [rdi+0x20]
  40f5ee:	movzx  ecx,WORD PTR [rdi+0xea]
  40f5f5:	call   40f060 <flatcc_builder_create_struct@@Base>
  40f5fa:	mov    ebp,eax
  40f5fc:	test   eax,eax
  40f5fe:	je     40f669 <flatcc_builder_end_struct@@Base+0x99>
  40f600:	mov    rdi,QWORD PTR [rbx+0x18]
  40f604:	mov    edx,DWORD PTR [rbx+0x20]
  40f607:	xor    esi,esi
  40f609:	call   4040b0 <memset@plt>
  40f60e:	mov    rax,QWORD PTR [rbx+0x30]
  40f612:	mov    ecx,DWORD PTR [rax+0x8]
  40f615:	mov    DWORD PTR [rbx+0x20],ecx
  40f618:	mov    ecx,DWORD PTR [rax]
  40f61a:	mov    DWORD PTR [rbx+0x28],ecx
  40f61d:	mov    edx,DWORD PTR [rax+0x4]
  40f620:	mov    rsi,rcx
  40f623:	add    rsi,QWORD PTR [rbx+0x68]
  40f627:	mov    QWORD PTR [rbx+0x18],rsi
  40f62b:	mov    esi,DWORD PTR [rbx+0x70]
  40f62e:	sub    esi,ecx
  40f630:	cmp    esi,edx
  40f632:	cmova  esi,edx
  40f635:	mov    DWORD PTR [rbx+0x24],esi
  40f638:	movzx  ecx,WORD PTR [rbx+0xea]
  40f63f:	cmp    WORD PTR [rbx+0xe8],cx
  40f646:	jae    40f64f <flatcc_builder_end_struct@@Base+0x7f>
  40f648:	mov    WORD PTR [rbx+0xe8],cx
  40f64f:	movzx  ecx,WORD PTR [rax+0xc]
  40f653:	mov    WORD PTR [rbx+0xea],cx
  40f65a:	add    rax,0xffffffffffffffdc
  40f65e:	mov    QWORD PTR [rbx+0x30],rax
  40f662:	add    DWORD PTR [rbx+0x104],0xffffffff
  40f669:	mov    eax,ebp
  40f66b:	add    rsp,0x8
  40f66f:	pop    rbx
  40f670:	pop    rbp
  40f671:	ret    
  40f672:	lea    rdi,[rip+0x98b7]        # 418f30 <flatcc_builder_padding_base@@Base+0x550>
  40f679:	lea    rsi,[rip+0x95e2]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f680:	lea    rcx,[rip+0x98d5]        # 418f5c <flatcc_builder_padding_base@@Base+0x57c>
  40f687:	mov    edx,0x368
  40f68c:	call   4040a0 <__assert_fail@plt>
  40f691:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f69b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040f6a0 <flatcc_builder_extend_vector@@Base>:
  40f6a0:	push   r14
  40f6a2:	push   rbx
  40f6a3:	push   rax
  40f6a4:	mov    rax,QWORD PTR [rdi+0x30]
  40f6a8:	mov    ecx,DWORD PTR [rax+0x14]
  40f6ab:	add    ecx,esi
  40f6ad:	jb     40f740 <flatcc_builder_extend_vector@@Base+0xa0>
  40f6b3:	cmp    ecx,DWORD PTR [rax+0x18]
  40f6b6:	ja     40f740 <flatcc_builder_extend_vector@@Base+0xa0>
  40f6bc:	mov    rbx,rdi
  40f6bf:	mov    DWORD PTR [rax+0x14],ecx
  40f6c2:	mov    rax,QWORD PTR [rdi+0x30]
  40f6c6:	imul   esi,DWORD PTR [rax+0x10]
  40f6ca:	mov    r14d,DWORD PTR [rdi+0x20]
  40f6ce:	add    esi,r14d
  40f6d1:	mov    DWORD PTR [rdi+0x20],esi
  40f6d4:	cmp    esi,DWORD PTR [rdi+0x24]
  40f6d7:	jae    40f6df <flatcc_builder_extend_vector@@Base+0x3f>
  40f6d9:	mov    rax,QWORD PTR [rbx+0x18]
  40f6dd:	jmp    40f735 <flatcc_builder_extend_vector@@Base+0x95>
  40f6df:	add    esi,0x1
  40f6e2:	lea    rax,[rbx+0x68]
  40f6e6:	mov    rdi,QWORD PTR [rbx+0x40]
  40f6ea:	mov    edx,DWORD PTR [rbx+0x28]
  40f6ed:	add    rdx,rsi
  40f6f0:	mov    ecx,0x1
  40f6f5:	mov    r8d,0x1
  40f6fb:	mov    rsi,rax
  40f6fe:	call   QWORD PTR [rbx+0x50]
  40f701:	test   eax,eax
  40f703:	je     40f709 <flatcc_builder_extend_vector@@Base+0x69>
  40f705:	xor    eax,eax
  40f707:	jmp    40f738 <flatcc_builder_extend_vector@@Base+0x98>
  40f709:	mov    ecx,DWORD PTR [rbx+0x28]
  40f70c:	mov    rax,rcx
  40f70f:	add    rax,QWORD PTR [rbx+0x68]
  40f713:	mov    QWORD PTR [rbx+0x18],rax
  40f717:	mov    edx,DWORD PTR [rbx+0x70]
  40f71a:	sub    edx,ecx
  40f71c:	cmp    edx,0xfffffffc
  40f71f:	mov    ecx,0xfffffffc
  40f724:	cmovb  ecx,edx
  40f727:	mov    DWORD PTR [rbx+0x24],ecx
  40f72a:	mov    rcx,QWORD PTR [rbx+0x30]
  40f72e:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  40f735:	add    rax,r14
  40f738:	add    rsp,0x8
  40f73c:	pop    rbx
  40f73d:	pop    r14
  40f73f:	ret    
  40f740:	lea    rdi,[rip+0xa5e4]        # 419d2b <flatcc_builder_padding_base@@Base+0x134b>
  40f747:	lea    rsi,[rip+0x9514]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f74e:	lea    rcx,[rip+0xa5f1]        # 419d46 <flatcc_builder_padding_base@@Base+0x1366>
  40f755:	mov    edx,0x37c
  40f75a:	call   4040a0 <__assert_fail@plt>
  40f75f:	nop

000000000040f760 <flatcc_builder_vector_push@@Base>:
  40f760:	push   r15
  40f762:	push   r14
  40f764:	push   r13
  40f766:	push   r12
  40f768:	push   rbx
  40f769:	mov    rax,QWORD PTR [rdi+0x30]
  40f76d:	movzx  ecx,WORD PTR [rax+0xe]
  40f771:	cmp    ecx,0x4
  40f774:	jne    40f829 <flatcc_builder_vector_push@@Base+0xc9>
  40f77a:	mov    ecx,DWORD PTR [rax+0x14]
  40f77d:	cmp    ecx,DWORD PTR [rax+0x18]
  40f780:	ja     40f848 <flatcc_builder_vector_push@@Base+0xe8>
  40f786:	mov    r14,rsi
  40f789:	mov    rbx,rdi
  40f78c:	add    ecx,0x1
  40f78f:	mov    DWORD PTR [rax+0x14],ecx
  40f792:	mov    rax,QWORD PTR [rdi+0x30]
  40f796:	mov    r15d,DWORD PTR [rax+0x10]
  40f79a:	mov    r13d,DWORD PTR [rdi+0x20]
  40f79e:	lea    eax,[r15+r13*1]
  40f7a2:	mov    DWORD PTR [rdi+0x20],eax
  40f7a5:	cmp    eax,DWORD PTR [rdi+0x24]
  40f7a8:	jae    40f7b5 <flatcc_builder_vector_push@@Base+0x55>
  40f7aa:	mov    r12,QWORD PTR [rbx+0x18]
  40f7ae:	add    r12,r13
  40f7b1:	jne    40f80e <flatcc_builder_vector_push@@Base+0xae>
  40f7b3:	jmp    40f7d8 <flatcc_builder_vector_push@@Base+0x78>
  40f7b5:	add    eax,0x1
  40f7b8:	lea    rsi,[rbx+0x68]
  40f7bc:	mov    rdi,QWORD PTR [rbx+0x40]
  40f7c0:	mov    edx,DWORD PTR [rbx+0x28]
  40f7c3:	add    rdx,rax
  40f7c6:	mov    ecx,0x1
  40f7cb:	mov    r8d,0x1
  40f7d1:	call   QWORD PTR [rbx+0x50]
  40f7d4:	test   eax,eax
  40f7d6:	je     40f7dd <flatcc_builder_vector_push@@Base+0x7d>
  40f7d8:	xor    r12d,r12d
  40f7db:	jmp    40f81c <flatcc_builder_vector_push@@Base+0xbc>
  40f7dd:	mov    eax,DWORD PTR [rbx+0x28]
  40f7e0:	mov    r12,rax
  40f7e3:	add    r12,QWORD PTR [rbx+0x68]
  40f7e7:	mov    QWORD PTR [rbx+0x18],r12
  40f7eb:	mov    ecx,DWORD PTR [rbx+0x70]
  40f7ee:	sub    ecx,eax
  40f7f0:	cmp    ecx,0xfffffffc
  40f7f3:	mov    eax,0xfffffffc
  40f7f8:	cmovb  eax,ecx
  40f7fb:	mov    DWORD PTR [rbx+0x24],eax
  40f7fe:	mov    rax,QWORD PTR [rbx+0x30]
  40f802:	mov    DWORD PTR [rax+0x4],0xfffffffc
  40f809:	add    r12,r13
  40f80c:	je     40f7d8 <flatcc_builder_vector_push@@Base+0x78>
  40f80e:	mov    rdi,r12
  40f811:	mov    rsi,r14
  40f814:	mov    rdx,r15
  40f817:	call   404110 <memcpy@plt>
  40f81c:	mov    rax,r12
  40f81f:	pop    rbx
  40f820:	pop    r12
  40f822:	pop    r13
  40f824:	pop    r14
  40f826:	pop    r15
  40f828:	ret    
  40f829:	lea    rdi,[rip+0x976f]        # 418f9f <flatcc_builder_padding_base@@Base+0x5bf>
  40f830:	lea    rsi,[rip+0x942b]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f837:	lea    rcx,[rip+0x978d]        # 418fcb <flatcc_builder_padding_base@@Base+0x5eb>
  40f83e:	mov    edx,0x38b
  40f843:	call   4040a0 <__assert_fail@plt>
  40f848:	lea    rdi,[rip+0x97bf]        # 41900e <flatcc_builder_padding_base@@Base+0x62e>
  40f84f:	lea    rsi,[rip+0x940c]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f856:	lea    rcx,[rip+0x976e]        # 418fcb <flatcc_builder_padding_base@@Base+0x5eb>
  40f85d:	mov    edx,0x38c
  40f862:	call   4040a0 <__assert_fail@plt>
  40f867:	nop    WORD PTR [rax+rax*1+0x0]

000000000040f870 <flatcc_builder_append_vector@@Base>:
  40f870:	push   r15
  40f872:	push   r14
  40f874:	push   r13
  40f876:	push   r12
  40f878:	push   rbx
  40f879:	mov    rax,QWORD PTR [rdi+0x30]
  40f87d:	movzx  ecx,WORD PTR [rax+0xe]
  40f881:	cmp    ecx,0x4
  40f884:	jne    40f962 <flatcc_builder_append_vector@@Base+0xf2>
  40f88a:	mov    r15,rdx
  40f88d:	mov    ecx,DWORD PTR [rax+0x14]
  40f890:	add    ecx,r15d
  40f893:	jb     40f943 <flatcc_builder_append_vector@@Base+0xd3>
  40f899:	cmp    ecx,DWORD PTR [rax+0x18]
  40f89c:	ja     40f943 <flatcc_builder_append_vector@@Base+0xd3>
  40f8a2:	mov    r14,rsi
  40f8a5:	mov    rbx,rdi
  40f8a8:	mov    DWORD PTR [rax+0x14],ecx
  40f8ab:	mov    rax,QWORD PTR [rdi+0x30]
  40f8af:	imul   r15d,DWORD PTR [rax+0x10]
  40f8b4:	mov    r13d,DWORD PTR [rdi+0x20]
  40f8b8:	lea    eax,[r15+r13*1]
  40f8bc:	mov    DWORD PTR [rdi+0x20],eax
  40f8bf:	cmp    eax,DWORD PTR [rdi+0x24]
  40f8c2:	jae    40f8cf <flatcc_builder_append_vector@@Base+0x5f>
  40f8c4:	mov    r12,QWORD PTR [rbx+0x18]
  40f8c8:	add    r12,r13
  40f8cb:	jne    40f928 <flatcc_builder_append_vector@@Base+0xb8>
  40f8cd:	jmp    40f8f2 <flatcc_builder_append_vector@@Base+0x82>
  40f8cf:	add    eax,0x1
  40f8d2:	lea    rsi,[rbx+0x68]
  40f8d6:	mov    rdi,QWORD PTR [rbx+0x40]
  40f8da:	mov    edx,DWORD PTR [rbx+0x28]
  40f8dd:	add    rdx,rax
  40f8e0:	mov    ecx,0x1
  40f8e5:	mov    r8d,0x1
  40f8eb:	call   QWORD PTR [rbx+0x50]
  40f8ee:	test   eax,eax
  40f8f0:	je     40f8f7 <flatcc_builder_append_vector@@Base+0x87>
  40f8f2:	xor    r12d,r12d
  40f8f5:	jmp    40f936 <flatcc_builder_append_vector@@Base+0xc6>
  40f8f7:	mov    eax,DWORD PTR [rbx+0x28]
  40f8fa:	mov    r12,rax
  40f8fd:	add    r12,QWORD PTR [rbx+0x68]
  40f901:	mov    QWORD PTR [rbx+0x18],r12
  40f905:	mov    ecx,DWORD PTR [rbx+0x70]
  40f908:	sub    ecx,eax
  40f90a:	cmp    ecx,0xfffffffc
  40f90d:	mov    eax,0xfffffffc
  40f912:	cmovb  eax,ecx
  40f915:	mov    DWORD PTR [rbx+0x24],eax
  40f918:	mov    rax,QWORD PTR [rbx+0x30]
  40f91c:	mov    DWORD PTR [rax+0x4],0xfffffffc
  40f923:	add    r12,r13
  40f926:	je     40f8f2 <flatcc_builder_append_vector@@Base+0x82>
  40f928:	mov    edx,r15d
  40f92b:	mov    rdi,r12
  40f92e:	mov    rsi,r14
  40f931:	call   404110 <memcpy@plt>
  40f936:	mov    rax,r12
  40f939:	pop    rbx
  40f93a:	pop    r12
  40f93c:	pop    r13
  40f93e:	pop    r14
  40f940:	pop    r15
  40f942:	ret    
  40f943:	lea    rdi,[rip+0xa3e1]        # 419d2b <flatcc_builder_padding_base@@Base+0x134b>
  40f94a:	lea    rsi,[rip+0x9311]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f951:	lea    rcx,[rip+0xa3ee]        # 419d46 <flatcc_builder_padding_base@@Base+0x1366>
  40f958:	mov    edx,0x37c
  40f95d:	call   4040a0 <__assert_fail@plt>
  40f962:	lea    rdi,[rip+0x9636]        # 418f9f <flatcc_builder_padding_base@@Base+0x5bf>
  40f969:	lea    rsi,[rip+0x92f2]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40f970:	lea    rcx,[rip+0x96d4]        # 41904b <flatcc_builder_padding_base@@Base+0x66b>
  40f977:	mov    edx,0x393
  40f97c:	call   4040a0 <__assert_fail@plt>
  40f981:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f98b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040f990 <flatcc_builder_extend_offset_vector@@Base>:
  40f990:	push   r14
  40f992:	push   rbx
  40f993:	push   rax
  40f994:	mov    rax,QWORD PTR [rdi+0x30]
  40f998:	mov    ecx,DWORD PTR [rax+0x14]
  40f99b:	add    ecx,esi
  40f99d:	jb     40fa25 <flatcc_builder_extend_offset_vector@@Base+0x95>
  40f9a3:	cmp    ecx,0x40000000
  40f9a9:	jae    40fa25 <flatcc_builder_extend_offset_vector@@Base+0x95>
  40f9ab:	mov    rbx,rdi
  40f9ae:	mov    DWORD PTR [rax+0x14],ecx
  40f9b1:	mov    r14d,DWORD PTR [rdi+0x20]
  40f9b5:	lea    eax,[r14+rsi*4]
  40f9b9:	mov    DWORD PTR [rdi+0x20],eax
  40f9bc:	cmp    eax,DWORD PTR [rdi+0x24]
  40f9bf:	jae    40f9c7 <flatcc_builder_extend_offset_vector@@Base+0x37>
  40f9c1:	mov    rax,QWORD PTR [rbx+0x18]
  40f9c5:	jmp    40fa1a <flatcc_builder_extend_offset_vector@@Base+0x8a>
  40f9c7:	add    eax,0x1
  40f9ca:	lea    rsi,[rbx+0x68]
  40f9ce:	mov    rdi,QWORD PTR [rbx+0x40]
  40f9d2:	mov    edx,DWORD PTR [rbx+0x28]
  40f9d5:	add    rdx,rax
  40f9d8:	mov    ecx,0x1
  40f9dd:	mov    r8d,0x1
  40f9e3:	call   QWORD PTR [rbx+0x50]
  40f9e6:	test   eax,eax
  40f9e8:	je     40f9ee <flatcc_builder_extend_offset_vector@@Base+0x5e>
  40f9ea:	xor    eax,eax
  40f9ec:	jmp    40fa1d <flatcc_builder_extend_offset_vector@@Base+0x8d>
  40f9ee:	mov    ecx,DWORD PTR [rbx+0x28]
  40f9f1:	mov    rax,rcx
  40f9f4:	add    rax,QWORD PTR [rbx+0x68]
  40f9f8:	mov    QWORD PTR [rbx+0x18],rax
  40f9fc:	mov    edx,DWORD PTR [rbx+0x70]
  40f9ff:	sub    edx,ecx
  40fa01:	cmp    edx,0xfffffffc
  40fa04:	mov    ecx,0xfffffffc
  40fa09:	cmovb  ecx,edx
  40fa0c:	mov    DWORD PTR [rbx+0x24],ecx
  40fa0f:	mov    rcx,QWORD PTR [rbx+0x30]
  40fa13:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  40fa1a:	add    rax,r14
  40fa1d:	add    rsp,0x8
  40fa21:	pop    rbx
  40fa22:	pop    r14
  40fa24:	ret    
  40fa25:	lea    rdi,[rip+0xa2ff]        # 419d2b <flatcc_builder_padding_base@@Base+0x134b>
  40fa2c:	lea    rsi,[rip+0x922f]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40fa33:	lea    rcx,[rip+0xa30c]        # 419d46 <flatcc_builder_padding_base@@Base+0x1366>
  40fa3a:	mov    edx,0x37c
  40fa3f:	call   4040a0 <__assert_fail@plt>
  40fa44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fa4e:	xchg   ax,ax

000000000040fa50 <flatcc_builder_offset_vector_push@@Base>:
  40fa50:	push   rbp
  40fa51:	push   r14
  40fa53:	push   rbx
  40fa54:	mov    rax,QWORD PTR [rdi+0x30]
  40fa58:	movzx  ecx,WORD PTR [rax+0xe]
  40fa5c:	cmp    ecx,0x5
  40fa5f:	jne    40faf5 <flatcc_builder_offset_vector_push@@Base+0xa5>
  40fa65:	mov    ecx,DWORD PTR [rax+0x14]
  40fa68:	cmp    ecx,0x3fffffff
  40fa6e:	je     40fab8 <flatcc_builder_offset_vector_push@@Base+0x68>
  40fa70:	mov    r14d,esi
  40fa73:	mov    rbx,rdi
  40fa76:	add    ecx,0x1
  40fa79:	mov    DWORD PTR [rax+0x14],ecx
  40fa7c:	mov    ebp,DWORD PTR [rdi+0x20]
  40fa7f:	lea    eax,[rbp+0x4]
  40fa82:	mov    DWORD PTR [rdi+0x20],eax
  40fa85:	cmp    eax,DWORD PTR [rdi+0x24]
  40fa88:	jae    40fa95 <flatcc_builder_offset_vector_push@@Base+0x45>
  40fa8a:	mov    rax,QWORD PTR [rbx+0x18]
  40fa8e:	add    rax,rbp
  40fa91:	jne    40faed <flatcc_builder_offset_vector_push@@Base+0x9d>
  40fa93:	jmp    40fab8 <flatcc_builder_offset_vector_push@@Base+0x68>
  40fa95:	lea    eax,[rbp+0x5]
  40fa98:	lea    rsi,[rbx+0x68]
  40fa9c:	mov    rdi,QWORD PTR [rbx+0x40]
  40faa0:	mov    edx,DWORD PTR [rbx+0x28]
  40faa3:	add    rdx,rax
  40faa6:	mov    ecx,0x1
  40faab:	mov    r8d,0x1
  40fab1:	call   QWORD PTR [rbx+0x50]
  40fab4:	test   eax,eax
  40fab6:	je     40fabc <flatcc_builder_offset_vector_push@@Base+0x6c>
  40fab8:	xor    eax,eax
  40faba:	jmp    40faf0 <flatcc_builder_offset_vector_push@@Base+0xa0>
  40fabc:	mov    ecx,DWORD PTR [rbx+0x28]
  40fabf:	mov    rax,rcx
  40fac2:	add    rax,QWORD PTR [rbx+0x68]
  40fac6:	mov    QWORD PTR [rbx+0x18],rax
  40faca:	mov    edx,DWORD PTR [rbx+0x70]
  40facd:	sub    edx,ecx
  40facf:	cmp    edx,0xfffffffc
  40fad2:	mov    ecx,0xfffffffc
  40fad7:	cmovb  ecx,edx
  40fada:	mov    DWORD PTR [rbx+0x24],ecx
  40fadd:	mov    rcx,QWORD PTR [rbx+0x30]
  40fae1:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  40fae8:	add    rax,rbp
  40faeb:	je     40fab8 <flatcc_builder_offset_vector_push@@Base+0x68>
  40faed:	mov    DWORD PTR [rax],r14d
  40faf0:	pop    rbx
  40faf1:	pop    r14
  40faf3:	pop    rbp
  40faf4:	ret    
  40faf5:	lea    rdi,[rip+0x959c]        # 419098 <flatcc_builder_padding_base@@Base+0x6b8>
  40fafc:	lea    rsi,[rip+0x915f]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40fb03:	lea    rcx,[rip+0x95c1]        # 4190cb <flatcc_builder_padding_base@@Base+0x6eb>
  40fb0a:	mov    edx,0x3a6
  40fb0f:	call   4040a0 <__assert_fail@plt>
  40fb14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb1e:	xchg   ax,ax

000000000040fb20 <flatcc_builder_append_offset_vector@@Base>:
  40fb20:	push   r15
  40fb22:	push   r14
  40fb24:	push   r13
  40fb26:	push   r12
  40fb28:	push   rbx
  40fb29:	mov    rax,QWORD PTR [rdi+0x30]
  40fb2d:	movzx  ecx,WORD PTR [rax+0xe]
  40fb31:	cmp    ecx,0x5
  40fb34:	jne    40fc11 <flatcc_builder_append_offset_vector@@Base+0xf1>
  40fb3a:	mov    r15,rdx
  40fb3d:	mov    ecx,DWORD PTR [rax+0x14]
  40fb40:	add    ecx,r15d
  40fb43:	jb     40fbf2 <flatcc_builder_append_offset_vector@@Base+0xd2>
  40fb49:	cmp    ecx,0x40000000
  40fb4f:	jae    40fbf2 <flatcc_builder_append_offset_vector@@Base+0xd2>
  40fb55:	mov    r14,rsi
  40fb58:	mov    rbx,rdi
  40fb5b:	mov    DWORD PTR [rax+0x14],ecx
  40fb5e:	mov    r13d,DWORD PTR [rdi+0x20]
  40fb62:	lea    eax,[r13+r15*4+0x0]
  40fb67:	mov    DWORD PTR [rdi+0x20],eax
  40fb6a:	cmp    eax,DWORD PTR [rdi+0x24]
  40fb6d:	jae    40fb7a <flatcc_builder_append_offset_vector@@Base+0x5a>
  40fb6f:	mov    r12,QWORD PTR [rbx+0x18]
  40fb73:	add    r12,r13
  40fb76:	jne    40fbd3 <flatcc_builder_append_offset_vector@@Base+0xb3>
  40fb78:	jmp    40fb9d <flatcc_builder_append_offset_vector@@Base+0x7d>
  40fb7a:	add    eax,0x1
  40fb7d:	lea    rsi,[rbx+0x68]
  40fb81:	mov    rdi,QWORD PTR [rbx+0x40]
  40fb85:	mov    edx,DWORD PTR [rbx+0x28]
  40fb88:	add    rdx,rax
  40fb8b:	mov    ecx,0x1
  40fb90:	mov    r8d,0x1
  40fb96:	call   QWORD PTR [rbx+0x50]
  40fb99:	test   eax,eax
  40fb9b:	je     40fba2 <flatcc_builder_append_offset_vector@@Base+0x82>
  40fb9d:	xor    r12d,r12d
  40fba0:	jmp    40fbe5 <flatcc_builder_append_offset_vector@@Base+0xc5>
  40fba2:	mov    eax,DWORD PTR [rbx+0x28]
  40fba5:	mov    r12,rax
  40fba8:	add    r12,QWORD PTR [rbx+0x68]
  40fbac:	mov    QWORD PTR [rbx+0x18],r12
  40fbb0:	mov    ecx,DWORD PTR [rbx+0x70]
  40fbb3:	sub    ecx,eax
  40fbb5:	cmp    ecx,0xfffffffc
  40fbb8:	mov    eax,0xfffffffc
  40fbbd:	cmovb  eax,ecx
  40fbc0:	mov    DWORD PTR [rbx+0x24],eax
  40fbc3:	mov    rax,QWORD PTR [rbx+0x30]
  40fbc7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  40fbce:	add    r12,r13
  40fbd1:	je     40fb9d <flatcc_builder_append_offset_vector@@Base+0x7d>
  40fbd3:	shl    r15d,0x2
  40fbd7:	mov    edx,r15d
  40fbda:	mov    rdi,r12
  40fbdd:	mov    rsi,r14
  40fbe0:	call   404110 <memcpy@plt>
  40fbe5:	mov    rax,r12
  40fbe8:	pop    rbx
  40fbe9:	pop    r12
  40fbeb:	pop    r13
  40fbed:	pop    r14
  40fbef:	pop    r15
  40fbf1:	ret    
  40fbf2:	lea    rdi,[rip+0xa132]        # 419d2b <flatcc_builder_padding_base@@Base+0x134b>
  40fbf9:	lea    rsi,[rip+0x9062]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40fc00:	lea    rcx,[rip+0xa13f]        # 419d46 <flatcc_builder_padding_base@@Base+0x1366>
  40fc07:	mov    edx,0x37c
  40fc0c:	call   4040a0 <__assert_fail@plt>
  40fc11:	lea    rdi,[rip+0x9480]        # 419098 <flatcc_builder_padding_base@@Base+0x6b8>
  40fc18:	lea    rsi,[rip+0x9043]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40fc1f:	lea    rcx,[rip+0x9507]        # 41912d <flatcc_builder_padding_base@@Base+0x74d>
  40fc26:	mov    edx,0x3b4
  40fc2b:	call   4040a0 <__assert_fail@plt>

000000000040fc30 <flatcc_builder_extend_string@@Base>:
  40fc30:	push   r14
  40fc32:	push   rbx
  40fc33:	push   rax
  40fc34:	mov    rax,QWORD PTR [rdi+0x30]
  40fc38:	movzx  ecx,WORD PTR [rax+0xe]
  40fc3c:	cmp    ecx,0x6
  40fc3f:	jne    40fccc <flatcc_builder_extend_string@@Base+0x9c>
  40fc45:	mov    ecx,DWORD PTR [rax+0x14]
  40fc48:	add    ecx,esi
  40fc4a:	jb     40fceb <flatcc_builder_extend_string@@Base+0xbb>
  40fc50:	mov    rbx,rdi
  40fc53:	mov    DWORD PTR [rax+0x14],ecx
  40fc56:	mov    r14d,DWORD PTR [rdi+0x20]
  40fc5a:	add    esi,r14d
  40fc5d:	mov    DWORD PTR [rdi+0x20],esi
  40fc60:	cmp    esi,DWORD PTR [rdi+0x24]
  40fc63:	jae    40fc6b <flatcc_builder_extend_string@@Base+0x3b>
  40fc65:	mov    rax,QWORD PTR [rbx+0x18]
  40fc69:	jmp    40fcc1 <flatcc_builder_extend_string@@Base+0x91>
  40fc6b:	add    esi,0x1
  40fc6e:	lea    rax,[rbx+0x68]
  40fc72:	mov    rdi,QWORD PTR [rbx+0x40]
  40fc76:	mov    edx,DWORD PTR [rbx+0x28]
  40fc79:	add    rdx,rsi
  40fc7c:	mov    ecx,0x1
  40fc81:	mov    r8d,0x1
  40fc87:	mov    rsi,rax
  40fc8a:	call   QWORD PTR [rbx+0x50]
  40fc8d:	test   eax,eax
  40fc8f:	je     40fc95 <flatcc_builder_extend_string@@Base+0x65>
  40fc91:	xor    eax,eax
  40fc93:	jmp    40fcc4 <flatcc_builder_extend_string@@Base+0x94>
  40fc95:	mov    ecx,DWORD PTR [rbx+0x28]
  40fc98:	mov    rax,rcx
  40fc9b:	add    rax,QWORD PTR [rbx+0x68]
  40fc9f:	mov    QWORD PTR [rbx+0x18],rax
  40fca3:	mov    edx,DWORD PTR [rbx+0x70]
  40fca6:	sub    edx,ecx
  40fca8:	cmp    edx,0xfffffffc
  40fcab:	mov    ecx,0xfffffffc
  40fcb0:	cmovb  ecx,edx
  40fcb3:	mov    DWORD PTR [rbx+0x24],ecx
  40fcb6:	mov    rcx,QWORD PTR [rbx+0x30]
  40fcba:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  40fcc1:	add    rax,r14
  40fcc4:	add    rsp,0x8
  40fcc8:	pop    rbx
  40fcc9:	pop    r14
  40fccb:	ret    
  40fccc:	lea    rdi,[rip+0x94ce]        # 4191a1 <flatcc_builder_padding_base@@Base+0x7c1>
  40fcd3:	lea    rsi,[rip+0x8f88]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40fcda:	lea    rcx,[rip+0x94ec]        # 4191cd <flatcc_builder_padding_base@@Base+0x7ed>
  40fce1:	mov    edx,0x3bd
  40fce6:	call   4040a0 <__assert_fail@plt>
  40fceb:	lea    rdi,[rip+0xa039]        # 419d2b <flatcc_builder_padding_base@@Base+0x134b>
  40fcf2:	lea    rsi,[rip+0x8f69]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40fcf9:	lea    rcx,[rip+0xa046]        # 419d46 <flatcc_builder_padding_base@@Base+0x1366>
  40fd00:	mov    edx,0x37c
  40fd05:	call   4040a0 <__assert_fail@plt>
  40fd0a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040fd10 <flatcc_builder_append_string@@Base>:
  40fd10:	push   r15
  40fd12:	push   r14
  40fd14:	push   r13
  40fd16:	push   r12
  40fd18:	push   rbx
  40fd19:	mov    rax,QWORD PTR [rdi+0x30]
  40fd1d:	movzx  ecx,WORD PTR [rax+0xe]
  40fd21:	cmp    ecx,0x6
  40fd24:	jne    40fdd1 <flatcc_builder_append_string@@Base+0xc1>
  40fd2a:	mov    r15,rdx
  40fd2d:	mov    ecx,DWORD PTR [rax+0x14]
  40fd30:	add    ecx,r15d
  40fd33:	jb     40fdf0 <flatcc_builder_append_string@@Base+0xe0>
  40fd39:	mov    r14,rsi
  40fd3c:	mov    rbx,rdi
  40fd3f:	mov    DWORD PTR [rax+0x14],ecx
  40fd42:	mov    r13d,DWORD PTR [rdi+0x20]
  40fd46:	lea    eax,[r15+r13*1]
  40fd4a:	mov    DWORD PTR [rdi+0x20],eax
  40fd4d:	cmp    eax,DWORD PTR [rdi+0x24]
  40fd50:	jae    40fd5d <flatcc_builder_append_string@@Base+0x4d>
  40fd52:	mov    r12,QWORD PTR [rbx+0x18]
  40fd56:	add    r12,r13
  40fd59:	jne    40fdb6 <flatcc_builder_append_string@@Base+0xa6>
  40fd5b:	jmp    40fd80 <flatcc_builder_append_string@@Base+0x70>
  40fd5d:	add    eax,0x1
  40fd60:	lea    rsi,[rbx+0x68]
  40fd64:	mov    rdi,QWORD PTR [rbx+0x40]
  40fd68:	mov    edx,DWORD PTR [rbx+0x28]
  40fd6b:	add    rdx,rax
  40fd6e:	mov    ecx,0x1
  40fd73:	mov    r8d,0x1
  40fd79:	call   QWORD PTR [rbx+0x50]
  40fd7c:	test   eax,eax
  40fd7e:	je     40fd85 <flatcc_builder_append_string@@Base+0x75>
  40fd80:	xor    r12d,r12d
  40fd83:	jmp    40fdc4 <flatcc_builder_append_string@@Base+0xb4>
  40fd85:	mov    eax,DWORD PTR [rbx+0x28]
  40fd88:	mov    r12,rax
  40fd8b:	add    r12,QWORD PTR [rbx+0x68]
  40fd8f:	mov    QWORD PTR [rbx+0x18],r12
  40fd93:	mov    ecx,DWORD PTR [rbx+0x70]
  40fd96:	sub    ecx,eax
  40fd98:	cmp    ecx,0xfffffffc
  40fd9b:	mov    eax,0xfffffffc
  40fda0:	cmovb  eax,ecx
  40fda3:	mov    DWORD PTR [rbx+0x24],eax
  40fda6:	mov    rax,QWORD PTR [rbx+0x30]
  40fdaa:	mov    DWORD PTR [rax+0x4],0xfffffffc
  40fdb1:	add    r12,r13
  40fdb4:	je     40fd80 <flatcc_builder_append_string@@Base+0x70>
  40fdb6:	mov    edx,r15d
  40fdb9:	mov    rdi,r12
  40fdbc:	mov    rsi,r14
  40fdbf:	call   404110 <memcpy@plt>
  40fdc4:	mov    rax,r12
  40fdc7:	pop    rbx
  40fdc8:	pop    r12
  40fdca:	pop    r13
  40fdcc:	pop    r14
  40fdce:	pop    r15
  40fdd0:	ret    
  40fdd1:	lea    rdi,[rip+0x93c9]        # 4191a1 <flatcc_builder_padding_base@@Base+0x7c1>
  40fdd8:	lea    rsi,[rip+0x8e83]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40fddf:	lea    rcx,[rip+0x9426]        # 41920c <flatcc_builder_padding_base@@Base+0x82c>
  40fde6:	mov    edx,0x3c6
  40fdeb:	call   4040a0 <__assert_fail@plt>
  40fdf0:	lea    rdi,[rip+0x9f34]        # 419d2b <flatcc_builder_padding_base@@Base+0x134b>
  40fdf7:	lea    rsi,[rip+0x8e64]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40fdfe:	lea    rcx,[rip+0x9f41]        # 419d46 <flatcc_builder_padding_base@@Base+0x1366>
  40fe05:	mov    edx,0x37c
  40fe0a:	call   4040a0 <__assert_fail@plt>
  40fe0f:	nop

000000000040fe10 <flatcc_builder_append_string_str@@Base>:
  40fe10:	push   r14
  40fe12:	push   rbx
  40fe13:	push   rax
  40fe14:	mov    rbx,rsi
  40fe17:	mov    r14,rdi
  40fe1a:	mov    rdi,rsi
  40fe1d:	call   404070 <strlen@plt>
  40fe22:	mov    rdi,r14
  40fe25:	mov    rsi,rbx
  40fe28:	mov    rdx,rax
  40fe2b:	add    rsp,0x8
  40fe2f:	pop    rbx
  40fe30:	pop    r14
  40fe32:	jmp    40fd10 <flatcc_builder_append_string@@Base>
  40fe37:	nop    WORD PTR [rax+rax*1+0x0]

000000000040fe40 <flatcc_builder_append_string_strn@@Base>:
  40fe40:	push   r15
  40fe42:	push   r14
  40fe44:	push   rbx
  40fe45:	mov    rbx,rdx
  40fe48:	mov    r14,rsi
  40fe4b:	mov    r15,rdi
  40fe4e:	xor    esi,esi
  40fe50:	mov    rdi,r14
  40fe53:	call   4040d0 <memchr@plt>
  40fe58:	mov    rcx,rax
  40fe5b:	sub    rcx,r14
  40fe5e:	test   rax,rax
  40fe61:	cmovne rbx,rcx
  40fe65:	mov    rdi,r15
  40fe68:	mov    rsi,r14
  40fe6b:	mov    rdx,rbx
  40fe6e:	pop    rbx
  40fe6f:	pop    r14
  40fe71:	pop    r15
  40fe73:	jmp    40fd10 <flatcc_builder_append_string@@Base>
  40fe78:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040fe80 <flatcc_builder_truncate_vector@@Base>:
  40fe80:	push   rax
  40fe81:	mov    rcx,QWORD PTR [rdi+0x30]
  40fe85:	movzx  edx,WORD PTR [rcx+0xe]
  40fe89:	cmp    edx,0x4
  40fe8c:	jne    40fec3 <flatcc_builder_truncate_vector@@Base+0x43>
  40fe8e:	mov    rax,rsi
  40fe91:	mov    edx,DWORD PTR [rcx+0x14]
  40fe94:	cmp    rdx,rsi
  40fe97:	jb     40fee2 <flatcc_builder_truncate_vector@@Base+0x62>
  40fe99:	sub    edx,eax
  40fe9b:	mov    DWORD PTR [rcx+0x14],edx
  40fe9e:	mov    rcx,QWORD PTR [rdi+0x30]
  40fea2:	imul   eax,DWORD PTR [rcx+0x10]
  40fea6:	mov    ecx,DWORD PTR [rdi+0x20]
  40fea9:	sub    ecx,eax
  40feab:	mov    DWORD PTR [rdi+0x20],ecx
  40feae:	add    rcx,QWORD PTR [rdi+0x18]
  40feb2:	xor    esi,esi
  40feb4:	mov    rdi,rcx
  40feb7:	mov    rdx,rax
  40feba:	call   4040b0 <memset@plt>
  40febf:	xor    eax,eax
  40fec1:	pop    rcx
  40fec2:	ret    
  40fec3:	lea    rdi,[rip+0x90d5]        # 418f9f <flatcc_builder_padding_base@@Base+0x5bf>
  40feca:	lea    rsi,[rip+0x8d91]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40fed1:	lea    rcx,[rip+0x9381]        # 419259 <flatcc_builder_padding_base@@Base+0x879>
  40fed8:	mov    edx,0x3d9
  40fedd:	call   4040a0 <__assert_fail@plt>
  40fee2:	lea    rdi,[rip+0x93af]        # 419298 <flatcc_builder_padding_base@@Base+0x8b8>
  40fee9:	lea    rsi,[rip+0x8d72]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40fef0:	lea    rcx,[rip+0x9362]        # 419259 <flatcc_builder_padding_base@@Base+0x879>
  40fef7:	mov    edx,0x3da
  40fefc:	call   4040a0 <__assert_fail@plt>
  40ff01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ff0b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040ff10 <flatcc_builder_truncate_offset_vector@@Base>:
  40ff10:	push   rax
  40ff11:	mov    rcx,QWORD PTR [rdi+0x30]
  40ff15:	movzx  edx,WORD PTR [rcx+0xe]
  40ff19:	cmp    edx,0x5
  40ff1c:	jne    40ff50 <flatcc_builder_truncate_offset_vector@@Base+0x40>
  40ff1e:	mov    rax,rsi
  40ff21:	mov    edx,DWORD PTR [rcx+0x14]
  40ff24:	sub    edx,eax
  40ff26:	jb     40ff6f <flatcc_builder_truncate_offset_vector@@Base+0x5f>
  40ff28:	mov    DWORD PTR [rcx+0x14],edx
  40ff2b:	mov    rcx,QWORD PTR [rdi+0x30]
  40ff2f:	imul   eax,DWORD PTR [rcx+0x10]
  40ff33:	mov    ecx,DWORD PTR [rdi+0x20]
  40ff36:	sub    ecx,eax
  40ff38:	mov    DWORD PTR [rdi+0x20],ecx
  40ff3b:	add    rcx,QWORD PTR [rdi+0x18]
  40ff3f:	xor    esi,esi
  40ff41:	mov    rdi,rcx
  40ff44:	mov    rdx,rax
  40ff47:	call   4040b0 <memset@plt>
  40ff4c:	xor    eax,eax
  40ff4e:	pop    rcx
  40ff4f:	ret    
  40ff50:	lea    rdi,[rip+0x9141]        # 419098 <flatcc_builder_padding_base@@Base+0x6b8>
  40ff57:	lea    rsi,[rip+0x8d04]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40ff5e:	lea    rcx,[rip+0x9357]        # 4192bc <flatcc_builder_padding_base@@Base+0x8dc>
  40ff65:	mov    edx,0x3e2
  40ff6a:	call   4040a0 <__assert_fail@plt>
  40ff6f:	lea    rdi,[rip+0x938c]        # 419302 <flatcc_builder_padding_base@@Base+0x922>
  40ff76:	lea    rsi,[rip+0x8ce5]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40ff7d:	lea    rcx,[rip+0x9338]        # 4192bc <flatcc_builder_padding_base@@Base+0x8dc>
  40ff84:	mov    edx,0x3e3
  40ff89:	call   4040a0 <__assert_fail@plt>
  40ff8e:	xchg   ax,ax

000000000040ff90 <flatcc_builder_truncate_string@@Base>:
  40ff90:	push   rax
  40ff91:	mov    rax,QWORD PTR [rdi+0x30]
  40ff95:	movzx  ecx,WORD PTR [rax+0xe]
  40ff99:	cmp    ecx,0x6
  40ff9c:	jne    40ffc7 <flatcc_builder_truncate_string@@Base+0x37>
  40ff9e:	mov    ecx,DWORD PTR [rax+0x14]
  40ffa1:	cmp    rcx,rsi
  40ffa4:	jb     40ffe6 <flatcc_builder_truncate_string@@Base+0x56>
  40ffa6:	sub    ecx,esi
  40ffa8:	mov    DWORD PTR [rax+0x14],ecx
  40ffab:	mov    eax,DWORD PTR [rdi+0x20]
  40ffae:	sub    eax,esi
  40ffb0:	mov    DWORD PTR [rdi+0x20],eax
  40ffb3:	add    rax,QWORD PTR [rdi+0x18]
  40ffb7:	mov    edx,esi
  40ffb9:	xor    esi,esi
  40ffbb:	mov    rdi,rax
  40ffbe:	call   4040b0 <memset@plt>
  40ffc3:	xor    eax,eax
  40ffc5:	pop    rcx
  40ffc6:	ret    
  40ffc7:	lea    rdi,[rip+0x91d3]        # 4191a1 <flatcc_builder_padding_base@@Base+0x7c1>
  40ffce:	lea    rsi,[rip+0x8c8d]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40ffd5:	lea    rcx,[rip+0x9361]        # 41933d <flatcc_builder_padding_base@@Base+0x95d>
  40ffdc:	mov    edx,0x3eb
  40ffe1:	call   4040a0 <__assert_fail@plt>
  40ffe6:	lea    rdi,[rip+0x938f]        # 41937c <flatcc_builder_padding_base@@Base+0x99c>
  40ffed:	lea    rsi,[rip+0x8c6e]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  40fff4:	lea    rcx,[rip+0x9342]        # 41933d <flatcc_builder_padding_base@@Base+0x95d>
  40fffb:	mov    edx,0x3ec
  410000:	call   4040a0 <__assert_fail@plt>
  410005:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41000f:	nop

0000000000410010 <flatcc_builder_start_vector@@Base>:
  410010:	push   r15
  410012:	push   r14
  410014:	push   rbx
  410015:	mov    r14,rcx
  410018:	mov    r15,rsi
  41001b:	mov    rbx,rdi
  41001e:	cmp    edx,0x4
  410021:	mov    esi,0x4
  410026:	cmova  esi,edx
  410029:	call   40f290 <flatcc_builder_start_buffer@@Base+0xe0>
  41002e:	mov    ecx,eax
  410030:	mov    eax,0xffffffff
  410035:	test   ecx,ecx
  410037:	jne    410085 <flatcc_builder_start_vector@@Base+0x75>
  410039:	mov    rax,QWORD PTR [rbx+0x30]
  41003d:	mov    DWORD PTR [rax+0x10],r15d
  410041:	mov    rax,QWORD PTR [rbx+0x30]
  410045:	mov    DWORD PTR [rax+0x14],0x0
  41004c:	mov    rax,QWORD PTR [rbx+0x30]
  410050:	mov    DWORD PTR [rax+0x18],r14d
  410054:	mov    rax,QWORD PTR [rbx+0x30]
  410058:	mov    WORD PTR [rax+0xe],0x4
  41005e:	mov    ecx,DWORD PTR [rbx+0x28]
  410061:	mov    edx,DWORD PTR [rbx+0x70]
  410064:	sub    edx,ecx
  410066:	add    rcx,QWORD PTR [rbx+0x68]
  41006a:	mov    QWORD PTR [rbx+0x18],rcx
  41006e:	cmp    edx,0xfffffffc
  410071:	mov    ecx,0xfffffffc
  410076:	cmovb  ecx,edx
  410079:	mov    DWORD PTR [rbx+0x24],ecx
  41007c:	mov    DWORD PTR [rax+0x4],0xfffffffc
  410083:	xor    eax,eax
  410085:	pop    rbx
  410086:	pop    r14
  410088:	pop    r15
  41008a:	ret    
  41008b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000410090 <flatcc_builder_start_offset_vector@@Base>:
  410090:	push   rbx
  410091:	mov    rbx,rdi
  410094:	mov    esi,0x4
  410099:	call   40f290 <flatcc_builder_start_buffer@@Base+0xe0>
  41009e:	mov    ecx,eax
  4100a0:	mov    eax,0xffffffff
  4100a5:	test   ecx,ecx
  4100a7:	je     4100ab <flatcc_builder_start_offset_vector@@Base+0x1b>
  4100a9:	pop    rbx
  4100aa:	ret    
  4100ab:	mov    rax,QWORD PTR [rbx+0x30]
  4100af:	mov    DWORD PTR [rax+0x10],0x4
  4100b6:	mov    rax,QWORD PTR [rbx+0x30]
  4100ba:	mov    DWORD PTR [rax+0x14],0x0
  4100c1:	mov    rax,QWORD PTR [rbx+0x30]
  4100c5:	mov    WORD PTR [rax+0xe],0x5
  4100cb:	mov    ecx,DWORD PTR [rbx+0x28]
  4100ce:	mov    edx,DWORD PTR [rbx+0x70]
  4100d1:	sub    edx,ecx
  4100d3:	add    rcx,QWORD PTR [rbx+0x68]
  4100d7:	mov    QWORD PTR [rbx+0x18],rcx
  4100db:	cmp    edx,0xfffffffc
  4100de:	mov    ecx,0xfffffffc
  4100e3:	cmovb  ecx,edx
  4100e6:	mov    DWORD PTR [rbx+0x24],ecx
  4100e9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4100f0:	xor    eax,eax
  4100f2:	pop    rbx
  4100f3:	ret    
  4100f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4100fe:	xchg   ax,ax

0000000000410100 <flatcc_builder_create_offset_vector@@Base>:
  410100:	push   r15
  410102:	push   r14
  410104:	push   r12
  410106:	push   rbx
  410107:	push   rax
  410108:	mov    r14,rdx
  41010b:	mov    r15,rsi
  41010e:	mov    rbx,rdi
  410111:	mov    esi,0x4
  410116:	call   40f290 <flatcc_builder_start_buffer@@Base+0xe0>
  41011b:	test   eax,eax
  41011d:	je     41012d <flatcc_builder_create_offset_vector@@Base+0x2d>
  41011f:	xor    eax,eax
  410121:	add    rsp,0x8
  410125:	pop    rbx
  410126:	pop    r12
  410128:	pop    r14
  41012a:	pop    r15
  41012c:	ret    
  41012d:	mov    rax,QWORD PTR [rbx+0x30]
  410131:	mov    DWORD PTR [rax+0x10],0x4
  410138:	mov    rax,QWORD PTR [rbx+0x30]
  41013c:	mov    DWORD PTR [rax+0x14],0x0
  410143:	mov    rax,QWORD PTR [rbx+0x30]
  410147:	mov    WORD PTR [rax+0xe],0x5
  41014d:	mov    ecx,DWORD PTR [rbx+0x28]
  410150:	mov    edx,DWORD PTR [rbx+0x70]
  410153:	sub    edx,ecx
  410155:	add    rcx,QWORD PTR [rbx+0x68]
  410159:	mov    QWORD PTR [rbx+0x18],rcx
  41015d:	cmp    edx,0xfffffffc
  410160:	mov    ecx,0xfffffffc
  410165:	cmovb  ecx,edx
  410168:	mov    DWORD PTR [rbx+0x24],ecx
  41016b:	mov    DWORD PTR [rax+0x4],0xfffffffc
  410172:	mov    ecx,DWORD PTR [rax+0x14]
  410175:	add    ecx,r14d
  410178:	jb     410229 <flatcc_builder_create_offset_vector@@Base+0x129>
  41017e:	cmp    ecx,0x40000000
  410184:	jae    410229 <flatcc_builder_create_offset_vector@@Base+0x129>
  41018a:	mov    DWORD PTR [rax+0x14],ecx
  41018d:	mov    r12d,DWORD PTR [rbx+0x20]
  410191:	lea    eax,[r12+r14*4]
  410195:	mov    DWORD PTR [rbx+0x20],eax
  410198:	cmp    eax,DWORD PTR [rbx+0x24]
  41019b:	jae    4101ab <flatcc_builder_create_offset_vector@@Base+0xab>
  41019d:	mov    rdi,QWORD PTR [rbx+0x18]
  4101a1:	add    rdi,r12
  4101a4:	jne    410207 <flatcc_builder_create_offset_vector@@Base+0x107>
  4101a6:	jmp    41011f <flatcc_builder_create_offset_vector@@Base+0x1f>
  4101ab:	add    eax,0x1
  4101ae:	lea    rsi,[rbx+0x68]
  4101b2:	mov    rdi,QWORD PTR [rbx+0x40]
  4101b6:	mov    edx,DWORD PTR [rbx+0x28]
  4101b9:	add    rdx,rax
  4101bc:	mov    ecx,0x1
  4101c1:	mov    r8d,0x1
  4101c7:	call   QWORD PTR [rbx+0x50]
  4101ca:	test   eax,eax
  4101cc:	jne    41011f <flatcc_builder_create_offset_vector@@Base+0x1f>
  4101d2:	mov    eax,DWORD PTR [rbx+0x28]
  4101d5:	mov    rdi,rax
  4101d8:	add    rdi,QWORD PTR [rbx+0x68]
  4101dc:	mov    QWORD PTR [rbx+0x18],rdi
  4101e0:	mov    ecx,DWORD PTR [rbx+0x70]
  4101e3:	sub    ecx,eax
  4101e5:	cmp    ecx,0xfffffffc
  4101e8:	mov    eax,0xfffffffc
  4101ed:	cmovb  eax,ecx
  4101f0:	mov    DWORD PTR [rbx+0x24],eax
  4101f3:	mov    rax,QWORD PTR [rbx+0x30]
  4101f7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4101fe:	add    rdi,r12
  410201:	je     41011f <flatcc_builder_create_offset_vector@@Base+0x1f>
  410207:	shl    r14,0x2
  41020b:	mov    rsi,r15
  41020e:	mov    rdx,r14
  410211:	call   404110 <memcpy@plt>
  410216:	mov    rdi,rbx
  410219:	add    rsp,0x8
  41021d:	pop    rbx
  41021e:	pop    r12
  410220:	pop    r14
  410222:	pop    r15
  410224:	jmp    410250 <flatcc_builder_end_offset_vector@@Base>
  410229:	lea    rdi,[rip+0x9afb]        # 419d2b <flatcc_builder_padding_base@@Base+0x134b>
  410230:	lea    rsi,[rip+0x8a2b]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  410237:	lea    rcx,[rip+0x9b08]        # 419d46 <flatcc_builder_padding_base@@Base+0x1366>
  41023e:	mov    edx,0x37c
  410243:	call   4040a0 <__assert_fail@plt>
  410248:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000410250 <flatcc_builder_end_offset_vector@@Base>:
  410250:	push   rbp
  410251:	push   rbx
  410252:	push   rax
  410253:	mov    rax,QWORD PTR [rdi+0x30]
  410257:	movzx  ecx,WORD PTR [rax+0xe]
  41025b:	cmp    ecx,0x5
  41025e:	jne    4102ed <flatcc_builder_end_offset_vector@@Base+0x9d>
  410264:	mov    rbx,rdi
  410267:	mov    rsi,QWORD PTR [rdi+0x18]
  41026b:	mov    edx,DWORD PTR [rax+0x14]
  41026e:	xor    ecx,ecx
  410270:	call   4112a0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  410275:	mov    ebp,eax
  410277:	test   eax,eax
  410279:	je     4102e4 <flatcc_builder_end_offset_vector@@Base+0x94>
  41027b:	mov    rdi,QWORD PTR [rbx+0x18]
  41027f:	mov    edx,DWORD PTR [rbx+0x20]
  410282:	xor    esi,esi
  410284:	call   4040b0 <memset@plt>
  410289:	mov    rax,QWORD PTR [rbx+0x30]
  41028d:	mov    ecx,DWORD PTR [rax+0x8]
  410290:	mov    DWORD PTR [rbx+0x20],ecx
  410293:	mov    ecx,DWORD PTR [rax]
  410295:	mov    DWORD PTR [rbx+0x28],ecx
  410298:	mov    edx,DWORD PTR [rax+0x4]
  41029b:	mov    rsi,rcx
  41029e:	add    rsi,QWORD PTR [rbx+0x68]
  4102a2:	mov    QWORD PTR [rbx+0x18],rsi
  4102a6:	mov    esi,DWORD PTR [rbx+0x70]
  4102a9:	sub    esi,ecx
  4102ab:	cmp    esi,edx
  4102ad:	cmova  esi,edx
  4102b0:	mov    DWORD PTR [rbx+0x24],esi
  4102b3:	movzx  ecx,WORD PTR [rbx+0xea]
  4102ba:	cmp    WORD PTR [rbx+0xe8],cx
  4102c1:	jae    4102ca <flatcc_builder_end_offset_vector@@Base+0x7a>
  4102c3:	mov    WORD PTR [rbx+0xe8],cx
  4102ca:	movzx  ecx,WORD PTR [rax+0xc]
  4102ce:	mov    WORD PTR [rbx+0xea],cx
  4102d5:	add    rax,0xffffffffffffffdc
  4102d9:	mov    QWORD PTR [rbx+0x30],rax
  4102dd:	add    DWORD PTR [rbx+0x104],0xffffffff
  4102e4:	mov    eax,ebp
  4102e6:	add    rsp,0x8
  4102ea:	pop    rbx
  4102eb:	pop    rbp
  4102ec:	ret    
  4102ed:	lea    rdi,[rip+0x8da4]        # 419098 <flatcc_builder_padding_base@@Base+0x6b8>
  4102f4:	lea    rsi,[rip+0x8967]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  4102fb:	lea    rcx,[rip+0x93c5]        # 4196c7 <flatcc_builder_padding_base@@Base+0xce7>
  410302:	mov    edx,0x5c8
  410307:	call   4040a0 <__assert_fail@plt>
  41030c:	nop    DWORD PTR [rax+0x0]

0000000000410310 <flatcc_builder_start_string@@Base>:
  410310:	push   rbx
  410311:	mov    rbx,rdi
  410314:	mov    esi,0x1
  410319:	call   40f290 <flatcc_builder_start_buffer@@Base+0xe0>
  41031e:	mov    ecx,eax
  410320:	mov    eax,0xffffffff
  410325:	test   ecx,ecx
  410327:	je     41032b <flatcc_builder_start_string@@Base+0x1b>
  410329:	pop    rbx
  41032a:	ret    
  41032b:	mov    rax,QWORD PTR [rbx+0x30]
  41032f:	mov    DWORD PTR [rax+0x10],0x1
  410336:	mov    rax,QWORD PTR [rbx+0x30]
  41033a:	mov    DWORD PTR [rax+0x14],0x0
  410341:	mov    rax,QWORD PTR [rbx+0x30]
  410345:	mov    WORD PTR [rax+0xe],0x6
  41034b:	mov    ecx,DWORD PTR [rbx+0x28]
  41034e:	mov    edx,DWORD PTR [rbx+0x70]
  410351:	sub    edx,ecx
  410353:	add    rcx,QWORD PTR [rbx+0x68]
  410357:	mov    QWORD PTR [rbx+0x18],rcx
  41035b:	cmp    edx,0xfffffffc
  41035e:	mov    ecx,0xfffffffc
  410363:	cmovb  ecx,edx
  410366:	mov    DWORD PTR [rbx+0x24],ecx
  410369:	mov    DWORD PTR [rax+0x4],0xfffffffc
  410370:	xor    eax,eax
  410372:	pop    rbx
  410373:	ret    
  410374:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41037e:	xchg   ax,ax

0000000000410380 <flatcc_builder_reserve_table@@Base>:
  410380:	push   r15
  410382:	push   r14
  410384:	push   rbx
  410385:	test   esi,esi
  410387:	js     410434 <flatcc_builder_reserve_table@@Base+0xb4>
  41038d:	mov    r14d,esi
  410390:	mov    r15,rdi
  410393:	mov    rax,QWORD PTR [rdi+0x30]
  410397:	movzx  ebx,WORD PTR [rax+0x1c]
  41039b:	add    ebx,ebx
  41039d:	add    ebx,DWORD PTR [rax+0x10]
  4103a0:	lea    edx,[r14+r14*1]
  4103a4:	add    edx,0x4
  4103a7:	add    rdx,rbx
  4103aa:	cmp    rdx,QWORD PTR [rdi+0x60]
  4103ae:	jbe    4103cc <flatcc_builder_reserve_table@@Base+0x4c>
  4103b0:	lea    rsi,[r15+0x58]
  4103b4:	mov    rdi,QWORD PTR [r15+0x40]
  4103b8:	mov    ecx,0x1
  4103bd:	xor    r8d,r8d
  4103c0:	call   QWORD PTR [r15+0x50]
  4103c4:	test   eax,eax
  4103c6:	jne    410453 <flatcc_builder_reserve_table@@Base+0xd3>
  4103cc:	add    rbx,QWORD PTR [r15+0x58]
  4103d0:	mov    QWORD PTR [r15+0x8],rbx
  4103d4:	je     410429 <flatcc_builder_reserve_table@@Base+0xa9>
  4103d6:	add    r14d,r14d
  4103d9:	add    rbx,0x4
  4103dd:	mov    QWORD PTR [r15+0x8],rbx
  4103e1:	mov    rax,QWORD PTR [r15+0x30]
  4103e5:	mov    ebx,DWORD PTR [rax+0x14]
  4103e8:	or     r14d,0x1
  4103ec:	add    r14,rbx
  4103ef:	cmp    r14,QWORD PTR [r15+0x90]
  4103f6:	jbe    410416 <flatcc_builder_reserve_table@@Base+0x96>
  4103f8:	lea    rsi,[r15+0x88]
  4103ff:	mov    rdi,QWORD PTR [r15+0x40]
  410403:	xor    ecx,ecx
  410405:	mov    r8d,0x3
  41040b:	mov    rdx,r14
  41040e:	call   QWORD PTR [r15+0x50]
  410412:	test   eax,eax
  410414:	jne    410453 <flatcc_builder_reserve_table@@Base+0xd3>
  410416:	xor    eax,eax
  410418:	add    rbx,QWORD PTR [r15+0x88]
  41041f:	mov    QWORD PTR [r15],rbx
  410422:	sete   al
  410425:	neg    eax
  410427:	jmp    41042e <flatcc_builder_reserve_table@@Base+0xae>
  410429:	mov    eax,0xffffffff
  41042e:	pop    rbx
  41042f:	pop    r14
  410431:	pop    r15
  410433:	ret    
  410434:	lea    rdi,[rip+0x8fa4]        # 4193df <flatcc_builder_padding_base@@Base+0x9ff>
  41043b:	lea    rsi,[rip+0x8820]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  410442:	lea    rcx,[rip+0x8f55]        # 41939e <flatcc_builder_padding_base@@Base+0x9be>
  410449:	mov    edx,0x429
  41044e:	call   4040a0 <__assert_fail@plt>
  410453:	lea    rdi,[rip+0x99c8]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  41045a:	lea    rsi,[rip+0x8801]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  410461:	lea    rcx,[rip+0x97f4]        # 419c5c <flatcc_builder_padding_base@@Base+0x127c>
  410468:	mov    edx,0x134
  41046d:	call   4040a0 <__assert_fail@plt>
  410472:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41047c:	nop    DWORD PTR [rax+0x0]

0000000000410480 <flatcc_builder_start_table@@Base>:
  410480:	push   rbp
  410481:	push   r15
  410483:	push   r14
  410485:	push   rbx
  410486:	push   rax
  410487:	mov    r15d,esi
  41048a:	mov    rbx,rdi
  41048d:	mov    esi,0x4
  410492:	call   40f290 <flatcc_builder_start_buffer@@Base+0xe0>
  410497:	mov    r14d,0xffffffff
  41049d:	test   eax,eax
  41049f:	je     4104af <flatcc_builder_start_table@@Base+0x2f>
  4104a1:	mov    eax,r14d
  4104a4:	add    rsp,0x8
  4104a8:	pop    rbx
  4104a9:	pop    r14
  4104ab:	pop    r15
  4104ad:	pop    rbp
  4104ae:	ret    
  4104af:	mov    eax,DWORD PTR [rbx+0x8]
  4104b2:	sub    eax,DWORD PTR [rbx+0x58]
  4104b5:	mov    rcx,QWORD PTR [rbx+0x30]
  4104b9:	mov    DWORD PTR [rcx+0x10],eax
  4104bc:	mov    eax,DWORD PTR [rbx]
  4104be:	sub    eax,DWORD PTR [rbx+0x88]
  4104c4:	mov    rcx,QWORD PTR [rbx+0x30]
  4104c8:	mov    DWORD PTR [rcx+0x14],eax
  4104cb:	mov    eax,DWORD PTR [rbx+0x14]
  4104ce:	mov    rcx,QWORD PTR [rbx+0x30]
  4104d2:	mov    DWORD PTR [rcx+0x18],eax
  4104d5:	movzx  eax,WORD PTR [rbx+0x10]
  4104d9:	mov    rcx,QWORD PTR [rbx+0x30]
  4104dd:	mov    WORD PTR [rcx+0x1c],ax
  4104e1:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  4104e8:	mov    WORD PTR [rbx+0x10],0x0
  4104ee:	mov    rax,QWORD PTR [rbx+0x30]
  4104f2:	mov    WORD PTR [rax+0xe],0x3
  4104f8:	movzx  ebp,WORD PTR [rax+0x1c]
  4104fc:	add    ebp,ebp
  4104fe:	add    ebp,DWORD PTR [rax+0x10]
  410501:	lea    edx,[r15+r15*1]
  410505:	add    edx,0x4
  410508:	add    rdx,rbp
  41050b:	cmp    rdx,QWORD PTR [rbx+0x60]
  41050f:	jbe    41052c <flatcc_builder_start_table@@Base+0xac>
  410511:	lea    rsi,[rbx+0x58]
  410515:	mov    rdi,QWORD PTR [rbx+0x40]
  410519:	mov    ecx,0x1
  41051e:	xor    r8d,r8d
  410521:	call   QWORD PTR [rbx+0x50]
  410524:	test   eax,eax
  410526:	jne    4105c0 <flatcc_builder_start_table@@Base+0x140>
  41052c:	add    rbp,QWORD PTR [rbx+0x58]
  410530:	mov    QWORD PTR [rbx+0x8],rbp
  410534:	je     4104a1 <flatcc_builder_start_table@@Base+0x21>
  41053a:	add    r15d,r15d
  41053d:	add    rbp,0x4
  410541:	mov    QWORD PTR [rbx+0x8],rbp
  410545:	mov    rax,QWORD PTR [rbx+0x30]
  410549:	mov    ebp,DWORD PTR [rax+0x14]
  41054c:	or     r15d,0x1
  410550:	add    r15,rbp
  410553:	cmp    r15,QWORD PTR [rbx+0x90]
  41055a:	jbe    410579 <flatcc_builder_start_table@@Base+0xf9>
  41055c:	lea    rsi,[rbx+0x88]
  410563:	mov    rdi,QWORD PTR [rbx+0x40]
  410567:	xor    ecx,ecx
  410569:	mov    r8d,0x3
  41056f:	mov    rdx,r15
  410572:	call   QWORD PTR [rbx+0x50]
  410575:	test   eax,eax
  410577:	jne    4105c0 <flatcc_builder_start_table@@Base+0x140>
  410579:	add    rbp,QWORD PTR [rbx+0x88]
  410580:	mov    QWORD PTR [rbx],rbp
  410583:	je     4104a1 <flatcc_builder_start_table@@Base+0x21>
  410589:	mov    eax,DWORD PTR [rbx+0x28]
  41058c:	mov    rcx,rax
  41058f:	add    rcx,QWORD PTR [rbx+0x68]
  410593:	mov    QWORD PTR [rbx+0x18],rcx
  410597:	mov    ecx,DWORD PTR [rbx+0x70]
  41059a:	sub    ecx,eax
  41059c:	cmp    ecx,0xfffc
  4105a2:	mov    eax,0xfffc
  4105a7:	cmovb  eax,ecx
  4105aa:	mov    DWORD PTR [rbx+0x24],eax
  4105ad:	mov    rax,QWORD PTR [rbx+0x30]
  4105b1:	mov    DWORD PTR [rax+0x4],0xfffc
  4105b8:	xor    r14d,r14d
  4105bb:	jmp    4104a1 <flatcc_builder_start_table@@Base+0x21>
  4105c0:	lea    rdi,[rip+0x985b]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  4105c7:	lea    rsi,[rip+0x8694]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  4105ce:	lea    rcx,[rip+0x9687]        # 419c5c <flatcc_builder_padding_base@@Base+0x127c>
  4105d5:	mov    edx,0x134
  4105da:	call   4040a0 <__assert_fail@plt>
  4105df:	nop

00000000004105e0 <flatcc_builder_create_vtable@@Base>:
  4105e0:	push   r14
  4105e2:	push   rbx
  4105e3:	sub    rsp,0x98
  4105ea:	mov    r14,rdi
  4105ed:	mov    QWORD PTR [rsp+0x8],0x0
  4105f6:	mov    DWORD PTR [rsp+0x10],0x0
  4105fe:	test   dx,dx
  410601:	je     410667 <flatcc_builder_create_vtable@@Base+0x87>
  410603:	movzx  r8d,dx
  410607:	mov    QWORD PTR [rsp+0x8],r8
  41060c:	mov    QWORD PTR [rsp+0x18],rsi
  410611:	mov    QWORD PTR [rsp+0x20],r8
  410616:	mov    DWORD PTR [rsp+0x10],0x1
  41061e:	mov    edx,0x1
  410623:	cmp    DWORD PTR [r14+0x100],0x0
  41062b:	jne    410676 <flatcc_builder_create_vtable@@Base+0x96>
  41062d:	cmp    DWORD PTR [r14+0x124],0x0
  410635:	jne    410676 <flatcc_builder_create_vtable@@Base+0x96>
  410637:	mov    ebx,DWORD PTR [r14+0xf4]
  41063e:	lea    eax,[r8+rbx*1]
  410642:	mov    DWORD PTR [r14+0xf4],eax
  410649:	mov    rdi,QWORD PTR [r14+0x38]
  41064d:	lea    rsi,[rsp+0x18]
  410652:	mov    ecx,ebx
  410654:	call   QWORD PTR [r14+0x48]
  410658:	test   eax,eax
  41065a:	jne    41070b <flatcc_builder_create_vtable@@Base+0x12b>
  410660:	add    ebx,0x1
  410663:	jne    4106c0 <flatcc_builder_create_vtable@@Base+0xe0>
  410665:	jmp    4106be <flatcc_builder_create_vtable@@Base+0xde>
  410667:	xor    edx,edx
  410669:	xor    r8d,r8d
  41066c:	cmp    DWORD PTR [r14+0x100],0x0
  410674:	je     41062d <flatcc_builder_create_vtable@@Base+0x4d>
  410676:	cmp    r8,0x11
  41067a:	setb   al
  41067d:	lea    rcx,[r8-0x10]
  410681:	shr    rcx,0x20
  410685:	sete   cl
  410688:	test   r8d,r8d
  41068b:	je     4106cd <flatcc_builder_create_vtable@@Base+0xed>
  41068d:	or     al,cl
  41068f:	je     4106cd <flatcc_builder_create_vtable@@Base+0xed>
  410691:	mov    ebx,DWORD PTR [r14+0xf0]
  410698:	sub    ebx,r8d
  41069b:	mov    rdi,QWORD PTR [r14+0x38]
  41069f:	lea    rsi,[rsp+0x18]
  4106a4:	mov    ecx,ebx
  4106a6:	call   QWORD PTR [r14+0x48]
  4106aa:	test   eax,eax
  4106ac:	jne    4106ec <flatcc_builder_create_vtable@@Base+0x10c>
  4106ae:	mov    DWORD PTR [r14+0xf0],ebx
  4106b5:	test   ebx,ebx
  4106b7:	je     4106be <flatcc_builder_create_vtable@@Base+0xde>
  4106b9:	add    ebx,0x1
  4106bc:	jmp    4106c0 <flatcc_builder_create_vtable@@Base+0xe0>
  4106be:	xor    ebx,ebx
  4106c0:	mov    eax,ebx
  4106c2:	add    rsp,0x98
  4106c9:	pop    rbx
  4106ca:	pop    r14
  4106cc:	ret    
  4106cd:	lea    rdi,[rip+0x974e]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  4106d4:	lea    rsi,[rip+0x8587]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  4106db:	lea    rcx,[rip+0x95ff]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  4106e2:	mov    edx,0x287
  4106e7:	call   4040a0 <__assert_fail@plt>
  4106ec:	lea    rdi,[rip+0x972f]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  4106f3:	lea    rsi,[rip+0x8568]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  4106fa:	lea    rcx,[rip+0x95e0]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  410701:	mov    edx,0x28b
  410706:	call   4040a0 <__assert_fail@plt>
  41070b:	lea    rdi,[rip+0x9710]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  410712:	lea    rsi,[rip+0x8549]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  410719:	lea    rcx,[rip+0x967d]        # 419d9d <flatcc_builder_padding_base@@Base+0x13bd>
  410720:	mov    edx,0x2a5
  410725:	call   4040a0 <__assert_fail@plt>
  41072a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410730 <flatcc_builder_create_cached_vtable@@Base>:
  410730:	push   rbp
  410731:	push   r15
  410733:	push   r14
  410735:	push   r13
  410737:	push   r12
  410739:	push   rbx
  41073a:	sub    rsp,0x28
  41073e:	mov    r15d,ecx
  410741:	mov    r8d,edx
  410744:	mov    QWORD PTR [rsp+0x18],rsi
  410749:	mov    r13,rdi
  41074c:	mov    rax,QWORD PTR [rdi+0xd8]
  410753:	test   rax,rax
  410756:	je     41082a <flatcc_builder_create_cached_vtable@@Base+0xfa>
  41075c:	mov    ecx,0x20
  410761:	sub    ecx,eax
  410763:	shrx   r15d,r15d,ecx
  410768:	shl    r15,0x2
  41076c:	add    r15,QWORD PTR [r13+0xa8]
  410773:	je     4108fa <flatcc_builder_create_cached_vtable@@Base+0x1ca>
  410779:	mov    ebp,DWORD PTR [r15]
  41077c:	test   ebp,ebp
  41077e:	je     410902 <flatcc_builder_create_cached_vtable@@Base+0x1d2>
  410784:	mov    rbx,QWORD PTR [r13+0x78]
  410788:	mov    QWORD PTR [rsp+0x10],r13
  41078d:	mov    r13,QWORD PTR [r13+0xb8]
  410794:	movzx  eax,r8w
  410798:	mov    QWORD PTR [rsp+0x20],rax
  41079d:	xor    eax,eax
  41079f:	mov    QWORD PTR [rsp],rax
  4107a3:	mov    QWORD PTR [rsp+0x8],r15
  4107a8:	mov    r14,r15
  4107ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4107b0:	mov    eax,ebp
  4107b2:	lea    r15,[rax+r13*1]
  4107b6:	mov    esi,DWORD PTR [r13+rax*1+0x8]
  4107bb:	cmp    WORD PTR [rbx+rsi*1],r8w
  4107c0:	jne    4107de <flatcc_builder_create_cached_vtable@@Base+0xae>
  4107c2:	add    rsi,rbx
  4107c5:	mov    rdi,QWORD PTR [rsp+0x18]
  4107ca:	mov    rdx,QWORD PTR [rsp+0x20]
  4107cf:	mov    r12d,r8d
  4107d2:	call   4040e0 <memcmp@plt>
  4107d7:	mov    r8d,r12d
  4107da:	test   eax,eax
  4107dc:	je     4107ef <flatcc_builder_create_cached_vtable@@Base+0xbf>
  4107de:	mov    ebp,DWORD PTR [r15+0xc]
  4107e2:	add    r15,0xc
  4107e6:	mov    r14,r15
  4107e9:	test   ebp,ebp
  4107eb:	jne    4107b0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  4107ed:	jmp    41081b <flatcc_builder_create_cached_vtable@@Base+0xeb>
  4107ef:	mov    eax,DWORD PTR [r15+0x4]
  4107f3:	mov    rcx,QWORD PTR [rsp+0x10]
  4107f8:	cmp    eax,DWORD PTR [rcx+0x100]
  4107fe:	je     410a64 <flatcc_builder_create_cached_vtable@@Base+0x334>
  410804:	lea    r14,[r15+0xc]
  410808:	mov    ebp,DWORD PTR [r15+0xc]
  41080c:	mov    rax,r15
  41080f:	mov    QWORD PTR [rsp],r15
  410813:	test   ebp,ebp
  410815:	jne    4107b0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  410817:	mov    QWORD PTR [rsp],r15
  41081b:	mov    r13,QWORD PTR [rsp+0x10]
  410820:	mov    r15,QWORD PTR [rsp+0x8]
  410825:	jmp    410908 <flatcc_builder_create_cached_vtable@@Base+0x1d8>
  41082a:	cmp    DWORD PTR [r13+0xe4],0x0
  410832:	jne    410aa1 <flatcc_builder_create_cached_vtable@@Base+0x371>
  410838:	lea    rbx,[r13+0xb8]
  41083f:	cmp    QWORD PTR [r13+0xc0],0xf
  410847:	ja     41086f <flatcc_builder_create_cached_vtable@@Base+0x13f>
  410849:	mov    rdi,QWORD PTR [r13+0x40]
  41084d:	mov    edx,0x10
  410852:	xor    ecx,ecx
  410854:	mov    ebp,r8d
  410857:	mov    r8d,0x6
  41085d:	mov    rsi,rbx
  410860:	call   QWORD PTR [r13+0x50]
  410864:	mov    r8d,ebp
  410867:	test   eax,eax
  410869:	jne    410a82 <flatcc_builder_create_cached_vtable@@Base+0x352>
  41086f:	xor    r12d,r12d
  410872:	cmp    QWORD PTR [rbx],0x0
  410876:	je     410a4a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41087c:	mov    ebx,r8d
  41087f:	lea    rsi,[r13+0xa8]
  410886:	mov    DWORD PTR [r13+0xe4],0x10
  410891:	mov    rdi,QWORD PTR [r13+0x40]
  410895:	mov    edx,0x100
  41089a:	mov    ecx,0x1
  41089f:	mov    r8d,0x5
  4108a5:	call   QWORD PTR [r13+0x50]
  4108a9:	test   eax,eax
  4108ab:	jne    410a4a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  4108b1:	mov    rax,QWORD PTR [r13+0xb0]
  4108b8:	mov    edx,0x100
  4108bd:	nop    DWORD PTR [rax]
  4108c0:	mov    rcx,rdx
  4108c3:	lea    rdx,[rdx+rdx*1]
  4108c7:	cmp    rdx,rax
  4108ca:	jbe    4108c0 <flatcc_builder_create_cached_vtable@@Base+0x190>
  4108cc:	shr    rcx,0x2
  4108d0:	mov    rax,0xffffffffffffffff
  4108d7:	mov    edx,0x1
  4108dc:	mov    r8d,ebx
  4108df:	nop
  4108e0:	add    rax,0x1
  4108e4:	shlx   rsi,rdx,rax
  4108e9:	cmp    rsi,rcx
  4108ec:	jb     4108e0 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  4108ee:	mov    QWORD PTR [r13+0xd8],rax
  4108f5:	jmp    41075c <flatcc_builder_create_cached_vtable@@Base+0x2c>
  4108fa:	xor    r12d,r12d
  4108fd:	jmp    410a4a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  410902:	xor    eax,eax
  410904:	mov    QWORD PTR [rsp],rax
  410908:	mov    ebp,DWORD PTR [r13+0xe4]
  41090f:	lea    rbx,[r13+0xb8]
  410916:	lea    rdx,[rbp+0x10]
  41091a:	cmp    rdx,QWORD PTR [r13+0xc0]
  410921:	jbe    410944 <flatcc_builder_create_cached_vtable@@Base+0x214>
  410923:	mov    rdi,QWORD PTR [r13+0x40]
  410927:	xor    ecx,ecx
  410929:	mov    r14d,r8d
  41092c:	mov    r8d,0x6
  410932:	mov    rsi,rbx
  410935:	call   QWORD PTR [r13+0x50]
  410939:	mov    r8d,r14d
  41093c:	test   eax,eax
  41093e:	jne    410a82 <flatcc_builder_create_cached_vtable@@Base+0x352>
  410944:	xor    r12d,r12d
  410947:	add    rbp,QWORD PTR [rbx]
  41094a:	je     410a4a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  410950:	mov    eax,DWORD PTR [r13+0xe4]
  410957:	mov    ecx,DWORD PTR [r13+0x100]
  41095e:	lea    edx,[rax+0x10]
  410961:	mov    DWORD PTR [r13+0xe4],edx
  410968:	mov    DWORD PTR [rbp+0x4],ecx
  41096b:	mov    ecx,DWORD PTR [r15]
  41096e:	mov    DWORD PTR [rbp+0xc],ecx
  410971:	mov    DWORD PTR [r15],eax
  410974:	movzx  ebx,r8w
  410978:	mov    rdi,r13
  41097b:	mov    rsi,QWORD PTR [rsp+0x18]
  410980:	mov    edx,ebx
  410982:	call   4105e0 <flatcc_builder_create_vtable@@Base>
  410987:	mov    DWORD PTR [rbp+0x0],eax
  41098a:	test   eax,eax
  41098c:	je     410a4a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  410992:	mov    rax,QWORD PTR [rsp]
  410996:	test   rax,rax
  410999:	je     4109a6 <flatcc_builder_create_cached_vtable@@Base+0x276>
  41099b:	mov    eax,DWORD PTR [rax+0x8]
  41099e:	mov    DWORD PTR [rbp+0x8],eax
  4109a1:	jmp    410a46 <flatcc_builder_create_cached_vtable@@Base+0x316>
  4109a6:	mov    rax,QWORD PTR [r13+0x118]
  4109ad:	mov    r14d,DWORD PTR [r13+0xe0]
  4109b4:	test   rax,rax
  4109b7:	je     4109f4 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  4109b9:	lea    ecx,[r14+rbx*1]
  4109bd:	cmp    rax,rcx
  4109c0:	jae    4109f4 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  4109c2:	cmp    QWORD PTR [r13+0xd8],0x0
  4109ca:	je     410a46 <flatcc_builder_create_cached_vtable@@Base+0x316>
  4109cc:	mov    rdi,QWORD PTR [r13+0xa8]
  4109d3:	mov    rdx,QWORD PTR [r13+0xb0]
  4109da:	xor    esi,esi
  4109dc:	call   4040b0 <memset@plt>
  4109e1:	movabs rax,0x1000000000
  4109eb:	mov    QWORD PTR [r13+0xe0],rax
  4109f2:	jmp    410a46 <flatcc_builder_create_cached_vtable@@Base+0x316>
  4109f4:	lea    r15,[r13+0x78]
  4109f8:	lea    rdx,[r14+rbx*1]
  4109fc:	cmp    rdx,QWORD PTR [r13+0x80]
  410a03:	jbe    410a1c <flatcc_builder_create_cached_vtable@@Base+0x2ec>
  410a05:	mov    rdi,QWORD PTR [r13+0x40]
  410a09:	xor    ecx,ecx
  410a0b:	mov    r8d,0x2
  410a11:	mov    rsi,r15
  410a14:	call   QWORD PTR [r13+0x50]
  410a18:	test   eax,eax
  410a1a:	jne    410a82 <flatcc_builder_create_cached_vtable@@Base+0x352>
  410a1c:	add    r14,QWORD PTR [r15]
  410a1f:	je     410a5c <flatcc_builder_create_cached_vtable@@Base+0x32c>
  410a21:	mov    eax,DWORD PTR [r13+0xe0]
  410a28:	mov    DWORD PTR [rbp+0x8],eax
  410a2b:	mov    ecx,ebx
  410a2d:	add    ecx,eax
  410a2f:	mov    DWORD PTR [r13+0xe0],ecx
  410a36:	mov    rdi,r14
  410a39:	mov    rsi,QWORD PTR [rsp+0x18]
  410a3e:	mov    rdx,rbx
  410a41:	call   404110 <memcpy@plt>
  410a46:	mov    r12d,DWORD PTR [rbp+0x0]
  410a4a:	mov    eax,r12d
  410a4d:	add    rsp,0x28
  410a51:	pop    rbx
  410a52:	pop    r12
  410a54:	pop    r13
  410a56:	pop    r14
  410a58:	pop    r15
  410a5a:	pop    rbp
  410a5b:	ret    
  410a5c:	mov    r12d,0xffffffff
  410a62:	jmp    410a4a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  410a64:	mov    rcx,QWORD PTR [rsp+0x8]
  410a69:	cmp    r14,rcx
  410a6c:	je     410a7d <flatcc_builder_create_cached_vtable@@Base+0x34d>
  410a6e:	mov    eax,DWORD PTR [r15+0xc]
  410a72:	mov    DWORD PTR [r14],eax
  410a75:	mov    eax,DWORD PTR [rcx]
  410a77:	mov    DWORD PTR [r15+0xc],eax
  410a7b:	mov    DWORD PTR [rcx],ebp
  410a7d:	mov    r12d,DWORD PTR [r15]
  410a80:	jmp    410a4a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  410a82:	lea    rdi,[rip+0x9399]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  410a89:	lea    rsi,[rip+0x81d2]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  410a90:	lea    rcx,[rip+0x91c5]        # 419c5c <flatcc_builder_padding_base@@Base+0x127c>
  410a97:	mov    edx,0x134
  410a9c:	call   4040a0 <__assert_fail@plt>
  410aa1:	lea    rdi,[rip+0x933e]        # 419de6 <flatcc_builder_padding_base@@Base+0x1406>
  410aa8:	lea    rsi,[rip+0x81b3]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  410aaf:	lea    rcx,[rip+0x933f]        # 419df5 <flatcc_builder_padding_base@@Base+0x1415>
  410ab6:	mov    edx,0x156
  410abb:	call   4040a0 <__assert_fail@plt>

0000000000410ac0 <flatcc_builder_create_table@@Base>:
  410ac0:	push   rbp
  410ac1:	push   r14
  410ac3:	push   rbx
  410ac4:	sub    rsp,0xa0
  410acb:	test   r9d,r9d
  410ace:	js     410ce5 <flatcc_builder_create_table@@Base+0x225>
  410ad4:	mov    r14,rdi
  410ad7:	mov    edi,DWORD PTR [rsp+0xc0]
  410ade:	test   dil,0x1
  410ae2:	je     410d04 <flatcc_builder_create_table@@Base+0x244>
  410ae8:	movzx  ecx,cx
  410aeb:	cmp    ecx,0x4
  410aee:	mov    eax,0x4
  410af3:	cmova  eax,ecx
  410af6:	cmp    WORD PTR [r14+0xe8],ax
  410afe:	jae    410b08 <flatcc_builder_create_table@@Base+0x48>
  410b00:	mov    WORD PTR [r14+0xe8],ax
  410b08:	mov    ebp,DWORD PTR [r14+0xf0]
  410b0f:	mov    ecx,ebp
  410b11:	sub    ecx,edx
  410b13:	movzx  r10d,ax
  410b17:	add    r10d,0xffffffff
  410b1b:	and    r10d,ecx
  410b1e:	mov    ecx,0xfffffffc
  410b23:	mov    ebx,0xfffffffc
  410b28:	sub    ebx,edx
  410b2a:	add    edi,r10d
  410b2d:	lea    eax,[rbx+rbp*1]
  410b30:	add    eax,0x1
  410b33:	sub    eax,edi
  410b35:	mov    DWORD PTR [rsp+0xc],eax
  410b39:	test   r9d,r9d
  410b3c:	jle    410be7 <flatcc_builder_create_table@@Base+0x127>
  410b42:	add    ebx,ebp
  410b44:	sub    ebx,r10d
  410b47:	sub    ecx,ebx
  410b49:	mov    edi,r9d
  410b4c:	lea    rax,[rdi-0x1]
  410b50:	mov    r9d,edi
  410b53:	and    r9d,0x3
  410b57:	cmp    rax,0x3
  410b5b:	jae    410b69 <flatcc_builder_create_table@@Base+0xa9>
  410b5d:	xor    ebx,ebx
  410b5f:	test   r9,r9
  410b62:	jne    410bbd <flatcc_builder_create_table@@Base+0xfd>
  410b64:	jmp    410be7 <flatcc_builder_create_table@@Base+0x127>
  410b69:	sub    rdi,r9
  410b6c:	xor    ebx,ebx
  410b6e:	xchg   ax,ax
  410b70:	movzx  eax,WORD PTR [r8+rbx*2]
  410b75:	mov    ebp,DWORD PTR [rax+rsi*1]
  410b78:	add    ebp,ecx
  410b7a:	sub    ebp,eax
  410b7c:	mov    DWORD PTR [rax+rsi*1],ebp
  410b7f:	movzx  eax,WORD PTR [r8+rbx*2+0x2]
  410b85:	mov    ebp,DWORD PTR [rax+rsi*1]
  410b88:	add    ebp,ecx
  410b8a:	sub    ebp,eax
  410b8c:	mov    DWORD PTR [rax+rsi*1],ebp
  410b8f:	movzx  eax,WORD PTR [r8+rbx*2+0x4]
  410b95:	mov    ebp,DWORD PTR [rax+rsi*1]
  410b98:	add    ebp,ecx
  410b9a:	sub    ebp,eax
  410b9c:	mov    DWORD PTR [rax+rsi*1],ebp
  410b9f:	movzx  eax,WORD PTR [r8+rbx*2+0x6]
  410ba5:	mov    ebp,DWORD PTR [rax+rsi*1]
  410ba8:	add    ebp,ecx
  410baa:	sub    ebp,eax
  410bac:	mov    DWORD PTR [rax+rsi*1],ebp
  410baf:	add    rbx,0x4
  410bb3:	cmp    rdi,rbx
  410bb6:	jne    410b70 <flatcc_builder_create_table@@Base+0xb0>
  410bb8:	test   r9,r9
  410bbb:	je     410be7 <flatcc_builder_create_table@@Base+0x127>
  410bbd:	lea    rdi,[r8+rbx*2]
  410bc1:	xor    ebx,ebx
  410bc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410bcd:	nop    DWORD PTR [rax]
  410bd0:	movzx  eax,WORD PTR [rdi+rbx*2]
  410bd4:	mov    ebp,DWORD PTR [rax+rsi*1]
  410bd7:	add    ebp,ecx
  410bd9:	sub    ebp,eax
  410bdb:	mov    DWORD PTR [rax+rsi*1],ebp
  410bde:	add    rbx,0x1
  410be2:	cmp    r9,rbx
  410be5:	jne    410bd0 <flatcc_builder_create_table@@Base+0x110>
  410be7:	mov    QWORD PTR [rsp+0x10],0x4
  410bf0:	lea    rax,[rsp+0xc]
  410bf5:	mov    QWORD PTR [rsp+0x20],rax
  410bfa:	mov    QWORD PTR [rsp+0x28],0x4
  410c03:	mov    DWORD PTR [rsp+0x18],0x1
  410c0b:	test   rdx,rdx
  410c0e:	je     410cb0 <flatcc_builder_create_table@@Base+0x1f0>
  410c14:	lea    r8,[rdx+0x4]
  410c18:	mov    QWORD PTR [rsp+0x10],r8
  410c1d:	mov    QWORD PTR [rsp+0x30],rsi
  410c22:	mov    QWORD PTR [rsp+0x38],rdx
  410c27:	mov    DWORD PTR [rsp+0x18],0x2
  410c2f:	mov    edx,0x2
  410c34:	test   r10d,r10d
  410c37:	je     410c5f <flatcc_builder_create_table@@Base+0x19f>
  410c39:	add    r8,r10
  410c3c:	mov    QWORD PTR [rsp+0x10],r8
  410c41:	mov    eax,edx
  410c43:	shl    rax,0x4
  410c47:	lea    rcx,[rip+0x7d92]        # 4189e0 <flatcc_builder_padding_base@@Base>
  410c4e:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
  410c53:	mov    QWORD PTR [rsp+rax*1+0x28],r10
  410c58:	add    edx,0x1
  410c5b:	mov    DWORD PTR [rsp+0x18],edx
  410c5f:	cmp    r8,0x11
  410c63:	setb   al
  410c66:	lea    rcx,[r8-0x10]
  410c6a:	shr    rcx,0x20
  410c6e:	sete   cl
  410c71:	test   r8d,r8d
  410c74:	jle    410cc6 <flatcc_builder_create_table@@Base+0x206>
  410c76:	or     al,cl
  410c78:	je     410cc6 <flatcc_builder_create_table@@Base+0x206>
  410c7a:	mov    ebp,DWORD PTR [r14+0xf0]
  410c81:	sub    ebp,r8d
  410c84:	mov    rdi,QWORD PTR [r14+0x38]
  410c88:	lea    rsi,[rsp+0x20]
  410c8d:	mov    ecx,ebp
  410c8f:	call   QWORD PTR [r14+0x48]
  410c93:	test   eax,eax
  410c95:	jne    410d23 <flatcc_builder_create_table@@Base+0x263>
  410c9b:	mov    DWORD PTR [r14+0xf0],ebp
  410ca2:	mov    eax,ebp
  410ca4:	add    rsp,0xa0
  410cab:	pop    rbx
  410cac:	pop    r14
  410cae:	pop    rbp
  410caf:	ret    
  410cb0:	mov    edx,0x1
  410cb5:	mov    r8d,0x4
  410cbb:	test   r10d,r10d
  410cbe:	jne    410c39 <flatcc_builder_create_table@@Base+0x179>
  410cc4:	jmp    410c5f <flatcc_builder_create_table@@Base+0x19f>
  410cc6:	lea    rdi,[rip+0x9155]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  410ccd:	lea    rsi,[rip+0x7f8e]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  410cd4:	lea    rcx,[rip+0x9006]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  410cdb:	mov    edx,0x287
  410ce0:	call   4040a0 <__assert_fail@plt>
  410ce5:	lea    rdi,[rip+0x86ec]        # 4193d8 <flatcc_builder_padding_base@@Base+0x9f8>
  410cec:	lea    rsi,[rip+0x7f6f]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  410cf3:	lea    rcx,[rip+0x86f0]        # 4193ea <flatcc_builder_padding_base@@Base+0xa0a>
  410cfa:	mov    edx,0x4d5
  410cff:	call   4040a0 <__assert_fail@plt>
  410d04:	lea    rdi,[rip+0x877b]        # 419486 <flatcc_builder_padding_base@@Base+0xaa6>
  410d0b:	lea    rsi,[rip+0x7f50]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  410d12:	lea    rcx,[rip+0x86d1]        # 4193ea <flatcc_builder_padding_base@@Base+0xa0a>
  410d19:	mov    edx,0x4db
  410d1e:	call   4040a0 <__assert_fail@plt>
  410d23:	lea    rdi,[rip+0x90f8]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  410d2a:	lea    rsi,[rip+0x7f31]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  410d31:	lea    rcx,[rip+0x8fa9]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  410d38:	mov    edx,0x28b
  410d3d:	call   4040a0 <__assert_fail@plt>
  410d42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d4c:	nop    DWORD PTR [rax+0x0]

0000000000410d50 <flatcc_builder_check_required_field@@Base>:
  410d50:	mov    rax,QWORD PTR [rdi+0x30]
  410d54:	movzx  eax,WORD PTR [rax+0xe]
  410d58:	cmp    eax,0x3
  410d5b:	jne    410d77 <flatcc_builder_check_required_field@@Base+0x27>
  410d5d:	xor    eax,eax
  410d5f:	cmp    WORD PTR [rdi+0x10],si
  410d63:	jbe    410d76 <flatcc_builder_check_required_field@@Base+0x26>
  410d65:	mov    rcx,QWORD PTR [rdi+0x8]
  410d69:	movzx  edx,si
  410d6c:	xor    eax,eax
  410d6e:	cmp    WORD PTR [rcx+rdx*2],0x0
  410d73:	setne  al
  410d76:	ret    
  410d77:	push   rax
  410d78:	lea    rdi,[rip+0x8712]        # 419491 <flatcc_builder_padding_base@@Base+0xab1>
  410d7f:	lea    rsi,[rip+0x7edc]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  410d86:	lea    rcx,[rip+0x872f]        # 4194bc <flatcc_builder_padding_base@@Base+0xadc>
  410d8d:	mov    edx,0x4f8
  410d92:	call   4040a0 <__assert_fail@plt>
  410d97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410da0 <flatcc_builder_check_union_field@@Base>:
  410da0:	mov    rax,QWORD PTR [rdi+0x30]
  410da4:	movzx  eax,WORD PTR [rax+0xe]
  410da8:	cmp    eax,0x3
  410dab:	jne    410dfe <flatcc_builder_check_union_field@@Base+0x5e>
  410dad:	test   si,si
  410db0:	je     410de1 <flatcc_builder_check_union_field@@Base+0x41>
  410db2:	cmp    WORD PTR [rdi+0x10],si
  410db6:	jbe    410de7 <flatcc_builder_check_union_field@@Base+0x47>
  410db8:	movzx  eax,si
  410dbb:	mov    rcx,QWORD PTR [rdi+0x8]
  410dbf:	movzx  edx,WORD PTR [rcx+rax*2-0x2]
  410dc4:	test   rdx,rdx
  410dc7:	je     410ded <flatcc_builder_check_union_field@@Base+0x4d>
  410dc9:	mov    rsi,QWORD PTR [rdi+0x18]
  410dcd:	cmp    BYTE PTR [rsi+rdx*1],0x0
  410dd1:	movzx  eax,WORD PTR [rcx+rax*2]
  410dd5:	je     410df4 <flatcc_builder_check_union_field@@Base+0x54>
  410dd7:	test   ax,ax
  410dda:	setne  al
  410ddd:	movzx  eax,al
  410de0:	ret    
  410de1:	xor    eax,eax
  410de3:	movzx  eax,al
  410de6:	ret    
  410de7:	xor    eax,eax
  410de9:	movzx  eax,al
  410dec:	ret    
  410ded:	cmp    WORD PTR [rcx+rax*2],0x0
  410df2:	jmp    410df7 <flatcc_builder_check_union_field@@Base+0x57>
  410df4:	test   ax,ax
  410df7:	sete   al
  410dfa:	movzx  eax,al
  410dfd:	ret    
  410dfe:	push   rax
  410dff:	lea    rdi,[rip+0x868b]        # 419491 <flatcc_builder_padding_base@@Base+0xab1>
  410e06:	lea    rsi,[rip+0x7e55]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  410e0d:	lea    rcx,[rip+0x86fb]        # 41950f <flatcc_builder_padding_base@@Base+0xb2f>
  410e14:	mov    edx,0x4ff
  410e19:	call   4040a0 <__assert_fail@plt>
  410e1e:	xchg   ax,ax

0000000000410e20 <flatcc_builder_check_required@@Base>:
  410e20:	mov    rax,QWORD PTR [rdi+0x30]
  410e24:	movzx  eax,WORD PTR [rax+0xe]
  410e28:	cmp    eax,0x3
  410e2b:	jne    410e68 <flatcc_builder_check_required@@Base+0x48>
  410e2d:	movzx  ecx,WORD PTR [rdi+0x10]
  410e31:	xor    eax,eax
  410e33:	cmp    ecx,edx
  410e35:	jl     410e64 <flatcc_builder_check_required@@Base+0x44>
  410e37:	mov    eax,0x1
  410e3c:	test   edx,edx
  410e3e:	jle    410e64 <flatcc_builder_check_required@@Base+0x44>
  410e40:	mov    rcx,QWORD PTR [rdi+0x8]
  410e44:	movsxd r8,edx
  410e47:	xor    edi,edi
  410e49:	nop    DWORD PTR [rax+0x0]
  410e50:	movzx  edx,WORD PTR [rsi+rdi*2]
  410e54:	cmp    WORD PTR [rcx+rdx*2],0x0
  410e59:	je     410e65 <flatcc_builder_check_required@@Base+0x45>
  410e5b:	add    rdi,0x1
  410e5f:	cmp    rdi,r8
  410e62:	jl     410e50 <flatcc_builder_check_required@@Base+0x30>
  410e64:	ret    
  410e65:	xor    eax,eax
  410e67:	ret    
  410e68:	push   rax
  410e69:	lea    rdi,[rip+0x8621]        # 419491 <flatcc_builder_padding_base@@Base+0xab1>
  410e70:	lea    rsi,[rip+0x7deb]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  410e77:	lea    rcx,[rip+0x86e1]        # 41955f <flatcc_builder_padding_base@@Base+0xb7f>
  410e7e:	mov    edx,0x511
  410e83:	call   4040a0 <__assert_fail@plt>
  410e88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000410e90 <flatcc_builder_end_table@@Base>:
  410e90:	push   rbp
  410e91:	push   r15
  410e93:	push   r14
  410e95:	push   r12
  410e97:	push   rbx
  410e98:	sub    rsp,0x10
  410e9c:	mov    rax,QWORD PTR [rdi+0x30]
  410ea0:	movzx  eax,WORD PTR [rax+0xe]
  410ea4:	cmp    eax,0x3
  410ea7:	jne    410ff8 <flatcc_builder_end_table@@Base+0x168>
  410ead:	mov    rbx,rdi
  410eb0:	mov    rax,QWORD PTR [rdi+0x8]
  410eb4:	mov    ecx,DWORD PTR [rdi+0x10]
  410eb7:	lea    ecx,[rcx+rcx*1]
  410eba:	add    ecx,0x4
  410ebd:	mov    WORD PTR [rax-0x4],cx
  410ec1:	mov    edx,DWORD PTR [rdi+0x20]
  410ec4:	add    edx,0x4
  410ec7:	mov    WORD PTR [rax-0x2],dx
  410ecb:	lea    r12,[rax-0x4]
  410ecf:	movzx  ebp,cx
  410ed2:	mov    eax,DWORD PTR [rdi+0x14]
  410ed5:	xor    eax,ebp
  410ed7:	imul   eax,eax,0x9e3779b1
  410edd:	movzx  ecx,dx
  410ee0:	xor    ecx,eax
  410ee2:	imul   ecx,ecx,0x9e3779b1
  410ee8:	mov    DWORD PTR [rdi+0x14],ecx
  410eeb:	mov    rsi,r12
  410eee:	mov    edx,ebp
  410ef0:	call   410730 <flatcc_builder_create_cached_vtable@@Base>
  410ef5:	test   eax,eax
  410ef7:	je     410fe5 <flatcc_builder_end_table@@Base+0x155>
  410efd:	mov    r14d,eax
  410f00:	xor    r15d,r15d
  410f03:	xor    esi,esi
  410f05:	mov    rdi,r12
  410f08:	mov    rdx,rbp
  410f0b:	call   4040b0 <memset@plt>
  410f10:	mov    rax,QWORD PTR [rbx+0x30]
  410f14:	mov    r8d,DWORD PTR [rax+0x14]
  410f18:	add    r8,QWORD PTR [rbx+0x88]
  410f1f:	mov    r9,QWORD PTR [rbx]
  410f22:	mov    rsi,QWORD PTR [rbx+0x18]
  410f26:	sub    r9,r8
  410f29:	shr    r9,1
  410f2c:	mov    edx,DWORD PTR [rbx+0x20]
  410f2f:	movzx  ecx,WORD PTR [rbx+0xea]
  410f36:	mov    DWORD PTR [rsp],r14d
  410f3a:	mov    rdi,rbx
  410f3d:	call   410ac0 <flatcc_builder_create_table@@Base>
  410f42:	test   eax,eax
  410f44:	je     410fe8 <flatcc_builder_end_table@@Base+0x158>
  410f4a:	mov    r14d,eax
  410f4d:	mov    rax,QWORD PTR [rbx+0x30]
  410f51:	mov    ecx,DWORD PTR [rax+0x18]
  410f54:	mov    DWORD PTR [rbx+0x14],ecx
  410f57:	movzx  ecx,WORD PTR [rax+0x1c]
  410f5b:	mov    WORD PTR [rbx+0x10],cx
  410f5f:	mov    ecx,DWORD PTR [rax+0x10]
  410f62:	add    rcx,QWORD PTR [rbx+0x58]
  410f66:	mov    QWORD PTR [rbx+0x8],rcx
  410f6a:	mov    eax,DWORD PTR [rax+0x14]
  410f6d:	add    rax,QWORD PTR [rbx+0x88]
  410f74:	mov    QWORD PTR [rbx],rax
  410f77:	mov    rdi,QWORD PTR [rbx+0x18]
  410f7b:	mov    edx,DWORD PTR [rbx+0x20]
  410f7e:	xor    esi,esi
  410f80:	call   4040b0 <memset@plt>
  410f85:	mov    rax,QWORD PTR [rbx+0x30]
  410f89:	mov    ecx,DWORD PTR [rax+0x8]
  410f8c:	mov    DWORD PTR [rbx+0x20],ecx
  410f8f:	mov    ecx,DWORD PTR [rax]
  410f91:	mov    DWORD PTR [rbx+0x28],ecx
  410f94:	mov    edx,DWORD PTR [rax+0x4]
  410f97:	mov    rsi,rcx
  410f9a:	add    rsi,QWORD PTR [rbx+0x68]
  410f9e:	mov    QWORD PTR [rbx+0x18],rsi
  410fa2:	mov    esi,DWORD PTR [rbx+0x70]
  410fa5:	sub    esi,ecx
  410fa7:	cmp    esi,edx
  410fa9:	cmova  esi,edx
  410fac:	mov    DWORD PTR [rbx+0x24],esi
  410faf:	movzx  ecx,WORD PTR [rbx+0xea]
  410fb6:	cmp    WORD PTR [rbx+0xe8],cx
  410fbd:	jae    410fc6 <flatcc_builder_end_table@@Base+0x136>
  410fbf:	mov    WORD PTR [rbx+0xe8],cx
  410fc6:	movzx  ecx,WORD PTR [rax+0xc]
  410fca:	mov    WORD PTR [rbx+0xea],cx
  410fd1:	add    rax,0xffffffffffffffdc
  410fd5:	mov    QWORD PTR [rbx+0x30],rax
  410fd9:	add    DWORD PTR [rbx+0x104],0xffffffff
  410fe0:	mov    r15d,r14d
  410fe3:	jmp    410fe8 <flatcc_builder_end_table@@Base+0x158>
  410fe5:	xor    r15d,r15d
  410fe8:	mov    eax,r15d
  410feb:	add    rsp,0x10
  410fef:	pop    rbx
  410ff0:	pop    r12
  410ff2:	pop    r14
  410ff4:	pop    r15
  410ff6:	pop    rbp
  410ff7:	ret    
  410ff8:	lea    rdi,[rip+0x8492]        # 419491 <flatcc_builder_padding_base@@Base+0xab1>
  410fff:	lea    rsi,[rip+0x7c5c]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  411006:	lea    rcx,[rip+0x85ac]        # 4195b9 <flatcc_builder_padding_base@@Base+0xbd9>
  41100d:	mov    edx,0x525
  411012:	call   4040a0 <__assert_fail@plt>
  411017:	nop    WORD PTR [rax+rax*1+0x0]

0000000000411020 <flatcc_builder_create_vector@@Base>:
  411020:	push   rbp
  411021:	push   rbx
  411022:	sub    rsp,0x98
  411029:	cmp    rdx,r9
  41102c:	ja     411159 <flatcc_builder_create_vector@@Base+0x139>
  411032:	mov    rbx,rdi
  411035:	movzx  edi,r8w
  411039:	cmp    edi,0x4
  41103c:	mov    eax,0x4
  411041:	cmova  eax,edi
  411044:	cmp    WORD PTR [rbx+0xe8],ax
  41104b:	jae    411054 <flatcc_builder_create_vector@@Base+0x34>
  41104d:	mov    WORD PTR [rbx+0xe8],ax
  411054:	imul   ecx,edx
  411057:	mov    DWORD PTR [rsp+0x4],edx
  41105b:	mov    ebp,DWORD PTR [rbx+0xf0]
  411061:	mov    edx,ebp
  411063:	sub    edx,ecx
  411065:	movzx  eax,ax
  411068:	add    eax,0xffffffff
  41106b:	and    eax,edx
  41106d:	mov    QWORD PTR [rsp+0x8],0x4
  411076:	lea    rdx,[rsp+0x4]
  41107b:	mov    QWORD PTR [rsp+0x18],rdx
  411080:	mov    QWORD PTR [rsp+0x20],0x4
  411089:	mov    DWORD PTR [rsp+0x10],0x1
  411091:	test   ecx,ecx
  411093:	je     411129 <flatcc_builder_create_vector@@Base+0x109>
  411099:	mov    ecx,ecx
  41109b:	lea    r8,[rcx+0x4]
  41109f:	mov    QWORD PTR [rsp+0x8],r8
  4110a4:	mov    QWORD PTR [rsp+0x28],rsi
  4110a9:	mov    QWORD PTR [rsp+0x30],rcx
  4110ae:	mov    DWORD PTR [rsp+0x10],0x2
  4110b6:	mov    edx,0x2
  4110bb:	test   eax,eax
  4110bd:	je     4110e7 <flatcc_builder_create_vector@@Base+0xc7>
  4110bf:	mov    eax,eax
  4110c1:	add    r8,rax
  4110c4:	mov    QWORD PTR [rsp+0x8],r8
  4110c9:	mov    ecx,edx
  4110cb:	shl    rcx,0x4
  4110cf:	lea    rsi,[rip+0x790a]        # 4189e0 <flatcc_builder_padding_base@@Base>
  4110d6:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  4110db:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  4110e0:	add    edx,0x1
  4110e3:	mov    DWORD PTR [rsp+0x10],edx
  4110e7:	cmp    r8,0x11
  4110eb:	setb   al
  4110ee:	lea    rcx,[r8-0x10]
  4110f2:	shr    rcx,0x20
  4110f6:	sete   cl
  4110f9:	test   r8d,r8d
  4110fc:	jle    41113a <flatcc_builder_create_vector@@Base+0x11a>
  4110fe:	or     al,cl
  411100:	je     41113a <flatcc_builder_create_vector@@Base+0x11a>
  411102:	sub    ebp,r8d
  411105:	mov    rdi,QWORD PTR [rbx+0x38]
  411109:	lea    rsi,[rsp+0x18]
  41110e:	mov    ecx,ebp
  411110:	call   QWORD PTR [rbx+0x48]
  411113:	test   eax,eax
  411115:	jne    411178 <flatcc_builder_create_vector@@Base+0x158>
  411117:	mov    DWORD PTR [rbx+0xf0],ebp
  41111d:	mov    eax,ebp
  41111f:	add    rsp,0x98
  411126:	pop    rbx
  411127:	pop    rbp
  411128:	ret    
  411129:	mov    edx,0x1
  41112e:	mov    r8d,0x4
  411134:	test   eax,eax
  411136:	jne    4110bf <flatcc_builder_create_vector@@Base+0x9f>
  411138:	jmp    4110e7 <flatcc_builder_create_vector@@Base+0xc7>
  41113a:	lea    rdi,[rip+0x8ce1]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  411141:	lea    rsi,[rip+0x7b1a]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  411148:	lea    rcx,[rip+0x8b92]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  41114f:	mov    edx,0x287
  411154:	call   4040a0 <__assert_fail@plt>
  411159:	lea    rdi,[rip+0x849b]        # 4195fb <flatcc_builder_padding_base@@Base+0xc1b>
  411160:	lea    rsi,[rip+0x7afb]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  411167:	lea    rcx,[rip+0x84a0]        # 41960e <flatcc_builder_padding_base@@Base+0xc2e>
  41116e:	mov    edx,0x555
  411173:	call   4040a0 <__assert_fail@plt>
  411178:	lea    rdi,[rip+0x8ca3]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  41117f:	lea    rsi,[rip+0x7adc]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  411186:	lea    rcx,[rip+0x8b54]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  41118d:	mov    edx,0x28b
  411192:	call   4040a0 <__assert_fail@plt>
  411197:	nop    WORD PTR [rax+rax*1+0x0]

00000000004111a0 <flatcc_builder_end_vector@@Base>:
  4111a0:	push   rbp
  4111a1:	push   rbx
  4111a2:	push   rax
  4111a3:	mov    rax,QWORD PTR [rdi+0x30]
  4111a7:	movzx  ecx,WORD PTR [rax+0xe]
  4111ab:	cmp    ecx,0x4
  4111ae:	jne    41124a <flatcc_builder_end_vector@@Base+0xaa>
  4111b4:	mov    rbx,rdi
  4111b7:	mov    rsi,QWORD PTR [rdi+0x18]
  4111bb:	mov    ecx,DWORD PTR [rax+0x10]
  4111be:	mov    edx,DWORD PTR [rax+0x14]
  4111c1:	movzx  r8d,WORD PTR [rdi+0xea]
  4111c9:	mov    r9d,DWORD PTR [rax+0x18]
  4111cd:	call   411020 <flatcc_builder_create_vector@@Base>
  4111d2:	mov    ebp,eax
  4111d4:	test   eax,eax
  4111d6:	je     411241 <flatcc_builder_end_vector@@Base+0xa1>
  4111d8:	mov    rdi,QWORD PTR [rbx+0x18]
  4111dc:	mov    edx,DWORD PTR [rbx+0x20]
  4111df:	xor    esi,esi
  4111e1:	call   4040b0 <memset@plt>
  4111e6:	mov    rax,QWORD PTR [rbx+0x30]
  4111ea:	mov    ecx,DWORD PTR [rax+0x8]
  4111ed:	mov    DWORD PTR [rbx+0x20],ecx
  4111f0:	mov    ecx,DWORD PTR [rax]
  4111f2:	mov    DWORD PTR [rbx+0x28],ecx
  4111f5:	mov    edx,DWORD PTR [rax+0x4]
  4111f8:	mov    rsi,rcx
  4111fb:	add    rsi,QWORD PTR [rbx+0x68]
  4111ff:	mov    QWORD PTR [rbx+0x18],rsi
  411203:	mov    esi,DWORD PTR [rbx+0x70]
  411206:	sub    esi,ecx
  411208:	cmp    esi,edx
  41120a:	cmova  esi,edx
  41120d:	mov    DWORD PTR [rbx+0x24],esi
  411210:	movzx  ecx,WORD PTR [rbx+0xea]
  411217:	cmp    WORD PTR [rbx+0xe8],cx
  41121e:	jae    411227 <flatcc_builder_end_vector@@Base+0x87>
  411220:	mov    WORD PTR [rbx+0xe8],cx
  411227:	movzx  ecx,WORD PTR [rax+0xc]
  41122b:	mov    WORD PTR [rbx+0xea],cx
  411232:	add    rax,0xffffffffffffffdc
  411236:	mov    QWORD PTR [rbx+0x30],rax
  41123a:	add    DWORD PTR [rbx+0x104],0xffffffff
  411241:	mov    eax,ebp
  411243:	add    rsp,0x8
  411247:	pop    rbx
  411248:	pop    rbp
  411249:	ret    
  41124a:	lea    rdi,[rip+0x7d4e]        # 418f9f <flatcc_builder_padding_base@@Base+0x5bf>
  411251:	lea    rsi,[rip+0x7a0a]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  411258:	lea    rcx,[rip+0x8425]        # 419684 <flatcc_builder_padding_base@@Base+0xca4>
  41125f:	mov    edx,0x578
  411264:	call   4040a0 <__assert_fail@plt>
  411269:	nop    DWORD PTR [rax+0x0]

0000000000411270 <flatcc_builder_vector_count@@Base>:
  411270:	mov    rax,QWORD PTR [rdi+0x30]
  411274:	mov    eax,DWORD PTR [rax+0x14]
  411277:	ret    
  411278:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000411280 <flatcc_builder_vector_edit@@Base>:
  411280:	mov    rax,QWORD PTR [rdi+0x18]
  411284:	ret    
  411285:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41128f:	nop

0000000000411290 <flatcc_builder_create_offset_vector_direct@@Base>:
  411290:	xor    ecx,ecx
  411292:	jmp    4112a0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  411294:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41129e:	xchg   ax,ax
  4112a0:	push   r14
  4112a2:	push   rbx
  4112a3:	sub    rsp,0x98
  4112aa:	mov    r10,rdx
  4112ad:	xor    ebx,ebx
  4112af:	test   r10d,0xc0000000
  4112b6:	jne    41140a <flatcc_builder_create_offset_vector_direct@@Base+0x17a>
  4112bc:	mov    r14,rdi
  4112bf:	movzx  edx,WORD PTR [rdi+0xe8]
  4112c6:	cmp    edx,0x3
  4112c9:	ja     4112d5 <flatcc_builder_create_offset_vector_direct@@Base+0x45>
  4112cb:	mov    WORD PTR [r14+0xe8],0x4
  4112d5:	lea    r8d,[r10*4+0x0]
  4112dd:	mov    DWORD PTR [rsp+0x4],r10d
  4112e2:	mov    ebx,DWORD PTR [r14+0xf0]
  4112e9:	mov    r9d,ebx
  4112ec:	and    r9d,0x3
  4112f0:	mov    QWORD PTR [rsp+0x8],0x4
  4112f9:	lea    rdx,[rsp+0x4]
  4112fe:	mov    QWORD PTR [rsp+0x18],rdx
  411303:	mov    QWORD PTR [rsp+0x20],0x4
  41130c:	mov    DWORD PTR [rsp+0x10],0x1
  411314:	test   r8d,r8d
  411317:	je     411417 <flatcc_builder_create_offset_vector_direct@@Base+0x187>
  41131d:	mov    edx,r8d
  411320:	lea    r8,[rdx+0x4]
  411324:	mov    QWORD PTR [rsp+0x8],r8
  411329:	mov    QWORD PTR [rsp+0x28],rsi
  41132e:	mov    QWORD PTR [rsp+0x30],rdx
  411333:	mov    DWORD PTR [rsp+0x10],0x2
  41133b:	mov    edx,0x2
  411340:	test   r9d,r9d
  411343:	je     41136b <flatcc_builder_create_offset_vector_direct@@Base+0xdb>
  411345:	add    r8,r9
  411348:	mov    QWORD PTR [rsp+0x8],r8
  41134d:	mov    edi,edx
  41134f:	shl    rdi,0x4
  411353:	lea    rax,[rip+0x7686]        # 4189e0 <flatcc_builder_padding_base@@Base>
  41135a:	mov    QWORD PTR [rsp+rdi*1+0x18],rax
  41135f:	mov    QWORD PTR [rsp+rdi*1+0x20],r9
  411364:	add    edx,0x1
  411367:	mov    DWORD PTR [rsp+0x10],edx
  41136b:	test   r10d,r10d
  41136e:	je     4113c6 <flatcc_builder_create_offset_vector_direct@@Base+0x136>
  411370:	mov    edi,0xfffffffc
  411375:	sub    edi,ebx
  411377:	add    edi,r8d
  41137a:	mov    r9d,r10d
  41137d:	xor    ebx,ebx
  41137f:	nop
  411380:	mov    eax,DWORD PTR [rsi+rbx*4]
  411383:	test   eax,eax
  411385:	je     4113a0 <flatcc_builder_create_offset_vector_direct@@Base+0x110>
  411387:	add    eax,edi
  411389:	mov    DWORD PTR [rsi+rbx*4],eax
  41138c:	test   rcx,rcx
  41138f:	je     4113b3 <flatcc_builder_create_offset_vector_direct@@Base+0x123>
  411391:	cmp    BYTE PTR [rcx+rbx*1],0x0
  411395:	jne    4113b3 <flatcc_builder_create_offset_vector_direct@@Base+0x123>
  411397:	jmp    411430 <flatcc_builder_create_offset_vector_direct@@Base+0x1a0>
  41139c:	nop    DWORD PTR [rax+0x0]
  4113a0:	test   rcx,rcx
  4113a3:	je     41144f <flatcc_builder_create_offset_vector_direct@@Base+0x1bf>
  4113a9:	cmp    BYTE PTR [rcx+rbx*1],0x0
  4113ad:	jne    41146e <flatcc_builder_create_offset_vector_direct@@Base+0x1de>
  4113b3:	add    rbx,0x1
  4113b7:	add    edi,0xfffffffc
  4113ba:	cmp    rbx,r9
  4113bd:	jb     411380 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  4113bf:	mov    ebx,DWORD PTR [r14+0xf0]
  4113c6:	cmp    r8,0x11
  4113ca:	setb   al
  4113cd:	lea    rcx,[r8-0x10]
  4113d1:	shr    rcx,0x20
  4113d5:	sete   cl
  4113d8:	test   r8d,r8d
  4113db:	jle    41148d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  4113e1:	or     al,cl
  4113e3:	je     41148d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  4113e9:	sub    ebx,r8d
  4113ec:	mov    rdi,QWORD PTR [r14+0x38]
  4113f0:	lea    rsi,[rsp+0x18]
  4113f5:	mov    ecx,ebx
  4113f7:	call   QWORD PTR [r14+0x48]
  4113fb:	test   eax,eax
  4113fd:	jne    4114ac <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  411403:	mov    DWORD PTR [r14+0xf0],ebx
  41140a:	mov    eax,ebx
  41140c:	add    rsp,0x98
  411413:	pop    rbx
  411414:	pop    r14
  411416:	ret    
  411417:	mov    edx,0x1
  41141c:	mov    r8d,0x4
  411422:	test   r9d,r9d
  411425:	jne    411345 <flatcc_builder_create_offset_vector_direct@@Base+0xb5>
  41142b:	jmp    41136b <flatcc_builder_create_offset_vector_direct@@Base+0xdb>
  411430:	lea    rdi,[rip+0x89df]        # 419e16 <flatcc_builder_padding_base@@Base+0x1436>
  411437:	lea    rsi,[rip+0x7824]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  41143e:	lea    rcx,[rip+0x89df]        # 419e24 <flatcc_builder_padding_base@@Base+0x1444>
  411445:	mov    edx,0x5b1
  41144a:	call   4040a0 <__assert_fail@plt>
  41144f:	lea    rdi,[rip+0x89cc]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  411456:	lea    rsi,[rip+0x7805]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  41145d:	lea    rcx,[rip+0x89c0]        # 419e24 <flatcc_builder_padding_base@@Base+0x1444>
  411464:	mov    edx,0x5b7
  411469:	call   4040a0 <__assert_fail@plt>
  41146e:	lea    rdi,[rip+0x8a32]        # 419ea7 <flatcc_builder_padding_base@@Base+0x14c7>
  411475:	lea    rsi,[rip+0x77e6]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  41147c:	lea    rcx,[rip+0x89a1]        # 419e24 <flatcc_builder_padding_base@@Base+0x1444>
  411483:	mov    edx,0x5b5
  411488:	call   4040a0 <__assert_fail@plt>
  41148d:	lea    rdi,[rip+0x898e]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  411494:	lea    rsi,[rip+0x77c7]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  41149b:	lea    rcx,[rip+0x883f]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  4114a2:	mov    edx,0x287
  4114a7:	call   4040a0 <__assert_fail@plt>
  4114ac:	lea    rdi,[rip+0x896f]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  4114b3:	lea    rsi,[rip+0x77a8]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  4114ba:	lea    rcx,[rip+0x8820]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  4114c1:	mov    edx,0x28b
  4114c6:	call   4040a0 <__assert_fail@plt>
  4114cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004114d0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  4114d0:	push   rbp
  4114d1:	push   rbx
  4114d2:	push   rax
  4114d3:	mov    rcx,QWORD PTR [rdi+0x30]
  4114d7:	movzx  edx,WORD PTR [rcx+0xe]
  4114db:	cmp    edx,0x5
  4114de:	jne    411571 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa1>
  4114e4:	mov    rax,rsi
  4114e7:	mov    rbx,rdi
  4114ea:	mov    rsi,QWORD PTR [rdi+0x18]
  4114ee:	mov    edx,DWORD PTR [rcx+0x14]
  4114f1:	mov    rcx,rax
  4114f4:	call   4112a0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  4114f9:	mov    ebp,eax
  4114fb:	test   eax,eax
  4114fd:	je     411568 <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
  4114ff:	mov    rdi,QWORD PTR [rbx+0x18]
  411503:	mov    edx,DWORD PTR [rbx+0x20]
  411506:	xor    esi,esi
  411508:	call   4040b0 <memset@plt>
  41150d:	mov    rax,QWORD PTR [rbx+0x30]
  411511:	mov    ecx,DWORD PTR [rax+0x8]
  411514:	mov    DWORD PTR [rbx+0x20],ecx
  411517:	mov    ecx,DWORD PTR [rax]
  411519:	mov    DWORD PTR [rbx+0x28],ecx
  41151c:	mov    edx,DWORD PTR [rax+0x4]
  41151f:	mov    rsi,rcx
  411522:	add    rsi,QWORD PTR [rbx+0x68]
  411526:	mov    QWORD PTR [rbx+0x18],rsi
  41152a:	mov    esi,DWORD PTR [rbx+0x70]
  41152d:	sub    esi,ecx
  41152f:	cmp    esi,edx
  411531:	cmova  esi,edx
  411534:	mov    DWORD PTR [rbx+0x24],esi
  411537:	movzx  ecx,WORD PTR [rbx+0xea]
  41153e:	cmp    WORD PTR [rbx+0xe8],cx
  411545:	jae    41154e <flatcc_builder_end_offset_vector_for_unions@@Base+0x7e>
  411547:	mov    WORD PTR [rbx+0xe8],cx
  41154e:	movzx  ecx,WORD PTR [rax+0xc]
  411552:	mov    WORD PTR [rbx+0xea],cx
  411559:	add    rax,0xffffffffffffffdc
  41155d:	mov    QWORD PTR [rbx+0x30],rax
  411561:	add    DWORD PTR [rbx+0x104],0xffffffff
  411568:	mov    eax,ebp
  41156a:	add    rsp,0x8
  41156e:	pop    rbx
  41156f:	pop    rbp
  411570:	ret    
  411571:	lea    rdi,[rip+0x7b20]        # 419098 <flatcc_builder_padding_base@@Base+0x6b8>
  411578:	lea    rsi,[rip+0x76e3]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  41157f:	lea    rcx,[rip+0x818b]        # 419711 <flatcc_builder_padding_base@@Base+0xd31>
  411586:	mov    edx,0x5d5
  41158b:	call   4040a0 <__assert_fail@plt>

0000000000411590 <flatcc_builder_offset_vector_edit@@Base>:
  411590:	mov    rax,QWORD PTR [rdi+0x18]
  411594:	ret    
  411595:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41159f:	nop

00000000004115a0 <flatcc_builder_offset_vector_count@@Base>:
  4115a0:	mov    rax,QWORD PTR [rdi+0x30]
  4115a4:	mov    eax,DWORD PTR [rax+0x14]
  4115a7:	ret    
  4115a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004115b0 <flatcc_builder_table_add_union@@Base>:
  4115b0:	push   rbp
  4115b1:	push   r15
  4115b3:	push   r14
  4115b5:	push   rbx
  4115b6:	push   rax
  4115b7:	mov    rax,QWORD PTR [rdi+0x30]
  4115bb:	movzx  eax,WORD PTR [rax+0xe]
  4115bf:	cmp    eax,0x3
  4115c2:	jne    411621 <flatcc_builder_table_add_union@@Base+0x71>
  4115c4:	mov    r14,rdx
  4115c7:	mov    ebp,esi
  4115c9:	mov    r15,rdi
  4115cc:	mov    rbx,rdx
  4115cf:	shr    rbx,0x20
  4115d3:	test   r14b,r14b
  4115d6:	jne    4115dc <flatcc_builder_table_add_union@@Base+0x2c>
  4115d8:	test   ebx,ebx
  4115da:	jne    411640 <flatcc_builder_table_add_union@@Base+0x90>
  4115dc:	test   ebx,ebx
  4115de:	je     4115f5 <flatcc_builder_table_add_union@@Base+0x45>
  4115e0:	mov    rdi,r15
  4115e3:	mov    esi,ebp
  4115e5:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4115ea:	test   rax,rax
  4115ed:	je     41167e <flatcc_builder_table_add_union@@Base+0xce>
  4115f3:	mov    DWORD PTR [rax],ebx
  4115f5:	add    ebp,0xffffffff
  4115f8:	mov    edx,0x1
  4115fd:	mov    ecx,0x1
  411602:	mov    rdi,r15
  411605:	mov    esi,ebp
  411607:	call   411800 <flatcc_builder_table_add@@Base>
  41160c:	test   rax,rax
  41160f:	je     41165f <flatcc_builder_table_add_union@@Base+0xaf>
  411611:	mov    BYTE PTR [rax],r14b
  411614:	xor    eax,eax
  411616:	add    rsp,0x8
  41161a:	pop    rbx
  41161b:	pop    r14
  41161d:	pop    r15
  41161f:	pop    rbp
  411620:	ret    
  411621:	lea    rdi,[rip+0x7e69]        # 419491 <flatcc_builder_padding_base@@Base+0xab1>
  411628:	lea    rsi,[rip+0x7633]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  41162f:	lea    rcx,[rip+0x814d]        # 419783 <flatcc_builder_padding_base@@Base+0xda3>
  411636:	mov    edx,0x5ee
  41163b:	call   4040a0 <__assert_fail@plt>
  411640:	lea    rdi,[rip+0x8194]        # 4197db <flatcc_builder_padding_base@@Base+0xdfb>
  411647:	lea    rsi,[rip+0x7614]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  41164e:	lea    rcx,[rip+0x812e]        # 419783 <flatcc_builder_padding_base@@Base+0xda3>
  411655:	mov    edx,0x5ef
  41165a:	call   4040a0 <__assert_fail@plt>
  41165f:	lea    rdi,[rip+0x81a1]        # 419807 <flatcc_builder_padding_base@@Base+0xe27>
  411666:	lea    rsi,[rip+0x75f5]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  41166d:	lea    rcx,[rip+0x810f]        # 419783 <flatcc_builder_padding_base@@Base+0xda3>
  411674:	mov    edx,0x5f6
  411679:	call   4040a0 <__assert_fail@plt>
  41167e:	lea    rdi,[rip+0x8178]        # 4197fd <flatcc_builder_padding_base@@Base+0xe1d>
  411685:	lea    rsi,[rip+0x75d6]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  41168c:	lea    rcx,[rip+0x80f0]        # 419783 <flatcc_builder_padding_base@@Base+0xda3>
  411693:	mov    edx,0x5f2
  411698:	call   4040a0 <__assert_fail@plt>
  41169d:	nop    DWORD PTR [rax]

00000000004116a0 <flatcc_builder_table_add_offset@@Base>:
  4116a0:	push   rbp
  4116a1:	push   r15
  4116a3:	push   r14
  4116a5:	push   rbx
  4116a6:	push   rax
  4116a7:	mov    rax,QWORD PTR [rdi+0x30]
  4116ab:	movzx  eax,WORD PTR [rax+0xe]
  4116af:	cmp    eax,0x3
  4116b2:	jne    41179e <flatcc_builder_table_add_offset@@Base+0xfe>
  4116b8:	mov    r14d,esi
  4116bb:	cmp    esi,0x7ffd
  4116c1:	jae    4117bd <flatcc_builder_table_add_offset@@Base+0x11d>
  4116c7:	mov    rbx,rdi
  4116ca:	mov    rax,QWORD PTR [rdi+0x8]
  4116ce:	movsxd rcx,r14d
  4116d1:	cmp    WORD PTR [rax+rcx*2],0x0
  4116d6:	jne    4117dc <flatcc_builder_table_add_offset@@Base+0x13c>
  4116dc:	mov    ecx,DWORD PTR [rbx+0x14]
  4116df:	xor    ecx,r14d
  4116e2:	imul   ecx,ecx,0x9e3779b1
  4116e8:	xor    ecx,0x4
  4116eb:	imul   ecx,ecx,0x9e3779b1
  4116f1:	mov    DWORD PTR [rbx+0x14],ecx
  4116f4:	mov    ebp,DWORD PTR [rbx+0x20]
  4116f7:	mov    ecx,DWORD PTR [rbx+0x24]
  4116fa:	add    ebp,0x3
  4116fd:	and    ebp,0xfffffffc
  411700:	lea    r15,[rbp+0x4]
  411704:	mov    DWORD PTR [rbx+0x20],r15d
  411708:	cmp    ecx,r15d
  41170b:	jae    411767 <flatcc_builder_table_add_offset@@Base+0xc7>
  41170d:	lea    eax,[rbp+0x4]
  411710:	lea    rsi,[rbx+0x68]
  411714:	mov    rdi,QWORD PTR [rbx+0x40]
  411718:	mov    edx,DWORD PTR [rbx+0x28]
  41171b:	add    rdx,rax
  41171e:	mov    ecx,0x1
  411723:	mov    r8d,0x1
  411729:	call   QWORD PTR [rbx+0x50]
  41172c:	test   eax,eax
  41172e:	je     411734 <flatcc_builder_table_add_offset@@Base+0x94>
  411730:	xor    ebp,ebp
  411732:	jmp    411790 <flatcc_builder_table_add_offset@@Base+0xf0>
  411734:	mov    eax,DWORD PTR [rbx+0x28]
  411737:	mov    rcx,rax
  41173a:	add    rcx,QWORD PTR [rbx+0x68]
  41173e:	mov    QWORD PTR [rbx+0x18],rcx
  411742:	mov    ecx,DWORD PTR [rbx+0x70]
  411745:	sub    ecx,eax
  411747:	cmp    ecx,0xfffc
  41174d:	mov    eax,0xfffc
  411752:	cmovb  eax,ecx
  411755:	mov    DWORD PTR [rbx+0x24],eax
  411758:	mov    rax,QWORD PTR [rbx+0x30]
  41175c:	mov    DWORD PTR [rax+0x4],0xfffc
  411763:	mov    rax,QWORD PTR [rbx+0x8]
  411767:	movzx  ecx,r14w
  41176b:	mov    WORD PTR [rax+rcx*2],r15w
  411770:	cmp    WORD PTR [rbx+0x10],cx
  411774:	ja     41177f <flatcc_builder_table_add_offset@@Base+0xdf>
  411776:	add    r14d,0x1
  41177a:	mov    WORD PTR [rbx+0x10],r14w
  41177f:	mov    rax,QWORD PTR [rbx]
  411782:	lea    rcx,[rax+0x2]
  411786:	mov    QWORD PTR [rbx],rcx
  411789:	mov    WORD PTR [rax],bp
  41178c:	add    rbp,QWORD PTR [rbx+0x18]
  411790:	mov    rax,rbp
  411793:	add    rsp,0x8
  411797:	pop    rbx
  411798:	pop    r14
  41179a:	pop    r15
  41179c:	pop    rbp
  41179d:	ret    
  41179e:	lea    rdi,[rip+0x7cec]        # 419491 <flatcc_builder_padding_base@@Base+0xab1>
  4117a5:	lea    rsi,[rip+0x74b6]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  4117ac:	lea    rcx,[rip+0x83d2]        # 419b85 <flatcc_builder_padding_base@@Base+0x11a5>
  4117b3:	mov    edx,0x713
  4117b8:	call   4040a0 <__assert_fail@plt>
  4117bd:	lea    rdi,[rip+0x8341]        # 419b05 <flatcc_builder_padding_base@@Base+0x1125>
  4117c4:	lea    rsi,[rip+0x7497]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  4117cb:	lea    rcx,[rip+0x83b3]        # 419b85 <flatcc_builder_padding_base@@Base+0x11a5>
  4117d2:	mov    edx,0x714
  4117d7:	call   4040a0 <__assert_fail@plt>
  4117dc:	lea    rdi,[rip+0x863f]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  4117e3:	lea    rsi,[rip+0x7478]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  4117ea:	lea    rcx,[rip+0x8394]        # 419b85 <flatcc_builder_padding_base@@Base+0x11a5>
  4117f1:	mov    edx,0x71b
  4117f6:	call   4040a0 <__assert_fail@plt>
  4117fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000411800 <flatcc_builder_table_add@@Base>:
  411800:	push   rbp
  411801:	push   r14
  411803:	push   rbx
  411804:	mov    rax,QWORD PTR [rdi+0x30]
  411808:	movzx  eax,WORD PTR [rax+0xe]
  41180c:	cmp    eax,0x3
  41180f:	jne    4118fc <flatcc_builder_table_add@@Base+0xfc>
  411815:	mov    r14d,esi
  411818:	cmp    esi,0x7ffd
  41181e:	jae    41191b <flatcc_builder_table_add@@Base+0x11b>
  411824:	mov    rbx,rdi
  411827:	cmp    WORD PTR [rdi+0xea],cx
  41182e:	jae    411837 <flatcc_builder_table_add@@Base+0x37>
  411830:	mov    WORD PTR [rbx+0xea],cx
  411837:	mov    rsi,QWORD PTR [rbx+0x8]
  41183b:	movsxd rax,r14d
  41183e:	cmp    WORD PTR [rsi+rax*2],0x0
  411843:	jne    41193a <flatcc_builder_table_add@@Base+0x13a>
  411849:	mov    eax,DWORD PTR [rbx+0x14]
  41184c:	xor    eax,r14d
  41184f:	imul   eax,eax,0x9e3779b1
  411855:	xor    eax,edx
  411857:	imul   eax,eax,0x9e3779b1
  41185d:	mov    DWORD PTR [rbx+0x14],eax
  411860:	mov    eax,DWORD PTR [rbx+0x20]
  411863:	movzx  ebp,cx
  411866:	lea    eax,[rax+rbp*1]
  411869:	add    eax,0xffffffff
  41186c:	neg    ebp
  41186e:	and    ebp,eax
  411870:	add    edx,ebp
  411872:	mov    DWORD PTR [rbx+0x20],edx
  411875:	cmp    edx,DWORD PTR [rbx+0x24]
  411878:	jb     4118d7 <flatcc_builder_table_add@@Base+0xd7>
  41187a:	add    edx,0x1
  41187d:	lea    rsi,[rbx+0x68]
  411881:	mov    rdi,QWORD PTR [rbx+0x40]
  411885:	mov    eax,DWORD PTR [rbx+0x28]
  411888:	add    rax,rdx
  41188b:	mov    ecx,0x1
  411890:	mov    r8d,0x1
  411896:	mov    rdx,rax
  411899:	call   QWORD PTR [rbx+0x50]
  41189c:	test   eax,eax
  41189e:	je     4118a4 <flatcc_builder_table_add@@Base+0xa4>
  4118a0:	xor    eax,eax
  4118a2:	jmp    4118f7 <flatcc_builder_table_add@@Base+0xf7>
  4118a4:	mov    eax,DWORD PTR [rbx+0x28]
  4118a7:	mov    rcx,rax
  4118aa:	add    rcx,QWORD PTR [rbx+0x68]
  4118ae:	mov    QWORD PTR [rbx+0x18],rcx
  4118b2:	mov    ecx,DWORD PTR [rbx+0x70]
  4118b5:	sub    ecx,eax
  4118b7:	cmp    ecx,0xfffc
  4118bd:	mov    eax,0xfffc
  4118c2:	cmovb  eax,ecx
  4118c5:	mov    DWORD PTR [rbx+0x24],eax
  4118c8:	mov    rax,QWORD PTR [rbx+0x30]
  4118cc:	mov    DWORD PTR [rax+0x4],0xfffc
  4118d3:	mov    rsi,QWORD PTR [rbx+0x8]
  4118d7:	mov    eax,ebp
  4118d9:	add    ebp,0x4
  4118dc:	movzx  ecx,r14w
  4118e0:	mov    WORD PTR [rsi+rcx*2],bp
  4118e4:	cmp    WORD PTR [rbx+0x10],cx
  4118e8:	ja     4118f3 <flatcc_builder_table_add@@Base+0xf3>
  4118ea:	add    r14d,0x1
  4118ee:	mov    WORD PTR [rbx+0x10],r14w
  4118f3:	add    rax,QWORD PTR [rbx+0x18]
  4118f7:	pop    rbx
  4118f8:	pop    r14
  4118fa:	pop    rbp
  4118fb:	ret    
  4118fc:	lea    rdi,[rip+0x7b8e]        # 419491 <flatcc_builder_padding_base@@Base+0xab1>
  411903:	lea    rsi,[rip+0x7358]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  41190a:	lea    rcx,[rip+0x81aa]        # 419abb <flatcc_builder_padding_base@@Base+0x10db>
  411911:	mov    edx,0x6ed
  411916:	call   4040a0 <__assert_fail@plt>
  41191b:	lea    rdi,[rip+0x81e3]        # 419b05 <flatcc_builder_padding_base@@Base+0x1125>
  411922:	lea    rsi,[rip+0x7339]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  411929:	lea    rcx,[rip+0x818b]        # 419abb <flatcc_builder_padding_base@@Base+0x10db>
  411930:	mov    edx,0x6ee
  411935:	call   4040a0 <__assert_fail@plt>
  41193a:	lea    rdi,[rip+0x84e1]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  411941:	lea    rsi,[rip+0x731a]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  411948:	lea    rcx,[rip+0x816c]        # 419abb <flatcc_builder_padding_base@@Base+0x10db>
  41194f:	mov    edx,0x6f8
  411954:	call   4040a0 <__assert_fail@plt>
  411959:	nop    DWORD PTR [rax+0x0]

0000000000411960 <flatcc_builder_table_add_union_vector@@Base>:
  411960:	push   r15
  411962:	push   r14
  411964:	push   r12
  411966:	push   rbx
  411967:	push   rax
  411968:	mov    rax,QWORD PTR [rdi+0x30]
  41196c:	movzx  eax,WORD PTR [rax+0xe]
  411970:	cmp    eax,0x3
  411973:	jne    4119c9 <flatcc_builder_table_add_union_vector@@Base+0x69>
  411975:	mov    rbx,rdx
  411978:	mov    r12,rdx
  41197b:	shr    r12,0x20
  41197f:	test   ebx,ebx
  411981:	sete   al
  411984:	test   r12d,r12d
  411987:	sete   cl
  41198a:	cmp    al,cl
  41198c:	jne    4119e8 <flatcc_builder_table_add_union_vector@@Base+0x88>
  41198e:	test   ebx,ebx
  411990:	je     4119bb <flatcc_builder_table_add_union_vector@@Base+0x5b>
  411992:	mov    r14d,esi
  411995:	mov    r15,rdi
  411998:	lea    esi,[r14-0x1]
  41199c:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4119a1:	test   rax,rax
  4119a4:	je     411a07 <flatcc_builder_table_add_union_vector@@Base+0xa7>
  4119a6:	mov    DWORD PTR [rax],ebx
  4119a8:	mov    rdi,r15
  4119ab:	mov    esi,r14d
  4119ae:	call   4116a0 <flatcc_builder_table_add_offset@@Base>
  4119b3:	test   rax,rax
  4119b6:	je     411a26 <flatcc_builder_table_add_union_vector@@Base+0xc6>
  4119b8:	mov    DWORD PTR [rax],r12d
  4119bb:	xor    eax,eax
  4119bd:	add    rsp,0x8
  4119c1:	pop    rbx
  4119c2:	pop    r12
  4119c4:	pop    r14
  4119c6:	pop    r15
  4119c8:	ret    
  4119c9:	lea    rdi,[rip+0x7ac1]        # 419491 <flatcc_builder_padding_base@@Base+0xab1>
  4119d0:	lea    rsi,[rip+0x728b]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  4119d7:	lea    rcx,[rip+0x7e35]        # 419813 <flatcc_builder_padding_base@@Base+0xe33>
  4119de:	mov    edx,0x600
  4119e3:	call   4040a0 <__assert_fail@plt>
  4119e8:	lea    rdi,[rip+0x7e87]        # 419876 <flatcc_builder_padding_base@@Base+0xe96>
  4119ef:	lea    rsi,[rip+0x726c]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  4119f6:	lea    rcx,[rip+0x7e16]        # 419813 <flatcc_builder_padding_base@@Base+0xe33>
  4119fd:	mov    edx,0x601
  411a02:	call   4040a0 <__assert_fail@plt>
  411a07:	lea    rdi,[rip+0x7def]        # 4197fd <flatcc_builder_padding_base@@Base+0xe1d>
  411a0e:	lea    rsi,[rip+0x724d]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  411a15:	lea    rcx,[rip+0x7df7]        # 419813 <flatcc_builder_padding_base@@Base+0xe33>
  411a1c:	mov    edx,0x604
  411a21:	call   4040a0 <__assert_fail@plt>
  411a26:	lea    rdi,[rip+0x7dd0]        # 4197fd <flatcc_builder_padding_base@@Base+0xe1d>
  411a2d:	lea    rsi,[rip+0x722e]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  411a34:	lea    rcx,[rip+0x7dd8]        # 419813 <flatcc_builder_padding_base@@Base+0xe33>
  411a3b:	mov    edx,0x608
  411a40:	call   4040a0 <__assert_fail@plt>
  411a45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411a4f:	nop

0000000000411a50 <flatcc_builder_create_union_vector@@Base>:
  411a50:	push   r15
  411a52:	push   r14
  411a54:	push   r13
  411a56:	push   r12
  411a58:	push   rbx
  411a59:	mov    r14,rdx
  411a5c:	mov    r15,rsi
  411a5f:	mov    rbx,rdi
  411a62:	mov    esi,0x4
  411a67:	call   40f290 <flatcc_builder_start_buffer@@Base+0xe0>
  411a6c:	test   eax,eax
  411a6e:	je     411a80 <flatcc_builder_create_union_vector@@Base+0x30>
  411a70:	xor    r14d,r14d
  411a73:	mov    rax,r14
  411a76:	pop    rbx
  411a77:	pop    r12
  411a79:	pop    r13
  411a7b:	pop    r14
  411a7d:	pop    r15
  411a7f:	ret    
  411a80:	mov    rax,QWORD PTR [rbx+0x30]
  411a84:	mov    DWORD PTR [rax+0x10],0x4
  411a8b:	mov    rax,QWORD PTR [rbx+0x30]
  411a8f:	mov    DWORD PTR [rax+0x14],0x0
  411a96:	mov    rax,QWORD PTR [rbx+0x30]
  411a9a:	mov    WORD PTR [rax+0xe],0x5
  411aa0:	mov    ecx,DWORD PTR [rbx+0x28]
  411aa3:	mov    edx,DWORD PTR [rbx+0x70]
  411aa6:	sub    edx,ecx
  411aa8:	add    rcx,QWORD PTR [rbx+0x68]
  411aac:	mov    QWORD PTR [rbx+0x18],rcx
  411ab0:	cmp    edx,0xfffffffc
  411ab3:	mov    ecx,0xfffffffc
  411ab8:	cmovb  ecx,edx
  411abb:	mov    DWORD PTR [rbx+0x24],ecx
  411abe:	mov    DWORD PTR [rax+0x4],0xfffffffc
  411ac5:	mov    ecx,DWORD PTR [rax+0x14]
  411ac8:	add    ecx,r14d
  411acb:	jb     411d3a <flatcc_builder_create_union_vector@@Base+0x2ea>
  411ad1:	cmp    ecx,0x40000000
  411ad7:	jae    411d3a <flatcc_builder_create_union_vector@@Base+0x2ea>
  411add:	mov    DWORD PTR [rax+0x14],ecx
  411ae0:	mov    r12d,DWORD PTR [rbx+0x20]
  411ae4:	mov    eax,DWORD PTR [rbx+0x24]
  411ae7:	lea    ecx,[r12+r14*4]
  411aeb:	mov    DWORD PTR [rbx+0x20],ecx
  411aee:	cmp    ecx,eax
  411af0:	jae    411b00 <flatcc_builder_create_union_vector@@Base+0xb0>
  411af2:	mov    rsi,QWORD PTR [rbx+0x18]
  411af6:	add    r12,rsi
  411af9:	jne    411b5c <flatcc_builder_create_union_vector@@Base+0x10c>
  411afb:	jmp    411a70 <flatcc_builder_create_union_vector@@Base+0x20>
  411b00:	add    ecx,0x1
  411b03:	lea    rsi,[rbx+0x68]
  411b07:	mov    rdi,QWORD PTR [rbx+0x40]
  411b0b:	mov    edx,DWORD PTR [rbx+0x28]
  411b0e:	add    rdx,rcx
  411b11:	mov    ecx,0x1
  411b16:	mov    r8d,0x1
  411b1c:	call   QWORD PTR [rbx+0x50]
  411b1f:	test   eax,eax
  411b21:	jne    411a70 <flatcc_builder_create_union_vector@@Base+0x20>
  411b27:	mov    eax,DWORD PTR [rbx+0x28]
  411b2a:	mov    rsi,rax
  411b2d:	add    rsi,QWORD PTR [rbx+0x68]
  411b31:	mov    QWORD PTR [rbx+0x18],rsi
  411b35:	mov    ecx,DWORD PTR [rbx+0x70]
  411b38:	sub    ecx,eax
  411b3a:	cmp    ecx,0xfffffffc
  411b3d:	mov    eax,0xfffffffc
  411b42:	cmovb  eax,ecx
  411b45:	mov    DWORD PTR [rbx+0x24],eax
  411b48:	mov    rcx,QWORD PTR [rbx+0x30]
  411b4c:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  411b53:	add    r12,rsi
  411b56:	je     411a70 <flatcc_builder_create_union_vector@@Base+0x20>
  411b5c:	mov    r13d,DWORD PTR [rbx+0x20]
  411b60:	lea    ecx,[r14+r13*1]
  411b64:	mov    DWORD PTR [rbx+0x20],ecx
  411b67:	cmp    ecx,eax
  411b69:	jb     411bbe <flatcc_builder_create_union_vector@@Base+0x16e>
  411b6b:	add    ecx,0x1
  411b6e:	lea    rsi,[rbx+0x68]
  411b72:	mov    rdi,QWORD PTR [rbx+0x40]
  411b76:	mov    edx,DWORD PTR [rbx+0x28]
  411b79:	add    rdx,rcx
  411b7c:	mov    ecx,0x1
  411b81:	mov    r8d,0x1
  411b87:	call   QWORD PTR [rbx+0x50]
  411b8a:	test   eax,eax
  411b8c:	jne    411a70 <flatcc_builder_create_union_vector@@Base+0x20>
  411b92:	mov    eax,DWORD PTR [rbx+0x28]
  411b95:	mov    rsi,rax
  411b98:	add    rsi,QWORD PTR [rbx+0x68]
  411b9c:	mov    QWORD PTR [rbx+0x18],rsi
  411ba0:	mov    ecx,DWORD PTR [rbx+0x70]
  411ba3:	sub    ecx,eax
  411ba5:	cmp    ecx,0xfffffffc
  411ba8:	mov    eax,0xfffffffc
  411bad:	cmovb  eax,ecx
  411bb0:	mov    DWORD PTR [rbx+0x24],eax
  411bb3:	mov    rax,QWORD PTR [rbx+0x30]
  411bb7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  411bbe:	mov    r12,rsi
  411bc1:	add    r12,r13
  411bc4:	je     411a70 <flatcc_builder_create_union_vector@@Base+0x20>
  411bca:	test   r14,r14
  411bcd:	je     411c89 <flatcc_builder_create_union_vector@@Base+0x239>
  411bd3:	lea    rcx,[r14-0x1]
  411bd7:	mov    r8d,r14d
  411bda:	and    r8d,0x3
  411bde:	cmp    rcx,0x3
  411be2:	jae    411bf0 <flatcc_builder_create_union_vector@@Base+0x1a0>
  411be4:	xor    ecx,ecx
  411be6:	test   r8,r8
  411be9:	jne    411c57 <flatcc_builder_create_union_vector@@Base+0x207>
  411beb:	jmp    411c89 <flatcc_builder_create_union_vector@@Base+0x239>
  411bf0:	mov    rdx,r14
  411bf3:	sub    rdx,r8
  411bf6:	lea    rdi,[rsi+r13*1]
  411bfa:	add    rdi,0x3
  411bfe:	xor    ecx,ecx
  411c00:	movzx  eax,BYTE PTR [r15+rcx*8]
  411c05:	mov    BYTE PTR [rdi+rcx*1-0x3],al
  411c09:	mov    eax,DWORD PTR [r15+rcx*8+0x4]
  411c0e:	mov    DWORD PTR [rsi+rcx*4],eax
  411c11:	movzx  eax,BYTE PTR [r15+rcx*8+0x8]
  411c17:	mov    BYTE PTR [rdi+rcx*1-0x2],al
  411c1b:	mov    eax,DWORD PTR [r15+rcx*8+0xc]
  411c20:	mov    DWORD PTR [rsi+rcx*4+0x4],eax
  411c24:	movzx  eax,BYTE PTR [r15+rcx*8+0x10]
  411c2a:	mov    BYTE PTR [rdi+rcx*1-0x1],al
  411c2e:	mov    eax,DWORD PTR [r15+rcx*8+0x14]
  411c33:	mov    DWORD PTR [rsi+rcx*4+0x8],eax
  411c37:	movzx  eax,BYTE PTR [r15+rcx*8+0x18]
  411c3d:	mov    BYTE PTR [rdi+rcx*1],al
  411c40:	mov    eax,DWORD PTR [r15+rcx*8+0x1c]
  411c45:	mov    DWORD PTR [rsi+rcx*4+0xc],eax
  411c49:	add    rcx,0x4
  411c4d:	cmp    rdx,rcx
  411c50:	jne    411c00 <flatcc_builder_create_union_vector@@Base+0x1b0>
  411c52:	test   r8,r8
  411c55:	je     411c89 <flatcc_builder_create_union_vector@@Base+0x239>
  411c57:	lea    rdx,[rsi+rcx*4]
  411c5b:	lea    rdi,[r15+rcx*8]
  411c5f:	add    rdi,0x4
  411c63:	add    r13,rcx
  411c66:	add    r13,rsi
  411c69:	xor    ecx,ecx
  411c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  411c70:	movzx  eax,BYTE PTR [rdi+rcx*8-0x4]
  411c75:	mov    BYTE PTR [r13+rcx*1+0x0],al
  411c7a:	mov    eax,DWORD PTR [rdi+rcx*8]
  411c7d:	mov    DWORD PTR [rdx+rcx*4],eax
  411c80:	add    rcx,0x1
  411c84:	cmp    r8,rcx
  411c87:	jne    411c70 <flatcc_builder_create_union_vector@@Base+0x220>
  411c89:	mov    rdi,rbx
  411c8c:	mov    rdx,r14
  411c8f:	mov    rcx,r12
  411c92:	call   4112a0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  411c97:	mov    r15d,eax
  411c9a:	test   eax,eax
  411c9c:	je     411cc2 <flatcc_builder_create_union_vector@@Base+0x272>
  411c9e:	mov    ecx,0x1
  411ca3:	mov    r8d,0x1
  411ca9:	mov    r9d,0xffffffff
  411caf:	mov    rdi,rbx
  411cb2:	mov    rsi,r12
  411cb5:	mov    rdx,r14
  411cb8:	call   411020 <flatcc_builder_create_vector@@Base>
  411cbd:	mov    r14d,eax
  411cc0:	jmp    411cc5 <flatcc_builder_create_union_vector@@Base+0x275>
  411cc2:	xor    r14d,r14d
  411cc5:	shl    r15,0x20
  411cc9:	mov    rdi,QWORD PTR [rbx+0x18]
  411ccd:	mov    edx,DWORD PTR [rbx+0x20]
  411cd0:	xor    esi,esi
  411cd2:	call   4040b0 <memset@plt>
  411cd7:	mov    rax,QWORD PTR [rbx+0x30]
  411cdb:	mov    ecx,DWORD PTR [rax+0x8]
  411cde:	mov    DWORD PTR [rbx+0x20],ecx
  411ce1:	mov    ecx,DWORD PTR [rax]
  411ce3:	mov    DWORD PTR [rbx+0x28],ecx
  411ce6:	mov    edx,DWORD PTR [rax+0x4]
  411ce9:	mov    rsi,rcx
  411cec:	add    rsi,QWORD PTR [rbx+0x68]
  411cf0:	mov    QWORD PTR [rbx+0x18],rsi
  411cf4:	mov    esi,DWORD PTR [rbx+0x70]
  411cf7:	sub    esi,ecx
  411cf9:	cmp    esi,edx
  411cfb:	cmova  esi,edx
  411cfe:	mov    DWORD PTR [rbx+0x24],esi
  411d01:	movzx  ecx,WORD PTR [rbx+0xea]
  411d08:	cmp    WORD PTR [rbx+0xe8],cx
  411d0f:	jae    411d18 <flatcc_builder_create_union_vector@@Base+0x2c8>
  411d11:	mov    WORD PTR [rbx+0xe8],cx
  411d18:	or     r14,r15
  411d1b:	movzx  ecx,WORD PTR [rax+0xc]
  411d1f:	mov    WORD PTR [rbx+0xea],cx
  411d26:	add    rax,0xffffffffffffffdc
  411d2a:	mov    QWORD PTR [rbx+0x30],rax
  411d2e:	add    DWORD PTR [rbx+0x104],0xffffffff
  411d35:	jmp    411a73 <flatcc_builder_create_union_vector@@Base+0x23>
  411d3a:	lea    rdi,[rip+0x7fea]        # 419d2b <flatcc_builder_padding_base@@Base+0x134b>
  411d41:	lea    rsi,[rip+0x6f1a]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  411d48:	lea    rcx,[rip+0x7ff7]        # 419d46 <flatcc_builder_padding_base@@Base+0x1366>
  411d4f:	mov    edx,0x37c
  411d54:	call   4040a0 <__assert_fail@plt>
  411d59:	nop    DWORD PTR [rax+0x0]

0000000000411d60 <flatcc_builder_create_union_vector_direct@@Base>:
  411d60:	push   r15
  411d62:	push   r14
  411d64:	push   r12
  411d66:	push   rbx
  411d67:	push   rax
  411d68:	mov    r14,rcx
  411d6b:	mov    r15,rsi
  411d6e:	mov    r12,rdi
  411d71:	mov    rsi,rdx
  411d74:	mov    rdx,rcx
  411d77:	mov    rcx,r15
  411d7a:	call   4112a0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  411d7f:	mov    ebx,eax
  411d81:	test   eax,eax
  411d83:	je     411da8 <flatcc_builder_create_union_vector_direct@@Base+0x48>
  411d85:	mov    ecx,0x1
  411d8a:	mov    r8d,0x1
  411d90:	mov    r9d,0xffffffff
  411d96:	mov    rdi,r12
  411d99:	mov    rsi,r15
  411d9c:	mov    rdx,r14
  411d9f:	call   411020 <flatcc_builder_create_vector@@Base>
  411da4:	mov    eax,eax
  411da6:	jmp    411daa <flatcc_builder_create_union_vector_direct@@Base+0x4a>
  411da8:	xor    eax,eax
  411daa:	shl    rbx,0x20
  411dae:	or     rbx,rax
  411db1:	mov    rax,rbx
  411db4:	add    rsp,0x8
  411db8:	pop    rbx
  411db9:	pop    r12
  411dbb:	pop    r14
  411dbd:	pop    r15
  411dbf:	ret    

0000000000411dc0 <flatcc_builder_start_union_vector@@Base>:
  411dc0:	push   rbx
  411dc1:	mov    rbx,rdi
  411dc4:	mov    esi,0x4
  411dc9:	call   40f290 <flatcc_builder_start_buffer@@Base+0xe0>
  411dce:	mov    ecx,eax
  411dd0:	mov    eax,0xffffffff
  411dd5:	test   ecx,ecx
  411dd7:	je     411ddb <flatcc_builder_start_union_vector@@Base+0x1b>
  411dd9:	pop    rbx
  411dda:	ret    
  411ddb:	mov    rax,QWORD PTR [rbx+0x30]
  411ddf:	mov    DWORD PTR [rax+0x10],0x8
  411de6:	mov    rax,QWORD PTR [rbx+0x30]
  411dea:	mov    DWORD PTR [rax+0x14],0x0
  411df1:	mov    rax,QWORD PTR [rbx+0x30]
  411df5:	mov    WORD PTR [rax+0xe],0x7
  411dfb:	mov    ecx,DWORD PTR [rbx+0x28]
  411dfe:	mov    edx,DWORD PTR [rbx+0x70]
  411e01:	sub    edx,ecx
  411e03:	add    rcx,QWORD PTR [rbx+0x68]
  411e07:	mov    QWORD PTR [rbx+0x18],rcx
  411e0b:	cmp    edx,0xfffffffc
  411e0e:	mov    ecx,0xfffffffc
  411e13:	cmovb  ecx,edx
  411e16:	mov    DWORD PTR [rbx+0x24],ecx
  411e19:	mov    DWORD PTR [rax+0x4],0xfffffffc
  411e20:	xor    eax,eax
  411e22:	pop    rbx
  411e23:	ret    
  411e24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411e2e:	xchg   ax,ax

0000000000411e30 <flatcc_builder_end_union_vector@@Base>:
  411e30:	push   rbp
  411e31:	push   r15
  411e33:	push   r14
  411e35:	push   r13
  411e37:	push   r12
  411e39:	push   rbx
  411e3a:	push   rax
  411e3b:	mov    rax,QWORD PTR [rdi+0x30]
  411e3f:	movzx  ecx,WORD PTR [rax+0xe]
  411e43:	cmp    ecx,0x7
  411e46:	jne    412246 <flatcc_builder_end_union_vector@@Base+0x416>
  411e4c:	mov    r13,rdi
  411e4f:	mov    r14d,DWORD PTR [rax+0x14]
  411e53:	lea    eax,[r14+r14*4]
  411e57:	mov    r12d,DWORD PTR [rdi+0x20]
  411e5b:	add    eax,r12d
  411e5e:	mov    DWORD PTR [rdi+0x20],eax
  411e61:	cmp    eax,DWORD PTR [rdi+0x24]
  411e64:	jae    411e6c <flatcc_builder_end_union_vector@@Base+0x3c>
  411e66:	mov    r8,QWORD PTR [r13+0x18]
  411e6a:	jmp    411ec4 <flatcc_builder_end_union_vector@@Base+0x94>
  411e6c:	add    eax,0x1
  411e6f:	lea    rsi,[r13+0x68]
  411e73:	mov    rdi,QWORD PTR [r13+0x40]
  411e77:	mov    edx,DWORD PTR [r13+0x28]
  411e7b:	add    rdx,rax
  411e7e:	mov    ecx,0x1
  411e83:	mov    r8d,0x1
  411e89:	call   QWORD PTR [r13+0x50]
  411e8d:	test   eax,eax
  411e8f:	jne    412006 <flatcc_builder_end_union_vector@@Base+0x1d6>
  411e95:	mov    eax,DWORD PTR [r13+0x28]
  411e99:	mov    r8,rax
  411e9c:	add    r8,QWORD PTR [r13+0x68]
  411ea0:	mov    QWORD PTR [r13+0x18],r8
  411ea4:	mov    ecx,DWORD PTR [r13+0x70]
  411ea8:	sub    ecx,eax
  411eaa:	cmp    ecx,0xfffffffc
  411ead:	mov    eax,0xfffffffc
  411eb2:	cmovb  eax,ecx
  411eb5:	mov    DWORD PTR [r13+0x24],eax
  411eb9:	mov    rax,QWORD PTR [r13+0x30]
  411ebd:	mov    DWORD PTR [rax+0x4],0xfffffffc
  411ec4:	mov    rsi,r8
  411ec7:	add    rsi,r12
  411eca:	je     412006 <flatcc_builder_end_union_vector@@Base+0x1d6>
  411ed0:	lea    r15,[rsi+r14*4]
  411ed4:	test   r14d,r14d
  411ed7:	je     411fca <flatcc_builder_end_union_vector@@Base+0x19a>
  411edd:	cmp    r14d,0x9
  411ee1:	jae    41209a <flatcc_builder_end_union_vector@@Base+0x26a>
  411ee7:	xor    r9d,r9d
  411eea:	mov    r11d,r14d
  411eed:	sub    r11d,r9d
  411ef0:	mov    r10,r9
  411ef3:	not    r10
  411ef6:	add    r10,r14
  411ef9:	and    r11,0x3
  411efd:	je     411f42 <flatcc_builder_end_union_vector@@Base+0x112>
  411eff:	mov    rdx,r9
  411f02:	neg    rdx
  411f05:	lea    rbp,[r12+r9*4]
  411f09:	add    rbp,r8
  411f0c:	lea    rbx,[r8+r9*8]
  411f10:	add    rbx,0x4
  411f14:	lea    rax,[r9+r14*4]
  411f18:	add    rax,r12
  411f1b:	add    rax,r8
  411f1e:	xor    edi,edi
  411f20:	movzx  ecx,BYTE PTR [rbx+rdi*8-0x4]
  411f25:	mov    BYTE PTR [rax+rdi*1],cl
  411f28:	mov    ecx,DWORD PTR [rbx+rdi*8]
  411f2b:	mov    DWORD PTR [rbp+rdi*4+0x0],ecx
  411f2f:	add    rdx,0xffffffffffffffff
  411f33:	add    rdi,0x1
  411f37:	cmp    r11,rdi
  411f3a:	jne    411f20 <flatcc_builder_end_union_vector@@Base+0xf0>
  411f3c:	neg    rdx
  411f3f:	mov    r9,rdx
  411f42:	cmp    r10,0x3
  411f46:	jb     411fca <flatcc_builder_end_union_vector@@Base+0x19a>
  411f4c:	mov    rbp,r14
  411f4f:	sub    rbp,r9
  411f52:	lea    rcx,[r12+r9*4]
  411f56:	lea    rdx,[r8+rcx*1]
  411f5a:	add    rdx,0xc
  411f5e:	lea    rdi,[r8+r9*8]
  411f62:	add    rdi,0x1c
  411f66:	lea    rcx,[r9+r14*4]
  411f6a:	add    rcx,r12
  411f6d:	add    rcx,r8
  411f70:	add    rcx,0x3
  411f74:	xor    ebx,ebx
  411f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411f80:	movzx  eax,BYTE PTR [rdi+rbx*8-0x1c]
  411f85:	mov    BYTE PTR [rcx+rbx*1-0x3],al
  411f89:	mov    eax,DWORD PTR [rdi+rbx*8-0x18]
  411f8d:	mov    DWORD PTR [rdx+rbx*4-0xc],eax
  411f91:	movzx  eax,BYTE PTR [rdi+rbx*8-0x14]
  411f96:	mov    BYTE PTR [rcx+rbx*1-0x2],al
  411f9a:	mov    eax,DWORD PTR [rdi+rbx*8-0x10]
  411f9e:	mov    DWORD PTR [rdx+rbx*4-0x8],eax
  411fa2:	movzx  eax,BYTE PTR [rdi+rbx*8-0xc]
  411fa7:	mov    BYTE PTR [rcx+rbx*1-0x1],al
  411fab:	mov    eax,DWORD PTR [rdi+rbx*8-0x8]
  411faf:	mov    DWORD PTR [rdx+rbx*4-0x4],eax
  411fb3:	movzx  eax,BYTE PTR [rdi+rbx*8-0x4]
  411fb8:	mov    BYTE PTR [rcx+rbx*1],al
  411fbb:	mov    eax,DWORD PTR [rdi+rbx*8]
  411fbe:	mov    DWORD PTR [rdx+rbx*4],eax
  411fc1:	add    rbx,0x4
  411fc5:	cmp    rbp,rbx
  411fc8:	jne    411f80 <flatcc_builder_end_union_vector@@Base+0x150>
  411fca:	mov    rdi,r13
  411fcd:	mov    rdx,r14
  411fd0:	mov    rcx,r15
  411fd3:	vzeroupper 
  411fd6:	call   4112a0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  411fdb:	mov    r12d,eax
  411fde:	test   eax,eax
  411fe0:	je     41200b <flatcc_builder_end_union_vector@@Base+0x1db>
  411fe2:	mov    ecx,0x1
  411fe7:	mov    r8d,0x1
  411fed:	mov    r9d,0xffffffff
  411ff3:	mov    rdi,r13
  411ff6:	mov    rsi,r15
  411ff9:	mov    rdx,r14
  411ffc:	call   411020 <flatcc_builder_create_vector@@Base>
  412001:	mov    r14d,eax
  412004:	jmp    41200e <flatcc_builder_end_union_vector@@Base+0x1de>
  412006:	xor    r14d,r14d
  412009:	jmp    412088 <flatcc_builder_end_union_vector@@Base+0x258>
  41200b:	xor    r14d,r14d
  41200e:	shl    r12,0x20
  412012:	mov    rdi,QWORD PTR [r13+0x18]
  412016:	mov    edx,DWORD PTR [r13+0x20]
  41201a:	xor    esi,esi
  41201c:	call   4040b0 <memset@plt>
  412021:	mov    rax,QWORD PTR [r13+0x30]
  412025:	mov    ecx,DWORD PTR [rax+0x8]
  412028:	mov    DWORD PTR [r13+0x20],ecx
  41202c:	mov    ecx,DWORD PTR [rax]
  41202e:	mov    DWORD PTR [r13+0x28],ecx
  412032:	mov    edx,DWORD PTR [rax+0x4]
  412035:	mov    rsi,rcx
  412038:	add    rsi,QWORD PTR [r13+0x68]
  41203c:	mov    QWORD PTR [r13+0x18],rsi
  412040:	mov    esi,DWORD PTR [r13+0x70]
  412044:	sub    esi,ecx
  412046:	cmp    esi,edx
  412048:	cmova  esi,edx
  41204b:	mov    DWORD PTR [r13+0x24],esi
  41204f:	movzx  ecx,WORD PTR [r13+0xea]
  412057:	cmp    WORD PTR [r13+0xe8],cx
  41205f:	jae    412069 <flatcc_builder_end_union_vector@@Base+0x239>
  412061:	mov    WORD PTR [r13+0xe8],cx
  412069:	or     r14,r12
  41206c:	movzx  ecx,WORD PTR [rax+0xc]
  412070:	mov    WORD PTR [r13+0xea],cx
  412078:	add    rax,0xffffffffffffffdc
  41207c:	mov    QWORD PTR [r13+0x30],rax
  412080:	add    DWORD PTR [r13+0x104],0xffffffff
  412088:	mov    rax,r14
  41208b:	add    rsp,0x8
  41208f:	pop    rbx
  412090:	pop    r12
  412092:	pop    r13
  412094:	pop    r14
  412096:	pop    r15
  412098:	pop    rbp
  412099:	ret    
  41209a:	lea    rax,[r14-0x1]
  41209e:	mov    ecx,0x8
  4120a3:	mul    rcx
  4120a6:	seto   cl
  4120a9:	lea    rdi,[r8+0x4]
  4120ad:	mov    rdx,rax
  4120b0:	add    rdx,rdi
  4120b3:	setb   dl
  4120b6:	xor    r9d,r9d
  4120b9:	add    rax,r8
  4120bc:	jb     411eea <flatcc_builder_end_union_vector@@Base+0xba>
  4120c2:	test   cl,cl
  4120c4:	jne    411eea <flatcc_builder_end_union_vector@@Base+0xba>
  4120ca:	test   dl,dl
  4120cc:	jne    411eea <flatcc_builder_end_union_vector@@Base+0xba>
  4120d2:	test   cl,cl
  4120d4:	jne    411eea <flatcc_builder_end_union_vector@@Base+0xba>
  4120da:	lea    rcx,[r14+r14*4]
  4120de:	add    rcx,r12
  4120e1:	add    rcx,r8
  4120e4:	lea    rdx,[r8+r14*8]
  4120e8:	add    rdx,0xfffffffffffffff9
  4120ec:	cmp    rdx,r15
  4120ef:	seta   r11b
  4120f3:	lea    rbx,[r8+r14*8]
  4120f7:	cmp    r8,rcx
  4120fa:	setb   r10b
  4120fe:	cmp    rbx,r15
  412101:	seta   al
  412104:	cmp    rdi,rcx
  412107:	setb   bpl
  41210b:	cmp    rsi,rdx
  41210e:	setb   cl
  412111:	cmp    r8,r15
  412114:	setb   BYTE PTR [rsp+0x7]
  412119:	cmp    rsi,rbx
  41211c:	setb   dl
  41211f:	cmp    rdi,r15
  412122:	setb   dil
  412126:	xor    r9d,r9d
  412129:	test   r11b,r10b
  41212c:	jne    411eea <flatcc_builder_end_union_vector@@Base+0xba>
  412132:	and    al,bpl
  412135:	jne    411eea <flatcc_builder_end_union_vector@@Base+0xba>
  41213b:	and    cl,BYTE PTR [rsp+0x7]
  41213f:	jne    411eea <flatcc_builder_end_union_vector@@Base+0xba>
  412145:	and    dl,dil
  412148:	jne    411eea <flatcc_builder_end_union_vector@@Base+0xba>
  41214e:	mov    eax,r14d
  412151:	and    eax,0x7
  412154:	test   rax,rax
  412157:	mov    ecx,0x8
  41215c:	cmovne rcx,rax
  412160:	mov    r9,r14
  412163:	sub    r9,rcx
  412166:	vmovdqa ymm0,YMMWORD PTR [rip+0x6a72]        # 418be0 <flatcc_builder_padding_base@@Base+0x200>
  41216e:	vmovdqa ymm1,YMMWORD PTR [rip+0x6a8a]        # 418c00 <flatcc_builder_padding_base@@Base+0x220>
  412176:	xor    eax,eax
  412178:	vmovdqa xmm8,XMMWORD PTR [rip+0x6aa0]        # 418c20 <flatcc_builder_padding_base@@Base+0x240>
  412180:	vmovdqa xmm9,XMMWORD PTR [rip+0x6aa8]        # 418c30 <flatcc_builder_padding_base@@Base+0x250>
  412188:	vpbroadcastq ymm4,QWORD PTR [rip+0x6aaf]        # 418c40 <flatcc_builder_padding_base@@Base+0x260>
  412191:	vpbroadcastq ymm5,QWORD PTR [rip+0x6aae]        # 418c48 <flatcc_builder_padding_base@@Base+0x268>
  41219a:	mov    rdi,r8
  41219d:	nop    DWORD PTR [rax]
  4121a0:	vmovdqu ymm6,YMMWORD PTR [rdi]
  4121a4:	vmovdqu ymm7,YMMWORD PTR [rdi+0x20]
  4121a9:	vextracti128 xmm2,ymm7,0x1
  4121af:	vpshufb xmm2,xmm2,xmm8
  4121b4:	vpshufb xmm7,xmm7,xmm8
  4121b9:	vpunpcklwd xmm2,xmm7,xmm2
  4121bd:	vextracti128 xmm7,ymm6,0x1
  4121c3:	vpshufb xmm7,xmm7,xmm9
  4121c8:	vpshufb xmm6,xmm6,xmm9
  4121cd:	vpunpcklwd xmm6,xmm6,xmm7
  4121d1:	vpblendd xmm2,xmm6,xmm2,0x2
  4121d7:	vmovq  QWORD PTR [r15+rax*1],xmm2
  4121dd:	vpsllq ymm2,ymm1,0x3
  4121e2:	vmovq  xmm6,r8
  4121e7:	vpbroadcastq ymm6,xmm6
  4121ec:	vpaddq ymm2,ymm6,ymm2
  4121f0:	vpaddq ymm2,ymm2,ymm4
  4121f4:	vpsllq ymm7,ymm0,0x3
  4121f9:	vpaddq ymm6,ymm6,ymm7
  4121fd:	vpaddq ymm6,ymm6,ymm4
  412201:	vpcmpeqd xmm7,xmm7,xmm7
  412205:	vpgatherqd xmm3,DWORD PTR [ymm6*1+0x0],xmm7
  41220f:	vpcmpeqd xmm6,xmm6,xmm6
  412213:	vpgatherqd xmm7,DWORD PTR [ymm2*1+0x0],xmm6
  41221d:	vinserti128 ymm2,ymm7,xmm3,0x1
  412223:	vmovdqu YMMWORD PTR [rsi+rax*4],ymm2
  412228:	add    rax,0x8
  41222c:	vpaddq ymm1,ymm1,ymm5
  412230:	vpaddq ymm0,ymm0,ymm5
  412234:	add    rdi,0x40
  412238:	cmp    r9,rax
  41223b:	jne    4121a0 <flatcc_builder_end_union_vector@@Base+0x370>
  412241:	jmp    411eea <flatcc_builder_end_union_vector@@Base+0xba>
  412246:	lea    rdi,[rip+0x7651]        # 41989e <flatcc_builder_padding_base@@Base+0xebe>
  41224d:	lea    rsi,[rip+0x6a0e]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  412254:	lea    rcx,[rip+0x7675]        # 4198d0 <flatcc_builder_padding_base@@Base+0xef0>
  41225b:	mov    edx,0x651
  412260:	call   4040a0 <__assert_fail@plt>
  412265:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41226f:	nop

0000000000412270 <flatcc_builder_union_vector_count@@Base>:
  412270:	mov    rax,QWORD PTR [rdi+0x30]
  412274:	mov    eax,DWORD PTR [rax+0x14]
  412277:	ret    
  412278:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412280 <flatcc_builder_union_vector_edit@@Base>:
  412280:	mov    rax,QWORD PTR [rdi+0x18]
  412284:	ret    
  412285:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41228f:	nop

0000000000412290 <flatcc_builder_extend_union_vector@@Base>:
  412290:	push   r14
  412292:	push   rbx
  412293:	push   rax
  412294:	mov    rax,QWORD PTR [rdi+0x30]
  412298:	mov    ecx,DWORD PTR [rax+0x14]
  41229b:	add    ecx,esi
  41229d:	jb     412325 <flatcc_builder_extend_union_vector@@Base+0x95>
  4122a3:	cmp    ecx,0x20000000
  4122a9:	jae    412325 <flatcc_builder_extend_union_vector@@Base+0x95>
  4122ab:	mov    rbx,rdi
  4122ae:	mov    DWORD PTR [rax+0x14],ecx
  4122b1:	mov    r14d,DWORD PTR [rdi+0x20]
  4122b5:	lea    eax,[r14+rsi*8]
  4122b9:	mov    DWORD PTR [rdi+0x20],eax
  4122bc:	cmp    eax,DWORD PTR [rdi+0x24]
  4122bf:	jae    4122c7 <flatcc_builder_extend_union_vector@@Base+0x37>
  4122c1:	mov    rax,QWORD PTR [rbx+0x18]
  4122c5:	jmp    41231a <flatcc_builder_extend_union_vector@@Base+0x8a>
  4122c7:	add    eax,0x1
  4122ca:	lea    rsi,[rbx+0x68]
  4122ce:	mov    rdi,QWORD PTR [rbx+0x40]
  4122d2:	mov    edx,DWORD PTR [rbx+0x28]
  4122d5:	add    rdx,rax
  4122d8:	mov    ecx,0x1
  4122dd:	mov    r8d,0x1
  4122e3:	call   QWORD PTR [rbx+0x50]
  4122e6:	test   eax,eax
  4122e8:	je     4122ee <flatcc_builder_extend_union_vector@@Base+0x5e>
  4122ea:	xor    eax,eax
  4122ec:	jmp    41231d <flatcc_builder_extend_union_vector@@Base+0x8d>
  4122ee:	mov    ecx,DWORD PTR [rbx+0x28]
  4122f1:	mov    rax,rcx
  4122f4:	add    rax,QWORD PTR [rbx+0x68]
  4122f8:	mov    QWORD PTR [rbx+0x18],rax
  4122fc:	mov    edx,DWORD PTR [rbx+0x70]
  4122ff:	sub    edx,ecx
  412301:	cmp    edx,0xfffffffc
  412304:	mov    ecx,0xfffffffc
  412309:	cmovb  ecx,edx
  41230c:	mov    DWORD PTR [rbx+0x24],ecx
  41230f:	mov    rcx,QWORD PTR [rbx+0x30]
  412313:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41231a:	add    rax,r14
  41231d:	add    rsp,0x8
  412321:	pop    rbx
  412322:	pop    r14
  412324:	ret    
  412325:	lea    rdi,[rip+0x79ff]        # 419d2b <flatcc_builder_padding_base@@Base+0x134b>
  41232c:	lea    rsi,[rip+0x692f]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  412333:	lea    rcx,[rip+0x7a0c]        # 419d46 <flatcc_builder_padding_base@@Base+0x1366>
  41233a:	mov    edx,0x37c
  41233f:	call   4040a0 <__assert_fail@plt>
  412344:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41234e:	xchg   ax,ax

0000000000412350 <flatcc_builder_truncate_union_vector@@Base>:
  412350:	push   rax
  412351:	mov    rcx,QWORD PTR [rdi+0x30]
  412355:	movzx  edx,WORD PTR [rcx+0xe]
  412359:	cmp    edx,0x7
  41235c:	jne    412390 <flatcc_builder_truncate_union_vector@@Base+0x40>
  41235e:	mov    rax,rsi
  412361:	mov    edx,DWORD PTR [rcx+0x14]
  412364:	sub    edx,eax
  412366:	jb     4123af <flatcc_builder_truncate_union_vector@@Base+0x5f>
  412368:	mov    DWORD PTR [rcx+0x14],edx
  41236b:	mov    rcx,QWORD PTR [rdi+0x30]
  41236f:	imul   eax,DWORD PTR [rcx+0x10]
  412373:	mov    ecx,DWORD PTR [rdi+0x20]
  412376:	sub    ecx,eax
  412378:	mov    DWORD PTR [rdi+0x20],ecx
  41237b:	add    rcx,QWORD PTR [rdi+0x18]
  41237f:	xor    esi,esi
  412381:	mov    rdi,rcx
  412384:	mov    rdx,rax
  412387:	call   4040b0 <memset@plt>
  41238c:	xor    eax,eax
  41238e:	pop    rcx
  41238f:	ret    
  412390:	lea    rdi,[rip+0x7507]        # 41989e <flatcc_builder_padding_base@@Base+0xebe>
  412397:	lea    rsi,[rip+0x68c4]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  41239e:	lea    rcx,[rip+0x757e]        # 419923 <flatcc_builder_padding_base@@Base+0xf43>
  4123a5:	mov    edx,0x681
  4123aa:	call   4040a0 <__assert_fail@plt>
  4123af:	lea    rdi,[rip+0x6f4c]        # 419302 <flatcc_builder_padding_base@@Base+0x922>
  4123b6:	lea    rsi,[rip+0x68a5]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  4123bd:	lea    rcx,[rip+0x755f]        # 419923 <flatcc_builder_padding_base@@Base+0xf43>
  4123c4:	mov    edx,0x682
  4123c9:	call   4040a0 <__assert_fail@plt>
  4123ce:	xchg   ax,ax

00000000004123d0 <flatcc_builder_union_vector_push@@Base>:
  4123d0:	push   r15
  4123d2:	push   r14
  4123d4:	push   rbx
  4123d5:	mov    rax,QWORD PTR [rdi+0x30]
  4123d9:	movzx  ecx,WORD PTR [rax+0xe]
  4123dd:	cmp    ecx,0x7
  4123e0:	jne    41247a <flatcc_builder_union_vector_push@@Base+0xaa>
  4123e6:	mov    ecx,DWORD PTR [rax+0x14]
  4123e9:	cmp    ecx,0x1fffffff
  4123ef:	je     41243c <flatcc_builder_union_vector_push@@Base+0x6c>
  4123f1:	mov    r14,rsi
  4123f4:	mov    rbx,rdi
  4123f7:	add    ecx,0x1
  4123fa:	mov    DWORD PTR [rax+0x14],ecx
  4123fd:	mov    r15d,DWORD PTR [rdi+0x20]
  412401:	lea    eax,[r15+0x8]
  412405:	mov    DWORD PTR [rdi+0x20],eax
  412408:	cmp    eax,DWORD PTR [rdi+0x24]
  41240b:	jae    412418 <flatcc_builder_union_vector_push@@Base+0x48>
  41240d:	mov    rax,QWORD PTR [rbx+0x18]
  412411:	add    rax,r15
  412414:	jne    412471 <flatcc_builder_union_vector_push@@Base+0xa1>
  412416:	jmp    41243c <flatcc_builder_union_vector_push@@Base+0x6c>
  412418:	lea    eax,[r15+0x9]
  41241c:	lea    rsi,[rbx+0x68]
  412420:	mov    rdi,QWORD PTR [rbx+0x40]
  412424:	mov    edx,DWORD PTR [rbx+0x28]
  412427:	add    rdx,rax
  41242a:	mov    ecx,0x1
  41242f:	mov    r8d,0x1
  412435:	call   QWORD PTR [rbx+0x50]
  412438:	test   eax,eax
  41243a:	je     412440 <flatcc_builder_union_vector_push@@Base+0x70>
  41243c:	xor    eax,eax
  41243e:	jmp    412474 <flatcc_builder_union_vector_push@@Base+0xa4>
  412440:	mov    ecx,DWORD PTR [rbx+0x28]
  412443:	mov    rax,rcx
  412446:	add    rax,QWORD PTR [rbx+0x68]
  41244a:	mov    QWORD PTR [rbx+0x18],rax
  41244e:	mov    edx,DWORD PTR [rbx+0x70]
  412451:	sub    edx,ecx
  412453:	cmp    edx,0xfffffffc
  412456:	mov    ecx,0xfffffffc
  41245b:	cmovb  ecx,edx
  41245e:	mov    DWORD PTR [rbx+0x24],ecx
  412461:	mov    rcx,QWORD PTR [rbx+0x30]
  412465:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41246c:	add    rax,r15
  41246f:	je     41243c <flatcc_builder_union_vector_push@@Base+0x6c>
  412471:	mov    QWORD PTR [rax],r14
  412474:	pop    rbx
  412475:	pop    r14
  412477:	pop    r15
  412479:	ret    
  41247a:	lea    rdi,[rip+0x741d]        # 41989e <flatcc_builder_padding_base@@Base+0xebe>
  412481:	lea    rsi,[rip+0x67da]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  412488:	lea    rcx,[rip+0x74d9]        # 419968 <flatcc_builder_padding_base@@Base+0xf88>
  41248f:	mov    edx,0x68d
  412494:	call   4040a0 <__assert_fail@plt>
  412499:	nop    DWORD PTR [rax+0x0]

00000000004124a0 <flatcc_builder_append_union_vector@@Base>:
  4124a0:	push   r15
  4124a2:	push   r14
  4124a4:	push   r13
  4124a6:	push   r12
  4124a8:	push   rbx
  4124a9:	mov    rax,QWORD PTR [rdi+0x30]
  4124ad:	movzx  ecx,WORD PTR [rax+0xe]
  4124b1:	cmp    ecx,0x7
  4124b4:	jne    412591 <flatcc_builder_append_union_vector@@Base+0xf1>
  4124ba:	mov    r15,rdx
  4124bd:	mov    ecx,DWORD PTR [rax+0x14]
  4124c0:	add    ecx,r15d
  4124c3:	jb     412572 <flatcc_builder_append_union_vector@@Base+0xd2>
  4124c9:	cmp    ecx,0x20000000
  4124cf:	jae    412572 <flatcc_builder_append_union_vector@@Base+0xd2>
  4124d5:	mov    r14,rsi
  4124d8:	mov    rbx,rdi
  4124db:	mov    DWORD PTR [rax+0x14],ecx
  4124de:	mov    r13d,DWORD PTR [rdi+0x20]
  4124e2:	lea    eax,[r13+r15*8+0x0]
  4124e7:	mov    DWORD PTR [rdi+0x20],eax
  4124ea:	cmp    eax,DWORD PTR [rdi+0x24]
  4124ed:	jae    4124fa <flatcc_builder_append_union_vector@@Base+0x5a>
  4124ef:	mov    r12,QWORD PTR [rbx+0x18]
  4124f3:	add    r12,r13
  4124f6:	jne    412553 <flatcc_builder_append_union_vector@@Base+0xb3>
  4124f8:	jmp    41251d <flatcc_builder_append_union_vector@@Base+0x7d>
  4124fa:	add    eax,0x1
  4124fd:	lea    rsi,[rbx+0x68]
  412501:	mov    rdi,QWORD PTR [rbx+0x40]
  412505:	mov    edx,DWORD PTR [rbx+0x28]
  412508:	add    rdx,rax
  41250b:	mov    ecx,0x1
  412510:	mov    r8d,0x1
  412516:	call   QWORD PTR [rbx+0x50]
  412519:	test   eax,eax
  41251b:	je     412522 <flatcc_builder_append_union_vector@@Base+0x82>
  41251d:	xor    r12d,r12d
  412520:	jmp    412565 <flatcc_builder_append_union_vector@@Base+0xc5>
  412522:	mov    eax,DWORD PTR [rbx+0x28]
  412525:	mov    r12,rax
  412528:	add    r12,QWORD PTR [rbx+0x68]
  41252c:	mov    QWORD PTR [rbx+0x18],r12
  412530:	mov    ecx,DWORD PTR [rbx+0x70]
  412533:	sub    ecx,eax
  412535:	cmp    ecx,0xfffffffc
  412538:	mov    eax,0xfffffffc
  41253d:	cmovb  eax,ecx
  412540:	mov    DWORD PTR [rbx+0x24],eax
  412543:	mov    rax,QWORD PTR [rbx+0x30]
  412547:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41254e:	add    r12,r13
  412551:	je     41251d <flatcc_builder_append_union_vector@@Base+0x7d>
  412553:	shl    r15d,0x3
  412557:	mov    edx,r15d
  41255a:	mov    rdi,r12
  41255d:	mov    rsi,r14
  412560:	call   404110 <memcpy@plt>
  412565:	mov    rax,r12
  412568:	pop    rbx
  412569:	pop    r12
  41256b:	pop    r13
  41256d:	pop    r14
  41256f:	pop    r15
  412571:	ret    
  412572:	lea    rdi,[rip+0x77b2]        # 419d2b <flatcc_builder_padding_base@@Base+0x134b>
  412579:	lea    rsi,[rip+0x66e2]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  412580:	lea    rcx,[rip+0x77bf]        # 419d46 <flatcc_builder_padding_base@@Base+0x1366>
  412587:	mov    edx,0x37c
  41258c:	call   4040a0 <__assert_fail@plt>
  412591:	lea    rdi,[rip+0x7306]        # 41989e <flatcc_builder_padding_base@@Base+0xebe>
  412598:	lea    rsi,[rip+0x66c3]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  41259f:	lea    rcx,[rip+0x742f]        # 4199d5 <flatcc_builder_padding_base@@Base+0xff5>
  4125a6:	mov    edx,0x69c
  4125ab:	call   4040a0 <__assert_fail@plt>

00000000004125b0 <flatcc_builder_create_string@@Base>:
  4125b0:	push   rbp
  4125b1:	push   rbx
  4125b2:	sub    rsp,0x98
  4125b9:	xor    ebp,ebp
  4125bb:	mov    rax,rdx
  4125be:	shr    rax,0x20
  4125c2:	jne    412698 <flatcc_builder_create_string@@Base+0xe8>
  4125c8:	mov    rbx,rdi
  4125cb:	mov    DWORD PTR [rsp+0x4],edx
  4125cf:	mov    ebp,DWORD PTR [rdi+0xf0]
  4125d5:	mov    eax,edx
  4125d7:	not    eax
  4125d9:	add    eax,ebp
  4125db:	and    eax,0x3
  4125de:	add    eax,0x1
  4125e1:	mov    QWORD PTR [rsp+0x8],0x4
  4125ea:	lea    rcx,[rsp+0x4]
  4125ef:	mov    QWORD PTR [rsp+0x18],rcx
  4125f4:	mov    QWORD PTR [rsp+0x20],0x4
  4125fd:	mov    DWORD PTR [rsp+0x10],0x1
  412605:	test   rdx,rdx
  412608:	je     41262c <flatcc_builder_create_string@@Base+0x7c>
  41260a:	lea    rcx,[rdx+0x4]
  41260e:	mov    QWORD PTR [rsp+0x8],rcx
  412613:	mov    QWORD PTR [rsp+0x28],rsi
  412618:	mov    QWORD PTR [rsp+0x30],rdx
  41261d:	mov    DWORD PTR [rsp+0x10],0x2
  412625:	mov    edx,0x2
  41262a:	jmp    412636 <flatcc_builder_create_string@@Base+0x86>
  41262c:	mov    edx,0x1
  412631:	mov    ecx,0x4
  412636:	mov    esi,eax
  412638:	lea    r8,[rcx+rsi*1]
  41263c:	mov    QWORD PTR [rsp+0x8],r8
  412641:	mov    eax,edx
  412643:	shl    rax,0x4
  412647:	lea    rdi,[rip+0x6392]        # 4189e0 <flatcc_builder_padding_base@@Base>
  41264e:	mov    QWORD PTR [rsp+rax*1+0x18],rdi
  412653:	mov    QWORD PTR [rsp+rax*1+0x20],rsi
  412658:	add    edx,0x1
  41265b:	mov    DWORD PTR [rsp+0x10],edx
  41265f:	cmp    r8,0x11
  412663:	setb   al
  412666:	add    rcx,rsi
  412669:	add    rcx,0xfffffffffffffff0
  41266d:	shr    rcx,0x20
  412671:	sete   cl
  412674:	test   r8d,r8d
  412677:	jle    4126a4 <flatcc_builder_create_string@@Base+0xf4>
  412679:	or     al,cl
  41267b:	je     4126a4 <flatcc_builder_create_string@@Base+0xf4>
  41267d:	sub    ebp,r8d
  412680:	mov    rdi,QWORD PTR [rbx+0x38]
  412684:	lea    rsi,[rsp+0x18]
  412689:	mov    ecx,ebp
  41268b:	call   QWORD PTR [rbx+0x48]
  41268e:	test   eax,eax
  412690:	jne    4126c3 <flatcc_builder_create_string@@Base+0x113>
  412692:	mov    DWORD PTR [rbx+0xf0],ebp
  412698:	mov    eax,ebp
  41269a:	add    rsp,0x98
  4126a1:	pop    rbx
  4126a2:	pop    rbp
  4126a3:	ret    
  4126a4:	lea    rdi,[rip+0x7777]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  4126ab:	lea    rsi,[rip+0x65b0]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  4126b2:	lea    rcx,[rip+0x7628]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  4126b9:	mov    edx,0x287
  4126be:	call   4040a0 <__assert_fail@plt>
  4126c3:	lea    rdi,[rip+0x7758]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  4126ca:	lea    rsi,[rip+0x6591]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  4126d1:	lea    rcx,[rip+0x7609]        # 419ce1 <flatcc_builder_padding_base@@Base+0x1301>
  4126d8:	mov    edx,0x28b
  4126dd:	call   4040a0 <__assert_fail@plt>
  4126e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4126ec:	nop    DWORD PTR [rax+0x0]

00000000004126f0 <flatcc_builder_create_string_str@@Base>:
  4126f0:	push   r14
  4126f2:	push   rbx
  4126f3:	push   rax
  4126f4:	mov    rbx,rsi
  4126f7:	mov    r14,rdi
  4126fa:	mov    rdi,rsi
  4126fd:	call   404070 <strlen@plt>
  412702:	mov    rdi,r14
  412705:	mov    rsi,rbx
  412708:	mov    rdx,rax
  41270b:	add    rsp,0x8
  41270f:	pop    rbx
  412710:	pop    r14
  412712:	jmp    4125b0 <flatcc_builder_create_string@@Base>
  412717:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412720 <flatcc_builder_create_string_strn@@Base>:
  412720:	push   r15
  412722:	push   r14
  412724:	push   rbx
  412725:	mov    rbx,rdx
  412728:	mov    r14,rsi
  41272b:	mov    r15,rdi
  41272e:	xor    esi,esi
  412730:	mov    rdi,r14
  412733:	call   4040d0 <memchr@plt>
  412738:	mov    rcx,rax
  41273b:	sub    rcx,r14
  41273e:	test   rax,rax
  412741:	cmovne rbx,rcx
  412745:	mov    rdi,r15
  412748:	mov    rsi,r14
  41274b:	mov    rdx,rbx
  41274e:	pop    rbx
  41274f:	pop    r14
  412751:	pop    r15
  412753:	jmp    4125b0 <flatcc_builder_create_string@@Base>
  412758:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412760 <flatcc_builder_end_string@@Base>:
  412760:	push   rbp
  412761:	push   rbx
  412762:	push   rax
  412763:	mov    rax,QWORD PTR [rdi+0x30]
  412767:	movzx  ecx,WORD PTR [rax+0xe]
  41276b:	cmp    ecx,0x6
  41276e:	jne    412807 <flatcc_builder_end_string@@Base+0xa7>
  412774:	mov    rbx,rdi
  412777:	mov    edx,DWORD PTR [rax+0x14]
  41277a:	cmp    edx,DWORD PTR [rdi+0x20]
  41277d:	jne    412826 <flatcc_builder_end_string@@Base+0xc6>
  412783:	mov    rsi,QWORD PTR [rbx+0x18]
  412787:	mov    rdi,rbx
  41278a:	call   4125b0 <flatcc_builder_create_string@@Base>
  41278f:	mov    ebp,eax
  412791:	test   eax,eax
  412793:	je     4127fe <flatcc_builder_end_string@@Base+0x9e>
  412795:	mov    rdi,QWORD PTR [rbx+0x18]
  412799:	mov    edx,DWORD PTR [rbx+0x20]
  41279c:	xor    esi,esi
  41279e:	call   4040b0 <memset@plt>
  4127a3:	mov    rax,QWORD PTR [rbx+0x30]
  4127a7:	mov    ecx,DWORD PTR [rax+0x8]
  4127aa:	mov    DWORD PTR [rbx+0x20],ecx
  4127ad:	mov    ecx,DWORD PTR [rax]
  4127af:	mov    DWORD PTR [rbx+0x28],ecx
  4127b2:	mov    edx,DWORD PTR [rax+0x4]
  4127b5:	mov    rsi,rcx
  4127b8:	add    rsi,QWORD PTR [rbx+0x68]
  4127bc:	mov    QWORD PTR [rbx+0x18],rsi
  4127c0:	mov    esi,DWORD PTR [rbx+0x70]
  4127c3:	sub    esi,ecx
  4127c5:	cmp    esi,edx
  4127c7:	cmova  esi,edx
  4127ca:	mov    DWORD PTR [rbx+0x24],esi
  4127cd:	movzx  ecx,WORD PTR [rbx+0xea]
  4127d4:	cmp    WORD PTR [rbx+0xe8],cx
  4127db:	jae    4127e4 <flatcc_builder_end_string@@Base+0x84>
  4127dd:	mov    WORD PTR [rbx+0xe8],cx
  4127e4:	movzx  ecx,WORD PTR [rax+0xc]
  4127e8:	mov    WORD PTR [rbx+0xea],cx
  4127ef:	add    rax,0xffffffffffffffdc
  4127f3:	mov    QWORD PTR [rbx+0x30],rax
  4127f7:	add    DWORD PTR [rbx+0x104],0xffffffff
  4127fe:	mov    eax,ebp
  412800:	add    rsp,0x8
  412804:	pop    rbx
  412805:	pop    rbp
  412806:	ret    
  412807:	lea    rdi,[rip+0x6993]        # 4191a1 <flatcc_builder_padding_base@@Base+0x7c1>
  41280e:	lea    rsi,[rip+0x644d]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  412815:	lea    rcx,[rip+0x7238]        # 419a54 <flatcc_builder_padding_base@@Base+0x1074>
  41281c:	mov    edx,0x6c4
  412821:	call   4040a0 <__assert_fail@plt>
  412826:	lea    rdi,[rip+0x726a]        # 419a97 <flatcc_builder_padding_base@@Base+0x10b7>
  41282d:	lea    rsi,[rip+0x642e]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  412834:	lea    rcx,[rip+0x7219]        # 419a54 <flatcc_builder_padding_base@@Base+0x1074>
  41283b:	mov    edx,0x6c5
  412840:	call   4040a0 <__assert_fail@plt>
  412845:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41284f:	nop

0000000000412850 <flatcc_builder_string_edit@@Base>:
  412850:	mov    rax,QWORD PTR [rdi+0x18]
  412854:	ret    
  412855:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41285f:	nop

0000000000412860 <flatcc_builder_string_len@@Base>:
  412860:	mov    rax,QWORD PTR [rdi+0x30]
  412864:	mov    eax,DWORD PTR [rax+0x14]
  412867:	ret    
  412868:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412870 <flatcc_builder_table_edit@@Base>:
  412870:	mov    rax,QWORD PTR [rdi+0x30]
  412874:	movzx  eax,WORD PTR [rax+0xe]
  412878:	cmp    eax,0x3
  41287b:	jne    412888 <flatcc_builder_table_edit@@Base+0x18>
  41287d:	mov    eax,DWORD PTR [rdi+0x20]
  412880:	add    rax,QWORD PTR [rdi+0x18]
  412884:	sub    rax,rsi
  412887:	ret    
  412888:	push   rax
  412889:	lea    rdi,[rip+0x6c01]        # 419491 <flatcc_builder_padding_base@@Base+0xab1>
  412890:	lea    rsi,[rip+0x63cb]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  412897:	lea    rcx,[rip+0x72ab]        # 419b49 <flatcc_builder_padding_base@@Base+0x1169>
  41289e:	mov    edx,0x702
  4128a3:	call   4040a0 <__assert_fail@plt>
  4128a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004128b0 <flatcc_builder_table_add_copy@@Base>:
  4128b0:	push   r15
  4128b2:	push   r14
  4128b4:	push   rbx
  4128b5:	mov    r15,rcx
  4128b8:	mov    r14,rdx
  4128bb:	mov    rdx,rcx
  4128be:	mov    ecx,r8d
  4128c1:	call   411800 <flatcc_builder_table_add@@Base>
  4128c6:	mov    rbx,rax
  4128c9:	test   rax,rax
  4128cc:	je     4128dc <flatcc_builder_table_add_copy@@Base+0x2c>
  4128ce:	mov    rdi,rbx
  4128d1:	mov    rsi,r14
  4128d4:	mov    rdx,r15
  4128d7:	call   404110 <memcpy@plt>
  4128dc:	mov    rax,rbx
  4128df:	pop    rbx
  4128e0:	pop    r14
  4128e2:	pop    r15
  4128e4:	ret    
  4128e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4128ef:	nop

00000000004128f0 <flatcc_builder_push_buffer_alignment@@Base>:
  4128f0:	movzx  eax,WORD PTR [rdi+0xe8]
  4128f7:	mov    WORD PTR [rdi+0xe8],0x4
  412900:	ret    
  412901:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41290b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412910 <flatcc_builder_pop_buffer_alignment@@Base>:
  412910:	cmp    WORD PTR [rdi+0xe8],si
  412917:	jae    412920 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  412919:	mov    WORD PTR [rdi+0xe8],si
  412920:	ret    
  412921:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41292b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412930 <flatcc_builder_get_buffer_alignment@@Base>:
  412930:	movzx  eax,WORD PTR [rdi+0xe8]
  412937:	ret    
  412938:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412940 <flatcc_builder_set_vtable_clustering@@Base>:
  412940:	xor    eax,eax
  412942:	test   esi,esi
  412944:	sete   al
  412947:	mov    DWORD PTR [rdi+0x124],eax
  41294d:	ret    
  41294e:	xchg   ax,ax

0000000000412950 <flatcc_builder_set_block_align@@Base>:
  412950:	mov    WORD PTR [rdi+0xec],si
  412957:	ret    
  412958:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412960 <flatcc_builder_get_level@@Base>:
  412960:	mov    eax,DWORD PTR [rdi+0x104]
  412966:	ret    
  412967:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412970 <flatcc_builder_set_max_level@@Base>:
  412970:	mov    DWORD PTR [rdi+0x120],esi
  412976:	cmp    DWORD PTR [rdi+0x108],esi
  41297c:	jge    412984 <flatcc_builder_set_max_level@@Base+0x14>
  41297e:	mov    DWORD PTR [rdi+0x108],esi
  412984:	ret    
  412985:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41298f:	nop

0000000000412990 <flatcc_builder_get_buffer_size@@Base>:
  412990:	movsxd rax,DWORD PTR [rdi+0xf4]
  412997:	movsxd rcx,DWORD PTR [rdi+0xf0]
  41299e:	sub    rax,rcx
  4129a1:	ret    
  4129a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4129ac:	nop    DWORD PTR [rax+0x0]

00000000004129b0 <flatcc_builder_get_buffer_start@@Base>:
  4129b0:	mov    eax,DWORD PTR [rdi+0xf0]
  4129b6:	ret    
  4129b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004129c0 <flatcc_builder_get_buffer_end@@Base>:
  4129c0:	mov    eax,DWORD PTR [rdi+0xf4]
  4129c6:	ret    
  4129c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004129d0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  4129d0:	mov    QWORD PTR [rdi+0x118],rsi
  4129d7:	ret    
  4129d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004129e0 <flatcc_builder_set_identifier@@Base>:
  4129e0:	test   rsi,rsi
  4129e3:	jne    4129ec <flatcc_builder_set_identifier@@Base+0xc>
  4129e5:	lea    rsi,[rip+0x5ff4]        # 4189e0 <flatcc_builder_padding_base@@Base>
  4129ec:	mov    eax,DWORD PTR [rsi]
  4129ee:	mov    DWORD PTR [rdi+0x110],eax
  4129f4:	ret    
  4129f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4129ff:	nop

0000000000412a00 <flatcc_builder_get_type@@Base>:
  412a00:	mov    rax,QWORD PTR [rdi+0x30]
  412a04:	test   rax,rax
  412a07:	je     412a0e <flatcc_builder_get_type@@Base+0xe>
  412a09:	movzx  eax,WORD PTR [rax+0xe]
  412a0d:	ret    
  412a0e:	xor    eax,eax
  412a10:	ret    
  412a11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412a20 <flatcc_builder_get_type_at@@Base>:
  412a20:	xor    eax,eax
  412a22:	test   esi,esi
  412a24:	jle    412a42 <flatcc_builder_get_type_at@@Base+0x22>
  412a26:	mov    ecx,DWORD PTR [rdi+0x104]
  412a2c:	cmp    ecx,esi
  412a2e:	jl     412a42 <flatcc_builder_get_type_at@@Base+0x22>
  412a30:	mov    rax,QWORD PTR [rdi+0x30]
  412a34:	sub    esi,ecx
  412a36:	movsxd rcx,esi
  412a39:	lea    rcx,[rcx+rcx*8]
  412a3d:	movzx  eax,WORD PTR [rax+rcx*4+0xe]
  412a42:	ret    
  412a43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a4d:	nop    DWORD PTR [rax]

0000000000412a50 <flatcc_builder_get_direct_buffer@@Base>:
  412a50:	cmp    DWORD PTR [rdi+0x128],0x0
  412a57:	je     412a69 <flatcc_builder_get_direct_buffer@@Base+0x19>
  412a59:	mov    rax,QWORD PTR [rdi+0x130]
  412a60:	cmp    rax,QWORD PTR [rdi+0x138]
  412a67:	je     412a78 <flatcc_builder_get_direct_buffer@@Base+0x28>
  412a69:	test   rsi,rsi
  412a6c:	je     412a75 <flatcc_builder_get_direct_buffer@@Base+0x25>
  412a6e:	mov    QWORD PTR [rsi],0x0
  412a75:	xor    eax,eax
  412a77:	ret    
  412a78:	test   rsi,rsi
  412a7b:	je     412a87 <flatcc_builder_get_direct_buffer@@Base+0x37>
  412a7d:	mov    rax,QWORD PTR [rdi+0x160]
  412a84:	mov    QWORD PTR [rsi],rax
  412a87:	mov    rax,QWORD PTR [rdi+0x140]
  412a8e:	ret    
  412a8f:	nop

0000000000412a90 <flatcc_builder_copy_buffer@@Base>:
  412a90:	push   rax
  412a91:	cmp    DWORD PTR [rdi+0x128],0x0
  412a98:	je     412aad <flatcc_builder_copy_buffer@@Base+0x1d>
  412a9a:	add    rdi,0x130
  412aa1:	call   4133b0 <flatcc_emitter_copy_buffer@@Base>
  412aa6:	test   rax,rax
  412aa9:	je     412ab1 <flatcc_builder_copy_buffer@@Base+0x21>
  412aab:	pop    rcx
  412aac:	ret    
  412aad:	xor    eax,eax
  412aaf:	pop    rcx
  412ab0:	ret    
  412ab1:	lea    rdi,[rip+0x2e56]        # 41590e <_IO_stdin_used@@Base+0x90e>
  412ab8:	lea    rsi,[rip+0x61a3]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  412abf:	lea    rcx,[rip+0x710e]        # 419bd4 <flatcc_builder_padding_base@@Base+0x11f4>
  412ac6:	mov    edx,0x786
  412acb:	call   4040a0 <__assert_fail@plt>

0000000000412ad0 <flatcc_builder_finalize_buffer@@Base>:
  412ad0:	push   r15
  412ad2:	push   r14
  412ad4:	push   rbx
  412ad5:	mov    rbx,rdi
  412ad8:	movsxd r14,DWORD PTR [rdi+0xf4]
  412adf:	movsxd rax,DWORD PTR [rdi+0xf0]
  412ae6:	sub    r14,rax
  412ae9:	test   rsi,rsi
  412aec:	je     412af1 <flatcc_builder_finalize_buffer@@Base+0x21>
  412aee:	mov    QWORD PTR [rsi],r14
  412af1:	mov    rdi,r14
  412af4:	call   404120 <malloc@plt>
  412af9:	test   rax,rax
  412afc:	je     412b2d <flatcc_builder_finalize_buffer@@Base+0x5d>
  412afe:	cmp    DWORD PTR [rbx+0x128],0x0
  412b05:	je     412b4c <flatcc_builder_finalize_buffer@@Base+0x7c>
  412b07:	mov    r15,rax
  412b0a:	add    rbx,0x130
  412b11:	mov    rdi,rbx
  412b14:	mov    rsi,rax
  412b17:	mov    rdx,r14
  412b1a:	call   4133b0 <flatcc_emitter_copy_buffer@@Base>
  412b1f:	test   rax,rax
  412b22:	je     412b6b <flatcc_builder_finalize_buffer@@Base+0x9b>
  412b24:	mov    rax,r15
  412b27:	pop    rbx
  412b28:	pop    r14
  412b2a:	pop    r15
  412b2c:	ret    
  412b2d:	lea    rdi,[rip+0x72ee]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  412b34:	lea    rsi,[rip+0x6127]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  412b3b:	lea    rcx,[rip+0x70d7]        # 419c19 <flatcc_builder_padding_base@@Base+0x1239>
  412b42:	mov    edx,0x798
  412b47:	call   4040a0 <__assert_fail@plt>
  412b4c:	lea    rdi,[rip+0x72cf]        # 419e22 <flatcc_builder_padding_base@@Base+0x1442>
  412b53:	lea    rsi,[rip+0x6108]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  412b5a:	lea    rcx,[rip+0x70b8]        # 419c19 <flatcc_builder_padding_base@@Base+0x1239>
  412b61:	mov    edx,0x79c
  412b66:	call   4040a0 <__assert_fail@plt>
  412b6b:	lea    rdi,[rip+0x2d9c]        # 41590e <_IO_stdin_used@@Base+0x90e>
  412b72:	lea    rsi,[rip+0x60e9]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  412b79:	lea    rcx,[rip+0x7054]        # 419bd4 <flatcc_builder_padding_base@@Base+0x11f4>
  412b80:	mov    edx,0x786
  412b85:	call   4040a0 <__assert_fail@plt>
  412b8a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412b90 <flatcc_builder_finalize_aligned_buffer@@Base>:
  412b90:	push   r15
  412b92:	push   r14
  412b94:	push   r12
  412b96:	push   rbx
  412b97:	push   rax
  412b98:	mov    r14,rsi
  412b9b:	mov    r15,rdi
  412b9e:	movsxd rax,DWORD PTR [rdi+0xf4]
  412ba5:	movsxd rcx,DWORD PTR [rdi+0xf0]
  412bac:	sub    rax,rcx
  412baf:	test   rsi,rsi
  412bb2:	je     412bb7 <flatcc_builder_finalize_aligned_buffer@@Base+0x27>
  412bb4:	mov    QWORD PTR [r14],rax
  412bb7:	movzx  ecx,WORD PTR [r15+0xe8]
  412bbf:	add    rax,rcx
  412bc2:	add    rax,0xffffffffffffffff
  412bc6:	mov    rbx,rcx
  412bc9:	neg    rbx
  412bcc:	and    rbx,rax
  412bcf:	cmp    rcx,0x8
  412bd3:	mov    QWORD PTR [rsp],0x0
  412bdb:	mov    esi,0x8
  412be0:	cmova  rsi,rcx
  412be4:	mov    rdi,rsp
  412be7:	mov    rdx,rbx
  412bea:	call   404150 <posix_memalign@plt>
  412bef:	mov    r12,QWORD PTR [rsp]
  412bf3:	test   eax,eax
  412bf5:	je     412c06 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  412bf7:	test   r12,r12
  412bfa:	je     412c06 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  412bfc:	mov    rdi,r12
  412bff:	call   404030 <free@plt>
  412c04:	jmp    412c4e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  412c06:	test   r12,r12
  412c09:	je     412c4e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  412c0b:	cmp    DWORD PTR [r15+0x128],0x0
  412c13:	je     412bfc <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
  412c15:	add    r15,0x130
  412c1c:	mov    rdi,r15
  412c1f:	mov    rsi,r12
  412c22:	mov    rdx,rbx
  412c25:	call   4133b0 <flatcc_emitter_copy_buffer@@Base>
  412c2a:	test   rax,rax
  412c2d:	jne    412c5d <flatcc_builder_finalize_aligned_buffer@@Base+0xcd>
  412c2f:	lea    rdi,[rip+0x2cd8]        # 41590e <_IO_stdin_used@@Base+0x90e>
  412c36:	lea    rsi,[rip+0x6025]        # 418c62 <flatcc_builder_padding_base@@Base+0x282>
  412c3d:	lea    rcx,[rip+0x6f90]        # 419bd4 <flatcc_builder_padding_base@@Base+0x11f4>
  412c44:	mov    edx,0x786
  412c49:	call   4040a0 <__assert_fail@plt>
  412c4e:	test   r14,r14
  412c51:	je     412c5a <flatcc_builder_finalize_aligned_buffer@@Base+0xca>
  412c53:	mov    QWORD PTR [r14],0x0
  412c5a:	xor    r12d,r12d
  412c5d:	mov    rax,r12
  412c60:	add    rsp,0x8
  412c64:	pop    rbx
  412c65:	pop    r12
  412c67:	pop    r14
  412c69:	pop    r15
  412c6b:	ret    
  412c6c:	nop    DWORD PTR [rax+0x0]

0000000000412c70 <flatcc_builder_aligned_alloc@@Base>:
  412c70:	push   rax
  412c71:	mov    rax,rsi
  412c74:	mov    QWORD PTR [rsp],0x0
  412c7c:	cmp    rdi,0x8
  412c80:	mov    esi,0x8
  412c85:	cmova  rsi,rdi
  412c89:	mov    rdi,rsp
  412c8c:	mov    rdx,rax
  412c8f:	call   404150 <posix_memalign@plt>
  412c94:	mov    ecx,eax
  412c96:	mov    rax,QWORD PTR [rsp]
  412c9a:	test   ecx,ecx
  412c9c:	je     412cb5 <flatcc_builder_aligned_alloc@@Base+0x45>
  412c9e:	test   rax,rax
  412ca1:	je     412cb5 <flatcc_builder_aligned_alloc@@Base+0x45>
  412ca3:	mov    rdi,rax
  412ca6:	call   404030 <free@plt>
  412cab:	mov    QWORD PTR [rsp],0x0
  412cb3:	xor    eax,eax
  412cb5:	pop    rcx
  412cb6:	ret    
  412cb7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412cc0 <flatcc_builder_aligned_free@@Base>:
  412cc0:	jmp    404030 <free@plt>
  412cc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ccf:	nop

0000000000412cd0 <flatcc_builder_get_emit_context@@Base>:
  412cd0:	mov    rax,QWORD PTR [rdi+0x38]
  412cd4:	ret    
  412cd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412cdf:	nop

0000000000412ce0 <flatcc_emitter_recycle_page@@Base>:
  412ce0:	mov    rcx,QWORD PTR [rdi]
  412ce3:	mov    eax,0xffffffff
  412ce8:	cmp    rcx,rsi
  412ceb:	je     412d42 <flatcc_emitter_recycle_page@@Base+0x62>
  412ced:	cmp    QWORD PTR [rdi+0x8],rsi
  412cf1:	je     412d42 <flatcc_emitter_recycle_page@@Base+0x62>
  412cf3:	mov    rax,QWORD PTR [rsi+0xb80]
  412cfa:	mov    rdx,QWORD PTR [rsi+0xb88]
  412d01:	mov    QWORD PTR [rax+0xb88],rdx
  412d08:	mov    rdx,QWORD PTR [rsi+0xb88]
  412d0f:	mov    QWORD PTR [rdx+0xb80],rax
  412d16:	mov    rax,QWORD PTR [rcx+0xb88]
  412d1d:	mov    QWORD PTR [rsi+0xb88],rax
  412d24:	mov    QWORD PTR [rsi+0xb80],rcx
  412d2b:	mov    QWORD PTR [rax+0xb80],rsi
  412d32:	mov    rax,QWORD PTR [rsi+0xb80]
  412d39:	mov    QWORD PTR [rax+0xb88],rsi
  412d40:	xor    eax,eax
  412d42:	ret    
  412d43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412d4d:	nop    DWORD PTR [rax]

0000000000412d50 <flatcc_emitter_reset@@Base>:
  412d50:	push   r14
  412d52:	push   rbx
  412d53:	push   rax
  412d54:	mov    rax,QWORD PTR [rdi]
  412d57:	test   rax,rax
  412d5a:	je     412e3b <flatcc_emitter_reset@@Base+0xeb>
  412d60:	mov    rbx,rdi
  412d63:	mov    QWORD PTR [rdi+0x8],rax
  412d67:	lea    rcx,[rax+0x5c0]
  412d6e:	mov    QWORD PTR [rdi+0x10],rcx
  412d72:	mov    QWORD PTR [rdi+0x20],rcx
  412d76:	mov    QWORD PTR [rdi+0x18],0x5c0
  412d7e:	mov    QWORD PTR [rdi+0x28],0x5c0
  412d86:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  412d90:	mov    rcx,QWORD PTR [rdi+0x30]
  412d94:	mov    rdx,QWORD PTR [rdi+0x40]
  412d98:	test   rdx,rdx
  412d9b:	jne    412da4 <flatcc_emitter_reset@@Base+0x54>
  412d9d:	mov    QWORD PTR [rbx+0x40],rcx
  412da1:	mov    rdx,rcx
  412da4:	lea    rdx,[rdx+rdx*2]
  412da8:	shr    rdx,0x2
  412dac:	shr    rcx,0x2
  412db0:	add    rcx,rdx
  412db3:	mov    QWORD PTR [rbx+0x40],rcx
  412db7:	mov    QWORD PTR [rbx+0x30],0x0
  412dbf:	add    rcx,rcx
  412dc2:	cmp    rcx,QWORD PTR [rbx+0x38]
  412dc6:	jae    412e3b <flatcc_emitter_reset@@Base+0xeb>
  412dc8:	mov    rdi,QWORD PTR [rax+0xb80]
  412dcf:	cmp    rdi,rax
  412dd2:	je     412e3b <flatcc_emitter_reset@@Base+0xeb>
  412dd4:	lea    rcx,[rax+0xb80]
  412ddb:	mov    r14,0xfffffffffffff480
  412de2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412dec:	nop    DWORD PTR [rax+0x0]
  412df0:	mov    rdx,QWORD PTR [rdi+0xb80]
  412df7:	mov    QWORD PTR [rcx],rdx
  412dfa:	mov    rcx,QWORD PTR [rdi+0xb80]
  412e01:	mov    QWORD PTR [rcx+0xb88],rax
  412e08:	call   404030 <free@plt>
  412e0d:	mov    rax,QWORD PTR [rbx+0x38]
  412e11:	add    rax,r14
  412e14:	mov    QWORD PTR [rbx+0x38],rax
  412e18:	mov    rcx,QWORD PTR [rbx+0x40]
  412e1c:	add    rcx,rcx
  412e1f:	cmp    rcx,rax
  412e22:	jae    412e3b <flatcc_emitter_reset@@Base+0xeb>
  412e24:	mov    rax,QWORD PTR [rbx+0x8]
  412e28:	lea    rcx,[rax+0xb80]
  412e2f:	mov    rdi,QWORD PTR [rax+0xb80]
  412e36:	cmp    rdi,QWORD PTR [rbx]
  412e39:	jne    412df0 <flatcc_emitter_reset@@Base+0xa0>
  412e3b:	add    rsp,0x8
  412e3f:	pop    rbx
  412e40:	pop    r14
  412e42:	ret    
  412e43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412e4d:	nop    DWORD PTR [rax]

0000000000412e50 <flatcc_emitter_clear@@Base>:
  412e50:	push   r14
  412e52:	push   rbx
  412e53:	push   rax
  412e54:	mov    rbx,QWORD PTR [rdi]
  412e57:	test   rbx,rbx
  412e5a:	je     412eba <flatcc_emitter_clear@@Base+0x6a>
  412e5c:	mov    r14,rdi
  412e5f:	mov    rax,QWORD PTR [rbx+0xb88]
  412e66:	mov    QWORD PTR [rax+0xb80],0x0
  412e71:	jmp    412e8f <flatcc_emitter_clear@@Base+0x3f>
  412e73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412e7d:	nop    DWORD PTR [rax]
  412e80:	mov    rbx,rax
  412e83:	mov    rdi,QWORD PTR [rax+0xb88]
  412e8a:	call   404030 <free@plt>
  412e8f:	mov    rax,QWORD PTR [rbx+0xb80]
  412e96:	test   rax,rax
  412e99:	jne    412e80 <flatcc_emitter_clear@@Base+0x30>
  412e9b:	mov    rdi,rbx
  412e9e:	call   404030 <free@plt>
  412ea3:	vxorps xmm0,xmm0,xmm0
  412ea7:	vmovups YMMWORD PTR [r14+0x20],ymm0
  412ead:	vmovups YMMWORD PTR [r14],ymm0
  412eb2:	mov    QWORD PTR [r14+0x40],0x0
  412eba:	add    rsp,0x8
  412ebe:	pop    rbx
  412ebf:	pop    r14
  412ec1:	vzeroupper 
  412ec4:	ret    
  412ec5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ecf:	nop

0000000000412ed0 <flatcc_emitter@@Base>:
  412ed0:	push   rbp
  412ed1:	push   r15
  412ed3:	push   r14
  412ed5:	push   r13
  412ed7:	push   r12
  412ed9:	push   rbx
  412eda:	sub    rsp,0x18
  412ede:	mov    r13d,edx
  412ee1:	mov    r14,rsi
  412ee4:	mov    r12,rdi
  412ee7:	add    QWORD PTR [rdi+0x30],r8
  412eeb:	test   ecx,ecx
  412eed:	js     413081 <flatcc_emitter@@Base+0x1b1>
  412ef3:	mov    rdx,QWORD PTR [r12+0x28]
  412ef8:	cmp    rdx,r8
  412efb:	jae    413268 <flatcc_emitter@@Base+0x398>
  412f01:	xor    eax,eax
  412f03:	test   r13d,r13d
  412f06:	je     41339f <flatcc_emitter@@Base+0x4cf>
  412f0c:	mov    QWORD PTR [rsp+0x8],r13
  412f11:	mov    r15,QWORD PTR [r14+0x8]
  412f15:	test   r15,r15
  412f18:	je     413066 <flatcc_emitter@@Base+0x196>
  412f1e:	mov    r13,QWORD PTR [r14]
  412f21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  412f30:	mov    rbp,r15
  412f33:	cmp    r15,rdx
  412f36:	jbe    413038 <flatcc_emitter@@Base+0x168>
  412f3c:	mov    rbp,rdx
  412f3f:	nop
  412f40:	test   rbp,rbp
  412f43:	jne    413038 <flatcc_emitter@@Base+0x168>
  412f49:	mov    rbx,QWORD PTR [r12+0x8]
  412f4e:	test   rbx,rbx
  412f51:	je     412f60 <flatcc_emitter@@Base+0x90>
  412f53:	mov    rax,QWORD PTR [rbx+0xb80]
  412f5a:	cmp    rax,QWORD PTR [r12]
  412f5e:	jne    412fa1 <flatcc_emitter@@Base+0xd1>
  412f60:	mov    edi,0xb98
  412f65:	call   404120 <malloc@plt>
  412f6a:	test   rax,rax
  412f6d:	je     41327d <flatcc_emitter@@Base+0x3ad>
  412f73:	add    QWORD PTR [r12+0x38],0xb80
  412f7c:	test   rbx,rbx
  412f7f:	je     412fe0 <flatcc_emitter@@Base+0x110>
  412f81:	mov    QWORD PTR [rax+0xb88],rbx
  412f88:	mov    rcx,QWORD PTR [r12]
  412f8c:	mov    QWORD PTR [rax+0xb80],rcx
  412f93:	mov    QWORD PTR [rcx+0xb88],rax
  412f9a:	mov    QWORD PTR [rbx+0xb80],rax
  412fa1:	mov    QWORD PTR [r12+0x8],rax
  412fa6:	mov    QWORD PTR [r12+0x20],rax
  412fab:	mov    QWORD PTR [r12+0x28],0xb80
  412fb4:	mov    rcx,QWORD PTR [rax+0xb88]
  412fbb:	mov    ecx,DWORD PTR [rcx+0xb90]
  412fc1:	mov    edx,0xb80
  412fc6:	add    ecx,edx
  412fc8:	mov    DWORD PTR [rax+0xb90],ecx
  412fce:	mov    ebp,0xb80
  412fd3:	cmp    r15,rbp
  412fd6:	ja     412f40 <flatcc_emitter@@Base+0x70>
  412fdc:	jmp    413035 <flatcc_emitter@@Base+0x165>
  412fde:	xchg   ax,ax
  412fe0:	mov    QWORD PTR [r12],rax
  412fe4:	mov    QWORD PTR [r12+0x8],rax
  412fe9:	mov    QWORD PTR [rax+0xb80],rax
  412ff0:	mov    QWORD PTR [rax+0xb88],rax
  412ff7:	mov    rcx,rax
  412ffa:	add    rcx,0x5c0
  413001:	mov    QWORD PTR [r12+0x10],rcx
  413006:	mov    QWORD PTR [r12+0x20],rcx
  41300b:	mov    QWORD PTR [r12+0x18],0x5c0
  413014:	mov    QWORD PTR [r12+0x28],0x5c0
  41301d:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  413027:	mov    ebp,0x5c0
  41302c:	cmp    r15,rbp
  41302f:	ja     412f40 <flatcc_emitter@@Base+0x70>
  413035:	mov    rbp,r15
  413038:	mov    rdi,QWORD PTR [r12+0x20]
  41303d:	mov    rsi,r13
  413040:	mov    rdx,rbp
  413043:	call   404110 <memcpy@plt>
  413048:	add    QWORD PTR [r12+0x20],rbp
  41304d:	add    r13,rbp
  413050:	mov    rdx,QWORD PTR [r12+0x28]
  413055:	sub    rdx,rbp
  413058:	mov    QWORD PTR [r12+0x28],rdx
  41305d:	sub    r15,rbp
  413060:	jne    412f30 <flatcc_emitter@@Base+0x60>
  413066:	mov    r13,QWORD PTR [rsp+0x8]
  41306b:	add    r13d,0xffffffff
  41306f:	add    r14,0x10
  413073:	test   r13d,r13d
  413076:	jne    412f0c <flatcc_emitter@@Base+0x3c>
  41307c:	jmp    41339d <flatcc_emitter@@Base+0x4cd>
  413081:	lea    rsi,[r12+0x18]
  413086:	mov    rdx,QWORD PTR [r12+0x18]
  41308b:	cmp    rdx,r8
  41308e:	jae    413287 <flatcc_emitter@@Base+0x3b7>
  413094:	xor    eax,eax
  413096:	test   r13d,r13d
  413099:	je     41339f <flatcc_emitter@@Base+0x4cf>
  41309f:	mov    QWORD PTR [rsp+0x10],rsi
  4130a4:	movsxd rax,r13d
  4130a7:	shl    rax,0x4
  4130ab:	add    r14,rax
  4130ae:	mov    esi,0xfffff480
  4130b3:	mov    QWORD PTR [rsp+0x8],r13
  4130b8:	mov    r15,QWORD PTR [r14-0x8]
  4130bc:	add    r14,0xfffffffffffffff0
  4130c0:	test   r15,r15
  4130c3:	je     413254 <flatcc_emitter@@Base+0x384>
  4130c9:	mov    r13,QWORD PTR [r14]
  4130cc:	add    r13,r15
  4130cf:	nop
  4130d0:	mov    rax,QWORD PTR [rsp+0x10]
  4130d5:	mov    rax,QWORD PTR [rax]
  4130d8:	cmp    r15,rax
  4130db:	jbe    413220 <flatcc_emitter@@Base+0x350>
  4130e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4130eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4130f0:	mov    rbp,rax
  4130f3:	test   rax,rax
  4130f6:	jne    413223 <flatcc_emitter@@Base+0x353>
  4130fc:	mov    rbx,QWORD PTR [r12]
  413100:	test   rbx,rbx
  413103:	je     413130 <flatcc_emitter@@Base+0x260>
  413105:	mov    rax,QWORD PTR [rbx+0xb88]
  41310c:	cmp    rax,QWORD PTR [r12+0x8]
  413111:	je     413130 <flatcc_emitter@@Base+0x260>
  413113:	mov    edx,DWORD PTR [rbx+0xb90]
  413119:	add    edx,esi
  41311b:	lea    rcx,[rax+0xb90]
  413122:	mov    DWORD PTR [rax+0xb90],edx
  413128:	mov    QWORD PTR [r12],rax
  41312c:	jmp    413185 <flatcc_emitter@@Base+0x2b5>
  41312e:	xchg   ax,ax
  413130:	mov    edi,0xb98
  413135:	call   404120 <malloc@plt>
  41313a:	test   rax,rax
  41313d:	je     41327d <flatcc_emitter@@Base+0x3ad>
  413143:	add    QWORD PTR [r12+0x38],0xb80
  41314c:	test   rbx,rbx
  41314f:	je     4131c0 <flatcc_emitter@@Base+0x2f0>
  413151:	mov    rcx,QWORD PTR [r12+0x8]
  413156:	mov    QWORD PTR [rax+0xb88],rcx
  41315d:	mov    QWORD PTR [rax+0xb80],rbx
  413164:	mov    QWORD PTR [rbx+0xb88],rax
  41316b:	mov    QWORD PTR [rcx+0xb80],rax
  413172:	mov    QWORD PTR [r12],rax
  413176:	mov    rcx,rax
  413179:	add    rcx,0xb90
  413180:	mov    esi,0xfffff480
  413185:	lea    rdx,[rax+0xb80]
  41318c:	mov    QWORD PTR [r12+0x10],rdx
  413191:	mov    QWORD PTR [r12+0x18],0xb80
  41319a:	mov    rax,QWORD PTR [rax+0xb80]
  4131a1:	mov    eax,DWORD PTR [rax+0xb90]
  4131a7:	add    eax,esi
  4131a9:	mov    DWORD PTR [rcx],eax
  4131ab:	mov    eax,0xb80
  4131b0:	cmp    r15,rax
  4131b3:	ja     4130f0 <flatcc_emitter@@Base+0x220>
  4131b9:	jmp    413220 <flatcc_emitter@@Base+0x350>
  4131bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4131c0:	mov    QWORD PTR [r12],rax
  4131c4:	mov    QWORD PTR [r12+0x8],rax
  4131c9:	mov    QWORD PTR [rax+0xb80],rax
  4131d0:	mov    QWORD PTR [rax+0xb88],rax
  4131d7:	mov    rcx,rax
  4131da:	add    rcx,0x5c0
  4131e1:	mov    QWORD PTR [r12+0x10],rcx
  4131e6:	mov    QWORD PTR [r12+0x20],rcx
  4131eb:	mov    QWORD PTR [r12+0x18],0x5c0
  4131f4:	mov    QWORD PTR [r12+0x28],0x5c0
  4131fd:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  413207:	mov    eax,0x5c0
  41320c:	mov    esi,0xfffff480
  413211:	cmp    r15,rax
  413214:	ja     4130f0 <flatcc_emitter@@Base+0x220>
  41321a:	nop    WORD PTR [rax+rax*1+0x0]
  413220:	mov    rbp,r15
  413223:	mov    rdi,QWORD PTR [r12+0x10]
  413228:	sub    rdi,rbp
  41322b:	mov    QWORD PTR [r12+0x10],rdi
  413230:	sub    rax,rbp
  413233:	mov    QWORD PTR [r12+0x18],rax
  413238:	sub    r13,rbp
  41323b:	mov    rsi,r13
  41323e:	mov    rdx,rbp
  413241:	call   404110 <memcpy@plt>
  413246:	mov    esi,0xfffff480
  41324b:	sub    r15,rbp
  41324e:	jne    4130d0 <flatcc_emitter@@Base+0x200>
  413254:	mov    r13,QWORD PTR [rsp+0x8]
  413259:	add    r13d,0xffffffff
  41325d:	jne    4130b3 <flatcc_emitter@@Base+0x1e3>
  413263:	jmp    41339d <flatcc_emitter@@Base+0x4cd>
  413268:	lea    rsi,[r12+0x28]
  41326d:	mov    rbp,QWORD PTR [r12+0x20]
  413272:	lea    rcx,[r8+rbp*1]
  413276:	mov    QWORD PTR [r12+0x20],rcx
  41327b:	jmp    413294 <flatcc_emitter@@Base+0x3c4>
  41327d:	mov    eax,0xffffffff
  413282:	jmp    41339f <flatcc_emitter@@Base+0x4cf>
  413287:	mov    rbp,QWORD PTR [r12+0x10]
  41328c:	sub    rbp,r8
  41328f:	mov    QWORD PTR [r12+0x10],rbp
  413294:	sub    rdx,r8
  413297:	mov    QWORD PTR [rsi],rdx
  41329a:	xor    eax,eax
  41329c:	test   r13d,r13d
  41329f:	je     41339f <flatcc_emitter@@Base+0x4cf>
  4132a5:	lea    r15d,[r13-0x1]
  4132a9:	mov    r12d,r13d
  4132ac:	and    r12d,0x7
  4132b0:	je     4132e2 <flatcc_emitter@@Base+0x412>
  4132b2:	xor    ebx,ebx
  4132b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4132be:	xchg   ax,ax
  4132c0:	mov    rsi,QWORD PTR [r14]
  4132c3:	mov    rdx,QWORD PTR [r14+0x8]
  4132c7:	mov    rdi,rbp
  4132ca:	call   404110 <memcpy@plt>
  4132cf:	add    rbp,QWORD PTR [r14+0x8]
  4132d3:	add    r14,0x10
  4132d7:	add    ebx,0x1
  4132da:	cmp    r12d,ebx
  4132dd:	jne    4132c0 <flatcc_emitter@@Base+0x3f0>
  4132df:	sub    r13d,ebx
  4132e2:	cmp    r15d,0x7
  4132e6:	jb     41339d <flatcc_emitter@@Base+0x4cd>
  4132ec:	nop    DWORD PTR [rax+0x0]
  4132f0:	mov    rsi,QWORD PTR [r14]
  4132f3:	mov    rdx,QWORD PTR [r14+0x8]
  4132f7:	mov    rdi,rbp
  4132fa:	call   404110 <memcpy@plt>
  4132ff:	add    rbp,QWORD PTR [r14+0x8]
  413303:	mov    rsi,QWORD PTR [r14+0x10]
  413307:	mov    rdx,QWORD PTR [r14+0x18]
  41330b:	mov    rdi,rbp
  41330e:	call   404110 <memcpy@plt>
  413313:	add    rbp,QWORD PTR [r14+0x18]
  413317:	mov    rsi,QWORD PTR [r14+0x20]
  41331b:	mov    rdx,QWORD PTR [r14+0x28]
  41331f:	mov    rdi,rbp
  413322:	call   404110 <memcpy@plt>
  413327:	add    rbp,QWORD PTR [r14+0x28]
  41332b:	mov    rsi,QWORD PTR [r14+0x30]
  41332f:	mov    rdx,QWORD PTR [r14+0x38]
  413333:	mov    rdi,rbp
  413336:	call   404110 <memcpy@plt>
  41333b:	add    rbp,QWORD PTR [r14+0x38]
  41333f:	mov    rsi,QWORD PTR [r14+0x40]
  413343:	mov    rdx,QWORD PTR [r14+0x48]
  413347:	mov    rdi,rbp
  41334a:	call   404110 <memcpy@plt>
  41334f:	add    rbp,QWORD PTR [r14+0x48]
  413353:	mov    rsi,QWORD PTR [r14+0x50]
  413357:	mov    rdx,QWORD PTR [r14+0x58]
  41335b:	mov    rdi,rbp
  41335e:	call   404110 <memcpy@plt>
  413363:	add    rbp,QWORD PTR [r14+0x58]
  413367:	mov    rsi,QWORD PTR [r14+0x60]
  41336b:	mov    rdx,QWORD PTR [r14+0x68]
  41336f:	mov    rdi,rbp
  413372:	call   404110 <memcpy@plt>
  413377:	add    rbp,QWORD PTR [r14+0x68]
  41337b:	mov    rsi,QWORD PTR [r14+0x70]
  41337f:	mov    rdx,QWORD PTR [r14+0x78]
  413383:	mov    rdi,rbp
  413386:	call   404110 <memcpy@plt>
  41338b:	add    rbp,QWORD PTR [r14+0x78]
  41338f:	sub    r14,0xffffffffffffff80
  413393:	add    r13d,0xfffffff8
  413397:	jne    4132f0 <flatcc_emitter@@Base+0x420>
  41339d:	xor    eax,eax
  41339f:	add    rsp,0x18
  4133a3:	pop    rbx
  4133a4:	pop    r12
  4133a6:	pop    r13
  4133a8:	pop    r14
  4133aa:	pop    r15
  4133ac:	pop    rbp
  4133ad:	ret    
  4133ae:	xchg   ax,ax

00000000004133b0 <flatcc_emitter_copy_buffer@@Base>:
  4133b0:	push   r15
  4133b2:	push   r14
  4133b4:	push   r12
  4133b6:	push   rbx
  4133b7:	push   rax
  4133b8:	mov    rax,rdx
  4133bb:	mov    rdx,QWORD PTR [rdi+0x30]
  4133bf:	cmp    rdx,rax
  4133c2:	ja     41344d <flatcc_emitter_copy_buffer@@Base+0x9d>
  4133c8:	mov    r14,rdi
  4133cb:	mov    rax,QWORD PTR [rdi]
  4133ce:	test   rax,rax
  4133d1:	je     41344d <flatcc_emitter_copy_buffer@@Base+0x9d>
  4133d3:	mov    r15,rsi
  4133d6:	cmp    rax,QWORD PTR [r14+0x8]
  4133da:	je     41345f <flatcc_emitter_copy_buffer@@Base+0xaf>
  4133e0:	mov    r12d,0xb80
  4133e6:	sub    r12,QWORD PTR [r14+0x18]
  4133ea:	mov    rsi,QWORD PTR [r14+0x10]
  4133ee:	mov    rdi,r15
  4133f1:	mov    rdx,r12
  4133f4:	call   404110 <memcpy@plt>
  4133f9:	add    r12,r15
  4133fc:	mov    rax,QWORD PTR [r14]
  4133ff:	mov    rbx,QWORD PTR [rax+0xb80]
  413406:	cmp    rbx,QWORD PTR [r14+0x8]
  41340a:	je     413434 <flatcc_emitter_copy_buffer@@Base+0x84>
  41340c:	nop    DWORD PTR [rax+0x0]
  413410:	mov    edx,0xb80
  413415:	mov    rdi,r12
  413418:	mov    rsi,rbx
  41341b:	call   404110 <memcpy@plt>
  413420:	add    r12,0xb80
  413427:	mov    rbx,QWORD PTR [rbx+0xb80]
  41342e:	cmp    rbx,QWORD PTR [r14+0x8]
  413432:	jne    413410 <flatcc_emitter_copy_buffer@@Base+0x60>
  413434:	mov    edx,0xb80
  413439:	sub    rdx,QWORD PTR [r14+0x28]
  41343d:	mov    rdi,r12
  413440:	mov    rsi,rbx
  413443:	call   404110 <memcpy@plt>
  413448:	mov    r15,r12
  41344b:	jmp    413450 <flatcc_emitter_copy_buffer@@Base+0xa0>
  41344d:	xor    r15d,r15d
  413450:	mov    rax,r15
  413453:	add    rsp,0x8
  413457:	pop    rbx
  413458:	pop    r12
  41345a:	pop    r14
  41345c:	pop    r15
  41345e:	ret    
  41345f:	mov    rsi,QWORD PTR [r14+0x10]
  413463:	mov    rdi,r15
  413466:	call   404110 <memcpy@plt>
  41346b:	jmp    413450 <flatcc_emitter_copy_buffer@@Base+0xa0>
  41346d:	nop    DWORD PTR [rax]

0000000000413470 <flatcc_verify_error_string@@Base>:
  413470:	cmp    edi,0x24
  413473:	ja     413484 <flatcc_verify_error_string@@Base+0x14>
  413475:	movsxd rax,edi
  413478:	lea    rcx,[rip+0xa861]        # 41dce0 <flatcc_builder_padding_base@@Base+0x5300>
  41347f:	mov    rax,QWORD PTR [rcx+rax*8]
  413483:	ret    
  413484:	lea    rax,[rip+0x6e55]        # 41a2e0 <flatcc_builder_padding_base@@Base+0x1900>
  41348b:	ret    
  41348c:	nop    DWORD PTR [rax+0x0]

0000000000413490 <flatcc_verify_field@@Base>:
  413490:	lea    esi,[rsi+rsi*1]
  413493:	add    esi,0x4
  413496:	xor    eax,eax
  413498:	cmp    si,WORD PTR [rdi+0x1e]
  41349c:	jae    4134e2 <flatcc_verify_field@@Base+0x52>
  41349e:	mov    r8,QWORD PTR [rdi+0x10]
  4134a2:	movzx  esi,si
  4134a5:	movzx  esi,WORD PTR [r8+rsi*1]
  4134aa:	test   esi,esi
  4134ac:	je     4134e2 <flatcc_verify_field@@Base+0x52>
  4134ae:	add    edx,esi
  4134b0:	movzx  r8d,WORD PTR [rdi+0x1c]
  4134b5:	mov    eax,0xd
  4134ba:	cmp    edx,r8d
  4134bd:	ja     4134e2 <flatcc_verify_field@@Base+0x52>
  4134bf:	add    esi,DWORD PTR [rdi]
  4134c1:	mov    edx,DWORD PTR [rdi+0x18]
  4134c4:	add    edx,esi
  4134c6:	movzx  ecx,cx
  4134c9:	add    ecx,0xffffffff
  4134cc:	mov    eax,0x0
  4134d1:	test   edx,ecx
  4134d3:	je     4134e2 <flatcc_verify_field@@Base+0x52>
  4134d5:	add    esi,DWORD PTR [rdi+0x18]
  4134d8:	and    esi,ecx
  4134da:	mov    eax,0xc
  4134df:	cmove  eax,esi
  4134e2:	ret    
  4134e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4134ed:	nop    DWORD PTR [rax]

00000000004134f0 <flatcc_verify_string_field@@Base>:
  4134f0:	lea    eax,[rsi+rsi*1]
  4134f3:	add    eax,0x4
  4134f6:	cmp    ax,WORD PTR [rdi+0x1e]
  4134fa:	jae    41352a <flatcc_verify_string_field@@Base+0x3a>
  4134fc:	mov    rcx,QWORD PTR [rdi+0x10]
  413500:	movzx  eax,ax
  413503:	movzx  esi,WORD PTR [rcx+rax*1]
  413507:	test   esi,esi
  413509:	je     41352a <flatcc_verify_string_field@@Base+0x3a>
  41350b:	lea    ecx,[rsi+0x4]
  41350e:	movzx  edx,WORD PTR [rdi+0x1c]
  413512:	mov    eax,0xd
  413517:	cmp    ecx,edx
  413519:	ja     413529 <flatcc_verify_string_field@@Base+0x39>
  41351b:	add    esi,DWORD PTR [rdi+0x18]
  41351e:	mov    eax,0xc
  413523:	test   sil,0x3
  413527:	je     413535 <flatcc_verify_string_field@@Base+0x45>
  413529:	ret    
  41352a:	xor    eax,eax
  41352c:	test   edx,edx
  41352e:	setne  al
  413531:	shl    eax,0x2
  413534:	ret    
  413535:	test   esi,esi
  413537:	je     41358f <flatcc_verify_string_field@@Base+0x9f>
  413539:	mov    rcx,QWORD PTR [rdi]
  41353c:	mov    eax,esi
  41353e:	mov    edx,DWORD PTR [rcx+rax*1]
  413541:	add    edx,esi
  413543:	mov    eax,0x11
  413548:	cmp    edx,esi
  41354a:	jbe    413529 <flatcc_verify_string_field@@Base+0x39>
  41354c:	mov    r8d,DWORD PTR [rdi+0x8]
  413550:	mov    edi,edx
  413552:	lea    rsi,[rdi+0x4]
  413556:	cmp    rsi,r8
  413559:	ja     413529 <flatcc_verify_string_field@@Base+0x39>
  41355b:	mov    esi,edi
  41355d:	and    esi,0x3
  413560:	test   rsi,rsi
  413563:	jne    413529 <flatcc_verify_string_field@@Base+0x39>
  413565:	mov    edi,DWORD PTR [rcx+rdi*1]
  413568:	add    edx,0x4
  41356b:	sub    r8d,edx
  41356e:	lea    esi,[rdi+0x1]
  413571:	mov    eax,0x8
  413576:	cmp    r8d,esi
  413579:	jb     413529 <flatcc_verify_string_field@@Base+0x39>
  41357b:	mov    eax,edx
  41357d:	add    rcx,rax
  413580:	xor    edx,edx
  413582:	cmp    BYTE PTR [rdi+rcx*1],0x0
  413586:	mov    eax,0x7
  41358b:	cmove  eax,edx
  41358e:	ret    
  41358f:	xor    eax,eax
  413591:	ret    
  413592:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41359c:	nop    DWORD PTR [rax+0x0]

00000000004135a0 <flatcc_verify_vector_field@@Base>:
  4135a0:	lea    eax,[rsi+rsi*1]
  4135a3:	add    eax,0x4
  4135a6:	cmp    ax,WORD PTR [rdi+0x1e]
  4135aa:	jae    4135dc <flatcc_verify_vector_field@@Base+0x3c>
  4135ac:	mov    rsi,QWORD PTR [rdi+0x10]
  4135b0:	movzx  eax,ax
  4135b3:	movzx  esi,WORD PTR [rsi+rax*1]
  4135b7:	test   esi,esi
  4135b9:	je     4135dc <flatcc_verify_vector_field@@Base+0x3c>
  4135bb:	lea    r10d,[rsi+0x4]
  4135bf:	movzx  edx,WORD PTR [rdi+0x1c]
  4135c3:	mov    eax,0xd
  4135c8:	cmp    r10d,edx
  4135cb:	ja     4135db <flatcc_verify_vector_field@@Base+0x3b>
  4135cd:	add    esi,DWORD PTR [rdi+0x18]
  4135d0:	mov    eax,0xc
  4135d5:	test   sil,0x3
  4135d9:	je     4135e7 <flatcc_verify_vector_field@@Base+0x47>
  4135db:	ret    
  4135dc:	xor    eax,eax
  4135de:	test   edx,edx
  4135e0:	setne  al
  4135e3:	shl    eax,0x2
  4135e6:	ret    
  4135e7:	test   esi,esi
  4135e9:	je     413661 <flatcc_verify_vector_field@@Base+0xc1>
  4135eb:	mov    r10,QWORD PTR [rdi]
  4135ee:	mov    eax,esi
  4135f0:	mov    r11d,DWORD PTR [r10+rax*1]
  4135f4:	add    r11d,esi
  4135f7:	movzx  eax,r8w
  4135fb:	cmp    eax,0x4
  4135fe:	mov    edx,0x4
  413603:	cmova  edx,eax
  413606:	mov    eax,0x10
  41360b:	cmp    r11d,esi
  41360e:	jbe    4135db <flatcc_verify_vector_field@@Base+0x3b>
  413610:	mov    r8d,DWORD PTR [rdi+0x8]
  413614:	mov    edi,r11d
  413617:	lea    rsi,[rdi+0x4]
  41361b:	cmp    rsi,r8
  41361e:	ja     4135db <flatcc_verify_vector_field@@Base+0x3b>
  413620:	push   rbx
  413621:	movzx  edx,dx
  413624:	movabs rbx,0x1ffffffff
  41362e:	add    rbx,rdx
  413631:	or     rbx,0x3
  413635:	test   rsi,rbx
  413638:	pop    rbx
  413639:	jne    4135db <flatcc_verify_vector_field@@Base+0x3b>
  41363b:	mov    edx,DWORD PTR [r10+rdi*1]
  41363f:	mov    eax,0x19
  413644:	cmp    edx,r9d
  413647:	ja     4135db <flatcc_verify_vector_field@@Base+0x3b>
  413649:	add    r8d,0xfffffffc
  41364d:	sub    r8d,r11d
  413650:	imul   edx,ecx
  413653:	xor    ecx,ecx
  413655:	cmp    r8d,edx
  413658:	mov    eax,0x1a
  41365d:	cmovae eax,ecx
  413660:	ret    
  413661:	xor    eax,eax
  413663:	ret    
  413664:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41366e:	xchg   ax,ax

0000000000413670 <flatcc_verify_string_vector_field@@Base>:
  413670:	push   r14
  413672:	push   rbx
  413673:	lea    eax,[rsi+rsi*1]
  413676:	add    eax,0x4
  413679:	cmp    ax,WORD PTR [rdi+0x1e]
  41367d:	jae    4137ad <flatcc_verify_string_vector_field@@Base+0x13d>
  413683:	mov    rcx,QWORD PTR [rdi+0x10]
  413687:	movzx  eax,ax
  41368a:	movzx  esi,WORD PTR [rcx+rax*1]
  41368e:	test   esi,esi
  413690:	je     4137ad <flatcc_verify_string_vector_field@@Base+0x13d>
  413696:	lea    ecx,[rsi+0x4]
  413699:	movzx  edx,WORD PTR [rdi+0x1c]
  41369d:	mov    eax,0xd
  4136a2:	cmp    ecx,edx
  4136a4:	ja     4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  4136aa:	mov    edx,DWORD PTR [rdi+0x18]
  4136ad:	lea    ebx,[rdx+rsi*1]
  4136b0:	mov    eax,0xc
  4136b5:	test   bl,0x3
  4136b8:	jne    4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  4136be:	xor    eax,eax
  4136c0:	test   ebx,ebx
  4136c2:	je     4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  4136c8:	mov    r10,QWORD PTR [rdi]
  4136cb:	mov    eax,ebx
  4136cd:	mov    r14d,DWORD PTR [r10+rax*1]
  4136d1:	lea    ecx,[r14+rbx*1]
  4136d5:	mov    eax,0x10
  4136da:	cmp    ecx,ebx
  4136dc:	jbe    4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  4136e2:	test   cl,0x3
  4136e5:	jne    4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  4136eb:	mov    r9d,DWORD PTR [rdi+0x8]
  4136ef:	mov    edi,ecx
  4136f1:	lea    rbx,[rdi+0x4]
  4136f5:	cmp    rbx,r9
  4136f8:	ja     4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  4136fe:	mov    r8d,DWORD PTR [r10+rdi*1]
  413702:	mov    eax,0x19
  413707:	cmp    r8d,0x3fffffff
  41370e:	ja     4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  413714:	lea    edi,[r9-0x4]
  413718:	sub    edi,ecx
  41371a:	lea    ecx,[r8*4+0x0]
  413722:	mov    eax,0x1a
  413727:	cmp    edi,ecx
  413729:	jb     4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  41372f:	mov    eax,0x0
  413734:	test   r8d,r8d
  413737:	je     4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  413739:	lea    eax,[r14+rdx*1]
  41373d:	lea    edi,[rsi+rax*1]
  413740:	add    edi,0x4
  413743:	lea    r11d,[r9-0x8]
  413747:	sub    r11d,esi
  41374a:	sub    r11d,r14d
  41374d:	sub    r11d,edx
  413750:	xor    edx,edx
  413752:	mov    eax,edi
  413754:	mov    ecx,DWORD PTR [r10+rax*1]
  413758:	lea    esi,[rdi+rcx*1]
  41375b:	mov    eax,0x11
  413760:	cmp    esi,edi
  413762:	jbe    4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  413764:	mov    esi,esi
  413766:	lea    rbx,[rsi+0x4]
  41376a:	cmp    rbx,r9
  41376d:	ja     4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  41376f:	mov    ebx,esi
  413771:	and    ebx,0x3
  413774:	test   rbx,rbx
  413777:	jne    4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  413779:	mov    eax,DWORD PTR [r10+rsi*1]
  41377d:	mov    esi,r11d
  413780:	sub    esi,ecx
  413782:	lea    ebx,[rax+0x1]
  413785:	cmp    esi,ebx
  413787:	jb     4137bb <flatcc_verify_string_vector_field@@Base+0x14b>
  413789:	lea    ecx,[rdi+rcx*1]
  41378c:	add    ecx,0x4
  41378f:	mov    ecx,ecx
  413791:	add    rcx,r10
  413794:	cmp    BYTE PTR [rax+rcx*1],0x0
  413798:	jne    4137c2 <flatcc_verify_string_vector_field@@Base+0x152>
  41379a:	add    edx,0x1
  41379d:	add    edi,0x4
  4137a0:	add    r11d,0xfffffffc
  4137a4:	xor    eax,eax
  4137a6:	cmp    edx,r8d
  4137a9:	jb     413752 <flatcc_verify_string_vector_field@@Base+0xe2>
  4137ab:	jmp    4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  4137ad:	xor    eax,eax
  4137af:	test   edx,edx
  4137b1:	setne  al
  4137b4:	shl    eax,0x2
  4137b7:	pop    rbx
  4137b8:	pop    r14
  4137ba:	ret    
  4137bb:	mov    eax,0x8
  4137c0:	jmp    4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  4137c2:	mov    eax,0x7
  4137c7:	jmp    4137b7 <flatcc_verify_string_vector_field@@Base+0x147>
  4137c9:	nop    DWORD PTR [rax+0x0]

00000000004137d0 <flatcc_verify_table_field@@Base>:
  4137d0:	lea    eax,[rsi+rsi*1]
  4137d3:	add    eax,0x4
  4137d6:	cmp    ax,WORD PTR [rdi+0x1e]
  4137da:	jae    41380c <flatcc_verify_table_field@@Base+0x3c>
  4137dc:	mov    rsi,QWORD PTR [rdi+0x10]
  4137e0:	movzx  eax,ax
  4137e3:	movzx  esi,WORD PTR [rsi+rax*1]
  4137e7:	test   esi,esi
  4137e9:	je     41380c <flatcc_verify_table_field@@Base+0x3c>
  4137eb:	lea    r8d,[rsi+0x4]
  4137ef:	movzx  edx,WORD PTR [rdi+0x1c]
  4137f3:	mov    eax,0xd
  4137f8:	cmp    r8d,edx
  4137fb:	ja     41380b <flatcc_verify_table_field@@Base+0x3b>
  4137fd:	add    esi,DWORD PTR [rdi+0x18]
  413800:	mov    eax,0xc
  413805:	test   sil,0x3
  413809:	je     413817 <flatcc_verify_table_field@@Base+0x47>
  41380b:	ret    
  41380c:	xor    eax,eax
  41380e:	test   edx,edx
  413810:	setne  al
  413813:	shl    eax,0x2
  413816:	ret    
  413817:	test   esi,esi
  413819:	je     4138ff <flatcc_verify_table_field@@Base+0x12f>
  41381f:	sub    rsp,0x28
  413823:	mov    r10,QWORD PTR [rdi]
  413826:	mov    r8d,DWORD PTR [rdi+0x8]
  41382a:	mov    eax,esi
  41382c:	mov    edx,DWORD PTR [r10+rax*1]
  413830:	mov    eax,DWORD PTR [rdi+0xc]
  413833:	add    eax,0xffffffff
  413836:	mov    DWORD PTR [rsp+0x14],eax
  41383a:	je     413902 <flatcc_verify_table_field@@Base+0x132>
  413840:	add    edx,esi
  413842:	mov    eax,0xf
  413847:	cmp    edx,esi
  413849:	jbe    413907 <flatcc_verify_table_field@@Base+0x137>
  41384f:	mov    esi,edx
  413851:	lea    rdi,[rsi+0x4]
  413855:	cmp    rdi,r8
  413858:	ja     413907 <flatcc_verify_table_field@@Base+0x137>
  41385e:	mov    edi,esi
  413860:	and    edi,0x3
  413863:	test   rdi,rdi
  413866:	jne    413907 <flatcc_verify_table_field@@Base+0x137>
  41386c:	mov    DWORD PTR [rsp+0x20],edx
  413870:	mov    edi,edx
  413872:	sub    edi,DWORD PTR [r10+rsi*1]
  413876:	mov    eax,0x1d
  41387b:	test   edi,0x80000001
  413881:	jne    413907 <flatcc_verify_table_field@@Base+0x137>
  413887:	mov    r9d,edi
  41388a:	lea    rsi,[r9+0x2]
  41388e:	mov    eax,0x1b
  413893:	cmp    rsi,r8
  413896:	ja     413907 <flatcc_verify_table_field@@Base+0x137>
  413898:	movzx  r11d,WORD PTR [r10+r9*1]
  41389d:	mov    WORD PTR [rsp+0x26],r11w
  4138a3:	mov    eax,0x1e
  4138a8:	test   r11b,0x1
  4138ac:	jne    413907 <flatcc_verify_table_field@@Base+0x137>
  4138ae:	mov    esi,r11d
  4138b1:	add    esi,edi
  4138b3:	cmp    esi,r8d
  4138b6:	ja     413907 <flatcc_verify_table_field@@Base+0x137>
  4138b8:	movzx  esi,r11w
  4138bc:	mov    eax,0x1c
  4138c1:	cmp    esi,0x4
  4138c4:	jb     413907 <flatcc_verify_table_field@@Base+0x137>
  4138c6:	add    edi,0x2
  4138c9:	movzx  esi,WORD PTR [r10+rdi*1]
  4138ce:	mov    WORD PTR [rsp+0x24],si
  4138d3:	mov    edi,r8d
  4138d6:	sub    edi,edx
  4138d8:	mov    eax,0x14
  4138dd:	cmp    edi,esi
  4138df:	jb     413907 <flatcc_verify_table_field@@Base+0x137>
  4138e1:	add    r9,r10
  4138e4:	mov    QWORD PTR [rsp+0x18],r9
  4138e9:	mov    QWORD PTR [rsp+0x8],r10
  4138ee:	mov    DWORD PTR [rsp+0x10],r8d
  4138f3:	lea    rdi,[rsp+0x8]
  4138f8:	call   rcx
  4138fa:	add    rsp,0x28
  4138fe:	ret    
  4138ff:	xor    eax,eax
  413901:	ret    
  413902:	mov    eax,0x3
  413907:	add    rsp,0x28
  41390b:	ret    
  41390c:	nop    DWORD PTR [rax+0x0]

0000000000413910 <flatcc_verify_table_vector_field@@Base>:
  413910:	push   rbp
  413911:	push   r15
  413913:	push   r14
  413915:	push   r13
  413917:	push   r12
  413919:	push   rbx
  41391a:	sub    rsp,0x38
  41391e:	lea    eax,[rsi+rsi*1]
  413921:	add    eax,0x4
  413924:	cmp    ax,WORD PTR [rdi+0x1e]
  413928:	jae    413b31 <flatcc_verify_table_vector_field@@Base+0x221>
  41392e:	mov    rbx,rcx
  413931:	mov    rcx,QWORD PTR [rdi+0x10]
  413935:	movzx  eax,ax
  413938:	movzx  ecx,WORD PTR [rcx+rax*1]
  41393c:	test   ecx,ecx
  41393e:	je     413b31 <flatcc_verify_table_vector_field@@Base+0x221>
  413944:	lea    edx,[rcx+0x4]
  413947:	movzx  esi,WORD PTR [rdi+0x1c]
  41394b:	mov    eax,0xd
  413950:	cmp    edx,esi
  413952:	ja     413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413958:	mov    edx,DWORD PTR [rdi+0x18]
  41395b:	lea    esi,[rdx+rcx*1]
  41395e:	mov    eax,0xc
  413963:	test   sil,0x3
  413967:	jne    413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  41396d:	xor    eax,eax
  41396f:	test   esi,esi
  413971:	je     413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413977:	mov    r12d,DWORD PTR [rdi+0xc]
  41397b:	test   r12d,r12d
  41397e:	jle    413b4a <flatcc_verify_table_vector_field@@Base+0x23a>
  413984:	mov    r15,QWORD PTR [rdi]
  413987:	mov    eax,esi
  413989:	mov    r8d,DWORD PTR [r15+rax*1]
  41398d:	lea    ebp,[r8+rsi*1]
  413991:	mov    eax,0x10
  413996:	cmp    ebp,esi
  413998:	jbe    413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  41399e:	test   bpl,0x3
  4139a2:	jne    413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  4139a8:	mov    r9d,DWORD PTR [rdi+0x8]
  4139ac:	mov    esi,ebp
  4139ae:	lea    rdi,[rsi+0x4]
  4139b2:	cmp    rdi,r9
  4139b5:	ja     413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  4139bb:	mov    r10d,DWORD PTR [r15+rsi*1]
  4139bf:	mov    eax,0x19
  4139c4:	cmp    r10d,0x3fffffff
  4139cb:	ja     413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  4139d1:	lea    r11d,[r9-0x4]
  4139d5:	mov    esi,r11d
  4139d8:	sub    esi,ebp
  4139da:	lea    edi,[r10*4+0x0]
  4139e2:	mov    eax,0x1a
  4139e7:	cmp    esi,edi
  4139e9:	jb     413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  4139ef:	mov    eax,0x0
  4139f4:	test   r10d,r10d
  4139f7:	je     413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  4139fd:	add    r12d,0xfffffffe
  413a01:	lea    eax,[r8+rdx*1]
  413a05:	lea    r13d,[rcx+rax*1]
  413a09:	add    r13d,0x4
  413a0d:	sub    r11d,ecx
  413a10:	sub    r11d,r8d
  413a13:	sub    r11d,edx
  413a16:	xor    ecx,ecx
  413a18:	mov    QWORD PTR [rsp+0x30],r9
  413a1d:	mov    QWORD PTR [rsp+0x28],r15
  413a22:	mov    r13d,r13d
  413a25:	mov    r14d,DWORD PTR [r15+r13*1]
  413a29:	mov    DWORD PTR [rsp+0x14],r12d
  413a2e:	test   r12d,r12d
  413a31:	je     413c19 <flatcc_verify_table_vector_field@@Base+0x309>
  413a37:	lea    eax,[r14+r13*1]
  413a3b:	cmp    eax,r13d
  413a3e:	jbe    413b51 <flatcc_verify_table_vector_field@@Base+0x241>
  413a44:	mov    edx,eax
  413a46:	lea    rsi,[rdx+0x4]
  413a4a:	cmp    rsi,r9
  413a4d:	ja     413b51 <flatcc_verify_table_vector_field@@Base+0x241>
  413a53:	mov    esi,edx
  413a55:	and    esi,0x3
  413a58:	test   rsi,rsi
  413a5b:	jne    413b51 <flatcc_verify_table_vector_field@@Base+0x241>
  413a61:	mov    DWORD PTR [rsp+0x20],eax
  413a65:	mov    esi,DWORD PTR [r15+rdx*1]
  413a69:	mov    edx,r14d
  413a6c:	sub    edx,esi
  413a6e:	lea    eax,[rdx+r13*1]
  413a72:	test   eax,0x80000001
  413a77:	jne    413b51 <flatcc_verify_table_vector_field@@Base+0x241>
  413a7d:	mov    eax,eax
  413a7f:	lea    rdi,[rax+0x2]
  413a83:	cmp    rdi,r9
  413a86:	ja     413b51 <flatcc_verify_table_vector_field@@Base+0x241>
  413a8c:	movzx  ebp,WORD PTR [r15+rax*1]
  413a91:	mov    WORD PTR [rsp+0x26],bp
  413a96:	cmp    ebp,0x4
  413a99:	jb     413b51 <flatcc_verify_table_vector_field@@Base+0x241>
  413a9f:	mov    edi,ebp
  413aa1:	and    edi,0x1
  413aa4:	test   di,di
  413aa7:	jne    413b51 <flatcc_verify_table_vector_field@@Base+0x241>
  413aad:	add    ebp,r14d
  413ab0:	sub    ebp,esi
  413ab2:	add    ebp,r13d
  413ab5:	cmp    ebp,r9d
  413ab8:	ja     413b51 <flatcc_verify_table_vector_field@@Base+0x241>
  413abe:	lea    edx,[rdx+r13*1]
  413ac2:	add    edx,0x2
  413ac5:	movzx  edx,WORD PTR [r15+rdx*1]
  413aca:	mov    WORD PTR [rsp+0x24],dx
  413acf:	mov    esi,r11d
  413ad2:	sub    esi,r14d
  413ad5:	cmp    esi,edx
  413ad7:	jb     413b51 <flatcc_verify_table_vector_field@@Base+0x241>
  413ad9:	mov    rdx,r15
  413adc:	mov    r15d,ecx
  413adf:	mov    ebp,r11d
  413ae2:	mov    r14,r10
  413ae5:	add    rax,rdx
  413ae8:	mov    QWORD PTR [rsp+0x18],rax
  413aed:	mov    QWORD PTR [rsp+0x8],rdx
  413af2:	mov    DWORD PTR [rsp+0x10],r9d
  413af7:	lea    rdi,[rsp+0x8]
  413afc:	call   rbx
  413afe:	test   eax,eax
  413b00:	jne    413c2b <flatcc_verify_table_vector_field@@Base+0x31b>
  413b06:	mov    ecx,r15d
  413b09:	add    ecx,0x1
  413b0c:	add    r13d,0x4
  413b10:	mov    r11d,ebp
  413b13:	add    r11d,0xfffffffc
  413b17:	xor    eax,eax
  413b19:	mov    r10,r14
  413b1c:	cmp    ecx,r10d
  413b1f:	mov    r9,QWORD PTR [rsp+0x30]
  413b24:	mov    r15,QWORD PTR [rsp+0x28]
  413b29:	jb     413a22 <flatcc_verify_table_vector_field@@Base+0x112>
  413b2f:	jmp    413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413b31:	xor    eax,eax
  413b33:	test   edx,edx
  413b35:	setne  al
  413b38:	shl    eax,0x2
  413b3b:	add    rsp,0x38
  413b3f:	pop    rbx
  413b40:	pop    r12
  413b42:	pop    r13
  413b44:	pop    r14
  413b46:	pop    r15
  413b48:	pop    rbp
  413b49:	ret    
  413b4a:	mov    eax,0x3
  413b4f:	jmp    413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413b51:	mov    DWORD PTR [rsp+0x14],r12d
  413b56:	add    r14d,r13d
  413b59:	mov    eax,0xf
  413b5e:	cmp    r14d,r13d
  413b61:	jbe    413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413b63:	mov    edx,r14d
  413b66:	lea    rsi,[rdx+0x4]
  413b6a:	cmp    rsi,r9
  413b6d:	ja     413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413b6f:	mov    esi,edx
  413b71:	and    esi,0x3
  413b74:	test   rsi,rsi
  413b77:	jne    413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413b79:	mov    DWORD PTR [rsp+0x20],r14d
  413b7e:	mov    esi,r14d
  413b81:	sub    esi,DWORD PTR [r15+rdx*1]
  413b85:	mov    eax,0x1d
  413b8a:	test   esi,0x80000001
  413b90:	jne    413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413b92:	mov    edx,esi
  413b94:	lea    rdi,[rdx+0x2]
  413b98:	mov    eax,0x1b
  413b9d:	cmp    rdi,r9
  413ba0:	ja     413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413ba2:	movzx  ebp,WORD PTR [r15+rdx*1]
  413ba7:	mov    WORD PTR [rsp+0x26],bp
  413bac:	mov    eax,0x1e
  413bb1:	test   bpl,0x1
  413bb5:	jne    413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413bb7:	mov    edi,ebp
  413bb9:	add    edi,esi
  413bbb:	mov    r8,r9
  413bbe:	cmp    edi,r8d
  413bc1:	ja     413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413bc7:	movzx  edi,bp
  413bca:	mov    eax,0x1c
  413bcf:	cmp    edi,0x4
  413bd2:	jb     413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413bd8:	mov    rcx,r15
  413bdb:	add    esi,0x2
  413bde:	movzx  esi,WORD PTR [r15+rsi*1]
  413be3:	mov    WORD PTR [rsp+0x24],si
  413be8:	mov    edi,r8d
  413beb:	sub    edi,r14d
  413bee:	mov    eax,0x14
  413bf3:	cmp    edi,esi
  413bf5:	jb     413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413bfb:	add    rdx,rcx
  413bfe:	mov    QWORD PTR [rsp+0x18],rdx
  413c03:	mov    QWORD PTR [rsp+0x8],rcx
  413c08:	mov    DWORD PTR [rsp+0x10],r8d
  413c0d:	lea    rdi,[rsp+0x8]
  413c12:	call   rbx
  413c14:	jmp    413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413c19:	mov    DWORD PTR [rsp+0x14],0x0
  413c21:	mov    eax,0x3
  413c26:	jmp    413b3b <flatcc_verify_table_vector_field@@Base+0x22b>
  413c2b:	mov    r15,QWORD PTR [rsp+0x28]
  413c30:	mov    r14d,DWORD PTR [r15+r13*1]
  413c34:	add    r14d,r13d
  413c37:	mov    DWORD PTR [rsp+0x14],r12d
  413c3c:	mov    r9,QWORD PTR [rsp+0x30]
  413c41:	jmp    413b59 <flatcc_verify_table_vector_field@@Base+0x249>
  413c46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000413c50 <flatcc_verify_union_table@@Base>:
  413c50:	sub    rsp,0x28
  413c54:	mov    r8,QWORD PTR [rdi]
  413c57:	mov    r11d,DWORD PTR [rdi+0x8]
  413c5b:	mov    edx,DWORD PTR [rdi+0x14]
  413c5e:	mov    ecx,DWORD PTR [rdi+0x18]
  413c61:	mov    eax,DWORD PTR [rdi+0xc]
  413c64:	add    eax,0xffffffff
  413c67:	mov    DWORD PTR [rsp+0x14],eax
  413c6b:	je     413d2d <flatcc_verify_union_table@@Base+0xdd>
  413c71:	add    ecx,edx
  413c73:	mov    eax,0xf
  413c78:	cmp    ecx,edx
  413c7a:	jbe    413d28 <flatcc_verify_union_table@@Base+0xd8>
  413c80:	mov    edi,ecx
  413c82:	lea    rdx,[rdi+0x4]
  413c86:	cmp    rdx,r11
  413c89:	ja     413d28 <flatcc_verify_union_table@@Base+0xd8>
  413c8f:	mov    edx,edi
  413c91:	and    edx,0x3
  413c94:	test   rdx,rdx
  413c97:	jne    413d28 <flatcc_verify_union_table@@Base+0xd8>
  413c9d:	mov    DWORD PTR [rsp+0x20],ecx
  413ca1:	mov    r10d,ecx
  413ca4:	sub    r10d,DWORD PTR [r8+rdi*1]
  413ca8:	mov    eax,0x1d
  413cad:	test   r10d,0x80000001
  413cb4:	jne    413d28 <flatcc_verify_union_table@@Base+0xd8>
  413cb6:	mov    r9d,r10d
  413cb9:	lea    rdx,[r9+0x2]
  413cbd:	mov    eax,0x1b
  413cc2:	cmp    rdx,r11
  413cc5:	ja     413d28 <flatcc_verify_union_table@@Base+0xd8>
  413cc7:	movzx  edi,WORD PTR [r8+r9*1]
  413ccc:	mov    WORD PTR [rsp+0x26],di
  413cd1:	mov    eax,0x1e
  413cd6:	test   dil,0x1
  413cda:	jne    413d28 <flatcc_verify_union_table@@Base+0xd8>
  413cdc:	mov    edx,edi
  413cde:	add    edx,r10d
  413ce1:	cmp    edx,r11d
  413ce4:	ja     413d28 <flatcc_verify_union_table@@Base+0xd8>
  413ce6:	movzx  edx,di
  413ce9:	mov    eax,0x1c
  413cee:	cmp    edx,0x4
  413cf1:	jb     413d28 <flatcc_verify_union_table@@Base+0xd8>
  413cf3:	add    r10d,0x2
  413cf7:	movzx  edx,WORD PTR [r8+r10*1]
  413cfc:	mov    WORD PTR [rsp+0x24],dx
  413d01:	mov    edi,r11d
  413d04:	sub    edi,ecx
  413d06:	mov    eax,0x14
  413d0b:	cmp    edi,edx
  413d0d:	jb     413d28 <flatcc_verify_union_table@@Base+0xd8>
  413d0f:	add    r9,r8
  413d12:	mov    QWORD PTR [rsp+0x18],r9
  413d17:	mov    QWORD PTR [rsp+0x8],r8
  413d1c:	mov    DWORD PTR [rsp+0x10],r11d
  413d21:	lea    rdi,[rsp+0x8]
  413d26:	call   rsi
  413d28:	add    rsp,0x28
  413d2c:	ret    
  413d2d:	mov    eax,0x3
  413d32:	add    rsp,0x28
  413d36:	ret    
  413d37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000413d40 <flatcc_verify_union_struct@@Base>:
  413d40:	mov    ecx,DWORD PTR [rdi+0x18]
  413d43:	mov    eax,0x12
  413d48:	test   ecx,ecx
  413d4a:	je     413d7b <flatcc_verify_union_struct@@Base+0x3b>
  413d4c:	mov    r8d,DWORD PTR [rdi+0x8]
  413d50:	add    ecx,DWORD PTR [rdi+0x14]
  413d53:	cmp    ecx,r8d
  413d56:	ja     413d7b <flatcc_verify_union_struct@@Base+0x3b>
  413d58:	mov    eax,0xa
  413d5d:	add    esi,ecx
  413d5f:	jb     413d7b <flatcc_verify_union_struct@@Base+0x3b>
  413d61:	mov    eax,0x9
  413d66:	cmp    esi,r8d
  413d69:	ja     413d7b <flatcc_verify_union_struct@@Base+0x3b>
  413d6b:	movzx  eax,dx
  413d6e:	add    eax,0xffffffff
  413d71:	and    ecx,eax
  413d73:	mov    eax,0xb
  413d78:	cmove  eax,ecx
  413d7b:	ret    
  413d7c:	nop    DWORD PTR [rax+0x0]

0000000000413d80 <flatcc_verify_union_string@@Base>:
  413d80:	mov    edx,DWORD PTR [rdi+0x14]
  413d83:	mov    ecx,DWORD PTR [rdi+0x18]
  413d86:	add    ecx,edx
  413d88:	mov    eax,0x11
  413d8d:	cmp    ecx,edx
  413d8f:	jbe    413dd6 <flatcc_verify_union_string@@Base+0x56>
  413d91:	mov    r8d,DWORD PTR [rdi+0x8]
  413d95:	mov    esi,ecx
  413d97:	lea    rdx,[rsi+0x4]
  413d9b:	cmp    rdx,r8
  413d9e:	ja     413dd6 <flatcc_verify_union_string@@Base+0x56>
  413da0:	mov    edx,esi
  413da2:	and    edx,0x3
  413da5:	test   rdx,rdx
  413da8:	jne    413dd6 <flatcc_verify_union_string@@Base+0x56>
  413daa:	mov    rdi,QWORD PTR [rdi]
  413dad:	mov    esi,DWORD PTR [rdi+rsi*1]
  413db0:	add    ecx,0x4
  413db3:	sub    r8d,ecx
  413db6:	lea    edx,[rsi+0x1]
  413db9:	mov    eax,0x8
  413dbe:	cmp    r8d,edx
  413dc1:	jb     413dd6 <flatcc_verify_union_string@@Base+0x56>
  413dc3:	mov    eax,ecx
  413dc5:	add    rdi,rax
  413dc8:	xor    ecx,ecx
  413dca:	cmp    BYTE PTR [rsi+rdi*1],0x0
  413dce:	mov    eax,0x7
  413dd3:	cmove  eax,ecx
  413dd6:	ret    
  413dd7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000413de0 <flatcc_verify_buffer_header@@Base>:
  413de0:	push   rbx
  413de1:	sub    rsp,0x10
  413de5:	mov    rbx,rdi
  413de8:	mov    eax,0x5
  413ded:	test   bl,0x3
  413df0:	jne    413e48 <flatcc_verify_buffer_header@@Base+0x68>
  413df2:	mov    rcx,rdx
  413df5:	mov    rdx,rsi
  413df8:	shr    rdx,0x3
  413dfc:	mov    eax,0x6
  413e01:	cmp    rdx,0x1ffffffe
  413e08:	ja     413e48 <flatcc_verify_buffer_header@@Base+0x68>
  413e0a:	mov    eax,0x1
  413e0f:	cmp    rsi,0x8
  413e13:	jb     413e48 <flatcc_verify_buffer_header@@Base+0x68>
  413e15:	test   rcx,rcx
  413e18:	je     413e46 <flatcc_verify_buffer_header@@Base+0x66>
  413e1a:	mov    DWORD PTR [rsp+0xc],0x0
  413e22:	lea    rdi,[rsp+0xc]
  413e27:	mov    edx,0x4
  413e2c:	mov    rsi,rcx
  413e2f:	call   404040 <strncpy@plt>
  413e34:	mov    ecx,DWORD PTR [rsp+0xc]
  413e38:	test   ecx,ecx
  413e3a:	je     413e46 <flatcc_verify_buffer_header@@Base+0x66>
  413e3c:	mov    eax,0x2
  413e41:	cmp    DWORD PTR [rbx+0x4],ecx
  413e44:	jne    413e48 <flatcc_verify_buffer_header@@Base+0x68>
  413e46:	xor    eax,eax
  413e48:	add    rsp,0x10
  413e4c:	pop    rbx
  413e4d:	ret    
  413e4e:	xchg   ax,ax

0000000000413e50 <flatcc_verify_typed_buffer_header@@Base>:
  413e50:	mov    eax,0x5
  413e55:	test   dil,0x3
  413e59:	jne    413e8b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  413e5b:	mov    rcx,rsi
  413e5e:	shr    rcx,0x3
  413e62:	mov    eax,0x6
  413e67:	cmp    rcx,0x1ffffffe
  413e6e:	ja     413e8b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  413e70:	mov    eax,0x1
  413e75:	cmp    rsi,0x8
  413e79:	jb     413e8b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  413e7b:	test   edx,edx
  413e7d:	je     413e89 <flatcc_verify_typed_buffer_header@@Base+0x39>
  413e7f:	mov    eax,0x2
  413e84:	cmp    DWORD PTR [rdi+0x4],edx
  413e87:	jne    413e8b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  413e89:	xor    eax,eax
  413e8b:	ret    
  413e8c:	nop    DWORD PTR [rax+0x0]

0000000000413e90 <flatcc_verify_struct_as_root@@Base>:
  413e90:	push   rbp
  413e91:	push   r15
  413e93:	push   r14
  413e95:	push   r12
  413e97:	push   rbx
  413e98:	sub    rsp,0x10
  413e9c:	mov    rbx,rdi
  413e9f:	mov    eax,0x5
  413ea4:	test   bl,0x3
  413ea7:	jne    413f6f <flatcc_verify_struct_as_root@@Base+0xdf>
  413ead:	mov    r15,rcx
  413eb0:	mov    rbp,rsi
  413eb3:	mov    rcx,rsi
  413eb6:	shr    rcx,0x3
  413eba:	mov    eax,0x6
  413ebf:	cmp    rcx,0x1ffffffe
  413ec6:	ja     413f6f <flatcc_verify_struct_as_root@@Base+0xdf>
  413ecc:	mov    eax,0x1
  413ed1:	cmp    rbp,0x8
  413ed5:	jb     413f6f <flatcc_verify_struct_as_root@@Base+0xdf>
  413edb:	mov    r14d,r8d
  413ede:	mov    r12,rdx
  413ee1:	test   rdx,rdx
  413ee4:	je     413f3c <flatcc_verify_struct_as_root@@Base+0xac>
  413ee6:	mov    DWORD PTR [rsp+0x8],0x0
  413eee:	lea    rdi,[rsp+0x8]
  413ef3:	mov    edx,0x4
  413ef8:	mov    rsi,r12
  413efb:	call   404040 <strncpy@plt>
  413f00:	mov    eax,DWORD PTR [rsp+0x8]
  413f04:	test   eax,eax
  413f06:	je     413f3c <flatcc_verify_struct_as_root@@Base+0xac>
  413f08:	cmp    DWORD PTR [rbx+0x4],eax
  413f0b:	je     413f3c <flatcc_verify_struct_as_root@@Base+0xac>
  413f0d:	mov    DWORD PTR [rsp+0xc],0x0
  413f15:	lea    rdi,[rsp+0xc]
  413f1a:	mov    edx,0x4
  413f1f:	mov    rsi,r12
  413f22:	call   404040 <strncpy@plt>
  413f27:	mov    ecx,DWORD PTR [rsp+0xc]
  413f2b:	xor    eax,eax
  413f2d:	cmp    DWORD PTR [rbx+0x4],ecx
  413f30:	setne  al
  413f33:	add    eax,eax
  413f35:	test   ecx,ecx
  413f37:	cmove  eax,ecx
  413f3a:	jmp    413f6f <flatcc_verify_struct_as_root@@Base+0xdf>
  413f3c:	mov    ecx,DWORD PTR [rbx]
  413f3e:	lea    edx,[rcx-0x1]
  413f41:	mov    eax,0x12
  413f46:	cmp    edx,ebp
  413f48:	jae    413f6f <flatcc_verify_struct_as_root@@Base+0xdf>
  413f4a:	mov    eax,0xa
  413f4f:	add    r15d,ecx
  413f52:	jb     413f6f <flatcc_verify_struct_as_root@@Base+0xdf>
  413f54:	mov    eax,0x9
  413f59:	cmp    r15d,ebp
  413f5c:	ja     413f6f <flatcc_verify_struct_as_root@@Base+0xdf>
  413f5e:	movzx  eax,r14w
  413f62:	add    eax,0xffffffff
  413f65:	and    ecx,eax
  413f67:	mov    eax,0xb
  413f6c:	cmove  eax,ecx
  413f6f:	add    rsp,0x10
  413f73:	pop    rbx
  413f74:	pop    r12
  413f76:	pop    r14
  413f78:	pop    r15
  413f7a:	pop    rbp
  413f7b:	ret    
  413f7c:	nop    DWORD PTR [rax+0x0]

0000000000413f80 <flatcc_verify_struct_as_typed_root@@Base>:
  413f80:	mov    eax,0x5
  413f85:	test   dil,0x3
  413f89:	jne    413fea <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  413f8b:	mov    r9,rsi
  413f8e:	shr    r9,0x3
  413f92:	mov    eax,0x6
  413f97:	cmp    r9,0x1ffffffe
  413f9e:	ja     413fea <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  413fa0:	mov    eax,0x1
  413fa5:	cmp    rsi,0x8
  413fa9:	jb     413fea <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  413fab:	test   edx,edx
  413fad:	je     413fb9 <flatcc_verify_struct_as_typed_root@@Base+0x39>
  413faf:	mov    eax,0x2
  413fb4:	cmp    DWORD PTR [rdi+0x4],edx
  413fb7:	jne    413fea <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  413fb9:	mov    edx,DWORD PTR [rdi]
  413fbb:	lea    edi,[rdx-0x1]
  413fbe:	mov    eax,0x12
  413fc3:	cmp    edi,esi
  413fc5:	jae    413fea <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  413fc7:	mov    eax,0xa
  413fcc:	add    ecx,edx
  413fce:	jb     413fea <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  413fd0:	mov    eax,0x9
  413fd5:	cmp    ecx,esi
  413fd7:	ja     413fea <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  413fd9:	movzx  eax,r8w
  413fdd:	add    eax,0xffffffff
  413fe0:	and    edx,eax
  413fe2:	mov    eax,0xb
  413fe7:	cmove  eax,edx
  413fea:	ret    
  413feb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000413ff0 <flatcc_verify_table_as_root@@Base>:
  413ff0:	push   r15
  413ff2:	push   r14
  413ff4:	push   r13
  413ff6:	push   r12
  413ff8:	push   rbx
  413ff9:	sub    rsp,0x20
  413ffd:	mov    r12,rdi
  414000:	mov    eax,0x5
  414005:	test   r12b,0x3
  414009:	jne    414155 <flatcc_verify_table_as_root@@Base+0x165>
  41400f:	mov    r14,rcx
  414012:	mov    r15,rsi
  414015:	mov    r13d,r15d
  414018:	mov    rcx,r13
  41401b:	shr    rcx,0x3
  41401f:	mov    eax,0x6
  414024:	cmp    rcx,0x1ffffffe
  41402b:	ja     414155 <flatcc_verify_table_as_root@@Base+0x165>
  414031:	mov    eax,0x1
  414036:	cmp    r13,0x8
  41403a:	jb     414155 <flatcc_verify_table_as_root@@Base+0x165>
  414040:	mov    rbx,rdx
  414043:	test   rdx,rdx
  414046:	je     41409d <flatcc_verify_table_as_root@@Base+0xad>
  414048:	mov    DWORD PTR [rsp],0x0
  41404f:	mov    rdi,rsp
  414052:	mov    edx,0x4
  414057:	mov    rsi,rbx
  41405a:	call   404040 <strncpy@plt>
  41405f:	mov    eax,DWORD PTR [rsp]
  414062:	test   eax,eax
  414064:	je     41409d <flatcc_verify_table_as_root@@Base+0xad>
  414066:	cmp    DWORD PTR [r12+0x4],eax
  41406b:	je     41409d <flatcc_verify_table_as_root@@Base+0xad>
  41406d:	mov    DWORD PTR [rsp],0x0
  414074:	mov    rdi,rsp
  414077:	mov    edx,0x4
  41407c:	mov    rsi,rbx
  41407f:	call   404040 <strncpy@plt>
  414084:	mov    ecx,DWORD PTR [rsp]
  414087:	xor    eax,eax
  414089:	cmp    DWORD PTR [r12+0x4],ecx
  41408e:	setne  al
  414091:	add    eax,eax
  414093:	test   ecx,ecx
  414095:	cmove  eax,ecx
  414098:	jmp    414155 <flatcc_verify_table_as_root@@Base+0x165>
  41409d:	mov    ecx,DWORD PTR [r12]
  4140a1:	mov    DWORD PTR [rsp+0xc],0x63
  4140a9:	mov    eax,0xf
  4140ae:	test   rcx,rcx
  4140b1:	je     414155 <flatcc_verify_table_as_root@@Base+0x165>
  4140b7:	lea    rdx,[rcx+0x4]
  4140bb:	cmp    rdx,r13
  4140be:	ja     414155 <flatcc_verify_table_as_root@@Base+0x165>
  4140c4:	mov    edx,ecx
  4140c6:	and    edx,0x3
  4140c9:	test   rdx,rdx
  4140cc:	jne    414155 <flatcc_verify_table_as_root@@Base+0x165>
  4140d2:	mov    DWORD PTR [rsp+0x18],ecx
  4140d6:	mov    esi,ecx
  4140d8:	sub    esi,DWORD PTR [r12+rcx*1]
  4140dc:	mov    eax,0x1d
  4140e1:	test   esi,0x80000001
  4140e7:	jne    414155 <flatcc_verify_table_as_root@@Base+0x165>
  4140e9:	mov    edx,esi
  4140eb:	lea    rdi,[rdx+0x2]
  4140ef:	mov    eax,0x1b
  4140f4:	cmp    rdi,r13
  4140f7:	ja     414155 <flatcc_verify_table_as_root@@Base+0x165>
  4140f9:	movzx  ebx,WORD PTR [r12+rdx*1]
  4140fe:	mov    WORD PTR [rsp+0x1e],bx
  414103:	mov    eax,0x1e
  414108:	test   bl,0x1
  41410b:	jne    414155 <flatcc_verify_table_as_root@@Base+0x165>
  41410d:	mov    edi,ebx
  41410f:	add    edi,esi
  414111:	cmp    edi,r15d
  414114:	ja     414155 <flatcc_verify_table_as_root@@Base+0x165>
  414116:	movzx  edi,bx
  414119:	mov    eax,0x1c
  41411e:	cmp    edi,0x4
  414121:	jb     414155 <flatcc_verify_table_as_root@@Base+0x165>
  414123:	add    esi,0x2
  414126:	movzx  esi,WORD PTR [r12+rsi*1]
  41412b:	mov    WORD PTR [rsp+0x1c],si
  414130:	mov    edi,r15d
  414133:	sub    edi,ecx
  414135:	mov    eax,0x14
  41413a:	cmp    edi,esi
  41413c:	jb     414155 <flatcc_verify_table_as_root@@Base+0x165>
  41413e:	add    rdx,r12
  414141:	mov    QWORD PTR [rsp+0x10],rdx
  414146:	mov    QWORD PTR [rsp],r12
  41414a:	mov    DWORD PTR [rsp+0x8],r15d
  41414f:	mov    rdi,rsp
  414152:	call   r14
  414155:	add    rsp,0x20
  414159:	pop    rbx
  41415a:	pop    r12
  41415c:	pop    r13
  41415e:	pop    r14
  414160:	pop    r15
  414162:	ret    
  414163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41416d:	nop    DWORD PTR [rax]

0000000000414170 <flatcc_verify_table_as_typed_root@@Base>:
  414170:	mov    eax,0x5
  414175:	test   dil,0x3
  414179:	jne    414288 <flatcc_verify_table_as_typed_root@@Base+0x118>
  41417f:	mov    r8d,esi
  414182:	mov    r9,r8
  414185:	shr    r9,0x3
  414189:	mov    eax,0x6
  41418e:	cmp    r9,0x1ffffffe
  414195:	ja     414288 <flatcc_verify_table_as_typed_root@@Base+0x118>
  41419b:	mov    eax,0x1
  4141a0:	cmp    r8,0x8
  4141a4:	jb     414288 <flatcc_verify_table_as_typed_root@@Base+0x118>
  4141aa:	test   edx,edx
  4141ac:	je     4141bc <flatcc_verify_table_as_typed_root@@Base+0x4c>
  4141ae:	mov    eax,0x2
  4141b3:	cmp    DWORD PTR [rdi+0x4],edx
  4141b6:	jne    414288 <flatcc_verify_table_as_typed_root@@Base+0x118>
  4141bc:	sub    rsp,0x28
  4141c0:	mov    r11d,DWORD PTR [rdi]
  4141c3:	mov    DWORD PTR [rsp+0x14],0x63
  4141cb:	mov    eax,0xf
  4141d0:	test   r11,r11
  4141d3:	je     414284 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4141d9:	lea    rdx,[r11+0x4]
  4141dd:	cmp    rdx,r8
  4141e0:	ja     414284 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4141e6:	mov    edx,r11d
  4141e9:	and    edx,0x3
  4141ec:	test   rdx,rdx
  4141ef:	jne    414284 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4141f5:	mov    DWORD PTR [rsp+0x20],r11d
  4141fa:	mov    r10d,r11d
  4141fd:	sub    r10d,DWORD PTR [rdi+r11*1]
  414201:	mov    eax,0x1d
  414206:	test   r10d,0x80000001
  41420d:	jne    414284 <flatcc_verify_table_as_typed_root@@Base+0x114>
  41420f:	mov    r9d,r10d
  414212:	lea    rdx,[r9+0x2]
  414216:	mov    eax,0x1b
  41421b:	cmp    rdx,r8
  41421e:	ja     414284 <flatcc_verify_table_as_typed_root@@Base+0x114>
  414220:	movzx  r8d,WORD PTR [rdi+r9*1]
  414225:	mov    WORD PTR [rsp+0x26],r8w
  41422b:	mov    eax,0x1e
  414230:	test   r8b,0x1
  414234:	jne    414284 <flatcc_verify_table_as_typed_root@@Base+0x114>
  414236:	mov    edx,r8d
  414239:	add    edx,r10d
  41423c:	cmp    edx,esi
  41423e:	ja     414284 <flatcc_verify_table_as_typed_root@@Base+0x114>
  414240:	movzx  edx,r8w
  414244:	mov    eax,0x1c
  414249:	cmp    edx,0x4
  41424c:	jb     414284 <flatcc_verify_table_as_typed_root@@Base+0x114>
  41424e:	add    r10d,0x2
  414252:	movzx  r8d,WORD PTR [rdi+r10*1]
  414257:	mov    WORD PTR [rsp+0x24],r8w
  41425d:	mov    edx,esi
  41425f:	sub    edx,r11d
  414262:	mov    eax,0x14
  414267:	cmp    edx,r8d
  41426a:	jb     414284 <flatcc_verify_table_as_typed_root@@Base+0x114>
  41426c:	add    r9,rdi
  41426f:	mov    QWORD PTR [rsp+0x18],r9
  414274:	mov    QWORD PTR [rsp+0x8],rdi
  414279:	mov    DWORD PTR [rsp+0x10],esi
  41427d:	lea    rdi,[rsp+0x8]
  414282:	call   rcx
  414284:	add    rsp,0x28
  414288:	ret    
  414289:	nop    DWORD PTR [rax+0x0]

0000000000414290 <flatcc_verify_struct_as_nested_root@@Base>:
  414290:	push   r14
  414292:	push   rbx
  414293:	lea    esi,[rsi+rsi*1]
  414296:	add    esi,0x4
  414299:	movzx  r10d,WORD PTR [rdi+0x1e]
  41429e:	cmp    si,r10w
  4142a2:	jae    41430c <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  4142a4:	mov    r11,QWORD PTR [rdi+0x10]
  4142a8:	movzx  ebx,si
  4142ab:	movzx  eax,WORD PTR [r11+rbx*1]
  4142b0:	test   eax,eax
  4142b2:	je     41430c <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  4142b4:	add    r11,rbx
  4142b7:	lea    esi,[rax+0x4]
  4142ba:	movzx  ebx,WORD PTR [rdi+0x1c]
  4142be:	cmp    esi,ebx
  4142c0:	ja     414326 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  4142c2:	add    eax,DWORD PTR [rdi+0x18]
  4142c5:	test   al,0x3
  4142c7:	jne    414326 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  4142c9:	test   eax,eax
  4142cb:	je     4143bd <flatcc_verify_struct_as_nested_root@@Base+0x12d>
  4142d1:	mov    r10,QWORD PTR [rdi]
  4142d4:	mov    esi,eax
  4142d6:	mov    esi,DWORD PTR [r10+rsi*1]
  4142da:	add    esi,eax
  4142dc:	cmp    esi,eax
  4142de:	jbe    414326 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  4142e0:	test   sil,0x3
  4142e4:	jne    414326 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  4142e6:	mov    eax,DWORD PTR [rdi+0x8]
  4142e9:	mov    r14d,esi
  4142ec:	lea    rbx,[r14+0x4]
  4142f0:	cmp    rbx,rax
  4142f3:	ja     414326 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  4142f5:	movzx  ebx,r9w
  4142f9:	add    eax,0xfffffffc
  4142fc:	sub    eax,esi
  4142fe:	imul   ebx,DWORD PTR [r10+r14*1]
  414303:	cmp    eax,ebx
  414305:	jb     414326 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  414307:	jmp    4143bd <flatcc_verify_struct_as_nested_root@@Base+0x12d>
  41430c:	test   edx,edx
  41430e:	je     4143ad <flatcc_verify_struct_as_nested_root@@Base+0x11d>
  414314:	cmp    si,r10w
  414318:	jae    4143a1 <flatcc_verify_struct_as_nested_root@@Base+0x111>
  41431e:	movzx  r11d,si
  414322:	add    r11,QWORD PTR [rdi+0x10]
  414326:	movzx  ecx,WORD PTR [r11]
  41432a:	test   ecx,ecx
  41432c:	je     4143a1 <flatcc_verify_struct_as_nested_root@@Base+0x111>
  41432e:	lea    edx,[rcx+0x4]
  414331:	movzx  esi,WORD PTR [rdi+0x1c]
  414335:	mov    eax,0xd
  41433a:	cmp    edx,esi
  41433c:	ja     4143f7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  414342:	add    ecx,DWORD PTR [rdi+0x18]
  414345:	mov    eax,0xc
  41434a:	test   cl,0x3
  41434d:	jne    4143f7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  414353:	test   ecx,ecx
  414355:	je     4143f5 <flatcc_verify_struct_as_nested_root@@Base+0x165>
  41435b:	mov    rdx,QWORD PTR [rdi]
  41435e:	mov    eax,ecx
  414360:	mov    esi,DWORD PTR [rdx+rax*1]
  414363:	add    esi,ecx
  414365:	mov    eax,0x10
  41436a:	cmp    esi,ecx
  41436c:	jbe    4143f7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  414372:	test   sil,0x3
  414376:	jne    4143f7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  414378:	mov    ecx,DWORD PTR [rdi+0x8]
  41437b:	mov    edi,esi
  41437d:	lea    rbx,[rdi+0x4]
  414381:	cmp    rbx,rcx
  414384:	ja     4143f7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  414386:	movzx  eax,r9w
  41438a:	add    ecx,0xfffffffc
  41438d:	sub    ecx,esi
  41438f:	imul   eax,DWORD PTR [rdx+rdi*1]
  414393:	xor    edx,edx
  414395:	cmp    ecx,eax
  414397:	mov    eax,0x1a
  41439c:	cmovae eax,edx
  41439f:	jmp    4143f7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  4143a1:	xor    eax,eax
  4143a3:	test   edx,edx
  4143a5:	setne  al
  4143a8:	shl    eax,0x2
  4143ab:	jmp    4143f7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  4143ad:	xor    eax,eax
  4143af:	cmp    si,r10w
  4143b3:	jae    4143f7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  4143b5:	movzx  r11d,si
  4143b9:	add    r11,QWORD PTR [rdi+0x10]
  4143bd:	movzx  esi,WORD PTR [r11]
  4143c1:	xor    eax,eax
  4143c3:	test   rsi,rsi
  4143c6:	je     4143f7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  4143c8:	mov    edx,DWORD PTR [rdi+0x18]
  4143cb:	add    rdx,QWORD PTR [rdi]
  4143ce:	add    rdx,rsi
  4143d1:	je     4143f7 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  4143d3:	mov    eax,DWORD PTR [rdx]
  4143d5:	mov    esi,DWORD PTR [rax+rdx*1]
  4143d8:	lea    rdi,[rax+rdx*1]
  4143dc:	add    rdi,0x4
  4143e0:	movzx  eax,r9w
  4143e4:	mov    rdx,rcx
  4143e7:	mov    rcx,r8
  4143ea:	mov    r8d,eax
  4143ed:	pop    rbx
  4143ee:	pop    r14
  4143f0:	jmp    413e90 <flatcc_verify_struct_as_root@@Base>
  4143f5:	xor    eax,eax
  4143f7:	pop    rbx
  4143f8:	pop    r14
  4143fa:	ret    
  4143fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000414400 <flatcc_verify_table_as_nested_root@@Base>:
  414400:	push   rbp
  414401:	push   r15
  414403:	push   r14
  414405:	push   r13
  414407:	push   r12
  414409:	push   rbx
  41440a:	sub    rsp,0x28
  41440e:	mov    r14,r9
  414411:	mov    r15,rcx
  414414:	mov    rbx,rdi
  414417:	lea    esi,[rsi+rsi*1]
  41441a:	add    esi,0x4
  41441d:	movzx  edi,WORD PTR [rdi+0x1e]
  414421:	cmp    si,di
  414424:	jae    41448d <flatcc_verify_table_as_nested_root@@Base+0x8d>
  414426:	mov    rax,QWORD PTR [rbx+0x10]
  41442a:	movzx  ebp,si
  41442d:	movzx  ecx,WORD PTR [rax+rbp*1]
  414431:	test   ecx,ecx
  414433:	je     41448d <flatcc_verify_table_as_nested_root@@Base+0x8d>
  414435:	add    rax,rbp
  414438:	lea    esi,[rcx+0x4]
  41443b:	movzx  edi,WORD PTR [rbx+0x1c]
  41443f:	cmp    esi,edi
  414441:	ja     4144a5 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  414443:	add    ecx,DWORD PTR [rbx+0x18]
  414446:	test   cl,0x3
  414449:	jne    4144a5 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  41444b:	test   ecx,ecx
  41444d:	je     41454b <flatcc_verify_table_as_nested_root@@Base+0x14b>
  414453:	mov    rsi,QWORD PTR [rbx]
  414456:	mov    edi,ecx
  414458:	mov    edi,DWORD PTR [rsi+rdi*1]
  41445b:	add    edi,ecx
  41445d:	cmp    edi,ecx
  41445f:	jbe    4144a5 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  414461:	test   dil,0x3
  414465:	jne    4144a5 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  414467:	mov    ecx,DWORD PTR [rbx+0x8]
  41446a:	mov    r9d,edi
  41446d:	lea    rbp,[r9+0x4]
  414471:	cmp    rbp,rcx
  414474:	ja     4144a5 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  414476:	movzx  ebp,r8w
  41447a:	add    ecx,0xfffffffc
  41447d:	sub    ecx,edi
  41447f:	imul   ebp,DWORD PTR [rsi+r9*1]
  414484:	cmp    ecx,ebp
  414486:	jb     4144a5 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  414488:	jmp    41454b <flatcc_verify_table_as_nested_root@@Base+0x14b>
  41448d:	test   edx,edx
  41448f:	je     414539 <flatcc_verify_table_as_nested_root@@Base+0x139>
  414495:	cmp    si,di
  414498:	jae    41452a <flatcc_verify_table_as_nested_root@@Base+0x12a>
  41449e:	movzx  eax,si
  4144a1:	add    rax,QWORD PTR [rbx+0x10]
  4144a5:	movzx  ecx,WORD PTR [rax]
  4144a8:	test   ecx,ecx
  4144aa:	je     41452a <flatcc_verify_table_as_nested_root@@Base+0x12a>
  4144ac:	lea    edx,[rcx+0x4]
  4144af:	movzx  esi,WORD PTR [rbx+0x1c]
  4144b3:	mov    eax,0xd
  4144b8:	cmp    edx,esi
  4144ba:	ja     4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4144c0:	add    ecx,DWORD PTR [rbx+0x18]
  4144c3:	mov    eax,0xc
  4144c8:	test   cl,0x3
  4144cb:	jne    4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4144d1:	test   ecx,ecx
  4144d3:	je     4145fc <flatcc_verify_table_as_nested_root@@Base+0x1fc>
  4144d9:	mov    rdx,QWORD PTR [rbx]
  4144dc:	mov    eax,ecx
  4144de:	mov    esi,DWORD PTR [rdx+rax*1]
  4144e1:	add    esi,ecx
  4144e3:	mov    eax,0x10
  4144e8:	cmp    esi,ecx
  4144ea:	jbe    4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4144f0:	test   sil,0x3
  4144f4:	jne    4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4144fa:	mov    ecx,DWORD PTR [rbx+0x8]
  4144fd:	mov    edi,esi
  4144ff:	lea    rbp,[rdi+0x4]
  414503:	cmp    rbp,rcx
  414506:	ja     4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  41450c:	movzx  eax,r8w
  414510:	add    ecx,0xfffffffc
  414513:	sub    ecx,esi
  414515:	imul   eax,DWORD PTR [rdx+rdi*1]
  414519:	xor    edx,edx
  41451b:	cmp    ecx,eax
  41451d:	mov    eax,0x1a
  414522:	cmovae eax,edx
  414525:	jmp    4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  41452a:	xor    eax,eax
  41452c:	test   edx,edx
  41452e:	setne  al
  414531:	shl    eax,0x2
  414534:	jmp    4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  414539:	xor    eax,eax
  41453b:	cmp    si,di
  41453e:	jae    4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  414544:	movzx  eax,si
  414547:	add    rax,QWORD PTR [rbx+0x10]
  41454b:	movzx  ecx,WORD PTR [rax]
  41454e:	xor    eax,eax
  414550:	test   rcx,rcx
  414553:	je     4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  414559:	mov    r13d,DWORD PTR [rbx+0x18]
  41455d:	add    r13,QWORD PTR [rbx]
  414560:	add    r13,rcx
  414563:	je     4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  414569:	mov    ebp,DWORD PTR [r13+0x0]
  41456d:	lea    r12,[r13*1+0x4]
  414575:	add    r12,rbp
  414578:	mov    eax,0x5
  41457d:	test   r12b,0x3
  414581:	jne    4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  414583:	mov    ecx,DWORD PTR [rbp+r13*1+0x0]
  414588:	mov    eax,0x6
  41458d:	cmp    ecx,0xfffffff7
  414590:	ja     4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  414592:	mov    eax,0x1
  414597:	cmp    ecx,0x8
  41459a:	jb     4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  41459c:	test   r15,r15
  41459f:	je     41460d <flatcc_verify_table_as_nested_root@@Base+0x20d>
  4145a1:	mov    DWORD PTR [rsp],0x0
  4145a8:	mov    rdi,rsp
  4145ab:	mov    edx,0x4
  4145b0:	mov    rsi,r15
  4145b3:	mov    QWORD PTR [rsp+0x20],rcx
  4145b8:	call   404040 <strncpy@plt>
  4145bd:	mov    rcx,QWORD PTR [rsp+0x20]
  4145c2:	mov    eax,DWORD PTR [rsp]
  4145c5:	test   eax,eax
  4145c7:	je     41460d <flatcc_verify_table_as_nested_root@@Base+0x20d>
  4145c9:	add    rbp,r13
  4145cc:	cmp    DWORD PTR [rbp+0x8],eax
  4145cf:	je     41460d <flatcc_verify_table_as_nested_root@@Base+0x20d>
  4145d1:	mov    DWORD PTR [rsp],0x0
  4145d8:	mov    rdi,rsp
  4145db:	mov    edx,0x4
  4145e0:	mov    rsi,r15
  4145e3:	call   404040 <strncpy@plt>
  4145e8:	mov    ecx,DWORD PTR [rsp]
  4145eb:	xor    eax,eax
  4145ed:	cmp    DWORD PTR [rbp+0x8],ecx
  4145f0:	setne  al
  4145f3:	add    eax,eax
  4145f5:	test   ecx,ecx
  4145f7:	cmove  eax,ecx
  4145fa:	jmp    4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4145fc:	xor    eax,eax
  4145fe:	add    rsp,0x28
  414602:	pop    rbx
  414603:	pop    r12
  414605:	pop    r13
  414607:	pop    r14
  414609:	pop    r15
  41460b:	pop    rbp
  41460c:	ret    
  41460d:	mov    ebp,DWORD PTR [r12]
  414611:	mov    eax,DWORD PTR [rbx+0xc]
  414614:	add    eax,0xffffffff
  414617:	mov    DWORD PTR [rsp+0xc],eax
  41461b:	je     4146ce <flatcc_verify_table_as_nested_root@@Base+0x2ce>
  414621:	mov    eax,0xf
  414626:	test   ebp,ebp
  414628:	je     4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  41462a:	lea    rdx,[rbp+0x4]
  41462e:	cmp    rdx,rcx
  414631:	ja     4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  414633:	mov    edx,ebp
  414635:	and    edx,0x3
  414638:	test   rdx,rdx
  41463b:	jne    4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  41463d:	mov    DWORD PTR [rsp+0x18],ebp
  414641:	mov    esi,ebp
  414643:	sub    esi,DWORD PTR [r12+rbp*1]
  414647:	mov    eax,0x1d
  41464c:	test   esi,0x80000001
  414652:	jne    4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  414654:	mov    edx,esi
  414656:	lea    rdi,[rdx+0x2]
  41465a:	mov    eax,0x1b
  41465f:	cmp    rdi,rcx
  414662:	ja     4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  414664:	movzx  ebx,WORD PTR [r12+rdx*1]
  414669:	mov    WORD PTR [rsp+0x1e],bx
  41466e:	mov    eax,0x1e
  414673:	test   bl,0x1
  414676:	jne    4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  414678:	mov    edi,ebx
  41467a:	add    edi,esi
  41467c:	cmp    edi,ecx
  41467e:	ja     4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  414684:	movzx  edi,bx
  414687:	mov    eax,0x1c
  41468c:	cmp    edi,0x4
  41468f:	jb     4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  414695:	add    esi,0x2
  414698:	movzx  esi,WORD PTR [r12+rsi*1]
  41469d:	mov    WORD PTR [rsp+0x1c],si
  4146a2:	mov    edi,ecx
  4146a4:	sub    edi,ebp
  4146a6:	mov    eax,0x14
  4146ab:	cmp    edi,esi
  4146ad:	jb     4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4146b3:	add    rdx,r12
  4146b6:	mov    QWORD PTR [rsp+0x10],rdx
  4146bb:	mov    QWORD PTR [rsp],r12
  4146bf:	mov    DWORD PTR [rsp+0x8],ecx
  4146c3:	mov    rdi,rsp
  4146c6:	call   r14
  4146c9:	jmp    4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4146ce:	mov    eax,0x3
  4146d3:	jmp    4145fe <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  4146d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004146e0 <flatcc_verify_union_field@@Base>:
  4146e0:	push   rbp
  4146e1:	push   r14
  4146e3:	push   rbx
  4146e4:	sub    rsp,0x20
  4146e8:	lea    r9d,[rsi+rsi*1]
  4146ec:	lea    eax,[rsi+rsi*1]
  4146ef:	add    eax,0x2
  4146f2:	movzx  esi,WORD PTR [rdi+0x1e]
  4146f6:	cmp    ax,si
  4146f9:	jae    4147db <flatcc_verify_union_field@@Base+0xfb>
  4146ff:	mov    rbx,QWORD PTR [rdi+0x10]
  414703:	movzx  eax,ax
  414706:	movzx  r10d,WORD PTR [rbx+rax*1]
  41470b:	test   r10,r10
  41470e:	je     4147db <flatcc_verify_union_field@@Base+0xfb>
  414714:	mov    eax,0xd
  414719:	cmp    r10w,WORD PTR [rdi+0x1c]
  41471e:	jae    414803 <flatcc_verify_union_field@@Base+0x123>
  414724:	mov    r8,QWORD PTR [rdi]
  414727:	add    r9d,0x4
  41472b:	mov    al,0x1
  41472d:	cmp    r9w,si
  414731:	jae    41473f <flatcc_verify_union_field@@Base+0x5f>
  414733:	movzx  eax,r9w
  414737:	cmp    WORD PTR [rbx+rax*1],0x0
  41473c:	sete   al
  41473f:	mov    r14d,DWORD PTR [rdi+0x18]
  414743:	lea    r11,[r8+r14*1]
  414747:	mov    bpl,BYTE PTR [r10+r11*1]
  41474b:	test   al,al
  41474d:	jne    41475d <flatcc_verify_union_field@@Base+0x7d>
  41474f:	mov    eax,0x18
  414754:	test   bpl,bpl
  414757:	je     414803 <flatcc_verify_union_field@@Base+0x123>
  41475d:	xor    eax,eax
  41475f:	test   bpl,bpl
  414762:	je     414803 <flatcc_verify_union_field@@Base+0x123>
  414768:	cmp    r9w,si
  41476c:	jae    41480c <flatcc_verify_union_field@@Base+0x12c>
  414772:	movzx  eax,r9w
  414776:	movzx  esi,WORD PTR [rbx+rax*1]
  41477a:	test   esi,esi
  41477c:	je     41480c <flatcc_verify_union_field@@Base+0x12c>
  414782:	lea    edx,[rsi+0x4]
  414785:	movzx  ebp,WORD PTR [rdi+0x1c]
  414789:	mov    eax,0xd
  41478e:	cmp    edx,ebp
  414790:	ja     414803 <flatcc_verify_union_field@@Base+0x123>
  414792:	add    r14d,esi
  414795:	mov    eax,0xc
  41479a:	test   r14b,0x3
  41479e:	jne    414803 <flatcc_verify_union_field@@Base+0x123>
  4147a0:	mov    eax,0x0
  4147a5:	test   r14d,r14d
  4147a8:	je     414803 <flatcc_verify_union_field@@Base+0x123>
  4147aa:	mov    QWORD PTR [rsp],r8
  4147ae:	mov    eax,DWORD PTR [rdi+0x8]
  4147b1:	mov    DWORD PTR [rsp+0x8],eax
  4147b5:	mov    eax,DWORD PTR [rdi+0xc]
  4147b8:	mov    DWORD PTR [rsp+0xc],eax
  4147bc:	mov    DWORD PTR [rsp+0x14],r14d
  4147c1:	mov    eax,r14d
  4147c4:	mov    eax,DWORD PTR [r8+rax*1]
  4147c8:	mov    DWORD PTR [rsp+0x18],eax
  4147cc:	mov    al,BYTE PTR [r11+r10*1]
  4147d0:	mov    BYTE PTR [rsp+0x10],al
  4147d4:	mov    rdi,rsp
  4147d7:	call   rcx
  4147d9:	jmp    414803 <flatcc_verify_union_field@@Base+0x123>
  4147db:	add    r9d,0x4
  4147df:	cmp    r9w,si
  4147e3:	jae    4147f9 <flatcc_verify_union_field@@Base+0x119>
  4147e5:	mov    rcx,QWORD PTR [rdi+0x10]
  4147e9:	movzx  esi,r9w
  4147ed:	mov    eax,0x17
  4147f2:	cmp    WORD PTR [rcx+rsi*1],0x0
  4147f7:	jne    414803 <flatcc_verify_union_field@@Base+0x123>
  4147f9:	test   edx,edx
  4147fb:	mov    eax,0x15
  414800:	cmove  eax,edx
  414803:	add    rsp,0x20
  414807:	pop    rbx
  414808:	pop    r14
  41480a:	pop    rbp
  41480b:	ret    
  41480c:	xor    eax,eax
  41480e:	test   edx,edx
  414810:	setne  al
  414813:	shl    eax,0x2
  414816:	jmp    414803 <flatcc_verify_union_field@@Base+0x123>
  414818:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000414820 <flatcc_verify_union_vector_field@@Base>:
  414820:	push   rbp
  414821:	push   r15
  414823:	push   r14
  414825:	push   r13
  414827:	push   r12
  414829:	push   rbx
  41482a:	sub    rsp,0x28
  41482e:	mov    r12,rcx
  414831:	lea    r10d,[rsi+rsi*1]
  414835:	lea    ecx,[rsi+rsi*1]
  414838:	add    ecx,0x2
  41483b:	movzx  esi,WORD PTR [rdi+0x1e]
  41483f:	cmp    cx,si
  414842:	jae    414855 <flatcc_verify_union_vector_field@@Base+0x35>
  414844:	mov    r11,QWORD PTR [rdi+0x10]
  414848:	movzx  eax,cx
  41484b:	movzx  ebp,WORD PTR [r11+rax*1]
  414850:	test   bp,bp
  414853:	jne    414896 <flatcc_verify_union_vector_field@@Base+0x76>
  414855:	lea    eax,[r10+0x4]
  414859:	cmp    ax,si
  41485c:	jae    4148eb <flatcc_verify_union_vector_field@@Base+0xcb>
  414862:	test   edx,edx
  414864:	je     414880 <flatcc_verify_union_vector_field@@Base+0x60>
  414866:	mov    rbp,QWORD PTR [rdi+0x10]
  41486a:	movzx  eax,ax
  41486d:	movzx  ebp,WORD PTR [rbp+rax*1+0x0]
  414872:	mov    eax,0x16
  414877:	test   bp,bp
  41487a:	je     414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414880:	cmp    cx,si
  414883:	jae    4148fa <flatcc_verify_union_vector_field@@Base+0xda>
  414885:	mov    r11,QWORD PTR [rdi+0x10]
  414889:	movzx  eax,cx
  41488c:	movzx  ebp,WORD PTR [r11+rax*1]
  414891:	test   bp,bp
  414894:	je     4148fa <flatcc_verify_union_vector_field@@Base+0xda>
  414896:	add    rax,r11
  414899:	movzx  ecx,bp
  41489c:	lea    ebp,[rcx+0x4]
  41489f:	movzx  ebx,WORD PTR [rdi+0x1c]
  4148a3:	cmp    ebp,ebx
  4148a5:	ja     414912 <flatcc_verify_union_vector_field@@Base+0xf2>
  4148a7:	add    ecx,DWORD PTR [rdi+0x18]
  4148aa:	test   cl,0x3
  4148ad:	jne    414912 <flatcc_verify_union_vector_field@@Base+0xf2>
  4148af:	test   ecx,ecx
  4148b1:	je     4149a9 <flatcc_verify_union_vector_field@@Base+0x189>
  4148b7:	mov    r8,QWORD PTR [rdi]
  4148ba:	mov    ebp,ecx
  4148bc:	mov    ebp,DWORD PTR [r8+rbp*1]
  4148c0:	add    ebp,ecx
  4148c2:	cmp    ebp,ecx
  4148c4:	jbe    414912 <flatcc_verify_union_vector_field@@Base+0xf2>
  4148c6:	test   bpl,0x3
  4148ca:	jne    414912 <flatcc_verify_union_vector_field@@Base+0xf2>
  4148cc:	mov    ecx,DWORD PTR [rdi+0x8]
  4148cf:	mov    r9d,ebp
  4148d2:	lea    rbx,[r9+0x4]
  4148d6:	cmp    rbx,rcx
  4148d9:	ja     414912 <flatcc_verify_union_vector_field@@Base+0xf2>
  4148db:	add    ecx,0xfffffffc
  4148de:	sub    ecx,ebp
  4148e0:	cmp    ecx,DWORD PTR [r8+r9*1]
  4148e4:	jb     414912 <flatcc_verify_union_vector_field@@Base+0xf2>
  4148e6:	jmp    4149a9 <flatcc_verify_union_vector_field@@Base+0x189>
  4148eb:	mov    eax,0x16
  4148f0:	test   edx,edx
  4148f2:	jne    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4148f8:	jmp    414880 <flatcc_verify_union_vector_field@@Base+0x60>
  4148fa:	test   edx,edx
  4148fc:	je     414994 <flatcc_verify_union_vector_field@@Base+0x174>
  414902:	cmp    cx,si
  414905:	jae    414b07 <flatcc_verify_union_vector_field@@Base+0x2e7>
  41490b:	movzx  eax,cx
  41490e:	add    rax,QWORD PTR [rdi+0x10]
  414912:	movzx  ecx,WORD PTR [rax]
  414915:	test   ecx,ecx
  414917:	je     414b07 <flatcc_verify_union_vector_field@@Base+0x2e7>
  41491d:	lea    edx,[rcx+0x4]
  414920:	movzx  esi,WORD PTR [rdi+0x1c]
  414924:	mov    eax,0xd
  414929:	cmp    edx,esi
  41492b:	ja     414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414931:	add    ecx,DWORD PTR [rdi+0x18]
  414934:	mov    eax,0xc
  414939:	test   cl,0x3
  41493c:	jne    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414942:	test   ecx,ecx
  414944:	je     414b20 <flatcc_verify_union_vector_field@@Base+0x300>
  41494a:	mov    rdx,QWORD PTR [rdi]
  41494d:	mov    eax,ecx
  41494f:	mov    esi,DWORD PTR [rdx+rax*1]
  414952:	add    esi,ecx
  414954:	mov    eax,0x10
  414959:	cmp    esi,ecx
  41495b:	jbe    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414961:	test   sil,0x3
  414965:	jne    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  41496b:	mov    ecx,DWORD PTR [rdi+0x8]
  41496e:	mov    edi,esi
  414970:	lea    rbp,[rdi+0x4]
  414974:	cmp    rbp,rcx
  414977:	ja     414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  41497d:	add    ecx,0xfffffffc
  414980:	sub    ecx,esi
  414982:	xor    esi,esi
  414984:	cmp    ecx,DWORD PTR [rdx+rdi*1]
  414987:	mov    eax,0x1a
  41498c:	cmovae eax,esi
  41498f:	jmp    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414994:	xor    eax,eax
  414996:	cmp    cx,si
  414999:	jae    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  41499f:	mov    r11,QWORD PTR [rdi+0x10]
  4149a3:	movzx  eax,cx
  4149a6:	add    rax,r11
  4149a9:	movzx  ecx,WORD PTR [rax]
  4149ac:	xor    eax,eax
  4149ae:	test   rcx,rcx
  4149b1:	je     414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4149b7:	mov    r15,QWORD PTR [rdi]
  4149ba:	mov    r8d,DWORD PTR [rdi+0x18]
  4149be:	lea    r9,[r15+r8*1]
  4149c2:	add    r9,rcx
  4149c5:	je     414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4149cb:	add    r10d,0x4
  4149cf:	cmp    r10w,si
  4149d3:	jae    414b07 <flatcc_verify_union_vector_field@@Base+0x2e7>
  4149d9:	movzx  eax,r10w
  4149dd:	movzx  ecx,WORD PTR [r11+rax*1]
  4149e2:	test   ecx,ecx
  4149e4:	je     414b07 <flatcc_verify_union_vector_field@@Base+0x2e7>
  4149ea:	lea    edx,[rcx+0x4]
  4149ed:	movzx  esi,WORD PTR [rdi+0x1c]
  4149f1:	mov    eax,0xd
  4149f6:	cmp    edx,esi
  4149f8:	ja     414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4149fe:	lea    ebx,[r8+rcx*1]
  414a02:	mov    eax,0xc
  414a07:	test   bl,0x3
  414a0a:	jne    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414a10:	mov    eax,0x0
  414a15:	test   ebx,ebx
  414a17:	je     414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414a1d:	mov    esi,DWORD PTR [rdi+0xc]
  414a20:	test   esi,esi
  414a22:	jle    414b24 <flatcc_verify_union_vector_field@@Base+0x304>
  414a28:	mov    eax,ebx
  414a2a:	mov    edx,DWORD PTR [r15+rax*1]
  414a2e:	lea    ebp,[rdx+rbx*1]
  414a31:	mov    eax,0x10
  414a36:	cmp    ebp,ebx
  414a38:	jbe    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414a3e:	test   bpl,0x3
  414a42:	jne    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414a48:	mov    r10d,DWORD PTR [rdi+0x8]
  414a4c:	mov    ebx,ebp
  414a4e:	lea    rdi,[rbx+0x4]
  414a52:	cmp    rdi,r10
  414a55:	ja     414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414a5b:	mov    ebx,DWORD PTR [r15+rbx*1]
  414a5f:	mov    eax,0x19
  414a64:	cmp    ebx,0x3fffffff
  414a6a:	ja     414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414a70:	lea    edi,[r10-0x4]
  414a74:	sub    edi,ebp
  414a76:	lea    ebp,[rbx*4+0x0]
  414a7d:	mov    eax,0x1a
  414a82:	cmp    edi,ebp
  414a84:	jb     414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414a8a:	mov    r13d,DWORD PTR [r9]
  414a8d:	mov    edi,DWORD PTR [r13+r9*1+0x0]
  414a92:	mov    eax,0x22
  414a97:	cmp    ebx,edi
  414a99:	jne    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414a9b:	add    esi,0xffffffff
  414a9e:	mov    QWORD PTR [rsp+0x8],r15
  414aa3:	mov    DWORD PTR [rsp+0x10],r10d
  414aa8:	mov    DWORD PTR [rsp+0x14],esi
  414aac:	test   edi,edi
  414aae:	je     414b20 <flatcc_verify_union_vector_field@@Base+0x300>
  414ab0:	mov    rax,rdi
  414ab3:	add    r13,r9
  414ab6:	add    edx,r8d
  414ab9:	lea    ebp,[rcx+rdx*1]
  414abc:	add    ebp,0x4
  414abf:	xor    r14d,r14d
  414ac2:	mov    rbx,rdi
  414ac5:	mov    eax,ebp
  414ac7:	mov    eax,DWORD PTR [r15+rax*1]
  414acb:	movzx  ecx,BYTE PTR [r13+r14*1+0x4]
  414ad1:	test   eax,eax
  414ad3:	je     414af3 <flatcc_verify_union_vector_field@@Base+0x2d3>
  414ad5:	test   cl,cl
  414ad7:	je     414b2b <flatcc_verify_union_vector_field@@Base+0x30b>
  414ad9:	mov    BYTE PTR [rsp+0x18],cl
  414add:	mov    DWORD PTR [rsp+0x1c],ebp
  414ae1:	mov    DWORD PTR [rsp+0x20],eax
  414ae5:	lea    rdi,[rsp+0x8]
  414aea:	call   r12
  414aed:	test   eax,eax
  414aef:	je     414af7 <flatcc_verify_union_vector_field@@Base+0x2d7>
  414af1:	jmp    414b32 <flatcc_verify_union_vector_field@@Base+0x312>
  414af3:	test   cl,cl
  414af5:	jne    414b3c <flatcc_verify_union_vector_field@@Base+0x31c>
  414af7:	add    r14,0x1
  414afb:	add    ebp,0x4
  414afe:	xor    eax,eax
  414b00:	cmp    r14,rbx
  414b03:	jb     414ac5 <flatcc_verify_union_vector_field@@Base+0x2a5>
  414b05:	jmp    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414b07:	xor    eax,eax
  414b09:	test   edx,edx
  414b0b:	setne  al
  414b0e:	shl    eax,0x2
  414b11:	add    rsp,0x28
  414b15:	pop    rbx
  414b16:	pop    r12
  414b18:	pop    r13
  414b1a:	pop    r14
  414b1c:	pop    r15
  414b1e:	pop    rbp
  414b1f:	ret    
  414b20:	xor    eax,eax
  414b22:	jmp    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414b24:	mov    eax,0x3
  414b29:	jmp    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414b2b:	mov    eax,0x21
  414b30:	jmp    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414b32:	lea    rdi,[rsp+0x8]
  414b37:	call   r12
  414b3a:	jmp    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414b3c:	mov    eax,0x20
  414b41:	jmp    414b11 <flatcc_verify_union_vector_field@@Base+0x2f1>
  414b43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414b4d:	nop    DWORD PTR [rax]

0000000000414b50 <__libc_csu_init@@Base>:
  414b50:	endbr64 
  414b54:	push   r15
  414b56:	lea    r15,[rip+0x9153]        # 41dcb0 <flatcc_builder_padding_base@@Base+0x52d0>
  414b5d:	push   r14
  414b5f:	mov    r14,rdx
  414b62:	push   r13
  414b64:	mov    r13,rsi
  414b67:	push   r12
  414b69:	mov    r12d,edi
  414b6c:	push   rbp
  414b6d:	lea    rbp,[rip+0x9144]        # 41dcb8 <flatcc_builder_padding_base@@Base+0x52d8>
  414b74:	push   rbx
  414b75:	sub    rbp,r15
  414b78:	sub    rsp,0x8
  414b7c:	call   404000 <free@plt-0x30>
  414b81:	sar    rbp,0x3
  414b85:	je     414ba6 <__libc_csu_init@@Base+0x56>
  414b87:	xor    ebx,ebx
  414b89:	nop    DWORD PTR [rax+0x0]
  414b90:	mov    rdx,r14
  414b93:	mov    rsi,r13
  414b96:	mov    edi,r12d
  414b99:	call   QWORD PTR [r15+rbx*8]
  414b9d:	add    rbx,0x1
  414ba1:	cmp    rbp,rbx
  414ba4:	jne    414b90 <__libc_csu_init@@Base+0x40>
  414ba6:	add    rsp,0x8
  414baa:	pop    rbx
  414bab:	pop    rbp
  414bac:	pop    r12
  414bae:	pop    r13
  414bb0:	pop    r14
  414bb2:	pop    r15
  414bb4:	ret    
  414bb5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000414bc0 <__libc_csu_fini@@Base>:
  414bc0:	endbr64 
  414bc4:	ret    

Disassembly of section .fini:

0000000000414bc8 <.fini>:
  414bc8:	endbr64 
  414bcc:	sub    rsp,0x8
  414bd0:	add    rsp,0x8
  414bd4:	ret    
