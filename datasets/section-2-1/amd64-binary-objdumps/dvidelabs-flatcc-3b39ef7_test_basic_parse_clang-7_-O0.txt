
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_basic_parse:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x15fe1]        # 418ff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x15fe2]        # 419008 <flatcc_builder_padding_base@@Base+0x6c98>
  403026:	jmp    QWORD PTR [rip+0x15fe4]        # 419010 <flatcc_builder_padding_base@@Base+0x6ca0>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0x15fe2]        # 419018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strtod@plt>:
  403040:	jmp    QWORD PTR [rip+0x15fda]        # 419020 <strtod@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <strlen@plt>:
  403050:	jmp    QWORD PTR [rip+0x15fd2]        # 419028 <strlen@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <__assert_fail@plt>:
  403060:	jmp    QWORD PTR [rip+0x15fca]        # 419030 <__assert_fail@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <memset@plt>:
  403070:	jmp    QWORD PTR [rip+0x15fc2]        # 419038 <memset@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <memchr@plt>:
  403080:	jmp    QWORD PTR [rip+0x15fba]        # 419040 <memchr@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <memcmp@plt>:
  403090:	jmp    QWORD PTR [rip+0x15fb2]        # 419048 <memcmp@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <fprintf@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x15faa]        # 419050 <fprintf@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <memcpy@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x15fa2]        # 419058 <memcpy@GLIBC_2.14>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <malloc@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x15f9a]        # 419060 <malloc@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <realloc@plt>:
  4030d0:	jmp    QWORD PTR [rip+0x15f92]        # 419068 <realloc@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <posix_memalign@plt>:
  4030e0:	jmp    QWORD PTR [rip+0x15f8a]        # 419070 <posix_memalign@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

00000000004030f0 <_start@@Base>:
  4030f0:	endbr64 
  4030f4:	xor    ebp,ebp
  4030f6:	mov    r9,rdx
  4030f9:	pop    rsi
  4030fa:	mov    rdx,rsp
  4030fd:	and    rsp,0xfffffffffffffff0
  403101:	push   rax
  403102:	push   rsp
  403103:	mov    r8,0x411a60
  40310a:	mov    rcx,0x4119f0
  403111:	mov    rdi,0x404bb0
  403118:	call   QWORD PTR [rip+0x15eca]        # 418fe8 <__libc_start_main@GLIBC_2.2.5>
  40311e:	hlt    
  40311f:	nop
  403120:	endbr64 
  403124:	ret    
  403125:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40312f:	nop
  403130:	mov    eax,0x419100
  403135:	cmp    rax,0x419100
  40313b:	je     403150 <_start@@Base+0x60>
  40313d:	mov    eax,0x0
  403142:	test   rax,rax
  403145:	je     403150 <_start@@Base+0x60>
  403147:	mov    edi,0x419100
  40314c:	jmp    rax
  40314e:	xchg   ax,ax
  403150:	ret    
  403151:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40315c:	nop    DWORD PTR [rax+0x0]
  403160:	mov    esi,0x419100
  403165:	sub    rsi,0x419100
  40316c:	mov    rax,rsi
  40316f:	shr    rsi,0x3f
  403173:	sar    rax,0x3
  403177:	add    rsi,rax
  40317a:	sar    rsi,1
  40317d:	je     403190 <_start@@Base+0xa0>
  40317f:	mov    eax,0x0
  403184:	test   rax,rax
  403187:	je     403190 <_start@@Base+0xa0>
  403189:	mov    edi,0x419100
  40318e:	jmp    rax
  403190:	ret    
  403191:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40319c:	nop    DWORD PTR [rax+0x0]
  4031a0:	endbr64 
  4031a4:	cmp    BYTE PTR [rip+0x15f55],0x0        # 419100 <__bss_start@@Base>
  4031ab:	jne    4031c0 <_start@@Base+0xd0>
  4031ad:	push   rbp
  4031ae:	mov    rbp,rsp
  4031b1:	call   403130 <_start@@Base+0x40>
  4031b6:	mov    BYTE PTR [rip+0x15f43],0x1        # 419100 <__bss_start@@Base>
  4031bd:	pop    rbp
  4031be:	ret    
  4031bf:	nop
  4031c0:	ret    
  4031c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031cc:	nop    DWORD PTR [rax+0x0]
  4031d0:	endbr64 
  4031d4:	jmp    403160 <_start@@Base+0x70>
  4031d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004031e0 <test@@Base>:
  4031e0:	push   rbp
  4031e1:	mov    rbp,rsp
  4031e4:	sub    rsp,0x160
  4031eb:	xor    eax,eax
  4031ed:	mov    r8d,0x48
  4031f3:	mov    r9d,r8d
  4031f6:	mov    QWORD PTR [rbp-0x8],rdi
  4031fa:	mov    QWORD PTR [rbp-0x10],rsi
  4031fe:	mov    QWORD PTR [rbp-0x18],rdx
  403202:	mov    QWORD PTR [rbp-0x20],rcx
  403206:	mov    DWORD PTR [rbp-0x74],0x0
  40320d:	lea    rcx,[rbp-0x68]
  403211:	mov    QWORD PTR [rbp-0x70],rcx
  403215:	mov    rcx,QWORD PTR [rbp-0x70]
  403219:	mov    rdi,rcx
  40321c:	mov    esi,eax
  40321e:	mov    rdx,r9
  403221:	mov    DWORD PTR [rbp-0xac],eax
  403227:	call   403070 <memset@plt>
  40322c:	mov    rcx,QWORD PTR [rbp-0x70]
  403230:	mov    DWORD PTR [rcx+0x18],0x1
  403237:	mov    rcx,QWORD PTR [rbp-0x10]
  40323b:	mov    rdx,QWORD PTR [rbp-0x70]
  40323f:	mov    QWORD PTR [rdx+0x8],rcx
  403243:	mov    rdi,QWORD PTR [rbp-0x8]
  403247:	lea    rsi,[rip+0xf078]        # 4122c6 <g_data@@Base+0x286>
  40324e:	mov    edx,DWORD PTR [rbp-0xac]
  403254:	mov    ecx,DWORD PTR [rbp-0xac]
  40325a:	call   4064b0 <flatcc_builder_start_buffer@@Base>
  40325f:	mov    rdi,QWORD PTR [rbp-0x70]
  403263:	mov    rsi,QWORD PTR [rbp-0x10]
  403267:	mov    rdx,QWORD PTR [rbp-0x18]
  40326b:	mov    DWORD PTR [rbp-0xb0],eax
  403271:	call   4044d0 <test@@Base+0x12f0>
  403276:	mov    QWORD PTR [rbp-0x10],rax
  40327a:	mov    rax,QWORD PTR [rbp-0x10]
  40327e:	cmp    rax,QWORD PTR [rbp-0x18]
  403282:	jne    4032ab <test@@Base+0xcb>
  403288:	mov    rax,QWORD PTR [rip+0x15d69]        # 418ff8 <stderr@GLIBC_2.2.5>
  40328f:	mov    rdi,QWORD PTR [rax]
  403292:	lea    rsi,[rip+0xf032]        # 4122cb <g_data@@Base+0x28b>
  403299:	mov    al,0x0
  40329b:	call   4030a0 <fprintf@plt>
  4032a0:	mov    DWORD PTR [rbp-0xb4],eax
  4032a6:	jmp    4043f9 <test@@Base+0x1219>
  4032ab:	mov    rax,QWORD PTR [rbp-0x18]
  4032af:	cmp    rax,QWORD PTR [rbp-0x10]
  4032b3:	jbe    4032da <test@@Base+0xfa>
  4032b9:	mov    rax,QWORD PTR [rbp-0x10]
  4032bd:	movsx  ecx,BYTE PTR [rax]
  4032c0:	cmp    ecx,0x7b
  4032c3:	jne    4032da <test@@Base+0xfa>
  4032c9:	mov    rax,QWORD PTR [rbp-0x10]
  4032cd:	add    rax,0x1
  4032d1:	mov    QWORD PTR [rbp-0x10],rax
  4032d5:	jmp    40331c <test@@Base+0x13c>
  4032da:	mov    rax,QWORD PTR [rip+0x15d17]        # 418ff8 <stderr@GLIBC_2.2.5>
  4032e1:	mov    rdi,QWORD PTR [rax]
  4032e4:	lea    rsi,[rip+0xefee]        # 4122d9 <g_data@@Base+0x299>
  4032eb:	mov    edx,0x7b
  4032f0:	mov    al,0x0
  4032f2:	call   4030a0 <fprintf@plt>
  4032f7:	mov    rdi,QWORD PTR [rbp-0x70]
  4032fb:	mov    rsi,QWORD PTR [rbp-0x10]
  4032ff:	mov    rdx,QWORD PTR [rbp-0x18]
  403303:	mov    ecx,0x11
  403308:	mov    DWORD PTR [rbp-0xb8],eax
  40330e:	call   40c510 <flatcc_json_parser_set_error@@Base>
  403313:	mov    QWORD PTR [rbp-0x10],rax
  403317:	jmp    4043f9 <test@@Base+0x1219>
  40331c:	mov    rdi,QWORD PTR [rbp-0x70]
  403320:	mov    rsi,QWORD PTR [rbp-0x10]
  403324:	mov    rdx,QWORD PTR [rbp-0x18]
  403328:	call   4044d0 <test@@Base+0x12f0>
  40332d:	mov    QWORD PTR [rbp-0x10],rax
  403331:	mov    rax,QWORD PTR [rbp-0x10]
  403335:	cmp    rax,QWORD PTR [rbp-0x18]
  403339:	jne    403362 <test@@Base+0x182>
  40333f:	mov    rax,QWORD PTR [rip+0x15cb2]        # 418ff8 <stderr@GLIBC_2.2.5>
  403346:	mov    rdi,QWORD PTR [rax]
  403349:	lea    rsi,[rip+0xef7b]        # 4122cb <g_data@@Base+0x28b>
  403350:	mov    al,0x0
  403352:	call   4030a0 <fprintf@plt>
  403357:	mov    DWORD PTR [rbp-0xbc],eax
  40335d:	jmp    4043f9 <test@@Base+0x1219>
  403362:	mov    rdi,QWORD PTR [rbp-0x8]
  403366:	mov    esi,0xb
  40336b:	call   407b20 <flatcc_builder_start_table@@Base>
  403370:	mov    DWORD PTR [rbp-0xc0],eax
  403376:	mov    rdi,QWORD PTR [rbp-0x70]
  40337a:	mov    rsi,QWORD PTR [rbp-0x10]
  40337e:	mov    rdx,QWORD PTR [rbp-0x18]
  403382:	call   404570 <test@@Base+0x1390>
  403387:	mov    QWORD PTR [rbp-0x10],rax
  40338b:	mov    rdi,QWORD PTR [rbp-0x10]
  40338f:	mov    rsi,QWORD PTR [rbp-0x18]
  403393:	call   404620 <test@@Base+0x1440>
  403398:	mov    QWORD PTR [rbp-0x88],rax
  40339f:	mov    rax,QWORD PTR [rbp-0x18]
  4033a3:	mov    rdx,QWORD PTR [rbp-0x10]
  4033a7:	sub    rax,rdx
  4033aa:	cmp    rax,0x8
  4033ae:	jle    4033c8 <test@@Base+0x1e8>
  4033b4:	mov    rax,QWORD PTR [rbp-0x10]
  4033b8:	add    rax,0x8
  4033bc:	mov    QWORD PTR [rbp-0xc8],rax
  4033c3:	jmp    4033d3 <test@@Base+0x1f3>
  4033c8:	mov    rax,QWORD PTR [rbp-0x18]
  4033cc:	mov    QWORD PTR [rbp-0xc8],rax
  4033d3:	mov    rax,QWORD PTR [rbp-0xc8]
  4033da:	mov    QWORD PTR [rbp-0x90],rax
  4033e1:	mov    rax,QWORD PTR [rbp-0x88]
  4033e8:	and    rax,0xffffffffffff0000
  4033ee:	movsx  rcx,BYTE PTR [rip+0xeef9]        # 4122ef <g_data@@Base+0x2af>
  4033f6:	shl    rcx,0x38
  4033fa:	movsx  rdx,BYTE PTR [rip+0xeeee]        # 4122f0 <g_data@@Base+0x2b0>
  403402:	shl    rdx,0x30
  403406:	or     rcx,rdx
  403409:	movsx  rdx,BYTE PTR [rip+0xeee0]        # 4122f1 <g_data@@Base+0x2b1>
  403411:	shl    rdx,0x28
  403415:	or     rcx,rdx
  403418:	movsx  rdx,BYTE PTR [rip+0xeed2]        # 4122f2 <g_data@@Base+0x2b2>
  403420:	shl    rdx,0x20
  403424:	or     rcx,rdx
  403427:	movsx  rdx,BYTE PTR [rip+0xeec4]        # 4122f3 <g_data@@Base+0x2b3>
  40342f:	shl    rdx,0x18
  403433:	or     rcx,rdx
  403436:	movsx  rdx,BYTE PTR [rip+0xeeb6]        # 4122f4 <g_data@@Base+0x2b4>
  40343e:	shl    rdx,0x10
  403442:	or     rcx,rdx
  403445:	cmp    rax,rcx
  403448:	jae    40365c <test@@Base+0x47c>
  40344e:	mov    rax,QWORD PTR [rbp-0x88]
  403455:	and    rax,0xffffffffff000000
  40345b:	movsx  rcx,BYTE PTR [rip+0xee93]        # 4122f6 <g_data@@Base+0x2b6>
  403463:	shl    rcx,0x38
  403467:	movsx  rdx,BYTE PTR [rip+0xee88]        # 4122f7 <g_data@@Base+0x2b7>
  40346f:	shl    rdx,0x30
  403473:	or     rcx,rdx
  403476:	movsx  rdx,BYTE PTR [rip+0xee7a]        # 4122f8 <g_data@@Base+0x2b8>
  40347e:	shl    rdx,0x28
  403482:	or     rcx,rdx
  403485:	movsx  rdx,BYTE PTR [rip+0xee6c]        # 4122f9 <g_data@@Base+0x2b9>
  40348d:	shl    rdx,0x20
  403491:	or     rcx,rdx
  403494:	movsx  rdx,BYTE PTR [rip+0xee5e]        # 4122fa <g_data@@Base+0x2ba>
  40349c:	shl    rdx,0x18
  4034a0:	or     rcx,rdx
  4034a3:	cmp    rax,rcx
  4034a6:	je     4034cb <test@@Base+0x2eb>
  4034ac:	mov    rdi,QWORD PTR [rbp-0x70]
  4034b0:	mov    rsi,QWORD PTR [rbp-0x10]
  4034b4:	mov    rdx,QWORD PTR [rbp-0x18]
  4034b8:	mov    ecx,0xd
  4034bd:	call   40c510 <flatcc_json_parser_set_error@@Base>
  4034c2:	mov    QWORD PTR [rbp-0x10],rax
  4034c6:	jmp    4043f9 <test@@Base+0x1219>
  4034cb:	mov    rdi,QWORD PTR [rbp-0x70]
  4034cf:	mov    rax,QWORD PTR [rbp-0x10]
  4034d3:	add    rax,0x5
  4034d7:	mov    rdx,QWORD PTR [rbp-0x18]
  4034db:	mov    rsi,rax
  4034de:	call   404680 <test@@Base+0x14a0>
  4034e3:	mov    QWORD PTR [rbp-0x10],rax
  4034e7:	mov    rdi,QWORD PTR [rbp-0x70]
  4034eb:	mov    rsi,QWORD PTR [rbp-0x10]
  4034ef:	mov    rdx,QWORD PTR [rbp-0x18]
  4034f3:	call   4044d0 <test@@Base+0x12f0>
  4034f8:	mov    QWORD PTR [rbp-0x10],rax
  4034fc:	mov    rax,QWORD PTR [rbp-0x10]
  403500:	cmp    rax,QWORD PTR [rbp-0x18]
  403504:	jne    40352d <test@@Base+0x34d>
  40350a:	mov    rax,QWORD PTR [rip+0x15ae7]        # 418ff8 <stderr@GLIBC_2.2.5>
  403511:	mov    rdi,QWORD PTR [rax]
  403514:	lea    rsi,[rip+0xedb0]        # 4122cb <g_data@@Base+0x28b>
  40351b:	mov    al,0x0
  40351d:	call   4030a0 <fprintf@plt>
  403522:	mov    DWORD PTR [rbp-0xcc],eax
  403528:	jmp    4043f9 <test@@Base+0x1219>
  40352d:	mov    rax,QWORD PTR [rbp-0x18]
  403531:	cmp    rax,QWORD PTR [rbp-0x10]
  403535:	jbe    40355c <test@@Base+0x37c>
  40353b:	mov    rax,QWORD PTR [rbp-0x10]
  40353f:	movsx  ecx,BYTE PTR [rax]
  403542:	cmp    ecx,0x3a
  403545:	jne    40355c <test@@Base+0x37c>
  40354b:	mov    rax,QWORD PTR [rbp-0x10]
  40354f:	add    rax,0x1
  403553:	mov    QWORD PTR [rbp-0x10],rax
  403557:	jmp    40359e <test@@Base+0x3be>
  40355c:	mov    rax,QWORD PTR [rip+0x15a95]        # 418ff8 <stderr@GLIBC_2.2.5>
  403563:	mov    rdi,QWORD PTR [rax]
  403566:	lea    rsi,[rip+0xed6c]        # 4122d9 <g_data@@Base+0x299>
  40356d:	mov    edx,0x3a
  403572:	mov    al,0x0
  403574:	call   4030a0 <fprintf@plt>
  403579:	mov    rdi,QWORD PTR [rbp-0x70]
  40357d:	mov    rsi,QWORD PTR [rbp-0x10]
  403581:	mov    rdx,QWORD PTR [rbp-0x18]
  403585:	mov    ecx,0x11
  40358a:	mov    DWORD PTR [rbp-0xd0],eax
  403590:	call   40c510 <flatcc_json_parser_set_error@@Base>
  403595:	mov    QWORD PTR [rbp-0x10],rax
  403599:	jmp    4043f9 <test@@Base+0x1219>
  40359e:	mov    rdi,QWORD PTR [rbp-0x70]
  4035a2:	mov    rsi,QWORD PTR [rbp-0x10]
  4035a6:	mov    rdx,QWORD PTR [rbp-0x18]
  4035aa:	call   4044d0 <test@@Base+0x12f0>
  4035af:	mov    QWORD PTR [rbp-0x10],rax
  4035b3:	mov    rax,QWORD PTR [rbp-0x10]
  4035b7:	cmp    rax,QWORD PTR [rbp-0x18]
  4035bb:	jne    4035e4 <test@@Base+0x404>
  4035c1:	mov    rax,QWORD PTR [rip+0x15a30]        # 418ff8 <stderr@GLIBC_2.2.5>
  4035c8:	mov    rdi,QWORD PTR [rax]
  4035cb:	lea    rsi,[rip+0xecf9]        # 4122cb <g_data@@Base+0x28b>
  4035d2:	mov    al,0x0
  4035d4:	call   4030a0 <fprintf@plt>
  4035d9:	mov    DWORD PTR [rbp-0xd4],eax
  4035df:	jmp    4043f9 <test@@Base+0x1219>
  4035e4:	xor    esi,esi
  4035e6:	mov    eax,0x1
  4035eb:	mov    edx,eax
  4035ed:	mov    rdi,QWORD PTR [rbp-0x8]
  4035f1:	mov    ecx,0x1
  4035f6:	call   4093f0 <flatcc_builder_table_add@@Base>
  4035fb:	mov    QWORD PTR [rbp-0xa8],rax
  403602:	cmp    QWORD PTR [rbp-0xa8],0x0
  40360a:	jne    403615 <test@@Base+0x435>
  403610:	jmp    4043f9 <test@@Base+0x1219>
  403615:	mov    rax,QWORD PTR [rbp-0x10]
  403619:	mov    QWORD PTR [rbp-0x90],rax
  403620:	mov    rdi,QWORD PTR [rbp-0x70]
  403624:	mov    rsi,QWORD PTR [rbp-0x10]
  403628:	mov    rdx,QWORD PTR [rbp-0x18]
  40362c:	mov    rcx,QWORD PTR [rbp-0xa8]
  403633:	call   404890 <test@@Base+0x16b0>
  403638:	mov    QWORD PTR [rbp-0x10],rax
  40363c:	mov    rax,QWORD PTR [rbp-0x90]
  403643:	cmp    rax,QWORD PTR [rbp-0x10]
  403647:	jne    403652 <test@@Base+0x472>
  40364d:	jmp    4043f9 <test@@Base+0x1219>
  403652:	jmp    403657 <test@@Base+0x477>
  403657:	jmp    40425d <test@@Base+0x107d>
  40365c:	movabs rax,0xffffffff00000000
  403666:	and    rax,QWORD PTR [rbp-0x88]
  40366d:	movsx  rcx,BYTE PTR [rip+0xec87]        # 4122fc <g_data@@Base+0x2bc>
  403675:	shl    rcx,0x38
  403679:	movsx  rdx,BYTE PTR [rip+0xec7c]        # 4122fd <g_data@@Base+0x2bd>
  403681:	shl    rdx,0x30
  403685:	or     rcx,rdx
  403688:	movsx  rdx,BYTE PTR [rip+0xec6e]        # 4122fe <g_data@@Base+0x2be>
  403690:	shl    rdx,0x28
  403694:	or     rcx,rdx
  403697:	movsx  rdx,BYTE PTR [rip+0xec60]        # 4122ff <g_data@@Base+0x2bf>
  40369f:	shl    rdx,0x20
  4036a3:	or     rcx,rdx
  4036a6:	cmp    rax,rcx
  4036a9:	jae    403ed8 <test@@Base+0xcf8>
  4036af:	mov    rax,QWORD PTR [rbp-0x88]
  4036b6:	and    rax,0xffffffffffffffff
  4036ba:	movsx  rcx,BYTE PTR [rip+0xec3f]        # 412301 <g_data@@Base+0x2c1>
  4036c2:	shl    rcx,0x38
  4036c6:	movsx  rdx,BYTE PTR [rip+0xec34]        # 412302 <g_data@@Base+0x2c2>
  4036ce:	shl    rdx,0x30
  4036d2:	or     rcx,rdx
  4036d5:	movsx  rdx,BYTE PTR [rip+0xec26]        # 412303 <g_data@@Base+0x2c3>
  4036dd:	shl    rdx,0x28
  4036e1:	or     rcx,rdx
  4036e4:	movsx  rdx,BYTE PTR [rip+0xec18]        # 412304 <g_data@@Base+0x2c4>
  4036ec:	shl    rdx,0x20
  4036f0:	or     rcx,rdx
  4036f3:	movsx  rdx,BYTE PTR [rip+0xec0a]        # 412305 <g_data@@Base+0x2c5>
  4036fb:	shl    rdx,0x18
  4036ff:	or     rcx,rdx
  403702:	movsx  rdx,BYTE PTR [rip+0xebfc]        # 412306 <g_data@@Base+0x2c6>
  40370a:	shl    rdx,0x10
  40370e:	or     rcx,rdx
  403711:	movsx  rdx,BYTE PTR [rip+0xebee]        # 412307 <g_data@@Base+0x2c7>
  403719:	shl    rdx,0x8
  40371d:	or     rcx,rdx
  403720:	movsx  rdx,BYTE PTR [rip+0xebe0]        # 412308 <g_data@@Base+0x2c8>
  403728:	shl    rdx,0x0
  40372c:	or     rcx,rdx
  40372f:	cmp    rax,rcx
  403732:	jae    40395b <test@@Base+0x77b>
  403738:	mov    rax,QWORD PTR [rbp-0x88]
  40373f:	and    rax,0xffffffffffff0000
  403745:	movsx  rcx,BYTE PTR [rip+0xeba2]        # 4122ef <g_data@@Base+0x2af>
  40374d:	shl    rcx,0x38
  403751:	movsx  rdx,BYTE PTR [rip+0xeb97]        # 4122f0 <g_data@@Base+0x2b0>
  403759:	shl    rdx,0x30
  40375d:	or     rcx,rdx
  403760:	movsx  rdx,BYTE PTR [rip+0xeb89]        # 4122f1 <g_data@@Base+0x2b1>
  403768:	shl    rdx,0x28
  40376c:	or     rcx,rdx
  40376f:	movsx  rdx,BYTE PTR [rip+0xeb7b]        # 4122f2 <g_data@@Base+0x2b2>
  403777:	shl    rdx,0x20
  40377b:	or     rcx,rdx
  40377e:	movsx  rdx,BYTE PTR [rip+0xeb6d]        # 4122f3 <g_data@@Base+0x2b3>
  403786:	shl    rdx,0x18
  40378a:	or     rcx,rdx
  40378d:	movsx  rdx,BYTE PTR [rip+0xeb5f]        # 4122f4 <g_data@@Base+0x2b4>
  403795:	shl    rdx,0x10
  403799:	or     rcx,rdx
  40379c:	cmp    rax,rcx
  40379f:	je     4037c4 <test@@Base+0x5e4>
  4037a5:	mov    rdi,QWORD PTR [rbp-0x70]
  4037a9:	mov    rsi,QWORD PTR [rbp-0x10]
  4037ad:	mov    rdx,QWORD PTR [rbp-0x18]
  4037b1:	mov    ecx,0xd
  4037b6:	call   40c510 <flatcc_json_parser_set_error@@Base>
  4037bb:	mov    QWORD PTR [rbp-0x10],rax
  4037bf:	jmp    4043f9 <test@@Base+0x1219>
  4037c4:	mov    rdi,QWORD PTR [rbp-0x70]
  4037c8:	mov    rax,QWORD PTR [rbp-0x10]
  4037cc:	add    rax,0x6
  4037d0:	mov    rdx,QWORD PTR [rbp-0x18]
  4037d4:	mov    rsi,rax
  4037d7:	call   404680 <test@@Base+0x14a0>
  4037dc:	mov    QWORD PTR [rbp-0x10],rax
  4037e0:	mov    rdi,QWORD PTR [rbp-0x70]
  4037e4:	mov    rsi,QWORD PTR [rbp-0x10]
  4037e8:	mov    rdx,QWORD PTR [rbp-0x18]
  4037ec:	call   4044d0 <test@@Base+0x12f0>
  4037f1:	mov    QWORD PTR [rbp-0x10],rax
  4037f5:	mov    rax,QWORD PTR [rbp-0x10]
  4037f9:	cmp    rax,QWORD PTR [rbp-0x18]
  4037fd:	jne    403826 <test@@Base+0x646>
  403803:	mov    rax,QWORD PTR [rip+0x157ee]        # 418ff8 <stderr@GLIBC_2.2.5>
  40380a:	mov    rdi,QWORD PTR [rax]
  40380d:	lea    rsi,[rip+0xeab7]        # 4122cb <g_data@@Base+0x28b>
  403814:	mov    al,0x0
  403816:	call   4030a0 <fprintf@plt>
  40381b:	mov    DWORD PTR [rbp-0xd8],eax
  403821:	jmp    4043f9 <test@@Base+0x1219>
  403826:	mov    rax,QWORD PTR [rbp-0x18]
  40382a:	cmp    rax,QWORD PTR [rbp-0x10]
  40382e:	jbe    403855 <test@@Base+0x675>
  403834:	mov    rax,QWORD PTR [rbp-0x10]
  403838:	movsx  ecx,BYTE PTR [rax]
  40383b:	cmp    ecx,0x3a
  40383e:	jne    403855 <test@@Base+0x675>
  403844:	mov    rax,QWORD PTR [rbp-0x10]
  403848:	add    rax,0x1
  40384c:	mov    QWORD PTR [rbp-0x10],rax
  403850:	jmp    403897 <test@@Base+0x6b7>
  403855:	mov    rax,QWORD PTR [rip+0x1579c]        # 418ff8 <stderr@GLIBC_2.2.5>
  40385c:	mov    rdi,QWORD PTR [rax]
  40385f:	lea    rsi,[rip+0xea73]        # 4122d9 <g_data@@Base+0x299>
  403866:	mov    edx,0x3a
  40386b:	mov    al,0x0
  40386d:	call   4030a0 <fprintf@plt>
  403872:	mov    rdi,QWORD PTR [rbp-0x70]
  403876:	mov    rsi,QWORD PTR [rbp-0x10]
  40387a:	mov    rdx,QWORD PTR [rbp-0x18]
  40387e:	mov    ecx,0x11
  403883:	mov    DWORD PTR [rbp-0xdc],eax
  403889:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40388e:	mov    QWORD PTR [rbp-0x10],rax
  403892:	jmp    4043f9 <test@@Base+0x1219>
  403897:	mov    rdi,QWORD PTR [rbp-0x70]
  40389b:	mov    rsi,QWORD PTR [rbp-0x10]
  40389f:	mov    rdx,QWORD PTR [rbp-0x18]
  4038a3:	call   4044d0 <test@@Base+0x12f0>
  4038a8:	mov    QWORD PTR [rbp-0x10],rax
  4038ac:	mov    rax,QWORD PTR [rbp-0x10]
  4038b0:	cmp    rax,QWORD PTR [rbp-0x18]
  4038b4:	jne    4038dd <test@@Base+0x6fd>
  4038ba:	mov    rax,QWORD PTR [rip+0x15737]        # 418ff8 <stderr@GLIBC_2.2.5>
  4038c1:	mov    rdi,QWORD PTR [rax]
  4038c4:	lea    rsi,[rip+0xea00]        # 4122cb <g_data@@Base+0x28b>
  4038cb:	mov    al,0x0
  4038cd:	call   4030a0 <fprintf@plt>
  4038d2:	mov    DWORD PTR [rbp-0xe0],eax
  4038d8:	jmp    4043f9 <test@@Base+0x1219>
  4038dd:	mov    eax,0x8
  4038e2:	mov    edx,eax
  4038e4:	mov    rdi,QWORD PTR [rbp-0x8]
  4038e8:	mov    esi,0x1
  4038ed:	mov    ecx,0x8
  4038f2:	call   4093f0 <flatcc_builder_table_add@@Base>
  4038f7:	mov    QWORD PTR [rbp-0xa8],rax
  4038fe:	cmp    QWORD PTR [rbp-0xa8],0x0
  403906:	jne    403911 <test@@Base+0x731>
  40390c:	jmp    4043f9 <test@@Base+0x1219>
  403911:	mov    rax,QWORD PTR [rbp-0x10]
  403915:	mov    QWORD PTR [rbp-0x90],rax
  40391c:	mov    rdi,QWORD PTR [rbp-0x70]
  403920:	mov    rsi,QWORD PTR [rbp-0x10]
  403924:	mov    rdx,QWORD PTR [rbp-0x18]
  403928:	mov    rax,QWORD PTR [rbp-0xa8]
  40392f:	mov    rcx,rax
  403932:	call   40dd00 <flatcc_json_parser_double@@Base>
  403937:	mov    QWORD PTR [rbp-0x10],rax
  40393b:	mov    rax,QWORD PTR [rbp-0x90]
  403942:	cmp    rax,QWORD PTR [rbp-0x10]
  403946:	jne    403951 <test@@Base+0x771>
  40394c:	jmp    4043f9 <test@@Base+0x1219>
  403951:	jmp    403956 <test@@Base+0x776>
  403956:	jmp    403ed3 <test@@Base+0xcf3>
  40395b:	mov    rax,QWORD PTR [rbp-0x88]
  403962:	and    rax,0xffffffffffffffff
  403966:	movsx  rcx,BYTE PTR [rip+0xe993]        # 412301 <g_data@@Base+0x2c1>
  40396e:	shl    rcx,0x38
  403972:	movsx  rdx,BYTE PTR [rip+0xe988]        # 412302 <g_data@@Base+0x2c2>
  40397a:	shl    rdx,0x30
  40397e:	or     rcx,rdx
  403981:	movsx  rdx,BYTE PTR [rip+0xe97a]        # 412303 <g_data@@Base+0x2c3>
  403989:	shl    rdx,0x28
  40398d:	or     rcx,rdx
  403990:	movsx  rdx,BYTE PTR [rip+0xe96c]        # 412304 <g_data@@Base+0x2c4>
  403998:	shl    rdx,0x20
  40399c:	or     rcx,rdx
  40399f:	movsx  rdx,BYTE PTR [rip+0xe95e]        # 412305 <g_data@@Base+0x2c5>
  4039a7:	shl    rdx,0x18
  4039ab:	or     rcx,rdx
  4039ae:	movsx  rdx,BYTE PTR [rip+0xe950]        # 412306 <g_data@@Base+0x2c6>
  4039b6:	shl    rdx,0x10
  4039ba:	or     rcx,rdx
  4039bd:	movsx  rdx,BYTE PTR [rip+0xe942]        # 412307 <g_data@@Base+0x2c7>
  4039c5:	shl    rdx,0x8
  4039c9:	or     rcx,rdx
  4039cc:	movsx  rdx,BYTE PTR [rip+0xe934]        # 412308 <g_data@@Base+0x2c8>
  4039d4:	shl    rdx,0x0
  4039d8:	or     rcx,rdx
  4039db:	cmp    rax,rcx
  4039de:	je     403a03 <test@@Base+0x823>
  4039e4:	mov    rdi,QWORD PTR [rbp-0x70]
  4039e8:	mov    rsi,QWORD PTR [rbp-0x10]
  4039ec:	mov    rdx,QWORD PTR [rbp-0x18]
  4039f0:	mov    ecx,0xd
  4039f5:	call   40c510 <flatcc_json_parser_set_error@@Base>
  4039fa:	mov    QWORD PTR [rbp-0x10],rax
  4039fe:	jmp    4043f9 <test@@Base+0x1219>
  403a03:	mov    rax,QWORD PTR [rbp-0x90]
  403a0a:	mov    QWORD PTR [rbp-0x10],rax
  403a0e:	mov    rdi,QWORD PTR [rbp-0x10]
  403a12:	mov    rsi,QWORD PTR [rbp-0x18]
  403a16:	call   404620 <test@@Base+0x1440>
  403a1b:	mov    QWORD PTR [rbp-0x88],rax
  403a22:	mov    rax,QWORD PTR [rbp-0x18]
  403a26:	mov    rsi,QWORD PTR [rbp-0x10]
  403a2a:	sub    rax,rsi
  403a2d:	cmp    rax,0x8
  403a31:	jle    403a4b <test@@Base+0x86b>
  403a37:	mov    rax,QWORD PTR [rbp-0x10]
  403a3b:	add    rax,0x8
  403a3f:	mov    QWORD PTR [rbp-0xe8],rax
  403a46:	jmp    403a56 <test@@Base+0x876>
  403a4b:	mov    rax,QWORD PTR [rbp-0x18]
  403a4f:	mov    QWORD PTR [rbp-0xe8],rax
  403a56:	mov    rax,QWORD PTR [rbp-0xe8]
  403a5d:	mov    QWORD PTR [rbp-0x90],rax
  403a64:	movabs rax,0xffffffff00000000
  403a6e:	and    rax,QWORD PTR [rbp-0x88]
  403a75:	movsx  rcx,BYTE PTR [rip+0xe88d]        # 41230a <g_data@@Base+0x2ca>
  403a7d:	shl    rcx,0x38
  403a81:	movsx  rdx,BYTE PTR [rip+0xe882]        # 41230b <g_data@@Base+0x2cb>
  403a89:	shl    rdx,0x30
  403a8d:	or     rcx,rdx
  403a90:	movsx  rdx,BYTE PTR [rip+0xe874]        # 41230c <g_data@@Base+0x2cc>
  403a98:	shl    rdx,0x28
  403a9c:	or     rcx,rdx
  403a9f:	movsx  rdx,BYTE PTR [rip+0xe866]        # 41230d <g_data@@Base+0x2cd>
  403aa7:	shl    rdx,0x20
  403aab:	or     rcx,rdx
  403aae:	cmp    rax,rcx
  403ab1:	jae    403cc0 <test@@Base+0xae0>
  403ab7:	movabs rax,0xffffffff00000000
  403ac1:	and    rax,QWORD PTR [rbp-0x88]
  403ac8:	movsx  rcx,BYTE PTR [rip+0xe83f]        # 41230f <g_data@@Base+0x2cf>
  403ad0:	shl    rcx,0x38
  403ad4:	movsx  rdx,BYTE PTR [rip+0xe834]        # 412310 <g_data@@Base+0x2d0>
  403adc:	shl    rdx,0x30
  403ae0:	or     rcx,rdx
  403ae3:	movsx  rdx,BYTE PTR [rip+0xe826]        # 412311 <g_data@@Base+0x2d1>
  403aeb:	shl    rdx,0x28
  403aef:	or     rcx,rdx
  403af2:	movsx  rdx,BYTE PTR [rip+0xe818]        # 412312 <g_data@@Base+0x2d2>
  403afa:	shl    rdx,0x20
  403afe:	or     rcx,rdx
  403b01:	cmp    rax,rcx
  403b04:	je     403b29 <test@@Base+0x949>
  403b0a:	mov    rdi,QWORD PTR [rbp-0x70]
  403b0e:	mov    rsi,QWORD PTR [rbp-0x10]
  403b12:	mov    rdx,QWORD PTR [rbp-0x18]
  403b16:	mov    ecx,0xd
  403b1b:	call   40c510 <flatcc_json_parser_set_error@@Base>
  403b20:	mov    QWORD PTR [rbp-0x10],rax
  403b24:	jmp    4043f9 <test@@Base+0x1219>
  403b29:	mov    rdi,QWORD PTR [rbp-0x70]
  403b2d:	mov    rax,QWORD PTR [rbp-0x10]
  403b31:	add    rax,0x4
  403b35:	mov    rdx,QWORD PTR [rbp-0x18]
  403b39:	mov    rsi,rax
  403b3c:	call   404680 <test@@Base+0x14a0>
  403b41:	mov    QWORD PTR [rbp-0x10],rax
  403b45:	mov    rdi,QWORD PTR [rbp-0x70]
  403b49:	mov    rsi,QWORD PTR [rbp-0x10]
  403b4d:	mov    rdx,QWORD PTR [rbp-0x18]
  403b51:	call   4044d0 <test@@Base+0x12f0>
  403b56:	mov    QWORD PTR [rbp-0x10],rax
  403b5a:	mov    rax,QWORD PTR [rbp-0x10]
  403b5e:	cmp    rax,QWORD PTR [rbp-0x18]
  403b62:	jne    403b8b <test@@Base+0x9ab>
  403b68:	mov    rax,QWORD PTR [rip+0x15489]        # 418ff8 <stderr@GLIBC_2.2.5>
  403b6f:	mov    rdi,QWORD PTR [rax]
  403b72:	lea    rsi,[rip+0xe752]        # 4122cb <g_data@@Base+0x28b>
  403b79:	mov    al,0x0
  403b7b:	call   4030a0 <fprintf@plt>
  403b80:	mov    DWORD PTR [rbp-0xec],eax
  403b86:	jmp    4043f9 <test@@Base+0x1219>
  403b8b:	mov    rax,QWORD PTR [rbp-0x18]
  403b8f:	cmp    rax,QWORD PTR [rbp-0x10]
  403b93:	jbe    403bba <test@@Base+0x9da>
  403b99:	mov    rax,QWORD PTR [rbp-0x10]
  403b9d:	movsx  ecx,BYTE PTR [rax]
  403ba0:	cmp    ecx,0x3a
  403ba3:	jne    403bba <test@@Base+0x9da>
  403ba9:	mov    rax,QWORD PTR [rbp-0x10]
  403bad:	add    rax,0x1
  403bb1:	mov    QWORD PTR [rbp-0x10],rax
  403bb5:	jmp    403bfc <test@@Base+0xa1c>
  403bba:	mov    rax,QWORD PTR [rip+0x15437]        # 418ff8 <stderr@GLIBC_2.2.5>
  403bc1:	mov    rdi,QWORD PTR [rax]
  403bc4:	lea    rsi,[rip+0xe70e]        # 4122d9 <g_data@@Base+0x299>
  403bcb:	mov    edx,0x3a
  403bd0:	mov    al,0x0
  403bd2:	call   4030a0 <fprintf@plt>
  403bd7:	mov    rdi,QWORD PTR [rbp-0x70]
  403bdb:	mov    rsi,QWORD PTR [rbp-0x10]
  403bdf:	mov    rdx,QWORD PTR [rbp-0x18]
  403be3:	mov    ecx,0x11
  403be8:	mov    DWORD PTR [rbp-0xf0],eax
  403bee:	call   40c510 <flatcc_json_parser_set_error@@Base>
  403bf3:	mov    QWORD PTR [rbp-0x10],rax
  403bf7:	jmp    4043f9 <test@@Base+0x1219>
  403bfc:	mov    rdi,QWORD PTR [rbp-0x70]
  403c00:	mov    rsi,QWORD PTR [rbp-0x10]
  403c04:	mov    rdx,QWORD PTR [rbp-0x18]
  403c08:	call   4044d0 <test@@Base+0x12f0>
  403c0d:	mov    QWORD PTR [rbp-0x10],rax
  403c11:	mov    rax,QWORD PTR [rbp-0x10]
  403c15:	cmp    rax,QWORD PTR [rbp-0x18]
  403c19:	jne    403c42 <test@@Base+0xa62>
  403c1f:	mov    rax,QWORD PTR [rip+0x153d2]        # 418ff8 <stderr@GLIBC_2.2.5>
  403c26:	mov    rdi,QWORD PTR [rax]
  403c29:	lea    rsi,[rip+0xe69b]        # 4122cb <g_data@@Base+0x28b>
  403c30:	mov    al,0x0
  403c32:	call   4030a0 <fprintf@plt>
  403c37:	mov    DWORD PTR [rbp-0xf4],eax
  403c3d:	jmp    4043f9 <test@@Base+0x1219>
  403c42:	mov    eax,0x8
  403c47:	mov    edx,eax
  403c49:	mov    rdi,QWORD PTR [rbp-0x8]
  403c4d:	mov    esi,0x3
  403c52:	mov    ecx,0x8
  403c57:	call   4093f0 <flatcc_builder_table_add@@Base>
  403c5c:	mov    QWORD PTR [rbp-0xa8],rax
  403c63:	cmp    QWORD PTR [rbp-0xa8],0x0
  403c6b:	jne    403c76 <test@@Base+0xa96>
  403c71:	jmp    4043f9 <test@@Base+0x1219>
  403c76:	mov    rax,QWORD PTR [rbp-0x10]
  403c7a:	mov    QWORD PTR [rbp-0x90],rax
  403c81:	mov    rdi,QWORD PTR [rbp-0x70]
  403c85:	mov    rsi,QWORD PTR [rbp-0x10]
  403c89:	mov    rdx,QWORD PTR [rbp-0x18]
  403c8d:	mov    rax,QWORD PTR [rbp-0xa8]
  403c94:	mov    rcx,rax
  403c97:	call   404950 <test@@Base+0x1770>
  403c9c:	mov    QWORD PTR [rbp-0x10],rax
  403ca0:	mov    rax,QWORD PTR [rbp-0x90]
  403ca7:	cmp    rax,QWORD PTR [rbp-0x10]
  403cab:	jne    403cb6 <test@@Base+0xad6>
  403cb1:	jmp    4043f9 <test@@Base+0x1219>
  403cb6:	jmp    403cbb <test@@Base+0xadb>
  403cbb:	jmp    403ec9 <test@@Base+0xce9>
  403cc0:	movabs rax,0xffffffff00000000
  403cca:	and    rax,QWORD PTR [rbp-0x88]
  403cd1:	movsx  rcx,BYTE PTR [rip+0xe631]        # 41230a <g_data@@Base+0x2ca>
  403cd9:	shl    rcx,0x38
  403cdd:	movsx  rdx,BYTE PTR [rip+0xe626]        # 41230b <g_data@@Base+0x2cb>
  403ce5:	shl    rdx,0x30
  403ce9:	or     rcx,rdx
  403cec:	movsx  rdx,BYTE PTR [rip+0xe618]        # 41230c <g_data@@Base+0x2cc>
  403cf4:	shl    rdx,0x28
  403cf8:	or     rcx,rdx
  403cfb:	movsx  rdx,BYTE PTR [rip+0xe60a]        # 41230d <g_data@@Base+0x2cd>
  403d03:	shl    rdx,0x20
  403d07:	or     rcx,rdx
  403d0a:	cmp    rax,rcx
  403d0d:	je     403d32 <test@@Base+0xb52>
  403d13:	mov    rdi,QWORD PTR [rbp-0x70]
  403d17:	mov    rsi,QWORD PTR [rbp-0x10]
  403d1b:	mov    rdx,QWORD PTR [rbp-0x18]
  403d1f:	mov    ecx,0xd
  403d24:	call   40c510 <flatcc_json_parser_set_error@@Base>
  403d29:	mov    QWORD PTR [rbp-0x10],rax
  403d2d:	jmp    4043f9 <test@@Base+0x1219>
  403d32:	mov    rdi,QWORD PTR [rbp-0x70]
  403d36:	mov    rax,QWORD PTR [rbp-0x10]
  403d3a:	add    rax,0x4
  403d3e:	mov    rdx,QWORD PTR [rbp-0x18]
  403d42:	mov    rsi,rax
  403d45:	call   404680 <test@@Base+0x14a0>
  403d4a:	mov    QWORD PTR [rbp-0x10],rax
  403d4e:	mov    rdi,QWORD PTR [rbp-0x70]
  403d52:	mov    rsi,QWORD PTR [rbp-0x10]
  403d56:	mov    rdx,QWORD PTR [rbp-0x18]
  403d5a:	call   4044d0 <test@@Base+0x12f0>
  403d5f:	mov    QWORD PTR [rbp-0x10],rax
  403d63:	mov    rax,QWORD PTR [rbp-0x10]
  403d67:	cmp    rax,QWORD PTR [rbp-0x18]
  403d6b:	jne    403d94 <test@@Base+0xbb4>
  403d71:	mov    rax,QWORD PTR [rip+0x15280]        # 418ff8 <stderr@GLIBC_2.2.5>
  403d78:	mov    rdi,QWORD PTR [rax]
  403d7b:	lea    rsi,[rip+0xe549]        # 4122cb <g_data@@Base+0x28b>
  403d82:	mov    al,0x0
  403d84:	call   4030a0 <fprintf@plt>
  403d89:	mov    DWORD PTR [rbp-0xf8],eax
  403d8f:	jmp    4043f9 <test@@Base+0x1219>
  403d94:	mov    rax,QWORD PTR [rbp-0x18]
  403d98:	cmp    rax,QWORD PTR [rbp-0x10]
  403d9c:	jbe    403dc3 <test@@Base+0xbe3>
  403da2:	mov    rax,QWORD PTR [rbp-0x10]
  403da6:	movsx  ecx,BYTE PTR [rax]
  403da9:	cmp    ecx,0x3a
  403dac:	jne    403dc3 <test@@Base+0xbe3>
  403db2:	mov    rax,QWORD PTR [rbp-0x10]
  403db6:	add    rax,0x1
  403dba:	mov    QWORD PTR [rbp-0x10],rax
  403dbe:	jmp    403e05 <test@@Base+0xc25>
  403dc3:	mov    rax,QWORD PTR [rip+0x1522e]        # 418ff8 <stderr@GLIBC_2.2.5>
  403dca:	mov    rdi,QWORD PTR [rax]
  403dcd:	lea    rsi,[rip+0xe505]        # 4122d9 <g_data@@Base+0x299>
  403dd4:	mov    edx,0x3a
  403dd9:	mov    al,0x0
  403ddb:	call   4030a0 <fprintf@plt>
  403de0:	mov    rdi,QWORD PTR [rbp-0x70]
  403de4:	mov    rsi,QWORD PTR [rbp-0x10]
  403de8:	mov    rdx,QWORD PTR [rbp-0x18]
  403dec:	mov    ecx,0x11
  403df1:	mov    DWORD PTR [rbp-0xfc],eax
  403df7:	call   40c510 <flatcc_json_parser_set_error@@Base>
  403dfc:	mov    QWORD PTR [rbp-0x10],rax
  403e00:	jmp    4043f9 <test@@Base+0x1219>
  403e05:	mov    rdi,QWORD PTR [rbp-0x70]
  403e09:	mov    rsi,QWORD PTR [rbp-0x10]
  403e0d:	mov    rdx,QWORD PTR [rbp-0x18]
  403e11:	call   4044d0 <test@@Base+0x12f0>
  403e16:	mov    QWORD PTR [rbp-0x10],rax
  403e1a:	mov    rax,QWORD PTR [rbp-0x10]
  403e1e:	cmp    rax,QWORD PTR [rbp-0x18]
  403e22:	jne    403e4b <test@@Base+0xc6b>
  403e28:	mov    rax,QWORD PTR [rip+0x151c9]        # 418ff8 <stderr@GLIBC_2.2.5>
  403e2f:	mov    rdi,QWORD PTR [rax]
  403e32:	lea    rsi,[rip+0xe492]        # 4122cb <g_data@@Base+0x28b>
  403e39:	mov    al,0x0
  403e3b:	call   4030a0 <fprintf@plt>
  403e40:	mov    DWORD PTR [rbp-0x100],eax
  403e46:	jmp    4043f9 <test@@Base+0x1219>
  403e4b:	mov    eax,0x4
  403e50:	mov    edx,eax
  403e52:	mov    rdi,QWORD PTR [rbp-0x8]
  403e56:	mov    esi,0x2
  403e5b:	mov    ecx,0x4
  403e60:	call   4093f0 <flatcc_builder_table_add@@Base>
  403e65:	mov    QWORD PTR [rbp-0xa8],rax
  403e6c:	cmp    QWORD PTR [rbp-0xa8],0x0
  403e74:	jne    403e7f <test@@Base+0xc9f>
  403e7a:	jmp    4043f9 <test@@Base+0x1219>
  403e7f:	mov    rax,QWORD PTR [rbp-0x10]
  403e83:	mov    QWORD PTR [rbp-0x90],rax
  403e8a:	mov    rdi,QWORD PTR [rbp-0x70]
  403e8e:	mov    rsi,QWORD PTR [rbp-0x10]
  403e92:	mov    rdx,QWORD PTR [rbp-0x18]
  403e96:	mov    rax,QWORD PTR [rbp-0xa8]
  403e9d:	mov    rcx,rax
  403ea0:	call   404a10 <test@@Base+0x1830>
  403ea5:	mov    QWORD PTR [rbp-0x10],rax
  403ea9:	mov    rax,QWORD PTR [rbp-0x90]
  403eb0:	cmp    rax,QWORD PTR [rbp-0x10]
  403eb4:	jne    403ebf <test@@Base+0xcdf>
  403eba:	jmp    4043f9 <test@@Base+0x1219>
  403ebf:	jmp    403ec4 <test@@Base+0xce4>
  403ec4:	jmp    403ec9 <test@@Base+0xce9>
  403ec9:	jmp    403ece <test@@Base+0xcee>
  403ece:	jmp    403ed3 <test@@Base+0xcf3>
  403ed3:	jmp    404258 <test@@Base+0x1078>
  403ed8:	movabs rax,0xffffffff00000000
  403ee2:	and    rax,QWORD PTR [rbp-0x88]
  403ee9:	movsx  rcx,BYTE PTR [rip+0xe40b]        # 4122fc <g_data@@Base+0x2bc>
  403ef1:	shl    rcx,0x38
  403ef5:	movsx  rdx,BYTE PTR [rip+0xe400]        # 4122fd <g_data@@Base+0x2bd>
  403efd:	shl    rdx,0x30
  403f01:	or     rcx,rdx
  403f04:	movsx  rdx,BYTE PTR [rip+0xe3f2]        # 4122fe <g_data@@Base+0x2be>
  403f0c:	shl    rdx,0x28
  403f10:	or     rcx,rdx
  403f13:	movsx  rdx,BYTE PTR [rip+0xe3e4]        # 4122ff <g_data@@Base+0x2bf>
  403f1b:	shl    rdx,0x20
  403f1f:	or     rcx,rdx
  403f22:	cmp    rax,rcx
  403f25:	je     403f4a <test@@Base+0xd6a>
  403f2b:	mov    rdi,QWORD PTR [rbp-0x70]
  403f2f:	mov    rsi,QWORD PTR [rbp-0x10]
  403f33:	mov    rdx,QWORD PTR [rbp-0x18]
  403f37:	mov    ecx,0xd
  403f3c:	call   40c510 <flatcc_json_parser_set_error@@Base>
  403f41:	mov    QWORD PTR [rbp-0x10],rax
  403f45:	jmp    4043f9 <test@@Base+0x1219>
  403f4a:	mov    rdi,QWORD PTR [rbp-0x70]
  403f4e:	mov    rax,QWORD PTR [rbp-0x10]
  403f52:	add    rax,0x4
  403f56:	mov    rdx,QWORD PTR [rbp-0x18]
  403f5a:	mov    rsi,rax
  403f5d:	call   404680 <test@@Base+0x14a0>
  403f62:	mov    QWORD PTR [rbp-0x10],rax
  403f66:	mov    rdi,QWORD PTR [rbp-0x70]
  403f6a:	mov    rsi,QWORD PTR [rbp-0x10]
  403f6e:	mov    rdx,QWORD PTR [rbp-0x18]
  403f72:	call   4044d0 <test@@Base+0x12f0>
  403f77:	mov    QWORD PTR [rbp-0x10],rax
  403f7b:	mov    rax,QWORD PTR [rbp-0x10]
  403f7f:	cmp    rax,QWORD PTR [rbp-0x18]
  403f83:	jne    403fac <test@@Base+0xdcc>
  403f89:	mov    rax,QWORD PTR [rip+0x15068]        # 418ff8 <stderr@GLIBC_2.2.5>
  403f90:	mov    rdi,QWORD PTR [rax]
  403f93:	lea    rsi,[rip+0xe331]        # 4122cb <g_data@@Base+0x28b>
  403f9a:	mov    al,0x0
  403f9c:	call   4030a0 <fprintf@plt>
  403fa1:	mov    DWORD PTR [rbp-0x104],eax
  403fa7:	jmp    4043f9 <test@@Base+0x1219>
  403fac:	mov    rax,QWORD PTR [rbp-0x18]
  403fb0:	cmp    rax,QWORD PTR [rbp-0x10]
  403fb4:	jbe    403fdb <test@@Base+0xdfb>
  403fba:	mov    rax,QWORD PTR [rbp-0x10]
  403fbe:	movsx  ecx,BYTE PTR [rax]
  403fc1:	cmp    ecx,0x3a
  403fc4:	jne    403fdb <test@@Base+0xdfb>
  403fca:	mov    rax,QWORD PTR [rbp-0x10]
  403fce:	add    rax,0x1
  403fd2:	mov    QWORD PTR [rbp-0x10],rax
  403fd6:	jmp    40401d <test@@Base+0xe3d>
  403fdb:	mov    rax,QWORD PTR [rip+0x15016]        # 418ff8 <stderr@GLIBC_2.2.5>
  403fe2:	mov    rdi,QWORD PTR [rax]
  403fe5:	lea    rsi,[rip+0xe2ed]        # 4122d9 <g_data@@Base+0x299>
  403fec:	mov    edx,0x3a
  403ff1:	mov    al,0x0
  403ff3:	call   4030a0 <fprintf@plt>
  403ff8:	mov    rdi,QWORD PTR [rbp-0x70]
  403ffc:	mov    rsi,QWORD PTR [rbp-0x10]
  404000:	mov    rdx,QWORD PTR [rbp-0x18]
  404004:	mov    ecx,0x11
  404009:	mov    DWORD PTR [rbp-0x108],eax
  40400f:	call   40c510 <flatcc_json_parser_set_error@@Base>
  404014:	mov    QWORD PTR [rbp-0x10],rax
  404018:	jmp    4043f9 <test@@Base+0x1219>
  40401d:	mov    rdi,QWORD PTR [rbp-0x70]
  404021:	mov    rsi,QWORD PTR [rbp-0x10]
  404025:	mov    rdx,QWORD PTR [rbp-0x18]
  404029:	call   4044d0 <test@@Base+0x12f0>
  40402e:	mov    QWORD PTR [rbp-0x10],rax
  404032:	mov    rax,QWORD PTR [rbp-0x10]
  404036:	cmp    rax,QWORD PTR [rbp-0x18]
  40403a:	jne    404063 <test@@Base+0xe83>
  404040:	mov    rax,QWORD PTR [rip+0x14fb1]        # 418ff8 <stderr@GLIBC_2.2.5>
  404047:	mov    rdi,QWORD PTR [rax]
  40404a:	lea    rsi,[rip+0xe27a]        # 4122cb <g_data@@Base+0x28b>
  404051:	mov    al,0x0
  404053:	call   4030a0 <fprintf@plt>
  404058:	mov    DWORD PTR [rbp-0x10c],eax
  40405e:	jmp    4043f9 <test@@Base+0x1219>
  404063:	mov    rdi,QWORD PTR [rbp-0x70]
  404067:	mov    rsi,QWORD PTR [rbp-0x10]
  40406b:	mov    rdx,QWORD PTR [rbp-0x18]
  40406f:	call   404ad0 <test@@Base+0x18f0>
  404074:	mov    QWORD PTR [rbp-0x10],rax
  404078:	mov    rax,QWORD PTR [rbp-0x10]
  40407c:	mov    QWORD PTR [rbp-0x90],rax
  404083:	mov    rdi,QWORD PTR [rbp-0x70]
  404087:	mov    rsi,QWORD PTR [rbp-0x10]
  40408b:	mov    rdx,QWORD PTR [rbp-0x18]
  40408f:	call   40c570 <flatcc_json_parser_string_part@@Base>
  404094:	mov    QWORD PTR [rbp-0x10],rax
  404098:	mov    rax,QWORD PTR [rbp-0x10]
  40409c:	cmp    rax,QWORD PTR [rbp-0x18]
  4040a0:	jne    4040ab <test@@Base+0xecb>
  4040a6:	jmp    4043f9 <test@@Base+0x1219>
  4040ab:	mov    rax,QWORD PTR [rbp-0x10]
  4040af:	movsx  ecx,BYTE PTR [rax]
  4040b2:	cmp    ecx,0x22
  4040b5:	jne    4040e4 <test@@Base+0xf04>
  4040bb:	mov    rdi,QWORD PTR [rbp-0x8]
  4040bf:	mov    rsi,QWORD PTR [rbp-0x90]
  4040c6:	mov    rax,QWORD PTR [rbp-0x10]
  4040ca:	mov    rcx,QWORD PTR [rbp-0x90]
  4040d1:	sub    rax,rcx
  4040d4:	mov    rdx,rax
  4040d7:	call   409db0 <flatcc_builder_create_string@@Base>
  4040dc:	mov    DWORD PTR [rbp-0x78],eax
  4040df:	jmp    404204 <test@@Base+0x1024>
  4040e4:	mov    rdi,QWORD PTR [rbp-0x8]
  4040e8:	call   407950 <flatcc_builder_start_string@@Base>
  4040ed:	mov    rdi,QWORD PTR [rbp-0x8]
  4040f1:	mov    rcx,QWORD PTR [rbp-0x10]
  4040f5:	mov    rdx,QWORD PTR [rbp-0x90]
  4040fc:	sub    rcx,rdx
  4040ff:	mov    rsi,rcx
  404102:	mov    DWORD PTR [rbp-0x110],eax
  404108:	call   407170 <flatcc_builder_extend_string@@Base>
  40410d:	mov    QWORD PTR [rbp-0x98],rax
  404114:	cmp    QWORD PTR [rbp-0x98],0x0
  40411c:	jne    404127 <test@@Base+0xf47>
  404122:	jmp    4043f9 <test@@Base+0x1219>
  404127:	mov    rdi,QWORD PTR [rbp-0x98]
  40412e:	mov    rsi,QWORD PTR [rbp-0x90]
  404135:	mov    rax,QWORD PTR [rbp-0x10]
  404139:	mov    rcx,QWORD PTR [rbp-0x90]
  404140:	sub    rax,rcx
  404143:	mov    rdx,rax
  404146:	call   4030b0 <memcpy@plt>
  40414b:	lea    rcx,[rbp-0x9c]
  404152:	mov    rdi,QWORD PTR [rbp-0x70]
  404156:	mov    rsi,QWORD PTR [rbp-0x10]
  40415a:	mov    rdx,QWORD PTR [rbp-0x18]
  40415e:	call   40c8a0 <flatcc_json_parser_string_escape@@Base>
  404163:	lea    rcx,[rbp-0x9c]
  40416a:	mov    QWORD PTR [rbp-0x10],rax
  40416e:	mov    rdi,QWORD PTR [rbp-0x8]
  404172:	add    rcx,0x1
  404176:	movsx  rdx,BYTE PTR [rbp-0x9c]
  40417e:	mov    rsi,rcx
  404181:	call   407210 <flatcc_builder_append_string@@Base>
  404186:	mov    rcx,QWORD PTR [rbp-0x10]
  40418a:	mov    QWORD PTR [rbp-0x90],rcx
  404191:	mov    rdi,QWORD PTR [rbp-0x70]
  404195:	mov    rsi,QWORD PTR [rbp-0x10]
  404199:	mov    rdx,QWORD PTR [rbp-0x18]
  40419d:	mov    QWORD PTR [rbp-0x118],rax
  4041a4:	call   40c570 <flatcc_json_parser_string_part@@Base>
  4041a9:	mov    QWORD PTR [rbp-0x10],rax
  4041ad:	mov    rax,QWORD PTR [rbp-0x10]
  4041b1:	cmp    rax,QWORD PTR [rbp-0x18]
  4041b5:	jne    4041c0 <test@@Base+0xfe0>
  4041bb:	jmp    4043f9 <test@@Base+0x1219>
  4041c0:	mov    rdi,QWORD PTR [rbp-0x8]
  4041c4:	mov    rsi,QWORD PTR [rbp-0x90]
  4041cb:	mov    rax,QWORD PTR [rbp-0x10]
  4041cf:	mov    rcx,QWORD PTR [rbp-0x90]
  4041d6:	sub    rax,rcx
  4041d9:	mov    rdx,rax
  4041dc:	call   407210 <flatcc_builder_append_string@@Base>
  4041e1:	mov    QWORD PTR [rbp-0x120],rax
  4041e8:	mov    rax,QWORD PTR [rbp-0x10]
  4041ec:	movsx  ecx,BYTE PTR [rax]
  4041ef:	cmp    ecx,0x22
  4041f2:	jne    40414b <test@@Base+0xf6b>
  4041f8:	mov    rdi,QWORD PTR [rbp-0x8]
  4041fc:	call   40a020 <flatcc_builder_end_string@@Base>
  404201:	mov    DWORD PTR [rbp-0x78],eax
  404204:	cmp    DWORD PTR [rbp-0x78],0x0
  404208:	jne    404213 <test@@Base+0x1033>
  40420e:	jmp    4043f9 <test@@Base+0x1219>
  404213:	mov    rdi,QWORD PTR [rbp-0x8]
  404217:	mov    esi,0xa
  40421c:	call   4092f0 <flatcc_builder_table_add_offset@@Base>
  404221:	mov    QWORD PTR [rbp-0x80],rax
  404225:	cmp    QWORD PTR [rbp-0x80],0x0
  40422a:	jne    404235 <test@@Base+0x1055>
  404230:	jmp    4043f9 <test@@Base+0x1219>
  404235:	mov    eax,DWORD PTR [rbp-0x78]
  404238:	mov    rcx,QWORD PTR [rbp-0x80]
  40423c:	mov    DWORD PTR [rcx],eax
  40423e:	mov    rdi,QWORD PTR [rbp-0x70]
  404242:	mov    rsi,QWORD PTR [rbp-0x10]
  404246:	mov    rdx,QWORD PTR [rbp-0x18]
  40424a:	call   404b40 <test@@Base+0x1960>
  40424f:	mov    QWORD PTR [rbp-0x10],rax
  404253:	jmp    404258 <test@@Base+0x1078>
  404258:	jmp    40425d <test@@Base+0x107d>
  40425d:	mov    rdi,QWORD PTR [rbp-0x70]
  404261:	mov    rsi,QWORD PTR [rbp-0x10]
  404265:	mov    rdx,QWORD PTR [rbp-0x18]
  404269:	call   4044d0 <test@@Base+0x12f0>
  40426e:	mov    QWORD PTR [rbp-0x10],rax
  404272:	mov    rax,QWORD PTR [rbp-0x10]
  404276:	cmp    rax,QWORD PTR [rbp-0x18]
  40427a:	jne    4042a3 <test@@Base+0x10c3>
  404280:	mov    rax,QWORD PTR [rip+0x14d71]        # 418ff8 <stderr@GLIBC_2.2.5>
  404287:	mov    rdi,QWORD PTR [rax]
  40428a:	lea    rsi,[rip+0xe03a]        # 4122cb <g_data@@Base+0x28b>
  404291:	mov    al,0x0
  404293:	call   4030a0 <fprintf@plt>
  404298:	mov    DWORD PTR [rbp-0x124],eax
  40429e:	jmp    4043f9 <test@@Base+0x1219>
  4042a3:	mov    rax,QWORD PTR [rbp-0x10]
  4042a7:	movsx  ecx,BYTE PTR [rax]
  4042aa:	cmp    ecx,0x2c
  4042ad:	jne    40431f <test@@Base+0x113f>
  4042b3:	mov    rax,QWORD PTR [rbp-0x10]
  4042b7:	add    rax,0x1
  4042bb:	mov    QWORD PTR [rbp-0x10],rax
  4042bf:	mov    rdi,QWORD PTR [rbp-0x70]
  4042c3:	mov    rsi,QWORD PTR [rbp-0x10]
  4042c7:	mov    rdx,QWORD PTR [rbp-0x18]
  4042cb:	call   4044d0 <test@@Base+0x12f0>
  4042d0:	mov    QWORD PTR [rbp-0x10],rax
  4042d4:	mov    rax,QWORD PTR [rbp-0x10]
  4042d8:	cmp    rax,QWORD PTR [rbp-0x18]
  4042dc:	jne    404305 <test@@Base+0x1125>
  4042e2:	mov    rax,QWORD PTR [rip+0x14d0f]        # 418ff8 <stderr@GLIBC_2.2.5>
  4042e9:	mov    rdi,QWORD PTR [rax]
  4042ec:	lea    rsi,[rip+0xdfd8]        # 4122cb <g_data@@Base+0x28b>
  4042f3:	mov    al,0x0
  4042f5:	call   4030a0 <fprintf@plt>
  4042fa:	mov    DWORD PTR [rbp-0x128],eax
  404300:	jmp    4043f9 <test@@Base+0x1219>
  404305:	mov    rax,QWORD PTR [rbp-0x10]
  404309:	movsx  ecx,BYTE PTR [rax]
  40430c:	cmp    ecx,0x7d
  40430f:	je     40431a <test@@Base+0x113a>
  404315:	jmp    403376 <test@@Base+0x196>
  40431a:	jmp    40431f <test@@Base+0x113f>
  40431f:	mov    rax,QWORD PTR [rbp-0x18]
  404323:	cmp    rax,QWORD PTR [rbp-0x10]
  404327:	jbe    40434e <test@@Base+0x116e>
  40432d:	mov    rax,QWORD PTR [rbp-0x10]
  404331:	movsx  ecx,BYTE PTR [rax]
  404334:	cmp    ecx,0x7d
  404337:	jne    40434e <test@@Base+0x116e>
  40433d:	mov    rax,QWORD PTR [rbp-0x10]
  404341:	add    rax,0x1
  404345:	mov    QWORD PTR [rbp-0x10],rax
  404349:	jmp    404390 <test@@Base+0x11b0>
  40434e:	mov    rax,QWORD PTR [rip+0x14ca3]        # 418ff8 <stderr@GLIBC_2.2.5>
  404355:	mov    rdi,QWORD PTR [rax]
  404358:	lea    rsi,[rip+0xdf7a]        # 4122d9 <g_data@@Base+0x299>
  40435f:	mov    edx,0x7d
  404364:	mov    al,0x0
  404366:	call   4030a0 <fprintf@plt>
  40436b:	mov    rdi,QWORD PTR [rbp-0x70]
  40436f:	mov    rsi,QWORD PTR [rbp-0x10]
  404373:	mov    rdx,QWORD PTR [rbp-0x18]
  404377:	mov    ecx,0x11
  40437c:	mov    DWORD PTR [rbp-0x12c],eax
  404382:	call   40c510 <flatcc_json_parser_set_error@@Base>
  404387:	mov    QWORD PTR [rbp-0x10],rax
  40438b:	jmp    4043f9 <test@@Base+0x1219>
  404390:	mov    rdi,QWORD PTR [rbp-0x8]
  404394:	call   4087b0 <flatcc_builder_end_table@@Base>
  404399:	mov    DWORD PTR [rbp-0x74],eax
  40439c:	mov    rdi,QWORD PTR [rbp-0x8]
  4043a0:	mov    esi,DWORD PTR [rbp-0x74]
  4043a3:	call   4067f0 <flatcc_builder_end_buffer@@Base>
  4043a8:	mov    rdi,QWORD PTR [rbp-0x70]
  4043ac:	mov    rsi,QWORD PTR [rbp-0x10]
  4043b0:	mov    rdx,QWORD PTR [rbp-0x18]
  4043b4:	mov    DWORD PTR [rbp-0x130],eax
  4043ba:	call   4044d0 <test@@Base+0x12f0>
  4043bf:	mov    QWORD PTR [rbp-0x10],rax
  4043c3:	mov    rax,QWORD PTR [rbp-0x10]
  4043c7:	cmp    rax,QWORD PTR [rbp-0x18]
  4043cb:	je     4043f4 <test@@Base+0x1214>
  4043d1:	mov    rax,QWORD PTR [rip+0x14c20]        # 418ff8 <stderr@GLIBC_2.2.5>
  4043d8:	mov    rdi,QWORD PTR [rax]
  4043db:	lea    rsi,[rip+0xdf32]        # 412314 <g_data@@Base+0x2d4>
  4043e2:	mov    al,0x0
  4043e4:	call   4030a0 <fprintf@plt>
  4043e9:	mov    DWORD PTR [rbp-0x134],eax
  4043ef:	jmp    4043f9 <test@@Base+0x1219>
  4043f4:	jmp    4043f9 <test@@Base+0x1219>
  4043f9:	mov    rax,QWORD PTR [rbp-0x70]
  4043fd:	cmp    DWORD PTR [rax+0x20],0x0
  404401:	je     404492 <test@@Base+0x12b2>
  404407:	mov    rax,QWORD PTR [rip+0x14bea]        # 418ff8 <stderr@GLIBC_2.2.5>
  40440e:	mov    rdi,QWORD PTR [rax]
  404411:	mov    rax,QWORD PTR [rbp-0x70]
  404415:	mov    edx,DWORD PTR [rax+0x18]
  404418:	mov    rax,QWORD PTR [rbp-0x70]
  40441c:	mov    rax,QWORD PTR [rax+0x38]
  404420:	mov    rcx,QWORD PTR [rbp-0x70]
  404424:	mov    rcx,QWORD PTR [rcx+0x8]
  404428:	sub    rax,rcx
  40442b:	add    rax,0x1
  40442f:	mov    esi,eax
  404431:	mov    rax,QWORD PTR [rbp-0x70]
  404435:	mov    r8d,DWORD PTR [rax+0x20]
  404439:	mov    QWORD PTR [rbp-0x140],rdi
  404440:	mov    edi,r8d
  404443:	mov    DWORD PTR [rbp-0x144],esi
  404449:	mov    DWORD PTR [rbp-0x148],edx
  40444f:	call   40c290 <flatcc_json_parser_error_string@@Base>
  404454:	mov    rdi,QWORD PTR [rbp-0x140]
  40445b:	lea    rsi,[rip+0xdecd]        # 41232f <g_data@@Base+0x2ef>
  404462:	mov    edx,DWORD PTR [rbp-0x148]
  404468:	mov    ecx,DWORD PTR [rbp-0x144]
  40446e:	mov    r8,rax
  404471:	mov    al,0x0
  404473:	call   4030a0 <fprintf@plt>
  404478:	mov    rdi,QWORD PTR [rbp-0x8]
  40447c:	mov    DWORD PTR [rbp-0x14c],eax
  404482:	call   4054d0 <flatcc_builder_reset@@Base>
  404487:	mov    DWORD PTR [rbp-0x150],eax
  40448d:	jmp    4044b0 <test@@Base+0x12d0>
  404492:	mov    rax,QWORD PTR [rip+0x14b5f]        # 418ff8 <stderr@GLIBC_2.2.5>
  404499:	mov    rdi,QWORD PTR [rax]
  40449c:	lea    rsi,[rip+0xde97]        # 41233a <g_data@@Base+0x2fa>
  4044a3:	mov    al,0x0
  4044a5:	call   4030a0 <fprintf@plt>
  4044aa:	mov    DWORD PTR [rbp-0x154],eax
  4044b0:	mov    rax,QWORD PTR [rbp-0x70]
  4044b4:	mov    ecx,DWORD PTR [rax+0x20]
  4044b7:	mov    rax,QWORD PTR [rbp-0x20]
  4044bb:	mov    DWORD PTR [rax],ecx
  4044bd:	mov    rax,QWORD PTR [rbp-0x10]
  4044c1:	add    rsp,0x160
  4044c8:	pop    rbp
  4044c9:	ret    
  4044ca:	nop    WORD PTR [rax+rax*1+0x0]
  4044d0:	push   rbp
  4044d1:	mov    rbp,rsp
  4044d4:	sub    rsp,0x20
  4044d8:	mov    QWORD PTR [rbp-0x10],rdi
  4044dc:	mov    QWORD PTR [rbp-0x18],rsi
  4044e0:	mov    QWORD PTR [rbp-0x20],rdx
  4044e4:	mov    rdx,QWORD PTR [rbp-0x20]
  4044e8:	mov    rsi,QWORD PTR [rbp-0x18]
  4044ec:	sub    rdx,rsi
  4044ef:	cmp    rdx,0x1
  4044f3:	jle    40454d <test@@Base+0x136d>
  4044f9:	mov    rax,QWORD PTR [rbp-0x18]
  4044fd:	movsx  ecx,BYTE PTR [rax]
  404500:	cmp    ecx,0x20
  404503:	jle    404516 <test@@Base+0x1336>
  404509:	mov    rax,QWORD PTR [rbp-0x18]
  40450d:	mov    QWORD PTR [rbp-0x8],rax
  404511:	jmp    404562 <test@@Base+0x1382>
  404516:	mov    rax,QWORD PTR [rbp-0x18]
  40451a:	movsx  ecx,BYTE PTR [rax]
  40451d:	cmp    ecx,0x20
  404520:	jne    404548 <test@@Base+0x1368>
  404526:	mov    rax,QWORD PTR [rbp-0x18]
  40452a:	movsx  ecx,BYTE PTR [rax+0x1]
  40452e:	cmp    ecx,0x20
  404531:	jle    404548 <test@@Base+0x1368>
  404537:	mov    rax,QWORD PTR [rbp-0x18]
  40453b:	add    rax,0x1
  40453f:	mov    QWORD PTR [rbp-0x8],rax
  404543:	jmp    404562 <test@@Base+0x1382>
  404548:	jmp    40454d <test@@Base+0x136d>
  40454d:	mov    rdi,QWORD PTR [rbp-0x10]
  404551:	mov    rsi,QWORD PTR [rbp-0x18]
  404555:	mov    rdx,QWORD PTR [rbp-0x20]
  404559:	call   40c690 <flatcc_json_parser_space_ext@@Base>
  40455e:	mov    QWORD PTR [rbp-0x8],rax
  404562:	mov    rax,QWORD PTR [rbp-0x8]
  404566:	add    rsp,0x20
  40456a:	pop    rbp
  40456b:	ret    
  40456c:	nop    DWORD PTR [rax+0x0]
  404570:	push   rbp
  404571:	mov    rbp,rsp
  404574:	sub    rsp,0x20
  404578:	mov    QWORD PTR [rbp-0x10],rdi
  40457c:	mov    QWORD PTR [rbp-0x18],rsi
  404580:	mov    QWORD PTR [rbp-0x20],rdx
  404584:	mov    rdx,QWORD PTR [rbp-0x18]
  404588:	cmp    rdx,QWORD PTR [rbp-0x20]
  40458c:	jne    40459f <test@@Base+0x13bf>
  404592:	mov    rax,QWORD PTR [rbp-0x18]
  404596:	mov    QWORD PTR [rbp-0x8],rax
  40459a:	jmp    40460d <test@@Base+0x142d>
  40459f:	mov    rax,QWORD PTR [rbp-0x18]
  4045a3:	movsx  ecx,BYTE PTR [rax]
  4045a6:	cmp    ecx,0x22
  4045a9:	jne    4045cb <test@@Base+0x13eb>
  4045af:	mov    rax,QWORD PTR [rbp-0x18]
  4045b3:	add    rax,0x1
  4045b7:	mov    QWORD PTR [rbp-0x18],rax
  4045bb:	mov    rax,QWORD PTR [rbp-0x10]
  4045bf:	mov    DWORD PTR [rax+0x14],0x0
  4045c6:	jmp    404605 <test@@Base+0x1425>
  4045cb:	mov    rax,QWORD PTR [rbp-0x18]
  4045cf:	movsx  ecx,BYTE PTR [rax]
  4045d2:	cmp    ecx,0x2e
  4045d5:	jne    4045fa <test@@Base+0x141a>
  4045db:	mov    rdi,QWORD PTR [rbp-0x10]
  4045df:	mov    rsi,QWORD PTR [rbp-0x18]
  4045e3:	mov    rdx,QWORD PTR [rbp-0x20]
  4045e7:	mov    ecx,0x5
  4045ec:	call   40c510 <flatcc_json_parser_set_error@@Base>
  4045f1:	mov    QWORD PTR [rbp-0x8],rax
  4045f5:	jmp    40460d <test@@Base+0x142d>
  4045fa:	mov    rax,QWORD PTR [rbp-0x10]
  4045fe:	mov    DWORD PTR [rax+0x14],0x1
  404605:	mov    rax,QWORD PTR [rbp-0x18]
  404609:	mov    QWORD PTR [rbp-0x8],rax
  40460d:	mov    rax,QWORD PTR [rbp-0x8]
  404611:	add    rsp,0x20
  404615:	pop    rbp
  404616:	ret    
  404617:	nop    WORD PTR [rax+rax*1+0x0]
  404620:	push   rbp
  404621:	mov    rbp,rsp
  404624:	sub    rsp,0x20
  404628:	mov    QWORD PTR [rbp-0x10],rdi
  40462c:	mov    QWORD PTR [rbp-0x18],rsi
  404630:	mov    rsi,QWORD PTR [rbp-0x18]
  404634:	mov    rdi,QWORD PTR [rbp-0x10]
  404638:	sub    rsi,rdi
  40463b:	mov    QWORD PTR [rbp-0x20],rsi
  40463f:	cmp    QWORD PTR [rbp-0x20],0x8
  404644:	jb     40465d <test@@Base+0x147d>
  40464a:	mov    rax,QWORD PTR [rbp-0x10]
  40464e:	mov    rax,QWORD PTR [rax]
  404651:	bswap  rax
  404654:	mov    QWORD PTR [rbp-0x8],rax
  404658:	jmp    40466e <test@@Base+0x148e>
  40465d:	mov    rdi,QWORD PTR [rbp-0x10]
  404661:	mov    rsi,QWORD PTR [rbp-0x18]
  404665:	call   404c30 <main@@Base+0x80>
  40466a:	mov    QWORD PTR [rbp-0x8],rax
  40466e:	mov    rax,QWORD PTR [rbp-0x8]
  404672:	add    rsp,0x20
  404676:	pop    rbp
  404677:	ret    
  404678:	nop    DWORD PTR [rax+rax*1+0x0]
  404680:	push   rbp
  404681:	mov    rbp,rsp
  404684:	sub    rsp,0x30
  404688:	mov    QWORD PTR [rbp-0x10],rdi
  40468c:	mov    QWORD PTR [rbp-0x18],rsi
  404690:	mov    QWORD PTR [rbp-0x20],rdx
  404694:	mov    BYTE PTR [rbp-0x22],0x0
  404698:	mov    rdx,QWORD PTR [rbp-0x10]
  40469c:	cmp    DWORD PTR [rdx+0x14],0x0
  4046a0:	je     4047b0 <test@@Base+0x15d0>
  4046a6:	jmp    4046ab <test@@Base+0x14cb>
  4046ab:	xor    eax,eax
  4046ad:	mov    cl,al
  4046af:	mov    rdx,QWORD PTR [rbp-0x18]
  4046b3:	cmp    rdx,QWORD PTR [rbp-0x20]
  4046b7:	mov    BYTE PTR [rbp-0x23],cl
  4046ba:	je     4046d0 <test@@Base+0x14f0>
  4046c0:	mov    rax,QWORD PTR [rbp-0x18]
  4046c4:	movsx  ecx,BYTE PTR [rax]
  4046c7:	cmp    ecx,0x20
  4046ca:	setg   dl
  4046cd:	mov    BYTE PTR [rbp-0x23],dl
  4046d0:	mov    al,BYTE PTR [rbp-0x23]
  4046d3:	test   al,0x1
  4046d5:	jne    4046e0 <test@@Base+0x1500>
  4046db:	jmp    40477f <test@@Base+0x159f>
  4046e0:	mov    rax,QWORD PTR [rbp-0x18]
  4046e4:	mov    cl,BYTE PTR [rax]
  4046e6:	mov    BYTE PTR [rbp-0x21],cl
  4046e9:	mov    BYTE PTR [rbp-0x22],cl
  4046ec:	movsx  edx,BYTE PTR [rbp-0x21]
  4046f0:	cmp    edx,0x5f
  4046f3:	je     404732 <test@@Base+0x1552>
  4046f9:	movsx  eax,BYTE PTR [rbp-0x21]
  4046fd:	cmp    eax,0x2e
  404700:	je     404732 <test@@Base+0x1552>
  404706:	movsx  eax,BYTE PTR [rbp-0x21]
  40470a:	and    eax,0x80
  40470f:	cmp    eax,0x0
  404712:	jne    404732 <test@@Base+0x1552>
  404718:	movsx  eax,BYTE PTR [rbp-0x21]
  40471c:	cmp    eax,0x30
  40471f:	jl     404743 <test@@Base+0x1563>
  404725:	movsx  eax,BYTE PTR [rbp-0x21]
  404729:	cmp    eax,0x39
  40472c:	jg     404743 <test@@Base+0x1563>
  404732:	mov    rax,QWORD PTR [rbp-0x18]
  404736:	add    rax,0x1
  40473a:	mov    QWORD PTR [rbp-0x18],rax
  40473e:	jmp    4046ab <test@@Base+0x14cb>
  404743:	movsx  eax,BYTE PTR [rbp-0x21]
  404747:	or     eax,0x20
  40474a:	mov    cl,al
  40474c:	mov    BYTE PTR [rbp-0x21],cl
  40474f:	movsx  eax,BYTE PTR [rbp-0x21]
  404753:	cmp    eax,0x61
  404756:	jl     40477a <test@@Base+0x159a>
  40475c:	movsx  eax,BYTE PTR [rbp-0x21]
  404760:	cmp    eax,0x7a
  404763:	jg     40477a <test@@Base+0x159a>
  404769:	mov    rax,QWORD PTR [rbp-0x18]
  40476d:	add    rax,0x1
  404771:	mov    QWORD PTR [rbp-0x18],rax
  404775:	jmp    4046ab <test@@Base+0x14cb>
  40477a:	jmp    40477f <test@@Base+0x159f>
  40477f:	movsx  eax,BYTE PTR [rbp-0x22]
  404783:	cmp    eax,0x2e
  404786:	jne    4047ab <test@@Base+0x15cb>
  40478c:	mov    rdi,QWORD PTR [rbp-0x10]
  404790:	mov    rsi,QWORD PTR [rbp-0x18]
  404794:	mov    rdx,QWORD PTR [rbp-0x20]
  404798:	mov    ecx,0x5
  40479d:	call   40c510 <flatcc_json_parser_set_error@@Base>
  4047a2:	mov    QWORD PTR [rbp-0x8],rax
  4047a6:	jmp    404882 <test@@Base+0x16a2>
  4047ab:	jmp    40487a <test@@Base+0x169a>
  4047b0:	jmp    4047b5 <test@@Base+0x15d5>
  4047b5:	xor    eax,eax
  4047b7:	mov    cl,al
  4047b9:	mov    rdx,QWORD PTR [rbp-0x18]
  4047bd:	cmp    rdx,QWORD PTR [rbp-0x20]
  4047c1:	mov    BYTE PTR [rbp-0x24],cl
  4047c4:	je     4047da <test@@Base+0x15fa>
  4047ca:	mov    rax,QWORD PTR [rbp-0x18]
  4047ce:	movsx  ecx,BYTE PTR [rax]
  4047d1:	cmp    ecx,0x22
  4047d4:	setne  dl
  4047d7:	mov    BYTE PTR [rbp-0x24],dl
  4047da:	mov    al,BYTE PTR [rbp-0x24]
  4047dd:	test   al,0x1
  4047df:	jne    4047ea <test@@Base+0x160a>
  4047e5:	jmp    404831 <test@@Base+0x1651>
  4047ea:	mov    rax,QWORD PTR [rbp-0x18]
  4047ee:	movsx  ecx,BYTE PTR [rax]
  4047f1:	cmp    ecx,0x5c
  4047f4:	jne    404820 <test@@Base+0x1640>
  4047fa:	mov    rax,QWORD PTR [rbp-0x20]
  4047fe:	mov    rcx,QWORD PTR [rbp-0x18]
  404802:	sub    rax,rcx
  404805:	cmp    rax,0x2
  404809:	jge    404814 <test@@Base+0x1634>
  40480f:	jmp    404831 <test@@Base+0x1651>
  404814:	mov    rax,QWORD PTR [rbp-0x18]
  404818:	add    rax,0x1
  40481c:	mov    QWORD PTR [rbp-0x18],rax
  404820:	mov    rax,QWORD PTR [rbp-0x18]
  404824:	add    rax,0x1
  404828:	mov    QWORD PTR [rbp-0x18],rax
  40482c:	jmp    4047b5 <test@@Base+0x15d5>
  404831:	mov    rax,QWORD PTR [rbp-0x18]
  404835:	cmp    rax,QWORD PTR [rbp-0x20]
  404839:	je     40484f <test@@Base+0x166f>
  40483f:	mov    rax,QWORD PTR [rbp-0x18]
  404843:	movsx  ecx,BYTE PTR [rax]
  404846:	cmp    ecx,0x22
  404849:	je     40486e <test@@Base+0x168e>
  40484f:	mov    rdi,QWORD PTR [rbp-0x10]
  404853:	mov    rsi,QWORD PTR [rbp-0x18]
  404857:	mov    rdx,QWORD PTR [rbp-0x20]
  40485b:	mov    ecx,0x14
  404860:	call   40c510 <flatcc_json_parser_set_error@@Base>
  404865:	mov    QWORD PTR [rbp-0x8],rax
  404869:	jmp    404882 <test@@Base+0x16a2>
  40486e:	mov    rax,QWORD PTR [rbp-0x18]
  404872:	add    rax,0x1
  404876:	mov    QWORD PTR [rbp-0x18],rax
  40487a:	mov    rax,QWORD PTR [rbp-0x18]
  40487e:	mov    QWORD PTR [rbp-0x8],rax
  404882:	mov    rax,QWORD PTR [rbp-0x8]
  404886:	add    rsp,0x30
  40488a:	pop    rbp
  40488b:	ret    
  40488c:	nop    DWORD PTR [rax+0x0]
  404890:	push   rbp
  404891:	mov    rbp,rsp
  404894:	sub    rsp,0x40
  404898:	mov    QWORD PTR [rbp-0x10],rdi
  40489c:	mov    QWORD PTR [rbp-0x18],rsi
  4048a0:	mov    QWORD PTR [rbp-0x20],rdx
  4048a4:	mov    QWORD PTR [rbp-0x28],rcx
  4048a8:	mov    QWORD PTR [rbp-0x30],0x0
  4048b0:	mov    DWORD PTR [rbp-0x34],0x0
  4048b7:	mov    rcx,QWORD PTR [rbp-0x18]
  4048bb:	mov    QWORD PTR [rbp-0x40],rcx
  4048bf:	mov    rcx,QWORD PTR [rbp-0x28]
  4048c3:	mov    BYTE PTR [rcx],0x0
  4048c6:	mov    rcx,QWORD PTR [rbp-0x18]
  4048ca:	cmp    rcx,QWORD PTR [rbp-0x20]
  4048ce:	jne    4048e1 <test@@Base+0x1701>
  4048d4:	mov    rax,QWORD PTR [rbp-0x18]
  4048d8:	mov    QWORD PTR [rbp-0x8],rax
  4048dc:	jmp    404939 <test@@Base+0x1759>
  4048e1:	mov    rdi,QWORD PTR [rbp-0x10]
  4048e5:	mov    rsi,QWORD PTR [rbp-0x18]
  4048e9:	mov    rdx,QWORD PTR [rbp-0x20]
  4048ed:	lea    rcx,[rbp-0x34]
  4048f1:	lea    r8,[rbp-0x30]
  4048f5:	call   40ea60 <flatcc_json_parser_integer@@Base>
  4048fa:	mov    QWORD PTR [rbp-0x18],rax
  4048fe:	mov    rax,QWORD PTR [rbp-0x18]
  404902:	cmp    rax,QWORD PTR [rbp-0x40]
  404906:	je     404931 <test@@Base+0x1751>
  40490c:	mov    rdi,QWORD PTR [rbp-0x10]
  404910:	mov    rsi,QWORD PTR [rbp-0x18]
  404914:	mov    rdx,QWORD PTR [rbp-0x20]
  404918:	mov    ecx,DWORD PTR [rbp-0x34]
  40491b:	mov    r8,QWORD PTR [rbp-0x30]
  40491f:	mov    r9,QWORD PTR [rbp-0x28]
  404923:	call   404d50 <main@@Base+0x1a0>
  404928:	mov    QWORD PTR [rbp-0x8],rax
  40492c:	jmp    404939 <test@@Base+0x1759>
  404931:	mov    rax,QWORD PTR [rbp-0x18]
  404935:	mov    QWORD PTR [rbp-0x8],rax
  404939:	mov    rax,QWORD PTR [rbp-0x8]
  40493d:	add    rsp,0x40
  404941:	pop    rbp
  404942:	ret    
  404943:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40494d:	nop    DWORD PTR [rax]
  404950:	push   rbp
  404951:	mov    rbp,rsp
  404954:	sub    rsp,0x40
  404958:	mov    QWORD PTR [rbp-0x10],rdi
  40495c:	mov    QWORD PTR [rbp-0x18],rsi
  404960:	mov    QWORD PTR [rbp-0x20],rdx
  404964:	mov    QWORD PTR [rbp-0x28],rcx
  404968:	mov    QWORD PTR [rbp-0x30],0x0
  404970:	mov    DWORD PTR [rbp-0x34],0x0
  404977:	mov    rcx,QWORD PTR [rbp-0x18]
  40497b:	mov    QWORD PTR [rbp-0x40],rcx
  40497f:	mov    rcx,QWORD PTR [rbp-0x28]
  404983:	mov    QWORD PTR [rcx],0x0
  40498a:	mov    rcx,QWORD PTR [rbp-0x18]
  40498e:	cmp    rcx,QWORD PTR [rbp-0x20]
  404992:	jne    4049a5 <test@@Base+0x17c5>
  404998:	mov    rax,QWORD PTR [rbp-0x18]
  40499c:	mov    QWORD PTR [rbp-0x8],rax
  4049a0:	jmp    4049fd <test@@Base+0x181d>
  4049a5:	mov    rdi,QWORD PTR [rbp-0x10]
  4049a9:	mov    rsi,QWORD PTR [rbp-0x18]
  4049ad:	mov    rdx,QWORD PTR [rbp-0x20]
  4049b1:	lea    rcx,[rbp-0x34]
  4049b5:	lea    r8,[rbp-0x30]
  4049b9:	call   40ea60 <flatcc_json_parser_integer@@Base>
  4049be:	mov    QWORD PTR [rbp-0x18],rax
  4049c2:	mov    rax,QWORD PTR [rbp-0x18]
  4049c6:	cmp    rax,QWORD PTR [rbp-0x40]
  4049ca:	je     4049f5 <test@@Base+0x1815>
  4049d0:	mov    rdi,QWORD PTR [rbp-0x10]
  4049d4:	mov    rsi,QWORD PTR [rbp-0x18]
  4049d8:	mov    rdx,QWORD PTR [rbp-0x20]
  4049dc:	mov    ecx,DWORD PTR [rbp-0x34]
  4049df:	mov    r8,QWORD PTR [rbp-0x30]
  4049e3:	mov    r9,QWORD PTR [rbp-0x28]
  4049e7:	call   404df0 <main@@Base+0x240>
  4049ec:	mov    QWORD PTR [rbp-0x8],rax
  4049f0:	jmp    4049fd <test@@Base+0x181d>
  4049f5:	mov    rax,QWORD PTR [rbp-0x18]
  4049f9:	mov    QWORD PTR [rbp-0x8],rax
  4049fd:	mov    rax,QWORD PTR [rbp-0x8]
  404a01:	add    rsp,0x40
  404a05:	pop    rbp
  404a06:	ret    
  404a07:	nop    WORD PTR [rax+rax*1+0x0]
  404a10:	push   rbp
  404a11:	mov    rbp,rsp
  404a14:	sub    rsp,0x40
  404a18:	mov    QWORD PTR [rbp-0x10],rdi
  404a1c:	mov    QWORD PTR [rbp-0x18],rsi
  404a20:	mov    QWORD PTR [rbp-0x20],rdx
  404a24:	mov    QWORD PTR [rbp-0x28],rcx
  404a28:	mov    QWORD PTR [rbp-0x30],0x0
  404a30:	mov    DWORD PTR [rbp-0x34],0x0
  404a37:	mov    rcx,QWORD PTR [rbp-0x18]
  404a3b:	mov    QWORD PTR [rbp-0x40],rcx
  404a3f:	mov    rcx,QWORD PTR [rbp-0x28]
  404a43:	mov    DWORD PTR [rcx],0x0
  404a49:	mov    rcx,QWORD PTR [rbp-0x18]
  404a4d:	cmp    rcx,QWORD PTR [rbp-0x20]
  404a51:	jne    404a64 <test@@Base+0x1884>
  404a57:	mov    rax,QWORD PTR [rbp-0x18]
  404a5b:	mov    QWORD PTR [rbp-0x8],rax
  404a5f:	jmp    404abc <test@@Base+0x18dc>
  404a64:	mov    rdi,QWORD PTR [rbp-0x10]
  404a68:	mov    rsi,QWORD PTR [rbp-0x18]
  404a6c:	mov    rdx,QWORD PTR [rbp-0x20]
  404a70:	lea    rcx,[rbp-0x34]
  404a74:	lea    r8,[rbp-0x30]
  404a78:	call   40ea60 <flatcc_json_parser_integer@@Base>
  404a7d:	mov    QWORD PTR [rbp-0x18],rax
  404a81:	mov    rax,QWORD PTR [rbp-0x18]
  404a85:	cmp    rax,QWORD PTR [rbp-0x40]
  404a89:	je     404ab4 <test@@Base+0x18d4>
  404a8f:	mov    rdi,QWORD PTR [rbp-0x10]
  404a93:	mov    rsi,QWORD PTR [rbp-0x18]
  404a97:	mov    rdx,QWORD PTR [rbp-0x20]
  404a9b:	mov    ecx,DWORD PTR [rbp-0x34]
  404a9e:	mov    r8,QWORD PTR [rbp-0x30]
  404aa2:	mov    r9,QWORD PTR [rbp-0x28]
  404aa6:	call   404eb0 <main@@Base+0x300>
  404aab:	mov    QWORD PTR [rbp-0x8],rax
  404aaf:	jmp    404abc <test@@Base+0x18dc>
  404ab4:	mov    rax,QWORD PTR [rbp-0x18]
  404ab8:	mov    QWORD PTR [rbp-0x8],rax
  404abc:	mov    rax,QWORD PTR [rbp-0x8]
  404ac0:	add    rsp,0x40
  404ac4:	pop    rbp
  404ac5:	ret    
  404ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ad0:	push   rbp
  404ad1:	mov    rbp,rsp
  404ad4:	sub    rsp,0x20
  404ad8:	mov    QWORD PTR [rbp-0x10],rdi
  404adc:	mov    QWORD PTR [rbp-0x18],rsi
  404ae0:	mov    QWORD PTR [rbp-0x20],rdx
  404ae4:	mov    rdx,QWORD PTR [rbp-0x18]
  404ae8:	cmp    rdx,QWORD PTR [rbp-0x20]
  404aec:	je     404b02 <test@@Base+0x1922>
  404af2:	mov    rax,QWORD PTR [rbp-0x18]
  404af6:	movsx  ecx,BYTE PTR [rax]
  404af9:	cmp    ecx,0x22
  404afc:	je     404b21 <test@@Base+0x1941>
  404b02:	mov    rdi,QWORD PTR [rbp-0x10]
  404b06:	mov    rsi,QWORD PTR [rbp-0x18]
  404b0a:	mov    rdx,QWORD PTR [rbp-0x20]
  404b0e:	mov    ecx,0x10
  404b13:	call   40c510 <flatcc_json_parser_set_error@@Base>
  404b18:	mov    QWORD PTR [rbp-0x8],rax
  404b1c:	jmp    404b31 <test@@Base+0x1951>
  404b21:	mov    rax,QWORD PTR [rbp-0x18]
  404b25:	add    rax,0x1
  404b29:	mov    QWORD PTR [rbp-0x18],rax
  404b2d:	mov    QWORD PTR [rbp-0x8],rax
  404b31:	mov    rax,QWORD PTR [rbp-0x8]
  404b35:	add    rsp,0x20
  404b39:	pop    rbp
  404b3a:	ret    
  404b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  404b40:	push   rbp
  404b41:	mov    rbp,rsp
  404b44:	sub    rsp,0x20
  404b48:	mov    QWORD PTR [rbp-0x10],rdi
  404b4c:	mov    QWORD PTR [rbp-0x18],rsi
  404b50:	mov    QWORD PTR [rbp-0x20],rdx
  404b54:	mov    rdx,QWORD PTR [rbp-0x18]
  404b58:	cmp    rdx,QWORD PTR [rbp-0x20]
  404b5c:	je     404b72 <test@@Base+0x1992>
  404b62:	mov    rax,QWORD PTR [rbp-0x18]
  404b66:	movsx  ecx,BYTE PTR [rax]
  404b69:	cmp    ecx,0x22
  404b6c:	je     404b91 <test@@Base+0x19b1>
  404b72:	mov    rdi,QWORD PTR [rbp-0x10]
  404b76:	mov    rsi,QWORD PTR [rbp-0x18]
  404b7a:	mov    rdx,QWORD PTR [rbp-0x20]
  404b7e:	mov    ecx,0x14
  404b83:	call   40c510 <flatcc_json_parser_set_error@@Base>
  404b88:	mov    QWORD PTR [rbp-0x8],rax
  404b8c:	jmp    404ba1 <test@@Base+0x19c1>
  404b91:	mov    rax,QWORD PTR [rbp-0x18]
  404b95:	add    rax,0x1
  404b99:	mov    QWORD PTR [rbp-0x18],rax
  404b9d:	mov    QWORD PTR [rbp-0x8],rax
  404ba1:	mov    rax,QWORD PTR [rbp-0x8]
  404ba5:	add    rsp,0x20
  404ba9:	pop    rbp
  404baa:	ret    
  404bab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404bb0 <main@@Base>:
  404bb0:	push   rbp
  404bb1:	mov    rbp,rsp
  404bb4:	sub    rsp,0x1b0
  404bbb:	mov    DWORD PTR [rbp-0x4],0x0
  404bc2:	mov    DWORD PTR [rbp-0x8],0xffffffff
  404bc9:	lea    rdi,[rbp-0x190]
  404bd0:	call   405240 <flatcc_builder_init@@Base>
  404bd5:	lea    rdi,[rip+0xd464]        # 412040 <g_data@@Base>
  404bdc:	mov    rcx,rdi
  404bdf:	add    rcx,0x285
  404be6:	lea    rdx,[rbp-0x190]
  404bed:	mov    QWORD PTR [rbp-0x198],rdi
  404bf4:	mov    rdi,rdx
  404bf7:	mov    rsi,QWORD PTR [rbp-0x198]
  404bfe:	mov    rdx,rcx
  404c01:	lea    rcx,[rbp-0x8]
  404c05:	mov    DWORD PTR [rbp-0x19c],eax
  404c0b:	call   4031e0 <test@@Base>
  404c10:	lea    rdi,[rbp-0x190]
  404c17:	mov    QWORD PTR [rbp-0x1a8],rax
  404c1e:	call   405500 <flatcc_builder_clear@@Base>
  404c23:	mov    eax,DWORD PTR [rbp-0x8]
  404c26:	add    rsp,0x1b0
  404c2d:	pop    rbp
  404c2e:	ret    
  404c2f:	nop
  404c30:	push   rbp
  404c31:	mov    rbp,rsp
  404c34:	mov    QWORD PTR [rbp-0x8],rdi
  404c38:	mov    QWORD PTR [rbp-0x10],rsi
  404c3c:	mov    QWORD PTR [rbp-0x18],0x0
  404c44:	mov    rsi,QWORD PTR [rbp-0x10]
  404c48:	mov    rdi,QWORD PTR [rbp-0x8]
  404c4c:	sub    rsi,rdi
  404c4f:	mov    QWORD PTR [rbp-0x20],rsi
  404c53:	cmp    QWORD PTR [rbp-0x20],0x8
  404c58:	jbe    404c66 <main@@Base+0xb6>
  404c5e:	mov    QWORD PTR [rbp-0x20],0x8
  404c66:	mov    rax,QWORD PTR [rbp-0x20]
  404c6a:	mov    rcx,rax
  404c6d:	sub    rcx,0x8
  404c71:	mov    QWORD PTR [rbp-0x28],rax
  404c75:	mov    QWORD PTR [rbp-0x30],rcx
  404c79:	ja     404d3f <main@@Base+0x18f>
  404c7f:	lea    rax,[rip+0xd38a]        # 412010 <_IO_stdin_used@@Base+0x10>
  404c86:	mov    rcx,QWORD PTR [rbp-0x28]
  404c8a:	movsxd rdx,DWORD PTR [rax+rcx*4]
  404c8e:	add    rdx,rax
  404c91:	jmp    rdx
  404c93:	mov    rax,QWORD PTR [rbp-0x8]
  404c97:	movsx  rax,BYTE PTR [rax+0x7]
  404c9c:	shl    rax,0x0
  404ca0:	or     rax,QWORD PTR [rbp-0x18]
  404ca4:	mov    QWORD PTR [rbp-0x18],rax
  404ca8:	mov    rax,QWORD PTR [rbp-0x8]
  404cac:	movsx  rax,BYTE PTR [rax+0x6]
  404cb1:	shl    rax,0x8
  404cb5:	or     rax,QWORD PTR [rbp-0x18]
  404cb9:	mov    QWORD PTR [rbp-0x18],rax
  404cbd:	mov    rax,QWORD PTR [rbp-0x8]
  404cc1:	movsx  rax,BYTE PTR [rax+0x5]
  404cc6:	shl    rax,0x10
  404cca:	or     rax,QWORD PTR [rbp-0x18]
  404cce:	mov    QWORD PTR [rbp-0x18],rax
  404cd2:	mov    rax,QWORD PTR [rbp-0x8]
  404cd6:	movsx  rax,BYTE PTR [rax+0x4]
  404cdb:	shl    rax,0x18
  404cdf:	or     rax,QWORD PTR [rbp-0x18]
  404ce3:	mov    QWORD PTR [rbp-0x18],rax
  404ce7:	mov    rax,QWORD PTR [rbp-0x8]
  404ceb:	movsx  rax,BYTE PTR [rax+0x3]
  404cf0:	shl    rax,0x20
  404cf4:	or     rax,QWORD PTR [rbp-0x18]
  404cf8:	mov    QWORD PTR [rbp-0x18],rax
  404cfc:	mov    rax,QWORD PTR [rbp-0x8]
  404d00:	movsx  rax,BYTE PTR [rax+0x2]
  404d05:	shl    rax,0x28
  404d09:	or     rax,QWORD PTR [rbp-0x18]
  404d0d:	mov    QWORD PTR [rbp-0x18],rax
  404d11:	mov    rax,QWORD PTR [rbp-0x8]
  404d15:	movsx  rax,BYTE PTR [rax+0x1]
  404d1a:	shl    rax,0x30
  404d1e:	or     rax,QWORD PTR [rbp-0x18]
  404d22:	mov    QWORD PTR [rbp-0x18],rax
  404d26:	mov    rax,QWORD PTR [rbp-0x8]
  404d2a:	movsx  rax,BYTE PTR [rax]
  404d2e:	shl    rax,0x38
  404d32:	or     rax,QWORD PTR [rbp-0x18]
  404d36:	mov    QWORD PTR [rbp-0x18],rax
  404d3a:	jmp    404d3f <main@@Base+0x18f>
  404d3f:	mov    rax,QWORD PTR [rbp-0x18]
  404d43:	pop    rbp
  404d44:	ret    
  404d45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d4f:	nop
  404d50:	push   rbp
  404d51:	mov    rbp,rsp
  404d54:	sub    rsp,0x40
  404d58:	mov    QWORD PTR [rbp-0x10],rdi
  404d5c:	mov    QWORD PTR [rbp-0x18],rsi
  404d60:	mov    QWORD PTR [rbp-0x20],rdx
  404d64:	mov    DWORD PTR [rbp-0x24],ecx
  404d67:	mov    QWORD PTR [rbp-0x30],r8
  404d6b:	mov    QWORD PTR [rbp-0x38],r9
  404d6f:	cmp    DWORD PTR [rbp-0x24],0x0
  404d73:	je     404d98 <main@@Base+0x1e8>
  404d79:	mov    rdi,QWORD PTR [rbp-0x10]
  404d7d:	mov    rsi,QWORD PTR [rbp-0x18]
  404d81:	mov    rdx,QWORD PTR [rbp-0x20]
  404d85:	mov    ecx,0x8
  404d8a:	call   40c510 <flatcc_json_parser_set_error@@Base>
  404d8f:	mov    QWORD PTR [rbp-0x8],rax
  404d93:	jmp    404dd9 <main@@Base+0x229>
  404d98:	cmp    QWORD PTR [rbp-0x30],0xff
  404da0:	jbe    404dc5 <main@@Base+0x215>
  404da6:	mov    rdi,QWORD PTR [rbp-0x10]
  404daa:	mov    rsi,QWORD PTR [rbp-0x18]
  404dae:	mov    rdx,QWORD PTR [rbp-0x20]
  404db2:	mov    ecx,0x7
  404db7:	call   40c510 <flatcc_json_parser_set_error@@Base>
  404dbc:	mov    QWORD PTR [rbp-0x8],rax
  404dc0:	jmp    404dd9 <main@@Base+0x229>
  404dc5:	mov    rax,QWORD PTR [rbp-0x30]
  404dc9:	mov    cl,al
  404dcb:	mov    rax,QWORD PTR [rbp-0x38]
  404dcf:	mov    BYTE PTR [rax],cl
  404dd1:	mov    rax,QWORD PTR [rbp-0x18]
  404dd5:	mov    QWORD PTR [rbp-0x8],rax
  404dd9:	mov    rax,QWORD PTR [rbp-0x8]
  404ddd:	add    rsp,0x40
  404de1:	pop    rbp
  404de2:	ret    
  404de3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ded:	nop    DWORD PTR [rax]
  404df0:	push   rbp
  404df1:	mov    rbp,rsp
  404df4:	sub    rsp,0x40
  404df8:	mov    QWORD PTR [rbp-0x10],rdi
  404dfc:	mov    QWORD PTR [rbp-0x18],rsi
  404e00:	mov    QWORD PTR [rbp-0x20],rdx
  404e04:	mov    DWORD PTR [rbp-0x24],ecx
  404e07:	mov    QWORD PTR [rbp-0x30],r8
  404e0b:	mov    QWORD PTR [rbp-0x38],r9
  404e0f:	cmp    DWORD PTR [rbp-0x24],0x0
  404e13:	je     404e60 <main@@Base+0x2b0>
  404e19:	movabs rax,0x8000000000000000
  404e23:	cmp    QWORD PTR [rbp-0x30],rax
  404e27:	jbe    404e4c <main@@Base+0x29c>
  404e2d:	mov    rdi,QWORD PTR [rbp-0x10]
  404e31:	mov    rsi,QWORD PTR [rbp-0x18]
  404e35:	mov    rdx,QWORD PTR [rbp-0x20]
  404e39:	mov    ecx,0x8
  404e3e:	call   40c510 <flatcc_json_parser_set_error@@Base>
  404e43:	mov    QWORD PTR [rbp-0x8],rax
  404e47:	jmp    404ea6 <main@@Base+0x2f6>
  404e4c:	xor    eax,eax
  404e4e:	mov    ecx,eax
  404e50:	sub    rcx,QWORD PTR [rbp-0x30]
  404e54:	mov    rdx,QWORD PTR [rbp-0x38]
  404e58:	mov    QWORD PTR [rdx],rcx
  404e5b:	jmp    404e9e <main@@Base+0x2ee>
  404e60:	movabs rax,0x7fffffffffffffff
  404e6a:	cmp    QWORD PTR [rbp-0x30],rax
  404e6e:	jbe    404e93 <main@@Base+0x2e3>
  404e74:	mov    rdi,QWORD PTR [rbp-0x10]
  404e78:	mov    rsi,QWORD PTR [rbp-0x18]
  404e7c:	mov    rdx,QWORD PTR [rbp-0x20]
  404e80:	mov    ecx,0x7
  404e85:	call   40c510 <flatcc_json_parser_set_error@@Base>
  404e8a:	mov    QWORD PTR [rbp-0x8],rax
  404e8e:	jmp    404ea6 <main@@Base+0x2f6>
  404e93:	mov    rax,QWORD PTR [rbp-0x30]
  404e97:	mov    rcx,QWORD PTR [rbp-0x38]
  404e9b:	mov    QWORD PTR [rcx],rax
  404e9e:	mov    rax,QWORD PTR [rbp-0x18]
  404ea2:	mov    QWORD PTR [rbp-0x8],rax
  404ea6:	mov    rax,QWORD PTR [rbp-0x8]
  404eaa:	add    rsp,0x40
  404eae:	pop    rbp
  404eaf:	ret    
  404eb0:	push   rbp
  404eb1:	mov    rbp,rsp
  404eb4:	sub    rsp,0x40
  404eb8:	mov    QWORD PTR [rbp-0x10],rdi
  404ebc:	mov    QWORD PTR [rbp-0x18],rsi
  404ec0:	mov    QWORD PTR [rbp-0x20],rdx
  404ec4:	mov    DWORD PTR [rbp-0x24],ecx
  404ec7:	mov    QWORD PTR [rbp-0x30],r8
  404ecb:	mov    QWORD PTR [rbp-0x38],r9
  404ecf:	cmp    DWORD PTR [rbp-0x24],0x0
  404ed3:	je     404ef8 <main@@Base+0x348>
  404ed9:	mov    rdi,QWORD PTR [rbp-0x10]
  404edd:	mov    rsi,QWORD PTR [rbp-0x18]
  404ee1:	mov    rdx,QWORD PTR [rbp-0x20]
  404ee5:	mov    ecx,0x8
  404eea:	call   40c510 <flatcc_json_parser_set_error@@Base>
  404eef:	mov    QWORD PTR [rbp-0x8],rax
  404ef3:	jmp    404f3c <main@@Base+0x38c>
  404ef8:	mov    eax,0xffffffff
  404efd:	mov    ecx,eax
  404eff:	cmp    QWORD PTR [rbp-0x30],rcx
  404f03:	jbe    404f28 <main@@Base+0x378>
  404f09:	mov    rdi,QWORD PTR [rbp-0x10]
  404f0d:	mov    rsi,QWORD PTR [rbp-0x18]
  404f11:	mov    rdx,QWORD PTR [rbp-0x20]
  404f15:	mov    ecx,0x7
  404f1a:	call   40c510 <flatcc_json_parser_set_error@@Base>
  404f1f:	mov    QWORD PTR [rbp-0x8],rax
  404f23:	jmp    404f3c <main@@Base+0x38c>
  404f28:	mov    rax,QWORD PTR [rbp-0x30]
  404f2c:	mov    ecx,eax
  404f2e:	mov    rax,QWORD PTR [rbp-0x38]
  404f32:	mov    DWORD PTR [rax],ecx
  404f34:	mov    rax,QWORD PTR [rbp-0x18]
  404f38:	mov    QWORD PTR [rbp-0x8],rax
  404f3c:	mov    rax,QWORD PTR [rbp-0x8]
  404f40:	add    rsp,0x40
  404f44:	pop    rbp
  404f45:	ret    
  404f46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404f50 <flatcc_builder_default_alloc@@Base>:
  404f50:	push   rbp
  404f51:	mov    rbp,rsp
  404f54:	sub    rsp,0x50
  404f58:	mov    QWORD PTR [rbp-0x10],rdi
  404f5c:	mov    QWORD PTR [rbp-0x18],rsi
  404f60:	mov    QWORD PTR [rbp-0x20],rdx
  404f64:	mov    DWORD PTR [rbp-0x24],ecx
  404f67:	mov    DWORD PTR [rbp-0x28],r8d
  404f6b:	cmp    QWORD PTR [rbp-0x20],0x0
  404f70:	jne    404fb3 <flatcc_builder_default_alloc@@Base+0x63>
  404f76:	mov    rax,QWORD PTR [rbp-0x18]
  404f7a:	cmp    QWORD PTR [rax],0x0
  404f7e:	je     404fa7 <flatcc_builder_default_alloc@@Base+0x57>
  404f84:	mov    rax,QWORD PTR [rbp-0x18]
  404f88:	mov    rdi,QWORD PTR [rax]
  404f8b:	call   403030 <free@plt>
  404f90:	mov    rax,QWORD PTR [rbp-0x18]
  404f94:	mov    QWORD PTR [rax],0x0
  404f9b:	mov    rax,QWORD PTR [rbp-0x18]
  404f9f:	mov    QWORD PTR [rax+0x8],0x0
  404fa7:	mov    DWORD PTR [rbp-0x4],0x0
  404fae:	jmp    4050fc <flatcc_builder_default_alloc@@Base+0x1ac>
  404fb3:	mov    eax,DWORD PTR [rbp-0x28]
  404fb6:	add    eax,0xffffffff
  404fb9:	mov    ecx,eax
  404fbb:	sub    eax,0x6
  404fbe:	mov    QWORD PTR [rbp-0x40],rcx
  404fc2:	mov    DWORD PTR [rbp-0x44],eax
  404fc5:	ja     405013 <flatcc_builder_default_alloc@@Base+0xc3>
  404fcb:	lea    rax,[rip+0xd37e]        # 412350 <g_data@@Base+0x310>
  404fd2:	mov    rcx,QWORD PTR [rbp-0x40]
  404fd6:	movsxd rdx,DWORD PTR [rax+rcx*4]
  404fda:	add    rdx,rax
  404fdd:	jmp    rdx
  404fdf:	mov    QWORD PTR [rbp-0x38],0x100
  404fe7:	jmp    40501b <flatcc_builder_default_alloc@@Base+0xcb>
  404fec:	mov    rax,QWORD PTR [rbp-0x20]
  404ff0:	mov    QWORD PTR [rbp-0x38],rax
  404ff4:	jmp    40501b <flatcc_builder_default_alloc@@Base+0xcb>
  404ff9:	mov    QWORD PTR [rbp-0x38],0x120
  405001:	jmp    40501b <flatcc_builder_default_alloc@@Base+0xcb>
  405006:	mov    QWORD PTR [rbp-0x38],0x40
  40500e:	jmp    40501b <flatcc_builder_default_alloc@@Base+0xcb>
  405013:	mov    QWORD PTR [rbp-0x38],0x20
  40501b:	jmp    405020 <flatcc_builder_default_alloc@@Base+0xd0>
  405020:	mov    rax,QWORD PTR [rbp-0x38]
  405024:	cmp    rax,QWORD PTR [rbp-0x20]
  405028:	jae    40503f <flatcc_builder_default_alloc@@Base+0xef>
  40502e:	mov    rax,QWORD PTR [rbp-0x38]
  405032:	shl    rax,0x1
  405036:	mov    QWORD PTR [rbp-0x38],rax
  40503a:	jmp    405020 <flatcc_builder_default_alloc@@Base+0xd0>
  40503f:	mov    rax,QWORD PTR [rbp-0x20]
  405043:	mov    rcx,QWORD PTR [rbp-0x18]
  405047:	cmp    rax,QWORD PTR [rcx+0x8]
  40504b:	ja     405073 <flatcc_builder_default_alloc@@Base+0x123>
  405051:	mov    rax,QWORD PTR [rbp-0x18]
  405055:	mov    rax,QWORD PTR [rax+0x8]
  405059:	shr    rax,0x1
  40505d:	cmp    rax,QWORD PTR [rbp-0x38]
  405061:	jb     405073 <flatcc_builder_default_alloc@@Base+0x123>
  405067:	mov    DWORD PTR [rbp-0x4],0x0
  40506e:	jmp    4050fc <flatcc_builder_default_alloc@@Base+0x1ac>
  405073:	mov    rax,QWORD PTR [rbp-0x18]
  405077:	mov    rdi,QWORD PTR [rax]
  40507a:	mov    rsi,QWORD PTR [rbp-0x38]
  40507e:	call   4030d0 <realloc@plt>
  405083:	mov    QWORD PTR [rbp-0x30],rax
  405087:	cmp    rax,0x0
  40508b:	jne    40509d <flatcc_builder_default_alloc@@Base+0x14d>
  405091:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405098:	jmp    4050fc <flatcc_builder_default_alloc@@Base+0x1ac>
  40509d:	cmp    DWORD PTR [rbp-0x24],0x0
  4050a1:	je     4050de <flatcc_builder_default_alloc@@Base+0x18e>
  4050a7:	mov    rax,QWORD PTR [rbp-0x18]
  4050ab:	mov    rax,QWORD PTR [rax+0x8]
  4050af:	cmp    rax,QWORD PTR [rbp-0x38]
  4050b3:	jae    4050de <flatcc_builder_default_alloc@@Base+0x18e>
  4050b9:	xor    esi,esi
  4050bb:	mov    rax,QWORD PTR [rbp-0x30]
  4050bf:	mov    rcx,QWORD PTR [rbp-0x18]
  4050c3:	add    rax,QWORD PTR [rcx+0x8]
  4050c7:	mov    rcx,QWORD PTR [rbp-0x38]
  4050cb:	mov    rdx,QWORD PTR [rbp-0x18]
  4050cf:	sub    rcx,QWORD PTR [rdx+0x8]
  4050d3:	mov    rdi,rax
  4050d6:	mov    rdx,rcx
  4050d9:	call   403070 <memset@plt>
  4050de:	mov    rax,QWORD PTR [rbp-0x30]
  4050e2:	mov    rcx,QWORD PTR [rbp-0x18]
  4050e6:	mov    QWORD PTR [rcx],rax
  4050e9:	mov    rax,QWORD PTR [rbp-0x38]
  4050ed:	mov    rcx,QWORD PTR [rbp-0x18]
  4050f1:	mov    QWORD PTR [rcx+0x8],rax
  4050f5:	mov    DWORD PTR [rbp-0x4],0x0
  4050fc:	mov    eax,DWORD PTR [rbp-0x4]
  4050ff:	add    rsp,0x50
  405103:	pop    rbp
  405104:	ret    
  405105:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40510f:	nop

0000000000405110 <flatcc_builder_flush_vtable_cache@@Base>:
  405110:	push   rbp
  405111:	mov    rbp,rsp
  405114:	sub    rsp,0x10
  405118:	mov    QWORD PTR [rbp-0x8],rdi
  40511c:	mov    rdi,QWORD PTR [rbp-0x8]
  405120:	add    rdi,0x58
  405124:	add    rdi,0x50
  405128:	mov    QWORD PTR [rbp-0x10],rdi
  40512c:	mov    rdi,QWORD PTR [rbp-0x8]
  405130:	cmp    QWORD PTR [rdi+0xd8],0x0
  405138:	jne    405143 <flatcc_builder_flush_vtable_cache@@Base+0x33>
  40513e:	jmp    405175 <flatcc_builder_flush_vtable_cache@@Base+0x65>
  405143:	xor    esi,esi
  405145:	mov    rax,QWORD PTR [rbp-0x10]
  405149:	mov    rdi,QWORD PTR [rax]
  40514c:	mov    rax,QWORD PTR [rbp-0x10]
  405150:	mov    rdx,QWORD PTR [rax+0x8]
  405154:	call   403070 <memset@plt>
  405159:	mov    rax,QWORD PTR [rbp-0x8]
  40515d:	mov    DWORD PTR [rax+0xe4],0x10
  405167:	mov    rax,QWORD PTR [rbp-0x8]
  40516b:	mov    DWORD PTR [rax+0xe0],0x0
  405175:	add    rsp,0x10
  405179:	pop    rbp
  40517a:	ret    
  40517b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405180 <flatcc_builder_custom_init@@Base>:
  405180:	push   rbp
  405181:	mov    rbp,rsp
  405184:	sub    rsp,0x30
  405188:	xor    eax,eax
  40518a:	mov    r9d,0x188
  405190:	mov    r10d,r9d
  405193:	mov    QWORD PTR [rbp-0x8],rdi
  405197:	mov    QWORD PTR [rbp-0x10],rsi
  40519b:	mov    QWORD PTR [rbp-0x18],rdx
  40519f:	mov    QWORD PTR [rbp-0x20],rcx
  4051a3:	mov    QWORD PTR [rbp-0x28],r8
  4051a7:	mov    rcx,QWORD PTR [rbp-0x8]
  4051ab:	mov    rdi,rcx
  4051ae:	mov    esi,eax
  4051b0:	mov    rdx,r10
  4051b3:	call   403070 <memset@plt>
  4051b8:	cmp    QWORD PTR [rbp-0x10],0x0
  4051bd:	jne    4051ea <flatcc_builder_custom_init@@Base+0x6a>
  4051c3:	lea    rax,[rip+0x5e96]        # 40b060 <flatcc_emitter@@Base>
  4051ca:	mov    rcx,QWORD PTR [rbp-0x8]
  4051ce:	mov    DWORD PTR [rcx+0x128],0x1
  4051d8:	mov    QWORD PTR [rbp-0x10],rax
  4051dc:	mov    rax,QWORD PTR [rbp-0x8]
  4051e0:	add    rax,0x130
  4051e6:	mov    QWORD PTR [rbp-0x18],rax
  4051ea:	cmp    QWORD PTR [rbp-0x20],0x0
  4051ef:	jne    405200 <flatcc_builder_custom_init@@Base+0x80>
  4051f5:	lea    rax,[rip+0xfffffffffffffd54]        # 404f50 <flatcc_builder_default_alloc@@Base>
  4051fc:	mov    QWORD PTR [rbp-0x20],rax
  405200:	xor    eax,eax
  405202:	mov    rcx,QWORD PTR [rbp-0x28]
  405206:	mov    rdx,QWORD PTR [rbp-0x8]
  40520a:	mov    QWORD PTR [rdx+0x40],rcx
  40520e:	mov    rcx,QWORD PTR [rbp-0x20]
  405212:	mov    rdx,QWORD PTR [rbp-0x8]
  405216:	mov    QWORD PTR [rdx+0x50],rcx
  40521a:	mov    rcx,QWORD PTR [rbp-0x18]
  40521e:	mov    rdx,QWORD PTR [rbp-0x8]
  405222:	mov    QWORD PTR [rdx+0x38],rcx
  405226:	mov    rcx,QWORD PTR [rbp-0x10]
  40522a:	mov    rdx,QWORD PTR [rbp-0x8]
  40522e:	mov    QWORD PTR [rdx+0x48],rcx
  405232:	add    rsp,0x30
  405236:	pop    rbp
  405237:	ret    
  405238:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405240 <flatcc_builder_init@@Base>:
  405240:	push   rbp
  405241:	mov    rbp,rsp
  405244:	sub    rsp,0x10
  405248:	xor    eax,eax
  40524a:	mov    ecx,eax
  40524c:	mov    QWORD PTR [rbp-0x8],rdi
  405250:	mov    rdi,QWORD PTR [rbp-0x8]
  405254:	mov    rsi,rcx
  405257:	mov    rdx,rcx
  40525a:	mov    QWORD PTR [rbp-0x10],rcx
  40525e:	mov    r8,QWORD PTR [rbp-0x10]
  405262:	call   405180 <flatcc_builder_custom_init@@Base>
  405267:	add    rsp,0x10
  40526b:	pop    rbp
  40526c:	ret    
  40526d:	nop    DWORD PTR [rax]

0000000000405270 <flatcc_builder_custom_reset@@Base>:
  405270:	push   rbp
  405271:	mov    rbp,rsp
  405274:	sub    rsp,0x30
  405278:	mov    QWORD PTR [rbp-0x10],rdi
  40527c:	mov    DWORD PTR [rbp-0x14],esi
  40527f:	mov    DWORD PTR [rbp-0x18],edx
  405282:	mov    DWORD PTR [rbp-0x24],0x0
  405289:	cmp    DWORD PTR [rbp-0x24],0x8
  40528d:	jge    405378 <flatcc_builder_custom_reset@@Base+0x108>
  405293:	mov    rax,QWORD PTR [rbp-0x10]
  405297:	add    rax,0x58
  40529b:	movsxd rcx,DWORD PTR [rbp-0x24]
  40529f:	shl    rcx,0x4
  4052a3:	add    rax,rcx
  4052a6:	mov    QWORD PTR [rbp-0x20],rax
  4052aa:	mov    rax,QWORD PTR [rbp-0x20]
  4052ae:	cmp    QWORD PTR [rax],0x0
  4052b2:	je     40532d <flatcc_builder_custom_reset@@Base+0xbd>
  4052b8:	cmp    DWORD PTR [rbp-0x24],0x5
  4052bc:	je     405312 <flatcc_builder_custom_reset@@Base+0xa2>
  4052c2:	cmp    DWORD PTR [rbp-0x18],0x0
  4052c6:	je     405312 <flatcc_builder_custom_reset@@Base+0xa2>
  4052cc:	mov    eax,0x1
  4052d1:	mov    edx,eax
  4052d3:	mov    rcx,QWORD PTR [rbp-0x10]
  4052d7:	mov    rcx,QWORD PTR [rcx+0x50]
  4052db:	mov    rsi,QWORD PTR [rbp-0x10]
  4052df:	mov    rdi,QWORD PTR [rsi+0x40]
  4052e3:	mov    rsi,QWORD PTR [rbp-0x20]
  4052e7:	mov    r8d,DWORD PTR [rbp-0x24]
  4052eb:	mov    eax,0x1
  4052f0:	mov    QWORD PTR [rbp-0x30],rcx
  4052f4:	mov    ecx,eax
  4052f6:	mov    r9,QWORD PTR [rbp-0x30]
  4052fa:	call   r9
  4052fd:	cmp    eax,0x0
  405300:	je     405312 <flatcc_builder_custom_reset@@Base+0xa2>
  405306:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40530d:	jmp    4054b9 <flatcc_builder_custom_reset@@Base+0x249>
  405312:	xor    esi,esi
  405314:	mov    rax,QWORD PTR [rbp-0x20]
  405318:	mov    rdi,QWORD PTR [rax]
  40531b:	mov    rax,QWORD PTR [rbp-0x20]
  40531f:	mov    rdx,QWORD PTR [rax+0x8]
  405323:	call   403070 <memset@plt>
  405328:	jmp    405365 <flatcc_builder_custom_reset@@Base+0xf5>
  40532d:	mov    rax,QWORD PTR [rbp-0x20]
  405331:	cmp    QWORD PTR [rax+0x8],0x0
  405336:	jne    405341 <flatcc_builder_custom_reset@@Base+0xd1>
  40533c:	jmp    405360 <flatcc_builder_custom_reset@@Base+0xf0>
  405341:	lea    rdi,[rip+0xd228]        # 412570 <flatcc_builder_padding_base@@Base+0x200>
  405348:	lea    rsi,[rip+0xd233]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40534f:	mov    edx,0x1b2
  405354:	lea    rcx,[rip+0xd287]        # 4125e2 <flatcc_builder_padding_base@@Base+0x272>
  40535b:	call   403060 <__assert_fail@plt>
  405360:	jmp    405365 <flatcc_builder_custom_reset@@Base+0xf5>
  405365:	jmp    40536a <flatcc_builder_custom_reset@@Base+0xfa>
  40536a:	mov    eax,DWORD PTR [rbp-0x24]
  40536d:	add    eax,0x1
  405370:	mov    DWORD PTR [rbp-0x24],eax
  405373:	jmp    405289 <flatcc_builder_custom_reset@@Base+0x19>
  405378:	mov    rax,QWORD PTR [rbp-0x10]
  40537c:	mov    DWORD PTR [rax+0xe0],0x0
  405386:	mov    rax,QWORD PTR [rbp-0x10]
  40538a:	cmp    DWORD PTR [rax+0xe4],0x0
  405391:	jbe    4053a5 <flatcc_builder_custom_reset@@Base+0x135>
  405397:	mov    rax,QWORD PTR [rbp-0x10]
  40539b:	mov    DWORD PTR [rax+0xe4],0x10
  4053a5:	mov    rax,QWORD PTR [rbp-0x10]
  4053a9:	mov    WORD PTR [rax+0xe8],0x0
  4053b2:	mov    rax,QWORD PTR [rbp-0x10]
  4053b6:	mov    DWORD PTR [rax+0xf0],0x0
  4053c0:	mov    rax,QWORD PTR [rbp-0x10]
  4053c4:	mov    DWORD PTR [rax+0xf4],0x0
  4053ce:	mov    rax,QWORD PTR [rbp-0x10]
  4053d2:	mov    DWORD PTR [rax+0x104],0x0
  4053dc:	mov    rax,QWORD PTR [rbp-0x10]
  4053e0:	mov    DWORD PTR [rax+0x108],0x0
  4053ea:	mov    rax,QWORD PTR [rbp-0x10]
  4053ee:	mov    DWORD PTR [rax+0x20],0x0
  4053f5:	mov    rax,QWORD PTR [rbp-0x10]
  4053f9:	mov    DWORD PTR [rax+0x24],0x0
  405400:	mov    rax,QWORD PTR [rbp-0x10]
  405404:	mov    DWORD PTR [rax+0xfc],0x0
  40540e:	mov    rax,QWORD PTR [rbp-0x10]
  405412:	mov    DWORD PTR [rax+0x100],0x0
  40541c:	mov    rax,QWORD PTR [rbp-0x10]
  405420:	mov    rax,QWORD PTR [rax+0x68]
  405424:	mov    rcx,QWORD PTR [rbp-0x10]
  405428:	mov    QWORD PTR [rcx+0x18],rax
  40542c:	mov    rax,QWORD PTR [rbp-0x10]
  405430:	mov    rax,QWORD PTR [rax+0x88]
  405437:	mov    rcx,QWORD PTR [rbp-0x10]
  40543b:	mov    QWORD PTR [rcx],rax
  40543e:	mov    rax,QWORD PTR [rbp-0x10]
  405442:	mov    rax,QWORD PTR [rax+0x58]
  405446:	mov    rcx,QWORD PTR [rbp-0x10]
  40544a:	mov    QWORD PTR [rcx+0x8],rax
  40544e:	mov    rax,QWORD PTR [rbp-0x10]
  405452:	mov    QWORD PTR [rax+0x30],0x0
  40545a:	cmp    DWORD PTR [rbp-0x14],0x0
  40545e:	je     40548f <flatcc_builder_custom_reset@@Base+0x21f>
  405464:	mov    rax,QWORD PTR [rbp-0x10]
  405468:	mov    QWORD PTR [rax+0x118],0x0
  405473:	mov    rax,QWORD PTR [rbp-0x10]
  405477:	mov    DWORD PTR [rax+0x120],0x0
  405481:	mov    rax,QWORD PTR [rbp-0x10]
  405485:	mov    DWORD PTR [rax+0x124],0x0
  40548f:	mov    rax,QWORD PTR [rbp-0x10]
  405493:	cmp    DWORD PTR [rax+0x128],0x0
  40549a:	je     4054b2 <flatcc_builder_custom_reset@@Base+0x242>
  4054a0:	mov    rax,QWORD PTR [rbp-0x10]
  4054a4:	add    rax,0x130
  4054aa:	mov    rdi,rax
  4054ad:	call   40ae20 <flatcc_emitter_reset@@Base>
  4054b2:	mov    DWORD PTR [rbp-0x4],0x0
  4054b9:	mov    eax,DWORD PTR [rbp-0x4]
  4054bc:	add    rsp,0x30
  4054c0:	pop    rbp
  4054c1:	ret    
  4054c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054cc:	nop    DWORD PTR [rax+0x0]

00000000004054d0 <flatcc_builder_reset@@Base>:
  4054d0:	push   rbp
  4054d1:	mov    rbp,rsp
  4054d4:	sub    rsp,0x10
  4054d8:	xor    eax,eax
  4054da:	mov    QWORD PTR [rbp-0x8],rdi
  4054de:	mov    rdi,QWORD PTR [rbp-0x8]
  4054e2:	mov    esi,eax
  4054e4:	mov    edx,eax
  4054e6:	call   405270 <flatcc_builder_custom_reset@@Base>
  4054eb:	add    rsp,0x10
  4054ef:	pop    rbp
  4054f0:	ret    
  4054f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405500 <flatcc_builder_clear@@Base>:
  405500:	push   rbp
  405501:	mov    rbp,rsp
  405504:	sub    rsp,0x30
  405508:	mov    QWORD PTR [rbp-0x8],rdi
  40550c:	mov    DWORD PTR [rbp-0x14],0x0
  405513:	cmp    DWORD PTR [rbp-0x14],0x8
  405517:	jge    405573 <flatcc_builder_clear@@Base+0x73>
  40551d:	xor    eax,eax
  40551f:	mov    edx,eax
  405521:	xor    ecx,ecx
  405523:	mov    rsi,QWORD PTR [rbp-0x8]
  405527:	add    rsi,0x58
  40552b:	movsxd rdi,DWORD PTR [rbp-0x14]
  40552f:	shl    rdi,0x4
  405533:	add    rsi,rdi
  405536:	mov    QWORD PTR [rbp-0x10],rsi
  40553a:	mov    rsi,QWORD PTR [rbp-0x8]
  40553e:	mov    rsi,QWORD PTR [rsi+0x50]
  405542:	mov    rdi,QWORD PTR [rbp-0x8]
  405546:	mov    rdi,QWORD PTR [rdi+0x40]
  40554a:	mov    r8,QWORD PTR [rbp-0x10]
  40554e:	mov    eax,DWORD PTR [rbp-0x14]
  405551:	mov    QWORD PTR [rbp-0x20],rsi
  405555:	mov    rsi,r8
  405558:	mov    r8d,eax
  40555b:	mov    r9,QWORD PTR [rbp-0x20]
  40555f:	call   r9
  405562:	mov    DWORD PTR [rbp-0x24],eax
  405565:	mov    eax,DWORD PTR [rbp-0x14]
  405568:	add    eax,0x1
  40556b:	mov    DWORD PTR [rbp-0x14],eax
  40556e:	jmp    405513 <flatcc_builder_clear@@Base+0x13>
  405573:	mov    rax,QWORD PTR [rbp-0x8]
  405577:	cmp    DWORD PTR [rax+0x128],0x0
  40557e:	je     405596 <flatcc_builder_clear@@Base+0x96>
  405584:	mov    rax,QWORD PTR [rbp-0x8]
  405588:	add    rax,0x130
  40558e:	mov    rdi,rax
  405591:	call   40afc0 <flatcc_emitter_clear@@Base>
  405596:	xor    esi,esi
  405598:	mov    eax,0x188
  40559d:	mov    edx,eax
  40559f:	mov    rcx,QWORD PTR [rbp-0x8]
  4055a3:	mov    rdi,rcx
  4055a6:	call   403070 <memset@plt>
  4055ab:	add    rsp,0x30
  4055af:	pop    rbp
  4055b0:	ret    
  4055b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4055bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004055c0 <flatcc_builder_enter_user_frame_ptr@@Base>:
  4055c0:	push   rbp
  4055c1:	mov    rbp,rsp
  4055c4:	sub    rsp,0x20
  4055c8:	xor    r8d,r8d
  4055cb:	mov    QWORD PTR [rbp-0x10],rdi
  4055cf:	mov    QWORD PTR [rbp-0x18],rsi
  4055d3:	mov    rsi,QWORD PTR [rbp-0x18]
  4055d7:	add    rsi,0x8
  4055db:	sub    rsi,0x1
  4055df:	and    rsi,0xfffffffffffffff8
  4055e3:	add    rsi,0x8
  4055e7:	mov    QWORD PTR [rbp-0x18],rsi
  4055eb:	mov    rdi,QWORD PTR [rbp-0x10]
  4055ef:	mov    rsi,QWORD PTR [rbp-0x10]
  4055f3:	mov    rdx,QWORD PTR [rsi+0x180]
  4055fa:	mov    rcx,QWORD PTR [rbp-0x18]
  4055fe:	mov    esi,0x7
  405603:	call   4056a0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  405608:	mov    QWORD PTR [rbp-0x20],rax
  40560c:	cmp    rax,0x0
  405610:	jne    405623 <flatcc_builder_enter_user_frame_ptr@@Base+0x63>
  405616:	mov    QWORD PTR [rbp-0x8],0x0
  40561e:	jmp    40568a <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  405623:	xor    esi,esi
  405625:	mov    rax,QWORD PTR [rbp-0x20]
  405629:	mov    rdx,QWORD PTR [rbp-0x18]
  40562d:	mov    rdi,rax
  405630:	call   403070 <memset@plt>
  405635:	mov    rax,QWORD PTR [rbp-0x10]
  405639:	mov    rax,QWORD PTR [rax+0x178]
  405640:	mov    rdx,QWORD PTR [rbp-0x20]
  405644:	mov    rdi,rdx
  405647:	add    rdi,0x8
  40564b:	mov    QWORD PTR [rbp-0x20],rdi
  40564f:	mov    QWORD PTR [rdx],rax
  405652:	mov    rax,QWORD PTR [rbp-0x10]
  405656:	mov    rax,QWORD PTR [rax+0x180]
  40565d:	add    rax,0x8
  405661:	mov    rdx,QWORD PTR [rbp-0x10]
  405665:	mov    QWORD PTR [rdx+0x178],rax
  40566c:	mov    rax,QWORD PTR [rbp-0x18]
  405670:	mov    rdx,QWORD PTR [rbp-0x10]
  405674:	add    rax,QWORD PTR [rdx+0x180]
  40567b:	mov    QWORD PTR [rdx+0x180],rax
  405682:	mov    rax,QWORD PTR [rbp-0x20]
  405686:	mov    QWORD PTR [rbp-0x8],rax
  40568a:	mov    rax,QWORD PTR [rbp-0x8]
  40568e:	add    rsp,0x20
  405692:	pop    rbp
  405693:	ret    
  405694:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40569e:	xchg   ax,ax
  4056a0:	push   rbp
  4056a1:	mov    rbp,rsp
  4056a4:	sub    rsp,0x40
  4056a8:	mov    QWORD PTR [rbp-0x8],rdi
  4056ac:	mov    DWORD PTR [rbp-0xc],esi
  4056af:	mov    QWORD PTR [rbp-0x18],rdx
  4056b3:	mov    QWORD PTR [rbp-0x20],rcx
  4056b7:	mov    DWORD PTR [rbp-0x24],r8d
  4056bb:	mov    rcx,QWORD PTR [rbp-0x8]
  4056bf:	add    rcx,0x58
  4056c3:	movsxd rdx,DWORD PTR [rbp-0xc]
  4056c7:	shl    rdx,0x4
  4056cb:	add    rcx,rdx
  4056ce:	mov    QWORD PTR [rbp-0x30],rcx
  4056d2:	mov    rcx,QWORD PTR [rbp-0x18]
  4056d6:	add    rcx,QWORD PTR [rbp-0x20]
  4056da:	mov    rdx,QWORD PTR [rbp-0x30]
  4056de:	cmp    rcx,QWORD PTR [rdx+0x8]
  4056e2:	jbe    405743 <flatcc_builder_enter_user_frame_ptr@@Base+0x183>
  4056e8:	mov    rax,QWORD PTR [rbp-0x8]
  4056ec:	mov    rax,QWORD PTR [rax+0x50]
  4056f0:	mov    rcx,QWORD PTR [rbp-0x8]
  4056f4:	mov    rdi,QWORD PTR [rcx+0x40]
  4056f8:	mov    rsi,QWORD PTR [rbp-0x30]
  4056fc:	mov    rcx,QWORD PTR [rbp-0x18]
  405700:	add    rcx,QWORD PTR [rbp-0x20]
  405704:	mov    edx,DWORD PTR [rbp-0x24]
  405707:	mov    r8d,DWORD PTR [rbp-0xc]
  40570b:	mov    DWORD PTR [rbp-0x34],edx
  40570e:	mov    rdx,rcx
  405711:	mov    ecx,DWORD PTR [rbp-0x34]
  405714:	call   rax
  405716:	cmp    eax,0x0
  405719:	je     40573e <flatcc_builder_enter_user_frame_ptr@@Base+0x17e>
  40571f:	lea    rdi,[rip+0xe01c]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  405726:	lea    rsi,[rip+0xce55]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40572d:	mov    edx,0x134
  405732:	lea    rcx,[rip+0xde43]        # 41357c <flatcc_builder_padding_base@@Base+0x120c>
  405739:	call   403060 <__assert_fail@plt>
  40573e:	jmp    405743 <flatcc_builder_enter_user_frame_ptr@@Base+0x183>
  405743:	mov    rax,QWORD PTR [rbp-0x30]
  405747:	mov    rax,QWORD PTR [rax]
  40574a:	add    rax,QWORD PTR [rbp-0x18]
  40574e:	add    rsp,0x40
  405752:	pop    rbp
  405753:	ret    
  405754:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40575e:	xchg   ax,ax

0000000000405760 <flatcc_builder_enter_user_frame@@Base>:
  405760:	push   rbp
  405761:	mov    rbp,rsp
  405764:	sub    rsp,0x20
  405768:	xor    r8d,r8d
  40576b:	mov    QWORD PTR [rbp-0x10],rdi
  40576f:	mov    QWORD PTR [rbp-0x18],rsi
  405773:	mov    rsi,QWORD PTR [rbp-0x18]
  405777:	add    rsi,0x8
  40577b:	sub    rsi,0x1
  40577f:	and    rsi,0xfffffffffffffff8
  405783:	add    rsi,0x8
  405787:	mov    QWORD PTR [rbp-0x18],rsi
  40578b:	mov    rdi,QWORD PTR [rbp-0x10]
  40578f:	mov    rsi,QWORD PTR [rbp-0x10]
  405793:	mov    rdx,QWORD PTR [rsi+0x180]
  40579a:	mov    rcx,QWORD PTR [rbp-0x18]
  40579e:	mov    esi,0x7
  4057a3:	call   4056a0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  4057a8:	mov    QWORD PTR [rbp-0x20],rax
  4057ac:	cmp    rax,0x0
  4057b0:	jne    4057c3 <flatcc_builder_enter_user_frame@@Base+0x63>
  4057b6:	mov    QWORD PTR [rbp-0x8],0x0
  4057be:	jmp    405831 <flatcc_builder_enter_user_frame@@Base+0xd1>
  4057c3:	xor    esi,esi
  4057c5:	mov    rax,QWORD PTR [rbp-0x20]
  4057c9:	mov    rdx,QWORD PTR [rbp-0x18]
  4057cd:	mov    rdi,rax
  4057d0:	call   403070 <memset@plt>
  4057d5:	mov    rax,QWORD PTR [rbp-0x10]
  4057d9:	mov    rax,QWORD PTR [rax+0x178]
  4057e0:	mov    rdx,QWORD PTR [rbp-0x20]
  4057e4:	mov    rdi,rdx
  4057e7:	add    rdi,0x8
  4057eb:	mov    QWORD PTR [rbp-0x20],rdi
  4057ef:	mov    QWORD PTR [rdx],rax
  4057f2:	mov    rax,QWORD PTR [rbp-0x10]
  4057f6:	mov    rax,QWORD PTR [rax+0x180]
  4057fd:	add    rax,0x8
  405801:	mov    rdx,QWORD PTR [rbp-0x10]
  405805:	mov    QWORD PTR [rdx+0x178],rax
  40580c:	mov    rax,QWORD PTR [rbp-0x18]
  405810:	mov    rdx,QWORD PTR [rbp-0x10]
  405814:	add    rax,QWORD PTR [rdx+0x180]
  40581b:	mov    QWORD PTR [rdx+0x180],rax
  405822:	mov    rax,QWORD PTR [rbp-0x10]
  405826:	mov    rax,QWORD PTR [rax+0x178]
  40582d:	mov    QWORD PTR [rbp-0x8],rax
  405831:	mov    rax,QWORD PTR [rbp-0x8]
  405835:	add    rsp,0x20
  405839:	pop    rbp
  40583a:	ret    
  40583b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405840 <flatcc_builder_exit_user_frame@@Base>:
  405840:	push   rbp
  405841:	mov    rbp,rsp
  405844:	sub    rsp,0x10
  405848:	mov    QWORD PTR [rbp-0x8],rdi
  40584c:	mov    rdi,QWORD PTR [rbp-0x8]
  405850:	cmp    QWORD PTR [rdi+0x178],0x0
  405858:	jbe    405863 <flatcc_builder_exit_user_frame@@Base+0x23>
  40585e:	jmp    405882 <flatcc_builder_exit_user_frame@@Base+0x42>
  405863:	lea    rdi,[rip+0xcdb6]        # 412620 <flatcc_builder_padding_base@@Base+0x2b0>
  40586a:	lea    rsi,[rip+0xcd11]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  405871:	mov    edx,0x21e
  405876:	lea    rcx,[rip+0xcdbc]        # 412639 <flatcc_builder_padding_base@@Base+0x2c9>
  40587d:	call   403060 <__assert_fail@plt>
  405882:	mov    rax,QWORD PTR [rbp-0x8]
  405886:	mov    rax,QWORD PTR [rax+0xc8]
  40588d:	mov    rcx,QWORD PTR [rbp-0x8]
  405891:	mov    rcx,QWORD PTR [rcx+0x178]
  405898:	mov    edx,ecx
  40589a:	mov    edx,edx
  40589c:	mov    ecx,edx
  40589e:	add    rax,rcx
  4058a1:	mov    QWORD PTR [rbp-0x10],rax
  4058a5:	mov    rax,QWORD PTR [rbp-0x8]
  4058a9:	mov    rax,QWORD PTR [rax+0x178]
  4058b0:	sub    rax,0x8
  4058b4:	mov    rcx,QWORD PTR [rbp-0x8]
  4058b8:	mov    QWORD PTR [rcx+0x180],rax
  4058bf:	mov    rax,QWORD PTR [rbp-0x10]
  4058c3:	mov    rax,QWORD PTR [rax-0x8]
  4058c7:	mov    rcx,QWORD PTR [rbp-0x8]
  4058cb:	mov    QWORD PTR [rcx+0x178],rax
  4058d2:	add    rsp,0x10
  4058d6:	pop    rbp
  4058d7:	ret    
  4058d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004058e0 <flatcc_builder_exit_user_frame_at@@Base>:
  4058e0:	push   rbp
  4058e1:	mov    rbp,rsp
  4058e4:	sub    rsp,0x10
  4058e8:	mov    QWORD PTR [rbp-0x8],rdi
  4058ec:	mov    QWORD PTR [rbp-0x10],rsi
  4058f0:	mov    rsi,QWORD PTR [rbp-0x8]
  4058f4:	mov    rsi,QWORD PTR [rsi+0x178]
  4058fb:	cmp    rsi,QWORD PTR [rbp-0x10]
  4058ff:	jb     40590a <flatcc_builder_exit_user_frame_at@@Base+0x2a>
  405905:	jmp    405929 <flatcc_builder_exit_user_frame_at@@Base+0x49>
  40590a:	lea    rdi,[rip+0xcd62]        # 412673 <flatcc_builder_padding_base@@Base+0x303>
  405911:	lea    rsi,[rip+0xcc6a]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  405918:	mov    edx,0x227
  40591d:	lea    rcx,[rip+0xcd6e]        # 412692 <flatcc_builder_padding_base@@Base+0x322>
  405924:	call   403060 <__assert_fail@plt>
  405929:	mov    rax,QWORD PTR [rbp-0x10]
  40592d:	mov    rcx,QWORD PTR [rbp-0x8]
  405931:	mov    QWORD PTR [rcx+0x178],rax
  405938:	mov    rdi,QWORD PTR [rbp-0x8]
  40593c:	call   405840 <flatcc_builder_exit_user_frame@@Base>
  405941:	add    rsp,0x10
  405945:	pop    rbp
  405946:	ret    
  405947:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405950 <flatcc_builder_get_current_user_frame@@Base>:
  405950:	push   rbp
  405951:	mov    rbp,rsp
  405954:	mov    QWORD PTR [rbp-0x8],rdi
  405958:	mov    rdi,QWORD PTR [rbp-0x8]
  40595c:	mov    rax,QWORD PTR [rdi+0x178]
  405963:	pop    rbp
  405964:	ret    
  405965:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40596f:	nop

0000000000405970 <flatcc_builder_get_user_frame_ptr@@Base>:
  405970:	push   rbp
  405971:	mov    rbp,rsp
  405974:	mov    QWORD PTR [rbp-0x8],rdi
  405978:	mov    QWORD PTR [rbp-0x10],rsi
  40597c:	mov    rsi,QWORD PTR [rbp-0x8]
  405980:	mov    rsi,QWORD PTR [rsi+0xc8]
  405987:	mov    rdi,QWORD PTR [rbp-0x10]
  40598b:	mov    eax,edi
  40598d:	mov    eax,eax
  40598f:	mov    edi,eax
  405991:	add    rsi,rdi
  405994:	mov    rax,rsi
  405997:	pop    rbp
  405998:	ret    
  405999:	nop    DWORD PTR [rax+0x0]

00000000004059a0 <flatcc_builder_embed_buffer@@Base>:
  4059a0:	push   rbp
  4059a1:	mov    rbp,rsp
  4059a4:	sub    rsp,0xd0
  4059ab:	mov    ax,r8w
  4059af:	mov    r10w,si
  4059b3:	mov    QWORD PTR [rbp-0x10],rdi
  4059b7:	mov    WORD PTR [rbp-0x12],r10w
  4059bc:	mov    QWORD PTR [rbp-0x20],rdx
  4059c0:	mov    QWORD PTR [rbp-0x28],rcx
  4059c4:	mov    WORD PTR [rbp-0x2a],ax
  4059c8:	mov    DWORD PTR [rbp-0x30],r9d
  4059cc:	mov    esi,DWORD PTR [rbp-0x30]
  4059cf:	and    esi,0x2
  4059d2:	mov    DWORD PTR [rbp-0xcc],esi
  4059d8:	mov    rdi,QWORD PTR [rbp-0x10]
  4059dc:	mov    ax,WORD PTR [rbp-0x12]
  4059e0:	mov    rcx,QWORD PTR [rbp-0x10]
  4059e4:	cmp    DWORD PTR [rcx+0x100],0x0
  4059eb:	sete   r11b
  4059ef:	xor    r11b,0xff
  4059f3:	and    r11b,0x1
  4059f7:	movzx  ecx,r11b
  4059fb:	lea    rsi,[rbp-0x2a]
  4059ff:	movzx  edx,ax
  405a02:	call   405bf0 <flatcc_builder_embed_buffer@@Base+0x250>
  405a07:	cmp    eax,0x0
  405a0a:	je     405a1c <flatcc_builder_embed_buffer@@Base+0x7c>
  405a10:	mov    DWORD PTR [rbp-0x4],0x0
  405a17:	jmp    405bd5 <flatcc_builder_embed_buffer@@Base+0x235>
  405a1c:	xor    eax,eax
  405a1e:	mov    ecx,eax
  405a20:	mov    eax,0x4
  405a25:	mov    edx,eax
  405a27:	mov    rdi,QWORD PTR [rbp-0x10]
  405a2b:	mov    rsi,QWORD PTR [rbp-0x28]
  405a2f:	mov    eax,esi
  405a31:	mov    eax,eax
  405a33:	mov    esi,eax
  405a35:	mov    eax,DWORD PTR [rbp-0xcc]
  405a3b:	cmp    eax,0x0
  405a3e:	cmovne rcx,rdx
  405a42:	add    rsi,rcx
  405a45:	mov    eax,esi
  405a47:	mov    esi,eax
  405a49:	movzx  edx,WORD PTR [rbp-0x2a]
  405a4d:	call   405d90 <flatcc_builder_embed_buffer@@Base+0x3f0>
  405a52:	mov    DWORD PTR [rbp-0x38],eax
  405a55:	mov    rcx,QWORD PTR [rbp-0x28]
  405a59:	mov    eax,ecx
  405a5b:	add    eax,DWORD PTR [rbp-0x38]
  405a5e:	mov    edi,eax
  405a60:	call   405dc0 <flatcc_builder_embed_buffer@@Base+0x420>
  405a65:	mov    DWORD PTR [rbp-0x34],eax
  405a68:	mov    QWORD PTR [rbp-0xc8],0x0
  405a73:	mov    DWORD PTR [rbp-0xc0],0x0
  405a7d:	mov    rcx,QWORD PTR [rbp-0x10]
  405a81:	cmp    DWORD PTR [rcx+0x100],0x0
  405a88:	je     405aec <flatcc_builder_embed_buffer@@Base+0x14c>
  405a8e:	mov    rax,QWORD PTR [rbp-0xc8]
  405a95:	add    rax,0x4
  405a99:	mov    QWORD PTR [rbp-0xc8],rax
  405aa0:	lea    rax,[rbp-0x34]
  405aa4:	lea    rcx,[rbp-0xc8]
  405aab:	mov    rdx,rcx
  405aae:	add    rdx,0x10
  405ab2:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405ab9:	shl    rsi,0x4
  405abd:	add    rdx,rsi
  405ac0:	mov    QWORD PTR [rdx],rax
  405ac3:	add    rcx,0x10
  405ac7:	movsxd rax,DWORD PTR [rbp-0xc0]
  405ace:	shl    rax,0x4
  405ad2:	add    rcx,rax
  405ad5:	mov    QWORD PTR [rcx+0x8],0x4
  405add:	mov    edi,DWORD PTR [rbp-0xc0]
  405ae3:	add    edi,0x1
  405ae6:	mov    DWORD PTR [rbp-0xc0],edi
  405aec:	cmp    QWORD PTR [rbp-0x28],0x0
  405af1:	jbe    405b55 <flatcc_builder_embed_buffer@@Base+0x1b5>
  405af7:	mov    rax,QWORD PTR [rbp-0x28]
  405afb:	add    rax,QWORD PTR [rbp-0xc8]
  405b02:	mov    QWORD PTR [rbp-0xc8],rax
  405b09:	mov    rax,QWORD PTR [rbp-0x20]
  405b0d:	lea    rcx,[rbp-0xc8]
  405b14:	mov    rdx,rcx
  405b17:	add    rdx,0x10
  405b1b:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405b22:	shl    rsi,0x4
  405b26:	add    rdx,rsi
  405b29:	mov    QWORD PTR [rdx],rax
  405b2c:	mov    rax,QWORD PTR [rbp-0x28]
  405b30:	add    rcx,0x10
  405b34:	movsxd rdx,DWORD PTR [rbp-0xc0]
  405b3b:	shl    rdx,0x4
  405b3f:	add    rcx,rdx
  405b42:	mov    QWORD PTR [rcx+0x8],rax
  405b46:	mov    edi,DWORD PTR [rbp-0xc0]
  405b4c:	add    edi,0x1
  405b4f:	mov    DWORD PTR [rbp-0xc0],edi
  405b55:	cmp    DWORD PTR [rbp-0x38],0x0
  405b59:	jbe    405bc2 <flatcc_builder_embed_buffer@@Base+0x222>
  405b5f:	lea    rax,[rip+0xc80a]        # 412370 <flatcc_builder_padding_base@@Base>
  405b66:	mov    ecx,DWORD PTR [rbp-0x38]
  405b69:	mov    edx,ecx
  405b6b:	add    rdx,QWORD PTR [rbp-0xc8]
  405b72:	mov    QWORD PTR [rbp-0xc8],rdx
  405b79:	lea    rdx,[rbp-0xc8]
  405b80:	mov    rsi,rdx
  405b83:	add    rsi,0x10
  405b87:	movsxd rdi,DWORD PTR [rbp-0xc0]
  405b8e:	shl    rdi,0x4
  405b92:	add    rsi,rdi
  405b95:	mov    QWORD PTR [rsi],rax
  405b98:	mov    ecx,DWORD PTR [rbp-0x38]
  405b9b:	mov    eax,ecx
  405b9d:	add    rdx,0x10
  405ba1:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405ba8:	shl    rsi,0x4
  405bac:	add    rdx,rsi
  405baf:	mov    QWORD PTR [rdx+0x8],rax
  405bb3:	mov    ecx,DWORD PTR [rbp-0xc0]
  405bb9:	add    ecx,0x1
  405bbc:	mov    DWORD PTR [rbp-0xc0],ecx
  405bc2:	mov    rdi,QWORD PTR [rbp-0x10]
  405bc6:	lea    rsi,[rbp-0xc8]
  405bcd:	call   405dd0 <flatcc_builder_embed_buffer@@Base+0x430>
  405bd2:	mov    DWORD PTR [rbp-0x4],eax
  405bd5:	mov    eax,DWORD PTR [rbp-0x4]
  405bd8:	add    rsp,0xd0
  405bdf:	pop    rbp
  405be0:	ret    
  405be1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405beb:	nop    DWORD PTR [rax+rax*1+0x0]
  405bf0:	push   rbp
  405bf1:	mov    rbp,rsp
  405bf4:	sub    rsp,0xc0
  405bfb:	mov    ax,dx
  405bfe:	mov    QWORD PTR [rbp-0x8],rdi
  405c02:	mov    QWORD PTR [rbp-0x10],rsi
  405c06:	mov    WORD PTR [rbp-0x12],ax
  405c0a:	mov    DWORD PTR [rbp-0x18],ecx
  405c0d:	movzx  ecx,WORD PTR [rbp-0x12]
  405c11:	cmp    ecx,0x0
  405c14:	je     405c29 <flatcc_builder_embed_buffer@@Base+0x289>
  405c1a:	movzx  eax,WORD PTR [rbp-0x12]
  405c1e:	mov    DWORD PTR [rbp-0xb4],eax
  405c24:	jmp    405c6f <flatcc_builder_embed_buffer@@Base+0x2cf>
  405c29:	mov    rax,QWORD PTR [rbp-0x8]
  405c2d:	movzx  ecx,WORD PTR [rax+0xec]
  405c34:	cmp    ecx,0x0
  405c37:	je     405c53 <flatcc_builder_embed_buffer@@Base+0x2b3>
  405c3d:	mov    rax,QWORD PTR [rbp-0x8]
  405c41:	movzx  ecx,WORD PTR [rax+0xec]
  405c48:	mov    DWORD PTR [rbp-0xb8],ecx
  405c4e:	jmp    405c63 <flatcc_builder_embed_buffer@@Base+0x2c3>
  405c53:	mov    eax,0x1
  405c58:	mov    DWORD PTR [rbp-0xb8],eax
  405c5e:	jmp    405c63 <flatcc_builder_embed_buffer@@Base+0x2c3>
  405c63:	mov    eax,DWORD PTR [rbp-0xb8]
  405c69:	mov    DWORD PTR [rbp-0xb4],eax
  405c6f:	mov    eax,DWORD PTR [rbp-0xb4]
  405c75:	mov    cx,ax
  405c78:	mov    WORD PTR [rbp-0x12],cx
  405c7c:	mov    rdi,QWORD PTR [rbp-0x10]
  405c80:	mov    esi,0x4
  405c85:	call   407770 <flatcc_builder_start_vector@@Base+0xb0>
  405c8a:	mov    rdi,QWORD PTR [rbp-0x10]
  405c8e:	movzx  esi,WORD PTR [rbp-0x12]
  405c92:	call   407770 <flatcc_builder_start_vector@@Base+0xb0>
  405c97:	cmp    DWORD PTR [rbp-0x18],0x0
  405c9b:	jne    405d85 <flatcc_builder_embed_buffer@@Base+0x3e5>
  405ca1:	mov    rdi,QWORD PTR [rbp-0x8]
  405ca5:	movzx  esi,WORD PTR [rbp-0x12]
  405ca9:	call   40ab00 <flatcc_builder_get_emit_context@@Base+0x20>
  405cae:	mov    eax,eax
  405cb0:	mov    edi,eax
  405cb2:	mov    QWORD PTR [rbp-0x20],rdi
  405cb6:	cmp    QWORD PTR [rbp-0x20],0x0
  405cbb:	je     405d80 <flatcc_builder_embed_buffer@@Base+0x3e0>
  405cc1:	mov    QWORD PTR [rbp-0xb0],0x0
  405ccc:	mov    DWORD PTR [rbp-0xa8],0x0
  405cd6:	cmp    QWORD PTR [rbp-0x20],0x0
  405cdb:	jbe    405d42 <flatcc_builder_embed_buffer@@Base+0x3a2>
  405ce1:	lea    rax,[rip+0xc688]        # 412370 <flatcc_builder_padding_base@@Base>
  405ce8:	mov    rcx,QWORD PTR [rbp-0x20]
  405cec:	add    rcx,QWORD PTR [rbp-0xb0]
  405cf3:	mov    QWORD PTR [rbp-0xb0],rcx
  405cfa:	lea    rcx,[rbp-0xb0]
  405d01:	mov    rdx,rcx
  405d04:	add    rdx,0x10
  405d08:	movsxd rsi,DWORD PTR [rbp-0xa8]
  405d0f:	shl    rsi,0x4
  405d13:	add    rdx,rsi
  405d16:	mov    QWORD PTR [rdx],rax
  405d19:	mov    rax,QWORD PTR [rbp-0x20]
  405d1d:	add    rcx,0x10
  405d21:	movsxd rdx,DWORD PTR [rbp-0xa8]
  405d28:	shl    rdx,0x4
  405d2c:	add    rcx,rdx
  405d2f:	mov    QWORD PTR [rcx+0x8],rax
  405d33:	mov    edi,DWORD PTR [rbp-0xa8]
  405d39:	add    edi,0x1
  405d3c:	mov    DWORD PTR [rbp-0xa8],edi
  405d42:	mov    rdi,QWORD PTR [rbp-0x8]
  405d46:	lea    rsi,[rbp-0xb0]
  405d4d:	call   407d70 <flatcc_builder_create_vtable@@Base+0x140>
  405d52:	xor    ecx,ecx
  405d54:	cmp    ecx,eax
  405d56:	jne    405d7b <flatcc_builder_embed_buffer@@Base+0x3db>
  405d5c:	lea    rdi,[rip+0xd9df]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  405d63:	lea    rsi,[rip+0xc818]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  405d6a:	mov    edx,0x2be
  405d6f:	lea    rcx,[rip+0xd849]        # 4135bf <flatcc_builder_padding_base@@Base+0x124f>
  405d76:	call   403060 <__assert_fail@plt>
  405d7b:	jmp    405d80 <flatcc_builder_embed_buffer@@Base+0x3e0>
  405d80:	jmp    405d85 <flatcc_builder_embed_buffer@@Base+0x3e5>
  405d85:	xor    eax,eax
  405d87:	add    rsp,0xc0
  405d8e:	pop    rbp
  405d8f:	ret    
  405d90:	push   rbp
  405d91:	mov    rbp,rsp
  405d94:	mov    ax,dx
  405d97:	mov    QWORD PTR [rbp-0x8],rdi
  405d9b:	mov    DWORD PTR [rbp-0xc],esi
  405d9e:	mov    WORD PTR [rbp-0xe],ax
  405da2:	mov    rdi,QWORD PTR [rbp-0x8]
  405da6:	mov    edx,DWORD PTR [rdi+0xf0]
  405dac:	sub    edx,DWORD PTR [rbp-0xc]
  405daf:	movzx  esi,WORD PTR [rbp-0xe]
  405db3:	sub    esi,0x1
  405db6:	and    edx,esi
  405db8:	mov    eax,edx
  405dba:	pop    rbp
  405dbb:	ret    
  405dbc:	nop    DWORD PTR [rax+0x0]
  405dc0:	push   rbp
  405dc1:	mov    rbp,rsp
  405dc4:	mov    DWORD PTR [rbp-0x4],edi
  405dc7:	mov    eax,DWORD PTR [rbp-0x4]
  405dca:	pop    rbp
  405dcb:	ret    
  405dcc:	nop    DWORD PTR [rax+0x0]
  405dd0:	push   rbp
  405dd1:	mov    rbp,rsp
  405dd4:	sub    rsp,0x20
  405dd8:	mov    QWORD PTR [rbp-0x8],rdi
  405ddc:	mov    QWORD PTR [rbp-0x10],rsi
  405de0:	mov    rsi,QWORD PTR [rbp-0x8]
  405de4:	mov    eax,DWORD PTR [rsi+0xf0]
  405dea:	mov    rsi,QWORD PTR [rbp-0x10]
  405dee:	mov    rsi,QWORD PTR [rsi]
  405df1:	mov    ecx,esi
  405df3:	sub    eax,ecx
  405df5:	mov    DWORD PTR [rbp-0x14],eax
  405df8:	mov    rsi,QWORD PTR [rbp-0x10]
  405dfc:	cmp    QWORD PTR [rsi],0x10
  405e00:	jbe    405e21 <flatcc_builder_embed_buffer@@Base+0x481>
  405e06:	mov    eax,0xffffffff
  405e0b:	mov    ecx,eax
  405e0d:	mov    rdx,QWORD PTR [rbp-0x10]
  405e11:	mov    rdx,QWORD PTR [rdx]
  405e14:	sub    rdx,0x10
  405e18:	cmp    rdx,rcx
  405e1b:	ja     405e34 <flatcc_builder_embed_buffer@@Base+0x494>
  405e21:	mov    eax,DWORD PTR [rbp-0x14]
  405e24:	mov    rcx,QWORD PTR [rbp-0x8]
  405e28:	cmp    eax,DWORD PTR [rcx+0xf0]
  405e2e:	jl     405e53 <flatcc_builder_embed_buffer@@Base+0x4b3>
  405e34:	lea    rdi,[rip+0xd907]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  405e3b:	lea    rsi,[rip+0xc740]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  405e42:	mov    edx,0x287
  405e47:	lea    rcx,[rip+0xd7b3]        # 413601 <flatcc_builder_padding_base@@Base+0x1291>
  405e4e:	call   403060 <__assert_fail@plt>
  405e53:	mov    rax,QWORD PTR [rbp-0x8]
  405e57:	mov    rax,QWORD PTR [rax+0x48]
  405e5b:	mov    rcx,QWORD PTR [rbp-0x8]
  405e5f:	mov    rdi,QWORD PTR [rcx+0x38]
  405e63:	mov    rcx,QWORD PTR [rbp-0x10]
  405e67:	add    rcx,0x10
  405e6b:	mov    rdx,QWORD PTR [rbp-0x10]
  405e6f:	mov    edx,DWORD PTR [rdx+0x8]
  405e72:	mov    esi,DWORD PTR [rbp-0x14]
  405e75:	mov    r8,QWORD PTR [rbp-0x10]
  405e79:	mov    r8,QWORD PTR [r8]
  405e7c:	mov    DWORD PTR [rbp-0x18],esi
  405e7f:	mov    rsi,rcx
  405e82:	mov    ecx,DWORD PTR [rbp-0x18]
  405e85:	call   rax
  405e87:	cmp    eax,0x0
  405e8a:	je     405eaf <flatcc_builder_embed_buffer@@Base+0x50f>
  405e90:	lea    rdi,[rip+0xd8ab]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  405e97:	lea    rsi,[rip+0xc6e4]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  405e9e:	mov    edx,0x28b
  405ea3:	lea    rcx,[rip+0xd757]        # 413601 <flatcc_builder_padding_base@@Base+0x1291>
  405eaa:	call   403060 <__assert_fail@plt>
  405eaf:	mov    eax,DWORD PTR [rbp-0x14]
  405eb2:	mov    rcx,QWORD PTR [rbp-0x8]
  405eb6:	mov    DWORD PTR [rcx+0xf0],eax
  405ebc:	add    rsp,0x20
  405ec0:	pop    rbp
  405ec1:	ret    
  405ec2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ecc:	nop    DWORD PTR [rax+0x0]

0000000000405ed0 <flatcc_builder_create_buffer@@Base>:
  405ed0:	push   rbp
  405ed1:	mov    rbp,rsp
  405ed4:	sub    rsp,0xf0
  405edb:	mov    ax,r8w
  405edf:	mov    r10w,dx
  405ee3:	mov    QWORD PTR [rbp-0x10],rdi
  405ee7:	mov    QWORD PTR [rbp-0x18],rsi
  405eeb:	mov    WORD PTR [rbp-0x1a],r10w
  405ef0:	mov    DWORD PTR [rbp-0x20],ecx
  405ef3:	mov    WORD PTR [rbp-0x22],ax
  405ef7:	mov    DWORD PTR [rbp-0x28],r9d
  405efb:	mov    DWORD PTR [rbp-0x34],0x0
  405f02:	mov    DWORD PTR [rbp-0xd4],0x0
  405f0c:	mov    ecx,DWORD PTR [rbp-0x28]
  405f0f:	and    ecx,0x1
  405f12:	cmp    ecx,0x0
  405f15:	setne  r11b
  405f19:	and    r11b,0x1
  405f1d:	movzx  ecx,r11b
  405f21:	mov    DWORD PTR [rbp-0xd8],ecx
  405f27:	mov    ecx,DWORD PTR [rbp-0x28]
  405f2a:	and    ecx,0x2
  405f2d:	cmp    ecx,0x0
  405f30:	setne  r11b
  405f34:	and    r11b,0x1
  405f38:	movzx  ecx,r11b
  405f3c:	mov    DWORD PTR [rbp-0xdc],ecx
  405f42:	mov    rdi,QWORD PTR [rbp-0x10]
  405f46:	mov    ax,WORD PTR [rbp-0x1a]
  405f4a:	mov    ecx,DWORD PTR [rbp-0xd8]
  405f50:	lea    rsi,[rbp-0x22]
  405f54:	movzx  edx,ax
  405f57:	call   405bf0 <flatcc_builder_embed_buffer@@Base+0x250>
  405f5c:	cmp    eax,0x0
  405f5f:	je     405f71 <flatcc_builder_create_buffer@@Base+0xa1>
  405f65:	mov    DWORD PTR [rbp-0x4],0x0
  405f6c:	jmp    4062cb <flatcc_builder_create_buffer@@Base+0x3fb>
  405f71:	mov    rdi,QWORD PTR [rbp-0x10]
  405f75:	movzx  esi,WORD PTR [rbp-0x22]
  405f79:	call   4062e0 <flatcc_builder_create_buffer@@Base+0x410>
  405f7e:	cmp    QWORD PTR [rbp-0x18],0x0
  405f83:	je     405fb7 <flatcc_builder_create_buffer@@Base+0xe7>
  405f89:	mov    rax,QWORD PTR [rbp-0x18]
  405f8d:	mov    ecx,DWORD PTR [rax]
  405f8f:	mov    DWORD PTR [rbp-0xd4],ecx
  405f95:	mov    edi,DWORD PTR [rbp-0xd4]
  405f9b:	call   406320 <flatcc_builder_create_buffer@@Base+0x450>
  405fa0:	mov    DWORD PTR [rbp-0xd4],eax
  405fa6:	mov    edi,DWORD PTR [rbp-0xd4]
  405fac:	call   405dc0 <flatcc_builder_embed_buffer@@Base+0x420>
  405fb1:	mov    DWORD PTR [rbp-0xd4],eax
  405fb7:	xor    eax,eax
  405fb9:	mov    ecx,eax
  405fbb:	mov    eax,0x4
  405fc0:	mov    edx,eax
  405fc2:	xor    eax,eax
  405fc4:	mov    esi,DWORD PTR [rbp-0xd4]
  405fca:	cmp    esi,0x0
  405fcd:	mov    esi,0x4
  405fd2:	cmovne eax,esi
  405fd5:	mov    DWORD PTR [rbp-0x34],eax
  405fd8:	mov    rdi,QWORD PTR [rbp-0x10]
  405fdc:	mov    eax,DWORD PTR [rbp-0x34]
  405fdf:	mov    r8d,eax
  405fe2:	add    r8,0x4
  405fe6:	mov    eax,DWORD PTR [rbp-0xdc]
  405fec:	cmp    eax,0x0
  405fef:	cmovne rcx,rdx
  405ff3:	add    r8,rcx
  405ff6:	mov    eax,r8d
  405ff9:	mov    esi,eax
  405ffb:	movzx  edx,WORD PTR [rbp-0x22]
  405fff:	call   405d90 <flatcc_builder_embed_buffer@@Base+0x3f0>
  406004:	mov    DWORD PTR [rbp-0x30],eax
  406007:	mov    QWORD PTR [rbp-0xd0],0x0
  406012:	mov    DWORD PTR [rbp-0xc8],0x0
  40601c:	cmp    DWORD PTR [rbp-0xd8],0x0
  406023:	jne    406036 <flatcc_builder_create_buffer@@Base+0x166>
  406029:	cmp    DWORD PTR [rbp-0xdc],0x0
  406030:	je     406094 <flatcc_builder_create_buffer@@Base+0x1c4>
  406036:	mov    rax,QWORD PTR [rbp-0xd0]
  40603d:	add    rax,0x4
  406041:	mov    QWORD PTR [rbp-0xd0],rax
  406048:	lea    rax,[rbp-0x3c]
  40604c:	lea    rcx,[rbp-0xd0]
  406053:	mov    rdx,rcx
  406056:	add    rdx,0x10
  40605a:	movsxd rsi,DWORD PTR [rbp-0xc8]
  406061:	shl    rsi,0x4
  406065:	add    rdx,rsi
  406068:	mov    QWORD PTR [rdx],rax
  40606b:	add    rcx,0x10
  40606f:	movsxd rax,DWORD PTR [rbp-0xc8]
  406076:	shl    rax,0x4
  40607a:	add    rcx,rax
  40607d:	mov    QWORD PTR [rcx+0x8],0x4
  406085:	mov    edi,DWORD PTR [rbp-0xc8]
  40608b:	add    edi,0x1
  40608e:	mov    DWORD PTR [rbp-0xc8],edi
  406094:	mov    rax,QWORD PTR [rbp-0xd0]
  40609b:	add    rax,0x4
  40609f:	mov    QWORD PTR [rbp-0xd0],rax
  4060a6:	lea    rax,[rbp-0x38]
  4060aa:	lea    rcx,[rbp-0xd0]
  4060b1:	mov    rdx,rcx
  4060b4:	add    rdx,0x10
  4060b8:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4060bf:	shl    rsi,0x4
  4060c3:	add    rdx,rsi
  4060c6:	mov    QWORD PTR [rdx],rax
  4060c9:	add    rcx,0x10
  4060cd:	movsxd rax,DWORD PTR [rbp-0xc8]
  4060d4:	shl    rax,0x4
  4060d8:	add    rcx,rax
  4060db:	mov    QWORD PTR [rcx+0x8],0x4
  4060e3:	mov    edi,DWORD PTR [rbp-0xc8]
  4060e9:	add    edi,0x1
  4060ec:	mov    DWORD PTR [rbp-0xc8],edi
  4060f2:	cmp    DWORD PTR [rbp-0x34],0x0
  4060f6:	jbe    40615f <flatcc_builder_create_buffer@@Base+0x28f>
  4060fc:	mov    eax,DWORD PTR [rbp-0x34]
  4060ff:	mov    ecx,eax
  406101:	add    rcx,QWORD PTR [rbp-0xd0]
  406108:	mov    QWORD PTR [rbp-0xd0],rcx
  40610f:	lea    rcx,[rbp-0xd4]
  406116:	lea    rdx,[rbp-0xd0]
  40611d:	mov    rsi,rdx
  406120:	add    rsi,0x10
  406124:	movsxd rdi,DWORD PTR [rbp-0xc8]
  40612b:	shl    rdi,0x4
  40612f:	add    rsi,rdi
  406132:	mov    QWORD PTR [rsi],rcx
  406135:	mov    eax,DWORD PTR [rbp-0x34]
  406138:	mov    ecx,eax
  40613a:	add    rdx,0x10
  40613e:	movsxd rsi,DWORD PTR [rbp-0xc8]
  406145:	shl    rsi,0x4
  406149:	add    rdx,rsi
  40614c:	mov    QWORD PTR [rdx+0x8],rcx
  406150:	mov    eax,DWORD PTR [rbp-0xc8]
  406156:	add    eax,0x1
  406159:	mov    DWORD PTR [rbp-0xc8],eax
  40615f:	cmp    DWORD PTR [rbp-0x30],0x0
  406163:	jbe    4061cc <flatcc_builder_create_buffer@@Base+0x2fc>
  406169:	lea    rax,[rip+0xc200]        # 412370 <flatcc_builder_padding_base@@Base>
  406170:	mov    ecx,DWORD PTR [rbp-0x30]
  406173:	mov    edx,ecx
  406175:	add    rdx,QWORD PTR [rbp-0xd0]
  40617c:	mov    QWORD PTR [rbp-0xd0],rdx
  406183:	lea    rdx,[rbp-0xd0]
  40618a:	mov    rsi,rdx
  40618d:	add    rsi,0x10
  406191:	movsxd rdi,DWORD PTR [rbp-0xc8]
  406198:	shl    rdi,0x4
  40619c:	add    rsi,rdi
  40619f:	mov    QWORD PTR [rsi],rax
  4061a2:	mov    ecx,DWORD PTR [rbp-0x30]
  4061a5:	mov    eax,ecx
  4061a7:	add    rdx,0x10
  4061ab:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4061b2:	shl    rsi,0x4
  4061b6:	add    rdx,rsi
  4061b9:	mov    QWORD PTR [rdx+0x8],rax
  4061bd:	mov    ecx,DWORD PTR [rbp-0xc8]
  4061c3:	add    ecx,0x1
  4061c6:	mov    DWORD PTR [rbp-0xc8],ecx
  4061cc:	mov    rax,QWORD PTR [rbp-0x10]
  4061d0:	mov    ecx,DWORD PTR [rax+0xf0]
  4061d6:	mov    rax,QWORD PTR [rbp-0xd0]
  4061dd:	mov    edx,eax
  4061df:	sub    ecx,edx
  4061e1:	mov    ecx,ecx
  4061e3:	mov    eax,ecx
  4061e5:	cmp    DWORD PTR [rbp-0xd8],0x0
  4061ec:	mov    sil,0x1
  4061ef:	mov    QWORD PTR [rbp-0xe8],rax
  4061f6:	mov    BYTE PTR [rbp-0xe9],sil
  4061fd:	jne    406213 <flatcc_builder_create_buffer@@Base+0x343>
  406203:	cmp    DWORD PTR [rbp-0xdc],0x0
  40620a:	setne  al
  40620d:	mov    BYTE PTR [rbp-0xe9],al
  406213:	mov    al,BYTE PTR [rbp-0xe9]
  406219:	xor    ecx,ecx
  40621b:	mov    edx,ecx
  40621d:	mov    ecx,0x4
  406222:	mov    esi,ecx
  406224:	test   al,0x1
  406226:	cmovne rdx,rsi
  40622a:	mov    rsi,QWORD PTR [rbp-0xe8]
  406231:	add    rsi,rdx
  406234:	mov    ecx,esi
  406236:	mov    DWORD PTR [rbp-0x40],ecx
  406239:	cmp    DWORD PTR [rbp-0xd8],0x0
  406240:	je     406262 <flatcc_builder_create_buffer@@Base+0x392>
  406246:	mov    rax,QWORD PTR [rbp-0x10]
  40624a:	mov    ecx,DWORD PTR [rax+0xf8]
  406250:	sub    ecx,DWORD PTR [rbp-0x40]
  406253:	mov    edi,ecx
  406255:	call   405dc0 <flatcc_builder_embed_buffer@@Base+0x420>
  40625a:	mov    DWORD PTR [rbp-0x3c],eax
  40625d:	jmp    406279 <flatcc_builder_create_buffer@@Base+0x3a9>
  406262:	mov    rax,QWORD PTR [rbp-0x10]
  406266:	mov    ecx,DWORD PTR [rax+0xf4]
  40626c:	sub    ecx,DWORD PTR [rbp-0x40]
  40626f:	mov    edi,ecx
  406271:	call   405dc0 <flatcc_builder_embed_buffer@@Base+0x420>
  406276:	mov    DWORD PTR [rbp-0x3c],eax
  406279:	mov    eax,DWORD PTR [rbp-0x20]
  40627c:	sub    eax,DWORD PTR [rbp-0x40]
  40627f:	mov    edi,eax
  406281:	call   405dc0 <flatcc_builder_embed_buffer@@Base+0x420>
  406286:	mov    DWORD PTR [rbp-0x38],eax
  406289:	mov    rdi,QWORD PTR [rbp-0x10]
  40628d:	lea    rsi,[rbp-0xd0]
  406294:	call   405dd0 <flatcc_builder_embed_buffer@@Base+0x430>
  406299:	xor    ecx,ecx
  40629b:	mov    DWORD PTR [rbp-0x2c],eax
  40629e:	cmp    ecx,eax
  4062a0:	jne    4062c5 <flatcc_builder_create_buffer@@Base+0x3f5>
  4062a6:	lea    rdi,[rip+0xd495]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  4062ad:	lea    rsi,[rip+0xc2ce]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4062b4:	mov    edx,0x304
  4062b9:	lea    rcx,[rip+0xc417]        # 4126d7 <flatcc_builder_padding_base@@Base+0x367>
  4062c0:	call   403060 <__assert_fail@plt>
  4062c5:	mov    eax,DWORD PTR [rbp-0x2c]
  4062c8:	mov    DWORD PTR [rbp-0x4],eax
  4062cb:	mov    eax,DWORD PTR [rbp-0x4]
  4062ce:	add    rsp,0xf0
  4062d5:	pop    rbp
  4062d6:	ret    
  4062d7:	nop    WORD PTR [rax+rax*1+0x0]
  4062e0:	push   rbp
  4062e1:	mov    rbp,rsp
  4062e4:	mov    ax,si
  4062e7:	mov    QWORD PTR [rbp-0x8],rdi
  4062eb:	mov    WORD PTR [rbp-0xa],ax
  4062ef:	mov    rdi,QWORD PTR [rbp-0x8]
  4062f3:	movzx  esi,WORD PTR [rdi+0xe8]
  4062fa:	movzx  ecx,WORD PTR [rbp-0xa]
  4062fe:	cmp    esi,ecx
  406300:	jge    406315 <flatcc_builder_create_buffer@@Base+0x445>
  406306:	mov    ax,WORD PTR [rbp-0xa]
  40630a:	mov    rcx,QWORD PTR [rbp-0x8]
  40630e:	mov    WORD PTR [rcx+0xe8],ax
  406315:	pop    rbp
  406316:	ret    
  406317:	nop    WORD PTR [rax+rax*1+0x0]
  406320:	push   rbp
  406321:	mov    rbp,rsp
  406324:	mov    DWORD PTR [rbp-0x4],edi
  406327:	mov    eax,DWORD PTR [rbp-0x4]
  40632a:	pop    rbp
  40632b:	ret    
  40632c:	nop    DWORD PTR [rax+0x0]

0000000000406330 <flatcc_builder_create_struct@@Base>:
  406330:	push   rbp
  406331:	mov    rbp,rsp
  406334:	sub    rsp,0xc0
  40633b:	mov    ax,cx
  40633e:	mov    QWORD PTR [rbp-0x8],rdi
  406342:	mov    QWORD PTR [rbp-0x10],rsi
  406346:	mov    QWORD PTR [rbp-0x18],rdx
  40634a:	mov    WORD PTR [rbp-0x1a],ax
  40634e:	movzx  ecx,WORD PTR [rbp-0x1a]
  406352:	cmp    ecx,0x1
  406355:	jl     406360 <flatcc_builder_create_struct@@Base+0x30>
  40635b:	jmp    40637f <flatcc_builder_create_struct@@Base+0x4f>
  406360:	lea    rdi,[rip+0xc3f3]        # 41275a <flatcc_builder_padding_base@@Base+0x3ea>
  406367:	lea    rsi,[rip+0xc214]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40636e:	mov    edx,0x30f
  406373:	lea    rcx,[rip+0xc3eb]        # 412765 <flatcc_builder_padding_base@@Base+0x3f5>
  40637a:	call   403060 <__assert_fail@plt>
  40637f:	mov    rdi,QWORD PTR [rbp-0x8]
  406383:	movzx  esi,WORD PTR [rbp-0x1a]
  406387:	call   4062e0 <flatcc_builder_create_buffer@@Base+0x410>
  40638c:	mov    rdi,QWORD PTR [rbp-0x8]
  406390:	mov    rax,QWORD PTR [rbp-0x18]
  406394:	mov    esi,eax
  406396:	movzx  edx,WORD PTR [rbp-0x1a]
  40639a:	call   405d90 <flatcc_builder_embed_buffer@@Base+0x3f0>
  40639f:	mov    eax,eax
  4063a1:	mov    edi,eax
  4063a3:	mov    QWORD PTR [rbp-0x28],rdi
  4063a7:	mov    QWORD PTR [rbp-0xb8],0x0
  4063b2:	mov    DWORD PTR [rbp-0xb0],0x0
  4063bc:	cmp    QWORD PTR [rbp-0x18],0x0
  4063c1:	jbe    406425 <flatcc_builder_create_struct@@Base+0xf5>
  4063c7:	mov    rax,QWORD PTR [rbp-0x18]
  4063cb:	add    rax,QWORD PTR [rbp-0xb8]
  4063d2:	mov    QWORD PTR [rbp-0xb8],rax
  4063d9:	mov    rax,QWORD PTR [rbp-0x10]
  4063dd:	lea    rcx,[rbp-0xb8]
  4063e4:	mov    rdx,rcx
  4063e7:	add    rdx,0x10
  4063eb:	movsxd rsi,DWORD PTR [rbp-0xb0]
  4063f2:	shl    rsi,0x4
  4063f6:	add    rdx,rsi
  4063f9:	mov    QWORD PTR [rdx],rax
  4063fc:	mov    rax,QWORD PTR [rbp-0x18]
  406400:	add    rcx,0x10
  406404:	movsxd rdx,DWORD PTR [rbp-0xb0]
  40640b:	shl    rdx,0x4
  40640f:	add    rcx,rdx
  406412:	mov    QWORD PTR [rcx+0x8],rax
  406416:	mov    edi,DWORD PTR [rbp-0xb0]
  40641c:	add    edi,0x1
  40641f:	mov    DWORD PTR [rbp-0xb0],edi
  406425:	cmp    QWORD PTR [rbp-0x28],0x0
  40642a:	jbe    406491 <flatcc_builder_create_struct@@Base+0x161>
  406430:	lea    rax,[rip+0xbf39]        # 412370 <flatcc_builder_padding_base@@Base>
  406437:	mov    rcx,QWORD PTR [rbp-0x28]
  40643b:	add    rcx,QWORD PTR [rbp-0xb8]
  406442:	mov    QWORD PTR [rbp-0xb8],rcx
  406449:	lea    rcx,[rbp-0xb8]
  406450:	mov    rdx,rcx
  406453:	add    rdx,0x10
  406457:	movsxd rsi,DWORD PTR [rbp-0xb0]
  40645e:	shl    rsi,0x4
  406462:	add    rdx,rsi
  406465:	mov    QWORD PTR [rdx],rax
  406468:	mov    rax,QWORD PTR [rbp-0x28]
  40646c:	add    rcx,0x10
  406470:	movsxd rdx,DWORD PTR [rbp-0xb0]
  406477:	shl    rdx,0x4
  40647b:	add    rcx,rdx
  40647e:	mov    QWORD PTR [rcx+0x8],rax
  406482:	mov    edi,DWORD PTR [rbp-0xb0]
  406488:	add    edi,0x1
  40648b:	mov    DWORD PTR [rbp-0xb0],edi
  406491:	mov    rdi,QWORD PTR [rbp-0x8]
  406495:	lea    rsi,[rbp-0xb8]
  40649c:	call   405dd0 <flatcc_builder_embed_buffer@@Base+0x430>
  4064a1:	add    rsp,0xc0
  4064a8:	pop    rbp
  4064a9:	ret    
  4064aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004064b0 <flatcc_builder_start_buffer@@Base>:
  4064b0:	push   rbp
  4064b1:	mov    rbp,rsp
  4064b4:	sub    rsp,0x30
  4064b8:	mov    ax,dx
  4064bb:	mov    QWORD PTR [rbp-0x10],rdi
  4064bf:	mov    QWORD PTR [rbp-0x18],rsi
  4064c3:	mov    WORD PTR [rbp-0x1a],ax
  4064c7:	mov    DWORD PTR [rbp-0x20],ecx
  4064ca:	mov    rdi,QWORD PTR [rbp-0x10]
  4064ce:	mov    rsi,QWORD PTR [rbp-0x10]
  4064d2:	movzx  esi,WORD PTR [rsi+0xe8]
  4064d9:	call   406620 <flatcc_builder_start_buffer@@Base+0x170>
  4064de:	cmp    eax,0x0
  4064e1:	je     4064f3 <flatcc_builder_start_buffer@@Base+0x43>
  4064e7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4064ee:	jmp    406617 <flatcc_builder_start_buffer@@Base+0x167>
  4064f3:	mov    rax,QWORD PTR [rbp-0x10]
  4064f7:	mov    WORD PTR [rax+0xe8],0x1
  406500:	mov    rax,QWORD PTR [rbp-0x10]
  406504:	mov    cx,WORD PTR [rax+0xec]
  40650b:	mov    rax,QWORD PTR [rbp-0x10]
  40650f:	mov    rax,QWORD PTR [rax+0x30]
  406513:	mov    WORD PTR [rax+0x22],cx
  406517:	mov    cx,WORD PTR [rbp-0x1a]
  40651b:	mov    rax,QWORD PTR [rbp-0x10]
  40651f:	mov    WORD PTR [rax+0xec],cx
  406526:	mov    rax,QWORD PTR [rbp-0x10]
  40652a:	mov    cx,WORD PTR [rax+0x10c]
  406531:	mov    rax,QWORD PTR [rbp-0x10]
  406535:	mov    rax,QWORD PTR [rax+0x30]
  406539:	mov    WORD PTR [rax+0x20],cx
  40653d:	mov    edx,DWORD PTR [rbp-0x20]
  406540:	mov    cx,dx
  406543:	mov    rax,QWORD PTR [rbp-0x10]
  406547:	mov    WORD PTR [rax+0x10c],cx
  40654e:	mov    rax,QWORD PTR [rbp-0x10]
  406552:	mov    edx,DWORD PTR [rax+0xf8]
  406558:	mov    rax,QWORD PTR [rbp-0x10]
  40655c:	mov    rax,QWORD PTR [rax+0x30]
  406560:	mov    DWORD PTR [rax+0x14],edx
  406563:	mov    rax,QWORD PTR [rbp-0x10]
  406567:	mov    edx,DWORD PTR [rax+0x100]
  40656d:	mov    rax,QWORD PTR [rbp-0x10]
  406571:	mov    rax,QWORD PTR [rax+0x30]
  406575:	mov    DWORD PTR [rax+0x1c],edx
  406578:	mov    rax,QWORD PTR [rbp-0x10]
  40657c:	mov    edx,DWORD PTR [rax+0xf0]
  406582:	mov    rax,QWORD PTR [rbp-0x10]
  406586:	mov    DWORD PTR [rax+0xf8],edx
  40658c:	mov    rax,QWORD PTR [rbp-0x10]
  406590:	mov    edx,DWORD PTR [rax+0xfc]
  406596:	mov    esi,edx
  406598:	add    esi,0x1
  40659b:	mov    DWORD PTR [rax+0xfc],esi
  4065a1:	mov    rax,QWORD PTR [rbp-0x10]
  4065a5:	mov    DWORD PTR [rax+0x100],edx
  4065ab:	mov    rax,QWORD PTR [rbp-0x10]
  4065af:	mov    edx,DWORD PTR [rax+0x110]
  4065b5:	mov    rax,QWORD PTR [rbp-0x10]
  4065b9:	mov    rax,QWORD PTR [rax+0x30]
  4065bd:	mov    DWORD PTR [rax+0x10],edx
  4065c0:	mov    rax,QWORD PTR [rbp-0x10]
  4065c4:	add    rax,0x110
  4065ca:	cmp    QWORD PTR [rbp-0x18],0x0
  4065cf:	mov    QWORD PTR [rbp-0x28],rax
  4065d3:	je     4065e6 <flatcc_builder_start_buffer@@Base+0x136>
  4065d9:	mov    rax,QWORD PTR [rbp-0x18]
  4065dd:	mov    QWORD PTR [rbp-0x30],rax
  4065e1:	jmp    4065f6 <flatcc_builder_start_buffer@@Base+0x146>
  4065e6:	lea    rax,[rip+0xbd83]        # 412370 <flatcc_builder_padding_base@@Base>
  4065ed:	mov    QWORD PTR [rbp-0x30],rax
  4065f1:	jmp    4065f6 <flatcc_builder_start_buffer@@Base+0x146>
  4065f6:	mov    rax,QWORD PTR [rbp-0x30]
  4065fa:	mov    ecx,DWORD PTR [rax]
  4065fc:	mov    rax,QWORD PTR [rbp-0x28]
  406600:	mov    DWORD PTR [rax],ecx
  406602:	mov    rdx,QWORD PTR [rbp-0x10]
  406606:	mov    rdx,QWORD PTR [rdx+0x30]
  40660a:	mov    WORD PTR [rdx+0xe],0x1
  406610:	mov    DWORD PTR [rbp-0x4],0x0
  406617:	mov    eax,DWORD PTR [rbp-0x4]
  40661a:	add    rsp,0x30
  40661e:	pop    rbp
  40661f:	ret    
  406620:	push   rbp
  406621:	mov    rbp,rsp
  406624:	sub    rsp,0x20
  406628:	mov    ax,si
  40662b:	mov    QWORD PTR [rbp-0x10],rdi
  40662f:	mov    WORD PTR [rbp-0x12],ax
  406633:	mov    rdi,QWORD PTR [rbp-0x10]
  406637:	mov    esi,DWORD PTR [rdi+0x104]
  40663d:	add    esi,0x1
  406640:	mov    DWORD PTR [rdi+0x104],esi
  406646:	mov    rdi,QWORD PTR [rbp-0x10]
  40664a:	cmp    esi,DWORD PTR [rdi+0x108]
  406650:	jle    406740 <flatcc_builder_start_buffer@@Base+0x290>
  406656:	mov    rax,QWORD PTR [rbp-0x10]
  40665a:	cmp    DWORD PTR [rax+0x120],0x0
  406661:	jle    40668d <flatcc_builder_start_buffer@@Base+0x1dd>
  406667:	mov    rax,QWORD PTR [rbp-0x10]
  40666b:	mov    ecx,DWORD PTR [rax+0x104]
  406671:	mov    rax,QWORD PTR [rbp-0x10]
  406675:	cmp    ecx,DWORD PTR [rax+0x120]
  40667b:	jle    40668d <flatcc_builder_start_buffer@@Base+0x1dd>
  406681:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406688:	jmp    4067d8 <flatcc_builder_start_buffer@@Base+0x328>
  40668d:	mov    eax,0x24
  406692:	mov    ecx,eax
  406694:	xor    r8d,r8d
  406697:	mov    rdi,QWORD PTR [rbp-0x10]
  40669b:	mov    rdx,QWORD PTR [rbp-0x10]
  40669f:	mov    eax,DWORD PTR [rdx+0x104]
  4066a5:	sub    eax,0x1
  4066a8:	movsxd rdx,eax
  4066ab:	imul   rdx,rdx,0x24
  4066af:	mov    esi,0x4
  4066b4:	call   4056a0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  4066b9:	mov    rcx,QWORD PTR [rbp-0x10]
  4066bd:	mov    QWORD PTR [rcx+0x30],rax
  4066c1:	cmp    rax,0x0
  4066c5:	jne    4066d7 <flatcc_builder_start_buffer@@Base+0x227>
  4066cb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4066d2:	jmp    4067d8 <flatcc_builder_start_buffer@@Base+0x328>
  4066d7:	mov    eax,0x24
  4066dc:	mov    ecx,eax
  4066de:	mov    rdx,QWORD PTR [rbp-0x10]
  4066e2:	mov    rax,QWORD PTR [rdx+0xa0]
  4066e9:	xor    esi,esi
  4066eb:	mov    edx,esi
  4066ed:	div    rcx
  4066f0:	mov    esi,eax
  4066f2:	mov    rax,QWORD PTR [rbp-0x10]
  4066f6:	mov    DWORD PTR [rax+0x108],esi
  4066fc:	mov    rax,QWORD PTR [rbp-0x10]
  406700:	cmp    DWORD PTR [rax+0x120],0x0
  406707:	jle    40673b <flatcc_builder_start_buffer@@Base+0x28b>
  40670d:	mov    rax,QWORD PTR [rbp-0x10]
  406711:	mov    ecx,DWORD PTR [rax+0x120]
  406717:	mov    rax,QWORD PTR [rbp-0x10]
  40671b:	cmp    ecx,DWORD PTR [rax+0x108]
  406721:	jge    40673b <flatcc_builder_start_buffer@@Base+0x28b>
  406727:	mov    rax,QWORD PTR [rbp-0x10]
  40672b:	mov    ecx,DWORD PTR [rax+0x120]
  406731:	mov    rax,QWORD PTR [rbp-0x10]
  406735:	mov    DWORD PTR [rax+0x108],ecx
  40673b:	jmp    406750 <flatcc_builder_start_buffer@@Base+0x2a0>
  406740:	mov    rax,QWORD PTR [rbp-0x10]
  406744:	mov    rcx,QWORD PTR [rax+0x30]
  406748:	add    rcx,0x24
  40674c:	mov    QWORD PTR [rax+0x30],rcx
  406750:	mov    rax,QWORD PTR [rbp-0x10]
  406754:	mov    ecx,DWORD PTR [rax+0x20]
  406757:	mov    rax,QWORD PTR [rbp-0x10]
  40675b:	mov    rax,QWORD PTR [rax+0x30]
  40675f:	mov    DWORD PTR [rax+0x8],ecx
  406762:	mov    rax,QWORD PTR [rbp-0x10]
  406766:	mov    dx,WORD PTR [rax+0xea]
  40676d:	mov    rax,QWORD PTR [rbp-0x10]
  406771:	mov    rax,QWORD PTR [rax+0x30]
  406775:	mov    WORD PTR [rax+0xc],dx
  406779:	mov    dx,WORD PTR [rbp-0x12]
  40677d:	mov    rax,QWORD PTR [rbp-0x10]
  406781:	mov    WORD PTR [rax+0xea],dx
  406788:	mov    rax,QWORD PTR [rbp-0x10]
  40678c:	mov    ecx,DWORD PTR [rax+0x28]
  40678f:	mov    rax,QWORD PTR [rbp-0x10]
  406793:	mov    rax,QWORD PTR [rax+0x30]
  406797:	mov    DWORD PTR [rax],ecx
  406799:	mov    rax,QWORD PTR [rbp-0x10]
  40679d:	mov    rax,QWORD PTR [rax+0x30]
  4067a1:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4067a8:	mov    rax,QWORD PTR [rbp-0x10]
  4067ac:	mov    ecx,DWORD PTR [rax+0x28]
  4067af:	mov    rax,QWORD PTR [rbp-0x10]
  4067b3:	add    ecx,DWORD PTR [rax+0x20]
  4067b6:	add    ecx,0x8
  4067b9:	sub    ecx,0x1
  4067bc:	and    ecx,0xfffffff8
  4067bf:	mov    rax,QWORD PTR [rbp-0x10]
  4067c3:	mov    DWORD PTR [rax+0x28],ecx
  4067c6:	mov    rax,QWORD PTR [rbp-0x10]
  4067ca:	mov    DWORD PTR [rax+0x20],0x0
  4067d1:	mov    DWORD PTR [rbp-0x4],0x0
  4067d8:	mov    eax,DWORD PTR [rbp-0x4]
  4067db:	add    rsp,0x20
  4067df:	pop    rbp
  4067e0:	ret    
  4067e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004067f0 <flatcc_builder_end_buffer@@Base>:
  4067f0:	push   rbp
  4067f1:	mov    rbp,rsp
  4067f4:	sub    rsp,0x20
  4067f8:	xor    eax,eax
  4067fa:	mov    QWORD PTR [rbp-0x10],rdi
  4067fe:	mov    DWORD PTR [rbp-0x14],esi
  406801:	mov    rdi,QWORD PTR [rbp-0x10]
  406805:	movzx  esi,WORD PTR [rdi+0x10c]
  40680c:	and    esi,0x2
  40680f:	mov    DWORD PTR [rbp-0x1c],esi
  406812:	mov    rdi,QWORD PTR [rbp-0x10]
  406816:	mov    esi,DWORD PTR [rdi+0x100]
  40681c:	cmp    esi,0x0
  40681f:	mov    esi,0x1
  406824:	cmove  esi,eax
  406827:	or     esi,DWORD PTR [rbp-0x1c]
  40682a:	mov    DWORD PTR [rbp-0x1c],esi
  40682d:	mov    rdi,QWORD PTR [rbp-0x10]
  406831:	mov    rdi,QWORD PTR [rdi+0x30]
  406835:	movzx  eax,WORD PTR [rdi+0xe]
  406839:	cmp    eax,0x1
  40683c:	jne    406847 <flatcc_builder_end_buffer@@Base+0x57>
  406842:	jmp    406866 <flatcc_builder_end_buffer@@Base+0x76>
  406847:	lea    rdi,[rip+0xbf7d]        # 4127cb <flatcc_builder_padding_base@@Base+0x45b>
  40684e:	lea    rsi,[rip+0xbd2d]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  406855:	mov    edx,0x346
  40685a:	lea    rcx,[rip+0xbf96]        # 4127f7 <flatcc_builder_padding_base@@Base+0x487>
  406861:	call   403060 <__assert_fail@plt>
  406866:	mov    rdi,QWORD PTR [rbp-0x10]
  40686a:	mov    rax,QWORD PTR [rbp-0x10]
  40686e:	movzx  esi,WORD PTR [rax+0xec]
  406875:	call   4062e0 <flatcc_builder_create_buffer@@Base+0x410>
  40687a:	mov    rdi,QWORD PTR [rbp-0x10]
  40687e:	mov    rax,QWORD PTR [rbp-0x10]
  406882:	add    rax,0x110
  406888:	mov    rcx,QWORD PTR [rbp-0x10]
  40688c:	mov    dx,WORD PTR [rcx+0xec]
  406893:	mov    ecx,DWORD PTR [rbp-0x14]
  406896:	mov    r8,QWORD PTR [rbp-0x10]
  40689a:	mov    r9w,WORD PTR [r8+0xe8]
  4068a2:	mov    esi,DWORD PTR [rbp-0x1c]
  4068a5:	mov    DWORD PTR [rbp-0x20],esi
  4068a8:	mov    rsi,rax
  4068ab:	movzx  edx,dx
  4068ae:	movzx  r8d,r9w
  4068b2:	mov    r9d,DWORD PTR [rbp-0x20]
  4068b6:	call   405ed0 <flatcc_builder_create_buffer@@Base>
  4068bb:	xor    ecx,ecx
  4068bd:	mov    DWORD PTR [rbp-0x18],eax
  4068c0:	cmp    ecx,eax
  4068c2:	jne    4068d4 <flatcc_builder_end_buffer@@Base+0xe4>
  4068c8:	mov    DWORD PTR [rbp-0x4],0x0
  4068cf:	jmp    406939 <flatcc_builder_end_buffer@@Base+0x149>
  4068d4:	mov    rax,QWORD PTR [rbp-0x10]
  4068d8:	mov    rax,QWORD PTR [rax+0x30]
  4068dc:	mov    ecx,DWORD PTR [rax+0x14]
  4068df:	mov    rax,QWORD PTR [rbp-0x10]
  4068e3:	mov    DWORD PTR [rax+0xf8],ecx
  4068e9:	mov    rax,QWORD PTR [rbp-0x10]
  4068ed:	mov    rax,QWORD PTR [rax+0x30]
  4068f1:	mov    ecx,DWORD PTR [rax+0x1c]
  4068f4:	mov    rax,QWORD PTR [rbp-0x10]
  4068f8:	mov    DWORD PTR [rax+0x100],ecx
  4068fe:	mov    rax,QWORD PTR [rbp-0x10]
  406902:	mov    rax,QWORD PTR [rax+0x30]
  406906:	mov    ecx,DWORD PTR [rax+0x10]
  406909:	mov    rax,QWORD PTR [rbp-0x10]
  40690d:	mov    DWORD PTR [rax+0x110],ecx
  406913:	mov    rax,QWORD PTR [rbp-0x10]
  406917:	mov    rax,QWORD PTR [rax+0x30]
  40691b:	mov    dx,WORD PTR [rax+0x20]
  40691f:	mov    rax,QWORD PTR [rbp-0x10]
  406923:	mov    WORD PTR [rax+0x10c],dx
  40692a:	mov    rdi,QWORD PTR [rbp-0x10]
  40692e:	call   406950 <flatcc_builder_end_buffer@@Base+0x160>
  406933:	mov    ecx,DWORD PTR [rbp-0x18]
  406936:	mov    DWORD PTR [rbp-0x4],ecx
  406939:	mov    eax,DWORD PTR [rbp-0x4]
  40693c:	add    rsp,0x20
  406940:	pop    rbp
  406941:	ret    
  406942:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40694c:	nop    DWORD PTR [rax+0x0]
  406950:	push   rbp
  406951:	mov    rbp,rsp
  406954:	sub    rsp,0x10
  406958:	xor    esi,esi
  40695a:	mov    QWORD PTR [rbp-0x8],rdi
  40695e:	mov    rdi,QWORD PTR [rbp-0x8]
  406962:	mov    rdi,QWORD PTR [rdi+0x18]
  406966:	mov    rax,QWORD PTR [rbp-0x8]
  40696a:	mov    ecx,DWORD PTR [rax+0x20]
  40696d:	mov    edx,ecx
  40696f:	call   403070 <memset@plt>
  406974:	mov    rax,QWORD PTR [rbp-0x8]
  406978:	mov    rax,QWORD PTR [rax+0x30]
  40697c:	mov    ecx,DWORD PTR [rax+0x8]
  40697f:	mov    rax,QWORD PTR [rbp-0x8]
  406983:	mov    DWORD PTR [rax+0x20],ecx
  406986:	mov    rax,QWORD PTR [rbp-0x8]
  40698a:	mov    rax,QWORD PTR [rax+0x30]
  40698e:	mov    ecx,DWORD PTR [rax]
  406990:	mov    rax,QWORD PTR [rbp-0x8]
  406994:	mov    DWORD PTR [rax+0x28],ecx
  406997:	mov    rdi,QWORD PTR [rbp-0x8]
  40699b:	mov    rax,QWORD PTR [rbp-0x8]
  40699f:	mov    rax,QWORD PTR [rax+0x30]
  4069a3:	mov    esi,DWORD PTR [rax+0x4]
  4069a6:	call   406a90 <flatcc_builder_start_struct@@Base+0x80>
  4069ab:	mov    rdi,QWORD PTR [rbp-0x8]
  4069af:	mov    rax,QWORD PTR [rbp-0x8]
  4069b3:	movzx  esi,WORD PTR [rax+0xea]
  4069ba:	call   4062e0 <flatcc_builder_create_buffer@@Base+0x410>
  4069bf:	mov    rax,QWORD PTR [rbp-0x8]
  4069c3:	mov    rax,QWORD PTR [rax+0x30]
  4069c7:	mov    r8w,WORD PTR [rax+0xc]
  4069cc:	mov    rax,QWORD PTR [rbp-0x8]
  4069d0:	mov    WORD PTR [rax+0xea],r8w
  4069d8:	mov    rax,QWORD PTR [rbp-0x8]
  4069dc:	mov    rdx,QWORD PTR [rax+0x30]
  4069e0:	add    rdx,0xffffffffffffffdc
  4069e4:	mov    QWORD PTR [rax+0x30],rdx
  4069e8:	mov    rax,QWORD PTR [rbp-0x8]
  4069ec:	mov    ecx,DWORD PTR [rax+0x104]
  4069f2:	add    ecx,0xffffffff
  4069f5:	mov    DWORD PTR [rax+0x104],ecx
  4069fb:	add    rsp,0x10
  4069ff:	pop    rbp
  406a00:	ret    
  406a01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406a10 <flatcc_builder_start_struct@@Base>:
  406a10:	push   rbp
  406a11:	mov    rbp,rsp
  406a14:	sub    rsp,0x20
  406a18:	mov    ax,dx
  406a1b:	mov    QWORD PTR [rbp-0x10],rdi
  406a1f:	mov    QWORD PTR [rbp-0x18],rsi
  406a23:	mov    WORD PTR [rbp-0x1a],ax
  406a27:	mov    rdi,QWORD PTR [rbp-0x10]
  406a2b:	movzx  esi,WORD PTR [rbp-0x1a]
  406a2f:	call   406620 <flatcc_builder_start_buffer@@Base+0x170>
  406a34:	cmp    eax,0x0
  406a37:	je     406a4a <flatcc_builder_start_struct@@Base+0x3a>
  406a3d:	mov    QWORD PTR [rbp-0x8],0x0
  406a45:	jmp    406a79 <flatcc_builder_start_struct@@Base+0x69>
  406a4a:	mov    rax,QWORD PTR [rbp-0x10]
  406a4e:	mov    rax,QWORD PTR [rax+0x30]
  406a52:	mov    WORD PTR [rax+0xe],0x2
  406a58:	mov    rdi,QWORD PTR [rbp-0x10]
  406a5c:	mov    esi,0xfffffffc
  406a61:	call   406a90 <flatcc_builder_start_struct@@Base+0x80>
  406a66:	mov    rdi,QWORD PTR [rbp-0x10]
  406a6a:	mov    rax,QWORD PTR [rbp-0x18]
  406a6e:	mov    esi,eax
  406a70:	call   406b10 <flatcc_builder_start_struct@@Base+0x100>
  406a75:	mov    QWORD PTR [rbp-0x8],rax
  406a79:	mov    rax,QWORD PTR [rbp-0x8]
  406a7d:	add    rsp,0x20
  406a81:	pop    rbp
  406a82:	ret    
  406a83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a8d:	nop    DWORD PTR [rax]
  406a90:	push   rbp
  406a91:	mov    rbp,rsp
  406a94:	mov    QWORD PTR [rbp-0x8],rdi
  406a98:	mov    DWORD PTR [rbp-0xc],esi
  406a9b:	mov    rdi,QWORD PTR [rbp-0x8]
  406a9f:	add    rdi,0x58
  406aa3:	add    rdi,0x10
  406aa7:	mov    QWORD PTR [rbp-0x18],rdi
  406aab:	mov    rdi,QWORD PTR [rbp-0x8]
  406aaf:	mov    rdi,QWORD PTR [rdi+0x68]
  406ab3:	mov    rax,QWORD PTR [rbp-0x8]
  406ab7:	mov    esi,DWORD PTR [rax+0x28]
  406aba:	mov    eax,esi
  406abc:	add    rdi,rax
  406abf:	mov    rax,QWORD PTR [rbp-0x8]
  406ac3:	mov    QWORD PTR [rax+0x18],rdi
  406ac7:	mov    rax,QWORD PTR [rbp-0x18]
  406acb:	mov    rax,QWORD PTR [rax+0x8]
  406acf:	mov    esi,eax
  406ad1:	mov    rax,QWORD PTR [rbp-0x8]
  406ad5:	sub    esi,DWORD PTR [rax+0x28]
  406ad8:	mov    rax,QWORD PTR [rbp-0x8]
  406adc:	mov    DWORD PTR [rax+0x24],esi
  406adf:	mov    rax,QWORD PTR [rbp-0x8]
  406ae3:	mov    esi,DWORD PTR [rax+0x24]
  406ae6:	cmp    esi,DWORD PTR [rbp-0xc]
  406ae9:	jbe    406af9 <flatcc_builder_start_struct@@Base+0xe9>
  406aef:	mov    eax,DWORD PTR [rbp-0xc]
  406af2:	mov    rcx,QWORD PTR [rbp-0x8]
  406af6:	mov    DWORD PTR [rcx+0x24],eax
  406af9:	mov    eax,DWORD PTR [rbp-0xc]
  406afc:	mov    rcx,QWORD PTR [rbp-0x8]
  406b00:	mov    rcx,QWORD PTR [rcx+0x30]
  406b04:	mov    DWORD PTR [rcx+0x4],eax
  406b07:	pop    rbp
  406b08:	ret    
  406b09:	nop    DWORD PTR [rax+0x0]
  406b10:	push   rbp
  406b11:	mov    rbp,rsp
  406b14:	sub    rsp,0x20
  406b18:	mov    QWORD PTR [rbp-0x10],rdi
  406b1c:	mov    DWORD PTR [rbp-0x14],esi
  406b1f:	mov    rdi,QWORD PTR [rbp-0x10]
  406b23:	mov    esi,DWORD PTR [rdi+0x20]
  406b26:	mov    edi,esi
  406b28:	mov    QWORD PTR [rbp-0x20],rdi
  406b2c:	mov    esi,DWORD PTR [rbp-0x14]
  406b2f:	mov    rdi,QWORD PTR [rbp-0x10]
  406b33:	add    esi,DWORD PTR [rdi+0x20]
  406b36:	mov    DWORD PTR [rdi+0x20],esi
  406b39:	mov    rdi,QWORD PTR [rbp-0x10]
  406b3d:	cmp    esi,DWORD PTR [rdi+0x24]
  406b40:	jb     406b7d <flatcc_builder_start_struct@@Base+0x16d>
  406b46:	mov    rdi,QWORD PTR [rbp-0x10]
  406b4a:	mov    rax,QWORD PTR [rbp-0x10]
  406b4e:	mov    ecx,DWORD PTR [rax+0x20]
  406b51:	add    ecx,0x1
  406b54:	mov    ecx,ecx
  406b56:	mov    esi,ecx
  406b58:	mov    edx,0xfffffffc
  406b5d:	call   40ab30 <flatcc_builder_get_emit_context@@Base+0x50>
  406b62:	cmp    eax,0x0
  406b65:	je     406b78 <flatcc_builder_start_struct@@Base+0x168>
  406b6b:	mov    QWORD PTR [rbp-0x8],0x0
  406b73:	jmp    406b8d <flatcc_builder_start_struct@@Base+0x17d>
  406b78:	jmp    406b7d <flatcc_builder_start_struct@@Base+0x16d>
  406b7d:	mov    rax,QWORD PTR [rbp-0x10]
  406b81:	mov    rax,QWORD PTR [rax+0x18]
  406b85:	add    rax,QWORD PTR [rbp-0x20]
  406b89:	mov    QWORD PTR [rbp-0x8],rax
  406b8d:	mov    rax,QWORD PTR [rbp-0x8]
  406b91:	add    rsp,0x20
  406b95:	pop    rbp
  406b96:	ret    
  406b97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406ba0 <flatcc_builder_struct_edit@@Base>:
  406ba0:	push   rbp
  406ba1:	mov    rbp,rsp
  406ba4:	mov    QWORD PTR [rbp-0x8],rdi
  406ba8:	mov    rdi,QWORD PTR [rbp-0x8]
  406bac:	mov    rax,QWORD PTR [rdi+0x18]
  406bb0:	pop    rbp
  406bb1:	ret    
  406bb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406bbc:	nop    DWORD PTR [rax+0x0]

0000000000406bc0 <flatcc_builder_end_struct@@Base>:
  406bc0:	push   rbp
  406bc1:	mov    rbp,rsp
  406bc4:	sub    rsp,0x20
  406bc8:	mov    QWORD PTR [rbp-0x10],rdi
  406bcc:	mov    rdi,QWORD PTR [rbp-0x10]
  406bd0:	mov    rdi,QWORD PTR [rdi+0x30]
  406bd4:	movzx  eax,WORD PTR [rdi+0xe]
  406bd8:	cmp    eax,0x2
  406bdb:	jne    406be6 <flatcc_builder_end_struct@@Base+0x26>
  406be1:	jmp    406c05 <flatcc_builder_end_struct@@Base+0x45>
  406be6:	lea    rdi,[rip+0xbc63]        # 412850 <flatcc_builder_padding_base@@Base+0x4e0>
  406bed:	lea    rsi,[rip+0xb98e]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  406bf4:	mov    edx,0x368
  406bf9:	lea    rcx,[rip+0xbc7c]        # 41287c <flatcc_builder_padding_base@@Base+0x50c>
  406c00:	call   403060 <__assert_fail@plt>
  406c05:	mov    rdi,QWORD PTR [rbp-0x10]
  406c09:	mov    rax,QWORD PTR [rbp-0x10]
  406c0d:	mov    rsi,QWORD PTR [rax+0x18]
  406c11:	mov    rax,QWORD PTR [rbp-0x10]
  406c15:	mov    ecx,DWORD PTR [rax+0x20]
  406c18:	mov    edx,ecx
  406c1a:	mov    rax,QWORD PTR [rbp-0x10]
  406c1e:	movzx  ecx,WORD PTR [rax+0xea]
  406c25:	call   406330 <flatcc_builder_create_struct@@Base>
  406c2a:	xor    ecx,ecx
  406c2c:	mov    DWORD PTR [rbp-0x14],eax
  406c2f:	cmp    ecx,eax
  406c31:	jne    406c43 <flatcc_builder_end_struct@@Base+0x83>
  406c37:	mov    DWORD PTR [rbp-0x4],0x0
  406c3e:	jmp    406c52 <flatcc_builder_end_struct@@Base+0x92>
  406c43:	mov    rdi,QWORD PTR [rbp-0x10]
  406c47:	call   406950 <flatcc_builder_end_buffer@@Base+0x160>
  406c4c:	mov    eax,DWORD PTR [rbp-0x14]
  406c4f:	mov    DWORD PTR [rbp-0x4],eax
  406c52:	mov    eax,DWORD PTR [rbp-0x4]
  406c55:	add    rsp,0x20
  406c59:	pop    rbp
  406c5a:	ret    
  406c5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406c60 <flatcc_builder_extend_vector@@Base>:
  406c60:	push   rbp
  406c61:	mov    rbp,rsp
  406c64:	sub    rsp,0x20
  406c68:	mov    QWORD PTR [rbp-0x10],rdi
  406c6c:	mov    QWORD PTR [rbp-0x18],rsi
  406c70:	mov    rdi,QWORD PTR [rbp-0x10]
  406c74:	mov    rsi,QWORD PTR [rbp-0x18]
  406c78:	mov    eax,esi
  406c7a:	mov    rsi,QWORD PTR [rbp-0x10]
  406c7e:	mov    rsi,QWORD PTR [rsi+0x30]
  406c82:	mov    edx,DWORD PTR [rsi+0x18]
  406c85:	mov    esi,eax
  406c87:	call   406cd0 <flatcc_builder_extend_vector@@Base+0x70>
  406c8c:	cmp    eax,0x0
  406c8f:	je     406ca2 <flatcc_builder_extend_vector@@Base+0x42>
  406c95:	mov    QWORD PTR [rbp-0x8],0x0
  406c9d:	jmp    406cc5 <flatcc_builder_extend_vector@@Base+0x65>
  406ca2:	mov    rdi,QWORD PTR [rbp-0x10]
  406ca6:	mov    rax,QWORD PTR [rbp-0x10]
  406caa:	mov    rax,QWORD PTR [rax+0x30]
  406cae:	mov    ecx,DWORD PTR [rax+0x10]
  406cb1:	mov    rax,QWORD PTR [rbp-0x18]
  406cb5:	mov    edx,eax
  406cb7:	imul   ecx,edx
  406cba:	mov    esi,ecx
  406cbc:	call   406b10 <flatcc_builder_start_struct@@Base+0x100>
  406cc1:	mov    QWORD PTR [rbp-0x8],rax
  406cc5:	mov    rax,QWORD PTR [rbp-0x8]
  406cc9:	add    rsp,0x20
  406ccd:	pop    rbp
  406cce:	ret    
  406ccf:	nop
  406cd0:	push   rbp
  406cd1:	mov    rbp,rsp
  406cd4:	sub    rsp,0x20
  406cd8:	mov    QWORD PTR [rbp-0x10],rdi
  406cdc:	mov    DWORD PTR [rbp-0x14],esi
  406cdf:	mov    DWORD PTR [rbp-0x18],edx
  406ce2:	mov    rdi,QWORD PTR [rbp-0x10]
  406ce6:	mov    rdi,QWORD PTR [rdi+0x30]
  406cea:	mov    edx,DWORD PTR [rdi+0x14]
  406ced:	mov    DWORD PTR [rbp-0x1c],edx
  406cf0:	mov    edx,DWORD PTR [rbp-0x1c]
  406cf3:	add    edx,DWORD PTR [rbp-0x14]
  406cf6:	mov    DWORD PTR [rbp-0x20],edx
  406cf9:	mov    edx,DWORD PTR [rbp-0x1c]
  406cfc:	cmp    edx,DWORD PTR [rbp-0x20]
  406cff:	ja     406d11 <flatcc_builder_extend_vector@@Base+0xb1>
  406d05:	mov    eax,DWORD PTR [rbp-0x20]
  406d08:	cmp    eax,DWORD PTR [rbp-0x18]
  406d0b:	jbe    406d59 <flatcc_builder_extend_vector@@Base+0xf9>
  406d11:	mov    eax,DWORD PTR [rbp-0x1c]
  406d14:	cmp    eax,DWORD PTR [rbp-0x20]
  406d17:	ja     406d2e <flatcc_builder_extend_vector@@Base+0xce>
  406d1d:	mov    eax,DWORD PTR [rbp-0x20]
  406d20:	cmp    eax,DWORD PTR [rbp-0x18]
  406d23:	ja     406d2e <flatcc_builder_extend_vector@@Base+0xce>
  406d29:	jmp    406d4d <flatcc_builder_extend_vector@@Base+0xed>
  406d2e:	lea    rdi,[rip+0xc916]        # 41364b <flatcc_builder_padding_base@@Base+0x12db>
  406d35:	lea    rsi,[rip+0xb846]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  406d3c:	mov    edx,0x37c
  406d41:	lea    rcx,[rip+0xc91e]        # 413666 <flatcc_builder_padding_base@@Base+0x12f6>
  406d48:	call   403060 <__assert_fail@plt>
  406d4d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406d54:	jmp    406d6e <flatcc_builder_extend_vector@@Base+0x10e>
  406d59:	mov    eax,DWORD PTR [rbp-0x20]
  406d5c:	mov    rcx,QWORD PTR [rbp-0x10]
  406d60:	mov    rcx,QWORD PTR [rcx+0x30]
  406d64:	mov    DWORD PTR [rcx+0x14],eax
  406d67:	mov    DWORD PTR [rbp-0x4],0x0
  406d6e:	mov    eax,DWORD PTR [rbp-0x4]
  406d71:	add    rsp,0x20
  406d75:	pop    rbp
  406d76:	ret    
  406d77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406d80 <flatcc_builder_vector_push@@Base>:
  406d80:	push   rbp
  406d81:	mov    rbp,rsp
  406d84:	sub    rsp,0x20
  406d88:	mov    QWORD PTR [rbp-0x10],rdi
  406d8c:	mov    QWORD PTR [rbp-0x18],rsi
  406d90:	mov    rsi,QWORD PTR [rbp-0x10]
  406d94:	mov    rsi,QWORD PTR [rsi+0x30]
  406d98:	movzx  eax,WORD PTR [rsi+0xe]
  406d9c:	cmp    eax,0x4
  406d9f:	jne    406daa <flatcc_builder_vector_push@@Base+0x2a>
  406da5:	jmp    406dc9 <flatcc_builder_vector_push@@Base+0x49>
  406daa:	lea    rdi,[rip+0xbb0e]        # 4128bf <flatcc_builder_padding_base@@Base+0x54f>
  406db1:	lea    rsi,[rip+0xb7ca]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  406db8:	mov    edx,0x38b
  406dbd:	lea    rcx,[rip+0xbb27]        # 4128eb <flatcc_builder_padding_base@@Base+0x57b>
  406dc4:	call   403060 <__assert_fail@plt>
  406dc9:	mov    rax,QWORD PTR [rbp-0x10]
  406dcd:	mov    rax,QWORD PTR [rax+0x30]
  406dd1:	mov    ecx,DWORD PTR [rax+0x14]
  406dd4:	mov    rax,QWORD PTR [rbp-0x10]
  406dd8:	mov    rax,QWORD PTR [rax+0x30]
  406ddc:	cmp    ecx,DWORD PTR [rax+0x18]
  406ddf:	jbe    406e32 <flatcc_builder_vector_push@@Base+0xb2>
  406de5:	mov    rax,QWORD PTR [rbp-0x10]
  406de9:	mov    rax,QWORD PTR [rax+0x30]
  406ded:	mov    ecx,DWORD PTR [rax+0x14]
  406df0:	mov    rax,QWORD PTR [rbp-0x10]
  406df4:	mov    rax,QWORD PTR [rax+0x30]
  406df8:	cmp    ecx,DWORD PTR [rax+0x18]
  406dfb:	ja     406e06 <flatcc_builder_vector_push@@Base+0x86>
  406e01:	jmp    406e25 <flatcc_builder_vector_push@@Base+0xa5>
  406e06:	lea    rdi,[rip+0xbb21]        # 41292e <flatcc_builder_padding_base@@Base+0x5be>
  406e0d:	lea    rsi,[rip+0xb76e]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  406e14:	mov    edx,0x38c
  406e19:	lea    rcx,[rip+0xbacb]        # 4128eb <flatcc_builder_padding_base@@Base+0x57b>
  406e20:	call   403060 <__assert_fail@plt>
  406e25:	mov    QWORD PTR [rbp-0x8],0x0
  406e2d:	jmp    406e5f <flatcc_builder_vector_push@@Base+0xdf>
  406e32:	mov    rax,QWORD PTR [rbp-0x10]
  406e36:	mov    rax,QWORD PTR [rax+0x30]
  406e3a:	mov    ecx,DWORD PTR [rax+0x14]
  406e3d:	add    ecx,0x1
  406e40:	mov    DWORD PTR [rax+0x14],ecx
  406e43:	mov    rdi,QWORD PTR [rbp-0x10]
  406e47:	mov    rsi,QWORD PTR [rbp-0x18]
  406e4b:	mov    rax,QWORD PTR [rbp-0x10]
  406e4f:	mov    rax,QWORD PTR [rax+0x30]
  406e53:	mov    edx,DWORD PTR [rax+0x10]
  406e56:	call   406e70 <flatcc_builder_vector_push@@Base+0xf0>
  406e5b:	mov    QWORD PTR [rbp-0x8],rax
  406e5f:	mov    rax,QWORD PTR [rbp-0x8]
  406e63:	add    rsp,0x20
  406e67:	pop    rbp
  406e68:	ret    
  406e69:	nop    DWORD PTR [rax+0x0]
  406e70:	push   rbp
  406e71:	mov    rbp,rsp
  406e74:	sub    rsp,0x30
  406e78:	mov    QWORD PTR [rbp-0x10],rdi
  406e7c:	mov    QWORD PTR [rbp-0x18],rsi
  406e80:	mov    DWORD PTR [rbp-0x1c],edx
  406e83:	mov    rdi,QWORD PTR [rbp-0x10]
  406e87:	mov    esi,DWORD PTR [rbp-0x1c]
  406e8a:	call   406b10 <flatcc_builder_start_struct@@Base+0x100>
  406e8f:	mov    QWORD PTR [rbp-0x28],rax
  406e93:	cmp    rax,0x0
  406e97:	jne    406eaa <flatcc_builder_vector_push@@Base+0x12a>
  406e9d:	mov    QWORD PTR [rbp-0x8],0x0
  406ea5:	jmp    406ec4 <flatcc_builder_vector_push@@Base+0x144>
  406eaa:	mov    rdi,QWORD PTR [rbp-0x28]
  406eae:	mov    rsi,QWORD PTR [rbp-0x18]
  406eb2:	mov    eax,DWORD PTR [rbp-0x1c]
  406eb5:	mov    edx,eax
  406eb7:	call   4030b0 <memcpy@plt>
  406ebc:	mov    rdx,QWORD PTR [rbp-0x28]
  406ec0:	mov    QWORD PTR [rbp-0x8],rdx
  406ec4:	mov    rax,QWORD PTR [rbp-0x8]
  406ec8:	add    rsp,0x30
  406ecc:	pop    rbp
  406ecd:	ret    
  406ece:	xchg   ax,ax

0000000000406ed0 <flatcc_builder_append_vector@@Base>:
  406ed0:	push   rbp
  406ed1:	mov    rbp,rsp
  406ed4:	sub    rsp,0x20
  406ed8:	mov    QWORD PTR [rbp-0x10],rdi
  406edc:	mov    QWORD PTR [rbp-0x18],rsi
  406ee0:	mov    QWORD PTR [rbp-0x20],rdx
  406ee4:	mov    rdx,QWORD PTR [rbp-0x10]
  406ee8:	mov    rdx,QWORD PTR [rdx+0x30]
  406eec:	movzx  eax,WORD PTR [rdx+0xe]
  406ef0:	cmp    eax,0x4
  406ef3:	jne    406efe <flatcc_builder_append_vector@@Base+0x2e>
  406ef9:	jmp    406f1d <flatcc_builder_append_vector@@Base+0x4d>
  406efe:	lea    rdi,[rip+0xb9ba]        # 4128bf <flatcc_builder_padding_base@@Base+0x54f>
  406f05:	lea    rsi,[rip+0xb676]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  406f0c:	mov    edx,0x393
  406f11:	lea    rcx,[rip+0xba53]        # 41296b <flatcc_builder_padding_base@@Base+0x5fb>
  406f18:	call   403060 <__assert_fail@plt>
  406f1d:	mov    rdi,QWORD PTR [rbp-0x10]
  406f21:	mov    rax,QWORD PTR [rbp-0x20]
  406f25:	mov    ecx,eax
  406f27:	mov    rax,QWORD PTR [rbp-0x10]
  406f2b:	mov    rax,QWORD PTR [rax+0x30]
  406f2f:	mov    edx,DWORD PTR [rax+0x18]
  406f32:	mov    esi,ecx
  406f34:	call   406cd0 <flatcc_builder_extend_vector@@Base+0x70>
  406f39:	cmp    eax,0x0
  406f3c:	je     406f4f <flatcc_builder_append_vector@@Base+0x7f>
  406f42:	mov    QWORD PTR [rbp-0x8],0x0
  406f4a:	jmp    406f76 <flatcc_builder_append_vector@@Base+0xa6>
  406f4f:	mov    rdi,QWORD PTR [rbp-0x10]
  406f53:	mov    rsi,QWORD PTR [rbp-0x18]
  406f57:	mov    rax,QWORD PTR [rbp-0x10]
  406f5b:	mov    rax,QWORD PTR [rax+0x30]
  406f5f:	mov    ecx,DWORD PTR [rax+0x10]
  406f62:	mov    rax,QWORD PTR [rbp-0x20]
  406f66:	mov    edx,eax
  406f68:	imul   ecx,edx
  406f6b:	mov    edx,ecx
  406f6d:	call   406e70 <flatcc_builder_vector_push@@Base+0xf0>
  406f72:	mov    QWORD PTR [rbp-0x8],rax
  406f76:	mov    rax,QWORD PTR [rbp-0x8]
  406f7a:	add    rsp,0x20
  406f7e:	pop    rbp
  406f7f:	ret    

0000000000406f80 <flatcc_builder_extend_offset_vector@@Base>:
  406f80:	push   rbp
  406f81:	mov    rbp,rsp
  406f84:	sub    rsp,0x20
  406f88:	mov    QWORD PTR [rbp-0x10],rdi
  406f8c:	mov    QWORD PTR [rbp-0x18],rsi
  406f90:	mov    rdi,QWORD PTR [rbp-0x10]
  406f94:	mov    rsi,QWORD PTR [rbp-0x18]
  406f98:	mov    eax,esi
  406f9a:	mov    esi,eax
  406f9c:	mov    edx,0x3fffffff
  406fa1:	call   406cd0 <flatcc_builder_extend_vector@@Base+0x70>
  406fa6:	cmp    eax,0x0
  406fa9:	je     406fbc <flatcc_builder_extend_offset_vector@@Base+0x3c>
  406faf:	mov    QWORD PTR [rbp-0x8],0x0
  406fb7:	jmp    406fdb <flatcc_builder_extend_offset_vector@@Base+0x5b>
  406fbc:	mov    rdi,QWORD PTR [rbp-0x10]
  406fc0:	mov    rax,QWORD PTR [rbp-0x18]
  406fc4:	mov    ecx,eax
  406fc6:	mov    ecx,ecx
  406fc8:	mov    eax,ecx
  406fca:	shl    rax,0x2
  406fce:	mov    ecx,eax
  406fd0:	mov    esi,ecx
  406fd2:	call   406b10 <flatcc_builder_start_struct@@Base+0x100>
  406fd7:	mov    QWORD PTR [rbp-0x8],rax
  406fdb:	mov    rax,QWORD PTR [rbp-0x8]
  406fdf:	add    rsp,0x20
  406fe3:	pop    rbp
  406fe4:	ret    
  406fe5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406fef:	nop

0000000000406ff0 <flatcc_builder_offset_vector_push@@Base>:
  406ff0:	push   rbp
  406ff1:	mov    rbp,rsp
  406ff4:	sub    rsp,0x20
  406ff8:	mov    QWORD PTR [rbp-0x10],rdi
  406ffc:	mov    DWORD PTR [rbp-0x14],esi
  406fff:	mov    rdi,QWORD PTR [rbp-0x10]
  407003:	mov    rdi,QWORD PTR [rdi+0x30]
  407007:	movzx  esi,WORD PTR [rdi+0xe]
  40700b:	cmp    esi,0x5
  40700e:	jne    407019 <flatcc_builder_offset_vector_push@@Base+0x29>
  407014:	jmp    407038 <flatcc_builder_offset_vector_push@@Base+0x48>
  407019:	lea    rdi,[rip+0xb998]        # 4129b8 <flatcc_builder_padding_base@@Base+0x648>
  407020:	lea    rsi,[rip+0xb55b]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  407027:	mov    edx,0x3a6
  40702c:	lea    rcx,[rip+0xb9b8]        # 4129eb <flatcc_builder_padding_base@@Base+0x67b>
  407033:	call   403060 <__assert_fail@plt>
  407038:	mov    rax,QWORD PTR [rbp-0x10]
  40703c:	mov    rax,QWORD PTR [rax+0x30]
  407040:	mov    ecx,DWORD PTR [rax+0x14]
  407043:	mov    eax,ecx
  407045:	cmp    rax,0x3fffffff
  40704b:	jne    40705e <flatcc_builder_offset_vector_push@@Base+0x6e>
  407051:	mov    QWORD PTR [rbp-0x8],0x0
  407059:	jmp    4070ac <flatcc_builder_offset_vector_push@@Base+0xbc>
  40705e:	mov    rax,QWORD PTR [rbp-0x10]
  407062:	mov    rax,QWORD PTR [rax+0x30]
  407066:	mov    ecx,DWORD PTR [rax+0x14]
  407069:	add    ecx,0x1
  40706c:	mov    DWORD PTR [rax+0x14],ecx
  40706f:	mov    rdi,QWORD PTR [rbp-0x10]
  407073:	mov    esi,0x4
  407078:	call   406b10 <flatcc_builder_start_struct@@Base+0x100>
  40707d:	xor    ecx,ecx
  40707f:	mov    edi,ecx
  407081:	mov    QWORD PTR [rbp-0x20],rax
  407085:	cmp    rdi,rax
  407088:	jne    40709b <flatcc_builder_offset_vector_push@@Base+0xab>
  40708e:	mov    QWORD PTR [rbp-0x8],0x0
  407096:	jmp    4070ac <flatcc_builder_offset_vector_push@@Base+0xbc>
  40709b:	mov    eax,DWORD PTR [rbp-0x14]
  40709e:	mov    rcx,QWORD PTR [rbp-0x20]
  4070a2:	mov    DWORD PTR [rcx],eax
  4070a4:	mov    rcx,QWORD PTR [rbp-0x20]
  4070a8:	mov    QWORD PTR [rbp-0x8],rcx
  4070ac:	mov    rax,QWORD PTR [rbp-0x8]
  4070b0:	add    rsp,0x20
  4070b4:	pop    rbp
  4070b5:	ret    
  4070b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004070c0 <flatcc_builder_append_offset_vector@@Base>:
  4070c0:	push   rbp
  4070c1:	mov    rbp,rsp
  4070c4:	sub    rsp,0x20
  4070c8:	mov    QWORD PTR [rbp-0x10],rdi
  4070cc:	mov    QWORD PTR [rbp-0x18],rsi
  4070d0:	mov    QWORD PTR [rbp-0x20],rdx
  4070d4:	mov    rdx,QWORD PTR [rbp-0x10]
  4070d8:	mov    rdx,QWORD PTR [rdx+0x30]
  4070dc:	movzx  eax,WORD PTR [rdx+0xe]
  4070e0:	cmp    eax,0x5
  4070e3:	jne    4070ee <flatcc_builder_append_offset_vector@@Base+0x2e>
  4070e9:	jmp    40710d <flatcc_builder_append_offset_vector@@Base+0x4d>
  4070ee:	lea    rdi,[rip+0xb8c3]        # 4129b8 <flatcc_builder_padding_base@@Base+0x648>
  4070f5:	lea    rsi,[rip+0xb486]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4070fc:	mov    edx,0x3b4
  407101:	lea    rcx,[rip+0xb945]        # 412a4d <flatcc_builder_padding_base@@Base+0x6dd>
  407108:	call   403060 <__assert_fail@plt>
  40710d:	mov    rdi,QWORD PTR [rbp-0x10]
  407111:	mov    rax,QWORD PTR [rbp-0x20]
  407115:	mov    ecx,eax
  407117:	mov    esi,ecx
  407119:	mov    edx,0x3fffffff
  40711e:	call   406cd0 <flatcc_builder_extend_vector@@Base+0x70>
  407123:	cmp    eax,0x0
  407126:	je     407139 <flatcc_builder_append_offset_vector@@Base+0x79>
  40712c:	mov    QWORD PTR [rbp-0x8],0x0
  407134:	jmp    40715d <flatcc_builder_append_offset_vector@@Base+0x9d>
  407139:	mov    rdi,QWORD PTR [rbp-0x10]
  40713d:	mov    rax,QWORD PTR [rbp-0x18]
  407141:	mov    rcx,QWORD PTR [rbp-0x20]
  407145:	mov    edx,ecx
  407147:	mov    edx,edx
  407149:	mov    ecx,edx
  40714b:	shl    rcx,0x2
  40714f:	mov    edx,ecx
  407151:	mov    rsi,rax
  407154:	call   406e70 <flatcc_builder_vector_push@@Base+0xf0>
  407159:	mov    QWORD PTR [rbp-0x8],rax
  40715d:	mov    rax,QWORD PTR [rbp-0x8]
  407161:	add    rsp,0x20
  407165:	pop    rbp
  407166:	ret    
  407167:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407170 <flatcc_builder_extend_string@@Base>:
  407170:	push   rbp
  407171:	mov    rbp,rsp
  407174:	sub    rsp,0x20
  407178:	mov    QWORD PTR [rbp-0x10],rdi
  40717c:	mov    QWORD PTR [rbp-0x18],rsi
  407180:	mov    rsi,QWORD PTR [rbp-0x10]
  407184:	mov    rsi,QWORD PTR [rsi+0x30]
  407188:	movzx  eax,WORD PTR [rsi+0xe]
  40718c:	cmp    eax,0x6
  40718f:	jne    40719a <flatcc_builder_extend_string@@Base+0x2a>
  407195:	jmp    4071b9 <flatcc_builder_extend_string@@Base+0x49>
  40719a:	lea    rdi,[rip+0xb920]        # 412ac1 <flatcc_builder_padding_base@@Base+0x751>
  4071a1:	lea    rsi,[rip+0xb3da]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4071a8:	mov    edx,0x3bd
  4071ad:	lea    rcx,[rip+0xb939]        # 412aed <flatcc_builder_padding_base@@Base+0x77d>
  4071b4:	call   403060 <__assert_fail@plt>
  4071b9:	mov    rdi,QWORD PTR [rbp-0x10]
  4071bd:	mov    rax,QWORD PTR [rbp-0x18]
  4071c1:	mov    ecx,eax
  4071c3:	mov    esi,ecx
  4071c5:	mov    edx,0xffffffff
  4071ca:	call   406cd0 <flatcc_builder_extend_vector@@Base+0x70>
  4071cf:	cmp    eax,0x0
  4071d2:	je     4071e5 <flatcc_builder_extend_string@@Base+0x75>
  4071d8:	mov    QWORD PTR [rbp-0x8],0x0
  4071e0:	jmp    4071fa <flatcc_builder_extend_string@@Base+0x8a>
  4071e5:	mov    rdi,QWORD PTR [rbp-0x10]
  4071e9:	mov    rax,QWORD PTR [rbp-0x18]
  4071ed:	mov    ecx,eax
  4071ef:	mov    esi,ecx
  4071f1:	call   406b10 <flatcc_builder_start_struct@@Base+0x100>
  4071f6:	mov    QWORD PTR [rbp-0x8],rax
  4071fa:	mov    rax,QWORD PTR [rbp-0x8]
  4071fe:	add    rsp,0x20
  407202:	pop    rbp
  407203:	ret    
  407204:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40720e:	xchg   ax,ax

0000000000407210 <flatcc_builder_append_string@@Base>:
  407210:	push   rbp
  407211:	mov    rbp,rsp
  407214:	sub    rsp,0x20
  407218:	mov    QWORD PTR [rbp-0x10],rdi
  40721c:	mov    QWORD PTR [rbp-0x18],rsi
  407220:	mov    QWORD PTR [rbp-0x20],rdx
  407224:	mov    rdx,QWORD PTR [rbp-0x10]
  407228:	mov    rdx,QWORD PTR [rdx+0x30]
  40722c:	movzx  eax,WORD PTR [rdx+0xe]
  407230:	cmp    eax,0x6
  407233:	jne    40723e <flatcc_builder_append_string@@Base+0x2e>
  407239:	jmp    40725d <flatcc_builder_append_string@@Base+0x4d>
  40723e:	lea    rdi,[rip+0xb87c]        # 412ac1 <flatcc_builder_padding_base@@Base+0x751>
  407245:	lea    rsi,[rip+0xb336]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40724c:	mov    edx,0x3c6
  407251:	lea    rcx,[rip+0xb8d4]        # 412b2c <flatcc_builder_padding_base@@Base+0x7bc>
  407258:	call   403060 <__assert_fail@plt>
  40725d:	mov    rdi,QWORD PTR [rbp-0x10]
  407261:	mov    rax,QWORD PTR [rbp-0x20]
  407265:	mov    ecx,eax
  407267:	mov    esi,ecx
  407269:	mov    edx,0xffffffff
  40726e:	call   406cd0 <flatcc_builder_extend_vector@@Base+0x70>
  407273:	cmp    eax,0x0
  407276:	je     407289 <flatcc_builder_append_string@@Base+0x79>
  40727c:	mov    QWORD PTR [rbp-0x8],0x0
  407284:	jmp    4072a2 <flatcc_builder_append_string@@Base+0x92>
  407289:	mov    rdi,QWORD PTR [rbp-0x10]
  40728d:	mov    rsi,QWORD PTR [rbp-0x18]
  407291:	mov    rax,QWORD PTR [rbp-0x20]
  407295:	mov    ecx,eax
  407297:	mov    edx,ecx
  407299:	call   406e70 <flatcc_builder_vector_push@@Base+0xf0>
  40729e:	mov    QWORD PTR [rbp-0x8],rax
  4072a2:	mov    rax,QWORD PTR [rbp-0x8]
  4072a6:	add    rsp,0x20
  4072aa:	pop    rbp
  4072ab:	ret    
  4072ac:	nop    DWORD PTR [rax+0x0]

00000000004072b0 <flatcc_builder_append_string_str@@Base>:
  4072b0:	push   rbp
  4072b1:	mov    rbp,rsp
  4072b4:	sub    rsp,0x20
  4072b8:	mov    QWORD PTR [rbp-0x8],rdi
  4072bc:	mov    QWORD PTR [rbp-0x10],rsi
  4072c0:	mov    rdi,QWORD PTR [rbp-0x8]
  4072c4:	mov    rsi,QWORD PTR [rbp-0x10]
  4072c8:	mov    rax,QWORD PTR [rbp-0x10]
  4072cc:	mov    QWORD PTR [rbp-0x18],rdi
  4072d0:	mov    rdi,rax
  4072d3:	mov    QWORD PTR [rbp-0x20],rsi
  4072d7:	call   403050 <strlen@plt>
  4072dc:	mov    rdi,QWORD PTR [rbp-0x18]
  4072e0:	mov    rsi,QWORD PTR [rbp-0x20]
  4072e4:	mov    rdx,rax
  4072e7:	call   407210 <flatcc_builder_append_string@@Base>
  4072ec:	add    rsp,0x20
  4072f0:	pop    rbp
  4072f1:	ret    
  4072f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4072fc:	nop    DWORD PTR [rax+0x0]

0000000000407300 <flatcc_builder_append_string_strn@@Base>:
  407300:	push   rbp
  407301:	mov    rbp,rsp
  407304:	sub    rsp,0x30
  407308:	mov    QWORD PTR [rbp-0x8],rdi
  40730c:	mov    QWORD PTR [rbp-0x10],rsi
  407310:	mov    QWORD PTR [rbp-0x18],rdx
  407314:	mov    rdi,QWORD PTR [rbp-0x8]
  407318:	mov    rsi,QWORD PTR [rbp-0x10]
  40731c:	mov    rdx,QWORD PTR [rbp-0x10]
  407320:	mov    rax,QWORD PTR [rbp-0x18]
  407324:	mov    QWORD PTR [rbp-0x20],rdi
  407328:	mov    rdi,rdx
  40732b:	mov    QWORD PTR [rbp-0x28],rsi
  40732f:	mov    rsi,rax
  407332:	call   407350 <flatcc_builder_append_string_strn@@Base+0x50>
  407337:	mov    rdi,QWORD PTR [rbp-0x20]
  40733b:	mov    rsi,QWORD PTR [rbp-0x28]
  40733f:	mov    rdx,rax
  407342:	call   407210 <flatcc_builder_append_string@@Base>
  407347:	add    rsp,0x30
  40734b:	pop    rbp
  40734c:	ret    
  40734d:	nop    DWORD PTR [rax]
  407350:	push   rbp
  407351:	mov    rbp,rsp
  407354:	sub    rsp,0x20
  407358:	mov    QWORD PTR [rbp-0x8],rdi
  40735c:	mov    QWORD PTR [rbp-0x10],rsi
  407360:	mov    rdi,QWORD PTR [rbp-0x8]
  407364:	mov    rdx,QWORD PTR [rbp-0x10]
  407368:	xor    esi,esi
  40736a:	call   403080 <memchr@plt>
  40736f:	mov    QWORD PTR [rbp-0x18],rax
  407373:	cmp    QWORD PTR [rbp-0x18],0x0
  407378:	je     407392 <flatcc_builder_append_string_strn@@Base+0x92>
  40737e:	mov    rax,QWORD PTR [rbp-0x18]
  407382:	mov    rcx,QWORD PTR [rbp-0x8]
  407386:	sub    rax,rcx
  407389:	mov    QWORD PTR [rbp-0x20],rax
  40738d:	jmp    40739a <flatcc_builder_append_string_strn@@Base+0x9a>
  407392:	mov    rax,QWORD PTR [rbp-0x10]
  407396:	mov    QWORD PTR [rbp-0x20],rax
  40739a:	mov    rax,QWORD PTR [rbp-0x20]
  40739e:	add    rsp,0x20
  4073a2:	pop    rbp
  4073a3:	ret    
  4073a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073ae:	xchg   ax,ax

00000000004073b0 <flatcc_builder_truncate_vector@@Base>:
  4073b0:	push   rbp
  4073b1:	mov    rbp,rsp
  4073b4:	sub    rsp,0x20
  4073b8:	mov    QWORD PTR [rbp-0x10],rdi
  4073bc:	mov    QWORD PTR [rbp-0x18],rsi
  4073c0:	mov    rsi,QWORD PTR [rbp-0x10]
  4073c4:	mov    rsi,QWORD PTR [rsi+0x30]
  4073c8:	movzx  eax,WORD PTR [rsi+0xe]
  4073cc:	cmp    eax,0x4
  4073cf:	jne    4073da <flatcc_builder_truncate_vector@@Base+0x2a>
  4073d5:	jmp    4073f9 <flatcc_builder_truncate_vector@@Base+0x49>
  4073da:	lea    rdi,[rip+0xb4de]        # 4128bf <flatcc_builder_padding_base@@Base+0x54f>
  4073e1:	lea    rsi,[rip+0xb19a]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4073e8:	mov    edx,0x3d9
  4073ed:	lea    rcx,[rip+0xb785]        # 412b79 <flatcc_builder_padding_base@@Base+0x809>
  4073f4:	call   403060 <__assert_fail@plt>
  4073f9:	mov    rax,QWORD PTR [rbp-0x10]
  4073fd:	mov    rax,QWORD PTR [rax+0x30]
  407401:	mov    ecx,DWORD PTR [rax+0x14]
  407404:	mov    eax,ecx
  407406:	cmp    rax,QWORD PTR [rbp-0x18]
  40740a:	jae    407457 <flatcc_builder_truncate_vector@@Base+0xa7>
  407410:	mov    rax,QWORD PTR [rbp-0x10]
  407414:	mov    rax,QWORD PTR [rax+0x30]
  407418:	mov    ecx,DWORD PTR [rax+0x14]
  40741b:	mov    eax,ecx
  40741d:	cmp    rax,QWORD PTR [rbp-0x18]
  407421:	jb     40742c <flatcc_builder_truncate_vector@@Base+0x7c>
  407427:	jmp    40744b <flatcc_builder_truncate_vector@@Base+0x9b>
  40742c:	lea    rdi,[rip+0xb785]        # 412bb8 <flatcc_builder_padding_base@@Base+0x848>
  407433:	lea    rsi,[rip+0xb148]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40743a:	mov    edx,0x3da
  40743f:	lea    rcx,[rip+0xb733]        # 412b79 <flatcc_builder_padding_base@@Base+0x809>
  407446:	call   403060 <__assert_fail@plt>
  40744b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407452:	jmp    407493 <flatcc_builder_truncate_vector@@Base+0xe3>
  407457:	mov    rax,QWORD PTR [rbp-0x18]
  40745b:	mov    ecx,eax
  40745d:	mov    rax,QWORD PTR [rbp-0x10]
  407461:	mov    rax,QWORD PTR [rax+0x30]
  407465:	mov    edx,DWORD PTR [rax+0x14]
  407468:	sub    edx,ecx
  40746a:	mov    DWORD PTR [rax+0x14],edx
  40746d:	mov    rdi,QWORD PTR [rbp-0x10]
  407471:	mov    rax,QWORD PTR [rbp-0x10]
  407475:	mov    rax,QWORD PTR [rax+0x30]
  407479:	mov    ecx,DWORD PTR [rax+0x10]
  40747c:	mov    rax,QWORD PTR [rbp-0x18]
  407480:	mov    edx,eax
  407482:	imul   ecx,edx
  407485:	mov    esi,ecx
  407487:	call   4074a0 <flatcc_builder_truncate_vector@@Base+0xf0>
  40748c:	mov    DWORD PTR [rbp-0x4],0x0
  407493:	mov    eax,DWORD PTR [rbp-0x4]
  407496:	add    rsp,0x20
  40749a:	pop    rbp
  40749b:	ret    
  40749c:	nop    DWORD PTR [rax+0x0]
  4074a0:	push   rbp
  4074a1:	mov    rbp,rsp
  4074a4:	sub    rsp,0x10
  4074a8:	xor    eax,eax
  4074aa:	mov    QWORD PTR [rbp-0x8],rdi
  4074ae:	mov    DWORD PTR [rbp-0xc],esi
  4074b1:	mov    esi,DWORD PTR [rbp-0xc]
  4074b4:	mov    rdi,QWORD PTR [rbp-0x8]
  4074b8:	mov    ecx,DWORD PTR [rdi+0x20]
  4074bb:	sub    ecx,esi
  4074bd:	mov    DWORD PTR [rdi+0x20],ecx
  4074c0:	mov    rdi,QWORD PTR [rbp-0x8]
  4074c4:	mov    rdi,QWORD PTR [rdi+0x18]
  4074c8:	mov    rdx,QWORD PTR [rbp-0x8]
  4074cc:	mov    ecx,DWORD PTR [rdx+0x20]
  4074cf:	mov    edx,ecx
  4074d1:	add    rdi,rdx
  4074d4:	mov    ecx,DWORD PTR [rbp-0xc]
  4074d7:	mov    edx,ecx
  4074d9:	mov    esi,eax
  4074db:	call   403070 <memset@plt>
  4074e0:	add    rsp,0x10
  4074e4:	pop    rbp
  4074e5:	ret    
  4074e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004074f0 <flatcc_builder_truncate_offset_vector@@Base>:
  4074f0:	push   rbp
  4074f1:	mov    rbp,rsp
  4074f4:	sub    rsp,0x20
  4074f8:	mov    QWORD PTR [rbp-0x10],rdi
  4074fc:	mov    QWORD PTR [rbp-0x18],rsi
  407500:	mov    rsi,QWORD PTR [rbp-0x10]
  407504:	mov    rsi,QWORD PTR [rsi+0x30]
  407508:	movzx  eax,WORD PTR [rsi+0xe]
  40750c:	cmp    eax,0x5
  40750f:	jne    40751a <flatcc_builder_truncate_offset_vector@@Base+0x2a>
  407515:	jmp    407539 <flatcc_builder_truncate_offset_vector@@Base+0x49>
  40751a:	lea    rdi,[rip+0xb497]        # 4129b8 <flatcc_builder_padding_base@@Base+0x648>
  407521:	lea    rsi,[rip+0xb05a]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  407528:	mov    edx,0x3e2
  40752d:	lea    rcx,[rip+0xb6a8]        # 412bdc <flatcc_builder_padding_base@@Base+0x86c>
  407534:	call   403060 <__assert_fail@plt>
  407539:	mov    rax,QWORD PTR [rbp-0x10]
  40753d:	mov    rax,QWORD PTR [rax+0x30]
  407541:	mov    ecx,DWORD PTR [rax+0x14]
  407544:	mov    rax,QWORD PTR [rbp-0x18]
  407548:	mov    edx,eax
  40754a:	cmp    ecx,edx
  40754c:	jae    40759b <flatcc_builder_truncate_offset_vector@@Base+0xab>
  407552:	mov    rax,QWORD PTR [rbp-0x10]
  407556:	mov    rax,QWORD PTR [rax+0x30]
  40755a:	mov    ecx,DWORD PTR [rax+0x14]
  40755d:	mov    rax,QWORD PTR [rbp-0x18]
  407561:	mov    edx,eax
  407563:	cmp    ecx,edx
  407565:	jb     407570 <flatcc_builder_truncate_offset_vector@@Base+0x80>
  40756b:	jmp    40758f <flatcc_builder_truncate_offset_vector@@Base+0x9f>
  407570:	lea    rdi,[rip+0xb6ab]        # 412c22 <flatcc_builder_padding_base@@Base+0x8b2>
  407577:	lea    rsi,[rip+0xb004]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40757e:	mov    edx,0x3e3
  407583:	lea    rcx,[rip+0xb652]        # 412bdc <flatcc_builder_padding_base@@Base+0x86c>
  40758a:	call   403060 <__assert_fail@plt>
  40758f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407596:	jmp    4075d7 <flatcc_builder_truncate_offset_vector@@Base+0xe7>
  40759b:	mov    rax,QWORD PTR [rbp-0x18]
  40759f:	mov    ecx,eax
  4075a1:	mov    rax,QWORD PTR [rbp-0x10]
  4075a5:	mov    rax,QWORD PTR [rax+0x30]
  4075a9:	mov    edx,DWORD PTR [rax+0x14]
  4075ac:	sub    edx,ecx
  4075ae:	mov    DWORD PTR [rax+0x14],edx
  4075b1:	mov    rdi,QWORD PTR [rbp-0x10]
  4075b5:	mov    rax,QWORD PTR [rbp-0x10]
  4075b9:	mov    rax,QWORD PTR [rax+0x30]
  4075bd:	mov    ecx,DWORD PTR [rax+0x10]
  4075c0:	mov    rax,QWORD PTR [rbp-0x18]
  4075c4:	mov    edx,eax
  4075c6:	imul   ecx,edx
  4075c9:	mov    esi,ecx
  4075cb:	call   4074a0 <flatcc_builder_truncate_vector@@Base+0xf0>
  4075d0:	mov    DWORD PTR [rbp-0x4],0x0
  4075d7:	mov    eax,DWORD PTR [rbp-0x4]
  4075da:	add    rsp,0x20
  4075de:	pop    rbp
  4075df:	ret    

00000000004075e0 <flatcc_builder_truncate_string@@Base>:
  4075e0:	push   rbp
  4075e1:	mov    rbp,rsp
  4075e4:	sub    rsp,0x20
  4075e8:	mov    QWORD PTR [rbp-0x10],rdi
  4075ec:	mov    QWORD PTR [rbp-0x18],rsi
  4075f0:	mov    rsi,QWORD PTR [rbp-0x10]
  4075f4:	mov    rsi,QWORD PTR [rsi+0x30]
  4075f8:	movzx  eax,WORD PTR [rsi+0xe]
  4075fc:	cmp    eax,0x6
  4075ff:	jne    40760a <flatcc_builder_truncate_string@@Base+0x2a>
  407605:	jmp    407629 <flatcc_builder_truncate_string@@Base+0x49>
  40760a:	lea    rdi,[rip+0xb4b0]        # 412ac1 <flatcc_builder_padding_base@@Base+0x751>
  407611:	lea    rsi,[rip+0xaf6a]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  407618:	mov    edx,0x3eb
  40761d:	lea    rcx,[rip+0xb639]        # 412c5d <flatcc_builder_padding_base@@Base+0x8ed>
  407624:	call   403060 <__assert_fail@plt>
  407629:	mov    rax,QWORD PTR [rbp-0x10]
  40762d:	mov    rax,QWORD PTR [rax+0x30]
  407631:	mov    ecx,DWORD PTR [rax+0x14]
  407634:	mov    eax,ecx
  407636:	cmp    rax,QWORD PTR [rbp-0x18]
  40763a:	jae    407687 <flatcc_builder_truncate_string@@Base+0xa7>
  407640:	mov    rax,QWORD PTR [rbp-0x10]
  407644:	mov    rax,QWORD PTR [rax+0x30]
  407648:	mov    ecx,DWORD PTR [rax+0x14]
  40764b:	mov    eax,ecx
  40764d:	cmp    rax,QWORD PTR [rbp-0x18]
  407651:	jb     40765c <flatcc_builder_truncate_string@@Base+0x7c>
  407657:	jmp    40767b <flatcc_builder_truncate_string@@Base+0x9b>
  40765c:	lea    rdi,[rip+0xb639]        # 412c9c <flatcc_builder_padding_base@@Base+0x92c>
  407663:	lea    rsi,[rip+0xaf18]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40766a:	mov    edx,0x3ec
  40766f:	lea    rcx,[rip+0xb5e7]        # 412c5d <flatcc_builder_padding_base@@Base+0x8ed>
  407676:	call   403060 <__assert_fail@plt>
  40767b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407682:	jmp    4076b5 <flatcc_builder_truncate_string@@Base+0xd5>
  407687:	mov    rax,QWORD PTR [rbp-0x18]
  40768b:	mov    ecx,eax
  40768d:	mov    rax,QWORD PTR [rbp-0x10]
  407691:	mov    rax,QWORD PTR [rax+0x30]
  407695:	mov    edx,DWORD PTR [rax+0x14]
  407698:	sub    edx,ecx
  40769a:	mov    DWORD PTR [rax+0x14],edx
  40769d:	mov    rdi,QWORD PTR [rbp-0x10]
  4076a1:	mov    rax,QWORD PTR [rbp-0x18]
  4076a5:	mov    ecx,eax
  4076a7:	mov    esi,ecx
  4076a9:	call   4074a0 <flatcc_builder_truncate_vector@@Base+0xf0>
  4076ae:	mov    DWORD PTR [rbp-0x4],0x0
  4076b5:	mov    eax,DWORD PTR [rbp-0x4]
  4076b8:	add    rsp,0x20
  4076bc:	pop    rbp
  4076bd:	ret    
  4076be:	xchg   ax,ax

00000000004076c0 <flatcc_builder_start_vector@@Base>:
  4076c0:	push   rbp
  4076c1:	mov    rbp,rsp
  4076c4:	sub    rsp,0x30
  4076c8:	mov    ax,dx
  4076cb:	mov    QWORD PTR [rbp-0x10],rdi
  4076cf:	mov    QWORD PTR [rbp-0x18],rsi
  4076d3:	mov    WORD PTR [rbp-0x1a],ax
  4076d7:	mov    QWORD PTR [rbp-0x28],rcx
  4076db:	lea    rdi,[rbp-0x1a]
  4076df:	mov    esi,0x4
  4076e4:	call   407770 <flatcc_builder_start_vector@@Base+0xb0>
  4076e9:	mov    rdi,QWORD PTR [rbp-0x10]
  4076ed:	movzx  esi,WORD PTR [rbp-0x1a]
  4076f1:	call   406620 <flatcc_builder_start_buffer@@Base+0x170>
  4076f6:	cmp    eax,0x0
  4076f9:	je     40770b <flatcc_builder_start_vector@@Base+0x4b>
  4076ff:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407706:	jmp    40775f <flatcc_builder_start_vector@@Base+0x9f>
  40770b:	mov    rax,QWORD PTR [rbp-0x18]
  40770f:	mov    ecx,eax
  407711:	mov    rax,QWORD PTR [rbp-0x10]
  407715:	mov    rax,QWORD PTR [rax+0x30]
  407719:	mov    DWORD PTR [rax+0x10],ecx
  40771c:	mov    rax,QWORD PTR [rbp-0x10]
  407720:	mov    rax,QWORD PTR [rax+0x30]
  407724:	mov    DWORD PTR [rax+0x14],0x0
  40772b:	mov    rax,QWORD PTR [rbp-0x28]
  40772f:	mov    ecx,eax
  407731:	mov    rax,QWORD PTR [rbp-0x10]
  407735:	mov    rax,QWORD PTR [rax+0x30]
  407739:	mov    DWORD PTR [rax+0x18],ecx
  40773c:	mov    rax,QWORD PTR [rbp-0x10]
  407740:	mov    rax,QWORD PTR [rax+0x30]
  407744:	mov    WORD PTR [rax+0xe],0x4
  40774a:	mov    rdi,QWORD PTR [rbp-0x10]
  40774e:	mov    esi,0xfffffffc
  407753:	call   406a90 <flatcc_builder_start_struct@@Base+0x80>
  407758:	mov    DWORD PTR [rbp-0x4],0x0
  40775f:	mov    eax,DWORD PTR [rbp-0x4]
  407762:	add    rsp,0x30
  407766:	pop    rbp
  407767:	ret    
  407768:	nop    DWORD PTR [rax+rax*1+0x0]
  407770:	push   rbp
  407771:	mov    rbp,rsp
  407774:	mov    ax,si
  407777:	mov    QWORD PTR [rbp-0x8],rdi
  40777b:	mov    WORD PTR [rbp-0xa],ax
  40777f:	mov    rdi,QWORD PTR [rbp-0x8]
  407783:	movzx  esi,WORD PTR [rdi]
  407786:	movzx  ecx,WORD PTR [rbp-0xa]
  40778a:	cmp    esi,ecx
  40778c:	jge    40779d <flatcc_builder_start_vector@@Base+0xdd>
  407792:	mov    ax,WORD PTR [rbp-0xa]
  407796:	mov    rcx,QWORD PTR [rbp-0x8]
  40779a:	mov    WORD PTR [rcx],ax
  40779d:	pop    rbp
  40779e:	ret    
  40779f:	nop

00000000004077a0 <flatcc_builder_start_offset_vector@@Base>:
  4077a0:	push   rbp
  4077a1:	mov    rbp,rsp
  4077a4:	sub    rsp,0x10
  4077a8:	mov    QWORD PTR [rbp-0x10],rdi
  4077ac:	mov    rdi,QWORD PTR [rbp-0x10]
  4077b0:	mov    esi,0x4
  4077b5:	call   406620 <flatcc_builder_start_buffer@@Base+0x170>
  4077ba:	cmp    eax,0x0
  4077bd:	je     4077cf <flatcc_builder_start_offset_vector@@Base+0x2f>
  4077c3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4077ca:	jmp    407810 <flatcc_builder_start_offset_vector@@Base+0x70>
  4077cf:	mov    rax,QWORD PTR [rbp-0x10]
  4077d3:	mov    rax,QWORD PTR [rax+0x30]
  4077d7:	mov    DWORD PTR [rax+0x10],0x4
  4077de:	mov    rax,QWORD PTR [rbp-0x10]
  4077e2:	mov    rax,QWORD PTR [rax+0x30]
  4077e6:	mov    DWORD PTR [rax+0x14],0x0
  4077ed:	mov    rax,QWORD PTR [rbp-0x10]
  4077f1:	mov    rax,QWORD PTR [rax+0x30]
  4077f5:	mov    WORD PTR [rax+0xe],0x5
  4077fb:	mov    rdi,QWORD PTR [rbp-0x10]
  4077ff:	mov    esi,0xfffffffc
  407804:	call   406a90 <flatcc_builder_start_struct@@Base+0x80>
  407809:	mov    DWORD PTR [rbp-0x4],0x0
  407810:	mov    eax,DWORD PTR [rbp-0x4]
  407813:	add    rsp,0x10
  407817:	pop    rbp
  407818:	ret    
  407819:	nop    DWORD PTR [rax+0x0]

0000000000407820 <flatcc_builder_create_offset_vector@@Base>:
  407820:	push   rbp
  407821:	mov    rbp,rsp
  407824:	sub    rsp,0x30
  407828:	mov    QWORD PTR [rbp-0x10],rdi
  40782c:	mov    QWORD PTR [rbp-0x18],rsi
  407830:	mov    QWORD PTR [rbp-0x20],rdx
  407834:	mov    rdi,QWORD PTR [rbp-0x10]
  407838:	call   4077a0 <flatcc_builder_start_offset_vector@@Base>
  40783d:	cmp    eax,0x0
  407840:	je     407852 <flatcc_builder_create_offset_vector@@Base+0x32>
  407846:	mov    DWORD PTR [rbp-0x4],0x0
  40784d:	jmp    4078a0 <flatcc_builder_create_offset_vector@@Base+0x80>
  407852:	mov    rdi,QWORD PTR [rbp-0x10]
  407856:	mov    rsi,QWORD PTR [rbp-0x20]
  40785a:	call   406f80 <flatcc_builder_extend_offset_vector@@Base>
  40785f:	mov    QWORD PTR [rbp-0x28],rax
  407863:	cmp    rax,0x0
  407867:	jne    407879 <flatcc_builder_create_offset_vector@@Base+0x59>
  40786d:	mov    DWORD PTR [rbp-0x4],0x0
  407874:	jmp    4078a0 <flatcc_builder_create_offset_vector@@Base+0x80>
  407879:	mov    rax,QWORD PTR [rbp-0x28]
  40787d:	mov    rcx,QWORD PTR [rbp-0x18]
  407881:	mov    rdx,QWORD PTR [rbp-0x20]
  407885:	shl    rdx,0x2
  407889:	mov    rdi,rax
  40788c:	mov    rsi,rcx
  40788f:	call   4030b0 <memcpy@plt>
  407894:	mov    rdi,QWORD PTR [rbp-0x10]
  407898:	call   4078b0 <flatcc_builder_end_offset_vector@@Base>
  40789d:	mov    DWORD PTR [rbp-0x4],eax
  4078a0:	mov    eax,DWORD PTR [rbp-0x4]
  4078a3:	add    rsp,0x30
  4078a7:	pop    rbp
  4078a8:	ret    
  4078a9:	nop    DWORD PTR [rax+0x0]

00000000004078b0 <flatcc_builder_end_offset_vector@@Base>:
  4078b0:	push   rbp
  4078b1:	mov    rbp,rsp
  4078b4:	sub    rsp,0x20
  4078b8:	mov    QWORD PTR [rbp-0x10],rdi
  4078bc:	mov    rdi,QWORD PTR [rbp-0x10]
  4078c0:	mov    rdi,QWORD PTR [rdi+0x30]
  4078c4:	movzx  eax,WORD PTR [rdi+0xe]
  4078c8:	cmp    eax,0x5
  4078cb:	jne    4078d6 <flatcc_builder_end_offset_vector@@Base+0x26>
  4078d1:	jmp    4078f5 <flatcc_builder_end_offset_vector@@Base+0x45>
  4078d6:	lea    rdi,[rip+0xb0db]        # 4129b8 <flatcc_builder_padding_base@@Base+0x648>
  4078dd:	lea    rsi,[rip+0xac9e]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4078e4:	mov    edx,0x5c8
  4078e9:	lea    rcx,[rip+0xb6f7]        # 412fe7 <flatcc_builder_padding_base@@Base+0xc77>
  4078f0:	call   403060 <__assert_fail@plt>
  4078f5:	mov    rdi,QWORD PTR [rbp-0x10]
  4078f9:	mov    rax,QWORD PTR [rbp-0x10]
  4078fd:	mov    rax,QWORD PTR [rax+0x18]
  407901:	mov    rcx,QWORD PTR [rbp-0x10]
  407905:	mov    rcx,QWORD PTR [rcx+0x30]
  407909:	mov    edx,DWORD PTR [rcx+0x14]
  40790c:	mov    rsi,rax
  40790f:	call   408d00 <flatcc_builder_create_offset_vector_direct@@Base>
  407914:	xor    r8d,r8d
  407917:	mov    DWORD PTR [rbp-0x14],eax
  40791a:	cmp    r8d,eax
  40791d:	jne    40792f <flatcc_builder_end_offset_vector@@Base+0x7f>
  407923:	mov    DWORD PTR [rbp-0x4],0x0
  40792a:	jmp    40793e <flatcc_builder_end_offset_vector@@Base+0x8e>
  40792f:	mov    rdi,QWORD PTR [rbp-0x10]
  407933:	call   406950 <flatcc_builder_end_buffer@@Base+0x160>
  407938:	mov    eax,DWORD PTR [rbp-0x14]
  40793b:	mov    DWORD PTR [rbp-0x4],eax
  40793e:	mov    eax,DWORD PTR [rbp-0x4]
  407941:	add    rsp,0x20
  407945:	pop    rbp
  407946:	ret    
  407947:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407950 <flatcc_builder_start_string@@Base>:
  407950:	push   rbp
  407951:	mov    rbp,rsp
  407954:	sub    rsp,0x10
  407958:	mov    QWORD PTR [rbp-0x10],rdi
  40795c:	mov    rdi,QWORD PTR [rbp-0x10]
  407960:	mov    esi,0x1
  407965:	call   406620 <flatcc_builder_start_buffer@@Base+0x170>
  40796a:	cmp    eax,0x0
  40796d:	je     40797f <flatcc_builder_start_string@@Base+0x2f>
  407973:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40797a:	jmp    4079c0 <flatcc_builder_start_string@@Base+0x70>
  40797f:	mov    rax,QWORD PTR [rbp-0x10]
  407983:	mov    rax,QWORD PTR [rax+0x30]
  407987:	mov    DWORD PTR [rax+0x10],0x1
  40798e:	mov    rax,QWORD PTR [rbp-0x10]
  407992:	mov    rax,QWORD PTR [rax+0x30]
  407996:	mov    DWORD PTR [rax+0x14],0x0
  40799d:	mov    rax,QWORD PTR [rbp-0x10]
  4079a1:	mov    rax,QWORD PTR [rax+0x30]
  4079a5:	mov    WORD PTR [rax+0xe],0x6
  4079ab:	mov    rdi,QWORD PTR [rbp-0x10]
  4079af:	mov    esi,0xfffffffc
  4079b4:	call   406a90 <flatcc_builder_start_struct@@Base+0x80>
  4079b9:	mov    DWORD PTR [rbp-0x4],0x0
  4079c0:	mov    eax,DWORD PTR [rbp-0x4]
  4079c3:	add    rsp,0x10
  4079c7:	pop    rbp
  4079c8:	ret    
  4079c9:	nop    DWORD PTR [rax+0x0]

00000000004079d0 <flatcc_builder_reserve_table@@Base>:
  4079d0:	push   rbp
  4079d1:	mov    rbp,rsp
  4079d4:	sub    rsp,0x10
  4079d8:	mov    QWORD PTR [rbp-0x8],rdi
  4079dc:	mov    DWORD PTR [rbp-0xc],esi
  4079df:	cmp    DWORD PTR [rbp-0xc],0x0
  4079e3:	jl     4079ee <flatcc_builder_reserve_table@@Base+0x1e>
  4079e9:	jmp    407a0d <flatcc_builder_reserve_table@@Base+0x3d>
  4079ee:	lea    rdi,[rip+0xb30a]        # 412cff <flatcc_builder_padding_base@@Base+0x98f>
  4079f5:	lea    rsi,[rip+0xab86]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4079fc:	mov    edx,0x429
  407a01:	lea    rcx,[rip+0xb2b6]        # 412cbe <flatcc_builder_padding_base@@Base+0x94e>
  407a08:	call   403060 <__assert_fail@plt>
  407a0d:	mov    rdi,QWORD PTR [rbp-0x8]
  407a11:	mov    esi,DWORD PTR [rbp-0xc]
  407a14:	call   407a20 <flatcc_builder_reserve_table@@Base+0x50>
  407a19:	add    rsp,0x10
  407a1d:	pop    rbp
  407a1e:	ret    
  407a1f:	nop
  407a20:	push   rbp
  407a21:	mov    rbp,rsp
  407a24:	sub    rsp,0x20
  407a28:	xor    eax,eax
  407a2a:	mov    QWORD PTR [rbp-0x10],rdi
  407a2e:	mov    DWORD PTR [rbp-0x14],esi
  407a31:	mov    rdi,QWORD PTR [rbp-0x10]
  407a35:	mov    rdi,QWORD PTR [rdi+0x30]
  407a39:	mov    esi,DWORD PTR [rdi+0x10]
  407a3c:	mov    edi,esi
  407a3e:	mov    rcx,QWORD PTR [rbp-0x10]
  407a42:	mov    rcx,QWORD PTR [rcx+0x30]
  407a46:	movzx  esi,WORD PTR [rcx+0x1c]
  407a4a:	mov    ecx,esi
  407a4c:	shl    rcx,0x1
  407a50:	add    rdi,rcx
  407a53:	mov    esi,edi
  407a55:	mov    DWORD PTR [rbp-0x18],esi
  407a58:	mov    esi,DWORD PTR [rbp-0x14]
  407a5b:	add    esi,0x2
  407a5e:	movsxd rcx,esi
  407a61:	shl    rcx,0x1
  407a65:	mov    esi,ecx
  407a67:	mov    DWORD PTR [rbp-0x1c],esi
  407a6a:	mov    rdi,QWORD PTR [rbp-0x10]
  407a6e:	mov    esi,DWORD PTR [rbp-0x18]
  407a71:	mov    edx,esi
  407a73:	mov    esi,DWORD PTR [rbp-0x1c]
  407a76:	mov    ecx,esi
  407a78:	mov    esi,eax
  407a7a:	mov    r8d,0x1
  407a80:	call   4056a0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  407a85:	mov    rcx,QWORD PTR [rbp-0x10]
  407a89:	mov    QWORD PTR [rcx+0x8],rax
  407a8d:	cmp    rax,0x0
  407a91:	jne    407aa3 <flatcc_builder_reserve_table@@Base+0xd3>
  407a97:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407a9e:	jmp    407b0f <flatcc_builder_reserve_table@@Base+0x13f>
  407aa3:	xor    r8d,r8d
  407aa6:	mov    rax,QWORD PTR [rbp-0x10]
  407aaa:	mov    rcx,QWORD PTR [rax+0x8]
  407aae:	add    rcx,0x4
  407ab2:	mov    QWORD PTR [rax+0x8],rcx
  407ab6:	mov    rax,QWORD PTR [rbp-0x10]
  407aba:	mov    rax,QWORD PTR [rax+0x30]
  407abe:	mov    edx,DWORD PTR [rax+0x14]
  407ac1:	mov    DWORD PTR [rbp-0x18],edx
  407ac4:	movsxd rax,DWORD PTR [rbp-0x14]
  407ac8:	shl    rax,0x1
  407acc:	add    rax,0x1
  407ad0:	mov    edx,eax
  407ad2:	mov    DWORD PTR [rbp-0x1c],edx
  407ad5:	mov    rdi,QWORD PTR [rbp-0x10]
  407ad9:	mov    edx,DWORD PTR [rbp-0x18]
  407adc:	mov    esi,DWORD PTR [rbp-0x1c]
  407adf:	mov    ecx,esi
  407ae1:	mov    esi,0x3
  407ae6:	call   4056a0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  407aeb:	mov    rcx,QWORD PTR [rbp-0x10]
  407aef:	mov    QWORD PTR [rcx],rax
  407af2:	cmp    rax,0x0
  407af6:	jne    407b08 <flatcc_builder_reserve_table@@Base+0x138>
  407afc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407b03:	jmp    407b0f <flatcc_builder_reserve_table@@Base+0x13f>
  407b08:	mov    DWORD PTR [rbp-0x4],0x0
  407b0f:	mov    eax,DWORD PTR [rbp-0x4]
  407b12:	add    rsp,0x20
  407b16:	pop    rbp
  407b17:	ret    
  407b18:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407b20 <flatcc_builder_start_table@@Base>:
  407b20:	push   rbp
  407b21:	mov    rbp,rsp
  407b24:	sub    rsp,0x20
  407b28:	mov    QWORD PTR [rbp-0x10],rdi
  407b2c:	mov    DWORD PTR [rbp-0x14],esi
  407b2f:	mov    rdi,QWORD PTR [rbp-0x10]
  407b33:	mov    esi,0x4
  407b38:	call   406620 <flatcc_builder_start_buffer@@Base+0x170>
  407b3d:	cmp    eax,0x0
  407b40:	je     407b52 <flatcc_builder_start_table@@Base+0x32>
  407b46:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407b4d:	jmp    407c1e <flatcc_builder_start_table@@Base+0xfe>
  407b52:	mov    rax,QWORD PTR [rbp-0x10]
  407b56:	mov    rax,QWORD PTR [rax+0x8]
  407b5a:	mov    rcx,QWORD PTR [rbp-0x10]
  407b5e:	mov    rcx,QWORD PTR [rcx+0x58]
  407b62:	sub    rax,rcx
  407b65:	mov    edx,eax
  407b67:	mov    rax,QWORD PTR [rbp-0x10]
  407b6b:	mov    rax,QWORD PTR [rax+0x30]
  407b6f:	mov    DWORD PTR [rax+0x10],edx
  407b72:	mov    rax,QWORD PTR [rbp-0x10]
  407b76:	mov    rax,QWORD PTR [rax]
  407b79:	mov    rcx,QWORD PTR [rbp-0x10]
  407b7d:	mov    rcx,QWORD PTR [rcx+0x88]
  407b84:	sub    rax,rcx
  407b87:	mov    edx,eax
  407b89:	mov    rax,QWORD PTR [rbp-0x10]
  407b8d:	mov    rax,QWORD PTR [rax+0x30]
  407b91:	mov    DWORD PTR [rax+0x14],edx
  407b94:	mov    rax,QWORD PTR [rbp-0x10]
  407b98:	mov    edx,DWORD PTR [rax+0x14]
  407b9b:	mov    rax,QWORD PTR [rbp-0x10]
  407b9f:	mov    rax,QWORD PTR [rax+0x30]
  407ba3:	mov    DWORD PTR [rax+0x18],edx
  407ba6:	mov    rax,QWORD PTR [rbp-0x10]
  407baa:	mov    si,WORD PTR [rax+0x10]
  407bae:	mov    rax,QWORD PTR [rbp-0x10]
  407bb2:	mov    rax,QWORD PTR [rax+0x30]
  407bb6:	mov    WORD PTR [rax+0x1c],si
  407bba:	mov    rax,QWORD PTR [rbp-0x10]
  407bbe:	mov    DWORD PTR [rax+0x14],0x0
  407bc5:	mov    rax,QWORD PTR [rbp-0x10]
  407bc9:	mov    DWORD PTR [rax+0x14],0x2f693b52
  407bd0:	mov    rax,QWORD PTR [rbp-0x10]
  407bd4:	mov    WORD PTR [rax+0x10],0x0
  407bda:	mov    rax,QWORD PTR [rbp-0x10]
  407bde:	mov    rax,QWORD PTR [rax+0x30]
  407be2:	mov    WORD PTR [rax+0xe],0x3
  407be8:	mov    rdi,QWORD PTR [rbp-0x10]
  407bec:	mov    esi,DWORD PTR [rbp-0x14]
  407bef:	call   407a20 <flatcc_builder_reserve_table@@Base+0x50>
  407bf4:	cmp    eax,0x0
  407bf7:	je     407c09 <flatcc_builder_start_table@@Base+0xe9>
  407bfd:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407c04:	jmp    407c1e <flatcc_builder_start_table@@Base+0xfe>
  407c09:	mov    rdi,QWORD PTR [rbp-0x10]
  407c0d:	mov    esi,0xfffc
  407c12:	call   406a90 <flatcc_builder_start_struct@@Base+0x80>
  407c17:	mov    DWORD PTR [rbp-0x4],0x0
  407c1e:	mov    eax,DWORD PTR [rbp-0x4]
  407c21:	add    rsp,0x20
  407c25:	pop    rbp
  407c26:	ret    
  407c27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407c30 <flatcc_builder_create_vtable@@Base>:
  407c30:	push   rbp
  407c31:	mov    rbp,rsp
  407c34:	sub    rsp,0xc0
  407c3b:	mov    ax,dx
  407c3e:	mov    QWORD PTR [rbp-0x10],rdi
  407c42:	mov    QWORD PTR [rbp-0x18],rsi
  407c46:	mov    WORD PTR [rbp-0x1a],ax
  407c4a:	mov    QWORD PTR [rbp-0xb0],0x0
  407c55:	mov    DWORD PTR [rbp-0xa8],0x0
  407c5f:	movzx  edx,WORD PTR [rbp-0x1a]
  407c63:	cmp    edx,0x0
  407c66:	jle    407cce <flatcc_builder_create_vtable@@Base+0x9e>
  407c6c:	movzx  eax,WORD PTR [rbp-0x1a]
  407c70:	mov    ecx,eax
  407c72:	add    rcx,QWORD PTR [rbp-0xb0]
  407c79:	mov    QWORD PTR [rbp-0xb0],rcx
  407c80:	mov    rcx,QWORD PTR [rbp-0x18]
  407c84:	lea    rdx,[rbp-0xb0]
  407c8b:	mov    rsi,rdx
  407c8e:	add    rsi,0x10
  407c92:	movsxd rdi,DWORD PTR [rbp-0xa8]
  407c99:	shl    rdi,0x4
  407c9d:	add    rsi,rdi
  407ca0:	mov    QWORD PTR [rsi],rcx
  407ca3:	movzx  eax,WORD PTR [rbp-0x1a]
  407ca7:	mov    ecx,eax
  407ca9:	add    rdx,0x10
  407cad:	movsxd rsi,DWORD PTR [rbp-0xa8]
  407cb4:	shl    rsi,0x4
  407cb8:	add    rdx,rsi
  407cbb:	mov    QWORD PTR [rdx+0x8],rcx
  407cbf:	mov    eax,DWORD PTR [rbp-0xa8]
  407cc5:	add    eax,0x1
  407cc8:	mov    DWORD PTR [rbp-0xa8],eax
  407cce:	mov    rax,QWORD PTR [rbp-0x10]
  407cd2:	cmp    DWORD PTR [rax+0x100],0x0
  407cd9:	jne    407d1e <flatcc_builder_create_vtable@@Base+0xee>
  407cdf:	mov    rax,QWORD PTR [rbp-0x10]
  407ce3:	cmp    DWORD PTR [rax+0x124],0x0
  407cea:	jne    407d1e <flatcc_builder_create_vtable@@Base+0xee>
  407cf0:	mov    rdi,QWORD PTR [rbp-0x10]
  407cf4:	lea    rsi,[rbp-0xb0]
  407cfb:	call   407d70 <flatcc_builder_create_vtable@@Base+0x140>
  407d00:	xor    ecx,ecx
  407d02:	mov    DWORD PTR [rbp-0x20],eax
  407d05:	cmp    ecx,eax
  407d07:	jne    407d19 <flatcc_builder_create_vtable@@Base+0xe9>
  407d0d:	mov    DWORD PTR [rbp-0x4],0x0
  407d14:	jmp    407d56 <flatcc_builder_create_vtable@@Base+0x126>
  407d19:	jmp    407d50 <flatcc_builder_create_vtable@@Base+0x120>
  407d1e:	mov    rdi,QWORD PTR [rbp-0x10]
  407d22:	lea    rsi,[rbp-0xb0]
  407d29:	call   405dd0 <flatcc_builder_embed_buffer@@Base+0x430>
  407d2e:	xor    ecx,ecx
  407d30:	mov    DWORD PTR [rbp-0x20],eax
  407d33:	cmp    ecx,eax
  407d35:	jne    407d47 <flatcc_builder_create_vtable@@Base+0x117>
  407d3b:	mov    DWORD PTR [rbp-0x4],0x0
  407d42:	jmp    407d56 <flatcc_builder_create_vtable@@Base+0x126>
  407d47:	mov    eax,DWORD PTR [rbp-0x20]
  407d4a:	add    eax,0x1
  407d4d:	mov    DWORD PTR [rbp-0x20],eax
  407d50:	mov    eax,DWORD PTR [rbp-0x20]
  407d53:	mov    DWORD PTR [rbp-0x4],eax
  407d56:	mov    eax,DWORD PTR [rbp-0x4]
  407d59:	add    rsp,0xc0
  407d60:	pop    rbp
  407d61:	ret    
  407d62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d6c:	nop    DWORD PTR [rax+0x0]
  407d70:	push   rbp
  407d71:	mov    rbp,rsp
  407d74:	sub    rsp,0x20
  407d78:	mov    QWORD PTR [rbp-0x8],rdi
  407d7c:	mov    QWORD PTR [rbp-0x10],rsi
  407d80:	mov    rsi,QWORD PTR [rbp-0x8]
  407d84:	mov    eax,DWORD PTR [rsi+0xf4]
  407d8a:	mov    DWORD PTR [rbp-0x14],eax
  407d8d:	mov    eax,DWORD PTR [rbp-0x14]
  407d90:	mov    rsi,QWORD PTR [rbp-0x10]
  407d94:	mov    rsi,QWORD PTR [rsi]
  407d97:	mov    ecx,esi
  407d99:	add    eax,ecx
  407d9b:	mov    rsi,QWORD PTR [rbp-0x8]
  407d9f:	mov    DWORD PTR [rsi+0xf4],eax
  407da5:	mov    rsi,QWORD PTR [rbp-0x8]
  407da9:	mov    eax,DWORD PTR [rsi+0xf4]
  407daf:	cmp    eax,DWORD PTR [rbp-0x14]
  407db2:	jge    407dd7 <flatcc_builder_create_vtable@@Base+0x1a7>
  407db8:	lea    rdi,[rip+0xb983]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  407dbf:	lea    rsi,[rip+0xa7bc]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  407dc6:	mov    edx,0x2a1
  407dcb:	lea    rcx,[rip+0xb8eb]        # 4136bd <flatcc_builder_padding_base@@Base+0x134d>
  407dd2:	call   403060 <__assert_fail@plt>
  407dd7:	mov    rax,QWORD PTR [rbp-0x8]
  407ddb:	mov    rax,QWORD PTR [rax+0x48]
  407ddf:	mov    rcx,QWORD PTR [rbp-0x8]
  407de3:	mov    rdi,QWORD PTR [rcx+0x38]
  407de7:	mov    rcx,QWORD PTR [rbp-0x10]
  407deb:	add    rcx,0x10
  407def:	mov    rdx,QWORD PTR [rbp-0x10]
  407df3:	mov    edx,DWORD PTR [rdx+0x8]
  407df6:	mov    esi,DWORD PTR [rbp-0x14]
  407df9:	mov    r8,QWORD PTR [rbp-0x10]
  407dfd:	mov    r8,QWORD PTR [r8]
  407e00:	mov    DWORD PTR [rbp-0x18],esi
  407e03:	mov    rsi,rcx
  407e06:	mov    ecx,DWORD PTR [rbp-0x18]
  407e09:	call   rax
  407e0b:	cmp    eax,0x0
  407e0e:	je     407e33 <flatcc_builder_create_vtable@@Base+0x203>
  407e14:	lea    rdi,[rip+0xb927]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  407e1b:	lea    rsi,[rip+0xa760]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  407e22:	mov    edx,0x2a5
  407e27:	lea    rcx,[rip+0xb88f]        # 4136bd <flatcc_builder_padding_base@@Base+0x134d>
  407e2e:	call   403060 <__assert_fail@plt>
  407e33:	mov    eax,DWORD PTR [rbp-0x14]
  407e36:	add    eax,0x1
  407e39:	add    rsp,0x20
  407e3d:	pop    rbp
  407e3e:	ret    
  407e3f:	nop

0000000000407e40 <flatcc_builder_create_cached_vtable@@Base>:
  407e40:	push   rbp
  407e41:	mov    rbp,rsp
  407e44:	sub    rsp,0x70
  407e48:	mov    ax,dx
  407e4b:	mov    QWORD PTR [rbp-0x10],rdi
  407e4f:	mov    QWORD PTR [rbp-0x18],rsi
  407e53:	mov    WORD PTR [rbp-0x1a],ax
  407e57:	mov    DWORD PTR [rbp-0x20],ecx
  407e5a:	mov    rdi,QWORD PTR [rbp-0x10]
  407e5e:	mov    esi,DWORD PTR [rbp-0x20]
  407e61:	call   408170 <flatcc_builder_create_cached_vtable@@Base+0x330>
  407e66:	mov    QWORD PTR [rbp-0x40],rax
  407e6a:	cmp    rax,0x0
  407e6e:	jne    407e80 <flatcc_builder_create_cached_vtable@@Base+0x40>
  407e74:	mov    DWORD PTR [rbp-0x4],0x0
  407e7b:	jmp    408158 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407e80:	mov    rax,QWORD PTR [rbp-0x40]
  407e84:	mov    QWORD PTR [rbp-0x38],rax
  407e88:	mov    rax,QWORD PTR [rbp-0x38]
  407e8c:	mov    ecx,DWORD PTR [rax]
  407e8e:	mov    DWORD PTR [rbp-0x44],ecx
  407e91:	mov    QWORD PTR [rbp-0x30],0x0
  407e99:	cmp    DWORD PTR [rbp-0x44],0x0
  407e9d:	je     407fac <flatcc_builder_create_cached_vtable@@Base+0x16c>
  407ea3:	mov    rax,QWORD PTR [rbp-0x10]
  407ea7:	mov    rax,QWORD PTR [rax+0xb8]
  407eae:	mov    ecx,DWORD PTR [rbp-0x44]
  407eb1:	mov    edx,ecx
  407eb3:	add    rax,rdx
  407eb6:	mov    QWORD PTR [rbp-0x28],rax
  407eba:	mov    rax,QWORD PTR [rbp-0x10]
  407ebe:	mov    rax,QWORD PTR [rax+0x78]
  407ec2:	mov    rdx,QWORD PTR [rbp-0x28]
  407ec6:	mov    ecx,DWORD PTR [rdx+0x8]
  407ec9:	mov    edx,ecx
  407ecb:	add    rax,rdx
  407ece:	mov    QWORD PTR [rbp-0x50],rax
  407ed2:	mov    rax,QWORD PTR [rbp-0x50]
  407ed6:	movzx  ecx,WORD PTR [rax]
  407ed9:	movzx  esi,WORD PTR [rbp-0x1a]
  407edd:	cmp    ecx,esi
  407edf:	jne    407f18 <flatcc_builder_create_cached_vtable@@Base+0xd8>
  407ee5:	xor    eax,eax
  407ee7:	mov    rcx,QWORD PTR [rbp-0x18]
  407eeb:	mov    rdx,QWORD PTR [rbp-0x50]
  407eef:	movzx  esi,WORD PTR [rbp-0x1a]
  407ef3:	mov    edi,esi
  407ef5:	mov    QWORD PTR [rbp-0x58],rdi
  407ef9:	mov    rdi,rcx
  407efc:	mov    rsi,rdx
  407eff:	mov    rdx,QWORD PTR [rbp-0x58]
  407f03:	mov    DWORD PTR [rbp-0x5c],eax
  407f06:	call   403090 <memcmp@plt>
  407f0b:	mov    r8d,DWORD PTR [rbp-0x5c]
  407f0f:	cmp    r8d,eax
  407f12:	je     407f33 <flatcc_builder_create_cached_vtable@@Base+0xf3>
  407f18:	mov    rax,QWORD PTR [rbp-0x28]
  407f1c:	add    rax,0xc
  407f20:	mov    QWORD PTR [rbp-0x38],rax
  407f24:	mov    rax,QWORD PTR [rbp-0x28]
  407f28:	mov    ecx,DWORD PTR [rax+0xc]
  407f2b:	mov    DWORD PTR [rbp-0x44],ecx
  407f2e:	jmp    407e99 <flatcc_builder_create_cached_vtable@@Base+0x59>
  407f33:	mov    rax,QWORD PTR [rbp-0x28]
  407f37:	mov    ecx,DWORD PTR [rax+0x4]
  407f3a:	mov    rax,QWORD PTR [rbp-0x10]
  407f3e:	cmp    ecx,DWORD PTR [rax+0x100]
  407f44:	je     407f6d <flatcc_builder_create_cached_vtable@@Base+0x12d>
  407f4a:	mov    rax,QWORD PTR [rbp-0x28]
  407f4e:	mov    QWORD PTR [rbp-0x30],rax
  407f52:	mov    rax,QWORD PTR [rbp-0x28]
  407f56:	add    rax,0xc
  407f5a:	mov    QWORD PTR [rbp-0x38],rax
  407f5e:	mov    rax,QWORD PTR [rbp-0x28]
  407f62:	mov    ecx,DWORD PTR [rax+0xc]
  407f65:	mov    DWORD PTR [rbp-0x44],ecx
  407f68:	jmp    407e99 <flatcc_builder_create_cached_vtable@@Base+0x59>
  407f6d:	mov    rax,QWORD PTR [rbp-0x38]
  407f71:	cmp    rax,QWORD PTR [rbp-0x40]
  407f75:	je     407f9e <flatcc_builder_create_cached_vtable@@Base+0x15e>
  407f7b:	mov    rax,QWORD PTR [rbp-0x28]
  407f7f:	mov    ecx,DWORD PTR [rax+0xc]
  407f82:	mov    rax,QWORD PTR [rbp-0x38]
  407f86:	mov    DWORD PTR [rax],ecx
  407f88:	mov    rax,QWORD PTR [rbp-0x40]
  407f8c:	mov    ecx,DWORD PTR [rax]
  407f8e:	mov    rax,QWORD PTR [rbp-0x28]
  407f92:	mov    DWORD PTR [rax+0xc],ecx
  407f95:	mov    ecx,DWORD PTR [rbp-0x44]
  407f98:	mov    rax,QWORD PTR [rbp-0x40]
  407f9c:	mov    DWORD PTR [rax],ecx
  407f9e:	mov    rax,QWORD PTR [rbp-0x28]
  407fa2:	mov    ecx,DWORD PTR [rax]
  407fa4:	mov    DWORD PTR [rbp-0x4],ecx
  407fa7:	jmp    408158 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407fac:	mov    eax,0x10
  407fb1:	mov    ecx,eax
  407fb3:	xor    r8d,r8d
  407fb6:	mov    rdi,QWORD PTR [rbp-0x10]
  407fba:	mov    rdx,QWORD PTR [rbp-0x10]
  407fbe:	mov    eax,DWORD PTR [rdx+0xe4]
  407fc4:	mov    edx,eax
  407fc6:	mov    esi,0x6
  407fcb:	call   4056a0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  407fd0:	mov    QWORD PTR [rbp-0x28],rax
  407fd4:	cmp    rax,0x0
  407fd8:	jne    407fea <flatcc_builder_create_cached_vtable@@Base+0x1aa>
  407fde:	mov    DWORD PTR [rbp-0x4],0x0
  407fe5:	jmp    408158 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407fea:	mov    rax,QWORD PTR [rbp-0x10]
  407fee:	mov    ecx,DWORD PTR [rax+0xe4]
  407ff4:	mov    DWORD PTR [rbp-0x44],ecx
  407ff7:	mov    rax,QWORD PTR [rbp-0x10]
  407ffb:	mov    ecx,DWORD PTR [rax+0xe4]
  408001:	mov    edx,ecx
  408003:	add    rdx,0x10
  408007:	mov    ecx,edx
  408009:	mov    DWORD PTR [rax+0xe4],ecx
  40800f:	mov    rax,QWORD PTR [rbp-0x10]
  408013:	mov    ecx,DWORD PTR [rax+0x100]
  408019:	mov    rax,QWORD PTR [rbp-0x28]
  40801d:	mov    DWORD PTR [rax+0x4],ecx
  408020:	mov    rax,QWORD PTR [rbp-0x40]
  408024:	mov    ecx,DWORD PTR [rax]
  408026:	mov    rax,QWORD PTR [rbp-0x28]
  40802a:	mov    DWORD PTR [rax+0xc],ecx
  40802d:	mov    ecx,DWORD PTR [rbp-0x44]
  408030:	mov    rax,QWORD PTR [rbp-0x40]
  408034:	mov    DWORD PTR [rax],ecx
  408036:	mov    rdi,QWORD PTR [rbp-0x10]
  40803a:	mov    rsi,QWORD PTR [rbp-0x18]
  40803e:	movzx  edx,WORD PTR [rbp-0x1a]
  408042:	call   407c30 <flatcc_builder_create_vtable@@Base>
  408047:	xor    ecx,ecx
  408049:	mov    rsi,QWORD PTR [rbp-0x28]
  40804d:	mov    DWORD PTR [rsi],eax
  40804f:	cmp    ecx,eax
  408051:	jne    408063 <flatcc_builder_create_cached_vtable@@Base+0x223>
  408057:	mov    DWORD PTR [rbp-0x4],0x0
  40805e:	jmp    408158 <flatcc_builder_create_cached_vtable@@Base+0x318>
  408063:	cmp    QWORD PTR [rbp-0x30],0x0
  408068:	je     408081 <flatcc_builder_create_cached_vtable@@Base+0x241>
  40806e:	mov    rax,QWORD PTR [rbp-0x30]
  408072:	mov    ecx,DWORD PTR [rax+0x8]
  408075:	mov    rax,QWORD PTR [rbp-0x28]
  408079:	mov    DWORD PTR [rax+0x8],ecx
  40807c:	jmp    40814f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  408081:	mov    rax,QWORD PTR [rbp-0x10]
  408085:	cmp    QWORD PTR [rax+0x118],0x0
  40808d:	je     4080c9 <flatcc_builder_create_cached_vtable@@Base+0x289>
  408093:	mov    rax,QWORD PTR [rbp-0x10]
  408097:	mov    rax,QWORD PTR [rax+0x118]
  40809e:	mov    rcx,QWORD PTR [rbp-0x10]
  4080a2:	mov    edx,DWORD PTR [rcx+0xe0]
  4080a8:	movzx  esi,WORD PTR [rbp-0x1a]
  4080ac:	add    edx,esi
  4080ae:	mov    edx,edx
  4080b0:	mov    ecx,edx
  4080b2:	cmp    rax,rcx
  4080b5:	jae    4080c9 <flatcc_builder_create_cached_vtable@@Base+0x289>
  4080bb:	mov    rdi,QWORD PTR [rbp-0x10]
  4080bf:	call   405110 <flatcc_builder_flush_vtable_cache@@Base>
  4080c4:	jmp    40814a <flatcc_builder_create_cached_vtable@@Base+0x30a>
  4080c9:	xor    r8d,r8d
  4080cc:	mov    rdi,QWORD PTR [rbp-0x10]
  4080d0:	mov    rax,QWORD PTR [rbp-0x10]
  4080d4:	mov    ecx,DWORD PTR [rax+0xe0]
  4080da:	mov    edx,ecx
  4080dc:	movzx  ecx,WORD PTR [rbp-0x1a]
  4080e0:	mov    esi,0x2
  4080e5:	call   4056a0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  4080ea:	mov    QWORD PTR [rbp-0x50],rax
  4080ee:	cmp    rax,0x0
  4080f2:	jne    408104 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  4080f8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4080ff:	jmp    408158 <flatcc_builder_create_cached_vtable@@Base+0x318>
  408104:	mov    rax,QWORD PTR [rbp-0x10]
  408108:	mov    ecx,DWORD PTR [rax+0xe0]
  40810e:	mov    rax,QWORD PTR [rbp-0x28]
  408112:	mov    DWORD PTR [rax+0x8],ecx
  408115:	movzx  ecx,WORD PTR [rbp-0x1a]
  408119:	mov    rax,QWORD PTR [rbp-0x10]
  40811d:	add    ecx,DWORD PTR [rax+0xe0]
  408123:	mov    DWORD PTR [rax+0xe0],ecx
  408129:	mov    rax,QWORD PTR [rbp-0x50]
  40812d:	mov    rdx,QWORD PTR [rbp-0x18]
  408131:	movzx  ecx,WORD PTR [rbp-0x1a]
  408135:	mov    esi,ecx
  408137:	mov    rdi,rax
  40813a:	mov    QWORD PTR [rbp-0x68],rsi
  40813e:	mov    rsi,rdx
  408141:	mov    rdx,QWORD PTR [rbp-0x68]
  408145:	call   4030b0 <memcpy@plt>
  40814a:	jmp    40814f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  40814f:	mov    rax,QWORD PTR [rbp-0x28]
  408153:	mov    ecx,DWORD PTR [rax]
  408155:	mov    DWORD PTR [rbp-0x4],ecx
  408158:	mov    eax,DWORD PTR [rbp-0x4]
  40815b:	add    rsp,0x70
  40815f:	pop    rbp
  408160:	ret    
  408161:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40816b:	nop    DWORD PTR [rax+rax*1+0x0]
  408170:	push   rbp
  408171:	mov    rbp,rsp
  408174:	sub    rsp,0x20
  408178:	mov    QWORD PTR [rbp-0x10],rdi
  40817c:	mov    DWORD PTR [rbp-0x14],esi
  40817f:	mov    rdi,QWORD PTR [rbp-0x10]
  408183:	cmp    QWORD PTR [rdi+0xd8],0x0
  40818b:	jne    4081b5 <flatcc_builder_create_cached_vtable@@Base+0x375>
  408191:	mov    rdi,QWORD PTR [rbp-0x10]
  408195:	call   40abc0 <flatcc_builder_get_emit_context@@Base+0xe0>
  40819a:	cmp    eax,0x0
  40819d:	je     4081b0 <flatcc_builder_create_cached_vtable@@Base+0x370>
  4081a3:	mov    QWORD PTR [rbp-0x8],0x0
  4081ab:	jmp    4081f2 <flatcc_builder_create_cached_vtable@@Base+0x3b2>
  4081b0:	jmp    4081b5 <flatcc_builder_create_cached_vtable@@Base+0x375>
  4081b5:	mov    eax,0x20
  4081ba:	mov    ecx,eax
  4081bc:	mov    rdx,QWORD PTR [rbp-0x10]
  4081c0:	mov    rdx,QWORD PTR [rdx+0xa8]
  4081c7:	mov    QWORD PTR [rbp-0x20],rdx
  4081cb:	mov    rdx,QWORD PTR [rbp-0x20]
  4081cf:	mov    eax,DWORD PTR [rbp-0x14]
  4081d2:	mov    rsi,QWORD PTR [rbp-0x10]
  4081d6:	sub    rcx,QWORD PTR [rsi+0xd8]
  4081dd:	mov    edi,ecx
  4081df:	mov    ecx,edi
  4081e1:	shr    eax,cl
  4081e3:	mov    eax,eax
  4081e5:	mov    esi,eax
  4081e7:	shl    rsi,0x2
  4081eb:	add    rdx,rsi
  4081ee:	mov    QWORD PTR [rbp-0x8],rdx
  4081f2:	mov    rax,QWORD PTR [rbp-0x8]
  4081f6:	add    rsp,0x20
  4081fa:	pop    rbp
  4081fb:	ret    
  4081fc:	nop    DWORD PTR [rax+0x0]

0000000000408200 <flatcc_builder_create_table@@Base>:
  408200:	push   rbp
  408201:	mov    rbp,rsp
  408204:	sub    rsp,0xf0
  40820b:	mov    ax,cx
  40820e:	mov    ecx,DWORD PTR [rbp+0x10]
  408211:	mov    QWORD PTR [rbp-0x10],rdi
  408215:	mov    QWORD PTR [rbp-0x18],rsi
  408219:	mov    QWORD PTR [rbp-0x20],rdx
  40821d:	mov    WORD PTR [rbp-0x22],ax
  408221:	mov    QWORD PTR [rbp-0x30],r8
  408225:	mov    DWORD PTR [rbp-0x34],r9d
  408229:	cmp    DWORD PTR [rbp-0x34],0x0
  40822d:	mov    DWORD PTR [rbp-0xec],ecx
  408233:	jl     40823e <flatcc_builder_create_table@@Base+0x3e>
  408239:	jmp    40825d <flatcc_builder_create_table@@Base+0x5d>
  40823e:	lea    rdi,[rip+0xaab3]        # 412cf8 <flatcc_builder_padding_base@@Base+0x988>
  408245:	lea    rsi,[rip+0xa336]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40824c:	mov    edx,0x4d5
  408251:	lea    rcx,[rip+0xaab2]        # 412d0a <flatcc_builder_padding_base@@Base+0x99a>
  408258:	call   403060 <__assert_fail@plt>
  40825d:	mov    eax,DWORD PTR [rbp+0x10]
  408260:	and    eax,0x1
  408263:	cmp    eax,0x0
  408266:	je     408271 <flatcc_builder_create_table@@Base+0x71>
  40826c:	jmp    408290 <flatcc_builder_create_table@@Base+0x90>
  408271:	lea    rdi,[rip+0xab2e]        # 412da6 <flatcc_builder_padding_base@@Base+0xa36>
  408278:	lea    rsi,[rip+0xa303]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40827f:	mov    edx,0x4db
  408284:	lea    rcx,[rip+0xaa7f]        # 412d0a <flatcc_builder_padding_base@@Base+0x99a>
  40828b:	call   403060 <__assert_fail@plt>
  408290:	lea    rdi,[rbp-0x22]
  408294:	mov    esi,0x4
  408299:	call   407770 <flatcc_builder_start_vector@@Base+0xb0>
  40829e:	mov    rdi,QWORD PTR [rbp-0x10]
  4082a2:	movzx  esi,WORD PTR [rbp-0x22]
  4082a6:	call   4062e0 <flatcc_builder_create_buffer@@Base+0x410>
  4082ab:	mov    rdi,QWORD PTR [rbp-0x10]
  4082af:	mov    rax,QWORD PTR [rbp-0x20]
  4082b3:	mov    esi,eax
  4082b5:	movzx  edx,WORD PTR [rbp-0x22]
  4082b9:	call   405d90 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4082be:	mov    DWORD PTR [rbp-0x3c],eax
  4082c1:	mov    rdi,QWORD PTR [rbp-0x10]
  4082c5:	mov    eax,DWORD PTR [rdi+0xf0]
  4082cb:	mov    edx,DWORD PTR [rbp-0x3c]
  4082ce:	mov    edi,edx
  4082d0:	add    rdi,QWORD PTR [rbp-0x20]
  4082d4:	add    rdi,0x4
  4082d8:	mov    edx,edi
  4082da:	sub    eax,edx
  4082dc:	mov    DWORD PTR [rbp-0x4c],eax
  4082df:	mov    eax,DWORD PTR [rbp+0x10]
  4082e2:	sub    eax,0x1
  4082e5:	mov    DWORD PTR [rbp-0x48],eax
  4082e8:	mov    eax,DWORD PTR [rbp-0x4c]
  4082eb:	sub    eax,DWORD PTR [rbp-0x48]
  4082ee:	mov    DWORD PTR [rbp-0x40],eax
  4082f1:	mov    eax,DWORD PTR [rbp-0x4c]
  4082f4:	sub    eax,DWORD PTR [rbp-0x40]
  4082f7:	cmp    eax,DWORD PTR [rbp-0x48]
  4082fa:	je     40830c <flatcc_builder_create_table@@Base+0x10c>
  408300:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408307:	jmp    4084df <flatcc_builder_create_table@@Base+0x2df>
  40830c:	mov    edi,DWORD PTR [rbp-0x40]
  40830f:	call   405dc0 <flatcc_builder_embed_buffer@@Base+0x420>
  408314:	mov    DWORD PTR [rbp-0x44],eax
  408317:	mov    DWORD PTR [rbp-0x38],0x0
  40831e:	mov    eax,DWORD PTR [rbp-0x38]
  408321:	cmp    eax,DWORD PTR [rbp-0x34]
  408324:	jge    408383 <flatcc_builder_create_table@@Base+0x183>
  40832a:	mov    rax,QWORD PTR [rbp-0x18]
  40832e:	mov    rcx,QWORD PTR [rbp-0x30]
  408332:	movsxd rdx,DWORD PTR [rbp-0x38]
  408336:	movzx  esi,WORD PTR [rcx+rdx*2]
  40833a:	mov    ecx,esi
  40833c:	add    rax,rcx
  40833f:	mov    QWORD PTR [rbp-0x58],rax
  408343:	mov    rax,QWORD PTR [rbp-0x58]
  408347:	mov    esi,DWORD PTR [rax]
  408349:	sub    esi,DWORD PTR [rbp-0x4c]
  40834c:	mov    rax,QWORD PTR [rbp-0x30]
  408350:	movsxd rcx,DWORD PTR [rbp-0x38]
  408354:	movzx  edi,WORD PTR [rax+rcx*2]
  408358:	sub    esi,edi
  40835a:	mov    esi,esi
  40835c:	mov    eax,esi
  40835e:	sub    rax,0x4
  408362:	mov    esi,eax
  408364:	mov    DWORD PTR [rbp-0x50],esi
  408367:	mov    edi,DWORD PTR [rbp-0x50]
  40836a:	call   405dc0 <flatcc_builder_embed_buffer@@Base+0x420>
  40836f:	mov    rcx,QWORD PTR [rbp-0x58]
  408373:	mov    DWORD PTR [rcx],eax
  408375:	mov    eax,DWORD PTR [rbp-0x38]
  408378:	add    eax,0x1
  40837b:	mov    DWORD PTR [rbp-0x38],eax
  40837e:	jmp    40831e <flatcc_builder_create_table@@Base+0x11e>
  408383:	mov    QWORD PTR [rbp-0xe8],0x0
  40838e:	mov    DWORD PTR [rbp-0xe0],0x0
  408398:	mov    rax,QWORD PTR [rbp-0xe8]
  40839f:	add    rax,0x4
  4083a3:	mov    QWORD PTR [rbp-0xe8],rax
  4083aa:	lea    rax,[rbp-0x44]
  4083ae:	lea    rcx,[rbp-0xe8]
  4083b5:	mov    rdx,rcx
  4083b8:	add    rdx,0x10
  4083bc:	movsxd rsi,DWORD PTR [rbp-0xe0]
  4083c3:	shl    rsi,0x4
  4083c7:	add    rdx,rsi
  4083ca:	mov    QWORD PTR [rdx],rax
  4083cd:	add    rcx,0x10
  4083d1:	movsxd rax,DWORD PTR [rbp-0xe0]
  4083d8:	shl    rax,0x4
  4083dc:	add    rcx,rax
  4083df:	mov    QWORD PTR [rcx+0x8],0x4
  4083e7:	mov    edi,DWORD PTR [rbp-0xe0]
  4083ed:	add    edi,0x1
  4083f0:	mov    DWORD PTR [rbp-0xe0],edi
  4083f6:	cmp    QWORD PTR [rbp-0x20],0x0
  4083fb:	jbe    40845f <flatcc_builder_create_table@@Base+0x25f>
  408401:	mov    rax,QWORD PTR [rbp-0x20]
  408405:	add    rax,QWORD PTR [rbp-0xe8]
  40840c:	mov    QWORD PTR [rbp-0xe8],rax
  408413:	mov    rax,QWORD PTR [rbp-0x18]
  408417:	lea    rcx,[rbp-0xe8]
  40841e:	mov    rdx,rcx
  408421:	add    rdx,0x10
  408425:	movsxd rsi,DWORD PTR [rbp-0xe0]
  40842c:	shl    rsi,0x4
  408430:	add    rdx,rsi
  408433:	mov    QWORD PTR [rdx],rax
  408436:	mov    rax,QWORD PTR [rbp-0x20]
  40843a:	add    rcx,0x10
  40843e:	movsxd rdx,DWORD PTR [rbp-0xe0]
  408445:	shl    rdx,0x4
  408449:	add    rcx,rdx
  40844c:	mov    QWORD PTR [rcx+0x8],rax
  408450:	mov    edi,DWORD PTR [rbp-0xe0]
  408456:	add    edi,0x1
  408459:	mov    DWORD PTR [rbp-0xe0],edi
  40845f:	cmp    DWORD PTR [rbp-0x3c],0x0
  408463:	jbe    4084cc <flatcc_builder_create_table@@Base+0x2cc>
  408469:	lea    rax,[rip+0x9f00]        # 412370 <flatcc_builder_padding_base@@Base>
  408470:	mov    ecx,DWORD PTR [rbp-0x3c]
  408473:	mov    edx,ecx
  408475:	add    rdx,QWORD PTR [rbp-0xe8]
  40847c:	mov    QWORD PTR [rbp-0xe8],rdx
  408483:	lea    rdx,[rbp-0xe8]
  40848a:	mov    rsi,rdx
  40848d:	add    rsi,0x10
  408491:	movsxd rdi,DWORD PTR [rbp-0xe0]
  408498:	shl    rdi,0x4
  40849c:	add    rsi,rdi
  40849f:	mov    QWORD PTR [rsi],rax
  4084a2:	mov    ecx,DWORD PTR [rbp-0x3c]
  4084a5:	mov    eax,ecx
  4084a7:	add    rdx,0x10
  4084ab:	movsxd rsi,DWORD PTR [rbp-0xe0]
  4084b2:	shl    rsi,0x4
  4084b6:	add    rdx,rsi
  4084b9:	mov    QWORD PTR [rdx+0x8],rax
  4084bd:	mov    ecx,DWORD PTR [rbp-0xe0]
  4084c3:	add    ecx,0x1
  4084c6:	mov    DWORD PTR [rbp-0xe0],ecx
  4084cc:	mov    rdi,QWORD PTR [rbp-0x10]
  4084d0:	lea    rsi,[rbp-0xe8]
  4084d7:	call   405dd0 <flatcc_builder_embed_buffer@@Base+0x430>
  4084dc:	mov    DWORD PTR [rbp-0x4],eax
  4084df:	mov    eax,DWORD PTR [rbp-0x4]
  4084e2:	add    rsp,0xf0
  4084e9:	pop    rbp
  4084ea:	ret    
  4084eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004084f0 <flatcc_builder_check_required_field@@Base>:
  4084f0:	push   rbp
  4084f1:	mov    rbp,rsp
  4084f4:	sub    rsp,0x10
  4084f8:	mov    ax,si
  4084fb:	mov    QWORD PTR [rbp-0x8],rdi
  4084ff:	mov    WORD PTR [rbp-0xa],ax
  408503:	mov    rdi,QWORD PTR [rbp-0x8]
  408507:	mov    rdi,QWORD PTR [rdi+0x30]
  40850b:	movzx  esi,WORD PTR [rdi+0xe]
  40850f:	cmp    esi,0x3
  408512:	jne    40851d <flatcc_builder_check_required_field@@Base+0x2d>
  408518:	jmp    40853c <flatcc_builder_check_required_field@@Base+0x4c>
  40851d:	lea    rdi,[rip+0xa88d]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  408524:	lea    rsi,[rip+0xa057]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40852b:	mov    edx,0x4f8
  408530:	lea    rcx,[rip+0xa8a5]        # 412ddc <flatcc_builder_padding_base@@Base+0xa6c>
  408537:	call   403060 <__assert_fail@plt>
  40853c:	xor    eax,eax
  40853e:	mov    cl,al
  408540:	movzx  eax,WORD PTR [rbp-0xa]
  408544:	mov    rdx,QWORD PTR [rbp-0x8]
  408548:	movzx  esi,WORD PTR [rdx+0x10]
  40854c:	cmp    eax,esi
  40854e:	mov    BYTE PTR [rbp-0xb],cl
  408551:	jge    408574 <flatcc_builder_check_required_field@@Base+0x84>
  408557:	mov    rax,QWORD PTR [rbp-0x8]
  40855b:	mov    rax,QWORD PTR [rax+0x8]
  40855f:	movzx  ecx,WORD PTR [rbp-0xa]
  408563:	mov    edx,ecx
  408565:	movzx  ecx,WORD PTR [rax+rdx*2]
  408569:	cmp    ecx,0x0
  40856c:	setne  sil
  408570:	mov    BYTE PTR [rbp-0xb],sil
  408574:	mov    al,BYTE PTR [rbp-0xb]
  408577:	and    al,0x1
  408579:	movzx  eax,al
  40857c:	add    rsp,0x10
  408580:	pop    rbp
  408581:	ret    
  408582:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40858c:	nop    DWORD PTR [rax+0x0]

0000000000408590 <flatcc_builder_check_union_field@@Base>:
  408590:	push   rbp
  408591:	mov    rbp,rsp
  408594:	sub    rsp,0x20
  408598:	mov    ax,si
  40859b:	mov    QWORD PTR [rbp-0x10],rdi
  40859f:	mov    WORD PTR [rbp-0x12],ax
  4085a3:	mov    rdi,QWORD PTR [rbp-0x10]
  4085a7:	mov    rdi,QWORD PTR [rdi+0x30]
  4085ab:	movzx  esi,WORD PTR [rdi+0xe]
  4085af:	cmp    esi,0x3
  4085b2:	jne    4085bd <flatcc_builder_check_union_field@@Base+0x2d>
  4085b8:	jmp    4085dc <flatcc_builder_check_union_field@@Base+0x4c>
  4085bd:	lea    rdi,[rip+0xa7ed]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  4085c4:	lea    rsi,[rip+0x9fb7]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4085cb:	mov    edx,0x4ff
  4085d0:	lea    rcx,[rip+0xa858]        # 412e2f <flatcc_builder_padding_base@@Base+0xabf>
  4085d7:	call   403060 <__assert_fail@plt>
  4085dc:	movzx  eax,WORD PTR [rbp-0x12]
  4085e0:	cmp    eax,0x0
  4085e3:	je     4085fd <flatcc_builder_check_union_field@@Base+0x6d>
  4085e9:	movzx  eax,WORD PTR [rbp-0x12]
  4085ed:	mov    rcx,QWORD PTR [rbp-0x10]
  4085f1:	movzx  edx,WORD PTR [rcx+0x10]
  4085f5:	cmp    eax,edx
  4085f7:	jl     408609 <flatcc_builder_check_union_field@@Base+0x79>
  4085fd:	mov    DWORD PTR [rbp-0x4],0x0
  408604:	jmp    4086c9 <flatcc_builder_check_union_field@@Base+0x139>
  408609:	mov    rax,QWORD PTR [rbp-0x10]
  40860d:	mov    rax,QWORD PTR [rax+0x8]
  408611:	movzx  ecx,WORD PTR [rbp-0x12]
  408615:	sub    ecx,0x1
  408618:	movsxd rdx,ecx
  40861b:	movzx  ecx,WORD PTR [rax+rdx*2]
  40861f:	cmp    ecx,0x0
  408622:	jne    408651 <flatcc_builder_check_union_field@@Base+0xc1>
  408628:	mov    rax,QWORD PTR [rbp-0x10]
  40862c:	mov    rax,QWORD PTR [rax+0x8]
  408630:	movzx  ecx,WORD PTR [rbp-0x12]
  408634:	mov    edx,ecx
  408636:	movzx  ecx,WORD PTR [rax+rdx*2]
  40863a:	cmp    ecx,0x0
  40863d:	sete   sil
  408641:	and    sil,0x1
  408645:	movzx  ecx,sil
  408649:	mov    DWORD PTR [rbp-0x4],ecx
  40864c:	jmp    4086c9 <flatcc_builder_check_union_field@@Base+0x139>
  408651:	mov    rax,QWORD PTR [rbp-0x10]
  408655:	mov    rax,QWORD PTR [rax+0x18]
  408659:	mov    rcx,QWORD PTR [rbp-0x10]
  40865d:	mov    rcx,QWORD PTR [rcx+0x8]
  408661:	movzx  edx,WORD PTR [rbp-0x12]
  408665:	sub    edx,0x1
  408668:	movsxd rsi,edx
  40866b:	movzx  edx,WORD PTR [rcx+rsi*2]
  40866f:	movsxd rcx,edx
  408672:	cmp    BYTE PTR [rax+rcx*1],0x0
  408676:	je     4086a5 <flatcc_builder_check_union_field@@Base+0x115>
  40867c:	mov    rax,QWORD PTR [rbp-0x10]
  408680:	mov    rax,QWORD PTR [rax+0x8]
  408684:	movzx  ecx,WORD PTR [rbp-0x12]
  408688:	mov    edx,ecx
  40868a:	movzx  ecx,WORD PTR [rax+rdx*2]
  40868e:	cmp    ecx,0x0
  408691:	setne  sil
  408695:	and    sil,0x1
  408699:	movzx  ecx,sil
  40869d:	mov    DWORD PTR [rbp-0x4],ecx
  4086a0:	jmp    4086c9 <flatcc_builder_check_union_field@@Base+0x139>
  4086a5:	mov    rax,QWORD PTR [rbp-0x10]
  4086a9:	mov    rax,QWORD PTR [rax+0x8]
  4086ad:	movzx  ecx,WORD PTR [rbp-0x12]
  4086b1:	mov    edx,ecx
  4086b3:	movzx  ecx,WORD PTR [rax+rdx*2]
  4086b7:	cmp    ecx,0x0
  4086ba:	sete   sil
  4086be:	and    sil,0x1
  4086c2:	movzx  ecx,sil
  4086c6:	mov    DWORD PTR [rbp-0x4],ecx
  4086c9:	mov    eax,DWORD PTR [rbp-0x4]
  4086cc:	add    rsp,0x20
  4086d0:	pop    rbp
  4086d1:	ret    
  4086d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4086dc:	nop    DWORD PTR [rax+0x0]

00000000004086e0 <flatcc_builder_check_required@@Base>:
  4086e0:	push   rbp
  4086e1:	mov    rbp,rsp
  4086e4:	sub    rsp,0x20
  4086e8:	mov    QWORD PTR [rbp-0x10],rdi
  4086ec:	mov    QWORD PTR [rbp-0x18],rsi
  4086f0:	mov    DWORD PTR [rbp-0x1c],edx
  4086f3:	mov    rsi,QWORD PTR [rbp-0x10]
  4086f7:	mov    rsi,QWORD PTR [rsi+0x30]
  4086fb:	movzx  edx,WORD PTR [rsi+0xe]
  4086ff:	cmp    edx,0x3
  408702:	jne    40870d <flatcc_builder_check_required@@Base+0x2d>
  408708:	jmp    40872c <flatcc_builder_check_required@@Base+0x4c>
  40870d:	lea    rdi,[rip+0xa69d]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  408714:	lea    rsi,[rip+0x9e67]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40871b:	mov    edx,0x511
  408720:	lea    rcx,[rip+0xa758]        # 412e7f <flatcc_builder_padding_base@@Base+0xb0f>
  408727:	call   403060 <__assert_fail@plt>
  40872c:	mov    rax,QWORD PTR [rbp-0x10]
  408730:	movzx  ecx,WORD PTR [rax+0x10]
  408734:	cmp    ecx,DWORD PTR [rbp-0x1c]
  408737:	jge    408749 <flatcc_builder_check_required@@Base+0x69>
  40873d:	mov    DWORD PTR [rbp-0x4],0x0
  408744:	jmp    4087a5 <flatcc_builder_check_required@@Base+0xc5>
  408749:	mov    DWORD PTR [rbp-0x20],0x0
  408750:	mov    eax,DWORD PTR [rbp-0x20]
  408753:	cmp    eax,DWORD PTR [rbp-0x1c]
  408756:	jge    40879e <flatcc_builder_check_required@@Base+0xbe>
  40875c:	mov    rax,QWORD PTR [rbp-0x10]
  408760:	mov    rax,QWORD PTR [rax+0x8]
  408764:	mov    rcx,QWORD PTR [rbp-0x18]
  408768:	movsxd rdx,DWORD PTR [rbp-0x20]
  40876c:	movzx  esi,WORD PTR [rcx+rdx*2]
  408770:	mov    ecx,esi
  408772:	movzx  esi,WORD PTR [rax+rcx*2]
  408776:	cmp    esi,0x0
  408779:	jne    40878b <flatcc_builder_check_required@@Base+0xab>
  40877f:	mov    DWORD PTR [rbp-0x4],0x0
  408786:	jmp    4087a5 <flatcc_builder_check_required@@Base+0xc5>
  40878b:	jmp    408790 <flatcc_builder_check_required@@Base+0xb0>
  408790:	mov    eax,DWORD PTR [rbp-0x20]
  408793:	add    eax,0x1
  408796:	mov    DWORD PTR [rbp-0x20],eax
  408799:	jmp    408750 <flatcc_builder_check_required@@Base+0x70>
  40879e:	mov    DWORD PTR [rbp-0x4],0x1
  4087a5:	mov    eax,DWORD PTR [rbp-0x4]
  4087a8:	add    rsp,0x20
  4087ac:	pop    rbp
  4087ad:	ret    
  4087ae:	xchg   ax,ax

00000000004087b0 <flatcc_builder_end_table@@Base>:
  4087b0:	push   rbp
  4087b1:	mov    rbp,rsp
  4087b4:	sub    rsp,0x40
  4087b8:	mov    QWORD PTR [rbp-0x10],rdi
  4087bc:	mov    rdi,QWORD PTR [rbp-0x10]
  4087c0:	mov    rdi,QWORD PTR [rdi+0x30]
  4087c4:	movzx  eax,WORD PTR [rdi+0xe]
  4087c8:	cmp    eax,0x3
  4087cb:	jne    4087d6 <flatcc_builder_end_table@@Base+0x26>
  4087d1:	jmp    4087f5 <flatcc_builder_end_table@@Base+0x45>
  4087d6:	lea    rdi,[rip+0xa5d4]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  4087dd:	lea    rsi,[rip+0x9d9e]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4087e4:	mov    edx,0x525
  4087e9:	lea    rcx,[rip+0xa6e9]        # 412ed9 <flatcc_builder_padding_base@@Base+0xb69>
  4087f0:	call   403060 <__assert_fail@plt>
  4087f5:	mov    rax,QWORD PTR [rbp-0x10]
  4087f9:	mov    rax,QWORD PTR [rax+0x8]
  4087fd:	add    rax,0xfffffffffffffffc
  408801:	mov    QWORD PTR [rbp-0x18],rax
  408805:	mov    rax,QWORD PTR [rbp-0x10]
  408809:	movzx  ecx,WORD PTR [rax+0x10]
  40880d:	add    ecx,0x2
  408810:	movsxd rax,ecx
  408813:	shl    rax,0x1
  408817:	mov    dx,ax
  40881a:	mov    WORD PTR [rbp-0x1a],dx
  40881e:	mov    dx,WORD PTR [rbp-0x1a]
  408822:	mov    rax,QWORD PTR [rbp-0x18]
  408826:	mov    WORD PTR [rax],dx
  408829:	mov    rax,QWORD PTR [rbp-0x10]
  40882d:	mov    ecx,DWORD PTR [rax+0x20]
  408830:	mov    dx,cx
  408833:	movzx  ecx,dx
  408836:	mov    eax,ecx
  408838:	add    rax,0x4
  40883c:	mov    dx,ax
  40883f:	mov    rax,QWORD PTR [rbp-0x18]
  408843:	mov    WORD PTR [rax+0x2],dx
  408847:	mov    rax,QWORD PTR [rbp-0x18]
  40884b:	movzx  ecx,WORD PTR [rax]
  40884e:	mov    rax,QWORD PTR [rbp-0x10]
  408852:	xor    ecx,DWORD PTR [rax+0x14]
  408855:	imul   ecx,ecx,0x9e3779b1
  40885b:	mov    rax,QWORD PTR [rbp-0x18]
  40885f:	movzx  esi,WORD PTR [rax+0x2]
  408863:	xor    ecx,esi
  408865:	imul   ecx,ecx,0x9e3779b1
  40886b:	mov    rax,QWORD PTR [rbp-0x10]
  40886f:	mov    DWORD PTR [rax+0x14],ecx
  408872:	mov    rdi,QWORD PTR [rbp-0x10]
  408876:	mov    rsi,QWORD PTR [rbp-0x18]
  40887a:	mov    dx,WORD PTR [rbp-0x1a]
  40887e:	mov    rax,QWORD PTR [rbp-0x10]
  408882:	mov    ecx,DWORD PTR [rax+0x14]
  408885:	movzx  edx,dx
  408888:	call   407e40 <flatcc_builder_create_cached_vtable@@Base>
  40888d:	mov    DWORD PTR [rbp-0x24],eax
  408890:	cmp    eax,0x0
  408893:	jne    4088a5 <flatcc_builder_end_table@@Base+0xf5>
  408899:	mov    DWORD PTR [rbp-0x4],0x0
  4088a0:	jmp    4089c5 <flatcc_builder_end_table@@Base+0x215>
  4088a5:	xor    esi,esi
  4088a7:	mov    rax,QWORD PTR [rbp-0x18]
  4088ab:	movzx  ecx,WORD PTR [rbp-0x1a]
  4088af:	mov    edx,ecx
  4088b1:	mov    rdi,rax
  4088b4:	call   403070 <memset@plt>
  4088b9:	mov    rax,QWORD PTR [rbp-0x10]
  4088bd:	mov    rax,QWORD PTR [rax+0x88]
  4088c4:	mov    rdx,QWORD PTR [rbp-0x10]
  4088c8:	mov    rdx,QWORD PTR [rdx+0x30]
  4088cc:	mov    ecx,DWORD PTR [rdx+0x14]
  4088cf:	mov    edx,ecx
  4088d1:	add    rax,rdx
  4088d4:	mov    QWORD PTR [rbp-0x30],rax
  4088d8:	mov    rax,QWORD PTR [rbp-0x10]
  4088dc:	mov    rax,QWORD PTR [rax]
  4088df:	mov    rdx,QWORD PTR [rbp-0x30]
  4088e3:	sub    rax,rdx
  4088e6:	sar    rax,0x1
  4088ea:	mov    ecx,eax
  4088ec:	mov    DWORD PTR [rbp-0x28],ecx
  4088ef:	mov    rdi,QWORD PTR [rbp-0x10]
  4088f3:	mov    rax,QWORD PTR [rbp-0x10]
  4088f7:	mov    rsi,QWORD PTR [rax+0x18]
  4088fb:	mov    rax,QWORD PTR [rbp-0x10]
  4088ff:	mov    ecx,DWORD PTR [rax+0x20]
  408902:	mov    edx,ecx
  408904:	mov    rax,QWORD PTR [rbp-0x10]
  408908:	mov    r8w,WORD PTR [rax+0xea]
  408910:	mov    rax,QWORD PTR [rbp-0x30]
  408914:	mov    r9d,DWORD PTR [rbp-0x28]
  408918:	mov    ecx,DWORD PTR [rbp-0x24]
  40891b:	movzx  r10d,r8w
  40891f:	mov    DWORD PTR [rbp-0x34],ecx
  408922:	mov    ecx,r10d
  408925:	mov    r8,rax
  408928:	mov    r10d,DWORD PTR [rbp-0x34]
  40892c:	mov    DWORD PTR [rsp],r10d
  408930:	call   408200 <flatcc_builder_create_table@@Base>
  408935:	xor    ecx,ecx
  408937:	mov    DWORD PTR [rbp-0x20],eax
  40893a:	cmp    ecx,eax
  40893c:	jne    40894e <flatcc_builder_end_table@@Base+0x19e>
  408942:	mov    DWORD PTR [rbp-0x4],0x0
  408949:	jmp    4089c5 <flatcc_builder_end_table@@Base+0x215>
  40894e:	mov    rax,QWORD PTR [rbp-0x10]
  408952:	mov    rax,QWORD PTR [rax+0x30]
  408956:	mov    ecx,DWORD PTR [rax+0x18]
  408959:	mov    rax,QWORD PTR [rbp-0x10]
  40895d:	mov    DWORD PTR [rax+0x14],ecx
  408960:	mov    rax,QWORD PTR [rbp-0x10]
  408964:	mov    rax,QWORD PTR [rax+0x30]
  408968:	mov    dx,WORD PTR [rax+0x1c]
  40896c:	mov    rax,QWORD PTR [rbp-0x10]
  408970:	mov    WORD PTR [rax+0x10],dx
  408974:	mov    rax,QWORD PTR [rbp-0x10]
  408978:	mov    rax,QWORD PTR [rax+0x58]
  40897c:	mov    rsi,QWORD PTR [rbp-0x10]
  408980:	mov    rsi,QWORD PTR [rsi+0x30]
  408984:	mov    ecx,DWORD PTR [rsi+0x10]
  408987:	mov    esi,ecx
  408989:	add    rax,rsi
  40898c:	mov    rsi,QWORD PTR [rbp-0x10]
  408990:	mov    QWORD PTR [rsi+0x8],rax
  408994:	mov    rax,QWORD PTR [rbp-0x10]
  408998:	mov    rax,QWORD PTR [rax+0x88]
  40899f:	mov    rsi,QWORD PTR [rbp-0x10]
  4089a3:	mov    rsi,QWORD PTR [rsi+0x30]
  4089a7:	mov    ecx,DWORD PTR [rsi+0x14]
  4089aa:	mov    esi,ecx
  4089ac:	add    rax,rsi
  4089af:	mov    rsi,QWORD PTR [rbp-0x10]
  4089b3:	mov    QWORD PTR [rsi],rax
  4089b6:	mov    rdi,QWORD PTR [rbp-0x10]
  4089ba:	call   406950 <flatcc_builder_end_buffer@@Base+0x160>
  4089bf:	mov    ecx,DWORD PTR [rbp-0x20]
  4089c2:	mov    DWORD PTR [rbp-0x4],ecx
  4089c5:	mov    eax,DWORD PTR [rbp-0x4]
  4089c8:	add    rsp,0x40
  4089cc:	pop    rbp
  4089cd:	ret    
  4089ce:	xchg   ax,ax

00000000004089d0 <flatcc_builder_create_vector@@Base>:
  4089d0:	push   rbp
  4089d1:	mov    rbp,rsp
  4089d4:	sub    rsp,0xe0
  4089db:	mov    ax,r8w
  4089df:	mov    QWORD PTR [rbp-0x10],rdi
  4089e3:	mov    QWORD PTR [rbp-0x18],rsi
  4089e7:	mov    QWORD PTR [rbp-0x20],rdx
  4089eb:	mov    QWORD PTR [rbp-0x28],rcx
  4089ef:	mov    WORD PTR [rbp-0x2a],ax
  4089f3:	mov    QWORD PTR [rbp-0x38],r9
  4089f7:	mov    rcx,QWORD PTR [rbp-0x20]
  4089fb:	cmp    rcx,QWORD PTR [rbp-0x38]
  4089ff:	jbe    408a43 <flatcc_builder_create_vector@@Base+0x73>
  408a05:	mov    rax,QWORD PTR [rbp-0x20]
  408a09:	cmp    rax,QWORD PTR [rbp-0x38]
  408a0d:	ja     408a18 <flatcc_builder_create_vector@@Base+0x48>
  408a13:	jmp    408a37 <flatcc_builder_create_vector@@Base+0x67>
  408a18:	lea    rdi,[rip+0xa4fc]        # 412f1b <flatcc_builder_padding_base@@Base+0xbab>
  408a1f:	lea    rsi,[rip+0x9b5c]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  408a26:	mov    edx,0x555
  408a2b:	lea    rcx,[rip+0xa4fc]        # 412f2e <flatcc_builder_padding_base@@Base+0xbbe>
  408a32:	call   403060 <__assert_fail@plt>
  408a37:	mov    DWORD PTR [rbp-0x4],0x0
  408a3e:	jmp    408bf0 <flatcc_builder_create_vector@@Base+0x220>
  408a43:	lea    rdi,[rbp-0x2a]
  408a47:	mov    esi,0x4
  408a4c:	call   407770 <flatcc_builder_start_vector@@Base+0xb0>
  408a51:	mov    rdi,QWORD PTR [rbp-0x10]
  408a55:	movzx  esi,WORD PTR [rbp-0x2a]
  408a59:	call   4062e0 <flatcc_builder_create_buffer@@Base+0x410>
  408a5e:	mov    rdi,QWORD PTR [rbp-0x20]
  408a62:	mov    esi,edi
  408a64:	mov    rdi,QWORD PTR [rbp-0x28]
  408a68:	mov    eax,edi
  408a6a:	imul   esi,eax
  408a6d:	mov    DWORD PTR [rbp-0x3c],esi
  408a70:	mov    rdi,QWORD PTR [rbp-0x20]
  408a74:	mov    eax,edi
  408a76:	mov    edi,eax
  408a78:	call   405dc0 <flatcc_builder_embed_buffer@@Base+0x420>
  408a7d:	mov    DWORD PTR [rbp-0x44],eax
  408a80:	mov    rdi,QWORD PTR [rbp-0x10]
  408a84:	mov    esi,DWORD PTR [rbp-0x3c]
  408a87:	movzx  edx,WORD PTR [rbp-0x2a]
  408a8b:	call   405d90 <flatcc_builder_embed_buffer@@Base+0x3f0>
  408a90:	mov    DWORD PTR [rbp-0x40],eax
  408a93:	mov    QWORD PTR [rbp-0xd8],0x0
  408a9e:	mov    DWORD PTR [rbp-0xd0],0x0
  408aa8:	mov    rdi,QWORD PTR [rbp-0xd8]
  408aaf:	add    rdi,0x4
  408ab3:	mov    QWORD PTR [rbp-0xd8],rdi
  408aba:	lea    rdi,[rbp-0x44]
  408abe:	lea    rcx,[rbp-0xd8]
  408ac5:	mov    r8,rcx
  408ac8:	add    r8,0x10
  408acc:	movsxd r9,DWORD PTR [rbp-0xd0]
  408ad3:	shl    r9,0x4
  408ad7:	add    r8,r9
  408ada:	mov    QWORD PTR [r8],rdi
  408add:	add    rcx,0x10
  408ae1:	movsxd rdi,DWORD PTR [rbp-0xd0]
  408ae8:	shl    rdi,0x4
  408aec:	add    rcx,rdi
  408aef:	mov    QWORD PTR [rcx+0x8],0x4
  408af7:	mov    eax,DWORD PTR [rbp-0xd0]
  408afd:	add    eax,0x1
  408b00:	mov    DWORD PTR [rbp-0xd0],eax
  408b06:	cmp    DWORD PTR [rbp-0x3c],0x0
  408b0a:	jbe    408b70 <flatcc_builder_create_vector@@Base+0x1a0>
  408b10:	mov    eax,DWORD PTR [rbp-0x3c]
  408b13:	mov    ecx,eax
  408b15:	add    rcx,QWORD PTR [rbp-0xd8]
  408b1c:	mov    QWORD PTR [rbp-0xd8],rcx
  408b23:	mov    rcx,QWORD PTR [rbp-0x18]
  408b27:	lea    rdx,[rbp-0xd8]
  408b2e:	mov    rsi,rdx
  408b31:	add    rsi,0x10
  408b35:	movsxd rdi,DWORD PTR [rbp-0xd0]
  408b3c:	shl    rdi,0x4
  408b40:	add    rsi,rdi
  408b43:	mov    QWORD PTR [rsi],rcx
  408b46:	mov    eax,DWORD PTR [rbp-0x3c]
  408b49:	mov    ecx,eax
  408b4b:	add    rdx,0x10
  408b4f:	movsxd rsi,DWORD PTR [rbp-0xd0]
  408b56:	shl    rsi,0x4
  408b5a:	add    rdx,rsi
  408b5d:	mov    QWORD PTR [rdx+0x8],rcx
  408b61:	mov    eax,DWORD PTR [rbp-0xd0]
  408b67:	add    eax,0x1
  408b6a:	mov    DWORD PTR [rbp-0xd0],eax
  408b70:	cmp    DWORD PTR [rbp-0x40],0x0
  408b74:	jbe    408bdd <flatcc_builder_create_vector@@Base+0x20d>
  408b7a:	lea    rax,[rip+0x97ef]        # 412370 <flatcc_builder_padding_base@@Base>
  408b81:	mov    ecx,DWORD PTR [rbp-0x40]
  408b84:	mov    edx,ecx
  408b86:	add    rdx,QWORD PTR [rbp-0xd8]
  408b8d:	mov    QWORD PTR [rbp-0xd8],rdx
  408b94:	lea    rdx,[rbp-0xd8]
  408b9b:	mov    rsi,rdx
  408b9e:	add    rsi,0x10
  408ba2:	movsxd rdi,DWORD PTR [rbp-0xd0]
  408ba9:	shl    rdi,0x4
  408bad:	add    rsi,rdi
  408bb0:	mov    QWORD PTR [rsi],rax
  408bb3:	mov    ecx,DWORD PTR [rbp-0x40]
  408bb6:	mov    eax,ecx
  408bb8:	add    rdx,0x10
  408bbc:	movsxd rsi,DWORD PTR [rbp-0xd0]
  408bc3:	shl    rsi,0x4
  408bc7:	add    rdx,rsi
  408bca:	mov    QWORD PTR [rdx+0x8],rax
  408bce:	mov    ecx,DWORD PTR [rbp-0xd0]
  408bd4:	add    ecx,0x1
  408bd7:	mov    DWORD PTR [rbp-0xd0],ecx
  408bdd:	mov    rdi,QWORD PTR [rbp-0x10]
  408be1:	lea    rsi,[rbp-0xd8]
  408be8:	call   405dd0 <flatcc_builder_embed_buffer@@Base+0x430>
  408bed:	mov    DWORD PTR [rbp-0x4],eax
  408bf0:	mov    eax,DWORD PTR [rbp-0x4]
  408bf3:	add    rsp,0xe0
  408bfa:	pop    rbp
  408bfb:	ret    
  408bfc:	nop    DWORD PTR [rax+0x0]

0000000000408c00 <flatcc_builder_end_vector@@Base>:
  408c00:	push   rbp
  408c01:	mov    rbp,rsp
  408c04:	sub    rsp,0x20
  408c08:	mov    QWORD PTR [rbp-0x10],rdi
  408c0c:	mov    rdi,QWORD PTR [rbp-0x10]
  408c10:	mov    rdi,QWORD PTR [rdi+0x30]
  408c14:	movzx  eax,WORD PTR [rdi+0xe]
  408c18:	cmp    eax,0x4
  408c1b:	jne    408c26 <flatcc_builder_end_vector@@Base+0x26>
  408c21:	jmp    408c45 <flatcc_builder_end_vector@@Base+0x45>
  408c26:	lea    rdi,[rip+0x9c92]        # 4128bf <flatcc_builder_padding_base@@Base+0x54f>
  408c2d:	lea    rsi,[rip+0x994e]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  408c34:	mov    edx,0x578
  408c39:	lea    rcx,[rip+0xa364]        # 412fa4 <flatcc_builder_padding_base@@Base+0xc34>
  408c40:	call   403060 <__assert_fail@plt>
  408c45:	mov    rdi,QWORD PTR [rbp-0x10]
  408c49:	mov    rax,QWORD PTR [rbp-0x10]
  408c4d:	mov    rsi,QWORD PTR [rax+0x18]
  408c51:	mov    rax,QWORD PTR [rbp-0x10]
  408c55:	mov    rax,QWORD PTR [rax+0x30]
  408c59:	mov    ecx,DWORD PTR [rax+0x14]
  408c5c:	mov    edx,ecx
  408c5e:	mov    rax,QWORD PTR [rbp-0x10]
  408c62:	mov    rax,QWORD PTR [rax+0x30]
  408c66:	mov    ecx,DWORD PTR [rax+0x10]
  408c69:	mov    rax,QWORD PTR [rbp-0x10]
  408c6d:	mov    r8w,WORD PTR [rax+0xea]
  408c75:	mov    rax,QWORD PTR [rbp-0x10]
  408c79:	mov    rax,QWORD PTR [rax+0x30]
  408c7d:	mov    r9d,DWORD PTR [rax+0x18]
  408c81:	movzx  r8d,r8w
  408c85:	call   4089d0 <flatcc_builder_create_vector@@Base>
  408c8a:	xor    r8d,r8d
  408c8d:	mov    DWORD PTR [rbp-0x14],eax
  408c90:	cmp    r8d,eax
  408c93:	jne    408ca5 <flatcc_builder_end_vector@@Base+0xa5>
  408c99:	mov    DWORD PTR [rbp-0x4],0x0
  408ca0:	jmp    408cb4 <flatcc_builder_end_vector@@Base+0xb4>
  408ca5:	mov    rdi,QWORD PTR [rbp-0x10]
  408ca9:	call   406950 <flatcc_builder_end_buffer@@Base+0x160>
  408cae:	mov    eax,DWORD PTR [rbp-0x14]
  408cb1:	mov    DWORD PTR [rbp-0x4],eax
  408cb4:	mov    eax,DWORD PTR [rbp-0x4]
  408cb7:	add    rsp,0x20
  408cbb:	pop    rbp
  408cbc:	ret    
  408cbd:	nop    DWORD PTR [rax]

0000000000408cc0 <flatcc_builder_vector_count@@Base>:
  408cc0:	push   rbp
  408cc1:	mov    rbp,rsp
  408cc4:	mov    QWORD PTR [rbp-0x8],rdi
  408cc8:	mov    rdi,QWORD PTR [rbp-0x8]
  408ccc:	mov    rdi,QWORD PTR [rdi+0x30]
  408cd0:	mov    eax,DWORD PTR [rdi+0x14]
  408cd3:	pop    rbp
  408cd4:	ret    
  408cd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408cdf:	nop

0000000000408ce0 <flatcc_builder_vector_edit@@Base>:
  408ce0:	push   rbp
  408ce1:	mov    rbp,rsp
  408ce4:	mov    QWORD PTR [rbp-0x8],rdi
  408ce8:	mov    rdi,QWORD PTR [rbp-0x8]
  408cec:	mov    rax,QWORD PTR [rdi+0x18]
  408cf0:	pop    rbp
  408cf1:	ret    
  408cf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408cfc:	nop    DWORD PTR [rax+0x0]

0000000000408d00 <flatcc_builder_create_offset_vector_direct@@Base>:
  408d00:	push   rbp
  408d01:	mov    rbp,rsp
  408d04:	sub    rsp,0x20
  408d08:	xor    eax,eax
  408d0a:	mov    ecx,eax
  408d0c:	mov    QWORD PTR [rbp-0x8],rdi
  408d10:	mov    QWORD PTR [rbp-0x10],rsi
  408d14:	mov    QWORD PTR [rbp-0x18],rdx
  408d18:	mov    rdi,QWORD PTR [rbp-0x8]
  408d1c:	mov    rsi,QWORD PTR [rbp-0x10]
  408d20:	mov    rdx,QWORD PTR [rbp-0x18]
  408d24:	call   408d30 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  408d29:	add    rsp,0x20
  408d2d:	pop    rbp
  408d2e:	ret    
  408d2f:	nop
  408d30:	push   rbp
  408d31:	mov    rbp,rsp
  408d34:	sub    rsp,0xd0
  408d3b:	mov    QWORD PTR [rbp-0x10],rdi
  408d3f:	mov    QWORD PTR [rbp-0x18],rsi
  408d43:	mov    QWORD PTR [rbp-0x20],rdx
  408d47:	mov    QWORD PTR [rbp-0x28],rcx
  408d4b:	mov    rcx,QWORD PTR [rbp-0x20]
  408d4f:	mov    eax,ecx
  408d51:	mov    eax,eax
  408d53:	mov    ecx,eax
  408d55:	cmp    rcx,0x3fffffff
  408d5c:	jbe    408d6e <flatcc_builder_create_offset_vector_direct@@Base+0x6e>
  408d62:	mov    DWORD PTR [rbp-0x4],0x0
  408d69:	jmp    40905f <flatcc_builder_create_offset_vector_direct@@Base+0x35f>
  408d6e:	mov    rdi,QWORD PTR [rbp-0x10]
  408d72:	mov    esi,0x4
  408d77:	call   4062e0 <flatcc_builder_create_buffer@@Base+0x410>
  408d7c:	mov    rdi,QWORD PTR [rbp-0x20]
  408d80:	mov    esi,edi
  408d82:	mov    esi,esi
  408d84:	mov    edi,esi
  408d86:	shl    rdi,0x2
  408d8a:	mov    esi,edi
  408d8c:	mov    DWORD PTR [rbp-0x2c],esi
  408d8f:	mov    rdi,QWORD PTR [rbp-0x20]
  408d93:	mov    esi,edi
  408d95:	mov    edi,esi
  408d97:	call   405dc0 <flatcc_builder_embed_buffer@@Base+0x420>
  408d9c:	mov    DWORD PTR [rbp-0x34],eax
  408d9f:	mov    rdi,QWORD PTR [rbp-0x10]
  408da3:	mov    esi,DWORD PTR [rbp-0x2c]
  408da6:	mov    edx,0x4
  408dab:	call   405d90 <flatcc_builder_embed_buffer@@Base+0x3f0>
  408db0:	mov    DWORD PTR [rbp-0x30],eax
  408db3:	mov    QWORD PTR [rbp-0xd0],0x0
  408dbe:	mov    DWORD PTR [rbp-0xc8],0x0
  408dc8:	mov    rdi,QWORD PTR [rbp-0xd0]
  408dcf:	add    rdi,0x4
  408dd3:	mov    QWORD PTR [rbp-0xd0],rdi
  408dda:	lea    rdi,[rbp-0x34]
  408dde:	lea    rcx,[rbp-0xd0]
  408de5:	mov    r8,rcx
  408de8:	add    r8,0x10
  408dec:	movsxd r9,DWORD PTR [rbp-0xc8]
  408df3:	shl    r9,0x4
  408df7:	add    r8,r9
  408dfa:	mov    QWORD PTR [r8],rdi
  408dfd:	add    rcx,0x10
  408e01:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408e08:	shl    rdi,0x4
  408e0c:	add    rcx,rdi
  408e0f:	mov    QWORD PTR [rcx+0x8],0x4
  408e17:	mov    eax,DWORD PTR [rbp-0xc8]
  408e1d:	add    eax,0x1
  408e20:	mov    DWORD PTR [rbp-0xc8],eax
  408e26:	cmp    DWORD PTR [rbp-0x2c],0x0
  408e2a:	jbe    408e90 <flatcc_builder_create_offset_vector_direct@@Base+0x190>
  408e30:	mov    eax,DWORD PTR [rbp-0x2c]
  408e33:	mov    ecx,eax
  408e35:	add    rcx,QWORD PTR [rbp-0xd0]
  408e3c:	mov    QWORD PTR [rbp-0xd0],rcx
  408e43:	mov    rcx,QWORD PTR [rbp-0x18]
  408e47:	lea    rdx,[rbp-0xd0]
  408e4e:	mov    rsi,rdx
  408e51:	add    rsi,0x10
  408e55:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408e5c:	shl    rdi,0x4
  408e60:	add    rsi,rdi
  408e63:	mov    QWORD PTR [rsi],rcx
  408e66:	mov    eax,DWORD PTR [rbp-0x2c]
  408e69:	mov    ecx,eax
  408e6b:	add    rdx,0x10
  408e6f:	movsxd rsi,DWORD PTR [rbp-0xc8]
  408e76:	shl    rsi,0x4
  408e7a:	add    rdx,rsi
  408e7d:	mov    QWORD PTR [rdx+0x8],rcx
  408e81:	mov    eax,DWORD PTR [rbp-0xc8]
  408e87:	add    eax,0x1
  408e8a:	mov    DWORD PTR [rbp-0xc8],eax
  408e90:	cmp    DWORD PTR [rbp-0x30],0x0
  408e94:	jbe    408efd <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  408e9a:	lea    rax,[rip+0x94cf]        # 412370 <flatcc_builder_padding_base@@Base>
  408ea1:	mov    ecx,DWORD PTR [rbp-0x30]
  408ea4:	mov    edx,ecx
  408ea6:	add    rdx,QWORD PTR [rbp-0xd0]
  408ead:	mov    QWORD PTR [rbp-0xd0],rdx
  408eb4:	lea    rdx,[rbp-0xd0]
  408ebb:	mov    rsi,rdx
  408ebe:	add    rsi,0x10
  408ec2:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408ec9:	shl    rdi,0x4
  408ecd:	add    rsi,rdi
  408ed0:	mov    QWORD PTR [rsi],rax
  408ed3:	mov    ecx,DWORD PTR [rbp-0x30]
  408ed6:	mov    eax,ecx
  408ed8:	add    rdx,0x10
  408edc:	movsxd rsi,DWORD PTR [rbp-0xc8]
  408ee3:	shl    rsi,0x4
  408ee7:	add    rdx,rsi
  408eea:	mov    QWORD PTR [rdx+0x8],rax
  408eee:	mov    ecx,DWORD PTR [rbp-0xc8]
  408ef4:	add    ecx,0x1
  408ef7:	mov    DWORD PTR [rbp-0xc8],ecx
  408efd:	mov    rax,QWORD PTR [rbp-0x10]
  408f01:	mov    ecx,DWORD PTR [rax+0xf0]
  408f07:	mov    rax,QWORD PTR [rbp-0xd0]
  408f0e:	mov    edx,eax
  408f10:	sub    ecx,edx
  408f12:	mov    DWORD PTR [rbp-0x38],ecx
  408f15:	mov    DWORD PTR [rbp-0x40],0x0
  408f1c:	mov    eax,DWORD PTR [rbp-0x40]
  408f1f:	mov    rcx,QWORD PTR [rbp-0x20]
  408f23:	mov    edx,ecx
  408f25:	cmp    eax,edx
  408f27:	jae    40904c <flatcc_builder_create_offset_vector_direct@@Base+0x34c>
  408f2d:	mov    rax,QWORD PTR [rbp-0x18]
  408f31:	mov    ecx,DWORD PTR [rbp-0x40]
  408f34:	mov    edx,ecx
  408f36:	cmp    DWORD PTR [rax+rdx*4],0x0
  408f3a:	je     408fcb <flatcc_builder_create_offset_vector_direct@@Base+0x2cb>
  408f40:	mov    rax,QWORD PTR [rbp-0x18]
  408f44:	mov    ecx,DWORD PTR [rbp-0x40]
  408f47:	mov    edx,ecx
  408f49:	mov    ecx,DWORD PTR [rax+rdx*4]
  408f4c:	sub    ecx,DWORD PTR [rbp-0x38]
  408f4f:	mov    ecx,ecx
  408f51:	mov    eax,ecx
  408f53:	mov    ecx,DWORD PTR [rbp-0x40]
  408f56:	mov    edx,ecx
  408f58:	shl    rdx,0x2
  408f5c:	sub    rax,rdx
  408f5f:	sub    rax,0x4
  408f63:	mov    ecx,eax
  408f65:	mov    DWORD PTR [rbp-0x3c],ecx
  408f68:	mov    edi,DWORD PTR [rbp-0x3c]
  408f6b:	call   405dc0 <flatcc_builder_embed_buffer@@Base+0x420>
  408f70:	mov    rdx,QWORD PTR [rbp-0x18]
  408f74:	mov    ecx,DWORD PTR [rbp-0x40]
  408f77:	mov    esi,ecx
  408f79:	mov    DWORD PTR [rdx+rsi*4],eax
  408f7c:	cmp    QWORD PTR [rbp-0x28],0x0
  408f81:	je     408fc6 <flatcc_builder_create_offset_vector_direct@@Base+0x2c6>
  408f87:	mov    rax,QWORD PTR [rbp-0x28]
  408f8b:	mov    ecx,DWORD PTR [rbp-0x40]
  408f8e:	mov    edx,ecx
  408f90:	movzx  ecx,BYTE PTR [rax+rdx*1]
  408f94:	cmp    ecx,0x0
  408f97:	je     408fa2 <flatcc_builder_create_offset_vector_direct@@Base+0x2a2>
  408f9d:	jmp    408fc1 <flatcc_builder_create_offset_vector_direct@@Base+0x2c1>
  408fa2:	lea    rdi,[rip+0xa78d]        # 413736 <flatcc_builder_padding_base@@Base+0x13c6>
  408fa9:	lea    rsi,[rip+0x95d2]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  408fb0:	mov    edx,0x5b1
  408fb5:	lea    rcx,[rip+0xa788]        # 413744 <flatcc_builder_padding_base@@Base+0x13d4>
  408fbc:	call   403060 <__assert_fail@plt>
  408fc1:	jmp    408fc6 <flatcc_builder_create_offset_vector_direct@@Base+0x2c6>
  408fc6:	jmp    409039 <flatcc_builder_create_offset_vector_direct@@Base+0x339>
  408fcb:	cmp    QWORD PTR [rbp-0x28],0x0
  408fd0:	je     409015 <flatcc_builder_create_offset_vector_direct@@Base+0x315>
  408fd6:	mov    rax,QWORD PTR [rbp-0x28]
  408fda:	mov    ecx,DWORD PTR [rbp-0x40]
  408fdd:	mov    edx,ecx
  408fdf:	movzx  ecx,BYTE PTR [rax+rdx*1]
  408fe3:	cmp    ecx,0x0
  408fe6:	jne    408ff1 <flatcc_builder_create_offset_vector_direct@@Base+0x2f1>
  408fec:	jmp    409010 <flatcc_builder_create_offset_vector_direct@@Base+0x310>
  408ff1:	lea    rdi,[rip+0xa7cf]        # 4137c7 <flatcc_builder_padding_base@@Base+0x1457>
  408ff8:	lea    rsi,[rip+0x9583]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  408fff:	mov    edx,0x5b5
  409004:	lea    rcx,[rip+0xa739]        # 413744 <flatcc_builder_padding_base@@Base+0x13d4>
  40900b:	call   403060 <__assert_fail@plt>
  409010:	jmp    409034 <flatcc_builder_create_offset_vector_direct@@Base+0x334>
  409015:	lea    rdi,[rip+0xa726]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  40901c:	lea    rsi,[rip+0x955f]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409023:	mov    edx,0x5b7
  409028:	lea    rcx,[rip+0xa715]        # 413744 <flatcc_builder_padding_base@@Base+0x13d4>
  40902f:	call   403060 <__assert_fail@plt>
  409034:	jmp    409039 <flatcc_builder_create_offset_vector_direct@@Base+0x339>
  409039:	jmp    40903e <flatcc_builder_create_offset_vector_direct@@Base+0x33e>
  40903e:	mov    eax,DWORD PTR [rbp-0x40]
  409041:	add    eax,0x1
  409044:	mov    DWORD PTR [rbp-0x40],eax
  409047:	jmp    408f1c <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  40904c:	mov    rdi,QWORD PTR [rbp-0x10]
  409050:	lea    rsi,[rbp-0xd0]
  409057:	call   405dd0 <flatcc_builder_embed_buffer@@Base+0x430>
  40905c:	mov    DWORD PTR [rbp-0x4],eax
  40905f:	mov    eax,DWORD PTR [rbp-0x4]
  409062:	add    rsp,0xd0
  409069:	pop    rbp
  40906a:	ret    
  40906b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409070 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  409070:	push   rbp
  409071:	mov    rbp,rsp
  409074:	sub    rsp,0x20
  409078:	mov    QWORD PTR [rbp-0x10],rdi
  40907c:	mov    QWORD PTR [rbp-0x18],rsi
  409080:	mov    rsi,QWORD PTR [rbp-0x10]
  409084:	mov    rsi,QWORD PTR [rsi+0x30]
  409088:	movzx  eax,WORD PTR [rsi+0xe]
  40908c:	cmp    eax,0x5
  40908f:	jne    40909a <flatcc_builder_end_offset_vector_for_unions@@Base+0x2a>
  409095:	jmp    4090b9 <flatcc_builder_end_offset_vector_for_unions@@Base+0x49>
  40909a:	lea    rdi,[rip+0x9917]        # 4129b8 <flatcc_builder_padding_base@@Base+0x648>
  4090a1:	lea    rsi,[rip+0x94da]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4090a8:	mov    edx,0x5d5
  4090ad:	lea    rcx,[rip+0x9f7d]        # 413031 <flatcc_builder_padding_base@@Base+0xcc1>
  4090b4:	call   403060 <__assert_fail@plt>
  4090b9:	mov    rdi,QWORD PTR [rbp-0x10]
  4090bd:	mov    rax,QWORD PTR [rbp-0x10]
  4090c1:	mov    rax,QWORD PTR [rax+0x18]
  4090c5:	mov    rcx,QWORD PTR [rbp-0x10]
  4090c9:	mov    rcx,QWORD PTR [rcx+0x30]
  4090cd:	mov    edx,DWORD PTR [rcx+0x14]
  4090d0:	mov    rcx,QWORD PTR [rbp-0x18]
  4090d4:	mov    rsi,rax
  4090d7:	call   408d30 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  4090dc:	xor    r8d,r8d
  4090df:	mov    DWORD PTR [rbp-0x1c],eax
  4090e2:	cmp    r8d,eax
  4090e5:	jne    4090f7 <flatcc_builder_end_offset_vector_for_unions@@Base+0x87>
  4090eb:	mov    DWORD PTR [rbp-0x4],0x0
  4090f2:	jmp    409106 <flatcc_builder_end_offset_vector_for_unions@@Base+0x96>
  4090f7:	mov    rdi,QWORD PTR [rbp-0x10]
  4090fb:	call   406950 <flatcc_builder_end_buffer@@Base+0x160>
  409100:	mov    eax,DWORD PTR [rbp-0x1c]
  409103:	mov    DWORD PTR [rbp-0x4],eax
  409106:	mov    eax,DWORD PTR [rbp-0x4]
  409109:	add    rsp,0x20
  40910d:	pop    rbp
  40910e:	ret    
  40910f:	nop

0000000000409110 <flatcc_builder_offset_vector_edit@@Base>:
  409110:	push   rbp
  409111:	mov    rbp,rsp
  409114:	mov    QWORD PTR [rbp-0x8],rdi
  409118:	mov    rdi,QWORD PTR [rbp-0x8]
  40911c:	mov    rax,QWORD PTR [rdi+0x18]
  409120:	pop    rbp
  409121:	ret    
  409122:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40912c:	nop    DWORD PTR [rax+0x0]

0000000000409130 <flatcc_builder_offset_vector_count@@Base>:
  409130:	push   rbp
  409131:	mov    rbp,rsp
  409134:	mov    QWORD PTR [rbp-0x8],rdi
  409138:	mov    rdi,QWORD PTR [rbp-0x8]
  40913c:	mov    rdi,QWORD PTR [rdi+0x30]
  409140:	mov    eax,DWORD PTR [rdi+0x14]
  409143:	pop    rbp
  409144:	ret    
  409145:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40914f:	nop

0000000000409150 <flatcc_builder_table_add_union@@Base>:
  409150:	push   rbp
  409151:	mov    rbp,rsp
  409154:	sub    rsp,0x30
  409158:	mov    QWORD PTR [rbp-0x10],rdx
  40915c:	mov    QWORD PTR [rbp-0x18],rdi
  409160:	mov    DWORD PTR [rbp-0x1c],esi
  409163:	mov    rdx,QWORD PTR [rbp-0x18]
  409167:	mov    rdx,QWORD PTR [rdx+0x30]
  40916b:	movzx  esi,WORD PTR [rdx+0xe]
  40916f:	cmp    esi,0x3
  409172:	jne    40917d <flatcc_builder_table_add_union@@Base+0x2d>
  409178:	jmp    40919c <flatcc_builder_table_add_union@@Base+0x4c>
  40917d:	lea    rdi,[rip+0x9c2d]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  409184:	lea    rsi,[rip+0x93f7]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40918b:	mov    edx,0x5ee
  409190:	lea    rcx,[rip+0x9f0c]        # 4130a3 <flatcc_builder_padding_base@@Base+0xd33>
  409197:	call   403060 <__assert_fail@plt>
  40919c:	movzx  eax,BYTE PTR [rbp-0x10]
  4091a0:	cmp    eax,0x0
  4091a3:	jne    4091fa <flatcc_builder_table_add_union@@Base+0xaa>
  4091a9:	cmp    DWORD PTR [rbp-0xc],0x0
  4091ad:	je     4091fa <flatcc_builder_table_add_union@@Base+0xaa>
  4091b3:	movzx  eax,BYTE PTR [rbp-0x10]
  4091b7:	cmp    eax,0x0
  4091ba:	jne    4091ca <flatcc_builder_table_add_union@@Base+0x7a>
  4091c0:	cmp    DWORD PTR [rbp-0xc],0x0
  4091c4:	jne    4091cf <flatcc_builder_table_add_union@@Base+0x7f>
  4091ca:	jmp    4091ee <flatcc_builder_table_add_union@@Base+0x9e>
  4091cf:	lea    rdi,[rip+0x9f25]        # 4130fb <flatcc_builder_padding_base@@Base+0xd8b>
  4091d6:	lea    rsi,[rip+0x93a5]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4091dd:	mov    edx,0x5ef
  4091e2:	lea    rcx,[rip+0x9eba]        # 4130a3 <flatcc_builder_padding_base@@Base+0xd33>
  4091e9:	call   403060 <__assert_fail@plt>
  4091ee:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4091f5:	jmp    4092e0 <flatcc_builder_table_add_union@@Base+0x190>
  4091fa:	cmp    DWORD PTR [rbp-0xc],0x0
  4091fe:	je     409263 <flatcc_builder_table_add_union@@Base+0x113>
  409204:	mov    rdi,QWORD PTR [rbp-0x18]
  409208:	mov    esi,DWORD PTR [rbp-0x1c]
  40920b:	call   4092f0 <flatcc_builder_table_add_offset@@Base>
  409210:	mov    QWORD PTR [rbp-0x28],rax
  409214:	cmp    QWORD PTR [rbp-0x28],0x0
  409219:	jne    40925a <flatcc_builder_table_add_union@@Base+0x10a>
  40921f:	cmp    QWORD PTR [rbp-0x28],0x0
  409224:	je     40922f <flatcc_builder_table_add_union@@Base+0xdf>
  40922a:	jmp    40924e <flatcc_builder_table_add_union@@Base+0xfe>
  40922f:	lea    rdi,[rip+0x9ee7]        # 41311d <flatcc_builder_padding_base@@Base+0xdad>
  409236:	lea    rsi,[rip+0x9345]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40923d:	mov    edx,0x5f2
  409242:	lea    rcx,[rip+0x9e5a]        # 4130a3 <flatcc_builder_padding_base@@Base+0xd33>
  409249:	call   403060 <__assert_fail@plt>
  40924e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409255:	jmp    4092e0 <flatcc_builder_table_add_union@@Base+0x190>
  40925a:	mov    eax,DWORD PTR [rbp-0xc]
  40925d:	mov    rcx,QWORD PTR [rbp-0x28]
  409261:	mov    DWORD PTR [rcx],eax
  409263:	mov    eax,0x1
  409268:	mov    edx,eax
  40926a:	mov    rdi,QWORD PTR [rbp-0x18]
  40926e:	mov    eax,DWORD PTR [rbp-0x1c]
  409271:	sub    eax,0x1
  409274:	mov    esi,eax
  409276:	mov    ecx,0x1
  40927b:	call   4093f0 <flatcc_builder_table_add@@Base>
  409280:	mov    QWORD PTR [rbp-0x30],rax
  409284:	cmp    QWORD PTR [rbp-0x30],0x0
  409289:	jne    4092ca <flatcc_builder_table_add_union@@Base+0x17a>
  40928f:	cmp    QWORD PTR [rbp-0x30],0x0
  409294:	je     40929f <flatcc_builder_table_add_union@@Base+0x14f>
  40929a:	jmp    4092be <flatcc_builder_table_add_union@@Base+0x16e>
  40929f:	lea    rdi,[rip+0x9e81]        # 413127 <flatcc_builder_padding_base@@Base+0xdb7>
  4092a6:	lea    rsi,[rip+0x92d5]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4092ad:	mov    edx,0x5f6
  4092b2:	lea    rcx,[rip+0x9dea]        # 4130a3 <flatcc_builder_padding_base@@Base+0xd33>
  4092b9:	call   403060 <__assert_fail@plt>
  4092be:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4092c5:	jmp    4092e0 <flatcc_builder_table_add_union@@Base+0x190>
  4092ca:	movzx  edi,BYTE PTR [rbp-0x10]
  4092ce:	call   409540 <flatcc_builder_table_add@@Base+0x150>
  4092d3:	mov    rcx,QWORD PTR [rbp-0x30]
  4092d7:	mov    BYTE PTR [rcx],al
  4092d9:	mov    DWORD PTR [rbp-0x4],0x0
  4092e0:	mov    eax,DWORD PTR [rbp-0x4]
  4092e3:	add    rsp,0x30
  4092e7:	pop    rbp
  4092e8:	ret    
  4092e9:	nop    DWORD PTR [rax+0x0]

00000000004092f0 <flatcc_builder_table_add_offset@@Base>:
  4092f0:	push   rbp
  4092f1:	mov    rbp,rsp
  4092f4:	sub    rsp,0x10
  4092f8:	mov    QWORD PTR [rbp-0x8],rdi
  4092fc:	mov    DWORD PTR [rbp-0xc],esi
  4092ff:	mov    rdi,QWORD PTR [rbp-0x8]
  409303:	mov    rdi,QWORD PTR [rdi+0x30]
  409307:	movzx  esi,WORD PTR [rdi+0xe]
  40930b:	cmp    esi,0x3
  40930e:	jne    409319 <flatcc_builder_table_add_offset@@Base+0x29>
  409314:	jmp    409338 <flatcc_builder_table_add_offset@@Base+0x48>
  409319:	lea    rdi,[rip+0x9a91]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  409320:	lea    rsi,[rip+0x925b]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409327:	mov    edx,0x713
  40932c:	lea    rcx,[rip+0xa172]        # 4134a5 <flatcc_builder_padding_base@@Base+0x1135>
  409333:	call   403060 <__assert_fail@plt>
  409338:	cmp    DWORD PTR [rbp-0xc],0x0
  40933c:	jl     409354 <flatcc_builder_table_add_offset@@Base+0x64>
  409342:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  409349:	jg     409354 <flatcc_builder_table_add_offset@@Base+0x64>
  40934f:	jmp    409373 <flatcc_builder_table_add_offset@@Base+0x83>
  409354:	lea    rdi,[rip+0xa0ca]        # 413425 <flatcc_builder_padding_base@@Base+0x10b5>
  40935b:	lea    rsi,[rip+0x9220]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409362:	mov    edx,0x714
  409367:	lea    rcx,[rip+0xa137]        # 4134a5 <flatcc_builder_padding_base@@Base+0x1135>
  40936e:	call   403060 <__assert_fail@plt>
  409373:	mov    rax,QWORD PTR [rbp-0x8]
  409377:	mov    rax,QWORD PTR [rax+0x8]
  40937b:	movsxd rcx,DWORD PTR [rbp-0xc]
  40937f:	movzx  edx,WORD PTR [rax+rcx*2]
  409383:	cmp    edx,0x0
  409386:	je     4093ab <flatcc_builder_table_add_offset@@Base+0xbb>
  40938c:	lea    rdi,[rip+0xa3af]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  409393:	lea    rsi,[rip+0x91e8]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40939a:	mov    edx,0x71b
  40939f:	lea    rcx,[rip+0xa0ff]        # 4134a5 <flatcc_builder_padding_base@@Base+0x1135>
  4093a6:	call   403060 <__assert_fail@plt>
  4093ab:	mov    eax,DWORD PTR [rbp-0xc]
  4093ae:	mov    rcx,QWORD PTR [rbp-0x8]
  4093b2:	xor    eax,DWORD PTR [rcx+0x14]
  4093b5:	imul   eax,eax,0x9e3779b1
  4093bb:	xor    eax,0x4
  4093be:	imul   eax,eax,0x9e3779b1
  4093c4:	mov    rcx,QWORD PTR [rbp-0x8]
  4093c8:	mov    DWORD PTR [rcx+0x14],eax
  4093cb:	mov    rdi,QWORD PTR [rbp-0x8]
  4093cf:	mov    eax,DWORD PTR [rbp-0xc]
  4093d2:	mov    dx,ax
  4093d5:	movzx  esi,dx
  4093d8:	call   40a310 <flatcc_builder_table_add_copy@@Base+0x60>
  4093dd:	add    rsp,0x10
  4093e1:	pop    rbp
  4093e2:	ret    
  4093e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4093ed:	nop    DWORD PTR [rax]

00000000004093f0 <flatcc_builder_table_add@@Base>:
  4093f0:	push   rbp
  4093f1:	mov    rbp,rsp
  4093f4:	sub    rsp,0x20
  4093f8:	mov    ax,cx
  4093fb:	mov    QWORD PTR [rbp-0x8],rdi
  4093ff:	mov    DWORD PTR [rbp-0xc],esi
  409402:	mov    QWORD PTR [rbp-0x18],rdx
  409406:	mov    WORD PTR [rbp-0x1a],ax
  40940a:	mov    rdx,QWORD PTR [rbp-0x8]
  40940e:	mov    rdx,QWORD PTR [rdx+0x30]
  409412:	movzx  ecx,WORD PTR [rdx+0xe]
  409416:	cmp    ecx,0x3
  409419:	jne    409424 <flatcc_builder_table_add@@Base+0x34>
  40941f:	jmp    409443 <flatcc_builder_table_add@@Base+0x53>
  409424:	lea    rdi,[rip+0x9986]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  40942b:	lea    rsi,[rip+0x9150]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409432:	mov    edx,0x6ed
  409437:	lea    rcx,[rip+0x9f9d]        # 4133db <flatcc_builder_padding_base@@Base+0x106b>
  40943e:	call   403060 <__assert_fail@plt>
  409443:	cmp    DWORD PTR [rbp-0xc],0x0
  409447:	jl     40945f <flatcc_builder_table_add@@Base+0x6f>
  40944d:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  409454:	jg     40945f <flatcc_builder_table_add@@Base+0x6f>
  40945a:	jmp    40947e <flatcc_builder_table_add@@Base+0x8e>
  40945f:	lea    rdi,[rip+0x9fbf]        # 413425 <flatcc_builder_padding_base@@Base+0x10b5>
  409466:	lea    rsi,[rip+0x9115]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40946d:	mov    edx,0x6ee
  409472:	lea    rcx,[rip+0x9f62]        # 4133db <flatcc_builder_padding_base@@Base+0x106b>
  409479:	call   403060 <__assert_fail@plt>
  40947e:	movzx  eax,WORD PTR [rbp-0x1a]
  409482:	mov    rcx,QWORD PTR [rbp-0x8]
  409486:	movzx  edx,WORD PTR [rcx+0xea]
  40948d:	cmp    eax,edx
  40948f:	jle    4094a4 <flatcc_builder_table_add@@Base+0xb4>
  409495:	mov    ax,WORD PTR [rbp-0x1a]
  409499:	mov    rcx,QWORD PTR [rbp-0x8]
  40949d:	mov    WORD PTR [rcx+0xea],ax
  4094a4:	mov    rax,QWORD PTR [rbp-0x8]
  4094a8:	mov    rax,QWORD PTR [rax+0x8]
  4094ac:	movsxd rcx,DWORD PTR [rbp-0xc]
  4094b0:	movzx  edx,WORD PTR [rax+rcx*2]
  4094b4:	cmp    edx,0x0
  4094b7:	je     4094dc <flatcc_builder_table_add@@Base+0xec>
  4094bd:	lea    rdi,[rip+0xa27e]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  4094c4:	lea    rsi,[rip+0x90b7]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4094cb:	mov    edx,0x6f8
  4094d0:	lea    rcx,[rip+0x9f04]        # 4133db <flatcc_builder_padding_base@@Base+0x106b>
  4094d7:	call   403060 <__assert_fail@plt>
  4094dc:	mov    eax,DWORD PTR [rbp-0xc]
  4094df:	mov    rcx,QWORD PTR [rbp-0x8]
  4094e3:	xor    eax,DWORD PTR [rcx+0x14]
  4094e6:	imul   eax,eax,0x9e3779b1
  4094ec:	mov    rcx,QWORD PTR [rbp-0x18]
  4094f0:	mov    edx,ecx
  4094f2:	xor    eax,edx
  4094f4:	imul   eax,eax,0x9e3779b1
  4094fa:	mov    rcx,QWORD PTR [rbp-0x8]
  4094fe:	mov    DWORD PTR [rcx+0x14],eax
  409501:	mov    rdi,QWORD PTR [rbp-0x8]
  409505:	mov    rcx,QWORD PTR [rbp-0x18]
  409509:	mov    eax,ecx
  40950b:	mov    si,WORD PTR [rbp-0x1a]
  40950f:	mov    edx,DWORD PTR [rbp-0xc]
  409512:	mov    r8w,dx
  409516:	mov    WORD PTR [rbp-0x1c],si
  40951a:	mov    esi,eax
  40951c:	mov    r9w,WORD PTR [rbp-0x1c]
  409521:	movzx  edx,r9w
  409525:	movzx  ecx,r8w
  409529:	call   40a130 <flatcc_builder_string_len@@Base+0x20>
  40952e:	add    rsp,0x20
  409532:	pop    rbp
  409533:	ret    
  409534:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40953e:	xchg   ax,ax
  409540:	push   rbp
  409541:	mov    rbp,rsp
  409544:	mov    al,dil
  409547:	mov    BYTE PTR [rbp-0x1],al
  40954a:	movzx  eax,BYTE PTR [rbp-0x1]
  40954e:	pop    rbp
  40954f:	ret    

0000000000409550 <flatcc_builder_table_add_union_vector@@Base>:
  409550:	push   rbp
  409551:	mov    rbp,rsp
  409554:	sub    rsp,0x30
  409558:	mov    QWORD PTR [rbp-0x10],rdx
  40955c:	mov    QWORD PTR [rbp-0x18],rdi
  409560:	mov    DWORD PTR [rbp-0x1c],esi
  409563:	mov    rdx,QWORD PTR [rbp-0x18]
  409567:	mov    rdx,QWORD PTR [rdx+0x30]
  40956b:	movzx  esi,WORD PTR [rdx+0xe]
  40956f:	cmp    esi,0x3
  409572:	jne    40957d <flatcc_builder_table_add_union_vector@@Base+0x2d>
  409578:	jmp    40959c <flatcc_builder_table_add_union_vector@@Base+0x4c>
  40957d:	lea    rdi,[rip+0x982d]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  409584:	lea    rsi,[rip+0x8ff7]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40958b:	mov    edx,0x600
  409590:	lea    rcx,[rip+0x9b9c]        # 413133 <flatcc_builder_padding_base@@Base+0xdc3>
  409597:	call   403060 <__assert_fail@plt>
  40959c:	cmp    DWORD PTR [rbp-0x10],0x0
  4095a0:	sete   al
  4095a3:	and    al,0x1
  4095a5:	movzx  ecx,al
  4095a8:	cmp    DWORD PTR [rbp-0xc],0x0
  4095ac:	sete   al
  4095af:	and    al,0x1
  4095b1:	movzx  edx,al
  4095b4:	cmp    ecx,edx
  4095b6:	je     40960c <flatcc_builder_table_add_union_vector@@Base+0xbc>
  4095bc:	cmp    DWORD PTR [rbp-0x10],0x0
  4095c0:	sete   al
  4095c3:	and    al,0x1
  4095c5:	movzx  ecx,al
  4095c8:	cmp    DWORD PTR [rbp-0xc],0x0
  4095cc:	sete   al
  4095cf:	and    al,0x1
  4095d1:	movzx  edx,al
  4095d4:	cmp    ecx,edx
  4095d6:	jne    4095e1 <flatcc_builder_table_add_union_vector@@Base+0x91>
  4095dc:	jmp    409600 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  4095e1:	lea    rdi,[rip+0x9bae]        # 413196 <flatcc_builder_padding_base@@Base+0xe26>
  4095e8:	lea    rsi,[rip+0x8f93]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4095ef:	mov    edx,0x601
  4095f4:	lea    rcx,[rip+0x9b38]        # 413133 <flatcc_builder_padding_base@@Base+0xdc3>
  4095fb:	call   403060 <__assert_fail@plt>
  409600:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409607:	jmp    4096e0 <flatcc_builder_table_add_union_vector@@Base+0x190>
  40960c:	cmp    DWORD PTR [rbp-0x10],0x0
  409610:	je     4096d9 <flatcc_builder_table_add_union_vector@@Base+0x189>
  409616:	mov    rdi,QWORD PTR [rbp-0x18]
  40961a:	mov    eax,DWORD PTR [rbp-0x1c]
  40961d:	sub    eax,0x1
  409620:	mov    esi,eax
  409622:	call   4092f0 <flatcc_builder_table_add_offset@@Base>
  409627:	mov    QWORD PTR [rbp-0x28],rax
  40962b:	cmp    QWORD PTR [rbp-0x28],0x0
  409630:	jne    409671 <flatcc_builder_table_add_union_vector@@Base+0x121>
  409636:	cmp    QWORD PTR [rbp-0x28],0x0
  40963b:	je     409646 <flatcc_builder_table_add_union_vector@@Base+0xf6>
  409641:	jmp    409665 <flatcc_builder_table_add_union_vector@@Base+0x115>
  409646:	lea    rdi,[rip+0x9ad0]        # 41311d <flatcc_builder_padding_base@@Base+0xdad>
  40964d:	lea    rsi,[rip+0x8f2e]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409654:	mov    edx,0x604
  409659:	lea    rcx,[rip+0x9ad3]        # 413133 <flatcc_builder_padding_base@@Base+0xdc3>
  409660:	call   403060 <__assert_fail@plt>
  409665:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40966c:	jmp    4096e0 <flatcc_builder_table_add_union_vector@@Base+0x190>
  409671:	mov    eax,DWORD PTR [rbp-0x10]
  409674:	mov    rcx,QWORD PTR [rbp-0x28]
  409678:	mov    DWORD PTR [rcx],eax
  40967a:	mov    rdi,QWORD PTR [rbp-0x18]
  40967e:	mov    esi,DWORD PTR [rbp-0x1c]
  409681:	call   4092f0 <flatcc_builder_table_add_offset@@Base>
  409686:	mov    QWORD PTR [rbp-0x28],rax
  40968a:	cmp    QWORD PTR [rbp-0x28],0x0
  40968f:	jne    4096d0 <flatcc_builder_table_add_union_vector@@Base+0x180>
  409695:	cmp    QWORD PTR [rbp-0x28],0x0
  40969a:	je     4096a5 <flatcc_builder_table_add_union_vector@@Base+0x155>
  4096a0:	jmp    4096c4 <flatcc_builder_table_add_union_vector@@Base+0x174>
  4096a5:	lea    rdi,[rip+0x9a71]        # 41311d <flatcc_builder_padding_base@@Base+0xdad>
  4096ac:	lea    rsi,[rip+0x8ecf]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  4096b3:	mov    edx,0x608
  4096b8:	lea    rcx,[rip+0x9a74]        # 413133 <flatcc_builder_padding_base@@Base+0xdc3>
  4096bf:	call   403060 <__assert_fail@plt>
  4096c4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4096cb:	jmp    4096e0 <flatcc_builder_table_add_union_vector@@Base+0x190>
  4096d0:	mov    eax,DWORD PTR [rbp-0xc]
  4096d3:	mov    rcx,QWORD PTR [rbp-0x28]
  4096d7:	mov    DWORD PTR [rcx],eax
  4096d9:	mov    DWORD PTR [rbp-0x4],0x0
  4096e0:	mov    eax,DWORD PTR [rbp-0x4]
  4096e3:	add    rsp,0x30
  4096e7:	pop    rbp
  4096e8:	ret    
  4096e9:	nop    DWORD PTR [rax+0x0]

00000000004096f0 <flatcc_builder_create_union_vector@@Base>:
  4096f0:	push   rbp
  4096f1:	mov    rbp,rsp
  4096f4:	sub    rsp,0x40
  4096f8:	xor    eax,eax
  4096fa:	mov    ecx,0x8
  4096ff:	mov    r8d,ecx
  409702:	mov    QWORD PTR [rbp-0x10],rdi
  409706:	mov    QWORD PTR [rbp-0x18],rsi
  40970a:	mov    QWORD PTR [rbp-0x20],rdx
  40970e:	lea    rdx,[rbp-0x8]
  409712:	mov    rdi,rdx
  409715:	mov    esi,eax
  409717:	mov    rdx,r8
  40971a:	call   403070 <memset@plt>
  40971f:	mov    rdi,QWORD PTR [rbp-0x10]
  409723:	call   4077a0 <flatcc_builder_start_offset_vector@@Base>
  409728:	cmp    eax,0x0
  40972b:	je     409736 <flatcc_builder_create_union_vector@@Base+0x46>
  409731:	jmp    40980b <flatcc_builder_create_union_vector@@Base+0x11b>
  409736:	mov    rdi,QWORD PTR [rbp-0x10]
  40973a:	mov    rsi,QWORD PTR [rbp-0x20]
  40973e:	call   406f80 <flatcc_builder_extend_offset_vector@@Base>
  409743:	xor    ecx,ecx
  409745:	mov    esi,ecx
  409747:	cmp    rsi,rax
  40974a:	jne    409755 <flatcc_builder_create_union_vector@@Base+0x65>
  409750:	jmp    40980b <flatcc_builder_create_union_vector@@Base+0x11b>
  409755:	mov    rdi,QWORD PTR [rbp-0x10]
  409759:	mov    rax,QWORD PTR [rbp-0x20]
  40975d:	shl    rax,0x0
  409761:	mov    ecx,eax
  409763:	mov    esi,ecx
  409765:	call   406b10 <flatcc_builder_start_struct@@Base+0x100>
  40976a:	xor    ecx,ecx
  40976c:	mov    edi,ecx
  40976e:	mov    QWORD PTR [rbp-0x28],rax
  409772:	cmp    rdi,rax
  409775:	jne    409780 <flatcc_builder_create_union_vector@@Base+0x90>
  40977b:	jmp    40980b <flatcc_builder_create_union_vector@@Base+0x11b>
  409780:	mov    rdi,QWORD PTR [rbp-0x10]
  409784:	call   409110 <flatcc_builder_offset_vector_edit@@Base>
  409789:	mov    QWORD PTR [rbp-0x30],rax
  40978d:	mov    QWORD PTR [rbp-0x38],0x0
  409795:	mov    rax,QWORD PTR [rbp-0x38]
  409799:	cmp    rax,QWORD PTR [rbp-0x20]
  40979d:	jae    4097e1 <flatcc_builder_create_union_vector@@Base+0xf1>
  4097a3:	mov    rax,QWORD PTR [rbp-0x18]
  4097a7:	mov    rcx,QWORD PTR [rbp-0x38]
  4097ab:	mov    dl,BYTE PTR [rax+rcx*8]
  4097ae:	mov    rax,QWORD PTR [rbp-0x28]
  4097b2:	mov    rcx,QWORD PTR [rbp-0x38]
  4097b6:	mov    BYTE PTR [rax+rcx*1],dl
  4097b9:	mov    rax,QWORD PTR [rbp-0x18]
  4097bd:	mov    rcx,QWORD PTR [rbp-0x38]
  4097c1:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  4097c5:	mov    rax,QWORD PTR [rbp-0x30]
  4097c9:	mov    rcx,QWORD PTR [rbp-0x38]
  4097cd:	mov    DWORD PTR [rax+rcx*4],esi
  4097d0:	mov    rax,QWORD PTR [rbp-0x38]
  4097d4:	add    rax,0x1
  4097d8:	mov    QWORD PTR [rbp-0x38],rax
  4097dc:	jmp    409795 <flatcc_builder_create_union_vector@@Base+0xa5>
  4097e1:	mov    rdi,QWORD PTR [rbp-0x10]
  4097e5:	mov    rsi,QWORD PTR [rbp-0x28]
  4097e9:	mov    rdx,QWORD PTR [rbp-0x30]
  4097ed:	mov    rcx,QWORD PTR [rbp-0x20]
  4097f1:	call   409820 <flatcc_builder_create_union_vector_direct@@Base>
  4097f6:	mov    QWORD PTR [rbp-0x40],rax
  4097fa:	mov    rax,QWORD PTR [rbp-0x40]
  4097fe:	mov    QWORD PTR [rbp-0x8],rax
  409802:	mov    rdi,QWORD PTR [rbp-0x10]
  409806:	call   406950 <flatcc_builder_end_buffer@@Base+0x160>
  40980b:	mov    rax,QWORD PTR [rbp-0x8]
  40980f:	add    rsp,0x40
  409813:	pop    rbp
  409814:	ret    
  409815:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40981f:	nop

0000000000409820 <flatcc_builder_create_union_vector_direct@@Base>:
  409820:	push   rbp
  409821:	mov    rbp,rsp
  409824:	sub    rsp,0x30
  409828:	xor    eax,eax
  40982a:	mov    r8d,0x8
  409830:	mov    r9d,r8d
  409833:	mov    QWORD PTR [rbp-0x10],rdi
  409837:	mov    QWORD PTR [rbp-0x18],rsi
  40983b:	mov    QWORD PTR [rbp-0x20],rdx
  40983f:	mov    QWORD PTR [rbp-0x28],rcx
  409843:	lea    rcx,[rbp-0x8]
  409847:	mov    rdi,rcx
  40984a:	mov    esi,eax
  40984c:	mov    rdx,r9
  40984f:	call   403070 <memset@plt>
  409854:	mov    rdi,QWORD PTR [rbp-0x10]
  409858:	mov    rsi,QWORD PTR [rbp-0x20]
  40985c:	mov    rdx,QWORD PTR [rbp-0x28]
  409860:	mov    rcx,QWORD PTR [rbp-0x18]
  409864:	call   408d30 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  409869:	xor    r8d,r8d
  40986c:	mov    DWORD PTR [rbp-0x4],eax
  40986f:	cmp    r8d,eax
  409872:	jne    40987d <flatcc_builder_create_union_vector_direct@@Base+0x5d>
  409878:	jmp    4098bc <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  40987d:	mov    eax,0x1
  409882:	mov    ecx,eax
  409884:	mov    eax,0xffffffff
  409889:	mov    r9d,eax
  40988c:	mov    rdi,QWORD PTR [rbp-0x10]
  409890:	mov    rsi,QWORD PTR [rbp-0x18]
  409894:	mov    rdx,QWORD PTR [rbp-0x28]
  409898:	mov    r8d,0x1
  40989e:	call   4089d0 <flatcc_builder_create_vector@@Base>
  4098a3:	xor    r8d,r8d
  4098a6:	mov    DWORD PTR [rbp-0x8],eax
  4098a9:	cmp    r8d,eax
  4098ac:	jne    4098b7 <flatcc_builder_create_union_vector_direct@@Base+0x97>
  4098b2:	jmp    4098bc <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  4098b7:	jmp    4098bc <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  4098bc:	mov    rax,QWORD PTR [rbp-0x8]
  4098c0:	add    rsp,0x30
  4098c4:	pop    rbp
  4098c5:	ret    
  4098c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004098d0 <flatcc_builder_start_union_vector@@Base>:
  4098d0:	push   rbp
  4098d1:	mov    rbp,rsp
  4098d4:	sub    rsp,0x10
  4098d8:	mov    QWORD PTR [rbp-0x10],rdi
  4098dc:	mov    rdi,QWORD PTR [rbp-0x10]
  4098e0:	mov    esi,0x4
  4098e5:	call   406620 <flatcc_builder_start_buffer@@Base+0x170>
  4098ea:	cmp    eax,0x0
  4098ed:	je     4098ff <flatcc_builder_start_union_vector@@Base+0x2f>
  4098f3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4098fa:	jmp    409940 <flatcc_builder_start_union_vector@@Base+0x70>
  4098ff:	mov    rax,QWORD PTR [rbp-0x10]
  409903:	mov    rax,QWORD PTR [rax+0x30]
  409907:	mov    DWORD PTR [rax+0x10],0x8
  40990e:	mov    rax,QWORD PTR [rbp-0x10]
  409912:	mov    rax,QWORD PTR [rax+0x30]
  409916:	mov    DWORD PTR [rax+0x14],0x0
  40991d:	mov    rax,QWORD PTR [rbp-0x10]
  409921:	mov    rax,QWORD PTR [rax+0x30]
  409925:	mov    WORD PTR [rax+0xe],0x7
  40992b:	mov    rdi,QWORD PTR [rbp-0x10]
  40992f:	mov    esi,0xfffffffc
  409934:	call   406a90 <flatcc_builder_start_struct@@Base+0x80>
  409939:	mov    DWORD PTR [rbp-0x4],0x0
  409940:	mov    eax,DWORD PTR [rbp-0x4]
  409943:	add    rsp,0x10
  409947:	pop    rbp
  409948:	ret    
  409949:	nop    DWORD PTR [rax+0x0]

0000000000409950 <flatcc_builder_end_union_vector@@Base>:
  409950:	push   rbp
  409951:	mov    rbp,rsp
  409954:	sub    rsp,0x40
  409958:	xor    esi,esi
  40995a:	mov    eax,0x8
  40995f:	mov    edx,eax
  409961:	mov    QWORD PTR [rbp-0x10],rdi
  409965:	lea    rdi,[rbp-0x8]
  409969:	call   403070 <memset@plt>
  40996e:	mov    rdx,QWORD PTR [rbp-0x10]
  409972:	mov    rdx,QWORD PTR [rdx+0x30]
  409976:	movzx  eax,WORD PTR [rdx+0xe]
  40997a:	cmp    eax,0x7
  40997d:	jne    409988 <flatcc_builder_end_union_vector@@Base+0x38>
  409983:	jmp    4099a7 <flatcc_builder_end_union_vector@@Base+0x57>
  409988:	lea    rdi,[rip+0x982f]        # 4131be <flatcc_builder_padding_base@@Base+0xe4e>
  40998f:	lea    rsi,[rip+0x8bec]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409996:	mov    edx,0x651
  40999b:	lea    rcx,[rip+0x984e]        # 4131f0 <flatcc_builder_padding_base@@Base+0xe80>
  4099a2:	call   403060 <__assert_fail@plt>
  4099a7:	mov    rdi,QWORD PTR [rbp-0x10]
  4099ab:	call   409a90 <flatcc_builder_union_vector_count@@Base>
  4099b0:	mov    QWORD PTR [rbp-0x38],rax
  4099b4:	mov    rdi,QWORD PTR [rbp-0x10]
  4099b8:	imul   rax,QWORD PTR [rbp-0x38],0x5
  4099bd:	mov    ecx,eax
  4099bf:	mov    esi,ecx
  4099c1:	call   406b10 <flatcc_builder_start_struct@@Base+0x100>
  4099c6:	xor    ecx,ecx
  4099c8:	mov    edi,ecx
  4099ca:	mov    QWORD PTR [rbp-0x28],rax
  4099ce:	cmp    rdi,rax
  4099d1:	jne    4099dc <flatcc_builder_end_union_vector@@Base+0x8c>
  4099d7:	jmp    409a7a <flatcc_builder_end_union_vector@@Base+0x12a>
  4099dc:	mov    rax,QWORD PTR [rbp-0x28]
  4099e0:	mov    rcx,QWORD PTR [rbp-0x38]
  4099e4:	shl    rcx,0x2
  4099e8:	add    rax,rcx
  4099eb:	mov    QWORD PTR [rbp-0x18],rax
  4099ef:	mov    rdi,QWORD PTR [rbp-0x10]
  4099f3:	call   409ab0 <flatcc_builder_union_vector_edit@@Base>
  4099f8:	mov    QWORD PTR [rbp-0x20],rax
  4099fc:	mov    QWORD PTR [rbp-0x30],0x0
  409a04:	mov    rax,QWORD PTR [rbp-0x30]
  409a08:	cmp    rax,QWORD PTR [rbp-0x38]
  409a0c:	jae    409a50 <flatcc_builder_end_union_vector@@Base+0x100>
  409a12:	mov    rax,QWORD PTR [rbp-0x20]
  409a16:	mov    rcx,QWORD PTR [rbp-0x30]
  409a1a:	mov    dl,BYTE PTR [rax+rcx*8]
  409a1d:	mov    rax,QWORD PTR [rbp-0x18]
  409a21:	mov    rcx,QWORD PTR [rbp-0x30]
  409a25:	mov    BYTE PTR [rax+rcx*1],dl
  409a28:	mov    rax,QWORD PTR [rbp-0x20]
  409a2c:	mov    rcx,QWORD PTR [rbp-0x30]
  409a30:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  409a34:	mov    rax,QWORD PTR [rbp-0x28]
  409a38:	mov    rcx,QWORD PTR [rbp-0x30]
  409a3c:	mov    DWORD PTR [rax+rcx*4],esi
  409a3f:	mov    rax,QWORD PTR [rbp-0x30]
  409a43:	add    rax,0x1
  409a47:	mov    QWORD PTR [rbp-0x30],rax
  409a4b:	jmp    409a04 <flatcc_builder_end_union_vector@@Base+0xb4>
  409a50:	mov    rdi,QWORD PTR [rbp-0x10]
  409a54:	mov    rsi,QWORD PTR [rbp-0x18]
  409a58:	mov    rdx,QWORD PTR [rbp-0x28]
  409a5c:	mov    rcx,QWORD PTR [rbp-0x38]
  409a60:	call   409820 <flatcc_builder_create_union_vector_direct@@Base>
  409a65:	mov    QWORD PTR [rbp-0x40],rax
  409a69:	mov    rax,QWORD PTR [rbp-0x40]
  409a6d:	mov    QWORD PTR [rbp-0x8],rax
  409a71:	mov    rdi,QWORD PTR [rbp-0x10]
  409a75:	call   406950 <flatcc_builder_end_buffer@@Base+0x160>
  409a7a:	mov    rax,QWORD PTR [rbp-0x8]
  409a7e:	add    rsp,0x40
  409a82:	pop    rbp
  409a83:	ret    
  409a84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a8e:	xchg   ax,ax

0000000000409a90 <flatcc_builder_union_vector_count@@Base>:
  409a90:	push   rbp
  409a91:	mov    rbp,rsp
  409a94:	mov    QWORD PTR [rbp-0x8],rdi
  409a98:	mov    rdi,QWORD PTR [rbp-0x8]
  409a9c:	mov    rdi,QWORD PTR [rdi+0x30]
  409aa0:	mov    eax,DWORD PTR [rdi+0x14]
  409aa3:	pop    rbp
  409aa4:	ret    
  409aa5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409aaf:	nop

0000000000409ab0 <flatcc_builder_union_vector_edit@@Base>:
  409ab0:	push   rbp
  409ab1:	mov    rbp,rsp
  409ab4:	mov    QWORD PTR [rbp-0x8],rdi
  409ab8:	mov    rdi,QWORD PTR [rbp-0x8]
  409abc:	mov    rax,QWORD PTR [rdi+0x18]
  409ac0:	pop    rbp
  409ac1:	ret    
  409ac2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409acc:	nop    DWORD PTR [rax+0x0]

0000000000409ad0 <flatcc_builder_extend_union_vector@@Base>:
  409ad0:	push   rbp
  409ad1:	mov    rbp,rsp
  409ad4:	sub    rsp,0x20
  409ad8:	mov    QWORD PTR [rbp-0x10],rdi
  409adc:	mov    QWORD PTR [rbp-0x18],rsi
  409ae0:	mov    rdi,QWORD PTR [rbp-0x10]
  409ae4:	mov    rsi,QWORD PTR [rbp-0x18]
  409ae8:	mov    eax,esi
  409aea:	mov    esi,eax
  409aec:	mov    edx,0x1fffffff
  409af1:	call   406cd0 <flatcc_builder_extend_vector@@Base+0x70>
  409af6:	cmp    eax,0x0
  409af9:	je     409b0c <flatcc_builder_extend_union_vector@@Base+0x3c>
  409aff:	mov    QWORD PTR [rbp-0x8],0x0
  409b07:	jmp    409b2b <flatcc_builder_extend_union_vector@@Base+0x5b>
  409b0c:	mov    rdi,QWORD PTR [rbp-0x10]
  409b10:	mov    rax,QWORD PTR [rbp-0x18]
  409b14:	mov    ecx,eax
  409b16:	mov    ecx,ecx
  409b18:	mov    eax,ecx
  409b1a:	shl    rax,0x3
  409b1e:	mov    ecx,eax
  409b20:	mov    esi,ecx
  409b22:	call   406b10 <flatcc_builder_start_struct@@Base+0x100>
  409b27:	mov    QWORD PTR [rbp-0x8],rax
  409b2b:	mov    rax,QWORD PTR [rbp-0x8]
  409b2f:	add    rsp,0x20
  409b33:	pop    rbp
  409b34:	ret    
  409b35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b3f:	nop

0000000000409b40 <flatcc_builder_truncate_union_vector@@Base>:
  409b40:	push   rbp
  409b41:	mov    rbp,rsp
  409b44:	sub    rsp,0x20
  409b48:	mov    QWORD PTR [rbp-0x10],rdi
  409b4c:	mov    QWORD PTR [rbp-0x18],rsi
  409b50:	mov    rsi,QWORD PTR [rbp-0x10]
  409b54:	mov    rsi,QWORD PTR [rsi+0x30]
  409b58:	movzx  eax,WORD PTR [rsi+0xe]
  409b5c:	cmp    eax,0x7
  409b5f:	jne    409b6a <flatcc_builder_truncate_union_vector@@Base+0x2a>
  409b65:	jmp    409b89 <flatcc_builder_truncate_union_vector@@Base+0x49>
  409b6a:	lea    rdi,[rip+0x964d]        # 4131be <flatcc_builder_padding_base@@Base+0xe4e>
  409b71:	lea    rsi,[rip+0x8a0a]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409b78:	mov    edx,0x681
  409b7d:	lea    rcx,[rip+0x96bf]        # 413243 <flatcc_builder_padding_base@@Base+0xed3>
  409b84:	call   403060 <__assert_fail@plt>
  409b89:	mov    rax,QWORD PTR [rbp-0x10]
  409b8d:	mov    rax,QWORD PTR [rax+0x30]
  409b91:	mov    ecx,DWORD PTR [rax+0x14]
  409b94:	mov    rax,QWORD PTR [rbp-0x18]
  409b98:	mov    edx,eax
  409b9a:	cmp    ecx,edx
  409b9c:	jae    409beb <flatcc_builder_truncate_union_vector@@Base+0xab>
  409ba2:	mov    rax,QWORD PTR [rbp-0x10]
  409ba6:	mov    rax,QWORD PTR [rax+0x30]
  409baa:	mov    ecx,DWORD PTR [rax+0x14]
  409bad:	mov    rax,QWORD PTR [rbp-0x18]
  409bb1:	mov    edx,eax
  409bb3:	cmp    ecx,edx
  409bb5:	jb     409bc0 <flatcc_builder_truncate_union_vector@@Base+0x80>
  409bbb:	jmp    409bdf <flatcc_builder_truncate_union_vector@@Base+0x9f>
  409bc0:	lea    rdi,[rip+0x905b]        # 412c22 <flatcc_builder_padding_base@@Base+0x8b2>
  409bc7:	lea    rsi,[rip+0x89b4]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409bce:	mov    edx,0x682
  409bd3:	lea    rcx,[rip+0x9669]        # 413243 <flatcc_builder_padding_base@@Base+0xed3>
  409bda:	call   403060 <__assert_fail@plt>
  409bdf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409be6:	jmp    409c27 <flatcc_builder_truncate_union_vector@@Base+0xe7>
  409beb:	mov    rax,QWORD PTR [rbp-0x18]
  409bef:	mov    ecx,eax
  409bf1:	mov    rax,QWORD PTR [rbp-0x10]
  409bf5:	mov    rax,QWORD PTR [rax+0x30]
  409bf9:	mov    edx,DWORD PTR [rax+0x14]
  409bfc:	sub    edx,ecx
  409bfe:	mov    DWORD PTR [rax+0x14],edx
  409c01:	mov    rdi,QWORD PTR [rbp-0x10]
  409c05:	mov    rax,QWORD PTR [rbp-0x10]
  409c09:	mov    rax,QWORD PTR [rax+0x30]
  409c0d:	mov    ecx,DWORD PTR [rax+0x10]
  409c10:	mov    rax,QWORD PTR [rbp-0x18]
  409c14:	mov    edx,eax
  409c16:	imul   ecx,edx
  409c19:	mov    esi,ecx
  409c1b:	call   4074a0 <flatcc_builder_truncate_vector@@Base+0xf0>
  409c20:	mov    DWORD PTR [rbp-0x4],0x0
  409c27:	mov    eax,DWORD PTR [rbp-0x4]
  409c2a:	add    rsp,0x20
  409c2e:	pop    rbp
  409c2f:	ret    

0000000000409c30 <flatcc_builder_union_vector_push@@Base>:
  409c30:	push   rbp
  409c31:	mov    rbp,rsp
  409c34:	sub    rsp,0x20
  409c38:	mov    QWORD PTR [rbp-0x10],rsi
  409c3c:	mov    QWORD PTR [rbp-0x18],rdi
  409c40:	mov    rsi,QWORD PTR [rbp-0x18]
  409c44:	mov    rsi,QWORD PTR [rsi+0x30]
  409c48:	movzx  eax,WORD PTR [rsi+0xe]
  409c4c:	cmp    eax,0x7
  409c4f:	jne    409c5a <flatcc_builder_union_vector_push@@Base+0x2a>
  409c55:	jmp    409c79 <flatcc_builder_union_vector_push@@Base+0x49>
  409c5a:	lea    rdi,[rip+0x955d]        # 4131be <flatcc_builder_padding_base@@Base+0xe4e>
  409c61:	lea    rsi,[rip+0x891a]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409c68:	mov    edx,0x68d
  409c6d:	lea    rcx,[rip+0x9614]        # 413288 <flatcc_builder_padding_base@@Base+0xf18>
  409c74:	call   403060 <__assert_fail@plt>
  409c79:	mov    rax,QWORD PTR [rbp-0x18]
  409c7d:	mov    rax,QWORD PTR [rax+0x30]
  409c81:	mov    ecx,DWORD PTR [rax+0x14]
  409c84:	mov    eax,ecx
  409c86:	cmp    rax,0x1fffffff
  409c8c:	jne    409c9f <flatcc_builder_union_vector_push@@Base+0x6f>
  409c92:	mov    QWORD PTR [rbp-0x8],0x0
  409c9a:	jmp    409cef <flatcc_builder_union_vector_push@@Base+0xbf>
  409c9f:	mov    rax,QWORD PTR [rbp-0x18]
  409ca3:	mov    rax,QWORD PTR [rax+0x30]
  409ca7:	mov    ecx,DWORD PTR [rax+0x14]
  409caa:	add    ecx,0x1
  409cad:	mov    DWORD PTR [rax+0x14],ecx
  409cb0:	mov    rdi,QWORD PTR [rbp-0x18]
  409cb4:	mov    esi,0x8
  409cb9:	call   406b10 <flatcc_builder_start_struct@@Base+0x100>
  409cbe:	xor    ecx,ecx
  409cc0:	mov    edi,ecx
  409cc2:	mov    QWORD PTR [rbp-0x20],rax
  409cc6:	cmp    rdi,rax
  409cc9:	jne    409cdc <flatcc_builder_union_vector_push@@Base+0xac>
  409ccf:	mov    QWORD PTR [rbp-0x8],0x0
  409cd7:	jmp    409cef <flatcc_builder_union_vector_push@@Base+0xbf>
  409cdc:	mov    rax,QWORD PTR [rbp-0x20]
  409ce0:	mov    rcx,QWORD PTR [rbp-0x10]
  409ce4:	mov    QWORD PTR [rax],rcx
  409ce7:	mov    rax,QWORD PTR [rbp-0x20]
  409ceb:	mov    QWORD PTR [rbp-0x8],rax
  409cef:	mov    rax,QWORD PTR [rbp-0x8]
  409cf3:	add    rsp,0x20
  409cf7:	pop    rbp
  409cf8:	ret    
  409cf9:	nop    DWORD PTR [rax+0x0]

0000000000409d00 <flatcc_builder_append_union_vector@@Base>:
  409d00:	push   rbp
  409d01:	mov    rbp,rsp
  409d04:	sub    rsp,0x20
  409d08:	mov    QWORD PTR [rbp-0x10],rdi
  409d0c:	mov    QWORD PTR [rbp-0x18],rsi
  409d10:	mov    QWORD PTR [rbp-0x20],rdx
  409d14:	mov    rdx,QWORD PTR [rbp-0x10]
  409d18:	mov    rdx,QWORD PTR [rdx+0x30]
  409d1c:	movzx  eax,WORD PTR [rdx+0xe]
  409d20:	cmp    eax,0x7
  409d23:	jne    409d2e <flatcc_builder_append_union_vector@@Base+0x2e>
  409d29:	jmp    409d4d <flatcc_builder_append_union_vector@@Base+0x4d>
  409d2e:	lea    rdi,[rip+0x9489]        # 4131be <flatcc_builder_padding_base@@Base+0xe4e>
  409d35:	lea    rsi,[rip+0x8846]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  409d3c:	mov    edx,0x69c
  409d41:	lea    rcx,[rip+0x95ad]        # 4132f5 <flatcc_builder_padding_base@@Base+0xf85>
  409d48:	call   403060 <__assert_fail@plt>
  409d4d:	mov    rdi,QWORD PTR [rbp-0x10]
  409d51:	mov    rax,QWORD PTR [rbp-0x20]
  409d55:	mov    ecx,eax
  409d57:	mov    esi,ecx
  409d59:	mov    edx,0x1fffffff
  409d5e:	call   406cd0 <flatcc_builder_extend_vector@@Base+0x70>
  409d63:	cmp    eax,0x0
  409d66:	je     409d79 <flatcc_builder_append_union_vector@@Base+0x79>
  409d6c:	mov    QWORD PTR [rbp-0x8],0x0
  409d74:	jmp    409d9d <flatcc_builder_append_union_vector@@Base+0x9d>
  409d79:	mov    rdi,QWORD PTR [rbp-0x10]
  409d7d:	mov    rax,QWORD PTR [rbp-0x18]
  409d81:	mov    rcx,QWORD PTR [rbp-0x20]
  409d85:	mov    edx,ecx
  409d87:	mov    edx,edx
  409d89:	mov    ecx,edx
  409d8b:	shl    rcx,0x3
  409d8f:	mov    edx,ecx
  409d91:	mov    rsi,rax
  409d94:	call   406e70 <flatcc_builder_vector_push@@Base+0xf0>
  409d99:	mov    QWORD PTR [rbp-0x8],rax
  409d9d:	mov    rax,QWORD PTR [rbp-0x8]
  409da1:	add    rsp,0x20
  409da5:	pop    rbp
  409da6:	ret    
  409da7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409db0 <flatcc_builder_create_string@@Base>:
  409db0:	push   rbp
  409db1:	mov    rbp,rsp
  409db4:	sub    rsp,0xc0
  409dbb:	mov    eax,0xffffffff
  409dc0:	mov    ecx,eax
  409dc2:	mov    QWORD PTR [rbp-0x10],rdi
  409dc6:	mov    QWORD PTR [rbp-0x18],rsi
  409dca:	mov    QWORD PTR [rbp-0x20],rdx
  409dce:	cmp    QWORD PTR [rbp-0x20],rcx
  409dd2:	jbe    409de4 <flatcc_builder_create_string@@Base+0x34>
  409dd8:	mov    DWORD PTR [rbp-0x4],0x0
  409ddf:	jmp    409f6f <flatcc_builder_create_string@@Base+0x1bf>
  409de4:	mov    rax,QWORD PTR [rbp-0x20]
  409de8:	mov    ecx,eax
  409dea:	mov    edi,ecx
  409dec:	call   405dc0 <flatcc_builder_embed_buffer@@Base+0x420>
  409df1:	mov    DWORD PTR [rbp-0x28],eax
  409df4:	mov    rdi,QWORD PTR [rbp-0x10]
  409df8:	mov    rdx,QWORD PTR [rbp-0x20]
  409dfc:	mov    eax,edx
  409dfe:	add    eax,0x1
  409e01:	mov    esi,eax
  409e03:	mov    edx,0x4
  409e08:	call   405d90 <flatcc_builder_embed_buffer@@Base+0x3f0>
  409e0d:	add    eax,0x1
  409e10:	mov    DWORD PTR [rbp-0x24],eax
  409e13:	mov    QWORD PTR [rbp-0xb8],0x0
  409e1e:	mov    DWORD PTR [rbp-0xb0],0x0
  409e28:	mov    rdi,QWORD PTR [rbp-0xb8]
  409e2f:	add    rdi,0x4
  409e33:	mov    QWORD PTR [rbp-0xb8],rdi
  409e3a:	lea    rdi,[rbp-0x28]
  409e3e:	lea    r8,[rbp-0xb8]
  409e45:	mov    r9,r8
  409e48:	add    r9,0x10
  409e4c:	movsxd r10,DWORD PTR [rbp-0xb0]
  409e53:	shl    r10,0x4
  409e57:	add    r9,r10
  409e5a:	mov    QWORD PTR [r9],rdi
  409e5d:	add    r8,0x10
  409e61:	movsxd rdi,DWORD PTR [rbp-0xb0]
  409e68:	shl    rdi,0x4
  409e6c:	add    r8,rdi
  409e6f:	mov    QWORD PTR [r8+0x8],0x4
  409e77:	mov    eax,DWORD PTR [rbp-0xb0]
  409e7d:	add    eax,0x1
  409e80:	mov    DWORD PTR [rbp-0xb0],eax
  409e86:	cmp    QWORD PTR [rbp-0x20],0x0
  409e8b:	jbe    409eef <flatcc_builder_create_string@@Base+0x13f>
  409e91:	mov    rax,QWORD PTR [rbp-0x20]
  409e95:	add    rax,QWORD PTR [rbp-0xb8]
  409e9c:	mov    QWORD PTR [rbp-0xb8],rax
  409ea3:	mov    rax,QWORD PTR [rbp-0x18]
  409ea7:	lea    rcx,[rbp-0xb8]
  409eae:	mov    rdx,rcx
  409eb1:	add    rdx,0x10
  409eb5:	movsxd rsi,DWORD PTR [rbp-0xb0]
  409ebc:	shl    rsi,0x4
  409ec0:	add    rdx,rsi
  409ec3:	mov    QWORD PTR [rdx],rax
  409ec6:	mov    rax,QWORD PTR [rbp-0x20]
  409eca:	add    rcx,0x10
  409ece:	movsxd rdx,DWORD PTR [rbp-0xb0]
  409ed5:	shl    rdx,0x4
  409ed9:	add    rcx,rdx
  409edc:	mov    QWORD PTR [rcx+0x8],rax
  409ee0:	mov    edi,DWORD PTR [rbp-0xb0]
  409ee6:	add    edi,0x1
  409ee9:	mov    DWORD PTR [rbp-0xb0],edi
  409eef:	cmp    DWORD PTR [rbp-0x24],0x0
  409ef3:	jbe    409f5c <flatcc_builder_create_string@@Base+0x1ac>
  409ef9:	lea    rax,[rip+0x8470]        # 412370 <flatcc_builder_padding_base@@Base>
  409f00:	mov    ecx,DWORD PTR [rbp-0x24]
  409f03:	mov    edx,ecx
  409f05:	add    rdx,QWORD PTR [rbp-0xb8]
  409f0c:	mov    QWORD PTR [rbp-0xb8],rdx
  409f13:	lea    rdx,[rbp-0xb8]
  409f1a:	mov    rsi,rdx
  409f1d:	add    rsi,0x10
  409f21:	movsxd rdi,DWORD PTR [rbp-0xb0]
  409f28:	shl    rdi,0x4
  409f2c:	add    rsi,rdi
  409f2f:	mov    QWORD PTR [rsi],rax
  409f32:	mov    ecx,DWORD PTR [rbp-0x24]
  409f35:	mov    eax,ecx
  409f37:	add    rdx,0x10
  409f3b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  409f42:	shl    rsi,0x4
  409f46:	add    rdx,rsi
  409f49:	mov    QWORD PTR [rdx+0x8],rax
  409f4d:	mov    ecx,DWORD PTR [rbp-0xb0]
  409f53:	add    ecx,0x1
  409f56:	mov    DWORD PTR [rbp-0xb0],ecx
  409f5c:	mov    rdi,QWORD PTR [rbp-0x10]
  409f60:	lea    rsi,[rbp-0xb8]
  409f67:	call   405dd0 <flatcc_builder_embed_buffer@@Base+0x430>
  409f6c:	mov    DWORD PTR [rbp-0x4],eax
  409f6f:	mov    eax,DWORD PTR [rbp-0x4]
  409f72:	add    rsp,0xc0
  409f79:	pop    rbp
  409f7a:	ret    
  409f7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409f80 <flatcc_builder_create_string_str@@Base>:
  409f80:	push   rbp
  409f81:	mov    rbp,rsp
  409f84:	sub    rsp,0x20
  409f88:	mov    QWORD PTR [rbp-0x8],rdi
  409f8c:	mov    QWORD PTR [rbp-0x10],rsi
  409f90:	mov    rdi,QWORD PTR [rbp-0x8]
  409f94:	mov    rsi,QWORD PTR [rbp-0x10]
  409f98:	mov    rax,QWORD PTR [rbp-0x10]
  409f9c:	mov    QWORD PTR [rbp-0x18],rdi
  409fa0:	mov    rdi,rax
  409fa3:	mov    QWORD PTR [rbp-0x20],rsi
  409fa7:	call   403050 <strlen@plt>
  409fac:	mov    rdi,QWORD PTR [rbp-0x18]
  409fb0:	mov    rsi,QWORD PTR [rbp-0x20]
  409fb4:	mov    rdx,rax
  409fb7:	call   409db0 <flatcc_builder_create_string@@Base>
  409fbc:	add    rsp,0x20
  409fc0:	pop    rbp
  409fc1:	ret    
  409fc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409fcc:	nop    DWORD PTR [rax+0x0]

0000000000409fd0 <flatcc_builder_create_string_strn@@Base>:
  409fd0:	push   rbp
  409fd1:	mov    rbp,rsp
  409fd4:	sub    rsp,0x30
  409fd8:	mov    QWORD PTR [rbp-0x8],rdi
  409fdc:	mov    QWORD PTR [rbp-0x10],rsi
  409fe0:	mov    QWORD PTR [rbp-0x18],rdx
  409fe4:	mov    rdi,QWORD PTR [rbp-0x8]
  409fe8:	mov    rsi,QWORD PTR [rbp-0x10]
  409fec:	mov    rdx,QWORD PTR [rbp-0x10]
  409ff0:	mov    rax,QWORD PTR [rbp-0x18]
  409ff4:	mov    QWORD PTR [rbp-0x20],rdi
  409ff8:	mov    rdi,rdx
  409ffb:	mov    QWORD PTR [rbp-0x28],rsi
  409fff:	mov    rsi,rax
  40a002:	call   407350 <flatcc_builder_append_string_strn@@Base+0x50>
  40a007:	mov    rdi,QWORD PTR [rbp-0x20]
  40a00b:	mov    rsi,QWORD PTR [rbp-0x28]
  40a00f:	mov    rdx,rax
  40a012:	call   409db0 <flatcc_builder_create_string@@Base>
  40a017:	add    rsp,0x30
  40a01b:	pop    rbp
  40a01c:	ret    
  40a01d:	nop    DWORD PTR [rax]

000000000040a020 <flatcc_builder_end_string@@Base>:
  40a020:	push   rbp
  40a021:	mov    rbp,rsp
  40a024:	sub    rsp,0x20
  40a028:	mov    QWORD PTR [rbp-0x10],rdi
  40a02c:	mov    rdi,QWORD PTR [rbp-0x10]
  40a030:	mov    rdi,QWORD PTR [rdi+0x30]
  40a034:	movzx  eax,WORD PTR [rdi+0xe]
  40a038:	cmp    eax,0x6
  40a03b:	jne    40a046 <flatcc_builder_end_string@@Base+0x26>
  40a041:	jmp    40a065 <flatcc_builder_end_string@@Base+0x45>
  40a046:	lea    rdi,[rip+0x8a74]        # 412ac1 <flatcc_builder_padding_base@@Base+0x751>
  40a04d:	lea    rsi,[rip+0x852e]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40a054:	mov    edx,0x6c4
  40a059:	lea    rcx,[rip+0x9314]        # 413374 <flatcc_builder_padding_base@@Base+0x1004>
  40a060:	call   403060 <__assert_fail@plt>
  40a065:	mov    rax,QWORD PTR [rbp-0x10]
  40a069:	mov    rax,QWORD PTR [rax+0x30]
  40a06d:	mov    ecx,DWORD PTR [rax+0x14]
  40a070:	mov    rax,QWORD PTR [rbp-0x10]
  40a074:	cmp    ecx,DWORD PTR [rax+0x20]
  40a077:	jne    40a082 <flatcc_builder_end_string@@Base+0x62>
  40a07d:	jmp    40a0a1 <flatcc_builder_end_string@@Base+0x81>
  40a082:	lea    rdi,[rip+0x932e]        # 4133b7 <flatcc_builder_padding_base@@Base+0x1047>
  40a089:	lea    rsi,[rip+0x84f2]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40a090:	mov    edx,0x6c5
  40a095:	lea    rcx,[rip+0x92d8]        # 413374 <flatcc_builder_padding_base@@Base+0x1004>
  40a09c:	call   403060 <__assert_fail@plt>
  40a0a1:	mov    rdi,QWORD PTR [rbp-0x10]
  40a0a5:	mov    rax,QWORD PTR [rbp-0x10]
  40a0a9:	mov    rsi,QWORD PTR [rax+0x18]
  40a0ad:	mov    rax,QWORD PTR [rbp-0x10]
  40a0b1:	mov    ecx,DWORD PTR [rax+0x20]
  40a0b4:	mov    edx,ecx
  40a0b6:	call   409db0 <flatcc_builder_create_string@@Base>
  40a0bb:	xor    ecx,ecx
  40a0bd:	mov    DWORD PTR [rbp-0x14],eax
  40a0c0:	cmp    ecx,eax
  40a0c2:	jne    40a0d4 <flatcc_builder_end_string@@Base+0xb4>
  40a0c8:	mov    DWORD PTR [rbp-0x4],0x0
  40a0cf:	jmp    40a0e3 <flatcc_builder_end_string@@Base+0xc3>
  40a0d4:	mov    rdi,QWORD PTR [rbp-0x10]
  40a0d8:	call   406950 <flatcc_builder_end_buffer@@Base+0x160>
  40a0dd:	mov    eax,DWORD PTR [rbp-0x14]
  40a0e0:	mov    DWORD PTR [rbp-0x4],eax
  40a0e3:	mov    eax,DWORD PTR [rbp-0x4]
  40a0e6:	add    rsp,0x20
  40a0ea:	pop    rbp
  40a0eb:	ret    
  40a0ec:	nop    DWORD PTR [rax+0x0]

000000000040a0f0 <flatcc_builder_string_edit@@Base>:
  40a0f0:	push   rbp
  40a0f1:	mov    rbp,rsp
  40a0f4:	mov    QWORD PTR [rbp-0x8],rdi
  40a0f8:	mov    rdi,QWORD PTR [rbp-0x8]
  40a0fc:	mov    rax,QWORD PTR [rdi+0x18]
  40a100:	pop    rbp
  40a101:	ret    
  40a102:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a10c:	nop    DWORD PTR [rax+0x0]

000000000040a110 <flatcc_builder_string_len@@Base>:
  40a110:	push   rbp
  40a111:	mov    rbp,rsp
  40a114:	mov    QWORD PTR [rbp-0x8],rdi
  40a118:	mov    rdi,QWORD PTR [rbp-0x8]
  40a11c:	mov    rdi,QWORD PTR [rdi+0x30]
  40a120:	mov    eax,DWORD PTR [rdi+0x14]
  40a123:	pop    rbp
  40a124:	ret    
  40a125:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a12f:	nop
  40a130:	push   rbp
  40a131:	mov    rbp,rsp
  40a134:	sub    rsp,0x20
  40a138:	mov    ax,cx
  40a13b:	mov    r8w,dx
  40a13f:	mov    QWORD PTR [rbp-0x10],rdi
  40a143:	mov    DWORD PTR [rbp-0x14],esi
  40a146:	mov    WORD PTR [rbp-0x16],r8w
  40a14b:	mov    WORD PTR [rbp-0x18],ax
  40a14f:	mov    rdi,QWORD PTR [rbp-0x10]
  40a153:	mov    ecx,DWORD PTR [rdi+0x20]
  40a156:	movzx  edx,WORD PTR [rbp-0x16]
  40a15a:	add    ecx,edx
  40a15c:	sub    ecx,0x1
  40a15f:	movzx  edx,WORD PTR [rbp-0x16]
  40a163:	sub    edx,0x1
  40a166:	xor    edx,0xffffffff
  40a169:	and    ecx,edx
  40a16b:	mov    DWORD PTR [rbp-0x1c],ecx
  40a16e:	mov    ecx,DWORD PTR [rbp-0x1c]
  40a171:	add    ecx,DWORD PTR [rbp-0x14]
  40a174:	mov    rdi,QWORD PTR [rbp-0x10]
  40a178:	mov    DWORD PTR [rdi+0x20],ecx
  40a17b:	mov    rdi,QWORD PTR [rbp-0x10]
  40a17f:	cmp    ecx,DWORD PTR [rdi+0x24]
  40a182:	jb     40a1bf <flatcc_builder_string_len@@Base+0xaf>
  40a188:	mov    rdi,QWORD PTR [rbp-0x10]
  40a18c:	mov    rax,QWORD PTR [rbp-0x10]
  40a190:	mov    ecx,DWORD PTR [rax+0x20]
  40a193:	add    ecx,0x1
  40a196:	mov    ecx,ecx
  40a198:	mov    esi,ecx
  40a19a:	mov    edx,0xfffc
  40a19f:	call   40ab30 <flatcc_builder_get_emit_context@@Base+0x50>
  40a1a4:	cmp    eax,0x0
  40a1a7:	je     40a1ba <flatcc_builder_string_len@@Base+0xaa>
  40a1ad:	mov    QWORD PTR [rbp-0x8],0x0
  40a1b5:	jmp    40a217 <flatcc_builder_string_len@@Base+0x107>
  40a1ba:	jmp    40a1bf <flatcc_builder_string_len@@Base+0xaf>
  40a1bf:	mov    eax,DWORD PTR [rbp-0x1c]
  40a1c2:	mov    ecx,eax
  40a1c4:	add    rcx,0x4
  40a1c8:	mov    dx,cx
  40a1cb:	mov    rcx,QWORD PTR [rbp-0x10]
  40a1cf:	mov    rcx,QWORD PTR [rcx+0x8]
  40a1d3:	movzx  eax,WORD PTR [rbp-0x18]
  40a1d7:	mov    esi,eax
  40a1d9:	mov    WORD PTR [rcx+rsi*2],dx
  40a1dd:	movzx  eax,WORD PTR [rbp-0x18]
  40a1e1:	mov    rcx,QWORD PTR [rbp-0x10]
  40a1e5:	movzx  edi,WORD PTR [rcx+0x10]
  40a1e9:	cmp    eax,edi
  40a1eb:	jl     40a203 <flatcc_builder_string_len@@Base+0xf3>
  40a1f1:	movzx  eax,WORD PTR [rbp-0x18]
  40a1f5:	add    eax,0x1
  40a1f8:	mov    cx,ax
  40a1fb:	mov    rdx,QWORD PTR [rbp-0x10]
  40a1ff:	mov    WORD PTR [rdx+0x10],cx
  40a203:	mov    rax,QWORD PTR [rbp-0x10]
  40a207:	mov    rax,QWORD PTR [rax+0x18]
  40a20b:	mov    ecx,DWORD PTR [rbp-0x1c]
  40a20e:	mov    edx,ecx
  40a210:	add    rax,rdx
  40a213:	mov    QWORD PTR [rbp-0x8],rax
  40a217:	mov    rax,QWORD PTR [rbp-0x8]
  40a21b:	add    rsp,0x20
  40a21f:	pop    rbp
  40a220:	ret    
  40a221:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a22b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a230 <flatcc_builder_table_edit@@Base>:
  40a230:	push   rbp
  40a231:	mov    rbp,rsp
  40a234:	sub    rsp,0x10
  40a238:	mov    QWORD PTR [rbp-0x8],rdi
  40a23c:	mov    QWORD PTR [rbp-0x10],rsi
  40a240:	mov    rsi,QWORD PTR [rbp-0x8]
  40a244:	mov    rsi,QWORD PTR [rsi+0x30]
  40a248:	movzx  eax,WORD PTR [rsi+0xe]
  40a24c:	cmp    eax,0x3
  40a24f:	jne    40a25a <flatcc_builder_table_edit@@Base+0x2a>
  40a255:	jmp    40a279 <flatcc_builder_table_edit@@Base+0x49>
  40a25a:	lea    rdi,[rip+0x8b50]        # 412db1 <flatcc_builder_padding_base@@Base+0xa41>
  40a261:	lea    rsi,[rip+0x831a]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40a268:	mov    edx,0x702
  40a26d:	lea    rcx,[rip+0x91f5]        # 413469 <flatcc_builder_padding_base@@Base+0x10f9>
  40a274:	call   403060 <__assert_fail@plt>
  40a279:	xor    eax,eax
  40a27b:	mov    ecx,eax
  40a27d:	mov    rdx,QWORD PTR [rbp-0x8]
  40a281:	mov    rdx,QWORD PTR [rdx+0x18]
  40a285:	mov    rsi,QWORD PTR [rbp-0x8]
  40a289:	mov    eax,DWORD PTR [rsi+0x20]
  40a28c:	mov    esi,eax
  40a28e:	add    rdx,rsi
  40a291:	sub    rcx,QWORD PTR [rbp-0x10]
  40a295:	add    rdx,rcx
  40a298:	mov    rax,rdx
  40a29b:	add    rsp,0x10
  40a29f:	pop    rbp
  40a2a0:	ret    
  40a2a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a2b0 <flatcc_builder_table_add_copy@@Base>:
  40a2b0:	push   rbp
  40a2b1:	mov    rbp,rsp
  40a2b4:	sub    rsp,0x30
  40a2b8:	mov    ax,r8w
  40a2bc:	mov    QWORD PTR [rbp-0x8],rdi
  40a2c0:	mov    DWORD PTR [rbp-0xc],esi
  40a2c3:	mov    QWORD PTR [rbp-0x18],rdx
  40a2c7:	mov    QWORD PTR [rbp-0x20],rcx
  40a2cb:	mov    WORD PTR [rbp-0x22],ax
  40a2cf:	mov    rdi,QWORD PTR [rbp-0x8]
  40a2d3:	mov    esi,DWORD PTR [rbp-0xc]
  40a2d6:	mov    rdx,QWORD PTR [rbp-0x20]
  40a2da:	movzx  ecx,WORD PTR [rbp-0x22]
  40a2de:	call   4093f0 <flatcc_builder_table_add@@Base>
  40a2e3:	mov    QWORD PTR [rbp-0x30],rax
  40a2e7:	cmp    rax,0x0
  40a2eb:	je     40a302 <flatcc_builder_table_add_copy@@Base+0x52>
  40a2f1:	mov    rdi,QWORD PTR [rbp-0x30]
  40a2f5:	mov    rsi,QWORD PTR [rbp-0x18]
  40a2f9:	mov    rdx,QWORD PTR [rbp-0x20]
  40a2fd:	call   4030b0 <memcpy@plt>
  40a302:	mov    rax,QWORD PTR [rbp-0x30]
  40a306:	add    rsp,0x30
  40a30a:	pop    rbp
  40a30b:	ret    
  40a30c:	nop    DWORD PTR [rax+0x0]
  40a310:	push   rbp
  40a311:	mov    rbp,rsp
  40a314:	sub    rsp,0x20
  40a318:	mov    ax,si
  40a31b:	mov    QWORD PTR [rbp-0x10],rdi
  40a31f:	mov    WORD PTR [rbp-0x12],ax
  40a323:	mov    rdi,QWORD PTR [rbp-0x10]
  40a327:	mov    esi,DWORD PTR [rdi+0x20]
  40a32a:	mov    edi,esi
  40a32c:	add    rdi,0x4
  40a330:	sub    rdi,0x1
  40a334:	and    rdi,0xfffffffffffffffc
  40a338:	mov    esi,edi
  40a33a:	mov    DWORD PTR [rbp-0x18],esi
  40a33d:	mov    esi,DWORD PTR [rbp-0x18]
  40a340:	mov    edi,esi
  40a342:	add    rdi,0x4
  40a346:	mov    esi,edi
  40a348:	mov    rdi,QWORD PTR [rbp-0x10]
  40a34c:	mov    DWORD PTR [rdi+0x20],esi
  40a34f:	mov    rdi,QWORD PTR [rbp-0x10]
  40a353:	cmp    esi,DWORD PTR [rdi+0x24]
  40a356:	jbe    40a38e <flatcc_builder_table_add_copy@@Base+0xde>
  40a35c:	mov    rdi,QWORD PTR [rbp-0x10]
  40a360:	mov    rax,QWORD PTR [rbp-0x10]
  40a364:	mov    ecx,DWORD PTR [rax+0x20]
  40a367:	mov    esi,ecx
  40a369:	mov    edx,0xfffc
  40a36e:	call   40ab30 <flatcc_builder_get_emit_context@@Base+0x50>
  40a373:	cmp    eax,0x0
  40a376:	je     40a389 <flatcc_builder_table_add_copy@@Base+0xd9>
  40a37c:	mov    QWORD PTR [rbp-0x8],0x0
  40a384:	jmp    40a400 <flatcc_builder_table_add_copy@@Base+0x150>
  40a389:	jmp    40a38e <flatcc_builder_table_add_copy@@Base+0xde>
  40a38e:	mov    eax,DWORD PTR [rbp-0x18]
  40a391:	mov    ecx,eax
  40a393:	add    rcx,0x4
  40a397:	mov    dx,cx
  40a39a:	mov    rcx,QWORD PTR [rbp-0x10]
  40a39e:	mov    rcx,QWORD PTR [rcx+0x8]
  40a3a2:	movzx  eax,WORD PTR [rbp-0x12]
  40a3a6:	mov    esi,eax
  40a3a8:	mov    WORD PTR [rcx+rsi*2],dx
  40a3ac:	movzx  eax,WORD PTR [rbp-0x12]
  40a3b0:	mov    rcx,QWORD PTR [rbp-0x10]
  40a3b4:	movzx  edi,WORD PTR [rcx+0x10]
  40a3b8:	cmp    eax,edi
  40a3ba:	jl     40a3d2 <flatcc_builder_table_add_copy@@Base+0x122>
  40a3c0:	movzx  eax,WORD PTR [rbp-0x12]
  40a3c4:	add    eax,0x1
  40a3c7:	mov    cx,ax
  40a3ca:	mov    rdx,QWORD PTR [rbp-0x10]
  40a3ce:	mov    WORD PTR [rdx+0x10],cx
  40a3d2:	mov    eax,DWORD PTR [rbp-0x18]
  40a3d5:	mov    cx,ax
  40a3d8:	mov    rdx,QWORD PTR [rbp-0x10]
  40a3dc:	mov    rsi,QWORD PTR [rdx]
  40a3df:	mov    rdi,rsi
  40a3e2:	add    rdi,0x2
  40a3e6:	mov    QWORD PTR [rdx],rdi
  40a3e9:	mov    WORD PTR [rsi],cx
  40a3ec:	mov    rdx,QWORD PTR [rbp-0x10]
  40a3f0:	mov    rdx,QWORD PTR [rdx+0x18]
  40a3f4:	mov    eax,DWORD PTR [rbp-0x18]
  40a3f7:	mov    esi,eax
  40a3f9:	add    rdx,rsi
  40a3fc:	mov    QWORD PTR [rbp-0x8],rdx
  40a400:	mov    rax,QWORD PTR [rbp-0x8]
  40a404:	add    rsp,0x20
  40a408:	pop    rbp
  40a409:	ret    
  40a40a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a410 <flatcc_builder_push_buffer_alignment@@Base>:
  40a410:	push   rbp
  40a411:	mov    rbp,rsp
  40a414:	mov    QWORD PTR [rbp-0x8],rdi
  40a418:	mov    rdi,QWORD PTR [rbp-0x8]
  40a41c:	mov    ax,WORD PTR [rdi+0xe8]
  40a423:	mov    WORD PTR [rbp-0xa],ax
  40a427:	mov    rdi,QWORD PTR [rbp-0x8]
  40a42b:	mov    WORD PTR [rdi+0xe8],0x4
  40a434:	movzx  eax,WORD PTR [rbp-0xa]
  40a438:	pop    rbp
  40a439:	ret    
  40a43a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a440 <flatcc_builder_pop_buffer_alignment@@Base>:
  40a440:	push   rbp
  40a441:	mov    rbp,rsp
  40a444:	sub    rsp,0x10
  40a448:	mov    ax,si
  40a44b:	mov    QWORD PTR [rbp-0x8],rdi
  40a44f:	mov    WORD PTR [rbp-0xa],ax
  40a453:	mov    rdi,QWORD PTR [rbp-0x8]
  40a457:	movzx  esi,WORD PTR [rbp-0xa]
  40a45b:	call   4062e0 <flatcc_builder_create_buffer@@Base+0x410>
  40a460:	add    rsp,0x10
  40a464:	pop    rbp
  40a465:	ret    
  40a466:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040a470 <flatcc_builder_get_buffer_alignment@@Base>:
  40a470:	push   rbp
  40a471:	mov    rbp,rsp
  40a474:	mov    QWORD PTR [rbp-0x8],rdi
  40a478:	mov    rdi,QWORD PTR [rbp-0x8]
  40a47c:	movzx  eax,WORD PTR [rdi+0xe8]
  40a483:	pop    rbp
  40a484:	ret    
  40a485:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a48f:	nop

000000000040a490 <flatcc_builder_set_vtable_clustering@@Base>:
  40a490:	push   rbp
  40a491:	mov    rbp,rsp
  40a494:	mov    QWORD PTR [rbp-0x8],rdi
  40a498:	mov    DWORD PTR [rbp-0xc],esi
  40a49b:	cmp    DWORD PTR [rbp-0xc],0x0
  40a49f:	setne  al
  40a4a2:	xor    al,0xff
  40a4a4:	and    al,0x1
  40a4a6:	movzx  esi,al
  40a4a9:	mov    rdi,QWORD PTR [rbp-0x8]
  40a4ad:	mov    DWORD PTR [rdi+0x124],esi
  40a4b3:	pop    rbp
  40a4b4:	ret    
  40a4b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4bf:	nop

000000000040a4c0 <flatcc_builder_set_block_align@@Base>:
  40a4c0:	push   rbp
  40a4c1:	mov    rbp,rsp
  40a4c4:	mov    ax,si
  40a4c7:	mov    QWORD PTR [rbp-0x8],rdi
  40a4cb:	mov    WORD PTR [rbp-0xa],ax
  40a4cf:	mov    ax,WORD PTR [rbp-0xa]
  40a4d3:	mov    rdi,QWORD PTR [rbp-0x8]
  40a4d7:	mov    WORD PTR [rdi+0xec],ax
  40a4de:	pop    rbp
  40a4df:	ret    

000000000040a4e0 <flatcc_builder_get_level@@Base>:
  40a4e0:	push   rbp
  40a4e1:	mov    rbp,rsp
  40a4e4:	mov    QWORD PTR [rbp-0x8],rdi
  40a4e8:	mov    rdi,QWORD PTR [rbp-0x8]
  40a4ec:	mov    eax,DWORD PTR [rdi+0x104]
  40a4f2:	pop    rbp
  40a4f3:	ret    
  40a4f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4fe:	xchg   ax,ax

000000000040a500 <flatcc_builder_set_max_level@@Base>:
  40a500:	push   rbp
  40a501:	mov    rbp,rsp
  40a504:	mov    QWORD PTR [rbp-0x8],rdi
  40a508:	mov    DWORD PTR [rbp-0xc],esi
  40a50b:	mov    esi,DWORD PTR [rbp-0xc]
  40a50e:	mov    rdi,QWORD PTR [rbp-0x8]
  40a512:	mov    DWORD PTR [rdi+0x120],esi
  40a518:	mov    rdi,QWORD PTR [rbp-0x8]
  40a51c:	mov    esi,DWORD PTR [rdi+0x108]
  40a522:	mov    rdi,QWORD PTR [rbp-0x8]
  40a526:	cmp    esi,DWORD PTR [rdi+0x120]
  40a52c:	jge    40a546 <flatcc_builder_set_max_level@@Base+0x46>
  40a532:	mov    rax,QWORD PTR [rbp-0x8]
  40a536:	mov    ecx,DWORD PTR [rax+0x120]
  40a53c:	mov    rax,QWORD PTR [rbp-0x8]
  40a540:	mov    DWORD PTR [rax+0x108],ecx
  40a546:	pop    rbp
  40a547:	ret    
  40a548:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a550 <flatcc_builder_get_buffer_size@@Base>:
  40a550:	push   rbp
  40a551:	mov    rbp,rsp
  40a554:	mov    QWORD PTR [rbp-0x8],rdi
  40a558:	mov    rdi,QWORD PTR [rbp-0x8]
  40a55c:	mov    eax,DWORD PTR [rdi+0xf4]
  40a562:	mov    rdi,QWORD PTR [rbp-0x8]
  40a566:	sub    eax,DWORD PTR [rdi+0xf0]
  40a56c:	cdqe   
  40a56e:	pop    rbp
  40a56f:	ret    

000000000040a570 <flatcc_builder_get_buffer_start@@Base>:
  40a570:	push   rbp
  40a571:	mov    rbp,rsp
  40a574:	mov    QWORD PTR [rbp-0x8],rdi
  40a578:	mov    rdi,QWORD PTR [rbp-0x8]
  40a57c:	mov    eax,DWORD PTR [rdi+0xf0]
  40a582:	pop    rbp
  40a583:	ret    
  40a584:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a58e:	xchg   ax,ax

000000000040a590 <flatcc_builder_get_buffer_end@@Base>:
  40a590:	push   rbp
  40a591:	mov    rbp,rsp
  40a594:	mov    QWORD PTR [rbp-0x8],rdi
  40a598:	mov    rdi,QWORD PTR [rbp-0x8]
  40a59c:	mov    eax,DWORD PTR [rdi+0xf4]
  40a5a2:	pop    rbp
  40a5a3:	ret    
  40a5a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a5ae:	xchg   ax,ax

000000000040a5b0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  40a5b0:	push   rbp
  40a5b1:	mov    rbp,rsp
  40a5b4:	mov    QWORD PTR [rbp-0x8],rdi
  40a5b8:	mov    QWORD PTR [rbp-0x10],rsi
  40a5bc:	mov    rsi,QWORD PTR [rbp-0x10]
  40a5c0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a5c4:	mov    QWORD PTR [rdi+0x118],rsi
  40a5cb:	pop    rbp
  40a5cc:	ret    
  40a5cd:	nop    DWORD PTR [rax]

000000000040a5d0 <flatcc_builder_set_identifier@@Base>:
  40a5d0:	push   rbp
  40a5d1:	mov    rbp,rsp
  40a5d4:	mov    QWORD PTR [rbp-0x8],rdi
  40a5d8:	mov    QWORD PTR [rbp-0x10],rsi
  40a5dc:	mov    rsi,QWORD PTR [rbp-0x8]
  40a5e0:	add    rsi,0x110
  40a5e7:	cmp    QWORD PTR [rbp-0x10],0x0
  40a5ec:	mov    QWORD PTR [rbp-0x18],rsi
  40a5f0:	je     40a603 <flatcc_builder_set_identifier@@Base+0x33>
  40a5f6:	mov    rax,QWORD PTR [rbp-0x10]
  40a5fa:	mov    QWORD PTR [rbp-0x20],rax
  40a5fe:	jmp    40a613 <flatcc_builder_set_identifier@@Base+0x43>
  40a603:	lea    rax,[rip+0x7d66]        # 412370 <flatcc_builder_padding_base@@Base>
  40a60a:	mov    QWORD PTR [rbp-0x20],rax
  40a60e:	jmp    40a613 <flatcc_builder_set_identifier@@Base+0x43>
  40a613:	mov    rax,QWORD PTR [rbp-0x20]
  40a617:	mov    ecx,DWORD PTR [rax]
  40a619:	mov    rax,QWORD PTR [rbp-0x18]
  40a61d:	mov    DWORD PTR [rax],ecx
  40a61f:	pop    rbp
  40a620:	ret    
  40a621:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a62b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a630 <flatcc_builder_get_type@@Base>:
  40a630:	push   rbp
  40a631:	mov    rbp,rsp
  40a634:	mov    QWORD PTR [rbp-0x8],rdi
  40a638:	mov    rdi,QWORD PTR [rbp-0x8]
  40a63c:	cmp    QWORD PTR [rdi+0x30],0x0
  40a641:	je     40a65b <flatcc_builder_get_type@@Base+0x2b>
  40a647:	mov    rax,QWORD PTR [rbp-0x8]
  40a64b:	mov    rax,QWORD PTR [rax+0x30]
  40a64f:	movzx  ecx,WORD PTR [rax+0xe]
  40a653:	mov    DWORD PTR [rbp-0xc],ecx
  40a656:	jmp    40a665 <flatcc_builder_get_type@@Base+0x35>
  40a65b:	xor    eax,eax
  40a65d:	mov    DWORD PTR [rbp-0xc],eax
  40a660:	jmp    40a665 <flatcc_builder_get_type@@Base+0x35>
  40a665:	mov    eax,DWORD PTR [rbp-0xc]
  40a668:	pop    rbp
  40a669:	ret    
  40a66a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a670 <flatcc_builder_get_type_at@@Base>:
  40a670:	push   rbp
  40a671:	mov    rbp,rsp
  40a674:	mov    QWORD PTR [rbp-0x10],rdi
  40a678:	mov    DWORD PTR [rbp-0x14],esi
  40a67b:	cmp    DWORD PTR [rbp-0x14],0x1
  40a67f:	jl     40a698 <flatcc_builder_get_type_at@@Base+0x28>
  40a685:	mov    eax,DWORD PTR [rbp-0x14]
  40a688:	mov    rcx,QWORD PTR [rbp-0x10]
  40a68c:	cmp    eax,DWORD PTR [rcx+0x104]
  40a692:	jle    40a6a4 <flatcc_builder_get_type_at@@Base+0x34>
  40a698:	mov    DWORD PTR [rbp-0x4],0x0
  40a69f:	jmp    40a6ca <flatcc_builder_get_type_at@@Base+0x5a>
  40a6a4:	mov    rax,QWORD PTR [rbp-0x10]
  40a6a8:	mov    rax,QWORD PTR [rax+0x30]
  40a6ac:	mov    ecx,DWORD PTR [rbp-0x14]
  40a6af:	mov    rdx,QWORD PTR [rbp-0x10]
  40a6b3:	sub    ecx,DWORD PTR [rdx+0x104]
  40a6b9:	movsxd rdx,ecx
  40a6bc:	imul   rdx,rdx,0x24
  40a6c0:	add    rax,rdx
  40a6c3:	movzx  ecx,WORD PTR [rax+0xe]
  40a6c7:	mov    DWORD PTR [rbp-0x4],ecx
  40a6ca:	mov    eax,DWORD PTR [rbp-0x4]
  40a6cd:	pop    rbp
  40a6ce:	ret    
  40a6cf:	nop

000000000040a6d0 <flatcc_builder_get_direct_buffer@@Base>:
  40a6d0:	push   rbp
  40a6d1:	mov    rbp,rsp
  40a6d4:	sub    rsp,0x20
  40a6d8:	mov    QWORD PTR [rbp-0x10],rdi
  40a6dc:	mov    QWORD PTR [rbp-0x18],rsi
  40a6e0:	mov    rsi,QWORD PTR [rbp-0x10]
  40a6e4:	cmp    DWORD PTR [rsi+0x128],0x0
  40a6eb:	je     40a710 <flatcc_builder_get_direct_buffer@@Base+0x40>
  40a6f1:	mov    rax,QWORD PTR [rbp-0x10]
  40a6f5:	add    rax,0x130
  40a6fb:	mov    rsi,QWORD PTR [rbp-0x18]
  40a6ff:	mov    rdi,rax
  40a702:	call   40a740 <flatcc_builder_get_direct_buffer@@Base+0x70>
  40a707:	mov    QWORD PTR [rbp-0x8],rax
  40a70b:	jmp    40a733 <flatcc_builder_get_direct_buffer@@Base+0x63>
  40a710:	cmp    QWORD PTR [rbp-0x18],0x0
  40a715:	je     40a726 <flatcc_builder_get_direct_buffer@@Base+0x56>
  40a71b:	mov    rax,QWORD PTR [rbp-0x18]
  40a71f:	mov    QWORD PTR [rax],0x0
  40a726:	jmp    40a72b <flatcc_builder_get_direct_buffer@@Base+0x5b>
  40a72b:	mov    QWORD PTR [rbp-0x8],0x0
  40a733:	mov    rax,QWORD PTR [rbp-0x8]
  40a737:	add    rsp,0x20
  40a73b:	pop    rbp
  40a73c:	ret    
  40a73d:	nop    DWORD PTR [rax]
  40a740:	push   rbp
  40a741:	mov    rbp,rsp
  40a744:	mov    QWORD PTR [rbp-0x10],rdi
  40a748:	mov    QWORD PTR [rbp-0x18],rsi
  40a74c:	mov    rsi,QWORD PTR [rbp-0x10]
  40a750:	mov    rsi,QWORD PTR [rsi]
  40a753:	mov    rdi,QWORD PTR [rbp-0x10]
  40a757:	cmp    rsi,QWORD PTR [rdi+0x8]
  40a75b:	jne    40a78c <flatcc_builder_get_direct_buffer@@Base+0xbc>
  40a761:	cmp    QWORD PTR [rbp-0x18],0x0
  40a766:	je     40a77b <flatcc_builder_get_direct_buffer@@Base+0xab>
  40a76c:	mov    rax,QWORD PTR [rbp-0x10]
  40a770:	mov    rax,QWORD PTR [rax+0x30]
  40a774:	mov    rcx,QWORD PTR [rbp-0x18]
  40a778:	mov    QWORD PTR [rcx],rax
  40a77b:	mov    rax,QWORD PTR [rbp-0x10]
  40a77f:	mov    rax,QWORD PTR [rax+0x10]
  40a783:	mov    QWORD PTR [rbp-0x8],rax
  40a787:	jmp    40a7aa <flatcc_builder_get_direct_buffer@@Base+0xda>
  40a78c:	cmp    QWORD PTR [rbp-0x18],0x0
  40a791:	je     40a7a2 <flatcc_builder_get_direct_buffer@@Base+0xd2>
  40a797:	mov    rax,QWORD PTR [rbp-0x18]
  40a79b:	mov    QWORD PTR [rax],0x0
  40a7a2:	mov    QWORD PTR [rbp-0x8],0x0
  40a7aa:	mov    rax,QWORD PTR [rbp-0x8]
  40a7ae:	pop    rbp
  40a7af:	ret    

000000000040a7b0 <flatcc_builder_copy_buffer@@Base>:
  40a7b0:	push   rbp
  40a7b1:	mov    rbp,rsp
  40a7b4:	sub    rsp,0x20
  40a7b8:	mov    QWORD PTR [rbp-0x10],rdi
  40a7bc:	mov    QWORD PTR [rbp-0x18],rsi
  40a7c0:	mov    QWORD PTR [rbp-0x20],rdx
  40a7c4:	mov    rdx,QWORD PTR [rbp-0x10]
  40a7c8:	cmp    DWORD PTR [rdx+0x128],0x0
  40a7cf:	jne    40a7e2 <flatcc_builder_copy_buffer@@Base+0x32>
  40a7d5:	mov    QWORD PTR [rbp-0x8],0x0
  40a7dd:	jmp    40a837 <flatcc_builder_copy_buffer@@Base+0x87>
  40a7e2:	mov    rax,QWORD PTR [rbp-0x10]
  40a7e6:	add    rax,0x130
  40a7ec:	mov    rsi,QWORD PTR [rbp-0x18]
  40a7f0:	mov    rdx,QWORD PTR [rbp-0x20]
  40a7f4:	mov    rdi,rax
  40a7f7:	call   40b450 <flatcc_emitter_copy_buffer@@Base>
  40a7fc:	mov    QWORD PTR [rbp-0x18],rax
  40a800:	cmp    QWORD PTR [rbp-0x18],0x0
  40a805:	je     40a810 <flatcc_builder_copy_buffer@@Base+0x60>
  40a80b:	jmp    40a82f <flatcc_builder_copy_buffer@@Base+0x7f>
  40a810:	lea    rdi,[rip+0x7fd9]        # 4127f0 <flatcc_builder_padding_base@@Base+0x480>
  40a817:	lea    rsi,[rip+0x7d64]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40a81e:	mov    edx,0x786
  40a823:	lea    rcx,[rip+0x8cca]        # 4134f4 <flatcc_builder_padding_base@@Base+0x1184>
  40a82a:	call   403060 <__assert_fail@plt>
  40a82f:	mov    rax,QWORD PTR [rbp-0x18]
  40a833:	mov    QWORD PTR [rbp-0x8],rax
  40a837:	mov    rax,QWORD PTR [rbp-0x8]
  40a83b:	add    rsp,0x20
  40a83f:	pop    rbp
  40a840:	ret    
  40a841:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a84b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a850 <flatcc_builder_finalize_buffer@@Base>:
  40a850:	push   rbp
  40a851:	mov    rbp,rsp
  40a854:	sub    rsp,0x20
  40a858:	mov    QWORD PTR [rbp-0x8],rdi
  40a85c:	mov    QWORD PTR [rbp-0x10],rsi
  40a860:	mov    rdi,QWORD PTR [rbp-0x8]
  40a864:	call   40a550 <flatcc_builder_get_buffer_size@@Base>
  40a869:	mov    QWORD PTR [rbp-0x20],rax
  40a86d:	cmp    QWORD PTR [rbp-0x10],0x0
  40a872:	je     40a883 <flatcc_builder_finalize_buffer@@Base+0x33>
  40a878:	mov    rax,QWORD PTR [rbp-0x20]
  40a87c:	mov    rcx,QWORD PTR [rbp-0x10]
  40a880:	mov    QWORD PTR [rcx],rax
  40a883:	mov    rdi,QWORD PTR [rbp-0x20]
  40a887:	call   4030c0 <malloc@plt>
  40a88c:	mov    QWORD PTR [rbp-0x18],rax
  40a890:	cmp    QWORD PTR [rbp-0x18],0x0
  40a895:	jne    40a8ba <flatcc_builder_finalize_buffer@@Base+0x6a>
  40a89b:	lea    rdi,[rip+0x8ea0]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  40a8a2:	lea    rsi,[rip+0x7cd9]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40a8a9:	mov    edx,0x798
  40a8ae:	lea    rcx,[rip+0x8c84]        # 413539 <flatcc_builder_padding_base@@Base+0x11c9>
  40a8b5:	call   403060 <__assert_fail@plt>
  40a8ba:	mov    rdi,QWORD PTR [rbp-0x8]
  40a8be:	mov    rsi,QWORD PTR [rbp-0x18]
  40a8c2:	mov    rdx,QWORD PTR [rbp-0x20]
  40a8c6:	call   40a7b0 <flatcc_builder_copy_buffer@@Base>
  40a8cb:	cmp    rax,0x0
  40a8cf:	jne    40a8f4 <flatcc_builder_finalize_buffer@@Base+0xa4>
  40a8d5:	lea    rdi,[rip+0x8e66]        # 413742 <flatcc_builder_padding_base@@Base+0x13d2>
  40a8dc:	lea    rsi,[rip+0x7c9f]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40a8e3:	mov    edx,0x79c
  40a8e8:	lea    rcx,[rip+0x8c4a]        # 413539 <flatcc_builder_padding_base@@Base+0x11c9>
  40a8ef:	call   403060 <__assert_fail@plt>
  40a8f4:	jmp    40a8f9 <flatcc_builder_finalize_buffer@@Base+0xa9>
  40a8f9:	cmp    QWORD PTR [rbp-0x18],0x0
  40a8fe:	jne    40a91a <flatcc_builder_finalize_buffer@@Base+0xca>
  40a904:	cmp    QWORD PTR [rbp-0x10],0x0
  40a909:	je     40a91a <flatcc_builder_finalize_buffer@@Base+0xca>
  40a90f:	mov    rax,QWORD PTR [rbp-0x10]
  40a913:	mov    QWORD PTR [rax],0x0
  40a91a:	mov    rax,QWORD PTR [rbp-0x18]
  40a91e:	add    rsp,0x20
  40a922:	pop    rbp
  40a923:	ret    
  40a924:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a92e:	xchg   ax,ax

000000000040a930 <flatcc_builder_finalize_aligned_buffer@@Base>:
  40a930:	push   rbp
  40a931:	mov    rbp,rsp
  40a934:	sub    rsp,0x30
  40a938:	mov    QWORD PTR [rbp-0x8],rdi
  40a93c:	mov    QWORD PTR [rbp-0x10],rsi
  40a940:	mov    rdi,QWORD PTR [rbp-0x8]
  40a944:	call   40a550 <flatcc_builder_get_buffer_size@@Base>
  40a949:	mov    QWORD PTR [rbp-0x28],rax
  40a94d:	cmp    QWORD PTR [rbp-0x10],0x0
  40a952:	je     40a963 <flatcc_builder_finalize_aligned_buffer@@Base+0x33>
  40a958:	mov    rax,QWORD PTR [rbp-0x28]
  40a95c:	mov    rcx,QWORD PTR [rbp-0x10]
  40a960:	mov    QWORD PTR [rcx],rax
  40a963:	mov    rdi,QWORD PTR [rbp-0x8]
  40a967:	call   40a470 <flatcc_builder_get_buffer_alignment@@Base>
  40a96c:	movzx  ecx,ax
  40a96f:	mov    edi,ecx
  40a971:	mov    QWORD PTR [rbp-0x20],rdi
  40a975:	mov    rdi,QWORD PTR [rbp-0x28]
  40a979:	add    rdi,QWORD PTR [rbp-0x20]
  40a97d:	sub    rdi,0x1
  40a981:	mov    rdx,QWORD PTR [rbp-0x20]
  40a985:	sub    rdx,0x1
  40a989:	xor    rdx,0xffffffffffffffff
  40a98d:	and    rdi,rdx
  40a990:	mov    QWORD PTR [rbp-0x28],rdi
  40a994:	mov    rdi,QWORD PTR [rbp-0x20]
  40a998:	mov    rsi,QWORD PTR [rbp-0x28]
  40a99c:	call   40aa20 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40a9a1:	mov    QWORD PTR [rbp-0x18],rax
  40a9a5:	cmp    QWORD PTR [rbp-0x18],0x0
  40a9aa:	jne    40a9b5 <flatcc_builder_finalize_aligned_buffer@@Base+0x85>
  40a9b0:	jmp    40a9eb <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40a9b5:	mov    rdi,QWORD PTR [rbp-0x8]
  40a9b9:	mov    rsi,QWORD PTR [rbp-0x18]
  40a9bd:	mov    rdx,QWORD PTR [rbp-0x28]
  40a9c1:	call   40a7b0 <flatcc_builder_copy_buffer@@Base>
  40a9c6:	cmp    rax,0x0
  40a9ca:	jne    40a9e6 <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  40a9d0:	mov    rdi,QWORD PTR [rbp-0x18]
  40a9d4:	call   403030 <free@plt>
  40a9d9:	mov    QWORD PTR [rbp-0x18],0x0
  40a9e1:	jmp    40a9eb <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40a9e6:	jmp    40a9eb <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40a9eb:	cmp    QWORD PTR [rbp-0x18],0x0
  40a9f0:	jne    40aa0c <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
  40a9f6:	cmp    QWORD PTR [rbp-0x10],0x0
  40a9fb:	je     40aa0c <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
  40aa01:	mov    rax,QWORD PTR [rbp-0x10]
  40aa05:	mov    QWORD PTR [rax],0x0
  40aa0c:	mov    rax,QWORD PTR [rbp-0x18]
  40aa10:	add    rsp,0x30
  40aa14:	pop    rbp
  40aa15:	ret    
  40aa16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa20:	push   rbp
  40aa21:	mov    rbp,rsp
  40aa24:	sub    rsp,0x20
  40aa28:	mov    QWORD PTR [rbp-0x8],rdi
  40aa2c:	mov    QWORD PTR [rbp-0x10],rsi
  40aa30:	mov    QWORD PTR [rbp-0x20],0x0
  40aa38:	cmp    QWORD PTR [rbp-0x8],0x8
  40aa3d:	jae    40aa4b <flatcc_builder_finalize_aligned_buffer@@Base+0x11b>
  40aa43:	mov    QWORD PTR [rbp-0x8],0x8
  40aa4b:	mov    rsi,QWORD PTR [rbp-0x8]
  40aa4f:	mov    rdx,QWORD PTR [rbp-0x10]
  40aa53:	lea    rdi,[rbp-0x20]
  40aa57:	call   4030e0 <posix_memalign@plt>
  40aa5c:	mov    DWORD PTR [rbp-0x14],eax
  40aa5f:	cmp    DWORD PTR [rbp-0x14],0x0
  40aa63:	je     40aa85 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40aa69:	cmp    QWORD PTR [rbp-0x20],0x0
  40aa6e:	je     40aa85 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40aa74:	mov    rdi,QWORD PTR [rbp-0x20]
  40aa78:	call   403030 <free@plt>
  40aa7d:	mov    QWORD PTR [rbp-0x20],0x0
  40aa85:	mov    rax,QWORD PTR [rbp-0x20]
  40aa89:	add    rsp,0x20
  40aa8d:	pop    rbp
  40aa8e:	ret    
  40aa8f:	nop

000000000040aa90 <flatcc_builder_aligned_alloc@@Base>:
  40aa90:	push   rbp
  40aa91:	mov    rbp,rsp
  40aa94:	sub    rsp,0x10
  40aa98:	mov    QWORD PTR [rbp-0x8],rdi
  40aa9c:	mov    QWORD PTR [rbp-0x10],rsi
  40aaa0:	mov    rdi,QWORD PTR [rbp-0x8]
  40aaa4:	mov    rsi,QWORD PTR [rbp-0x10]
  40aaa8:	call   40aa20 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40aaad:	add    rsp,0x10
  40aab1:	pop    rbp
  40aab2:	ret    
  40aab3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aabd:	nop    DWORD PTR [rax]

000000000040aac0 <flatcc_builder_aligned_free@@Base>:
  40aac0:	push   rbp
  40aac1:	mov    rbp,rsp
  40aac4:	sub    rsp,0x10
  40aac8:	mov    QWORD PTR [rbp-0x8],rdi
  40aacc:	mov    rdi,QWORD PTR [rbp-0x8]
  40aad0:	call   403030 <free@plt>
  40aad5:	add    rsp,0x10
  40aad9:	pop    rbp
  40aada:	ret    
  40aadb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040aae0 <flatcc_builder_get_emit_context@@Base>:
  40aae0:	push   rbp
  40aae1:	mov    rbp,rsp
  40aae4:	mov    QWORD PTR [rbp-0x8],rdi
  40aae8:	mov    rdi,QWORD PTR [rbp-0x8]
  40aaec:	mov    rax,QWORD PTR [rdi+0x38]
  40aaf0:	pop    rbp
  40aaf1:	ret    
  40aaf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aafc:	nop    DWORD PTR [rax+0x0]
  40ab00:	push   rbp
  40ab01:	mov    rbp,rsp
  40ab04:	mov    ax,si
  40ab07:	mov    QWORD PTR [rbp-0x8],rdi
  40ab0b:	mov    WORD PTR [rbp-0xa],ax
  40ab0f:	mov    rdi,QWORD PTR [rbp-0x8]
  40ab13:	mov    esi,DWORD PTR [rdi+0xf4]
  40ab19:	movzx  ecx,WORD PTR [rbp-0xa]
  40ab1d:	sub    ecx,0x1
  40ab20:	and    esi,ecx
  40ab22:	mov    eax,esi
  40ab24:	pop    rbp
  40ab25:	ret    
  40ab26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab30:	push   rbp
  40ab31:	mov    rbp,rsp
  40ab34:	sub    rsp,0x30
  40ab38:	mov    QWORD PTR [rbp-0x10],rdi
  40ab3c:	mov    QWORD PTR [rbp-0x18],rsi
  40ab40:	mov    DWORD PTR [rbp-0x1c],edx
  40ab43:	mov    rsi,QWORD PTR [rbp-0x10]
  40ab47:	add    rsi,0x58
  40ab4b:	add    rsi,0x10
  40ab4f:	mov    QWORD PTR [rbp-0x28],rsi
  40ab53:	mov    rsi,QWORD PTR [rbp-0x10]
  40ab57:	mov    rsi,QWORD PTR [rsi+0x50]
  40ab5b:	mov    rdi,QWORD PTR [rbp-0x10]
  40ab5f:	mov    rdi,QWORD PTR [rdi+0x40]
  40ab63:	mov    rax,QWORD PTR [rbp-0x28]
  40ab67:	mov    rcx,QWORD PTR [rbp-0x10]
  40ab6b:	mov    edx,DWORD PTR [rcx+0x28]
  40ab6e:	mov    ecx,edx
  40ab70:	add    rcx,QWORD PTR [rbp-0x18]
  40ab74:	mov    QWORD PTR [rbp-0x30],rsi
  40ab78:	mov    rsi,rax
  40ab7b:	mov    rdx,rcx
  40ab7e:	mov    r8d,0x1
  40ab84:	mov    ecx,r8d
  40ab87:	mov    rax,QWORD PTR [rbp-0x30]
  40ab8b:	call   rax
  40ab8d:	cmp    eax,0x0
  40ab90:	je     40aba2 <flatcc_builder_get_emit_context@@Base+0xc2>
  40ab96:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ab9d:	jmp    40abb5 <flatcc_builder_get_emit_context@@Base+0xd5>
  40aba2:	mov    rdi,QWORD PTR [rbp-0x10]
  40aba6:	mov    esi,DWORD PTR [rbp-0x1c]
  40aba9:	call   406a90 <flatcc_builder_start_struct@@Base+0x80>
  40abae:	mov    DWORD PTR [rbp-0x4],0x0
  40abb5:	mov    eax,DWORD PTR [rbp-0x4]
  40abb8:	add    rsp,0x30
  40abbc:	pop    rbp
  40abbd:	ret    
  40abbe:	xchg   ax,ax
  40abc0:	push   rbp
  40abc1:	mov    rbp,rsp
  40abc4:	sub    rsp,0x30
  40abc8:	mov    QWORD PTR [rbp-0x10],rdi
  40abcc:	mov    rdi,QWORD PTR [rbp-0x10]
  40abd0:	add    rdi,0x58
  40abd4:	add    rdi,0x50
  40abd8:	mov    QWORD PTR [rbp-0x18],rdi
  40abdc:	mov    rdi,QWORD PTR [rbp-0x10]
  40abe0:	cmp    DWORD PTR [rdi+0xe4],0x0
  40abe7:	jne    40abf2 <flatcc_builder_get_emit_context@@Base+0x112>
  40abed:	jmp    40ac11 <flatcc_builder_get_emit_context@@Base+0x131>
  40abf2:	lea    rdi,[rip+0x8b0d]        # 413706 <flatcc_builder_padding_base@@Base+0x1396>
  40abf9:	lea    rsi,[rip+0x7982]        # 412582 <flatcc_builder_padding_base@@Base+0x212>
  40ac00:	mov    edx,0x156
  40ac05:	lea    rcx,[rip+0x8b09]        # 413715 <flatcc_builder_padding_base@@Base+0x13a5>
  40ac0c:	call   403060 <__assert_fail@plt>
  40ac11:	mov    eax,0x10
  40ac16:	mov    ecx,eax
  40ac18:	xor    r8d,r8d
  40ac1b:	mov    rdi,QWORD PTR [rbp-0x10]
  40ac1f:	mov    rdx,QWORD PTR [rbp-0x10]
  40ac23:	mov    eax,DWORD PTR [rdx+0xe4]
  40ac29:	mov    edx,eax
  40ac2b:	mov    esi,0x6
  40ac30:	call   4056a0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  40ac35:	cmp    rax,0x0
  40ac39:	jne    40ac4b <flatcc_builder_get_emit_context@@Base+0x16b>
  40ac3f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ac46:	jmp    40ad2a <flatcc_builder_get_emit_context@@Base+0x24a>
  40ac4b:	mov    rax,QWORD PTR [rbp-0x10]
  40ac4f:	mov    DWORD PTR [rax+0xe4],0x10
  40ac59:	mov    QWORD PTR [rbp-0x20],0x100
  40ac61:	mov    rax,QWORD PTR [rbp-0x10]
  40ac65:	mov    rax,QWORD PTR [rax+0x50]
  40ac69:	mov    rcx,QWORD PTR [rbp-0x10]
  40ac6d:	mov    rdi,QWORD PTR [rcx+0x40]
  40ac71:	mov    rsi,QWORD PTR [rbp-0x18]
  40ac75:	mov    rdx,QWORD PTR [rbp-0x20]
  40ac79:	mov    ecx,0x1
  40ac7e:	mov    r8d,0x5
  40ac84:	call   rax
  40ac86:	cmp    eax,0x0
  40ac89:	je     40ac9b <flatcc_builder_get_emit_context@@Base+0x1bb>
  40ac8f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ac96:	jmp    40ad2a <flatcc_builder_get_emit_context@@Base+0x24a>
  40ac9b:	jmp    40aca0 <flatcc_builder_get_emit_context@@Base+0x1c0>
  40aca0:	mov    rax,QWORD PTR [rbp-0x20]
  40aca4:	shl    rax,0x1
  40aca8:	mov    rcx,QWORD PTR [rbp-0x18]
  40acac:	cmp    rax,QWORD PTR [rcx+0x8]
  40acb0:	ja     40acc7 <flatcc_builder_get_emit_context@@Base+0x1e7>
  40acb6:	mov    rax,QWORD PTR [rbp-0x20]
  40acba:	shl    rax,0x1
  40acbe:	mov    QWORD PTR [rbp-0x20],rax
  40acc2:	jmp    40aca0 <flatcc_builder_get_emit_context@@Base+0x1c0>
  40acc7:	mov    rax,QWORD PTR [rbp-0x20]
  40accb:	shr    rax,0x2
  40accf:	mov    QWORD PTR [rbp-0x20],rax
  40acd3:	mov    QWORD PTR [rbp-0x28],0x0
  40acdb:	mov    eax,0x1
  40ace0:	mov    ecx,eax
  40ace2:	mov    rdx,QWORD PTR [rbp-0x28]
  40ace6:	mov    QWORD PTR [rbp-0x30],rcx
  40acea:	mov    rcx,rdx
  40aced:	mov    rdx,QWORD PTR [rbp-0x30]
  40acf1:	shl    rdx,cl
  40acf4:	cmp    rdx,QWORD PTR [rbp-0x20]
  40acf8:	jae    40ad14 <flatcc_builder_get_emit_context@@Base+0x234>
  40acfe:	jmp    40ad03 <flatcc_builder_get_emit_context@@Base+0x223>
  40ad03:	mov    rax,QWORD PTR [rbp-0x28]
  40ad07:	add    rax,0x1
  40ad0b:	mov    QWORD PTR [rbp-0x28],rax
  40ad0f:	jmp    40acdb <flatcc_builder_get_emit_context@@Base+0x1fb>
  40ad14:	mov    rax,QWORD PTR [rbp-0x28]
  40ad18:	mov    rcx,QWORD PTR [rbp-0x10]
  40ad1c:	mov    QWORD PTR [rcx+0xd8],rax
  40ad23:	mov    DWORD PTR [rbp-0x4],0x0
  40ad2a:	mov    eax,DWORD PTR [rbp-0x4]
  40ad2d:	add    rsp,0x30
  40ad31:	pop    rbp
  40ad32:	ret    
  40ad33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad3d:	nop    DWORD PTR [rax]

000000000040ad40 <flatcc_emitter_recycle_page@@Base>:
  40ad40:	push   rbp
  40ad41:	mov    rbp,rsp
  40ad44:	mov    QWORD PTR [rbp-0x10],rdi
  40ad48:	mov    QWORD PTR [rbp-0x18],rsi
  40ad4c:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad50:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad54:	cmp    rsi,QWORD PTR [rdi]
  40ad57:	je     40ad6f <flatcc_emitter_recycle_page@@Base+0x2f>
  40ad5d:	mov    rax,QWORD PTR [rbp-0x18]
  40ad61:	mov    rcx,QWORD PTR [rbp-0x10]
  40ad65:	cmp    rax,QWORD PTR [rcx+0x8]
  40ad69:	jne    40ad7b <flatcc_emitter_recycle_page@@Base+0x3b>
  40ad6f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ad76:	jmp    40ae13 <flatcc_emitter_recycle_page@@Base+0xd3>
  40ad7b:	mov    rax,QWORD PTR [rbp-0x18]
  40ad7f:	mov    rax,QWORD PTR [rax+0xb88]
  40ad86:	mov    rcx,QWORD PTR [rbp-0x18]
  40ad8a:	mov    rcx,QWORD PTR [rcx+0xb80]
  40ad91:	mov    QWORD PTR [rcx+0xb88],rax
  40ad98:	mov    rax,QWORD PTR [rbp-0x18]
  40ad9c:	mov    rax,QWORD PTR [rax+0xb80]
  40ada3:	mov    rcx,QWORD PTR [rbp-0x18]
  40ada7:	mov    rcx,QWORD PTR [rcx+0xb88]
  40adae:	mov    QWORD PTR [rcx+0xb80],rax
  40adb5:	mov    rax,QWORD PTR [rbp-0x10]
  40adb9:	mov    rax,QWORD PTR [rax]
  40adbc:	mov    rax,QWORD PTR [rax+0xb88]
  40adc3:	mov    rcx,QWORD PTR [rbp-0x18]
  40adc7:	mov    QWORD PTR [rcx+0xb88],rax
  40adce:	mov    rax,QWORD PTR [rbp-0x10]
  40add2:	mov    rax,QWORD PTR [rax]
  40add5:	mov    rcx,QWORD PTR [rbp-0x18]
  40add9:	mov    QWORD PTR [rcx+0xb80],rax
  40ade0:	mov    rax,QWORD PTR [rbp-0x18]
  40ade4:	mov    rcx,QWORD PTR [rbp-0x18]
  40ade8:	mov    rcx,QWORD PTR [rcx+0xb88]
  40adef:	mov    QWORD PTR [rcx+0xb80],rax
  40adf6:	mov    rax,QWORD PTR [rbp-0x18]
  40adfa:	mov    rcx,QWORD PTR [rbp-0x18]
  40adfe:	mov    rcx,QWORD PTR [rcx+0xb80]
  40ae05:	mov    QWORD PTR [rcx+0xb88],rax
  40ae0c:	mov    DWORD PTR [rbp-0x4],0x0
  40ae13:	mov    eax,DWORD PTR [rbp-0x4]
  40ae16:	pop    rbp
  40ae17:	ret    
  40ae18:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040ae20 <flatcc_emitter_reset@@Base>:
  40ae20:	push   rbp
  40ae21:	mov    rbp,rsp
  40ae24:	sub    rsp,0x20
  40ae28:	mov    QWORD PTR [rbp-0x8],rdi
  40ae2c:	mov    rdi,QWORD PTR [rbp-0x8]
  40ae30:	mov    rdi,QWORD PTR [rdi]
  40ae33:	mov    QWORD PTR [rbp-0x10],rdi
  40ae37:	mov    rdi,QWORD PTR [rbp-0x8]
  40ae3b:	cmp    QWORD PTR [rdi],0x0
  40ae3f:	jne    40ae4a <flatcc_emitter_reset@@Base+0x2a>
  40ae45:	jmp    40afb9 <flatcc_emitter_reset@@Base+0x199>
  40ae4a:	xor    eax,eax
  40ae4c:	mov    rcx,QWORD PTR [rbp-0x8]
  40ae50:	mov    rcx,QWORD PTR [rcx]
  40ae53:	mov    rdx,QWORD PTR [rbp-0x8]
  40ae57:	mov    QWORD PTR [rdx+0x8],rcx
  40ae5b:	mov    rcx,QWORD PTR [rbp-0x8]
  40ae5f:	mov    rcx,QWORD PTR [rcx]
  40ae62:	add    rcx,0x5c0
  40ae69:	mov    rdx,QWORD PTR [rbp-0x8]
  40ae6d:	mov    QWORD PTR [rdx+0x10],rcx
  40ae71:	mov    rcx,QWORD PTR [rbp-0x8]
  40ae75:	mov    rcx,QWORD PTR [rcx+0x10]
  40ae79:	mov    rdx,QWORD PTR [rbp-0x8]
  40ae7d:	mov    QWORD PTR [rdx+0x20],rcx
  40ae81:	mov    rcx,QWORD PTR [rbp-0x8]
  40ae85:	mov    QWORD PTR [rcx+0x18],0x5c0
  40ae8d:	mov    rcx,QWORD PTR [rbp-0x8]
  40ae91:	mov    QWORD PTR [rcx+0x28],0x5c0
  40ae99:	mov    rcx,QWORD PTR [rbp-0x8]
  40ae9d:	mov    rcx,QWORD PTR [rcx+0x18]
  40aea1:	mov    esi,ecx
  40aea3:	sub    eax,esi
  40aea5:	mov    rcx,QWORD PTR [rbp-0x8]
  40aea9:	mov    rcx,QWORD PTR [rcx]
  40aeac:	mov    DWORD PTR [rcx+0xb90],eax
  40aeb2:	mov    rcx,QWORD PTR [rbp-0x8]
  40aeb6:	cmp    QWORD PTR [rcx+0x40],0x0
  40aebb:	jne    40aed1 <flatcc_emitter_reset@@Base+0xb1>
  40aec1:	mov    rax,QWORD PTR [rbp-0x8]
  40aec5:	mov    rax,QWORD PTR [rax+0x30]
  40aec9:	mov    rcx,QWORD PTR [rbp-0x8]
  40aecd:	mov    QWORD PTR [rcx+0x40],rax
  40aed1:	mov    rax,QWORD PTR [rbp-0x8]
  40aed5:	imul   rax,QWORD PTR [rax+0x40],0x3
  40aeda:	shr    rax,0x2
  40aede:	mov    rcx,QWORD PTR [rbp-0x8]
  40aee2:	mov    rcx,QWORD PTR [rcx+0x30]
  40aee6:	shr    rcx,0x2
  40aeea:	add    rax,rcx
  40aeed:	mov    rcx,QWORD PTR [rbp-0x8]
  40aef1:	mov    QWORD PTR [rcx+0x40],rax
  40aef5:	mov    rax,QWORD PTR [rbp-0x8]
  40aef9:	mov    QWORD PTR [rax+0x30],0x0
  40af01:	xor    eax,eax
  40af03:	mov    cl,al
  40af05:	mov    rdx,QWORD PTR [rbp-0x8]
  40af09:	mov    rdx,QWORD PTR [rdx+0x40]
  40af0d:	shl    rdx,0x1
  40af11:	mov    rsi,QWORD PTR [rbp-0x8]
  40af15:	cmp    rdx,QWORD PTR [rsi+0x38]
  40af19:	mov    BYTE PTR [rbp-0x11],cl
  40af1c:	jae    40af3e <flatcc_emitter_reset@@Base+0x11e>
  40af22:	mov    rax,QWORD PTR [rbp-0x8]
  40af26:	mov    rax,QWORD PTR [rax+0x8]
  40af2a:	mov    rax,QWORD PTR [rax+0xb80]
  40af31:	mov    rcx,QWORD PTR [rbp-0x8]
  40af35:	cmp    rax,QWORD PTR [rcx]
  40af38:	setne  dl
  40af3b:	mov    BYTE PTR [rbp-0x11],dl
  40af3e:	mov    al,BYTE PTR [rbp-0x11]
  40af41:	test   al,0x1
  40af43:	jne    40af4e <flatcc_emitter_reset@@Base+0x12e>
  40af49:	jmp    40afb9 <flatcc_emitter_reset@@Base+0x199>
  40af4e:	mov    rax,QWORD PTR [rbp-0x8]
  40af52:	mov    rax,QWORD PTR [rax+0x8]
  40af56:	mov    rax,QWORD PTR [rax+0xb80]
  40af5d:	mov    QWORD PTR [rbp-0x10],rax
  40af61:	mov    rax,QWORD PTR [rbp-0x10]
  40af65:	mov    rax,QWORD PTR [rax+0xb80]
  40af6c:	mov    rcx,QWORD PTR [rbp-0x8]
  40af70:	mov    rcx,QWORD PTR [rcx+0x8]
  40af74:	mov    QWORD PTR [rcx+0xb80],rax
  40af7b:	mov    rax,QWORD PTR [rbp-0x8]
  40af7f:	mov    rax,QWORD PTR [rax+0x8]
  40af83:	mov    rcx,QWORD PTR [rbp-0x10]
  40af87:	mov    rcx,QWORD PTR [rcx+0xb80]
  40af8e:	mov    QWORD PTR [rcx+0xb88],rax
  40af95:	mov    rax,QWORD PTR [rbp-0x10]
  40af99:	mov    rdi,rax
  40af9c:	call   403030 <free@plt>
  40afa1:	mov    rax,QWORD PTR [rbp-0x8]
  40afa5:	mov    rcx,QWORD PTR [rax+0x38]
  40afa9:	sub    rcx,0xb80
  40afb0:	mov    QWORD PTR [rax+0x38],rcx
  40afb4:	jmp    40af01 <flatcc_emitter_reset@@Base+0xe1>
  40afb9:	add    rsp,0x20
  40afbd:	pop    rbp
  40afbe:	ret    
  40afbf:	nop

000000000040afc0 <flatcc_emitter_clear@@Base>:
  40afc0:	push   rbp
  40afc1:	mov    rbp,rsp
  40afc4:	sub    rsp,0x10
  40afc8:	mov    QWORD PTR [rbp-0x8],rdi
  40afcc:	mov    rdi,QWORD PTR [rbp-0x8]
  40afd0:	mov    rdi,QWORD PTR [rdi]
  40afd3:	mov    QWORD PTR [rbp-0x10],rdi
  40afd7:	cmp    QWORD PTR [rbp-0x10],0x0
  40afdc:	jne    40afe7 <flatcc_emitter_clear@@Base+0x27>
  40afe2:	jmp    40b057 <flatcc_emitter_clear@@Base+0x97>
  40afe7:	mov    rax,QWORD PTR [rbp-0x10]
  40afeb:	mov    rax,QWORD PTR [rax+0xb88]
  40aff2:	mov    QWORD PTR [rax+0xb80],0x0
  40affd:	mov    rax,QWORD PTR [rbp-0x10]
  40b001:	cmp    QWORD PTR [rax+0xb80],0x0
  40b009:	je     40b036 <flatcc_emitter_clear@@Base+0x76>
  40b00f:	mov    rax,QWORD PTR [rbp-0x10]
  40b013:	mov    rax,QWORD PTR [rax+0xb80]
  40b01a:	mov    QWORD PTR [rbp-0x10],rax
  40b01e:	mov    rax,QWORD PTR [rbp-0x10]
  40b022:	mov    rax,QWORD PTR [rax+0xb88]
  40b029:	mov    rdi,rax
  40b02c:	call   403030 <free@plt>
  40b031:	jmp    40affd <flatcc_emitter_clear@@Base+0x3d>
  40b036:	mov    rax,QWORD PTR [rbp-0x10]
  40b03a:	mov    rdi,rax
  40b03d:	call   403030 <free@plt>
  40b042:	xor    esi,esi
  40b044:	mov    ecx,0x48
  40b049:	mov    edx,ecx
  40b04b:	mov    rax,QWORD PTR [rbp-0x8]
  40b04f:	mov    rdi,rax
  40b052:	call   403070 <memset@plt>
  40b057:	add    rsp,0x10
  40b05b:	pop    rbp
  40b05c:	ret    
  40b05d:	nop    DWORD PTR [rax]

000000000040b060 <flatcc_emitter@@Base>:
  40b060:	push   rbp
  40b061:	mov    rbp,rsp
  40b064:	sub    rsp,0x40
  40b068:	mov    QWORD PTR [rbp-0x10],rdi
  40b06c:	mov    QWORD PTR [rbp-0x18],rsi
  40b070:	mov    DWORD PTR [rbp-0x1c],edx
  40b073:	mov    DWORD PTR [rbp-0x20],ecx
  40b076:	mov    QWORD PTR [rbp-0x28],r8
  40b07a:	mov    rsi,QWORD PTR [rbp-0x10]
  40b07e:	mov    QWORD PTR [rbp-0x30],rsi
  40b082:	mov    rsi,QWORD PTR [rbp-0x28]
  40b086:	mov    rdi,QWORD PTR [rbp-0x30]
  40b08a:	add    rsi,QWORD PTR [rdi+0x30]
  40b08e:	mov    QWORD PTR [rdi+0x30],rsi
  40b092:	cmp    DWORD PTR [rbp-0x20],0x0
  40b096:	jge    40b158 <flatcc_emitter@@Base+0xf8>
  40b09c:	mov    rax,QWORD PTR [rbp-0x28]
  40b0a0:	mov    rcx,QWORD PTR [rbp-0x30]
  40b0a4:	cmp    rax,QWORD PTR [rcx+0x18]
  40b0a8:	ja     40b0ec <flatcc_emitter@@Base+0x8c>
  40b0ae:	xor    eax,eax
  40b0b0:	mov    ecx,eax
  40b0b2:	mov    rdx,QWORD PTR [rbp-0x28]
  40b0b6:	mov    rsi,QWORD PTR [rbp-0x30]
  40b0ba:	mov    rdi,QWORD PTR [rsi+0x10]
  40b0be:	sub    rcx,rdx
  40b0c1:	add    rdi,rcx
  40b0c4:	mov    QWORD PTR [rsi+0x10],rdi
  40b0c8:	mov    rcx,QWORD PTR [rbp-0x28]
  40b0cc:	mov    rdx,QWORD PTR [rbp-0x30]
  40b0d0:	mov    rsi,QWORD PTR [rdx+0x18]
  40b0d4:	sub    rsi,rcx
  40b0d7:	mov    QWORD PTR [rdx+0x18],rsi
  40b0db:	mov    rcx,QWORD PTR [rbp-0x30]
  40b0df:	mov    rcx,QWORD PTR [rcx+0x10]
  40b0e3:	mov    QWORD PTR [rbp-0x38],rcx
  40b0e7:	jmp    40b206 <flatcc_emitter@@Base+0x1a6>
  40b0ec:	mov    eax,DWORD PTR [rbp-0x1c]
  40b0ef:	mov    rcx,QWORD PTR [rbp-0x18]
  40b0f3:	movsxd rdx,eax
  40b0f6:	shl    rdx,0x4
  40b0fa:	add    rcx,rdx
  40b0fd:	mov    QWORD PTR [rbp-0x18],rcx
  40b101:	mov    eax,DWORD PTR [rbp-0x1c]
  40b104:	mov    ecx,eax
  40b106:	add    ecx,0xffffffff
  40b109:	mov    DWORD PTR [rbp-0x1c],ecx
  40b10c:	cmp    eax,0x0
  40b10f:	je     40b153 <flatcc_emitter@@Base+0xf3>
  40b115:	mov    rax,QWORD PTR [rbp-0x18]
  40b119:	add    rax,0xfffffffffffffff0
  40b11d:	mov    QWORD PTR [rbp-0x18],rax
  40b121:	mov    rdi,QWORD PTR [rbp-0x30]
  40b125:	mov    rax,QWORD PTR [rbp-0x18]
  40b129:	mov    rsi,QWORD PTR [rax]
  40b12c:	mov    rax,QWORD PTR [rbp-0x18]
  40b130:	mov    rdx,QWORD PTR [rax+0x8]
  40b134:	call   40b270 <flatcc_emitter@@Base+0x210>
  40b139:	cmp    eax,0x0
  40b13c:	je     40b14e <flatcc_emitter@@Base+0xee>
  40b142:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b149:	jmp    40b25f <flatcc_emitter@@Base+0x1ff>
  40b14e:	jmp    40b101 <flatcc_emitter@@Base+0xa1>
  40b153:	jmp    40b1fa <flatcc_emitter@@Base+0x19a>
  40b158:	mov    rax,QWORD PTR [rbp-0x28]
  40b15c:	mov    rcx,QWORD PTR [rbp-0x30]
  40b160:	cmp    rax,QWORD PTR [rcx+0x28]
  40b164:	ja     40b19e <flatcc_emitter@@Base+0x13e>
  40b16a:	mov    rax,QWORD PTR [rbp-0x30]
  40b16e:	mov    rax,QWORD PTR [rax+0x20]
  40b172:	mov    QWORD PTR [rbp-0x38],rax
  40b176:	mov    rax,QWORD PTR [rbp-0x28]
  40b17a:	mov    rcx,QWORD PTR [rbp-0x30]
  40b17e:	add    rax,QWORD PTR [rcx+0x20]
  40b182:	mov    QWORD PTR [rcx+0x20],rax
  40b186:	mov    rax,QWORD PTR [rbp-0x28]
  40b18a:	mov    rcx,QWORD PTR [rbp-0x30]
  40b18e:	mov    rdx,QWORD PTR [rcx+0x28]
  40b192:	sub    rdx,rax
  40b195:	mov    QWORD PTR [rcx+0x28],rdx
  40b199:	jmp    40b206 <flatcc_emitter@@Base+0x1a6>
  40b19e:	jmp    40b1a3 <flatcc_emitter@@Base+0x143>
  40b1a3:	mov    eax,DWORD PTR [rbp-0x1c]
  40b1a6:	mov    ecx,eax
  40b1a8:	add    ecx,0xffffffff
  40b1ab:	mov    DWORD PTR [rbp-0x1c],ecx
  40b1ae:	cmp    eax,0x0
  40b1b1:	je     40b1f5 <flatcc_emitter@@Base+0x195>
  40b1b7:	mov    rdi,QWORD PTR [rbp-0x30]
  40b1bb:	mov    rax,QWORD PTR [rbp-0x18]
  40b1bf:	mov    rsi,QWORD PTR [rax]
  40b1c2:	mov    rax,QWORD PTR [rbp-0x18]
  40b1c6:	mov    rdx,QWORD PTR [rax+0x8]
  40b1ca:	call   40b370 <flatcc_emitter@@Base+0x310>
  40b1cf:	cmp    eax,0x0
  40b1d2:	je     40b1e4 <flatcc_emitter@@Base+0x184>
  40b1d8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b1df:	jmp    40b25f <flatcc_emitter@@Base+0x1ff>
  40b1e4:	mov    rax,QWORD PTR [rbp-0x18]
  40b1e8:	add    rax,0x10
  40b1ec:	mov    QWORD PTR [rbp-0x18],rax
  40b1f0:	jmp    40b1a3 <flatcc_emitter@@Base+0x143>
  40b1f5:	jmp    40b1fa <flatcc_emitter@@Base+0x19a>
  40b1fa:	mov    DWORD PTR [rbp-0x4],0x0
  40b201:	jmp    40b25f <flatcc_emitter@@Base+0x1ff>
  40b206:	jmp    40b20b <flatcc_emitter@@Base+0x1ab>
  40b20b:	mov    eax,DWORD PTR [rbp-0x1c]
  40b20e:	mov    ecx,eax
  40b210:	add    ecx,0xffffffff
  40b213:	mov    DWORD PTR [rbp-0x1c],ecx
  40b216:	cmp    eax,0x0
  40b219:	je     40b258 <flatcc_emitter@@Base+0x1f8>
  40b21f:	mov    rdi,QWORD PTR [rbp-0x38]
  40b223:	mov    rax,QWORD PTR [rbp-0x18]
  40b227:	mov    rsi,QWORD PTR [rax]
  40b22a:	mov    rax,QWORD PTR [rbp-0x18]
  40b22e:	mov    rdx,QWORD PTR [rax+0x8]
  40b232:	call   4030b0 <memcpy@plt>
  40b237:	mov    rax,QWORD PTR [rbp-0x18]
  40b23b:	mov    rax,QWORD PTR [rax+0x8]
  40b23f:	add    rax,QWORD PTR [rbp-0x38]
  40b243:	mov    QWORD PTR [rbp-0x38],rax
  40b247:	mov    rax,QWORD PTR [rbp-0x18]
  40b24b:	add    rax,0x10
  40b24f:	mov    QWORD PTR [rbp-0x18],rax
  40b253:	jmp    40b20b <flatcc_emitter@@Base+0x1ab>
  40b258:	mov    DWORD PTR [rbp-0x4],0x0
  40b25f:	mov    eax,DWORD PTR [rbp-0x4]
  40b262:	add    rsp,0x40
  40b266:	pop    rbp
  40b267:	ret    
  40b268:	nop    DWORD PTR [rax+rax*1+0x0]
  40b270:	push   rbp
  40b271:	mov    rbp,rsp
  40b274:	sub    rsp,0x30
  40b278:	mov    QWORD PTR [rbp-0x10],rdi
  40b27c:	mov    QWORD PTR [rbp-0x18],rsi
  40b280:	mov    QWORD PTR [rbp-0x20],rdx
  40b284:	mov    rdx,QWORD PTR [rbp-0x20]
  40b288:	add    rdx,QWORD PTR [rbp-0x18]
  40b28c:	mov    QWORD PTR [rbp-0x18],rdx
  40b290:	cmp    QWORD PTR [rbp-0x20],0x0
  40b295:	je     40b35f <flatcc_emitter@@Base+0x2ff>
  40b29b:	mov    rax,QWORD PTR [rbp-0x20]
  40b29f:	mov    QWORD PTR [rbp-0x28],rax
  40b2a3:	mov    rax,QWORD PTR [rbp-0x28]
  40b2a7:	mov    rcx,QWORD PTR [rbp-0x10]
  40b2ab:	cmp    rax,QWORD PTR [rcx+0x18]
  40b2af:	jbe    40b2f4 <flatcc_emitter@@Base+0x294>
  40b2b5:	mov    rax,QWORD PTR [rbp-0x10]
  40b2b9:	mov    rax,QWORD PTR [rax+0x18]
  40b2bd:	mov    QWORD PTR [rbp-0x28],rax
  40b2c1:	cmp    QWORD PTR [rbp-0x28],0x0
  40b2c6:	jne    40b2ef <flatcc_emitter@@Base+0x28f>
  40b2cc:	mov    rdi,QWORD PTR [rbp-0x10]
  40b2d0:	call   40b5a0 <flatcc_emitter_copy_buffer@@Base+0x150>
  40b2d5:	cmp    eax,0x0
  40b2d8:	je     40b2ea <flatcc_emitter@@Base+0x28a>
  40b2de:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b2e5:	jmp    40b366 <flatcc_emitter@@Base+0x306>
  40b2ea:	jmp    40b290 <flatcc_emitter@@Base+0x230>
  40b2ef:	jmp    40b2f4 <flatcc_emitter@@Base+0x294>
  40b2f4:	xor    eax,eax
  40b2f6:	mov    ecx,eax
  40b2f8:	mov    rdx,QWORD PTR [rbp-0x28]
  40b2fc:	mov    rsi,QWORD PTR [rbp-0x10]
  40b300:	mov    rdi,QWORD PTR [rsi+0x10]
  40b304:	mov    r8,rcx
  40b307:	sub    r8,rdx
  40b30a:	add    rdi,r8
  40b30d:	mov    QWORD PTR [rsi+0x10],rdi
  40b311:	mov    rdx,QWORD PTR [rbp-0x28]
  40b315:	mov    rsi,QWORD PTR [rbp-0x10]
  40b319:	mov    rdi,QWORD PTR [rsi+0x18]
  40b31d:	sub    rdi,rdx
  40b320:	mov    QWORD PTR [rsi+0x18],rdi
  40b324:	mov    rdx,QWORD PTR [rbp-0x28]
  40b328:	mov    rsi,QWORD PTR [rbp-0x18]
  40b32c:	sub    rcx,rdx
  40b32f:	add    rsi,rcx
  40b332:	mov    QWORD PTR [rbp-0x18],rsi
  40b336:	mov    rcx,QWORD PTR [rbp-0x28]
  40b33a:	mov    rdx,QWORD PTR [rbp-0x20]
  40b33e:	sub    rdx,rcx
  40b341:	mov    QWORD PTR [rbp-0x20],rdx
  40b345:	mov    rcx,QWORD PTR [rbp-0x10]
  40b349:	mov    rdi,QWORD PTR [rcx+0x10]
  40b34d:	mov    rsi,QWORD PTR [rbp-0x18]
  40b351:	mov    rdx,QWORD PTR [rbp-0x28]
  40b355:	call   4030b0 <memcpy@plt>
  40b35a:	jmp    40b290 <flatcc_emitter@@Base+0x230>
  40b35f:	mov    DWORD PTR [rbp-0x4],0x0
  40b366:	mov    eax,DWORD PTR [rbp-0x4]
  40b369:	add    rsp,0x30
  40b36d:	pop    rbp
  40b36e:	ret    
  40b36f:	nop
  40b370:	push   rbp
  40b371:	mov    rbp,rsp
  40b374:	sub    rsp,0x30
  40b378:	mov    QWORD PTR [rbp-0x10],rdi
  40b37c:	mov    QWORD PTR [rbp-0x18],rsi
  40b380:	mov    QWORD PTR [rbp-0x20],rdx
  40b384:	cmp    QWORD PTR [rbp-0x20],0x0
  40b389:	je     40b440 <flatcc_emitter@@Base+0x3e0>
  40b38f:	mov    rax,QWORD PTR [rbp-0x20]
  40b393:	mov    QWORD PTR [rbp-0x28],rax
  40b397:	mov    rax,QWORD PTR [rbp-0x28]
  40b39b:	mov    rcx,QWORD PTR [rbp-0x10]
  40b39f:	cmp    rax,QWORD PTR [rcx+0x28]
  40b3a3:	jbe    40b3e8 <flatcc_emitter@@Base+0x388>
  40b3a9:	mov    rax,QWORD PTR [rbp-0x10]
  40b3ad:	mov    rax,QWORD PTR [rax+0x28]
  40b3b1:	mov    QWORD PTR [rbp-0x28],rax
  40b3b5:	cmp    QWORD PTR [rbp-0x28],0x0
  40b3ba:	jne    40b3e3 <flatcc_emitter@@Base+0x383>
  40b3c0:	mov    rdi,QWORD PTR [rbp-0x10]
  40b3c4:	call   40b7c0 <flatcc_emitter_copy_buffer@@Base+0x370>
  40b3c9:	cmp    eax,0x0
  40b3cc:	je     40b3de <flatcc_emitter@@Base+0x37e>
  40b3d2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b3d9:	jmp    40b447 <flatcc_emitter@@Base+0x3e7>
  40b3de:	jmp    40b384 <flatcc_emitter@@Base+0x324>
  40b3e3:	jmp    40b3e8 <flatcc_emitter@@Base+0x388>
  40b3e8:	mov    rax,QWORD PTR [rbp-0x10]
  40b3ec:	mov    rdi,QWORD PTR [rax+0x20]
  40b3f0:	mov    rsi,QWORD PTR [rbp-0x18]
  40b3f4:	mov    rdx,QWORD PTR [rbp-0x28]
  40b3f8:	call   4030b0 <memcpy@plt>
  40b3fd:	mov    rax,QWORD PTR [rbp-0x28]
  40b401:	mov    rdx,QWORD PTR [rbp-0x20]
  40b405:	sub    rdx,rax
  40b408:	mov    QWORD PTR [rbp-0x20],rdx
  40b40c:	mov    rax,QWORD PTR [rbp-0x28]
  40b410:	add    rax,QWORD PTR [rbp-0x18]
  40b414:	mov    QWORD PTR [rbp-0x18],rax
  40b418:	mov    rax,QWORD PTR [rbp-0x28]
  40b41c:	mov    rdx,QWORD PTR [rbp-0x10]
  40b420:	add    rax,QWORD PTR [rdx+0x20]
  40b424:	mov    QWORD PTR [rdx+0x20],rax
  40b428:	mov    rax,QWORD PTR [rbp-0x28]
  40b42c:	mov    rdx,QWORD PTR [rbp-0x10]
  40b430:	mov    rsi,QWORD PTR [rdx+0x28]
  40b434:	sub    rsi,rax
  40b437:	mov    QWORD PTR [rdx+0x28],rsi
  40b43b:	jmp    40b384 <flatcc_emitter@@Base+0x324>
  40b440:	mov    DWORD PTR [rbp-0x4],0x0
  40b447:	mov    eax,DWORD PTR [rbp-0x4]
  40b44a:	add    rsp,0x30
  40b44e:	pop    rbp
  40b44f:	ret    

000000000040b450 <flatcc_emitter_copy_buffer@@Base>:
  40b450:	push   rbp
  40b451:	mov    rbp,rsp
  40b454:	sub    rsp,0x30
  40b458:	mov    QWORD PTR [rbp-0x10],rdi
  40b45c:	mov    QWORD PTR [rbp-0x18],rsi
  40b460:	mov    QWORD PTR [rbp-0x20],rdx
  40b464:	mov    rdx,QWORD PTR [rbp-0x20]
  40b468:	mov    rsi,QWORD PTR [rbp-0x10]
  40b46c:	cmp    rdx,QWORD PTR [rsi+0x30]
  40b470:	jae    40b483 <flatcc_emitter_copy_buffer@@Base+0x33>
  40b476:	mov    QWORD PTR [rbp-0x8],0x0
  40b47e:	jmp    40b58f <flatcc_emitter_copy_buffer@@Base+0x13f>
  40b483:	mov    rax,QWORD PTR [rbp-0x10]
  40b487:	cmp    QWORD PTR [rax],0x0
  40b48b:	jne    40b49e <flatcc_emitter_copy_buffer@@Base+0x4e>
  40b491:	mov    QWORD PTR [rbp-0x8],0x0
  40b499:	jmp    40b58f <flatcc_emitter_copy_buffer@@Base+0x13f>
  40b49e:	mov    rax,QWORD PTR [rbp-0x10]
  40b4a2:	mov    rax,QWORD PTR [rax]
  40b4a5:	mov    rcx,QWORD PTR [rbp-0x10]
  40b4a9:	cmp    rax,QWORD PTR [rcx+0x8]
  40b4ad:	jne    40b4d9 <flatcc_emitter_copy_buffer@@Base+0x89>
  40b4b3:	mov    rdi,QWORD PTR [rbp-0x18]
  40b4b7:	mov    rax,QWORD PTR [rbp-0x10]
  40b4bb:	mov    rsi,QWORD PTR [rax+0x10]
  40b4bf:	mov    rax,QWORD PTR [rbp-0x10]
  40b4c3:	mov    rdx,QWORD PTR [rax+0x30]
  40b4c7:	call   4030b0 <memcpy@plt>
  40b4cc:	mov    rax,QWORD PTR [rbp-0x18]
  40b4d0:	mov    QWORD PTR [rbp-0x8],rax
  40b4d4:	jmp    40b58f <flatcc_emitter_copy_buffer@@Base+0x13f>
  40b4d9:	mov    eax,0xb80
  40b4de:	mov    ecx,eax
  40b4e0:	mov    rdx,QWORD PTR [rbp-0x10]
  40b4e4:	sub    rcx,QWORD PTR [rdx+0x18]
  40b4e8:	mov    QWORD PTR [rbp-0x30],rcx
  40b4ec:	mov    rdi,QWORD PTR [rbp-0x18]
  40b4f0:	mov    rcx,QWORD PTR [rbp-0x10]
  40b4f4:	mov    rsi,QWORD PTR [rcx+0x10]
  40b4f8:	mov    rdx,QWORD PTR [rbp-0x30]
  40b4fc:	call   4030b0 <memcpy@plt>
  40b501:	mov    rcx,QWORD PTR [rbp-0x18]
  40b505:	add    rcx,QWORD PTR [rbp-0x30]
  40b509:	mov    QWORD PTR [rbp-0x18],rcx
  40b50d:	mov    rcx,QWORD PTR [rbp-0x10]
  40b511:	mov    rcx,QWORD PTR [rcx]
  40b514:	mov    rcx,QWORD PTR [rcx+0xb80]
  40b51b:	mov    QWORD PTR [rbp-0x28],rcx
  40b51f:	mov    rax,QWORD PTR [rbp-0x28]
  40b523:	mov    rcx,QWORD PTR [rbp-0x10]
  40b527:	cmp    rax,QWORD PTR [rcx+0x8]
  40b52b:	je     40b568 <flatcc_emitter_copy_buffer@@Base+0x118>
  40b531:	mov    eax,0xb80
  40b536:	mov    edx,eax
  40b538:	mov    rdi,QWORD PTR [rbp-0x18]
  40b53c:	mov    rsi,QWORD PTR [rbp-0x28]
  40b540:	call   4030b0 <memcpy@plt>
  40b545:	mov    rdx,QWORD PTR [rbp-0x18]
  40b549:	add    rdx,0xb80
  40b550:	mov    QWORD PTR [rbp-0x18],rdx
  40b554:	mov    rdx,QWORD PTR [rbp-0x28]
  40b558:	mov    rdx,QWORD PTR [rdx+0xb80]
  40b55f:	mov    QWORD PTR [rbp-0x28],rdx
  40b563:	jmp    40b51f <flatcc_emitter_copy_buffer@@Base+0xcf>
  40b568:	mov    eax,0xb80
  40b56d:	mov    ecx,eax
  40b56f:	mov    rdi,QWORD PTR [rbp-0x18]
  40b573:	mov    rsi,QWORD PTR [rbp-0x28]
  40b577:	mov    rdx,QWORD PTR [rbp-0x10]
  40b57b:	sub    rcx,QWORD PTR [rdx+0x28]
  40b57f:	mov    rdx,rcx
  40b582:	call   4030b0 <memcpy@plt>
  40b587:	mov    rcx,QWORD PTR [rbp-0x18]
  40b58b:	mov    QWORD PTR [rbp-0x8],rcx
  40b58f:	mov    rax,QWORD PTR [rbp-0x8]
  40b593:	add    rsp,0x30
  40b597:	pop    rbp
  40b598:	ret    
  40b599:	nop    DWORD PTR [rax+0x0]
  40b5a0:	push   rbp
  40b5a1:	mov    rbp,rsp
  40b5a4:	sub    rsp,0x20
  40b5a8:	mov    QWORD PTR [rbp-0x10],rdi
  40b5ac:	mov    QWORD PTR [rbp-0x18],0x0
  40b5b4:	mov    rdi,QWORD PTR [rbp-0x10]
  40b5b8:	cmp    QWORD PTR [rdi],0x0
  40b5bc:	je     40b61f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40b5c2:	mov    rax,QWORD PTR [rbp-0x10]
  40b5c6:	mov    rax,QWORD PTR [rax]
  40b5c9:	mov    rax,QWORD PTR [rax+0xb88]
  40b5d0:	mov    rcx,QWORD PTR [rbp-0x10]
  40b5d4:	cmp    rax,QWORD PTR [rcx+0x8]
  40b5d8:	je     40b61f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40b5de:	mov    rax,QWORD PTR [rbp-0x10]
  40b5e2:	mov    rax,QWORD PTR [rax]
  40b5e5:	mov    ecx,DWORD PTR [rax+0xb90]
  40b5eb:	sub    ecx,0xb80
  40b5f1:	mov    rax,QWORD PTR [rbp-0x10]
  40b5f5:	mov    rax,QWORD PTR [rax]
  40b5f8:	mov    rax,QWORD PTR [rax+0xb88]
  40b5ff:	mov    DWORD PTR [rax+0xb90],ecx
  40b605:	mov    rax,QWORD PTR [rbp-0x10]
  40b609:	mov    rax,QWORD PTR [rax]
  40b60c:	mov    rax,QWORD PTR [rax+0xb88]
  40b613:	mov    rdx,QWORD PTR [rbp-0x10]
  40b617:	mov    QWORD PTR [rdx],rax
  40b61a:	jmp    40b762 <flatcc_emitter_copy_buffer@@Base+0x312>
  40b61f:	mov    eax,0xb98
  40b624:	mov    edi,eax
  40b626:	call   4030c0 <malloc@plt>
  40b62b:	mov    QWORD PTR [rbp-0x18],rax
  40b62f:	cmp    rax,0x0
  40b633:	jne    40b645 <flatcc_emitter_copy_buffer@@Base+0x1f5>
  40b639:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b640:	jmp    40b7b1 <flatcc_emitter_copy_buffer@@Base+0x361>
  40b645:	mov    rax,QWORD PTR [rbp-0x10]
  40b649:	mov    rcx,QWORD PTR [rax+0x38]
  40b64d:	add    rcx,0xb80
  40b654:	mov    QWORD PTR [rax+0x38],rcx
  40b658:	mov    rax,QWORD PTR [rbp-0x10]
  40b65c:	cmp    QWORD PTR [rax],0x0
  40b660:	je     40b6c0 <flatcc_emitter_copy_buffer@@Base+0x270>
  40b666:	mov    rax,QWORD PTR [rbp-0x10]
  40b66a:	mov    rax,QWORD PTR [rax+0x8]
  40b66e:	mov    rcx,QWORD PTR [rbp-0x18]
  40b672:	mov    QWORD PTR [rcx+0xb88],rax
  40b679:	mov    rax,QWORD PTR [rbp-0x10]
  40b67d:	mov    rax,QWORD PTR [rax]
  40b680:	mov    rcx,QWORD PTR [rbp-0x18]
  40b684:	mov    QWORD PTR [rcx+0xb80],rax
  40b68b:	mov    rax,QWORD PTR [rbp-0x18]
  40b68f:	mov    rcx,QWORD PTR [rbp-0x10]
  40b693:	mov    rcx,QWORD PTR [rcx]
  40b696:	mov    QWORD PTR [rcx+0xb88],rax
  40b69d:	mov    rax,QWORD PTR [rbp-0x18]
  40b6a1:	mov    rcx,QWORD PTR [rbp-0x10]
  40b6a5:	mov    rcx,QWORD PTR [rcx+0x8]
  40b6a9:	mov    QWORD PTR [rcx+0xb80],rax
  40b6b0:	mov    rax,QWORD PTR [rbp-0x18]
  40b6b4:	mov    rcx,QWORD PTR [rbp-0x10]
  40b6b8:	mov    QWORD PTR [rcx],rax
  40b6bb:	jmp    40b762 <flatcc_emitter_copy_buffer@@Base+0x312>
  40b6c0:	xor    eax,eax
  40b6c2:	mov    ecx,0xb80
  40b6c7:	mov    edx,ecx
  40b6c9:	mov    rsi,QWORD PTR [rbp-0x18]
  40b6cd:	mov    rdi,QWORD PTR [rbp-0x10]
  40b6d1:	mov    QWORD PTR [rdi],rsi
  40b6d4:	mov    rsi,QWORD PTR [rbp-0x18]
  40b6d8:	mov    rdi,QWORD PTR [rbp-0x10]
  40b6dc:	mov    QWORD PTR [rdi+0x8],rsi
  40b6e0:	mov    rsi,QWORD PTR [rbp-0x18]
  40b6e4:	mov    rdi,QWORD PTR [rbp-0x18]
  40b6e8:	mov    QWORD PTR [rdi+0xb80],rsi
  40b6ef:	mov    rsi,QWORD PTR [rbp-0x18]
  40b6f3:	mov    rdi,QWORD PTR [rbp-0x18]
  40b6f7:	mov    QWORD PTR [rdi+0xb88],rsi
  40b6fe:	mov    rsi,QWORD PTR [rbp-0x10]
  40b702:	mov    rsi,QWORD PTR [rsi]
  40b705:	add    rsi,0x5c0
  40b70c:	mov    rdi,QWORD PTR [rbp-0x10]
  40b710:	mov    QWORD PTR [rdi+0x10],rsi
  40b714:	mov    rsi,QWORD PTR [rbp-0x10]
  40b718:	mov    rsi,QWORD PTR [rsi+0x10]
  40b71c:	mov    rdi,QWORD PTR [rbp-0x10]
  40b720:	mov    QWORD PTR [rdi+0x20],rsi
  40b724:	mov    rsi,QWORD PTR [rbp-0x10]
  40b728:	mov    QWORD PTR [rsi+0x18],0x5c0
  40b730:	mov    rsi,QWORD PTR [rbp-0x10]
  40b734:	sub    rdx,QWORD PTR [rsi+0x18]
  40b738:	mov    rsi,QWORD PTR [rbp-0x10]
  40b73c:	mov    QWORD PTR [rsi+0x28],rdx
  40b740:	mov    rdx,QWORD PTR [rbp-0x10]
  40b744:	mov    rdx,QWORD PTR [rdx+0x18]
  40b748:	mov    ecx,edx
  40b74a:	sub    eax,ecx
  40b74c:	mov    rdx,QWORD PTR [rbp-0x18]
  40b750:	mov    DWORD PTR [rdx+0xb90],eax
  40b756:	mov    DWORD PTR [rbp-0x4],0x0
  40b75d:	jmp    40b7b1 <flatcc_emitter_copy_buffer@@Base+0x361>
  40b762:	mov    rax,QWORD PTR [rbp-0x10]
  40b766:	mov    rax,QWORD PTR [rax]
  40b769:	add    rax,0xb80
  40b76f:	mov    rcx,QWORD PTR [rbp-0x10]
  40b773:	mov    QWORD PTR [rcx+0x10],rax
  40b777:	mov    rax,QWORD PTR [rbp-0x10]
  40b77b:	mov    QWORD PTR [rax+0x18],0xb80
  40b783:	mov    rax,QWORD PTR [rbp-0x10]
  40b787:	mov    rax,QWORD PTR [rax]
  40b78a:	mov    rax,QWORD PTR [rax+0xb80]
  40b791:	mov    edx,DWORD PTR [rax+0xb90]
  40b797:	sub    edx,0xb80
  40b79d:	mov    rax,QWORD PTR [rbp-0x10]
  40b7a1:	mov    rax,QWORD PTR [rax]
  40b7a4:	mov    DWORD PTR [rax+0xb90],edx
  40b7aa:	mov    DWORD PTR [rbp-0x4],0x0
  40b7b1:	mov    eax,DWORD PTR [rbp-0x4]
  40b7b4:	add    rsp,0x20
  40b7b8:	pop    rbp
  40b7b9:	ret    
  40b7ba:	nop    WORD PTR [rax+rax*1+0x0]
  40b7c0:	push   rbp
  40b7c1:	mov    rbp,rsp
  40b7c4:	sub    rsp,0x20
  40b7c8:	mov    QWORD PTR [rbp-0x10],rdi
  40b7cc:	mov    QWORD PTR [rbp-0x18],0x0
  40b7d4:	mov    rdi,QWORD PTR [rbp-0x10]
  40b7d8:	cmp    QWORD PTR [rdi+0x8],0x0
  40b7dd:	je     40b81b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40b7e3:	mov    rax,QWORD PTR [rbp-0x10]
  40b7e7:	mov    rax,QWORD PTR [rax+0x8]
  40b7eb:	mov    rax,QWORD PTR [rax+0xb80]
  40b7f2:	mov    rcx,QWORD PTR [rbp-0x10]
  40b7f6:	cmp    rax,QWORD PTR [rcx]
  40b7f9:	je     40b81b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40b7ff:	mov    rax,QWORD PTR [rbp-0x10]
  40b803:	mov    rax,QWORD PTR [rax+0x8]
  40b807:	mov    rax,QWORD PTR [rax+0xb80]
  40b80e:	mov    rcx,QWORD PTR [rbp-0x10]
  40b812:	mov    QWORD PTR [rcx+0x8],rax
  40b816:	jmp    40b960 <flatcc_emitter_copy_buffer@@Base+0x510>
  40b81b:	mov    eax,0xb98
  40b820:	mov    edi,eax
  40b822:	call   4030c0 <malloc@plt>
  40b827:	mov    QWORD PTR [rbp-0x18],rax
  40b82b:	cmp    rax,0x0
  40b82f:	jne    40b841 <flatcc_emitter_copy_buffer@@Base+0x3f1>
  40b835:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b83c:	jmp    40b9ac <flatcc_emitter_copy_buffer@@Base+0x55c>
  40b841:	mov    rax,QWORD PTR [rbp-0x10]
  40b845:	mov    rcx,QWORD PTR [rax+0x38]
  40b849:	add    rcx,0xb80
  40b850:	mov    QWORD PTR [rax+0x38],rcx
  40b854:	mov    rax,QWORD PTR [rbp-0x10]
  40b858:	cmp    QWORD PTR [rax+0x8],0x0
  40b85d:	je     40b8be <flatcc_emitter_copy_buffer@@Base+0x46e>
  40b863:	mov    rax,QWORD PTR [rbp-0x10]
  40b867:	mov    rax,QWORD PTR [rax+0x8]
  40b86b:	mov    rcx,QWORD PTR [rbp-0x18]
  40b86f:	mov    QWORD PTR [rcx+0xb88],rax
  40b876:	mov    rax,QWORD PTR [rbp-0x10]
  40b87a:	mov    rax,QWORD PTR [rax]
  40b87d:	mov    rcx,QWORD PTR [rbp-0x18]
  40b881:	mov    QWORD PTR [rcx+0xb80],rax
  40b888:	mov    rax,QWORD PTR [rbp-0x18]
  40b88c:	mov    rcx,QWORD PTR [rbp-0x10]
  40b890:	mov    rcx,QWORD PTR [rcx]
  40b893:	mov    QWORD PTR [rcx+0xb88],rax
  40b89a:	mov    rax,QWORD PTR [rbp-0x18]
  40b89e:	mov    rcx,QWORD PTR [rbp-0x10]
  40b8a2:	mov    rcx,QWORD PTR [rcx+0x8]
  40b8a6:	mov    QWORD PTR [rcx+0xb80],rax
  40b8ad:	mov    rax,QWORD PTR [rbp-0x18]
  40b8b1:	mov    rcx,QWORD PTR [rbp-0x10]
  40b8b5:	mov    QWORD PTR [rcx+0x8],rax
  40b8b9:	jmp    40b960 <flatcc_emitter_copy_buffer@@Base+0x510>
  40b8be:	xor    eax,eax
  40b8c0:	mov    ecx,0xb80
  40b8c5:	mov    edx,ecx
  40b8c7:	mov    rsi,QWORD PTR [rbp-0x18]
  40b8cb:	mov    rdi,QWORD PTR [rbp-0x10]
  40b8cf:	mov    QWORD PTR [rdi],rsi
  40b8d2:	mov    rsi,QWORD PTR [rbp-0x18]
  40b8d6:	mov    rdi,QWORD PTR [rbp-0x10]
  40b8da:	mov    QWORD PTR [rdi+0x8],rsi
  40b8de:	mov    rsi,QWORD PTR [rbp-0x18]
  40b8e2:	mov    rdi,QWORD PTR [rbp-0x18]
  40b8e6:	mov    QWORD PTR [rdi+0xb80],rsi
  40b8ed:	mov    rsi,QWORD PTR [rbp-0x18]
  40b8f1:	mov    rdi,QWORD PTR [rbp-0x18]
  40b8f5:	mov    QWORD PTR [rdi+0xb88],rsi
  40b8fc:	mov    rsi,QWORD PTR [rbp-0x10]
  40b900:	mov    rsi,QWORD PTR [rsi]
  40b903:	add    rsi,0x5c0
  40b90a:	mov    rdi,QWORD PTR [rbp-0x10]
  40b90e:	mov    QWORD PTR [rdi+0x10],rsi
  40b912:	mov    rsi,QWORD PTR [rbp-0x10]
  40b916:	mov    rsi,QWORD PTR [rsi+0x10]
  40b91a:	mov    rdi,QWORD PTR [rbp-0x10]
  40b91e:	mov    QWORD PTR [rdi+0x20],rsi
  40b922:	mov    rsi,QWORD PTR [rbp-0x10]
  40b926:	mov    QWORD PTR [rsi+0x18],0x5c0
  40b92e:	mov    rsi,QWORD PTR [rbp-0x10]
  40b932:	sub    rdx,QWORD PTR [rsi+0x18]
  40b936:	mov    rsi,QWORD PTR [rbp-0x10]
  40b93a:	mov    QWORD PTR [rsi+0x28],rdx
  40b93e:	mov    rdx,QWORD PTR [rbp-0x10]
  40b942:	mov    rdx,QWORD PTR [rdx+0x18]
  40b946:	mov    ecx,edx
  40b948:	sub    eax,ecx
  40b94a:	mov    rdx,QWORD PTR [rbp-0x18]
  40b94e:	mov    DWORD PTR [rdx+0xb90],eax
  40b954:	mov    DWORD PTR [rbp-0x4],0x0
  40b95b:	jmp    40b9ac <flatcc_emitter_copy_buffer@@Base+0x55c>
  40b960:	mov    rax,QWORD PTR [rbp-0x10]
  40b964:	mov    rax,QWORD PTR [rax+0x8]
  40b968:	mov    rcx,QWORD PTR [rbp-0x10]
  40b96c:	mov    QWORD PTR [rcx+0x20],rax
  40b970:	mov    rax,QWORD PTR [rbp-0x10]
  40b974:	mov    QWORD PTR [rax+0x28],0xb80
  40b97c:	mov    rax,QWORD PTR [rbp-0x10]
  40b980:	mov    rax,QWORD PTR [rax+0x8]
  40b984:	mov    rax,QWORD PTR [rax+0xb88]
  40b98b:	mov    edx,DWORD PTR [rax+0xb90]
  40b991:	add    edx,0xb80
  40b997:	mov    rax,QWORD PTR [rbp-0x10]
  40b99b:	mov    rax,QWORD PTR [rax+0x8]
  40b99f:	mov    DWORD PTR [rax+0xb90],edx
  40b9a5:	mov    DWORD PTR [rbp-0x4],0x0
  40b9ac:	mov    eax,DWORD PTR [rbp-0x4]
  40b9af:	add    rsp,0x20
  40b9b3:	pop    rbp
  40b9b4:	ret    
  40b9b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b9bf:	nop

000000000040b9c0 <grisu3_diy_fp_encode_double@@Base>:
  40b9c0:	push   rbp
  40b9c1:	mov    rbp,rsp
  40b9c4:	sub    rsp,0x100
  40b9cb:	xor    eax,eax
  40b9cd:	mov    QWORD PTR [rbp-0x8],rdi
  40b9d1:	mov    DWORD PTR [rbp-0xc],esi
  40b9d4:	mov    DWORD PTR [rbp-0x10],edx
  40b9d7:	mov    DWORD PTR [rbp-0x14],ecx
  40b9da:	mov    QWORD PTR [rbp-0x20],r8
  40b9de:	mov    DWORD PTR [rbp-0x24],0x3
  40b9e5:	mov    DWORD PTR [rbp-0x28],0x8
  40b9ec:	mov    DWORD PTR [rbp-0x2c],0xfffffbce
  40b9f3:	movabs rdi,0x10000000000000
  40b9fd:	mov    QWORD PTR [rbp-0x38],rdi
  40ba01:	mov    DWORD PTR [rbp-0x3c],0x40
  40ba08:	mov    DWORD PTR [rbp-0x40],0x13
  40ba0f:	mov    ecx,DWORD PTR [rbp-0x14]
  40ba12:	cmp    ecx,0x0
  40ba15:	mov    ecx,0x4
  40ba1a:	cmovne eax,ecx
  40ba1d:	mov    DWORD PTR [rbp-0x44],eax
  40ba20:	mov    eax,DWORD PTR [rbp-0xc]
  40ba23:	sub    eax,DWORD PTR [rbp-0x10]
  40ba26:	mov    DWORD PTR [rbp-0x48],eax
  40ba29:	mov    rdi,QWORD PTR [rbp-0x8]
  40ba2d:	mov    QWORD PTR [rbp-0x60],rdi
  40ba31:	mov    DWORD PTR [rbp-0x58],0x0
  40ba38:	mov    rdi,QWORD PTR [rbp-0x60]
  40ba3c:	mov    esi,DWORD PTR [rbp-0x58]
  40ba3f:	call   40be10 <grisu3_diy_fp_encode_double@@Base+0x450>
  40ba44:	xor    ecx,ecx
  40ba46:	mov    QWORD PTR [rbp-0xa0],rax
  40ba4d:	mov    DWORD PTR [rbp-0x98],edx
  40ba53:	mov    rax,QWORD PTR [rbp-0xa0]
  40ba5a:	mov    QWORD PTR [rbp-0x60],rax
  40ba5e:	mov    rax,QWORD PTR [rbp-0x98]
  40ba65:	mov    QWORD PTR [rbp-0x58],rax
  40ba69:	sub    ecx,DWORD PTR [rbp-0x58]
  40ba6c:	mov    edx,DWORD PTR [rbp-0x44]
  40ba6f:	shl    edx,cl
  40ba71:	mov    DWORD PTR [rbp-0x44],edx
  40ba74:	mov    edi,DWORD PTR [rbp-0x48]
  40ba77:	lea    rsi,[rbp-0x70]
  40ba7b:	call   40bef0 <grisu3_diy_fp_encode_double@@Base+0x530>
  40ba80:	mov    DWORD PTR [rbp-0x4c],eax
  40ba83:	mov    eax,DWORD PTR [rbp-0x4c]
  40ba86:	cmp    eax,DWORD PTR [rbp-0x48]
  40ba89:	je     40bb49 <grisu3_diy_fp_encode_double@@Base+0x189>
  40ba8f:	mov    eax,DWORD PTR [rbp-0x48]
  40ba92:	sub    eax,DWORD PTR [rbp-0x4c]
  40ba95:	sub    eax,0x1
  40ba98:	mov    DWORD PTR [rbp-0xa4],eax
  40ba9e:	cmp    DWORD PTR [rbp-0xa4],0x0
  40baa5:	jl     40babd <grisu3_diy_fp_encode_double@@Base+0xfd>
  40baab:	cmp    DWORD PTR [rbp-0xa4],0x7
  40bab2:	jge    40babd <grisu3_diy_fp_encode_double@@Base+0xfd>
  40bab8:	jmp    40badc <grisu3_diy_fp_encode_double@@Base+0x11c>
  40babd:	lea    rdi,[rip+0x8c04]        # 4146c8 <flatcc_builder_padding_base@@Base+0x2358>
  40bac4:	lea    rsi,[rip+0x8c19]        # 4146e4 <flatcc_builder_padding_base@@Base+0x2374>
  40bacb:	mov    edx,0xb9
  40bad0:	lea    rcx,[rip+0x8c7e]        # 414755 <flatcc_builder_padding_base@@Base+0x23e5>
  40bad7:	call   403060 <__assert_fail@plt>
  40badc:	movsxd rax,DWORD PTR [rbp-0xa4]
  40bae3:	shl    rax,0x4
  40bae7:	lea    rcx,[rip+0xd5a2]        # 419090 <__data_start@@Base+0x10>
  40baee:	add    rcx,rax
  40baf1:	mov    rdi,QWORD PTR [rbp-0x60]
  40baf5:	mov    esi,DWORD PTR [rbp-0x58]
  40baf8:	mov    rdx,QWORD PTR [rcx]
  40bafb:	mov    ecx,DWORD PTR [rcx+0x8]
  40bafe:	call   40c040 <grisu3_diy_fp_encode_double@@Base+0x680>
  40bb03:	mov    QWORD PTR [rbp-0xb8],rax
  40bb0a:	mov    DWORD PTR [rbp-0xb0],edx
  40bb10:	mov    rax,QWORD PTR [rbp-0xb8]
  40bb17:	mov    QWORD PTR [rbp-0x60],rax
  40bb1b:	mov    rax,QWORD PTR [rbp-0xb0]
  40bb22:	mov    QWORD PTR [rbp-0x58],rax
  40bb26:	mov    ecx,DWORD PTR [rbp-0x10]
  40bb29:	add    ecx,0x1
  40bb2c:	add    ecx,DWORD PTR [rbp-0xa4]
  40bb32:	cmp    ecx,0x13
  40bb35:	jle    40bb44 <grisu3_diy_fp_encode_double@@Base+0x184>
  40bb3b:	mov    eax,DWORD PTR [rbp-0x44]
  40bb3e:	add    eax,0x4
  40bb41:	mov    DWORD PTR [rbp-0x44],eax
  40bb44:	jmp    40bb49 <grisu3_diy_fp_encode_double@@Base+0x189>
  40bb49:	mov    rdi,QWORD PTR [rbp-0x60]
  40bb4d:	mov    esi,DWORD PTR [rbp-0x58]
  40bb50:	mov    rdx,QWORD PTR [rbp-0x70]
  40bb54:	mov    ecx,DWORD PTR [rbp-0x68]
  40bb57:	call   40c040 <grisu3_diy_fp_encode_double@@Base+0x680>
  40bb5c:	xor    ecx,ecx
  40bb5e:	mov    QWORD PTR [rbp-0xc8],rax
  40bb65:	mov    DWORD PTR [rbp-0xc0],edx
  40bb6b:	mov    rax,QWORD PTR [rbp-0xc8]
  40bb72:	mov    QWORD PTR [rbp-0x60],rax
  40bb76:	mov    rax,QWORD PTR [rbp-0xc0]
  40bb7d:	mov    QWORD PTR [rbp-0x58],rax
  40bb81:	mov    edx,DWORD PTR [rbp-0x44]
  40bb84:	cmp    edx,0x0
  40bb87:	mov    edx,0x1
  40bb8c:	cmovne ecx,edx
  40bb8f:	add    ecx,0x8
  40bb92:	add    ecx,DWORD PTR [rbp-0x44]
  40bb95:	mov    DWORD PTR [rbp-0x44],ecx
  40bb98:	mov    ecx,DWORD PTR [rbp-0x58]
  40bb9b:	mov    DWORD PTR [rbp-0x50],ecx
  40bb9e:	mov    rdi,QWORD PTR [rbp-0x60]
  40bba2:	mov    esi,DWORD PTR [rbp-0x58]
  40bba5:	call   40be10 <grisu3_diy_fp_encode_double@@Base+0x450>
  40bbaa:	mov    QWORD PTR [rbp-0xd8],rax
  40bbb1:	mov    DWORD PTR [rbp-0xd0],edx
  40bbb7:	mov    rax,QWORD PTR [rbp-0xd8]
  40bbbe:	mov    QWORD PTR [rbp-0x60],rax
  40bbc2:	mov    rax,QWORD PTR [rbp-0xd0]
  40bbc9:	mov    QWORD PTR [rbp-0x58],rax
  40bbcd:	mov    ecx,DWORD PTR [rbp-0x50]
  40bbd0:	sub    ecx,DWORD PTR [rbp-0x58]
  40bbd3:	mov    edx,DWORD PTR [rbp-0x44]
  40bbd6:	shl    edx,cl
  40bbd8:	mov    DWORD PTR [rbp-0x44],edx
  40bbdb:	mov    edx,DWORD PTR [rbp-0x58]
  40bbde:	add    edx,0x40
  40bbe1:	mov    DWORD PTR [rbp-0x84],edx
  40bbe7:	cmp    DWORD PTR [rbp-0x84],0xfffffc0e
  40bbf1:	jl     40bc07 <grisu3_diy_fp_encode_double@@Base+0x247>
  40bbf7:	mov    eax,0x40
  40bbfc:	mov    DWORD PTR [rbp-0xe0],eax
  40bc02:	jmp    40bc41 <grisu3_diy_fp_encode_double@@Base+0x281>
  40bc07:	cmp    DWORD PTR [rbp-0x84],0xfffffbce
  40bc11:	jg     40bc24 <grisu3_diy_fp_encode_double@@Base+0x264>
  40bc17:	xor    eax,eax
  40bc19:	mov    DWORD PTR [rbp-0xe4],eax
  40bc1f:	jmp    40bc35 <grisu3_diy_fp_encode_double@@Base+0x275>
  40bc24:	mov    eax,DWORD PTR [rbp-0x84]
  40bc2a:	sub    eax,0xfffffbce
  40bc2f:	mov    DWORD PTR [rbp-0xe4],eax
  40bc35:	mov    eax,DWORD PTR [rbp-0xe4]
  40bc3b:	mov    DWORD PTR [rbp-0xe0],eax
  40bc41:	mov    eax,DWORD PTR [rbp-0xe0]
  40bc47:	mov    DWORD PTR [rbp-0x84],eax
  40bc4d:	mov    eax,0x40
  40bc52:	sub    eax,DWORD PTR [rbp-0x84]
  40bc58:	mov    DWORD PTR [rbp-0x88],eax
  40bc5e:	mov    eax,DWORD PTR [rbp-0x88]
  40bc64:	add    eax,0x3
  40bc67:	cmp    eax,0x40
  40bc6a:	jl     40bcdf <grisu3_diy_fp_encode_double@@Base+0x31f>
  40bc70:	mov    eax,DWORD PTR [rbp-0x88]
  40bc76:	add    eax,0x3
  40bc79:	sub    eax,0x40
  40bc7c:	sub    eax,0x1
  40bc7f:	mov    DWORD PTR [rbp-0xdc],eax
  40bc85:	mov    eax,DWORD PTR [rbp-0xdc]
  40bc8b:	mov    rcx,QWORD PTR [rbp-0x60]
  40bc8f:	mov    eax,eax
  40bc91:	mov    edx,eax
  40bc93:	mov    QWORD PTR [rbp-0xf0],rcx
  40bc9a:	mov    rcx,rdx
  40bc9d:	mov    rdx,QWORD PTR [rbp-0xf0]
  40bca4:	shr    rdx,cl
  40bca7:	mov    QWORD PTR [rbp-0x60],rdx
  40bcab:	mov    eax,DWORD PTR [rbp-0xdc]
  40bcb1:	add    eax,DWORD PTR [rbp-0x58]
  40bcb4:	mov    DWORD PTR [rbp-0x58],eax
  40bcb7:	mov    eax,DWORD PTR [rbp-0x44]
  40bcba:	mov    ecx,DWORD PTR [rbp-0xdc]
  40bcc0:	sar    eax,cl
  40bcc2:	add    eax,0x1
  40bcc5:	add    eax,0x8
  40bcc8:	mov    DWORD PTR [rbp-0x44],eax
  40bccb:	mov    eax,DWORD PTR [rbp-0xdc]
  40bcd1:	mov    esi,DWORD PTR [rbp-0x88]
  40bcd7:	sub    esi,eax
  40bcd9:	mov    DWORD PTR [rbp-0x88],esi
  40bcdf:	mov    eax,0x1
  40bce4:	mov    ecx,eax
  40bce6:	mov    rdx,QWORD PTR [rbp-0x60]
  40bcea:	mov    eax,DWORD PTR [rbp-0x88]
  40bcf0:	mov    esi,eax
  40bcf2:	mov    QWORD PTR [rbp-0xf8],rcx
  40bcf9:	mov    rcx,rsi
  40bcfc:	shr    rdx,cl
  40bcff:	mov    QWORD PTR [rbp-0x80],rdx
  40bd03:	mov    eax,DWORD PTR [rbp-0x58]
  40bd06:	add    eax,DWORD PTR [rbp-0x88]
  40bd0c:	mov    DWORD PTR [rbp-0x78],eax
  40bd0f:	mov    rdx,QWORD PTR [rbp-0x60]
  40bd13:	mov    eax,DWORD PTR [rbp-0x88]
  40bd19:	sub    eax,0x1
  40bd1c:	mov    eax,eax
  40bd1e:	mov    ecx,eax
  40bd20:	mov    rsi,QWORD PTR [rbp-0xf8]
  40bd27:	shl    rsi,cl
  40bd2a:	and    rdx,rsi
  40bd2d:	shl    rdx,0x3
  40bd31:	mov    eax,edx
  40bd33:	mov    DWORD PTR [rbp-0x8c],eax
  40bd39:	mov    eax,DWORD PTR [rbp-0x88]
  40bd3f:	sub    eax,0x1
  40bd42:	mov    eax,eax
  40bd44:	mov    ecx,eax
  40bd46:	mov    rdx,QWORD PTR [rbp-0xf8]
  40bd4d:	shl    rdx,cl
  40bd50:	shl    rdx,0x3
  40bd54:	mov    eax,edx
  40bd56:	mov    DWORD PTR [rbp-0x90],eax
  40bd5c:	mov    eax,DWORD PTR [rbp-0x88]
  40bd62:	mov    edi,DWORD PTR [rbp-0x90]
  40bd68:	add    edi,DWORD PTR [rbp-0x44]
  40bd6b:	cmp    eax,edi
  40bd6d:	jl     40bdb1 <grisu3_diy_fp_encode_double@@Base+0x3f1>
  40bd73:	mov    rax,QWORD PTR [rbp-0x80]
  40bd77:	add    rax,0x1
  40bd7b:	mov    QWORD PTR [rbp-0x80],rax
  40bd7f:	movabs rax,0x20000000000000
  40bd89:	and    rax,QWORD PTR [rbp-0x80]
  40bd8d:	cmp    rax,0x0
  40bd91:	je     40bdac <grisu3_diy_fp_encode_double@@Base+0x3ec>
  40bd97:	mov    rax,QWORD PTR [rbp-0x80]
  40bd9b:	shr    rax,0x1
  40bd9f:	mov    QWORD PTR [rbp-0x80],rax
  40bda3:	mov    ecx,DWORD PTR [rbp-0x78]
  40bda6:	add    ecx,0x1
  40bda9:	mov    DWORD PTR [rbp-0x78],ecx
  40bdac:	jmp    40bdb1 <grisu3_diy_fp_encode_double@@Base+0x3f1>
  40bdb1:	mov    rdi,QWORD PTR [rbp-0x80]
  40bdb5:	mov    esi,DWORD PTR [rbp-0x78]
  40bdb8:	call   40c120 <grisu3_diy_fp_encode_double@@Base+0x760>
  40bdbd:	mov    rdi,QWORD PTR [rbp-0x20]
  40bdc1:	vmovsd QWORD PTR [rdi],xmm0
  40bdc5:	mov    esi,DWORD PTR [rbp-0x90]
  40bdcb:	sub    esi,DWORD PTR [rbp-0x44]
  40bdce:	cmp    esi,DWORD PTR [rbp-0x8c]
  40bdd4:	mov    al,0x1
  40bdd6:	mov    BYTE PTR [rbp-0xf9],al
  40bddc:	jge    40bdfc <grisu3_diy_fp_encode_double@@Base+0x43c>
  40bde2:	mov    eax,DWORD PTR [rbp-0x8c]
  40bde8:	mov    ecx,DWORD PTR [rbp-0x90]
  40bdee:	add    ecx,DWORD PTR [rbp-0x44]
  40bdf1:	cmp    eax,ecx
  40bdf3:	setge  dl
  40bdf6:	mov    BYTE PTR [rbp-0xf9],dl
  40bdfc:	mov    al,BYTE PTR [rbp-0xf9]
  40be02:	and    al,0x1
  40be04:	movzx  eax,al
  40be07:	add    rsp,0x100
  40be0e:	pop    rbp
  40be0f:	ret    
  40be10:	push   rbp
  40be11:	mov    rbp,rsp
  40be14:	sub    rsp,0x20
  40be18:	mov    QWORD PTR [rbp-0x20],rdi
  40be1c:	mov    DWORD PTR [rbp-0x18],esi
  40be1f:	cmp    QWORD PTR [rbp-0x20],0x0
  40be24:	je     40be2f <grisu3_diy_fp_encode_double@@Base+0x46f>
  40be2a:	jmp    40be4e <grisu3_diy_fp_encode_double@@Base+0x48e>
  40be2f:	lea    rdi,[rip+0x8e25]        # 414c5b <flatcc_builder_padding_base@@Base+0x28eb>
  40be36:	lea    rsi,[rip+0x8e27]        # 414c64 <flatcc_builder_padding_base@@Base+0x28f4>
  40be3d:	mov    edx,0x104
  40be42:	lea    rcx,[rip+0x8e8b]        # 414cd4 <flatcc_builder_padding_base@@Base+0x2964>
  40be49:	call   403060 <__assert_fail@plt>
  40be4e:	jmp    40be53 <grisu3_diy_fp_encode_double@@Base+0x493>
  40be53:	movabs rax,0xffc0000000000000
  40be5d:	and    rax,QWORD PTR [rbp-0x20]
  40be61:	cmp    rax,0x0
  40be65:	setne  cl
  40be68:	xor    cl,0xff
  40be6b:	test   cl,0x1
  40be6e:	jne    40be79 <grisu3_diy_fp_encode_double@@Base+0x4b9>
  40be74:	jmp    40be93 <grisu3_diy_fp_encode_double@@Base+0x4d3>
  40be79:	mov    rax,QWORD PTR [rbp-0x20]
  40be7d:	shl    rax,0xa
  40be81:	mov    QWORD PTR [rbp-0x20],rax
  40be85:	mov    ecx,DWORD PTR [rbp-0x18]
  40be88:	sub    ecx,0xa
  40be8b:	mov    DWORD PTR [rbp-0x18],ecx
  40be8e:	jmp    40be53 <grisu3_diy_fp_encode_double@@Base+0x493>
  40be93:	jmp    40be98 <grisu3_diy_fp_encode_double@@Base+0x4d8>
  40be98:	movabs rax,0x8000000000000000
  40bea2:	and    rax,QWORD PTR [rbp-0x20]
  40bea6:	cmp    rax,0x0
  40beaa:	setne  cl
  40bead:	xor    cl,0xff
  40beb0:	test   cl,0x1
  40beb3:	jne    40bebe <grisu3_diy_fp_encode_double@@Base+0x4fe>
  40beb9:	jmp    40bed8 <grisu3_diy_fp_encode_double@@Base+0x518>
  40bebe:	mov    rax,QWORD PTR [rbp-0x20]
  40bec2:	shl    rax,0x1
  40bec6:	mov    QWORD PTR [rbp-0x20],rax
  40beca:	mov    ecx,DWORD PTR [rbp-0x18]
  40becd:	add    ecx,0xffffffff
  40bed0:	mov    DWORD PTR [rbp-0x18],ecx
  40bed3:	jmp    40be98 <grisu3_diy_fp_encode_double@@Base+0x4d8>
  40bed8:	vmovdqu xmm0,XMMWORD PTR [rbp-0x20]
  40bedd:	vmovdqa XMMWORD PTR [rbp-0x10],xmm0
  40bee2:	mov    rax,QWORD PTR [rbp-0x10]
  40bee6:	mov    edx,DWORD PTR [rbp-0x8]
  40bee9:	add    rsp,0x20
  40beed:	pop    rbp
  40beee:	ret    
  40beef:	nop
  40bef0:	push   rbp
  40bef1:	mov    rbp,rsp
  40bef4:	sub    rsp,0x20
  40bef8:	mov    DWORD PTR [rbp-0x4],edi
  40befb:	mov    QWORD PTR [rbp-0x10],rsi
  40beff:	mov    DWORD PTR [rbp-0x14],0x15c
  40bf06:	mov    DWORD PTR [rbp-0x18],0x8
  40bf0d:	mov    edi,0xfffffea4
  40bf12:	cmp    edi,DWORD PTR [rbp-0x4]
  40bf15:	jg     40bf20 <grisu3_diy_fp_encode_double@@Base+0x560>
  40bf1b:	jmp    40bf3f <grisu3_diy_fp_encode_double@@Base+0x57f>
  40bf20:	lea    rdi,[rip+0x8de6]        # 414d0d <flatcc_builder_padding_base@@Base+0x299d>
  40bf27:	lea    rsi,[rip+0x87b6]        # 4146e4 <flatcc_builder_padding_base@@Base+0x2374>
  40bf2e:	mov    edx,0x50
  40bf33:	lea    rcx,[rip+0x8df2]        # 414d2c <flatcc_builder_padding_base@@Base+0x29bc>
  40bf3a:	call   403060 <__assert_fail@plt>
  40bf3f:	cmp    DWORD PTR [rbp-0x4],0x15c
  40bf46:	jge    40bf51 <grisu3_diy_fp_encode_double@@Base+0x591>
  40bf4c:	jmp    40bf70 <grisu3_diy_fp_encode_double@@Base+0x5b0>
  40bf51:	lea    rdi,[rip+0x8e0d]        # 414d65 <flatcc_builder_padding_base@@Base+0x29f5>
  40bf58:	lea    rsi,[rip+0x8785]        # 4146e4 <flatcc_builder_padding_base@@Base+0x2374>
  40bf5f:	mov    edx,0x51
  40bf64:	lea    rcx,[rip+0x8dc1]        # 414d2c <flatcc_builder_padding_base@@Base+0x29bc>
  40bf6b:	call   403060 <__assert_fail@plt>
  40bf70:	mov    eax,DWORD PTR [rbp-0x4]
  40bf73:	add    eax,0x15c
  40bf78:	cdq    
  40bf79:	mov    ecx,0x8
  40bf7e:	idiv   ecx
  40bf80:	mov    DWORD PTR [rbp-0x1c],eax
  40bf83:	movsxd rsi,DWORD PTR [rbp-0x1c]
  40bf87:	shl    rsi,0x4
  40bf8b:	lea    rdi,[rip+0x7cbe]        # 413c50 <flatcc_builder_padding_base@@Base+0x18e0>
  40bf92:	mov    r8,rdi
  40bf95:	add    r8,rsi
  40bf98:	movsx  eax,WORD PTR [r8+0xa]
  40bf9d:	mov    DWORD PTR [rbp-0x20],eax
  40bfa0:	movsxd rsi,DWORD PTR [rbp-0x1c]
  40bfa4:	shl    rsi,0x4
  40bfa8:	mov    r8,rdi
  40bfab:	add    r8,rsi
  40bfae:	mov    rsi,QWORD PTR [r8]
  40bfb1:	mov    r8,QWORD PTR [rbp-0x10]
  40bfb5:	mov    QWORD PTR [r8],rsi
  40bfb8:	movsxd rsi,DWORD PTR [rbp-0x1c]
  40bfbc:	shl    rsi,0x4
  40bfc0:	add    rdi,rsi
  40bfc3:	movsx  eax,WORD PTR [rdi+0x8]
  40bfc7:	mov    rsi,QWORD PTR [rbp-0x10]
  40bfcb:	mov    DWORD PTR [rsi+0x8],eax
  40bfce:	mov    eax,DWORD PTR [rbp-0x20]
  40bfd1:	cmp    eax,DWORD PTR [rbp-0x4]
  40bfd4:	jg     40bfdf <grisu3_diy_fp_encode_double@@Base+0x61f>
  40bfda:	jmp    40bffe <grisu3_diy_fp_encode_double@@Base+0x63e>
  40bfdf:	lea    rdi,[rip+0x8daa]        # 414d90 <flatcc_builder_padding_base@@Base+0x2a20>
  40bfe6:	lea    rsi,[rip+0x86f7]        # 4146e4 <flatcc_builder_padding_base@@Base+0x2374>
  40bfed:	mov    edx,0x58
  40bff2:	lea    rcx,[rip+0x8d33]        # 414d2c <flatcc_builder_padding_base@@Base+0x29bc>
  40bff9:	call   403060 <__assert_fail@plt>
  40bffe:	mov    eax,DWORD PTR [rbp-0x4]
  40c001:	mov    ecx,DWORD PTR [rbp-0x20]
  40c004:	add    ecx,0x8
  40c007:	cmp    eax,ecx
  40c009:	jge    40c014 <grisu3_diy_fp_encode_double@@Base+0x654>
  40c00f:	jmp    40c033 <grisu3_diy_fp_encode_double@@Base+0x673>
  40c014:	lea    rdi,[rip+0x8d84]        # 414d9f <flatcc_builder_padding_base@@Base+0x2a2f>
  40c01b:	lea    rsi,[rip+0x86c2]        # 4146e4 <flatcc_builder_padding_base@@Base+0x2374>
  40c022:	mov    edx,0x59
  40c027:	lea    rcx,[rip+0x8cfe]        # 414d2c <flatcc_builder_padding_base@@Base+0x29bc>
  40c02e:	call   403060 <__assert_fail@plt>
  40c033:	mov    eax,DWORD PTR [rbp-0x20]
  40c036:	add    rsp,0x20
  40c03a:	pop    rbp
  40c03b:	ret    
  40c03c:	nop    DWORD PTR [rax+0x0]
  40c040:	push   rbp
  40c041:	mov    rbp,rsp
  40c044:	mov    QWORD PTR [rbp-0x20],rdi
  40c048:	mov    DWORD PTR [rbp-0x18],esi
  40c04b:	mov    QWORD PTR [rbp-0x30],rdx
  40c04f:	mov    DWORD PTR [rbp-0x28],ecx
  40c052:	mov    ecx,DWORD PTR [rbp-0x1c]
  40c055:	mov    edx,ecx
  40c057:	mov    QWORD PTR [rbp-0x38],rdx
  40c05b:	mov    ecx,DWORD PTR [rbp-0x20]
  40c05e:	mov    edx,ecx
  40c060:	mov    QWORD PTR [rbp-0x40],rdx
  40c064:	mov    ecx,DWORD PTR [rbp-0x2c]
  40c067:	mov    edx,ecx
  40c069:	mov    QWORD PTR [rbp-0x48],rdx
  40c06d:	mov    ecx,DWORD PTR [rbp-0x30]
  40c070:	mov    edx,ecx
  40c072:	mov    QWORD PTR [rbp-0x50],rdx
  40c076:	mov    rdx,QWORD PTR [rbp-0x38]
  40c07a:	mov    rdi,QWORD PTR [rbp-0x48]
  40c07e:	imul   rdx,rdi
  40c082:	mov    QWORD PTR [rbp-0x58],rdx
  40c086:	mov    rdx,QWORD PTR [rbp-0x40]
  40c08a:	mov    rdi,QWORD PTR [rbp-0x48]
  40c08e:	imul   rdx,rdi
  40c092:	mov    QWORD PTR [rbp-0x60],rdx
  40c096:	mov    rdx,QWORD PTR [rbp-0x38]
  40c09a:	mov    rdi,QWORD PTR [rbp-0x50]
  40c09e:	imul   rdx,rdi
  40c0a2:	mov    QWORD PTR [rbp-0x68],rdx
  40c0a6:	mov    rdx,QWORD PTR [rbp-0x40]
  40c0aa:	mov    rdi,QWORD PTR [rbp-0x50]
  40c0ae:	imul   rdx,rdi
  40c0b2:	mov    QWORD PTR [rbp-0x70],rdx
  40c0b6:	mov    ecx,DWORD PTR [rbp-0x6c]
  40c0b9:	mov    edx,ecx
  40c0bb:	mov    ecx,DWORD PTR [rbp-0x68]
  40c0be:	mov    edi,ecx
  40c0c0:	add    rdx,rdi
  40c0c3:	mov    ecx,DWORD PTR [rbp-0x60]
  40c0c6:	mov    edi,ecx
  40c0c8:	add    rdx,rdi
  40c0cb:	mov    QWORD PTR [rbp-0x78],rdx
  40c0cf:	mov    rdx,QWORD PTR [rbp-0x78]
  40c0d3:	sub    rdx,0xffffffff80000000
  40c0da:	mov    QWORD PTR [rbp-0x78],rdx
  40c0de:	mov    rdx,QWORD PTR [rbp-0x58]
  40c0e2:	mov    ecx,DWORD PTR [rbp-0x64]
  40c0e5:	mov    edi,ecx
  40c0e7:	add    rdx,rdi
  40c0ea:	mov    ecx,DWORD PTR [rbp-0x5c]
  40c0ed:	mov    edi,ecx
  40c0ef:	add    rdx,rdi
  40c0f2:	mov    ecx,DWORD PTR [rbp-0x74]
  40c0f5:	mov    edi,ecx
  40c0f7:	add    rdx,rdi
  40c0fa:	mov    QWORD PTR [rbp-0x10],rdx
  40c0fe:	mov    ecx,DWORD PTR [rbp-0x18]
  40c101:	mov    esi,DWORD PTR [rbp-0x28]
  40c104:	mov    edx,esi
  40c106:	mov    edi,ecx
  40c108:	lea    ecx,[rdi+rdx*1+0x40]
  40c10c:	mov    DWORD PTR [rbp-0x8],ecx
  40c10f:	mov    rax,QWORD PTR [rbp-0x10]
  40c113:	mov    edx,DWORD PTR [rbp-0x8]
  40c116:	pop    rbp
  40c117:	ret    
  40c118:	nop    DWORD PTR [rax+rax*1+0x0]
  40c120:	push   rbp
  40c121:	mov    rbp,rsp
  40c124:	sub    rsp,0x60
  40c128:	mov    QWORD PTR [rbp-0x18],rdi
  40c12c:	mov    DWORD PTR [rbp-0x10],esi
  40c12f:	movabs rdi,0x10000000000000
  40c139:	mov    QWORD PTR [rbp-0x20],rdi
  40c13d:	movabs rdi,0xfffffffffffff
  40c147:	mov    QWORD PTR [rbp-0x28],rdi
  40c14b:	mov    DWORD PTR [rbp-0x2c],0xfffffbce
  40c152:	mov    DWORD PTR [rbp-0x30],0x433
  40c159:	mov    DWORD PTR [rbp-0x34],0x34
  40c160:	mov    rdi,QWORD PTR [rbp-0x18]
  40c164:	mov    QWORD PTR [rbp-0x48],rdi
  40c168:	mov    rdi,QWORD PTR [rbp-0x10]
  40c16c:	mov    QWORD PTR [rbp-0x40],rdi
  40c170:	movabs rax,0x1fffffffffffff
  40c17a:	cmp    QWORD PTR [rbp-0x48],rax
  40c17e:	jbe    40c19e <grisu3_diy_fp_encode_double@@Base+0x7de>
  40c184:	mov    rax,QWORD PTR [rbp-0x48]
  40c188:	shr    rax,0x1
  40c18c:	mov    QWORD PTR [rbp-0x48],rax
  40c190:	mov    ecx,DWORD PTR [rbp-0x40]
  40c193:	add    ecx,0x1
  40c196:	mov    DWORD PTR [rbp-0x40],ecx
  40c199:	jmp    40c170 <grisu3_diy_fp_encode_double@@Base+0x7b0>
  40c19e:	cmp    DWORD PTR [rbp-0x40],0xfffffbce
  40c1a5:	jge    40c1b9 <grisu3_diy_fp_encode_double@@Base+0x7f9>
  40c1ab:	vxorps xmm0,xmm0,xmm0
  40c1af:	vmovsd QWORD PTR [rbp-0x8],xmm0
  40c1b4:	jmp    40c27b <grisu3_diy_fp_encode_double@@Base+0x8bb>
  40c1b9:	jmp    40c1be <grisu3_diy_fp_encode_double@@Base+0x7fe>
  40c1be:	xor    eax,eax
  40c1c0:	mov    cl,al
  40c1c2:	cmp    DWORD PTR [rbp-0x40],0xfffffbce
  40c1c9:	mov    BYTE PTR [rbp-0x51],cl
  40c1cc:	jle    40c1ea <grisu3_diy_fp_encode_double@@Base+0x82a>
  40c1d2:	movabs rax,0x10000000000000
  40c1dc:	and    rax,QWORD PTR [rbp-0x48]
  40c1e0:	cmp    rax,0x0
  40c1e4:	sete   cl
  40c1e7:	mov    BYTE PTR [rbp-0x51],cl
  40c1ea:	mov    al,BYTE PTR [rbp-0x51]
  40c1ed:	test   al,0x1
  40c1ef:	jne    40c1fa <grisu3_diy_fp_encode_double@@Base+0x83a>
  40c1f5:	jmp    40c214 <grisu3_diy_fp_encode_double@@Base+0x854>
  40c1fa:	mov    rax,QWORD PTR [rbp-0x48]
  40c1fe:	shl    rax,0x1
  40c202:	mov    QWORD PTR [rbp-0x48],rax
  40c206:	mov    ecx,DWORD PTR [rbp-0x40]
  40c209:	add    ecx,0xffffffff
  40c20c:	mov    DWORD PTR [rbp-0x40],ecx
  40c20f:	jmp    40c1be <grisu3_diy_fp_encode_double@@Base+0x7fe>
  40c214:	cmp    DWORD PTR [rbp-0x40],0xfffffbce
  40c21b:	jne    40c246 <grisu3_diy_fp_encode_double@@Base+0x886>
  40c221:	movabs rax,0x10000000000000
  40c22b:	and    rax,QWORD PTR [rbp-0x48]
  40c22f:	cmp    rax,0x0
  40c233:	jne    40c246 <grisu3_diy_fp_encode_double@@Base+0x886>
  40c239:	mov    QWORD PTR [rbp-0x50],0x0
  40c241:	jmp    40c255 <grisu3_diy_fp_encode_double@@Base+0x895>
  40c246:	mov    eax,DWORD PTR [rbp-0x40]
  40c249:	add    eax,0x433
  40c24e:	movsxd rcx,eax
  40c251:	mov    QWORD PTR [rbp-0x50],rcx
  40c255:	movabs rax,0xfffffffffffff
  40c25f:	and    rax,QWORD PTR [rbp-0x48]
  40c263:	mov    rcx,QWORD PTR [rbp-0x50]
  40c267:	shl    rcx,0x34
  40c26b:	or     rax,rcx
  40c26e:	mov    rdi,rax
  40c271:	call   410a20 <flatcc_json_parser_struct_as_root@@Base+0x160>
  40c276:	vmovsd QWORD PTR [rbp-0x8],xmm0
  40c27b:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  40c280:	add    rsp,0x60
  40c284:	pop    rbp
  40c285:	ret    
  40c286:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040c290 <flatcc_json_parser_error_string@@Base>:
  40c290:	push   rbp
  40c291:	mov    rbp,rsp
  40c294:	mov    DWORD PTR [rbp-0xc],edi
  40c297:	mov    edi,DWORD PTR [rbp-0xc]
  40c29a:	mov    eax,edi
  40c29c:	mov    rcx,rax
  40c29f:	sub    rcx,0x22
  40c2a3:	mov    QWORD PTR [rbp-0x18],rax
  40c2a7:	mov    QWORD PTR [rbp-0x20],rcx
  40c2ab:	ja     40c4f5 <flatcc_json_parser_error_string@@Base+0x265>
  40c2b1:	lea    rax,[rip+0x7528]        # 4137e0 <flatcc_builder_padding_base@@Base+0x1470>
  40c2b8:	mov    rcx,QWORD PTR [rbp-0x18]
  40c2bc:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40c2c0:	add    rdx,rax
  40c2c3:	jmp    rdx
  40c2c5:	lea    rax,[rip+0x84cc]        # 414798 <flatcc_builder_padding_base@@Base+0x2428>
  40c2cc:	mov    QWORD PTR [rbp-0x8],rax
  40c2d0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c2d5:	lea    rax,[rip+0x84bf]        # 41479b <flatcc_builder_padding_base@@Base+0x242b>
  40c2dc:	mov    QWORD PTR [rbp-0x8],rax
  40c2e0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c2e5:	lea    rax,[rip+0x84b3]        # 41479f <flatcc_builder_padding_base@@Base+0x242f>
  40c2ec:	mov    QWORD PTR [rbp-0x8],rax
  40c2f0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c2f5:	lea    rax,[rip+0x84b0]        # 4147ac <flatcc_builder_padding_base@@Base+0x243c>
  40c2fc:	mov    QWORD PTR [rbp-0x8],rax
  40c300:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c305:	lea    rax,[rip+0x84af]        # 4147bb <flatcc_builder_padding_base@@Base+0x244b>
  40c30c:	mov    QWORD PTR [rbp-0x8],rax
  40c310:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c315:	lea    rax,[rip+0x84ae]        # 4147ca <flatcc_builder_padding_base@@Base+0x245a>
  40c31c:	mov    QWORD PTR [rbp-0x8],rax
  40c320:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c325:	lea    rax,[rip+0x84b3]        # 4147df <flatcc_builder_padding_base@@Base+0x246f>
  40c32c:	mov    QWORD PTR [rbp-0x8],rax
  40c330:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c335:	lea    rax,[rip+0x84b3]        # 4147ef <flatcc_builder_padding_base@@Base+0x247f>
  40c33c:	mov    QWORD PTR [rbp-0x8],rax
  40c340:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c345:	lea    rax,[rip+0x84ac]        # 4147f8 <flatcc_builder_padding_base@@Base+0x2488>
  40c34c:	mov    QWORD PTR [rbp-0x8],rax
  40c350:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c355:	lea    rax,[rip+0x84a6]        # 414802 <flatcc_builder_padding_base@@Base+0x2492>
  40c35c:	mov    QWORD PTR [rbp-0x8],rax
  40c360:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c365:	lea    rax,[rip+0x84a7]        # 414813 <flatcc_builder_padding_base@@Base+0x24a3>
  40c36c:	mov    QWORD PTR [rbp-0x8],rax
  40c370:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c375:	lea    rax,[rip+0x84a9]        # 414825 <flatcc_builder_padding_base@@Base+0x24b5>
  40c37c:	mov    QWORD PTR [rbp-0x8],rax
  40c380:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c385:	lea    rax,[rip+0x84a8]        # 414834 <flatcc_builder_padding_base@@Base+0x24c4>
  40c38c:	mov    QWORD PTR [rbp-0x8],rax
  40c390:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c395:	lea    rax,[rip+0x84a9]        # 414845 <flatcc_builder_padding_base@@Base+0x24d5>
  40c39c:	mov    QWORD PTR [rbp-0x8],rax
  40c3a0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c3a5:	lea    rax,[rip+0x84a8]        # 414854 <flatcc_builder_padding_base@@Base+0x24e4>
  40c3ac:	mov    QWORD PTR [rbp-0x8],rax
  40c3b0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c3b5:	lea    rax,[rip+0x84b1]        # 41486d <flatcc_builder_padding_base@@Base+0x24fd>
  40c3bc:	mov    QWORD PTR [rbp-0x8],rax
  40c3c0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c3c5:	lea    rax,[rip+0x84b4]        # 414880 <flatcc_builder_padding_base@@Base+0x2510>
  40c3cc:	mov    QWORD PTR [rbp-0x8],rax
  40c3d0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c3d5:	lea    rax,[rip+0x84b4]        # 414890 <flatcc_builder_padding_base@@Base+0x2520>
  40c3dc:	mov    QWORD PTR [rbp-0x8],rax
  40c3e0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c3e5:	lea    rax,[rip+0x84b6]        # 4148a2 <flatcc_builder_padding_base@@Base+0x2532>
  40c3ec:	mov    QWORD PTR [rbp-0x8],rax
  40c3f0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c3f5:	lea    rax,[rip+0x84b5]        # 4148b1 <flatcc_builder_padding_base@@Base+0x2541>
  40c3fc:	mov    QWORD PTR [rbp-0x8],rax
  40c400:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c405:	lea    rax,[rip+0x84b2]        # 4148be <flatcc_builder_padding_base@@Base+0x254e>
  40c40c:	mov    QWORD PTR [rbp-0x8],rax
  40c410:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c415:	lea    rax,[rip+0x84b6]        # 4148d2 <flatcc_builder_padding_base@@Base+0x2562>
  40c41c:	mov    QWORD PTR [rbp-0x8],rax
  40c420:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c425:	lea    rax,[rip+0x84b6]        # 4148e2 <flatcc_builder_padding_base@@Base+0x2572>
  40c42c:	mov    QWORD PTR [rbp-0x8],rax
  40c430:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c435:	lea    rax,[rip+0x84b5]        # 4148f1 <flatcc_builder_padding_base@@Base+0x2581>
  40c43c:	mov    QWORD PTR [rbp-0x8],rax
  40c440:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c445:	lea    rax,[rip+0x84c9]        # 414915 <flatcc_builder_padding_base@@Base+0x25a5>
  40c44c:	mov    QWORD PTR [rbp-0x8],rax
  40c450:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c455:	lea    rax,[rip+0x84cd]        # 414929 <flatcc_builder_padding_base@@Base+0x25b9>
  40c45c:	mov    QWORD PTR [rbp-0x8],rax
  40c460:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c465:	lea    rax,[rip+0x84da]        # 414946 <flatcc_builder_padding_base@@Base+0x25d6>
  40c46c:	mov    QWORD PTR [rbp-0x8],rax
  40c470:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c475:	lea    rax,[rip+0x84e9]        # 414965 <flatcc_builder_padding_base@@Base+0x25f5>
  40c47c:	mov    QWORD PTR [rbp-0x8],rax
  40c480:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c485:	lea    rax,[rip+0x84f4]        # 414980 <flatcc_builder_padding_base@@Base+0x2610>
  40c48c:	mov    QWORD PTR [rbp-0x8],rax
  40c490:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c495:	lea    rax,[rip+0x84fe]        # 41499a <flatcc_builder_padding_base@@Base+0x262a>
  40c49c:	mov    QWORD PTR [rbp-0x8],rax
  40c4a0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c4a5:	lea    rax,[rip+0x8505]        # 4149b1 <flatcc_builder_padding_base@@Base+0x2641>
  40c4ac:	mov    QWORD PTR [rbp-0x8],rax
  40c4b0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c4b5:	lea    rax,[rip+0x8512]        # 4149ce <flatcc_builder_padding_base@@Base+0x265e>
  40c4bc:	mov    QWORD PTR [rbp-0x8],rax
  40c4c0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c4c5:	lea    rax,[rip+0x8519]        # 4149e5 <flatcc_builder_padding_base@@Base+0x2675>
  40c4cc:	mov    QWORD PTR [rbp-0x8],rax
  40c4d0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c4d5:	lea    rax,[rip+0x8523]        # 4149ff <flatcc_builder_padding_base@@Base+0x268f>
  40c4dc:	mov    QWORD PTR [rbp-0x8],rax
  40c4e0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c4e5:	lea    rax,[rip+0x8521]        # 414a0d <flatcc_builder_padding_base@@Base+0x269d>
  40c4ec:	mov    QWORD PTR [rbp-0x8],rax
  40c4f0:	jmp    40c500 <flatcc_json_parser_error_string@@Base+0x270>
  40c4f5:	lea    rax,[rip+0x851f]        # 414a1b <flatcc_builder_padding_base@@Base+0x26ab>
  40c4fc:	mov    QWORD PTR [rbp-0x8],rax
  40c500:	mov    rax,QWORD PTR [rbp-0x8]
  40c504:	pop    rbp
  40c505:	ret    
  40c506:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040c510 <flatcc_json_parser_set_error@@Base>:
  40c510:	push   rbp
  40c511:	mov    rbp,rsp
  40c514:	mov    QWORD PTR [rbp-0x8],rdi
  40c518:	mov    QWORD PTR [rbp-0x10],rsi
  40c51c:	mov    QWORD PTR [rbp-0x18],rdx
  40c520:	mov    DWORD PTR [rbp-0x1c],ecx
  40c523:	mov    rdx,QWORD PTR [rbp-0x8]
  40c527:	cmp    DWORD PTR [rdx+0x20],0x0
  40c52b:	jne    40c563 <flatcc_json_parser_set_error@@Base+0x53>
  40c531:	mov    eax,DWORD PTR [rbp-0x1c]
  40c534:	mov    rcx,QWORD PTR [rbp-0x8]
  40c538:	mov    DWORD PTR [rcx+0x20],eax
  40c53b:	mov    rcx,QWORD PTR [rbp-0x10]
  40c53f:	mov    rdx,QWORD PTR [rbp-0x8]
  40c543:	mov    rdx,QWORD PTR [rdx+0x8]
  40c547:	sub    rcx,rdx
  40c54a:	add    rcx,0x1
  40c54e:	mov    eax,ecx
  40c550:	mov    rcx,QWORD PTR [rbp-0x8]
  40c554:	mov    DWORD PTR [rcx+0x1c],eax
  40c557:	mov    rcx,QWORD PTR [rbp-0x10]
  40c55b:	mov    rdx,QWORD PTR [rbp-0x8]
  40c55f:	mov    QWORD PTR [rdx+0x38],rcx
  40c563:	mov    rax,QWORD PTR [rbp-0x18]
  40c567:	pop    rbp
  40c568:	ret    
  40c569:	nop    DWORD PTR [rax+0x0]

000000000040c570 <flatcc_json_parser_string_part@@Base>:
  40c570:	push   rbp
  40c571:	mov    rbp,rsp
  40c574:	sub    rsp,0x30
  40c578:	mov    QWORD PTR [rbp-0x10],rdi
  40c57c:	mov    QWORD PTR [rbp-0x18],rsi
  40c580:	mov    QWORD PTR [rbp-0x20],rdx
  40c584:	xor    eax,eax
  40c586:	mov    cl,al
  40c588:	mov    rdx,QWORD PTR [rbp-0x18]
  40c58c:	cmp    rdx,QWORD PTR [rbp-0x20]
  40c590:	mov    BYTE PTR [rbp-0x21],cl
  40c593:	je     40c5d7 <flatcc_json_parser_string_part@@Base+0x67>
  40c599:	xor    eax,eax
  40c59b:	mov    cl,al
  40c59d:	mov    rdx,QWORD PTR [rbp-0x18]
  40c5a1:	movsx  eax,BYTE PTR [rdx]
  40c5a4:	cmp    eax,0x22
  40c5a7:	mov    BYTE PTR [rbp-0x21],cl
  40c5aa:	je     40c5d7 <flatcc_json_parser_string_part@@Base+0x67>
  40c5b0:	xor    eax,eax
  40c5b2:	mov    cl,al
  40c5b4:	mov    rdx,QWORD PTR [rbp-0x18]
  40c5b8:	movzx  eax,BYTE PTR [rdx]
  40c5bb:	cmp    eax,0x20
  40c5be:	mov    BYTE PTR [rbp-0x21],cl
  40c5c1:	jl     40c5d7 <flatcc_json_parser_string_part@@Base+0x67>
  40c5c7:	mov    rax,QWORD PTR [rbp-0x18]
  40c5cb:	movsx  ecx,BYTE PTR [rax]
  40c5ce:	cmp    ecx,0x5c
  40c5d1:	setne  dl
  40c5d4:	mov    BYTE PTR [rbp-0x21],dl
  40c5d7:	mov    al,BYTE PTR [rbp-0x21]
  40c5da:	test   al,0x1
  40c5dc:	jne    40c5e7 <flatcc_json_parser_string_part@@Base+0x77>
  40c5e2:	jmp    40c5f8 <flatcc_json_parser_string_part@@Base+0x88>
  40c5e7:	mov    rax,QWORD PTR [rbp-0x18]
  40c5eb:	add    rax,0x1
  40c5ef:	mov    QWORD PTR [rbp-0x18],rax
  40c5f3:	jmp    40c584 <flatcc_json_parser_string_part@@Base+0x14>
  40c5f8:	mov    rax,QWORD PTR [rbp-0x18]
  40c5fc:	cmp    rax,QWORD PTR [rbp-0x20]
  40c600:	jne    40c625 <flatcc_json_parser_string_part@@Base+0xb5>
  40c606:	mov    rdi,QWORD PTR [rbp-0x10]
  40c60a:	mov    rsi,QWORD PTR [rbp-0x18]
  40c60e:	mov    rdx,QWORD PTR [rbp-0x20]
  40c612:	mov    ecx,0x14
  40c617:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40c61c:	mov    QWORD PTR [rbp-0x8],rax
  40c620:	jmp    40c679 <flatcc_json_parser_string_part@@Base+0x109>
  40c625:	mov    rax,QWORD PTR [rbp-0x18]
  40c629:	movsx  ecx,BYTE PTR [rax]
  40c62c:	cmp    ecx,0x22
  40c62f:	jne    40c642 <flatcc_json_parser_string_part@@Base+0xd2>
  40c635:	mov    rax,QWORD PTR [rbp-0x18]
  40c639:	mov    QWORD PTR [rbp-0x8],rax
  40c63d:	jmp    40c679 <flatcc_json_parser_string_part@@Base+0x109>
  40c642:	mov    rax,QWORD PTR [rbp-0x18]
  40c646:	movsx  ecx,BYTE PTR [rax]
  40c649:	cmp    ecx,0x20
  40c64c:	jge    40c671 <flatcc_json_parser_string_part@@Base+0x101>
  40c652:	mov    rdi,QWORD PTR [rbp-0x10]
  40c656:	mov    rsi,QWORD PTR [rbp-0x18]
  40c65a:	mov    rdx,QWORD PTR [rbp-0x20]
  40c65e:	mov    ecx,0x11
  40c663:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40c668:	mov    QWORD PTR [rbp-0x8],rax
  40c66c:	jmp    40c679 <flatcc_json_parser_string_part@@Base+0x109>
  40c671:	mov    rax,QWORD PTR [rbp-0x18]
  40c675:	mov    QWORD PTR [rbp-0x8],rax
  40c679:	mov    rax,QWORD PTR [rbp-0x8]
  40c67d:	add    rsp,0x30
  40c681:	pop    rbp
  40c682:	ret    
  40c683:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c68d:	nop    DWORD PTR [rax]

000000000040c690 <flatcc_json_parser_space_ext@@Base>:
  40c690:	push   rbp
  40c691:	mov    rbp,rsp
  40c694:	sub    rsp,0x40
  40c698:	mov    QWORD PTR [rbp-0x10],rdi
  40c69c:	mov    QWORD PTR [rbp-0x18],rsi
  40c6a0:	mov    QWORD PTR [rbp-0x20],rdx
  40c6a4:	jmp    40c6a9 <flatcc_json_parser_space_ext@@Base+0x19>
  40c6a9:	mov    rax,QWORD PTR [rbp-0x20]
  40c6ad:	mov    rcx,QWORD PTR [rbp-0x18]
  40c6b1:	sub    rax,rcx
  40c6b4:	cmp    rax,0x10
  40c6b8:	jl     40c738 <flatcc_json_parser_space_ext@@Base+0xa8>
  40c6be:	mov    rax,QWORD PTR [rbp-0x18]
  40c6c2:	movsx  ecx,BYTE PTR [rax]
  40c6c5:	cmp    ecx,0x20
  40c6c8:	jle    40c6db <flatcc_json_parser_space_ext@@Base+0x4b>
  40c6ce:	mov    rax,QWORD PTR [rbp-0x18]
  40c6d2:	mov    QWORD PTR [rbp-0x8],rax
  40c6d6:	jmp    40c893 <flatcc_json_parser_space_ext@@Base+0x203>
  40c6db:	mov    rax,QWORD PTR [rbp-0x18]
  40c6df:	movzx  ecx,WORD PTR [rax]
  40c6e2:	cmp    ecx,0x2020
  40c6e8:	jne    40c6fa <flatcc_json_parser_space_ext@@Base+0x6a>
  40c6ee:	mov    rax,QWORD PTR [rbp-0x18]
  40c6f2:	add    rax,0x2
  40c6f6:	mov    QWORD PTR [rbp-0x18],rax
  40c6fa:	mov    rax,QWORD PTR [rbp-0x18]
  40c6fe:	movsx  ecx,BYTE PTR [rax]
  40c701:	cmp    ecx,0x20
  40c704:	jne    40c716 <flatcc_json_parser_space_ext@@Base+0x86>
  40c70a:	mov    rax,QWORD PTR [rbp-0x18]
  40c70e:	add    rax,0x1
  40c712:	mov    QWORD PTR [rbp-0x18],rax
  40c716:	mov    rax,QWORD PTR [rbp-0x18]
  40c71a:	movsx  ecx,BYTE PTR [rax]
  40c71d:	cmp    ecx,0x20
  40c720:	jle    40c733 <flatcc_json_parser_space_ext@@Base+0xa3>
  40c726:	mov    rax,QWORD PTR [rbp-0x18]
  40c72a:	mov    QWORD PTR [rbp-0x8],rax
  40c72e:	jmp    40c893 <flatcc_json_parser_space_ext@@Base+0x203>
  40c733:	jmp    40c738 <flatcc_json_parser_space_ext@@Base+0xa8>
  40c738:	jmp    40c73d <flatcc_json_parser_space_ext@@Base+0xad>
  40c73d:	xor    eax,eax
  40c73f:	mov    cl,al
  40c741:	mov    rdx,QWORD PTR [rbp-0x18]
  40c745:	cmp    rdx,QWORD PTR [rbp-0x20]
  40c749:	mov    BYTE PTR [rbp-0x21],cl
  40c74c:	je     40c762 <flatcc_json_parser_space_ext@@Base+0xd2>
  40c752:	mov    rax,QWORD PTR [rbp-0x18]
  40c756:	movsx  ecx,BYTE PTR [rax]
  40c759:	cmp    ecx,0x20
  40c75c:	sete   dl
  40c75f:	mov    BYTE PTR [rbp-0x21],dl
  40c762:	mov    al,BYTE PTR [rbp-0x21]
  40c765:	test   al,0x1
  40c767:	jne    40c772 <flatcc_json_parser_space_ext@@Base+0xe2>
  40c76d:	jmp    40c783 <flatcc_json_parser_space_ext@@Base+0xf3>
  40c772:	mov    rax,QWORD PTR [rbp-0x18]
  40c776:	add    rax,0x1
  40c77a:	mov    QWORD PTR [rbp-0x18],rax
  40c77e:	jmp    40c73d <flatcc_json_parser_space_ext@@Base+0xad>
  40c783:	jmp    40c788 <flatcc_json_parser_space_ext@@Base+0xf8>
  40c788:	xor    eax,eax
  40c78a:	mov    cl,al
  40c78c:	mov    rdx,QWORD PTR [rbp-0x18]
  40c790:	cmp    rdx,QWORD PTR [rbp-0x20]
  40c794:	mov    BYTE PTR [rbp-0x22],cl
  40c797:	je     40c7ad <flatcc_json_parser_space_ext@@Base+0x11d>
  40c79d:	mov    rax,QWORD PTR [rbp-0x18]
  40c7a1:	movsx  ecx,BYTE PTR [rax]
  40c7a4:	cmp    ecx,0x20
  40c7a7:	setle  dl
  40c7aa:	mov    BYTE PTR [rbp-0x22],dl
  40c7ad:	mov    al,BYTE PTR [rbp-0x22]
  40c7b0:	test   al,0x1
  40c7b2:	jne    40c7bd <flatcc_json_parser_space_ext@@Base+0x12d>
  40c7b8:	jmp    40c88b <flatcc_json_parser_space_ext@@Base+0x1fb>
  40c7bd:	mov    rax,QWORD PTR [rbp-0x18]
  40c7c1:	movsx  ecx,BYTE PTR [rax]
  40c7c4:	add    ecx,0xfffffff7
  40c7c7:	mov    eax,ecx
  40c7c9:	sub    ecx,0x17
  40c7cc:	mov    QWORD PTR [rbp-0x30],rax
  40c7d0:	mov    DWORD PTR [rbp-0x34],ecx
  40c7d3:	ja     40c86c <flatcc_json_parser_space_ext@@Base+0x1dc>
  40c7d9:	lea    rax,[rip+0x708c]        # 41386c <flatcc_builder_padding_base@@Base+0x14fc>
  40c7e0:	mov    rcx,QWORD PTR [rbp-0x30]
  40c7e4:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40c7e8:	add    rdx,rax
  40c7eb:	jmp    rdx
  40c7ed:	xor    eax,eax
  40c7ef:	mov    cl,al
  40c7f1:	mov    rdx,QWORD PTR [rbp-0x20]
  40c7f5:	mov    rsi,QWORD PTR [rbp-0x18]
  40c7f9:	sub    rdx,rsi
  40c7fc:	cmp    rdx,0x1
  40c800:	mov    BYTE PTR [rbp-0x35],cl
  40c803:	jle    40c81a <flatcc_json_parser_space_ext@@Base+0x18a>
  40c809:	mov    rax,QWORD PTR [rbp-0x18]
  40c80d:	movsx  ecx,BYTE PTR [rax+0x1]
  40c811:	cmp    ecx,0xa
  40c814:	sete   dl
  40c817:	mov    BYTE PTR [rbp-0x35],dl
  40c81a:	mov    al,BYTE PTR [rbp-0x35]
  40c81d:	and    al,0x1
  40c81f:	movzx  ecx,al
  40c822:	mov    rdx,QWORD PTR [rbp-0x18]
  40c826:	movsxd rsi,ecx
  40c829:	add    rdx,rsi
  40c82c:	mov    QWORD PTR [rbp-0x18],rdx
  40c830:	mov    rax,QWORD PTR [rbp-0x10]
  40c834:	mov    ecx,DWORD PTR [rax+0x18]
  40c837:	add    ecx,0x1
  40c83a:	mov    DWORD PTR [rax+0x18],ecx
  40c83d:	mov    rax,QWORD PTR [rbp-0x18]
  40c841:	add    rax,0x1
  40c845:	mov    QWORD PTR [rbp-0x18],rax
  40c849:	mov    rdx,QWORD PTR [rbp-0x10]
  40c84d:	mov    QWORD PTR [rdx+0x8],rax
  40c851:	jmp    40c788 <flatcc_json_parser_space_ext@@Base+0xf8>
  40c856:	mov    rax,QWORD PTR [rbp-0x18]
  40c85a:	add    rax,0x1
  40c85e:	mov    QWORD PTR [rbp-0x18],rax
  40c862:	jmp    40c788 <flatcc_json_parser_space_ext@@Base+0xf8>
  40c867:	jmp    40c6a4 <flatcc_json_parser_space_ext@@Base+0x14>
  40c86c:	mov    rdi,QWORD PTR [rbp-0x10]
  40c870:	mov    rsi,QWORD PTR [rbp-0x18]
  40c874:	mov    rdx,QWORD PTR [rbp-0x20]
  40c878:	mov    ecx,0x5
  40c87d:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40c882:	mov    QWORD PTR [rbp-0x8],rax
  40c886:	jmp    40c893 <flatcc_json_parser_space_ext@@Base+0x203>
  40c88b:	mov    rax,QWORD PTR [rbp-0x18]
  40c88f:	mov    QWORD PTR [rbp-0x8],rax
  40c893:	mov    rax,QWORD PTR [rbp-0x8]
  40c897:	add    rsp,0x40
  40c89b:	pop    rbp
  40c89c:	ret    
  40c89d:	nop    DWORD PTR [rax]

000000000040c8a0 <flatcc_json_parser_string_escape@@Base>:
  40c8a0:	push   rbp
  40c8a1:	mov    rbp,rsp
  40c8a4:	sub    rsp,0x40
  40c8a8:	mov    QWORD PTR [rbp-0x10],rdi
  40c8ac:	mov    QWORD PTR [rbp-0x18],rsi
  40c8b0:	mov    QWORD PTR [rbp-0x20],rdx
  40c8b4:	mov    QWORD PTR [rbp-0x28],rcx
  40c8b8:	mov    rcx,QWORD PTR [rbp-0x20]
  40c8bc:	mov    rdx,QWORD PTR [rbp-0x18]
  40c8c0:	sub    rcx,rdx
  40c8c3:	cmp    rcx,0x2
  40c8c7:	jl     40c8dd <flatcc_json_parser_string_escape@@Base+0x3d>
  40c8cd:	mov    rax,QWORD PTR [rbp-0x18]
  40c8d1:	movsx  ecx,BYTE PTR [rax]
  40c8d4:	cmp    ecx,0x5c
  40c8d7:	je     40c903 <flatcc_json_parser_string_escape@@Base+0x63>
  40c8dd:	mov    rax,QWORD PTR [rbp-0x28]
  40c8e1:	mov    BYTE PTR [rax],0x0
  40c8e4:	mov    rdi,QWORD PTR [rbp-0x10]
  40c8e8:	mov    rsi,QWORD PTR [rbp-0x18]
  40c8ec:	mov    rdx,QWORD PTR [rbp-0x20]
  40c8f0:	mov    ecx,0x12
  40c8f5:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40c8fa:	mov    QWORD PTR [rbp-0x8],rax
  40c8fe:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40c903:	mov    rax,QWORD PTR [rbp-0x18]
  40c907:	movsx  ecx,BYTE PTR [rax+0x1]
  40c90b:	add    ecx,0xffffffde
  40c90e:	mov    eax,ecx
  40c910:	sub    ecx,0x56
  40c913:	mov    QWORD PTR [rbp-0x38],rax
  40c917:	mov    DWORD PTR [rbp-0x3c],ecx
  40c91a:	ja     40d003 <flatcc_json_parser_string_escape@@Base+0x763>
  40c920:	lea    rax,[rip+0x6fa5]        # 4138cc <flatcc_builder_padding_base@@Base+0x155c>
  40c927:	mov    rcx,QWORD PTR [rbp-0x38]
  40c92b:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40c92f:	add    rdx,rax
  40c932:	jmp    rdx
  40c934:	mov    BYTE PTR [rbp-0x2a],0x0
  40c938:	mov    rax,QWORD PTR [rbp-0x28]
  40c93c:	mov    BYTE PTR [rax],0x1
  40c93f:	mov    rax,QWORD PTR [rbp-0x20]
  40c943:	mov    rcx,QWORD PTR [rbp-0x18]
  40c947:	sub    rax,rcx
  40c94a:	cmp    rax,0x4
  40c94e:	jge    40c97a <flatcc_json_parser_string_escape@@Base+0xda>
  40c954:	mov    rax,QWORD PTR [rbp-0x28]
  40c958:	mov    BYTE PTR [rax],0x0
  40c95b:	mov    rdi,QWORD PTR [rbp-0x10]
  40c95f:	mov    rsi,QWORD PTR [rbp-0x18]
  40c963:	mov    rdx,QWORD PTR [rbp-0x20]
  40c967:	mov    ecx,0x12
  40c96c:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40c971:	mov    QWORD PTR [rbp-0x8],rax
  40c975:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40c97a:	mov    rax,QWORD PTR [rbp-0x18]
  40c97e:	mov    cl,BYTE PTR [rax+0x2]
  40c981:	mov    BYTE PTR [rbp-0x29],cl
  40c984:	movsx  edx,BYTE PTR [rbp-0x29]
  40c988:	cmp    edx,0x30
  40c98b:	jl     40c9b8 <flatcc_json_parser_string_escape@@Base+0x118>
  40c991:	movsx  eax,BYTE PTR [rbp-0x29]
  40c995:	cmp    eax,0x39
  40c998:	jg     40c9b8 <flatcc_json_parser_string_escape@@Base+0x118>
  40c99e:	movsx  eax,BYTE PTR [rbp-0x29]
  40c9a2:	sub    eax,0x30
  40c9a5:	shl    eax,0x4
  40c9a8:	movsx  ecx,BYTE PTR [rbp-0x2a]
  40c9ac:	or     ecx,eax
  40c9ae:	mov    dl,cl
  40c9b0:	mov    BYTE PTR [rbp-0x2a],dl
  40c9b3:	jmp    40ca26 <flatcc_json_parser_string_escape@@Base+0x186>
  40c9b8:	movsx  eax,BYTE PTR [rbp-0x29]
  40c9bc:	or     eax,0x20
  40c9bf:	mov    cl,al
  40c9c1:	mov    BYTE PTR [rbp-0x29],cl
  40c9c4:	movsx  eax,BYTE PTR [rbp-0x29]
  40c9c8:	cmp    eax,0x61
  40c9cb:	jl     40c9fb <flatcc_json_parser_string_escape@@Base+0x15b>
  40c9d1:	movsx  eax,BYTE PTR [rbp-0x29]
  40c9d5:	cmp    eax,0x66
  40c9d8:	jg     40c9fb <flatcc_json_parser_string_escape@@Base+0x15b>
  40c9de:	movsx  eax,BYTE PTR [rbp-0x29]
  40c9e2:	sub    eax,0x61
  40c9e5:	add    eax,0xa
  40c9e8:	shl    eax,0x4
  40c9eb:	movsx  ecx,BYTE PTR [rbp-0x2a]
  40c9ef:	or     ecx,eax
  40c9f1:	mov    dl,cl
  40c9f3:	mov    BYTE PTR [rbp-0x2a],dl
  40c9f6:	jmp    40ca21 <flatcc_json_parser_string_escape@@Base+0x181>
  40c9fb:	mov    rax,QWORD PTR [rbp-0x28]
  40c9ff:	mov    BYTE PTR [rax],0x0
  40ca02:	mov    rdi,QWORD PTR [rbp-0x10]
  40ca06:	mov    rsi,QWORD PTR [rbp-0x18]
  40ca0a:	mov    rdx,QWORD PTR [rbp-0x20]
  40ca0e:	mov    ecx,0x12
  40ca13:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40ca18:	mov    QWORD PTR [rbp-0x8],rax
  40ca1c:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40ca21:	jmp    40ca26 <flatcc_json_parser_string_escape@@Base+0x186>
  40ca26:	mov    rax,QWORD PTR [rbp-0x18]
  40ca2a:	mov    cl,BYTE PTR [rax+0x3]
  40ca2d:	mov    BYTE PTR [rbp-0x29],cl
  40ca30:	movsx  edx,BYTE PTR [rbp-0x29]
  40ca34:	cmp    edx,0x30
  40ca37:	jl     40ca61 <flatcc_json_parser_string_escape@@Base+0x1c1>
  40ca3d:	movsx  eax,BYTE PTR [rbp-0x29]
  40ca41:	cmp    eax,0x39
  40ca44:	jg     40ca61 <flatcc_json_parser_string_escape@@Base+0x1c1>
  40ca4a:	movsx  eax,BYTE PTR [rbp-0x29]
  40ca4e:	sub    eax,0x30
  40ca51:	movsx  ecx,BYTE PTR [rbp-0x2a]
  40ca55:	or     ecx,eax
  40ca57:	mov    dl,cl
  40ca59:	mov    BYTE PTR [rbp-0x2a],dl
  40ca5c:	jmp    40cacc <flatcc_json_parser_string_escape@@Base+0x22c>
  40ca61:	movsx  eax,BYTE PTR [rbp-0x29]
  40ca65:	or     eax,0x20
  40ca68:	mov    cl,al
  40ca6a:	mov    BYTE PTR [rbp-0x29],cl
  40ca6d:	movsx  eax,BYTE PTR [rbp-0x29]
  40ca71:	cmp    eax,0x61
  40ca74:	jl     40caa1 <flatcc_json_parser_string_escape@@Base+0x201>
  40ca7a:	movsx  eax,BYTE PTR [rbp-0x29]
  40ca7e:	cmp    eax,0x66
  40ca81:	jg     40caa1 <flatcc_json_parser_string_escape@@Base+0x201>
  40ca87:	movsx  eax,BYTE PTR [rbp-0x29]
  40ca8b:	sub    eax,0x61
  40ca8e:	add    eax,0xa
  40ca91:	movsx  ecx,BYTE PTR [rbp-0x2a]
  40ca95:	or     ecx,eax
  40ca97:	mov    dl,cl
  40ca99:	mov    BYTE PTR [rbp-0x2a],dl
  40ca9c:	jmp    40cac7 <flatcc_json_parser_string_escape@@Base+0x227>
  40caa1:	mov    rax,QWORD PTR [rbp-0x28]
  40caa5:	mov    BYTE PTR [rax],0x0
  40caa8:	mov    rdi,QWORD PTR [rbp-0x10]
  40caac:	mov    rsi,QWORD PTR [rbp-0x18]
  40cab0:	mov    rdx,QWORD PTR [rbp-0x20]
  40cab4:	mov    ecx,0x12
  40cab9:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40cabe:	mov    QWORD PTR [rbp-0x8],rax
  40cac2:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cac7:	jmp    40cacc <flatcc_json_parser_string_escape@@Base+0x22c>
  40cacc:	mov    al,BYTE PTR [rbp-0x2a]
  40cacf:	mov    rcx,QWORD PTR [rbp-0x28]
  40cad3:	mov    BYTE PTR [rcx+0x1],al
  40cad6:	mov    rcx,QWORD PTR [rbp-0x18]
  40cada:	add    rcx,0x4
  40cade:	mov    QWORD PTR [rbp-0x8],rcx
  40cae2:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cae7:	mov    rax,QWORD PTR [rbp-0x20]
  40caeb:	mov    rcx,QWORD PTR [rbp-0x18]
  40caef:	sub    rax,rcx
  40caf2:	cmp    rax,0x6
  40caf6:	jge    40cb22 <flatcc_json_parser_string_escape@@Base+0x282>
  40cafc:	mov    rax,QWORD PTR [rbp-0x28]
  40cb00:	mov    BYTE PTR [rax],0x0
  40cb03:	mov    rdi,QWORD PTR [rbp-0x10]
  40cb07:	mov    rsi,QWORD PTR [rbp-0x18]
  40cb0b:	mov    rdx,QWORD PTR [rbp-0x20]
  40cb0f:	mov    ecx,0x12
  40cb14:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40cb19:	mov    QWORD PTR [rbp-0x8],rax
  40cb1d:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cb22:	mov    WORD PTR [rbp-0x2c],0x0
  40cb28:	mov    rax,QWORD PTR [rbp-0x18]
  40cb2c:	mov    cl,BYTE PTR [rax+0x2]
  40cb2f:	mov    BYTE PTR [rbp-0x29],cl
  40cb32:	movsx  edx,BYTE PTR [rbp-0x29]
  40cb36:	cmp    edx,0x30
  40cb39:	jl     40cb6d <flatcc_json_parser_string_escape@@Base+0x2cd>
  40cb3f:	movsx  eax,BYTE PTR [rbp-0x29]
  40cb43:	cmp    eax,0x39
  40cb46:	jg     40cb6d <flatcc_json_parser_string_escape@@Base+0x2cd>
  40cb4c:	movsx  eax,BYTE PTR [rbp-0x29]
  40cb50:	sub    eax,0x30
  40cb53:	mov    cx,ax
  40cb56:	mov    WORD PTR [rbp-0x2e],cx
  40cb5a:	movzx  eax,WORD PTR [rbp-0x2e]
  40cb5e:	shl    eax,0xc
  40cb61:	mov    cx,ax
  40cb64:	mov    WORD PTR [rbp-0x2c],cx
  40cb68:	jmp    40cbe8 <flatcc_json_parser_string_escape@@Base+0x348>
  40cb6d:	movsx  eax,BYTE PTR [rbp-0x29]
  40cb71:	or     eax,0x20
  40cb74:	mov    cl,al
  40cb76:	mov    BYTE PTR [rbp-0x29],cl
  40cb79:	movsx  eax,BYTE PTR [rbp-0x29]
  40cb7d:	cmp    eax,0x61
  40cb80:	jl     40cbbd <flatcc_json_parser_string_escape@@Base+0x31d>
  40cb86:	movsx  eax,BYTE PTR [rbp-0x29]
  40cb8a:	cmp    eax,0x66
  40cb8d:	jg     40cbbd <flatcc_json_parser_string_escape@@Base+0x31d>
  40cb93:	movsx  eax,BYTE PTR [rbp-0x29]
  40cb97:	sub    eax,0x61
  40cb9a:	add    eax,0xa
  40cb9d:	mov    cx,ax
  40cba0:	mov    WORD PTR [rbp-0x2e],cx
  40cba4:	movzx  eax,WORD PTR [rbp-0x2e]
  40cba8:	shl    eax,0xc
  40cbab:	movzx  edx,WORD PTR [rbp-0x2c]
  40cbaf:	or     edx,eax
  40cbb1:	mov    cx,dx
  40cbb4:	mov    WORD PTR [rbp-0x2c],cx
  40cbb8:	jmp    40cbe3 <flatcc_json_parser_string_escape@@Base+0x343>
  40cbbd:	mov    rax,QWORD PTR [rbp-0x28]
  40cbc1:	mov    BYTE PTR [rax],0x0
  40cbc4:	mov    rdi,QWORD PTR [rbp-0x10]
  40cbc8:	mov    rsi,QWORD PTR [rbp-0x18]
  40cbcc:	mov    rdx,QWORD PTR [rbp-0x20]
  40cbd0:	mov    ecx,0x12
  40cbd5:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40cbda:	mov    QWORD PTR [rbp-0x8],rax
  40cbde:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cbe3:	jmp    40cbe8 <flatcc_json_parser_string_escape@@Base+0x348>
  40cbe8:	mov    rax,QWORD PTR [rbp-0x18]
  40cbec:	mov    cl,BYTE PTR [rax+0x3]
  40cbef:	mov    BYTE PTR [rbp-0x29],cl
  40cbf2:	movsx  edx,BYTE PTR [rbp-0x29]
  40cbf6:	cmp    edx,0x30
  40cbf9:	jl     40cc33 <flatcc_json_parser_string_escape@@Base+0x393>
  40cbff:	movsx  eax,BYTE PTR [rbp-0x29]
  40cc03:	cmp    eax,0x39
  40cc06:	jg     40cc33 <flatcc_json_parser_string_escape@@Base+0x393>
  40cc0c:	movsx  eax,BYTE PTR [rbp-0x29]
  40cc10:	sub    eax,0x30
  40cc13:	mov    cx,ax
  40cc16:	mov    WORD PTR [rbp-0x2e],cx
  40cc1a:	movzx  eax,WORD PTR [rbp-0x2e]
  40cc1e:	shl    eax,0x8
  40cc21:	movzx  edx,WORD PTR [rbp-0x2c]
  40cc25:	or     edx,eax
  40cc27:	mov    cx,dx
  40cc2a:	mov    WORD PTR [rbp-0x2c],cx
  40cc2e:	jmp    40ccae <flatcc_json_parser_string_escape@@Base+0x40e>
  40cc33:	movsx  eax,BYTE PTR [rbp-0x29]
  40cc37:	or     eax,0x20
  40cc3a:	mov    cl,al
  40cc3c:	mov    BYTE PTR [rbp-0x29],cl
  40cc3f:	movsx  eax,BYTE PTR [rbp-0x29]
  40cc43:	cmp    eax,0x61
  40cc46:	jl     40cc83 <flatcc_json_parser_string_escape@@Base+0x3e3>
  40cc4c:	movsx  eax,BYTE PTR [rbp-0x29]
  40cc50:	cmp    eax,0x66
  40cc53:	jg     40cc83 <flatcc_json_parser_string_escape@@Base+0x3e3>
  40cc59:	movsx  eax,BYTE PTR [rbp-0x29]
  40cc5d:	sub    eax,0x61
  40cc60:	add    eax,0xa
  40cc63:	mov    cx,ax
  40cc66:	mov    WORD PTR [rbp-0x2e],cx
  40cc6a:	movzx  eax,WORD PTR [rbp-0x2e]
  40cc6e:	shl    eax,0x8
  40cc71:	movzx  edx,WORD PTR [rbp-0x2c]
  40cc75:	or     edx,eax
  40cc77:	mov    cx,dx
  40cc7a:	mov    WORD PTR [rbp-0x2c],cx
  40cc7e:	jmp    40cca9 <flatcc_json_parser_string_escape@@Base+0x409>
  40cc83:	mov    rax,QWORD PTR [rbp-0x28]
  40cc87:	mov    BYTE PTR [rax],0x0
  40cc8a:	mov    rdi,QWORD PTR [rbp-0x10]
  40cc8e:	mov    rsi,QWORD PTR [rbp-0x18]
  40cc92:	mov    rdx,QWORD PTR [rbp-0x20]
  40cc96:	mov    ecx,0x12
  40cc9b:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40cca0:	mov    QWORD PTR [rbp-0x8],rax
  40cca4:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cca9:	jmp    40ccae <flatcc_json_parser_string_escape@@Base+0x40e>
  40ccae:	mov    rax,QWORD PTR [rbp-0x18]
  40ccb2:	mov    cl,BYTE PTR [rax+0x4]
  40ccb5:	mov    BYTE PTR [rbp-0x29],cl
  40ccb8:	movsx  edx,BYTE PTR [rbp-0x29]
  40ccbc:	cmp    edx,0x30
  40ccbf:	jl     40ccf9 <flatcc_json_parser_string_escape@@Base+0x459>
  40ccc5:	movsx  eax,BYTE PTR [rbp-0x29]
  40ccc9:	cmp    eax,0x39
  40cccc:	jg     40ccf9 <flatcc_json_parser_string_escape@@Base+0x459>
  40ccd2:	movsx  eax,BYTE PTR [rbp-0x29]
  40ccd6:	sub    eax,0x30
  40ccd9:	mov    cx,ax
  40ccdc:	mov    WORD PTR [rbp-0x2e],cx
  40cce0:	movzx  eax,WORD PTR [rbp-0x2e]
  40cce4:	shl    eax,0x4
  40cce7:	movzx  edx,WORD PTR [rbp-0x2c]
  40cceb:	or     edx,eax
  40cced:	mov    cx,dx
  40ccf0:	mov    WORD PTR [rbp-0x2c],cx
  40ccf4:	jmp    40cd74 <flatcc_json_parser_string_escape@@Base+0x4d4>
  40ccf9:	movsx  eax,BYTE PTR [rbp-0x29]
  40ccfd:	or     eax,0x20
  40cd00:	mov    cl,al
  40cd02:	mov    BYTE PTR [rbp-0x29],cl
  40cd05:	movsx  eax,BYTE PTR [rbp-0x29]
  40cd09:	cmp    eax,0x61
  40cd0c:	jl     40cd49 <flatcc_json_parser_string_escape@@Base+0x4a9>
  40cd12:	movsx  eax,BYTE PTR [rbp-0x29]
  40cd16:	cmp    eax,0x66
  40cd19:	jg     40cd49 <flatcc_json_parser_string_escape@@Base+0x4a9>
  40cd1f:	movsx  eax,BYTE PTR [rbp-0x29]
  40cd23:	sub    eax,0x61
  40cd26:	add    eax,0xa
  40cd29:	mov    cx,ax
  40cd2c:	mov    WORD PTR [rbp-0x2e],cx
  40cd30:	movzx  eax,WORD PTR [rbp-0x2e]
  40cd34:	shl    eax,0x4
  40cd37:	movzx  edx,WORD PTR [rbp-0x2c]
  40cd3b:	or     edx,eax
  40cd3d:	mov    cx,dx
  40cd40:	mov    WORD PTR [rbp-0x2c],cx
  40cd44:	jmp    40cd6f <flatcc_json_parser_string_escape@@Base+0x4cf>
  40cd49:	mov    rax,QWORD PTR [rbp-0x28]
  40cd4d:	mov    BYTE PTR [rax],0x0
  40cd50:	mov    rdi,QWORD PTR [rbp-0x10]
  40cd54:	mov    rsi,QWORD PTR [rbp-0x18]
  40cd58:	mov    rdx,QWORD PTR [rbp-0x20]
  40cd5c:	mov    ecx,0x12
  40cd61:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40cd66:	mov    QWORD PTR [rbp-0x8],rax
  40cd6a:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cd6f:	jmp    40cd74 <flatcc_json_parser_string_escape@@Base+0x4d4>
  40cd74:	mov    rax,QWORD PTR [rbp-0x18]
  40cd78:	mov    cl,BYTE PTR [rax+0x5]
  40cd7b:	mov    BYTE PTR [rbp-0x29],cl
  40cd7e:	movsx  edx,BYTE PTR [rbp-0x29]
  40cd82:	cmp    edx,0x30
  40cd85:	jl     40cdbc <flatcc_json_parser_string_escape@@Base+0x51c>
  40cd8b:	movsx  eax,BYTE PTR [rbp-0x29]
  40cd8f:	cmp    eax,0x39
  40cd92:	jg     40cdbc <flatcc_json_parser_string_escape@@Base+0x51c>
  40cd98:	movsx  eax,BYTE PTR [rbp-0x29]
  40cd9c:	sub    eax,0x30
  40cd9f:	mov    cx,ax
  40cda2:	mov    WORD PTR [rbp-0x2e],cx
  40cda6:	movzx  eax,WORD PTR [rbp-0x2e]
  40cdaa:	movzx  edx,WORD PTR [rbp-0x2c]
  40cdae:	or     edx,eax
  40cdb0:	mov    cx,dx
  40cdb3:	mov    WORD PTR [rbp-0x2c],cx
  40cdb7:	jmp    40ce34 <flatcc_json_parser_string_escape@@Base+0x594>
  40cdbc:	movsx  eax,BYTE PTR [rbp-0x29]
  40cdc0:	or     eax,0x20
  40cdc3:	mov    cl,al
  40cdc5:	mov    BYTE PTR [rbp-0x29],cl
  40cdc8:	movsx  eax,BYTE PTR [rbp-0x29]
  40cdcc:	cmp    eax,0x61
  40cdcf:	jl     40ce09 <flatcc_json_parser_string_escape@@Base+0x569>
  40cdd5:	movsx  eax,BYTE PTR [rbp-0x29]
  40cdd9:	cmp    eax,0x66
  40cddc:	jg     40ce09 <flatcc_json_parser_string_escape@@Base+0x569>
  40cde2:	movsx  eax,BYTE PTR [rbp-0x29]
  40cde6:	sub    eax,0x61
  40cde9:	add    eax,0xa
  40cdec:	mov    cx,ax
  40cdef:	mov    WORD PTR [rbp-0x2e],cx
  40cdf3:	movzx  eax,WORD PTR [rbp-0x2e]
  40cdf7:	movzx  edx,WORD PTR [rbp-0x2c]
  40cdfb:	or     edx,eax
  40cdfd:	mov    cx,dx
  40ce00:	mov    WORD PTR [rbp-0x2c],cx
  40ce04:	jmp    40ce2f <flatcc_json_parser_string_escape@@Base+0x58f>
  40ce09:	mov    rax,QWORD PTR [rbp-0x28]
  40ce0d:	mov    BYTE PTR [rax],0x0
  40ce10:	mov    rdi,QWORD PTR [rbp-0x10]
  40ce14:	mov    rsi,QWORD PTR [rbp-0x18]
  40ce18:	mov    rdx,QWORD PTR [rbp-0x20]
  40ce1c:	mov    ecx,0x12
  40ce21:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40ce26:	mov    QWORD PTR [rbp-0x8],rax
  40ce2a:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40ce2f:	jmp    40ce34 <flatcc_json_parser_string_escape@@Base+0x594>
  40ce34:	movzx  eax,WORD PTR [rbp-0x2c]
  40ce38:	cmp    eax,0x7f
  40ce3b:	jg     40ce5a <flatcc_json_parser_string_escape@@Base+0x5ba>
  40ce41:	mov    rax,QWORD PTR [rbp-0x28]
  40ce45:	mov    BYTE PTR [rax],0x1
  40ce48:	mov    cx,WORD PTR [rbp-0x2c]
  40ce4c:	mov    dl,cl
  40ce4e:	mov    rax,QWORD PTR [rbp-0x28]
  40ce52:	mov    BYTE PTR [rax+0x1],dl
  40ce55:	jmp    40cef2 <flatcc_json_parser_string_escape@@Base+0x652>
  40ce5a:	movzx  eax,WORD PTR [rbp-0x2c]
  40ce5e:	cmp    eax,0x7ff
  40ce63:	jg     40cea1 <flatcc_json_parser_string_escape@@Base+0x601>
  40ce69:	mov    rax,QWORD PTR [rbp-0x28]
  40ce6d:	mov    BYTE PTR [rax],0x2
  40ce70:	movzx  ecx,WORD PTR [rbp-0x2c]
  40ce74:	sar    ecx,0x6
  40ce77:	or     ecx,0xc0
  40ce7d:	mov    dl,cl
  40ce7f:	mov    rax,QWORD PTR [rbp-0x28]
  40ce83:	mov    BYTE PTR [rax+0x1],dl
  40ce86:	movzx  ecx,WORD PTR [rbp-0x2c]
  40ce8a:	and    ecx,0x3f
  40ce8d:	or     ecx,0x80
  40ce93:	mov    dl,cl
  40ce95:	mov    rax,QWORD PTR [rbp-0x28]
  40ce99:	mov    BYTE PTR [rax+0x2],dl
  40ce9c:	jmp    40ceed <flatcc_json_parser_string_escape@@Base+0x64d>
  40cea1:	mov    rax,QWORD PTR [rbp-0x28]
  40cea5:	mov    BYTE PTR [rax],0x3
  40cea8:	movzx  ecx,WORD PTR [rbp-0x2c]
  40ceac:	sar    ecx,0xc
  40ceaf:	or     ecx,0xe0
  40ceb5:	mov    dl,cl
  40ceb7:	mov    rax,QWORD PTR [rbp-0x28]
  40cebb:	mov    BYTE PTR [rax+0x1],dl
  40cebe:	movzx  ecx,WORD PTR [rbp-0x2c]
  40cec2:	sar    ecx,0x6
  40cec5:	and    ecx,0x3f
  40cec8:	or     ecx,0x80
  40cece:	mov    dl,cl
  40ced0:	mov    rax,QWORD PTR [rbp-0x28]
  40ced4:	mov    BYTE PTR [rax+0x2],dl
  40ced7:	movzx  ecx,WORD PTR [rbp-0x2c]
  40cedb:	and    ecx,0x3f
  40cede:	or     ecx,0x80
  40cee4:	mov    dl,cl
  40cee6:	mov    rax,QWORD PTR [rbp-0x28]
  40ceea:	mov    BYTE PTR [rax+0x3],dl
  40ceed:	jmp    40cef2 <flatcc_json_parser_string_escape@@Base+0x652>
  40cef2:	mov    rax,QWORD PTR [rbp-0x18]
  40cef6:	add    rax,0x6
  40cefa:	mov    QWORD PTR [rbp-0x8],rax
  40cefe:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cf03:	mov    rax,QWORD PTR [rbp-0x28]
  40cf07:	mov    BYTE PTR [rax],0x1
  40cf0a:	mov    rax,QWORD PTR [rbp-0x28]
  40cf0e:	mov    BYTE PTR [rax+0x1],0x9
  40cf12:	mov    rax,QWORD PTR [rbp-0x18]
  40cf16:	add    rax,0x2
  40cf1a:	mov    QWORD PTR [rbp-0x8],rax
  40cf1e:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cf23:	mov    rax,QWORD PTR [rbp-0x28]
  40cf27:	mov    BYTE PTR [rax],0x1
  40cf2a:	mov    rax,QWORD PTR [rbp-0x28]
  40cf2e:	mov    BYTE PTR [rax+0x1],0xa
  40cf32:	mov    rax,QWORD PTR [rbp-0x18]
  40cf36:	add    rax,0x2
  40cf3a:	mov    QWORD PTR [rbp-0x8],rax
  40cf3e:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cf43:	mov    rax,QWORD PTR [rbp-0x28]
  40cf47:	mov    BYTE PTR [rax],0x1
  40cf4a:	mov    rax,QWORD PTR [rbp-0x28]
  40cf4e:	mov    BYTE PTR [rax+0x1],0xd
  40cf52:	mov    rax,QWORD PTR [rbp-0x18]
  40cf56:	add    rax,0x2
  40cf5a:	mov    QWORD PTR [rbp-0x8],rax
  40cf5e:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cf63:	mov    rax,QWORD PTR [rbp-0x28]
  40cf67:	mov    BYTE PTR [rax],0x1
  40cf6a:	mov    rax,QWORD PTR [rbp-0x28]
  40cf6e:	mov    BYTE PTR [rax+0x1],0x8
  40cf72:	mov    rax,QWORD PTR [rbp-0x18]
  40cf76:	add    rax,0x2
  40cf7a:	mov    QWORD PTR [rbp-0x8],rax
  40cf7e:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cf83:	mov    rax,QWORD PTR [rbp-0x28]
  40cf87:	mov    BYTE PTR [rax],0x1
  40cf8a:	mov    rax,QWORD PTR [rbp-0x28]
  40cf8e:	mov    BYTE PTR [rax+0x1],0xc
  40cf92:	mov    rax,QWORD PTR [rbp-0x18]
  40cf96:	add    rax,0x2
  40cf9a:	mov    QWORD PTR [rbp-0x8],rax
  40cf9e:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cfa3:	mov    rax,QWORD PTR [rbp-0x28]
  40cfa7:	mov    BYTE PTR [rax],0x1
  40cfaa:	mov    rax,QWORD PTR [rbp-0x28]
  40cfae:	mov    BYTE PTR [rax+0x1],0x22
  40cfb2:	mov    rax,QWORD PTR [rbp-0x18]
  40cfb6:	add    rax,0x2
  40cfba:	mov    QWORD PTR [rbp-0x8],rax
  40cfbe:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cfc3:	mov    rax,QWORD PTR [rbp-0x28]
  40cfc7:	mov    BYTE PTR [rax],0x1
  40cfca:	mov    rax,QWORD PTR [rbp-0x28]
  40cfce:	mov    BYTE PTR [rax+0x1],0x5c
  40cfd2:	mov    rax,QWORD PTR [rbp-0x18]
  40cfd6:	add    rax,0x2
  40cfda:	mov    QWORD PTR [rbp-0x8],rax
  40cfde:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40cfe3:	mov    rax,QWORD PTR [rbp-0x28]
  40cfe7:	mov    BYTE PTR [rax],0x1
  40cfea:	mov    rax,QWORD PTR [rbp-0x28]
  40cfee:	mov    BYTE PTR [rax+0x1],0x2f
  40cff2:	mov    rax,QWORD PTR [rbp-0x18]
  40cff6:	add    rax,0x2
  40cffa:	mov    QWORD PTR [rbp-0x8],rax
  40cffe:	jmp    40d024 <flatcc_json_parser_string_escape@@Base+0x784>
  40d003:	mov    rax,QWORD PTR [rbp-0x28]
  40d007:	mov    BYTE PTR [rax],0x0
  40d00a:	mov    rdi,QWORD PTR [rbp-0x10]
  40d00e:	mov    rsi,QWORD PTR [rbp-0x18]
  40d012:	mov    rdx,QWORD PTR [rbp-0x20]
  40d016:	mov    ecx,0x12
  40d01b:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40d020:	mov    QWORD PTR [rbp-0x8],rax
  40d024:	mov    rax,QWORD PTR [rbp-0x8]
  40d028:	add    rsp,0x40
  40d02c:	pop    rbp
  40d02d:	ret    
  40d02e:	xchg   ax,ax

000000000040d030 <flatcc_json_parser_skip_constant@@Base>:
  40d030:	push   rbp
  40d031:	mov    rbp,rsp
  40d034:	sub    rsp,0x30
  40d038:	mov    QWORD PTR [rbp-0x10],rdi
  40d03c:	mov    QWORD PTR [rbp-0x18],rsi
  40d040:	mov    QWORD PTR [rbp-0x20],rdx
  40d044:	mov    rax,QWORD PTR [rbp-0x18]
  40d048:	cmp    rax,QWORD PTR [rbp-0x20]
  40d04c:	je     40d126 <flatcc_json_parser_skip_constant@@Base+0xf6>
  40d052:	mov    rax,QWORD PTR [rbp-0x18]
  40d056:	mov    cl,BYTE PTR [rax]
  40d058:	mov    BYTE PTR [rbp-0x21],cl
  40d05b:	movsx  edx,BYTE PTR [rbp-0x21]
  40d05f:	and    edx,0x80
  40d065:	cmp    edx,0x0
  40d068:	jne    40d0a2 <flatcc_json_parser_skip_constant@@Base+0x72>
  40d06e:	movsx  eax,BYTE PTR [rbp-0x21]
  40d072:	cmp    eax,0x5f
  40d075:	je     40d0a2 <flatcc_json_parser_skip_constant@@Base+0x72>
  40d07b:	movsx  eax,BYTE PTR [rbp-0x21]
  40d07f:	cmp    eax,0x30
  40d082:	jl     40d095 <flatcc_json_parser_skip_constant@@Base+0x65>
  40d088:	movsx  eax,BYTE PTR [rbp-0x21]
  40d08c:	cmp    eax,0x39
  40d08f:	jle    40d0a2 <flatcc_json_parser_skip_constant@@Base+0x72>
  40d095:	movsx  eax,BYTE PTR [rbp-0x21]
  40d099:	cmp    eax,0x2e
  40d09c:	jne    40d0b3 <flatcc_json_parser_skip_constant@@Base+0x83>
  40d0a2:	mov    rax,QWORD PTR [rbp-0x18]
  40d0a6:	add    rax,0x1
  40d0aa:	mov    QWORD PTR [rbp-0x18],rax
  40d0ae:	jmp    40d044 <flatcc_json_parser_skip_constant@@Base+0x14>
  40d0b3:	movsx  eax,BYTE PTR [rbp-0x21]
  40d0b7:	or     eax,0x20
  40d0ba:	mov    cl,al
  40d0bc:	mov    BYTE PTR [rbp-0x21],cl
  40d0bf:	movsx  eax,BYTE PTR [rbp-0x21]
  40d0c3:	cmp    eax,0x61
  40d0c6:	jl     40d0ea <flatcc_json_parser_skip_constant@@Base+0xba>
  40d0cc:	movsx  eax,BYTE PTR [rbp-0x21]
  40d0d0:	cmp    eax,0x7a
  40d0d3:	jg     40d0ea <flatcc_json_parser_skip_constant@@Base+0xba>
  40d0d9:	mov    rax,QWORD PTR [rbp-0x18]
  40d0dd:	add    rax,0x1
  40d0e1:	mov    QWORD PTR [rbp-0x18],rax
  40d0e5:	jmp    40d044 <flatcc_json_parser_skip_constant@@Base+0x14>
  40d0ea:	mov    rdi,QWORD PTR [rbp-0x10]
  40d0ee:	mov    rax,QWORD PTR [rbp-0x18]
  40d0f2:	mov    QWORD PTR [rbp-0x30],rax
  40d0f6:	mov    rdx,QWORD PTR [rbp-0x20]
  40d0fa:	mov    rsi,rax
  40d0fd:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d102:	mov    QWORD PTR [rbp-0x18],rax
  40d106:	mov    rax,QWORD PTR [rbp-0x18]
  40d10a:	cmp    rax,QWORD PTR [rbp-0x30]
  40d10e:	jne    40d121 <flatcc_json_parser_skip_constant@@Base+0xf1>
  40d114:	mov    rax,QWORD PTR [rbp-0x18]
  40d118:	mov    QWORD PTR [rbp-0x8],rax
  40d11c:	jmp    40d12e <flatcc_json_parser_skip_constant@@Base+0xfe>
  40d121:	jmp    40d044 <flatcc_json_parser_skip_constant@@Base+0x14>
  40d126:	mov    rax,QWORD PTR [rbp-0x18]
  40d12a:	mov    QWORD PTR [rbp-0x8],rax
  40d12e:	mov    rax,QWORD PTR [rbp-0x8]
  40d132:	add    rsp,0x30
  40d136:	pop    rbp
  40d137:	ret    
  40d138:	nop    DWORD PTR [rax+rax*1+0x0]
  40d140:	push   rbp
  40d141:	mov    rbp,rsp
  40d144:	sub    rsp,0x20
  40d148:	mov    QWORD PTR [rbp-0x10],rdi
  40d14c:	mov    QWORD PTR [rbp-0x18],rsi
  40d150:	mov    QWORD PTR [rbp-0x20],rdx
  40d154:	mov    rdx,QWORD PTR [rbp-0x20]
  40d158:	mov    rsi,QWORD PTR [rbp-0x18]
  40d15c:	sub    rdx,rsi
  40d15f:	cmp    rdx,0x1
  40d163:	jle    40d1bd <flatcc_json_parser_skip_constant@@Base+0x18d>
  40d169:	mov    rax,QWORD PTR [rbp-0x18]
  40d16d:	movsx  ecx,BYTE PTR [rax]
  40d170:	cmp    ecx,0x20
  40d173:	jle    40d186 <flatcc_json_parser_skip_constant@@Base+0x156>
  40d179:	mov    rax,QWORD PTR [rbp-0x18]
  40d17d:	mov    QWORD PTR [rbp-0x8],rax
  40d181:	jmp    40d1d2 <flatcc_json_parser_skip_constant@@Base+0x1a2>
  40d186:	mov    rax,QWORD PTR [rbp-0x18]
  40d18a:	movsx  ecx,BYTE PTR [rax]
  40d18d:	cmp    ecx,0x20
  40d190:	jne    40d1b8 <flatcc_json_parser_skip_constant@@Base+0x188>
  40d196:	mov    rax,QWORD PTR [rbp-0x18]
  40d19a:	movsx  ecx,BYTE PTR [rax+0x1]
  40d19e:	cmp    ecx,0x20
  40d1a1:	jle    40d1b8 <flatcc_json_parser_skip_constant@@Base+0x188>
  40d1a7:	mov    rax,QWORD PTR [rbp-0x18]
  40d1ab:	add    rax,0x1
  40d1af:	mov    QWORD PTR [rbp-0x8],rax
  40d1b3:	jmp    40d1d2 <flatcc_json_parser_skip_constant@@Base+0x1a2>
  40d1b8:	jmp    40d1bd <flatcc_json_parser_skip_constant@@Base+0x18d>
  40d1bd:	mov    rdi,QWORD PTR [rbp-0x10]
  40d1c1:	mov    rsi,QWORD PTR [rbp-0x18]
  40d1c5:	mov    rdx,QWORD PTR [rbp-0x20]
  40d1c9:	call   40c690 <flatcc_json_parser_space_ext@@Base>
  40d1ce:	mov    QWORD PTR [rbp-0x8],rax
  40d1d2:	mov    rax,QWORD PTR [rbp-0x8]
  40d1d6:	add    rsp,0x20
  40d1da:	pop    rbp
  40d1db:	ret    
  40d1dc:	nop    DWORD PTR [rax+0x0]

000000000040d1e0 <flatcc_json_parser_match_constant@@Base>:
  40d1e0:	push   rbp
  40d1e1:	mov    rbp,rsp
  40d1e4:	sub    rsp,0x50
  40d1e8:	mov    QWORD PTR [rbp-0x10],rdi
  40d1ec:	mov    QWORD PTR [rbp-0x18],rsi
  40d1f0:	mov    QWORD PTR [rbp-0x20],rdx
  40d1f4:	mov    DWORD PTR [rbp-0x24],ecx
  40d1f7:	mov    QWORD PTR [rbp-0x30],r8
  40d1fb:	mov    rdx,QWORD PTR [rbp-0x18]
  40d1ff:	mov    QWORD PTR [rbp-0x38],rdx
  40d203:	mov    rdx,QWORD PTR [rbp-0x18]
  40d207:	movsxd rsi,DWORD PTR [rbp-0x24]
  40d20b:	add    rdx,rsi
  40d20e:	mov    QWORD PTR [rbp-0x40],rdx
  40d212:	mov    rdx,QWORD PTR [rbp-0x20]
  40d216:	mov    rsi,QWORD PTR [rbp-0x18]
  40d21a:	sub    rdx,rsi
  40d21d:	movsxd rsi,DWORD PTR [rbp-0x24]
  40d221:	cmp    rdx,rsi
  40d224:	jg     40d241 <flatcc_json_parser_match_constant@@Base+0x61>
  40d22a:	mov    rax,QWORD PTR [rbp-0x30]
  40d22e:	mov    DWORD PTR [rax],0x0
  40d234:	mov    rax,QWORD PTR [rbp-0x18]
  40d238:	mov    QWORD PTR [rbp-0x8],rax
  40d23c:	jmp    40d4c6 <flatcc_json_parser_match_constant@@Base+0x2e6>
  40d241:	mov    rax,QWORD PTR [rbp-0x10]
  40d245:	cmp    DWORD PTR [rax+0x14],0x0
  40d249:	je     40d36c <flatcc_json_parser_match_constant@@Base+0x18c>
  40d24f:	mov    rdi,QWORD PTR [rbp-0x10]
  40d253:	mov    rsi,QWORD PTR [rbp-0x40]
  40d257:	mov    rdx,QWORD PTR [rbp-0x20]
  40d25b:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d260:	mov    QWORD PTR [rbp-0x18],rax
  40d264:	mov    rax,QWORD PTR [rbp-0x18]
  40d268:	cmp    rax,QWORD PTR [rbp-0x20]
  40d26c:	jne    40d289 <flatcc_json_parser_match_constant@@Base+0xa9>
  40d272:	mov    rax,QWORD PTR [rbp-0x30]
  40d276:	mov    DWORD PTR [rax],0x0
  40d27c:	mov    rax,QWORD PTR [rbp-0x18]
  40d280:	mov    QWORD PTR [rbp-0x8],rax
  40d284:	jmp    40d4c6 <flatcc_json_parser_match_constant@@Base+0x2e6>
  40d289:	mov    rax,QWORD PTR [rbp-0x18]
  40d28d:	cmp    rax,QWORD PTR [rbp-0x40]
  40d291:	je     40d318 <flatcc_json_parser_match_constant@@Base+0x138>
  40d297:	mov    rax,QWORD PTR [rbp-0x18]
  40d29b:	mov    cl,BYTE PTR [rax]
  40d29d:	mov    BYTE PTR [rbp-0x41],cl
  40d2a0:	movsx  edx,BYTE PTR [rbp-0x41]
  40d2a4:	cmp    edx,0x5f
  40d2a7:	je     40d2bf <flatcc_json_parser_match_constant@@Base+0xdf>
  40d2ad:	movsx  eax,BYTE PTR [rbp-0x41]
  40d2b1:	and    eax,0x80
  40d2b6:	cmp    eax,0x0
  40d2b9:	je     40d2d6 <flatcc_json_parser_match_constant@@Base+0xf6>
  40d2bf:	mov    rax,QWORD PTR [rbp-0x30]
  40d2c3:	mov    DWORD PTR [rax],0x1
  40d2c9:	mov    rax,QWORD PTR [rbp-0x18]
  40d2cd:	mov    QWORD PTR [rbp-0x8],rax
  40d2d1:	jmp    40d4c6 <flatcc_json_parser_match_constant@@Base+0x2e6>
  40d2d6:	movsx  eax,BYTE PTR [rbp-0x41]
  40d2da:	or     eax,0x20
  40d2dd:	mov    cl,al
  40d2df:	mov    BYTE PTR [rbp-0x41],cl
  40d2e2:	movsx  eax,BYTE PTR [rbp-0x41]
  40d2e6:	cmp    eax,0x61
  40d2e9:	jl     40d313 <flatcc_json_parser_match_constant@@Base+0x133>
  40d2ef:	movsx  eax,BYTE PTR [rbp-0x41]
  40d2f3:	cmp    eax,0x7a
  40d2f6:	jg     40d313 <flatcc_json_parser_match_constant@@Base+0x133>
  40d2fc:	mov    rax,QWORD PTR [rbp-0x30]
  40d300:	mov    DWORD PTR [rax],0x1
  40d306:	mov    rax,QWORD PTR [rbp-0x18]
  40d30a:	mov    QWORD PTR [rbp-0x8],rax
  40d30e:	jmp    40d4c6 <flatcc_json_parser_match_constant@@Base+0x2e6>
  40d313:	jmp    40d318 <flatcc_json_parser_match_constant@@Base+0x138>
  40d318:	mov    rax,QWORD PTR [rbp-0x30]
  40d31c:	mov    DWORD PTR [rax],0x0
  40d322:	mov    rax,QWORD PTR [rbp-0x18]
  40d326:	movsx  ecx,BYTE PTR [rax]
  40d329:	cmp    ecx,0x2c
  40d32c:	je     40d352 <flatcc_json_parser_match_constant@@Base+0x172>
  40d332:	mov    rax,QWORD PTR [rbp-0x18]
  40d336:	movsx  ecx,BYTE PTR [rax]
  40d339:	cmp    ecx,0x7d
  40d33c:	je     40d352 <flatcc_json_parser_match_constant@@Base+0x172>
  40d342:	mov    rax,QWORD PTR [rbp-0x18]
  40d346:	movsx  ecx,BYTE PTR [rax]
  40d349:	cmp    ecx,0x5d
  40d34c:	jne    40d35f <flatcc_json_parser_match_constant@@Base+0x17f>
  40d352:	mov    rax,QWORD PTR [rbp-0x18]
  40d356:	mov    QWORD PTR [rbp-0x8],rax
  40d35a:	jmp    40d4c6 <flatcc_json_parser_match_constant@@Base+0x2e6>
  40d35f:	mov    rax,QWORD PTR [rbp-0x38]
  40d363:	mov    QWORD PTR [rbp-0x8],rax
  40d367:	jmp    40d4c6 <flatcc_json_parser_match_constant@@Base+0x2e6>
  40d36c:	mov    rax,QWORD PTR [rbp-0x40]
  40d370:	mov    QWORD PTR [rbp-0x18],rax
  40d374:	mov    rax,QWORD PTR [rbp-0x18]
  40d378:	movsx  ecx,BYTE PTR [rax]
  40d37b:	cmp    ecx,0x20
  40d37e:	jne    40d427 <flatcc_json_parser_match_constant@@Base+0x247>
  40d384:	mov    rax,QWORD PTR [rbp-0x18]
  40d388:	add    rax,0x1
  40d38c:	mov    QWORD PTR [rbp-0x18],rax
  40d390:	xor    eax,eax
  40d392:	mov    cl,al
  40d394:	mov    rdx,QWORD PTR [rbp-0x18]
  40d398:	cmp    rdx,QWORD PTR [rbp-0x20]
  40d39c:	mov    BYTE PTR [rbp-0x42],cl
  40d39f:	je     40d3b5 <flatcc_json_parser_match_constant@@Base+0x1d5>
  40d3a5:	mov    rax,QWORD PTR [rbp-0x18]
  40d3a9:	movsx  ecx,BYTE PTR [rax]
  40d3ac:	cmp    ecx,0x20
  40d3af:	sete   dl
  40d3b2:	mov    BYTE PTR [rbp-0x42],dl
  40d3b5:	mov    al,BYTE PTR [rbp-0x42]
  40d3b8:	test   al,0x1
  40d3ba:	jne    40d3c5 <flatcc_json_parser_match_constant@@Base+0x1e5>
  40d3c0:	jmp    40d3d6 <flatcc_json_parser_match_constant@@Base+0x1f6>
  40d3c5:	mov    rax,QWORD PTR [rbp-0x18]
  40d3c9:	add    rax,0x1
  40d3cd:	mov    QWORD PTR [rbp-0x18],rax
  40d3d1:	jmp    40d390 <flatcc_json_parser_match_constant@@Base+0x1b0>
  40d3d6:	mov    rax,QWORD PTR [rbp-0x18]
  40d3da:	cmp    rax,QWORD PTR [rbp-0x20]
  40d3de:	jne    40d3fb <flatcc_json_parser_match_constant@@Base+0x21b>
  40d3e4:	mov    rax,QWORD PTR [rbp-0x30]
  40d3e8:	mov    DWORD PTR [rax],0x0
  40d3ee:	mov    rax,QWORD PTR [rbp-0x18]
  40d3f2:	mov    QWORD PTR [rbp-0x8],rax
  40d3f6:	jmp    40d4c6 <flatcc_json_parser_match_constant@@Base+0x2e6>
  40d3fb:	mov    rax,QWORD PTR [rbp-0x18]
  40d3ff:	movsx  ecx,BYTE PTR [rax]
  40d402:	cmp    ecx,0x22
  40d405:	je     40d422 <flatcc_json_parser_match_constant@@Base+0x242>
  40d40b:	mov    rax,QWORD PTR [rbp-0x30]
  40d40f:	mov    DWORD PTR [rax],0x1
  40d415:	mov    rax,QWORD PTR [rbp-0x18]
  40d419:	mov    QWORD PTR [rbp-0x8],rax
  40d41d:	jmp    40d4c6 <flatcc_json_parser_match_constant@@Base+0x2e6>
  40d422:	jmp    40d427 <flatcc_json_parser_match_constant@@Base+0x247>
  40d427:	mov    rax,QWORD PTR [rbp-0x18]
  40d42b:	movsx  ecx,BYTE PTR [rax]
  40d42e:	mov    edx,ecx
  40d430:	sub    edx,0x22
  40d433:	mov    DWORD PTR [rbp-0x48],ecx
  40d436:	mov    DWORD PTR [rbp-0x4c],edx
  40d439:	je     40d481 <flatcc_json_parser_match_constant@@Base+0x2a1>
  40d43f:	jmp    40d444 <flatcc_json_parser_match_constant@@Base+0x264>
  40d444:	mov    eax,DWORD PTR [rbp-0x48]
  40d447:	sub    eax,0x5c
  40d44a:	mov    DWORD PTR [rbp-0x50],eax
  40d44d:	jne    40d4b4 <flatcc_json_parser_match_constant@@Base+0x2d4>
  40d453:	jmp    40d458 <flatcc_json_parser_match_constant@@Base+0x278>
  40d458:	mov    rax,QWORD PTR [rbp-0x30]
  40d45c:	mov    DWORD PTR [rax],0x0
  40d462:	mov    rdi,QWORD PTR [rbp-0x10]
  40d466:	mov    rsi,QWORD PTR [rbp-0x18]
  40d46a:	mov    rdx,QWORD PTR [rbp-0x20]
  40d46e:	mov    ecx,0x12
  40d473:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40d478:	mov    QWORD PTR [rbp-0x8],rax
  40d47c:	jmp    40d4c6 <flatcc_json_parser_match_constant@@Base+0x2e6>
  40d481:	xor    eax,eax
  40d483:	mov    edx,eax
  40d485:	mov    rdi,QWORD PTR [rbp-0x10]
  40d489:	mov    rcx,QWORD PTR [rbp-0x18]
  40d48d:	add    rcx,0x1
  40d491:	mov    rsi,rcx
  40d494:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d499:	mov    QWORD PTR [rbp-0x18],rax
  40d49d:	mov    rax,QWORD PTR [rbp-0x30]
  40d4a1:	mov    DWORD PTR [rax],0x0
  40d4a7:	mov    rax,QWORD PTR [rbp-0x18]
  40d4ab:	mov    QWORD PTR [rbp-0x8],rax
  40d4af:	jmp    40d4c6 <flatcc_json_parser_match_constant@@Base+0x2e6>
  40d4b4:	mov    rax,QWORD PTR [rbp-0x30]
  40d4b8:	mov    DWORD PTR [rax],0x0
  40d4be:	mov    rax,QWORD PTR [rbp-0x38]
  40d4c2:	mov    QWORD PTR [rbp-0x8],rax
  40d4c6:	mov    rax,QWORD PTR [rbp-0x8]
  40d4ca:	add    rsp,0x50
  40d4ce:	pop    rbp
  40d4cf:	ret    

000000000040d4d0 <flatcc_json_parser_unmatched_symbol@@Base>:
  40d4d0:	push   rbp
  40d4d1:	mov    rbp,rsp
  40d4d4:	sub    rsp,0x20
  40d4d8:	mov    QWORD PTR [rbp-0x10],rdi
  40d4dc:	mov    QWORD PTR [rbp-0x18],rsi
  40d4e0:	mov    QWORD PTR [rbp-0x20],rdx
  40d4e4:	mov    rdx,QWORD PTR [rbp-0x10]
  40d4e8:	mov    eax,DWORD PTR [rdx+0x10]
  40d4eb:	and    eax,0x1
  40d4ee:	cmp    eax,0x0
  40d4f1:	je     40d59e <flatcc_json_parser_unmatched_symbol@@Base+0xce>
  40d4f7:	mov    rdi,QWORD PTR [rbp-0x10]
  40d4fb:	mov    rsi,QWORD PTR [rbp-0x18]
  40d4ff:	mov    rdx,QWORD PTR [rbp-0x20]
  40d503:	call   40d5d0 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
  40d508:	mov    QWORD PTR [rbp-0x18],rax
  40d50c:	mov    rdi,QWORD PTR [rbp-0x10]
  40d510:	mov    rsi,QWORD PTR [rbp-0x18]
  40d514:	mov    rdx,QWORD PTR [rbp-0x20]
  40d518:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d51d:	mov    QWORD PTR [rbp-0x18],rax
  40d521:	mov    rax,QWORD PTR [rbp-0x18]
  40d525:	cmp    rax,QWORD PTR [rbp-0x20]
  40d529:	je     40d565 <flatcc_json_parser_unmatched_symbol@@Base+0x95>
  40d52f:	mov    rax,QWORD PTR [rbp-0x18]
  40d533:	movsx  ecx,BYTE PTR [rax]
  40d536:	cmp    ecx,0x3a
  40d539:	jne    40d565 <flatcc_json_parser_unmatched_symbol@@Base+0x95>
  40d53f:	mov    rax,QWORD PTR [rbp-0x18]
  40d543:	add    rax,0x1
  40d547:	mov    QWORD PTR [rbp-0x18],rax
  40d54b:	mov    rdi,QWORD PTR [rbp-0x10]
  40d54f:	mov    rsi,QWORD PTR [rbp-0x18]
  40d553:	mov    rdx,QWORD PTR [rbp-0x20]
  40d557:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d55c:	mov    QWORD PTR [rbp-0x18],rax
  40d560:	jmp    40d584 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
  40d565:	mov    rdi,QWORD PTR [rbp-0x10]
  40d569:	mov    rsi,QWORD PTR [rbp-0x18]
  40d56d:	mov    rdx,QWORD PTR [rbp-0x20]
  40d571:	mov    ecx,0x4
  40d576:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40d57b:	mov    QWORD PTR [rbp-0x8],rax
  40d57f:	jmp    40d5b8 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
  40d584:	mov    rdi,QWORD PTR [rbp-0x10]
  40d588:	mov    rsi,QWORD PTR [rbp-0x18]
  40d58c:	mov    rdx,QWORD PTR [rbp-0x20]
  40d590:	call   40d7e0 <flatcc_json_parser_generic_json@@Base>
  40d595:	mov    QWORD PTR [rbp-0x8],rax
  40d599:	jmp    40d5b8 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
  40d59e:	mov    rdi,QWORD PTR [rbp-0x10]
  40d5a2:	mov    rsi,QWORD PTR [rbp-0x18]
  40d5a6:	mov    rdx,QWORD PTR [rbp-0x20]
  40d5aa:	mov    ecx,0xd
  40d5af:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40d5b4:	mov    QWORD PTR [rbp-0x8],rax
  40d5b8:	mov    rax,QWORD PTR [rbp-0x8]
  40d5bc:	add    rsp,0x20
  40d5c0:	pop    rbp
  40d5c1:	ret    
  40d5c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d5cc:	nop    DWORD PTR [rax+0x0]
  40d5d0:	push   rbp
  40d5d1:	mov    rbp,rsp
  40d5d4:	sub    rsp,0x30
  40d5d8:	mov    QWORD PTR [rbp-0x10],rdi
  40d5dc:	mov    QWORD PTR [rbp-0x18],rsi
  40d5e0:	mov    QWORD PTR [rbp-0x20],rdx
  40d5e4:	mov    BYTE PTR [rbp-0x22],0x0
  40d5e8:	mov    rdx,QWORD PTR [rbp-0x10]
  40d5ec:	cmp    DWORD PTR [rdx+0x14],0x0
  40d5f0:	je     40d700 <flatcc_json_parser_unmatched_symbol@@Base+0x230>
  40d5f6:	jmp    40d5fb <flatcc_json_parser_unmatched_symbol@@Base+0x12b>
  40d5fb:	xor    eax,eax
  40d5fd:	mov    cl,al
  40d5ff:	mov    rdx,QWORD PTR [rbp-0x18]
  40d603:	cmp    rdx,QWORD PTR [rbp-0x20]
  40d607:	mov    BYTE PTR [rbp-0x23],cl
  40d60a:	je     40d620 <flatcc_json_parser_unmatched_symbol@@Base+0x150>
  40d610:	mov    rax,QWORD PTR [rbp-0x18]
  40d614:	movsx  ecx,BYTE PTR [rax]
  40d617:	cmp    ecx,0x20
  40d61a:	setg   dl
  40d61d:	mov    BYTE PTR [rbp-0x23],dl
  40d620:	mov    al,BYTE PTR [rbp-0x23]
  40d623:	test   al,0x1
  40d625:	jne    40d630 <flatcc_json_parser_unmatched_symbol@@Base+0x160>
  40d62b:	jmp    40d6cf <flatcc_json_parser_unmatched_symbol@@Base+0x1ff>
  40d630:	mov    rax,QWORD PTR [rbp-0x18]
  40d634:	mov    cl,BYTE PTR [rax]
  40d636:	mov    BYTE PTR [rbp-0x21],cl
  40d639:	mov    BYTE PTR [rbp-0x22],cl
  40d63c:	movsx  edx,BYTE PTR [rbp-0x21]
  40d640:	cmp    edx,0x5f
  40d643:	je     40d682 <flatcc_json_parser_unmatched_symbol@@Base+0x1b2>
  40d649:	movsx  eax,BYTE PTR [rbp-0x21]
  40d64d:	cmp    eax,0x2e
  40d650:	je     40d682 <flatcc_json_parser_unmatched_symbol@@Base+0x1b2>
  40d656:	movsx  eax,BYTE PTR [rbp-0x21]
  40d65a:	and    eax,0x80
  40d65f:	cmp    eax,0x0
  40d662:	jne    40d682 <flatcc_json_parser_unmatched_symbol@@Base+0x1b2>
  40d668:	movsx  eax,BYTE PTR [rbp-0x21]
  40d66c:	cmp    eax,0x30
  40d66f:	jl     40d693 <flatcc_json_parser_unmatched_symbol@@Base+0x1c3>
  40d675:	movsx  eax,BYTE PTR [rbp-0x21]
  40d679:	cmp    eax,0x39
  40d67c:	jg     40d693 <flatcc_json_parser_unmatched_symbol@@Base+0x1c3>
  40d682:	mov    rax,QWORD PTR [rbp-0x18]
  40d686:	add    rax,0x1
  40d68a:	mov    QWORD PTR [rbp-0x18],rax
  40d68e:	jmp    40d5fb <flatcc_json_parser_unmatched_symbol@@Base+0x12b>
  40d693:	movsx  eax,BYTE PTR [rbp-0x21]
  40d697:	or     eax,0x20
  40d69a:	mov    cl,al
  40d69c:	mov    BYTE PTR [rbp-0x21],cl
  40d69f:	movsx  eax,BYTE PTR [rbp-0x21]
  40d6a3:	cmp    eax,0x61
  40d6a6:	jl     40d6ca <flatcc_json_parser_unmatched_symbol@@Base+0x1fa>
  40d6ac:	movsx  eax,BYTE PTR [rbp-0x21]
  40d6b0:	cmp    eax,0x7a
  40d6b3:	jg     40d6ca <flatcc_json_parser_unmatched_symbol@@Base+0x1fa>
  40d6b9:	mov    rax,QWORD PTR [rbp-0x18]
  40d6bd:	add    rax,0x1
  40d6c1:	mov    QWORD PTR [rbp-0x18],rax
  40d6c5:	jmp    40d5fb <flatcc_json_parser_unmatched_symbol@@Base+0x12b>
  40d6ca:	jmp    40d6cf <flatcc_json_parser_unmatched_symbol@@Base+0x1ff>
  40d6cf:	movsx  eax,BYTE PTR [rbp-0x22]
  40d6d3:	cmp    eax,0x2e
  40d6d6:	jne    40d6fb <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  40d6dc:	mov    rdi,QWORD PTR [rbp-0x10]
  40d6e0:	mov    rsi,QWORD PTR [rbp-0x18]
  40d6e4:	mov    rdx,QWORD PTR [rbp-0x20]
  40d6e8:	mov    ecx,0x5
  40d6ed:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40d6f2:	mov    QWORD PTR [rbp-0x8],rax
  40d6f6:	jmp    40d7d2 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  40d6fb:	jmp    40d7ca <flatcc_json_parser_unmatched_symbol@@Base+0x2fa>
  40d700:	jmp    40d705 <flatcc_json_parser_unmatched_symbol@@Base+0x235>
  40d705:	xor    eax,eax
  40d707:	mov    cl,al
  40d709:	mov    rdx,QWORD PTR [rbp-0x18]
  40d70d:	cmp    rdx,QWORD PTR [rbp-0x20]
  40d711:	mov    BYTE PTR [rbp-0x24],cl
  40d714:	je     40d72a <flatcc_json_parser_unmatched_symbol@@Base+0x25a>
  40d71a:	mov    rax,QWORD PTR [rbp-0x18]
  40d71e:	movsx  ecx,BYTE PTR [rax]
  40d721:	cmp    ecx,0x22
  40d724:	setne  dl
  40d727:	mov    BYTE PTR [rbp-0x24],dl
  40d72a:	mov    al,BYTE PTR [rbp-0x24]
  40d72d:	test   al,0x1
  40d72f:	jne    40d73a <flatcc_json_parser_unmatched_symbol@@Base+0x26a>
  40d735:	jmp    40d781 <flatcc_json_parser_unmatched_symbol@@Base+0x2b1>
  40d73a:	mov    rax,QWORD PTR [rbp-0x18]
  40d73e:	movsx  ecx,BYTE PTR [rax]
  40d741:	cmp    ecx,0x5c
  40d744:	jne    40d770 <flatcc_json_parser_unmatched_symbol@@Base+0x2a0>
  40d74a:	mov    rax,QWORD PTR [rbp-0x20]
  40d74e:	mov    rcx,QWORD PTR [rbp-0x18]
  40d752:	sub    rax,rcx
  40d755:	cmp    rax,0x2
  40d759:	jge    40d764 <flatcc_json_parser_unmatched_symbol@@Base+0x294>
  40d75f:	jmp    40d781 <flatcc_json_parser_unmatched_symbol@@Base+0x2b1>
  40d764:	mov    rax,QWORD PTR [rbp-0x18]
  40d768:	add    rax,0x1
  40d76c:	mov    QWORD PTR [rbp-0x18],rax
  40d770:	mov    rax,QWORD PTR [rbp-0x18]
  40d774:	add    rax,0x1
  40d778:	mov    QWORD PTR [rbp-0x18],rax
  40d77c:	jmp    40d705 <flatcc_json_parser_unmatched_symbol@@Base+0x235>
  40d781:	mov    rax,QWORD PTR [rbp-0x18]
  40d785:	cmp    rax,QWORD PTR [rbp-0x20]
  40d789:	je     40d79f <flatcc_json_parser_unmatched_symbol@@Base+0x2cf>
  40d78f:	mov    rax,QWORD PTR [rbp-0x18]
  40d793:	movsx  ecx,BYTE PTR [rax]
  40d796:	cmp    ecx,0x22
  40d799:	je     40d7be <flatcc_json_parser_unmatched_symbol@@Base+0x2ee>
  40d79f:	mov    rdi,QWORD PTR [rbp-0x10]
  40d7a3:	mov    rsi,QWORD PTR [rbp-0x18]
  40d7a7:	mov    rdx,QWORD PTR [rbp-0x20]
  40d7ab:	mov    ecx,0x14
  40d7b0:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40d7b5:	mov    QWORD PTR [rbp-0x8],rax
  40d7b9:	jmp    40d7d2 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  40d7be:	mov    rax,QWORD PTR [rbp-0x18]
  40d7c2:	add    rax,0x1
  40d7c6:	mov    QWORD PTR [rbp-0x18],rax
  40d7ca:	mov    rax,QWORD PTR [rbp-0x18]
  40d7ce:	mov    QWORD PTR [rbp-0x8],rax
  40d7d2:	mov    rax,QWORD PTR [rbp-0x8]
  40d7d6:	add    rsp,0x30
  40d7da:	pop    rbp
  40d7db:	ret    
  40d7dc:	nop    DWORD PTR [rax+0x0]

000000000040d7e0 <flatcc_json_parser_generic_json@@Base>:
  40d7e0:	push   rbp
  40d7e1:	mov    rbp,rsp
  40d7e4:	sub    rsp,0x250
  40d7eb:	lea    rax,[rbp-0x220]
  40d7f2:	mov    QWORD PTR [rbp-0x10],rdi
  40d7f6:	mov    QWORD PTR [rbp-0x18],rsi
  40d7fa:	mov    QWORD PTR [rbp-0x20],rdx
  40d7fe:	mov    DWORD PTR [rbp-0x240],0x0
  40d808:	mov    QWORD PTR [rbp-0x228],rax
  40d80f:	mov    rax,QWORD PTR [rbp-0x228]
  40d816:	add    rax,0x200
  40d81c:	mov    QWORD PTR [rbp-0x230],rax
  40d823:	mov    rax,QWORD PTR [rbp-0x18]
  40d827:	cmp    rax,QWORD PTR [rbp-0x20]
  40d82b:	jne    40d83e <flatcc_json_parser_generic_json@@Base+0x5e>
  40d831:	mov    rax,QWORD PTR [rbp-0x18]
  40d835:	mov    QWORD PTR [rbp-0x8],rax
  40d839:	jmp    40dce7 <flatcc_json_parser_generic_json@@Base+0x507>
  40d83e:	lea    rax,[rbp-0x220]
  40d845:	mov    rcx,QWORD PTR [rbp-0x228]
  40d84c:	cmp    rcx,rax
  40d84f:	je     40d920 <flatcc_json_parser_generic_json@@Base+0x140>
  40d855:	mov    rax,QWORD PTR [rbp-0x228]
  40d85c:	movsx  ecx,BYTE PTR [rax-0x1]
  40d860:	cmp    ecx,0x7d
  40d863:	jne    40d920 <flatcc_json_parser_generic_json@@Base+0x140>
  40d869:	mov    rdi,QWORD PTR [rbp-0x10]
  40d86d:	mov    rsi,QWORD PTR [rbp-0x18]
  40d871:	mov    rdx,QWORD PTR [rbp-0x20]
  40d875:	call   40e190 <flatcc_json_parser_float@@Base+0x2b0>
  40d87a:	mov    QWORD PTR [rbp-0x18],rax
  40d87e:	mov    rdi,QWORD PTR [rbp-0x10]
  40d882:	mov    rsi,QWORD PTR [rbp-0x18]
  40d886:	mov    rdx,QWORD PTR [rbp-0x20]
  40d88a:	call   40d5d0 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
  40d88f:	mov    QWORD PTR [rbp-0x18],rax
  40d893:	mov    rdi,QWORD PTR [rbp-0x10]
  40d897:	mov    rsi,QWORD PTR [rbp-0x18]
  40d89b:	mov    rdx,QWORD PTR [rbp-0x20]
  40d89f:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d8a4:	mov    QWORD PTR [rbp-0x18],rax
  40d8a8:	mov    rax,QWORD PTR [rbp-0x18]
  40d8ac:	cmp    rax,QWORD PTR [rbp-0x20]
  40d8b0:	jne    40d8d5 <flatcc_json_parser_generic_json@@Base+0xf5>
  40d8b6:	mov    rdi,QWORD PTR [rbp-0x10]
  40d8ba:	mov    rsi,QWORD PTR [rbp-0x18]
  40d8be:	mov    rdx,QWORD PTR [rbp-0x20]
  40d8c2:	mov    ecx,0xa
  40d8c7:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40d8cc:	mov    QWORD PTR [rbp-0x8],rax
  40d8d0:	jmp    40dce7 <flatcc_json_parser_generic_json@@Base+0x507>
  40d8d5:	mov    rax,QWORD PTR [rbp-0x18]
  40d8d9:	movsx  ecx,BYTE PTR [rax]
  40d8dc:	cmp    ecx,0x3a
  40d8df:	je     40d904 <flatcc_json_parser_generic_json@@Base+0x124>
  40d8e5:	mov    rdi,QWORD PTR [rbp-0x10]
  40d8e9:	mov    rsi,QWORD PTR [rbp-0x18]
  40d8ed:	mov    rdx,QWORD PTR [rbp-0x20]
  40d8f1:	mov    ecx,0x4
  40d8f6:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40d8fb:	mov    QWORD PTR [rbp-0x8],rax
  40d8ff:	jmp    40dce7 <flatcc_json_parser_generic_json@@Base+0x507>
  40d904:	mov    rdi,QWORD PTR [rbp-0x10]
  40d908:	mov    rax,QWORD PTR [rbp-0x18]
  40d90c:	add    rax,0x1
  40d910:	mov    rdx,QWORD PTR [rbp-0x20]
  40d914:	mov    rsi,rax
  40d917:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40d91c:	mov    QWORD PTR [rbp-0x18],rax
  40d920:	mov    rax,QWORD PTR [rbp-0x18]
  40d924:	movsx  ecx,BYTE PTR [rax]
  40d927:	add    ecx,0xffffffde
  40d92a:	mov    eax,ecx
  40d92c:	sub    ecx,0x59
  40d92f:	mov    QWORD PTR [rbp-0x248],rax
  40d936:	mov    DWORD PTR [rbp-0x24c],ecx
  40d93c:	ja     40db57 <flatcc_json_parser_generic_json@@Base+0x377>
  40d942:	lea    rax,[rip+0x60df]        # 413a28 <flatcc_builder_padding_base@@Base+0x16b8>
  40d949:	mov    rcx,QWORD PTR [rbp-0x248]
  40d950:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40d954:	add    rdx,rax
  40d957:	jmp    rdx
  40d959:	mov    rdi,QWORD PTR [rbp-0x10]
  40d95d:	mov    rsi,QWORD PTR [rbp-0x18]
  40d961:	mov    rdx,QWORD PTR [rbp-0x20]
  40d965:	call   40e240 <flatcc_json_parser_float@@Base+0x360>
  40d96a:	mov    QWORD PTR [rbp-0x18],rax
  40d96e:	xor    eax,eax
  40d970:	mov    cl,al
  40d972:	mov    rdx,QWORD PTR [rbp-0x18]
  40d976:	cmp    rdx,QWORD PTR [rbp-0x20]
  40d97a:	mov    BYTE PTR [rbp-0x24d],cl
  40d980:	je     40d999 <flatcc_json_parser_generic_json@@Base+0x1b9>
  40d986:	mov    rax,QWORD PTR [rbp-0x18]
  40d98a:	movsx  ecx,BYTE PTR [rax]
  40d98d:	cmp    ecx,0x22
  40d990:	setne  dl
  40d993:	mov    BYTE PTR [rbp-0x24d],dl
  40d999:	mov    al,BYTE PTR [rbp-0x24d]
  40d99f:	test   al,0x1
  40d9a1:	jne    40d9ac <flatcc_json_parser_generic_json@@Base+0x1cc>
  40d9a7:	jmp    40da05 <flatcc_json_parser_generic_json@@Base+0x225>
  40d9ac:	mov    rdi,QWORD PTR [rbp-0x10]
  40d9b0:	mov    rsi,QWORD PTR [rbp-0x18]
  40d9b4:	mov    rdx,QWORD PTR [rbp-0x20]
  40d9b8:	call   40c570 <flatcc_json_parser_string_part@@Base>
  40d9bd:	mov    QWORD PTR [rbp-0x18],rax
  40d9c1:	mov    rax,QWORD PTR [rbp-0x18]
  40d9c5:	cmp    rax,QWORD PTR [rbp-0x20]
  40d9c9:	je     40d9e4 <flatcc_json_parser_generic_json@@Base+0x204>
  40d9cf:	mov    rax,QWORD PTR [rbp-0x18]
  40d9d3:	movsx  ecx,BYTE PTR [rax]
  40d9d6:	cmp    ecx,0x22
  40d9d9:	jne    40d9e4 <flatcc_json_parser_generic_json@@Base+0x204>
  40d9df:	jmp    40da05 <flatcc_json_parser_generic_json@@Base+0x225>
  40d9e4:	lea    rcx,[rbp-0x23c]
  40d9eb:	mov    rdi,QWORD PTR [rbp-0x10]
  40d9ef:	mov    rsi,QWORD PTR [rbp-0x18]
  40d9f3:	mov    rdx,QWORD PTR [rbp-0x20]
  40d9f7:	call   40c8a0 <flatcc_json_parser_string_escape@@Base>
  40d9fc:	mov    QWORD PTR [rbp-0x18],rax
  40da00:	jmp    40d96e <flatcc_json_parser_generic_json@@Base+0x18e>
  40da05:	mov    rdi,QWORD PTR [rbp-0x10]
  40da09:	mov    rsi,QWORD PTR [rbp-0x18]
  40da0d:	mov    rdx,QWORD PTR [rbp-0x20]
  40da11:	call   40e2b0 <flatcc_json_parser_float@@Base+0x3d0>
  40da16:	mov    QWORD PTR [rbp-0x18],rax
  40da1a:	jmp    40dbab <flatcc_json_parser_generic_json@@Base+0x3cb>
  40da1f:	mov    rdi,QWORD PTR [rbp-0x10]
  40da23:	mov    rsi,QWORD PTR [rbp-0x18]
  40da27:	mov    rdx,QWORD PTR [rbp-0x20]
  40da2b:	call   40e320 <flatcc_json_parser_float@@Base+0x440>
  40da30:	mov    QWORD PTR [rbp-0x18],rax
  40da34:	jmp    40dbab <flatcc_json_parser_generic_json@@Base+0x3cb>
  40da39:	mov    rax,QWORD PTR [rbp-0x228]
  40da40:	cmp    rax,QWORD PTR [rbp-0x230]
  40da47:	jne    40da6c <flatcc_json_parser_generic_json@@Base+0x28c>
  40da4d:	mov    rdi,QWORD PTR [rbp-0x10]
  40da51:	mov    rsi,QWORD PTR [rbp-0x18]
  40da55:	mov    rdx,QWORD PTR [rbp-0x20]
  40da59:	mov    ecx,0x2
  40da5e:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40da63:	mov    QWORD PTR [rbp-0x8],rax
  40da67:	jmp    40dce7 <flatcc_json_parser_generic_json@@Base+0x507>
  40da6c:	mov    rax,QWORD PTR [rbp-0x228]
  40da73:	mov    rcx,rax
  40da76:	add    rcx,0x1
  40da7a:	mov    QWORD PTR [rbp-0x228],rcx
  40da81:	mov    BYTE PTR [rax],0x5d
  40da84:	mov    rdi,QWORD PTR [rbp-0x10]
  40da88:	mov    rax,QWORD PTR [rbp-0x18]
  40da8c:	add    rax,0x1
  40da90:	mov    rdx,QWORD PTR [rbp-0x20]
  40da94:	mov    rsi,rax
  40da97:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40da9c:	mov    QWORD PTR [rbp-0x18],rax
  40daa0:	mov    rax,QWORD PTR [rbp-0x18]
  40daa4:	cmp    rax,QWORD PTR [rbp-0x20]
  40daa8:	je     40dac3 <flatcc_json_parser_generic_json@@Base+0x2e3>
  40daae:	mov    rax,QWORD PTR [rbp-0x18]
  40dab2:	movsx  ecx,BYTE PTR [rax]
  40dab5:	cmp    ecx,0x5d
  40dab8:	jne    40dac3 <flatcc_json_parser_generic_json@@Base+0x2e3>
  40dabe:	jmp    40dbab <flatcc_json_parser_generic_json@@Base+0x3cb>
  40dac3:	jmp    40d823 <flatcc_json_parser_generic_json@@Base+0x43>
  40dac8:	mov    rax,QWORD PTR [rbp-0x228]
  40dacf:	cmp    rax,QWORD PTR [rbp-0x230]
  40dad6:	jne    40dafb <flatcc_json_parser_generic_json@@Base+0x31b>
  40dadc:	mov    rdi,QWORD PTR [rbp-0x10]
  40dae0:	mov    rsi,QWORD PTR [rbp-0x18]
  40dae4:	mov    rdx,QWORD PTR [rbp-0x20]
  40dae8:	mov    ecx,0x2
  40daed:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40daf2:	mov    QWORD PTR [rbp-0x8],rax
  40daf6:	jmp    40dce7 <flatcc_json_parser_generic_json@@Base+0x507>
  40dafb:	mov    rax,QWORD PTR [rbp-0x228]
  40db02:	mov    rcx,rax
  40db05:	add    rcx,0x1
  40db09:	mov    QWORD PTR [rbp-0x228],rcx
  40db10:	mov    BYTE PTR [rax],0x7d
  40db13:	mov    rdi,QWORD PTR [rbp-0x10]
  40db17:	mov    rax,QWORD PTR [rbp-0x18]
  40db1b:	add    rax,0x1
  40db1f:	mov    rdx,QWORD PTR [rbp-0x20]
  40db23:	mov    rsi,rax
  40db26:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40db2b:	mov    QWORD PTR [rbp-0x18],rax
  40db2f:	mov    rax,QWORD PTR [rbp-0x18]
  40db33:	cmp    rax,QWORD PTR [rbp-0x20]
  40db37:	je     40db52 <flatcc_json_parser_generic_json@@Base+0x372>
  40db3d:	mov    rax,QWORD PTR [rbp-0x18]
  40db41:	movsx  ecx,BYTE PTR [rax]
  40db44:	cmp    ecx,0x7d
  40db47:	jne    40db52 <flatcc_json_parser_generic_json@@Base+0x372>
  40db4d:	jmp    40dbab <flatcc_json_parser_generic_json@@Base+0x3cb>
  40db52:	jmp    40d823 <flatcc_json_parser_generic_json@@Base+0x43>
  40db57:	mov    rdi,QWORD PTR [rbp-0x10]
  40db5b:	mov    rax,QWORD PTR [rbp-0x18]
  40db5f:	mov    QWORD PTR [rbp-0x238],rax
  40db66:	mov    rdx,QWORD PTR [rbp-0x20]
  40db6a:	mov    rsi,rax
  40db6d:	call   40d030 <flatcc_json_parser_skip_constant@@Base>
  40db72:	mov    QWORD PTR [rbp-0x18],rax
  40db76:	mov    rax,QWORD PTR [rbp-0x238]
  40db7d:	cmp    rax,QWORD PTR [rbp-0x18]
  40db81:	jne    40dba6 <flatcc_json_parser_generic_json@@Base+0x3c6>
  40db87:	mov    rdi,QWORD PTR [rbp-0x10]
  40db8b:	mov    rsi,QWORD PTR [rbp-0x18]
  40db8f:	mov    rdx,QWORD PTR [rbp-0x20]
  40db93:	mov    ecx,0x5
  40db98:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40db9d:	mov    QWORD PTR [rbp-0x8],rax
  40dba1:	jmp    40dce7 <flatcc_json_parser_generic_json@@Base+0x507>
  40dba6:	jmp    40dbab <flatcc_json_parser_generic_json@@Base+0x3cb>
  40dbab:	jmp    40dbb0 <flatcc_json_parser_generic_json@@Base+0x3d0>
  40dbb0:	xor    eax,eax
  40dbb2:	mov    cl,al
  40dbb4:	mov    rdx,QWORD PTR [rbp-0x18]
  40dbb8:	cmp    rdx,QWORD PTR [rbp-0x20]
  40dbbc:	mov    BYTE PTR [rbp-0x24e],cl
  40dbc2:	je     40dbe2 <flatcc_json_parser_generic_json@@Base+0x402>
  40dbc8:	lea    rax,[rbp-0x220]
  40dbcf:	mov    rcx,QWORD PTR [rbp-0x228]
  40dbd6:	cmp    rcx,rax
  40dbd9:	setne  dl
  40dbdc:	mov    BYTE PTR [rbp-0x24e],dl
  40dbe2:	mov    al,BYTE PTR [rbp-0x24e]
  40dbe8:	test   al,0x1
  40dbea:	jne    40dbf5 <flatcc_json_parser_generic_json@@Base+0x415>
  40dbf0:	jmp    40dc80 <flatcc_json_parser_generic_json@@Base+0x4a0>
  40dbf5:	mov    rax,QWORD PTR [rbp-0x228]
  40dbfc:	add    rax,0xffffffffffffffff
  40dc00:	mov    QWORD PTR [rbp-0x228],rax
  40dc07:	mov    rax,QWORD PTR [rbp-0x228]
  40dc0e:	movsx  ecx,BYTE PTR [rax]
  40dc11:	cmp    ecx,0x5d
  40dc14:	jne    40dc3b <flatcc_json_parser_generic_json@@Base+0x45b>
  40dc1a:	mov    rdi,QWORD PTR [rbp-0x10]
  40dc1e:	mov    rsi,QWORD PTR [rbp-0x18]
  40dc22:	mov    rdx,QWORD PTR [rbp-0x20]
  40dc26:	lea    rcx,[rbp-0x240]
  40dc2d:	call   40e780 <flatcc_json_parser_float@@Base+0x8a0>
  40dc32:	mov    QWORD PTR [rbp-0x18],rax
  40dc36:	jmp    40dc57 <flatcc_json_parser_generic_json@@Base+0x477>
  40dc3b:	mov    rdi,QWORD PTR [rbp-0x10]
  40dc3f:	mov    rsi,QWORD PTR [rbp-0x18]
  40dc43:	mov    rdx,QWORD PTR [rbp-0x20]
  40dc47:	lea    rcx,[rbp-0x240]
  40dc4e:	call   40e8f0 <flatcc_json_parser_float@@Base+0xa10>
  40dc53:	mov    QWORD PTR [rbp-0x18],rax
  40dc57:	cmp    DWORD PTR [rbp-0x240],0x0
  40dc5e:	je     40dc7b <flatcc_json_parser_generic_json@@Base+0x49b>
  40dc64:	mov    rax,QWORD PTR [rbp-0x228]
  40dc6b:	add    rax,0x1
  40dc6f:	mov    QWORD PTR [rbp-0x228],rax
  40dc76:	jmp    40d823 <flatcc_json_parser_generic_json@@Base+0x43>
  40dc7b:	jmp    40dbb0 <flatcc_json_parser_generic_json@@Base+0x3d0>
  40dc80:	mov    rax,QWORD PTR [rbp-0x18]
  40dc84:	cmp    rax,QWORD PTR [rbp-0x20]
  40dc88:	jne    40dcdf <flatcc_json_parser_generic_json@@Base+0x4ff>
  40dc8e:	lea    rax,[rbp-0x220]
  40dc95:	mov    rcx,QWORD PTR [rbp-0x228]
  40dc9c:	cmp    rcx,rax
  40dc9f:	je     40dcdf <flatcc_json_parser_generic_json@@Base+0x4ff>
  40dca5:	mov    rdi,QWORD PTR [rbp-0x10]
  40dca9:	mov    rsi,QWORD PTR [rbp-0x18]
  40dcad:	mov    rdx,QWORD PTR [rbp-0x20]
  40dcb1:	mov    rax,QWORD PTR [rbp-0x228]
  40dcb8:	movsx  ecx,BYTE PTR [rax-0x1]
  40dcbc:	cmp    ecx,0x5d
  40dcbf:	mov    ecx,0x9
  40dcc4:	mov    r8d,0xa
  40dcca:	cmove  r8d,ecx
  40dcce:	mov    ecx,r8d
  40dcd1:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40dcd6:	mov    QWORD PTR [rbp-0x8],rax
  40dcda:	jmp    40dce7 <flatcc_json_parser_generic_json@@Base+0x507>
  40dcdf:	mov    rax,QWORD PTR [rbp-0x18]
  40dce3:	mov    QWORD PTR [rbp-0x8],rax
  40dce7:	mov    rax,QWORD PTR [rbp-0x8]
  40dceb:	add    rsp,0x250
  40dcf2:	pop    rbp
  40dcf3:	ret    
  40dcf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dcfe:	xchg   ax,ax

000000000040dd00 <flatcc_json_parser_double@@Base>:
  40dd00:	push   rbp
  40dd01:	mov    rbp,rsp
  40dd04:	sub    rsp,0x40
  40dd08:	mov    QWORD PTR [rbp-0x10],rdi
  40dd0c:	mov    QWORD PTR [rbp-0x18],rsi
  40dd10:	mov    QWORD PTR [rbp-0x20],rdx
  40dd14:	mov    QWORD PTR [rbp-0x28],rcx
  40dd18:	mov    rcx,QWORD PTR [rbp-0x28]
  40dd1c:	vxorps xmm0,xmm0,xmm0
  40dd20:	vmovsd QWORD PTR [rcx],xmm0
  40dd24:	mov    rcx,QWORD PTR [rbp-0x18]
  40dd28:	cmp    rcx,QWORD PTR [rbp-0x20]
  40dd2c:	jne    40dd3f <flatcc_json_parser_double@@Base+0x3f>
  40dd32:	mov    rax,QWORD PTR [rbp-0x18]
  40dd36:	mov    QWORD PTR [rbp-0x8],rax
  40dd3a:	jmp    40de9d <flatcc_json_parser_double@@Base+0x19d>
  40dd3f:	mov    rax,QWORD PTR [rbp-0x18]
  40dd43:	mov    QWORD PTR [rbp-0x38],rax
  40dd47:	mov    rax,QWORD PTR [rbp-0x18]
  40dd4b:	movsx  ecx,BYTE PTR [rax]
  40dd4e:	cmp    ecx,0x2d
  40dd51:	jne    40dd63 <flatcc_json_parser_double@@Base+0x63>
  40dd57:	mov    rax,QWORD PTR [rbp-0x38]
  40dd5b:	add    rax,0x1
  40dd5f:	mov    QWORD PTR [rbp-0x38],rax
  40dd63:	mov    rax,QWORD PTR [rbp-0x20]
  40dd67:	mov    rcx,QWORD PTR [rbp-0x38]
  40dd6b:	sub    rax,rcx
  40dd6e:	cmp    rax,0x1
  40dd72:	jle    40ddc8 <flatcc_json_parser_double@@Base+0xc8>
  40dd78:	mov    rax,QWORD PTR [rbp-0x38]
  40dd7c:	movsx  ecx,BYTE PTR [rax]
  40dd7f:	cmp    ecx,0x2e
  40dd82:	je     40dda9 <flatcc_json_parser_double@@Base+0xa9>
  40dd88:	mov    rax,QWORD PTR [rbp-0x38]
  40dd8c:	movsx  ecx,BYTE PTR [rax]
  40dd8f:	cmp    ecx,0x30
  40dd92:	jne    40ddc8 <flatcc_json_parser_double@@Base+0xc8>
  40dd98:	mov    rax,QWORD PTR [rbp-0x38]
  40dd9c:	movsx  ecx,BYTE PTR [rax+0x1]
  40dda0:	cmp    ecx,0x30
  40dda3:	jne    40ddc8 <flatcc_json_parser_double@@Base+0xc8>
  40dda9:	mov    rdi,QWORD PTR [rbp-0x10]
  40ddad:	mov    rsi,QWORD PTR [rbp-0x18]
  40ddb1:	mov    rdx,QWORD PTR [rbp-0x20]
  40ddb5:	mov    ecx,0x6
  40ddba:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40ddbf:	mov    QWORD PTR [rbp-0x8],rax
  40ddc3:	jmp    40de9d <flatcc_json_parser_double@@Base+0x19d>
  40ddc8:	mov    rdi,QWORD PTR [rbp-0x18]
  40ddcc:	mov    rax,QWORD PTR [rbp-0x20]
  40ddd0:	mov    rcx,QWORD PTR [rbp-0x18]
  40ddd4:	sub    rax,rcx
  40ddd7:	mov    edx,eax
  40ddd9:	mov    rax,QWORD PTR [rbp-0x28]
  40dddd:	mov    esi,edx
  40dddf:	mov    rdx,rax
  40dde2:	call   40deb0 <flatcc_json_parser_double@@Base+0x1b0>
  40dde7:	mov    QWORD PTR [rbp-0x30],rax
  40ddeb:	cmp    QWORD PTR [rbp-0x30],0x0
  40ddf0:	je     40de04 <flatcc_json_parser_double@@Base+0x104>
  40ddf6:	mov    rax,QWORD PTR [rbp-0x30]
  40ddfa:	cmp    rax,QWORD PTR [rbp-0x18]
  40ddfe:	jne    40de95 <flatcc_json_parser_double@@Base+0x195>
  40de04:	vmovsd xmm0,QWORD PTR [rip+0x67c4]        # 4145d0 <flatcc_builder_padding_base@@Base+0x2260>
  40de0c:	xor    eax,eax
  40de0e:	mov    rcx,QWORD PTR [rbp-0x28]
  40de12:	vmovsd xmm1,QWORD PTR [rcx]
  40de16:	vmovaps xmm2,xmm1
  40de1a:	vmovdqa xmm3,XMMWORD PTR [rip+0x686e]        # 414690 <flatcc_builder_padding_base@@Base+0x2320>
  40de22:	vpand  xmm2,xmm2,xmm3
  40de26:	vmovq  rcx,xmm1
  40de2b:	cmp    rcx,0x0
  40de2f:	mov    edx,0xffffffff
  40de34:	mov    esi,0x1
  40de39:	cmovl  esi,edx
  40de3c:	vucomisd xmm2,xmm0
  40de40:	setnp  dil
  40de44:	sete   r8b
  40de48:	test   r8b,dil
  40de4b:	cmovne eax,esi
  40de4e:	cmp    eax,0x0
  40de51:	je     40de76 <flatcc_json_parser_double@@Base+0x176>
  40de57:	mov    rdi,QWORD PTR [rbp-0x10]
  40de5b:	mov    rsi,QWORD PTR [rbp-0x18]
  40de5f:	mov    rdx,QWORD PTR [rbp-0x20]
  40de63:	mov    ecx,0x7
  40de68:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40de6d:	mov    QWORD PTR [rbp-0x8],rax
  40de71:	jmp    40de9d <flatcc_json_parser_double@@Base+0x19d>
  40de76:	mov    rdi,QWORD PTR [rbp-0x10]
  40de7a:	mov    rsi,QWORD PTR [rbp-0x18]
  40de7e:	mov    rdx,QWORD PTR [rbp-0x20]
  40de82:	mov    ecx,0x6
  40de87:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40de8c:	mov    QWORD PTR [rbp-0x8],rax
  40de90:	jmp    40de9d <flatcc_json_parser_double@@Base+0x19d>
  40de95:	mov    rax,QWORD PTR [rbp-0x30]
  40de99:	mov    QWORD PTR [rbp-0x8],rax
  40de9d:	mov    rax,QWORD PTR [rbp-0x8]
  40dea1:	add    rsp,0x40
  40dea5:	pop    rbp
  40dea6:	ret    
  40dea7:	nop    WORD PTR [rax+rax*1+0x0]
  40deb0:	push   rbp
  40deb1:	mov    rbp,rsp
  40deb4:	sub    rsp,0x20
  40deb8:	mov    QWORD PTR [rbp-0x8],rdi
  40debc:	mov    DWORD PTR [rbp-0xc],esi
  40debf:	mov    QWORD PTR [rbp-0x18],rdx
  40dec3:	mov    rdi,QWORD PTR [rbp-0x8]
  40dec7:	mov    esi,DWORD PTR [rbp-0xc]
  40deca:	mov    rdx,QWORD PTR [rbp-0x18]
  40dece:	call   410a40 <flatcc_json_parser_struct_as_root@@Base+0x180>
  40ded3:	add    rsp,0x20
  40ded7:	pop    rbp
  40ded8:	ret    
  40ded9:	nop    DWORD PTR [rax+0x0]

000000000040dee0 <flatcc_json_parser_float@@Base>:
  40dee0:	push   rbp
  40dee1:	mov    rbp,rsp
  40dee4:	sub    rsp,0x40
  40dee8:	mov    QWORD PTR [rbp-0x10],rdi
  40deec:	mov    QWORD PTR [rbp-0x18],rsi
  40def0:	mov    QWORD PTR [rbp-0x20],rdx
  40def4:	mov    QWORD PTR [rbp-0x28],rcx
  40def8:	mov    rcx,QWORD PTR [rbp-0x28]
  40defc:	vxorps xmm0,xmm0,xmm0
  40df00:	vmovss DWORD PTR [rcx],xmm0
  40df04:	mov    rcx,QWORD PTR [rbp-0x18]
  40df08:	cmp    rcx,QWORD PTR [rbp-0x20]
  40df0c:	jne    40df1f <flatcc_json_parser_float@@Base+0x3f>
  40df12:	mov    rax,QWORD PTR [rbp-0x18]
  40df16:	mov    QWORD PTR [rbp-0x8],rax
  40df1a:	jmp    40e07c <flatcc_json_parser_float@@Base+0x19c>
  40df1f:	mov    rax,QWORD PTR [rbp-0x18]
  40df23:	mov    QWORD PTR [rbp-0x38],rax
  40df27:	mov    rax,QWORD PTR [rbp-0x18]
  40df2b:	movsx  ecx,BYTE PTR [rax]
  40df2e:	cmp    ecx,0x2d
  40df31:	jne    40df43 <flatcc_json_parser_float@@Base+0x63>
  40df37:	mov    rax,QWORD PTR [rbp-0x38]
  40df3b:	add    rax,0x1
  40df3f:	mov    QWORD PTR [rbp-0x38],rax
  40df43:	mov    rax,QWORD PTR [rbp-0x20]
  40df47:	mov    rcx,QWORD PTR [rbp-0x38]
  40df4b:	sub    rax,rcx
  40df4e:	cmp    rax,0x1
  40df52:	jle    40dfa8 <flatcc_json_parser_float@@Base+0xc8>
  40df58:	mov    rax,QWORD PTR [rbp-0x38]
  40df5c:	movsx  ecx,BYTE PTR [rax]
  40df5f:	cmp    ecx,0x2e
  40df62:	je     40df89 <flatcc_json_parser_float@@Base+0xa9>
  40df68:	mov    rax,QWORD PTR [rbp-0x38]
  40df6c:	movsx  ecx,BYTE PTR [rax]
  40df6f:	cmp    ecx,0x30
  40df72:	jne    40dfa8 <flatcc_json_parser_float@@Base+0xc8>
  40df78:	mov    rax,QWORD PTR [rbp-0x38]
  40df7c:	movsx  ecx,BYTE PTR [rax+0x1]
  40df80:	cmp    ecx,0x30
  40df83:	jne    40dfa8 <flatcc_json_parser_float@@Base+0xc8>
  40df89:	mov    rdi,QWORD PTR [rbp-0x10]
  40df8d:	mov    rsi,QWORD PTR [rbp-0x18]
  40df91:	mov    rdx,QWORD PTR [rbp-0x20]
  40df95:	mov    ecx,0x6
  40df9a:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40df9f:	mov    QWORD PTR [rbp-0x8],rax
  40dfa3:	jmp    40e07c <flatcc_json_parser_float@@Base+0x19c>
  40dfa8:	mov    rdi,QWORD PTR [rbp-0x18]
  40dfac:	mov    rax,QWORD PTR [rbp-0x20]
  40dfb0:	mov    rcx,QWORD PTR [rbp-0x18]
  40dfb4:	sub    rax,rcx
  40dfb7:	mov    edx,eax
  40dfb9:	mov    rax,QWORD PTR [rbp-0x28]
  40dfbd:	mov    esi,edx
  40dfbf:	mov    rdx,rax
  40dfc2:	call   40e090 <flatcc_json_parser_float@@Base+0x1b0>
  40dfc7:	mov    QWORD PTR [rbp-0x30],rax
  40dfcb:	cmp    QWORD PTR [rbp-0x30],0x0
  40dfd0:	je     40dfe4 <flatcc_json_parser_float@@Base+0x104>
  40dfd6:	mov    rax,QWORD PTR [rbp-0x30]
  40dfda:	cmp    rax,QWORD PTR [rbp-0x18]
  40dfde:	jne    40e074 <flatcc_json_parser_float@@Base+0x194>
  40dfe4:	vmovss xmm0,DWORD PTR [rip+0x66d4]        # 4146c0 <flatcc_builder_padding_base@@Base+0x2350>
  40dfec:	xor    eax,eax
  40dfee:	mov    rcx,QWORD PTR [rbp-0x28]
  40dff2:	vmovss xmm1,DWORD PTR [rcx]
  40dff6:	vmovaps xmm2,xmm1
  40dffa:	vbroadcastss xmm3,DWORD PTR [rip+0x66c1]        # 4146c4 <flatcc_builder_padding_base@@Base+0x2354>
  40e003:	vpand  xmm2,xmm2,xmm3
  40e007:	vmovd  edx,xmm1
  40e00b:	cmp    edx,0x0
  40e00e:	mov    edx,0xffffffff
  40e013:	mov    esi,0x1
  40e018:	cmovl  esi,edx
  40e01b:	vucomiss xmm2,xmm0
  40e01f:	setnp  dil
  40e023:	sete   r8b
  40e027:	test   r8b,dil
  40e02a:	cmovne eax,esi
  40e02d:	cmp    eax,0x0
  40e030:	je     40e055 <flatcc_json_parser_float@@Base+0x175>
  40e036:	mov    rdi,QWORD PTR [rbp-0x10]
  40e03a:	mov    rsi,QWORD PTR [rbp-0x18]
  40e03e:	mov    rdx,QWORD PTR [rbp-0x20]
  40e042:	mov    ecx,0x7
  40e047:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e04c:	mov    QWORD PTR [rbp-0x8],rax
  40e050:	jmp    40e07c <flatcc_json_parser_float@@Base+0x19c>
  40e055:	mov    rdi,QWORD PTR [rbp-0x10]
  40e059:	mov    rsi,QWORD PTR [rbp-0x18]
  40e05d:	mov    rdx,QWORD PTR [rbp-0x20]
  40e061:	mov    ecx,0x6
  40e066:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e06b:	mov    QWORD PTR [rbp-0x8],rax
  40e06f:	jmp    40e07c <flatcc_json_parser_float@@Base+0x19c>
  40e074:	mov    rax,QWORD PTR [rbp-0x30]
  40e078:	mov    QWORD PTR [rbp-0x8],rax
  40e07c:	mov    rax,QWORD PTR [rbp-0x8]
  40e080:	add    rsp,0x40
  40e084:	pop    rbp
  40e085:	ret    
  40e086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e090:	push   rbp
  40e091:	mov    rbp,rsp
  40e094:	sub    rsp,0x40
  40e098:	mov    QWORD PTR [rbp-0x10],rdi
  40e09c:	mov    DWORD PTR [rbp-0x14],esi
  40e09f:	mov    QWORD PTR [rbp-0x20],rdx
  40e0a3:	mov    DWORD PTR [rbp-0x38],0x7f800000
  40e0aa:	mov    rdi,QWORD PTR [rbp-0x10]
  40e0ae:	mov    esi,DWORD PTR [rbp-0x14]
  40e0b1:	lea    rdx,[rbp-0x30]
  40e0b5:	call   40deb0 <flatcc_json_parser_double@@Base+0x1b0>
  40e0ba:	vmovss xmm0,DWORD PTR [rip+0x65fe]        # 4146c0 <flatcc_builder_padding_base@@Base+0x2350>
  40e0c2:	xor    esi,esi
  40e0c4:	mov    QWORD PTR [rbp-0x28],rax
  40e0c8:	vmovsd xmm1,QWORD PTR [rbp-0x30]
  40e0cd:	vcvtsd2ss xmm1,xmm2,xmm1
  40e0d1:	mov    rax,QWORD PTR [rbp-0x20]
  40e0d5:	vmovss DWORD PTR [rax],xmm1
  40e0d9:	mov    rax,QWORD PTR [rbp-0x20]
  40e0dd:	vmovss xmm1,DWORD PTR [rax]
  40e0e1:	vmovaps xmm2,xmm1
  40e0e5:	vbroadcastss xmm3,DWORD PTR [rip+0x65d6]        # 4146c4 <flatcc_builder_padding_base@@Base+0x2354>
  40e0ee:	vpand  xmm2,xmm2,xmm3
  40e0f2:	vmovd  ecx,xmm1
  40e0f6:	cmp    ecx,0x0
  40e0f9:	mov    ecx,0xffffffff
  40e0fe:	mov    r8d,0x1
  40e104:	cmovl  r8d,ecx
  40e108:	vucomiss xmm2,xmm0
  40e10c:	setnp  r9b
  40e110:	sete   r10b
  40e114:	test   r10b,r9b
  40e117:	cmovne esi,r8d
  40e11b:	cmp    esi,0x0
  40e11e:	je     40e173 <flatcc_json_parser_float@@Base+0x293>
  40e124:	vxorps xmm0,xmm0,xmm0
  40e128:	vucomisd xmm0,QWORD PTR [rbp-0x30]
  40e12d:	jbe    40e14f <flatcc_json_parser_float@@Base+0x26f>
  40e133:	vmovss xmm0,DWORD PTR [rbp-0x38]
  40e138:	vmovd  eax,xmm0
  40e13c:	xor    eax,0x80000000
  40e141:	vmovd  xmm0,eax
  40e145:	vmovss DWORD PTR [rbp-0x3c],xmm0
  40e14a:	jmp    40e159 <flatcc_json_parser_float@@Base+0x279>
  40e14f:	vmovss xmm0,DWORD PTR [rbp-0x38]
  40e154:	vmovss DWORD PTR [rbp-0x3c],xmm0
  40e159:	vmovss xmm0,DWORD PTR [rbp-0x3c]
  40e15e:	mov    rax,QWORD PTR [rbp-0x20]
  40e162:	vmovss DWORD PTR [rax],xmm0
  40e166:	mov    rax,QWORD PTR [rbp-0x10]
  40e16a:	mov    QWORD PTR [rbp-0x8],rax
  40e16e:	jmp    40e17b <flatcc_json_parser_float@@Base+0x29b>
  40e173:	mov    rax,QWORD PTR [rbp-0x28]
  40e177:	mov    QWORD PTR [rbp-0x8],rax
  40e17b:	mov    rax,QWORD PTR [rbp-0x8]
  40e17f:	add    rsp,0x40
  40e183:	pop    rbp
  40e184:	ret    
  40e185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e18f:	nop
  40e190:	push   rbp
  40e191:	mov    rbp,rsp
  40e194:	sub    rsp,0x20
  40e198:	mov    QWORD PTR [rbp-0x10],rdi
  40e19c:	mov    QWORD PTR [rbp-0x18],rsi
  40e1a0:	mov    QWORD PTR [rbp-0x20],rdx
  40e1a4:	mov    rdx,QWORD PTR [rbp-0x18]
  40e1a8:	cmp    rdx,QWORD PTR [rbp-0x20]
  40e1ac:	jne    40e1bf <flatcc_json_parser_float@@Base+0x2df>
  40e1b2:	mov    rax,QWORD PTR [rbp-0x18]
  40e1b6:	mov    QWORD PTR [rbp-0x8],rax
  40e1ba:	jmp    40e22d <flatcc_json_parser_float@@Base+0x34d>
  40e1bf:	mov    rax,QWORD PTR [rbp-0x18]
  40e1c3:	movsx  ecx,BYTE PTR [rax]
  40e1c6:	cmp    ecx,0x22
  40e1c9:	jne    40e1eb <flatcc_json_parser_float@@Base+0x30b>
  40e1cf:	mov    rax,QWORD PTR [rbp-0x18]
  40e1d3:	add    rax,0x1
  40e1d7:	mov    QWORD PTR [rbp-0x18],rax
  40e1db:	mov    rax,QWORD PTR [rbp-0x10]
  40e1df:	mov    DWORD PTR [rax+0x14],0x0
  40e1e6:	jmp    40e225 <flatcc_json_parser_float@@Base+0x345>
  40e1eb:	mov    rax,QWORD PTR [rbp-0x18]
  40e1ef:	movsx  ecx,BYTE PTR [rax]
  40e1f2:	cmp    ecx,0x2e
  40e1f5:	jne    40e21a <flatcc_json_parser_float@@Base+0x33a>
  40e1fb:	mov    rdi,QWORD PTR [rbp-0x10]
  40e1ff:	mov    rsi,QWORD PTR [rbp-0x18]
  40e203:	mov    rdx,QWORD PTR [rbp-0x20]
  40e207:	mov    ecx,0x5
  40e20c:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e211:	mov    QWORD PTR [rbp-0x8],rax
  40e215:	jmp    40e22d <flatcc_json_parser_float@@Base+0x34d>
  40e21a:	mov    rax,QWORD PTR [rbp-0x10]
  40e21e:	mov    DWORD PTR [rax+0x14],0x1
  40e225:	mov    rax,QWORD PTR [rbp-0x18]
  40e229:	mov    QWORD PTR [rbp-0x8],rax
  40e22d:	mov    rax,QWORD PTR [rbp-0x8]
  40e231:	add    rsp,0x20
  40e235:	pop    rbp
  40e236:	ret    
  40e237:	nop    WORD PTR [rax+rax*1+0x0]
  40e240:	push   rbp
  40e241:	mov    rbp,rsp
  40e244:	sub    rsp,0x20
  40e248:	mov    QWORD PTR [rbp-0x10],rdi
  40e24c:	mov    QWORD PTR [rbp-0x18],rsi
  40e250:	mov    QWORD PTR [rbp-0x20],rdx
  40e254:	mov    rdx,QWORD PTR [rbp-0x18]
  40e258:	cmp    rdx,QWORD PTR [rbp-0x20]
  40e25c:	je     40e272 <flatcc_json_parser_float@@Base+0x392>
  40e262:	mov    rax,QWORD PTR [rbp-0x18]
  40e266:	movsx  ecx,BYTE PTR [rax]
  40e269:	cmp    ecx,0x22
  40e26c:	je     40e291 <flatcc_json_parser_float@@Base+0x3b1>
  40e272:	mov    rdi,QWORD PTR [rbp-0x10]
  40e276:	mov    rsi,QWORD PTR [rbp-0x18]
  40e27a:	mov    rdx,QWORD PTR [rbp-0x20]
  40e27e:	mov    ecx,0x10
  40e283:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e288:	mov    QWORD PTR [rbp-0x8],rax
  40e28c:	jmp    40e2a1 <flatcc_json_parser_float@@Base+0x3c1>
  40e291:	mov    rax,QWORD PTR [rbp-0x18]
  40e295:	add    rax,0x1
  40e299:	mov    QWORD PTR [rbp-0x18],rax
  40e29d:	mov    QWORD PTR [rbp-0x8],rax
  40e2a1:	mov    rax,QWORD PTR [rbp-0x8]
  40e2a5:	add    rsp,0x20
  40e2a9:	pop    rbp
  40e2aa:	ret    
  40e2ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40e2b0:	push   rbp
  40e2b1:	mov    rbp,rsp
  40e2b4:	sub    rsp,0x20
  40e2b8:	mov    QWORD PTR [rbp-0x10],rdi
  40e2bc:	mov    QWORD PTR [rbp-0x18],rsi
  40e2c0:	mov    QWORD PTR [rbp-0x20],rdx
  40e2c4:	mov    rdx,QWORD PTR [rbp-0x18]
  40e2c8:	cmp    rdx,QWORD PTR [rbp-0x20]
  40e2cc:	je     40e2e2 <flatcc_json_parser_float@@Base+0x402>
  40e2d2:	mov    rax,QWORD PTR [rbp-0x18]
  40e2d6:	movsx  ecx,BYTE PTR [rax]
  40e2d9:	cmp    ecx,0x22
  40e2dc:	je     40e301 <flatcc_json_parser_float@@Base+0x421>
  40e2e2:	mov    rdi,QWORD PTR [rbp-0x10]
  40e2e6:	mov    rsi,QWORD PTR [rbp-0x18]
  40e2ea:	mov    rdx,QWORD PTR [rbp-0x20]
  40e2ee:	mov    ecx,0x14
  40e2f3:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e2f8:	mov    QWORD PTR [rbp-0x8],rax
  40e2fc:	jmp    40e311 <flatcc_json_parser_float@@Base+0x431>
  40e301:	mov    rax,QWORD PTR [rbp-0x18]
  40e305:	add    rax,0x1
  40e309:	mov    QWORD PTR [rbp-0x18],rax
  40e30d:	mov    QWORD PTR [rbp-0x8],rax
  40e311:	mov    rax,QWORD PTR [rbp-0x8]
  40e315:	add    rsp,0x20
  40e319:	pop    rbp
  40e31a:	ret    
  40e31b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e320:	push   rbp
  40e321:	mov    rbp,rsp
  40e324:	sub    rsp,0x50
  40e328:	mov    QWORD PTR [rbp-0x10],rdi
  40e32c:	mov    QWORD PTR [rbp-0x18],rsi
  40e330:	mov    QWORD PTR [rbp-0x20],rdx
  40e334:	mov    rdx,QWORD PTR [rbp-0x18]
  40e338:	cmp    rdx,QWORD PTR [rbp-0x20]
  40e33c:	jne    40e34f <flatcc_json_parser_float@@Base+0x46f>
  40e342:	mov    rax,QWORD PTR [rbp-0x18]
  40e346:	mov    QWORD PTR [rbp-0x8],rax
  40e34a:	jmp    40e767 <flatcc_json_parser_float@@Base+0x887>
  40e34f:	mov    rax,QWORD PTR [rbp-0x18]
  40e353:	movsx  ecx,BYTE PTR [rax]
  40e356:	cmp    ecx,0x2d
  40e359:	jne    40e39d <flatcc_json_parser_float@@Base+0x4bd>
  40e35f:	mov    rax,QWORD PTR [rbp-0x18]
  40e363:	add    rax,0x1
  40e367:	mov    QWORD PTR [rbp-0x18],rax
  40e36b:	mov    rax,QWORD PTR [rbp-0x18]
  40e36f:	cmp    rax,QWORD PTR [rbp-0x20]
  40e373:	jne    40e398 <flatcc_json_parser_float@@Base+0x4b8>
  40e379:	mov    rdi,QWORD PTR [rbp-0x10]
  40e37d:	mov    rsi,QWORD PTR [rbp-0x18]
  40e381:	mov    rdx,QWORD PTR [rbp-0x20]
  40e385:	mov    ecx,0x6
  40e38a:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e38f:	mov    QWORD PTR [rbp-0x8],rax
  40e393:	jmp    40e767 <flatcc_json_parser_float@@Base+0x887>
  40e398:	jmp    40e39d <flatcc_json_parser_float@@Base+0x4bd>
  40e39d:	mov    rax,QWORD PTR [rbp-0x18]
  40e3a1:	movsx  ecx,BYTE PTR [rax]
  40e3a4:	cmp    ecx,0x30
  40e3a7:	jne    40e3be <flatcc_json_parser_float@@Base+0x4de>
  40e3ad:	mov    rax,QWORD PTR [rbp-0x18]
  40e3b1:	add    rax,0x1
  40e3b5:	mov    QWORD PTR [rbp-0x18],rax
  40e3b9:	jmp    40e46b <flatcc_json_parser_float@@Base+0x58b>
  40e3be:	mov    rax,QWORD PTR [rbp-0x18]
  40e3c2:	movsx  ecx,BYTE PTR [rax]
  40e3c5:	cmp    ecx,0x31
  40e3c8:	jl     40e3de <flatcc_json_parser_float@@Base+0x4fe>
  40e3ce:	mov    rax,QWORD PTR [rbp-0x18]
  40e3d2:	movsx  ecx,BYTE PTR [rax]
  40e3d5:	cmp    ecx,0x39
  40e3d8:	jle    40e3fd <flatcc_json_parser_float@@Base+0x51d>
  40e3de:	mov    rdi,QWORD PTR [rbp-0x10]
  40e3e2:	mov    rsi,QWORD PTR [rbp-0x18]
  40e3e6:	mov    rdx,QWORD PTR [rbp-0x20]
  40e3ea:	mov    ecx,0x6
  40e3ef:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e3f4:	mov    QWORD PTR [rbp-0x8],rax
  40e3f8:	jmp    40e767 <flatcc_json_parser_float@@Base+0x887>
  40e3fd:	mov    rax,QWORD PTR [rbp-0x18]
  40e401:	add    rax,0x1
  40e405:	mov    QWORD PTR [rbp-0x18],rax
  40e409:	xor    eax,eax
  40e40b:	mov    cl,al
  40e40d:	mov    rdx,QWORD PTR [rbp-0x18]
  40e411:	cmp    rdx,QWORD PTR [rbp-0x20]
  40e415:	mov    BYTE PTR [rbp-0x21],cl
  40e418:	je     40e445 <flatcc_json_parser_float@@Base+0x565>
  40e41e:	xor    eax,eax
  40e420:	mov    cl,al
  40e422:	mov    rdx,QWORD PTR [rbp-0x18]
  40e426:	movsx  eax,BYTE PTR [rdx]
  40e429:	cmp    eax,0x30
  40e42c:	mov    BYTE PTR [rbp-0x21],cl
  40e42f:	jl     40e445 <flatcc_json_parser_float@@Base+0x565>
  40e435:	mov    rax,QWORD PTR [rbp-0x18]
  40e439:	movsx  ecx,BYTE PTR [rax]
  40e43c:	cmp    ecx,0x39
  40e43f:	setle  dl
  40e442:	mov    BYTE PTR [rbp-0x21],dl
  40e445:	mov    al,BYTE PTR [rbp-0x21]
  40e448:	test   al,0x1
  40e44a:	jne    40e455 <flatcc_json_parser_float@@Base+0x575>
  40e450:	jmp    40e466 <flatcc_json_parser_float@@Base+0x586>
  40e455:	mov    rax,QWORD PTR [rbp-0x18]
  40e459:	add    rax,0x1
  40e45d:	mov    QWORD PTR [rbp-0x18],rax
  40e461:	jmp    40e409 <flatcc_json_parser_float@@Base+0x529>
  40e466:	jmp    40e46b <flatcc_json_parser_float@@Base+0x58b>
  40e46b:	mov    rax,QWORD PTR [rbp-0x18]
  40e46f:	cmp    rax,QWORD PTR [rbp-0x20]
  40e473:	je     40e547 <flatcc_json_parser_float@@Base+0x667>
  40e479:	mov    rax,QWORD PTR [rbp-0x18]
  40e47d:	movsx  ecx,BYTE PTR [rax]
  40e480:	cmp    ecx,0x2e
  40e483:	jne    40e542 <flatcc_json_parser_float@@Base+0x662>
  40e489:	mov    rax,QWORD PTR [rbp-0x18]
  40e48d:	add    rax,0x1
  40e491:	mov    QWORD PTR [rbp-0x18],rax
  40e495:	mov    rax,QWORD PTR [rbp-0x18]
  40e499:	movsx  ecx,BYTE PTR [rax]
  40e49c:	cmp    ecx,0x30
  40e49f:	jl     40e4b5 <flatcc_json_parser_float@@Base+0x5d5>
  40e4a5:	mov    rax,QWORD PTR [rbp-0x18]
  40e4a9:	movsx  ecx,BYTE PTR [rax]
  40e4ac:	cmp    ecx,0x39
  40e4af:	jle    40e4d4 <flatcc_json_parser_float@@Base+0x5f4>
  40e4b5:	mov    rdi,QWORD PTR [rbp-0x10]
  40e4b9:	mov    rsi,QWORD PTR [rbp-0x18]
  40e4bd:	mov    rdx,QWORD PTR [rbp-0x20]
  40e4c1:	mov    ecx,0x6
  40e4c6:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e4cb:	mov    QWORD PTR [rbp-0x8],rax
  40e4cf:	jmp    40e767 <flatcc_json_parser_float@@Base+0x887>
  40e4d4:	mov    rax,QWORD PTR [rbp-0x18]
  40e4d8:	add    rax,0x1
  40e4dc:	mov    QWORD PTR [rbp-0x18],rax
  40e4e0:	xor    eax,eax
  40e4e2:	mov    cl,al
  40e4e4:	mov    rdx,QWORD PTR [rbp-0x18]
  40e4e8:	cmp    rdx,QWORD PTR [rbp-0x20]
  40e4ec:	mov    BYTE PTR [rbp-0x22],cl
  40e4ef:	je     40e51c <flatcc_json_parser_float@@Base+0x63c>
  40e4f5:	xor    eax,eax
  40e4f7:	mov    cl,al
  40e4f9:	mov    rdx,QWORD PTR [rbp-0x18]
  40e4fd:	movsx  eax,BYTE PTR [rdx]
  40e500:	cmp    eax,0x30
  40e503:	mov    BYTE PTR [rbp-0x22],cl
  40e506:	jl     40e51c <flatcc_json_parser_float@@Base+0x63c>
  40e50c:	mov    rax,QWORD PTR [rbp-0x18]
  40e510:	movsx  ecx,BYTE PTR [rax]
  40e513:	cmp    ecx,0x39
  40e516:	setle  dl
  40e519:	mov    BYTE PTR [rbp-0x22],dl
  40e51c:	mov    al,BYTE PTR [rbp-0x22]
  40e51f:	test   al,0x1
  40e521:	jne    40e52c <flatcc_json_parser_float@@Base+0x64c>
  40e527:	jmp    40e53d <flatcc_json_parser_float@@Base+0x65d>
  40e52c:	mov    rax,QWORD PTR [rbp-0x18]
  40e530:	add    rax,0x1
  40e534:	mov    QWORD PTR [rbp-0x18],rax
  40e538:	jmp    40e4e0 <flatcc_json_parser_float@@Base+0x600>
  40e53d:	jmp    40e542 <flatcc_json_parser_float@@Base+0x662>
  40e542:	jmp    40e547 <flatcc_json_parser_float@@Base+0x667>
  40e547:	mov    rax,QWORD PTR [rbp-0x18]
  40e54b:	cmp    rax,QWORD PTR [rbp-0x20]
  40e54f:	je     40e695 <flatcc_json_parser_float@@Base+0x7b5>
  40e555:	mov    rax,QWORD PTR [rbp-0x18]
  40e559:	movsx  ecx,BYTE PTR [rax]
  40e55c:	cmp    ecx,0x65
  40e55f:	je     40e575 <flatcc_json_parser_float@@Base+0x695>
  40e565:	mov    rax,QWORD PTR [rbp-0x18]
  40e569:	movsx  ecx,BYTE PTR [rax]
  40e56c:	cmp    ecx,0x45
  40e56f:	jne    40e695 <flatcc_json_parser_float@@Base+0x7b5>
  40e575:	mov    rax,QWORD PTR [rbp-0x18]
  40e579:	add    rax,0x1
  40e57d:	mov    QWORD PTR [rbp-0x18],rax
  40e581:	mov    rax,QWORD PTR [rbp-0x18]
  40e585:	cmp    rax,QWORD PTR [rbp-0x20]
  40e589:	jne    40e5ae <flatcc_json_parser_float@@Base+0x6ce>
  40e58f:	mov    rdi,QWORD PTR [rbp-0x10]
  40e593:	mov    rsi,QWORD PTR [rbp-0x18]
  40e597:	mov    rdx,QWORD PTR [rbp-0x20]
  40e59b:	mov    ecx,0x6
  40e5a0:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e5a5:	mov    QWORD PTR [rbp-0x8],rax
  40e5a9:	jmp    40e767 <flatcc_json_parser_float@@Base+0x887>
  40e5ae:	mov    rax,QWORD PTR [rbp-0x18]
  40e5b2:	movsx  ecx,BYTE PTR [rax]
  40e5b5:	cmp    ecx,0x2b
  40e5b8:	je     40e5ce <flatcc_json_parser_float@@Base+0x6ee>
  40e5be:	mov    rax,QWORD PTR [rbp-0x18]
  40e5c2:	movsx  ecx,BYTE PTR [rax]
  40e5c5:	cmp    ecx,0x2d
  40e5c8:	jne    40e5da <flatcc_json_parser_float@@Base+0x6fa>
  40e5ce:	mov    rax,QWORD PTR [rbp-0x18]
  40e5d2:	add    rax,0x1
  40e5d6:	mov    QWORD PTR [rbp-0x18],rax
  40e5da:	mov    rax,QWORD PTR [rbp-0x18]
  40e5de:	cmp    rax,QWORD PTR [rbp-0x20]
  40e5e2:	je     40e608 <flatcc_json_parser_float@@Base+0x728>
  40e5e8:	mov    rax,QWORD PTR [rbp-0x18]
  40e5ec:	movsx  ecx,BYTE PTR [rax]
  40e5ef:	cmp    ecx,0x30
  40e5f2:	jl     40e608 <flatcc_json_parser_float@@Base+0x728>
  40e5f8:	mov    rax,QWORD PTR [rbp-0x18]
  40e5fc:	movsx  ecx,BYTE PTR [rax]
  40e5ff:	cmp    ecx,0x39
  40e602:	jle    40e627 <flatcc_json_parser_float@@Base+0x747>
  40e608:	mov    rdi,QWORD PTR [rbp-0x10]
  40e60c:	mov    rsi,QWORD PTR [rbp-0x18]
  40e610:	mov    rdx,QWORD PTR [rbp-0x20]
  40e614:	mov    ecx,0x6
  40e619:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e61e:	mov    QWORD PTR [rbp-0x8],rax
  40e622:	jmp    40e767 <flatcc_json_parser_float@@Base+0x887>
  40e627:	mov    rax,QWORD PTR [rbp-0x18]
  40e62b:	add    rax,0x1
  40e62f:	mov    QWORD PTR [rbp-0x18],rax
  40e633:	xor    eax,eax
  40e635:	mov    cl,al
  40e637:	mov    rdx,QWORD PTR [rbp-0x18]
  40e63b:	cmp    rdx,QWORD PTR [rbp-0x20]
  40e63f:	mov    BYTE PTR [rbp-0x23],cl
  40e642:	je     40e66f <flatcc_json_parser_float@@Base+0x78f>
  40e648:	xor    eax,eax
  40e64a:	mov    cl,al
  40e64c:	mov    rdx,QWORD PTR [rbp-0x18]
  40e650:	movsx  eax,BYTE PTR [rdx]
  40e653:	cmp    eax,0x30
  40e656:	mov    BYTE PTR [rbp-0x23],cl
  40e659:	jl     40e66f <flatcc_json_parser_float@@Base+0x78f>
  40e65f:	mov    rax,QWORD PTR [rbp-0x18]
  40e663:	movsx  ecx,BYTE PTR [rax]
  40e666:	cmp    ecx,0x39
  40e669:	setle  dl
  40e66c:	mov    BYTE PTR [rbp-0x23],dl
  40e66f:	mov    al,BYTE PTR [rbp-0x23]
  40e672:	test   al,0x1
  40e674:	jne    40e67f <flatcc_json_parser_float@@Base+0x79f>
  40e67a:	jmp    40e690 <flatcc_json_parser_float@@Base+0x7b0>
  40e67f:	mov    rax,QWORD PTR [rbp-0x18]
  40e683:	add    rax,0x1
  40e687:	mov    QWORD PTR [rbp-0x18],rax
  40e68b:	jmp    40e633 <flatcc_json_parser_float@@Base+0x753>
  40e690:	jmp    40e695 <flatcc_json_parser_float@@Base+0x7b5>
  40e695:	mov    rax,QWORD PTR [rbp-0x18]
  40e699:	cmp    rax,QWORD PTR [rbp-0x20]
  40e69d:	je     40e74d <flatcc_json_parser_float@@Base+0x86d>
  40e6a3:	mov    rax,QWORD PTR [rbp-0x18]
  40e6a7:	movsx  ecx,BYTE PTR [rax]
  40e6aa:	mov    edx,ecx
  40e6ac:	add    edx,0xfffffff7
  40e6af:	sub    edx,0x3
  40e6b2:	mov    DWORD PTR [rbp-0x28],ecx
  40e6b5:	mov    DWORD PTR [rbp-0x2c],edx
  40e6b8:	jb     40e73b <flatcc_json_parser_float@@Base+0x85b>
  40e6be:	jmp    40e6c3 <flatcc_json_parser_float@@Base+0x7e3>
  40e6c3:	mov    eax,DWORD PTR [rbp-0x28]
  40e6c6:	sub    eax,0xd
  40e6c9:	mov    DWORD PTR [rbp-0x30],eax
  40e6cc:	je     40e73b <flatcc_json_parser_float@@Base+0x85b>
  40e6d2:	jmp    40e6d7 <flatcc_json_parser_float@@Base+0x7f7>
  40e6d7:	mov    eax,DWORD PTR [rbp-0x28]
  40e6da:	sub    eax,0x20
  40e6dd:	mov    DWORD PTR [rbp-0x34],eax
  40e6e0:	je     40e73b <flatcc_json_parser_float@@Base+0x85b>
  40e6e6:	jmp    40e6eb <flatcc_json_parser_float@@Base+0x80b>
  40e6eb:	mov    eax,DWORD PTR [rbp-0x28]
  40e6ee:	sub    eax,0x2c
  40e6f1:	mov    DWORD PTR [rbp-0x38],eax
  40e6f4:	je     40e73b <flatcc_json_parser_float@@Base+0x85b>
  40e6fa:	jmp    40e6ff <flatcc_json_parser_float@@Base+0x81f>
  40e6ff:	mov    eax,DWORD PTR [rbp-0x28]
  40e702:	sub    eax,0x3a
  40e705:	mov    DWORD PTR [rbp-0x3c],eax
  40e708:	je     40e73b <flatcc_json_parser_float@@Base+0x85b>
  40e70e:	jmp    40e713 <flatcc_json_parser_float@@Base+0x833>
  40e713:	mov    eax,DWORD PTR [rbp-0x28]
  40e716:	sub    eax,0x5d
  40e719:	mov    DWORD PTR [rbp-0x40],eax
  40e71c:	je     40e73b <flatcc_json_parser_float@@Base+0x85b>
  40e722:	jmp    40e727 <flatcc_json_parser_float@@Base+0x847>
  40e727:	mov    eax,DWORD PTR [rbp-0x28]
  40e72a:	sub    eax,0x7d
  40e72d:	mov    DWORD PTR [rbp-0x44],eax
  40e730:	jne    40e748 <flatcc_json_parser_float@@Base+0x868>
  40e736:	jmp    40e73b <flatcc_json_parser_float@@Base+0x85b>
  40e73b:	mov    rax,QWORD PTR [rbp-0x18]
  40e73f:	mov    QWORD PTR [rbp-0x8],rax
  40e743:	jmp    40e767 <flatcc_json_parser_float@@Base+0x887>
  40e748:	jmp    40e74d <flatcc_json_parser_float@@Base+0x86d>
  40e74d:	mov    rdi,QWORD PTR [rbp-0x10]
  40e751:	mov    rsi,QWORD PTR [rbp-0x18]
  40e755:	mov    rdx,QWORD PTR [rbp-0x20]
  40e759:	mov    ecx,0x6
  40e75e:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e763:	mov    QWORD PTR [rbp-0x8],rax
  40e767:	mov    rax,QWORD PTR [rbp-0x8]
  40e76b:	add    rsp,0x50
  40e76f:	pop    rbp
  40e770:	ret    
  40e771:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e77b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e780:	push   rbp
  40e781:	mov    rbp,rsp
  40e784:	sub    rsp,0x30
  40e788:	mov    QWORD PTR [rbp-0x10],rdi
  40e78c:	mov    QWORD PTR [rbp-0x18],rsi
  40e790:	mov    QWORD PTR [rbp-0x20],rdx
  40e794:	mov    QWORD PTR [rbp-0x28],rcx
  40e798:	mov    rdi,QWORD PTR [rbp-0x10]
  40e79c:	mov    rsi,QWORD PTR [rbp-0x18]
  40e7a0:	mov    rdx,QWORD PTR [rbp-0x20]
  40e7a4:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e7a9:	mov    QWORD PTR [rbp-0x18],rax
  40e7ad:	mov    rax,QWORD PTR [rbp-0x18]
  40e7b1:	cmp    rax,QWORD PTR [rbp-0x20]
  40e7b5:	jne    40e7d2 <flatcc_json_parser_float@@Base+0x8f2>
  40e7bb:	mov    rax,QWORD PTR [rbp-0x28]
  40e7bf:	mov    DWORD PTR [rax],0x0
  40e7c5:	mov    rax,QWORD PTR [rbp-0x18]
  40e7c9:	mov    QWORD PTR [rbp-0x8],rax
  40e7cd:	jmp    40e8dc <flatcc_json_parser_float@@Base+0x9fc>
  40e7d2:	mov    rax,QWORD PTR [rbp-0x18]
  40e7d6:	movsx  ecx,BYTE PTR [rax]
  40e7d9:	cmp    ecx,0x2c
  40e7dc:	je     40e83c <flatcc_json_parser_float@@Base+0x95c>
  40e7e2:	mov    rax,QWORD PTR [rbp-0x28]
  40e7e6:	mov    DWORD PTR [rax],0x0
  40e7ec:	mov    rax,QWORD PTR [rbp-0x18]
  40e7f0:	movsx  ecx,BYTE PTR [rax]
  40e7f3:	cmp    ecx,0x5d
  40e7f6:	je     40e81b <flatcc_json_parser_float@@Base+0x93b>
  40e7fc:	mov    rdi,QWORD PTR [rbp-0x10]
  40e800:	mov    rsi,QWORD PTR [rbp-0x18]
  40e804:	mov    rdx,QWORD PTR [rbp-0x20]
  40e808:	mov    ecx,0x9
  40e80d:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e812:	mov    QWORD PTR [rbp-0x8],rax
  40e816:	jmp    40e8dc <flatcc_json_parser_float@@Base+0x9fc>
  40e81b:	mov    rdi,QWORD PTR [rbp-0x10]
  40e81f:	mov    rax,QWORD PTR [rbp-0x18]
  40e823:	add    rax,0x1
  40e827:	mov    rdx,QWORD PTR [rbp-0x20]
  40e82b:	mov    rsi,rax
  40e82e:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e833:	mov    QWORD PTR [rbp-0x8],rax
  40e837:	jmp    40e8dc <flatcc_json_parser_float@@Base+0x9fc>
  40e83c:	mov    rdi,QWORD PTR [rbp-0x10]
  40e840:	mov    rax,QWORD PTR [rbp-0x18]
  40e844:	add    rax,0x1
  40e848:	mov    rdx,QWORD PTR [rbp-0x20]
  40e84c:	mov    rsi,rax
  40e84f:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e854:	mov    QWORD PTR [rbp-0x18],rax
  40e858:	mov    rax,QWORD PTR [rbp-0x18]
  40e85c:	cmp    rax,QWORD PTR [rbp-0x20]
  40e860:	jne    40e88f <flatcc_json_parser_float@@Base+0x9af>
  40e866:	mov    rax,QWORD PTR [rbp-0x28]
  40e86a:	mov    DWORD PTR [rax],0x0
  40e870:	mov    rdi,QWORD PTR [rbp-0x10]
  40e874:	mov    rsi,QWORD PTR [rbp-0x18]
  40e878:	mov    rdx,QWORD PTR [rbp-0x20]
  40e87c:	mov    ecx,0x9
  40e881:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e886:	mov    QWORD PTR [rbp-0x8],rax
  40e88a:	jmp    40e8dc <flatcc_json_parser_float@@Base+0x9fc>
  40e88f:	mov    rax,QWORD PTR [rbp-0x18]
  40e893:	movsx  ecx,BYTE PTR [rax]
  40e896:	cmp    ecx,0x5d
  40e899:	jne    40e8ca <flatcc_json_parser_float@@Base+0x9ea>
  40e89f:	mov    rax,QWORD PTR [rbp-0x28]
  40e8a3:	mov    DWORD PTR [rax],0x0
  40e8a9:	mov    rdi,QWORD PTR [rbp-0x10]
  40e8ad:	mov    rax,QWORD PTR [rbp-0x18]
  40e8b1:	add    rax,0x1
  40e8b5:	mov    rdx,QWORD PTR [rbp-0x20]
  40e8b9:	mov    rsi,rax
  40e8bc:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e8c1:	mov    QWORD PTR [rbp-0x8],rax
  40e8c5:	jmp    40e8dc <flatcc_json_parser_float@@Base+0x9fc>
  40e8ca:	mov    rax,QWORD PTR [rbp-0x28]
  40e8ce:	mov    DWORD PTR [rax],0x1
  40e8d4:	mov    rax,QWORD PTR [rbp-0x18]
  40e8d8:	mov    QWORD PTR [rbp-0x8],rax
  40e8dc:	mov    rax,QWORD PTR [rbp-0x8]
  40e8e0:	add    rsp,0x30
  40e8e4:	pop    rbp
  40e8e5:	ret    
  40e8e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e8f0:	push   rbp
  40e8f1:	mov    rbp,rsp
  40e8f4:	sub    rsp,0x30
  40e8f8:	mov    QWORD PTR [rbp-0x10],rdi
  40e8fc:	mov    QWORD PTR [rbp-0x18],rsi
  40e900:	mov    QWORD PTR [rbp-0x20],rdx
  40e904:	mov    QWORD PTR [rbp-0x28],rcx
  40e908:	mov    rdi,QWORD PTR [rbp-0x10]
  40e90c:	mov    rsi,QWORD PTR [rbp-0x18]
  40e910:	mov    rdx,QWORD PTR [rbp-0x20]
  40e914:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e919:	mov    QWORD PTR [rbp-0x18],rax
  40e91d:	mov    rax,QWORD PTR [rbp-0x18]
  40e921:	cmp    rax,QWORD PTR [rbp-0x20]
  40e925:	jne    40e942 <flatcc_json_parser_float@@Base+0xa62>
  40e92b:	mov    rax,QWORD PTR [rbp-0x28]
  40e92f:	mov    DWORD PTR [rax],0x0
  40e935:	mov    rax,QWORD PTR [rbp-0x18]
  40e939:	mov    QWORD PTR [rbp-0x8],rax
  40e93d:	jmp    40ea4c <flatcc_json_parser_float@@Base+0xb6c>
  40e942:	mov    rax,QWORD PTR [rbp-0x18]
  40e946:	movsx  ecx,BYTE PTR [rax]
  40e949:	cmp    ecx,0x2c
  40e94c:	je     40e9ac <flatcc_json_parser_float@@Base+0xacc>
  40e952:	mov    rax,QWORD PTR [rbp-0x28]
  40e956:	mov    DWORD PTR [rax],0x0
  40e95c:	mov    rax,QWORD PTR [rbp-0x18]
  40e960:	movsx  ecx,BYTE PTR [rax]
  40e963:	cmp    ecx,0x7d
  40e966:	je     40e98b <flatcc_json_parser_float@@Base+0xaab>
  40e96c:	mov    rdi,QWORD PTR [rbp-0x10]
  40e970:	mov    rsi,QWORD PTR [rbp-0x18]
  40e974:	mov    rdx,QWORD PTR [rbp-0x20]
  40e978:	mov    ecx,0xa
  40e97d:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e982:	mov    QWORD PTR [rbp-0x8],rax
  40e986:	jmp    40ea4c <flatcc_json_parser_float@@Base+0xb6c>
  40e98b:	mov    rdi,QWORD PTR [rbp-0x10]
  40e98f:	mov    rax,QWORD PTR [rbp-0x18]
  40e993:	add    rax,0x1
  40e997:	mov    rdx,QWORD PTR [rbp-0x20]
  40e99b:	mov    rsi,rax
  40e99e:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e9a3:	mov    QWORD PTR [rbp-0x8],rax
  40e9a7:	jmp    40ea4c <flatcc_json_parser_float@@Base+0xb6c>
  40e9ac:	mov    rdi,QWORD PTR [rbp-0x10]
  40e9b0:	mov    rax,QWORD PTR [rbp-0x18]
  40e9b4:	add    rax,0x1
  40e9b8:	mov    rdx,QWORD PTR [rbp-0x20]
  40e9bc:	mov    rsi,rax
  40e9bf:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40e9c4:	mov    QWORD PTR [rbp-0x18],rax
  40e9c8:	mov    rax,QWORD PTR [rbp-0x18]
  40e9cc:	cmp    rax,QWORD PTR [rbp-0x20]
  40e9d0:	jne    40e9ff <flatcc_json_parser_float@@Base+0xb1f>
  40e9d6:	mov    rax,QWORD PTR [rbp-0x28]
  40e9da:	mov    DWORD PTR [rax],0x0
  40e9e0:	mov    rdi,QWORD PTR [rbp-0x10]
  40e9e4:	mov    rsi,QWORD PTR [rbp-0x18]
  40e9e8:	mov    rdx,QWORD PTR [rbp-0x20]
  40e9ec:	mov    ecx,0xa
  40e9f1:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40e9f6:	mov    QWORD PTR [rbp-0x8],rax
  40e9fa:	jmp    40ea4c <flatcc_json_parser_float@@Base+0xb6c>
  40e9ff:	mov    rax,QWORD PTR [rbp-0x18]
  40ea03:	movsx  ecx,BYTE PTR [rax]
  40ea06:	cmp    ecx,0x7d
  40ea09:	jne    40ea3a <flatcc_json_parser_float@@Base+0xb5a>
  40ea0f:	mov    rax,QWORD PTR [rbp-0x28]
  40ea13:	mov    DWORD PTR [rax],0x0
  40ea19:	mov    rdi,QWORD PTR [rbp-0x10]
  40ea1d:	mov    rax,QWORD PTR [rbp-0x18]
  40ea21:	add    rax,0x1
  40ea25:	mov    rdx,QWORD PTR [rbp-0x20]
  40ea29:	mov    rsi,rax
  40ea2c:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  40ea31:	mov    QWORD PTR [rbp-0x8],rax
  40ea35:	jmp    40ea4c <flatcc_json_parser_float@@Base+0xb6c>
  40ea3a:	mov    rax,QWORD PTR [rbp-0x28]
  40ea3e:	mov    DWORD PTR [rax],0x1
  40ea44:	mov    rax,QWORD PTR [rbp-0x18]
  40ea48:	mov    QWORD PTR [rbp-0x8],rax
  40ea4c:	mov    rax,QWORD PTR [rbp-0x8]
  40ea50:	add    rsp,0x30
  40ea54:	pop    rbp
  40ea55:	ret    
  40ea56:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040ea60 <flatcc_json_parser_integer@@Base>:
  40ea60:	push   rbp
  40ea61:	mov    rbp,rsp
  40ea64:	sub    rsp,0x50
  40ea68:	mov    QWORD PTR [rbp-0x10],rdi
  40ea6c:	mov    QWORD PTR [rbp-0x18],rsi
  40ea70:	mov    QWORD PTR [rbp-0x20],rdx
  40ea74:	mov    QWORD PTR [rbp-0x28],rcx
  40ea78:	mov    QWORD PTR [rbp-0x30],r8
  40ea7c:	mov    QWORD PTR [rbp-0x40],0x0
  40ea84:	mov    rcx,QWORD PTR [rbp-0x18]
  40ea88:	cmp    rcx,QWORD PTR [rbp-0x20]
  40ea8c:	jne    40ea9f <flatcc_json_parser_integer@@Base+0x3f>
  40ea92:	mov    rax,QWORD PTR [rbp-0x18]
  40ea96:	mov    QWORD PTR [rbp-0x8],rax
  40ea9a:	jmp    40ec1e <flatcc_json_parser_integer@@Base+0x1be>
  40ea9f:	mov    rax,QWORD PTR [rbp-0x18]
  40eaa3:	mov    QWORD PTR [rbp-0x48],rax
  40eaa7:	mov    rax,QWORD PTR [rbp-0x18]
  40eaab:	movsx  ecx,BYTE PTR [rax]
  40eaae:	cmp    ecx,0x2d
  40eab1:	sete   dl
  40eab4:	and    dl,0x1
  40eab7:	movzx  ecx,dl
  40eaba:	mov    rax,QWORD PTR [rbp-0x28]
  40eabe:	mov    DWORD PTR [rax],ecx
  40eac0:	mov    rax,QWORD PTR [rbp-0x28]
  40eac4:	mov    ecx,DWORD PTR [rax]
  40eac6:	mov    rax,QWORD PTR [rbp-0x18]
  40eaca:	movsxd rsi,ecx
  40eacd:	add    rax,rsi
  40ead0:	mov    QWORD PTR [rbp-0x18],rax
  40ead4:	xor    eax,eax
  40ead6:	mov    cl,al
  40ead8:	mov    rdx,QWORD PTR [rbp-0x18]
  40eadc:	cmp    rdx,QWORD PTR [rbp-0x20]
  40eae0:	mov    BYTE PTR [rbp-0x49],cl
  40eae3:	je     40eb10 <flatcc_json_parser_integer@@Base+0xb0>
  40eae9:	xor    eax,eax
  40eaeb:	mov    cl,al
  40eaed:	mov    rdx,QWORD PTR [rbp-0x18]
  40eaf1:	movsx  eax,BYTE PTR [rdx]
  40eaf4:	cmp    eax,0x30
  40eaf7:	mov    BYTE PTR [rbp-0x49],cl
  40eafa:	jl     40eb10 <flatcc_json_parser_integer@@Base+0xb0>
  40eb00:	mov    rax,QWORD PTR [rbp-0x18]
  40eb04:	movsx  ecx,BYTE PTR [rax]
  40eb07:	cmp    ecx,0x39
  40eb0a:	setle  dl
  40eb0d:	mov    BYTE PTR [rbp-0x49],dl
  40eb10:	mov    al,BYTE PTR [rbp-0x49]
  40eb13:	test   al,0x1
  40eb15:	jne    40eb20 <flatcc_json_parser_integer@@Base+0xc0>
  40eb1b:	jmp    40eb93 <flatcc_json_parser_integer@@Base+0x133>
  40eb20:	mov    rax,QWORD PTR [rbp-0x40]
  40eb24:	mov    QWORD PTR [rbp-0x38],rax
  40eb28:	imul   rax,QWORD PTR [rbp-0x40],0xa
  40eb2d:	mov    rcx,QWORD PTR [rbp-0x18]
  40eb31:	movsx  rcx,BYTE PTR [rcx]
  40eb35:	add    rax,rcx
  40eb38:	sub    rax,0x30
  40eb3c:	mov    QWORD PTR [rbp-0x40],rax
  40eb40:	mov    rax,QWORD PTR [rbp-0x38]
  40eb44:	cmp    rax,QWORD PTR [rbp-0x40]
  40eb48:	jbe    40eb82 <flatcc_json_parser_integer@@Base+0x122>
  40eb4e:	mov    rdi,QWORD PTR [rbp-0x10]
  40eb52:	mov    rsi,QWORD PTR [rbp-0x18]
  40eb56:	mov    rdx,QWORD PTR [rbp-0x20]
  40eb5a:	mov    rax,QWORD PTR [rbp-0x28]
  40eb5e:	cmp    rax,0x0
  40eb62:	mov    ecx,0x8
  40eb67:	mov    r8d,0x7
  40eb6d:	cmovne r8d,ecx
  40eb71:	mov    ecx,r8d
  40eb74:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40eb79:	mov    QWORD PTR [rbp-0x8],rax
  40eb7d:	jmp    40ec1e <flatcc_json_parser_integer@@Base+0x1be>
  40eb82:	mov    rax,QWORD PTR [rbp-0x18]
  40eb86:	add    rax,0x1
  40eb8a:	mov    QWORD PTR [rbp-0x18],rax
  40eb8e:	jmp    40ead4 <flatcc_json_parser_integer@@Base+0x74>
  40eb93:	mov    rax,QWORD PTR [rbp-0x18]
  40eb97:	cmp    rax,QWORD PTR [rbp-0x48]
  40eb9b:	jne    40ebae <flatcc_json_parser_integer@@Base+0x14e>
  40eba1:	mov    rax,QWORD PTR [rbp-0x18]
  40eba5:	mov    QWORD PTR [rbp-0x8],rax
  40eba9:	jmp    40ec1e <flatcc_json_parser_integer@@Base+0x1be>
  40ebae:	mov    rax,QWORD PTR [rbp-0x18]
  40ebb2:	cmp    rax,QWORD PTR [rbp-0x20]
  40ebb6:	je     40ec0b <flatcc_json_parser_integer@@Base+0x1ab>
  40ebbc:	mov    rax,QWORD PTR [rbp-0x18]
  40ebc0:	movsx  ecx,BYTE PTR [rax]
  40ebc3:	cmp    ecx,0x65
  40ebc6:	je     40ebec <flatcc_json_parser_integer@@Base+0x18c>
  40ebcc:	mov    rax,QWORD PTR [rbp-0x18]
  40ebd0:	movsx  ecx,BYTE PTR [rax]
  40ebd3:	cmp    ecx,0x45
  40ebd6:	je     40ebec <flatcc_json_parser_integer@@Base+0x18c>
  40ebdc:	mov    rax,QWORD PTR [rbp-0x18]
  40ebe0:	movsx  ecx,BYTE PTR [rax]
  40ebe3:	cmp    ecx,0x2e
  40ebe6:	jne    40ec0b <flatcc_json_parser_integer@@Base+0x1ab>
  40ebec:	mov    rdi,QWORD PTR [rbp-0x10]
  40ebf0:	mov    rsi,QWORD PTR [rbp-0x18]
  40ebf4:	mov    rdx,QWORD PTR [rbp-0x20]
  40ebf8:	mov    ecx,0xc
  40ebfd:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40ec02:	mov    QWORD PTR [rbp-0x8],rax
  40ec06:	jmp    40ec1e <flatcc_json_parser_integer@@Base+0x1be>
  40ec0b:	mov    rax,QWORD PTR [rbp-0x40]
  40ec0f:	mov    rcx,QWORD PTR [rbp-0x30]
  40ec13:	mov    QWORD PTR [rcx],rax
  40ec16:	mov    rax,QWORD PTR [rbp-0x18]
  40ec1a:	mov    QWORD PTR [rbp-0x8],rax
  40ec1e:	mov    rax,QWORD PTR [rbp-0x8]
  40ec22:	add    rsp,0x50
  40ec26:	pop    rbp
  40ec27:	ret    
  40ec28:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040ec30 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  40ec30:	push   rbp
  40ec31:	mov    rbp,rsp
  40ec34:	sub    rsp,0x60
  40ec38:	xor    eax,eax
  40ec3a:	mov    QWORD PTR [rbp-0x10],rdi
  40ec3e:	mov    QWORD PTR [rbp-0x18],rsi
  40ec42:	mov    QWORD PTR [rbp-0x20],rdx
  40ec46:	mov    QWORD PTR [rbp-0x28],rcx
  40ec4a:	mov    DWORD PTR [rbp-0x2c],r8d
  40ec4e:	mov    r8d,DWORD PTR [rbp-0x2c]
  40ec52:	cmp    r8d,0x0
  40ec56:	mov    r8d,0x1
  40ec5c:	cmovne eax,r8d
  40ec60:	mov    DWORD PTR [rbp-0x5c],eax
  40ec63:	mov    rdi,QWORD PTR [rbp-0x10]
  40ec67:	mov    rsi,QWORD PTR [rbp-0x18]
  40ec6b:	mov    rdx,QWORD PTR [rbp-0x20]
  40ec6f:	call   40e240 <flatcc_json_parser_float@@Base+0x360>
  40ec74:	mov    QWORD PTR [rbp-0x18],rax
  40ec78:	mov    rdi,QWORD PTR [rbp-0x10]
  40ec7c:	mov    rax,QWORD PTR [rbp-0x18]
  40ec80:	mov    QWORD PTR [rbp-0x38],rax
  40ec84:	mov    rdx,QWORD PTR [rbp-0x20]
  40ec88:	mov    rsi,rax
  40ec8b:	call   40c570 <flatcc_json_parser_string_part@@Base>
  40ec90:	mov    QWORD PTR [rbp-0x18],rax
  40ec94:	mov    rax,QWORD PTR [rbp-0x18]
  40ec98:	cmp    rax,QWORD PTR [rbp-0x20]
  40ec9c:	je     40ecb2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x82>
  40eca2:	mov    rax,QWORD PTR [rbp-0x18]
  40eca6:	movsx  ecx,BYTE PTR [rax]
  40eca9:	cmp    ecx,0x22
  40ecac:	je     40ecb7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x87>
  40ecb2:	jmp    40ee2f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ff>
  40ecb7:	mov    rax,QWORD PTR [rbp-0x18]
  40ecbb:	mov    rcx,QWORD PTR [rbp-0x38]
  40ecbf:	sub    rax,rcx
  40ecc2:	mov    rdi,rax
  40ecc5:	call   40ee70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x240>
  40ecca:	mov    edx,0x1
  40eccf:	mov    esi,edx
  40ecd1:	mov    edx,0xffffffff
  40ecd6:	mov    ecx,edx
  40ecd8:	mov    QWORD PTR [rbp-0x48],rax
  40ecdc:	mov    rax,QWORD PTR [rbp-0x10]
  40ece0:	mov    rdi,QWORD PTR [rax]
  40ece3:	mov    edx,0x1
  40ece8:	call   4076c0 <flatcc_builder_start_vector@@Base>
  40eced:	cmp    eax,0x0
  40ecf0:	je     40ecfb <flatcc_json_parser_build_uint8_vector_base64@@Base+0xcb>
  40ecf6:	jmp    40ee06 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d6>
  40ecfb:	mov    rax,QWORD PTR [rbp-0x10]
  40ecff:	mov    rdi,QWORD PTR [rax]
  40ed02:	mov    rsi,QWORD PTR [rbp-0x48]
  40ed06:	call   406c60 <flatcc_builder_extend_vector@@Base>
  40ed0b:	mov    QWORD PTR [rbp-0x40],rax
  40ed0f:	cmp    rax,0x0
  40ed13:	jne    40ed1e <flatcc_json_parser_build_uint8_vector_base64@@Base+0xee>
  40ed19:	jmp    40ee06 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d6>
  40ed1e:	mov    rax,QWORD PTR [rbp-0x18]
  40ed22:	mov    rcx,QWORD PTR [rbp-0x38]
  40ed26:	sub    rax,rcx
  40ed29:	mov    QWORD PTR [rbp-0x58],rax
  40ed2d:	mov    rax,QWORD PTR [rbp-0x48]
  40ed31:	mov    QWORD PTR [rbp-0x50],rax
  40ed35:	mov    rdi,QWORD PTR [rbp-0x40]
  40ed39:	mov    rsi,QWORD PTR [rbp-0x38]
  40ed3d:	mov    r8d,DWORD PTR [rbp-0x5c]
  40ed41:	lea    rdx,[rbp-0x50]
  40ed45:	lea    rcx,[rbp-0x58]
  40ed49:	call   40ef20 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f0>
  40ed4e:	mov    DWORD PTR [rbp-0x60],eax
  40ed51:	cmp    eax,0x0
  40ed54:	je     40ed6b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x13b>
  40ed5a:	mov    rax,QWORD PTR [rbp-0x38]
  40ed5e:	add    rax,QWORD PTR [rbp-0x58]
  40ed62:	mov    QWORD PTR [rbp-0x18],rax
  40ed66:	jmp    40ee2f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ff>
  40ed6b:	mov    rax,QWORD PTR [rbp-0x58]
  40ed6f:	mov    rcx,QWORD PTR [rbp-0x18]
  40ed73:	mov    rdx,QWORD PTR [rbp-0x38]
  40ed77:	sub    rcx,rdx
  40ed7a:	cmp    rax,rcx
  40ed7d:	je     40ed94 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x164>
  40ed83:	mov    rax,QWORD PTR [rbp-0x38]
  40ed87:	add    rax,QWORD PTR [rbp-0x58]
  40ed8b:	mov    QWORD PTR [rbp-0x18],rax
  40ed8f:	jmp    40ee2f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ff>
  40ed94:	mov    rax,QWORD PTR [rbp-0x50]
  40ed98:	cmp    rax,QWORD PTR [rbp-0x48]
  40ed9c:	jae    40edcc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19c>
  40eda2:	mov    rax,QWORD PTR [rbp-0x10]
  40eda6:	mov    rdi,QWORD PTR [rax]
  40eda9:	mov    rax,QWORD PTR [rbp-0x48]
  40edad:	sub    rax,QWORD PTR [rbp-0x50]
  40edb1:	mov    rsi,rax
  40edb4:	call   4073b0 <flatcc_builder_truncate_vector@@Base>
  40edb9:	cmp    eax,0x0
  40edbc:	je     40edc7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x197>
  40edc2:	jmp    40ee06 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d6>
  40edc7:	jmp    40edcc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19c>
  40edcc:	mov    rax,QWORD PTR [rbp-0x10]
  40edd0:	mov    rdi,QWORD PTR [rax]
  40edd3:	call   408c00 <flatcc_builder_end_vector@@Base>
  40edd8:	mov    rdi,QWORD PTR [rbp-0x28]
  40eddc:	mov    DWORD PTR [rdi],eax
  40edde:	cmp    eax,0x0
  40ede1:	jne    40edec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1bc>
  40ede7:	jmp    40ee06 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d6>
  40edec:	mov    rdi,QWORD PTR [rbp-0x10]
  40edf0:	mov    rsi,QWORD PTR [rbp-0x18]
  40edf4:	mov    rdx,QWORD PTR [rbp-0x20]
  40edf8:	call   40e2b0 <flatcc_json_parser_float@@Base+0x3d0>
  40edfd:	mov    QWORD PTR [rbp-0x8],rax
  40ee01:	jmp    40ee66 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x236>
  40ee06:	mov    rax,QWORD PTR [rbp-0x28]
  40ee0a:	mov    DWORD PTR [rax],0x0
  40ee10:	mov    rdi,QWORD PTR [rbp-0x10]
  40ee14:	mov    rsi,QWORD PTR [rbp-0x18]
  40ee18:	mov    rdx,QWORD PTR [rbp-0x20]
  40ee1c:	mov    ecx,0x21
  40ee21:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40ee26:	mov    QWORD PTR [rbp-0x8],rax
  40ee2a:	jmp    40ee66 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x236>
  40ee2f:	mov    rax,QWORD PTR [rbp-0x28]
  40ee33:	mov    DWORD PTR [rax],0x0
  40ee39:	mov    rdi,QWORD PTR [rbp-0x10]
  40ee3d:	mov    rsi,QWORD PTR [rbp-0x18]
  40ee41:	mov    rdx,QWORD PTR [rbp-0x20]
  40ee45:	mov    ecx,DWORD PTR [rbp-0x2c]
  40ee48:	cmp    ecx,0x0
  40ee4b:	mov    ecx,0x20
  40ee50:	mov    r8d,0x1f
  40ee56:	cmovne r8d,ecx
  40ee5a:	mov    ecx,r8d
  40ee5d:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40ee62:	mov    QWORD PTR [rbp-0x8],rax
  40ee66:	mov    rax,QWORD PTR [rbp-0x8]
  40ee6a:	add    rsp,0x60
  40ee6e:	pop    rbp
  40ee6f:	ret    
  40ee70:	push   rbp
  40ee71:	mov    rbp,rsp
  40ee74:	mov    QWORD PTR [rbp-0x10],rdi
  40ee78:	mov    rdi,QWORD PTR [rbp-0x10]
  40ee7c:	mov    eax,edi
  40ee7e:	and    eax,0x3
  40ee81:	mov    edi,eax
  40ee83:	mov    QWORD PTR [rbp-0x18],rdi
  40ee87:	mov    rdi,QWORD PTR [rbp-0x10]
  40ee8b:	shr    rdi,0x2
  40ee8f:	lea    rdi,[rdi+rdi*2]
  40ee93:	mov    QWORD PTR [rbp-0x20],rdi
  40ee97:	mov    rdi,QWORD PTR [rbp-0x18]
  40ee9b:	mov    rcx,rdi
  40ee9e:	sub    rcx,0x2
  40eea2:	mov    QWORD PTR [rbp-0x28],rdi
  40eea6:	mov    QWORD PTR [rbp-0x30],rcx
  40eeaa:	jb     40ef05 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d5>
  40eeb0:	jmp    40eeb5 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x285>
  40eeb5:	mov    rax,QWORD PTR [rbp-0x28]
  40eeb9:	sub    rax,0x2
  40eebd:	mov    QWORD PTR [rbp-0x38],rax
  40eec1:	je     40eef4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
  40eec7:	jmp    40eecc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x29c>
  40eecc:	mov    rax,QWORD PTR [rbp-0x28]
  40eed0:	sub    rax,0x3
  40eed4:	mov    QWORD PTR [rbp-0x40],rax
  40eed8:	jne    40ef0a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2da>
  40eede:	jmp    40eee3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2b3>
  40eee3:	mov    rax,QWORD PTR [rbp-0x20]
  40eee7:	add    rax,0x2
  40eeeb:	mov    QWORD PTR [rbp-0x8],rax
  40eeef:	jmp    40ef12 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e2>
  40eef4:	mov    rax,QWORD PTR [rbp-0x20]
  40eef8:	add    rax,0x1
  40eefc:	mov    QWORD PTR [rbp-0x8],rax
  40ef00:	jmp    40ef12 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e2>
  40ef05:	jmp    40ef0a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2da>
  40ef0a:	mov    rax,QWORD PTR [rbp-0x20]
  40ef0e:	mov    QWORD PTR [rbp-0x8],rax
  40ef12:	mov    rax,QWORD PTR [rbp-0x8]
  40ef16:	pop    rbp
  40ef17:	ret    
  40ef18:	nop    DWORD PTR [rax+rax*1+0x0]
  40ef20:	push   rbp
  40ef21:	mov    rbp,rsp
  40ef24:	sub    rsp,0x10
  40ef28:	mov    QWORD PTR [rbp-0x8],rdi
  40ef2c:	mov    QWORD PTR [rbp-0x10],rsi
  40ef30:	mov    QWORD PTR [rbp-0x18],rdx
  40ef34:	mov    QWORD PTR [rbp-0x20],rcx
  40ef38:	mov    DWORD PTR [rbp-0x24],r8d
  40ef3c:	mov    DWORD PTR [rbp-0x28],0x0
  40ef43:	mov    rcx,QWORD PTR [rbp-0x8]
  40ef47:	mov    QWORD PTR [rbp-0x48],rcx
  40ef4b:	mov    QWORD PTR [rbp-0x50],0xffffffffffffffff
  40ef53:	mov    QWORD PTR [rbp-0x58],0xffffffffffffffff
  40ef5b:	lea    rcx,[rip+0x526e]        # 4141d0 <flatcc_builder_padding_base@@Base+0x1e60>
  40ef62:	mov    QWORD PTR [rbp-0x68],rcx
  40ef66:	mov    r8d,DWORD PTR [rbp-0x24]
  40ef6a:	and    r8d,0x20
  40ef6e:	mov    DWORD PTR [rbp-0x6c],r8d
  40ef72:	cmp    QWORD PTR [rbp-0x20],0x0
  40ef77:	je     40ef88 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x358>
  40ef7d:	mov    rax,QWORD PTR [rbp-0x20]
  40ef81:	mov    rax,QWORD PTR [rax]
  40ef84:	mov    QWORD PTR [rbp-0x58],rax
  40ef88:	mov    rax,QWORD PTR [rbp-0x58]
  40ef8c:	mov    QWORD PTR [rbp-0x60],rax
  40ef90:	mov    cl,BYTE PTR [rbp-0x24]
  40ef93:	and    cl,0x1f
  40ef96:	mov    BYTE PTR [rbp-0x24],cl
  40ef99:	mov    edx,DWORD PTR [rbp-0x24]
  40ef9c:	test   edx,edx
  40ef9e:	mov    DWORD PTR [rbp-0x70],edx
  40efa1:	je     40efc0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x390>
  40efa7:	jmp    40efac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x37c>
  40efac:	mov    eax,DWORD PTR [rbp-0x70]
  40efaf:	sub    eax,0x1
  40efb2:	mov    DWORD PTR [rbp-0x74],eax
  40efb5:	je     40efe1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b1>
  40efbb:	jmp    40f002 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3d2>
  40efc0:	mov    eax,DWORD PTR [rbp-0x6c]
  40efc3:	cmp    eax,0x0
  40efc6:	lea    rcx,[rip+0x5403]        # 4143d0 <flatcc_builder_padding_base@@Base+0x2060>
  40efcd:	lea    rdx,[rip+0x51fc]        # 4141d0 <flatcc_builder_padding_base@@Base+0x1e60>
  40efd4:	cmovne rdx,rcx
  40efd8:	mov    QWORD PTR [rbp-0x68],rdx
  40efdc:	jmp    40f00e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3de>
  40efe1:	mov    eax,DWORD PTR [rbp-0x6c]
  40efe4:	cmp    eax,0x0
  40efe7:	lea    rcx,[rip+0x54e2]        # 4144d0 <flatcc_builder_padding_base@@Base+0x2160>
  40efee:	lea    rdx,[rip+0x52db]        # 4142d0 <flatcc_builder_padding_base@@Base+0x1f60>
  40eff5:	cmovne rdx,rcx
  40eff9:	mov    QWORD PTR [rbp-0x68],rdx
  40effd:	jmp    40f00e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3de>
  40f002:	mov    DWORD PTR [rbp-0x28],0x3
  40f009:	jmp    40f258 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x628>
  40f00e:	cmp    QWORD PTR [rbp-0x18],0x0
  40f013:	je     40f032 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x402>
  40f019:	mov    rax,QWORD PTR [rbp-0x18]
  40f01d:	cmp    QWORD PTR [rax],0x0
  40f021:	jbe    40f032 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x402>
  40f027:	mov    rax,QWORD PTR [rbp-0x18]
  40f02b:	mov    rax,QWORD PTR [rax]
  40f02e:	mov    QWORD PTR [rbp-0x50],rax
  40f032:	jmp    40f037 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x407>
  40f037:	cmp    QWORD PTR [rbp-0x50],0x0
  40f03c:	jbe    40f253 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x623>
  40f042:	mov    QWORD PTR [rbp-0x30],0x0
  40f04a:	cmp    QWORD PTR [rbp-0x30],0x4
  40f04f:	jae    40f1bf <flatcc_json_parser_build_uint8_vector_base64@@Base+0x58f>
  40f055:	mov    rax,QWORD PTR [rbp-0x58]
  40f059:	cmp    rax,QWORD PTR [rbp-0x30]
  40f05d:	jne    40f07f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x44f>
  40f063:	mov    rax,QWORD PTR [rbp-0x30]
  40f067:	mov    QWORD PTR [rbp-0x38],rax
  40f06b:	mov    rax,QWORD PTR [rbp-0x30]
  40f06f:	mov    rcx,QWORD PTR [rbp-0x58]
  40f073:	sub    rcx,rax
  40f076:	mov    QWORD PTR [rbp-0x58],rcx
  40f07a:	jmp    40f29a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x66a>
  40f07f:	mov    rax,QWORD PTR [rbp-0x68]
  40f083:	mov    rcx,QWORD PTR [rbp-0x10]
  40f087:	mov    rdx,QWORD PTR [rbp-0x30]
  40f08b:	movzx  esi,BYTE PTR [rcx+rdx*1]
  40f08f:	mov    ecx,esi
  40f091:	mov    dil,BYTE PTR [rax+rcx*1]
  40f095:	mov    rax,QWORD PTR [rbp-0x30]
  40f099:	mov    BYTE PTR [rbp+rax*1-0x3c],dil
  40f09e:	movzx  esi,dil
  40f0a2:	cmp    esi,0x40
  40f0a5:	jl     40f1a9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x579>
  40f0ab:	mov    rax,QWORD PTR [rbp-0x30]
  40f0af:	movzx  ecx,BYTE PTR [rbp+rax*1-0x3c]
  40f0b4:	cmp    ecx,0x41
  40f0b7:	jne    40f0e6 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x4b6>
  40f0bd:	mov    rax,QWORD PTR [rbp-0x10]
  40f0c1:	add    rax,0x1
  40f0c5:	mov    QWORD PTR [rbp-0x10],rax
  40f0c9:	mov    rax,QWORD PTR [rbp-0x58]
  40f0cd:	add    rax,0xffffffffffffffff
  40f0d1:	mov    QWORD PTR [rbp-0x58],rax
  40f0d5:	mov    rax,QWORD PTR [rbp-0x30]
  40f0d9:	add    rax,0xffffffffffffffff
  40f0dd:	mov    QWORD PTR [rbp-0x30],rax
  40f0e1:	jmp    40f1ae <flatcc_json_parser_build_uint8_vector_base64@@Base+0x57e>
  40f0e6:	mov    rax,QWORD PTR [rbp-0x30]
  40f0ea:	mov    QWORD PTR [rbp-0x38],rax
  40f0ee:	mov    rax,QWORD PTR [rbp-0x30]
  40f0f2:	movzx  ecx,BYTE PTR [rbp+rax*1-0x3c]
  40f0f7:	cmp    ecx,0x42
  40f0fa:	jne    40f195 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x565>
  40f100:	mov    rax,QWORD PTR [rbp-0x30]
  40f104:	add    rax,0x1
  40f108:	mov    QWORD PTR [rbp-0x30],rax
  40f10c:	xor    eax,eax
  40f10e:	mov    cl,al
  40f110:	mov    rdx,QWORD PTR [rbp-0x30]
  40f114:	cmp    rdx,QWORD PTR [rbp-0x58]
  40f118:	mov    BYTE PTR [rbp-0x75],cl
  40f11b:	jae    40f12c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x4fc>
  40f121:	cmp    QWORD PTR [rbp-0x30],0x8
  40f126:	setb   al
  40f129:	mov    BYTE PTR [rbp-0x75],al
  40f12c:	mov    al,BYTE PTR [rbp-0x75]
  40f12f:	test   al,0x1
  40f131:	jne    40f13c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x50c>
  40f137:	jmp    40f190 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x560>
  40f13c:	mov    rax,QWORD PTR [rbp-0x68]
  40f140:	mov    rcx,QWORD PTR [rbp-0x10]
  40f144:	mov    rdx,QWORD PTR [rbp-0x30]
  40f148:	movzx  esi,BYTE PTR [rcx+rdx*1]
  40f14c:	mov    ecx,esi
  40f14e:	movzx  esi,BYTE PTR [rax+rcx*1]
  40f152:	cmp    esi,0x42
  40f155:	je     40f17f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x54f>
  40f15b:	mov    rax,QWORD PTR [rbp-0x68]
  40f15f:	mov    rcx,QWORD PTR [rbp-0x10]
  40f163:	mov    rdx,QWORD PTR [rbp-0x30]
  40f167:	movzx  esi,BYTE PTR [rcx+rdx*1]
  40f16b:	mov    ecx,esi
  40f16d:	movzx  esi,BYTE PTR [rax+rcx*1]
  40f171:	cmp    esi,0x41
  40f174:	je     40f17f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x54f>
  40f17a:	jmp    40f190 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x560>
  40f17f:	mov    rax,QWORD PTR [rbp-0x30]
  40f183:	add    rax,0x1
  40f187:	mov    QWORD PTR [rbp-0x30],rax
  40f18b:	jmp    40f10c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x4dc>
  40f190:	jmp    40f195 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x565>
  40f195:	mov    rax,QWORD PTR [rbp-0x30]
  40f199:	mov    rcx,QWORD PTR [rbp-0x58]
  40f19d:	sub    rcx,rax
  40f1a0:	mov    QWORD PTR [rbp-0x58],rcx
  40f1a4:	jmp    40f29a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x66a>
  40f1a9:	jmp    40f1ae <flatcc_json_parser_build_uint8_vector_base64@@Base+0x57e>
  40f1ae:	mov    rax,QWORD PTR [rbp-0x30]
  40f1b2:	add    rax,0x1
  40f1b6:	mov    QWORD PTR [rbp-0x30],rax
  40f1ba:	jmp    40f04a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x41a>
  40f1bf:	cmp    QWORD PTR [rbp-0x50],0x3
  40f1c4:	jae    40f1cf <flatcc_json_parser_build_uint8_vector_base64@@Base+0x59f>
  40f1ca:	jmp    40f3cd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x79d>
  40f1cf:	movzx  eax,BYTE PTR [rbp-0x3c]
  40f1d3:	shl    eax,0x2
  40f1d6:	movzx  ecx,BYTE PTR [rbp-0x3b]
  40f1da:	sar    ecx,0x4
  40f1dd:	or     eax,ecx
  40f1df:	mov    dl,al
  40f1e1:	mov    rsi,QWORD PTR [rbp-0x8]
  40f1e5:	mov    BYTE PTR [rsi],dl
  40f1e7:	movzx  eax,BYTE PTR [rbp-0x3b]
  40f1eb:	shl    eax,0x4
  40f1ee:	movzx  ecx,BYTE PTR [rbp-0x3a]
  40f1f2:	sar    ecx,0x2
  40f1f5:	or     eax,ecx
  40f1f7:	mov    dl,al
  40f1f9:	mov    rsi,QWORD PTR [rbp-0x8]
  40f1fd:	mov    BYTE PTR [rsi+0x1],dl
  40f200:	movzx  eax,BYTE PTR [rbp-0x3a]
  40f204:	shl    eax,0x6
  40f207:	movzx  ecx,BYTE PTR [rbp-0x39]
  40f20b:	or     eax,ecx
  40f20d:	mov    dl,al
  40f20f:	mov    rsi,QWORD PTR [rbp-0x8]
  40f213:	mov    BYTE PTR [rsi+0x2],dl
  40f216:	mov    rsi,QWORD PTR [rbp-0x8]
  40f21a:	add    rsi,0x3
  40f21e:	mov    QWORD PTR [rbp-0x8],rsi
  40f222:	mov    rsi,QWORD PTR [rbp-0x10]
  40f226:	add    rsi,0x4
  40f22a:	mov    QWORD PTR [rbp-0x10],rsi
  40f22e:	mov    rsi,QWORD PTR [rbp-0x50]
  40f232:	sub    rsi,0x3
  40f236:	mov    QWORD PTR [rbp-0x50],rsi
  40f23a:	mov    rsi,QWORD PTR [rbp-0x58]
  40f23e:	sub    rsi,0x4
  40f242:	mov    QWORD PTR [rbp-0x58],rsi
  40f246:	mov    rsi,QWORD PTR [rbp-0x58]
  40f24a:	mov    QWORD PTR [rbp-0x60],rsi
  40f24e:	jmp    40f037 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x407>
  40f253:	jmp    40f258 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x628>
  40f258:	cmp    QWORD PTR [rbp-0x18],0x0
  40f25d:	je     40f275 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x645>
  40f263:	mov    rax,QWORD PTR [rbp-0x8]
  40f267:	mov    rcx,QWORD PTR [rbp-0x48]
  40f26b:	sub    rax,rcx
  40f26e:	mov    rcx,QWORD PTR [rbp-0x18]
  40f272:	mov    QWORD PTR [rcx],rax
  40f275:	cmp    QWORD PTR [rbp-0x20],0x0
  40f27a:	je     40f291 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x661>
  40f280:	mov    rax,QWORD PTR [rbp-0x60]
  40f284:	mov    rcx,QWORD PTR [rbp-0x20]
  40f288:	mov    rdx,QWORD PTR [rcx]
  40f28b:	sub    rdx,rax
  40f28e:	mov    QWORD PTR [rcx],rdx
  40f291:	mov    eax,DWORD PTR [rbp-0x28]
  40f294:	add    rsp,0x10
  40f298:	pop    rbp
  40f299:	ret    
  40f29a:	mov    rax,QWORD PTR [rbp-0x38]
  40f29e:	test   rax,rax
  40f2a1:	mov    QWORD PTR [rbp-0x80],rax
  40f2a5:	je     40f2e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6b4>
  40f2ab:	jmp    40f2b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x680>
  40f2b0:	mov    rax,QWORD PTR [rbp-0x80]
  40f2b4:	sub    rax,0x2
  40f2b8:	mov    QWORD PTR [rbp-0x88],rax
  40f2bf:	je     40f2e9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6b9>
  40f2c5:	jmp    40f2ca <flatcc_json_parser_build_uint8_vector_base64@@Base+0x69a>
  40f2ca:	mov    rax,QWORD PTR [rbp-0x80]
  40f2ce:	sub    rax,0x3
  40f2d2:	mov    QWORD PTR [rbp-0x90],rax
  40f2d9:	je     40f33c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x70c>
  40f2df:	jmp    40f3a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x778>
  40f2e4:	jmp    40f3b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x784>
  40f2e9:	movzx  eax,BYTE PTR [rbp-0x3b]
  40f2ed:	shl    eax,0x4
  40f2f0:	and    eax,0xff
  40f2f5:	cmp    eax,0x0
  40f2f8:	je     40f303 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6d3>
  40f2fe:	jmp    40f3c1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x791>
  40f303:	cmp    QWORD PTR [rbp-0x50],0x1
  40f308:	jae    40f313 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6e3>
  40f30e:	jmp    40f3cd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x79d>
  40f313:	movzx  eax,BYTE PTR [rbp-0x3c]
  40f317:	shl    eax,0x2
  40f31a:	movzx  ecx,BYTE PTR [rbp-0x3b]
  40f31e:	sar    ecx,0x4
  40f321:	or     eax,ecx
  40f323:	mov    dl,al
  40f325:	mov    rsi,QWORD PTR [rbp-0x8]
  40f329:	mov    BYTE PTR [rsi],dl
  40f32b:	mov    rsi,QWORD PTR [rbp-0x8]
  40f32f:	add    rsi,0x1
  40f333:	mov    QWORD PTR [rbp-0x8],rsi
  40f337:	jmp    40f3b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x784>
  40f33c:	movzx  eax,BYTE PTR [rbp-0x3a]
  40f340:	shl    eax,0x6
  40f343:	and    eax,0xff
  40f348:	cmp    eax,0x0
  40f34b:	je     40f356 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x726>
  40f351:	jmp    40f3c1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x791>
  40f356:	cmp    QWORD PTR [rbp-0x50],0x2
  40f35b:	jae    40f366 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x736>
  40f361:	jmp    40f3cd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x79d>
  40f366:	movzx  eax,BYTE PTR [rbp-0x3c]
  40f36a:	shl    eax,0x2
  40f36d:	movzx  ecx,BYTE PTR [rbp-0x3b]
  40f371:	sar    ecx,0x4
  40f374:	or     eax,ecx
  40f376:	mov    dl,al
  40f378:	mov    rsi,QWORD PTR [rbp-0x8]
  40f37c:	mov    BYTE PTR [rsi],dl
  40f37e:	movzx  eax,BYTE PTR [rbp-0x3b]
  40f382:	shl    eax,0x4
  40f385:	movzx  ecx,BYTE PTR [rbp-0x3a]
  40f389:	sar    ecx,0x2
  40f38c:	or     eax,ecx
  40f38e:	mov    dl,al
  40f390:	mov    rsi,QWORD PTR [rbp-0x8]
  40f394:	mov    BYTE PTR [rsi+0x1],dl
  40f397:	mov    rsi,QWORD PTR [rbp-0x8]
  40f39b:	add    rsi,0x2
  40f39f:	mov    QWORD PTR [rbp-0x8],rsi
  40f3a3:	jmp    40f3b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x784>
  40f3a8:	mov    DWORD PTR [rbp-0x28],0x4
  40f3af:	jmp    40f258 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x628>
  40f3b4:	mov    rax,QWORD PTR [rbp-0x58]
  40f3b8:	mov    QWORD PTR [rbp-0x60],rax
  40f3bc:	jmp    40f258 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x628>
  40f3c1:	mov    DWORD PTR [rbp-0x28],0x5
  40f3c8:	jmp    40f258 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x628>
  40f3cd:	mov    DWORD PTR [rbp-0x28],0x1
  40f3d4:	jmp    40f258 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x628>
  40f3d9:	nop    DWORD PTR [rax+0x0]

000000000040f3e0 <flatcc_json_parser_build_string@@Base>:
  40f3e0:	push   rbp
  40f3e1:	mov    rbp,rsp
  40f3e4:	sub    rsp,0x50
  40f3e8:	mov    QWORD PTR [rbp-0x10],rdi
  40f3ec:	mov    QWORD PTR [rbp-0x18],rsi
  40f3f0:	mov    QWORD PTR [rbp-0x20],rdx
  40f3f4:	mov    QWORD PTR [rbp-0x28],rcx
  40f3f8:	mov    rdi,QWORD PTR [rbp-0x10]
  40f3fc:	mov    rsi,QWORD PTR [rbp-0x18]
  40f400:	mov    rdx,QWORD PTR [rbp-0x20]
  40f404:	call   40e240 <flatcc_json_parser_float@@Base+0x360>
  40f409:	mov    QWORD PTR [rbp-0x18],rax
  40f40d:	mov    rdi,QWORD PTR [rbp-0x10]
  40f411:	mov    rax,QWORD PTR [rbp-0x18]
  40f415:	mov    QWORD PTR [rbp-0x38],rax
  40f419:	mov    rdx,QWORD PTR [rbp-0x20]
  40f41d:	mov    rsi,rax
  40f420:	call   40c570 <flatcc_json_parser_string_part@@Base>
  40f425:	mov    QWORD PTR [rbp-0x18],rax
  40f429:	mov    rax,QWORD PTR [rbp-0x18]
  40f42d:	cmp    rax,QWORD PTR [rbp-0x20]
  40f431:	je     40f470 <flatcc_json_parser_build_string@@Base+0x90>
  40f437:	mov    rax,QWORD PTR [rbp-0x18]
  40f43b:	movsx  ecx,BYTE PTR [rax]
  40f43e:	cmp    ecx,0x22
  40f441:	jne    40f470 <flatcc_json_parser_build_string@@Base+0x90>
  40f447:	mov    rax,QWORD PTR [rbp-0x10]
  40f44b:	mov    rdi,QWORD PTR [rax]
  40f44e:	mov    rsi,QWORD PTR [rbp-0x38]
  40f452:	mov    rax,QWORD PTR [rbp-0x18]
  40f456:	mov    rcx,QWORD PTR [rbp-0x38]
  40f45a:	sub    rax,rcx
  40f45d:	mov    rdx,rax
  40f460:	call   409db0 <flatcc_builder_create_string@@Base>
  40f465:	mov    rcx,QWORD PTR [rbp-0x28]
  40f469:	mov    DWORD PTR [rcx],eax
  40f46b:	jmp    40f5b9 <flatcc_json_parser_build_string@@Base+0x1d9>
  40f470:	mov    rax,QWORD PTR [rbp-0x10]
  40f474:	mov    rdi,QWORD PTR [rax]
  40f477:	call   407950 <flatcc_builder_start_string@@Base>
  40f47c:	cmp    eax,0x0
  40f47f:	jne    40f4b2 <flatcc_json_parser_build_string@@Base+0xd2>
  40f485:	mov    rax,QWORD PTR [rbp-0x10]
  40f489:	mov    rdi,QWORD PTR [rax]
  40f48c:	mov    rsi,QWORD PTR [rbp-0x38]
  40f490:	mov    rax,QWORD PTR [rbp-0x18]
  40f494:	mov    rcx,QWORD PTR [rbp-0x38]
  40f498:	sub    rax,rcx
  40f49b:	mov    rdx,rax
  40f49e:	call   407210 <flatcc_builder_append_string@@Base>
  40f4a3:	xor    r8d,r8d
  40f4a6:	mov    ecx,r8d
  40f4a9:	cmp    rcx,rax
  40f4ac:	jne    40f4b7 <flatcc_json_parser_build_string@@Base+0xd7>
  40f4b2:	jmp    40f5d3 <flatcc_json_parser_build_string@@Base+0x1f3>
  40f4b7:	jmp    40f4bc <flatcc_json_parser_build_string@@Base+0xdc>
  40f4bc:	xor    eax,eax
  40f4be:	mov    cl,al
  40f4c0:	mov    rdx,QWORD PTR [rbp-0x18]
  40f4c4:	cmp    rdx,QWORD PTR [rbp-0x20]
  40f4c8:	mov    BYTE PTR [rbp-0x39],cl
  40f4cb:	je     40f4e1 <flatcc_json_parser_build_string@@Base+0x101>
  40f4d1:	mov    rax,QWORD PTR [rbp-0x18]
  40f4d5:	movsx  ecx,BYTE PTR [rax]
  40f4d8:	cmp    ecx,0x22
  40f4db:	setne  dl
  40f4de:	mov    BYTE PTR [rbp-0x39],dl
  40f4e1:	mov    al,BYTE PTR [rbp-0x39]
  40f4e4:	test   al,0x1
  40f4e6:	jne    40f4f1 <flatcc_json_parser_build_string@@Base+0x111>
  40f4ec:	jmp    40f5a7 <flatcc_json_parser_build_string@@Base+0x1c7>
  40f4f1:	lea    rcx,[rbp-0x2c]
  40f4f5:	mov    rdi,QWORD PTR [rbp-0x10]
  40f4f9:	mov    rsi,QWORD PTR [rbp-0x18]
  40f4fd:	mov    rdx,QWORD PTR [rbp-0x20]
  40f501:	call   40c8a0 <flatcc_json_parser_string_escape@@Base>
  40f506:	lea    rcx,[rbp-0x2c]
  40f50a:	mov    QWORD PTR [rbp-0x18],rax
  40f50e:	mov    rax,QWORD PTR [rbp-0x10]
  40f512:	mov    rdi,QWORD PTR [rax]
  40f515:	add    rcx,0x1
  40f519:	movsx  rdx,BYTE PTR [rbp-0x2c]
  40f51e:	mov    rsi,rcx
  40f521:	call   407210 <flatcc_builder_append_string@@Base>
  40f526:	xor    r8d,r8d
  40f529:	mov    ecx,r8d
  40f52c:	cmp    rcx,rax
  40f52f:	jne    40f53a <flatcc_json_parser_build_string@@Base+0x15a>
  40f535:	jmp    40f5d3 <flatcc_json_parser_build_string@@Base+0x1f3>
  40f53a:	mov    rax,QWORD PTR [rbp-0x20]
  40f53e:	mov    rdi,QWORD PTR [rbp-0x10]
  40f542:	mov    rcx,QWORD PTR [rbp-0x18]
  40f546:	mov    QWORD PTR [rbp-0x38],rcx
  40f54a:	mov    rdx,QWORD PTR [rbp-0x20]
  40f54e:	mov    rsi,rcx
  40f551:	mov    QWORD PTR [rbp-0x48],rax
  40f555:	call   40c570 <flatcc_json_parser_string_part@@Base>
  40f55a:	mov    QWORD PTR [rbp-0x18],rax
  40f55e:	mov    rcx,QWORD PTR [rbp-0x48]
  40f562:	cmp    rcx,rax
  40f565:	je     40f5a2 <flatcc_json_parser_build_string@@Base+0x1c2>
  40f56b:	mov    rax,QWORD PTR [rbp-0x10]
  40f56f:	mov    rdi,QWORD PTR [rax]
  40f572:	mov    rsi,QWORD PTR [rbp-0x38]
  40f576:	mov    rax,QWORD PTR [rbp-0x18]
  40f57a:	mov    rcx,QWORD PTR [rbp-0x38]
  40f57e:	sub    rax,rcx
  40f581:	mov    rdx,rax
  40f584:	call   407210 <flatcc_builder_append_string@@Base>
  40f589:	xor    r8d,r8d
  40f58c:	mov    ecx,r8d
  40f58f:	cmp    rcx,rax
  40f592:	jne    40f59d <flatcc_json_parser_build_string@@Base+0x1bd>
  40f598:	jmp    40f5d3 <flatcc_json_parser_build_string@@Base+0x1f3>
  40f59d:	jmp    40f5a2 <flatcc_json_parser_build_string@@Base+0x1c2>
  40f5a2:	jmp    40f4bc <flatcc_json_parser_build_string@@Base+0xdc>
  40f5a7:	mov    rax,QWORD PTR [rbp-0x10]
  40f5ab:	mov    rdi,QWORD PTR [rax]
  40f5ae:	call   40a020 <flatcc_builder_end_string@@Base>
  40f5b3:	mov    rdi,QWORD PTR [rbp-0x28]
  40f5b7:	mov    DWORD PTR [rdi],eax
  40f5b9:	mov    rdi,QWORD PTR [rbp-0x10]
  40f5bd:	mov    rsi,QWORD PTR [rbp-0x18]
  40f5c1:	mov    rdx,QWORD PTR [rbp-0x20]
  40f5c5:	call   40e2b0 <flatcc_json_parser_float@@Base+0x3d0>
  40f5ca:	mov    QWORD PTR [rbp-0x8],rax
  40f5ce:	jmp    40f5e5 <flatcc_json_parser_build_string@@Base+0x205>
  40f5d3:	mov    rax,QWORD PTR [rbp-0x28]
  40f5d7:	mov    DWORD PTR [rax],0x0
  40f5dd:	mov    rax,QWORD PTR [rbp-0x18]
  40f5e1:	mov    QWORD PTR [rbp-0x8],rax
  40f5e5:	mov    rax,QWORD PTR [rbp-0x8]
  40f5e9:	add    rsp,0x50
  40f5ed:	pop    rbp
  40f5ee:	ret    
  40f5ef:	nop

000000000040f5f0 <flatcc_json_parser_prepare_unions@@Base>:
  40f5f0:	push   rbp
  40f5f1:	mov    rbp,rsp
  40f5f4:	sub    rsp,0x40
  40f5f8:	mov    QWORD PTR [rbp-0x10],rdi
  40f5fc:	mov    QWORD PTR [rbp-0x18],rsi
  40f600:	mov    QWORD PTR [rbp-0x20],rdx
  40f604:	mov    QWORD PTR [rbp-0x28],rcx
  40f608:	mov    QWORD PTR [rbp-0x30],r8
  40f60c:	mov    rcx,QWORD PTR [rbp-0x10]
  40f610:	mov    rdi,QWORD PTR [rcx]
  40f613:	mov    rcx,QWORD PTR [rbp-0x28]
  40f617:	sub    rcx,0x1
  40f61b:	imul   rcx,rcx,0x28
  40f61f:	add    rcx,0x38
  40f623:	mov    rsi,rcx
  40f626:	call   405760 <flatcc_builder_enter_user_frame@@Base>
  40f62b:	mov    rcx,QWORD PTR [rbp-0x30]
  40f62f:	mov    QWORD PTR [rcx],rax
  40f632:	cmp    rax,0x0
  40f636:	jne    40f65b <flatcc_json_parser_prepare_unions@@Base+0x6b>
  40f63c:	mov    rdi,QWORD PTR [rbp-0x10]
  40f640:	mov    rsi,QWORD PTR [rbp-0x18]
  40f644:	mov    rdx,QWORD PTR [rbp-0x20]
  40f648:	mov    ecx,0x21
  40f64d:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40f652:	mov    QWORD PTR [rbp-0x8],rax
  40f656:	jmp    40f685 <flatcc_json_parser_prepare_unions@@Base+0x95>
  40f65b:	mov    rax,QWORD PTR [rbp-0x10]
  40f65f:	mov    rdi,QWORD PTR [rax]
  40f662:	mov    rax,QWORD PTR [rbp-0x30]
  40f666:	mov    rsi,QWORD PTR [rax]
  40f669:	call   405970 <flatcc_builder_get_user_frame_ptr@@Base>
  40f66e:	mov    QWORD PTR [rbp-0x38],rax
  40f672:	mov    rax,QWORD PTR [rbp-0x28]
  40f676:	mov    rsi,QWORD PTR [rbp-0x38]
  40f67a:	mov    QWORD PTR [rsi],rax
  40f67d:	mov    rax,QWORD PTR [rbp-0x18]
  40f681:	mov    QWORD PTR [rbp-0x8],rax
  40f685:	mov    rax,QWORD PTR [rbp-0x8]
  40f689:	add    rsp,0x40
  40f68d:	pop    rbp
  40f68e:	ret    
  40f68f:	nop

000000000040f690 <flatcc_json_parser_finalize_unions@@Base>:
  40f690:	push   rbp
  40f691:	mov    rbp,rsp
  40f694:	sub    rsp,0x30
  40f698:	mov    QWORD PTR [rbp-0x8],rdi
  40f69c:	mov    QWORD PTR [rbp-0x10],rsi
  40f6a0:	mov    QWORD PTR [rbp-0x18],rdx
  40f6a4:	mov    QWORD PTR [rbp-0x20],rcx
  40f6a8:	mov    rcx,QWORD PTR [rbp-0x8]
  40f6ac:	mov    rdi,QWORD PTR [rcx]
  40f6af:	mov    rsi,QWORD PTR [rbp-0x20]
  40f6b3:	call   405970 <flatcc_builder_get_user_frame_ptr@@Base>
  40f6b8:	mov    QWORD PTR [rbp-0x28],rax
  40f6bc:	mov    rax,QWORD PTR [rbp-0x28]
  40f6c0:	cmp    QWORD PTR [rax+0x8],0x0
  40f6c5:	je     40f6e5 <flatcc_json_parser_finalize_unions@@Base+0x55>
  40f6cb:	mov    rdi,QWORD PTR [rbp-0x8]
  40f6cf:	mov    rsi,QWORD PTR [rbp-0x10]
  40f6d3:	mov    rdx,QWORD PTR [rbp-0x18]
  40f6d7:	mov    ecx,0x1b
  40f6dc:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40f6e1:	mov    QWORD PTR [rbp-0x10],rax
  40f6e5:	mov    rax,QWORD PTR [rbp-0x8]
  40f6e9:	mov    rdi,QWORD PTR [rax]
  40f6ec:	mov    rsi,QWORD PTR [rbp-0x20]
  40f6f0:	call   4058e0 <flatcc_builder_exit_user_frame_at@@Base>
  40f6f5:	mov    rsi,QWORD PTR [rbp-0x10]
  40f6f9:	mov    QWORD PTR [rbp-0x30],rax
  40f6fd:	mov    rax,rsi
  40f700:	add    rsp,0x30
  40f704:	pop    rbp
  40f705:	ret    
  40f706:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040f710 <flatcc_json_parser_union@@Base>:
  40f710:	push   rbp
  40f711:	mov    rbp,rsp
  40f714:	sub    rsp,0x60
  40f718:	mov    ax,r8w
  40f71c:	mov    r10,QWORD PTR [rbp+0x10]
  40f720:	mov    QWORD PTR [rbp-0x10],rdi
  40f724:	mov    QWORD PTR [rbp-0x18],rsi
  40f728:	mov    QWORD PTR [rbp-0x20],rdx
  40f72c:	mov    QWORD PTR [rbp-0x28],rcx
  40f730:	mov    WORD PTR [rbp-0x2a],ax
  40f734:	mov    QWORD PTR [rbp-0x38],r9
  40f738:	mov    rcx,QWORD PTR [rbp-0x10]
  40f73c:	mov    rdi,QWORD PTR [rcx]
  40f73f:	mov    rsi,QWORD PTR [rbp-0x38]
  40f743:	mov    QWORD PTR [rbp-0x58],r10
  40f747:	call   405970 <flatcc_builder_get_user_frame_ptr@@Base>
  40f74c:	mov    QWORD PTR [rbp-0x40],rax
  40f750:	mov    rax,QWORD PTR [rbp-0x40]
  40f754:	add    rax,0x10
  40f758:	imul   rcx,QWORD PTR [rbp-0x28],0x28
  40f75d:	add    rax,rcx
  40f760:	mov    QWORD PTR [rbp-0x48],rax
  40f764:	mov    rax,QWORD PTR [rbp-0x48]
  40f768:	cmp    QWORD PTR [rax],0x0
  40f76c:	je     40f791 <flatcc_json_parser_union@@Base+0x81>
  40f772:	mov    rdi,QWORD PTR [rbp-0x10]
  40f776:	mov    rsi,QWORD PTR [rbp-0x18]
  40f77a:	mov    rdx,QWORD PTR [rbp-0x20]
  40f77e:	mov    ecx,0x1c
  40f783:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40f788:	mov    QWORD PTR [rbp-0x8],rax
  40f78c:	jmp    40f8cc <flatcc_json_parser_union@@Base+0x1bc>
  40f791:	mov    rax,QWORD PTR [rbp-0x48]
  40f795:	cmp    BYTE PTR [rax+0x14],0x0
  40f799:	jne    40f7f1 <flatcc_json_parser_union@@Base+0xe1>
  40f79f:	mov    rax,QWORD PTR [rbp-0x40]
  40f7a3:	mov    rcx,QWORD PTR [rax+0x8]
  40f7a7:	add    rcx,0x1
  40f7ab:	mov    QWORD PTR [rax+0x8],rcx
  40f7af:	mov    rax,QWORD PTR [rbp-0x10]
  40f7b3:	mov    edx,DWORD PTR [rax+0x18]
  40f7b6:	mov    rax,QWORD PTR [rbp-0x48]
  40f7ba:	mov    DWORD PTR [rax+0x10],edx
  40f7bd:	mov    rax,QWORD PTR [rbp-0x10]
  40f7c1:	mov    rax,QWORD PTR [rax+0x8]
  40f7c5:	mov    rcx,QWORD PTR [rbp-0x48]
  40f7c9:	mov    QWORD PTR [rcx+0x8],rax
  40f7cd:	mov    rdi,QWORD PTR [rbp-0x10]
  40f7d1:	mov    rax,QWORD PTR [rbp-0x18]
  40f7d5:	mov    rcx,QWORD PTR [rbp-0x48]
  40f7d9:	mov    QWORD PTR [rcx],rax
  40f7dc:	mov    rdx,QWORD PTR [rbp-0x20]
  40f7e0:	mov    rsi,rax
  40f7e3:	call   40d7e0 <flatcc_json_parser_generic_json@@Base>
  40f7e8:	mov    QWORD PTR [rbp-0x18],rax
  40f7ec:	jmp    40f8c4 <flatcc_json_parser_union@@Base+0x1b4>
  40f7f1:	mov    rax,QWORD PTR [rbp-0x48]
  40f7f5:	mov    cl,BYTE PTR [rax+0x15]
  40f7f8:	mov    BYTE PTR [rbp-0x50],cl
  40f7fb:	mov    rax,QWORD PTR [rbp-0x48]
  40f7ff:	movzx  edx,BYTE PTR [rax+0x15]
  40f803:	cmp    edx,0x0
  40f806:	jne    40f82b <flatcc_json_parser_union@@Base+0x11b>
  40f80c:	mov    rdi,QWORD PTR [rbp-0x10]
  40f810:	mov    rsi,QWORD PTR [rbp-0x18]
  40f814:	mov    rdx,QWORD PTR [rbp-0x20]
  40f818:	mov    ecx,0x19
  40f81d:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40f822:	mov    QWORD PTR [rbp-0x8],rax
  40f826:	jmp    40f8cc <flatcc_json_parser_union@@Base+0x1bc>
  40f82b:	mov    rax,QWORD PTR [rbp-0x40]
  40f82f:	mov    rcx,QWORD PTR [rax+0x8]
  40f833:	add    rcx,0xffffffffffffffff
  40f837:	mov    QWORD PTR [rax+0x8],rcx
  40f83b:	mov    rax,QWORD PTR [rbp+0x10]
  40f83f:	mov    rdi,QWORD PTR [rbp-0x10]
  40f843:	mov    rsi,QWORD PTR [rbp-0x18]
  40f847:	mov    rdx,QWORD PTR [rbp-0x20]
  40f84b:	mov    rcx,QWORD PTR [rbp-0x48]
  40f84f:	mov    r8b,BYTE PTR [rcx+0x15]
  40f853:	lea    rcx,[rbp-0x50]
  40f857:	add    rcx,0x4
  40f85b:	movzx  r9d,r8b
  40f85f:	mov    QWORD PTR [rbp-0x60],rcx
  40f863:	mov    ecx,r9d
  40f866:	mov    r8,QWORD PTR [rbp-0x60]
  40f86a:	call   rax
  40f86c:	mov    QWORD PTR [rbp-0x18],rax
  40f870:	mov    rax,QWORD PTR [rbp-0x18]
  40f874:	cmp    rax,QWORD PTR [rbp-0x20]
  40f878:	je     40f8bf <flatcc_json_parser_union@@Base+0x1af>
  40f87e:	mov    rax,QWORD PTR [rbp-0x10]
  40f882:	mov    rdi,QWORD PTR [rax]
  40f885:	movzx  esi,WORD PTR [rbp-0x2a]
  40f889:	mov    rdx,QWORD PTR [rbp-0x50]
  40f88d:	call   409150 <flatcc_builder_table_add_union@@Base>
  40f892:	cmp    eax,0x0
  40f895:	je     40f8ba <flatcc_json_parser_union@@Base+0x1aa>
  40f89b:	mov    rdi,QWORD PTR [rbp-0x10]
  40f89f:	mov    rsi,QWORD PTR [rbp-0x18]
  40f8a3:	mov    rdx,QWORD PTR [rbp-0x20]
  40f8a7:	mov    ecx,0x1c
  40f8ac:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40f8b1:	mov    QWORD PTR [rbp-0x8],rax
  40f8b5:	jmp    40f8cc <flatcc_json_parser_union@@Base+0x1bc>
  40f8ba:	jmp    40f8bf <flatcc_json_parser_union@@Base+0x1af>
  40f8bf:	jmp    40f8c4 <flatcc_json_parser_union@@Base+0x1b4>
  40f8c4:	mov    rax,QWORD PTR [rbp-0x18]
  40f8c8:	mov    QWORD PTR [rbp-0x8],rax
  40f8cc:	mov    rax,QWORD PTR [rbp-0x8]
  40f8d0:	add    rsp,0x60
  40f8d4:	pop    rbp
  40f8d5:	ret    
  40f8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040f8e0 <flatcc_json_parser_union_type@@Base>:
  40f8e0:	push   rbp
  40f8e1:	mov    rbp,rsp
  40f8e4:	sub    rsp,0x90
  40f8eb:	mov    ax,r8w
  40f8ef:	mov    r10,QWORD PTR [rbp+0x18]
  40f8f3:	mov    r11,QWORD PTR [rbp+0x10]
  40f8f7:	mov    QWORD PTR [rbp-0x10],rdi
  40f8fb:	mov    QWORD PTR [rbp-0x18],rsi
  40f8ff:	mov    QWORD PTR [rbp-0x20],rdx
  40f903:	mov    QWORD PTR [rbp-0x28],rcx
  40f907:	mov    WORD PTR [rbp-0x2a],ax
  40f90b:	mov    QWORD PTR [rbp-0x38],r9
  40f90f:	mov    rcx,QWORD PTR [rbp-0x10]
  40f913:	mov    rdi,QWORD PTR [rcx]
  40f916:	mov    rsi,QWORD PTR [rbp-0x38]
  40f91a:	mov    QWORD PTR [rbp-0x70],r11
  40f91e:	mov    QWORD PTR [rbp-0x78],r10
  40f922:	call   405970 <flatcc_builder_get_user_frame_ptr@@Base>
  40f927:	mov    QWORD PTR [rbp-0x40],rax
  40f92b:	mov    rax,QWORD PTR [rbp-0x40]
  40f92f:	add    rax,0x10
  40f933:	imul   rcx,QWORD PTR [rbp-0x28],0x28
  40f938:	add    rax,rcx
  40f93b:	mov    QWORD PTR [rbp-0x48],rax
  40f93f:	mov    rax,QWORD PTR [rbp-0x48]
  40f943:	cmp    BYTE PTR [rax+0x14],0x0
  40f947:	je     40f96c <flatcc_json_parser_union_type@@Base+0x8c>
  40f94d:	mov    rdi,QWORD PTR [rbp-0x10]
  40f951:	mov    rsi,QWORD PTR [rbp-0x18]
  40f955:	mov    rdx,QWORD PTR [rbp-0x20]
  40f959:	mov    ecx,0x1c
  40f95e:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40f963:	mov    QWORD PTR [rbp-0x8],rax
  40f967:	jmp    40fb42 <flatcc_json_parser_union_type@@Base+0x262>
  40f96c:	mov    rax,QWORD PTR [rbp-0x48]
  40f970:	mov    BYTE PTR [rax+0x14],0x1
  40f974:	mov    rdi,QWORD PTR [rbp-0x10]
  40f978:	mov    rax,QWORD PTR [rbp-0x18]
  40f97c:	mov    QWORD PTR [rbp-0x58],rax
  40f980:	mov    rdx,QWORD PTR [rbp-0x20]
  40f984:	mov    rcx,QWORD PTR [rbp-0x48]
  40f988:	add    rcx,0x15
  40f98c:	mov    rsi,rax
  40f98f:	call   40fb50 <flatcc_json_parser_union_type@@Base+0x270>
  40f994:	mov    QWORD PTR [rbp-0x18],rax
  40f998:	mov    rax,QWORD PTR [rbp-0x58]
  40f99c:	cmp    rax,QWORD PTR [rbp-0x18]
  40f9a0:	jne    40f9ca <flatcc_json_parser_union_type@@Base+0xea>
  40f9a6:	mov    rdi,QWORD PTR [rbp-0x10]
  40f9aa:	mov    rsi,QWORD PTR [rbp-0x18]
  40f9ae:	mov    rdx,QWORD PTR [rbp-0x20]
  40f9b2:	mov    rcx,QWORD PTR [rbp+0x10]
  40f9b6:	mov    rax,QWORD PTR [rbp-0x48]
  40f9ba:	add    rax,0x15
  40f9be:	mov    r8,rax
  40f9c1:	call   40fc10 <flatcc_json_parser_union_type@@Base+0x330>
  40f9c6:	mov    QWORD PTR [rbp-0x18],rax
  40f9ca:	mov    rax,QWORD PTR [rbp-0x48]
  40f9ce:	cmp    QWORD PTR [rax],0x0
  40f9d2:	jne    40fa08 <flatcc_json_parser_union_type@@Base+0x128>
  40f9d8:	mov    rax,QWORD PTR [rbp-0x48]
  40f9dc:	movzx  ecx,BYTE PTR [rax+0x15]
  40f9e0:	cmp    ecx,0x0
  40f9e3:	setne  dl
  40f9e6:	and    dl,0x1
  40f9e9:	movzx  ecx,dl
  40f9ec:	movsxd rax,ecx
  40f9ef:	mov    rsi,QWORD PTR [rbp-0x40]
  40f9f3:	add    rax,QWORD PTR [rsi+0x8]
  40f9f7:	mov    QWORD PTR [rsi+0x8],rax
  40f9fb:	mov    rax,QWORD PTR [rbp-0x18]
  40f9ff:	mov    QWORD PTR [rbp-0x8],rax
  40fa03:	jmp    40fb42 <flatcc_json_parser_union_type@@Base+0x262>
  40fa08:	mov    rax,QWORD PTR [rbp-0x40]
  40fa0c:	cmp    QWORD PTR [rax+0x8],0x0
  40fa11:	je     40fa1c <flatcc_json_parser_union_type@@Base+0x13c>
  40fa17:	jmp    40fa3b <flatcc_json_parser_union_type@@Base+0x15b>
  40fa1c:	lea    rdi,[rip+0x5000]        # 414a23 <flatcc_builder_padding_base@@Base+0x26b3>
  40fa23:	lea    rsi,[rip+0x5008]        # 414a32 <flatcc_builder_padding_base@@Base+0x26c2>
  40fa2a:	mov    edx,0x3c5
  40fa2f:	lea    rcx,[rip+0x5060]        # 414a96 <flatcc_builder_padding_base@@Base+0x2726>
  40fa36:	call   403060 <__assert_fail@plt>
  40fa3b:	mov    rax,QWORD PTR [rbp-0x40]
  40fa3f:	mov    rcx,QWORD PTR [rax+0x8]
  40fa43:	add    rcx,0xffffffffffffffff
  40fa47:	mov    QWORD PTR [rax+0x8],rcx
  40fa4b:	mov    rax,QWORD PTR [rbp-0x10]
  40fa4f:	mov    edx,DWORD PTR [rax+0x18]
  40fa52:	mov    DWORD PTR [rbp-0x5c],edx
  40fa55:	mov    rax,QWORD PTR [rbp-0x10]
  40fa59:	mov    rax,QWORD PTR [rax+0x8]
  40fa5d:	mov    QWORD PTR [rbp-0x68],rax
  40fa61:	mov    rax,QWORD PTR [rbp-0x48]
  40fa65:	mov    edx,DWORD PTR [rax+0x10]
  40fa68:	mov    rax,QWORD PTR [rbp-0x10]
  40fa6c:	mov    DWORD PTR [rax+0x18],edx
  40fa6f:	mov    rax,QWORD PTR [rbp-0x48]
  40fa73:	mov    rax,QWORD PTR [rax+0x8]
  40fa77:	mov    rcx,QWORD PTR [rbp-0x10]
  40fa7b:	mov    QWORD PTR [rcx+0x8],rax
  40fa7f:	mov    rax,QWORD PTR [rbp-0x48]
  40fa83:	mov    sil,BYTE PTR [rax+0x15]
  40fa87:	mov    BYTE PTR [rbp-0x50],sil
  40fa8b:	mov    rax,QWORD PTR [rbp-0x20]
  40fa8f:	mov    rcx,QWORD PTR [rbp+0x18]
  40fa93:	mov    rdi,QWORD PTR [rbp-0x10]
  40fa97:	mov    r8,QWORD PTR [rbp-0x48]
  40fa9b:	mov    rsi,QWORD PTR [r8]
  40fa9e:	mov    rdx,QWORD PTR [rbp-0x20]
  40faa2:	mov    r8,QWORD PTR [rbp-0x48]
  40faa6:	mov    r9b,BYTE PTR [r8+0x15]
  40faaa:	lea    r8,[rbp-0x50]
  40faae:	add    r8,0x4
  40fab2:	movzx  r10d,r9b
  40fab6:	mov    QWORD PTR [rbp-0x80],rcx
  40faba:	mov    ecx,r10d
  40fabd:	mov    r11,QWORD PTR [rbp-0x80]
  40fac1:	mov    QWORD PTR [rbp-0x88],rax
  40fac8:	call   r11
  40facb:	mov    rdx,QWORD PTR [rbp-0x88]
  40fad2:	cmp    rdx,rax
  40fad5:	jne    40fae8 <flatcc_json_parser_union_type@@Base+0x208>
  40fadb:	mov    rax,QWORD PTR [rbp-0x20]
  40fadf:	mov    QWORD PTR [rbp-0x8],rax
  40fae3:	jmp    40fb42 <flatcc_json_parser_union_type@@Base+0x262>
  40fae8:	mov    rax,QWORD PTR [rbp-0x10]
  40faec:	mov    rdi,QWORD PTR [rax]
  40faef:	movzx  esi,WORD PTR [rbp-0x2a]
  40faf3:	mov    rdx,QWORD PTR [rbp-0x50]
  40faf7:	call   409150 <flatcc_builder_table_add_union@@Base>
  40fafc:	cmp    eax,0x0
  40faff:	je     40fb24 <flatcc_json_parser_union_type@@Base+0x244>
  40fb05:	mov    rdi,QWORD PTR [rbp-0x10]
  40fb09:	mov    rsi,QWORD PTR [rbp-0x18]
  40fb0d:	mov    rdx,QWORD PTR [rbp-0x20]
  40fb11:	mov    ecx,0x1c
  40fb16:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40fb1b:	mov    QWORD PTR [rbp-0x8],rax
  40fb1f:	jmp    40fb42 <flatcc_json_parser_union_type@@Base+0x262>
  40fb24:	mov    eax,DWORD PTR [rbp-0x5c]
  40fb27:	mov    rcx,QWORD PTR [rbp-0x10]
  40fb2b:	mov    DWORD PTR [rcx+0x18],eax
  40fb2e:	mov    rcx,QWORD PTR [rbp-0x68]
  40fb32:	mov    rdx,QWORD PTR [rbp-0x10]
  40fb36:	mov    QWORD PTR [rdx+0x8],rcx
  40fb3a:	mov    rcx,QWORD PTR [rbp-0x18]
  40fb3e:	mov    QWORD PTR [rbp-0x8],rcx
  40fb42:	mov    rax,QWORD PTR [rbp-0x8]
  40fb46:	add    rsp,0x90
  40fb4d:	pop    rbp
  40fb4e:	ret    
  40fb4f:	nop
  40fb50:	push   rbp
  40fb51:	mov    rbp,rsp
  40fb54:	sub    rsp,0x40
  40fb58:	mov    QWORD PTR [rbp-0x10],rdi
  40fb5c:	mov    QWORD PTR [rbp-0x18],rsi
  40fb60:	mov    QWORD PTR [rbp-0x20],rdx
  40fb64:	mov    QWORD PTR [rbp-0x28],rcx
  40fb68:	mov    QWORD PTR [rbp-0x30],0x0
  40fb70:	mov    DWORD PTR [rbp-0x34],0x0
  40fb77:	mov    rcx,QWORD PTR [rbp-0x18]
  40fb7b:	mov    QWORD PTR [rbp-0x40],rcx
  40fb7f:	mov    rcx,QWORD PTR [rbp-0x28]
  40fb83:	mov    BYTE PTR [rcx],0x0
  40fb86:	mov    rcx,QWORD PTR [rbp-0x18]
  40fb8a:	cmp    rcx,QWORD PTR [rbp-0x20]
  40fb8e:	jne    40fba1 <flatcc_json_parser_union_type@@Base+0x2c1>
  40fb94:	mov    rax,QWORD PTR [rbp-0x18]
  40fb98:	mov    QWORD PTR [rbp-0x8],rax
  40fb9c:	jmp    40fbf9 <flatcc_json_parser_union_type@@Base+0x319>
  40fba1:	mov    rdi,QWORD PTR [rbp-0x10]
  40fba5:	mov    rsi,QWORD PTR [rbp-0x18]
  40fba9:	mov    rdx,QWORD PTR [rbp-0x20]
  40fbad:	lea    rcx,[rbp-0x34]
  40fbb1:	lea    r8,[rbp-0x30]
  40fbb5:	call   40ea60 <flatcc_json_parser_integer@@Base>
  40fbba:	mov    QWORD PTR [rbp-0x18],rax
  40fbbe:	mov    rax,QWORD PTR [rbp-0x18]
  40fbc2:	cmp    rax,QWORD PTR [rbp-0x40]
  40fbc6:	je     40fbf1 <flatcc_json_parser_union_type@@Base+0x311>
  40fbcc:	mov    rdi,QWORD PTR [rbp-0x10]
  40fbd0:	mov    rsi,QWORD PTR [rbp-0x18]
  40fbd4:	mov    rdx,QWORD PTR [rbp-0x20]
  40fbd8:	mov    ecx,DWORD PTR [rbp-0x34]
  40fbdb:	mov    r8,QWORD PTR [rbp-0x30]
  40fbdf:	mov    r9,QWORD PTR [rbp-0x28]
  40fbe3:	call   4118e0 <flatcc_json_parser_struct_as_root@@Base+0x1020>
  40fbe8:	mov    QWORD PTR [rbp-0x8],rax
  40fbec:	jmp    40fbf9 <flatcc_json_parser_union_type@@Base+0x319>
  40fbf1:	mov    rax,QWORD PTR [rbp-0x18]
  40fbf5:	mov    QWORD PTR [rbp-0x8],rax
  40fbf9:	mov    rax,QWORD PTR [rbp-0x8]
  40fbfd:	add    rsp,0x40
  40fc01:	pop    rbp
  40fc02:	ret    
  40fc03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc0d:	nop    DWORD PTR [rax]
  40fc10:	push   rbp
  40fc11:	mov    rbp,rsp
  40fc14:	sub    rsp,0x70
  40fc18:	mov    QWORD PTR [rbp-0x10],rdi
  40fc1c:	mov    QWORD PTR [rbp-0x18],rsi
  40fc20:	mov    QWORD PTR [rbp-0x20],rdx
  40fc24:	mov    QWORD PTR [rbp-0x28],rcx
  40fc28:	mov    QWORD PTR [rbp-0x30],r8
  40fc2c:	mov    BYTE PTR [rbp-0x41],0x0
  40fc30:	mov    DWORD PTR [rbp-0x5c],0x0
  40fc37:	mov    rcx,QWORD PTR [rbp-0x30]
  40fc3b:	mov    BYTE PTR [rcx],0x0
  40fc3e:	mov    rdi,QWORD PTR [rbp-0x10]
  40fc42:	mov    rsi,QWORD PTR [rbp-0x18]
  40fc46:	mov    rdx,QWORD PTR [rbp-0x20]
  40fc4a:	call   411980 <flatcc_json_parser_struct_as_root@@Base+0x10c0>
  40fc4f:	mov    QWORD PTR [rbp-0x18],rax
  40fc53:	mov    rax,QWORD PTR [rbp-0x18]
  40fc57:	cmp    rax,QWORD PTR [rbp-0x20]
  40fc5b:	jne    40fc6e <flatcc_json_parser_union_type@@Base+0x38e>
  40fc61:	mov    rax,QWORD PTR [rbp-0x18]
  40fc65:	mov    QWORD PTR [rbp-0x8],rax
  40fc69:	jmp    40fdd2 <flatcc_json_parser_union_type@@Base+0x4f2>
  40fc6e:	jmp    40fc73 <flatcc_json_parser_union_type@@Base+0x393>
  40fc73:	mov    rax,QWORD PTR [rbp-0x28]
  40fc77:	mov    QWORD PTR [rbp-0x38],rax
  40fc7b:	mov    rax,QWORD PTR [rbp-0x38]
  40fc7f:	mov    rax,QWORD PTR [rax]
  40fc82:	mov    rdi,QWORD PTR [rbp-0x10]
  40fc86:	mov    rcx,QWORD PTR [rbp-0x18]
  40fc8a:	mov    QWORD PTR [rbp-0x40],rcx
  40fc8e:	mov    rdx,QWORD PTR [rbp-0x20]
  40fc92:	mov    rsi,rcx
  40fc95:	lea    rcx,[rbp-0x54]
  40fc99:	lea    r8,[rbp-0x50]
  40fc9d:	lea    r9,[rbp-0x58]
  40fca1:	call   rax
  40fca3:	mov    QWORD PTR [rbp-0x18],rax
  40fca7:	mov    rax,QWORD PTR [rbp-0x18]
  40fcab:	cmp    rax,QWORD PTR [rbp-0x20]
  40fcaf:	jne    40fcc2 <flatcc_json_parser_union_type@@Base+0x3e2>
  40fcb5:	mov    rax,QWORD PTR [rbp-0x18]
  40fcb9:	mov    QWORD PTR [rbp-0x8],rax
  40fcbd:	jmp    40fdd2 <flatcc_json_parser_union_type@@Base+0x4f2>
  40fcc2:	jmp    40fcc7 <flatcc_json_parser_union_type@@Base+0x3e7>
  40fcc7:	xor    eax,eax
  40fcc9:	mov    cl,al
  40fccb:	mov    rdx,QWORD PTR [rbp-0x18]
  40fccf:	cmp    rdx,QWORD PTR [rbp-0x40]
  40fcd3:	mov    BYTE PTR [rbp-0x5d],cl
  40fcd6:	jne    40fcf6 <flatcc_json_parser_union_type@@Base+0x416>
  40fcdc:	mov    rax,QWORD PTR [rbp-0x38]
  40fce0:	mov    rcx,rax
  40fce3:	add    rcx,0x8
  40fce7:	mov    QWORD PTR [rbp-0x38],rcx
  40fceb:	cmp    QWORD PTR [rax+0x8],0x0
  40fcf0:	setne  dl
  40fcf3:	mov    BYTE PTR [rbp-0x5d],dl
  40fcf6:	mov    al,BYTE PTR [rbp-0x5d]
  40fcf9:	test   al,0x1
  40fcfb:	jne    40fc7b <flatcc_json_parser_union_type@@Base+0x39b>
  40fd01:	mov    rax,QWORD PTR [rbp-0x40]
  40fd05:	cmp    rax,QWORD PTR [rbp-0x18]
  40fd09:	jne    40fd2e <flatcc_json_parser_union_type@@Base+0x44e>
  40fd0f:	mov    rdi,QWORD PTR [rbp-0x10]
  40fd13:	mov    rsi,QWORD PTR [rbp-0x18]
  40fd17:	mov    rdx,QWORD PTR [rbp-0x20]
  40fd1b:	mov    ecx,0x17
  40fd20:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40fd25:	mov    QWORD PTR [rbp-0x8],rax
  40fd29:	jmp    40fdd2 <flatcc_json_parser_union_type@@Base+0x4f2>
  40fd2e:	mov    eax,DWORD PTR [rbp-0x5c]
  40fd31:	mov    ecx,eax
  40fd33:	add    ecx,0x1
  40fd36:	mov    DWORD PTR [rbp-0x5c],ecx
  40fd39:	cmp    eax,0x0
  40fd3c:	je     40fd6f <flatcc_json_parser_union_type@@Base+0x48f>
  40fd42:	mov    rax,QWORD PTR [rbp-0x10]
  40fd46:	cmp    DWORD PTR [rax+0x14],0x0
  40fd4a:	je     40fd6f <flatcc_json_parser_union_type@@Base+0x48f>
  40fd50:	mov    rdi,QWORD PTR [rbp-0x10]
  40fd54:	mov    rsi,QWORD PTR [rbp-0x18]
  40fd58:	mov    rdx,QWORD PTR [rbp-0x20]
  40fd5c:	mov    ecx,0xe
  40fd61:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40fd66:	mov    QWORD PTR [rbp-0x8],rax
  40fd6a:	jmp    40fdd2 <flatcc_json_parser_union_type@@Base+0x4f2>
  40fd6f:	mov    rax,QWORD PTR [rbp-0x20]
  40fd73:	mov    rdi,QWORD PTR [rbp-0x10]
  40fd77:	mov    rsi,QWORD PTR [rbp-0x18]
  40fd7b:	mov    rdx,QWORD PTR [rbp-0x20]
  40fd7f:	mov    ecx,DWORD PTR [rbp-0x54]
  40fd82:	mov    r8,QWORD PTR [rbp-0x50]
  40fd86:	lea    r9,[rbp-0x41]
  40fd8a:	mov    QWORD PTR [rbp-0x68],rax
  40fd8e:	call   4118e0 <flatcc_json_parser_struct_as_root@@Base+0x1020>
  40fd93:	mov    rdx,QWORD PTR [rbp-0x68]
  40fd97:	cmp    rdx,rax
  40fd9a:	jne    40fdad <flatcc_json_parser_union_type@@Base+0x4cd>
  40fda0:	mov    rax,QWORD PTR [rbp-0x20]
  40fda4:	mov    QWORD PTR [rbp-0x8],rax
  40fda8:	jmp    40fdd2 <flatcc_json_parser_union_type@@Base+0x4f2>
  40fdad:	movzx  eax,BYTE PTR [rbp-0x41]
  40fdb1:	mov    rcx,QWORD PTR [rbp-0x30]
  40fdb5:	movzx  edx,BYTE PTR [rcx]
  40fdb8:	add    edx,eax
  40fdba:	mov    sil,dl
  40fdbd:	mov    BYTE PTR [rcx],sil
  40fdc0:	cmp    DWORD PTR [rbp-0x58],0x0
  40fdc4:	jne    40fc73 <flatcc_json_parser_union_type@@Base+0x393>
  40fdca:	mov    rax,QWORD PTR [rbp-0x18]
  40fdce:	mov    QWORD PTR [rbp-0x8],rax
  40fdd2:	mov    rax,QWORD PTR [rbp-0x8]
  40fdd6:	add    rsp,0x70
  40fdda:	pop    rbp
  40fddb:	ret    
  40fddc:	nop    DWORD PTR [rax+0x0]

000000000040fde0 <flatcc_json_parser_union_vector@@Base>:
  40fde0:	push   rbp
  40fde1:	mov    rbp,rsp
  40fde4:	sub    rsp,0x60
  40fde8:	mov    ax,r8w
  40fdec:	mov    r10,QWORD PTR [rbp+0x10]
  40fdf0:	mov    QWORD PTR [rbp-0x10],rdi
  40fdf4:	mov    QWORD PTR [rbp-0x18],rsi
  40fdf8:	mov    QWORD PTR [rbp-0x20],rdx
  40fdfc:	mov    QWORD PTR [rbp-0x28],rcx
  40fe00:	mov    WORD PTR [rbp-0x2a],ax
  40fe04:	mov    QWORD PTR [rbp-0x38],r9
  40fe08:	mov    rcx,QWORD PTR [rbp-0x10]
  40fe0c:	mov    rdi,QWORD PTR [rcx]
  40fe0f:	mov    rsi,QWORD PTR [rbp-0x38]
  40fe13:	mov    QWORD PTR [rbp-0x50],r10
  40fe17:	call   405970 <flatcc_builder_get_user_frame_ptr@@Base>
  40fe1c:	mov    QWORD PTR [rbp-0x40],rax
  40fe20:	mov    rax,QWORD PTR [rbp-0x40]
  40fe24:	add    rax,0x10
  40fe28:	imul   rcx,QWORD PTR [rbp-0x28],0x28
  40fe2d:	add    rax,rcx
  40fe30:	mov    QWORD PTR [rbp-0x48],rax
  40fe34:	mov    rax,QWORD PTR [rbp-0x48]
  40fe38:	cmp    QWORD PTR [rax],0x0
  40fe3c:	je     40fe61 <flatcc_json_parser_union_vector@@Base+0x81>
  40fe42:	mov    rdi,QWORD PTR [rbp-0x10]
  40fe46:	mov    rsi,QWORD PTR [rbp-0x18]
  40fe4a:	mov    rdx,QWORD PTR [rbp-0x20]
  40fe4e:	mov    ecx,0x1c
  40fe53:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40fe58:	mov    QWORD PTR [rbp-0x8],rax
  40fe5c:	jmp    40ff0f <flatcc_json_parser_union_vector@@Base+0x12f>
  40fe61:	mov    rax,QWORD PTR [rbp-0x48]
  40fe65:	cmp    BYTE PTR [rax+0x14],0x0
  40fe69:	jne    40fec1 <flatcc_json_parser_union_vector@@Base+0xe1>
  40fe6f:	mov    rax,QWORD PTR [rbp-0x40]
  40fe73:	mov    rcx,QWORD PTR [rax+0x8]
  40fe77:	add    rcx,0x1
  40fe7b:	mov    QWORD PTR [rax+0x8],rcx
  40fe7f:	mov    rax,QWORD PTR [rbp-0x10]
  40fe83:	mov    edx,DWORD PTR [rax+0x18]
  40fe86:	mov    rax,QWORD PTR [rbp-0x48]
  40fe8a:	mov    DWORD PTR [rax+0x10],edx
  40fe8d:	mov    rax,QWORD PTR [rbp-0x10]
  40fe91:	mov    rax,QWORD PTR [rax+0x8]
  40fe95:	mov    rcx,QWORD PTR [rbp-0x48]
  40fe99:	mov    QWORD PTR [rcx+0x8],rax
  40fe9d:	mov    rdi,QWORD PTR [rbp-0x10]
  40fea1:	mov    rax,QWORD PTR [rbp-0x18]
  40fea5:	mov    rcx,QWORD PTR [rbp-0x48]
  40fea9:	mov    QWORD PTR [rcx],rax
  40feac:	mov    rdx,QWORD PTR [rbp-0x20]
  40feb0:	mov    rsi,rax
  40feb3:	call   40d7e0 <flatcc_json_parser_generic_json@@Base>
  40feb8:	mov    QWORD PTR [rbp-0x18],rax
  40febc:	jmp    40ff07 <flatcc_json_parser_union_vector@@Base+0x127>
  40fec1:	mov    rax,QWORD PTR [rbp-0x40]
  40fec5:	mov    rcx,QWORD PTR [rax+0x8]
  40fec9:	add    rcx,0xffffffffffffffff
  40fecd:	mov    QWORD PTR [rax+0x8],rcx
  40fed1:	mov    rdi,QWORD PTR [rbp-0x10]
  40fed5:	mov    rsi,QWORD PTR [rbp-0x18]
  40fed9:	mov    rdx,QWORD PTR [rbp-0x20]
  40fedd:	mov    rax,QWORD PTR [rbp-0x48]
  40fee1:	mov    rcx,QWORD PTR [rax+0x20]
  40fee5:	mov    rax,QWORD PTR [rbp-0x48]
  40fee9:	mov    r8d,DWORD PTR [rax+0x18]
  40feed:	mov    r9w,WORD PTR [rbp-0x2a]
  40fef2:	mov    rax,QWORD PTR [rbp+0x10]
  40fef6:	movzx  r9d,r9w
  40fefa:	mov    QWORD PTR [rsp],rax
  40fefe:	call   40ff20 <flatcc_json_parser_union_vector@@Base+0x140>
  40ff03:	mov    QWORD PTR [rbp-0x18],rax
  40ff07:	mov    rax,QWORD PTR [rbp-0x18]
  40ff0b:	mov    QWORD PTR [rbp-0x8],rax
  40ff0f:	mov    rax,QWORD PTR [rbp-0x8]
  40ff13:	add    rsp,0x60
  40ff17:	pop    rbp
  40ff18:	ret    
  40ff19:	nop    DWORD PTR [rax+0x0]
  40ff20:	push   rbp
  40ff21:	mov    rbp,rsp
  40ff24:	sub    rsp,0x60
  40ff28:	mov    ax,r9w
  40ff2c:	mov    r10,QWORD PTR [rbp+0x10]
  40ff30:	mov    QWORD PTR [rbp-0x10],rdi
  40ff34:	mov    QWORD PTR [rbp-0x18],rsi
  40ff38:	mov    QWORD PTR [rbp-0x20],rdx
  40ff3c:	mov    QWORD PTR [rbp-0x28],rcx
  40ff40:	mov    DWORD PTR [rbp-0x2c],r8d
  40ff44:	mov    WORD PTR [rbp-0x2e],ax
  40ff48:	mov    DWORD PTR [rbp-0x34],0x0
  40ff4f:	mov    rcx,QWORD PTR [rbp-0x10]
  40ff53:	mov    rdi,QWORD PTR [rcx]
  40ff56:	mov    QWORD PTR [rbp-0x60],r10
  40ff5a:	call   4077a0 <flatcc_builder_start_offset_vector@@Base>
  40ff5f:	cmp    eax,0x0
  40ff62:	je     40ff6d <flatcc_json_parser_union_vector@@Base+0x18d>
  40ff68:	jmp    410117 <flatcc_json_parser_union_vector@@Base+0x337>
  40ff6d:	mov    rdi,QWORD PTR [rbp-0x10]
  40ff71:	mov    rsi,QWORD PTR [rbp-0x18]
  40ff75:	mov    rdx,QWORD PTR [rbp-0x20]
  40ff79:	lea    rcx,[rbp-0x4c]
  40ff7d:	call   4105c0 <flatcc_json_parser_union_type_vector@@Base+0x480>
  40ff82:	mov    QWORD PTR [rbp-0x18],rax
  40ff86:	mov    QWORD PTR [rbp-0x58],0x0
  40ff8e:	cmp    DWORD PTR [rbp-0x4c],0x0
  40ff92:	je     410078 <flatcc_json_parser_union_vector@@Base+0x298>
  40ff98:	mov    rax,QWORD PTR [rbp-0x58]
  40ff9c:	mov    ecx,DWORD PTR [rbp-0x2c]
  40ff9f:	mov    edx,ecx
  40ffa1:	cmp    rax,rdx
  40ffa4:	jne    40ffc9 <flatcc_json_parser_union_vector@@Base+0x1e9>
  40ffaa:	mov    rdi,QWORD PTR [rbp-0x10]
  40ffae:	mov    rsi,QWORD PTR [rbp-0x18]
  40ffb2:	mov    rdx,QWORD PTR [rbp-0x20]
  40ffb6:	mov    ecx,0x1e
  40ffbb:	call   40c510 <flatcc_json_parser_set_error@@Base>
  40ffc0:	mov    QWORD PTR [rbp-0x8],rax
  40ffc4:	jmp    410131 <flatcc_json_parser_union_vector@@Base+0x351>
  40ffc9:	mov    rax,QWORD PTR [rbp-0x10]
  40ffcd:	mov    rdi,QWORD PTR [rax]
  40ffd0:	mov    rsi,QWORD PTR [rbp-0x28]
  40ffd4:	call   405970 <flatcc_builder_get_user_frame_ptr@@Base>
  40ffd9:	mov    QWORD PTR [rbp-0x48],rax
  40ffdd:	mov    rax,QWORD PTR [rbp+0x10]
  40ffe1:	mov    rdi,QWORD PTR [rbp-0x10]
  40ffe5:	mov    rsi,QWORD PTR [rbp-0x18]
  40ffe9:	mov    rdx,QWORD PTR [rbp-0x20]
  40ffed:	mov    rcx,QWORD PTR [rbp-0x48]
  40fff1:	mov    r8,QWORD PTR [rbp-0x58]
  40fff5:	movzx  ecx,BYTE PTR [rcx+r8*1]
  40fffa:	lea    r8,[rbp-0x34]
  40fffe:	call   rax
  410000:	mov    QWORD PTR [rbp-0x18],rax
  410004:	mov    rax,QWORD PTR [rbp-0x18]
  410008:	cmp    rax,QWORD PTR [rbp-0x20]
  41000c:	jne    41001f <flatcc_json_parser_union_vector@@Base+0x23f>
  410012:	mov    rax,QWORD PTR [rbp-0x18]
  410016:	mov    QWORD PTR [rbp-0x8],rax
  41001a:	jmp    410131 <flatcc_json_parser_union_vector@@Base+0x351>
  41001f:	mov    eax,0x1
  410024:	mov    esi,eax
  410026:	mov    rcx,QWORD PTR [rbp-0x10]
  41002a:	mov    rdi,QWORD PTR [rcx]
  41002d:	call   406f80 <flatcc_builder_extend_offset_vector@@Base>
  410032:	mov    QWORD PTR [rbp-0x40],rax
  410036:	cmp    rax,0x0
  41003a:	jne    410045 <flatcc_json_parser_union_vector@@Base+0x265>
  410040:	jmp    410117 <flatcc_json_parser_union_vector@@Base+0x337>
  410045:	mov    eax,DWORD PTR [rbp-0x34]
  410048:	mov    rcx,QWORD PTR [rbp-0x40]
  41004c:	mov    DWORD PTR [rcx],eax
  41004e:	mov    rdi,QWORD PTR [rbp-0x10]
  410052:	mov    rsi,QWORD PTR [rbp-0x18]
  410056:	mov    rdx,QWORD PTR [rbp-0x20]
  41005a:	lea    rcx,[rbp-0x4c]
  41005e:	call   40e780 <flatcc_json_parser_float@@Base+0x8a0>
  410063:	mov    QWORD PTR [rbp-0x18],rax
  410067:	mov    rax,QWORD PTR [rbp-0x58]
  41006b:	add    rax,0x1
  41006f:	mov    QWORD PTR [rbp-0x58],rax
  410073:	jmp    40ff8e <flatcc_json_parser_union_vector@@Base+0x1ae>
  410078:	mov    rax,QWORD PTR [rbp-0x58]
  41007c:	mov    ecx,DWORD PTR [rbp-0x2c]
  41007f:	mov    edx,ecx
  410081:	cmp    rax,rdx
  410084:	je     4100a9 <flatcc_json_parser_union_vector@@Base+0x2c9>
  41008a:	mov    rdi,QWORD PTR [rbp-0x10]
  41008e:	mov    rsi,QWORD PTR [rbp-0x18]
  410092:	mov    rdx,QWORD PTR [rbp-0x20]
  410096:	mov    ecx,0x1e
  41009b:	call   40c510 <flatcc_json_parser_set_error@@Base>
  4100a0:	mov    QWORD PTR [rbp-0x8],rax
  4100a4:	jmp    410131 <flatcc_json_parser_union_vector@@Base+0x351>
  4100a9:	mov    rax,QWORD PTR [rbp-0x10]
  4100ad:	mov    rdi,QWORD PTR [rax]
  4100b0:	mov    rsi,QWORD PTR [rbp-0x28]
  4100b4:	call   405970 <flatcc_builder_get_user_frame_ptr@@Base>
  4100b9:	mov    QWORD PTR [rbp-0x48],rax
  4100bd:	mov    rax,QWORD PTR [rbp-0x10]
  4100c1:	mov    rdi,QWORD PTR [rax]
  4100c4:	mov    rsi,QWORD PTR [rbp-0x48]
  4100c8:	call   409070 <flatcc_builder_end_offset_vector_for_unions@@Base>
  4100cd:	mov    DWORD PTR [rbp-0x34],eax
  4100d0:	cmp    eax,0x0
  4100d3:	jne    4100de <flatcc_json_parser_union_vector@@Base+0x2fe>
  4100d9:	jmp    410117 <flatcc_json_parser_union_vector@@Base+0x337>
  4100de:	mov    rax,QWORD PTR [rbp-0x10]
  4100e2:	mov    rdi,QWORD PTR [rax]
  4100e5:	movzx  esi,WORD PTR [rbp-0x2e]
  4100e9:	call   4092f0 <flatcc_builder_table_add_offset@@Base>
  4100ee:	mov    QWORD PTR [rbp-0x40],rax
  4100f2:	cmp    rax,0x0
  4100f6:	jne    410101 <flatcc_json_parser_union_vector@@Base+0x321>
  4100fc:	jmp    410117 <flatcc_json_parser_union_vector@@Base+0x337>
  410101:	mov    eax,DWORD PTR [rbp-0x34]
  410104:	mov    rcx,QWORD PTR [rbp-0x40]
  410108:	mov    DWORD PTR [rcx],eax
  41010a:	mov    rcx,QWORD PTR [rbp-0x18]
  41010e:	mov    QWORD PTR [rbp-0x8],rcx
  410112:	jmp    410131 <flatcc_json_parser_union_vector@@Base+0x351>
  410117:	mov    rdi,QWORD PTR [rbp-0x10]
  41011b:	mov    rsi,QWORD PTR [rbp-0x18]
  41011f:	mov    rdx,QWORD PTR [rbp-0x20]
  410123:	mov    ecx,0x21
  410128:	call   40c510 <flatcc_json_parser_set_error@@Base>
  41012d:	mov    QWORD PTR [rbp-0x8],rax
  410131:	mov    rax,QWORD PTR [rbp-0x8]
  410135:	add    rsp,0x60
  410139:	pop    rbp
  41013a:	ret    
  41013b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000410140 <flatcc_json_parser_union_type_vector@@Base>:
  410140:	push   rbp
  410141:	mov    rbp,rsp
  410144:	push   rbx
  410145:	sub    rsp,0xd8
  41014c:	mov    ax,r8w
  410150:	mov    r10,QWORD PTR [rbp+0x20]
  410154:	mov    r11,QWORD PTR [rbp+0x18]
  410158:	mov    rbx,QWORD PTR [rbp+0x10]
  41015c:	mov    QWORD PTR [rbp-0x18],rdi
  410160:	mov    QWORD PTR [rbp-0x20],rsi
  410164:	mov    QWORD PTR [rbp-0x28],rdx
  410168:	mov    QWORD PTR [rbp-0x30],rcx
  41016c:	mov    WORD PTR [rbp-0x32],ax
  410170:	mov    QWORD PTR [rbp-0x40],r9
  410174:	mov    rcx,QWORD PTR [rbp-0x18]
  410178:	mov    rdi,QWORD PTR [rcx]
  41017b:	mov    rsi,QWORD PTR [rbp-0x40]
  41017f:	mov    QWORD PTR [rbp-0xb0],rbx
  410186:	mov    QWORD PTR [rbp-0xb8],r11
  41018d:	mov    QWORD PTR [rbp-0xc0],r10
  410194:	call   405970 <flatcc_builder_get_user_frame_ptr@@Base>
  410199:	mov    QWORD PTR [rbp-0x48],rax
  41019d:	mov    rax,QWORD PTR [rbp-0x48]
  4101a1:	add    rax,0x10
  4101a5:	imul   rcx,QWORD PTR [rbp-0x30],0x28
  4101aa:	add    rax,rcx
  4101ad:	mov    QWORD PTR [rbp-0x50],rax
  4101b1:	mov    rax,QWORD PTR [rbp-0x50]
  4101b5:	cmp    BYTE PTR [rax+0x14],0x0
  4101b9:	je     4101de <flatcc_json_parser_union_type_vector@@Base+0x9e>
  4101bf:	mov    rdi,QWORD PTR [rbp-0x18]
  4101c3:	mov    rsi,QWORD PTR [rbp-0x20]
  4101c7:	mov    rdx,QWORD PTR [rbp-0x28]
  4101cb:	mov    ecx,0x1c
  4101d0:	call   40c510 <flatcc_json_parser_set_error@@Base>
  4101d5:	mov    QWORD PTR [rbp-0x10],rax
  4101d9:	jmp    4105a8 <flatcc_json_parser_union_type_vector@@Base+0x468>
  4101de:	mov    eax,0x1
  4101e3:	mov    esi,eax
  4101e5:	mov    eax,0xffffffff
  4101ea:	mov    ecx,eax
  4101ec:	mov    rdx,QWORD PTR [rbp-0x50]
  4101f0:	mov    BYTE PTR [rdx+0x14],0x1
  4101f4:	mov    rdx,QWORD PTR [rbp-0x18]
  4101f8:	mov    rdi,QWORD PTR [rdx]
  4101fb:	mov    edx,0x1
  410200:	call   4076c0 <flatcc_builder_start_vector@@Base>
  410205:	cmp    eax,0x0
  410208:	je     410213 <flatcc_json_parser_union_type_vector@@Base+0xd3>
  41020e:	jmp    41058e <flatcc_json_parser_union_type_vector@@Base+0x44e>
  410213:	mov    rdi,QWORD PTR [rbp-0x18]
  410217:	mov    rsi,QWORD PTR [rbp-0x20]
  41021b:	mov    rdx,QWORD PTR [rbp-0x28]
  41021f:	lea    rcx,[rbp-0x6c]
  410223:	call   4105c0 <flatcc_json_parser_union_type_vector@@Base+0x480>
  410228:	mov    QWORD PTR [rbp-0x20],rax
  41022c:	cmp    DWORD PTR [rbp-0x6c],0x0
  410230:	je     410348 <flatcc_json_parser_union_type_vector@@Base+0x208>
  410236:	mov    eax,0x1
  41023b:	mov    esi,eax
  41023d:	mov    rcx,QWORD PTR [rbp-0x18]
  410241:	mov    rdi,QWORD PTR [rcx]
  410244:	call   406c60 <flatcc_builder_extend_vector@@Base>
  410249:	mov    QWORD PTR [rbp-0x78],rax
  41024d:	cmp    rax,0x0
  410251:	jne    41025c <flatcc_json_parser_union_type_vector@@Base+0x11c>
  410257:	jmp    41058e <flatcc_json_parser_union_type_vector@@Base+0x44e>
  41025c:	mov    rdi,QWORD PTR [rbp-0x18]
  410260:	mov    rax,QWORD PTR [rbp-0x20]
  410264:	mov    QWORD PTR [rbp-0x58],rax
  410268:	mov    rdx,QWORD PTR [rbp-0x28]
  41026c:	mov    rsi,rax
  41026f:	lea    rcx,[rbp-0x6d]
  410273:	call   40fb50 <flatcc_json_parser_union_type@@Base+0x270>
  410278:	mov    QWORD PTR [rbp-0x20],rax
  41027c:	mov    rax,QWORD PTR [rbp-0x58]
  410280:	cmp    rax,QWORD PTR [rbp-0x20]
  410284:	jne    4102d4 <flatcc_json_parser_union_type_vector@@Base+0x194>
  41028a:	mov    rdi,QWORD PTR [rbp-0x18]
  41028e:	mov    rax,QWORD PTR [rbp-0x20]
  410292:	mov    QWORD PTR [rbp-0x58],rax
  410296:	mov    rdx,QWORD PTR [rbp-0x28]
  41029a:	mov    rcx,QWORD PTR [rbp+0x10]
  41029e:	mov    rsi,rax
  4102a1:	lea    r8,[rbp-0x6d]
  4102a5:	call   40fc10 <flatcc_json_parser_union_type@@Base+0x330>
  4102aa:	mov    QWORD PTR [rbp-0x20],rax
  4102ae:	mov    rax,QWORD PTR [rbp-0x20]
  4102b2:	cmp    rax,QWORD PTR [rbp-0x58]
  4102b6:	je     4102ca <flatcc_json_parser_union_type_vector@@Base+0x18a>
  4102bc:	mov    rax,QWORD PTR [rbp-0x20]
  4102c0:	cmp    rax,QWORD PTR [rbp-0x28]
  4102c4:	jne    4102cf <flatcc_json_parser_union_type_vector@@Base+0x18f>
  4102ca:	jmp    41058e <flatcc_json_parser_union_type_vector@@Base+0x44e>
  4102cf:	jmp    4102d4 <flatcc_json_parser_union_type_vector@@Base+0x194>
  4102d4:	mov    rax,QWORD PTR [rbp+0x20]
  4102d8:	movzx  edi,BYTE PTR [rbp-0x6d]
  4102dc:	call   rax
  4102de:	cmp    eax,0x0
  4102e1:	jne    41031d <flatcc_json_parser_union_type_vector@@Base+0x1dd>
  4102e7:	mov    rax,QWORD PTR [rbp-0x18]
  4102eb:	mov    ecx,DWORD PTR [rax+0x10]
  4102ee:	and    ecx,0x1
  4102f1:	cmp    ecx,0x0
  4102f4:	jne    410319 <flatcc_json_parser_union_type_vector@@Base+0x1d9>
  4102fa:	mov    rdi,QWORD PTR [rbp-0x18]
  4102fe:	mov    rsi,QWORD PTR [rbp-0x20]
  410302:	mov    rdx,QWORD PTR [rbp-0x28]
  410306:	mov    ecx,0xf
  41030b:	call   40c510 <flatcc_json_parser_set_error@@Base>
  410310:	mov    QWORD PTR [rbp-0x10],rax
  410314:	jmp    4105a8 <flatcc_json_parser_union_type_vector@@Base+0x468>
  410319:	mov    BYTE PTR [rbp-0x6d],0x0
  41031d:	mov    rdi,QWORD PTR [rbp-0x78]
  410321:	movzx  esi,BYTE PTR [rbp-0x6d]
  410325:	call   4106a0 <flatcc_json_parser_union_type_vector@@Base+0x560>
  41032a:	mov    rdi,QWORD PTR [rbp-0x18]
  41032e:	mov    rsi,QWORD PTR [rbp-0x20]
  410332:	mov    rdx,QWORD PTR [rbp-0x28]
  410336:	lea    rcx,[rbp-0x6c]
  41033a:	call   40e780 <flatcc_json_parser_float@@Base+0x8a0>
  41033f:	mov    QWORD PTR [rbp-0x20],rax
  410343:	jmp    41022c <flatcc_json_parser_union_type_vector@@Base+0xec>
  410348:	mov    rax,QWORD PTR [rbp-0x18]
  41034c:	mov    rdi,QWORD PTR [rax]
  41034f:	call   408cc0 <flatcc_builder_vector_count@@Base>
  410354:	mov    ecx,eax
  410356:	mov    DWORD PTR [rbp-0xa4],ecx
  41035c:	mov    ecx,DWORD PTR [rbp-0xa4]
  410362:	mov    rax,QWORD PTR [rbp-0x50]
  410366:	mov    DWORD PTR [rax+0x18],ecx
  410369:	mov    ecx,DWORD PTR [rbp-0xa4]
  41036f:	mov    eax,ecx
  410371:	shl    rax,0x0
  410375:	mov    QWORD PTR [rbp-0x98],rax
  41037c:	mov    rax,QWORD PTR [rbp-0x18]
  410380:	mov    rdi,QWORD PTR [rax]
  410383:	mov    rsi,QWORD PTR [rbp-0x98]
  41038a:	call   405760 <flatcc_builder_enter_user_frame@@Base>
  41038f:	mov    QWORD PTR [rbp-0xa0],rax
  410396:	mov    rax,QWORD PTR [rbp-0x18]
  41039a:	mov    rdi,QWORD PTR [rax]
  41039d:	mov    rsi,QWORD PTR [rbp-0xa0]
  4103a4:	call   405970 <flatcc_builder_get_user_frame_ptr@@Base>
  4103a9:	mov    QWORD PTR [rbp-0x90],rax
  4103b0:	mov    rdi,QWORD PTR [rbp-0x90]
  4103b7:	mov    rax,QWORD PTR [rbp-0x18]
  4103bb:	mov    rax,QWORD PTR [rax]
  4103be:	mov    QWORD PTR [rbp-0xc8],rdi
  4103c5:	mov    rdi,rax
  4103c8:	call   408ce0 <flatcc_builder_vector_edit@@Base>
  4103cd:	mov    rdx,QWORD PTR [rbp-0x98]
  4103d4:	mov    rdi,QWORD PTR [rbp-0xc8]
  4103db:	mov    rsi,rax
  4103de:	call   4030b0 <memcpy@plt>
  4103e3:	mov    rax,QWORD PTR [rbp-0x18]
  4103e7:	mov    rdi,QWORD PTR [rax]
  4103ea:	call   408c00 <flatcc_builder_end_vector@@Base>
  4103ef:	mov    DWORD PTR [rbp-0x7c],eax
  4103f2:	cmp    eax,0x0
  4103f5:	jne    410400 <flatcc_json_parser_union_type_vector@@Base+0x2c0>
  4103fb:	jmp    41058e <flatcc_json_parser_union_type_vector@@Base+0x44e>
  410400:	mov    rax,QWORD PTR [rbp-0x18]
  410404:	mov    rdi,QWORD PTR [rax]
  410407:	movzx  ecx,WORD PTR [rbp-0x32]
  41040b:	sub    ecx,0x1
  41040e:	mov    esi,ecx
  410410:	call   4092f0 <flatcc_builder_table_add_offset@@Base>
  410415:	mov    QWORD PTR [rbp-0x88],rax
  41041c:	cmp    rax,0x0
  410420:	jne    41042b <flatcc_json_parser_union_type_vector@@Base+0x2eb>
  410426:	jmp    41058e <flatcc_json_parser_union_type_vector@@Base+0x44e>
  41042b:	mov    eax,DWORD PTR [rbp-0x7c]
  41042e:	mov    rcx,QWORD PTR [rbp-0x88]
  410435:	mov    DWORD PTR [rcx],eax
  410437:	mov    rcx,QWORD PTR [rbp-0x18]
  41043b:	mov    rdi,QWORD PTR [rcx]
  41043e:	mov    rsi,QWORD PTR [rbp-0x40]
  410442:	call   405970 <flatcc_builder_get_user_frame_ptr@@Base>
  410447:	mov    QWORD PTR [rbp-0x48],rax
  41044b:	mov    rax,QWORD PTR [rbp-0x48]
  41044f:	add    rax,0x10
  410453:	imul   rcx,QWORD PTR [rbp-0x30],0x28
  410458:	add    rax,rcx
  41045b:	mov    QWORD PTR [rbp-0x50],rax
  41045f:	mov    rax,QWORD PTR [rbp-0xa0]
  410466:	mov    rcx,QWORD PTR [rbp-0x50]
  41046a:	mov    QWORD PTR [rcx+0x20],rax
  41046e:	mov    rax,QWORD PTR [rbp-0x50]
  410472:	cmp    QWORD PTR [rax],0x0
  410476:	jne    410499 <flatcc_json_parser_union_type_vector@@Base+0x359>
  41047c:	mov    rax,QWORD PTR [rbp-0x48]
  410480:	mov    rcx,QWORD PTR [rax+0x8]
  410484:	add    rcx,0x1
  410488:	mov    QWORD PTR [rax+0x8],rcx
  41048c:	mov    rax,QWORD PTR [rbp-0x20]
  410490:	mov    QWORD PTR [rbp-0x10],rax
  410494:	jmp    4105a8 <flatcc_json_parser_union_type_vector@@Base+0x468>
  410499:	mov    rax,QWORD PTR [rbp-0x48]
  41049d:	cmp    QWORD PTR [rax+0x8],0x0
  4104a2:	je     4104ad <flatcc_json_parser_union_type_vector@@Base+0x36d>
  4104a8:	jmp    4104cc <flatcc_json_parser_union_type_vector@@Base+0x38c>
  4104ad:	lea    rdi,[rip+0x456f]        # 414a23 <flatcc_builder_padding_base@@Base+0x26b3>
  4104b4:	lea    rsi,[rip+0x4577]        # 414a32 <flatcc_builder_padding_base@@Base+0x26c2>
  4104bb:	mov    edx,0x462
  4104c0:	lea    rcx,[rip+0x469b]        # 414b62 <flatcc_builder_padding_base@@Base+0x27f2>
  4104c7:	call   403060 <__assert_fail@plt>
  4104cc:	mov    rax,QWORD PTR [rbp-0x48]
  4104d0:	mov    rcx,QWORD PTR [rax+0x8]
  4104d4:	add    rcx,0xffffffffffffffff
  4104d8:	mov    QWORD PTR [rax+0x8],rcx
  4104dc:	mov    rax,QWORD PTR [rbp-0x18]
  4104e0:	mov    edx,DWORD PTR [rax+0x18]
  4104e3:	mov    DWORD PTR [rbp-0x5c],edx
  4104e6:	mov    rax,QWORD PTR [rbp-0x18]
  4104ea:	mov    rax,QWORD PTR [rax+0x8]
  4104ee:	mov    QWORD PTR [rbp-0x68],rax
  4104f2:	mov    rax,QWORD PTR [rbp-0x50]
  4104f6:	mov    edx,DWORD PTR [rax+0x10]
  4104f9:	mov    rax,QWORD PTR [rbp-0x18]
  4104fd:	mov    DWORD PTR [rax+0x18],edx
  410500:	mov    rax,QWORD PTR [rbp-0x50]
  410504:	mov    rax,QWORD PTR [rax+0x8]
  410508:	mov    rcx,QWORD PTR [rbp-0x18]
  41050c:	mov    QWORD PTR [rcx+0x8],rax
  410510:	mov    rax,QWORD PTR [rbp-0x28]
  410514:	mov    rdi,QWORD PTR [rbp-0x18]
  410518:	mov    rcx,QWORD PTR [rbp-0x50]
  41051c:	mov    rsi,QWORD PTR [rcx]
  41051f:	mov    rdx,QWORD PTR [rbp-0x28]
  410523:	mov    rcx,QWORD PTR [rbp-0xa0]
  41052a:	mov    r8d,DWORD PTR [rbp-0xa4]
  410531:	mov    r9w,WORD PTR [rbp-0x32]
  410536:	mov    r10,QWORD PTR [rbp+0x18]
  41053a:	movzx  r9d,r9w
  41053e:	mov    QWORD PTR [rsp],r10
  410542:	mov    QWORD PTR [rbp-0xd0],rax
  410549:	call   40ff20 <flatcc_json_parser_union_vector@@Base+0x140>
  41054e:	mov    rcx,QWORD PTR [rbp-0xd0]
  410555:	cmp    rcx,rax
  410558:	jne    41056b <flatcc_json_parser_union_type_vector@@Base+0x42b>
  41055e:	mov    rax,QWORD PTR [rbp-0x28]
  410562:	mov    QWORD PTR [rbp-0x10],rax
  410566:	jmp    4105a8 <flatcc_json_parser_union_type_vector@@Base+0x468>
  41056b:	mov    eax,DWORD PTR [rbp-0x5c]
  41056e:	mov    rcx,QWORD PTR [rbp-0x18]
  410572:	mov    DWORD PTR [rcx+0x18],eax
  410575:	mov    rcx,QWORD PTR [rbp-0x68]
  410579:	mov    rdx,QWORD PTR [rbp-0x18]
  41057d:	mov    QWORD PTR [rdx+0x8],rcx
  410581:	mov    rcx,QWORD PTR [rbp-0x20]
  410585:	mov    QWORD PTR [rbp-0x10],rcx
  410589:	jmp    4105a8 <flatcc_json_parser_union_type_vector@@Base+0x468>
  41058e:	mov    rdi,QWORD PTR [rbp-0x18]
  410592:	mov    rsi,QWORD PTR [rbp-0x20]
  410596:	mov    rdx,QWORD PTR [rbp-0x28]
  41059a:	mov    ecx,0x21
  41059f:	call   40c510 <flatcc_json_parser_set_error@@Base>
  4105a4:	mov    QWORD PTR [rbp-0x10],rax
  4105a8:	mov    rax,QWORD PTR [rbp-0x10]
  4105ac:	add    rsp,0xd8
  4105b3:	pop    rbx
  4105b4:	pop    rbp
  4105b5:	ret    
  4105b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4105c0:	push   rbp
  4105c1:	mov    rbp,rsp
  4105c4:	sub    rsp,0x30
  4105c8:	mov    QWORD PTR [rbp-0x10],rdi
  4105cc:	mov    QWORD PTR [rbp-0x18],rsi
  4105d0:	mov    QWORD PTR [rbp-0x20],rdx
  4105d4:	mov    QWORD PTR [rbp-0x28],rcx
  4105d8:	mov    rcx,QWORD PTR [rbp-0x18]
  4105dc:	cmp    rcx,QWORD PTR [rbp-0x20]
  4105e0:	je     4105f6 <flatcc_json_parser_union_type_vector@@Base+0x4b6>
  4105e6:	mov    rax,QWORD PTR [rbp-0x18]
  4105ea:	movsx  ecx,BYTE PTR [rax]
  4105ed:	cmp    ecx,0x5b
  4105f0:	je     41061f <flatcc_json_parser_union_type_vector@@Base+0x4df>
  4105f6:	mov    rax,QWORD PTR [rbp-0x28]
  4105fa:	mov    DWORD PTR [rax],0x0
  410600:	mov    rdi,QWORD PTR [rbp-0x10]
  410604:	mov    rsi,QWORD PTR [rbp-0x18]
  410608:	mov    rdx,QWORD PTR [rbp-0x20]
  41060c:	mov    ecx,0x16
  410611:	call   40c510 <flatcc_json_parser_set_error@@Base>
  410616:	mov    QWORD PTR [rbp-0x8],rax
  41061a:	jmp    410696 <flatcc_json_parser_union_type_vector@@Base+0x556>
  41061f:	mov    rdi,QWORD PTR [rbp-0x10]
  410623:	mov    rax,QWORD PTR [rbp-0x18]
  410627:	add    rax,0x1
  41062b:	mov    rdx,QWORD PTR [rbp-0x20]
  41062f:	mov    rsi,rax
  410632:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  410637:	mov    QWORD PTR [rbp-0x18],rax
  41063b:	mov    rax,QWORD PTR [rbp-0x18]
  41063f:	cmp    rax,QWORD PTR [rbp-0x20]
  410643:	je     410684 <flatcc_json_parser_union_type_vector@@Base+0x544>
  410649:	mov    rax,QWORD PTR [rbp-0x18]
  41064d:	movsx  ecx,BYTE PTR [rax]
  410650:	cmp    ecx,0x5d
  410653:	jne    410684 <flatcc_json_parser_union_type_vector@@Base+0x544>
  410659:	mov    rax,QWORD PTR [rbp-0x28]
  41065d:	mov    DWORD PTR [rax],0x0
  410663:	mov    rdi,QWORD PTR [rbp-0x10]
  410667:	mov    rax,QWORD PTR [rbp-0x18]
  41066b:	add    rax,0x1
  41066f:	mov    rdx,QWORD PTR [rbp-0x20]
  410673:	mov    rsi,rax
  410676:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  41067b:	mov    QWORD PTR [rbp-0x8],rax
  41067f:	jmp    410696 <flatcc_json_parser_union_type_vector@@Base+0x556>
  410684:	mov    rax,QWORD PTR [rbp-0x28]
  410688:	mov    DWORD PTR [rax],0x1
  41068e:	mov    rax,QWORD PTR [rbp-0x18]
  410692:	mov    QWORD PTR [rbp-0x8],rax
  410696:	mov    rax,QWORD PTR [rbp-0x8]
  41069a:	add    rsp,0x30
  41069e:	pop    rbp
  41069f:	ret    
  4106a0:	push   rbp
  4106a1:	mov    rbp,rsp
  4106a4:	sub    rsp,0x10
  4106a8:	mov    al,sil
  4106ab:	mov    QWORD PTR [rbp-0x8],rdi
  4106af:	mov    BYTE PTR [rbp-0x9],al
  4106b2:	movzx  edi,BYTE PTR [rbp-0x9]
  4106b6:	call   4119e0 <flatcc_json_parser_struct_as_root@@Base+0x1120>
  4106bb:	mov    rcx,QWORD PTR [rbp-0x8]
  4106bf:	mov    BYTE PTR [rcx],al
  4106c1:	add    rsp,0x10
  4106c5:	pop    rbp
  4106c6:	ret    
  4106c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004106d0 <flatcc_json_parser_table_as_root@@Base>:
  4106d0:	push   rbp
  4106d1:	mov    rbp,rsp
  4106d4:	sub    rsp,0xa0
  4106db:	mov    rax,QWORD PTR [rbp+0x10]
  4106df:	xor    r10d,r10d
  4106e2:	mov    QWORD PTR [rbp-0x10],rdi
  4106e6:	mov    QWORD PTR [rbp-0x18],rsi
  4106ea:	mov    QWORD PTR [rbp-0x20],rdx
  4106ee:	mov    QWORD PTR [rbp-0x28],rcx
  4106f2:	mov    DWORD PTR [rbp-0x2c],r8d
  4106f6:	mov    QWORD PTR [rbp-0x38],r9
  4106fa:	mov    r8d,DWORD PTR [rbp-0x2c]
  4106fe:	and    r8d,0x4
  410702:	cmp    r8d,0x0
  410706:	mov    r8d,0x2
  41070c:	cmovne r10d,r8d
  410710:	mov    DWORD PTR [rbp-0x88],r10d
  410717:	cmp    QWORD PTR [rbp-0x18],0x0
  41071c:	mov    QWORD PTR [rbp-0x90],rax
  410723:	je     410739 <flatcc_json_parser_table_as_root@@Base+0x69>
  410729:	mov    rax,QWORD PTR [rbp-0x18]
  41072d:	mov    QWORD PTR [rbp-0x98],rax
  410734:	jmp    410749 <flatcc_json_parser_table_as_root@@Base+0x79>
  410739:	lea    rax,[rbp-0x80]
  41073d:	mov    QWORD PTR [rbp-0x98],rax
  410744:	jmp    410749 <flatcc_json_parser_table_as_root@@Base+0x79>
  410749:	mov    rax,QWORD PTR [rbp-0x98]
  410750:	mov    QWORD PTR [rbp-0x18],rax
  410754:	mov    rdi,QWORD PTR [rbp-0x18]
  410758:	mov    rsi,QWORD PTR [rbp-0x10]
  41075c:	mov    rdx,QWORD PTR [rbp-0x20]
  410760:	mov    rax,QWORD PTR [rbp-0x20]
  410764:	add    rax,QWORD PTR [rbp-0x28]
  410768:	mov    r8d,DWORD PTR [rbp-0x2c]
  41076c:	mov    rcx,rax
  41076f:	call   410830 <flatcc_json_parser_table_as_root@@Base+0x160>
  410774:	xor    edx,edx
  410776:	mov    rdi,QWORD PTR [rbp-0x10]
  41077a:	mov    rsi,QWORD PTR [rbp-0x38]
  41077e:	mov    ecx,DWORD PTR [rbp-0x88]
  410784:	call   4064b0 <flatcc_builder_start_buffer@@Base>
  410789:	cmp    eax,0x0
  41078c:	je     41079e <flatcc_json_parser_table_as_root@@Base+0xce>
  410792:	mov    DWORD PTR [rbp-0x4],0xffffffff
  410799:	jmp    410819 <flatcc_json_parser_table_as_root@@Base+0x149>
  41079e:	mov    rax,QWORD PTR [rbp+0x10]
  4107a2:	mov    rdi,QWORD PTR [rbp-0x18]
  4107a6:	mov    rsi,QWORD PTR [rbp-0x20]
  4107aa:	mov    rcx,QWORD PTR [rbp-0x20]
  4107ae:	add    rcx,QWORD PTR [rbp-0x28]
  4107b2:	mov    rdx,rcx
  4107b5:	lea    rcx,[rbp-0x84]
  4107bc:	call   rax
  4107be:	mov    rcx,QWORD PTR [rbp-0x18]
  4107c2:	cmp    DWORD PTR [rcx+0x20],0x0
  4107c6:	mov    QWORD PTR [rbp-0xa0],rax
  4107cd:	je     4107e2 <flatcc_json_parser_table_as_root@@Base+0x112>
  4107d3:	mov    rax,QWORD PTR [rbp-0x18]
  4107d7:	mov    ecx,DWORD PTR [rax+0x20]
  4107da:	mov    DWORD PTR [rbp-0x4],ecx
  4107dd:	jmp    410819 <flatcc_json_parser_table_as_root@@Base+0x149>
  4107e2:	mov    rdi,QWORD PTR [rbp-0x10]
  4107e6:	mov    esi,DWORD PTR [rbp-0x84]
  4107ec:	call   4067f0 <flatcc_builder_end_buffer@@Base>
  4107f1:	cmp    eax,0x0
  4107f4:	jne    410806 <flatcc_json_parser_table_as_root@@Base+0x136>
  4107fa:	mov    DWORD PTR [rbp-0x4],0xffffffff
  410801:	jmp    410819 <flatcc_json_parser_table_as_root@@Base+0x149>
  410806:	mov    rax,QWORD PTR [rbp-0x20]
  41080a:	mov    rcx,QWORD PTR [rbp-0x18]
  41080e:	mov    QWORD PTR [rcx+0x40],rax
  410812:	mov    DWORD PTR [rbp-0x4],0x0
  410819:	mov    eax,DWORD PTR [rbp-0x4]
  41081c:	add    rsp,0xa0
  410823:	pop    rbp
  410824:	ret    
  410825:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41082f:	nop
  410830:	push   rbp
  410831:	mov    rbp,rsp
  410834:	sub    rsp,0x30
  410838:	xor    eax,eax
  41083a:	mov    r9d,0x48
  410840:	mov    r10d,r9d
  410843:	mov    QWORD PTR [rbp-0x8],rdi
  410847:	mov    QWORD PTR [rbp-0x10],rsi
  41084b:	mov    QWORD PTR [rbp-0x18],rdx
  41084f:	mov    QWORD PTR [rbp-0x20],rcx
  410853:	mov    DWORD PTR [rbp-0x24],r8d
  410857:	mov    rcx,QWORD PTR [rbp-0x8]
  41085b:	mov    rdi,rcx
  41085e:	mov    esi,eax
  410860:	mov    rdx,r10
  410863:	call   403070 <memset@plt>
  410868:	mov    rcx,QWORD PTR [rbp-0x10]
  41086c:	mov    rdx,QWORD PTR [rbp-0x8]
  410870:	mov    QWORD PTR [rdx],rcx
  410873:	mov    rcx,QWORD PTR [rbp-0x18]
  410877:	mov    rdx,QWORD PTR [rbp-0x8]
  41087b:	mov    QWORD PTR [rdx+0x8],rcx
  41087f:	mov    rcx,QWORD PTR [rbp-0x8]
  410883:	mov    DWORD PTR [rcx+0x18],0x1
  41088a:	mov    eax,DWORD PTR [rbp-0x24]
  41088d:	mov    rcx,QWORD PTR [rbp-0x8]
  410891:	mov    DWORD PTR [rcx+0x10],eax
  410894:	mov    rcx,QWORD PTR [rbp-0x18]
  410898:	mov    rdx,QWORD PTR [rbp-0x8]
  41089c:	mov    QWORD PTR [rdx+0x28],rcx
  4108a0:	mov    rcx,QWORD PTR [rbp-0x20]
  4108a4:	mov    rdx,QWORD PTR [rbp-0x8]
  4108a8:	mov    QWORD PTR [rdx+0x30],rcx
  4108ac:	mov    rcx,QWORD PTR [rbp-0x18]
  4108b0:	mov    rdx,QWORD PTR [rbp-0x8]
  4108b4:	mov    QWORD PTR [rdx+0x38],rcx
  4108b8:	add    rsp,0x30
  4108bc:	pop    rbp
  4108bd:	ret    
  4108be:	xchg   ax,ax

00000000004108c0 <flatcc_json_parser_struct_as_root@@Base>:
  4108c0:	push   rbp
  4108c1:	mov    rbp,rsp
  4108c4:	sub    rsp,0xa0
  4108cb:	mov    rax,QWORD PTR [rbp+0x10]
  4108cf:	xor    r10d,r10d
  4108d2:	mov    QWORD PTR [rbp-0x10],rdi
  4108d6:	mov    QWORD PTR [rbp-0x18],rsi
  4108da:	mov    QWORD PTR [rbp-0x20],rdx
  4108de:	mov    QWORD PTR [rbp-0x28],rcx
  4108e2:	mov    DWORD PTR [rbp-0x2c],r8d
  4108e6:	mov    QWORD PTR [rbp-0x38],r9
  4108ea:	mov    r8d,DWORD PTR [rbp-0x2c]
  4108ee:	and    r8d,0x4
  4108f2:	cmp    r8d,0x0
  4108f6:	mov    r8d,0x2
  4108fc:	cmovne r10d,r8d
  410900:	mov    DWORD PTR [rbp-0x88],r10d
  410907:	cmp    QWORD PTR [rbp-0x18],0x0
  41090c:	mov    QWORD PTR [rbp-0x90],rax
  410913:	je     410929 <flatcc_json_parser_struct_as_root@@Base+0x69>
  410919:	mov    rax,QWORD PTR [rbp-0x18]
  41091d:	mov    QWORD PTR [rbp-0x98],rax
  410924:	jmp    410939 <flatcc_json_parser_struct_as_root@@Base+0x79>
  410929:	lea    rax,[rbp-0x80]
  41092d:	mov    QWORD PTR [rbp-0x98],rax
  410934:	jmp    410939 <flatcc_json_parser_struct_as_root@@Base+0x79>
  410939:	mov    rax,QWORD PTR [rbp-0x98]
  410940:	mov    QWORD PTR [rbp-0x18],rax
  410944:	mov    rdi,QWORD PTR [rbp-0x18]
  410948:	mov    rsi,QWORD PTR [rbp-0x10]
  41094c:	mov    rdx,QWORD PTR [rbp-0x20]
  410950:	mov    rax,QWORD PTR [rbp-0x20]
  410954:	add    rax,QWORD PTR [rbp-0x28]
  410958:	mov    r8d,DWORD PTR [rbp-0x2c]
  41095c:	mov    rcx,rax
  41095f:	call   410830 <flatcc_json_parser_table_as_root@@Base+0x160>
  410964:	xor    edx,edx
  410966:	mov    rdi,QWORD PTR [rbp-0x10]
  41096a:	mov    rsi,QWORD PTR [rbp-0x38]
  41096e:	mov    ecx,DWORD PTR [rbp-0x88]
  410974:	call   4064b0 <flatcc_builder_start_buffer@@Base>
  410979:	cmp    eax,0x0
  41097c:	je     41098e <flatcc_json_parser_struct_as_root@@Base+0xce>
  410982:	mov    DWORD PTR [rbp-0x4],0xffffffff
  410989:	jmp    410a09 <flatcc_json_parser_struct_as_root@@Base+0x149>
  41098e:	mov    rax,QWORD PTR [rbp+0x10]
  410992:	mov    rdi,QWORD PTR [rbp-0x18]
  410996:	mov    rsi,QWORD PTR [rbp-0x20]
  41099a:	mov    rcx,QWORD PTR [rbp-0x20]
  41099e:	add    rcx,QWORD PTR [rbp-0x28]
  4109a2:	mov    rdx,rcx
  4109a5:	lea    rcx,[rbp-0x84]
  4109ac:	call   rax
  4109ae:	mov    rcx,QWORD PTR [rbp-0x18]
  4109b2:	cmp    DWORD PTR [rcx+0x20],0x0
  4109b6:	mov    QWORD PTR [rbp-0xa0],rax
  4109bd:	je     4109d2 <flatcc_json_parser_struct_as_root@@Base+0x112>
  4109c3:	mov    rax,QWORD PTR [rbp-0x18]
  4109c7:	mov    ecx,DWORD PTR [rax+0x20]
  4109ca:	mov    DWORD PTR [rbp-0x4],ecx
  4109cd:	jmp    410a09 <flatcc_json_parser_struct_as_root@@Base+0x149>
  4109d2:	mov    rdi,QWORD PTR [rbp-0x10]
  4109d6:	mov    esi,DWORD PTR [rbp-0x84]
  4109dc:	call   4067f0 <flatcc_builder_end_buffer@@Base>
  4109e1:	cmp    eax,0x0
  4109e4:	jne    4109f6 <flatcc_json_parser_struct_as_root@@Base+0x136>
  4109ea:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4109f1:	jmp    410a09 <flatcc_json_parser_struct_as_root@@Base+0x149>
  4109f6:	mov    rax,QWORD PTR [rbp-0x20]
  4109fa:	mov    rcx,QWORD PTR [rbp-0x18]
  4109fe:	mov    QWORD PTR [rcx+0x40],rax
  410a02:	mov    DWORD PTR [rbp-0x4],0x0
  410a09:	mov    eax,DWORD PTR [rbp-0x4]
  410a0c:	add    rsp,0xa0
  410a13:	pop    rbp
  410a14:	ret    
  410a15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410a1f:	nop
  410a20:	push   rbp
  410a21:	mov    rbp,rsp
  410a24:	mov    QWORD PTR [rbp-0x8],rdi
  410a28:	mov    rdi,QWORD PTR [rbp-0x8]
  410a2c:	mov    QWORD PTR [rbp-0x10],rdi
  410a30:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  410a35:	pop    rbp
  410a36:	ret    
  410a37:	nop    WORD PTR [rax+rax*1+0x0]
  410a40:	push   rbp
  410a41:	mov    rbp,rsp
  410a44:	sub    rsp,0x90
  410a4b:	mov    QWORD PTR [rbp-0x10],rdi
  410a4f:	mov    DWORD PTR [rbp-0x14],esi
  410a52:	mov    QWORD PTR [rbp-0x20],rdx
  410a56:	mov    DWORD PTR [rbp-0x3c],0x0
  410a5d:	mov    DWORD PTR [rbp-0x40],0x0
  410a64:	mov    QWORD PTR [rbp-0x48],0x0
  410a6c:	mov    DWORD PTR [rbp-0x4c],0x0
  410a73:	mov    DWORD PTR [rbp-0x50],0x0
  410a7a:	mov    DWORD PTR [rbp-0x54],0x0
  410a81:	mov    DWORD PTR [rbp-0x58],0x0
  410a88:	mov    rdx,QWORD PTR [rbp-0x20]
  410a8c:	vxorps xmm0,xmm0,xmm0
  410a90:	vmovsd QWORD PTR [rdx],xmm0
  410a94:	mov    rdx,QWORD PTR [rbp-0x10]
  410a98:	movsxd rdi,DWORD PTR [rbp-0x14]
  410a9c:	add    rdx,rdi
  410a9f:	add    rdx,0x1
  410aa3:	mov    QWORD PTR [rbp-0x38],rdx
  410aa7:	cmp    DWORD PTR [rbp-0x14],0x3e8
  410aae:	jle    410ac6 <flatcc_json_parser_struct_as_root@@Base+0x206>
  410ab4:	mov    rax,QWORD PTR [rbp-0x10]
  410ab8:	add    rax,0x3e8
  410abe:	add    rax,0x1
  410ac2:	mov    QWORD PTR [rbp-0x38],rax
  410ac6:	mov    rax,QWORD PTR [rbp-0x10]
  410aca:	cmp    rax,QWORD PTR [rbp-0x38]
  410ace:	jne    410ae1 <flatcc_json_parser_struct_as_root@@Base+0x221>
  410ad4:	mov    rax,QWORD PTR [rbp-0x10]
  410ad8:	mov    QWORD PTR [rbp-0x8],rax
  410adc:	jmp    41127d <flatcc_json_parser_struct_as_root@@Base+0x9bd>
  410ae1:	mov    rax,QWORD PTR [rbp-0x10]
  410ae5:	mov    QWORD PTR [rbp-0x28],rax
  410ae9:	mov    rax,QWORD PTR [rbp-0x10]
  410aed:	movsx  ecx,BYTE PTR [rax]
  410af0:	cmp    ecx,0x2d
  410af3:	jne    410b2c <flatcc_json_parser_struct_as_root@@Base+0x26c>
  410af9:	mov    rax,QWORD PTR [rbp-0x10]
  410afd:	add    rax,0x1
  410b01:	mov    QWORD PTR [rbp-0x10],rax
  410b05:	mov    DWORD PTR [rbp-0x3c],0x1
  410b0c:	mov    rax,QWORD PTR [rbp-0x10]
  410b10:	cmp    rax,QWORD PTR [rbp-0x38]
  410b14:	jne    410b27 <flatcc_json_parser_struct_as_root@@Base+0x267>
  410b1a:	mov    QWORD PTR [rbp-0x8],0x0
  410b22:	jmp    41127d <flatcc_json_parser_struct_as_root@@Base+0x9bd>
  410b27:	jmp    410b2c <flatcc_json_parser_struct_as_root@@Base+0x26c>
  410b2c:	mov    rax,QWORD PTR [rbp-0x10]
  410b30:	movsx  ecx,BYTE PTR [rax]
  410b33:	cmp    ecx,0x30
  410b36:	jne    410bf9 <flatcc_json_parser_struct_as_root@@Base+0x339>
  410b3c:	mov    rax,QWORD PTR [rbp-0x10]
  410b40:	add    rax,0x1
  410b44:	mov    QWORD PTR [rbp-0x10],rax
  410b48:	mov    rax,QWORD PTR [rbp-0x10]
  410b4c:	cmp    rax,QWORD PTR [rbp-0x38]
  410b50:	je     410ba9 <flatcc_json_parser_struct_as_root@@Base+0x2e9>
  410b56:	mov    rax,QWORD PTR [rbp-0x10]
  410b5a:	movsx  ecx,BYTE PTR [rax]
  410b5d:	or     ecx,0x20
  410b60:	cmp    ecx,0x78
  410b63:	jne    410ba9 <flatcc_json_parser_struct_as_root@@Base+0x2e9>
  410b69:	mov    rdi,QWORD PTR [rbp-0x10]
  410b6d:	mov    rsi,QWORD PTR [rbp-0x38]
  410b71:	mov    edx,DWORD PTR [rbp-0x3c]
  410b74:	mov    rcx,QWORD PTR [rbp-0x20]
  410b78:	call   411290 <flatcc_json_parser_struct_as_root@@Base+0x9d0>
  410b7d:	mov    QWORD PTR [rbp-0x30],rax
  410b81:	mov    rax,QWORD PTR [rbp-0x30]
  410b85:	cmp    rax,QWORD PTR [rbp-0x10]
  410b89:	jne    410b9c <flatcc_json_parser_struct_as_root@@Base+0x2dc>
  410b8f:	mov    rax,QWORD PTR [rbp-0x28]
  410b93:	mov    QWORD PTR [rbp-0x8],rax
  410b97:	jmp    41127d <flatcc_json_parser_struct_as_root@@Base+0x9bd>
  410b9c:	mov    rax,QWORD PTR [rbp-0x30]
  410ba0:	mov    QWORD PTR [rbp-0x8],rax
  410ba4:	jmp    41127d <flatcc_json_parser_struct_as_root@@Base+0x9bd>
  410ba9:	jmp    410bae <flatcc_json_parser_struct_as_root@@Base+0x2ee>
  410bae:	xor    eax,eax
  410bb0:	mov    cl,al
  410bb2:	mov    rdx,QWORD PTR [rbp-0x10]
  410bb6:	cmp    rdx,QWORD PTR [rbp-0x38]
  410bba:	mov    BYTE PTR [rbp-0x59],cl
  410bbd:	je     410bd3 <flatcc_json_parser_struct_as_root@@Base+0x313>
  410bc3:	mov    rax,QWORD PTR [rbp-0x10]
  410bc7:	movsx  ecx,BYTE PTR [rax]
  410bca:	cmp    ecx,0x30
  410bcd:	sete   dl
  410bd0:	mov    BYTE PTR [rbp-0x59],dl
  410bd3:	mov    al,BYTE PTR [rbp-0x59]
  410bd6:	test   al,0x1
  410bd8:	jne    410be3 <flatcc_json_parser_struct_as_root@@Base+0x323>
  410bde:	jmp    410bf4 <flatcc_json_parser_struct_as_root@@Base+0x334>
  410be3:	mov    rax,QWORD PTR [rbp-0x10]
  410be7:	add    rax,0x1
  410beb:	mov    QWORD PTR [rbp-0x10],rax
  410bef:	jmp    410bae <flatcc_json_parser_struct_as_root@@Base+0x2ee>
  410bf4:	jmp    410c61 <flatcc_json_parser_struct_as_root@@Base+0x3a1>
  410bf9:	mov    rax,QWORD PTR [rbp-0x10]
  410bfd:	movsx  ecx,BYTE PTR [rax]
  410c00:	cmp    ecx,0x31
  410c03:	jl     410c19 <flatcc_json_parser_struct_as_root@@Base+0x359>
  410c09:	mov    rax,QWORD PTR [rbp-0x10]
  410c0d:	movsx  ecx,BYTE PTR [rax]
  410c10:	cmp    ecx,0x39
  410c13:	jle    410c45 <flatcc_json_parser_struct_as_root@@Base+0x385>
  410c19:	cmp    DWORD PTR [rbp-0x3c],0x0
  410c1d:	je     410c30 <flatcc_json_parser_struct_as_root@@Base+0x370>
  410c23:	xor    eax,eax
  410c25:	mov    ecx,eax
  410c27:	mov    QWORD PTR [rbp-0x68],rcx
  410c2b:	jmp    410c38 <flatcc_json_parser_struct_as_root@@Base+0x378>
  410c30:	mov    rax,QWORD PTR [rbp-0x28]
  410c34:	mov    QWORD PTR [rbp-0x68],rax
  410c38:	mov    rax,QWORD PTR [rbp-0x68]
  410c3c:	mov    QWORD PTR [rbp-0x8],rax
  410c40:	jmp    41127d <flatcc_json_parser_struct_as_root@@Base+0x9bd>
  410c45:	mov    rax,QWORD PTR [rbp-0x10]
  410c49:	mov    rcx,rax
  410c4c:	add    rcx,0x1
  410c50:	mov    QWORD PTR [rbp-0x10],rcx
  410c54:	movsx  edx,BYTE PTR [rax]
  410c57:	sub    edx,0x30
  410c5a:	movsxd rax,edx
  410c5d:	mov    QWORD PTR [rbp-0x48],rax
  410c61:	mov    rax,QWORD PTR [rbp-0x10]
  410c65:	mov    QWORD PTR [rbp-0x30],rax
  410c69:	xor    eax,eax
  410c6b:	mov    cl,al
  410c6d:	mov    rdx,QWORD PTR [rbp-0x10]
  410c71:	cmp    rdx,QWORD PTR [rbp-0x38]
  410c75:	mov    BYTE PTR [rbp-0x69],cl
  410c78:	je     410ca5 <flatcc_json_parser_struct_as_root@@Base+0x3e5>
  410c7e:	xor    eax,eax
  410c80:	mov    cl,al
  410c82:	mov    rdx,QWORD PTR [rbp-0x10]
  410c86:	movsx  eax,BYTE PTR [rdx]
  410c89:	cmp    eax,0x30
  410c8c:	mov    BYTE PTR [rbp-0x69],cl
  410c8f:	jl     410ca5 <flatcc_json_parser_struct_as_root@@Base+0x3e5>
  410c95:	mov    rax,QWORD PTR [rbp-0x10]
  410c99:	movsx  ecx,BYTE PTR [rax]
  410c9c:	cmp    ecx,0x39
  410c9f:	setle  dl
  410ca2:	mov    BYTE PTR [rbp-0x69],dl
  410ca5:	mov    al,BYTE PTR [rbp-0x69]
  410ca8:	test   al,0x1
  410caa:	jne    410cb5 <flatcc_json_parser_struct_as_root@@Base+0x3f5>
  410cb0:	jmp    410d1b <flatcc_json_parser_struct_as_root@@Base+0x45b>
  410cb5:	movabs rax,0x1999999999999999
  410cbf:	cmp    QWORD PTR [rbp-0x48],rax
  410cc3:	jb     410cf3 <flatcc_json_parser_struct_as_root@@Base+0x433>
  410cc9:	mov    rax,QWORD PTR [rbp-0x10]
  410ccd:	movsx  ecx,BYTE PTR [rax]
  410cd0:	cmp    ecx,0x35
  410cd3:	setge  dl
  410cd6:	and    dl,0x1
  410cd9:	movzx  ecx,dl
  410cdc:	movsxd rax,ecx
  410cdf:	add    rax,QWORD PTR [rbp-0x48]
  410ce3:	mov    QWORD PTR [rbp-0x48],rax
  410ce7:	mov    DWORD PTR [rbp-0x58],0x1
  410cee:	jmp    410d1b <flatcc_json_parser_struct_as_root@@Base+0x45b>
  410cf3:	imul   rax,QWORD PTR [rbp-0x48],0xa
  410cf8:	mov    rcx,QWORD PTR [rbp-0x10]
  410cfc:	mov    rdx,rcx
  410cff:	add    rdx,0x1
  410d03:	mov    QWORD PTR [rbp-0x10],rdx
  410d07:	movsx  rcx,BYTE PTR [rcx]
  410d0b:	add    rax,rcx
  410d0e:	sub    rax,0x30
  410d12:	mov    QWORD PTR [rbp-0x48],rax
  410d16:	jmp    410c69 <flatcc_json_parser_struct_as_root@@Base+0x3a9>
  410d1b:	mov    rax,QWORD PTR [rbp-0x10]
  410d1f:	mov    rcx,QWORD PTR [rbp-0x30]
  410d23:	sub    rax,rcx
  410d26:	mov    edx,eax
  410d28:	mov    DWORD PTR [rbp-0x54],edx
  410d2b:	xor    eax,eax
  410d2d:	mov    cl,al
  410d2f:	mov    rdx,QWORD PTR [rbp-0x10]
  410d33:	cmp    rdx,QWORD PTR [rbp-0x38]
  410d37:	mov    BYTE PTR [rbp-0x6a],cl
  410d3a:	je     410d50 <flatcc_json_parser_struct_as_root@@Base+0x490>
  410d40:	mov    rax,QWORD PTR [rbp-0x10]
  410d44:	movsx  ecx,BYTE PTR [rax]
  410d47:	cmp    ecx,0x30
  410d4a:	sete   dl
  410d4d:	mov    BYTE PTR [rbp-0x6a],dl
  410d50:	mov    al,BYTE PTR [rbp-0x6a]
  410d53:	test   al,0x1
  410d55:	jne    410d60 <flatcc_json_parser_struct_as_root@@Base+0x4a0>
  410d5b:	jmp    410d7a <flatcc_json_parser_struct_as_root@@Base+0x4ba>
  410d60:	mov    eax,DWORD PTR [rbp-0x4c]
  410d63:	add    eax,0x1
  410d66:	mov    DWORD PTR [rbp-0x4c],eax
  410d69:	mov    rcx,QWORD PTR [rbp-0x10]
  410d6d:	add    rcx,0x1
  410d71:	mov    QWORD PTR [rbp-0x10],rcx
  410d75:	jmp    410d2b <flatcc_json_parser_struct_as_root@@Base+0x46b>
  410d7a:	mov    rax,QWORD PTR [rbp-0x10]
  410d7e:	cmp    rax,QWORD PTR [rbp-0x38]
  410d82:	je     410e2f <flatcc_json_parser_struct_as_root@@Base+0x56f>
  410d88:	mov    rax,QWORD PTR [rbp-0x10]
  410d8c:	movsx  ecx,BYTE PTR [rax]
  410d8f:	cmp    ecx,0x31
  410d92:	jl     410e2f <flatcc_json_parser_struct_as_root@@Base+0x56f>
  410d98:	mov    rax,QWORD PTR [rbp-0x10]
  410d9c:	movsx  ecx,BYTE PTR [rax]
  410d9f:	cmp    ecx,0x39
  410da2:	jg     410e2f <flatcc_json_parser_struct_as_root@@Base+0x56f>
  410da8:	mov    DWORD PTR [rbp-0x58],0x1
  410daf:	mov    eax,DWORD PTR [rbp-0x4c]
  410db2:	add    eax,0x1
  410db5:	mov    DWORD PTR [rbp-0x4c],eax
  410db8:	mov    rcx,QWORD PTR [rbp-0x10]
  410dbc:	add    rcx,0x1
  410dc0:	mov    QWORD PTR [rbp-0x10],rcx
  410dc4:	xor    eax,eax
  410dc6:	mov    cl,al
  410dc8:	mov    rdx,QWORD PTR [rbp-0x10]
  410dcc:	cmp    rdx,QWORD PTR [rbp-0x38]
  410dd0:	mov    BYTE PTR [rbp-0x6b],cl
  410dd3:	je     410e00 <flatcc_json_parser_struct_as_root@@Base+0x540>
  410dd9:	xor    eax,eax
  410ddb:	mov    cl,al
  410ddd:	mov    rdx,QWORD PTR [rbp-0x10]
  410de1:	movsx  eax,BYTE PTR [rdx]
  410de4:	cmp    eax,0x30
  410de7:	mov    BYTE PTR [rbp-0x6b],cl
  410dea:	jl     410e00 <flatcc_json_parser_struct_as_root@@Base+0x540>
  410df0:	mov    rax,QWORD PTR [rbp-0x10]
  410df4:	movsx  ecx,BYTE PTR [rax]
  410df7:	cmp    ecx,0x39
  410dfa:	setle  dl
  410dfd:	mov    BYTE PTR [rbp-0x6b],dl
  410e00:	mov    al,BYTE PTR [rbp-0x6b]
  410e03:	test   al,0x1
  410e05:	jne    410e10 <flatcc_json_parser_struct_as_root@@Base+0x550>
  410e0b:	jmp    410e2a <flatcc_json_parser_struct_as_root@@Base+0x56a>
  410e10:	mov    eax,DWORD PTR [rbp-0x4c]
  410e13:	add    eax,0x1
  410e16:	mov    DWORD PTR [rbp-0x4c],eax
  410e19:	mov    rcx,QWORD PTR [rbp-0x10]
  410e1d:	add    rcx,0x1
  410e21:	mov    QWORD PTR [rbp-0x10],rcx
  410e25:	jmp    410dc4 <flatcc_json_parser_struct_as_root@@Base+0x504>
  410e2a:	jmp    410e2f <flatcc_json_parser_struct_as_root@@Base+0x56f>
  410e2f:	mov    rax,QWORD PTR [rbp-0x10]
  410e33:	cmp    rax,QWORD PTR [rbp-0x38]
  410e37:	je     411062 <flatcc_json_parser_struct_as_root@@Base+0x7a2>
  410e3d:	mov    rax,QWORD PTR [rbp-0x10]
  410e41:	movsx  ecx,BYTE PTR [rax]
  410e44:	cmp    ecx,0x2e
  410e47:	jne    411062 <flatcc_json_parser_struct_as_root@@Base+0x7a2>
  410e4d:	mov    rax,QWORD PTR [rbp-0x10]
  410e51:	add    rax,0x1
  410e55:	mov    QWORD PTR [rbp-0x10],rax
  410e59:	mov    rax,QWORD PTR [rbp-0x10]
  410e5d:	mov    QWORD PTR [rbp-0x30],rax
  410e61:	mov    rax,QWORD PTR [rbp-0x10]
  410e65:	movsx  ecx,BYTE PTR [rax]
  410e68:	cmp    ecx,0x30
  410e6b:	jl     410e81 <flatcc_json_parser_struct_as_root@@Base+0x5c1>
  410e71:	mov    rax,QWORD PTR [rbp-0x10]
  410e75:	movsx  ecx,BYTE PTR [rax]
  410e78:	cmp    ecx,0x39
  410e7b:	jle    410e8e <flatcc_json_parser_struct_as_root@@Base+0x5ce>
  410e81:	mov    QWORD PTR [rbp-0x8],0x0
  410e89:	jmp    41127d <flatcc_json_parser_struct_as_root@@Base+0x9bd>
  410e8e:	jmp    410e93 <flatcc_json_parser_struct_as_root@@Base+0x5d3>
  410e93:	xor    eax,eax
  410e95:	mov    cl,al
  410e97:	mov    rdx,QWORD PTR [rbp-0x10]
  410e9b:	cmp    rdx,QWORD PTR [rbp-0x38]
  410e9f:	mov    BYTE PTR [rbp-0x6c],cl
  410ea2:	je     410ecf <flatcc_json_parser_struct_as_root@@Base+0x60f>
  410ea8:	xor    eax,eax
  410eaa:	mov    cl,al
  410eac:	mov    rdx,QWORD PTR [rbp-0x10]
  410eb0:	movsx  eax,BYTE PTR [rdx]
  410eb3:	cmp    eax,0x30
  410eb6:	mov    BYTE PTR [rbp-0x6c],cl
  410eb9:	jl     410ecf <flatcc_json_parser_struct_as_root@@Base+0x60f>
  410ebf:	mov    rax,QWORD PTR [rbp-0x10]
  410ec3:	movsx  ecx,BYTE PTR [rax]
  410ec6:	cmp    ecx,0x39
  410ec9:	setle  dl
  410ecc:	mov    BYTE PTR [rbp-0x6c],dl
  410ecf:	mov    al,BYTE PTR [rbp-0x6c]
  410ed2:	test   al,0x1
  410ed4:	jne    410edf <flatcc_json_parser_struct_as_root@@Base+0x61f>
  410eda:	jmp    410f58 <flatcc_json_parser_struct_as_root@@Base+0x698>
  410edf:	movabs rax,0x1999999999999999
  410ee9:	cmp    QWORD PTR [rbp-0x48],rax
  410eed:	jb     410f27 <flatcc_json_parser_struct_as_root@@Base+0x667>
  410ef3:	cmp    DWORD PTR [rbp-0x58],0x0
  410ef7:	jne    410f22 <flatcc_json_parser_struct_as_root@@Base+0x662>
  410efd:	mov    rax,QWORD PTR [rbp-0x10]
  410f01:	movsx  ecx,BYTE PTR [rax]
  410f04:	cmp    ecx,0x35
  410f07:	setge  dl
  410f0a:	and    dl,0x1
  410f0d:	movzx  ecx,dl
  410f10:	movsxd rax,ecx
  410f13:	add    rax,QWORD PTR [rbp-0x48]
  410f17:	mov    QWORD PTR [rbp-0x48],rax
  410f1b:	mov    DWORD PTR [rbp-0x58],0x1
  410f22:	jmp    410f58 <flatcc_json_parser_struct_as_root@@Base+0x698>
  410f27:	imul   rax,QWORD PTR [rbp-0x48],0xa
  410f2c:	mov    rcx,QWORD PTR [rbp-0x10]
  410f30:	mov    rdx,rcx
  410f33:	add    rdx,0x1
  410f37:	mov    QWORD PTR [rbp-0x10],rdx
  410f3b:	movsx  rcx,BYTE PTR [rcx]
  410f3f:	add    rax,rcx
  410f42:	sub    rax,0x30
  410f46:	mov    QWORD PTR [rbp-0x48],rax
  410f4a:	mov    esi,DWORD PTR [rbp-0x4c]
  410f4d:	add    esi,0xffffffff
  410f50:	mov    DWORD PTR [rbp-0x4c],esi
  410f53:	jmp    410e93 <flatcc_json_parser_struct_as_root@@Base+0x5d3>
  410f58:	mov    rax,QWORD PTR [rbp-0x10]
  410f5c:	mov    rcx,QWORD PTR [rbp-0x30]
  410f60:	sub    rax,rcx
  410f63:	mov    edx,eax
  410f65:	add    edx,DWORD PTR [rbp-0x54]
  410f68:	mov    DWORD PTR [rbp-0x54],edx
  410f6b:	xor    eax,eax
  410f6d:	mov    cl,al
  410f6f:	mov    rdx,QWORD PTR [rbp-0x10]
  410f73:	cmp    rdx,QWORD PTR [rbp-0x38]
  410f77:	mov    BYTE PTR [rbp-0x6d],cl
  410f7a:	je     410f90 <flatcc_json_parser_struct_as_root@@Base+0x6d0>
  410f80:	mov    rax,QWORD PTR [rbp-0x10]
  410f84:	movsx  ecx,BYTE PTR [rax]
  410f87:	cmp    ecx,0x30
  410f8a:	sete   dl
  410f8d:	mov    BYTE PTR [rbp-0x6d],dl
  410f90:	mov    al,BYTE PTR [rbp-0x6d]
  410f93:	test   al,0x1
  410f95:	jne    410fa0 <flatcc_json_parser_struct_as_root@@Base+0x6e0>
  410f9b:	jmp    410fba <flatcc_json_parser_struct_as_root@@Base+0x6fa>
  410fa0:	mov    eax,DWORD PTR [rbp-0x4c]
  410fa3:	add    eax,0x1
  410fa6:	mov    DWORD PTR [rbp-0x4c],eax
  410fa9:	mov    rcx,QWORD PTR [rbp-0x10]
  410fad:	add    rcx,0x1
  410fb1:	mov    QWORD PTR [rbp-0x10],rcx
  410fb5:	jmp    410f6b <flatcc_json_parser_struct_as_root@@Base+0x6ab>
  410fba:	mov    rax,QWORD PTR [rbp-0x10]
  410fbe:	cmp    rax,QWORD PTR [rbp-0x38]
  410fc2:	je     41105d <flatcc_json_parser_struct_as_root@@Base+0x79d>
  410fc8:	mov    rax,QWORD PTR [rbp-0x10]
  410fcc:	movsx  ecx,BYTE PTR [rax]
  410fcf:	cmp    ecx,0x31
  410fd2:	jl     41105d <flatcc_json_parser_struct_as_root@@Base+0x79d>
  410fd8:	mov    rax,QWORD PTR [rbp-0x10]
  410fdc:	movsx  ecx,BYTE PTR [rax]
  410fdf:	cmp    ecx,0x39
  410fe2:	jg     41105d <flatcc_json_parser_struct_as_root@@Base+0x79d>
  410fe8:	mov    DWORD PTR [rbp-0x58],0x1
  410fef:	mov    rax,QWORD PTR [rbp-0x10]
  410ff3:	add    rax,0x1
  410ff7:	mov    QWORD PTR [rbp-0x10],rax
  410ffb:	xor    eax,eax
  410ffd:	mov    cl,al
  410fff:	mov    rdx,QWORD PTR [rbp-0x10]
  411003:	cmp    rdx,QWORD PTR [rbp-0x38]
  411007:	mov    BYTE PTR [rbp-0x6e],cl
  41100a:	je     411037 <flatcc_json_parser_struct_as_root@@Base+0x777>
  411010:	xor    eax,eax
  411012:	mov    cl,al
  411014:	mov    rdx,QWORD PTR [rbp-0x10]
  411018:	movsx  eax,BYTE PTR [rdx]
  41101b:	cmp    eax,0x30
  41101e:	mov    BYTE PTR [rbp-0x6e],cl
  411021:	jl     411037 <flatcc_json_parser_struct_as_root@@Base+0x777>
  411027:	mov    rax,QWORD PTR [rbp-0x10]
  41102b:	movsx  ecx,BYTE PTR [rax]
  41102e:	cmp    ecx,0x39
  411031:	setle  dl
  411034:	mov    BYTE PTR [rbp-0x6e],dl
  411037:	mov    al,BYTE PTR [rbp-0x6e]
  41103a:	test   al,0x1
  41103c:	jne    411047 <flatcc_json_parser_struct_as_root@@Base+0x787>
  411042:	jmp    411058 <flatcc_json_parser_struct_as_root@@Base+0x798>
  411047:	mov    rax,QWORD PTR [rbp-0x10]
  41104b:	add    rax,0x1
  41104f:	mov    QWORD PTR [rbp-0x10],rax
  411053:	jmp    410ffb <flatcc_json_parser_struct_as_root@@Base+0x73b>
  411058:	jmp    41105d <flatcc_json_parser_struct_as_root@@Base+0x79d>
  41105d:	jmp    411062 <flatcc_json_parser_struct_as_root@@Base+0x7a2>
  411062:	mov    eax,DWORD PTR [rbp-0x54]
  411065:	add    eax,DWORD PTR [rbp-0x4c]
  411068:	mov    DWORD PTR [rbp-0x4c],eax
  41106b:	mov    rcx,QWORD PTR [rbp-0x10]
  41106f:	cmp    rcx,QWORD PTR [rbp-0x38]
  411073:	je     411205 <flatcc_json_parser_struct_as_root@@Base+0x945>
  411079:	mov    rax,QWORD PTR [rbp-0x10]
  41107d:	movsx  ecx,BYTE PTR [rax]
  411080:	or     ecx,0x20
  411083:	cmp    ecx,0x65
  411086:	jne    411205 <flatcc_json_parser_struct_as_root@@Base+0x945>
  41108c:	mov    rax,QWORD PTR [rbp-0x38]
  411090:	mov    rcx,QWORD PTR [rbp-0x10]
  411094:	sub    rax,rcx
  411097:	cmp    rax,0x2
  41109b:	jge    4110ae <flatcc_json_parser_struct_as_root@@Base+0x7ee>
  4110a1:	mov    QWORD PTR [rbp-0x8],0x0
  4110a9:	jmp    41127d <flatcc_json_parser_struct_as_root@@Base+0x9bd>
  4110ae:	mov    rax,QWORD PTR [rbp-0x10]
  4110b2:	add    rax,0x1
  4110b6:	mov    QWORD PTR [rbp-0x10],rax
  4110ba:	mov    rax,QWORD PTR [rbp-0x10]
  4110be:	movsx  ecx,BYTE PTR [rax]
  4110c1:	cmp    ecx,0x2b
  4110c4:	jne    4110f6 <flatcc_json_parser_struct_as_root@@Base+0x836>
  4110ca:	mov    rax,QWORD PTR [rbp-0x10]
  4110ce:	add    rax,0x1
  4110d2:	mov    QWORD PTR [rbp-0x10],rax
  4110d6:	mov    rax,QWORD PTR [rbp-0x10]
  4110da:	cmp    rax,QWORD PTR [rbp-0x38]
  4110de:	jne    4110f1 <flatcc_json_parser_struct_as_root@@Base+0x831>
  4110e4:	mov    QWORD PTR [rbp-0x8],0x0
  4110ec:	jmp    41127d <flatcc_json_parser_struct_as_root@@Base+0x9bd>
  4110f1:	jmp    41113e <flatcc_json_parser_struct_as_root@@Base+0x87e>
  4110f6:	mov    rax,QWORD PTR [rbp-0x10]
  4110fa:	movsx  ecx,BYTE PTR [rax]
  4110fd:	cmp    ecx,0x2d
  411100:	jne    411139 <flatcc_json_parser_struct_as_root@@Base+0x879>
  411106:	mov    DWORD PTR [rbp-0x40],0x1
  41110d:	mov    rax,QWORD PTR [rbp-0x10]
  411111:	add    rax,0x1
  411115:	mov    QWORD PTR [rbp-0x10],rax
  411119:	mov    rax,QWORD PTR [rbp-0x10]
  41111d:	cmp    rax,QWORD PTR [rbp-0x38]
  411121:	jne    411134 <flatcc_json_parser_struct_as_root@@Base+0x874>
  411127:	mov    QWORD PTR [rbp-0x8],0x0
  41112f:	jmp    41127d <flatcc_json_parser_struct_as_root@@Base+0x9bd>
  411134:	jmp    411139 <flatcc_json_parser_struct_as_root@@Base+0x879>
  411139:	jmp    41113e <flatcc_json_parser_struct_as_root@@Base+0x87e>
  41113e:	mov    rax,QWORD PTR [rbp-0x10]
  411142:	movsx  ecx,BYTE PTR [rax]
  411145:	cmp    ecx,0x30
  411148:	jl     41115e <flatcc_json_parser_struct_as_root@@Base+0x89e>
  41114e:	mov    rax,QWORD PTR [rbp-0x10]
  411152:	movsx  ecx,BYTE PTR [rax]
  411155:	cmp    ecx,0x39
  411158:	jle    41116b <flatcc_json_parser_struct_as_root@@Base+0x8ab>
  41115e:	mov    QWORD PTR [rbp-0x8],0x0
  411166:	jmp    41127d <flatcc_json_parser_struct_as_root@@Base+0x9bd>
  41116b:	mov    rax,QWORD PTR [rbp-0x10]
  41116f:	mov    rcx,rax
  411172:	add    rcx,0x1
  411176:	mov    QWORD PTR [rbp-0x10],rcx
  41117a:	movsx  edx,BYTE PTR [rax]
  41117d:	sub    edx,0x30
  411180:	mov    DWORD PTR [rbp-0x50],edx
  411183:	xor    eax,eax
  411185:	mov    cl,al
  411187:	mov    rdx,QWORD PTR [rbp-0x10]
  41118b:	cmp    rdx,QWORD PTR [rbp-0x38]
  41118f:	mov    BYTE PTR [rbp-0x6f],cl
  411192:	je     4111bf <flatcc_json_parser_struct_as_root@@Base+0x8ff>
  411198:	xor    eax,eax
  41119a:	mov    cl,al
  41119c:	mov    rdx,QWORD PTR [rbp-0x10]
  4111a0:	movsx  eax,BYTE PTR [rdx]
  4111a3:	cmp    eax,0x30
  4111a6:	mov    BYTE PTR [rbp-0x6f],cl
  4111a9:	jl     4111bf <flatcc_json_parser_struct_as_root@@Base+0x8ff>
  4111af:	mov    rax,QWORD PTR [rbp-0x10]
  4111b3:	movsx  ecx,BYTE PTR [rax]
  4111b6:	cmp    ecx,0x39
  4111b9:	setle  dl
  4111bc:	mov    BYTE PTR [rbp-0x6f],dl
  4111bf:	mov    al,BYTE PTR [rbp-0x6f]
  4111c2:	test   al,0x1
  4111c4:	jne    4111cf <flatcc_json_parser_struct_as_root@@Base+0x90f>
  4111ca:	jmp    411200 <flatcc_json_parser_struct_as_root@@Base+0x940>
  4111cf:	cmp    DWORD PTR [rbp-0x50],0x7fff
  4111d6:	jg     4111ef <flatcc_json_parser_struct_as_root@@Base+0x92f>
  4111dc:	imul   eax,DWORD PTR [rbp-0x50],0xa
  4111e0:	mov    rcx,QWORD PTR [rbp-0x10]
  4111e4:	movsx  edx,BYTE PTR [rcx]
  4111e7:	add    eax,edx
  4111e9:	sub    eax,0x30
  4111ec:	mov    DWORD PTR [rbp-0x50],eax
  4111ef:	mov    rax,QWORD PTR [rbp-0x10]
  4111f3:	add    rax,0x1
  4111f7:	mov    QWORD PTR [rbp-0x10],rax
  4111fb:	jmp    411183 <flatcc_json_parser_struct_as_root@@Base+0x8c3>
  411200:	jmp    411205 <flatcc_json_parser_struct_as_root@@Base+0x945>
  411205:	mov    eax,DWORD PTR [rbp-0x4c]
  411208:	cmp    DWORD PTR [rbp-0x40],0x0
  41120c:	mov    DWORD PTR [rbp-0x74],eax
  41120f:	je     411222 <flatcc_json_parser_struct_as_root@@Base+0x962>
  411215:	xor    eax,eax
  411217:	sub    eax,DWORD PTR [rbp-0x50]
  41121a:	mov    DWORD PTR [rbp-0x78],eax
  41121d:	jmp    411228 <flatcc_json_parser_struct_as_root@@Base+0x968>
  411222:	mov    eax,DWORD PTR [rbp-0x50]
  411225:	mov    DWORD PTR [rbp-0x78],eax
  411228:	mov    eax,DWORD PTR [rbp-0x78]
  41122b:	mov    ecx,DWORD PTR [rbp-0x74]
  41122e:	add    ecx,eax
  411230:	mov    DWORD PTR [rbp-0x4c],ecx
  411233:	mov    rdx,QWORD PTR [rbp-0x10]
  411237:	cmp    rdx,QWORD PTR [rbp-0x38]
  41123b:	jne    41124e <flatcc_json_parser_struct_as_root@@Base+0x98e>
  411241:	mov    QWORD PTR [rbp-0x8],0x0
  411249:	jmp    41127d <flatcc_json_parser_struct_as_root@@Base+0x9bd>
  41124e:	mov    rdi,QWORD PTR [rbp-0x28]
  411252:	mov    rsi,QWORD PTR [rbp-0x10]
  411256:	mov    edx,DWORD PTR [rbp-0x3c]
  411259:	mov    rcx,QWORD PTR [rbp-0x48]
  41125d:	mov    r8d,DWORD PTR [rbp-0x4c]
  411261:	mov    r9d,DWORD PTR [rbp-0x54]
  411265:	mov    eax,DWORD PTR [rbp-0x58]
  411268:	mov    r10,QWORD PTR [rbp-0x20]
  41126c:	mov    DWORD PTR [rsp],eax
  41126f:	mov    QWORD PTR [rsp+0x8],r10
  411274:	call   4112c0 <flatcc_json_parser_struct_as_root@@Base+0xa00>
  411279:	mov    QWORD PTR [rbp-0x8],rax
  41127d:	mov    rax,QWORD PTR [rbp-0x8]
  411281:	add    rsp,0x90
  411288:	pop    rbp
  411289:	ret    
  41128a:	nop    WORD PTR [rax+rax*1+0x0]
  411290:	push   rbp
  411291:	mov    rbp,rsp
  411294:	mov    QWORD PTR [rbp-0x8],rdi
  411298:	mov    QWORD PTR [rbp-0x10],rsi
  41129c:	mov    DWORD PTR [rbp-0x14],edx
  41129f:	mov    QWORD PTR [rbp-0x20],rcx
  4112a3:	mov    rcx,QWORD PTR [rbp-0x20]
  4112a7:	vxorps xmm0,xmm0,xmm0
  4112ab:	vmovsd QWORD PTR [rcx],xmm0
  4112af:	mov    rax,QWORD PTR [rbp-0x8]
  4112b3:	pop    rbp
  4112b4:	ret    
  4112b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4112bf:	nop
  4112c0:	push   rbp
  4112c1:	mov    rbp,rsp
  4112c4:	sub    rsp,0x70
  4112c8:	mov    rax,QWORD PTR [rbp+0x18]
  4112cc:	mov    r10d,DWORD PTR [rbp+0x10]
  4112d0:	mov    QWORD PTR [rbp-0x10],rdi
  4112d4:	mov    QWORD PTR [rbp-0x18],rsi
  4112d8:	mov    DWORD PTR [rbp-0x1c],edx
  4112db:	mov    QWORD PTR [rbp-0x28],rcx
  4112df:	mov    DWORD PTR [rbp-0x2c],r8d
  4112e3:	mov    DWORD PTR [rbp-0x30],r9d
  4112e7:	mov    DWORD PTR [rbp-0x34],0x135
  4112ee:	mov    DWORD PTR [rbp-0x38],0xfffffebc
  4112f5:	cmp    QWORD PTR [rbp-0x28],0x0
  4112fa:	mov    DWORD PTR [rbp-0x4c],r10d
  4112fe:	mov    QWORD PTR [rbp-0x58],rax
  411302:	je     411315 <flatcc_json_parser_struct_as_root@@Base+0xa55>
  411308:	cmp    DWORD PTR [rbp-0x2c],0xfffffebc
  41130f:	jge    411326 <flatcc_json_parser_struct_as_root@@Base+0xa66>
  411315:	mov    rax,QWORD PTR [rbp+0x18]
  411319:	vxorps xmm0,xmm0,xmm0
  41131d:	vmovsd QWORD PTR [rax],xmm0
  411321:	jmp    411891 <flatcc_json_parser_struct_as_root@@Base+0xfd1>
  411326:	mov    eax,DWORD PTR [rbp-0x2c]
  411329:	sub    eax,0x1
  41132c:	cmp    eax,0x135
  411331:	jle    411353 <flatcc_json_parser_struct_as_root@@Base+0xa93>
  411337:	movabs rdi,0x7ff0000000000000
  411341:	call   410a20 <flatcc_json_parser_struct_as_root@@Base+0x160>
  411346:	mov    rdi,QWORD PTR [rbp+0x18]
  41134a:	vmovsd QWORD PTR [rdi],xmm0
  41134e:	jmp    411891 <flatcc_json_parser_struct_as_root@@Base+0xfd1>
  411353:	movabs rax,0x20000000000000
  41135d:	cmp    QWORD PTR [rbp-0x28],rax
  411361:	jae    411830 <flatcc_json_parser_struct_as_root@@Base+0xf70>
  411367:	cmp    DWORD PTR [rbp-0x2c],0x0
  41136b:	jl     411830 <flatcc_json_parser_struct_as_root@@Base+0xf70>
  411371:	cmp    DWORD PTR [rbp-0x2c],0x16
  411375:	jg     411830 <flatcc_json_parser_struct_as_root@@Base+0xf70>
  41137b:	vmovdqa xmm0,XMMWORD PTR [rip+0x331d]        # 4146a0 <flatcc_builder_padding_base@@Base+0x2330>
  411383:	vmovq  xmm1,QWORD PTR [rbp-0x28]
  411388:	vpunpckldq xmm0,xmm1,xmm0
  41138c:	vmovapd xmm1,XMMWORD PTR [rip+0x331c]        # 4146b0 <flatcc_builder_padding_base@@Base+0x2340>
  411394:	vsubpd xmm0,xmm0,xmm1
  411398:	vhaddpd xmm0,xmm0,xmm0
  41139c:	vmovlpd QWORD PTR [rbp-0x48],xmm0
  4113a1:	mov    eax,DWORD PTR [rbp-0x2c]
  4113a4:	mov    ecx,DWORD PTR [rbp-0x30]
  4113a7:	sub    eax,ecx
  4113a9:	add    eax,0x16
  4113ac:	mov    edx,eax
  4113ae:	sub    eax,0x2c
  4113b1:	mov    QWORD PTR [rbp-0x60],rdx
  4113b5:	mov    DWORD PTR [rbp-0x64],eax
  4113b8:	ja     41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4113be:	lea    rax,[rip+0x27cb]        # 413b90 <flatcc_builder_padding_base@@Base+0x1820>
  4113c5:	mov    rcx,QWORD PTR [rbp-0x60]
  4113c9:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4113cd:	add    rdx,rax
  4113d0:	jmp    rdx
  4113d2:	vmovsd xmm0,QWORD PTR [rip+0x31fe]        # 4145d8 <flatcc_builder_padding_base@@Base+0x2268>
  4113da:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4113df:	vdivsd xmm0,xmm1,xmm0
  4113e3:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4113e8:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4113ed:	vmovsd xmm0,QWORD PTR [rip+0x31eb]        # 4145e0 <flatcc_builder_padding_base@@Base+0x2270>
  4113f5:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4113fa:	vdivsd xmm0,xmm1,xmm0
  4113fe:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411403:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411408:	vmovsd xmm0,QWORD PTR [rip+0x31d8]        # 4145e8 <flatcc_builder_padding_base@@Base+0x2278>
  411410:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411415:	vdivsd xmm0,xmm1,xmm0
  411419:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41141e:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411423:	vmovsd xmm0,QWORD PTR [rip+0x31c5]        # 4145f0 <flatcc_builder_padding_base@@Base+0x2280>
  41142b:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411430:	vdivsd xmm0,xmm1,xmm0
  411434:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411439:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  41143e:	vmovsd xmm0,QWORD PTR [rip+0x31b2]        # 4145f8 <flatcc_builder_padding_base@@Base+0x2288>
  411446:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  41144b:	vdivsd xmm0,xmm1,xmm0
  41144f:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411454:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411459:	vmovsd xmm0,QWORD PTR [rip+0x319f]        # 414600 <flatcc_builder_padding_base@@Base+0x2290>
  411461:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411466:	vdivsd xmm0,xmm1,xmm0
  41146a:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41146f:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411474:	vmovsd xmm0,QWORD PTR [rip+0x318c]        # 414608 <flatcc_builder_padding_base@@Base+0x2298>
  41147c:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411481:	vdivsd xmm0,xmm1,xmm0
  411485:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41148a:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  41148f:	vmovsd xmm0,QWORD PTR [rip+0x3179]        # 414610 <flatcc_builder_padding_base@@Base+0x22a0>
  411497:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  41149c:	vdivsd xmm0,xmm1,xmm0
  4114a0:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4114a5:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4114aa:	vmovsd xmm0,QWORD PTR [rip+0x3166]        # 414618 <flatcc_builder_padding_base@@Base+0x22a8>
  4114b2:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4114b7:	vdivsd xmm0,xmm1,xmm0
  4114bb:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4114c0:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4114c5:	vmovsd xmm0,QWORD PTR [rip+0x3153]        # 414620 <flatcc_builder_padding_base@@Base+0x22b0>
  4114cd:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4114d2:	vdivsd xmm0,xmm1,xmm0
  4114d6:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4114db:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4114e0:	vmovsd xmm0,QWORD PTR [rip+0x3140]        # 414628 <flatcc_builder_padding_base@@Base+0x22b8>
  4114e8:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4114ed:	vdivsd xmm0,xmm1,xmm0
  4114f1:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4114f6:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4114fb:	vmovsd xmm0,QWORD PTR [rip+0x312d]        # 414630 <flatcc_builder_padding_base@@Base+0x22c0>
  411503:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411508:	vdivsd xmm0,xmm1,xmm0
  41150c:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411511:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411516:	vmovsd xmm0,QWORD PTR [rip+0x311a]        # 414638 <flatcc_builder_padding_base@@Base+0x22c8>
  41151e:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411523:	vdivsd xmm0,xmm1,xmm0
  411527:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41152c:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411531:	vmovsd xmm0,QWORD PTR [rip+0x3107]        # 414640 <flatcc_builder_padding_base@@Base+0x22d0>
  411539:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  41153e:	vdivsd xmm0,xmm1,xmm0
  411542:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411547:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  41154c:	vmovsd xmm0,QWORD PTR [rip+0x30f4]        # 414648 <flatcc_builder_padding_base@@Base+0x22d8>
  411554:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411559:	vdivsd xmm0,xmm1,xmm0
  41155d:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411562:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411567:	vmovsd xmm0,QWORD PTR [rip+0x30e1]        # 414650 <flatcc_builder_padding_base@@Base+0x22e0>
  41156f:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411574:	vdivsd xmm0,xmm1,xmm0
  411578:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41157d:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411582:	vmovsd xmm0,QWORD PTR [rip+0x30ce]        # 414658 <flatcc_builder_padding_base@@Base+0x22e8>
  41158a:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  41158f:	vdivsd xmm0,xmm1,xmm0
  411593:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411598:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  41159d:	vmovsd xmm0,QWORD PTR [rip+0x30bb]        # 414660 <flatcc_builder_padding_base@@Base+0x22f0>
  4115a5:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4115aa:	vdivsd xmm0,xmm1,xmm0
  4115ae:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4115b3:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4115b8:	vmovsd xmm0,QWORD PTR [rip+0x30a8]        # 414668 <flatcc_builder_padding_base@@Base+0x22f8>
  4115c0:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4115c5:	vdivsd xmm0,xmm1,xmm0
  4115c9:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4115ce:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4115d3:	vmovsd xmm0,QWORD PTR [rip+0x3095]        # 414670 <flatcc_builder_padding_base@@Base+0x2300>
  4115db:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4115e0:	vdivsd xmm0,xmm1,xmm0
  4115e4:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4115e9:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4115ee:	vmovsd xmm0,QWORD PTR [rip+0x3082]        # 414678 <flatcc_builder_padding_base@@Base+0x2308>
  4115f6:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  4115fb:	vdivsd xmm0,xmm1,xmm0
  4115ff:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411604:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411609:	vmovsd xmm0,QWORD PTR [rip+0x306f]        # 414680 <flatcc_builder_padding_base@@Base+0x2310>
  411611:	vmovsd xmm1,QWORD PTR [rbp-0x48]
  411616:	vdivsd xmm0,xmm1,xmm0
  41161a:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41161f:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411624:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411629:	vmovsd xmm0,QWORD PTR [rip+0x304f]        # 414680 <flatcc_builder_padding_base@@Base+0x2310>
  411631:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411636:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41163b:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411640:	vmovsd xmm0,QWORD PTR [rip+0x3030]        # 414678 <flatcc_builder_padding_base@@Base+0x2308>
  411648:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  41164d:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411652:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411657:	vmovsd xmm0,QWORD PTR [rip+0x3011]        # 414670 <flatcc_builder_padding_base@@Base+0x2300>
  41165f:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411664:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411669:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  41166e:	vmovsd xmm0,QWORD PTR [rip+0x2ff2]        # 414668 <flatcc_builder_padding_base@@Base+0x22f8>
  411676:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  41167b:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411680:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411685:	vmovsd xmm0,QWORD PTR [rip+0x2fd3]        # 414660 <flatcc_builder_padding_base@@Base+0x22f0>
  41168d:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411692:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411697:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  41169c:	vmovsd xmm0,QWORD PTR [rip+0x2fb4]        # 414658 <flatcc_builder_padding_base@@Base+0x22e8>
  4116a4:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4116a9:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4116ae:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4116b3:	vmovsd xmm0,QWORD PTR [rip+0x2f95]        # 414650 <flatcc_builder_padding_base@@Base+0x22e0>
  4116bb:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4116c0:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4116c5:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4116ca:	vmovsd xmm0,QWORD PTR [rip+0x2f76]        # 414648 <flatcc_builder_padding_base@@Base+0x22d8>
  4116d2:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4116d7:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4116dc:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4116e1:	vmovsd xmm0,QWORD PTR [rip+0x2f57]        # 414640 <flatcc_builder_padding_base@@Base+0x22d0>
  4116e9:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4116ee:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4116f3:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4116f8:	vmovsd xmm0,QWORD PTR [rip+0x2f38]        # 414638 <flatcc_builder_padding_base@@Base+0x22c8>
  411700:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411705:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41170a:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  41170f:	vmovsd xmm0,QWORD PTR [rip+0x2f19]        # 414630 <flatcc_builder_padding_base@@Base+0x22c0>
  411717:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  41171c:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411721:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411726:	vmovsd xmm0,QWORD PTR [rip+0x2efa]        # 414628 <flatcc_builder_padding_base@@Base+0x22b8>
  41172e:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411733:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411738:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  41173d:	vmovsd xmm0,QWORD PTR [rip+0x2edb]        # 414620 <flatcc_builder_padding_base@@Base+0x22b0>
  411745:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  41174a:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41174f:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411754:	vmovsd xmm0,QWORD PTR [rip+0x2ebc]        # 414618 <flatcc_builder_padding_base@@Base+0x22a8>
  41175c:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411761:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411766:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  41176b:	vmovsd xmm0,QWORD PTR [rip+0x2e9d]        # 414610 <flatcc_builder_padding_base@@Base+0x22a0>
  411773:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411778:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41177d:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411782:	vmovsd xmm0,QWORD PTR [rip+0x2e7e]        # 414608 <flatcc_builder_padding_base@@Base+0x2298>
  41178a:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  41178f:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411794:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  411799:	vmovsd xmm0,QWORD PTR [rip+0x2e5f]        # 414600 <flatcc_builder_padding_base@@Base+0x2290>
  4117a1:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4117a6:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4117ab:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4117b0:	vmovsd xmm0,QWORD PTR [rip+0x2e40]        # 4145f8 <flatcc_builder_padding_base@@Base+0x2288>
  4117b8:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4117bd:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4117c2:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4117c7:	vmovsd xmm0,QWORD PTR [rip+0x2e21]        # 4145f0 <flatcc_builder_padding_base@@Base+0x2280>
  4117cf:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4117d4:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4117d9:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4117de:	vmovsd xmm0,QWORD PTR [rip+0x2e02]        # 4145e8 <flatcc_builder_padding_base@@Base+0x2278>
  4117e6:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  4117eb:	vmovsd QWORD PTR [rbp-0x48],xmm0
  4117f0:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  4117f5:	vmovsd xmm0,QWORD PTR [rip+0x2de3]        # 4145e0 <flatcc_builder_padding_base@@Base+0x2270>
  4117fd:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411802:	vmovsd QWORD PTR [rbp-0x48],xmm0
  411807:	jmp    41181e <flatcc_json_parser_struct_as_root@@Base+0xf5e>
  41180c:	vmovsd xmm0,QWORD PTR [rip+0x2dc4]        # 4145d8 <flatcc_builder_padding_base@@Base+0x2268>
  411814:	vmulsd xmm0,xmm0,QWORD PTR [rbp-0x48]
  411819:	vmovsd QWORD PTR [rbp-0x48],xmm0
  41181e:	vmovsd xmm0,QWORD PTR [rbp-0x48]
  411823:	mov    rax,QWORD PTR [rbp+0x18]
  411827:	vmovsd QWORD PTR [rax],xmm0
  41182b:	jmp    411891 <flatcc_json_parser_struct_as_root@@Base+0xfd1>
  411830:	mov    rdi,QWORD PTR [rbp-0x28]
  411834:	mov    esi,DWORD PTR [rbp-0x2c]
  411837:	mov    edx,DWORD PTR [rbp-0x30]
  41183a:	mov    ecx,DWORD PTR [rbp+0x10]
  41183d:	mov    r8,QWORD PTR [rbp+0x18]
  411841:	call   40b9c0 <grisu3_diy_fp_encode_double@@Base>
  411846:	cmp    eax,0x0
  411849:	je     411854 <flatcc_json_parser_struct_as_root@@Base+0xf94>
  41184f:	jmp    411891 <flatcc_json_parser_struct_as_root@@Base+0xfd1>
  411854:	mov    rdi,QWORD PTR [rbp-0x10]
  411858:	lea    rsi,[rbp-0x40]
  41185c:	call   403040 <strtod@plt>
  411861:	mov    rsi,QWORD PTR [rbp+0x18]
  411865:	vmovsd QWORD PTR [rsi],xmm0
  411869:	mov    rsi,QWORD PTR [rbp-0x40]
  41186d:	cmp    rsi,QWORD PTR [rbp-0x18]
  411871:	jae    411884 <flatcc_json_parser_struct_as_root@@Base+0xfc4>
  411877:	mov    rax,QWORD PTR [rbp-0x40]
  41187b:	mov    QWORD PTR [rbp-0x8],rax
  41187f:	jmp    4118ca <flatcc_json_parser_struct_as_root@@Base+0x100a>
  411884:	mov    rax,QWORD PTR [rbp-0x18]
  411888:	mov    QWORD PTR [rbp-0x8],rax
  41188c:	jmp    4118ca <flatcc_json_parser_struct_as_root@@Base+0x100a>
  411891:	cmp    DWORD PTR [rbp-0x1c],0x0
  411895:	je     4118c2 <flatcc_json_parser_struct_as_root@@Base+0x1002>
  41189b:	mov    rax,QWORD PTR [rbp+0x18]
  41189f:	vmovsd xmm0,QWORD PTR [rax]
  4118a3:	vmovq  rax,xmm0
  4118a8:	movabs rcx,0x8000000000000000
  4118b2:	xor    rax,rcx
  4118b5:	vmovq  xmm0,rax
  4118ba:	mov    rax,QWORD PTR [rbp+0x18]
  4118be:	vmovsd QWORD PTR [rax],xmm0
  4118c2:	mov    rax,QWORD PTR [rbp-0x18]
  4118c6:	mov    QWORD PTR [rbp-0x8],rax
  4118ca:	mov    rax,QWORD PTR [rbp-0x8]
  4118ce:	add    rsp,0x70
  4118d2:	pop    rbp
  4118d3:	ret    
  4118d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4118de:	xchg   ax,ax
  4118e0:	push   rbp
  4118e1:	mov    rbp,rsp
  4118e4:	sub    rsp,0x40
  4118e8:	mov    QWORD PTR [rbp-0x10],rdi
  4118ec:	mov    QWORD PTR [rbp-0x18],rsi
  4118f0:	mov    QWORD PTR [rbp-0x20],rdx
  4118f4:	mov    DWORD PTR [rbp-0x24],ecx
  4118f7:	mov    QWORD PTR [rbp-0x30],r8
  4118fb:	mov    QWORD PTR [rbp-0x38],r9
  4118ff:	cmp    DWORD PTR [rbp-0x24],0x0
  411903:	je     411928 <flatcc_json_parser_struct_as_root@@Base+0x1068>
  411909:	mov    rdi,QWORD PTR [rbp-0x10]
  41190d:	mov    rsi,QWORD PTR [rbp-0x18]
  411911:	mov    rdx,QWORD PTR [rbp-0x20]
  411915:	mov    ecx,0x8
  41191a:	call   40c510 <flatcc_json_parser_set_error@@Base>
  41191f:	mov    QWORD PTR [rbp-0x8],rax
  411923:	jmp    411969 <flatcc_json_parser_struct_as_root@@Base+0x10a9>
  411928:	cmp    QWORD PTR [rbp-0x30],0xff
  411930:	jbe    411955 <flatcc_json_parser_struct_as_root@@Base+0x1095>
  411936:	mov    rdi,QWORD PTR [rbp-0x10]
  41193a:	mov    rsi,QWORD PTR [rbp-0x18]
  41193e:	mov    rdx,QWORD PTR [rbp-0x20]
  411942:	mov    ecx,0x7
  411947:	call   40c510 <flatcc_json_parser_set_error@@Base>
  41194c:	mov    QWORD PTR [rbp-0x8],rax
  411950:	jmp    411969 <flatcc_json_parser_struct_as_root@@Base+0x10a9>
  411955:	mov    rax,QWORD PTR [rbp-0x30]
  411959:	mov    cl,al
  41195b:	mov    rax,QWORD PTR [rbp-0x38]
  41195f:	mov    BYTE PTR [rax],cl
  411961:	mov    rax,QWORD PTR [rbp-0x18]
  411965:	mov    QWORD PTR [rbp-0x8],rax
  411969:	mov    rax,QWORD PTR [rbp-0x8]
  41196d:	add    rsp,0x40
  411971:	pop    rbp
  411972:	ret    
  411973:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41197d:	nop    DWORD PTR [rax]
  411980:	push   rbp
  411981:	mov    rbp,rsp
  411984:	sub    rsp,0x20
  411988:	mov    QWORD PTR [rbp-0x8],rdi
  41198c:	mov    QWORD PTR [rbp-0x10],rsi
  411990:	mov    QWORD PTR [rbp-0x18],rdx
  411994:	mov    rdi,QWORD PTR [rbp-0x8]
  411998:	mov    rsi,QWORD PTR [rbp-0x10]
  41199c:	mov    rdx,QWORD PTR [rbp-0x18]
  4119a0:	call   40e190 <flatcc_json_parser_float@@Base+0x2b0>
  4119a5:	mov    QWORD PTR [rbp-0x10],rax
  4119a9:	mov    rax,QWORD PTR [rbp-0x8]
  4119ad:	cmp    DWORD PTR [rax+0x14],0x0
  4119b1:	jne    4119cc <flatcc_json_parser_struct_as_root@@Base+0x110c>
  4119b7:	mov    rdi,QWORD PTR [rbp-0x8]
  4119bb:	mov    rsi,QWORD PTR [rbp-0x10]
  4119bf:	mov    rdx,QWORD PTR [rbp-0x18]
  4119c3:	call   40d140 <flatcc_json_parser_skip_constant@@Base+0x110>
  4119c8:	mov    QWORD PTR [rbp-0x10],rax
  4119cc:	mov    rax,QWORD PTR [rbp-0x10]
  4119d0:	add    rsp,0x20
  4119d4:	pop    rbp
  4119d5:	ret    
  4119d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4119e0:	push   rbp
  4119e1:	mov    rbp,rsp
  4119e4:	mov    al,dil
  4119e7:	mov    BYTE PTR [rbp-0x1],al
  4119ea:	movzx  eax,BYTE PTR [rbp-0x1]
  4119ee:	pop    rbp
  4119ef:	ret    

00000000004119f0 <__libc_csu_init@@Base>:
  4119f0:	endbr64 
  4119f4:	push   r15
  4119f6:	lea    r15,[rip+0x73fb]        # 418df8 <flatcc_builder_padding_base@@Base+0x6a88>
  4119fd:	push   r14
  4119ff:	mov    r14,rdx
  411a02:	push   r13
  411a04:	mov    r13,rsi
  411a07:	push   r12
  411a09:	mov    r12d,edi
  411a0c:	push   rbp
  411a0d:	lea    rbp,[rip+0x73ec]        # 418e00 <flatcc_builder_padding_base@@Base+0x6a90>
  411a14:	push   rbx
  411a15:	sub    rbp,r15
  411a18:	sub    rsp,0x8
  411a1c:	call   403000 <free@plt-0x30>
  411a21:	sar    rbp,0x3
  411a25:	je     411a46 <__libc_csu_init@@Base+0x56>
  411a27:	xor    ebx,ebx
  411a29:	nop    DWORD PTR [rax+0x0]
  411a30:	mov    rdx,r14
  411a33:	mov    rsi,r13
  411a36:	mov    edi,r12d
  411a39:	call   QWORD PTR [r15+rbx*8]
  411a3d:	add    rbx,0x1
  411a41:	cmp    rbp,rbx
  411a44:	jne    411a30 <__libc_csu_init@@Base+0x40>
  411a46:	add    rsp,0x8
  411a4a:	pop    rbx
  411a4b:	pop    rbp
  411a4c:	pop    r12
  411a4e:	pop    r13
  411a50:	pop    r14
  411a52:	pop    r15
  411a54:	ret    
  411a55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000411a60 <__libc_csu_fini@@Base>:
  411a60:	endbr64 
  411a64:	ret    

Disassembly of section .fini:

0000000000411a68 <.fini>:
  411a68:	endbr64 
  411a6c:	sub    rsp,0x8
  411a70:	add    rsp,0x8
  411a74:	ret    
