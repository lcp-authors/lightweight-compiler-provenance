
../repos/prog2/1.2:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <fclose@plt-0x7a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <fclose@plt-0x70>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <fclose@plt-0x70>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <fclose@plt-0x70>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <fclose@plt-0x70>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <fclose@plt-0x70>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <fclose@plt-0x70>
  40108f:	nop

Disassembly of section .plt.sec:

0000000000401090 <fclose@plt>:
  401090:	endbr64 
  401094:	bnd jmp QWORD PTR [rip+0x2f7d]        # 404018 <fclose@GLIBC_2.2.5>
  40109b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010a0 <__stack_chk_fail@plt>:
  4010a0:	endbr64 
  4010a4:	bnd jmp QWORD PTR [rip+0x2f75]        # 404020 <__stack_chk_fail@GLIBC_2.4>
  4010ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010b0 <printf@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f6d]        # 404028 <printf@GLIBC_2.2.5>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <fseek@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f65]        # 404030 <fseek@GLIBC_2.2.5>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010d0 <fopen@plt>:
  4010d0:	endbr64 
  4010d4:	bnd jmp QWORD PTR [rip+0x2f5d]        # 404038 <fopen@GLIBC_2.2.5>
  4010db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010e0 <getc@plt>:
  4010e0:	endbr64 
  4010e4:	bnd jmp QWORD PTR [rip+0x2f55]        # 404040 <getc@GLIBC_2.2.5>
  4010eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004010f0 <_start@@Base>:
  4010f0:	endbr64 
  4010f4:	xor    ebp,ebp
  4010f6:	mov    r9,rdx
  4010f9:	pop    rsi
  4010fa:	mov    rdx,rsp
  4010fd:	and    rsp,0xfffffffffffffff0
  401101:	push   rax
  401102:	push   rsp
  401103:	mov    r8,0x401df0
  40110a:	mov    rcx,0x401d80
  401111:	mov    rdi,0x4011d6
  401118:	call   QWORD PTR [rip+0x2ed2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40111e:	hlt    
  40111f:	nop
  401120:	endbr64 
  401124:	ret    
  401125:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40112f:	nop
  401130:	mov    eax,0x404058
  401135:	cmp    rax,0x404058
  40113b:	je     401150 <_start@@Base+0x60>
  40113d:	mov    eax,0x0
  401142:	test   rax,rax
  401145:	je     401150 <_start@@Base+0x60>
  401147:	mov    edi,0x404058
  40114c:	jmp    rax
  40114e:	xchg   ax,ax
  401150:	ret    
  401151:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40115c:	nop    DWORD PTR [rax+0x0]
  401160:	mov    esi,0x404058
  401165:	sub    rsi,0x404058
  40116c:	sar    rsi,0x3
  401170:	mov    rax,rsi
  401173:	shr    rax,0x3f
  401177:	add    rsi,rax
  40117a:	sar    rsi,1
  40117d:	je     401190 <_start@@Base+0xa0>
  40117f:	mov    eax,0x0
  401184:	test   rax,rax
  401187:	je     401190 <_start@@Base+0xa0>
  401189:	mov    edi,0x404058
  40118e:	jmp    rax
  401190:	ret    
  401191:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40119c:	nop    DWORD PTR [rax+0x0]
  4011a0:	endbr64 
  4011a4:	cmp    BYTE PTR [rip+0x2ead],0x0        # 404058 <__bss_start@@Base>
  4011ab:	jne    4011c0 <_start@@Base+0xd0>
  4011ad:	push   rbp
  4011ae:	mov    rbp,rsp
  4011b1:	call   401130 <_start@@Base+0x40>
  4011b6:	mov    BYTE PTR [rip+0x2e9b],0x1        # 404058 <__bss_start@@Base>
  4011bd:	pop    rbp
  4011be:	ret    
  4011bf:	nop
  4011c0:	ret    
  4011c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011cc:	nop    DWORD PTR [rax+0x0]
  4011d0:	endbr64 
  4011d4:	jmp    401160 <_start@@Base+0x70>

00000000004011d6 <main@@Base>:
  4011d6:	endbr64 
  4011da:	push   rbp
  4011db:	mov    rbp,rsp
  4011de:	sub    rsp,0xa10
  4011e5:	mov    rax,QWORD PTR fs:0x28
  4011ee:	mov    QWORD PTR [rbp-0x8],rax
  4011f2:	xor    eax,eax
  4011f4:	lea    rsi,[rip+0xe09]        # 402004 <_IO_stdin_used@@Base+0x4>
  4011fb:	lea    rdi,[rip+0xe04]        # 402006 <_IO_stdin_used@@Base+0x6>
  401202:	call   4010d0 <fopen@plt>
  401207:	mov    QWORD PTR [rbp-0xa08],rax
  40120e:	mov    rax,QWORD PTR [rbp-0xa08]
  401215:	mov    edx,0x2
  40121a:	mov    rsi,0xffffffffffffff83
  401221:	mov    rdi,rax
  401224:	call   4010c0 <fseek@plt>
  401229:	mov    DWORD PTR [rbp-0xa0c],0x0
  401233:	mov    DWORD PTR [rbp-0xa0c],0x0
  40123d:	jmp    401265 <main@@Base+0x8f>
  40123f:	mov    rax,QWORD PTR [rbp-0xa08]
  401246:	mov    rdi,rax
  401249:	call   4010e0 <getc@plt>
  40124e:	mov    edx,eax
  401250:	mov    eax,DWORD PTR [rbp-0xa0c]
  401256:	cdqe   
  401258:	mov    BYTE PTR [rbp+rax*1-0x90],dl
  40125f:	inc    DWORD PTR [rbp-0xa0c]
  401265:	cmp    DWORD PTR [rbp-0xa0c],0x1d
  40126c:	jle    40123f <main@@Base+0x69>
  40126e:	mov    BYTE PTR [rbp-0x72],0x0
  401272:	mov    DWORD PTR [rbp-0xa0c],0x0
  40127c:	jmp    4012a1 <main@@Base+0xcb>
  40127e:	mov    rax,QWORD PTR [rbp-0xa08]
  401285:	mov    rdi,rax
  401288:	call   4010e0 <getc@plt>
  40128d:	mov    edx,eax
  40128f:	mov    eax,DWORD PTR [rbp-0xa0c]
  401295:	cdqe   
  401297:	mov    BYTE PTR [rbp+rax*1-0x70],dl
  40129b:	inc    DWORD PTR [rbp-0xa0c]
  4012a1:	cmp    DWORD PTR [rbp-0xa0c],0x1d
  4012a8:	jle    40127e <main@@Base+0xa8>
  4012aa:	mov    BYTE PTR [rbp-0x52],0x0
  4012ae:	mov    DWORD PTR [rbp-0xa0c],0x0
  4012b8:	jmp    4012dd <main@@Base+0x107>
  4012ba:	mov    rax,QWORD PTR [rbp-0xa08]
  4012c1:	mov    rdi,rax
  4012c4:	call   4010e0 <getc@plt>
  4012c9:	mov    edx,eax
  4012cb:	mov    eax,DWORD PTR [rbp-0xa0c]
  4012d1:	cdqe   
  4012d3:	mov    BYTE PTR [rbp+rax*1-0x50],dl
  4012d7:	inc    DWORD PTR [rbp-0xa0c]
  4012dd:	cmp    DWORD PTR [rbp-0xa0c],0x1d
  4012e4:	jle    4012ba <main@@Base+0xe4>
  4012e6:	mov    BYTE PTR [rbp-0x32],0x0
  4012ea:	mov    DWORD PTR [rbp-0xa0c],0x0
  4012f4:	jmp    40131c <main@@Base+0x146>
  4012f6:	mov    rax,QWORD PTR [rbp-0xa08]
  4012fd:	mov    rdi,rax
  401300:	call   4010e0 <getc@plt>
  401305:	mov    edx,eax
  401307:	mov    eax,DWORD PTR [rbp-0xa0c]
  40130d:	cdqe   
  40130f:	mov    BYTE PTR [rbp+rax*1-0x95],dl
  401316:	inc    DWORD PTR [rbp-0xa0c]
  40131c:	cmp    DWORD PTR [rbp-0xa0c],0x3
  401323:	jle    4012f6 <main@@Base+0x120>
  401325:	mov    BYTE PTR [rbp-0x91],0x0
  40132c:	mov    DWORD PTR [rbp-0xa0c],0x0
  401336:	jmp    40135b <main@@Base+0x185>
  401338:	mov    rax,QWORD PTR [rbp-0xa08]
  40133f:	mov    rdi,rax
  401342:	call   4010e0 <getc@plt>
  401347:	mov    edx,eax
  401349:	mov    eax,DWORD PTR [rbp-0xa0c]
  40134f:	cdqe   
  401351:	mov    BYTE PTR [rbp+rax*1-0x30],dl
  401355:	inc    DWORD PTR [rbp-0xa0c]
  40135b:	cmp    DWORD PTR [rbp-0xa0c],0x1b
  401362:	jle    401338 <main@@Base+0x162>
  401364:	mov    rax,QWORD PTR [rbp-0xa08]
  40136b:	mov    rdi,rax
  40136e:	call   4010e0 <getc@plt>
  401373:	mov    rax,QWORD PTR [rbp-0xa08]
  40137a:	mov    rdi,rax
  40137d:	call   4010e0 <getc@plt>
  401382:	mov    BYTE PTR [rbp-0xa0e],al
  401388:	mov    rax,QWORD PTR [rbp-0xa08]
  40138f:	mov    rdi,rax
  401392:	call   4010e0 <getc@plt>
  401397:	mov    BYTE PTR [rbp-0xa0d],al
  40139d:	lea    rax,[rbp-0xa00]
  4013a4:	mov    DWORD PTR [rax],0x65756c42
  4013aa:	mov    WORD PTR [rax+0x4],0x73
  4013b0:	lea    rax,[rbp-0xa00]
  4013b7:	add    rax,0x1e
  4013bb:	movabs rcx,0x2063697373616c43
  4013c5:	mov    QWORD PTR [rax],rcx
  4013c8:	mov    DWORD PTR [rax+0x8],0x6b636f52
  4013cf:	mov    BYTE PTR [rax+0xc],0x0
  4013d3:	lea    rax,[rbp-0xa00]
  4013da:	add    rax,0x3c
  4013de:	movabs rcx,0x7972746e756f43
  4013e8:	mov    QWORD PTR [rax],rcx
  4013eb:	lea    rax,[rbp-0xa00]
  4013f2:	add    rax,0x5a
  4013f6:	mov    DWORD PTR [rax],0x636e6144
  4013fc:	mov    WORD PTR [rax+0x4],0x65
  401402:	lea    rax,[rbp-0xa00]
  401409:	add    rax,0x78
  40140d:	mov    DWORD PTR [rax],0x63736944
  401413:	mov    WORD PTR [rax+0x4],0x6f
  401419:	lea    rax,[rbp-0xa00]
  401420:	add    rax,0x96
  401426:	mov    DWORD PTR [rax],0x6b6e7546
  40142c:	mov    BYTE PTR [rax+0x4],0x0
  401430:	lea    rax,[rbp-0xa00]
  401437:	add    rax,0xb4
  40143d:	mov    DWORD PTR [rax],0x6e757247
  401443:	mov    WORD PTR [rax+0x4],0x6567
  401449:	mov    BYTE PTR [rax+0x6],0x0
  40144d:	lea    rax,[rbp-0xa00]
  401454:	add    rax,0xd2
  40145a:	movabs rcx,0x706f482d706948
  401464:	mov    QWORD PTR [rax],rcx
  401467:	lea    rax,[rbp-0xa00]
  40146e:	add    rax,0xf0
  401474:	mov    DWORD PTR [rax],0x7a7a614a
  40147a:	mov    BYTE PTR [rax+0x4],0x0
  40147e:	lea    rax,[rbp-0xa00]
  401485:	add    rax,0x10e
  40148b:	mov    DWORD PTR [rax],0x6174654d
  401491:	mov    WORD PTR [rax+0x4],0x6c
  401497:	lea    rax,[rbp-0xa00]
  40149e:	add    rax,0x12c
  4014a4:	movabs rcx,0x6567412077654e
  4014ae:	mov    QWORD PTR [rax],rcx
  4014b1:	lea    rax,[rbp-0xa00]
  4014b8:	add    rax,0x14a
  4014be:	mov    DWORD PTR [rax],0x69646c4f
  4014c4:	mov    WORD PTR [rax+0x4],0x7365
  4014ca:	mov    BYTE PTR [rax+0x6],0x0
  4014ce:	lea    rax,[rbp-0xa00]
  4014d5:	add    rax,0x168
  4014db:	mov    DWORD PTR [rax],0x6568744f
  4014e1:	mov    WORD PTR [rax+0x4],0x72
  4014e7:	lea    rax,[rbp-0xa00]
  4014ee:	add    rax,0x186
  4014f4:	mov    DWORD PTR [rax],0x706f50
  4014fa:	lea    rax,[rbp-0xa00]
  401501:	add    rax,0x1a4
  401507:	mov    DWORD PTR [rax],0x422652
  40150d:	lea    rax,[rbp-0xa00]
  401514:	add    rax,0x1c2
  40151a:	mov    DWORD PTR [rax],0x706152
  401520:	lea    rax,[rbp-0xa00]
  401527:	add    rax,0x1e0
  40152d:	mov    DWORD PTR [rax],0x67676552
  401533:	mov    WORD PTR [rax+0x4],0x6561
  401539:	mov    BYTE PTR [rax+0x6],0x0
  40153d:	lea    rax,[rbp-0xa00]
  401544:	add    rax,0x1fe
  40154a:	mov    DWORD PTR [rax],0x6b636f52
  401550:	mov    BYTE PTR [rax+0x4],0x0
  401554:	lea    rax,[rbp-0xa00]
  40155b:	add    rax,0x21c
  401561:	mov    DWORD PTR [rax],0x68636554
  401567:	mov    WORD PTR [rax+0x4],0x6f6e
  40156d:	mov    BYTE PTR [rax+0x6],0x0
  401571:	lea    rax,[rbp-0xa00]
  401578:	add    rax,0x23a
  40157e:	movabs rcx,0x6972747375646e49
  401588:	mov    QWORD PTR [rax],rcx
  40158b:	mov    WORD PTR [rax+0x8],0x6c61
  401591:	mov    BYTE PTR [rax+0xa],0x0
  401595:	lea    rax,[rbp-0xa00]
  40159c:	add    rax,0x258
  4015a2:	movabs rcx,0x74616e7265746c41
  4015ac:	mov    QWORD PTR [rax],rcx
  4015af:	mov    DWORD PTR [rax+0x8],0x657669
  4015b6:	lea    rax,[rbp-0xa00]
  4015bd:	add    rax,0x276
  4015c3:	mov    DWORD PTR [rax],0x616b53
  4015c9:	lea    rax,[rbp-0xa00]
  4015d0:	add    rax,0x294
  4015d6:	movabs rcx,0x654d206874616544
  4015e0:	mov    QWORD PTR [rax],rcx
  4015e3:	mov    DWORD PTR [rax+0x8],0x6c6174
  4015ea:	lea    rax,[rbp-0xa00]
  4015f1:	add    rax,0x2b2
  4015f7:	mov    DWORD PTR [rax],0x6e617250
  4015fd:	mov    WORD PTR [rax+0x4],0x736b
  401603:	mov    BYTE PTR [rax+0x6],0x0
  401607:	lea    rax,[rbp-0xa00]
  40160e:	add    rax,0x2d0
  401614:	movabs rsi,0x617274646e756f53
  40161e:	mov    QWORD PTR [rax],rsi
  401621:	mov    WORD PTR [rax+0x8],0x6b63
  401627:	mov    BYTE PTR [rax+0xa],0x0
  40162b:	lea    rax,[rbp-0xa00]
  401632:	add    rax,0x2ee
  401638:	movabs rdx,0x6365542d6f727545
  401642:	mov    QWORD PTR [rax],rdx
  401645:	mov    DWORD PTR [rax+0x8],0x6f6e68
  40164c:	lea    rax,[rbp-0xa00]
  401653:	add    rax,0x30c
  401659:	movabs rcx,0x746e6569626d41
  401663:	mov    QWORD PTR [rax],rcx
  401666:	lea    rax,[rbp-0xa00]
  40166d:	add    rax,0x32a
  401673:	movabs rsi,0x706f482d70697254
  40167d:	mov    QWORD PTR [rax],rsi
  401680:	mov    BYTE PTR [rax+0x8],0x0
  401684:	lea    rax,[rbp-0xa00]
  40168b:	add    rax,0x348
  401691:	mov    DWORD PTR [rax],0x61636f56
  401697:	mov    WORD PTR [rax+0x4],0x6c
  40169d:	lea    rax,[rbp-0xa00]
  4016a4:	add    rax,0x366
  4016aa:	movabs rdx,0x6e75462b7a7a614a
  4016b4:	mov    QWORD PTR [rax],rdx
  4016b7:	mov    WORD PTR [rax+0x8],0x6b
  4016bd:	lea    rax,[rbp-0xa00]
  4016c4:	add    rax,0x384
  4016ca:	mov    DWORD PTR [rax],0x69737546
  4016d0:	mov    WORD PTR [rax+0x4],0x6e6f
  4016d6:	mov    BYTE PTR [rax+0x6],0x0
  4016da:	lea    rax,[rbp-0xa00]
  4016e1:	add    rax,0x3a2
  4016e7:	mov    DWORD PTR [rax],0x6e617254
  4016ed:	mov    WORD PTR [rax+0x4],0x6563
  4016f3:	mov    BYTE PTR [rax+0x6],0x0
  4016f7:	lea    rax,[rbp-0xa00]
  4016fe:	add    rax,0x3c0
  401704:	movabs rcx,0x6163697373616c43
  40170e:	mov    QWORD PTR [rax],rcx
  401711:	mov    WORD PTR [rax+0x8],0x6c
  401717:	lea    rax,[rbp-0xa00]
  40171e:	add    rax,0x3de
  401724:	movabs rsi,0x656d757274736e49
  40172e:	mov    QWORD PTR [rax],rsi
  401731:	mov    DWORD PTR [rax+0x8],0x6c61746e
  401738:	mov    BYTE PTR [rax+0xc],0x0
  40173c:	lea    rax,[rbp-0xa00]
  401743:	add    rax,0x3fc
  401749:	mov    DWORD PTR [rax],0x64696341
  40174f:	mov    BYTE PTR [rax+0x4],0x0
  401753:	lea    rax,[rbp-0xa00]
  40175a:	add    rax,0x41a
  401760:	mov    DWORD PTR [rax],0x73756f48
  401766:	mov    WORD PTR [rax+0x4],0x65
  40176c:	lea    rax,[rbp-0xa00]
  401773:	add    rax,0x438
  401779:	mov    DWORD PTR [rax],0x656d6147
  40177f:	mov    BYTE PTR [rax+0x4],0x0
  401783:	lea    rax,[rbp-0xa00]
  40178a:	add    rax,0x456
  401790:	movabs rdx,0x6c4320646e756f53
  40179a:	mov    QWORD PTR [rax],rdx
  40179d:	mov    WORD PTR [rax+0x8],0x7069
  4017a3:	mov    BYTE PTR [rax+0xa],0x0
  4017a7:	lea    rax,[rbp-0xa00]
  4017ae:	add    rax,0x474
  4017b4:	mov    DWORD PTR [rax],0x70736f47
  4017ba:	mov    WORD PTR [rax+0x4],0x6c65
  4017c0:	mov    BYTE PTR [rax+0x6],0x0
  4017c4:	lea    rax,[rbp-0xa00]
  4017cb:	add    rax,0x492
  4017d1:	mov    DWORD PTR [rax],0x73696f4e
  4017d7:	mov    WORD PTR [rax+0x4],0x65
  4017dd:	lea    rax,[rbp-0xa00]
  4017e4:	add    rax,0x4b0
  4017ea:	movabs rcx,0x6f526e7265746c41
  4017f4:	mov    QWORD PTR [rax],rcx
  4017f7:	mov    WORD PTR [rax+0x8],0x6b63
  4017fd:	mov    BYTE PTR [rax+0xa],0x0
  401801:	lea    rax,[rbp-0xa00]
  401808:	add    rax,0x4ce
  40180e:	mov    DWORD PTR [rax],0x73736142
  401814:	mov    BYTE PTR [rax+0x4],0x0
  401818:	lea    rax,[rbp-0xa00]
  40181f:	add    rax,0x4ec
  401825:	mov    DWORD PTR [rax],0x6c756f53
  40182b:	mov    BYTE PTR [rax+0x4],0x0
  40182f:	lea    rax,[rbp-0xa00]
  401836:	add    rax,0x50a
  40183c:	mov    DWORD PTR [rax],0x6b6e7550
  401842:	mov    BYTE PTR [rax+0x4],0x0
  401846:	lea    rax,[rbp-0xa00]
  40184d:	add    rax,0x528
  401853:	mov    DWORD PTR [rax],0x63617053
  401859:	mov    WORD PTR [rax+0x4],0x65
  40185f:	lea    rax,[rbp-0xa00]
  401866:	add    rax,0x546
  40186c:	movabs rsi,0x697461746964654d
  401876:	mov    QWORD PTR [rax],rsi
  401879:	mov    WORD PTR [rax+0x8],0x6576
  40187f:	mov    BYTE PTR [rax+0xa],0x0
  401883:	lea    rax,[rbp-0xa00]
  40188a:	add    rax,0x564
  401890:	movabs rsi,0x656d757274736e49
  40189a:	movabs rdi,0x706f50206c61746e
  4018a4:	mov    QWORD PTR [rax],rsi
  4018a7:	mov    QWORD PTR [rax+0x8],rdi
  4018ab:	mov    BYTE PTR [rax+0x10],0x0
  4018af:	lea    rax,[rbp-0xa00]
  4018b6:	add    rax,0x582
  4018bc:	movabs rsi,0x656d757274736e49
  4018c6:	movabs rdi,0x636f52206c61746e
  4018d0:	mov    QWORD PTR [rax],rsi
  4018d3:	mov    QWORD PTR [rax+0x8],rdi
  4018d7:	mov    WORD PTR [rax+0x10],0x6b
  4018dd:	lea    rax,[rbp-0xa00]
  4018e4:	add    rax,0x5a0
  4018ea:	mov    DWORD PTR [rax],0x6e687445
  4018f0:	mov    WORD PTR [rax+0x4],0x6369
  4018f6:	mov    BYTE PTR [rax+0x6],0x0
  4018fa:	lea    rax,[rbp-0xa00]
  401901:	add    rax,0x5be
  401907:	mov    DWORD PTR [rax],0x68746f47
  40190d:	mov    WORD PTR [rax+0x4],0x6369
  401913:	mov    BYTE PTR [rax+0x6],0x0
  401917:	lea    rax,[rbp-0xa00]
  40191e:	add    rax,0x5dc
  401924:	movabs rdx,0x657661776b726144
  40192e:	mov    QWORD PTR [rax],rdx
  401931:	mov    BYTE PTR [rax+0x8],0x0
  401935:	lea    rax,[rbp-0xa00]
  40193c:	add    rax,0x5fa
  401942:	movabs rsi,0x492d6f6e68636554
  40194c:	movabs rdi,0x616972747375646e
  401956:	mov    QWORD PTR [rax],rsi
  401959:	mov    QWORD PTR [rax+0x8],rdi
  40195d:	mov    WORD PTR [rax+0x10],0x6c
  401963:	lea    rax,[rbp-0xa00]
  40196a:	add    rax,0x618
  401970:	movabs rcx,0x6e6f727463656c45
  40197a:	mov    QWORD PTR [rax],rcx
  40197d:	mov    WORD PTR [rax+0x8],0x6369
  401983:	mov    BYTE PTR [rax+0xa],0x0
  401987:	lea    rax,[rbp-0xa00]
  40198e:	add    rax,0x636
  401994:	movabs rsi,0x6b6c6f462d706f50
  40199e:	mov    QWORD PTR [rax],rsi
  4019a1:	mov    BYTE PTR [rax+0x8],0x0
  4019a5:	lea    rax,[rbp-0xa00]
  4019ac:	add    rax,0x654
  4019b2:	movabs rdx,0x636e61646f727545
  4019bc:	mov    QWORD PTR [rax],rdx
  4019bf:	mov    WORD PTR [rax+0x8],0x65
  4019c5:	lea    rax,[rbp-0xa00]
  4019cc:	add    rax,0x672
  4019d2:	mov    DWORD PTR [rax],0x61657244
  4019d8:	mov    WORD PTR [rax+0x4],0x6d
  4019de:	lea    rax,[rbp-0xa00]
  4019e5:	add    rax,0x690
  4019eb:	movabs rdi,0x6e72656874756f53
  4019f5:	mov    QWORD PTR [rax],rdi
  4019f8:	mov    DWORD PTR [rax+0x8],0x636f5220
  4019ff:	mov    WORD PTR [rax+0xc],0x6b
  401a05:	lea    rax,[rbp-0xa00]
  401a0c:	add    rax,0x6ae
  401a12:	mov    DWORD PTR [rax],0x656d6f43
  401a18:	mov    WORD PTR [rax+0x4],0x7964
  401a1e:	mov    BYTE PTR [rax+0x6],0x0
  401a22:	lea    rax,[rbp-0xa00]
  401a29:	add    rax,0x6cc
  401a2f:	mov    DWORD PTR [rax],0x746c7543
  401a35:	mov    BYTE PTR [rax+0x4],0x0
  401a39:	lea    rax,[rbp-0xa00]
  401a40:	add    rax,0x6ea
  401a46:	movabs rcx,0x617473676e6147
  401a50:	mov    QWORD PTR [rax],rcx
  401a53:	lea    rax,[rbp-0xa00]
  401a5a:	add    rax,0x708
  401a60:	mov    DWORD PTR [rax],0x20706f54
  401a66:	mov    WORD PTR [rax+0x4],0x3034
  401a6c:	mov    BYTE PTR [rax+0x6],0x0
  401a70:	lea    rax,[rbp-0xa00]
  401a77:	add    rax,0x726
  401a7d:	movabs rsi,0x6169747369726843
  401a87:	mov    QWORD PTR [rax],rsi
  401a8a:	mov    DWORD PTR [rax+0x8],0x6152206e
  401a91:	mov    WORD PTR [rax+0xc],0x70
  401a97:	lea    rax,[rbp-0xa00]
  401a9e:	add    rax,0x744
  401aa4:	movabs rdx,0x6b6e75462f706f50
  401aae:	mov    QWORD PTR [rax],rdx
  401ab1:	mov    BYTE PTR [rax+0x8],0x0
  401ab5:	lea    rax,[rbp-0xa00]
  401abc:	add    rax,0x762
  401ac2:	mov    DWORD PTR [rax],0x676e754a
  401ac8:	mov    WORD PTR [rax+0x4],0x656c
  401ace:	mov    BYTE PTR [rax+0x6],0x0
  401ad2:	lea    rax,[rbp-0xa00]
  401ad9:	add    rax,0x780
  401adf:	movabs rdx,0x412065766974614e
  401ae9:	movabs rcx,0x6e61636972656d
  401af3:	mov    QWORD PTR [rax],rdx
  401af6:	mov    QWORD PTR [rax+0x8],rcx
  401afa:	lea    rax,[rbp-0xa00]
  401b01:	add    rax,0x79e
  401b07:	movabs rdi,0x74657261626143
  401b11:	mov    QWORD PTR [rax],rdi
  401b14:	lea    rax,[rbp-0xa00]
  401b1b:	add    rax,0x7bc
  401b21:	movabs rcx,0x657661572077654e
  401b2b:	mov    QWORD PTR [rax],rcx
  401b2e:	mov    BYTE PTR [rax+0x8],0x0
  401b32:	lea    rax,[rbp-0xa00]
  401b39:	add    rax,0x7da
  401b3f:	movabs rsi,0x6564616863797350
  401b49:	mov    QWORD PTR [rax],rsi
  401b4c:	mov    DWORD PTR [rax+0x8],0x63696c
  401b53:	lea    rax,[rbp-0xa00]
  401b5a:	add    rax,0x7f8
  401b60:	mov    DWORD PTR [rax],0x65766152
  401b66:	mov    BYTE PTR [rax+0x4],0x0
  401b6a:	lea    rax,[rbp-0xa00]
  401b71:	add    rax,0x816
  401b77:	movabs rdx,0x656e7574776f6853
  401b81:	mov    QWORD PTR [rax],rdx
  401b84:	mov    WORD PTR [rax+0x8],0x73
  401b8a:	lea    rax,[rbp-0xa00]
  401b91:	add    rax,0x834
  401b97:	movabs rdi,0x72656c69617254
  401ba1:	mov    QWORD PTR [rax],rdi
  401ba4:	lea    rax,[rbp-0xa00]
  401bab:	add    rax,0x852
  401bb1:	mov    DWORD PTR [rax],0x462d6f4c
  401bb7:	mov    WORD PTR [rax+0x4],0x69
  401bbd:	lea    rax,[rbp-0xa00]
  401bc4:	add    rax,0x870
  401bca:	mov    DWORD PTR [rax],0x62697254
  401bd0:	mov    WORD PTR [rax+0x4],0x6c61
  401bd6:	mov    BYTE PTR [rax+0x6],0x0
  401bda:	lea    rax,[rbp-0xa00]
  401be1:	add    rax,0x88e
  401be7:	movabs rcx,0x6e75502064696341
  401bf1:	mov    QWORD PTR [rax],rcx
  401bf4:	mov    WORD PTR [rax+0x8],0x6b
  401bfa:	lea    rax,[rbp-0xa00]
  401c01:	add    rax,0x8ac
  401c07:	movabs rsi,0x7a614a2064696341
  401c11:	mov    QWORD PTR [rax],rsi
  401c14:	mov    WORD PTR [rax+0x8],0x7a
  401c1a:	lea    rax,[rbp-0xa00]
  401c21:	add    rax,0x8ca
  401c27:	mov    DWORD PTR [rax],0x6b6c6f50
  401c2d:	mov    WORD PTR [rax+0x4],0x61
  401c33:	lea    rax,[rbp-0xa00]
  401c3a:	add    rax,0x8e8
  401c40:	mov    DWORD PTR [rax],0x72746552
  401c46:	mov    WORD PTR [rax+0x4],0x6f
  401c4c:	lea    rax,[rbp-0xa00]
  401c53:	add    rax,0x906
  401c59:	movabs rdx,0x6c61636973754d
  401c63:	mov    QWORD PTR [rax],rdx
  401c66:	lea    rax,[rbp-0xa00]
  401c6d:	add    rax,0x924
  401c73:	movabs rdi,0x522026206b636f52
  401c7d:	mov    QWORD PTR [rax],rdi
  401c80:	mov    DWORD PTR [rax+0x8],0x6c6c6f
  401c87:	lea    rax,[rbp-0xa00]
  401c8e:	add    rax,0x942
  401c94:	movabs rcx,0x636f522064726148
  401c9e:	mov    QWORD PTR [rax],rcx
  401ca1:	mov    WORD PTR [rax+0x8],0x6b
  401ca7:	lea    rax,[rbp-0x90]
  401cae:	mov    rsi,rax
  401cb1:	lea    rdi,[rip+0x363]        # 40201b <_IO_stdin_used@@Base+0x1b>
  401cb8:	mov    eax,0x0
  401cbd:	call   4010b0 <printf@plt>
  401cc2:	lea    rax,[rbp-0x70]
  401cc6:	mov    rsi,rax
  401cc9:	lea    rdi,[rip+0x358]        # 402028 <_IO_stdin_used@@Base+0x28>
  401cd0:	mov    eax,0x0
  401cd5:	call   4010b0 <printf@plt>
  401cda:	lea    rax,[rbp-0x50]
  401cde:	mov    rsi,rax
  401ce1:	lea    rdi,[rip+0x34e]        # 402036 <_IO_stdin_used@@Base+0x36>
  401ce8:	mov    eax,0x0
  401ced:	call   4010b0 <printf@plt>
  401cf2:	lea    rax,[rbp-0x95]
  401cf9:	mov    rsi,rax
  401cfc:	lea    rdi,[rip+0x33f]        # 402042 <_IO_stdin_used@@Base+0x42>
  401d03:	mov    eax,0x0
  401d08:	call   4010b0 <printf@plt>
  401d0d:	movsx  eax,BYTE PTR [rbp-0xa0e]
  401d14:	mov    esi,eax
  401d16:	lea    rdi,[rip+0x32f]        # 40204c <_IO_stdin_used@@Base+0x4c>
  401d1d:	mov    eax,0x0
  401d22:	call   4010b0 <printf@plt>
  401d27:	movsx  eax,BYTE PTR [rbp-0xa0d]
  401d2e:	lea    rdx,[rbp-0xa00]
  401d35:	cdqe   
  401d37:	imul   rax,rax,0x1e
  401d3b:	add    rax,rdx
  401d3e:	mov    rsi,rax
  401d41:	lea    rdi,[rip+0x312]        # 40205a <_IO_stdin_used@@Base+0x5a>
  401d48:	mov    eax,0x0
  401d4d:	call   4010b0 <printf@plt>
  401d52:	mov    rax,QWORD PTR [rbp-0xa08]
  401d59:	mov    rdi,rax
  401d5c:	call   401090 <fclose@plt>
  401d61:	mov    eax,0x0
  401d66:	mov    rsi,QWORD PTR [rbp-0x8]
  401d6a:	xor    rsi,QWORD PTR fs:0x28
  401d73:	je     401d7a <main@@Base+0xba4>
  401d75:	call   4010a0 <__stack_chk_fail@plt>
  401d7a:	leave  
  401d7b:	ret    
  401d7c:	nop    DWORD PTR [rax+0x0]

0000000000401d80 <__libc_csu_init@@Base>:
  401d80:	endbr64 
  401d84:	push   r15
  401d86:	lea    r15,[rip+0x2083]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  401d8d:	push   r14
  401d8f:	mov    r14,rdx
  401d92:	push   r13
  401d94:	mov    r13,rsi
  401d97:	push   r12
  401d99:	mov    r12d,edi
  401d9c:	push   rbp
  401d9d:	lea    rbp,[rip+0x2074]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  401da4:	push   rbx
  401da5:	sub    rbp,r15
  401da8:	sub    rsp,0x8
  401dac:	call   401000 <fclose@plt-0x90>
  401db1:	sar    rbp,0x3
  401db5:	je     401dd6 <__libc_csu_init@@Base+0x56>
  401db7:	xor    ebx,ebx
  401db9:	nop    DWORD PTR [rax+0x0]
  401dc0:	mov    rdx,r14
  401dc3:	mov    rsi,r13
  401dc6:	mov    edi,r12d
  401dc9:	call   QWORD PTR [r15+rbx*8]
  401dcd:	add    rbx,0x1
  401dd1:	cmp    rbp,rbx
  401dd4:	jne    401dc0 <__libc_csu_init@@Base+0x40>
  401dd6:	add    rsp,0x8
  401dda:	pop    rbx
  401ddb:	pop    rbp
  401ddc:	pop    r12
  401dde:	pop    r13
  401de0:	pop    r14
  401de2:	pop    r15
  401de4:	ret    
  401de5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401df0 <__libc_csu_fini@@Base>:
  401df0:	endbr64 
  401df4:	ret    

Disassembly of section .fini:

0000000000401df8 <.fini>:
  401df8:	endbr64 
  401dfc:	sub    rsp,0x8
  401e00:	add    rsp,0x8
  401e04:	ret    
