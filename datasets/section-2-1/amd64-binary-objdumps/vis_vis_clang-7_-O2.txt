
../repos/vis/vis:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x3ffc1]        # 442fd0 <isspace@plt+0x3f6c0>
  40300f:	test   rax,rax
  403012:	je     403016 <start_color@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <start_color@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x3fae2]        # 442b08 <isspace@plt+0x3f1f8>
  403026:	jmp    QWORD PTR [rip+0x3fae4]        # 442b10 <isspace@plt+0x3f200>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <start_color@plt>:
  403030:	jmp    QWORD PTR [rip+0x3fae2]        # 442b18 <isspace@plt+0x3f208>
  403036:	push   0x0
  40303b:	jmp    403020 <start_color@plt-0x10>

0000000000403040 <use_default_colors@plt>:
  403040:	jmp    QWORD PTR [rip+0x3fada]        # 442b20 <isspace@plt+0x3f210>
  403046:	push   0x1
  40304b:	jmp    403020 <start_color@plt-0x10>

0000000000403050 <termkey_set_waittime@plt>:
  403050:	jmp    QWORD PTR [rip+0x3fad2]        # 442b28 <isspace@plt+0x3f218>
  403056:	push   0x2
  40305b:	jmp    403020 <start_color@plt-0x10>

0000000000403060 <getenv@plt>:
  403060:	jmp    QWORD PTR [rip+0x3faca]        # 442b30 <isspace@plt+0x3f220>
  403066:	push   0x3
  40306b:	jmp    403020 <start_color@plt-0x10>

0000000000403070 <noecho@plt>:
  403070:	jmp    QWORD PTR [rip+0x3fac2]        # 442b38 <isspace@plt+0x3f228>
  403076:	push   0x4
  40307b:	jmp    403020 <start_color@plt-0x10>

0000000000403080 <fgetfilecon@plt>:
  403080:	jmp    QWORD PTR [rip+0x3faba]        # 442b40 <isspace@plt+0x3f230>
  403086:	push   0x5
  40308b:	jmp    403020 <start_color@plt-0x10>

0000000000403090 <wmove@plt>:
  403090:	jmp    QWORD PTR [rip+0x3fab2]        # 442b48 <isspace@plt+0x3f238>
  403096:	push   0x6
  40309b:	jmp    403020 <start_color@plt-0x10>

00000000004030a0 <termkey_stop@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x3faaa]        # 442b50 <isspace@plt+0x3f240>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <start_color@plt-0x10>

00000000004030b0 <sigprocmask@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x3faa2]        # 442b58 <isspace@plt+0x3f248>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <start_color@plt-0x10>

00000000004030c0 <__snprintf_chk@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x3fa9a]        # 442b60 <isspace@plt+0x3f250>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <start_color@plt-0x10>

00000000004030d0 <free@plt>:
  4030d0:	jmp    QWORD PTR [rip+0x3fa92]        # 442b68 <isspace@plt+0x3f258>
  4030d6:	push   0xa
  4030db:	jmp    403020 <start_color@plt-0x10>

00000000004030e0 <pair_content@plt>:
  4030e0:	jmp    QWORD PTR [rip+0x3fa8a]        # 442b70 <isspace@plt+0x3f260>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <start_color@plt-0x10>

00000000004030f0 <strcasecmp@plt>:
  4030f0:	jmp    QWORD PTR [rip+0x3fa82]        # 442b78 <isspace@plt+0x3f268>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <start_color@plt-0x10>

0000000000403100 <localtime@plt>:
  403100:	jmp    QWORD PTR [rip+0x3fa7a]        # 442b80 <isspace@plt+0x3f270>
  403106:	push   0xd
  40310b:	jmp    403020 <start_color@plt-0x10>

0000000000403110 <termkey_getkey_force@plt>:
  403110:	jmp    QWORD PTR [rip+0x3fa72]        # 442b88 <isspace@plt+0x3f278>
  403116:	push   0xe
  40311b:	jmp    403020 <start_color@plt-0x10>

0000000000403120 <__vfprintf_chk@plt>:
  403120:	jmp    QWORD PTR [rip+0x3fa6a]        # 442b90 <isspace@plt+0x3f280>
  403126:	push   0xf
  40312b:	jmp    403020 <start_color@plt-0x10>

0000000000403130 <__errno_location@plt>:
  403130:	jmp    QWORD PTR [rip+0x3fa62]        # 442b98 <isspace@plt+0x3f288>
  403136:	push   0x10
  40313b:	jmp    403020 <start_color@plt-0x10>

0000000000403140 <unlink@plt>:
  403140:	jmp    QWORD PTR [rip+0x3fa5a]        # 442ba0 <isspace@plt+0x3f290>
  403146:	push   0x11
  40314b:	jmp    403020 <start_color@plt-0x10>

0000000000403150 <strncpy@plt>:
  403150:	jmp    QWORD PTR [rip+0x3fa52]        # 442ba8 <isspace@plt+0x3f298>
  403156:	push   0x12
  40315b:	jmp    403020 <start_color@plt-0x10>

0000000000403160 <strncmp@plt>:
  403160:	jmp    QWORD PTR [rip+0x3fa4a]        # 442bb0 <isspace@plt+0x3f2a0>
  403166:	push   0x13
  40316b:	jmp    403020 <start_color@plt-0x10>

0000000000403170 <strcpy@plt>:
  403170:	jmp    QWORD PTR [rip+0x3fa42]        # 442bb8 <isspace@plt+0x3f2a8>
  403176:	push   0x14
  40317b:	jmp    403020 <start_color@plt-0x10>

0000000000403180 <curs_set@plt>:
  403180:	jmp    QWORD PTR [rip+0x3fa3a]        # 442bc0 <isspace@plt+0x3f2b0>
  403186:	push   0x15
  40318b:	jmp    403020 <start_color@plt-0x10>

0000000000403190 <unlinkat@plt>:
  403190:	jmp    QWORD PTR [rip+0x3fa32]        # 442bc8 <isspace@plt+0x3f2b8>
  403196:	push   0x16
  40319b:	jmp    403020 <start_color@plt-0x10>

00000000004031a0 <qsort@plt>:
  4031a0:	jmp    QWORD PTR [rip+0x3fa2a]        # 442bd0 <isspace@plt+0x3f2c0>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <start_color@plt-0x10>

00000000004031b0 <sigaction@plt>:
  4031b0:	jmp    QWORD PTR [rip+0x3fa22]        # 442bd8 <isspace@plt+0x3f2c8>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <start_color@plt-0x10>

00000000004031c0 <waddnstr@plt>:
  4031c0:	jmp    QWORD PTR [rip+0x3fa1a]        # 442be0 <isspace@plt+0x3f2d0>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <start_color@plt-0x10>

00000000004031d0 <fcntl@plt>:
  4031d0:	jmp    QWORD PTR [rip+0x3fa12]        # 442be8 <isspace@plt+0x3f2d8>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <start_color@plt-0x10>

00000000004031e0 <setenv@plt>:
  4031e0:	jmp    QWORD PTR [rip+0x3fa0a]        # 442bf0 <isspace@plt+0x3f2e0>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <start_color@plt-0x10>

00000000004031f0 <write@plt>:
  4031f0:	jmp    QWORD PTR [rip+0x3fa02]        # 442bf8 <isspace@plt+0x3f2e8>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <start_color@plt-0x10>

0000000000403200 <getpid@plt>:
  403200:	jmp    QWORD PTR [rip+0x3f9fa]        # 442c00 <isspace@plt+0x3f2f0>
  403206:	push   0x1d
  40320b:	jmp    403020 <start_color@plt-0x10>

0000000000403210 <newterm@plt>:
  403210:	jmp    QWORD PTR [rip+0x3f9f2]        # 442c08 <isspace@plt+0x3f2f8>
  403216:	push   0x1e
  40321b:	jmp    403020 <start_color@plt-0x10>

0000000000403220 <termkey_new_abstract@plt>:
  403220:	jmp    QWORD PTR [rip+0x3f9ea]        # 442c10 <isspace@plt+0x3f300>
  403226:	push   0x1f
  40322b:	jmp    403020 <start_color@plt-0x10>

0000000000403230 <getpwuid@plt>:
  403230:	jmp    QWORD PTR [rip+0x3f9e2]        # 442c18 <isspace@plt+0x3f308>
  403236:	push   0x20
  40323b:	jmp    403020 <start_color@plt-0x10>

0000000000403240 <regfree@plt>:
  403240:	jmp    QWORD PTR [rip+0x3f9da]        # 442c20 <isspace@plt+0x3f310>
  403246:	push   0x21
  40324b:	jmp    403020 <start_color@plt-0x10>

0000000000403250 <strlen@plt>:
  403250:	jmp    QWORD PTR [rip+0x3f9d2]        # 442c28 <isspace@plt+0x3f318>
  403256:	push   0x22
  40325b:	jmp    403020 <start_color@plt-0x10>

0000000000403260 <openat@plt>:
  403260:	jmp    QWORD PTR [rip+0x3f9ca]        # 442c30 <isspace@plt+0x3f320>
  403266:	push   0x23
  40326b:	jmp    403020 <start_color@plt-0x10>

0000000000403270 <chdir@plt>:
  403270:	jmp    QWORD PTR [rip+0x3f9c2]        # 442c38 <isspace@plt+0x3f328>
  403276:	push   0x24
  40327b:	jmp    403020 <start_color@plt-0x10>

0000000000403280 <__stack_chk_fail@plt>:
  403280:	jmp    QWORD PTR [rip+0x3f9ba]        # 442c40 <isspace@plt+0x3f330>
  403286:	push   0x25
  40328b:	jmp    403020 <start_color@plt-0x10>

0000000000403290 <getuid@plt>:
  403290:	jmp    QWORD PTR [rip+0x3f9b2]        # 442c48 <isspace@plt+0x3f338>
  403296:	push   0x26
  40329b:	jmp    403020 <start_color@plt-0x10>

00000000004032a0 <mmap@plt>:
  4032a0:	jmp    QWORD PTR [rip+0x3f9aa]        # 442c50 <isspace@plt+0x3f340>
  4032a6:	push   0x27
  4032ab:	jmp    403020 <start_color@plt-0x10>

00000000004032b0 <mbrtowc@plt>:
  4032b0:	jmp    QWORD PTR [rip+0x3f9a2]        # 442c58 <isspace@plt+0x3f348>
  4032b6:	push   0x28
  4032bb:	jmp    403020 <start_color@plt-0x10>

00000000004032c0 <dup2@plt>:
  4032c0:	jmp    QWORD PTR [rip+0x3f99a]        # 442c60 <isspace@plt+0x3f350>
  4032c6:	push   0x29
  4032cb:	jmp    403020 <start_color@plt-0x10>

00000000004032d0 <pselect@plt>:
  4032d0:	jmp    QWORD PTR [rip+0x3f992]        # 442c68 <isspace@plt+0x3f358>
  4032d6:	push   0x2a
  4032db:	jmp    403020 <start_color@plt-0x10>

00000000004032e0 <freecon@plt>:
  4032e0:	jmp    QWORD PTR [rip+0x3f98a]        # 442c70 <isspace@plt+0x3f360>
  4032e6:	push   0x2b
  4032eb:	jmp    403020 <start_color@plt-0x10>

00000000004032f0 <strchr@plt>:
  4032f0:	jmp    QWORD PTR [rip+0x3f982]        # 442c78 <isspace@plt+0x3f368>
  4032f6:	push   0x2c
  4032fb:	jmp    403020 <start_color@plt-0x10>

0000000000403300 <__fdelt_chk@plt>:
  403300:	jmp    QWORD PTR [rip+0x3f97a]        # 442c80 <isspace@plt+0x3f370>
  403306:	push   0x2d
  40330b:	jmp    403020 <start_color@plt-0x10>

0000000000403310 <__fxstatat@plt>:
  403310:	jmp    QWORD PTR [rip+0x3f972]        # 442c88 <isspace@plt+0x3f378>
  403316:	push   0x2e
  40331b:	jmp    403020 <start_color@plt-0x10>

0000000000403320 <strrchr@plt>:
  403320:	jmp    QWORD PTR [rip+0x3f96a]        # 442c90 <isspace@plt+0x3f380>
  403326:	push   0x2f
  40332b:	jmp    403020 <start_color@plt-0x10>

0000000000403330 <init_color@plt>:
  403330:	jmp    QWORD PTR [rip+0x3f962]        # 442c98 <isspace@plt+0x3f388>
  403336:	push   0x30
  40333b:	jmp    403020 <start_color@plt-0x10>

0000000000403340 <ftruncate@plt>:
  403340:	jmp    QWORD PTR [rip+0x3f95a]        # 442ca0 <isspace@plt+0x3f390>
  403346:	push   0x31
  40334b:	jmp    403020 <start_color@plt-0x10>

0000000000403350 <dirname@plt>:
  403350:	jmp    QWORD PTR [rip+0x3f952]        # 442ca8 <isspace@plt+0x3f398>
  403356:	push   0x32
  40335b:	jmp    403020 <start_color@plt-0x10>

0000000000403360 <memset@plt>:
  403360:	jmp    QWORD PTR [rip+0x3f94a]        # 442cb0 <isspace@plt+0x3f3a0>
  403366:	push   0x33
  40336b:	jmp    403020 <start_color@plt-0x10>

0000000000403370 <termkey_get_waittime@plt>:
  403370:	jmp    QWORD PTR [rip+0x3f942]        # 442cb8 <isspace@plt+0x3f3a8>
  403376:	push   0x34
  40337b:	jmp    403020 <start_color@plt-0x10>

0000000000403380 <termkey_getkey@plt>:
  403380:	jmp    QWORD PTR [rip+0x3f93a]        # 442cc0 <isspace@plt+0x3f3b0>
  403386:	push   0x35
  40338b:	jmp    403020 <start_color@plt-0x10>

0000000000403390 <termkey_set_canonflags@plt>:
  403390:	jmp    QWORD PTR [rip+0x3f932]        # 442cc8 <isspace@plt+0x3f3b8>
  403396:	push   0x36
  40339b:	jmp    403020 <start_color@plt-0x10>

00000000004033a0 <ioctl@plt>:
  4033a0:	jmp    QWORD PTR [rip+0x3f92a]        # 442cd0 <isspace@plt+0x3f3c0>
  4033a6:	push   0x37
  4033ab:	jmp    403020 <start_color@plt-0x10>

00000000004033b0 <getcwd@plt>:
  4033b0:	jmp    QWORD PTR [rip+0x3f922]        # 442cd8 <isspace@plt+0x3f3c8>
  4033b6:	push   0x38
  4033bb:	jmp    403020 <start_color@plt-0x10>

00000000004033c0 <close@plt>:
  4033c0:	jmp    QWORD PTR [rip+0x3f91a]        # 442ce0 <isspace@plt+0x3f3d0>
  4033c6:	push   0x39
  4033cb:	jmp    403020 <start_color@plt-0x10>

00000000004033d0 <pipe@plt>:
  4033d0:	jmp    QWORD PTR [rip+0x3f912]        # 442ce8 <isspace@plt+0x3f3d8>
  4033d6:	push   0x3a
  4033db:	jmp    403020 <start_color@plt-0x10>

00000000004033e0 <keypad@plt>:
  4033e0:	jmp    QWORD PTR [rip+0x3f90a]        # 442cf0 <isspace@plt+0x3f3e0>
  4033e6:	push   0x3b
  4033eb:	jmp    403020 <start_color@plt-0x10>

00000000004033f0 <regcomp@plt>:
  4033f0:	jmp    QWORD PTR [rip+0x3f902]        # 442cf8 <isspace@plt+0x3f3e8>
  4033f6:	push   0x3c
  4033fb:	jmp    403020 <start_color@plt-0x10>

0000000000403400 <strcspn@plt>:
  403400:	jmp    QWORD PTR [rip+0x3f8fa]        # 442d00 <isspace@plt+0x3f3f0>
  403406:	push   0x3d
  40340b:	jmp    403020 <start_color@plt-0x10>

0000000000403410 <memchr@plt>:
  403410:	jmp    QWORD PTR [rip+0x3f8f2]        # 442d08 <isspace@plt+0x3f3f8>
  403416:	push   0x3e
  40341b:	jmp    403020 <start_color@plt-0x10>

0000000000403420 <read@plt>:
  403420:	jmp    QWORD PTR [rip+0x3f8ea]        # 442d10 <isspace@plt+0x3f400>
  403426:	push   0x3f
  40342b:	jmp    403020 <start_color@plt-0x10>

0000000000403430 <memcmp@plt>:
  403430:	jmp    QWORD PTR [rip+0x3f8e2]        # 442d18 <isspace@plt+0x3f408>
  403436:	push   0x40
  40343b:	jmp    403020 <start_color@plt-0x10>

0000000000403440 <resizeterm@plt>:
  403440:	jmp    QWORD PTR [rip+0x3f8da]        # 442d20 <isspace@plt+0x3f410>
  403446:	push   0x41
  40344b:	jmp    403020 <start_color@plt-0x10>

0000000000403450 <termkey_strpkey@plt>:
  403450:	jmp    QWORD PTR [rip+0x3f8d2]        # 442d28 <isspace@plt+0x3f418>
  403456:	push   0x42
  40345b:	jmp    403020 <start_color@plt-0x10>

0000000000403460 <strtoull@plt>:
  403460:	jmp    QWORD PTR [rip+0x3f8ca]        # 442d30 <isspace@plt+0x3f420>
  403466:	push   0x43
  40346b:	jmp    403020 <start_color@plt-0x10>

0000000000403470 <calloc@plt>:
  403470:	jmp    QWORD PTR [rip+0x3f8c2]        # 442d38 <isspace@plt+0x3f428>
  403476:	push   0x44
  40347b:	jmp    403020 <start_color@plt-0x10>

0000000000403480 <strcmp@plt>:
  403480:	jmp    QWORD PTR [rip+0x3f8ba]        # 442d40 <isspace@plt+0x3f430>
  403486:	push   0x45
  40348b:	jmp    403020 <start_color@plt-0x10>

0000000000403490 <termkey_start@plt>:
  403490:	jmp    QWORD PTR [rip+0x3f8b2]        # 442d48 <isspace@plt+0x3f438>
  403496:	push   0x46
  40349b:	jmp    403020 <start_color@plt-0x10>

00000000004034a0 <sigemptyset@plt>:
  4034a0:	jmp    QWORD PTR [rip+0x3f8aa]        # 442d50 <isspace@plt+0x3f440>
  4034a6:	push   0x47
  4034ab:	jmp    403020 <start_color@plt-0x10>

00000000004034b0 <umask@plt>:
  4034b0:	jmp    QWORD PTR [rip+0x3f8a2]        # 442d58 <isspace@plt+0x3f448>
  4034b6:	push   0x48
  4034bb:	jmp    403020 <start_color@plt-0x10>

00000000004034c0 <strtol@plt>:
  4034c0:	jmp    QWORD PTR [rip+0x3f89a]        # 442d60 <isspace@plt+0x3f450>
  4034c6:	push   0x49
  4034cb:	jmp    403020 <start_color@plt-0x10>

00000000004034d0 <realpath@plt>:
  4034d0:	jmp    QWORD PTR [rip+0x3f892]        # 442d68 <isspace@plt+0x3f458>
  4034d6:	push   0x4a
  4034db:	jmp    403020 <start_color@plt-0x10>

00000000004034e0 <memcpy@plt>:
  4034e0:	jmp    QWORD PTR [rip+0x3f88a]        # 442d70 <isspace@plt+0x3f460>
  4034e6:	push   0x4b
  4034eb:	jmp    403020 <start_color@plt-0x10>

00000000004034f0 <sigfillset@plt>:
  4034f0:	jmp    QWORD PTR [rip+0x3f882]        # 442d78 <isspace@plt+0x3f468>
  4034f6:	push   0x4c
  4034fb:	jmp    403020 <start_color@plt-0x10>

0000000000403500 <kill@plt>:
  403500:	jmp    QWORD PTR [rip+0x3f87a]        # 442d80 <isspace@plt+0x3f470>
  403506:	push   0x4d
  40350b:	jmp    403020 <start_color@plt-0x10>

0000000000403510 <__xpg_basename@plt>:
  403510:	jmp    QWORD PTR [rip+0x3f872]        # 442d88 <isspace@plt+0x3f478>
  403516:	push   0x4e
  40351b:	jmp    403020 <start_color@plt-0x10>

0000000000403520 <time@plt>:
  403520:	jmp    QWORD PTR [rip+0x3f86a]        # 442d90 <isspace@plt+0x3f480>
  403526:	push   0x4f
  40352b:	jmp    403020 <start_color@plt-0x10>

0000000000403530 <termkey_interpret_csi@plt>:
  403530:	jmp    QWORD PTR [rip+0x3f862]        # 442d98 <isspace@plt+0x3f488>
  403536:	push   0x50
  40353b:	jmp    403020 <start_color@plt-0x10>

0000000000403540 <can_change_color@plt>:
  403540:	jmp    QWORD PTR [rip+0x3f85a]        # 442da0 <isspace@plt+0x3f490>
  403546:	push   0x51
  40354b:	jmp    403020 <start_color@plt-0x10>

0000000000403550 <getgid@plt>:
  403550:	jmp    QWORD PTR [rip+0x3f852]        # 442da8 <isspace@plt+0x3f498>
  403556:	push   0x52
  40355b:	jmp    403020 <start_color@plt-0x10>

0000000000403560 <select@plt>:
  403560:	jmp    QWORD PTR [rip+0x3f84a]        # 442db0 <isspace@plt+0x3f4a0>
  403566:	push   0x53
  40356b:	jmp    403020 <start_color@plt-0x10>

0000000000403570 <__xstat@plt>:
  403570:	jmp    QWORD PTR [rip+0x3f842]        # 442db8 <isspace@plt+0x3f4a8>
  403576:	push   0x54
  40357b:	jmp    403020 <start_color@plt-0x10>

0000000000403580 <meta@plt>:
  403580:	jmp    QWORD PTR [rip+0x3f83a]        # 442dc0 <isspace@plt+0x3f4b0>
  403586:	push   0x55
  40358b:	jmp    403020 <start_color@plt-0x10>

0000000000403590 <wnoutrefresh@plt>:
  403590:	jmp    QWORD PTR [rip+0x3f832]        # 442dc8 <isspace@plt+0x3f4b8>
  403596:	push   0x56
  40359b:	jmp    403020 <start_color@plt-0x10>

00000000004035a0 <wcwidth@plt>:
  4035a0:	jmp    QWORD PTR [rip+0x3f82a]        # 442dd0 <isspace@plt+0x3f4c0>
  4035a6:	push   0x57
  4035ab:	jmp    403020 <start_color@plt-0x10>

00000000004035b0 <reset_shell_mode@plt>:
  4035b0:	jmp    QWORD PTR [rip+0x3f822]        # 442dd8 <isspace@plt+0x3f4c8>
  4035b6:	push   0x58
  4035bb:	jmp    403020 <start_color@plt-0x10>

00000000004035c0 <cbreak@plt>:
  4035c0:	jmp    QWORD PTR [rip+0x3f81a]        # 442de0 <isspace@plt+0x3f4d0>
  4035c6:	push   0x59
  4035cb:	jmp    403020 <start_color@plt-0x10>

00000000004035d0 <termkey_get_keyname@plt>:
  4035d0:	jmp    QWORD PTR [rip+0x3f812]        # 442de8 <isspace@plt+0x3f4d8>
  4035d6:	push   0x5a
  4035db:	jmp    403020 <start_color@plt-0x10>

00000000004035e0 <malloc@plt>:
  4035e0:	jmp    QWORD PTR [rip+0x3f80a]        # 442df0 <isspace@plt+0x3f4e0>
  4035e6:	push   0x5b
  4035eb:	jmp    403020 <start_color@plt-0x10>

00000000004035f0 <fflush@plt>:
  4035f0:	jmp    QWORD PTR [rip+0x3f802]        # 442df8 <isspace@plt+0x3f4e8>
  4035f6:	push   0x5c
  4035fb:	jmp    403020 <start_color@plt-0x10>

0000000000403600 <__isoc99_sscanf@plt>:
  403600:	jmp    QWORD PTR [rip+0x3f7fa]        # 442e00 <isspace@plt+0x3f4f0>
  403606:	push   0x5d
  40360b:	jmp    403020 <start_color@plt-0x10>

0000000000403610 <__fxstat@plt>:
  403610:	jmp    QWORD PTR [rip+0x3f7f2]        # 442e08 <isspace@plt+0x3f4f8>
  403616:	push   0x5e
  40361b:	jmp    403020 <start_color@plt-0x10>

0000000000403620 <is_selinux_enabled@plt>:
  403620:	jmp    QWORD PTR [rip+0x3f7ea]        # 442e10 <isspace@plt+0x3f500>
  403626:	push   0x5f
  40362b:	jmp    403020 <start_color@plt-0x10>

0000000000403630 <init_pair@plt>:
  403630:	jmp    QWORD PTR [rip+0x3f7e2]        # 442e18 <isspace@plt+0x3f508>
  403636:	push   0x60
  40363b:	jmp    403020 <start_color@plt-0x10>

0000000000403640 <regexec@plt>:
  403640:	jmp    QWORD PTR [rip+0x3f7da]        # 442e20 <isspace@plt+0x3f510>
  403646:	push   0x61
  40364b:	jmp    403020 <start_color@plt-0x10>

0000000000403650 <mkstemp@plt>:
  403650:	jmp    QWORD PTR [rip+0x3f7d2]        # 442e28 <isspace@plt+0x3f518>
  403656:	push   0x62
  40365b:	jmp    403020 <start_color@plt-0x10>

0000000000403660 <reset_prog_mode@plt>:
  403660:	jmp    QWORD PTR [rip+0x3f7ca]        # 442e30 <isspace@plt+0x3f520>
  403666:	push   0x63
  40366b:	jmp    403020 <start_color@plt-0x10>

0000000000403670 <fchdir@plt>:
  403670:	jmp    QWORD PTR [rip+0x3f7c2]        # 442e38 <isspace@plt+0x3f528>
  403676:	push   0x64
  40367b:	jmp    403020 <start_color@plt-0x10>

0000000000403680 <doupdate@plt>:
  403680:	jmp    QWORD PTR [rip+0x3f7ba]        # 442e40 <isspace@plt+0x3f530>
  403686:	push   0x65
  40368b:	jmp    403020 <start_color@plt-0x10>

0000000000403690 <termkey_strfkey@plt>:
  403690:	jmp    QWORD PTR [rip+0x3f7b2]        # 442e48 <isspace@plt+0x3f538>
  403696:	push   0x66
  40369b:	jmp    403020 <start_color@plt-0x10>

00000000004036a0 <__vsnprintf_chk@plt>:
  4036a0:	jmp    QWORD PTR [rip+0x3f7aa]        # 442e50 <isspace@plt+0x3f540>
  4036a6:	push   0x67
  4036ab:	jmp    403020 <start_color@plt-0x10>

00000000004036b0 <realloc@plt>:
  4036b0:	jmp    QWORD PTR [rip+0x3f7a2]        # 442e58 <isspace@plt+0x3f548>
  4036b6:	push   0x68
  4036bb:	jmp    403020 <start_color@plt-0x10>

00000000004036c0 <__strcpy_chk@plt>:
  4036c0:	jmp    QWORD PTR [rip+0x3f79a]        # 442e60 <isspace@plt+0x3f550>
  4036c6:	push   0x69
  4036cb:	jmp    403020 <start_color@plt-0x10>

00000000004036d0 <munmap@plt>:
  4036d0:	jmp    QWORD PTR [rip+0x3f792]        # 442e68 <isspace@plt+0x3f558>
  4036d6:	push   0x6a
  4036db:	jmp    403020 <start_color@plt-0x10>

00000000004036e0 <setlocale@plt>:
  4036e0:	jmp    QWORD PTR [rip+0x3f78a]        # 442e70 <isspace@plt+0x3f560>
  4036e6:	push   0x6b
  4036eb:	jmp    403020 <start_color@plt-0x10>

00000000004036f0 <termkey_destroy@plt>:
  4036f0:	jmp    QWORD PTR [rip+0x3f782]        # 442e78 <isspace@plt+0x3f568>
  4036f6:	push   0x6c
  4036fb:	jmp    403020 <start_color@plt-0x10>

0000000000403700 <__printf_chk@plt>:
  403700:	jmp    QWORD PTR [rip+0x3f77a]        # 442e80 <isspace@plt+0x3f570>
  403706:	push   0x6d
  40370b:	jmp    403020 <start_color@plt-0x10>

0000000000403710 <fchmod@plt>:
  403710:	jmp    QWORD PTR [rip+0x3f772]        # 442e88 <isspace@plt+0x3f578>
  403716:	push   0x6e
  40371b:	jmp    403020 <start_color@plt-0x10>

0000000000403720 <poll@plt>:
  403720:	jmp    QWORD PTR [rip+0x3f76a]        # 442e90 <isspace@plt+0x3f580>
  403726:	push   0x6f
  40372b:	jmp    403020 <start_color@plt-0x10>

0000000000403730 <__longjmp_chk@plt>:
  403730:	jmp    QWORD PTR [rip+0x3f762]        # 442e98 <isspace@plt+0x3f588>
  403736:	push   0x70
  40373b:	jmp    403020 <start_color@plt-0x10>

0000000000403740 <strftime@plt>:
  403740:	jmp    QWORD PTR [rip+0x3f75a]        # 442ea0 <isspace@plt+0x3f590>
  403746:	push   0x71
  40374b:	jmp    403020 <start_color@plt-0x10>

0000000000403750 <memmove@plt>:
  403750:	jmp    QWORD PTR [rip+0x3f752]        # 442ea8 <isspace@plt+0x3f598>
  403756:	push   0x72
  40375b:	jmp    403020 <start_color@plt-0x10>

0000000000403760 <termkey_new@plt>:
  403760:	jmp    QWORD PTR [rip+0x3f74a]        # 442eb0 <isspace@plt+0x3f5a0>
  403766:	push   0x73
  40376b:	jmp    403020 <start_color@plt-0x10>

0000000000403770 <fsync@plt>:
  403770:	jmp    QWORD PTR [rip+0x3f742]        # 442eb8 <isspace@plt+0x3f5a8>
  403776:	push   0x74
  40377b:	jmp    403020 <start_color@plt-0x10>

0000000000403780 <memrchr@plt>:
  403780:	jmp    QWORD PTR [rip+0x3f73a]        # 442ec0 <isspace@plt+0x3f5b0>
  403786:	push   0x75
  40378b:	jmp    403020 <start_color@plt-0x10>

0000000000403790 <waitpid@plt>:
  403790:	jmp    QWORD PTR [rip+0x3f732]        # 442ec8 <isspace@plt+0x3f5b8>
  403796:	push   0x76
  40379b:	jmp    403020 <start_color@plt-0x10>

00000000004037a0 <open@plt>:
  4037a0:	jmp    QWORD PTR [rip+0x3f72a]        # 442ed0 <isspace@plt+0x3f5c0>
  4037a6:	push   0x77
  4037ab:	jmp    403020 <start_color@plt-0x10>

00000000004037b0 <fchown@plt>:
  4037b0:	jmp    QWORD PTR [rip+0x3f722]        # 442ed8 <isspace@plt+0x3f5c8>
  4037b6:	push   0x78
  4037bb:	jmp    403020 <start_color@plt-0x10>

00000000004037c0 <execvp@plt>:
  4037c0:	jmp    QWORD PTR [rip+0x3f71a]        # 442ee0 <isspace@plt+0x3f5d0>
  4037c6:	push   0x79
  4037cb:	jmp    403020 <start_color@plt-0x10>

00000000004037d0 <wresize@plt>:
  4037d0:	jmp    QWORD PTR [rip+0x3f712]        # 442ee8 <isspace@plt+0x3f5d8>
  4037d6:	push   0x7a
  4037db:	jmp    403020 <start_color@plt-0x10>

00000000004037e0 <renameat@plt>:
  4037e0:	jmp    QWORD PTR [rip+0x3f70a]        # 442ef0 <isspace@plt+0x3f5e0>
  4037e6:	push   0x7b
  4037eb:	jmp    403020 <start_color@plt-0x10>

00000000004037f0 <nonl@plt>:
  4037f0:	jmp    QWORD PTR [rip+0x3f702]        # 442ef8 <isspace@plt+0x3f5e8>
  4037f6:	push   0x7c
  4037fb:	jmp    403020 <start_color@plt-0x10>

0000000000403800 <exit@plt>:
  403800:	jmp    QWORD PTR [rip+0x3f6fa]        # 442f00 <isspace@plt+0x3f5f0>
  403806:	push   0x7d
  40380b:	jmp    403020 <start_color@plt-0x10>

0000000000403810 <fwrite@plt>:
  403810:	jmp    QWORD PTR [rip+0x3f6f2]        # 442f08 <isspace@plt+0x3f5f8>
  403816:	push   0x7e
  40381b:	jmp    403020 <start_color@plt-0x10>

0000000000403820 <__fprintf_chk@plt>:
  403820:	jmp    QWORD PTR [rip+0x3f6ea]        # 442f10 <isspace@plt+0x3f600>
  403826:	push   0x7f
  40382b:	jmp    403020 <start_color@plt-0x10>

0000000000403830 <fsetfilecon@plt>:
  403830:	jmp    QWORD PTR [rip+0x3f6e2]        # 442f18 <isspace@plt+0x3f608>
  403836:	push   0x80
  40383b:	jmp    403020 <start_color@plt-0x10>

0000000000403840 <__strncat_chk@plt>:
  403840:	jmp    QWORD PTR [rip+0x3f6da]        # 442f20 <isspace@plt+0x3f610>
  403846:	push   0x81
  40384b:	jmp    403020 <start_color@plt-0x10>

0000000000403850 <strdup@plt>:
  403850:	jmp    QWORD PTR [rip+0x3f6d2]        # 442f28 <isspace@plt+0x3f618>
  403856:	push   0x82
  40385b:	jmp    403020 <start_color@plt-0x10>

0000000000403860 <execlp@plt>:
  403860:	jmp    QWORD PTR [rip+0x3f6ca]        # 442f30 <isspace@plt+0x3f620>
  403866:	push   0x83
  40386b:	jmp    403020 <start_color@plt-0x10>

0000000000403870 <termkey_advisereadable@plt>:
  403870:	jmp    QWORD PTR [rip+0x3f6c2]        # 442f38 <isspace@plt+0x3f628>
  403876:	push   0x84
  40387b:	jmp    403020 <start_color@plt-0x10>

0000000000403880 <strerror@plt>:
  403880:	jmp    QWORD PTR [rip+0x3f6ba]        # 442f40 <isspace@plt+0x3f630>
  403886:	push   0x85
  40388b:	jmp    403020 <start_color@plt-0x10>

0000000000403890 <wclear@plt>:
  403890:	jmp    QWORD PTR [rip+0x3f6b2]        # 442f48 <isspace@plt+0x3f638>
  403896:	push   0x86
  40389b:	jmp    403020 <start_color@plt-0x10>

00000000004038a0 <__sigsetjmp@plt>:
  4038a0:	jmp    QWORD PTR [rip+0x3f6aa]        # 442f50 <isspace@plt+0x3f640>
  4038a6:	push   0x87
  4038ab:	jmp    403020 <start_color@plt-0x10>

00000000004038b0 <endwin@plt>:
  4038b0:	jmp    QWORD PTR [rip+0x3f6a2]        # 442f58 <isspace@plt+0x3f648>
  4038b6:	push   0x88
  4038bb:	jmp    403020 <start_color@plt-0x10>

00000000004038c0 <sigaddset@plt>:
  4038c0:	jmp    QWORD PTR [rip+0x3f69a]        # 442f60 <isspace@plt+0x3f650>
  4038c6:	push   0x89
  4038cb:	jmp    403020 <start_color@plt-0x10>

00000000004038d0 <fork@plt>:
  4038d0:	jmp    QWORD PTR [rip+0x3f692]        # 442f68 <isspace@plt+0x3f658>
  4038d6:	push   0x8a
  4038db:	jmp    403020 <start_color@plt-0x10>

00000000004038e0 <strstr@plt>:
  4038e0:	jmp    QWORD PTR [rip+0x3f68a]        # 442f70 <isspace@plt+0x3f660>
  4038e6:	push   0x8b
  4038eb:	jmp    403020 <start_color@plt-0x10>

00000000004038f0 <__ctype_b_loc@plt>:
  4038f0:	jmp    QWORD PTR [rip+0x3f682]        # 442f78 <isspace@plt+0x3f668>
  4038f6:	push   0x8c
  4038fb:	jmp    403020 <start_color@plt-0x10>

0000000000403900 <wattrset@plt>:
  403900:	jmp    QWORD PTR [rip+0x3f67a]        # 442f80 <isspace@plt+0x3f670>
  403906:	push   0x8d
  40390b:	jmp    403020 <start_color@plt-0x10>

Disassembly of section .plt.got:

0000000000403910 <isspace@plt>:
  403910:	jmp    QWORD PTR [rip+0x3f6a2]        # 442fb8 <isspace@plt+0x3f6a8>
  403916:	xchg   ax,ax

Disassembly of section .text:

0000000000403920 <.text>:
  403920:	endbr64 
  403924:	xor    ebp,ebp
  403926:	mov    r9,rdx
  403929:	pop    rsi
  40392a:	mov    rdx,rsp
  40392d:	and    rsp,0xfffffffffffffff0
  403931:	push   rax
  403932:	push   rsp
  403933:	mov    r8,0x42bff0
  40393a:	mov    rcx,0x42bf80
  403941:	mov    rdi,0x404fe0
  403948:	call   QWORD PTR [rip+0x3f67a]        # 442fc8 <isspace@plt+0x3f6b8>
  40394e:	hlt    
  40394f:	nop
  403950:	endbr64 
  403954:	ret    
  403955:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40395f:	nop
  403960:	mov    eax,0x443380
  403965:	cmp    rax,0x443380
  40396b:	je     403980 <isspace@plt+0x70>
  40396d:	mov    eax,0x0
  403972:	test   rax,rax
  403975:	je     403980 <isspace@plt+0x70>
  403977:	mov    edi,0x443380
  40397c:	jmp    rax
  40397e:	xchg   ax,ax
  403980:	ret    
  403981:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40398c:	nop    DWORD PTR [rax+0x0]
  403990:	mov    esi,0x443380
  403995:	sub    rsi,0x443380
  40399c:	mov    rax,rsi
  40399f:	shr    rsi,0x3f
  4039a3:	sar    rax,0x3
  4039a7:	add    rsi,rax
  4039aa:	sar    rsi,1
  4039ad:	je     4039c0 <isspace@plt+0xb0>
  4039af:	mov    eax,0x0
  4039b4:	test   rax,rax
  4039b7:	je     4039c0 <isspace@plt+0xb0>
  4039b9:	mov    edi,0x443380
  4039be:	jmp    rax
  4039c0:	ret    
  4039c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4039cc:	nop    DWORD PTR [rax+0x0]
  4039d0:	endbr64 
  4039d4:	cmp    BYTE PTR [rip+0x3f9a5],0x0        # 443380 <isspace@plt+0x3fa70>
  4039db:	jne    4039f0 <isspace@plt+0xe0>
  4039dd:	push   rbp
  4039de:	mov    rbp,rsp
  4039e1:	call   403960 <isspace@plt+0x50>
  4039e6:	mov    BYTE PTR [rip+0x3f993],0x1        # 443380 <isspace@plt+0x3fa70>
  4039ed:	pop    rbp
  4039ee:	ret    
  4039ef:	nop
  4039f0:	ret    
  4039f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4039fc:	nop    DWORD PTR [rax+0x0]
  403a00:	endbr64 
  403a04:	jmp    403990 <isspace@plt+0x80>
  403a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a10:	push   rax
  403a11:	mov    rax,QWORD PTR fs:0x28
  403a1a:	mov    QWORD PTR [rsp],rax
  403a1e:	vxorps xmm0,xmm0,xmm0
  403a22:	vmovups YMMWORD PTR [rdi],ymm0
  403a26:	mov    QWORD PTR [rdi+0x8],0x8
  403a2e:	mov    rax,QWORD PTR fs:0x28
  403a37:	cmp    rax,QWORD PTR [rsp]
  403a3b:	jne    403a42 <isspace@plt+0x132>
  403a3d:	pop    rax
  403a3e:	vzeroupper 
  403a41:	ret    
  403a42:	vzeroupper 
  403a45:	call   403280 <__stack_chk_fail@plt>
  403a4a:	nop    WORD PTR [rax+rax*1+0x0]
  403a50:	push   rax
  403a51:	mov    rax,QWORD PTR fs:0x28
  403a5a:	mov    QWORD PTR [rsp],rax
  403a5e:	vxorps xmm0,xmm0,xmm0
  403a62:	vmovups YMMWORD PTR [rdi],ymm0
  403a66:	mov    QWORD PTR [rdi+0x8],rsi
  403a6a:	mov    rax,QWORD PTR fs:0x28
  403a73:	cmp    rax,QWORD PTR [rsp]
  403a77:	jne    403a7e <isspace@plt+0x16e>
  403a79:	pop    rax
  403a7a:	vzeroupper 
  403a7d:	ret    
  403a7e:	vzeroupper 
  403a81:	call   403280 <__stack_chk_fail@plt>
  403a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a90:	push   rax
  403a91:	mov    rax,QWORD PTR fs:0x28
  403a9a:	mov    QWORD PTR [rsp],rax
  403a9e:	mov    rax,QWORD PTR [rsi+0x8]
  403aa2:	vxorps xmm0,xmm0,xmm0
  403aa6:	vmovups YMMWORD PTR [rdi],ymm0
  403aaa:	mov    QWORD PTR [rdi+0x8],rax
  403aae:	mov    rax,QWORD PTR fs:0x28
  403ab7:	cmp    rax,QWORD PTR [rsp]
  403abb:	jne    403ac2 <isspace@plt+0x1b2>
  403abd:	pop    rax
  403abe:	vzeroupper 
  403ac1:	ret    
  403ac2:	vzeroupper 
  403ac5:	call   403280 <__stack_chk_fail@plt>
  403aca:	nop    WORD PTR [rax+rax*1+0x0]
  403ad0:	push   rbp
  403ad1:	push   r14
  403ad3:	push   rbx
  403ad4:	sub    rsp,0x10
  403ad8:	mov    rax,QWORD PTR fs:0x28
  403ae1:	mov    QWORD PTR [rsp+0x8],rax
  403ae6:	cmp    rsi,0x10
  403aea:	mov    eax,0x10
  403aef:	cmova  rax,rsi
  403af3:	mov    rbp,QWORD PTR [rdi+0x18]
  403af7:	mov    r14b,0x1
  403afa:	cmp    rbp,rax
  403afd:	jae    403b2d <isspace@plt+0x21d>
  403aff:	mov    rbx,rdi
  403b02:	add    rbp,rbp
  403b05:	cmp    rax,rbp
  403b08:	cmovae rbp,rax
  403b0c:	mov    rdi,QWORD PTR [rdi]
  403b0f:	mov    rsi,QWORD PTR [rbx+0x8]
  403b13:	imul   rsi,rbp
  403b17:	call   4036b0 <realloc@plt>
  403b1c:	test   rax,rax
  403b1f:	je     403b2a <isspace@plt+0x21a>
  403b21:	mov    QWORD PTR [rbx+0x18],rbp
  403b25:	mov    QWORD PTR [rbx],rax
  403b28:	jmp    403b2d <isspace@plt+0x21d>
  403b2a:	xor    r14d,r14d
  403b2d:	mov    rax,QWORD PTR fs:0x28
  403b36:	cmp    rax,QWORD PTR [rsp+0x8]
  403b3b:	jne    403b49 <isspace@plt+0x239>
  403b3d:	mov    eax,r14d
  403b40:	add    rsp,0x10
  403b44:	pop    rbx
  403b45:	pop    r14
  403b47:	pop    rbp
  403b48:	ret    
  403b49:	call   403280 <__stack_chk_fail@plt>
  403b4e:	xchg   ax,ax
  403b50:	push   rbx
  403b51:	sub    rsp,0x10
  403b55:	mov    rax,QWORD PTR fs:0x28
  403b5e:	mov    QWORD PTR [rsp+0x8],rax
  403b63:	test   rdi,rdi
  403b66:	je     403b83 <isspace@plt+0x273>
  403b68:	mov    rbx,rdi
  403b6b:	mov    rdi,QWORD PTR [rdi]
  403b6e:	call   4030d0 <free@plt>
  403b73:	mov    rax,QWORD PTR [rbx+0x8]
  403b77:	vxorps xmm0,xmm0,xmm0
  403b7b:	vmovups YMMWORD PTR [rbx],ymm0
  403b7f:	mov    QWORD PTR [rbx+0x8],rax
  403b83:	mov    rax,QWORD PTR fs:0x28
  403b8c:	cmp    rax,QWORD PTR [rsp+0x8]
  403b91:	jne    403b9c <isspace@plt+0x28c>
  403b93:	add    rsp,0x10
  403b97:	pop    rbx
  403b98:	vzeroupper 
  403b9b:	ret    
  403b9c:	vzeroupper 
  403b9f:	call   403280 <__stack_chk_fail@plt>
  403ba4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bae:	xchg   ax,ax
  403bb0:	push   r15
  403bb2:	push   r14
  403bb4:	push   rbx
  403bb5:	sub    rsp,0x10
  403bb9:	mov    rax,QWORD PTR fs:0x28
  403bc2:	mov    QWORD PTR [rsp+0x8],rax
  403bc7:	test   rdi,rdi
  403bca:	je     403c39 <isspace@plt+0x329>
  403bcc:	mov    r14,rdi
  403bcf:	cmp    QWORD PTR [rdi+0x10],0x0
  403bd4:	je     403c20 <isspace@plt+0x310>
  403bd6:	xor    r15d,r15d
  403bd9:	xor    ebx,ebx
  403bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  403be0:	cmp    QWORD PTR [r14+0x8],0x8
  403be5:	jne    403c00 <isspace@plt+0x2f0>
  403be7:	mov    rax,QWORD PTR [r14]
  403bea:	cmp    rax,r15
  403bed:	je     403c0b <isspace@plt+0x2fb>
  403bef:	mov    rdi,QWORD PTR [rax+rbx*8]
  403bf3:	jmp    403c0d <isspace@plt+0x2fd>
  403bf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bff:	nop
  403c00:	call   403130 <__errno_location@plt>
  403c05:	mov    DWORD PTR [rax],0x5f
  403c0b:	xor    edi,edi
  403c0d:	call   4030d0 <free@plt>
  403c12:	add    rbx,0x1
  403c16:	add    r15,0xfffffffffffffff8
  403c1a:	cmp    rbx,QWORD PTR [r14+0x10]
  403c1e:	jb     403be0 <isspace@plt+0x2d0>
  403c20:	mov    rdi,QWORD PTR [r14]
  403c23:	call   4030d0 <free@plt>
  403c28:	mov    rax,QWORD PTR [r14+0x8]
  403c2c:	vxorps xmm0,xmm0,xmm0
  403c30:	vmovups YMMWORD PTR [r14],ymm0
  403c35:	mov    QWORD PTR [r14+0x8],rax
  403c39:	mov    rax,QWORD PTR fs:0x28
  403c42:	cmp    rax,QWORD PTR [rsp+0x8]
  403c47:	jne    403c56 <isspace@plt+0x346>
  403c49:	add    rsp,0x10
  403c4d:	pop    rbx
  403c4e:	pop    r14
  403c50:	pop    r15
  403c52:	vzeroupper 
  403c55:	ret    
  403c56:	vzeroupper 
  403c59:	call   403280 <__stack_chk_fail@plt>
  403c5e:	xchg   ax,ax
  403c60:	push   rax
  403c61:	mov    rax,QWORD PTR fs:0x28
  403c6a:	mov    QWORD PTR [rsp],rax
  403c6e:	cmp    QWORD PTR [rdi+0x8],0x8
  403c73:	jne    403c89 <isspace@plt+0x379>
  403c75:	cmp    QWORD PTR [rdi+0x10],rsi
  403c79:	jbe    403c96 <isspace@plt+0x386>
  403c7b:	shl    rsi,0x3
  403c7f:	add    rsi,QWORD PTR [rdi]
  403c82:	je     403ca1 <isspace@plt+0x391>
  403c84:	mov    rax,QWORD PTR [rsi]
  403c87:	jmp    403ca3 <isspace@plt+0x393>
  403c89:	call   403130 <__errno_location@plt>
  403c8e:	mov    DWORD PTR [rax],0x5f
  403c94:	jmp    403ca1 <isspace@plt+0x391>
  403c96:	call   403130 <__errno_location@plt>
  403c9b:	mov    DWORD PTR [rax],0x16
  403ca1:	xor    eax,eax
  403ca3:	mov    rcx,QWORD PTR fs:0x28
  403cac:	cmp    rcx,QWORD PTR [rsp]
  403cb0:	jne    403cb4 <isspace@plt+0x3a4>
  403cb2:	pop    rcx
  403cb3:	ret    
  403cb4:	call   403280 <__stack_chk_fail@plt>
  403cb9:	nop    DWORD PTR [rax+0x0]
  403cc0:	push   rax
  403cc1:	mov    rax,rdi
  403cc4:	mov    rcx,QWORD PTR fs:0x28
  403ccd:	mov    QWORD PTR [rsp],rcx
  403cd1:	mov    QWORD PTR [rdi+0x10],0x0
  403cd9:	mov    rdi,QWORD PTR [rdi]
  403cdc:	test   rdi,rdi
  403cdf:	je     403d02 <isspace@plt+0x3f2>
  403ce1:	mov    rdx,QWORD PTR [rax+0x8]
  403ce5:	imul   rdx,QWORD PTR [rax+0x18]
  403cea:	xor    esi,esi
  403cec:	call   403360 <memset@plt>
  403cf1:	mov    rax,QWORD PTR fs:0x28
  403cfa:	cmp    rax,QWORD PTR [rsp]
  403cfe:	jne    403d13 <isspace@plt+0x403>
  403d00:	pop    rax
  403d01:	ret    
  403d02:	mov    rax,QWORD PTR fs:0x28
  403d0b:	cmp    rax,QWORD PTR [rsp]
  403d0f:	jne    403d13 <isspace@plt+0x403>
  403d11:	pop    rax
  403d12:	ret    
  403d13:	call   403280 <__stack_chk_fail@plt>
  403d18:	nop    DWORD PTR [rax+rax*1+0x0]
  403d20:	push   rax
  403d21:	mov    rax,QWORD PTR fs:0x28
  403d2a:	mov    QWORD PTR [rsp],rax
  403d2e:	cmp    QWORD PTR [rdi+0x10],rsi
  403d32:	jbe    403d3e <isspace@plt+0x42e>
  403d34:	imul   rsi,QWORD PTR [rdi+0x8]
  403d39:	add    rsi,QWORD PTR [rdi]
  403d3c:	jmp    403d4b <isspace@plt+0x43b>
  403d3e:	call   403130 <__errno_location@plt>
  403d43:	mov    DWORD PTR [rax],0x16
  403d49:	xor    esi,esi
  403d4b:	mov    rax,QWORD PTR fs:0x28
  403d54:	cmp    rax,QWORD PTR [rsp]
  403d58:	jne    403d5f <isspace@plt+0x44f>
  403d5a:	mov    rax,rsi
  403d5d:	pop    rcx
  403d5e:	ret    
  403d5f:	call   403280 <__stack_chk_fail@plt>
  403d64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d6e:	xchg   ax,ax
  403d70:	push   r15
  403d72:	push   r14
  403d74:	push   rbx
  403d75:	sub    rsp,0x10
  403d79:	mov    r14,rsi
  403d7c:	mov    r15,rdi
  403d7f:	mov    rax,QWORD PTR fs:0x28
  403d88:	mov    QWORD PTR [rsp+0x8],rax
  403d8d:	mov    rdi,QWORD PTR [rdi+0x10]
  403d91:	mov    rbx,QWORD PTR [r15+0x18]
  403d95:	lea    rax,[rdi+0x1]
  403d99:	cmp    rax,0x10
  403d9d:	mov    ecx,0x10
  403da2:	cmova  rcx,rax
  403da6:	cmp    rbx,rcx
  403da9:	jae    403dd9 <isspace@plt+0x4c9>
  403dab:	add    rbx,rbx
  403dae:	cmp    rcx,rbx
  403db1:	cmovae rbx,rcx
  403db5:	mov    rdi,QWORD PTR [r15]
  403db8:	mov    rsi,QWORD PTR [r15+0x8]
  403dbc:	imul   rsi,rbx
  403dc0:	call   4036b0 <realloc@plt>
  403dc5:	test   rax,rax
  403dc8:	je     403e10 <isspace@plt+0x500>
  403dca:	mov    QWORD PTR [r15+0x18],rbx
  403dce:	mov    QWORD PTR [r15],rax
  403dd1:	mov    rdi,QWORD PTR [r15+0x10]
  403dd5:	lea    rax,[rdi+0x1]
  403dd9:	mov    QWORD PTR [r15+0x10],rax
  403ddd:	cmp    rdi,0xffffffffffffffff
  403de1:	je     403dfd <isspace@plt+0x4ed>
  403de3:	mov    rdx,QWORD PTR [r15+0x8]
  403de7:	imul   rdi,rdx
  403deb:	add    rdi,QWORD PTR [r15]
  403dee:	test   r14,r14
  403df1:	je     403e14 <isspace@plt+0x504>
  403df3:	mov    rsi,r14
  403df6:	call   4034e0 <memcpy@plt>
  403dfb:	jmp    403e1b <isspace@plt+0x50b>
  403dfd:	call   403130 <__errno_location@plt>
  403e02:	mov    DWORD PTR [rax],0x16
  403e08:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  403e10:	xor    eax,eax
  403e12:	jmp    403e1d <isspace@plt+0x50d>
  403e14:	xor    esi,esi
  403e16:	call   403360 <memset@plt>
  403e1b:	mov    al,0x1
  403e1d:	mov    rcx,QWORD PTR fs:0x28
  403e26:	cmp    rcx,QWORD PTR [rsp+0x8]
  403e2b:	jne    403e37 <isspace@plt+0x527>
  403e2d:	add    rsp,0x10
  403e31:	pop    rbx
  403e32:	pop    r14
  403e34:	pop    r15
  403e36:	ret    
  403e37:	call   403280 <__stack_chk_fail@plt>
  403e3c:	nop    DWORD PTR [rax+0x0]
  403e40:	push   r15
  403e42:	push   r14
  403e44:	push   r12
  403e46:	push   rbx
  403e47:	push   rax
  403e48:	mov    r14,rsi
  403e4b:	mov    r12,rdi
  403e4e:	mov    rax,QWORD PTR fs:0x28
  403e57:	mov    QWORD PTR [rsp],rax
  403e5b:	mov    r15,QWORD PTR [rdi+0x10]
  403e5f:	mov    rbx,QWORD PTR [rdi+0x18]
  403e63:	lea    rax,[r15+0x1]
  403e67:	cmp    rax,0x10
  403e6b:	mov    ecx,0x10
  403e70:	cmova  rcx,rax
  403e74:	cmp    rbx,rcx
  403e77:	jae    403eac <isspace@plt+0x59c>
  403e79:	add    rbx,rbx
  403e7c:	cmp    rcx,rbx
  403e7f:	cmovae rbx,rcx
  403e83:	mov    rdi,QWORD PTR [r12]
  403e87:	mov    rsi,QWORD PTR [r12+0x8]
  403e8c:	imul   rsi,rbx
  403e90:	call   4036b0 <realloc@plt>
  403e95:	test   rax,rax
  403e98:	je     403ee1 <isspace@plt+0x5d1>
  403e9a:	mov    QWORD PTR [r12+0x18],rbx
  403e9f:	mov    QWORD PTR [r12],rax
  403ea3:	mov    r15,QWORD PTR [r12+0x10]
  403ea8:	lea    rax,[r15+0x1]
  403eac:	mov    QWORD PTR [r12+0x10],rax
  403eb1:	mov    ebx,0x5f
  403eb6:	cmp    QWORD PTR [r12+0x8],0x8
  403ebc:	jne    403ed5 <isspace@plt+0x5c5>
  403ebe:	cmp    r15,0xffffffffffffffff
  403ec2:	je     403ed0 <isspace@plt+0x5c0>
  403ec4:	mov    rax,QWORD PTR [r12]
  403ec8:	mov    QWORD PTR [rax+r15*8],r14
  403ecc:	mov    al,0x1
  403ece:	jmp    403ee3 <isspace@plt+0x5d3>
  403ed0:	mov    ebx,0x16
  403ed5:	call   403130 <__errno_location@plt>
  403eda:	mov    DWORD PTR [rax],ebx
  403edc:	mov    QWORD PTR [r12+0x10],r15
  403ee1:	xor    eax,eax
  403ee3:	mov    rcx,QWORD PTR fs:0x28
  403eec:	cmp    rcx,QWORD PTR [rsp]
  403ef0:	jne    403efe <isspace@plt+0x5ee>
  403ef2:	add    rsp,0x8
  403ef6:	pop    rbx
  403ef7:	pop    r12
  403ef9:	pop    r14
  403efb:	pop    r15
  403efd:	ret    
  403efe:	call   403280 <__stack_chk_fail@plt>
  403f03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f0d:	nop    DWORD PTR [rax]
  403f10:	push   rbx
  403f11:	sub    rsp,0x10
  403f15:	mov    rax,QWORD PTR fs:0x28
  403f1e:	mov    QWORD PTR [rsp+0x8],rax
  403f23:	mov    rdx,QWORD PTR [rdi+0x10]
  403f27:	cmp    rdx,rsi
  403f2a:	jbe    403f66 <isspace@plt+0x656>
  403f2c:	mov    rbx,rdi
  403f2f:	mov    r8,QWORD PTR [rdi]
  403f32:	mov    rcx,QWORD PTR [rdi+0x8]
  403f36:	mov    rdi,rcx
  403f39:	imul   rdi,rsi
  403f3d:	add    rdi,r8
  403f40:	lea    rax,[rsi+0x1]
  403f44:	imul   rax,rcx
  403f48:	add    rax,r8
  403f4b:	not    rsi
  403f4e:	add    rdx,rsi
  403f51:	imul   rdx,rcx
  403f55:	mov    rsi,rax
  403f58:	call   403750 <memmove@plt>
  403f5d:	add    QWORD PTR [rbx+0x10],0xffffffffffffffff
  403f62:	mov    al,0x1
  403f64:	jmp    403f73 <isspace@plt+0x663>
  403f66:	call   403130 <__errno_location@plt>
  403f6b:	mov    DWORD PTR [rax],0x16
  403f71:	xor    eax,eax
  403f73:	mov    rcx,QWORD PTR fs:0x28
  403f7c:	cmp    rcx,QWORD PTR [rsp+0x8]
  403f81:	jne    403f89 <isspace@plt+0x679>
  403f83:	add    rsp,0x10
  403f87:	pop    rbx
  403f88:	ret    
  403f89:	call   403280 <__stack_chk_fail@plt>
  403f8e:	xchg   ax,ax
  403f90:	push   rax
  403f91:	mov    rax,QWORD PTR fs:0x28
  403f9a:	mov    QWORD PTR [rsp],rax
  403f9e:	mov    rax,QWORD PTR [rdi+0x10]
  403fa2:	mov    rcx,QWORD PTR fs:0x28
  403fab:	cmp    rcx,QWORD PTR [rsp]
  403faf:	jne    403fb3 <isspace@plt+0x6a3>
  403fb1:	pop    rcx
  403fb2:	ret    
  403fb3:	call   403280 <__stack_chk_fail@plt>
  403fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  403fc0:	push   rax
  403fc1:	mov    rax,QWORD PTR fs:0x28
  403fca:	mov    QWORD PTR [rsp],rax
  403fce:	mov    rax,QWORD PTR [rdi+0x18]
  403fd2:	mov    rcx,QWORD PTR fs:0x28
  403fdb:	cmp    rcx,QWORD PTR [rsp]
  403fdf:	jne    403fe3 <isspace@plt+0x6d3>
  403fe1:	pop    rcx
  403fe2:	ret    
  403fe3:	call   403280 <__stack_chk_fail@plt>
  403fe8:	nop    DWORD PTR [rax+rax*1+0x0]
  403ff0:	push   rax
  403ff1:	mov    rax,QWORD PTR fs:0x28
  403ffa:	mov    QWORD PTR [rsp],rax
  403ffe:	cmp    QWORD PTR [rdi+0x10],rsi
  404002:	jae    404008 <isspace@plt+0x6f8>
  404004:	xor    eax,eax
  404006:	jmp    40400e <isspace@plt+0x6fe>
  404008:	mov    QWORD PTR [rdi+0x10],rsi
  40400c:	mov    al,0x1
  40400e:	mov    rcx,QWORD PTR fs:0x28
  404017:	cmp    rcx,QWORD PTR [rsp]
  40401b:	jne    40401f <isspace@plt+0x70f>
  40401d:	pop    rcx
  40401e:	ret    
  40401f:	call   403280 <__stack_chk_fail@plt>
  404024:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40402e:	xchg   ax,ax
  404030:	push   rax
  404031:	mov    rax,QWORD PTR fs:0x28
  40403a:	mov    QWORD PTR [rsp],rax
  40403e:	cmp    QWORD PTR [rdi+0x18],rsi
  404042:	jae    404048 <isspace@plt+0x738>
  404044:	xor    eax,eax
  404046:	jmp    40404e <isspace@plt+0x73e>
  404048:	mov    QWORD PTR [rdi+0x10],rsi
  40404c:	mov    al,0x1
  40404e:	mov    rcx,QWORD PTR fs:0x28
  404057:	cmp    rcx,QWORD PTR [rsp]
  40405b:	jne    40405f <isspace@plt+0x74f>
  40405d:	pop    rcx
  40405e:	ret    
  40405f:	call   403280 <__stack_chk_fail@plt>
  404064:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40406e:	xchg   ax,ax
  404070:	push   rax
  404071:	mov    rcx,QWORD PTR fs:0x28
  40407a:	mov    QWORD PTR [rsp],rcx
  40407e:	mov    rcx,QWORD PTR [rdi]
  404081:	test   rcx,rcx
  404084:	je     4040ad <isspace@plt+0x79d>
  404086:	mov    rax,rsi
  404089:	mov    rdx,QWORD PTR [rdi+0x8]
  40408d:	mov    rsi,QWORD PTR [rdi+0x10]
  404091:	mov    rdi,rcx
  404094:	mov    rcx,rax
  404097:	call   4031a0 <qsort@plt>
  40409c:	mov    rax,QWORD PTR fs:0x28
  4040a5:	cmp    rax,QWORD PTR [rsp]
  4040a9:	jne    4040be <isspace@plt+0x7ae>
  4040ab:	pop    rax
  4040ac:	ret    
  4040ad:	mov    rax,QWORD PTR fs:0x28
  4040b6:	cmp    rax,QWORD PTR [rsp]
  4040ba:	jne    4040be <isspace@plt+0x7ae>
  4040bc:	pop    rax
  4040bd:	ret    
  4040be:	call   403280 <__stack_chk_fail@plt>
  4040c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040cd:	nop    DWORD PTR [rax]
  4040d0:	push   r15
  4040d2:	push   r14
  4040d4:	push   rbx
  4040d5:	sub    rsp,0x10
  4040d9:	mov    r14,rsi
  4040dc:	mov    r15,rdi
  4040df:	mov    rax,QWORD PTR fs:0x28
  4040e8:	mov    QWORD PTR [rsp+0x8],rax
  4040ed:	mov    rdi,QWORD PTR [rdi+0x10]
  4040f1:	mov    rbx,QWORD PTR [r15+0x18]
  4040f5:	lea    rax,[rdi+0x1]
  4040f9:	cmp    rax,0x10
  4040fd:	mov    ecx,0x10
  404102:	cmova  rcx,rax
  404106:	cmp    rbx,rcx
  404109:	jae    404139 <isspace@plt+0x829>
  40410b:	add    rbx,rbx
  40410e:	cmp    rcx,rbx
  404111:	cmovae rbx,rcx
  404115:	mov    rdi,QWORD PTR [r15]
  404118:	mov    rsi,QWORD PTR [r15+0x8]
  40411c:	imul   rsi,rbx
  404120:	call   4036b0 <realloc@plt>
  404125:	test   rax,rax
  404128:	je     404170 <isspace@plt+0x860>
  40412a:	mov    QWORD PTR [r15+0x18],rbx
  40412e:	mov    QWORD PTR [r15],rax
  404131:	mov    rdi,QWORD PTR [r15+0x10]
  404135:	lea    rax,[rdi+0x1]
  404139:	mov    QWORD PTR [r15+0x10],rax
  40413d:	cmp    rdi,0xffffffffffffffff
  404141:	je     40415d <isspace@plt+0x84d>
  404143:	mov    rdx,QWORD PTR [r15+0x8]
  404147:	imul   rdi,rdx
  40414b:	add    rdi,QWORD PTR [r15]
  40414e:	test   r14,r14
  404151:	je     404174 <isspace@plt+0x864>
  404153:	mov    rsi,r14
  404156:	call   4034e0 <memcpy@plt>
  40415b:	jmp    40417b <isspace@plt+0x86b>
  40415d:	call   403130 <__errno_location@plt>
  404162:	mov    DWORD PTR [rax],0x16
  404168:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  404170:	xor    eax,eax
  404172:	jmp    40417d <isspace@plt+0x86d>
  404174:	xor    esi,esi
  404176:	call   403360 <memset@plt>
  40417b:	mov    al,0x1
  40417d:	mov    rcx,QWORD PTR fs:0x28
  404186:	cmp    rcx,QWORD PTR [rsp+0x8]
  40418b:	jne    404197 <isspace@plt+0x887>
  40418d:	add    rsp,0x10
  404191:	pop    rbx
  404192:	pop    r14
  404194:	pop    r15
  404196:	ret    
  404197:	call   403280 <__stack_chk_fail@plt>
  40419c:	nop    DWORD PTR [rax+0x0]
  4041a0:	push   rax
  4041a1:	mov    rax,QWORD PTR fs:0x28
  4041aa:	mov    QWORD PTR [rsp],rax
  4041ae:	mov    rcx,QWORD PTR [rdi+0x10]
  4041b2:	test   rcx,rcx
  4041b5:	je     4041ce <isspace@plt+0x8be>
  4041b7:	add    rcx,0xffffffffffffffff
  4041bb:	mov    rax,QWORD PTR [rdi+0x8]
  4041bf:	imul   rax,rcx
  4041c3:	add    rax,QWORD PTR [rdi]
  4041c6:	je     4041ce <isspace@plt+0x8be>
  4041c8:	mov    QWORD PTR [rdi+0x10],rcx
  4041cc:	jmp    4041d0 <isspace@plt+0x8c0>
  4041ce:	xor    eax,eax
  4041d0:	mov    rcx,QWORD PTR fs:0x28
  4041d9:	cmp    rcx,QWORD PTR [rsp]
  4041dd:	jne    4041e1 <isspace@plt+0x8d1>
  4041df:	pop    rcx
  4041e0:	ret    
  4041e1:	call   403280 <__stack_chk_fail@plt>
  4041e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041f0:	push   rax
  4041f1:	mov    rax,QWORD PTR fs:0x28
  4041fa:	mov    QWORD PTR [rsp],rax
  4041fe:	mov    rax,QWORD PTR [rdi+0x10]
  404202:	test   rax,rax
  404205:	je     404215 <isspace@plt+0x905>
  404207:	add    rax,0xffffffffffffffff
  40420b:	imul   rax,QWORD PTR [rdi+0x8]
  404210:	add    rax,QWORD PTR [rdi]
  404213:	jmp    404217 <isspace@plt+0x907>
  404215:	xor    eax,eax
  404217:	mov    rcx,QWORD PTR fs:0x28
  404220:	cmp    rcx,QWORD PTR [rsp]
  404224:	jne    404228 <isspace@plt+0x918>
  404226:	pop    rcx
  404227:	ret    
  404228:	call   403280 <__stack_chk_fail@plt>
  40422d:	nop    DWORD PTR [rax]
  404230:	push   rax
  404231:	mov    rax,QWORD PTR fs:0x28
  40423a:	mov    QWORD PTR [rsp],rax
  40423e:	vxorps xmm0,xmm0,xmm0
  404242:	vmovups XMMWORD PTR [rdi],xmm0
  404246:	mov    QWORD PTR [rdi+0x10],0x0
  40424e:	mov    rax,QWORD PTR fs:0x28
  404257:	cmp    rax,QWORD PTR [rsp]
  40425b:	jne    40425f <isspace@plt+0x94f>
  40425d:	pop    rax
  40425e:	ret    
  40425f:	call   403280 <__stack_chk_fail@plt>
  404264:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40426e:	xchg   ax,ax
  404270:	push   rbp
  404271:	push   r14
  404273:	push   rbx
  404274:	sub    rsp,0x10
  404278:	mov    rax,QWORD PTR fs:0x28
  404281:	mov    QWORD PTR [rsp+0x8],rax
  404286:	cmp    rsi,0x400
  40428d:	mov    eax,0x400
  404292:	cmova  rax,rsi
  404296:	mov    rbp,QWORD PTR [rdi+0x10]
  40429a:	mov    r14b,0x1
  40429d:	cmp    rbp,rax
  4042a0:	jae    4042cb <isspace@plt+0x9bb>
  4042a2:	mov    rbx,rdi
  4042a5:	add    rbp,rbp
  4042a8:	cmp    rax,rbp
  4042ab:	cmovae rbp,rax
  4042af:	mov    rdi,QWORD PTR [rdi]
  4042b2:	mov    rsi,rbp
  4042b5:	call   4036b0 <realloc@plt>
  4042ba:	test   rax,rax
  4042bd:	je     4042c8 <isspace@plt+0x9b8>
  4042bf:	mov    QWORD PTR [rbx+0x10],rbp
  4042c3:	mov    QWORD PTR [rbx],rax
  4042c6:	jmp    4042cb <isspace@plt+0x9bb>
  4042c8:	xor    r14d,r14d
  4042cb:	mov    rax,QWORD PTR fs:0x28
  4042d4:	cmp    rax,QWORD PTR [rsp+0x8]
  4042d9:	jne    4042e7 <isspace@plt+0x9d7>
  4042db:	mov    eax,r14d
  4042de:	add    rsp,0x10
  4042e2:	pop    rbx
  4042e3:	pop    r14
  4042e5:	pop    rbp
  4042e6:	ret    
  4042e7:	call   403280 <__stack_chk_fail@plt>
  4042ec:	nop    DWORD PTR [rax+0x0]
  4042f0:	push   rbp
  4042f1:	push   r14
  4042f3:	push   rbx
  4042f4:	sub    rsp,0x10
  4042f8:	mov    rax,QWORD PTR fs:0x28
  404301:	mov    QWORD PTR [rsp+0x8],rax
  404306:	mov    rcx,QWORD PTR [rdi+0x8]
  40430a:	mov    rax,rcx
  40430d:	not    rax
  404310:	cmp    rax,rsi
  404313:	jae    40431a <isspace@plt+0xa0a>
  404315:	xor    r14d,r14d
  404318:	jmp    40435d <isspace@plt+0xa4d>
  40431a:	mov    rbx,rdi
  40431d:	add    rcx,rsi
  404320:	cmp    rcx,0x400
  404327:	mov    eax,0x400
  40432c:	cmova  rax,rcx
  404330:	mov    rbp,QWORD PTR [rdi+0x10]
  404334:	mov    r14b,0x1
  404337:	cmp    rbp,rax
  40433a:	jae    40435d <isspace@plt+0xa4d>
  40433c:	add    rbp,rbp
  40433f:	cmp    rax,rbp
  404342:	cmovae rbp,rax
  404346:	mov    rdi,QWORD PTR [rbx]
  404349:	mov    rsi,rbp
  40434c:	call   4036b0 <realloc@plt>
  404351:	test   rax,rax
  404354:	je     404315 <isspace@plt+0xa05>
  404356:	mov    QWORD PTR [rbx+0x10],rbp
  40435a:	mov    QWORD PTR [rbx],rax
  40435d:	mov    rax,QWORD PTR fs:0x28
  404366:	cmp    rax,QWORD PTR [rsp+0x8]
  40436b:	jne    404379 <isspace@plt+0xa69>
  40436d:	mov    eax,r14d
  404370:	add    rsp,0x10
  404374:	pop    rbx
  404375:	pop    r14
  404377:	pop    rbp
  404378:	ret    
  404379:	call   403280 <__stack_chk_fail@plt>
  40437e:	xchg   ax,ax
  404380:	push   rbp
  404381:	push   r15
  404383:	push   r14
  404385:	push   rbx
  404386:	push   rax
  404387:	mov    rax,QWORD PTR fs:0x28
  404390:	mov    QWORD PTR [rsp],rax
  404394:	mov    rsi,QWORD PTR [rdi]
  404397:	mov    r14b,0x1
  40439a:	test   rsi,rsi
  40439d:	je     404435 <isspace@plt+0xb25>
  4043a3:	mov    rbx,rdi
  4043a6:	mov    rbp,QWORD PTR [rdi+0x8]
  4043aa:	test   rbp,rbp
  4043ad:	je     404435 <isspace@plt+0xb25>
  4043b3:	cmp    BYTE PTR [rsi+rbp*1-0x1],0x0
  4043b8:	je     404435 <isspace@plt+0xb25>
  4043ba:	cmp    rbp,0xffffffffffffffff
  4043be:	je     40440c <isspace@plt+0xafc>
  4043c0:	lea    rcx,[rbp+0x1]
  4043c4:	cmp    rcx,0x400
  4043cb:	mov    eax,0x400
  4043d0:	cmova  rax,rcx
  4043d4:	mov    r15,QWORD PTR [rbx+0x10]
  4043d8:	cmp    r15,rax
  4043db:	jae    404411 <isspace@plt+0xb01>
  4043dd:	add    r15,r15
  4043e0:	cmp    rax,r15
  4043e3:	cmovae r15,rax
  4043e7:	mov    rdi,rsi
  4043ea:	mov    rsi,r15
  4043ed:	call   4036b0 <realloc@plt>
  4043f2:	test   rax,rax
  4043f5:	je     40440c <isspace@plt+0xafc>
  4043f7:	mov    rsi,rax
  4043fa:	mov    QWORD PTR [rbx+0x10],r15
  4043fe:	mov    QWORD PTR [rbx],rax
  404401:	mov    rdx,QWORD PTR [rbx+0x8]
  404405:	sub    rdx,rbp
  404408:	jne    404419 <isspace@plt+0xb09>
  40440a:	jmp    40442c <isspace@plt+0xb1c>
  40440c:	xor    r14d,r14d
  40440f:	jmp    404435 <isspace@plt+0xb25>
  404411:	mov    rdx,rbp
  404414:	sub    rdx,rbp
  404417:	je     40442c <isspace@plt+0xb1c>
  404419:	lea    rdi,[rsi+rbp*1]
  40441d:	add    rdi,0x1
  404421:	add    rsi,rbp
  404424:	call   403750 <memmove@plt>
  404429:	mov    rsi,QWORD PTR [rbx]
  40442c:	mov    BYTE PTR [rsi+rbp*1],0x0
  404430:	add    QWORD PTR [rbx+0x8],0x1
  404435:	mov    rax,QWORD PTR fs:0x28
  40443e:	cmp    rax,QWORD PTR [rsp]
  404442:	jne    404452 <isspace@plt+0xb42>
  404444:	mov    eax,r14d
  404447:	add    rsp,0x8
  40444b:	pop    rbx
  40444c:	pop    r14
  40444e:	pop    r15
  404450:	pop    rbp
  404451:	ret    
  404452:	call   403280 <__stack_chk_fail@plt>
  404457:	nop    WORD PTR [rax+rax*1+0x0]
  404460:	push   rbp
  404461:	push   r15
  404463:	push   r14
  404465:	push   r13
  404467:	push   r12
  404469:	push   rbx
  40446a:	push   rax
  40446b:	mov    rax,QWORD PTR fs:0x28
  404474:	mov    QWORD PTR [rsp],rax
  404478:	mov    r14b,0x1
  40447b:	test   rdx,rdx
  40447e:	je     404521 <isspace@plt+0xc11>
  404484:	mov    rbx,rdx
  404487:	mov    r12,rdi
  40448a:	mov    r13,QWORD PTR [rdi+0x8]
  40448e:	mov    rax,r13
  404491:	not    rax
  404494:	cmp    rax,rdx
  404497:	jae    4044a1 <isspace@plt+0xb91>
  404499:	xor    r14d,r14d
  40449c:	jmp    404521 <isspace@plt+0xc11>
  4044a1:	mov    r15,rsi
  4044a4:	lea    rcx,[rbx+r13*1]
  4044a8:	cmp    rcx,0x400
  4044af:	mov    eax,0x400
  4044b4:	cmova  rax,rcx
  4044b8:	mov    rbp,QWORD PTR [r12+0x10]
  4044bd:	cmp    rbp,rax
  4044c0:	jae    4044f2 <isspace@plt+0xbe2>
  4044c2:	add    rbp,rbp
  4044c5:	cmp    rax,rbp
  4044c8:	cmovae rbp,rax
  4044cc:	mov    rdi,QWORD PTR [r12]
  4044d0:	mov    rsi,rbp
  4044d3:	call   4036b0 <realloc@plt>
  4044d8:	test   rax,rax
  4044db:	je     404499 <isspace@plt+0xb89>
  4044dd:	mov    QWORD PTR [r12+0x10],rbp
  4044e2:	mov    QWORD PTR [r12],rax
  4044e6:	mov    rdx,QWORD PTR [r12+0x8]
  4044eb:	sub    rdx,r13
  4044ee:	jne    4044fa <isspace@plt+0xbea>
  4044f0:	jmp    40450a <isspace@plt+0xbfa>
  4044f2:	mov    rdx,r13
  4044f5:	sub    rdx,r13
  4044f8:	je     40450a <isspace@plt+0xbfa>
  4044fa:	mov    rsi,QWORD PTR [r12]
  4044fe:	add    rsi,r13
  404501:	lea    rdi,[rsi+rbx*1]
  404505:	call   403750 <memmove@plt>
  40450a:	add    r13,QWORD PTR [r12]
  40450e:	mov    rdi,r13
  404511:	mov    rsi,r15
  404514:	mov    rdx,rbx
  404517:	call   4034e0 <memcpy@plt>
  40451c:	add    QWORD PTR [r12+0x8],rbx
  404521:	mov    rax,QWORD PTR fs:0x28
  40452a:	cmp    rax,QWORD PTR [rsp]
  40452e:	jne    404542 <isspace@plt+0xc32>
  404530:	mov    eax,r14d
  404533:	add    rsp,0x8
  404537:	pop    rbx
  404538:	pop    r12
  40453a:	pop    r13
  40453c:	pop    r14
  40453e:	pop    r15
  404540:	pop    rbp
  404541:	ret    
  404542:	call   403280 <__stack_chk_fail@plt>
  404547:	nop    WORD PTR [rax+rax*1+0x0]
  404550:	push   rbx
  404551:	sub    rsp,0x10
  404555:	mov    rax,QWORD PTR fs:0x28
  40455e:	mov    QWORD PTR [rsp+0x8],rax
  404563:	test   rdi,rdi
  404566:	je     404583 <isspace@plt+0xc73>
  404568:	mov    rbx,rdi
  40456b:	mov    rdi,QWORD PTR [rdi]
  40456e:	call   4030d0 <free@plt>
  404573:	vxorps xmm0,xmm0,xmm0
  404577:	vmovups XMMWORD PTR [rbx],xmm0
  40457b:	mov    QWORD PTR [rbx+0x10],0x0
  404583:	mov    rax,QWORD PTR fs:0x28
  40458c:	cmp    rax,QWORD PTR [rsp+0x8]
  404591:	jne    404599 <isspace@plt+0xc89>
  404593:	add    rsp,0x10
  404597:	pop    rbx
  404598:	ret    
  404599:	call   403280 <__stack_chk_fail@plt>
  40459e:	xchg   ax,ax
  4045a0:	push   rax
  4045a1:	mov    rax,QWORD PTR fs:0x28
  4045aa:	mov    QWORD PTR [rsp],rax
  4045ae:	mov    QWORD PTR [rdi+0x8],0x0
  4045b6:	mov    rax,QWORD PTR fs:0x28
  4045bf:	cmp    rax,QWORD PTR [rsp]
  4045c3:	jne    4045c7 <isspace@plt+0xcb7>
  4045c5:	pop    rax
  4045c6:	ret    
  4045c7:	call   403280 <__stack_chk_fail@plt>
  4045cc:	nop    DWORD PTR [rax+0x0]
  4045d0:	push   r15
  4045d2:	push   r14
  4045d4:	push   r12
  4045d6:	push   rbx
  4045d7:	push   rax
  4045d8:	mov    r12,rdx
  4045db:	mov    r15,rsi
  4045de:	mov    r14,rdi
  4045e1:	mov    rax,QWORD PTR fs:0x28
  4045ea:	mov    QWORD PTR [rsp],rax
  4045ee:	cmp    rdx,0x400
  4045f5:	mov    eax,0x400
  4045fa:	cmova  rax,rdx
  4045fe:	mov    rbx,QWORD PTR [rdi+0x10]
  404602:	cmp    rbx,rax
  404605:	jae    40462d <isspace@plt+0xd1d>
  404607:	add    rbx,rbx
  40460a:	cmp    rax,rbx
  40460d:	cmovae rbx,rax
  404611:	mov    rdi,QWORD PTR [r14]
  404614:	mov    rsi,rbx
  404617:	call   4036b0 <realloc@plt>
  40461c:	test   rax,rax
  40461f:	je     40465c <isspace@plt+0xd4c>
  404621:	mov    rdi,rax
  404624:	mov    QWORD PTR [r14+0x10],rbx
  404628:	mov    QWORD PTR [r14],rax
  40462b:	jmp    404630 <isspace@plt+0xd20>
  40462d:	mov    rdi,QWORD PTR [r14]
  404630:	mov    rsi,r15
  404633:	mov    rdx,r12
  404636:	call   403750 <memmove@plt>
  40463b:	mov    QWORD PTR [r14+0x8],r12
  40463f:	mov    al,0x1
  404641:	mov    rcx,QWORD PTR fs:0x28
  40464a:	cmp    rcx,QWORD PTR [rsp]
  40464e:	jne    404660 <isspace@plt+0xd50>
  404650:	add    rsp,0x8
  404654:	pop    rbx
  404655:	pop    r12
  404657:	pop    r14
  404659:	pop    r15
  40465b:	ret    
  40465c:	xor    eax,eax
  40465e:	jmp    404641 <isspace@plt+0xd31>
  404660:	call   403280 <__stack_chk_fail@plt>
  404665:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40466f:	nop
  404670:	push   r15
  404672:	push   r14
  404674:	push   r12
  404676:	push   rbx
  404677:	push   rax
  404678:	mov    r14,rsi
  40467b:	mov    r15,rdi
  40467e:	mov    rax,QWORD PTR fs:0x28
  404687:	mov    QWORD PTR [rsp],rax
  40468b:	mov    rdi,rsi
  40468e:	call   403250 <strlen@plt>
  404693:	mov    r12,rax
  404696:	add    r12,0x1
  40469a:	cmp    r12,0x400
  4046a1:	mov    eax,0x400
  4046a6:	cmova  rax,r12
  4046aa:	mov    rbx,QWORD PTR [r15+0x10]
  4046ae:	cmp    rbx,rax
  4046b1:	jae    4046d9 <isspace@plt+0xdc9>
  4046b3:	add    rbx,rbx
  4046b6:	cmp    rax,rbx
  4046b9:	cmovae rbx,rax
  4046bd:	mov    rdi,QWORD PTR [r15]
  4046c0:	mov    rsi,rbx
  4046c3:	call   4036b0 <realloc@plt>
  4046c8:	test   rax,rax
  4046cb:	je     404708 <isspace@plt+0xdf8>
  4046cd:	mov    rdi,rax
  4046d0:	mov    QWORD PTR [r15+0x10],rbx
  4046d4:	mov    QWORD PTR [r15],rax
  4046d7:	jmp    4046dc <isspace@plt+0xdcc>
  4046d9:	mov    rdi,QWORD PTR [r15]
  4046dc:	mov    rsi,r14
  4046df:	mov    rdx,r12
  4046e2:	call   403750 <memmove@plt>
  4046e7:	mov    QWORD PTR [r15+0x8],r12
  4046eb:	mov    al,0x1
  4046ed:	mov    rcx,QWORD PTR fs:0x28
  4046f6:	cmp    rcx,QWORD PTR [rsp]
  4046fa:	jne    40470c <isspace@plt+0xdfc>
  4046fc:	add    rsp,0x8
  404700:	pop    rbx
  404701:	pop    r12
  404703:	pop    r14
  404705:	pop    r15
  404707:	ret    
  404708:	xor    eax,eax
  40470a:	jmp    4046ed <isspace@plt+0xddd>
  40470c:	call   403280 <__stack_chk_fail@plt>
  404711:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40471b:	nop    DWORD PTR [rax+rax*1+0x0]
  404720:	push   rbp
  404721:	push   r14
  404723:	push   rbx
  404724:	sub    rsp,0x10
  404728:	mov    rax,QWORD PTR fs:0x28
  404731:	mov    QWORD PTR [rsp+0x8],rax
  404736:	mov    bpl,0x1
  404739:	test   rdx,rdx
  40473c:	je     404776 <isspace@plt+0xe66>
  40473e:	mov    rbx,rdx
  404741:	mov    rax,rsi
  404744:	not    rax
  404747:	cmp    rax,rdx
  40474a:	jb     40475c <isspace@plt+0xe4c>
  40474c:	mov    r14,rdi
  40474f:	lea    rax,[rbx+rsi*1]
  404753:	mov    rdx,QWORD PTR [rdi+0x8]
  404757:	sub    rdx,rax
  40475a:	jae    404760 <isspace@plt+0xe50>
  40475c:	xor    ebp,ebp
  40475e:	jmp    404776 <isspace@plt+0xe66>
  404760:	add    rsi,QWORD PTR [r14]
  404763:	lea    rax,[rsi+rbx*1]
  404767:	mov    rdi,rsi
  40476a:	mov    rsi,rax
  40476d:	call   403750 <memmove@plt>
  404772:	sub    QWORD PTR [r14+0x8],rbx
  404776:	mov    rax,QWORD PTR fs:0x28
  40477f:	cmp    rax,QWORD PTR [rsp+0x8]
  404784:	jne    404791 <isspace@plt+0xe81>
  404786:	mov    eax,ebp
  404788:	add    rsp,0x10
  40478c:	pop    rbx
  40478d:	pop    r14
  40478f:	pop    rbp
  404790:	ret    
  404791:	call   403280 <__stack_chk_fail@plt>
  404796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047a0:	push   rbp
  4047a1:	push   r15
  4047a3:	push   r14
  4047a5:	push   r13
  4047a7:	push   r12
  4047a9:	push   rbx
  4047aa:	push   rax
  4047ab:	mov    r15,rdx
  4047ae:	mov    r13,rdi
  4047b1:	mov    rax,QWORD PTR fs:0x28
  4047ba:	mov    QWORD PTR [rsp],rax
  4047be:	test   rsi,rsi
  4047c1:	je     4047f6 <isspace@plt+0xee6>
  4047c3:	mov    rbp,rsi
  4047c6:	mov    rbx,QWORD PTR [r13+0x8]
  4047ca:	cmp    rbx,rsi
  4047cd:	jne    404891 <isspace@plt+0xf81>
  4047d3:	mov    rdi,r13
  4047d6:	mov    rsi,r15
  4047d9:	call   404960 <isspace@plt+0x1050>
  4047de:	mov    rcx,QWORD PTR fs:0x28
  4047e7:	cmp    rcx,QWORD PTR [rsp]
  4047eb:	je     4048cd <isspace@plt+0xfbd>
  4047f1:	jmp    404958 <isspace@plt+0x1048>
  4047f6:	mov    rdi,r15
  4047f9:	call   403250 <strlen@plt>
  4047fe:	mov    rdx,QWORD PTR [r13+0x8]
  404802:	xor    ebp,ebp
  404804:	test   rdx,rdx
  404807:	sete   bpl
  40480b:	mov    r14b,0x1
  40480e:	add    rbp,rax
  404811:	je     4048b7 <isspace@plt+0xfa7>
  404817:	mov    rax,rdx
  40481a:	not    rax
  40481d:	cmp    rbp,rax
  404820:	ja     4048b4 <isspace@plt+0xfa4>
  404826:	lea    rcx,[rdx+rbp*1]
  40482a:	cmp    rcx,0x400
  404831:	mov    eax,0x400
  404836:	cmova  rax,rcx
  40483a:	mov    rbx,QWORD PTR [r13+0x10]
  40483e:	cmp    rbx,rax
  404841:	jae    40486a <isspace@plt+0xf5a>
  404843:	add    rbx,rbx
  404846:	cmp    rax,rbx
  404849:	cmovae rbx,rax
  40484d:	mov    rdi,QWORD PTR [r13+0x0]
  404851:	mov    rsi,rbx
  404854:	call   4036b0 <realloc@plt>
  404859:	test   rax,rax
  40485c:	je     4048b4 <isspace@plt+0xfa4>
  40485e:	mov    QWORD PTR [r13+0x10],rbx
  404862:	mov    QWORD PTR [r13+0x0],rax
  404866:	mov    rdx,QWORD PTR [r13+0x8]
  40486a:	test   rdx,rdx
  40486d:	je     40487c <isspace@plt+0xf6c>
  40486f:	mov    rsi,QWORD PTR [r13+0x0]
  404873:	lea    rdi,[rsi+rbp*1]
  404877:	call   403750 <memmove@plt>
  40487c:	mov    rdi,QWORD PTR [r13+0x0]
  404880:	mov    rsi,r15
  404883:	mov    rdx,rbp
  404886:	call   4034e0 <memcpy@plt>
  40488b:	add    QWORD PTR [r13+0x8],rbp
  40488f:	jmp    4048b7 <isspace@plt+0xfa7>
  404891:	mov    rdi,r15
  404894:	call   403250 <strlen@plt>
  404899:	cmp    rbx,rbp
  40489c:	jb     4048b4 <isspace@plt+0xfa4>
  40489e:	mov    r12,rax
  4048a1:	mov    r14b,0x1
  4048a4:	test   rax,rax
  4048a7:	je     4048b7 <isspace@plt+0xfa7>
  4048a9:	mov    rax,rbx
  4048ac:	not    rax
  4048af:	cmp    r12,rax
  4048b2:	jbe    4048dc <isspace@plt+0xfcc>
  4048b4:	xor    r14d,r14d
  4048b7:	mov    rax,QWORD PTR fs:0x28
  4048c0:	cmp    rax,QWORD PTR [rsp]
  4048c4:	jne    404958 <isspace@plt+0x1048>
  4048ca:	mov    eax,r14d
  4048cd:	add    rsp,0x8
  4048d1:	pop    rbx
  4048d2:	pop    r12
  4048d4:	pop    r13
  4048d6:	pop    r14
  4048d8:	pop    r15
  4048da:	pop    rbp
  4048db:	ret    
  4048dc:	lea    rcx,[r12+rbx*1]
  4048e0:	cmp    rcx,0x400
  4048e7:	mov    eax,0x400
  4048ec:	cmova  rax,rcx
  4048f0:	mov    rcx,QWORD PTR [r13+0x10]
  4048f4:	cmp    rcx,rax
  4048f7:	jae    404923 <isspace@plt+0x1013>
  4048f9:	add    rcx,rcx
  4048fc:	cmp    rax,rcx
  4048ff:	cmovae rcx,rax
  404903:	mov    rdi,QWORD PTR [r13+0x0]
  404907:	mov    rbx,rcx
  40490a:	mov    rsi,rcx
  40490d:	call   4036b0 <realloc@plt>
  404912:	test   rax,rax
  404915:	je     4048b4 <isspace@plt+0xfa4>
  404917:	mov    QWORD PTR [r13+0x10],rbx
  40491b:	mov    QWORD PTR [r13+0x0],rax
  40491f:	mov    rbx,QWORD PTR [r13+0x8]
  404923:	sub    rbx,rbp
  404926:	je     40493d <isspace@plt+0x102d>
  404928:	mov    rsi,QWORD PTR [r13+0x0]
  40492c:	add    rsi,rbp
  40492f:	mov    rdi,r12
  404932:	add    rdi,rsi
  404935:	mov    rdx,rbx
  404938:	call   403750 <memmove@plt>
  40493d:	add    rbp,QWORD PTR [r13+0x0]
  404941:	mov    rdi,rbp
  404944:	mov    rsi,r15
  404947:	mov    rdx,r12
  40494a:	call   4034e0 <memcpy@plt>
  40494f:	add    QWORD PTR [r13+0x8],r12
  404953:	jmp    4048b7 <isspace@plt+0xfa7>
  404958:	call   403280 <__stack_chk_fail@plt>
  40495d:	nop    DWORD PTR [rax]
  404960:	push   rbp
  404961:	push   r15
  404963:	push   r14
  404965:	push   r13
  404967:	push   r12
  404969:	push   rbx
  40496a:	push   rax
  40496b:	mov    r15,rsi
  40496e:	mov    r14,rdi
  404971:	mov    rax,QWORD PTR fs:0x28
  40497a:	mov    QWORD PTR [rsp],rax
  40497e:	mov    rbx,QWORD PTR [rdi+0x8]
  404982:	test   rbx,rbx
  404985:	je     404997 <isspace@plt+0x1087>
  404987:	mov    rax,QWORD PTR [r14]
  40498a:	xor    ebp,ebp
  40498c:	cmp    BYTE PTR [rax+rbx*1-0x1],0x0
  404991:	sete   bpl
  404995:	jmp    404999 <isspace@plt+0x1089>
  404997:	xor    ebp,ebp
  404999:	sub    rbx,rbp
  40499c:	mov    QWORD PTR [r14+0x8],rbx
  4049a0:	mov    rdi,r15
  4049a3:	call   403250 <strlen@plt>
  4049a8:	mov    r12,rax
  4049ab:	add    r12,0x1
  4049af:	je     4049c6 <isspace@plt+0x10b6>
  4049b1:	mov    rax,rbx
  4049b4:	not    rax
  4049b7:	cmp    r12,rax
  4049ba:	jbe    4049ca <isspace@plt+0x10ba>
  4049bc:	add    rbx,rbp
  4049bf:	xor    eax,eax
  4049c1:	mov    r12,rbx
  4049c4:	jmp    404a41 <isspace@plt+0x1131>
  4049c6:	mov    al,0x1
  4049c8:	jmp    404a45 <isspace@plt+0x1135>
  4049ca:	lea    rcx,[r12+rbx*1]
  4049ce:	cmp    rcx,0x400
  4049d5:	mov    eax,0x400
  4049da:	cmova  rax,rcx
  4049de:	mov    r13,QWORD PTR [r14+0x10]
  4049e2:	cmp    r13,rax
  4049e5:	jae    404a13 <isspace@plt+0x1103>
  4049e7:	add    r13,r13
  4049ea:	cmp    rax,r13
  4049ed:	cmovae r13,rax
  4049f1:	mov    rdi,QWORD PTR [r14]
  4049f4:	mov    rsi,r13
  4049f7:	call   4036b0 <realloc@plt>
  4049fc:	test   rax,rax
  4049ff:	je     404a63 <isspace@plt+0x1153>
  404a01:	mov    QWORD PTR [r14+0x10],r13
  404a05:	mov    QWORD PTR [r14],rax
  404a08:	mov    rdx,QWORD PTR [r14+0x8]
  404a0c:	sub    rdx,rbx
  404a0f:	jne    404a1b <isspace@plt+0x110b>
  404a11:	jmp    404a2a <isspace@plt+0x111a>
  404a13:	mov    rdx,rbx
  404a16:	sub    rdx,rbx
  404a19:	je     404a2a <isspace@plt+0x111a>
  404a1b:	mov    rsi,QWORD PTR [r14]
  404a1e:	add    rsi,rbx
  404a21:	lea    rdi,[rsi+r12*1]
  404a25:	call   403750 <memmove@plt>
  404a2a:	add    rbx,QWORD PTR [r14]
  404a2d:	mov    rdi,rbx
  404a30:	mov    rsi,r15
  404a33:	mov    rdx,r12
  404a36:	call   4034e0 <memcpy@plt>
  404a3b:	add    r12,QWORD PTR [r14+0x8]
  404a3f:	mov    al,0x1
  404a41:	mov    QWORD PTR [r14+0x8],r12
  404a45:	mov    rcx,QWORD PTR fs:0x28
  404a4e:	cmp    rcx,QWORD PTR [rsp]
  404a52:	jne    404a6c <isspace@plt+0x115c>
  404a54:	add    rsp,0x8
  404a58:	pop    rbx
  404a59:	pop    r12
  404a5b:	pop    r13
  404a5d:	pop    r14
  404a5f:	pop    r15
  404a61:	pop    rbp
  404a62:	ret    
  404a63:	mov    rbx,QWORD PTR [r14+0x8]
  404a67:	jmp    4049bc <isspace@plt+0x10ac>
  404a6c:	call   403280 <__stack_chk_fail@plt>
  404a71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a7b:	nop    DWORD PTR [rax+rax*1+0x0]
  404a80:	sub    rsp,0xd8
  404a87:	test   al,al
  404a89:	je     404ac4 <isspace@plt+0x11b4>
  404a8b:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  404a91:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  404a97:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  404a9d:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  404aa3:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  404aa9:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  404ab2:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  404abb:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  404ac4:	mov    QWORD PTR [rsp+0x28],r9
  404ac9:	mov    QWORD PTR [rsp+0x20],r8
  404ace:	mov    QWORD PTR [rsp+0x18],rcx
  404ad3:	mov    QWORD PTR [rsp+0x10],rdx
  404ad8:	mov    rax,QWORD PTR fs:0x28
  404ae1:	mov    QWORD PTR [rsp+0xd0],rax
  404ae9:	mov    rax,rsp
  404aec:	mov    QWORD PTR [rsp+0xc0],rax
  404af4:	lea    rax,[rsp+0xe0]
  404afc:	mov    QWORD PTR [rsp+0xb8],rax
  404b04:	movabs rax,0x3000000010
  404b0e:	mov    QWORD PTR [rsp+0xb0],rax
  404b16:	lea    rdx,[rsp+0xb0]
  404b1e:	call   404b50 <isspace@plt+0x1240>
  404b23:	mov    rcx,QWORD PTR fs:0x28
  404b2c:	cmp    rcx,QWORD PTR [rsp+0xd0]
  404b34:	jne    404b3e <isspace@plt+0x122e>
  404b36:	add    rsp,0xd8
  404b3d:	ret    
  404b3e:	call   403280 <__stack_chk_fail@plt>
  404b43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b4d:	nop    DWORD PTR [rax]
  404b50:	push   r15
  404b52:	push   r14
  404b54:	push   r13
  404b56:	push   r12
  404b58:	push   rbx
  404b59:	sub    rsp,0x20
  404b5d:	mov    rax,rdx
  404b60:	mov    r14,rsi
  404b63:	mov    r15,rdi
  404b66:	mov    rcx,QWORD PTR fs:0x28
  404b6f:	mov    QWORD PTR [rsp+0x18],rcx
  404b74:	mov    rcx,QWORD PTR [rdx+0x10]
  404b78:	mov    QWORD PTR [rsp+0x10],rcx
  404b7d:	vmovups xmm0,XMMWORD PTR [rdx]
  404b81:	vmovaps XMMWORD PTR [rsp],xmm0
  404b86:	xor    edi,edi
  404b88:	xor    esi,esi
  404b8a:	mov    edx,0x1
  404b8f:	mov    rcx,0xffffffffffffffff
  404b96:	mov    r8,r14
  404b99:	mov    r9,rax
  404b9c:	call   4036a0 <__vsnprintf_chk@plt>
  404ba1:	cmp    eax,0xffffffff
  404ba4:	je     404bbf <isspace@plt+0x12af>
  404ba6:	mov    r13d,eax
  404ba9:	lea    eax,[r13+0x1]
  404bad:	movsxd r12,eax
  404bb0:	mov    rax,QWORD PTR [r15+0x8]
  404bb4:	mov    rcx,rax
  404bb7:	not    rcx
  404bba:	cmp    rcx,r12
  404bbd:	jae    404bc6 <isspace@plt+0x12b6>
  404bbf:	xor    eax,eax
  404bc1:	jmp    404c53 <isspace@plt+0x1343>
  404bc6:	lea    rdx,[rax+r12*1]
  404bca:	cmp    rdx,0x400
  404bd1:	mov    ecx,0x400
  404bd6:	cmova  rcx,rdx
  404bda:	mov    rbx,QWORD PTR [r15+0x10]
  404bde:	cmp    rbx,rcx
  404be1:	jae    404c08 <isspace@plt+0x12f8>
  404be3:	add    rbx,rbx
  404be6:	cmp    rcx,rbx
  404be9:	cmovae rbx,rcx
  404bed:	mov    rdi,QWORD PTR [r15]
  404bf0:	mov    rsi,rbx
  404bf3:	call   4036b0 <realloc@plt>
  404bf8:	test   rax,rax
  404bfb:	je     404bbf <isspace@plt+0x12af>
  404bfd:	mov    QWORD PTR [r15+0x10],rbx
  404c01:	mov    QWORD PTR [r15],rax
  404c04:	mov    rax,QWORD PTR [r15+0x8]
  404c08:	mov    rdi,QWORD PTR [r15]
  404c0b:	xor    ebx,ebx
  404c0d:	test   rax,rax
  404c10:	je     404c1a <isspace@plt+0x130a>
  404c12:	cmp    BYTE PTR [rdi+rax*1-0x1],0x0
  404c17:	sete   bl
  404c1a:	sub    rax,rbx
  404c1d:	mov    QWORD PTR [r15+0x8],rax
  404c21:	add    rdi,rax
  404c24:	mov    r9,rsp
  404c27:	mov    edx,0x1
  404c2c:	mov    rcx,0xffffffffffffffff
  404c33:	mov    rsi,r12
  404c36:	mov    r8,r14
  404c39:	call   4036a0 <__vsnprintf_chk@plt>
  404c3e:	movsxd rcx,r13d
  404c41:	add    rcx,0x1
  404c45:	cmp    eax,r13d
  404c48:	sete   al
  404c4b:	cmovne rcx,rbx
  404c4f:	add    QWORD PTR [r15+0x8],rcx
  404c53:	mov    rcx,QWORD PTR fs:0x28
  404c5c:	cmp    rcx,QWORD PTR [rsp+0x18]
  404c61:	jne    404c71 <isspace@plt+0x1361>
  404c63:	add    rsp,0x20
  404c67:	pop    rbx
  404c68:	pop    r12
  404c6a:	pop    r13
  404c6c:	pop    r14
  404c6e:	pop    r15
  404c70:	ret    
  404c71:	call   403280 <__stack_chk_fail@plt>
  404c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c80:	sub    rsp,0xd8
  404c87:	test   al,al
  404c89:	je     404cc4 <isspace@plt+0x13b4>
  404c8b:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  404c91:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  404c97:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  404c9d:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  404ca3:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  404ca9:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  404cb2:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  404cbb:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  404cc4:	mov    QWORD PTR [rsp+0x28],r9
  404cc9:	mov    QWORD PTR [rsp+0x20],r8
  404cce:	mov    QWORD PTR [rsp+0x18],rcx
  404cd3:	mov    QWORD PTR [rsp+0x10],rdx
  404cd8:	mov    rax,QWORD PTR fs:0x28
  404ce1:	mov    QWORD PTR [rsp+0xd0],rax
  404ce9:	mov    QWORD PTR [rdi+0x8],0x0
  404cf1:	mov    rax,rsp
  404cf4:	mov    QWORD PTR [rsp+0xc0],rax
  404cfc:	lea    rax,[rsp+0xe0]
  404d04:	mov    QWORD PTR [rsp+0xb8],rax
  404d0c:	movabs rax,0x3000000010
  404d16:	mov    QWORD PTR [rsp+0xb0],rax
  404d1e:	lea    rdx,[rsp+0xb0]
  404d26:	call   404b50 <isspace@plt+0x1240>
  404d2b:	mov    rcx,QWORD PTR fs:0x28
  404d34:	cmp    rcx,QWORD PTR [rsp+0xd0]
  404d3c:	jne    404d46 <isspace@plt+0x1436>
  404d3e:	add    rsp,0xd8
  404d45:	ret    
  404d46:	call   403280 <__stack_chk_fail@plt>
  404d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  404d50:	push   rax
  404d51:	mov    rax,QWORD PTR fs:0x28
  404d5a:	mov    QWORD PTR [rsp],rax
  404d5e:	mov    rcx,QWORD PTR [rdi+0x8]
  404d62:	test   rcx,rcx
  404d65:	je     404d88 <isspace@plt+0x1478>
  404d67:	mov    rdx,QWORD PTR [rdi]
  404d6a:	lea    rax,[rcx-0x1]
  404d6e:	cmp    BYTE PTR [rdx+rcx*1-0x1],0x0
  404d73:	cmovne rax,rcx
  404d77:	mov    rcx,QWORD PTR fs:0x28
  404d80:	cmp    rcx,QWORD PTR [rsp]
  404d84:	jne    404d9b <isspace@plt+0x148b>
  404d86:	pop    rcx
  404d87:	ret    
  404d88:	mov    rax,QWORD PTR fs:0x28
  404d91:	cmp    rax,QWORD PTR [rsp]
  404d95:	jne    404d9b <isspace@plt+0x148b>
  404d97:	xor    eax,eax
  404d99:	pop    rcx
  404d9a:	ret    
  404d9b:	call   403280 <__stack_chk_fail@plt>
  404da0:	push   rax
  404da1:	mov    rax,QWORD PTR fs:0x28
  404daa:	mov    QWORD PTR [rsp],rax
  404dae:	mov    rax,QWORD PTR [rdi+0x8]
  404db2:	mov    rcx,QWORD PTR fs:0x28
  404dbb:	cmp    rcx,QWORD PTR [rsp]
  404dbf:	jne    404dc3 <isspace@plt+0x14b3>
  404dc1:	pop    rcx
  404dc2:	ret    
  404dc3:	call   403280 <__stack_chk_fail@plt>
  404dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  404dd0:	push   r15
  404dd2:	push   r14
  404dd4:	push   r12
  404dd6:	push   rbx
  404dd7:	push   rax
  404dd8:	mov    rax,QWORD PTR fs:0x28
  404de1:	mov    QWORD PTR [rsp],rax
  404de5:	mov    rbx,QWORD PTR [rdi+0x8]
  404de9:	lea    r14,[rip+0x2cc93]        # 431a83 <isspace@plt+0x2e173>
  404df0:	test   rbx,rbx
  404df3:	je     404e99 <isspace@plt+0x1589>
  404df9:	mov    r12,rdi
  404dfc:	mov    rsi,QWORD PTR [rdi]
  404dff:	test   rsi,rsi
  404e02:	je     404e65 <isspace@plt+0x1555>
  404e04:	cmp    BYTE PTR [rsi+rbx*1-0x1],0x0
  404e09:	je     404e6a <isspace@plt+0x155a>
  404e0b:	cmp    rbx,0xffffffffffffffff
  404e0f:	je     404e99 <isspace@plt+0x1589>
  404e15:	lea    rcx,[rbx+0x1]
  404e19:	cmp    rcx,0x400
  404e20:	mov    eax,0x400
  404e25:	cmova  rax,rcx
  404e29:	mov    r15,QWORD PTR [r12+0x10]
  404e2e:	cmp    r15,rax
  404e31:	jae    404e6f <isspace@plt+0x155f>
  404e33:	add    r15,r15
  404e36:	cmp    rax,r15
  404e39:	cmovae r15,rax
  404e3d:	mov    rdi,rsi
  404e40:	mov    rsi,r15
  404e43:	call   4036b0 <realloc@plt>
  404e48:	test   rax,rax
  404e4b:	je     404e99 <isspace@plt+0x1589>
  404e4d:	mov    rsi,rax
  404e50:	mov    QWORD PTR [r12+0x10],r15
  404e55:	mov    QWORD PTR [r12],rax
  404e59:	mov    rdx,QWORD PTR [r12+0x8]
  404e5e:	sub    rdx,rbx
  404e61:	jne    404e77 <isspace@plt+0x1567>
  404e63:	jmp    404e8b <isspace@plt+0x157b>
  404e65:	xor    r14d,r14d
  404e68:	jmp    404e99 <isspace@plt+0x1589>
  404e6a:	mov    r14,rsi
  404e6d:	jmp    404e99 <isspace@plt+0x1589>
  404e6f:	mov    rdx,rbx
  404e72:	sub    rdx,rbx
  404e75:	je     404e8b <isspace@plt+0x157b>
  404e77:	lea    rdi,[rsi+rbx*1]
  404e7b:	add    rdi,0x1
  404e7f:	add    rsi,rbx
  404e82:	call   403750 <memmove@plt>
  404e87:	mov    rsi,QWORD PTR [r12]
  404e8b:	mov    BYTE PTR [rsi+rbx*1],0x0
  404e8f:	add    QWORD PTR [r12+0x8],0x1
  404e95:	mov    r14,QWORD PTR [r12]
  404e99:	mov    rax,QWORD PTR fs:0x28
  404ea2:	cmp    rax,QWORD PTR [rsp]
  404ea6:	jne    404eb7 <isspace@plt+0x15a7>
  404ea8:	mov    rax,r14
  404eab:	add    rsp,0x8
  404eaf:	pop    rbx
  404eb0:	pop    r12
  404eb2:	pop    r14
  404eb4:	pop    r15
  404eb6:	ret    
  404eb7:	call   403280 <__stack_chk_fail@plt>
  404ebc:	nop    DWORD PTR [rax+0x0]
  404ec0:	push   rax
  404ec1:	mov    rax,QWORD PTR fs:0x28
  404eca:	mov    QWORD PTR [rsp],rax
  404ece:	mov    rax,QWORD PTR [rdi]
  404ed1:	vxorps xmm0,xmm0,xmm0
  404ed5:	vmovups XMMWORD PTR [rdi],xmm0
  404ed9:	mov    QWORD PTR [rdi+0x10],0x0
  404ee1:	mov    rcx,QWORD PTR fs:0x28
  404eea:	cmp    rcx,QWORD PTR [rsp]
  404eee:	jne    404ef2 <isspace@plt+0x15e2>
  404ef0:	pop    rcx
  404ef1:	ret    
  404ef2:	call   403280 <__stack_chk_fail@plt>
  404ef7:	nop    WORD PTR [rax+rax*1+0x0]
  404f00:	push   rax
  404f01:	mov    rax,QWORD PTR fs:0x28
  404f0a:	mov    QWORD PTR [rsp],rax
  404f0e:	mov    ecx,DWORD PTR [rsi]
  404f10:	cmp    ecx,0x80
  404f16:	jae    404f21 <isspace@plt+0x1611>
  404f18:	mov    BYTE PTR [rdi],cl
  404f1a:	mov    eax,0x1
  404f1f:	jmp    404f7d <isspace@plt+0x166d>
  404f21:	cmp    ecx,0x800
  404f27:	jae    404f44 <isspace@plt+0x1634>
  404f29:	mov    eax,ecx
  404f2b:	shr    eax,0x6
  404f2e:	and    al,0x1f
  404f30:	or     al,0xc0
  404f32:	mov    BYTE PTR [rdi],al
  404f34:	and    cl,0x3f
  404f37:	or     cl,0x80
  404f3a:	mov    BYTE PTR [rdi+0x1],cl
  404f3d:	mov    eax,0x2
  404f42:	jmp    404f7d <isspace@plt+0x166d>
  404f44:	cmp    ecx,0xd800
  404f4a:	jae    404f73 <isspace@plt+0x1663>
  404f4c:	mov    eax,ecx
  404f4e:	shr    eax,0xc
  404f51:	and    al,0xf
  404f53:	or     al,0xe0
  404f55:	mov    BYTE PTR [rdi],al
  404f57:	mov    eax,ecx
  404f59:	shr    eax,0x6
  404f5c:	and    al,0x3f
  404f5e:	or     al,0x80
  404f60:	mov    BYTE PTR [rdi+0x1],al
  404f63:	and    cl,0x3f
  404f66:	or     cl,0x80
  404f69:	mov    BYTE PTR [rdi+0x2],cl
  404f6c:	mov    eax,0x3
  404f71:	jmp    404f7d <isspace@plt+0x166d>
  404f73:	xor    eax,eax
  404f75:	cmp    ecx,0xe000
  404f7b:	jae    404f8e <isspace@plt+0x167e>
  404f7d:	mov    rcx,QWORD PTR fs:0x28
  404f86:	cmp    rcx,QWORD PTR [rsp]
  404f8a:	jne    404fd7 <isspace@plt+0x16c7>
  404f8c:	pop    rcx
  404f8d:	ret    
  404f8e:	cmp    ecx,0xfffe
  404f94:	jb     404f4c <isspace@plt+0x163c>
  404f96:	lea    edx,[rcx-0x10000]
  404f9c:	cmp    edx,0x100000
  404fa2:	jae    404f7d <isspace@plt+0x166d>
  404fa4:	mov    eax,ecx
  404fa6:	shr    eax,0x12
  404fa9:	and    al,0x7
  404fab:	or     al,0xf0
  404fad:	mov    BYTE PTR [rdi],al
  404faf:	mov    eax,ecx
  404fb1:	shr    eax,0xc
  404fb4:	and    al,0x3f
  404fb6:	or     al,0x80
  404fb8:	mov    BYTE PTR [rdi+0x1],al
  404fbb:	mov    eax,ecx
  404fbd:	shr    eax,0x6
  404fc0:	and    al,0x3f
  404fc2:	or     al,0x80
  404fc4:	mov    BYTE PTR [rdi+0x2],al
  404fc7:	and    cl,0x3f
  404fca:	or     cl,0x80
  404fcd:	mov    BYTE PTR [rdi+0x3],cl
  404fd0:	mov    eax,0x4
  404fd5:	jmp    404f7d <isspace@plt+0x166d>
  404fd7:	call   403280 <__stack_chk_fail@plt>
  404fdc:	nop    DWORD PTR [rax+0x0]
  404fe0:	push   rbp
  404fe1:	mov    rbp,rsp
  404fe4:	push   r15
  404fe6:	push   r14
  404fe8:	push   r13
  404fea:	push   r12
  404fec:	push   rbx
  404fed:	and    rsp,0xffffffffffffffe0
  404ff1:	sub    rsp,0x11e0
  404ff8:	mov    r12,rsi
  404ffb:	mov    r14d,edi
  404ffe:	mov    rax,QWORD PTR fs:0x28
  405007:	mov    QWORD PTR [rsp+0x11c0],rax
  40500f:	vmovups ymm0,YMMWORD PTR [rip+0x384b9]        # 43d4d0 <isspace@plt+0x39bc0>
  405017:	vmovups YMMWORD PTR [rsp+0x80],ymm0
  405020:	vmovups ymm0,YMMWORD PTR [rip+0x38498]        # 43d4c0 <isspace@plt+0x39bb0>
  405028:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  40502e:	vmovups ymm0,YMMWORD PTR [rip+0x3846a]        # 43d4a0 <isspace@plt+0x39b90>
  405036:	vmovups YMMWORD PTR [rsp+0x50],ymm0
  40503c:	vmovups ymm0,YMMWORD PTR [rip+0x3843c]        # 43d480 <isspace@plt+0x39b70>
  405044:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  40504a:	vzeroupper 
  40504d:	call   417a40 <isspace@plt+0x14130>
  405052:	lea    rsi,[rsp+0x30]
  405057:	mov    rdi,rax
  40505a:	call   422140 <isspace@plt+0x1e830>
  40505f:	mov    QWORD PTR [rip+0x3e322],rax        # 443388 <isspace@plt+0x3fa78>
  405066:	test   rax,rax
  405069:	je     405552 <isspace@plt+0x1c42>
  40506f:	lea    r15,[rip+0x384aa]        # 43d520 <isspace@plt+0x39c10>
  405076:	mov    rdi,rax
  405079:	mov    rsi,r15
  40507c:	call   422a00 <isspace@plt+0x1f0f0>
  405081:	test   al,al
  405083:	je     4050b4 <isspace@plt+0x17a4>
  405085:	lea    r15,[rip+0x38494]        # 43d520 <isspace@plt+0x39c10>
  40508c:	xor    ebx,ebx
  40508e:	xchg   ax,ax
  405090:	add    rbx,0x1
  405094:	cmp    rbx,0xab
  40509b:	jae    4050cc <isspace@plt+0x17bc>
  40509d:	add    r15,0x20
  4050a1:	mov    rdi,QWORD PTR [rip+0x3e2e0]        # 443388 <isspace@plt+0x3fa78>
  4050a8:	mov    rsi,r15
  4050ab:	call   422a00 <isspace@plt+0x1f0f0>
  4050b0:	test   al,al
  4050b2:	jne    405090 <isspace@plt+0x1780>
  4050b4:	mov    rdi,QWORD PTR [rip+0x3e2cd]        # 443388 <isspace@plt+0x3fa78>
  4050bb:	mov    rdx,QWORD PTR [r15]
  4050be:	lea    rsi,[rip+0x27fe3]        # 42d0a8 <isspace@plt+0x29798>
  4050c5:	xor    eax,eax
  4050c7:	call   4235c0 <isspace@plt+0x1fcb0>
  4050cc:	mov    QWORD PTR [rsp+0x18],r12
  4050d1:	xor    r12d,r12d
  4050d4:	lea    r15,[rip+0x38415]        # 43d4f0 <isspace@plt+0x39be0>
  4050db:	nop    DWORD PTR [rax+rax*1+0x0]
  4050e0:	mov    r13,QWORD PTR [r15+r12*8]
  4050e4:	mov    rbx,QWORD PTR [r13+0x0]
  4050e8:	test   rbx,rbx
  4050eb:	jne    4050fd <isspace@plt+0x17ed>
  4050ed:	jmp    405140 <isspace@plt+0x1830>
  4050ef:	nop
  4050f0:	mov    rbx,QWORD PTR [r13+0x8]
  4050f4:	add    r13,0x8
  4050f8:	test   rbx,rbx
  4050fb:	je     405140 <isspace@plt+0x1830>
  4050fd:	mov    rcx,QWORD PTR [rbx]
  405100:	test   rcx,rcx
  405103:	je     4050f0 <isspace@plt+0x17e0>
  405105:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40510f:	nop
  405110:	mov    rdi,QWORD PTR [rip+0x3e271]        # 443388 <isspace@plt+0x3fa78>
  405117:	xor    edx,edx
  405119:	mov    esi,r12d
  40511c:	mov    r8,rbx
  40511f:	call   427a10 <isspace@plt+0x24100>
  405124:	mov    rcx,QWORD PTR [rbx+0x18]
  405128:	add    rbx,0x18
  40512c:	test   rcx,rcx
  40512f:	jne    405110 <isspace@plt+0x1800>
  405131:	jmp    4050f0 <isspace@plt+0x17e0>
  405133:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40513d:	nop    DWORD PTR [rax]
  405140:	add    r12,0x1
  405144:	cmp    r12,0x6
  405148:	jne    4050e0 <isspace@plt+0x17d0>
  40514a:	vxorps xmm0,xmm0,xmm0
  40514e:	vmovups YMMWORD PTR [rsp+0x1198],ymm0
  405157:	vmovaps YMMWORD PTR [rsp+0x1180],ymm0
  405160:	vmovaps YMMWORD PTR [rsp+0x1160],ymm0
  405169:	vmovaps YMMWORD PTR [rsp+0x1140],ymm0
  405172:	vmovaps YMMWORD PTR [rsp+0x1120],ymm0
  40517b:	lea    rdi,[rsp+0x1128]
  405183:	vzeroupper 
  405186:	call   4034f0 <sigfillset@plt>
  40518b:	mov    DWORD PTR [rsp+0x11a8],0x4
  405196:	lea    rax,[rip+0x553]        # 4056f0 <isspace@plt+0x1de0>
  40519d:	mov    QWORD PTR [rsp+0x1120],rax
  4051a5:	lea    rsi,[rsp+0x1120]
  4051ad:	mov    edi,0x7
  4051b2:	xor    edx,edx
  4051b4:	call   4031b0 <sigaction@plt>
  4051b9:	cmp    eax,0xffffffff
  4051bc:	je     40561a <isspace@plt+0x1d0a>
  4051c2:	lea    rsi,[rsp+0x1120]
  4051ca:	mov    edi,0x2
  4051cf:	xor    edx,edx
  4051d1:	call   4031b0 <sigaction@plt>
  4051d6:	cmp    eax,0xffffffff
  4051d9:	je     40561a <isspace@plt+0x1d0a>
  4051df:	lea    rsi,[rsp+0x1120]
  4051e7:	mov    edi,0x12
  4051ec:	xor    edx,edx
  4051ee:	call   4031b0 <sigaction@plt>
  4051f3:	cmp    eax,0xffffffff
  4051f6:	je     40561a <isspace@plt+0x1d0a>
  4051fc:	lea    rsi,[rsp+0x1120]
  405204:	mov    edi,0x1c
  405209:	xor    edx,edx
  40520b:	call   4031b0 <sigaction@plt>
  405210:	cmp    eax,0xffffffff
  405213:	je     40561a <isspace@plt+0x1d0a>
  405219:	lea    rsi,[rsp+0x1120]
  405221:	mov    edi,0xf
  405226:	xor    edx,edx
  405228:	call   4031b0 <sigaction@plt>
  40522d:	cmp    eax,0xffffffff
  405230:	je     40561a <isspace@plt+0x1d0a>
  405236:	lea    rsi,[rsp+0x1120]
  40523e:	mov    edi,0x1
  405243:	xor    edx,edx
  405245:	call   4031b0 <sigaction@plt>
  40524a:	cmp    eax,0xffffffff
  40524d:	je     40561a <isspace@plt+0x1d0a>
  405253:	mov    QWORD PTR [rsp+0x1120],0x1
  40525f:	lea    rsi,[rsp+0x1120]
  405267:	mov    edi,0xd
  40526c:	xor    edx,edx
  40526e:	call   4031b0 <sigaction@plt>
  405273:	cmp    eax,0xffffffff
  405276:	mov    r13,QWORD PTR [rsp+0x18]
  40527b:	je     405644 <isspace@plt+0x1d34>
  405281:	lea    rsi,[rsp+0x1120]
  405289:	mov    edi,0x3
  40528e:	xor    edx,edx
  405290:	call   4031b0 <sigaction@plt>
  405295:	cmp    eax,0xffffffff
  405298:	je     405644 <isspace@plt+0x1d34>
  40529e:	lea    rbx,[rsp+0x10a0]
  4052a6:	mov    rdi,rbx
  4052a9:	call   4034a0 <sigemptyset@plt>
  4052ae:	mov    esi,0x7
  4052b3:	mov    rdi,rbx
  4052b6:	call   4038c0 <sigaddset@plt>
  4052bb:	mov    esi,0x12
  4052c0:	mov    rdi,rbx
  4052c3:	call   4038c0 <sigaddset@plt>
  4052c8:	mov    esi,0x1c
  4052cd:	mov    rdi,rbx
  4052d0:	call   4038c0 <sigaddset@plt>
  4052d5:	mov    esi,0xf
  4052da:	mov    rdi,rbx
  4052dd:	call   4038c0 <sigaddset@plt>
  4052e2:	mov    esi,0x1
  4052e7:	mov    rdi,rbx
  4052ea:	call   4038c0 <sigaddset@plt>
  4052ef:	xor    edi,edi
  4052f1:	xor    edx,edx
  4052f3:	mov    rsi,rbx
  4052f6:	call   4030b0 <sigprocmask@plt>
  4052fb:	cmp    eax,0xffffffff
  4052fe:	je     4056d3 <isspace@plt+0x1dc3>
  405304:	cmp    r14d,0x2
  405308:	jl     4054ec <isspace@plt+0x1bdc>
  40530e:	movsxd rax,r14d
  405311:	mov    QWORD PTR [rsp+0x28],rax
  405316:	mov    ebx,0x1
  40531b:	lea    r12,[rip+0x27dfb]        # 42d11d <isspace@plt+0x2980d>
  405322:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40532c:	nop    DWORD PTR [rax+0x0]
  405330:	mov    r15,QWORD PTR [r13+rbx*8+0x0]
  405335:	cmp    BYTE PTR [r15],0x2d
  405339:	jne    40534e <isspace@plt+0x1a3e>
  40533b:	mov    rdi,r15
  40533e:	mov    rsi,r12
  405341:	call   403480 <strcmp@plt>
  405346:	test   eax,eax
  405348:	jne    405581 <isspace@plt+0x1c71>
  40534e:	add    rbx,0x1
  405352:	cmp    rbx,QWORD PTR [rsp+0x28]
  405357:	jl     405330 <isspace@plt+0x1a20>
  405359:	cmp    r14d,0x2
  40535d:	jl     4054ec <isspace@plt+0x1bdc>
  405363:	mov    r15d,0x1
  405369:	lea    r14,[rsp+0xa0]
  405371:	xor    r13d,r13d
  405374:	xor    r12d,r12d
  405377:	xor    ecx,ecx
  405379:	nop    DWORD PTR [rax+0x0]
  405380:	mov    rax,QWORD PTR [rsp+0x18]
  405385:	mov    rbx,QWORD PTR [rax+r15*8]
  405389:	mov    al,BYTE PTR [rbx]
  40538b:	test   r12b,0x1
  40538f:	jne    4053e0 <isspace@plt+0x1ad0>
  405391:	cmp    al,0x2d
  405393:	jne    4053e0 <isspace@plt+0x1ad0>
  405395:	mov    QWORD PTR [rsp+0x20],rcx
  40539a:	mov    rdi,rbx
  40539d:	lea    rsi,[rip+0x27d79]        # 42d11d <isspace@plt+0x2980d>
  4053a4:	call   403480 <strcmp@plt>
  4053a9:	test   eax,eax
  4053ab:	je     405421 <isspace@plt+0x1b11>
  4053ad:	mov    rdi,rbx
  4053b0:	lea    rsi,[rip+0x27d65]        # 42d11c <isspace@plt+0x2980c>
  4053b7:	call   403480 <strcmp@plt>
  4053bc:	test   eax,eax
  4053be:	jne    4054c0 <isspace@plt+0x1bb0>
  4053c4:	mov    r12b,0x1
  4053c7:	mov    rcx,QWORD PTR [rsp+0x20]
  4053cc:	jmp    4054db <isspace@plt+0x1bcb>
  4053d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053db:	nop    DWORD PTR [rax+rax*1+0x0]
  4053e0:	test   r12b,0x1
  4053e4:	jne    405400 <isspace@plt+0x1af0>
  4053e6:	cmp    al,0x2b
  4053e8:	jne    405400 <isspace@plt+0x1af0>
  4053ea:	mov    al,BYTE PTR [rbx+0x1]
  4053ed:	or     al,0x10
  4053ef:	xor    ecx,ecx
  4053f1:	cmp    al,0x3f
  4053f3:	sete   cl
  4053f6:	add    rcx,rbx
  4053f9:	jmp    4054db <isspace@plt+0x1bcb>
  4053fe:	xchg   ax,ax
  405400:	mov    QWORD PTR [rsp+0x20],rcx
  405405:	mov    rdi,QWORD PTR [rip+0x3df7c]        # 443388 <isspace@plt+0x3fa78>
  40540c:	mov    rsi,rbx
  40540f:	call   421da0 <isspace@plt+0x1e490>
  405414:	test   al,al
  405416:	jne    4054c0 <isspace@plt+0x1bb0>
  40541c:	jmp    40566e <isspace@plt+0x1d5e>
  405421:	mov    rdi,QWORD PTR [rip+0x3df60]        # 443388 <isspace@plt+0x3fa78>
  405428:	mov    esi,0x1
  40542d:	call   421e10 <isspace@plt+0x1e500>
  405432:	test   al,al
  405434:	je     405659 <isspace@plt+0x1d49>
  40543a:	mov    rdi,QWORD PTR [rip+0x3df47]        # 443388 <isspace@plt+0x3fa78>
  405441:	call   425d90 <isspace@plt+0x22480>
  405446:	mov    r13,rax
  405449:	jmp    405469 <isspace@plt+0x1b59>
  40544b:	nop    DWORD PTR [rax+rax*1+0x0]
  405450:	mov    rdi,r13
  405453:	call   410a90 <isspace@plt+0xd180>
  405458:	mov    rdi,r13
  40545b:	mov    rsi,rax
  40545e:	mov    rdx,r14
  405461:	mov    rcx,rbx
  405464:	call   40f140 <isspace@plt+0xb830>
  405469:	xor    edi,edi
  40546b:	mov    edx,0x1000
  405470:	mov    rsi,r14
  405473:	call   403420 <read@plt>
  405478:	mov    rbx,rax
  40547b:	test   rax,rax
  40547e:	jg     405450 <isspace@plt+0x1b40>
  405480:	cmp    rbx,0xffffffffffffffff
  405484:	je     4056a9 <isspace@plt+0x1d99>
  40548a:	mov    rdi,r13
  40548d:	call   40f820 <isspace@plt+0xbf10>
  405492:	mov    esi,0x2
  405497:	xor    eax,eax
  405499:	lea    rdi,[rip+0x27d13]        # 42d1b3 <isspace@plt+0x298a3>
  4054a0:	call   4037a0 <open@plt>
  4054a5:	cmp    eax,0xffffffff
  4054a8:	je     4056be <isspace@plt+0x1dae>
  4054ae:	mov    ebx,eax
  4054b0:	xor    esi,esi
  4054b2:	mov    edi,eax
  4054b4:	call   4032c0 <dup2@plt>
  4054b9:	mov    edi,ebx
  4054bb:	call   4033c0 <close@plt>
  4054c0:	mov    r13b,0x1
  4054c3:	mov    rsi,QWORD PTR [rsp+0x20]
  4054c8:	test   rsi,rsi
  4054cb:	je     4054d9 <isspace@plt+0x1bc9>
  4054cd:	mov    rdi,QWORD PTR [rip+0x3deb4]        # 443388 <isspace@plt+0x3fa78>
  4054d4:	call   429f20 <isspace@plt+0x26610>
  4054d9:	xor    ecx,ecx
  4054db:	add    r15,0x1
  4054df:	cmp    r15,QWORD PTR [rsp+0x28]
  4054e4:	jl     405380 <isspace@plt+0x1a70>
  4054ea:	jmp    4054f1 <isspace@plt+0x1be1>
  4054ec:	xor    ecx,ecx
  4054ee:	xor    r13d,r13d
  4054f1:	mov    rbx,rcx
  4054f4:	mov    rdi,QWORD PTR [rip+0x3de8d]        # 443388 <isspace@plt+0x3fa78>
  4054fb:	call   425e10 <isspace@plt+0x22500>
  405500:	test   r13b,0x1
  405504:	jne    405535 <isspace@plt+0x1c25>
  405506:	test   rax,rax
  405509:	jne    405535 <isspace@plt+0x1c25>
  40550b:	mov    rdi,QWORD PTR [rip+0x3de76]        # 443388 <isspace@plt+0x3fa78>
  405512:	xor    esi,esi
  405514:	call   421da0 <isspace@plt+0x1e490>
  405519:	test   al,al
  40551b:	je     405659 <isspace@plt+0x1d49>
  405521:	test   rbx,rbx
  405524:	je     405535 <isspace@plt+0x1c25>
  405526:	mov    rdi,QWORD PTR [rip+0x3de5b]        # 443388 <isspace@plt+0x3fa78>
  40552d:	mov    rsi,rbx
  405530:	call   429f20 <isspace@plt+0x26610>
  405535:	mov    rdi,QWORD PTR [rip+0x3de4c]        # 443388 <isspace@plt+0x3fa78>
  40553c:	call   423b00 <isspace@plt+0x201f0>
  405541:	mov    r14d,eax
  405544:	mov    rdi,QWORD PTR [rip+0x3de3d]        # 443388 <isspace@plt+0x3fa78>
  40554b:	call   422470 <isspace@plt+0x1eb60>
  405550:	jmp    405558 <isspace@plt+0x1c48>
  405552:	mov    r14d,0x1
  405558:	mov    rax,QWORD PTR fs:0x28
  405561:	cmp    rax,QWORD PTR [rsp+0x11c0]
  405569:	jne    4056a4 <isspace@plt+0x1d94>
  40556f:	mov    eax,r14d
  405572:	lea    rsp,[rbp-0x28]
  405576:	pop    rbx
  405577:	pop    r12
  405579:	pop    r13
  40557b:	pop    r14
  40557d:	pop    r15
  40557f:	pop    rbp
  405580:	ret    
  405581:	lea    rsi,[rip+0x27b94]        # 42d11c <isspace@plt+0x2980c>
  405588:	mov    rdi,r15
  40558b:	call   403480 <strcmp@plt>
  405590:	test   eax,eax
  405592:	je     405359 <isspace@plt+0x1a49>
  405598:	lea    rsi,[rip+0x27b80]        # 42d11f <isspace@plt+0x2980f>
  40559f:	mov    rdi,r15
  4055a2:	call   403480 <strcmp@plt>
  4055a7:	test   eax,eax
  4055a9:	je     4055d3 <isspace@plt+0x1cc3>
  4055ab:	mov    rax,QWORD PTR [rip+0x3da46]        # 442ff8 <isspace@plt+0x3f6e8>
  4055b2:	mov    rdi,QWORD PTR [rax]
  4055b5:	lea    rdx,[rip+0x27ba5]        # 42d161 <isspace@plt+0x29851>
  4055bc:	mov    r14d,0x1
  4055c2:	mov    esi,0x1
  4055c7:	xor    eax,eax
  4055c9:	mov    rcx,r15
  4055cc:	call   403820 <__fprintf_chk@plt>
  4055d1:	jmp    405558 <isspace@plt+0x1c48>
  4055d3:	sub    rsp,0x8
  4055d7:	lea    rbx,[rip+0x27b79]        # 42d157 <isspace@plt+0x29847>
  4055de:	lea    r8,[rip+0x2c49e]        # 431a83 <isspace@plt+0x2e173>
  4055e5:	lea    rsi,[rip+0x27b36]        # 42d122 <isspace@plt+0x29812>
  4055ec:	lea    rdx,[rip+0x27b43]        # 42d136 <isspace@plt+0x29826>
  4055f3:	lea    rcx,[rip+0x27b54]        # 42d14e <isspace@plt+0x2983e>
  4055fa:	xor    r14d,r14d
  4055fd:	mov    edi,0x1
  405602:	xor    eax,eax
  405604:	mov    r9,r8
  405607:	push   rbx
  405608:	push   r8
  40560a:	push   r8
  40560c:	call   403700 <__printf_chk@plt>
  405611:	add    rsp,0x20
  405615:	jmp    405558 <isspace@plt+0x1c48>
  40561a:	mov    rbx,QWORD PTR [rip+0x3dd67]        # 443388 <isspace@plt+0x3fa78>
  405621:	call   403130 <__errno_location@plt>
  405626:	mov    edi,DWORD PTR [rax]
  405628:	call   403880 <strerror@plt>
  40562d:	mov    rcx,rax
  405630:	lea    rsi,[rip+0x27a90]        # 42d0c7 <isspace@plt+0x297b7>
  405637:	xor    eax,eax
  405639:	mov    rdi,rbx
  40563c:	mov    rdx,rcx
  40563f:	call   4235c0 <isspace@plt+0x1fcb0>
  405644:	mov    rdi,QWORD PTR [rip+0x3dd3d]        # 443388 <isspace@plt+0x3fa78>
  40564b:	lea    rsi,[rip+0x27a97]        # 42d0e9 <isspace@plt+0x297d9>
  405652:	xor    eax,eax
  405654:	call   4235c0 <isspace@plt+0x1fcb0>
  405659:	mov    rdi,QWORD PTR [rip+0x3dd28]        # 443388 <isspace@plt+0x3fa78>
  405660:	lea    rsi,[rip+0x27b16]        # 42d17d <isspace@plt+0x2986d>
  405667:	xor    eax,eax
  405669:	call   4235c0 <isspace@plt+0x1fcb0>
  40566e:	mov    eax,r15d
  405671:	mov    r14,QWORD PTR [rip+0x3dd10]        # 443388 <isspace@plt+0x3fa78>
  405678:	mov    rcx,QWORD PTR [rsp+0x18]
  40567d:	mov    rbx,QWORD PTR [rcx+rax*8]
  405681:	call   403130 <__errno_location@plt>
  405686:	mov    edi,DWORD PTR [rax]
  405688:	call   403880 <strerror@plt>
  40568d:	mov    rcx,rax
  405690:	lea    rsi,[rip+0x27b3b]        # 42d1d2 <isspace@plt+0x298c2>
  405697:	xor    eax,eax
  405699:	mov    rdi,r14
  40569c:	mov    rdx,rbx
  40569f:	call   4235c0 <isspace@plt+0x1fcb0>
  4056a4:	call   403280 <__stack_chk_fail@plt>
  4056a9:	mov    rdi,QWORD PTR [rip+0x3dcd8]        # 443388 <isspace@plt+0x3fa78>
  4056b0:	lea    rsi,[rip+0x27ae3]        # 42d19a <isspace@plt+0x2988a>
  4056b7:	xor    eax,eax
  4056b9:	call   4235c0 <isspace@plt+0x1fcb0>
  4056be:	mov    rdi,QWORD PTR [rip+0x3dcc3]        # 443388 <isspace@plt+0x3fa78>
  4056c5:	lea    rsi,[rip+0x27af0]        # 42d1bc <isspace@plt+0x298ac>
  4056cc:	xor    eax,eax
  4056ce:	call   4235c0 <isspace@plt+0x1fcb0>
  4056d3:	mov    rdi,QWORD PTR [rip+0x3dcae]        # 443388 <isspace@plt+0x3fa78>
  4056da:	lea    rsi,[rip+0x27a22]        # 42d103 <isspace@plt+0x297f3>
  4056e1:	xor    eax,eax
  4056e3:	call   4235c0 <isspace@plt+0x1fcb0>
  4056e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4056f0:	push   rax
  4056f1:	mov    rax,rdx
  4056f4:	mov    rcx,rsi
  4056f7:	mov    edx,edi
  4056f9:	mov    rsi,QWORD PTR fs:0x28
  405702:	mov    QWORD PTR [rsp],rsi
  405706:	mov    rdi,QWORD PTR [rip+0x3dc7b]        # 443388 <isspace@plt+0x3fa78>
  40570d:	mov    esi,edx
  40570f:	mov    rdx,rcx
  405712:	mov    rcx,rax
  405715:	call   423a10 <isspace@plt+0x20100>
  40571a:	mov    rax,QWORD PTR fs:0x28
  405723:	cmp    rax,QWORD PTR [rsp]
  405727:	jne    40572b <isspace@plt+0x1e1b>
  405729:	pop    rax
  40572a:	ret    
  40572b:	call   403280 <__stack_chk_fail@plt>
  405730:	push   rbx
  405731:	sub    rsp,0x10
  405735:	mov    rbx,rsi
  405738:	mov    rax,QWORD PTR fs:0x28
  405741:	mov    QWORD PTR [rsp+0x8],rax
  405746:	call   421d70 <isspace@plt+0x1e460>
  40574b:	mov    rax,QWORD PTR fs:0x28
  405754:	cmp    rax,QWORD PTR [rsp+0x8]
  405759:	jne    405764 <isspace@plt+0x1e54>
  40575b:	mov    rax,rbx
  40575e:	add    rsp,0x10
  405762:	pop    rbx
  405763:	ret    
  405764:	call   403280 <__stack_chk_fail@plt>
  405769:	nop    DWORD PTR [rax+0x0]
  405770:	push   rbx
  405771:	sub    rsp,0x10
  405775:	mov    rbx,rsi
  405778:	mov    rax,QWORD PTR fs:0x28
  405781:	mov    QWORD PTR [rsp+0x8],rax
  405786:	mov    esi,DWORD PTR [rdx]
  405788:	xor    eax,eax
  40578a:	call   428140 <isspace@plt+0x24830>
  40578f:	mov    rax,QWORD PTR fs:0x28
  405798:	cmp    rax,QWORD PTR [rsp+0x8]
  40579d:	jne    4057a8 <isspace@plt+0x1e98>
  40579f:	mov    rax,rbx
  4057a2:	add    rsp,0x10
  4057a6:	pop    rbx
  4057a7:	ret    
  4057a8:	call   403280 <__stack_chk_fail@plt>
  4057ad:	nop    DWORD PTR [rax]
  4057b0:	push   r14
  4057b2:	push   rbx
  4057b3:	push   rax
  4057b4:	mov    r14,rsi
  4057b7:	mov    rbx,rdi
  4057ba:	mov    rax,QWORD PTR fs:0x28
  4057c3:	mov    QWORD PTR [rsp],rax
  4057c7:	call   424da0 <isspace@plt+0x21490>
  4057cc:	cmp    eax,0xffffffff
  4057cf:	je     4057d8 <isspace@plt+0x1ec8>
  4057d1:	mov    esi,0x3d
  4057d6:	jmp    4057dd <isspace@plt+0x1ecd>
  4057d8:	mov    esi,0x2c
  4057dd:	xor    eax,eax
  4057df:	mov    rdi,rbx
  4057e2:	call   428140 <isspace@plt+0x24830>
  4057e7:	mov    rax,QWORD PTR fs:0x28
  4057f0:	cmp    rax,QWORD PTR [rsp]
  4057f4:	jne    405801 <isspace@plt+0x1ef1>
  4057f6:	mov    rax,r14
  4057f9:	add    rsp,0x8
  4057fd:	pop    rbx
  4057fe:	pop    r14
  405800:	ret    
  405801:	call   403280 <__stack_chk_fail@plt>
  405806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405810:	push   r15
  405812:	push   r14
  405814:	push   rbx
  405815:	sub    rsp,0x10
  405819:	mov    r15,rdx
  40581c:	mov    r14,rsi
  40581f:	mov    rbx,rdi
  405822:	mov    rax,QWORD PTR fs:0x28
  40582b:	mov    QWORD PTR [rsp+0x8],rax
  405830:	call   424da0 <isspace@plt+0x21490>
  405835:	cmp    eax,0xffffffff
  405838:	je     405841 <isspace@plt+0x1f31>
  40583a:	mov    esi,0xe
  40583f:	jmp    405853 <isspace@plt+0x1f43>
  405841:	cmp    DWORD PTR [r15],0x0
  405845:	js     40584e <isspace@plt+0x1f3e>
  405847:	mov    esi,0x32
  40584c:	jmp    405853 <isspace@plt+0x1f43>
  40584e:	mov    esi,0x31
  405853:	xor    eax,eax
  405855:	mov    rdi,rbx
  405858:	call   428140 <isspace@plt+0x24830>
  40585d:	mov    rax,QWORD PTR fs:0x28
  405866:	cmp    rax,QWORD PTR [rsp+0x8]
  40586b:	jne    40587a <isspace@plt+0x1f6a>
  40586d:	mov    rax,r14
  405870:	add    rsp,0x10
  405874:	pop    rbx
  405875:	pop    r14
  405877:	pop    r15
  405879:	ret    
  40587a:	call   403280 <__stack_chk_fail@plt>
  40587f:	nop
  405880:	push   r15
  405882:	push   r14
  405884:	push   r12
  405886:	push   rbx
  405887:	push   rax
  405888:	mov    rbx,rdx
  40588b:	mov    r14,rsi
  40588e:	mov    r12,rdi
  405891:	mov    rax,QWORD PTR fs:0x28
  40589a:	mov    QWORD PTR [rsp],rax
  40589e:	call   425dd0 <isspace@plt+0x224c0>
  4058a3:	mov    r15,rax
  4058a6:	mov    rdi,r12
  4058a9:	call   424da0 <isspace@plt+0x21490>
  4058ae:	mov    ecx,DWORD PTR [rbx]
  4058b0:	cmp    ecx,0x7ffffffd
  4058b6:	jg     4058d2 <isspace@plt+0x1fc2>
  4058b8:	cmp    ecx,0x80000001
  4058be:	je     405908 <isspace@plt+0x1ff8>
  4058c0:	cmp    ecx,0x80000002
  4058c6:	jne    4058ec <isspace@plt+0x1fdc>
  4058c8:	mov    rdi,r15
  4058cb:	call   41dbe0 <isspace@plt+0x1a2d0>
  4058d0:	jmp    405921 <isspace@plt+0x2011>
  4058d2:	cmp    ecx,0x7ffffffe
  4058d8:	je     405912 <isspace@plt+0x2002>
  4058da:	cmp    ecx,0x7fffffff
  4058e0:	jne    4058ec <isspace@plt+0x1fdc>
  4058e2:	mov    rdi,r15
  4058e5:	call   41d760 <isspace@plt+0x19e50>
  4058ea:	jmp    405921 <isspace@plt+0x2011>
  4058ec:	cmp    eax,0xffffffff
  4058ef:	jne    4058f8 <isspace@plt+0x1fe8>
  4058f1:	mov    eax,ecx
  4058f3:	neg    eax
  4058f5:	cmovl  eax,ecx
  4058f8:	mov    rdi,r15
  4058fb:	mov    esi,eax
  4058fd:	test   ecx,ecx
  4058ff:	js     40591c <isspace@plt+0x200c>
  405901:	call   41d7b0 <isspace@plt+0x19ea0>
  405906:	jmp    405921 <isspace@plt+0x2011>
  405908:	mov    rdi,r15
  40590b:	call   41d500 <isspace@plt+0x19bf0>
  405910:	jmp    405921 <isspace@plt+0x2011>
  405912:	mov    rdi,r15
  405915:	call   41dc50 <isspace@plt+0x1a340>
  40591a:	jmp    405921 <isspace@plt+0x2011>
  40591c:	call   41d110 <isspace@plt+0x19800>
  405921:	mov    esi,0xffffffff
  405926:	mov    rdi,r12
  405929:	call   424dd0 <isspace@plt+0x214c0>
  40592e:	mov    rax,QWORD PTR fs:0x28
  405937:	cmp    rax,QWORD PTR [rsp]
  40593b:	jne    40594c <isspace@plt+0x203c>
  40593d:	mov    rax,r14
  405940:	add    rsp,0x8
  405944:	pop    rbx
  405945:	pop    r12
  405947:	pop    r14
  405949:	pop    r15
  40594b:	ret    
  40594c:	call   403280 <__stack_chk_fail@plt>
  405951:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40595b:	nop    DWORD PTR [rax+rax*1+0x0]
  405960:	push   rbx
  405961:	sub    rsp,0x10
  405965:	mov    rbx,rsi
  405968:	mov    rax,QWORD PTR fs:0x28
  405971:	mov    QWORD PTR [rsp+0x8],rax
  405976:	mov    esi,DWORD PTR [rdx]
  405978:	call   427780 <isspace@plt+0x23e70>
  40597d:	mov    rax,QWORD PTR fs:0x28
  405986:	cmp    rax,QWORD PTR [rsp+0x8]
  40598b:	jne    405996 <isspace@plt+0x2086>
  40598d:	mov    rax,rbx
  405990:	add    rsp,0x10
  405994:	pop    rbx
  405995:	ret    
  405996:	call   403280 <__stack_chk_fail@plt>
  40599b:	nop    DWORD PTR [rax+rax*1+0x0]
  4059a0:	push   r14
  4059a2:	push   rbx
  4059a3:	push   rax
  4059a4:	mov    r14,rsi
  4059a7:	mov    rbx,rdi
  4059aa:	mov    rax,QWORD PTR fs:0x28
  4059b3:	mov    QWORD PTR [rsp],rax
  4059b7:	call   424da0 <isspace@plt+0x21490>
  4059bc:	cmp    eax,0xffffffff
  4059bf:	je     4059d0 <isspace@plt+0x20c0>
  4059c1:	mov    esi,0xffffffff
  4059c6:	mov    rdi,rbx
  4059c9:	call   424dd0 <isspace@plt+0x214c0>
  4059ce:	jmp    4059ff <isspace@plt+0x20ef>
  4059d0:	mov    rdi,rbx
  4059d3:	call   425dd0 <isspace@plt+0x224c0>
  4059d8:	mov    rbx,rax
  4059db:	mov    rdi,rax
  4059de:	call   41f1e0 <isspace@plt+0x1b8d0>
  4059e3:	mov    rdi,rbx
  4059e6:	cmp    eax,0x2
  4059e9:	jl     4059f2 <isspace@plt+0x20e2>
  4059eb:	call   41fdb0 <isspace@plt+0x1c4a0>
  4059f0:	jmp    4059ff <isspace@plt+0x20ef>
  4059f2:	call   41f750 <isspace@plt+0x1be40>
  4059f7:	mov    rdi,rax
  4059fa:	call   41f690 <isspace@plt+0x1bd80>
  4059ff:	mov    rax,QWORD PTR fs:0x28
  405a08:	cmp    rax,QWORD PTR [rsp]
  405a0c:	jne    405a19 <isspace@plt+0x2109>
  405a0e:	mov    rax,r14
  405a11:	add    rsp,0x8
  405a15:	pop    rbx
  405a16:	pop    r14
  405a18:	ret    
  405a19:	call   403280 <__stack_chk_fail@plt>
  405a1e:	xchg   ax,ax
  405a20:	push   r14
  405a22:	push   rbx
  405a23:	push   rax
  405a24:	mov    r14,rsi
  405a27:	mov    rbx,rdi
  405a2a:	mov    rax,QWORD PTR fs:0x28
  405a33:	mov    QWORD PTR [rsp],rax
  405a37:	call   424da0 <isspace@plt+0x21490>
  405a3c:	cmp    eax,0xffffffff
  405a3f:	je     405a50 <isspace@plt+0x2140>
  405a41:	mov    esi,0xffffffff
  405a46:	mov    rdi,rbx
  405a49:	call   424dd0 <isspace@plt+0x214c0>
  405a4e:	jmp    405a5a <isspace@plt+0x214a>
  405a50:	xor    esi,esi
  405a52:	mov    rdi,rbx
  405a55:	call   427780 <isspace@plt+0x23e70>
  405a5a:	mov    rax,QWORD PTR fs:0x28
  405a63:	cmp    rax,QWORD PTR [rsp]
  405a67:	jne    405a74 <isspace@plt+0x2164>
  405a69:	mov    rax,r14
  405a6c:	add    rsp,0x8
  405a70:	pop    rbx
  405a71:	pop    r14
  405a73:	ret    
  405a74:	call   403280 <__stack_chk_fail@plt>
  405a79:	nop    DWORD PTR [rax+0x0]
  405a80:	push   r15
  405a82:	push   r14
  405a84:	push   rbx
  405a85:	sub    rsp,0x10
  405a89:	mov    r15,rdx
  405a8c:	mov    r14,rsi
  405a8f:	mov    rbx,rdi
  405a92:	mov    rax,QWORD PTR fs:0x28
  405a9b:	mov    QWORD PTR [rsp+0x8],rax
  405aa0:	mov    esi,0x7
  405aa5:	mov    edx,0x4
  405aaa:	xor    eax,eax
  405aac:	call   429060 <isspace@plt+0x25750>
  405ab1:	mov    esi,DWORD PTR [r15]
  405ab4:	xor    eax,eax
  405ab6:	mov    rdi,rbx
  405ab9:	call   428140 <isspace@plt+0x24830>
  405abe:	mov    rax,QWORD PTR fs:0x28
  405ac7:	cmp    rax,QWORD PTR [rsp+0x8]
  405acc:	jne    405adb <isspace@plt+0x21cb>
  405ace:	mov    rax,r14
  405ad1:	add    rsp,0x10
  405ad5:	pop    rbx
  405ad6:	pop    r14
  405ad8:	pop    r15
  405ada:	ret    
  405adb:	call   403280 <__stack_chk_fail@plt>
  405ae0:	push   r15
  405ae2:	push   r14
  405ae4:	push   rbx
  405ae5:	sub    rsp,0x10
  405ae9:	mov    r15,rdx
  405aec:	mov    r14,rsi
  405aef:	mov    rbx,rdi
  405af2:	mov    rax,QWORD PTR fs:0x28
  405afb:	mov    QWORD PTR [rsp+0x8],rax
  405b00:	mov    esi,0x7
  405b05:	mov    edx,0x5
  405b0a:	xor    eax,eax
  405b0c:	call   429060 <isspace@plt+0x25750>
  405b11:	mov    esi,DWORD PTR [r15]
  405b14:	xor    eax,eax
  405b16:	mov    rdi,rbx
  405b19:	call   428140 <isspace@plt+0x24830>
  405b1e:	mov    rax,QWORD PTR fs:0x28
  405b27:	cmp    rax,QWORD PTR [rsp+0x8]
  405b2c:	jne    405b3b <isspace@plt+0x222b>
  405b2e:	mov    rax,r14
  405b31:	add    rsp,0x10
  405b35:	pop    rbx
  405b36:	pop    r14
  405b38:	pop    r15
  405b3a:	ret    
  405b3b:	call   403280 <__stack_chk_fail@plt>
  405b40:	push   r15
  405b42:	push   r14
  405b44:	push   rbx
  405b45:	sub    rsp,0x10
  405b49:	mov    r15,rdx
  405b4c:	mov    r14,rsi
  405b4f:	mov    rbx,rdi
  405b52:	mov    rax,QWORD PTR fs:0x28
  405b5b:	mov    QWORD PTR [rsp+0x8],rax
  405b60:	xor    esi,esi
  405b62:	xor    eax,eax
  405b64:	call   429060 <isspace@plt+0x25750>
  405b69:	mov    esi,DWORD PTR [r15]
  405b6c:	xor    eax,eax
  405b6e:	mov    rdi,rbx
  405b71:	call   428140 <isspace@plt+0x24830>
  405b76:	mov    rax,QWORD PTR fs:0x28
  405b7f:	cmp    rax,QWORD PTR [rsp+0x8]
  405b84:	jne    405b93 <isspace@plt+0x2283>
  405b86:	mov    rax,r14
  405b89:	add    rsp,0x10
  405b8d:	pop    rbx
  405b8e:	pop    r14
  405b90:	pop    r15
  405b92:	ret    
  405b93:	call   403280 <__stack_chk_fail@plt>
  405b98:	nop    DWORD PTR [rax+rax*1+0x0]
  405ba0:	push   rbx
  405ba1:	sub    rsp,0x10
  405ba5:	mov    rbx,rsi
  405ba8:	mov    rax,QWORD PTR fs:0x28
  405bb1:	mov    QWORD PTR [rsp+0x8],rax
  405bb6:	mov    eax,DWORD PTR [rdx]
  405bb8:	test   eax,eax
  405bba:	js     405bc5 <isspace@plt+0x22b5>
  405bbc:	je     405bcc <isspace@plt+0x22bc>
  405bbe:	call   4273e0 <isspace@plt+0x23ad0>
  405bc3:	jmp    405bd1 <isspace@plt+0x22c1>
  405bc5:	call   427220 <isspace@plt+0x23910>
  405bca:	jmp    405bd1 <isspace@plt+0x22c1>
  405bcc:	call   427000 <isspace@plt+0x236f0>
  405bd1:	mov    rax,QWORD PTR fs:0x28
  405bda:	cmp    rax,QWORD PTR [rsp+0x8]
  405bdf:	jne    405bea <isspace@plt+0x22da>
  405be1:	mov    rax,rbx
  405be4:	add    rsp,0x10
  405be8:	pop    rbx
  405be9:	ret    
  405bea:	call   403280 <__stack_chk_fail@plt>
  405bef:	nop
  405bf0:	push   r15
  405bf2:	push   r14
  405bf4:	push   r12
  405bf6:	push   rbx
  405bf7:	push   rax
  405bf8:	mov    r14,rsi
  405bfb:	mov    rbx,rdi
  405bfe:	mov    rax,QWORD PTR fs:0x28
  405c07:	mov    QWORD PTR [rsp],rax
  405c0b:	call   425d90 <isspace@plt+0x22480>
  405c10:	mov    rdi,rax
  405c13:	call   40f6e0 <isspace@plt+0xbdd0>
  405c18:	cmp    rax,0xffffffffffffffff
  405c1c:	je     405c4c <isspace@plt+0x233c>
  405c1e:	mov    r15,rax
  405c21:	mov    rdi,rbx
  405c24:	call   425dd0 <isspace@plt+0x224c0>
  405c29:	mov    r12,rax
  405c2c:	mov    rdi,rax
  405c2f:	call   41f1e0 <isspace@plt+0x1b8d0>
  405c34:	cmp    eax,0x1
  405c37:	jne    405c44 <isspace@plt+0x2334>
  405c39:	mov    rdi,r12
  405c3c:	mov    rsi,r15
  405c3f:	call   41ad60 <isspace@plt+0x17450>
  405c44:	mov    rdi,rbx
  405c47:	call   421ce0 <isspace@plt+0x1e3d0>
  405c4c:	mov    rax,QWORD PTR fs:0x28
  405c55:	cmp    rax,QWORD PTR [rsp]
  405c59:	jne    405c6a <isspace@plt+0x235a>
  405c5b:	mov    rax,r14
  405c5e:	add    rsp,0x8
  405c62:	pop    rbx
  405c63:	pop    r12
  405c65:	pop    r14
  405c67:	pop    r15
  405c69:	ret    
  405c6a:	call   403280 <__stack_chk_fail@plt>
  405c6f:	nop
  405c70:	push   r15
  405c72:	push   r14
  405c74:	push   r12
  405c76:	push   rbx
  405c77:	push   rax
  405c78:	mov    r14,rsi
  405c7b:	mov    rbx,rdi
  405c7e:	mov    rax,QWORD PTR fs:0x28
  405c87:	mov    QWORD PTR [rsp],rax
  405c8b:	call   425d90 <isspace@plt+0x22480>
  405c90:	mov    rdi,rax
  405c93:	call   40f870 <isspace@plt+0xbf60>
  405c98:	cmp    rax,0xffffffffffffffff
  405c9c:	je     405ccc <isspace@plt+0x23bc>
  405c9e:	mov    r15,rax
  405ca1:	mov    rdi,rbx
  405ca4:	call   425dd0 <isspace@plt+0x224c0>
  405ca9:	mov    r12,rax
  405cac:	mov    rdi,rax
  405caf:	call   41f1e0 <isspace@plt+0x1b8d0>
  405cb4:	cmp    eax,0x1
  405cb7:	jne    405cc4 <isspace@plt+0x23b4>
  405cb9:	mov    rdi,r12
  405cbc:	mov    rsi,r15
  405cbf:	call   41ad60 <isspace@plt+0x17450>
  405cc4:	mov    rdi,rbx
  405cc7:	call   421ce0 <isspace@plt+0x1e3d0>
  405ccc:	mov    rax,QWORD PTR fs:0x28
  405cd5:	cmp    rax,QWORD PTR [rsp]
  405cd9:	jne    405cea <isspace@plt+0x23da>
  405cdb:	mov    rax,r14
  405cde:	add    rsp,0x8
  405ce2:	pop    rbx
  405ce3:	pop    r12
  405ce5:	pop    r14
  405ce7:	pop    r15
  405ce9:	ret    
  405cea:	call   403280 <__stack_chk_fail@plt>
  405cef:	nop
  405cf0:	push   r15
  405cf2:	push   r14
  405cf4:	push   r12
  405cf6:	push   rbx
  405cf7:	sub    rsp,0x18
  405cfb:	mov    r14,rsi
  405cfe:	mov    r15,rdi
  405d01:	mov    rax,QWORD PTR fs:0x28
  405d0a:	mov    QWORD PTR [rsp+0x10],rax
  405d0f:	mov    esi,0x1
  405d14:	call   424e10 <isspace@plt+0x21500>
  405d19:	mov    QWORD PTR [rsp],rax
  405d1d:	mov    QWORD PTR [rsp+0x8],rdx
  405d22:	mov    rdi,rsp
  405d25:	call   424e80 <isspace@plt+0x21570>
  405d2a:	test   al,al
  405d2c:	je     405d80 <isspace@plt+0x2470>
  405d2e:	mov    r12,rsp
  405d31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  405d40:	mov    rdi,r15
  405d43:	call   425d90 <isspace@plt+0x22480>
  405d48:	mov    rdi,rax
  405d4b:	call   40f9d0 <isspace@plt+0xc0c0>
  405d50:	mov    rbx,rax
  405d53:	mov    rdi,r12
  405d56:	call   424e80 <isspace@plt+0x21570>
  405d5b:	test   al,al
  405d5d:	jne    405d40 <isspace@plt+0x2430>
  405d5f:	cmp    rbx,0xffffffffffffffff
  405d63:	je     405d80 <isspace@plt+0x2470>
  405d65:	mov    rdi,r15
  405d68:	call   425dd0 <isspace@plt+0x224c0>
  405d6d:	mov    rdi,rax
  405d70:	mov    rsi,rbx
  405d73:	call   41ad60 <isspace@plt+0x17450>
  405d78:	mov    rdi,r15
  405d7b:	call   421ce0 <isspace@plt+0x1e3d0>
  405d80:	mov    rax,QWORD PTR fs:0x28
  405d89:	cmp    rax,QWORD PTR [rsp+0x10]
  405d8e:	jne    405d9f <isspace@plt+0x248f>
  405d90:	mov    rax,r14
  405d93:	add    rsp,0x18
  405d97:	pop    rbx
  405d98:	pop    r12
  405d9a:	pop    r14
  405d9c:	pop    r15
  405d9e:	ret    
  405d9f:	call   403280 <__stack_chk_fail@plt>
  405da4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405dae:	xchg   ax,ax
  405db0:	push   r15
  405db2:	push   r14
  405db4:	push   r12
  405db6:	push   rbx
  405db7:	sub    rsp,0x18
  405dbb:	mov    r14,rsi
  405dbe:	mov    r15,rdi
  405dc1:	mov    rax,QWORD PTR fs:0x28
  405dca:	mov    QWORD PTR [rsp+0x10],rax
  405dcf:	mov    esi,0x1
  405dd4:	call   424e10 <isspace@plt+0x21500>
  405dd9:	mov    QWORD PTR [rsp],rax
  405ddd:	mov    QWORD PTR [rsp+0x8],rdx
  405de2:	mov    rdi,rsp
  405de5:	call   424e80 <isspace@plt+0x21570>
  405dea:	test   al,al
  405dec:	je     405e40 <isspace@plt+0x2530>
  405dee:	mov    r12,rsp
  405df1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405dfb:	nop    DWORD PTR [rax+rax*1+0x0]
  405e00:	mov    rdi,r15
  405e03:	call   425d90 <isspace@plt+0x22480>
  405e08:	mov    rdi,rax
  405e0b:	call   40fb50 <isspace@plt+0xc240>
  405e10:	mov    rbx,rax
  405e13:	mov    rdi,r12
  405e16:	call   424e80 <isspace@plt+0x21570>
  405e1b:	test   al,al
  405e1d:	jne    405e00 <isspace@plt+0x24f0>
  405e1f:	cmp    rbx,0xffffffffffffffff
  405e23:	je     405e40 <isspace@plt+0x2530>
  405e25:	mov    rdi,r15
  405e28:	call   425dd0 <isspace@plt+0x224c0>
  405e2d:	mov    rdi,rax
  405e30:	mov    rsi,rbx
  405e33:	call   41ad60 <isspace@plt+0x17450>
  405e38:	mov    rdi,r15
  405e3b:	call   421ce0 <isspace@plt+0x1e3d0>
  405e40:	mov    rax,QWORD PTR fs:0x28
  405e49:	cmp    rax,QWORD PTR [rsp+0x10]
  405e4e:	jne    405e5f <isspace@plt+0x254f>
  405e50:	mov    rax,r14
  405e53:	add    rsp,0x18
  405e57:	pop    rbx
  405e58:	pop    r12
  405e5a:	pop    r14
  405e5c:	pop    r15
  405e5e:	ret    
  405e5f:	call   403280 <__stack_chk_fail@plt>
  405e64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e6e:	xchg   ax,ax
  405e70:	push   r14
  405e72:	push   rbx
  405e73:	push   rax
  405e74:	mov    r14,rsi
  405e77:	mov    rbx,rdi
  405e7a:	mov    rax,QWORD PTR fs:0x28
  405e83:	mov    QWORD PTR [rsp],rax
  405e87:	call   424780 <isspace@plt+0x20e70>
  405e8c:	test   al,al
  405e8e:	jne    405ec7 <isspace@plt+0x25b7>
  405e90:	cmp    BYTE PTR [r14],0x0
  405e94:	je     405ed4 <isspace@plt+0x25c4>
  405e96:	mov    rdi,rbx
  405e99:	mov    rsi,r14
  405e9c:	call   423650 <isspace@plt+0x1fd40>
  405ea1:	mov    rcx,rax
  405ea4:	sub    rcx,r14
  405ea7:	cmp    rcx,0x1
  405eab:	jg     405ed6 <isspace@plt+0x25c6>
  405ead:	movsx  esi,BYTE PTR [r14]
  405eb1:	mov    rdi,rbx
  405eb4:	call   42afc0 <isspace@plt+0x276b0>
  405eb9:	mov    rdi,rbx
  405ebc:	mov    esi,eax
  405ebe:	call   4246c0 <isspace@plt+0x20db0>
  405ec3:	add    r14,0x1
  405ec7:	mov    rdi,rbx
  405eca:	call   421ce0 <isspace@plt+0x1e3d0>
  405ecf:	mov    rax,r14
  405ed2:	jmp    405ed6 <isspace@plt+0x25c6>
  405ed4:	xor    eax,eax
  405ed6:	mov    rcx,QWORD PTR fs:0x28
  405edf:	cmp    rcx,QWORD PTR [rsp]
  405ee3:	jne    405eed <isspace@plt+0x25dd>
  405ee5:	add    rsp,0x8
  405ee9:	pop    rbx
  405eea:	pop    r14
  405eec:	ret    
  405eed:	call   403280 <__stack_chk_fail@plt>
  405ef2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405efc:	nop    DWORD PTR [rax+0x0]
  405f00:	push   r14
  405f02:	push   rbx
  405f03:	push   rax
  405f04:	mov    rax,QWORD PTR fs:0x28
  405f0d:	mov    QWORD PTR [rsp],rax
  405f11:	cmp    BYTE PTR [rsi],0x0
  405f14:	je     405f4b <isspace@plt+0x263b>
  405f16:	mov    rbx,rsi
  405f19:	mov    r14,rdi
  405f1c:	call   423650 <isspace@plt+0x1fd40>
  405f21:	mov    rcx,rax
  405f24:	sub    rcx,rbx
  405f27:	cmp    rcx,0x1
  405f2b:	jg     405f4d <isspace@plt+0x263d>
  405f2d:	movsx  esi,BYTE PTR [rbx]
  405f30:	mov    rdi,r14
  405f33:	call   42afc0 <isspace@plt+0x276b0>
  405f38:	mov    rdi,r14
  405f3b:	mov    esi,eax
  405f3d:	call   424830 <isspace@plt+0x20f20>
  405f42:	add    rbx,0x1
  405f46:	mov    rax,rbx
  405f49:	jmp    405f4d <isspace@plt+0x263d>
  405f4b:	xor    eax,eax
  405f4d:	mov    rcx,QWORD PTR fs:0x28
  405f56:	cmp    rcx,QWORD PTR [rsp]
  405f5a:	jne    405f64 <isspace@plt+0x2654>
  405f5c:	add    rsp,0x8
  405f60:	pop    rbx
  405f61:	pop    r14
  405f63:	ret    
  405f64:	call   403280 <__stack_chk_fail@plt>
  405f69:	nop    DWORD PTR [rax+0x0]
  405f70:	push   r14
  405f72:	push   rbx
  405f73:	push   rax
  405f74:	mov    rax,QWORD PTR fs:0x28
  405f7d:	mov    QWORD PTR [rsp],rax
  405f81:	cmp    BYTE PTR [rsi],0x0
  405f84:	je     405fbb <isspace@plt+0x26ab>
  405f86:	mov    rbx,rsi
  405f89:	mov    r14,rdi
  405f8c:	call   423650 <isspace@plt+0x1fd40>
  405f91:	mov    rcx,rax
  405f94:	sub    rcx,rbx
  405f97:	cmp    rcx,0x1
  405f9b:	jg     405fbd <isspace@plt+0x26ad>
  405f9d:	movsx  esi,BYTE PTR [rbx]
  405fa0:	mov    rdi,r14
  405fa3:	call   4274c0 <isspace@plt+0x23bb0>
  405fa8:	mov    rdi,r14
  405fab:	mov    esi,eax
  405fad:	call   426c50 <isspace@plt+0x23340>
  405fb2:	add    rbx,0x1
  405fb6:	mov    rax,rbx
  405fb9:	jmp    405fbd <isspace@plt+0x26ad>
  405fbb:	xor    eax,eax
  405fbd:	mov    rcx,QWORD PTR fs:0x28
  405fc6:	cmp    rcx,QWORD PTR [rsp]
  405fca:	jne    405fd4 <isspace@plt+0x26c4>
  405fcc:	add    rsp,0x8
  405fd0:	pop    rbx
  405fd1:	pop    r14
  405fd3:	ret    
  405fd4:	call   403280 <__stack_chk_fail@plt>
  405fd9:	nop    DWORD PTR [rax+0x0]
  405fe0:	push   rbx
  405fe1:	sub    rsp,0x10
  405fe5:	mov    rbx,rsi
  405fe8:	mov    rax,QWORD PTR fs:0x28
  405ff1:	mov    QWORD PTR [rsp+0x8],rax
  405ff6:	call   QWORD PTR [rdx]
  405ff8:	mov    rax,QWORD PTR fs:0x28
  406001:	cmp    rax,QWORD PTR [rsp+0x8]
  406006:	jne    406011 <isspace@plt+0x2701>
  406008:	mov    rax,rbx
  40600b:	add    rsp,0x10
  40600f:	pop    rbx
  406010:	ret    
  406011:	call   403280 <__stack_chk_fail@plt>
  406016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406020:	push   r15
  406022:	push   r14
  406024:	push   rbx
  406025:	sub    rsp,0x10
  406029:	mov    r15,rdi
  40602c:	mov    rax,QWORD PTR fs:0x28
  406035:	mov    QWORD PTR [rsp+0x8],rax
  40603a:	cmp    BYTE PTR [rsi],0x0
  40603d:	je     40609f <isspace@plt+0x278f>
  40603f:	mov    rbx,rsi
  406042:	mov    rdi,r15
  406045:	call   423650 <isspace@plt+0x1fd40>
  40604a:	test   rax,rax
  40604d:	je     4060a7 <isspace@plt+0x2797>
  40604f:	mov    r14,rax
  406052:	lea    rdx,[rsp+0x3]
  406057:	mov    rdi,r15
  40605a:	mov    rsi,rbx
  40605d:	call   4238d0 <isspace@plt+0x1ffc0>
  406062:	cmp    BYTE PTR [rsp+0x3],0x1b
  406067:	je     4060aa <isspace@plt+0x279a>
  406069:	test   al,al
  40606b:	je     4060aa <isspace@plt+0x279a>
  40606d:	lea    rdx,[rsp+0x3]
  406072:	mov    esi,0x8
  406077:	xor    eax,eax
  406079:	mov    rdi,r15
  40607c:	call   429060 <isspace@plt+0x25750>
  406081:	mov    rdi,r15
  406084:	call   427920 <isspace@plt+0x24010>
  406089:	cmp    eax,0x1
  40608c:	jne    4060aa <isspace@plt+0x279a>
  40608e:	mov    esi,0x11
  406093:	xor    eax,eax
  406095:	mov    rdi,r15
  406098:	call   428140 <isspace@plt+0x24830>
  40609d:	jmp    4060aa <isspace@plt+0x279a>
  40609f:	mov    rdi,r15
  4060a2:	call   422a70 <isspace@plt+0x1f160>
  4060a7:	xor    r14d,r14d
  4060aa:	mov    rax,QWORD PTR fs:0x28
  4060b3:	cmp    rax,QWORD PTR [rsp+0x8]
  4060b8:	jne    4060c7 <isspace@plt+0x27b7>
  4060ba:	mov    rax,r14
  4060bd:	add    rsp,0x10
  4060c1:	pop    rbx
  4060c2:	pop    r14
  4060c4:	pop    r15
  4060c6:	ret    
  4060c7:	call   403280 <__stack_chk_fail@plt>
  4060cc:	nop    DWORD PTR [rax+0x0]
  4060d0:	push   rbx
  4060d1:	sub    rsp,0x10
  4060d5:	mov    rbx,rsi
  4060d8:	mov    rax,QWORD PTR fs:0x28
  4060e1:	mov    QWORD PTR [rsp+0x8],rax
  4060e6:	mov    rsi,QWORD PTR [rdx]
  4060e9:	call   429fd0 <isspace@plt+0x266c0>
  4060ee:	mov    rax,QWORD PTR fs:0x28
  4060f7:	cmp    rax,QWORD PTR [rsp+0x8]
  4060fc:	jne    406107 <isspace@plt+0x27f7>
  4060fe:	mov    rax,rbx
  406101:	add    rsp,0x10
  406105:	pop    rbx
  406106:	ret    
  406107:	call   403280 <__stack_chk_fail@plt>
  40610c:	nop    DWORD PTR [rax+0x0]
  406110:	push   r15
  406112:	push   r14
  406114:	push   r12
  406116:	push   rbx
  406117:	sub    rsp,0x18
  40611b:	mov    r14,rdi
  40611e:	mov    rax,QWORD PTR fs:0x28
  406127:	mov    QWORD PTR [rsp+0x10],rax
  40612c:	cmp    BYTE PTR [rsi],0x0
  40612f:	je     40616f <isspace@plt+0x285f>
  406131:	mov    r15,rdx
  406134:	mov    rbx,rsi
  406137:	mov    rdi,r14
  40613a:	call   423650 <isspace@plt+0x1fd40>
  40613f:	test   rax,rax
  406142:	je     406177 <isspace@plt+0x2867>
  406144:	mov    r12,rax
  406147:	lea    rdx,[rsp+0xb]
  40614c:	mov    rdi,r14
  40614f:	mov    rsi,rbx
  406152:	call   4238d0 <isspace@plt+0x1ffc0>
  406157:	test   al,al
  406159:	je     40617a <isspace@plt+0x286a>
  40615b:	mov    esi,DWORD PTR [r15]
  40615e:	lea    rdx,[rsp+0xb]
  406163:	xor    eax,eax
  406165:	mov    rdi,r14
  406168:	call   428140 <isspace@plt+0x24830>
  40616d:	jmp    40617a <isspace@plt+0x286a>
  40616f:	mov    rdi,r14
  406172:	call   422a70 <isspace@plt+0x1f160>
  406177:	xor    r12d,r12d
  40617a:	mov    rax,QWORD PTR fs:0x28
  406183:	cmp    rax,QWORD PTR [rsp+0x10]
  406188:	jne    406199 <isspace@plt+0x2889>
  40618a:	mov    rax,r12
  40618d:	add    rsp,0x18
  406191:	pop    rbx
  406192:	pop    r12
  406194:	pop    r14
  406196:	pop    r15
  406198:	ret    
  406199:	call   403280 <__stack_chk_fail@plt>
  40619e:	xchg   ax,ax
  4061a0:	push   r14
  4061a2:	push   rbx
  4061a3:	push   rax
  4061a4:	mov    rax,QWORD PTR fs:0x28
  4061ad:	mov    QWORD PTR [rsp],rax
  4061b1:	cmp    BYTE PTR [rsi],0x0
  4061b4:	je     4061eb <isspace@plt+0x28db>
  4061b6:	mov    rbx,rsi
  4061b9:	mov    r14,rdi
  4061bc:	call   423650 <isspace@plt+0x1fd40>
  4061c1:	mov    rcx,rax
  4061c4:	sub    rcx,rbx
  4061c7:	cmp    rcx,0x1
  4061cb:	jg     4061ed <isspace@plt+0x28dd>
  4061cd:	movsx  esi,BYTE PTR [rbx]
  4061d0:	mov    rdi,r14
  4061d3:	call   42afc0 <isspace@plt+0x276b0>
  4061d8:	mov    rdi,r14
  4061db:	mov    esi,eax
  4061dd:	call   42b0e0 <isspace@plt+0x277d0>
  4061e2:	add    rbx,0x1
  4061e6:	mov    rax,rbx
  4061e9:	jmp    4061ed <isspace@plt+0x28dd>
  4061eb:	xor    eax,eax
  4061ed:	mov    rcx,QWORD PTR fs:0x28
  4061f6:	cmp    rcx,QWORD PTR [rsp]
  4061fa:	jne    406204 <isspace@plt+0x28f4>
  4061fc:	add    rsp,0x8
  406200:	pop    rbx
  406201:	pop    r14
  406203:	ret    
  406204:	call   403280 <__stack_chk_fail@plt>
  406209:	nop    DWORD PTR [rax+0x0]
  406210:	push   rbx
  406211:	sub    rsp,0x10
  406215:	mov    rbx,rsi
  406218:	mov    rax,QWORD PTR fs:0x28
  406221:	mov    QWORD PTR [rsp+0x8],rax
  406226:	mov    esi,DWORD PTR [rdx]
  406228:	xor    eax,eax
  40622a:	call   429060 <isspace@plt+0x25750>
  40622f:	mov    rax,QWORD PTR fs:0x28
  406238:	cmp    rax,QWORD PTR [rsp+0x8]
  40623d:	jne    406248 <isspace@plt+0x2938>
  40623f:	mov    rax,rbx
  406242:	add    rsp,0x10
  406246:	pop    rbx
  406247:	ret    
  406248:	call   403280 <__stack_chk_fail@plt>
  40624d:	nop    DWORD PTR [rax]
  406250:	push   r15
  406252:	push   r14
  406254:	push   rbx
  406255:	sub    rsp,0x10
  406259:	mov    r14,rsi
  40625c:	mov    r15,rdi
  40625f:	mov    rax,QWORD PTR fs:0x28
  406268:	mov    QWORD PTR [rsp+0x8],rax
  40626d:	movsx  ebx,BYTE PTR [rsi-0x1]
  406271:	xor    esi,esi
  406273:	call   424a90 <isspace@plt+0x21180>
  406278:	mov    ecx,ebx
  40627a:	add    cl,0xd0
  40627d:	cmp    cl,0x9
  406280:	ja     4062aa <isspace@plt+0x299a>
  406282:	add    ebx,0xffffffd0
  406285:	mov    ecx,ebx
  406287:	or     ecx,eax
  406289:	je     40629b <isspace@plt+0x298b>
  40628b:	lea    eax,[rax+rax*4]
  40628e:	lea    esi,[rbx+rax*2]
  406291:	mov    rdi,r15
  406294:	call   424dd0 <isspace@plt+0x214c0>
  406299:	jmp    4062aa <isspace@plt+0x299a>
  40629b:	mov    esi,0x8
  4062a0:	xor    eax,eax
  4062a2:	mov    rdi,r15
  4062a5:	call   428140 <isspace@plt+0x24830>
  4062aa:	mov    rax,QWORD PTR fs:0x28
  4062b3:	cmp    rax,QWORD PTR [rsp+0x8]
  4062b8:	jne    4062c7 <isspace@plt+0x29b7>
  4062ba:	mov    rax,r14
  4062bd:	add    rsp,0x10
  4062c1:	pop    rbx
  4062c2:	pop    r14
  4062c4:	pop    r15
  4062c6:	ret    
  4062c7:	call   403280 <__stack_chk_fail@plt>
  4062cc:	nop    DWORD PTR [rax+0x0]
  4062d0:	push   r15
  4062d2:	push   r14
  4062d4:	push   rbx
  4062d5:	sub    rsp,0x10
  4062d9:	mov    rbx,rsi
  4062dc:	mov    r14,rdi
  4062df:	mov    rax,QWORD PTR fs:0x28
  4062e8:	mov    QWORD PTR [rsp+0x8],rax
  4062ed:	mov    DWORD PTR [rsp],0x0
  4062f4:	movsx  r8d,BYTE PTR [rsi]
  4062f8:	xor    ecx,ecx
  4062fa:	lea    edi,[r8-0x4f]
  4062fe:	cmp    edi,0x29
  406301:	ja     40632c <isspace@plt+0x2a1c>
  406303:	mov    r9d,0x4
  406309:	mov    r10d,0x8
  40630f:	mov    esi,0x3
  406314:	lea    rax,[rip+0x26ce5]        # 42d000 <isspace@plt+0x296f0>
  40631b:	movsxd rdi,DWORD PTR [rax+rdi*4]
  40631f:	add    rdi,rax
  406322:	jmp    rdi
  406324:	mov    r10d,0x10
  40632a:	jmp    40634f <isspace@plt+0x2a3f>
  40632c:	test   r8d,r8d
  40632f:	je     4063ff <isspace@plt+0x2aef>
  406335:	mov    eax,r8d
  406338:	add    al,0xd0
  40633a:	cmp    al,0x9
  40633c:	ja     40645a <isspace@plt+0x2b4a>
  406342:	lea    ecx,[r8-0x30]
  406346:	mov    DWORD PTR [rsp],ecx
  406349:	mov    r10d,0xa
  40634f:	mov    esi,0x2
  406354:	jmp    406365 <isspace@plt+0x2a55>
  406356:	mov    r9d,0x8
  40635c:	mov    r10d,0x10
  406362:	mov    esi,r9d
  406365:	mov    dl,BYTE PTR [rbx+0x1]
  406368:	test   dl,dl
  40636a:	je     4063ff <isspace@plt+0x2aef>
  406370:	add    rbx,0x1
  406374:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40637e:	xchg   ax,ax
  406380:	mov    edi,0xffffffd0
  406385:	cmp    r10d,0x8
  406389:	jne    406393 <isspace@plt+0x2a83>
  40638b:	mov    eax,edx
  40638d:	and    al,0xf8
  40638f:	cmp    al,0x30
  406391:	je     4063d0 <isspace@plt+0x2ac0>
  406393:	cmp    r10b,0x10
  406397:	je     40639f <isspace@plt+0x2a8f>
  406399:	cmp    r10b,0xa
  40639d:	jne    406404 <isspace@plt+0x2af4>
  40639f:	mov    eax,edx
  4063a1:	add    al,0xd0
  4063a3:	cmp    al,0xa
  4063a5:	jb     4063d0 <isspace@plt+0x2ac0>
  4063a7:	cmp    r10d,0x10
  4063ab:	jne    406404 <isspace@plt+0x2af4>
  4063ad:	mov    eax,edx
  4063af:	add    al,0x9f
  4063b1:	mov    edi,0xffffffa9
  4063b6:	cmp    al,0x6
  4063b8:	jb     4063d0 <isspace@plt+0x2ac0>
  4063ba:	mov    eax,edx
  4063bc:	add    al,0xbf
  4063be:	mov    edi,0xffffffc9
  4063c3:	cmp    al,0x5
  4063c5:	ja     406404 <isspace@plt+0x2af4>
  4063c7:	nop    WORD PTR [rax+rax*1+0x0]
  4063d0:	movsx  eax,dl
  4063d3:	add    eax,edi
  4063d5:	imul   ecx,r10d
  4063d9:	add    ecx,eax
  4063db:	mov    DWORD PTR [rsp],ecx
  4063de:	lea    edi,[rsi-0x1]
  4063e1:	lea    r15,[rbx+0x1]
  4063e5:	cmp    esi,0x2
  4063e8:	jl     4063f7 <isspace@plt+0x2ae7>
  4063ea:	movzx  edx,BYTE PTR [rbx+0x1]
  4063ee:	mov    rbx,r15
  4063f1:	mov    esi,edi
  4063f3:	test   dl,dl
  4063f5:	jne    406380 <isspace@plt+0x2a70>
  4063f7:	add    edi,0x1
  4063fa:	cmp    edi,0x1
  4063fd:	jle    406407 <isspace@plt+0x2af7>
  4063ff:	xor    r15d,r15d
  406402:	jmp    40643d <isspace@plt+0x2b2d>
  406404:	mov    r15,rbx
  406407:	or     r8b,0x20
  40640b:	cmp    r8b,0x75
  40640f:	jne    406424 <isspace@plt+0x2b14>
  406411:	lea    rdi,[rsp+0x4]
  406416:	mov    rsi,rsp
  406419:	call   404f00 <isspace@plt+0x15f0>
  40641e:	test   eax,eax
  406420:	jg     40642d <isspace@plt+0x2b1d>
  406422:	jmp    40643d <isspace@plt+0x2b2d>
  406424:	mov    BYTE PTR [rsp+0x4],cl
  406428:	mov    eax,0x1
  40642d:	movsxd rdx,eax
  406430:	lea    rsi,[rsp+0x4]
  406435:	mov    rdi,r14
  406438:	call   422710 <isspace@plt+0x1ee00>
  40643d:	mov    rax,QWORD PTR fs:0x28
  406446:	cmp    rax,QWORD PTR [rsp+0x8]
  40644b:	jne    4064b2 <isspace@plt+0x2ba2>
  40644d:	mov    rax,r15
  406450:	add    rsp,0x10
  406454:	pop    rbx
  406455:	pop    r14
  406457:	pop    r15
  406459:	ret    
  40645a:	mov    rdi,r14
  40645d:	mov    rsi,rbx
  406460:	call   423650 <isspace@plt+0x1fd40>
  406465:	test   rax,rax
  406468:	je     4063ff <isspace@plt+0x2aef>
  40646a:	mov    r15,rax
  40646d:	mov    rdi,r14
  406470:	mov    rsi,rbx
  406473:	call   4237a0 <isspace@plt+0x1fe90>
  406478:	mov    DWORD PTR [rsp],eax
  40647b:	cmp    eax,0xffffffff
  40647e:	je     40649f <isspace@plt+0x2b8f>
  406480:	lea    rdi,[rsp+0x4]
  406485:	mov    rsi,rsp
  406488:	call   404f00 <isspace@plt+0x15f0>
  40648d:	cmp    BYTE PTR [rsp+0x4],0xa
  406492:	jne    40641e <isspace@plt+0x2b0e>
  406494:	mov    BYTE PTR [rsp+0x4],0xd
  406499:	test   eax,eax
  40649b:	jg     40642d <isspace@plt+0x2b1d>
  40649d:	jmp    40643d <isspace@plt+0x2b2d>
  40649f:	lea    rsi,[rip+0x29607]        # 42faad <isspace@plt+0x2c19d>
  4064a6:	xor    eax,eax
  4064a8:	mov    rdi,r14
  4064ab:	call   42a150 <isspace@plt+0x26840>
  4064b0:	jmp    40643d <isspace@plt+0x2b2d>
  4064b2:	call   403280 <__stack_chk_fail@plt>
  4064b7:	nop    WORD PTR [rax+rax*1+0x0]
  4064c0:	push   r14
  4064c2:	push   rbx
  4064c3:	push   rax
  4064c4:	mov    rax,QWORD PTR fs:0x28
  4064cd:	mov    QWORD PTR [rsp],rax
  4064d1:	cmp    BYTE PTR [rsi],0x0
  4064d4:	je     40651f <isspace@plt+0x2c0f>
  4064d6:	mov    rbx,rsi
  4064d9:	mov    r14,rdi
  4064dc:	call   423650 <isspace@plt+0x1fd40>
  4064e1:	mov    rcx,rax
  4064e4:	sub    rcx,rbx
  4064e7:	cmp    rcx,0x1
  4064eb:	jg     406521 <isspace@plt+0x2c11>
  4064ed:	movsx  esi,BYTE PTR [rbx]
  4064f0:	mov    rdi,r14
  4064f3:	call   42afc0 <isspace@plt+0x276b0>
  4064f8:	cmp    eax,0x30
  4064fb:	je     406516 <isspace@plt+0x2c06>
  4064fd:	mov    rdi,r14
  406500:	mov    esi,eax
  406502:	call   42b0e0 <isspace@plt+0x277d0>
  406507:	mov    esi,0xe
  40650c:	xor    eax,eax
  40650e:	mov    rdi,r14
  406511:	call   429060 <isspace@plt+0x25750>
  406516:	add    rbx,0x1
  40651a:	mov    rax,rbx
  40651d:	jmp    406521 <isspace@plt+0x2c11>
  40651f:	xor    eax,eax
  406521:	mov    rcx,QWORD PTR fs:0x28
  40652a:	cmp    rcx,QWORD PTR [rsp]
  40652e:	jne    406538 <isspace@plt+0x2c28>
  406530:	add    rsp,0x8
  406534:	pop    rbx
  406535:	pop    r14
  406537:	ret    
  406538:	call   403280 <__stack_chk_fail@plt>
  40653d:	nop    DWORD PTR [rax]
  406540:	push   r15
  406542:	push   r14
  406544:	push   rbx
  406545:	sub    rsp,0x10
  406549:	mov    rbx,rdx
  40654c:	mov    r14,rsi
  40654f:	mov    r15,rdi
  406552:	mov    rax,QWORD PTR fs:0x28
  40655b:	mov    QWORD PTR [rsp+0x8],rax
  406560:	mov    esi,0x7
  406565:	mov    edx,0x4
  40656a:	xor    eax,eax
  40656c:	call   429060 <isspace@plt+0x25750>
  406571:	cmp    DWORD PTR [rbx],0x0
  406574:	jle    40658e <isspace@plt+0x2c7e>
  406576:	mov    esi,0xc
  40657b:	xor    eax,eax
  40657d:	mov    rdi,r15
  406580:	call   428140 <isspace@plt+0x24830>
  406585:	lea    rsi,[rip+0x296d2]        # 42fc5e <isspace@plt+0x2c34e>
  40658c:	jmp    4065d7 <isspace@plt+0x2cc7>
  40658e:	mov    rdi,r15
  406591:	call   425e40 <isspace@plt+0x22530>
  406596:	test   al,al
  406598:	je     4065b2 <isspace@plt+0x2ca2>
  40659a:	mov    esi,0x9
  40659f:	xor    eax,eax
  4065a1:	mov    rdi,r15
  4065a4:	call   428140 <isspace@plt+0x24830>
  4065a9:	lea    rsi,[rip+0x29509]        # 42fab9 <isspace@plt+0x2c1a9>
  4065b0:	jmp    4065c8 <isspace@plt+0x2cb8>
  4065b2:	mov    esi,0x8
  4065b7:	xor    eax,eax
  4065b9:	mov    rdi,r15
  4065bc:	call   428140 <isspace@plt+0x24830>
  4065c1:	lea    rsi,[rip+0x29509]        # 42fad1 <isspace@plt+0x2c1c1>
  4065c8:	mov    rdi,r15
  4065cb:	call   423930 <isspace@plt+0x20020>
  4065d0:	lea    rsi,[rip+0x29512]        # 42fae9 <isspace@plt+0x2c1d9>
  4065d7:	mov    rdi,r15
  4065da:	call   423930 <isspace@plt+0x20020>
  4065df:	mov    rax,QWORD PTR fs:0x28
  4065e8:	cmp    rax,QWORD PTR [rsp+0x8]
  4065ed:	jne    4065fc <isspace@plt+0x2cec>
  4065ef:	mov    rax,r14
  4065f2:	add    rsp,0x10
  4065f6:	pop    rbx
  4065f7:	pop    r14
  4065f9:	pop    r15
  4065fb:	ret    
  4065fc:	call   403280 <__stack_chk_fail@plt>
  406601:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40660b:	nop    DWORD PTR [rax+rax*1+0x0]
  406610:	push   rbp
  406611:	push   r15
  406613:	push   r14
  406615:	push   rbx
  406616:	push   rax
  406617:	mov    rbx,rdx
  40661a:	mov    r14,rsi
  40661d:	mov    r15,rdi
  406620:	mov    rax,QWORD PTR fs:0x28
  406629:	mov    QWORD PTR [rsp],rax
  40662d:	call   427920 <isspace@plt+0x24010>
  406632:	mov    ebp,eax
  406634:	mov    rdx,QWORD PTR [rbx]
  406637:	mov    esi,0x6
  40663c:	xor    eax,eax
  40663e:	mov    rdi,r15
  406641:	call   429060 <isspace@plt+0x25750>
  406646:	test   ebp,ebp
  406648:	jne    406674 <isspace@plt+0x2d64>
  40664a:	xor    esi,esi
  40664c:	mov    rdi,r15
  40664f:	call   424a90 <isspace@plt+0x21180>
  406654:	test   eax,eax
  406656:	je     406665 <isspace@plt+0x2d55>
  406658:	add    eax,0xffffffff
  40665b:	mov    rdi,r15
  40665e:	mov    esi,eax
  406660:	call   424dd0 <isspace@plt+0x214c0>
  406665:	mov    esi,0xd
  40666a:	xor    eax,eax
  40666c:	mov    rdi,r15
  40666f:	call   428140 <isspace@plt+0x24830>
  406674:	mov    rax,QWORD PTR fs:0x28
  40667d:	cmp    rax,QWORD PTR [rsp]
  406681:	jne    406691 <isspace@plt+0x2d81>
  406683:	mov    rax,r14
  406686:	add    rsp,0x8
  40668a:	pop    rbx
  40668b:	pop    r14
  40668d:	pop    r15
  40668f:	pop    rbp
  406690:	ret    
  406691:	call   403280 <__stack_chk_fail@plt>
  406696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4066a0:	push   rbx
  4066a1:	sub    rsp,0x10
  4066a5:	mov    rbx,rsi
  4066a8:	mov    rax,QWORD PTR fs:0x28
  4066b1:	mov    QWORD PTR [rsp+0x8],rax
  4066b6:	call   424ba0 <isspace@plt+0x21290>
  4066bb:	mov    rax,QWORD PTR fs:0x28
  4066c4:	cmp    rax,QWORD PTR [rsp+0x8]
  4066c9:	jne    4066d4 <isspace@plt+0x2dc4>
  4066cb:	mov    rax,rbx
  4066ce:	add    rsp,0x10
  4066d2:	pop    rbx
  4066d3:	ret    
  4066d4:	call   403280 <__stack_chk_fail@plt>
  4066d9:	nop    DWORD PTR [rax+0x0]
  4066e0:	push   r14
  4066e2:	push   rbx
  4066e3:	push   rax
  4066e4:	mov    r14,rsi
  4066e7:	mov    rax,QWORD PTR fs:0x28
  4066f0:	mov    QWORD PTR [rsp],rax
  4066f4:	call   425dd0 <isspace@plt+0x224c0>
  4066f9:	mov    rdi,rax
  4066fc:	call   41f710 <isspace@plt+0x1be00>
  406701:	test   rax,rax
  406704:	je     406728 <isspace@plt+0x2e18>
  406706:	mov    rbx,rax
  406709:	nop    DWORD PTR [rax+0x0]
  406710:	mov    rdi,rbx
  406713:	call   41fd20 <isspace@plt+0x1c410>
  406718:	mov    rdi,rbx
  40671b:	call   41f7f0 <isspace@plt+0x1bee0>
  406720:	mov    rbx,rax
  406723:	test   rax,rax
  406726:	jne    406710 <isspace@plt+0x2e00>
  406728:	mov    rax,QWORD PTR fs:0x28
  406731:	cmp    rax,QWORD PTR [rsp]
  406735:	jne    406742 <isspace@plt+0x2e32>
  406737:	mov    rax,r14
  40673a:	add    rsp,0x8
  40673e:	pop    rbx
  40673f:	pop    r14
  406741:	ret    
  406742:	call   403280 <__stack_chk_fail@plt>
  406747:	nop    WORD PTR [rax+rax*1+0x0]
  406750:	push   r14
  406752:	push   rbx
  406753:	push   rax
  406754:	mov    r14,rsi
  406757:	mov    rax,QWORD PTR fs:0x28
  406760:	mov    QWORD PTR [rsp],rax
  406764:	mov    rbx,QWORD PTR [rdx]
  406767:	call   425dd0 <isspace@plt+0x224c0>
  40676c:	mov    rdi,rax
  40676f:	call   rbx
  406771:	mov    rax,QWORD PTR fs:0x28
  40677a:	cmp    rax,QWORD PTR [rsp]
  40677e:	jne    40678b <isspace@plt+0x2e7b>
  406780:	mov    rax,r14
  406783:	add    rsp,0x8
  406787:	pop    rbx
  406788:	pop    r14
  40678a:	ret    
  40678b:	call   403280 <__stack_chk_fail@plt>
  406790:	push   r15
  406792:	push   r14
  406794:	push   r12
  406796:	push   rbx
  406797:	push   rax
  406798:	mov    r12,rdx
  40679b:	mov    r14,rsi
  40679e:	mov    rbx,rdi
  4067a1:	mov    rax,QWORD PTR fs:0x28
  4067aa:	mov    QWORD PTR [rsp],rax
  4067ae:	call   425dd0 <isspace@plt+0x224c0>
  4067b3:	mov    r15,rax
  4067b6:	mov    rdi,rbx
  4067b9:	call   424da0 <isspace@plt+0x21490>
  4067be:	mov    ecx,DWORD PTR [r12]
  4067c2:	cmp    eax,0xffffffff
  4067c5:	jne    4067ce <isspace@plt+0x2ebe>
  4067c7:	mov    eax,ecx
  4067c9:	neg    eax
  4067cb:	cmovl  eax,ecx
  4067ce:	mov    rdi,r15
  4067d1:	mov    esi,eax
  4067d3:	test   ecx,ecx
  4067d5:	js     4067de <isspace@plt+0x2ece>
  4067d7:	call   41be20 <isspace@plt+0x18510>
  4067dc:	jmp    4067e3 <isspace@plt+0x2ed3>
  4067de:	call   41c500 <isspace@plt+0x18bf0>
  4067e3:	mov    esi,0xffffffff
  4067e8:	mov    rdi,rbx
  4067eb:	call   424dd0 <isspace@plt+0x214c0>
  4067f0:	mov    rax,QWORD PTR fs:0x28
  4067f9:	cmp    rax,QWORD PTR [rsp]
  4067fd:	jne    40680e <isspace@plt+0x2efe>
  4067ff:	mov    rax,r14
  406802:	add    rsp,0x8
  406806:	pop    rbx
  406807:	pop    r12
  406809:	pop    r14
  40680b:	pop    r15
  40680d:	ret    
  40680e:	call   403280 <__stack_chk_fail@plt>
  406813:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40681d:	nop    DWORD PTR [rax]
  406820:	push   rbp
  406821:	push   r15
  406823:	push   r14
  406825:	push   r13
  406827:	push   r12
  406829:	push   rbx
  40682a:	sub    rsp,0x28
  40682e:	mov    rbx,rdx
  406831:	mov    QWORD PTR [rsp+0x8],rsi
  406836:	mov    rbp,rdi
  406839:	mov    rax,QWORD PTR fs:0x28
  406842:	mov    QWORD PTR [rsp+0x20],rax
  406847:	call   425dd0 <isspace@plt+0x224c0>
  40684c:	mov    r12,rax
  40684f:	mov    rdi,rax
  406852:	call   41f750 <isspace@plt+0x1be40>
  406857:	mov    rdi,rax
  40685a:	call   41fd80 <isspace@plt+0x1c470>
  40685f:	mov    r15d,eax
  406862:	mov    esi,0x1
  406867:	mov    QWORD PTR [rsp],rbp
  40686b:	mov    rdi,rbp
  40686e:	call   424e10 <isspace@plt+0x21500>
  406873:	mov    QWORD PTR [rsp+0x10],rax
  406878:	mov    QWORD PTR [rsp+0x18],rdx
  40687d:	jmp    406894 <isspace@plt+0x2f84>
  40687f:	nop
  406880:	mov    rdi,rbp
  406883:	call   41f5c0 <isspace@plt+0x1bcb0>
  406888:	movzx  esi,r15b
  40688c:	mov    rdi,rbp
  40688f:	call   41fcf0 <isspace@plt+0x1c3e0>
  406894:	lea    rdi,[rsp+0x10]
  406899:	call   424e80 <isspace@plt+0x21570>
  40689e:	test   al,al
  4068a0:	je     4069c0 <isspace@plt+0x30b0>
  4068a6:	mov    eax,DWORD PTR [rbx]
  4068a8:	test   eax,eax
  4068aa:	jg     4068c0 <isspace@plt+0x2fb0>
  4068ac:	cmp    eax,0x80000000
  4068b1:	je     4068e0 <isspace@plt+0x2fd0>
  4068b3:	cmp    eax,0xffffffff
  4068b6:	je     4068d0 <isspace@plt+0x2fc0>
  4068b8:	jmp    4069ce <isspace@plt+0x30be>
  4068bd:	nop    DWORD PTR [rax]
  4068c0:	cmp    eax,0x7fffffff
  4068c5:	je     406900 <isspace@plt+0x2ff0>
  4068c7:	cmp    eax,0x1
  4068ca:	jne    4069ce <isspace@plt+0x30be>
  4068d0:	mov    rdi,r12
  4068d3:	call   41f750 <isspace@plt+0x1be40>
  4068d8:	jmp    4068e8 <isspace@plt+0x2fd8>
  4068da:	nop    WORD PTR [rax+rax*1+0x0]
  4068e0:	mov    rdi,r12
  4068e3:	call   41f710 <isspace@plt+0x1be00>
  4068e8:	mov    r14,rax
  4068eb:	test   rax,rax
  4068ee:	jne    406930 <isspace@plt+0x3020>
  4068f0:	jmp    4069ce <isspace@plt+0x30be>
  4068f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068ff:	nop
  406900:	mov    rdi,r12
  406903:	call   41f710 <isspace@plt+0x1be00>
  406908:	test   rax,rax
  40690b:	je     4069ce <isspace@plt+0x30be>
  406911:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40691b:	nop    DWORD PTR [rax+rax*1+0x0]
  406920:	mov    r14,rax
  406923:	mov    rdi,rax
  406926:	call   41f7f0 <isspace@plt+0x1bee0>
  40692b:	test   rax,rax
  40692e:	jne    406920 <isspace@plt+0x3010>
  406930:	mov    rdi,r14
  406933:	call   41b4d0 <isspace@plt+0x17bc0>
  406938:	mov    r13,rax
  40693b:	mov    eax,DWORD PTR [rbx]
  40693d:	test   eax,eax
  40693f:	jle    406950 <isspace@plt+0x3040>
  406941:	mov    rdi,r14
  406944:	call   41e120 <isspace@plt+0x1a810>
  406949:	jmp    406960 <isspace@plt+0x3050>
  40694b:	nop    DWORD PTR [rax+rax*1+0x0]
  406950:	jns    406960 <isspace@plt+0x3050>
  406952:	mov    rdi,r14
  406955:	call   41dcd0 <isspace@plt+0x1a3c0>
  40695a:	nop    WORD PTR [rax+rax*1+0x0]
  406960:	mov    rdi,r14
  406963:	call   41b4d0 <isspace@plt+0x17bc0>
  406968:	mov    rbp,rax
  40696b:	mov    rdi,r14
  40696e:	mov    rsi,r13
  406971:	call   41ad90 <isspace@plt+0x17480>
  406976:	mov    rdi,r12
  406979:	mov    rsi,rbp
  40697c:	call   41bac0 <isspace@plt+0x181b0>
  406981:	mov    rbp,rax
  406984:	test   rax,rax
  406987:	jne    406880 <isspace@plt+0x2f70>
  40698d:	mov    eax,DWORD PTR [rbx]
  40698f:	cmp    eax,0x1
  406992:	je     4069a7 <isspace@plt+0x3097>
  406994:	cmp    eax,0xffffffff
  406997:	jne    406894 <isspace@plt+0x2f84>
  40699d:	mov    rdi,r14
  4069a0:	call   41f790 <isspace@plt+0x1be80>
  4069a5:	jmp    4069af <isspace@plt+0x309f>
  4069a7:	mov    rdi,r14
  4069aa:	call   41f7f0 <isspace@plt+0x1bee0>
  4069af:	mov    rbp,rax
  4069b2:	test   rax,rax
  4069b5:	jne    406880 <isspace@plt+0x2f70>
  4069bb:	jmp    406894 <isspace@plt+0x2f84>
  4069c0:	mov    esi,0xffffffff
  4069c5:	mov    rdi,QWORD PTR [rsp]
  4069c9:	call   424dd0 <isspace@plt+0x214c0>
  4069ce:	mov    rax,QWORD PTR fs:0x28
  4069d7:	cmp    rax,QWORD PTR [rsp+0x20]
  4069dc:	jne    4069f2 <isspace@plt+0x30e2>
  4069de:	mov    rax,QWORD PTR [rsp+0x8]
  4069e3:	add    rsp,0x28
  4069e7:	pop    rbx
  4069e8:	pop    r12
  4069ea:	pop    r13
  4069ec:	pop    r14
  4069ee:	pop    r15
  4069f0:	pop    rbp
  4069f1:	ret    
  4069f2:	call   403280 <__stack_chk_fail@plt>
  4069f7:	nop    WORD PTR [rax+rax*1+0x0]
  406a00:	push   rbp
  406a01:	push   r15
  406a03:	push   r14
  406a05:	push   r13
  406a07:	push   r12
  406a09:	push   rbx
  406a0a:	sub    rsp,0x48
  406a0e:	mov    r13,rdx
  406a11:	mov    r14,rsi
  406a14:	mov    rbx,rdi
  406a17:	mov    rax,QWORD PTR fs:0x28
  406a20:	mov    QWORD PTR [rsp+0x40],rax
  406a25:	call   425d90 <isspace@plt+0x22480>
  406a2a:	mov    QWORD PTR [rsp+0x8],rax
  406a2f:	mov    rdi,rbx
  406a32:	call   425dd0 <isspace@plt+0x224c0>
  406a37:	mov    rbx,rax
  406a3a:	mov    rdi,rax
  406a3d:	call   41f750 <isspace@plt+0x1be40>
  406a42:	mov    r12,rax
  406a45:	mov    rdi,rax
  406a48:	call   41ff60 <isspace@plt+0x1c650>
  406a4d:	mov    QWORD PTR [rsp+0x30],rax
  406a52:	mov    QWORD PTR [rsp+0x38],rdx
  406a57:	lea    rdi,[rsp+0x30]
  406a5c:	call   417400 <isspace@plt+0x13af0>
  406a61:	test   al,al
  406a63:	je     406c88 <isspace@plt+0x3378>
  406a69:	mov    rdi,rbx
  406a6c:	call   41f1e0 <isspace@plt+0x1b8d0>
  406a71:	cmp    eax,0x1
  406a74:	jne    406aaf <isspace@plt+0x319f>
  406a76:	mov    rdi,r12
  406a79:	call   41b4d0 <isspace@plt+0x17bc0>
  406a7e:	mov    r12,QWORD PTR [rsp+0x8]
  406a83:	mov    rdi,r12
  406a86:	mov    rsi,rax
  406a89:	call   415cc0 <isspace@plt+0x123b0>
  406a8e:	mov    QWORD PTR [rsp+0x20],rax
  406a93:	mov    QWORD PTR [rsp+0x28],rdx
  406a98:	lea    rdi,[rsp+0x30]
  406a9d:	lea    rsi,[rsp+0x20]
  406aa2:	call   4176d0 <isspace@plt+0x13dc0>
  406aa7:	mov    BYTE PTR [rip+0x3c8e3],al        # 443390 <isspace@plt+0x3fa80>
  406aad:	jmp    406aba <isspace@plt+0x31aa>
  406aaf:	mov    al,BYTE PTR [rip+0x3c8db]        # 443390 <isspace@plt+0x3fa80>
  406ab5:	mov    r12,QWORD PTR [rsp+0x8]
  406aba:	test   al,al
  406abc:	lea    rax,[rip+0xfa9d]        # 416560 <isspace@plt+0x12c50>
  406ac3:	cmove  rax,QWORD PTR [rip+0x3c51d]        # 442fe8 <isspace@plt+0x3f6d8>
  406acb:	mov    QWORD PTR [rsp+0x18],rax
  406ad0:	lea    r15,[rip+0xf9b9]        # 416490 <isspace@plt+0x12b80>
  406ad7:	cmove  r15,QWORD PTR [rip+0x3c4b9]        # 442f98 <isspace@plt+0x3f688>
  406adf:	mov    rbp,QWORD PTR [rsp+0x30]
  406ae4:	lea    rdi,[rsp+0x30]
  406ae9:	call   417460 <isspace@plt+0x13b50>
  406aee:	mov    rdi,r12
  406af1:	mov    rsi,rbp
  406af4:	mov    rdx,rax
  406af7:	call   411460 <isspace@plt+0xdb50>
  406afc:	test   rax,rax
  406aff:	je     406c88 <isspace@plt+0x3378>
  406b05:	mov    r12,rax
  406b08:	mov    QWORD PTR [rsp+0x10],r14
  406b0d:	mov    r14b,BYTE PTR [r13+0x0]
  406b11:	vmovups xmm0,XMMWORD PTR [rsp+0x30]
  406b17:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  406b1d:	lea    r13,[rsp+0x30]
  406b22:	jmp    406ba0 <isspace@plt+0x3290>
  406b24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b2e:	xchg   ax,ax
  406b30:	mov    rdi,rbx
  406b33:	call   4205b0 <isspace@plt+0x1cca0>
  406b38:	mov    rsi,QWORD PTR [rsp+0x38]
  406b3d:	mov    rdi,rax
  406b40:	call   413010 <isspace@plt+0xf700>
  406b45:	mov    rdi,rbx
  406b48:	mov    rsi,rax
  406b4b:	call   41bac0 <isspace@plt+0x181b0>
  406b50:	mov    rbp,rax
  406b53:	test   rax,rax
  406b56:	je     406b75 <isspace@plt+0x3265>
  406b58:	mov    rdi,rbp
  406b5b:	mov    rsi,r13
  406b5e:	call   420010 <isspace@plt+0x1c700>
  406b63:	mov    esi,0x1
  406b68:	mov    rdi,rbp
  406b6b:	call   41fcf0 <isspace@plt+0x1c3e0>
  406b70:	test   r14b,r14b
  406b73:	je     406b90 <isspace@plt+0x3280>
  406b75:	test   r14b,r14b
  406b78:	jne    406ba0 <isspace@plt+0x3290>
  406b7a:	test   rbp,rbp
  406b7d:	je     406ba0 <isspace@plt+0x3290>
  406b7f:	jmp    406c7b <isspace@plt+0x336b>
  406b84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b8e:	xchg   ax,ax
  406b90:	mov    rdi,rbp
  406b93:	call   41f5c0 <isspace@plt+0x1bcb0>
  406b98:	test   r14b,r14b
  406b9b:	je     406b7a <isspace@plt+0x326a>
  406b9d:	nop    DWORD PTR [rax]
  406ba0:	mov    rsi,QWORD PTR [rsp+0x38]
  406ba5:	mov    rdi,QWORD PTR [rsp+0x8]
  406baa:	mov    rdx,r12
  406bad:	call   r15
  406bb0:	mov    QWORD PTR [rsp+0x30],rax
  406bb5:	mov    QWORD PTR [rsp+0x38],rdx
  406bba:	mov    rdi,r13
  406bbd:	call   417400 <isspace@plt+0x13af0>
  406bc2:	test   al,al
  406bc4:	jne    406b30 <isspace@plt+0x3220>
  406bca:	vmovaps xmm0,XMMWORD PTR [rsp+0x20]
  406bd0:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  406bd6:	lea    r13,[rsp+0x30]
  406bdb:	jmp    406c50 <isspace@plt+0x3340>
  406bdd:	nop    DWORD PTR [rax]
  406be0:	mov    rdi,rbx
  406be3:	call   4205b0 <isspace@plt+0x1cca0>
  406be8:	mov    rsi,QWORD PTR [rsp+0x38]
  406bed:	mov    rdi,rax
  406bf0:	call   413010 <isspace@plt+0xf700>
  406bf5:	mov    rdi,rbx
  406bf8:	mov    rsi,rax
  406bfb:	call   41bac0 <isspace@plt+0x181b0>
  406c00:	mov    rbp,rax
  406c03:	test   rax,rax
  406c06:	je     406c25 <isspace@plt+0x3315>
  406c08:	mov    rdi,rbp
  406c0b:	mov    rsi,r13
  406c0e:	call   420010 <isspace@plt+0x1c700>
  406c13:	mov    esi,0x1
  406c18:	mov    rdi,rbp
  406c1b:	call   41fcf0 <isspace@plt+0x1c3e0>
  406c20:	test   r14b,r14b
  406c23:	je     406c40 <isspace@plt+0x3330>
  406c25:	test   r14b,r14b
  406c28:	jne    406c50 <isspace@plt+0x3340>
  406c2a:	test   rbp,rbp
  406c2d:	je     406c50 <isspace@plt+0x3340>
  406c2f:	jmp    406c7b <isspace@plt+0x336b>
  406c31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  406c40:	mov    rdi,rbp
  406c43:	call   41f5c0 <isspace@plt+0x1bcb0>
  406c48:	test   r14b,r14b
  406c4b:	je     406c2a <isspace@plt+0x331a>
  406c4d:	nop    DWORD PTR [rax]
  406c50:	mov    rsi,QWORD PTR [rsp+0x30]
  406c55:	mov    rdi,QWORD PTR [rsp+0x8]
  406c5a:	mov    rdx,r12
  406c5d:	call   QWORD PTR [rsp+0x18]
  406c61:	mov    QWORD PTR [rsp+0x30],rax
  406c66:	mov    QWORD PTR [rsp+0x38],rdx
  406c6b:	mov    rdi,r13
  406c6e:	call   417400 <isspace@plt+0x13af0>
  406c73:	test   al,al
  406c75:	jne    406be0 <isspace@plt+0x32d0>
  406c7b:	mov    rdi,r12
  406c7e:	call   4030d0 <free@plt>
  406c83:	mov    r14,QWORD PTR [rsp+0x10]
  406c88:	mov    rax,QWORD PTR fs:0x28
  406c91:	cmp    rax,QWORD PTR [rsp+0x40]
  406c96:	jne    406caa <isspace@plt+0x339a>
  406c98:	mov    rax,r14
  406c9b:	add    rsp,0x48
  406c9f:	pop    rbx
  406ca0:	pop    r12
  406ca2:	pop    r13
  406ca4:	pop    r14
  406ca6:	pop    r15
  406ca8:	pop    rbp
  406ca9:	ret    
  406caa:	call   403280 <__stack_chk_fail@plt>
  406caf:	nop
  406cb0:	push   r15
  406cb2:	push   r14
  406cb4:	push   r13
  406cb6:	push   r12
  406cb8:	push   rbx
  406cb9:	sub    rsp,0x10
  406cbd:	mov    r14,rdx
  406cc0:	mov    r15,rsi
  406cc3:	mov    rbx,rdi
  406cc6:	mov    rax,QWORD PTR fs:0x28
  406ccf:	mov    QWORD PTR [rsp+0x8],rax
  406cd4:	call   425dd0 <isspace@plt+0x224c0>
  406cd9:	mov    r13,rax
  406cdc:	mov    rdi,rax
  406cdf:	call   41f750 <isspace@plt+0x1be40>
  406ce4:	mov    r12,rax
  406ce7:	mov    rdi,rbx
  406cea:	mov    rsi,r15
  406ced:	mov    rdx,r14
  406cf0:	call   406a00 <isspace@plt+0x30f0>
  406cf5:	mov    r14,rax
  406cf8:	mov    rdi,r13
  406cfb:	call   41f750 <isspace@plt+0x1be40>
  406d00:	cmp    r12,rax
  406d03:	je     406d0d <isspace@plt+0x33fd>
  406d05:	mov    rdi,r12
  406d08:	call   41f450 <isspace@plt+0x1bb40>
  406d0d:	mov    rax,QWORD PTR fs:0x28
  406d16:	cmp    rax,QWORD PTR [rsp+0x8]
  406d1b:	jne    406d2e <isspace@plt+0x341e>
  406d1d:	mov    rax,r14
  406d20:	add    rsp,0x10
  406d24:	pop    rbx
  406d25:	pop    r12
  406d27:	pop    r13
  406d29:	pop    r14
  406d2b:	pop    r15
  406d2d:	ret    
  406d2e:	call   403280 <__stack_chk_fail@plt>
  406d33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d3d:	nop    DWORD PTR [rax]
  406d40:	push   rbp
  406d41:	push   r15
  406d43:	push   r14
  406d45:	push   r13
  406d47:	push   r12
  406d49:	push   rbx
  406d4a:	push   rax
  406d4b:	mov    r14,rsi
  406d4e:	mov    rbx,rdi
  406d51:	mov    rax,QWORD PTR fs:0x28
  406d5a:	mov    QWORD PTR [rsp],rax
  406d5e:	call   425dd0 <isspace@plt+0x224c0>
  406d63:	mov    r15,rax
  406d66:	mov    rdi,rbx
  406d69:	call   425d90 <isspace@plt+0x22480>
  406d6e:	mov    r12,rax
  406d71:	mov    rdi,r15
  406d74:	call   41f710 <isspace@plt+0x1be00>
  406d79:	test   rax,rax
  406d7c:	je     406db6 <isspace@plt+0x34a6>
  406d7e:	mov    r13,rax
  406d81:	mov    ebx,0x7fffffff
  406d86:	mov    ebp,ebx
  406d88:	nop    DWORD PTR [rax+rax*1+0x0]
  406d90:	mov    rdi,r13
  406d93:	call   41f900 <isspace@plt+0x1bff0>
  406d98:	cmp    eax,ebx
  406d9a:	cmovle ebp,eax
  406d9d:	test   eax,eax
  406d9f:	cmovs  ebp,ebx
  406da2:	mov    rdi,r13
  406da5:	call   41f7f0 <isspace@plt+0x1bee0>
  406daa:	mov    r13,rax
  406dad:	mov    ebx,ebp
  406daf:	test   rax,rax
  406db2:	jne    406d90 <isspace@plt+0x3480>
  406db4:	jmp    406dbb <isspace@plt+0x34ab>
  406db6:	mov    ebp,0x7fffffff
  406dbb:	mov    rdi,r15
  406dbe:	call   41f710 <isspace@plt+0x1be00>
  406dc3:	test   rax,rax
  406dc6:	je     406e0f <isspace@plt+0x34ff>
  406dc8:	mov    rbx,rax
  406dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  406dd0:	mov    rdi,rbx
  406dd3:	mov    esi,ebp
  406dd5:	call   41f940 <isspace@plt+0x1c030>
  406dda:	cmp    eax,0xffffffff
  406ddd:	jne    406dff <isspace@plt+0x34ef>
  406ddf:	mov    rdi,rbx
  406de2:	call   41b4d0 <isspace@plt+0x17bc0>
  406de7:	mov    rdi,r12
  406dea:	mov    rsi,rax
  406ded:	mov    edx,ebp
  406def:	call   413b30 <isspace@plt+0x10220>
  406df4:	mov    rdi,rbx
  406df7:	mov    rsi,rax
  406dfa:	call   41ad90 <isspace@plt+0x17480>
  406dff:	mov    rdi,rbx
  406e02:	call   41f7f0 <isspace@plt+0x1bee0>
  406e07:	mov    rbx,rax
  406e0a:	test   rax,rax
  406e0d:	jne    406dd0 <isspace@plt+0x34c0>
  406e0f:	mov    rax,QWORD PTR fs:0x28
  406e18:	cmp    rax,QWORD PTR [rsp]
  406e1c:	jne    406e30 <isspace@plt+0x3520>
  406e1e:	mov    rax,r14
  406e21:	add    rsp,0x8
  406e25:	pop    rbx
  406e26:	pop    r12
  406e28:	pop    r13
  406e2a:	pop    r14
  406e2c:	pop    r15
  406e2e:	pop    rbp
  406e2f:	ret    
  406e30:	call   403280 <__stack_chk_fail@plt>
  406e35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e3f:	nop
  406e40:	push   rbp
  406e41:	push   r15
  406e43:	push   r14
  406e45:	push   r13
  406e47:	push   r12
  406e49:	push   rbx
  406e4a:	sub    rsp,0x28
  406e4e:	mov    r14,rdx
  406e51:	mov    QWORD PTR [rsp+0x18],rsi
  406e56:	mov    rbp,rdi
  406e59:	mov    rax,QWORD PTR fs:0x28
  406e62:	mov    QWORD PTR [rsp+0x20],rax
  406e67:	call   425dd0 <isspace@plt+0x224c0>
  406e6c:	mov    rbx,rax
  406e6f:	mov    rdi,rbp
  406e72:	call   425d90 <isspace@plt+0x22480>
  406e77:	mov    r12,rax
  406e7a:	mov    eax,DWORD PTR [r14]
  406e7d:	mov    DWORD PTR [rsp],eax
  406e80:	mov    rdi,rbx
  406e83:	call   41f240 <isspace@plt+0x1b930>
  406e88:	mov    DWORD PTR [rsp+0x4],eax
  406e8c:	test   eax,eax
  406e8e:	jle    406fbd <isspace@plt+0x36ad>
  406e94:	xor    r15d,r15d
  406e97:	mov    QWORD PTR [rsp+0x8],rbx
  406e9c:	nop    DWORD PTR [rax+0x0]
  406ea0:	mov    rdi,rbx
  406ea3:	mov    esi,r15d
  406ea6:	call   41f2f0 <isspace@plt+0x1b9e0>
  406eab:	test   rax,rax
  406eae:	je     406f00 <isspace@plt+0x35f0>
  406eb0:	mov    rbx,rax
  406eb3:	xor    r13d,r13d
  406eb6:	mov    ebp,0x7fffffff
  406ebb:	mov    r14d,DWORD PTR [rsp]
  406ebf:	nop
  406ec0:	mov    rdi,rbx
  406ec3:	call   41ff60 <isspace@plt+0x1c650>
  406ec8:	test   r14d,r14d
  406ecb:	cmovs  rdx,rax
  406ecf:	mov    rdi,r12
  406ed2:	mov    rsi,rdx
  406ed5:	call   4139c0 <isspace@plt+0x100b0>
  406eda:	cmp    eax,ebp
  406edc:	cmovle ebp,eax
  406edf:	cmp    eax,r13d
  406ee2:	cmovge r13d,eax
  406ee6:	mov    rdi,rbx
  406ee9:	mov    esi,r15d
  406eec:	call   41f390 <isspace@plt+0x1ba80>
  406ef1:	mov    rbx,rax
  406ef4:	test   rax,rax
  406ef7:	jne    406ec0 <isspace@plt+0x35b0>
  406ef9:	jmp    406f08 <isspace@plt+0x35f8>
  406efb:	nop    DWORD PTR [rax+rax*1+0x0]
  406f00:	mov    ebp,0x7fffffff
  406f05:	xor    r13d,r13d
  406f08:	mov    eax,r13d
  406f0b:	sub    eax,ebp
  406f0d:	mov    ebp,eax
  406f0f:	movsxd rbx,eax
  406f12:	lea    rdi,[rbx+0x1]
  406f16:	call   4035e0 <malloc@plt>
  406f1b:	test   rax,rax
  406f1e:	je     406fc5 <isspace@plt+0x36b5>
  406f24:	mov    esi,0x20
  406f29:	mov    QWORD PTR [rsp+0x10],rax
  406f2e:	mov    rdi,rax
  406f31:	mov    rdx,rbx
  406f34:	call   403360 <memset@plt>
  406f39:	mov    rdi,QWORD PTR [rsp+0x8]
  406f3e:	mov    esi,r15d
  406f41:	call   41f2f0 <isspace@plt+0x1b9e0>
  406f46:	test   rax,rax
  406f49:	je     406f9f <isspace@plt+0x368f>
  406f4b:	mov    r14,rax
  406f4e:	xchg   ax,ax
  406f50:	mov    rdi,r14
  406f53:	call   41ff60 <isspace@plt+0x1c650>
  406f58:	mov    rbx,rax
  406f5b:	cmp    DWORD PTR [rsp],0x0
  406f5f:	cmovs  rdx,rax
  406f63:	mov    rdi,r12
  406f66:	mov    rsi,rdx
  406f69:	call   4139c0 <isspace@plt+0x100b0>
  406f6e:	mov    ecx,r13d
  406f71:	sub    ecx,eax
  406f73:	jle    406f8c <isspace@plt+0x367c>
  406f75:	cmp    ecx,ebp
  406f77:	ja     406f8c <isspace@plt+0x367c>
  406f79:	movsxd rcx,ecx
  406f7c:	mov    rdi,r12
  406f7f:	mov    rsi,rbx
  406f82:	mov    rdx,QWORD PTR [rsp+0x10]
  406f87:	call   40f140 <isspace@plt+0xb830>
  406f8c:	mov    rdi,r14
  406f8f:	mov    esi,r15d
  406f92:	call   41f390 <isspace@plt+0x1ba80>
  406f97:	mov    r14,rax
  406f9a:	test   rax,rax
  406f9d:	jne    406f50 <isspace@plt+0x3640>
  406f9f:	mov    rdi,QWORD PTR [rsp+0x10]
  406fa4:	call   4030d0 <free@plt>
  406fa9:	add    r15d,0x1
  406fad:	cmp    r15d,DWORD PTR [rsp+0x4]
  406fb2:	mov    rbx,QWORD PTR [rsp+0x8]
  406fb7:	jl     406ea0 <isspace@plt+0x3590>
  406fbd:	mov    rdi,rbx
  406fc0:	call   41a4a0 <isspace@plt+0x16b90>
  406fc5:	mov    rax,QWORD PTR fs:0x28
  406fce:	cmp    rax,QWORD PTR [rsp+0x20]
  406fd3:	jne    406fe9 <isspace@plt+0x36d9>
  406fd5:	mov    rax,QWORD PTR [rsp+0x18]
  406fda:	add    rsp,0x28
  406fde:	pop    rbx
  406fdf:	pop    r12
  406fe1:	pop    r13
  406fe3:	pop    r14
  406fe5:	pop    r15
  406fe7:	pop    rbp
  406fe8:	ret    
  406fe9:	call   403280 <__stack_chk_fail@plt>
  406fee:	xchg   ax,ax
  406ff0:	push   r14
  406ff2:	push   rbx
  406ff3:	push   rax
  406ff4:	mov    r14,rsi
  406ff7:	mov    rax,QWORD PTR fs:0x28
  407000:	mov    QWORD PTR [rsp],rax
  407004:	call   425dd0 <isspace@plt+0x224c0>
  407009:	mov    rbx,rax
  40700c:	mov    rdi,rax
  40700f:	call   41f1e0 <isspace@plt+0x1b8d0>
  407014:	mov    rdi,rbx
  407017:	cmp    eax,0x2
  40701a:	jl     407023 <isspace@plt+0x3713>
  40701c:	call   41fdb0 <isspace@plt+0x1c4a0>
  407021:	jmp    407030 <isspace@plt+0x3720>
  407023:	call   41f750 <isspace@plt+0x1be40>
  407028:	mov    rdi,rax
  40702b:	call   41f690 <isspace@plt+0x1bd80>
  407030:	mov    rax,QWORD PTR fs:0x28
  407039:	cmp    rax,QWORD PTR [rsp]
  40703d:	jne    40704a <isspace@plt+0x373a>
  40703f:	mov    rax,r14
  407042:	add    rsp,0x8
  407046:	pop    rbx
  407047:	pop    r14
  407049:	ret    
  40704a:	call   403280 <__stack_chk_fail@plt>
  40704f:	nop
  407050:	push   r14
  407052:	push   rbx
  407053:	push   rax
  407054:	mov    r14,rsi
  407057:	mov    rax,QWORD PTR fs:0x28
  407060:	mov    QWORD PTR [rsp],rax
  407064:	call   425dd0 <isspace@plt+0x224c0>
  407069:	mov    rbx,rax
  40706c:	mov    rdi,rax
  40706f:	call   41f750 <isspace@plt+0x1be40>
  407074:	mov    rdi,rax
  407077:	call   41f450 <isspace@plt+0x1bb40>
  40707c:	mov    rdi,rbx
  40707f:	call   41ec80 <isspace@plt+0x1b370>
  407084:	mov    rdi,rbx
  407087:	mov    rsi,rax
  40708a:	call   41ad60 <isspace@plt+0x17450>
  40708f:	mov    rax,QWORD PTR fs:0x28
  407098:	cmp    rax,QWORD PTR [rsp]
  40709c:	jne    4070a9 <isspace@plt+0x3799>
  40709e:	mov    rax,r14
  4070a1:	add    rsp,0x8
  4070a5:	pop    rbx
  4070a6:	pop    r14
  4070a8:	ret    
  4070a9:	call   403280 <__stack_chk_fail@plt>
  4070ae:	xchg   ax,ax
  4070b0:	push   rbp
  4070b1:	push   r15
  4070b3:	push   r14
  4070b5:	push   r13
  4070b7:	push   r12
  4070b9:	push   rbx
  4070ba:	push   rax
  4070bb:	mov    rbp,rdx
  4070be:	mov    r14,rsi
  4070c1:	mov    r15,rdi
  4070c4:	mov    rax,QWORD PTR fs:0x28
  4070cd:	mov    QWORD PTR [rsp],rax
  4070d1:	call   425dd0 <isspace@plt+0x224c0>
  4070d6:	mov    r12,rax
  4070d9:	mov    rdi,rax
  4070dc:	call   41f240 <isspace@plt+0x1b930>
  4070e1:	mov    ebx,eax
  4070e3:	mov    esi,DWORD PTR [rbp+0x0]
  4070e6:	mov    rdi,r15
  4070e9:	call   424a90 <isspace@plt+0x21180>
  4070ee:	mov    r13d,eax
  4070f1:	cmp    eax,ebx
  4070f3:	cmovg  r13d,ebx
  4070f7:	mov    rdi,r12
  4070fa:	call   41f1e0 <isspace@plt+0x1b8d0>
  4070ff:	cmp    eax,0x1
  407102:	jne    407115 <isspace@plt+0x3805>
  407104:	lea    rsi,[rip+0x28d75]        # 42fe80 <isspace@plt+0x2c570>
  40710b:	mov    rdi,r15
  40710e:	call   423930 <isspace@plt+0x20020>
  407113:	jmp    40715b <isspace@plt+0x384b>
  407115:	add    r13d,0xffffffff
  407119:	mov    rdi,r12
  40711c:	mov    esi,r13d
  40711f:	call   41f2f0 <isspace@plt+0x1b9e0>
  407124:	test   rax,rax
  407127:	je     40714e <isspace@plt+0x383e>
  407129:	mov    rbx,rax
  40712c:	nop    DWORD PTR [rax+0x0]
  407130:	mov    rdi,rbx
  407133:	mov    esi,r13d
  407136:	call   41f390 <isspace@plt+0x1ba80>
  40713b:	mov    rbp,rax
  40713e:	mov    rdi,rbx
  407141:	call   41f450 <isspace@plt+0x1bb40>
  407146:	mov    rbx,rbp
  407149:	test   rbp,rbp
  40714c:	jne    407130 <isspace@plt+0x3820>
  40714e:	mov    esi,0xffffffff
  407153:	mov    rdi,r15
  407156:	call   424dd0 <isspace@plt+0x214c0>
  40715b:	mov    rax,QWORD PTR fs:0x28
  407164:	cmp    rax,QWORD PTR [rsp]
  407168:	jne    40717c <isspace@plt+0x386c>
  40716a:	mov    rax,r14
  40716d:	add    rsp,0x8
  407171:	pop    rbx
  407172:	pop    r12
  407174:	pop    r13
  407176:	pop    r14
  407178:	pop    r15
  40717a:	pop    rbp
  40717b:	ret    
  40717c:	call   403280 <__stack_chk_fail@plt>
  407181:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40718b:	nop    DWORD PTR [rax+rax*1+0x0]
  407190:	push   rbp
  407191:	push   r15
  407193:	push   r14
  407195:	push   r13
  407197:	push   r12
  407199:	push   rbx
  40719a:	push   rax
  40719b:	mov    r12,rdx
  40719e:	mov    r14,rsi
  4071a1:	mov    r15,rdi
  4071a4:	mov    rax,QWORD PTR fs:0x28
  4071ad:	mov    QWORD PTR [rsp],rax
  4071b1:	call   425dd0 <isspace@plt+0x224c0>
  4071b6:	mov    rbx,rax
  4071b9:	mov    rdi,rax
  4071bc:	call   41f240 <isspace@plt+0x1b930>
  4071c1:	mov    ebp,eax
  4071c3:	mov    esi,DWORD PTR [r12]
  4071c7:	mov    rdi,r15
  4071ca:	call   424a90 <isspace@plt+0x21180>
  4071cf:	mov    r12d,eax
  4071d2:	cmp    eax,ebp
  4071d4:	cmovg  r12d,ebp
  4071d8:	mov    rdi,rbx
  4071db:	call   41f1e0 <isspace@plt+0x1b8d0>
  4071e0:	cmp    eax,0x1
  4071e3:	jne    4071ef <isspace@plt+0x38df>
  4071e5:	mov    rdi,r15
  4071e8:	call   421d30 <isspace@plt+0x1e420>
  4071ed:	jmp    407263 <isspace@plt+0x3953>
  4071ef:	add    r12d,0xffffffff
  4071f3:	mov    rdi,rbx
  4071f6:	call   41f710 <isspace@plt+0x1be00>
  4071fb:	mov    rbp,rax
  4071fe:	mov    rdi,rbx
  407201:	mov    esi,r12d
  407204:	call   41f2f0 <isspace@plt+0x1b9e0>
  407209:	test   rbp,rbp
  40720c:	je     407256 <isspace@plt+0x3946>
  40720e:	mov    r13,rax
  407211:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40721b:	nop    DWORD PTR [rax+rax*1+0x0]
  407220:	mov    rdi,rbp
  407223:	call   41f7f0 <isspace@plt+0x1bee0>
  407228:	mov    rbx,rax
  40722b:	cmp    rbp,r13
  40722e:	je     407240 <isspace@plt+0x3930>
  407230:	mov    rdi,rbp
  407233:	call   41f450 <isspace@plt+0x1bb40>
  407238:	jmp    40724e <isspace@plt+0x393e>
  40723a:	nop    WORD PTR [rax+rax*1+0x0]
  407240:	mov    rdi,r13
  407243:	mov    esi,r12d
  407246:	call   41f390 <isspace@plt+0x1ba80>
  40724b:	mov    r13,rax
  40724e:	mov    rbp,rbx
  407251:	test   rbx,rbx
  407254:	jne    407220 <isspace@plt+0x3910>
  407256:	mov    esi,0xffffffff
  40725b:	mov    rdi,r15
  40725e:	call   424dd0 <isspace@plt+0x214c0>
  407263:	mov    rax,QWORD PTR fs:0x28
  40726c:	cmp    rax,QWORD PTR [rsp]
  407270:	jne    407284 <isspace@plt+0x3974>
  407272:	mov    rax,r14
  407275:	add    rsp,0x8
  407279:	pop    rbx
  40727a:	pop    r12
  40727c:	pop    r13
  40727e:	pop    r14
  407280:	pop    r15
  407282:	pop    rbp
  407283:	ret    
  407284:	call   403280 <__stack_chk_fail@plt>
  407289:	nop    DWORD PTR [rax+0x0]
  407290:	push   rbp
  407291:	push   r15
  407293:	push   r14
  407295:	push   r13
  407297:	push   r12
  407299:	push   rbx
  40729a:	sub    rsp,0x18
  40729e:	mov    r13,rdx
  4072a1:	mov    r14,rsi
  4072a4:	mov    r15,rdi
  4072a7:	mov    rax,QWORD PTR fs:0x28
  4072b0:	mov    QWORD PTR [rsp+0x10],rax
  4072b5:	call   425dd0 <isspace@plt+0x224c0>
  4072ba:	mov    r12,rax
  4072bd:	mov    rdi,rax
  4072c0:	call   41f1e0 <isspace@plt+0x1b8d0>
  4072c5:	cmp    eax,0x1
  4072c8:	jne    4072f1 <isspace@plt+0x39e1>
  4072ca:	mov    rdi,r15
  4072cd:	mov    rsi,r14
  4072d0:	mov    rdx,r13
  4072d3:	call   405880 <isspace@plt+0x1f70>
  4072d8:	mov    rcx,QWORD PTR fs:0x28
  4072e1:	cmp    rcx,QWORD PTR [rsp+0x10]
  4072e6:	je     4073d4 <isspace@plt+0x3ac4>
  4072ec:	jmp    4073e3 <isspace@plt+0x3ad3>
  4072f1:	mov    rdi,r12
  4072f4:	call   41f750 <isspace@plt+0x1be40>
  4072f9:	mov    rbx,rax
  4072fc:	mov    esi,0x1
  407301:	mov    rdi,r15
  407304:	call   424e10 <isspace@plt+0x21500>
  407309:	mov    QWORD PTR [rsp],rax
  40730d:	mov    QWORD PTR [rsp+0x8],rdx
  407312:	mov    rdi,rsp
  407315:	call   424e80 <isspace@plt+0x21570>
  40731a:	test   al,al
  40731c:	je     4073ac <isspace@plt+0x3a9c>
  407322:	mov    rbp,rsp
  407325:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40732f:	nop
  407330:	cmp    DWORD PTR [r13+0x0],0x0
  407335:	jle    407360 <isspace@plt+0x3a50>
  407337:	mov    rdi,rbx
  40733a:	call   41f7f0 <isspace@plt+0x1bee0>
  40733f:	mov    rbx,rax
  407342:	test   rax,rax
  407345:	jne    4073a0 <isspace@plt+0x3a90>
  407347:	mov    rdi,r12
  40734a:	call   41f710 <isspace@plt+0x1be00>
  40734f:	mov    rbx,rax
  407352:	jmp    4073a0 <isspace@plt+0x3a90>
  407354:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40735e:	xchg   ax,ax
  407360:	mov    rdi,rbx
  407363:	call   41f790 <isspace@plt+0x1be80>
  407368:	mov    rbx,rax
  40736b:	test   rax,rax
  40736e:	jne    4073a0 <isspace@plt+0x3a90>
  407370:	mov    rdi,r12
  407373:	call   41f710 <isspace@plt+0x1be00>
  407378:	test   rax,rax
  40737b:	je     407392 <isspace@plt+0x3a82>
  40737d:	nop    DWORD PTR [rax]
  407380:	mov    rbx,rax
  407383:	mov    rdi,rax
  407386:	call   41f7f0 <isspace@plt+0x1bee0>
  40738b:	test   rax,rax
  40738e:	jne    407380 <isspace@plt+0x3a70>
  407390:	jmp    4073a0 <isspace@plt+0x3a90>
  407392:	xor    ebx,ebx
  407394:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40739e:	xchg   ax,ax
  4073a0:	mov    rdi,rbp
  4073a3:	call   424e80 <isspace@plt+0x21570>
  4073a8:	test   al,al
  4073aa:	jne    407330 <isspace@plt+0x3a20>
  4073ac:	mov    rdi,rbx
  4073af:	call   41f5c0 <isspace@plt+0x1bcb0>
  4073b4:	mov    esi,0xffffffff
  4073b9:	mov    rdi,r15
  4073bc:	call   424dd0 <isspace@plt+0x214c0>
  4073c1:	mov    rax,QWORD PTR fs:0x28
  4073ca:	cmp    rax,QWORD PTR [rsp+0x10]
  4073cf:	jne    4073e3 <isspace@plt+0x3ad3>
  4073d1:	mov    rax,r14
  4073d4:	add    rsp,0x18
  4073d8:	pop    rbx
  4073d9:	pop    r12
  4073db:	pop    r13
  4073dd:	pop    r14
  4073df:	pop    r15
  4073e1:	pop    rbp
  4073e2:	ret    
  4073e3:	call   403280 <__stack_chk_fail@plt>
  4073e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4073f0:	push   rbp
  4073f1:	push   r15
  4073f3:	push   r14
  4073f5:	push   r13
  4073f7:	push   r12
  4073f9:	push   rbx
  4073fa:	sub    rsp,0xa8
  407401:	mov    QWORD PTR [rsp+0x28],rdx
  407406:	mov    QWORD PTR [rsp+0x18],rsi
  40740b:	mov    rbx,rdi
  40740e:	mov    rax,QWORD PTR fs:0x28
  407417:	mov    QWORD PTR [rsp+0xa0],rax
  40741f:	call   425d90 <isspace@plt+0x22480>
  407424:	mov    QWORD PTR [rsp],rax
  407428:	mov    rdi,rbx
  40742b:	call   425dd0 <isspace@plt+0x224c0>
  407430:	mov    r14,rax
  407433:	mov    rdi,rax
  407436:	call   41f240 <isspace@plt+0x1b930>
  40743b:	mov    ebp,eax
  40743d:	mov    DWORD PTR [rsp+0xc],eax
  407441:	cmp    eax,0x1
  407444:	jne    407450 <isspace@plt+0x3b40>
  407446:	mov    rdi,r14
  407449:	call   41f1e0 <isspace@plt+0x1b8d0>
  40744e:	mov    ebp,eax
  407450:	mov    esi,0x1
  407455:	mov    QWORD PTR [rsp+0x10],rbx
  40745a:	mov    rdi,rbx
  40745d:	call   424a90 <isspace@plt+0x21180>
  407462:	mov    DWORD PTR [rsp+0x8],eax
  407466:	lea    rbx,[rsp+0x80]
  40746e:	mov    esi,0x18
  407473:	mov    rdi,rbx
  407476:	call   403a50 <isspace@plt+0x140>
  40747b:	movsxd rsi,ebp
  40747e:	mov    rdi,rbx
  407481:	call   403ad0 <isspace@plt+0x1c0>
  407486:	test   al,al
  407488:	je     407716 <isspace@plt+0x3e06>
  40748e:	mov    rdi,r14
  407491:	call   41f710 <isspace@plt+0x1be00>
  407496:	test   rax,rax
  407499:	je     4076fa <isspace@plt+0x3dea>
  40749f:	mov    rbp,rax
  4074a2:	movsxd r15,DWORD PTR [rsp+0x8]
  4074a7:	xor    r14d,r14d
  4074aa:	mov    QWORD PTR [rsp+0x20],r15
  4074af:	nop
  4074b0:	mov    rdi,rbp
  4074b3:	call   41f7f0 <isspace@plt+0x1bee0>
  4074b8:	mov    r12,rax
  4074bb:	mov    rdi,rbp
  4074be:	call   41ff60 <isspace@plt+0x1c650>
  4074c3:	mov    QWORD PTR [rsp+0x70],rax
  4074c8:	mov    QWORD PTR [rsp+0x78],rdx
  4074cd:	mov    QWORD PTR [rsp+0x58],rbp
  4074d2:	lea    rdi,[rsp+0x70]
  4074d7:	call   417460 <isspace@plt+0x13b50>
  4074dc:	mov    rbx,rax
  4074df:	mov    QWORD PTR [rsp+0x68],rax
  4074e4:	mov    rdi,rax
  4074e7:	call   4035e0 <malloc@plt>
  4074ec:	mov    QWORD PTR [rsp+0x60],rax
  4074f1:	test   rax,rax
  4074f4:	je     407510 <isspace@plt+0x3c00>
  4074f6:	mov    rsi,QWORD PTR [rsp+0x70]
  4074fb:	mov    rdi,QWORD PTR [rsp]
  4074ff:	mov    rdx,rbx
  407502:	mov    rcx,rax
  407505:	call   411380 <isspace@plt+0xda70>
  40750a:	jmp    407512 <isspace@plt+0x3c02>
  40750c:	nop    DWORD PTR [rax+0x0]
  407510:	xor    eax,eax
  407512:	mov    QWORD PTR [rsp+0x68],rax
  407517:	lea    rdi,[rsp+0x80]
  40751f:	lea    rsi,[rsp+0x58]
  407524:	call   403d70 <isspace@plt+0x460>
  407529:	test   r14,r14
  40752c:	jne    407545 <isspace@plt+0x3c35>
  40752e:	mov    rdi,rbp
  407531:	call   41b4d0 <isspace@plt+0x17bc0>
  407536:	mov    rdi,QWORD PTR [rsp]
  40753a:	mov    rsi,rax
  40753d:	call   410db0 <isspace@plt+0xd4a0>
  407542:	mov    r14,rax
  407545:	mov    rbp,r12
  407548:	test   r12,r12
  40754b:	je     407580 <isspace@plt+0x3c70>
  40754d:	mov    rdi,rbp
  407550:	call   41b4d0 <isspace@plt+0x17bc0>
  407555:	mov    rdi,QWORD PTR [rsp]
  407559:	mov    rsi,rax
  40755c:	call   410db0 <isspace@plt+0xd4a0>
  407561:	cmp    DWORD PTR [rsp+0xc],0x2
  407566:	jl     4076ee <isspace@plt+0x3dde>
  40756c:	cmp    r14,rax
  40756f:	jne    407582 <isspace@plt+0x3c72>
  407571:	jmp    4076ee <isspace@plt+0x3dde>
  407576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407580:	xor    eax,eax
  407582:	mov    QWORD PTR [rsp+0x30],rax
  407587:	mov    QWORD PTR [rsp+0x40],rbp
  40758c:	lea    rdi,[rsp+0x80]
  407594:	call   403f90 <isspace@plt+0x680>
  407599:	mov    r14,rax
  40759c:	mov    rax,QWORD PTR [rsp+0x28]
  4075a1:	mov    ecx,DWORD PTR [rax]
  4075a3:	mov    rax,r15
  4075a6:	or     rax,r14
  4075a9:	shr    rax,0x20
  4075ad:	mov    QWORD PTR [rsp+0x38],r12
  4075b2:	je     4075c0 <isspace@plt+0x3cb0>
  4075b4:	xor    edx,edx
  4075b6:	mov    rax,r15
  4075b9:	div    r14
  4075bc:	jmp    4075c9 <isspace@plt+0x3cb9>
  4075be:	xchg   ax,ax
  4075c0:	xor    edx,edx
  4075c2:	mov    eax,DWORD PTR [rsp+0x8]
  4075c6:	div    r14d
  4075c9:	mov    r15,r14
  4075cc:	sub    r15,rdx
  4075cf:	test   ecx,ecx
  4075d1:	cmovg  r15,rdx
  4075d5:	test   r14,r14
  4075d8:	je     4076cd <isspace@plt+0x3dbd>
  4075de:	xor    ebp,ebp
  4075e0:	lea    rax,[r15+rbp*1]
  4075e4:	mov    rcx,rax
  4075e7:	or     rcx,r14
  4075ea:	shr    rcx,0x20
  4075ee:	je     407600 <isspace@plt+0x3cf0>
  4075f0:	xor    edx,edx
  4075f2:	div    r14
  4075f5:	mov    r13,rdx
  4075f8:	jmp    407608 <isspace@plt+0x3cf8>
  4075fa:	nop    WORD PTR [rax+rax*1+0x0]
  407600:	xor    edx,edx
  407602:	div    r14d
  407605:	mov    r13d,edx
  407608:	lea    rbx,[rsp+0x80]
  407610:	mov    rdi,rbx
  407613:	mov    rsi,rbp
  407616:	call   403d20 <isspace@plt+0x410>
  40761b:	mov    r12,rax
  40761e:	mov    rdi,rbx
  407621:	mov    rsi,r13
  407624:	call   403d20 <isspace@plt+0x410>
  407629:	cmp    r12,rax
  40762c:	je     4076c0 <isspace@plt+0x3db0>
  407632:	test   r12,r12
  407635:	je     4076c0 <isspace@plt+0x3db0>
  40763b:	mov    r13,rax
  40763e:	test   rax,rax
  407641:	je     4076c0 <isspace@plt+0x3db0>
  407647:	mov    rdi,QWORD PTR [r13+0x0]
  40764b:	call   41ff60 <isspace@plt+0x1c650>
  407650:	mov    QWORD PTR [rsp+0x48],rax
  407655:	mov    QWORD PTR [rsp+0x50],rdx
  40765a:	lea    rdi,[rsp+0x48]
  40765f:	call   417400 <isspace@plt+0x13af0>
  407664:	test   al,al
  407666:	je     4076c0 <isspace@plt+0x3db0>
  407668:	mov    rdi,QWORD PTR [rsp]
  40766c:	lea    rsi,[rsp+0x48]
  407671:	call   410610 <isspace@plt+0xcd00>
  407676:	test   al,al
  407678:	je     4076c0 <isspace@plt+0x3db0>
  40767a:	mov    rsi,QWORD PTR [rsp+0x48]
  40767f:	mov    rdx,QWORD PTR [r12+0x8]
  407684:	mov    rcx,QWORD PTR [r12+0x10]
  407689:	mov    rdi,QWORD PTR [rsp]
  40768d:	call   40f140 <isspace@plt+0xb830>
  407692:	test   al,al
  407694:	je     4076c0 <isspace@plt+0x3db0>
  407696:	mov    rax,QWORD PTR [r12+0x10]
  40769b:	add    rax,QWORD PTR [rsp+0x48]
  4076a0:	mov    QWORD PTR [rsp+0x50],rax
  4076a5:	mov    rdi,QWORD PTR [r13+0x0]
  4076a9:	lea    rsi,[rsp+0x48]
  4076ae:	call   420010 <isspace@plt+0x1c700>
  4076b3:	mov    rdi,QWORD PTR [r12+0x8]
  4076b8:	call   4030d0 <free@plt>
  4076bd:	nop    DWORD PTR [rax]
  4076c0:	add    rbp,0x1
  4076c4:	cmp    r14,rbp
  4076c7:	jne    4075e0 <isspace@plt+0x3cd0>
  4076cd:	lea    rdi,[rsp+0x80]
  4076d5:	call   403cc0 <isspace@plt+0x3b0>
  4076da:	mov    r15,QWORD PTR [rsp+0x20]
  4076df:	mov    rbp,QWORD PTR [rsp+0x40]
  4076e4:	mov    r12,QWORD PTR [rsp+0x38]
  4076e9:	mov    rax,QWORD PTR [rsp+0x30]
  4076ee:	mov    r14,rax
  4076f1:	test   r12,r12
  4076f4:	jne    4074b0 <isspace@plt+0x3ba0>
  4076fa:	lea    rdi,[rsp+0x80]
  407702:	call   403b50 <isspace@plt+0x240>
  407707:	mov    esi,0xffffffff
  40770c:	mov    rdi,QWORD PTR [rsp+0x10]
  407711:	call   424dd0 <isspace@plt+0x214c0>
  407716:	mov    rax,QWORD PTR fs:0x28
  40771f:	cmp    rax,QWORD PTR [rsp+0xa0]
  407727:	jne    407740 <isspace@plt+0x3e30>
  407729:	mov    rax,QWORD PTR [rsp+0x18]
  40772e:	add    rsp,0xa8
  407735:	pop    rbx
  407736:	pop    r12
  407738:	pop    r13
  40773a:	pop    r14
  40773c:	pop    r15
  40773e:	pop    rbp
  40773f:	ret    
  407740:	call   403280 <__stack_chk_fail@plt>
  407745:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40774f:	nop
  407750:	push   rbp
  407751:	push   r15
  407753:	push   r14
  407755:	push   r13
  407757:	push   r12
  407759:	push   rbx
  40775a:	sub    rsp,0x28
  40775e:	mov    QWORD PTR [rsp],rsi
  407762:	mov    r15,rdi
  407765:	mov    rax,QWORD PTR fs:0x28
  40776e:	mov    QWORD PTR [rsp+0x20],rax
  407773:	call   425d90 <isspace@plt+0x22480>
  407778:	mov    rbx,rax
  40777b:	mov    rdi,r15
  40777e:	call   425dd0 <isspace@plt+0x224c0>
  407783:	mov    rdi,rax
  407786:	call   41f710 <isspace@plt+0x1be00>
  40778b:	test   rax,rax
  40778e:	je     4078cc <isspace@plt+0x3fbc>
  407794:	mov    r14,rax
  407797:	lea    r12,[rsp+0x10]
  40779c:	lea    r13,[rsp+0xf]
  4077a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4077b0:	mov    rdi,r14
  4077b3:	call   41f7f0 <isspace@plt+0x1bee0>
  4077b8:	mov    rbp,rax
  4077bb:	mov    rdi,r14
  4077be:	call   41ff60 <isspace@plt+0x1c650>
  4077c3:	mov    QWORD PTR [rsp+0x10],rax
  4077c8:	mov    QWORD PTR [rsp+0x18],rdx
  4077cd:	mov    rdi,r12
  4077d0:	call   417400 <isspace@plt+0x13af0>
  4077d5:	test   al,al
  4077d7:	je     4078c0 <isspace@plt+0x3fb0>
  4077dd:	mov    rax,QWORD PTR [rsp+0x10]
  4077e2:	mov    rsi,QWORD PTR [rsp+0x18]
  4077e7:	cmp    rax,rsi
  4077ea:	jae    407839 <isspace@plt+0x3f29>
  4077ec:	nop    DWORD PTR [rax+0x0]
  4077f0:	add    rsi,0xffffffffffffffff
  4077f4:	mov    rdi,rbx
  4077f7:	mov    rdx,r13
  4077fa:	call   4112b0 <isspace@plt+0xd9a0>
  4077ff:	test   al,al
  407801:	je     40782f <isspace@plt+0x3f1f>
  407803:	call   4038f0 <__ctype_b_loc@plt>
  407808:	mov    rax,QWORD PTR [rax]
  40780b:	movzx  ecx,BYTE PTR [rsp+0xf]
  407810:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  407815:	je     40782f <isspace@plt+0x3f1f>
  407817:	mov    rax,QWORD PTR [rsp+0x10]
  40781c:	mov    rsi,QWORD PTR [rsp+0x18]
  407821:	add    rsi,0xffffffffffffffff
  407825:	mov    QWORD PTR [rsp+0x18],rsi
  40782a:	cmp    rax,rsi
  40782d:	jb     4077f0 <isspace@plt+0x3ee0>
  40782f:	mov    rax,QWORD PTR [rsp+0x10]
  407834:	mov    rsi,QWORD PTR [rsp+0x18]
  407839:	cmp    rax,rsi
  40783c:	ja     407885 <isspace@plt+0x3f75>
  40783e:	xchg   ax,ax
  407840:	mov    rdi,rbx
  407843:	mov    rsi,rax
  407846:	mov    rdx,r13
  407849:	call   4112b0 <isspace@plt+0xd9a0>
  40784e:	test   al,al
  407850:	je     40787b <isspace@plt+0x3f6b>
  407852:	call   4038f0 <__ctype_b_loc@plt>
  407857:	mov    rax,QWORD PTR [rax]
  40785a:	movzx  ecx,BYTE PTR [rsp+0xf]
  40785f:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  407864:	je     40787b <isspace@plt+0x3f6b>
  407866:	mov    rax,QWORD PTR [rsp+0x10]
  40786b:	add    rax,0x1
  40786f:	mov    QWORD PTR [rsp+0x10],rax
  407874:	cmp    rax,QWORD PTR [rsp+0x18]
  407879:	jbe    407840 <isspace@plt+0x3f30>
  40787b:	mov    rax,QWORD PTR [rsp+0x10]
  407880:	mov    rsi,QWORD PTR [rsp+0x18]
  407885:	mov    rdi,r14
  407888:	cmp    rax,rsi
  40788b:	jae    4078a0 <isspace@plt+0x3f90>
  40788d:	mov    rsi,r12
  407890:	call   420010 <isspace@plt+0x1c700>
  407895:	jmp    4078c0 <isspace@plt+0x3fb0>
  407897:	nop    WORD PTR [rax+rax*1+0x0]
  4078a0:	call   41f450 <isspace@plt+0x1bb40>
  4078a5:	test   al,al
  4078a7:	jne    4078c0 <isspace@plt+0x3fb0>
  4078a9:	xor    esi,esi
  4078ab:	mov    rdi,r15
  4078ae:	call   427780 <isspace@plt+0x23e70>
  4078b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078bd:	nop    DWORD PTR [rax]
  4078c0:	mov    r14,rbp
  4078c3:	test   rbp,rbp
  4078c6:	jne    4077b0 <isspace@plt+0x3ea0>
  4078cc:	mov    rax,QWORD PTR fs:0x28
  4078d5:	cmp    rax,QWORD PTR [rsp+0x20]
  4078da:	jne    4078ef <isspace@plt+0x3fdf>
  4078dc:	mov    rax,QWORD PTR [rsp]
  4078e0:	add    rsp,0x28
  4078e4:	pop    rbx
  4078e5:	pop    r12
  4078e7:	pop    r13
  4078e9:	pop    r14
  4078eb:	pop    r15
  4078ed:	pop    rbp
  4078ee:	ret    
  4078ef:	call   403280 <__stack_chk_fail@plt>
  4078f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078fe:	xchg   ax,ax
  407900:	push   rbp
  407901:	push   r15
  407903:	push   r14
  407905:	push   r13
  407907:	push   r12
  407909:	push   rbx
  40790a:	sub    rsp,0x28
  40790e:	mov    r14,rsi
  407911:	mov    rbx,rdi
  407914:	mov    rax,QWORD PTR fs:0x28
  40791d:	mov    QWORD PTR [rsp+0x20],rax
  407922:	call   425e10 <isspace@plt+0x22500>
  407927:	mov    r15,rax
  40792a:	mov    rdi,rbx
  40792d:	call   425dd0 <isspace@plt+0x224c0>
  407932:	mov    r12,rax
  407935:	mov    rdi,rbx
  407938:	call   426c20 <isspace@plt+0x23310>
  40793d:	mov    ebp,eax
  40793f:	mov    r13,rsp
  407942:	mov    rdi,r13
  407945:	mov    rsi,r12
  407948:	call   420400 <isspace@plt+0x1caf0>
  40794d:	mov    rdi,r15
  407950:	mov    esi,ebp
  407952:	mov    rdx,r13
  407955:	call   426dd0 <isspace@plt+0x234c0>
  40795a:	mov    rdi,r13
  40795d:	call   403b50 <isspace@plt+0x240>
  407962:	mov    rdi,rbx
  407965:	call   423560 <isspace@plt+0x1fc50>
  40796a:	mov    rax,QWORD PTR fs:0x28
  407973:	cmp    rax,QWORD PTR [rsp+0x20]
  407978:	jne    40798c <isspace@plt+0x407c>
  40797a:	mov    rax,r14
  40797d:	add    rsp,0x28
  407981:	pop    rbx
  407982:	pop    r12
  407984:	pop    r13
  407986:	pop    r14
  407988:	pop    r15
  40798a:	pop    rbp
  40798b:	ret    
  40798c:	call   403280 <__stack_chk_fail@plt>
  407991:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40799b:	nop    DWORD PTR [rax+rax*1+0x0]
  4079a0:	push   rbp
  4079a1:	push   r15
  4079a3:	push   r14
  4079a5:	push   r13
  4079a7:	push   r12
  4079a9:	push   rbx
  4079aa:	sub    rsp,0x28
  4079ae:	mov    r14,rsi
  4079b1:	mov    rbx,rdi
  4079b4:	mov    rax,QWORD PTR fs:0x28
  4079bd:	mov    QWORD PTR [rsp+0x20],rax
  4079c2:	call   425e10 <isspace@plt+0x22500>
  4079c7:	mov    r12,rax
  4079ca:	mov    rdi,rbx
  4079cd:	call   425dd0 <isspace@plt+0x224c0>
  4079d2:	mov    r15,rax
  4079d5:	mov    rdi,rbx
  4079d8:	call   426c20 <isspace@plt+0x23310>
  4079dd:	mov    r13,rsp
  4079e0:	mov    rdi,r13
  4079e3:	mov    rsi,r12
  4079e6:	mov    edx,eax
  4079e8:	call   426c80 <isspace@plt+0x23370>
  4079ed:	mov    rdi,rbx
  4079f0:	call   427920 <isspace@plt+0x24010>
  4079f5:	mov    ebp,eax
  4079f7:	or     ebp,0x1
  4079fa:	xor    edx,edx
  4079fc:	cmp    ebp,0x3
  4079ff:	sete   dl
  407a02:	mov    rdi,r15
  407a05:	mov    rsi,r13
  407a08:	call   420250 <isspace@plt+0x1c940>
  407a0d:	cmp    ebp,0x3
  407a10:	je     407a1a <isspace@plt+0x410a>
  407a12:	mov    rdi,r15
  407a15:	call   41b900 <isspace@plt+0x17ff0>
  407a1a:	mov    rdi,rsp
  407a1d:	call   403b50 <isspace@plt+0x240>
  407a22:	mov    rdi,rbx
  407a25:	call   423560 <isspace@plt+0x1fc50>
  407a2a:	mov    rax,QWORD PTR fs:0x28
  407a33:	cmp    rax,QWORD PTR [rsp+0x20]
  407a38:	jne    407a4c <isspace@plt+0x413c>
  407a3a:	mov    rax,r14
  407a3d:	add    rsp,0x28
  407a41:	pop    rbx
  407a42:	pop    r12
  407a44:	pop    r13
  407a46:	pop    r14
  407a48:	pop    r15
  407a4a:	pop    rbp
  407a4b:	ret    
  407a4c:	call   403280 <__stack_chk_fail@plt>
  407a51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  407a60:	push   rbp
  407a61:	push   r15
  407a63:	push   r14
  407a65:	push   r13
  407a67:	push   r12
  407a69:	push   rbx
  407a6a:	sub    rsp,0xa8
  407a71:	mov    QWORD PTR [rsp+0x28],rsi
  407a76:	mov    rbp,rdi
  407a79:	mov    rax,QWORD PTR fs:0x28
  407a82:	mov    QWORD PTR [rsp+0xa0],rax
  407a8a:	call   425e10 <isspace@plt+0x22500>
  407a8f:	mov    r14,rax
  407a92:	mov    rdi,rbp
  407a95:	call   425dd0 <isspace@plt+0x224c0>
  407a9a:	mov    rbx,rax
  407a9d:	mov    QWORD PTR [rsp+0x20],rbp
  407aa2:	mov    rdi,rbp
  407aa5:	call   426c20 <isspace@plt+0x23310>
  407aaa:	lea    rbp,[rsp+0x80]
  407ab2:	mov    rdi,rbp
  407ab5:	mov    rsi,r14
  407ab8:	mov    edx,eax
  407aba:	call   426c80 <isspace@plt+0x23370>
  407abf:	lea    r15,[rsp+0x60]
  407ac4:	mov    rdi,r15
  407ac7:	mov    QWORD PTR [rsp+0x18],rbx
  407acc:	mov    rsi,rbx
  407acf:	call   420400 <isspace@plt+0x1caf0>
  407ad4:	lea    rdi,[rsp+0x40]
  407ad9:	mov    rsi,rbp
  407adc:	call   403a90 <isspace@plt+0x180>
  407ae1:	xor    esi,esi
  407ae3:	mov    rdi,rbp
  407ae6:	call   403d20 <isspace@plt+0x410>
  407aeb:	mov    r14,rax
  407aee:	xor    esi,esi
  407af0:	mov    rdi,r15
  407af3:	call   403d20 <isspace@plt+0x410>
  407af8:	mov    rbp,rax
  407afb:	call   4174c0 <isspace@plt+0x13bb0>
  407b00:	mov    QWORD PTR [rsp+0x30],rax
  407b05:	mov    QWORD PTR [rsp+0x38],rdx
  407b0a:	test   r14,r14
  407b0d:	setne  bl
  407b10:	test   rbp,rbp
  407b13:	setne  r12b
  407b17:	mov    rax,rbp
  407b1a:	or     rax,r14
  407b1d:	je     407cca <isspace@plt+0x43ba>
  407b23:	xor    eax,eax
  407b25:	mov    QWORD PTR [rsp+0x8],rax
  407b2a:	xor    r15d,r15d
  407b2d:	mov    QWORD PTR [rsp+0x10],r14
  407b32:	mov    r13,rbp
  407b35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b3f:	nop
  407b40:	test   bl,0x1
  407b43:	je     407b80 <isspace@plt+0x4270>
  407b45:	mov    rdi,r14
  407b48:	lea    rsi,[rsp+0x30]
  407b4d:	call   417610 <isspace@plt+0x13d00>
  407b52:	test   al,al
  407b54:	je     407b80 <isspace@plt+0x4270>
  407b56:	mov    rdi,r14
  407b59:	lea    rsi,[rsp+0x30]
  407b5e:	call   417500 <isspace@plt+0x13bf0>
  407b63:	mov    QWORD PTR [rsp+0x30],rax
  407b68:	mov    QWORD PTR [rsp+0x38],rdx
  407b6d:	jmp    407c04 <isspace@plt+0x42f4>
  407b72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b7c:	nop    DWORD PTR [rax+0x0]
  407b80:	test   r12b,0x1
  407b84:	je     407bc0 <isspace@plt+0x42b0>
  407b86:	mov    rdi,rbp
  407b89:	lea    rsi,[rsp+0x30]
  407b8e:	call   417610 <isspace@plt+0x13d00>
  407b93:	test   al,al
  407b95:	je     407bc0 <isspace@plt+0x42b0>
  407b97:	mov    rdi,rbp
  407b9a:	lea    rsi,[rsp+0x30]
  407b9f:	call   417500 <isspace@plt+0x13bf0>
  407ba4:	mov    QWORD PTR [rsp+0x30],rax
  407ba9:	mov    QWORD PTR [rsp+0x38],rdx
  407bae:	jmp    407c9a <isspace@plt+0x438a>
  407bb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bbd:	nop    DWORD PTR [rax]
  407bc0:	lea    rdi,[rsp+0x30]
  407bc5:	call   417400 <isspace@plt+0x13af0>
  407bca:	test   al,al
  407bcc:	je     407bdd <isspace@plt+0x42cd>
  407bce:	lea    rdi,[rsp+0x40]
  407bd3:	lea    rsi,[rsp+0x30]
  407bd8:	call   403d70 <isspace@plt+0x460>
  407bdd:	test   bl,0x1
  407be0:	je     407c30 <isspace@plt+0x4320>
  407be2:	test   r12b,0x1
  407be6:	je     407c58 <isspace@plt+0x4348>
  407be8:	mov    rax,QWORD PTR [r14]
  407beb:	cmp    rax,QWORD PTR [rbp+0x0]
  407bef:	jae    407c8e <isspace@plt+0x437e>
  407bf5:	mov    rax,QWORD PTR [rsp+0x10]
  407bfa:	vmovups xmm0,XMMWORD PTR [rax]
  407bfe:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  407c04:	mov    rsi,QWORD PTR [rsp+0x8]
  407c09:	add    rsi,0x1
  407c0d:	lea    rdi,[rsp+0x80]
  407c15:	mov    QWORD PTR [rsp+0x8],rsi
  407c1a:	call   403d20 <isspace@plt+0x410>
  407c1f:	mov    r14,rax
  407c22:	mov    QWORD PTR [rsp+0x10],rax
  407c27:	jmp    407cb1 <isspace@plt+0x43a1>
  407c2c:	nop    DWORD PTR [rax+0x0]
  407c30:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  407c36:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  407c3c:	add    r15,0x1
  407c40:	lea    rdi,[rsp+0x60]
  407c45:	mov    rsi,r15
  407c48:	call   403d20 <isspace@plt+0x410>
  407c4d:	mov    r13,rax
  407c50:	mov    rbp,rax
  407c53:	xor    r14d,r14d
  407c56:	jmp    407cb1 <isspace@plt+0x43a1>
  407c58:	mov    rax,QWORD PTR [rsp+0x10]
  407c5d:	vmovups xmm0,XMMWORD PTR [rax]
  407c61:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  407c67:	mov    rsi,QWORD PTR [rsp+0x8]
  407c6c:	add    rsi,0x1
  407c70:	lea    rdi,[rsp+0x80]
  407c78:	mov    QWORD PTR [rsp+0x8],rsi
  407c7d:	call   403d20 <isspace@plt+0x410>
  407c82:	mov    r14,rax
  407c85:	xor    ebp,ebp
  407c87:	mov    QWORD PTR [rsp+0x10],rax
  407c8c:	jmp    407cb1 <isspace@plt+0x43a1>
  407c8e:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  407c94:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  407c9a:	add    r15,0x1
  407c9e:	lea    rdi,[rsp+0x60]
  407ca3:	mov    rsi,r15
  407ca6:	call   403d20 <isspace@plt+0x410>
  407cab:	mov    r13,rax
  407cae:	mov    rbp,rax
  407cb1:	test   r14,r14
  407cb4:	setne  bl
  407cb7:	test   rbp,rbp
  407cba:	setne  r12b
  407cbe:	mov    rax,rbp
  407cc1:	or     rax,r14
  407cc4:	jne    407b40 <isspace@plt+0x4230>
  407cca:	lea    rdi,[rsp+0x30]
  407ccf:	call   417400 <isspace@plt+0x13af0>
  407cd4:	test   al,al
  407cd6:	je     407ce7 <isspace@plt+0x43d7>
  407cd8:	lea    rdi,[rsp+0x40]
  407cdd:	lea    rsi,[rsp+0x30]
  407ce2:	call   403d70 <isspace@plt+0x460>
  407ce7:	mov    r14,QWORD PTR [rsp+0x20]
  407cec:	mov    rdi,r14
  407cef:	call   427920 <isspace@plt+0x24010>
  407cf4:	mov    ebx,eax
  407cf6:	or     ebx,0x1
  407cf9:	xor    edx,edx
  407cfb:	cmp    ebx,0x3
  407cfe:	sete   dl
  407d01:	lea    rsi,[rsp+0x40]
  407d06:	mov    rbp,QWORD PTR [rsp+0x18]
  407d0b:	mov    rdi,rbp
  407d0e:	call   420250 <isspace@plt+0x1c940>
  407d13:	cmp    ebx,0x3
  407d16:	je     407d20 <isspace@plt+0x4410>
  407d18:	mov    rdi,rbp
  407d1b:	call   41b900 <isspace@plt+0x17ff0>
  407d20:	mov    rdi,r14
  407d23:	call   423560 <isspace@plt+0x1fc50>
  407d28:	lea    rdi,[rsp+0x80]
  407d30:	call   403b50 <isspace@plt+0x240>
  407d35:	lea    rdi,[rsp+0x60]
  407d3a:	call   403b50 <isspace@plt+0x240>
  407d3f:	lea    rdi,[rsp+0x40]
  407d44:	call   403b50 <isspace@plt+0x240>
  407d49:	mov    rax,QWORD PTR fs:0x28
  407d52:	cmp    rax,QWORD PTR [rsp+0xa0]
  407d5a:	jne    407d73 <isspace@plt+0x4463>
  407d5c:	mov    rax,QWORD PTR [rsp+0x28]
  407d61:	add    rsp,0xa8
  407d68:	pop    rbx
  407d69:	pop    r12
  407d6b:	pop    r13
  407d6d:	pop    r14
  407d6f:	pop    r15
  407d71:	pop    rbp
  407d72:	ret    
  407d73:	call   403280 <__stack_chk_fail@plt>
  407d78:	nop    DWORD PTR [rax+rax*1+0x0]
  407d80:	push   rbp
  407d81:	push   r15
  407d83:	push   r14
  407d85:	push   r13
  407d87:	push   r12
  407d89:	push   rbx
  407d8a:	sub    rsp,0x78
  407d8e:	mov    QWORD PTR [rsp+0x8],rsi
  407d93:	mov    rbx,rdi
  407d96:	mov    rax,QWORD PTR fs:0x28
  407d9f:	mov    QWORD PTR [rsp+0x70],rax
  407da4:	call   425e10 <isspace@plt+0x22500>
  407da9:	mov    r12,rax
  407dac:	mov    rdi,rbx
  407daf:	call   425dd0 <isspace@plt+0x224c0>
  407db4:	mov    r15,rax
  407db7:	mov    rdi,rbx
  407dba:	call   426c20 <isspace@plt+0x23310>
  407dbf:	lea    r13,[rsp+0x50]
  407dc4:	mov    rdi,r13
  407dc7:	mov    rsi,r12
  407dca:	mov    edx,eax
  407dcc:	call   426c80 <isspace@plt+0x23370>
  407dd1:	lea    r12,[rsp+0x30]
  407dd6:	mov    rdi,r12
  407dd9:	mov    rsi,r15
  407ddc:	call   420400 <isspace@plt+0x1caf0>
  407de1:	lea    r14,[rsp+0x10]
  407de6:	mov    rdi,r14
  407de9:	mov    rsi,r13
  407dec:	call   403a90 <isspace@plt+0x180>
  407df1:	mov    rdi,r14
  407df4:	mov    rsi,r13
  407df7:	mov    rdx,r12
  407dfa:	call   4083b0 <isspace@plt+0x4aa0>
  407dff:	mov    rdi,rbx
  407e02:	call   427920 <isspace@plt+0x24010>
  407e07:	mov    ebp,eax
  407e09:	or     ebp,0x1
  407e0c:	xor    edx,edx
  407e0e:	cmp    ebp,0x3
  407e11:	sete   dl
  407e14:	mov    rdi,r15
  407e17:	mov    rsi,r14
  407e1a:	call   420250 <isspace@plt+0x1c940>
  407e1f:	cmp    ebp,0x3
  407e22:	je     407e2c <isspace@plt+0x451c>
  407e24:	mov    rdi,r15
  407e27:	call   41b900 <isspace@plt+0x17ff0>
  407e2c:	mov    rdi,rbx
  407e2f:	call   423560 <isspace@plt+0x1fc50>
  407e34:	lea    rdi,[rsp+0x50]
  407e39:	call   403b50 <isspace@plt+0x240>
  407e3e:	lea    rdi,[rsp+0x30]
  407e43:	call   403b50 <isspace@plt+0x240>
  407e48:	lea    rdi,[rsp+0x10]
  407e4d:	call   403b50 <isspace@plt+0x240>
  407e52:	mov    rax,QWORD PTR fs:0x28
  407e5b:	cmp    rax,QWORD PTR [rsp+0x70]
  407e60:	jne    407e76 <isspace@plt+0x4566>
  407e62:	mov    rax,QWORD PTR [rsp+0x8]
  407e67:	add    rsp,0x78
  407e6b:	pop    rbx
  407e6c:	pop    r12
  407e6e:	pop    r13
  407e70:	pop    r14
  407e72:	pop    r15
  407e74:	pop    rbp
  407e75:	ret    
  407e76:	call   403280 <__stack_chk_fail@plt>
  407e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  407e80:	push   r15
  407e82:	push   r14
  407e84:	push   r13
  407e86:	push   r12
  407e88:	push   rbx
  407e89:	sub    rsp,0x60
  407e8d:	mov    r14,rsi
  407e90:	mov    rbx,rdi
  407e93:	mov    rax,QWORD PTR fs:0x28
  407e9c:	mov    QWORD PTR [rsp+0x58],rax
  407ea1:	call   425d90 <isspace@plt+0x22480>
  407ea6:	mov    r12,rax
  407ea9:	mov    rdi,rbx
  407eac:	call   425dd0 <isspace@plt+0x224c0>
  407eb1:	mov    r15,rax
  407eb4:	xor    esi,esi
  407eb6:	mov    rdi,r12
  407eb9:	call   415c80 <isspace@plt+0x12370>
  407ebe:	mov    QWORD PTR [rsp+0x48],rax
  407ec3:	mov    QWORD PTR [rsp+0x50],rdx
  407ec8:	lea    r12,[rsp+0x28]
  407ecd:	mov    rdi,r12
  407ed0:	mov    rsi,r15
  407ed3:	call   420400 <isspace@plt+0x1caf0>
  407ed8:	lea    r13,[rsp+0x8]
  407edd:	mov    rdi,r13
  407ee0:	mov    rsi,r12
  407ee3:	call   403a90 <isspace@plt+0x180>
  407ee8:	lea    rdx,[rsp+0x48]
  407eed:	mov    rdi,r13
  407ef0:	mov    rsi,r12
  407ef3:	call   4084b0 <isspace@plt+0x4ba0>
  407ef8:	mov    rdi,rbx
  407efb:	call   427920 <isspace@plt+0x24010>
  407f00:	mov    ebx,eax
  407f02:	or     ebx,0x1
  407f05:	xor    edx,edx
  407f07:	cmp    ebx,0x3
  407f0a:	sete   dl
  407f0d:	mov    rdi,r15
  407f10:	mov    rsi,r13
  407f13:	call   420250 <isspace@plt+0x1c940>
  407f18:	cmp    ebx,0x3
  407f1b:	je     407f25 <isspace@plt+0x4615>
  407f1d:	mov    rdi,r15
  407f20:	call   41b900 <isspace@plt+0x17ff0>
  407f25:	lea    rdi,[rsp+0x28]
  407f2a:	call   403b50 <isspace@plt+0x240>
  407f2f:	lea    rdi,[rsp+0x8]
  407f34:	call   403b50 <isspace@plt+0x240>
  407f39:	mov    rax,QWORD PTR fs:0x28
  407f42:	cmp    rax,QWORD PTR [rsp+0x58]
  407f47:	jne    407f5a <isspace@plt+0x464a>
  407f49:	mov    rax,r14
  407f4c:	add    rsp,0x60
  407f50:	pop    rbx
  407f51:	pop    r12
  407f53:	pop    r13
  407f55:	pop    r14
  407f57:	pop    r15
  407f59:	ret    
  407f5a:	call   403280 <__stack_chk_fail@plt>
  407f5f:	nop
  407f60:	push   rbp
  407f61:	push   r15
  407f63:	push   r14
  407f65:	push   r13
  407f67:	push   r12
  407f69:	push   rbx
  407f6a:	sub    rsp,0xa8
  407f71:	mov    QWORD PTR [rsp+0x8],rsi
  407f76:	mov    rbx,rdi
  407f79:	mov    rax,QWORD PTR fs:0x28
  407f82:	mov    QWORD PTR [rsp+0xa0],rax
  407f8a:	call   425d90 <isspace@plt+0x22480>
  407f8f:	mov    QWORD PTR [rsp],rax
  407f93:	mov    rdi,rbx
  407f96:	call   425e10 <isspace@plt+0x22500>
  407f9b:	mov    r12,rax
  407f9e:	mov    rdi,rbx
  407fa1:	call   425dd0 <isspace@plt+0x224c0>
  407fa6:	mov    r15,rax
  407fa9:	mov    rdi,rbx
  407fac:	call   426c20 <isspace@plt+0x23310>
  407fb1:	mov    ebp,eax
  407fb3:	lea    r14,[rsp+0x80]
  407fbb:	mov    rdi,r14
  407fbe:	mov    rsi,r15
  407fc1:	call   420400 <isspace@plt+0x1caf0>
  407fc6:	lea    r13,[rsp+0x60]
  407fcb:	mov    rdi,r13
  407fce:	mov    rsi,r12
  407fd1:	mov    edx,ebp
  407fd3:	call   426c80 <isspace@plt+0x23370>
  407fd8:	lea    r12,[rsp+0x40]
  407fdd:	mov    rdi,r12
  407fe0:	mov    rsi,r14
  407fe3:	call   403a90 <isspace@plt+0x180>
  407fe8:	lea    rbp,[rsp+0x20]
  407fed:	mov    rdi,rbp
  407ff0:	mov    rsi,r13
  407ff3:	call   403a90 <isspace@plt+0x180>
  407ff8:	xor    esi,esi
  407ffa:	mov    rdi,QWORD PTR [rsp]
  407ffe:	call   415c80 <isspace@plt+0x12370>
  408003:	mov    QWORD PTR [rsp+0x10],rax
  408008:	mov    QWORD PTR [rsp+0x18],rdx
  40800d:	lea    rdx,[rsp+0x10]
  408012:	mov    rdi,rbp
  408015:	mov    rsi,r13
  408018:	call   4084b0 <isspace@plt+0x4ba0>
  40801d:	mov    rdi,r12
  408020:	mov    rsi,r14
  408023:	mov    rdx,rbp
  408026:	call   4083b0 <isspace@plt+0x4aa0>
  40802b:	mov    rdi,rbx
  40802e:	call   427920 <isspace@plt+0x24010>
  408033:	mov    ebp,eax
  408035:	or     ebp,0x1
  408038:	xor    edx,edx
  40803a:	cmp    ebp,0x3
  40803d:	sete   dl
  408040:	mov    rdi,r15
  408043:	mov    rsi,r12
  408046:	call   420250 <isspace@plt+0x1c940>
  40804b:	cmp    ebp,0x3
  40804e:	je     408058 <isspace@plt+0x4748>
  408050:	mov    rdi,r15
  408053:	call   41b900 <isspace@plt+0x17ff0>
  408058:	mov    rdi,rbx
  40805b:	call   423560 <isspace@plt+0x1fc50>
  408060:	lea    rdi,[rsp+0x80]
  408068:	call   403b50 <isspace@plt+0x240>
  40806d:	lea    rdi,[rsp+0x60]
  408072:	call   403b50 <isspace@plt+0x240>
  408077:	lea    rdi,[rsp+0x20]
  40807c:	call   403b50 <isspace@plt+0x240>
  408081:	lea    rdi,[rsp+0x40]
  408086:	call   403b50 <isspace@plt+0x240>
  40808b:	mov    rax,QWORD PTR fs:0x28
  408094:	cmp    rax,QWORD PTR [rsp+0xa0]
  40809c:	jne    4080b5 <isspace@plt+0x47a5>
  40809e:	mov    rax,QWORD PTR [rsp+0x8]
  4080a3:	add    rsp,0xa8
  4080aa:	pop    rbx
  4080ab:	pop    r12
  4080ad:	pop    r13
  4080af:	pop    r14
  4080b1:	pop    r15
  4080b3:	pop    rbp
  4080b4:	ret    
  4080b5:	call   403280 <__stack_chk_fail@plt>
  4080ba:	nop    WORD PTR [rax+rax*1+0x0]
  4080c0:	push   rbx
  4080c1:	sub    rsp,0x10
  4080c5:	mov    rbx,rsi
  4080c8:	mov    rax,QWORD PTR fs:0x28
  4080d1:	mov    QWORD PTR [rsp+0x8],rax
  4080d6:	mov    esi,DWORD PTR [rdx]
  4080d8:	call   42b190 <isspace@plt+0x27880>
  4080dd:	mov    rax,QWORD PTR fs:0x28
  4080e6:	cmp    rax,QWORD PTR [rsp+0x8]
  4080eb:	jne    4080f6 <isspace@plt+0x47e6>
  4080ed:	mov    rax,rbx
  4080f0:	add    rsp,0x10
  4080f4:	pop    rbx
  4080f5:	ret    
  4080f6:	call   403280 <__stack_chk_fail@plt>
  4080fb:	nop    DWORD PTR [rax+rax*1+0x0]
  408100:	push   rbp
  408101:	push   r15
  408103:	push   r14
  408105:	push   r13
  408107:	push   r12
  408109:	push   rbx
  40810a:	sub    rsp,0x88
  408111:	mov    QWORD PTR [rsp+0x28],rdx
  408116:	mov    r14,rsi
  408119:	mov    rbp,rdi
  40811c:	mov    rax,QWORD PTR fs:0x28
  408125:	mov    QWORD PTR [rsp+0x80],rax
  40812d:	call   425dd0 <isspace@plt+0x224c0>
  408132:	mov    rbx,rax
  408135:	mov    rdi,rbp
  408138:	call   425d90 <isspace@plt+0x22480>
  40813d:	mov    r15,rax
  408140:	mov    rdi,rbx
  408143:	call   41ec80 <isspace@plt+0x1b370>
  408148:	mov    r13,rax
  40814b:	mov    rdi,r15
  40814e:	mov    rsi,rax
  408151:	call   412fb0 <isspace@plt+0xf6a0>
  408156:	mov    rbx,rax
  408159:	mov    rdx,rax
  40815c:	sub    rdx,r13
  40815f:	mov    rdi,r15
  408162:	mov    rsi,r13
  408165:	call   411460 <isspace@plt+0xdb50>
  40816a:	test   rax,rax
  40816d:	je     40834f <isspace@plt+0x4a3f>
  408173:	mov    QWORD PTR [rsp+0x10],rax
  408178:	mov    QWORD PTR [rsp+0x8],rbp
  40817d:	mov    QWORD PTR [rsp+0x18],r14
  408182:	lea    rdi,[rsp+0x68]
  408187:	call   404230 <isspace@plt+0x920>
  40818c:	mov    QWORD PTR [rsp+0x60],0x0
  408195:	lea    rdi,[rsp+0x38]
  40819a:	mov    rsi,r15
  40819d:	mov    rdx,r13
  4081a0:	call   410760 <isspace@plt+0xce50>
  4081a5:	cmp    QWORD PTR [rsp+0x58],rbx
  4081aa:	jae    4082fe <isspace@plt+0x49ee>
  4081b0:	lea    r15,[rsp+0x68]
  4081b5:	lea    r14,[rip+0x2796d]        # 42fb29 <isspace@plt+0x2c219>
  4081bc:	mov    r12,QWORD PTR [rsp+0x10]
  4081c1:	mov    QWORD PTR [rsp+0x20],rbx
  4081c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081d0:	xor    esi,esi
  4081d2:	lea    rdi,[rsp+0x38]
  4081d7:	call   4129c0 <isspace@plt+0xf0b0>
  4081dc:	test   al,al
  4081de:	je     408323 <isspace@plt+0x4a13>
  4081e4:	mov    rbp,QWORD PTR [rsp+0x58]
  4081e9:	sub    rbp,r13
  4081ec:	mov    DWORD PTR [rsp+0x34],0xfffd
  4081f4:	lea    rdi,[rsp+0x34]
  4081f9:	mov    rsi,r12
  4081fc:	mov    rdx,rbp
  4081ff:	lea    rcx,[rsp+0x60]
  408204:	call   4032b0 <mbrtowc@plt>
  408209:	cmp    rax,0xfffffffffffffffd
  40820d:	ja     408230 <isspace@plt+0x4920>
  40820f:	mov    edi,DWORD PTR [rsp+0x34]
  408213:	test   edi,edi
  408215:	je     408230 <isspace@plt+0x4920>
  408217:	call   4035a0 <wcwidth@plt>
  40821c:	test   eax,eax
  40821e:	sete   r13b
  408222:	jmp    408233 <isspace@plt+0x4923>
  408224:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40822e:	xchg   ax,ax
  408230:	xor    r13d,r13d
  408233:	movzx  ebx,BYTE PTR [r12]
  408238:	test   bl,bl
  40823a:	js     408270 <isspace@plt+0x4960>
  40823c:	call   4038f0 <__ctype_b_loc@plt>
  408241:	mov    rax,QWORD PTR [rax]
  408244:	test   BYTE PTR [rax+rbx*2+0x1],0x40
  408249:	jne    408270 <isspace@plt+0x4960>
  40824b:	mov    edx,ebx
  40824d:	add    edx,0x40
  408250:	cmp    bl,0x7f
  408253:	mov    eax,0x3f
  408258:	cmove  edx,eax
  40825b:	xor    eax,eax
  40825d:	mov    rdi,r15
  408260:	lea    rsi,[rip+0x278a9]        # 42fb10 <isspace@plt+0x2c200>
  408267:	call   404a80 <isspace@plt+0x1170>
  40826c:	jmp    40829b <isspace@plt+0x498b>
  40826e:	xchg   ax,ax
  408270:	test   r13b,r13b
  408273:	lea    rdx,[rip+0x29809]        # 431a83 <isspace@plt+0x2e173>
  40827a:	lea    rax,[rip+0x28a94]        # 430d15 <isspace@plt+0x2d405>
  408281:	cmovne rdx,rax
  408285:	xor    eax,eax
  408287:	mov    rdi,r15
  40828a:	lea    rsi,[rip+0x27886]        # 42fb17 <isspace@plt+0x2c207>
  408291:	mov    ecx,ebp
  408293:	mov    r8,r12
  408296:	call   404a80 <isspace@plt+0x1170>
  40829b:	mov    rax,QWORD PTR [rsp+0x28]
  4082a0:	cmp    DWORD PTR [rax],0xa8
  4082a6:	jne    4082c0 <isspace@plt+0x49b0>
  4082a8:	mov    edx,DWORD PTR [rsp+0x34]
  4082ac:	xor    eax,eax
  4082ae:	mov    rdi,r15
  4082b1:	lea    rsi,[rip+0x27869]        # 42fb21 <isspace@plt+0x2c211>
  4082b8:	call   404a80 <isspace@plt+0x1170>
  4082bd:	jmp    4082eb <isspace@plt+0x49db>
  4082bf:	nop
  4082c0:	test   rbp,rbp
  4082c3:	je     4082eb <isspace@plt+0x49db>
  4082c5:	xor    ebx,ebx
  4082c7:	nop    WORD PTR [rax+rax*1+0x0]
  4082d0:	movzx  edx,BYTE PTR [r12+rbx*1]
  4082d5:	xor    eax,eax
  4082d7:	mov    rdi,r15
  4082da:	mov    rsi,r14
  4082dd:	call   404a80 <isspace@plt+0x1170>
  4082e2:	add    rbx,0x1
  4082e6:	cmp    rbp,rbx
  4082e9:	jne    4082d0 <isspace@plt+0x49c0>
  4082eb:	add    r12,rbp
  4082ee:	mov    r13,QWORD PTR [rsp+0x58]
  4082f3:	cmp    r13,QWORD PTR [rsp+0x20]
  4082f8:	jb     4081d0 <isspace@plt+0x48c0>
  4082fe:	lea    rdi,[rsp+0x68]
  408303:	call   404dd0 <isspace@plt+0x14c0>
  408308:	mov    rcx,rax
  40830b:	lea    rsi,[rip+0x28758]        # 430a6a <isspace@plt+0x2d15a>
  408312:	xor    eax,eax
  408314:	mov    rdi,QWORD PTR [rsp+0x8]
  408319:	mov    rdx,rcx
  40831c:	call   42a150 <isspace@plt+0x26840>
  408321:	jmp    408336 <isspace@plt+0x4a26>
  408323:	lea    rsi,[rip+0x277cb]        # 42faf5 <isspace@plt+0x2c1e5>
  40832a:	xor    eax,eax
  40832c:	mov    rdi,QWORD PTR [rsp+0x8]
  408331:	call   42a150 <isspace@plt+0x26840>
  408336:	mov    rdi,QWORD PTR [rsp+0x10]
  40833b:	call   4030d0 <free@plt>
  408340:	lea    rdi,[rsp+0x68]
  408345:	call   404550 <isspace@plt+0xc40>
  40834a:	mov    r14,QWORD PTR [rsp+0x18]
  40834f:	mov    rax,QWORD PTR fs:0x28
  408358:	cmp    rax,QWORD PTR [rsp+0x80]
  408360:	jne    408377 <isspace@plt+0x4a67>
  408362:	mov    rax,r14
  408365:	add    rsp,0x88
  40836c:	pop    rbx
  40836d:	pop    r12
  40836f:	pop    r13
  408371:	pop    r14
  408373:	pop    r15
  408375:	pop    rbp
  408376:	ret    
  408377:	call   403280 <__stack_chk_fail@plt>
  40837c:	nop    DWORD PTR [rax+0x0]
  408380:	push   rax
  408381:	mov    rax,QWORD PTR fs:0x28
  40838a:	mov    QWORD PTR [rsp],rax
  40838e:	mov    rax,QWORD PTR fs:0x28
  408397:	cmp    rax,QWORD PTR [rsp]
  40839b:	jne    4083a2 <isspace@plt+0x4a92>
  40839d:	mov    rax,rsi
  4083a0:	pop    rcx
  4083a1:	ret    
  4083a2:	call   403280 <__stack_chk_fail@plt>
  4083a7:	nop    WORD PTR [rax+rax*1+0x0]
  4083b0:	push   rbp
  4083b1:	push   r15
  4083b3:	push   r14
  4083b5:	push   r13
  4083b7:	push   r12
  4083b9:	push   rbx
  4083ba:	sub    rsp,0x28
  4083be:	mov    r14,rdx
  4083c1:	mov    r12,rsi
  4083c4:	mov    QWORD PTR [rsp+0x8],rdi
  4083c9:	mov    rax,QWORD PTR fs:0x28
  4083d2:	mov    QWORD PTR [rsp+0x20],rax
  4083d7:	xor    esi,esi
  4083d9:	mov    rdi,r12
  4083dc:	call   403d20 <isspace@plt+0x410>
  4083e1:	mov    r13,rax
  4083e4:	xor    esi,esi
  4083e6:	mov    rdi,r14
  4083e9:	call   403d20 <isspace@plt+0x410>
  4083ee:	test   r13,r13
  4083f1:	je     408487 <isspace@plt+0x4b77>
  4083f7:	mov    rbx,rax
  4083fa:	test   rax,rax
  4083fd:	je     408487 <isspace@plt+0x4b77>
  408403:	xor    ebp,ebp
  408405:	xor    r15d,r15d
  408408:	nop    DWORD PTR [rax+rax*1+0x0]
  408410:	mov    rdi,r13
  408413:	mov    rsi,rbx
  408416:	call   417610 <isspace@plt+0x13d00>
  40841b:	test   al,al
  40841d:	je     408443 <isspace@plt+0x4b33>
  40841f:	mov    rdi,r13
  408422:	mov    rsi,rbx
  408425:	call   417570 <isspace@plt+0x13c60>
  40842a:	mov    QWORD PTR [rsp+0x10],rax
  40842f:	mov    QWORD PTR [rsp+0x18],rdx
  408434:	mov    rdi,QWORD PTR [rsp+0x8]
  408439:	lea    rsi,[rsp+0x10]
  40843e:	call   403d70 <isspace@plt+0x460>
  408443:	mov    rax,QWORD PTR [r13+0x8]
  408447:	cmp    rax,QWORD PTR [rbx+0x8]
  40844b:	jae    408470 <isspace@plt+0x4b60>
  40844d:	add    r15,0x1
  408451:	mov    rdi,r12
  408454:	mov    rsi,r15
  408457:	call   403d20 <isspace@plt+0x410>
  40845c:	mov    r13,rax
  40845f:	test   r13,r13
  408462:	je     408487 <isspace@plt+0x4b77>
  408464:	test   rbx,rbx
  408467:	jne    408410 <isspace@plt+0x4b00>
  408469:	jmp    408487 <isspace@plt+0x4b77>
  40846b:	nop    DWORD PTR [rax+rax*1+0x0]
  408470:	add    rbp,0x1
  408474:	mov    rdi,r14
  408477:	mov    rsi,rbp
  40847a:	call   403d20 <isspace@plt+0x410>
  40847f:	mov    rbx,rax
  408482:	test   r13,r13
  408485:	jne    408464 <isspace@plt+0x4b54>
  408487:	mov    rax,QWORD PTR fs:0x28
  408490:	cmp    rax,QWORD PTR [rsp+0x20]
  408495:	jne    4084a6 <isspace@plt+0x4b96>
  408497:	add    rsp,0x28
  40849b:	pop    rbx
  40849c:	pop    r12
  40849e:	pop    r13
  4084a0:	pop    r14
  4084a2:	pop    r15
  4084a4:	pop    rbp
  4084a5:	ret    
  4084a6:	call   403280 <__stack_chk_fail@plt>
  4084ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4084b0:	push   rbp
  4084b1:	push   r15
  4084b3:	push   r14
  4084b5:	push   r13
  4084b7:	push   r12
  4084b9:	push   rbx
  4084ba:	sub    rsp,0x28
  4084be:	mov    r12,rsi
  4084c1:	mov    r15,rdi
  4084c4:	mov    rax,QWORD PTR fs:0x28
  4084cd:	mov    QWORD PTR [rsp+0x20],rax
  4084d2:	mov    QWORD PTR [rsp+0x8],rdx
  4084d7:	mov    rbx,QWORD PTR [rdx]
  4084da:	mov    rdi,rsi
  4084dd:	call   403f90 <isspace@plt+0x680>
  4084e2:	test   rax,rax
  4084e5:	je     408532 <isspace@plt+0x4c22>
  4084e7:	mov    r13,rax
  4084ea:	xor    ebp,ebp
  4084ec:	nop    DWORD PTR [rax+0x0]
  4084f0:	mov    rdi,r12
  4084f3:	mov    rsi,rbp
  4084f6:	call   403d20 <isspace@plt+0x410>
  4084fb:	mov    r14,rax
  4084fe:	mov    rsi,QWORD PTR [rax]
  408501:	cmp    rbx,rsi
  408504:	jae    408525 <isspace@plt+0x4c15>
  408506:	mov    rdi,rbx
  408509:	call   417690 <isspace@plt+0x13d80>
  40850e:	mov    QWORD PTR [rsp+0x10],rax
  408513:	mov    QWORD PTR [rsp+0x18],rdx
  408518:	mov    rdi,r15
  40851b:	lea    rsi,[rsp+0x10]
  408520:	call   403d70 <isspace@plt+0x460>
  408525:	mov    rbx,QWORD PTR [r14+0x8]
  408529:	add    rbp,0x1
  40852d:	cmp    r13,rbp
  408530:	jne    4084f0 <isspace@plt+0x4be0>
  408532:	mov    rax,QWORD PTR [rsp+0x8]
  408537:	mov    rsi,QWORD PTR [rax+0x8]
  40853b:	cmp    rbx,rsi
  40853e:	jae    40855f <isspace@plt+0x4c4f>
  408540:	mov    rdi,rbx
  408543:	call   417690 <isspace@plt+0x13d80>
  408548:	mov    QWORD PTR [rsp+0x10],rax
  40854d:	mov    QWORD PTR [rsp+0x18],rdx
  408552:	lea    rsi,[rsp+0x10]
  408557:	mov    rdi,r15
  40855a:	call   403d70 <isspace@plt+0x460>
  40855f:	mov    rax,QWORD PTR fs:0x28
  408568:	cmp    rax,QWORD PTR [rsp+0x20]
  40856d:	jne    40857e <isspace@plt+0x4c6e>
  40856f:	add    rsp,0x28
  408573:	pop    rbx
  408574:	pop    r12
  408576:	pop    r13
  408578:	pop    r14
  40857a:	pop    r15
  40857c:	pop    rbp
  40857d:	ret    
  40857e:	call   403280 <__stack_chk_fail@plt>
  408583:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40858d:	nop    DWORD PTR [rax]
  408590:	push   r15
  408592:	push   r14
  408594:	push   rbx
  408595:	sub    rsp,0x10
  408599:	mov    rax,QWORD PTR fs:0x28
  4085a2:	mov    QWORD PTR [rsp+0x8],rax
  4085a7:	mov    r15,QWORD PTR [rdi]
  4085aa:	test   r15,r15
  4085ad:	je     408611 <isspace@plt+0x4d01>
  4085af:	mov    r14,rsi
  4085b2:	mov    rbx,rdi
  4085b5:	mov    rdi,rsi
  4085b8:	call   403250 <strlen@plt>
  4085bd:	cmp    QWORD PTR [rbx+0x8],0x0
  4085c2:	jne    408602 <isspace@plt+0x4cf2>
  4085c4:	jmp    4085d3 <isspace@plt+0x4cc3>
  4085c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4085d0:	mov    r15,QWORD PTR [rbx]
  4085d3:	mov    rcx,QWORD PTR [r15+0x20]
  4085d7:	cmp    rcx,rax
  4085da:	jae    4085f0 <isspace@plt+0x4ce0>
  4085dc:	movzx  ecx,BYTE PTR [r14+rcx*1]
  4085e1:	movzx  edx,BYTE PTR [r15+0x28]
  4085e6:	shrx   rcx,rcx,rdx
  4085eb:	and    ecx,0x1
  4085ee:	jmp    4085f2 <isspace@plt+0x4ce2>
  4085f0:	xor    ecx,ecx
  4085f2:	shl    rcx,0x4
  4085f6:	lea    rbx,[r15+rcx*1]
  4085fa:	cmp    QWORD PTR [r15+rcx*1+0x8],0x0
  408600:	je     4085d0 <isspace@plt+0x4cc0>
  408602:	mov    rsi,QWORD PTR [rbx]
  408605:	mov    rdi,r14
  408608:	call   403480 <strcmp@plt>
  40860d:	test   eax,eax
  40860f:	je     408615 <isspace@plt+0x4d05>
  408611:	xor    eax,eax
  408613:	jmp    408619 <isspace@plt+0x4d09>
  408615:	mov    rax,QWORD PTR [rbx+0x8]
  408619:	mov    rcx,QWORD PTR fs:0x28
  408622:	cmp    rcx,QWORD PTR [rsp+0x8]
  408627:	jne    408633 <isspace@plt+0x4d23>
  408629:	add    rsp,0x10
  40862d:	pop    rbx
  40862e:	pop    r14
  408630:	pop    r15
  408632:	ret    
  408633:	call   403280 <__stack_chk_fail@plt>
  408638:	nop    DWORD PTR [rax+rax*1+0x0]
  408640:	push   rbp
  408641:	push   r15
  408643:	push   r14
  408645:	push   r13
  408647:	push   r12
  408649:	push   rbx
  40864a:	push   rax
  40864b:	mov    r15,rsi
  40864e:	mov    r12,rdi
  408651:	mov    rax,QWORD PTR fs:0x28
  40865a:	mov    QWORD PTR [rsp],rax
  40865e:	call   403130 <__errno_location@plt>
  408663:	mov    r14,rax
  408666:	mov    DWORD PTR [rax],0x0
  40866c:	mov    rbx,QWORD PTR [r12]
  408670:	test   rbx,rbx
  408673:	je     408763 <isspace@plt+0x4e53>
  408679:	mov    rdi,r15
  40867c:	call   403250 <strlen@plt>
  408681:	mov    r13,QWORD PTR [r12+0x8]
  408686:	mov    rbp,r12
  408689:	test   r13,r13
  40868c:	jne    4086d2 <isspace@plt+0x4dc2>
  40868e:	mov    rcx,rbx
  408691:	jmp    4086a4 <isspace@plt+0x4d94>
  408693:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40869d:	nop    DWORD PTR [rax]
  4086a0:	mov    rcx,QWORD PTR [rbp+0x0]
  4086a4:	mov    rdx,QWORD PTR [rcx+0x20]
  4086a8:	cmp    rdx,rax
  4086ab:	jae    4086c0 <isspace@plt+0x4db0>
  4086ad:	movzx  edx,BYTE PTR [r15+rdx*1]
  4086b2:	movzx  esi,BYTE PTR [rcx+0x28]
  4086b6:	shrx   rdx,rdx,rsi
  4086bb:	and    edx,0x1
  4086be:	jmp    4086c2 <isspace@plt+0x4db2>
  4086c0:	xor    edx,edx
  4086c2:	shl    rdx,0x4
  4086c6:	lea    rbp,[rcx+rdx*1]
  4086ca:	cmp    QWORD PTR [rcx+rdx*1+0x8],0x0
  4086d0:	je     4086a0 <isspace@plt+0x4d90>
  4086d2:	mov    rsi,QWORD PTR [rbp+0x0]
  4086d6:	mov    rdi,r15
  4086d9:	call   403480 <strcmp@plt>
  4086de:	test   eax,eax
  4086e0:	je     408794 <isspace@plt+0x4e84>
  4086e6:	mov    rdi,r15
  4086e9:	call   403250 <strlen@plt>
  4086ee:	test   r13,r13
  4086f1:	je     408703 <isspace@plt+0x4df3>
  4086f3:	mov    rcx,r12
  4086f6:	jmp    408748 <isspace@plt+0x4e38>
  4086f8:	nop    DWORD PTR [rax+rax*1+0x0]
  408700:	mov    rbx,QWORD PTR [rcx]
  408703:	mov    rcx,QWORD PTR [rbx+0x20]
  408707:	cmp    rcx,rax
  40870a:	jae    408720 <isspace@plt+0x4e10>
  40870c:	movzx  ecx,BYTE PTR [r15+rcx*1]
  408711:	jmp    408722 <isspace@plt+0x4e12>
  408713:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40871d:	nop    DWORD PTR [rax]
  408720:	xor    ecx,ecx
  408722:	movzx  edx,BYTE PTR [rbx+0x28]
  408726:	movzx  esi,cl
  408729:	shrx   rdx,rsi,rdx
  40872e:	and    edx,0x1
  408731:	shl    rdx,0x4
  408735:	lea    rcx,[rbx+rdx*1]
  408739:	test   sil,sil
  40873c:	cmovne r12,rcx
  408740:	cmp    QWORD PTR [rbx+rdx*1+0x8],0x0
  408746:	je     408700 <isspace@plt+0x4df0>
  408748:	mov    rdi,QWORD PTR [rcx]
  40874b:	mov    rsi,r15
  40874e:	mov    rdx,rax
  408751:	call   403160 <strncmp@plt>
  408756:	test   eax,eax
  408758:	lea    rax,[rip+0x27819]        # 42ff78 <isspace@plt+0x2c668>
  40875f:	cmovne r12,rax
  408763:	cmp    QWORD PTR [r12],0x0
  408768:	jne    408771 <isspace@plt+0x4e61>
  40876a:	mov    DWORD PTR [r14],0x2
  408771:	mov    rax,QWORD PTR [r12+0x8]
  408776:	mov    rcx,QWORD PTR fs:0x28
  40877f:	cmp    rcx,QWORD PTR [rsp]
  408783:	jne    4087a2 <isspace@plt+0x4e92>
  408785:	add    rsp,0x8
  408789:	pop    rbx
  40878a:	pop    r12
  40878c:	pop    r13
  40878e:	pop    r14
  408790:	pop    r15
  408792:	pop    rbp
  408793:	ret    
  408794:	mov    rax,QWORD PTR [rbp+0x8]
  408798:	test   rax,rax
  40879b:	jne    408776 <isspace@plt+0x4e66>
  40879d:	jmp    4086e6 <isspace@plt+0x4dd6>
  4087a2:	call   403280 <__stack_chk_fail@plt>
  4087a7:	nop    WORD PTR [rax+rax*1+0x0]
  4087b0:	push   r14
  4087b2:	push   rbx
  4087b3:	push   rax
  4087b4:	mov    r14,rsi
  4087b7:	mov    rbx,rdi
  4087ba:	mov    rax,QWORD PTR fs:0x28
  4087c3:	mov    QWORD PTR [rsp],rax
  4087c7:	mov    rdi,rsi
  4087ca:	call   403250 <strlen@plt>
  4087cf:	mov    rcx,QWORD PTR [rbx]
  4087d2:	test   rcx,rcx
  4087d5:	je     408853 <isspace@plt+0x4f43>
  4087d7:	cmp    QWORD PTR [rbx+0x8],0x0
  4087dc:	je     4087f3 <isspace@plt+0x4ee3>
  4087de:	mov    rdx,rbx
  4087e1:	jmp    408838 <isspace@plt+0x4f28>
  4087e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087ed:	nop    DWORD PTR [rax]
  4087f0:	mov    rcx,QWORD PTR [rdx]
  4087f3:	mov    rdx,QWORD PTR [rcx+0x20]
  4087f7:	cmp    rdx,rax
  4087fa:	jae    408810 <isspace@plt+0x4f00>
  4087fc:	movzx  edx,BYTE PTR [r14+rdx*1]
  408801:	jmp    408812 <isspace@plt+0x4f02>
  408803:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40880d:	nop    DWORD PTR [rax]
  408810:	xor    edx,edx
  408812:	movzx  esi,BYTE PTR [rcx+0x28]
  408816:	movzx  edi,dl
  408819:	shrx   rsi,rdi,rsi
  40881e:	and    esi,0x1
  408821:	shl    rsi,0x4
  408825:	lea    rdx,[rcx+rsi*1]
  408829:	test   dil,dil
  40882c:	cmovne rbx,rdx
  408830:	cmp    QWORD PTR [rcx+rsi*1+0x8],0x0
  408836:	je     4087f0 <isspace@plt+0x4ee0>
  408838:	mov    rdi,QWORD PTR [rdx]
  40883b:	mov    rsi,r14
  40883e:	mov    rdx,rax
  408841:	call   403160 <strncmp@plt>
  408846:	test   eax,eax
  408848:	lea    rax,[rip+0x27729]        # 42ff78 <isspace@plt+0x2c668>
  40884f:	cmovne rbx,rax
  408853:	mov    rax,QWORD PTR fs:0x28
  40885c:	cmp    rax,QWORD PTR [rsp]
  408860:	jne    40886d <isspace@plt+0x4f5d>
  408862:	mov    rax,rbx
  408865:	add    rsp,0x8
  408869:	pop    rbx
  40886a:	pop    r14
  40886c:	ret    
  40886d:	call   403280 <__stack_chk_fail@plt>
  408872:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40887c:	nop    DWORD PTR [rax+0x0]
  408880:	push   rax
  408881:	mov    rax,QWORD PTR fs:0x28
  40888a:	mov    QWORD PTR [rsp],rax
  40888e:	cmp    QWORD PTR [rdi],0x0
  408892:	sete   al
  408895:	mov    rcx,QWORD PTR fs:0x28
  40889e:	cmp    rcx,QWORD PTR [rsp]
  4088a2:	jne    4088a6 <isspace@plt+0x4f96>
  4088a4:	pop    rcx
  4088a5:	ret    
  4088a6:	call   403280 <__stack_chk_fail@plt>
  4088ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4088b0:	push   rax
  4088b1:	mov    rax,rdx
  4088b4:	mov    rdx,QWORD PTR fs:0x28
  4088bd:	mov    QWORD PTR [rsp],rdx
  4088c1:	mov    rdx,QWORD PTR [rdi]
  4088c4:	test   rdx,rdx
  4088c7:	je     4088de <isspace@plt+0x4fce>
  4088c9:	mov    rcx,rsi
  4088cc:	mov    rsi,QWORD PTR [rdi+0x8]
  4088d0:	mov    rdi,rdx
  4088d3:	mov    rdx,rcx
  4088d6:	mov    rcx,rax
  4088d9:	call   408c70 <isspace@plt+0x5360>
  4088de:	mov    rax,QWORD PTR fs:0x28
  4088e7:	cmp    rax,QWORD PTR [rsp]
  4088eb:	jne    4088ef <isspace@plt+0x4fdf>
  4088ed:	pop    rax
  4088ee:	ret    
  4088ef:	call   403280 <__stack_chk_fail@plt>
  4088f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088fe:	xchg   ax,ax
  408900:	push   rbp
  408901:	push   r15
  408903:	push   r14
  408905:	push   r13
  408907:	push   r12
  408909:	push   rbx
  40890a:	sub    rsp,0x28
  40890e:	mov    r15,rdx
  408911:	mov    rbp,rsi
  408914:	mov    r13,rdi
  408917:	mov    rax,QWORD PTR fs:0x28
  408920:	mov    QWORD PTR [rsp+0x20],rax
  408925:	mov    rdi,rsi
  408928:	call   403250 <strlen@plt>
  40892d:	test   r15,r15
  408930:	je     4089ec <isspace@plt+0x50dc>
  408936:	mov    r14,rax
  408939:	mov    rdi,rbp
  40893c:	call   403850 <strdup@plt>
  408941:	test   rax,rax
  408944:	je     408b03 <isspace@plt+0x51f3>
  40894a:	mov    rbx,rax
  40894d:	mov    r12,QWORD PTR [r13+0x0]
  408951:	test   r12,r12
  408954:	je     4089fc <isspace@plt+0x50ec>
  40895a:	mov    rdi,rbx
  40895d:	call   403250 <strlen@plt>
  408962:	mov    rdi,QWORD PTR [r13+0x8]
  408966:	mov    rcx,r12
  408969:	test   rdi,rdi
  40896c:	jne    4089b5 <isspace@plt+0x50a5>
  40896e:	mov    rcx,r12
  408971:	jmp    408983 <isspace@plt+0x5073>
  408973:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40897d:	nop    DWORD PTR [rax]
  408980:	mov    rcx,QWORD PTR [rsi]
  408983:	mov    rdx,QWORD PTR [rcx+0x20]
  408987:	cmp    rdx,rax
  40898a:	jae    4089a0 <isspace@plt+0x5090>
  40898c:	movzx  edx,BYTE PTR [rbx+rdx*1]
  408990:	movzx  esi,BYTE PTR [rcx+0x28]
  408994:	shrx   rdx,rdx,rsi
  408999:	and    edx,0x1
  40899c:	jmp    4089a2 <isspace@plt+0x5092>
  40899e:	xchg   ax,ax
  4089a0:	xor    edx,edx
  4089a2:	shl    rdx,0x4
  4089a6:	lea    rsi,[rcx+rdx*1]
  4089aa:	cmp    QWORD PTR [rcx+rdx*1+0x8],0x0
  4089b0:	je     408980 <isspace@plt+0x5070>
  4089b2:	mov    rcx,QWORD PTR [rsi]
  4089b5:	mov    QWORD PTR [rsp+0x18],r15
  4089ba:	mov    QWORD PTR [rsp+0x8],r14
  4089bf:	mov    QWORD PTR [rsp],rbp
  4089c3:	mov    r14b,BYTE PTR [rcx]
  4089c6:	cmp    r14b,BYTE PTR [rbx]
  4089c9:	jne    408a09 <isspace@plt+0x50f9>
  4089cb:	xor    r15d,r15d
  4089ce:	xchg   ax,ax
  4089d0:	test   r14b,r14b
  4089d3:	je     408b2f <isspace@plt+0x521f>
  4089d9:	movzx  r14d,BYTE PTR [rcx+r15*1+0x1]
  4089df:	cmp    r14b,BYTE PTR [rbx+r15*1+0x1]
  4089e4:	lea    r15,[r15+0x1]
  4089e8:	je     4089d0 <isspace@plt+0x50c0>
  4089ea:	jmp    408a0c <isspace@plt+0x50fc>
  4089ec:	call   403130 <__errno_location@plt>
  4089f1:	mov    DWORD PTR [rax],0x16
  4089f7:	jmp    408b0e <isspace@plt+0x51fe>
  4089fc:	mov    QWORD PTR [r13+0x0],rbx
  408a00:	mov    QWORD PTR [r13+0x8],r15
  408a04:	jmp    408af7 <isspace@plt+0x51e7>
  408a09:	xor    r15d,r15d
  408a0c:	mov    QWORD PTR [rsp+0x10],rdi
  408a11:	mov    rax,QWORD PTR [rsp]
  408a15:	movzx  ebp,BYTE PTR [rax+r15*1]
  408a1a:	mov    edi,0x30
  408a1f:	call   4035e0 <malloc@plt>
  408a24:	test   rax,rax
  408a27:	je     408afb <isspace@plt+0x51eb>
  408a2d:	xor    r14b,bpl
  408a30:	shr    r14b,1
  408a33:	movzx  ecx,r14b
  408a37:	lzcnt  ecx,ecx
  408a3b:	add    ecx,0xffffffe8
  408a3e:	mov    dl,0x8
  408a40:	sub    dl,cl
  408a42:	shrx   ecx,ebp,edx
  408a47:	and    cl,0x1
  408a4a:	movzx  esi,cl
  408a4d:	shl    rsi,0x4
  408a51:	mov    QWORD PTR [rax+0x20],r15
  408a55:	mov    BYTE PTR [rax+0x28],dl
  408a58:	mov    rdi,QWORD PTR [rsp+0x18]
  408a5d:	mov    QWORD PTR [rax+rsi*1+0x8],rdi
  408a62:	mov    QWORD PTR [rax+rsi*1],rbx
  408a66:	cmp    QWORD PTR [rsp+0x10],0x0
  408a6c:	jne    408ad6 <isspace@plt+0x51c6>
  408a6e:	mov    rsi,QWORD PTR [r12+0x20]
  408a73:	cmp    rsi,r15
  408a76:	ja     408ad6 <isspace@plt+0x51c6>
  408a78:	mov    rbp,QWORD PTR [rsp]
  408a7c:	mov    rbx,QWORD PTR [rsp+0x8]
  408a81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  408a90:	cmp    rsi,r15
  408a93:	jne    408a9c <isspace@plt+0x518c>
  408a95:	cmp    BYTE PTR [r12+0x28],dl
  408a9a:	jb     408ad6 <isspace@plt+0x51c6>
  408a9c:	cmp    rsi,rbx
  408a9f:	jae    408ab6 <isspace@plt+0x51a6>
  408aa1:	movzx  esi,BYTE PTR [rbp+rsi*1+0x0]
  408aa6:	movzx  edi,BYTE PTR [r12+0x28]
  408aac:	shrx   rsi,rsi,rdi
  408ab1:	and    esi,0x1
  408ab4:	jmp    408ab8 <isspace@plt+0x51a8>
  408ab6:	xor    esi,esi
  408ab8:	shl    rsi,0x4
  408abc:	lea    r13,[r12+rsi*1]
  408ac0:	cmp    QWORD PTR [r12+rsi*1+0x8],0x0
  408ac6:	jne    408ad6 <isspace@plt+0x51c6>
  408ac8:	mov    r12,QWORD PTR [r13+0x0]
  408acc:	mov    rsi,QWORD PTR [r12+0x20]
  408ad1:	cmp    rsi,r15
  408ad4:	jbe    408a90 <isspace@plt+0x5180>
  408ad6:	xor    cl,0x1
  408ad9:	movzx  ecx,cl
  408adc:	shl    rcx,0x4
  408ae0:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  408ae6:	vmovups XMMWORD PTR [rax+rcx*1],xmm0
  408aeb:	mov    QWORD PTR [r13+0x0],rax
  408aef:	mov    QWORD PTR [r13+0x8],0x0
  408af7:	mov    al,0x1
  408af9:	jmp    408b10 <isspace@plt+0x5200>
  408afb:	mov    rdi,rbx
  408afe:	call   4030d0 <free@plt>
  408b03:	call   403130 <__errno_location@plt>
  408b08:	mov    DWORD PTR [rax],0xc
  408b0e:	xor    eax,eax
  408b10:	mov    rcx,QWORD PTR fs:0x28
  408b19:	cmp    rcx,QWORD PTR [rsp+0x20]
  408b1e:	jne    408b44 <isspace@plt+0x5234>
  408b20:	add    rsp,0x28
  408b24:	pop    rbx
  408b25:	pop    r12
  408b27:	pop    r13
  408b29:	pop    r14
  408b2b:	pop    r15
  408b2d:	pop    rbp
  408b2e:	ret    
  408b2f:	mov    rdi,rbx
  408b32:	call   4030d0 <free@plt>
  408b37:	call   403130 <__errno_location@plt>
  408b3c:	mov    DWORD PTR [rax],0x11
  408b42:	jmp    408b0e <isspace@plt+0x51fe>
  408b44:	call   403280 <__stack_chk_fail@plt>
  408b49:	nop    DWORD PTR [rax+0x0]
  408b50:	push   rbp
  408b51:	push   r15
  408b53:	push   r14
  408b55:	push   r13
  408b57:	push   r12
  408b59:	push   rbx
  408b5a:	push   rax
  408b5b:	mov    r12,rsi
  408b5e:	mov    r14,rdi
  408b61:	mov    rax,QWORD PTR fs:0x28
  408b6a:	mov    QWORD PTR [rsp],rax
  408b6e:	mov    rdi,rsi
  408b71:	call   403250 <strlen@plt>
  408b76:	mov    rcx,QWORD PTR [r14]
  408b79:	test   rcx,rcx
  408b7c:	je     408c00 <isspace@plt+0x52f0>
  408b82:	cmp    QWORD PTR [r14+0x8],0x0
  408b87:	je     408b94 <isspace@plt+0x5284>
  408b89:	lea    r13,[r14+0x8]
  408b8d:	xor    ebx,ebx
  408b8f:	mov    rdx,r14
  408b92:	jmp    408bee <isspace@plt+0x52de>
  408b94:	mov    rbx,r14
  408b97:	jmp    408ba6 <isspace@plt+0x5296>
  408b99:	nop    DWORD PTR [rax+0x0]
  408ba0:	mov    rcx,QWORD PTR [rdx]
  408ba3:	mov    rbx,rdx
  408ba6:	mov    rdx,QWORD PTR [rcx+0x20]
  408baa:	cmp    rdx,rax
  408bad:	jae    408bd0 <isspace@plt+0x52c0>
  408baf:	movzx  edx,BYTE PTR [r12+rdx*1]
  408bb4:	movzx  esi,BYTE PTR [rcx+0x28]
  408bb8:	shrx   ebp,edx,esi
  408bbd:	and    bpl,0x1
  408bc1:	jmp    408bd2 <isspace@plt+0x52c2>
  408bc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408bcd:	nop    DWORD PTR [rax]
  408bd0:	xor    ebp,ebp
  408bd2:	movzx  esi,bpl
  408bd6:	shl    rsi,0x4
  408bda:	lea    rdx,[rcx+rsi*1]
  408bde:	cmp    QWORD PTR [rcx+rsi*1+0x8],0x0
  408be4:	je     408ba0 <isspace@plt+0x5290>
  408be6:	lea    r13,[rcx+rsi*1]
  408bea:	add    r13,0x8
  408bee:	mov    r15,QWORD PTR [rdx]
  408bf1:	mov    rdi,r12
  408bf4:	mov    rsi,r15
  408bf7:	call   403480 <strcmp@plt>
  408bfc:	test   eax,eax
  408bfe:	je     408c2f <isspace@plt+0x531f>
  408c00:	call   403130 <__errno_location@plt>
  408c05:	mov    DWORD PTR [rax],0x2
  408c0b:	xor    r15d,r15d
  408c0e:	mov    rax,QWORD PTR fs:0x28
  408c17:	cmp    rax,QWORD PTR [rsp]
  408c1b:	jne    408c68 <isspace@plt+0x5358>
  408c1d:	mov    rax,r15
  408c20:	add    rsp,0x8
  408c24:	pop    rbx
  408c25:	pop    r12
  408c27:	pop    r13
  408c29:	pop    r14
  408c2b:	pop    r15
  408c2d:	pop    rbp
  408c2e:	ret    
  408c2f:	mov    rdi,r15
  408c32:	call   4030d0 <free@plt>
  408c37:	mov    r15,QWORD PTR [r13+0x0]
  408c3b:	test   rbx,rbx
  408c3e:	je     408c5f <isspace@plt+0x534f>
  408c40:	mov    rdi,QWORD PTR [rbx]
  408c43:	xor    eax,eax
  408c45:	test   bpl,bpl
  408c48:	sete   al
  408c4b:	shl    rax,0x4
  408c4f:	vmovups xmm0,XMMWORD PTR [rdi+rax*1]
  408c54:	vmovups XMMWORD PTR [rbx],xmm0
  408c58:	call   4030d0 <free@plt>
  408c5d:	jmp    408c0e <isspace@plt+0x52fe>
  408c5f:	mov    QWORD PTR [r14],0x0
  408c66:	jmp    408c0e <isspace@plt+0x52fe>
  408c68:	call   403280 <__stack_chk_fail@plt>
  408c6d:	nop    DWORD PTR [rax]
  408c70:	push   r15
  408c72:	push   r14
  408c74:	push   rbx
  408c75:	sub    rsp,0x10
  408c79:	mov    r14,rcx
  408c7c:	mov    r15,rdx
  408c7f:	mov    rbx,rdi
  408c82:	mov    rax,QWORD PTR fs:0x28
  408c8b:	mov    QWORD PTR [rsp+0x8],rax
  408c90:	test   rsi,rsi
  408c93:	je     408ca0 <isspace@plt+0x5390>
  408c95:	mov    rdi,rbx
  408c98:	jmp    408cc6 <isspace@plt+0x53b6>
  408c9a:	nop    WORD PTR [rax+rax*1+0x0]
  408ca0:	mov    rdi,QWORD PTR [rbx]
  408ca3:	mov    rsi,QWORD PTR [rbx+0x8]
  408ca7:	mov    rdx,r15
  408caa:	mov    rcx,r14
  408cad:	call   408c70 <isspace@plt+0x5360>
  408cb2:	test   al,al
  408cb4:	je     408ce6 <isspace@plt+0x53d6>
  408cb6:	mov    rdi,QWORD PTR [rbx+0x10]
  408cba:	mov    rsi,QWORD PTR [rbx+0x18]
  408cbe:	mov    rbx,rdi
  408cc1:	test   rsi,rsi
  408cc4:	je     408ca0 <isspace@plt+0x5390>
  408cc6:	mov    rdx,r14
  408cc9:	call   r15
  408ccc:	mov    rcx,QWORD PTR fs:0x28
  408cd5:	cmp    rcx,QWORD PTR [rsp+0x8]
  408cda:	jne    408cfa <isspace@plt+0x53ea>
  408cdc:	add    rsp,0x10
  408ce0:	pop    rbx
  408ce1:	pop    r14
  408ce3:	pop    r15
  408ce5:	ret    
  408ce6:	mov    rax,QWORD PTR fs:0x28
  408cef:	cmp    rax,QWORD PTR [rsp+0x8]
  408cf4:	jne    408cfa <isspace@plt+0x53ea>
  408cf6:	xor    eax,eax
  408cf8:	jmp    408cdc <isspace@plt+0x53cc>
  408cfa:	call   403280 <__stack_chk_fail@plt>
  408cff:	nop
  408d00:	push   rbx
  408d01:	sub    rsp,0x20
  408d05:	mov    rbx,rsi
  408d08:	mov    rax,QWORD PTR fs:0x28
  408d11:	mov    QWORD PTR [rsp+0x18],rax
  408d16:	vxorps xmm0,xmm0,xmm0
  408d1a:	vmovaps XMMWORD PTR [rsp],xmm0
  408d1f:	mov    rax,QWORD PTR [rdi]
  408d22:	test   rax,rax
  408d25:	je     408d3d <isspace@plt+0x542d>
  408d27:	mov    rsi,QWORD PTR [rdi+0x8]
  408d2b:	lea    rdx,[rip+0x3e]        # 408d70 <isspace@plt+0x5460>
  408d32:	mov    rcx,rsp
  408d35:	mov    rdi,rax
  408d38:	call   408c70 <isspace@plt+0x5360>
  408d3d:	test   rbx,rbx
  408d40:	je     408d4e <isspace@plt+0x543e>
  408d42:	mov    rax,QWORD PTR [rsp]
  408d46:	test   rax,rax
  408d49:	je     408d4e <isspace@plt+0x543e>
  408d4b:	mov    QWORD PTR [rbx],rax
  408d4e:	mov    rax,QWORD PTR [rsp+0x8]
  408d53:	mov    rcx,QWORD PTR fs:0x28
  408d5c:	cmp    rcx,QWORD PTR [rsp+0x18]
  408d61:	jne    408d69 <isspace@plt+0x5459>
  408d63:	add    rsp,0x20
  408d67:	pop    rbx
  408d68:	ret    
  408d69:	call   403280 <__stack_chk_fail@plt>
  408d6e:	xchg   ax,ax
  408d70:	push   rax
  408d71:	mov    rax,QWORD PTR fs:0x28
  408d7a:	mov    QWORD PTR [rsp],rax
  408d7e:	mov    QWORD PTR [rdx],rdi
  408d81:	mov    QWORD PTR [rdx+0x8],rsi
  408d85:	mov    rax,QWORD PTR fs:0x28
  408d8e:	cmp    rax,QWORD PTR [rsp]
  408d92:	jne    408d98 <isspace@plt+0x5488>
  408d94:	xor    eax,eax
  408d96:	pop    rcx
  408d97:	ret    
  408d98:	call   403280 <__stack_chk_fail@plt>
  408d9d:	nop    DWORD PTR [rax]
  408da0:	push   rbx
  408da1:	sub    rsp,0x10
  408da5:	mov    rbx,rdi
  408da8:	mov    rax,QWORD PTR fs:0x28
  408db1:	mov    QWORD PTR [rsp+0x8],rax
  408db6:	test   rsi,rsi
  408db9:	jne    408dd4 <isspace@plt+0x54c4>
  408dbb:	mov    rdi,QWORD PTR [rbx]
  408dbe:	mov    rsi,QWORD PTR [rbx+0x8]
  408dc2:	call   408da0 <isspace@plt+0x5490>
  408dc7:	mov    rdi,QWORD PTR [rbx+0x10]
  408dcb:	mov    rsi,QWORD PTR [rbx+0x18]
  408dcf:	call   408da0 <isspace@plt+0x5490>
  408dd4:	mov    rdi,rbx
  408dd7:	call   4030d0 <free@plt>
  408ddc:	mov    rax,QWORD PTR fs:0x28
  408de5:	cmp    rax,QWORD PTR [rsp+0x8]
  408dea:	jne    408df2 <isspace@plt+0x54e2>
  408dec:	add    rsp,0x10
  408df0:	pop    rbx
  408df1:	ret    
  408df2:	call   403280 <__stack_chk_fail@plt>
  408df7:	nop    WORD PTR [rax+rax*1+0x0]
  408e00:	push   rax
  408e01:	mov    rax,QWORD PTR fs:0x28
  408e0a:	mov    QWORD PTR [rsp],rax
  408e0e:	test   rsi,rsi
  408e11:	je     408e38 <isspace@plt+0x5528>
  408e13:	mov    rax,QWORD PTR [rsi]
  408e16:	test   rax,rax
  408e19:	je     408e38 <isspace@plt+0x5528>
  408e1b:	mov    rdx,QWORD PTR [rsi+0x8]
  408e1f:	mov    rsi,rax
  408e22:	call   408e50 <isspace@plt+0x5540>
  408e27:	mov    rcx,QWORD PTR fs:0x28
  408e30:	cmp    rcx,QWORD PTR [rsp]
  408e34:	jne    408e4b <isspace@plt+0x553b>
  408e36:	pop    rcx
  408e37:	ret    
  408e38:	mov    rax,QWORD PTR fs:0x28
  408e41:	cmp    rax,QWORD PTR [rsp]
  408e45:	jne    408e4b <isspace@plt+0x553b>
  408e47:	mov    al,0x1
  408e49:	pop    rcx
  408e4a:	ret    
  408e4b:	call   403280 <__stack_chk_fail@plt>
  408e50:	push   rbp
  408e51:	push   r15
  408e53:	push   r14
  408e55:	push   r13
  408e57:	push   r12
  408e59:	push   rbx
  408e5a:	push   rax
  408e5b:	mov    rbp,rsi
  408e5e:	mov    r14,rdi
  408e61:	mov    rax,QWORD PTR fs:0x28
  408e6a:	mov    QWORD PTR [rsp],rax
  408e6e:	test   rdx,rdx
  408e71:	je     408e80 <isspace@plt+0x5570>
  408e73:	mov    r15,rdx
  408e76:	mov    r13,rbp
  408e79:	jmp    408ea8 <isspace@plt+0x5598>
  408e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  408e80:	mov    rsi,QWORD PTR [rbp+0x0]
  408e84:	mov    rdx,QWORD PTR [rbp+0x8]
  408e88:	mov    rdi,r14
  408e8b:	call   408e50 <isspace@plt+0x5540>
  408e90:	test   al,al
  408e92:	je     408f2a <isspace@plt+0x561a>
  408e98:	mov    r13,QWORD PTR [rbp+0x10]
  408e9c:	mov    r15,QWORD PTR [rbp+0x18]
  408ea0:	mov    rbp,r13
  408ea3:	test   r15,r15
  408ea6:	je     408e80 <isspace@plt+0x5570>
  408ea8:	mov    rdi,r14
  408eab:	mov    rsi,r13
  408eae:	mov    rdx,r15
  408eb1:	call   408900 <isspace@plt+0x4ff0>
  408eb6:	mov    r12b,0x1
  408eb9:	test   al,al
  408ebb:	jne    408f2d <isspace@plt+0x561d>
  408ebd:	mov    rbp,QWORD PTR [r14]
  408ec0:	test   rbp,rbp
  408ec3:	je     408f21 <isspace@plt+0x5611>
  408ec5:	mov    rdi,r13
  408ec8:	call   403250 <strlen@plt>
  408ecd:	cmp    QWORD PTR [r14+0x8],0x0
  408ed2:	mov    rbx,r14
  408ed5:	jne    408f12 <isspace@plt+0x5602>
  408ed7:	jmp    408ee3 <isspace@plt+0x55d3>
  408ed9:	nop    DWORD PTR [rax+0x0]
  408ee0:	mov    rbp,QWORD PTR [rbx]
  408ee3:	mov    rcx,QWORD PTR [rbp+0x20]
  408ee7:	cmp    rcx,rax
  408eea:	jae    408f00 <isspace@plt+0x55f0>
  408eec:	movzx  ecx,BYTE PTR [r13+rcx*1+0x0]
  408ef2:	movzx  edx,BYTE PTR [rbp+0x28]
  408ef6:	shrx   rcx,rcx,rdx
  408efb:	and    ecx,0x1
  408efe:	jmp    408f02 <isspace@plt+0x55f2>
  408f00:	xor    ecx,ecx
  408f02:	shl    rcx,0x4
  408f06:	lea    rbx,[rcx+rbp*1]
  408f0a:	cmp    QWORD PTR [rbp+rcx*1+0x8],0x0
  408f10:	je     408ee0 <isspace@plt+0x55d0>
  408f12:	mov    rsi,QWORD PTR [rbx]
  408f15:	mov    rdi,r13
  408f18:	call   403480 <strcmp@plt>
  408f1d:	test   eax,eax
  408f1f:	je     408f41 <isspace@plt+0x5631>
  408f21:	xor    eax,eax
  408f23:	cmp    rax,r15
  408f26:	jne    408f4a <isspace@plt+0x563a>
  408f28:	jmp    408f2d <isspace@plt+0x561d>
  408f2a:	xor    r12d,r12d
  408f2d:	mov    rax,QWORD PTR fs:0x28
  408f36:	cmp    rax,QWORD PTR [rsp]
  408f3a:	jne    408f81 <isspace@plt+0x5671>
  408f3c:	mov    eax,r12d
  408f3f:	jmp    408f72 <isspace@plt+0x5662>
  408f41:	mov    rax,QWORD PTR [rbx+0x8]
  408f45:	cmp    rax,r15
  408f48:	je     408f2d <isspace@plt+0x561d>
  408f4a:	mov    rdi,r14
  408f4d:	mov    rsi,r13
  408f50:	call   408b50 <isspace@plt+0x5240>
  408f55:	mov    rdi,r14
  408f58:	mov    rsi,r13
  408f5b:	mov    rdx,r15
  408f5e:	call   408900 <isspace@plt+0x4ff0>
  408f63:	mov    rcx,QWORD PTR fs:0x28
  408f6c:	cmp    rcx,QWORD PTR [rsp]
  408f70:	jne    408f81 <isspace@plt+0x5671>
  408f72:	add    rsp,0x8
  408f76:	pop    rbx
  408f77:	pop    r12
  408f79:	pop    r13
  408f7b:	pop    r14
  408f7d:	pop    r15
  408f7f:	pop    rbp
  408f80:	ret    
  408f81:	call   403280 <__stack_chk_fail@plt>
  408f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f90:	push   rax
  408f91:	mov    rax,QWORD PTR fs:0x28
  408f9a:	mov    QWORD PTR [rsp],rax
  408f9e:	mov    edi,0x1
  408fa3:	mov    esi,0x10
  408fa8:	call   403470 <calloc@plt>
  408fad:	mov    rcx,QWORD PTR fs:0x28
  408fb6:	cmp    rcx,QWORD PTR [rsp]
  408fba:	jne    408fbe <isspace@plt+0x56ae>
  408fbc:	pop    rcx
  408fbd:	ret    
  408fbe:	call   403280 <__stack_chk_fail@plt>
  408fc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fcd:	nop    DWORD PTR [rax]
  408fd0:	push   rbx
  408fd1:	sub    rsp,0x10
  408fd5:	mov    rax,QWORD PTR fs:0x28
  408fde:	mov    QWORD PTR [rsp+0x8],rax
  408fe3:	test   rdi,rdi
  408fe6:	je     409004 <isspace@plt+0x56f4>
  408fe8:	mov    rbx,rdi
  408feb:	mov    rdi,QWORD PTR [rdi]
  408fee:	test   rdi,rdi
  408ff1:	je     408ffc <isspace@plt+0x56ec>
  408ff3:	mov    rsi,QWORD PTR [rbx+0x8]
  408ff7:	call   408da0 <isspace@plt+0x5490>
  408ffc:	mov    rdi,rbx
  408fff:	call   4030d0 <free@plt>
  409004:	mov    rax,QWORD PTR fs:0x28
  40900d:	cmp    rax,QWORD PTR [rsp+0x8]
  409012:	jne    40901a <isspace@plt+0x570a>
  409014:	add    rsp,0x10
  409018:	pop    rbx
  409019:	ret    
  40901a:	call   403280 <__stack_chk_fail@plt>
  40901f:	nop
  409020:	push   rbp
  409021:	push   r15
  409023:	push   r14
  409025:	push   r13
  409027:	push   r12
  409029:	push   rbx
  40902a:	push   rax
  40902b:	mov    r14,rdi
  40902e:	mov    rax,QWORD PTR fs:0x28
  409037:	mov    QWORD PTR [rsp],rax
  40903b:	call   408f90 <isspace@plt+0x5680>
  409040:	mov    QWORD PTR [r14+0x808],rax
  409047:	test   rax,rax
  40904a:	je     409129 <isspace@plt+0x5819>
  409050:	lea    rsi,[rip+0x26e84]        # 42fedb <isspace@plt+0x2c5cb>
  409057:	lea    rdx,[rip+0x37392]        # 4403f0 <isspace@plt+0x3cae0>
  40905e:	mov    rdi,rax
  409061:	call   408900 <isspace@plt+0x4ff0>
  409066:	mov    ebp,eax
  409068:	lea    rbx,[rip+0x373a9]        # 440418 <isspace@plt+0x3cb08>
  40906f:	lea    rsi,[rip+0x28d50]        # 431dc6 <isspace@plt+0x2e4b6>
  409076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409080:	mov    rdi,QWORD PTR [r14+0x808]
  409087:	mov    rdx,rbx
  40908a:	call   408900 <isspace@plt+0x4ff0>
  40908f:	and    bpl,al
  409092:	mov    rsi,QWORD PTR [rbx+0x28]
  409096:	add    rbx,0x28
  40909a:	test   rsi,rsi
  40909d:	jne    409080 <isspace@plt+0x5770>
  40909f:	call   408f90 <isspace@plt+0x5680>
  4090a4:	mov    QWORD PTR [r14+0x818],rax
  4090ab:	test   rax,rax
  4090ae:	je     409129 <isspace@plt+0x5819>
  4090b0:	lea    r13,[rip+0x37981]        # 440a38 <isspace@plt+0x3d128>
  4090b7:	xor    r12d,r12d
  4090ba:	lea    rax,[rip+0x3796f]        # 440a30 <isspace@plt+0x3d120>
  4090c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4090d0:	imul   rbx,r12,0x38
  4090d4:	mov    rsi,QWORD PTR [rbx+rax*1]
  4090d8:	test   rsi,rsi
  4090db:	je     40910e <isspace@plt+0x57fe>
  4090dd:	add    rbx,rax
  4090e0:	mov    r15,r13
  4090e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090ed:	nop    DWORD PTR [rax]
  4090f0:	mov    rdi,QWORD PTR [r14+0x818]
  4090f7:	mov    rdx,rbx
  4090fa:	call   408900 <isspace@plt+0x4ff0>
  4090ff:	and    bpl,al
  409102:	mov    rsi,QWORD PTR [r15]
  409105:	add    r15,0x8
  409109:	test   rsi,rsi
  40910c:	jne    4090f0 <isspace@plt+0x57e0>
  40910e:	add    r12,0x1
  409112:	add    r13,0x38
  409116:	cmp    r12,0x12
  40911a:	lea    rax,[rip+0x3790f]        # 440a30 <isspace@plt+0x3d120>
  409121:	jne    4090d0 <isspace@plt+0x57c0>
  409123:	and    bpl,0x1
  409127:	jmp    40912b <isspace@plt+0x581b>
  409129:	xor    ebp,ebp
  40912b:	mov    rax,QWORD PTR fs:0x28
  409134:	cmp    rax,QWORD PTR [rsp]
  409138:	jne    40914b <isspace@plt+0x583b>
  40913a:	mov    eax,ebp
  40913c:	add    rsp,0x8
  409140:	pop    rbx
  409141:	pop    r12
  409143:	pop    r13
  409145:	pop    r14
  409147:	pop    r15
  409149:	pop    rbp
  40914a:	ret    
  40914b:	call   403280 <__stack_chk_fail@plt>
  409150:	push   rax
  409151:	mov    rax,QWORD PTR fs:0x28
  40915a:	mov    QWORD PTR [rsp],rax
  40915e:	cmp    edi,0x10
  409161:	ja     409172 <isspace@plt+0x5862>
  409163:	mov    eax,edi
  409165:	lea    rcx,[rip+0x37cb4]        # 440e20 <isspace@plt+0x3d510>
  40916c:	mov    rax,QWORD PTR [rcx+rax*8]
  409170:	jmp    409174 <isspace@plt+0x5864>
  409172:	xor    eax,eax
  409174:	mov    rcx,QWORD PTR fs:0x28
  40917d:	cmp    rcx,QWORD PTR [rsp]
  409181:	jne    409185 <isspace@plt+0x5875>
  409183:	pop    rcx
  409184:	ret    
  409185:	call   403280 <__stack_chk_fail@plt>
  40918a:	nop    WORD PTR [rax+rax*1+0x0]
  409190:	push   rbp
  409191:	push   r15
  409193:	push   r14
  409195:	push   r13
  409197:	push   r12
  409199:	push   rbx
  40919a:	sub    rsp,0x58
  40919e:	mov    rax,QWORD PTR fs:0x28
  4091a7:	mov    QWORD PTR [rsp+0x50],rax
  4091ac:	mov    DWORD PTR [rsp+0x4c],0x0
  4091b4:	test   rsi,rsi
  4091b7:	je     409277 <isspace@plt+0x5967>
  4091bd:	mov    r12,rdi
  4091c0:	mov    QWORD PTR [rsp+0x38],rsi
  4091c5:	mov    DWORD PTR [rdi+0x9b4],0x0
  4091cf:	lea    rsi,[rsp+0x38]
  4091d4:	lea    rdx,[rsp+0x4c]
  4091d9:	call   40dc70 <isspace@plt+0xa360>
  4091de:	test   rax,rax
  4091e1:	je     40928e <isspace@plt+0x597e>
  4091e7:	mov    rbx,rax
  4091ea:	mov    rax,QWORD PTR [rsp+0x38]
  4091ef:	jmp    409205 <isspace@plt+0x58f5>
  4091f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091fb:	nop    DWORD PTR [rax+rax*1+0x0]
  409200:	mov    QWORD PTR [rsp+0x38],rax
  409205:	add    rax,0x1
  409209:	movzx  ecx,BYTE PTR [rax-0x1]
  40920d:	mov    edx,ecx
  40920f:	add    dl,0xf7
  409212:	cmp    dl,0x2
  409215:	jb     409200 <isspace@plt+0x58f0>
  409217:	cmp    cl,0x20
  40921a:	je     409200 <isspace@plt+0x58f0>
  40921c:	test   cl,cl
  40921e:	jne    40927e <isspace@plt+0x596e>
  409220:	mov    edi,0x1
  409225:	mov    esi,0x80
  40922a:	call   403470 <calloc@plt>
  40922f:	test   rax,rax
  409232:	je     409286 <isspace@plt+0x5976>
  409234:	mov    rbp,rax
  409237:	lea    rdi,[rip+0x28312]        # 431550 <isspace@plt+0x2dc40>
  40923e:	call   403850 <strdup@plt>
  409243:	mov    QWORD PTR [rbp+0x0],rax
  409247:	test   rax,rax
  40924a:	je     4092ac <isspace@plt+0x599c>
  40924c:	mov    QWORD PTR [rbp+0x70],rbx
  409250:	lea    rax,[rip+0x37ca1]        # 440ef8 <isspace@plt+0x3d5e8>
  409257:	mov    QWORD PTR [rbp+0x50],rax
  40925b:	xor    esi,esi
  40925d:	xor    edx,edx
  40925f:	mov    rdi,rbp
  409262:	call   40ecf0 <isspace@plt+0xb3e0>
  409267:	mov    DWORD PTR [rsp+0x4c],eax
  40926b:	test   eax,eax
  40926d:	je     4092b6 <isspace@plt+0x59a6>
  40926f:	mov    rdi,rbp
  409272:	jmp    409678 <isspace@plt+0x5d68>
  409277:	xor    eax,eax
  409279:	jmp    409681 <isspace@plt+0x5d71>
  40927e:	mov    DWORD PTR [rsp+0x4c],0xa
  409286:	mov    rdi,rbx
  409289:	call   4096b0 <isspace@plt+0x5da0>
  40928e:	mov    eax,DWORD PTR [rsp+0x4c]
  409292:	test   eax,eax
  409294:	jne    409681 <isspace@plt+0x5d71>
  40929a:	mov    DWORD PTR [rsp+0x4c],0x1
  4092a2:	mov    eax,0x1
  4092a7:	jmp    409681 <isspace@plt+0x5d71>
  4092ac:	mov    rdi,rbp
  4092af:	call   4030d0 <free@plt>
  4092b4:	jmp    409286 <isspace@plt+0x5976>
  4092b6:	mov    rax,QWORD PTR [r12+0x8]
  4092bb:	test   rax,rax
  4092be:	je     4092f5 <isspace@plt+0x59e5>
  4092c0:	vpxor  xmm0,xmm0,xmm0
  4092c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092ce:	xchg   ax,ax
  4092d0:	cmp    BYTE PTR [rax+0x18],0x0
  4092d4:	jne    4092e9 <isspace@plt+0x59d9>
  4092d6:	vmovdqu XMMWORD PTR [rax+0x440],xmm0
  4092de:	mov    QWORD PTR [rax+0x450],0x0
  4092e9:	mov    rax,QWORD PTR [rax+0x458]
  4092f0:	test   rax,rax
  4092f3:	jne    4092d0 <isspace@plt+0x59c0>
  4092f5:	mov    rax,QWORD PTR [r12+0x9a0]
  4092fd:	mov    al,BYTE PTR [rax+0x58]
  409300:	mov    BYTE PTR [rsp+0xf],al
  409304:	mov    rax,QWORD PTR [r12+0x30]
  409309:	test   rax,rax
  40930c:	je     40931e <isspace@plt+0x5a0e>
  40930e:	mov    rdi,QWORD PTR [rax+0x18]
  409312:	call   41ec80 <isspace@plt+0x1b370>
  409317:	mov    QWORD PTR [rsp+0x10],rax
  40931c:	jmp    409327 <isspace@plt+0x5a17>
  40931e:	mov    QWORD PTR [rsp+0x10],0xffffffffffffffff
  409327:	call   4174c0 <isspace@plt+0x13bb0>
  40932c:	mov    QWORD PTR [rsp+0x38],rax
  409331:	mov    QWORD PTR [rsp+0x40],rdx
  409336:	mov    rsi,QWORD PTR [r12+0x30]
  40933b:	lea    r8,[rsp+0x38]
  409340:	xor    ecx,ecx
  409342:	mov    rdi,r12
  409345:	mov    QWORD PTR [rsp+0x18],rbp
  40934a:	mov    rdx,rbp
  40934d:	call   409750 <isspace@plt+0x5e40>
  409352:	mov    r15,QWORD PTR [r12+0x8]
  409357:	test   r15,r15
  40935a:	je     4095a7 <isspace@plt+0x5c97>
  409360:	mov    QWORD PTR [rsp+0x20],r12
  409365:	jmp    409590 <isspace@plt+0x5c80>
  40936a:	nop    WORD PTR [rax+rax*1+0x0]
  409370:	mov    eax,DWORD PTR [r15+0x450]
  409377:	test   eax,eax
  409379:	je     4093b2 <isspace@plt+0x5aa2>
  40937b:	mov    DWORD PTR [rsp+0x4c],eax
  40937f:	mov    rbp,QWORD PTR [r15+0x440]
  409386:	test   rbp,rbp
  409389:	je     40959b <isspace@plt+0x5c8b>
  40938f:	nop
  409390:	mov    rdi,QWORD PTR [rbp+0x28]
  409394:	mov    rbx,QWORD PTR [rbp+0x38]
  409398:	call   4030d0 <free@plt>
  40939d:	mov    rdi,rbp
  4093a0:	call   4030d0 <free@plt>
  4093a5:	mov    rbp,rbx
  4093a8:	test   rbx,rbx
  4093ab:	jne    409390 <isspace@plt+0x5a80>
  4093ad:	jmp    40959b <isspace@plt+0x5c8b>
  4093b2:	mov    rdi,r12
  4093b5:	mov    rsi,r15
  4093b8:	call   423520 <isspace@plt+0x1fc10>
  4093bd:	mov    r14,QWORD PTR [r15+0x440]
  4093c4:	test   r14,r14
  4093c7:	je     40957d <isspace@plt+0x5c6d>
  4093cd:	xor    r12d,r12d
  4093d0:	vmovq  xmm0,r12
  4093d5:	vpbroadcastq xmm0,xmm0
  4093da:	vpaddq xmm0,xmm0,XMMWORD PTR [r14+0x18]
  4093e0:	vmovdqu XMMWORD PTR [r14+0x18],xmm0
  4093e6:	test   BYTE PTR [r14],0x2
  4093ea:	je     409430 <isspace@plt+0x5b20>
  4093ec:	lea    rbp,[r14+0x18]
  4093f0:	mov    rdi,QWORD PTR [r15]
  4093f3:	mov    rsi,rbp
  4093f6:	call   410610 <isspace@plt+0xcd00>
  4093fb:	mov    rdi,rbp
  4093fe:	call   417460 <isspace@plt+0x13b50>
  409403:	sub    r12,rax
  409406:	mov    rdi,QWORD PTR [r14+0x10]
  40940a:	test   rdi,rdi
  40940d:	je     409430 <isspace@plt+0x5b20>
  40940f:	cmp    DWORD PTR [r14],0x2
  409413:	jne    409430 <isspace@plt+0x5b20>
  409415:	cmp    BYTE PTR [rsp+0xf],0x0
  40941a:	je     40951d <isspace@plt+0x5c0d>
  409420:	call   41f620 <isspace@plt+0x1bd10>
  409425:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40942f:	nop
  409430:	test   BYTE PTR [r14],0x1
  409434:	je     409540 <isspace@plt+0x5c30>
  40943a:	mov    eax,DWORD PTR [r14+0x40]
  40943e:	test   eax,eax
  409440:	jle    409474 <isspace@plt+0x5b64>
  409442:	mov    rcx,QWORD PTR [r14+0x30]
  409446:	xor    ebp,ebp
  409448:	nop    DWORD PTR [rax+rax*1+0x0]
  409450:	mov    rdi,QWORD PTR [r15]
  409453:	mov    rsi,QWORD PTR [r14+0x18]
  409457:	mov    rdx,QWORD PTR [r14+0x28]
  40945b:	call   40f140 <isspace@plt+0xb830>
  409460:	mov    rcx,QWORD PTR [r14+0x30]
  409464:	add    r12,rcx
  409467:	add    ebp,0x1
  40946a:	mov    eax,DWORD PTR [r14+0x40]
  40946e:	cmp    ebp,eax
  409470:	jl     409450 <isspace@plt+0x5b40>
  409472:	jmp    409478 <isspace@plt+0x5b68>
  409474:	mov    rcx,QWORD PTR [r14+0x30]
  409478:	mov    rdi,QWORD PTR [r14+0x18]
  40947c:	movsxd rsi,eax
  40947f:	imul   rsi,rcx
  409483:	add    rsi,rdi
  409486:	call   417690 <isspace@plt+0x13d80>
  40948b:	mov    rbp,rax
  40948e:	mov    QWORD PTR [rsp+0x28],rax
  409493:	mov    QWORD PTR [rsp+0x30],rdx
  409498:	mov    r13,QWORD PTR [r14+0x10]
  40949c:	test   r13,r13
  40949f:	je     4094c0 <isspace@plt+0x5bb0>
  4094a1:	cmp    BYTE PTR [rsp+0xf],0x0
  4094a6:	je     4094fb <isspace@plt+0x5beb>
  4094a8:	mov    rdi,r13
  4094ab:	lea    rsi,[rsp+0x28]
  4094b0:	call   420010 <isspace@plt+0x1c700>
  4094b5:	mov    rdi,QWORD PTR [r14+0x10]
  4094b9:	mov    esi,0x1
  4094be:	jmp    4094f4 <isspace@plt+0x5be4>
  4094c0:	cmp    BYTE PTR [rsp+0xf],0x0
  4094c5:	je     409540 <isspace@plt+0x5c30>
  4094c7:	mov    rax,QWORD PTR [r14+0x8]
  4094cb:	mov    rdi,QWORD PTR [rax+0x18]
  4094cf:	mov    rsi,rbp
  4094d2:	call   41bac0 <isspace@plt+0x181b0>
  4094d7:	test   rax,rax
  4094da:	je     409540 <isspace@plt+0x5c30>
  4094dc:	mov    rbp,rax
  4094df:	mov    rdi,rax
  4094e2:	lea    rsi,[rsp+0x28]
  4094e7:	call   420010 <isspace@plt+0x1c700>
  4094ec:	mov    esi,0x1
  4094f1:	mov    rdi,rbp
  4094f4:	call   41fcf0 <isspace@plt+0x1c3e0>
  4094f9:	jmp    409540 <isspace@plt+0x5c30>
  4094fb:	mov    rbx,rdx
  4094fe:	mov    rdi,QWORD PTR [r14+0x28]
  409502:	mov    rdx,QWORD PTR [r14+0x30]
  409506:	mov    esi,0xa
  40950b:	call   403410 <memchr@plt>
  409510:	mov    rdi,r13
  409513:	test   rax,rax
  409516:	je     409532 <isspace@plt+0x5c22>
  409518:	mov    rsi,rbp
  40951b:	jmp    409535 <isspace@plt+0x5c25>
  40951d:	mov    rsi,QWORD PTR [rbp+0x0]
  409521:	call   41ad90 <isspace@plt+0x17480>
  409526:	test   BYTE PTR [r14],0x1
  40952a:	jne    40943a <isspace@plt+0x5b2a>
  409530:	jmp    409540 <isspace@plt+0x5c30>
  409532:	mov    rsi,rbx
  409535:	call   41ad90 <isspace@plt+0x17480>
  40953a:	nop    WORD PTR [rax+rax*1+0x0]
  409540:	mov    r14,QWORD PTR [r14+0x38]
  409544:	test   r14,r14
  409547:	jne    4093d0 <isspace@plt+0x5ac0>
  40954d:	mov    rbp,QWORD PTR [r15+0x440]
  409554:	test   rbp,rbp
  409557:	mov    r12,QWORD PTR [rsp+0x20]
  40955c:	je     40957d <isspace@plt+0x5c6d>
  40955e:	xchg   ax,ax
  409560:	mov    rdi,QWORD PTR [rbp+0x28]
  409564:	mov    rbx,QWORD PTR [rbp+0x38]
  409568:	call   4030d0 <free@plt>
  40956d:	mov    rdi,rbp
  409570:	call   4030d0 <free@plt>
  409575:	mov    rbp,rbx
  409578:	test   rbx,rbx
  40957b:	jne    409560 <isspace@plt+0x5c50>
  40957d:	mov    rdi,r12
  409580:	mov    rsi,r15
  409583:	call   423520 <isspace@plt+0x1fc10>
  409588:	jmp    40959b <isspace@plt+0x5c8b>
  40958a:	nop    WORD PTR [rax+rax*1+0x0]
  409590:	cmp    BYTE PTR [r15+0x18],0x0
  409595:	je     409370 <isspace@plt+0x5a60>
  40959b:	mov    r15,QWORD PTR [r15+0x458]
  4095a2:	test   r15,r15
  4095a5:	jne    409590 <isspace@plt+0x5c80>
  4095a7:	mov    rbx,QWORD PTR [r12+0x28]
  4095ac:	test   rbx,rbx
  4095af:	je     4095d5 <isspace@plt+0x5cc5>
  4095b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4095bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4095c0:	mov    rdi,QWORD PTR [rbx+0x18]
  4095c4:	call   4204b0 <isspace@plt+0x1cba0>
  4095c9:	mov    rbx,QWORD PTR [rbx+0x2e0]
  4095d0:	test   rbx,rbx
  4095d3:	jne    4095c0 <isspace@plt+0x5cb0>
  4095d5:	mov    rax,QWORD PTR [r12+0x30]
  4095da:	test   rax,rax
  4095dd:	mov    r14,QWORD PTR [rsp+0x18]
  4095e2:	je     409675 <isspace@plt+0x5d65>
  4095e8:	mov    rbx,QWORD PTR [rsp+0x10]
  4095ed:	cmp    rbx,0xffffffffffffffff
  4095f1:	je     409612 <isspace@plt+0x5d02>
  4095f3:	mov    rdi,QWORD PTR [rax+0x18]
  4095f7:	call   41f6d0 <isspace@plt+0x1bdc0>
  4095fc:	test   rax,rax
  4095ff:	je     409612 <isspace@plt+0x5d02>
  409601:	mov    rax,QWORD PTR [r12+0x30]
  409606:	mov    rdi,QWORD PTR [rax+0x18]
  40960a:	mov    rsi,rbx
  40960d:	call   41ad60 <isspace@plt+0x17450>
  409612:	mov    rax,QWORD PTR [r12+0x30]
  409617:	mov    rdi,QWORD PTR [rax+0x18]
  40961b:	call   41f710 <isspace@plt+0x1be00>
  409620:	mov    rdi,rax
  409623:	call   41f5c0 <isspace@plt+0x1bcb0>
  409628:	mov    rdi,r12
  40962b:	call   427000 <isspace@plt+0x236f0>
  409630:	mov    rax,QWORD PTR [r12+0x30]
  409635:	mov    rdi,QWORD PTR [rax+0x18]
  409639:	call   41f710 <isspace@plt+0x1be00>
  40963e:	xor    ebx,ebx
  409640:	test   rax,rax
  409643:	je     40966b <isspace@plt+0x5d5b>
  409645:	mov    rbp,rax
  409648:	mov    rdi,rbp
  40964b:	call   41fd80 <isspace@plt+0x1c470>
  409650:	test   al,al
  409652:	jne    409666 <isspace@plt+0x5d56>
  409654:	mov    rdi,rbp
  409657:	call   41f7f0 <isspace@plt+0x1bee0>
  40965c:	mov    rbp,rax
  40965f:	test   rax,rax
  409662:	jne    409648 <isspace@plt+0x5d38>
  409664:	jmp    40966b <isspace@plt+0x5d5b>
  409666:	mov    ebx,0x2
  40966b:	mov    rdi,r12
  40966e:	mov    esi,ebx
  409670:	call   427780 <isspace@plt+0x23e70>
  409675:	mov    rdi,r14
  409678:	call   4096b0 <isspace@plt+0x5da0>
  40967d:	mov    eax,DWORD PTR [rsp+0x4c]
  409681:	mov    rcx,QWORD PTR fs:0x28
  40968a:	cmp    rcx,QWORD PTR [rsp+0x50]
  40968f:	jne    4096a0 <isspace@plt+0x5d90>
  409691:	add    rsp,0x58
  409695:	pop    rbx
  409696:	pop    r12
  409698:	pop    r13
  40969a:	pop    r14
  40969c:	pop    r15
  40969e:	pop    rbp
  40969f:	ret    
  4096a0:	call   403280 <__stack_chk_fail@plt>
  4096a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4096af:	nop
  4096b0:	push   r14
  4096b2:	push   rbx
  4096b3:	push   rax
  4096b4:	mov    rax,QWORD PTR fs:0x28
  4096bd:	mov    QWORD PTR [rsp],rax
  4096c1:	test   rdi,rdi
  4096c4:	je     40972b <isspace@plt+0x5e1b>
  4096c6:	mov    r14,rdi
  4096c9:	mov    rdi,QWORD PTR [rdi+0x70]
  4096cd:	test   rdi,rdi
  4096d0:	je     4096f1 <isspace@plt+0x5de1>
  4096d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4096dc:	nop    DWORD PTR [rax+0x0]
  4096e0:	mov    rbx,QWORD PTR [rdi+0x78]
  4096e4:	call   4096b0 <isspace@plt+0x5da0>
  4096e9:	mov    rdi,rbx
  4096ec:	test   rbx,rbx
  4096ef:	jne    4096e0 <isspace@plt+0x5dd0>
  4096f1:	mov    rdi,QWORD PTR [r14]
  4096f4:	test   rdi,rdi
  4096f7:	je     409711 <isspace@plt+0x5e01>
  4096f9:	lea    rbx,[r14+0x8]
  4096fd:	nop    DWORD PTR [rax]
  409700:	call   4030d0 <free@plt>
  409705:	mov    rdi,QWORD PTR [rbx]
  409708:	add    rbx,0x8
  40970c:	test   rdi,rdi
  40970f:	jne    409700 <isspace@plt+0x5df0>
  409711:	mov    rdi,QWORD PTR [r14+0x40]
  409715:	call   40eab0 <isspace@plt+0xb1a0>
  40971a:	mov    rdi,QWORD PTR [r14+0x48]
  40971e:	call   42b600 <isspace@plt+0x27cf0>
  409723:	mov    rdi,r14
  409726:	call   4030d0 <free@plt>
  40972b:	mov    rax,QWORD PTR fs:0x28
  409734:	cmp    rax,QWORD PTR [rsp]
  409738:	jne    409742 <isspace@plt+0x5e32>
  40973a:	add    rsp,0x8
  40973e:	pop    rbx
  40973f:	pop    r14
  409741:	ret    
  409742:	call   403280 <__stack_chk_fail@plt>
  409747:	nop    WORD PTR [rax+rax*1+0x0]
  409750:	push   rbp
  409751:	push   r15
  409753:	push   r14
  409755:	push   r13
  409757:	push   r12
  409759:	push   rbx
  40975a:	sub    rsp,0x18
  40975e:	mov    r15,r8
  409761:	mov    rbp,rcx
  409764:	mov    rbx,rdx
  409767:	mov    r13,rsi
  40976a:	mov    r12,rdi
  40976d:	mov    rax,QWORD PTR fs:0x28
  409776:	mov    QWORD PTR [rsp+0x10],rax
  40977b:	test   rsi,rsi
  40977e:	je     40979f <isspace@plt+0x5e8f>
  409780:	mov    rdi,QWORD PTR [rbx+0x40]
  409784:	test   rdi,rdi
  409787:	je     40979f <isspace@plt+0x5e8f>
  409789:	mov    rsi,QWORD PTR [r13+0x10]
  40978d:	mov    rdx,rbp
  409790:	mov    rcx,r15
  409793:	call   40eda0 <isspace@plt+0xb490>
  409798:	mov    QWORD PTR [r15],rax
  40979b:	mov    QWORD PTR [r15+0x8],rdx
  40979f:	add    DWORD PTR [rbx+0x64],0x1
  4097a3:	mov    rax,QWORD PTR [rbx]
  4097a6:	cmp    BYTE PTR [rax],0x7b
  4097a9:	jne    4097f2 <isspace@plt+0x5ee2>
  4097ab:	mov    QWORD PTR [rsp+0x8],rbp
  4097b0:	mov    rbp,QWORD PTR [rbx+0x70]
  4097b4:	mov    bl,0x1
  4097b6:	test   rbp,rbp
  4097b9:	jne    4097c9 <isspace@plt+0x5eb9>
  4097bb:	jmp    4097e6 <isspace@plt+0x5ed6>
  4097bd:	nop    DWORD PTR [rax]
  4097c0:	mov    rbp,QWORD PTR [rbp+0x78]
  4097c4:	test   rbp,rbp
  4097c7:	je     4097e6 <isspace@plt+0x5ed6>
  4097c9:	mov    r14d,ebx
  4097cc:	xor    ecx,ecx
  4097ce:	mov    rdi,r12
  4097d1:	mov    rsi,r13
  4097d4:	mov    rdx,rbp
  4097d7:	mov    r8,r15
  4097da:	call   409750 <isspace@plt+0x5e40>
  4097df:	mov    ebx,eax
  4097e1:	and    bl,r14b
  4097e4:	jne    4097c0 <isspace@plt+0x5eb0>
  4097e6:	mov    rdi,QWORD PTR [rsp+0x8]
  4097eb:	call   41f620 <isspace@plt+0x1bd10>
  4097f0:	jmp    40980d <isspace@plt+0x5efd>
  4097f2:	mov    rax,QWORD PTR [rbx+0x50]
  4097f6:	mov    rdi,r12
  4097f9:	mov    rsi,r13
  4097fc:	mov    rdx,rbx
  4097ff:	mov    rcx,rbx
  409802:	mov    r8,rbp
  409805:	mov    r9,r15
  409808:	call   QWORD PTR [rax+0x20]
  40980b:	mov    ebx,eax
  40980d:	mov    rax,QWORD PTR fs:0x28
  409816:	cmp    rax,QWORD PTR [rsp+0x10]
  40981b:	jne    409831 <isspace@plt+0x5f21>
  40981d:	and    bl,0x1
  409820:	mov    eax,ebx
  409822:	add    rsp,0x18
  409826:	pop    rbx
  409827:	pop    r12
  409829:	pop    r13
  40982b:	pop    r14
  40982d:	pop    r15
  40982f:	pop    rbp
  409830:	ret    
  409831:	call   403280 <__stack_chk_fail@plt>
  409836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409840:	push   rbp
  409841:	push   r15
  409843:	push   r14
  409845:	push   r13
  409847:	push   r12
  409849:	push   rbx
  40984a:	sub    rsp,0x18
  40984e:	mov    rbx,rdx
  409851:	mov    r14,rsi
  409854:	mov    r13,rdi
  409857:	mov    rax,QWORD PTR fs:0x28
  409860:	mov    QWORD PTR [rsp+0x10],rax
  409865:	call   404230 <isspace@plt+0x920>
  40986a:	cmp    BYTE PTR [rbx],0x0
  40986d:	je     409977 <isspace@plt+0x6067>
  409873:	lea    r15,[rip+0x26b11]        # 43038b <isspace@plt+0x2ca7b>
  40987a:	mov    rdi,rbx
  40987d:	mov    rsi,r15
  409880:	call   403400 <strcspn@plt>
  409885:	mov    rbp,rax
  409888:	nop    DWORD PTR [rax+rax*1+0x0]
  409890:	mov    rdi,r13
  409893:	mov    rsi,rbx
  409896:	mov    rdx,rbp
  409899:	call   404460 <isspace@plt+0xb50>
  40989e:	lea    rax,[rbx+rbp*1]
  4098a2:	movsx  ecx,BYTE PTR [rbx+rbp*1]
  4098a6:	cmp    ecx,0x26
  4098a9:	je     4098f0 <isspace@plt+0x5fe0>
  4098ab:	cmp    ecx,0x5c
  4098ae:	je     4098c0 <isspace@plt+0x5fb0>
  4098b0:	test   ecx,ecx
  4098b2:	jne    409933 <isspace@plt+0x6023>
  4098b4:	jmp    409977 <isspace@plt+0x6067>
  4098b9:	nop    DWORD PTR [rax+0x0]
  4098c0:	lea    r12,[rax+0x1]
  4098c4:	movsx  ecx,BYTE PTR [rax+0x1]
  4098c8:	mov    edx,ecx
  4098ca:	add    dl,0xcf
  4098cd:	cmp    dl,0x9
  4098d0:	jae    409926 <isspace@plt+0x6016>
  4098d2:	add    ecx,0xffffffd2
  4098d5:	mov    QWORD PTR [rsp+0x8],0x0
  4098de:	cmp    ecx,0x30
  4098e1:	jne    409901 <isspace@plt+0x5ff1>
  4098e3:	jmp    40993f <isspace@plt+0x602f>
  4098e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4098ef:	nop
  4098f0:	mov    QWORD PTR [rsp+0x8],0x0
  4098f9:	mov    ecx,0x2
  4098fe:	mov    r12,rax
  409901:	mov    eax,ecx
  409903:	lea    rax,[rax+rax*4]
  409907:	lea    rsi,[r14+rax*8]
  40990b:	add    rsi,0x40
  40990f:	mov    rdi,r14
  409912:	lea    rdx,[rsp+0x8]
  409917:	call   42aa90 <isspace@plt+0x27180>
  40991c:	mov    rsi,rax
  40991f:	mov    rdx,QWORD PTR [rsp+0x8]
  409924:	jmp    409950 <isspace@plt+0x6040>
  409926:	cmp    cl,0x5c
  409929:	je     409930 <isspace@plt+0x6020>
  40992b:	cmp    cl,0x26
  40992e:	jne    409933 <isspace@plt+0x6023>
  409930:	mov    rax,r12
  409933:	mov    QWORD PTR [rsp+0x8],0x0
  40993c:	mov    r12,rax
  40993f:	mov    QWORD PTR [rsp+0x8],0x1
  409948:	mov    edx,0x1
  40994d:	mov    rsi,r12
  409950:	mov    rdi,r13
  409953:	call   404460 <isspace@plt+0xb50>
  409958:	lea    rbx,[r12+0x1]
  40995d:	mov    rdi,rbx
  409960:	mov    rsi,r15
  409963:	call   403400 <strcspn@plt>
  409968:	mov    rbp,rax
  40996b:	cmp    BYTE PTR [r12+0x1],0x0
  409971:	jne    409890 <isspace@plt+0x5f80>
  409977:	mov    rax,QWORD PTR fs:0x28
  409980:	cmp    rax,QWORD PTR [rsp+0x10]
  409985:	jne    409999 <isspace@plt+0x6089>
  409987:	mov    rax,r13
  40998a:	add    rsp,0x18
  40998e:	pop    rbx
  40998f:	pop    r12
  409991:	pop    r13
  409993:	pop    r14
  409995:	pop    r15
  409997:	pop    rbp
  409998:	ret    
  409999:	call   403280 <__stack_chk_fail@plt>
  40999e:	xchg   ax,ax
  4099a0:	push   rbp
  4099a1:	push   r15
  4099a3:	push   r14
  4099a5:	push   rbx
  4099a6:	push   rax
  4099a7:	mov    rax,QWORD PTR fs:0x28
  4099b0:	mov    QWORD PTR [rsp],rax
  4099b4:	mov    r14b,0x1
  4099b7:	test   rsi,rsi
  4099ba:	je     409a1c <isspace@plt+0x610c>
  4099bc:	mov    rbp,rsi
  4099bf:	mov    rbx,rdi
  4099c2:	mov    rdi,QWORD PTR [rdi+0x810]
  4099c9:	call   408590 <isspace@plt+0x4c80>
  4099ce:	test   rax,rax
  4099d1:	je     409a19 <isspace@plt+0x6109>
  4099d3:	mov    r15,rax
  4099d6:	mov    rdi,QWORD PTR [rbx+0x808]
  4099dd:	mov    rsi,rbp
  4099e0:	call   408b50 <isspace@plt+0x5240>
  4099e5:	test   rax,rax
  4099e8:	je     409a19 <isspace@plt+0x6109>
  4099ea:	mov    rdi,QWORD PTR [rbx+0x810]
  4099f1:	mov    rsi,rbp
  4099f4:	call   408b50 <isspace@plt+0x5240>
  4099f9:	test   rax,rax
  4099fc:	je     409a19 <isspace@plt+0x6109>
  4099fe:	mov    rdi,QWORD PTR [r15]
  409a01:	call   4030d0 <free@plt>
  409a06:	mov    rdi,QWORD PTR [r15+0x8]
  409a0a:	call   4030d0 <free@plt>
  409a0f:	mov    rdi,r15
  409a12:	call   4030d0 <free@plt>
  409a17:	jmp    409a1c <isspace@plt+0x610c>
  409a19:	xor    r14d,r14d
  409a1c:	mov    rax,QWORD PTR fs:0x28
  409a25:	cmp    rax,QWORD PTR [rsp]
  409a29:	jne    409a39 <isspace@plt+0x6129>
  409a2b:	mov    eax,r14d
  409a2e:	add    rsp,0x8
  409a32:	pop    rbx
  409a33:	pop    r14
  409a35:	pop    r15
  409a37:	pop    rbp
  409a38:	ret    
  409a39:	call   403280 <__stack_chk_fail@plt>
  409a3e:	xchg   ax,ax
  409a40:	push   r14
  409a42:	push   rbx
  409a43:	push   rax
  409a44:	mov    rax,QWORD PTR fs:0x28
  409a4d:	mov    QWORD PTR [rsp],rax
  409a51:	test   rdi,rdi
  409a54:	je     409b92 <isspace@plt+0x6282>
  409a5a:	mov    r14,rdi
  409a5d:	lea    rax,[rip+0x36fcc]        # 440a30 <isspace@plt+0x3d120>
  409a64:	cmp    rdi,rax
  409a67:	je     409b92 <isspace@plt+0x6282>
  409a6d:	lea    rax,[rip+0x36ff4]        # 440a68 <isspace@plt+0x3d158>
  409a74:	cmp    r14,rax
  409a77:	je     409b92 <isspace@plt+0x6282>
  409a7d:	lea    rax,[rip+0x3701c]        # 440aa0 <isspace@plt+0x3d190>
  409a84:	cmp    r14,rax
  409a87:	je     409b92 <isspace@plt+0x6282>
  409a8d:	lea    rax,[rip+0x37044]        # 440ad8 <isspace@plt+0x3d1c8>
  409a94:	cmp    r14,rax
  409a97:	je     409b92 <isspace@plt+0x6282>
  409a9d:	lea    rax,[rip+0x3706c]        # 440b10 <isspace@plt+0x3d200>
  409aa4:	cmp    r14,rax
  409aa7:	je     409b92 <isspace@plt+0x6282>
  409aad:	lea    rax,[rip+0x37094]        # 440b48 <isspace@plt+0x3d238>
  409ab4:	cmp    r14,rax
  409ab7:	je     409b92 <isspace@plt+0x6282>
  409abd:	lea    rax,[rip+0x370bc]        # 440b80 <isspace@plt+0x3d270>
  409ac4:	cmp    r14,rax
  409ac7:	je     409b92 <isspace@plt+0x6282>
  409acd:	lea    rax,[rip+0x370e4]        # 440bb8 <isspace@plt+0x3d2a8>
  409ad4:	cmp    r14,rax
  409ad7:	je     409b92 <isspace@plt+0x6282>
  409add:	lea    rax,[rip+0x3710c]        # 440bf0 <isspace@plt+0x3d2e0>
  409ae4:	cmp    r14,rax
  409ae7:	je     409b92 <isspace@plt+0x6282>
  409aed:	lea    rax,[rip+0x37134]        # 440c28 <isspace@plt+0x3d318>
  409af4:	cmp    r14,rax
  409af7:	je     409b92 <isspace@plt+0x6282>
  409afd:	lea    rax,[rip+0x3715c]        # 440c60 <isspace@plt+0x3d350>
  409b04:	cmp    r14,rax
  409b07:	je     409b92 <isspace@plt+0x6282>
  409b0d:	lea    rax,[rip+0x37184]        # 440c98 <isspace@plt+0x3d388>
  409b14:	cmp    r14,rax
  409b17:	je     409b92 <isspace@plt+0x6282>
  409b19:	lea    rax,[rip+0x371b0]        # 440cd0 <isspace@plt+0x3d3c0>
  409b20:	cmp    r14,rax
  409b23:	je     409b92 <isspace@plt+0x6282>
  409b25:	lea    rax,[rip+0x371dc]        # 440d08 <isspace@plt+0x3d3f8>
  409b2c:	cmp    r14,rax
  409b2f:	je     409b92 <isspace@plt+0x6282>
  409b31:	lea    rax,[rip+0x37208]        # 440d40 <isspace@plt+0x3d430>
  409b38:	cmp    r14,rax
  409b3b:	je     409b92 <isspace@plt+0x6282>
  409b3d:	lea    rax,[rip+0x37234]        # 440d78 <isspace@plt+0x3d468>
  409b44:	cmp    r14,rax
  409b47:	je     409b92 <isspace@plt+0x6282>
  409b49:	lea    rax,[rip+0x37260]        # 440db0 <isspace@plt+0x3d4a0>
  409b50:	cmp    r14,rax
  409b53:	je     409b92 <isspace@plt+0x6282>
  409b55:	lea    rax,[rip+0x3728c]        # 440de8 <isspace@plt+0x3d4d8>
  409b5c:	cmp    r14,rax
  409b5f:	je     409b92 <isspace@plt+0x6282>
  409b61:	mov    rdi,QWORD PTR [r14]
  409b64:	test   rdi,rdi
  409b67:	je     409b81 <isspace@plt+0x6271>
  409b69:	lea    rbx,[r14+0x8]
  409b6d:	nop    DWORD PTR [rax]
  409b70:	call   4030d0 <free@plt>
  409b75:	mov    rdi,QWORD PTR [rbx]
  409b78:	add    rbx,0x8
  409b7c:	test   rdi,rdi
  409b7f:	jne    409b70 <isspace@plt+0x6260>
  409b81:	mov    rdi,QWORD PTR [r14+0x20]
  409b85:	call   4030d0 <free@plt>
  409b8a:	mov    rdi,r14
  409b8d:	call   4030d0 <free@plt>
  409b92:	mov    rax,QWORD PTR fs:0x28
  409b9b:	cmp    rax,QWORD PTR [rsp]
  409b9f:	jne    409ba9 <isspace@plt+0x6299>
  409ba1:	add    rsp,0x8
  409ba5:	pop    rbx
  409ba6:	pop    r14
  409ba8:	ret    
  409ba9:	call   403280 <__stack_chk_fail@plt>
  409bae:	xchg   ax,ax
  409bb0:	push   r15
  409bb2:	push   r14
  409bb4:	push   rbx
  409bb5:	sub    rsp,0x10
  409bb9:	mov    r15,rdi
  409bbc:	mov    rax,QWORD PTR fs:0x28
  409bc5:	mov    QWORD PTR [rsp+0x8],rax
  409bca:	mov    rdi,QWORD PTR [rdi+0x818]
  409bd1:	call   408590 <isspace@plt+0x4c80>
  409bd6:	test   rax,rax
  409bd9:	je     409c19 <isspace@plt+0x6309>
  409bdb:	mov    r14,rax
  409bde:	mov    rsi,QWORD PTR [rax]
  409be1:	test   rsi,rsi
  409be4:	je     409c0d <isspace@plt+0x62fd>
  409be6:	mov    rbx,r14
  409be9:	add    rbx,0x8
  409bed:	nop    DWORD PTR [rax]
  409bf0:	mov    rdi,QWORD PTR [r15+0x818]
  409bf7:	call   408b50 <isspace@plt+0x5240>
  409bfc:	test   rax,rax
  409bff:	je     409c19 <isspace@plt+0x6309>
  409c01:	mov    rsi,QWORD PTR [rbx]
  409c04:	add    rbx,0x8
  409c08:	test   rsi,rsi
  409c0b:	jne    409bf0 <isspace@plt+0x62e0>
  409c0d:	mov    rdi,r14
  409c10:	call   409a40 <isspace@plt+0x6130>
  409c15:	mov    al,0x1
  409c17:	jmp    409c1b <isspace@plt+0x630b>
  409c19:	xor    eax,eax
  409c1b:	mov    rcx,QWORD PTR fs:0x28
  409c24:	cmp    rcx,QWORD PTR [rsp+0x8]
  409c29:	jne    409c35 <isspace@plt+0x6325>
  409c2b:	add    rsp,0x10
  409c2f:	pop    rbx
  409c30:	pop    r14
  409c32:	pop    r15
  409c34:	ret    
  409c35:	call   403280 <__stack_chk_fail@plt>
  409c3a:	nop    WORD PTR [rax+rax*1+0x0]
  409c40:	push   rbp
  409c41:	push   r15
  409c43:	push   r14
  409c45:	push   r13
  409c47:	push   r12
  409c49:	push   rbx
  409c4a:	sub    rsp,0x48
  409c4e:	mov    rbp,rdx
  409c51:	mov    rdx,QWORD PTR fs:0x28
  409c5a:	mov    QWORD PTR [rsp+0x40],rdx
  409c5f:	test   rsi,rsi
  409c62:	je     409d9e <isspace@plt+0x648e>
  409c68:	mov    r15,r9
  409c6b:	mov    r14,r8
  409c6e:	mov    r13,rsi
  409c71:	mov    rax,rdi
  409c74:	mov    rdx,QWORD PTR [rcx+0x8]
  409c78:	lea    rbx,[rsp+0x18]
  409c7d:	mov    rdi,rbx
  409c80:	mov    rsi,rax
  409c83:	call   409840 <isspace@plt+0x5f30>
  409c88:	mov    rdi,rbx
  409c8b:	call   404da0 <isspace@plt+0x1490>
  409c90:	mov    QWORD PTR [rsp+0x10],rax
  409c95:	mov    rdi,rbx
  409c98:	call   404ec0 <isspace@plt+0x15b0>
  409c9d:	mov    r12,rax
  409ca0:	mov    rdi,QWORD PTR [r15+0x8]
  409ca4:	mov    eax,DWORD PTR [rbp+0x58]
  409ca7:	mov    DWORD PTR [rsp+0xc],eax
  409cab:	mov    rsi,rdi
  409cae:	call   417690 <isspace@plt+0x13d80>
  409cb3:	mov    QWORD PTR [rsp+0x30],rax
  409cb8:	mov    QWORD PTR [rsp+0x38],rdx
  409cbd:	mov    rbp,QWORD PTR [r13+0x10]
  409cc1:	lea    rdi,[rsp+0x30]
  409cc6:	call   417400 <isspace@plt+0x13af0>
  409ccb:	test   al,al
  409ccd:	je     409d96 <isspace@plt+0x6486>
  409cd3:	mov    r15,QWORD PTR [rbp+0x448]
  409cda:	test   r15,r15
  409cdd:	je     409cea <isspace@plt+0x63da>
  409cdf:	mov    rax,QWORD PTR [r15+0x20]
  409ce3:	cmp    rax,QWORD PTR [rsp+0x30]
  409ce8:	jbe    409cf3 <isspace@plt+0x63e3>
  409cea:	lea    r15,[rbp+0x440]
  409cf1:	jmp    409cf7 <isspace@plt+0x63e7>
  409cf3:	add    r15,0x38
  409cf7:	mov    rbx,QWORD PTR [r15]
  409cfa:	test   rbx,rbx
  409cfd:	je     409d41 <isspace@plt+0x6431>
  409cff:	mov    rax,QWORD PTR [rsp+0x30]
  409d04:	cmp    QWORD PTR [rbx+0x20],rax
  409d08:	ja     409d26 <isspace@plt+0x6416>
  409d0a:	nop    WORD PTR [rax+rax*1+0x0]
  409d10:	mov    r15,rbx
  409d13:	mov    rbx,QWORD PTR [rbx+0x38]
  409d17:	test   rbx,rbx
  409d1a:	je     409d3d <isspace@plt+0x642d>
  409d1c:	cmp    QWORD PTR [rbx+0x20],rax
  409d20:	jbe    409d10 <isspace@plt+0x6400>
  409d22:	add    r15,0x38
  409d26:	mov    rax,QWORD PTR [rbx+0x18]
  409d2a:	cmp    rax,QWORD PTR [rsp+0x38]
  409d2f:	jae    409d43 <isspace@plt+0x6433>
  409d31:	mov    DWORD PTR [rbp+0x450],0xc
  409d3b:	jmp    409d96 <isspace@plt+0x6486>
  409d3d:	add    r15,0x38
  409d41:	xor    ebx,ebx
  409d43:	mov    edi,0x1
  409d48:	mov    esi,0x48
  409d4d:	call   403470 <calloc@plt>
  409d52:	test   rax,rax
  409d55:	je     409d96 <isspace@plt+0x6486>
  409d57:	mov    DWORD PTR [rax],0x1
  409d5d:	vmovups xmm0,XMMWORD PTR [rsp+0x30]
  409d63:	vmovups XMMWORD PTR [rax+0x18],xmm0
  409d68:	mov    QWORD PTR [rax+0x10],r14
  409d6c:	mov    QWORD PTR [rax+0x8],r13
  409d70:	mov    QWORD PTR [rax+0x38],rbx
  409d74:	mov    QWORD PTR [r15],rax
  409d77:	mov    QWORD PTR [rbp+0x448],rax
  409d7e:	mov    QWORD PTR [rax+0x28],r12
  409d82:	mov    rcx,QWORD PTR [rsp+0x10]
  409d87:	mov    QWORD PTR [rax+0x30],rcx
  409d8b:	mov    ecx,DWORD PTR [rsp+0xc]
  409d8f:	mov    DWORD PTR [rax+0x40],ecx
  409d92:	mov    al,0x1
  409d94:	jmp    409da0 <isspace@plt+0x6490>
  409d96:	mov    rdi,r12
  409d99:	call   4030d0 <free@plt>
  409d9e:	xor    eax,eax
  409da0:	mov    rcx,QWORD PTR fs:0x28
  409da9:	cmp    rcx,QWORD PTR [rsp+0x40]
  409dae:	jne    409dbf <isspace@plt+0x64af>
  409db0:	add    rsp,0x48
  409db4:	pop    rbx
  409db5:	pop    r12
  409db7:	pop    r13
  409db9:	pop    r14
  409dbb:	pop    r15
  409dbd:	pop    rbp
  409dbe:	ret    
  409dbf:	call   403280 <__stack_chk_fail@plt>
  409dc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409dce:	xchg   ax,ax
  409dd0:	push   rbp
  409dd1:	push   r15
  409dd3:	push   r14
  409dd5:	push   r13
  409dd7:	push   r12
  409dd9:	push   rbx
  409dda:	sub    rsp,0x38
  409dde:	mov    rbp,rdx
  409de1:	mov    rdx,QWORD PTR fs:0x28
  409dea:	mov    QWORD PTR [rsp+0x30],rdx
  409def:	test   rsi,rsi
  409df2:	je     409f21 <isspace@plt+0x6611>
  409df8:	mov    r15,r9
  409dfb:	mov    r12,rsi
  409dfe:	mov    rax,rdi
  409e01:	mov    QWORD PTR [rsp+0x10],r8
  409e06:	mov    rdx,QWORD PTR [rcx+0x8]
  409e0a:	lea    rbx,[rsp+0x18]
  409e0f:	mov    rdi,rbx
  409e12:	mov    rsi,rax
  409e15:	call   409840 <isspace@plt+0x5f30>
  409e1a:	mov    rdi,rbx
  409e1d:	call   404da0 <isspace@plt+0x1490>
  409e22:	mov    QWORD PTR [rsp+0x8],rax
  409e27:	mov    rdi,rbx
  409e2a:	call   404ec0 <isspace@plt+0x15b0>
  409e2f:	mov    r13,rax
  409e32:	mov    eax,DWORD PTR [rbp+0x58]
  409e35:	mov    DWORD PTR [rsp+0x4],eax
  409e39:	mov    rbp,QWORD PTR [r12+0x10]
  409e3e:	mov    rdi,r15
  409e41:	call   417400 <isspace@plt+0x13af0>
  409e46:	test   al,al
  409e48:	je     409f19 <isspace@plt+0x6609>
  409e4e:	mov    r14,QWORD PTR [rbp+0x448]
  409e55:	test   r14,r14
  409e58:	je     409e63 <isspace@plt+0x6553>
  409e5a:	mov    rax,QWORD PTR [r14+0x20]
  409e5e:	cmp    rax,QWORD PTR [r15]
  409e61:	jbe    409e6c <isspace@plt+0x655c>
  409e63:	lea    r14,[rbp+0x440]
  409e6a:	jmp    409e70 <isspace@plt+0x6560>
  409e6c:	add    r14,0x38
  409e70:	mov    rbx,QWORD PTR [r14]
  409e73:	test   rbx,rbx
  409e76:	je     409ec0 <isspace@plt+0x65b0>
  409e78:	mov    rax,QWORD PTR [r15]
  409e7b:	cmp    QWORD PTR [rbx+0x20],rax
  409e7f:	ja     409ea6 <isspace@plt+0x6596>
  409e81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  409e90:	mov    r14,rbx
  409e93:	mov    rbx,QWORD PTR [rbx+0x38]
  409e97:	test   rbx,rbx
  409e9a:	je     409ebc <isspace@plt+0x65ac>
  409e9c:	cmp    QWORD PTR [rbx+0x20],rax
  409ea0:	jbe    409e90 <isspace@plt+0x6580>
  409ea2:	add    r14,0x38
  409ea6:	mov    rax,QWORD PTR [rbx+0x18]
  409eaa:	cmp    rax,QWORD PTR [r15+0x8]
  409eae:	jae    409ec2 <isspace@plt+0x65b2>
  409eb0:	mov    DWORD PTR [rbp+0x450],0xc
  409eba:	jmp    409f19 <isspace@plt+0x6609>
  409ebc:	add    r14,0x38
  409ec0:	xor    ebx,ebx
  409ec2:	mov    edi,0x1
  409ec7:	mov    esi,0x48
  409ecc:	call   403470 <calloc@plt>
  409ed1:	test   rax,rax
  409ed4:	je     409f19 <isspace@plt+0x6609>
  409ed6:	mov    DWORD PTR [rax],0x3
  409edc:	vmovups xmm0,XMMWORD PTR [r15]
  409ee1:	vmovups XMMWORD PTR [rax+0x18],xmm0
  409ee6:	mov    rcx,QWORD PTR [rsp+0x10]
  409eeb:	mov    QWORD PTR [rax+0x10],rcx
  409eef:	mov    QWORD PTR [rax+0x8],r12
  409ef3:	mov    QWORD PTR [rax+0x38],rbx
  409ef7:	mov    QWORD PTR [r14],rax
  409efa:	mov    QWORD PTR [rbp+0x448],rax
  409f01:	mov    QWORD PTR [rax+0x28],r13
  409f05:	mov    rcx,QWORD PTR [rsp+0x8]
  409f0a:	mov    QWORD PTR [rax+0x30],rcx
  409f0e:	mov    ecx,DWORD PTR [rsp+0x4]
  409f12:	mov    DWORD PTR [rax+0x40],ecx
  409f15:	mov    al,0x1
  409f17:	jmp    409f23 <isspace@plt+0x6613>
  409f19:	mov    rdi,r13
  409f1c:	call   4030d0 <free@plt>
  409f21:	xor    eax,eax
  409f23:	mov    rcx,QWORD PTR fs:0x28
  409f2c:	cmp    rcx,QWORD PTR [rsp+0x30]
  409f31:	jne    409f42 <isspace@plt+0x6632>
  409f33:	add    rsp,0x38
  409f37:	pop    rbx
  409f38:	pop    r12
  409f3a:	pop    r13
  409f3c:	pop    r14
  409f3e:	pop    r15
  409f40:	pop    rbp
  409f41:	ret    
  409f42:	call   403280 <__stack_chk_fail@plt>
  409f47:	nop    WORD PTR [rax+rax*1+0x0]
  409f50:	push   rbp
  409f51:	push   r15
  409f53:	push   r14
  409f55:	push   r13
  409f57:	push   r12
  409f59:	push   rbx
  409f5a:	push   rax
  409f5b:	mov    rax,QWORD PTR fs:0x28
  409f64:	mov    QWORD PTR [rsp],rax
  409f68:	test   rsi,rsi
  409f6b:	je     409fa6 <isspace@plt+0x6696>
  409f6d:	mov    r15,r9
  409f70:	mov    r14,r8
  409f73:	mov    r13,rsi
  409f76:	mov    r12,QWORD PTR [rsi+0x10]
  409f7a:	mov    rdi,r9
  409f7d:	call   417400 <isspace@plt+0x13af0>
  409f82:	test   al,al
  409f84:	je     409ffc <isspace@plt+0x66ec>
  409f86:	mov    rbx,QWORD PTR [r12+0x448]
  409f8e:	test   rbx,rbx
  409f91:	je     409f9c <isspace@plt+0x668c>
  409f93:	mov    rax,QWORD PTR [rbx+0x20]
  409f97:	cmp    rax,QWORD PTR [r15]
  409f9a:	jbe    409fad <isspace@plt+0x669d>
  409f9c:	lea    rbx,[r12+0x440]
  409fa4:	jmp    409fb1 <isspace@plt+0x66a1>
  409fa6:	xor    eax,eax
  409fa8:	jmp    40a047 <isspace@plt+0x6737>
  409fad:	add    rbx,0x38
  409fb1:	mov    rbp,QWORD PTR [rbx]
  409fb4:	test   rbp,rbp
  409fb7:	je     40a004 <isspace@plt+0x66f4>
  409fb9:	mov    rax,QWORD PTR [r15]
  409fbc:	cmp    QWORD PTR [rbp+0x20],rax
  409fc0:	ja     409fe6 <isspace@plt+0x66d6>
  409fc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409fcc:	nop    DWORD PTR [rax+0x0]
  409fd0:	mov    rbx,rbp
  409fd3:	mov    rbp,QWORD PTR [rbp+0x38]
  409fd7:	test   rbp,rbp
  409fda:	je     40a000 <isspace@plt+0x66f0>
  409fdc:	cmp    QWORD PTR [rbp+0x20],rax
  409fe0:	jbe    409fd0 <isspace@plt+0x66c0>
  409fe2:	add    rbx,0x38
  409fe6:	mov    rax,QWORD PTR [rbp+0x18]
  409fea:	cmp    rax,QWORD PTR [r15+0x8]
  409fee:	jae    40a006 <isspace@plt+0x66f6>
  409ff0:	mov    DWORD PTR [r12+0x450],0xc
  409ffc:	xor    eax,eax
  409ffe:	jmp    40a041 <isspace@plt+0x6731>
  40a000:	add    rbx,0x38
  40a004:	xor    ebp,ebp
  40a006:	mov    edi,0x1
  40a00b:	mov    esi,0x48
  40a010:	call   403470 <calloc@plt>
  40a015:	test   rax,rax
  40a018:	je     40a041 <isspace@plt+0x6731>
  40a01a:	mov    DWORD PTR [rax],0x2
  40a020:	vmovups xmm0,XMMWORD PTR [r15]
  40a025:	vmovups XMMWORD PTR [rax+0x18],xmm0
  40a02a:	mov    QWORD PTR [rax+0x10],r14
  40a02e:	mov    QWORD PTR [rax+0x8],r13
  40a032:	mov    QWORD PTR [rax+0x38],rbp
  40a036:	mov    QWORD PTR [rbx],rax
  40a039:	mov    QWORD PTR [r12+0x448],rax
  40a041:	test   rax,rax
  40a044:	setne  al
  40a047:	mov    rcx,QWORD PTR fs:0x28
  40a050:	cmp    rcx,QWORD PTR [rsp]
  40a054:	jne    40a065 <isspace@plt+0x6755>
  40a056:	add    rsp,0x8
  40a05a:	pop    rbx
  40a05b:	pop    r12
  40a05d:	pop    r13
  40a05f:	pop    r14
  40a061:	pop    r15
  40a063:	pop    rbp
  40a064:	ret    
  40a065:	call   403280 <__stack_chk_fail@plt>
  40a06a:	nop    WORD PTR [rax+rax*1+0x0]
  40a070:	push   rbp
  40a071:	push   r15
  40a073:	push   r14
  40a075:	push   r13
  40a077:	push   r12
  40a079:	push   rbx
  40a07a:	sub    rsp,0x28
  40a07e:	mov    rax,QWORD PTR fs:0x28
  40a087:	mov    QWORD PTR [rsp+0x20],rax
  40a08c:	test   rsi,rsi
  40a08f:	je     40a0e0 <isspace@plt+0x67d0>
  40a091:	mov    r15,r9
  40a094:	mov    r14,r8
  40a097:	mov    rbp,rcx
  40a09a:	mov    rbx,rdx
  40a09d:	mov    r13,rsi
  40a0a0:	mov    r12,rdi
  40a0a3:	mov    rdi,r9
  40a0a6:	call   417460 <isspace@plt+0x13b50>
  40a0ab:	mov    rcx,QWORD PTR [rbx+0x48]
  40a0af:	test   rcx,rcx
  40a0b2:	je     40a0e4 <isspace@plt+0x67d4>
  40a0b4:	mov    rdx,QWORD PTR [r13+0x10]
  40a0b8:	mov    rdi,QWORD PTR [rdx]
  40a0bb:	mov    rsi,QWORD PTR [r15]
  40a0be:	mov    DWORD PTR [rsp],0x0
  40a0c5:	lea    r9,[rsp+0x10]
  40a0ca:	mov    r8d,0x1
  40a0d0:	mov    rdx,rax
  40a0d3:	call   42b690 <isspace@plt+0x27d80>
  40a0d8:	test   eax,eax
  40a0da:	je     40a0e8 <isspace@plt+0x67d8>
  40a0dc:	xor    ecx,ecx
  40a0de:	jmp    40a0f4 <isspace@plt+0x67e4>
  40a0e0:	xor    eax,eax
  40a0e2:	jmp    40a15b <isspace@plt+0x684b>
  40a0e4:	mov    cl,0x1
  40a0e6:	jmp    40a0f4 <isspace@plt+0x67e4>
  40a0e8:	mov    rax,QWORD PTR [rsp+0x10]
  40a0ed:	cmp    rax,QWORD PTR [r15+0x8]
  40a0f1:	setb   cl
  40a0f4:	cmp    BYTE PTR [rbx+0x60],0x0
  40a0f8:	mov    esi,DWORD PTR [rbx+0x58]
  40a0fb:	je     40a10e <isspace@plt+0x67fe>
  40a0fd:	test   esi,esi
  40a0ff:	je     40a12a <isspace@plt+0x681a>
  40a101:	mov    eax,DWORD PTR [rbx+0x64]
  40a104:	cdq    
  40a105:	idiv   esi
  40a107:	test   edx,edx
  40a109:	sete   al
  40a10c:	jmp    40a134 <isspace@plt+0x6824>
  40a10e:	mov    eax,DWORD PTR [rbx+0x64]
  40a111:	cmp    esi,eax
  40a113:	jle    40a12e <isspace@plt+0x681e>
  40a115:	mov    rax,QWORD PTR [rbp+0x0]
  40a119:	cmp    BYTE PTR [rax],0x76
  40a11c:	je     40a146 <isspace@plt+0x6836>
  40a11e:	mov    rdi,r14
  40a121:	call   41f620 <isspace@plt+0x1bd10>
  40a126:	mov    al,0x1
  40a128:	jmp    40a15b <isspace@plt+0x684b>
  40a12a:	mov    al,0x1
  40a12c:	jmp    40a134 <isspace@plt+0x6824>
  40a12e:	cmp    eax,DWORD PTR [rbx+0x5c]
  40a131:	setle  al
  40a134:	and    cl,al
  40a136:	mov    rax,QWORD PTR [rbp+0x0]
  40a13a:	cmp    BYTE PTR [rax],0x76
  40a13d:	sete   al
  40a140:	xor    al,cl
  40a142:	cmp    al,0x1
  40a144:	jne    40a11e <isspace@plt+0x680e>
  40a146:	mov    rdx,QWORD PTR [rbx+0x70]
  40a14a:	mov    rdi,r12
  40a14d:	mov    rsi,r13
  40a150:	mov    rcx,r14
  40a153:	mov    r8,r15
  40a156:	call   409750 <isspace@plt+0x5e40>
  40a15b:	mov    rcx,QWORD PTR fs:0x28
  40a164:	cmp    rcx,QWORD PTR [rsp+0x20]
  40a169:	jne    40a17a <isspace@plt+0x686a>
  40a16b:	add    rsp,0x28
  40a16f:	pop    rbx
  40a170:	pop    r12
  40a172:	pop    r13
  40a174:	pop    r14
  40a176:	pop    r15
  40a178:	pop    rbp
  40a179:	ret    
  40a17a:	call   403280 <__stack_chk_fail@plt>
  40a17f:	nop
  40a180:	push   rbp
  40a181:	push   r15
  40a183:	push   r14
  40a185:	push   r13
  40a187:	push   r12
  40a189:	push   rbx
  40a18a:	sub    rsp,0x48
  40a18e:	mov    rbp,rdx
  40a191:	mov    rdx,QWORD PTR fs:0x28
  40a19a:	mov    QWORD PTR [rsp+0x40],rdx
  40a19f:	test   rsi,rsi
  40a1a2:	je     40a2de <isspace@plt+0x69ce>
  40a1a8:	mov    r15,r9
  40a1ab:	mov    r14,r8
  40a1ae:	mov    r13,rsi
  40a1b1:	mov    rax,rdi
  40a1b4:	mov    rdx,QWORD PTR [rcx+0x8]
  40a1b8:	lea    rbx,[rsp+0x18]
  40a1bd:	mov    rdi,rbx
  40a1c0:	mov    rsi,rax
  40a1c3:	call   409840 <isspace@plt+0x5f30>
  40a1c8:	mov    rdi,rbx
  40a1cb:	call   404da0 <isspace@plt+0x1490>
  40a1d0:	mov    QWORD PTR [rsp+0x10],rax
  40a1d5:	mov    rdi,rbx
  40a1d8:	call   404ec0 <isspace@plt+0x15b0>
  40a1dd:	mov    r12,rax
  40a1e0:	mov    rdi,QWORD PTR [r15]
  40a1e3:	mov    eax,DWORD PTR [rbp+0x58]
  40a1e6:	mov    DWORD PTR [rsp+0xc],eax
  40a1ea:	mov    rsi,rdi
  40a1ed:	call   417690 <isspace@plt+0x13d80>
  40a1f2:	mov    QWORD PTR [rsp+0x30],rax
  40a1f7:	mov    QWORD PTR [rsp+0x38],rdx
  40a1fc:	mov    rbp,QWORD PTR [r13+0x10]
  40a200:	lea    rdi,[rsp+0x30]
  40a205:	call   417400 <isspace@plt+0x13af0>
  40a20a:	test   al,al
  40a20c:	je     40a2d6 <isspace@plt+0x69c6>
  40a212:	mov    r15,QWORD PTR [rbp+0x448]
  40a219:	test   r15,r15
  40a21c:	je     40a229 <isspace@plt+0x6919>
  40a21e:	mov    rax,QWORD PTR [r15+0x20]
  40a222:	cmp    rax,QWORD PTR [rsp+0x30]
  40a227:	jbe    40a232 <isspace@plt+0x6922>
  40a229:	lea    r15,[rbp+0x440]
  40a230:	jmp    40a236 <isspace@plt+0x6926>
  40a232:	add    r15,0x38
  40a236:	mov    rbx,QWORD PTR [r15]
  40a239:	test   rbx,rbx
  40a23c:	je     40a281 <isspace@plt+0x6971>
  40a23e:	mov    rax,QWORD PTR [rsp+0x30]
  40a243:	cmp    QWORD PTR [rbx+0x20],rax
  40a247:	ja     40a266 <isspace@plt+0x6956>
  40a249:	nop    DWORD PTR [rax+0x0]
  40a250:	mov    r15,rbx
  40a253:	mov    rbx,QWORD PTR [rbx+0x38]
  40a257:	test   rbx,rbx
  40a25a:	je     40a27d <isspace@plt+0x696d>
  40a25c:	cmp    QWORD PTR [rbx+0x20],rax
  40a260:	jbe    40a250 <isspace@plt+0x6940>
  40a262:	add    r15,0x38
  40a266:	mov    rax,QWORD PTR [rbx+0x18]
  40a26a:	cmp    rax,QWORD PTR [rsp+0x38]
  40a26f:	jae    40a283 <isspace@plt+0x6973>
  40a271:	mov    DWORD PTR [rbp+0x450],0xc
  40a27b:	jmp    40a2d6 <isspace@plt+0x69c6>
  40a27d:	add    r15,0x38
  40a281:	xor    ebx,ebx
  40a283:	mov    edi,0x1
  40a288:	mov    esi,0x48
  40a28d:	call   403470 <calloc@plt>
  40a292:	test   rax,rax
  40a295:	je     40a2d6 <isspace@plt+0x69c6>
  40a297:	mov    DWORD PTR [rax],0x1
  40a29d:	vmovups xmm0,XMMWORD PTR [rsp+0x30]
  40a2a3:	vmovups XMMWORD PTR [rax+0x18],xmm0
  40a2a8:	mov    QWORD PTR [rax+0x10],r14
  40a2ac:	mov    QWORD PTR [rax+0x8],r13
  40a2b0:	mov    QWORD PTR [rax+0x38],rbx
  40a2b4:	mov    QWORD PTR [r15],rax
  40a2b7:	mov    QWORD PTR [rbp+0x448],rax
  40a2be:	mov    QWORD PTR [rax+0x28],r12
  40a2c2:	mov    rcx,QWORD PTR [rsp+0x10]
  40a2c7:	mov    QWORD PTR [rax+0x30],rcx
  40a2cb:	mov    ecx,DWORD PTR [rsp+0xc]
  40a2cf:	mov    DWORD PTR [rax+0x40],ecx
  40a2d2:	mov    al,0x1
  40a2d4:	jmp    40a2e0 <isspace@plt+0x69d0>
  40a2d6:	mov    rdi,r12
  40a2d9:	call   4030d0 <free@plt>
  40a2de:	xor    eax,eax
  40a2e0:	mov    rcx,QWORD PTR fs:0x28
  40a2e9:	cmp    rcx,QWORD PTR [rsp+0x40]
  40a2ee:	jne    40a2ff <isspace@plt+0x69ef>
  40a2f0:	add    rsp,0x48
  40a2f4:	pop    rbx
  40a2f5:	pop    r12
  40a2f7:	pop    r13
  40a2f9:	pop    r14
  40a2fb:	pop    r15
  40a2fd:	pop    rbp
  40a2fe:	ret    
  40a2ff:	call   403280 <__stack_chk_fail@plt>
  40a304:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a30e:	xchg   ax,ax
  40a310:	push   r15
  40a312:	push   r14
  40a314:	push   rbx
  40a315:	sub    rsp,0x10
  40a319:	mov    rax,QWORD PTR fs:0x28
  40a322:	mov    QWORD PTR [rsp+0x8],rax
  40a327:	test   rsi,rsi
  40a32a:	je     40a375 <isspace@plt+0x6a65>
  40a32c:	mov    r15,r9
  40a32f:	mov    r14,r8
  40a332:	mov    rbx,rsi
  40a335:	mov    rdi,r9
  40a338:	call   417400 <isspace@plt+0x13af0>
  40a33d:	test   al,al
  40a33f:	je     40a375 <isspace@plt+0x6a65>
  40a341:	test   r14,r14
  40a344:	jne    40a35a <isspace@plt+0x6a4a>
  40a346:	mov    rdi,QWORD PTR [rbx+0x18]
  40a34a:	mov    rsi,QWORD PTR [r15]
  40a34d:	call   41f1b0 <isspace@plt+0x1b8a0>
  40a352:	mov    r14,rax
  40a355:	test   rax,rax
  40a358:	je     40a375 <isspace@plt+0x6a65>
  40a35a:	mov    rsi,QWORD PTR [r15]
  40a35d:	cmp    rsi,QWORD PTR [r15+0x8]
  40a361:	jne    40a379 <isspace@plt+0x6a69>
  40a363:	mov    rdi,r14
  40a366:	call   41ad90 <isspace@plt+0x17480>
  40a36b:	mov    rdi,r14
  40a36e:	call   41f690 <isspace@plt+0x1bd80>
  40a373:	jmp    40a391 <isspace@plt+0x6a81>
  40a375:	xor    eax,eax
  40a377:	jmp    40a393 <isspace@plt+0x6a83>
  40a379:	mov    rdi,r14
  40a37c:	mov    rsi,r15
  40a37f:	call   420010 <isspace@plt+0x1c700>
  40a384:	mov    esi,0x1
  40a389:	mov    rdi,r14
  40a38c:	call   41fcf0 <isspace@plt+0x1c3e0>
  40a391:	mov    al,0x1
  40a393:	mov    rcx,QWORD PTR fs:0x28
  40a39c:	cmp    rcx,QWORD PTR [rsp+0x8]
  40a3a1:	jne    40a3ad <isspace@plt+0x6a9d>
  40a3a3:	add    rsp,0x10
  40a3a7:	pop    rbx
  40a3a8:	pop    r14
  40a3aa:	pop    r15
  40a3ac:	ret    
  40a3ad:	call   403280 <__stack_chk_fail@plt>
  40a3b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3bc:	nop    DWORD PTR [rax+0x0]
  40a3c0:	push   rax
  40a3c1:	mov    rax,QWORD PTR fs:0x28
  40a3ca:	mov    QWORD PTR [rsp],rax
  40a3ce:	lea    rsi,[rip+0x26424]        # 4307f9 <isspace@plt+0x2cee9>
  40a3d5:	xor    eax,eax
  40a3d7:	call   42a150 <isspace@plt+0x26840>
  40a3dc:	mov    rax,QWORD PTR fs:0x28
  40a3e5:	cmp    rax,QWORD PTR [rsp]
  40a3e9:	jne    40a3ef <isspace@plt+0x6adf>
  40a3eb:	xor    eax,eax
  40a3ed:	pop    rcx
  40a3ee:	ret    
  40a3ef:	call   403280 <__stack_chk_fail@plt>
  40a3f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3fe:	xchg   ax,ax
  40a400:	push   rbp
  40a401:	push   r15
  40a403:	push   r14
  40a405:	push   r13
  40a407:	push   r12
  40a409:	push   rbx
  40a40a:	sub    rsp,0x18
  40a40e:	mov    rax,QWORD PTR fs:0x28
  40a417:	mov    QWORD PTR [rsp+0x10],rax
  40a41c:	test   rsi,rsi
  40a41f:	je     40a4a6 <isspace@plt+0x6b96>
  40a425:	mov    r15,r8
  40a428:	mov    r12,rcx
  40a42b:	mov    r13,rdx
  40a42e:	mov    rbx,rsi
  40a431:	mov    rbp,rdi
  40a434:	mov    QWORD PTR [rsp+0x8],r9
  40a439:	mov    r14,QWORD PTR [rdx+0x70]
  40a43d:	mov    rdi,r14
  40a440:	call   40ce70 <isspace@plt+0x9560>
  40a445:	mov    esi,0x1
  40a44a:	test   al,al
  40a44c:	je     40a477 <isspace@plt+0x6b67>
  40a44e:	mov    DWORD PTR [rsp],0x1
  40a455:	mov    rdi,rbp
  40a458:	mov    rsi,rbx
  40a45b:	mov    rdx,r13
  40a45e:	mov    rcx,r12
  40a461:	mov    r8,r15
  40a464:	mov    r9,QWORD PTR [rsp+0x8]
  40a469:	call   40cf00 <isspace@plt+0x95f0>
  40a46e:	mov    esi,eax
  40a470:	add    esi,0x1
  40a473:	mov    r14,QWORD PTR [r13+0x70]
  40a477:	mov    rdi,r14
  40a47a:	call   40d320 <isspace@plt+0x9a10>
  40a47f:	mov    DWORD PTR [rsp],0x0
  40a486:	mov    rdi,rbp
  40a489:	mov    rsi,rbx
  40a48c:	mov    rdx,r13
  40a48f:	mov    rcx,r12
  40a492:	mov    r8,r15
  40a495:	mov    r9,QWORD PTR [rsp+0x8]
  40a49a:	call   40cf00 <isspace@plt+0x95f0>
  40a49f:	test   eax,eax
  40a4a1:	setne  al
  40a4a4:	jmp    40a4a8 <isspace@plt+0x6b98>
  40a4a6:	xor    eax,eax
  40a4a8:	mov    rcx,QWORD PTR fs:0x28
  40a4b1:	cmp    rcx,QWORD PTR [rsp+0x10]
  40a4b6:	jne    40a4c7 <isspace@plt+0x6bb7>
  40a4b8:	add    rsp,0x18
  40a4bc:	pop    rbx
  40a4bd:	pop    r12
  40a4bf:	pop    r13
  40a4c1:	pop    r14
  40a4c3:	pop    r15
  40a4c5:	pop    rbp
  40a4c6:	ret    
  40a4c7:	call   403280 <__stack_chk_fail@plt>
  40a4cc:	nop    DWORD PTR [rax+0x0]
  40a4d0:	push   rbp
  40a4d1:	push   r15
  40a4d3:	push   r14
  40a4d5:	push   r13
  40a4d7:	push   r12
  40a4d9:	push   rbx
  40a4da:	sub    rsp,0x18
  40a4de:	mov    rax,QWORD PTR fs:0x28
  40a4e7:	mov    QWORD PTR [rsp+0x10],rax
  40a4ec:	mov    rbp,QWORD PTR [rdi+0x28]
  40a4f0:	test   rbp,rbp
  40a4f3:	je     40a58e <isspace@plt+0x6c7e>
  40a4f9:	mov    r14,rcx
  40a4fc:	mov    rbx,rdx
  40a4ff:	mov    r15,rdi
  40a502:	mov    r12b,0x1
  40a505:	mov    r13,rsp
  40a508:	jmp    40a520 <isspace@plt+0x6c10>
  40a50a:	mov    rax,QWORD PTR [r14]
  40a50d:	cmp    BYTE PTR [rax],0x59
  40a510:	jne    40a555 <isspace@plt+0x6c45>
  40a512:	jmp    40a580 <isspace@plt+0x6c70>
  40a514:	mov    rax,QWORD PTR [r14]
  40a517:	cmp    BYTE PTR [rax],0x59
  40a51a:	je     40a555 <isspace@plt+0x6c45>
  40a51c:	jmp    40a580 <isspace@plt+0x6c70>
  40a51e:	xchg   ax,ax
  40a520:	mov    rax,QWORD PTR [rbp+0x10]
  40a524:	cmp    BYTE PTR [rax+0x18],0x0
  40a528:	jne    40a580 <isspace@plt+0x6c70>
  40a52a:	mov    rdi,QWORD PTR [rbx+0x48]
  40a52e:	test   rdi,rdi
  40a531:	je     40a50a <isspace@plt+0x6bfa>
  40a533:	mov    rsi,QWORD PTR [rax+0x8]
  40a537:	test   rsi,rsi
  40a53a:	je     40a514 <isspace@plt+0x6c04>
  40a53c:	xor    edx,edx
  40a53e:	call   42b650 <isspace@plt+0x27d40>
  40a543:	test   eax,eax
  40a545:	sete   al
  40a548:	mov    rcx,QWORD PTR [r14]
  40a54b:	cmp    BYTE PTR [rcx],0x59
  40a54e:	sete   cl
  40a551:	cmp    al,cl
  40a553:	je     40a580 <isspace@plt+0x6c70>
  40a555:	xor    edi,edi
  40a557:	xor    esi,esi
  40a559:	call   417690 <isspace@plt+0x13d80>
  40a55e:	mov    QWORD PTR [rsp],rax
  40a562:	mov    QWORD PTR [rsp+0x8],rdx
  40a567:	mov    rdx,QWORD PTR [rbx+0x70]
  40a56b:	xor    ecx,ecx
  40a56d:	mov    rdi,r15
  40a570:	mov    rsi,rbp
  40a573:	mov    r8,r13
  40a576:	call   409750 <isspace@plt+0x5e40>
  40a57b:	and    r12b,al
  40a57e:	xchg   ax,ax
  40a580:	mov    rbp,QWORD PTR [rbp+0x2e0]
  40a587:	test   rbp,rbp
  40a58a:	jne    40a520 <isspace@plt+0x6c10>
  40a58c:	jmp    40a591 <isspace@plt+0x6c81>
  40a58e:	mov    r12b,0x1
  40a591:	mov    rax,QWORD PTR fs:0x28
  40a59a:	cmp    rax,QWORD PTR [rsp+0x10]
  40a59f:	jne    40a5b7 <isspace@plt+0x6ca7>
  40a5a1:	and    r12b,0x1
  40a5a5:	mov    eax,r12d
  40a5a8:	add    rsp,0x18
  40a5ac:	pop    rbx
  40a5ad:	pop    r12
  40a5af:	pop    r13
  40a5b1:	pop    r14
  40a5b3:	pop    r15
  40a5b5:	pop    rbp
  40a5b6:	ret    
  40a5b7:	call   403280 <__stack_chk_fail@plt>
  40a5bc:	nop    DWORD PTR [rax+0x0]
  40a5c0:	push   rbp
  40a5c1:	push   r15
  40a5c3:	push   r14
  40a5c5:	push   r12
  40a5c7:	push   rbx
  40a5c8:	sub    rsp,0x30
  40a5cc:	mov    rax,QWORD PTR fs:0x28
  40a5d5:	mov    QWORD PTR [rsp+0x28],rax
  40a5da:	test   rsi,rsi
  40a5dd:	je     40a655 <isspace@plt+0x6d45>
  40a5df:	mov    r14,r9
  40a5e2:	mov    rbp,rcx
  40a5e5:	mov    rbx,rsi
  40a5e8:	mov    r15,rdi
  40a5eb:	mov    r12,rsp
  40a5ee:	mov    rdi,r12
  40a5f1:	call   404230 <isspace@plt+0x920>
  40a5f6:	mov    rsi,QWORD PTR [rbx+0x10]
  40a5fa:	mov    rax,QWORD PTR [rbp+0x8]
  40a5fe:	mov    QWORD PTR [rsp+0x18],rax
  40a603:	mov    QWORD PTR [rsp+0x20],0x0
  40a60c:	lea    rax,[rip+0x307d]        # 40d690 <isspace@plt+0x9d80>
  40a613:	lea    rcx,[rsp+0x18]
  40a618:	mov    r8d,0x0
  40a61e:	mov    r9d,0x0
  40a624:	mov    rdi,r15
  40a627:	mov    rdx,r14
  40a62a:	push   rax
  40a62b:	push   r12
  40a62d:	call   4253e0 <isspace@plt+0x21ad0>
  40a632:	add    rsp,0x10
  40a636:	mov    ebp,eax
  40a638:	cmp    DWORD PTR [r15+0x9c0],0x0
  40a640:	je     40a659 <isspace@plt+0x6d49>
  40a642:	lea    rsi,[rip+0x261d7]        # 430820 <isspace@plt+0x2cf10>
  40a649:	xor    eax,eax
  40a64b:	mov    rdi,r15
  40a64e:	call   42a150 <isspace@plt+0x26840>
  40a653:	jmp    40a67c <isspace@plt+0x6d6c>
  40a655:	xor    eax,eax
  40a657:	jmp    40a690 <isspace@plt+0x6d80>
  40a659:	test   ebp,ebp
  40a65b:	je     40a67c <isspace@plt+0x6d6c>
  40a65d:	mov    rdi,rsp
  40a660:	call   404dd0 <isspace@plt+0x14c0>
  40a665:	mov    rcx,rax
  40a668:	lea    rsi,[rip+0x261c3]        # 430832 <isspace@plt+0x2cf22>
  40a66f:	xor    eax,eax
  40a671:	mov    rdi,r15
  40a674:	mov    rdx,rcx
  40a677:	call   42a150 <isspace@plt+0x26840>
  40a67c:	mov    rdi,rsp
  40a67f:	call   404550 <isspace@plt+0xc40>
  40a684:	mov    eax,DWORD PTR [r15+0x9c0]
  40a68b:	or     eax,ebp
  40a68d:	sete   al
  40a690:	mov    rcx,QWORD PTR fs:0x28
  40a699:	cmp    rcx,QWORD PTR [rsp+0x28]
  40a69e:	jne    40a6ad <isspace@plt+0x6d9d>
  40a6a0:	add    rsp,0x30
  40a6a4:	pop    rbx
  40a6a5:	pop    r12
  40a6a7:	pop    r14
  40a6a9:	pop    r15
  40a6ab:	pop    rbp
  40a6ac:	ret    
  40a6ad:	call   403280 <__stack_chk_fail@plt>
  40a6b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6bc:	nop    DWORD PTR [rax+0x0]
  40a6c0:	push   rbp
  40a6c1:	push   r15
  40a6c3:	push   r14
  40a6c5:	push   r13
  40a6c7:	push   r12
  40a6c9:	push   rbx
  40a6ca:	sub    rsp,0x18
  40a6ce:	mov    rax,QWORD PTR fs:0x28
  40a6d7:	mov    QWORD PTR [rsp+0x10],rax
  40a6dc:	test   rsi,rsi
  40a6df:	je     40a753 <isspace@plt+0x6e43>
  40a6e1:	mov    r14,r9
  40a6e4:	mov    r12,r8
  40a6e7:	mov    r13,rcx
  40a6ea:	mov    rbx,rdx
  40a6ed:	mov    r15,rsi
  40a6f0:	mov    rbp,rdi
  40a6f3:	mov    rdi,QWORD PTR [r9+0x8]
  40a6f7:	mov    rsi,rdi
  40a6fa:	call   417690 <isspace@plt+0x13d80>
  40a6ff:	mov    QWORD PTR [rsp],rax
  40a703:	mov    QWORD PTR [rsp+0x8],rdx
  40a708:	mov    r9,rsp
  40a70b:	mov    rdi,rbp
  40a70e:	mov    rsi,r15
  40a711:	mov    rdx,rbx
  40a714:	mov    rcx,r13
  40a717:	mov    r8,r12
  40a71a:	call   40a810 <isspace@plt+0x6f00>
  40a71f:	test   al,al
  40a721:	je     40a753 <isspace@plt+0x6e43>
  40a723:	mov    r12,QWORD PTR [r15+0x10]
  40a727:	mov    rdi,r14
  40a72a:	call   417400 <isspace@plt+0x13af0>
  40a72f:	test   al,al
  40a731:	je     40a79c <isspace@plt+0x6e8c>
  40a733:	mov    rbx,QWORD PTR [r12+0x448]
  40a73b:	test   rbx,rbx
  40a73e:	je     40a749 <isspace@plt+0x6e39>
  40a740:	mov    rax,QWORD PTR [rbx+0x20]
  40a744:	cmp    rax,QWORD PTR [r14]
  40a747:	jbe    40a75a <isspace@plt+0x6e4a>
  40a749:	lea    rbx,[r12+0x440]
  40a751:	jmp    40a75e <isspace@plt+0x6e4e>
  40a753:	xor    eax,eax
  40a755:	jmp    40a7e3 <isspace@plt+0x6ed3>
  40a75a:	add    rbx,0x38
  40a75e:	mov    rbp,QWORD PTR [rbx]
  40a761:	test   rbp,rbp
  40a764:	je     40a7a4 <isspace@plt+0x6e94>
  40a766:	mov    rax,QWORD PTR [r14]
  40a769:	cmp    QWORD PTR [rbp+0x20],rax
  40a76d:	ja     40a786 <isspace@plt+0x6e76>
  40a76f:	nop
  40a770:	mov    rbx,rbp
  40a773:	mov    rbp,QWORD PTR [rbp+0x38]
  40a777:	test   rbp,rbp
  40a77a:	je     40a7a0 <isspace@plt+0x6e90>
  40a77c:	cmp    QWORD PTR [rbp+0x20],rax
  40a780:	jbe    40a770 <isspace@plt+0x6e60>
  40a782:	add    rbx,0x38
  40a786:	mov    rax,QWORD PTR [rbp+0x18]
  40a78a:	cmp    rax,QWORD PTR [r14+0x8]
  40a78e:	jae    40a7a6 <isspace@plt+0x6e96>
  40a790:	mov    DWORD PTR [r12+0x450],0xc
  40a79c:	xor    eax,eax
  40a79e:	jmp    40a7dd <isspace@plt+0x6ecd>
  40a7a0:	add    rbx,0x38
  40a7a4:	xor    ebp,ebp
  40a7a6:	mov    edi,0x1
  40a7ab:	mov    esi,0x48
  40a7b0:	call   403470 <calloc@plt>
  40a7b5:	test   rax,rax
  40a7b8:	je     40a7dd <isspace@plt+0x6ecd>
  40a7ba:	mov    DWORD PTR [rax],0x2
  40a7c0:	vmovups xmm0,XMMWORD PTR [r14]
  40a7c5:	vmovups XMMWORD PTR [rax+0x18],xmm0
  40a7ca:	mov    QWORD PTR [rax+0x8],r15
  40a7ce:	mov    QWORD PTR [rax+0x38],rbp
  40a7d2:	mov    QWORD PTR [rbx],rax
  40a7d5:	mov    QWORD PTR [r12+0x448],rax
  40a7dd:	test   rax,rax
  40a7e0:	setne  al
  40a7e3:	mov    rcx,QWORD PTR fs:0x28
  40a7ec:	cmp    rcx,QWORD PTR [rsp+0x10]
  40a7f1:	jne    40a802 <isspace@plt+0x6ef2>
  40a7f3:	add    rsp,0x18
  40a7f7:	pop    rbx
  40a7f8:	pop    r12
  40a7fa:	pop    r13
  40a7fc:	pop    r14
  40a7fe:	pop    r15
  40a800:	pop    rbp
  40a801:	ret    
  40a802:	call   403280 <__stack_chk_fail@plt>
  40a807:	nop    WORD PTR [rax+rax*1+0x0]
  40a810:	push   rbp
  40a811:	push   r15
  40a813:	push   r14
  40a815:	push   r13
  40a817:	push   r12
  40a819:	push   rbx
  40a81a:	sub    rsp,0x58
  40a81e:	mov    rax,QWORD PTR fs:0x28
  40a827:	mov    QWORD PTR [rsp+0x50],rax
  40a82c:	test   rsi,rsi
  40a82f:	je     40a8a6 <isspace@plt+0x6f96>
  40a831:	mov    r12,r9
  40a834:	mov    rbx,rcx
  40a837:	mov    r14,rsi
  40a83a:	mov    r13,rdi
  40a83d:	mov    QWORD PTR [rsp+0x18],r8
  40a842:	lea    r15,[rsp+0x38]
  40a847:	mov    rdi,r15
  40a84a:	call   404230 <isspace@plt+0x920>
  40a84f:	lea    rbp,[rsp+0x20]
  40a854:	mov    rdi,rbp
  40a857:	call   404230 <isspace@plt+0x920>
  40a85c:	mov    rsi,QWORD PTR [r14+0x10]
  40a860:	add    rbx,0x8
  40a864:	lea    r9,[rip+0x2e25]        # 40d690 <isspace@plt+0x9d80>
  40a86b:	mov    rdi,r13
  40a86e:	mov    rdx,r12
  40a871:	mov    rcx,rbx
  40a874:	mov    r8,r15
  40a877:	push   r9
  40a879:	push   rbp
  40a87a:	call   4253e0 <isspace@plt+0x21ad0>
  40a87f:	add    rsp,0x10
  40a883:	mov    r15d,eax
  40a886:	cmp    DWORD PTR [r13+0x9c0],0x0
  40a88e:	je     40a8ad <isspace@plt+0x6f9d>
  40a890:	lea    rsi,[rip+0x25f89]        # 430820 <isspace@plt+0x2cf10>
  40a897:	xor    eax,eax
  40a899:	mov    rdi,r13
  40a89c:	call   42a150 <isspace@plt+0x26840>
  40a8a1:	jmp    40a9f1 <isspace@plt+0x70e1>
  40a8a6:	xor    eax,eax
  40a8a8:	jmp    40aa12 <isspace@plt+0x7102>
  40a8ad:	test   r15d,r15d
  40a8b0:	je     40a8d8 <isspace@plt+0x6fc8>
  40a8b2:	lea    rdi,[rsp+0x20]
  40a8b7:	call   404dd0 <isspace@plt+0x14c0>
  40a8bc:	mov    rcx,rax
  40a8bf:	lea    rsi,[rip+0x25f6c]        # 430832 <isspace@plt+0x2cf22>
  40a8c6:	xor    eax,eax
  40a8c8:	mov    rdi,r13
  40a8cb:	mov    rdx,rcx
  40a8ce:	call   42a150 <isspace@plt+0x26840>
  40a8d3:	jmp    40a9f1 <isspace@plt+0x70e1>
  40a8d8:	lea    rbx,[rsp+0x38]
  40a8dd:	mov    rdi,rbx
  40a8e0:	call   404da0 <isspace@plt+0x1490>
  40a8e5:	mov    QWORD PTR [rsp+0x10],rax
  40a8ea:	mov    rdi,rbx
  40a8ed:	call   404ec0 <isspace@plt+0x15b0>
  40a8f2:	mov    QWORD PTR [rsp],rax
  40a8f6:	mov    rbx,QWORD PTR [r14+0x10]
  40a8fa:	mov    rdi,r12
  40a8fd:	call   417400 <isspace@plt+0x13af0>
  40a902:	test   al,al
  40a904:	je     40a9e8 <isspace@plt+0x70d8>
  40a90a:	mov    rbp,QWORD PTR [rbx+0x448]
  40a911:	test   rbp,rbp
  40a914:	mov    rcx,rbx
  40a917:	je     40a923 <isspace@plt+0x7013>
  40a919:	mov    rax,QWORD PTR [rbp+0x20]
  40a91d:	cmp    rax,QWORD PTR [r12]
  40a921:	jbe    40a92c <isspace@plt+0x701c>
  40a923:	lea    rbp,[rcx+0x440]
  40a92a:	jmp    40a930 <isspace@plt+0x7020>
  40a92c:	add    rbp,0x38
  40a930:	mov    rbx,QWORD PTR [rbp+0x0]
  40a934:	test   rbx,rbx
  40a937:	je     40a981 <isspace@plt+0x7071>
  40a939:	mov    rax,QWORD PTR [r12]
  40a93d:	cmp    QWORD PTR [rbx+0x20],rax
  40a941:	ja     40a966 <isspace@plt+0x7056>
  40a943:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a94d:	nop    DWORD PTR [rax]
  40a950:	mov    rbp,rbx
  40a953:	mov    rbx,QWORD PTR [rbx+0x38]
  40a957:	test   rbx,rbx
  40a95a:	je     40a97d <isspace@plt+0x706d>
  40a95c:	cmp    QWORD PTR [rbx+0x20],rax
  40a960:	jbe    40a950 <isspace@plt+0x7040>
  40a962:	add    rbp,0x38
  40a966:	mov    rax,QWORD PTR [rbx+0x18]
  40a96a:	cmp    rax,QWORD PTR [r12+0x8]
  40a96f:	jae    40a983 <isspace@plt+0x7073>
  40a971:	mov    DWORD PTR [rcx+0x450],0xc
  40a97b:	jmp    40a9e8 <isspace@plt+0x70d8>
  40a97d:	add    rbp,0x38
  40a981:	xor    ebx,ebx
  40a983:	mov    edi,0x1
  40a988:	mov    esi,0x48
  40a98d:	mov    QWORD PTR [rsp+0x8],rcx
  40a992:	call   403470 <calloc@plt>
  40a997:	test   rax,rax
  40a99a:	je     40a9e8 <isspace@plt+0x70d8>
  40a99c:	mov    DWORD PTR [rax],0x3
  40a9a2:	vmovups xmm0,XMMWORD PTR [r12]
  40a9a8:	vmovups XMMWORD PTR [rax+0x18],xmm0
  40a9ad:	mov    rcx,QWORD PTR [rsp+0x18]
  40a9b2:	mov    QWORD PTR [rax+0x10],rcx
  40a9b6:	mov    QWORD PTR [rax+0x8],r14
  40a9ba:	mov    QWORD PTR [rax+0x38],rbx
  40a9be:	mov    QWORD PTR [rbp+0x0],rax
  40a9c2:	mov    rcx,QWORD PTR [rsp+0x8]
  40a9c7:	mov    QWORD PTR [rcx+0x448],rax
  40a9ce:	mov    rcx,QWORD PTR [rsp]
  40a9d2:	mov    QWORD PTR [rax+0x28],rcx
  40a9d6:	mov    rcx,QWORD PTR [rsp+0x10]
  40a9db:	mov    QWORD PTR [rax+0x30],rcx
  40a9df:	mov    DWORD PTR [rax+0x40],0x1
  40a9e6:	jmp    40a9f1 <isspace@plt+0x70e1>
  40a9e8:	mov    rdi,QWORD PTR [rsp]
  40a9ec:	call   4030d0 <free@plt>
  40a9f1:	lea    rdi,[rsp+0x38]
  40a9f6:	call   404550 <isspace@plt+0xc40>
  40a9fb:	lea    rdi,[rsp+0x20]
  40aa00:	call   404550 <isspace@plt+0xc40>
  40aa05:	mov    eax,DWORD PTR [r13+0x9c0]
  40aa0c:	or     eax,r15d
  40aa0f:	sete   al
  40aa12:	mov    rcx,QWORD PTR fs:0x28
  40aa1b:	cmp    rcx,QWORD PTR [rsp+0x50]
  40aa20:	jne    40aa31 <isspace@plt+0x7121>
  40aa22:	add    rsp,0x58
  40aa26:	pop    rbx
  40aa27:	pop    r12
  40aa29:	pop    r13
  40aa2b:	pop    r14
  40aa2d:	pop    r15
  40aa2f:	pop    rbp
  40aa30:	ret    
  40aa31:	call   403280 <__stack_chk_fail@plt>
  40aa36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa40:	push   r15
  40aa42:	push   r14
  40aa44:	push   r13
  40aa46:	push   r12
  40aa48:	push   rbx
  40aa49:	sub    rsp,0x20
  40aa4d:	mov    rbx,r8
  40aa50:	mov    r14,rcx
  40aa53:	mov    r15,rdx
  40aa56:	mov    r12,rsi
  40aa59:	mov    r13,rdi
  40aa5c:	mov    rax,QWORD PTR fs:0x28
  40aa65:	mov    QWORD PTR [rsp+0x18],rax
  40aa6a:	test   r8,r8
  40aa6d:	je     40aa7c <isspace@plt+0x716c>
  40aa6f:	mov    rdi,rbx
  40aa72:	call   41b4d0 <isspace@plt+0x17bc0>
  40aa77:	mov    rdi,rax
  40aa7a:	jmp    40aa7f <isspace@plt+0x716f>
  40aa7c:	mov    rdi,QWORD PTR [r9]
  40aa7f:	mov    rsi,0xffffffffffffffff
  40aa86:	call   417690 <isspace@plt+0x13d80>
  40aa8b:	mov    QWORD PTR [rsp+0x8],rax
  40aa90:	mov    QWORD PTR [rsp+0x10],rdx
  40aa95:	lea    r9,[rsp+0x8]
  40aa9a:	mov    rdi,r13
  40aa9d:	mov    rsi,r12
  40aaa0:	mov    rdx,r15
  40aaa3:	mov    rcx,r14
  40aaa6:	mov    r8,rbx
  40aaa9:	call   40a810 <isspace@plt+0x6f00>
  40aaae:	mov    rcx,QWORD PTR fs:0x28
  40aab7:	cmp    rcx,QWORD PTR [rsp+0x18]
  40aabc:	jne    40aacc <isspace@plt+0x71bc>
  40aabe:	add    rsp,0x20
  40aac2:	pop    rbx
  40aac3:	pop    r12
  40aac5:	pop    r13
  40aac7:	pop    r14
  40aac9:	pop    r15
  40aacb:	ret    
  40aacc:	call   403280 <__stack_chk_fail@plt>
  40aad1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aadb:	nop    DWORD PTR [rax+rax*1+0x0]
  40aae0:	push   rbp
  40aae1:	push   r15
  40aae3:	push   r14
  40aae5:	push   r13
  40aae7:	push   r12
  40aae9:	push   rbx
  40aaea:	sub    rsp,0x198
  40aaf1:	mov    rax,QWORD PTR fs:0x28
  40aafa:	mov    QWORD PTR [rsp+0x190],rax
  40ab02:	test   rsi,rsi
  40ab05:	je     40ab2d <isspace@plt+0x721d>
  40ab07:	mov    r13,rsi
  40ab0a:	mov    rbx,QWORD PTR [rsi+0x10]
  40ab0e:	cmp    QWORD PTR [rbx+0x440],0x0
  40ab16:	je     40ab24 <isspace@plt+0x7214>
  40ab18:	mov    DWORD PTR [rbx+0x450],0xd
  40ab22:	jmp    40ab2d <isspace@plt+0x721d>
  40ab24:	cmp    DWORD PTR [rbx+0x450],0x0
  40ab2b:	je     40ab5a <isspace@plt+0x724a>
  40ab2d:	xor    ebx,ebx
  40ab2f:	mov    rax,QWORD PTR fs:0x28
  40ab38:	cmp    rax,QWORD PTR [rsp+0x190]
  40ab40:	jne    40b0d7 <isspace@plt+0x77c7>
  40ab46:	mov    eax,ebx
  40ab48:	add    rsp,0x198
  40ab4f:	pop    rbx
  40ab50:	pop    r12
  40ab52:	pop    r13
  40ab54:	pop    r14
  40ab56:	pop    r15
  40ab58:	pop    rbp
  40ab59:	ret    
  40ab5a:	mov    r12,r9
  40ab5d:	mov    rbp,rcx
  40ab60:	mov    r14,rdi
  40ab63:	mov    QWORD PTR [rsp+0x18],rdx
  40ab68:	mov    r15,QWORD PTR [rbx]
  40ab6b:	mov    rdi,r15
  40ab6e:	call   410a90 <isspace@plt+0xd180>
  40ab73:	xor    edi,edi
  40ab75:	mov    rsi,rax
  40ab78:	call   417690 <isspace@plt+0x13d80>
  40ab7d:	mov    QWORD PTR [rsp+0x50],rax
  40ab82:	mov    QWORD PTR [rsp+0x58],rdx
  40ab87:	lea    rsi,[rsp+0x50]
  40ab8c:	mov    rdi,r12
  40ab8f:	call   4176d0 <isspace@plt+0x13dc0>
  40ab94:	mov    BYTE PTR [rsp+0x7],al
  40ab98:	mov    rdi,QWORD PTR [rbp+0x8]
  40ab9c:	test   rdi,rdi
  40ab9f:	mov    QWORD PTR [rsp+0x10],r14
  40aba4:	mov    QWORD PTR [rsp+0x20],r12
  40aba9:	mov    QWORD PTR [rsp+0x28],rbx
  40abae:	je     40ae94 <isspace@plt+0x7584>
  40abb4:	add    rbp,0x8
  40abb8:	lea    rax,[rbx+0x20]
  40abbc:	mov    QWORD PTR [rsp+0x40],rax
  40abc1:	mov    QWORD PTR [rsp+0x38],r15
  40abc6:	call   420980 <isspace@plt+0x1d070>
  40abcb:	test   rax,rax
  40abce:	je     40ab2d <isspace@plt+0x721d>
  40abd4:	mov    edi,0x1
  40abd9:	mov    QWORD PTR [rsp+0x8],rax
  40abde:	mov    rsi,rax
  40abe1:	lea    rdx,[rsp+0xf0]
  40abe9:	call   403570 <__xstat@plt>
  40abee:	mov    ecx,eax
  40abf0:	test   eax,eax
  40abf2:	je     40ac1d <isspace@plt+0x730d>
  40abf4:	xor    edx,edx
  40abf6:	mov    rax,QWORD PTR [rsp+0x18]
  40abfb:	cmp    BYTE PTR [rax+0x68],0x21
  40abff:	je     40ac4b <isspace@plt+0x733b>
  40ac01:	test   dl,dl
  40ac03:	je     40ac43 <isspace@plt+0x7333>
  40ac05:	mov    rax,QWORD PTR [rbx+0x78]
  40ac09:	test   rax,rax
  40ac0c:	je     40ac4b <isspace@plt+0x733b>
  40ac0e:	cmp    rax,QWORD PTR [rsp+0x148]
  40ac16:	jge    40ac4b <isspace@plt+0x733b>
  40ac18:	jmp    40b0a1 <isspace@plt+0x7791>
  40ac1d:	cmp    QWORD PTR [rbx+0x8],0x0
  40ac22:	je     40abf4 <isspace@plt+0x72e4>
  40ac24:	mov    rax,QWORD PTR [rbx+0x20]
  40ac28:	cmp    rax,QWORD PTR [rsp+0xf0]
  40ac30:	jne    40abf4 <isspace@plt+0x72e4>
  40ac32:	mov    rax,QWORD PTR [rbx+0x28]
  40ac36:	cmp    rax,QWORD PTR [rsp+0xf8]
  40ac3e:	sete   dl
  40ac41:	jmp    40abf6 <isspace@plt+0x72e6>
  40ac43:	test   ecx,ecx
  40ac45:	je     40b0aa <isspace@plt+0x779a>
  40ac4b:	mov    DWORD PTR [rsp+0x34],edx
  40ac4f:	mov    DWORD PTR [rsp+0x30],ecx
  40ac53:	mov    esi,0x4
  40ac58:	xor    eax,eax
  40ac5a:	mov    rdi,r14
  40ac5d:	mov    rdx,rbx
  40ac60:	mov    rcx,QWORD PTR [rsp+0x8]
  40ac65:	call   420610 <isspace@plt+0x1cd00>
  40ac6a:	test   al,al
  40ac6c:	jne    40ac7d <isspace@plt+0x736d>
  40ac6e:	mov    rax,QWORD PTR [rsp+0x18]
  40ac73:	cmp    BYTE PTR [rax+0x68],0x21
  40ac77:	jne    40b053 <isspace@plt+0x7743>
  40ac7d:	cmp    BYTE PTR [rsp+0x7],0x0
  40ac82:	je     40ac9f <isspace@plt+0x738f>
  40ac84:	mov    rdi,r15
  40ac87:	call   410a90 <isspace@plt+0xd180>
  40ac8c:	xor    edi,edi
  40ac8e:	mov    rsi,rax
  40ac91:	call   417690 <isspace@plt+0x13d80>
  40ac96:	mov    QWORD PTR [r12],rax
  40ac9a:	mov    QWORD PTR [r12+0x8],rdx
  40ac9f:	mov    ecx,DWORD PTR [rbx+0x438]
  40aca5:	mov    esi,0xffffff9c
  40acaa:	mov    rdi,r15
  40acad:	mov    rdx,QWORD PTR [rsp+0x8]
  40acb2:	call   411ad0 <isspace@plt+0xe1c0>
  40acb7:	test   rax,rax
  40acba:	je     40b018 <isspace@plt+0x7708>
  40acc0:	mov    r15,rax
  40acc3:	mov    QWORD PTR [rsp+0x48],rbp
  40acc8:	mov    rax,QWORD PTR [r14+0x9a0]
  40accf:	mov    r14b,BYTE PTR [rax+0x58]
  40acd3:	mov    rdi,QWORD PTR [r13+0x18]
  40acd7:	call   41f710 <isspace@plt+0x1be00>
  40acdc:	test   rax,rax
  40acdf:	je     40ad5d <isspace@plt+0x744d>
  40ace1:	mov    rbp,rax
  40ace4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40acee:	xchg   ax,ax
  40acf0:	test   r14b,r14b
  40acf3:	lea    rbx,[rsp+0x60]
  40acf8:	je     40ad10 <isspace@plt+0x7400>
  40acfa:	mov    rdi,rbp
  40acfd:	call   41ff60 <isspace@plt+0x1c650>
  40ad02:	mov    QWORD PTR [rsp+0x60],rax
  40ad07:	mov    QWORD PTR [rsp+0x68],rdx
  40ad0c:	jmp    40ad1f <isspace@plt+0x740f>
  40ad0e:	xchg   ax,ax
  40ad10:	mov    rax,QWORD PTR [rsp+0x20]
  40ad15:	vmovups xmm0,XMMWORD PTR [rax]
  40ad19:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  40ad1f:	mov    rdi,r15
  40ad22:	mov    rsi,rbx
  40ad25:	call   4124f0 <isspace@plt+0xebe0>
  40ad2a:	cmp    rax,0xffffffffffffffff
  40ad2e:	je     40ae53 <isspace@plt+0x7543>
  40ad34:	mov    r12,rax
  40ad37:	mov    rdi,rbx
  40ad3a:	call   417460 <isspace@plt+0x13b50>
  40ad3f:	cmp    r12,rax
  40ad42:	jne    40ae53 <isspace@plt+0x7543>
  40ad48:	test   r14b,r14b
  40ad4b:	je     40ad5d <isspace@plt+0x744d>
  40ad4d:	mov    rdi,rbp
  40ad50:	call   41f7f0 <isspace@plt+0x1bee0>
  40ad55:	mov    rbp,rax
  40ad58:	test   rax,rax
  40ad5b:	jne    40acf0 <isspace@plt+0x73e0>
  40ad5d:	mov    rdi,r15
  40ad60:	call   412230 <isspace@plt+0xe920>
  40ad65:	test   al,al
  40ad67:	je     40ae5b <isspace@plt+0x754b>
  40ad6d:	mov    rbx,QWORD PTR [rsp+0x28]
  40ad72:	mov    rdi,QWORD PTR [rbx+0x8]
  40ad76:	test   rdi,rdi
  40ad79:	mov    r14,QWORD PTR [rsp+0x10]
  40ad7e:	je     40ada8 <isspace@plt+0x7498>
  40ad80:	cmp    BYTE PTR [rsp+0x34],0x0
  40ad85:	mov    r12,QWORD PTR [rsp+0x20]
  40ad8a:	mov    r15,QWORD PTR [rsp+0x38]
  40ad8f:	jne    40adbf <isspace@plt+0x74af>
  40ad91:	cmp    DWORD PTR [rsp+0x30],0x0
  40ad96:	je     40ae13 <isspace@plt+0x7503>
  40ad98:	mov    rsi,QWORD PTR [rsp+0x8]
  40ad9d:	call   403480 <strcmp@plt>
  40ada2:	test   eax,eax
  40ada4:	jne    40ae13 <isspace@plt+0x7503>
  40ada6:	jmp    40adbf <isspace@plt+0x74af>
  40ada8:	mov    rdi,rbx
  40adab:	mov    rsi,QWORD PTR [rsp+0x8]
  40adb0:	call   420ab0 <isspace@plt+0x1d1a0>
  40adb5:	mov    r12,QWORD PTR [rsp+0x20]
  40adba:	mov    r15,QWORD PTR [rsp+0x38]
  40adbf:	lea    rdi,[rsp+0x60]
  40adc4:	mov    rsi,r15
  40adc7:	call   4100a0 <isspace@plt+0xc790>
  40adcc:	vmovups ymm0,YMMWORD PTR [rsp+0xd0]
  40add5:	mov    rax,QWORD PTR [rsp+0x40]
  40adda:	vmovups YMMWORD PTR [rax+0x70],ymm0
  40addf:	vmovups ymm0,YMMWORD PTR [rsp+0x60]
  40ade5:	vmovups ymm1,YMMWORD PTR [rsp+0x80]
  40adee:	vmovups ymm2,YMMWORD PTR [rsp+0xa0]
  40adf7:	vmovups ymm3,YMMWORD PTR [rsp+0xc0]
  40ae00:	vmovups YMMWORD PTR [rax+0x60],ymm3
  40ae05:	vmovups YMMWORD PTR [rax+0x40],ymm2
  40ae0a:	vmovups YMMWORD PTR [rax+0x20],ymm1
  40ae0f:	vmovups YMMWORD PTR [rax],ymm0
  40ae13:	mov    esi,0x5
  40ae18:	xor    eax,eax
  40ae1a:	mov    rdi,r14
  40ae1d:	mov    rdx,rbx
  40ae20:	mov    rbp,QWORD PTR [rsp+0x8]
  40ae25:	mov    rcx,rbp
  40ae28:	vzeroupper 
  40ae2b:	call   420610 <isspace@plt+0x1cd00>
  40ae30:	mov    rdi,rbp
  40ae33:	call   4030d0 <free@plt>
  40ae38:	mov    rbp,QWORD PTR [rsp+0x48]
  40ae3d:	mov    rdi,QWORD PTR [rbp+0x8]
  40ae41:	add    rbp,0x8
  40ae45:	test   rdi,rdi
  40ae48:	jne    40abc6 <isspace@plt+0x72b6>
  40ae4e:	jmp    40affb <isspace@plt+0x76eb>
  40ae53:	mov    rdi,r15
  40ae56:	call   412190 <isspace@plt+0xe880>
  40ae5b:	call   403130 <__errno_location@plt>
  40ae60:	mov    edi,DWORD PTR [rax]
  40ae62:	call   403880 <strerror@plt>
  40ae67:	mov    rcx,rax
  40ae6a:	lea    rsi,[rip+0x25b44]        # 4309b5 <isspace@plt+0x2d0a5>
  40ae71:	xor    eax,eax
  40ae73:	mov    rdi,QWORD PTR [rsp+0x10]
  40ae78:	mov    rbx,QWORD PTR [rsp+0x8]
  40ae7d:	mov    rdx,rbx
  40ae80:	call   42a150 <isspace@plt+0x26840>
  40ae85:	mov    rdi,rbx
  40ae88:	call   4030d0 <free@plt>
  40ae8d:	xor    ebx,ebx
  40ae8f:	jmp    40ab2f <isspace@plt+0x721f>
  40ae94:	mov    rdi,QWORD PTR [rbx+0x8]
  40ae98:	test   rdi,rdi
  40ae9b:	je     40aecd <isspace@plt+0x75bd>
  40ae9d:	mov    rax,QWORD PTR [rsp+0x18]
  40aea2:	cmp    BYTE PTR [rax+0x68],0x21
  40aea6:	jne    40b002 <isspace@plt+0x76f2>
  40aeac:	lea    rbp,[rsp+0x180]
  40aeb4:	mov    QWORD PTR [rsp+0x180],rdi
  40aebc:	mov    QWORD PTR [rsp+0x188],0x0
  40aec8:	jmp    40abb8 <isspace@plt+0x72a8>
  40aecd:	cmp    DWORD PTR [rbx+0x14],0xffffffff
  40aed1:	je     40b02d <isspace@plt+0x771d>
  40aed7:	mov    rdi,QWORD PTR [rbp+0x0]
  40aedb:	mov    esi,0x71
  40aee0:	call   4032f0 <strchr@plt>
  40aee5:	test   rax,rax
  40aee8:	je     40b04a <isspace@plt+0x773a>
  40aeee:	mov    esi,0x4
  40aef3:	xor    ecx,ecx
  40aef5:	xor    eax,eax
  40aef7:	mov    rdi,r14
  40aefa:	mov    rdx,rbx
  40aefd:	call   420610 <isspace@plt+0x1cd00>
  40af02:	test   al,al
  40af04:	jne    40af15 <isspace@plt+0x7605>
  40af06:	mov    rax,QWORD PTR [rsp+0x18]
  40af0b:	cmp    BYTE PTR [rax+0x68],0x21
  40af0f:	jne    40b089 <isspace@plt+0x7779>
  40af15:	cmp    BYTE PTR [rsp+0x7],0x0
  40af1a:	je     40af37 <isspace@plt+0x7627>
  40af1c:	mov    rdi,r15
  40af1f:	call   410a90 <isspace@plt+0xd180>
  40af24:	xor    edi,edi
  40af26:	mov    rsi,rax
  40af29:	call   417690 <isspace@plt+0x13d80>
  40af2e:	mov    QWORD PTR [r12],rax
  40af32:	mov    QWORD PTR [r12+0x8],rdx
  40af37:	mov    r12,r15
  40af3a:	mov    rax,QWORD PTR [r14+0x9a0]
  40af41:	mov    r15b,BYTE PTR [rax+0x58]
  40af45:	mov    rdi,QWORD PTR [r13+0x18]
  40af49:	call   41f710 <isspace@plt+0x1be00>
  40af4e:	test   rax,rax
  40af51:	je     40afd9 <isspace@plt+0x76c9>
  40af57:	mov    rbx,rax
  40af5a:	lea    r14,[rsp+0xf0]
  40af62:	test   r15b,r15b
  40af65:	je     40af81 <isspace@plt+0x7671>
  40af67:	mov    rdi,rbx
  40af6a:	call   41ff60 <isspace@plt+0x1c650>
  40af6f:	mov    QWORD PTR [rsp+0xf0],rax
  40af77:	mov    QWORD PTR [rsp+0xf8],rdx
  40af7f:	jmp    40af93 <isspace@plt+0x7683>
  40af81:	mov    rax,QWORD PTR [rsp+0x20]
  40af86:	vmovups xmm0,XMMWORD PTR [rax]
  40af8a:	vmovaps XMMWORD PTR [rsp+0xf0],xmm0
  40af93:	mov    rax,QWORD PTR [rsp+0x28]
  40af98:	mov    edx,DWORD PTR [rax+0x14]
  40af9b:	mov    rdi,r12
  40af9e:	mov    rsi,r14
  40afa1:	call   412530 <isspace@plt+0xec20>
  40afa6:	cmp    rax,0xffffffffffffffff
  40afaa:	je     40b0c5 <isspace@plt+0x77b5>
  40afb0:	mov    rbp,rax
  40afb3:	mov    rdi,r14
  40afb6:	call   417460 <isspace@plt+0x13b50>
  40afbb:	cmp    rbp,rax
  40afbe:	jne    40b0c5 <isspace@plt+0x77b5>
  40afc4:	test   r15b,r15b
  40afc7:	je     40afd9 <isspace@plt+0x76c9>
  40afc9:	mov    rdi,rbx
  40afcc:	call   41f7f0 <isspace@plt+0x1bee0>
  40afd1:	mov    rbx,rax
  40afd4:	test   rax,rax
  40afd7:	jne    40af62 <isspace@plt+0x7652>
  40afd9:	xor    esi,esi
  40afdb:	mov    rdi,r12
  40afde:	call   412400 <isspace@plt+0xeaf0>
  40afe3:	mov    esi,0x5
  40afe8:	xor    ecx,ecx
  40afea:	xor    eax,eax
  40afec:	mov    rdi,QWORD PTR [rsp+0x10]
  40aff1:	mov    rdx,QWORD PTR [rsp+0x28]
  40aff6:	call   420610 <isspace@plt+0x1cd00>
  40affb:	mov    bl,0x1
  40affd:	jmp    40ab2f <isspace@plt+0x721f>
  40b002:	mov    rax,QWORD PTR [r14+0x9a0]
  40b009:	cmp    BYTE PTR [rax+0x58],0x0
  40b00d:	je     40b036 <isspace@plt+0x7726>
  40b00f:	lea    rsi,[rip+0x258b1]        # 4308c7 <isspace@plt+0x2cfb7>
  40b016:	jmp    40b090 <isspace@plt+0x7780>
  40b018:	call   403130 <__errno_location@plt>
  40b01d:	mov    edi,DWORD PTR [rax]
  40b01f:	test   edi,edi
  40b021:	je     40b071 <isspace@plt+0x7761>
  40b023:	call   403880 <strerror@plt>
  40b028:	mov    rcx,rax
  40b02b:	jmp    40b078 <isspace@plt+0x7768>
  40b02d:	lea    rsi,[rip+0x25810]        # 430844 <isspace@plt+0x2cf34>
  40b034:	jmp    40b090 <isspace@plt+0x7780>
  40b036:	cmp    BYTE PTR [rsp+0x7],0x0
  40b03b:	jne    40aeac <isspace@plt+0x759c>
  40b041:	lea    rsi,[rip+0x258b1]        # 4308f9 <isspace@plt+0x2cfe9>
  40b048:	jmp    40b090 <isspace@plt+0x7780>
  40b04a:	lea    rsi,[rip+0x25805]        # 430856 <isspace@plt+0x2cf46>
  40b051:	jmp    40b090 <isspace@plt+0x7780>
  40b053:	lea    rsi,[rip+0x25914]        # 43096e <isspace@plt+0x2d05e>
  40b05a:	xor    eax,eax
  40b05c:	mov    rdi,r14
  40b05f:	mov    rbx,QWORD PTR [rsp+0x8]
  40b064:	mov    rdx,rbx
  40b067:	call   42a150 <isspace@plt+0x26840>
  40b06c:	jmp    40ae85 <isspace@plt+0x7575>
  40b071:	lea    rcx,[rip+0x2591e]        # 430996 <isspace@plt+0x2d086>
  40b078:	lea    rsi,[rip+0x25936]        # 4309b5 <isspace@plt+0x2d0a5>
  40b07f:	xor    eax,eax
  40b081:	mov    rdi,r14
  40b084:	jmp    40ae78 <isspace@plt+0x7568>
  40b089:	lea    rsi,[rip+0x257f5]        # 430885 <isspace@plt+0x2cf75>
  40b090:	xor    ebx,ebx
  40b092:	xor    eax,eax
  40b094:	mov    rdi,r14
  40b097:	call   42a150 <isspace@plt+0x26840>
  40b09c:	jmp    40ab2f <isspace@plt+0x721f>
  40b0a1:	lea    rsi,[rip+0x25881]        # 430929 <isspace@plt+0x2d019>
  40b0a8:	jmp    40b0b1 <isspace@plt+0x77a1>
  40b0aa:	lea    rsi,[rip+0x258a8]        # 430959 <isspace@plt+0x2d049>
  40b0b1:	xor    eax,eax
  40b0b3:	mov    rdi,r14
  40b0b6:	call   42a150 <isspace@plt+0x26840>
  40b0bb:	mov    rbx,QWORD PTR [rsp+0x8]
  40b0c0:	jmp    40ae85 <isspace@plt+0x7575>
  40b0c5:	lea    rsi,[rip+0x257e3]        # 4308af <isspace@plt+0x2cf9f>
  40b0cc:	xor    ebx,ebx
  40b0ce:	xor    eax,eax
  40b0d0:	mov    rdi,QWORD PTR [rsp+0x10]
  40b0d5:	jmp    40b097 <isspace@plt+0x7787>
  40b0d7:	call   403280 <__stack_chk_fail@plt>
  40b0dc:	nop    DWORD PTR [rax+0x0]
  40b0e0:	push   rbp
  40b0e1:	push   r15
  40b0e3:	push   r14
  40b0e5:	push   r13
  40b0e7:	push   r12
  40b0e9:	push   rbx
  40b0ea:	sub    rsp,0x68
  40b0ee:	mov    QWORD PTR [rsp+0x8],r9
  40b0f3:	mov    r15,r8
  40b0f6:	mov    r12,rdx
  40b0f9:	mov    r13,rsi
  40b0fc:	mov    rbx,rdi
  40b0ff:	mov    rax,QWORD PTR fs:0x28
  40b108:	mov    QWORD PTR [rsp+0x60],rax
  40b10d:	mov    rax,QWORD PTR [rcx]
  40b110:	mov    QWORD PTR [rsp+0x20],rax
  40b115:	lea    rax,[rip+0x22000]        # 42d11c <isspace@plt+0x2980c>
  40b11c:	vmovq  xmm0,rax
  40b121:	lea    rax,[rip+0x258a2]        # 4309ca <isspace@plt+0x2d0ba>
  40b128:	vmovq  xmm1,rax
  40b12d:	vpunpcklqdq xmm0,xmm1,xmm0
  40b131:	vmovdqu XMMWORD PTR [rsp+0x28],xmm0
  40b137:	vpxor  xmm0,xmm0,xmm0
  40b13b:	vmovdqu YMMWORD PTR [rsp+0x38],ymm0
  40b141:	mov    QWORD PTR [rsp+0x58],0x0
  40b14a:	mov    rsi,QWORD PTR [rcx+0x8]
  40b14e:	test   rsi,rsi
  40b151:	je     40b15c <isspace@plt+0x784c>
  40b153:	mov    rbp,rcx
  40b156:	add    rbp,0x8
  40b15a:	jmp    40b173 <isspace@plt+0x7863>
  40b15c:	lea    rbp,[rsp+0x10]
  40b161:	lea    rsi,[rip+0x249c9]        # 42fb31 <isspace@plt+0x2c221>
  40b168:	vmovq  xmm0,rsi
  40b16d:	vmovdqa XMMWORD PTR [rsp+0x10],xmm0
  40b173:	mov    r14d,0x4
  40b179:	nop    DWORD PTR [rax+0x0]
  40b180:	mov    rdi,rbx
  40b183:	vzeroupper 
  40b186:	call   40d6d0 <isspace@plt+0x9dc0>
  40b18b:	test   rax,rax
  40b18e:	je     40b1de <isspace@plt+0x78ce>
  40b190:	mov    rdi,rax
  40b193:	call   403850 <strdup@plt>
  40b198:	mov    QWORD PTR [rsp+r14*8+0x18],rax
  40b19d:	test   rax,rax
  40b1a0:	je     40b1de <isspace@plt+0x78ce>
  40b1a2:	cmp    r14,0x6
  40b1a6:	ja     40b1b6 <isspace@plt+0x78a6>
  40b1a8:	mov    rsi,QWORD PTR [rbp+r14*8-0x18]
  40b1ad:	add    r14,0x1
  40b1b1:	test   rsi,rsi
  40b1b4:	jne    40b180 <isspace@plt+0x7870>
  40b1b6:	mov    QWORD PTR [rsp+0x58],0x0
  40b1bf:	lea    rcx,[rsp+0x20]
  40b1c4:	mov    rdi,rbx
  40b1c7:	mov    rsi,r13
  40b1ca:	mov    rdx,r12
  40b1cd:	mov    r8,r15
  40b1d0:	mov    r9,QWORD PTR [rsp+0x8]
  40b1d5:	call   40a6c0 <isspace@plt+0x6db0>
  40b1da:	mov    ebx,eax
  40b1dc:	jmp    40b1e0 <isspace@plt+0x78d0>
  40b1de:	xor    ebx,ebx
  40b1e0:	mov    rdi,QWORD PTR [rsp+0x38]
  40b1e5:	call   4030d0 <free@plt>
  40b1ea:	mov    rdi,QWORD PTR [rsp+0x40]
  40b1ef:	call   4030d0 <free@plt>
  40b1f4:	mov    rdi,QWORD PTR [rsp+0x48]
  40b1f9:	call   4030d0 <free@plt>
  40b1fe:	mov    rdi,QWORD PTR [rsp+0x50]
  40b203:	call   4030d0 <free@plt>
  40b208:	mov    rdi,QWORD PTR [rsp+0x58]
  40b20d:	call   4030d0 <free@plt>
  40b212:	mov    rax,QWORD PTR fs:0x28
  40b21b:	cmp    rax,QWORD PTR [rsp+0x60]
  40b220:	jne    40b233 <isspace@plt+0x7923>
  40b222:	mov    eax,ebx
  40b224:	add    rsp,0x68
  40b228:	pop    rbx
  40b229:	pop    r12
  40b22b:	pop    r13
  40b22d:	pop    r14
  40b22f:	pop    r15
  40b231:	pop    rbp
  40b232:	ret    
  40b233:	call   403280 <__stack_chk_fail@plt>
  40b238:	nop    DWORD PTR [rax+rax*1+0x0]
  40b240:	push   r15
  40b242:	push   r14
  40b244:	push   r13
  40b246:	push   r12
  40b248:	push   rbx
  40b249:	sub    rsp,0x10
  40b24d:	mov    r15,rdi
  40b250:	mov    rax,QWORD PTR fs:0x28
  40b259:	mov    QWORD PTR [rsp+0x8],rax
  40b25e:	cmp    QWORD PTR [rcx+0x10],0x0
  40b263:	je     40b29c <isspace@plt+0x798c>
  40b265:	lea    rsi,[rip+0x25773]        # 4309df <isspace@plt+0x2d0cf>
  40b26c:	xor    ebx,ebx
  40b26e:	xor    eax,eax
  40b270:	mov    rdi,r15
  40b273:	call   42a150 <isspace@plt+0x26840>
  40b278:	mov    rax,QWORD PTR fs:0x28
  40b281:	cmp    rax,QWORD PTR [rsp+0x8]
  40b286:	jne    40b3a8 <isspace@plt+0x7a98>
  40b28c:	mov    eax,ebx
  40b28e:	add    rsp,0x10
  40b292:	pop    rbx
  40b293:	pop    r12
  40b295:	pop    r13
  40b297:	pop    r14
  40b299:	pop    r15
  40b29b:	ret    
  40b29c:	mov    r14,rsi
  40b29f:	test   rsi,rsi
  40b2a2:	je     40b350 <isspace@plt+0x7a40>
  40b2a8:	mov    r13,rcx
  40b2ab:	cmp    BYTE PTR [rdx+0x68],0x21
  40b2af:	je     40b2c1 <isspace@plt+0x79b1>
  40b2b1:	mov    rdi,r14
  40b2b4:	call   421ea0 <isspace@plt+0x1e590>
  40b2b9:	test   al,al
  40b2bb:	je     40b370 <isspace@plt+0x7a60>
  40b2c1:	mov    rsi,QWORD PTR [r13+0x8]
  40b2c5:	test   rsi,rsi
  40b2c8:	je     40b357 <isspace@plt+0x7a47>
  40b2ce:	add    r13,0x10
  40b2d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b2dc:	nop    DWORD PTR [rax+0x0]
  40b2e0:	mov    rdi,r15
  40b2e3:	call   40d6d0 <isspace@plt+0x9dc0>
  40b2e8:	test   rax,rax
  40b2eb:	je     40b350 <isspace@plt+0x7a40>
  40b2ed:	mov    r12,rax
  40b2f0:	call   403130 <__errno_location@plt>
  40b2f5:	mov    rbx,rax
  40b2f8:	mov    DWORD PTR [rax],0x0
  40b2fe:	mov    rdi,r15
  40b301:	mov    rsi,r12
  40b304:	call   421da0 <isspace@plt+0x1e490>
  40b309:	test   al,al
  40b30b:	je     40b37c <isspace@plt+0x7a6c>
  40b30d:	mov    rsi,QWORD PTR [r13+0x0]
  40b311:	add    r13,0x8
  40b315:	test   rsi,rsi
  40b318:	jne    40b2e0 <isspace@plt+0x79d0>
  40b31a:	mov    rbx,QWORD PTR [r15+0x30]
  40b31e:	mov    rax,r14
  40b321:	cmp    rbx,r14
  40b324:	je     40b345 <isspace@plt+0x7a35>
  40b326:	mov    rdi,r14
  40b329:	mov    rsi,rbx
  40b32c:	call   421f00 <isspace@plt+0x1e5f0>
  40b331:	mov    rdi,r14
  40b334:	call   422030 <isspace@plt+0x1e720>
  40b339:	mov    rdi,rbx
  40b33c:	call   421b70 <isspace@plt+0x1e260>
  40b341:	mov    rax,QWORD PTR [r15+0x30]
  40b345:	cmp    rax,r14
  40b348:	setne  bl
  40b34b:	jmp    40b278 <isspace@plt+0x7968>
  40b350:	xor    ebx,ebx
  40b352:	jmp    40b278 <isspace@plt+0x7968>
  40b357:	mov    rax,QWORD PTR [r14+0x10]
  40b35b:	cmp    DWORD PTR [rax+0xb0],0x2
  40b362:	jl     40b38c <isspace@plt+0x7a7c>
  40b364:	lea    rsi,[rip+0x2568c]        # 4309f7 <isspace@plt+0x2d0e7>
  40b36b:	jmp    40b26c <isspace@plt+0x795c>
  40b370:	lea    rsi,[rip+0x256b0]        # 430a27 <isspace@plt+0x2d117>
  40b377:	jmp    40b26c <isspace@plt+0x795c>
  40b37c:	mov    edi,DWORD PTR [rbx]
  40b37e:	test   edi,edi
  40b380:	je     40b3ad <isspace@plt+0x7a9d>
  40b382:	call   403880 <strerror@plt>
  40b387:	mov    rcx,rax
  40b38a:	jmp    40b3b4 <isspace@plt+0x7aa4>
  40b38c:	mov    rdi,r14
  40b38f:	call   421380 <isspace@plt+0x1da70>
  40b394:	mov    rcx,QWORD PTR fs:0x28
  40b39d:	cmp    rcx,QWORD PTR [rsp+0x8]
  40b3a2:	je     40b28e <isspace@plt+0x797e>
  40b3a8:	call   403280 <__stack_chk_fail@plt>
  40b3ad:	lea    rcx,[rip+0x266cf]        # 431a83 <isspace@plt+0x2e173>
  40b3b4:	lea    rsi,[rip+0x2569b]        # 430a56 <isspace@plt+0x2d146>
  40b3bb:	xor    ebx,ebx
  40b3bd:	xor    eax,eax
  40b3bf:	mov    rdi,r15
  40b3c2:	mov    rdx,r12
  40b3c5:	call   42a150 <isspace@plt+0x26840>
  40b3ca:	jmp    40b278 <isspace@plt+0x7968>
  40b3cf:	nop
  40b3d0:	push   rbp
  40b3d1:	push   r14
  40b3d3:	push   rbx
  40b3d4:	sub    rsp,0x10
  40b3d8:	mov    r14,rcx
  40b3db:	mov    rbp,rsi
  40b3de:	mov    rbx,rdi
  40b3e1:	mov    rax,QWORD PTR fs:0x28
  40b3ea:	mov    QWORD PTR [rsp+0x8],rax
  40b3ef:	cmp    BYTE PTR [rdx+0x68],0x21
  40b3f3:	je     40b401 <isspace@plt+0x7af1>
  40b3f5:	mov    rdi,rbp
  40b3f8:	call   421ea0 <isspace@plt+0x1e590>
  40b3fd:	test   al,al
  40b3ff:	je     40b452 <isspace@plt+0x7b42>
  40b401:	mov    rdi,rbp
  40b404:	call   422030 <isspace@plt+0x1e720>
  40b409:	mov    rax,QWORD PTR [rbx+0x28]
  40b40d:	test   rax,rax
  40b410:	jne    40b42c <isspace@plt+0x7b1c>
  40b412:	jmp    40b438 <isspace@plt+0x7b28>
  40b414:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b41e:	xchg   ax,ax
  40b420:	mov    rax,QWORD PTR [rax+0x2e0]
  40b427:	test   rax,rax
  40b42a:	je     40b438 <isspace@plt+0x7b28>
  40b42c:	mov    rcx,QWORD PTR [rax+0x10]
  40b430:	cmp    BYTE PTR [rcx+0x18],0x0
  40b434:	jne    40b420 <isspace@plt+0x7b10>
  40b436:	jmp    40b471 <isspace@plt+0x7b61>
  40b438:	mov    rdi,QWORD PTR [r14+0x8]
  40b43c:	test   rdi,rdi
  40b43f:	je     40b467 <isspace@plt+0x7b57>
  40b441:	xor    esi,esi
  40b443:	mov    edx,0xa
  40b448:	call   4034c0 <strtol@plt>
  40b44d:	mov    rsi,rax
  40b450:	jmp    40b469 <isspace@plt+0x7b59>
  40b452:	lea    rsi,[rip+0x255ce]        # 430a27 <isspace@plt+0x2d117>
  40b459:	xor    ebp,ebp
  40b45b:	xor    eax,eax
  40b45d:	mov    rdi,rbx
  40b460:	call   42a150 <isspace@plt+0x26840>
  40b465:	jmp    40b474 <isspace@plt+0x7b64>
  40b467:	xor    esi,esi
  40b469:	mov    rdi,rbx
  40b46c:	call   424ed0 <isspace@plt+0x215c0>
  40b471:	mov    bpl,0x1
  40b474:	mov    rax,QWORD PTR fs:0x28
  40b47d:	cmp    rax,QWORD PTR [rsp+0x8]
  40b482:	jne    40b48f <isspace@plt+0x7b7f>
  40b484:	mov    eax,ebp
  40b486:	add    rsp,0x10
  40b48a:	pop    rbx
  40b48b:	pop    r14
  40b48d:	pop    rbp
  40b48e:	ret    
  40b48f:	call   403280 <__stack_chk_fail@plt>
  40b494:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b49e:	xchg   ax,ax
  40b4a0:	push   rax
  40b4a1:	mov    rax,QWORD PTR fs:0x28
  40b4aa:	mov    QWORD PTR [rsp],rax
  40b4ae:	mov    rdi,QWORD PTR [rcx+0x8]
  40b4b2:	test   rdi,rdi
  40b4b5:	jne    40b4cb <isspace@plt+0x7bbb>
  40b4b7:	lea    rdi,[rip+0x255af]        # 430a6d <isspace@plt+0x2d15d>
  40b4be:	call   403060 <getenv@plt>
  40b4c3:	mov    rdi,rax
  40b4c6:	test   rax,rax
  40b4c9:	je     40b4e6 <isspace@plt+0x7bd6>
  40b4cb:	call   403270 <chdir@plt>
  40b4d0:	test   eax,eax
  40b4d2:	sete   al
  40b4d5:	mov    rcx,QWORD PTR fs:0x28
  40b4de:	cmp    rcx,QWORD PTR [rsp]
  40b4e2:	jne    40b4ea <isspace@plt+0x7bda>
  40b4e4:	pop    rcx
  40b4e5:	ret    
  40b4e6:	xor    eax,eax
  40b4e8:	jmp    40b4d5 <isspace@plt+0x7bc5>
  40b4ea:	call   403280 <__stack_chk_fail@plt>
  40b4ef:	nop
  40b4f0:	push   rbp
  40b4f1:	push   r15
  40b4f3:	push   r14
  40b4f5:	push   r13
  40b4f7:	push   r12
  40b4f9:	push   rbx
  40b4fa:	sub    rsp,0x28
  40b4fe:	mov    r14,rcx
  40b501:	mov    rbp,rdi
  40b504:	mov    rax,QWORD PTR fs:0x28
  40b50d:	mov    QWORD PTR [rsp+0x20],rax
  40b512:	xor    ebx,ebx
  40b514:	xor    esi,esi
  40b516:	call   421da0 <isspace@plt+0x1e490>
  40b51b:	test   al,al
  40b51d:	je     40bb5a <isspace@plt+0x824a>
  40b523:	mov    rax,QWORD PTR [rbp+0x30]
  40b527:	mov    rax,QWORD PTR [rax+0x10]
  40b52b:	mov    r12,QWORD PTR [rax]
  40b52e:	call   403200 <getpid@plt>
  40b533:	movsxd rcx,eax
  40b536:	lea    rsi,[rip+0x25535]        # 430a72 <isspace@plt+0x2d162>
  40b53d:	lea    rdx,[rip+0x21bf2]        # 42d136 <isspace@plt+0x29826>
  40b544:	xor    eax,eax
  40b546:	mov    rdi,r12
  40b549:	call   4110f0 <isspace@plt+0xd7e0>
  40b54e:	lea    rsi,[rip+0x25531]        # 430a86 <isspace@plt+0x2d176>
  40b555:	xor    eax,eax
  40b557:	mov    rdi,r12
  40b55a:	call   4110f0 <isspace@plt+0xd7e0>
  40b55f:	lea    rbx,[rip+0x37b7a]        # 4430e0 <isspace@plt+0x3f7d0>
  40b566:	mov    rcx,QWORD PTR [rbx+0x28]
  40b56a:	test   rcx,rcx
  40b56d:	je     40b584 <isspace@plt+0x7c74>
  40b56f:	mov    rdx,QWORD PTR [rbx+0x18]
  40b573:	lea    rsi,[rip+0x25515]        # 430a8f <isspace@plt+0x2d17f>
  40b57a:	xor    eax,eax
  40b57c:	mov    rdi,r12
  40b57f:	call   4110f0 <isspace@plt+0xd7e0>
  40b584:	mov    rcx,QWORD PTR [rbx+0x88]
  40b58b:	test   rcx,rcx
  40b58e:	je     40b5a5 <isspace@plt+0x7c95>
  40b590:	mov    rdx,QWORD PTR [rbx+0x78]
  40b594:	lea    rsi,[rip+0x254f4]        # 430a8f <isspace@plt+0x2d17f>
  40b59b:	xor    eax,eax
  40b59d:	mov    rdi,r12
  40b5a0:	call   4110f0 <isspace@plt+0xd7e0>
  40b5a5:	mov    rcx,QWORD PTR [rbx+0xe8]
  40b5ac:	test   rcx,rcx
  40b5af:	je     40b5c9 <isspace@plt+0x7cb9>
  40b5b1:	mov    rdx,QWORD PTR [rbx+0xd8]
  40b5b8:	lea    rsi,[rip+0x254d0]        # 430a8f <isspace@plt+0x2d17f>
  40b5bf:	xor    eax,eax
  40b5c1:	mov    rdi,r12
  40b5c4:	call   4110f0 <isspace@plt+0xd7e0>
  40b5c9:	mov    rcx,QWORD PTR [rbx+0x148]
  40b5d0:	test   rcx,rcx
  40b5d3:	je     40b5ed <isspace@plt+0x7cdd>
  40b5d5:	mov    rdx,QWORD PTR [rbx+0x138]
  40b5dc:	lea    rsi,[rip+0x254ac]        # 430a8f <isspace@plt+0x2d17f>
  40b5e3:	xor    eax,eax
  40b5e5:	mov    rdi,r12
  40b5e8:	call   4110f0 <isspace@plt+0xd7e0>
  40b5ed:	mov    rcx,QWORD PTR [rbx+0x1a8]
  40b5f4:	test   rcx,rcx
  40b5f7:	je     40b611 <isspace@plt+0x7d01>
  40b5f9:	mov    rdx,QWORD PTR [rbx+0x198]
  40b600:	lea    rsi,[rip+0x25488]        # 430a8f <isspace@plt+0x2d17f>
  40b607:	xor    eax,eax
  40b609:	mov    rdi,r12
  40b60c:	call   4110f0 <isspace@plt+0xd7e0>
  40b611:	mov    rcx,QWORD PTR [rbx+0x208]
  40b618:	test   rcx,rcx
  40b61b:	je     40b635 <isspace@plt+0x7d25>
  40b61d:	mov    rdx,QWORD PTR [rbx+0x1f8]
  40b624:	lea    rsi,[rip+0x25464]        # 430a8f <isspace@plt+0x2d17f>
  40b62b:	xor    eax,eax
  40b62d:	mov    rdi,r12
  40b630:	call   4110f0 <isspace@plt+0xd7e0>
  40b635:	mov    rdi,QWORD PTR [rbp+0x820]
  40b63c:	call   408880 <isspace@plt+0x4f70>
  40b641:	test   al,al
  40b643:	jne    40b66c <isspace@plt+0x7d5c>
  40b645:	lea    rsi,[rip+0x2544f]        # 430a9b <isspace@plt+0x2d18b>
  40b64c:	xor    eax,eax
  40b64e:	mov    rdi,r12
  40b651:	call   4110f0 <isspace@plt+0xd7e0>
  40b656:	mov    rdi,QWORD PTR [rbp+0x820]
  40b65d:	lea    rsi,[rip+0x22ac]        # 40d910 <isspace@plt+0xa000>
  40b664:	mov    rdx,r12
  40b667:	call   4088b0 <isspace@plt+0x4fa0>
  40b66c:	mov    rdi,QWORD PTR [rbx+0x10]
  40b670:	call   408880 <isspace@plt+0x4f70>
  40b675:	test   al,al
  40b677:	jne    40b68e <isspace@plt+0x7d7e>
  40b679:	mov    rdx,QWORD PTR [rbx+0x18]
  40b67d:	lea    rsi,[rip+0x2562f]        # 430cb3 <isspace@plt+0x2d3a3>
  40b684:	xor    eax,eax
  40b686:	mov    rdi,r12
  40b689:	call   4110f0 <isspace@plt+0xd7e0>
  40b68e:	mov    rdi,QWORD PTR [rbx+0x10]
  40b692:	lea    rsi,[rip+0x2567]        # 40dc00 <isspace@plt+0xa2f0>
  40b699:	mov    rdx,r12
  40b69c:	call   4088b0 <isspace@plt+0x4fa0>
  40b6a1:	mov    rdi,QWORD PTR [rbx+0x70]
  40b6a5:	call   408880 <isspace@plt+0x4f70>
  40b6aa:	test   al,al
  40b6ac:	jne    40b6c3 <isspace@plt+0x7db3>
  40b6ae:	mov    rdx,QWORD PTR [rbx+0x78]
  40b6b2:	lea    rsi,[rip+0x255fa]        # 430cb3 <isspace@plt+0x2d3a3>
  40b6b9:	xor    eax,eax
  40b6bb:	mov    rdi,r12
  40b6be:	call   4110f0 <isspace@plt+0xd7e0>
  40b6c3:	mov    rdi,QWORD PTR [rbx+0x70]
  40b6c7:	lea    rsi,[rip+0x2532]        # 40dc00 <isspace@plt+0xa2f0>
  40b6ce:	mov    rdx,r12
  40b6d1:	call   4088b0 <isspace@plt+0x4fa0>
  40b6d6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b6dd:	call   408880 <isspace@plt+0x4f70>
  40b6e2:	test   al,al
  40b6e4:	jne    40b6fe <isspace@plt+0x7dee>
  40b6e6:	mov    rdx,QWORD PTR [rbx+0xd8]
  40b6ed:	lea    rsi,[rip+0x255bf]        # 430cb3 <isspace@plt+0x2d3a3>
  40b6f4:	xor    eax,eax
  40b6f6:	mov    rdi,r12
  40b6f9:	call   4110f0 <isspace@plt+0xd7e0>
  40b6fe:	mov    QWORD PTR [rsp],r14
  40b702:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b709:	lea    rsi,[rip+0x24f0]        # 40dc00 <isspace@plt+0xa2f0>
  40b710:	mov    rdx,r12
  40b713:	call   4088b0 <isspace@plt+0x4fa0>
  40b718:	mov    rdi,QWORD PTR [rbx+0x190]
  40b71f:	call   408880 <isspace@plt+0x4f70>
  40b724:	test   al,al
  40b726:	jne    40b740 <isspace@plt+0x7e30>
  40b728:	mov    rdx,QWORD PTR [rbx+0x198]
  40b72f:	lea    rsi,[rip+0x2557d]        # 430cb3 <isspace@plt+0x2d3a3>
  40b736:	xor    eax,eax
  40b738:	mov    rdi,r12
  40b73b:	call   4110f0 <isspace@plt+0xd7e0>
  40b740:	mov    rdi,QWORD PTR [rbx+0x190]
  40b747:	lea    rsi,[rip+0x24b2]        # 40dc00 <isspace@plt+0xa2f0>
  40b74e:	mov    rdx,r12
  40b751:	call   4088b0 <isspace@plt+0x4fa0>
  40b756:	lea    rsi,[rip+0x25385]        # 430ae2 <isspace@plt+0x2d1d2>
  40b75d:	xor    eax,eax
  40b75f:	mov    rdi,r12
  40b762:	call   4110f0 <isspace@plt+0xd7e0>
  40b767:	mov    QWORD PTR [rsp+0x8],rbp
  40b76c:	mov    rdi,QWORD PTR [rbp+0x808]
  40b773:	lea    rsi,[rip+0x21e6]        # 40d960 <isspace@plt+0xa050>
  40b77a:	mov    rdx,r12
  40b77d:	call   4088b0 <isspace@plt+0x4fa0>
  40b782:	lea    rsi,[rip+0x25368]        # 430af1 <isspace@plt+0x2d1e1>
  40b789:	xor    eax,eax
  40b78b:	mov    rdi,r12
  40b78e:	call   4110f0 <isspace@plt+0xd7e0>
  40b793:	lea    rsi,[rip+0x25361]        # 430afb <isspace@plt+0x2d1eb>
  40b79a:	xor    eax,eax
  40b79c:	mov    rdi,r12
  40b79f:	call   4110f0 <isspace@plt+0xd7e0>
  40b7a4:	lea    rbx,[rip+0x35865]        # 441010 <isspace@plt+0x3d700>
  40b7ab:	movsx  edx,BYTE PTR [rbx]
  40b7ae:	mov    rcx,QWORD PTR [rbx+0x8]
  40b7b2:	mov    r13,QWORD PTR [rbx+0x18]
  40b7b6:	test   rcx,rcx
  40b7b9:	lea    r14,[rip+0x262c3]        # 431a83 <isspace@plt+0x2e173>
  40b7c0:	cmove  rcx,r14
  40b7c4:	lea    r15,[rip+0x2534d]        # 430b18 <isspace@plt+0x2d208>
  40b7cb:	xor    eax,eax
  40b7cd:	mov    rdi,r12
  40b7d0:	mov    rsi,r15
  40b7d3:	call   4110f0 <isspace@plt+0xd7e0>
  40b7d8:	movsx  edx,BYTE PTR [rbx+0x10]
  40b7dc:	test   r13,r13
  40b7df:	cmove  r13,r14
  40b7e3:	xor    eax,eax
  40b7e5:	mov    rdi,r12
  40b7e8:	mov    rsi,r15
  40b7eb:	mov    rcx,r13
  40b7ee:	call   4110f0 <isspace@plt+0xd7e0>
  40b7f3:	lea    rsi,[rip+0x25329]        # 430b23 <isspace@plt+0x2d213>
  40b7fa:	xor    eax,eax
  40b7fc:	mov    rdi,r12
  40b7ff:	call   4110f0 <isspace@plt+0xd7e0>
  40b804:	lea    rsi,[rip+0x25326]        # 430b31 <isspace@plt+0x2d221>
  40b80b:	xor    eax,eax
  40b80d:	mov    rdi,r12
  40b810:	call   4110f0 <isspace@plt+0xd7e0>
  40b815:	lea    rsi,[rip+0x25336]        # 430b52 <isspace@plt+0x2d242>
  40b81c:	xor    eax,eax
  40b81e:	mov    rdi,r12
  40b821:	call   4110f0 <isspace@plt+0xd7e0>
  40b826:	mov    ebp,0x8
  40b82b:	lea    rbx,[rip+0x36b3e]        # 442370 <isspace@plt+0x3ea60>
  40b832:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b83c:	nop    DWORD PTR [rax+0x0]
  40b840:	mov    rcx,QWORD PTR [rbx+rbp*1]
  40b844:	movsx  edx,BYTE PTR [rbx+rbp*1-0x8]
  40b849:	test   rcx,rcx
  40b84c:	cmove  rcx,r14
  40b850:	xor    eax,eax
  40b852:	mov    rdi,r12
  40b855:	mov    rsi,r15
  40b858:	call   4110f0 <isspace@plt+0xd7e0>
  40b85d:	add    rbp,0x10
  40b861:	cmp    rbp,0x148
  40b868:	jne    40b840 <isspace@plt+0x7f30>
  40b86a:	lea    rsi,[rip+0x25319]        # 430b8a <isspace@plt+0x2d27a>
  40b871:	xor    eax,eax
  40b873:	mov    rdi,r12
  40b876:	call   4110f0 <isspace@plt+0xd7e0>
  40b87b:	mov    r15,QWORD PTR [rsp+0x8]
  40b880:	mov    rdi,QWORD PTR [r15+0x818]
  40b887:	lea    rsi,[rip+0x2222]        # 40dab0 <isspace@plt+0xa1a0>
  40b88e:	mov    rdx,r12
  40b891:	call   4088b0 <isspace@plt+0x4fa0>
  40b896:	lea    rsi,[rip+0x25306]        # 430ba3 <isspace@plt+0x2d293>
  40b89d:	xor    eax,eax
  40b89f:	mov    rdi,r12
  40b8a2:	call   4110f0 <isspace@plt+0xd7e0>
  40b8a7:	mov    rdi,QWORD PTR [r15+0xaa0]
  40b8ae:	lea    rsi,[rip+0x22fb]        # 40dbb0 <isspace@plt+0xa2a0>
  40b8b5:	mov    rdx,r12
  40b8b8:	call   4088b0 <isspace@plt+0x4fa0>
  40b8bd:	lea    rsi,[rip+0x252f7]        # 430bbb <isspace@plt+0x2d2ab>
  40b8c4:	xor    eax,eax
  40b8c6:	mov    rdi,r12
  40b8c9:	call   4110f0 <isspace@plt+0xd7e0>
  40b8ce:	mov    rdi,QWORD PTR [r15]
  40b8d1:	call   QWORD PTR [rdi+0x90]
  40b8d7:	mov    rbx,rax
  40b8da:	lea    rsi,[rip+0x254e6]        # 430dc7 <isspace@plt+0x2d4b7>
  40b8e1:	xor    eax,eax
  40b8e3:	mov    rdi,r12
  40b8e6:	call   4110f0 <isspace@plt+0xd7e0>
  40b8eb:	lea    r14,[rip+0x25c6e]        # 431560 <isspace@plt+0x2dc50>
  40b8f2:	lea    r13,[rip+0x25513]        # 430e0c <isspace@plt+0x2d4fc>
  40b8f9:	xor    ebp,ebp
  40b8fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b900:	mov    esi,DWORD PTR [rbp+r14*1+0x0]
  40b905:	mov    rdi,rbx
  40b908:	call   4035d0 <termkey_get_keyname@plt>
  40b90d:	mov    rcx,rax
  40b910:	xor    eax,eax
  40b912:	mov    rdi,r12
  40b915:	mov    rsi,r13
  40b918:	mov    rdx,rcx
  40b91b:	call   4110f0 <isspace@plt+0xd7e0>
  40b920:	add    rbp,0x4
  40b924:	cmp    rbp,0xe8
  40b92b:	jne    40b900 <isspace@plt+0x7ff0>
  40b92d:	vxorps xmm0,xmm0,xmm0
  40b931:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  40b937:	lea    rdx,[rsp+0x18]
  40b93c:	lea    rsi,[rsp+0x10]
  40b941:	mov    rdi,r15
  40b944:	call   426280 <isspace@plt+0x22970>
  40b949:	test   al,al
  40b94b:	mov    r14,QWORD PTR [rsp]
  40b94f:	je     40ba77 <isspace@plt+0x8167>
  40b955:	lea    rsi,[rip+0x25357]        # 430cb3 <isspace@plt+0x2d3a3>
  40b95c:	lea    rdx,[rip+0x252c4]        # 430c27 <isspace@plt+0x2d317>
  40b963:	xor    r13d,r13d
  40b966:	xor    eax,eax
  40b968:	mov    rdi,r12
  40b96b:	call   4110f0 <isspace@plt+0xd7e0>
  40b970:	mov    rbp,QWORD PTR [rsp+0x10]
  40b975:	test   rbp,rbp
  40b978:	je     40b9df <isspace@plt+0x80cf>
  40b97a:	lea    r13,[rip+0x2519c]        # 430b1d <isspace@plt+0x2d20d>
  40b981:	jmp    40b9a0 <isspace@plt+0x8090>
  40b983:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b98d:	nop    DWORD PTR [rax]
  40b990:	xor    ebx,ebx
  40b992:	cmp    BYTE PTR [rbp+0x0],0x0
  40b996:	jne    40b9c2 <isspace@plt+0x80b2>
  40b998:	jmp    40b9d2 <isspace@plt+0x80c2>
  40b99a:	nop    WORD PTR [rax+rax*1+0x0]
  40b9a0:	mov    esi,0x3b
  40b9a5:	mov    rdi,rbp
  40b9a8:	call   4032f0 <strchr@plt>
  40b9ad:	test   rax,rax
  40b9b0:	je     40b990 <isspace@plt+0x8080>
  40b9b2:	mov    rbx,rax
  40b9b5:	add    rbx,0x1
  40b9b9:	mov    BYTE PTR [rax],0x0
  40b9bc:	cmp    BYTE PTR [rbp+0x0],0x0
  40b9c0:	je     40b9d2 <isspace@plt+0x80c2>
  40b9c2:	xor    eax,eax
  40b9c4:	mov    rdi,r12
  40b9c7:	mov    rsi,r13
  40b9ca:	mov    rdx,rbp
  40b9cd:	call   4110f0 <isspace@plt+0xd7e0>
  40b9d2:	mov    rbp,rbx
  40b9d5:	test   rbx,rbx
  40b9d8:	jne    40b9a0 <isspace@plt+0x8090>
  40b9da:	mov    r13,QWORD PTR [rsp+0x10]
  40b9df:	mov    rdi,r13
  40b9e2:	call   4030d0 <free@plt>
  40b9e7:	lea    rsi,[rip+0x252c5]        # 430cb3 <isspace@plt+0x2d3a3>
  40b9ee:	lea    rdx,[rip+0x25279]        # 430c6e <isspace@plt+0x2d35e>
  40b9f5:	xor    r13d,r13d
  40b9f8:	xor    eax,eax
  40b9fa:	mov    rdi,r12
  40b9fd:	call   4110f0 <isspace@plt+0xd7e0>
  40ba02:	mov    rbp,QWORD PTR [rsp+0x18]
  40ba07:	test   rbp,rbp
  40ba0a:	je     40ba6f <isspace@plt+0x815f>
  40ba0c:	lea    r13,[rip+0x2510a]        # 430b1d <isspace@plt+0x2d20d>
  40ba13:	jmp    40ba30 <isspace@plt+0x8120>
  40ba15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ba1f:	nop
  40ba20:	xor    ebx,ebx
  40ba22:	cmp    BYTE PTR [rbp+0x0],0x0
  40ba26:	jne    40ba52 <isspace@plt+0x8142>
  40ba28:	jmp    40ba62 <isspace@plt+0x8152>
  40ba2a:	nop    WORD PTR [rax+rax*1+0x0]
  40ba30:	mov    esi,0x3b
  40ba35:	mov    rdi,rbp
  40ba38:	call   4032f0 <strchr@plt>
  40ba3d:	test   rax,rax
  40ba40:	je     40ba20 <isspace@plt+0x8110>
  40ba42:	mov    rbx,rax
  40ba45:	add    rbx,0x1
  40ba49:	mov    BYTE PTR [rax],0x0
  40ba4c:	cmp    BYTE PTR [rbp+0x0],0x0
  40ba50:	je     40ba62 <isspace@plt+0x8152>
  40ba52:	xor    eax,eax
  40ba54:	mov    rdi,r12
  40ba57:	mov    rsi,r13
  40ba5a:	mov    rdx,rbp
  40ba5d:	call   4110f0 <isspace@plt+0xd7e0>
  40ba62:	mov    rbp,rbx
  40ba65:	test   rbx,rbx
  40ba68:	jne    40ba30 <isspace@plt+0x8120>
  40ba6a:	mov    r13,QWORD PTR [rsp+0x18]
  40ba6f:	mov    rdi,r13
  40ba72:	call   4030d0 <free@plt>
  40ba77:	lea    rsi,[rip+0x2523c]        # 430cba <isspace@plt+0x2d3aa>
  40ba7e:	xor    eax,eax
  40ba80:	mov    rdi,r12
  40ba83:	call   4110f0 <isspace@plt+0xd7e0>
  40ba88:	lea    rbx,[rip+0x252c8]        # 430d57 <isspace@plt+0x2d447>
  40ba8f:	lea    rdx,[rip+0x25243]        # 430cd9 <isspace@plt+0x2d3c9>
  40ba96:	lea    r13,[rip+0x252c6]        # 430d63 <isspace@plt+0x2d453>
  40ba9d:	xor    eax,eax
  40ba9f:	mov    rdi,r12
  40baa2:	mov    rsi,rbx
  40baa5:	mov    rcx,r13
  40baa8:	call   4110f0 <isspace@plt+0xd7e0>
  40baad:	lea    rdx,[rip+0x25236]        # 430cea <isspace@plt+0x2d3da>
  40bab4:	lea    rbp,[rip+0x252ac]        # 430d67 <isspace@plt+0x2d457>
  40babb:	xor    eax,eax
  40babd:	mov    rdi,r12
  40bac0:	mov    rsi,rbx
  40bac3:	mov    rcx,rbp
  40bac6:	call   4110f0 <isspace@plt+0xd7e0>
  40bacb:	lea    rdx,[rip+0x25226]        # 430cf8 <isspace@plt+0x2d3e8>
  40bad2:	xor    eax,eax
  40bad4:	mov    rdi,r12
  40bad7:	mov    rsi,rbx
  40bada:	mov    rcx,rbp
  40badd:	call   4110f0 <isspace@plt+0xd7e0>
  40bae2:	lea    rdx,[rip+0x2522e]        # 430d17 <isspace@plt+0x2d407>
  40bae9:	xor    eax,eax
  40baeb:	mov    rdi,r12
  40baee:	mov    rsi,rbx
  40baf1:	mov    rcx,rbp
  40baf4:	call   4110f0 <isspace@plt+0xd7e0>
  40baf9:	lea    rdx,[rip+0x25231]        # 430d31 <isspace@plt+0x2d421>
  40bb00:	xor    eax,eax
  40bb02:	mov    rdi,r12
  40bb05:	mov    rsi,rbx
  40bb08:	mov    rcx,rbp
  40bb0b:	call   4110f0 <isspace@plt+0xd7e0>
  40bb10:	lea    rdx,[rip+0x2522e]        # 430d45 <isspace@plt+0x2d435>
  40bb17:	xor    eax,eax
  40bb19:	mov    rdi,r12
  40bb1c:	mov    rsi,rbx
  40bb1f:	mov    rcx,r13
  40bb22:	call   4110f0 <isspace@plt+0xd7e0>
  40bb27:	xor    esi,esi
  40bb29:	mov    rdi,r12
  40bb2c:	call   412400 <isspace@plt+0xeaf0>
  40bb31:	mov    rax,QWORD PTR [r15+0x30]
  40bb35:	mov    rdi,QWORD PTR [rax+0x18]
  40bb39:	xor    esi,esi
  40bb3b:	call   41ad60 <isspace@plt+0x17450>
  40bb40:	mov    rdx,QWORD PTR [r14+0x8]
  40bb44:	test   rdx,rdx
  40bb47:	je     40bb58 <isspace@plt+0x8248>
  40bb49:	mov    esi,0x44
  40bb4e:	xor    eax,eax
  40bb50:	mov    rdi,r15
  40bb53:	call   428140 <isspace@plt+0x24830>
  40bb58:	mov    bl,0x1
  40bb5a:	mov    rax,QWORD PTR fs:0x28
  40bb63:	cmp    rax,QWORD PTR [rsp+0x20]
  40bb68:	jne    40bb7b <isspace@plt+0x826b>
  40bb6a:	mov    eax,ebx
  40bb6c:	add    rsp,0x28
  40bb70:	pop    rbx
  40bb71:	pop    r12
  40bb73:	pop    r13
  40bb75:	pop    r14
  40bb77:	pop    r15
  40bb79:	pop    rbp
  40bb7a:	ret    
  40bb7b:	call   403280 <__stack_chk_fail@plt>
  40bb80:	push   rbp
  40bb81:	push   r15
  40bb83:	push   r14
  40bb85:	push   r13
  40bb87:	push   r12
  40bb89:	push   rbx
  40bb8a:	sub    rsp,0x18
  40bb8e:	mov    rbx,rcx
  40bb91:	mov    r15,rdx
  40bb94:	mov    rbp,rsi
  40bb97:	mov    r14,rdi
  40bb9a:	mov    rax,QWORD PTR fs:0x28
  40bba3:	mov    QWORD PTR [rsp+0x10],rax
  40bba8:	mov    rdi,QWORD PTR [rcx]
  40bbab:	mov    esi,0x2d
  40bbb0:	call   4032f0 <strchr@plt>
  40bbb5:	mov    r12,rax
  40bbb8:	mov    rsi,QWORD PTR [rbx+0x8]
  40bbbc:	mov    rdi,r14
  40bbbf:	call   427830 <isspace@plt+0x23f20>
  40bbc4:	mov    r13d,eax
  40bbc7:	test   rbp,rbp
  40bbca:	jne    40bbdd <isspace@plt+0x82cd>
  40bbcc:	test   r12,r12
  40bbcf:	je     40bbdd <isspace@plt+0x82cd>
  40bbd1:	mov    rdx,QWORD PTR [rbx]
  40bbd4:	lea    rsi,[rip+0x25239]        # 430e14 <isspace@plt+0x2d504>
  40bbdb:	jmp    40bc54 <isspace@plt+0x8344>
  40bbdd:	cmp    r13d,0x6
  40bbe1:	je     40bc4a <isspace@plt+0x833a>
  40bbe3:	mov    rax,QWORD PTR [rbx+0x10]
  40bbe7:	test   rax,rax
  40bbea:	je     40bc4a <isspace@plt+0x833a>
  40bbec:	cmp    QWORD PTR [rbx+0x18],0x0
  40bbf1:	je     40bc4a <isspace@plt+0x833a>
  40bbf3:	mov    QWORD PTR [rsp],rax
  40bbf7:	mov    rdi,r14
  40bbfa:	call   4275c0 <isspace@plt+0x23cb0>
  40bbff:	mov    QWORD PTR [rsp+0x8],rax
  40bc04:	test   rax,rax
  40bc07:	je     40bc9c <isspace@plt+0x838c>
  40bc0d:	mov    rdi,QWORD PTR [rbx+0x18]
  40bc11:	call   403850 <strdup@plt>
  40bc16:	mov    rcx,QWORD PTR [rsp+0x8]
  40bc1b:	mov    QWORD PTR [rcx+0x10],rax
  40bc1f:	test   rax,rax
  40bc22:	je     40bc9c <isspace@plt+0x838c>
  40bc24:	mov    r8,QWORD PTR [rsp+0x8]
  40bc29:	mov    al,BYTE PTR [r15+0x68]
  40bc2d:	xor    edx,edx
  40bc2f:	test   r12,r12
  40bc32:	je     40bc81 <isspace@plt+0x8371>
  40bc34:	cmp    al,0x21
  40bc36:	sete   dl
  40bc39:	mov    rdi,rbp
  40bc3c:	mov    esi,r13d
  40bc3f:	mov    rcx,QWORD PTR [rsp]
  40bc43:	call   427b30 <isspace@plt+0x24220>
  40bc48:	jmp    40bc95 <isspace@plt+0x8385>
  40bc4a:	mov    rdx,QWORD PTR [rbx]
  40bc4d:	lea    rsi,[rip+0x251d7]        # 430e2b <isspace@plt+0x2d51b>
  40bc54:	xor    ebp,ebp
  40bc56:	xor    eax,eax
  40bc58:	mov    rdi,r14
  40bc5b:	call   42a150 <isspace@plt+0x26840>
  40bc60:	mov    rax,QWORD PTR fs:0x28
  40bc69:	cmp    rax,QWORD PTR [rsp+0x10]
  40bc6e:	jne    40bcdd <isspace@plt+0x83cd>
  40bc70:	mov    eax,ebp
  40bc72:	add    rsp,0x18
  40bc76:	pop    rbx
  40bc77:	pop    r12
  40bc79:	pop    r13
  40bc7b:	pop    r14
  40bc7d:	pop    r15
  40bc7f:	pop    rbp
  40bc80:	ret    
  40bc81:	cmp    al,0x21
  40bc83:	sete   dl
  40bc86:	mov    rdi,r14
  40bc89:	mov    esi,r13d
  40bc8c:	mov    rcx,QWORD PTR [rsp]
  40bc90:	call   427a10 <isspace@plt+0x24100>
  40bc95:	mov    bpl,0x1
  40bc98:	test   al,al
  40bc9a:	jne    40bc60 <isspace@plt+0x8350>
  40bc9c:	mov    rcx,QWORD PTR [rbx+0x8]
  40bca0:	cmp    BYTE PTR [r15+0x68],0x21
  40bca5:	lea    rax,[rip+0x25dd7]        # 431a83 <isspace@plt+0x2e173>
  40bcac:	lea    r8,[rip+0x251af]        # 430e62 <isspace@plt+0x2d552>
  40bcb3:	cmove  r8,rax
  40bcb7:	lea    rsi,[rip+0x25184]        # 430e42 <isspace@plt+0x2d532>
  40bcbe:	xor    ebp,ebp
  40bcc0:	xor    eax,eax
  40bcc2:	mov    rdi,r14
  40bcc5:	mov    rdx,QWORD PTR [rsp]
  40bcc9:	call   42a150 <isspace@plt+0x26840>
  40bcce:	mov    rdi,r14
  40bcd1:	mov    rsi,QWORD PTR [rsp+0x8]
  40bcd6:	call   427630 <isspace@plt+0x23d20>
  40bcdb:	jmp    40bc60 <isspace@plt+0x8350>
  40bcdd:	call   403280 <__stack_chk_fail@plt>
  40bce2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bcec:	nop    DWORD PTR [rax+0x0]
  40bcf0:	push   rbp
  40bcf1:	push   r15
  40bcf3:	push   r14
  40bcf5:	push   r12
  40bcf7:	push   rbx
  40bcf8:	sub    rsp,0x10
  40bcfc:	mov    rbx,rcx
  40bcff:	mov    r12,rsi
  40bd02:	mov    r14,rdi
  40bd05:	mov    rax,QWORD PTR fs:0x28
  40bd0e:	mov    QWORD PTR [rsp+0x8],rax
  40bd13:	mov    rdi,QWORD PTR [rcx]
  40bd16:	mov    esi,0x2d
  40bd1b:	call   4032f0 <strchr@plt>
  40bd20:	mov    rbp,rax
  40bd23:	mov    rsi,QWORD PTR [rbx+0x8]
  40bd27:	mov    rdi,r14
  40bd2a:	call   427830 <isspace@plt+0x23f20>
  40bd2f:	mov    r15,QWORD PTR [rbx+0x10]
  40bd33:	test   r12,r12
  40bd36:	jne    40bd49 <isspace@plt+0x8439>
  40bd38:	test   rbp,rbp
  40bd3b:	je     40bd49 <isspace@plt+0x8439>
  40bd3d:	mov    rdx,QWORD PTR [rbx]
  40bd40:	lea    rsi,[rip+0x250cd]        # 430e14 <isspace@plt+0x2d504>
  40bd47:	jmp    40bd71 <isspace@plt+0x8461>
  40bd49:	cmp    eax,0x6
  40bd4c:	je     40bd67 <isspace@plt+0x8457>
  40bd4e:	test   r15,r15
  40bd51:	je     40bd67 <isspace@plt+0x8457>
  40bd53:	test   rbp,rbp
  40bd56:	je     40bd9c <isspace@plt+0x848c>
  40bd58:	mov    rdi,r12
  40bd5b:	mov    esi,eax
  40bd5d:	mov    rdx,r15
  40bd60:	call   4279b0 <isspace@plt+0x240a0>
  40bd65:	jmp    40bda9 <isspace@plt+0x8499>
  40bd67:	mov    rdx,QWORD PTR [rbx]
  40bd6a:	lea    rsi,[rip+0x2511d]        # 430e8e <isspace@plt+0x2d57e>
  40bd71:	xor    ebp,ebp
  40bd73:	xor    eax,eax
  40bd75:	mov    rdi,r14
  40bd78:	call   42a150 <isspace@plt+0x26840>
  40bd7d:	mov    rax,QWORD PTR fs:0x28
  40bd86:	cmp    rax,QWORD PTR [rsp+0x8]
  40bd8b:	jne    40bdcc <isspace@plt+0x84bc>
  40bd8d:	mov    eax,ebp
  40bd8f:	add    rsp,0x10
  40bd93:	pop    rbx
  40bd94:	pop    r12
  40bd96:	pop    r14
  40bd98:	pop    r15
  40bd9a:	pop    rbp
  40bd9b:	ret    
  40bd9c:	mov    rdi,r14
  40bd9f:	mov    esi,eax
  40bda1:	mov    rdx,r15
  40bda4:	call   427950 <isspace@plt+0x24040>
  40bda9:	mov    bpl,0x1
  40bdac:	test   al,al
  40bdae:	jne    40bd7d <isspace@plt+0x846d>
  40bdb0:	mov    rcx,QWORD PTR [rbx+0x8]
  40bdb4:	lea    rsi,[rip+0x250e6]        # 430ea1 <isspace@plt+0x2d591>
  40bdbb:	xor    ebp,ebp
  40bdbd:	xor    eax,eax
  40bdbf:	mov    rdi,r14
  40bdc2:	mov    rdx,r15
  40bdc5:	call   42a150 <isspace@plt+0x26840>
  40bdca:	jmp    40bd7d <isspace@plt+0x846d>
  40bdcc:	call   403280 <__stack_chk_fail@plt>
  40bdd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bddb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bde0:	push   rbp
  40bde1:	push   r15
  40bde3:	push   r14
  40bde5:	push   r13
  40bde7:	push   r12
  40bde9:	push   rbx
  40bdea:	sub    rsp,0x18
  40bdee:	mov    r12,rdi
  40bdf1:	mov    rax,QWORD PTR fs:0x28
  40bdfa:	mov    QWORD PTR [rsp+0x10],rax
  40bdff:	mov    rbx,QWORD PTR [rcx+0x8]
  40be03:	test   rbx,rbx
  40be06:	je     40bebf <isspace@plt+0x85af>
  40be0c:	mov    rbp,QWORD PTR [rcx+0x10]
  40be10:	test   rbp,rbp
  40be13:	je     40bebf <isspace@plt+0x85af>
  40be19:	mov    cl,BYTE PTR [rbp+0x0]
  40be1c:	mov    r13b,0x1
  40be1f:	test   cl,cl
  40be21:	je     40bed3 <isspace@plt+0x85c3>
  40be27:	lea    r14,[rsp+0x8]
  40be2c:	mov    r15,rsp
  40be2f:	nop
  40be30:	cmp    BYTE PTR [rbx],0x0
  40be33:	je     40bed3 <isspace@plt+0x85c3>
  40be39:	xor    eax,eax
  40be3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40be40:	cmp    rax,0x6
  40be44:	ja     40be4e <isspace@plt+0x853e>
  40be46:	mov    BYTE PTR [rsp+rax*1+0x8],cl
  40be4a:	add    rax,0x1
  40be4e:	movzx  ecx,BYTE PTR [rbp+0x1]
  40be52:	add    rbp,0x1
  40be56:	mov    edx,ecx
  40be58:	and    dl,0xc0
  40be5b:	cmp    dl,0x80
  40be5e:	je     40be40 <isspace@plt+0x8530>
  40be60:	xor    ecx,ecx
  40be62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be6c:	nop    DWORD PTR [rax+0x0]
  40be70:	cmp    rcx,0x6
  40be74:	ja     40be80 <isspace@plt+0x8570>
  40be76:	movzx  edx,BYTE PTR [rbx]
  40be79:	mov    BYTE PTR [rsp+rcx*1],dl
  40be7c:	add    rcx,0x1
  40be80:	movzx  edx,BYTE PTR [rbx+0x1]
  40be84:	add    rbx,0x1
  40be88:	and    dl,0xc0
  40be8b:	cmp    dl,0x80
  40be8e:	je     40be70 <isspace@plt+0x8560>
  40be90:	mov    BYTE PTR [rsp+rax*1+0x8],0x0
  40be95:	mov    BYTE PTR [rsp+rcx*1],0x0
  40be99:	mov    rdi,r14
  40be9c:	call   403850 <strdup@plt>
  40bea1:	mov    rdi,r12
  40bea4:	mov    rsi,r15
  40bea7:	mov    rdx,rax
  40beaa:	call   422a40 <isspace@plt+0x1f130>
  40beaf:	and    r13b,al
  40beb2:	mov    cl,BYTE PTR [rbp+0x0]
  40beb5:	test   cl,cl
  40beb7:	jne    40be30 <isspace@plt+0x8520>
  40bebd:	jmp    40bed3 <isspace@plt+0x85c3>
  40bebf:	lea    rsi,[rip+0x24ffb]        # 430ec1 <isspace@plt+0x2d5b1>
  40bec6:	xor    r13d,r13d
  40bec9:	xor    eax,eax
  40becb:	mov    rdi,r12
  40bece:	call   42a150 <isspace@plt+0x26840>
  40bed3:	mov    rax,QWORD PTR fs:0x28
  40bedc:	cmp    rax,QWORD PTR [rsp+0x10]
  40bee1:	jne    40bef9 <isspace@plt+0x85e9>
  40bee3:	and    r13b,0x1
  40bee7:	mov    eax,r13d
  40beea:	add    rsp,0x18
  40beee:	pop    rbx
  40beef:	pop    r12
  40bef1:	pop    r13
  40bef3:	pop    r14
  40bef5:	pop    r15
  40bef7:	pop    rbp
  40bef8:	ret    
  40bef9:	call   403280 <__stack_chk_fail@plt>
  40befe:	xchg   ax,ax
  40bf00:	push   rbx
  40bf01:	sub    rsp,0x10
  40bf05:	mov    rbx,rdi
  40bf08:	mov    rax,QWORD PTR fs:0x28
  40bf11:	mov    QWORD PTR [rsp+0x8],rax
  40bf16:	mov    rdi,QWORD PTR [rdi]
  40bf19:	xor    esi,esi
  40bf1b:	call   QWORD PTR [rdi+0x50]
  40bf1e:	xor    esi,esi
  40bf20:	mov    rdi,rbx
  40bf23:	call   421da0 <isspace@plt+0x1e490>
  40bf28:	mov    rcx,QWORD PTR fs:0x28
  40bf31:	cmp    rcx,QWORD PTR [rsp+0x8]
  40bf36:	jne    40bf3e <isspace@plt+0x862e>
  40bf38:	add    rsp,0x10
  40bf3c:	pop    rbx
  40bf3d:	ret    
  40bf3e:	call   403280 <__stack_chk_fail@plt>
  40bf43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bf4d:	nop    DWORD PTR [rax]
  40bf50:	push   r15
  40bf52:	push   r14
  40bf54:	push   r12
  40bf56:	push   rbx
  40bf57:	push   rax
  40bf58:	mov    r14,rdi
  40bf5b:	mov    rax,QWORD PTR fs:0x28
  40bf64:	mov    QWORD PTR [rsp],rax
  40bf68:	mov    rsi,QWORD PTR [rcx+0x8]
  40bf6c:	test   rsi,rsi
  40bf6f:	je     40bfbe <isspace@plt+0x86ae>
  40bf71:	mov    r12,rcx
  40bf74:	add    r12,0x10
  40bf78:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf80:	mov    rdi,r14
  40bf83:	call   40d6d0 <isspace@plt+0x9dc0>
  40bf88:	test   rax,rax
  40bf8b:	je     40bfd9 <isspace@plt+0x86c9>
  40bf8d:	mov    r15,rax
  40bf90:	call   403130 <__errno_location@plt>
  40bf95:	mov    rbx,rax
  40bf98:	mov    DWORD PTR [rax],0x0
  40bf9e:	mov    rdi,r14
  40bfa1:	mov    rsi,r15
  40bfa4:	call   421da0 <isspace@plt+0x1e490>
  40bfa9:	test   al,al
  40bfab:	je     40bfdd <isspace@plt+0x86cd>
  40bfad:	mov    rsi,QWORD PTR [r12]
  40bfb1:	add    r12,0x8
  40bfb5:	test   rsi,rsi
  40bfb8:	jne    40bf80 <isspace@plt+0x8670>
  40bfba:	mov    bl,0x1
  40bfbc:	jmp    40c00a <isspace@plt+0x86fa>
  40bfbe:	xor    esi,esi
  40bfc0:	mov    rdi,r14
  40bfc3:	call   421da0 <isspace@plt+0x1e490>
  40bfc8:	mov    rcx,QWORD PTR fs:0x28
  40bfd1:	cmp    rcx,QWORD PTR [rsp]
  40bfd5:	je     40c01b <isspace@plt+0x870b>
  40bfd7:	jmp    40c027 <isspace@plt+0x8717>
  40bfd9:	xor    ebx,ebx
  40bfdb:	jmp    40c00a <isspace@plt+0x86fa>
  40bfdd:	mov    edi,DWORD PTR [rbx]
  40bfdf:	test   edi,edi
  40bfe1:	je     40bfed <isspace@plt+0x86dd>
  40bfe3:	call   403880 <strerror@plt>
  40bfe8:	mov    rcx,rax
  40bfeb:	jmp    40bff4 <isspace@plt+0x86e4>
  40bfed:	lea    rcx,[rip+0x25a8f]        # 431a83 <isspace@plt+0x2e173>
  40bff4:	lea    rsi,[rip+0x24a5b]        # 430a56 <isspace@plt+0x2d146>
  40bffb:	xor    ebx,ebx
  40bffd:	xor    eax,eax
  40bfff:	mov    rdi,r14
  40c002:	mov    rdx,r15
  40c005:	call   42a150 <isspace@plt+0x26840>
  40c00a:	mov    rax,QWORD PTR fs:0x28
  40c013:	cmp    rax,QWORD PTR [rsp]
  40c017:	jne    40c027 <isspace@plt+0x8717>
  40c019:	mov    eax,ebx
  40c01b:	add    rsp,0x8
  40c01f:	pop    rbx
  40c020:	pop    r12
  40c022:	pop    r14
  40c024:	pop    r15
  40c026:	ret    
  40c027:	call   403280 <__stack_chk_fail@plt>
  40c02c:	nop    DWORD PTR [rax+0x0]
  40c030:	push   r15
  40c032:	push   r14
  40c034:	push   r13
  40c036:	push   r12
  40c038:	push   rbx
  40c039:	sub    rsp,0x10
  40c03d:	mov    r14,rcx
  40c040:	mov    r15,rdi
  40c043:	mov    rax,QWORD PTR fs:0x28
  40c04c:	mov    QWORD PTR [rsp+0x8],rax
  40c051:	mov    r13,QWORD PTR [rdi+0x28]
  40c055:	test   r13,r13
  40c058:	je     40c0cb <isspace@plt+0x87bb>
  40c05a:	mov    r12,rdx
  40c05d:	nop    DWORD PTR [rax]
  40c060:	mov    rbx,r13
  40c063:	mov    r13,QWORD PTR [r13+0x2e0]
  40c06a:	mov    rax,QWORD PTR [rbx+0x10]
  40c06e:	cmp    BYTE PTR [rax+0x18],0x0
  40c072:	jne    40c090 <isspace@plt+0x8780>
  40c074:	mov    rdi,QWORD PTR [rax]
  40c077:	call   410690 <isspace@plt+0xcd80>
  40c07c:	test   al,al
  40c07e:	je     40c088 <isspace@plt+0x8778>
  40c080:	cmp    BYTE PTR [r12+0x68],0x21
  40c086:	jne    40c090 <isspace@plt+0x8780>
  40c088:	mov    rdi,rbx
  40c08b:	call   422030 <isspace@plt+0x1e720>
  40c090:	test   r13,r13
  40c093:	jne    40c060 <isspace@plt+0x8750>
  40c095:	mov    rax,QWORD PTR [r15+0x28]
  40c099:	test   rax,rax
  40c09c:	jne    40c0ac <isspace@plt+0x879c>
  40c09e:	jmp    40c0cb <isspace@plt+0x87bb>
  40c0a0:	mov    rax,QWORD PTR [rax+0x2e0]
  40c0a7:	test   rax,rax
  40c0aa:	je     40c0cb <isspace@plt+0x87bb>
  40c0ac:	mov    rcx,QWORD PTR [rax+0x10]
  40c0b0:	cmp    BYTE PTR [rcx+0x18],0x0
  40c0b4:	jne    40c0a0 <isspace@plt+0x8790>
  40c0b6:	lea    rsi,[rip+0x2496a]        # 430a27 <isspace@plt+0x2d117>
  40c0bd:	xor    ebx,ebx
  40c0bf:	xor    eax,eax
  40c0c1:	mov    rdi,r15
  40c0c4:	call   42a150 <isspace@plt+0x26840>
  40c0c9:	jmp    40c0f1 <isspace@plt+0x87e1>
  40c0cb:	mov    rdi,QWORD PTR [r14+0x8]
  40c0cf:	test   rdi,rdi
  40c0d2:	je     40c0e5 <isspace@plt+0x87d5>
  40c0d4:	xor    esi,esi
  40c0d6:	mov    edx,0xa
  40c0db:	call   4034c0 <strtol@plt>
  40c0e0:	mov    rsi,rax
  40c0e3:	jmp    40c0e7 <isspace@plt+0x87d7>
  40c0e5:	xor    esi,esi
  40c0e7:	mov    rdi,r15
  40c0ea:	call   424ed0 <isspace@plt+0x215c0>
  40c0ef:	mov    bl,0x1
  40c0f1:	mov    rax,QWORD PTR fs:0x28
  40c0fa:	cmp    rax,QWORD PTR [rsp+0x8]
  40c0ff:	jne    40c111 <isspace@plt+0x8801>
  40c101:	mov    eax,ebx
  40c103:	add    rsp,0x10
  40c107:	pop    rbx
  40c108:	pop    r12
  40c10a:	pop    r13
  40c10c:	pop    r14
  40c10e:	pop    r15
  40c110:	ret    
  40c111:	call   403280 <__stack_chk_fail@plt>
  40c116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c120:	push   rbp
  40c121:	mov    rbp,rsp
  40c124:	push   r15
  40c126:	push   r14
  40c128:	push   r13
  40c12a:	push   r12
  40c12c:	push   rbx
  40c12d:	and    rsp,0xffffffffffffffe0
  40c131:	sub    rsp,0x1c0
  40c138:	mov    r14,rsi
  40c13b:	mov    r12,rdi
  40c13e:	mov    rax,QWORD PTR fs:0x28
  40c147:	mov    QWORD PTR [rsp+0x1a0],rax
  40c14f:	mov    rsi,QWORD PTR [rcx+0x8]
  40c153:	test   rsi,rsi
  40c156:	je     40c167 <isspace@plt+0x8857>
  40c158:	cmp    BYTE PTR [rsi],0x0
  40c15b:	je     40c167 <isspace@plt+0x8857>
  40c15d:	mov    rbx,rcx
  40c160:	cmp    QWORD PTR [rcx+0x18],0x0
  40c165:	je     40c1a2 <isspace@plt+0x8892>
  40c167:	lea    rsi,[rip+0x24d80]        # 430eee <isspace@plt+0x2d5de>
  40c16e:	xor    ebx,ebx
  40c170:	xor    eax,eax
  40c172:	mov    rdi,r12
  40c175:	call   42a150 <isspace@plt+0x26840>
  40c17a:	mov    rax,QWORD PTR fs:0x28
  40c183:	cmp    rax,QWORD PTR [rsp+0x1a0]
  40c18b:	jne    40c8c8 <isspace@plt+0x8fb8>
  40c191:	mov    eax,ebx
  40c193:	lea    rsp,[rbp-0x28]
  40c197:	pop    rbx
  40c198:	pop    r12
  40c19a:	pop    r13
  40c19c:	pop    r14
  40c19e:	pop    r15
  40c1a0:	pop    rbp
  40c1a1:	ret    
  40c1a2:	lea    r15,[rsp+0x30]
  40c1a7:	mov    edx,0xff
  40c1ac:	mov    rdi,r15
  40c1af:	call   403150 <strncpy@plt>
  40c1b4:	mov    rdi,r15
  40c1b7:	call   403250 <strlen@plt>
  40c1bc:	mov    r13b,BYTE PTR [rsp+rax*1+0x2f]
  40c1c1:	cmp    r13b,0x21
  40c1c5:	jne    40c1cc <isspace@plt+0x88bc>
  40c1c7:	mov    BYTE PTR [rsp+rax*1+0x2f],0x0
  40c1cc:	mov    rdi,QWORD PTR [r12+0x818]
  40c1d4:	lea    rsi,[rsp+0x30]
  40c1d9:	call   408640 <isspace@plt+0x4d30>
  40c1de:	test   rax,rax
  40c1e1:	je     40c20c <isspace@plt+0x88fc>
  40c1e3:	mov    r15,rax
  40c1e6:	test   r14,r14
  40c1e9:	jne    40c1f2 <isspace@plt+0x88e2>
  40c1eb:	test   BYTE PTR [r15+0x18],0x10
  40c1f0:	jne    40c260 <isspace@plt+0x8950>
  40c1f2:	mov    eax,DWORD PTR [r15+0x18]
  40c1f6:	cmp    r13b,0x21
  40c1fa:	jne    40c228 <isspace@plt+0x8918>
  40c1fc:	test   al,0x1
  40c1fe:	jne    40c215 <isspace@plt+0x8905>
  40c200:	lea    rsi,[rip+0x24d3b]        # 430f42 <isspace@plt+0x2d632>
  40c207:	jmp    40c16e <isspace@plt+0x885e>
  40c20c:	lea    rsi,[rip+0x24cf9]        # 430f0c <isspace@plt+0x2d5fc>
  40c213:	jmp    40c267 <isspace@plt+0x8957>
  40c215:	cmp    QWORD PTR [rbx+0x10],0x0
  40c21a:	je     40c228 <isspace@plt+0x8918>
  40c21c:	lea    rsi,[rip+0x24d43]        # 430f66 <isspace@plt+0x2d656>
  40c223:	jmp    40c16e <isspace@plt+0x885e>
  40c228:	test   al,0x2
  40c22a:	jne    40c23f <isspace@plt+0x892f>
  40c22c:	test   al,0x1
  40c22e:	jne    40c27d <isspace@plt+0x896d>
  40c230:	test   al,0x4
  40c232:	jne    40c409 <isspace@plt+0x8af9>
  40c238:	xor    ebx,ebx
  40c23a:	jmp    40c17a <isspace@plt+0x886a>
  40c23f:	test   al,0x8
  40c241:	jne    40c346 <isspace@plt+0x8a36>
  40c247:	mov    rax,QWORD PTR [rbx+0x10]
  40c24b:	test   rax,rax
  40c24e:	jne    40c34a <isspace@plt+0x8a3a>
  40c254:	lea    rsi,[rip+0x24d36]        # 430f91 <isspace@plt+0x2d681>
  40c25b:	jmp    40c16e <isspace@plt+0x885e>
  40c260:	lea    rsi,[rip+0x24cba]        # 430f21 <isspace@plt+0x2d611>
  40c267:	xor    ebx,ebx
  40c269:	lea    rdx,[rsp+0x30]
  40c26e:	xor    eax,eax
  40c270:	mov    rdi,r12
  40c273:	call   42a150 <isspace@plt+0x26840>
  40c278:	jmp    40c17a <isspace@plt+0x886a>
  40c27d:	mov    BYTE PTR [rsp+0x1f],r13b
  40c282:	mov    r13,QWORD PTR [rbx+0x10]
  40c286:	test   r13,r13
  40c289:	je     40c462 <isspace@plt+0x8b52>
  40c28f:	mov    rax,QWORD PTR [rip+0x34c32]        # 440ec8 <isspace@plt+0x3d5b8>
  40c296:	mov    QWORD PTR [rsp+0x180],rax
  40c29e:	vmovups ymm0,YMMWORD PTR [rip+0x34c02]        # 440ea8 <isspace@plt+0x3d598>
  40c2a6:	vmovups YMMWORD PTR [rsp+0x160],ymm0
  40c2af:	lea    rbx,[rsp+0x168]
  40c2b7:	lea    rsi,[rip+0x239cf]        # 42fc8d <isspace@plt+0x2c37d>
  40c2be:	mov    rdi,r13
  40c2c1:	vzeroupper 
  40c2c4:	call   4030f0 <strcasecmp@plt>
  40c2c9:	test   eax,eax
  40c2cb:	je     40c478 <isspace@plt+0x8b68>
  40c2d1:	mov    rsi,QWORD PTR [rbx]
  40c2d4:	add    rbx,0x8
  40c2d8:	test   rsi,rsi
  40c2db:	jne    40c2be <isspace@plt+0x89ae>
  40c2dd:	mov    rax,QWORD PTR [rip+0x34c0c]        # 440ef0 <isspace@plt+0x3d5e0>
  40c2e4:	mov    QWORD PTR [rsp+0x150],rax
  40c2ec:	vmovups ymm0,YMMWORD PTR [rip+0x34bdc]        # 440ed0 <isspace@plt+0x3d5c0>
  40c2f4:	vmovups YMMWORD PTR [rsp+0x130],ymm0
  40c2fd:	lea    rbx,[rsp+0x138]
  40c305:	lea    rsi,[rip+0x23a58]        # 42fd64 <isspace@plt+0x2c454>
  40c30c:	mov    rdi,r13
  40c30f:	vzeroupper 
  40c312:	call   4030f0 <strcasecmp@plt>
  40c317:	test   eax,eax
  40c319:	je     40c495 <isspace@plt+0x8b85>
  40c31f:	mov    rsi,QWORD PTR [rbx]
  40c322:	add    rbx,0x8
  40c326:	test   rsi,rsi
  40c329:	jne    40c30c <isspace@plt+0x89fc>
  40c32b:	lea    rsi,[rip+0x24c7d]        # 430faf <isspace@plt+0x2d69f>
  40c332:	xor    ebx,ebx
  40c334:	xor    eax,eax
  40c336:	mov    rdi,r12
  40c339:	mov    rdx,r13
  40c33c:	call   42a150 <isspace@plt+0x26840>
  40c341:	jmp    40c17a <isspace@plt+0x886a>
  40c346:	mov    rax,QWORD PTR [rbx+0x10]
  40c34a:	mov    QWORD PTR [rsp+0x28],rax
  40c34f:	lea    rdx,[rip+0x346da]        # 440a30 <isspace@plt+0x3d120>
  40c356:	mov    rcx,r15
  40c359:	sub    rcx,rdx
  40c35c:	mov    rdx,0xffffffffffffffff
  40c363:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c36d:	nop    DWORD PTR [rax]
  40c370:	mov    rbx,rdx
  40c373:	lea    rdx,[rdx+0x1]
  40c377:	cmp    rdx,0x11
  40c37b:	ja     40c386 <isspace@plt+0x8a76>
  40c37d:	test   rcx,rcx
  40c380:	lea    rcx,[rcx-0x38]
  40c384:	jne    40c370 <isspace@plt+0x8a60>
  40c386:	mov    cl,0x3f
  40c388:	bzhi   rcx,rdx,rcx
  40c38d:	cmp    rcx,0x11
  40c391:	ja     40c4a6 <isspace@plt+0x8b96>
  40c397:	lea    rdx,[rip+0x23c02]        # 42ffa0 <isspace@plt+0x2c690>
  40c39e:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40c3a2:	add    rcx,rdx
  40c3a5:	jmp    rcx
  40c3a7:	vxorps xmm0,xmm0,xmm0
  40c3ab:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40c3b4:	mov    DWORD PTR [rsp+0x180],0x0
  40c3bf:	vmovaps xmm0,XMMWORD PTR [rip+0x23bc9]        # 42ff90 <isspace@plt+0x2c680>
  40c3c7:	vmovups XMMWORD PTR [rsp+0x174],xmm0
  40c3d0:	mov    rdi,QWORD PTR [r14+0x18]
  40c3d4:	vzeroupper 
  40c3d7:	call   41ee30 <isspace@plt+0x1b520>
  40c3dc:	cmp    BYTE PTR [rsp+0x28],0x0
  40c3e1:	mov    esi,DWORD PTR [rsp+rbx*4+0x164]
  40c3e8:	jne    40c3fe <isspace@plt+0x8aee>
  40c3ea:	cmp    r13b,0x21
  40c3ee:	jne    40c7a8 <isspace@plt+0x8e98>
  40c3f4:	mov    ecx,esi
  40c3f6:	and    ecx,eax
  40c3f8:	jne    40c7a8 <isspace@plt+0x8e98>
  40c3fe:	or     esi,eax
  40c400:	mov    rdi,QWORD PTR [r14+0x18]
  40c404:	jmp    40c63e <isspace@plt+0x8d2e>
  40c409:	mov    BYTE PTR [rsp+0x1f],r13b
  40c40e:	mov    r13,QWORD PTR [rbx+0x10]
  40c412:	test   r13,r13
  40c415:	je     40c489 <isspace@plt+0x8b79>
  40c417:	call   403130 <__errno_location@plt>
  40c41c:	mov    QWORD PTR [rsp+0x20],rax
  40c421:	mov    DWORD PTR [rax],0x0
  40c427:	lea    rsi,[rsp+0x160]
  40c42f:	mov    edx,0xa
  40c434:	mov    rdi,r13
  40c437:	call   4034c0 <strtol@plt>
  40c43c:	mov    rcx,QWORD PTR [rbx+0x10]
  40c440:	cmp    BYTE PTR [rcx],0x0
  40c443:	je     40c456 <isspace@plt+0x8b46>
  40c445:	mov    rcx,QWORD PTR [rsp+0x160]
  40c44d:	cmp    BYTE PTR [rcx],0x0
  40c450:	je     40c7b2 <isspace@plt+0x8ea2>
  40c456:	lea    rsi,[rip+0x24b8c]        # 430fe9 <isspace@plt+0x2d6d9>
  40c45d:	jmp    40c16e <isspace@plt+0x885e>
  40c462:	mov    r13b,BYTE PTR [rsp+0x1f]
  40c467:	cmp    r13b,0x21
  40c46b:	setne  al
  40c46e:	setne  BYTE PTR [rsp+0x28]
  40c473:	jmp    40c34f <isspace@plt+0x8a3f>
  40c478:	mov    BYTE PTR [rsp+0x28],0x1
  40c47d:	mov    al,0x1
  40c47f:	mov    r13b,BYTE PTR [rsp+0x1f]
  40c484:	jmp    40c34f <isspace@plt+0x8a3f>
  40c489:	lea    rsi,[rip+0x24b48]        # 430fd8 <isspace@plt+0x2d6c8>
  40c490:	jmp    40c16e <isspace@plt+0x885e>
  40c495:	mov    BYTE PTR [rsp+0x28],0x0
  40c49a:	xor    eax,eax
  40c49c:	mov    r13b,BYTE PTR [rsp+0x1f]
  40c4a1:	jmp    40c34f <isspace@plt+0x8a3f>
  40c4a6:	mov    rbx,QWORD PTR [r15+0x28]
  40c4aa:	test   rbx,rbx
  40c4ad:	je     40c238 <isspace@plt+0x8928>
  40c4b3:	xor    ecx,ecx
  40c4b5:	cmp    r13b,0x21
  40c4b9:	sete   cl
  40c4bc:	mov    rdx,QWORD PTR [r15+0x30]
  40c4c0:	mov    r8d,DWORD PTR [r15+0x18]
  40c4c4:	lea    rax,[rsp+0x28]
  40c4c9:	mov    QWORD PTR [rsp],rax
  40c4cd:	lea    r9,[rsp+0x30]
  40c4d2:	mov    rdi,r12
  40c4d5:	mov    rsi,r14
  40c4d8:	call   rbx
  40c4da:	mov    ebx,eax
  40c4dc:	jmp    40c17a <isspace@plt+0x886a>
  40c4e1:	mov    rdi,QWORD PTR [rsp+0x28]
  40c4e6:	call   403850 <strdup@plt>
  40c4eb:	test   rax,rax
  40c4ee:	je     40c7ee <isspace@plt+0x8ede>
  40c4f4:	mov    rbx,rax
  40c4f7:	mov    rdi,QWORD PTR [r12+0x800]
  40c4ff:	call   4030d0 <free@plt>
  40c504:	mov    QWORD PTR [r12+0x800],rbx
  40c50c:	mov    bl,0x1
  40c50e:	jmp    40c17a <isspace@plt+0x886a>
  40c513:	mov    rdi,QWORD PTR [r12]
  40c517:	call   QWORD PTR [rdi+0x90]
  40c51d:	mov    esi,DWORD PTR [rsp+0x28]
  40c521:	mov    rdi,rax
  40c524:	call   403050 <termkey_set_waittime@plt>
  40c529:	mov    bl,0x1
  40c52b:	jmp    40c17a <isspace@plt+0x886a>
  40c530:	cmp    r13b,0x21
  40c534:	jne    40c540 <isspace@plt+0x8c30>
  40c536:	mov    al,BYTE PTR [r12+0x7fd]
  40c53e:	xor    al,0x1
  40c540:	test   al,al
  40c542:	setne  BYTE PTR [r12+0x7fd]
  40c54b:	mov    bl,0x1
  40c54d:	jmp    40c17a <isspace@plt+0x886a>
  40c552:	cmp    r13b,0x21
  40c556:	jne    40c562 <isspace@plt+0x8c52>
  40c558:	mov    al,BYTE PTR [r12+0x7fc]
  40c560:	xor    al,0x1
  40c562:	test   al,al
  40c564:	setne  BYTE PTR [r12+0x7fc]
  40c56d:	mov    bl,0x1
  40c56f:	jmp    40c17a <isspace@plt+0x886a>
  40c574:	mov    r14d,DWORD PTR [rsp+0x28]
  40c579:	lea    eax,[r14-0x1]
  40c57d:	mov    bl,0x1
  40c57f:	cmp    eax,0x7
  40c582:	ja     40c17a <isspace@plt+0x886a>
  40c588:	mov    r15,QWORD PTR [r12+0x28]
  40c58d:	test   r15,r15
  40c590:	je     40c5aa <isspace@plt+0x8c9a>
  40c592:	mov    rdi,QWORD PTR [r15+0x18]
  40c596:	mov    esi,r14d
  40c599:	call   41a470 <isspace@plt+0x16b60>
  40c59e:	mov    r15,QWORD PTR [r15+0x2e0]
  40c5a5:	test   r15,r15
  40c5a8:	jne    40c592 <isspace@plt+0x8c82>
  40c5aa:	mov    DWORD PTR [r12+0x7f8],r14d
  40c5b2:	jmp    40c17a <isspace@plt+0x886a>
  40c5b7:	mov    rdi,QWORD PTR [r14+0x18]
  40c5bb:	call   41ee30 <isspace@plt+0x1b520>
  40c5c0:	cmp    BYTE PTR [rsp+0x28],0x0
  40c5c5:	jne    40c5dc <isspace@plt+0x8ccc>
  40c5c7:	cmp    r13b,0x21
  40c5cb:	jne    40c87a <isspace@plt+0x8f6a>
  40c5d1:	mov    ecx,eax
  40c5d3:	and    ecx,0x1
  40c5d6:	jne    40c87a <isspace@plt+0x8f6a>
  40c5dc:	and    eax,0xfffffffc
  40c5df:	or     eax,0x1
  40c5e2:	jmp    40c638 <isspace@plt+0x8d28>
  40c5e4:	mov    rdi,QWORD PTR [r14+0x18]
  40c5e8:	call   41ee30 <isspace@plt+0x1b520>
  40c5ed:	cmp    BYTE PTR [rsp+0x28],0x0
  40c5f2:	jne    40c609 <isspace@plt+0x8cf9>
  40c5f4:	cmp    r13b,0x21
  40c5f8:	jne    40c882 <isspace@plt+0x8f72>
  40c5fe:	mov    ecx,eax
  40c600:	and    ecx,0x2
  40c603:	jne    40c882 <isspace@plt+0x8f72>
  40c609:	and    eax,0xfffffffc
  40c60c:	or     eax,0x2
  40c60f:	jmp    40c638 <isspace@plt+0x8d28>
  40c611:	mov    rdi,QWORD PTR [r14+0x18]
  40c615:	call   41ee30 <isspace@plt+0x1b520>
  40c61a:	cmp    BYTE PTR [rsp+0x28],0x0
  40c61f:	jne    40c633 <isspace@plt+0x8d23>
  40c621:	test   al,al
  40c623:	js     40c88a <isspace@plt+0x8f7a>
  40c629:	cmp    r13b,0x21
  40c62d:	jne    40c88a <isspace@plt+0x8f7a>
  40c633:	or     eax,0x80
  40c638:	mov    rdi,QWORD PTR [r14+0x18]
  40c63c:	mov    esi,eax
  40c63e:	call   41baf0 <isspace@plt+0x181e0>
  40c643:	mov    bl,0x1
  40c645:	jmp    40c17a <isspace@plt+0x886a>
  40c64a:	mov    rdi,QWORD PTR [r14+0x18]
  40c64e:	mov    esi,DWORD PTR [rsp+0x28]
  40c652:	call   41ee80 <isspace@plt+0x1b570>
  40c657:	mov    bl,0x1
  40c659:	jmp    40c17a <isspace@plt+0x886a>
  40c65e:	mov    r15,QWORD PTR [rsp+0x28]
  40c663:	lea    rdi,[rip+0x249cf]        # 431039 <isspace@plt+0x2d729>
  40c66a:	mov    rsi,r15
  40c66d:	call   403480 <strcmp@plt>
  40c672:	test   eax,eax
  40c674:	je     40c7fa <isspace@plt+0x8eea>
  40c67a:	lea    rdi,[rip+0x249bd]        # 43103e <isspace@plt+0x2d72e>
  40c681:	mov    rsi,r15
  40c684:	call   403480 <strcmp@plt>
  40c689:	test   eax,eax
  40c68b:	je     40c83f <isspace@plt+0x8f2f>
  40c691:	lea    rdi,[rip+0x249ad]        # 431045 <isspace@plt+0x2d735>
  40c698:	mov    rsi,r15
  40c69b:	call   403480 <strcmp@plt>
  40c6a0:	test   eax,eax
  40c6a2:	je     40c894 <isspace@plt+0x8f84>
  40c6a8:	lea    rsi,[rip+0x2499e]        # 43104d <isspace@plt+0x2d73d>
  40c6af:	xor    ebx,ebx
  40c6b1:	xor    eax,eax
  40c6b3:	mov    rdi,r12
  40c6b6:	mov    rdx,r15
  40c6b9:	call   42a150 <isspace@plt+0x26840>
  40c6be:	jmp    40c17a <isspace@plt+0x886a>
  40c6c3:	mov    r14,QWORD PTR [rsp+0x28]
  40c6c8:	lea    rdi,[rip+0x2496a]        # 431039 <isspace@plt+0x2d729>
  40c6cf:	mov    rsi,r14
  40c6d2:	call   403480 <strcmp@plt>
  40c6d7:	test   eax,eax
  40c6d9:	je     40c80f <isspace@plt+0x8eff>
  40c6df:	lea    rdi,[rip+0x249a8]        # 43108e <isspace@plt+0x2d77e>
  40c6e6:	mov    rsi,r14
  40c6e9:	call   403480 <strcmp@plt>
  40c6ee:	test   eax,eax
  40c6f0:	je     40c854 <isspace@plt+0x8f44>
  40c6f6:	lea    rdi,[rip+0x24996]        # 431093 <isspace@plt+0x2d783>
  40c6fd:	mov    rsi,r14
  40c700:	call   403480 <strcmp@plt>
  40c705:	test   eax,eax
  40c707:	je     40c8a9 <isspace@plt+0x8f99>
  40c70d:	lea    rsi,[rip+0x24984]        # 431098 <isspace@plt+0x2d788>
  40c714:	jmp    40c772 <isspace@plt+0x8e62>
  40c716:	cmp    r13b,0x21
  40c71a:	jne    40c726 <isspace@plt+0x8e16>
  40c71c:	mov    al,BYTE PTR [r12+0x7fe]
  40c724:	xor    al,0x1
  40c726:	test   al,al
  40c728:	setne  BYTE PTR [r12+0x7fe]
  40c731:	mov    bl,0x1
  40c733:	jmp    40c17a <isspace@plt+0x886a>
  40c738:	mov    r14,QWORD PTR [rsp+0x28]
  40c73d:	lea    rdi,[rip+0x23461]        # 42fba5 <isspace@plt+0x2c295>
  40c744:	mov    rsi,r14
  40c747:	call   403480 <strcmp@plt>
  40c74c:	test   eax,eax
  40c74e:	je     40c822 <isspace@plt+0x8f12>
  40c754:	lea    rdi,[rip+0x209c5]        # 42d120 <isspace@plt+0x29810>
  40c75b:	mov    rsi,r14
  40c75e:	call   403480 <strcmp@plt>
  40c763:	test   eax,eax
  40c765:	je     40c867 <isspace@plt+0x8f57>
  40c76b:	lea    rsi,[rip+0x24962]        # 4310d4 <isspace@plt+0x2d7c4>
  40c772:	xor    ebx,ebx
  40c774:	xor    eax,eax
  40c776:	mov    rdi,r12
  40c779:	mov    rdx,r14
  40c77c:	call   42a150 <isspace@plt+0x26840>
  40c781:	jmp    40c17a <isspace@plt+0x886a>
  40c786:	cmp    r13b,0x21
  40c78a:	jne    40c796 <isspace@plt+0x8e86>
  40c78c:	mov    al,BYTE PTR [r12+0xb60]
  40c794:	xor    al,0x1
  40c796:	test   al,al
  40c798:	setne  BYTE PTR [r12+0xb60]
  40c7a1:	mov    bl,0x1
  40c7a3:	jmp    40c17a <isspace@plt+0x886a>
  40c7a8:	andn   esi,esi,eax
  40c7ad:	jmp    40c400 <isspace@plt+0x8af0>
  40c7b2:	mov    rcx,QWORD PTR [rsp+0x20]
  40c7b7:	cmp    DWORD PTR [rcx],0x22
  40c7ba:	jne    40c826 <isspace@plt+0x8f16>
  40c7bc:	movsxd rcx,eax
  40c7bf:	cmp    rcx,rax
  40c7c2:	mov    r13b,BYTE PTR [rsp+0x1f]
  40c7c7:	jne    40c833 <isspace@plt+0x8f23>
  40c7c9:	movabs rcx,0x8000000000000001
  40c7d3:	add    rcx,rax
  40c7d6:	cmp    rcx,0x2
  40c7da:	jb     40c833 <isspace@plt+0x8f23>
  40c7dc:	test   rax,rax
  40c7df:	js     40c8bc <isspace@plt+0x8fac>
  40c7e5:	mov    DWORD PTR [rsp+0x28],eax
  40c7e9:	jmp    40c34f <isspace@plt+0x8a3f>
  40c7ee:	lea    rsi,[rip+0x2482d]        # 431022 <isspace@plt+0x2d712>
  40c7f5:	jmp    40c16e <isspace@plt+0x885e>
  40c7fa:	mov    rax,QWORD PTR [r14+0x10]
  40c7fe:	mov    DWORD PTR [rax+0x438],0x0
  40c808:	mov    bl,0x1
  40c80a:	jmp    40c17a <isspace@plt+0x886a>
  40c80f:	mov    DWORD PTR [r12+0xad0],0x0
  40c81b:	mov    bl,0x1
  40c81d:	jmp    40c17a <isspace@plt+0x886a>
  40c822:	xor    esi,esi
  40c824:	jmp    40c86c <isspace@plt+0x8f5c>
  40c826:	movsxd rcx,eax
  40c829:	cmp    rcx,rax
  40c82c:	mov    r13b,BYTE PTR [rsp+0x1f]
  40c831:	je     40c7dc <isspace@plt+0x8ecc>
  40c833:	lea    rsi,[rip+0x247be]        # 430ff8 <isspace@plt+0x2d6e8>
  40c83a:	jmp    40c16e <isspace@plt+0x885e>
  40c83f:	mov    rax,QWORD PTR [r14+0x10]
  40c843:	mov    DWORD PTR [rax+0x438],0x1
  40c84d:	mov    bl,0x1
  40c84f:	jmp    40c17a <isspace@plt+0x886a>
  40c854:	mov    DWORD PTR [r12+0xad0],0x1
  40c860:	mov    bl,0x1
  40c862:	jmp    40c17a <isspace@plt+0x886a>
  40c867:	mov    esi,0x1
  40c86c:	mov    rdi,QWORD PTR [r12]
  40c870:	call   QWORD PTR [rdi+0x50]
  40c873:	mov    bl,0x1
  40c875:	jmp    40c17a <isspace@plt+0x886a>
  40c87a:	and    eax,0xfffffffe
  40c87d:	jmp    40c638 <isspace@plt+0x8d28>
  40c882:	and    eax,0xfffffffd
  40c885:	jmp    40c638 <isspace@plt+0x8d28>
  40c88a:	and    eax,0xffffff7f
  40c88f:	jmp    40c638 <isspace@plt+0x8d28>
  40c894:	mov    rax,QWORD PTR [r14+0x10]
  40c898:	mov    DWORD PTR [rax+0x438],0x2
  40c8a2:	mov    bl,0x1
  40c8a4:	jmp    40c17a <isspace@plt+0x886a>
  40c8a9:	mov    DWORD PTR [r12+0xad0],0x2
  40c8b5:	mov    bl,0x1
  40c8b7:	jmp    40c17a <isspace@plt+0x886a>
  40c8bc:	lea    rsi,[rip+0x24745]        # 431008 <isspace@plt+0x2d6f8>
  40c8c3:	jmp    40c16e <isspace@plt+0x885e>
  40c8c8:	call   403280 <__stack_chk_fail@plt>
  40c8cd:	nop    DWORD PTR [rax]
  40c8d0:	push   rbp
  40c8d1:	push   r15
  40c8d3:	push   r14
  40c8d5:	push   r12
  40c8d7:	push   rbx
  40c8d8:	sub    rsp,0x10
  40c8dc:	mov    rax,QWORD PTR fs:0x28
  40c8e5:	mov    QWORD PTR [rsp+0x8],rax
  40c8ea:	test   rsi,rsi
  40c8ed:	je     40c96d <isspace@plt+0x905d>
  40c8ef:	mov    rbx,rcx
  40c8f2:	mov    rbp,rsi
  40c8f5:	mov    r14,rdi
  40c8f8:	mov    rdi,QWORD PTR [rsi+0x18]
  40c8fc:	call   41ee30 <isspace@plt+0x1b520>
  40c901:	mov    r15d,eax
  40c904:	mov    rdi,QWORD PTR [r14]
  40c907:	xor    esi,esi
  40c909:	call   QWORD PTR [rdi+0x50]
  40c90c:	mov    rsi,QWORD PTR [rbx+0x8]
  40c910:	test   rsi,rsi
  40c913:	je     40c971 <isspace@plt+0x9061>
  40c915:	add    rbx,0x10
  40c919:	nop    DWORD PTR [rax+0x0]
  40c920:	mov    rdi,r14
  40c923:	call   40d6d0 <isspace@plt+0x9dc0>
  40c928:	test   rax,rax
  40c92b:	je     40c96d <isspace@plt+0x905d>
  40c92d:	mov    r12,rax
  40c930:	call   403130 <__errno_location@plt>
  40c935:	mov    rbp,rax
  40c938:	mov    DWORD PTR [rax],0x0
  40c93e:	mov    rdi,r14
  40c941:	mov    rsi,r12
  40c944:	call   421da0 <isspace@plt+0x1e490>
  40c949:	test   al,al
  40c94b:	je     40c98b <isspace@plt+0x907b>
  40c94d:	mov    rsi,QWORD PTR [rbx]
  40c950:	add    rbx,0x8
  40c954:	test   rsi,rsi
  40c957:	jne    40c920 <isspace@plt+0x9010>
  40c959:	mov    rax,QWORD PTR [r14+0x30]
  40c95d:	mov    rdi,QWORD PTR [rax+0x18]
  40c961:	mov    esi,r15d
  40c964:	call   41baf0 <isspace@plt+0x181e0>
  40c969:	mov    bl,0x1
  40c96b:	jmp    40c9b9 <isspace@plt+0x90a9>
  40c96d:	xor    ebx,ebx
  40c96f:	jmp    40c9b9 <isspace@plt+0x90a9>
  40c971:	mov    rdi,rbp
  40c974:	call   421940 <isspace@plt+0x1e030>
  40c979:	mov    rcx,QWORD PTR fs:0x28
  40c982:	cmp    rcx,QWORD PTR [rsp+0x8]
  40c987:	je     40c9cb <isspace@plt+0x90bb>
  40c989:	jmp    40c9d8 <isspace@plt+0x90c8>
  40c98b:	mov    edi,DWORD PTR [rbp+0x0]
  40c98e:	test   edi,edi
  40c990:	je     40c99c <isspace@plt+0x908c>
  40c992:	call   403880 <strerror@plt>
  40c997:	mov    rcx,rax
  40c99a:	jmp    40c9a3 <isspace@plt+0x9093>
  40c99c:	lea    rcx,[rip+0x250e0]        # 431a83 <isspace@plt+0x2e173>
  40c9a3:	lea    rsi,[rip+0x240ac]        # 430a56 <isspace@plt+0x2d146>
  40c9aa:	xor    ebx,ebx
  40c9ac:	xor    eax,eax
  40c9ae:	mov    rdi,r14
  40c9b1:	mov    rdx,r12
  40c9b4:	call   42a150 <isspace@plt+0x26840>
  40c9b9:	mov    rax,QWORD PTR fs:0x28
  40c9c2:	cmp    rax,QWORD PTR [rsp+0x8]
  40c9c7:	jne    40c9d8 <isspace@plt+0x90c8>
  40c9c9:	mov    eax,ebx
  40c9cb:	add    rsp,0x10
  40c9cf:	pop    rbx
  40c9d0:	pop    r12
  40c9d2:	pop    r14
  40c9d4:	pop    r15
  40c9d6:	pop    rbp
  40c9d7:	ret    
  40c9d8:	call   403280 <__stack_chk_fail@plt>
  40c9dd:	nop    DWORD PTR [rax]
  40c9e0:	push   rbx
  40c9e1:	sub    rsp,0x10
  40c9e5:	mov    rbx,rdi
  40c9e8:	mov    rax,QWORD PTR fs:0x28
  40c9f1:	mov    QWORD PTR [rsp+0x8],rax
  40c9f6:	mov    rdi,QWORD PTR [rdi]
  40c9f9:	mov    esi,0x1
  40c9fe:	call   QWORD PTR [rdi+0x50]
  40ca01:	xor    esi,esi
  40ca03:	mov    rdi,rbx
  40ca06:	call   421da0 <isspace@plt+0x1e490>
  40ca0b:	mov    rcx,QWORD PTR fs:0x28
  40ca14:	cmp    rcx,QWORD PTR [rsp+0x8]
  40ca19:	jne    40ca21 <isspace@plt+0x9111>
  40ca1b:	add    rsp,0x10
  40ca1f:	pop    rbx
  40ca20:	ret    
  40ca21:	call   403280 <__stack_chk_fail@plt>
  40ca26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ca30:	push   rbp
  40ca31:	push   r15
  40ca33:	push   r14
  40ca35:	push   r12
  40ca37:	push   rbx
  40ca38:	sub    rsp,0x10
  40ca3c:	mov    rax,QWORD PTR fs:0x28
  40ca45:	mov    QWORD PTR [rsp+0x8],rax
  40ca4a:	test   rsi,rsi
  40ca4d:	je     40cacd <isspace@plt+0x91bd>
  40ca4f:	mov    rbx,rcx
  40ca52:	mov    rbp,rsi
  40ca55:	mov    r14,rdi
  40ca58:	mov    rdi,QWORD PTR [rsi+0x18]
  40ca5c:	call   41ee30 <isspace@plt+0x1b520>
  40ca61:	mov    r15d,eax
  40ca64:	mov    rdi,QWORD PTR [r14]
  40ca67:	mov    esi,0x1
  40ca6c:	call   QWORD PTR [rdi+0x50]
  40ca6f:	mov    rsi,QWORD PTR [rbx+0x8]
  40ca73:	test   rsi,rsi
  40ca76:	je     40cad1 <isspace@plt+0x91c1>
  40ca78:	add    rbx,0x10
  40ca7c:	nop    DWORD PTR [rax+0x0]
  40ca80:	mov    rdi,r14
  40ca83:	call   40d6d0 <isspace@plt+0x9dc0>
  40ca88:	test   rax,rax
  40ca8b:	je     40cacd <isspace@plt+0x91bd>
  40ca8d:	mov    r12,rax
  40ca90:	call   403130 <__errno_location@plt>
  40ca95:	mov    rbp,rax
  40ca98:	mov    DWORD PTR [rax],0x0
  40ca9e:	mov    rdi,r14
  40caa1:	mov    rsi,r12
  40caa4:	call   421da0 <isspace@plt+0x1e490>
  40caa9:	test   al,al
  40caab:	je     40caeb <isspace@plt+0x91db>
  40caad:	mov    rsi,QWORD PTR [rbx]
  40cab0:	add    rbx,0x8
  40cab4:	test   rsi,rsi
  40cab7:	jne    40ca80 <isspace@plt+0x9170>
  40cab9:	mov    rax,QWORD PTR [r14+0x30]
  40cabd:	mov    rdi,QWORD PTR [rax+0x18]
  40cac1:	mov    esi,r15d
  40cac4:	call   41baf0 <isspace@plt+0x181e0>
  40cac9:	mov    bl,0x1
  40cacb:	jmp    40cb19 <isspace@plt+0x9209>
  40cacd:	xor    ebx,ebx
  40cacf:	jmp    40cb19 <isspace@plt+0x9209>
  40cad1:	mov    rdi,rbp
  40cad4:	call   421940 <isspace@plt+0x1e030>
  40cad9:	mov    rcx,QWORD PTR fs:0x28
  40cae2:	cmp    rcx,QWORD PTR [rsp+0x8]
  40cae7:	je     40cb2b <isspace@plt+0x921b>
  40cae9:	jmp    40cb38 <isspace@plt+0x9228>
  40caeb:	mov    edi,DWORD PTR [rbp+0x0]
  40caee:	test   edi,edi
  40caf0:	je     40cafc <isspace@plt+0x91ec>
  40caf2:	call   403880 <strerror@plt>
  40caf7:	mov    rcx,rax
  40cafa:	jmp    40cb03 <isspace@plt+0x91f3>
  40cafc:	lea    rcx,[rip+0x24f80]        # 431a83 <isspace@plt+0x2e173>
  40cb03:	lea    rsi,[rip+0x23f4c]        # 430a56 <isspace@plt+0x2d146>
  40cb0a:	xor    ebx,ebx
  40cb0c:	xor    eax,eax
  40cb0e:	mov    rdi,r14
  40cb11:	mov    rdx,r12
  40cb14:	call   42a150 <isspace@plt+0x26840>
  40cb19:	mov    rax,QWORD PTR fs:0x28
  40cb22:	cmp    rax,QWORD PTR [rsp+0x8]
  40cb27:	jne    40cb38 <isspace@plt+0x9228>
  40cb29:	mov    eax,ebx
  40cb2b:	add    rsp,0x10
  40cb2f:	pop    rbx
  40cb30:	pop    r12
  40cb32:	pop    r14
  40cb34:	pop    r15
  40cb36:	pop    rbp
  40cb37:	ret    
  40cb38:	call   403280 <__stack_chk_fail@plt>
  40cb3d:	nop    DWORD PTR [rax]
  40cb40:	push   rbp
  40cb41:	push   r15
  40cb43:	push   r14
  40cb45:	push   r13
  40cb47:	push   r12
  40cb49:	push   rbx
  40cb4a:	push   rax
  40cb4b:	mov    rax,QWORD PTR fs:0x28
  40cb54:	mov    QWORD PTR [rsp],rax
  40cb58:	test   rsi,rsi
  40cb5b:	je     40cbf4 <isspace@plt+0x92e4>
  40cb61:	mov    r12,r9
  40cb64:	mov    r13,r8
  40cb67:	mov    rbp,rcx
  40cb6a:	mov    r15,rdx
  40cb6d:	mov    rbx,rsi
  40cb70:	mov    r14,rdi
  40cb73:	mov    rax,QWORD PTR [rsi+0x10]
  40cb77:	cmp    DWORD PTR [rax+0x14],0xffffffff
  40cb7b:	jne    40cb90 <isspace@plt+0x9280>
  40cb7d:	cmp    QWORD PTR [rax+0x8],0x0
  40cb82:	jne    40cb90 <isspace@plt+0x9280>
  40cb84:	mov    rdi,QWORD PTR [rax]
  40cb87:	call   410690 <isspace@plt+0xcd80>
  40cb8c:	test   al,al
  40cb8e:	je     40cbab <isspace@plt+0x929b>
  40cb90:	mov    rdi,r14
  40cb93:	mov    rsi,rbx
  40cb96:	mov    rdx,r15
  40cb99:	mov    rcx,rbp
  40cb9c:	mov    r8,r13
  40cb9f:	mov    r9,r12
  40cba2:	call   40aae0 <isspace@plt+0x71d0>
  40cba7:	test   al,al
  40cba9:	je     40cbf4 <isspace@plt+0x92e4>
  40cbab:	cmp    BYTE PTR [r15+0x68],0x21
  40cbb0:	je     40cbbe <isspace@plt+0x92ae>
  40cbb2:	mov    rdi,rbx
  40cbb5:	call   421ea0 <isspace@plt+0x1e590>
  40cbba:	test   al,al
  40cbbc:	je     40cc16 <isspace@plt+0x9306>
  40cbbe:	mov    rdi,rbx
  40cbc1:	call   422030 <isspace@plt+0x1e720>
  40cbc6:	mov    rax,QWORD PTR [r14+0x28]
  40cbca:	test   rax,rax
  40cbcd:	je     40cbe6 <isspace@plt+0x92d6>
  40cbcf:	nop
  40cbd0:	mov    rcx,QWORD PTR [rax+0x10]
  40cbd4:	cmp    BYTE PTR [rcx+0x18],0x0
  40cbd8:	je     40cbf0 <isspace@plt+0x92e0>
  40cbda:	mov    rax,QWORD PTR [rax+0x2e0]
  40cbe1:	test   rax,rax
  40cbe4:	jne    40cbd0 <isspace@plt+0x92c0>
  40cbe6:	xor    esi,esi
  40cbe8:	mov    rdi,r14
  40cbeb:	call   424ed0 <isspace@plt+0x215c0>
  40cbf0:	mov    bl,0x1
  40cbf2:	jmp    40cbf6 <isspace@plt+0x92e6>
  40cbf4:	xor    ebx,ebx
  40cbf6:	mov    rax,QWORD PTR fs:0x28
  40cbff:	cmp    rax,QWORD PTR [rsp]
  40cc03:	jne    40cc2b <isspace@plt+0x931b>
  40cc05:	mov    eax,ebx
  40cc07:	add    rsp,0x8
  40cc0b:	pop    rbx
  40cc0c:	pop    r12
  40cc0e:	pop    r13
  40cc10:	pop    r14
  40cc12:	pop    r15
  40cc14:	pop    rbp
  40cc15:	ret    
  40cc16:	lea    rsi,[rip+0x23e0a]        # 430a27 <isspace@plt+0x2d117>
  40cc1d:	xor    ebx,ebx
  40cc1f:	xor    eax,eax
  40cc21:	mov    rdi,r14
  40cc24:	call   42a150 <isspace@plt+0x26840>
  40cc29:	jmp    40cbf6 <isspace@plt+0x92e6>
  40cc2b:	call   403280 <__stack_chk_fail@plt>
  40cc30:	push   rbp
  40cc31:	push   r15
  40cc33:	push   r14
  40cc35:	push   r13
  40cc37:	push   r12
  40cc39:	push   rbx
  40cc3a:	sub    rsp,0x38
  40cc3e:	mov    rax,QWORD PTR fs:0x28
  40cc47:	mov    QWORD PTR [rsp+0x30],rax
  40cc4c:	test   rsi,rsi
  40cc4f:	je     40ccb1 <isspace@plt+0x93a1>
  40cc51:	mov    r13,rcx
  40cc54:	mov    r14,rdi
  40cc57:	mov    rax,QWORD PTR [rsi+0x10]
  40cc5b:	mov    r15,QWORD PTR [rax]
  40cc5e:	lea    rbp,[rip+0x24e1e]        # 431a83 <isspace@plt+0x2e173>
  40cc65:	mov    QWORD PTR [rsp+0x8],rbp
  40cc6a:	mov    rbx,QWORD PTR [rcx+0x8]
  40cc6e:	test   rbx,rbx
  40cc71:	je     40ccb8 <isspace@plt+0x93a8>
  40cc73:	call   403130 <__errno_location@plt>
  40cc78:	mov    rbp,rax
  40cc7b:	mov    DWORD PTR [rax],0x0
  40cc81:	lea    rsi,[rsp+0x8]
  40cc86:	mov    edx,0xa
  40cc8b:	mov    rdi,rbx
  40cc8e:	call   4034c0 <strtol@plt>
  40cc93:	cmp    DWORD PTR [rbp+0x0],0x0
  40cc97:	je     40ccd4 <isspace@plt+0x93c4>
  40cc99:	lea    rsi,[rip+0x24349]        # 430fe9 <isspace@plt+0x2d6d9>
  40cca0:	xor    ebx,ebx
  40cca2:	xor    eax,eax
  40cca4:	mov    rdi,r14
  40cca7:	call   42a150 <isspace@plt+0x26840>
  40ccac:	jmp    40ce42 <isspace@plt+0x9532>
  40ccb1:	xor    ebx,ebx
  40ccb3:	jmp    40ce42 <isspace@plt+0x9532>
  40ccb8:	mov    rbx,0xffffffffffffffff
  40ccbf:	mov    r12d,0x1
  40ccc5:	cmp    BYTE PTR [rbp+0x0],0x0
  40ccc9:	jne    40cdf7 <isspace@plt+0x94e7>
  40cccf:	jmp    40cd8e <isspace@plt+0x947e>
  40ccd4:	mov    r12,rax
  40ccd7:	test   rax,rax
  40ccda:	js     40cc99 <isspace@plt+0x9389>
  40ccdc:	mov    rbp,QWORD PTR [rsp+0x8]
  40cce1:	cmp    rbp,QWORD PTR [r13+0x8]
  40cce5:	je     40cc99 <isspace@plt+0x9389>
  40cce7:	mov    bl,BYTE PTR [rbp+0x0]
  40ccea:	test   bl,bl
  40ccec:	je     40cd27 <isspace@plt+0x9417>
  40ccee:	call   4038f0 <__ctype_b_loc@plt>
  40ccf3:	mov    rax,QWORD PTR [rax]
  40ccf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cd00:	movzx  ecx,bl
  40cd03:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40cd08:	je     40cd30 <isspace@plt+0x9420>
  40cd0a:	movzx  ebx,BYTE PTR [rbp+0x1]
  40cd0e:	add    rbp,0x1
  40cd12:	test   bl,bl
  40cd14:	jne    40cd00 <isspace@plt+0x93f0>
  40cd16:	mov    QWORD PTR [rsp+0x8],rbp
  40cd1b:	lea    rsi,[rip+0x243e6]        # 431108 <isspace@plt+0x2d7f8>
  40cd22:	jmp    40cca0 <isspace@plt+0x9390>
  40cd27:	mov    rbx,0xffffffffffffffff
  40cd2e:	jmp    40cd8e <isspace@plt+0x947e>
  40cd30:	mov    QWORD PTR [rsp+0x8],rbp
  40cd35:	movsx  eax,bl
  40cd38:	add    eax,0xffffff9c
  40cd3b:	cmp    eax,0xf
  40cd3e:	ja     40cd1b <isspace@plt+0x940b>
  40cd40:	lea    rcx,[rip+0x232a1]        # 42ffe8 <isspace@plt+0x2c6d8>
  40cd47:	movsxd rax,DWORD PTR [rcx+rax*4]
  40cd4b:	add    rax,rcx
  40cd4e:	jmp    rax
  40cd50:	shl    r12,0x3
  40cd54:	lea    r12,[r12+r12*2]
  40cd58:	imul   r12,r12,0x3c
  40cd5c:	imul   r12,r12,0x3c
  40cd60:	mov    rax,QWORD PTR [r13+0x0]
  40cd64:	mov    rcx,r12
  40cd67:	neg    rcx
  40cd6a:	cmp    BYTE PTR [rax],0x65
  40cd6d:	cmove  r12,rcx
  40cd71:	mov    rdi,r15
  40cd74:	call   40fc70 <isspace@plt+0xc360>
  40cd79:	lea    rsi,[rax+r12*1]
  40cd7d:	mov    rdi,r15
  40cd80:	call   40fb90 <isspace@plt+0xc280>
  40cd85:	mov    rbx,rax
  40cd88:	cmp    BYTE PTR [rbp+0x0],0x0
  40cd8c:	jne    40cdf7 <isspace@plt+0x94e7>
  40cd8e:	mov    rdi,r14
  40cd91:	mov    esi,r12d
  40cd94:	call   424e50 <isspace@plt+0x21540>
  40cd99:	mov    QWORD PTR [rsp+0x10],rax
  40cd9e:	mov    QWORD PTR [rsp+0x18],rdx
  40cda3:	lea    rdi,[rsp+0x10]
  40cda8:	call   424e80 <isspace@plt+0x21570>
  40cdad:	test   al,al
  40cdaf:	je     40cdf7 <isspace@plt+0x94e7>
  40cdb1:	lea    r12,[rsp+0x10]
  40cdb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cdc0:	mov    rax,QWORD PTR [r13+0x0]
  40cdc4:	cmp    BYTE PTR [rax],0x65
  40cdc7:	jne    40cde0 <isspace@plt+0x94d0>
  40cdc9:	mov    rdi,r15
  40cdcc:	call   40f9d0 <isspace@plt+0xc0c0>
  40cdd1:	jmp    40cde8 <isspace@plt+0x94d8>
  40cdd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cddd:	nop    DWORD PTR [rax]
  40cde0:	mov    rdi,r15
  40cde3:	call   40fb50 <isspace@plt+0xc240>
  40cde8:	mov    rbx,rax
  40cdeb:	mov    rdi,r12
  40cdee:	call   424e80 <isspace@plt+0x21570>
  40cdf3:	test   al,al
  40cdf5:	jne    40cdc0 <isspace@plt+0x94b0>
  40cdf7:	mov    rdi,r15
  40cdfa:	call   40fc70 <isspace@plt+0xc360>
  40cdff:	mov    QWORD PTR [rsp],rax
  40ce03:	mov    rdi,rsp
  40ce06:	call   403100 <localtime@plt>
  40ce0b:	lea    rdx,[rip+0x2431f]        # 431131 <isspace@plt+0x2d821>
  40ce12:	lea    rbp,[rsp+0x10]
  40ce17:	mov    esi,0x20
  40ce1c:	mov    rdi,rbp
  40ce1f:	mov    rcx,rax
  40ce22:	call   403740 <strftime@plt>
  40ce27:	lea    rsi,[rip+0x23c3c]        # 430a6a <isspace@plt+0x2d15a>
  40ce2e:	xor    eax,eax
  40ce30:	mov    rdi,r14
  40ce33:	mov    rdx,rbp
  40ce36:	call   42a150 <isspace@plt+0x26840>
  40ce3b:	cmp    rbx,0xffffffffffffffff
  40ce3f:	setne  bl
  40ce42:	mov    rax,QWORD PTR fs:0x28
  40ce4b:	cmp    rax,QWORD PTR [rsp+0x30]
  40ce50:	jne    40ce63 <isspace@plt+0x9553>
  40ce52:	mov    eax,ebx
  40ce54:	add    rsp,0x38
  40ce58:	pop    rbx
  40ce59:	pop    r12
  40ce5b:	pop    r13
  40ce5d:	pop    r14
  40ce5f:	pop    r15
  40ce61:	pop    rbp
  40ce62:	ret    
  40ce63:	call   403280 <__stack_chk_fail@plt>
  40ce68:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce70:	push   rbp
  40ce71:	push   r15
  40ce73:	push   r14
  40ce75:	push   rbx
  40ce76:	push   rax
  40ce77:	mov    rax,QWORD PTR fs:0x28
  40ce80:	mov    QWORD PTR [rsp],rax
  40ce84:	mov    r14b,0x1
  40ce87:	cmp    DWORD PTR [rdi+0x58],0x0
  40ce8b:	js     40ceda <isspace@plt+0x95ca>
  40ce8d:	cmp    DWORD PTR [rdi+0x5c],0x0
  40ce91:	js     40ceda <isspace@plt+0x95ca>
  40ce93:	mov    rbx,QWORD PTR [rdi+0x70]
  40ce97:	test   rbx,rbx
  40ce9a:	je     40ced7 <isspace@plt+0x95c7>
  40ce9c:	lea    rbp,[rip+0xffffffffffffd55d]        # 40a400 <isspace@plt+0x6af0>
  40cea3:	lea    r15,[rip+0x516]        # 40d3c0 <isspace@plt+0x9ab0>
  40ceaa:	nop    WORD PTR [rax+rax*1+0x0]
  40ceb0:	mov    rax,QWORD PTR [rbx+0x50]
  40ceb4:	mov    rax,QWORD PTR [rax+0x20]
  40ceb8:	cmp    rax,rbp
  40cebb:	je     40cece <isspace@plt+0x95be>
  40cebd:	cmp    rax,r15
  40cec0:	je     40cece <isspace@plt+0x95be>
  40cec2:	mov    rdi,rbx
  40cec5:	call   40ce70 <isspace@plt+0x9560>
  40ceca:	test   al,al
  40cecc:	jne    40ceda <isspace@plt+0x95ca>
  40cece:	mov    rbx,QWORD PTR [rbx+0x78]
  40ced2:	test   rbx,rbx
  40ced5:	jne    40ceb0 <isspace@plt+0x95a0>
  40ced7:	xor    r14d,r14d
  40ceda:	mov    rax,QWORD PTR fs:0x28
  40cee3:	cmp    rax,QWORD PTR [rsp]
  40cee7:	jne    40cef7 <isspace@plt+0x95e7>
  40cee9:	mov    eax,r14d
  40ceec:	add    rsp,0x8
  40cef0:	pop    rbx
  40cef1:	pop    r14
  40cef3:	pop    r15
  40cef5:	pop    rbp
  40cef6:	ret    
  40cef7:	call   403280 <__stack_chk_fail@plt>
  40cefc:	nop    DWORD PTR [rax+0x0]
  40cf00:	push   rbp
  40cf01:	push   r15
  40cf03:	push   r14
  40cf05:	push   r13
  40cf07:	push   r12
  40cf09:	push   rbx
  40cf0a:	sub    rsp,0x128
  40cf11:	mov    rbp,r8
  40cf14:	mov    QWORD PTR [rsp+0x60],rcx
  40cf19:	mov    QWORD PTR [rsp+0x18],rdi
  40cf1e:	mov    rax,QWORD PTR fs:0x28
  40cf27:	mov    QWORD PTR [rsp+0x120],rax
  40cf2f:	mov    QWORD PTR [rsp+0x30],rsi
  40cf34:	mov    rax,QWORD PTR [rsi+0x10]
  40cf38:	mov    r13,QWORD PTR [rax]
  40cf3b:	mov    QWORD PTR [rsp+0x28],rdx
  40cf40:	mov    rdi,QWORD PTR [rdx+0x48]
  40cf44:	mov    r12,QWORD PTR [r9]
  40cf47:	mov    QWORD PTR [rsp+0x48],r9
  40cf4c:	mov    r14,QWORD PTR [r9+0x8]
  40cf50:	test   rdi,rdi
  40cf53:	je     40d1e3 <isspace@plt+0x98d3>
  40cf59:	mov    QWORD PTR [rsp+0x50],rbp
  40cf5e:	call   42b5c0 <isspace@plt+0x27cb0>
  40cf63:	add    rax,0x1
  40cf67:	cmp    rax,0xa
  40cf6b:	mov    r15d,0xa
  40cf71:	cmovb  r15,rax
  40cf75:	cmp    r14,r12
  40cf78:	jbe    40d2a4 <isspace@plt+0x9994>
  40cf7e:	mov    rax,QWORD PTR [rsp+0x18]
  40cf83:	lea    rax,[rax+0x90]
  40cf8a:	mov    QWORD PTR [rsp+0x58],rax
  40cf8f:	mov    QWORD PTR [rsp+0x20],0xffffffffffffffff
  40cf98:	xor    eax,eax
  40cf9a:	mov    QWORD PTR [rsp+0x10],rax
  40cf9f:	mov    BYTE PTR [rsp+0xb],0x1
  40cfa4:	mov    QWORD PTR [rsp+0x38],r14
  40cfa9:	jmp    40d09b <isspace@plt+0x978b>
  40cfae:	cmp    r14,rax
  40cfb1:	jne    40cfd0 <isspace@plt+0x96c0>
  40cfb3:	mov    rax,QWORD PTR [rsp+0x48]
  40cfb8:	cmp    r12,QWORD PTR [rax]
  40cfbb:	ja     40d1cb <isspace@plt+0x98bb>
  40cfc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cfcb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cfd0:	mov    r12,rcx
  40cfd3:	cmp    rcx,r14
  40cfd6:	sete   al
  40cfd9:	mov    DWORD PTR [rsp+0xc],eax
  40cfdd:	lea    rdi,[rsp+0x68]
  40cfe2:	call   417400 <isspace@plt+0x13af0>
  40cfe7:	test   al,al
  40cfe9:	je     40d092 <isspace@plt+0x9782>
  40cfef:	mov    QWORD PTR [rsp+0x40],r12
  40cff4:	test   r15,r15
  40cff7:	mov    r14,QWORD PTR [rsp+0x18]
  40cffc:	je     40d042 <isspace@plt+0x9732>
  40cffe:	test   ebx,ebx
  40d000:	jne    40d042 <isspace@plt+0x9732>
  40d002:	mov    r12,QWORD PTR [rsp+0x58]
  40d007:	lea    rbx,[rsp+0x80]
  40d00f:	xor    ebp,ebp
  40d011:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d01b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d020:	mov    rdi,r14
  40d023:	mov    rsi,r12
  40d026:	mov    rdx,r13
  40d029:	mov    rcx,rbx
  40d02c:	call   42aef0 <isspace@plt+0x275e0>
  40d031:	add    rbp,0x1
  40d035:	add    rbx,0x10
  40d039:	add    r12,0x28
  40d03d:	cmp    rbp,r15
  40d040:	jb     40d020 <isspace@plt+0x9710>
  40d042:	cmp    BYTE PTR [rsp+0x160],0x0
  40d04a:	je     40d060 <isspace@plt+0x9750>
  40d04c:	mov    rax,QWORD PTR [rsp+0x10]
  40d051:	add    eax,0x1
  40d054:	mov    QWORD PTR [rsp+0x10],rax
  40d059:	jmp    40d083 <isspace@plt+0x9773>
  40d05b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d060:	mov    rax,QWORD PTR [rsp+0x28]
  40d065:	mov    rdx,QWORD PTR [rax+0x70]
  40d069:	xor    ecx,ecx
  40d06b:	mov    rdi,QWORD PTR [rsp+0x18]
  40d070:	mov    rsi,QWORD PTR [rsp+0x30]
  40d075:	lea    r8,[rsp+0x68]
  40d07a:	call   409750 <isspace@plt+0x5e40>
  40d07f:	and    BYTE PTR [rsp+0xb],al
  40d083:	mov    r12,QWORD PTR [rsp+0x40]
  40d088:	mov    QWORD PTR [rsp+0x20],r12
  40d08d:	mov    r14,QWORD PTR [rsp+0x38]
  40d092:	cmp    r14,r12
  40d095:	jbe    40d1c0 <isspace@plt+0x98b0>
  40d09b:	mov    rax,QWORD PTR [rsp+0x48]
  40d0a0:	cmp    r12,QWORD PTR [rax]
  40d0a3:	jbe    40d0d0 <isspace@plt+0x97c0>
  40d0a5:	lea    rsi,[r12-0x1]
  40d0aa:	mov    rdi,r13
  40d0ad:	lea    rdx,[rsp+0x7f]
  40d0b2:	call   4112b0 <isspace@plt+0xd9a0>
  40d0b7:	test   al,al
  40d0b9:	je     40d0d0 <isspace@plt+0x97c0>
  40d0bb:	cmp    BYTE PTR [rsp+0x7f],0xa
  40d0c0:	setne  al
  40d0c3:	jmp    40d0d2 <isspace@plt+0x97c2>
  40d0c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d0cf:	nop
  40d0d0:	xor    eax,eax
  40d0d2:	movzx  eax,al
  40d0d5:	mov    rdx,r14
  40d0d8:	sub    rdx,r12
  40d0db:	mov    rcx,QWORD PTR [rsp+0x28]
  40d0e0:	mov    rcx,QWORD PTR [rcx+0x48]
  40d0e4:	mov    DWORD PTR [rsp],eax
  40d0e7:	mov    rdi,r13
  40d0ea:	mov    rsi,r12
  40d0ed:	mov    r8,r15
  40d0f0:	lea    r9,[rsp+0x80]
  40d0f8:	call   42b690 <isspace@plt+0x27d80>
  40d0fd:	mov    ebx,eax
  40d0ff:	call   4174c0 <isspace@plt+0x13bb0>
  40d104:	mov    QWORD PTR [rsp+0x68],rax
  40d109:	mov    QWORD PTR [rsp+0x70],rdx
  40d10e:	mov    rax,QWORD PTR [rsp+0x60]
  40d113:	mov    rax,QWORD PTR [rax]
  40d116:	mov    al,BYTE PTR [rax]
  40d118:	test   ebx,ebx
  40d11a:	je     40d150 <isspace@plt+0x9840>
  40d11c:	cmp    al,0x79
  40d11e:	jne    40d135 <isspace@plt+0x9825>
  40d120:	mov    rdi,r12
  40d123:	mov    rsi,r14
  40d126:	call   417690 <isspace@plt+0x13d80>
  40d12b:	mov    QWORD PTR [rsp+0x68],rax
  40d130:	mov    QWORD PTR [rsp+0x70],rdx
  40d135:	mov    DWORD PTR [rsp+0xc],0x0
  40d13d:	mov    r12,r14
  40d140:	jmp    40cfdd <isspace@plt+0x96cd>
  40d145:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d14f:	nop
  40d150:	mov    rsi,QWORD PTR [rsp+0x80]
  40d158:	cmp    al,0x78
  40d15a:	jne    40d16c <isspace@plt+0x985c>
  40d15c:	mov    rax,QWORD PTR [rsp+0x88]
  40d164:	mov    rdi,rsi
  40d167:	mov    rsi,rax
  40d16a:	jmp    40d16f <isspace@plt+0x985f>
  40d16c:	mov    rdi,r12
  40d16f:	call   417690 <isspace@plt+0x13d80>
  40d174:	mov    QWORD PTR [rsp+0x68],rax
  40d179:	mov    QWORD PTR [rsp+0x70],rdx
  40d17e:	mov    rax,QWORD PTR [rsp+0x80]
  40d186:	mov    rdx,QWORD PTR [rsp+0x88]
  40d18e:	mov    rcx,rdx
  40d191:	cmp    rax,rdx
  40d194:	jne    40cfd0 <isspace@plt+0x96c0>
  40d19a:	cmp    QWORD PTR [rsp+0x20],rax
  40d19f:	jne    40cfae <isspace@plt+0x969e>
  40d1a5:	add    r12,0x1
  40d1a9:	mov    DWORD PTR [rsp+0xc],0x0
  40d1b1:	cmp    r14,r12
  40d1b4:	ja     40d09b <isspace@plt+0x978b>
  40d1ba:	nop    WORD PTR [rax+rax*1+0x0]
  40d1c0:	cmp    BYTE PTR [rsp+0xc],0x0
  40d1c5:	jne    40d09b <isspace@plt+0x978b>
  40d1cb:	mov    rbp,QWORD PTR [rsp+0x50]
  40d1d0:	cmp    BYTE PTR [rsp+0x160],0x0
  40d1d8:	je     40d2bf <isspace@plt+0x99af>
  40d1de:	jmp    40d2c7 <isspace@plt+0x99b7>
  40d1e3:	cmp    r12,r14
  40d1e6:	jae    40d302 <isspace@plt+0x99f2>
  40d1ec:	xor    eax,eax
  40d1ee:	mov    QWORD PTR [rsp+0x10],rax
  40d1f3:	mov    BYTE PTR [rsp+0xb],0x1
  40d1f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d200:	mov    rdi,r13
  40d203:	mov    rsi,r12
  40d206:	call   4137b0 <isspace@plt+0xfea0>
  40d20b:	mov    r15,rax
  40d20e:	mov    rbx,r14
  40d211:	cmp    rax,r14
  40d214:	ja     40d219 <isspace@plt+0x9909>
  40d216:	mov    rbx,r15
  40d219:	mov    rdi,r12
  40d21c:	mov    rsi,rbx
  40d21f:	call   417690 <isspace@plt+0x13d80>
  40d224:	mov    QWORD PTR [rsp+0x80],rax
  40d22c:	mov    QWORD PTR [rsp+0x88],rdx
  40d234:	cmp    r12,rbx
  40d237:	je     40d2b5 <isspace@plt+0x99a5>
  40d239:	lea    rdi,[rsp+0x80]
  40d241:	call   417400 <isspace@plt+0x13af0>
  40d246:	test   al,al
  40d248:	je     40d2b5 <isspace@plt+0x99a5>
  40d24a:	cmp    BYTE PTR [rsp+0x160],0x0
  40d252:	je     40d270 <isspace@plt+0x9960>
  40d254:	mov    rax,QWORD PTR [rsp+0x10]
  40d259:	add    eax,0x1
  40d25c:	mov    QWORD PTR [rsp+0x10],rax
  40d261:	jmp    40d296 <isspace@plt+0x9986>
  40d263:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d26d:	nop    DWORD PTR [rax]
  40d270:	mov    rax,QWORD PTR [rsp+0x28]
  40d275:	mov    rdx,QWORD PTR [rax+0x70]
  40d279:	xor    ecx,ecx
  40d27b:	mov    rdi,QWORD PTR [rsp+0x18]
  40d280:	mov    rsi,QWORD PTR [rsp+0x30]
  40d285:	lea    r8,[rsp+0x80]
  40d28d:	call   409750 <isspace@plt+0x5e40>
  40d292:	and    BYTE PTR [rsp+0xb],al
  40d296:	mov    r12,rbx
  40d299:	cmp    r14,r15
  40d29c:	ja     40d200 <isspace@plt+0x98f0>
  40d2a2:	jmp    40d2b5 <isspace@plt+0x99a5>
  40d2a4:	mov    BYTE PTR [rsp+0xb],0x1
  40d2a9:	xor    eax,eax
  40d2ab:	mov    QWORD PTR [rsp+0x10],rax
  40d2b0:	mov    rbp,QWORD PTR [rsp+0x50]
  40d2b5:	cmp    BYTE PTR [rsp+0x160],0x0
  40d2bd:	jne    40d2c7 <isspace@plt+0x99b7>
  40d2bf:	mov    rdi,rbp
  40d2c2:	call   41f620 <isspace@plt+0x1bd10>
  40d2c7:	mov    al,BYTE PTR [rsp+0xb]
  40d2cb:	and    al,0x1
  40d2cd:	movzx  eax,al
  40d2d0:	cmp    BYTE PTR [rsp+0x160],0x0
  40d2d8:	cmovne eax,DWORD PTR [rsp+0x10]
  40d2dd:	mov    rcx,QWORD PTR fs:0x28
  40d2e6:	cmp    rcx,QWORD PTR [rsp+0x120]
  40d2ee:	jne    40d31a <isspace@plt+0x9a0a>
  40d2f0:	add    rsp,0x128
  40d2f7:	pop    rbx
  40d2f8:	pop    r12
  40d2fa:	pop    r13
  40d2fc:	pop    r14
  40d2fe:	pop    r15
  40d300:	pop    rbp
  40d301:	ret    
  40d302:	mov    BYTE PTR [rsp+0xb],0x1
  40d307:	xor    eax,eax
  40d309:	mov    QWORD PTR [rsp+0x10],rax
  40d30e:	cmp    BYTE PTR [rsp+0x160],0x0
  40d316:	je     40d2bf <isspace@plt+0x99af>
  40d318:	jmp    40d2c7 <isspace@plt+0x99b7>
  40d31a:	call   403280 <__stack_chk_fail@plt>
  40d31f:	nop
  40d320:	push   rbp
  40d321:	push   r15
  40d323:	push   r14
  40d325:	push   rbx
  40d326:	push   rax
  40d327:	mov    r14d,esi
  40d32a:	mov    rax,QWORD PTR fs:0x28
  40d333:	mov    QWORD PTR [rsp],rax
  40d337:	mov    DWORD PTR [rdi+0x64],0x0
  40d33e:	mov    eax,DWORD PTR [rdi+0x58]
  40d341:	test   eax,eax
  40d343:	jns    40d34b <isspace@plt+0x9a3b>
  40d345:	add    eax,r14d
  40d348:	mov    DWORD PTR [rdi+0x58],eax
  40d34b:	mov    eax,DWORD PTR [rdi+0x5c]
  40d34e:	test   eax,eax
  40d350:	jns    40d358 <isspace@plt+0x9a48>
  40d352:	add    eax,r14d
  40d355:	mov    DWORD PTR [rdi+0x5c],eax
  40d358:	mov    rbx,QWORD PTR [rdi+0x70]
  40d35c:	test   rbx,rbx
  40d35f:	je     40d396 <isspace@plt+0x9a86>
  40d361:	lea    rbp,[rip+0xffffffffffffd098]        # 40a400 <isspace@plt+0x6af0>
  40d368:	lea    r15,[rip+0x51]        # 40d3c0 <isspace@plt+0x9ab0>
  40d36f:	nop
  40d370:	mov    rax,QWORD PTR [rbx+0x50]
  40d374:	mov    rax,QWORD PTR [rax+0x20]
  40d378:	cmp    rax,rbp
  40d37b:	je     40d38d <isspace@plt+0x9a7d>
  40d37d:	cmp    rax,r15
  40d380:	je     40d38d <isspace@plt+0x9a7d>
  40d382:	mov    rdi,rbx
  40d385:	mov    esi,r14d
  40d388:	call   40d320 <isspace@plt+0x9a10>
  40d38d:	mov    rbx,QWORD PTR [rbx+0x78]
  40d391:	test   rbx,rbx
  40d394:	jne    40d370 <isspace@plt+0x9a60>
  40d396:	mov    rax,QWORD PTR fs:0x28
  40d39f:	cmp    rax,QWORD PTR [rsp]
  40d3a3:	jne    40d3b0 <isspace@plt+0x9aa0>
  40d3a5:	add    rsp,0x8
  40d3a9:	pop    rbx
  40d3aa:	pop    r14
  40d3ac:	pop    r15
  40d3ae:	pop    rbp
  40d3af:	ret    
  40d3b0:	call   403280 <__stack_chk_fail@plt>
  40d3b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d3bf:	nop
  40d3c0:	push   rbp
  40d3c1:	push   r15
  40d3c3:	push   r14
  40d3c5:	push   r13
  40d3c7:	push   r12
  40d3c9:	push   rbx
  40d3ca:	sub    rsp,0x48
  40d3ce:	mov    rbp,rdx
  40d3d1:	mov    r13,rsi
  40d3d4:	mov    r12,rdi
  40d3d7:	mov    rax,QWORD PTR fs:0x28
  40d3e0:	mov    QWORD PTR [rsp+0x40],rax
  40d3e5:	call   4174c0 <isspace@plt+0x13bb0>
  40d3ea:	mov    QWORD PTR [rsp+0x30],rax
  40d3ef:	mov    QWORD PTR [rsp+0x38],rdx
  40d3f4:	test   r13,r13
  40d3f7:	je     40d465 <isspace@plt+0x9b55>
  40d3f9:	mov    rax,QWORD PTR [r13+0x10]
  40d3fd:	mov    r15,QWORD PTR [r13+0x18]
  40d401:	mov    rax,QWORD PTR [rax]
  40d404:	mov    QWORD PTR [rsp],rax
  40d408:	mov    rdi,r15
  40d40b:	call   41f1e0 <isspace@plt+0x1b8d0>
  40d410:	mov    DWORD PTR [rsp+0xc],eax
  40d414:	mov    rdi,r15
  40d417:	call   41f750 <isspace@plt+0x1be40>
  40d41c:	mov    QWORD PTR [rsp+0x10],rax
  40d421:	mov    rax,QWORD PTR [r12+0x9a0]
  40d429:	cmp    BYTE PTR [rax+0x58],0x0
  40d42d:	je     40d446 <isspace@plt+0x9b36>
  40d42f:	mov    r14,QWORD PTR [rbp+0x70]
  40d433:	mov    rdi,r15
  40d436:	call   41f1e0 <isspace@plt+0x1b8d0>
  40d43b:	lea    esi,[rax+0x1]
  40d43e:	mov    rdi,r14
  40d441:	call   40d320 <isspace@plt+0x9a10>
  40d446:	mov    QWORD PTR [rsp+0x18],r15
  40d44b:	mov    rdi,r15
  40d44e:	call   41f710 <isspace@plt+0x1be00>
  40d453:	mov    r14,rax
  40d456:	mov    r15b,0x1
  40d459:	lea    rbx,[rsp+0x30]
  40d45e:	mov    QWORD PTR [rsp+0x20],r12
  40d463:	jmp    40d4c0 <isspace@plt+0x9bb0>
  40d465:	mov    rdx,QWORD PTR [rbp+0x70]
  40d469:	lea    r8,[rsp+0x30]
  40d46e:	xor    esi,esi
  40d470:	xor    ecx,ecx
  40d472:	mov    rdi,r12
  40d475:	call   409750 <isspace@plt+0x5e40>
  40d47a:	mov    r15d,eax
  40d47d:	jmp    40d660 <isspace@plt+0x9d50>
  40d482:	mov    rdi,QWORD PTR [rsp]
  40d486:	mov    rsi,r12
  40d489:	call   416700 <isspace@plt+0x12df0>
  40d48e:	jmp    40d5cb <isspace@plt+0x9cbb>
  40d493:	mov    rdi,QWORD PTR [rsp]
  40d497:	mov    rsi,r12
  40d49a:	call   4137b0 <isspace@plt+0xfea0>
  40d49f:	mov    rdi,rax
  40d4a2:	mov    rsi,rax
  40d4a5:	jmp    40d5c6 <isspace@plt+0x9cb6>
  40d4aa:	mov    rdi,QWORD PTR [rsp]
  40d4ae:	mov    rsi,r12
  40d4b1:	call   412fb0 <isspace@plt+0xf6a0>
  40d4b6:	mov    rdi,r12
  40d4b9:	jmp    40d4a2 <isspace@plt+0x9b92>
  40d4bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d4c0:	test   r14,r14
  40d4c3:	je     40d628 <isspace@plt+0x9d18>
  40d4c9:	test   r15b,r15b
  40d4cc:	je     40d628 <isspace@plt+0x9d18>
  40d4d2:	mov    rdi,r14
  40d4d5:	call   41f7f0 <isspace@plt+0x1bee0>
  40d4da:	mov    QWORD PTR [rsp+0x28],rax
  40d4df:	mov    rdi,r14
  40d4e2:	call   41b4d0 <isspace@plt+0x17bc0>
  40d4e7:	mov    rcx,r12
  40d4ea:	mov    r12,rax
  40d4ed:	mov    rax,QWORD PTR [rcx+0x9a0]
  40d4f4:	cmp    BYTE PTR [rax+0x58],0x0
  40d4f8:	je     40d510 <isspace@plt+0x9c00>
  40d4fa:	mov    rdi,r14
  40d4fd:	call   41ff60 <isspace@plt+0x1c650>
  40d502:	jmp    40d5cb <isspace@plt+0x9cbb>
  40d507:	nop    WORD PTR [rax+rax*1+0x0]
  40d510:	mov    rcx,QWORD PTR [rbp+0x70]
  40d514:	mov    rax,QWORD PTR [rcx+0x40]
  40d518:	test   rax,rax
  40d51b:	je     40d56f <isspace@plt+0x9c5f>
  40d51d:	cmp    DWORD PTR [rsp+0xc],0x1
  40d522:	jg     40d5c0 <isspace@plt+0x9cb0>
  40d528:	mov    rcx,QWORD PTR [rcx+0x50]
  40d52c:	lea    rdx,[rip+0xffffffffffffcddd]        # 40a310 <isspace@plt+0x6a00>
  40d533:	cmp    QWORD PTR [rcx+0x20],rdx
  40d537:	jne    40d5c0 <isspace@plt+0x9cb0>
  40d53d:	movzx  ecx,BYTE PTR [rax]
  40d540:	movsx  edx,cl
  40d543:	cmp    edx,0x2b
  40d546:	je     40d552 <isspace@plt+0x9c42>
  40d548:	cmp    edx,0x6c
  40d54b:	je     40d55e <isspace@plt+0x9c4e>
  40d54d:	cmp    edx,0x2d
  40d550:	jne    40d5c0 <isspace@plt+0x9cb0>
  40d552:	mov    rax,QWORD PTR [rax+0x20]
  40d556:	test   rax,rax
  40d559:	je     40d5c0 <isspace@plt+0x9cb0>
  40d55b:	movzx  ecx,BYTE PTR [rax]
  40d55e:	cmp    cl,0x6c
  40d561:	jne    40d5c0 <isspace@plt+0x9cb0>
  40d563:	cmp    QWORD PTR [rax+0x20],0x0
  40d568:	jne    40d5c0 <isspace@plt+0x9cb0>
  40d56a:	mov    BYTE PTR [rax],0x67
  40d56d:	jmp    40d5c0 <isspace@plt+0x9cb0>
  40d56f:	mov    rax,QWORD PTR [rcx+0x50]
  40d573:	mov    eax,DWORD PTR [rax+0x10]
  40d576:	test   al,0x40
  40d578:	jne    40d5c0 <isspace@plt+0x9cb0>
  40d57a:	test   al,al
  40d57c:	js     40d482 <isspace@plt+0x9b72>
  40d582:	test   eax,0x100
  40d587:	jne    40d493 <isspace@plt+0x9b83>
  40d58d:	test   eax,0x200
  40d592:	jne    40d5aa <isspace@plt+0x9c9a>
  40d594:	cmp    DWORD PTR [rsp+0xc],0x1
  40d599:	jg     40d4aa <isspace@plt+0x9b9a>
  40d59f:	and    eax,0x400
  40d5a4:	je     40d4aa <isspace@plt+0x9b9a>
  40d5aa:	mov    rdi,QWORD PTR [rsp]
  40d5ae:	call   410a90 <isspace@plt+0xd180>
  40d5b3:	xor    edi,edi
  40d5b5:	jmp    40d4a2 <isspace@plt+0x9b92>
  40d5ba:	nop    WORD PTR [rax+rax*1+0x0]
  40d5c0:	mov    rdi,r12
  40d5c3:	mov    rsi,r12
  40d5c6:	call   417690 <isspace@plt+0x13d80>
  40d5cb:	mov    QWORD PTR [rsp+0x30],rax
  40d5d0:	mov    QWORD PTR [rsp+0x38],rdx
  40d5d5:	mov    rdi,rbx
  40d5d8:	call   417400 <isspace@plt+0x13af0>
  40d5dd:	test   al,al
  40d5df:	mov    r12,QWORD PTR [rsp+0x20]
  40d5e4:	jne    40d5f9 <isspace@plt+0x9ce9>
  40d5e6:	xor    edi,edi
  40d5e8:	xor    esi,esi
  40d5ea:	call   417690 <isspace@plt+0x13d80>
  40d5ef:	mov    QWORD PTR [rsp+0x30],rax
  40d5f4:	mov    QWORD PTR [rsp+0x38],rdx
  40d5f9:	mov    rdx,QWORD PTR [rbp+0x70]
  40d5fd:	mov    rdi,r12
  40d600:	mov    rsi,r13
  40d603:	mov    rcx,r14
  40d606:	mov    r8,rbx
  40d609:	call   409750 <isspace@plt+0x5e40>
  40d60e:	and    r15b,al
  40d611:	mov    rax,QWORD PTR [rbp+0x70]
  40d615:	mov    rax,QWORD PTR [rax+0x50]
  40d619:	test   BYTE PTR [rax+0x11],0x40
  40d61d:	mov    r14,QWORD PTR [rsp+0x28]
  40d622:	je     40d4c0 <isspace@plt+0x9bb0>
  40d628:	mov    rax,QWORD PTR [r12+0x30]
  40d62d:	test   rax,rax
  40d630:	mov    rbp,QWORD PTR [rsp+0x18]
  40d635:	je     40d65c <isspace@plt+0x9d4c>
  40d637:	cmp    QWORD PTR [rax+0x18],rbp
  40d63b:	jne    40d65c <isspace@plt+0x9d4c>
  40d63d:	mov    rdi,rbp
  40d640:	call   41f750 <isspace@plt+0x1be40>
  40d645:	cmp    QWORD PTR [rsp+0x10],rax
  40d64a:	je     40d65c <isspace@plt+0x9d4c>
  40d64c:	mov    rdi,rbp
  40d64f:	call   41f710 <isspace@plt+0x1be00>
  40d654:	mov    rdi,rax
  40d657:	call   41f5c0 <isspace@plt+0x1bcb0>
  40d65c:	and    r15b,0x1
  40d660:	mov    rax,QWORD PTR fs:0x28
  40d669:	cmp    rax,QWORD PTR [rsp+0x40]
  40d66e:	jne    40d682 <isspace@plt+0x9d72>
  40d670:	mov    eax,r15d
  40d673:	add    rsp,0x48
  40d677:	pop    rbx
  40d678:	pop    r12
  40d67a:	pop    r13
  40d67c:	pop    r14
  40d67e:	pop    r15
  40d680:	pop    rbp
  40d681:	ret    
  40d682:	call   403280 <__stack_chk_fail@plt>
  40d687:	nop    WORD PTR [rax+rax*1+0x0]
  40d690:	push   rbx
  40d691:	sub    rsp,0x10
  40d695:	mov    rbx,rdx
  40d698:	mov    rax,QWORD PTR fs:0x28
  40d6a1:	mov    QWORD PTR [rsp+0x8],rax
  40d6a6:	call   404460 <isspace@plt+0xb50>
  40d6ab:	mov    rax,QWORD PTR fs:0x28
  40d6b4:	cmp    rax,QWORD PTR [rsp+0x8]
  40d6b9:	jne    40d6c4 <isspace@plt+0x9db4>
  40d6bb:	mov    rax,rbx
  40d6be:	add    rsp,0x10
  40d6c2:	pop    rbx
  40d6c3:	ret    
  40d6c4:	call   403280 <__stack_chk_fail@plt>
  40d6c9:	nop    DWORD PTR [rax+0x0]
  40d6d0:	push   r15
  40d6d2:	push   r14
  40d6d4:	push   r13
  40d6d6:	push   r12
  40d6d8:	push   rbx
  40d6d9:	sub    rsp,0xf0
  40d6e0:	mov    rax,QWORD PTR fs:0x28
  40d6e9:	mov    QWORD PTR [rsp+0xe8],rax
  40d6f1:	mov    BYTE PTR [rip+0x35ca8],0x0        # 4433a0 <isspace@plt+0x3fa90>
  40d6f8:	test   rsi,rsi
  40d6fb:	je     40d845 <isspace@plt+0x9f35>
  40d701:	mov    r13,rsi
  40d704:	mov    r14,rdi
  40d707:	lea    rdx,[rsp+0x58]
  40d70c:	mov    edi,0x1
  40d711:	call   403570 <__xstat@plt>
  40d716:	test   eax,eax
  40d718:	jne    40d72a <isspace@plt+0x9e1a>
  40d71a:	mov    eax,0xf000
  40d71f:	and    eax,DWORD PTR [rsp+0x70]
  40d723:	cmp    eax,0x4000
  40d728:	je     40d770 <isspace@plt+0x9e60>
  40d72a:	mov    BYTE PTR [rsp+0x36],0x0
  40d72f:	mov    WORD PTR [rsp+0x34],0x7e24
  40d736:	mov    DWORD PTR [rsp+0x30],0x7b5b3f2a
  40d73e:	lea    rbx,[rsp+0x31]
  40d743:	mov    al,0x2a
  40d745:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d74f:	nop
  40d750:	movsx  esi,al
  40d753:	mov    rdi,r13
  40d756:	call   4032f0 <strchr@plt>
  40d75b:	test   rax,rax
  40d75e:	jne    40d770 <isspace@plt+0x9e60>
  40d760:	movzx  eax,BYTE PTR [rbx]
  40d763:	add    rbx,0x1
  40d767:	test   al,al
  40d769:	jne    40d750 <isspace@plt+0x9e40>
  40d76b:	jmp    40d848 <isspace@plt+0x9f38>
  40d770:	lea    r12,[rsp+0x58]
  40d775:	mov    rdi,r12
  40d778:	call   404230 <isspace@plt+0x920>
  40d77d:	lea    rdi,[rsp+0x30]
  40d782:	call   404230 <isspace@plt+0x920>
  40d787:	lea    r15,[rsp+0x18]
  40d78c:	mov    rdi,r15
  40d78f:	call   404230 <isspace@plt+0x920>
  40d794:	lea    rsi,[rip+0x23233]        # 4309ce <isspace@plt+0x2d0be>
  40d79b:	mov    rdi,r12
  40d79e:	call   404670 <isspace@plt+0xd60>
  40d7a3:	test   al,al
  40d7a5:	je     40d845 <isspace@plt+0x9f35>
  40d7ab:	lea    rdi,[rsp+0x58]
  40d7b0:	mov    rsi,r13
  40d7b3:	call   404960 <isspace@plt+0x1050>
  40d7b8:	test   al,al
  40d7ba:	je     40d845 <isspace@plt+0x9f35>
  40d7c0:	xor    edi,edi
  40d7c2:	xor    esi,esi
  40d7c4:	call   417690 <isspace@plt+0x13d80>
  40d7c9:	mov    QWORD PTR [rsp+0x8],rax
  40d7ce:	mov    QWORD PTR [rsp+0x10],rdx
  40d7d3:	mov    rax,QWORD PTR [r14+0x30]
  40d7d7:	mov    rbx,QWORD PTR [rax+0x10]
  40d7db:	lea    rdi,[rsp+0x58]
  40d7e0:	call   404dd0 <isspace@plt+0x14c0>
  40d7e5:	mov    QWORD PTR [rsp+0x48],rax
  40d7ea:	mov    QWORD PTR [rsp+0x50],0x0
  40d7f3:	lea    r9,[rip+0xfffffffffffffe96]        # 40d690 <isspace@plt+0x9d80>
  40d7fa:	lea    rdx,[rsp+0x8]
  40d7ff:	lea    rcx,[rsp+0x48]
  40d804:	lea    r8,[rsp+0x30]
  40d809:	mov    rdi,r14
  40d80c:	mov    rsi,rbx
  40d80f:	push   r9
  40d811:	push   r15
  40d813:	call   4253e0 <isspace@plt+0x21ad0>
  40d818:	add    rsp,0x10
  40d81c:	cmp    eax,0x1
  40d81f:	je     40d894 <isspace@plt+0x9f84>
  40d821:	test   eax,eax
  40d823:	jne    40d873 <isspace@plt+0x9f63>
  40d825:	lea    rdi,[rsp+0x30]
  40d82a:	call   404dd0 <isspace@plt+0x14c0>
  40d82f:	lea    rdi,[rip+0x35b6a]        # 4433a0 <isspace@plt+0x3fa90>
  40d836:	mov    edx,0xfff
  40d83b:	mov    rsi,rax
  40d83e:	call   403150 <strncpy@plt>
  40d843:	jmp    40d894 <isspace@plt+0x9f84>
  40d845:	xor    r13d,r13d
  40d848:	mov    rax,QWORD PTR fs:0x28
  40d851:	cmp    rax,QWORD PTR [rsp+0xe8]
  40d859:	jne    40d90b <isspace@plt+0x9ffb>
  40d85f:	mov    rax,r13
  40d862:	add    rsp,0xf0
  40d869:	pop    rbx
  40d86a:	pop    r12
  40d86c:	pop    r13
  40d86e:	pop    r14
  40d870:	pop    r15
  40d872:	ret    
  40d873:	lea    rdi,[rsp+0x18]
  40d878:	call   404dd0 <isspace@plt+0x14c0>
  40d87d:	mov    rcx,rax
  40d880:	lea    rsi,[rip+0x22fab]        # 430832 <isspace@plt+0x2cf22>
  40d887:	xor    eax,eax
  40d889:	mov    rdi,r14
  40d88c:	mov    rdx,rcx
  40d88f:	call   42a150 <isspace@plt+0x26840>
  40d894:	lea    rdi,[rsp+0x58]
  40d899:	call   404550 <isspace@plt+0xc40>
  40d89e:	lea    rdi,[rsp+0x30]
  40d8a3:	call   404550 <isspace@plt+0xc40>
  40d8a8:	lea    rdi,[rsp+0x18]
  40d8ad:	call   404550 <isspace@plt+0xc40>
  40d8b2:	lea    r13,[rip+0x35ae7]        # 4433a0 <isspace@plt+0x3fa90>
  40d8b9:	mov    rdi,r13
  40d8bc:	call   403250 <strlen@plt>
  40d8c1:	lea    rbx,[rax+r13*1]
  40d8c5:	add    rbx,0xffffffffffffffff
  40d8c9:	cmp    rbx,r13
  40d8cc:	jb     40d8f9 <isspace@plt+0x9fe9>
  40d8ce:	call   4038f0 <__ctype_b_loc@plt>
  40d8d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d8dd:	nop    DWORD PTR [rax]
  40d8e0:	mov    rcx,QWORD PTR [rax]
  40d8e3:	movzx  edx,BYTE PTR [rbx]
  40d8e6:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  40d8eb:	je     40d8f9 <isspace@plt+0x9fe9>
  40d8ed:	mov    BYTE PTR [rbx],0x0
  40d8f0:	add    rbx,0xffffffffffffffff
  40d8f4:	cmp    rbx,r13
  40d8f7:	jae    40d8e0 <isspace@plt+0x9fd0>
  40d8f9:	xor    eax,eax
  40d8fb:	cmp    BYTE PTR [rip+0x35a9e],0x0        # 4433a0 <isspace@plt+0x3fa90>
  40d902:	cmove  r13,rax
  40d906:	jmp    40d848 <isspace@plt+0x9f38>
  40d90b:	call   403280 <__stack_chk_fail@plt>
  40d910:	push   rax
  40d911:	mov    r8,rsi
  40d914:	mov    rax,QWORD PTR fs:0x28
  40d91d:	mov    QWORD PTR [rsp],rax
  40d921:	cmp    BYTE PTR [rdi],0x20
  40d924:	lea    rcx,[rip+0x2343f]        # 430d6a <isspace@plt+0x2d45a>
  40d92b:	cmovne rcx,rdi
  40d92f:	lea    rsi,[rip+0x23159]        # 430a8f <isspace@plt+0x2d17f>
  40d936:	xor    eax,eax
  40d938:	mov    rdi,rdx
  40d93b:	mov    rdx,rcx
  40d93e:	mov    rcx,r8
  40d941:	call   4110f0 <isspace@plt+0xd7e0>
  40d946:	mov    rcx,QWORD PTR fs:0x28
  40d94f:	cmp    rcx,QWORD PTR [rsp]
  40d953:	jne    40d957 <isspace@plt+0xa047>
  40d955:	pop    rcx
  40d956:	ret    
  40d957:	call   403280 <__stack_chk_fail@plt>
  40d95c:	nop    DWORD PTR [rax+0x0]
  40d960:	push   rbp
  40d961:	push   r15
  40d963:	push   r14
  40d965:	push   r13
  40d967:	push   r12
  40d969:	push   rbx
  40d96a:	sub    rsp,0x118
  40d971:	mov    QWORD PTR [rsp+0x8],rdx
  40d976:	mov    rax,QWORD PTR fs:0x28
  40d97f:	mov    QWORD PTR [rsp+0x110],rax
  40d987:	mov    rax,QWORD PTR [rsi+0x8]
  40d98b:	mov    QWORD PTR [rsp],rax
  40d98f:	mov    r9,QWORD PTR [rsi]
  40d992:	mov    r13d,DWORD PTR [rsi+0x10]
  40d996:	test   r13d,0x1000
  40d99d:	lea    rbp,[rip+0x240df]        # 431a83 <isspace@plt+0x2e173>
  40d9a4:	lea    r10,[rip+0x233c3]        # 430d6e <isspace@plt+0x2d45e>
  40d9ab:	cmove  r10,rbp
  40d9af:	test   r13b,0x10
  40d9b3:	lea    r14,[rip+0x233c8]        # 430d82 <isspace@plt+0x2d472>
  40d9ba:	cmove  r14,rbp
  40d9be:	test   r13b,0x2
  40d9c2:	lea    r12,[rip+0x233a9]        # 430d72 <isspace@plt+0x2d462>
  40d9c9:	cmove  r12,rbp
  40d9cd:	test   r13b,0x1
  40d9d1:	lea    r15,[rip+0x22bae]        # 430586 <isspace@plt+0x2cc76>
  40d9d8:	cmove  r15,rbp
  40d9dc:	test   r13d,0x800
  40d9e3:	je     40da14 <isspace@plt+0xa104>
  40d9e5:	lea    rsi,[rip+0x2307f]        # 430a6b <isspace@plt+0x2d15b>
  40d9ec:	mov    rdi,r9
  40d9ef:	mov    rbx,r10
  40d9f2:	mov    rbp,r9
  40d9f5:	call   403480 <strcmp@plt>
  40d9fa:	mov    r9,rbp
  40d9fd:	mov    r10,rbx
  40da00:	test   eax,eax
  40da02:	lea    rax,[rip+0x23372]        # 430d7b <isspace@plt+0x2d46b>
  40da09:	lea    rbp,[rip+0x23379]        # 430d89 <isspace@plt+0x2d479>
  40da10:	cmove  rbp,rax
  40da14:	test   r13d,0x2000
  40da1b:	lea    rbx,[rip+0x23376]        # 430d98 <isspace@plt+0x2d488>
  40da22:	lea    rax,[rip+0x2405a]        # 431a83 <isspace@plt+0x2e173>
  40da29:	mov    r13,rax
  40da2c:	cmove  rbx,rax
  40da30:	lea    r8,[rip+0x244b9]        # 431ef0 <isspace@plt+0x2e5e0>
  40da37:	lea    rdi,[rsp+0x10]
  40da3c:	mov    esi,0x100
  40da41:	mov    edx,0x1
  40da46:	mov    ecx,0x100
  40da4b:	mov    eax,0x0
  40da50:	push   rbx
  40da51:	push   rbp
  40da52:	push   r15
  40da54:	push   r12
  40da56:	push   r14
  40da58:	push   r10
  40da5a:	call   4030c0 <__snprintf_chk@plt>
  40da5f:	add    rsp,0x30
  40da63:	mov    rcx,QWORD PTR [rsp]
  40da67:	test   rcx,rcx
  40da6a:	cmove  rcx,r13
  40da6e:	lea    rsi,[rip+0x2332e]        # 430da3 <isspace@plt+0x2d493>
  40da75:	xor    eax,eax
  40da77:	mov    rdi,QWORD PTR [rsp+0x8]
  40da7c:	lea    rdx,[rsp+0x10]
  40da81:	call   4110f0 <isspace@plt+0xd7e0>
  40da86:	mov    rcx,QWORD PTR fs:0x28
  40da8f:	cmp    rcx,QWORD PTR [rsp+0x110]
  40da97:	jne    40daab <isspace@plt+0xa19b>
  40da99:	add    rsp,0x118
  40daa0:	pop    rbx
  40daa1:	pop    r12
  40daa3:	pop    r13
  40daa5:	pop    r14
  40daa7:	pop    r15
  40daa9:	pop    rbp
  40daaa:	ret    
  40daab:	call   403280 <__stack_chk_fail@plt>
  40dab0:	push   rbp
  40dab1:	push   r15
  40dab3:	push   r14
  40dab5:	push   r13
  40dab7:	push   r12
  40dab9:	push   rbx
  40daba:	sub    rsp,0x108
  40dac1:	mov    r14,rdx
  40dac4:	mov    rbx,rsi
  40dac7:	mov    rax,QWORD PTR fs:0x28
  40dad0:	mov    QWORD PTR [rsp+0x100],rax
  40dad8:	mov    r12,QWORD PTR [rsi]
  40dadb:	mov    r15,QWORD PTR [rsi+0x20]
  40dadf:	mov    rsi,r12
  40dae2:	call   403480 <strcmp@plt>
  40dae7:	mov    ecx,eax
  40dae9:	mov    al,0x1
  40daeb:	test   ecx,ecx
  40daed:	jne    40db7b <isspace@plt+0xa26b>
  40daf3:	mov    r11,QWORD PTR [rbx+0x8]
  40daf7:	test   r11,r11
  40dafa:	lea    r10,[rip+0x22235]        # 42fd36 <isspace@plt+0x2c426>
  40db01:	lea    r13,[rip+0x23f7b]        # 431a83 <isspace@plt+0x2e173>
  40db08:	cmove  r10,r13
  40db0c:	cmove  r11,r13
  40db10:	mov    eax,DWORD PTR [rbx+0x18]
  40db13:	test   al,0x1
  40db15:	lea    rbp,[rip+0x23293]        # 430daf <isspace@plt+0x2d49f>
  40db1c:	cmove  rbp,r13
  40db20:	test   al,0x4
  40db22:	lea    rbx,[rip+0x2328e]        # 430db7 <isspace@plt+0x2d4a7>
  40db29:	cmove  rbx,r13
  40db2d:	lea    r8,[rip+0x243c0]        # 431ef4 <isspace@plt+0x2e5e4>
  40db34:	mov    rdi,rsp
  40db37:	mov    esi,0x100
  40db3c:	mov    edx,0x1
  40db41:	mov    ecx,0x100
  40db46:	mov    eax,0x0
  40db4b:	mov    r9,r12
  40db4e:	push   rbx
  40db4f:	push   rbp
  40db50:	push   r11
  40db52:	push   r10
  40db54:	call   4030c0 <__snprintf_chk@plt>
  40db59:	add    rsp,0x20
  40db5d:	test   r15,r15
  40db60:	cmove  r15,r13
  40db64:	lea    rsi,[rip+0x23238]        # 430da3 <isspace@plt+0x2d493>
  40db6b:	xor    eax,eax
  40db6d:	mov    rdi,r14
  40db70:	mov    rdx,rsp
  40db73:	mov    rcx,r15
  40db76:	call   4110f0 <isspace@plt+0xd7e0>
  40db7b:	mov    rcx,QWORD PTR fs:0x28
  40db84:	cmp    rcx,QWORD PTR [rsp+0x100]
  40db8c:	jne    40dba0 <isspace@plt+0xa290>
  40db8e:	add    rsp,0x108
  40db95:	pop    rbx
  40db96:	pop    r12
  40db98:	pop    r13
  40db9a:	pop    r14
  40db9c:	pop    r15
  40db9e:	pop    rbp
  40db9f:	ret    
  40dba0:	call   403280 <__stack_chk_fail@plt>
  40dba5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dbaf:	nop
  40dbb0:	push   rax
  40dbb1:	mov    r8,rdi
  40dbb4:	mov    rax,QWORD PTR fs:0x28
  40dbbd:	mov    QWORD PTR [rsp],rax
  40dbc1:	mov    rax,QWORD PTR [rsi+0x8]
  40dbc5:	test   rax,rax
  40dbc8:	lea    rcx,[rip+0x23eb4]        # 431a83 <isspace@plt+0x2e173>
  40dbcf:	cmovne rcx,rax
  40dbd3:	lea    rsi,[rip+0x231e1]        # 430dbb <isspace@plt+0x2d4ab>
  40dbda:	xor    eax,eax
  40dbdc:	mov    rdi,rdx
  40dbdf:	mov    rdx,r8
  40dbe2:	call   4110f0 <isspace@plt+0xd7e0>
  40dbe7:	mov    rcx,QWORD PTR fs:0x28
  40dbf0:	cmp    rcx,QWORD PTR [rsp]
  40dbf4:	jne    40dbf8 <isspace@plt+0xa2e8>
  40dbf6:	pop    rcx
  40dbf7:	ret    
  40dbf8:	call   403280 <__stack_chk_fail@plt>
  40dbfd:	nop    DWORD PTR [rax]
  40dc00:	push   rax
  40dc01:	mov    rax,QWORD PTR fs:0x28
  40dc0a:	mov    QWORD PTR [rsp],rax
  40dc0e:	mov    rax,QWORD PTR [rsi+0x10]
  40dc12:	test   rax,rax
  40dc15:	jne    40dc28 <isspace@plt+0xa318>
  40dc17:	mov    rax,QWORD PTR [rsi+0x8]
  40dc1b:	test   rax,rax
  40dc1e:	je     40dc26 <isspace@plt+0xa316>
  40dc20:	mov    rax,QWORD PTR [rax+0x8]
  40dc24:	jmp    40dc28 <isspace@plt+0xa318>
  40dc26:	xor    eax,eax
  40dc28:	cmp    BYTE PTR [rdi],0x20
  40dc2b:	lea    r8,[rip+0x23138]        # 430d6a <isspace@plt+0x2d45a>
  40dc32:	cmovne r8,rdi
  40dc36:	test   rax,rax
  40dc39:	lea    rcx,[rip+0x23e43]        # 431a83 <isspace@plt+0x2e173>
  40dc40:	cmovne rcx,rax
  40dc44:	lea    rsi,[rip+0x22e44]        # 430a8f <isspace@plt+0x2d17f>
  40dc4b:	xor    eax,eax
  40dc4d:	mov    rdi,rdx
  40dc50:	mov    rdx,r8
  40dc53:	call   4110f0 <isspace@plt+0xd7e0>
  40dc58:	mov    rcx,QWORD PTR fs:0x28
  40dc61:	cmp    rcx,QWORD PTR [rsp]
  40dc65:	jne    40dc69 <isspace@plt+0xa359>
  40dc67:	pop    rcx
  40dc68:	ret    
  40dc69:	call   403280 <__stack_chk_fail@plt>
  40dc6e:	xchg   ax,ax
  40dc70:	push   rbp
  40dc71:	push   r15
  40dc73:	push   r14
  40dc75:	push   r13
  40dc77:	push   r12
  40dc79:	push   rbx
  40dc7a:	sub    rsp,0x48
  40dc7e:	mov    rbp,rdx
  40dc81:	mov    rax,QWORD PTR fs:0x28
  40dc8a:	mov    QWORD PTR [rsp+0x40],rax
  40dc8f:	mov    rax,QWORD PTR [rsi]
  40dc92:	cmp    BYTE PTR [rax],0x0
  40dc95:	je     40de69 <isspace@plt+0xa559>
  40dc9b:	mov    rbx,rsi
  40dc9e:	mov    r15,rdi
  40dca1:	mov    edi,0x1
  40dca6:	mov    esi,0x80
  40dcab:	call   403470 <calloc@plt>
  40dcb0:	test   rax,rax
  40dcb3:	je     40e695 <isspace@plt+0xad85>
  40dcb9:	mov    r12,rax
  40dcbc:	mov    rdi,r15
  40dcbf:	mov    rsi,rbx
  40dcc2:	mov    rdx,rbp
  40dcc5:	call   40e6d0 <isspace@plt+0xadc0>
  40dcca:	mov    QWORD PTR [r12+0x40],rax
  40dccf:	mov    rax,QWORD PTR [rbx]
  40dcd2:	jmp    40dce3 <isspace@plt+0xa3d3>
  40dcd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dcde:	xchg   ax,ax
  40dce0:	mov    QWORD PTR [rbx],rax
  40dce3:	add    rax,0x1
  40dce7:	movzx  ecx,BYTE PTR [rax-0x1]
  40dceb:	cmp    cl,0x20
  40dcee:	je     40dce0 <isspace@plt+0xa3d0>
  40dcf0:	cmp    cl,0x9
  40dcf3:	je     40dce0 <isspace@plt+0xa3d0>
  40dcf5:	mov    QWORD PTR [rsp+0x10],rbp
  40dcfa:	lea    rdi,[rsp+0x28]
  40dcff:	call   404230 <isspace@plt+0x920>
  40dd04:	mov    rbp,QWORD PTR [rbx]
  40dd07:	jmp    40dd17 <isspace@plt+0xa407>
  40dd09:	nop    DWORD PTR [rax+0x0]
  40dd10:	add    rbp,0x1
  40dd14:	mov    QWORD PTR [rbx],rbp
  40dd17:	movzx  r14d,BYTE PTR [rbp+0x0]
  40dd1c:	cmp    r14b,0x9
  40dd20:	je     40dd10 <isspace@plt+0xa400>
  40dd22:	cmp    r14b,0x20
  40dd26:	je     40dd10 <isspace@plt+0xa400>
  40dd28:	mov    QWORD PTR [rsp+0x8],r15
  40dd2d:	test   r14b,r14b
  40dd30:	je     40dd9d <isspace@plt+0xa48d>
  40dd32:	call   4038f0 <__ctype_b_loc@plt>
  40dd37:	mov    r13,rax
  40dd3a:	lea    r15,[rsp+0x28]
  40dd3f:	mov    rax,QWORD PTR [r13+0x0]
  40dd43:	lea    rcx,[rbp+0x1]
  40dd47:	nop    WORD PTR [rax+rax*1+0x0]
  40dd50:	movzx  edx,r14b
  40dd54:	movzx  edx,WORD PTR [rax+rdx*2]
  40dd58:	test   edx,0x2800
  40dd5e:	jne    40dd9d <isspace@plt+0xa48d>
  40dd60:	test   dl,0x4
  40dd63:	je     40dd7a <isspace@plt+0xa46a>
  40dd65:	cmp    r14b,0x2d
  40dd69:	jne    40dd9d <isspace@plt+0xa48d>
  40dd6b:	movzx  r14d,BYTE PTR [rcx]
  40dd6f:	add    rcx,0x1
  40dd73:	test   r14b,r14b
  40dd76:	jne    40dd50 <isspace@plt+0xa440>
  40dd78:	jmp    40dd9d <isspace@plt+0xa48d>
  40dd7a:	lea    rax,[rbp+0x1]
  40dd7e:	mov    QWORD PTR [rbx],rax
  40dd81:	mov    edx,0x1
  40dd86:	mov    rdi,r15
  40dd89:	mov    rsi,rbp
  40dd8c:	call   404460 <isspace@plt+0xb50>
  40dd91:	mov    rbp,QWORD PTR [rbx]
  40dd94:	mov    r14b,BYTE PTR [rbp+0x0]
  40dd98:	test   r14b,r14b
  40dd9b:	jne    40dd3f <isspace@plt+0xa42f>
  40dd9d:	lea    rbp,[rsp+0x28]
  40dda2:	mov    rdi,rbp
  40dda5:	call   404380 <isspace@plt+0xa70>
  40ddaa:	mov    rdi,rbp
  40ddad:	call   404ec0 <isspace@plt+0x15b0>
  40ddb2:	mov    QWORD PTR [r12],rax
  40ddb6:	test   rax,rax
  40ddb9:	jne    40ddf1 <isspace@plt+0xa4e1>
  40ddbb:	mov    rax,QWORD PTR [rbx]
  40ddbe:	mov    cl,BYTE PTR [rax]
  40ddc0:	mov    dl,0x70
  40ddc2:	test   cl,cl
  40ddc4:	je     40ddc8 <isspace@plt+0xa4b8>
  40ddc6:	mov    edx,ecx
  40ddc8:	mov    BYTE PTR [rsp+0x28],dl
  40ddcc:	mov    BYTE PTR [rsp+0x29],0x0
  40ddd1:	je     40ddda <isspace@plt+0xa4ca>
  40ddd3:	add    rax,0x1
  40ddd7:	mov    QWORD PTR [rbx],rax
  40ddda:	lea    rdi,[rsp+0x28]
  40dddf:	call   403850 <strdup@plt>
  40dde4:	mov    QWORD PTR [r12],rax
  40dde8:	test   rax,rax
  40ddeb:	je     40e68d <isspace@plt+0xad7d>
  40ddf1:	mov    r15,QWORD PTR [rsp+0x8]
  40ddf6:	mov    rdi,QWORD PTR [r15+0x808]
  40ddfd:	mov    rsi,rax
  40de00:	call   408640 <isspace@plt+0x4d30>
  40de05:	test   rax,rax
  40de08:	je     40de75 <isspace@plt+0xa565>
  40de0a:	mov    r13,rax
  40de0d:	mov    QWORD PTR [r12+0x50],rax
  40de12:	mov    rbp,QWORD PTR [r12]
  40de16:	lea    rsi,[rip+0x21f1c]        # 42fd39 <isspace@plt+0x2c429>
  40de1d:	mov    rdi,rbp
  40de20:	call   403480 <strcmp@plt>
  40de25:	test   eax,eax
  40de27:	mov    r14,QWORD PTR [rsp+0x10]
  40de2c:	je     40de85 <isspace@plt+0xa575>
  40de2e:	lea    rsi,[rip+0x21f07]        # 42fd3c <isspace@plt+0x2c42c>
  40de35:	mov    rdi,rbp
  40de38:	call   403480 <strcmp@plt>
  40de3d:	test   eax,eax
  40de3f:	je     40dfb9 <isspace@plt+0xa6a9>
  40de45:	mov    eax,DWORD PTR [r13+0x10]
  40de49:	test   al,0x20
  40de4b:	je     40df41 <isspace@plt+0xa631>
  40de51:	cmp    QWORD PTR [r12+0x40],0x0
  40de57:	je     40df41 <isspace@plt+0xa631>
  40de5d:	mov    DWORD PTR [r14],0x3
  40de64:	jmp    40e68d <isspace@plt+0xad7d>
  40de69:	mov    DWORD PTR [rbp+0x0],0x8
  40de70:	jmp    40e695 <isspace@plt+0xad85>
  40de75:	mov    rax,QWORD PTR [rsp+0x10]
  40de7a:	mov    DWORD PTR [rax],0x8
  40de80:	jmp    40e68d <isspace@plt+0xad7d>
  40de85:	mov    QWORD PTR [rsp],r13
  40de89:	mov    eax,DWORD PTR [r15+0x9b4]
  40de90:	mov    QWORD PTR [rsp+0x18],rax
  40de95:	lea    eax,[rax+0x1]
  40de98:	mov    DWORD PTR [r15+0x9b4],eax
  40de9f:	lea    r13,[r12+0x70]
  40dea4:	xor    r14d,r14d
  40dea7:	movabs rbp,0x100000600
  40deb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40debb:	nop    DWORD PTR [rax+rax*1+0x0]
  40dec0:	mov    rax,QWORD PTR [rbx]
  40dec3:	jmp    40ded3 <isspace@plt+0xa5c3>
  40dec5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40decf:	nop
  40ded0:	mov    QWORD PTR [rbx],rax
  40ded3:	add    rax,0x1
  40ded7:	movzx  ecx,BYTE PTR [rax-0x1]
  40dedb:	cmp    rcx,0x20
  40dedf:	ja     40dee7 <isspace@plt+0xa5d7>
  40dee1:	bt     rbp,rcx
  40dee5:	jb     40ded0 <isspace@plt+0xa5c0>
  40dee7:	mov    rdi,QWORD PTR [rsp+0x8]
  40deec:	mov    rsi,rbx
  40deef:	mov    r15,QWORD PTR [rsp+0x10]
  40def4:	mov    rdx,r15
  40def7:	call   40dc70 <isspace@plt+0xa360>
  40defc:	cmp    DWORD PTR [r15],0x0
  40df00:	jne    40e68d <isspace@plt+0xad7d>
  40df06:	test   r14,r14
  40df09:	lea    rcx,[r14+0x78]
  40df0d:	cmove  rcx,r13
  40df11:	mov    QWORD PTR [rcx],rax
  40df14:	mov    r14,rax
  40df17:	test   rax,rax
  40df1a:	jne    40dec0 <isspace@plt+0xa5b0>
  40df1c:	mov    r15,QWORD PTR [rsp+0x8]
  40df21:	mov    rax,QWORD PTR [rsp+0x18]
  40df26:	cmp    eax,DWORD PTR [r15+0x9b4]
  40df2d:	mov    r14,QWORD PTR [rsp+0x10]
  40df32:	mov    r13,QWORD PTR [rsp]
  40df36:	je     40de45 <isspace@plt+0xa535>
  40df3c:	jmp    40dfd2 <isspace@plt+0xa6c2>
  40df41:	test   eax,0x1000
  40df46:	je     40df5d <isspace@plt+0xa64d>
  40df48:	mov    rcx,QWORD PTR [rbx]
  40df4b:	cmp    BYTE PTR [rcx],0x21
  40df4e:	jne    40df5d <isspace@plt+0xa64d>
  40df50:	mov    BYTE PTR [r12+0x68],0x21
  40df56:	add    rcx,0x1
  40df5a:	mov    QWORD PTR [rbx],rcx
  40df5d:	test   al,0x8
  40df5f:	je     40e098 <isspace@plt+0xa788>
  40df65:	mov    rbp,QWORD PTR [rbx]
  40df68:	cmp    BYTE PTR [rbp+0x0],0x25
  40df6c:	sete   BYTE PTR [r12+0x60]
  40df72:	jne    40dfde <isspace@plt+0xa6ce>
  40df74:	add    rbp,0x1
  40df78:	mov    QWORD PTR [rbx],rbp
  40df7b:	mov    QWORD PTR [rsp+0x28],0x0
  40df84:	lea    rsi,[rsp+0x28]
  40df89:	mov    edx,0xa
  40df8e:	mov    rdi,rbp
  40df91:	call   403460 <strtoull@plt>
  40df96:	mov    rcx,QWORD PTR [rsp+0x28]
  40df9b:	cmp    rcx,QWORD PTR [rbx]
  40df9e:	je     40e071 <isspace@plt+0xa761>
  40dfa4:	mov    QWORD PTR [rbx],rcx
  40dfa7:	test   eax,eax
  40dfa9:	je     40e071 <isspace@plt+0xa761>
  40dfaf:	mov    DWORD PTR [r12+0x58],eax
  40dfb4:	jmp    40e088 <isspace@plt+0xa778>
  40dfb9:	mov    eax,DWORD PTR [r15+0x9b4]
  40dfc0:	lea    ecx,[rax-0x1]
  40dfc3:	mov    DWORD PTR [r15+0x9b4],ecx
  40dfca:	test   eax,eax
  40dfcc:	jne    40e68d <isspace@plt+0xad7d>
  40dfd2:	mov    DWORD PTR [r14],0x4
  40dfd9:	jmp    40e68d <isspace@plt+0xad7d>
  40dfde:	mov    QWORD PTR [rsp+0x28],0x0
  40dfe7:	lea    rsi,[rsp+0x28]
  40dfec:	mov    edx,0xa
  40dff1:	mov    rdi,rbp
  40dff4:	call   403460 <strtoull@plt>
  40dff9:	mov    rcx,QWORD PTR [rsp+0x28]
  40dffe:	cmp    rcx,QWORD PTR [rbx]
  40e001:	je     40e063 <isspace@plt+0xa753>
  40e003:	mov    QWORD PTR [rbx],rcx
  40e006:	mov    DWORD PTR [r12+0x58],eax
  40e00b:	test   eax,eax
  40e00d:	je     40e06c <isspace@plt+0xa75c>
  40e00f:	mov    rbp,rcx
  40e012:	cmp    BYTE PTR [rbp+0x0],0x2c
  40e016:	jne    40e088 <isspace@plt+0xa778>
  40e018:	add    rbp,0x1
  40e01c:	mov    QWORD PTR [rbx],rbp
  40e01f:	mov    QWORD PTR [rsp+0x28],0x0
  40e028:	lea    rsi,[rsp+0x28]
  40e02d:	mov    edx,0xa
  40e032:	mov    rdi,rbp
  40e035:	call   403460 <strtoull@plt>
  40e03a:	mov    rcx,QWORD PTR [rsp+0x28]
  40e03f:	cmp    rcx,QWORD PTR [rbx]
  40e042:	je     40e61b <isspace@plt+0xad0b>
  40e048:	mov    QWORD PTR [rbx],rcx
  40e04b:	mov    DWORD PTR [r12+0x5c],eax
  40e050:	test   eax,eax
  40e052:	jne    40e08d <isspace@plt+0xa77d>
  40e054:	lea    rax,[r12+0x5c]
  40e059:	cmp    rcx,rbp
  40e05c:	jne    40e071 <isspace@plt+0xa761>
  40e05e:	jmp    40e632 <isspace@plt+0xad22>
  40e063:	mov    DWORD PTR [r12+0x58],0x0
  40e06c:	cmp    rcx,rbp
  40e06f:	je     40e07d <isspace@plt+0xa76d>
  40e071:	mov    DWORD PTR [r14],0x10
  40e078:	jmp    40e68d <isspace@plt+0xad7d>
  40e07d:	mov    eax,0x7fffffff
  40e082:	cmp    BYTE PTR [rbp+0x0],0x2c
  40e086:	je     40e018 <isspace@plt+0xa708>
  40e088:	mov    DWORD PTR [r12+0x5c],eax
  40e08d:	mov    DWORD PTR [r14],0x0
  40e094:	mov    eax,DWORD PTR [r13+0x10]
  40e098:	test   al,0x2
  40e09a:	je     40e155 <isspace@plt+0xa845>
  40e0a0:	mov    rbp,QWORD PTR [rbx]
  40e0a3:	mov    cl,BYTE PTR [rbp+0x0]
  40e0a6:	test   al,0x4
  40e0a8:	je     40e0b8 <isspace@plt+0xa7a8>
  40e0aa:	mov    edx,ecx
  40e0ac:	or     dl,0x20
  40e0af:	cmp    dl,0x20
  40e0b2:	je     40e147 <isspace@plt+0xa837>
  40e0b8:	mov    BYTE PTR [rsp+0x28],cl
  40e0bc:	mov    BYTE PTR [rsp+0x29],0x0
  40e0c1:	test   cl,cl
  40e0c3:	je     40e11d <isspace@plt+0xa80d>
  40e0c5:	movzx  r14d,cl
  40e0c9:	call   4038f0 <__ctype_b_loc@plt>
  40e0ce:	mov    rax,QWORD PTR [rax]
  40e0d1:	test   BYTE PTR [rax+r14*2+0x1],0x20
  40e0d7:	mov    r14,QWORD PTR [rsp+0x10]
  40e0dc:	jne    40e11d <isspace@plt+0xa80d>
  40e0de:	lea    rax,[rbp+0x1]
  40e0e2:	mov    QWORD PTR [rbx],rax
  40e0e5:	lea    rsi,[rsp+0x28]
  40e0ea:	xor    edx,edx
  40e0ec:	mov    ecx,0x2
  40e0f1:	mov    rdi,rbx
  40e0f4:	call   40eb10 <isspace@plt+0xb200>
  40e0f9:	mov    rdx,QWORD PTR [rbx]
  40e0fc:	mov    cl,BYTE PTR [rdx]
  40e0fe:	cmp    cl,BYTE PTR [rsp+0x28]
  40e102:	jne    40e10b <isspace@plt+0xa7fb>
  40e104:	add    rdx,0x1
  40e108:	mov    QWORD PTR [rbx],rdx
  40e10b:	test   rax,rax
  40e10e:	jne    40e5db <isspace@plt+0xaccb>
  40e114:	cmp    rdx,rbp
  40e117:	jne    40e5db <isspace@plt+0xaccb>
  40e11d:	mov    QWORD PTR [r12+0x48],0x0
  40e126:	mov    eax,DWORD PTR [r13+0x10]
  40e12a:	test   al,0x8
  40e12c:	jne    40e155 <isspace@plt+0xa845>
  40e12e:	mov    DWORD PTR [r14],0x5
  40e135:	jmp    40e68d <isspace@plt+0xad7d>
  40e13a:	nop    WORD PTR [rax+rax*1+0x0]
  40e140:	mov    QWORD PTR [rbx],rbp
  40e143:	movzx  ecx,BYTE PTR [rbp+0x0]
  40e147:	add    rbp,0x1
  40e14b:	cmp    cl,0x20
  40e14e:	je     40e140 <isspace@plt+0xa830>
  40e150:	cmp    cl,0x9
  40e153:	je     40e140 <isspace@plt+0xa830>
  40e155:	test   eax,0x800
  40e15a:	je     40e1b7 <isspace@plt+0xa8a7>
  40e15c:	mov    rax,QWORD PTR [rbx]
  40e15f:	jmp    40e173 <isspace@plt+0xa863>
  40e161:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e16b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e170:	mov    QWORD PTR [rbx],rax
  40e173:	add    rax,0x1
  40e177:	movzx  ecx,BYTE PTR [rax-0x1]
  40e17b:	cmp    cl,0x20
  40e17e:	je     40e170 <isspace@plt+0xa860>
  40e180:	cmp    cl,0x9
  40e183:	je     40e170 <isspace@plt+0xa860>
  40e185:	lea    rsi,[rip+0x233cd]        # 431559 <isspace@plt+0x2dc49>
  40e18c:	xor    edx,edx
  40e18e:	xor    ecx,ecx
  40e190:	mov    rdi,rbx
  40e193:	call   40eb10 <isspace@plt+0xb200>
  40e198:	lea    rsi,[r15+0x310]
  40e19f:	test   rax,rax
  40e1a2:	je     40e211 <isspace@plt+0xa901>
  40e1a4:	mov    rbp,rax
  40e1a7:	mov    rdi,r15
  40e1aa:	mov    rdx,rax
  40e1ad:	call   42ac00 <isspace@plt+0x272f0>
  40e1b2:	mov    QWORD PTR [r12+0x8],rbp
  40e1b7:	test   BYTE PTR [r13+0x10],0x10
  40e1bc:	je     40e388 <isspace@plt+0xaa78>
  40e1c2:	mov    rbp,QWORD PTR [rbx]
  40e1c5:	jmp    40e1d7 <isspace@plt+0xa8c7>
  40e1c7:	nop    WORD PTR [rax+rax*1+0x0]
  40e1d0:	add    rbp,0x1
  40e1d4:	mov    QWORD PTR [rbx],rbp
  40e1d7:	movzx  eax,BYTE PTR [rbp+0x0]
  40e1db:	cmp    al,0x20
  40e1dd:	je     40e1d0 <isspace@plt+0xa8c0>
  40e1df:	cmp    al,0x9
  40e1e1:	je     40e1d0 <isspace@plt+0xa8c0>
  40e1e3:	mov    QWORD PTR [rsp],r13
  40e1e7:	mov    QWORD PTR [rsp+0x28],0x0
  40e1f0:	lea    rsi,[rsp+0x28]
  40e1f5:	mov    edx,0xa
  40e1fa:	mov    rdi,rbp
  40e1fd:	call   403460 <strtoull@plt>
  40e202:	mov    r13,QWORD PTR [rsp+0x28]
  40e207:	cmp    r13,QWORD PTR [rbx]
  40e20a:	je     40e242 <isspace@plt+0xa932>
  40e20c:	mov    QWORD PTR [rbx],r13
  40e20f:	jmp    40e244 <isspace@plt+0xa934>
  40e211:	xor    edx,edx
  40e213:	mov    rdi,r15
  40e216:	call   42aa90 <isspace@plt+0x27180>
  40e21b:	test   rax,rax
  40e21e:	je     40e5c6 <isspace@plt+0xacb6>
  40e224:	mov    rdi,rax
  40e227:	call   403850 <strdup@plt>
  40e22c:	mov    QWORD PTR [r12+0x8],rax
  40e231:	test   rax,rax
  40e234:	jne    40e1b7 <isspace@plt+0xa8a7>
  40e236:	mov    DWORD PTR [r14],0x7
  40e23d:	jmp    40e68d <isspace@plt+0xad7d>
  40e242:	xor    eax,eax
  40e244:	cmp    r13,rbp
  40e247:	mov    ecx,0x1
  40e24c:	cmovne ecx,eax
  40e24f:	mov    DWORD PTR [r12+0x58],ecx
  40e254:	movzx  ebp,BYTE PTR [r13+0x0]
  40e259:	cmp    rbp,0xa
  40e25d:	jne    40e302 <isspace@plt+0xa9f2>
  40e263:	lea    rdi,[rsp+0x28]
  40e268:	call   404230 <isspace@plt+0x920>
  40e26d:	mov    rbp,QWORD PTR [rbx]
  40e270:	lea    rsi,[rbp+0x1]
  40e274:	mov    QWORD PTR [rbx],rsi
  40e277:	mov    al,BYTE PTR [rbp+0x1]
  40e27a:	test   al,al
  40e27c:	mov    r15,QWORD PTR [rsp+0x8]
  40e281:	mov    r13,QWORD PTR [rsp]
  40e285:	je     40e36e <isspace@plt+0xaa5e>
  40e28b:	add    rbp,0x2
  40e28f:	mov    edi,eax
  40e291:	mov    edx,eax
  40e293:	xor    dl,0x2e
  40e296:	mov    QWORD PTR [rbx],rbp
  40e299:	movzx  eax,BYTE PTR [rbp+0x0]
  40e29d:	mov    ecx,eax
  40e29f:	xor    cl,0xa
  40e2a2:	or     cl,dl
  40e2a4:	sete   dl
  40e2a7:	add    rbp,0x1
  40e2ab:	test   al,al
  40e2ad:	je     40e2b3 <isspace@plt+0xa9a3>
  40e2af:	test   dl,dl
  40e2b1:	je     40e28f <isspace@plt+0xa97f>
  40e2b3:	cmp    dil,0x2e
  40e2b7:	jne    40e36e <isspace@plt+0xaa5e>
  40e2bd:	add    rbp,0xffffffffffffffff
  40e2c1:	mov    rdx,rsi
  40e2c4:	not    rdx
  40e2c7:	add    rdx,rbp
  40e2ca:	lea    rdi,[rsp+0x28]
  40e2cf:	call   4045d0 <isspace@plt+0xcc0>
  40e2d4:	test   al,al
  40e2d6:	je     40e36e <isspace@plt+0xaa5e>
  40e2dc:	lea    rsi,[rip+0x23365]        # 431648 <isspace@plt+0x2dd38>
  40e2e3:	lea    rdi,[rsp+0x28]
  40e2e8:	mov    edx,0x1
  40e2ed:	call   404460 <isspace@plt+0xb50>
  40e2f2:	test   al,al
  40e2f4:	je     40e36e <isspace@plt+0xaa5e>
  40e2f6:	lea    rdi,[rsp+0x28]
  40e2fb:	call   404ec0 <isspace@plt+0x15b0>
  40e300:	jmp    40e37a <isspace@plt+0xaa6a>
  40e302:	mov    BYTE PTR [rsp+0x28],bpl
  40e307:	mov    BYTE PTR [rsp+0x29],0x0
  40e30c:	test   bpl,bpl
  40e30f:	je     40e65c <isspace@plt+0xad4c>
  40e315:	call   4038f0 <__ctype_b_loc@plt>
  40e31a:	mov    rax,QWORD PTR [rax]
  40e31d:	test   BYTE PTR [rax+rbp*2+0x1],0x20
  40e322:	jne    40e65c <isspace@plt+0xad4c>
  40e328:	lea    rax,[r13+0x1]
  40e32c:	mov    QWORD PTR [rbx],rax
  40e32f:	lea    rsi,[rsp+0x28]
  40e334:	xor    edx,edx
  40e336:	mov    ecx,0x10
  40e33b:	mov    rdi,rbx
  40e33e:	call   40eb10 <isspace@plt+0xb200>
  40e343:	mov    rcx,QWORD PTR [rbx]
  40e346:	mov    dl,BYTE PTR [rcx]
  40e348:	cmp    dl,BYTE PTR [rsp+0x28]
  40e34c:	jne    40e355 <isspace@plt+0xaa45>
  40e34e:	add    rcx,0x1
  40e352:	mov    QWORD PTR [rbx],rcx
  40e355:	test   rax,rax
  40e358:	je     40e63d <isspace@plt+0xad2d>
  40e35e:	mov    QWORD PTR [r12+0x8],rax
  40e363:	mov    r15,QWORD PTR [rsp+0x8]
  40e368:	mov    r13,QWORD PTR [rsp]
  40e36c:	jmp    40e388 <isspace@plt+0xaa78>
  40e36e:	lea    rdi,[rsp+0x28]
  40e373:	call   404550 <isspace@plt+0xc40>
  40e378:	xor    eax,eax
  40e37a:	mov    QWORD PTR [r12+0x8],rax
  40e37f:	test   rax,rax
  40e382:	je     40e5ba <isspace@plt+0xacaa>
  40e388:	mov    eax,DWORD PTR [r13+0x10]
  40e38c:	test   eax,0x2000
  40e391:	je     40e481 <isspace@plt+0xab71>
  40e397:	mov    QWORD PTR [rsp],r13
  40e39b:	xor    r14d,r14d
  40e39e:	lea    r13,[rip+0x21c83]        # 430028 <isspace@plt+0x2c718>
  40e3a5:	mov    QWORD PTR [rsp+0x20],r12
  40e3aa:	nop    WORD PTR [rax+rax*1+0x0]
  40e3b0:	mov    rbp,QWORD PTR [rbx]
  40e3b3:	jmp    40e3c3 <isspace@plt+0xaab3>
  40e3b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e3bf:	nop
  40e3c0:	mov    QWORD PTR [rbx],rbp
  40e3c3:	add    rbp,0x1
  40e3c7:	movzx  eax,BYTE PTR [rbp-0x1]
  40e3cb:	mov    ecx,eax
  40e3cd:	add    cl,0xf7
  40e3d0:	cmp    cl,0x1e
  40e3d3:	ja     40e438 <isspace@plt+0xab28>
  40e3d5:	movzx  ecx,cl
  40e3d8:	movsxd rcx,DWORD PTR [r13+rcx*4+0x0]
  40e3dd:	add    rcx,r13
  40e3e0:	jmp    rcx
  40e3e2:	movzx  r15d,al
  40e3e6:	mov    BYTE PTR [rsp+0x28],al
  40e3ea:	mov    BYTE PTR [rsp+0x29],0x0
  40e3ef:	call   4038f0 <__ctype_b_loc@plt>
  40e3f4:	mov    rax,QWORD PTR [rax]
  40e3f7:	test   BYTE PTR [rax+r15*2+0x1],0x20
  40e3fd:	jne    40e42f <isspace@plt+0xab1f>
  40e3ff:	mov    QWORD PTR [rbx],rbp
  40e402:	xor    edx,edx
  40e404:	mov    ecx,0x2000
  40e409:	mov    rdi,rbx
  40e40c:	lea    rsi,[rsp+0x28]
  40e411:	call   40eb10 <isspace@plt+0xb200>
  40e416:	mov    rcx,QWORD PTR [rbx]
  40e419:	mov    dl,BYTE PTR [rcx]
  40e41b:	cmp    dl,BYTE PTR [rsp+0x28]
  40e41f:	jne    40e428 <isspace@plt+0xab18>
  40e421:	add    rcx,0x1
  40e425:	mov    QWORD PTR [rbx],rcx
  40e428:	mov    r12,QWORD PTR [rsp+0x20]
  40e42d:	jmp    40e453 <isspace@plt+0xab43>
  40e42f:	xor    eax,eax
  40e431:	mov    r12,QWORD PTR [rsp+0x20]
  40e436:	jmp    40e453 <isspace@plt+0xab43>
  40e438:	mov    ecx,0x2000
  40e43d:	mov    rdi,rbx
  40e440:	lea    rsi,[rip+0x23110]        # 431557 <isspace@plt+0x2dc47>
  40e447:	lea    rdx,[rip+0x2310d]        # 43155b <isspace@plt+0x2dc4b>
  40e44e:	call   40eb10 <isspace@plt+0xb200>
  40e453:	mov    QWORD PTR [r12+r14*8+0x8],rax
  40e458:	add    r14,0x1
  40e45c:	cmp    r14,0x6
  40e460:	jne    40e3b0 <isspace@plt+0xaaa0>
  40e466:	mov    QWORD PTR [r12+0x38],0x0
  40e46f:	mov    r13,QWORD PTR [rsp]
  40e473:	mov    eax,DWORD PTR [r13+0x10]
  40e477:	mov    r14,QWORD PTR [rsp+0x10]
  40e47c:	mov    r15,QWORD PTR [rsp+0x8]
  40e481:	test   al,0x1
  40e483:	je     40e698 <isspace@plt+0xad88>
  40e489:	mov    rax,QWORD PTR [rbx]
  40e48c:	jmp    40e493 <isspace@plt+0xab83>
  40e48e:	xchg   ax,ax
  40e490:	mov    QWORD PTR [rbx],rax
  40e493:	add    rax,0x1
  40e497:	movzx  ecx,BYTE PTR [rax-0x1]
  40e49b:	cmp    cl,0x20
  40e49e:	je     40e490 <isspace@plt+0xab80>
  40e4a0:	cmp    cl,0x9
  40e4a3:	je     40e490 <isspace@plt+0xab80>
  40e4a5:	mov    rbp,QWORD PTR [r13+0x18]
  40e4a9:	test   rbp,rbp
  40e4ac:	je     40e51f <isspace@plt+0xac0f>
  40e4ae:	test   cl,cl
  40e4b0:	je     40e4c3 <isspace@plt+0xabb3>
  40e4b2:	cmp    cl,0x7d
  40e4b5:	je     40e4c3 <isspace@plt+0xabb3>
  40e4b7:	cmp    cl,0xa
  40e4ba:	jne    40e51f <isspace@plt+0xac0f>
  40e4bc:	mov    QWORD PTR [rbx],rax
  40e4bf:	mov    rbp,QWORD PTR [r13+0x18]
  40e4c3:	mov    edi,0x1
  40e4c8:	mov    esi,0x80
  40e4cd:	call   403470 <calloc@plt>
  40e4d2:	test   rax,rax
  40e4d5:	je     40e684 <isspace@plt+0xad74>
  40e4db:	mov    rbx,rax
  40e4de:	test   rbp,rbp
  40e4e1:	je     40e4f7 <isspace@plt+0xabe7>
  40e4e3:	mov    rdi,rbp
  40e4e6:	call   403850 <strdup@plt>
  40e4eb:	mov    QWORD PTR [rbx],rax
  40e4ee:	test   rax,rax
  40e4f1:	je     40e67c <isspace@plt+0xad6c>
  40e4f7:	mov    rbp,r12
  40e4fa:	add    rbp,0x70
  40e4fe:	mov    QWORD PTR [rbp+0x0],rbx
  40e502:	mov    rsi,QWORD PTR [r13+0x18]
  40e506:	mov    rdi,QWORD PTR [r15+0x808]
  40e50d:	call   408640 <isspace@plt+0x4d30>
  40e512:	mov    rcx,QWORD PTR [rbp+0x0]
  40e516:	mov    QWORD PTR [rcx+0x50],rax
  40e51a:	jmp    40e698 <isspace@plt+0xad88>
  40e51f:	mov    rdi,r15
  40e522:	mov    rsi,rbx
  40e525:	mov    rdx,r14
  40e528:	call   40dc70 <isspace@plt+0xa360>
  40e52d:	mov    QWORD PTR [r12+0x70],rax
  40e532:	test   rax,rax
  40e535:	je     40e68d <isspace@plt+0xad7d>
  40e53b:	mov    rbx,QWORD PTR [r12]
  40e53f:	lea    rsi,[rip+0x23126]        # 43166c <isspace@plt+0x2dd5c>
  40e546:	mov    rdi,rbx
  40e549:	call   403480 <strcmp@plt>
  40e54e:	test   eax,eax
  40e550:	je     40e569 <isspace@plt+0xac59>
  40e552:	lea    rsi,[rip+0x216f7]        # 42fc50 <isspace@plt+0x2c340>
  40e559:	mov    rdi,rbx
  40e55c:	call   403480 <strcmp@plt>
  40e561:	test   eax,eax
  40e563:	jne    40e698 <isspace@plt+0xad88>
  40e569:	mov    edi,0x1
  40e56e:	mov    esi,0x80
  40e573:	call   403470 <calloc@plt>
  40e578:	test   rax,rax
  40e57b:	je     40e68d <isspace@plt+0xad7d>
  40e581:	mov    rbx,rax
  40e584:	lea    rdi,[rip+0x22fc5]        # 431550 <isspace@plt+0x2dc40>
  40e58b:	call   403850 <strdup@plt>
  40e590:	mov    QWORD PTR [rbx],rax
  40e593:	test   rax,rax
  40e596:	je     40e6ba <isspace@plt+0xadaa>
  40e59c:	mov    rax,QWORD PTR [r12+0x70]
  40e5a1:	mov    QWORD PTR [rbx+0x70],rax
  40e5a5:	lea    rax,[rip+0x3294c]        # 440ef8 <isspace@plt+0x3d5e8>
  40e5ac:	mov    QWORD PTR [rbx+0x50],rax
  40e5b0:	mov    QWORD PTR [r12+0x70],rbx
  40e5b5:	jmp    40e698 <isspace@plt+0xad88>
  40e5ba:	mov    DWORD PTR [r14],0x6
  40e5c1:	jmp    40e68d <isspace@plt+0xad7d>
  40e5c6:	mov    QWORD PTR [r12+0x8],0x0
  40e5cf:	mov    DWORD PTR [r14],0x7
  40e5d6:	jmp    40e68d <isspace@plt+0xad7d>
  40e5db:	mov    rdi,r15
  40e5de:	mov    rsi,rax
  40e5e1:	mov    QWORD PTR [rsp],rax
  40e5e5:	call   425330 <isspace@plt+0x21a20>
  40e5ea:	mov    QWORD PTR [rsp+0x18],rax
  40e5ef:	mov    rdi,QWORD PTR [rsp]
  40e5f3:	call   4030d0 <free@plt>
  40e5f8:	mov    rax,QWORD PTR [rsp+0x18]
  40e5fd:	mov    QWORD PTR [r12+0x48],rax
  40e602:	test   rax,rax
  40e605:	je     40e66e <isspace@plt+0xad5e>
  40e607:	mov    eax,DWORD PTR [r13+0x10]
  40e60b:	test   eax,0x800
  40e610:	jne    40e15c <isspace@plt+0xa84c>
  40e616:	jmp    40e1b7 <isspace@plt+0xa8a7>
  40e61b:	lea    rax,[r12+0x5c]
  40e620:	mov    DWORD PTR [r12+0x5c],0x0
  40e629:	cmp    rcx,rbp
  40e62c:	jne    40e071 <isspace@plt+0xa761>
  40e632:	mov    DWORD PTR [rax],0x7fffffff
  40e638:	jmp    40e08d <isspace@plt+0xa77d>
  40e63d:	cmp    rcx,r13
  40e640:	je     40e65c <isspace@plt+0xad4c>
  40e642:	lea    rdi,[rip+0x2343a]        # 431a83 <isspace@plt+0x2e173>
  40e649:	call   403850 <strdup@plt>
  40e64e:	mov    r15,QWORD PTR [rsp+0x8]
  40e653:	mov    r13,QWORD PTR [rsp]
  40e657:	jmp    40e37a <isspace@plt+0xaa6a>
  40e65c:	mov    QWORD PTR [r12+0x8],0x0
  40e665:	mov    DWORD PTR [r14],0x6
  40e66c:	jmp    40e68d <isspace@plt+0xad7d>
  40e66e:	cmp    QWORD PTR [rbx],rbp
  40e671:	jne    40e12e <isspace@plt+0xa81e>
  40e677:	jmp    40e126 <isspace@plt+0xa816>
  40e67c:	mov    rdi,rbx
  40e67f:	call   4030d0 <free@plt>
  40e684:	mov    QWORD PTR [r12+0x70],0x0
  40e68d:	mov    rdi,r12
  40e690:	call   4096b0 <isspace@plt+0x5da0>
  40e695:	xor    r12d,r12d
  40e698:	mov    rax,QWORD PTR fs:0x28
  40e6a1:	cmp    rax,QWORD PTR [rsp+0x40]
  40e6a6:	jne    40e6c4 <isspace@plt+0xadb4>
  40e6a8:	mov    rax,r12
  40e6ab:	add    rsp,0x48
  40e6af:	pop    rbx
  40e6b0:	pop    r12
  40e6b2:	pop    r13
  40e6b4:	pop    r14
  40e6b6:	pop    r15
  40e6b8:	pop    rbp
  40e6b9:	ret    
  40e6ba:	mov    rdi,rbx
  40e6bd:	call   4030d0 <free@plt>
  40e6c2:	jmp    40e68d <isspace@plt+0xad7d>
  40e6c4:	call   403280 <__stack_chk_fail@plt>
  40e6c9:	nop    DWORD PTR [rax+0x0]
  40e6d0:	push   rbp
  40e6d1:	push   r15
  40e6d3:	push   r14
  40e6d5:	push   r12
  40e6d7:	push   rbx
  40e6d8:	sub    rsp,0x20
  40e6dc:	mov    r15,rdx
  40e6df:	mov    rbx,rsi
  40e6e2:	mov    r12,rdi
  40e6e5:	mov    rax,QWORD PTR fs:0x28
  40e6ee:	mov    QWORD PTR [rsp+0x18],rax
  40e6f3:	vxorps xmm0,xmm0,xmm0
  40e6f7:	vmovaps XMMWORD PTR [rsp],xmm0
  40e6fc:	mov    QWORD PTR [rsp+0xf],0x0
  40e705:	call   40e7e0 <isspace@plt+0xaed0>
  40e70a:	mov    r14,rax
  40e70d:	mov    rax,QWORD PTR [rbx]
  40e710:	jmp    40e723 <isspace@plt+0xae13>
  40e712:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e71c:	nop    DWORD PTR [rax+0x0]
  40e720:	mov    QWORD PTR [rbx],rax
  40e723:	add    rax,0x1
  40e727:	movsx  ebp,BYTE PTR [rax-0x1]
  40e72b:	cmp    ebp,0x20
  40e72e:	je     40e720 <isspace@plt+0xae10>
  40e730:	cmp    bpl,0x9
  40e734:	je     40e720 <isspace@plt+0xae10>
  40e736:	cmp    ebp,0x3b
  40e739:	je     40e740 <isspace@plt+0xae30>
  40e73b:	cmp    ebp,0x2c
  40e73e:	jne    40e7bb <isspace@plt+0xaeab>
  40e740:	mov    QWORD PTR [rbx],rax
  40e743:	mov    rdi,r12
  40e746:	mov    rsi,rbx
  40e749:	mov    rdx,r15
  40e74c:	call   40e6d0 <isspace@plt+0xadc0>
  40e751:	mov    rbx,rax
  40e754:	test   rax,rax
  40e757:	je     40e76a <isspace@plt+0xae5a>
  40e759:	mov    al,BYTE PTR [rbx]
  40e75b:	cmp    al,0x3b
  40e75d:	je     40e763 <isspace@plt+0xae53>
  40e75f:	cmp    al,0x2c
  40e761:	jne    40e76a <isspace@plt+0xae5a>
  40e763:	cmp    QWORD PTR [rbx+0x18],0x0
  40e768:	je     40e7a1 <isspace@plt+0xae91>
  40e76a:	mov    edi,0x1
  40e76f:	mov    esi,0x28
  40e774:	call   403470 <calloc@plt>
  40e779:	test   rax,rax
  40e77c:	je     40e7a8 <isspace@plt+0xae98>
  40e77e:	mov    BYTE PTR [rax],bpl
  40e781:	mov    rcx,QWORD PTR [rsp+0xf]
  40e786:	mov    QWORD PTR [rax+0x10],rcx
  40e78a:	vmovaps xmm0,XMMWORD PTR [rsp]
  40e78f:	vmovups XMMWORD PTR [rax+0x1],xmm0
  40e794:	mov    QWORD PTR [rax+0x18],r14
  40e798:	mov    QWORD PTR [rax+0x20],rbx
  40e79c:	mov    r14,rax
  40e79f:	jmp    40e7bb <isspace@plt+0xaeab>
  40e7a1:	mov    DWORD PTR [r15],0x2
  40e7a8:	mov    rdi,r14
  40e7ab:	call   40eab0 <isspace@plt+0xb1a0>
  40e7b0:	mov    rdi,rbx
  40e7b3:	call   40eab0 <isspace@plt+0xb1a0>
  40e7b8:	xor    r14d,r14d
  40e7bb:	mov    rax,QWORD PTR fs:0x28
  40e7c4:	cmp    rax,QWORD PTR [rsp+0x18]
  40e7c9:	jne    40e7db <isspace@plt+0xaecb>
  40e7cb:	mov    rax,r14
  40e7ce:	add    rsp,0x20
  40e7d2:	pop    rbx
  40e7d3:	pop    r12
  40e7d5:	pop    r14
  40e7d7:	pop    r15
  40e7d9:	pop    rbp
  40e7da:	ret    
  40e7db:	call   403280 <__stack_chk_fail@plt>
  40e7e0:	push   rbp
  40e7e1:	push   r15
  40e7e3:	push   r14
  40e7e5:	push   r13
  40e7e7:	push   r12
  40e7e9:	push   rbx
  40e7ea:	sub    rsp,0x28
  40e7ee:	mov    r14,rdx
  40e7f1:	mov    r13,rsi
  40e7f4:	mov    r15,rdi
  40e7f7:	mov    rax,QWORD PTR fs:0x28
  40e800:	mov    QWORD PTR [rsp+0x20],rax
  40e805:	mov    rbx,QWORD PTR [rsi]
  40e808:	jmp    40e818 <isspace@plt+0xaf08>
  40e80a:	nop    WORD PTR [rax+rax*1+0x0]
  40e810:	add    rbx,0x1
  40e814:	mov    QWORD PTR [r13+0x0],rbx
  40e818:	movzx  eax,BYTE PTR [rbx]
  40e81b:	cmp    al,0x20
  40e81d:	je     40e810 <isspace@plt+0xaf00>
  40e81f:	cmp    al,0x9
  40e821:	je     40e810 <isspace@plt+0xaf00>
  40e823:	mov    BYTE PTR [rsp+0x16],0x0
  40e828:	mov    WORD PTR [rsp+0x14],0x0
  40e82f:	mov    DWORD PTR [rsp+0x10],0x0
  40e837:	movsx  ebp,BYTE PTR [rbx]
  40e83a:	xor    eax,eax
  40e83c:	lea    ecx,[rbp-0x23]
  40e83f:	cmp    ecx,0x1c
  40e842:	ja     40ea28 <isspace@plt+0xb118>
  40e848:	lea    rdx,[rip+0x21855]        # 4300a4 <isspace@plt+0x2c794>
  40e84f:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40e853:	add    rcx,rdx
  40e856:	jmp    rcx
  40e858:	mov    QWORD PTR [rsp+0x18],0x0
  40e861:	lea    rsi,[rsp+0x18]
  40e866:	mov    edx,0xa
  40e86b:	mov    rdi,rbx
  40e86e:	call   403460 <strtoull@plt>
  40e873:	mov    rcx,QWORD PTR [rsp+0x18]
  40e878:	cmp    rcx,QWORD PTR [r13+0x0]
  40e87c:	je     40e899 <isspace@plt+0xaf89>
  40e87e:	mov    QWORD PTR [r13+0x0],rcx
  40e882:	cdqe   
  40e884:	jmp    40e89b <isspace@plt+0xaf8b>
  40e886:	add    rbx,0x1
  40e88a:	mov    QWORD PTR [r13+0x0],rbx
  40e88e:	mov    QWORD PTR [rsp+0x8],0xffffffffffffffff
  40e897:	jmp    40e8a3 <isspace@plt+0xaf93>
  40e899:	xor    eax,eax
  40e89b:	mov    QWORD PTR [rsp+0x8],rax
  40e8a0:	mov    bpl,0x6c
  40e8a3:	xor    r12d,r12d
  40e8a6:	mov    rdi,r15
  40e8a9:	mov    rsi,r13
  40e8ac:	mov    rdx,r14
  40e8af:	call   40e7e0 <isspace@plt+0xaed0>
  40e8b4:	test   rax,rax
  40e8b7:	je     40e921 <isspace@plt+0xb011>
  40e8b9:	mov    rbx,rax
  40e8bc:	movsx  eax,BYTE PTR [rax]
  40e8bf:	cmp    eax,0x3f
  40e8c2:	ja     40e8e8 <isspace@plt+0xafd8>
  40e8c4:	movabs rcx,0x8000800800000000
  40e8ce:	bt     rcx,rax
  40e8d2:	jb     40e8ed <isspace@plt+0xafdd>
  40e8d4:	movabs rcx,0x401000000000
  40e8de:	bt     rcx,rax
  40e8e2:	jb     40ea26 <isspace@plt+0xb116>
  40e8e8:	cmp    eax,0x6c
  40e8eb:	jne    40e923 <isspace@plt+0xb013>
  40e8ed:	cmp    bpl,0x2b
  40e8f1:	je     40e923 <isspace@plt+0xb013>
  40e8f3:	cmp    bpl,0x2d
  40e8f7:	je     40e923 <isspace@plt+0xb013>
  40e8f9:	mov    edi,0x1
  40e8fe:	mov    esi,0x28
  40e903:	call   403470 <calloc@plt>
  40e908:	test   rax,rax
  40e90b:	je     40e967 <isspace@plt+0xb057>
  40e90d:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
  40e915:	mov    BYTE PTR [rax],0x2b
  40e918:	mov    QWORD PTR [rax+0x20],rbx
  40e91c:	mov    rbx,rax
  40e91f:	jmp    40e923 <isspace@plt+0xb013>
  40e921:	xor    ebx,ebx
  40e923:	mov    edi,0x1
  40e928:	mov    esi,0x28
  40e92d:	call   403470 <calloc@plt>
  40e932:	test   rax,rax
  40e935:	je     40e967 <isspace@plt+0xb057>
  40e937:	mov    BYTE PTR [rax],bpl
  40e93a:	mov    cl,BYTE PTR [rsp+0x16]
  40e93e:	mov    BYTE PTR [rax+0x7],cl
  40e941:	movzx  ecx,WORD PTR [rsp+0x14]
  40e946:	mov    WORD PTR [rax+0x5],cx
  40e94a:	mov    ecx,DWORD PTR [rsp+0x10]
  40e94e:	mov    DWORD PTR [rax+0x1],ecx
  40e951:	mov    QWORD PTR [rax+0x8],r12
  40e955:	mov    rcx,QWORD PTR [rsp+0x8]
  40e95a:	mov    QWORD PTR [rax+0x10],rcx
  40e95e:	mov    QWORD PTR [rax+0x20],rbx
  40e962:	jmp    40ea28 <isspace@plt+0xb118>
  40e967:	mov    rdi,rbx
  40e96a:	call   40eab0 <isspace@plt+0xb1a0>
  40e96f:	jmp    40ea26 <isspace@plt+0xb116>
  40e974:	mov    BYTE PTR [rsp+0x18],bpl
  40e979:	mov    BYTE PTR [rsp+0x19],0x0
  40e97e:	test   bpl,bpl
  40e981:	je     40e9fd <isspace@plt+0xb0ed>
  40e983:	movzx  r12d,bpl
  40e987:	call   4038f0 <__ctype_b_loc@plt>
  40e98c:	mov    rax,QWORD PTR [rax]
  40e98f:	test   BYTE PTR [rax+r12*2+0x1],0x20
  40e995:	jne    40e9fd <isspace@plt+0xb0ed>
  40e997:	lea    rax,[rbx+0x1]
  40e99b:	mov    QWORD PTR [r13+0x0],rax
  40e99f:	lea    rsi,[rsp+0x18]
  40e9a4:	xor    edx,edx
  40e9a6:	mov    ecx,0x2
  40e9ab:	mov    rdi,r13
  40e9ae:	call   40eb10 <isspace@plt+0xb200>
  40e9b3:	mov    rdx,QWORD PTR [r13+0x0]
  40e9b7:	mov    cl,BYTE PTR [rdx]
  40e9b9:	cmp    cl,BYTE PTR [rsp+0x18]
  40e9bd:	jne    40e9c7 <isspace@plt+0xb0b7>
  40e9bf:	add    rdx,0x1
  40e9c3:	mov    QWORD PTR [r13+0x0],rdx
  40e9c7:	test   rax,rax
  40e9ca:	jne    40e9d1 <isspace@plt+0xb0c1>
  40e9cc:	cmp    rdx,rbx
  40e9cf:	je     40e9fd <isspace@plt+0xb0ed>
  40e9d1:	mov    rdi,r15
  40e9d4:	mov    rsi,rax
  40e9d7:	mov    rbx,rax
  40e9da:	call   425330 <isspace@plt+0x21a20>
  40e9df:	mov    r12,rax
  40e9e2:	mov    rdi,rbx
  40e9e5:	call   4030d0 <free@plt>
  40e9ea:	test   r12,r12
  40e9ed:	je     40e9fd <isspace@plt+0xb0ed>
  40e9ef:	mov    QWORD PTR [rsp+0x8],0xffffffffffffffff
  40e9f8:	jmp    40e8a6 <isspace@plt+0xaf96>
  40e9fd:	mov    DWORD PTR [r14],0x5
  40ea04:	jmp    40ea26 <isspace@plt+0xb116>
  40ea06:	lea    rax,[rbx+0x1]
  40ea0a:	mov    QWORD PTR [r13+0x0],rax
  40ea0e:	movsx  esi,BYTE PTR [rbx+0x1]
  40ea12:	mov    rdi,r15
  40ea15:	call   4274c0 <isspace@plt+0x23bb0>
  40ea1a:	cmp    eax,0x1c
  40ea1d:	jne    40ea85 <isspace@plt+0xb175>
  40ea1f:	mov    DWORD PTR [r14],0xb
  40ea26:	xor    eax,eax
  40ea28:	mov    rcx,QWORD PTR fs:0x28
  40ea31:	cmp    rcx,QWORD PTR [rsp+0x20]
  40ea36:	jne    40eaa2 <isspace@plt+0xb192>
  40ea38:	add    rsp,0x28
  40ea3c:	pop    rbx
  40ea3d:	pop    r12
  40ea3f:	pop    r13
  40ea41:	pop    r14
  40ea43:	pop    r15
  40ea45:	pop    rbp
  40ea46:	ret    
  40ea47:	add    rbx,0x1
  40ea4b:	mov    QWORD PTR [r13+0x0],rbx
  40ea4f:	mov    QWORD PTR [rsp+0x18],0x0
  40ea58:	lea    rsi,[rsp+0x18]
  40ea5d:	mov    edx,0xa
  40ea62:	mov    rdi,rbx
  40ea65:	call   403460 <strtoull@plt>
  40ea6a:	mov    rcx,QWORD PTR [rsp+0x18]
  40ea6f:	cmp    rcx,QWORD PTR [r13+0x0]
  40ea73:	je     40ea96 <isspace@plt+0xb186>
  40ea75:	mov    QWORD PTR [r13+0x0],rcx
  40ea79:	cdqe   
  40ea7b:	mov    QWORD PTR [rsp+0x8],rax
  40ea80:	jmp    40e8a3 <isspace@plt+0xaf93>
  40ea85:	mov    eax,eax
  40ea87:	mov    QWORD PTR [rsp+0x8],rax
  40ea8c:	add    QWORD PTR [r13+0x0],0x1
  40ea91:	jmp    40e8a3 <isspace@plt+0xaf93>
  40ea96:	xor    eax,eax
  40ea98:	mov    QWORD PTR [rsp+0x8],rax
  40ea9d:	jmp    40e8a3 <isspace@plt+0xaf93>
  40eaa2:	call   403280 <__stack_chk_fail@plt>
  40eaa7:	nop    WORD PTR [rax+rax*1+0x0]
  40eab0:	push   rbx
  40eab1:	sub    rsp,0x10
  40eab5:	mov    rax,QWORD PTR fs:0x28
  40eabe:	mov    QWORD PTR [rsp+0x8],rax
  40eac3:	test   rdi,rdi
  40eac6:	je     40eaee <isspace@plt+0xb1de>
  40eac8:	mov    rbx,rdi
  40eacb:	mov    rdi,QWORD PTR [rdi+0x8]
  40eacf:	call   42b600 <isspace@plt+0x27cf0>
  40ead4:	mov    rdi,QWORD PTR [rbx+0x18]
  40ead8:	call   40eab0 <isspace@plt+0xb1a0>
  40eadd:	mov    rdi,QWORD PTR [rbx+0x20]
  40eae1:	call   40eab0 <isspace@plt+0xb1a0>
  40eae6:	mov    rdi,rbx
  40eae9:	call   4030d0 <free@plt>
  40eaee:	mov    rax,QWORD PTR fs:0x28
  40eaf7:	cmp    rax,QWORD PTR [rsp+0x8]
  40eafc:	jne    40eb04 <isspace@plt+0xb1f4>
  40eafe:	add    rsp,0x10
  40eb02:	pop    rbx
  40eb03:	ret    
  40eb04:	call   403280 <__stack_chk_fail@plt>
  40eb09:	nop    DWORD PTR [rax+0x0]
  40eb10:	push   rbp
  40eb11:	push   r15
  40eb13:	push   r14
  40eb15:	push   r13
  40eb17:	push   r12
  40eb19:	push   rbx
  40eb1a:	sub    rsp,0x48
  40eb1e:	mov    DWORD PTR [rsp+0xc],ecx
  40eb22:	mov    QWORD PTR [rsp+0x18],rdx
  40eb27:	mov    rbx,rsi
  40eb2a:	mov    rbp,rdi
  40eb2d:	mov    rax,QWORD PTR fs:0x28
  40eb36:	mov    QWORD PTR [rsp+0x40],rax
  40eb3b:	lea    rdi,[rsp+0x28]
  40eb40:	call   404230 <isspace@plt+0x920>
  40eb45:	mov    rdi,rbx
  40eb48:	call   403250 <strlen@plt>
  40eb4d:	mov    QWORD PTR [rsp+0x10],rax
  40eb52:	mov    r15,QWORD PTR [rbp+0x0]
  40eb56:	mov    r12b,BYTE PTR [r15]
  40eb59:	test   r12b,r12b
  40eb5c:	je     40ec9c <isspace@plt+0xb38c>
  40eb62:	xor    r13d,r13d
  40eb65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb6f:	nop
  40eb70:	movsx  r14d,r12b
  40eb74:	mov    rdi,rbx
  40eb77:	mov    esi,r14d
  40eb7a:	mov    rdx,QWORD PTR [rsp+0x10]
  40eb7f:	call   403410 <memchr@plt>
  40eb84:	test   r13b,0x1
  40eb88:	jne    40eb93 <isspace@plt+0xb283>
  40eb8a:	test   rax,rax
  40eb8d:	jne    40ec9c <isspace@plt+0xb38c>
  40eb93:	cmp    r12b,0x5c
  40eb97:	jne    40ebb1 <isspace@plt+0xb2a1>
  40eb99:	cmp    DWORD PTR [rsp+0xc],0x800
  40eba1:	je     40ebb1 <isspace@plt+0xb2a1>
  40eba3:	mov    ecx,r13d
  40eba6:	mov    al,0x1
  40eba8:	and    cl,0x1
  40ebab:	je     40ec80 <isspace@plt+0xb370>
  40ebb1:	mov    BYTE PTR [rsp+0x27],r12b
  40ebb6:	test   r13b,0x1
  40ebba:	je     40ec61 <isspace@plt+0xb351>
  40ebc0:	cmp    r12b,0xa
  40ebc4:	je     40ebe3 <isspace@plt+0xb2d3>
  40ebc6:	cmp    r12b,0x74
  40ebca:	je     40ebdc <isspace@plt+0xb2cc>
  40ebcc:	cmp    r12b,0x6e
  40ebd0:	jne    40ebeb <isspace@plt+0xb2db>
  40ebd2:	mov    BYTE PTR [rsp+0x27],0xa
  40ebd7:	jmp    40ec5e <isspace@plt+0xb34e>
  40ebdc:	mov    BYTE PTR [rsp+0x27],0x9
  40ebe1:	jmp    40ec5e <isspace@plt+0xb34e>
  40ebe3:	xor    r13d,r13d
  40ebe6:	jmp    40ec7d <isspace@plt+0xb36d>
  40ebeb:	cmp    DWORD PTR [rsp+0xc],0x2
  40ebf0:	je     40ebff <isspace@plt+0xb2ef>
  40ebf2:	cmp    DWORD PTR [rsp+0xc],0x10
  40ebf7:	je     40ebff <isspace@plt+0xb2ef>
  40ebf9:	cmp    r12b,0x5c
  40ebfd:	je     40ec5e <isspace@plt+0xb34e>
  40ebff:	mov    rdi,rbx
  40ec02:	mov    esi,r14d
  40ec05:	mov    rdx,QWORD PTR [rsp+0x10]
  40ec0a:	call   403410 <memchr@plt>
  40ec0f:	mov    r12,rax
  40ec12:	mov    r15,QWORD PTR [rsp+0x18]
  40ec17:	test   r15,r15
  40ec1a:	je     40ec3a <isspace@plt+0xb32a>
  40ec1c:	mov    rdi,r15
  40ec1f:	call   403250 <strlen@plt>
  40ec24:	mov    rdi,r15
  40ec27:	mov    esi,r14d
  40ec2a:	mov    rdx,rax
  40ec2d:	call   403410 <memchr@plt>
  40ec32:	test   rax,rax
  40ec35:	setne  al
  40ec38:	jmp    40ec3c <isspace@plt+0xb32c>
  40ec3a:	xor    eax,eax
  40ec3c:	xor    r13d,r13d
  40ec3f:	test   r12,r12
  40ec42:	jne    40ec61 <isspace@plt+0xb351>
  40ec44:	test   al,al
  40ec46:	jne    40ec61 <isspace@plt+0xb351>
  40ec48:	mov    edx,0x1
  40ec4d:	lea    rdi,[rsp+0x28]
  40ec52:	lea    rsi,[rip+0x21021]        # 42fc7a <isspace@plt+0x2c36a>
  40ec59:	call   404460 <isspace@plt+0xb50>
  40ec5e:	xor    r13d,r13d
  40ec61:	mov    edx,0x1
  40ec66:	lea    rdi,[rsp+0x28]
  40ec6b:	lea    rsi,[rsp+0x27]
  40ec70:	call   404460 <isspace@plt+0xb50>
  40ec75:	test   al,al
  40ec77:	je     40ecd0 <isspace@plt+0xb3c0>
  40ec79:	mov    r15,QWORD PTR [rbp+0x0]
  40ec7d:	mov    eax,r13d
  40ec80:	lea    rcx,[r15+0x1]
  40ec84:	mov    QWORD PTR [rbp+0x0],rcx
  40ec88:	movzx  r12d,BYTE PTR [r15+0x1]
  40ec8d:	mov    r15,rcx
  40ec90:	mov    r13d,eax
  40ec93:	test   r12b,r12b
  40ec96:	jne    40eb70 <isspace@plt+0xb260>
  40ec9c:	lea    rbx,[rsp+0x28]
  40eca1:	mov    rdi,rbx
  40eca4:	call   404380 <isspace@plt+0xa70>
  40eca9:	mov    rdi,rbx
  40ecac:	call   404ec0 <isspace@plt+0x15b0>
  40ecb1:	mov    rcx,QWORD PTR fs:0x28
  40ecba:	cmp    rcx,QWORD PTR [rsp+0x40]
  40ecbf:	jne    40ecde <isspace@plt+0xb3ce>
  40ecc1:	add    rsp,0x48
  40ecc5:	pop    rbx
  40ecc6:	pop    r12
  40ecc8:	pop    r13
  40ecca:	pop    r14
  40eccc:	pop    r15
  40ecce:	pop    rbp
  40eccf:	ret    
  40ecd0:	lea    rdi,[rsp+0x28]
  40ecd5:	call   404550 <isspace@plt+0xc40>
  40ecda:	xor    eax,eax
  40ecdc:	jmp    40ecb1 <isspace@plt+0xb3a1>
  40ecde:	call   403280 <__stack_chk_fail@plt>
  40ece3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eced:	nop    DWORD PTR [rax]
  40ecf0:	push   rbp
  40ecf1:	push   r15
  40ecf3:	push   r14
  40ecf5:	push   rbx
  40ecf6:	push   rax
  40ecf7:	mov    rax,QWORD PTR fs:0x28
  40ed00:	mov    QWORD PTR [rsp],rax
  40ed04:	mov    rax,QWORD PTR [rdi+0x50]
  40ed08:	mov    eax,DWORD PTR [rax+0x10]
  40ed0b:	test   eax,0x20000
  40ed10:	je     40ed25 <isspace@plt+0xb415>
  40ed12:	movzx  ecx,sil
  40ed16:	mov    r14d,ecx
  40ed19:	xor    r14d,0xf
  40ed1d:	test   cl,cl
  40ed1f:	jne    40ed7a <isspace@plt+0xb46a>
  40ed21:	test   dl,dl
  40ed23:	jne    40ed7a <isspace@plt+0xb46a>
  40ed25:	mov    rbx,QWORD PTR [rdi+0x70]
  40ed29:	xor    r14d,r14d
  40ed2c:	test   rbx,rbx
  40ed2f:	je     40ed7a <isspace@plt+0xb46a>
  40ed31:	mov    ecx,eax
  40ed33:	and    ecx,0x10000
  40ed39:	movzx  r15d,dl
  40ed3d:	or     r15d,ecx
  40ed40:	and    eax,0x8000
  40ed45:	movzx  ebp,sil
  40ed49:	or     ebp,eax
  40ed4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed50:	xor    esi,esi
  40ed52:	test   ebp,ebp
  40ed54:	setne  sil
  40ed58:	xor    edx,edx
  40ed5a:	test   r15d,r15d
  40ed5d:	setne  dl
  40ed60:	mov    rdi,rbx
  40ed63:	call   40ecf0 <isspace@plt+0xb3e0>
  40ed68:	test   eax,eax
  40ed6a:	jne    40ed77 <isspace@plt+0xb467>
  40ed6c:	mov    rbx,QWORD PTR [rbx+0x78]
  40ed70:	test   rbx,rbx
  40ed73:	jne    40ed50 <isspace@plt+0xb440>
  40ed75:	jmp    40ed7a <isspace@plt+0xb46a>
  40ed77:	mov    r14d,eax
  40ed7a:	mov    rax,QWORD PTR fs:0x28
  40ed83:	cmp    rax,QWORD PTR [rsp]
  40ed87:	jne    40ed97 <isspace@plt+0xb487>
  40ed89:	mov    eax,r14d
  40ed8c:	add    rsp,0x8
  40ed90:	pop    rbx
  40ed91:	pop    r14
  40ed93:	pop    r15
  40ed95:	pop    rbp
  40ed96:	ret    
  40ed97:	call   403280 <__stack_chk_fail@plt>
  40ed9c:	nop    DWORD PTR [rax+0x0]
  40eda0:	push   rbp
  40eda1:	push   r15
  40eda3:	push   r14
  40eda5:	push   r13
  40eda7:	push   r12
  40eda9:	push   rbx
  40edaa:	sub    rsp,0x48
  40edae:	mov    r12,rcx
  40edb1:	mov    QWORD PTR [rsp],rdx
  40edb5:	mov    r15,rsi
  40edb8:	mov    rbx,rdi
  40edbb:	mov    rax,QWORD PTR fs:0x28
  40edc4:	mov    QWORD PTR [rsp+0x40],rax
  40edc9:	call   4174c0 <isspace@plt+0x13bb0>
  40edce:	mov    QWORD PTR [rsp+0x30],rax
  40edd3:	mov    QWORD PTR [rsp+0x38],rdx
  40edd8:	xor    ebp,ebp
  40edda:	lea    r13,[rsp+0x30]
  40eddf:	lea    r14,[rip+0x21332]        # 430118 <isspace@plt+0x2c808>
  40ede6:	mov    QWORD PTR [rsp+0x8],r15
  40edeb:	jmp    40ee00 <isspace@plt+0xb4f0>
  40eded:	mov    rax,QWORD PTR [r12]
  40edf1:	sub    rax,QWORD PTR [rbx+0x10]
  40edf5:	jmp    40eebd <isspace@plt+0xb5ad>
  40edfa:	nop    WORD PTR [rax+rax*1+0x0]
  40ee00:	movsx  eax,BYTE PTR [rbx]
  40ee03:	lea    ecx,[rax-0x23]
  40ee06:	cmp    ecx,0x49
  40ee09:	ja     40ef5a <isspace@plt+0xb64a>
  40ee0f:	movsxd rcx,DWORD PTR [r14+rcx*4]
  40ee13:	add    rcx,r14
  40ee16:	jmp    rcx
  40ee18:	xor    ecx,ecx
  40ee1a:	cmp    al,0x2b
  40ee1c:	sete   cl
  40ee1f:	lea    ebp,[rcx+rcx*1]
  40ee22:	add    ebp,0xffffffff
  40ee25:	mov    rax,QWORD PTR [rbx+0x20]
  40ee29:	test   rax,rax
  40ee2c:	je     40ee40 <isspace@plt+0xb530>
  40ee2e:	movzx  eax,BYTE PTR [rax]
  40ee31:	cmp    al,0x2d
  40ee33:	je     40ee40 <isspace@plt+0xb530>
  40ee35:	cmp    al,0x2b
  40ee37:	jne    40ef5a <isspace@plt+0xb64a>
  40ee3d:	nop    DWORD PTR [rax]
  40ee40:	mov    rdi,rbx
  40ee43:	mov    rsi,r15
  40ee46:	mov    rdx,r12
  40ee49:	mov    ecx,ebp
  40ee4b:	call   40f040 <isspace@plt+0xb730>
  40ee50:	jmp    40ef50 <isspace@plt+0xb640>
  40ee55:	vmovups xmm0,XMMWORD PTR [r12]
  40ee5b:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  40ee61:	jmp    40ef5a <isspace@plt+0xb64a>
  40ee66:	mov    rax,QWORD PTR [rbx+0x10]
  40ee6a:	shl    rax,0x5
  40ee6e:	add    r15,rax
  40ee71:	add    r15,0xb8
  40ee78:	mov    rdi,QWORD PTR [rsp]
  40ee7c:	test   rdi,rdi
  40ee7f:	je     40eedc <isspace@plt+0xb5cc>
  40ee81:	call   41f210 <isspace@plt+0x1b900>
  40ee86:	jmp    40eede <isspace@plt+0xb5ce>
  40ee88:	test   ebp,ebp
  40ee8a:	je     40ef3a <isspace@plt+0xb62a>
  40ee90:	neg    ebp
  40ee92:	mov    rdi,QWORD PTR [r15]
  40ee95:	test   ebp,ebp
  40ee97:	js     40ef42 <isspace@plt+0xb632>
  40ee9d:	mov    rsi,QWORD PTR [r12+0x8]
  40eea2:	mov    rdx,QWORD PTR [rbx+0x8]
  40eea6:	call   416fc0 <isspace@plt+0x136b0>
  40eeab:	jmp    40ef50 <isspace@plt+0xb640>
  40eeb0:	test   ebp,ebp
  40eeb2:	jle    40ef1a <isspace@plt+0xb60a>
  40eeb4:	mov    rax,QWORD PTR [rbx+0x10]
  40eeb8:	add    rax,QWORD PTR [r12+0x8]
  40eebd:	mov    QWORD PTR [rsp+0x38],rax
  40eec2:	mov    QWORD PTR [rsp+0x30],rax
  40eec7:	jmp    40ef5a <isspace@plt+0xb64a>
  40eecc:	mov    rdi,QWORD PTR [r15]
  40eecf:	call   410a90 <isspace@plt+0xd180>
  40eed4:	mov    rdi,rax
  40eed7:	mov    rsi,rax
  40eeda:	jmp    40ef13 <isspace@plt+0xb603>
  40eedc:	xor    eax,eax
  40eede:	movsxd rsi,eax
  40eee1:	mov    rdi,r15
  40eee4:	call   403d20 <isspace@plt+0x410>
  40eee9:	test   rax,rax
  40eeec:	je     40ef04 <isspace@plt+0xb5f4>
  40eeee:	mov    r15,QWORD PTR [rsp+0x8]
  40eef3:	mov    rdi,QWORD PTR [r15]
  40eef6:	mov    rsi,QWORD PTR [rax+0x8]
  40eefa:	call   411060 <isspace@plt+0xd750>
  40eeff:	mov    rdi,rax
  40ef02:	jmp    40ef10 <isspace@plt+0xb600>
  40ef04:	mov    rdi,0xffffffffffffffff
  40ef0b:	mov    r15,QWORD PTR [rsp+0x8]
  40ef10:	mov    rsi,rdi
  40ef13:	call   417690 <isspace@plt+0x13d80>
  40ef18:	jmp    40ef50 <isspace@plt+0xb640>
  40ef1a:	js     40eded <isspace@plt+0xb4dd>
  40ef20:	mov    rdi,QWORD PTR [rbx+0x10]
  40ef24:	mov    rsi,rdi
  40ef27:	call   417690 <isspace@plt+0x13d80>
  40ef2c:	mov    QWORD PTR [rsp+0x30],rax
  40ef31:	mov    QWORD PTR [rsp+0x38],rdx
  40ef36:	xor    ebp,ebp
  40ef38:	jmp    40ef5a <isspace@plt+0xb64a>
  40ef3a:	mov    rdi,QWORD PTR [r15]
  40ef3d:	mov    ebp,0xffffffff
  40ef42:	mov    rsi,QWORD PTR [r12]
  40ef46:	mov    rdx,QWORD PTR [rbx+0x8]
  40ef4a:	call   417050 <isspace@plt+0x13740>
  40ef4f:	nop
  40ef50:	mov    QWORD PTR [rsp+0x30],rax
  40ef55:	mov    QWORD PTR [rsp+0x38],rdx
  40ef5a:	mov    rdi,r13
  40ef5d:	call   417400 <isspace@plt+0x13af0>
  40ef62:	test   al,al
  40ef64:	cmovne r12,r13
  40ef68:	mov    rbx,QWORD PTR [rbx+0x20]
  40ef6c:	test   rbx,rbx
  40ef6f:	jne    40ee00 <isspace@plt+0xb4f0>
  40ef75:	mov    rax,QWORD PTR [rsp+0x30]
  40ef7a:	mov    rdx,QWORD PTR [rsp+0x38]
  40ef7f:	jmp    40f017 <isspace@plt+0xb707>
  40ef84:	mov    rdi,QWORD PTR [rbx+0x18]
  40ef88:	test   rdi,rdi
  40ef8b:	je     40efb2 <isspace@plt+0xb6a2>
  40ef8d:	mov    rsi,r15
  40ef90:	mov    rdx,QWORD PTR [rsp]
  40ef94:	mov    rcx,r12
  40ef97:	call   40eda0 <isspace@plt+0xb490>
  40ef9c:	jmp    40efbb <isspace@plt+0xb6ab>
  40ef9e:	mov    rdi,QWORD PTR [r15]
  40efa1:	call   410a90 <isspace@plt+0xd180>
  40efa6:	xor    edi,edi
  40efa8:	mov    rsi,rax
  40efab:	call   417690 <isspace@plt+0x13d80>
  40efb0:	jmp    40f017 <isspace@plt+0xb707>
  40efb2:	xor    edi,edi
  40efb4:	xor    esi,esi
  40efb6:	call   417690 <isspace@plt+0x13d80>
  40efbb:	mov    QWORD PTR [rsp+0x20],rax
  40efc0:	mov    QWORD PTR [rsp+0x28],rdx
  40efc5:	mov    rdi,QWORD PTR [rbx+0x20]
  40efc9:	test   rdi,rdi
  40efcc:	je     40efeb <isspace@plt+0xb6db>
  40efce:	cmp    BYTE PTR [rbx],0x3b
  40efd1:	lea    rax,[rsp+0x20]
  40efd6:	cmove  r12,rax
  40efda:	mov    rsi,r15
  40efdd:	mov    rdx,QWORD PTR [rsp]
  40efe1:	mov    rcx,r12
  40efe4:	call   40eda0 <isspace@plt+0xb490>
  40efe9:	jmp    40effe <isspace@plt+0xb6ee>
  40efeb:	mov    rdi,QWORD PTR [r15]
  40efee:	call   410a90 <isspace@plt+0xd180>
  40eff3:	mov    rdi,rax
  40eff6:	mov    rsi,rax
  40eff9:	call   417690 <isspace@plt+0x13d80>
  40effe:	mov    QWORD PTR [rsp+0x10],rax
  40f003:	mov    QWORD PTR [rsp+0x18],rdx
  40f008:	lea    rdi,[rsp+0x20]
  40f00d:	lea    rsi,[rsp+0x10]
  40f012:	call   417500 <isspace@plt+0x13bf0>
  40f017:	mov    rcx,QWORD PTR fs:0x28
  40f020:	cmp    rcx,QWORD PTR [rsp+0x40]
  40f025:	jne    40f036 <isspace@plt+0xb726>
  40f027:	add    rsp,0x48
  40f02b:	pop    rbx
  40f02c:	pop    r12
  40f02e:	pop    r13
  40f030:	pop    r14
  40f032:	pop    r15
  40f034:	pop    rbp
  40f035:	ret    
  40f036:	call   403280 <__stack_chk_fail@plt>
  40f03b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f040:	push   r15
  40f042:	push   r14
  40f044:	push   r13
  40f046:	push   r12
  40f048:	push   rbx
  40f049:	sub    rsp,0x10
  40f04d:	mov    r14,rdi
  40f050:	mov    rax,QWORD PTR fs:0x28
  40f059:	mov    QWORD PTR [rsp+0x8],rax
  40f05e:	mov    r15,QWORD PTR [rsi]
  40f061:	mov    rsi,QWORD PTR [rdi+0x10]
  40f065:	cmp    rsi,0xffffffffffffffff
  40f069:	mov    ebx,0x1
  40f06e:	cmovne rbx,rsi
  40f072:	mov    rax,QWORD PTR [rdx]
  40f075:	test   ecx,ecx
  40f077:	jle    40f0d0 <isspace@plt+0xb7c0>
  40f079:	mov    r12,QWORD PTR [rdx+0x8]
  40f07d:	cmp    rax,r12
  40f080:	jae    40f0a6 <isspace@plt+0xb796>
  40f082:	lea    r13,[r12-0x1]
  40f087:	lea    rdx,[rsp+0x7]
  40f08c:	mov    rdi,r15
  40f08f:	mov    rsi,r13
  40f092:	call   4112b0 <isspace@plt+0xd9a0>
  40f097:	cmp    BYTE PTR [rsp+0x7],0xa
  40f09c:	cmovne r13,r12
  40f0a0:	test   al,al
  40f0a2:	cmovne r12,r13
  40f0a6:	mov    rdi,r15
  40f0a9:	mov    rsi,r12
  40f0ac:	call   410db0 <isspace@plt+0xd4a0>
  40f0b1:	add    rbx,rax
  40f0b4:	mov    rdi,r15
  40f0b7:	mov    rsi,rbx
  40f0ba:	call   410ac0 <isspace@plt+0xd1b0>
  40f0bf:	mov    rbx,rax
  40f0c2:	cmp    BYTE PTR [r14],0x67
  40f0c6:	jne    40f102 <isspace@plt+0xb7f2>
  40f0c8:	mov    rdi,rbx
  40f0cb:	mov    rsi,rbx
  40f0ce:	jmp    40f113 <isspace@plt+0xb803>
  40f0d0:	js     40f0dc <isspace@plt+0xb7cc>
  40f0d2:	test   rsi,rsi
  40f0d5:	je     40f0f4 <isspace@plt+0xb7e4>
  40f0d7:	mov    rdi,r15
  40f0da:	jmp    40f0ba <isspace@plt+0xb7aa>
  40f0dc:	mov    rdi,r15
  40f0df:	mov    rsi,rax
  40f0e2:	call   410db0 <isspace@plt+0xd4a0>
  40f0e7:	sub    rax,rbx
  40f0ea:	jbe    40f0fa <isspace@plt+0xb7ea>
  40f0ec:	mov    rdi,r15
  40f0ef:	mov    rsi,rax
  40f0f2:	jmp    40f0ba <isspace@plt+0xb7aa>
  40f0f4:	xor    edi,edi
  40f0f6:	xor    esi,esi
  40f0f8:	jmp    40f113 <isspace@plt+0xb803>
  40f0fa:	xor    ebx,ebx
  40f0fc:	cmp    BYTE PTR [r14],0x67
  40f100:	je     40f0c8 <isspace@plt+0xb7b8>
  40f102:	mov    rdi,r15
  40f105:	mov    rsi,rbx
  40f108:	call   4137b0 <isspace@plt+0xfea0>
  40f10d:	mov    rdi,rbx
  40f110:	mov    rsi,rax
  40f113:	call   417690 <isspace@plt+0x13d80>
  40f118:	mov    rcx,QWORD PTR fs:0x28
  40f121:	cmp    rcx,QWORD PTR [rsp+0x8]
  40f126:	jne    40f136 <isspace@plt+0xb826>
  40f128:	add    rsp,0x10
  40f12c:	pop    rbx
  40f12d:	pop    r12
  40f12f:	pop    r13
  40f131:	pop    r14
  40f133:	pop    r15
  40f135:	ret    
  40f136:	call   403280 <__stack_chk_fail@plt>
  40f13b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f140:	push   rbp
  40f141:	push   r15
  40f143:	push   r14
  40f145:	push   r13
  40f147:	push   r12
  40f149:	push   rbx
  40f14a:	sub    rsp,0x18
  40f14e:	mov    rax,QWORD PTR fs:0x28
  40f157:	mov    QWORD PTR [rsp+0x10],rax
  40f15c:	test   rcx,rcx
  40f15f:	je     40f5b9 <isspace@plt+0xbca9>
  40f165:	mov    rbx,rsi
  40f168:	mov    r13,rdi
  40f16b:	cmp    QWORD PTR [rdi+0xc0],rsi
  40f172:	jb     40f575 <isspace@plt+0xbc65>
  40f178:	mov    r14,rcx
  40f17b:	mov    r12,rdx
  40f17e:	cmp    QWORD PTR [r13+0x158],rbx
  40f185:	jbe    40f19f <isspace@plt+0xb88f>
  40f187:	mov    eax,0x1
  40f18c:	vmovq  xmm0,rax
  40f191:	vpslldq xmm0,xmm0,0x8
  40f196:	vmovdqu XMMWORD PTR [r13+0x158],xmm0
  40f19f:	mov    rcx,QWORD PTR [r13+0x40]
  40f1a3:	test   rcx,rcx
  40f1a6:	je     40f575 <isspace@plt+0xbc65>
  40f1ac:	lea    rbp,[r13+0x30]
  40f1b0:	xor    eax,eax
  40f1b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f1bc:	nop    DWORD PTR [rax+0x0]
  40f1c0:	mov    rdx,rcx
  40f1c3:	mov    rsi,QWORD PTR [rbp+0x30]
  40f1c7:	add    rsi,rax
  40f1ca:	cmp    rax,rbx
  40f1cd:	ja     40f1d4 <isspace@plt+0xb8c4>
  40f1cf:	cmp    rsi,rbx
  40f1d2:	jae    40f1e8 <isspace@plt+0xb8d8>
  40f1d4:	mov    rcx,QWORD PTR [rdx+0x10]
  40f1d8:	mov    rbp,rdx
  40f1db:	mov    rax,rsi
  40f1de:	test   rcx,rcx
  40f1e1:	jne    40f1c0 <isspace@plt+0xb8b0>
  40f1e3:	jmp    40f575 <isspace@plt+0xbc65>
  40f1e8:	mov    r15,rbx
  40f1eb:	sub    r15,rax
  40f1ee:	mov    rdi,r13
  40f1f1:	call   403f90 <isspace@plt+0x680>
  40f1f6:	lea    rsi,[rax-0x1]
  40f1fa:	mov    rdi,r13
  40f1fd:	call   403c60 <isspace@plt+0x350>
  40f202:	test   rax,rax
  40f205:	je     40f2ce <isspace@plt+0xb9be>
  40f20b:	mov    rcx,QWORD PTR [r13+0x28]
  40f20f:	test   rcx,rcx
  40f212:	je     40f2ce <isspace@plt+0xb9be>
  40f218:	mov    rdx,QWORD PTR [r13+0xa8]
  40f21f:	test   rdx,rdx
  40f222:	je     40f2ce <isspace@plt+0xb9be>
  40f228:	cmp    rcx,rbp
  40f22b:	jne    40f2ce <isspace@plt+0xb9be>
  40f231:	mov    rcx,QWORD PTR [rdx]
  40f234:	test   rcx,rcx
  40f237:	je     40f2ce <isspace@plt+0xb9be>
  40f23d:	mov    rdi,QWORD PTR [rcx+0x20]
  40f241:	add    rcx,0x18
  40f245:	xor    esi,esi
  40f247:	mov    rcx,QWORD PTR [rcx]
  40f24a:	mov    dl,0x1
  40f24c:	cmp    rcx,rbp
  40f24f:	je     40f253 <isspace@plt+0xb943>
  40f251:	mov    edx,esi
  40f253:	cmp    rcx,rdi
  40f256:	je     40f265 <isspace@plt+0xb955>
  40f258:	add    rcx,0x10
  40f25c:	mov    esi,edx
  40f25e:	test   dl,0x1
  40f261:	je     40f247 <isspace@plt+0xb937>
  40f263:	jmp    40f26a <isspace@plt+0xb95a>
  40f265:	test   dl,0x1
  40f268:	je     40f2ce <isspace@plt+0xb9be>
  40f26a:	mov    rcx,QWORD PTR [rbp+0x28]
  40f26e:	add    rcx,QWORD PTR [rbp+0x30]
  40f272:	mov    rdx,QWORD PTR [rax+0x10]
  40f276:	add    rdx,QWORD PTR [rax+0x8]
  40f27a:	cmp    rcx,rdx
  40f27d:	jne    40f2ce <isspace@plt+0xb9be>
  40f27f:	mov    rdi,r13
  40f282:	call   403f90 <isspace@plt+0x680>
  40f287:	lea    rsi,[rax-0x1]
  40f28b:	mov    rdi,r13
  40f28e:	call   403c60 <isspace@plt+0x350>
  40f293:	mov    rsi,QWORD PTR [rbp+0x28]
  40f297:	add    rsi,r15
  40f29a:	sub    rsi,QWORD PTR [rax+0x10]
  40f29e:	mov    rdi,rax
  40f2a1:	mov    rdx,r12
  40f2a4:	mov    rcx,r14
  40f2a7:	call   411930 <isspace@plt+0xe020>
  40f2ac:	test   al,al
  40f2ae:	je     40f2ce <isspace@plt+0xb9be>
  40f2b0:	add    QWORD PTR [rbp+0x30],r14
  40f2b4:	mov    rax,QWORD PTR [r13+0xa8]
  40f2bb:	mov    rax,QWORD PTR [rax]
  40f2be:	add    QWORD PTR [rax+0x28],r14
  40f2c2:	add    QWORD PTR [r13+0xc0],r14
  40f2c9:	jmp    40f5b9 <isspace@plt+0xbca9>
  40f2ce:	mov    rdi,r13
  40f2d1:	mov    rsi,rbx
  40f2d4:	call   40f5f0 <isspace@plt+0xbce0>
  40f2d9:	test   rax,rax
  40f2dc:	je     40f575 <isspace@plt+0xbc65>
  40f2e2:	mov    QWORD PTR [rsp],rax
  40f2e6:	mov    rdi,r13
  40f2e9:	call   403f90 <isspace@plt+0x680>
  40f2ee:	lea    rsi,[rax-0x1]
  40f2f2:	mov    rdi,r13
  40f2f5:	call   403c60 <isspace@plt+0x350>
  40f2fa:	test   rax,rax
  40f2fd:	je     40f311 <isspace@plt+0xba01>
  40f2ff:	mov    rbx,rax
  40f302:	mov    rdi,rax
  40f305:	mov    rsi,r14
  40f308:	call   411890 <isspace@plt+0xdf80>
  40f30d:	test   al,al
  40f30f:	jne    40f338 <isspace@plt+0xba28>
  40f311:	mov    rdi,r14
  40f314:	call   411560 <isspace@plt+0xdc50>
  40f319:	test   rax,rax
  40f31c:	je     40f575 <isspace@plt+0xbc65>
  40f322:	mov    rbx,rax
  40f325:	mov    rdi,r13
  40f328:	mov    rsi,rax
  40f32b:	call   403e40 <isspace@plt+0x530>
  40f330:	test   al,al
  40f332:	je     40f3d6 <isspace@plt+0xbac6>
  40f338:	mov    rdi,rbx
  40f33b:	mov    rsi,r12
  40f33e:	mov    rdx,r14
  40f341:	call   4118d0 <isspace@plt+0xdfc0>
  40f346:	test   rax,rax
  40f349:	je     40f575 <isspace@plt+0xbc65>
  40f34f:	mov    QWORD PTR [rsp+0x8],rax
  40f354:	mov    r12,QWORD PTR [rbp+0x30]
  40f358:	mov    edi,0x1
  40f35d:	mov    esi,0x38
  40f362:	call   403470 <calloc@plt>
  40f367:	test   rax,rax
  40f36a:	je     40f3e5 <isspace@plt+0xbad5>
  40f36c:	mov    rbx,rax
  40f36f:	mov    QWORD PTR [rax],r13
  40f372:	mov    rax,QWORD PTR [r13+0x20]
  40f376:	mov    QWORD PTR [rbx+0x20],rax
  40f37a:	test   rax,rax
  40f37d:	je     40f383 <isspace@plt+0xba73>
  40f37f:	mov    QWORD PTR [rax+0x18],rbx
  40f383:	mov    QWORD PTR [r13+0x20],rbx
  40f387:	cmp    r15,r12
  40f38a:	jne    40f3ec <isspace@plt+0xbadc>
  40f38c:	test   rbx,rbx
  40f38f:	je     40f575 <isspace@plt+0xbc65>
  40f395:	mov    rax,QWORD PTR [rbp+0x10]
  40f399:	mov    QWORD PTR [rbx+0x8],rbp
  40f39d:	mov    QWORD PTR [rbx+0x10],rax
  40f3a1:	mov    rax,QWORD PTR [rsp+0x8]
  40f3a6:	mov    QWORD PTR [rbx+0x28],rax
  40f3aa:	mov    QWORD PTR [rbx+0x30],r14
  40f3ae:	mov    rax,QWORD PTR [rsp]
  40f3b2:	mov    QWORD PTR [rax+0x18],rbx
  40f3b6:	mov    QWORD PTR [rax+0x20],rbx
  40f3ba:	mov    QWORD PTR [rax+0x28],r14
  40f3be:	vpxor  xmm0,xmm0,xmm0
  40f3c2:	vmovdqu XMMWORD PTR [rax],xmm0
  40f3c6:	mov    QWORD PTR [rax+0x10],0x0
  40f3ce:	mov    r12,rbx
  40f3d1:	jmp    40f505 <isspace@plt+0xbbf5>
  40f3d6:	mov    rdi,rbx
  40f3d9:	call   411700 <isspace@plt+0xddf0>
  40f3de:	xor    ecx,ecx
  40f3e0:	jmp    40f5bb <isspace@plt+0xbcab>
  40f3e5:	xor    ebx,ebx
  40f3e7:	cmp    r15,r12
  40f3ea:	je     40f38c <isspace@plt+0xba7c>
  40f3ec:	mov    edi,0x1
  40f3f1:	mov    esi,0x38
  40f3f6:	call   403470 <calloc@plt>
  40f3fb:	test   rax,rax
  40f3fe:	je     40f41e <isspace@plt+0xbb0e>
  40f400:	mov    r12,rax
  40f403:	mov    QWORD PTR [rax],r13
  40f406:	mov    rax,QWORD PTR [r13+0x20]
  40f40a:	mov    QWORD PTR [r12+0x20],rax
  40f40f:	test   rax,rax
  40f412:	je     40f418 <isspace@plt+0xbb08>
  40f414:	mov    QWORD PTR [rax+0x18],r12
  40f418:	mov    QWORD PTR [r13+0x20],r12
  40f41c:	jmp    40f421 <isspace@plt+0xbb11>
  40f41e:	xor    r12d,r12d
  40f421:	mov    edi,0x1
  40f426:	mov    esi,0x38
  40f42b:	call   403470 <calloc@plt>
  40f430:	test   rax,rax
  40f433:	je     40f575 <isspace@plt+0xbc65>
  40f439:	mov    QWORD PTR [rax],r13
  40f43c:	mov    rcx,QWORD PTR [r13+0x20]
  40f440:	mov    QWORD PTR [rax+0x20],rcx
  40f444:	test   rcx,rcx
  40f447:	je     40f44d <isspace@plt+0xbb3d>
  40f449:	mov    QWORD PTR [rcx+0x18],rax
  40f44d:	mov    QWORD PTR [r13+0x20],rax
  40f451:	xor    ecx,ecx
  40f453:	test   rbx,rbx
  40f456:	je     40f5bb <isspace@plt+0xbcab>
  40f45c:	test   r12,r12
  40f45f:	je     40f5bb <isspace@plt+0xbcab>
  40f465:	mov    rcx,QWORD PTR [rbp+0x8]
  40f469:	mov    rdx,QWORD PTR [rbp+0x28]
  40f46d:	mov    QWORD PTR [rbx+0x8],rcx
  40f471:	mov    QWORD PTR [rbx+0x10],r12
  40f475:	mov    QWORD PTR [rbx+0x28],rdx
  40f479:	mov    QWORD PTR [rbx+0x30],r15
  40f47d:	mov    QWORD PTR [r12+0x8],rbx
  40f482:	mov    QWORD PTR [r12+0x10],rax
  40f487:	mov    rcx,QWORD PTR [rsp+0x8]
  40f48c:	mov    QWORD PTR [r12+0x28],rcx
  40f491:	mov    QWORD PTR [r12+0x30],r14
  40f496:	mov    rcx,QWORD PTR [rbp+0x28]
  40f49a:	add    rcx,r15
  40f49d:	mov    rdx,QWORD PTR [rbp+0x10]
  40f4a1:	mov    rsi,QWORD PTR [rbp+0x30]
  40f4a5:	sub    rsi,r15
  40f4a8:	mov    QWORD PTR [rax+0x8],r12
  40f4ac:	mov    QWORD PTR [rax+0x10],rdx
  40f4b0:	mov    QWORD PTR [rax+0x28],rcx
  40f4b4:	mov    QWORD PTR [rax+0x30],rsi
  40f4b8:	mov    rcx,QWORD PTR [rsp]
  40f4bc:	mov    QWORD PTR [rcx+0x18],rbx
  40f4c0:	mov    QWORD PTR [rcx+0x20],rax
  40f4c4:	cmp    rbx,rax
  40f4c7:	je     40f4db <isspace@plt+0xbbcb>
  40f4c9:	mov    rbx,QWORD PTR [rbx+0x10]
  40f4cd:	test   rbx,rbx
  40f4d0:	je     40f4db <isspace@plt+0xbbcb>
  40f4d2:	add    r15,QWORD PTR [rbx+0x30]
  40f4d6:	cmp    rbx,rax
  40f4d9:	jne    40f4c9 <isspace@plt+0xbbb9>
  40f4db:	mov    rdx,QWORD PTR [rsp]
  40f4df:	mov    QWORD PTR [rdx+0x28],r15
  40f4e3:	mov    QWORD PTR [rdx],rbp
  40f4e6:	mov    QWORD PTR [rdx+0x8],rbp
  40f4ea:	xor    eax,eax
  40f4ec:	mov    rcx,rbp
  40f4ef:	add    rax,QWORD PTR [rcx+0x30]
  40f4f3:	cmp    rcx,rbp
  40f4f6:	je     40f501 <isspace@plt+0xbbf1>
  40f4f8:	mov    rcx,QWORD PTR [rcx+0x10]
  40f4fc:	test   rcx,rcx
  40f4ff:	jne    40f4ef <isspace@plt+0xbbdf>
  40f501:	mov    QWORD PTR [rdx+0x10],rax
  40f505:	mov    rdi,r13
  40f508:	call   403f90 <isspace@plt+0x680>
  40f50d:	lea    rsi,[rax-0x1]
  40f511:	mov    rdi,r13
  40f514:	call   403c60 <isspace@plt+0x350>
  40f519:	test   rax,rax
  40f51c:	je     40f53e <isspace@plt+0xbc2e>
  40f51e:	mov    rcx,QWORD PTR [r12+0x28]
  40f523:	mov    rdx,QWORD PTR [rax+0x10]
  40f527:	cmp    rcx,rdx
  40f52a:	jb     40f53e <isspace@plt+0xbc2e>
  40f52c:	add    rcx,QWORD PTR [r12+0x30]
  40f531:	add    rdx,QWORD PTR [rax+0x8]
  40f535:	cmp    rcx,rdx
  40f538:	jne    40f53e <isspace@plt+0xbc2e>
  40f53a:	mov    QWORD PTR [r13+0x28],r12
  40f53e:	mov    rdi,QWORD PTR [rsp]
  40f542:	mov    rax,QWORD PTR [rdi+0x10]
  40f546:	mov    rcx,QWORD PTR [rdi+0x28]
  40f54a:	test   rax,rax
  40f54d:	je     40f579 <isspace@plt+0xbc69>
  40f54f:	test   rcx,rcx
  40f552:	je     40f594 <isspace@plt+0xbc84>
  40f554:	mov    rdx,QWORD PTR [rdi]
  40f557:	mov    rsi,QWORD PTR [rdi+0x18]
  40f55b:	mov    rdx,QWORD PTR [rdx+0x8]
  40f55f:	mov    QWORD PTR [rdx+0x10],rsi
  40f563:	mov    rdx,QWORD PTR [rdi+0x8]
  40f567:	mov    rsi,QWORD PTR [rdi+0x20]
  40f56b:	mov    rdx,QWORD PTR [rdx+0x10]
  40f56f:	mov    QWORD PTR [rdx+0x8],rsi
  40f573:	jmp    40f5af <isspace@plt+0xbc9f>
  40f575:	xor    ecx,ecx
  40f577:	jmp    40f5bb <isspace@plt+0xbcab>
  40f579:	test   rcx,rcx
  40f57c:	je     40f5b9 <isspace@plt+0xbca9>
  40f57e:	mov    rdx,QWORD PTR [rdi+0x18]
  40f582:	mov    rsi,QWORD PTR [rdx+0x8]
  40f586:	mov    QWORD PTR [rsi+0x10],rdx
  40f58a:	mov    rdx,QWORD PTR [rdi+0x20]
  40f58e:	mov    rsi,QWORD PTR [rdx+0x10]
  40f592:	jmp    40f5ab <isspace@plt+0xbc9b>
  40f594:	mov    rdx,QWORD PTR [rdi]
  40f597:	mov    rsi,QWORD PTR [rdi+0x8]
  40f59b:	mov    rdi,QWORD PTR [rsi+0x10]
  40f59f:	mov    rdx,QWORD PTR [rdx+0x8]
  40f5a3:	mov    QWORD PTR [rdx+0x10],rdi
  40f5a7:	mov    rsi,QWORD PTR [rsi+0x10]
  40f5ab:	mov    QWORD PTR [rsi+0x8],rdx
  40f5af:	sub    rcx,rax
  40f5b2:	add    QWORD PTR [r13+0xc0],rcx
  40f5b9:	mov    cl,0x1
  40f5bb:	mov    rax,QWORD PTR fs:0x28
  40f5c4:	cmp    rax,QWORD PTR [rsp+0x10]
  40f5c9:	jne    40f5dc <isspace@plt+0xbccc>
  40f5cb:	mov    eax,ecx
  40f5cd:	add    rsp,0x18
  40f5d1:	pop    rbx
  40f5d2:	pop    r12
  40f5d4:	pop    r13
  40f5d6:	pop    r14
  40f5d8:	pop    r15
  40f5da:	pop    rbp
  40f5db:	ret    
  40f5dc:	call   403280 <__stack_chk_fail@plt>
  40f5e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f5eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f5f0:	push   r15
  40f5f2:	push   r14
  40f5f4:	push   rbx
  40f5f5:	sub    rsp,0x10
  40f5f9:	mov    r14,rsi
  40f5fc:	mov    rax,QWORD PTR fs:0x28
  40f605:	mov    QWORD PTR [rsp+0x8],rax
  40f60a:	mov    rbx,QWORD PTR [rdi+0xa8]
  40f611:	test   rbx,rbx
  40f614:	jne    40f68b <isspace@plt+0xbd7b>
  40f616:	mov    r15,rdi
  40f619:	mov    edi,0x1
  40f61e:	mov    esi,0x38
  40f623:	call   403470 <calloc@plt>
  40f628:	test   rax,rax
  40f62b:	je     40f6b8 <isspace@plt+0xbda8>
  40f631:	mov    rbx,rax
  40f634:	xor    edi,edi
  40f636:	call   403520 <time@plt>
  40f63b:	mov    QWORD PTR [rbx+0x28],rax
  40f63f:	mov    QWORD PTR [r15+0xa8],rbx
  40f646:	mov    rax,QWORD PTR [r15+0xb0]
  40f64d:	test   rax,rax
  40f650:	je     40f664 <isspace@plt+0xbd54>
  40f652:	mov    rcx,QWORD PTR [rax+0x30]
  40f656:	add    rcx,0x1
  40f65a:	mov    QWORD PTR [rbx+0x30],rcx
  40f65e:	mov    QWORD PTR [rax+0x20],rbx
  40f662:	jmp    40f66c <isspace@plt+0xbd5c>
  40f664:	mov    QWORD PTR [rbx+0x30],0x0
  40f66c:	mov    QWORD PTR [rbx+0x18],rax
  40f670:	mov    rax,QWORD PTR [r15+0xa0]
  40f677:	test   rax,rax
  40f67a:	je     40f684 <isspace@plt+0xbd74>
  40f67c:	mov    QWORD PTR [rbx+0x10],rax
  40f680:	mov    QWORD PTR [rax+0x8],rbx
  40f684:	mov    QWORD PTR [r15+0xa0],rbx
  40f68b:	mov    edi,0x1
  40f690:	mov    esi,0x48
  40f695:	call   403470 <calloc@plt>
  40f69a:	test   rax,rax
  40f69d:	je     40f6b8 <isspace@plt+0xbda8>
  40f69f:	mov    QWORD PTR [rax+0x30],r14
  40f6a3:	mov    rcx,QWORD PTR [rbx]
  40f6a6:	mov    QWORD PTR [rax+0x38],rcx
  40f6aa:	test   rcx,rcx
  40f6ad:	je     40f6b3 <isspace@plt+0xbda3>
  40f6af:	mov    QWORD PTR [rcx+0x40],rax
  40f6b3:	mov    QWORD PTR [rbx],rax
  40f6b6:	jmp    40f6ba <isspace@plt+0xbdaa>
  40f6b8:	xor    eax,eax
  40f6ba:	mov    rcx,QWORD PTR fs:0x28
  40f6c3:	cmp    rcx,QWORD PTR [rsp+0x8]
  40f6c8:	jne    40f6d4 <isspace@plt+0xbdc4>
  40f6ca:	add    rsp,0x10
  40f6ce:	pop    rbx
  40f6cf:	pop    r14
  40f6d1:	pop    r15
  40f6d3:	ret    
  40f6d4:	call   403280 <__stack_chk_fail@plt>
  40f6d9:	nop    DWORD PTR [rax+0x0]
  40f6e0:	push   rax
  40f6e1:	mov    rax,QWORD PTR fs:0x28
  40f6ea:	mov    QWORD PTR [rsp],rax
  40f6ee:	mov    rax,QWORD PTR [rdi+0xa8]
  40f6f5:	test   rax,rax
  40f6f8:	je     40f701 <isspace@plt+0xbdf1>
  40f6fa:	mov    QWORD PTR [rdi+0xb0],rax
  40f701:	mov    QWORD PTR [rdi+0xa8],0x0
  40f70c:	mov    QWORD PTR [rdi+0x28],0x0
  40f714:	mov    rax,QWORD PTR [rdi+0xa0]
  40f71b:	mov    r8,QWORD PTR [rax+0x10]
  40f71f:	test   r8,r8
  40f722:	je     40f7d9 <isspace@plt+0xbec9>
  40f728:	mov    rdx,QWORD PTR [rax]
  40f72b:	test   rdx,rdx
  40f72e:	je     40f7e2 <isspace@plt+0xbed2>
  40f734:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f73e:	xchg   ax,ax
  40f740:	mov    rax,rdx
  40f743:	mov    rdx,QWORD PTR [rdx+0x10]
  40f747:	mov    rsi,QWORD PTR [rax+0x28]
  40f74b:	test   rsi,rsi
  40f74e:	je     40f780 <isspace@plt+0xbe70>
  40f750:	test   rdx,rdx
  40f753:	je     40f7a0 <isspace@plt+0xbe90>
  40f755:	mov    r9,QWORD PTR [rax]
  40f758:	mov    rcx,QWORD PTR [rax+0x18]
  40f75c:	mov    rcx,QWORD PTR [rcx+0x8]
  40f760:	mov    QWORD PTR [rcx+0x10],r9
  40f764:	mov    r9,QWORD PTR [rax+0x8]
  40f768:	mov    rcx,QWORD PTR [rax+0x20]
  40f76c:	mov    rcx,QWORD PTR [rcx+0x10]
  40f770:	jmp    40f7b8 <isspace@plt+0xbea8>
  40f772:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f77c:	nop    DWORD PTR [rax+0x0]
  40f780:	test   rdx,rdx
  40f783:	je     40f7c6 <isspace@plt+0xbeb6>
  40f785:	mov    r9,QWORD PTR [rax]
  40f788:	mov    rcx,QWORD PTR [r9+0x8]
  40f78c:	mov    QWORD PTR [rcx+0x10],r9
  40f790:	mov    r9,QWORD PTR [rax+0x8]
  40f794:	mov    rcx,QWORD PTR [r9+0x10]
  40f798:	jmp    40f7b8 <isspace@plt+0xbea8>
  40f79a:	nop    WORD PTR [rax+rax*1+0x0]
  40f7a0:	mov    r9,QWORD PTR [rax+0x18]
  40f7a4:	mov    r11,QWORD PTR [rax+0x20]
  40f7a8:	mov    r10,QWORD PTR [r11+0x10]
  40f7ac:	mov    r9,QWORD PTR [r9+0x8]
  40f7b0:	mov    QWORD PTR [r9+0x10],r10
  40f7b4:	mov    rcx,QWORD PTR [r11+0x10]
  40f7b8:	mov    QWORD PTR [rcx+0x8],r9
  40f7bc:	sub    rdx,rsi
  40f7bf:	add    QWORD PTR [rdi+0xc0],rdx
  40f7c6:	mov    rdx,QWORD PTR [rax+0x38]
  40f7ca:	test   rdx,rdx
  40f7cd:	jne    40f740 <isspace@plt+0xbe30>
  40f7d3:	mov    rax,QWORD PTR [rax+0x30]
  40f7d7:	jmp    40f7e9 <isspace@plt+0xbed9>
  40f7d9:	mov    rax,0xffffffffffffffff
  40f7e0:	jmp    40f807 <isspace@plt+0xbef7>
  40f7e2:	mov    rax,0xffffffffffffffff
  40f7e9:	mov    QWORD PTR [rdi+0xa0],r8
  40f7f0:	mov    ecx,0x1
  40f7f5:	vmovq  xmm0,rcx
  40f7fa:	vpslldq xmm0,xmm0,0x8
  40f7ff:	vmovdqu XMMWORD PTR [rdi+0x158],xmm0
  40f807:	mov    rcx,QWORD PTR fs:0x28
  40f810:	cmp    rcx,QWORD PTR [rsp]
  40f814:	jne    40f818 <isspace@plt+0xbf08>
  40f816:	pop    rcx
  40f817:	ret    
  40f818:	call   403280 <__stack_chk_fail@plt>
  40f81d:	nop    DWORD PTR [rax]
  40f820:	push   rax
  40f821:	mov    rax,QWORD PTR fs:0x28
  40f82a:	mov    QWORD PTR [rsp],rax
  40f82e:	mov    rax,QWORD PTR [rdi+0xa8]
  40f835:	test   rax,rax
  40f838:	je     40f841 <isspace@plt+0xbf31>
  40f83a:	mov    QWORD PTR [rdi+0xb0],rax
  40f841:	mov    QWORD PTR [rdi+0xa8],0x0
  40f84c:	mov    QWORD PTR [rdi+0x28],0x0
  40f854:	mov    rax,QWORD PTR fs:0x28
  40f85d:	cmp    rax,QWORD PTR [rsp]
  40f861:	jne    40f867 <isspace@plt+0xbf57>
  40f863:	mov    al,0x1
  40f865:	pop    rcx
  40f866:	ret    
  40f867:	call   403280 <__stack_chk_fail@plt>
  40f86c:	nop    DWORD PTR [rax+0x0]
  40f870:	push   rax
  40f871:	mov    rax,QWORD PTR fs:0x28
  40f87a:	mov    QWORD PTR [rsp],rax
  40f87e:	mov    rax,QWORD PTR [rdi+0xa8]
  40f885:	test   rax,rax
  40f888:	je     40f891 <isspace@plt+0xbf81>
  40f88a:	mov    QWORD PTR [rdi+0xb0],rax
  40f891:	mov    QWORD PTR [rdi+0xa8],0x0
  40f89c:	mov    QWORD PTR [rdi+0x28],0x0
  40f8a4:	mov    rax,QWORD PTR [rdi+0xa0]
  40f8ab:	mov    r8,QWORD PTR [rax+0x8]
  40f8af:	test   r8,r8
  40f8b2:	je     40f985 <isspace@plt+0xc075>
  40f8b8:	mov    rax,QWORD PTR [r8]
  40f8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f8c0:	mov    rcx,rax
  40f8c3:	mov    rax,QWORD PTR [rax+0x38]
  40f8c7:	test   rax,rax
  40f8ca:	jne    40f8c0 <isspace@plt+0xbfb0>
  40f8cc:	test   rcx,rcx
  40f8cf:	je     40f98e <isspace@plt+0xc07e>
  40f8d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f8df:	nop
  40f8e0:	mov    rdx,rcx
  40f8e3:	mov    rsi,QWORD PTR [rcx+0x10]
  40f8e7:	mov    rax,QWORD PTR [rcx+0x28]
  40f8eb:	test   rsi,rsi
  40f8ee:	je     40f920 <isspace@plt+0xc010>
  40f8f0:	test   rax,rax
  40f8f3:	je     40f940 <isspace@plt+0xc030>
  40f8f5:	mov    rcx,QWORD PTR [rdx]
  40f8f8:	mov    r9,QWORD PTR [rdx+0x18]
  40f8fc:	mov    rcx,QWORD PTR [rcx+0x8]
  40f900:	mov    QWORD PTR [rcx+0x10],r9
  40f904:	mov    rcx,QWORD PTR [rdx+0x8]
  40f908:	mov    r9,QWORD PTR [rdx+0x20]
  40f90c:	mov    rcx,QWORD PTR [rcx+0x10]
  40f910:	jmp    40f957 <isspace@plt+0xc047>
  40f912:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f91c:	nop    DWORD PTR [rax+0x0]
  40f920:	test   rax,rax
  40f923:	je     40f968 <isspace@plt+0xc058>
  40f925:	mov    r9,QWORD PTR [rdx+0x18]
  40f929:	mov    rcx,QWORD PTR [r9+0x8]
  40f92d:	mov    QWORD PTR [rcx+0x10],r9
  40f931:	mov    r9,QWORD PTR [rdx+0x20]
  40f935:	mov    rcx,QWORD PTR [r9+0x10]
  40f939:	jmp    40f957 <isspace@plt+0xc047>
  40f93b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f940:	mov    r9,QWORD PTR [rdx]
  40f943:	mov    r11,QWORD PTR [rdx+0x8]
  40f947:	mov    r10,QWORD PTR [r11+0x10]
  40f94b:	mov    r9,QWORD PTR [r9+0x8]
  40f94f:	mov    QWORD PTR [r9+0x10],r10
  40f953:	mov    rcx,QWORD PTR [r11+0x10]
  40f957:	mov    QWORD PTR [rcx+0x8],r9
  40f95b:	mov    rcx,rax
  40f95e:	sub    rcx,rsi
  40f961:	add    QWORD PTR [rdi+0xc0],rcx
  40f968:	mov    rcx,QWORD PTR [rdx+0x40]
  40f96c:	test   rcx,rcx
  40f96f:	jne    40f8e0 <isspace@plt+0xbfd0>
  40f975:	cmp    rax,rsi
  40f978:	cmovbe rax,rsi
  40f97c:	sub    rax,rsi
  40f97f:	add    rax,QWORD PTR [rdx+0x30]
  40f983:	jmp    40f995 <isspace@plt+0xc085>
  40f985:	mov    rax,0xffffffffffffffff
  40f98c:	jmp    40f9b3 <isspace@plt+0xc0a3>
  40f98e:	mov    rax,0xffffffffffffffff
  40f995:	mov    QWORD PTR [rdi+0xa0],r8
  40f99c:	mov    ecx,0x1
  40f9a1:	vmovq  xmm0,rcx
  40f9a6:	vpslldq xmm0,xmm0,0x8
  40f9ab:	vmovdqu XMMWORD PTR [rdi+0x158],xmm0
  40f9b3:	mov    rcx,QWORD PTR fs:0x28
  40f9bc:	cmp    rcx,QWORD PTR [rsp]
  40f9c0:	jne    40f9c4 <isspace@plt+0xc0b4>
  40f9c2:	pop    rcx
  40f9c3:	ret    
  40f9c4:	call   403280 <__stack_chk_fail@plt>
  40f9c9:	nop    DWORD PTR [rax+0x0]
  40f9d0:	push   rax
  40f9d1:	mov    rax,QWORD PTR fs:0x28
  40f9da:	mov    QWORD PTR [rsp],rax
  40f9de:	mov    rax,QWORD PTR [rdi+0xa0]
  40f9e5:	mov    rsi,QWORD PTR [rax+0x18]
  40f9e9:	call   40fa10 <isspace@plt+0xc100>
  40f9ee:	mov    rcx,QWORD PTR fs:0x28
  40f9f7:	cmp    rcx,QWORD PTR [rsp]
  40f9fb:	jne    40f9ff <isspace@plt+0xc0ef>
  40f9fd:	pop    rcx
  40f9fe:	ret    
  40f9ff:	call   403280 <__stack_chk_fail@plt>
  40fa04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fa0e:	xchg   ax,ax
  40fa10:	push   r15
  40fa12:	push   r14
  40fa14:	push   r12
  40fa16:	push   rbx
  40fa17:	push   rax
  40fa18:	mov    rax,QWORD PTR fs:0x28
  40fa21:	mov    QWORD PTR [rsp],rax
  40fa25:	mov    rax,0xffffffffffffffff
  40fa2c:	test   rsi,rsi
  40fa2f:	je     40fb21 <isspace@plt+0xc211>
  40fa35:	mov    r14,rsi
  40fa38:	mov    r15,rdi
  40fa3b:	mov    rdx,QWORD PTR [rsi+0x10]
  40fa3f:	test   rdx,rdx
  40fa42:	je     40fa70 <isspace@plt+0xc160>
  40fa44:	xor    ecx,ecx
  40fa46:	mov    rdi,r14
  40fa49:	nop    DWORD PTR [rax+0x0]
  40fa50:	mov    rsi,rdx
  40fa53:	cmp    QWORD PTR [rdx+0x8],rdi
  40fa57:	je     40fa5f <isspace@plt+0xc14f>
  40fa59:	mov    QWORD PTR [rsi+0x8],rdi
  40fa5d:	mov    cl,0x1
  40fa5f:	mov    rdx,QWORD PTR [rsi+0x10]
  40fa63:	mov    rdi,rsi
  40fa66:	test   rdx,rdx
  40fa69:	jne    40fa50 <isspace@plt+0xc140>
  40fa6b:	test   cl,0x1
  40fa6e:	jne    40fa90 <isspace@plt+0xc180>
  40fa70:	mov    rdx,QWORD PTR [r14+0x30]
  40fa74:	mov    rcx,QWORD PTR [r15+0xa0]
  40fa7b:	mov    rsi,QWORD PTR [rcx+0x30]
  40fa7f:	cmp    rdx,rsi
  40fa82:	jne    40fab3 <isspace@plt+0xc1a3>
  40fa84:	mov    rax,QWORD PTR [r15+0x158]
  40fa8b:	jmp    40fb21 <isspace@plt+0xc211>
  40fa90:	mov    rbx,QWORD PTR [r15+0xa0]
  40fa97:	mov    rax,QWORD PTR [rbx+0x10]
  40fa9b:	test   rax,rax
  40fa9e:	je     40faf3 <isspace@plt+0xc1e3>
  40faa0:	mov    r12,QWORD PTR [rax+0x8]
  40faa4:	mov    rdi,r15
  40faa7:	call   40f6e0 <isspace@plt+0xbdd0>
  40faac:	cmp    r12,rbx
  40faaf:	je     40fa90 <isspace@plt+0xc180>
  40fab1:	jmp    40fb18 <isspace@plt+0xc208>
  40fab3:	jbe    40fad3 <isspace@plt+0xc1c3>
  40fab5:	cmp    rcx,r14
  40fab8:	je     40fb21 <isspace@plt+0xc211>
  40faba:	nop    WORD PTR [rax+rax*1+0x0]
  40fac0:	mov    rdi,r15
  40fac3:	call   40f870 <isspace@plt+0xbf60>
  40fac8:	cmp    QWORD PTR [r15+0xa0],r14
  40facf:	jne    40fac0 <isspace@plt+0xc1b0>
  40fad1:	jmp    40fb21 <isspace@plt+0xc211>
  40fad3:	cmp    rdx,rsi
  40fad6:	jae    40fb21 <isspace@plt+0xc211>
  40fad8:	cmp    rcx,r14
  40fadb:	je     40fb21 <isspace@plt+0xc211>
  40fadd:	nop    DWORD PTR [rax]
  40fae0:	mov    rdi,r15
  40fae3:	call   40f6e0 <isspace@plt+0xbdd0>
  40fae8:	cmp    QWORD PTR [r15+0xa0],r14
  40faef:	jne    40fae0 <isspace@plt+0xc1d0>
  40faf1:	jmp    40fb21 <isspace@plt+0xc211>
  40faf3:	mov    rdi,r15
  40faf6:	call   40f6e0 <isspace@plt+0xbdd0>
  40fafb:	cmp    QWORD PTR [r15+0xa0],r14
  40fb02:	je     40fb21 <isspace@plt+0xc211>
  40fb04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb0e:	xchg   ax,ax
  40fb10:	mov    rdi,r15
  40fb13:	call   40f870 <isspace@plt+0xbf60>
  40fb18:	cmp    QWORD PTR [r15+0xa0],r14
  40fb1f:	jne    40fb10 <isspace@plt+0xc200>
  40fb21:	mov    rcx,QWORD PTR fs:0x28
  40fb2a:	cmp    rcx,QWORD PTR [rsp]
  40fb2e:	jne    40fb3c <isspace@plt+0xc22c>
  40fb30:	add    rsp,0x8
  40fb34:	pop    rbx
  40fb35:	pop    r12
  40fb37:	pop    r14
  40fb39:	pop    r15
  40fb3b:	ret    
  40fb3c:	call   403280 <__stack_chk_fail@plt>
  40fb41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fb50:	push   rax
  40fb51:	mov    rax,QWORD PTR fs:0x28
  40fb5a:	mov    QWORD PTR [rsp],rax
  40fb5e:	mov    rax,QWORD PTR [rdi+0xa0]
  40fb65:	mov    rsi,QWORD PTR [rax+0x20]
  40fb69:	call   40fa10 <isspace@plt+0xc100>
  40fb6e:	mov    rcx,QWORD PTR fs:0x28
  40fb77:	cmp    rcx,QWORD PTR [rsp]
  40fb7b:	jne    40fb7f <isspace@plt+0xc26f>
  40fb7d:	pop    rcx
  40fb7e:	ret    
  40fb7f:	call   403280 <__stack_chk_fail@plt>
  40fb84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb8e:	xchg   ax,ax
  40fb90:	push   rax
  40fb91:	mov    rax,QWORD PTR fs:0x28
  40fb9a:	mov    QWORD PTR [rsp],rax
  40fb9e:	mov    r8,QWORD PTR [rdi+0xa0]
  40fba5:	mov    rax,r8
  40fba8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fbb0:	mov    rcx,rax
  40fbb3:	mov    rdx,QWORD PTR [rax+0x28]
  40fbb7:	cmp    rdx,rsi
  40fbba:	jle    40fbc5 <isspace@plt+0xc2b5>
  40fbbc:	mov    rax,QWORD PTR [rcx+0x18]
  40fbc0:	test   rax,rax
  40fbc3:	jne    40fbb0 <isspace@plt+0xc2a0>
  40fbc5:	cmp    rdx,rsi
  40fbc8:	jge    40fbea <isspace@plt+0xc2da>
  40fbca:	nop    WORD PTR [rax+rax*1+0x0]
  40fbd0:	mov    rax,rcx
  40fbd3:	mov    rcx,QWORD PTR [rcx+0x20]
  40fbd7:	test   rcx,rcx
  40fbda:	je     40fbed <isspace@plt+0xc2dd>
  40fbdc:	mov    rdx,QWORD PTR [rcx+0x28]
  40fbe0:	mov    rax,rcx
  40fbe3:	cmp    rdx,rsi
  40fbe6:	jl     40fbd0 <isspace@plt+0xc2c0>
  40fbe8:	jmp    40fbed <isspace@plt+0xc2dd>
  40fbea:	mov    rax,rcx
  40fbed:	sub    rdx,rsi
  40fbf0:	mov    r10,rdx
  40fbf3:	neg    r10
  40fbf6:	cmovl  r10,rdx
  40fbfa:	mov    rdx,QWORD PTR [rax+0x18]
  40fbfe:	test   rdx,rdx
  40fc01:	je     40fc20 <isspace@plt+0xc310>
  40fc03:	cmp    rdx,r8
  40fc06:	je     40fc20 <isspace@plt+0xc310>
  40fc08:	mov    r9,QWORD PTR [rdx+0x28]
  40fc0c:	sub    r9,rsi
  40fc0f:	mov    rcx,r9
  40fc12:	neg    rcx
  40fc15:	cmovl  rcx,r9
  40fc19:	cmp    rcx,r10
  40fc1c:	cmovl  rax,rdx
  40fc20:	mov    rdx,QWORD PTR [rax+0x20]
  40fc24:	test   rdx,rdx
  40fc27:	je     40fc46 <isspace@plt+0xc336>
  40fc29:	cmp    rdx,r8
  40fc2c:	je     40fc46 <isspace@plt+0xc336>
  40fc2e:	mov    rcx,QWORD PTR [rdx+0x28]
  40fc32:	sub    rcx,rsi
  40fc35:	mov    rsi,rcx
  40fc38:	neg    rsi
  40fc3b:	cmovl  rsi,rcx
  40fc3f:	cmp    rsi,r10
  40fc42:	cmovl  rax,rdx
  40fc46:	mov    rsi,rax
  40fc49:	call   40fa10 <isspace@plt+0xc100>
  40fc4e:	mov    rcx,QWORD PTR fs:0x28
  40fc57:	cmp    rcx,QWORD PTR [rsp]
  40fc5b:	jne    40fc5f <isspace@plt+0xc34f>
  40fc5d:	pop    rcx
  40fc5e:	ret    
  40fc5f:	call   403280 <__stack_chk_fail@plt>
  40fc64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc6e:	xchg   ax,ax
  40fc70:	push   rax
  40fc71:	mov    rax,QWORD PTR fs:0x28
  40fc7a:	mov    QWORD PTR [rsp],rax
  40fc7e:	mov    rax,QWORD PTR [rdi+0xa0]
  40fc85:	mov    rax,QWORD PTR [rax+0x28]
  40fc89:	mov    rcx,QWORD PTR fs:0x28
  40fc92:	cmp    rcx,QWORD PTR [rsp]
  40fc96:	jne    40fc9a <isspace@plt+0xc38a>
  40fc98:	pop    rcx
  40fc99:	ret    
  40fc9a:	call   403280 <__stack_chk_fail@plt>
  40fc9f:	nop
  40fca0:	push   rbp
  40fca1:	push   r15
  40fca3:	push   r14
  40fca5:	push   r13
  40fca7:	push   r12
  40fca9:	push   rbx
  40fcaa:	push   rax
  40fcab:	mov    r15d,edx
  40fcae:	mov    rbp,rsi
  40fcb1:	mov    r12d,edi
  40fcb4:	mov    rax,QWORD PTR fs:0x28
  40fcbd:	mov    QWORD PTR [rsp],rax
  40fcc1:	mov    edi,0x1
  40fcc6:	mov    esi,0x168
  40fccb:	call   403470 <calloc@plt>
  40fcd0:	test   rax,rax
  40fcd3:	je     40fe42 <isspace@plt+0xc532>
  40fcd9:	mov    rbx,rax
  40fcdc:	mov    edi,0x1
  40fce1:	mov    esi,0x38
  40fce6:	call   403470 <calloc@plt>
  40fceb:	test   rax,rax
  40fcee:	je     40fe3a <isspace@plt+0xc52a>
  40fcf4:	mov    r14,rax
  40fcf7:	mov    QWORD PTR [rax],rbx
  40fcfa:	mov    QWORD PTR [rbx+0x20],rax
  40fcfe:	mov    rdi,rbx
  40fd01:	call   403a10 <isspace@plt+0x100>
  40fd06:	mov    eax,0x1
  40fd0b:	vmovq  xmm0,rax
  40fd10:	vpslldq xmm0,xmm0,0x8
  40fd15:	vmovdqu XMMWORD PTR [rbx+0x158],xmm0
  40fd1d:	test   rbp,rbp
  40fd20:	je     40fd94 <isspace@plt+0xc484>
  40fd22:	call   403130 <__errno_location@plt>
  40fd27:	mov    r13,rax
  40fd2a:	mov    DWORD PTR [rax],0x0
  40fd30:	mov    rcx,rbx
  40fd33:	add    rcx,0xc8
  40fd3a:	mov    edi,r12d
  40fd3d:	mov    rsi,rbp
  40fd40:	mov    edx,r15d
  40fd43:	call   411770 <isspace@plt+0xde60>
  40fd48:	test   rax,rax
  40fd4b:	je     40fd89 <isspace@plt+0xc479>
  40fd4d:	mov    rbp,rax
  40fd50:	mov    rdi,rbx
  40fd53:	mov    rsi,rax
  40fd56:	call   403e40 <isspace@plt+0x530>
  40fd5b:	test   al,al
  40fd5d:	je     40fe32 <isspace@plt+0xc522>
  40fd63:	vmovq  xmm0,rbx
  40fd68:	vpbroadcastq xmm0,xmm0
  40fd6d:	vpaddq xmm0,xmm0,XMMWORD PTR [rip+0x218db]        # 431650 <isspace@plt+0x2dd40>
  40fd75:	mov    rax,QWORD PTR [rbp+0x8]
  40fd79:	mov    rcx,QWORD PTR [rbp+0x10]
  40fd7d:	vmovdqu XMMWORD PTR [r14+0x8],xmm0
  40fd83:	mov    QWORD PTR [r14+0x28],rcx
  40fd87:	jmp    40fdb9 <isspace@plt+0xc4a9>
  40fd89:	cmp    DWORD PTR [r13+0x0],0x0
  40fd8e:	jne    40fe3a <isspace@plt+0xc52a>
  40fd94:	vmovq  xmm0,rbx
  40fd99:	vpbroadcastq xmm0,xmm0
  40fd9e:	vpaddq xmm0,xmm0,XMMWORD PTR [rip+0x218aa]        # 431650 <isspace@plt+0x2dd40>
  40fda6:	vmovdqu XMMWORD PTR [r14+0x8],xmm0
  40fdac:	lea    rax,[rip+0x218ad]        # 431660 <isspace@plt+0x2dd50>
  40fdb3:	mov    QWORD PTR [r14+0x28],rax
  40fdb7:	xor    eax,eax
  40fdb9:	mov    QWORD PTR [rbx+0x38],0x0
  40fdc1:	mov    QWORD PTR [rbx+0x40],r14
  40fdc5:	vpxor  xmm0,xmm0,xmm0
  40fdc9:	vmovdqu XMMWORD PTR [rbx+0x58],xmm0
  40fdce:	mov    QWORD PTR [r14+0x30],rax
  40fdd2:	mov    QWORD PTR [rbx+0x70],r14
  40fdd6:	mov    QWORD PTR [rbx+0x78],0x0
  40fdde:	vmovdqu XMMWORD PTR [rbx+0x90],xmm0
  40fde6:	mov    QWORD PTR [rbx+0xc0],rax
  40fded:	mov    rsi,0xffffffffffffffff
  40fdf4:	mov    rdi,rbx
  40fdf7:	call   40f5f0 <isspace@plt+0xbce0>
  40fdfc:	mov    rax,QWORD PTR [rbx+0xa8]
  40fe03:	test   rax,rax
  40fe06:	je     40fe0f <isspace@plt+0xc4ff>
  40fe08:	mov    QWORD PTR [rbx+0xb0],rax
  40fe0f:	mov    QWORD PTR [rbx+0xa8],0x0
  40fe1a:	mov    QWORD PTR [rbx+0x28],0x0
  40fe22:	mov    rax,QWORD PTR [rbx+0xa0]
  40fe29:	mov    QWORD PTR [rbx+0xb8],rax
  40fe30:	jmp    40fe44 <isspace@plt+0xc534>
  40fe32:	mov    rdi,rbp
  40fe35:	call   411700 <isspace@plt+0xddf0>
  40fe3a:	mov    rdi,rbx
  40fe3d:	call   40fe70 <isspace@plt+0xc560>
  40fe42:	xor    ebx,ebx
  40fe44:	mov    rax,QWORD PTR fs:0x28
  40fe4d:	cmp    rax,QWORD PTR [rsp]
  40fe51:	jne    40fe65 <isspace@plt+0xc555>
  40fe53:	mov    rax,rbx
  40fe56:	add    rsp,0x8
  40fe5a:	pop    rbx
  40fe5b:	pop    r12
  40fe5d:	pop    r13
  40fe5f:	pop    r14
  40fe61:	pop    r15
  40fe63:	pop    rbp
  40fe64:	ret    
  40fe65:	call   403280 <__stack_chk_fail@plt>
  40fe6a:	nop    WORD PTR [rax+rax*1+0x0]
  40fe70:	push   r15
  40fe72:	push   r14
  40fe74:	push   r13
  40fe76:	push   r12
  40fe78:	push   rbx
  40fe79:	sub    rsp,0x10
  40fe7d:	mov    rax,QWORD PTR fs:0x28
  40fe86:	mov    QWORD PTR [rsp+0x8],rax
  40fe8b:	test   rdi,rdi
  40fe8e:	je     41007c <isspace@plt+0xc76c>
  40fe94:	mov    r14,rdi
  40fe97:	mov    rax,QWORD PTR [rdi+0xa0]
  40fe9e:	xchg   ax,ax
  40fea0:	test   rax,rax
  40fea3:	je     40ffc6 <isspace@plt+0xc6b6>
  40fea9:	mov    r15,rax
  40feac:	mov    rax,QWORD PTR [rax+0x10]
  40feb0:	test   rax,rax
  40feb3:	jne    40fea0 <isspace@plt+0xc590>
  40feb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40febf:	nop
  40fec0:	mov    rbx,QWORD PTR [r15]
  40fec3:	mov    r12,QWORD PTR [r15+0x20]
  40fec7:	test   rbx,rbx
  40feca:	jne    40ff10 <isspace@plt+0xc600>
  40fecc:	jmp    40ffb2 <isspace@plt+0xc6a2>
  40fed1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fedb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fee0:	mov    QWORD PTR [rax+0x20],rcx
  40fee4:	cmp    QWORD PTR [rax+0x28],rdi
  40fee8:	jne    40ff99 <isspace@plt+0xc689>
  40feee:	mov    QWORD PTR [rax+0x28],0x0
  40fef6:	jmp    40ff99 <isspace@plt+0xc689>
  40fefb:	mov    QWORD PTR [rcx+0x20],rdx
  40feff:	cmp    QWORD PTR [rcx+0x28],rax
  40ff03:	jne    40ff53 <isspace@plt+0xc643>
  40ff05:	mov    QWORD PTR [rcx+0x28],0x0
  40ff0d:	jmp    40ff53 <isspace@plt+0xc643>
  40ff0f:	nop
  40ff10:	mov    r13,QWORD PTR [rbx+0x38]
  40ff14:	mov    rdi,QWORD PTR [rbx+0x18]
  40ff18:	mov    rax,QWORD PTR [rbx+0x20]
  40ff1c:	cmp    rdi,rax
  40ff1f:	je     40ff5f <isspace@plt+0xc64f>
  40ff21:	test   rax,rax
  40ff24:	je     40ff5f <isspace@plt+0xc64f>
  40ff26:	mov    rcx,QWORD PTR [rax+0x18]
  40ff2a:	test   rcx,rcx
  40ff2d:	je     40ff37 <isspace@plt+0xc627>
  40ff2f:	mov    rdx,QWORD PTR [rax+0x20]
  40ff33:	mov    QWORD PTR [rcx+0x20],rdx
  40ff37:	mov    rdx,QWORD PTR [rax+0x20]
  40ff3b:	test   rdx,rdx
  40ff3e:	je     40ff44 <isspace@plt+0xc634>
  40ff40:	mov    QWORD PTR [rdx+0x18],rcx
  40ff44:	mov    rcx,QWORD PTR [rax]
  40ff47:	cmp    QWORD PTR [rcx+0x20],rax
  40ff4b:	je     40fefb <isspace@plt+0xc5eb>
  40ff4d:	cmp    QWORD PTR [rcx+0x28],rax
  40ff51:	je     40ff05 <isspace@plt+0xc5f5>
  40ff53:	mov    rdi,rax
  40ff56:	call   4030d0 <free@plt>
  40ff5b:	mov    rdi,QWORD PTR [rbx+0x18]
  40ff5f:	test   rdi,rdi
  40ff62:	je     40ff9e <isspace@plt+0xc68e>
  40ff64:	mov    rax,QWORD PTR [rdi+0x18]
  40ff68:	test   rax,rax
  40ff6b:	je     40ff75 <isspace@plt+0xc665>
  40ff6d:	mov    rcx,QWORD PTR [rdi+0x20]
  40ff71:	mov    QWORD PTR [rax+0x20],rcx
  40ff75:	mov    rcx,QWORD PTR [rdi+0x20]
  40ff79:	test   rcx,rcx
  40ff7c:	je     40ff82 <isspace@plt+0xc672>
  40ff7e:	mov    QWORD PTR [rcx+0x18],rax
  40ff82:	mov    rax,QWORD PTR [rdi]
  40ff85:	cmp    QWORD PTR [rax+0x20],rdi
  40ff89:	je     40fee0 <isspace@plt+0xc5d0>
  40ff8f:	cmp    QWORD PTR [rax+0x28],rdi
  40ff93:	je     40feee <isspace@plt+0xc5de>
  40ff99:	call   4030d0 <free@plt>
  40ff9e:	mov    rdi,rbx
  40ffa1:	call   4030d0 <free@plt>
  40ffa6:	mov    rbx,r13
  40ffa9:	test   r13,r13
  40ffac:	jne    40ff10 <isspace@plt+0xc600>
  40ffb2:	mov    rdi,r15
  40ffb5:	call   4030d0 <free@plt>
  40ffba:	mov    r15,r12
  40ffbd:	test   r12,r12
  40ffc0:	jne    40fec0 <isspace@plt+0xc5b0>
  40ffc6:	mov    rdi,QWORD PTR [r14+0x20]
  40ffca:	test   rdi,rdi
  40ffcd:	jne    410000 <isspace@plt+0xc6f0>
  40ffcf:	jmp    41003d <isspace@plt+0xc72d>
  40ffd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ffdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ffe0:	mov    QWORD PTR [rcx+0x20],rax
  40ffe4:	cmp    QWORD PTR [rcx+0x28],rdi
  40ffe8:	jne    410030 <isspace@plt+0xc720>
  40ffea:	mov    QWORD PTR [rcx+0x28],0x0
  40fff2:	jmp    410030 <isspace@plt+0xc720>
  40fff4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fffe:	xchg   ax,ax
  410000:	mov    rcx,QWORD PTR [rdi+0x18]
  410004:	mov    rbx,QWORD PTR [rdi+0x20]
  410008:	mov    rax,rbx
  41000b:	test   rcx,rcx
  41000e:	je     410018 <isspace@plt+0xc708>
  410010:	mov    QWORD PTR [rcx+0x20],rbx
  410014:	mov    rax,QWORD PTR [rdi+0x20]
  410018:	test   rax,rax
  41001b:	je     410021 <isspace@plt+0xc711>
  41001d:	mov    QWORD PTR [rax+0x18],rcx
  410021:	mov    rcx,QWORD PTR [rdi]
  410024:	cmp    QWORD PTR [rcx+0x20],rdi
  410028:	je     40ffe0 <isspace@plt+0xc6d0>
  41002a:	cmp    QWORD PTR [rcx+0x28],rdi
  41002e:	je     40ffea <isspace@plt+0xc6da>
  410030:	call   4030d0 <free@plt>
  410035:	mov    rdi,rbx
  410038:	test   rbx,rbx
  41003b:	jne    410000 <isspace@plt+0xc6f0>
  41003d:	mov    rdi,r14
  410040:	call   403f90 <isspace@plt+0x680>
  410045:	test   rax,rax
  410048:	je     41006c <isspace@plt+0xc75c>
  41004a:	mov    r15,rax
  41004d:	xor    ebx,ebx
  41004f:	nop
  410050:	mov    rdi,r14
  410053:	mov    rsi,rbx
  410056:	call   403c60 <isspace@plt+0x350>
  41005b:	mov    rdi,rax
  41005e:	call   411700 <isspace@plt+0xddf0>
  410063:	add    rbx,0x1
  410067:	cmp    r15,rbx
  41006a:	jne    410050 <isspace@plt+0xc740>
  41006c:	mov    rdi,r14
  41006f:	call   403b50 <isspace@plt+0x240>
  410074:	mov    rdi,r14
  410077:	call   4030d0 <free@plt>
  41007c:	mov    rax,QWORD PTR fs:0x28
  410085:	cmp    rax,QWORD PTR [rsp+0x8]
  41008a:	jne    41009a <isspace@plt+0xc78a>
  41008c:	add    rsp,0x10
  410090:	pop    rbx
  410091:	pop    r12
  410093:	pop    r13
  410095:	pop    r14
  410097:	pop    r15
  410099:	ret    
  41009a:	call   403280 <__stack_chk_fail@plt>
  41009f:	nop
  4100a0:	push   rax
  4100a1:	mov    rax,QWORD PTR fs:0x28
  4100aa:	mov    QWORD PTR [rsp],rax
  4100ae:	vmovups ymm0,YMMWORD PTR [rsi+0x138]
  4100b6:	vmovups YMMWORD PTR [rdi+0x70],ymm0
  4100bb:	vmovups ymm0,YMMWORD PTR [rsi+0xc8]
  4100c3:	vmovups ymm1,YMMWORD PTR [rsi+0xe8]
  4100cb:	vmovups ymm2,YMMWORD PTR [rsi+0x108]
  4100d3:	vmovups ymm3,YMMWORD PTR [rsi+0x128]
  4100db:	vmovups YMMWORD PTR [rdi+0x60],ymm3
  4100e0:	vmovups YMMWORD PTR [rdi+0x40],ymm2
  4100e5:	vmovups YMMWORD PTR [rdi+0x20],ymm1
  4100ea:	vmovups YMMWORD PTR [rdi],ymm0
  4100ee:	mov    rax,QWORD PTR fs:0x28
  4100f7:	cmp    rax,QWORD PTR [rsp]
  4100fb:	jne    410105 <isspace@plt+0xc7f5>
  4100fd:	mov    rax,rdi
  410100:	pop    rcx
  410101:	vzeroupper 
  410104:	ret    
  410105:	vzeroupper 
  410108:	call   403280 <__stack_chk_fail@plt>
  41010d:	nop    DWORD PTR [rax]
  410110:	push   rax
  410111:	mov    rax,QWORD PTR fs:0x28
  41011a:	mov    QWORD PTR [rsp],rax
  41011e:	test   rsi,rsi
  410121:	je     410163 <isspace@plt+0xc853>
  410123:	vmovups ymm0,YMMWORD PTR [rsi+0x70]
  410128:	vmovups YMMWORD PTR [rdi+0x138],ymm0
  410130:	vmovups ymm0,YMMWORD PTR [rsi]
  410134:	vmovups ymm1,YMMWORD PTR [rsi+0x20]
  410139:	vmovups ymm2,YMMWORD PTR [rsi+0x40]
  41013e:	vmovups ymm3,YMMWORD PTR [rsi+0x60]
  410143:	vmovups YMMWORD PTR [rdi+0x128],ymm3
  41014b:	vmovups YMMWORD PTR [rdi+0x108],ymm2
  410153:	vmovups YMMWORD PTR [rdi+0xe8],ymm1
  41015b:	vmovups YMMWORD PTR [rdi+0xc8],ymm0
  410163:	mov    rcx,QWORD PTR [rdi+0xa0]
  41016a:	mov    rax,QWORD PTR [rdi+0xa8]
  410171:	mov    QWORD PTR [rdi+0xb8],rcx
  410178:	test   rax,rax
  41017b:	je     410184 <isspace@plt+0xc874>
  41017d:	mov    QWORD PTR [rdi+0xb0],rax
  410184:	mov    QWORD PTR [rdi+0xa8],0x0
  41018f:	mov    QWORD PTR [rdi+0x28],0x0
  410197:	mov    rax,QWORD PTR fs:0x28
  4101a0:	cmp    rax,QWORD PTR [rsp]
  4101a4:	jne    4101ab <isspace@plt+0xc89b>
  4101a6:	pop    rax
  4101a7:	vzeroupper 
  4101aa:	ret    
  4101ab:	vzeroupper 
  4101ae:	call   403280 <__stack_chk_fail@plt>
  4101b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4101bd:	nop    DWORD PTR [rax]
  4101c0:	push   rax
  4101c1:	mov    rax,QWORD PTR fs:0x28
  4101ca:	mov    QWORD PTR [rsp],rax
  4101ce:	xor    esi,esi
  4101d0:	call   403c60 <isspace@plt+0x350>
  4101d5:	test   rax,rax
  4101d8:	je     4101e0 <isspace@plt+0xc8d0>
  4101da:	cmp    DWORD PTR [rax+0x18],0x0
  4101de:	je     4101f3 <isspace@plt+0xc8e3>
  4101e0:	xor    eax,eax
  4101e2:	mov    rcx,QWORD PTR fs:0x28
  4101eb:	cmp    rcx,QWORD PTR [rsp]
  4101ef:	jne    4101fb <isspace@plt+0xc8eb>
  4101f1:	pop    rcx
  4101f2:	ret    
  4101f3:	cmp    QWORD PTR [rax],0x0
  4101f7:	jne    4101e2 <isspace@plt+0xc8d2>
  4101f9:	jmp    4101e0 <isspace@plt+0xc8d0>
  4101fb:	call   403280 <__stack_chk_fail@plt>
  410200:	push   rbp
  410201:	push   r15
  410203:	push   r14
  410205:	push   r13
  410207:	push   r12
  410209:	push   rbx
  41020a:	sub    rsp,0x28
  41020e:	mov    rax,QWORD PTR fs:0x28
  410217:	mov    QWORD PTR [rsp+0x20],rax
  41021c:	mov    r12b,0x1
  41021f:	test   rdx,rdx
  410222:	je     4105a5 <isspace@plt+0xcc95>
  410228:	mov    r13,rdx
  41022b:	mov    rbp,rsi
  41022e:	mov    rax,rsi
  410231:	not    rax
  410234:	cmp    rax,rdx
  410237:	jb     4105a2 <isspace@plt+0xcc92>
  41023d:	mov    r14,rdi
  410240:	mov    rax,r13
  410243:	add    rax,rbp
  410246:	cmp    rax,QWORD PTR [rdi+0xc0]
  41024d:	ja     4105a2 <isspace@plt+0xcc92>
  410253:	cmp    QWORD PTR [r14+0x158],rbp
  41025a:	jbe    410274 <isspace@plt+0xc964>
  41025c:	mov    eax,0x1
  410261:	vmovq  xmm0,rax
  410266:	vpslldq xmm0,xmm0,0x8
  41026b:	vmovdqu XMMWORD PTR [r14+0x158],xmm0
  410274:	mov    rcx,QWORD PTR [r14+0x40]
  410278:	test   rcx,rcx
  41027b:	je     4105a2 <isspace@plt+0xcc92>
  410281:	lea    rbx,[r14+0x30]
  410285:	xor    eax,eax
  410287:	nop    WORD PTR [rax+rax*1+0x0]
  410290:	mov    rdx,rcx
  410293:	mov    rsi,QWORD PTR [rbx+0x30]
  410297:	add    rsi,rax
  41029a:	cmp    rax,rbp
  41029d:	ja     4102a4 <isspace@plt+0xc994>
  41029f:	cmp    rsi,rbp
  4102a2:	jae    4102b8 <isspace@plt+0xc9a8>
  4102a4:	mov    rcx,QWORD PTR [rdx+0x10]
  4102a8:	mov    rbx,rdx
  4102ab:	mov    rax,rsi
  4102ae:	test   rcx,rcx
  4102b1:	jne    410290 <isspace@plt+0xc980>
  4102b3:	jmp    4105a2 <isspace@plt+0xcc92>
  4102b8:	mov    rcx,rbp
  4102bb:	sub    rcx,rax
  4102be:	mov    QWORD PTR [rsp+0x8],rcx
  4102c3:	mov    rdi,r14
  4102c6:	call   403f90 <isspace@plt+0x680>
  4102cb:	lea    rsi,[rax-0x1]
  4102cf:	mov    rdi,r14
  4102d2:	call   403c60 <isspace@plt+0x350>
  4102d7:	test   rax,rax
  4102da:	je     4103c5 <isspace@plt+0xcab5>
  4102e0:	mov    rcx,QWORD PTR [r14+0x28]
  4102e4:	test   rcx,rcx
  4102e7:	je     4103c5 <isspace@plt+0xcab5>
  4102ed:	mov    rdx,QWORD PTR [r14+0xa8]
  4102f4:	test   rdx,rdx
  4102f7:	je     4103c5 <isspace@plt+0xcab5>
  4102fd:	cmp    rcx,rbx
  410300:	jne    4103c5 <isspace@plt+0xcab5>
  410306:	mov    rcx,QWORD PTR [rdx]
  410309:	test   rcx,rcx
  41030c:	je     4103c5 <isspace@plt+0xcab5>
  410312:	mov    rdi,QWORD PTR [rcx+0x20]
  410316:	add    rcx,0x18
  41031a:	xor    esi,esi
  41031c:	mov    rcx,QWORD PTR [rcx]
  41031f:	mov    dl,0x1
  410321:	cmp    rcx,rbx
  410324:	je     410328 <isspace@plt+0xca18>
  410326:	mov    edx,esi
  410328:	cmp    rcx,rdi
  41032b:	je     41033a <isspace@plt+0xca2a>
  41032d:	add    rcx,0x10
  410331:	mov    esi,edx
  410333:	test   dl,0x1
  410336:	je     41031c <isspace@plt+0xca0c>
  410338:	jmp    410343 <isspace@plt+0xca33>
  41033a:	test   dl,0x1
  41033d:	je     4103c5 <isspace@plt+0xcab5>
  410343:	mov    rcx,QWORD PTR [rbx+0x28]
  410347:	add    rcx,QWORD PTR [rbx+0x30]
  41034b:	mov    rdx,QWORD PTR [rax+0x10]
  41034f:	add    rdx,QWORD PTR [rax+0x8]
  410353:	cmp    rcx,rdx
  410356:	jne    4103c5 <isspace@plt+0xcab5>
  410358:	mov    rdi,r14
  41035b:	call   403f90 <isspace@plt+0x680>
  410360:	lea    rsi,[rax-0x1]
  410364:	mov    rdi,r14
  410367:	call   403c60 <isspace@plt+0x350>
  41036c:	mov    rcx,QWORD PTR [rsp+0x8]
  410371:	not    rcx
  410374:	cmp    rcx,r13
  410377:	jb     4103c5 <isspace@plt+0xcab5>
  410379:	mov    rcx,QWORD PTR [rsp+0x8]
  41037e:	lea    rcx,[rcx+r13*1]
  410382:	cmp    rcx,QWORD PTR [rbx+0x30]
  410386:	ja     4103c5 <isspace@plt+0xcab5>
  410388:	mov    rsi,QWORD PTR [rbx+0x28]
  41038c:	add    rsi,QWORD PTR [rsp+0x8]
  410391:	sub    rsi,QWORD PTR [rax+0x10]
  410395:	mov    rdi,rax
  410398:	mov    rdx,r13
  41039b:	call   4119d0 <isspace@plt+0xe0c0>
  4103a0:	test   al,al
  4103a2:	je     4103c5 <isspace@plt+0xcab5>
  4103a4:	sub    QWORD PTR [rbx+0x30],r13
  4103a8:	mov    rax,QWORD PTR [r14+0xa8]
  4103af:	mov    rax,QWORD PTR [rax]
  4103b2:	sub    QWORD PTR [rax+0x28],r13
  4103b6:	sub    QWORD PTR [r14+0xc0],r13
  4103bd:	mov    r12b,0x1
  4103c0:	jmp    4105a5 <isspace@plt+0xcc95>
  4103c5:	mov    rdi,r14
  4103c8:	mov    rsi,rbp
  4103cb:	call   40f5f0 <isspace@plt+0xbce0>
  4103d0:	test   rax,rax
  4103d3:	je     4105a2 <isspace@plt+0xcc92>
  4103d9:	mov    rbp,rax
  4103dc:	mov    r15,QWORD PTR [rbx+0x30]
  4103e0:	sub    r15,QWORD PTR [rsp+0x8]
  4103e5:	jne    410450 <isspace@plt+0xcb40>
  4103e7:	mov    r8,QWORD PTR [rbx+0x10]
  4103eb:	xor    r9d,r9d
  4103ee:	mov    rdi,rbx
  4103f1:	xor    r15d,r15d
  4103f4:	cmp    r15,r13
  4103f7:	jae    41040d <isspace@plt+0xcafd>
  4103f9:	nop    DWORD PTR [rax+0x0]
  410400:	mov    rbx,QWORD PTR [rbx+0x10]
  410404:	add    r15,QWORD PTR [rbx+0x30]
  410408:	cmp    r15,r13
  41040b:	jb     410400 <isspace@plt+0xcaf0>
  41040d:	sub    r15,r13
  410410:	jne    410497 <isspace@plt+0xcb87>
  410416:	mov    rax,QWORD PTR [rbx+0x10]
  41041a:	xor    esi,esi
  41041c:	test   r9b,r9b
  41041f:	je     41050c <isspace@plt+0xcbfc>
  410425:	mov    rcx,QWORD PTR [r8+0x8]
  410429:	mov    rdx,QWORD PTR [r8+0x28]
  41042d:	mov    QWORD PTR [rdi+0x8],rcx
  410431:	mov    QWORD PTR [rdi+0x10],rax
  410435:	mov    QWORD PTR [rdi+0x28],rdx
  410439:	mov    rcx,QWORD PTR [rsp+0x8]
  41043e:	mov    QWORD PTR [rdi+0x30],rcx
  410442:	xor    ecx,ecx
  410444:	test   sil,sil
  410447:	cmove  rcx,rdi
  41044b:	jmp    410510 <isspace@plt+0xcc00>
  410450:	mov    edi,0x1
  410455:	mov    esi,0x38
  41045a:	call   403470 <calloc@plt>
  41045f:	test   rax,rax
  410462:	je     4105a2 <isspace@plt+0xcc92>
  410468:	mov    rdi,rax
  41046b:	mov    QWORD PTR [rax],r14
  41046e:	mov    rax,QWORD PTR [r14+0x20]
  410472:	mov    QWORD PTR [rdi+0x20],rax
  410476:	test   rax,rax
  410479:	je     41047f <isspace@plt+0xcb6f>
  41047b:	mov    QWORD PTR [rax+0x18],rdi
  41047f:	mov    QWORD PTR [r14+0x20],rdi
  410483:	mov    r9b,0x1
  410486:	mov    r8,rbx
  410489:	cmp    r15,r13
  41048c:	jb     410400 <isspace@plt+0xcaf0>
  410492:	jmp    41040d <isspace@plt+0xcafd>
  410497:	mov    QWORD PTR [rsp+0x10],r9
  41049c:	mov    QWORD PTR [rsp+0x18],rdi
  4104a1:	mov    r13,r8
  4104a4:	mov    edi,0x1
  4104a9:	mov    esi,0x38
  4104ae:	call   403470 <calloc@plt>
  4104b3:	test   rax,rax
  4104b6:	je     4105a2 <isspace@plt+0xcc92>
  4104bc:	mov    QWORD PTR [rax],r14
  4104bf:	mov    rcx,QWORD PTR [r14+0x20]
  4104c3:	mov    QWORD PTR [rax+0x20],rcx
  4104c7:	test   rcx,rcx
  4104ca:	mov    r8,r13
  4104cd:	mov    r9,QWORD PTR [rsp+0x10]
  4104d2:	je     4104d8 <isspace@plt+0xcbc8>
  4104d4:	mov    QWORD PTR [rcx+0x18],rax
  4104d8:	mov    QWORD PTR [r14+0x20],rax
  4104dc:	mov    rcx,QWORD PTR [rbx+0x10]
  4104e0:	mov    rdx,QWORD PTR [rbx+0x28]
  4104e4:	add    rdx,QWORD PTR [rbx+0x30]
  4104e8:	sub    rdx,r15
  4104eb:	mov    rdi,QWORD PTR [rsp+0x18]
  4104f0:	mov    QWORD PTR [rax+0x8],rdi
  4104f4:	mov    QWORD PTR [rax+0x10],rcx
  4104f8:	mov    QWORD PTR [rax+0x28],rdx
  4104fc:	mov    QWORD PTR [rax+0x30],r15
  410500:	mov    sil,0x1
  410503:	test   r9b,r9b
  410506:	jne    410425 <isspace@plt+0xcb15>
  41050c:	xor    edi,edi
  41050e:	xor    ecx,ecx
  410510:	test   r9b,r9b
  410513:	mov    rdx,rax
  410516:	cmovne rdx,rdi
  41051a:	test   sil,sil
  41051d:	cmove  rdx,rdi
  410521:	cmovne rcx,rax
  410525:	mov    QWORD PTR [rbp+0x18],rdx
  410529:	mov    QWORD PTR [rbp+0x20],rcx
  41052d:	xor    eax,eax
  41052f:	test   rdx,rdx
  410532:	je     410552 <isspace@plt+0xcc42>
  410534:	mov    rsi,rdx
  410537:	nop    WORD PTR [rax+rax*1+0x0]
  410540:	add    rax,QWORD PTR [rsi+0x30]
  410544:	cmp    rsi,rcx
  410547:	je     410552 <isspace@plt+0xcc42>
  410549:	mov    rsi,QWORD PTR [rsi+0x10]
  41054d:	test   rsi,rsi
  410550:	jne    410540 <isspace@plt+0xcc30>
  410552:	mov    QWORD PTR [rbp+0x28],rax
  410556:	mov    QWORD PTR [rbp+0x0],r8
  41055a:	mov    QWORD PTR [rbp+0x8],rbx
  41055e:	test   r8,r8
  410561:	je     4105c7 <isspace@plt+0xccb7>
  410563:	xor    esi,esi
  410565:	mov    rdi,r8
  410568:	nop    DWORD PTR [rax+rax*1+0x0]
  410570:	add    rsi,QWORD PTR [rdi+0x30]
  410574:	cmp    rdi,rbx
  410577:	je     410582 <isspace@plt+0xcc72>
  410579:	mov    rdi,QWORD PTR [rdi+0x10]
  41057d:	test   rdi,rdi
  410580:	jne    410570 <isspace@plt+0xcc60>
  410582:	mov    QWORD PTR [rbp+0x10],rsi
  410586:	test   rsi,rsi
  410589:	je     4105cf <isspace@plt+0xccbf>
  41058b:	test   rax,rax
  41058e:	je     4105e8 <isspace@plt+0xccd8>
  410590:	mov    rdi,QWORD PTR [r8+0x8]
  410594:	mov    QWORD PTR [rdi+0x10],rdx
  410598:	mov    rdx,QWORD PTR [rbx+0x10]
  41059c:	mov    QWORD PTR [rdx+0x8],rcx
  4105a0:	jmp    4105fc <isspace@plt+0xccec>
  4105a2:	xor    r12d,r12d
  4105a5:	mov    rax,QWORD PTR fs:0x28
  4105ae:	cmp    rax,QWORD PTR [rsp+0x20]
  4105b3:	jne    410608 <isspace@plt+0xccf8>
  4105b5:	mov    eax,r12d
  4105b8:	add    rsp,0x28
  4105bc:	pop    rbx
  4105bd:	pop    r12
  4105bf:	pop    r13
  4105c1:	pop    r14
  4105c3:	pop    r15
  4105c5:	pop    rbp
  4105c6:	ret    
  4105c7:	mov    QWORD PTR [rbp+0x10],0x0
  4105cf:	test   rax,rax
  4105d2:	je     4105a5 <isspace@plt+0xcc95>
  4105d4:	mov    rsi,QWORD PTR [rdx+0x8]
  4105d8:	mov    QWORD PTR [rsi+0x10],rdx
  4105dc:	mov    rdx,QWORD PTR [rcx+0x10]
  4105e0:	mov    QWORD PTR [rdx+0x8],rcx
  4105e4:	xor    esi,esi
  4105e6:	jmp    4105fc <isspace@plt+0xccec>
  4105e8:	mov    rcx,QWORD PTR [rbx+0x10]
  4105ec:	mov    rdx,QWORD PTR [r8+0x8]
  4105f0:	mov    QWORD PTR [rdx+0x10],rcx
  4105f4:	mov    rcx,QWORD PTR [rbx+0x10]
  4105f8:	mov    QWORD PTR [rcx+0x8],rdx
  4105fc:	sub    rax,rsi
  4105ff:	add    QWORD PTR [r14+0xc0],rax
  410606:	jmp    4105a5 <isspace@plt+0xcc95>
  410608:	call   403280 <__stack_chk_fail@plt>
  41060d:	nop    DWORD PTR [rax]
  410610:	push   r15
  410612:	push   r14
  410614:	push   rbx
  410615:	sub    rsp,0x10
  410619:	mov    rbx,rsi
  41061c:	mov    r14,rdi
  41061f:	mov    rax,QWORD PTR fs:0x28
  410628:	mov    QWORD PTR [rsp+0x8],rax
  41062d:	mov    rdi,rsi
  410630:	call   417400 <isspace@plt+0x13af0>
  410635:	test   al,al
  410637:	je     410664 <isspace@plt+0xcd54>
  410639:	mov    r15,QWORD PTR [rbx]
  41063c:	mov    rdi,rbx
  41063f:	call   417460 <isspace@plt+0x13b50>
  410644:	mov    rdi,r14
  410647:	mov    rsi,r15
  41064a:	mov    rdx,rax
  41064d:	call   410200 <isspace@plt+0xc8f0>
  410652:	mov    rcx,QWORD PTR fs:0x28
  41065b:	cmp    rcx,QWORD PTR [rsp+0x8]
  410660:	je     410676 <isspace@plt+0xcd66>
  410662:	jmp    410680 <isspace@plt+0xcd70>
  410664:	mov    rax,QWORD PTR fs:0x28
  41066d:	cmp    rax,QWORD PTR [rsp+0x8]
  410672:	jne    410680 <isspace@plt+0xcd70>
  410674:	xor    eax,eax
  410676:	add    rsp,0x10
  41067a:	pop    rbx
  41067b:	pop    r14
  41067d:	pop    r15
  41067f:	ret    
  410680:	call   403280 <__stack_chk_fail@plt>
  410685:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41068f:	nop
  410690:	push   rax
  410691:	mov    rax,QWORD PTR fs:0x28
  41069a:	mov    QWORD PTR [rsp],rax
  41069e:	mov    rax,QWORD PTR [rdi+0xb8]
  4106a5:	cmp    rax,QWORD PTR [rdi+0xa0]
  4106ac:	setne  al
  4106af:	mov    rcx,QWORD PTR fs:0x28
  4106b8:	cmp    rcx,QWORD PTR [rsp]
  4106bc:	jne    4106c0 <isspace@plt+0xcdb0>
  4106be:	pop    rcx
  4106bf:	ret    
  4106c0:	call   403280 <__stack_chk_fail@plt>
  4106c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4106cf:	nop
  4106d0:	push   r15
  4106d2:	push   r14
  4106d4:	push   r12
  4106d6:	push   rbx
  4106d7:	push   rax
  4106d8:	mov    r14,rsi
  4106db:	mov    r15,rdi
  4106de:	mov    rax,QWORD PTR fs:0x28
  4106e7:	mov    QWORD PTR [rsp],rax
  4106eb:	call   403f90 <isspace@plt+0x680>
  4106f0:	test   rax,rax
  4106f3:	je     41072b <isspace@plt+0xce1b>
  4106f5:	mov    r12,rax
  4106f8:	xor    ebx,ebx
  4106fa:	nop    WORD PTR [rax+rax*1+0x0]
  410700:	mov    rdi,r15
  410703:	mov    rsi,rbx
  410706:	call   403c60 <isspace@plt+0x350>
  41070b:	cmp    DWORD PTR [rax+0x18],0x1
  41070f:	ja     410722 <isspace@plt+0xce12>
  410711:	mov    rcx,QWORD PTR [rax+0x10]
  410715:	cmp    rcx,r14
  410718:	ja     410722 <isspace@plt+0xce12>
  41071a:	add    rcx,QWORD PTR [rax]
  41071d:	cmp    rcx,r14
  410720:	ja     410748 <isspace@plt+0xce38>
  410722:	add    rbx,0x1
  410726:	cmp    rbx,r12
  410729:	jb     410700 <isspace@plt+0xcdf0>
  41072b:	xor    eax,eax
  41072d:	mov    rcx,QWORD PTR fs:0x28
  410736:	cmp    rcx,QWORD PTR [rsp]
  41073a:	jne    41074c <isspace@plt+0xce3c>
  41073c:	add    rsp,0x8
  410740:	pop    rbx
  410741:	pop    r12
  410743:	pop    r14
  410745:	pop    r15
  410747:	ret    
  410748:	mov    al,0x1
  41074a:	jmp    41072d <isspace@plt+0xce1d>
  41074c:	call   403280 <__stack_chk_fail@plt>
  410751:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41075b:	nop    DWORD PTR [rax+rax*1+0x0]
  410760:	push   rbx
  410761:	sub    rsp,0x10
  410765:	mov    rax,QWORD PTR fs:0x28
  41076e:	mov    QWORD PTR [rsp+0x8],rax
  410773:	mov    rbx,QWORD PTR [rsi+0x40]
  410777:	mov    rsi,QWORD PTR [rbx+0x10]
  41077b:	test   rsi,rsi
  41077e:	je     4107b6 <isspace@plt+0xcea6>
  410780:	xor    ecx,ecx
  410782:	mov    r11,rbx
  410785:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41078f:	nop
  410790:	mov    rbx,rsi
  410793:	mov    r9,QWORD PTR [r11+0x30]
  410797:	lea    rax,[r9+rcx*1]
  41079b:	cmp    rcx,rdx
  41079e:	ja     4107a5 <isspace@plt+0xce95>
  4107a0:	cmp    rax,rdx
  4107a3:	ja     4107f9 <isspace@plt+0xcee9>
  4107a5:	mov    rsi,QWORD PTR [rbx+0x10]
  4107a9:	mov    r11,rbx
  4107ac:	mov    rcx,rax
  4107af:	test   rsi,rsi
  4107b2:	jne    410790 <isspace@plt+0xce80>
  4107b4:	jmp    4107b8 <isspace@plt+0xcea8>
  4107b6:	xor    eax,eax
  4107b8:	xor    r11d,r11d
  4107bb:	mov    r9d,0x0
  4107c1:	mov    r10d,0x0
  4107c7:	mov    r8d,0x0
  4107cd:	cmp    rax,rdx
  4107d0:	jne    410810 <isspace@plt+0xcf00>
  4107d2:	mov    r11,QWORD PTR [rbx+0x8]
  4107d6:	mov    r9,QWORD PTR [r11+0x30]
  4107da:	mov    r8,r9
  4107dd:	test   r11,r11
  4107e0:	je     410804 <isspace@plt+0xcef4>
  4107e2:	mov    r10,QWORD PTR [r11+0x28]
  4107e6:	add    r9,r10
  4107e9:	add    r8,r10
  4107ec:	test   r10,r10
  4107ef:	cmove  r9,r10
  4107f3:	cmove  r8,r10
  4107f7:	jmp    410810 <isspace@plt+0xcf00>
  4107f9:	mov    r8,rdx
  4107fc:	sub    r8,rcx
  4107ff:	test   r11,r11
  410802:	jne    4107e2 <isspace@plt+0xced2>
  410804:	xor    r11d,r11d
  410807:	xor    r9d,r9d
  41080a:	xor    r10d,r10d
  41080d:	xor    r8d,r8d
  410810:	mov    QWORD PTR [rdi],r10
  410813:	mov    QWORD PTR [rdi+0x8],r9
  410817:	mov    QWORD PTR [rdi+0x10],r8
  41081b:	mov    QWORD PTR [rdi+0x18],r11
  41081f:	mov    QWORD PTR [rdi+0x20],rdx
  410823:	mov    rax,QWORD PTR fs:0x28
  41082c:	cmp    rax,QWORD PTR [rsp+0x8]
  410831:	jne    41083c <isspace@plt+0xcf2c>
  410833:	mov    rax,rdi
  410836:	add    rsp,0x10
  41083a:	pop    rbx
  41083b:	ret    
  41083c:	call   403280 <__stack_chk_fail@plt>
  410841:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41084b:	nop    DWORD PTR [rax+rax*1+0x0]
  410850:	push   rax
  410851:	mov    rax,QWORD PTR fs:0x28
  41085a:	mov    QWORD PTR [rsp],rax
  41085e:	mov    rax,QWORD PTR [rdi+0x8]
  410862:	mov    rcx,QWORD PTR [rdi+0x18]
  410866:	sub    rax,QWORD PTR [rdi+0x10]
  41086a:	add    rax,QWORD PTR [rdi+0x20]
  41086e:	test   rcx,rcx
  410871:	je     41088e <isspace@plt+0xcf7e>
  410873:	mov    rcx,QWORD PTR [rcx+0x10]
  410877:	test   rcx,rcx
  41087a:	je     41088e <isspace@plt+0xcf7e>
  41087c:	mov    rdx,QWORD PTR [rcx+0x28]
  410880:	test   rdx,rdx
  410883:	je     41089e <isspace@plt+0xcf8e>
  410885:	mov    rsi,QWORD PTR [rcx+0x30]
  410889:	add    rsi,rdx
  41088c:	jmp    4108a0 <isspace@plt+0xcf90>
  41088e:	vxorps xmm0,xmm0,xmm0
  410892:	vmovups YMMWORD PTR [rdi],ymm0
  410896:	mov    QWORD PTR [rdi+0x20],rax
  41089a:	xor    eax,eax
  41089c:	jmp    4108ba <isspace@plt+0xcfaa>
  41089e:	xor    esi,esi
  4108a0:	mov    QWORD PTR [rdi],rdx
  4108a3:	mov    QWORD PTR [rdi+0x8],rsi
  4108a7:	mov    QWORD PTR [rdi+0x10],rdx
  4108ab:	mov    QWORD PTR [rdi+0x18],rcx
  4108af:	mov    QWORD PTR [rdi+0x20],rax
  4108b3:	cmp    QWORD PTR [rcx],0x0
  4108b7:	setne  al
  4108ba:	mov    rcx,QWORD PTR fs:0x28
  4108c3:	cmp    rcx,QWORD PTR [rsp]
  4108c7:	jne    4108ce <isspace@plt+0xcfbe>
  4108c9:	pop    rcx
  4108ca:	vzeroupper 
  4108cd:	ret    
  4108ce:	vzeroupper 
  4108d1:	call   403280 <__stack_chk_fail@plt>
  4108d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4108e0:	push   rax
  4108e1:	mov    rax,QWORD PTR fs:0x28
  4108ea:	mov    QWORD PTR [rsp],rax
  4108ee:	mov    rax,QWORD PTR [rdi]
  4108f1:	mov    rcx,QWORD PTR [rdi+0x10]
  4108f5:	mov    rdx,QWORD PTR [rdi+0x18]
  4108f9:	test   rdx,rdx
  4108fc:	je     410924 <isspace@plt+0xd014>
  4108fe:	mov    r10,QWORD PTR [rdx+0x8]
  410902:	test   r10,r10
  410905:	je     410924 <isspace@plt+0xd014>
  410907:	mov    rdx,QWORD PTR [r10+0x28]
  41090b:	mov    rsi,QWORD PTR [r10+0x30]
  41090f:	sub    rax,rcx
  410912:	add    rax,QWORD PTR [rdi+0x20]
  410916:	test   rdx,rdx
  410919:	je     41093a <isspace@plt+0xd02a>
  41091b:	mov    r9,QWORD PTR [r10+0x30]
  41091f:	add    r9,rdx
  410922:	jmp    41093d <isspace@plt+0xd02d>
  410924:	sub    rax,rcx
  410927:	add    rax,QWORD PTR [rdi+0x20]
  41092b:	mov    r8b,0x1
  41092e:	xor    r10d,r10d
  410931:	xor    r9d,r9d
  410934:	xor    edx,edx
  410936:	xor    esi,esi
  410938:	jmp    41094a <isspace@plt+0xd03a>
  41093a:	xor    r9d,r9d
  41093d:	add    rsi,rdx
  410940:	test   rdx,rdx
  410943:	cmove  rsi,rdx
  410947:	xor    r8d,r8d
  41094a:	mov    QWORD PTR [rdi],rdx
  41094d:	mov    QWORD PTR [rdi+0x8],r9
  410951:	mov    QWORD PTR [rdi+0x10],rsi
  410955:	mov    QWORD PTR [rdi+0x18],r10
  410959:	mov    QWORD PTR [rdi+0x20],rax
  41095d:	test   r8b,r8b
  410960:	je     410966 <isspace@plt+0xd056>
  410962:	xor    eax,eax
  410964:	jmp    41096d <isspace@plt+0xd05d>
  410966:	cmp    QWORD PTR [r10],0x0
  41096a:	setne  al
  41096d:	mov    rcx,QWORD PTR fs:0x28
  410976:	cmp    rcx,QWORD PTR [rsp]
  41097a:	jne    41097e <isspace@plt+0xd06e>
  41097c:	pop    rcx
  41097d:	ret    
  41097e:	call   403280 <__stack_chk_fail@plt>
  410983:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41098d:	nop    DWORD PTR [rax]
  410990:	push   rax
  410991:	mov    rax,QWORD PTR fs:0x28
  41099a:	mov    QWORD PTR [rsp],rax
  41099e:	mov    rax,QWORD PTR [rdi+0x18]
  4109a2:	test   rax,rax
  4109a5:	je     4109ac <isspace@plt+0xd09c>
  4109a7:	mov    rax,QWORD PTR [rax]
  4109aa:	jmp    4109ae <isspace@plt+0xd09e>
  4109ac:	xor    eax,eax
  4109ae:	mov    rcx,QWORD PTR fs:0x28
  4109b7:	cmp    rcx,QWORD PTR [rsp]
  4109bb:	jne    4109bf <isspace@plt+0xd0af>
  4109bd:	pop    rcx
  4109be:	ret    
  4109bf:	call   403280 <__stack_chk_fail@plt>
  4109c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4109ce:	xchg   ax,ax
  4109d0:	push   rax
  4109d1:	mov    rax,QWORD PTR fs:0x28
  4109da:	mov    QWORD PTR [rsp],rax
  4109de:	mov    rax,QWORD PTR [rdi+0x18]
  4109e2:	test   rax,rax
  4109e5:	je     4109f0 <isspace@plt+0xd0e0>
  4109e7:	cmp    QWORD PTR [rax],0x0
  4109eb:	setne  al
  4109ee:	jmp    4109f2 <isspace@plt+0xd0e2>
  4109f0:	xor    eax,eax
  4109f2:	mov    rcx,QWORD PTR fs:0x28
  4109fb:	cmp    rcx,QWORD PTR [rsp]
  4109ff:	jne    410a03 <isspace@plt+0xd0f3>
  410a01:	pop    rcx
  410a02:	ret    
  410a03:	call   403280 <__stack_chk_fail@plt>
  410a08:	nop    DWORD PTR [rax+rax*1+0x0]
  410a10:	push   rax
  410a11:	mov    rax,QWORD PTR fs:0x28
  410a1a:	mov    QWORD PTR [rsp],rax
  410a1e:	mov    rax,QWORD PTR [rdi+0x18]
  410a22:	test   rax,rax
  410a25:	je     410a31 <isspace@plt+0xd121>
  410a27:	cmp    QWORD PTR [rax+0x10],0x0
  410a2c:	setne  al
  410a2f:	jmp    410a33 <isspace@plt+0xd123>
  410a31:	xor    eax,eax
  410a33:	mov    rcx,QWORD PTR fs:0x28
  410a3c:	cmp    rcx,QWORD PTR [rsp]
  410a40:	jne    410a44 <isspace@plt+0xd134>
  410a42:	pop    rcx
  410a43:	ret    
  410a44:	call   403280 <__stack_chk_fail@plt>
  410a49:	nop    DWORD PTR [rax+0x0]
  410a50:	push   rax
  410a51:	mov    rax,QWORD PTR fs:0x28
  410a5a:	mov    QWORD PTR [rsp],rax
  410a5e:	mov    rax,QWORD PTR [rdi+0x18]
  410a62:	test   rax,rax
  410a65:	je     410a71 <isspace@plt+0xd161>
  410a67:	cmp    QWORD PTR [rax+0x8],0x0
  410a6c:	setne  al
  410a6f:	jmp    410a73 <isspace@plt+0xd163>
  410a71:	xor    eax,eax
  410a73:	mov    rcx,QWORD PTR fs:0x28
  410a7c:	cmp    rcx,QWORD PTR [rsp]
  410a80:	jne    410a84 <isspace@plt+0xd174>
  410a82:	pop    rcx
  410a83:	ret    
  410a84:	call   403280 <__stack_chk_fail@plt>
  410a89:	nop    DWORD PTR [rax+0x0]
  410a90:	push   rax
  410a91:	mov    rax,QWORD PTR fs:0x28
  410a9a:	mov    QWORD PTR [rsp],rax
  410a9e:	mov    rax,QWORD PTR [rdi+0xc0]
  410aa5:	mov    rcx,QWORD PTR fs:0x28
  410aae:	cmp    rcx,QWORD PTR [rsp]
  410ab2:	jne    410ab6 <isspace@plt+0xd1a6>
  410ab4:	pop    rcx
  410ab5:	ret    
  410ab6:	call   403280 <__stack_chk_fail@plt>
  410abb:	nop    DWORD PTR [rax+rax*1+0x0]
  410ac0:	push   rbp
  410ac1:	push   r15
  410ac3:	push   r14
  410ac5:	push   r13
  410ac7:	push   r12
  410ac9:	push   rbx
  410aca:	sub    rsp,0x18
  410ace:	mov    rax,QWORD PTR fs:0x28
  410ad7:	mov    QWORD PTR [rsp+0x10],rax
  410adc:	cmp    rsi,0x2
  410ae0:	jae    410ae9 <isspace@plt+0xd1d9>
  410ae2:	xor    eax,eax
  410ae4:	jmp    410d88 <isspace@plt+0xd478>
  410ae9:	mov    rcx,QWORD PTR [rdi+0x160]
  410af0:	cmp    rcx,rsi
  410af3:	jae    410c20 <isspace@plt+0xd310>
  410af9:	mov    rax,QWORD PTR [rdi+0x40]
  410afd:	mov    QWORD PTR [rsp+0x8],rdi
  410b02:	mov    r13,QWORD PTR [rdi+0x158]
  410b09:	mov    QWORD PTR [rsp],rsi
  410b0d:	mov    rbp,rsi
  410b10:	sub    rbp,rcx
  410b13:	mov    rdx,QWORD PTR [rax+0x10]
  410b17:	xor    ecx,ecx
  410b19:	test   rdx,rdx
  410b1c:	je     410b57 <isspace@plt+0xd247>
  410b1e:	mov    r14,rax
  410b21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  410b30:	mov    rsi,rcx
  410b33:	mov    rax,rdx
  410b36:	mov    r15,QWORD PTR [r14+0x30]
  410b3a:	lea    rcx,[r15+rcx*1]
  410b3e:	mov    r12,r13
  410b41:	sub    r12,rsi
  410b44:	jb     410b4b <isspace@plt+0xd23b>
  410b46:	cmp    rcx,r13
  410b49:	ja     410b6b <isspace@plt+0xd25b>
  410b4b:	mov    rdx,QWORD PTR [rax+0x10]
  410b4f:	mov    r14,rax
  410b52:	test   rdx,rdx
  410b55:	jne    410b30 <isspace@plt+0xd220>
  410b57:	cmp    rcx,r13
  410b5a:	jne    410c81 <isspace@plt+0xd371>
  410b60:	mov    r14,QWORD PTR [rax+0x8]
  410b64:	mov    r15,QWORD PTR [r14+0x30]
  410b68:	mov    r12,r15
  410b6b:	test   r14,r14
  410b6e:	je     410c81 <isspace@plt+0xd371>
  410b74:	cmp    QWORD PTR [r14],0x0
  410b78:	je     410c81 <isspace@plt+0xd371>
  410b7e:	mov    rax,QWORD PTR [r14+0x28]
  410b82:	add    r15,rax
  410b85:	add    r12,rax
  410b88:	test   rax,rax
  410b8b:	cmove  r15,rax
  410b8f:	cmove  r12,rax
  410b93:	test   rbp,rbp
  410b96:	je     410c7f <isspace@plt+0xd36f>
  410b9c:	nop    DWORD PTR [rax+0x0]
  410ba0:	cmp    r12,r15
  410ba3:	jae    410be3 <isspace@plt+0xd2d3>
  410ba5:	mov    rbx,r15
  410ba8:	sub    rbx,r12
  410bab:	mov    esi,0xa
  410bb0:	mov    rdi,r12
  410bb3:	mov    rdx,rbx
  410bb6:	call   403410 <memchr@plt>
  410bbb:	test   rax,rax
  410bbe:	je     410be0 <isspace@plt+0xd2d0>
  410bc0:	mov    ecx,0x1
  410bc5:	sub    rcx,r12
  410bc8:	add    r13,rcx
  410bcb:	add    r13,rax
  410bce:	add    rax,0x1
  410bd2:	mov    r12,rax
  410bd5:	add    rbp,0xffffffffffffffff
  410bd9:	jne    410ba0 <isspace@plt+0xd290>
  410bdb:	jmp    410c7f <isspace@plt+0xd36f>
  410be0:	add    r13,rbx
  410be3:	test   r14,r14
  410be6:	je     410c81 <isspace@plt+0xd371>
  410bec:	mov    r14,QWORD PTR [r14+0x10]
  410bf0:	test   r14,r14
  410bf3:	je     410c81 <isspace@plt+0xd371>
  410bf9:	mov    r12,QWORD PTR [r14+0x28]
  410bfd:	test   r12,r12
  410c00:	je     410c11 <isspace@plt+0xd301>
  410c02:	mov    r15,QWORD PTR [r14+0x30]
  410c06:	add    r15,r12
  410c09:	cmp    QWORD PTR [r14],0x0
  410c0d:	jne    410b93 <isspace@plt+0xd283>
  410c0f:	jmp    410c81 <isspace@plt+0xd371>
  410c11:	xor    r15d,r15d
  410c14:	cmp    QWORD PTR [r14],0x0
  410c18:	jne    410b93 <isspace@plt+0xd283>
  410c1e:	jmp    410c81 <isspace@plt+0xd371>
  410c20:	jbe    410d75 <isspace@plt+0xd465>
  410c26:	mov    QWORD PTR [rsp],rsi
  410c2a:	lea    r13,[rsi-0x1]
  410c2e:	mov    QWORD PTR [rsp+0x8],rdi
  410c33:	mov    r14,QWORD PTR [rdi+0x40]
  410c37:	mov    rcx,QWORD PTR [r14+0x10]
  410c3b:	test   rcx,rcx
  410c3e:	je     410c9c <isspace@plt+0xd38c>
  410c40:	xor    r12d,r12d
  410c43:	xor    edx,edx
  410c45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410c4f:	nop
  410c50:	mov    rsi,rdx
  410c53:	mov    rax,rcx
  410c56:	mov    r15,QWORD PTR [r14+0x30]
  410c5a:	lea    rdx,[r15+rdx*1]
  410c5e:	test   rsi,rsi
  410c61:	jne    410c68 <isspace@plt+0xd358>
  410c63:	test   rdx,rdx
  410c66:	jne    410caa <isspace@plt+0xd39a>
  410c68:	mov    rcx,QWORD PTR [rax+0x10]
  410c6c:	mov    r14,rax
  410c6f:	test   rcx,rcx
  410c72:	jne    410c50 <isspace@plt+0xd340>
  410c74:	test   rdx,rdx
  410c77:	jne    410d51 <isspace@plt+0xd441>
  410c7d:	jmp    410c9f <isspace@plt+0xd38f>
  410c7f:	xor    ebp,ebp
  410c81:	mov    rdi,QWORD PTR [rsp+0x8]
  410c86:	mov    QWORD PTR [rdi+0x158],r13
  410c8d:	mov    rsi,QWORD PTR [rsp]
  410c91:	mov    rcx,rsi
  410c94:	sub    rcx,rbp
  410c97:	jmp    410d6e <isspace@plt+0xd45e>
  410c9c:	mov    rax,r14
  410c9f:	mov    r14,QWORD PTR [rax+0x8]
  410ca3:	mov    r15,QWORD PTR [r14+0x30]
  410ca7:	mov    r12,r15
  410caa:	test   r14,r14
  410cad:	je     410d51 <isspace@plt+0xd441>
  410cb3:	cmp    QWORD PTR [r14],0x0
  410cb7:	je     410d51 <isspace@plt+0xd441>
  410cbd:	mov    rax,QWORD PTR [r14+0x28]
  410cc1:	add    r15,rax
  410cc4:	add    r12,rax
  410cc7:	test   rax,rax
  410cca:	cmove  r15,rax
  410cce:	cmove  r12,rax
  410cd2:	xor    ebp,ebp
  410cd4:	test   r13,r13
  410cd7:	je     410d55 <isspace@plt+0xd445>
  410cd9:	nop    DWORD PTR [rax+0x0]
  410ce0:	cmp    r12,r15
  410ce3:	jae    410d20 <isspace@plt+0xd410>
  410ce5:	mov    rbx,r15
  410ce8:	sub    rbx,r12
  410ceb:	mov    esi,0xa
  410cf0:	mov    rdi,r12
  410cf3:	mov    rdx,rbx
  410cf6:	call   403410 <memchr@plt>
  410cfb:	test   rax,rax
  410cfe:	je     410d1d <isspace@plt+0xd40d>
  410d00:	mov    ecx,0x1
  410d05:	sub    rcx,r12
  410d08:	add    rbp,rcx
  410d0b:	add    rbp,rax
  410d0e:	add    rax,0x1
  410d12:	mov    r12,rax
  410d15:	add    r13,0xffffffffffffffff
  410d19:	jne    410ce0 <isspace@plt+0xd3d0>
  410d1b:	jmp    410d55 <isspace@plt+0xd445>
  410d1d:	add    rbp,rbx
  410d20:	test   r14,r14
  410d23:	je     410d58 <isspace@plt+0xd448>
  410d25:	mov    r14,QWORD PTR [r14+0x10]
  410d29:	test   r14,r14
  410d2c:	je     410d58 <isspace@plt+0xd448>
  410d2e:	mov    r12,QWORD PTR [r14+0x28]
  410d32:	test   r12,r12
  410d35:	je     410d46 <isspace@plt+0xd436>
  410d37:	mov    r15,QWORD PTR [r14+0x30]
  410d3b:	add    r15,r12
  410d3e:	cmp    QWORD PTR [r14],0x0
  410d42:	jne    410cd4 <isspace@plt+0xd3c4>
  410d44:	jmp    410d58 <isspace@plt+0xd448>
  410d46:	xor    r15d,r15d
  410d49:	cmp    QWORD PTR [r14],0x0
  410d4d:	jne    410cd4 <isspace@plt+0xd3c4>
  410d4f:	jmp    410d58 <isspace@plt+0xd448>
  410d51:	xor    ebp,ebp
  410d53:	jmp    410d58 <isspace@plt+0xd448>
  410d55:	xor    r13d,r13d
  410d58:	mov    rdi,QWORD PTR [rsp+0x8]
  410d5d:	mov    QWORD PTR [rdi+0x158],rbp
  410d64:	mov    rsi,QWORD PTR [rsp]
  410d68:	mov    rcx,rsi
  410d6b:	sub    rcx,r13
  410d6e:	mov    QWORD PTR [rdi+0x160],rcx
  410d75:	mov    rax,0xffffffffffffffff
  410d7c:	cmp    rcx,rsi
  410d7f:	jne    410d88 <isspace@plt+0xd478>
  410d81:	mov    rax,QWORD PTR [rdi+0x158]
  410d88:	mov    rcx,QWORD PTR fs:0x28
  410d91:	cmp    rcx,QWORD PTR [rsp+0x10]
  410d96:	jne    410da7 <isspace@plt+0xd497>
  410d98:	add    rsp,0x18
  410d9c:	pop    rbx
  410d9d:	pop    r12
  410d9f:	pop    r13
  410da1:	pop    r14
  410da3:	pop    r15
  410da5:	pop    rbp
  410da6:	ret    
  410da7:	call   403280 <__stack_chk_fail@plt>
  410dac:	nop    DWORD PTR [rax+0x0]
  410db0:	push   r14
  410db2:	push   rbx
  410db3:	push   rax
  410db4:	mov    rbx,rsi
  410db7:	mov    r14,rdi
  410dba:	mov    rax,QWORD PTR fs:0x28
  410dc3:	mov    QWORD PTR [rsp],rax
  410dc7:	mov    rax,QWORD PTR [rdi+0xc0]
  410dce:	mov    rdx,QWORD PTR [rdi+0x158]
  410dd5:	cmp    rax,rsi
  410dd8:	cmovb  rbx,rax
  410ddc:	mov    rax,rbx
  410ddf:	sub    rax,rdx
  410de2:	jae    410e00 <isspace@plt+0xd4f0>
  410de4:	sub    rdx,rbx
  410de7:	cmp    rdx,rbx
  410dea:	jae    410e19 <isspace@plt+0xd509>
  410dec:	mov    rdi,r14
  410def:	mov    rsi,rbx
  410df2:	call   410e70 <isspace@plt+0xd560>
  410df7:	sub    QWORD PTR [r14+0x160],rax
  410dfe:	jmp    410e31 <isspace@plt+0xd521>
  410e00:	jbe    410e31 <isspace@plt+0xd521>
  410e02:	mov    rdi,r14
  410e05:	mov    rsi,rdx
  410e08:	mov    rdx,rax
  410e0b:	call   410e70 <isspace@plt+0xd560>
  410e10:	add    QWORD PTR [r14+0x160],rax
  410e17:	jmp    410e31 <isspace@plt+0xd521>
  410e19:	xor    esi,esi
  410e1b:	mov    rdi,r14
  410e1e:	mov    rdx,rbx
  410e21:	call   410e70 <isspace@plt+0xd560>
  410e26:	add    rax,0x1
  410e2a:	mov    QWORD PTR [r14+0x160],rax
  410e31:	mov    rdi,r14
  410e34:	mov    rsi,rbx
  410e37:	call   413560 <isspace@plt+0xfc50>
  410e3c:	mov    QWORD PTR [r14+0x158],rax
  410e43:	mov    rax,QWORD PTR [r14+0x160]
  410e4a:	mov    rcx,QWORD PTR fs:0x28
  410e53:	cmp    rcx,QWORD PTR [rsp]
  410e57:	jne    410e61 <isspace@plt+0xd551>
  410e59:	add    rsp,0x8
  410e5d:	pop    rbx
  410e5e:	pop    r14
  410e60:	ret    
  410e61:	call   403280 <__stack_chk_fail@plt>
  410e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410e70:	push   rbp
  410e71:	push   r15
  410e73:	push   r14
  410e75:	push   r13
  410e77:	push   r12
  410e79:	push   rbx
  410e7a:	push   rax
  410e7b:	mov    r12,rdx
  410e7e:	mov    r14,rsi
  410e81:	mov    rax,QWORD PTR fs:0x28
  410e8a:	mov    QWORD PTR [rsp],rax
  410e8e:	mov    rax,QWORD PTR [rdi+0x40]
  410e92:	mov    rsi,QWORD PTR [rax+0x10]
  410e96:	test   rsi,rsi
  410e99:	je     410ed6 <isspace@plt+0xd5c6>
  410e9b:	xor    edx,edx
  410e9d:	mov    r13,rax
  410ea0:	mov    rax,rsi
  410ea3:	mov    rbp,QWORD PTR [r13+0x30]
  410ea7:	lea    rcx,[rdx+rbp*1]
  410eab:	cmp    rdx,r14
  410eae:	ja     410eb5 <isspace@plt+0xd5a5>
  410eb0:	cmp    rcx,r14
  410eb3:	ja     410ee5 <isspace@plt+0xd5d5>
  410eb5:	mov    rsi,QWORD PTR [rax+0x10]
  410eb9:	mov    r13,rax
  410ebc:	mov    rdx,rcx
  410ebf:	test   rsi,rsi
  410ec2:	jne    410ea0 <isspace@plt+0xd590>
  410ec4:	cmp    rcx,r14
  410ec7:	jne    410edd <isspace@plt+0xd5cd>
  410ec9:	mov    r13,QWORD PTR [rax+0x8]
  410ecd:	mov    rbp,QWORD PTR [r13+0x30]
  410ed1:	mov    r14,rbp
  410ed4:	jmp    410ee8 <isspace@plt+0xd5d8>
  410ed6:	xor    ecx,ecx
  410ed8:	cmp    rcx,r14
  410edb:	je     410ec9 <isspace@plt+0xd5b9>
  410edd:	xor    r15d,r15d
  410ee0:	jmp    410f91 <isspace@plt+0xd681>
  410ee5:	sub    r14,rdx
  410ee8:	xor    r15d,r15d
  410eeb:	test   r13,r13
  410eee:	je     410f91 <isspace@plt+0xd681>
  410ef4:	cmp    QWORD PTR [r13+0x0],0x0
  410ef9:	je     410f91 <isspace@plt+0xd681>
  410eff:	test   r12,r12
  410f02:	je     410f91 <isspace@plt+0xd681>
  410f08:	mov    rax,QWORD PTR [r13+0x28]
  410f0c:	add    rbp,rax
  410f0f:	add    r14,rax
  410f12:	test   rax,rax
  410f15:	cmove  rbp,rax
  410f19:	cmove  r14,rax
  410f1d:	xor    r15d,r15d
  410f20:	cmp    r14,rbp
  410f23:	jae    410f61 <isspace@plt+0xd651>
  410f25:	mov    rbx,rbp
  410f28:	sub    rbx,r14
  410f2b:	cmp    r12,rbx
  410f2e:	cmovbe rbx,r12
  410f32:	mov    esi,0xa
  410f37:	mov    rdi,r14
  410f3a:	mov    rdx,rbx
  410f3d:	call   403410 <memchr@plt>
  410f42:	test   rax,rax
  410f45:	je     410f5c <isspace@plt+0xd64c>
  410f47:	add    r15,0x1
  410f4b:	add    r12,r14
  410f4e:	lea    r14,[rax+0x1]
  410f52:	not    rax
  410f55:	add    r12,rax
  410f58:	jne    410f20 <isspace@plt+0xd610>
  410f5a:	jmp    410f91 <isspace@plt+0xd681>
  410f5c:	sub    r12,rbx
  410f5f:	je     410f91 <isspace@plt+0xd681>
  410f61:	mov    r13,QWORD PTR [r13+0x10]
  410f65:	test   r13,r13
  410f68:	je     410f91 <isspace@plt+0xd681>
  410f6a:	mov    r14,QWORD PTR [r13+0x28]
  410f6e:	test   r14,r14
  410f71:	je     410f88 <isspace@plt+0xd678>
  410f73:	mov    rbp,QWORD PTR [r13+0x30]
  410f77:	add    rbp,r14
  410f7a:	cmp    QWORD PTR [r13+0x0],0x0
  410f7f:	je     410f91 <isspace@plt+0xd681>
  410f81:	test   r12,r12
  410f84:	jne    410f20 <isspace@plt+0xd610>
  410f86:	jmp    410f91 <isspace@plt+0xd681>
  410f88:	xor    ebp,ebp
  410f8a:	cmp    QWORD PTR [r13+0x0],0x0
  410f8f:	jne    410f81 <isspace@plt+0xd671>
  410f91:	mov    rax,QWORD PTR fs:0x28
  410f9a:	cmp    rax,QWORD PTR [rsp]
  410f9e:	jne    410fb2 <isspace@plt+0xd6a2>
  410fa0:	mov    rax,r15
  410fa3:	add    rsp,0x8
  410fa7:	pop    rbx
  410fa8:	pop    r12
  410faa:	pop    r13
  410fac:	pop    r14
  410fae:	pop    r15
  410fb0:	pop    rbp
  410fb1:	ret    
  410fb2:	call   403280 <__stack_chk_fail@plt>
  410fb7:	nop    WORD PTR [rax+rax*1+0x0]
  410fc0:	push   rax
  410fc1:	mov    rax,QWORD PTR fs:0x28
  410fca:	mov    QWORD PTR [rsp],rax
  410fce:	cmp    QWORD PTR [rdi+0xc0],rsi
  410fd5:	jne    410fdd <isspace@plt+0xd6cd>
  410fd7:	add    rdi,0x68
  410fdb:	jmp    411041 <isspace@plt+0xd731>
  410fdd:	mov    r8,QWORD PTR [rdi+0x40]
  410fe1:	mov    rax,QWORD PTR [r8+0x10]
  410fe5:	test   rax,rax
  410fe8:	je     41101a <isspace@plt+0xd70a>
  410fea:	xor    edi,edi
  410fec:	mov    rcx,r8
  410fef:	nop
  410ff0:	mov    r8,rax
  410ff3:	mov    rdx,QWORD PTR [rcx+0x30]
  410ff7:	add    rdx,rdi
  410ffa:	cmp    rdi,rsi
  410ffd:	ja     411004 <isspace@plt+0xd6f4>
  410fff:	cmp    rdx,rsi
  411002:	ja     411037 <isspace@plt+0xd727>
  411004:	mov    rax,QWORD PTR [r8+0x10]
  411008:	mov    rcx,r8
  41100b:	mov    rdi,rdx
  41100e:	test   rax,rax
  411011:	jne    410ff0 <isspace@plt+0xd6e0>
  411013:	cmp    rdx,rsi
  411016:	jne    41103f <isspace@plt+0xd72f>
  411018:	jmp    411021 <isspace@plt+0xd711>
  41101a:	xor    edx,edx
  41101c:	cmp    rdx,rsi
  41101f:	jne    41103f <isspace@plt+0xd72f>
  411021:	mov    rcx,QWORD PTR [r8+0x8]
  411025:	mov    rsi,QWORD PTR [rcx+0x30]
  411029:	test   rcx,rcx
  41102c:	je     41103f <isspace@plt+0xd72f>
  41102e:	add    rsi,QWORD PTR [rcx+0x28]
  411032:	mov    rdi,rsi
  411035:	jmp    411041 <isspace@plt+0xd731>
  411037:	sub    rsi,rdi
  41103a:	test   rcx,rcx
  41103d:	jne    41102e <isspace@plt+0xd71e>
  41103f:	xor    edi,edi
  411041:	mov    rax,QWORD PTR fs:0x28
  41104a:	cmp    rax,QWORD PTR [rsp]
  41104e:	jne    411055 <isspace@plt+0xd745>
  411050:	mov    rax,rdi
  411053:	pop    rcx
  411054:	ret    
  411055:	call   403280 <__stack_chk_fail@plt>
  41105a:	nop    WORD PTR [rax+rax*1+0x0]
  411060:	push   rax
  411061:	mov    rax,QWORD PTR fs:0x28
  41106a:	mov    QWORD PTR [rsp],rax
  41106e:	mov    rax,0xffffffffffffffff
  411075:	test   rsi,rsi
  411078:	je     4110d0 <isspace@plt+0xd7c0>
  41107a:	lea    rcx,[rdi+0x68]
  41107e:	cmp    rcx,rsi
  411081:	jne    41108c <isspace@plt+0xd77c>
  411083:	mov    rax,QWORD PTR [rdi+0xc0]
  41108a:	jmp    4110d0 <isspace@plt+0xd7c0>
  41108c:	mov    r8,QWORD PTR [rdi+0x40]
  411090:	mov    rdi,QWORD PTR [r8+0x10]
  411094:	test   rdi,rdi
  411097:	je     4110d0 <isspace@plt+0xd7c0>
  411099:	xor    ecx,ecx
  41109b:	nop    DWORD PTR [rax+rax*1+0x0]
  4110a0:	mov    r9,QWORD PTR [r8+0x28]
  4110a4:	mov    rdx,QWORD PTR [r8+0x30]
  4110a8:	mov    r8,rdi
  4110ab:	cmp    r9,rsi
  4110ae:	ja     4110b9 <isspace@plt+0xd7a9>
  4110b0:	lea    rdi,[rdx+r9*1]
  4110b4:	cmp    rdi,rsi
  4110b7:	ja     4110c7 <isspace@plt+0xd7b7>
  4110b9:	add    rcx,rdx
  4110bc:	mov    rdi,QWORD PTR [r8+0x10]
  4110c0:	test   rdi,rdi
  4110c3:	jne    4110a0 <isspace@plt+0xd790>
  4110c5:	jmp    4110d0 <isspace@plt+0xd7c0>
  4110c7:	add    rcx,rsi
  4110ca:	sub    rcx,r9
  4110cd:	mov    rax,rcx
  4110d0:	mov    rcx,QWORD PTR fs:0x28
  4110d9:	cmp    rcx,QWORD PTR [rsp]
  4110dd:	jne    4110e1 <isspace@plt+0xd7d1>
  4110df:	pop    rcx
  4110e0:	ret    
  4110e1:	call   403280 <__stack_chk_fail@plt>
  4110e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4110f0:	push   r14
  4110f2:	push   rbx
  4110f3:	sub    rsp,0xd8
  4110fa:	mov    r14,rsi
  4110fd:	mov    rbx,rdi
  411100:	test   al,al
  411102:	je     41113d <isspace@plt+0xd82d>
  411104:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  41110a:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  411110:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  411116:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  41111c:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  411122:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  41112b:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  411134:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  41113d:	mov    QWORD PTR [rsp+0x28],r9
  411142:	mov    QWORD PTR [rsp+0x20],r8
  411147:	mov    QWORD PTR [rsp+0x18],rcx
  41114c:	mov    QWORD PTR [rsp+0x10],rdx
  411151:	mov    rax,QWORD PTR fs:0x28
  41115a:	mov    QWORD PTR [rsp+0xd0],rax
  411162:	mov    rax,rsp
  411165:	mov    QWORD PTR [rsp+0xc0],rax
  41116d:	lea    rax,[rsp+0xf0]
  411175:	mov    QWORD PTR [rsp+0xb8],rax
  41117d:	movabs rax,0x3000000010
  411187:	mov    QWORD PTR [rsp+0xb0],rax
  41118f:	mov    rdi,rbx
  411192:	call   410a90 <isspace@plt+0xd180>
  411197:	lea    rcx,[rsp+0xb0]
  41119f:	mov    rdi,rbx
  4111a2:	mov    rsi,rax
  4111a5:	mov    rdx,r14
  4111a8:	call   4111d0 <isspace@plt+0xd8c0>
  4111ad:	mov    rcx,QWORD PTR fs:0x28
  4111b6:	cmp    rcx,QWORD PTR [rsp+0xd0]
  4111be:	jne    4111cb <isspace@plt+0xd8bb>
  4111c0:	add    rsp,0xd8
  4111c7:	pop    rbx
  4111c8:	pop    r14
  4111ca:	ret    
  4111cb:	call   403280 <__stack_chk_fail@plt>
  4111d0:	push   rbp
  4111d1:	push   r15
  4111d3:	push   r14
  4111d5:	push   r13
  4111d7:	push   r12
  4111d9:	push   rbx
  4111da:	sub    rsp,0x28
  4111de:	mov    rax,rcx
  4111e1:	mov    r12,rdx
  4111e4:	mov    r14,rsi
  4111e7:	mov    r15,rdi
  4111ea:	mov    rcx,QWORD PTR fs:0x28
  4111f3:	mov    QWORD PTR [rsp+0x20],rcx
  4111f8:	mov    rcx,QWORD PTR [rax+0x10]
  4111fc:	mov    QWORD PTR [rsp+0x10],rcx
  411201:	vmovups xmm0,XMMWORD PTR [rax]
  411205:	vmovaps XMMWORD PTR [rsp],xmm0
  41120a:	xor    edi,edi
  41120c:	xor    esi,esi
  41120e:	mov    edx,0x1
  411213:	mov    rcx,0xffffffffffffffff
  41121a:	mov    r8,r12
  41121d:	mov    r9,rax
  411220:	call   4036a0 <__vsnprintf_chk@plt>
  411225:	cmp    eax,0xffffffff
  411228:	je     411284 <isspace@plt+0xd974>
  41122a:	mov    ebx,eax
  41122c:	lea    eax,[rbx+0x1]
  41122f:	movsxd rbp,eax
  411232:	mov    rdi,rbp
  411235:	call   4035e0 <malloc@plt>
  41123a:	mov    r13,rax
  41123d:	test   rax,rax
  411240:	je     411278 <isspace@plt+0xd968>
  411242:	mov    r9,rsp
  411245:	mov    edx,0x1
  41124a:	mov    rcx,0xffffffffffffffff
  411251:	mov    rdi,r13
  411254:	mov    rsi,rbp
  411257:	mov    r8,r12
  41125a:	call   4036a0 <__vsnprintf_chk@plt>
  41125f:	cmp    eax,ebx
  411261:	jne    411278 <isspace@plt+0xd968>
  411263:	movsxd rcx,ebx
  411266:	mov    rdi,r15
  411269:	mov    rsi,r14
  41126c:	mov    rdx,r13
  41126f:	call   40f140 <isspace@plt+0xb830>
  411274:	mov    ebx,eax
  411276:	jmp    41127a <isspace@plt+0xd96a>
  411278:	xor    ebx,ebx
  41127a:	mov    rdi,r13
  41127d:	call   4030d0 <free@plt>
  411282:	jmp    411286 <isspace@plt+0xd976>
  411284:	xor    ebx,ebx
  411286:	mov    rax,QWORD PTR fs:0x28
  41128f:	cmp    rax,QWORD PTR [rsp+0x20]
  411294:	jne    4112a7 <isspace@plt+0xd997>
  411296:	mov    eax,ebx
  411298:	add    rsp,0x28
  41129c:	pop    rbx
  41129d:	pop    r12
  41129f:	pop    r13
  4112a1:	pop    r14
  4112a3:	pop    r15
  4112a5:	pop    rbp
  4112a6:	ret    
  4112a7:	call   403280 <__stack_chk_fail@plt>
  4112ac:	nop    DWORD PTR [rax+0x0]
  4112b0:	push   r15
  4112b2:	push   r14
  4112b4:	push   r12
  4112b6:	push   rbx
  4112b7:	sub    rsp,0x38
  4112bb:	mov    r15,rdx
  4112be:	mov    rdx,QWORD PTR fs:0x28
  4112c7:	mov    QWORD PTR [rsp+0x30],rdx
  4112cc:	test   r15,r15
  4112cf:	je     41135c <isspace@plt+0xda4c>
  4112d5:	mov    rax,rsi
  4112d8:	mov    rcx,rdi
  4112db:	lea    rbx,[rsp+0x8]
  4112e0:	mov    rdi,rbx
  4112e3:	mov    rsi,rcx
  4112e6:	mov    rdx,rax
  4112e9:	call   410760 <isspace@plt+0xce50>
  4112ee:	mov    rdi,rbx
  4112f1:	call   4109d0 <isspace@plt+0xd0c0>
  4112f6:	mov    r12d,0x1
  4112fc:	test   al,al
  4112fe:	je     411353 <isspace@plt+0xda43>
  411300:	lea    r14,[rsp+0x8]
  411305:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41130f:	nop
  411310:	mov    rbx,QWORD PTR [rsp+0x10]
  411315:	mov    rsi,QWORD PTR [rsp+0x18]
  41131a:	sub    rbx,rsi
  41131d:	cmp    rbx,r12
  411320:	cmova  rbx,r12
  411324:	test   rbx,rbx
  411327:	je     41133a <isspace@plt+0xda2a>
  411329:	mov    rdi,r15
  41132c:	mov    rdx,rbx
  41132f:	call   4034e0 <memcpy@plt>
  411334:	add    r15,rbx
  411337:	sub    r12,rbx
  41133a:	mov    rdi,r14
  41133d:	call   410850 <isspace@plt+0xcf40>
  411342:	mov    rdi,r14
  411345:	call   4109d0 <isspace@plt+0xd0c0>
  41134a:	test   r12,r12
  41134d:	je     411353 <isspace@plt+0xda43>
  41134f:	test   al,al
  411351:	jne    411310 <isspace@plt+0xda00>
  411353:	cmp    r12,0x1
  411357:	setne  al
  41135a:	jmp    41135e <isspace@plt+0xda4e>
  41135c:	xor    eax,eax
  41135e:	mov    rcx,QWORD PTR fs:0x28
  411367:	cmp    rcx,QWORD PTR [rsp+0x30]
  41136c:	jne    41137a <isspace@plt+0xda6a>
  41136e:	add    rsp,0x38
  411372:	pop    rbx
  411373:	pop    r12
  411375:	pop    r14
  411377:	pop    r15
  411379:	ret    
  41137a:	call   403280 <__stack_chk_fail@plt>
  41137f:	nop
  411380:	push   r15
  411382:	push   r14
  411384:	push   r13
  411386:	push   r12
  411388:	push   rbx
  411389:	sub    rsp,0x30
  41138d:	mov    r12,rcx
  411390:	mov    r14,rdx
  411393:	mov    rdx,QWORD PTR fs:0x28
  41139c:	mov    QWORD PTR [rsp+0x28],rdx
  4113a1:	test   rcx,rcx
  4113a4:	je     411428 <isspace@plt+0xdb18>
  4113aa:	mov    rax,rsi
  4113ad:	mov    rcx,rdi
  4113b0:	mov    rbx,rsp
  4113b3:	mov    rdi,rbx
  4113b6:	mov    rsi,rcx
  4113b9:	mov    rdx,rax
  4113bc:	call   410760 <isspace@plt+0xce50>
  4113c1:	mov    rdi,rbx
  4113c4:	call   4109d0 <isspace@plt+0xd0c0>
  4113c9:	mov    r13,r14
  4113cc:	test   r14,r14
  4113cf:	je     411423 <isspace@plt+0xdb13>
  4113d1:	mov    r13,r14
  4113d4:	test   al,al
  4113d6:	je     411423 <isspace@plt+0xdb13>
  4113d8:	mov    r15,rsp
  4113db:	mov    r13,r14
  4113de:	xchg   ax,ax
  4113e0:	mov    rbx,QWORD PTR [rsp+0x8]
  4113e5:	mov    rsi,QWORD PTR [rsp+0x10]
  4113ea:	sub    rbx,rsi
  4113ed:	cmp    rbx,r13
  4113f0:	cmova  rbx,r13
  4113f4:	test   rbx,rbx
  4113f7:	je     41140a <isspace@plt+0xdafa>
  4113f9:	mov    rdi,r12
  4113fc:	mov    rdx,rbx
  4113ff:	call   4034e0 <memcpy@plt>
  411404:	add    r12,rbx
  411407:	sub    r13,rbx
  41140a:	mov    rdi,r15
  41140d:	call   410850 <isspace@plt+0xcf40>
  411412:	mov    rdi,r15
  411415:	call   4109d0 <isspace@plt+0xd0c0>
  41141a:	test   r13,r13
  41141d:	je     411423 <isspace@plt+0xdb13>
  41141f:	test   al,al
  411421:	jne    4113e0 <isspace@plt+0xdad0>
  411423:	sub    r14,r13
  411426:	jmp    41142b <isspace@plt+0xdb1b>
  411428:	xor    r14d,r14d
  41142b:	mov    rax,QWORD PTR fs:0x28
  411434:	cmp    rax,QWORD PTR [rsp+0x28]
  411439:	jne    41144c <isspace@plt+0xdb3c>
  41143b:	mov    rax,r14
  41143e:	add    rsp,0x30
  411442:	pop    rbx
  411443:	pop    r12
  411445:	pop    r13
  411447:	pop    r14
  411449:	pop    r15
  41144b:	ret    
  41144c:	call   403280 <__stack_chk_fail@plt>
  411451:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41145b:	nop    DWORD PTR [rax+rax*1+0x0]
  411460:	push   rbp
  411461:	push   r15
  411463:	push   r14
  411465:	push   r13
  411467:	push   r12
  411469:	push   rbx
  41146a:	sub    rsp,0x38
  41146e:	mov    rax,QWORD PTR fs:0x28
  411477:	mov    QWORD PTR [rsp+0x30],rax
  41147c:	cmp    rdx,0xffffffffffffffff
  411480:	je     41152d <isspace@plt+0xdc1d>
  411486:	mov    r15,rdx
  411489:	mov    r12,rsi
  41148c:	mov    rbx,rdi
  41148f:	lea    rdi,[rdx+0x1]
  411493:	call   4035e0 <malloc@plt>
  411498:	test   rax,rax
  41149b:	je     41152d <isspace@plt+0xdc1d>
  4114a1:	mov    r14,rax
  4114a4:	lea    r13,[rsp+0x8]
  4114a9:	mov    rdi,r13
  4114ac:	mov    rsi,rbx
  4114af:	mov    rdx,r12
  4114b2:	call   410760 <isspace@plt+0xce50>
  4114b7:	mov    rdi,r13
  4114ba:	call   4109d0 <isspace@plt+0xd0c0>
  4114bf:	mov    rbp,r15
  4114c2:	test   r15,r15
  4114c5:	je     411523 <isspace@plt+0xdc13>
  4114c7:	mov    rbp,r15
  4114ca:	test   al,al
  4114cc:	je     411523 <isspace@plt+0xdc13>
  4114ce:	lea    r12,[rsp+0x8]
  4114d3:	mov    rbp,r15
  4114d6:	mov    r13,r14
  4114d9:	nop    DWORD PTR [rax+0x0]
  4114e0:	mov    rbx,QWORD PTR [rsp+0x10]
  4114e5:	mov    rsi,QWORD PTR [rsp+0x18]
  4114ea:	sub    rbx,rsi
  4114ed:	cmp    rbx,rbp
  4114f0:	cmova  rbx,rbp
  4114f4:	test   rbx,rbx
  4114f7:	je     41150a <isspace@plt+0xdbfa>
  4114f9:	mov    rdi,r13
  4114fc:	mov    rdx,rbx
  4114ff:	call   4034e0 <memcpy@plt>
  411504:	add    r13,rbx
  411507:	sub    rbp,rbx
  41150a:	mov    rdi,r12
  41150d:	call   410850 <isspace@plt+0xcf40>
  411512:	mov    rdi,r12
  411515:	call   4109d0 <isspace@plt+0xd0c0>
  41151a:	test   rbp,rbp
  41151d:	je     411523 <isspace@plt+0xdc13>
  41151f:	test   al,al
  411521:	jne    4114e0 <isspace@plt+0xdbd0>
  411523:	sub    r15,rbp
  411526:	mov    BYTE PTR [r14+r15*1],0x0
  41152b:	jmp    411530 <isspace@plt+0xdc20>
  41152d:	xor    r14d,r14d
  411530:	mov    rax,QWORD PTR fs:0x28
  411539:	cmp    rax,QWORD PTR [rsp+0x30]
  41153e:	jne    411552 <isspace@plt+0xdc42>
  411540:	mov    rax,r14
  411543:	add    rsp,0x38
  411547:	pop    rbx
  411548:	pop    r12
  41154a:	pop    r13
  41154c:	pop    r14
  41154e:	pop    r15
  411550:	pop    rbp
  411551:	ret    
  411552:	call   403280 <__stack_chk_fail@plt>
  411557:	nop    WORD PTR [rax+rax*1+0x0]
  411560:	push   r15
  411562:	push   r14
  411564:	push   rbx
  411565:	sub    rsp,0x10
  411569:	mov    r14,rdi
  41156c:	mov    rax,QWORD PTR fs:0x28
  411575:	mov    QWORD PTR [rsp+0x8],rax
  41157a:	mov    edi,0x1
  41157f:	mov    esi,0x20
  411584:	call   403470 <calloc@plt>
  411589:	test   rax,rax
  41158c:	je     4115c7 <isspace@plt+0xdcb7>
  41158e:	mov    rbx,rax
  411591:	cmp    r14,0x100000
  411598:	mov    r15d,0x100000
  41159e:	cmova  r15,r14
  4115a2:	mov    rdi,r15
  4115a5:	call   4035e0 <malloc@plt>
  4115aa:	mov    QWORD PTR [rbx+0x10],rax
  4115ae:	test   rax,rax
  4115b1:	je     4115bf <isspace@plt+0xdcaf>
  4115b3:	mov    DWORD PTR [rbx+0x18],0x2
  4115ba:	mov    QWORD PTR [rbx],r15
  4115bd:	jmp    4115c9 <isspace@plt+0xdcb9>
  4115bf:	mov    rdi,rbx
  4115c2:	call   4030d0 <free@plt>
  4115c7:	xor    ebx,ebx
  4115c9:	mov    rax,QWORD PTR fs:0x28
  4115d2:	cmp    rax,QWORD PTR [rsp+0x8]
  4115d7:	jne    4115e6 <isspace@plt+0xdcd6>
  4115d9:	mov    rax,rbx
  4115dc:	add    rsp,0x10
  4115e0:	pop    rbx
  4115e1:	pop    r14
  4115e3:	pop    r15
  4115e5:	ret    
  4115e6:	call   403280 <__stack_chk_fail@plt>
  4115eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4115f0:	push   rbp
  4115f1:	push   r15
  4115f3:	push   r14
  4115f5:	push   r12
  4115f7:	push   rbx
  4115f8:	sub    rsp,0x10
  4115fc:	mov    r12d,esi
  4115ff:	mov    r14,rdi
  411602:	mov    rax,QWORD PTR fs:0x28
  41160b:	mov    QWORD PTR [rsp+0x8],rax
  411610:	mov    edi,0x1
  411615:	mov    esi,0x20
  41161a:	call   403470 <calloc@plt>
  41161f:	test   rax,rax
  411622:	je     4116c9 <isspace@plt+0xddb9>
  411628:	mov    r15,rax
  41162b:	cmp    r14,0x100000
  411632:	mov    ebp,0x100000
  411637:	cmova  rbp,r14
  41163b:	mov    rdi,rbp
  41163e:	call   4035e0 <malloc@plt>
  411643:	mov    QWORD PTR [r15+0x10],rax
  411647:	test   rax,rax
  41164a:	je     4116c1 <isspace@plt+0xddb1>
  41164c:	mov    DWORD PTR [r15+0x18],0x2
  411654:	mov    QWORD PTR [r15],rbp
  411657:	test   r14,r14
  41165a:	je     411691 <isspace@plt+0xdd81>
  41165c:	mov    rbx,rax
  41165f:	mov    rbp,r14
  411662:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41166c:	nop    DWORD PTR [rax+0x0]
  411670:	mov    edi,r12d
  411673:	mov    rsi,rbx
  411676:	mov    rdx,rbp
  411679:	call   403420 <read@plt>
  41167e:	test   rax,rax
  411681:	je     411693 <isspace@plt+0xdd83>
  411683:	cmp    rax,0xffffffffffffffff
  411687:	je     41169c <isspace@plt+0xdd8c>
  411689:	add    rbx,rax
  41168c:	sub    rbp,rax
  41168f:	jne    411670 <isspace@plt+0xdd60>
  411691:	xor    ebp,ebp
  411693:	sub    r14,rbp
  411696:	mov    QWORD PTR [r15+0x8],r14
  41169a:	jmp    4116cc <isspace@plt+0xddbc>
  41169c:	cmp    DWORD PTR [r15+0x18],0x2
  4116a1:	jae    4116b6 <isspace@plt+0xdda6>
  4116a3:	mov    rdi,QWORD PTR [r15+0x10]
  4116a7:	test   rdi,rdi
  4116aa:	je     4116c1 <isspace@plt+0xddb1>
  4116ac:	mov    rsi,QWORD PTR [r15]
  4116af:	call   4036d0 <munmap@plt>
  4116b4:	jmp    4116c1 <isspace@plt+0xddb1>
  4116b6:	jne    4116c1 <isspace@plt+0xddb1>
  4116b8:	mov    rdi,QWORD PTR [r15+0x10]
  4116bc:	call   4030d0 <free@plt>
  4116c1:	mov    rdi,r15
  4116c4:	call   4030d0 <free@plt>
  4116c9:	xor    r15d,r15d
  4116cc:	mov    rax,QWORD PTR fs:0x28
  4116d5:	cmp    rax,QWORD PTR [rsp+0x8]
  4116da:	jne    4116ec <isspace@plt+0xdddc>
  4116dc:	mov    rax,r15
  4116df:	add    rsp,0x10
  4116e3:	pop    rbx
  4116e4:	pop    r12
  4116e6:	pop    r14
  4116e8:	pop    r15
  4116ea:	pop    rbp
  4116eb:	ret    
  4116ec:	call   403280 <__stack_chk_fail@plt>
  4116f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4116fb:	nop    DWORD PTR [rax+rax*1+0x0]
  411700:	push   rbx
  411701:	sub    rsp,0x10
  411705:	mov    rax,QWORD PTR fs:0x28
  41170e:	mov    QWORD PTR [rsp+0x8],rax
  411713:	test   rdi,rdi
  411716:	je     411747 <isspace@plt+0xde37>
  411718:	mov    rbx,rdi
  41171b:	cmp    DWORD PTR [rdi+0x18],0x2
  41171f:	jae    411734 <isspace@plt+0xde24>
  411721:	mov    rdi,QWORD PTR [rbx+0x10]
  411725:	test   rdi,rdi
  411728:	je     41173f <isspace@plt+0xde2f>
  41172a:	mov    rsi,QWORD PTR [rbx]
  41172d:	call   4036d0 <munmap@plt>
  411732:	jmp    41173f <isspace@plt+0xde2f>
  411734:	jne    41173f <isspace@plt+0xde2f>
  411736:	mov    rdi,QWORD PTR [rbx+0x10]
  41173a:	call   4030d0 <free@plt>
  41173f:	mov    rdi,rbx
  411742:	call   4030d0 <free@plt>
  411747:	mov    rax,QWORD PTR fs:0x28
  411750:	cmp    rax,QWORD PTR [rsp+0x8]
  411755:	jne    41175d <isspace@plt+0xde4d>
  411757:	add    rsp,0x10
  41175b:	pop    rbx
  41175c:	ret    
  41175d:	call   403280 <__stack_chk_fail@plt>
  411762:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41176c:	nop    DWORD PTR [rax+0x0]
  411770:	push   rbp
  411771:	push   r15
  411773:	push   r14
  411775:	push   r12
  411777:	push   rbx
  411778:	sub    rsp,0x10
  41177c:	mov    rbp,rcx
  41177f:	mov    r15d,edx
  411782:	mov    rax,QWORD PTR fs:0x28
  41178b:	mov    QWORD PTR [rsp+0x8],rax
  411790:	xor    ebx,ebx
  411792:	xor    edx,edx
  411794:	xor    eax,eax
  411796:	call   403260 <openat@plt>
  41179b:	cmp    eax,0xffffffff
  41179e:	je     411816 <isspace@plt+0xdf06>
  4117a0:	mov    r12d,eax
  4117a3:	mov    edi,0x1
  4117a8:	mov    esi,eax
  4117aa:	mov    rdx,rbp
  4117ad:	call   403610 <__fxstat@plt>
  4117b2:	cmp    eax,0xffffffff
  4117b5:	je     41180c <isspace@plt+0xdefc>
  4117b7:	mov    eax,0xf000
  4117bc:	and    eax,DWORD PTR [rbp+0x18]
  4117bf:	cmp    eax,0x8000
  4117c4:	jne    4117f3 <isspace@plt+0xdee3>
  4117c6:	mov    r14,QWORD PTR [rbp+0x30]
  4117ca:	test   r14,r14
  4117cd:	je     41180c <isspace@plt+0xdefc>
  4117cf:	cmp    r15d,0x1
  4117d3:	je     4117e3 <isspace@plt+0xded3>
  4117d5:	test   r15d,r15d
  4117d8:	jne    411836 <isspace@plt+0xdf26>
  4117da:	cmp    r14,0x3ffffff
  4117e1:	ja     411836 <isspace@plt+0xdf26>
  4117e3:	mov    rdi,r14
  4117e6:	mov    esi,r12d
  4117e9:	call   4115f0 <isspace@plt+0xdce0>
  4117ee:	mov    rbx,rax
  4117f1:	jmp    41180e <isspace@plt+0xdefe>
  4117f3:	cmp    eax,0x4000
  4117f8:	mov    eax,0x15
  4117fd:	mov    ebx,0x5f
  411802:	cmove  ebx,eax
  411805:	call   403130 <__errno_location@plt>
  41180a:	mov    DWORD PTR [rax],ebx
  41180c:	xor    ebx,ebx
  41180e:	mov    edi,r12d
  411811:	call   4033c0 <close@plt>
  411816:	mov    rax,QWORD PTR fs:0x28
  41181f:	cmp    rax,QWORD PTR [rsp+0x8]
  411824:	jne    411884 <isspace@plt+0xdf74>
  411826:	mov    rax,rbx
  411829:	add    rsp,0x10
  41182d:	pop    rbx
  41182e:	pop    r12
  411830:	pop    r14
  411832:	pop    r15
  411834:	pop    rbp
  411835:	ret    
  411836:	mov    edi,0x1
  41183b:	mov    esi,0x20
  411840:	call   403470 <calloc@plt>
  411845:	test   rax,rax
  411848:	je     41180c <isspace@plt+0xdefc>
  41184a:	mov    rbx,rax
  41184d:	xor    edi,edi
  41184f:	mov    edx,0x1
  411854:	mov    ecx,0x1
  411859:	xor    r9d,r9d
  41185c:	mov    rsi,r14
  41185f:	mov    r8d,r12d
  411862:	call   4032a0 <mmap@plt>
  411867:	mov    QWORD PTR [rbx+0x10],rax
  41186b:	cmp    rax,0xffffffffffffffff
  41186f:	je     41187a <isspace@plt+0xdf6a>
  411871:	mov    QWORD PTR [rbx],r14
  411874:	mov    QWORD PTR [rbx+0x8],r14
  411878:	jmp    41180e <isspace@plt+0xdefe>
  41187a:	mov    rdi,rbx
  41187d:	call   4030d0 <free@plt>
  411882:	jmp    41180c <isspace@plt+0xdefc>
  411884:	call   403280 <__stack_chk_fail@plt>
  411889:	nop    DWORD PTR [rax+0x0]
  411890:	push   rax
  411891:	mov    rax,QWORD PTR fs:0x28
  41189a:	mov    QWORD PTR [rsp],rax
  41189e:	mov    rax,QWORD PTR [rdi]
  4118a1:	sub    rax,QWORD PTR [rdi+0x8]
  4118a5:	cmp    rax,rsi
  4118a8:	setae  al
  4118ab:	mov    rcx,QWORD PTR fs:0x28
  4118b4:	cmp    rcx,QWORD PTR [rsp]
  4118b8:	jne    4118bc <isspace@plt+0xdfac>
  4118ba:	pop    rcx
  4118bb:	ret    
  4118bc:	call   403280 <__stack_chk_fail@plt>
  4118c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4118cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4118d0:	push   r15
  4118d2:	push   r14
  4118d4:	push   rbx
  4118d5:	sub    rsp,0x10
  4118d9:	mov    r14,rdx
  4118dc:	mov    r15,rdi
  4118df:	mov    rax,QWORD PTR fs:0x28
  4118e8:	mov    QWORD PTR [rsp+0x8],rax
  4118ed:	mov    rbx,QWORD PTR [rdi+0x10]
  4118f1:	add    rbx,QWORD PTR [rdi+0x8]
  4118f5:	mov    rdi,rbx
  4118f8:	call   4034e0 <memcpy@plt>
  4118fd:	add    QWORD PTR [r15+0x8],r14
  411901:	mov    rax,QWORD PTR fs:0x28
  41190a:	cmp    rax,QWORD PTR [rsp+0x8]
  41190f:	jne    41191e <isspace@plt+0xe00e>
  411911:	mov    rax,rbx
  411914:	add    rsp,0x10
  411918:	pop    rbx
  411919:	pop    r14
  41191b:	pop    r15
  41191d:	ret    
  41191e:	call   403280 <__stack_chk_fail@plt>
  411923:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41192d:	nop    DWORD PTR [rax]
  411930:	push   r15
  411932:	push   r14
  411934:	push   r12
  411936:	push   rbx
  411937:	push   rax
  411938:	mov    r15,rdx
  41193b:	mov    rax,QWORD PTR fs:0x28
  411944:	mov    QWORD PTR [rsp],rax
  411948:	mov    rdx,QWORD PTR [rdi+0x8]
  41194c:	cmp    rdx,rsi
  41194f:	jb     411962 <isspace@plt+0xe052>
  411951:	mov    r14,rcx
  411954:	mov    rbx,rdi
  411957:	mov    rax,QWORD PTR [rdi]
  41195a:	sub    rax,rdx
  41195d:	cmp    rax,rcx
  411960:	jae    41197f <isspace@plt+0xe06f>
  411962:	xor    eax,eax
  411964:	mov    rcx,QWORD PTR fs:0x28
  41196d:	cmp    rcx,QWORD PTR [rsp]
  411971:	jne    4119c7 <isspace@plt+0xe0b7>
  411973:	add    rsp,0x8
  411977:	pop    rbx
  411978:	pop    r12
  41197a:	pop    r14
  41197c:	pop    r15
  41197e:	ret    
  41197f:	mov    r12,QWORD PTR [rbx+0x10]
  411983:	add    r12,rsi
  411986:	sub    rdx,rsi
  411989:	jne    4119a5 <isspace@plt+0xe095>
  41198b:	mov    rdi,r12
  41198e:	mov    rsi,r15
  411991:	mov    rdx,r14
  411994:	call   4034e0 <memcpy@plt>
  411999:	add    QWORD PTR [rbx+0x8],r14
  41199d:	test   r12,r12
  4119a0:	setne  al
  4119a3:	jmp    411964 <isspace@plt+0xe054>
  4119a5:	lea    rdi,[r12+r14*1]
  4119a9:	mov    rsi,r12
  4119ac:	call   403750 <memmove@plt>
  4119b1:	mov    rdi,r12
  4119b4:	mov    rsi,r15
  4119b7:	mov    rdx,r14
  4119ba:	call   4034e0 <memcpy@plt>
  4119bf:	add    QWORD PTR [rbx+0x8],r14
  4119c3:	mov    al,0x1
  4119c5:	jmp    411964 <isspace@plt+0xe054>
  4119c7:	call   403280 <__stack_chk_fail@plt>
  4119cc:	nop    DWORD PTR [rax+0x0]
  4119d0:	push   r14
  4119d2:	push   rbx
  4119d3:	push   rax
  4119d4:	mov    rax,QWORD PTR fs:0x28
  4119dd:	mov    QWORD PTR [rsp],rax
  4119e1:	mov    rax,rsi
  4119e4:	not    rax
  4119e7:	cmp    rax,rdx
  4119ea:	jb     411a02 <isspace@plt+0xe0f2>
  4119ec:	mov    rbx,rdx
  4119ef:	mov    r14,rdi
  4119f2:	lea    rcx,[rdx+rsi*1]
  4119f6:	mov    rax,QWORD PTR [rdi+0x8]
  4119fa:	mov    rdx,rax
  4119fd:	sub    rdx,rcx
  411a00:	jae    411a06 <isspace@plt+0xe0f6>
  411a02:	xor    eax,eax
  411a04:	jmp    411a2d <isspace@plt+0xe11d>
  411a06:	cmp    rax,rsi
  411a09:	jne    411a14 <isspace@plt+0xe104>
  411a0b:	sub    rsi,rbx
  411a0e:	mov    QWORD PTR [r14+0x8],rsi
  411a12:	jmp    411a2b <isspace@plt+0xe11b>
  411a14:	add    rsi,QWORD PTR [r14+0x10]
  411a18:	lea    rax,[rsi+rbx*1]
  411a1c:	mov    rdi,rsi
  411a1f:	mov    rsi,rax
  411a22:	call   403750 <memmove@plt>
  411a27:	sub    QWORD PTR [r14+0x8],rbx
  411a2b:	mov    al,0x1
  411a2d:	mov    rcx,QWORD PTR fs:0x28
  411a36:	cmp    rcx,QWORD PTR [rsp]
  411a3a:	jne    411a44 <isspace@plt+0xe134>
  411a3c:	add    rsp,0x8
  411a40:	pop    rbx
  411a41:	pop    r14
  411a43:	ret    
  411a44:	call   403280 <__stack_chk_fail@plt>
  411a49:	nop    DWORD PTR [rax+0x0]
  411a50:	push   rax
  411a51:	mov    rax,rdi
  411a54:	mov    rcx,QWORD PTR fs:0x28
  411a5d:	mov    QWORD PTR [rsp],rcx
  411a61:	mov    edi,0xffffff9c
  411a66:	xor    edx,edx
  411a68:	mov    rsi,rax
  411a6b:	call   40fca0 <isspace@plt+0xc390>
  411a70:	mov    rcx,QWORD PTR fs:0x28
  411a79:	cmp    rcx,QWORD PTR [rsp]
  411a7d:	jne    411a81 <isspace@plt+0xe171>
  411a7f:	pop    rcx
  411a80:	ret    
  411a81:	call   403280 <__stack_chk_fail@plt>
  411a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411a90:	push   rax
  411a91:	mov    eax,esi
  411a93:	mov    rcx,rdi
  411a96:	mov    rdx,QWORD PTR fs:0x28
  411a9f:	mov    QWORD PTR [rsp],rdx
  411aa3:	mov    edi,0xffffff9c
  411aa8:	mov    rsi,rcx
  411aab:	mov    edx,eax
  411aad:	call   40fca0 <isspace@plt+0xc390>
  411ab2:	mov    rcx,QWORD PTR fs:0x28
  411abb:	cmp    rcx,QWORD PTR [rsp]
  411abf:	jne    411ac3 <isspace@plt+0xe1b3>
  411ac1:	pop    rcx
  411ac2:	ret    
  411ac3:	call   403280 <__stack_chk_fail@plt>
  411ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  411ad0:	push   rbp
  411ad1:	mov    rbp,rsp
  411ad4:	push   r15
  411ad6:	push   r14
  411ad8:	push   r13
  411ada:	push   r12
  411adc:	push   rbx
  411add:	and    rsp,0xffffffffffffffe0
  411ae1:	sub    rsp,0x1c0
  411ae8:	mov    rax,QWORD PTR fs:0x28
  411af1:	mov    QWORD PTR [rsp+0x1a0],rax
  411af9:	test   rdx,rdx
  411afc:	je     41208f <isspace@plt+0xe77f>
  411b02:	mov    r15d,ecx
  411b05:	mov    rbx,rdx
  411b08:	mov    r12d,esi
  411b0b:	mov    r13,rdi
  411b0e:	mov    edi,0x1
  411b13:	mov    esi,0x28
  411b18:	call   403470 <calloc@plt>
  411b1d:	test   rax,rax
  411b20:	je     41208f <isspace@plt+0xe77f>
  411b26:	mov    r14,rax
  411b29:	mov    QWORD PTR [rax],r13
  411b2c:	mov    DWORD PTR [rax+0x18],0xffffffff
  411b33:	mov    DWORD PTR [rax+0x1c],r12d
  411b37:	mov    rdi,rbx
  411b3a:	call   403850 <strdup@plt>
  411b3f:	mov    QWORD PTR [r14+0x8],rax
  411b43:	test   rax,rax
  411b46:	je     412087 <isspace@plt+0xe777>
  411b4c:	mov    rbx,rax
  411b4f:	call   403130 <__errno_location@plt>
  411b54:	mov    r12,rax
  411b57:	mov    DWORD PTR [rax],0x0
  411b5d:	mov    al,0x1
  411b5f:	cmp    r15d,0x1
  411b63:	ja     411e7d <isspace@plt+0xe56d>
  411b69:	mov    edi,DWORD PTR [r14+0x1c]
  411b6d:	xor    edx,edx
  411b6f:	xor    eax,eax
  411b71:	mov    rsi,rbx
  411b74:	call   403260 <openat@plt>
  411b79:	mov    r13d,eax
  411b7c:	cmp    eax,0xffffffff
  411b7f:	je     411c0d <isspace@plt+0xe2fd>
  411b85:	vxorps xmm0,xmm0,xmm0
  411b89:	vmovups YMMWORD PTR [rsp+0x170],ymm0
  411b92:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  411b9b:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  411ba4:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  411bad:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  411bb6:	mov    esi,DWORD PTR [r14+0x1c]
  411bba:	mov    rdx,QWORD PTR [r14+0x8]
  411bbe:	lea    rcx,[rsp+0x100]
  411bc6:	mov    edi,0x1
  411bcb:	mov    r8d,0x100
  411bd1:	vzeroupper 
  411bd4:	call   403310 <__fxstatat@plt>
  411bd9:	cmp    eax,0xffffffff
  411bdc:	je     411bfc <isspace@plt+0xe2ec>
  411bde:	mov    eax,0xf000
  411be3:	and    eax,DWORD PTR [rsp+0x118]
  411bea:	cmp    eax,0xa000
  411bef:	je     411bfc <isspace@plt+0xe2ec>
  411bf1:	cmp    QWORD PTR [rsp+0x110],0x1
  411bfa:	jbe    411c4b <isspace@plt+0xe33b>
  411bfc:	mov    ebx,DWORD PTR [r12]
  411c00:	mov    edi,r13d
  411c03:	call   4033c0 <close@plt>
  411c08:	jmp    411e4a <isspace@plt+0xe53a>
  411c0d:	mov    ebx,DWORD PTR [r12]
  411c11:	cmp    ebx,0x2
  411c14:	jne    411e4a <isspace@plt+0xe53a>
  411c1a:	vxorps xmm0,xmm0,xmm0
  411c1e:	vmovups YMMWORD PTR [rsp+0x170],ymm0
  411c27:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  411c30:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  411c39:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  411c42:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  411c4b:	mov    DWORD PTR [rsp+0x1c],r13d
  411c50:	mov    QWORD PTR [rsp+0x20],r12
  411c55:	movabs rax,0x5858582e7369762e
  411c5f:	mov    QWORD PTR [rsp+0x70],rax
  411c64:	mov    DWORD PTR [rsp+0x78],0x585858
  411c6c:	mov    rbx,QWORD PTR [r14+0x8]
  411c70:	mov    rdi,rbx
  411c73:	vzeroupper 
  411c76:	call   403250 <strlen@plt>
  411c7b:	mov    r12,rax
  411c7e:	add    r12,0x10
  411c82:	mov    rdi,rbx
  411c85:	call   403850 <strdup@plt>
  411c8a:	mov    r13,rax
  411c8d:	mov    rdi,QWORD PTR [r14+0x8]
  411c91:	call   403850 <strdup@plt>
  411c96:	mov    rbx,rax
  411c99:	mov    rdi,r12
  411c9c:	call   4035e0 <malloc@plt>
  411ca1:	mov    rdi,r13
  411ca4:	mov    QWORD PTR [r14+0x10],rax
  411ca8:	test   rbx,rbx
  411cab:	je     411d40 <isspace@plt+0xe430>
  411cb1:	test   rdi,rdi
  411cb4:	je     411d40 <isspace@plt+0xe430>
  411cba:	mov    r13,rax
  411cbd:	test   rax,rax
  411cc0:	je     411d40 <isspace@plt+0xe430>
  411cc2:	mov    QWORD PTR [rsp+0x28],rdi
  411cc7:	call   403350 <dirname@plt>
  411ccc:	mov    QWORD PTR [rsp+0x30],rax
  411cd1:	mov    rdi,rbx
  411cd4:	call   403510 <__xpg_basename@plt>
  411cd9:	mov    QWORD PTR [rsp+0x38],rbx
  411cde:	mov    rbx,rax
  411ce1:	lea    r10,[rsp+0x70]
  411ce6:	lea    r8,[rip+0x1f981]        # 43166e <isspace@plt+0x2dd5e>
  411ced:	mov    edx,0x1
  411cf2:	mov    rcx,0xffffffffffffffff
  411cf9:	xor    eax,eax
  411cfb:	mov    rdi,r13
  411cfe:	mov    rsi,r12
  411d01:	mov    r9,QWORD PTR [rsp+0x30]
  411d06:	push   r10
  411d08:	push   rbx
  411d09:	call   4030c0 <__snprintf_chk@plt>
  411d0e:	add    rsp,0x10
  411d12:	mov    rdi,QWORD PTR [rsp+0x28]
  411d17:	call   4030d0 <free@plt>
  411d1c:	mov    rdi,QWORD PTR [rsp+0x38]
  411d21:	call   4030d0 <free@plt>
  411d26:	mov    ebx,DWORD PTR [r14+0x1c]
  411d2a:	mov    r12,QWORD PTR [r14+0x10]
  411d2e:	cmp    ebx,0xffffff9c
  411d31:	jne    411d57 <isspace@plt+0xe447>
  411d33:	mov    rdi,r12
  411d36:	call   403650 <mkstemp@plt>
  411d3b:	mov    r12d,eax
  411d3e:	jmp    411dab <isspace@plt+0xe49b>
  411d40:	call   4030d0 <free@plt>
  411d45:	mov    rdi,rbx
  411d48:	call   4030d0 <free@plt>
  411d4d:	mov    r13d,DWORD PTR [rsp+0x1c]
  411d52:	jmp    411e37 <isspace@plt+0xe527>
  411d57:	lea    rdi,[rip+0x1ddd3]        # 42fb31 <isspace@plt+0x2c221>
  411d5e:	mov    esi,0x10000
  411d63:	xor    eax,eax
  411d65:	call   4037a0 <open@plt>
  411d6a:	cmp    eax,0xffffffff
  411d6d:	je     411d8b <isspace@plt+0xe47b>
  411d6f:	mov    r13d,eax
  411d72:	mov    edi,ebx
  411d74:	call   403670 <fchdir@plt>
  411d79:	cmp    eax,0xffffffff
  411d7c:	je     411d95 <isspace@plt+0xe485>
  411d7e:	mov    rdi,r12
  411d81:	call   403650 <mkstemp@plt>
  411d86:	mov    r12d,eax
  411d89:	jmp    411d9b <isspace@plt+0xe48b>
  411d8b:	mov    DWORD PTR [r14+0x18],0xffffffff
  411d93:	jmp    411d4d <isspace@plt+0xe43d>
  411d95:	mov    r12d,0xffffffff
  411d9b:	mov    edi,r13d
  411d9e:	call   403670 <fchdir@plt>
  411da3:	mov    edi,r13d
  411da6:	call   4033c0 <close@plt>
  411dab:	mov    r13d,DWORD PTR [rsp+0x1c]
  411db0:	mov    DWORD PTR [r14+0x18],r12d
  411db4:	cmp    r12d,0xffffffff
  411db8:	je     411e37 <isspace@plt+0xe527>
  411dba:	cmp    r13d,0xffffffff
  411dbe:	je     4120bb <isspace@plt+0xe7ab>
  411dc4:	mov    esi,DWORD PTR [rsp+0x118]
  411dcb:	mov    edi,r12d
  411dce:	call   403710 <fchmod@plt>
  411dd3:	cmp    eax,0xffffffff
  411dd6:	mov    r12,QWORD PTR [rsp+0x20]
  411ddb:	je     411bfc <isspace@plt+0xe2ec>
  411de1:	mov    ebx,DWORD PTR [r14+0x18]
  411de5:	mov    QWORD PTR [rsp+0x40],0x0
  411dee:	call   403620 <is_selinux_enabled@plt>
  411df3:	test   eax,eax
  411df5:	je     412117 <isspace@plt+0xe807>
  411dfb:	lea    rsi,[rsp+0x40]
  411e00:	mov    edi,r13d
  411e03:	call   403080 <fgetfilecon@plt>
  411e08:	cmp    eax,0xffffffff
  411e0b:	je     41210c <isspace@plt+0xe7fc>
  411e11:	mov    rsi,QWORD PTR [rsp+0x40]
  411e16:	mov    edi,ebx
  411e18:	call   403830 <fsetfilecon@plt>
  411e1d:	mov    ebx,eax
  411e1f:	mov    rdi,QWORD PTR [rsp+0x40]
  411e24:	call   4032e0 <freecon@plt>
  411e29:	cmp    ebx,0xffffffff
  411e2c:	jne    412117 <isspace@plt+0xe807>
  411e32:	jmp    411bfc <isspace@plt+0xe2ec>
  411e37:	mov    r12,QWORD PTR [rsp+0x20]
  411e3c:	mov    ebx,DWORD PTR [r12]
  411e40:	cmp    r13d,0xffffffff
  411e44:	jne    411c00 <isspace@plt+0xe2f0>
  411e4a:	mov    edi,DWORD PTR [r14+0x18]
  411e4e:	cmp    edi,0xffffffff
  411e51:	je     411e58 <isspace@plt+0xe548>
  411e53:	call   4033c0 <close@plt>
  411e58:	mov    DWORD PTR [r14+0x18],0xffffffff
  411e60:	mov    rdi,QWORD PTR [r14+0x10]
  411e64:	call   4030d0 <free@plt>
  411e69:	mov    QWORD PTR [r14+0x10],0x0
  411e71:	mov    DWORD PTR [r12],ebx
  411e75:	cmp    DWORD PTR [r12],0x1c
  411e7a:	setne  al
  411e7d:	or     r15d,0x2
  411e81:	cmp    r15d,0x2
  411e85:	jne    412087 <isspace@plt+0xe777>
  411e8b:	test   al,al
  411e8d:	je     412087 <isspace@plt+0xe777>
  411e93:	mov    r15,QWORD PTR [r14]
  411e96:	vxorps xmm0,xmm0,xmm0
  411e9a:	vmovups YMMWORD PTR [rsp+0x170],ymm0
  411ea3:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  411eac:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  411eb5:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  411ebe:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  411ec7:	mov    edi,DWORD PTR [r14+0x1c]
  411ecb:	mov    rsi,QWORD PTR [r14+0x8]
  411ecf:	mov    edx,0x41
  411ed4:	mov    ecx,0x1b6
  411ed9:	xor    eax,eax
  411edb:	vzeroupper 
  411ede:	call   403260 <openat@plt>
  411ee3:	mov    DWORD PTR [r14+0x18],eax
  411ee7:	cmp    eax,0xffffffff
  411eea:	je     412069 <isspace@plt+0xe759>
  411ef0:	lea    rdx,[rsp+0x100]
  411ef8:	mov    edi,0x1
  411efd:	mov    esi,eax
  411eff:	call   403610 <__fxstat@plt>
  411f04:	cmp    eax,0xffffffff
  411f07:	je     412069 <isspace@plt+0xe759>
  411f0d:	lea    rdi,[rsp+0x70]
  411f12:	mov    rsi,r15
  411f15:	call   4100a0 <isspace@plt+0xc790>
  411f1a:	mov    rdi,r15
  411f1d:	call   4101c0 <isspace@plt+0xc8b0>
  411f22:	test   rax,rax
  411f25:	je     41204f <isspace@plt+0xe73f>
  411f2b:	mov    r15,rax
  411f2e:	mov    rax,QWORD PTR [rsp+0x100]
  411f36:	cmp    rax,QWORD PTR [rsp+0x70]
  411f3b:	jne    41204f <isspace@plt+0xe73f>
  411f41:	mov    rax,QWORD PTR [rsp+0x108]
  411f49:	cmp    rax,QWORD PTR [rsp+0x78]
  411f4e:	jne    41204f <isspace@plt+0xe73f>
  411f54:	mov    rbx,QWORD PTR [r15]
  411f57:	vmovups ymm0,YMMWORD PTR [rip+0x1f721]        # 431680 <isspace@plt+0x2dd70>
  411f5f:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  411f65:	lea    rdi,[rsp+0x40]
  411f6a:	vzeroupper 
  411f6d:	call   403650 <mkstemp@plt>
  411f72:	mov    DWORD PTR [rsp+0x1c],eax
  411f76:	cmp    eax,0xffffffff
  411f79:	je     412069 <isspace@plt+0xe759>
  411f7f:	lea    rdi,[rsp+0x40]
  411f84:	call   403140 <unlink@plt>
  411f89:	cmp    eax,0xffffffff
  411f8c:	je     4120fa <isspace@plt+0xe7ea>
  411f92:	mov    QWORD PTR [rsp+0x20],r12
  411f97:	test   rbx,rbx
  411f9a:	mov    QWORD PTR [rsp+0x28],rbx
  411f9f:	je     411fed <isspace@plt+0xe6dd>
  411fa1:	mov    r13,QWORD PTR [r15+0x10]
  411fa5:	cmp    rbx,0x7fffffff
  411fac:	mov    r12d,0x7fffffff
  411fb2:	cmovb  r12,rbx
  411fb6:	mov    edi,DWORD PTR [rsp+0x1c]
  411fba:	mov    rsi,r13
  411fbd:	mov    rdx,r12
  411fc0:	call   4031f0 <write@plt>
  411fc5:	test   rax,rax
  411fc8:	jns    411fe0 <isspace@plt+0xe6d0>
  411fca:	mov    rax,QWORD PTR [rsp+0x20]
  411fcf:	mov    eax,DWORD PTR [rax]
  411fd1:	cmp    eax,0xb
  411fd4:	je     411fb6 <isspace@plt+0xe6a6>
  411fd6:	cmp    eax,0x4
  411fd9:	je     411fb6 <isspace@plt+0xe6a6>
  411fdb:	jmp    4120f5 <isspace@plt+0xe7e5>
  411fe0:	test   rax,rax
  411fe3:	je     411fef <isspace@plt+0xe6df>
  411fe5:	add    r13,rax
  411fe8:	sub    rbx,rax
  411feb:	jne    411fa5 <isspace@plt+0xe695>
  411fed:	xor    ebx,ebx
  411fef:	test   rbx,rbx
  411ff2:	jne    4120f5 <isspace@plt+0xe7e5>
  411ff8:	mov    rax,QWORD PTR [rsp+0x28]
  411ffd:	sub    rax,rbx
  412000:	cmp    rax,0xffffffffffffffff
  412004:	je     4120f5 <isspace@plt+0xe7e5>
  41200a:	mov    rdi,QWORD PTR [r15+0x10]
  41200e:	mov    edx,0x1
  412013:	mov    ecx,0x11
  412018:	xor    r9d,r9d
  41201b:	mov    rsi,QWORD PTR [rsp+0x28]
  412020:	mov    r8d,DWORD PTR [rsp+0x1c]
  412025:	call   4032a0 <mmap@plt>
  41202a:	cmp    rax,0xffffffffffffffff
  41202e:	je     4120f5 <isspace@plt+0xe7e5>
  412034:	mov    edi,DWORD PTR [rsp+0x1c]
  412038:	call   4033c0 <close@plt>
  41203d:	cmp    eax,0xffffffff
  412040:	mov    r12,QWORD PTR [rsp+0x20]
  412045:	je     412069 <isspace@plt+0xe759>
  412047:	mov    DWORD PTR [r15+0x18],0x1
  41204f:	mov    edi,DWORD PTR [r14+0x18]
  412053:	xor    esi,esi
  412055:	call   403340 <ftruncate@plt>
  41205a:	cmp    eax,0xffffffff
  41205d:	je     412069 <isspace@plt+0xe759>
  41205f:	mov    DWORD PTR [r14+0x20],0x2
  412067:	jmp    412092 <isspace@plt+0xe782>
  412069:	mov    ebx,DWORD PTR [r12]
  41206d:	mov    edi,DWORD PTR [r14+0x18]
  412071:	cmp    edi,0xffffffff
  412074:	je     41207b <isspace@plt+0xe76b>
  412076:	call   4033c0 <close@plt>
  41207b:	mov    DWORD PTR [r14+0x18],0xffffffff
  412083:	mov    DWORD PTR [r12],ebx
  412087:	mov    rdi,r14
  41208a:	call   412190 <isspace@plt+0xe880>
  41208f:	xor    r14d,r14d
  412092:	mov    rax,QWORD PTR fs:0x28
  41209b:	cmp    rax,QWORD PTR [rsp+0x1a0]
  4120a3:	jne    412188 <isspace@plt+0xe878>
  4120a9:	mov    rax,r14
  4120ac:	lea    rsp,[rbp-0x28]
  4120b0:	pop    rbx
  4120b1:	pop    r12
  4120b3:	pop    r13
  4120b5:	pop    r14
  4120b7:	pop    r15
  4120b9:	pop    rbp
  4120ba:	ret    
  4120bb:	xor    edi,edi
  4120bd:	call   4034b0 <umask@plt>
  4120c2:	mov    ebx,eax
  4120c4:	not    ebx
  4120c6:	mov    edi,eax
  4120c8:	call   4034b0 <umask@plt>
  4120cd:	mov    edi,DWORD PTR [r14+0x18]
  4120d1:	and    ebx,0x1b6
  4120d7:	mov    esi,ebx
  4120d9:	call   403710 <fchmod@plt>
  4120de:	cmp    eax,0xffffffff
  4120e1:	jne    41217b <isspace@plt+0xe86b>
  4120e7:	mov    r12,QWORD PTR [rsp+0x20]
  4120ec:	mov    ebx,DWORD PTR [r12]
  4120f0:	jmp    411e4a <isspace@plt+0xe53a>
  4120f5:	mov    r12,QWORD PTR [rsp+0x20]
  4120fa:	mov    ebx,DWORD PTR [r12]
  4120fe:	mov    edi,DWORD PTR [rsp+0x1c]
  412102:	call   4033c0 <close@plt>
  412107:	jmp    41206d <isspace@plt+0xe75d>
  41210c:	cmp    DWORD PTR [r12],0x5f
  412111:	jne    411bfc <isspace@plt+0xe2ec>
  412117:	mov    ebx,DWORD PTR [rsp+0x11c]
  41211e:	call   403290 <getuid@plt>
  412123:	cmp    ebx,eax
  412125:	je     412145 <isspace@plt+0xe835>
  412127:	mov    edi,DWORD PTR [r14+0x18]
  41212b:	mov    esi,DWORD PTR [rsp+0x11c]
  412132:	mov    edx,0xffffffff
  412137:	call   4037b0 <fchown@plt>
  41213c:	cmp    eax,0xffffffff
  41213f:	je     411bfc <isspace@plt+0xe2ec>
  412145:	mov    ebx,DWORD PTR [rsp+0x120]
  41214c:	call   403550 <getgid@plt>
  412151:	cmp    ebx,eax
  412153:	je     412173 <isspace@plt+0xe863>
  412155:	mov    edi,DWORD PTR [r14+0x18]
  412159:	mov    edx,DWORD PTR [rsp+0x120]
  412160:	mov    esi,0xffffffff
  412165:	call   4037b0 <fchown@plt>
  41216a:	cmp    eax,0xffffffff
  41216d:	je     411bfc <isspace@plt+0xe2ec>
  412173:	mov    edi,r13d
  412176:	call   4033c0 <close@plt>
  41217b:	mov    DWORD PTR [r14+0x20],0x1
  412183:	jmp    412092 <isspace@plt+0xe782>
  412188:	call   403280 <__stack_chk_fail@plt>
  41218d:	nop    DWORD PTR [rax]
  412190:	push   rbp
  412191:	push   r14
  412193:	push   rbx
  412194:	sub    rsp,0x10
  412198:	mov    rax,QWORD PTR fs:0x28
  4121a1:	mov    QWORD PTR [rsp+0x8],rax
  4121a6:	test   rdi,rdi
  4121a9:	je     412204 <isspace@plt+0xe8f4>
  4121ab:	mov    rbx,rdi
  4121ae:	call   403130 <__errno_location@plt>
  4121b3:	mov    r14,rax
  4121b6:	mov    ebp,DWORD PTR [rax]
  4121b8:	mov    edi,DWORD PTR [rbx+0x18]
  4121bb:	cmp    edi,0xffffffff
  4121be:	je     4121c5 <isspace@plt+0xe8b5>
  4121c0:	call   4033c0 <close@plt>
  4121c5:	mov    rax,QWORD PTR [rbx+0x10]
  4121c9:	test   rax,rax
  4121cc:	je     4121e6 <isspace@plt+0xe8d6>
  4121ce:	cmp    BYTE PTR [rax],0x0
  4121d1:	je     4121e8 <isspace@plt+0xe8d8>
  4121d3:	mov    edi,DWORD PTR [rbx+0x1c]
  4121d6:	xor    edx,edx
  4121d8:	mov    rsi,rax
  4121db:	call   403190 <unlinkat@plt>
  4121e0:	mov    rax,QWORD PTR [rbx+0x10]
  4121e4:	jmp    4121e8 <isspace@plt+0xe8d8>
  4121e6:	xor    eax,eax
  4121e8:	mov    rdi,rax
  4121eb:	call   4030d0 <free@plt>
  4121f0:	mov    rdi,QWORD PTR [rbx+0x8]
  4121f4:	call   4030d0 <free@plt>
  4121f9:	mov    rdi,rbx
  4121fc:	call   4030d0 <free@plt>
  412201:	mov    DWORD PTR [r14],ebp
  412204:	mov    rax,QWORD PTR fs:0x28
  41220d:	cmp    rax,QWORD PTR [rsp+0x8]
  412212:	jne    41221d <isspace@plt+0xe90d>
  412214:	add    rsp,0x10
  412218:	pop    rbx
  412219:	pop    r14
  41221b:	pop    rbp
  41221c:	ret    
  41221d:	call   403280 <__stack_chk_fail@plt>
  412222:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41222c:	nop    DWORD PTR [rax+0x0]
  412230:	push   rbp
  412231:	mov    rbp,rsp
  412234:	push   r15
  412236:	push   r14
  412238:	push   rbx
  412239:	and    rsp,0xffffffffffffffe0
  41223d:	sub    rsp,0xa0
  412244:	mov    rax,QWORD PTR fs:0x28
  41224d:	mov    QWORD PTR [rsp+0x90],rax
  412255:	test   rdi,rdi
  412258:	je     412358 <isspace@plt+0xea48>
  41225e:	mov    r14,rdi
  412261:	mov    eax,DWORD PTR [rdi+0x20]
  412264:	cmp    eax,0x2
  412267:	je     41235c <isspace@plt+0xea4c>
  41226d:	cmp    eax,0x1
  412270:	jne    4123c9 <isspace@plt+0xeab9>
  412276:	mov    edi,DWORD PTR [r14+0x18]
  41227a:	call   403770 <fsync@plt>
  41227f:	cmp    eax,0xffffffff
  412282:	je     4123c9 <isspace@plt+0xeab9>
  412288:	vxorps xmm0,xmm0,xmm0
  41228c:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  412292:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  412298:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  41229e:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  4122a4:	vmovaps YMMWORD PTR [rsp],ymm0
  4122a9:	mov    esi,DWORD PTR [r14+0x18]
  4122ad:	mov    rdx,rsp
  4122b0:	mov    edi,0x1
  4122b5:	vzeroupper 
  4122b8:	call   403610 <__fxstat@plt>
  4122bd:	cmp    eax,0xffffffff
  4122c0:	je     4123c9 <isspace@plt+0xeab9>
  4122c6:	mov    edi,DWORD PTR [r14+0x18]
  4122ca:	call   4033c0 <close@plt>
  4122cf:	mov    DWORD PTR [r14+0x18],0xffffffff
  4122d7:	cmp    eax,0xffffffff
  4122da:	je     4123c9 <isspace@plt+0xeab9>
  4122e0:	mov    edi,DWORD PTR [r14+0x1c]
  4122e4:	mov    rcx,QWORD PTR [r14+0x8]
  4122e8:	mov    rsi,QWORD PTR [r14+0x10]
  4122ec:	mov    edx,edi
  4122ee:	call   4037e0 <renameat@plt>
  4122f3:	cmp    eax,0xffffffff
  4122f6:	je     4123c9 <isspace@plt+0xeab9>
  4122fc:	mov    rdi,QWORD PTR [r14+0x10]
  412300:	call   4030d0 <free@plt>
  412305:	mov    QWORD PTR [r14+0x10],0x0
  41230d:	mov    r15d,DWORD PTR [r14+0x1c]
  412311:	mov    rdi,QWORD PTR [r14+0x8]
  412315:	call   403350 <dirname@plt>
  41231a:	mov    rcx,rax
  41231d:	xor    ebx,ebx
  41231f:	mov    edx,0x10000
  412324:	xor    eax,eax
  412326:	mov    edi,r15d
  412329:	mov    rsi,rcx
  41232c:	call   403260 <openat@plt>
  412331:	cmp    eax,0xffffffff
  412334:	je     4123cb <isspace@plt+0xeabb>
  41233a:	mov    r15d,eax
  41233d:	mov    edi,eax
  41233f:	call   403770 <fsync@plt>
  412344:	cmp    eax,0xffffffff
  412347:	jne    412353 <isspace@plt+0xea43>
  412349:	call   403130 <__errno_location@plt>
  41234e:	cmp    DWORD PTR [rax],0x16
  412351:	jne    4123c1 <isspace@plt+0xeab1>
  412353:	mov    edi,r15d
  412356:	jmp    4123a8 <isspace@plt+0xea98>
  412358:	mov    bl,0x1
  41235a:	jmp    4123d3 <isspace@plt+0xeac3>
  41235c:	mov    edi,DWORD PTR [r14+0x18]
  412360:	call   403770 <fsync@plt>
  412365:	cmp    eax,0xffffffff
  412368:	je     4123c9 <isspace@plt+0xeab9>
  41236a:	vxorps xmm0,xmm0,xmm0
  41236e:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  412374:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41237a:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  412380:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  412386:	vmovaps YMMWORD PTR [rsp],ymm0
  41238b:	mov    esi,DWORD PTR [r14+0x18]
  41238f:	mov    rdx,rsp
  412392:	mov    edi,0x1
  412397:	vzeroupper 
  41239a:	call   403610 <__fxstat@plt>
  41239f:	cmp    eax,0xffffffff
  4123a2:	je     4123c9 <isspace@plt+0xeab9>
  4123a4:	mov    edi,DWORD PTR [r14+0x18]
  4123a8:	call   4033c0 <close@plt>
  4123ad:	cmp    eax,0xffffffff
  4123b0:	je     4123c9 <isspace@plt+0xeab9>
  4123b2:	mov    rdi,QWORD PTR [r14]
  4123b5:	mov    rsi,rsp
  4123b8:	call   410110 <isspace@plt+0xc800>
  4123bd:	mov    bl,0x1
  4123bf:	jmp    4123cb <isspace@plt+0xeabb>
  4123c1:	mov    edi,r15d
  4123c4:	call   4033c0 <close@plt>
  4123c9:	xor    ebx,ebx
  4123cb:	mov    rdi,r14
  4123ce:	call   412190 <isspace@plt+0xe880>
  4123d3:	mov    rax,QWORD PTR fs:0x28
  4123dc:	cmp    rax,QWORD PTR [rsp+0x90]
  4123e4:	jne    4123f3 <isspace@plt+0xeae3>
  4123e6:	mov    eax,ebx
  4123e8:	lea    rsp,[rbp-0x18]
  4123ec:	pop    rbx
  4123ed:	pop    r14
  4123ef:	pop    r15
  4123f1:	pop    rbp
  4123f2:	ret    
  4123f3:	call   403280 <__stack_chk_fail@plt>
  4123f8:	nop    DWORD PTR [rax+rax*1+0x0]
  412400:	push   rax
  412401:	mov    rax,rsi
  412404:	mov    rcx,QWORD PTR fs:0x28
  41240d:	mov    QWORD PTR [rsp],rcx
  412411:	mov    esi,0xffffff9c
  412416:	xor    ecx,ecx
  412418:	mov    rdx,rax
  41241b:	call   412440 <isspace@plt+0xeb30>
  412420:	mov    rcx,QWORD PTR fs:0x28
  412429:	cmp    rcx,QWORD PTR [rsp]
  41242d:	jne    412431 <isspace@plt+0xeb21>
  41242f:	pop    rcx
  412430:	ret    
  412431:	call   403280 <__stack_chk_fail@plt>
  412436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412440:	push   r14
  412442:	push   rbx
  412443:	sub    rsp,0x18
  412447:	mov    rbx,rdi
  41244a:	mov    rax,QWORD PTR fs:0x28
  412453:	mov    QWORD PTR [rsp+0x10],rax
  412458:	test   rdx,rdx
  41245b:	je     4124b1 <isspace@plt+0xeba1>
  41245d:	mov    rdi,rbx
  412460:	call   411ad0 <isspace@plt+0xe1c0>
  412465:	test   rax,rax
  412468:	je     4124c7 <isspace@plt+0xebb7>
  41246a:	mov    r14,rax
  41246d:	mov    QWORD PTR [rsp],0x0
  412475:	mov    rdi,rbx
  412478:	call   410a90 <isspace@plt+0xd180>
  41247d:	mov    QWORD PTR [rsp+0x8],rax
  412482:	mov    rdi,QWORD PTR [r14]
  412485:	mov    edx,DWORD PTR [r14+0x18]
  412489:	mov    rsi,rsp
  41248c:	call   412530 <isspace@plt+0xec20>
  412491:	cmp    rax,0xffffffffffffffff
  412495:	je     4124bf <isspace@plt+0xebaf>
  412497:	mov    rbx,rax
  41249a:	mov    rdi,rsp
  41249d:	call   417460 <isspace@plt+0x13b50>
  4124a2:	cmp    rbx,rax
  4124a5:	jne    4124bf <isspace@plt+0xebaf>
  4124a7:	mov    rdi,r14
  4124aa:	call   412230 <isspace@plt+0xe920>
  4124af:	jmp    4124c9 <isspace@plt+0xebb9>
  4124b1:	xor    esi,esi
  4124b3:	mov    rdi,rbx
  4124b6:	call   410110 <isspace@plt+0xc800>
  4124bb:	mov    al,0x1
  4124bd:	jmp    4124c9 <isspace@plt+0xebb9>
  4124bf:	mov    rdi,r14
  4124c2:	call   412190 <isspace@plt+0xe880>
  4124c7:	xor    eax,eax
  4124c9:	mov    rcx,QWORD PTR fs:0x28
  4124d2:	cmp    rcx,QWORD PTR [rsp+0x10]
  4124d7:	jne    4124e1 <isspace@plt+0xebd1>
  4124d9:	add    rsp,0x18
  4124dd:	pop    rbx
  4124de:	pop    r14
  4124e0:	ret    
  4124e1:	call   403280 <__stack_chk_fail@plt>
  4124e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4124f0:	push   rax
  4124f1:	mov    rax,QWORD PTR fs:0x28
  4124fa:	mov    QWORD PTR [rsp],rax
  4124fe:	mov    rax,QWORD PTR [rdi]
  412501:	mov    edx,DWORD PTR [rdi+0x18]
  412504:	mov    rdi,rax
  412507:	call   412530 <isspace@plt+0xec20>
  41250c:	mov    rcx,QWORD PTR fs:0x28
  412515:	cmp    rcx,QWORD PTR [rsp]
  412519:	jne    41251d <isspace@plt+0xec0d>
  41251b:	pop    rcx
  41251c:	ret    
  41251d:	call   403280 <__stack_chk_fail@plt>
  412522:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41252c:	nop    DWORD PTR [rax+0x0]
  412530:	push   rbp
  412531:	push   r15
  412533:	push   r14
  412535:	push   r13
  412537:	push   r12
  412539:	push   rbx
  41253a:	sub    rsp,0x48
  41253e:	mov    r12d,edx
  412541:	mov    rbx,rsi
  412544:	mov    r14,rdi
  412547:	mov    rax,QWORD PTR fs:0x28
  412550:	mov    QWORD PTR [rsp+0x40],rax
  412555:	mov    rdi,rsi
  412558:	call   417460 <isspace@plt+0x13b50>
  41255d:	mov    r15,rax
  412560:	mov    rdx,QWORD PTR [rbx]
  412563:	lea    rdi,[rsp+0x18]
  412568:	mov    rsi,r14
  41256b:	call   410760 <isspace@plt+0xce50>
  412570:	test   r15,r15
  412573:	je     412654 <isspace@plt+0xed44>
  412579:	lea    rbp,[rsp+0x18]
  41257e:	mov    rbx,r15
  412581:	mov    QWORD PTR [rsp+0x8],r15
  412586:	mov    rdi,rbp
  412589:	call   4109d0 <isspace@plt+0xd0c0>
  41258e:	test   al,al
  412590:	je     412656 <isspace@plt+0xed46>
  412596:	mov    r15,QWORD PTR [rsp+0x20]
  41259b:	mov    r13,QWORD PTR [rsp+0x28]
  4125a0:	sub    r15,r13
  4125a3:	cmp    r15,rbx
  4125a6:	cmova  r15,rbx
  4125aa:	test   r15,r15
  4125ad:	mov    QWORD PTR [rsp+0x10],rbx
  4125b2:	je     412620 <isspace@plt+0xed10>
  4125b4:	mov    r14,r15
  4125b7:	cmp    r14,0x7fffffff
  4125be:	mov    ebp,0x7fffffff
  4125c3:	cmovb  rbp,r14
  4125c7:	mov    edi,r12d
  4125ca:	mov    rsi,r13
  4125cd:	mov    rdx,rbp
  4125d0:	call   4031f0 <write@plt>
  4125d5:	test   rax,rax
  4125d8:	jns    41260f <isspace@plt+0xecff>
  4125da:	call   403130 <__errno_location@plt>
  4125df:	mov    rbx,rax
  4125e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4125ec:	nop    DWORD PTR [rax+0x0]
  4125f0:	mov    eax,DWORD PTR [rbx]
  4125f2:	cmp    eax,0xb
  4125f5:	je     4125fc <isspace@plt+0xecec>
  4125f7:	cmp    eax,0x4
  4125fa:	jne    41265b <isspace@plt+0xed4b>
  4125fc:	mov    edi,r12d
  4125ff:	mov    rsi,r13
  412602:	mov    rdx,rbp
  412605:	call   4031f0 <write@plt>
  41260a:	test   rax,rax
  41260d:	js     4125f0 <isspace@plt+0xece0>
  41260f:	test   rax,rax
  412612:	je     412623 <isspace@plt+0xed13>
  412614:	add    r13,rax
  412617:	sub    r14,rax
  41261a:	jne    4125b7 <isspace@plt+0xeca7>
  41261c:	nop    DWORD PTR [rax+0x0]
  412620:	xor    r14d,r14d
  412623:	sub    r15,r14
  412626:	cmp    r15,0xffffffffffffffff
  41262a:	je     41265b <isspace@plt+0xed4b>
  41262c:	mov    rbx,QWORD PTR [rsp+0x10]
  412631:	sub    rbx,r15
  412634:	test   r14,r14
  412637:	jne    412684 <isspace@plt+0xed74>
  412639:	lea    rbp,[rsp+0x18]
  41263e:	mov    rdi,rbp
  412641:	call   410850 <isspace@plt+0xcf40>
  412646:	test   rbx,rbx
  412649:	mov    r15,QWORD PTR [rsp+0x8]
  41264e:	jne    412586 <isspace@plt+0xec76>
  412654:	xor    ebx,ebx
  412656:	sub    r15,rbx
  412659:	jmp    412662 <isspace@plt+0xed52>
  41265b:	mov    r15,0xffffffffffffffff
  412662:	mov    rax,QWORD PTR fs:0x28
  41266b:	cmp    rax,QWORD PTR [rsp+0x40]
  412670:	jne    41268b <isspace@plt+0xed7b>
  412672:	mov    rax,r15
  412675:	add    rsp,0x48
  412679:	pop    rbx
  41267a:	pop    r12
  41267c:	pop    r13
  41267e:	pop    r14
  412680:	pop    r15
  412682:	pop    rbp
  412683:	ret    
  412684:	mov    r15,QWORD PTR [rsp+0x8]
  412689:	jmp    412656 <isspace@plt+0xed46>
  41268b:	call   403280 <__stack_chk_fail@plt>
  412690:	push   r14
  412692:	push   rbx
  412693:	push   rax
  412694:	mov    r14,rsi
  412697:	mov    rbx,rdi
  41269a:	mov    rax,QWORD PTR fs:0x28
  4126a3:	mov    QWORD PTR [rsp],rax
  4126a7:	call   4109d0 <isspace@plt+0xd0c0>
  4126ac:	test   al,al
  4126ae:	je     4126e7 <isspace@plt+0xedd7>
  4126b0:	mov    rdi,rbx
  4126b3:	call   410990 <isspace@plt+0xd080>
  4126b8:	mov    rcx,QWORD PTR [rbx+0x10]
  4126bc:	cmp    QWORD PTR [rbx],rcx
  4126bf:	ja     4126ce <isspace@plt+0xedbe>
  4126c1:	cmp    rcx,QWORD PTR [rbx+0x8]
  4126c5:	jae    4126ce <isspace@plt+0xedbe>
  4126c7:	mov    al,BYTE PTR [rcx]
  4126c9:	mov    BYTE PTR [r14],al
  4126cc:	jmp    4126e3 <isspace@plt+0xedd3>
  4126ce:	mov    rbx,QWORD PTR [rbx+0x20]
  4126d2:	mov    rdi,rax
  4126d5:	call   410a90 <isspace@plt+0xd180>
  4126da:	cmp    rbx,rax
  4126dd:	jne    4126e7 <isspace@plt+0xedd7>
  4126df:	mov    BYTE PTR [r14],0x0
  4126e3:	mov    al,0x1
  4126e5:	jmp    4126e9 <isspace@plt+0xedd9>
  4126e7:	xor    eax,eax
  4126e9:	mov    rcx,QWORD PTR fs:0x28
  4126f2:	cmp    rcx,QWORD PTR [rsp]
  4126f6:	jne    412700 <isspace@plt+0xedf0>
  4126f8:	add    rsp,0x8
  4126fc:	pop    rbx
  4126fd:	pop    r14
  4126ff:	ret    
  412700:	call   403280 <__stack_chk_fail@plt>
  412705:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41270f:	nop
  412710:	push   rbp
  412711:	push   r14
  412713:	push   rbx
  412714:	sub    rsp,0x10
  412718:	mov    r14,rsi
  41271b:	mov    rbx,rdi
  41271e:	mov    rax,QWORD PTR fs:0x28
  412727:	mov    QWORD PTR [rsp+0x8],rax
  41272c:	call   410a10 <isspace@plt+0xd100>
  412731:	test   al,al
  412733:	je     41277b <isspace@plt+0xee6b>
  412735:	mov    rax,QWORD PTR [rbx+0x10]
  412739:	cmp    rax,QWORD PTR [rbx+0x8]
  41273d:	je     412750 <isspace@plt+0xee40>
  41273f:	add    rax,0x1
  412743:	mov    QWORD PTR [rbx+0x10],rax
  412747:	add    QWORD PTR [rbx+0x20],0x1
  41274c:	xor    ebp,ebp
  41274e:	jmp    412760 <isspace@plt+0xee50>
  412750:	mov    rdi,rbx
  412753:	call   410a50 <isspace@plt+0xd140>
  412758:	mov    ebp,eax
  41275a:	nop    WORD PTR [rax+rax*1+0x0]
  412760:	mov    rcx,QWORD PTR [rbx+0x10]
  412764:	cmp    rcx,QWORD PTR [rbx+0x8]
  412768:	jne    41277f <isspace@plt+0xee6f>
  41276a:	mov    rdi,rbx
  41276d:	call   410850 <isspace@plt+0xcf40>
  412772:	test   al,al
  412774:	jne    412760 <isspace@plt+0xee50>
  412776:	test   bpl,bpl
  412779:	je     4127a4 <isspace@plt+0xee94>
  41277b:	xor    eax,eax
  41277d:	jmp    41278b <isspace@plt+0xee7b>
  41277f:	mov    al,0x1
  412781:	test   r14,r14
  412784:	je     41278b <isspace@plt+0xee7b>
  412786:	mov    cl,BYTE PTR [rcx]
  412788:	mov    BYTE PTR [r14],cl
  41278b:	mov    rcx,QWORD PTR fs:0x28
  412794:	cmp    rcx,QWORD PTR [rsp+0x8]
  412799:	jne    4127c5 <isspace@plt+0xeeb5>
  41279b:	add    rsp,0x10
  41279f:	pop    rbx
  4127a0:	pop    r14
  4127a2:	pop    rbp
  4127a3:	ret    
  4127a4:	test   r14,r14
  4127a7:	je     4127ad <isspace@plt+0xee9d>
  4127a9:	mov    BYTE PTR [r14],0x0
  4127ad:	mov    rdi,rbx
  4127b0:	call   4108e0 <isspace@plt+0xcfd0>
  4127b5:	mov    rcx,QWORD PTR fs:0x28
  4127be:	cmp    rcx,QWORD PTR [rsp+0x8]
  4127c3:	je     41279b <isspace@plt+0xee8b>
  4127c5:	call   403280 <__stack_chk_fail@plt>
  4127ca:	nop    WORD PTR [rax+rax*1+0x0]
  4127d0:	push   rbp
  4127d1:	push   r14
  4127d3:	push   rbx
  4127d4:	sub    rsp,0x10
  4127d8:	mov    r14,rsi
  4127db:	mov    rbx,rdi
  4127de:	mov    rax,QWORD PTR fs:0x28
  4127e7:	mov    QWORD PTR [rsp+0x8],rax
  4127ec:	call   410a50 <isspace@plt+0xd140>
  4127f1:	test   al,al
  4127f3:	je     41281a <isspace@plt+0xef0a>
  4127f5:	mov    rdi,rbx
  4127f8:	call   410a10 <isspace@plt+0xd100>
  4127fd:	mov    ebp,eax
  4127ff:	nop
  412800:	mov    rcx,QWORD PTR [rbx+0x10]
  412804:	cmp    rcx,QWORD PTR [rbx]
  412807:	jne    41281e <isspace@plt+0xef0e>
  412809:	mov    rdi,rbx
  41280c:	call   4108e0 <isspace@plt+0xcfd0>
  412811:	test   al,al
  412813:	jne    412800 <isspace@plt+0xeef0>
  412815:	test   bpl,bpl
  412818:	je     412850 <isspace@plt+0xef40>
  41281a:	xor    eax,eax
  41281c:	jmp    412837 <isspace@plt+0xef27>
  41281e:	add    rcx,0xffffffffffffffff
  412822:	mov    QWORD PTR [rbx+0x10],rcx
  412826:	add    QWORD PTR [rbx+0x20],0xffffffffffffffff
  41282b:	mov    al,0x1
  41282d:	test   r14,r14
  412830:	je     412837 <isspace@plt+0xef27>
  412832:	mov    cl,BYTE PTR [rcx]
  412834:	mov    BYTE PTR [r14],cl
  412837:	mov    rcx,QWORD PTR fs:0x28
  412840:	cmp    rcx,QWORD PTR [rsp+0x8]
  412845:	jne    412871 <isspace@plt+0xef61>
  412847:	add    rsp,0x10
  41284b:	pop    rbx
  41284c:	pop    r14
  41284e:	pop    rbp
  41284f:	ret    
  412850:	test   r14,r14
  412853:	je     412859 <isspace@plt+0xef49>
  412855:	mov    BYTE PTR [r14],0x0
  412859:	mov    rdi,rbx
  41285c:	call   410850 <isspace@plt+0xcf40>
  412861:	mov    rcx,QWORD PTR fs:0x28
  41286a:	cmp    rcx,QWORD PTR [rsp+0x8]
  41286f:	je     412847 <isspace@plt+0xef37>
  412871:	call   403280 <__stack_chk_fail@plt>
  412876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412880:	push   rbp
  412881:	push   r14
  412883:	push   rbx
  412884:	sub    rsp,0x10
  412888:	mov    rbx,rdi
  41288b:	mov    rax,QWORD PTR fs:0x28
  412894:	mov    QWORD PTR [rsp+0x8],rax
  412899:	mov    rbp,QWORD PTR [rdi+0x10]
  41289d:	test   rbp,rbp
  4128a0:	je     4128d7 <isspace@plt+0xefc7>
  4128a2:	movsx  r14d,sil
  4128a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4128b0:	mov    rdi,QWORD PTR [rbx]
  4128b3:	mov    rdx,rbp
  4128b6:	sub    rdx,rdi
  4128b9:	mov    esi,r14d
  4128bc:	call   403780 <memrchr@plt>
  4128c1:	test   rax,rax
  4128c4:	jne    4128e3 <isspace@plt+0xefd3>
  4128c6:	mov    rdi,rbx
  4128c9:	call   4108e0 <isspace@plt+0xcfd0>
  4128ce:	mov    rbp,QWORD PTR [rbx+0x10]
  4128d2:	test   rbp,rbp
  4128d5:	jne    4128b0 <isspace@plt+0xefa0>
  4128d7:	mov    rdi,rbx
  4128da:	call   410850 <isspace@plt+0xcf40>
  4128df:	xor    eax,eax
  4128e1:	jmp    4128f3 <isspace@plt+0xefe3>
  4128e3:	mov    rcx,rax
  4128e6:	sub    rcx,rbp
  4128e9:	add    QWORD PTR [rbx+0x20],rcx
  4128ed:	mov    QWORD PTR [rbx+0x10],rax
  4128f1:	mov    al,0x1
  4128f3:	mov    rcx,QWORD PTR fs:0x28
  4128fc:	cmp    rcx,QWORD PTR [rsp+0x8]
  412901:	jne    41290c <isspace@plt+0xeffc>
  412903:	add    rsp,0x10
  412907:	pop    rbx
  412908:	pop    r14
  41290a:	pop    rbp
  41290b:	ret    
  41290c:	call   403280 <__stack_chk_fail@plt>
  412911:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41291b:	nop    DWORD PTR [rax+rax*1+0x0]
  412920:	push   rbp
  412921:	push   r14
  412923:	push   rbx
  412924:	sub    rsp,0x10
  412928:	mov    r14,rdi
  41292b:	mov    rax,QWORD PTR fs:0x28
  412934:	mov    QWORD PTR [rsp+0x8],rax
  412939:	mov    rbx,QWORD PTR [rdi+0x10]
  41293d:	test   rbx,rbx
  412940:	je     412977 <isspace@plt+0xf067>
  412942:	movsx  ebp,sil
  412946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412950:	mov    rdx,QWORD PTR [r14+0x8]
  412954:	sub    rdx,rbx
  412957:	mov    rdi,rbx
  41295a:	mov    esi,ebp
  41295c:	call   403410 <memchr@plt>
  412961:	test   rax,rax
  412964:	jne    412983 <isspace@plt+0xf073>
  412966:	mov    rdi,r14
  412969:	call   410850 <isspace@plt+0xcf40>
  41296e:	mov    rbx,QWORD PTR [r14+0x10]
  412972:	test   rbx,rbx
  412975:	jne    412950 <isspace@plt+0xf040>
  412977:	mov    rdi,r14
  41297a:	call   4108e0 <isspace@plt+0xcfd0>
  41297f:	xor    eax,eax
  412981:	jmp    412993 <isspace@plt+0xf083>
  412983:	mov    rcx,rax
  412986:	sub    rcx,rbx
  412989:	add    QWORD PTR [r14+0x20],rcx
  41298d:	mov    QWORD PTR [r14+0x10],rax
  412991:	mov    al,0x1
  412993:	mov    rcx,QWORD PTR fs:0x28
  41299c:	cmp    rcx,QWORD PTR [rsp+0x8]
  4129a1:	jne    4129ac <isspace@plt+0xf09c>
  4129a3:	add    rsp,0x10
  4129a7:	pop    rbx
  4129a8:	pop    r14
  4129aa:	pop    rbp
  4129ab:	ret    
  4129ac:	call   403280 <__stack_chk_fail@plt>
  4129b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4129bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4129c0:	push   rbp
  4129c1:	push   r14
  4129c3:	push   rbx
  4129c4:	sub    rsp,0x10
  4129c8:	mov    r14,rsi
  4129cb:	mov    rbx,rdi
  4129ce:	mov    rax,QWORD PTR fs:0x28
  4129d7:	mov    QWORD PTR [rsp+0x8],rax
  4129dc:	nop    DWORD PTR [rax+0x0]
  4129e0:	mov    rdi,rbx
  4129e3:	call   410a10 <isspace@plt+0xd100>
  4129e8:	test   al,al
  4129ea:	je     412a61 <isspace@plt+0xf151>
  4129ec:	mov    rax,QWORD PTR [rbx+0x10]
  4129f0:	cmp    rax,QWORD PTR [rbx+0x8]
  4129f4:	je     412a10 <isspace@plt+0xf100>
  4129f6:	add    rax,0x1
  4129fa:	mov    QWORD PTR [rbx+0x10],rax
  4129fe:	add    QWORD PTR [rbx+0x20],0x1
  412a03:	xor    ebp,ebp
  412a05:	jmp    412a20 <isspace@plt+0xf110>
  412a07:	nop    WORD PTR [rax+rax*1+0x0]
  412a10:	mov    rdi,rbx
  412a13:	call   410a50 <isspace@plt+0xd140>
  412a18:	mov    ebp,eax
  412a1a:	nop    WORD PTR [rax+rax*1+0x0]
  412a20:	mov    rax,QWORD PTR [rbx+0x10]
  412a24:	cmp    rax,QWORD PTR [rbx+0x8]
  412a28:	jne    412a4b <isspace@plt+0xf13b>
  412a2a:	mov    rdi,rbx
  412a2d:	call   410850 <isspace@plt+0xcf40>
  412a32:	test   al,al
  412a34:	jne    412a20 <isspace@plt+0xf110>
  412a36:	test   bpl,bpl
  412a39:	jne    412a61 <isspace@plt+0xf151>
  412a3b:	mov    rdi,rbx
  412a3e:	call   4108e0 <isspace@plt+0xcfd0>
  412a43:	test   al,al
  412a45:	je     412a61 <isspace@plt+0xf151>
  412a47:	mov    rax,QWORD PTR [rbx+0x10]
  412a4b:	mov    cl,BYTE PTR [rax]
  412a4d:	mov    eax,ecx
  412a4f:	and    al,0xc0
  412a51:	cmp    al,0x80
  412a53:	je     4129e0 <isspace@plt+0xf0d0>
  412a55:	mov    al,0x1
  412a57:	test   r14,r14
  412a5a:	je     412a63 <isspace@plt+0xf153>
  412a5c:	mov    BYTE PTR [r14],cl
  412a5f:	jmp    412a63 <isspace@plt+0xf153>
  412a61:	xor    eax,eax
  412a63:	mov    rcx,QWORD PTR fs:0x28
  412a6c:	cmp    rcx,QWORD PTR [rsp+0x8]
  412a71:	jne    412a7c <isspace@plt+0xf16c>
  412a73:	add    rsp,0x10
  412a77:	pop    rbx
  412a78:	pop    r14
  412a7a:	pop    rbp
  412a7b:	ret    
  412a7c:	call   403280 <__stack_chk_fail@plt>
  412a81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  412a90:	push   rbp
  412a91:	push   r14
  412a93:	push   rbx
  412a94:	sub    rsp,0x10
  412a98:	mov    r14,rsi
  412a9b:	mov    rbx,rdi
  412a9e:	mov    rax,QWORD PTR fs:0x28
  412aa7:	mov    QWORD PTR [rsp+0x8],rax
  412aac:	nop    DWORD PTR [rax+0x0]
  412ab0:	mov    rdi,rbx
  412ab3:	call   410a50 <isspace@plt+0xd140>
  412ab8:	test   al,al
  412aba:	je     412b23 <isspace@plt+0xf213>
  412abc:	mov    rdi,rbx
  412abf:	call   410a10 <isspace@plt+0xd100>
  412ac4:	mov    ebp,eax
  412ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ad0:	mov    rax,QWORD PTR [rbx+0x10]
  412ad4:	cmp    rax,QWORD PTR [rbx]
  412ad7:	jne    412b00 <isspace@plt+0xf1f0>
  412ad9:	mov    rdi,rbx
  412adc:	call   4108e0 <isspace@plt+0xcfd0>
  412ae1:	test   al,al
  412ae3:	jne    412ad0 <isspace@plt+0xf1c0>
  412ae5:	test   bpl,bpl
  412ae8:	jne    412b23 <isspace@plt+0xf213>
  412aea:	mov    rdi,rbx
  412aed:	call   410850 <isspace@plt+0xcf40>
  412af2:	test   al,al
  412af4:	je     412b23 <isspace@plt+0xf213>
  412af6:	mov    rax,QWORD PTR [rbx+0x10]
  412afa:	jmp    412b0d <isspace@plt+0xf1fd>
  412afc:	nop    DWORD PTR [rax+0x0]
  412b00:	add    rax,0xffffffffffffffff
  412b04:	mov    QWORD PTR [rbx+0x10],rax
  412b08:	add    QWORD PTR [rbx+0x20],0xffffffffffffffff
  412b0d:	mov    cl,BYTE PTR [rax]
  412b0f:	mov    eax,ecx
  412b11:	and    al,0xc0
  412b13:	cmp    al,0x80
  412b15:	je     412ab0 <isspace@plt+0xf1a0>
  412b17:	mov    al,0x1
  412b19:	test   r14,r14
  412b1c:	je     412b25 <isspace@plt+0xf215>
  412b1e:	mov    BYTE PTR [r14],cl
  412b21:	jmp    412b25 <isspace@plt+0xf215>
  412b23:	xor    eax,eax
  412b25:	mov    rcx,QWORD PTR fs:0x28
  412b2e:	cmp    rcx,QWORD PTR [rsp+0x8]
  412b33:	jne    412b3e <isspace@plt+0xf22e>
  412b35:	add    rsp,0x10
  412b39:	pop    rbx
  412b3a:	pop    r14
  412b3c:	pop    rbp
  412b3d:	ret    
  412b3e:	call   403280 <__stack_chk_fail@plt>
  412b43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412b4d:	nop    DWORD PTR [rax]
  412b50:	push   rbp
  412b51:	push   r15
  412b53:	push   r14
  412b55:	push   r13
  412b57:	push   r12
  412b59:	push   rbx
  412b5a:	sub    rsp,0x28
  412b5e:	mov    r14,rsi
  412b61:	mov    rbx,rdi
  412b64:	mov    rax,QWORD PTR fs:0x28
  412b6d:	mov    QWORD PTR [rsp+0x20],rax
  412b72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412b7c:	nop    DWORD PTR [rax+0x0]
  412b80:	mov    rdi,rbx
  412b83:	call   410a10 <isspace@plt+0xd100>
  412b88:	test   al,al
  412b8a:	je     412d32 <isspace@plt+0xf422>
  412b90:	mov    rax,QWORD PTR [rbx+0x10]
  412b94:	cmp    rax,QWORD PTR [rbx+0x8]
  412b98:	je     412bb0 <isspace@plt+0xf2a0>
  412b9a:	add    rax,0x1
  412b9e:	mov    QWORD PTR [rbx+0x10],rax
  412ba2:	add    QWORD PTR [rbx+0x20],0x1
  412ba7:	xor    ebp,ebp
  412ba9:	jmp    412bc0 <isspace@plt+0xf2b0>
  412bab:	nop    DWORD PTR [rax+rax*1+0x0]
  412bb0:	mov    rdi,rbx
  412bb3:	call   410a50 <isspace@plt+0xd140>
  412bb8:	mov    ebp,eax
  412bba:	nop    WORD PTR [rax+rax*1+0x0]
  412bc0:	mov    rax,QWORD PTR [rbx+0x10]
  412bc4:	cmp    rax,QWORD PTR [rbx+0x8]
  412bc8:	jne    412bf3 <isspace@plt+0xf2e3>
  412bca:	mov    rdi,rbx
  412bcd:	call   410850 <isspace@plt+0xcf40>
  412bd2:	test   al,al
  412bd4:	jne    412bc0 <isspace@plt+0xf2b0>
  412bd6:	test   bpl,bpl
  412bd9:	jne    412d32 <isspace@plt+0xf422>
  412bdf:	mov    rdi,rbx
  412be2:	call   4108e0 <isspace@plt+0xcfd0>
  412be7:	test   al,al
  412be9:	je     412d32 <isspace@plt+0xf422>
  412bef:	mov    rax,QWORD PTR [rbx+0x10]
  412bf3:	mov    al,BYTE PTR [rax]
  412bf5:	mov    ecx,eax
  412bf7:	and    cl,0xc0
  412bfa:	cmp    cl,0x80
  412bfd:	je     412b80 <isspace@plt+0xf270>
  412bff:	test   r14,r14
  412c02:	je     412c07 <isspace@plt+0xf2f7>
  412c04:	mov    BYTE PTR [r14],al
  412c07:	mov    QWORD PTR [rsp+0x8],0x0
  412c10:	mov    rdi,rbx
  412c13:	call   410990 <isspace@plt+0xd080>
  412c18:	mov    r15,rax
  412c1b:	lea    r12,[rsp+0x10]
  412c20:	lea    r13,[rsp+0x4]
  412c25:	lea    rbp,[rsp+0x8]
  412c2a:	jmp    412c31 <isspace@plt+0xf321>
  412c2c:	lea    r12,[rsp+0x10]
  412c31:	mov    rsi,QWORD PTR [rbx+0x20]
  412c35:	mov    edx,0x10
  412c3a:	mov    rdi,r15
  412c3d:	mov    rcx,r12
  412c40:	call   411380 <isspace@plt+0xda70>
  412c45:	mov    rdi,r13
  412c48:	mov    rsi,r12
  412c4b:	mov    rdx,rax
  412c4e:	mov    rcx,rbp
  412c51:	call   4032b0 <mbrtowc@plt>
  412c56:	cmp    rax,0xffffffffffffffff
  412c5a:	je     412c70 <isspace@plt+0xf360>
  412c5c:	cmp    rax,0xfffffffffffffffe
  412c60:	je     412d32 <isspace@plt+0xf422>
  412c66:	test   rax,rax
  412c69:	jne    412c7e <isspace@plt+0xf36e>
  412c6b:	jmp    412d53 <isspace@plt+0xf443>
  412c70:	call   403130 <__errno_location@plt>
  412c75:	cmp    DWORD PTR [rax],0x54
  412c78:	je     412d53 <isspace@plt+0xf443>
  412c7e:	mov    edi,DWORD PTR [rsp+0x4]
  412c82:	call   4035a0 <wcwidth@plt>
  412c87:	test   eax,eax
  412c89:	jne    412d53 <isspace@plt+0xf443>
  412c8f:	nop
  412c90:	mov    rdi,rbx
  412c93:	call   410a10 <isspace@plt+0xd100>
  412c98:	test   al,al
  412c9a:	je     412d32 <isspace@plt+0xf422>
  412ca0:	mov    r12,rbp
  412ca3:	mov    rbp,r13
  412ca6:	mov    rax,QWORD PTR [rbx+0x10]
  412caa:	cmp    rax,QWORD PTR [rbx+0x8]
  412cae:	je     412cd0 <isspace@plt+0xf3c0>
  412cb0:	add    rax,0x1
  412cb4:	mov    QWORD PTR [rbx+0x10],rax
  412cb8:	add    QWORD PTR [rbx+0x20],0x1
  412cbd:	xor    r13d,r13d
  412cc0:	jmp    412ce0 <isspace@plt+0xf3d0>
  412cc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ccc:	nop    DWORD PTR [rax+0x0]
  412cd0:	mov    rdi,rbx
  412cd3:	call   410a50 <isspace@plt+0xd140>
  412cd8:	mov    r13d,eax
  412cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  412ce0:	mov    rax,QWORD PTR [rbx+0x10]
  412ce4:	cmp    rax,QWORD PTR [rbx+0x8]
  412ce8:	jne    412d0b <isspace@plt+0xf3fb>
  412cea:	mov    rdi,rbx
  412ced:	call   410850 <isspace@plt+0xcf40>
  412cf2:	test   al,al
  412cf4:	jne    412ce0 <isspace@plt+0xf3d0>
  412cf6:	test   r13b,r13b
  412cf9:	jne    412d32 <isspace@plt+0xf422>
  412cfb:	mov    rdi,rbx
  412cfe:	call   4108e0 <isspace@plt+0xcfd0>
  412d03:	test   al,al
  412d05:	je     412d32 <isspace@plt+0xf422>
  412d07:	mov    rax,QWORD PTR [rbx+0x10]
  412d0b:	mov    al,BYTE PTR [rax]
  412d0d:	mov    ecx,eax
  412d0f:	and    cl,0xc0
  412d12:	cmp    cl,0x80
  412d15:	mov    r13,rbp
  412d18:	mov    rbp,r12
  412d1b:	je     412c90 <isspace@plt+0xf380>
  412d21:	test   r14,r14
  412d24:	je     412c2c <isspace@plt+0xf31c>
  412d2a:	mov    BYTE PTR [r14],al
  412d2d:	jmp    412c2c <isspace@plt+0xf31c>
  412d32:	xor    eax,eax
  412d34:	mov    rcx,QWORD PTR fs:0x28
  412d3d:	cmp    rcx,QWORD PTR [rsp+0x20]
  412d42:	jne    412d57 <isspace@plt+0xf447>
  412d44:	add    rsp,0x28
  412d48:	pop    rbx
  412d49:	pop    r12
  412d4b:	pop    r13
  412d4d:	pop    r14
  412d4f:	pop    r15
  412d51:	pop    rbp
  412d52:	ret    
  412d53:	mov    al,0x1
  412d55:	jmp    412d34 <isspace@plt+0xf424>
  412d57:	call   403280 <__stack_chk_fail@plt>
  412d5c:	nop    DWORD PTR [rax+0x0]
  412d60:	push   rbp
  412d61:	push   r15
  412d63:	push   r14
  412d65:	push   r13
  412d67:	push   r12
  412d69:	push   rbx
  412d6a:	sub    rsp,0x28
  412d6e:	mov    r14,rsi
  412d71:	mov    rbx,rdi
  412d74:	mov    rax,QWORD PTR fs:0x28
  412d7d:	mov    QWORD PTR [rsp+0x20],rax
  412d82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412d8c:	nop    DWORD PTR [rax+0x0]
  412d90:	mov    rdi,rbx
  412d93:	call   410a50 <isspace@plt+0xd140>
  412d98:	test   al,al
  412d9a:	je     412f20 <isspace@plt+0xf610>
  412da0:	mov    rdi,rbx
  412da3:	call   410a10 <isspace@plt+0xd100>
  412da8:	mov    ebp,eax
  412daa:	nop    WORD PTR [rax+rax*1+0x0]
  412db0:	mov    rax,QWORD PTR [rbx+0x10]
  412db4:	cmp    rax,QWORD PTR [rbx]
  412db7:	jne    412df0 <isspace@plt+0xf4e0>
  412db9:	mov    rdi,rbx
  412dbc:	call   4108e0 <isspace@plt+0xcfd0>
  412dc1:	test   al,al
  412dc3:	jne    412db0 <isspace@plt+0xf4a0>
  412dc5:	test   bpl,bpl
  412dc8:	jne    412f20 <isspace@plt+0xf610>
  412dce:	mov    rdi,rbx
  412dd1:	call   410850 <isspace@plt+0xcf40>
  412dd6:	test   al,al
  412dd8:	je     412f20 <isspace@plt+0xf610>
  412dde:	mov    rax,QWORD PTR [rbx+0x10]
  412de2:	jmp    412dfd <isspace@plt+0xf4ed>
  412de4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412dee:	xchg   ax,ax
  412df0:	add    rax,0xffffffffffffffff
  412df4:	mov    QWORD PTR [rbx+0x10],rax
  412df8:	add    QWORD PTR [rbx+0x20],0xffffffffffffffff
  412dfd:	mov    al,BYTE PTR [rax]
  412dff:	mov    ecx,eax
  412e01:	and    cl,0xc0
  412e04:	cmp    cl,0x80
  412e07:	je     412d90 <isspace@plt+0xf480>
  412e09:	test   r14,r14
  412e0c:	je     412e11 <isspace@plt+0xf501>
  412e0e:	mov    BYTE PTR [r14],al
  412e11:	mov    rdi,rbx
  412e14:	call   410990 <isspace@plt+0xd080>
  412e19:	mov    r15,rax
  412e1c:	lea    r12,[rsp+0x10]
  412e21:	lea    r13,[rsp+0xc]
  412e26:	mov    rbp,rsp
  412e29:	jmp    412e30 <isspace@plt+0xf520>
  412e2b:	lea    r12,[rsp+0x10]
  412e30:	mov    rsi,QWORD PTR [rbx+0x20]
  412e34:	mov    edx,0x10
  412e39:	mov    rdi,r15
  412e3c:	mov    rcx,r12
  412e3f:	call   411380 <isspace@plt+0xda70>
  412e44:	mov    QWORD PTR [rsp],0x0
  412e4c:	mov    rdi,r13
  412e4f:	mov    rsi,r12
  412e52:	mov    rdx,rax
  412e55:	mov    rcx,rbp
  412e58:	call   4032b0 <mbrtowc@plt>
  412e5d:	cmp    rax,0xffffffffffffffff
  412e61:	je     412e80 <isspace@plt+0xf570>
  412e63:	cmp    rax,0xfffffffffffffffe
  412e67:	je     412f20 <isspace@plt+0xf610>
  412e6d:	test   rax,rax
  412e70:	jne    412e8e <isspace@plt+0xf57e>
  412e72:	jmp    412f41 <isspace@plt+0xf631>
  412e77:	nop    WORD PTR [rax+rax*1+0x0]
  412e80:	call   403130 <__errno_location@plt>
  412e85:	cmp    DWORD PTR [rax],0x54
  412e88:	je     412f41 <isspace@plt+0xf631>
  412e8e:	mov    edi,DWORD PTR [rsp+0xc]
  412e92:	call   4035a0 <wcwidth@plt>
  412e97:	test   eax,eax
  412e99:	jne    412f41 <isspace@plt+0xf631>
  412e9f:	nop
  412ea0:	mov    rdi,rbx
  412ea3:	call   410a50 <isspace@plt+0xd140>
  412ea8:	test   al,al
  412eaa:	je     412f20 <isspace@plt+0xf610>
  412eac:	mov    r12,rbp
  412eaf:	mov    rbp,r13
  412eb2:	mov    rdi,rbx
  412eb5:	call   410a10 <isspace@plt+0xd100>
  412eba:	mov    r13d,eax
  412ebd:	nop    DWORD PTR [rax]
  412ec0:	mov    rax,QWORD PTR [rbx+0x10]
  412ec4:	cmp    rax,QWORD PTR [rbx]
  412ec7:	jne    412ef0 <isspace@plt+0xf5e0>
  412ec9:	mov    rdi,rbx
  412ecc:	call   4108e0 <isspace@plt+0xcfd0>
  412ed1:	test   al,al
  412ed3:	jne    412ec0 <isspace@plt+0xf5b0>
  412ed5:	test   r13b,r13b
  412ed8:	jne    412f20 <isspace@plt+0xf610>
  412eda:	mov    rdi,rbx
  412edd:	call   410850 <isspace@plt+0xcf40>
  412ee2:	test   al,al
  412ee4:	je     412f20 <isspace@plt+0xf610>
  412ee6:	mov    rax,QWORD PTR [rbx+0x10]
  412eea:	jmp    412efd <isspace@plt+0xf5ed>
  412eec:	nop    DWORD PTR [rax+0x0]
  412ef0:	add    rax,0xffffffffffffffff
  412ef4:	mov    QWORD PTR [rbx+0x10],rax
  412ef8:	add    QWORD PTR [rbx+0x20],0xffffffffffffffff
  412efd:	mov    al,BYTE PTR [rax]
  412eff:	mov    ecx,eax
  412f01:	and    cl,0xc0
  412f04:	cmp    cl,0x80
  412f07:	mov    r13,rbp
  412f0a:	mov    rbp,r12
  412f0d:	je     412ea0 <isspace@plt+0xf590>
  412f0f:	test   r14,r14
  412f12:	je     412e2b <isspace@plt+0xf51b>
  412f18:	mov    BYTE PTR [r14],al
  412f1b:	jmp    412e2b <isspace@plt+0xf51b>
  412f20:	xor    eax,eax
  412f22:	mov    rcx,QWORD PTR fs:0x28
  412f2b:	cmp    rcx,QWORD PTR [rsp+0x20]
  412f30:	jne    412f45 <isspace@plt+0xf635>
  412f32:	add    rsp,0x28
  412f36:	pop    rbx
  412f37:	pop    r12
  412f39:	pop    r13
  412f3b:	pop    r14
  412f3d:	pop    r15
  412f3f:	pop    rbp
  412f40:	ret    
  412f41:	mov    al,0x1
  412f43:	jmp    412f22 <isspace@plt+0xf612>
  412f45:	call   403280 <__stack_chk_fail@plt>
  412f4a:	nop    WORD PTR [rax+rax*1+0x0]
  412f50:	push   rax
  412f51:	mov    rax,QWORD PTR fs:0x28
  412f5a:	mov    QWORD PTR [rsp],rax
  412f5e:	test   dil,dil
  412f61:	js     412f89 <isspace@plt+0xf679>
  412f63:	lea    eax,[rdi-0x30]
  412f66:	cmp    eax,0x9
  412f69:	seta   al
  412f6c:	mov    ecx,edi
  412f6e:	and    ecx,0xffffffdf
  412f71:	add    ecx,0xffffffbf
  412f74:	cmp    ecx,0x19
  412f77:	seta   cl
  412f7a:	cmp    edi,0x5f
  412f7d:	setne  dl
  412f80:	and    dl,al
  412f82:	and    dl,cl
  412f84:	movzx  eax,dl
  412f87:	jmp    412f8b <isspace@plt+0xf67b>
  412f89:	xor    eax,eax
  412f8b:	mov    rcx,QWORD PTR fs:0x28
  412f94:	cmp    rcx,QWORD PTR [rsp]
  412f98:	jne    412f9c <isspace@plt+0xf68c>
  412f9a:	pop    rcx
  412f9b:	ret    
  412f9c:	call   403280 <__stack_chk_fail@plt>
  412fa1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412fab:	nop    DWORD PTR [rax+rax*1+0x0]
  412fb0:	push   rbx
  412fb1:	sub    rsp,0x30
  412fb5:	mov    rax,rsi
  412fb8:	mov    rcx,rdi
  412fbb:	mov    rdx,QWORD PTR fs:0x28
  412fc4:	mov    QWORD PTR [rsp+0x28],rdx
  412fc9:	mov    rbx,rsp
  412fcc:	mov    rdi,rbx
  412fcf:	mov    rsi,rcx
  412fd2:	mov    rdx,rax
  412fd5:	call   410760 <isspace@plt+0xce50>
  412fda:	xor    esi,esi
  412fdc:	mov    rdi,rbx
  412fdf:	call   412b50 <isspace@plt+0xf240>
  412fe4:	mov    rax,QWORD PTR [rsp+0x20]
  412fe9:	mov    rcx,QWORD PTR fs:0x28
  412ff2:	cmp    rcx,QWORD PTR [rsp+0x28]
  412ff7:	jne    412fff <isspace@plt+0xf6ef>
  412ff9:	add    rsp,0x30
  412ffd:	pop    rbx
  412ffe:	ret    
  412fff:	call   403280 <__stack_chk_fail@plt>
  413004:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41300e:	xchg   ax,ax
  413010:	push   rbx
  413011:	sub    rsp,0x30
  413015:	mov    rax,rsi
  413018:	mov    rcx,rdi
  41301b:	mov    rdx,QWORD PTR fs:0x28
  413024:	mov    QWORD PTR [rsp+0x28],rdx
  413029:	mov    rbx,rsp
  41302c:	mov    rdi,rbx
  41302f:	mov    rsi,rcx
  413032:	mov    rdx,rax
  413035:	call   410760 <isspace@plt+0xce50>
  41303a:	xor    esi,esi
  41303c:	mov    rdi,rbx
  41303f:	call   412d60 <isspace@plt+0xf450>
  413044:	mov    rax,QWORD PTR [rsp+0x20]
  413049:	mov    rcx,QWORD PTR fs:0x28
  413052:	cmp    rcx,QWORD PTR [rsp+0x28]
  413057:	jne    41305f <isspace@plt+0xf74f>
  413059:	add    rsp,0x30
  41305d:	pop    rbx
  41305e:	ret    
  41305f:	call   403280 <__stack_chk_fail@plt>
  413064:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41306e:	xchg   ax,ax
  413070:	push   rbx
  413071:	sub    rsp,0x30
  413075:	mov    rax,rsi
  413078:	mov    rcx,rdi
  41307b:	mov    rdx,QWORD PTR fs:0x28
  413084:	mov    QWORD PTR [rsp+0x28],rdx
  413089:	mov    rbx,rsp
  41308c:	mov    rdi,rbx
  41308f:	mov    rsi,rcx
  413092:	mov    rdx,rax
  413095:	call   410760 <isspace@plt+0xce50>
  41309a:	xor    esi,esi
  41309c:	mov    rdi,rbx
  41309f:	call   4129c0 <isspace@plt+0xf0b0>
  4130a4:	mov    rax,QWORD PTR [rsp+0x20]
  4130a9:	mov    rcx,QWORD PTR fs:0x28
  4130b2:	cmp    rcx,QWORD PTR [rsp+0x28]
  4130b7:	jne    4130bf <isspace@plt+0xf7af>
  4130b9:	add    rsp,0x30
  4130bd:	pop    rbx
  4130be:	ret    
  4130bf:	call   403280 <__stack_chk_fail@plt>
  4130c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4130ce:	xchg   ax,ax
  4130d0:	push   rbx
  4130d1:	sub    rsp,0x30
  4130d5:	mov    rax,rsi
  4130d8:	mov    rcx,rdi
  4130db:	mov    rdx,QWORD PTR fs:0x28
  4130e4:	mov    QWORD PTR [rsp+0x28],rdx
  4130e9:	mov    rbx,rsp
  4130ec:	mov    rdi,rbx
  4130ef:	mov    rsi,rcx
  4130f2:	mov    rdx,rax
  4130f5:	call   410760 <isspace@plt+0xce50>
  4130fa:	xor    esi,esi
  4130fc:	mov    rdi,rbx
  4130ff:	call   412a90 <isspace@plt+0xf180>
  413104:	mov    rax,QWORD PTR [rsp+0x20]
  413109:	mov    rcx,QWORD PTR fs:0x28
  413112:	cmp    rcx,QWORD PTR [rsp+0x28]
  413117:	jne    41311f <isspace@plt+0xf80f>
  413119:	add    rsp,0x30
  41311d:	pop    rbx
  41311e:	ret    
  41311f:	call   403280 <__stack_chk_fail@plt>
  413124:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41312e:	xchg   ax,ax
  413130:	push   rax
  413131:	mov    rax,QWORD PTR fs:0x28
  41313a:	mov    QWORD PTR [rsp],rax
  41313e:	xor    ecx,ecx
  413140:	call   413160 <isspace@plt+0xf850>
  413145:	mov    rcx,QWORD PTR fs:0x28
  41314e:	cmp    rcx,QWORD PTR [rsp]
  413152:	jne    413156 <isspace@plt+0xf846>
  413154:	pop    rcx
  413155:	ret    
  413156:	call   403280 <__stack_chk_fail@plt>
  41315b:	nop    DWORD PTR [rax+rax*1+0x0]
  413160:	push   rbp
  413161:	push   r15
  413163:	push   r14
  413165:	push   r13
  413167:	push   r12
  413169:	push   rbx
  41316a:	sub    rsp,0x88
  413171:	mov    DWORD PTR [rsp+0xc],ecx
  413175:	mov    rbp,rsi
  413178:	mov    rax,QWORD PTR fs:0x28
  413181:	mov    QWORD PTR [rsp+0x80],rax
  413189:	test   rdx,rdx
  41318c:	je     41325b <isspace@plt+0xf94b>
  413192:	mov    rbx,rdx
  413195:	mov    r13,rdi
  413198:	mov    rdi,rdx
  41319b:	call   403250 <strlen@plt>
  4131a0:	mov    r15,rax
  4131a3:	lea    r12,[rsp+0x50]
  4131a8:	mov    rdi,r12
  4131ab:	mov    rsi,r13
  4131ae:	mov    QWORD PTR [rsp+0x10],rbp
  4131b3:	mov    rdx,rbp
  4131b6:	call   410760 <isspace@plt+0xce50>
  4131bb:	xor    r14d,r14d
  4131be:	lea    r13,[rsp+0x1f]
  4131c3:	mov    ebp,DWORD PTR [rsp+0xc]
  4131c7:	nop    WORD PTR [rax+rax*1+0x0]
  4131d0:	cmp    r14,r15
  4131d3:	jae    413247 <isspace@plt+0xf937>
  4131d5:	mov    rdi,r12
  4131d8:	mov    rsi,r13
  4131db:	call   412690 <isspace@plt+0xed80>
  4131e0:	test   al,al
  4131e2:	je     413247 <isspace@plt+0xf937>
  4131e4:	movzx  eax,BYTE PTR [rsp+0x1f]
  4131e9:	cmp    al,BYTE PTR [rbx+r14*1]
  4131ed:	jne    413210 <isspace@plt+0xf900>
  4131ef:	test   r14,r14
  4131f2:	jne    41320a <isspace@plt+0xf8fa>
  4131f4:	mov    rax,QWORD PTR [rsp+0x70]
  4131f9:	mov    QWORD PTR [rsp+0x40],rax
  4131fe:	vmovups ymm0,YMMWORD PTR [rsp+0x50]
  413204:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  41320a:	add    r14,0x1
  41320e:	jmp    41322e <isspace@plt+0xf91e>
  413210:	test   r14,r14
  413213:	je     41322b <isspace@plt+0xf91b>
  413215:	mov    rax,QWORD PTR [rsp+0x40]
  41321a:	mov    QWORD PTR [rsp+0x70],rax
  41321f:	vmovups ymm0,YMMWORD PTR [rsp+0x20]
  413225:	vmovups YMMWORD PTR [rsp+0x50],ymm0
  41322b:	xor    r14d,r14d
  41322e:	xor    esi,esi
  413230:	mov    rdi,r12
  413233:	vzeroupper 
  413236:	call   412710 <isspace@plt+0xee00>
  41323b:	cmp    BYTE PTR [rsp+0x1f],0xa
  413240:	jne    4131d0 <isspace@plt+0xf8c0>
  413242:	test   bpl,bpl
  413245:	je     4131d0 <isspace@plt+0xf8c0>
  413247:	mov    rax,QWORD PTR [rsp+0x70]
  41324c:	sub    rax,r15
  41324f:	cmp    r14,r15
  413252:	mov    rbp,QWORD PTR [rsp+0x10]
  413257:	cmove  rbp,rax
  41325b:	mov    rax,QWORD PTR fs:0x28
  413264:	cmp    rax,QWORD PTR [rsp+0x80]
  41326c:	jne    413283 <isspace@plt+0xf973>
  41326e:	mov    rax,rbp
  413271:	add    rsp,0x88
  413278:	pop    rbx
  413279:	pop    r12
  41327b:	pop    r13
  41327d:	pop    r14
  41327f:	pop    r15
  413281:	pop    rbp
  413282:	ret    
  413283:	call   403280 <__stack_chk_fail@plt>
  413288:	nop    DWORD PTR [rax+rax*1+0x0]
  413290:	push   rax
  413291:	mov    rax,QWORD PTR fs:0x28
  41329a:	mov    QWORD PTR [rsp],rax
  41329e:	mov    ecx,0x1
  4132a3:	call   413160 <isspace@plt+0xf850>
  4132a8:	mov    rcx,QWORD PTR fs:0x28
  4132b1:	cmp    rcx,QWORD PTR [rsp]
  4132b5:	jne    4132b9 <isspace@plt+0xf9a9>
  4132b7:	pop    rcx
  4132b8:	ret    
  4132b9:	call   403280 <__stack_chk_fail@plt>
  4132be:	xchg   ax,ax
  4132c0:	push   rbp
  4132c1:	push   r15
  4132c3:	push   r14
  4132c5:	push   r13
  4132c7:	push   r12
  4132c9:	push   rbx
  4132ca:	sub    rsp,0x78
  4132ce:	mov    r14,rsi
  4132d1:	mov    rax,QWORD PTR fs:0x28
  4132da:	mov    QWORD PTR [rsp+0x70],rax
  4132df:	test   rdx,rdx
  4132e2:	je     4133b7 <isspace@plt+0xfaa7>
  4132e8:	mov    r15,rdx
  4132eb:	mov    r12,rdi
  4132ee:	mov    rdi,rdx
  4132f1:	call   403250 <strlen@plt>
  4132f6:	mov    rbx,rax
  4132f9:	lea    rdi,[rsp+0x40]
  4132fe:	mov    rsi,r12
  413301:	mov    rdx,r14
  413304:	call   410760 <isspace@plt+0xce50>
  413309:	test   rbx,rbx
  41330c:	je     4133b7 <isspace@plt+0xfaa7>
  413312:	lea    rdi,[rsp+0x40]
  413317:	lea    rsi,[rsp+0xf]
  41331c:	call   4127d0 <isspace@plt+0xeec0>
  413321:	test   al,al
  413323:	je     4133b7 <isspace@plt+0xfaa7>
  413329:	add    rbx,0xffffffffffffffff
  41332d:	lea    r12,[rsp+0x40]
  413332:	lea    r13,[rsp+0xf]
  413337:	mov    rbp,rbx
  41333a:	nop    WORD PTR [rax+rax*1+0x0]
  413340:	movzx  eax,BYTE PTR [rsp+0xf]
  413345:	cmp    al,BYTE PTR [r15+rbp*1]
  413349:	jne    413380 <isspace@plt+0xfa70>
  41334b:	test   rbp,rbp
  41334e:	je     4133b2 <isspace@plt+0xfaa2>
  413350:	cmp    rbp,rbx
  413353:	jne    41336b <isspace@plt+0xfa5b>
  413355:	mov    rax,QWORD PTR [rsp+0x60]
  41335a:	mov    QWORD PTR [rsp+0x30],rax
  41335f:	vmovups ymm0,YMMWORD PTR [rsp+0x40]
  413365:	vmovups YMMWORD PTR [rsp+0x10],ymm0
  41336b:	add    rbp,0xffffffffffffffff
  41336f:	jmp    41339e <isspace@plt+0xfa8e>
  413371:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41337b:	nop    DWORD PTR [rax+rax*1+0x0]
  413380:	cmp    rbp,rbx
  413383:	jae    41339e <isspace@plt+0xfa8e>
  413385:	mov    rax,QWORD PTR [rsp+0x30]
  41338a:	mov    QWORD PTR [rsp+0x60],rax
  41338f:	vmovups ymm0,YMMWORD PTR [rsp+0x10]
  413395:	vmovups YMMWORD PTR [rsp+0x40],ymm0
  41339b:	mov    rbp,rbx
  41339e:	mov    rdi,r12
  4133a1:	mov    rsi,r13
  4133a4:	vzeroupper 
  4133a7:	call   4127d0 <isspace@plt+0xeec0>
  4133ac:	test   al,al
  4133ae:	jne    413340 <isspace@plt+0xfa30>
  4133b0:	jmp    4133b7 <isspace@plt+0xfaa7>
  4133b2:	mov    r14,QWORD PTR [rsp+0x60]
  4133b7:	mov    rax,QWORD PTR fs:0x28
  4133c0:	cmp    rax,QWORD PTR [rsp+0x70]
  4133c5:	jne    4133d9 <isspace@plt+0xfac9>
  4133c7:	mov    rax,r14
  4133ca:	add    rsp,0x78
  4133ce:	pop    rbx
  4133cf:	pop    r12
  4133d1:	pop    r13
  4133d3:	pop    r14
  4133d5:	pop    r15
  4133d7:	pop    rbp
  4133d8:	ret    
  4133d9:	call   403280 <__stack_chk_fail@plt>
  4133de:	xchg   ax,ax
  4133e0:	push   rbp
  4133e1:	push   r15
  4133e3:	push   r14
  4133e5:	push   r13
  4133e7:	push   r12
  4133e9:	push   rbx
  4133ea:	sub    rsp,0x78
  4133ee:	mov    r14,rsi
  4133f1:	mov    rax,QWORD PTR fs:0x28
  4133fa:	mov    QWORD PTR [rsp+0x70],rax
  4133ff:	test   rdx,rdx
  413402:	je     4134c9 <isspace@plt+0xfbb9>
  413408:	mov    r15,rdx
  41340b:	mov    r12,rdi
  41340e:	mov    rdi,rdx
  413411:	call   403250 <strlen@plt>
  413416:	mov    rbx,rax
  413419:	lea    rdi,[rsp+0x40]
  41341e:	mov    rsi,r12
  413421:	mov    rdx,r14
  413424:	call   410760 <isspace@plt+0xce50>
  413429:	test   rbx,rbx
  41342c:	je     4134c9 <isspace@plt+0xfbb9>
  413432:	add    rbx,0xffffffffffffffff
  413436:	lea    r12,[rsp+0x40]
  41343b:	lea    r13,[rsp+0xf]
  413440:	mov    rbp,rbx
  413443:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41344d:	nop    DWORD PTR [rax]
  413450:	mov    rdi,r12
  413453:	mov    rsi,r13
  413456:	vzeroupper 
  413459:	call   4127d0 <isspace@plt+0xeec0>
  41345e:	test   al,al
  413460:	je     4134c9 <isspace@plt+0xfbb9>
  413462:	movzx  eax,BYTE PTR [rsp+0xf]
  413467:	cmp    al,BYTE PTR [r15+rbp*1]
  41346b:	jne    4134a0 <isspace@plt+0xfb90>
  41346d:	test   rbp,rbp
  413470:	je     4134c4 <isspace@plt+0xfbb4>
  413472:	cmp    rbp,rbx
  413475:	jne    41348d <isspace@plt+0xfb7d>
  413477:	mov    rcx,QWORD PTR [rsp+0x60]
  41347c:	mov    QWORD PTR [rsp+0x30],rcx
  413481:	vmovups ymm0,YMMWORD PTR [rsp+0x40]
  413487:	vmovups YMMWORD PTR [rsp+0x10],ymm0
  41348d:	add    rbp,0xffffffffffffffff
  413491:	cmp    al,0xa
  413493:	jne    413450 <isspace@plt+0xfb40>
  413495:	jmp    4134c9 <isspace@plt+0xfbb9>
  413497:	nop    WORD PTR [rax+rax*1+0x0]
  4134a0:	cmp    rbp,rbx
  4134a3:	jae    4134be <isspace@plt+0xfbae>
  4134a5:	mov    rcx,QWORD PTR [rsp+0x30]
  4134aa:	mov    QWORD PTR [rsp+0x60],rcx
  4134af:	vmovups ymm0,YMMWORD PTR [rsp+0x10]
  4134b5:	vmovups YMMWORD PTR [rsp+0x40],ymm0
  4134bb:	mov    rbp,rbx
  4134be:	cmp    al,0xa
  4134c0:	jne    413450 <isspace@plt+0xfb40>
  4134c2:	jmp    4134c9 <isspace@plt+0xfbb9>
  4134c4:	mov    r14,QWORD PTR [rsp+0x60]
  4134c9:	mov    rax,QWORD PTR fs:0x28
  4134d2:	cmp    rax,QWORD PTR [rsp+0x70]
  4134d7:	jne    4134ee <isspace@plt+0xfbde>
  4134d9:	mov    rax,r14
  4134dc:	add    rsp,0x78
  4134e0:	pop    rbx
  4134e1:	pop    r12
  4134e3:	pop    r13
  4134e5:	pop    r14
  4134e7:	pop    r15
  4134e9:	pop    rbp
  4134ea:	vzeroupper 
  4134ed:	ret    
  4134ee:	vzeroupper 
  4134f1:	call   403280 <__stack_chk_fail@plt>
  4134f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413500:	push   rbx
  413501:	sub    rsp,0x30
  413505:	mov    rax,rsi
  413508:	mov    rcx,rdi
  41350b:	mov    rdx,QWORD PTR fs:0x28
  413514:	mov    QWORD PTR [rsp+0x28],rdx
  413519:	mov    rbx,rsp
  41351c:	mov    rdi,rbx
  41351f:	mov    rsi,rcx
  413522:	mov    rdx,rax
  413525:	call   410760 <isspace@plt+0xce50>
  41352a:	mov    esi,0xa
  41352f:	mov    rdi,rbx
  413532:	call   412880 <isspace@plt+0xef70>
  413537:	mov    rax,QWORD PTR [rsp+0x20]
  41353c:	mov    rcx,QWORD PTR fs:0x28
  413545:	cmp    rcx,QWORD PTR [rsp+0x28]
  41354a:	jne    413552 <isspace@plt+0xfc42>
  41354c:	add    rsp,0x30
  413550:	pop    rbx
  413551:	ret    
  413552:	call   403280 <__stack_chk_fail@plt>
  413557:	nop    WORD PTR [rax+rax*1+0x0]
  413560:	push   rbx
  413561:	sub    rsp,0x30
  413565:	mov    rax,rsi
  413568:	mov    rcx,rdi
  41356b:	mov    rdx,QWORD PTR fs:0x28
  413574:	mov    QWORD PTR [rsp+0x28],rdx
  413579:	mov    rbx,rsp
  41357c:	mov    rdi,rbx
  41357f:	mov    rsi,rcx
  413582:	mov    rdx,rax
  413585:	call   410760 <isspace@plt+0xce50>
  41358a:	mov    esi,0xa
  41358f:	mov    rdi,rbx
  413592:	call   412880 <isspace@plt+0xef70>
  413597:	movzx  eax,al
  41359a:	add    rax,QWORD PTR [rsp+0x20]
  41359f:	mov    rcx,QWORD PTR fs:0x28
  4135a8:	cmp    rcx,QWORD PTR [rsp+0x28]
  4135ad:	jne    4135b5 <isspace@plt+0xfca5>
  4135af:	add    rsp,0x30
  4135b3:	pop    rbx
  4135b4:	ret    
  4135b5:	call   403280 <__stack_chk_fail@plt>
  4135ba:	nop    WORD PTR [rax+rax*1+0x0]
  4135c0:	push   r14
  4135c2:	push   rbx
  4135c3:	sub    rsp,0x38
  4135c7:	mov    rax,rsi
  4135ca:	mov    rbx,rdi
  4135cd:	mov    rcx,QWORD PTR fs:0x28
  4135d6:	mov    QWORD PTR [rsp+0x30],rcx
  4135db:	lea    r14,[rsp+0x8]
  4135e0:	mov    rdi,r14
  4135e3:	mov    rsi,rbx
  4135e6:	mov    rdx,rax
  4135e9:	call   410760 <isspace@plt+0xce50>
  4135ee:	mov    esi,0xa
  4135f3:	mov    rdi,r14
  4135f6:	call   412880 <isspace@plt+0xef70>
  4135fb:	movzx  edx,al
  4135fe:	add    rdx,QWORD PTR [rsp+0x28]
  413603:	lea    r14,[rsp+0x8]
  413608:	mov    rdi,r14
  41360b:	mov    rsi,rbx
  41360e:	call   410760 <isspace@plt+0xce50>
  413613:	lea    rsi,[rsp+0x7]
  413618:	mov    rdi,r14
  41361b:	call   412690 <isspace@plt+0xed80>
  413620:	test   al,al
  413622:	je     413656 <isspace@plt+0xfd46>
  413624:	lea    rbx,[rsp+0x8]
  413629:	lea    r14,[rsp+0x7]
  41362e:	xchg   ax,ax
  413630:	movzx  eax,BYTE PTR [rsp+0x7]
  413635:	cmp    al,0x20
  413637:	je     41363d <isspace@plt+0xfd2d>
  413639:	cmp    al,0x9
  41363b:	jne    413656 <isspace@plt+0xfd46>
  41363d:	xor    esi,esi
  41363f:	mov    rdi,rbx
  413642:	call   412710 <isspace@plt+0xee00>
  413647:	mov    rdi,rbx
  41364a:	mov    rsi,r14
  41364d:	call   412690 <isspace@plt+0xed80>
  413652:	test   al,al
  413654:	jne    413630 <isspace@plt+0xfd20>
  413656:	mov    rax,QWORD PTR [rsp+0x28]
  41365b:	mov    rcx,QWORD PTR fs:0x28
  413664:	cmp    rcx,QWORD PTR [rsp+0x30]
  413669:	jne    413673 <isspace@plt+0xfd63>
  41366b:	add    rsp,0x38
  41366f:	pop    rbx
  413670:	pop    r14
  413672:	ret    
  413673:	call   403280 <__stack_chk_fail@plt>
  413678:	nop    DWORD PTR [rax+rax*1+0x0]
  413680:	push   r15
  413682:	push   r14
  413684:	push   rbx
  413685:	sub    rsp,0x40
  413689:	mov    rax,rsi
  41368c:	mov    r14,rdi
  41368f:	mov    rcx,QWORD PTR fs:0x28
  413698:	mov    QWORD PTR [rsp+0x38],rcx
  41369d:	lea    rbx,[rsp+0x10]
  4136a2:	mov    rdi,rbx
  4136a5:	mov    rsi,r14
  4136a8:	mov    rdx,rax
  4136ab:	call   410760 <isspace@plt+0xce50>
  4136b0:	mov    esi,0xa
  4136b5:	mov    rdi,rbx
  4136b8:	call   412920 <isspace@plt+0xf010>
  4136bd:	mov    rbx,QWORD PTR [rsp+0x30]
  4136c2:	lea    r15,[rsp+0x10]
  4136c7:	mov    rdi,r15
  4136ca:	mov    rsi,r14
  4136cd:	mov    rdx,rbx
  4136d0:	call   410760 <isspace@plt+0xce50>
  4136d5:	lea    rsi,[rsp+0xf]
  4136da:	mov    rdi,r15
  4136dd:	call   4127d0 <isspace@plt+0xeec0>
  4136e2:	mov    cl,BYTE PTR [rsp+0xf]
  4136e6:	cmp    cl,0xa
  4136e9:	je     41372b <isspace@plt+0xfe1b>
  4136eb:	test   al,al
  4136ed:	je     41372b <isspace@plt+0xfe1b>
  4136ef:	lea    r14,[rsp+0x10]
  4136f4:	lea    rbx,[rsp+0xf]
  4136f9:	nop    DWORD PTR [rax+0x0]
  413700:	cmp    cl,0x20
  413703:	je     41370a <isspace@plt+0xfdfa>
  413705:	cmp    cl,0x9
  413708:	jne    41371e <isspace@plt+0xfe0e>
  41370a:	mov    rdi,r14
  41370d:	mov    rsi,rbx
  413710:	call   4127d0 <isspace@plt+0xeec0>
  413715:	movzx  ecx,BYTE PTR [rsp+0xf]
  41371a:	test   al,al
  41371c:	jne    413700 <isspace@plt+0xfdf0>
  41371e:	xor    ebx,ebx
  413720:	cmp    cl,0xa
  413723:	sete   bl
  413726:	add    rbx,QWORD PTR [rsp+0x30]
  41372b:	mov    rax,QWORD PTR fs:0x28
  413734:	cmp    rax,QWORD PTR [rsp+0x38]
  413739:	jne    413748 <isspace@plt+0xfe38>
  41373b:	mov    rax,rbx
  41373e:	add    rsp,0x40
  413742:	pop    rbx
  413743:	pop    r14
  413745:	pop    r15
  413747:	ret    
  413748:	call   403280 <__stack_chk_fail@plt>
  41374d:	nop    DWORD PTR [rax]
  413750:	push   rbx
  413751:	sub    rsp,0x30
  413755:	mov    rax,rsi
  413758:	mov    rcx,rdi
  41375b:	mov    rdx,QWORD PTR fs:0x28
  413764:	mov    QWORD PTR [rsp+0x28],rdx
  413769:	mov    rbx,rsp
  41376c:	mov    rdi,rbx
  41376f:	mov    rsi,rcx
  413772:	mov    rdx,rax
  413775:	call   410760 <isspace@plt+0xce50>
  41377a:	mov    esi,0xa
  41377f:	mov    rdi,rbx
  413782:	call   412920 <isspace@plt+0xf010>
  413787:	mov    rax,QWORD PTR [rsp+0x20]
  41378c:	mov    rcx,QWORD PTR fs:0x28
  413795:	cmp    rcx,QWORD PTR [rsp+0x28]
  41379a:	jne    4137a2 <isspace@plt+0xfe92>
  41379c:	add    rsp,0x30
  4137a0:	pop    rbx
  4137a1:	ret    
  4137a2:	call   403280 <__stack_chk_fail@plt>
  4137a7:	nop    WORD PTR [rax+rax*1+0x0]
  4137b0:	push   rbx
  4137b1:	sub    rsp,0x30
  4137b5:	mov    rax,rsi
  4137b8:	mov    rcx,rdi
  4137bb:	mov    rdx,QWORD PTR fs:0x28
  4137c4:	mov    QWORD PTR [rsp+0x28],rdx
  4137c9:	mov    rbx,rsp
  4137cc:	mov    rdi,rbx
  4137cf:	mov    rsi,rcx
  4137d2:	mov    rdx,rax
  4137d5:	call   410760 <isspace@plt+0xce50>
  4137da:	mov    esi,0xa
  4137df:	mov    rdi,rbx
  4137e2:	call   412920 <isspace@plt+0xf010>
  4137e7:	test   al,al
  4137e9:	je     4137f5 <isspace@plt+0xfee5>
  4137eb:	mov    rdi,rsp
  4137ee:	xor    esi,esi
  4137f0:	call   412710 <isspace@plt+0xee00>
  4137f5:	mov    rax,QWORD PTR [rsp+0x20]
  4137fa:	mov    rcx,QWORD PTR fs:0x28
  413803:	cmp    rcx,QWORD PTR [rsp+0x28]
  413808:	jne    413810 <isspace@plt+0xff00>
  41380a:	add    rsp,0x30
  41380e:	pop    rbx
  41380f:	ret    
  413810:	call   403280 <__stack_chk_fail@plt>
  413815:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41381f:	nop
  413820:	push   r15
  413822:	push   r14
  413824:	push   rbx
  413825:	sub    rsp,0x40
  413829:	mov    rbx,rdx
  41382c:	mov    rax,rsi
  41382f:	mov    r14,rdi
  413832:	mov    rcx,QWORD PTR fs:0x28
  41383b:	mov    QWORD PTR [rsp+0x38],rcx
  413840:	lea    r15,[rsp+0x10]
  413845:	mov    rdi,r15
  413848:	mov    rsi,r14
  41384b:	mov    rdx,rax
  41384e:	call   410760 <isspace@plt+0xce50>
  413853:	mov    esi,0xa
  413858:	mov    rdi,r15
  41385b:	call   412880 <isspace@plt+0xef70>
  413860:	movzx  edx,al
  413863:	add    rdx,QWORD PTR [rsp+0x30]
  413868:	lea    rdi,[rsp+0x10]
  41386d:	mov    rsi,r14
  413870:	call   410760 <isspace@plt+0xce50>
  413875:	test   rbx,rbx
  413878:	je     4138b9 <isspace@plt+0xffa9>
  41387a:	lea    r14,[rsp+0x10]
  41387f:	lea    r15,[rsp+0xf]
  413884:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41388e:	xchg   ax,ax
  413890:	mov    rdi,r14
  413893:	mov    rsi,r15
  413896:	call   412690 <isspace@plt+0xed80>
  41389b:	cmp    BYTE PTR [rsp+0xf],0xa
  4138a0:	je     4138b9 <isspace@plt+0xffa9>
  4138a2:	test   al,al
  4138a4:	je     4138b9 <isspace@plt+0xffa9>
  4138a6:	add    rbx,0xffffffffffffffff
  4138aa:	xor    esi,esi
  4138ac:	mov    rdi,r14
  4138af:	call   412710 <isspace@plt+0xee00>
  4138b4:	test   rbx,rbx
  4138b7:	jne    413890 <isspace@plt+0xff80>
  4138b9:	mov    rax,QWORD PTR [rsp+0x30]
  4138be:	mov    rcx,QWORD PTR fs:0x28
  4138c7:	cmp    rcx,QWORD PTR [rsp+0x38]
  4138cc:	jne    4138d8 <isspace@plt+0xffc8>
  4138ce:	add    rsp,0x40
  4138d2:	pop    rbx
  4138d3:	pop    r14
  4138d5:	pop    r15
  4138d7:	ret    
  4138d8:	call   403280 <__stack_chk_fail@plt>
  4138dd:	nop    DWORD PTR [rax]
  4138e0:	push   rbp
  4138e1:	push   r15
  4138e3:	push   r14
  4138e5:	push   rbx
  4138e6:	sub    rsp,0x38
  4138ea:	mov    rbx,rsi
  4138ed:	mov    rbp,rdi
  4138f0:	mov    rax,QWORD PTR fs:0x28
  4138f9:	mov    QWORD PTR [rsp+0x30],rax
  4138fe:	lea    r14,[rsp+0x8]
  413903:	mov    rdi,r14
  413906:	mov    rsi,rbp
  413909:	mov    rdx,rbx
  41390c:	call   410760 <isspace@plt+0xce50>
  413911:	mov    esi,0xa
  413916:	mov    rdi,r14
  413919:	call   412880 <isspace@plt+0xef70>
  41391e:	movzx  edx,al
  413921:	add    rdx,QWORD PTR [rsp+0x28]
  413926:	lea    r14,[rsp+0x8]
  41392b:	mov    rdi,r14
  41392e:	mov    rsi,rbp
  413931:	call   410760 <isspace@plt+0xce50>
  413936:	lea    rsi,[rsp+0x7]
  41393b:	mov    rdi,r14
  41393e:	call   412690 <isspace@plt+0xed80>
  413943:	xor    ebp,ebp
  413945:	cmp    BYTE PTR [rsp+0x7],0xa
  41394a:	je     413990 <isspace@plt+0x10080>
  41394c:	test   al,al
  41394e:	je     413990 <isspace@plt+0x10080>
  413950:	cmp    QWORD PTR [rsp+0x28],rbx
  413955:	jae    413990 <isspace@plt+0x10080>
  413957:	xor    ebp,ebp
  413959:	lea    r14,[rsp+0x8]
  41395e:	lea    r15,[rsp+0x7]
  413963:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41396d:	nop    DWORD PTR [rax]
  413970:	mov    rdi,r14
  413973:	mov    rsi,r15
  413976:	call   412b50 <isspace@plt+0xf240>
  41397b:	test   al,al
  41397d:	je     413990 <isspace@plt+0x10080>
  41397f:	add    ebp,0x1
  413982:	cmp    QWORD PTR [rsp+0x28],rbx
  413987:	jae    413990 <isspace@plt+0x10080>
  413989:	cmp    BYTE PTR [rsp+0x7],0xa
  41398e:	jne    413970 <isspace@plt+0x10060>
  413990:	mov    rax,QWORD PTR fs:0x28
  413999:	cmp    rax,QWORD PTR [rsp+0x30]
  41399e:	jne    4139ad <isspace@plt+0x1009d>
  4139a0:	mov    eax,ebp
  4139a2:	add    rsp,0x38
  4139a6:	pop    rbx
  4139a7:	pop    r14
  4139a9:	pop    r15
  4139ab:	pop    rbp
  4139ac:	ret    
  4139ad:	call   403280 <__stack_chk_fail@plt>
  4139b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4139bc:	nop    DWORD PTR [rax+0x0]
  4139c0:	push   rbp
  4139c1:	push   r15
  4139c3:	push   r14
  4139c5:	push   r13
  4139c7:	push   r12
  4139c9:	push   rbx
  4139ca:	sub    rsp,0x58
  4139ce:	mov    r14,rsi
  4139d1:	mov    r15,rdi
  4139d4:	mov    rax,QWORD PTR fs:0x28
  4139dd:	mov    QWORD PTR [rsp+0x50],rax
  4139e2:	mov    QWORD PTR [rsp+0x10],0x0
  4139eb:	lea    rbx,[rsp+0x18]
  4139f0:	mov    rdi,rbx
  4139f3:	mov    rsi,r15
  4139f6:	mov    rdx,r14
  4139f9:	call   410760 <isspace@plt+0xce50>
  4139fe:	mov    esi,0xa
  413a03:	mov    rdi,rbx
  413a06:	call   412880 <isspace@plt+0xef70>
  413a0b:	movzx  edx,al
  413a0e:	add    rdx,QWORD PTR [rsp+0x38]
  413a13:	lea    rdi,[rsp+0x18]
  413a18:	mov    rsi,r15
  413a1b:	call   410760 <isspace@plt+0xce50>
  413a20:	mov    rsi,QWORD PTR [rsp+0x38]
  413a25:	xor    ebx,ebx
  413a27:	cmp    rsi,r14
  413a2a:	jae    413afc <isspace@plt+0x101ec>
  413a30:	xor    ebx,ebx
  413a32:	lea    r12,[rsp+0x40]
  413a37:	lea    rbp,[rsp+0x10]
  413a3c:	lea    r13,[rsp+0x18]
  413a41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  413a50:	mov    edx,0x10
  413a55:	mov    rdi,r15
  413a58:	mov    rcx,r12
  413a5b:	call   411380 <isspace@plt+0xda70>
  413a60:	test   rax,rax
  413a63:	je     413afc <isspace@plt+0x101ec>
  413a69:	cmp    BYTE PTR [rsp+0x40],0xa
  413a6e:	je     413afc <isspace@plt+0x101ec>
  413a74:	lea    rdi,[rsp+0xc]
  413a79:	mov    rsi,r12
  413a7c:	mov    rdx,rax
  413a7f:	mov    rcx,rbp
  413a82:	call   4032b0 <mbrtowc@plt>
  413a87:	cmp    rax,0xfffffffffffffffe
  413a8b:	je     413ae0 <isspace@plt+0x101d0>
  413a8d:	test   rax,rax
  413a90:	je     413ac0 <isspace@plt+0x101b0>
  413a92:	cmp    rax,0xffffffffffffffff
  413a96:	jne    413ab0 <isspace@plt+0x101a0>
  413a98:	call   403130 <__errno_location@plt>
  413a9d:	cmp    DWORD PTR [rax],0x54
  413aa0:	jne    413ab0 <isspace@plt+0x101a0>
  413aa2:	mov    QWORD PTR [rsp+0x10],0x0
  413aab:	add    ebx,0x1
  413aae:	jmp    413ae0 <isspace@plt+0x101d0>
  413ab0:	cmp    BYTE PTR [rsp+0x40],0x9
  413ab5:	jne    413ac5 <isspace@plt+0x101b5>
  413ab7:	add    ebx,0x1
  413aba:	jmp    413ae0 <isspace@plt+0x101d0>
  413abc:	nop    DWORD PTR [rax+0x0]
  413ac0:	add    ebx,0x2
  413ac3:	jmp    413ae0 <isspace@plt+0x101d0>
  413ac5:	mov    edi,DWORD PTR [rsp+0xc]
  413ac9:	call   4035a0 <wcwidth@plt>
  413ace:	cmp    eax,0xffffffff
  413ad1:	mov    ecx,0x2
  413ad6:	cmove  eax,ecx
  413ad9:	add    ebx,eax
  413adb:	nop    DWORD PTR [rax+rax*1+0x0]
  413ae0:	xor    esi,esi
  413ae2:	mov    rdi,r13
  413ae5:	call   4129c0 <isspace@plt+0xf0b0>
  413aea:	test   al,al
  413aec:	je     413afc <isspace@plt+0x101ec>
  413aee:	mov    rsi,QWORD PTR [rsp+0x38]
  413af3:	cmp    rsi,r14
  413af6:	jb     413a50 <isspace@plt+0x10140>
  413afc:	mov    rax,QWORD PTR fs:0x28
  413b05:	cmp    rax,QWORD PTR [rsp+0x50]
  413b0a:	jne    413b1d <isspace@plt+0x1020d>
  413b0c:	mov    eax,ebx
  413b0e:	add    rsp,0x58
  413b12:	pop    rbx
  413b13:	pop    r12
  413b15:	pop    r13
  413b17:	pop    r14
  413b19:	pop    r15
  413b1b:	pop    rbp
  413b1c:	ret    
  413b1d:	call   403280 <__stack_chk_fail@plt>
  413b22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413b2c:	nop    DWORD PTR [rax+0x0]
  413b30:	push   rbp
  413b31:	push   r15
  413b33:	push   r14
  413b35:	push   r13
  413b37:	push   r12
  413b39:	push   rbx
  413b3a:	sub    rsp,0x58
  413b3e:	mov    r15d,edx
  413b41:	mov    rax,rsi
  413b44:	mov    rbx,rdi
  413b47:	mov    rcx,QWORD PTR fs:0x28
  413b50:	mov    QWORD PTR [rsp+0x50],rcx
  413b55:	mov    QWORD PTR [rsp+0x10],0x0
  413b5e:	lea    rbp,[rsp+0x18]
  413b63:	mov    rdi,rbp
  413b66:	mov    rsi,rbx
  413b69:	mov    rdx,rax
  413b6c:	call   410760 <isspace@plt+0xce50>
  413b71:	mov    esi,0xa
  413b76:	mov    rdi,rbp
  413b79:	call   412880 <isspace@plt+0xef70>
  413b7e:	movzx  edx,al
  413b81:	add    rdx,QWORD PTR [rsp+0x38]
  413b86:	lea    rdi,[rsp+0x18]
  413b8b:	mov    rsi,rbx
  413b8e:	call   410760 <isspace@plt+0xce50>
  413b93:	mov    rsi,QWORD PTR [rsp+0x38]
  413b98:	lea    rcx,[rsp+0x40]
  413b9d:	mov    edx,0x10
  413ba2:	mov    rdi,rbx
  413ba5:	call   411380 <isspace@plt+0xda70>
  413baa:	test   rax,rax
  413bad:	je     413c8c <isspace@plt+0x1037c>
  413bb3:	cmp    BYTE PTR [rsp+0x40],0xa
  413bb8:	je     413c8c <isspace@plt+0x1037c>
  413bbe:	xor    r13d,r13d
  413bc1:	lea    r14,[rsp+0xc]
  413bc6:	lea    rbp,[rsp+0x40]
  413bcb:	lea    r12,[rsp+0x10]
  413bd0:	mov    rdi,r14
  413bd3:	mov    rsi,rbp
  413bd6:	mov    rdx,rax
  413bd9:	mov    rcx,r12
  413bdc:	call   4032b0 <mbrtowc@plt>
  413be1:	cmp    rax,0xfffffffffffffffe
  413be5:	je     413c34 <isspace@plt+0x10324>
  413be7:	test   rax,rax
  413bea:	je     413c30 <isspace@plt+0x10320>
  413bec:	cmp    rax,0xffffffffffffffff
  413bf0:	jne    413c10 <isspace@plt+0x10300>
  413bf2:	call   403130 <__errno_location@plt>
  413bf7:	cmp    DWORD PTR [rax],0x54
  413bfa:	jne    413c10 <isspace@plt+0x10300>
  413bfc:	mov    QWORD PTR [rsp+0x10],0x0
  413c05:	jmp    413c17 <isspace@plt+0x10307>
  413c07:	nop    WORD PTR [rax+rax*1+0x0]
  413c10:	cmp    BYTE PTR [rsp+0x40],0x9
  413c15:	jne    413c70 <isspace@plt+0x10360>
  413c17:	add    r13d,0x1
  413c1b:	cmp    r13d,r15d
  413c1e:	jl     413c39 <isspace@plt+0x10329>
  413c20:	jmp    413c8c <isspace@plt+0x1037c>
  413c22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413c2c:	nop    DWORD PTR [rax+0x0]
  413c30:	add    r13d,0x2
  413c34:	cmp    r13d,r15d
  413c37:	jge    413c8c <isspace@plt+0x1037c>
  413c39:	xor    esi,esi
  413c3b:	lea    rdi,[rsp+0x18]
  413c40:	call   4129c0 <isspace@plt+0xf0b0>
  413c45:	test   al,al
  413c47:	je     413c8c <isspace@plt+0x1037c>
  413c49:	mov    rsi,QWORD PTR [rsp+0x38]
  413c4e:	mov    edx,0x10
  413c53:	mov    rdi,rbx
  413c56:	mov    rcx,rbp
  413c59:	call   411380 <isspace@plt+0xda70>
  413c5e:	test   rax,rax
  413c61:	je     413c8c <isspace@plt+0x1037c>
  413c63:	cmp    BYTE PTR [rsp+0x40],0xa
  413c68:	jne    413bd0 <isspace@plt+0x102c0>
  413c6e:	jmp    413c8c <isspace@plt+0x1037c>
  413c70:	mov    edi,DWORD PTR [rsp+0xc]
  413c74:	call   4035a0 <wcwidth@plt>
  413c79:	cmp    eax,0xffffffff
  413c7c:	mov    ecx,0x2
  413c81:	cmove  eax,ecx
  413c84:	add    r13d,eax
  413c87:	cmp    r13d,r15d
  413c8a:	jl     413c39 <isspace@plt+0x10329>
  413c8c:	mov    rax,QWORD PTR [rsp+0x38]
  413c91:	mov    rcx,QWORD PTR fs:0x28
  413c9a:	cmp    rcx,QWORD PTR [rsp+0x50]
  413c9f:	jne    413cb0 <isspace@plt+0x103a0>
  413ca1:	add    rsp,0x58
  413ca5:	pop    rbx
  413ca6:	pop    r12
  413ca8:	pop    r13
  413caa:	pop    r14
  413cac:	pop    r15
  413cae:	pop    rbp
  413caf:	ret    
  413cb0:	call   403280 <__stack_chk_fail@plt>
  413cb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413cbf:	nop
  413cc0:	push   r14
  413cc2:	push   rbx
  413cc3:	sub    rsp,0x38
  413cc7:	mov    rbx,rsi
  413cca:	mov    rax,rdi
  413ccd:	mov    rcx,QWORD PTR fs:0x28
  413cd6:	mov    QWORD PTR [rsp+0x30],rcx
  413cdb:	mov    r14,rsp
  413cde:	mov    rdi,r14
  413ce1:	mov    rsi,rax
  413ce4:	mov    rdx,rbx
  413ce7:	call   410760 <isspace@plt+0xce50>
  413cec:	lea    rsi,[rsp+0x2f]
  413cf1:	mov    rdi,r14
  413cf4:	call   412690 <isspace@plt+0xed80>
  413cf9:	cmp    BYTE PTR [rsp+0x2f],0xa
  413cfe:	je     413d13 <isspace@plt+0x10403>
  413d00:	test   al,al
  413d02:	je     413d13 <isspace@plt+0x10403>
  413d04:	mov    rdi,rsp
  413d07:	xor    esi,esi
  413d09:	call   412b50 <isspace@plt+0xf240>
  413d0e:	mov    rbx,QWORD PTR [rsp+0x20]
  413d13:	mov    rax,QWORD PTR fs:0x28
  413d1c:	cmp    rax,QWORD PTR [rsp+0x30]
  413d21:	jne    413d2e <isspace@plt+0x1041e>
  413d23:	mov    rax,rbx
  413d26:	add    rsp,0x38
  413d2a:	pop    rbx
  413d2b:	pop    r14
  413d2d:	ret    
  413d2e:	call   403280 <__stack_chk_fail@plt>
  413d33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413d3d:	nop    DWORD PTR [rax]
  413d40:	push   r14
  413d42:	push   rbx
  413d43:	sub    rsp,0x38
  413d47:	mov    rbx,rsi
  413d4a:	mov    rax,rdi
  413d4d:	mov    rcx,QWORD PTR fs:0x28
  413d56:	mov    QWORD PTR [rsp+0x30],rcx
  413d5b:	mov    r14,rsp
  413d5e:	mov    rdi,r14
  413d61:	mov    rsi,rax
  413d64:	mov    rdx,rbx
  413d67:	call   410760 <isspace@plt+0xce50>
  413d6c:	lea    rsi,[rsp+0x2f]
  413d71:	mov    rdi,r14
  413d74:	call   412d60 <isspace@plt+0xf450>
  413d79:	mov    ecx,eax
  413d7b:	mov    dl,BYTE PTR [rsp+0x2f]
  413d7f:	mov    rax,rbx
  413d82:	test   cl,cl
  413d84:	je     413d8b <isspace@plt+0x1047b>
  413d86:	mov    rax,QWORD PTR [rsp+0x20]
  413d8b:	cmp    dl,0xa
  413d8e:	cmove  rax,rbx
  413d92:	mov    rcx,QWORD PTR fs:0x28
  413d9b:	cmp    rcx,QWORD PTR [rsp+0x30]
  413da0:	jne    413daa <isspace@plt+0x1049a>
  413da2:	add    rsp,0x38
  413da6:	pop    rbx
  413da7:	pop    r14
  413da9:	ret    
  413daa:	call   403280 <__stack_chk_fail@plt>
  413daf:	nop
  413db0:	push   rbp
  413db1:	push   r15
  413db3:	push   r14
  413db5:	push   rbx
  413db6:	sub    rsp,0x38
  413dba:	mov    r14,rsi
  413dbd:	mov    rbx,rdi
  413dc0:	mov    rax,QWORD PTR fs:0x28
  413dc9:	mov    QWORD PTR [rsp+0x30],rax
  413dce:	call   4139c0 <isspace@plt+0x100b0>
  413dd3:	mov    ebp,eax
  413dd5:	lea    r15,[rsp+0x8]
  413dda:	mov    rdi,r15
  413ddd:	mov    rsi,rbx
  413de0:	mov    rdx,r14
  413de3:	call   410760 <isspace@plt+0xce50>
  413de8:	mov    esi,0xa
  413ded:	mov    rdi,r15
  413df0:	call   412880 <isspace@plt+0xef70>
  413df5:	mov    rsi,QWORD PTR [rsp+0x28]
  413dfa:	mov    rdi,rbx
  413dfd:	mov    edx,ebp
  413dff:	call   413b30 <isspace@plt+0x10220>
  413e04:	mov    rcx,QWORD PTR fs:0x28
  413e0d:	cmp    rcx,QWORD PTR [rsp+0x30]
  413e12:	jne    413e1f <isspace@plt+0x1050f>
  413e14:	add    rsp,0x38
  413e18:	pop    rbx
  413e19:	pop    r14
  413e1b:	pop    r15
  413e1d:	pop    rbp
  413e1e:	ret    
  413e1f:	call   403280 <__stack_chk_fail@plt>
  413e24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e2e:	xchg   ax,ax
  413e30:	push   rbp
  413e31:	push   r15
  413e33:	push   r14
  413e35:	push   rbx
  413e36:	sub    rsp,0x38
  413e3a:	mov    r14,rsi
  413e3d:	mov    rbx,rdi
  413e40:	mov    rax,QWORD PTR fs:0x28
  413e49:	mov    QWORD PTR [rsp+0x30],rax
  413e4e:	call   4139c0 <isspace@plt+0x100b0>
  413e53:	mov    r15d,eax
  413e56:	lea    rbp,[rsp+0x8]
  413e5b:	mov    rdi,rbp
  413e5e:	mov    rsi,rbx
  413e61:	mov    rdx,r14
  413e64:	call   410760 <isspace@plt+0xce50>
  413e69:	mov    esi,0xa
  413e6e:	mov    rdi,rbp
  413e71:	call   412920 <isspace@plt+0xf010>
  413e76:	test   al,al
  413e78:	je     413e86 <isspace@plt+0x10576>
  413e7a:	lea    rdi,[rsp+0x8]
  413e7f:	xor    esi,esi
  413e81:	call   412710 <isspace@plt+0xee00>
  413e86:	mov    rbp,QWORD PTR [rsp+0x28]
  413e8b:	mov    rdi,rbx
  413e8e:	call   410a90 <isspace@plt+0xd180>
  413e93:	cmp    rbp,rax
  413e96:	je     413ea9 <isspace@plt+0x10599>
  413e98:	mov    rdi,rbx
  413e9b:	mov    rsi,rbp
  413e9e:	mov    edx,r15d
  413ea1:	call   413b30 <isspace@plt+0x10220>
  413ea6:	mov    r14,rax
  413ea9:	mov    rax,QWORD PTR fs:0x28
  413eb2:	cmp    rax,QWORD PTR [rsp+0x30]
  413eb7:	jne    413ec7 <isspace@plt+0x105b7>
  413eb9:	mov    rax,r14
  413ebc:	add    rsp,0x38
  413ec0:	pop    rbx
  413ec1:	pop    r14
  413ec3:	pop    r15
  413ec5:	pop    rbp
  413ec6:	ret    
  413ec7:	call   403280 <__stack_chk_fail@plt>
  413ecc:	nop    DWORD PTR [rax+0x0]
  413ed0:	push   rbx
  413ed1:	sub    rsp,0x10
  413ed5:	mov    rbx,rsi
  413ed8:	mov    rax,QWORD PTR fs:0x28
  413ee1:	mov    QWORD PTR [rsp+0x8],rax
  413ee6:	mov    rdi,rsi
  413ee9:	call   417400 <isspace@plt+0x13af0>
  413eee:	mov    ecx,eax
  413ef0:	mov    rax,0xffffffffffffffff
  413ef7:	test   cl,cl
  413ef9:	je     413efe <isspace@plt+0x105ee>
  413efb:	mov    rax,QWORD PTR [rbx]
  413efe:	mov    rcx,QWORD PTR fs:0x28
  413f07:	cmp    rcx,QWORD PTR [rsp+0x8]
  413f0c:	jne    413f14 <isspace@plt+0x10604>
  413f0e:	add    rsp,0x10
  413f12:	pop    rbx
  413f13:	ret    
  413f14:	call   403280 <__stack_chk_fail@plt>
  413f19:	nop    DWORD PTR [rax+0x0]
  413f20:	push   r15
  413f22:	push   r14
  413f24:	push   r13
  413f26:	push   r12
  413f28:	push   rbx
  413f29:	sub    rsp,0x30
  413f2d:	mov    rbx,rdx
  413f30:	mov    r14,rsi
  413f33:	mov    r12,rdi
  413f36:	mov    rax,QWORD PTR fs:0x28
  413f3f:	mov    QWORD PTR [rsp+0x28],rax
  413f44:	mov    rdi,rsi
  413f47:	mov    rsi,rdx
  413f4a:	call   417750 <isspace@plt+0x13e40>
  413f4f:	mov    r15,0xffffffffffffffff
  413f56:	test   al,al
  413f58:	je     413f9f <isspace@plt+0x1068f>
  413f5a:	mov    r13,rsp
  413f5d:	mov    rdi,r13
  413f60:	mov    rsi,r12
  413f63:	mov    rdx,rbx
  413f66:	call   410760 <isspace@plt+0xce50>
  413f6b:	mov    esi,0xa
  413f70:	mov    rdi,r13
  413f73:	call   412920 <isspace@plt+0xf010>
  413f78:	test   al,al
  413f7a:	je     413f86 <isspace@plt+0x10676>
  413f7c:	mov    rdi,rsp
  413f7f:	xor    esi,esi
  413f81:	call   412710 <isspace@plt+0xee00>
  413f86:	mov    rax,QWORD PTR [rsp+0x20]
  413f8b:	cmp    rax,rbx
  413f8e:	je     413f9f <isspace@plt+0x1068f>
  413f90:	cmp    rax,QWORD PTR [r14+0x8]
  413f94:	mov    r15,0xffffffffffffffff
  413f9b:	cmovb  r15,rax
  413f9f:	mov    rax,QWORD PTR fs:0x28
  413fa8:	cmp    rax,QWORD PTR [rsp+0x28]
  413fad:	jne    413fc0 <isspace@plt+0x106b0>
  413faf:	mov    rax,r15
  413fb2:	add    rsp,0x30
  413fb6:	pop    rbx
  413fb7:	pop    r12
  413fb9:	pop    r13
  413fbb:	pop    r14
  413fbd:	pop    r15
  413fbf:	ret    
  413fc0:	call   403280 <__stack_chk_fail@plt>
  413fc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413fcf:	nop
  413fd0:	push   r15
  413fd2:	push   r14
  413fd4:	push   rbx
  413fd5:	sub    rsp,0x40
  413fd9:	mov    rbx,rdx
  413fdc:	mov    r14,rsi
  413fdf:	mov    rax,rdi
  413fe2:	mov    rcx,QWORD PTR fs:0x28
  413feb:	mov    QWORD PTR [rsp+0x38],rcx
  413ff0:	lea    r15,[rsp+0x8]
  413ff5:	mov    rdi,r15
  413ff8:	mov    rsi,rax
  413ffb:	mov    rdx,r14
  413ffe:	call   410760 <isspace@plt+0xce50>
  414003:	lea    rsi,[rsp+0x37]
  414008:	mov    rdi,r15
  41400b:	call   412690 <isspace@plt+0xed80>
  414010:	test   al,al
  414012:	je     4140b3 <isspace@plt+0x107a3>
  414018:	movzx  edi,BYTE PTR [rsp+0x37]
  41401d:	call   rbx
  41401f:	lea    r14,[rsp+0x8]
  414024:	lea    r15,[rsp+0x37]
  414029:	test   eax,eax
  41402b:	je     414060 <isspace@plt+0x10750>
  41402d:	nop    DWORD PTR [rax]
  414030:	movzx  edi,BYTE PTR [rsp+0x37]
  414035:	call   rbx
  414037:	test   eax,eax
  414039:	je     41407a <isspace@plt+0x1076a>
  41403b:	call   4038f0 <__ctype_b_loc@plt>
  414040:	mov    rax,QWORD PTR [rax]
  414043:	movzx  ecx,BYTE PTR [rsp+0x37]
  414048:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41404d:	jne    41407a <isspace@plt+0x1076a>
  41404f:	mov    rdi,r14
  414052:	mov    rsi,r15
  414055:	call   412b50 <isspace@plt+0xf240>
  41405a:	test   al,al
  41405c:	jne    414030 <isspace@plt+0x10720>
  41405e:	jmp    41407a <isspace@plt+0x1076a>
  414060:	movzx  edi,BYTE PTR [rsp+0x37]
  414065:	call   rbx
  414067:	test   eax,eax
  414069:	jne    41407a <isspace@plt+0x1076a>
  41406b:	mov    rdi,r14
  41406e:	mov    rsi,r15
  414071:	call   412b50 <isspace@plt+0xf240>
  414076:	test   al,al
  414078:	jne    414060 <isspace@plt+0x10750>
  41407a:	call   4038f0 <__ctype_b_loc@plt>
  41407f:	mov    rbx,rax
  414082:	lea    r14,[rsp+0x8]
  414087:	lea    r15,[rsp+0x37]
  41408c:	nop    DWORD PTR [rax+0x0]
  414090:	mov    rax,QWORD PTR [rbx]
  414093:	movzx  ecx,BYTE PTR [rsp+0x37]
  414098:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41409d:	je     4140ae <isspace@plt+0x1079e>
  41409f:	mov    rdi,r14
  4140a2:	mov    rsi,r15
  4140a5:	call   412b50 <isspace@plt+0xf240>
  4140aa:	test   al,al
  4140ac:	jne    414090 <isspace@plt+0x10780>
  4140ae:	mov    r14,QWORD PTR [rsp+0x28]
  4140b3:	mov    rax,QWORD PTR fs:0x28
  4140bc:	cmp    rax,QWORD PTR [rsp+0x38]
  4140c1:	jne    4140d0 <isspace@plt+0x107c0>
  4140c3:	mov    rax,r14
  4140c6:	add    rsp,0x40
  4140ca:	pop    rbx
  4140cb:	pop    r14
  4140cd:	pop    r15
  4140cf:	ret    
  4140d0:	call   403280 <__stack_chk_fail@plt>
  4140d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4140df:	nop
  4140e0:	push   r15
  4140e2:	push   r14
  4140e4:	push   r12
  4140e6:	push   rbx
  4140e7:	sub    rsp,0x38
  4140eb:	mov    r14,rdx
  4140ee:	mov    rax,rsi
  4140f1:	mov    rcx,rdi
  4140f4:	mov    rdx,QWORD PTR fs:0x28
  4140fd:	mov    QWORD PTR [rsp+0x30],rdx
  414102:	mov    r15,rsp
  414105:	mov    rdi,r15
  414108:	mov    rsi,rcx
  41410b:	mov    rdx,rax
  41410e:	call   410760 <isspace@plt+0xce50>
  414113:	lea    rbx,[rsp+0x2f]
  414118:	nop    DWORD PTR [rax+rax*1+0x0]
  414120:	mov    rdi,r15
  414123:	mov    rsi,rbx
  414126:	call   412d60 <isspace@plt+0xf450>
  41412b:	test   al,al
  41412d:	je     414145 <isspace@plt+0x10835>
  41412f:	call   4038f0 <__ctype_b_loc@plt>
  414134:	mov    rcx,QWORD PTR [rax]
  414137:	movzx  eax,BYTE PTR [rsp+0x2f]
  41413c:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  414141:	jne    414120 <isspace@plt+0x10810>
  414143:	jmp    414149 <isspace@plt+0x10839>
  414145:	mov    al,BYTE PTR [rsp+0x2f]
  414149:	movzx  edi,al
  41414c:	call   r14
  41414f:	mov    r15,rsp
  414152:	lea    r12,[rsp+0x2f]
  414157:	test   eax,eax
  414159:	je     4141a0 <isspace@plt+0x10890>
  41415b:	nop    DWORD PTR [rax+rax*1+0x0]
  414160:	mov    rbx,QWORD PTR [rsp+0x20]
  414165:	mov    rdi,r15
  414168:	mov    rsi,r12
  41416b:	call   412d60 <isspace@plt+0xf450>
  414170:	test   al,al
  414172:	je     4141c0 <isspace@plt+0x108b0>
  414174:	movzx  edi,BYTE PTR [rsp+0x2f]
  414179:	call   r14
  41417c:	test   eax,eax
  41417e:	je     4141c0 <isspace@plt+0x108b0>
  414180:	call   4038f0 <__ctype_b_loc@plt>
  414185:	mov    rax,QWORD PTR [rax]
  414188:	movzx  ecx,BYTE PTR [rsp+0x2f]
  41418d:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  414192:	je     414160 <isspace@plt+0x10850>
  414194:	jmp    4141c0 <isspace@plt+0x108b0>
  414196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4141a0:	mov    rbx,QWORD PTR [rsp+0x20]
  4141a5:	mov    rdi,r15
  4141a8:	mov    rsi,r12
  4141ab:	call   412d60 <isspace@plt+0xf450>
  4141b0:	test   al,al
  4141b2:	je     4141c0 <isspace@plt+0x108b0>
  4141b4:	movzx  edi,BYTE PTR [rsp+0x2f]
  4141b9:	call   r14
  4141bc:	test   eax,eax
  4141be:	je     4141a0 <isspace@plt+0x10890>
  4141c0:	mov    rax,QWORD PTR fs:0x28
  4141c9:	cmp    rax,QWORD PTR [rsp+0x30]
  4141ce:	jne    4141df <isspace@plt+0x108cf>
  4141d0:	mov    rax,rbx
  4141d3:	add    rsp,0x38
  4141d7:	pop    rbx
  4141d8:	pop    r12
  4141da:	pop    r14
  4141dc:	pop    r15
  4141de:	ret    
  4141df:	call   403280 <__stack_chk_fail@plt>
  4141e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4141ee:	xchg   ax,ax
  4141f0:	push   r15
  4141f2:	push   r14
  4141f4:	push   r12
  4141f6:	push   rbx
  4141f7:	sub    rsp,0x38
  4141fb:	mov    r14,rdx
  4141fe:	mov    rax,rsi
  414201:	mov    rcx,rdi
  414204:	mov    rdx,QWORD PTR fs:0x28
  41420d:	mov    QWORD PTR [rsp+0x30],rdx
  414212:	mov    r15,rsp
  414215:	mov    rdi,r15
  414218:	mov    rsi,rcx
  41421b:	mov    rdx,rax
  41421e:	call   410760 <isspace@plt+0xce50>
  414223:	lea    rbx,[rsp+0x2f]
  414228:	nop    DWORD PTR [rax+rax*1+0x0]
  414230:	mov    rdi,r15
  414233:	mov    rsi,rbx
  414236:	call   412b50 <isspace@plt+0xf240>
  41423b:	test   al,al
  41423d:	je     414255 <isspace@plt+0x10945>
  41423f:	call   4038f0 <__ctype_b_loc@plt>
  414244:	mov    rcx,QWORD PTR [rax]
  414247:	movzx  eax,BYTE PTR [rsp+0x2f]
  41424c:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  414251:	jne    414230 <isspace@plt+0x10920>
  414253:	jmp    414259 <isspace@plt+0x10949>
  414255:	mov    al,BYTE PTR [rsp+0x2f]
  414259:	movzx  edi,al
  41425c:	call   r14
  41425f:	mov    r15,rsp
  414262:	lea    r12,[rsp+0x2f]
  414267:	test   eax,eax
  414269:	je     4142b0 <isspace@plt+0x109a0>
  41426b:	nop    DWORD PTR [rax+rax*1+0x0]
  414270:	mov    rbx,QWORD PTR [rsp+0x20]
  414275:	mov    rdi,r15
  414278:	mov    rsi,r12
  41427b:	call   412b50 <isspace@plt+0xf240>
  414280:	test   al,al
  414282:	je     4142d0 <isspace@plt+0x109c0>
  414284:	movzx  edi,BYTE PTR [rsp+0x2f]
  414289:	call   r14
  41428c:	test   eax,eax
  41428e:	je     4142d0 <isspace@plt+0x109c0>
  414290:	call   4038f0 <__ctype_b_loc@plt>
  414295:	mov    rax,QWORD PTR [rax]
  414298:	movzx  ecx,BYTE PTR [rsp+0x2f]
  41429d:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4142a2:	je     414270 <isspace@plt+0x10960>
  4142a4:	jmp    4142d0 <isspace@plt+0x109c0>
  4142a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4142b0:	mov    rbx,QWORD PTR [rsp+0x20]
  4142b5:	mov    rdi,r15
  4142b8:	mov    rsi,r12
  4142bb:	call   412b50 <isspace@plt+0xf240>
  4142c0:	test   al,al
  4142c2:	je     4142d0 <isspace@plt+0x109c0>
  4142c4:	movsx  edi,BYTE PTR [rsp+0x2f]
  4142c9:	call   r14
  4142cc:	test   eax,eax
  4142ce:	je     4142b0 <isspace@plt+0x109a0>
  4142d0:	mov    rax,QWORD PTR fs:0x28
  4142d9:	cmp    rax,QWORD PTR [rsp+0x30]
  4142de:	jne    4142ef <isspace@plt+0x109df>
  4142e0:	mov    rax,rbx
  4142e3:	add    rsp,0x38
  4142e7:	pop    rbx
  4142e8:	pop    r12
  4142ea:	pop    r14
  4142ec:	pop    r15
  4142ee:	ret    
  4142ef:	call   403280 <__stack_chk_fail@plt>
  4142f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4142fe:	xchg   ax,ax
  414300:	push   r15
  414302:	push   r14
  414304:	push   rbx
  414305:	sub    rsp,0x40
  414309:	mov    rbx,rdx
  41430c:	mov    r14,rsi
  41430f:	mov    rax,rdi
  414312:	mov    rcx,QWORD PTR fs:0x28
  41431b:	mov    QWORD PTR [rsp+0x38],rcx
  414320:	lea    r15,[rsp+0x8]
  414325:	mov    rdi,r15
  414328:	mov    rsi,rax
  41432b:	mov    rdx,r14
  41432e:	call   410760 <isspace@plt+0xce50>
  414333:	lea    rsi,[rsp+0x37]
  414338:	mov    rdi,r15
  41433b:	call   412690 <isspace@plt+0xed80>
  414340:	test   al,al
  414342:	je     4143e3 <isspace@plt+0x10ad3>
  414348:	movzx  edi,BYTE PTR [rsp+0x37]
  41434d:	call   rbx
  41434f:	lea    r14,[rsp+0x8]
  414354:	lea    r15,[rsp+0x37]
  414359:	test   eax,eax
  41435b:	je     414390 <isspace@plt+0x10a80>
  41435d:	nop    DWORD PTR [rax]
  414360:	movzx  edi,BYTE PTR [rsp+0x37]
  414365:	call   rbx
  414367:	test   eax,eax
  414369:	je     4143aa <isspace@plt+0x10a9a>
  41436b:	call   4038f0 <__ctype_b_loc@plt>
  414370:	mov    rax,QWORD PTR [rax]
  414373:	movzx  ecx,BYTE PTR [rsp+0x37]
  414378:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41437d:	jne    4143aa <isspace@plt+0x10a9a>
  41437f:	mov    rdi,r14
  414382:	mov    rsi,r15
  414385:	call   412d60 <isspace@plt+0xf450>
  41438a:	test   al,al
  41438c:	jne    414360 <isspace@plt+0x10a50>
  41438e:	jmp    4143aa <isspace@plt+0x10a9a>
  414390:	movzx  edi,BYTE PTR [rsp+0x37]
  414395:	call   rbx
  414397:	test   eax,eax
  414399:	jne    4143aa <isspace@plt+0x10a9a>
  41439b:	mov    rdi,r14
  41439e:	mov    rsi,r15
  4143a1:	call   412d60 <isspace@plt+0xf450>
  4143a6:	test   al,al
  4143a8:	jne    414390 <isspace@plt+0x10a80>
  4143aa:	call   4038f0 <__ctype_b_loc@plt>
  4143af:	mov    rbx,rax
  4143b2:	lea    r14,[rsp+0x8]
  4143b7:	lea    r15,[rsp+0x37]
  4143bc:	nop    DWORD PTR [rax+0x0]
  4143c0:	mov    rax,QWORD PTR [rbx]
  4143c3:	movzx  ecx,BYTE PTR [rsp+0x37]
  4143c8:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4143cd:	je     4143de <isspace@plt+0x10ace>
  4143cf:	mov    rdi,r14
  4143d2:	mov    rsi,r15
  4143d5:	call   412d60 <isspace@plt+0xf450>
  4143da:	test   al,al
  4143dc:	jne    4143c0 <isspace@plt+0x10ab0>
  4143de:	mov    r14,QWORD PTR [rsp+0x28]
  4143e3:	mov    rax,QWORD PTR fs:0x28
  4143ec:	cmp    rax,QWORD PTR [rsp+0x38]
  4143f1:	jne    414400 <isspace@plt+0x10af0>
  4143f3:	mov    rax,r14
  4143f6:	add    rsp,0x40
  4143fa:	pop    rbx
  4143fb:	pop    r14
  4143fd:	pop    r15
  4143ff:	ret    
  414400:	call   403280 <__stack_chk_fail@plt>
  414405:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41440f:	nop
  414410:	push   r15
  414412:	push   r14
  414414:	push   r12
  414416:	push   rbx
  414417:	sub    rsp,0x38
  41441b:	mov    rax,rsi
  41441e:	mov    rcx,rdi
  414421:	mov    rdx,QWORD PTR fs:0x28
  41442a:	mov    QWORD PTR [rsp+0x30],rdx
  41442f:	mov    r14,rsp
  414432:	mov    rdi,r14
  414435:	mov    rsi,rcx
  414438:	mov    rdx,rax
  41443b:	call   410760 <isspace@plt+0xce50>
  414440:	lea    rbx,[rsp+0x2f]
  414445:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41444f:	nop
  414450:	mov    rdi,r14
  414453:	mov    rsi,rbx
  414456:	call   412b50 <isspace@plt+0xf240>
  41445b:	test   al,al
  41445d:	je     414475 <isspace@plt+0x10b65>
  41445f:	call   4038f0 <__ctype_b_loc@plt>
  414464:	mov    rcx,QWORD PTR [rax]
  414467:	movzx  eax,BYTE PTR [rsp+0x2f]
  41446c:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  414471:	jne    414450 <isspace@plt+0x10b40>
  414473:	jmp    414479 <isspace@plt+0x10b69>
  414475:	mov    al,BYTE PTR [rsp+0x2f]
  414479:	movzx  edi,al
  41447c:	call   403910 <isspace@plt>
  414481:	mov    r14,rsp
  414484:	lea    r15,[rsp+0x2f]
  414489:	test   eax,eax
  41448b:	je     4144d0 <isspace@plt+0x10bc0>
  41448d:	nop    DWORD PTR [rax]
  414490:	mov    r12,QWORD PTR [rsp+0x20]
  414495:	mov    rdi,r14
  414498:	mov    rsi,r15
  41449b:	call   412b50 <isspace@plt+0xf240>
  4144a0:	test   al,al
  4144a2:	je     4144f2 <isspace@plt+0x10be2>
  4144a4:	movzx  ebx,BYTE PTR [rsp+0x2f]
  4144a9:	mov    edi,ebx
  4144ab:	call   403910 <isspace@plt>
  4144b0:	test   eax,eax
  4144b2:	je     4144f2 <isspace@plt+0x10be2>
  4144b4:	call   4038f0 <__ctype_b_loc@plt>
  4144b9:	mov    rax,QWORD PTR [rax]
  4144bc:	test   BYTE PTR [rax+rbx*2+0x1],0x20
  4144c1:	je     414490 <isspace@plt+0x10b80>
  4144c3:	jmp    4144f2 <isspace@plt+0x10be2>
  4144c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4144cf:	nop
  4144d0:	mov    r12,QWORD PTR [rsp+0x20]
  4144d5:	mov    rdi,r14
  4144d8:	mov    rsi,r15
  4144db:	call   412b50 <isspace@plt+0xf240>
  4144e0:	test   al,al
  4144e2:	je     4144f2 <isspace@plt+0x10be2>
  4144e4:	movsx  edi,BYTE PTR [rsp+0x2f]
  4144e9:	call   403910 <isspace@plt>
  4144ee:	test   eax,eax
  4144f0:	je     4144d0 <isspace@plt+0x10bc0>
  4144f2:	mov    rax,QWORD PTR fs:0x28
  4144fb:	cmp    rax,QWORD PTR [rsp+0x30]
  414500:	jne    414511 <isspace@plt+0x10c01>
  414502:	mov    rax,r12
  414505:	add    rsp,0x38
  414509:	pop    rbx
  41450a:	pop    r12
  41450c:	pop    r14
  41450e:	pop    r15
  414510:	ret    
  414511:	call   403280 <__stack_chk_fail@plt>
  414516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414520:	push   rbp
  414521:	push   r15
  414523:	push   r14
  414525:	push   rbx
  414526:	sub    rsp,0x38
  41452a:	mov    rbx,rsi
  41452d:	mov    rax,rdi
  414530:	mov    rcx,QWORD PTR fs:0x28
  414539:	mov    QWORD PTR [rsp+0x30],rcx
  41453e:	mov    r14,rsp
  414541:	mov    rdi,r14
  414544:	mov    rsi,rax
  414547:	mov    rdx,rbx
  41454a:	call   410760 <isspace@plt+0xce50>
  41454f:	lea    rsi,[rsp+0x2f]
  414554:	mov    rdi,r14
  414557:	call   412690 <isspace@plt+0xed80>
  41455c:	test   al,al
  41455e:	je     414633 <isspace@plt+0x10d23>
  414564:	mov    bl,BYTE PTR [rsp+0x2f]
  414568:	movzx  ebp,bl
  41456b:	mov    edi,ebp
  41456d:	call   403910 <isspace@plt>
  414572:	mov    r14d,eax
  414575:	mov    edi,ebp
  414577:	call   403910 <isspace@plt>
  41457c:	test   r14d,r14d
  41457f:	je     4145d0 <isspace@plt+0x10cc0>
  414581:	test   eax,eax
  414583:	je     4145fd <isspace@plt+0x10ced>
  414585:	call   4038f0 <__ctype_b_loc@plt>
  41458a:	mov    rbp,rax
  41458d:	mov    r14,rsp
  414590:	lea    r15,[rsp+0x2f]
  414595:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41459f:	nop
  4145a0:	mov    rax,QWORD PTR [rbp+0x0]
  4145a4:	movzx  ecx,bl
  4145a7:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4145ac:	jne    4145fd <isspace@plt+0x10ced>
  4145ae:	mov    rdi,r14
  4145b1:	mov    rsi,r15
  4145b4:	call   412d60 <isspace@plt+0xf450>
  4145b9:	test   al,al
  4145bb:	je     4145fd <isspace@plt+0x10ced>
  4145bd:	movzx  ebx,BYTE PTR [rsp+0x2f]
  4145c2:	movzx  edi,bl
  4145c5:	call   403910 <isspace@plt>
  4145ca:	test   eax,eax
  4145cc:	jne    4145a0 <isspace@plt+0x10c90>
  4145ce:	jmp    4145fd <isspace@plt+0x10ced>
  4145d0:	test   eax,eax
  4145d2:	jne    4145fd <isspace@plt+0x10ced>
  4145d4:	mov    r14,rsp
  4145d7:	lea    rbx,[rsp+0x2f]
  4145dc:	nop    DWORD PTR [rax+0x0]
  4145e0:	mov    rdi,r14
  4145e3:	mov    rsi,rbx
  4145e6:	call   412d60 <isspace@plt+0xf450>
  4145eb:	test   al,al
  4145ed:	je     4145fd <isspace@plt+0x10ced>
  4145ef:	movzx  edi,BYTE PTR [rsp+0x2f]
  4145f4:	call   403910 <isspace@plt>
  4145f9:	test   eax,eax
  4145fb:	je     4145e0 <isspace@plt+0x10cd0>
  4145fd:	call   4038f0 <__ctype_b_loc@plt>
  414602:	mov    rbx,rax
  414605:	mov    r14,rsp
  414608:	lea    r15,[rsp+0x2f]
  41460d:	nop    DWORD PTR [rax]
  414610:	mov    rax,QWORD PTR [rbx]
  414613:	movzx  ecx,BYTE PTR [rsp+0x2f]
  414618:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41461d:	je     41462e <isspace@plt+0x10d1e>
  41461f:	mov    rdi,r14
  414622:	mov    rsi,r15
  414625:	call   412d60 <isspace@plt+0xf450>
  41462a:	test   al,al
  41462c:	jne    414610 <isspace@plt+0x10d00>
  41462e:	mov    rbx,QWORD PTR [rsp+0x20]
  414633:	mov    rax,QWORD PTR fs:0x28
  41463c:	cmp    rax,QWORD PTR [rsp+0x30]
  414641:	jne    414651 <isspace@plt+0x10d41>
  414643:	mov    rax,rbx
  414646:	add    rsp,0x38
  41464a:	pop    rbx
  41464b:	pop    r14
  41464d:	pop    r15
  41464f:	pop    rbp
  414650:	ret    
  414651:	call   403280 <__stack_chk_fail@plt>
  414656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414660:	push   rbp
  414661:	push   r15
  414663:	push   r14
  414665:	push   rbx
  414666:	sub    rsp,0x38
  41466a:	mov    rbx,rsi
  41466d:	mov    rax,rdi
  414670:	mov    rcx,QWORD PTR fs:0x28
  414679:	mov    QWORD PTR [rsp+0x30],rcx
  41467e:	mov    r14,rsp
  414681:	mov    rdi,r14
  414684:	mov    rsi,rax
  414687:	mov    rdx,rbx
  41468a:	call   410760 <isspace@plt+0xce50>
  41468f:	lea    rsi,[rsp+0x2f]
  414694:	mov    rdi,r14
  414697:	call   412690 <isspace@plt+0xed80>
  41469c:	test   al,al
  41469e:	je     414773 <isspace@plt+0x10e63>
  4146a4:	mov    bl,BYTE PTR [rsp+0x2f]
  4146a8:	movzx  ebp,bl
  4146ab:	mov    edi,ebp
  4146ad:	call   403910 <isspace@plt>
  4146b2:	mov    r14d,eax
  4146b5:	mov    edi,ebp
  4146b7:	call   403910 <isspace@plt>
  4146bc:	test   r14d,r14d
  4146bf:	je     414710 <isspace@plt+0x10e00>
  4146c1:	test   eax,eax
  4146c3:	je     41473d <isspace@plt+0x10e2d>
  4146c5:	call   4038f0 <__ctype_b_loc@plt>
  4146ca:	mov    rbp,rax
  4146cd:	mov    r14,rsp
  4146d0:	lea    r15,[rsp+0x2f]
  4146d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4146df:	nop
  4146e0:	mov    rax,QWORD PTR [rbp+0x0]
  4146e4:	movzx  ecx,bl
  4146e7:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4146ec:	jne    41473d <isspace@plt+0x10e2d>
  4146ee:	mov    rdi,r14
  4146f1:	mov    rsi,r15
  4146f4:	call   412b50 <isspace@plt+0xf240>
  4146f9:	test   al,al
  4146fb:	je     41473d <isspace@plt+0x10e2d>
  4146fd:	movzx  ebx,BYTE PTR [rsp+0x2f]
  414702:	movzx  edi,bl
  414705:	call   403910 <isspace@plt>
  41470a:	test   eax,eax
  41470c:	jne    4146e0 <isspace@plt+0x10dd0>
  41470e:	jmp    41473d <isspace@plt+0x10e2d>
  414710:	test   eax,eax
  414712:	jne    41473d <isspace@plt+0x10e2d>
  414714:	mov    r14,rsp
  414717:	lea    rbx,[rsp+0x2f]
  41471c:	nop    DWORD PTR [rax+0x0]
  414720:	mov    rdi,r14
  414723:	mov    rsi,rbx
  414726:	call   412b50 <isspace@plt+0xf240>
  41472b:	test   al,al
  41472d:	je     41473d <isspace@plt+0x10e2d>
  41472f:	movzx  edi,BYTE PTR [rsp+0x2f]
  414734:	call   403910 <isspace@plt>
  414739:	test   eax,eax
  41473b:	je     414720 <isspace@plt+0x10e10>
  41473d:	call   4038f0 <__ctype_b_loc@plt>
  414742:	mov    rbx,rax
  414745:	mov    r14,rsp
  414748:	lea    r15,[rsp+0x2f]
  41474d:	nop    DWORD PTR [rax]
  414750:	mov    rax,QWORD PTR [rbx]
  414753:	movzx  ecx,BYTE PTR [rsp+0x2f]
  414758:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41475d:	je     41476e <isspace@plt+0x10e5e>
  41475f:	mov    rdi,r14
  414762:	mov    rsi,r15
  414765:	call   412b50 <isspace@plt+0xf240>
  41476a:	test   al,al
  41476c:	jne    414750 <isspace@plt+0x10e40>
  41476e:	mov    rbx,QWORD PTR [rsp+0x20]
  414773:	mov    rax,QWORD PTR fs:0x28
  41477c:	cmp    rax,QWORD PTR [rsp+0x30]
  414781:	jne    414791 <isspace@plt+0x10e81>
  414783:	mov    rax,rbx
  414786:	add    rsp,0x38
  41478a:	pop    rbx
  41478b:	pop    r14
  41478d:	pop    r15
  41478f:	pop    rbp
  414790:	ret    
  414791:	call   403280 <__stack_chk_fail@plt>
  414796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4147a0:	push   r15
  4147a2:	push   r14
  4147a4:	push   r12
  4147a6:	push   rbx
  4147a7:	sub    rsp,0x38
  4147ab:	mov    rax,rsi
  4147ae:	mov    rcx,rdi
  4147b1:	mov    rdx,QWORD PTR fs:0x28
  4147ba:	mov    QWORD PTR [rsp+0x30],rdx
  4147bf:	mov    r14,rsp
  4147c2:	mov    rdi,r14
  4147c5:	mov    rsi,rcx
  4147c8:	mov    rdx,rax
  4147cb:	call   410760 <isspace@plt+0xce50>
  4147d0:	lea    rbx,[rsp+0x2f]
  4147d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4147df:	nop
  4147e0:	mov    rdi,r14
  4147e3:	mov    rsi,rbx
  4147e6:	call   412d60 <isspace@plt+0xf450>
  4147eb:	test   al,al
  4147ed:	je     414805 <isspace@plt+0x10ef5>
  4147ef:	call   4038f0 <__ctype_b_loc@plt>
  4147f4:	mov    rcx,QWORD PTR [rax]
  4147f7:	movzx  eax,BYTE PTR [rsp+0x2f]
  4147fc:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  414801:	jne    4147e0 <isspace@plt+0x10ed0>
  414803:	jmp    414809 <isspace@plt+0x10ef9>
  414805:	mov    al,BYTE PTR [rsp+0x2f]
  414809:	movzx  edi,al
  41480c:	call   403910 <isspace@plt>
  414811:	mov    r14,rsp
  414814:	lea    r15,[rsp+0x2f]
  414819:	test   eax,eax
  41481b:	je     414860 <isspace@plt+0x10f50>
  41481d:	nop    DWORD PTR [rax]
  414820:	mov    r12,QWORD PTR [rsp+0x20]
  414825:	mov    rdi,r14
  414828:	mov    rsi,r15
  41482b:	call   412d60 <isspace@plt+0xf450>
  414830:	test   al,al
  414832:	je     414882 <isspace@plt+0x10f72>
  414834:	movzx  ebx,BYTE PTR [rsp+0x2f]
  414839:	mov    edi,ebx
  41483b:	call   403910 <isspace@plt>
  414840:	test   eax,eax
  414842:	je     414882 <isspace@plt+0x10f72>
  414844:	call   4038f0 <__ctype_b_loc@plt>
  414849:	mov    rax,QWORD PTR [rax]
  41484c:	test   BYTE PTR [rax+rbx*2+0x1],0x20
  414851:	je     414820 <isspace@plt+0x10f10>
  414853:	jmp    414882 <isspace@plt+0x10f72>
  414855:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41485f:	nop
  414860:	mov    r12,QWORD PTR [rsp+0x20]
  414865:	mov    rdi,r14
  414868:	mov    rsi,r15
  41486b:	call   412d60 <isspace@plt+0xf450>
  414870:	test   al,al
  414872:	je     414882 <isspace@plt+0x10f72>
  414874:	movzx  edi,BYTE PTR [rsp+0x2f]
  414879:	call   403910 <isspace@plt>
  41487e:	test   eax,eax
  414880:	je     414860 <isspace@plt+0x10f50>
  414882:	mov    rax,QWORD PTR fs:0x28
  41488b:	cmp    rax,QWORD PTR [rsp+0x30]
  414890:	jne    4148a1 <isspace@plt+0x10f91>
  414892:	mov    rax,r12
  414895:	add    rsp,0x38
  414899:	pop    rbx
  41489a:	pop    r12
  41489c:	pop    r14
  41489e:	pop    r15
  4148a0:	ret    
  4148a1:	call   403280 <__stack_chk_fail@plt>
  4148a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4148b0:	push   r15
  4148b2:	push   r14
  4148b4:	push   r12
  4148b6:	push   rbx
  4148b7:	sub    rsp,0x38
  4148bb:	mov    rax,rsi
  4148be:	mov    rcx,rdi
  4148c1:	mov    rdx,QWORD PTR fs:0x28
  4148ca:	mov    QWORD PTR [rsp+0x30],rdx
  4148cf:	mov    r14,rsp
  4148d2:	mov    rdi,r14
  4148d5:	mov    rsi,rcx
  4148d8:	mov    rdx,rax
  4148db:	call   410760 <isspace@plt+0xce50>
  4148e0:	lea    rbx,[rsp+0x2f]
  4148e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4148ef:	nop
  4148f0:	mov    rdi,r14
  4148f3:	mov    rsi,rbx
  4148f6:	call   412b50 <isspace@plt+0xf240>
  4148fb:	test   al,al
  4148fd:	je     4149a8 <isspace@plt+0x11098>
  414903:	call   4038f0 <__ctype_b_loc@plt>
  414908:	mov    rcx,QWORD PTR [rax]
  41490b:	movzx  eax,BYTE PTR [rsp+0x2f]
  414910:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  414915:	jne    4148f0 <isspace@plt+0x10fe0>
  414917:	test   al,al
  414919:	js     4149c0 <isspace@plt+0x110b0>
  41491f:	cmp    al,0x5f
  414921:	je     4149c0 <isspace@plt+0x110b0>
  414927:	movzx  eax,al
  41492a:	lea    ecx,[rax-0x30]
  41492d:	cmp    ecx,0xa
  414930:	jb     4149c0 <isspace@plt+0x110b0>
  414936:	and    eax,0xffffffdf
  414939:	add    eax,0xffffffbf
  41493c:	cmp    eax,0x1a
  41493f:	jb     4149c0 <isspace@plt+0x110b0>
  414945:	mov    r14,rsp
  414948:	lea    r15,[rsp+0x2f]
  41494d:	nop    DWORD PTR [rax]
  414950:	mov    r12,QWORD PTR [rsp+0x20]
  414955:	mov    rdi,r14
  414958:	mov    rsi,r15
  41495b:	call   412b50 <isspace@plt+0xf240>
  414960:	test   al,al
  414962:	je     414a16 <isspace@plt+0x11106>
  414968:	movzx  ebx,BYTE PTR [rsp+0x2f]
  41496d:	test   bl,bl
  41496f:	js     414a16 <isspace@plt+0x11106>
  414975:	cmp    bl,0x5f
  414978:	je     414a16 <isspace@plt+0x11106>
  41497e:	lea    eax,[rbx-0x30]
  414981:	cmp    eax,0xa
  414984:	jb     414a16 <isspace@plt+0x11106>
  41498a:	mov    eax,ebx
  41498c:	and    eax,0xffffffdf
  41498f:	add    eax,0xffffffbf
  414992:	cmp    eax,0x1a
  414995:	jb     414a16 <isspace@plt+0x11106>
  414997:	call   4038f0 <__ctype_b_loc@plt>
  41499c:	mov    rax,QWORD PTR [rax]
  41499f:	test   BYTE PTR [rax+rbx*2+0x1],0x20
  4149a4:	je     414950 <isspace@plt+0x11040>
  4149a6:	jmp    414a16 <isspace@plt+0x11106>
  4149a8:	mov    al,BYTE PTR [rsp+0x2f]
  4149ac:	test   al,al
  4149ae:	jns    41491f <isspace@plt+0x1100f>
  4149b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149be:	xchg   ax,ax
  4149c0:	mov    r12,QWORD PTR [rsp+0x20]
  4149c5:	mov    rdi,rsp
  4149c8:	lea    rsi,[rsp+0x2f]
  4149cd:	call   412b50 <isspace@plt+0xf240>
  4149d2:	test   al,al
  4149d4:	je     414a16 <isspace@plt+0x11106>
  4149d6:	movsx  eax,BYTE PTR [rsp+0x2f]
  4149db:	test   eax,eax
  4149dd:	js     414a10 <isspace@plt+0x11100>
  4149df:	lea    ecx,[rax-0x30]
  4149e2:	cmp    ecx,0x9
  4149e5:	seta   cl
  4149e8:	mov    edx,eax
  4149ea:	and    edx,0xffffffdf
  4149ed:	add    edx,0xffffffbf
  4149f0:	cmp    edx,0x19
  4149f3:	seta   dl
  4149f6:	cmp    al,0x5f
  4149f8:	setne  al
  4149fb:	and    al,cl
  4149fd:	and    al,dl
  4149ff:	movzx  eax,al
  414a02:	test   eax,eax
  414a04:	je     4149c0 <isspace@plt+0x110b0>
  414a06:	jmp    414a16 <isspace@plt+0x11106>
  414a08:	nop    DWORD PTR [rax+rax*1+0x0]
  414a10:	xor    eax,eax
  414a12:	test   eax,eax
  414a14:	je     4149c0 <isspace@plt+0x110b0>
  414a16:	mov    rax,QWORD PTR fs:0x28
  414a1f:	cmp    rax,QWORD PTR [rsp+0x30]
  414a24:	jne    414a35 <isspace@plt+0x11125>
  414a26:	mov    rax,r12
  414a29:	add    rsp,0x38
  414a2d:	pop    rbx
  414a2e:	pop    r12
  414a30:	pop    r14
  414a32:	pop    r15
  414a34:	ret    
  414a35:	call   403280 <__stack_chk_fail@plt>
  414a3a:	nop    WORD PTR [rax+rax*1+0x0]
  414a40:	push   r15
  414a42:	push   r14
  414a44:	push   rbx
  414a45:	sub    rsp,0x40
  414a49:	mov    rbx,rsi
  414a4c:	mov    rax,rdi
  414a4f:	mov    rcx,QWORD PTR fs:0x28
  414a58:	mov    QWORD PTR [rsp+0x38],rcx
  414a5d:	lea    r14,[rsp+0x8]
  414a62:	mov    rdi,r14
  414a65:	mov    rsi,rax
  414a68:	mov    rdx,rbx
  414a6b:	call   410760 <isspace@plt+0xce50>
  414a70:	lea    rsi,[rsp+0x37]
  414a75:	mov    rdi,r14
  414a78:	call   412690 <isspace@plt+0xed80>
  414a7d:	test   al,al
  414a7f:	je     414ba3 <isspace@plt+0x11293>
  414a85:	mov    al,BYTE PTR [rsp+0x37]
  414a89:	test   al,al
  414a8b:	js     414b25 <isspace@plt+0x11215>
  414a91:	cmp    al,0x5f
  414a93:	je     414b25 <isspace@plt+0x11215>
  414a99:	movzx  ecx,al
  414a9c:	lea    edx,[rcx-0x30]
  414a9f:	cmp    edx,0xa
  414aa2:	jb     414b25 <isspace@plt+0x11215>
  414aa8:	and    ecx,0xffffffdf
  414aab:	add    ecx,0xffffffbf
  414aae:	cmp    ecx,0x1a
  414ab1:	jb     414b25 <isspace@plt+0x11215>
  414ab3:	test   al,al
  414ab5:	js     414b63 <isspace@plt+0x11253>
  414abb:	lea    r14,[rsp+0x8]
  414ac0:	lea    r15,[rsp+0x37]
  414ac5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414acf:	nop
  414ad0:	cmp    al,0x5f
  414ad2:	je     414b63 <isspace@plt+0x11253>
  414ad8:	movzx  ebx,al
  414adb:	lea    eax,[rbx-0x30]
  414ade:	cmp    eax,0xa
  414ae1:	jb     414b63 <isspace@plt+0x11253>
  414ae7:	mov    eax,ebx
  414ae9:	and    eax,0xffffffdf
  414aec:	add    eax,0xffffffbf
  414aef:	cmp    eax,0x1a
  414af2:	jb     414b63 <isspace@plt+0x11253>
  414af4:	call   4038f0 <__ctype_b_loc@plt>
  414af9:	mov    rax,QWORD PTR [rax]
  414afc:	test   BYTE PTR [rax+rbx*2+0x1],0x20
  414b01:	jne    414b63 <isspace@plt+0x11253>
  414b03:	mov    rdi,r14
  414b06:	mov    rsi,r15
  414b09:	call   412d60 <isspace@plt+0xf450>
  414b0e:	test   al,al
  414b10:	je     414b63 <isspace@plt+0x11253>
  414b12:	movzx  eax,BYTE PTR [rsp+0x37]
  414b17:	test   al,al
  414b19:	jns    414ad0 <isspace@plt+0x111c0>
  414b1b:	jmp    414b63 <isspace@plt+0x11253>
  414b1d:	nop    DWORD PTR [rax]
  414b20:	movzx  eax,BYTE PTR [rsp+0x37]
  414b25:	test   al,al
  414b27:	js     414b50 <isspace@plt+0x11240>
  414b29:	cmp    al,0x5f
  414b2b:	je     414b50 <isspace@plt+0x11240>
  414b2d:	movzx  eax,al
  414b30:	lea    ecx,[rax-0x30]
  414b33:	cmp    ecx,0xa
  414b36:	jb     414b50 <isspace@plt+0x11240>
  414b38:	and    eax,0xffffffdf
  414b3b:	add    eax,0xffffffbf
  414b3e:	cmp    eax,0x19
  414b41:	ja     414b63 <isspace@plt+0x11253>
  414b43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414b4d:	nop    DWORD PTR [rax]
  414b50:	lea    rdi,[rsp+0x8]
  414b55:	lea    rsi,[rsp+0x37]
  414b5a:	call   412d60 <isspace@plt+0xf450>
  414b5f:	test   al,al
  414b61:	jne    414b20 <isspace@plt+0x11210>
  414b63:	call   4038f0 <__ctype_b_loc@plt>
  414b68:	mov    rbx,rax
  414b6b:	lea    r14,[rsp+0x8]
  414b70:	lea    r15,[rsp+0x37]
  414b75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414b7f:	nop
  414b80:	mov    rax,QWORD PTR [rbx]
  414b83:	movzx  ecx,BYTE PTR [rsp+0x37]
  414b88:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  414b8d:	je     414b9e <isspace@plt+0x1128e>
  414b8f:	mov    rdi,r14
  414b92:	mov    rsi,r15
  414b95:	call   412d60 <isspace@plt+0xf450>
  414b9a:	test   al,al
  414b9c:	jne    414b80 <isspace@plt+0x11270>
  414b9e:	mov    rbx,QWORD PTR [rsp+0x28]
  414ba3:	mov    rax,QWORD PTR fs:0x28
  414bac:	cmp    rax,QWORD PTR [rsp+0x38]
  414bb1:	jne    414bc0 <isspace@plt+0x112b0>
  414bb3:	mov    rax,rbx
  414bb6:	add    rsp,0x40
  414bba:	pop    rbx
  414bbb:	pop    r14
  414bbd:	pop    r15
  414bbf:	ret    
  414bc0:	call   403280 <__stack_chk_fail@plt>
  414bc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414bcf:	nop
  414bd0:	push   r15
  414bd2:	push   r14
  414bd4:	push   rbx
  414bd5:	sub    rsp,0x40
  414bd9:	mov    rbx,rsi
  414bdc:	mov    rax,rdi
  414bdf:	mov    rcx,QWORD PTR fs:0x28
  414be8:	mov    QWORD PTR [rsp+0x38],rcx
  414bed:	lea    r14,[rsp+0x8]
  414bf2:	mov    rdi,r14
  414bf5:	mov    rsi,rax
  414bf8:	mov    rdx,rbx
  414bfb:	call   410760 <isspace@plt+0xce50>
  414c00:	lea    rsi,[rsp+0x37]
  414c05:	mov    rdi,r14
  414c08:	call   412690 <isspace@plt+0xed80>
  414c0d:	test   al,al
  414c0f:	je     414d33 <isspace@plt+0x11423>
  414c15:	mov    al,BYTE PTR [rsp+0x37]
  414c19:	test   al,al
  414c1b:	js     414cb5 <isspace@plt+0x113a5>
  414c21:	cmp    al,0x5f
  414c23:	je     414cb5 <isspace@plt+0x113a5>
  414c29:	movzx  ecx,al
  414c2c:	lea    edx,[rcx-0x30]
  414c2f:	cmp    edx,0xa
  414c32:	jb     414cb5 <isspace@plt+0x113a5>
  414c38:	and    ecx,0xffffffdf
  414c3b:	add    ecx,0xffffffbf
  414c3e:	cmp    ecx,0x1a
  414c41:	jb     414cb5 <isspace@plt+0x113a5>
  414c43:	test   al,al
  414c45:	js     414cf3 <isspace@plt+0x113e3>
  414c4b:	lea    r14,[rsp+0x8]
  414c50:	lea    r15,[rsp+0x37]
  414c55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414c5f:	nop
  414c60:	cmp    al,0x5f
  414c62:	je     414cf3 <isspace@plt+0x113e3>
  414c68:	movzx  ebx,al
  414c6b:	lea    eax,[rbx-0x30]
  414c6e:	cmp    eax,0xa
  414c71:	jb     414cf3 <isspace@plt+0x113e3>
  414c77:	mov    eax,ebx
  414c79:	and    eax,0xffffffdf
  414c7c:	add    eax,0xffffffbf
  414c7f:	cmp    eax,0x1a
  414c82:	jb     414cf3 <isspace@plt+0x113e3>
  414c84:	call   4038f0 <__ctype_b_loc@plt>
  414c89:	mov    rax,QWORD PTR [rax]
  414c8c:	test   BYTE PTR [rax+rbx*2+0x1],0x20
  414c91:	jne    414cf3 <isspace@plt+0x113e3>
  414c93:	mov    rdi,r14
  414c96:	mov    rsi,r15
  414c99:	call   412b50 <isspace@plt+0xf240>
  414c9e:	test   al,al
  414ca0:	je     414cf3 <isspace@plt+0x113e3>
  414ca2:	movzx  eax,BYTE PTR [rsp+0x37]
  414ca7:	test   al,al
  414ca9:	jns    414c60 <isspace@plt+0x11350>
  414cab:	jmp    414cf3 <isspace@plt+0x113e3>
  414cad:	nop    DWORD PTR [rax]
  414cb0:	movzx  eax,BYTE PTR [rsp+0x37]
  414cb5:	test   al,al
  414cb7:	js     414ce0 <isspace@plt+0x113d0>
  414cb9:	cmp    al,0x5f
  414cbb:	je     414ce0 <isspace@plt+0x113d0>
  414cbd:	movzx  eax,al
  414cc0:	lea    ecx,[rax-0x30]
  414cc3:	cmp    ecx,0xa
  414cc6:	jb     414ce0 <isspace@plt+0x113d0>
  414cc8:	and    eax,0xffffffdf
  414ccb:	add    eax,0xffffffbf
  414cce:	cmp    eax,0x19
  414cd1:	ja     414cf3 <isspace@plt+0x113e3>
  414cd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414cdd:	nop    DWORD PTR [rax]
  414ce0:	lea    rdi,[rsp+0x8]
  414ce5:	lea    rsi,[rsp+0x37]
  414cea:	call   412b50 <isspace@plt+0xf240>
  414cef:	test   al,al
  414cf1:	jne    414cb0 <isspace@plt+0x113a0>
  414cf3:	call   4038f0 <__ctype_b_loc@plt>
  414cf8:	mov    rbx,rax
  414cfb:	lea    r14,[rsp+0x8]
  414d00:	lea    r15,[rsp+0x37]
  414d05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d0f:	nop
  414d10:	mov    rax,QWORD PTR [rbx]
  414d13:	movzx  ecx,BYTE PTR [rsp+0x37]
  414d18:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  414d1d:	je     414d2e <isspace@plt+0x1141e>
  414d1f:	mov    rdi,r14
  414d22:	mov    rsi,r15
  414d25:	call   412b50 <isspace@plt+0xf240>
  414d2a:	test   al,al
  414d2c:	jne    414d10 <isspace@plt+0x11400>
  414d2e:	mov    rbx,QWORD PTR [rsp+0x28]
  414d33:	mov    rax,QWORD PTR fs:0x28
  414d3c:	cmp    rax,QWORD PTR [rsp+0x38]
  414d41:	jne    414d50 <isspace@plt+0x11440>
  414d43:	mov    rax,rbx
  414d46:	add    rsp,0x40
  414d4a:	pop    rbx
  414d4b:	pop    r14
  414d4d:	pop    r15
  414d4f:	ret    
  414d50:	call   403280 <__stack_chk_fail@plt>
  414d55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d5f:	nop
  414d60:	push   r15
  414d62:	push   r14
  414d64:	push   r12
  414d66:	push   rbx
  414d67:	sub    rsp,0x38
  414d6b:	mov    rax,rsi
  414d6e:	mov    rcx,rdi
  414d71:	mov    rdx,QWORD PTR fs:0x28
  414d7a:	mov    QWORD PTR [rsp+0x30],rdx
  414d7f:	mov    r14,rsp
  414d82:	mov    rdi,r14
  414d85:	mov    rsi,rcx
  414d88:	mov    rdx,rax
  414d8b:	call   410760 <isspace@plt+0xce50>
  414d90:	lea    rbx,[rsp+0x2f]
  414d95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d9f:	nop
  414da0:	mov    rdi,r14
  414da3:	mov    rsi,rbx
  414da6:	call   412d60 <isspace@plt+0xf450>
  414dab:	test   al,al
  414dad:	je     414e58 <isspace@plt+0x11548>
  414db3:	call   4038f0 <__ctype_b_loc@plt>
  414db8:	mov    rcx,QWORD PTR [rax]
  414dbb:	movzx  eax,BYTE PTR [rsp+0x2f]
  414dc0:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  414dc5:	jne    414da0 <isspace@plt+0x11490>
  414dc7:	test   al,al
  414dc9:	js     414e70 <isspace@plt+0x11560>
  414dcf:	cmp    al,0x5f
  414dd1:	je     414e70 <isspace@plt+0x11560>
  414dd7:	movzx  eax,al
  414dda:	lea    ecx,[rax-0x30]
  414ddd:	cmp    ecx,0xa
  414de0:	jb     414e70 <isspace@plt+0x11560>
  414de6:	and    eax,0xffffffdf
  414de9:	add    eax,0xffffffbf
  414dec:	cmp    eax,0x1a
  414def:	jb     414e70 <isspace@plt+0x11560>
  414df5:	mov    r14,rsp
  414df8:	lea    r15,[rsp+0x2f]
  414dfd:	nop    DWORD PTR [rax]
  414e00:	mov    r12,QWORD PTR [rsp+0x20]
  414e05:	mov    rdi,r14
  414e08:	mov    rsi,r15
  414e0b:	call   412d60 <isspace@plt+0xf450>
  414e10:	test   al,al
  414e12:	je     414ec6 <isspace@plt+0x115b6>
  414e18:	movzx  ebx,BYTE PTR [rsp+0x2f]
  414e1d:	test   bl,bl
  414e1f:	js     414ec6 <isspace@plt+0x115b6>
  414e25:	cmp    bl,0x5f
  414e28:	je     414ec6 <isspace@plt+0x115b6>
  414e2e:	lea    eax,[rbx-0x30]
  414e31:	cmp    eax,0xa
  414e34:	jb     414ec6 <isspace@plt+0x115b6>
  414e3a:	mov    eax,ebx
  414e3c:	and    eax,0xffffffdf
  414e3f:	add    eax,0xffffffbf
  414e42:	cmp    eax,0x1a
  414e45:	jb     414ec6 <isspace@plt+0x115b6>
  414e47:	call   4038f0 <__ctype_b_loc@plt>
  414e4c:	mov    rax,QWORD PTR [rax]
  414e4f:	test   BYTE PTR [rax+rbx*2+0x1],0x20
  414e54:	je     414e00 <isspace@plt+0x114f0>
  414e56:	jmp    414ec6 <isspace@plt+0x115b6>
  414e58:	mov    al,BYTE PTR [rsp+0x2f]
  414e5c:	test   al,al
  414e5e:	jns    414dcf <isspace@plt+0x114bf>
  414e64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414e6e:	xchg   ax,ax
  414e70:	mov    r12,QWORD PTR [rsp+0x20]
  414e75:	mov    rdi,rsp
  414e78:	lea    rsi,[rsp+0x2f]
  414e7d:	call   412d60 <isspace@plt+0xf450>
  414e82:	test   al,al
  414e84:	je     414ec6 <isspace@plt+0x115b6>
  414e86:	movzx  eax,BYTE PTR [rsp+0x2f]
  414e8b:	test   al,al
  414e8d:	js     414ec0 <isspace@plt+0x115b0>
  414e8f:	lea    ecx,[rax-0x30]
  414e92:	cmp    ecx,0x9
  414e95:	seta   cl
  414e98:	mov    edx,eax
  414e9a:	and    edx,0xffffffdf
  414e9d:	add    edx,0xffffffbf
  414ea0:	cmp    edx,0x19
  414ea3:	seta   dl
  414ea6:	cmp    al,0x5f
  414ea8:	setne  al
  414eab:	and    al,cl
  414ead:	and    al,dl
  414eaf:	movzx  eax,al
  414eb2:	test   eax,eax
  414eb4:	je     414e70 <isspace@plt+0x11560>
  414eb6:	jmp    414ec6 <isspace@plt+0x115b6>
  414eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  414ec0:	xor    eax,eax
  414ec2:	test   eax,eax
  414ec4:	je     414e70 <isspace@plt+0x11560>
  414ec6:	mov    rax,QWORD PTR fs:0x28
  414ecf:	cmp    rax,QWORD PTR [rsp+0x30]
  414ed4:	jne    414ee5 <isspace@plt+0x115d5>
  414ed6:	mov    rax,r12
  414ed9:	add    rsp,0x38
  414edd:	pop    rbx
  414ede:	pop    r12
  414ee0:	pop    r14
  414ee2:	pop    r15
  414ee4:	ret    
  414ee5:	call   403280 <__stack_chk_fail@plt>
  414eea:	nop    WORD PTR [rax+rax*1+0x0]
  414ef0:	push   r15
  414ef2:	push   r14
  414ef4:	push   r12
  414ef6:	push   rbx
  414ef7:	sub    rsp,0x68
  414efb:	mov    rbx,rsi
  414efe:	mov    rax,rdi
  414f01:	mov    rcx,QWORD PTR fs:0x28
  414f0a:	mov    QWORD PTR [rsp+0x60],rcx
  414f0f:	mov    BYTE PTR [rsp+0x5e],0x58
  414f14:	lea    r14,[rsp+0x30]
  414f19:	mov    rdi,r14
  414f1c:	mov    rsi,rax
  414f1f:	mov    rdx,rbx
  414f22:	call   410760 <isspace@plt+0xce50>
  414f27:	mov    rax,QWORD PTR [rsp+0x50]
  414f2c:	mov    QWORD PTR [rsp+0x20],rax
  414f31:	vmovups ymm0,YMMWORD PTR [rsp+0x30]
  414f37:	vmovups YMMWORD PTR [rsp],ymm0
  414f3c:	lea    rsi,[rsp+0x5f]
  414f41:	mov    rdi,r14
  414f44:	vzeroupper 
  414f47:	call   412690 <isspace@plt+0xed80>
  414f4c:	test   al,al
  414f4e:	je     41506d <isspace@plt+0x1175d>
  414f54:	mov    rdi,rsp
  414f57:	lea    rsi,[rsp+0x5e]
  414f5c:	call   412690 <isspace@plt+0xed80>
  414f61:	test   al,al
  414f63:	je     414fa8 <isspace@plt+0x11698>
  414f65:	call   4038f0 <__ctype_b_loc@plt>
  414f6a:	mov    r14,rax
  414f6d:	mov    rbx,rsp
  414f70:	lea    r15,[rsp+0x5e]
  414f75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414f7f:	nop
  414f80:	mov    rax,QWORD PTR [r14]
  414f83:	movzx  ecx,BYTE PTR [rsp+0x5e]
  414f88:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  414f8d:	je     414fa8 <isspace@plt+0x11698>
  414f8f:	xor    esi,esi
  414f91:	mov    rdi,rbx
  414f94:	call   4127d0 <isspace@plt+0xeec0>
  414f99:	mov    rdi,rbx
  414f9c:	mov    rsi,r15
  414f9f:	call   412690 <isspace@plt+0xed80>
  414fa4:	test   al,al
  414fa6:	jne    414f80 <isspace@plt+0x11670>
  414fa8:	cmp    QWORD PTR [rsp+0x20],0x0
  414fae:	mov    al,0x2e
  414fb0:	je     414fb6 <isspace@plt+0x116a6>
  414fb2:	mov    al,BYTE PTR [rsp+0x5e]
  414fb6:	mov    BYTE PTR [rsp+0x5e],al
  414fba:	lea    r14,[rsp+0x30]
  414fbf:	lea    r15,[rsp+0x5f]
  414fc4:	movabs r12,0x8000400200000000
  414fce:	cmp    al,0x3f
  414fd0:	jbe    414fe8 <isspace@plt+0x116d8>
  414fd2:	jmp    415010 <isspace@plt+0x11700>
  414fd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414fde:	xchg   ax,ax
  414fe0:	mov    al,BYTE PTR [rsp+0x5e]
  414fe4:	cmp    al,0x3f
  414fe6:	ja     415010 <isspace@plt+0x11700>
  414fe8:	movzx  eax,al
  414feb:	bt     r12,rax
  414fef:	jae    415010 <isspace@plt+0x11700>
  414ff1:	call   4038f0 <__ctype_b_loc@plt>
  414ff6:	mov    rbx,rax
  414ff9:	mov    rcx,QWORD PTR [rax]
  414ffc:	movzx  eax,BYTE PTR [rsp+0x5f]
  415001:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  415006:	je     415014 <isspace@plt+0x11704>
  415008:	jmp    415029 <isspace@plt+0x11719>
  41500a:	nop    WORD PTR [rax+rax*1+0x0]
  415010:	mov    al,BYTE PTR [rsp+0x5f]
  415014:	mov    BYTE PTR [rsp+0x5e],al
  415018:	mov    rdi,r14
  41501b:	mov    rsi,r15
  41501e:	call   412710 <isspace@plt+0xee00>
  415023:	test   al,al
  415025:	jne    414fe0 <isspace@plt+0x116d0>
  415027:	jmp    415068 <isspace@plt+0x11758>
  415029:	lea    r14,[rsp+0x30]
  41502e:	lea    r15,[rsp+0x5f]
  415033:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41503d:	nop    DWORD PTR [rax]
  415040:	xor    esi,esi
  415042:	mov    rdi,r14
  415045:	call   412710 <isspace@plt+0xee00>
  41504a:	mov    rdi,r14
  41504d:	mov    rsi,r15
  415050:	call   412690 <isspace@plt+0xed80>
  415055:	test   al,al
  415057:	je     415068 <isspace@plt+0x11758>
  415059:	mov    rax,QWORD PTR [rbx]
  41505c:	movzx  ecx,BYTE PTR [rsp+0x5f]
  415061:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  415066:	jne    415040 <isspace@plt+0x11730>
  415068:	mov    rbx,QWORD PTR [rsp+0x50]
  41506d:	mov    rax,QWORD PTR fs:0x28
  415076:	cmp    rax,QWORD PTR [rsp+0x60]
  41507b:	jne    41508c <isspace@plt+0x1177c>
  41507d:	mov    rax,rbx
  415080:	add    rsp,0x68
  415084:	pop    rbx
  415085:	pop    r12
  415087:	pop    r14
  415089:	pop    r15
  41508b:	ret    
  41508c:	call   403280 <__stack_chk_fail@plt>
  415091:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41509b:	nop    DWORD PTR [rax+rax*1+0x0]
  4150a0:	push   rbp
  4150a1:	push   r15
  4150a3:	push   r14
  4150a5:	push   r13
  4150a7:	push   r12
  4150a9:	push   rbx
  4150aa:	sub    rsp,0x38
  4150ae:	mov    rax,rsi
  4150b1:	mov    rcx,rdi
  4150b4:	mov    rdx,QWORD PTR fs:0x28
  4150bd:	mov    QWORD PTR [rsp+0x30],rdx
  4150c2:	mov    rdi,rsp
  4150c5:	mov    rsi,rcx
  4150c8:	mov    rdx,rax
  4150cb:	call   410760 <isspace@plt+0xce50>
  4150d0:	cmp    QWORD PTR [rsp+0x20],0x0
  4150d6:	je     4151f9 <isspace@plt+0x118e9>
  4150dc:	mov    bl,0x58
  4150de:	xor    ebp,ebp
  4150e0:	mov    r14,rsp
  4150e3:	lea    r15,[rsp+0x2f]
  4150e8:	movabs r12,0x8000400200000000
  4150f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4150fc:	nop    DWORD PTR [rax+0x0]
  415100:	mov    rdi,r14
  415103:	mov    rsi,r15
  415106:	call   4127d0 <isspace@plt+0xeec0>
  41510b:	test   al,al
  41510d:	je     415163 <isspace@plt+0x11853>
  41510f:	call   4038f0 <__ctype_b_loc@plt>
  415114:	mov    r13,rax
  415117:	test   bpl,0x1
  41511b:	je     415140 <isspace@plt+0x11830>
  41511d:	mov    rax,QWORD PTR [r13+0x0]
  415121:	movzx  ecx,bl
  415124:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  415129:	je     415140 <isspace@plt+0x11830>
  41512b:	movzx  eax,BYTE PTR [rsp+0x2f]
  415130:	cmp    rax,0x3f
  415134:	ja     415140 <isspace@plt+0x11830>
  415136:	bt     r12,rax
  41513a:	jb     4151ba <isspace@plt+0x118aa>
  41513c:	nop    DWORD PTR [rax+0x0]
  415140:	mov    rax,QWORD PTR [r13+0x0]
  415144:	movzx  ebx,BYTE PTR [rsp+0x2f]
  415149:	movzx  eax,WORD PTR [rax+rbx*2]
  41514d:	shr    eax,0xd
  415150:	not    eax
  415152:	movzx  ebp,bpl
  415156:	or     ebp,eax
  415158:	and    ebp,0x1
  41515b:	cmp    QWORD PTR [rsp+0x20],0x0
  415161:	jne    415100 <isspace@plt+0x117f0>
  415163:	test   bpl,0x1
  415167:	je     4151f9 <isspace@plt+0x118e9>
  41516d:	mov    rdi,rsp
  415170:	lea    rsi,[rsp+0x2f]
  415175:	call   412690 <isspace@plt+0xed80>
  41517a:	test   al,al
  41517c:	je     4151f9 <isspace@plt+0x118e9>
  41517e:	call   4038f0 <__ctype_b_loc@plt>
  415183:	mov    r14,rax
  415186:	mov    rbx,rsp
  415189:	lea    r15,[rsp+0x2f]
  41518e:	xchg   ax,ax
  415190:	mov    rax,QWORD PTR [r14]
  415193:	movzx  ecx,BYTE PTR [rsp+0x2f]
  415198:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41519d:	je     4151f9 <isspace@plt+0x118e9>
  41519f:	xor    esi,esi
  4151a1:	mov    rdi,rbx
  4151a4:	call   412710 <isspace@plt+0xee00>
  4151a9:	mov    rdi,rbx
  4151ac:	mov    rsi,r15
  4151af:	call   412690 <isspace@plt+0xed80>
  4151b4:	test   al,al
  4151b6:	jne    415190 <isspace@plt+0x11880>
  4151b8:	jmp    4151f9 <isspace@plt+0x118e9>
  4151ba:	mov    r14,rsp
  4151bd:	lea    r15,[rsp+0x2f]
  4151c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4151cc:	nop    DWORD PTR [rax+0x0]
  4151d0:	xor    esi,esi
  4151d2:	mov    rdi,r14
  4151d5:	call   412710 <isspace@plt+0xee00>
  4151da:	mov    rdi,r14
  4151dd:	mov    rsi,r15
  4151e0:	call   412690 <isspace@plt+0xed80>
  4151e5:	test   al,al
  4151e7:	je     4151f9 <isspace@plt+0x118e9>
  4151e9:	mov    rax,QWORD PTR [r13+0x0]
  4151ed:	movzx  ecx,BYTE PTR [rsp+0x2f]
  4151f2:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4151f7:	jne    4151d0 <isspace@plt+0x118c0>
  4151f9:	mov    rax,QWORD PTR [rsp+0x20]
  4151fe:	mov    rcx,QWORD PTR fs:0x28
  415207:	cmp    rcx,QWORD PTR [rsp+0x30]
  41520c:	jne    41521d <isspace@plt+0x1190d>
  41520e:	add    rsp,0x38
  415212:	pop    rbx
  415213:	pop    r12
  415215:	pop    r13
  415217:	pop    r14
  415219:	pop    r15
  41521b:	pop    rbp
  41521c:	ret    
  41521d:	call   403280 <__stack_chk_fail@plt>
  415222:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41522c:	nop    DWORD PTR [rax+0x0]
  415230:	push   r15
  415232:	push   r14
  415234:	push   r12
  415236:	push   rbx
  415237:	sub    rsp,0x68
  41523b:	mov    rax,rsi
  41523e:	mov    r14,rdi
  415241:	mov    rcx,QWORD PTR fs:0x28
  41524a:	mov    QWORD PTR [rsp+0x60],rcx
  41524f:	mov    rbx,rsp
  415252:	mov    rdi,rbx
  415255:	mov    rsi,r14
  415258:	mov    rdx,rax
  41525b:	call   410760 <isspace@plt+0xce50>
  415260:	lea    rsi,[rsp+0x2f]
  415265:	mov    rdi,rbx
  415268:	call   412690 <isspace@plt+0xed80>
  41526d:	test   al,al
  41526f:	je     4152ba <isspace@plt+0x119aa>
  415271:	movabs r12,0x100000600
  41527b:	mov    rbx,rsp
  41527e:	lea    r15,[rsp+0x2f]
  415283:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41528d:	nop    DWORD PTR [rax]
  415290:	movzx  eax,BYTE PTR [rsp+0x2f]
  415295:	cmp    rax,0x20
  415299:	ja     4152ba <isspace@plt+0x119aa>
  41529b:	bt     r12,rax
  41529f:	jae    4152ba <isspace@plt+0x119aa>
  4152a1:	xor    esi,esi
  4152a3:	mov    rdi,rbx
  4152a6:	call   412b50 <isspace@plt+0xf240>
  4152ab:	mov    rdi,rbx
  4152ae:	mov    rsi,r15
  4152b1:	call   412690 <isspace@plt+0xed80>
  4152b6:	test   al,al
  4152b8:	jne    415290 <isspace@plt+0x11980>
  4152ba:	mov    rdx,QWORD PTR [rsp+0x20]
  4152bf:	lea    rbx,[rsp+0x30]
  4152c4:	mov    rdi,rbx
  4152c7:	mov    rsi,r14
  4152ca:	call   410760 <isspace@plt+0xce50>
  4152cf:	lea    r15,[rsp+0x5f]
  4152d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4152de:	xchg   ax,ax
  4152e0:	mov    esi,0xa
  4152e5:	mov    rdi,rbx
  4152e8:	call   412920 <isspace@plt+0xf010>
  4152ed:	mov    r14,QWORD PTR [rsp+0x50]
  4152f2:	test   al,al
  4152f4:	je     41533c <isspace@plt+0x11a2c>
  4152f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415300:	mov    rdi,rbx
  415303:	mov    rsi,r15
  415306:	call   412710 <isspace@plt+0xee00>
  41530b:	test   al,al
  41530d:	je     415330 <isspace@plt+0x11a20>
  41530f:	movzx  eax,BYTE PTR [rsp+0x5f]
  415314:	cmp    al,0x20
  415316:	je     415300 <isspace@plt+0x119f0>
  415318:	cmp    al,0x9
  41531a:	je     415300 <isspace@plt+0x119f0>
  41531c:	cmp    al,0xa
  41531e:	jne    4152e0 <isspace@plt+0x119d0>
  415320:	jmp    415338 <isspace@plt+0x11a28>
  415322:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41532c:	nop    DWORD PTR [rax+0x0]
  415330:	mov    al,BYTE PTR [rsp+0x5f]
  415334:	cmp    al,0xa
  415336:	jne    4152e0 <isspace@plt+0x119d0>
  415338:	add    r14,0x1
  41533c:	mov    rax,QWORD PTR fs:0x28
  415345:	cmp    rax,QWORD PTR [rsp+0x60]
  41534a:	jne    41535b <isspace@plt+0x11a4b>
  41534c:	mov    rax,r14
  41534f:	add    rsp,0x68
  415353:	pop    rbx
  415354:	pop    r12
  415356:	pop    r14
  415358:	pop    r15
  41535a:	ret    
  41535b:	call   403280 <__stack_chk_fail@plt>
  415360:	push   r15
  415362:	push   r14
  415364:	push   rbx
  415365:	sub    rsp,0x40
  415369:	mov    rax,rsi
  41536c:	mov    rcx,rdi
  41536f:	mov    rdx,QWORD PTR fs:0x28
  415378:	mov    QWORD PTR [rsp+0x38],rdx
  41537d:	lea    rbx,[rsp+0x8]
  415382:	mov    rdi,rbx
  415385:	mov    rsi,rcx
  415388:	mov    rdx,rax
  41538b:	call   410760 <isspace@plt+0xce50>
  415390:	lea    r15,[rsp+0x37]
  415395:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41539f:	nop
  4153a0:	mov    esi,0xa
  4153a5:	mov    rdi,rbx
  4153a8:	call   412920 <isspace@plt+0xf010>
  4153ad:	mov    r14,QWORD PTR [rsp+0x28]
  4153b2:	test   al,al
  4153b4:	je     4153fc <isspace@plt+0x11aec>
  4153b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4153c0:	mov    rdi,rbx
  4153c3:	mov    rsi,r15
  4153c6:	call   412710 <isspace@plt+0xee00>
  4153cb:	test   al,al
  4153cd:	je     4153f0 <isspace@plt+0x11ae0>
  4153cf:	movzx  eax,BYTE PTR [rsp+0x37]
  4153d4:	cmp    al,0x20
  4153d6:	je     4153c0 <isspace@plt+0x11ab0>
  4153d8:	cmp    al,0x9
  4153da:	je     4153c0 <isspace@plt+0x11ab0>
  4153dc:	cmp    al,0xa
  4153de:	jne    4153a0 <isspace@plt+0x11a90>
  4153e0:	jmp    4153f8 <isspace@plt+0x11ae8>
  4153e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4153ec:	nop    DWORD PTR [rax+0x0]
  4153f0:	mov    al,BYTE PTR [rsp+0x37]
  4153f4:	cmp    al,0xa
  4153f6:	jne    4153a0 <isspace@plt+0x11a90>
  4153f8:	add    r14,0x1
  4153fc:	mov    rax,QWORD PTR fs:0x28
  415405:	cmp    rax,QWORD PTR [rsp+0x38]
  41540a:	jne    415419 <isspace@plt+0x11b09>
  41540c:	mov    rax,r14
  41540f:	add    rsp,0x40
  415413:	pop    rbx
  415414:	pop    r14
  415416:	pop    r15
  415418:	ret    
  415419:	call   403280 <__stack_chk_fail@plt>
  41541e:	xchg   ax,ax
  415420:	push   r15
  415422:	push   r14
  415424:	push   r12
  415426:	push   rbx
  415427:	sub    rsp,0x38
  41542b:	mov    rax,rsi
  41542e:	mov    r14,rdi
  415431:	mov    rcx,QWORD PTR fs:0x28
  41543a:	mov    QWORD PTR [rsp+0x30],rcx
  41543f:	mov    rbx,rsp
  415442:	mov    rdi,rbx
  415445:	mov    rsi,r14
  415448:	mov    rdx,rax
  41544b:	call   410760 <isspace@plt+0xce50>
  415450:	lea    rsi,[rsp+0x2f]
  415455:	mov    rdi,rbx
  415458:	call   4127d0 <isspace@plt+0xeec0>
  41545d:	test   al,al
  41545f:	je     4154a0 <isspace@plt+0x11b90>
  415461:	movabs r12,0x100000600
  41546b:	mov    r15,rsp
  41546e:	lea    rbx,[rsp+0x2f]
  415473:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41547d:	nop    DWORD PTR [rax]
  415480:	movzx  eax,BYTE PTR [rsp+0x2f]
  415485:	cmp    rax,0x20
  415489:	ja     4154a0 <isspace@plt+0x11b90>
  41548b:	bt     r12,rax
  41548f:	jae    4154a0 <isspace@plt+0x11b90>
  415491:	mov    rdi,r15
  415494:	mov    rsi,rbx
  415497:	call   4127d0 <isspace@plt+0xeec0>
  41549c:	test   al,al
  41549e:	jne    415480 <isspace@plt+0x11b70>
  4154a0:	mov    rsi,QWORD PTR [rsp+0x20]
  4154a5:	mov    rdi,r14
  4154a8:	call   4154d0 <isspace@plt+0x11bc0>
  4154ad:	mov    rcx,QWORD PTR fs:0x28
  4154b6:	cmp    rcx,QWORD PTR [rsp+0x30]
  4154bb:	jne    4154c9 <isspace@plt+0x11bb9>
  4154bd:	add    rsp,0x38
  4154c1:	pop    rbx
  4154c2:	pop    r12
  4154c4:	pop    r14
  4154c6:	pop    r15
  4154c8:	ret    
  4154c9:	call   403280 <__stack_chk_fail@plt>
  4154ce:	xchg   ax,ax
  4154d0:	push   r14
  4154d2:	push   rbx
  4154d3:	sub    rsp,0x38
  4154d7:	mov    rax,rsi
  4154da:	mov    rcx,rdi
  4154dd:	mov    rdx,QWORD PTR fs:0x28
  4154e6:	mov    QWORD PTR [rsp+0x30],rdx
  4154eb:	mov    rbx,rsp
  4154ee:	mov    rdi,rbx
  4154f1:	mov    rsi,rcx
  4154f4:	mov    rdx,rax
  4154f7:	call   410760 <isspace@plt+0xce50>
  4154fc:	mov    esi,0xa
  415501:	mov    rdi,rbx
  415504:	call   412880 <isspace@plt+0xef70>
  415509:	test   al,al
  41550b:	je     415554 <isspace@plt+0x11c44>
  41550d:	mov    rbx,rsp
  415510:	lea    r14,[rsp+0x2f]
  415515:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41551f:	nop
  415520:	mov    rdi,rbx
  415523:	mov    rsi,r14
  415526:	call   4127d0 <isspace@plt+0xeec0>
  41552b:	movzx  ecx,BYTE PTR [rsp+0x2f]
  415530:	test   al,al
  415532:	je     41553e <isspace@plt+0x11c2e>
  415534:	cmp    cl,0x9
  415537:	je     415520 <isspace@plt+0x11c10>
  415539:	cmp    cl,0x20
  41553c:	je     415520 <isspace@plt+0x11c10>
  41553e:	cmp    cl,0xa
  415541:	je     41555b <isspace@plt+0x11c4b>
  415543:	mov    esi,0xa
  415548:	mov    rdi,rbx
  41554b:	call   412880 <isspace@plt+0xef70>
  415550:	test   al,al
  415552:	jne    415520 <isspace@plt+0x11c10>
  415554:	mov    rax,QWORD PTR [rsp+0x20]
  415559:	jmp    415564 <isspace@plt+0x11c54>
  41555b:	mov    rax,QWORD PTR [rsp+0x20]
  415560:	add    rax,0x1
  415564:	mov    rcx,QWORD PTR fs:0x28
  41556d:	cmp    rcx,QWORD PTR [rsp+0x30]
  415572:	jne    41557c <isspace@plt+0x11c6c>
  415574:	add    rsp,0x38
  415578:	pop    rbx
  415579:	pop    r14
  41557b:	ret    
  41557c:	call   403280 <__stack_chk_fail@plt>
  415581:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41558b:	nop    DWORD PTR [rax+rax*1+0x0]
  415590:	push   rbx
  415591:	sub    rsp,0x20
  415595:	mov    rbx,rsi
  415598:	mov    rax,QWORD PTR fs:0x28
  4155a1:	mov    QWORD PTR [rsp+0x18],rax
  4155a6:	lea    rsi,[rsi-0x1]
  4155aa:	call   416ea0 <isspace@plt+0x13590>
  4155af:	mov    QWORD PTR [rsp+0x8],rax
  4155b4:	mov    QWORD PTR [rsp+0x10],rdx
  4155b9:	lea    rdi,[rsp+0x8]
  4155be:	call   417400 <isspace@plt+0x13af0>
  4155c3:	mov    ecx,eax
  4155c5:	mov    rax,QWORD PTR [rsp+0x8]
  4155ca:	add    rax,0xffffffffffffffff
  4155ce:	test   cl,cl
  4155d0:	cmove  rax,rbx
  4155d4:	mov    rcx,QWORD PTR fs:0x28
  4155dd:	cmp    rcx,QWORD PTR [rsp+0x18]
  4155e2:	jne    4155ea <isspace@plt+0x11cda>
  4155e4:	add    rsp,0x20
  4155e8:	pop    rbx
  4155e9:	ret    
  4155ea:	call   403280 <__stack_chk_fail@plt>
  4155ef:	nop
  4155f0:	push   rbx
  4155f1:	sub    rsp,0x20
  4155f5:	mov    rbx,rsi
  4155f8:	mov    rax,QWORD PTR fs:0x28
  415601:	mov    QWORD PTR [rsp+0x18],rax
  415606:	lea    rsi,[rsi+0x1]
  41560a:	call   416ea0 <isspace@plt+0x13590>
  41560f:	mov    QWORD PTR [rsp+0x8],rax
  415614:	mov    QWORD PTR [rsp+0x10],rdx
  415619:	lea    rdi,[rsp+0x8]
  41561e:	call   417400 <isspace@plt+0x13af0>
  415623:	test   al,al
  415625:	je     41562c <isspace@plt+0x11d1c>
  415627:	mov    rbx,QWORD PTR [rsp+0x10]
  41562c:	mov    rax,QWORD PTR fs:0x28
  415635:	cmp    rax,QWORD PTR [rsp+0x18]
  41563a:	jne    415645 <isspace@plt+0x11d35>
  41563c:	mov    rax,rbx
  41563f:	add    rsp,0x20
  415643:	pop    rbx
  415644:	ret    
  415645:	call   403280 <__stack_chk_fail@plt>
  41564a:	nop    WORD PTR [rax+rax*1+0x0]
  415650:	push   rbx
  415651:	sub    rsp,0x20
  415655:	mov    rbx,rsi
  415658:	mov    rax,QWORD PTR fs:0x28
  415661:	mov    QWORD PTR [rsp+0x18],rax
  415666:	lea    rsi,[rsi-0x1]
  41566a:	call   416f00 <isspace@plt+0x135f0>
  41566f:	mov    QWORD PTR [rsp+0x8],rax
  415674:	mov    QWORD PTR [rsp+0x10],rdx
  415679:	lea    rdi,[rsp+0x8]
  41567e:	call   417400 <isspace@plt+0x13af0>
  415683:	mov    ecx,eax
  415685:	mov    rax,QWORD PTR [rsp+0x8]
  41568a:	add    rax,0xffffffffffffffff
  41568e:	test   cl,cl
  415690:	cmove  rax,rbx
  415694:	mov    rcx,QWORD PTR fs:0x28
  41569d:	cmp    rcx,QWORD PTR [rsp+0x18]
  4156a2:	jne    4156aa <isspace@plt+0x11d9a>
  4156a4:	add    rsp,0x20
  4156a8:	pop    rbx
  4156a9:	ret    
  4156aa:	call   403280 <__stack_chk_fail@plt>
  4156af:	nop
  4156b0:	push   rbx
  4156b1:	sub    rsp,0x20
  4156b5:	mov    rbx,rsi
  4156b8:	mov    rax,QWORD PTR fs:0x28
  4156c1:	mov    QWORD PTR [rsp+0x18],rax
  4156c6:	lea    rsi,[rsi+0x1]
  4156ca:	call   416f00 <isspace@plt+0x135f0>
  4156cf:	mov    QWORD PTR [rsp+0x8],rax
  4156d4:	mov    QWORD PTR [rsp+0x10],rdx
  4156d9:	lea    rdi,[rsp+0x8]
  4156de:	call   417400 <isspace@plt+0x13af0>
  4156e3:	test   al,al
  4156e5:	je     4156ec <isspace@plt+0x11ddc>
  4156e7:	mov    rbx,QWORD PTR [rsp+0x10]
  4156ec:	mov    rax,QWORD PTR fs:0x28
  4156f5:	cmp    rax,QWORD PTR [rsp+0x18]
  4156fa:	jne    415705 <isspace@plt+0x11df5>
  4156fc:	mov    rax,rbx
  4156ff:	add    rsp,0x20
  415703:	pop    rbx
  415704:	ret    
  415705:	call   403280 <__stack_chk_fail@plt>
  41570a:	nop    WORD PTR [rax+rax*1+0x0]
  415710:	push   rax
  415711:	mov    rax,rdx
  415714:	mov    rcx,QWORD PTR fs:0x28
  41571d:	mov    QWORD PTR [rsp],rcx
  415721:	xor    edx,edx
  415723:	mov    rcx,rax
  415726:	call   415750 <isspace@plt+0x11e40>
  41572b:	mov    rcx,QWORD PTR fs:0x28
  415734:	cmp    rcx,QWORD PTR [rsp]
  415738:	jne    41573c <isspace@plt+0x11e2c>
  41573a:	pop    rcx
  41573b:	ret    
  41573c:	call   403280 <__stack_chk_fail@plt>
  415741:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41574b:	nop    DWORD PTR [rax+rax*1+0x0]
  415750:	push   rbp
  415751:	push   r15
  415753:	push   r14
  415755:	push   r13
  415757:	push   r12
  415759:	push   rbx
  41575a:	sub    rsp,0x48
  41575e:	mov    r15,rcx
  415761:	mov    rbp,rdx
  415764:	mov    r13,rsi
  415767:	mov    r14,rdi
  41576a:	mov    rax,QWORD PTR fs:0x28
  415773:	mov    QWORD PTR [rsp+0x40],rax
  415778:	mov    rbx,rsp
  41577b:	mov    rdi,rbx
  41577e:	mov    rsi,r14
  415781:	mov    rdx,r13
  415784:	call   410760 <isspace@plt+0xce50>
  415789:	lea    rsi,[rsp+0x2f]
  41578e:	mov    rdi,rbx
  415791:	call   412690 <isspace@plt+0xed80>
  415796:	test   al,al
  415798:	je     415877 <isspace@plt+0x11f67>
  41579e:	movsx  ebx,BYTE PTR [rsp+0x2f]
  4157a3:	mov    r12d,ebx
  4157a6:	test   rbp,rbp
  4157a9:	je     4157ca <isspace@plt+0x11eba>
  4157ab:	mov    rdi,rbp
  4157ae:	call   403250 <strlen@plt>
  4157b3:	mov    rdi,rbp
  4157b6:	mov    esi,r12d
  4157b9:	mov    rdx,rax
  4157bc:	call   403410 <memchr@plt>
  4157c1:	test   rax,rax
  4157c4:	je     415877 <isspace@plt+0x11f67>
  4157ca:	add    ebx,0xffffffde
  4157cd:	cmp    ebx,0x5b
  4157d0:	ja     415877 <isspace@plt+0x11f67>
  4157d6:	mov    ecx,0x1
  4157db:	mov    al,0x29
  4157dd:	lea    rdx,[rip+0x1bebc]        # 4316a0 <isspace@plt+0x2dd90>
  4157e4:	movsxd rsi,DWORD PTR [rdx+rbx*4]
  4157e8:	add    rsi,rdx
  4157eb:	jmp    rsi
  4157ed:	mov    ecx,0x1
  4157f2:	mov    rdi,r14
  4157f5:	mov    rsi,r13
  4157f8:	mov    edx,r12d
  4157fb:	mov    r8,r15
  4157fe:	call   415930 <isspace@plt+0x12020>
  415803:	mov    r12,rax
  415806:	movsx  edx,BYTE PTR [rsp+0x2f]
  41580b:	mov    ecx,0xffffffff
  415810:	mov    rdi,r14
  415813:	mov    rsi,r13
  415816:	mov    r8,r15
  415819:	call   415930 <isspace@plt+0x12020>
  41581e:	mov    r15,rax
  415821:	cmp    r12,r13
  415824:	jne    41582b <isspace@plt+0x11f1b>
  415826:	mov    r13,r15
  415829:	jmp    415877 <isspace@plt+0x11f67>
  41582b:	cmp    r15,r13
  41582e:	jne    41589d <isspace@plt+0x11f8d>
  415830:	mov    r13,r12
  415833:	jmp    415877 <isspace@plt+0x11f67>
  415835:	mov    ecx,0xffffffff
  41583a:	mov    al,0x3c
  41583c:	jmp    415863 <isspace@plt+0x11f53>
  41583e:	mov    ecx,0xffffffff
  415843:	mov    al,0x5b
  415845:	jmp    415863 <isspace@plt+0x11f53>
  415847:	mov    ecx,0xffffffff
  41584c:	mov    al,0x7b
  41584e:	jmp    415863 <isspace@plt+0x11f53>
  415850:	mov    ecx,0xffffffff
  415855:	mov    al,0x28
  415857:	jmp    415863 <isspace@plt+0x11f53>
  415859:	mov    al,0x3e
  41585b:	jmp    415863 <isspace@plt+0x11f53>
  41585d:	mov    al,0x5d
  41585f:	jmp    415863 <isspace@plt+0x11f53>
  415861:	mov    al,0x7d
  415863:	movzx  edx,al
  415866:	mov    rdi,r14
  415869:	mov    rsi,r13
  41586c:	mov    r8,r15
  41586f:	call   415930 <isspace@plt+0x12020>
  415874:	mov    r13,rax
  415877:	mov    rax,QWORD PTR fs:0x28
  415880:	cmp    rax,QWORD PTR [rsp+0x40]
  415885:	jne    415923 <isspace@plt+0x12013>
  41588b:	mov    rax,r13
  41588e:	add    rsp,0x48
  415892:	pop    rbx
  415893:	pop    r12
  415895:	pop    r13
  415897:	pop    r14
  415899:	pop    r15
  41589b:	pop    rbp
  41589c:	ret    
  41589d:	mov    rdi,r14
  4158a0:	mov    rsi,r13
  4158a3:	call   410db0 <isspace@plt+0xd4a0>
  4158a8:	mov    rbp,rax
  4158ab:	mov    rdi,r14
  4158ae:	mov    rsi,r12
  4158b1:	call   410db0 <isspace@plt+0xd4a0>
  4158b6:	mov    rbx,rax
  4158b9:	mov    rdi,r14
  4158bc:	mov    rsi,r15
  4158bf:	call   410db0 <isspace@plt+0xd4a0>
  4158c4:	mov    r13,r15
  4158c7:	cmp    rbp,rbx
  4158ca:	jne    415877 <isspace@plt+0x11f67>
  4158cc:	cmp    rbp,rax
  4158cf:	jne    415830 <isspace@plt+0x11f20>
  4158d5:	mov    rdi,rsp
  4158d8:	lea    rsi,[rsp+0x2e]
  4158dd:	call   412710 <isspace@plt+0xee00>
  4158e2:	mov    r13,r12
  4158e5:	test   al,al
  4158e7:	je     415877 <isspace@plt+0x11f67>
  4158e9:	movabs rax,0x2e3e5d7d290a0920
  4158f3:	mov    QWORD PTR [rsp+0x30],rax
  4158f8:	mov    DWORD PTR [rsp+0x38],0x3b3a2c
  415900:	movsx  esi,BYTE PTR [rsp+0x2e]
  415905:	lea    rdi,[rsp+0x30]
  41590a:	mov    edx,0xc
  41590f:	call   403410 <memchr@plt>
  415914:	test   rax,rax
  415917:	cmove  r15,r12
  41591b:	mov    r13,r15
  41591e:	jmp    415877 <isspace@plt+0x11f67>
  415923:	call   403280 <__stack_chk_fail@plt>
  415928:	nop    DWORD PTR [rax+rax*1+0x0]
  415930:	push   rbp
  415931:	push   r15
  415933:	push   r14
  415935:	push   r13
  415937:	push   r12
  415939:	push   rbx
  41593a:	sub    rsp,0x48
  41593e:	mov    r13,r8
  415941:	mov    r15d,ecx
  415944:	mov    DWORD PTR [rsp+0xc],edx
  415948:	mov    rbx,rsi
  41594b:	mov    rax,rdi
  41594e:	mov    rcx,QWORD PTR fs:0x28
  415957:	mov    QWORD PTR [rsp+0x40],rcx
  41595c:	lea    rbp,[rsp+0x10]
  415961:	mov    rdi,rbp
  415964:	mov    rsi,rax
  415967:	mov    rdx,rbx
  41596a:	call   410760 <isspace@plt+0xce50>
  41596f:	lea    rsi,[rsp+0x3e]
  415974:	mov    rdi,rbp
  415977:	call   412690 <isspace@plt+0xed80>
  41597c:	test   al,al
  41597e:	je     415ad9 <isspace@plt+0x121c9>
  415984:	lea    rdi,[rsp+0x10]
  415989:	lea    rsi,[rsp+0x3f]
  41598e:	test   r15d,r15d
  415991:	js     415a38 <isspace@plt+0x12128>
  415997:	call   412710 <isspace@plt+0xee00>
  41599c:	test   al,al
  41599e:	je     415ad9 <isspace@plt+0x121c9>
  4159a4:	mov    ebp,0x1
  4159a9:	xor    ecx,ecx
  4159ab:	lea    r15,[rsp+0x10]
  4159b0:	lea    r12,[rsp+0x3f]
  4159b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4159bf:	nop
  4159c0:	test   r13,r13
  4159c3:	je     4159d4 <isspace@plt+0x120c4>
  4159c5:	mov    rax,QWORD PTR [rsp+0x30]
  4159ca:	cmp    rax,QWORD PTR [r13+0x8]
  4159ce:	jae    415ad9 <isspace@plt+0x121c9>
  4159d4:	movzx  eax,BYTE PTR [rsp+0x3f]
  4159d9:	movzx  edx,BYTE PTR [rsp+0x3e]
  4159de:	mov    r14d,ecx
  4159e1:	cmp    al,dl
  4159e3:	jne    415a10 <isspace@plt+0x12100>
  4159e5:	cmp    al,0x22
  4159e7:	je     415a1b <isspace@plt+0x1210b>
  4159e9:	mov    r14d,ecx
  4159ec:	test   r14b,0x1
  4159f0:	jne    415a21 <isspace@plt+0x12111>
  4159f2:	cmp    al,BYTE PTR [rsp+0xc]
  4159f6:	jne    415a01 <isspace@plt+0x120f1>
  4159f8:	add    ebp,0xffffffff
  4159fb:	je     415ad4 <isspace@plt+0x121c4>
  415a01:	xor    ecx,ecx
  415a03:	cmp    al,dl
  415a05:	sete   cl
  415a08:	add    ebp,ecx
  415a0a:	jmp    415a21 <isspace@plt+0x12111>
  415a0c:	nop    DWORD PTR [rax+0x0]
  415a10:	not    r14b
  415a13:	and    r14b,0x1
  415a17:	cmp    al,0x22
  415a19:	jne    4159e9 <isspace@plt+0x120d9>
  415a1b:	test   r14b,0x1
  415a1f:	je     4159f2 <isspace@plt+0x120e2>
  415a21:	mov    rdi,r15
  415a24:	mov    rsi,r12
  415a27:	call   412710 <isspace@plt+0xee00>
  415a2c:	mov    ecx,r14d
  415a2f:	test   al,al
  415a31:	jne    4159c0 <isspace@plt+0x120b0>
  415a33:	jmp    415ad9 <isspace@plt+0x121c9>
  415a38:	call   4127d0 <isspace@plt+0xeec0>
  415a3d:	test   al,al
  415a3f:	je     415ad9 <isspace@plt+0x121c9>
  415a45:	mov    r14,rbx
  415a48:	mov    ebp,0x1
  415a4d:	xor    ecx,ecx
  415a4f:	lea    r15,[rsp+0x10]
  415a54:	lea    r12,[rsp+0x3f]
  415a59:	nop    DWORD PTR [rax+0x0]
  415a60:	test   r13,r13
  415a63:	je     415a70 <isspace@plt+0x12160>
  415a65:	mov    rax,QWORD PTR [rsp+0x30]
  415a6a:	cmp    rax,QWORD PTR [r13+0x0]
  415a6e:	jb     415acf <isspace@plt+0x121bf>
  415a70:	movzx  eax,BYTE PTR [rsp+0x3f]
  415a75:	movzx  edx,BYTE PTR [rsp+0x3e]
  415a7a:	mov    ebx,ecx
  415a7c:	cmp    al,dl
  415a7e:	jne    415ab0 <isspace@plt+0x121a0>
  415a80:	cmp    al,0x22
  415a82:	je     415ab9 <isspace@plt+0x121a9>
  415a84:	mov    ebx,ecx
  415a86:	test   bl,0x1
  415a89:	jne    415abe <isspace@plt+0x121ae>
  415a8b:	cmp    al,BYTE PTR [rsp+0xc]
  415a8f:	jne    415a96 <isspace@plt+0x12186>
  415a91:	add    ebp,0xffffffff
  415a94:	je     415ad4 <isspace@plt+0x121c4>
  415a96:	xor    ecx,ecx
  415a98:	cmp    al,dl
  415a9a:	sete   cl
  415a9d:	add    ebp,ecx
  415a9f:	jmp    415abe <isspace@plt+0x121ae>
  415aa1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415aab:	nop    DWORD PTR [rax+rax*1+0x0]
  415ab0:	not    bl
  415ab2:	and    bl,0x1
  415ab5:	cmp    al,0x22
  415ab7:	jne    415a84 <isspace@plt+0x12174>
  415ab9:	test   bl,0x1
  415abc:	je     415a8b <isspace@plt+0x1217b>
  415abe:	mov    rdi,r15
  415ac1:	mov    rsi,r12
  415ac4:	call   4127d0 <isspace@plt+0xeec0>
  415ac9:	mov    ecx,ebx
  415acb:	test   al,al
  415acd:	jne    415a60 <isspace@plt+0x12150>
  415acf:	mov    rbx,r14
  415ad2:	jmp    415ad9 <isspace@plt+0x121c9>
  415ad4:	mov    rbx,QWORD PTR [rsp+0x30]
  415ad9:	mov    rax,QWORD PTR fs:0x28
  415ae2:	cmp    rax,QWORD PTR [rsp+0x40]
  415ae7:	jne    415afb <isspace@plt+0x121eb>
  415ae9:	mov    rax,rbx
  415aec:	add    rsp,0x48
  415af0:	pop    rbx
  415af1:	pop    r12
  415af3:	pop    r13
  415af5:	pop    r14
  415af7:	pop    r15
  415af9:	pop    rbp
  415afa:	ret    
  415afb:	call   403280 <__stack_chk_fail@plt>
  415b00:	push   rbp
  415b01:	push   r15
  415b03:	push   r14
  415b05:	push   r13
  415b07:	push   r12
  415b09:	push   rbx
  415b0a:	sub    rsp,0x28
  415b0e:	mov    r14,rdx
  415b11:	mov    r15,rsi
  415b14:	mov    rbx,rdi
  415b17:	mov    rax,QWORD PTR fs:0x28
  415b20:	mov    QWORD PTR [rsp+0x20],rax
  415b25:	lea    rbp,[rsi+0x1]
  415b29:	call   410a90 <isspace@plt+0xd180>
  415b2e:	mov    r12,rax
  415b31:	lea    rdx,[rsp+0xf]
  415b36:	mov    rdi,rbx
  415b39:	mov    rsi,r15
  415b3c:	call   4112b0 <isspace@plt+0xd9a0>
  415b41:	mov    rdx,r12
  415b44:	sub    rdx,rbp
  415b47:	jbe    415b7d <isspace@plt+0x1226d>
  415b49:	cmp    BYTE PTR [rsp+0xf],0xa
  415b4e:	setne  cl
  415b51:	xor    al,0x1
  415b53:	or     al,cl
  415b55:	movzx  eax,al
  415b58:	lea    r13,[rsp+0x10]
  415b5d:	mov    DWORD PTR [rsp],eax
  415b60:	mov    r8d,0x1
  415b66:	mov    rdi,rbx
  415b69:	mov    rsi,rbp
  415b6c:	mov    rcx,r14
  415b6f:	mov    r9,r13
  415b72:	call   42b690 <isspace@plt+0x27d80>
  415b77:	test   eax,eax
  415b79:	jne    415b82 <isspace@plt+0x12272>
  415b7b:	jmp    415ba6 <isspace@plt+0x12296>
  415b7d:	lea    r13,[rsp+0x10]
  415b82:	mov    DWORD PTR [rsp],0x0
  415b89:	xor    esi,esi
  415b8b:	mov    r8d,0x1
  415b91:	mov    rdi,rbx
  415b94:	mov    rdx,r12
  415b97:	mov    rcx,r14
  415b9a:	mov    r9,r13
  415b9d:	call   42b690 <isspace@plt+0x27d80>
  415ba2:	test   eax,eax
  415ba4:	jne    415bab <isspace@plt+0x1229b>
  415ba6:	mov    r15,QWORD PTR [rsp+0x10]
  415bab:	mov    rax,QWORD PTR fs:0x28
  415bb4:	cmp    rax,QWORD PTR [rsp+0x20]
  415bb9:	jne    415bcd <isspace@plt+0x122bd>
  415bbb:	mov    rax,r15
  415bbe:	add    rsp,0x28
  415bc2:	pop    rbx
  415bc3:	pop    r12
  415bc5:	pop    r13
  415bc7:	pop    r14
  415bc9:	pop    r15
  415bcb:	pop    rbp
  415bcc:	ret    
  415bcd:	call   403280 <__stack_chk_fail@plt>
  415bd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415bdc:	nop    DWORD PTR [rax+0x0]
  415be0:	push   r15
  415be2:	push   r14
  415be4:	push   rbx
  415be5:	sub    rsp,0x30
  415be9:	mov    r14,rdx
  415bec:	mov    r15,rsi
  415bef:	mov    rbx,rdi
  415bf2:	mov    rax,QWORD PTR fs:0x28
  415bfb:	mov    QWORD PTR [rsp+0x28],rax
  415c00:	mov    DWORD PTR [rsp],0x2
  415c07:	lea    r9,[rsp+0x10]
  415c0c:	mov    esi,0x0
  415c11:	mov    r8d,0x1
  415c17:	mov    rdx,r15
  415c1a:	mov    rcx,r14
  415c1d:	call   42ba80 <isspace@plt+0x28170>
  415c22:	test   eax,eax
  415c24:	je     415c57 <isspace@plt+0x12347>
  415c26:	mov    rdi,rbx
  415c29:	call   410a90 <isspace@plt+0xd180>
  415c2e:	mov    DWORD PTR [rsp],0x0
  415c35:	lea    r9,[rsp+0x10]
  415c3a:	mov    esi,0x0
  415c3f:	mov    r8d,0x1
  415c45:	mov    rdi,rbx
  415c48:	mov    rdx,rax
  415c4b:	mov    rcx,r14
  415c4e:	call   42ba80 <isspace@plt+0x28170>
  415c53:	test   eax,eax
  415c55:	jne    415c5c <isspace@plt+0x1234c>
  415c57:	mov    r15,QWORD PTR [rsp+0x10]
  415c5c:	mov    rax,QWORD PTR fs:0x28
  415c65:	cmp    rax,QWORD PTR [rsp+0x28]
  415c6a:	jne    415c79 <isspace@plt+0x12369>
  415c6c:	mov    rax,r15
  415c6f:	add    rsp,0x30
  415c73:	pop    rbx
  415c74:	pop    r14
  415c76:	pop    r15
  415c78:	ret    
  415c79:	call   403280 <__stack_chk_fail@plt>
  415c7e:	xchg   ax,ax
  415c80:	push   rax
  415c81:	mov    rax,QWORD PTR fs:0x28
  415c8a:	mov    QWORD PTR [rsp],rax
  415c8e:	call   410a90 <isspace@plt+0xd180>
  415c93:	xor    edi,edi
  415c95:	mov    rsi,rax
  415c98:	call   417690 <isspace@plt+0x13d80>
  415c9d:	mov    rcx,QWORD PTR fs:0x28
  415ca6:	cmp    rcx,QWORD PTR [rsp]
  415caa:	jne    415cae <isspace@plt+0x1239e>
  415cac:	pop    rcx
  415cad:	ret    
  415cae:	call   403280 <__stack_chk_fail@plt>
  415cb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415cbd:	nop    DWORD PTR [rax]
  415cc0:	push   r15
  415cc2:	push   r14
  415cc4:	push   r13
  415cc6:	push   r12
  415cc8:	push   rbx
  415cc9:	sub    rsp,0x40
  415ccd:	mov    r13,rsi
  415cd0:	mov    r14,rdi
  415cd3:	mov    rax,QWORD PTR fs:0x28
  415cdc:	mov    QWORD PTR [rsp+0x38],rax
  415ce1:	mov    BYTE PTR [rsp+0x36],0x30
  415ce6:	mov    BYTE PTR [rsp+0x35],0x30
  415ceb:	lea    rbx,[rsp+0x8]
  415cf0:	mov    rdi,rbx
  415cf3:	mov    rsi,r14
  415cf6:	mov    rdx,r13
  415cf9:	call   410760 <isspace@plt+0xce50>
  415cfe:	lea    rsi,[rsp+0x37]
  415d03:	mov    rdi,rbx
  415d06:	call   412690 <isspace@plt+0xed80>
  415d0b:	test   al,al
  415d0d:	je     415de5 <isspace@plt+0x124d5>
  415d13:	test   r13,r13
  415d16:	je     415d37 <isspace@plt+0x12427>
  415d18:	lea    rdi,[rsp+0x8]
  415d1d:	lea    rsi,[rsp+0x36]
  415d22:	call   4127d0 <isspace@plt+0xeec0>
  415d27:	test   al,al
  415d29:	je     415d37 <isspace@plt+0x12427>
  415d2b:	lea    rdi,[rsp+0x8]
  415d30:	xor    esi,esi
  415d32:	call   412710 <isspace@plt+0xee00>
  415d37:	lea    rdi,[rsp+0x8]
  415d3c:	lea    rsi,[rsp+0x35]
  415d41:	call   412710 <isspace@plt+0xee00>
  415d46:	call   4038f0 <__ctype_b_loc@plt>
  415d4b:	mov    r12,rax
  415d4e:	mov    rax,QWORD PTR [rax]
  415d51:	movzx  edi,BYTE PTR [rsp+0x37]
  415d56:	test   BYTE PTR [rax+rdi*2+0x1],0x20
  415d5b:	jne    415def <isspace@plt+0x124df>
  415d61:	call   412f50 <isspace@plt+0xf640>
  415d66:	mov    ebx,eax
  415d68:	movzx  edi,BYTE PTR [rsp+0x36]
  415d6d:	call   412f50 <isspace@plt+0xf640>
  415d72:	mov    r15,r13
  415d75:	test   ebx,ebx
  415d77:	je     415e22 <isspace@plt+0x12512>
  415d7d:	test   eax,eax
  415d7f:	je     415da9 <isspace@plt+0x12499>
  415d81:	mov    rax,QWORD PTR [r12]
  415d85:	movzx  ecx,BYTE PTR [rsp+0x36]
  415d8a:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  415d8f:	mov    r15,r13
  415d92:	jne    415da9 <isspace@plt+0x12499>
  415d94:	lea    rdx,[rip+0xffffffffffffd1b5]        # 412f50 <isspace@plt+0xf640>
  415d9b:	mov    rdi,r14
  415d9e:	mov    rsi,r13
  415da1:	call   4140e0 <isspace@plt+0x107d0>
  415da6:	mov    r15,rax
  415da9:	movzx  edi,BYTE PTR [rsp+0x35]
  415dae:	call   412f50 <isspace@plt+0xf640>
  415db3:	test   eax,eax
  415db5:	je     415e49 <isspace@plt+0x12539>
  415dbb:	mov    rax,QWORD PTR [r12]
  415dbf:	movzx  ecx,BYTE PTR [rsp+0x35]
  415dc4:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  415dc9:	jne    415e49 <isspace@plt+0x12539>
  415dcb:	lea    rdx,[rip+0xffffffffffffd17e]        # 412f50 <isspace@plt+0xf640>
  415dd2:	mov    rdi,r14
  415dd5:	mov    rsi,r13
  415dd8:	call   4141f0 <isspace@plt+0x108e0>
  415ddd:	mov    rdi,r14
  415de0:	mov    rsi,rax
  415de3:	jmp    415e4f <isspace@plt+0x1253f>
  415de5:	call   4174c0 <isspace@plt+0x13bb0>
  415dea:	mov    r15,rax
  415ded:	jmp    415e57 <isspace@plt+0x12547>
  415def:	lea    rbx,[rip+0xffffffffffffd15a]        # 412f50 <isspace@plt+0xf640>
  415df6:	mov    rdi,r14
  415df9:	mov    rsi,r13
  415dfc:	mov    rdx,rbx
  415dff:	call   414300 <isspace@plt+0x109f0>
  415e04:	mov    rdi,r14
  415e07:	mov    rsi,rax
  415e0a:	call   412fb0 <isspace@plt+0xf6a0>
  415e0f:	mov    r15,rax
  415e12:	mov    rdi,r14
  415e15:	mov    rsi,r13
  415e18:	mov    rdx,rbx
  415e1b:	call   413fd0 <isspace@plt+0x106c0>
  415e20:	jmp    415e54 <isspace@plt+0x12544>
  415e22:	test   eax,eax
  415e24:	jne    415e3b <isspace@plt+0x1252b>
  415e26:	lea    rdx,[rip+0xffffffffffffd123]        # 412f50 <isspace@plt+0xf640>
  415e2d:	mov    rdi,r14
  415e30:	mov    rsi,r13
  415e33:	call   4140e0 <isspace@plt+0x107d0>
  415e38:	mov    r15,rax
  415e3b:	movzx  edi,BYTE PTR [rsp+0x35]
  415e40:	call   412f50 <isspace@plt+0xf640>
  415e45:	test   eax,eax
  415e47:	je     415dcb <isspace@plt+0x124bb>
  415e49:	mov    rdi,r14
  415e4c:	mov    rsi,r13
  415e4f:	call   412fb0 <isspace@plt+0xf6a0>
  415e54:	mov    rdx,rax
  415e57:	mov    rax,QWORD PTR fs:0x28
  415e60:	cmp    rax,QWORD PTR [rsp+0x38]
  415e65:	jne    415e78 <isspace@plt+0x12568>
  415e67:	mov    rax,r15
  415e6a:	add    rsp,0x40
  415e6e:	pop    rbx
  415e6f:	pop    r12
  415e71:	pop    r13
  415e73:	pop    r14
  415e75:	pop    r15
  415e77:	ret    
  415e78:	call   403280 <__stack_chk_fail@plt>
  415e7d:	nop    DWORD PTR [rax]
  415e80:	push   rbp
  415e81:	push   r15
  415e83:	push   r14
  415e85:	push   r13
  415e87:	push   r12
  415e89:	push   rbx
  415e8a:	sub    rsp,0x38
  415e8e:	mov    rbp,rsi
  415e91:	mov    r14,rdi
  415e94:	mov    rax,QWORD PTR fs:0x28
  415e9d:	mov    QWORD PTR [rsp+0x30],rax
  415ea2:	mov    BYTE PTR [rsp+0x2e],0x30
  415ea7:	mov    BYTE PTR [rsp+0x2d],0x30
  415eac:	mov    rbx,rsp
  415eaf:	mov    rdi,rbx
  415eb2:	mov    rsi,r14
  415eb5:	mov    rdx,rbp
  415eb8:	call   410760 <isspace@plt+0xce50>
  415ebd:	lea    rsi,[rsp+0x2f]
  415ec2:	mov    rdi,rbx
  415ec5:	call   412690 <isspace@plt+0xed80>
  415eca:	test   al,al
  415ecc:	je     415fa0 <isspace@plt+0x12690>
  415ed2:	test   rbp,rbp
  415ed5:	je     415ef2 <isspace@plt+0x125e2>
  415ed7:	mov    rdi,rsp
  415eda:	lea    rsi,[rsp+0x2e]
  415edf:	call   4127d0 <isspace@plt+0xeec0>
  415ee4:	test   al,al
  415ee6:	je     415ef2 <isspace@plt+0x125e2>
  415ee8:	mov    rdi,rsp
  415eeb:	xor    esi,esi
  415eed:	call   412710 <isspace@plt+0xee00>
  415ef2:	mov    rdi,rsp
  415ef5:	lea    rsi,[rsp+0x2d]
  415efa:	call   412710 <isspace@plt+0xee00>
  415eff:	call   4038f0 <__ctype_b_loc@plt>
  415f04:	mov    r12,QWORD PTR [rax]
  415f07:	movzx  edi,BYTE PTR [rsp+0x2f]
  415f0c:	test   BYTE PTR [r12+rdi*2+0x1],0x20
  415f12:	jne    415faa <isspace@plt+0x1269a>
  415f18:	mov    rbx,rax
  415f1b:	call   403910 <isspace@plt>
  415f20:	mov    r15d,eax
  415f23:	movzx  r13d,BYTE PTR [rsp+0x2e]
  415f29:	mov    edi,r13d
  415f2c:	call   403910 <isspace@plt>
  415f31:	test   r15d,r15d
  415f34:	je     415fdd <isspace@plt+0x126cd>
  415f3a:	mov    r15,rbp
  415f3d:	test   eax,eax
  415f3f:	je     415f61 <isspace@plt+0x12651>
  415f41:	test   BYTE PTR [r12+r13*2+0x1],0x20
  415f47:	mov    r15,rbp
  415f4a:	jne    415f61 <isspace@plt+0x12651>
  415f4c:	mov    rdx,QWORD PTR [rip+0x2d065]        # 442fb8 <isspace@plt+0x3f6a8>
  415f53:	mov    rdi,r14
  415f56:	mov    rsi,rbp
  415f59:	call   4140e0 <isspace@plt+0x107d0>
  415f5e:	mov    r15,rax
  415f61:	movzx  r13d,BYTE PTR [rsp+0x2d]
  415f67:	mov    edi,r13d
  415f6a:	call   403910 <isspace@plt>
  415f6f:	test   eax,eax
  415f71:	je     41600b <isspace@plt+0x126fb>
  415f77:	mov    rax,QWORD PTR [rbx]
  415f7a:	test   BYTE PTR [rax+r13*2+0x1],0x20
  415f80:	jne    41600b <isspace@plt+0x126fb>
  415f86:	mov    rdx,QWORD PTR [rip+0x2d02b]        # 442fb8 <isspace@plt+0x3f6a8>
  415f8d:	mov    rdi,r14
  415f90:	mov    rsi,rbp
  415f93:	call   4141f0 <isspace@plt+0x108e0>
  415f98:	mov    rdi,r14
  415f9b:	mov    rsi,rax
  415f9e:	jmp    416011 <isspace@plt+0x12701>
  415fa0:	call   4174c0 <isspace@plt+0x13bb0>
  415fa5:	mov    r15,rax
  415fa8:	jmp    416019 <isspace@plt+0x12709>
  415faa:	mov    rbx,QWORD PTR [rip+0x2d007]        # 442fb8 <isspace@plt+0x3f6a8>
  415fb1:	mov    rdi,r14
  415fb4:	mov    rsi,rbp
  415fb7:	mov    rdx,rbx
  415fba:	call   414300 <isspace@plt+0x109f0>
  415fbf:	mov    rdi,r14
  415fc2:	mov    rsi,rax
  415fc5:	call   412fb0 <isspace@plt+0xf6a0>
  415fca:	mov    r15,rax
  415fcd:	mov    rdi,r14
  415fd0:	mov    rsi,rbp
  415fd3:	mov    rdx,rbx
  415fd6:	call   413fd0 <isspace@plt+0x106c0>
  415fdb:	jmp    416016 <isspace@plt+0x12706>
  415fdd:	mov    r15,rbp
  415fe0:	test   eax,eax
  415fe2:	jne    415ff9 <isspace@plt+0x126e9>
  415fe4:	mov    rdx,QWORD PTR [rip+0x2cfcd]        # 442fb8 <isspace@plt+0x3f6a8>
  415feb:	mov    rdi,r14
  415fee:	mov    rsi,rbp
  415ff1:	call   4140e0 <isspace@plt+0x107d0>
  415ff6:	mov    r15,rax
  415ff9:	movzx  edi,BYTE PTR [rsp+0x2d]
  415ffe:	call   403910 <isspace@plt>
  416003:	test   eax,eax
  416005:	je     415f86 <isspace@plt+0x12676>
  41600b:	mov    rdi,r14
  41600e:	mov    rsi,rbp
  416011:	call   412fb0 <isspace@plt+0xf6a0>
  416016:	mov    rdx,rax
  416019:	mov    rax,QWORD PTR fs:0x28
  416022:	cmp    rax,QWORD PTR [rsp+0x30]
  416027:	jne    41603b <isspace@plt+0x1272b>
  416029:	mov    rax,r15
  41602c:	add    rsp,0x38
  416030:	pop    rbx
  416031:	pop    r12
  416033:	pop    r13
  416035:	pop    r14
  416037:	pop    r15
  416039:	pop    rbp
  41603a:	ret    
  41603b:	call   403280 <__stack_chk_fail@plt>
  416040:	push   rbp
  416041:	push   r15
  416043:	push   r14
  416045:	push   r12
  416047:	push   rbx
  416048:	sub    rsp,0x40
  41604c:	mov    rbx,rsi
  41604f:	mov    r14,rdi
  416052:	mov    rax,QWORD PTR fs:0x28
  41605b:	mov    QWORD PTR [rsp+0x38],rax
  416060:	mov    BYTE PTR [rsp+0x36],0x30
  416065:	mov    BYTE PTR [rsp+0x35],0x30
  41606a:	lea    rbp,[rsp+0x8]
  41606f:	mov    rdi,rbp
  416072:	mov    rsi,r14
  416075:	mov    rdx,rbx
  416078:	call   410760 <isspace@plt+0xce50>
  41607d:	lea    rsi,[rsp+0x37]
  416082:	mov    rdi,rbp
  416085:	call   412690 <isspace@plt+0xed80>
  41608a:	test   al,al
  41608c:	je     416157 <isspace@plt+0x12847>
  416092:	test   rbx,rbx
  416095:	je     4160b6 <isspace@plt+0x127a6>
  416097:	lea    rdi,[rsp+0x8]
  41609c:	lea    rsi,[rsp+0x36]
  4160a1:	call   4127d0 <isspace@plt+0xeec0>
  4160a6:	test   al,al
  4160a8:	je     4160b6 <isspace@plt+0x127a6>
  4160aa:	lea    rdi,[rsp+0x8]
  4160af:	xor    esi,esi
  4160b1:	call   412710 <isspace@plt+0xee00>
  4160b6:	lea    rdi,[rsp+0x8]
  4160bb:	lea    rsi,[rsp+0x35]
  4160c0:	call   412710 <isspace@plt+0xee00>
  4160c5:	call   4038f0 <__ctype_b_loc@plt>
  4160ca:	mov    rax,QWORD PTR [rax]
  4160cd:	movzx  r15d,BYTE PTR [rsp+0x37]
  4160d3:	test   BYTE PTR [rax+r15*2+0x1],0x20
  4160d9:	jne    416164 <isspace@plt+0x12854>
  4160df:	movzx  edi,BYTE PTR [rsp+0x36]
  4160e4:	call   403910 <isspace@plt>
  4160e9:	mov    ebp,eax
  4160eb:	movzx  edi,BYTE PTR [rsp+0x35]
  4160f0:	call   403910 <isspace@plt>
  4160f5:	mov    r12d,eax
  4160f8:	test   ebp,ebp
  4160fa:	je     4161ab <isspace@plt+0x1289b>
  416100:	test   r12d,r12d
  416103:	je     4161d4 <isspace@plt+0x128c4>
  416109:	mov    edi,r15d
  41610c:	call   403910 <isspace@plt>
  416111:	test   eax,eax
  416113:	je     4161f4 <isspace@plt+0x128e4>
  416119:	mov    r15,QWORD PTR [rip+0x2ce98]        # 442fb8 <isspace@plt+0x3f6a8>
  416120:	mov    rdi,r14
  416123:	mov    rsi,rbx
  416126:	mov    rdx,r15
  416129:	call   414300 <isspace@plt+0x109f0>
  41612e:	mov    rdi,r14
  416131:	mov    rsi,rax
  416134:	call   412fb0 <isspace@plt+0xf6a0>
  416139:	mov    rbp,rax
  41613c:	mov    rdi,r14
  41613f:	mov    rsi,rbx
  416142:	mov    rdx,r15
  416145:	call   4141f0 <isspace@plt+0x108e0>
  41614a:	mov    rdi,r14
  41614d:	mov    rsi,rax
  416150:	call   414bd0 <isspace@plt+0x112c0>
  416155:	jmp    4161a0 <isspace@plt+0x12890>
  416157:	call   4174c0 <isspace@plt+0x13bb0>
  41615c:	mov    rbx,rax
  41615f:	jmp    416234 <isspace@plt+0x12924>
  416164:	mov    r15,QWORD PTR [rip+0x2ce4d]        # 442fb8 <isspace@plt+0x3f6a8>
  41616b:	mov    rdi,r14
  41616e:	mov    rsi,rbx
  416171:	mov    rdx,r15
  416174:	call   414300 <isspace@plt+0x109f0>
  416179:	mov    rdi,r14
  41617c:	mov    rsi,rax
  41617f:	call   412fb0 <isspace@plt+0xf6a0>
  416184:	mov    rbp,rax
  416187:	mov    rdi,r14
  41618a:	mov    rsi,rbx
  41618d:	mov    rdx,r15
  416190:	call   4141f0 <isspace@plt+0x108e0>
  416195:	mov    rdi,r14
  416198:	mov    rsi,rax
  41619b:	call   412fb0 <isspace@plt+0xf6a0>
  4161a0:	mov    rdx,rax
  4161a3:	mov    rbx,rbp
  4161a6:	jmp    416234 <isspace@plt+0x12924>
  4161ab:	mov    rdx,QWORD PTR [rip+0x2ce06]        # 442fb8 <isspace@plt+0x3f6a8>
  4161b2:	mov    rdi,r14
  4161b5:	mov    rsi,rbx
  4161b8:	call   4140e0 <isspace@plt+0x107d0>
  4161bd:	mov    r15,rax
  4161c0:	test   r12d,r12d
  4161c3:	je     41620b <isspace@plt+0x128fb>
  4161c5:	mov    rdx,QWORD PTR [rip+0x2cdec]        # 442fb8 <isspace@plt+0x3f6a8>
  4161cc:	mov    rdi,r14
  4161cf:	mov    rsi,rbx
  4161d2:	jmp    416229 <isspace@plt+0x12919>
  4161d4:	mov    rbp,QWORD PTR [rip+0x2cddd]        # 442fb8 <isspace@plt+0x3f6a8>
  4161db:	mov    rdi,r14
  4161de:	mov    rsi,rbx
  4161e1:	mov    rdx,rbp
  4161e4:	call   4141f0 <isspace@plt+0x108e0>
  4161e9:	mov    rdi,r14
  4161ec:	mov    rsi,rax
  4161ef:	mov    rdx,rbp
  4161f2:	jmp    416201 <isspace@plt+0x128f1>
  4161f4:	mov    rdx,QWORD PTR [rip+0x2cdbd]        # 442fb8 <isspace@plt+0x3f6a8>
  4161fb:	mov    rdi,r14
  4161fe:	mov    rsi,rbx
  416201:	call   413fd0 <isspace@plt+0x106c0>
  416206:	mov    rdx,rax
  416209:	jmp    416234 <isspace@plt+0x12924>
  41620b:	mov    rbp,QWORD PTR [rip+0x2cda6]        # 442fb8 <isspace@plt+0x3f6a8>
  416212:	mov    rdi,r14
  416215:	mov    rsi,rbx
  416218:	mov    rdx,rbp
  41621b:	call   4141f0 <isspace@plt+0x108e0>
  416220:	mov    rdi,r14
  416223:	mov    rsi,rax
  416226:	mov    rdx,rbp
  416229:	call   413fd0 <isspace@plt+0x106c0>
  41622e:	mov    rdx,rax
  416231:	mov    rbx,r15
  416234:	mov    rax,QWORD PTR fs:0x28
  41623d:	cmp    rax,QWORD PTR [rsp+0x38]
  416242:	jne    416254 <isspace@plt+0x12944>
  416244:	mov    rax,rbx
  416247:	add    rsp,0x40
  41624b:	pop    rbx
  41624c:	pop    r12
  41624e:	pop    r14
  416250:	pop    r15
  416252:	pop    rbp
  416253:	ret    
  416254:	call   403280 <__stack_chk_fail@plt>
  416259:	nop    DWORD PTR [rax+0x0]
  416260:	push   r15
  416262:	push   r14
  416264:	push   r12
  416266:	push   rbx
  416267:	sub    rsp,0x38
  41626b:	mov    r12,rsi
  41626e:	mov    r14,rdi
  416271:	mov    rax,QWORD PTR fs:0x28
  41627a:	mov    QWORD PTR [rsp+0x30],rax
  41627f:	mov    BYTE PTR [rsp+0x2e],0x30
  416284:	mov    BYTE PTR [rsp+0x2d],0x30
  416289:	mov    rbx,rsp
  41628c:	mov    rdi,rbx
  41628f:	mov    rsi,r14
  416292:	mov    rdx,r12
  416295:	call   410760 <isspace@plt+0xce50>
  41629a:	lea    rsi,[rsp+0x2f]
  41629f:	mov    rdi,rbx
  4162a2:	call   412690 <isspace@plt+0xed80>
  4162a7:	test   al,al
  4162a9:	je     416368 <isspace@plt+0x12a58>
  4162af:	test   r12,r12
  4162b2:	je     4162cf <isspace@plt+0x129bf>
  4162b4:	mov    rdi,rsp
  4162b7:	lea    rsi,[rsp+0x2e]
  4162bc:	call   4127d0 <isspace@plt+0xeec0>
  4162c1:	test   al,al
  4162c3:	je     4162cf <isspace@plt+0x129bf>
  4162c5:	mov    rdi,rsp
  4162c8:	xor    esi,esi
  4162ca:	call   412710 <isspace@plt+0xee00>
  4162cf:	mov    rdi,rsp
  4162d2:	lea    rsi,[rsp+0x2d]
  4162d7:	call   412710 <isspace@plt+0xee00>
  4162dc:	call   4038f0 <__ctype_b_loc@plt>
  4162e1:	mov    rax,QWORD PTR [rax]
  4162e4:	movzx  ecx,BYTE PTR [rsp+0x2f]
  4162e9:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4162ee:	jne    416375 <isspace@plt+0x12a65>
  4162f4:	movzx  edi,BYTE PTR [rsp+0x2e]
  4162f9:	call   412f50 <isspace@plt+0xf640>
  4162fe:	test   eax,eax
  416300:	je     4163bc <isspace@plt+0x12aac>
  416306:	movzx  edi,BYTE PTR [rsp+0x2d]
  41630b:	call   412f50 <isspace@plt+0xf640>
  416310:	test   eax,eax
  416312:	je     4163bc <isspace@plt+0x12aac>
  416318:	movzx  edi,BYTE PTR [rsp+0x2f]
  41631d:	call   412f50 <isspace@plt+0xf640>
  416322:	test   eax,eax
  416324:	je     41641e <isspace@plt+0x12b0e>
  41632a:	lea    r15,[rip+0xffffffffffffcc1f]        # 412f50 <isspace@plt+0xf640>
  416331:	mov    rdi,r14
  416334:	mov    rsi,r12
  416337:	mov    rdx,r15
  41633a:	call   414300 <isspace@plt+0x109f0>
  41633f:	mov    rdi,r14
  416342:	mov    rsi,rax
  416345:	call   412fb0 <isspace@plt+0xf6a0>
  41634a:	mov    rbx,rax
  41634d:	mov    rdi,r14
  416350:	mov    rsi,r12
  416353:	mov    rdx,r15
  416356:	call   4141f0 <isspace@plt+0x108e0>
  41635b:	mov    rdi,r14
  41635e:	mov    rsi,rax
  416361:	call   414bd0 <isspace@plt+0x112c0>
  416366:	jmp    4163b1 <isspace@plt+0x12aa1>
  416368:	call   4174c0 <isspace@plt+0x13bb0>
  41636d:	mov    r12,rax
  416370:	jmp    41645e <isspace@plt+0x12b4e>
  416375:	lea    r15,[rip+0xffffffffffffcbd4]        # 412f50 <isspace@plt+0xf640>
  41637c:	mov    rdi,r14
  41637f:	mov    rsi,r12
  416382:	mov    rdx,r15
  416385:	call   414300 <isspace@plt+0x109f0>
  41638a:	mov    rdi,r14
  41638d:	mov    rsi,rax
  416390:	call   412fb0 <isspace@plt+0xf6a0>
  416395:	mov    rbx,rax
  416398:	mov    rdi,r14
  41639b:	mov    rsi,r12
  41639e:	mov    rdx,r15
  4163a1:	call   4141f0 <isspace@plt+0x108e0>
  4163a6:	mov    rdi,r14
  4163a9:	mov    rsi,rax
  4163ac:	call   412fb0 <isspace@plt+0xf6a0>
  4163b1:	mov    rdx,rax
  4163b4:	mov    r12,rbx
  4163b7:	jmp    41645e <isspace@plt+0x12b4e>
  4163bc:	movzx  edi,BYTE PTR [rsp+0x2e]
  4163c1:	call   412f50 <isspace@plt+0xf640>
  4163c6:	test   eax,eax
  4163c8:	je     4163ea <isspace@plt+0x12ada>
  4163ca:	lea    rbx,[rip+0xffffffffffffcb7f]        # 412f50 <isspace@plt+0xf640>
  4163d1:	mov    rdi,r14
  4163d4:	mov    rsi,r12
  4163d7:	mov    rdx,rbx
  4163da:	call   4141f0 <isspace@plt+0x108e0>
  4163df:	mov    rdi,r14
  4163e2:	mov    rsi,rax
  4163e5:	mov    rdx,rbx
  4163e8:	jmp    41642b <isspace@plt+0x12b1b>
  4163ea:	movzx  edi,BYTE PTR [rsp+0x2d]
  4163ef:	call   412f50 <isspace@plt+0xf640>
  4163f4:	mov    ebx,eax
  4163f6:	lea    rdx,[rip+0xffffffffffffcb53]        # 412f50 <isspace@plt+0xf640>
  4163fd:	mov    rdi,r14
  416400:	mov    rsi,r12
  416403:	call   4140e0 <isspace@plt+0x107d0>
  416408:	mov    r15,rax
  41640b:	test   ebx,ebx
  41640d:	je     416435 <isspace@plt+0x12b25>
  41640f:	lea    rdx,[rip+0xffffffffffffcb3a]        # 412f50 <isspace@plt+0xf640>
  416416:	mov    rdi,r14
  416419:	mov    rsi,r12
  41641c:	jmp    416453 <isspace@plt+0x12b43>
  41641e:	lea    rdx,[rip+0xffffffffffffcb2b]        # 412f50 <isspace@plt+0xf640>
  416425:	mov    rdi,r14
  416428:	mov    rsi,r12
  41642b:	call   413fd0 <isspace@plt+0x106c0>
  416430:	mov    rdx,rax
  416433:	jmp    41645e <isspace@plt+0x12b4e>
  416435:	lea    rbx,[rip+0xffffffffffffcb14]        # 412f50 <isspace@plt+0xf640>
  41643c:	mov    rdi,r14
  41643f:	mov    rsi,r12
  416442:	mov    rdx,rbx
  416445:	call   4141f0 <isspace@plt+0x108e0>
  41644a:	mov    rdi,r14
  41644d:	mov    rsi,rax
  416450:	mov    rdx,rbx
  416453:	call   413fd0 <isspace@plt+0x106c0>
  416458:	mov    rdx,rax
  41645b:	mov    r12,r15
  41645e:	mov    rax,QWORD PTR fs:0x28
  416467:	cmp    rax,QWORD PTR [rsp+0x30]
  41646c:	jne    41647d <isspace@plt+0x12b6d>
  41646e:	mov    rax,r12
  416471:	add    rsp,0x38
  416475:	pop    rbx
  416476:	pop    r12
  416478:	pop    r14
  41647a:	pop    r15
  41647c:	ret    
  41647d:	call   403280 <__stack_chk_fail@plt>
  416482:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41648c:	nop    DWORD PTR [rax+0x0]
  416490:	push   r15
  416492:	push   r14
  416494:	push   r13
  416496:	push   r12
  416498:	push   rbx
  416499:	sub    rsp,0x20
  41649d:	mov    r14,rdx
  4164a0:	mov    r12,rsi
  4164a3:	mov    r13,rdi
  4164a6:	mov    rax,QWORD PTR fs:0x28
  4164af:	mov    QWORD PTR [rsp+0x18],rax
  4164b4:	mov    rdi,rdx
  4164b7:	call   403250 <strlen@plt>
  4164bc:	mov    r15,rax
  4164bf:	mov    rdi,r13
  4164c2:	mov    rsi,r12
  4164c5:	mov    rdx,r14
  4164c8:	call   413130 <isspace@plt+0xf820>
  4164cd:	cmp    rax,r12
  4164d0:	je     41651a <isspace@plt+0x12c0a>
  4164d2:	lea    r12,[rsp+0x8]
  4164d7:	nop    WORD PTR [rax+rax*1+0x0]
  4164e0:	mov    rdi,r13
  4164e3:	mov    rsi,rax
  4164e6:	call   415cc0 <isspace@plt+0x123b0>
  4164eb:	mov    QWORD PTR [rsp+0x8],rax
  4164f0:	mov    QWORD PTR [rsp+0x10],rdx
  4164f5:	mov    rdi,r12
  4164f8:	call   417460 <isspace@plt+0x13b50>
  4164fd:	cmp    rax,r15
  416500:	je     41652b <isspace@plt+0x12c1b>
  416502:	mov    rbx,QWORD PTR [rsp+0x10]
  416507:	mov    rdi,r13
  41650a:	mov    rsi,rbx
  41650d:	mov    rdx,r14
  416510:	call   413130 <isspace@plt+0xf820>
  416515:	cmp    rax,rbx
  416518:	jne    4164e0 <isspace@plt+0x12bd0>
  41651a:	call   4174c0 <isspace@plt+0x13bb0>
  41651f:	mov    QWORD PTR [rsp+0x8],rax
  416524:	mov    QWORD PTR [rsp+0x10],rdx
  416529:	jmp    416535 <isspace@plt+0x12c25>
  41652b:	mov    rax,QWORD PTR [rsp+0x8]
  416530:	mov    rdx,QWORD PTR [rsp+0x10]
  416535:	mov    rcx,QWORD PTR fs:0x28
  41653e:	cmp    rcx,QWORD PTR [rsp+0x18]
  416543:	jne    416553 <isspace@plt+0x12c43>
  416545:	add    rsp,0x20
  416549:	pop    rbx
  41654a:	pop    r12
  41654c:	pop    r13
  41654e:	pop    r14
  416550:	pop    r15
  416552:	ret    
  416553:	call   403280 <__stack_chk_fail@plt>
  416558:	nop    DWORD PTR [rax+rax*1+0x0]
  416560:	push   rbp
  416561:	push   r15
  416563:	push   r14
  416565:	push   r13
  416567:	push   r12
  416569:	push   rbx
  41656a:	sub    rsp,0x18
  41656e:	mov    r14,rdx
  416571:	mov    rbx,rsi
  416574:	mov    r13,rdi
  416577:	mov    rax,QWORD PTR fs:0x28
  416580:	mov    QWORD PTR [rsp+0x10],rax
  416585:	mov    rdi,rdx
  416588:	call   403250 <strlen@plt>
  41658d:	mov    r15,rax
  416590:	mov    r12,rsp
  416593:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41659d:	nop    DWORD PTR [rax]
  4165a0:	mov    rdi,r13
  4165a3:	mov    rsi,rbx
  4165a6:	mov    rdx,r14
  4165a9:	call   4132c0 <isspace@plt+0xf9b0>
  4165ae:	cmp    rax,rbx
  4165b1:	je     4165e5 <isspace@plt+0x12cd5>
  4165b3:	mov    rbp,rax
  4165b6:	mov    rdi,r13
  4165b9:	mov    rsi,rax
  4165bc:	call   415cc0 <isspace@plt+0x123b0>
  4165c1:	mov    QWORD PTR [rsp],rax
  4165c5:	mov    QWORD PTR [rsp+0x8],rdx
  4165ca:	mov    rdi,r12
  4165cd:	call   417460 <isspace@plt+0x13b50>
  4165d2:	mov    rbx,rbp
  4165d5:	cmp    rax,r15
  4165d8:	jne    4165a0 <isspace@plt+0x12c90>
  4165da:	mov    rax,QWORD PTR [rsp]
  4165de:	mov    rdx,QWORD PTR [rsp+0x8]
  4165e3:	jmp    4165f3 <isspace@plt+0x12ce3>
  4165e5:	call   4174c0 <isspace@plt+0x13bb0>
  4165ea:	mov    QWORD PTR [rsp],rax
  4165ee:	mov    QWORD PTR [rsp+0x8],rdx
  4165f3:	mov    rcx,QWORD PTR fs:0x28
  4165fc:	cmp    rcx,QWORD PTR [rsp+0x10]
  416601:	jne    416612 <isspace@plt+0x12d02>
  416603:	add    rsp,0x18
  416607:	pop    rbx
  416608:	pop    r12
  41660a:	pop    r13
  41660c:	pop    r14
  41660e:	pop    r15
  416610:	pop    rbp
  416611:	ret    
  416612:	call   403280 <__stack_chk_fail@plt>
  416617:	nop    WORD PTR [rax+rax*1+0x0]
  416620:	push   r15
  416622:	push   r14
  416624:	push   rbx
  416625:	sub    rsp,0x10
  416629:	mov    r14,rdx
  41662c:	mov    rbx,rsi
  41662f:	mov    rax,QWORD PTR fs:0x28
  416638:	mov    QWORD PTR [rsp+0x8],rax
  41663d:	call   413130 <isspace@plt+0xf820>
  416642:	cmp    rax,rbx
  416645:	jne    41664e <isspace@plt+0x12d3e>
  416647:	call   4174c0 <isspace@plt+0x13bb0>
  41664c:	jmp    416667 <isspace@plt+0x12d57>
  41664e:	mov    r15,rax
  416651:	mov    rdi,r14
  416654:	call   403250 <strlen@plt>
  416659:	mov    rsi,r15
  41665c:	add    rsi,rax
  41665f:	mov    rdi,r15
  416662:	call   417690 <isspace@plt+0x13d80>
  416667:	mov    rcx,QWORD PTR fs:0x28
  416670:	cmp    rcx,QWORD PTR [rsp+0x8]
  416675:	jne    416681 <isspace@plt+0x12d71>
  416677:	add    rsp,0x10
  41667b:	pop    rbx
  41667c:	pop    r14
  41667e:	pop    r15
  416680:	ret    
  416681:	call   403280 <__stack_chk_fail@plt>
  416686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416690:	push   r15
  416692:	push   r14
  416694:	push   rbx
  416695:	sub    rsp,0x10
  416699:	mov    r14,rdx
  41669c:	mov    rbx,rsi
  41669f:	mov    rax,QWORD PTR fs:0x28
  4166a8:	mov    QWORD PTR [rsp+0x8],rax
  4166ad:	call   4132c0 <isspace@plt+0xf9b0>
  4166b2:	cmp    rax,rbx
  4166b5:	jne    4166be <isspace@plt+0x12dae>
  4166b7:	call   4174c0 <isspace@plt+0x13bb0>
  4166bc:	jmp    4166d7 <isspace@plt+0x12dc7>
  4166be:	mov    r15,rax
  4166c1:	mov    rdi,r14
  4166c4:	call   403250 <strlen@plt>
  4166c9:	mov    rsi,r15
  4166cc:	add    rsi,rax
  4166cf:	mov    rdi,r15
  4166d2:	call   417690 <isspace@plt+0x13d80>
  4166d7:	mov    rcx,QWORD PTR fs:0x28
  4166e0:	cmp    rcx,QWORD PTR [rsp+0x8]
  4166e5:	jne    4166f1 <isspace@plt+0x12de1>
  4166e7:	add    rsp,0x10
  4166eb:	pop    rbx
  4166ec:	pop    r14
  4166ee:	pop    r15
  4166f0:	ret    
  4166f1:	call   403280 <__stack_chk_fail@plt>
  4166f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416700:	push   r15
  416702:	push   r14
  416704:	push   rbx
  416705:	sub    rsp,0x10
  416709:	mov    r15,rsi
  41670c:	mov    rbx,rdi
  41670f:	mov    rax,QWORD PTR fs:0x28
  416718:	mov    QWORD PTR [rsp+0x8],rax
  41671d:	call   413560 <isspace@plt+0xfc50>
  416722:	mov    r14,rax
  416725:	mov    rdi,rbx
  416728:	mov    rsi,r15
  41672b:	call   4137b0 <isspace@plt+0xfea0>
  416730:	mov    rcx,rax
  416733:	mov    rax,QWORD PTR fs:0x28
  41673c:	cmp    rax,QWORD PTR [rsp+0x8]
  416741:	jne    416753 <isspace@plt+0x12e43>
  416743:	mov    rax,r14
  416746:	mov    rdx,rcx
  416749:	add    rsp,0x10
  41674d:	pop    rbx
  41674e:	pop    r14
  416750:	pop    r15
  416752:	ret    
  416753:	call   403280 <__stack_chk_fail@plt>
  416758:	nop    DWORD PTR [rax+rax*1+0x0]
  416760:	push   r15
  416762:	push   r14
  416764:	push   rbx
  416765:	sub    rsp,0x20
  416769:	mov    r14,rsi
  41676c:	mov    rbx,rdi
  41676f:	mov    rax,QWORD PTR fs:0x28
  416778:	mov    QWORD PTR [rsp+0x18],rax
  41677d:	call   413560 <isspace@plt+0xfc50>
  416782:	mov    r15,rax
  416785:	mov    rdi,rbx
  416788:	mov    rsi,r14
  41678b:	call   4137b0 <isspace@plt+0xfea0>
  416790:	mov    QWORD PTR [rsp+0x8],r15
  416795:	mov    QWORD PTR [rsp+0x10],rax
  41679a:	lea    rsi,[rsp+0x8]
  41679f:	mov    rdi,rbx
  4167a2:	call   4167d0 <isspace@plt+0x12ec0>
  4167a7:	mov    rcx,QWORD PTR fs:0x28
  4167b0:	cmp    rcx,QWORD PTR [rsp+0x18]
  4167b5:	jne    4167c1 <isspace@plt+0x12eb1>
  4167b7:	add    rsp,0x20
  4167bb:	pop    rbx
  4167bc:	pop    r14
  4167be:	pop    r15
  4167c0:	ret    
  4167c1:	call   403280 <__stack_chk_fail@plt>
  4167c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4167d0:	push   r15
  4167d2:	push   r14
  4167d4:	push   r13
  4167d6:	push   r12
  4167d8:	push   rbx
  4167d9:	sub    rsp,0x70
  4167dd:	mov    r12,rsi
  4167e0:	mov    r14,rdi
  4167e3:	mov    rax,QWORD PTR fs:0x28
  4167ec:	mov    QWORD PTR [rsp+0x68],rax
  4167f1:	mov    rdx,QWORD PTR [rsi]
  4167f4:	lea    rbx,[rsp+0x30]
  4167f9:	mov    rdi,rbx
  4167fc:	mov    rsi,r14
  4167ff:	call   410760 <isspace@plt+0xce50>
  416804:	lea    rsi,[rsp+0x67]
  416809:	mov    rdi,rbx
  41680c:	call   412690 <isspace@plt+0xed80>
  416811:	test   al,al
  416813:	je     416858 <isspace@plt+0x12f48>
  416815:	call   4038f0 <__ctype_b_loc@plt>
  41681a:	mov    r15,rax
  41681d:	lea    rbx,[rsp+0x30]
  416822:	lea    r13,[rsp+0x67]
  416827:	nop    WORD PTR [rax+rax*1+0x0]
  416830:	mov    rax,QWORD PTR [r15]
  416833:	movzx  ecx,BYTE PTR [rsp+0x67]
  416838:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41683d:	je     416858 <isspace@plt+0x12f48>
  41683f:	xor    esi,esi
  416841:	mov    rdi,rbx
  416844:	call   412710 <isspace@plt+0xee00>
  416849:	mov    rdi,rbx
  41684c:	mov    rsi,r13
  41684f:	call   412690 <isspace@plt+0xed80>
  416854:	test   al,al
  416856:	jne    416830 <isspace@plt+0x12f20>
  416858:	mov    r15,QWORD PTR [rsp+0x50]
  41685d:	mov    rdx,QWORD PTR [r12+0x8]
  416862:	lea    rdi,[rsp+0x8]
  416867:	mov    rsi,r14
  41686a:	call   410760 <isspace@plt+0xce50>
  41686f:	mov    rax,QWORD PTR [rsp+0x28]
  416874:	mov    QWORD PTR [rsp+0x50],rax
  416879:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  41687f:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  416885:	lea    r14,[rsp+0x30]
  41688a:	lea    r12,[rsp+0x67]
  41688f:	nop
  416890:	mov    rbx,QWORD PTR [rsp+0x50]
  416895:	mov    rdi,r14
  416898:	mov    rsi,r12
  41689b:	vzeroupper 
  41689e:	call   4127d0 <isspace@plt+0xeec0>
  4168a3:	test   al,al
  4168a5:	je     4168bb <isspace@plt+0x12fab>
  4168a7:	call   4038f0 <__ctype_b_loc@plt>
  4168ac:	mov    rax,QWORD PTR [rax]
  4168af:	movzx  ecx,BYTE PTR [rsp+0x67]
  4168b4:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4168b9:	jne    416890 <isspace@plt+0x12f80>
  4168bb:	mov    rax,QWORD PTR fs:0x28
  4168c4:	cmp    rax,QWORD PTR [rsp+0x68]
  4168c9:	jne    4168df <isspace@plt+0x12fcf>
  4168cb:	mov    rax,r15
  4168ce:	mov    rdx,rbx
  4168d1:	add    rsp,0x70
  4168d5:	pop    rbx
  4168d6:	pop    r12
  4168d8:	pop    r13
  4168da:	pop    r14
  4168dc:	pop    r15
  4168de:	ret    
  4168df:	call   403280 <__stack_chk_fail@plt>
  4168e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4168ee:	xchg   ax,ax
  4168f0:	push   r15
  4168f2:	push   r14
  4168f4:	push   rbx
  4168f5:	sub    rsp,0x10
  4168f9:	mov    r15,rsi
  4168fc:	mov    rbx,rdi
  4168ff:	mov    rax,QWORD PTR fs:0x28
  416908:	mov    QWORD PTR [rsp+0x8],rax
  41690d:	call   4150a0 <isspace@plt+0x11790>
  416912:	mov    r14,rax
  416915:	mov    rdi,rbx
  416918:	mov    rsi,r15
  41691b:	call   414ef0 <isspace@plt+0x115e0>
  416920:	mov    rcx,rax
  416923:	mov    rax,QWORD PTR fs:0x28
  41692c:	cmp    rax,QWORD PTR [rsp+0x8]
  416931:	jne    416943 <isspace@plt+0x13033>
  416933:	mov    rax,r14
  416936:	mov    rdx,rcx
  416939:	add    rsp,0x10
  41693d:	pop    rbx
  41693e:	pop    r14
  416940:	pop    r15
  416942:	ret    
  416943:	call   403280 <__stack_chk_fail@plt>
  416948:	nop    DWORD PTR [rax+rax*1+0x0]
  416950:	push   r15
  416952:	push   r14
  416954:	push   r13
  416956:	push   r12
  416958:	push   rbx
  416959:	sub    rsp,0x60
  41695d:	mov    r14,rsi
  416960:	mov    r12,rdi
  416963:	mov    rax,QWORD PTR fs:0x28
  41696c:	mov    QWORD PTR [rsp+0x58],rax
  416971:	call   413560 <isspace@plt+0xfc50>
  416976:	lea    rbx,[rsp+0x30]
  41697b:	mov    rdi,rbx
  41697e:	mov    rsi,r12
  416981:	mov    rdx,rax
  416984:	call   410760 <isspace@plt+0xce50>
  416989:	mov    rsi,rsp
  41698c:	mov    rdi,rbx
  41698f:	call   412690 <isspace@plt+0xed80>
  416994:	test   al,al
  416996:	je     4169ea <isspace@plt+0x130da>
  416998:	mov    al,BYTE PTR [rsp]
  41699b:	cmp    al,0xa
  41699d:	je     4169ea <isspace@plt+0x130da>
  41699f:	lea    r13,[rsp+0x30]
  4169a4:	mov    r15,rsp
  4169a7:	nop    WORD PTR [rax+rax*1+0x0]
  4169b0:	mov    ebx,eax
  4169b2:	cmp    al,0x20
  4169b4:	je     4169bb <isspace@plt+0x130ab>
  4169b6:	cmp    bl,0x9
  4169b9:	jne    4169dc <isspace@plt+0x130cc>
  4169bb:	xor    esi,esi
  4169bd:	mov    rdi,r13
  4169c0:	call   412b50 <isspace@plt+0xf240>
  4169c5:	mov    rdi,r13
  4169c8:	mov    rsi,r15
  4169cb:	call   412690 <isspace@plt+0xed80>
  4169d0:	test   al,al
  4169d2:	je     4169dc <isspace@plt+0x130cc>
  4169d4:	movzx  eax,BYTE PTR [rsp]
  4169d8:	cmp    al,0xa
  4169da:	jne    4169b0 <isspace@plt+0x130a0>
  4169dc:	cmp    bl,0x20
  4169df:	je     4169ea <isspace@plt+0x130da>
  4169e1:	cmp    bl,0x9
  4169e4:	jne    416b44 <isspace@plt+0x13234>
  4169ea:	lea    rdi,[rsp+0x30]
  4169ef:	mov    rsi,r12
  4169f2:	mov    rdx,r14
  4169f5:	call   410760 <isspace@plt+0xce50>
  4169fa:	mov    rax,QWORD PTR [rsp+0x50]
  4169ff:	mov    QWORD PTR [rsp+0x20],rax
  416a04:	vmovups ymm0,YMMWORD PTR [rsp+0x30]
  416a0a:	vmovups YMMWORD PTR [rsp],ymm0
  416a0f:	mov    rdi,rsp
  416a12:	lea    rsi,[rsp+0x2f]
  416a17:	vzeroupper 
  416a1a:	call   412690 <isspace@plt+0xed80>
  416a1f:	mov    cl,BYTE PTR [rsp+0x2f]
  416a23:	test   al,al
  416a25:	je     416a6c <isspace@plt+0x1315c>
  416a27:	movabs r15,0x100000600
  416a31:	mov    rbx,rsp
  416a34:	lea    r14,[rsp+0x2f]
  416a39:	nop    DWORD PTR [rax+0x0]
  416a40:	cmp    cl,0x20
  416a43:	ja     416a8b <isspace@plt+0x1317b>
  416a45:	movzx  eax,cl
  416a48:	bt     r15,rax
  416a4c:	jae    416a8b <isspace@plt+0x1317b>
  416a4e:	xor    esi,esi
  416a50:	mov    rdi,rbx
  416a53:	call   4127d0 <isspace@plt+0xeec0>
  416a58:	mov    rdi,rbx
  416a5b:	mov    rsi,r14
  416a5e:	call   412690 <isspace@plt+0xed80>
  416a63:	movzx  ecx,BYTE PTR [rsp+0x2f]
  416a68:	test   al,al
  416a6a:	jne    416a40 <isspace@plt+0x13130>
  416a6c:	cmp    cl,0x20
  416a6f:	ja     416a8b <isspace@plt+0x1317b>
  416a71:	movzx  eax,cl
  416a74:	movabs rcx,0x100000600
  416a7e:	bt     rcx,rax
  416a82:	jae    416a8b <isspace@plt+0x1317b>
  416a84:	mov    r15,QWORD PTR [rsp+0x20]
  416a89:	jmp    416a9b <isspace@plt+0x1318b>
  416a8b:	mov    rsi,QWORD PTR [rsp+0x20]
  416a90:	mov    rdi,r12
  416a93:	call   4137b0 <isspace@plt+0xfea0>
  416a98:	mov    r15,rax
  416a9b:	lea    rdi,[rsp+0x30]
  416aa0:	lea    rsi,[rsp+0x2f]
  416aa5:	call   412690 <isspace@plt+0xed80>
  416aaa:	test   al,al
  416aac:	je     416afa <isspace@plt+0x131ea>
  416aae:	movabs r13,0x100000600
  416ab8:	lea    rbx,[rsp+0x30]
  416abd:	lea    r14,[rsp+0x2f]
  416ac2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416acc:	nop    DWORD PTR [rax+0x0]
  416ad0:	movzx  eax,BYTE PTR [rsp+0x2f]
  416ad5:	cmp    rax,0x20
  416ad9:	ja     416afa <isspace@plt+0x131ea>
  416adb:	bt     r13,rax
  416adf:	jae    416afa <isspace@plt+0x131ea>
  416ae1:	xor    esi,esi
  416ae3:	mov    rdi,rbx
  416ae6:	call   412710 <isspace@plt+0xee00>
  416aeb:	mov    rdi,rbx
  416aee:	mov    rsi,r14
  416af1:	call   412690 <isspace@plt+0xed80>
  416af6:	test   al,al
  416af8:	jne    416ad0 <isspace@plt+0x131c0>
  416afa:	mov    rbx,QWORD PTR [rsp+0x50]
  416aff:	mov    rdi,r12
  416b02:	call   410a90 <isspace@plt+0xd180>
  416b07:	cmp    rbx,rax
  416b0a:	jne    416b13 <isspace@plt+0x13203>
  416b0c:	mov    rdx,QWORD PTR [rsp+0x20]
  416b11:	jmp    416b23 <isspace@plt+0x13213>
  416b13:	mov    rsi,QWORD PTR [rsp+0x50]
  416b18:	mov    rdi,r12
  416b1b:	call   413560 <isspace@plt+0xfc50>
  416b20:	mov    rdx,rax
  416b23:	mov    rax,QWORD PTR fs:0x28
  416b2c:	cmp    rax,QWORD PTR [rsp+0x58]
  416b31:	jne    416b8f <isspace@plt+0x1327f>
  416b33:	mov    rax,r15
  416b36:	add    rsp,0x60
  416b3a:	pop    rbx
  416b3b:	pop    r12
  416b3d:	pop    r13
  416b3f:	pop    r14
  416b41:	pop    r15
  416b43:	ret    
  416b44:	mov    rdi,r12
  416b47:	mov    rsi,r14
  416b4a:	call   4154d0 <isspace@plt+0x11bc0>
  416b4f:	mov    rbx,rax
  416b52:	test   rax,rax
  416b55:	jne    416b74 <isspace@plt+0x13264>
  416b57:	xor    r15d,r15d
  416b5a:	lea    rdx,[rsp+0x2f]
  416b5f:	xor    esi,esi
  416b61:	mov    rdi,r12
  416b64:	call   4112b0 <isspace@plt+0xd9a0>
  416b69:	test   al,al
  416b6b:	je     416b82 <isspace@plt+0x13272>
  416b6d:	cmp    BYTE PTR [rsp+0x2f],0xa
  416b72:	jne    416b82 <isspace@plt+0x13272>
  416b74:	mov    rdi,r12
  416b77:	mov    rsi,rbx
  416b7a:	call   4137b0 <isspace@plt+0xfea0>
  416b7f:	mov    r15,rax
  416b82:	mov    rdi,r12
  416b85:	mov    rsi,r14
  416b88:	call   415360 <isspace@plt+0x11a50>
  416b8d:	jmp    416b20 <isspace@plt+0x13210>
  416b8f:	call   403280 <__stack_chk_fail@plt>
  416b94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416b9e:	xchg   ax,ax
  416ba0:	push   rbx
  416ba1:	sub    rsp,0x30
  416ba5:	mov    rbx,rdi
  416ba8:	mov    rax,QWORD PTR fs:0x28
  416bb1:	mov    QWORD PTR [rsp+0x28],rax
  416bb6:	call   416950 <isspace@plt+0x13040>
  416bbb:	mov    QWORD PTR [rsp+0x18],rax
  416bc0:	mov    QWORD PTR [rsp+0x20],rdx
  416bc5:	mov    rdi,rbx
  416bc8:	mov    rsi,rdx
  416bcb:	call   416950 <isspace@plt+0x13040>
  416bd0:	mov    QWORD PTR [rsp+0x8],rax
  416bd5:	mov    QWORD PTR [rsp+0x10],rdx
  416bda:	lea    rdi,[rsp+0x18]
  416bdf:	lea    rsi,[rsp+0x8]
  416be4:	call   417500 <isspace@plt+0x13bf0>
  416be9:	mov    rcx,QWORD PTR fs:0x28
  416bf2:	cmp    rcx,QWORD PTR [rsp+0x28]
  416bf7:	jne    416bff <isspace@plt+0x132ef>
  416bf9:	add    rsp,0x30
  416bfd:	pop    rbx
  416bfe:	ret    
  416bff:	call   403280 <__stack_chk_fail@plt>
  416c04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416c0e:	xchg   ax,ax
  416c10:	push   rax
  416c11:	mov    rax,QWORD PTR fs:0x28
  416c1a:	mov    QWORD PTR [rsp],rax
  416c1e:	mov    edx,0x5d
  416c23:	call   416c40 <isspace@plt+0x13330>
  416c28:	mov    rcx,QWORD PTR fs:0x28
  416c31:	cmp    rcx,QWORD PTR [rsp]
  416c35:	jne    416c39 <isspace@plt+0x13329>
  416c37:	pop    rcx
  416c38:	ret    
  416c39:	call   403280 <__stack_chk_fail@plt>
  416c3e:	xchg   ax,ax
  416c40:	push   rbp
  416c41:	push   r15
  416c43:	push   r14
  416c45:	push   r13
  416c47:	push   r12
  416c49:	push   rbx
  416c4a:	sub    rsp,0x78
  416c4e:	mov    ebx,edx
  416c50:	mov    rbp,rsi
  416c53:	mov    r14,rdi
  416c56:	mov    rax,QWORD PTR fs:0x28
  416c5f:	mov    QWORD PTR [rsp+0x70],rax
  416c64:	call   4174c0 <isspace@plt+0x13bb0>
  416c69:	mov    QWORD PTR [rsp+0x58],rax
  416c6e:	mov    QWORD PTR [rsp+0x60],rdx
  416c73:	lea    ecx,[rbx-0x22]
  416c76:	cmp    ecx,0x5b
  416c79:	ja     416e74 <isspace@plt+0x13564>
  416c7f:	mov    r13d,0x29
  416c85:	mov    r15d,0x28
  416c8b:	lea    rsi,[rip+0x1ab7e]        # 431810 <isspace@plt+0x2df00>
  416c92:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  416c96:	add    rcx,rsi
  416c99:	jmp    rcx
  416c9b:	mov    r15d,ebx
  416c9e:	mov    r13d,ebx
  416ca1:	jmp    416ccb <isspace@plt+0x133bb>
  416ca3:	mov    r13d,0x3e
  416ca9:	mov    r15d,0x3c
  416caf:	jmp    416ccb <isspace@plt+0x133bb>
  416cb1:	mov    r13d,0x7d
  416cb7:	mov    r15d,0x7b
  416cbd:	jmp    416ccb <isspace@plt+0x133bb>
  416cbf:	mov    r13d,0x5d
  416cc5:	mov    r15d,0x5b
  416ccb:	lea    rdi,[rsp+0x30]
  416cd0:	mov    rsi,r14
  416cd3:	mov    rdx,rbp
  416cd6:	call   410760 <isspace@plt+0xce50>
  416cdb:	cmp    r15d,r13d
  416cde:	jne    416d44 <isspace@plt+0x13434>
  416ce0:	lea    rdi,[rsp+0x30]
  416ce5:	lea    rsi,[rsp+0x6f]
  416cea:	call   412690 <isspace@plt+0xed80>
  416cef:	test   al,al
  416cf1:	je     416d44 <isspace@plt+0x13434>
  416cf3:	mov    al,BYTE PTR [rsp+0x6f]
  416cf7:	add    al,0xde
  416cf9:	cmp    al,0x3e
  416cfb:	ja     416d44 <isspace@plt+0x13434>
  416cfd:	movzx  eax,al
  416d00:	movabs rcx,0x4000000000000021
  416d0a:	bt     rcx,rax
  416d0e:	jae    416d44 <isspace@plt+0x13434>
  416d10:	xor    edx,edx
  416d12:	mov    rdi,r14
  416d15:	mov    rsi,rbp
  416d18:	call   415710 <isspace@plt+0x11e00>
  416d1d:	mov    rcx,rax
  416d20:	cmp    rax,rbp
  416d23:	mov    rax,rbp
  416d26:	cmovb  rax,rcx
  416d2a:	cmova  rbp,rcx
  416d2e:	add    rax,0x1
  416d32:	mov    QWORD PTR [rsp+0x58],rax
  416d37:	mov    QWORD PTR [rsp+0x60],rbp
  416d3c:	mov    rdx,rbp
  416d3f:	jmp    416e74 <isspace@plt+0x13564>
  416d44:	mov    QWORD PTR [rsp],r14
  416d48:	lea    rdi,[rsp+0x30]
  416d4d:	lea    rsi,[rsp+0x6f]
  416d52:	call   412690 <isspace@plt+0xed80>
  416d57:	test   al,al
  416d59:	je     416dbb <isspace@plt+0x134ab>
  416d5b:	mov    r14d,0x1
  416d61:	lea    rbx,[rsp+0x30]
  416d66:	lea    r12,[rsp+0x6f]
  416d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  416d70:	movsx  eax,BYTE PTR [rsp+0x6f]
  416d75:	cmp    r15d,eax
  416d78:	jne    416d80 <isspace@plt+0x13470>
  416d7a:	add    r14d,0xffffffff
  416d7e:	je     416dad <isspace@plt+0x1349d>
  416d80:	cmp    r13d,eax
  416d83:	jne    416d92 <isspace@plt+0x13482>
  416d85:	xor    eax,eax
  416d87:	cmp    QWORD PTR [rsp+0x50],rbp
  416d8c:	setne  al
  416d8f:	add    r14d,eax
  416d92:	xor    esi,esi
  416d94:	mov    rdi,rbx
  416d97:	call   4127d0 <isspace@plt+0xeec0>
  416d9c:	mov    rdi,rbx
  416d9f:	mov    rsi,r12
  416da2:	call   412690 <isspace@plt+0xed80>
  416da7:	test   al,al
  416da9:	jne    416d70 <isspace@plt+0x13460>
  416dab:	jmp    416dbb <isspace@plt+0x134ab>
  416dad:	mov    rax,QWORD PTR [rsp+0x50]
  416db2:	add    rax,0x1
  416db6:	mov    QWORD PTR [rsp+0x58],rax
  416dbb:	lea    rdi,[rsp+0x8]
  416dc0:	mov    rsi,QWORD PTR [rsp]
  416dc4:	mov    r12,rbp
  416dc7:	mov    rdx,rbp
  416dca:	call   410760 <isspace@plt+0xce50>
  416dcf:	mov    rax,QWORD PTR [rsp+0x28]
  416dd4:	mov    QWORD PTR [rsp+0x50],rax
  416dd9:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  416ddf:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  416de5:	lea    rdi,[rsp+0x30]
  416dea:	lea    rsi,[rsp+0x6f]
  416def:	vzeroupper 
  416df2:	call   412690 <isspace@plt+0xed80>
  416df7:	test   al,al
  416df9:	je     416e55 <isspace@plt+0x13545>
  416dfb:	mov    ebp,0x1
  416e00:	lea    rbx,[rsp+0x30]
  416e05:	lea    r14,[rsp+0x6f]
  416e0a:	nop    WORD PTR [rax+rax*1+0x0]
  416e10:	movsx  eax,BYTE PTR [rsp+0x6f]
  416e15:	cmp    r13d,eax
  416e18:	jne    416e1f <isspace@plt+0x1350f>
  416e1a:	add    ebp,0xffffffff
  416e1d:	je     416e4b <isspace@plt+0x1353b>
  416e1f:	cmp    r15d,eax
  416e22:	jne    416e30 <isspace@plt+0x13520>
  416e24:	xor    eax,eax
  416e26:	cmp    QWORD PTR [rsp+0x50],r12
  416e2b:	setne  al
  416e2e:	add    ebp,eax
  416e30:	xor    esi,esi
  416e32:	mov    rdi,rbx
  416e35:	call   412710 <isspace@plt+0xee00>
  416e3a:	mov    rdi,rbx
  416e3d:	mov    rsi,r14
  416e40:	call   412690 <isspace@plt+0xed80>
  416e45:	test   al,al
  416e47:	jne    416e10 <isspace@plt+0x13500>
  416e49:	jmp    416e55 <isspace@plt+0x13545>
  416e4b:	mov    rax,QWORD PTR [rsp+0x50]
  416e50:	mov    QWORD PTR [rsp+0x60],rax
  416e55:	lea    rdi,[rsp+0x58]
  416e5a:	call   417400 <isspace@plt+0x13af0>
  416e5f:	test   al,al
  416e61:	je     416e6f <isspace@plt+0x1355f>
  416e63:	mov    rax,QWORD PTR [rsp+0x58]
  416e68:	mov    rdx,QWORD PTR [rsp+0x60]
  416e6d:	jmp    416e74 <isspace@plt+0x13564>
  416e6f:	call   4174c0 <isspace@plt+0x13bb0>
  416e74:	mov    rcx,QWORD PTR fs:0x28
  416e7d:	cmp    rcx,QWORD PTR [rsp+0x70]
  416e82:	jne    416e93 <isspace@plt+0x13583>
  416e84:	add    rsp,0x78
  416e88:	pop    rbx
  416e89:	pop    r12
  416e8b:	pop    r13
  416e8d:	pop    r14
  416e8f:	pop    r15
  416e91:	pop    rbp
  416e92:	ret    
  416e93:	call   403280 <__stack_chk_fail@plt>
  416e98:	nop    DWORD PTR [rax+rax*1+0x0]
  416ea0:	push   rax
  416ea1:	mov    rax,QWORD PTR fs:0x28
  416eaa:	mov    QWORD PTR [rsp],rax
  416eae:	mov    edx,0x7d
  416eb3:	call   416c40 <isspace@plt+0x13330>
  416eb8:	mov    rcx,QWORD PTR fs:0x28
  416ec1:	cmp    rcx,QWORD PTR [rsp]
  416ec5:	jne    416ec9 <isspace@plt+0x135b9>
  416ec7:	pop    rcx
  416ec8:	ret    
  416ec9:	call   403280 <__stack_chk_fail@plt>
  416ece:	xchg   ax,ax
  416ed0:	push   rax
  416ed1:	mov    rax,QWORD PTR fs:0x28
  416eda:	mov    QWORD PTR [rsp],rax
  416ede:	mov    edx,0x3e
  416ee3:	call   416c40 <isspace@plt+0x13330>
  416ee8:	mov    rcx,QWORD PTR fs:0x28
  416ef1:	cmp    rcx,QWORD PTR [rsp]
  416ef5:	jne    416ef9 <isspace@plt+0x135e9>
  416ef7:	pop    rcx
  416ef8:	ret    
  416ef9:	call   403280 <__stack_chk_fail@plt>
  416efe:	xchg   ax,ax
  416f00:	push   rax
  416f01:	mov    rax,QWORD PTR fs:0x28
  416f0a:	mov    QWORD PTR [rsp],rax
  416f0e:	mov    edx,0x29
  416f13:	call   416c40 <isspace@plt+0x13330>
  416f18:	mov    rcx,QWORD PTR fs:0x28
  416f21:	cmp    rcx,QWORD PTR [rsp]
  416f25:	jne    416f29 <isspace@plt+0x13619>
  416f27:	pop    rcx
  416f28:	ret    
  416f29:	call   403280 <__stack_chk_fail@plt>
  416f2e:	xchg   ax,ax
  416f30:	push   rax
  416f31:	mov    rax,QWORD PTR fs:0x28
  416f3a:	mov    QWORD PTR [rsp],rax
  416f3e:	mov    edx,0x22
  416f43:	call   416c40 <isspace@plt+0x13330>
  416f48:	mov    rcx,QWORD PTR fs:0x28
  416f51:	cmp    rcx,QWORD PTR [rsp]
  416f55:	jne    416f59 <isspace@plt+0x13649>
  416f57:	pop    rcx
  416f58:	ret    
  416f59:	call   403280 <__stack_chk_fail@plt>
  416f5e:	xchg   ax,ax
  416f60:	push   rax
  416f61:	mov    rax,QWORD PTR fs:0x28
  416f6a:	mov    QWORD PTR [rsp],rax
  416f6e:	mov    edx,0x27
  416f73:	call   416c40 <isspace@plt+0x13330>
  416f78:	mov    rcx,QWORD PTR fs:0x28
  416f81:	cmp    rcx,QWORD PTR [rsp]
  416f85:	jne    416f89 <isspace@plt+0x13679>
  416f87:	pop    rcx
  416f88:	ret    
  416f89:	call   403280 <__stack_chk_fail@plt>
  416f8e:	xchg   ax,ax
  416f90:	push   rax
  416f91:	mov    rax,QWORD PTR fs:0x28
  416f9a:	mov    QWORD PTR [rsp],rax
  416f9e:	mov    edx,0x60
  416fa3:	call   416c40 <isspace@plt+0x13330>
  416fa8:	mov    rcx,QWORD PTR fs:0x28
  416fb1:	cmp    rcx,QWORD PTR [rsp]
  416fb5:	jne    416fb9 <isspace@plt+0x136a9>
  416fb7:	pop    rcx
  416fb8:	ret    
  416fb9:	call   403280 <__stack_chk_fail@plt>
  416fbe:	xchg   ax,ax
  416fc0:	push   r15
  416fc2:	push   r14
  416fc4:	push   rbx
  416fc5:	sub    rsp,0x30
  416fc9:	mov    r14,rdx
  416fcc:	mov    r15,rsi
  416fcf:	mov    rbx,rdi
  416fd2:	mov    rax,QWORD PTR fs:0x28
  416fdb:	mov    QWORD PTR [rsp+0x28],rax
  416fe0:	call   410a90 <isspace@plt+0xd180>
  416fe5:	sub    rax,r15
  416fe8:	jbe    417011 <isspace@plt+0x13701>
  416fea:	mov    DWORD PTR [rsp],0x0
  416ff1:	lea    r9,[rsp+0x10]
  416ff6:	mov    r8d,0x1
  416ffc:	mov    rdi,rbx
  416fff:	mov    rsi,r15
  417002:	mov    rdx,rax
  417005:	mov    rcx,r14
  417008:	call   42b690 <isspace@plt+0x27d80>
  41700d:	test   eax,eax
  41700f:	je     417030 <isspace@plt+0x13720>
  417011:	call   4174c0 <isspace@plt+0x13bb0>
  417016:	mov    rcx,QWORD PTR fs:0x28
  41701f:	cmp    rcx,QWORD PTR [rsp+0x28]
  417024:	jne    417041 <isspace@plt+0x13731>
  417026:	add    rsp,0x30
  41702a:	pop    rbx
  41702b:	pop    r14
  41702d:	pop    r15
  41702f:	ret    
  417030:	mov    rdi,QWORD PTR [rsp+0x10]
  417035:	mov    rsi,QWORD PTR [rsp+0x18]
  41703a:	call   417690 <isspace@plt+0x13d80>
  41703f:	jmp    417016 <isspace@plt+0x13706>
  417041:	call   403280 <__stack_chk_fail@plt>
  417046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417050:	sub    rsp,0x28
  417054:	mov    rax,rdx
  417057:	mov    rcx,rsi
  41705a:	mov    rdx,QWORD PTR fs:0x28
  417063:	mov    QWORD PTR [rsp+0x20],rdx
  417068:	mov    DWORD PTR [rsp],0x0
  41706f:	lea    r9,[rsp+0x10]
  417074:	mov    esi,0x0
  417079:	mov    r8d,0x1
  41707f:	mov    rdx,rcx
  417082:	mov    rcx,rax
  417085:	call   42ba80 <isspace@plt+0x28170>
  41708a:	test   eax,eax
  41708c:	je     417095 <isspace@plt+0x13785>
  41708e:	call   4174c0 <isspace@plt+0x13bb0>
  417093:	jmp    4170a4 <isspace@plt+0x13794>
  417095:	mov    rdi,QWORD PTR [rsp+0x10]
  41709a:	mov    rsi,QWORD PTR [rsp+0x18]
  41709f:	call   417690 <isspace@plt+0x13d80>
  4170a4:	mov    rcx,QWORD PTR fs:0x28
  4170ad:	cmp    rcx,QWORD PTR [rsp+0x20]
  4170b2:	jne    4170b9 <isspace@plt+0x137a9>
  4170b4:	add    rsp,0x28
  4170b8:	ret    
  4170b9:	call   403280 <__stack_chk_fail@plt>
  4170be:	xchg   ax,ax
  4170c0:	push   rbp
  4170c1:	push   r15
  4170c3:	push   r14
  4170c5:	push   r13
  4170c7:	push   r12
  4170c9:	push   rbx
  4170ca:	sub    rsp,0x28
  4170ce:	mov    r13,rdi
  4170d1:	mov    rax,QWORD PTR fs:0x28
  4170da:	mov    QWORD PTR [rsp+0x20],rax
  4170df:	call   413560 <isspace@plt+0xfc50>
  4170e4:	mov    r15,rax
  4170e7:	mov    rdi,r13
  4170ea:	mov    rsi,rax
  4170ed:	call   4135c0 <isspace@plt+0xfcb0>
  4170f2:	mov    r14,rax
  4170f5:	mov    rdi,r13
  4170f8:	mov    rsi,r15
  4170fb:	call   4137b0 <isspace@plt+0xfea0>
  417100:	mov    r12,rax
  417103:	sub    r14,r15
  417106:	lea    rdx,[rsp+0x1f]
  41710b:	mov    rdi,r13
  41710e:	mov    rsi,r15
  417111:	call   4112b0 <isspace@plt+0xd9a0>
  417116:	mov    ebx,eax
  417118:	mov    al,BYTE PTR [rsp+0x1f]
  41711c:	mov    BYTE PTR [rsp+0x8],al
  417120:	mov    rdi,r13
  417123:	mov    rsi,r15
  417126:	mov    rdx,r14
  417129:	call   411460 <isspace@plt+0xdb50>
  41712e:	mov    rbp,rax
  417131:	mov    rdi,r14
  417134:	call   4035e0 <malloc@plt>
  417139:	mov    QWORD PTR [rsp],rbp
  41713d:	test   rbp,rbp
  417140:	je     4172b8 <isspace@plt+0x139a8>
  417146:	test   rax,rax
  417149:	je     4172b8 <isspace@plt+0x139a8>
  41714f:	mov    QWORD PTR [rsp+0x10],rax
  417154:	cmp    BYTE PTR [rsp+0x8],0xa
  417159:	setne  al
  41715c:	xor    bl,0x1
  41715f:	or     bl,al
  417161:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41716b:	nop    DWORD PTR [rax+rax*1+0x0]
  417170:	mov    rbp,r15
  417173:	mov    rdi,r13
  417176:	mov    rsi,r15
  417179:	call   413500 <isspace@plt+0xfbf0>
  41717e:	mov    rdi,r13
  417181:	mov    rsi,rax
  417184:	call   413560 <isspace@plt+0xfc50>
  417189:	mov    QWORD PTR [rsp+0x8],r15
  41718e:	cmp    rax,r15
  417191:	je     417207 <isspace@plt+0x138f7>
  417193:	mov    r15,rax
  417196:	mov    rdi,r13
  417199:	mov    rsi,rax
  41719c:	call   4135c0 <isspace@plt+0xfcb0>
  4171a1:	sub    rax,r15
  4171a4:	cmp    rax,r14
  4171a7:	jb     417207 <isspace@plt+0x138f7>
  4171a9:	test   r14,r14
  4171ac:	setne  bpl
  4171b0:	mov    rdi,r13
  4171b3:	mov    rsi,r15
  4171b6:	lea    rdx,[rsp+0x1f]
  4171bb:	call   4112b0 <isspace@plt+0xd9a0>
  4171c0:	cmp    BYTE PTR [rsp+0x1f],0xa
  4171c5:	sete   cl
  4171c8:	and    cl,al
  4171ca:	mov    eax,ecx
  4171cc:	or     al,bl
  4171ce:	cmp    al,0x1
  4171d0:	jne    417207 <isspace@plt+0x138f7>
  4171d2:	xor    cl,0x1
  4171d5:	or     bpl,cl
  4171d8:	je     417207 <isspace@plt+0x138f7>
  4171da:	mov    rdi,r13
  4171dd:	mov    rsi,r15
  4171e0:	mov    rdx,r14
  4171e3:	mov    rbp,QWORD PTR [rsp+0x10]
  4171e8:	mov    rcx,rbp
  4171eb:	call   411380 <isspace@plt+0xda70>
  4171f0:	mov    rdi,QWORD PTR [rsp]
  4171f4:	mov    rsi,rbp
  4171f7:	mov    rdx,r14
  4171fa:	call   403430 <memcmp@plt>
  4171ff:	test   eax,eax
  417201:	je     417170 <isspace@plt+0x13860>
  417207:	mov    r15d,ebx
  41720a:	nop    WORD PTR [rax+rax*1+0x0]
  417210:	mov    rbp,r12
  417213:	mov    rdi,r13
  417216:	mov    rsi,r12
  417219:	call   4135c0 <isspace@plt+0xfcb0>
  41721e:	sub    rax,r12
  417221:	cmp    rax,r14
  417224:	jb     417296 <isspace@plt+0x13986>
  417226:	test   r14,r14
  417229:	setne  bl
  41722c:	mov    rdi,r13
  41722f:	mov    rsi,rbp
  417232:	lea    rdx,[rsp+0x1f]
  417237:	call   4112b0 <isspace@plt+0xd9a0>
  41723c:	cmp    BYTE PTR [rsp+0x1f],0xa
  417241:	sete   cl
  417244:	and    cl,al
  417246:	mov    eax,ecx
  417248:	or     al,r15b
  41724b:	cmp    al,0x1
  41724d:	jne    417296 <isspace@plt+0x13986>
  41724f:	xor    cl,0x1
  417252:	or     bl,cl
  417254:	je     417296 <isspace@plt+0x13986>
  417256:	mov    rdi,r13
  417259:	mov    rsi,rbp
  41725c:	mov    rdx,r14
  41725f:	mov    rbx,QWORD PTR [rsp+0x10]
  417264:	mov    rcx,rbx
  417267:	call   411380 <isspace@plt+0xda70>
  41726c:	mov    rdi,QWORD PTR [rsp]
  417270:	mov    rsi,rbx
  417273:	mov    rdx,r14
  417276:	call   403430 <memcmp@plt>
  41727b:	test   eax,eax
  41727d:	jne    417296 <isspace@plt+0x13986>
  41727f:	mov    rdi,r13
  417282:	mov    rsi,rbp
  417285:	call   4137b0 <isspace@plt+0xfea0>
  41728a:	mov    r12,rax
  41728d:	cmp    rbp,rax
  417290:	jne    417210 <isspace@plt+0x13900>
  417296:	mov    rdi,QWORD PTR [rsp]
  41729a:	call   4030d0 <free@plt>
  41729f:	mov    rdi,QWORD PTR [rsp+0x10]
  4172a4:	call   4030d0 <free@plt>
  4172a9:	mov    rdi,QWORD PTR [rsp+0x8]
  4172ae:	mov    rsi,rbp
  4172b1:	call   417690 <isspace@plt+0x13d80>
  4172b6:	jmp    4172d1 <isspace@plt+0x139c1>
  4172b8:	mov    rdi,QWORD PTR [rsp]
  4172bc:	mov    rbx,rax
  4172bf:	call   4030d0 <free@plt>
  4172c4:	mov    rdi,rbx
  4172c7:	call   4030d0 <free@plt>
  4172cc:	call   4174c0 <isspace@plt+0x13bb0>
  4172d1:	mov    rcx,QWORD PTR fs:0x28
  4172da:	cmp    rcx,QWORD PTR [rsp+0x20]
  4172df:	jne    4172f0 <isspace@plt+0x139e0>
  4172e1:	add    rsp,0x28
  4172e5:	pop    rbx
  4172e6:	pop    r12
  4172e8:	pop    r13
  4172ea:	pop    r14
  4172ec:	pop    r15
  4172ee:	pop    rbp
  4172ef:	ret    
  4172f0:	call   403280 <__stack_chk_fail@plt>
  4172f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4172ff:	nop
  417300:	push   r15
  417302:	push   r14
  417304:	push   r13
  417306:	push   r12
  417308:	push   rbx
  417309:	sub    rsp,0x10
  41730d:	mov    r13,rsi
  417310:	mov    r12,rdi
  417313:	mov    rax,QWORD PTR fs:0x28
  41731c:	mov    QWORD PTR [rsp+0x8],rax
  417321:	mov    rsi,QWORD PTR [rsi]
  417324:	mov    r15,QWORD PTR [r13+0x8]
  417328:	call   413560 <isspace@plt+0xfc50>
  41732d:	mov    r14,rax
  417330:	mov    rbx,QWORD PTR [r13+0x8]
  417334:	mov    rdi,r12
  417337:	mov    rsi,rbx
  41733a:	call   413560 <isspace@plt+0xfc50>
  41733f:	cmp    rbx,rax
  417342:	je     417353 <isspace@plt+0x13a43>
  417344:	mov    rsi,QWORD PTR [r13+0x8]
  417348:	mov    rdi,r12
  41734b:	call   4137b0 <isspace@plt+0xfea0>
  417350:	mov    r15,rax
  417353:	mov    rax,QWORD PTR fs:0x28
  41735c:	cmp    rax,QWORD PTR [rsp+0x8]
  417361:	jne    417377 <isspace@plt+0x13a67>
  417363:	mov    rax,r14
  417366:	mov    rdx,r15
  417369:	add    rsp,0x10
  41736d:	pop    rbx
  41736e:	pop    r12
  417370:	pop    r13
  417372:	pop    r14
  417374:	pop    r15
  417376:	ret    
  417377:	call   403280 <__stack_chk_fail@plt>
  41737c:	nop    DWORD PTR [rax+0x0]
  417380:	push   r15
  417382:	push   r14
  417384:	push   rbx
  417385:	sub    rsp,0x10
  417389:	mov    rbx,rsi
  41738c:	mov    r14,rdi
  41738f:	mov    rax,QWORD PTR fs:0x28
  417398:	mov    QWORD PTR [rsp+0x8],rax
  41739d:	mov    rdi,rsi
  4173a0:	call   417460 <isspace@plt+0x13b50>
  4173a5:	test   rax,rax
  4173a8:	je     4173d4 <isspace@plt+0x13ac4>
  4173aa:	mov    r15,QWORD PTR [rbx]
  4173ad:	mov    rdi,r14
  4173b0:	mov    rsi,r15
  4173b3:	call   413560 <isspace@plt+0xfc50>
  4173b8:	cmp    r15,rax
  4173bb:	jne    4173d4 <isspace@plt+0x13ac4>
  4173bd:	mov    rbx,QWORD PTR [rbx+0x8]
  4173c1:	mov    rdi,r14
  4173c4:	mov    rsi,rbx
  4173c7:	call   413560 <isspace@plt+0xfc50>
  4173cc:	cmp    rbx,rax
  4173cf:	sete   al
  4173d2:	jmp    4173d6 <isspace@plt+0x13ac6>
  4173d4:	xor    eax,eax
  4173d6:	mov    rcx,QWORD PTR fs:0x28
  4173df:	cmp    rcx,QWORD PTR [rsp+0x8]
  4173e4:	jne    4173f0 <isspace@plt+0x13ae0>
  4173e6:	add    rsp,0x10
  4173ea:	pop    rbx
  4173eb:	pop    r14
  4173ed:	pop    r15
  4173ef:	ret    
  4173f0:	call   403280 <__stack_chk_fail@plt>
  4173f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4173ff:	nop
  417400:	push   rax
  417401:	mov    rax,QWORD PTR fs:0x28
  41740a:	mov    QWORD PTR [rsp],rax
  41740e:	mov    rax,QWORD PTR [rdi]
  417411:	cmp    rax,0xffffffffffffffff
  417415:	je     41743b <isspace@plt+0x13b2b>
  417417:	mov    rdx,QWORD PTR [rdi+0x8]
  41741b:	cmp    rdx,0xffffffffffffffff
  41741f:	setne  cl
  417422:	cmp    rax,rdx
  417425:	setbe  al
  417428:	mov    rdx,QWORD PTR fs:0x28
  417431:	cmp    rdx,QWORD PTR [rsp]
  417435:	jne    41744e <isspace@plt+0x13b3e>
  417437:	and    al,cl
  417439:	pop    rcx
  41743a:	ret    
  41743b:	mov    rax,QWORD PTR fs:0x28
  417444:	cmp    rax,QWORD PTR [rsp]
  417448:	jne    41744e <isspace@plt+0x13b3e>
  41744a:	xor    eax,eax
  41744c:	pop    rcx
  41744d:	ret    
  41744e:	call   403280 <__stack_chk_fail@plt>
  417453:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41745d:	nop    DWORD PTR [rax]
  417460:	push   rax
  417461:	mov    rax,QWORD PTR fs:0x28
  41746a:	mov    QWORD PTR [rsp],rax
  41746e:	mov    rcx,QWORD PTR [rdi]
  417471:	cmp    rcx,0xffffffffffffffff
  417475:	je     4174a3 <isspace@plt+0x13b93>
  417477:	mov    rdx,QWORD PTR [rdi+0x8]
  41747b:	mov    rax,rdx
  41747e:	sub    rax,rcx
  417481:	xor    esi,esi
  417483:	cmp    rdx,0xffffffffffffffff
  417487:	cmove  rax,rsi
  41748b:	cmp    rdx,rcx
  41748e:	cmovb  rax,rsi
  417492:	mov    rcx,QWORD PTR fs:0x28
  41749b:	cmp    rcx,QWORD PTR [rsp]
  41749f:	jne    4174b6 <isspace@plt+0x13ba6>
  4174a1:	pop    rcx
  4174a2:	ret    
  4174a3:	mov    rax,QWORD PTR fs:0x28
  4174ac:	cmp    rax,QWORD PTR [rsp]
  4174b0:	jne    4174b6 <isspace@plt+0x13ba6>
  4174b2:	xor    eax,eax
  4174b4:	pop    rcx
  4174b5:	ret    
  4174b6:	call   403280 <__stack_chk_fail@plt>
  4174bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4174c0:	push   rax
  4174c1:	mov    rax,QWORD PTR fs:0x28
  4174ca:	mov    QWORD PTR [rsp],rax
  4174ce:	mov    rax,QWORD PTR fs:0x28
  4174d7:	cmp    rax,QWORD PTR [rsp]
  4174db:	jne    4174ed <isspace@plt+0x13bdd>
  4174dd:	mov    rax,0xffffffffffffffff
  4174e4:	mov    rdx,0xffffffffffffffff
  4174eb:	pop    rcx
  4174ec:	ret    
  4174ed:	call   403280 <__stack_chk_fail@plt>
  4174f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4174fc:	nop    DWORD PTR [rax+0x0]
  417500:	push   rax
  417501:	mov    rax,QWORD PTR fs:0x28
  41750a:	mov    QWORD PTR [rsp],rax
  41750e:	mov    rax,QWORD PTR [rdi]
  417511:	cmp    rax,0xffffffffffffffff
  417515:	je     41754e <isspace@plt+0x13c3e>
  417517:	mov    rdx,QWORD PTR [rdi+0x8]
  41751b:	cmp    rax,rdx
  41751e:	ja     41754e <isspace@plt+0x13c3e>
  417520:	cmp    rdx,0xffffffffffffffff
  417524:	je     41754e <isspace@plt+0x13c3e>
  417526:	mov    rcx,QWORD PTR [rsi]
  417529:	cmp    rcx,0xffffffffffffffff
  41752d:	je     417555 <isspace@plt+0x13c45>
  41752f:	mov    rsi,QWORD PTR [rsi+0x8]
  417533:	cmp    rcx,rsi
  417536:	ja     417555 <isspace@plt+0x13c45>
  417538:	cmp    rsi,0xffffffffffffffff
  41753c:	je     417555 <isspace@plt+0x13c45>
  41753e:	cmp    rax,rcx
  417541:	cmova  rax,rcx
  417545:	cmp    rdx,rsi
  417548:	cmovb  rdx,rsi
  41754c:	jmp    417555 <isspace@plt+0x13c45>
  41754e:	mov    rax,QWORD PTR [rsi]
  417551:	mov    rdx,QWORD PTR [rsi+0x8]
  417555:	mov    rcx,QWORD PTR fs:0x28
  41755e:	cmp    rcx,QWORD PTR [rsp]
  417562:	jne    417566 <isspace@plt+0x13c56>
  417564:	pop    rcx
  417565:	ret    
  417566:	call   403280 <__stack_chk_fail@plt>
  41756b:	nop    DWORD PTR [rax+rax*1+0x0]
  417570:	push   rax
  417571:	mov    rax,QWORD PTR fs:0x28
  41757a:	mov    QWORD PTR [rsp],rax
  41757e:	mov    rcx,QWORD PTR [rdi]
  417581:	mov    rax,0xffffffffffffffff
  417588:	cmp    rcx,0xffffffffffffffff
  41758c:	je     4175e7 <isspace@plt+0x13cd7>
  41758e:	mov    rdi,QWORD PTR [rdi+0x8]
  417592:	cmp    rcx,rdi
  417595:	ja     4175e7 <isspace@plt+0x13cd7>
  417597:	cmp    rdi,0xffffffffffffffff
  41759b:	je     4175e7 <isspace@plt+0x13cd7>
  41759d:	mov    r8,QWORD PTR [rsi]
  4175a0:	cmp    r8,0xffffffffffffffff
  4175a4:	je     4175e7 <isspace@plt+0x13cd7>
  4175a6:	cmp    r8,rdi
  4175a9:	jae    4175e7 <isspace@plt+0x13cd7>
  4175ab:	mov    rsi,QWORD PTR [rsi+0x8]
  4175af:	mov    rdx,0xffffffffffffffff
  4175b6:	cmp    rcx,rsi
  4175b9:	jae    4175ee <isspace@plt+0x13cde>
  4175bb:	cmp    r8,rsi
  4175be:	ja     4175ee <isspace@plt+0x13cde>
  4175c0:	cmp    rsi,0xffffffffffffffff
  4175c4:	je     4175ee <isspace@plt+0x13cde>
  4175c6:	cmp    rcx,r8
  4175c9:	cmovb  rcx,r8
  4175cd:	cmp    rdi,rsi
  4175d0:	cmova  rdi,rsi
  4175d4:	cmp    rcx,rdi
  4175d7:	mov    rax,rcx
  4175da:	cmova  rax,rdi
  4175de:	cmovae rdi,rcx
  4175e2:	mov    rdx,rdi
  4175e5:	jmp    4175ee <isspace@plt+0x13cde>
  4175e7:	mov    rdx,0xffffffffffffffff
  4175ee:	mov    rcx,QWORD PTR fs:0x28
  4175f7:	cmp    rcx,QWORD PTR [rsp]
  4175fb:	jne    4175ff <isspace@plt+0x13cef>
  4175fd:	pop    rcx
  4175fe:	ret    
  4175ff:	call   403280 <__stack_chk_fail@plt>
  417604:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41760e:	xchg   ax,ax
  417610:	push   rax
  417611:	mov    rax,QWORD PTR fs:0x28
  41761a:	mov    QWORD PTR [rsp],rax
  41761e:	mov    rcx,QWORD PTR [rdi]
  417621:	cmp    rcx,0xffffffffffffffff
  417625:	je     417676 <isspace@plt+0x13d66>
  417627:	mov    rdx,QWORD PTR [rdi+0x8]
  41762b:	cmp    rcx,rdx
  41762e:	ja     417676 <isspace@plt+0x13d66>
  417630:	cmp    rdx,0xffffffffffffffff
  417634:	je     417676 <isspace@plt+0x13d66>
  417636:	mov    rdi,QWORD PTR [rsi]
  417639:	cmp    rdi,0xffffffffffffffff
  41763d:	je     417676 <isspace@plt+0x13d66>
  41763f:	mov    rsi,QWORD PTR [rsi+0x8]
  417643:	cmp    rsi,0xffffffffffffffff
  417647:	setne  r8b
  41764b:	cmp    rdi,rsi
  41764e:	setbe  al
  417651:	cmp    rcx,rsi
  417654:	setb   cl
  417657:	cmp    rdi,rdx
  41765a:	setb   dl
  41765d:	mov    rsi,QWORD PTR fs:0x28
  417666:	cmp    rsi,QWORD PTR [rsp]
  41766a:	jne    417689 <isspace@plt+0x13d79>
  41766c:	and    r8b,cl
  41766f:	and    al,r8b
  417672:	and    al,dl
  417674:	pop    rcx
  417675:	ret    
  417676:	mov    rax,QWORD PTR fs:0x28
  41767f:	cmp    rax,QWORD PTR [rsp]
  417683:	jne    417689 <isspace@plt+0x13d79>
  417685:	xor    eax,eax
  417687:	pop    rcx
  417688:	ret    
  417689:	call   403280 <__stack_chk_fail@plt>
  41768e:	xchg   ax,ax
  417690:	push   rax
  417691:	mov    rax,QWORD PTR fs:0x28
  41769a:	mov    QWORD PTR [rsp],rax
  41769e:	cmp    rdi,rsi
  4176a1:	mov    rax,rdi
  4176a4:	cmova  rax,rsi
  4176a8:	cmovb  rdi,rsi
  4176ac:	mov    rcx,QWORD PTR fs:0x28
  4176b5:	cmp    rcx,QWORD PTR [rsp]
  4176b9:	jne    4176c0 <isspace@plt+0x13db0>
  4176bb:	mov    rdx,rdi
  4176be:	pop    rcx
  4176bf:	ret    
  4176c0:	call   403280 <__stack_chk_fail@plt>
  4176c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4176cf:	nop
  4176d0:	push   rax
  4176d1:	mov    rax,QWORD PTR fs:0x28
  4176da:	mov    QWORD PTR [rsp],rax
  4176de:	mov    rcx,QWORD PTR [rdi]
  4176e1:	cmp    rcx,0xffffffffffffffff
  4176e5:	je     417700 <isspace@plt+0x13df0>
  4176e7:	mov    rax,QWORD PTR [rdi+0x8]
  4176eb:	cmp    rcx,rax
  4176ee:	ja     417700 <isspace@plt+0x13df0>
  4176f0:	cmp    rax,0xffffffffffffffff
  4176f4:	je     417700 <isspace@plt+0x13df0>
  4176f6:	mov    rdx,QWORD PTR [rsi]
  4176f9:	cmp    rcx,rdx
  4176fc:	je     41771f <isspace@plt+0x13e0f>
  4176fe:	jmp    41772c <isspace@plt+0x13e1c>
  417700:	mov    rdx,QWORD PTR [rsi]
  417703:	mov    al,0x1
  417705:	cmp    rdx,0xffffffffffffffff
  417709:	je     41772e <isspace@plt+0x13e1e>
  41770b:	mov    r8,QWORD PTR [rsi+0x8]
  41770f:	cmp    rdx,r8
  417712:	ja     41772e <isspace@plt+0x13e1e>
  417714:	cmp    r8,0xffffffffffffffff
  417718:	je     41772e <isspace@plt+0x13e1e>
  41771a:	cmp    rcx,rdx
  41771d:	jne    41772c <isspace@plt+0x13e1c>
  41771f:	mov    rax,QWORD PTR [rdi+0x8]
  417723:	cmp    rax,QWORD PTR [rsi+0x8]
  417727:	sete   al
  41772a:	jmp    41772e <isspace@plt+0x13e1e>
  41772c:	xor    eax,eax
  41772e:	mov    rcx,QWORD PTR fs:0x28
  417737:	cmp    rcx,QWORD PTR [rsp]
  41773b:	jne    41773f <isspace@plt+0x13e2f>
  41773d:	pop    rcx
  41773e:	ret    
  41773f:	call   403280 <__stack_chk_fail@plt>
  417744:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41774e:	xchg   ax,ax
  417750:	push   rax
  417751:	mov    rax,QWORD PTR fs:0x28
  41775a:	mov    QWORD PTR [rsp],rax
  41775e:	mov    rax,QWORD PTR [rdi]
  417761:	cmp    rax,0xffffffffffffffff
  417765:	je     41779d <isspace@plt+0x13e8d>
  417767:	mov    rdx,QWORD PTR [rdi+0x8]
  41776b:	cmp    rdx,0xffffffffffffffff
  41776f:	setne  cl
  417772:	cmp    rax,rdx
  417775:	setbe  dil
  417779:	cmp    rax,rsi
  41777c:	setbe  al
  41777f:	cmp    rdx,rsi
  417782:	setae  dl
  417785:	mov    rsi,QWORD PTR fs:0x28
  41778e:	cmp    rsi,QWORD PTR [rsp]
  417792:	jne    4177b0 <isspace@plt+0x13ea0>
  417794:	and    cl,dil
  417797:	and    al,dl
  417799:	and    al,cl
  41779b:	pop    rcx
  41779c:	ret    
  41779d:	mov    rax,QWORD PTR fs:0x28
  4177a6:	cmp    rax,QWORD PTR [rsp]
  4177aa:	jne    4177b0 <isspace@plt+0x13ea0>
  4177ac:	xor    eax,eax
  4177ae:	pop    rcx
  4177af:	ret    
  4177b0:	call   403280 <__stack_chk_fail@plt>
  4177b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4177bf:	nop
  4177c0:	push   rbp
  4177c1:	push   r15
  4177c3:	push   r14
  4177c5:	push   r13
  4177c7:	push   r12
  4177c9:	push   rbx
  4177ca:	sub    rsp,0x18
  4177ce:	mov    rax,QWORD PTR fs:0x28
  4177d7:	mov    QWORD PTR [rsp+0x10],rax
  4177dc:	mov    QWORD PTR [rsp+0x8],0x0
  4177e5:	test   rsi,rsi
  4177e8:	je     4178d1 <isspace@plt+0x13fc1>
  4177ee:	mov    rbx,rsi
  4177f1:	mov    rbp,rdi
  4177f4:	xor    r14d,r14d
  4177f7:	lea    r15,[rsp+0x4]
  4177fc:	lea    r12,[rsp+0x8]
  417801:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41780b:	nop    DWORD PTR [rax+rax*1+0x0]
  417810:	mov    rdi,r15
  417813:	mov    rsi,rbp
  417816:	mov    rdx,rbx
  417819:	mov    rcx,r12
  41781c:	call   4032b0 <mbrtowc@plt>
  417821:	mov    r13,rax
  417824:	cmp    rax,0xffffffffffffffff
  417828:	je     417860 <isspace@plt+0x13f50>
  41782a:	test   r13,r13
  41782d:	je     417840 <isspace@plt+0x13f30>
  41782f:	cmp    r13,0xfffffffffffffffe
  417833:	jne    4178b0 <isspace@plt+0x13fa0>
  417835:	jmp    4178d4 <isspace@plt+0x13fc4>
  41783a:	nop    WORD PTR [rax+rax*1+0x0]
  417840:	add    r14d,0x1
  417844:	add    rbp,0x1
  417848:	add    rbx,0xffffffffffffffff
  41784c:	test   rbx,rbx
  41784f:	jne    417810 <isspace@plt+0x13f00>
  417851:	jmp    4178d4 <isspace@plt+0x13fc4>
  417856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417860:	call   403130 <__errno_location@plt>
  417865:	cmp    DWORD PTR [rax],0x54
  417868:	jne    4178b0 <isspace@plt+0x13fa0>
  41786a:	mov    QWORD PTR [rsp+0x8],0x0
  417873:	add    r14d,0x1
  417877:	mov    al,BYTE PTR [rbp+0x0]
  41787a:	jmp    41788c <isspace@plt+0x13f7c>
  41787c:	nop    DWORD PTR [rax+0x0]
  417880:	add    rbx,0xffffffffffffffff
  417884:	movzx  eax,BYTE PTR [rbp+0x1]
  417888:	add    rbp,0x1
  41788c:	and    al,0xc0
  41788e:	cmp    al,0x80
  417890:	je     417880 <isspace@plt+0x13f70>
  417892:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41789c:	nop    DWORD PTR [rax+0x0]
  4178a0:	test   rbx,rbx
  4178a3:	jne    417810 <isspace@plt+0x13f00>
  4178a9:	jmp    4178d4 <isspace@plt+0x13fc4>
  4178ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4178b0:	mov    edi,DWORD PTR [rsp+0x4]
  4178b4:	call   4035a0 <wcwidth@plt>
  4178b9:	cmp    eax,0x1
  4178bc:	sbb    r14d,0xffffffff
  4178c0:	add    rbp,r13
  4178c3:	sub    rbx,r13
  4178c6:	test   rbx,rbx
  4178c9:	jne    417810 <isspace@plt+0x13f00>
  4178cf:	jmp    4178d4 <isspace@plt+0x13fc4>
  4178d1:	xor    r14d,r14d
  4178d4:	mov    rax,QWORD PTR fs:0x28
  4178dd:	cmp    rax,QWORD PTR [rsp+0x10]
  4178e2:	jne    4178f6 <isspace@plt+0x13fe6>
  4178e4:	mov    eax,r14d
  4178e7:	add    rsp,0x18
  4178eb:	pop    rbx
  4178ec:	pop    r12
  4178ee:	pop    r13
  4178f0:	pop    r14
  4178f2:	pop    r15
  4178f4:	pop    rbp
  4178f5:	ret    
  4178f6:	call   403280 <__stack_chk_fail@plt>
  4178fb:	nop    DWORD PTR [rax+rax*1+0x0]
  417900:	push   rbp
  417901:	push   r15
  417903:	push   r14
  417905:	push   r13
  417907:	push   r12
  417909:	push   rbx
  41790a:	sub    rsp,0x18
  41790e:	mov    rax,QWORD PTR fs:0x28
  417917:	mov    QWORD PTR [rsp+0x10],rax
  41791c:	mov    QWORD PTR [rsp+0x8],0x0
  417925:	test   rsi,rsi
  417928:	je     4179de <isspace@plt+0x140ce>
  41792e:	mov    r13,rsi
  417931:	mov    rbp,rdi
  417934:	xor    r14d,r14d
  417937:	lea    r15,[rsp+0x4]
  41793c:	lea    r12,[rsp+0x8]
  417941:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41794b:	nop    DWORD PTR [rax+rax*1+0x0]
  417950:	mov    rdi,r15
  417953:	mov    rsi,rbp
  417956:	mov    rdx,r13
  417959:	mov    rcx,r12
  41795c:	call   4032b0 <mbrtowc@plt>
  417961:	cmp    rax,0xfffffffffffffffe
  417965:	je     4179b4 <isspace@plt+0x140a4>
  417967:	mov    rbx,rax
  41796a:	test   rax,rax
  41796d:	je     4179b0 <isspace@plt+0x140a0>
  41796f:	cmp    rbx,0xffffffffffffffff
  417973:	jne    417990 <isspace@plt+0x14080>
  417975:	call   403130 <__errno_location@plt>
  41797a:	cmp    DWORD PTR [rax],0x54
  41797d:	jne    417990 <isspace@plt+0x14080>
  41797f:	mov    QWORD PTR [rsp+0x8],0x0
  417988:	jmp    417999 <isspace@plt+0x14089>
  41798a:	nop    WORD PTR [rax+rax*1+0x0]
  417990:	mov    edi,DWORD PTR [rsp+0x4]
  417994:	cmp    edi,0x9
  417997:	jne    4179bb <isspace@plt+0x140ab>
  417999:	add    r14d,0x1
  41799d:	mov    ebx,0x1
  4179a2:	jmp    4179d0 <isspace@plt+0x140c0>
  4179a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4179ae:	xchg   ax,ax
  4179b0:	add    r14d,0x2
  4179b4:	mov    ebx,0x1
  4179b9:	jmp    4179d0 <isspace@plt+0x140c0>
  4179bb:	call   4035a0 <wcwidth@plt>
  4179c0:	cmp    eax,0xffffffff
  4179c3:	mov    ecx,0x2
  4179c8:	cmove  eax,ecx
  4179cb:	add    r14d,eax
  4179ce:	xchg   ax,ax
  4179d0:	add    rbp,rbx
  4179d3:	sub    r13,rbx
  4179d6:	jne    417950 <isspace@plt+0x14040>
  4179dc:	jmp    4179e1 <isspace@plt+0x140d1>
  4179de:	xor    r14d,r14d
  4179e1:	mov    rax,QWORD PTR fs:0x28
  4179ea:	cmp    rax,QWORD PTR [rsp+0x10]
  4179ef:	jne    417a03 <isspace@plt+0x140f3>
  4179f1:	mov    eax,r14d
  4179f4:	add    rsp,0x18
  4179f8:	pop    rbx
  4179f9:	pop    r12
  4179fb:	pop    r13
  4179fd:	pop    r14
  4179ff:	pop    r15
  417a01:	pop    rbp
  417a02:	ret    
  417a03:	call   403280 <__stack_chk_fail@plt>
  417a08:	nop    DWORD PTR [rax+rax*1+0x0]
  417a10:	push   rax
  417a11:	mov    rax,QWORD PTR fs:0x28
  417a1a:	mov    QWORD PTR [rsp],rax
  417a1e:	movzx  eax,di
  417a21:	cmp    eax,0xffff
  417a26:	sete   al
  417a29:	mov    rcx,QWORD PTR fs:0x28
  417a32:	cmp    rcx,QWORD PTR [rsp]
  417a36:	jne    417a3a <isspace@plt+0x1412a>
  417a38:	pop    rcx
  417a39:	ret    
  417a3a:	call   403280 <__stack_chk_fail@plt>
  417a3f:	nop
  417a40:	push   rbx
  417a41:	sub    rsp,0x10
  417a45:	mov    rax,QWORD PTR fs:0x28
  417a4e:	mov    QWORD PTR [rsp+0x8],rax
  417a53:	mov    edi,0x1
  417a58:	mov    esi,0x4e0
  417a5d:	call   403470 <calloc@plt>
  417a62:	test   rax,rax
  417a65:	je     417bb9 <isspace@plt+0x142a9>
  417a6b:	mov    rbx,rax
  417a6e:	mov    edi,0x1
  417a73:	mov    esi,0x4f8
  417a78:	call   403470 <calloc@plt>
  417a7d:	test   rax,rax
  417a80:	je     417bb1 <isspace@plt+0x142a1>
  417a86:	mov    QWORD PTR [rax+0x4d8],0x4e0
  417a91:	mov    QWORD PTR [rax+0x4e0],rbx
  417a98:	lea    rcx,[rip+0x141]        # 417be0 <isspace@plt+0x142d0>
  417a9f:	mov    QWORD PTR [rax],rcx
  417aa2:	lea    rcx,[rip+0x4d7]        # 417f80 <isspace@plt+0x14670>
  417aa9:	vmovq  xmm0,rcx
  417aae:	vmovq  xmm1,QWORD PTR [rip+0x2b52a]        # 442fe0 <isspace@plt+0x3f6d0>
  417ab6:	vpunpcklqdq xmm0,xmm1,xmm0
  417aba:	vmovdqu XMMWORD PTR [rax+0x8],xmm0
  417abf:	lea    rcx,[rip+0x5ea]        # 4180b0 <isspace@plt+0x147a0>
  417ac6:	mov    QWORD PTR [rax+0x18],rcx
  417aca:	lea    rcx,[rip+0x96f]        # 418440 <isspace@plt+0x14b30>
  417ad1:	vmovq  xmm0,rcx
  417ad6:	lea    rcx,[rip+0x8b3]        # 418390 <isspace@plt+0x14a80>
  417add:	vmovq  xmm1,rcx
  417ae2:	vpunpcklqdq xmm0,xmm1,xmm0
  417ae6:	vmovdqu XMMWORD PTR [rax+0x20],xmm0
  417aeb:	lea    rcx,[rip+0x9be]        # 4184b0 <isspace@plt+0x14ba0>
  417af2:	mov    QWORD PTR [rax+0x30],rcx
  417af6:	lea    rcx,[rip+0xb63]        # 418660 <isspace@plt+0x14d50>
  417afd:	vmovq  xmm0,rcx
  417b02:	lea    rcx,[rip+0xad7]        # 4185e0 <isspace@plt+0x14cd0>
  417b09:	vmovq  xmm1,rcx
  417b0e:	vpunpcklqdq xmm0,xmm1,xmm0
  417b12:	vmovdqu XMMWORD PTR [rax+0x38],xmm0
  417b17:	lea    rcx,[rip+0xc02]        # 418720 <isspace@plt+0x14e10>
  417b1e:	mov    QWORD PTR [rax+0x48],rcx
  417b22:	lea    rcx,[rip+0xc37]        # 418760 <isspace@plt+0x14e50>
  417b29:	mov    QWORD PTR [rax+0x50],rcx
  417b2d:	lea    rcx,[rip+0x189c]        # 4193d0 <isspace@plt+0x15ac0>
  417b34:	vmovq  xmm0,rcx
  417b39:	lea    rcx,[rip+0xff0]        # 418b30 <isspace@plt+0x15220>
  417b40:	vmovq  xmm1,rcx
  417b45:	vpunpcklqdq xmm0,xmm1,xmm0
  417b49:	vmovdqu XMMWORD PTR [rax+0x58],xmm0
  417b4e:	lea    rcx,[rip+0x18fb]        # 419450 <isspace@plt+0x15b40>
  417b55:	mov    QWORD PTR [rax+0x68],rcx
  417b59:	lea    rcx,[rip+0x1960]        # 4194c0 <isspace@plt+0x15bb0>
  417b60:	mov    QWORD PTR [rax+0x70],rcx
  417b64:	lea    rcx,[rip+0x1985]        # 4194f0 <isspace@plt+0x15be0>
  417b6b:	mov    QWORD PTR [rax+0x78],rcx
  417b6f:	lea    rcx,[rip+0x1b3a]        # 4196b0 <isspace@plt+0x15da0>
  417b76:	vmovq  xmm0,rcx
  417b7b:	lea    rcx,[rip+0x1ade]        # 419660 <isspace@plt+0x15d50>
  417b82:	vmovq  xmm1,rcx
  417b87:	vpunpcklqdq xmm0,xmm1,xmm0
  417b8b:	vmovdqu XMMWORD PTR [rax+0x80],xmm0
  417b93:	lea    rcx,[rip+0x1b66]        # 419700 <isspace@plt+0x15df0>
  417b9a:	mov    QWORD PTR [rax+0x90],rcx
  417ba1:	lea    rcx,[rip+0x1b88]        # 419730 <isspace@plt+0x15e20>
  417ba8:	mov    QWORD PTR [rax+0x98],rcx
  417baf:	jmp    417bbb <isspace@plt+0x142ab>
  417bb1:	mov    rdi,rbx
  417bb4:	call   4030d0 <free@plt>
  417bb9:	xor    eax,eax
  417bbb:	mov    rcx,QWORD PTR fs:0x28
  417bc4:	cmp    rcx,QWORD PTR [rsp+0x8]
  417bc9:	jne    417bd1 <isspace@plt+0x142c1>
  417bcb:	add    rsp,0x10
  417bcf:	pop    rbx
  417bd0:	ret    
  417bd1:	call   403280 <__stack_chk_fail@plt>
  417bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417be0:	push   rbp
  417be1:	push   r15
  417be3:	push   r14
  417be5:	push   r13
  417be7:	push   r12
  417be9:	push   rbx
  417bea:	push   rax
  417beb:	mov    r12,rdi
  417bee:	mov    rax,QWORD PTR fs:0x28
  417bf7:	mov    QWORD PTR [rsp],rax
  417bfb:	mov    QWORD PTR [rdi+0xa0],rsi
  417c02:	lea    r14,[rip+0x19e7a]        # 431a83 <isspace@plt+0x2e173>
  417c09:	xor    edi,edi
  417c0b:	mov    rsi,r14
  417c0e:	call   4036e0 <setlocale@plt>
  417c13:	lea    rdi,[rip+0x19d86]        # 4319a0 <isspace@plt+0x2e090>
  417c1a:	call   403060 <getenv@plt>
  417c1f:	mov    rbx,rax
  417c22:	test   rax,rax
  417c25:	jne    417c42 <isspace@plt+0x14332>
  417c27:	lea    rdi,[rip+0x19d72]        # 4319a0 <isspace@plt+0x2e090>
  417c2e:	lea    rbx,[rip+0x19d70]        # 4319a5 <isspace@plt+0x2e095>
  417c35:	mov    edx,0x1
  417c3a:	mov    rsi,rbx
  417c3d:	call   4031e0 <setenv@plt>
  417c42:	call   403130 <__errno_location@plt>
  417c47:	mov    r15,rax
  417c4a:	mov    DWORD PTR [rax],0x0
  417c50:	xor    edi,edi
  417c52:	mov    esi,0x18
  417c57:	call   403760 <termkey_new@plt>
  417c5c:	test   rax,rax
  417c5f:	je     417c7e <isspace@plt+0x1436e>
  417c61:	mov    rbp,rax
  417c64:	mov    esi,0x2
  417c69:	mov    rdi,rax
  417c6c:	call   403390 <termkey_set_canonflags@plt>
  417c71:	mov    QWORD PTR [r12+0x4c8],rbp
  417c79:	jmp    417d20 <isspace@plt+0x14410>
  417c7e:	mov    QWORD PTR [r12+0x4c8],0x0
  417c8a:	mov    edi,DWORD PTR [r15]
  417c8d:	cmp    edi,0x9
  417c90:	jne    417e12 <isspace@plt+0x14502>
  417c96:	mov    DWORD PTR [r15],0x0
  417c9d:	lea    rdi,[rip+0x1550f]        # 42d1b3 <isspace@plt+0x298a3>
  417ca4:	mov    esi,0x2
  417ca9:	xor    eax,eax
  417cab:	call   4037a0 <open@plt>
  417cb0:	cmp    eax,0xffffffff
  417cb3:	je     417cea <isspace@plt+0x143da>
  417cb5:	mov    ebp,eax
  417cb7:	test   eax,eax
  417cb9:	je     417cc9 <isspace@plt+0x143b9>
  417cbb:	xor    esi,esi
  417cbd:	mov    edi,ebp
  417cbf:	call   4032c0 <dup2@plt>
  417cc4:	cmp    eax,0xffffffff
  417cc7:	je     417ce3 <isspace@plt+0x143d3>
  417cc9:	mov    edi,ebp
  417ccb:	call   4033c0 <close@plt>
  417cd0:	xor    edi,edi
  417cd2:	mov    esi,0x18
  417cd7:	call   403760 <termkey_new@plt>
  417cdc:	test   rax,rax
  417cdf:	jne    417c61 <isspace@plt+0x14351>
  417ce1:	jmp    417cea <isspace@plt+0x143da>
  417ce3:	mov    edi,ebp
  417ce5:	call   4033c0 <close@plt>
  417cea:	mov    QWORD PTR [r12+0x4c8],0x0
  417cf6:	mov    edi,DWORD PTR [r15]
  417cf9:	cmp    edi,0x6
  417cfc:	jne    417e12 <isspace@plt+0x14502>
  417d02:	mov    esi,0x18
  417d07:	mov    rdi,rbx
  417d0a:	call   403220 <termkey_new_abstract@plt>
  417d0f:	mov    QWORD PTR [r12+0x4c8],rax
  417d17:	test   rax,rax
  417d1a:	je     417e0f <isspace@plt+0x144ff>
  417d20:	mov    r13,QWORD PTR [rip+0x2b2d1]        # 442ff8 <isspace@plt+0x3f6e8>
  417d27:	mov    rsi,QWORD PTR [r13+0x0]
  417d2b:	mov    rbp,QWORD PTR [rip+0x2b25e]        # 442f90 <isspace@plt+0x3f680>
  417d32:	mov    rdx,QWORD PTR [rbp+0x0]
  417d36:	mov    rdi,rbx
  417d39:	call   403210 <newterm@plt>
  417d3e:	test   rax,rax
  417d41:	jne    417da1 <isspace@plt+0x14491>
  417d43:	lea    rdi,[r12+0xb8]
  417d4b:	lea    r8,[rip+0x19c7f]        # 4319d1 <isspace@plt+0x2e0c1>
  417d52:	mov    esi,0x400
  417d57:	mov    edx,0x1
  417d5c:	mov    ecx,0x400
  417d61:	xor    eax,eax
  417d63:	mov    r9,rbx
  417d66:	call   4030c0 <__snprintf_chk@plt>
  417d6b:	lea    rsi,[rip+0x19c7f]        # 4319f1 <isspace@plt+0x2e0e1>
  417d72:	mov    rdi,rbx
  417d75:	call   4038e0 <strstr@plt>
  417d7a:	test   rax,rax
  417d7d:	lea    rax,[rip+0x19c21]        # 4319a5 <isspace@plt+0x2e095>
  417d84:	lea    rdi,[rip+0x19c61]        # 4319ec <isspace@plt+0x2e0dc>
  417d8b:	cmove  rdi,rax
  417d8f:	mov    rsi,QWORD PTR [r13+0x0]
  417d93:	mov    rdx,QWORD PTR [rbp+0x0]
  417d97:	call   403210 <newterm@plt>
  417d9c:	test   rax,rax
  417d9f:	je     417e0f <isspace@plt+0x144ff>
  417da1:	call   403030 <start_color@plt>
  417da6:	call   403040 <use_default_colors@plt>
  417dab:	call   4035c0 <cbreak@plt>
  417db0:	call   403070 <noecho@plt>
  417db5:	call   4037f0 <nonl@plt>
  417dba:	mov    rbx,QWORD PTR [rip+0x2b1ef]        # 442fb0 <isspace@plt+0x3f6a0>
  417dc1:	mov    rdi,QWORD PTR [rbx]
  417dc4:	mov    esi,0x1
  417dc9:	call   4033e0 <keypad@plt>
  417dce:	mov    rdi,QWORD PTR [rbx]
  417dd1:	mov    esi,0x1
  417dd6:	call   403580 <meta@plt>
  417ddb:	xor    edi,edi
  417ddd:	call   403180 <curs_set@plt>
  417de2:	mov    rdi,r12
  417de5:	call   417f80 <isspace@plt+0x14670>
  417dea:	mov    rax,QWORD PTR fs:0x28
  417df3:	cmp    rax,QWORD PTR [rsp]
  417df7:	jne    417e0a <isspace@plt+0x144fa>
  417df9:	mov    al,0x1
  417dfb:	add    rsp,0x8
  417dff:	pop    rbx
  417e00:	pop    r12
  417e02:	pop    r13
  417e04:	pop    r14
  417e06:	pop    r15
  417e08:	pop    rbp
  417e09:	ret    
  417e0a:	call   403280 <__stack_chk_fail@plt>
  417e0f:	mov    edi,DWORD PTR [r15]
  417e12:	test   edi,edi
  417e14:	je     417e1e <isspace@plt+0x1450e>
  417e16:	call   403880 <strerror@plt>
  417e1b:	mov    r14,rax
  417e1e:	lea    rsi,[rip+0x19b86]        # 4319ab <isspace@plt+0x2e09b>
  417e25:	xor    eax,eax
  417e27:	mov    rdi,r12
  417e2a:	mov    rdx,r14
  417e2d:	call   419760 <isspace@plt+0x15e50>
  417e32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417e3c:	nop    DWORD PTR [rax+0x0]
  417e40:	push   r14
  417e42:	push   rbx
  417e43:	push   rax
  417e44:	mov    rax,QWORD PTR fs:0x28
  417e4d:	mov    QWORD PTR [rsp],rax
  417e51:	test   rdi,rdi
  417e54:	je     417f2f <isspace@plt+0x1461f>
  417e5a:	mov    rbx,rdi
  417e5d:	jmp    417e82 <isspace@plt+0x14572>
  417e5f:	nop
  417e60:	vxorps xmm0,xmm0,xmm0
  417e64:	vmovups XMMWORD PTR [rcx],xmm0
  417e68:	movzx  ecx,BYTE PTR [rdi+0x48]
  417e6c:	mov    rdx,0xfffffffffffffffe
  417e73:	rol    rdx,cl
  417e76:	and    QWORD PTR [rax+0x4d0],rdx
  417e7d:	call   4030d0 <free@plt>
  417e82:	mov    rdi,QWORD PTR [rbx+0xa8]
  417e89:	test   rdi,rdi
  417e8c:	je     417ef0 <isspace@plt+0x145e0>
  417e8e:	mov    rax,QWORD PTR [rdi+0x38]
  417e92:	mov    rdx,QWORD PTR [rdi+0x68]
  417e96:	lea    rcx,[rdi+0x60]
  417e9a:	test   rdx,rdx
  417e9d:	je     417ea6 <isspace@plt+0x14596>
  417e9f:	mov    rsi,QWORD PTR [rcx]
  417ea2:	mov    QWORD PTR [rdx+0x60],rsi
  417ea6:	mov    rsi,QWORD PTR [rcx]
  417ea9:	test   rsi,rsi
  417eac:	je     417eb2 <isspace@plt+0x145a2>
  417eae:	mov    QWORD PTR [rsi+0x68],rdx
  417eb2:	cmp    QWORD PTR [rax+0xa8],rdi
  417eb9:	je     417ed0 <isspace@plt+0x145c0>
  417ebb:	cmp    QWORD PTR [rax+0xb0],rdi
  417ec2:	jne    417e60 <isspace@plt+0x14550>
  417ec4:	jmp    417ee0 <isspace@plt+0x145d0>
  417ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417ed0:	mov    QWORD PTR [rax+0xa8],rsi
  417ed7:	cmp    QWORD PTR [rax+0xb0],rdi
  417ede:	jne    417e60 <isspace@plt+0x14550>
  417ee0:	mov    QWORD PTR [rax+0xb0],0x0
  417eeb:	jmp    417e60 <isspace@plt+0x14550>
  417ef0:	cmp    DWORD PTR [rip+0x2b1d9],0x1        # 4430d0 <isspace@plt+0x3f7c0>
  417ef7:	je     417f46 <isspace@plt+0x14636>
  417ef9:	call   4038b0 <endwin@plt>
  417efe:	mov    rdi,QWORD PTR [rbx+0x4c8]
  417f05:	test   rdi,rdi
  417f08:	je     417f0f <isspace@plt+0x145ff>
  417f0a:	call   4036f0 <termkey_destroy@plt>
  417f0f:	mov    rdi,QWORD PTR [rbx+0x4f0]
  417f16:	call   4030d0 <free@plt>
  417f1b:	mov    rdi,QWORD PTR [rbx+0x4e0]
  417f22:	call   4030d0 <free@plt>
  417f27:	mov    rdi,rbx
  417f2a:	call   4030d0 <free@plt>
  417f2f:	mov    rax,QWORD PTR fs:0x28
  417f38:	cmp    rax,QWORD PTR [rsp]
  417f3c:	jne    417f70 <isspace@plt+0x14660>
  417f3e:	add    rsp,0x8
  417f42:	pop    rbx
  417f43:	pop    r14
  417f45:	ret    
  417f46:	mov    r14,QWORD PTR [rip+0x2b0ab]        # 442ff8 <isspace@plt+0x3f6e8>
  417f4d:	mov    rcx,QWORD PTR [r14]
  417f50:	lea    rdi,[rip+0x19b25]        # 431a7c <isspace@plt+0x2e16c>
  417f57:	mov    esi,0x7
  417f5c:	mov    edx,0x1
  417f61:	call   403810 <fwrite@plt>
  417f66:	mov    rdi,QWORD PTR [r14]
  417f69:	call   4035f0 <fflush@plt>
  417f6e:	jmp    417ef9 <isspace@plt+0x145e9>
  417f70:	call   403280 <__stack_chk_fail@plt>
  417f75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417f7f:	nop
  417f80:	push   rbp
  417f81:	push   r15
  417f83:	push   r14
  417f85:	push   r12
  417f87:	push   rbx
  417f88:	sub    rsp,0x10
  417f8c:	mov    r14,rdi
  417f8f:	mov    rax,QWORD PTR fs:0x28
  417f98:	mov    QWORD PTR [rsp+0x8],rax
  417f9d:	mov    rdx,rsp
  417fa0:	mov    edi,0x2
  417fa5:	mov    esi,0x5413
  417faa:	xor    eax,eax
  417fac:	call   4033a0 <ioctl@plt>
  417fb1:	cmp    eax,0xffffffff
  417fb4:	je     417fdf <isspace@plt+0x146cf>
  417fb6:	movzx  ecx,WORD PTR [rsp+0x2]
  417fbb:	mov    eax,DWORD PTR [rsp]
  417fbe:	test   ax,ax
  417fc1:	mov    edx,0x18
  417fc6:	cmovne edx,eax
  417fc9:	movzx  eax,dx
  417fcc:	test   ecx,ecx
  417fce:	je     417fe4 <isspace@plt+0x146d4>
  417fd0:	mov    ebp,0x400
  417fd5:	cmp    ecx,0x3ff
  417fdb:	jbe    417fe9 <isspace@plt+0x146d9>
  417fdd:	jmp    417feb <isspace@plt+0x146db>
  417fdf:	mov    eax,0x18
  417fe4:	mov    ecx,0x50
  417fe9:	mov    ebp,ecx
  417feb:	cmp    eax,0x400
  417ff0:	mov    ebx,0x400
  417ff5:	cmovb  ebx,eax
  417ff8:	mov    edi,ebx
  417ffa:	mov    esi,ebp
  417ffc:	call   403440 <resizeterm@plt>
  418001:	test   eax,eax
  418003:	jne    418081 <isspace@plt+0x14771>
  418005:	mov    rax,QWORD PTR [rip+0x2afa4]        # 442fb0 <isspace@plt+0x3f6a0>
  41800c:	mov    rdi,QWORD PTR [rax]
  41800f:	mov    esi,ebx
  418011:	mov    edx,ebp
  418013:	call   4037d0 <wresize@plt>
  418018:	test   eax,eax
  41801a:	jne    418081 <isspace@plt+0x14771>
  41801c:	mov    eax,ebx
  41801e:	imul   eax,ebp
  418021:	cdqe   
  418023:	shl    rax,0x4
  418027:	lea    r15,[rax+rax*2]
  41802b:	cmp    r15,QWORD PTR [r14+0x4e8]
  418032:	jbe    418073 <isspace@plt+0x14763>
  418034:	mov    rdi,QWORD PTR [r14+0x4f0]
  41803b:	mov    rsi,r15
  41803e:	call   4036b0 <realloc@plt>
  418043:	test   rax,rax
  418046:	je     418081 <isspace@plt+0x14771>
  418048:	mov    r12,rax
  41804b:	mov    rax,QWORD PTR [r14+0x4e8]
  418052:	mov    rdi,r12
  418055:	add    rdi,rax
  418058:	mov    rdx,r15
  41805b:	sub    rdx,rax
  41805e:	xor    esi,esi
  418060:	call   403360 <memset@plt>
  418065:	mov    QWORD PTR [r14+0x4e8],r15
  41806c:	mov    QWORD PTR [r14+0x4f0],r12
  418073:	mov    DWORD PTR [r14+0x4b8],ebp
  41807a:	mov    DWORD PTR [r14+0x4bc],ebx
  418081:	mov    rax,QWORD PTR fs:0x28
  41808a:	cmp    rax,QWORD PTR [rsp+0x8]
  41808f:	jne    41809e <isspace@plt+0x1478e>
  418091:	add    rsp,0x10
  418095:	pop    rbx
  418096:	pop    r12
  418098:	pop    r14
  41809a:	pop    r15
  41809c:	pop    rbp
  41809d:	ret    
  41809e:	call   403280 <__stack_chk_fail@plt>
  4180a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4180ad:	nop    DWORD PTR [rax]
  4180b0:	push   rbp
  4180b1:	push   r15
  4180b3:	push   r14
  4180b5:	push   r13
  4180b7:	push   r12
  4180b9:	push   rbx
  4180ba:	push   rax
  4180bb:	mov    rax,QWORD PTR fs:0x28
  4180c4:	mov    QWORD PTR [rsp],rax
  4180c8:	mov    rax,QWORD PTR [rdi+0x4d0]
  4180cf:	lea    rcx,[rax+0x1]
  4180d3:	andn   r13,rax,rcx
  4180d8:	mov    rax,r13
  4180db:	shr    rax,1
  4180de:	lzcnt  rax,rax
  4180e3:	mov    ebp,0x40
  4180e8:	sub    rbp,rax
  4180eb:	cmp    rbp,0x3f
  4180ef:	ja     4182f3 <isspace@plt+0x149e3>
  4180f5:	mov    r14d,edx
  4180f8:	mov    r15,rsi
  4180fb:	mov    r12,rdi
  4180fe:	imul   rbx,rbp,0x4e0
  418105:	add    rbx,0x4e0
  41810c:	cmp    rbx,QWORD PTR [rdi+0x4d8]
  418113:	jbe    41813e <isspace@plt+0x1482e>
  418115:	mov    rdi,QWORD PTR [r12+0x4e0]
  41811d:	mov    rsi,rbx
  418120:	call   4036b0 <realloc@plt>
  418125:	test   rax,rax
  418128:	je     4182f3 <isspace@plt+0x149e3>
  41812e:	mov    QWORD PTR [r12+0x4e0],rax
  418136:	mov    QWORD PTR [r12+0x4d8],rbx
  41813e:	mov    edi,0x1
  418143:	mov    esi,0x78
  418148:	call   403470 <calloc@plt>
  41814d:	test   rax,rax
  418150:	je     4182f3 <isspace@plt+0x149e3>
  418156:	mov    rbx,rax
  418159:	lea    rax,[rip+0x1690]        # 4197f0 <isspace@plt+0x15ee0>
  418160:	mov    QWORD PTR [rbx],rax
  418163:	lea    rax,[rip+0x16d6]        # 419840 <isspace@plt+0x15f30>
  41816a:	mov    QWORD PTR [rbx+0x8],rax
  41816e:	lea    rax,[rip+0x183b]        # 4199b0 <isspace@plt+0x160a0>
  418175:	mov    QWORD PTR [rbx+0x10],rax
  418179:	lea    rax,[rip+0x18d0]        # 419a50 <isspace@plt+0x16140>
  418180:	mov    QWORD PTR [rbx+0x18],rax
  418184:	lea    rax,[rip+0x18f5]        # 419a80 <isspace@plt+0x16170>
  41818b:	mov    QWORD PTR [rbx+0x20],rax
  41818f:	lea    rax,[rip+0x1c3a]        # 419dd0 <isspace@plt+0x164c0>
  418196:	vmovq  xmm0,rax
  41819b:	lea    rax,[rip+0x1bfe]        # 419da0 <isspace@plt+0x16490>
  4181a2:	vmovq  xmm1,rax
  4181a7:	vpunpcklqdq xmm0,xmm1,xmm0
  4181ab:	vmovdqu XMMWORD PTR [rbx+0x28],xmm0
  4181b0:	or     QWORD PTR [r12+0x4d0],r13
  4181b8:	mov    DWORD PTR [rbx+0x48],ebp
  4181bb:	mov    QWORD PTR [rbx+0x38],r12
  4181bf:	mov    QWORD PTR [rbx+0x40],r15
  4181c3:	movabs rax,0x4e00000000
  4181cd:	imul   rax,rbp
  4181d1:	sar    rax,0x1c
  4181d5:	add    rax,QWORD PTR [r12+0x4e0]
  4181dd:	mov    ecx,0x5a
  4181e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4181ec:	nop    DWORD PTR [rax+0x0]
  4181f0:	mov    QWORD PTR [rax+rcx*1-0x5a],0x0
  4181f9:	mov    DWORD PTR [rax+rcx*1-0x52],0xffffffff
  418201:	mov    QWORD PTR [rax+rcx*1-0x4a],0x0
  41820a:	mov    DWORD PTR [rax+rcx*1-0x42],0xffffffff
  418212:	mov    QWORD PTR [rax+rcx*1-0x3a],0x0
  41821b:	mov    DWORD PTR [rax+rcx*1-0x32],0xffffffff
  418223:	mov    QWORD PTR [rax+rcx*1-0x2a],0x0
  41822c:	mov    DWORD PTR [rax+rcx*1-0x22],0xffffffff
  418234:	mov    QWORD PTR [rax+rcx*1-0x1a],0x0
  41823d:	mov    DWORD PTR [rax+rcx*1-0x12],0xffffffff
  418245:	mov    QWORD PTR [rax+rcx*1-0xa],0x0
  41824e:	mov    DWORD PTR [rax+rcx*1-0x2],0xffffffff
  418256:	add    rcx,0x60
  41825a:	cmp    rcx,0x53a
  418261:	jne    4181f0 <isspace@plt+0x148e0>
  418263:	or     BYTE PTR [rax+0x422],0x4
  41826a:	or     BYTE PTR [rax+0x432],0xc
  418271:	or     BYTE PTR [rax+0x452],0x4
  418278:	or     BYTE PTR [rax+0x482],0x4
  41827f:	or     BYTE PTR [rax+0x492],0x4
  418286:	or     BYTE PTR [rax+0x4a2],0x24
  41828d:	or     BYTE PTR [rax+0x4c2],0x20
  418294:	mov    rdi,QWORD PTR [r15+0x18]
  418298:	mov    rsi,rbx
  41829b:	call   41bc20 <isspace@plt+0x18310>
  4182a0:	mov    rax,QWORD PTR [r12+0xa8]
  4182a8:	test   rax,rax
  4182ab:	je     4182b1 <isspace@plt+0x149a1>
  4182ad:	mov    QWORD PTR [rax+0x68],rbx
  4182b1:	mov    QWORD PTR [rbx+0x60],rax
  4182b5:	mov    QWORD PTR [r12+0xa8],rbx
  4182bd:	mov    rax,QWORD PTR [r15+0x10]
  4182c1:	mov    rdi,QWORD PTR [rax]
  4182c4:	call   410a90 <isspace@plt+0xd180>
  4182c9:	mov    ecx,r14d
  4182cc:	and    ecx,0xfffffbfe
  4182d2:	or     ecx,0x400
  4182d8:	cmp    rax,0x2000000
  4182de:	cmovbe ecx,r14d
  4182e2:	mov    DWORD PTR [rbx+0x70],ecx
  4182e5:	test   ecx,0x200
  4182eb:	jne    4182f7 <isspace@plt+0x149e7>
  4182ed:	mov    rdi,QWORD PTR [rbx+0x38]
  4182f1:	jmp    41835b <isspace@plt+0x14a4b>
  4182f3:	xor    ebx,ebx
  4182f5:	jmp    418360 <isspace@plt+0x14a50>
  4182f7:	mov    rdi,QWORD PTR [rbx+0x38]
  4182fb:	mov    rcx,QWORD PTR [rdi+0xa8]
  418302:	mov    rdx,rcx
  418305:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41830f:	nop
  418310:	mov    rax,rdx
  418313:	mov    rdx,QWORD PTR [rdx+0x60]
  418317:	test   rdx,rdx
  41831a:	jne    418310 <isspace@plt+0x14a00>
  41831c:	cmp    rax,rbx
  41831f:	je     41835b <isspace@plt+0x14a4b>
  418321:	mov    rdx,QWORD PTR [rbx+0x68]
  418325:	test   rdx,rdx
  418328:	je     418332 <isspace@plt+0x14a22>
  41832a:	mov    rsi,QWORD PTR [rbx+0x60]
  41832e:	mov    QWORD PTR [rdx+0x60],rsi
  418332:	mov    rsi,QWORD PTR [rbx+0x60]
  418336:	test   rsi,rsi
  418339:	je     41833f <isspace@plt+0x14a2f>
  41833b:	mov    QWORD PTR [rsi+0x68],rdx
  41833f:	cmp    rcx,rbx
  418342:	jne    41834b <isspace@plt+0x14a3b>
  418344:	mov    QWORD PTR [rdi+0xa8],rsi
  41834b:	mov    QWORD PTR [rax+0x60],rbx
  41834f:	mov    QWORD PTR [rbx+0x68],rax
  418353:	mov    QWORD PTR [rbx+0x60],0x0
  41835b:	call   418b30 <isspace@plt+0x15220>
  418360:	mov    rax,QWORD PTR fs:0x28
  418369:	cmp    rax,QWORD PTR [rsp]
  41836d:	jne    418381 <isspace@plt+0x14a71>
  41836f:	mov    rax,rbx
  418372:	add    rsp,0x8
  418376:	pop    rbx
  418377:	pop    r12
  418379:	pop    r13
  41837b:	pop    r14
  41837d:	pop    r15
  41837f:	pop    rbp
  418380:	ret    
  418381:	call   403280 <__stack_chk_fail@plt>
  418386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418390:	push   rax
  418391:	mov    rax,QWORD PTR fs:0x28
  41839a:	mov    QWORD PTR [rsp],rax
  41839e:	test   rdi,rdi
  4183a1:	je     41840a <isspace@plt+0x14afa>
  4183a3:	mov    rax,QWORD PTR [rdi+0x38]
  4183a7:	mov    rcx,QWORD PTR [rdi+0x68]
  4183ab:	test   rcx,rcx
  4183ae:	je     4183b8 <isspace@plt+0x14aa8>
  4183b0:	mov    rdx,QWORD PTR [rdi+0x60]
  4183b4:	mov    QWORD PTR [rcx+0x60],rdx
  4183b8:	mov    rdx,QWORD PTR [rdi+0x60]
  4183bc:	test   rdx,rdx
  4183bf:	je     4183c5 <isspace@plt+0x14ab5>
  4183c1:	mov    QWORD PTR [rdx+0x68],rcx
  4183c5:	cmp    QWORD PTR [rax+0xa8],rdi
  4183cc:	je     41841b <isspace@plt+0x14b0b>
  4183ce:	cmp    QWORD PTR [rax+0xb0],rdi
  4183d5:	je     41842b <isspace@plt+0x14b1b>
  4183d7:	vxorps xmm0,xmm0,xmm0
  4183db:	vmovups XMMWORD PTR [rdi+0x60],xmm0
  4183e0:	mov    cl,BYTE PTR [rdi+0x48]
  4183e3:	mov    rdx,0xfffffffffffffffe
  4183ea:	rol    rdx,cl
  4183ed:	and    QWORD PTR [rax+0x4d0],rdx
  4183f4:	call   4030d0 <free@plt>
  4183f9:	mov    rax,QWORD PTR fs:0x28
  418402:	cmp    rax,QWORD PTR [rsp]
  418406:	jne    418438 <isspace@plt+0x14b28>
  418408:	pop    rax
  418409:	ret    
  41840a:	mov    rax,QWORD PTR fs:0x28
  418413:	cmp    rax,QWORD PTR [rsp]
  418417:	jne    418438 <isspace@plt+0x14b28>
  418419:	pop    rax
  41841a:	ret    
  41841b:	mov    QWORD PTR [rax+0xa8],rdx
  418422:	cmp    QWORD PTR [rax+0xb0],rdi
  418429:	jne    4183d7 <isspace@plt+0x14ac7>
  41842b:	mov    QWORD PTR [rax+0xb0],0x0
  418436:	jmp    4183d7 <isspace@plt+0x14ac7>
  418438:	call   403280 <__stack_chk_fail@plt>
  41843d:	nop    DWORD PTR [rax]
  418440:	push   rbx
  418441:	sub    rsp,0x10
  418445:	mov    rbx,rdi
  418448:	mov    rax,QWORD PTR fs:0x28
  418451:	mov    QWORD PTR [rsp+0x8],rax
  418456:	mov    rcx,QWORD PTR [rdi+0x38]
  41845a:	mov    rax,QWORD PTR [rcx+0xb0]
  418461:	test   BYTE PTR [rdi+0x71],0x1
  418465:	je     41846e <isspace@plt+0x14b5e>
  418467:	mov    QWORD PTR [rcx+0xb0],rbx
  41846e:	test   rax,rax
  418471:	je     418480 <isspace@plt+0x14b70>
  418473:	mov    rax,QWORD PTR [rax+0x40]
  418477:	mov    rdi,QWORD PTR [rax+0x18]
  41847b:	call   41b510 <isspace@plt+0x17c00>
  418480:	mov    rax,QWORD PTR [rbx+0x40]
  418484:	mov    rdi,QWORD PTR [rax+0x18]
  418488:	call   41b510 <isspace@plt+0x17c00>
  41848d:	mov    rax,QWORD PTR fs:0x28
  418496:	cmp    rax,QWORD PTR [rsp+0x8]
  41849b:	jne    4184a3 <isspace@plt+0x14b93>
  41849d:	add    rsp,0x10
  4184a1:	pop    rbx
  4184a2:	ret    
  4184a3:	call   403280 <__stack_chk_fail@plt>
  4184a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4184b0:	push   r14
  4184b2:	push   rbx
  4184b3:	push   rax
  4184b4:	mov    rax,QWORD PTR fs:0x28
  4184bd:	mov    QWORD PTR [rsp],rax
  4184c1:	test   rsi,rsi
  4184c4:	je     4185b9 <isspace@plt+0x14ca9>
  4184ca:	mov    rbx,rdi
  4184cd:	test   rdi,rdi
  4184d0:	je     4185b9 <isspace@plt+0x14ca9>
  4184d6:	mov    r14,rsi
  4184d9:	cmp    rbx,rsi
  4184dc:	je     4185b9 <isspace@plt+0x14ca9>
  4184e2:	mov    rax,QWORD PTR [rbx+0x38]
  4184e6:	mov    rcx,QWORD PTR [rbx+0x60]
  4184ea:	mov    rdx,QWORD PTR [r14+0x60]
  4184ee:	mov    QWORD PTR [rbx+0x60],rdx
  4184f2:	mov    QWORD PTR [r14+0x60],rcx
  4184f6:	mov    rdx,QWORD PTR [rbx+0x60]
  4184fa:	test   rdx,rdx
  4184fd:	je     418503 <isspace@plt+0x14bf3>
  4184ff:	mov    QWORD PTR [rdx+0x68],rbx
  418503:	test   rcx,rcx
  418506:	je     41850c <isspace@plt+0x14bfc>
  418508:	mov    QWORD PTR [rcx+0x68],r14
  41850c:	mov    rcx,QWORD PTR [rbx+0x68]
  418510:	mov    rdx,QWORD PTR [r14+0x68]
  418514:	mov    QWORD PTR [rbx+0x68],rdx
  418518:	mov    QWORD PTR [r14+0x68],rcx
  41851c:	mov    rdx,QWORD PTR [rbx+0x68]
  418520:	test   rdx,rdx
  418523:	je     418529 <isspace@plt+0x14c19>
  418525:	mov    QWORD PTR [rdx+0x60],rbx
  418529:	test   rcx,rcx
  41852c:	je     418532 <isspace@plt+0x14c22>
  41852e:	mov    QWORD PTR [rcx+0x60],r14
  418532:	mov    rdx,QWORD PTR [rax+0xa8]
  418539:	mov    rcx,r14
  41853c:	cmp    rdx,rbx
  41853f:	je     418549 <isspace@plt+0x14c39>
  418541:	mov    rcx,rbx
  418544:	cmp    rdx,r14
  418547:	jne    418550 <isspace@plt+0x14c40>
  418549:	mov    QWORD PTR [rax+0xa8],rcx
  418550:	mov    rcx,QWORD PTR [rax+0xb0]
  418557:	cmp    rcx,rbx
  41855a:	je     418581 <isspace@plt+0x14c71>
  41855c:	cmp    rcx,r14
  41855f:	jne    4185b9 <isspace@plt+0x14ca9>
  418561:	test   BYTE PTR [rbx+0x71],0x1
  418565:	je     41856e <isspace@plt+0x14c5e>
  418567:	mov    QWORD PTR [rax+0xb0],rbx
  41856e:	mov    rax,QWORD PTR [r14+0x40]
  418572:	mov    rdi,QWORD PTR [rax+0x18]
  418576:	call   41b510 <isspace@plt+0x17c00>
  41857b:	mov    rax,QWORD PTR [rbx+0x40]
  41857f:	jmp    4185b0 <isspace@plt+0x14ca0>
  418581:	mov    rcx,QWORD PTR [r14+0x38]
  418585:	mov    rax,QWORD PTR [rcx+0xb0]
  41858c:	test   BYTE PTR [r14+0x71],0x1
  418591:	je     41859a <isspace@plt+0x14c8a>
  418593:	mov    QWORD PTR [rcx+0xb0],r14
  41859a:	test   rax,rax
  41859d:	je     4185ac <isspace@plt+0x14c9c>
  41859f:	mov    rax,QWORD PTR [rax+0x40]
  4185a3:	mov    rdi,QWORD PTR [rax+0x18]
  4185a7:	call   41b510 <isspace@plt+0x17c00>
  4185ac:	mov    rax,QWORD PTR [r14+0x40]
  4185b0:	mov    rdi,QWORD PTR [rax+0x18]
  4185b4:	call   41b510 <isspace@plt+0x17c00>
  4185b9:	mov    rax,QWORD PTR fs:0x28
  4185c2:	cmp    rax,QWORD PTR [rsp]
  4185c6:	jne    4185d0 <isspace@plt+0x14cc0>
  4185c8:	add    rsp,0x8
  4185cc:	pop    rbx
  4185cd:	pop    r14
  4185cf:	ret    
  4185d0:	call   403280 <__stack_chk_fail@plt>
  4185d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4185df:	nop
  4185e0:	push   r15
  4185e2:	push   r14
  4185e4:	push   r12
  4185e6:	push   rbx
  4185e7:	push   rax
  4185e8:	mov    r14,rdx
  4185eb:	mov    r15,rsi
  4185ee:	mov    rbx,rdi
  4185f1:	cmp    DWORD PTR [rip+0x2aad8],0x1        # 4430d0 <isspace@plt+0x3f7c0>
  4185f8:	jne    418624 <isspace@plt+0x14d14>
  4185fa:	mov    r12,QWORD PTR [rip+0x2a9f7]        # 442ff8 <isspace@plt+0x3f6e8>
  418601:	mov    rcx,QWORD PTR [r12]
  418605:	lea    rdi,[rip+0x19470]        # 431a7c <isspace@plt+0x2e16c>
  41860c:	mov    esi,0x7
  418611:	mov    edx,0x1
  418616:	call   403810 <fwrite@plt>
  41861b:	mov    rdi,QWORD PTR [r12]
  41861f:	call   4035f0 <fflush@plt>
  418624:	call   4038b0 <endwin@plt>
  418629:	mov    rdi,QWORD PTR [rbx+0x4c8]
  418630:	test   rdi,rdi
  418633:	je     41863a <isspace@plt+0x14d2a>
  418635:	call   4030a0 <termkey_stop@plt>
  41863a:	mov    rax,QWORD PTR [rip+0x2a9b7]        # 442ff8 <isspace@plt+0x3f6e8>
  418641:	mov    rdi,QWORD PTR [rax]
  418644:	mov    esi,0x1
  418649:	mov    rdx,r15
  41864c:	mov    rcx,r14
  41864f:	call   403120 <__vfprintf_chk@plt>
  418654:	mov    edi,0x1
  418659:	call   403800 <exit@plt>
  41865e:	xchg   ax,ax
  418660:	sub    rsp,0x18
  418664:	mov    r9,rdx
  418667:	mov    rax,rsi
  41866a:	mov    rcx,QWORD PTR fs:0x28
  418673:	mov    QWORD PTR [rsp+0x10],rcx
  418678:	mov    ecx,DWORD PTR [rdi+0x4bc]
  41867e:	test   ecx,ecx
  418680:	jle    4186e3 <isspace@plt+0x14dd3>
  418682:	mov    edx,DWORD PTR [rdi+0x4b8]
  418688:	test   edx,edx
  41868a:	jle    4186e3 <isspace@plt+0x14dd3>
  41868c:	add    ecx,0xffffffff
  41868f:	mov    rsi,QWORD PTR [rdi+0x4e0]
  418696:	vmovups xmm0,XMMWORD PTR [rsi+0x4c0]
  41869e:	vmovaps XMMWORD PTR [rsp],xmm0
  4186a3:	imul   edx,ecx
  4186a6:	movsxd rcx,edx
  4186a9:	lea    rcx,[rcx+rcx*2]
  4186ad:	shl    rcx,0x4
  4186b1:	add    rcx,QWORD PTR [rdi+0x4f0]
  4186b8:	xor    edx,edx
  4186ba:	nop    WORD PTR [rax+rax*1+0x0]
  4186c0:	mov    WORD PTR [rcx],0x20
  4186c5:	vmovaps xmm0,XMMWORD PTR [rsp]
  4186ca:	vmovups XMMWORD PTR [rcx+0x20],xmm0
  4186cf:	add    rdx,0x1
  4186d3:	movsxd rsi,DWORD PTR [rdi+0x4b8]
  4186da:	add    rcx,0x30
  4186de:	cmp    rdx,rsi
  4186e1:	jl     4186c0 <isspace@plt+0x14db0>
  4186e3:	add    rdi,0xb8
  4186ea:	mov    esi,0x400
  4186ef:	mov    edx,0x1
  4186f4:	mov    rcx,0xffffffffffffffff
  4186fb:	mov    r8,rax
  4186fe:	call   4036a0 <__vsnprintf_chk@plt>
  418703:	mov    rax,QWORD PTR fs:0x28
  41870c:	cmp    rax,QWORD PTR [rsp+0x10]
  418711:	jne    418718 <isspace@plt+0x14e08>
  418713:	add    rsp,0x18
  418717:	ret    
  418718:	call   403280 <__stack_chk_fail@plt>
  41871d:	nop    DWORD PTR [rax]
  418720:	push   rax
  418721:	mov    rax,QWORD PTR fs:0x28
  41872a:	mov    QWORD PTR [rsp],rax
  41872e:	cmp    BYTE PTR [rdi+0xb8],0x0
  418735:	je     41873e <isspace@plt+0x14e2e>
  418737:	mov    BYTE PTR [rdi+0xb8],0x0
  41873e:	mov    rax,QWORD PTR fs:0x28
  418747:	cmp    rax,QWORD PTR [rsp]
  41874b:	jne    41874f <isspace@plt+0x14e3f>
  41874d:	pop    rax
  41874e:	ret    
  41874f:	call   403280 <__stack_chk_fail@plt>
  418754:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41875e:	xchg   ax,ax
  418760:	push   rbp
  418761:	push   r15
  418763:	push   r14
  418765:	push   r13
  418767:	push   r12
  418769:	push   rbx
  41876a:	sub    rsp,0x38
  41876e:	mov    rax,QWORD PTR fs:0x28
  418777:	mov    QWORD PTR [rsp+0x30],rax
  41877c:	mov    DWORD PTR [rsp+0x14],esi
  418780:	mov    DWORD PTR [rdi+0x4c0],esi
  418786:	mov    rbp,QWORD PTR [rdi+0xa8]
  41878d:	test   rbp,rbp
  418790:	je     418b0c <isspace@plt+0x151fc>
  418796:	mov    rbx,rdi
  418799:	xor    r12d,r12d
  41879c:	cmp    BYTE PTR [rdi+0xb8],0x0
  4187a3:	setne  r12b
  4187a7:	xor    r15d,r15d
  4187aa:	mov    eax,0x109
  4187af:	mov    rdx,rbp
  4187b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4187bc:	nop    DWORD PTR [rax+0x0]
  4187c0:	mov    esi,DWORD PTR [rdx+0x70]
  4187c3:	bextr  edi,esi,eax
  4187c8:	mov    ecx,r12d
  4187cb:	lea    r12d,[rdi+rcx*1]
  4187cf:	xor    edi,0x1
  4187d2:	add    r15d,edi
  4187d5:	mov    rdx,QWORD PTR [rdx+0x60]
  4187d9:	test   rdx,rdx
  4187dc:	jne    4187c0 <isspace@plt+0x14eb0>
  4187de:	mov    eax,DWORD PTR [rbx+0x4b8]
  4187e4:	mov    r8d,DWORD PTR [rbx+0x4bc]
  4187eb:	mov    r9d,r8d
  4187ee:	sub    r9d,r12d
  4187f1:	cmp    r15d,0x1
  4187f5:	mov    edi,0x1
  4187fa:	cmova  edi,r15d
  4187fe:	cdq    
  4187ff:	idiv   edi
  418801:	mov    r10d,eax
  418804:	mov    eax,r9d
  418807:	cdq    
  418808:	idiv   edi
  41880a:	mov    DWORD PTR [rsp+0x28],eax
  41880e:	test   rbp,rbp
  418811:	je     418b0c <isspace@plt+0x151fc>
  418817:	add    r10d,0xffffffff
  41881b:	mov    DWORD PTR [rsp+0x2c],r10d
  418820:	not    r12d
  418823:	add    r12d,r8d
  418826:	mov    edx,r9d
  418829:	and    edx,0x3
  41882c:	sub    ecx,r8d
  41882f:	add    ecx,edx
  418831:	mov    eax,0x109
  418836:	bextr  eax,esi,eax
  41883b:	add    eax,ecx
  41883d:	mov    DWORD PTR [rsp+0x1c],eax
  418841:	mov    DWORD PTR [rsp+0x20],edx
  418845:	neg    edx
  418847:	mov    DWORD PTR [rsp+0x18],edx
  41884b:	mov    DWORD PTR [rsp+0xc],0x0
  418853:	mov    DWORD PTR [rsp+0x10],0x0
  41885b:	mov    r14d,r9d
  41885e:	mov    DWORD PTR [rsp+0x24],r9d
  418863:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41886d:	nop    DWORD PTR [rax]
  418870:	mov    edx,DWORD PTR [rbp+0x70]
  418873:	test   edx,0x200
  418879:	jne    418a8d <isspace@plt+0x1517d>
  41887f:	add    r15d,0xffffffff
  418883:	cmp    DWORD PTR [rsp+0x14],0x0
  418888:	je     418a31 <isspace@plt+0x15121>
  41888e:	mov    r13d,DWORD PTR [rsp+0x2c]
  418893:	test   r15d,r15d
  418896:	jne    4188a4 <isspace@plt+0x14f94>
  418898:	mov    r13d,DWORD PTR [rbx+0x4b8]
  41889f:	sub    r13d,DWORD PTR [rsp+0xc]
  4188a4:	mov    DWORD PTR [rbp+0x4c],r13d
  4188a8:	mov    DWORD PTR [rbp+0x50],r14d
  4188ac:	mov    rax,QWORD PTR [rbp+0x40]
  4188b0:	mov    rdi,QWORD PTR [rax+0x18]
  4188b4:	mov    esi,r13d
  4188b7:	sub    esi,DWORD PTR [rbp+0x5c]
  4188ba:	shl    edx,0x17
  4188bd:	sar    edx,0x1f
  4188c0:	add    edx,r14d
  4188c3:	call   41b5e0 <isspace@plt+0x17cd0>
  4188c8:	mov    eax,DWORD PTR [rsp+0xc]
  4188cc:	add    r13d,eax
  4188cf:	mov    DWORD PTR [rbp+0x54],eax
  4188d2:	mov    eax,DWORD PTR [rsp+0x10]
  4188d6:	mov    DWORD PTR [rbp+0x58],eax
  4188d9:	test   r15d,r15d
  4188dc:	je     418a85 <isspace@plt+0x15175>
  4188e2:	test   r14d,r14d
  4188e5:	jle    418a2b <isspace@plt+0x1511b>
  4188eb:	mov    rcx,QWORD PTR [rbx+0x4f0]
  4188f2:	movsxd rax,r13d
  4188f5:	mov    edx,DWORD PTR [rsp+0x1c]
  4188f9:	cmp    r12d,0x3
  4188fd:	jb     4189dc <isspace@plt+0x150cc>
  418903:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41890d:	nop    DWORD PTR [rax]
  418910:	mov    rsi,rax
  418913:	shl    rsi,0x4
  418917:	lea    rsi,[rsi+rsi*2]
  41891b:	mov    DWORD PTR [rcx+rsi*1],0x8294e2
  418922:	mov    rdi,QWORD PTR [rbx+0x4e0]
  418929:	vmovups xmm0,XMMWORD PTR [rdi+0x4b0]
  418931:	vmovups XMMWORD PTR [rcx+rsi*1+0x20],xmm0
  418937:	movsxd rdi,DWORD PTR [rbx+0x4b8]
  41893e:	lea    rdi,[rdi+rdi*2]
  418942:	shl    rdi,0x4
  418946:	add    rdi,rcx
  418949:	mov    DWORD PTR [rdi+rsi*1],0x8294e2
  418950:	mov    rcx,QWORD PTR [rbx+0x4e0]
  418957:	vmovups xmm0,XMMWORD PTR [rcx+0x4b0]
  41895f:	vmovups XMMWORD PTR [rdi+rsi*1+0x20],xmm0
  418965:	movsxd rcx,DWORD PTR [rbx+0x4b8]
  41896c:	lea    rcx,[rcx+rcx*2]
  418970:	shl    rcx,0x4
  418974:	add    rcx,rdi
  418977:	mov    DWORD PTR [rcx+rsi*1],0x8294e2
  41897e:	mov    rdi,QWORD PTR [rbx+0x4e0]
  418985:	vmovups xmm0,XMMWORD PTR [rdi+0x4b0]
  41898d:	vmovups XMMWORD PTR [rcx+rsi*1+0x20],xmm0
  418993:	movsxd rdi,DWORD PTR [rbx+0x4b8]
  41899a:	lea    rdi,[rdi+rdi*2]
  41899e:	shl    rdi,0x4
  4189a2:	add    rdi,rcx
  4189a5:	mov    DWORD PTR [rdi+rsi*1],0x8294e2
  4189ac:	mov    rcx,QWORD PTR [rbx+0x4e0]
  4189b3:	vmovups xmm0,XMMWORD PTR [rcx+0x4b0]
  4189bb:	vmovups XMMWORD PTR [rdi+rsi*1+0x20],xmm0
  4189c1:	movsxd rcx,DWORD PTR [rbx+0x4b8]
  4189c8:	lea    rcx,[rcx+rcx*2]
  4189cc:	shl    rcx,0x4
  4189d0:	add    rcx,rdi
  4189d3:	add    edx,0x4
  4189d6:	jne    418910 <isspace@plt+0x15000>
  4189dc:	cmp    DWORD PTR [rsp+0x20],0x0
  4189e1:	je     418a2b <isspace@plt+0x1511b>
  4189e3:	mov    edx,DWORD PTR [rsp+0x18]
  4189e7:	nop    WORD PTR [rax+rax*1+0x0]
  4189f0:	lea    rsi,[rax+rax*2]
  4189f4:	shl    rsi,0x4
  4189f8:	mov    DWORD PTR [rcx+rsi*1],0x8294e2
  4189ff:	mov    rdi,QWORD PTR [rbx+0x4e0]
  418a06:	vmovups xmm0,XMMWORD PTR [rdi+0x4b0]
  418a0e:	vmovups XMMWORD PTR [rcx+rsi*1+0x20],xmm0
  418a14:	movsxd rsi,DWORD PTR [rbx+0x4b8]
  418a1b:	lea    rsi,[rsi+rsi*2]
  418a1f:	shl    rsi,0x4
  418a23:	add    rcx,rsi
  418a26:	add    edx,0x1
  418a29:	jne    4189f0 <isspace@plt+0x150e0>
  418a2b:	add    r13d,0x1
  418a2f:	jmp    418a88 <isspace@plt+0x15178>
  418a31:	mov    r13d,r14d
  418a34:	mov    r14d,DWORD PTR [rsp+0x10]
  418a39:	sub    r13d,r14d
  418a3c:	test   r15d,r15d
  418a3f:	cmovne r13d,DWORD PTR [rsp+0x28]
  418a45:	mov    esi,DWORD PTR [rbx+0x4b8]
  418a4b:	mov    DWORD PTR [rbp+0x4c],esi
  418a4e:	mov    DWORD PTR [rbp+0x50],r13d
  418a52:	mov    rax,QWORD PTR [rbp+0x40]
  418a56:	mov    rdi,QWORD PTR [rax+0x18]
  418a5a:	sub    esi,DWORD PTR [rbp+0x5c]
  418a5d:	shl    edx,0x17
  418a60:	sar    edx,0x1f
  418a63:	add    edx,r13d
  418a66:	call   41b5e0 <isspace@plt+0x17cd0>
  418a6b:	mov    eax,DWORD PTR [rsp+0xc]
  418a6f:	mov    DWORD PTR [rbp+0x54],eax
  418a72:	mov    DWORD PTR [rbp+0x58],r14d
  418a76:	add    r14d,r13d
  418a79:	mov    DWORD PTR [rsp+0x10],r14d
  418a7e:	mov    r14d,DWORD PTR [rsp+0x24]
  418a83:	jmp    418a8d <isspace@plt+0x1517d>
  418a85:	xor    r15d,r15d
  418a88:	mov    DWORD PTR [rsp+0xc],r13d
  418a8d:	mov    rbp,QWORD PTR [rbp+0x60]
  418a91:	test   rbp,rbp
  418a94:	jne    418870 <isspace@plt+0x14f60>
  418a9a:	mov    rbp,QWORD PTR [rbx+0xa8]
  418aa1:	test   rbp,rbp
  418aa4:	mov    eax,r14d
  418aa7:	mov    r14d,DWORD PTR [rsp+0x10]
  418aac:	je     418b0c <isspace@plt+0x151fc>
  418aae:	cmp    DWORD PTR [rsp+0x14],0x1
  418ab3:	cmove  r14d,eax
  418ab7:	nop    WORD PTR [rax+rax*1+0x0]
  418ac0:	mov    edx,DWORD PTR [rbp+0x70]
  418ac3:	test   edx,0x200
  418ac9:	je     418b03 <isspace@plt+0x151f3>
  418acb:	mov    esi,DWORD PTR [rbx+0x4b8]
  418ad1:	mov    DWORD PTR [rbp+0x4c],esi
  418ad4:	mov    DWORD PTR [rbp+0x50],0x1
  418adb:	mov    rax,QWORD PTR [rbp+0x40]
  418adf:	mov    rdi,QWORD PTR [rax+0x18]
  418ae3:	sub    esi,DWORD PTR [rbp+0x5c]
  418ae6:	shl    edx,0x17
  418ae9:	sar    edx,0x1f
  418aec:	add    edx,0x1
  418aef:	call   41b5e0 <isspace@plt+0x17cd0>
  418af4:	mov    DWORD PTR [rbp+0x54],0x0
  418afb:	mov    DWORD PTR [rbp+0x58],r14d
  418aff:	add    r14d,0x1
  418b03:	mov    rbp,QWORD PTR [rbp+0x60]
  418b07:	test   rbp,rbp
  418b0a:	jne    418ac0 <isspace@plt+0x151b0>
  418b0c:	mov    rax,QWORD PTR fs:0x28
  418b15:	cmp    rax,QWORD PTR [rsp+0x30]
  418b1a:	jne    418b2b <isspace@plt+0x1521b>
  418b1c:	add    rsp,0x38
  418b20:	pop    rbx
  418b21:	pop    r12
  418b23:	pop    r13
  418b25:	pop    r14
  418b27:	pop    r15
  418b29:	pop    rbp
  418b2a:	ret    
  418b2b:	call   403280 <__stack_chk_fail@plt>
  418b30:	push   rbp
  418b31:	push   r15
  418b33:	push   r14
  418b35:	push   r13
  418b37:	push   r12
  418b39:	push   rbx
  418b3a:	sub    rsp,0xb8
  418b41:	mov    rbx,rdi
  418b44:	mov    rax,QWORD PTR fs:0x28
  418b4d:	mov    QWORD PTR [rsp+0xb0],rax
  418b55:	mov    esi,DWORD PTR [rdi+0x4c0]
  418b5b:	call   418760 <isspace@plt+0x14e50>
  418b60:	mov    QWORD PTR [rsp+0x58],rbx
  418b65:	mov    r15,QWORD PTR [rbx+0xa8]
  418b6c:	test   r15,r15
  418b6f:	jne    418b8d <isspace@plt+0x1527d>
  418b71:	jmp    418f16 <isspace@plt+0x15606>
  418b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418b80:	mov    r15,QWORD PTR [r15+0x60]
  418b84:	test   r15,r15
  418b87:	je     418f16 <isspace@plt+0x15606>
  418b8d:	mov    rax,QWORD PTR [r15+0x38]
  418b91:	mov    QWORD PTR [rsp+0x30],rax
  418b96:	mov    rax,QWORD PTR [r15+0x40]
  418b9a:	mov    rbp,QWORD PTR [rax+0x18]
  418b9e:	mov    ebx,DWORD PTR [r15+0x4c]
  418ba2:	movsxd r14,DWORD PTR [r15+0x50]
  418ba6:	mov    rdi,rbp
  418ba9:	call   41ecc0 <isspace@plt+0x1b3b0>
  418bae:	mov    ecx,DWORD PTR [r15+0x70]
  418bb2:	mov    DWORD PTR [rsp+0x28],ecx
  418bb6:	test   cl,0x3
  418bb9:	mov    ecx,0x0
  418bbe:	je     418bec <isspace@plt+0x152dc>
  418bc0:	mov    rax,QWORD PTR [rax+0x18]
  418bc4:	lea    r9,[r14+rax*1]
  418bc8:	add    r9,0xfffffffffffffffe
  418bcc:	xor    edi,edi
  418bce:	xor    esi,esi
  418bd0:	mov    edx,0x1
  418bd5:	mov    rcx,0xffffffffffffffff
  418bdc:	xor    eax,eax
  418bde:	lea    r8,[rip+0x18e8c]        # 431a71 <isspace@plt+0x2e161>
  418be5:	call   4030c0 <__snprintf_chk@plt>
  418bea:	mov    ecx,eax
  418bec:	cmp    ecx,DWORD PTR [r15+0x5c]
  418bf0:	mov    r13,rcx
  418bf3:	je     418c15 <isspace@plt+0x15305>
  418bf5:	sub    ebx,ecx
  418bf7:	mov    edx,DWORD PTR [rsp+0x28]
  418bfb:	shl    edx,0x17
  418bfe:	sar    edx,0x1f
  418c01:	add    edx,r14d
  418c04:	mov    rdi,rbp
  418c07:	mov    esi,ebx
  418c09:	call   41b5e0 <isspace@plt+0x17cd0>
  418c0e:	mov    rax,r13
  418c11:	mov    DWORD PTR [r15+0x5c],eax
  418c15:	mov    rdi,QWORD PTR [r15+0x40]
  418c19:	call   420c40 <isspace@plt+0x1d330>
  418c1e:	mov    rdi,rbp
  418c21:	call   41ecc0 <isspace@plt+0x1b3b0>
  418c26:	mov    rbx,rax
  418c29:	mov    rdi,rbp
  418c2c:	call   41f750 <isspace@plt+0x1be40>
  418c31:	mov    rdi,rax
  418c34:	call   41ed20 <isspace@plt+0x1b410>
  418c39:	mov    rax,QWORD PTR [rax+0x18]
  418c3d:	mov    QWORD PTR [rsp+0x60],rax
  418c42:	movsxd rax,DWORD PTR [r15+0x54]
  418c46:	mov    QWORD PTR [rsp+0x10],rax
  418c4b:	mov    eax,DWORD PTR [r15+0x58]
  418c4f:	mov    rdi,rbp
  418c52:	mov    ebp,eax
  418c54:	call   41b700 <isspace@plt+0x17df0>
  418c59:	test   rbx,rbx
  418c5c:	mov    r14,QWORD PTR [rsp+0x30]
  418c61:	je     418b80 <isspace@plt+0x15270>
  418c67:	mov    ecx,DWORD PTR [r14+0x4b8]
  418c6e:	mov    rdx,QWORD PTR [rsp+0x10]
  418c73:	lea    edx,[rdx+r13*1]
  418c77:	lea    esi,[rax+rdx*1]
  418c7a:	mov    edi,ecx
  418c7c:	sub    edi,edx
  418c7e:	cmp    esi,ecx
  418c80:	cmovle edi,eax
  418c83:	imul   ecx,ebp
  418c86:	movsxd rax,ecx
  418c89:	lea    rax,[rax+rax*2]
  418c8d:	shl    rax,0x4
  418c91:	add    rax,QWORD PTR [r14+0x4f0]
  418c98:	mov    QWORD PTR [rsp+0x18],rax
  418c9d:	movsxd rax,edx
  418ca0:	mov    QWORD PTR [rsp+0x50],rax
  418ca5:	movsxd rax,edi
  418ca8:	shl    rax,0x4
  418cac:	lea    rax,[rax+rax*2]
  418cb0:	mov    QWORD PTR [rsp+0x48],rax
  418cb5:	movsxd rax,r13d
  418cb8:	mov    QWORD PTR [rsp+0x78],rax
  418cbd:	add    r13d,0xffffffff
  418cc1:	mov    QWORD PTR [rsp+0x70],r13
  418cc6:	xor    r13d,r13d
  418cc9:	mov    QWORD PTR [rsp+0x68],r15
  418cce:	xchg   ax,ax
  418cd0:	test   BYTE PTR [rsp+0x28],0x3
  418cd5:	je     418ec7 <isspace@plt+0x155b7>
  418cdb:	mov    DWORD PTR [rsp+0x20],ebp
  418cdf:	mov    rax,QWORD PTR [rbx+0x18]
  418ce3:	test   rax,rax
  418ce6:	je     418d10 <isspace@plt+0x15400>
  418ce8:	cmp    rax,r13
  418ceb:	je     418d10 <isspace@plt+0x15400>
  418ced:	mov    rcx,QWORD PTR [rbx+0x10]
  418cf1:	test   rcx,rcx
  418cf4:	je     418d10 <isspace@plt+0x15400>
  418cf6:	test   BYTE PTR [rsp+0x28],0x2
  418cfb:	mov    rbp,QWORD PTR [rsp+0x60]
  418d00:	jne    418d47 <isspace@plt+0x15437>
  418d02:	mov    rcx,rax
  418d05:	jmp    418d67 <isspace@plt+0x15457>
  418d07:	nop    WORD PTR [rax+rax*1+0x0]
  418d10:	movabs rax,0x2020202020202020
  418d1a:	mov    QWORD PTR [rsp+0xa0],rax
  418d22:	vmovaps xmm0,XMMWORD PTR [rip+0x18c66]        # 431990 <isspace@plt+0x2e080>
  418d2a:	vmovaps XMMWORD PTR [rsp+0x90],xmm0
  418d33:	mov    rax,QWORD PTR [rsp+0x78]
  418d38:	mov    BYTE PTR [rsp+rax*1+0x90],0x0
  418d40:	mov    rbp,QWORD PTR [rsp+0x60]
  418d45:	jmp    418d95 <isspace@plt+0x15485>
  418d47:	mov    rcx,rax
  418d4a:	sub    rcx,rbp
  418d4d:	ja     418d67 <isspace@plt+0x15457>
  418d4f:	test   BYTE PTR [r15+0x71],0x4
  418d54:	mov    edx,0x0
  418d59:	cmove  rdx,rax
  418d5d:	mov    rcx,rbp
  418d60:	sub    rcx,rax
  418d63:	cmovbe rcx,rdx
  418d67:	mov    QWORD PTR [rsp],rcx
  418d6b:	mov    esi,0x18
  418d70:	mov    edx,0x1
  418d75:	mov    ecx,0x18
  418d7a:	xor    eax,eax
  418d7c:	lea    rdi,[rsp+0x90]
  418d84:	lea    r8,[rip+0x18ceb]        # 431a76 <isspace@plt+0x2e166>
  418d8b:	mov    r9,QWORD PTR [rsp+0x70]
  418d90:	call   4030c0 <__snprintf_chk@plt>
  418d95:	mov    r13,QWORD PTR [rbx+0x18]
  418d99:	xor    ecx,ecx
  418d9b:	cmp    r13,rbp
  418d9e:	sete   dl
  418da1:	cmp    DWORD PTR [rsp+0x10],0x0
  418da6:	js     418ec3 <isspace@plt+0x155b3>
  418dac:	mov    ebp,DWORD PTR [rsp+0x20]
  418db0:	test   ebp,ebp
  418db2:	js     418ec7 <isspace@plt+0x155b7>
  418db8:	mov    eax,DWORD PTR [r14+0x4b8]
  418dbf:	cmp    eax,DWORD PTR [rsp+0x10]
  418dc3:	jle    418ec7 <isspace@plt+0x155b7>
  418dc9:	cmp    DWORD PTR [r14+0x4bc],ebp
  418dd0:	jle    418ec7 <isspace@plt+0x155b7>
  418dd6:	mov    cl,dl
  418dd8:	or     ecx,0x46
  418ddb:	mov    rdx,QWORD PTR [r14+0x4e0]
  418de2:	imul   esi,DWORD PTR [r15+0x48],0x4e
  418de7:	add    esi,ecx
  418de9:	shl    rsi,0x4
  418ded:	vmovups xmm0,XMMWORD PTR [rdx+rsi*1]
  418df2:	vmovaps XMMWORD PTR [rsp+0x80],xmm0
  418dfb:	cmp    BYTE PTR [rsp+0x90],0x0
  418e03:	je     418ec7 <isspace@plt+0x155b7>
  418e09:	imul   eax,ebp
  418e0c:	cdqe   
  418e0e:	lea    rax,[rax+rax*2]
  418e12:	shl    rax,0x4
  418e16:	add    rax,QWORD PTR [r14+0x4f0]
  418e1d:	mov    QWORD PTR [rsp+0x40],rax
  418e22:	lea    rsi,[rsp+0x90]
  418e2a:	mov    r15,QWORD PTR [rsp+0x10]
  418e2f:	mov    r13,rsi
  418e32:	mov    QWORD PTR [rsp+0x38],rbx
  418e37:	nop    WORD PTR [rax+rax*1+0x0]
  418e40:	movzx  eax,BYTE PTR [r13+0x1]
  418e45:	add    r13,0x1
  418e49:	and    al,0xc0
  418e4b:	cmp    al,0x80
  418e4d:	je     418e40 <isspace@plt+0x15530>
  418e4f:	mov    rbp,r13
  418e52:	sub    rbp,rsi
  418e55:	je     418eba <isspace@plt+0x155aa>
  418e57:	cmp    rbp,0xf
  418e5b:	mov    eax,0xf
  418e60:	cmovae rbp,rax
  418e64:	lea    r14,[r15+r15*2]
  418e68:	shl    r14,0x4
  418e6c:	mov    rbx,QWORD PTR [rsp+0x40]
  418e71:	lea    r12,[rbx+r14*1]
  418e75:	mov    rdi,r12
  418e78:	mov    rdx,rbp
  418e7b:	call   403150 <strncpy@plt>
  418e80:	mov    BYTE PTR [rbp+r12*1+0x0],0x0
  418e86:	vmovaps xmm0,XMMWORD PTR [rsp+0x80]
  418e8f:	vmovups XMMWORD PTR [rbx+r14*1+0x20],xmm0
  418e96:	mov    rbx,QWORD PTR [rsp+0x38]
  418e9b:	mov    r14,QWORD PTR [rsp+0x30]
  418ea0:	cmp    BYTE PTR [r13+0x0],0x0
  418ea5:	je     418eba <isspace@plt+0x155aa>
  418ea7:	add    r15,0x1
  418eab:	movsxd rax,DWORD PTR [r14+0x4b8]
  418eb2:	mov    rsi,r13
  418eb5:	cmp    r15,rax
  418eb8:	jl     418e40 <isspace@plt+0x15530>
  418eba:	mov    r13,QWORD PTR [rbx+0x18]
  418ebe:	mov    r15,QWORD PTR [rsp+0x68]
  418ec3:	mov    ebp,DWORD PTR [rsp+0x20]
  418ec7:	mov    rax,QWORD PTR [rsp+0x50]
  418ecc:	lea    rdi,[rax+rax*2]
  418ed0:	shl    rdi,0x4
  418ed4:	mov    r12,QWORD PTR [rsp+0x18]
  418ed9:	add    rdi,r12
  418edc:	lea    rsi,[rbx+0x28]
  418ee0:	mov    rdx,QWORD PTR [rsp+0x48]
  418ee5:	call   4034e0 <memcpy@plt>
  418eea:	movsxd rax,DWORD PTR [r14+0x4b8]
  418ef1:	lea    rax,[rax+rax*2]
  418ef5:	shl    rax,0x4
  418ef9:	add    r12,rax
  418efc:	mov    QWORD PTR [rsp+0x18],r12
  418f01:	mov    rbx,QWORD PTR [rbx+0x8]
  418f05:	add    ebp,0x1
  418f08:	test   rbx,rbx
  418f0b:	jne    418cd0 <isspace@plt+0x153c0>
  418f11:	jmp    418b80 <isspace@plt+0x15270>
  418f16:	mov    rdx,QWORD PTR [rsp+0x58]
  418f1b:	cmp    BYTE PTR [rdx+0xb8],0x0
  418f22:	je     419022 <isspace@plt+0x15712>
  418f28:	lea    rcx,[rdx+0x4bc]
  418f2f:	mov    edi,DWORD PTR [rdx+0x4b8]
  418f35:	mov    eax,DWORD PTR [rdx+0x4bc]
  418f3b:	test   eax,eax
  418f3d:	jle    419033 <isspace@plt+0x15723>
  418f43:	test   edi,edi
  418f45:	jle    419033 <isspace@plt+0x15723>
  418f4b:	mov    QWORD PTR [rsp+0x28],rcx
  418f50:	lea    rsi,[rdx+0xb8]
  418f57:	lea    r8,[rdx+0x4b8]
  418f5e:	add    eax,0xffffffff
  418f61:	mov    rcx,QWORD PTR [rdx+0x4e0]
  418f68:	vmovups xmm0,XMMWORD PTR [rcx+0x4c0]
  418f70:	vmovaps XMMWORD PTR [rsp+0x90],xmm0
  418f79:	imul   edi,eax
  418f7c:	movsxd rax,edi
  418f7f:	lea    rax,[rax+rax*2]
  418f83:	shl    rax,0x4
  418f87:	add    rax,QWORD PTR [rdx+0x4f0]
  418f8e:	mov    QWORD PTR [rsp+0x18],rax
  418f93:	xor    ebp,ebp
  418f95:	mov    r14,rsi
  418f98:	mov    QWORD PTR [rsp+0x20],r8
  418f9d:	nop    DWORD PTR [rax]
  418fa0:	movzx  eax,BYTE PTR [r14+0x1]
  418fa5:	add    r14,0x1
  418fa9:	and    al,0xc0
  418fab:	cmp    al,0x80
  418fad:	je     418fa0 <isspace@plt+0x15690>
  418faf:	mov    rbx,r14
  418fb2:	sub    rbx,rsi
  418fb5:	je     419016 <isspace@plt+0x15706>
  418fb7:	cmp    rbx,0xf
  418fbb:	mov    eax,0xf
  418fc0:	cmovae rbx,rax
  418fc4:	lea    r15,[rbp*2+0x0]
  418fcc:	add    r15,rbp
  418fcf:	shl    r15,0x4
  418fd3:	mov    r12,QWORD PTR [rsp+0x18]
  418fd8:	lea    r13,[r12+r15*1]
  418fdc:	mov    rdi,r13
  418fdf:	mov    rdx,rbx
  418fe2:	call   403150 <strncpy@plt>
  418fe7:	mov    r8,QWORD PTR [rsp+0x20]
  418fec:	mov    BYTE PTR [rbx+r13*1],0x0
  418ff1:	vmovaps xmm0,XMMWORD PTR [rsp+0x90]
  418ffa:	vmovups XMMWORD PTR [r12+r15*1+0x20],xmm0
  419001:	cmp    BYTE PTR [r14],0x0
  419005:	je     419016 <isspace@plt+0x15706>
  419007:	add    rbp,0x1
  41900b:	movsxd rax,DWORD PTR [r8]
  41900e:	mov    rsi,r14
  419011:	cmp    rbp,rax
  419014:	jl     418fa0 <isspace@plt+0x15690>
  419016:	mov    rdx,QWORD PTR [rsp+0x58]
  41901b:	mov    rcx,QWORD PTR [rsp+0x28]
  419020:	jmp    419030 <isspace@plt+0x15720>
  419022:	lea    r8,[rdx+0x4b8]
  419029:	lea    rcx,[rdx+0x4bc]
  419030:	mov    edi,DWORD PTR [r8]
  419033:	mov    eax,DWORD PTR [rcx]
  419035:	mov    DWORD PTR [rsp+0x40],eax
  419039:	test   eax,eax
  41903b:	jle    419388 <isspace@plt+0x15a78>
  419041:	mov    r12,QWORD PTR [rdx+0x4f0]
  419048:	lea    eax,[rdi-0x1]
  41904b:	add    rax,0x1
  41904f:	mov    QWORD PTR [rsp+0x38],rax
  419054:	mov    DWORD PTR [rsp+0x20],0x0
  41905c:	mov    rbx,QWORD PTR [rip+0x29f4d]        # 442fb0 <isspace@plt+0x3f6a0>
  419063:	mov    QWORD PTR [rsp+0x28],rdi
  419068:	nop    DWORD PTR [rax+rax*1+0x0]
  419070:	test   edi,edi
  419072:	jle    419373 <isspace@plt+0x15a63>
  419078:	xor    r15d,r15d
  41907b:	mov    QWORD PTR [rsp+0x30],r12
  419080:	mov    rdi,QWORD PTR [rbx]
  419083:	mov    rsi,QWORD PTR [r12+0x20]
  419088:	movsx  ebx,WORD PTR [r12+0x28]
  41908e:	movsx  ebp,WORD PTR [r12+0x2a]
  419094:	cmp    QWORD PTR [rip+0x2b6cc],0x0        # 444768 <isspace@plt+0x40e58>
  41909c:	je     4190c0 <isspace@plt+0x157b0>
  41909e:	mov    rax,QWORD PTR [rip+0x29f33]        # 442fd8 <isspace@plt+0x3f6c8>
  4190a5:	mov    r13d,DWORD PTR [rax]
  4190a8:	movzx  r14d,BYTE PTR [rip+0x2b6b2]        # 444762 <isspace@plt+0x40e52>
  4190b0:	jmp    419175 <isspace@plt+0x15865>
  4190b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4190bf:	nop
  4190c0:	mov    DWORD PTR [rsp+0x10],ebx
  4190c4:	mov    QWORD PTR [rsp+0x18],rsi
  4190c9:	mov    rbx,rdi
  4190cc:	xor    edi,edi
  4190ce:	lea    rsi,[rip+0x2b69b]        # 444770 <isspace@plt+0x40e60>
  4190d5:	lea    rdx,[rip+0x2b696]        # 444772 <isspace@plt+0x40e62>
  4190dc:	call   4030e0 <pair_content@plt>
  4190e1:	movzx  eax,WORD PTR [rip+0x2b688]        # 444770 <isspace@plt+0x40e60>
  4190e8:	cmp    eax,0xffff
  4190ed:	jne    4190f8 <isspace@plt+0x157e8>
  4190ef:	mov    WORD PTR [rip+0x2b678],0x7        # 444770 <isspace@plt+0x40e60>
  4190f8:	movzx  eax,WORD PTR [rip+0x2b673]        # 444772 <isspace@plt+0x40e62>
  4190ff:	cmp    eax,0xffff
  419104:	jne    41910f <isspace@plt+0x157ff>
  419106:	mov    WORD PTR [rip+0x2b663],0x0        # 444772 <isspace@plt+0x40e62>
  41910f:	call   403040 <use_default_colors@plt>
  419114:	test   eax,eax
  419116:	sete   r14b
  41911a:	sete   BYTE PTR [rip+0x2b641]        # 444762 <isspace@plt+0x40e52>
  419121:	mov    rax,QWORD PTR [rip+0x29e80]        # 442fa8 <isspace@plt+0x3f698>
  419128:	mov    eax,DWORD PTR [rax]
  41912a:	cmp    eax,0x7fff
  41912f:	jl     419136 <isspace@plt+0x15826>
  419131:	mov    eax,0x7fff
  419136:	mov    WORD PTR [rip+0x2b637],ax        # 444774 <isspace@plt+0x40e64>
  41913d:	mov    rax,QWORD PTR [rip+0x29e94]        # 442fd8 <isspace@plt+0x3f6c8>
  419144:	mov    r13d,DWORD PTR [rax]
  419147:	test   r13d,r13d
  41914a:	je     419166 <isspace@plt+0x15856>
  41914c:	lea    edi,[r13+0x2]
  419150:	imul   edi,edi
  419153:	mov    esi,0x2
  419158:	call   403470 <calloc@plt>
  41915d:	mov    QWORD PTR [rip+0x2b604],rax        # 444768 <isspace@plt+0x40e58>
  419164:	jmp    419169 <isspace@plt+0x15859>
  419166:	xor    r13d,r13d
  419169:	mov    rdi,rbx
  41916c:	mov    rsi,QWORD PTR [rsp+0x18]
  419171:	mov    ebx,DWORD PTR [rsp+0x10]
  419175:	movzx  ecx,WORD PTR [rip+0x2b5f4]        # 444770 <isspace@plt+0x40e60>
  41917c:	cmp    r13d,ebx
  41917f:	jg     419183 <isspace@plt+0x15873>
  419181:	mov    ebx,ecx
  419183:	movzx  eax,WORD PTR [rip+0x2b5e8]        # 444772 <isspace@plt+0x40e62>
  41918a:	cmp    r13d,ebp
  41918d:	jg     419191 <isspace@plt+0x15881>
  41918f:	mov    ebp,eax
  419191:	test   r14b,r14b
  419194:	jne    4191b0 <isspace@plt+0x158a0>
  419196:	movzx  edx,bx
  419199:	cmp    edx,0xffff
  41919f:	jne    4191a3 <isspace@plt+0x15893>
  4191a1:	mov    ebx,ecx
  4191a3:	movzx  ecx,bp
  4191a6:	cmp    ecx,0xffff
  4191ac:	jne    4191b0 <isspace@plt+0x158a0>
  4191ae:	mov    ebp,eax
  4191b0:	mov    rax,QWORD PTR [rip+0x2b5b1]        # 444768 <isspace@plt+0x40e58>
  4191b7:	xor    ecx,ecx
  4191b9:	test   rax,rax
  4191bc:	je     419310 <isspace@plt+0x15a00>
  4191c2:	mov    edx,ebx
  4191c4:	and    edx,ebp
  4191c6:	movzx  edx,dx
  4191c9:	cmp    edx,0xffff
  4191cf:	je     419310 <isspace@plt+0x15a00>
  4191d5:	movzx  ecx,bx
  4191d8:	movzx  edx,bp
  4191db:	mov    r8d,r13d
  4191de:	cmp    ecx,0xffff
  4191e4:	je     4191e9 <isspace@plt+0x158d9>
  4191e6:	mov    r8d,ebx
  4191e9:	cmp    edx,0xffff
  4191ef:	je     419200 <isspace@plt+0x158f0>
  4191f1:	mov    edx,ebp
  4191f3:	jmp    419204 <isspace@plt+0x158f4>
  4191f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4191ff:	nop
  419200:	lea    edx,[r13+0x1]
  419204:	movsx  ecx,r8w
  419208:	add    r13d,0x2
  41920c:	imul   r13d,ecx
  419210:	movsx  r14d,dx
  419214:	add    r14d,r13d
  419217:	movzx  ecx,WORD PTR [rax+r14*2]
  41921c:	test   cx,cx
  41921f:	jne    419310 <isspace@plt+0x15a00>
  419225:	mov    QWORD PTR [rsp+0x18],rsi
  41922a:	mov    QWORD PTR [rsp+0x10],rdi
  41922f:	movzx  eax,WORD PTR [rip+0x2b540]        # 444776 <isspace@plt+0x40e66>
  419236:	add    eax,0x1
  419239:	cmp    ax,WORD PTR [rip+0x2b534]        # 444774 <isspace@plt+0x40e64>
  419240:	jl     419247 <isspace@plt+0x15937>
  419242:	mov    eax,0x1
  419247:	mov    WORD PTR [rip+0x2b528],ax        # 444776 <isspace@plt+0x40e66>
  41924e:	movsx  edi,ax
  419251:	lea    rsi,[rsp+0x90]
  419259:	lea    rdx,[rsp+0x80]
  419261:	call   4030e0 <pair_content@plt>
  419266:	movzx  eax,WORD PTR [rsp+0x90]
  41926e:	mov    WORD PTR [rsp+0x48],ax
  419273:	movzx  eax,WORD PTR [rsp+0x80]
  41927b:	mov    WORD PTR [rsp+0x50],ax
  419280:	mov    rax,QWORD PTR [rip+0x29d51]        # 442fd8 <isspace@plt+0x3f6c8>
  419287:	mov    r13d,DWORD PTR [rax]
  41928a:	movsx  edi,WORD PTR [rip+0x2b4e5]        # 444776 <isspace@plt+0x40e66>
  419291:	movsx  esi,bx
  419294:	movsx  edx,bp
  419297:	call   403630 <init_pair@plt>
  41929c:	test   eax,eax
  41929e:	je     4192ac <isspace@plt+0x1599c>
  4192a0:	add    r14,r14
  4192a3:	add    r14,QWORD PTR [rip+0x2b4be]        # 444768 <isspace@plt+0x40e58>
  4192aa:	jmp    4192f8 <isspace@plt+0x159e8>
  4192ac:	mov    eax,r13d
  4192af:	add    eax,0x2
  4192b2:	movzx  ecx,WORD PTR [rsp+0x48]
  4192b7:	cmp    ecx,0xffff
  4192bd:	cmove  ecx,r13d
  4192c1:	movsx  ecx,cx
  4192c4:	imul   ecx,eax
  4192c7:	movzx  eax,WORD PTR [rsp+0x50]
  4192cc:	lea    edx,[r13+0x1]
  4192d0:	cmp    eax,0xffff
  4192d5:	cmove  eax,edx
  4192d8:	cwde   
  4192d9:	add    eax,ecx
  4192db:	mov    rcx,QWORD PTR [rip+0x2b486]        # 444768 <isspace@plt+0x40e58>
  4192e2:	mov    WORD PTR [rcx+rax*2],0x0
  4192e8:	movzx  eax,WORD PTR [rip+0x2b487]        # 444776 <isspace@plt+0x40e66>
  4192ef:	mov    WORD PTR [rcx+r14*2],ax
  4192f4:	lea    r14,[rcx+r14*2]
  4192f8:	mov    rdi,QWORD PTR [rsp+0x10]
  4192fd:	mov    rsi,QWORD PTR [rsp+0x18]
  419302:	movzx  ecx,WORD PTR [r14]
  419306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419310:	shl    ecx,0x8
  419313:	movzx  eax,cx
  419316:	or     esi,eax
  419318:	call   403900 <wattrset@plt>
  41931d:	mov    rbx,QWORD PTR [rip+0x29c8c]        # 442fb0 <isspace@plt+0x3f6a0>
  419324:	mov    rdi,QWORD PTR [rbx]
  419327:	mov    esi,DWORD PTR [rsp+0x20]
  41932b:	mov    edx,r15d
  41932e:	call   403090 <wmove@plt>
  419333:	cmp    eax,0xffffffff
  419336:	je     419348 <isspace@plt+0x15a38>
  419338:	mov    rdi,QWORD PTR [rbx]
  41933b:	mov    edx,0xffffffff
  419340:	mov    rsi,r12
  419343:	call   4031c0 <waddnstr@plt>
  419348:	add    r12,0x30
  41934c:	add    r15d,0x1
  419350:	mov    rdi,QWORD PTR [rsp+0x28]
  419355:	cmp    edi,r15d
  419358:	jne    419080 <isspace@plt+0x15770>
  41935e:	mov    rax,QWORD PTR [rsp+0x38]
  419363:	lea    rax,[rax+rax*2]
  419367:	shl    rax,0x4
  41936b:	mov    r12,QWORD PTR [rsp+0x30]
  419370:	add    r12,rax
  419373:	mov    eax,DWORD PTR [rsp+0x20]
  419377:	add    eax,0x1
  41937a:	mov    DWORD PTR [rsp+0x20],eax
  41937e:	cmp    eax,DWORD PTR [rsp+0x40]
  419382:	jne    419070 <isspace@plt+0x15760>
  419388:	mov    rax,QWORD PTR [rip+0x29c21]        # 442fb0 <isspace@plt+0x3f6a0>
  41938f:	mov    rdi,QWORD PTR [rax]
  419392:	call   403590 <wnoutrefresh@plt>
  419397:	call   403680 <doupdate@plt>
  41939c:	mov    rax,QWORD PTR fs:0x28
  4193a5:	cmp    rax,QWORD PTR [rsp+0xb0]
  4193ad:	jne    4193c1 <isspace@plt+0x15ab1>
  4193af:	add    rsp,0xb8
  4193b6:	pop    rbx
  4193b7:	pop    r12
  4193b9:	pop    r13
  4193bb:	pop    r14
  4193bd:	pop    r15
  4193bf:	pop    rbp
  4193c0:	ret    
  4193c1:	call   403280 <__stack_chk_fail@plt>
  4193c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4193d0:	push   rbx
  4193d1:	sub    rsp,0x10
  4193d5:	mov    rbx,rdi
  4193d8:	mov    rax,QWORD PTR fs:0x28
  4193e1:	mov    QWORD PTR [rsp+0x8],rax
  4193e6:	mov    rax,QWORD PTR [rip+0x29bc3]        # 442fb0 <isspace@plt+0x3f6a0>
  4193ed:	mov    rdi,QWORD PTR [rax]
  4193f0:	call   403890 <wclear@plt>
  4193f5:	mov    rbx,QWORD PTR [rbx+0xa8]
  4193fc:	test   rbx,rbx
  4193ff:	je     419426 <isspace@plt+0x15b16>
  419401:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41940b:	nop    DWORD PTR [rax+rax*1+0x0]
  419410:	mov    rax,QWORD PTR [rbx+0x40]
  419414:	mov    rdi,QWORD PTR [rax+0x18]
  419418:	call   41b510 <isspace@plt+0x17c00>
  41941d:	mov    rbx,QWORD PTR [rbx+0x60]
  419421:	test   rbx,rbx
  419424:	jne    419410 <isspace@plt+0x15b00>
  419426:	mov    rax,QWORD PTR fs:0x28
  41942f:	cmp    rax,QWORD PTR [rsp+0x8]
  419434:	jne    41943c <isspace@plt+0x15b2c>
  419436:	add    rsp,0x10
  41943a:	pop    rbx
  41943b:	ret    
  41943c:	call   403280 <__stack_chk_fail@plt>
  419441:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41944b:	nop    DWORD PTR [rax+rax*1+0x0]
  419450:	push   rbx
  419451:	sub    rsp,0x10
  419455:	mov    rax,QWORD PTR fs:0x28
  41945e:	mov    QWORD PTR [rsp+0x8],rax
  419463:	cmp    DWORD PTR [rip+0x29c66],0x1        # 4430d0 <isspace@plt+0x3f7c0>
  41946a:	je     41948e <isspace@plt+0x15b7e>
  41946c:	xor    edi,edi
  41946e:	mov    esi,0x14
  419473:	call   403500 <kill@plt>
  419478:	mov    rax,QWORD PTR fs:0x28
  419481:	cmp    rax,QWORD PTR [rsp+0x8]
  419486:	jne    4194b8 <isspace@plt+0x15ba8>
  419488:	add    rsp,0x10
  41948c:	pop    rbx
  41948d:	ret    
  41948e:	mov    rbx,QWORD PTR [rip+0x29b63]        # 442ff8 <isspace@plt+0x3f6e8>
  419495:	mov    rcx,QWORD PTR [rbx]
  419498:	lea    rdi,[rip+0x185dd]        # 431a7c <isspace@plt+0x2e16c>
  41949f:	mov    esi,0x7
  4194a4:	mov    edx,0x1
  4194a9:	call   403810 <fwrite@plt>
  4194ae:	mov    rdi,QWORD PTR [rbx]
  4194b1:	call   4035f0 <fflush@plt>
  4194b6:	jmp    41946c <isspace@plt+0x15b5c>
  4194b8:	call   403280 <__stack_chk_fail@plt>
  4194bd:	nop    DWORD PTR [rax]
  4194c0:	push   rax
  4194c1:	mov    rax,QWORD PTR fs:0x28
  4194ca:	mov    QWORD PTR [rsp],rax
  4194ce:	mov    rax,QWORD PTR fs:0x28
  4194d7:	cmp    rax,QWORD PTR [rsp]
  4194db:	jne    4194df <isspace@plt+0x15bcf>
  4194dd:	pop    rax
  4194de:	ret    
  4194df:	call   403280 <__stack_chk_fail@plt>
  4194e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4194ee:	xchg   ax,ax
  4194f0:	push   r15
  4194f2:	push   r14
  4194f4:	push   rbx
  4194f5:	sub    rsp,0x10
  4194f9:	mov    rbx,rsi
  4194fc:	mov    r15,rdi
  4194ff:	mov    rax,QWORD PTR fs:0x28
  419508:	mov    QWORD PTR [rsp+0x8],rax
  41950d:	mov    rdi,QWORD PTR [rdi+0x4c8]
  419514:	call   403380 <termkey_getkey@plt>
  419519:	cmp    eax,0x3
  41951c:	je     4195b0 <isspace@plt+0x15ca0>
  419522:	cmp    eax,0x2
  419525:	jne    4195f3 <isspace@plt+0x15ce3>
  41952b:	mov    rdi,QWORD PTR [r15+0x4c8]
  419532:	call   4036f0 <termkey_destroy@plt>
  419537:	call   403130 <__errno_location@plt>
  41953c:	mov    r14,rax
  41953f:	mov    DWORD PTR [rax],0x0
  419545:	lea    rdi,[rip+0x13c67]        # 42d1b3 <isspace@plt+0x298a3>
  41954c:	mov    esi,0x2
  419551:	xor    eax,eax
  419553:	call   4037a0 <open@plt>
  419558:	mov    ebx,eax
  41955a:	test   eax,eax
  41955c:	je     419579 <isspace@plt+0x15c69>
  41955e:	cmp    ebx,0xffffffff
  419561:	je     41961f <isspace@plt+0x15d0f>
  419567:	xor    esi,esi
  419569:	mov    edi,ebx
  41956b:	call   4032c0 <dup2@plt>
  419570:	cmp    eax,0xffffffff
  419573:	je     419618 <isspace@plt+0x15d08>
  419579:	mov    edi,ebx
  41957b:	call   4033c0 <close@plt>
  419580:	xor    edi,edi
  419582:	mov    esi,0x18
  419587:	call   403760 <termkey_new@plt>
  41958c:	test   rax,rax
  41958f:	je     41961f <isspace@plt+0x15d0f>
  419595:	mov    rbx,rax
  419598:	mov    esi,0x2
  41959d:	mov    rdi,rax
  4195a0:	call   403390 <termkey_set_canonflags@plt>
  4195a5:	mov    QWORD PTR [r15+0x4c8],rbx
  4195ac:	xor    eax,eax
  4195ae:	jmp    4195f9 <isspace@plt+0x15ce9>
  4195b0:	mov    DWORD PTR [rsp],0x0
  4195b7:	mov    WORD PTR [rsp+0x4],0x1
  4195be:	mov    rdi,QWORD PTR [r15+0x4c8]
  4195c5:	call   403370 <termkey_get_waittime@plt>
  4195ca:	mov    rdi,rsp
  4195cd:	mov    esi,0x1
  4195d2:	mov    edx,eax
  4195d4:	call   403720 <poll@plt>
  4195d9:	mov    ecx,eax
  4195db:	mov    eax,0x3
  4195e0:	test   ecx,ecx
  4195e2:	jne    4195f3 <isspace@plt+0x15ce3>
  4195e4:	mov    rdi,QWORD PTR [r15+0x4c8]
  4195eb:	mov    rsi,rbx
  4195ee:	call   403110 <termkey_getkey_force@plt>
  4195f3:	cmp    eax,0x1
  4195f6:	sete   al
  4195f9:	mov    rcx,QWORD PTR fs:0x28
  419602:	cmp    rcx,QWORD PTR [rsp+0x8]
  419607:	jne    419613 <isspace@plt+0x15d03>
  419609:	add    rsp,0x10
  41960d:	pop    rbx
  41960e:	pop    r14
  419610:	pop    r15
  419612:	ret    
  419613:	call   403280 <__stack_chk_fail@plt>
  419618:	mov    edi,ebx
  41961a:	call   4033c0 <close@plt>
  41961f:	mov    QWORD PTR [r15+0x4c8],0x0
  41962a:	mov    edi,DWORD PTR [r14]
  41962d:	test   edi,edi
  41962f:	jne    41963a <isspace@plt+0x15d2a>
  419631:	lea    rdx,[rip+0x1844b]        # 431a83 <isspace@plt+0x2e173>
  419638:	jmp    419642 <isspace@plt+0x15d32>
  41963a:	call   403880 <strerror@plt>
  41963f:	mov    rdx,rax
  419642:	lea    rsi,[rip+0x1843b]        # 431a84 <isspace@plt+0x2e174>
  419649:	xor    eax,eax
  41964b:	mov    rdi,r15
  41964e:	call   419760 <isspace@plt+0x15e50>
  419653:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41965d:	nop    DWORD PTR [rax]
  419660:	push   rbx
  419661:	sub    rsp,0x10
  419665:	mov    rbx,rdi
  419668:	mov    rax,QWORD PTR fs:0x28
  419671:	mov    QWORD PTR [rsp+0x8],rax
  419676:	mov    edi,0x1
  41967b:	call   403180 <curs_set@plt>
  419680:	call   4035b0 <reset_shell_mode@plt>
  419685:	mov    rdi,QWORD PTR [rbx+0x4c8]
  41968c:	call   4030a0 <termkey_stop@plt>
  419691:	mov    rax,QWORD PTR fs:0x28
  41969a:	cmp    rax,QWORD PTR [rsp+0x8]
  41969f:	jne    4196a7 <isspace@plt+0x15d97>
  4196a1:	add    rsp,0x10
  4196a5:	pop    rbx
  4196a6:	ret    
  4196a7:	call   403280 <__stack_chk_fail@plt>
  4196ac:	nop    DWORD PTR [rax+0x0]
  4196b0:	push   rax
  4196b1:	mov    rax,QWORD PTR fs:0x28
  4196ba:	mov    QWORD PTR [rsp],rax
  4196be:	mov    rdi,QWORD PTR [rdi+0x4c8]
  4196c5:	call   403490 <termkey_start@plt>
  4196ca:	call   403660 <reset_prog_mode@plt>
  4196cf:	mov    rax,QWORD PTR [rip+0x298da]        # 442fb0 <isspace@plt+0x3f6a0>
  4196d6:	mov    rdi,QWORD PTR [rax]
  4196d9:	call   403890 <wclear@plt>
  4196de:	xor    edi,edi
  4196e0:	call   403180 <curs_set@plt>
  4196e5:	mov    rax,QWORD PTR fs:0x28
  4196ee:	cmp    rax,QWORD PTR [rsp]
  4196f2:	jne    4196f6 <isspace@plt+0x15de6>
  4196f4:	pop    rax
  4196f5:	ret    
  4196f6:	call   403280 <__stack_chk_fail@plt>
  4196fb:	nop    DWORD PTR [rax+rax*1+0x0]
  419700:	push   rax
  419701:	mov    rax,QWORD PTR fs:0x28
  41970a:	mov    QWORD PTR [rsp],rax
  41970e:	mov    rax,QWORD PTR [rdi+0x4c8]
  419715:	mov    rcx,QWORD PTR fs:0x28
  41971e:	cmp    rcx,QWORD PTR [rsp]
  419722:	jne    419726 <isspace@plt+0x15e16>
  419724:	pop    rcx
  419725:	ret    
  419726:	call   403280 <__stack_chk_fail@plt>
  41972b:	nop    DWORD PTR [rax+rax*1+0x0]
  419730:	push   rax
  419731:	mov    rax,QWORD PTR fs:0x28
  41973a:	mov    QWORD PTR [rsp],rax
  41973e:	mov    rax,QWORD PTR [rip+0x29893]        # 442fd8 <isspace@plt+0x3f6c8>
  419745:	mov    eax,DWORD PTR [rax]
  419747:	mov    rcx,QWORD PTR fs:0x28
  419750:	cmp    rcx,QWORD PTR [rsp]
  419754:	jne    419758 <isspace@plt+0x15e48>
  419756:	pop    rcx
  419757:	ret    
  419758:	call   403280 <__stack_chk_fail@plt>
  41975d:	nop    DWORD PTR [rax]
  419760:	sub    rsp,0xd8
  419767:	test   al,al
  419769:	je     4197aa <isspace@plt+0x15e9a>
  41976b:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  419771:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  419777:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  41977d:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  419786:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  41978f:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  419798:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  4197a1:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4197aa:	mov    QWORD PTR [rsp+0x48],r9
  4197af:	mov    QWORD PTR [rsp+0x40],r8
  4197b4:	mov    QWORD PTR [rsp+0x38],rcx
  4197b9:	mov    QWORD PTR [rsp+0x30],rdx
  4197be:	lea    rax,[rsp+0x20]
  4197c3:	mov    QWORD PTR [rsp+0x10],rax
  4197c8:	lea    rax,[rsp+0xe0]
  4197d0:	mov    QWORD PTR [rsp+0x8],rax
  4197d5:	movabs rax,0x3000000010
  4197df:	mov    QWORD PTR [rsp],rax
  4197e3:	mov    rdx,rsp
  4197e6:	call   4185e0 <isspace@plt+0x14cd0>
  4197eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4197f0:	push   rax
  4197f1:	mov    rax,QWORD PTR fs:0x28
  4197fa:	mov    QWORD PTR [rsp],rax
  4197fe:	mov    rax,QWORD PTR [rdi+0x38]
  419802:	mov    rcx,QWORD PTR [rax+0x4e0]
  419809:	imul   edx,DWORD PTR [rdi+0x48],0x4e
  41980d:	add    edx,esi
  41980f:	shl    rdx,0x4
  419813:	mov    rax,QWORD PTR [rcx+rdx*1]
  419817:	mov    rdx,QWORD PTR [rcx+rdx*1+0x8]
  41981c:	mov    rcx,QWORD PTR fs:0x28
  419825:	cmp    rcx,QWORD PTR [rsp]
  419829:	jne    41982d <isspace@plt+0x15f1d>
  41982b:	pop    rcx
  41982c:	ret    
  41982d:	call   403280 <__stack_chk_fail@plt>
  419832:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41983c:	nop    DWORD PTR [rax+0x0]
  419840:	push   rbp
  419841:	push   r15
  419843:	push   r14
  419845:	push   r13
  419847:	push   r12
  419849:	push   rbx
  41984a:	sub    rsp,0x28
  41984e:	mov    rax,QWORD PTR fs:0x28
  419857:	mov    QWORD PTR [rsp+0x20],rax
  41985c:	test   BYTE PTR [rdi+0x71],0x1
  419860:	je     41997e <isspace@plt+0x1606e>
  419866:	mov    rcx,QWORD PTR [rdi+0x38]
  41986a:	xor    edx,edx
  41986c:	cmp    QWORD PTR [rcx+0xb0],rdi
  419873:	sete   bl
  419876:	movsxd r12,DWORD PTR [rdi+0x54]
  41987a:	test   r12,r12
  41987d:	js     41997e <isspace@plt+0x1606e>
  419883:	mov    r8d,DWORD PTR [rdi+0x58]
  419887:	mov    r9d,DWORD PTR [rdi+0x50]
  41988b:	lea    eax,[r9+r8*1]
  41988f:	test   eax,eax
  419891:	jle    41997e <isspace@plt+0x1606e>
  419897:	mov    ebp,DWORD PTR [rcx+0x4b8]
  41989d:	cmp    ebp,r12d
  4198a0:	jle    41997e <isspace@plt+0x1606e>
  4198a6:	cmp    DWORD PTR [rcx+0x4bc],eax
  4198ac:	jl     41997e <isspace@plt+0x1606e>
  4198b2:	mov    dl,bl
  4198b4:	add    edx,0x49
  4198b7:	mov    rax,QWORD PTR [rcx+0x4e0]
  4198be:	imul   edi,DWORD PTR [rdi+0x48],0x4e
  4198c2:	add    edi,edx
  4198c4:	shl    rdi,0x4
  4198c8:	vmovups xmm0,XMMWORD PTR [rax+rdi*1]
  4198cd:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  4198d3:	cmp    BYTE PTR [rsi],0x0
  4198d6:	je     41997e <isspace@plt+0x1606e>
  4198dc:	lea    eax,[r9+r8*1]
  4198e0:	add    eax,0xffffffff
  4198e3:	imul   ebp,eax
  4198e6:	movsxd rax,ebp
  4198e9:	lea    rax,[rax+rax*2]
  4198ed:	shl    rax,0x4
  4198f1:	add    rax,QWORD PTR [rcx+0x4f0]
  4198f8:	mov    QWORD PTR [rsp+0x8],rax
  4198fd:	mov    rbp,rsi
  419900:	mov    QWORD PTR [rsp],rcx
  419904:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41990e:	xchg   ax,ax
  419910:	movzx  eax,BYTE PTR [rbp+0x1]
  419914:	add    rbp,0x1
  419918:	and    al,0xc0
  41991a:	cmp    al,0x80
  41991c:	je     419910 <isspace@plt+0x16000>
  41991e:	mov    rbx,rbp
  419921:	sub    rbx,rsi
  419924:	je     41997e <isspace@plt+0x1606e>
  419926:	cmp    rbx,0xf
  41992a:	mov    eax,0xf
  41992f:	cmovae rbx,rax
  419933:	lea    r15,[r12+r12*2]
  419937:	shl    r15,0x4
  41993b:	mov    r13,QWORD PTR [rsp+0x8]
  419940:	lea    r14,[r15+r13*1]
  419944:	mov    rdi,r14
  419947:	mov    rdx,rbx
  41994a:	call   403150 <strncpy@plt>
  41994f:	mov    rcx,QWORD PTR [rsp]
  419953:	mov    BYTE PTR [rbx+r14*1],0x0
  419958:	vmovaps xmm0,XMMWORD PTR [rsp+0x10]
  41995e:	vmovups XMMWORD PTR [r13+r15*1+0x20],xmm0
  419965:	cmp    BYTE PTR [rbp+0x0],0x0
  419969:	je     41997e <isspace@plt+0x1606e>
  41996b:	add    r12,0x1
  41996f:	movsxd rax,DWORD PTR [rcx+0x4b8]
  419976:	mov    rsi,rbp
  419979:	cmp    r12,rax
  41997c:	jl     419910 <isspace@plt+0x16000>
  41997e:	mov    rax,QWORD PTR fs:0x28
  419987:	cmp    rax,QWORD PTR [rsp+0x20]
  41998c:	jne    41999d <isspace@plt+0x1608d>
  41998e:	add    rsp,0x28
  419992:	pop    rbx
  419993:	pop    r12
  419995:	pop    r13
  419997:	pop    r14
  419999:	pop    r15
  41999b:	pop    rbp
  41999c:	ret    
  41999d:	call   403280 <__stack_chk_fail@plt>
  4199a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4199ac:	nop    DWORD PTR [rax+0x0]
  4199b0:	push   rax
  4199b1:	mov    rax,rdi
  4199b4:	mov    rcx,QWORD PTR fs:0x28
  4199bd:	mov    QWORD PTR [rsp],rcx
  4199c1:	mov    DWORD PTR [rdi+0x70],esi
  4199c4:	test   esi,0x200
  4199ca:	jne    4199d2 <isspace@plt+0x160c2>
  4199cc:	mov    rdi,QWORD PTR [rax+0x38]
  4199d0:	jmp    419a2b <isspace@plt+0x1611b>
  4199d2:	mov    rdi,QWORD PTR [rax+0x38]
  4199d6:	mov    r8,QWORD PTR [rdi+0xa8]
  4199dd:	mov    rdx,r8
  4199e0:	mov    rcx,rdx
  4199e3:	mov    rdx,QWORD PTR [rdx+0x60]
  4199e7:	test   rdx,rdx
  4199ea:	jne    4199e0 <isspace@plt+0x160d0>
  4199ec:	cmp    rcx,rax
  4199ef:	je     419a2b <isspace@plt+0x1611b>
  4199f1:	mov    rsi,QWORD PTR [rax+0x68]
  4199f5:	test   rsi,rsi
  4199f8:	je     419a02 <isspace@plt+0x160f2>
  4199fa:	mov    rdx,QWORD PTR [rax+0x60]
  4199fe:	mov    QWORD PTR [rsi+0x60],rdx
  419a02:	mov    rdx,QWORD PTR [rax+0x60]
  419a06:	test   rdx,rdx
  419a09:	je     419a0f <isspace@plt+0x160ff>
  419a0b:	mov    QWORD PTR [rdx+0x68],rsi
  419a0f:	cmp    r8,rax
  419a12:	jne    419a1b <isspace@plt+0x1610b>
  419a14:	mov    QWORD PTR [rdi+0xa8],rdx
  419a1b:	mov    QWORD PTR [rcx+0x60],rax
  419a1f:	mov    QWORD PTR [rax+0x68],rcx
  419a23:	mov    QWORD PTR [rax+0x60],0x0
  419a2b:	call   418b30 <isspace@plt+0x15220>
  419a30:	mov    rax,QWORD PTR fs:0x28
  419a39:	cmp    rax,QWORD PTR [rsp]
  419a3d:	jne    419a41 <isspace@plt+0x16131>
  419a3f:	pop    rax
  419a40:	ret    
  419a41:	call   403280 <__stack_chk_fail@plt>
  419a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419a50:	push   rax
  419a51:	mov    rax,QWORD PTR fs:0x28
  419a5a:	mov    QWORD PTR [rsp],rax
  419a5e:	mov    eax,DWORD PTR [rdi+0x70]
  419a61:	mov    rcx,QWORD PTR fs:0x28
  419a6a:	cmp    rcx,QWORD PTR [rsp]
  419a6e:	jne    419a72 <isspace@plt+0x16162>
  419a70:	pop    rcx
  419a71:	ret    
  419a72:	call   403280 <__stack_chk_fail@plt>
  419a77:	nop    WORD PTR [rax+rax*1+0x0]
  419a80:	push   rbp
  419a81:	push   r15
  419a83:	push   r14
  419a85:	push   r13
  419a87:	push   r12
  419a89:	push   rbx
  419a8a:	sub    rsp,0x38
  419a8e:	mov    rax,QWORD PTR fs:0x28
  419a97:	mov    QWORD PTR [rsp+0x30],rax
  419a9c:	cmp    esi,0x4d
  419a9f:	jle    419aa8 <isspace@plt+0x16198>
  419aa1:	xor    eax,eax
  419aa3:	jmp    419d79 <isspace@plt+0x16469>
  419aa8:	mov    al,0x1
  419aaa:	test   rdx,rdx
  419aad:	je     419d79 <isspace@plt+0x16469>
  419ab3:	mov    ebp,esi
  419ab5:	mov    rax,QWORD PTR [rdi+0x38]
  419ab9:	mov    QWORD PTR [rsp+0x18],rax
  419abe:	mov    rax,QWORD PTR [rax+0x4e0]
  419ac5:	mov    QWORD PTR [rsp+0x8],rdi
  419aca:	movsxd rcx,DWORD PTR [rdi+0x48]
  419ace:	imul   rcx,rcx,0x4e0
  419ad5:	vmovups xmm0,XMMWORD PTR [rax+rcx*1+0x410]
  419ade:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  419ae4:	mov    rdi,rdx
  419ae7:	call   403850 <strdup@plt>
  419aec:	mov    QWORD PTR [rsp+0x10],rax
  419af1:	test   rax,rax
  419af4:	je     419d3f <isspace@plt+0x1642f>
  419afa:	lea    r13,[rip+0x1496b]        # 42e46c <isspace@plt+0x2ab5c>
  419b01:	lea    r12,[rip+0x17ef6]        # 4319fe <isspace@plt+0x2e0ee>
  419b08:	mov    rbx,QWORD PTR [rsp+0x10]
  419b0d:	nop    DWORD PTR [rax]
  419b10:	mov    r15,rbx
  419b13:	lea    rbx,[rbx+0x1]
  419b17:	cmp    BYTE PTR [r15],0x20
  419b1b:	je     419b10 <isspace@plt+0x16200>
  419b1d:	mov    esi,0x2c
  419b22:	mov    rdi,r15
  419b25:	call   4032f0 <strchr@plt>
  419b2a:	test   rax,rax
  419b2d:	je     419b3b <isspace@plt+0x1622b>
  419b2f:	mov    rbx,rax
  419b32:	add    rbx,0x1
  419b36:	mov    BYTE PTR [rax],0x0
  419b39:	jmp    419b3d <isspace@plt+0x1622d>
  419b3b:	xor    ebx,ebx
  419b3d:	mov    esi,0x3a
  419b42:	mov    rdi,r15
  419b45:	call   4032f0 <strchr@plt>
  419b4a:	test   rax,rax
  419b4d:	je     419b6d <isspace@plt+0x1625d>
  419b4f:	mov    r14,rax
  419b52:	mov    BYTE PTR [rax],0x0
  419b55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419b5f:	nop
  419b60:	cmp    BYTE PTR [r14+0x1],0x20
  419b65:	lea    r14,[r14+0x1]
  419b69:	je     419b60 <isspace@plt+0x16250>
  419b6b:	jmp    419b70 <isspace@plt+0x16260>
  419b6d:	xor    r14d,r14d
  419b70:	mov    rdi,r15
  419b73:	mov    rsi,r13
  419b76:	call   4030f0 <strcasecmp@plt>
  419b7b:	test   eax,eax
  419b7d:	je     419c74 <isspace@plt+0x16364>
  419b83:	mov    rdi,r15
  419b86:	mov    rsi,r12
  419b89:	call   4030f0 <strcasecmp@plt>
  419b8e:	test   eax,eax
  419b90:	je     419c87 <isspace@plt+0x16377>
  419b96:	mov    rdi,r15
  419b99:	lea    rsi,[rip+0x17e5b]        # 4319fb <isspace@plt+0x2e0eb>
  419ba0:	call   4030f0 <strcasecmp@plt>
  419ba5:	test   eax,eax
  419ba7:	je     419c9a <isspace@plt+0x1638a>
  419bad:	mov    rdi,r15
  419bb0:	lea    rsi,[rip+0x17e4f]        # 431a06 <isspace@plt+0x2e0f6>
  419bb7:	call   4030f0 <strcasecmp@plt>
  419bbc:	test   eax,eax
  419bbe:	je     419cb2 <isspace@plt+0x163a2>
  419bc4:	mov    rdi,r15
  419bc7:	lea    rsi,[rip+0x17e35]        # 431a03 <isspace@plt+0x2e0f3>
  419bce:	call   4030f0 <strcasecmp@plt>
  419bd3:	test   eax,eax
  419bd5:	je     419cc2 <isspace@plt+0x163b2>
  419bdb:	mov    rdi,r15
  419bde:	lea    rsi,[rip+0x17e2c]        # 431a11 <isspace@plt+0x2e101>
  419be5:	call   4030f0 <strcasecmp@plt>
  419bea:	test   eax,eax
  419bec:	je     419cd6 <isspace@plt+0x163c6>
  419bf2:	mov    rdi,r15
  419bf5:	lea    rsi,[rip+0x17e12]        # 431a0e <isspace@plt+0x2e0fe>
  419bfc:	call   4030f0 <strcasecmp@plt>
  419c01:	test   eax,eax
  419c03:	je     419ce6 <isspace@plt+0x163d6>
  419c09:	mov    rdi,r15
  419c0c:	lea    rsi,[rip+0x17e0c]        # 431a1f <isspace@plt+0x2e10f>
  419c13:	call   4030f0 <strcasecmp@plt>
  419c18:	test   eax,eax
  419c1a:	je     419cfb <isspace@plt+0x163eb>
  419c20:	mov    rdi,r15
  419c23:	lea    rsi,[rip+0x17df2]        # 431a1c <isspace@plt+0x2e10c>
  419c2a:	call   4030f0 <strcasecmp@plt>
  419c2f:	test   eax,eax
  419c31:	je     419d0b <isspace@plt+0x163fb>
  419c37:	mov    rdi,r15
  419c3a:	lea    rsi,[rip+0x14f95]        # 42ebd6 <isspace@plt+0x2b2c6>
  419c41:	call   4030f0 <strcasecmp@plt>
  419c46:	test   eax,eax
  419c48:	je     419d20 <isspace@plt+0x16410>
  419c4e:	mov    rdi,r15
  419c51:	lea    rsi,[rip+0x17dcd]        # 431a25 <isspace@plt+0x2e115>
  419c58:	call   4030f0 <strcasecmp@plt>
  419c5d:	test   eax,eax
  419c5f:	jne    419c79 <isspace@plt+0x16369>
  419c61:	mov    rax,QWORD PTR [rsp+0x8]
  419c66:	mov    rdi,QWORD PTR [rax+0x38]
  419c6a:	lea    rsi,[rsp+0x2a]
  419c6f:	jmp    419d2e <isspace@plt+0x1641e>
  419c74:	or     BYTE PTR [rsp+0x22],0x4
  419c79:	test   rbx,rbx
  419c7c:	jne    419b10 <isspace@plt+0x16200>
  419c82:	jmp    419d3f <isspace@plt+0x1642f>
  419c87:	or     BYTE PTR [rsp+0x22],0x20
  419c8c:	test   rbx,rbx
  419c8f:	jne    419b10 <isspace@plt+0x16200>
  419c95:	jmp    419d3f <isspace@plt+0x1642f>
  419c9a:	mov    eax,0xffdfffff
  419c9f:	and    QWORD PTR [rsp+0x20],rax
  419ca4:	test   rbx,rbx
  419ca7:	jne    419b10 <isspace@plt+0x16200>
  419cad:	jmp    419d3f <isspace@plt+0x1642f>
  419cb2:	or     BYTE PTR [rsp+0x23],0x80
  419cb7:	test   rbx,rbx
  419cba:	jne    419b10 <isspace@plt+0x16200>
  419cc0:	jmp    419d3f <isspace@plt+0x1642f>
  419cc2:	and    QWORD PTR [rsp+0x20],0x7fffffff
  419ccb:	test   rbx,rbx
  419cce:	jne    419b10 <isspace@plt+0x16200>
  419cd4:	jmp    419d3f <isspace@plt+0x1642f>
  419cd6:	or     BYTE PTR [rsp+0x22],0x2
  419cdb:	test   rbx,rbx
  419cde:	jne    419b10 <isspace@plt+0x16200>
  419ce4:	jmp    419d3f <isspace@plt+0x1642f>
  419ce6:	mov    eax,0xfffdffff
  419ceb:	and    QWORD PTR [rsp+0x20],rax
  419cf0:	test   rbx,rbx
  419cf3:	jne    419b10 <isspace@plt+0x16200>
  419cf9:	jmp    419d3f <isspace@plt+0x1642f>
  419cfb:	or     BYTE PTR [rsp+0x22],0x8
  419d00:	test   rbx,rbx
  419d03:	jne    419b10 <isspace@plt+0x16200>
  419d09:	jmp    419d3f <isspace@plt+0x1642f>
  419d0b:	mov    eax,0xfff7ffff
  419d10:	and    QWORD PTR [rsp+0x20],rax
  419d15:	test   rbx,rbx
  419d18:	jne    419b10 <isspace@plt+0x16200>
  419d1e:	jmp    419d3f <isspace@plt+0x1642f>
  419d20:	mov    rax,QWORD PTR [rsp+0x8]
  419d25:	mov    rdi,QWORD PTR [rax+0x38]
  419d29:	lea    rsi,[rsp+0x28]
  419d2e:	mov    rdx,r14
  419d31:	call   419e00 <isspace@plt+0x164f0>
  419d36:	test   rbx,rbx
  419d39:	jne    419b10 <isspace@plt+0x16200>
  419d3f:	mov    rax,QWORD PTR [rsp+0x18]
  419d44:	mov    rax,QWORD PTR [rax+0x4e0]
  419d4b:	mov    rcx,QWORD PTR [rsp+0x8]
  419d50:	movsxd rcx,DWORD PTR [rcx+0x48]
  419d54:	imul   rcx,rcx,0x4e
  419d58:	movsxd rdx,ebp
  419d5b:	add    rdx,rcx
  419d5e:	shl    rdx,0x4
  419d62:	vmovaps xmm0,XMMWORD PTR [rsp+0x20]
  419d68:	vmovups XMMWORD PTR [rax+rdx*1],xmm0
  419d6d:	mov    rdi,QWORD PTR [rsp+0x10]
  419d72:	call   4030d0 <free@plt>
  419d77:	mov    al,0x1
  419d79:	mov    rcx,QWORD PTR fs:0x28
  419d82:	cmp    rcx,QWORD PTR [rsp+0x30]
  419d87:	jne    419d98 <isspace@plt+0x16488>
  419d89:	add    rsp,0x38
  419d8d:	pop    rbx
  419d8e:	pop    r12
  419d90:	pop    r13
  419d92:	pop    r14
  419d94:	pop    r15
  419d96:	pop    rbp
  419d97:	ret    
  419d98:	call   403280 <__stack_chk_fail@plt>
  419d9d:	nop    DWORD PTR [rax]
  419da0:	push   rax
  419da1:	mov    rax,QWORD PTR fs:0x28
  419daa:	mov    QWORD PTR [rsp],rax
  419dae:	mov    eax,DWORD PTR [rdi+0x4c]
  419db1:	mov    rcx,QWORD PTR fs:0x28
  419dba:	cmp    rcx,QWORD PTR [rsp]
  419dbe:	jne    419dc2 <isspace@plt+0x164b2>
  419dc0:	pop    rcx
  419dc1:	ret    
  419dc2:	call   403280 <__stack_chk_fail@plt>
  419dc7:	nop    WORD PTR [rax+rax*1+0x0]
  419dd0:	push   rax
  419dd1:	mov    rax,QWORD PTR fs:0x28
  419dda:	mov    QWORD PTR [rsp],rax
  419dde:	mov    eax,DWORD PTR [rdi+0x50]
  419de1:	mov    rcx,QWORD PTR fs:0x28
  419dea:	cmp    rcx,QWORD PTR [rsp]
  419dee:	jne    419df2 <isspace@plt+0x164e2>
  419df0:	pop    rcx
  419df1:	ret    
  419df2:	call   403280 <__stack_chk_fail@plt>
  419df7:	nop    WORD PTR [rax+rax*1+0x0]
  419e00:	push   rbp
  419e01:	push   r15
  419e03:	push   r14
  419e05:	push   r13
  419e07:	push   r12
  419e09:	push   rbx
  419e0a:	sub    rsp,0x28
  419e0e:	mov    rax,QWORD PTR fs:0x28
  419e17:	mov    QWORD PTR [rsp+0x20],rax
  419e1c:	test   rdx,rdx
  419e1f:	je     41a383 <isspace@plt+0x16a73>
  419e25:	mov    rbx,rdx
  419e28:	mov    rbp,rsi
  419e2b:	mov    al,BYTE PTR [rdx]
  419e2d:	cmp    al,0x23
  419e2f:	jne    41a014 <isspace@plt+0x16704>
  419e35:	mov    r15,rdi
  419e38:	mov    rdi,rbx
  419e3b:	call   403250 <strlen@plt>
  419e40:	cmp    rax,0x7
  419e44:	jne    41a044 <isspace@plt+0x16734>
  419e4a:	add    rbx,0x1
  419e4e:	call   4038f0 <__ctype_b_loc@plt>
  419e53:	mov    rax,QWORD PTR [rax]
  419e56:	mov    rcx,rbx
  419e59:	nop    DWORD PTR [rax+0x0]
  419e60:	movzx  edx,BYTE PTR [rcx]
  419e63:	add    rcx,0x1
  419e67:	test   BYTE PTR [rax+rdx*2+0x1],0x10
  419e6c:	jne    419e60 <isspace@plt+0x16550>
  419e6e:	test   dl,dl
  419e70:	jne    41a383 <isspace@plt+0x16a73>
  419e76:	lea    rsi,[rip+0x17bad]        # 431a2a <isspace@plt+0x2e11a>
  419e7d:	lea    rdx,[rsp+0x1f]
  419e82:	lea    rcx,[rsp+0x1e]
  419e87:	lea    r8,[rsp+0x1d]
  419e8c:	xor    eax,eax
  419e8e:	mov    rdi,rbx
  419e91:	call   403600 <__isoc99_sscanf@plt>
  419e96:	cmp    eax,0x3
  419e99:	jne    41a383 <isspace@plt+0x16a73>
  419e9f:	movzx  r13d,BYTE PTR [rsp+0x1f]
  419ea5:	movzx  r8d,BYTE PTR [rsp+0x1e]
  419eab:	movzx  edi,BYTE PTR [rsp+0x1d]
  419eb0:	mov    ebx,DWORD PTR [rip+0x2921a]        # 4430d0 <isspace@plt+0x3f7c0>
  419eb6:	cmp    ebx,0xffffffff
  419eb9:	jne    419f00 <isspace@plt+0x165f0>
  419ebb:	mov    rax,QWORD PTR [r15+0xa0]
  419ec2:	xor    ebx,ebx
  419ec4:	cmp    BYTE PTR [rax+0x7fe],0x0
  419ecb:	je     419efa <isspace@plt+0x165ea>
  419ecd:	mov    r14,rbp
  419ed0:	mov    r15,r8
  419ed3:	mov    rbp,rdi
  419ed6:	call   403540 <can_change_color@plt>
  419edb:	mov    rdi,rbp
  419ede:	mov    r8,r15
  419ee1:	mov    rbp,r14
  419ee4:	test   al,al
  419ee6:	je     419efa <isspace@plt+0x165ea>
  419ee8:	mov    rax,QWORD PTR [rip+0x290e9]        # 442fd8 <isspace@plt+0x3f6c8>
  419eef:	xor    ebx,ebx
  419ef1:	cmp    DWORD PTR [rax],0xff
  419ef7:	setg   bl
  419efa:	mov    DWORD PTR [rip+0x291d0],ebx        # 4430d0 <isspace@plt+0x3f7c0>
  419f00:	test   ebx,ebx
  419f02:	je     41a152 <isspace@plt+0x16842>
  419f08:	mov    eax,r13d
  419f0b:	shl    eax,0x10
  419f0e:	mov    ecx,r8d
  419f11:	shl    ecx,0x8
  419f14:	or     ecx,eax
  419f16:	lea    eax,[rdi+rcx*1]
  419f19:	add    eax,0x1
  419f1c:	xor    r15d,r15d
  419f1f:	mov    ecx,0x2
  419f24:	lea    rdx,[rip+0x2a475]        # 4443a0 <isspace@plt+0x40a90>
  419f2b:	mov    esi,DWORD PTR [rdx+rcx*4-0x8]
  419f2f:	cmp    esi,eax
  419f31:	je     41a43d <isspace@plt+0x16b2d>
  419f37:	test   esi,esi
  419f39:	je     419fa2 <isspace@plt+0x16692>
  419f3b:	mov    esi,DWORD PTR [rdx+rcx*4-0x4]
  419f3f:	cmp    esi,eax
  419f41:	je     41a41e <isspace@plt+0x16b0e>
  419f47:	test   esi,esi
  419f49:	je     419fa2 <isspace@plt+0x16692>
  419f4b:	mov    esi,DWORD PTR [rdx+rcx*4]
  419f4e:	cmp    esi,eax
  419f50:	je     41a427 <isspace@plt+0x16b17>
  419f56:	test   esi,esi
  419f58:	je     419fa2 <isspace@plt+0x16692>
  419f5a:	mov    esi,DWORD PTR [rdx+rcx*4+0x4]
  419f5e:	cmp    esi,eax
  419f60:	je     41a42d <isspace@plt+0x16b1d>
  419f66:	test   esi,esi
  419f68:	je     419fa2 <isspace@plt+0x16692>
  419f6a:	mov    esi,DWORD PTR [rdx+rcx*4+0x8]
  419f6e:	cmp    esi,eax
  419f70:	je     41a433 <isspace@plt+0x16b23>
  419f76:	test   esi,esi
  419f78:	je     419fa2 <isspace@plt+0x16692>
  419f7a:	mov    esi,DWORD PTR [rdx+rcx*4+0xc]
  419f7e:	cmp    esi,eax
  419f80:	je     41a439 <isspace@plt+0x16b29>
  419f86:	test   esi,esi
  419f88:	je     419fa2 <isspace@plt+0x16692>
  419f8a:	add    r15,0x6
  419f8e:	lea    rsi,[rcx+0x6]
  419f92:	add    rcx,0x4
  419f96:	cmp    rcx,0xf0
  419f9d:	mov    rcx,rsi
  419fa0:	jb     419f2b <isspace@plt+0x1661b>
  419fa2:	movsx  rcx,WORD PTR [rip+0x2a7b6]        # 444760 <isspace@plt+0x40e50>
  419faa:	mov    DWORD PTR [rdx+rcx*4],eax
  419fad:	lea    r15d,[rcx+0x10]
  419fb1:	imul   esi,r13d,0x3e8
  419fb8:	mov    eax,0x80808081
  419fbd:	imul   rsi,rax
  419fc1:	shr    rsi,0x27
  419fc5:	imul   edx,r8d,0x3e8
  419fcc:	imul   rdx,rax
  419fd0:	shr    rdx,0x27
  419fd4:	imul   ecx,edi,0x3e8
  419fda:	imul   rcx,rax
  419fde:	shr    rcx,0x27
  419fe2:	movsx  edi,r15w
  419fe6:	call   403330 <init_color@plt>
  419feb:	movzx  eax,WORD PTR [rip+0x2a76e]        # 444760 <isspace@plt+0x40e50>
  419ff2:	add    eax,0x1
  419ff5:	movsx  ecx,ax
  419ff8:	xor    edx,edx
  419ffa:	cmp    ecx,0xef
  41a000:	cmovle edx,eax
  41a003:	mov    WORD PTR [rip+0x2a756],dx        # 444760 <isspace@plt+0x40e50>
  41a00a:	mov    WORD PTR [rbp+0x0],r15w
  41a00f:	jmp    41a383 <isspace@plt+0x16a73>
  41a014:	add    al,0xd0
  41a016:	cmp    al,0xa
  41a018:	jae    41a044 <isspace@plt+0x16734>
  41a01a:	xor    esi,esi
  41a01c:	mov    edx,0xa
  41a021:	mov    rdi,rbx
  41a024:	call   4034c0 <strtol@plt>
  41a029:	lea    ecx,[rax-0x1]
  41a02c:	cmp    ecx,0xfe
  41a032:	ja     41a383 <isspace@plt+0x16a73>
  41a038:	movzx  eax,al
  41a03b:	mov    WORD PTR [rbp+0x0],ax
  41a03f:	jmp    41a383 <isspace@plt+0x16a73>
  41a044:	lea    rdi,[rip+0x179ef]        # 431a3a <isspace@plt+0x2e12a>
  41a04b:	mov    rsi,rbx
  41a04e:	call   4030f0 <strcasecmp@plt>
  41a053:	test   eax,eax
  41a055:	je     41a119 <isspace@plt+0x16809>
  41a05b:	lea    rdi,[rip+0x179de]        # 431a40 <isspace@plt+0x2e130>
  41a062:	mov    rsi,rbx
  41a065:	call   4030f0 <strcasecmp@plt>
  41a06a:	test   eax,eax
  41a06c:	je     41a120 <isspace@plt+0x16810>
  41a072:	lea    rdi,[rip+0x179cb]        # 431a44 <isspace@plt+0x2e134>
  41a079:	mov    rsi,rbx
  41a07c:	call   4030f0 <strcasecmp@plt>
  41a081:	test   eax,eax
  41a083:	je     41a12a <isspace@plt+0x1681a>
  41a089:	lea    rdi,[rip+0x179ba]        # 431a4a <isspace@plt+0x2e13a>
  41a090:	mov    rsi,rbx
  41a093:	call   4030f0 <strcasecmp@plt>
  41a098:	test   eax,eax
  41a09a:	je     41a134 <isspace@plt+0x16824>
  41a0a0:	lea    rdi,[rip+0x179aa]        # 431a51 <isspace@plt+0x2e141>
  41a0a7:	mov    rsi,rbx
  41a0aa:	call   4030f0 <strcasecmp@plt>
  41a0af:	test   eax,eax
  41a0b1:	je     41a13e <isspace@plt+0x1682e>
  41a0b7:	lea    rdi,[rip+0x17998]        # 431a56 <isspace@plt+0x2e146>
  41a0be:	mov    rsi,rbx
  41a0c1:	call   4030f0 <strcasecmp@plt>
  41a0c6:	test   eax,eax
  41a0c8:	je     41a148 <isspace@plt+0x16838>
  41a0ca:	lea    rdi,[rip+0x1798d]        # 431a5e <isspace@plt+0x2e14e>
  41a0d1:	mov    rsi,rbx
  41a0d4:	call   4030f0 <strcasecmp@plt>
  41a0d9:	test   eax,eax
  41a0db:	je     41a227 <isspace@plt+0x16917>
  41a0e1:	lea    rdi,[rip+0x1797b]        # 431a63 <isspace@plt+0x2e153>
  41a0e8:	mov    rsi,rbx
  41a0eb:	call   4030f0 <strcasecmp@plt>
  41a0f0:	test   eax,eax
  41a0f2:	je     41a36a <isspace@plt+0x16a5a>
  41a0f8:	lea    rdi,[rip+0x1796a]        # 431a69 <isspace@plt+0x2e159>
  41a0ff:	mov    rsi,rbx
  41a102:	call   4030f0 <strcasecmp@plt>
  41a107:	test   eax,eax
  41a109:	jne    41a383 <isspace@plt+0x16a73>
  41a10f:	mov    eax,0x8
  41a114:	jmp    41a36f <isspace@plt+0x16a5f>
  41a119:	xor    eax,eax
  41a11b:	jmp    41a36f <isspace@plt+0x16a5f>
  41a120:	mov    eax,0x1
  41a125:	jmp    41a36f <isspace@plt+0x16a5f>
  41a12a:	mov    eax,0x2
  41a12f:	jmp    41a36f <isspace@plt+0x16a5f>
  41a134:	mov    eax,0x3
  41a139:	jmp    41a36f <isspace@plt+0x16a5f>
  41a13e:	mov    eax,0x4
  41a143:	jmp    41a36f <isspace@plt+0x16a5f>
  41a148:	mov    eax,0x5
  41a14d:	jmp    41a36f <isspace@plt+0x16a5f>
  41a152:	test   r13b,r13b
  41a155:	mov    QWORD PTR [rsp+0x8],rbp
  41a15a:	je     41a180 <isspace@plt+0x16870>
  41a15c:	lea    eax,[r13-0x37]
  41a160:	cdqe   
  41a162:	imul   rcx,rax,0x66666667
  41a169:	mov    rdx,rcx
  41a16c:	shr    rdx,0x3f
  41a170:	sar    rcx,0x24
  41a174:	add    ecx,edx
  41a176:	shl    ecx,0x3
  41a179:	lea    ecx,[rcx+rcx*4]
  41a17c:	cmp    eax,ecx
  41a17e:	jne    41a1d9 <isspace@plt+0x168c9>
  41a180:	test   r8b,r8b
  41a183:	je     41a1a9 <isspace@plt+0x16899>
  41a185:	lea    eax,[r8-0x37]
  41a189:	cdqe   
  41a18b:	imul   rcx,rax,0x66666667
  41a192:	mov    rdx,rcx
  41a195:	shr    rdx,0x3f
  41a199:	sar    rcx,0x24
  41a19d:	add    ecx,edx
  41a19f:	shl    ecx,0x3
  41a1a2:	lea    ecx,[rcx+rcx*4]
  41a1a5:	cmp    eax,ecx
  41a1a7:	jne    41a1d9 <isspace@plt+0x168c9>
  41a1a9:	test   dil,dil
  41a1ac:	je     41a3a6 <isspace@plt+0x16a96>
  41a1b2:	lea    eax,[rdi-0x37]
  41a1b5:	cdqe   
  41a1b7:	imul   rcx,rax,0x66666667
  41a1be:	mov    rdx,rcx
  41a1c1:	shr    rdx,0x3f
  41a1c5:	sar    rcx,0x24
  41a1c9:	add    ecx,edx
  41a1cb:	shl    ecx,0x3
  41a1ce:	lea    ecx,[rcx+rcx*4]
  41a1d1:	cmp    eax,ecx
  41a1d3:	je     41a3a6 <isspace@plt+0x16a96>
  41a1d9:	cmp    r13b,r8b
  41a1dc:	mov    rcx,rdi
  41a1df:	jne    41a231 <isspace@plt+0x16921>
  41a1e1:	cmp    r8b,cl
  41a1e4:	jne    41a231 <isspace@plt+0x16921>
  41a1e6:	cmp    r13b,0xee
  41a1ea:	ja     41a231 <isspace@plt+0x16921>
  41a1ec:	lea    eax,[r13-0x8]
  41a1f0:	cdqe   
  41a1f2:	imul   r15,rax,0x66666667
  41a1f9:	mov    rax,r15
  41a1fc:	shr    rax,0x3f
  41a200:	sar    r15,0x22
  41a204:	add    r15d,eax
  41a207:	lea    eax,[r15+r15*1]
  41a20b:	lea    eax,[rax+rax*4]
  41a20e:	neg    eax
  41a210:	lea    eax,[rax+r13*1]
  41a214:	add    eax,0xfffffff8
  41a217:	test   eax,eax
  41a219:	jne    41a231 <isspace@plt+0x16921>
  41a21b:	add    r15d,0xe8
  41a222:	jmp    41a343 <isspace@plt+0x16a33>
  41a227:	mov    eax,0x6
  41a22c:	jmp    41a36f <isspace@plt+0x16a5f>
  41a231:	mov    edx,0xffffffff
  41a236:	xor    esi,esi
  41a238:	mov    edi,0x37
  41a23d:	mov    r10d,0xfffff798
  41a243:	mov    r14b,0xfa
  41a246:	xor    r15d,r15d
  41a249:	mov    QWORD PTR [rsp+0x10],r8
  41a24e:	xchg   ax,ax
  41a250:	movzx  eax,sil
  41a254:	imul   eax,eax,0xab
  41a25a:	shr    eax,0xa
  41a25d:	mul    r14b
  41a260:	lea    r11d,[rsi+0x10]
  41a264:	mov    ebx,r10d
  41a267:	mov    r9d,r10d
  41a26a:	mov    ebp,r10d
  41a26d:	cmp    r11d,0xe7
  41a274:	ja     41a30c <isspace@plt+0x169fc>
  41a27a:	mov    r12d,eax
  41a27d:	mov    r14,r13
  41a280:	mov    r8,rcx
  41a283:	xor    ebp,ebp
  41a285:	mov    ebx,0x0
  41a28a:	cmp    esi,0x24
  41a28d:	jb     41a2a3 <isspace@plt+0x16993>
  41a28f:	movzx  eax,sil
  41a293:	imul   eax,eax,0x39
  41a296:	shr    eax,0xb
  41a299:	lea    eax,[rax+rax*4]
  41a29c:	lea    ebx,[rax*8+0x37]
  41a2a3:	movzx  eax,sil
  41a2a7:	imul   r13d,eax,0xab
  41a2ae:	shr    r13d,0xa
  41a2b2:	imul   eax,r13d,0xab
  41a2b9:	shr    eax,0xa
  41a2bc:	mov    cl,0x6
  41a2be:	mul    cl
  41a2c0:	mov    r9d,0x0
  41a2c6:	sub    r13b,al
  41a2c9:	je     41a2da <isspace@plt+0x169ca>
  41a2cb:	movzx  eax,r13b
  41a2cf:	lea    eax,[rax+rax*4]
  41a2d2:	lea    r9d,[rax*8+0x37]
  41a2da:	add    r12b,sil
  41a2dd:	mov    rcx,r8
  41a2e0:	je     41a301 <isspace@plt+0x169f1>
  41a2e2:	mov    eax,esi
  41a2e4:	mov    rbp,rcx
  41a2e7:	mov    ecx,0xaaaaaaab
  41a2ec:	imul   rax,rcx
  41a2f0:	mov    rcx,rbp
  41a2f3:	shr    rax,0x22
  41a2f7:	imul   eax,eax,0xf0
  41a2fd:	mov    ebp,edi
  41a2ff:	sub    ebp,eax
  41a301:	mov    r8,QWORD PTR [rsp+0x10]
  41a306:	mov    r13,r14
  41a309:	mov    r14b,0xfa
  41a30c:	sub    ebx,r13d
  41a30f:	sub    r9d,r8d
  41a312:	sub    ebp,ecx
  41a314:	imul   ebx,ebx
  41a317:	imul   r9d,r9d
  41a31b:	add    r9d,ebx
  41a31e:	imul   ebp,ebp
  41a321:	add    ebp,r9d
  41a324:	cmp    ebp,edx
  41a326:	cmovb  edx,ebp
  41a329:	cmovb  r15d,r11d
  41a32d:	add    esi,0x1
  41a330:	add    edi,0x28
  41a333:	add    r10d,0xa
  41a337:	cmp    esi,0xf0
  41a33d:	jne    41a250 <isspace@plt+0x16940>
  41a343:	mov    rax,QWORD PTR [rip+0x28c8e]        # 442fd8 <isspace@plt+0x3f6c8>
  41a34a:	cmp    DWORD PTR [rax],0x10
  41a34d:	jg     41a35e <isspace@plt+0x16a4e>
  41a34f:	movsxd rax,r15d
  41a352:	lea    rcx,[rip+0x17757]        # 431ab0 <isspace@plt+0x2e1a0>
  41a359:	movzx  r15d,BYTE PTR [rax+rcx*1]
  41a35e:	mov    rbp,QWORD PTR [rsp+0x8]
  41a363:	mov    WORD PTR [rbp+0x0],r15w
  41a368:	jmp    41a383 <isspace@plt+0x16a73>
  41a36a:	mov    eax,0x7
  41a36f:	shl    rax,0x4
  41a373:	lea    rcx,[rip+0x26ba6]        # 440f20 <isspace@plt+0x3d610>
  41a37a:	movzx  eax,WORD PTR [rax+rcx*1+0x8]
  41a37f:	mov    WORD PTR [rbp+0x0],ax
  41a383:	mov    rax,QWORD PTR fs:0x28
  41a38c:	cmp    rax,QWORD PTR [rsp+0x20]
  41a391:	jne    41a460 <isspace@plt+0x16b50>
  41a397:	add    rsp,0x28
  41a39b:	pop    rbx
  41a39c:	pop    r12
  41a39e:	pop    r13
  41a3a0:	pop    r14
  41a3a2:	pop    r15
  41a3a4:	pop    rbp
  41a3a5:	ret    
  41a3a6:	test   r13b,r13b
  41a3a9:	je     41a44b <isspace@plt+0x16b3b>
  41a3af:	add    r13d,0xffffffc9
  41a3b3:	movsxd rax,r13d
  41a3b6:	imul   rax,rax,0x66666667
  41a3bd:	mov    rcx,rax
  41a3c0:	shr    rcx,0x3f
  41a3c4:	sar    rax,0x24
  41a3c8:	add    eax,ecx
  41a3ca:	lea    eax,[rax+rax*8]
  41a3cd:	lea    r15d,[rax*4+0x10]
  41a3d5:	test   r8b,r8b
  41a3d8:	je     41a456 <isspace@plt+0x16b46>
  41a3da:	add    r8d,0xffffffc9
  41a3de:	movsxd rax,r8d
  41a3e1:	imul   rax,rax,0x66666667
  41a3e8:	mov    rcx,rax
  41a3eb:	shr    rcx,0x3f
  41a3ef:	sar    rax,0x24
  41a3f3:	add    eax,ecx
  41a3f5:	lea    eax,[rax+rax*2]
  41a3f8:	lea    r15d,[r15+rax*2]
  41a3fc:	add    edi,0xffffffc9
  41a3ff:	movsxd rax,edi
  41a402:	imul   rax,rax,0x66666667
  41a409:	mov    rcx,rax
  41a40c:	shr    rcx,0x3f
  41a410:	sar    rax,0x24
  41a414:	add    eax,ecx
  41a416:	add    r15d,eax
  41a419:	jmp    41a343 <isspace@plt+0x16a33>
  41a41e:	add    rcx,0xffffffffffffffff
  41a422:	mov    r15,rcx
  41a425:	jmp    41a43d <isspace@plt+0x16b2d>
  41a427:	add    r15,0x2
  41a42b:	jmp    41a43d <isspace@plt+0x16b2d>
  41a42d:	add    r15,0x3
  41a431:	jmp    41a43d <isspace@plt+0x16b2d>
  41a433:	add    r15,0x4
  41a437:	jmp    41a43d <isspace@plt+0x16b2d>
  41a439:	add    r15,0x5
  41a43d:	add    r15d,0x10
  41a441:	mov    WORD PTR [rbp+0x0],r15w
  41a446:	jmp    41a383 <isspace@plt+0x16a73>
  41a44b:	mov    r15d,0x10
  41a451:	test   r8b,r8b
  41a454:	jne    41a3da <isspace@plt+0x16aca>
  41a456:	xor    eax,eax
  41a458:	add    r15d,eax
  41a45b:	jmp    41a343 <isspace@plt+0x16a33>
  41a460:	call   403280 <__stack_chk_fail@plt>
  41a465:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a46f:	nop
  41a470:	push   rax
  41a471:	mov    rax,QWORD PTR fs:0x28
  41a47a:	mov    QWORD PTR [rsp],rax
  41a47e:	mov    DWORD PTR [rdi+0xf0],esi
  41a484:	call   41a4a0 <isspace@plt+0x16b90>
  41a489:	mov    rax,QWORD PTR fs:0x28
  41a492:	cmp    rax,QWORD PTR [rsp]
  41a496:	jne    41a49a <isspace@plt+0x16b8a>
  41a498:	pop    rax
  41a499:	ret    
  41a49a:	call   403280 <__stack_chk_fail@plt>
  41a49f:	nop
  41a4a0:	push   rbp
  41a4a1:	mov    rbp,rsp
  41a4a4:	push   r15
  41a4a6:	push   r14
  41a4a8:	push   r13
  41a4aa:	push   r12
  41a4ac:	push   rbx
  41a4ad:	and    rsp,0xffffffffffffffe0
  41a4b1:	sub    rsp,0x100
  41a4b8:	mov    r12,rdi
  41a4bb:	mov    rax,QWORD PTR fs:0x28
  41a4c4:	mov    QWORD PTR [rsp+0xe0],rax
  41a4cc:	mov    rdx,QWORD PTR [rdi+0x70]
  41a4d0:	mov    rdi,QWORD PTR [rdi+0x78]
  41a4d4:	xor    esi,esi
  41a4d6:	call   403360 <memset@plt>
  41a4db:	mov    rsi,QWORD PTR [r12+0x50]
  41a4e0:	cmp    rsi,QWORD PTR [r12+0x60]
  41a4e5:	jne    41a502 <isspace@plt+0x16bf2>
  41a4e7:	mov    rsi,QWORD PTR [r12+0x68]
  41a4ec:	test   rsi,rsi
  41a4ef:	je     41a517 <isspace@plt+0x16c07>
  41a4f1:	mov    rdi,QWORD PTR [r12]
  41a4f5:	call   411060 <isspace@plt+0xd750>
  41a4fa:	cmp    rax,0xffffffffffffffff
  41a4fe:	jne    41a519 <isspace@plt+0x16c09>
  41a500:	jmp    41a529 <isspace@plt+0x16c19>
  41a502:	test   rsi,rsi
  41a505:	je     41a520 <isspace@plt+0x16c10>
  41a507:	mov    rdi,QWORD PTR [r12]
  41a50b:	call   410fc0 <isspace@plt+0xd6b0>
  41a510:	mov    QWORD PTR [r12+0x68],rax
  41a515:	jmp    41a529 <isspace@plt+0x16c19>
  41a517:	xor    eax,eax
  41a519:	mov    QWORD PTR [r12+0x50],rax
  41a51e:	jmp    41a529 <isspace@plt+0x16c19>
  41a520:	mov    QWORD PTR [r12+0x68],0x0
  41a529:	mov    rsi,QWORD PTR [r12+0x50]
  41a52e:	mov    rdx,QWORD PTR [r12+0x78]
  41a533:	mov    QWORD PTR [r12+0x60],rsi
  41a538:	mov    QWORD PTR [r12+0x80],rdx
  41a540:	cmp    BYTE PTR [r12+0x105],0x0
  41a549:	je     41a552 <isspace@plt+0x16c42>
  41a54b:	mov    eax,0x1
  41a550:	jmp    41a563 <isspace@plt+0x16c53>
  41a552:	mov    rdi,QWORD PTR [r12]
  41a556:	call   410db0 <isspace@plt+0xd4a0>
  41a55b:	mov    rdx,QWORD PTR [r12+0x80]
  41a563:	mov    QWORD PTR [rdx+0x18],rax
  41a567:	mov    QWORD PTR [r12+0x88],rdx
  41a56f:	movsxd r9,DWORD PTR [r12+0x48]
  41a574:	mov    rax,r9
  41a577:	shl    rax,0x4
  41a57b:	lea    rsi,[rax+rax*2]
  41a57f:	add    rsi,0x28
  41a583:	movsxd r10,DWORD PTR [r12+0x4c]
  41a588:	mov    rdi,rsi
  41a58b:	imul   rdi,r10
  41a58f:	test   rdi,rdi
  41a592:	je     41a5db <isspace@plt+0x16ccb>
  41a594:	lea    r8,[rax+rax*2]
  41a598:	xor    eax,eax
  41a59a:	xor    ebx,ebx
  41a59c:	nop    DWORD PTR [rax+0x0]
  41a5a0:	mov    rdx,QWORD PTR [r12+0x78]
  41a5a5:	lea    rcx,[rdx+rbx*1]
  41a5a9:	mov    QWORD PTR [rdx+rbx*1],rax
  41a5ad:	test   rax,rax
  41a5b0:	je     41a5b6 <isspace@plt+0x16ca6>
  41a5b2:	mov    QWORD PTR [rax+0x8],rcx
  41a5b6:	add    rbx,rsi
  41a5b9:	mov    rax,rcx
  41a5bc:	cmp    rbx,rdi
  41a5bf:	jb     41a5a0 <isspace@plt+0x16c90>
  41a5c1:	mov    rax,0xffffffffffffffd8
  41a5c8:	sub    rax,r8
  41a5cb:	add    rdx,rax
  41a5ce:	add    rdx,rbx
  41a5d1:	jne    41a5db <isspace@plt+0x16ccb>
  41a5d3:	mov    rdx,QWORD PTR [r12+0x80]
  41a5db:	mov    QWORD PTR [r12+0x90],rdx
  41a5e3:	mov    QWORD PTR [rdx+0x8],0x0
  41a5eb:	mov    rdi,QWORD PTR [r12+0x10]
  41a5f0:	mov    rax,QWORD PTR [r12+0x80]
  41a5f8:	mov    QWORD PTR [r12+0xb8],rax
  41a600:	mov    DWORD PTR [r12+0xc0],0x0
  41a60c:	test   rdi,rdi
  41a60f:	je     41a62c <isspace@plt+0x16d1c>
  41a611:	mov    esi,0x41
  41a616:	call   QWORD PTR [rdi]
  41a618:	mov    QWORD PTR [r12+0x38],rax
  41a61d:	mov    QWORD PTR [r12+0x40],rdx
  41a622:	mov    r9d,DWORD PTR [r12+0x48]
  41a627:	mov    r10d,DWORD PTR [r12+0x4c]
  41a62c:	imul   r10d,r9d
  41a630:	shl    r10d,0x2
  41a634:	movsxd rdx,r10d
  41a637:	mov    rdi,QWORD PTR [r12]
  41a63b:	mov    r15,QWORD PTR [r12+0x8]
  41a640:	mov    rsi,QWORD PTR [r12+0x50]
  41a645:	mov    QWORD PTR [rsp+0x20],rdx
  41a64a:	mov    rcx,r15
  41a64d:	call   411380 <isspace@plt+0xda70>
  41a652:	mov    BYTE PTR [r15+rax*1],0x0
  41a657:	mov    r14,QWORD PTR [r12+0x50]
  41a65c:	vxorps xmm0,xmm0,xmm0
  41a660:	vmovups YMMWORD PTR [rsp+0xb0],ymm0
  41a669:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  41a672:	mov    QWORD PTR [rsp+0x30],0x0
  41a67b:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  41a681:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41a687:	test   rax,rax
  41a68a:	je     41a92b <isspace@plt+0x1701b>
  41a690:	mov    rbx,rax
  41a693:	mov    r13,r15
  41a696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a6a0:	lea    rdi,[rsp+0x2c]
  41a6a5:	mov    rsi,r13
  41a6a8:	mov    rdx,rbx
  41a6ab:	lea    rcx,[rsp+0x30]
  41a6b0:	vzeroupper 
  41a6b3:	call   4032b0 <mbrtowc@plt>
  41a6b8:	cmp    rax,0xfffffffffffffffe
  41a6bc:	je     41a7c0 <isspace@plt+0x16eb0>
  41a6c2:	test   rax,rax
  41a6c5:	je     41a760 <isspace@plt+0x16e50>
  41a6cb:	cmp    rax,0xffffffffffffffff
  41a6cf:	jne    41a800 <isspace@plt+0x16ef0>
  41a6d5:	call   403130 <__errno_location@plt>
  41a6da:	cmp    DWORD PTR [rax],0x54
  41a6dd:	jne    41a816 <isspace@plt+0x16f06>
  41a6e3:	mov    QWORD PTR [rsp+0x30],0x0
  41a6ec:	mov    eax,0x1
  41a6f1:	cmp    rbx,0x2
  41a6f5:	jb     41a717 <isspace@plt+0x16e07>
  41a6f7:	nop    WORD PTR [rax+rax*1+0x0]
  41a700:	movzx  ecx,BYTE PTR [r13+rax*1+0x0]
  41a706:	and    cl,0xc0
  41a709:	cmp    cl,0x80
  41a70c:	jne    41a717 <isspace@plt+0x16e07>
  41a70e:	add    rax,0x1
  41a712:	cmp    rbx,rax
  41a715:	ja     41a700 <isspace@plt+0x16df0>
  41a717:	lea    rcx,[rsp+0x50]
  41a71c:	vxorps xmm0,xmm0,xmm0
  41a720:	vmovups XMMWORD PTR [rcx],xmm0
  41a724:	vmovups xmm0,XMMWORD PTR [rip+0x17494]        # 431bc0 <isspace@plt+0x2e2b0>
  41a72c:	vmovaps XMMWORD PTR [rsp+0xa0],xmm0
  41a735:	mov    QWORD PTR [rsp+0xb0],rax
  41a73d:	mov    DWORD PTR [rsp+0xb8],0x1
  41a748:	mov    eax,DWORD PTR [rsp+0x5c]
  41a74c:	lea    rcx,[rsp+0xbc]
  41a754:	mov    DWORD PTR [rcx+0x10],eax
  41a757:	vmovups xmm0,XMMWORD PTR [rsp+0x4c]
  41a75d:	jmp    41a7a2 <isspace@plt+0x16e92>
  41a75f:	nop
  41a760:	lea    rax,[rsp+0x3c]
  41a765:	vxorps xmm0,xmm0,xmm0
  41a769:	vmovups XMMWORD PTR [rax],xmm0
  41a76d:	vmovaps XMMWORD PTR [rsp+0xa0],xmm0
  41a776:	mov    QWORD PTR [rsp+0xb0],0x1
  41a782:	mov    DWORD PTR [rsp+0xb8],0x2
  41a78d:	mov    eax,DWORD PTR [rsp+0x48]
  41a791:	lea    rcx,[rsp+0xbc]
  41a799:	mov    DWORD PTR [rcx+0x10],eax
  41a79c:	vmovups xmm0,XMMWORD PTR [rsp+0x38]
  41a7a2:	vmovups XMMWORD PTR [rcx],xmm0
  41a7a6:	cmp    QWORD PTR [rsp+0x70],0x0
  41a7ac:	jne    41a86d <isspace@plt+0x16f5d>
  41a7b2:	jmp    41a890 <isspace@plt+0x16f80>
  41a7b7:	nop    WORD PTR [rax+rax*1+0x0]
  41a7c0:	mov    rdi,QWORD PTR [r12]
  41a7c4:	mov    rsi,QWORD PTR [rsp+0x70]
  41a7c9:	add    rsi,r14
  41a7cc:	mov    rdx,QWORD PTR [rsp+0x20]
  41a7d1:	mov    rcx,r15
  41a7d4:	call   411380 <isspace@plt+0xda70>
  41a7d9:	mov    rbx,rax
  41a7dc:	mov    BYTE PTR [r15+rax*1],0x0
  41a7e1:	mov    r13,r15
  41a7e4:	test   rbx,rbx
  41a7e7:	jne    41a6a0 <isspace@plt+0x16d90>
  41a7ed:	jmp    41a92b <isspace@plt+0x1701b>
  41a7f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a7fc:	nop    DWORD PTR [rax+0x0]
  41a800:	cmp    rax,0xf
  41a804:	mov    ecx,0xf
  41a809:	cmovae rax,rcx
  41a80d:	test   rax,rax
  41a810:	jne    41a81b <isspace@plt+0x16f0b>
  41a812:	xor    eax,eax
  41a814:	jmp    41a836 <isspace@plt+0x16f26>
  41a816:	mov    eax,0xf
  41a81b:	xor    ecx,ecx
  41a81d:	nop    DWORD PTR [rax]
  41a820:	movzx  edx,BYTE PTR [r13+rcx*1+0x0]
  41a826:	mov    BYTE PTR [rsp+rcx*1+0xa0],dl
  41a82d:	add    rcx,0x1
  41a831:	cmp    rcx,rax
  41a834:	jb     41a820 <isspace@plt+0x16f10>
  41a836:	mov    BYTE PTR [rsp+rax*1+0xa0],0x0
  41a83e:	mov    QWORD PTR [rsp+0xb0],rax
  41a846:	mov    edi,DWORD PTR [rsp+0x2c]
  41a84a:	call   4035a0 <wcwidth@plt>
  41a84f:	cmp    eax,0xffffffff
  41a852:	mov    ecx,0x1
  41a857:	cmove  eax,ecx
  41a85a:	mov    DWORD PTR [rsp+0xb8],eax
  41a861:	test   eax,eax
  41a863:	je     41a8e2 <isspace@plt+0x16fd2>
  41a865:	cmp    QWORD PTR [rsp+0x70],0x0
  41a86b:	je     41a890 <isspace@plt+0x16f80>
  41a86d:	mov    rdi,r12
  41a870:	lea    rsi,[rsp+0x60]
  41a875:	call   41b010 <isspace@plt+0x17700>
  41a87a:	test   al,al
  41a87c:	je     41a92b <isspace@plt+0x1701b>
  41a882:	mov    rax,QWORD PTR [rsp+0x70]
  41a887:	jmp    41a892 <isspace@plt+0x16f82>
  41a889:	nop    DWORD PTR [rax+0x0]
  41a890:	xor    eax,eax
  41a892:	add    r14,rax
  41a895:	vmovups ymm0,YMMWORD PTR [rsp+0xb0]
  41a89e:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  41a8a4:	vmovaps ymm0,YMMWORD PTR [rsp+0xa0]
  41a8ad:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41a8b3:	mov    rax,QWORD PTR [rsp+0xb0]
  41a8bb:	sub    rbx,rax
  41a8be:	add    r13,rax
  41a8c1:	vxorps xmm0,xmm0,xmm0
  41a8c5:	vmovups YMMWORD PTR [rsp+0xb0],ymm0
  41a8ce:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  41a8d7:	test   rbx,rbx
  41a8da:	jne    41a6a0 <isspace@plt+0x16d90>
  41a8e0:	jmp    41a92b <isspace@plt+0x1701b>
  41a8e2:	mov    QWORD PTR [rsp+0x18],r14
  41a8e7:	mov    r14,r15
  41a8ea:	lea    r15,[rsp+0x60]
  41a8ef:	mov    rdi,r15
  41a8f2:	call   403250 <strlen@plt>
  41a8f7:	mov    edx,0xf
  41a8fc:	sub    rdx,rax
  41a8ff:	mov    ecx,0x30
  41a904:	mov    rdi,r15
  41a907:	mov    r15,r14
  41a90a:	mov    r14,QWORD PTR [rsp+0x18]
  41a90f:	lea    rsi,[rsp+0xa0]
  41a917:	call   403840 <__strncat_chk@plt>
  41a91c:	mov    rax,QWORD PTR [rsp+0xb0]
  41a924:	add    QWORD PTR [rsp+0x70],rax
  41a929:	jmp    41a8bb <isspace@plt+0x16fab>
  41a92b:	cmp    QWORD PTR [rsp+0x70],0x0
  41a931:	je     41a94c <isspace@plt+0x1703c>
  41a933:	lea    rsi,[rsp+0x60]
  41a938:	mov    rdi,r12
  41a93b:	vzeroupper 
  41a93e:	call   41b010 <isspace@plt+0x17700>
  41a943:	test   al,al
  41a945:	je     41a94c <isspace@plt+0x1703c>
  41a947:	add    r14,QWORD PTR [rsp+0x70]
  41a94c:	mov    QWORD PTR [r12+0x58],r14
  41a951:	cmp    QWORD PTR [r12+0xb8],0x0
  41a95a:	je     41a990 <isspace@plt+0x17080>
  41a95c:	mov    rdi,QWORD PTR [r12]
  41a960:	vzeroupper 
  41a963:	call   410a90 <isspace@plt+0xd180>
  41a968:	mov    rcx,QWORD PTR [r12+0xb8]
  41a970:	cmp    r14,rax
  41a973:	jne    41a9a5 <isspace@plt+0x17095>
  41a975:	mov    rax,QWORD PTR [rcx+0x10]
  41a979:	test   rax,rax
  41a97c:	jne    41a9a5 <isspace@plt+0x17095>
  41a97e:	mov    rax,QWORD PTR [rcx]
  41a981:	test   rax,rax
  41a984:	je     41a9b7 <isspace@plt+0x170a7>
  41a986:	mov    QWORD PTR [r12+0x88],rax
  41a98e:	jmp    41a9bf <isspace@plt+0x170af>
  41a990:	mov    rax,QWORD PTR [r12+0x90]
  41a998:	mov    QWORD PTR [r12+0x88],rax
  41a9a0:	jmp    41aa3e <isspace@plt+0x1712e>
  41a9a5:	mov    QWORD PTR [r12+0x88],rcx
  41a9ad:	test   rcx,rcx
  41a9b0:	jne    41a9bf <isspace@plt+0x170af>
  41a9b2:	jmp    41aa3e <isspace@plt+0x1712e>
  41a9b7:	mov    QWORD PTR [r12+0x88],rcx
  41a9bf:	movsxd rax,DWORD PTR [r12+0xc0]
  41a9c7:	cmp    eax,DWORD PTR [r12+0x48]
  41a9cc:	jge    41aa3e <isspace@plt+0x1712e>
  41a9ce:	lea    rdx,[rax+rax*2]
  41a9d2:	shl    rdx,0x4
  41a9d6:	vmovups ymm0,YMMWORD PTR [r12+0x18]
  41a9dd:	vmovups ymm1,YMMWORD PTR [r12+0x28]
  41a9e4:	vmovups YMMWORD PTR [rcx+rdx*1+0x38],ymm1
  41a9ea:	vmovups YMMWORD PTR [rcx+rdx*1+0x28],ymm0
  41a9f0:	add    rax,0x1
  41a9f4:	movsxd rcx,DWORD PTR [r12+0x48]
  41a9f9:	cmp    rax,rcx
  41a9fc:	jge    41aa3e <isspace@plt+0x1712e>
  41a9fe:	lea    rcx,[r12+0x18]
  41aa03:	add    rdx,0x58
  41aa07:	nop    WORD PTR [rax+rax*1+0x0]
  41aa10:	mov    rsi,QWORD PTR [r12+0xb8]
  41aa18:	vmovups ymm0,YMMWORD PTR [rcx]
  41aa1c:	vmovups ymm1,YMMWORD PTR [rcx+0x10]
  41aa21:	vmovups YMMWORD PTR [rsi+rdx*1+0x10],ymm1
  41aa27:	vmovups YMMWORD PTR [rsi+rdx*1],ymm0
  41aa2c:	add    rax,0x1
  41aa30:	movsxd rsi,DWORD PTR [r12+0x48]
  41aa35:	add    rdx,0x30
  41aa39:	cmp    rax,rsi
  41aa3c:	jl     41aa10 <isspace@plt+0x17100>
  41aa3e:	mov    r14,QWORD PTR [r12+0xf8]
  41aa46:	test   r14,r14
  41aa49:	jne    41aa5d <isspace@plt+0x1714d>
  41aa4b:	jmp    41aba5 <isspace@plt+0x17295>
  41aa50:	mov    r14,QWORD PTR [r14+0x50]
  41aa54:	test   r14,r14
  41aa57:	je     41aba5 <isspace@plt+0x17295>
  41aa5d:	mov    rsi,QWORD PTR [r14]
  41aa60:	mov    rax,QWORD PTR [r14+0x40]
  41aa64:	mov    rdi,QWORD PTR [rax]
  41aa67:	vzeroupper 
  41aa6a:	call   411060 <isspace@plt+0xd750>
  41aa6f:	mov    rsi,QWORD PTR [r12+0x50]
  41aa74:	cmp    rsi,rax
  41aa77:	ja     41aa80 <isspace@plt+0x17170>
  41aa79:	cmp    QWORD PTR [r12+0x58],rax
  41aa7e:	jae    41aac0 <isspace@plt+0x171b0>
  41aa80:	mov    QWORD PTR [r14+0x30],0x0
  41aa88:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41aa90:	cmp    r14,QWORD PTR [r12+0x98]
  41aa98:	jne    41aa50 <isspace@plt+0x17140>
  41aa9a:	mov    rax,QWORD PTR [r12+0x80]
  41aaa2:	mov    QWORD PTR [r14+0x30],rax
  41aaa6:	mov    DWORD PTR [r14+0x20],0x0
  41aaae:	xor    ecx,ecx
  41aab0:	jmp    41ab27 <isspace@plt+0x17217>
  41aab2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aabc:	nop    DWORD PTR [rax+0x0]
  41aac0:	mov    r11,QWORD PTR [r12+0x80]
  41aac8:	test   r11,r11
  41aacb:	je     41ab0c <isspace@plt+0x171fc>
  41aacd:	mov    rdi,QWORD PTR [r12+0x88]
  41aad5:	xor    r10d,r10d
  41aad8:	nop    DWORD PTR [rax+rax*1+0x0]
  41aae0:	cmp    rsi,rax
  41aae3:	setb   dl
  41aae6:	cmp    r11,rdi
  41aae9:	je     41ab32 <isspace@plt+0x17222>
  41aaeb:	cmp    rsi,rax
  41aaee:	jae    41ab32 <isspace@plt+0x17222>
  41aaf0:	mov    rcx,QWORD PTR [r11+0x10]
  41aaf4:	add    rcx,rsi
  41aaf7:	cmp    rcx,rax
  41aafa:	ja     41ab30 <isspace@plt+0x17220>
  41aafc:	add    r10d,0x1
  41ab00:	mov    r11,QWORD PTR [r11+0x8]
  41ab04:	mov    rsi,rcx
  41ab07:	test   r11,r11
  41ab0a:	jne    41aae0 <isspace@plt+0x171d0>
  41ab0c:	mov    r11,QWORD PTR [r12+0x90]
  41ab14:	mov    r10d,DWORD PTR [r12+0x4c]
  41ab19:	add    r10d,0xffffffff
  41ab1d:	xor    ecx,ecx
  41ab1f:	mov    QWORD PTR [r14+0x30],r11
  41ab23:	mov    DWORD PTR [r14+0x20],r10d
  41ab27:	mov    DWORD PTR [r14+0x24],ecx
  41ab2b:	jmp    41aa50 <isspace@plt+0x17140>
  41ab30:	mov    dl,0x1
  41ab32:	mov    r8d,DWORD PTR [r12+0x48]
  41ab37:	mov    ecx,DWORD PTR [r11+0x20]
  41ab3b:	cmp    r8d,ecx
  41ab3e:	cmovg  r8d,ecx
  41ab42:	xor    ecx,ecx
  41ab44:	test   dl,dl
  41ab46:	je     41ab1f <isspace@plt+0x1720f>
  41ab48:	test   r8d,r8d
  41ab4b:	jle    41ab1f <isspace@plt+0x1720f>
  41ab4d:	movsxd rbx,r8d
  41ab50:	lea    r9,[r11+0x68]
  41ab54:	xor    ecx,ecx
  41ab56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ab60:	movsxd rdi,ecx
  41ab63:	mov    rcx,rdi
  41ab66:	shl    rcx,0x4
  41ab6a:	lea    rdx,[rcx+rcx*2]
  41ab6e:	add    rsi,QWORD PTR [r11+rdx*1+0x38]
  41ab73:	add    rdi,0x1
  41ab77:	add    rdx,r9
  41ab7a:	nop    WORD PTR [rax+rax*1+0x0]
  41ab80:	mov    rcx,rdi
  41ab83:	cmp    rdi,rbx
  41ab86:	jge    41ab96 <isspace@plt+0x17286>
  41ab88:	lea    rdi,[rcx+0x1]
  41ab8c:	cmp    QWORD PTR [rdx],0x0
  41ab90:	lea    rdx,[rdx+0x30]
  41ab94:	je     41ab80 <isspace@plt+0x17270>
  41ab96:	cmp    rsi,rax
  41ab99:	jae    41ab1f <isspace@plt+0x1720f>
  41ab9b:	cmp    r8d,ecx
  41ab9e:	jg     41ab60 <isspace@plt+0x17250>
  41aba0:	jmp    41ab1f <isspace@plt+0x1720f>
  41aba5:	mov    BYTE PTR [r12+0x104],0x1
  41abae:	mov    rax,QWORD PTR fs:0x28
  41abb7:	cmp    rax,QWORD PTR [rsp+0xe0]
  41abbf:	jne    41abd3 <isspace@plt+0x172c3>
  41abc1:	lea    rsp,[rbp-0x28]
  41abc5:	pop    rbx
  41abc6:	pop    r12
  41abc8:	pop    r13
  41abca:	pop    r14
  41abcc:	pop    r15
  41abce:	pop    rbp
  41abcf:	vzeroupper 
  41abd2:	ret    
  41abd3:	vzeroupper 
  41abd6:	call   403280 <__stack_chk_fail@plt>
  41abdb:	nop    DWORD PTR [rax+rax*1+0x0]
  41abe0:	push   rax
  41abe1:	mov    rax,QWORD PTR fs:0x28
  41abea:	mov    QWORD PTR [rsp],rax
  41abee:	mov    rax,QWORD PTR [rdi+0x50]
  41abf2:	mov    rdx,QWORD PTR [rdi+0x58]
  41abf6:	mov    rcx,QWORD PTR fs:0x28
  41abff:	cmp    rcx,QWORD PTR [rsp]
  41ac03:	jne    41ac07 <isspace@plt+0x172f7>
  41ac05:	pop    rcx
  41ac06:	ret    
  41ac07:	call   403280 <__stack_chk_fail@plt>
  41ac0c:	nop    DWORD PTR [rax+0x0]
  41ac10:	push   r15
  41ac12:	push   r14
  41ac14:	push   r12
  41ac16:	push   rbx
  41ac17:	push   rax
  41ac18:	mov    rax,QWORD PTR fs:0x28
  41ac21:	mov    QWORD PTR [rsp],rax
  41ac25:	mov    r15,QWORD PTR [rdi+0x50]
  41ac29:	cmp    r15,rsi
  41ac2c:	ja     41ac34 <isspace@plt+0x17324>
  41ac2e:	cmp    QWORD PTR [rdi+0x58],rsi
  41ac32:	jae    41ac78 <isspace@plt+0x17368>
  41ac34:	test   rdx,rdx
  41ac37:	je     41ac40 <isspace@plt+0x17330>
  41ac39:	mov    QWORD PTR [rdx],0x0
  41ac40:	test   rcx,rcx
  41ac43:	je     41ac4b <isspace@plt+0x1733b>
  41ac45:	mov    DWORD PTR [rcx],0xffffffff
  41ac4b:	test   r8,r8
  41ac4e:	je     41ac57 <isspace@plt+0x17347>
  41ac50:	mov    DWORD PTR [r8],0xffffffff
  41ac57:	xor    eax,eax
  41ac59:	mov    rcx,QWORD PTR fs:0x28
  41ac62:	cmp    rcx,QWORD PTR [rsp]
  41ac66:	jne    41ad59 <isspace@plt+0x17449>
  41ac6c:	add    rsp,0x8
  41ac70:	pop    rbx
  41ac71:	pop    r12
  41ac73:	pop    r14
  41ac75:	pop    r15
  41ac77:	ret    
  41ac78:	mov    r10,QWORD PTR [rdi+0x80]
  41ac7f:	test   r10,r10
  41ac82:	je     41acb6 <isspace@plt+0x173a6>
  41ac84:	mov    rbx,QWORD PTR [rdi+0x88]
  41ac8b:	xor    r9d,r9d
  41ac8e:	xchg   ax,ax
  41ac90:	cmp    r15,rsi
  41ac93:	jae    41acea <isspace@plt+0x173da>
  41ac95:	cmp    r10,rbx
  41ac98:	je     41acea <isspace@plt+0x173da>
  41ac9a:	mov    rax,QWORD PTR [r10+0x10]
  41ac9e:	add    rax,r15
  41aca1:	cmp    rax,rsi
  41aca4:	ja     41acea <isspace@plt+0x173da>
  41aca6:	add    r9d,0x1
  41acaa:	mov    r10,QWORD PTR [r10+0x8]
  41acae:	mov    r15,rax
  41acb1:	test   r10,r10
  41acb4:	jne    41ac90 <isspace@plt+0x17380>
  41acb6:	mov    r10,QWORD PTR [rdi+0x90]
  41acbd:	mov    r9d,DWORD PTR [rdi+0x4c]
  41acc1:	add    r9d,0xffffffff
  41acc5:	xor    ebx,ebx
  41acc7:	test   rdx,rdx
  41acca:	je     41accf <isspace@plt+0x173bf>
  41accc:	mov    QWORD PTR [rdx],r10
  41accf:	test   rcx,rcx
  41acd2:	je     41acd7 <isspace@plt+0x173c7>
  41acd4:	mov    DWORD PTR [rcx],r9d
  41acd7:	mov    al,0x1
  41acd9:	test   r8,r8
  41acdc:	je     41ac59 <isspace@plt+0x17349>
  41ace2:	mov    DWORD PTR [r8],ebx
  41ace5:	jmp    41ac59 <isspace@plt+0x17349>
  41acea:	mov    r11d,DWORD PTR [rdi+0x48]
  41acee:	mov    eax,DWORD PTR [r10+0x20]
  41acf2:	cmp    r11d,eax
  41acf5:	cmovg  r11d,eax
  41acf9:	xor    ebx,ebx
  41acfb:	test   r11d,r11d
  41acfe:	jle    41acc7 <isspace@plt+0x173b7>
  41ad00:	cmp    r15,rsi
  41ad03:	jae    41acc7 <isspace@plt+0x173b7>
  41ad05:	movsxd r12,r11d
  41ad08:	lea    r14,[r10+0x68]
  41ad0c:	xor    ebx,ebx
  41ad0e:	xchg   ax,ax
  41ad10:	movsxd rdi,ebx
  41ad13:	mov    rax,rdi
  41ad16:	shl    rax,0x4
  41ad1a:	lea    rax,[rax+rax*2]
  41ad1e:	add    r15,QWORD PTR [r10+rax*1+0x38]
  41ad23:	add    rdi,0x1
  41ad27:	add    rax,r14
  41ad2a:	nop    WORD PTR [rax+rax*1+0x0]
  41ad30:	mov    rbx,rdi
  41ad33:	cmp    rdi,r12
  41ad36:	jge    41ad46 <isspace@plt+0x17436>
  41ad38:	lea    rdi,[rbx+0x1]
  41ad3c:	cmp    QWORD PTR [rax],0x0
  41ad40:	lea    rax,[rax+0x30]
  41ad44:	je     41ad30 <isspace@plt+0x17420>
  41ad46:	cmp    r11d,ebx
  41ad49:	jle    41acc7 <isspace@plt+0x173b7>
  41ad4f:	cmp    r15,rsi
  41ad52:	jb     41ad10 <isspace@plt+0x17400>
  41ad54:	jmp    41acc7 <isspace@plt+0x173b7>
  41ad59:	call   403280 <__stack_chk_fail@plt>
  41ad5e:	xchg   ax,ax
  41ad60:	push   rax
  41ad61:	mov    rax,QWORD PTR fs:0x28
  41ad6a:	mov    QWORD PTR [rsp],rax
  41ad6e:	mov    rdi,QWORD PTR [rdi+0x98]
  41ad75:	call   41ad90 <isspace@plt+0x17480>
  41ad7a:	mov    rax,QWORD PTR fs:0x28
  41ad83:	cmp    rax,QWORD PTR [rsp]
  41ad87:	jne    41ad8b <isspace@plt+0x1747b>
  41ad89:	pop    rax
  41ad8a:	ret    
  41ad8b:	call   403280 <__stack_chk_fail@plt>
  41ad90:	push   r15
  41ad92:	push   r14
  41ad94:	push   r12
  41ad96:	push   rbx
  41ad97:	push   rax
  41ad98:	mov    rax,QWORD PTR fs:0x28
  41ada1:	mov    QWORD PTR [rsp],rax
  41ada5:	cmp    rsi,0xffffffffffffffff
  41ada9:	je     41af7e <isspace@plt+0x1766e>
  41adaf:	mov    r12,rsi
  41adb2:	mov    r14,rdi
  41adb5:	mov    r15,QWORD PTR [rdi+0x40]
  41adb9:	mov    rdi,QWORD PTR [r15]
  41adbc:	call   410a90 <isspace@plt+0xd180>
  41adc1:	cmp    rax,r12
  41adc4:	cmovb  r12,rax
  41adc8:	mov    rax,QWORD PTR [r14+0x40]
  41adcc:	cmp    QWORD PTR [rax+0x98],r14
  41add3:	jne    41ae91 <isspace@plt+0x17581>
  41add9:	mov    rax,QWORD PTR [r15+0x50]
  41addd:	cmp    rax,r12
  41ade0:	jne    41adea <isspace@plt+0x174da>
  41ade2:	mov    QWORD PTR [r15+0x60],0x0
  41adea:	cmp    QWORD PTR [r15+0x58],r12
  41adee:	jne    41ae00 <isspace@plt+0x174f0>
  41adf0:	mov    rcx,QWORD PTR [r15+0x88]
  41adf7:	cmp    rcx,QWORD PTR [r15+0x90]
  41adfe:	je     41ae23 <isspace@plt+0x17513>
  41ae00:	cmp    r12,rax
  41ae03:	jb     41ae43 <isspace@plt+0x17533>
  41ae05:	cmp    r12,QWORD PTR [r15+0x58]
  41ae09:	ja     41ae43 <isspace@plt+0x17533>
  41ae0b:	cmp    r12,rax
  41ae0e:	jbe    41ae65 <isspace@plt+0x17555>
  41ae10:	cmp    r12,QWORD PTR [r15+0x58]
  41ae14:	ja     41ae65 <isspace@plt+0x17555>
  41ae16:	cmp    r12,rax
  41ae19:	jbe    41ae85 <isspace@plt+0x17575>
  41ae1b:	cmp    r12,QWORD PTR [r15+0x58]
  41ae1f:	ja     41ae85 <isspace@plt+0x17575>
  41ae21:	jmp    41ae91 <isspace@plt+0x17581>
  41ae23:	mov    rcx,QWORD PTR [r15+0x80]
  41ae2a:	add    rax,QWORD PTR [rcx+0x10]
  41ae2e:	mov    QWORD PTR [r15+0x50],rax
  41ae32:	mov    rdi,r15
  41ae35:	call   41a4a0 <isspace@plt+0x16b90>
  41ae3a:	mov    rax,QWORD PTR [r15+0x50]
  41ae3e:	cmp    r12,rax
  41ae41:	jae    41ae05 <isspace@plt+0x174f5>
  41ae43:	mov    QWORD PTR [r15+0x50],r12
  41ae47:	mov    eax,DWORD PTR [r15+0x4c]
  41ae4b:	mov    esi,eax
  41ae4d:	shr    esi,0x1f
  41ae50:	add    esi,eax
  41ae52:	sar    esi,1
  41ae54:	mov    rdi,r15
  41ae57:	call   41c410 <isspace@plt+0x18b00>
  41ae5c:	mov    rax,QWORD PTR [r15+0x50]
  41ae60:	cmp    r12,rax
  41ae63:	ja     41ae10 <isspace@plt+0x17500>
  41ae65:	mov    rdi,QWORD PTR [r15]
  41ae68:	mov    rsi,r12
  41ae6b:	call   413560 <isspace@plt+0xfc50>
  41ae70:	mov    QWORD PTR [r15+0x50],rax
  41ae74:	mov    rdi,r15
  41ae77:	call   41a4a0 <isspace@plt+0x16b90>
  41ae7c:	mov    rax,QWORD PTR [r15+0x50]
  41ae80:	cmp    r12,rax
  41ae83:	ja     41ae1b <isspace@plt+0x1750b>
  41ae85:	mov    QWORD PTR [r15+0x50],r12
  41ae89:	mov    rdi,r15
  41ae8c:	call   41a4a0 <isspace@plt+0x16b90>
  41ae91:	mov    rax,QWORD PTR [r14+0x40]
  41ae95:	mov    rdi,QWORD PTR [rax]
  41ae98:	mov    rsi,r12
  41ae9b:	call   410fc0 <isspace@plt+0xd6b0>
  41aea0:	mov    QWORD PTR [r14],rax
  41aea3:	cmp    BYTE PTR [r14+0x10],0x0
  41aea8:	je     41af01 <isspace@plt+0x175f1>
  41aeaa:	cmp    QWORD PTR [r14+0x18],r12
  41aeae:	je     41aeb8 <isspace@plt+0x175a8>
  41aeb0:	mov    DWORD PTR [r14+0x28],0x0
  41aeb8:	mov    QWORD PTR [r14+0x18],r12
  41aebc:	mov    rdi,QWORD PTR [r14+0x40]
  41aec0:	mov    rdx,QWORD PTR [rdi+0x50]
  41aec4:	cmp    rdx,r12
  41aec7:	ja     41aecf <isspace@plt+0x175bf>
  41aec9:	cmp    QWORD PTR [rdi+0x58],r12
  41aecd:	jae    41af0d <isspace@plt+0x175fd>
  41aecf:	mov    QWORD PTR [r14+0x30],0x0
  41aed7:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41aedf:	cmp    QWORD PTR [rdi+0x98],r14
  41aee6:	jne    41af7e <isspace@plt+0x1766e>
  41aeec:	mov    rax,QWORD PTR [rdi+0x80]
  41aef3:	mov    QWORD PTR [r14+0x30],rax
  41aef7:	mov    QWORD PTR [r14+0x20],0x0
  41aeff:	jmp    41af7e <isspace@plt+0x1766e>
  41af01:	mov    QWORD PTR [r14+0x8],rax
  41af05:	cmp    QWORD PTR [r14+0x18],r12
  41af09:	jne    41aeb0 <isspace@plt+0x175a0>
  41af0b:	jmp    41aeb8 <isspace@plt+0x175a8>
  41af0d:	mov    r11,QWORD PTR [rdi+0x80]
  41af14:	test   r11,r11
  41af17:	je     41af5c <isspace@plt+0x1764c>
  41af19:	mov    rcx,QWORD PTR [rdi+0x88]
  41af20:	xor    r9d,r9d
  41af23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41af2d:	nop    DWORD PTR [rax]
  41af30:	cmp    rdx,r12
  41af33:	setb   bl
  41af36:	cmp    r11,rcx
  41af39:	je     41af9b <isspace@plt+0x1768b>
  41af3b:	cmp    rdx,r12
  41af3e:	jae    41af9b <isspace@plt+0x1768b>
  41af40:	mov    rax,QWORD PTR [r11+0x10]
  41af44:	add    rax,rdx
  41af47:	cmp    rax,r12
  41af4a:	ja     41af99 <isspace@plt+0x17689>
  41af4c:	add    r9d,0x1
  41af50:	mov    r11,QWORD PTR [r11+0x8]
  41af54:	mov    rdx,rax
  41af57:	test   r11,r11
  41af5a:	jne    41af30 <isspace@plt+0x17620>
  41af5c:	mov    r11,QWORD PTR [rdi+0x90]
  41af63:	mov    r9d,DWORD PTR [rdi+0x4c]
  41af67:	add    r9d,0xffffffff
  41af6b:	xor    eax,eax
  41af6d:	mov    QWORD PTR [r14+0x30],r11
  41af71:	mov    DWORD PTR [r14+0x20],r9d
  41af75:	mov    DWORD PTR [r14+0x24],eax
  41af79:	call   41a4a0 <isspace@plt+0x16b90>
  41af7e:	mov    rax,QWORD PTR fs:0x28
  41af87:	cmp    rax,QWORD PTR [rsp]
  41af8b:	jne    41b009 <isspace@plt+0x176f9>
  41af8d:	add    rsp,0x8
  41af91:	pop    rbx
  41af92:	pop    r12
  41af94:	pop    r14
  41af96:	pop    r15
  41af98:	ret    
  41af99:	mov    bl,0x1
  41af9b:	mov    r8d,DWORD PTR [rdi+0x48]
  41af9f:	mov    eax,DWORD PTR [r11+0x20]
  41afa3:	cmp    r8d,eax
  41afa6:	cmovg  r8d,eax
  41afaa:	xor    eax,eax
  41afac:	test   bl,bl
  41afae:	je     41af6d <isspace@plt+0x1765d>
  41afb0:	test   r8d,r8d
  41afb3:	jle    41af6d <isspace@plt+0x1765d>
  41afb5:	movsxd rcx,r8d
  41afb8:	lea    r10,[r11+0x68]
  41afbc:	xor    eax,eax
  41afbe:	xchg   ax,ax
  41afc0:	movsxd rsi,eax
  41afc3:	mov    rax,rsi
  41afc6:	shl    rax,0x4
  41afca:	lea    rbx,[rax+rax*2]
  41afce:	add    rdx,QWORD PTR [r11+rbx*1+0x38]
  41afd3:	add    rsi,0x1
  41afd7:	add    rbx,r10
  41afda:	nop    WORD PTR [rax+rax*1+0x0]
  41afe0:	mov    rax,rsi
  41afe3:	cmp    rsi,rcx
  41afe6:	jge    41aff6 <isspace@plt+0x176e6>
  41afe8:	lea    rsi,[rax+0x1]
  41afec:	cmp    QWORD PTR [rbx],0x0
  41aff0:	lea    rbx,[rbx+0x30]
  41aff4:	je     41afe0 <isspace@plt+0x176d0>
  41aff6:	cmp    rdx,r12
  41aff9:	jae    41af6d <isspace@plt+0x1765d>
  41afff:	cmp    r8d,eax
  41b002:	jg     41afc0 <isspace@plt+0x176b0>
  41b004:	jmp    41af6d <isspace@plt+0x1765d>
  41b009:	call   403280 <__stack_chk_fail@plt>
  41b00e:	xchg   ax,ax
  41b010:	push   rbp
  41b011:	push   r15
  41b013:	push   r14
  41b015:	push   r12
  41b017:	push   rbx
  41b018:	sub    rsp,0x40
  41b01c:	mov    rax,QWORD PTR fs:0x28
  41b025:	mov    QWORD PTR [rsp+0x38],rax
  41b02a:	mov    rax,QWORD PTR [rdi+0xb8]
  41b031:	test   rax,rax
  41b034:	je     41b4a6 <isspace@plt+0x17b96>
  41b03a:	mov    r14,rsi
  41b03d:	mov    rbx,rdi
  41b040:	mov    r15,QWORD PTR [rax+0x18]
  41b044:	movzx  ebp,BYTE PTR [rsi]
  41b047:	lea    r12,[rdi+0x18]
  41b04b:	vmovups xmm0,XMMWORD PTR [rdi+0x38]
  41b050:	vmovups XMMWORD PTR [rsi+0x20],xmm0
  41b055:	cmp    rbp,0xa
  41b059:	je     41b156 <isspace@plt+0x17846>
  41b05f:	cmp    bpl,0x9
  41b063:	jne    41b269 <isspace@plt+0x17959>
  41b069:	mov    DWORD PTR [r14+0x18],0x1
  41b071:	mov    ecx,DWORD PTR [rbx+0xc0]
  41b077:	mov    r12d,DWORD PTR [rbx+0xf0]
  41b07e:	mov    eax,ecx
  41b080:	cdq    
  41b081:	idiv   r12d
  41b084:	sub    r12d,edx
  41b087:	jle    41b147 <isspace@plt+0x17837>
  41b08d:	xor    ebp,ebp
  41b08f:	nop
  41b090:	cmp    ecx,DWORD PTR [rbx+0x48]
  41b093:	jl     41b0be <isspace@plt+0x177ae>
  41b095:	mov    rax,QWORD PTR [rbx+0xb8]
  41b09c:	mov    rax,QWORD PTR [rax+0x8]
  41b0a0:	mov    QWORD PTR [rbx+0xb8],rax
  41b0a7:	mov    DWORD PTR [rbx+0xc0],0x0
  41b0b1:	test   rax,rax
  41b0b4:	je     41b4a6 <isspace@plt+0x17b96>
  41b0ba:	mov    QWORD PTR [rax+0x18],r15
  41b0be:	xor    eax,eax
  41b0c0:	xor    ecx,ecx
  41b0c2:	test   ebp,ebp
  41b0c4:	setne  al
  41b0c7:	sete   cl
  41b0ca:	mov    QWORD PTR [r14+0x10],rcx
  41b0ce:	mov    rax,QWORD PTR [rbx+rax*8+0xd0]
  41b0d6:	mov    rsi,QWORD PTR [rax]
  41b0d9:	mov    edx,0xf
  41b0de:	mov    rdi,r14
  41b0e1:	vzeroupper 
  41b0e4:	call   403150 <strncpy@plt>
  41b0e9:	mov    rax,QWORD PTR [rbx+0xb8]
  41b0f0:	movsxd rcx,DWORD PTR [rbx+0xc0]
  41b0f7:	lea    rcx,[rcx+rcx*2]
  41b0fb:	shl    rcx,0x4
  41b0ff:	vmovups ymm0,YMMWORD PTR [r14]
  41b104:	vmovups ymm1,YMMWORD PTR [r14+0x10]
  41b10a:	vmovups YMMWORD PTR [rax+rcx*1+0x38],ymm1
  41b110:	vmovups YMMWORD PTR [rax+rcx*1+0x28],ymm0
  41b116:	mov    rax,QWORD PTR [r14+0x10]
  41b11a:	mov    rcx,QWORD PTR [rbx+0xb8]
  41b121:	add    QWORD PTR [rcx+0x10],rax
  41b125:	mov    eax,DWORD PTR [r14+0x18]
  41b129:	add    DWORD PTR [rcx+0x20],eax
  41b12c:	mov    ecx,DWORD PTR [rbx+0xc0]
  41b132:	add    ecx,0x1
  41b135:	mov    DWORD PTR [rbx+0xc0],ecx
  41b13b:	add    ebp,0x1
  41b13e:	cmp    ebp,r12d
  41b141:	jl     41b090 <isspace@plt+0x17780>
  41b147:	mov    QWORD PTR [r14+0x10],0x1
  41b14f:	mov    al,0x1
  41b151:	jmp    41b4a8 <isspace@plt+0x17b98>
  41b156:	mov    DWORD PTR [r14+0x18],0x1
  41b15e:	mov    eax,DWORD PTR [rbx+0xc0]
  41b164:	cmp    eax,DWORD PTR [rbx+0x48]
  41b167:	jl     41b192 <isspace@plt+0x17882>
  41b169:	mov    rax,QWORD PTR [rbx+0xb8]
  41b170:	mov    rax,QWORD PTR [rax+0x8]
  41b174:	mov    QWORD PTR [rbx+0xb8],rax
  41b17b:	mov    DWORD PTR [rbx+0xc0],0x0
  41b185:	test   rax,rax
  41b188:	je     41b4a6 <isspace@plt+0x17b96>
  41b18e:	mov    QWORD PTR [rax+0x18],r15
  41b192:	mov    rax,QWORD PTR [rbx+0xe0]
  41b199:	mov    rsi,QWORD PTR [rax]
  41b19c:	mov    edx,0xf
  41b1a1:	mov    rdi,r14
  41b1a4:	call   403150 <strncpy@plt>
  41b1a9:	mov    rax,QWORD PTR [rbx+0xb8]
  41b1b0:	movsxd rcx,DWORD PTR [rbx+0xc0]
  41b1b7:	lea    rcx,[rcx+rcx*2]
  41b1bb:	shl    rcx,0x4
  41b1bf:	vmovups ymm0,YMMWORD PTR [r14]
  41b1c4:	vmovups ymm1,YMMWORD PTR [r14+0x10]
  41b1ca:	vmovups YMMWORD PTR [rax+rcx*1+0x38],ymm1
  41b1d0:	vmovups YMMWORD PTR [rax+rcx*1+0x28],ymm0
  41b1d6:	mov    rcx,QWORD PTR [r14+0x10]
  41b1da:	mov    rax,QWORD PTR [rbx+0xb8]
  41b1e1:	add    QWORD PTR [rax+0x10],rcx
  41b1e5:	mov    ecx,DWORD PTR [r14+0x18]
  41b1e9:	add    DWORD PTR [rax+0x20],ecx
  41b1ec:	mov    ecx,DWORD PTR [rbx+0xc0]
  41b1f2:	add    ecx,0x1
  41b1f5:	cmp    ecx,DWORD PTR [rbx+0x48]
  41b1f8:	jge    41b240 <isspace@plt+0x17930>
  41b1fa:	movsxd rcx,ecx
  41b1fd:	lea    rdx,[rcx+rcx*2]
  41b201:	shl    rdx,0x4
  41b205:	add    rdx,0x28
  41b209:	nop    DWORD PTR [rax+0x0]
  41b210:	vmovups ymm0,YMMWORD PTR [r12]
  41b216:	vmovups ymm1,YMMWORD PTR [r12+0x10]
  41b21d:	vmovups YMMWORD PTR [rax+rdx*1+0x10],ymm1
  41b223:	vmovups YMMWORD PTR [rax+rdx*1],ymm0
  41b228:	add    rcx,0x1
  41b22c:	movsxd rsi,DWORD PTR [rbx+0x48]
  41b230:	mov    rax,QWORD PTR [rbx+0xb8]
  41b237:	add    rdx,0x30
  41b23b:	cmp    rcx,rsi
  41b23e:	jl     41b210 <isspace@plt+0x17900>
  41b240:	mov    rax,QWORD PTR [rax+0x8]
  41b244:	mov    QWORD PTR [rbx+0xb8],rax
  41b24b:	test   rax,rax
  41b24e:	je     41b258 <isspace@plt+0x17948>
  41b250:	add    r15,0x1
  41b254:	mov    QWORD PTR [rax+0x18],r15
  41b258:	mov    DWORD PTR [rbx+0xc0],0x0
  41b262:	mov    al,0x1
  41b264:	jmp    41b4a8 <isspace@plt+0x17b98>
  41b269:	test   bpl,bpl
  41b26c:	js     41b344 <isspace@plt+0x17a34>
  41b272:	call   4038f0 <__ctype_b_loc@plt>
  41b277:	mov    rax,QWORD PTR [rax]
  41b27a:	test   BYTE PTR [rax+rbp*2+0x1],0x40
  41b27f:	jne    41b327 <isspace@plt+0x17a17>
  41b285:	lea    rax,[r14+0x20]
  41b289:	mov    BYTE PTR [rsp+0x8],0x5e
  41b28e:	mov    cl,0x3f
  41b290:	cmp    bpl,0x7f
  41b294:	je     41b29b <isspace@plt+0x1798b>
  41b296:	mov    ecx,ebp
  41b298:	add    cl,0x40
  41b29b:	mov    BYTE PTR [rsp+0x9],cl
  41b29f:	mov    QWORD PTR [rsp+0x10],0x0
  41b2a8:	mov    QWORD PTR [rsp+0xa],0x0
  41b2b1:	mov    QWORD PTR [rsp+0x18],0x1
  41b2ba:	mov    DWORD PTR [rsp+0x20],0x2
  41b2c2:	vmovups xmm0,XMMWORD PTR [rax]
  41b2c6:	vmovups XMMWORD PTR [rsp+0x28],xmm0
  41b2cc:	mov    al,BYTE PTR [rsp+0x8]
  41b2d0:	mov    BYTE PTR [r14],al
  41b2d3:	mov    al,BYTE PTR [rsp+0x9]
  41b2d7:	mov    BYTE PTR [r14+0x1],al
  41b2db:	mov    rax,QWORD PTR [rsp+0xa]
  41b2e0:	mov    QWORD PTR [r14+0x2],rax
  41b2e4:	mov    eax,DWORD PTR [rsp+0x12]
  41b2e8:	mov    DWORD PTR [r14+0xa],eax
  41b2ec:	movzx  eax,WORD PTR [rsp+0x16]
  41b2f1:	mov    WORD PTR [r14+0xe],ax
  41b2f6:	mov    rax,QWORD PTR [rsp+0x18]
  41b2fb:	mov    QWORD PTR [r14+0x10],rax
  41b2ff:	mov    eax,DWORD PTR [rsp+0x20]
  41b303:	mov    DWORD PTR [r14+0x18],eax
  41b307:	mov    eax,DWORD PTR [rsp+0x24]
  41b30b:	mov    DWORD PTR [r14+0x1c],eax
  41b30f:	vmovups xmm0,XMMWORD PTR [rsp+0x18]
  41b315:	vmovups XMMWORD PTR [r14+0x10],xmm0
  41b31b:	vmovups xmm0,XMMWORD PTR [rsp+0x28]
  41b321:	vmovups XMMWORD PTR [r14+0x20],xmm0
  41b327:	cmp    bpl,0x20
  41b32b:	jne    41b344 <isspace@plt+0x17a34>
  41b32d:	mov    rax,QWORD PTR [rbx+0xc8]
  41b334:	mov    rsi,QWORD PTR [rax]
  41b337:	mov    edx,0xf
  41b33c:	mov    rdi,r14
  41b33f:	call   403150 <strncpy@plt>
  41b344:	movsxd rax,DWORD PTR [rbx+0xc0]
  41b34b:	mov    ecx,DWORD PTR [r14+0x18]
  41b34f:	add    ecx,eax
  41b351:	mov    edx,DWORD PTR [rbx+0x48]
  41b354:	cmp    ecx,edx
  41b356:	jle    41b496 <isspace@plt+0x17b86>
  41b35c:	mov    rcx,QWORD PTR [rbx+0xb8]
  41b363:	cmp    eax,edx
  41b365:	jge    41b3b0 <isspace@plt+0x17aa0>
  41b367:	lea    rdx,[rax+rax*2]
  41b36b:	shl    rdx,0x4
  41b36f:	add    rdx,0x28
  41b373:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b37d:	nop    DWORD PTR [rax]
  41b380:	vmovups ymm0,YMMWORD PTR [r12]
  41b386:	vmovups ymm1,YMMWORD PTR [r12+0x10]
  41b38d:	vmovups YMMWORD PTR [rcx+rdx*1+0x10],ymm1
  41b393:	vmovups YMMWORD PTR [rcx+rdx*1],ymm0
  41b398:	add    rax,0x1
  41b39c:	movsxd rsi,DWORD PTR [rbx+0x48]
  41b3a0:	mov    rcx,QWORD PTR [rbx+0xb8]
  41b3a7:	add    rdx,0x30
  41b3ab:	cmp    rax,rsi
  41b3ae:	jl     41b380 <isspace@plt+0x17a70>
  41b3b0:	mov    rax,QWORD PTR [rcx+0x8]
  41b3b4:	mov    QWORD PTR [rbx+0xb8],rax
  41b3bb:	mov    DWORD PTR [rbx+0xc0],0x0
  41b3c5:	test   rax,rax
  41b3c8:	je     41b4a6 <isspace@plt+0x17b96>
  41b3ce:	mov    ecx,DWORD PTR [r14+0x18]
  41b3d2:	add    DWORD PTR [rax+0x20],ecx
  41b3d5:	mov    rcx,QWORD PTR [r14+0x10]
  41b3d9:	add    QWORD PTR [rax+0x10],rcx
  41b3dd:	mov    QWORD PTR [rax+0x18],r15
  41b3e1:	movsxd rcx,DWORD PTR [rbx+0xc0]
  41b3e8:	lea    rcx,[rcx+rcx*2]
  41b3ec:	shl    rcx,0x4
  41b3f0:	vmovups ymm0,YMMWORD PTR [r14]
  41b3f5:	vmovups ymm1,YMMWORD PTR [r14+0x10]
  41b3fb:	vmovups YMMWORD PTR [rax+rcx*1+0x38],ymm1
  41b401:	vmovups YMMWORD PTR [rax+rcx*1+0x28],ymm0
  41b407:	movsxd rdx,DWORD PTR [rbx+0xc0]
  41b40e:	lea    rcx,[rdx+0x1]
  41b412:	mov    DWORD PTR [rbx+0xc0],ecx
  41b418:	mov    al,0x1
  41b41a:	cmp    DWORD PTR [r14+0x18],0x2
  41b41f:	jl     41b4a8 <isspace@plt+0x17b98>
  41b425:	mov    rsi,QWORD PTR [rbx+0xb8]
  41b42c:	add    edx,0x2
  41b42f:	mov    DWORD PTR [rbx+0xc0],edx
  41b435:	lea    rcx,[rcx+rcx*2]
  41b439:	shl    rcx,0x4
  41b43d:	vxorps xmm0,xmm0,xmm0
  41b441:	vmovups YMMWORD PTR [rsi+rcx*1+0x38],ymm0
  41b447:	vmovups YMMWORD PTR [rsi+rcx*1+0x28],ymm0
  41b44d:	cmp    DWORD PTR [r14+0x18],0x3
  41b452:	jl     41b4a8 <isspace@plt+0x17b98>
  41b454:	mov    ecx,0x2
  41b459:	nop    DWORD PTR [rax+0x0]
  41b460:	movsxd rdx,DWORD PTR [rbx+0xc0]
  41b467:	mov    rsi,QWORD PTR [rbx+0xb8]
  41b46e:	lea    edi,[rdx+0x1]
  41b471:	mov    DWORD PTR [rbx+0xc0],edi
  41b477:	lea    rdx,[rdx+rdx*2]
  41b47b:	shl    rdx,0x4
  41b47f:	vmovups YMMWORD PTR [rsi+rdx*1+0x38],ymm0
  41b485:	vmovups YMMWORD PTR [rsi+rdx*1+0x28],ymm0
  41b48b:	add    ecx,0x1
  41b48e:	cmp    ecx,DWORD PTR [r14+0x18]
  41b492:	jl     41b460 <isspace@plt+0x17b50>
  41b494:	jmp    41b4a8 <isspace@plt+0x17b98>
  41b496:	mov    rax,QWORD PTR [rbx+0xb8]
  41b49d:	test   rax,rax
  41b4a0:	jne    41b3ce <isspace@plt+0x17abe>
  41b4a6:	xor    eax,eax
  41b4a8:	mov    rcx,QWORD PTR fs:0x28
  41b4b1:	cmp    rcx,QWORD PTR [rsp+0x38]
  41b4b6:	jne    41b4c8 <isspace@plt+0x17bb8>
  41b4b8:	add    rsp,0x40
  41b4bc:	pop    rbx
  41b4bd:	pop    r12
  41b4bf:	pop    r14
  41b4c1:	pop    r15
  41b4c3:	pop    rbp
  41b4c4:	vzeroupper 
  41b4c7:	ret    
  41b4c8:	vzeroupper 
  41b4cb:	call   403280 <__stack_chk_fail@plt>
  41b4d0:	push   rax
  41b4d1:	mov    rax,QWORD PTR fs:0x28
  41b4da:	mov    QWORD PTR [rsp],rax
  41b4de:	mov    rsi,QWORD PTR [rdi]
  41b4e1:	mov    rax,QWORD PTR [rdi+0x40]
  41b4e5:	mov    rdi,QWORD PTR [rax]
  41b4e8:	call   411060 <isspace@plt+0xd750>
  41b4ed:	mov    rcx,QWORD PTR fs:0x28
  41b4f6:	cmp    rcx,QWORD PTR [rsp]
  41b4fa:	jne    41b4fe <isspace@plt+0x17bee>
  41b4fc:	pop    rcx
  41b4fd:	ret    
  41b4fe:	call   403280 <__stack_chk_fail@plt>
  41b503:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b50d:	nop    DWORD PTR [rax]
  41b510:	push   rax
  41b511:	mov    rax,QWORD PTR fs:0x28
  41b51a:	mov    QWORD PTR [rsp],rax
  41b51e:	mov    BYTE PTR [rdi+0x104],0x1
  41b525:	mov    rax,QWORD PTR fs:0x28
  41b52e:	cmp    rax,QWORD PTR [rsp]
  41b532:	jne    41b536 <isspace@plt+0x17c26>
  41b534:	pop    rax
  41b535:	ret    
  41b536:	call   403280 <__stack_chk_fail@plt>
  41b53b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b540:	push   rax
  41b541:	mov    rax,QWORD PTR fs:0x28
  41b54a:	mov    QWORD PTR [rsp],rax
  41b54e:	cmp    BYTE PTR [rdi+0x104],0x0
  41b555:	je     41b5b7 <isspace@plt+0x17ca7>
  41b557:	mov    rax,QWORD PTR [rdi+0x88]
  41b55e:	mov    r8,QWORD PTR [rax+0x8]
  41b562:	test   r8,r8
  41b565:	je     41b5ac <isspace@plt+0x17c9c>
  41b567:	lea    rcx,[rdi+0x18]
  41b56b:	mov    edx,DWORD PTR [rdi+0x48]
  41b56e:	xchg   ax,ax
  41b570:	test   edx,edx
  41b572:	jle    41b5a3 <isspace@plt+0x17c93>
  41b574:	lea    rsi,[r8+0x28]
  41b578:	xor    eax,eax
  41b57a:	nop    WORD PTR [rax+rax*1+0x0]
  41b580:	vmovups ymm0,YMMWORD PTR [rcx]
  41b584:	vmovups ymm1,YMMWORD PTR [rcx+0x10]
  41b589:	vmovups YMMWORD PTR [rsi+0x10],ymm1
  41b58e:	vmovups YMMWORD PTR [rsi],ymm0
  41b592:	add    rax,0x1
  41b596:	movsxd rdx,DWORD PTR [rdi+0x48]
  41b59a:	add    rsi,0x30
  41b59e:	cmp    rax,rdx
  41b5a1:	jl     41b580 <isspace@plt+0x17c70>
  41b5a3:	mov    r8,QWORD PTR [r8+0x8]
  41b5a7:	test   r8,r8
  41b5aa:	jne    41b570 <isspace@plt+0x17c60>
  41b5ac:	mov    BYTE PTR [rdi+0x104],0x0
  41b5b3:	mov    al,0x1
  41b5b5:	jmp    41b5b9 <isspace@plt+0x17ca9>
  41b5b7:	xor    eax,eax
  41b5b9:	mov    rcx,QWORD PTR fs:0x28
  41b5c2:	cmp    rcx,QWORD PTR [rsp]
  41b5c6:	jne    41b5cd <isspace@plt+0x17cbd>
  41b5c8:	pop    rcx
  41b5c9:	vzeroupper 
  41b5cc:	ret    
  41b5cd:	vzeroupper 
  41b5d0:	call   403280 <__stack_chk_fail@plt>
  41b5d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b5df:	nop
  41b5e0:	push   rbp
  41b5e1:	push   r15
  41b5e3:	push   r14
  41b5e5:	push   r12
  41b5e7:	push   rbx
  41b5e8:	sub    rsp,0x10
  41b5ec:	mov    ebp,esi
  41b5ee:	mov    r15,rdi
  41b5f1:	mov    rax,QWORD PTR fs:0x28
  41b5fa:	mov    QWORD PTR [rsp+0x8],rax
  41b5ff:	test   esi,esi
  41b601:	mov    r12d,0x1
  41b607:	cmovle ebp,r12d
  41b60b:	test   edx,edx
  41b60d:	cmovg  r12d,edx
  41b611:	cmp    DWORD PTR [rdi+0x48],ebp
  41b614:	jne    41b626 <isspace@plt+0x17d16>
  41b616:	cmp    DWORD PTR [r15+0x4c],r12d
  41b61a:	jne    41b626 <isspace@plt+0x17d16>
  41b61c:	mov    BYTE PTR [r15+0x104],0x1
  41b624:	jmp    41b6a0 <isspace@plt+0x17d90>
  41b626:	mov    eax,ebp
  41b628:	imul   eax,r12d
  41b62c:	lea    edi,[rax*4+0x1]
  41b633:	call   4035e0 <malloc@plt>
  41b638:	test   rax,rax
  41b63b:	je     41b6ac <isspace@plt+0x17d9c>
  41b63d:	mov    r14,rax
  41b640:	mov    eax,r12d
  41b643:	mov    ecx,ebp
  41b645:	lea    rbx,[rcx+rcx*2]
  41b649:	shl    rbx,0x4
  41b64d:	add    rbx,0x28
  41b651:	imul   rbx,rax
  41b655:	cmp    rbx,QWORD PTR [r15+0x70]
  41b659:	jbe    41b674 <isspace@plt+0x17d64>
  41b65b:	mov    rdi,QWORD PTR [r15+0x78]
  41b65f:	mov    rsi,rbx
  41b662:	call   4036b0 <realloc@plt>
  41b667:	test   rax,rax
  41b66a:	je     41b6a4 <isspace@plt+0x17d94>
  41b66c:	mov    QWORD PTR [r15+0x78],rax
  41b670:	mov    QWORD PTR [r15+0x70],rbx
  41b674:	mov    rdi,QWORD PTR [r15+0x8]
  41b678:	call   4030d0 <free@plt>
  41b67d:	mov    QWORD PTR [r15+0x8],r14
  41b681:	mov    DWORD PTR [r15+0x48],ebp
  41b685:	mov    DWORD PTR [r15+0x4c],r12d
  41b689:	mov    rdx,QWORD PTR [r15+0x70]
  41b68d:	mov    rdi,QWORD PTR [r15+0x78]
  41b691:	xor    esi,esi
  41b693:	call   403360 <memset@plt>
  41b698:	mov    rdi,r15
  41b69b:	call   41a4a0 <isspace@plt+0x16b90>
  41b6a0:	mov    al,0x1
  41b6a2:	jmp    41b6ae <isspace@plt+0x17d9e>
  41b6a4:	mov    rdi,r14
  41b6a7:	call   4030d0 <free@plt>
  41b6ac:	xor    eax,eax
  41b6ae:	mov    rcx,QWORD PTR fs:0x28
  41b6b7:	cmp    rcx,QWORD PTR [rsp+0x8]
  41b6bc:	jne    41b6cb <isspace@plt+0x17dbb>
  41b6be:	add    rsp,0x10
  41b6c2:	pop    rbx
  41b6c3:	pop    r12
  41b6c5:	pop    r14
  41b6c7:	pop    r15
  41b6c9:	pop    rbp
  41b6ca:	ret    
  41b6cb:	call   403280 <__stack_chk_fail@plt>
  41b6d0:	push   rax
  41b6d1:	mov    rax,QWORD PTR fs:0x28
  41b6da:	mov    QWORD PTR [rsp],rax
  41b6de:	mov    eax,DWORD PTR [rdi+0x4c]
  41b6e1:	mov    rcx,QWORD PTR fs:0x28
  41b6ea:	cmp    rcx,QWORD PTR [rsp]
  41b6ee:	jne    41b6f2 <isspace@plt+0x17de2>
  41b6f0:	pop    rcx
  41b6f1:	ret    
  41b6f2:	call   403280 <__stack_chk_fail@plt>
  41b6f7:	nop    WORD PTR [rax+rax*1+0x0]
  41b700:	push   rax
  41b701:	mov    rax,QWORD PTR fs:0x28
  41b70a:	mov    QWORD PTR [rsp],rax
  41b70e:	mov    eax,DWORD PTR [rdi+0x48]
  41b711:	mov    rcx,QWORD PTR fs:0x28
  41b71a:	cmp    rcx,QWORD PTR [rsp]
  41b71e:	jne    41b722 <isspace@plt+0x17e12>
  41b720:	pop    rcx
  41b721:	ret    
  41b722:	call   403280 <__stack_chk_fail@plt>
  41b727:	nop    WORD PTR [rax+rax*1+0x0]
  41b730:	push   rbx
  41b731:	sub    rsp,0x10
  41b735:	mov    rax,QWORD PTR fs:0x28
  41b73e:	mov    QWORD PTR [rsp+0x8],rax
  41b743:	test   rdi,rdi
  41b746:	je     41b865 <isspace@plt+0x17f55>
  41b74c:	mov    rbx,rdi
  41b74f:	jmp    41b76c <isspace@plt+0x17e5c>
  41b751:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b75b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b760:	add    DWORD PTR [rcx+0xb0],0xffffffff
  41b767:	call   4030d0 <free@plt>
  41b76c:	mov    rdi,QWORD PTR [rbx+0xf8]
  41b773:	test   rdi,rdi
  41b776:	je     41b84b <isspace@plt+0x17f3b>
  41b77c:	mov    rax,QWORD PTR [rdi+0x50]
  41b780:	mov    rcx,rax
  41b783:	test   rax,rax
  41b786:	je     41b79d <isspace@plt+0x17e8d>
  41b788:	nop    DWORD PTR [rax+rax*1+0x0]
  41b790:	add    DWORD PTR [rcx+0x3c],0xffffffff
  41b794:	mov    rcx,QWORD PTR [rcx+0x50]
  41b798:	test   rcx,rcx
  41b79b:	jne    41b790 <isspace@plt+0x17e80>
  41b79d:	mov    rcx,QWORD PTR [rdi+0x48]
  41b7a1:	test   rcx,rcx
  41b7a4:	je     41b7ae <isspace@plt+0x17e9e>
  41b7a6:	mov    QWORD PTR [rcx+0x50],rax
  41b7aa:	mov    rax,QWORD PTR [rdi+0x50]
  41b7ae:	test   rax,rax
  41b7b1:	je     41b7b7 <isspace@plt+0x17ea7>
  41b7b3:	mov    QWORD PTR [rax+0x48],rcx
  41b7b7:	mov    rcx,QWORD PTR [rdi+0x40]
  41b7bb:	cmp    QWORD PTR [rcx+0xf8],rdi
  41b7c2:	je     41b7f0 <isspace@plt+0x17ee0>
  41b7c4:	cmp    QWORD PTR [rcx+0x98],rdi
  41b7cb:	je     41b800 <isspace@plt+0x17ef0>
  41b7cd:	cmp    QWORD PTR [rcx+0xa8],rdi
  41b7d4:	je     41b81c <isspace@plt+0x17f0c>
  41b7d6:	cmp    QWORD PTR [rcx+0xa0],rdi
  41b7dd:	jne    41b760 <isspace@plt+0x17e50>
  41b7df:	jmp    41b834 <isspace@plt+0x17f24>
  41b7e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b7eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7f0:	mov    QWORD PTR [rcx+0xf8],rax
  41b7f7:	cmp    QWORD PTR [rcx+0x98],rdi
  41b7fe:	jne    41b7cd <isspace@plt+0x17ebd>
  41b800:	mov    rdx,rax
  41b803:	test   rax,rax
  41b806:	jne    41b80c <isspace@plt+0x17efc>
  41b808:	mov    rdx,QWORD PTR [rdi+0x48]
  41b80c:	mov    QWORD PTR [rcx+0x98],rdx
  41b813:	cmp    QWORD PTR [rcx+0xa8],rdi
  41b81a:	jne    41b7d6 <isspace@plt+0x17ec6>
  41b81c:	mov    QWORD PTR [rcx+0xa8],0x0
  41b827:	cmp    QWORD PTR [rcx+0xa0],rdi
  41b82e:	jne    41b760 <isspace@plt+0x17e50>
  41b834:	mov    rdx,QWORD PTR [rdi+0x48]
  41b838:	test   rdx,rdx
  41b83b:	cmovne rax,rdx
  41b83f:	mov    QWORD PTR [rcx+0xa0],rax
  41b846:	jmp    41b760 <isspace@plt+0x17e50>
  41b84b:	mov    rdi,QWORD PTR [rbx+0x8]
  41b84f:	call   4030d0 <free@plt>
  41b854:	mov    rdi,QWORD PTR [rbx+0x78]
  41b858:	call   4030d0 <free@plt>
  41b85d:	mov    rdi,rbx
  41b860:	call   4030d0 <free@plt>
  41b865:	mov    rax,QWORD PTR fs:0x28
  41b86e:	cmp    rax,QWORD PTR [rsp+0x8]
  41b873:	jne    41b87b <isspace@plt+0x17f6b>
  41b875:	add    rsp,0x10
  41b879:	pop    rbx
  41b87a:	ret    
  41b87b:	call   403280 <__stack_chk_fail@plt>
  41b880:	push   rbx
  41b881:	sub    rsp,0x10
  41b885:	mov    rbx,rdi
  41b888:	mov    rax,QWORD PTR fs:0x28
  41b891:	mov    QWORD PTR [rsp+0x8],rax
  41b896:	mov    QWORD PTR [rdi],rsi
  41b899:	mov    rax,QWORD PTR [rdi+0xf8]
  41b8a0:	test   rax,rax
  41b8a3:	je     41b8cf <isspace@plt+0x17fbf>
  41b8a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b8af:	nop
  41b8b0:	mov    BYTE PTR [rax+0x10],0x0
  41b8b4:	mov    rcx,QWORD PTR [rax]
  41b8b7:	mov    rdx,QWORD PTR [rax+0x40]
  41b8bb:	mov    QWORD PTR [rax+0x8],rcx
  41b8bf:	mov    BYTE PTR [rdx+0x104],0x1
  41b8c6:	mov    rax,QWORD PTR [rax+0x50]
  41b8ca:	test   rax,rax
  41b8cd:	jne    41b8b0 <isspace@plt+0x17fa0>
  41b8cf:	mov    rdi,rbx
  41b8d2:	call   41a4a0 <isspace@plt+0x16b90>
  41b8d7:	mov    rdi,QWORD PTR [rbx+0x98]
  41b8de:	xor    esi,esi
  41b8e0:	call   41ad90 <isspace@plt+0x17480>
  41b8e5:	mov    rax,QWORD PTR fs:0x28
  41b8ee:	cmp    rax,QWORD PTR [rsp+0x8]
  41b8f3:	jne    41b8fb <isspace@plt+0x17feb>
  41b8f5:	add    rsp,0x10
  41b8f9:	pop    rbx
  41b8fa:	ret    
  41b8fb:	call   403280 <__stack_chk_fail@plt>
  41b900:	push   rax
  41b901:	mov    rax,QWORD PTR fs:0x28
  41b90a:	mov    QWORD PTR [rsp],rax
  41b90e:	mov    rax,QWORD PTR [rdi+0xf8]
  41b915:	test   rax,rax
  41b918:	je     41b93f <isspace@plt+0x1802f>
  41b91a:	nop    WORD PTR [rax+rax*1+0x0]
  41b920:	mov    BYTE PTR [rax+0x10],0x0
  41b924:	mov    rcx,QWORD PTR [rax]
  41b927:	mov    rdx,QWORD PTR [rax+0x40]
  41b92b:	mov    QWORD PTR [rax+0x8],rcx
  41b92f:	mov    BYTE PTR [rdx+0x104],0x1
  41b936:	mov    rax,QWORD PTR [rax+0x50]
  41b93a:	test   rax,rax
  41b93d:	jne    41b920 <isspace@plt+0x18010>
  41b93f:	call   41a4a0 <isspace@plt+0x16b90>
  41b944:	mov    rax,QWORD PTR fs:0x28
  41b94d:	cmp    rax,QWORD PTR [rsp]
  41b951:	jne    41b955 <isspace@plt+0x18045>
  41b953:	pop    rax
  41b954:	ret    
  41b955:	call   403280 <__stack_chk_fail@plt>
  41b95a:	nop    WORD PTR [rax+rax*1+0x0]
  41b960:	push   r14
  41b962:	push   rbx
  41b963:	sub    rsp,0x28
  41b967:	mov    rax,QWORD PTR fs:0x28
  41b970:	mov    QWORD PTR [rsp+0x20],rax
  41b975:	test   rdi,rdi
  41b978:	je     41ba9a <isspace@plt+0x1818a>
  41b97e:	mov    rbx,rdi
  41b981:	mov    edi,0x1
  41b986:	mov    esi,0x110
  41b98b:	call   403470 <calloc@plt>
  41b990:	test   rax,rax
  41b993:	je     41ba9a <isspace@plt+0x1818a>
  41b999:	mov    r14,rax
  41b99c:	mov    QWORD PTR [rax],rbx
  41b99f:	xor    esi,esi
  41b9a1:	xor    edx,edx
  41b9a3:	mov    rdi,rax
  41b9a6:	call   41ef40 <isspace@plt+0x1b630>
  41b9ab:	test   rax,rax
  41b9ae:	je     41ba92 <isspace@plt+0x18182>
  41b9b4:	vxorps xmm0,xmm0,xmm0
  41b9b8:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  41b9be:	vmovups xmm0,XMMWORD PTR [rip+0x1620a]        # 431bd0 <isspace@plt+0x2e2c0>
  41b9c6:	vmovups XMMWORD PTR [r14+0x18],xmm0
  41b9cc:	mov    QWORD PTR [r14+0x28],0x0
  41b9d4:	mov    DWORD PTR [r14+0x30],0x0
  41b9dc:	mov    eax,DWORD PTR [rsp+0x1c]
  41b9e0:	mov    DWORD PTR [r14+0x44],eax
  41b9e4:	vmovups xmm0,XMMWORD PTR [rsp+0xc]
  41b9ea:	vmovups XMMWORD PTR [r14+0x34],xmm0
  41b9f0:	mov    DWORD PTR [r14+0xf0],0x8
  41b9fb:	lea    rax,[rip+0x255f6]        # 440ff8 <isspace@plt+0x3d6e8>
  41ba02:	vmovq  xmm0,rax
  41ba07:	lea    rax,[rip+0x255e2]        # 440ff0 <isspace@plt+0x3d6e0>
  41ba0e:	vmovq  xmm1,rax
  41ba13:	vpunpcklqdq xmm0,xmm1,xmm0
  41ba17:	lea    rax,[rip+0x255ca]        # 440fe8 <isspace@plt+0x3d6d8>
  41ba1e:	vmovq  xmm1,rax
  41ba23:	lea    rax,[rip+0x255b6]        # 440fe0 <isspace@plt+0x3d6d0>
  41ba2a:	vmovq  xmm2,rax
  41ba2f:	vpunpcklqdq xmm1,xmm2,xmm1
  41ba33:	vinserti128 ymm0,ymm1,xmm0,0x1
  41ba39:	vmovdqu YMMWORD PTR [r14+0xc8],ymm0
  41ba42:	lea    rax,[rip+0x255b7]        # 441000 <isspace@plt+0x3d6f0>
  41ba49:	mov    QWORD PTR [r14+0xe8],rax
  41ba50:	mov    BYTE PTR [r14+0x105],0x0
  41ba58:	mov    rdi,QWORD PTR [r14+0x10]
  41ba5c:	test   rdi,rdi
  41ba5f:	je     41ba69 <isspace@plt+0x18159>
  41ba61:	xor    esi,esi
  41ba63:	vzeroupper 
  41ba66:	call   QWORD PTR [rdi+0x10]
  41ba69:	mov    esi,0x1
  41ba6e:	mov    edx,0x1
  41ba73:	mov    rdi,r14
  41ba76:	vzeroupper 
  41ba79:	call   41b5e0 <isspace@plt+0x17cd0>
  41ba7e:	test   al,al
  41ba80:	je     41ba92 <isspace@plt+0x18182>
  41ba82:	mov    rdi,QWORD PTR [r14+0x98]
  41ba89:	xor    esi,esi
  41ba8b:	call   41ad90 <isspace@plt+0x17480>
  41ba90:	jmp    41ba9d <isspace@plt+0x1818d>
  41ba92:	mov    rdi,r14
  41ba95:	call   41b730 <isspace@plt+0x17e20>
  41ba9a:	xor    r14d,r14d
  41ba9d:	mov    rax,QWORD PTR fs:0x28
  41baa6:	cmp    rax,QWORD PTR [rsp+0x20]
  41baab:	jne    41bab8 <isspace@plt+0x181a8>
  41baad:	mov    rax,r14
  41bab0:	add    rsp,0x28
  41bab4:	pop    rbx
  41bab5:	pop    r14
  41bab7:	ret    
  41bab8:	call   403280 <__stack_chk_fail@plt>
  41babd:	nop    DWORD PTR [rax]
  41bac0:	push   rax
  41bac1:	mov    rax,QWORD PTR fs:0x28
  41baca:	mov    QWORD PTR [rsp],rax
  41bace:	xor    edx,edx
  41bad0:	call   41ef40 <isspace@plt+0x1b630>
  41bad5:	mov    rcx,QWORD PTR fs:0x28
  41bade:	cmp    rcx,QWORD PTR [rsp]
  41bae2:	jne    41bae6 <isspace@plt+0x181d6>
  41bae4:	pop    rcx
  41bae5:	ret    
  41bae6:	call   403280 <__stack_chk_fail@plt>
  41baeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41baf0:	push   rax
  41baf1:	test   sil,0x40
  41baf5:	lea    rax,[rip+0x25504]        # 441000 <isspace@plt+0x3d6f0>
  41bafc:	lea    rcx,[rip+0x254cd]        # 440fd0 <isspace@plt+0x3d6c0>
  41bb03:	cmove  rcx,rax
  41bb07:	mov    eax,esi
  41bb09:	and    eax,0xfffffbff
  41bb0e:	test   sil,0x1
  41bb12:	cmove  eax,esi
  41bb15:	vmovd  xmm0,esi
  41bb19:	mov    rdx,QWORD PTR fs:0x28
  41bb22:	vpbroadcastd xmm0,xmm0
  41bb27:	vpand  xmm0,xmm0,XMMWORD PTR [rip+0x16081]        # 431bb0 <isspace@plt+0x2e2a0>
  41bb2f:	mov    QWORD PTR [rsp],rdx
  41bb33:	vpxor  xmm1,xmm1,xmm1
  41bb37:	vpcmpeqd xmm0,xmm0,xmm1
  41bb3b:	vpmovsxdq ymm0,xmm0
  41bb40:	lea    rdx,[rip+0x254b1]        # 440ff8 <isspace@plt+0x3d6e8>
  41bb47:	vmovq  xmm1,rdx
  41bb4c:	lea    rdx,[rip+0x2549d]        # 440ff0 <isspace@plt+0x3d6e0>
  41bb53:	vmovq  xmm2,rdx
  41bb58:	vpunpcklqdq xmm1,xmm2,xmm1
  41bb5c:	lea    rdx,[rip+0x25485]        # 440fe8 <isspace@plt+0x3d6d8>
  41bb63:	vmovq  xmm2,rdx
  41bb68:	lea    rdx,[rip+0x25471]        # 440fe0 <isspace@plt+0x3d6d0>
  41bb6f:	vmovq  xmm3,rdx
  41bb74:	vpunpcklqdq xmm2,xmm3,xmm2
  41bb78:	vinserti128 ymm1,ymm2,xmm1,0x1
  41bb7e:	lea    rdx,[rip+0x25443]        # 440fc8 <isspace@plt+0x3d6b8>
  41bb85:	vmovq  xmm2,rdx
  41bb8a:	lea    rdx,[rip+0x2542f]        # 440fc0 <isspace@plt+0x3d6b0>
  41bb91:	vmovq  xmm3,rdx
  41bb96:	vpunpcklqdq xmm2,xmm3,xmm2
  41bb9a:	lea    rdx,[rip+0x25417]        # 440fb8 <isspace@plt+0x3d6a8>
  41bba1:	vmovq  xmm3,rdx
  41bba6:	lea    rdx,[rip+0x25403]        # 440fb0 <isspace@plt+0x3d6a0>
  41bbad:	vmovq  xmm4,rdx
  41bbb2:	vpunpcklqdq xmm3,xmm4,xmm3
  41bbb6:	vinserti128 ymm2,ymm3,xmm2,0x1
  41bbbc:	vblendvpd ymm0,ymm2,ymm1,ymm0
  41bbc2:	vmovupd YMMWORD PTR [rdi+0xc8],ymm0
  41bbca:	mov    QWORD PTR [rdi+0xe8],rcx
  41bbd1:	mov    ecx,eax
  41bbd3:	shr    ecx,0xa
  41bbd6:	and    cl,0x1
  41bbd9:	mov    BYTE PTR [rdi+0x105],cl
  41bbdf:	mov    rdi,QWORD PTR [rdi+0x10]
  41bbe3:	test   rdi,rdi
  41bbe6:	je     41bc01 <isspace@plt+0x182f1>
  41bbe8:	mov    esi,eax
  41bbea:	vzeroupper 
  41bbed:	call   QWORD PTR [rdi+0x10]
  41bbf0:	mov    rax,QWORD PTR fs:0x28
  41bbf9:	cmp    rax,QWORD PTR [rsp]
  41bbfd:	jne    41bc15 <isspace@plt+0x18305>
  41bbff:	pop    rax
  41bc00:	ret    
  41bc01:	mov    rax,QWORD PTR fs:0x28
  41bc0a:	cmp    rax,QWORD PTR [rsp]
  41bc0e:	jne    41bc15 <isspace@plt+0x18305>
  41bc10:	pop    rax
  41bc11:	vzeroupper 
  41bc14:	ret    
  41bc15:	vzeroupper 
  41bc18:	call   403280 <__stack_chk_fail@plt>
  41bc1d:	nop    DWORD PTR [rax]
  41bc20:	push   rax
  41bc21:	mov    rax,QWORD PTR fs:0x28
  41bc2a:	mov    QWORD PTR [rsp],rax
  41bc2e:	mov    QWORD PTR [rdi+0x10],rsi
  41bc32:	mov    rax,QWORD PTR fs:0x28
  41bc3b:	cmp    rax,QWORD PTR [rsp]
  41bc3f:	jne    41bc43 <isspace@plt+0x18333>
  41bc41:	pop    rax
  41bc42:	ret    
  41bc43:	call   403280 <__stack_chk_fail@plt>
  41bc48:	nop    DWORD PTR [rax+rax*1+0x0]
  41bc50:	push   rbx
  41bc51:	sub    rsp,0x10
  41bc55:	mov    rbx,rdi
  41bc58:	mov    rax,QWORD PTR fs:0x28
  41bc61:	mov    QWORD PTR [rsp+0x8],rax
  41bc66:	mov    rax,QWORD PTR [rdi+0x80]
  41bc6d:	test   rax,rax
  41bc70:	je     41bca6 <isspace@plt+0x18396>
  41bc72:	mov    rcx,QWORD PTR [rbx+0x98]
  41bc79:	mov    rcx,QWORD PTR [rcx+0x30]
  41bc7d:	cmp    rax,rcx
  41bc80:	je     41bca6 <isspace@plt+0x18396>
  41bc82:	mov    rdx,QWORD PTR [rbx+0x50]
  41bc86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bc90:	add    rdx,QWORD PTR [rax+0x10]
  41bc94:	mov    QWORD PTR [rbx+0x50],rdx
  41bc98:	mov    rax,QWORD PTR [rax+0x8]
  41bc9c:	test   rax,rax
  41bc9f:	je     41bca6 <isspace@plt+0x18396>
  41bca1:	cmp    rax,rcx
  41bca4:	jne    41bc90 <isspace@plt+0x18380>
  41bca6:	mov    rdi,rbx
  41bca9:	call   41a4a0 <isspace@plt+0x16b90>
  41bcae:	mov    rdi,QWORD PTR [rbx+0x98]
  41bcb5:	mov    rsi,QWORD PTR [rdi+0x18]
  41bcb9:	call   41ad90 <isspace@plt+0x17480>
  41bcbe:	mov    rax,QWORD PTR fs:0x28
  41bcc7:	cmp    rax,QWORD PTR [rsp+0x8]
  41bccc:	jne    41bcd4 <isspace@plt+0x183c4>
  41bcce:	add    rsp,0x10
  41bcd2:	pop    rbx
  41bcd3:	ret    
  41bcd4:	call   403280 <__stack_chk_fail@plt>
  41bcd9:	nop    DWORD PTR [rax+0x0]
  41bce0:	push   rbp
  41bce1:	push   r14
  41bce3:	push   rbx
  41bce4:	sub    rsp,0x10
  41bce8:	mov    rbx,rdi
  41bceb:	mov    rax,QWORD PTR fs:0x28
  41bcf4:	mov    QWORD PTR [rsp+0x8],rax
  41bcf9:	mov    eax,DWORD PTR [rdi+0x4c]
  41bcfc:	mov    ebp,eax
  41bcfe:	shr    ebp,0x1f
  41bd01:	add    ebp,eax
  41bd03:	sar    ebp,1
  41bd05:	mov    rax,QWORD PTR [rdi+0x98]
  41bd0c:	mov    r14,QWORD PTR [rax+0x18]
  41bd10:	mov    rcx,QWORD PTR [rax+0x30]
  41bd14:	mov    rax,QWORD PTR [rdi+0x80]
  41bd1b:	xor    edx,edx
  41bd1d:	test   rax,rax
  41bd20:	je     41bd41 <isspace@plt+0x18431>
  41bd22:	cmp    rax,rcx
  41bd25:	je     41bd41 <isspace@plt+0x18431>
  41bd27:	xor    edx,edx
  41bd29:	mov    rsi,rax
  41bd2c:	nop    DWORD PTR [rax+0x0]
  41bd30:	add    edx,0x1
  41bd33:	mov    rsi,QWORD PTR [rsi+0x8]
  41bd37:	test   rsi,rsi
  41bd3a:	je     41bd41 <isspace@plt+0x18431>
  41bd3c:	cmp    rsi,rcx
  41bd3f:	jne    41bd30 <isspace@plt+0x18420>
  41bd41:	mov    esi,ebp
  41bd43:	sub    esi,edx
  41bd45:	jle    41bda1 <isspace@plt+0x18491>
  41bd47:	mov    rdi,rbx
  41bd4a:	call   41be20 <isspace@plt+0x18510>
  41bd4f:	mov    rax,QWORD PTR [rbx+0x80]
  41bd56:	mov    rcx,QWORD PTR [rbx+0x98]
  41bd5d:	mov    rcx,QWORD PTR [rcx+0x30]
  41bd61:	xor    edx,edx
  41bd63:	test   rax,rax
  41bd66:	je     41bd91 <isspace@plt+0x18481>
  41bd68:	cmp    rax,rcx
  41bd6b:	je     41bd91 <isspace@plt+0x18481>
  41bd6d:	xor    edx,edx
  41bd6f:	mov    rsi,rax
  41bd72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bd7c:	nop    DWORD PTR [rax+0x0]
  41bd80:	add    edx,0x1
  41bd83:	mov    rsi,QWORD PTR [rsi+0x8]
  41bd87:	test   rsi,rsi
  41bd8a:	je     41bd91 <isspace@plt+0x18481>
  41bd8c:	cmp    rsi,rcx
  41bd8f:	jne    41bd80 <isspace@plt+0x18470>
  41bd91:	mov    esi,ebp
  41bd93:	sub    esi,edx
  41bd95:	jle    41bda1 <isspace@plt+0x18491>
  41bd97:	mov    rdi,rbx
  41bd9a:	call   41be20 <isspace@plt+0x18510>
  41bd9f:	jmp    41bddd <isspace@plt+0x184cd>
  41bda1:	cmp    ebp,edx
  41bda3:	jge    41bddd <isspace@plt+0x184cd>
  41bda5:	cmp    rax,rcx
  41bda8:	je     41bddd <isspace@plt+0x184cd>
  41bdaa:	test   rax,rax
  41bdad:	je     41bddd <isspace@plt+0x184cd>
  41bdaf:	add    edx,0xffffffff
  41bdb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bdbc:	nop    DWORD PTR [rax+0x0]
  41bdc0:	mov    rsi,QWORD PTR [rax+0x10]
  41bdc4:	add    QWORD PTR [rbx+0x50],rsi
  41bdc8:	cmp    edx,ebp
  41bdca:	jle    41bddd <isspace@plt+0x184cd>
  41bdcc:	mov    rax,QWORD PTR [rax+0x8]
  41bdd0:	cmp    rax,rcx
  41bdd3:	je     41bddd <isspace@plt+0x184cd>
  41bdd5:	add    edx,0xffffffff
  41bdd8:	test   rax,rax
  41bddb:	jne    41bdc0 <isspace@plt+0x184b0>
  41bddd:	mov    rdi,rbx
  41bde0:	call   41a4a0 <isspace@plt+0x16b90>
  41bde5:	mov    rdi,QWORD PTR [rbx+0x98]
  41bdec:	mov    rsi,r14
  41bdef:	call   41ad90 <isspace@plt+0x17480>
  41bdf4:	mov    rax,QWORD PTR fs:0x28
  41bdfd:	cmp    rax,QWORD PTR [rsp+0x8]
  41be02:	jne    41be0d <isspace@plt+0x184fd>
  41be04:	add    rsp,0x10
  41be08:	pop    rbx
  41be09:	pop    r14
  41be0b:	pop    rbp
  41be0c:	ret    
  41be0d:	call   403280 <__stack_chk_fail@plt>
  41be12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41be1c:	nop    DWORD PTR [rax+0x0]
  41be20:	push   r15
  41be22:	push   r14
  41be24:	push   r13
  41be26:	push   r12
  41be28:	push   rbx
  41be29:	sub    rsp,0x30
  41be2d:	mov    rbx,rdi
  41be30:	mov    rax,QWORD PTR fs:0x28
  41be39:	mov    QWORD PTR [rsp+0x28],rax
  41be3e:	mov    r12,QWORD PTR [rdi+0x88]
  41be45:	mov    r14,QWORD PTR [rdi+0x98]
  41be4c:	mov    r13,QWORD PTR [r14+0x30]
  41be50:	mov    r15d,DWORD PTR [r14+0x24]
  41be54:	call   41c410 <isspace@plt+0x18b00>
  41be59:	test   al,al
  41be5b:	je     41be78 <isspace@plt+0x18568>
  41be5d:	cmp    r13,r12
  41be60:	je     41beac <isspace@plt+0x1859c>
  41be62:	mov    rsi,QWORD PTR [r14+0x18]
  41be66:	add    r14,0x18
  41be6a:	mov    rdi,QWORD PTR [rbx+0x98]
  41be71:	call   41ad90 <isspace@plt+0x17480>
  41be76:	jmp    41be84 <isspace@plt+0x18574>
  41be78:	mov    rdi,r14
  41be7b:	call   41cd20 <isspace@plt+0x19410>
  41be80:	add    r14,0x18
  41be84:	mov    r15,r14
  41be87:	mov    rax,QWORD PTR [r15]
  41be8a:	mov    rcx,QWORD PTR fs:0x28
  41be93:	cmp    rcx,QWORD PTR [rsp+0x28]
  41be98:	jne    41c205 <isspace@plt+0x188f5>
  41be9e:	add    rsp,0x30
  41bea2:	pop    rbx
  41bea3:	pop    r12
  41bea5:	pop    r13
  41bea7:	pop    r14
  41bea9:	pop    r15
  41beab:	ret    
  41beac:	mov    rax,QWORD PTR [rbx+0x88]
  41beb3:	mov    r8,QWORD PTR [r14+0x40]
  41beb7:	mov    rbx,QWORD PTR [r8+0x50]
  41bebb:	mov    rcx,QWORD PTR [r8+0x80]
  41bec2:	xor    edx,edx
  41bec4:	test   rcx,rcx
  41bec7:	je     41bee5 <isspace@plt+0x185d5>
  41bec9:	cmp    rcx,rax
  41becc:	je     41bee5 <isspace@plt+0x185d5>
  41bece:	xor    edx,edx
  41bed0:	add    rbx,QWORD PTR [rcx+0x10]
  41bed4:	add    edx,0x1
  41bed7:	mov    rcx,QWORD PTR [rcx+0x8]
  41bedb:	test   rcx,rcx
  41bede:	je     41bee5 <isspace@plt+0x185d5>
  41bee0:	cmp    rcx,rax
  41bee3:	jne    41bed0 <isspace@plt+0x185c0>
  41bee5:	test   r15d,r15d
  41bee8:	jle    41c09d <isspace@plt+0x1878d>
  41beee:	movsxd rcx,r15d
  41bef1:	lea    rsi,[rcx+rcx*2]
  41bef5:	lea    r15,[rcx+0x1]
  41bef9:	shl    rsi,0x4
  41befd:	lea    rcx,[rax+rsi*1]
  41bf01:	add    rcx,0x38
  41bf05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bf0f:	nop
  41bf10:	cmp    QWORD PTR [rcx],0x0
  41bf14:	jne    41bf24 <isspace@plt+0x18614>
  41bf16:	add    r15,0xffffffffffffffff
  41bf1a:	add    rcx,0xffffffffffffffd0
  41bf1e:	cmp    r15,0x1
  41bf22:	jg     41bf10 <isspace@plt+0x18600>
  41bf24:	add    r15d,0xffffffff
  41bf28:	test   r15d,r15d
  41bf2b:	jle    41c09d <isspace@plt+0x1878d>
  41bf31:	mov    esi,r15d
  41bf34:	cmp    r15d,0x11
  41bf38:	jae    41bf41 <isspace@plt+0x18631>
  41bf3a:	xor    ecx,ecx
  41bf3c:	jmp    41c077 <isspace@plt+0x18767>
  41bf41:	mov    ecx,esi
  41bf43:	and    ecx,0xf
  41bf46:	test   rcx,rcx
  41bf49:	mov    edi,0x10
  41bf4e:	cmovne rdi,rcx
  41bf52:	mov    rcx,rsi
  41bf55:	sub    rcx,rdi
  41bf58:	vmovq  xmm0,rbx
  41bf5d:	vpxor  xmm1,xmm1,xmm1
  41bf61:	vmovdqa ymm2,YMMWORD PTR [rip+0x15c77]        # 431be0 <isspace@plt+0x2e2d0>
  41bf69:	vpbroadcastq ymm3,QWORD PTR [rip+0x15c8e]        # 431c00 <isspace@plt+0x2e2f0>
  41bf72:	vpbroadcastq ymm4,QWORD PTR [rip+0x15c8d]        # 431c08 <isspace@plt+0x2e2f8>
  41bf7b:	vmovdqu YMMWORD PTR [rsp],ymm4
  41bf80:	vpbroadcastq ymm5,QWORD PTR [rip+0x15c87]        # 431c10 <isspace@plt+0x2e300>
  41bf89:	vpbroadcastq ymm6,QWORD PTR [rip+0x15c86]        # 431c18 <isspace@plt+0x2e308>
  41bf92:	vpbroadcastq ymm7,QWORD PTR [rip+0x15c85]        # 431c20 <isspace@plt+0x2e310>
  41bf9b:	vpbroadcastq ymm8,QWORD PTR [rip+0x15c84]        # 431c28 <isspace@plt+0x2e318>
  41bfa4:	mov    rdi,rcx
  41bfa7:	vpxor  xmm9,xmm9,xmm9
  41bfac:	vpxor  xmm10,xmm10,xmm10
  41bfb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bfbb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bfc0:	vpmuludq ymm11,ymm2,ymm3
  41bfc4:	vpsrlq ymm12,ymm2,0x20
  41bfc9:	vpmuludq ymm12,ymm12,ymm3
  41bfcd:	vpsllq ymm12,ymm12,0x20
  41bfd3:	vmovq  xmm4,rax
  41bfd8:	vpbroadcastq ymm4,xmm4
  41bfdd:	vpaddq ymm4,ymm11,ymm4
  41bfe1:	vpaddq ymm4,ymm12,ymm4
  41bfe5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41bfea:	vpaddq ymm12,ymm4,ymm6
  41bfee:	vpaddq ymm14,ymm4,ymm7
  41bff2:	vpaddq ymm4,ymm4,ymm8
  41bff7:	vpcmpeqd ymm15,ymm15,ymm15
  41bffc:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41c006:	vpcmpeqd ymm11,ymm11,ymm11
  41c00b:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41c015:	vpcmpeqd ymm11,ymm11,ymm11
  41c01a:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41c024:	vpcmpeqd ymm11,ymm11,ymm11
  41c029:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41c033:	vpaddq ymm0,ymm13,ymm0
  41c037:	vpaddq ymm1,ymm15,ymm1
  41c03b:	vpaddq ymm9,ymm12,ymm9
  41c040:	vpaddq ymm10,ymm14,ymm10
  41c045:	vpaddq ymm2,ymm2,ymm5
  41c049:	add    rdi,0xfffffffffffffff0
  41c04d:	jne    41bfc0 <isspace@plt+0x186b0>
  41c053:	vpaddq ymm0,ymm1,ymm0
  41c057:	vpaddq ymm0,ymm9,ymm0
  41c05b:	vpaddq ymm0,ymm10,ymm0
  41c05f:	vextracti128 xmm1,ymm0,0x1
  41c065:	vpaddq ymm0,ymm0,ymm1
  41c069:	vpshufd xmm1,xmm0,0x4e
  41c06e:	vpaddq ymm0,ymm0,ymm1
  41c072:	vmovq  rbx,xmm0
  41c077:	sub    rsi,rcx
  41c07a:	lea    rcx,[rcx+rcx*2]
  41c07e:	shl    rcx,0x4
  41c082:	add    rcx,rax
  41c085:	add    rcx,0x38
  41c089:	nop    DWORD PTR [rax+0x0]
  41c090:	add    rbx,QWORD PTR [rcx]
  41c093:	add    rcx,0x30
  41c097:	add    rsi,0xffffffffffffffff
  41c09b:	jne    41c090 <isspace@plt+0x18780>
  41c09d:	mov    DWORD PTR [r14+0x24],r15d
  41c0a1:	mov    DWORD PTR [r14+0x20],edx
  41c0a5:	mov    QWORD PTR [r14+0x30],rax
  41c0a9:	mov    rdi,QWORD PTR [r8]
  41c0ac:	mov    rsi,rbx
  41c0af:	vzeroupper 
  41c0b2:	call   410fc0 <isspace@plt+0xd6b0>
  41c0b7:	mov    QWORD PTR [r14],rax
  41c0ba:	cmp    BYTE PTR [r14+0x10],0x0
  41c0bf:	jne    41c0c5 <isspace@plt+0x187b5>
  41c0c1:	mov    QWORD PTR [r14+0x8],rax
  41c0c5:	cmp    QWORD PTR [r14+0x18],rbx
  41c0c9:	je     41c0d3 <isspace@plt+0x187c3>
  41c0cb:	mov    DWORD PTR [r14+0x28],0x0
  41c0d3:	lea    r15,[r14+0x18]
  41c0d7:	mov    QWORD PTR [r14+0x18],rbx
  41c0db:	mov    rdi,QWORD PTR [r14+0x40]
  41c0df:	mov    r12,QWORD PTR [rdi+0x50]
  41c0e3:	cmp    r12,rbx
  41c0e6:	ja     41c0ee <isspace@plt+0x187de>
  41c0e8:	cmp    QWORD PTR [rdi+0x58],rbx
  41c0ec:	jae    41c123 <isspace@plt+0x18813>
  41c0ee:	mov    QWORD PTR [r14+0x30],0x0
  41c0f6:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41c0fe:	cmp    QWORD PTR [rdi+0x98],r14
  41c105:	jne    41be87 <isspace@plt+0x18577>
  41c10b:	mov    rax,QWORD PTR [rdi+0x80]
  41c112:	mov    QWORD PTR [r14+0x30],rax
  41c116:	mov    QWORD PTR [r14+0x20],0x0
  41c11e:	jmp    41be87 <isspace@plt+0x18577>
  41c123:	mov    r11,QWORD PTR [rdi+0x80]
  41c12a:	test   r11,r11
  41c12d:	je     41c16c <isspace@plt+0x1885c>
  41c12f:	mov    rcx,QWORD PTR [rdi+0x88]
  41c136:	xor    r9d,r9d
  41c139:	nop    DWORD PTR [rax+0x0]
  41c140:	cmp    r12,rbx
  41c143:	setb   al
  41c146:	cmp    r11,rcx
  41c149:	je     41c195 <isspace@plt+0x18885>
  41c14b:	cmp    r12,rbx
  41c14e:	jae    41c195 <isspace@plt+0x18885>
  41c150:	mov    rax,QWORD PTR [r11+0x10]
  41c154:	add    rax,r12
  41c157:	cmp    rax,rbx
  41c15a:	ja     41c193 <isspace@plt+0x18883>
  41c15c:	add    r9d,0x1
  41c160:	mov    r11,QWORD PTR [r11+0x8]
  41c164:	mov    r12,rax
  41c167:	test   r11,r11
  41c16a:	jne    41c140 <isspace@plt+0x18830>
  41c16c:	mov    r11,QWORD PTR [rdi+0x90]
  41c173:	mov    r9d,DWORD PTR [rdi+0x4c]
  41c177:	add    r9d,0xffffffff
  41c17b:	xor    edx,edx
  41c17d:	mov    QWORD PTR [r14+0x30],r11
  41c181:	mov    DWORD PTR [r14+0x20],r9d
  41c185:	mov    DWORD PTR [r14+0x24],edx
  41c189:	call   41a4a0 <isspace@plt+0x16b90>
  41c18e:	jmp    41be87 <isspace@plt+0x18577>
  41c193:	mov    al,0x1
  41c195:	mov    r8d,DWORD PTR [rdi+0x48]
  41c199:	mov    ecx,DWORD PTR [r11+0x20]
  41c19d:	cmp    r8d,ecx
  41c1a0:	cmovg  r8d,ecx
  41c1a4:	xor    edx,edx
  41c1a6:	test   al,al
  41c1a8:	je     41c17d <isspace@plt+0x1886d>
  41c1aa:	test   r8d,r8d
  41c1ad:	jle    41c17d <isspace@plt+0x1886d>
  41c1af:	movsxd rcx,r8d
  41c1b2:	lea    r10,[r11+0x68]
  41c1b6:	xor    edx,edx
  41c1b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c1c0:	movsxd rsi,edx
  41c1c3:	mov    rax,rsi
  41c1c6:	shl    rax,0x4
  41c1ca:	lea    rax,[rax+rax*2]
  41c1ce:	add    r12,QWORD PTR [r11+rax*1+0x38]
  41c1d3:	add    rsi,0x1
  41c1d7:	add    rax,r10
  41c1da:	nop    WORD PTR [rax+rax*1+0x0]
  41c1e0:	mov    rdx,rsi
  41c1e3:	cmp    rsi,rcx
  41c1e6:	jge    41c1f6 <isspace@plt+0x188e6>
  41c1e8:	lea    rsi,[rdx+0x1]
  41c1ec:	cmp    QWORD PTR [rax],0x0
  41c1f0:	lea    rax,[rax+0x30]
  41c1f4:	je     41c1e0 <isspace@plt+0x188d0>
  41c1f6:	cmp    r12,rbx
  41c1f9:	jae    41c17d <isspace@plt+0x1886d>
  41c1fb:	cmp    r8d,edx
  41c1fe:	jg     41c1c0 <isspace@plt+0x188b0>
  41c200:	jmp    41c17d <isspace@plt+0x1886d>
  41c205:	call   403280 <__stack_chk_fail@plt>
  41c20a:	nop    WORD PTR [rax+rax*1+0x0]
  41c210:	push   r15
  41c212:	push   r14
  41c214:	push   rbx
  41c215:	sub    rsp,0x10
  41c219:	mov    r15,rdi
  41c21c:	mov    rax,QWORD PTR fs:0x28
  41c225:	mov    QWORD PTR [rsp+0x8],rax
  41c22a:	mov    rax,QWORD PTR [rdi+0x98]
  41c231:	mov    r14,QWORD PTR [rax+0x18]
  41c235:	mov    esi,DWORD PTR [rdi+0x4c]
  41c238:	call   41c410 <isspace@plt+0x18b00>
  41c23d:	jmp    41c248 <isspace@plt+0x18938>
  41c23f:	nop
  41c240:	mov    rdi,r15
  41c243:	call   41a4a0 <isspace@plt+0x16b90>
  41c248:	mov    rbx,QWORD PTR [r15+0x58]
  41c24c:	cmp    r14,rbx
  41c24f:	jb     41c28a <isspace@plt+0x1897a>
  41c251:	mov    rdi,QWORD PTR [r15]
  41c254:	call   410a90 <isspace@plt+0xd180>
  41c259:	cmp    rbx,rax
  41c25c:	jae    41c28a <isspace@plt+0x1897a>
  41c25e:	cmp    DWORD PTR [r15+0x4c],0x1
  41c263:	jle    41c280 <isspace@plt+0x18970>
  41c265:	mov    rax,QWORD PTR [r15+0x80]
  41c26c:	test   rax,rax
  41c26f:	je     41c240 <isspace@plt+0x18930>
  41c271:	mov    rax,QWORD PTR [rax+0x10]
  41c275:	add    rax,QWORD PTR [r15+0x50]
  41c279:	jmp    41c284 <isspace@plt+0x18974>
  41c27b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c280:	mov    rax,QWORD PTR [r15+0x58]
  41c284:	mov    QWORD PTR [r15+0x50],rax
  41c288:	jmp    41c240 <isspace@plt+0x18930>
  41c28a:	mov    r15,QWORD PTR [r15+0x98]
  41c291:	mov    rax,QWORD PTR [r15+0x40]
  41c295:	mov    rdi,QWORD PTR [rax]
  41c298:	mov    rsi,r14
  41c29b:	call   410fc0 <isspace@plt+0xd6b0>
  41c2a0:	mov    QWORD PTR [r15],rax
  41c2a3:	cmp    BYTE PTR [r15+0x10],0x0
  41c2a8:	je     41c301 <isspace@plt+0x189f1>
  41c2aa:	cmp    QWORD PTR [r15+0x18],r14
  41c2ae:	je     41c2b8 <isspace@plt+0x189a8>
  41c2b0:	mov    DWORD PTR [r15+0x28],0x0
  41c2b8:	mov    QWORD PTR [r15+0x18],r14
  41c2bc:	mov    rdi,QWORD PTR [r15+0x40]
  41c2c0:	mov    rdx,QWORD PTR [rdi+0x50]
  41c2c4:	cmp    rdx,r14
  41c2c7:	ja     41c2cf <isspace@plt+0x189bf>
  41c2c9:	cmp    QWORD PTR [rdi+0x58],r14
  41c2cd:	jae    41c30d <isspace@plt+0x189fd>
  41c2cf:	mov    QWORD PTR [r15+0x30],0x0
  41c2d7:	mov    QWORD PTR [r15+0x20],0xffffffffffffffff
  41c2df:	cmp    QWORD PTR [rdi+0x98],r15
  41c2e6:	jne    41c37e <isspace@plt+0x18a6e>
  41c2ec:	mov    rax,QWORD PTR [rdi+0x80]
  41c2f3:	mov    QWORD PTR [r15+0x30],rax
  41c2f7:	mov    QWORD PTR [r15+0x20],0x0
  41c2ff:	jmp    41c37e <isspace@plt+0x18a6e>
  41c301:	mov    QWORD PTR [r15+0x8],rax
  41c305:	cmp    QWORD PTR [r15+0x18],r14
  41c309:	jne    41c2b0 <isspace@plt+0x189a0>
  41c30b:	jmp    41c2b8 <isspace@plt+0x189a8>
  41c30d:	mov    r11,QWORD PTR [rdi+0x80]
  41c314:	test   r11,r11
  41c317:	je     41c35c <isspace@plt+0x18a4c>
  41c319:	mov    rsi,QWORD PTR [rdi+0x88]
  41c320:	xor    r10d,r10d
  41c323:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c32d:	nop    DWORD PTR [rax]
  41c330:	cmp    rdx,r14
  41c333:	setb   cl
  41c336:	cmp    r11,rsi
  41c339:	je     41c39a <isspace@plt+0x18a8a>
  41c33b:	cmp    rdx,r14
  41c33e:	jae    41c39a <isspace@plt+0x18a8a>
  41c340:	mov    rax,QWORD PTR [r11+0x10]
  41c344:	add    rax,rdx
  41c347:	cmp    rax,r14
  41c34a:	ja     41c398 <isspace@plt+0x18a88>
  41c34c:	add    r10d,0x1
  41c350:	mov    r11,QWORD PTR [r11+0x8]
  41c354:	mov    rdx,rax
  41c357:	test   r11,r11
  41c35a:	jne    41c330 <isspace@plt+0x18a20>
  41c35c:	mov    r11,QWORD PTR [rdi+0x90]
  41c363:	mov    r10d,DWORD PTR [rdi+0x4c]
  41c367:	add    r10d,0xffffffff
  41c36b:	xor    eax,eax
  41c36d:	mov    QWORD PTR [r15+0x30],r11
  41c371:	mov    DWORD PTR [r15+0x20],r10d
  41c375:	mov    DWORD PTR [r15+0x24],eax
  41c379:	call   41a4a0 <isspace@plt+0x16b90>
  41c37e:	mov    rax,QWORD PTR fs:0x28
  41c387:	cmp    rax,QWORD PTR [rsp+0x8]
  41c38c:	jne    41c409 <isspace@plt+0x18af9>
  41c38e:	add    rsp,0x10
  41c392:	pop    rbx
  41c393:	pop    r14
  41c395:	pop    r15
  41c397:	ret    
  41c398:	mov    cl,0x1
  41c39a:	mov    r8d,DWORD PTR [rdi+0x48]
  41c39e:	mov    eax,DWORD PTR [r11+0x20]
  41c3a2:	cmp    r8d,eax
  41c3a5:	cmovg  r8d,eax
  41c3a9:	xor    eax,eax
  41c3ab:	test   cl,cl
  41c3ad:	je     41c36d <isspace@plt+0x18a5d>
  41c3af:	test   r8d,r8d
  41c3b2:	jle    41c36d <isspace@plt+0x18a5d>
  41c3b4:	movsxd rbx,r8d
  41c3b7:	lea    r9,[r11+0x68]
  41c3bb:	xor    eax,eax
  41c3bd:	nop    DWORD PTR [rax]
  41c3c0:	movsxd rsi,eax
  41c3c3:	mov    rax,rsi
  41c3c6:	shl    rax,0x4
  41c3ca:	lea    rcx,[rax+rax*2]
  41c3ce:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41c3d3:	add    rsi,0x1
  41c3d7:	add    rcx,r9
  41c3da:	nop    WORD PTR [rax+rax*1+0x0]
  41c3e0:	mov    rax,rsi
  41c3e3:	cmp    rsi,rbx
  41c3e6:	jge    41c3f6 <isspace@plt+0x18ae6>
  41c3e8:	lea    rsi,[rax+0x1]
  41c3ec:	cmp    QWORD PTR [rcx],0x0
  41c3f0:	lea    rcx,[rcx+0x30]
  41c3f4:	je     41c3e0 <isspace@plt+0x18ad0>
  41c3f6:	cmp    rdx,r14
  41c3f9:	jae    41c36d <isspace@plt+0x18a5d>
  41c3ff:	cmp    r8d,eax
  41c402:	jg     41c3c0 <isspace@plt+0x18ab0>
  41c404:	jmp    41c36d <isspace@plt+0x18a5d>
  41c409:	call   403280 <__stack_chk_fail@plt>
  41c40e:	xchg   ax,ax
  41c410:	push   rbp
  41c411:	push   r15
  41c413:	push   r14
  41c415:	push   r13
  41c417:	push   r12
  41c419:	push   rbx
  41c41a:	sub    rsp,0x38
  41c41e:	mov    rax,QWORD PTR fs:0x28
  41c427:	mov    QWORD PTR [rsp+0x30],rax
  41c42c:	mov    rdx,QWORD PTR [rdi+0x50]
  41c430:	test   rdx,rdx
  41c433:	je     41c47e <isspace@plt+0x18b6e>
  41c435:	mov    ebp,esi
  41c437:	mov    r12,rdi
  41c43a:	movsxd r15,DWORD PTR [rdi+0x48]
  41c43e:	movsxd r13,DWORD PTR [rdi+0x4c]
  41c442:	mov    rsi,QWORD PTR [rdi]
  41c445:	add    rdx,0xffffffffffffffff
  41c449:	mov    r14,rsp
  41c44c:	mov    rdi,r14
  41c44f:	call   410760 <isspace@plt+0xce50>
  41c454:	lea    rsi,[rsp+0x2f]
  41c459:	mov    rdi,r14
  41c45c:	call   412690 <isspace@plt+0xed80>
  41c461:	test   al,al
  41c463:	je     41c47e <isspace@plt+0x18b6e>
  41c465:	cmp    BYTE PTR [rsp+0x2f],0xa
  41c46a:	jne    41c482 <isspace@plt+0x18b72>
  41c46c:	mov    rdi,rsp
  41c46f:	lea    rsi,[rsp+0x2f]
  41c474:	call   4127d0 <isspace@plt+0xeec0>
  41c479:	movzx  ebx,al
  41c47c:	jmp    41c484 <isspace@plt+0x18b74>
  41c47e:	xor    eax,eax
  41c480:	jmp    41c4d2 <isspace@plt+0x18bc2>
  41c482:	xor    ebx,ebx
  41c484:	imul   r13,r15
  41c488:	mov    r14,rsp
  41c48b:	lea    r15,[rsp+0x2f]
  41c490:	cmp    BYTE PTR [rsp+0x2f],0xa
  41c495:	jne    41c49c <isspace@plt+0x18b8c>
  41c497:	add    ebp,0xffffffff
  41c49a:	je     41c4b4 <isspace@plt+0x18ba4>
  41c49c:	add    rbx,0x1
  41c4a0:	cmp    rbx,r13
  41c4a3:	ja     41c4b4 <isspace@plt+0x18ba4>
  41c4a5:	mov    rdi,r14
  41c4a8:	mov    rsi,r15
  41c4ab:	call   4127d0 <isspace@plt+0xeec0>
  41c4b0:	test   al,al
  41c4b2:	jne    41c490 <isspace@plt+0x18b80>
  41c4b4:	mov    rax,QWORD PTR [r12+0x50]
  41c4b9:	cmp    rax,rbx
  41c4bc:	cmovbe rbx,rax
  41c4c0:	sub    rax,rbx
  41c4c3:	mov    QWORD PTR [r12+0x50],rax
  41c4c8:	mov    rdi,r12
  41c4cb:	call   41a4a0 <isspace@plt+0x16b90>
  41c4d0:	mov    al,0x1
  41c4d2:	mov    rcx,QWORD PTR fs:0x28
  41c4db:	cmp    rcx,QWORD PTR [rsp+0x30]
  41c4e0:	jne    41c4f1 <isspace@plt+0x18be1>
  41c4e2:	add    rsp,0x38
  41c4e6:	pop    rbx
  41c4e7:	pop    r12
  41c4e9:	pop    r13
  41c4eb:	pop    r14
  41c4ed:	pop    r15
  41c4ef:	pop    rbp
  41c4f0:	ret    
  41c4f1:	call   403280 <__stack_chk_fail@plt>
  41c4f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c500:	push   rbp
  41c501:	push   r15
  41c503:	push   r14
  41c505:	push   rbx
  41c506:	sub    rsp,0x38
  41c50a:	mov    ebp,esi
  41c50c:	mov    rbx,rdi
  41c50f:	mov    rax,QWORD PTR fs:0x28
  41c518:	mov    QWORD PTR [rsp+0x30],rax
  41c51d:	mov    r14,QWORD PTR [rdi+0x98]
  41c524:	mov    rdi,QWORD PTR [rdi]
  41c527:	mov    r15,QWORD PTR [rbx+0x58]
  41c52b:	call   410a90 <isspace@plt+0xd180>
  41c530:	cmp    r15,rax
  41c533:	jae    41c56b <isspace@plt+0x18c5b>
  41c535:	cmp    DWORD PTR [rbx+0x4c],ebp
  41c538:	jle    41c579 <isspace@plt+0x18c69>
  41c53a:	test   ebp,ebp
  41c53c:	jle    41c581 <isspace@plt+0x18c71>
  41c53e:	mov    rax,QWORD PTR [rbx+0x80]
  41c545:	test   rax,rax
  41c548:	je     41c581 <isspace@plt+0x18c71>
  41c54a:	mov    rcx,QWORD PTR [rbx+0x50]
  41c54e:	xchg   ax,ax
  41c550:	add    rcx,QWORD PTR [rax+0x10]
  41c554:	mov    QWORD PTR [rbx+0x50],rcx
  41c558:	cmp    ebp,0x2
  41c55b:	jl     41c581 <isspace@plt+0x18c71>
  41c55d:	add    ebp,0xffffffff
  41c560:	mov    rax,QWORD PTR [rax+0x8]
  41c564:	test   rax,rax
  41c567:	jne    41c550 <isspace@plt+0x18c40>
  41c569:	jmp    41c581 <isspace@plt+0x18c71>
  41c56b:	mov    rdi,r14
  41c56e:	call   41c920 <isspace@plt+0x19010>
  41c573:	add    r14,0x18
  41c577:	jmp    41c5aa <isspace@plt+0x18c9a>
  41c579:	mov    rax,QWORD PTR [rbx+0x58]
  41c57d:	mov    QWORD PTR [rbx+0x50],rax
  41c581:	mov    rdi,rbx
  41c584:	call   41a4a0 <isspace@plt+0x16b90>
  41c589:	mov    rsi,QWORD PTR [r14+0x30]
  41c58d:	cmp    rsi,QWORD PTR [rbx+0x80]
  41c594:	je     41c5cf <isspace@plt+0x18cbf>
  41c596:	mov    rsi,QWORD PTR [r14+0x18]
  41c59a:	add    r14,0x18
  41c59e:	mov    rdi,QWORD PTR [rbx+0x98]
  41c5a5:	call   41ad90 <isspace@plt+0x17480>
  41c5aa:	mov    r15,r14
  41c5ad:	mov    rax,QWORD PTR [r15]
  41c5b0:	mov    rcx,QWORD PTR fs:0x28
  41c5b9:	cmp    rcx,QWORD PTR [rsp+0x30]
  41c5be:	jne    41c915 <isspace@plt+0x19005>
  41c5c4:	add    rsp,0x38
  41c5c8:	pop    rbx
  41c5c9:	pop    r14
  41c5cb:	pop    r15
  41c5cd:	pop    rbp
  41c5ce:	ret    
  41c5cf:	mov    ecx,DWORD PTR [r14+0x24]
  41c5d3:	mov    r8,QWORD PTR [r14+0x40]
  41c5d7:	mov    rbx,QWORD PTR [r8+0x50]
  41c5db:	mov    rax,QWORD PTR [r8+0x80]
  41c5e2:	xor    edx,edx
  41c5e4:	test   rax,rax
  41c5e7:	je     41c605 <isspace@plt+0x18cf5>
  41c5e9:	cmp    rax,rsi
  41c5ec:	je     41c605 <isspace@plt+0x18cf5>
  41c5ee:	xor    edx,edx
  41c5f0:	add    rbx,QWORD PTR [rax+0x10]
  41c5f4:	add    edx,0x1
  41c5f7:	mov    rax,QWORD PTR [rax+0x8]
  41c5fb:	test   rax,rax
  41c5fe:	je     41c605 <isspace@plt+0x18cf5>
  41c600:	cmp    rax,rsi
  41c603:	jne    41c5f0 <isspace@plt+0x18ce0>
  41c605:	test   ecx,ecx
  41c607:	jle    41c7ad <isspace@plt+0x18e9d>
  41c60d:	movsxd rax,ecx
  41c610:	lea    rdi,[rax+rax*2]
  41c614:	lea    rcx,[rax+0x1]
  41c618:	shl    rdi,0x4
  41c61c:	lea    rax,[rsi+rdi*1]
  41c620:	add    rax,0x38
  41c624:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c62e:	xchg   ax,ax
  41c630:	cmp    QWORD PTR [rax],0x0
  41c634:	jne    41c644 <isspace@plt+0x18d34>
  41c636:	add    rcx,0xffffffffffffffff
  41c63a:	add    rax,0xffffffffffffffd0
  41c63e:	cmp    rcx,0x1
  41c642:	jg     41c630 <isspace@plt+0x18d20>
  41c644:	add    ecx,0xffffffff
  41c647:	test   ecx,ecx
  41c649:	jle    41c7ad <isspace@plt+0x18e9d>
  41c64f:	mov    edi,ecx
  41c651:	cmp    ecx,0x11
  41c654:	jae    41c65d <isspace@plt+0x18d4d>
  41c656:	xor    eax,eax
  41c658:	jmp    41c787 <isspace@plt+0x18e77>
  41c65d:	mov    eax,edi
  41c65f:	and    eax,0xf
  41c662:	test   rax,rax
  41c665:	mov    ebp,0x10
  41c66a:	cmovne rbp,rax
  41c66e:	mov    rax,rdi
  41c671:	sub    rax,rbp
  41c674:	vmovq  xmm0,rbx
  41c679:	vpxor  xmm1,xmm1,xmm1
  41c67d:	vmovdqa ymm2,YMMWORD PTR [rip+0x1555b]        # 431be0 <isspace@plt+0x2e2d0>
  41c685:	vpbroadcastq ymm3,QWORD PTR [rip+0x15572]        # 431c00 <isspace@plt+0x2e2f0>
  41c68e:	vpbroadcastq ymm4,QWORD PTR [rip+0x15571]        # 431c08 <isspace@plt+0x2e2f8>
  41c697:	vmovdqu YMMWORD PTR [rsp],ymm4
  41c69c:	vpbroadcastq ymm5,QWORD PTR [rip+0x1556b]        # 431c10 <isspace@plt+0x2e300>
  41c6a5:	vpbroadcastq ymm6,QWORD PTR [rip+0x1556a]        # 431c18 <isspace@plt+0x2e308>
  41c6ae:	vpbroadcastq ymm7,QWORD PTR [rip+0x15569]        # 431c20 <isspace@plt+0x2e310>
  41c6b7:	vpbroadcastq ymm8,QWORD PTR [rip+0x15568]        # 431c28 <isspace@plt+0x2e318>
  41c6c0:	mov    rbp,rax
  41c6c3:	vpxor  xmm9,xmm9,xmm9
  41c6c8:	vpxor  xmm10,xmm10,xmm10
  41c6cd:	nop    DWORD PTR [rax]
  41c6d0:	vpmuludq ymm11,ymm2,ymm3
  41c6d4:	vpsrlq ymm12,ymm2,0x20
  41c6d9:	vpmuludq ymm12,ymm12,ymm3
  41c6dd:	vpsllq ymm12,ymm12,0x20
  41c6e3:	vmovq  xmm4,rsi
  41c6e8:	vpbroadcastq ymm4,xmm4
  41c6ed:	vpaddq ymm4,ymm11,ymm4
  41c6f1:	vpaddq ymm4,ymm12,ymm4
  41c6f5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41c6fa:	vpaddq ymm12,ymm4,ymm6
  41c6fe:	vpaddq ymm14,ymm4,ymm7
  41c702:	vpaddq ymm4,ymm4,ymm8
  41c707:	vpcmpeqd ymm15,ymm15,ymm15
  41c70c:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41c716:	vpcmpeqd ymm11,ymm11,ymm11
  41c71b:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41c725:	vpcmpeqd ymm11,ymm11,ymm11
  41c72a:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41c734:	vpcmpeqd ymm11,ymm11,ymm11
  41c739:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41c743:	vpaddq ymm0,ymm13,ymm0
  41c747:	vpaddq ymm1,ymm15,ymm1
  41c74b:	vpaddq ymm9,ymm12,ymm9
  41c750:	vpaddq ymm10,ymm14,ymm10
  41c755:	vpaddq ymm2,ymm2,ymm5
  41c759:	add    rbp,0xfffffffffffffff0
  41c75d:	jne    41c6d0 <isspace@plt+0x18dc0>
  41c763:	vpaddq ymm0,ymm1,ymm0
  41c767:	vpaddq ymm0,ymm9,ymm0
  41c76b:	vpaddq ymm0,ymm10,ymm0
  41c76f:	vextracti128 xmm1,ymm0,0x1
  41c775:	vpaddq ymm0,ymm0,ymm1
  41c779:	vpshufd xmm1,xmm0,0x4e
  41c77e:	vpaddq ymm0,ymm0,ymm1
  41c782:	vmovq  rbx,xmm0
  41c787:	sub    rdi,rax
  41c78a:	lea    rax,[rax+rax*2]
  41c78e:	shl    rax,0x4
  41c792:	add    rax,rsi
  41c795:	add    rax,0x38
  41c799:	nop    DWORD PTR [rax+0x0]
  41c7a0:	add    rbx,QWORD PTR [rax]
  41c7a3:	add    rax,0x30
  41c7a7:	add    rdi,0xffffffffffffffff
  41c7ab:	jne    41c7a0 <isspace@plt+0x18e90>
  41c7ad:	mov    DWORD PTR [r14+0x24],ecx
  41c7b1:	mov    DWORD PTR [r14+0x20],edx
  41c7b5:	mov    rdi,QWORD PTR [r8]
  41c7b8:	mov    rsi,rbx
  41c7bb:	vzeroupper 
  41c7be:	call   410fc0 <isspace@plt+0xd6b0>
  41c7c3:	mov    QWORD PTR [r14],rax
  41c7c6:	cmp    BYTE PTR [r14+0x10],0x0
  41c7cb:	jne    41c7d1 <isspace@plt+0x18ec1>
  41c7cd:	mov    QWORD PTR [r14+0x8],rax
  41c7d1:	cmp    QWORD PTR [r14+0x18],rbx
  41c7d5:	je     41c7df <isspace@plt+0x18ecf>
  41c7d7:	mov    DWORD PTR [r14+0x28],0x0
  41c7df:	lea    r15,[r14+0x18]
  41c7e3:	mov    QWORD PTR [r14+0x18],rbx
  41c7e7:	mov    rdi,QWORD PTR [r14+0x40]
  41c7eb:	mov    rdx,QWORD PTR [rdi+0x50]
  41c7ef:	cmp    rdx,rbx
  41c7f2:	ja     41c7fa <isspace@plt+0x18eea>
  41c7f4:	cmp    QWORD PTR [rdi+0x58],rbx
  41c7f8:	jae    41c82f <isspace@plt+0x18f1f>
  41c7fa:	mov    QWORD PTR [r14+0x30],0x0
  41c802:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41c80a:	cmp    QWORD PTR [rdi+0x98],r14
  41c811:	jne    41c5ad <isspace@plt+0x18c9d>
  41c817:	mov    rax,QWORD PTR [rdi+0x80]
  41c81e:	mov    QWORD PTR [r14+0x30],rax
  41c822:	mov    QWORD PTR [r14+0x20],0x0
  41c82a:	jmp    41c5ad <isspace@plt+0x18c9d>
  41c82f:	mov    r11,QWORD PTR [rdi+0x80]
  41c836:	test   r11,r11
  41c839:	je     41c87c <isspace@plt+0x18f6c>
  41c83b:	mov    rsi,QWORD PTR [rdi+0x88]
  41c842:	xor    r10d,r10d
  41c845:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c84f:	nop
  41c850:	cmp    rdx,rbx
  41c853:	setb   cl
  41c856:	cmp    r11,rsi
  41c859:	je     41c8a5 <isspace@plt+0x18f95>
  41c85b:	cmp    rdx,rbx
  41c85e:	jae    41c8a5 <isspace@plt+0x18f95>
  41c860:	mov    rax,QWORD PTR [r11+0x10]
  41c864:	add    rax,rdx
  41c867:	cmp    rax,rbx
  41c86a:	ja     41c8a3 <isspace@plt+0x18f93>
  41c86c:	add    r10d,0x1
  41c870:	mov    r11,QWORD PTR [r11+0x8]
  41c874:	mov    rdx,rax
  41c877:	test   r11,r11
  41c87a:	jne    41c850 <isspace@plt+0x18f40>
  41c87c:	mov    r11,QWORD PTR [rdi+0x90]
  41c883:	mov    r10d,DWORD PTR [rdi+0x4c]
  41c887:	add    r10d,0xffffffff
  41c88b:	xor    eax,eax
  41c88d:	mov    QWORD PTR [r14+0x30],r11
  41c891:	mov    DWORD PTR [r14+0x20],r10d
  41c895:	mov    DWORD PTR [r14+0x24],eax
  41c899:	call   41a4a0 <isspace@plt+0x16b90>
  41c89e:	jmp    41c5ad <isspace@plt+0x18c9d>
  41c8a3:	mov    cl,0x1
  41c8a5:	mov    r8d,DWORD PTR [rdi+0x48]
  41c8a9:	mov    eax,DWORD PTR [r11+0x20]
  41c8ad:	cmp    r8d,eax
  41c8b0:	cmovg  r8d,eax
  41c8b4:	xor    eax,eax
  41c8b6:	test   cl,cl
  41c8b8:	je     41c88d <isspace@plt+0x18f7d>
  41c8ba:	test   r8d,r8d
  41c8bd:	jle    41c88d <isspace@plt+0x18f7d>
  41c8bf:	movsxd rbp,r8d
  41c8c2:	lea    r9,[r11+0x68]
  41c8c6:	xor    eax,eax
  41c8c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c8d0:	movsxd rsi,eax
  41c8d3:	mov    rax,rsi
  41c8d6:	shl    rax,0x4
  41c8da:	lea    rcx,[rax+rax*2]
  41c8de:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41c8e3:	add    rsi,0x1
  41c8e7:	add    rcx,r9
  41c8ea:	nop    WORD PTR [rax+rax*1+0x0]
  41c8f0:	mov    rax,rsi
  41c8f3:	cmp    rsi,rbp
  41c8f6:	jge    41c906 <isspace@plt+0x18ff6>
  41c8f8:	lea    rsi,[rax+0x1]
  41c8fc:	cmp    QWORD PTR [rcx],0x0
  41c900:	lea    rcx,[rcx+0x30]
  41c904:	je     41c8f0 <isspace@plt+0x18fe0>
  41c906:	cmp    rdx,rbx
  41c909:	jae    41c88d <isspace@plt+0x18f7d>
  41c90b:	cmp    r8d,eax
  41c90e:	jg     41c8d0 <isspace@plt+0x18fc0>
  41c910:	jmp    41c88d <isspace@plt+0x18f7d>
  41c915:	call   403280 <__stack_chk_fail@plt>
  41c91a:	nop    WORD PTR [rax+rax*1+0x0]
  41c920:	push   rbp
  41c921:	push   r15
  41c923:	push   r14
  41c925:	push   rbx
  41c926:	sub    rsp,0x38
  41c92a:	mov    r14,rdi
  41c92d:	mov    rax,QWORD PTR fs:0x28
  41c936:	mov    QWORD PTR [rsp+0x30],rax
  41c93b:	mov    rcx,QWORD PTR [rdi+0x30]
  41c93f:	test   rcx,rcx
  41c942:	je     41c9ed <isspace@plt+0x190dd>
  41c948:	mov    r15d,DWORD PTR [r14+0x28]
  41c94c:	test   r15d,r15d
  41c94f:	jne    41c955 <isspace@plt+0x19045>
  41c951:	mov    r15d,DWORD PTR [r14+0x24]
  41c955:	mov    rax,QWORD PTR [rcx+0x8]
  41c959:	test   rax,rax
  41c95c:	je     41c9fa <isspace@plt+0x190ea>
  41c962:	mov    r8,QWORD PTR [r14+0x40]
  41c966:	mov    rbx,QWORD PTR [r8+0x50]
  41c96a:	mov    rcx,QWORD PTR [r8+0x80]
  41c971:	xor    edx,edx
  41c973:	test   rcx,rcx
  41c976:	je     41c995 <isspace@plt+0x19085>
  41c978:	cmp    rcx,rax
  41c97b:	je     41c995 <isspace@plt+0x19085>
  41c97d:	xor    edx,edx
  41c97f:	nop
  41c980:	add    rbx,QWORD PTR [rcx+0x10]
  41c984:	add    edx,0x1
  41c987:	mov    rcx,QWORD PTR [rcx+0x8]
  41c98b:	test   rcx,rcx
  41c98e:	je     41c995 <isspace@plt+0x19085>
  41c990:	cmp    rcx,rax
  41c993:	jne    41c980 <isspace@plt+0x19070>
  41c995:	test   r15d,r15d
  41c998:	jle    41ca2b <isspace@plt+0x1911b>
  41c99e:	movsxd rcx,r15d
  41c9a1:	lea    rdi,[rcx+rcx*2]
  41c9a5:	lea    rsi,[rcx+0x1]
  41c9a9:	shl    rdi,0x4
  41c9ad:	lea    rcx,[rax+rdi*1]
  41c9b1:	add    rcx,0x38
  41c9b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c9bf:	nop
  41c9c0:	cmp    QWORD PTR [rcx],0x0
  41c9c4:	jne    41c9d4 <isspace@plt+0x190c4>
  41c9c6:	add    rsi,0xffffffffffffffff
  41c9ca:	add    rcx,0xffffffffffffffd0
  41c9ce:	cmp    rsi,0x1
  41c9d2:	jg     41c9c0 <isspace@plt+0x190b0>
  41c9d4:	add    esi,0xffffffff
  41c9d7:	test   esi,esi
  41c9d9:	jle    41cb8d <isspace@plt+0x1927d>
  41c9df:	mov    edi,esi
  41c9e1:	cmp    esi,0x11
  41c9e4:	jae    41ca33 <isspace@plt+0x19123>
  41c9e6:	xor    ecx,ecx
  41c9e8:	jmp    41cb67 <isspace@plt+0x19257>
  41c9ed:	mov    rdi,r14
  41c9f0:	call   41e120 <isspace@plt+0x1a810>
  41c9f5:	jmp    41cc86 <isspace@plt+0x19376>
  41c9fa:	mov    rdi,QWORD PTR [r14+0x40]
  41c9fe:	cmp    rcx,QWORD PTR [rdi+0x90]
  41ca05:	jne    41cc7e <isspace@plt+0x1936e>
  41ca0b:	mov    esi,0x1
  41ca10:	call   41d7b0 <isspace@plt+0x19ea0>
  41ca15:	mov    rax,QWORD PTR [r14+0x30]
  41ca19:	mov    rax,QWORD PTR [rax+0x8]
  41ca1d:	test   rax,rax
  41ca20:	jne    41c962 <isspace@plt+0x19052>
  41ca26:	jmp    41cc7e <isspace@plt+0x1936e>
  41ca2b:	mov    esi,r15d
  41ca2e:	jmp    41cb8d <isspace@plt+0x1927d>
  41ca33:	mov    ecx,edi
  41ca35:	and    ecx,0xf
  41ca38:	test   rcx,rcx
  41ca3b:	mov    ebp,0x10
  41ca40:	cmovne rbp,rcx
  41ca44:	mov    rcx,rdi
  41ca47:	sub    rcx,rbp
  41ca4a:	vmovq  xmm0,rbx
  41ca4f:	vpxor  xmm1,xmm1,xmm1
  41ca53:	vmovdqa ymm2,YMMWORD PTR [rip+0x15185]        # 431be0 <isspace@plt+0x2e2d0>
  41ca5b:	vpbroadcastq ymm3,QWORD PTR [rip+0x1519c]        # 431c00 <isspace@plt+0x2e2f0>
  41ca64:	vpbroadcastq ymm4,QWORD PTR [rip+0x1519b]        # 431c08 <isspace@plt+0x2e2f8>
  41ca6d:	vmovdqu YMMWORD PTR [rsp],ymm4
  41ca72:	vpbroadcastq ymm5,QWORD PTR [rip+0x15195]        # 431c10 <isspace@plt+0x2e300>
  41ca7b:	vpbroadcastq ymm6,QWORD PTR [rip+0x15194]        # 431c18 <isspace@plt+0x2e308>
  41ca84:	vpbroadcastq ymm7,QWORD PTR [rip+0x15193]        # 431c20 <isspace@plt+0x2e310>
  41ca8d:	vpbroadcastq ymm8,QWORD PTR [rip+0x15192]        # 431c28 <isspace@plt+0x2e318>
  41ca96:	mov    rbp,rcx
  41ca99:	vpxor  xmm9,xmm9,xmm9
  41ca9e:	vpxor  xmm10,xmm10,xmm10
  41caa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41caad:	nop    DWORD PTR [rax]
  41cab0:	vpmuludq ymm11,ymm2,ymm3
  41cab4:	vpsrlq ymm12,ymm2,0x20
  41cab9:	vpmuludq ymm12,ymm12,ymm3
  41cabd:	vpsllq ymm12,ymm12,0x20
  41cac3:	vmovq  xmm4,rax
  41cac8:	vpbroadcastq ymm4,xmm4
  41cacd:	vpaddq ymm4,ymm11,ymm4
  41cad1:	vpaddq ymm4,ymm12,ymm4
  41cad5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41cada:	vpaddq ymm12,ymm4,ymm6
  41cade:	vpaddq ymm14,ymm4,ymm7
  41cae2:	vpaddq ymm4,ymm4,ymm8
  41cae7:	vpcmpeqd ymm15,ymm15,ymm15
  41caec:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41caf6:	vpcmpeqd ymm11,ymm11,ymm11
  41cafb:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41cb05:	vpcmpeqd ymm11,ymm11,ymm11
  41cb0a:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41cb14:	vpcmpeqd ymm11,ymm11,ymm11
  41cb19:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41cb23:	vpaddq ymm0,ymm13,ymm0
  41cb27:	vpaddq ymm1,ymm15,ymm1
  41cb2b:	vpaddq ymm9,ymm12,ymm9
  41cb30:	vpaddq ymm10,ymm14,ymm10
  41cb35:	vpaddq ymm2,ymm2,ymm5
  41cb39:	add    rbp,0xfffffffffffffff0
  41cb3d:	jne    41cab0 <isspace@plt+0x191a0>
  41cb43:	vpaddq ymm0,ymm1,ymm0
  41cb47:	vpaddq ymm0,ymm9,ymm0
  41cb4b:	vpaddq ymm0,ymm10,ymm0
  41cb4f:	vextracti128 xmm1,ymm0,0x1
  41cb55:	vpaddq ymm0,ymm0,ymm1
  41cb59:	vpshufd xmm1,xmm0,0x4e
  41cb5e:	vpaddq ymm0,ymm0,ymm1
  41cb62:	vmovq  rbx,xmm0
  41cb67:	sub    rdi,rcx
  41cb6a:	lea    rcx,[rcx+rcx*2]
  41cb6e:	shl    rcx,0x4
  41cb72:	add    rcx,rax
  41cb75:	add    rcx,0x38
  41cb79:	nop    DWORD PTR [rax+0x0]
  41cb80:	add    rbx,QWORD PTR [rcx]
  41cb83:	add    rcx,0x30
  41cb87:	add    rdi,0xffffffffffffffff
  41cb8b:	jne    41cb80 <isspace@plt+0x19270>
  41cb8d:	mov    DWORD PTR [r14+0x24],esi
  41cb91:	mov    DWORD PTR [r14+0x20],edx
  41cb95:	mov    QWORD PTR [r14+0x30],rax
  41cb99:	mov    rdi,QWORD PTR [r8]
  41cb9c:	mov    rsi,rbx
  41cb9f:	vzeroupper 
  41cba2:	call   410fc0 <isspace@plt+0xd6b0>
  41cba7:	mov    QWORD PTR [r14],rax
  41cbaa:	cmp    BYTE PTR [r14+0x10],0x0
  41cbaf:	je     41cc08 <isspace@plt+0x192f8>
  41cbb1:	cmp    QWORD PTR [r14+0x18],rbx
  41cbb5:	je     41cbbf <isspace@plt+0x192af>
  41cbb7:	mov    DWORD PTR [r14+0x28],0x0
  41cbbf:	mov    QWORD PTR [r14+0x18],rbx
  41cbc3:	mov    rdi,QWORD PTR [r14+0x40]
  41cbc7:	mov    rdx,QWORD PTR [rdi+0x50]
  41cbcb:	cmp    rdx,rbx
  41cbce:	ja     41cbd6 <isspace@plt+0x192c6>
  41cbd0:	cmp    QWORD PTR [rdi+0x58],rbx
  41cbd4:	jae    41cc14 <isspace@plt+0x19304>
  41cbd6:	mov    QWORD PTR [r14+0x30],0x0
  41cbde:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41cbe6:	cmp    QWORD PTR [rdi+0x98],r14
  41cbed:	jne    41cc7e <isspace@plt+0x1936e>
  41cbf3:	mov    rax,QWORD PTR [rdi+0x80]
  41cbfa:	mov    QWORD PTR [r14+0x30],rax
  41cbfe:	mov    QWORD PTR [r14+0x20],0x0
  41cc06:	jmp    41cc7e <isspace@plt+0x1936e>
  41cc08:	mov    QWORD PTR [r14+0x8],rax
  41cc0c:	cmp    QWORD PTR [r14+0x18],rbx
  41cc10:	jne    41cbb7 <isspace@plt+0x192a7>
  41cc12:	jmp    41cbbf <isspace@plt+0x192af>
  41cc14:	mov    r11,QWORD PTR [rdi+0x80]
  41cc1b:	test   r11,r11
  41cc1e:	je     41cc5c <isspace@plt+0x1934c>
  41cc20:	mov    rsi,QWORD PTR [rdi+0x88]
  41cc27:	xor    r10d,r10d
  41cc2a:	nop    WORD PTR [rax+rax*1+0x0]
  41cc30:	cmp    rdx,rbx
  41cc33:	setb   cl
  41cc36:	cmp    r11,rsi
  41cc39:	je     41cca7 <isspace@plt+0x19397>
  41cc3b:	cmp    rdx,rbx
  41cc3e:	jae    41cca7 <isspace@plt+0x19397>
  41cc40:	mov    rax,QWORD PTR [r11+0x10]
  41cc44:	add    rax,rdx
  41cc47:	cmp    rax,rbx
  41cc4a:	ja     41cca5 <isspace@plt+0x19395>
  41cc4c:	add    r10d,0x1
  41cc50:	mov    r11,QWORD PTR [r11+0x8]
  41cc54:	mov    rdx,rax
  41cc57:	test   r11,r11
  41cc5a:	jne    41cc30 <isspace@plt+0x19320>
  41cc5c:	mov    r11,QWORD PTR [rdi+0x90]
  41cc63:	mov    r10d,DWORD PTR [rdi+0x4c]
  41cc67:	add    r10d,0xffffffff
  41cc6b:	xor    eax,eax
  41cc6d:	mov    QWORD PTR [r14+0x30],r11
  41cc71:	mov    DWORD PTR [r14+0x20],r10d
  41cc75:	mov    DWORD PTR [r14+0x24],eax
  41cc79:	call   41a4a0 <isspace@plt+0x16b90>
  41cc7e:	mov    DWORD PTR [r14+0x28],r15d
  41cc82:	mov    rax,QWORD PTR [r14+0x18]
  41cc86:	mov    rcx,QWORD PTR fs:0x28
  41cc8f:	cmp    rcx,QWORD PTR [rsp+0x30]
  41cc94:	jne    41cd19 <isspace@plt+0x19409>
  41cc9a:	add    rsp,0x38
  41cc9e:	pop    rbx
  41cc9f:	pop    r14
  41cca1:	pop    r15
  41cca3:	pop    rbp
  41cca4:	ret    
  41cca5:	mov    cl,0x1
  41cca7:	mov    r8d,DWORD PTR [rdi+0x48]
  41ccab:	mov    eax,DWORD PTR [r11+0x20]
  41ccaf:	cmp    r8d,eax
  41ccb2:	cmovg  r8d,eax
  41ccb6:	xor    eax,eax
  41ccb8:	test   cl,cl
  41ccba:	je     41cc6d <isspace@plt+0x1935d>
  41ccbc:	test   r8d,r8d
  41ccbf:	jle    41cc6d <isspace@plt+0x1935d>
  41ccc1:	movsxd rbp,r8d
  41ccc4:	lea    r9,[r11+0x68]
  41ccc8:	xor    eax,eax
  41ccca:	nop    WORD PTR [rax+rax*1+0x0]
  41ccd0:	movsxd rsi,eax
  41ccd3:	mov    rax,rsi
  41ccd6:	shl    rax,0x4
  41ccda:	lea    rcx,[rax+rax*2]
  41ccde:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41cce3:	add    rsi,0x1
  41cce7:	add    rcx,r9
  41ccea:	nop    WORD PTR [rax+rax*1+0x0]
  41ccf0:	mov    rax,rsi
  41ccf3:	cmp    rsi,rbp
  41ccf6:	jge    41cd06 <isspace@plt+0x193f6>
  41ccf8:	lea    rsi,[rax+0x1]
  41ccfc:	cmp    QWORD PTR [rcx],0x0
  41cd00:	lea    rcx,[rcx+0x30]
  41cd04:	je     41ccf0 <isspace@plt+0x193e0>
  41cd06:	cmp    rdx,rbx
  41cd09:	jae    41cc6d <isspace@plt+0x1935d>
  41cd0f:	cmp    r8d,eax
  41cd12:	jg     41ccd0 <isspace@plt+0x193c0>
  41cd14:	jmp    41cc6d <isspace@plt+0x1935d>
  41cd19:	call   403280 <__stack_chk_fail@plt>
  41cd1e:	xchg   ax,ax
  41cd20:	push   rbp
  41cd21:	push   r15
  41cd23:	push   r14
  41cd25:	push   rbx
  41cd26:	sub    rsp,0x38
  41cd2a:	mov    r14,rdi
  41cd2d:	mov    rax,QWORD PTR fs:0x28
  41cd36:	mov    QWORD PTR [rsp+0x30],rax
  41cd3b:	mov    rax,QWORD PTR [rdi+0x30]
  41cd3f:	test   rax,rax
  41cd42:	je     41ce0d <isspace@plt+0x194fd>
  41cd48:	mov    r15d,DWORD PTR [r14+0x28]
  41cd4c:	test   r15d,r15d
  41cd4f:	jne    41cd55 <isspace@plt+0x19445>
  41cd51:	mov    r15d,DWORD PTR [r14+0x24]
  41cd55:	mov    rax,QWORD PTR [rax]
  41cd58:	test   rax,rax
  41cd5b:	jne    41cd7b <isspace@plt+0x1946b>
  41cd5d:	mov    rdi,QWORD PTR [r14+0x40]
  41cd61:	mov    esi,0x1
  41cd66:	call   41d110 <isspace@plt+0x19800>
  41cd6b:	mov    rax,QWORD PTR [r14+0x30]
  41cd6f:	mov    rax,QWORD PTR [rax]
  41cd72:	test   rax,rax
  41cd75:	je     41d06e <isspace@plt+0x1975e>
  41cd7b:	mov    r8,QWORD PTR [r14+0x40]
  41cd7f:	mov    rbx,QWORD PTR [r8+0x50]
  41cd83:	mov    rcx,QWORD PTR [r8+0x80]
  41cd8a:	xor    edx,edx
  41cd8c:	test   rcx,rcx
  41cd8f:	je     41cdb5 <isspace@plt+0x194a5>
  41cd91:	cmp    rcx,rax
  41cd94:	je     41cdb5 <isspace@plt+0x194a5>
  41cd96:	xor    edx,edx
  41cd98:	nop    DWORD PTR [rax+rax*1+0x0]
  41cda0:	add    rbx,QWORD PTR [rcx+0x10]
  41cda4:	add    edx,0x1
  41cda7:	mov    rcx,QWORD PTR [rcx+0x8]
  41cdab:	test   rcx,rcx
  41cdae:	je     41cdb5 <isspace@plt+0x194a5>
  41cdb0:	cmp    rcx,rax
  41cdb3:	jne    41cda0 <isspace@plt+0x19490>
  41cdb5:	test   r15d,r15d
  41cdb8:	jle    41ce1a <isspace@plt+0x1950a>
  41cdba:	movsxd rcx,r15d
  41cdbd:	lea    rdi,[rcx+rcx*2]
  41cdc1:	lea    rsi,[rcx+0x1]
  41cdc5:	shl    rdi,0x4
  41cdc9:	lea    rcx,[rax+rdi*1]
  41cdcd:	add    rcx,0x38
  41cdd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cddb:	nop    DWORD PTR [rax+rax*1+0x0]
  41cde0:	cmp    QWORD PTR [rcx],0x0
  41cde4:	jne    41cdf4 <isspace@plt+0x194e4>
  41cde6:	add    rsi,0xffffffffffffffff
  41cdea:	add    rcx,0xffffffffffffffd0
  41cdee:	cmp    rsi,0x1
  41cdf2:	jg     41cde0 <isspace@plt+0x194d0>
  41cdf4:	add    esi,0xffffffff
  41cdf7:	test   esi,esi
  41cdf9:	jle    41cf7d <isspace@plt+0x1966d>
  41cdff:	mov    edi,esi
  41ce01:	cmp    esi,0x11
  41ce04:	jae    41ce22 <isspace@plt+0x19512>
  41ce06:	xor    ecx,ecx
  41ce08:	jmp    41cf57 <isspace@plt+0x19647>
  41ce0d:	mov    rdi,r14
  41ce10:	call   41dcd0 <isspace@plt+0x1a3c0>
  41ce15:	jmp    41d076 <isspace@plt+0x19766>
  41ce1a:	mov    esi,r15d
  41ce1d:	jmp    41cf7d <isspace@plt+0x1966d>
  41ce22:	mov    ecx,edi
  41ce24:	and    ecx,0xf
  41ce27:	test   rcx,rcx
  41ce2a:	mov    ebp,0x10
  41ce2f:	cmovne rbp,rcx
  41ce33:	mov    rcx,rdi
  41ce36:	sub    rcx,rbp
  41ce39:	vmovq  xmm0,rbx
  41ce3e:	vpxor  xmm1,xmm1,xmm1
  41ce42:	vmovdqa ymm2,YMMWORD PTR [rip+0x14d96]        # 431be0 <isspace@plt+0x2e2d0>
  41ce4a:	vpbroadcastq ymm3,QWORD PTR [rip+0x14dad]        # 431c00 <isspace@plt+0x2e2f0>
  41ce53:	vpbroadcastq ymm4,QWORD PTR [rip+0x14dac]        # 431c08 <isspace@plt+0x2e2f8>
  41ce5c:	vmovdqu YMMWORD PTR [rsp],ymm4
  41ce61:	vpbroadcastq ymm5,QWORD PTR [rip+0x14da6]        # 431c10 <isspace@plt+0x2e300>
  41ce6a:	vpbroadcastq ymm6,QWORD PTR [rip+0x14da5]        # 431c18 <isspace@plt+0x2e308>
  41ce73:	vpbroadcastq ymm7,QWORD PTR [rip+0x14da4]        # 431c20 <isspace@plt+0x2e310>
  41ce7c:	vpbroadcastq ymm8,QWORD PTR [rip+0x14da3]        # 431c28 <isspace@plt+0x2e318>
  41ce85:	mov    rbp,rcx
  41ce88:	vpxor  xmm9,xmm9,xmm9
  41ce8d:	vpxor  xmm10,xmm10,xmm10
  41ce92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce9c:	nop    DWORD PTR [rax+0x0]
  41cea0:	vpmuludq ymm11,ymm2,ymm3
  41cea4:	vpsrlq ymm12,ymm2,0x20
  41cea9:	vpmuludq ymm12,ymm12,ymm3
  41cead:	vpsllq ymm12,ymm12,0x20
  41ceb3:	vmovq  xmm4,rax
  41ceb8:	vpbroadcastq ymm4,xmm4
  41cebd:	vpaddq ymm4,ymm11,ymm4
  41cec1:	vpaddq ymm4,ymm12,ymm4
  41cec5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41ceca:	vpaddq ymm12,ymm4,ymm6
  41cece:	vpaddq ymm14,ymm4,ymm7
  41ced2:	vpaddq ymm4,ymm4,ymm8
  41ced7:	vpcmpeqd ymm15,ymm15,ymm15
  41cedc:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41cee6:	vpcmpeqd ymm11,ymm11,ymm11
  41ceeb:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41cef5:	vpcmpeqd ymm11,ymm11,ymm11
  41cefa:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41cf04:	vpcmpeqd ymm11,ymm11,ymm11
  41cf09:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41cf13:	vpaddq ymm0,ymm13,ymm0
  41cf17:	vpaddq ymm1,ymm15,ymm1
  41cf1b:	vpaddq ymm9,ymm12,ymm9
  41cf20:	vpaddq ymm10,ymm14,ymm10
  41cf25:	vpaddq ymm2,ymm2,ymm5
  41cf29:	add    rbp,0xfffffffffffffff0
  41cf2d:	jne    41cea0 <isspace@plt+0x19590>
  41cf33:	vpaddq ymm0,ymm1,ymm0
  41cf37:	vpaddq ymm0,ymm9,ymm0
  41cf3b:	vpaddq ymm0,ymm10,ymm0
  41cf3f:	vextracti128 xmm1,ymm0,0x1
  41cf45:	vpaddq ymm0,ymm0,ymm1
  41cf49:	vpshufd xmm1,xmm0,0x4e
  41cf4e:	vpaddq ymm0,ymm0,ymm1
  41cf52:	vmovq  rbx,xmm0
  41cf57:	sub    rdi,rcx
  41cf5a:	lea    rcx,[rcx+rcx*2]
  41cf5e:	shl    rcx,0x4
  41cf62:	add    rcx,rax
  41cf65:	add    rcx,0x38
  41cf69:	nop    DWORD PTR [rax+0x0]
  41cf70:	add    rbx,QWORD PTR [rcx]
  41cf73:	add    rcx,0x30
  41cf77:	add    rdi,0xffffffffffffffff
  41cf7b:	jne    41cf70 <isspace@plt+0x19660>
  41cf7d:	mov    DWORD PTR [r14+0x24],esi
  41cf81:	mov    DWORD PTR [r14+0x20],edx
  41cf85:	mov    QWORD PTR [r14+0x30],rax
  41cf89:	mov    rdi,QWORD PTR [r8]
  41cf8c:	mov    rsi,rbx
  41cf8f:	vzeroupper 
  41cf92:	call   410fc0 <isspace@plt+0xd6b0>
  41cf97:	mov    QWORD PTR [r14],rax
  41cf9a:	cmp    BYTE PTR [r14+0x10],0x0
  41cf9f:	je     41cff8 <isspace@plt+0x196e8>
  41cfa1:	cmp    QWORD PTR [r14+0x18],rbx
  41cfa5:	je     41cfaf <isspace@plt+0x1969f>
  41cfa7:	mov    DWORD PTR [r14+0x28],0x0
  41cfaf:	mov    QWORD PTR [r14+0x18],rbx
  41cfb3:	mov    rdi,QWORD PTR [r14+0x40]
  41cfb7:	mov    rdx,QWORD PTR [rdi+0x50]
  41cfbb:	cmp    rdx,rbx
  41cfbe:	ja     41cfc6 <isspace@plt+0x196b6>
  41cfc0:	cmp    QWORD PTR [rdi+0x58],rbx
  41cfc4:	jae    41d004 <isspace@plt+0x196f4>
  41cfc6:	mov    QWORD PTR [r14+0x30],0x0
  41cfce:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41cfd6:	cmp    QWORD PTR [rdi+0x98],r14
  41cfdd:	jne    41d06e <isspace@plt+0x1975e>
  41cfe3:	mov    rax,QWORD PTR [rdi+0x80]
  41cfea:	mov    QWORD PTR [r14+0x30],rax
  41cfee:	mov    QWORD PTR [r14+0x20],0x0
  41cff6:	jmp    41d06e <isspace@plt+0x1975e>
  41cff8:	mov    QWORD PTR [r14+0x8],rax
  41cffc:	cmp    QWORD PTR [r14+0x18],rbx
  41d000:	jne    41cfa7 <isspace@plt+0x19697>
  41d002:	jmp    41cfaf <isspace@plt+0x1969f>
  41d004:	mov    r11,QWORD PTR [rdi+0x80]
  41d00b:	test   r11,r11
  41d00e:	je     41d04c <isspace@plt+0x1973c>
  41d010:	mov    rsi,QWORD PTR [rdi+0x88]
  41d017:	xor    r10d,r10d
  41d01a:	nop    WORD PTR [rax+rax*1+0x0]
  41d020:	cmp    rdx,rbx
  41d023:	setb   cl
  41d026:	cmp    r11,rsi
  41d029:	je     41d097 <isspace@plt+0x19787>
  41d02b:	cmp    rdx,rbx
  41d02e:	jae    41d097 <isspace@plt+0x19787>
  41d030:	mov    rax,QWORD PTR [r11+0x10]
  41d034:	add    rax,rdx
  41d037:	cmp    rax,rbx
  41d03a:	ja     41d095 <isspace@plt+0x19785>
  41d03c:	add    r10d,0x1
  41d040:	mov    r11,QWORD PTR [r11+0x8]
  41d044:	mov    rdx,rax
  41d047:	test   r11,r11
  41d04a:	jne    41d020 <isspace@plt+0x19710>
  41d04c:	mov    r11,QWORD PTR [rdi+0x90]
  41d053:	mov    r10d,DWORD PTR [rdi+0x4c]
  41d057:	add    r10d,0xffffffff
  41d05b:	xor    eax,eax
  41d05d:	mov    QWORD PTR [r14+0x30],r11
  41d061:	mov    DWORD PTR [r14+0x20],r10d
  41d065:	mov    DWORD PTR [r14+0x24],eax
  41d069:	call   41a4a0 <isspace@plt+0x16b90>
  41d06e:	mov    DWORD PTR [r14+0x28],r15d
  41d072:	mov    rax,QWORD PTR [r14+0x18]
  41d076:	mov    rcx,QWORD PTR fs:0x28
  41d07f:	cmp    rcx,QWORD PTR [rsp+0x30]
  41d084:	jne    41d109 <isspace@plt+0x197f9>
  41d08a:	add    rsp,0x38
  41d08e:	pop    rbx
  41d08f:	pop    r14
  41d091:	pop    r15
  41d093:	pop    rbp
  41d094:	ret    
  41d095:	mov    cl,0x1
  41d097:	mov    r8d,DWORD PTR [rdi+0x48]
  41d09b:	mov    eax,DWORD PTR [r11+0x20]
  41d09f:	cmp    r8d,eax
  41d0a2:	cmovg  r8d,eax
  41d0a6:	xor    eax,eax
  41d0a8:	test   cl,cl
  41d0aa:	je     41d05d <isspace@plt+0x1974d>
  41d0ac:	test   r8d,r8d
  41d0af:	jle    41d05d <isspace@plt+0x1974d>
  41d0b1:	movsxd rbp,r8d
  41d0b4:	lea    r9,[r11+0x68]
  41d0b8:	xor    eax,eax
  41d0ba:	nop    WORD PTR [rax+rax*1+0x0]
  41d0c0:	movsxd rsi,eax
  41d0c3:	mov    rax,rsi
  41d0c6:	shl    rax,0x4
  41d0ca:	lea    rcx,[rax+rax*2]
  41d0ce:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41d0d3:	add    rsi,0x1
  41d0d7:	add    rcx,r9
  41d0da:	nop    WORD PTR [rax+rax*1+0x0]
  41d0e0:	mov    rax,rsi
  41d0e3:	cmp    rsi,rbp
  41d0e6:	jge    41d0f6 <isspace@plt+0x197e6>
  41d0e8:	lea    rsi,[rax+0x1]
  41d0ec:	cmp    QWORD PTR [rcx],0x0
  41d0f0:	lea    rcx,[rcx+0x30]
  41d0f4:	je     41d0e0 <isspace@plt+0x197d0>
  41d0f6:	cmp    rdx,rbx
  41d0f9:	jae    41d05d <isspace@plt+0x1974d>
  41d0ff:	cmp    r8d,eax
  41d102:	jg     41d0c0 <isspace@plt+0x197b0>
  41d104:	jmp    41d05d <isspace@plt+0x1974d>
  41d109:	call   403280 <__stack_chk_fail@plt>
  41d10e:	xchg   ax,ax
  41d110:	push   r15
  41d112:	push   r14
  41d114:	push   r12
  41d116:	push   rbx
  41d117:	sub    rsp,0x38
  41d11b:	mov    rbx,rdi
  41d11e:	mov    rax,QWORD PTR fs:0x28
  41d127:	mov    QWORD PTR [rsp+0x30],rax
  41d12c:	mov    r14,QWORD PTR [rdi+0x98]
  41d133:	call   41c410 <isspace@plt+0x18b00>
  41d138:	test   al,al
  41d13a:	je     41d1fe <isspace@plt+0x198ee>
  41d140:	mov    r9,QWORD PTR [r14+0x30]
  41d144:	mov    r8,QWORD PTR [r14+0x40]
  41d148:	mov    r11,QWORD PTR [rbx+0x88]
  41d14f:	mov    rax,QWORD PTR [rbx+0x98]
  41d156:	cmp    r9,r11
  41d159:	mov    rcx,r11
  41d15c:	cmovb  rcx,r9
  41d160:	mov    edx,DWORD PTR [rax+0x24]
  41d163:	mov    rbx,QWORD PTR [r8+0x50]
  41d167:	mov    rdi,QWORD PTR [r8+0x80]
  41d16e:	xor    esi,esi
  41d170:	test   rdi,rdi
  41d173:	je     41d195 <isspace@plt+0x19885>
  41d175:	cmp    rdi,rcx
  41d178:	je     41d195 <isspace@plt+0x19885>
  41d17a:	xor    esi,esi
  41d17c:	nop    DWORD PTR [rax+0x0]
  41d180:	add    rbx,QWORD PTR [rdi+0x10]
  41d184:	add    esi,0x1
  41d187:	mov    rdi,QWORD PTR [rdi+0x8]
  41d18b:	test   rdi,rdi
  41d18e:	je     41d195 <isspace@plt+0x19885>
  41d190:	cmp    rdi,rcx
  41d193:	jne    41d180 <isspace@plt+0x19870>
  41d195:	test   edx,edx
  41d197:	jle    41d36d <isspace@plt+0x19a5d>
  41d19d:	movsxd rax,edx
  41d1a0:	lea    rdi,[rax+rax*2]
  41d1a4:	lea    rdx,[rax+0x1]
  41d1a8:	shl    rdi,0x4
  41d1ac:	add    rdi,0x37
  41d1b0:	not    r9
  41d1b3:	not    r11
  41d1b6:	cmp    r9,r11
  41d1b9:	mov    rax,r11
  41d1bc:	cmova  rax,r9
  41d1c0:	sub    rdi,rax
  41d1c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d1cd:	nop    DWORD PTR [rax]
  41d1d0:	cmp    QWORD PTR [rdi],0x0
  41d1d4:	jne    41d1e4 <isspace@plt+0x198d4>
  41d1d6:	add    rdx,0xffffffffffffffff
  41d1da:	add    rdi,0xffffffffffffffd0
  41d1de:	cmp    rdx,0x1
  41d1e2:	jg     41d1d0 <isspace@plt+0x198c0>
  41d1e4:	add    edx,0xffffffff
  41d1e7:	test   edx,edx
  41d1e9:	jle    41d36d <isspace@plt+0x19a5d>
  41d1ef:	mov    edi,edx
  41d1f1:	cmp    edx,0x11
  41d1f4:	jae    41d218 <isspace@plt+0x19908>
  41d1f6:	xor    r10d,r10d
  41d1f9:	jmp    41d347 <isspace@plt+0x19a37>
  41d1fe:	mov    rdi,QWORD PTR [rbx+0x98]
  41d205:	xor    esi,esi
  41d207:	call   41ad90 <isspace@plt+0x17480>
  41d20c:	add    r14,0x18
  41d210:	mov    r15,r14
  41d213:	jmp    41d45e <isspace@plt+0x19b4e>
  41d218:	mov    eax,edi
  41d21a:	and    eax,0xf
  41d21d:	test   rax,rax
  41d220:	mov    r15d,0x10
  41d226:	cmovne r15,rax
  41d22a:	mov    r10,rdi
  41d22d:	sub    r10,r15
  41d230:	vmovq  xmm0,rbx
  41d235:	vpxor  xmm1,xmm1,xmm1
  41d239:	vmovdqa ymm2,YMMWORD PTR [rip+0x1499f]        # 431be0 <isspace@plt+0x2e2d0>
  41d241:	vpbroadcastq ymm3,QWORD PTR [rip+0x149b6]        # 431c00 <isspace@plt+0x2e2f0>
  41d24a:	vpbroadcastq ymm4,QWORD PTR [rip+0x149b5]        # 431c08 <isspace@plt+0x2e2f8>
  41d253:	vmovdqu YMMWORD PTR [rsp],ymm4
  41d258:	vpbroadcastq ymm5,QWORD PTR [rip+0x149af]        # 431c10 <isspace@plt+0x2e300>
  41d261:	vpbroadcastq ymm6,QWORD PTR [rip+0x149ae]        # 431c18 <isspace@plt+0x2e308>
  41d26a:	vpbroadcastq ymm7,QWORD PTR [rip+0x149ad]        # 431c20 <isspace@plt+0x2e310>
  41d273:	vpbroadcastq ymm8,QWORD PTR [rip+0x149ac]        # 431c28 <isspace@plt+0x2e318>
  41d27c:	mov    rbx,r10
  41d27f:	vpxor  xmm9,xmm9,xmm9
  41d284:	vpxor  xmm10,xmm10,xmm10
  41d289:	nop    DWORD PTR [rax+0x0]
  41d290:	vpmuludq ymm11,ymm2,ymm3
  41d294:	vpsrlq ymm12,ymm2,0x20
  41d299:	vpmuludq ymm12,ymm12,ymm3
  41d29d:	vpsllq ymm12,ymm12,0x20
  41d2a3:	vmovq  xmm4,rcx
  41d2a8:	vpbroadcastq ymm4,xmm4
  41d2ad:	vpaddq ymm4,ymm11,ymm4
  41d2b1:	vpaddq ymm4,ymm12,ymm4
  41d2b5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41d2ba:	vpaddq ymm12,ymm4,ymm6
  41d2be:	vpaddq ymm14,ymm4,ymm7
  41d2c2:	vpaddq ymm4,ymm4,ymm8
  41d2c7:	vpcmpeqd ymm15,ymm15,ymm15
  41d2cc:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41d2d6:	vpcmpeqd ymm11,ymm11,ymm11
  41d2db:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41d2e5:	vpcmpeqd ymm11,ymm11,ymm11
  41d2ea:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41d2f4:	vpcmpeqd ymm11,ymm11,ymm11
  41d2f9:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41d303:	vpaddq ymm0,ymm13,ymm0
  41d307:	vpaddq ymm1,ymm15,ymm1
  41d30b:	vpaddq ymm9,ymm12,ymm9
  41d310:	vpaddq ymm10,ymm14,ymm10
  41d315:	vpaddq ymm2,ymm2,ymm5
  41d319:	add    rbx,0xfffffffffffffff0
  41d31d:	jne    41d290 <isspace@plt+0x19980>
  41d323:	vpaddq ymm0,ymm1,ymm0
  41d327:	vpaddq ymm0,ymm9,ymm0
  41d32b:	vpaddq ymm0,ymm10,ymm0
  41d32f:	vextracti128 xmm1,ymm0,0x1
  41d335:	vpaddq ymm0,ymm0,ymm1
  41d339:	vpshufd xmm1,xmm0,0x4e
  41d33e:	vpaddq ymm0,ymm0,ymm1
  41d342:	vmovq  rbx,xmm0
  41d347:	sub    rdi,r10
  41d34a:	lea    rax,[r10+r10*2]
  41d34e:	shl    rax,0x4
  41d352:	add    rax,0x37
  41d356:	cmp    r9,r11
  41d359:	cmova  r11,r9
  41d35d:	sub    rax,r11
  41d360:	add    rbx,QWORD PTR [rax]
  41d363:	add    rax,0x30
  41d367:	add    rdi,0xffffffffffffffff
  41d36b:	jne    41d360 <isspace@plt+0x19a50>
  41d36d:	mov    DWORD PTR [r14+0x24],edx
  41d371:	mov    DWORD PTR [r14+0x20],esi
  41d375:	mov    QWORD PTR [r14+0x30],rcx
  41d379:	mov    rdi,QWORD PTR [r8]
  41d37c:	mov    rsi,rbx
  41d37f:	vzeroupper 
  41d382:	call   410fc0 <isspace@plt+0xd6b0>
  41d387:	mov    QWORD PTR [r14],rax
  41d38a:	cmp    BYTE PTR [r14+0x10],0x0
  41d38f:	je     41d3ec <isspace@plt+0x19adc>
  41d391:	cmp    QWORD PTR [r14+0x18],rbx
  41d395:	je     41d39f <isspace@plt+0x19a8f>
  41d397:	mov    DWORD PTR [r14+0x28],0x0
  41d39f:	lea    r15,[r14+0x18]
  41d3a3:	mov    QWORD PTR [r14+0x18],rbx
  41d3a7:	mov    rdi,QWORD PTR [r14+0x40]
  41d3ab:	mov    r12,QWORD PTR [rdi+0x50]
  41d3af:	cmp    r12,rbx
  41d3b2:	ja     41d3ba <isspace@plt+0x19aaa>
  41d3b4:	cmp    QWORD PTR [rdi+0x58],rbx
  41d3b8:	jae    41d3f8 <isspace@plt+0x19ae8>
  41d3ba:	mov    QWORD PTR [r14+0x30],0x0
  41d3c2:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41d3ca:	cmp    QWORD PTR [rdi+0x98],r14
  41d3d1:	jne    41d45e <isspace@plt+0x19b4e>
  41d3d7:	mov    rax,QWORD PTR [rdi+0x80]
  41d3de:	mov    QWORD PTR [r14+0x30],rax
  41d3e2:	mov    QWORD PTR [r14+0x20],0x0
  41d3ea:	jmp    41d45e <isspace@plt+0x19b4e>
  41d3ec:	mov    QWORD PTR [r14+0x8],rax
  41d3f0:	cmp    QWORD PTR [r14+0x18],rbx
  41d3f4:	jne    41d397 <isspace@plt+0x19a87>
  41d3f6:	jmp    41d39f <isspace@plt+0x19a8f>
  41d3f8:	mov    r11,QWORD PTR [rdi+0x80]
  41d3ff:	test   r11,r11
  41d402:	je     41d43c <isspace@plt+0x19b2c>
  41d404:	mov    rcx,QWORD PTR [rdi+0x88]
  41d40b:	xor    r9d,r9d
  41d40e:	xchg   ax,ax
  41d410:	cmp    r12,rbx
  41d413:	setb   al
  41d416:	cmp    r11,rcx
  41d419:	je     41d483 <isspace@plt+0x19b73>
  41d41b:	cmp    r12,rbx
  41d41e:	jae    41d483 <isspace@plt+0x19b73>
  41d420:	mov    rax,QWORD PTR [r11+0x10]
  41d424:	add    rax,r12
  41d427:	cmp    rax,rbx
  41d42a:	ja     41d481 <isspace@plt+0x19b71>
  41d42c:	add    r9d,0x1
  41d430:	mov    r11,QWORD PTR [r11+0x8]
  41d434:	mov    r12,rax
  41d437:	test   r11,r11
  41d43a:	jne    41d410 <isspace@plt+0x19b00>
  41d43c:	mov    r11,QWORD PTR [rdi+0x90]
  41d443:	mov    r9d,DWORD PTR [rdi+0x4c]
  41d447:	add    r9d,0xffffffff
  41d44b:	xor    edx,edx
  41d44d:	mov    QWORD PTR [r14+0x30],r11
  41d451:	mov    DWORD PTR [r14+0x20],r9d
  41d455:	mov    DWORD PTR [r14+0x24],edx
  41d459:	call   41a4a0 <isspace@plt+0x16b90>
  41d45e:	mov    rax,QWORD PTR [r15]
  41d461:	mov    rcx,QWORD PTR fs:0x28
  41d46a:	cmp    rcx,QWORD PTR [rsp+0x30]
  41d46f:	jne    41d4f9 <isspace@plt+0x19be9>
  41d475:	add    rsp,0x38
  41d479:	pop    rbx
  41d47a:	pop    r12
  41d47c:	pop    r14
  41d47e:	pop    r15
  41d480:	ret    
  41d481:	mov    al,0x1
  41d483:	mov    r8d,DWORD PTR [rdi+0x48]
  41d487:	mov    ecx,DWORD PTR [r11+0x20]
  41d48b:	cmp    r8d,ecx
  41d48e:	cmovg  r8d,ecx
  41d492:	xor    edx,edx
  41d494:	test   al,al
  41d496:	je     41d44d <isspace@plt+0x19b3d>
  41d498:	test   r8d,r8d
  41d49b:	jle    41d44d <isspace@plt+0x19b3d>
  41d49d:	movsxd rcx,r8d
  41d4a0:	lea    r10,[r11+0x68]
  41d4a4:	xor    edx,edx
  41d4a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d4b0:	movsxd rsi,edx
  41d4b3:	mov    rax,rsi
  41d4b6:	shl    rax,0x4
  41d4ba:	lea    rax,[rax+rax*2]
  41d4be:	add    r12,QWORD PTR [r11+rax*1+0x38]
  41d4c3:	add    rsi,0x1
  41d4c7:	add    rax,r10
  41d4ca:	nop    WORD PTR [rax+rax*1+0x0]
  41d4d0:	mov    rdx,rsi
  41d4d3:	cmp    rsi,rcx
  41d4d6:	jge    41d4e6 <isspace@plt+0x19bd6>
  41d4d8:	lea    rsi,[rdx+0x1]
  41d4dc:	cmp    QWORD PTR [rax],0x0
  41d4e0:	lea    rax,[rax+0x30]
  41d4e4:	je     41d4d0 <isspace@plt+0x19bc0>
  41d4e6:	cmp    r12,rbx
  41d4e9:	jae    41d44d <isspace@plt+0x19b3d>
  41d4ef:	cmp    r8d,edx
  41d4f2:	jg     41d4b0 <isspace@plt+0x19ba0>
  41d4f4:	jmp    41d44d <isspace@plt+0x19b3d>
  41d4f9:	call   403280 <__stack_chk_fail@plt>
  41d4fe:	xchg   ax,ax
  41d500:	push   r14
  41d502:	push   rbx
  41d503:	push   rax
  41d504:	mov    rax,QWORD PTR fs:0x28
  41d50d:	mov    QWORD PTR [rsp],rax
  41d511:	mov    rsi,QWORD PTR [rdi+0x50]
  41d515:	mov    r14,QWORD PTR [rdi+0x98]
  41d51c:	test   rsi,rsi
  41d51f:	je     41d542 <isspace@plt+0x19c32>
  41d521:	mov    rbx,rdi
  41d524:	add    rsi,0xffffffffffffffff
  41d528:	mov    rdi,r14
  41d52b:	call   41ad90 <isspace@plt+0x17480>
  41d530:	mov    rdi,rbx
  41d533:	call   41c210 <isspace@plt+0x18900>
  41d538:	mov    rdi,r14
  41d53b:	call   41d570 <isspace@plt+0x19c60>
  41d540:	jmp    41d54c <isspace@plt+0x19c3c>
  41d542:	xor    esi,esi
  41d544:	mov    rdi,r14
  41d547:	call   41ad90 <isspace@plt+0x17480>
  41d54c:	mov    rax,QWORD PTR [r14+0x18]
  41d550:	mov    rcx,QWORD PTR fs:0x28
  41d559:	cmp    rcx,QWORD PTR [rsp]
  41d55d:	jne    41d567 <isspace@plt+0x19c57>
  41d55f:	add    rsp,0x8
  41d563:	pop    rbx
  41d564:	pop    r14
  41d566:	ret    
  41d567:	call   403280 <__stack_chk_fail@plt>
  41d56c:	nop    DWORD PTR [rax+0x0]
  41d570:	push   r15
  41d572:	push   r14
  41d574:	push   rbx
  41d575:	sub    rsp,0x10
  41d579:	mov    r14,rdi
  41d57c:	mov    rax,QWORD PTR fs:0x28
  41d585:	mov    QWORD PTR [rsp+0x8],rax
  41d58a:	mov    rdx,QWORD PTR [rdi+0x30]
  41d58e:	test   rdx,rdx
  41d591:	je     41d650 <isspace@plt+0x19d40>
  41d597:	mov    rax,QWORD PTR [r14+0x40]
  41d59b:	mov    rbx,QWORD PTR [rax+0x50]
  41d59f:	mov    rsi,QWORD PTR [rax+0x80]
  41d5a6:	xor    ecx,ecx
  41d5a8:	test   rsi,rsi
  41d5ab:	je     41d5d5 <isspace@plt+0x19cc5>
  41d5ad:	cmp    rsi,rdx
  41d5b0:	je     41d5d5 <isspace@plt+0x19cc5>
  41d5b2:	xor    ecx,ecx
  41d5b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d5be:	xchg   ax,ax
  41d5c0:	add    rbx,QWORD PTR [rsi+0x10]
  41d5c4:	add    ecx,0x1
  41d5c7:	mov    rsi,QWORD PTR [rsi+0x8]
  41d5cb:	test   rsi,rsi
  41d5ce:	je     41d5d5 <isspace@plt+0x19cc5>
  41d5d0:	cmp    rsi,rdx
  41d5d3:	jne    41d5c0 <isspace@plt+0x19cb0>
  41d5d5:	mov    DWORD PTR [r14+0x24],0x0
  41d5dd:	mov    DWORD PTR [r14+0x20],ecx
  41d5e1:	mov    rdi,QWORD PTR [rax]
  41d5e4:	mov    rsi,rbx
  41d5e7:	call   410fc0 <isspace@plt+0xd6b0>
  41d5ec:	mov    QWORD PTR [r14],rax
  41d5ef:	cmp    BYTE PTR [r14+0x10],0x0
  41d5f4:	je     41d656 <isspace@plt+0x19d46>
  41d5f6:	cmp    QWORD PTR [r14+0x18],rbx
  41d5fa:	je     41d604 <isspace@plt+0x19cf4>
  41d5fc:	mov    DWORD PTR [r14+0x28],0x0
  41d604:	mov    QWORD PTR [r14+0x18],rbx
  41d608:	mov    rdi,QWORD PTR [r14+0x40]
  41d60c:	mov    r15,QWORD PTR [rdi+0x50]
  41d610:	cmp    r15,rbx
  41d613:	ja     41d61b <isspace@plt+0x19d0b>
  41d615:	cmp    QWORD PTR [rdi+0x58],rbx
  41d619:	jae    41d662 <isspace@plt+0x19d52>
  41d61b:	mov    QWORD PTR [r14+0x30],0x0
  41d623:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41d62b:	cmp    QWORD PTR [rdi+0x98],r14
  41d632:	jne    41d6ce <isspace@plt+0x19dbe>
  41d638:	mov    rax,QWORD PTR [rdi+0x80]
  41d63f:	mov    QWORD PTR [r14+0x30],rax
  41d643:	mov    QWORD PTR [r14+0x20],0x0
  41d64b:	jmp    41d6ce <isspace@plt+0x19dbe>
  41d650:	mov    rbx,QWORD PTR [r14+0x18]
  41d654:	jmp    41d6ce <isspace@plt+0x19dbe>
  41d656:	mov    QWORD PTR [r14+0x8],rax
  41d65a:	cmp    QWORD PTR [r14+0x18],rbx
  41d65e:	jne    41d5fc <isspace@plt+0x19cec>
  41d660:	jmp    41d604 <isspace@plt+0x19cf4>
  41d662:	mov    r11,QWORD PTR [rdi+0x80]
  41d669:	test   r11,r11
  41d66c:	je     41d6ac <isspace@plt+0x19d9c>
  41d66e:	mov    rcx,QWORD PTR [rdi+0x88]
  41d675:	xor    r9d,r9d
  41d678:	nop    DWORD PTR [rax+rax*1+0x0]
  41d680:	cmp    r15,rbx
  41d683:	setb   al
  41d686:	cmp    r11,rcx
  41d689:	je     41d6ed <isspace@plt+0x19ddd>
  41d68b:	cmp    r15,rbx
  41d68e:	jae    41d6ed <isspace@plt+0x19ddd>
  41d690:	mov    rax,QWORD PTR [r11+0x10]
  41d694:	add    rax,r15
  41d697:	cmp    rax,rbx
  41d69a:	ja     41d6eb <isspace@plt+0x19ddb>
  41d69c:	add    r9d,0x1
  41d6a0:	mov    r11,QWORD PTR [r11+0x8]
  41d6a4:	mov    r15,rax
  41d6a7:	test   r11,r11
  41d6aa:	jne    41d680 <isspace@plt+0x19d70>
  41d6ac:	mov    r11,QWORD PTR [rdi+0x90]
  41d6b3:	mov    r9d,DWORD PTR [rdi+0x4c]
  41d6b7:	add    r9d,0xffffffff
  41d6bb:	xor    edx,edx
  41d6bd:	mov    QWORD PTR [r14+0x30],r11
  41d6c1:	mov    DWORD PTR [r14+0x20],r9d
  41d6c5:	mov    DWORD PTR [r14+0x24],edx
  41d6c9:	call   41a4a0 <isspace@plt+0x16b90>
  41d6ce:	mov    rax,QWORD PTR fs:0x28
  41d6d7:	cmp    rax,QWORD PTR [rsp+0x8]
  41d6dc:	jne    41d759 <isspace@plt+0x19e49>
  41d6de:	mov    rax,rbx
  41d6e1:	add    rsp,0x10
  41d6e5:	pop    rbx
  41d6e6:	pop    r14
  41d6e8:	pop    r15
  41d6ea:	ret    
  41d6eb:	mov    al,0x1
  41d6ed:	mov    r8d,DWORD PTR [rdi+0x48]
  41d6f1:	mov    ecx,DWORD PTR [r11+0x20]
  41d6f5:	cmp    r8d,ecx
  41d6f8:	cmovg  r8d,ecx
  41d6fc:	xor    edx,edx
  41d6fe:	test   al,al
  41d700:	je     41d6bd <isspace@plt+0x19dad>
  41d702:	test   r8d,r8d
  41d705:	jle    41d6bd <isspace@plt+0x19dad>
  41d707:	movsxd rcx,r8d
  41d70a:	lea    r10,[r11+0x68]
  41d70e:	xor    edx,edx
  41d710:	movsxd rsi,edx
  41d713:	mov    rax,rsi
  41d716:	shl    rax,0x4
  41d71a:	lea    rax,[rax+rax*2]
  41d71e:	add    r15,QWORD PTR [r11+rax*1+0x38]
  41d723:	add    rsi,0x1
  41d727:	add    rax,r10
  41d72a:	nop    WORD PTR [rax+rax*1+0x0]
  41d730:	mov    rdx,rsi
  41d733:	cmp    rsi,rcx
  41d736:	jge    41d746 <isspace@plt+0x19e36>
  41d738:	lea    rsi,[rdx+0x1]
  41d73c:	cmp    QWORD PTR [rax],0x0
  41d740:	lea    rax,[rax+0x30]
  41d744:	je     41d730 <isspace@plt+0x19e20>
  41d746:	cmp    r15,rbx
  41d749:	jae    41d6bd <isspace@plt+0x19dad>
  41d74f:	cmp    r8d,edx
  41d752:	jg     41d710 <isspace@plt+0x19e00>
  41d754:	jmp    41d6bd <isspace@plt+0x19dad>
  41d759:	call   403280 <__stack_chk_fail@plt>
  41d75e:	xchg   ax,ax
  41d760:	push   rbx
  41d761:	sub    rsp,0x10
  41d765:	mov    rbx,rdi
  41d768:	mov    rax,QWORD PTR fs:0x28
  41d771:	mov    QWORD PTR [rsp+0x8],rax
  41d776:	mov    esi,DWORD PTR [rdi+0x4c]
  41d779:	call   41d7b0 <isspace@plt+0x19ea0>
  41d77e:	mov    rdi,QWORD PTR [rbx+0x98]
  41d785:	call   41d570 <isspace@plt+0x19c60>
  41d78a:	mov    rcx,QWORD PTR fs:0x28
  41d793:	cmp    rcx,QWORD PTR [rsp+0x8]
  41d798:	jne    41d7a0 <isspace@plt+0x19e90>
  41d79a:	add    rsp,0x10
  41d79e:	pop    rbx
  41d79f:	ret    
  41d7a0:	call   403280 <__stack_chk_fail@plt>
  41d7a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d7af:	nop
  41d7b0:	push   rbp
  41d7b1:	push   r15
  41d7b3:	push   r14
  41d7b5:	push   rbx
  41d7b6:	sub    rsp,0x38
  41d7ba:	mov    ebp,esi
  41d7bc:	mov    rbx,rdi
  41d7bf:	mov    rax,QWORD PTR fs:0x28
  41d7c8:	mov    QWORD PTR [rsp+0x30],rax
  41d7cd:	mov    r14,QWORD PTR [rdi+0x98]
  41d7d4:	mov    rdi,QWORD PTR [rdi]
  41d7d7:	mov    r15,QWORD PTR [rbx+0x58]
  41d7db:	call   410a90 <isspace@plt+0xd180>
  41d7e0:	cmp    r15,rax
  41d7e3:	jae    41d81b <isspace@plt+0x19f0b>
  41d7e5:	cmp    DWORD PTR [rbx+0x4c],ebp
  41d7e8:	jle    41d83e <isspace@plt+0x19f2e>
  41d7ea:	test   ebp,ebp
  41d7ec:	jle    41d846 <isspace@plt+0x19f36>
  41d7ee:	mov    rax,QWORD PTR [rbx+0x80]
  41d7f5:	test   rax,rax
  41d7f8:	je     41d846 <isspace@plt+0x19f36>
  41d7fa:	mov    rcx,QWORD PTR [rbx+0x50]
  41d7fe:	xchg   ax,ax
  41d800:	add    rcx,QWORD PTR [rax+0x10]
  41d804:	mov    QWORD PTR [rbx+0x50],rcx
  41d808:	cmp    ebp,0x2
  41d80b:	jl     41d846 <isspace@plt+0x19f36>
  41d80d:	add    ebp,0xffffffff
  41d810:	mov    rax,QWORD PTR [rax+0x8]
  41d814:	test   rax,rax
  41d817:	jne    41d800 <isspace@plt+0x19ef0>
  41d819:	jmp    41d846 <isspace@plt+0x19f36>
  41d81b:	mov    rdi,QWORD PTR [rbx]
  41d81e:	call   410a90 <isspace@plt+0xd180>
  41d823:	mov    rdi,QWORD PTR [rbx+0x98]
  41d82a:	mov    rsi,rax
  41d82d:	call   41ad90 <isspace@plt+0x17480>
  41d832:	add    r14,0x18
  41d836:	mov    r15,r14
  41d839:	jmp    41db3e <isspace@plt+0x1a22e>
  41d83e:	mov    rax,QWORD PTR [rbx+0x58]
  41d842:	mov    QWORD PTR [rbx+0x50],rax
  41d846:	mov    rdi,rbx
  41d849:	call   41a4a0 <isspace@plt+0x16b90>
  41d84e:	mov    rcx,QWORD PTR [r14+0x30]
  41d852:	mov    rax,QWORD PTR [rbx+0x80]
  41d859:	cmp    rcx,rax
  41d85c:	cmova  rax,rcx
  41d860:	mov    edx,DWORD PTR [r14+0x24]
  41d864:	mov    r8,QWORD PTR [r14+0x40]
  41d868:	mov    rbx,QWORD PTR [r8+0x50]
  41d86c:	mov    rcx,QWORD PTR [r8+0x80]
  41d873:	xor    esi,esi
  41d875:	test   rcx,rcx
  41d878:	je     41d8a5 <isspace@plt+0x19f95>
  41d87a:	cmp    rcx,rax
  41d87d:	je     41d8a5 <isspace@plt+0x19f95>
  41d87f:	xor    esi,esi
  41d881:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d88b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d890:	add    rbx,QWORD PTR [rcx+0x10]
  41d894:	add    esi,0x1
  41d897:	mov    rcx,QWORD PTR [rcx+0x8]
  41d89b:	test   rcx,rcx
  41d89e:	je     41d8a5 <isspace@plt+0x19f95>
  41d8a0:	cmp    rcx,rax
  41d8a3:	jne    41d890 <isspace@plt+0x19f80>
  41d8a5:	test   edx,edx
  41d8a7:	jle    41da4d <isspace@plt+0x1a13d>
  41d8ad:	movsxd rcx,edx
  41d8b0:	lea    rdi,[rcx+rcx*2]
  41d8b4:	lea    rdx,[rcx+0x1]
  41d8b8:	shl    rdi,0x4
  41d8bc:	lea    rcx,[rax+rdi*1]
  41d8c0:	add    rcx,0x38
  41d8c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d8ce:	xchg   ax,ax
  41d8d0:	cmp    QWORD PTR [rcx],0x0
  41d8d4:	jne    41d8e4 <isspace@plt+0x19fd4>
  41d8d6:	add    rdx,0xffffffffffffffff
  41d8da:	add    rcx,0xffffffffffffffd0
  41d8de:	cmp    rdx,0x1
  41d8e2:	jg     41d8d0 <isspace@plt+0x19fc0>
  41d8e4:	add    edx,0xffffffff
  41d8e7:	test   edx,edx
  41d8e9:	jle    41da4d <isspace@plt+0x1a13d>
  41d8ef:	mov    edi,edx
  41d8f1:	cmp    edx,0x11
  41d8f4:	jae    41d8fd <isspace@plt+0x19fed>
  41d8f6:	xor    ecx,ecx
  41d8f8:	jmp    41da27 <isspace@plt+0x1a117>
  41d8fd:	mov    ecx,edi
  41d8ff:	and    ecx,0xf
  41d902:	test   rcx,rcx
  41d905:	mov    ebp,0x10
  41d90a:	cmovne rbp,rcx
  41d90e:	mov    rcx,rdi
  41d911:	sub    rcx,rbp
  41d914:	vmovq  xmm0,rbx
  41d919:	vpxor  xmm1,xmm1,xmm1
  41d91d:	vmovdqa ymm2,YMMWORD PTR [rip+0x142bb]        # 431be0 <isspace@plt+0x2e2d0>
  41d925:	vpbroadcastq ymm3,QWORD PTR [rip+0x142d2]        # 431c00 <isspace@plt+0x2e2f0>
  41d92e:	vpbroadcastq ymm4,QWORD PTR [rip+0x142d1]        # 431c08 <isspace@plt+0x2e2f8>
  41d937:	vmovdqu YMMWORD PTR [rsp],ymm4
  41d93c:	vpbroadcastq ymm5,QWORD PTR [rip+0x142cb]        # 431c10 <isspace@plt+0x2e300>
  41d945:	vpbroadcastq ymm6,QWORD PTR [rip+0x142ca]        # 431c18 <isspace@plt+0x2e308>
  41d94e:	vpbroadcastq ymm7,QWORD PTR [rip+0x142c9]        # 431c20 <isspace@plt+0x2e310>
  41d957:	vpbroadcastq ymm8,QWORD PTR [rip+0x142c8]        # 431c28 <isspace@plt+0x2e318>
  41d960:	mov    rbp,rcx
  41d963:	vpxor  xmm9,xmm9,xmm9
  41d968:	vpxor  xmm10,xmm10,xmm10
  41d96d:	nop    DWORD PTR [rax]
  41d970:	vpmuludq ymm11,ymm2,ymm3
  41d974:	vpsrlq ymm12,ymm2,0x20
  41d979:	vpmuludq ymm12,ymm12,ymm3
  41d97d:	vpsllq ymm12,ymm12,0x20
  41d983:	vmovq  xmm4,rax
  41d988:	vpbroadcastq ymm4,xmm4
  41d98d:	vpaddq ymm4,ymm11,ymm4
  41d991:	vpaddq ymm4,ymm12,ymm4
  41d995:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41d99a:	vpaddq ymm12,ymm4,ymm6
  41d99e:	vpaddq ymm14,ymm4,ymm7
  41d9a2:	vpaddq ymm4,ymm4,ymm8
  41d9a7:	vpcmpeqd ymm15,ymm15,ymm15
  41d9ac:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41d9b6:	vpcmpeqd ymm11,ymm11,ymm11
  41d9bb:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41d9c5:	vpcmpeqd ymm11,ymm11,ymm11
  41d9ca:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41d9d4:	vpcmpeqd ymm11,ymm11,ymm11
  41d9d9:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41d9e3:	vpaddq ymm0,ymm13,ymm0
  41d9e7:	vpaddq ymm1,ymm15,ymm1
  41d9eb:	vpaddq ymm9,ymm12,ymm9
  41d9f0:	vpaddq ymm10,ymm14,ymm10
  41d9f5:	vpaddq ymm2,ymm2,ymm5
  41d9f9:	add    rbp,0xfffffffffffffff0
  41d9fd:	jne    41d970 <isspace@plt+0x1a060>
  41da03:	vpaddq ymm0,ymm1,ymm0
  41da07:	vpaddq ymm0,ymm9,ymm0
  41da0b:	vpaddq ymm0,ymm10,ymm0
  41da0f:	vextracti128 xmm1,ymm0,0x1
  41da15:	vpaddq ymm0,ymm0,ymm1
  41da19:	vpshufd xmm1,xmm0,0x4e
  41da1e:	vpaddq ymm0,ymm0,ymm1
  41da22:	vmovq  rbx,xmm0
  41da27:	sub    rdi,rcx
  41da2a:	lea    rcx,[rcx+rcx*2]
  41da2e:	shl    rcx,0x4
  41da32:	add    rcx,rax
  41da35:	add    rcx,0x38
  41da39:	nop    DWORD PTR [rax+0x0]
  41da40:	add    rbx,QWORD PTR [rcx]
  41da43:	add    rcx,0x30
  41da47:	add    rdi,0xffffffffffffffff
  41da4b:	jne    41da40 <isspace@plt+0x1a130>
  41da4d:	mov    DWORD PTR [r14+0x24],edx
  41da51:	mov    DWORD PTR [r14+0x20],esi
  41da55:	mov    QWORD PTR [r14+0x30],rax
  41da59:	mov    rdi,QWORD PTR [r8]
  41da5c:	mov    rsi,rbx
  41da5f:	vzeroupper 
  41da62:	call   410fc0 <isspace@plt+0xd6b0>
  41da67:	mov    QWORD PTR [r14],rax
  41da6a:	cmp    BYTE PTR [r14+0x10],0x0
  41da6f:	je     41dacc <isspace@plt+0x1a1bc>
  41da71:	cmp    QWORD PTR [r14+0x18],rbx
  41da75:	je     41da7f <isspace@plt+0x1a16f>
  41da77:	mov    DWORD PTR [r14+0x28],0x0
  41da7f:	lea    r15,[r14+0x18]
  41da83:	mov    QWORD PTR [r14+0x18],rbx
  41da87:	mov    rdi,QWORD PTR [r14+0x40]
  41da8b:	mov    rdx,QWORD PTR [rdi+0x50]
  41da8f:	cmp    rdx,rbx
  41da92:	ja     41da9a <isspace@plt+0x1a18a>
  41da94:	cmp    QWORD PTR [rdi+0x58],rbx
  41da98:	jae    41dad8 <isspace@plt+0x1a1c8>
  41da9a:	mov    QWORD PTR [r14+0x30],0x0
  41daa2:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41daaa:	cmp    QWORD PTR [rdi+0x98],r14
  41dab1:	jne    41db3e <isspace@plt+0x1a22e>
  41dab7:	mov    rax,QWORD PTR [rdi+0x80]
  41dabe:	mov    QWORD PTR [r14+0x30],rax
  41dac2:	mov    QWORD PTR [r14+0x20],0x0
  41daca:	jmp    41db3e <isspace@plt+0x1a22e>
  41dacc:	mov    QWORD PTR [r14+0x8],rax
  41dad0:	cmp    QWORD PTR [r14+0x18],rbx
  41dad4:	jne    41da77 <isspace@plt+0x1a167>
  41dad6:	jmp    41da7f <isspace@plt+0x1a16f>
  41dad8:	mov    r11,QWORD PTR [rdi+0x80]
  41dadf:	test   r11,r11
  41dae2:	je     41db1c <isspace@plt+0x1a20c>
  41dae4:	mov    rsi,QWORD PTR [rdi+0x88]
  41daeb:	xor    r10d,r10d
  41daee:	xchg   ax,ax
  41daf0:	cmp    rdx,rbx
  41daf3:	setb   cl
  41daf6:	cmp    r11,rsi
  41daf9:	je     41db62 <isspace@plt+0x1a252>
  41dafb:	cmp    rdx,rbx
  41dafe:	jae    41db62 <isspace@plt+0x1a252>
  41db00:	mov    rax,QWORD PTR [r11+0x10]
  41db04:	add    rax,rdx
  41db07:	cmp    rax,rbx
  41db0a:	ja     41db60 <isspace@plt+0x1a250>
  41db0c:	add    r10d,0x1
  41db10:	mov    r11,QWORD PTR [r11+0x8]
  41db14:	mov    rdx,rax
  41db17:	test   r11,r11
  41db1a:	jne    41daf0 <isspace@plt+0x1a1e0>
  41db1c:	mov    r11,QWORD PTR [rdi+0x90]
  41db23:	mov    r10d,DWORD PTR [rdi+0x4c]
  41db27:	add    r10d,0xffffffff
  41db2b:	xor    eax,eax
  41db2d:	mov    QWORD PTR [r14+0x30],r11
  41db31:	mov    DWORD PTR [r14+0x20],r10d
  41db35:	mov    DWORD PTR [r14+0x24],eax
  41db39:	call   41a4a0 <isspace@plt+0x16b90>
  41db3e:	mov    rax,QWORD PTR [r15]
  41db41:	mov    rcx,QWORD PTR fs:0x28
  41db4a:	cmp    rcx,QWORD PTR [rsp+0x30]
  41db4f:	jne    41dbd9 <isspace@plt+0x1a2c9>
  41db55:	add    rsp,0x38
  41db59:	pop    rbx
  41db5a:	pop    r14
  41db5c:	pop    r15
  41db5e:	pop    rbp
  41db5f:	ret    
  41db60:	mov    cl,0x1
  41db62:	mov    r8d,DWORD PTR [rdi+0x48]
  41db66:	mov    eax,DWORD PTR [r11+0x20]
  41db6a:	cmp    r8d,eax
  41db6d:	cmovg  r8d,eax
  41db71:	xor    eax,eax
  41db73:	test   cl,cl
  41db75:	je     41db2d <isspace@plt+0x1a21d>
  41db77:	test   r8d,r8d
  41db7a:	jle    41db2d <isspace@plt+0x1a21d>
  41db7c:	movsxd rbp,r8d
  41db7f:	lea    r9,[r11+0x68]
  41db83:	xor    eax,eax
  41db85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41db8f:	nop
  41db90:	movsxd rsi,eax
  41db93:	mov    rax,rsi
  41db96:	shl    rax,0x4
  41db9a:	lea    rcx,[rax+rax*2]
  41db9e:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41dba3:	add    rsi,0x1
  41dba7:	add    rcx,r9
  41dbaa:	nop    WORD PTR [rax+rax*1+0x0]
  41dbb0:	mov    rax,rsi
  41dbb3:	cmp    rsi,rbp
  41dbb6:	jge    41dbc6 <isspace@plt+0x1a2b6>
  41dbb8:	lea    rsi,[rax+0x1]
  41dbbc:	cmp    QWORD PTR [rcx],0x0
  41dbc0:	lea    rcx,[rcx+0x30]
  41dbc4:	je     41dbb0 <isspace@plt+0x1a2a0>
  41dbc6:	cmp    rdx,rbx
  41dbc9:	jae    41db2d <isspace@plt+0x1a21d>
  41dbcf:	cmp    r8d,eax
  41dbd2:	jg     41db90 <isspace@plt+0x1a280>
  41dbd4:	jmp    41db2d <isspace@plt+0x1a21d>
  41dbd9:	call   403280 <__stack_chk_fail@plt>
  41dbde:	xchg   ax,ax
  41dbe0:	push   r14
  41dbe2:	push   rbx
  41dbe3:	push   rax
  41dbe4:	mov    rax,QWORD PTR fs:0x28
  41dbed:	mov    QWORD PTR [rsp],rax
  41dbf1:	mov    rsi,QWORD PTR [rdi+0x50]
  41dbf5:	mov    r14,QWORD PTR [rdi+0x98]
  41dbfc:	test   rsi,rsi
  41dbff:	je     41dc22 <isspace@plt+0x1a312>
  41dc01:	mov    rbx,rdi
  41dc04:	add    rsi,0xffffffffffffffff
  41dc08:	mov    rdi,r14
  41dc0b:	call   41ad90 <isspace@plt+0x17480>
  41dc10:	mov    rdi,rbx
  41dc13:	call   41bce0 <isspace@plt+0x183d0>
  41dc18:	mov    rdi,r14
  41dc1b:	call   41d570 <isspace@plt+0x19c60>
  41dc20:	jmp    41dc2c <isspace@plt+0x1a31c>
  41dc22:	xor    esi,esi
  41dc24:	mov    rdi,r14
  41dc27:	call   41ad90 <isspace@plt+0x17480>
  41dc2c:	mov    rax,QWORD PTR [r14+0x18]
  41dc30:	mov    rcx,QWORD PTR fs:0x28
  41dc39:	cmp    rcx,QWORD PTR [rsp]
  41dc3d:	jne    41dc47 <isspace@plt+0x1a337>
  41dc3f:	add    rsp,0x8
  41dc43:	pop    rbx
  41dc44:	pop    r14
  41dc46:	ret    
  41dc47:	call   403280 <__stack_chk_fail@plt>
  41dc4c:	nop    DWORD PTR [rax+0x0]
  41dc50:	push   r15
  41dc52:	push   r14
  41dc54:	push   rbx
  41dc55:	sub    rsp,0x10
  41dc59:	mov    rbx,rdi
  41dc5c:	mov    rax,QWORD PTR fs:0x28
  41dc65:	mov    QWORD PTR [rsp+0x8],rax
  41dc6a:	mov    r14,QWORD PTR [rdi+0x58]
  41dc6e:	mov    eax,DWORD PTR [rdi+0x4c]
  41dc71:	mov    esi,eax
  41dc73:	shr    esi,0x1f
  41dc76:	add    esi,eax
  41dc78:	sar    esi,1
  41dc7a:	call   41d7b0 <isspace@plt+0x19ea0>
  41dc7f:	mov    r15,rax
  41dc82:	mov    rdi,QWORD PTR [rbx]
  41dc85:	call   410a90 <isspace@plt+0xd180>
  41dc8a:	cmp    r15,rax
  41dc8d:	jae    41dc9e <isspace@plt+0x1a38e>
  41dc8f:	mov    rdi,QWORD PTR [rbx+0x98]
  41dc96:	mov    rsi,r14
  41dc99:	call   41ad90 <isspace@plt+0x17480>
  41dc9e:	mov    rax,QWORD PTR [rbx+0x98]
  41dca5:	mov    rax,QWORD PTR [rax+0x18]
  41dca9:	mov    rcx,QWORD PTR fs:0x28
  41dcb2:	cmp    rcx,QWORD PTR [rsp+0x8]
  41dcb7:	jne    41dcc3 <isspace@plt+0x1a3b3>
  41dcb9:	add    rsp,0x10
  41dcbd:	pop    rbx
  41dcbe:	pop    r14
  41dcc0:	pop    r15
  41dcc2:	ret    
  41dcc3:	call   403280 <__stack_chk_fail@plt>
  41dcc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41dcd0:	push   rbp
  41dcd1:	push   r15
  41dcd3:	push   r14
  41dcd5:	push   r12
  41dcd7:	push   rbx
  41dcd8:	sub    rsp,0x30
  41dcdc:	mov    r14,rdi
  41dcdf:	mov    rax,QWORD PTR fs:0x28
  41dce8:	mov    QWORD PTR [rsp+0x28],rax
  41dced:	mov    rbx,QWORD PTR [rdi+0x40]
  41dcf1:	mov    r12d,DWORD PTR [rdi+0x28]
  41dcf5:	test   r12d,r12d
  41dcf8:	jne    41dcfe <isspace@plt+0x1a3ee>
  41dcfa:	mov    r12d,DWORD PTR [r14+0x24]
  41dcfe:	mov    rdi,QWORD PTR [rbx]
  41dd01:	mov    rsi,QWORD PTR [r14+0x18]
  41dd05:	call   413db0 <isspace@plt+0x104a0>
  41dd0a:	mov    r15,rax
  41dd0d:	cmp    QWORD PTR [rbx+0x98],r14
  41dd14:	je     41dd1e <isspace@plt+0x1a40e>
  41dd16:	mov    rdi,r14
  41dd19:	mov    rsi,r15
  41dd1c:	jmp    41dd89 <isspace@plt+0x1a479>
  41dd1e:	mov    rbp,QWORD PTR [rbx+0x50]
  41dd22:	mov    rdi,r14
  41dd25:	mov    rsi,r15
  41dd28:	call   41ad90 <isspace@plt+0x17480>
  41dd2d:	cmp    r15,rbp
  41dd30:	jae    41dd8e <isspace@plt+0x1a47e>
  41dd32:	mov    rax,QWORD PTR [rbx+0x80]
  41dd39:	test   rax,rax
  41dd3c:	je     41dd76 <isspace@plt+0x1a466>
  41dd3e:	mov    rcx,QWORD PTR [rbx+0x98]
  41dd45:	mov    rcx,QWORD PTR [rcx+0x30]
  41dd49:	cmp    rax,rcx
  41dd4c:	je     41dd76 <isspace@plt+0x1a466>
  41dd4e:	mov    rdx,QWORD PTR [rbx+0x50]
  41dd52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dd5c:	nop    DWORD PTR [rax+0x0]
  41dd60:	add    rdx,QWORD PTR [rax+0x10]
  41dd64:	mov    QWORD PTR [rbx+0x50],rdx
  41dd68:	mov    rax,QWORD PTR [rax+0x8]
  41dd6c:	test   rax,rax
  41dd6f:	je     41dd76 <isspace@plt+0x1a466>
  41dd71:	cmp    rax,rcx
  41dd74:	jne    41dd60 <isspace@plt+0x1a450>
  41dd76:	mov    rdi,rbx
  41dd79:	call   41a4a0 <isspace@plt+0x16b90>
  41dd7e:	mov    rdi,QWORD PTR [rbx+0x98]
  41dd85:	mov    rsi,QWORD PTR [rdi+0x18]
  41dd89:	call   41ad90 <isspace@plt+0x17480>
  41dd8e:	mov    rdx,QWORD PTR [r14+0x30]
  41dd92:	test   rdx,rdx
  41dd95:	je     41e07e <isspace@plt+0x1a76e>
  41dd9b:	mov    r8,QWORD PTR [r14+0x40]
  41dd9f:	mov    rbx,QWORD PTR [r8+0x50]
  41dda3:	mov    rax,QWORD PTR [r8+0x80]
  41ddaa:	xor    ecx,ecx
  41ddac:	test   rax,rax
  41ddaf:	je     41ddd5 <isspace@plt+0x1a4c5>
  41ddb1:	cmp    rax,rdx
  41ddb4:	je     41ddd5 <isspace@plt+0x1a4c5>
  41ddb6:	xor    ecx,ecx
  41ddb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ddc0:	add    rbx,QWORD PTR [rax+0x10]
  41ddc4:	add    ecx,0x1
  41ddc7:	mov    rax,QWORD PTR [rax+0x8]
  41ddcb:	test   rax,rax
  41ddce:	je     41ddd5 <isspace@plt+0x1a4c5>
  41ddd0:	cmp    rax,rdx
  41ddd3:	jne    41ddc0 <isspace@plt+0x1a4b0>
  41ddd5:	test   r12d,r12d
  41ddd8:	jle    41de2d <isspace@plt+0x1a51d>
  41ddda:	movsxd rax,r12d
  41dddd:	lea    rdi,[rax+rax*2]
  41dde1:	lea    rsi,[rax+0x1]
  41dde5:	shl    rdi,0x4
  41dde9:	lea    rax,[rdx+rdi*1]
  41dded:	add    rax,0x38
  41ddf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ddfb:	nop    DWORD PTR [rax+rax*1+0x0]
  41de00:	cmp    QWORD PTR [rax],0x0
  41de04:	jne    41de14 <isspace@plt+0x1a504>
  41de06:	add    rsi,0xffffffffffffffff
  41de0a:	add    rax,0xffffffffffffffd0
  41de0e:	cmp    rsi,0x1
  41de12:	jg     41de00 <isspace@plt+0x1a4f0>
  41de14:	add    esi,0xffffffff
  41de17:	test   esi,esi
  41de19:	jle    41df8d <isspace@plt+0x1a67d>
  41de1f:	mov    edi,esi
  41de21:	cmp    esi,0x11
  41de24:	jae    41de35 <isspace@plt+0x1a525>
  41de26:	xor    eax,eax
  41de28:	jmp    41df67 <isspace@plt+0x1a657>
  41de2d:	mov    esi,r12d
  41de30:	jmp    41df8d <isspace@plt+0x1a67d>
  41de35:	mov    eax,edi
  41de37:	and    eax,0xf
  41de3a:	test   rax,rax
  41de3d:	mov    ebp,0x10
  41de42:	cmovne rbp,rax
  41de46:	mov    rax,rdi
  41de49:	sub    rax,rbp
  41de4c:	vmovq  xmm0,rbx
  41de51:	vpxor  xmm1,xmm1,xmm1
  41de55:	vmovdqa ymm2,YMMWORD PTR [rip+0x13d83]        # 431be0 <isspace@plt+0x2e2d0>
  41de5d:	vpbroadcastq ymm3,QWORD PTR [rip+0x13d9a]        # 431c00 <isspace@plt+0x2e2f0>
  41de66:	vpbroadcastq ymm4,QWORD PTR [rip+0x13d99]        # 431c08 <isspace@plt+0x2e2f8>
  41de6f:	vmovdqu YMMWORD PTR [rsp],ymm4
  41de74:	vpbroadcastq ymm5,QWORD PTR [rip+0x13d93]        # 431c10 <isspace@plt+0x2e300>
  41de7d:	vpbroadcastq ymm6,QWORD PTR [rip+0x13d92]        # 431c18 <isspace@plt+0x2e308>
  41de86:	vpbroadcastq ymm7,QWORD PTR [rip+0x13d91]        # 431c20 <isspace@plt+0x2e310>
  41de8f:	vpbroadcastq ymm8,QWORD PTR [rip+0x13d90]        # 431c28 <isspace@plt+0x2e318>
  41de98:	mov    rbp,rax
  41de9b:	vpxor  xmm9,xmm9,xmm9
  41dea0:	vpxor  xmm10,xmm10,xmm10
  41dea5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41deaf:	nop
  41deb0:	vpmuludq ymm11,ymm2,ymm3
  41deb4:	vpsrlq ymm12,ymm2,0x20
  41deb9:	vpmuludq ymm12,ymm12,ymm3
  41debd:	vpsllq ymm12,ymm12,0x20
  41dec3:	vmovq  xmm4,rdx
  41dec8:	vpbroadcastq ymm4,xmm4
  41decd:	vpaddq ymm4,ymm11,ymm4
  41ded1:	vpaddq ymm4,ymm12,ymm4
  41ded5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41deda:	vpaddq ymm12,ymm4,ymm6
  41dede:	vpaddq ymm14,ymm4,ymm7
  41dee2:	vpaddq ymm4,ymm4,ymm8
  41dee7:	vpcmpeqd ymm15,ymm15,ymm15
  41deec:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41def6:	vpcmpeqd ymm11,ymm11,ymm11
  41defb:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41df05:	vpcmpeqd ymm11,ymm11,ymm11
  41df0a:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41df14:	vpcmpeqd ymm11,ymm11,ymm11
  41df19:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41df23:	vpaddq ymm0,ymm13,ymm0
  41df27:	vpaddq ymm1,ymm15,ymm1
  41df2b:	vpaddq ymm9,ymm12,ymm9
  41df30:	vpaddq ymm10,ymm14,ymm10
  41df35:	vpaddq ymm2,ymm2,ymm5
  41df39:	add    rbp,0xfffffffffffffff0
  41df3d:	jne    41deb0 <isspace@plt+0x1a5a0>
  41df43:	vpaddq ymm0,ymm1,ymm0
  41df47:	vpaddq ymm0,ymm9,ymm0
  41df4b:	vpaddq ymm0,ymm10,ymm0
  41df4f:	vextracti128 xmm1,ymm0,0x1
  41df55:	vpaddq ymm0,ymm0,ymm1
  41df59:	vpshufd xmm1,xmm0,0x4e
  41df5e:	vpaddq ymm0,ymm0,ymm1
  41df62:	vmovq  rbx,xmm0
  41df67:	sub    rdi,rax
  41df6a:	lea    rax,[rax+rax*2]
  41df6e:	shl    rax,0x4
  41df72:	add    rax,rdx
  41df75:	add    rax,0x38
  41df79:	nop    DWORD PTR [rax+0x0]
  41df80:	add    rbx,QWORD PTR [rax]
  41df83:	add    rax,0x30
  41df87:	add    rdi,0xffffffffffffffff
  41df8b:	jne    41df80 <isspace@plt+0x1a670>
  41df8d:	mov    DWORD PTR [r14+0x24],esi
  41df91:	mov    DWORD PTR [r14+0x20],ecx
  41df95:	mov    rdi,QWORD PTR [r8]
  41df98:	mov    rsi,rbx
  41df9b:	vzeroupper 
  41df9e:	call   410fc0 <isspace@plt+0xd6b0>
  41dfa3:	mov    QWORD PTR [r14],rax
  41dfa6:	cmp    BYTE PTR [r14+0x10],0x0
  41dfab:	je     41e004 <isspace@plt+0x1a6f4>
  41dfad:	cmp    QWORD PTR [r14+0x18],rbx
  41dfb1:	je     41dfbb <isspace@plt+0x1a6ab>
  41dfb3:	mov    DWORD PTR [r14+0x28],0x0
  41dfbb:	mov    QWORD PTR [r14+0x18],rbx
  41dfbf:	mov    rdi,QWORD PTR [r14+0x40]
  41dfc3:	mov    rdx,QWORD PTR [rdi+0x50]
  41dfc7:	cmp    rdx,rbx
  41dfca:	ja     41dfd2 <isspace@plt+0x1a6c2>
  41dfcc:	cmp    QWORD PTR [rdi+0x58],rbx
  41dfd0:	jae    41e010 <isspace@plt+0x1a700>
  41dfd2:	mov    QWORD PTR [r14+0x30],0x0
  41dfda:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41dfe2:	cmp    QWORD PTR [rdi+0x98],r14
  41dfe9:	jne    41e07e <isspace@plt+0x1a76e>
  41dfef:	mov    rax,QWORD PTR [rdi+0x80]
  41dff6:	mov    QWORD PTR [r14+0x30],rax
  41dffa:	mov    QWORD PTR [r14+0x20],0x0
  41e002:	jmp    41e07e <isspace@plt+0x1a76e>
  41e004:	mov    QWORD PTR [r14+0x8],rax
  41e008:	cmp    QWORD PTR [r14+0x18],rbx
  41e00c:	jne    41dfb3 <isspace@plt+0x1a6a3>
  41e00e:	jmp    41dfbb <isspace@plt+0x1a6ab>
  41e010:	mov    r11,QWORD PTR [rdi+0x80]
  41e017:	test   r11,r11
  41e01a:	je     41e05c <isspace@plt+0x1a74c>
  41e01c:	mov    rsi,QWORD PTR [rdi+0x88]
  41e023:	xor    r10d,r10d
  41e026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e030:	cmp    rdx,rbx
  41e033:	setb   cl
  41e036:	cmp    r11,rsi
  41e039:	je     41e0a9 <isspace@plt+0x1a799>
  41e03b:	cmp    rdx,rbx
  41e03e:	jae    41e0a9 <isspace@plt+0x1a799>
  41e040:	mov    rax,QWORD PTR [r11+0x10]
  41e044:	add    rax,rdx
  41e047:	cmp    rax,rbx
  41e04a:	ja     41e0a7 <isspace@plt+0x1a797>
  41e04c:	add    r10d,0x1
  41e050:	mov    r11,QWORD PTR [r11+0x8]
  41e054:	mov    rdx,rax
  41e057:	test   r11,r11
  41e05a:	jne    41e030 <isspace@plt+0x1a720>
  41e05c:	mov    r11,QWORD PTR [rdi+0x90]
  41e063:	mov    r10d,DWORD PTR [rdi+0x4c]
  41e067:	add    r10d,0xffffffff
  41e06b:	xor    eax,eax
  41e06d:	mov    QWORD PTR [r14+0x30],r11
  41e071:	mov    DWORD PTR [r14+0x20],r10d
  41e075:	mov    DWORD PTR [r14+0x24],eax
  41e079:	call   41a4a0 <isspace@plt+0x16b90>
  41e07e:	mov    DWORD PTR [r14+0x28],r12d
  41e082:	mov    rax,QWORD PTR [r14+0x18]
  41e086:	mov    rcx,QWORD PTR fs:0x28
  41e08f:	cmp    rcx,QWORD PTR [rsp+0x28]
  41e094:	jne    41e119 <isspace@plt+0x1a809>
  41e09a:	add    rsp,0x30
  41e09e:	pop    rbx
  41e09f:	pop    r12
  41e0a1:	pop    r14
  41e0a3:	pop    r15
  41e0a5:	pop    rbp
  41e0a6:	ret    
  41e0a7:	mov    cl,0x1
  41e0a9:	mov    r8d,DWORD PTR [rdi+0x48]
  41e0ad:	mov    eax,DWORD PTR [r11+0x20]
  41e0b1:	cmp    r8d,eax
  41e0b4:	cmovg  r8d,eax
  41e0b8:	xor    eax,eax
  41e0ba:	test   cl,cl
  41e0bc:	je     41e06d <isspace@plt+0x1a75d>
  41e0be:	test   r8d,r8d
  41e0c1:	jle    41e06d <isspace@plt+0x1a75d>
  41e0c3:	movsxd rbp,r8d
  41e0c6:	lea    r9,[r11+0x68]
  41e0ca:	xor    eax,eax
  41e0cc:	nop    DWORD PTR [rax+0x0]
  41e0d0:	movsxd rsi,eax
  41e0d3:	mov    rax,rsi
  41e0d6:	shl    rax,0x4
  41e0da:	lea    rcx,[rax+rax*2]
  41e0de:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41e0e3:	add    rsi,0x1
  41e0e7:	add    rcx,r9
  41e0ea:	nop    WORD PTR [rax+rax*1+0x0]
  41e0f0:	mov    rax,rsi
  41e0f3:	cmp    rsi,rbp
  41e0f6:	jge    41e106 <isspace@plt+0x1a7f6>
  41e0f8:	lea    rsi,[rax+0x1]
  41e0fc:	cmp    QWORD PTR [rcx],0x0
  41e100:	lea    rcx,[rcx+0x30]
  41e104:	je     41e0f0 <isspace@plt+0x1a7e0>
  41e106:	cmp    rdx,rbx
  41e109:	jae    41e06d <isspace@plt+0x1a75d>
  41e10f:	cmp    r8d,eax
  41e112:	jg     41e0d0 <isspace@plt+0x1a7c0>
  41e114:	jmp    41e06d <isspace@plt+0x1a75d>
  41e119:	call   403280 <__stack_chk_fail@plt>
  41e11e:	xchg   ax,ax
  41e120:	push   rbp
  41e121:	push   r15
  41e123:	push   r14
  41e125:	push   r12
  41e127:	push   rbx
  41e128:	sub    rsp,0x30
  41e12c:	mov    r14,rdi
  41e12f:	mov    rax,QWORD PTR fs:0x28
  41e138:	mov    QWORD PTR [rsp+0x28],rax
  41e13d:	mov    rbx,QWORD PTR [rdi+0x40]
  41e141:	mov    r12d,DWORD PTR [rdi+0x28]
  41e145:	test   r12d,r12d
  41e148:	jne    41e14e <isspace@plt+0x1a83e>
  41e14a:	mov    r12d,DWORD PTR [r14+0x24]
  41e14e:	mov    rdi,QWORD PTR [rbx]
  41e151:	mov    rsi,QWORD PTR [r14+0x18]
  41e155:	call   413e30 <isspace@plt+0x10520>
  41e15a:	mov    r15,rax
  41e15d:	cmp    QWORD PTR [rbx+0x98],r14
  41e164:	je     41e173 <isspace@plt+0x1a863>
  41e166:	mov    rdi,r14
  41e169:	mov    rsi,r15
  41e16c:	call   41ad90 <isspace@plt+0x17480>
  41e171:	jmp    41e18f <isspace@plt+0x1a87f>
  41e173:	mov    rbp,QWORD PTR [rbx+0x58]
  41e177:	mov    rdi,r14
  41e17a:	mov    rsi,r15
  41e17d:	call   41ad90 <isspace@plt+0x17480>
  41e182:	cmp    r15,rbp
  41e185:	jbe    41e18f <isspace@plt+0x1a87f>
  41e187:	mov    rdi,rbx
  41e18a:	call   41c210 <isspace@plt+0x18900>
  41e18f:	mov    rdx,QWORD PTR [r14+0x30]
  41e193:	test   rdx,rdx
  41e196:	je     41e47e <isspace@plt+0x1ab6e>
  41e19c:	mov    r8,QWORD PTR [r14+0x40]
  41e1a0:	mov    rbx,QWORD PTR [r8+0x50]
  41e1a4:	mov    rax,QWORD PTR [r8+0x80]
  41e1ab:	xor    ecx,ecx
  41e1ad:	test   rax,rax
  41e1b0:	je     41e1d5 <isspace@plt+0x1a8c5>
  41e1b2:	cmp    rax,rdx
  41e1b5:	je     41e1d5 <isspace@plt+0x1a8c5>
  41e1b7:	xor    ecx,ecx
  41e1b9:	nop    DWORD PTR [rax+0x0]
  41e1c0:	add    rbx,QWORD PTR [rax+0x10]
  41e1c4:	add    ecx,0x1
  41e1c7:	mov    rax,QWORD PTR [rax+0x8]
  41e1cb:	test   rax,rax
  41e1ce:	je     41e1d5 <isspace@plt+0x1a8c5>
  41e1d0:	cmp    rax,rdx
  41e1d3:	jne    41e1c0 <isspace@plt+0x1a8b0>
  41e1d5:	test   r12d,r12d
  41e1d8:	jle    41e22d <isspace@plt+0x1a91d>
  41e1da:	movsxd rax,r12d
  41e1dd:	lea    rdi,[rax+rax*2]
  41e1e1:	lea    rsi,[rax+0x1]
  41e1e5:	shl    rdi,0x4
  41e1e9:	lea    rax,[rdx+rdi*1]
  41e1ed:	add    rax,0x38
  41e1f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e1fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41e200:	cmp    QWORD PTR [rax],0x0
  41e204:	jne    41e214 <isspace@plt+0x1a904>
  41e206:	add    rsi,0xffffffffffffffff
  41e20a:	add    rax,0xffffffffffffffd0
  41e20e:	cmp    rsi,0x1
  41e212:	jg     41e200 <isspace@plt+0x1a8f0>
  41e214:	add    esi,0xffffffff
  41e217:	test   esi,esi
  41e219:	jle    41e38d <isspace@plt+0x1aa7d>
  41e21f:	mov    edi,esi
  41e221:	cmp    esi,0x11
  41e224:	jae    41e235 <isspace@plt+0x1a925>
  41e226:	xor    eax,eax
  41e228:	jmp    41e367 <isspace@plt+0x1aa57>
  41e22d:	mov    esi,r12d
  41e230:	jmp    41e38d <isspace@plt+0x1aa7d>
  41e235:	mov    eax,edi
  41e237:	and    eax,0xf
  41e23a:	test   rax,rax
  41e23d:	mov    ebp,0x10
  41e242:	cmovne rbp,rax
  41e246:	mov    rax,rdi
  41e249:	sub    rax,rbp
  41e24c:	vmovq  xmm0,rbx
  41e251:	vpxor  xmm1,xmm1,xmm1
  41e255:	vmovdqa ymm2,YMMWORD PTR [rip+0x13983]        # 431be0 <isspace@plt+0x2e2d0>
  41e25d:	vpbroadcastq ymm3,QWORD PTR [rip+0x1399a]        # 431c00 <isspace@plt+0x2e2f0>
  41e266:	vpbroadcastq ymm4,QWORD PTR [rip+0x13999]        # 431c08 <isspace@plt+0x2e2f8>
  41e26f:	vmovdqu YMMWORD PTR [rsp],ymm4
  41e274:	vpbroadcastq ymm5,QWORD PTR [rip+0x13993]        # 431c10 <isspace@plt+0x2e300>
  41e27d:	vpbroadcastq ymm6,QWORD PTR [rip+0x13992]        # 431c18 <isspace@plt+0x2e308>
  41e286:	vpbroadcastq ymm7,QWORD PTR [rip+0x13991]        # 431c20 <isspace@plt+0x2e310>
  41e28f:	vpbroadcastq ymm8,QWORD PTR [rip+0x13990]        # 431c28 <isspace@plt+0x2e318>
  41e298:	mov    rbp,rax
  41e29b:	vpxor  xmm9,xmm9,xmm9
  41e2a0:	vpxor  xmm10,xmm10,xmm10
  41e2a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e2af:	nop
  41e2b0:	vpmuludq ymm11,ymm2,ymm3
  41e2b4:	vpsrlq ymm12,ymm2,0x20
  41e2b9:	vpmuludq ymm12,ymm12,ymm3
  41e2bd:	vpsllq ymm12,ymm12,0x20
  41e2c3:	vmovq  xmm4,rdx
  41e2c8:	vpbroadcastq ymm4,xmm4
  41e2cd:	vpaddq ymm4,ymm11,ymm4
  41e2d1:	vpaddq ymm4,ymm12,ymm4
  41e2d5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41e2da:	vpaddq ymm12,ymm4,ymm6
  41e2de:	vpaddq ymm14,ymm4,ymm7
  41e2e2:	vpaddq ymm4,ymm4,ymm8
  41e2e7:	vpcmpeqd ymm15,ymm15,ymm15
  41e2ec:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41e2f6:	vpcmpeqd ymm11,ymm11,ymm11
  41e2fb:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41e305:	vpcmpeqd ymm11,ymm11,ymm11
  41e30a:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41e314:	vpcmpeqd ymm11,ymm11,ymm11
  41e319:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41e323:	vpaddq ymm0,ymm13,ymm0
  41e327:	vpaddq ymm1,ymm15,ymm1
  41e32b:	vpaddq ymm9,ymm12,ymm9
  41e330:	vpaddq ymm10,ymm14,ymm10
  41e335:	vpaddq ymm2,ymm2,ymm5
  41e339:	add    rbp,0xfffffffffffffff0
  41e33d:	jne    41e2b0 <isspace@plt+0x1a9a0>
  41e343:	vpaddq ymm0,ymm1,ymm0
  41e347:	vpaddq ymm0,ymm9,ymm0
  41e34b:	vpaddq ymm0,ymm10,ymm0
  41e34f:	vextracti128 xmm1,ymm0,0x1
  41e355:	vpaddq ymm0,ymm0,ymm1
  41e359:	vpshufd xmm1,xmm0,0x4e
  41e35e:	vpaddq ymm0,ymm0,ymm1
  41e362:	vmovq  rbx,xmm0
  41e367:	sub    rdi,rax
  41e36a:	lea    rax,[rax+rax*2]
  41e36e:	shl    rax,0x4
  41e372:	add    rax,rdx
  41e375:	add    rax,0x38
  41e379:	nop    DWORD PTR [rax+0x0]
  41e380:	add    rbx,QWORD PTR [rax]
  41e383:	add    rax,0x30
  41e387:	add    rdi,0xffffffffffffffff
  41e38b:	jne    41e380 <isspace@plt+0x1aa70>
  41e38d:	mov    DWORD PTR [r14+0x24],esi
  41e391:	mov    DWORD PTR [r14+0x20],ecx
  41e395:	mov    rdi,QWORD PTR [r8]
  41e398:	mov    rsi,rbx
  41e39b:	vzeroupper 
  41e39e:	call   410fc0 <isspace@plt+0xd6b0>
  41e3a3:	mov    QWORD PTR [r14],rax
  41e3a6:	cmp    BYTE PTR [r14+0x10],0x0
  41e3ab:	je     41e404 <isspace@plt+0x1aaf4>
  41e3ad:	cmp    QWORD PTR [r14+0x18],rbx
  41e3b1:	je     41e3bb <isspace@plt+0x1aaab>
  41e3b3:	mov    DWORD PTR [r14+0x28],0x0
  41e3bb:	mov    QWORD PTR [r14+0x18],rbx
  41e3bf:	mov    rdi,QWORD PTR [r14+0x40]
  41e3c3:	mov    rdx,QWORD PTR [rdi+0x50]
  41e3c7:	cmp    rdx,rbx
  41e3ca:	ja     41e3d2 <isspace@plt+0x1aac2>
  41e3cc:	cmp    QWORD PTR [rdi+0x58],rbx
  41e3d0:	jae    41e410 <isspace@plt+0x1ab00>
  41e3d2:	mov    QWORD PTR [r14+0x30],0x0
  41e3da:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41e3e2:	cmp    QWORD PTR [rdi+0x98],r14
  41e3e9:	jne    41e47e <isspace@plt+0x1ab6e>
  41e3ef:	mov    rax,QWORD PTR [rdi+0x80]
  41e3f6:	mov    QWORD PTR [r14+0x30],rax
  41e3fa:	mov    QWORD PTR [r14+0x20],0x0
  41e402:	jmp    41e47e <isspace@plt+0x1ab6e>
  41e404:	mov    QWORD PTR [r14+0x8],rax
  41e408:	cmp    QWORD PTR [r14+0x18],rbx
  41e40c:	jne    41e3b3 <isspace@plt+0x1aaa3>
  41e40e:	jmp    41e3bb <isspace@plt+0x1aaab>
  41e410:	mov    r11,QWORD PTR [rdi+0x80]
  41e417:	test   r11,r11
  41e41a:	je     41e45c <isspace@plt+0x1ab4c>
  41e41c:	mov    rsi,QWORD PTR [rdi+0x88]
  41e423:	xor    r10d,r10d
  41e426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e430:	cmp    rdx,rbx
  41e433:	setb   cl
  41e436:	cmp    r11,rsi
  41e439:	je     41e4a9 <isspace@plt+0x1ab99>
  41e43b:	cmp    rdx,rbx
  41e43e:	jae    41e4a9 <isspace@plt+0x1ab99>
  41e440:	mov    rax,QWORD PTR [r11+0x10]
  41e444:	add    rax,rdx
  41e447:	cmp    rax,rbx
  41e44a:	ja     41e4a7 <isspace@plt+0x1ab97>
  41e44c:	add    r10d,0x1
  41e450:	mov    r11,QWORD PTR [r11+0x8]
  41e454:	mov    rdx,rax
  41e457:	test   r11,r11
  41e45a:	jne    41e430 <isspace@plt+0x1ab20>
  41e45c:	mov    r11,QWORD PTR [rdi+0x90]
  41e463:	mov    r10d,DWORD PTR [rdi+0x4c]
  41e467:	add    r10d,0xffffffff
  41e46b:	xor    eax,eax
  41e46d:	mov    QWORD PTR [r14+0x30],r11
  41e471:	mov    DWORD PTR [r14+0x20],r10d
  41e475:	mov    DWORD PTR [r14+0x24],eax
  41e479:	call   41a4a0 <isspace@plt+0x16b90>
  41e47e:	mov    DWORD PTR [r14+0x28],r12d
  41e482:	mov    rax,QWORD PTR [r14+0x18]
  41e486:	mov    rcx,QWORD PTR fs:0x28
  41e48f:	cmp    rcx,QWORD PTR [rsp+0x28]
  41e494:	jne    41e519 <isspace@plt+0x1ac09>
  41e49a:	add    rsp,0x30
  41e49e:	pop    rbx
  41e49f:	pop    r12
  41e4a1:	pop    r14
  41e4a3:	pop    r15
  41e4a5:	pop    rbp
  41e4a6:	ret    
  41e4a7:	mov    cl,0x1
  41e4a9:	mov    r8d,DWORD PTR [rdi+0x48]
  41e4ad:	mov    eax,DWORD PTR [r11+0x20]
  41e4b1:	cmp    r8d,eax
  41e4b4:	cmovg  r8d,eax
  41e4b8:	xor    eax,eax
  41e4ba:	test   cl,cl
  41e4bc:	je     41e46d <isspace@plt+0x1ab5d>
  41e4be:	test   r8d,r8d
  41e4c1:	jle    41e46d <isspace@plt+0x1ab5d>
  41e4c3:	movsxd rbp,r8d
  41e4c6:	lea    r9,[r11+0x68]
  41e4ca:	xor    eax,eax
  41e4cc:	nop    DWORD PTR [rax+0x0]
  41e4d0:	movsxd rsi,eax
  41e4d3:	mov    rax,rsi
  41e4d6:	shl    rax,0x4
  41e4da:	lea    rcx,[rax+rax*2]
  41e4de:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41e4e3:	add    rsi,0x1
  41e4e7:	add    rcx,r9
  41e4ea:	nop    WORD PTR [rax+rax*1+0x0]
  41e4f0:	mov    rax,rsi
  41e4f3:	cmp    rsi,rbp
  41e4f6:	jge    41e506 <isspace@plt+0x1abf6>
  41e4f8:	lea    rsi,[rax+0x1]
  41e4fc:	cmp    QWORD PTR [rcx],0x0
  41e500:	lea    rcx,[rcx+0x30]
  41e504:	je     41e4f0 <isspace@plt+0x1abe0>
  41e506:	cmp    rdx,rbx
  41e509:	jae    41e46d <isspace@plt+0x1ab5d>
  41e50f:	cmp    r8d,eax
  41e512:	jg     41e4d0 <isspace@plt+0x1abc0>
  41e514:	jmp    41e46d <isspace@plt+0x1ab5d>
  41e519:	call   403280 <__stack_chk_fail@plt>
  41e51e:	xchg   ax,ax
  41e520:	push   r15
  41e522:	push   r14
  41e524:	push   rbx
  41e525:	sub    rsp,0x40
  41e529:	mov    r14,rdi
  41e52c:	mov    rax,QWORD PTR fs:0x28
  41e535:	mov    QWORD PTR [rsp+0x38],rax
  41e53a:	mov    rsi,QWORD PTR [rdi+0x30]
  41e53e:	test   rsi,rsi
  41e541:	je     41e5de <isspace@plt+0x1acce>
  41e547:	mov    edi,DWORD PTR [rsi+0x20]
  41e54a:	mov    ecx,edi
  41e54c:	shr    ecx,0x1f
  41e54f:	add    ecx,edi
  41e551:	mov    r9,QWORD PTR [r14+0x40]
  41e555:	mov    rbx,QWORD PTR [r9+0x50]
  41e559:	mov    rax,QWORD PTR [r9+0x80]
  41e560:	xor    edx,edx
  41e562:	test   rax,rax
  41e565:	je     41e585 <isspace@plt+0x1ac75>
  41e567:	cmp    rax,rsi
  41e56a:	je     41e585 <isspace@plt+0x1ac75>
  41e56c:	xor    edx,edx
  41e56e:	xchg   ax,ax
  41e570:	add    rbx,QWORD PTR [rax+0x10]
  41e574:	add    edx,0x1
  41e577:	mov    rax,QWORD PTR [rax+0x8]
  41e57b:	test   rax,rax
  41e57e:	je     41e585 <isspace@plt+0x1ac75>
  41e580:	cmp    rax,rsi
  41e583:	jne    41e570 <isspace@plt+0x1ac60>
  41e585:	sar    ecx,1
  41e587:	cmp    edi,0x2
  41e58a:	jl     41e73d <isspace@plt+0x1ae2d>
  41e590:	movsxd rax,ecx
  41e593:	lea    rdi,[rax+rax*2]
  41e597:	lea    rcx,[rax+0x1]
  41e59b:	shl    rdi,0x4
  41e59f:	lea    rax,[rsi+rdi*1]
  41e5a3:	add    rax,0x38
  41e5a7:	nop    WORD PTR [rax+rax*1+0x0]
  41e5b0:	cmp    QWORD PTR [rax],0x0
  41e5b4:	jne    41e5c4 <isspace@plt+0x1acb4>
  41e5b6:	add    rcx,0xffffffffffffffff
  41e5ba:	add    rax,0xffffffffffffffd0
  41e5be:	cmp    rcx,0x1
  41e5c2:	jg     41e5b0 <isspace@plt+0x1aca0>
  41e5c4:	add    ecx,0xffffffff
  41e5c7:	test   ecx,ecx
  41e5c9:	jle    41e73d <isspace@plt+0x1ae2d>
  41e5cf:	mov    edi,ecx
  41e5d1:	cmp    ecx,0x11
  41e5d4:	jae    41e5e7 <isspace@plt+0x1acd7>
  41e5d6:	xor    r8d,r8d
  41e5d9:	jmp    41e717 <isspace@plt+0x1ae07>
  41e5de:	mov    rbx,QWORD PTR [r14+0x18]
  41e5e2:	jmp    41e82e <isspace@plt+0x1af1e>
  41e5e7:	mov    eax,edi
  41e5e9:	and    eax,0xf
  41e5ec:	test   rax,rax
  41e5ef:	mov    r10d,0x10
  41e5f5:	cmovne r10,rax
  41e5f9:	mov    r8,rdi
  41e5fc:	sub    r8,r10
  41e5ff:	vmovq  xmm0,rbx
  41e604:	vpxor  xmm1,xmm1,xmm1
  41e608:	vmovdqa ymm2,YMMWORD PTR [rip+0x135d0]        # 431be0 <isspace@plt+0x2e2d0>
  41e610:	vpbroadcastq ymm3,QWORD PTR [rip+0x135e7]        # 431c00 <isspace@plt+0x2e2f0>
  41e619:	vpbroadcastq ymm4,QWORD PTR [rip+0x135e6]        # 431c08 <isspace@plt+0x2e2f8>
  41e622:	vmovdqu YMMWORD PTR [rsp],ymm4
  41e627:	vpbroadcastq ymm5,QWORD PTR [rip+0x135e0]        # 431c10 <isspace@plt+0x2e300>
  41e630:	vpbroadcastq ymm6,QWORD PTR [rip+0x135df]        # 431c18 <isspace@plt+0x2e308>
  41e639:	vpbroadcastq ymm7,QWORD PTR [rip+0x135de]        # 431c20 <isspace@plt+0x2e310>
  41e642:	vpbroadcastq ymm8,QWORD PTR [rip+0x135dd]        # 431c28 <isspace@plt+0x2e318>
  41e64b:	mov    rbx,r8
  41e64e:	vpxor  xmm9,xmm9,xmm9
  41e653:	vpxor  xmm10,xmm10,xmm10
  41e658:	nop    DWORD PTR [rax+rax*1+0x0]
  41e660:	vpmuludq ymm11,ymm2,ymm3
  41e664:	vpsrlq ymm12,ymm2,0x20
  41e669:	vpmuludq ymm12,ymm12,ymm3
  41e66d:	vpsllq ymm12,ymm12,0x20
  41e673:	vmovq  xmm4,rsi
  41e678:	vpbroadcastq ymm4,xmm4
  41e67d:	vpaddq ymm4,ymm11,ymm4
  41e681:	vpaddq ymm4,ymm12,ymm4
  41e685:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41e68a:	vpaddq ymm12,ymm4,ymm6
  41e68e:	vpaddq ymm14,ymm4,ymm7
  41e692:	vpaddq ymm4,ymm4,ymm8
  41e697:	vpcmpeqd ymm15,ymm15,ymm15
  41e69c:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41e6a6:	vpcmpeqd ymm11,ymm11,ymm11
  41e6ab:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41e6b5:	vpcmpeqd ymm11,ymm11,ymm11
  41e6ba:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41e6c4:	vpcmpeqd ymm11,ymm11,ymm11
  41e6c9:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41e6d3:	vpaddq ymm0,ymm13,ymm0
  41e6d7:	vpaddq ymm1,ymm15,ymm1
  41e6db:	vpaddq ymm9,ymm12,ymm9
  41e6e0:	vpaddq ymm10,ymm14,ymm10
  41e6e5:	vpaddq ymm2,ymm2,ymm5
  41e6e9:	add    rbx,0xfffffffffffffff0
  41e6ed:	jne    41e660 <isspace@plt+0x1ad50>
  41e6f3:	vpaddq ymm0,ymm1,ymm0
  41e6f7:	vpaddq ymm0,ymm9,ymm0
  41e6fb:	vpaddq ymm0,ymm10,ymm0
  41e6ff:	vextracti128 xmm1,ymm0,0x1
  41e705:	vpaddq ymm0,ymm0,ymm1
  41e709:	vpshufd xmm1,xmm0,0x4e
  41e70e:	vpaddq ymm0,ymm0,ymm1
  41e712:	vmovq  rbx,xmm0
  41e717:	sub    rdi,r8
  41e71a:	lea    rax,[r8+r8*2]
  41e71e:	shl    rax,0x4
  41e722:	add    rax,rsi
  41e725:	add    rax,0x38
  41e729:	nop    DWORD PTR [rax+0x0]
  41e730:	add    rbx,QWORD PTR [rax]
  41e733:	add    rax,0x30
  41e737:	add    rdi,0xffffffffffffffff
  41e73b:	jne    41e730 <isspace@plt+0x1ae20>
  41e73d:	mov    DWORD PTR [r14+0x24],ecx
  41e741:	mov    DWORD PTR [r14+0x20],edx
  41e745:	mov    rdi,QWORD PTR [r9]
  41e748:	mov    rsi,rbx
  41e74b:	vzeroupper 
  41e74e:	call   410fc0 <isspace@plt+0xd6b0>
  41e753:	mov    QWORD PTR [r14],rax
  41e756:	cmp    BYTE PTR [r14+0x10],0x0
  41e75b:	je     41e7b4 <isspace@plt+0x1aea4>
  41e75d:	cmp    QWORD PTR [r14+0x18],rbx
  41e761:	je     41e76b <isspace@plt+0x1ae5b>
  41e763:	mov    DWORD PTR [r14+0x28],0x0
  41e76b:	mov    QWORD PTR [r14+0x18],rbx
  41e76f:	mov    rdi,QWORD PTR [r14+0x40]
  41e773:	mov    r15,QWORD PTR [rdi+0x50]
  41e777:	cmp    r15,rbx
  41e77a:	ja     41e782 <isspace@plt+0x1ae72>
  41e77c:	cmp    QWORD PTR [rdi+0x58],rbx
  41e780:	jae    41e7c0 <isspace@plt+0x1aeb0>
  41e782:	mov    QWORD PTR [r14+0x30],0x0
  41e78a:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41e792:	cmp    QWORD PTR [rdi+0x98],r14
  41e799:	jne    41e82e <isspace@plt+0x1af1e>
  41e79f:	mov    rax,QWORD PTR [rdi+0x80]
  41e7a6:	mov    QWORD PTR [r14+0x30],rax
  41e7aa:	mov    QWORD PTR [r14+0x20],0x0
  41e7b2:	jmp    41e82e <isspace@plt+0x1af1e>
  41e7b4:	mov    QWORD PTR [r14+0x8],rax
  41e7b8:	cmp    QWORD PTR [r14+0x18],rbx
  41e7bc:	jne    41e763 <isspace@plt+0x1ae53>
  41e7be:	jmp    41e76b <isspace@plt+0x1ae5b>
  41e7c0:	mov    r11,QWORD PTR [rdi+0x80]
  41e7c7:	test   r11,r11
  41e7ca:	je     41e80c <isspace@plt+0x1aefc>
  41e7cc:	mov    rcx,QWORD PTR [rdi+0x88]
  41e7d3:	xor    r9d,r9d
  41e7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e7e0:	cmp    r15,rbx
  41e7e3:	setb   al
  41e7e6:	cmp    r11,rcx
  41e7e9:	je     41e84d <isspace@plt+0x1af3d>
  41e7eb:	cmp    r15,rbx
  41e7ee:	jae    41e84d <isspace@plt+0x1af3d>
  41e7f0:	mov    rax,QWORD PTR [r11+0x10]
  41e7f4:	add    rax,r15
  41e7f7:	cmp    rax,rbx
  41e7fa:	ja     41e84b <isspace@plt+0x1af3b>
  41e7fc:	add    r9d,0x1
  41e800:	mov    r11,QWORD PTR [r11+0x8]
  41e804:	mov    r15,rax
  41e807:	test   r11,r11
  41e80a:	jne    41e7e0 <isspace@plt+0x1aed0>
  41e80c:	mov    r11,QWORD PTR [rdi+0x90]
  41e813:	mov    r9d,DWORD PTR [rdi+0x4c]
  41e817:	add    r9d,0xffffffff
  41e81b:	xor    edx,edx
  41e81d:	mov    QWORD PTR [r14+0x30],r11
  41e821:	mov    DWORD PTR [r14+0x20],r9d
  41e825:	mov    DWORD PTR [r14+0x24],edx
  41e829:	call   41a4a0 <isspace@plt+0x16b90>
  41e82e:	mov    rax,QWORD PTR fs:0x28
  41e837:	cmp    rax,QWORD PTR [rsp+0x38]
  41e83c:	jne    41e8b9 <isspace@plt+0x1afa9>
  41e83e:	mov    rax,rbx
  41e841:	add    rsp,0x40
  41e845:	pop    rbx
  41e846:	pop    r14
  41e848:	pop    r15
  41e84a:	ret    
  41e84b:	mov    al,0x1
  41e84d:	mov    r8d,DWORD PTR [rdi+0x48]
  41e851:	mov    ecx,DWORD PTR [r11+0x20]
  41e855:	cmp    r8d,ecx
  41e858:	cmovg  r8d,ecx
  41e85c:	xor    edx,edx
  41e85e:	test   al,al
  41e860:	je     41e81d <isspace@plt+0x1af0d>
  41e862:	test   r8d,r8d
  41e865:	jle    41e81d <isspace@plt+0x1af0d>
  41e867:	movsxd rcx,r8d
  41e86a:	lea    r10,[r11+0x68]
  41e86e:	xor    edx,edx
  41e870:	movsxd rsi,edx
  41e873:	mov    rax,rsi
  41e876:	shl    rax,0x4
  41e87a:	lea    rax,[rax+rax*2]
  41e87e:	add    r15,QWORD PTR [r11+rax*1+0x38]
  41e883:	add    rsi,0x1
  41e887:	add    rax,r10
  41e88a:	nop    WORD PTR [rax+rax*1+0x0]
  41e890:	mov    rdx,rsi
  41e893:	cmp    rsi,rcx
  41e896:	jge    41e8a6 <isspace@plt+0x1af96>
  41e898:	lea    rsi,[rdx+0x1]
  41e89c:	cmp    QWORD PTR [rax],0x0
  41e8a0:	lea    rax,[rax+0x30]
  41e8a4:	je     41e890 <isspace@plt+0x1af80>
  41e8a6:	cmp    r15,rbx
  41e8a9:	jae    41e81d <isspace@plt+0x1af0d>
  41e8af:	cmp    r8d,edx
  41e8b2:	jg     41e870 <isspace@plt+0x1af60>
  41e8b4:	jmp    41e81d <isspace@plt+0x1af0d>
  41e8b9:	call   403280 <__stack_chk_fail@plt>
  41e8be:	xchg   ax,ax
  41e8c0:	push   r15
  41e8c2:	push   r14
  41e8c4:	push   rbx
  41e8c5:	sub    rsp,0x40
  41e8c9:	mov    r14,rdi
  41e8cc:	mov    rax,QWORD PTR fs:0x28
  41e8d5:	mov    QWORD PTR [rsp+0x38],rax
  41e8da:	mov    r10,QWORD PTR [rdi+0x30]
  41e8de:	test   r10,r10
  41e8e1:	je     41e983 <isspace@plt+0x1b073>
  41e8e7:	mov    ecx,DWORD PTR [r10+0x20]
  41e8eb:	lea    edx,[rcx-0x1]
  41e8ee:	xor    eax,eax
  41e8f0:	test   ecx,ecx
  41e8f2:	mov    edi,0x0
  41e8f7:	cmovg  edi,edx
  41e8fa:	mov    r8,QWORD PTR [r14+0x40]
  41e8fe:	mov    rbx,QWORD PTR [r8+0x50]
  41e902:	mov    rcx,QWORD PTR [r8+0x80]
  41e909:	test   rcx,rcx
  41e90c:	je     41e935 <isspace@plt+0x1b025>
  41e90e:	cmp    rcx,r10
  41e911:	je     41e935 <isspace@plt+0x1b025>
  41e913:	xor    eax,eax
  41e915:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e91f:	nop
  41e920:	add    rbx,QWORD PTR [rcx+0x10]
  41e924:	add    eax,0x1
  41e927:	mov    rcx,QWORD PTR [rcx+0x8]
  41e92b:	test   rcx,rcx
  41e92e:	je     41e935 <isspace@plt+0x1b025>
  41e930:	cmp    rcx,r10
  41e933:	jne    41e920 <isspace@plt+0x1b010>
  41e935:	test   edi,edi
  41e937:	jle    41eaff <isspace@plt+0x1b1ef>
  41e93d:	movsxd rcx,edi
  41e940:	lea    rsi,[rcx+rcx*2]
  41e944:	lea    rcx,[rcx+0x1]
  41e948:	shl    rsi,0x4
  41e94c:	add    rsi,r10
  41e94f:	add    rsi,0x38
  41e953:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e95d:	nop    DWORD PTR [rax]
  41e960:	cmp    QWORD PTR [rsi],0x0
  41e964:	jne    41e98c <isspace@plt+0x1b07c>
  41e966:	add    edx,0xffffffff
  41e969:	add    edi,0xffffffff
  41e96c:	add    rcx,0xffffffffffffffff
  41e970:	add    rsi,0xffffffffffffffd0
  41e974:	cmp    rcx,0x1
  41e978:	jg     41e960 <isspace@plt+0x1b050>
  41e97a:	test   edx,edx
  41e97c:	jg     41e996 <isspace@plt+0x1b086>
  41e97e:	jmp    41eafd <isspace@plt+0x1b1ed>
  41e983:	mov    rbx,QWORD PTR [r14+0x18]
  41e987:	jmp    41ebee <isspace@plt+0x1b2de>
  41e98c:	mov    edx,edi
  41e98e:	test   edx,edx
  41e990:	jle    41eafd <isspace@plt+0x1b1ed>
  41e996:	mov    edi,edx
  41e998:	cmp    edx,0x11
  41e99b:	jae    41e9a5 <isspace@plt+0x1b095>
  41e99d:	xor    r9d,r9d
  41e9a0:	jmp    41ead7 <isspace@plt+0x1b1c7>
  41e9a5:	mov    ecx,edi
  41e9a7:	and    ecx,0xf
  41e9aa:	test   rcx,rcx
  41e9ad:	mov    esi,0x10
  41e9b2:	cmovne rsi,rcx
  41e9b6:	mov    r9,rdi
  41e9b9:	sub    r9,rsi
  41e9bc:	vmovq  xmm0,rbx
  41e9c1:	vpxor  xmm1,xmm1,xmm1
  41e9c5:	vmovdqa ymm2,YMMWORD PTR [rip+0x13213]        # 431be0 <isspace@plt+0x2e2d0>
  41e9cd:	vpbroadcastq ymm3,QWORD PTR [rip+0x1322a]        # 431c00 <isspace@plt+0x2e2f0>
  41e9d6:	vpbroadcastq ymm4,QWORD PTR [rip+0x13229]        # 431c08 <isspace@plt+0x2e2f8>
  41e9df:	vmovdqu YMMWORD PTR [rsp],ymm4
  41e9e4:	vpbroadcastq ymm5,QWORD PTR [rip+0x13223]        # 431c10 <isspace@plt+0x2e300>
  41e9ed:	vpbroadcastq ymm6,QWORD PTR [rip+0x13222]        # 431c18 <isspace@plt+0x2e308>
  41e9f6:	vpbroadcastq ymm7,QWORD PTR [rip+0x13221]        # 431c20 <isspace@plt+0x2e310>
  41e9ff:	vpbroadcastq ymm8,QWORD PTR [rip+0x13220]        # 431c28 <isspace@plt+0x2e318>
  41ea08:	mov    rcx,r9
  41ea0b:	vpxor  xmm9,xmm9,xmm9
  41ea10:	vpxor  xmm10,xmm10,xmm10
  41ea15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ea1f:	nop
  41ea20:	vpmuludq ymm11,ymm2,ymm3
  41ea24:	vpsrlq ymm12,ymm2,0x20
  41ea29:	vpmuludq ymm12,ymm12,ymm3
  41ea2d:	vpsllq ymm12,ymm12,0x20
  41ea33:	vmovq  xmm4,r10
  41ea38:	vpbroadcastq ymm4,xmm4
  41ea3d:	vpaddq ymm4,ymm11,ymm4
  41ea41:	vpaddq ymm4,ymm12,ymm4
  41ea45:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41ea4a:	vpaddq ymm12,ymm4,ymm6
  41ea4e:	vpaddq ymm14,ymm4,ymm7
  41ea52:	vpaddq ymm4,ymm4,ymm8
  41ea57:	vpcmpeqd ymm15,ymm15,ymm15
  41ea5c:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41ea66:	vpcmpeqd ymm11,ymm11,ymm11
  41ea6b:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41ea75:	vpcmpeqd ymm11,ymm11,ymm11
  41ea7a:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41ea84:	vpcmpeqd ymm11,ymm11,ymm11
  41ea89:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41ea93:	vpaddq ymm0,ymm13,ymm0
  41ea97:	vpaddq ymm1,ymm15,ymm1
  41ea9b:	vpaddq ymm9,ymm12,ymm9
  41eaa0:	vpaddq ymm10,ymm14,ymm10
  41eaa5:	vpaddq ymm2,ymm2,ymm5
  41eaa9:	add    rcx,0xfffffffffffffff0
  41eaad:	jne    41ea20 <isspace@plt+0x1b110>
  41eab3:	vpaddq ymm0,ymm1,ymm0
  41eab7:	vpaddq ymm0,ymm9,ymm0
  41eabb:	vpaddq ymm0,ymm10,ymm0
  41eabf:	vextracti128 xmm1,ymm0,0x1
  41eac5:	vpaddq ymm0,ymm0,ymm1
  41eac9:	vpshufd xmm1,xmm0,0x4e
  41eace:	vpaddq ymm0,ymm0,ymm1
  41ead2:	vmovq  rbx,xmm0
  41ead7:	sub    rdi,r9
  41eada:	lea    rcx,[r9+r9*2]
  41eade:	shl    rcx,0x4
  41eae2:	add    rcx,r10
  41eae5:	add    rcx,0x38
  41eae9:	nop    DWORD PTR [rax+0x0]
  41eaf0:	add    rbx,QWORD PTR [rcx]
  41eaf3:	add    rcx,0x30
  41eaf7:	add    rdi,0xffffffffffffffff
  41eafb:	jne    41eaf0 <isspace@plt+0x1b1e0>
  41eafd:	mov    edi,edx
  41eaff:	mov    DWORD PTR [r14+0x24],edi
  41eb03:	mov    DWORD PTR [r14+0x20],eax
  41eb07:	mov    rdi,QWORD PTR [r8]
  41eb0a:	mov    rsi,rbx
  41eb0d:	vzeroupper 
  41eb10:	call   410fc0 <isspace@plt+0xd6b0>
  41eb15:	mov    QWORD PTR [r14],rax
  41eb18:	cmp    BYTE PTR [r14+0x10],0x0
  41eb1d:	je     41eb76 <isspace@plt+0x1b266>
  41eb1f:	cmp    QWORD PTR [r14+0x18],rbx
  41eb23:	je     41eb2d <isspace@plt+0x1b21d>
  41eb25:	mov    DWORD PTR [r14+0x28],0x0
  41eb2d:	mov    QWORD PTR [r14+0x18],rbx
  41eb31:	mov    rdi,QWORD PTR [r14+0x40]
  41eb35:	mov    r15,QWORD PTR [rdi+0x50]
  41eb39:	cmp    r15,rbx
  41eb3c:	ja     41eb44 <isspace@plt+0x1b234>
  41eb3e:	cmp    QWORD PTR [rdi+0x58],rbx
  41eb42:	jae    41eb82 <isspace@plt+0x1b272>
  41eb44:	mov    QWORD PTR [r14+0x30],0x0
  41eb4c:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41eb54:	cmp    QWORD PTR [rdi+0x98],r14
  41eb5b:	jne    41ebee <isspace@plt+0x1b2de>
  41eb61:	mov    rax,QWORD PTR [rdi+0x80]
  41eb68:	mov    QWORD PTR [r14+0x30],rax
  41eb6c:	mov    QWORD PTR [r14+0x20],0x0
  41eb74:	jmp    41ebee <isspace@plt+0x1b2de>
  41eb76:	mov    QWORD PTR [r14+0x8],rax
  41eb7a:	cmp    QWORD PTR [r14+0x18],rbx
  41eb7e:	jne    41eb25 <isspace@plt+0x1b215>
  41eb80:	jmp    41eb2d <isspace@plt+0x1b21d>
  41eb82:	mov    r11,QWORD PTR [rdi+0x80]
  41eb89:	test   r11,r11
  41eb8c:	je     41ebcc <isspace@plt+0x1b2bc>
  41eb8e:	mov    rcx,QWORD PTR [rdi+0x88]
  41eb95:	xor    r9d,r9d
  41eb98:	nop    DWORD PTR [rax+rax*1+0x0]
  41eba0:	cmp    r15,rbx
  41eba3:	setb   al
  41eba6:	cmp    r11,rcx
  41eba9:	je     41ec0d <isspace@plt+0x1b2fd>
  41ebab:	cmp    r15,rbx
  41ebae:	jae    41ec0d <isspace@plt+0x1b2fd>
  41ebb0:	mov    rax,QWORD PTR [r11+0x10]
  41ebb4:	add    rax,r15
  41ebb7:	cmp    rax,rbx
  41ebba:	ja     41ec0b <isspace@plt+0x1b2fb>
  41ebbc:	add    r9d,0x1
  41ebc0:	mov    r11,QWORD PTR [r11+0x8]
  41ebc4:	mov    r15,rax
  41ebc7:	test   r11,r11
  41ebca:	jne    41eba0 <isspace@plt+0x1b290>
  41ebcc:	mov    r11,QWORD PTR [rdi+0x90]
  41ebd3:	mov    r9d,DWORD PTR [rdi+0x4c]
  41ebd7:	add    r9d,0xffffffff
  41ebdb:	xor    edx,edx
  41ebdd:	mov    QWORD PTR [r14+0x30],r11
  41ebe1:	mov    DWORD PTR [r14+0x20],r9d
  41ebe5:	mov    DWORD PTR [r14+0x24],edx
  41ebe9:	call   41a4a0 <isspace@plt+0x16b90>
  41ebee:	mov    rax,QWORD PTR fs:0x28
  41ebf7:	cmp    rax,QWORD PTR [rsp+0x38]
  41ebfc:	jne    41ec79 <isspace@plt+0x1b369>
  41ebfe:	mov    rax,rbx
  41ec01:	add    rsp,0x40
  41ec05:	pop    rbx
  41ec06:	pop    r14
  41ec08:	pop    r15
  41ec0a:	ret    
  41ec0b:	mov    al,0x1
  41ec0d:	mov    r8d,DWORD PTR [rdi+0x48]
  41ec11:	mov    ecx,DWORD PTR [r11+0x20]
  41ec15:	cmp    r8d,ecx
  41ec18:	cmovg  r8d,ecx
  41ec1c:	xor    edx,edx
  41ec1e:	test   al,al
  41ec20:	je     41ebdd <isspace@plt+0x1b2cd>
  41ec22:	test   r8d,r8d
  41ec25:	jle    41ebdd <isspace@plt+0x1b2cd>
  41ec27:	movsxd rcx,r8d
  41ec2a:	lea    r10,[r11+0x68]
  41ec2e:	xor    edx,edx
  41ec30:	movsxd rsi,edx
  41ec33:	mov    rax,rsi
  41ec36:	shl    rax,0x4
  41ec3a:	lea    rax,[rax+rax*2]
  41ec3e:	add    r15,QWORD PTR [r11+rax*1+0x38]
  41ec43:	add    rsi,0x1
  41ec47:	add    rax,r10
  41ec4a:	nop    WORD PTR [rax+rax*1+0x0]
  41ec50:	mov    rdx,rsi
  41ec53:	cmp    rsi,rcx
  41ec56:	jge    41ec66 <isspace@plt+0x1b356>
  41ec58:	lea    rsi,[rdx+0x1]
  41ec5c:	cmp    QWORD PTR [rax],0x0
  41ec60:	lea    rax,[rax+0x30]
  41ec64:	je     41ec50 <isspace@plt+0x1b340>
  41ec66:	cmp    r15,rbx
  41ec69:	jae    41ebdd <isspace@plt+0x1b2cd>
  41ec6f:	cmp    r8d,edx
  41ec72:	jg     41ec30 <isspace@plt+0x1b320>
  41ec74:	jmp    41ebdd <isspace@plt+0x1b2cd>
  41ec79:	call   403280 <__stack_chk_fail@plt>
  41ec7e:	xchg   ax,ax
  41ec80:	push   rax
  41ec81:	mov    rax,QWORD PTR fs:0x28
  41ec8a:	mov    QWORD PTR [rsp],rax
  41ec8e:	mov    rax,QWORD PTR [rdi+0x98]
  41ec95:	mov    rsi,QWORD PTR [rax]
  41ec98:	mov    rax,QWORD PTR [rax+0x40]
  41ec9c:	mov    rdi,QWORD PTR [rax]
  41ec9f:	call   411060 <isspace@plt+0xd750>
  41eca4:	mov    rcx,QWORD PTR fs:0x28
  41ecad:	cmp    rcx,QWORD PTR [rsp]
  41ecb1:	jne    41ecb5 <isspace@plt+0x1b3a5>
  41ecb3:	pop    rcx
  41ecb4:	ret    
  41ecb5:	call   403280 <__stack_chk_fail@plt>
  41ecba:	nop    WORD PTR [rax+rax*1+0x0]
  41ecc0:	push   rax
  41ecc1:	mov    rax,QWORD PTR fs:0x28
  41ecca:	mov    QWORD PTR [rsp],rax
  41ecce:	mov    rax,QWORD PTR [rdi+0x80]
  41ecd5:	mov    rcx,QWORD PTR fs:0x28
  41ecde:	cmp    rcx,QWORD PTR [rsp]
  41ece2:	jne    41ece6 <isspace@plt+0x1b3d6>
  41ece4:	pop    rcx
  41ece5:	ret    
  41ece6:	call   403280 <__stack_chk_fail@plt>
  41eceb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ecf0:	push   rax
  41ecf1:	mov    rax,QWORD PTR fs:0x28
  41ecfa:	mov    QWORD PTR [rsp],rax
  41ecfe:	mov    rax,QWORD PTR [rdi+0x88]
  41ed05:	mov    rcx,QWORD PTR fs:0x28
  41ed0e:	cmp    rcx,QWORD PTR [rsp]
  41ed12:	jne    41ed16 <isspace@plt+0x1b406>
  41ed14:	pop    rcx
  41ed15:	ret    
  41ed16:	call   403280 <__stack_chk_fail@plt>
  41ed1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ed20:	push   rax
  41ed21:	mov    rax,QWORD PTR fs:0x28
  41ed2a:	mov    QWORD PTR [rsp],rax
  41ed2e:	mov    rax,QWORD PTR [rdi+0x30]
  41ed32:	mov    rcx,QWORD PTR fs:0x28
  41ed3b:	cmp    rcx,QWORD PTR [rsp]
  41ed3f:	jne    41ed43 <isspace@plt+0x1b433>
  41ed41:	pop    rcx
  41ed42:	ret    
  41ed43:	call   403280 <__stack_chk_fail@plt>
  41ed48:	nop    DWORD PTR [rax+rax*1+0x0]
  41ed50:	push   r15
  41ed52:	push   r14
  41ed54:	push   r12
  41ed56:	push   rbx
  41ed57:	push   rax
  41ed58:	mov    r15,rsi
  41ed5b:	mov    r14,rdi
  41ed5e:	mov    rax,QWORD PTR fs:0x28
  41ed67:	mov    QWORD PTR [rsp],rax
  41ed6b:	mov    r12,QWORD PTR [rdi+0x40]
  41ed6f:	cmp    QWORD PTR [r12+0x98],rdi
  41ed77:	jne    41edfc <isspace@plt+0x1b4ec>
  41ed7d:	mov    rdi,r12
  41ed80:	call   41a4a0 <isspace@plt+0x16b90>
  41ed85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ed8f:	nop
  41ed90:	cmp    QWORD PTR [r12+0x50],r15
  41ed95:	jbe    41edb8 <isspace@plt+0x1b4a8>
  41ed97:	mov    esi,0x1
  41ed9c:	mov    rdi,r12
  41ed9f:	call   41c410 <isspace@plt+0x18b00>
  41eda4:	test   al,al
  41eda6:	jne    41ed90 <isspace@plt+0x1b480>
  41eda8:	jmp    41edb8 <isspace@plt+0x1b4a8>
  41edaa:	nop    WORD PTR [rax+rax*1+0x0]
  41edb0:	mov    rdi,r12
  41edb3:	call   41a4a0 <isspace@plt+0x16b90>
  41edb8:	mov    rbx,QWORD PTR [r12+0x58]
  41edbd:	cmp    rbx,r15
  41edc0:	jae    41edfc <isspace@plt+0x1b4ec>
  41edc2:	mov    rdi,QWORD PTR [r12]
  41edc6:	call   410a90 <isspace@plt+0xd180>
  41edcb:	cmp    rbx,rax
  41edce:	jae    41edfc <isspace@plt+0x1b4ec>
  41edd0:	cmp    DWORD PTR [r12+0x4c],0x1
  41edd6:	jle    41edf0 <isspace@plt+0x1b4e0>
  41edd8:	mov    rax,QWORD PTR [r12+0x80]
  41ede0:	test   rax,rax
  41ede3:	je     41edb0 <isspace@plt+0x1b4a0>
  41ede5:	mov    rax,QWORD PTR [rax+0x10]
  41ede9:	add    rax,QWORD PTR [r12+0x50]
  41edee:	jmp    41edf5 <isspace@plt+0x1b4e5>
  41edf0:	mov    rax,QWORD PTR [r12+0x58]
  41edf5:	mov    QWORD PTR [r12+0x50],rax
  41edfa:	jmp    41edb0 <isspace@plt+0x1b4a0>
  41edfc:	mov    rdi,r14
  41edff:	mov    rsi,r15
  41ee02:	call   41ad90 <isspace@plt+0x17480>
  41ee07:	mov    rax,QWORD PTR fs:0x28
  41ee10:	cmp    rax,QWORD PTR [rsp]
  41ee14:	jne    41ee22 <isspace@plt+0x1b512>
  41ee16:	add    rsp,0x8
  41ee1a:	pop    rbx
  41ee1b:	pop    r12
  41ee1d:	pop    r14
  41ee1f:	pop    r15
  41ee21:	ret    
  41ee22:	call   403280 <__stack_chk_fail@plt>
  41ee27:	nop    WORD PTR [rax+rax*1+0x0]
  41ee30:	push   rax
  41ee31:	mov    rax,QWORD PTR fs:0x28
  41ee3a:	mov    QWORD PTR [rsp],rax
  41ee3e:	mov    rdi,QWORD PTR [rdi+0x10]
  41ee42:	test   rdi,rdi
  41ee45:	je     41ee5b <isspace@plt+0x1b54b>
  41ee47:	call   QWORD PTR [rdi+0x18]
  41ee4a:	mov    rcx,QWORD PTR fs:0x28
  41ee53:	cmp    rcx,QWORD PTR [rsp]
  41ee57:	jne    41ee6e <isspace@plt+0x1b55e>
  41ee59:	pop    rcx
  41ee5a:	ret    
  41ee5b:	mov    rax,QWORD PTR fs:0x28
  41ee64:	cmp    rax,QWORD PTR [rsp]
  41ee68:	jne    41ee6e <isspace@plt+0x1b55e>
  41ee6a:	xor    eax,eax
  41ee6c:	pop    rcx
  41ee6d:	ret    
  41ee6e:	call   403280 <__stack_chk_fail@plt>
  41ee73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ee7d:	nop    DWORD PTR [rax]
  41ee80:	push   rax
  41ee81:	mov    rax,QWORD PTR fs:0x28
  41ee8a:	mov    QWORD PTR [rsp],rax
  41ee8e:	test   esi,esi
  41ee90:	js     41ee98 <isspace@plt+0x1b588>
  41ee92:	mov    DWORD PTR [rdi+0x108],esi
  41ee98:	mov    rax,QWORD PTR fs:0x28
  41eea1:	cmp    rax,QWORD PTR [rsp]
  41eea5:	jne    41eea9 <isspace@plt+0x1b599>
  41eea7:	pop    rax
  41eea8:	ret    
  41eea9:	call   403280 <__stack_chk_fail@plt>
  41eeae:	xchg   ax,ax
  41eeb0:	push   rax
  41eeb1:	mov    rax,QWORD PTR fs:0x28
  41eeba:	mov    QWORD PTR [rsp],rax
  41eebe:	mov    eax,DWORD PTR [rdi+0x108]
  41eec4:	mov    rcx,QWORD PTR fs:0x28
  41eecd:	cmp    rcx,QWORD PTR [rsp]
  41eed1:	jne    41eed5 <isspace@plt+0x1b5c5>
  41eed3:	pop    rcx
  41eed4:	ret    
  41eed5:	call   403280 <__stack_chk_fail@plt>
  41eeda:	nop    WORD PTR [rax+rax*1+0x0]
  41eee0:	push   rax
  41eee1:	mov    rax,QWORD PTR fs:0x28
  41eeea:	mov    QWORD PTR [rsp],rax
  41eeee:	mov    rax,QWORD PTR [rdi+0x50]
  41eef2:	cmp    esi,0x2
  41eef5:	jl     41ef28 <isspace@plt+0x1b618>
  41eef7:	mov    rcx,QWORD PTR [rdi+0x88]
  41eefe:	sub    rdi,0xffffffffffffff80
  41ef02:	add    esi,0x1
  41ef05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ef0f:	nop
  41ef10:	mov    rdi,QWORD PTR [rdi]
  41ef13:	cmp    rdi,rcx
  41ef16:	je     41ef28 <isspace@plt+0x1b618>
  41ef18:	add    rax,QWORD PTR [rdi+0x10]
  41ef1c:	add    rdi,0x8
  41ef20:	add    esi,0xffffffff
  41ef23:	cmp    esi,0x2
  41ef26:	jg     41ef10 <isspace@plt+0x1b600>
  41ef28:	mov    rcx,QWORD PTR fs:0x28
  41ef31:	cmp    rcx,QWORD PTR [rsp]
  41ef35:	jne    41ef39 <isspace@plt+0x1b629>
  41ef37:	pop    rcx
  41ef38:	ret    
  41ef39:	call   403280 <__stack_chk_fail@plt>
  41ef3e:	xchg   ax,ax
  41ef40:	push   rbp
  41ef41:	push   r15
  41ef43:	push   r14
  41ef45:	push   r13
  41ef47:	push   r12
  41ef49:	push   rbx
  41ef4a:	sub    rsp,0x18
  41ef4e:	mov    ebp,edx
  41ef50:	mov    r14,rsi
  41ef53:	mov    r15,rdi
  41ef56:	mov    rax,QWORD PTR fs:0x28
  41ef5f:	mov    QWORD PTR [rsp+0x10],rax
  41ef64:	mov    rdi,QWORD PTR [rdi]
  41ef67:	call   410a90 <isspace@plt+0xd180>
  41ef6c:	cmp    rax,r14
  41ef6f:	jb     41eff8 <isspace@plt+0x1b6e8>
  41ef75:	mov    edi,0x1
  41ef7a:	mov    esi,0x58
  41ef7f:	call   403470 <calloc@plt>
  41ef84:	test   rax,rax
  41ef87:	je     41eff8 <isspace@plt+0x1b6e8>
  41ef89:	mov    rbx,rax
  41ef8c:	mov    QWORD PTR [rax+0x40],r15
  41ef90:	mov    eax,DWORD PTR [r15+0x100]
  41ef97:	mov    DWORD PTR [rbx+0x38],eax
  41ef9a:	cmp    QWORD PTR [r15+0xf8],0x0
  41efa2:	je     41f020 <isspace@plt+0x1b710>
  41efa4:	mov    r12,QWORD PTR [r15+0xa0]
  41efab:	test   r12,r12
  41efae:	jne    41efb7 <isspace@plt+0x1b6a7>
  41efb0:	mov    r12,QWORD PTR [r15+0x98]
  41efb7:	mov    rsi,QWORD PTR [r12]
  41efbb:	mov    rax,QWORD PTR [r12+0x40]
  41efc0:	mov    rdi,QWORD PTR [rax]
  41efc3:	call   411060 <isspace@plt+0xd750>
  41efc8:	cmp    rax,r14
  41efcb:	mov    DWORD PTR [rsp+0xc],ebp
  41efcf:	jne    41f042 <isspace@plt+0x1b732>
  41efd1:	mov    rbp,QWORD PTR [r12+0x50]
  41efd6:	mov    r13,r12
  41efd9:	mov    rax,r14
  41efdc:	cmp    rax,r14
  41efdf:	jne    41f113 <isspace@plt+0x1b803>
  41efe5:	cmp    BYTE PTR [rsp+0xc],0x0
  41efea:	jne    41f113 <isspace@plt+0x1b803>
  41eff0:	mov    rdi,rbx
  41eff3:	call   4030d0 <free@plt>
  41eff8:	xor    ebx,ebx
  41effa:	mov    rax,QWORD PTR fs:0x28
  41f003:	cmp    rax,QWORD PTR [rsp+0x10]
  41f008:	jne    41f1a3 <isspace@plt+0x1b893>
  41f00e:	mov    rax,rbx
  41f011:	add    rsp,0x18
  41f015:	pop    rbx
  41f016:	pop    r12
  41f018:	pop    r13
  41f01a:	pop    r14
  41f01c:	pop    r15
  41f01e:	pop    rbp
  41f01f:	ret    
  41f020:	mov    QWORD PTR [r15+0x98],rbx
  41f027:	mov    QWORD PTR [r15+0xa0],rbx
  41f02e:	mov    QWORD PTR [r15+0xf8],rbx
  41f035:	mov    DWORD PTR [r15+0xb0],0x1
  41f040:	jmp    41effa <isspace@plt+0x1b6ea>
  41f042:	jae    41f096 <isspace@plt+0x1b786>
  41f044:	mov    rbp,QWORD PTR [r12+0x50]
  41f049:	test   rbp,rbp
  41f04c:	je     41f0f4 <isspace@plt+0x1b7e4>
  41f052:	mov    rsi,QWORD PTR [rbp+0x0]
  41f056:	mov    rax,QWORD PTR [rbp+0x40]
  41f05a:	mov    rdi,QWORD PTR [rax]
  41f05d:	call   411060 <isspace@plt+0xd750>
  41f062:	cmp    rax,r14
  41f065:	jae    41f0f6 <isspace@plt+0x1b7e6>
  41f06b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f070:	mov    r13,rbp
  41f073:	mov    rbp,QWORD PTR [rbp+0x50]
  41f077:	test   rbp,rbp
  41f07a:	je     41f0e7 <isspace@plt+0x1b7d7>
  41f07c:	mov    rsi,QWORD PTR [rbp+0x0]
  41f080:	mov    rax,QWORD PTR [rbp+0x40]
  41f084:	mov    rdi,QWORD PTR [rax]
  41f087:	call   411060 <isspace@plt+0xd750>
  41f08c:	cmp    rax,r14
  41f08f:	jb     41f070 <isspace@plt+0x1b760>
  41f091:	jmp    41efdc <isspace@plt+0x1b6cc>
  41f096:	cmp    rax,r14
  41f099:	jbe    41f0e4 <isspace@plt+0x1b7d4>
  41f09b:	mov    r13,QWORD PTR [r12+0x48]
  41f0a0:	test   r13,r13
  41f0a3:	je     41f104 <isspace@plt+0x1b7f4>
  41f0a5:	mov    rsi,QWORD PTR [r13+0x0]
  41f0a9:	mov    rax,QWORD PTR [r13+0x40]
  41f0ad:	mov    rdi,QWORD PTR [rax]
  41f0b0:	call   411060 <isspace@plt+0xd750>
  41f0b5:	cmp    rax,r14
  41f0b8:	jbe    41f107 <isspace@plt+0x1b7f7>
  41f0ba:	mov    rbp,r13
  41f0bd:	mov    r13,QWORD PTR [r13+0x48]
  41f0c1:	test   r13,r13
  41f0c4:	je     41f192 <isspace@plt+0x1b882>
  41f0ca:	mov    rsi,QWORD PTR [r13+0x0]
  41f0ce:	mov    rax,QWORD PTR [r13+0x40]
  41f0d2:	mov    rdi,QWORD PTR [rax]
  41f0d5:	call   411060 <isspace@plt+0xd750>
  41f0da:	cmp    rax,r14
  41f0dd:	ja     41f0ba <isspace@plt+0x1b7aa>
  41f0df:	jmp    41efdc <isspace@plt+0x1b6cc>
  41f0e4:	xor    r13d,r13d
  41f0e7:	xor    ebp,ebp
  41f0e9:	cmp    rax,r14
  41f0ec:	je     41efe5 <isspace@plt+0x1b6d5>
  41f0f2:	jmp    41f113 <isspace@plt+0x1b803>
  41f0f4:	xor    ebp,ebp
  41f0f6:	mov    r13,r12
  41f0f9:	cmp    rax,r14
  41f0fc:	je     41efe5 <isspace@plt+0x1b6d5>
  41f102:	jmp    41f113 <isspace@plt+0x1b803>
  41f104:	xor    r13d,r13d
  41f107:	mov    rbp,r12
  41f10a:	cmp    rax,r14
  41f10d:	je     41efe5 <isspace@plt+0x1b6d5>
  41f113:	test   rbp,rbp
  41f116:	je     41f153 <isspace@plt+0x1b843>
  41f118:	mov    rax,rbp
  41f11b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f120:	add    DWORD PTR [rax+0x3c],0x1
  41f124:	mov    rax,QWORD PTR [rax+0x50]
  41f128:	test   rax,rax
  41f12b:	jne    41f120 <isspace@plt+0x1b810>
  41f12d:	mov    QWORD PTR [rbx+0x48],r13
  41f131:	mov    QWORD PTR [rbx+0x50],rbp
  41f135:	test   rbp,rbp
  41f138:	je     41f13e <isspace@plt+0x1b82e>
  41f13a:	mov    QWORD PTR [rbp+0x48],rbx
  41f13e:	test   r13,r13
  41f141:	je     41f160 <isspace@plt+0x1b850>
  41f143:	mov    QWORD PTR [r13+0x50],rbx
  41f147:	mov    eax,DWORD PTR [r13+0x3c]
  41f14b:	add    eax,0x1
  41f14e:	mov    DWORD PTR [rbx+0x3c],eax
  41f151:	jmp    41f167 <isspace@plt+0x1b857>
  41f153:	mov    QWORD PTR [rbx+0x48],r13
  41f157:	mov    QWORD PTR [rbx+0x50],rbp
  41f15b:	test   r13,r13
  41f15e:	jne    41f143 <isspace@plt+0x1b833>
  41f160:	mov    QWORD PTR [r15+0xf8],rbx
  41f167:	mov    QWORD PTR [r15+0xa0],rbx
  41f16e:	add    DWORD PTR [r15+0xb0],0x1
  41f176:	mov    rdi,QWORD PTR [r15+0xa8]
  41f17d:	call   41f450 <isspace@plt+0x1bb40>
  41f182:	mov    rdi,rbx
  41f185:	mov    rsi,r14
  41f188:	call   41ad90 <isspace@plt+0x17480>
  41f18d:	jmp    41effa <isspace@plt+0x1b6ea>
  41f192:	xor    r13d,r13d
  41f195:	cmp    rax,r14
  41f198:	je     41efe5 <isspace@plt+0x1b6d5>
  41f19e:	jmp    41f113 <isspace@plt+0x1b803>
  41f1a3:	call   403280 <__stack_chk_fail@plt>
  41f1a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f1b0:	push   rax
  41f1b1:	mov    rax,QWORD PTR fs:0x28
  41f1ba:	mov    QWORD PTR [rsp],rax
  41f1be:	mov    edx,0x1
  41f1c3:	call   41ef40 <isspace@plt+0x1b630>
  41f1c8:	mov    rcx,QWORD PTR fs:0x28
  41f1d1:	cmp    rcx,QWORD PTR [rsp]
  41f1d5:	jne    41f1d9 <isspace@plt+0x1b8c9>
  41f1d7:	pop    rcx
  41f1d8:	ret    
  41f1d9:	call   403280 <__stack_chk_fail@plt>
  41f1de:	xchg   ax,ax
  41f1e0:	push   rax
  41f1e1:	mov    rax,QWORD PTR fs:0x28
  41f1ea:	mov    QWORD PTR [rsp],rax
  41f1ee:	mov    eax,DWORD PTR [rdi+0xb0]
  41f1f4:	mov    rcx,QWORD PTR fs:0x28
  41f1fd:	cmp    rcx,QWORD PTR [rsp]
  41f201:	jne    41f205 <isspace@plt+0x1b8f5>
  41f203:	pop    rcx
  41f204:	ret    
  41f205:	call   403280 <__stack_chk_fail@plt>
  41f20a:	nop    WORD PTR [rax+rax*1+0x0]
  41f210:	push   rax
  41f211:	mov    rax,QWORD PTR fs:0x28
  41f21a:	mov    QWORD PTR [rsp],rax
  41f21e:	mov    eax,DWORD PTR [rdi+0x3c]
  41f221:	mov    rcx,QWORD PTR fs:0x28
  41f22a:	cmp    rcx,QWORD PTR [rsp]
  41f22e:	jne    41f232 <isspace@plt+0x1b922>
  41f230:	pop    rcx
  41f231:	ret    
  41f232:	call   403280 <__stack_chk_fail@plt>
  41f237:	nop    WORD PTR [rax+rax*1+0x0]
  41f240:	push   rbp
  41f241:	push   r15
  41f243:	push   r14
  41f245:	push   r13
  41f247:	push   r12
  41f249:	push   rbx
  41f24a:	push   rax
  41f24b:	mov    rax,QWORD PTR fs:0x28
  41f254:	mov    QWORD PTR [rsp],rax
  41f258:	mov    rbx,QWORD PTR [rdi+0xf8]
  41f25f:	test   rbx,rbx
  41f262:	je     41f2b9 <isspace@plt+0x1b9a9>
  41f264:	mov    r14,QWORD PTR [rdi]
  41f267:	xor    r15d,r15d
  41f26a:	mov    r12d,0x1
  41f270:	xor    ebp,ebp
  41f272:	xor    r13d,r13d
  41f275:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f27f:	nop
  41f280:	mov    rsi,QWORD PTR [rbx]
  41f283:	mov    rax,QWORD PTR [rbx+0x40]
  41f287:	mov    rdi,QWORD PTR [rax]
  41f28a:	call   411060 <isspace@plt+0xd750>
  41f28f:	mov    rdi,r14
  41f292:	mov    rsi,rax
  41f295:	call   410db0 <isspace@plt+0xd4a0>
  41f29a:	add    ebp,0x1
  41f29d:	cmp    rax,r13
  41f2a0:	cmovne ebp,r12d
  41f2a4:	cmp    ebp,r15d
  41f2a7:	cmovge r15d,ebp
  41f2ab:	mov    rbx,QWORD PTR [rbx+0x50]
  41f2af:	mov    r13,rax
  41f2b2:	test   rbx,rbx
  41f2b5:	jne    41f280 <isspace@plt+0x1b970>
  41f2b7:	jmp    41f2bc <isspace@plt+0x1b9ac>
  41f2b9:	xor    r15d,r15d
  41f2bc:	mov    rax,QWORD PTR fs:0x28
  41f2c5:	cmp    rax,QWORD PTR [rsp]
  41f2c9:	jne    41f2dd <isspace@plt+0x1b9cd>
  41f2cb:	mov    eax,r15d
  41f2ce:	add    rsp,0x8
  41f2d2:	pop    rbx
  41f2d3:	pop    r12
  41f2d5:	pop    r13
  41f2d7:	pop    r14
  41f2d9:	pop    r15
  41f2db:	pop    rbp
  41f2dc:	ret    
  41f2dd:	call   403280 <__stack_chk_fail@plt>
  41f2e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f2ec:	nop    DWORD PTR [rax+0x0]
  41f2f0:	push   rbp
  41f2f1:	push   r15
  41f2f3:	push   r14
  41f2f5:	push   r13
  41f2f7:	push   r12
  41f2f9:	push   rbx
  41f2fa:	push   rax
  41f2fb:	mov    rax,QWORD PTR fs:0x28
  41f304:	mov    QWORD PTR [rsp],rax
  41f308:	mov    rbx,QWORD PTR [rdi+0xf8]
  41f30f:	xor    r15d,r15d
  41f312:	test   rbx,rbx
  41f315:	je     41f365 <isspace@plt+0x1ba55>
  41f317:	mov    r14d,esi
  41f31a:	mov    r12,QWORD PTR [rdi]
  41f31d:	xor    r13d,r13d
  41f320:	xor    ebp,ebp
  41f322:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f32c:	nop    DWORD PTR [rax+0x0]
  41f330:	mov    rsi,QWORD PTR [rbx]
  41f333:	mov    rax,QWORD PTR [rbx+0x40]
  41f337:	mov    rdi,QWORD PTR [rax]
  41f33a:	call   411060 <isspace@plt+0xd750>
  41f33f:	mov    rdi,r12
  41f342:	mov    rsi,rax
  41f345:	call   410db0 <isspace@plt+0xd4a0>
  41f34a:	add    ebp,0x1
  41f34d:	cmp    rax,r13
  41f350:	cmovne ebp,r15d
  41f354:	cmp    ebp,r14d
  41f357:	je     41f367 <isspace@plt+0x1ba57>
  41f359:	mov    rbx,QWORD PTR [rbx+0x50]
  41f35d:	mov    r13,rax
  41f360:	test   rbx,rbx
  41f363:	jne    41f330 <isspace@plt+0x1ba20>
  41f365:	xor    ebx,ebx
  41f367:	mov    rax,QWORD PTR fs:0x28
  41f370:	cmp    rax,QWORD PTR [rsp]
  41f374:	jne    41f388 <isspace@plt+0x1ba78>
  41f376:	mov    rax,rbx
  41f379:	add    rsp,0x8
  41f37d:	pop    rbx
  41f37e:	pop    r12
  41f380:	pop    r13
  41f382:	pop    r14
  41f384:	pop    r15
  41f386:	pop    rbp
  41f387:	ret    
  41f388:	call   403280 <__stack_chk_fail@plt>
  41f38d:	nop    DWORD PTR [rax]
  41f390:	push   rbp
  41f391:	push   r15
  41f393:	push   r14
  41f395:	push   r13
  41f397:	push   r12
  41f399:	push   rbx
  41f39a:	push   rax
  41f39b:	mov    r14d,esi
  41f39e:	mov    rax,QWORD PTR fs:0x28
  41f3a7:	mov    QWORD PTR [rsp],rax
  41f3ab:	mov    rax,QWORD PTR [rdi+0x40]
  41f3af:	mov    r15,QWORD PTR [rax]
  41f3b2:	test   rdi,rdi
  41f3b5:	je     41f3da <isspace@plt+0x1baca>
  41f3b7:	mov    rbx,rdi
  41f3ba:	mov    rsi,QWORD PTR [rdi]
  41f3bd:	mov    rdi,r15
  41f3c0:	call   411060 <isspace@plt+0xd750>
  41f3c5:	mov    rdi,r15
  41f3c8:	mov    rsi,rax
  41f3cb:	call   410db0 <isspace@plt+0xd4a0>
  41f3d0:	mov    r12,rax
  41f3d3:	mov    ebp,0x80000000
  41f3d8:	jmp    41f3eb <isspace@plt+0x1badb>
  41f3da:	mov    rbx,QWORD PTR [rax+0xf8]
  41f3e1:	xor    r12d,r12d
  41f3e4:	test   rbx,rbx
  41f3e7:	je     41f425 <isspace@plt+0x1bb15>
  41f3e9:	xor    ebp,ebp
  41f3eb:	xor    r13d,r13d
  41f3ee:	xchg   ax,ax
  41f3f0:	mov    rsi,QWORD PTR [rbx]
  41f3f3:	mov    rax,QWORD PTR [rbx+0x40]
  41f3f7:	mov    rdi,QWORD PTR [rax]
  41f3fa:	call   411060 <isspace@plt+0xd750>
  41f3ff:	mov    rdi,r15
  41f402:	mov    rsi,rax
  41f405:	call   410db0 <isspace@plt+0xd4a0>
  41f40a:	add    ebp,0x1
  41f40d:	cmp    rax,r12
  41f410:	cmovne ebp,r13d
  41f414:	cmp    ebp,r14d
  41f417:	je     41f427 <isspace@plt+0x1bb17>
  41f419:	mov    rbx,QWORD PTR [rbx+0x50]
  41f41d:	mov    r12,rax
  41f420:	test   rbx,rbx
  41f423:	jne    41f3f0 <isspace@plt+0x1bae0>
  41f425:	xor    ebx,ebx
  41f427:	mov    rax,QWORD PTR fs:0x28
  41f430:	cmp    rax,QWORD PTR [rsp]
  41f434:	jne    41f448 <isspace@plt+0x1bb38>
  41f436:	mov    rax,rbx
  41f439:	add    rsp,0x8
  41f43d:	pop    rbx
  41f43e:	pop    r12
  41f440:	pop    r13
  41f442:	pop    r14
  41f444:	pop    r15
  41f446:	pop    rbp
  41f447:	ret    
  41f448:	call   403280 <__stack_chk_fail@plt>
  41f44d:	nop    DWORD PTR [rax]
  41f450:	push   rbp
  41f451:	push   r14
  41f453:	push   rbx
  41f454:	sub    rsp,0x10
  41f458:	mov    rax,QWORD PTR fs:0x28
  41f461:	mov    QWORD PTR [rsp+0x8],rax
  41f466:	mov    bpl,0x1
  41f469:	test   rdi,rdi
  41f46c:	je     41f53c <isspace@plt+0x1bc2c>
  41f472:	mov    rbx,QWORD PTR [rdi+0x40]
  41f476:	mov    rcx,QWORD PTR [rbx+0xf8]
  41f47d:	test   rcx,rcx
  41f480:	je     41f53a <isspace@plt+0x1bc2a>
  41f486:	cmp    QWORD PTR [rcx+0x50],0x0
  41f48b:	je     41f53a <isspace@plt+0x1bc2a>
  41f491:	mov    rax,QWORD PTR [rdi+0x50]
  41f495:	test   rax,rax
  41f498:	je     41f4ad <isspace@plt+0x1bb9d>
  41f49a:	mov    rdx,rax
  41f49d:	nop    DWORD PTR [rax]
  41f4a0:	add    DWORD PTR [rdx+0x3c],0xffffffff
  41f4a4:	mov    rdx,QWORD PTR [rdx+0x50]
  41f4a8:	test   rdx,rdx
  41f4ab:	jne    41f4a0 <isspace@plt+0x1bb90>
  41f4ad:	mov    rdx,QWORD PTR [rdi+0x48]
  41f4b1:	test   rdx,rdx
  41f4b4:	je     41f4be <isspace@plt+0x1bbae>
  41f4b6:	mov    QWORD PTR [rdx+0x50],rax
  41f4ba:	mov    rax,QWORD PTR [rdi+0x50]
  41f4be:	test   rax,rax
  41f4c1:	je     41f4c7 <isspace@plt+0x1bbb7>
  41f4c3:	mov    QWORD PTR [rax+0x48],rdx
  41f4c7:	cmp    rcx,rdi
  41f4ca:	je     41f557 <isspace@plt+0x1bc47>
  41f4d0:	cmp    QWORD PTR [rbx+0x98],rdi
  41f4d7:	je     41f56b <isspace@plt+0x1bc5b>
  41f4dd:	cmp    QWORD PTR [rbx+0xa8],rdi
  41f4e4:	je     41f58b <isspace@plt+0x1bc7b>
  41f4ea:	cmp    QWORD PTR [rbx+0xa0],rdi
  41f4f1:	je     41f5a3 <isspace@plt+0x1bc93>
  41f4f7:	add    DWORD PTR [rbx+0xb0],0xffffffff
  41f4fe:	call   4030d0 <free@plt>
  41f503:	mov    rbx,QWORD PTR [rbx+0x98]
  41f50a:	test   rbx,rbx
  41f50d:	je     41f53c <isspace@plt+0x1bc2c>
  41f50f:	mov    rax,QWORD PTR [rbx+0x40]
  41f513:	mov    QWORD PTR [rax+0x98],rbx
  41f51a:	mov    rsi,QWORD PTR [rbx]
  41f51d:	mov    r14,QWORD PTR [rbx+0x8]
  41f521:	mov    rdi,QWORD PTR [rax]
  41f524:	call   411060 <isspace@plt+0xd750>
  41f529:	mov    rdi,rbx
  41f52c:	mov    rsi,rax
  41f52f:	call   41ad90 <isspace@plt+0x17480>
  41f534:	mov    QWORD PTR [rbx+0x8],r14
  41f538:	jmp    41f53c <isspace@plt+0x1bc2c>
  41f53a:	xor    ebp,ebp
  41f53c:	mov    rax,QWORD PTR fs:0x28
  41f545:	cmp    rax,QWORD PTR [rsp+0x8]
  41f54a:	jne    41f5ba <isspace@plt+0x1bcaa>
  41f54c:	mov    eax,ebp
  41f54e:	add    rsp,0x10
  41f552:	pop    rbx
  41f553:	pop    r14
  41f555:	pop    rbp
  41f556:	ret    
  41f557:	mov    QWORD PTR [rbx+0xf8],rax
  41f55e:	cmp    QWORD PTR [rbx+0x98],rdi
  41f565:	jne    41f4dd <isspace@plt+0x1bbcd>
  41f56b:	mov    rcx,rax
  41f56e:	test   rax,rax
  41f571:	jne    41f577 <isspace@plt+0x1bc67>
  41f573:	mov    rcx,QWORD PTR [rdi+0x48]
  41f577:	mov    QWORD PTR [rbx+0x98],rcx
  41f57e:	cmp    QWORD PTR [rbx+0xa8],rdi
  41f585:	jne    41f4ea <isspace@plt+0x1bbda>
  41f58b:	mov    QWORD PTR [rbx+0xa8],0x0
  41f596:	cmp    QWORD PTR [rbx+0xa0],rdi
  41f59d:	jne    41f4f7 <isspace@plt+0x1bbe7>
  41f5a3:	mov    rcx,QWORD PTR [rdi+0x48]
  41f5a7:	test   rcx,rcx
  41f5aa:	cmovne rax,rcx
  41f5ae:	mov    QWORD PTR [rbx+0xa0],rax
  41f5b5:	jmp    41f4f7 <isspace@plt+0x1bbe7>
  41f5ba:	call   403280 <__stack_chk_fail@plt>
  41f5bf:	nop
  41f5c0:	push   r14
  41f5c2:	push   rbx
  41f5c3:	push   rax
  41f5c4:	mov    rax,QWORD PTR fs:0x28
  41f5cd:	mov    QWORD PTR [rsp],rax
  41f5d1:	test   rdi,rdi
  41f5d4:	je     41f602 <isspace@plt+0x1bcf2>
  41f5d6:	mov    rbx,rdi
  41f5d9:	mov    rax,QWORD PTR [rdi+0x40]
  41f5dd:	mov    QWORD PTR [rax+0x98],rdi
  41f5e4:	mov    rsi,QWORD PTR [rdi]
  41f5e7:	mov    r14,QWORD PTR [rdi+0x8]
  41f5eb:	mov    rdi,QWORD PTR [rax]
  41f5ee:	call   411060 <isspace@plt+0xd750>
  41f5f3:	mov    rdi,rbx
  41f5f6:	mov    rsi,rax
  41f5f9:	call   41ad90 <isspace@plt+0x17480>
  41f5fe:	mov    QWORD PTR [rbx+0x8],r14
  41f602:	mov    rax,QWORD PTR fs:0x28
  41f60b:	cmp    rax,QWORD PTR [rsp]
  41f60f:	jne    41f619 <isspace@plt+0x1bd09>
  41f611:	add    rsp,0x8
  41f615:	pop    rbx
  41f616:	pop    r14
  41f618:	ret    
  41f619:	call   403280 <__stack_chk_fail@plt>
  41f61e:	xchg   ax,ax
  41f620:	push   rbx
  41f621:	sub    rsp,0x10
  41f625:	mov    rbx,rdi
  41f628:	mov    rax,QWORD PTR fs:0x28
  41f631:	mov    QWORD PTR [rsp+0x8],rax
  41f636:	call   41f450 <isspace@plt+0x1bb40>
  41f63b:	mov    ecx,eax
  41f63d:	mov    al,0x1
  41f63f:	test   cl,cl
  41f641:	jne    41f66e <isspace@plt+0x1bd5e>
  41f643:	mov    rcx,QWORD PTR [rbx+0x40]
  41f647:	cmp    QWORD PTR [rcx+0xa8],0x0
  41f64f:	je     41f655 <isspace@plt+0x1bd45>
  41f651:	xor    eax,eax
  41f653:	jmp    41f66e <isspace@plt+0x1bd5e>
  41f655:	mov    BYTE PTR [rbx+0x10],0x0
  41f659:	mov    rdx,QWORD PTR [rbx]
  41f65c:	mov    QWORD PTR [rbx+0x8],rdx
  41f660:	mov    BYTE PTR [rcx+0x104],0x1
  41f667:	mov    QWORD PTR [rcx+0xa8],rbx
  41f66e:	mov    rcx,QWORD PTR fs:0x28
  41f677:	cmp    rcx,QWORD PTR [rsp+0x8]
  41f67c:	jne    41f684 <isspace@plt+0x1bd74>
  41f67e:	add    rsp,0x10
  41f682:	pop    rbx
  41f683:	ret    
  41f684:	call   403280 <__stack_chk_fail@plt>
  41f689:	nop    DWORD PTR [rax+0x0]
  41f690:	push   rax
  41f691:	mov    rax,QWORD PTR fs:0x28
  41f69a:	mov    QWORD PTR [rsp],rax
  41f69e:	mov    BYTE PTR [rdi+0x10],0x0
  41f6a2:	mov    rax,QWORD PTR [rdi]
  41f6a5:	mov    rcx,QWORD PTR [rdi+0x40]
  41f6a9:	mov    QWORD PTR [rdi+0x8],rax
  41f6ad:	mov    BYTE PTR [rcx+0x104],0x1
  41f6b4:	mov    rax,QWORD PTR fs:0x28
  41f6bd:	cmp    rax,QWORD PTR [rsp]
  41f6c1:	jne    41f6c5 <isspace@plt+0x1bdb5>
  41f6c3:	pop    rax
  41f6c4:	ret    
  41f6c5:	call   403280 <__stack_chk_fail@plt>
  41f6ca:	nop    WORD PTR [rax+rax*1+0x0]
  41f6d0:	push   rax
  41f6d1:	mov    rax,QWORD PTR fs:0x28
  41f6da:	mov    QWORD PTR [rsp],rax
  41f6de:	mov    rax,QWORD PTR [rdi+0xa8]
  41f6e5:	mov    QWORD PTR [rdi+0xa8],0x0
  41f6f0:	mov    rcx,QWORD PTR fs:0x28
  41f6f9:	cmp    rcx,QWORD PTR [rsp]
  41f6fd:	jne    41f701 <isspace@plt+0x1bdf1>
  41f6ff:	pop    rcx
  41f700:	ret    
  41f701:	call   403280 <__stack_chk_fail@plt>
  41f706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f710:	push   rax
  41f711:	mov    rax,QWORD PTR fs:0x28
  41f71a:	mov    QWORD PTR [rsp],rax
  41f71e:	add    DWORD PTR [rdi+0x100],0x1
  41f725:	mov    rax,QWORD PTR [rdi+0xf8]
  41f72c:	mov    rcx,QWORD PTR fs:0x28
  41f735:	cmp    rcx,QWORD PTR [rsp]
  41f739:	jne    41f73d <isspace@plt+0x1be2d>
  41f73b:	pop    rcx
  41f73c:	ret    
  41f73d:	call   403280 <__stack_chk_fail@plt>
  41f742:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f74c:	nop    DWORD PTR [rax+0x0]
  41f750:	push   rax
  41f751:	mov    rax,QWORD PTR fs:0x28
  41f75a:	mov    QWORD PTR [rsp],rax
  41f75e:	add    DWORD PTR [rdi+0x100],0x1
  41f765:	mov    rax,QWORD PTR [rdi+0x98]
  41f76c:	mov    rcx,QWORD PTR fs:0x28
  41f775:	cmp    rcx,QWORD PTR [rsp]
  41f779:	jne    41f77d <isspace@plt+0x1be6d>
  41f77b:	pop    rcx
  41f77c:	ret    
  41f77d:	call   403280 <__stack_chk_fail@plt>
  41f782:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f78c:	nop    DWORD PTR [rax+0x0]
  41f790:	push   rax
  41f791:	mov    rax,QWORD PTR fs:0x28
  41f79a:	mov    QWORD PTR [rsp],rax
  41f79e:	mov    rax,QWORD PTR [rdi+0x40]
  41f7a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f7ac:	nop    DWORD PTR [rax+0x0]
  41f7b0:	mov    rdi,QWORD PTR [rdi+0x48]
  41f7b4:	test   rdi,rdi
  41f7b7:	je     41f7c6 <isspace@plt+0x1beb6>
  41f7b9:	mov    ecx,DWORD PTR [rdi+0x38]
  41f7bc:	cmp    ecx,DWORD PTR [rax+0x100]
  41f7c2:	je     41f7b0 <isspace@plt+0x1bea0>
  41f7c4:	jmp    41f7cd <isspace@plt+0x1bebd>
  41f7c6:	add    DWORD PTR [rax+0x100],0x1
  41f7cd:	mov    rax,QWORD PTR fs:0x28
  41f7d6:	cmp    rax,QWORD PTR [rsp]
  41f7da:	jne    41f7e1 <isspace@plt+0x1bed1>
  41f7dc:	mov    rax,rdi
  41f7df:	pop    rcx
  41f7e0:	ret    
  41f7e1:	call   403280 <__stack_chk_fail@plt>
  41f7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f7f0:	push   rax
  41f7f1:	mov    rax,QWORD PTR fs:0x28
  41f7fa:	mov    QWORD PTR [rsp],rax
  41f7fe:	mov    rax,QWORD PTR [rdi+0x40]
  41f802:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f80c:	nop    DWORD PTR [rax+0x0]
  41f810:	mov    rdi,QWORD PTR [rdi+0x50]
  41f814:	test   rdi,rdi
  41f817:	je     41f826 <isspace@plt+0x1bf16>
  41f819:	mov    ecx,DWORD PTR [rdi+0x38]
  41f81c:	cmp    ecx,DWORD PTR [rax+0x100]
  41f822:	je     41f810 <isspace@plt+0x1bf00>
  41f824:	jmp    41f82d <isspace@plt+0x1bf1d>
  41f826:	add    DWORD PTR [rax+0x100],0x1
  41f82d:	mov    rax,QWORD PTR fs:0x28
  41f836:	cmp    rax,QWORD PTR [rsp]
  41f83a:	jne    41f841 <isspace@plt+0x1bf31>
  41f83c:	mov    rax,rdi
  41f83f:	pop    rcx
  41f840:	ret    
  41f841:	call   403280 <__stack_chk_fail@plt>
  41f846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f850:	push   rbx
  41f851:	sub    rsp,0x10
  41f855:	mov    rbx,rdi
  41f858:	mov    rax,QWORD PTR fs:0x28
  41f861:	mov    QWORD PTR [rsp+0x8],rax
  41f866:	mov    rsi,QWORD PTR [rdi]
  41f869:	mov    rax,QWORD PTR [rdi+0x40]
  41f86d:	mov    rdi,QWORD PTR [rax]
  41f870:	call   411060 <isspace@plt+0xd750>
  41f875:	mov    rcx,QWORD PTR [rbx+0x40]
  41f879:	mov    rdi,QWORD PTR [rcx]
  41f87c:	mov    rsi,rax
  41f87f:	call   410db0 <isspace@plt+0xd4a0>
  41f884:	mov    rcx,QWORD PTR fs:0x28
  41f88d:	cmp    rcx,QWORD PTR [rsp+0x8]
  41f892:	jne    41f89a <isspace@plt+0x1bf8a>
  41f894:	add    rsp,0x10
  41f898:	pop    rbx
  41f899:	ret    
  41f89a:	call   403280 <__stack_chk_fail@plt>
  41f89f:	nop
  41f8a0:	push   rbx
  41f8a1:	sub    rsp,0x10
  41f8a5:	mov    rbx,rdi
  41f8a8:	mov    rax,QWORD PTR fs:0x28
  41f8b1:	mov    QWORD PTR [rsp+0x8],rax
  41f8b6:	mov    rsi,QWORD PTR [rdi]
  41f8b9:	mov    rax,QWORD PTR [rdi+0x40]
  41f8bd:	mov    rdi,QWORD PTR [rax]
  41f8c0:	call   411060 <isspace@plt+0xd750>
  41f8c5:	mov    rcx,QWORD PTR [rbx+0x40]
  41f8c9:	mov    rdi,QWORD PTR [rcx]
  41f8cc:	mov    rsi,rax
  41f8cf:	call   4138e0 <isspace@plt+0xffd0>
  41f8d4:	mov    rcx,QWORD PTR fs:0x28
  41f8dd:	cmp    rcx,QWORD PTR [rsp+0x8]
  41f8e2:	jne    41f8ef <isspace@plt+0x1bfdf>
  41f8e4:	add    eax,0x1
  41f8e7:	cdqe   
  41f8e9:	add    rsp,0x10
  41f8ed:	pop    rbx
  41f8ee:	ret    
  41f8ef:	call   403280 <__stack_chk_fail@plt>
  41f8f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f8fe:	xchg   ax,ax
  41f900:	push   rax
  41f901:	mov    rax,QWORD PTR fs:0x28
  41f90a:	mov    QWORD PTR [rsp],rax
  41f90e:	cmp    QWORD PTR [rdi+0x30],0x0
  41f913:	je     41f91a <isspace@plt+0x1c00a>
  41f915:	mov    eax,DWORD PTR [rdi+0x24]
  41f918:	jmp    41f91f <isspace@plt+0x1c00f>
  41f91a:	mov    eax,0xffffffff
  41f91f:	mov    rcx,QWORD PTR fs:0x28
  41f928:	cmp    rcx,QWORD PTR [rsp]
  41f92c:	jne    41f930 <isspace@plt+0x1c020>
  41f92e:	pop    rcx
  41f92f:	ret    
  41f930:	call   403280 <__stack_chk_fail@plt>
  41f935:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f93f:	nop
  41f940:	push   rbp
  41f941:	push   r15
  41f943:	push   r14
  41f945:	push   rbx
  41f946:	sub    rsp,0x38
  41f94a:	mov    rax,QWORD PTR fs:0x28
  41f953:	mov    QWORD PTR [rsp+0x30],rax
  41f958:	mov    r15d,0xffffffff
  41f95e:	test   esi,esi
  41f960:	js     41fc52 <isspace@plt+0x1c342>
  41f966:	mov    r14,rdi
  41f969:	mov    rdx,QWORD PTR [rdi+0x30]
  41f96d:	test   rdx,rdx
  41f970:	je     41fc52 <isspace@plt+0x1c342>
  41f976:	mov    r8,QWORD PTR [r14+0x40]
  41f97a:	mov    rbx,QWORD PTR [r8+0x50]
  41f97e:	mov    rax,QWORD PTR [r8+0x80]
  41f985:	xor    ecx,ecx
  41f987:	test   rax,rax
  41f98a:	je     41f9b5 <isspace@plt+0x1c0a5>
  41f98c:	cmp    rax,rdx
  41f98f:	je     41f9b5 <isspace@plt+0x1c0a5>
  41f991:	xor    ecx,ecx
  41f993:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f99d:	nop    DWORD PTR [rax]
  41f9a0:	add    rbx,QWORD PTR [rax+0x10]
  41f9a4:	add    ecx,0x1
  41f9a7:	mov    rax,QWORD PTR [rax+0x8]
  41f9ab:	test   rax,rax
  41f9ae:	je     41f9b5 <isspace@plt+0x1c0a5>
  41f9b0:	cmp    rax,rdx
  41f9b3:	jne    41f9a0 <isspace@plt+0x1c090>
  41f9b5:	test   esi,esi
  41f9b7:	jle    41fb5d <isspace@plt+0x1c24d>
  41f9bd:	movsxd rax,esi
  41f9c0:	lea    rdi,[rax+rax*2]
  41f9c4:	lea    rsi,[rax+0x1]
  41f9c8:	shl    rdi,0x4
  41f9cc:	lea    rax,[rdx+rdi*1]
  41f9d0:	add    rax,0x38
  41f9d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f9de:	xchg   ax,ax
  41f9e0:	cmp    QWORD PTR [rax],0x0
  41f9e4:	jne    41f9f4 <isspace@plt+0x1c0e4>
  41f9e6:	add    rsi,0xffffffffffffffff
  41f9ea:	add    rax,0xffffffffffffffd0
  41f9ee:	cmp    rsi,0x1
  41f9f2:	jg     41f9e0 <isspace@plt+0x1c0d0>
  41f9f4:	add    esi,0xffffffff
  41f9f7:	test   esi,esi
  41f9f9:	jle    41fb5d <isspace@plt+0x1c24d>
  41f9ff:	mov    edi,esi
  41fa01:	cmp    esi,0x11
  41fa04:	jae    41fa0d <isspace@plt+0x1c0fd>
  41fa06:	xor    eax,eax
  41fa08:	jmp    41fb37 <isspace@plt+0x1c227>
  41fa0d:	mov    eax,edi
  41fa0f:	and    eax,0xf
  41fa12:	test   rax,rax
  41fa15:	mov    ebp,0x10
  41fa1a:	cmovne rbp,rax
  41fa1e:	mov    rax,rdi
  41fa21:	sub    rax,rbp
  41fa24:	vmovq  xmm0,rbx
  41fa29:	vpxor  xmm1,xmm1,xmm1
  41fa2d:	vmovdqa ymm2,YMMWORD PTR [rip+0x121ab]        # 431be0 <isspace@plt+0x2e2d0>
  41fa35:	vpbroadcastq ymm3,QWORD PTR [rip+0x121c2]        # 431c00 <isspace@plt+0x2e2f0>
  41fa3e:	vpbroadcastq ymm4,QWORD PTR [rip+0x121c1]        # 431c08 <isspace@plt+0x2e2f8>
  41fa47:	vmovdqu YMMWORD PTR [rsp],ymm4
  41fa4c:	vpbroadcastq ymm5,QWORD PTR [rip+0x121bb]        # 431c10 <isspace@plt+0x2e300>
  41fa55:	vpbroadcastq ymm6,QWORD PTR [rip+0x121ba]        # 431c18 <isspace@plt+0x2e308>
  41fa5e:	vpbroadcastq ymm7,QWORD PTR [rip+0x121b9]        # 431c20 <isspace@plt+0x2e310>
  41fa67:	vpbroadcastq ymm8,QWORD PTR [rip+0x121b8]        # 431c28 <isspace@plt+0x2e318>
  41fa70:	mov    rbp,rax
  41fa73:	vpxor  xmm9,xmm9,xmm9
  41fa78:	vpxor  xmm10,xmm10,xmm10
  41fa7d:	nop    DWORD PTR [rax]
  41fa80:	vpmuludq ymm11,ymm2,ymm3
  41fa84:	vpsrlq ymm12,ymm2,0x20
  41fa89:	vpmuludq ymm12,ymm12,ymm3
  41fa8d:	vpsllq ymm12,ymm12,0x20
  41fa93:	vmovq  xmm4,rdx
  41fa98:	vpbroadcastq ymm4,xmm4
  41fa9d:	vpaddq ymm4,ymm11,ymm4
  41faa1:	vpaddq ymm4,ymm12,ymm4
  41faa5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41faaa:	vpaddq ymm12,ymm4,ymm6
  41faae:	vpaddq ymm14,ymm4,ymm7
  41fab2:	vpaddq ymm4,ymm4,ymm8
  41fab7:	vpcmpeqd ymm15,ymm15,ymm15
  41fabc:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41fac6:	vpcmpeqd ymm11,ymm11,ymm11
  41facb:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41fad5:	vpcmpeqd ymm11,ymm11,ymm11
  41fada:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41fae4:	vpcmpeqd ymm11,ymm11,ymm11
  41fae9:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41faf3:	vpaddq ymm0,ymm13,ymm0
  41faf7:	vpaddq ymm1,ymm15,ymm1
  41fafb:	vpaddq ymm9,ymm12,ymm9
  41fb00:	vpaddq ymm10,ymm14,ymm10
  41fb05:	vpaddq ymm2,ymm2,ymm5
  41fb09:	add    rbp,0xfffffffffffffff0
  41fb0d:	jne    41fa80 <isspace@plt+0x1c170>
  41fb13:	vpaddq ymm0,ymm1,ymm0
  41fb17:	vpaddq ymm0,ymm9,ymm0
  41fb1b:	vpaddq ymm0,ymm10,ymm0
  41fb1f:	vextracti128 xmm1,ymm0,0x1
  41fb25:	vpaddq ymm0,ymm0,ymm1
  41fb29:	vpshufd xmm1,xmm0,0x4e
  41fb2e:	vpaddq ymm0,ymm0,ymm1
  41fb32:	vmovq  rbx,xmm0
  41fb37:	sub    rdi,rax
  41fb3a:	lea    rax,[rax+rax*2]
  41fb3e:	shl    rax,0x4
  41fb42:	add    rax,rdx
  41fb45:	add    rax,0x38
  41fb49:	nop    DWORD PTR [rax+0x0]
  41fb50:	add    rbx,QWORD PTR [rax]
  41fb53:	add    rax,0x30
  41fb57:	add    rdi,0xffffffffffffffff
  41fb5b:	jne    41fb50 <isspace@plt+0x1c240>
  41fb5d:	mov    DWORD PTR [r14+0x24],esi
  41fb61:	mov    DWORD PTR [r14+0x20],ecx
  41fb65:	mov    rdi,QWORD PTR [r8]
  41fb68:	mov    rsi,rbx
  41fb6b:	vzeroupper 
  41fb6e:	call   410fc0 <isspace@plt+0xd6b0>
  41fb73:	mov    QWORD PTR [r14],rax
  41fb76:	cmp    BYTE PTR [r14+0x10],0x0
  41fb7b:	je     41fbd7 <isspace@plt+0x1c2c7>
  41fb7d:	cmp    QWORD PTR [r14+0x18],rbx
  41fb81:	je     41fb8b <isspace@plt+0x1c27b>
  41fb83:	mov    DWORD PTR [r14+0x28],0x0
  41fb8b:	mov    QWORD PTR [r14+0x18],rbx
  41fb8f:	mov    rdi,QWORD PTR [r14+0x40]
  41fb93:	mov    rdx,QWORD PTR [rdi+0x50]
  41fb97:	cmp    rdx,rbx
  41fb9a:	ja     41fba2 <isspace@plt+0x1c292>
  41fb9c:	cmp    QWORD PTR [rdi+0x58],rbx
  41fba0:	jae    41fbe3 <isspace@plt+0x1c2d3>
  41fba2:	mov    QWORD PTR [r14+0x30],0x0
  41fbaa:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41fbb2:	cmp    QWORD PTR [rdi+0x98],r14
  41fbb9:	jne    41fc52 <isspace@plt+0x1c342>
  41fbbf:	mov    rax,QWORD PTR [rdi+0x80]
  41fbc6:	mov    QWORD PTR [r14+0x30],rax
  41fbca:	mov    QWORD PTR [r14+0x20],0x0
  41fbd2:	xor    r15d,r15d
  41fbd5:	jmp    41fc52 <isspace@plt+0x1c342>
  41fbd7:	mov    QWORD PTR [r14+0x8],rax
  41fbdb:	cmp    QWORD PTR [r14+0x18],rbx
  41fbdf:	jne    41fb83 <isspace@plt+0x1c273>
  41fbe1:	jmp    41fb8b <isspace@plt+0x1c27b>
  41fbe3:	mov    r11,QWORD PTR [rdi+0x80]
  41fbea:	test   r11,r11
  41fbed:	je     41fc2c <isspace@plt+0x1c31c>
  41fbef:	mov    rsi,QWORD PTR [rdi+0x88]
  41fbf6:	xor    r10d,r10d
  41fbf9:	nop    DWORD PTR [rax+0x0]
  41fc00:	cmp    rdx,rbx
  41fc03:	setb   cl
  41fc06:	cmp    r11,rsi
  41fc09:	je     41fc76 <isspace@plt+0x1c366>
  41fc0b:	cmp    rdx,rbx
  41fc0e:	jae    41fc76 <isspace@plt+0x1c366>
  41fc10:	mov    rax,QWORD PTR [r11+0x10]
  41fc14:	add    rax,rdx
  41fc17:	cmp    rax,rbx
  41fc1a:	ja     41fc74 <isspace@plt+0x1c364>
  41fc1c:	add    r10d,0x1
  41fc20:	mov    r11,QWORD PTR [r11+0x8]
  41fc24:	mov    rdx,rax
  41fc27:	test   r11,r11
  41fc2a:	jne    41fc00 <isspace@plt+0x1c2f0>
  41fc2c:	mov    r11,QWORD PTR [rdi+0x90]
  41fc33:	mov    r10d,DWORD PTR [rdi+0x4c]
  41fc37:	add    r10d,0xffffffff
  41fc3b:	xor    eax,eax
  41fc3d:	mov    QWORD PTR [r14+0x30],r11
  41fc41:	mov    DWORD PTR [r14+0x20],r10d
  41fc45:	mov    DWORD PTR [r14+0x24],eax
  41fc49:	call   41a4a0 <isspace@plt+0x16b90>
  41fc4e:	mov    r15d,DWORD PTR [r14+0x24]
  41fc52:	mov    rax,QWORD PTR fs:0x28
  41fc5b:	cmp    rax,QWORD PTR [rsp+0x30]
  41fc60:	jne    41fce9 <isspace@plt+0x1c3d9>
  41fc66:	mov    eax,r15d
  41fc69:	add    rsp,0x38
  41fc6d:	pop    rbx
  41fc6e:	pop    r14
  41fc70:	pop    r15
  41fc72:	pop    rbp
  41fc73:	ret    
  41fc74:	mov    cl,0x1
  41fc76:	mov    r8d,DWORD PTR [rdi+0x48]
  41fc7a:	mov    eax,DWORD PTR [r11+0x20]
  41fc7e:	cmp    r8d,eax
  41fc81:	cmovg  r8d,eax
  41fc85:	xor    eax,eax
  41fc87:	test   cl,cl
  41fc89:	je     41fc3d <isspace@plt+0x1c32d>
  41fc8b:	test   r8d,r8d
  41fc8e:	jle    41fc3d <isspace@plt+0x1c32d>
  41fc90:	movsxd rbp,r8d
  41fc93:	lea    r9,[r11+0x68]
  41fc97:	xor    eax,eax
  41fc99:	nop    DWORD PTR [rax+0x0]
  41fca0:	movsxd rsi,eax
  41fca3:	mov    rax,rsi
  41fca6:	shl    rax,0x4
  41fcaa:	lea    rcx,[rax+rax*2]
  41fcae:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41fcb3:	add    rsi,0x1
  41fcb7:	add    rcx,r9
  41fcba:	nop    WORD PTR [rax+rax*1+0x0]
  41fcc0:	mov    rax,rsi
  41fcc3:	cmp    rsi,rbp
  41fcc6:	jge    41fcd6 <isspace@plt+0x1c3c6>
  41fcc8:	lea    rsi,[rax+0x1]
  41fccc:	cmp    QWORD PTR [rcx],0x0
  41fcd0:	lea    rcx,[rcx+0x30]
  41fcd4:	je     41fcc0 <isspace@plt+0x1c3b0>
  41fcd6:	cmp    rdx,rbx
  41fcd9:	jae    41fc3d <isspace@plt+0x1c32d>
  41fcdf:	cmp    r8d,eax
  41fce2:	jg     41fca0 <isspace@plt+0x1c390>
  41fce4:	jmp    41fc3d <isspace@plt+0x1c32d>
  41fce9:	call   403280 <__stack_chk_fail@plt>
  41fcee:	xchg   ax,ax
  41fcf0:	push   rax
  41fcf1:	mov    rax,QWORD PTR fs:0x28
  41fcfa:	mov    QWORD PTR [rsp],rax
  41fcfe:	mov    BYTE PTR [rdi+0x10],sil
  41fd02:	mov    rax,QWORD PTR fs:0x28
  41fd0b:	cmp    rax,QWORD PTR [rsp]
  41fd0f:	jne    41fd13 <isspace@plt+0x1c403>
  41fd11:	pop    rax
  41fd12:	ret    
  41fd13:	call   403280 <__stack_chk_fail@plt>
  41fd18:	nop    DWORD PTR [rax+rax*1+0x0]
  41fd20:	push   rbx
  41fd21:	sub    rsp,0x10
  41fd25:	mov    rbx,rdi
  41fd28:	mov    rax,QWORD PTR fs:0x28
  41fd31:	mov    QWORD PTR [rsp+0x8],rax
  41fd36:	mov    rax,QWORD PTR [rdi]
  41fd39:	mov    rsi,QWORD PTR [rdi+0x8]
  41fd3d:	mov    QWORD PTR [rdi+0x8],rax
  41fd41:	mov    QWORD PTR [rdi],rsi
  41fd44:	mov    rax,QWORD PTR [rdi+0x40]
  41fd48:	mov    rdi,QWORD PTR [rax]
  41fd4b:	call   411060 <isspace@plt+0xd750>
  41fd50:	mov    rdi,rbx
  41fd53:	mov    rsi,rax
  41fd56:	call   41ad90 <isspace@plt+0x17480>
  41fd5b:	mov    rax,QWORD PTR fs:0x28
  41fd64:	cmp    rax,QWORD PTR [rsp+0x8]
  41fd69:	jne    41fd71 <isspace@plt+0x1c461>
  41fd6b:	add    rsp,0x10
  41fd6f:	pop    rbx
  41fd70:	ret    
  41fd71:	call   403280 <__stack_chk_fail@plt>
  41fd76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd80:	push   rax
  41fd81:	mov    rax,QWORD PTR fs:0x28
  41fd8a:	mov    QWORD PTR [rsp],rax
  41fd8e:	cmp    BYTE PTR [rdi+0x10],0x0
  41fd92:	setne  al
  41fd95:	mov    rcx,QWORD PTR fs:0x28
  41fd9e:	cmp    rcx,QWORD PTR [rsp]
  41fda2:	jne    41fda6 <isspace@plt+0x1c496>
  41fda4:	pop    rcx
  41fda5:	ret    
  41fda6:	call   403280 <__stack_chk_fail@plt>
  41fdab:	nop    DWORD PTR [rax+rax*1+0x0]
  41fdb0:	push   r14
  41fdb2:	push   rbx
  41fdb3:	push   rax
  41fdb4:	mov    r14,rdi
  41fdb7:	mov    rax,QWORD PTR fs:0x28
  41fdc0:	mov    QWORD PTR [rsp],rax
  41fdc4:	mov    rdi,QWORD PTR [rdi+0xf8]
  41fdcb:	test   rdi,rdi
  41fdce:	jne    41fe70 <isspace@plt+0x1c560>
  41fdd4:	jmp    41ff0b <isspace@plt+0x1c5fb>
  41fdd9:	nop    DWORD PTR [rax+0x0]
  41fde0:	mov    rax,rbx
  41fde3:	test   rax,rax
  41fde6:	jne    41feb7 <isspace@plt+0x1c5a7>
  41fdec:	jmp    41febb <isspace@plt+0x1c5ab>
  41fdf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fdfb:	nop    DWORD PTR [rax+rax*1+0x0]
  41fe00:	mov    QWORD PTR [rcx+0xf8],rax
  41fe07:	cmp    QWORD PTR [rcx+0x98],rdi
  41fe0e:	jne    41fed9 <isspace@plt+0x1c5c9>
  41fe14:	mov    rdx,rax
  41fe17:	test   rax,rax
  41fe1a:	jne    41fe20 <isspace@plt+0x1c510>
  41fe1c:	mov    rdx,QWORD PTR [rdi+0x48]
  41fe20:	mov    QWORD PTR [rcx+0x98],rdx
  41fe27:	cmp    QWORD PTR [rcx+0xa8],rdi
  41fe2e:	jne    41fee6 <isspace@plt+0x1c5d6>
  41fe34:	mov    QWORD PTR [rcx+0xa8],0x0
  41fe3f:	cmp    QWORD PTR [rcx+0xa0],rdi
  41fe46:	jne    41fef3 <isspace@plt+0x1c5e3>
  41fe4c:	mov    rdx,QWORD PTR [rdi+0x48]
  41fe50:	test   rdx,rdx
  41fe53:	cmovne rax,rdx
  41fe57:	mov    QWORD PTR [rcx+0xa0],rax
  41fe5e:	jmp    41fef3 <isspace@plt+0x1c5e3>
  41fe63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fe6d:	nop    DWORD PTR [rax]
  41fe70:	mov    rbx,QWORD PTR [rdi+0x50]
  41fe74:	cmp    rdi,QWORD PTR [r14+0x98]
  41fe7b:	je     41feff <isspace@plt+0x1c5ef>
  41fe81:	mov    rax,rbx
  41fe84:	test   rbx,rbx
  41fe87:	je     41fe9d <isspace@plt+0x1c58d>
  41fe89:	nop    DWORD PTR [rax+0x0]
  41fe90:	add    DWORD PTR [rax+0x3c],0xffffffff
  41fe94:	mov    rax,QWORD PTR [rax+0x50]
  41fe98:	test   rax,rax
  41fe9b:	jne    41fe90 <isspace@plt+0x1c580>
  41fe9d:	mov    rcx,QWORD PTR [rdi+0x48]
  41fea1:	test   rcx,rcx
  41fea4:	je     41fde0 <isspace@plt+0x1c4d0>
  41feaa:	mov    QWORD PTR [rcx+0x50],rbx
  41feae:	mov    rax,QWORD PTR [rdi+0x50]
  41feb2:	test   rax,rax
  41feb5:	je     41febb <isspace@plt+0x1c5ab>
  41feb7:	mov    QWORD PTR [rax+0x48],rcx
  41febb:	mov    rcx,QWORD PTR [rdi+0x40]
  41febf:	cmp    QWORD PTR [rcx+0xf8],rdi
  41fec6:	je     41fe00 <isspace@plt+0x1c4f0>
  41fecc:	cmp    QWORD PTR [rcx+0x98],rdi
  41fed3:	je     41fe14 <isspace@plt+0x1c504>
  41fed9:	cmp    QWORD PTR [rcx+0xa8],rdi
  41fee0:	je     41fe34 <isspace@plt+0x1c524>
  41fee6:	cmp    QWORD PTR [rcx+0xa0],rdi
  41feed:	je     41fe4c <isspace@plt+0x1c53c>
  41fef3:	add    DWORD PTR [rcx+0xb0],0xffffffff
  41fefa:	call   4030d0 <free@plt>
  41feff:	mov    rdi,rbx
  41ff02:	test   rbx,rbx
  41ff05:	jne    41fe70 <isspace@plt+0x1c560>
  41ff0b:	mov    rdi,r14
  41ff0e:	call   41a4a0 <isspace@plt+0x16b90>
  41ff13:	mov    rax,QWORD PTR fs:0x28
  41ff1c:	cmp    rax,QWORD PTR [rsp]
  41ff20:	jne    41ff2a <isspace@plt+0x1c61a>
  41ff22:	add    rsp,0x8
  41ff26:	pop    rbx
  41ff27:	pop    r14
  41ff29:	ret    
  41ff2a:	call   403280 <__stack_chk_fail@plt>
  41ff2f:	nop
  41ff30:	push   rax
  41ff31:	mov    rax,QWORD PTR fs:0x28
  41ff3a:	mov    QWORD PTR [rsp],rax
  41ff3e:	mov    rdi,QWORD PTR [rdi+0x98]
  41ff45:	call   41ff60 <isspace@plt+0x1c650>
  41ff4a:	mov    rcx,QWORD PTR fs:0x28
  41ff53:	cmp    rcx,QWORD PTR [rsp]
  41ff57:	jne    41ff5b <isspace@plt+0x1c64b>
  41ff59:	pop    rcx
  41ff5a:	ret    
  41ff5b:	call   403280 <__stack_chk_fail@plt>
  41ff60:	push   r15
  41ff62:	push   r14
  41ff64:	push   rbx
  41ff65:	sub    rsp,0x20
  41ff69:	mov    rax,QWORD PTR fs:0x28
  41ff72:	mov    QWORD PTR [rsp+0x18],rax
  41ff77:	test   rdi,rdi
  41ff7a:	je     41ffe2 <isspace@plt+0x1c6d2>
  41ff7c:	mov    rbx,rdi
  41ff7f:	mov    rsi,QWORD PTR [rdi+0x8]
  41ff83:	mov    rax,QWORD PTR [rdi+0x40]
  41ff87:	mov    r14,QWORD PTR [rax]
  41ff8a:	mov    rdi,r14
  41ff8d:	call   411060 <isspace@plt+0xd750>
  41ff92:	mov    r15,rax
  41ff95:	mov    rsi,QWORD PTR [rbx]
  41ff98:	mov    rdi,r14
  41ff9b:	call   411060 <isspace@plt+0xd750>
  41ffa0:	mov    rdi,r15
  41ffa3:	mov    rsi,rax
  41ffa6:	call   417690 <isspace@plt+0x13d80>
  41ffab:	mov    QWORD PTR [rsp+0x8],rax
  41ffb0:	mov    QWORD PTR [rsp+0x10],rdx
  41ffb5:	lea    rdi,[rsp+0x8]
  41ffba:	call   417400 <isspace@plt+0x13af0>
  41ffbf:	mov    rdx,QWORD PTR [rsp+0x10]
  41ffc4:	test   al,al
  41ffc6:	je     41ffdb <isspace@plt+0x1c6cb>
  41ffc8:	mov    rdi,r14
  41ffcb:	mov    rsi,rdx
  41ffce:	call   412fb0 <isspace@plt+0xf6a0>
  41ffd3:	mov    rdx,rax
  41ffd6:	mov    QWORD PTR [rsp+0x10],rax
  41ffdb:	mov    rax,QWORD PTR [rsp+0x8]
  41ffe0:	jmp    41ffe7 <isspace@plt+0x1c6d7>
  41ffe2:	call   4174c0 <isspace@plt+0x13bb0>
  41ffe7:	mov    rcx,QWORD PTR fs:0x28
  41fff0:	cmp    rcx,QWORD PTR [rsp+0x18]
  41fff5:	jne    420001 <isspace@plt+0x1c6f1>
  41fff7:	add    rsp,0x20
  41fffb:	pop    rbx
  41fffc:	pop    r14
  41fffe:	pop    r15
  420000:	ret    
  420001:	call   403280 <__stack_chk_fail@plt>
  420006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420010:	push   rbp
  420011:	push   r15
  420013:	push   r14
  420015:	push   r13
  420017:	push   r12
  420019:	push   rbx
  42001a:	push   rax
  42001b:	mov    rbx,rsi
  42001e:	mov    r14,rdi
  420021:	mov    rax,QWORD PTR fs:0x28
  42002a:	mov    QWORD PTR [rsp],rax
  42002e:	mov    rax,QWORD PTR [rdi+0x40]
  420032:	mov    r15,QWORD PTR [rax]
  420035:	mov    rdi,r15
  420038:	call   410a90 <isspace@plt+0xd180>
  42003d:	mov    r13,rax
  420040:	mov    rdi,rbx
  420043:	call   417400 <isspace@plt+0x13af0>
  420048:	test   al,al
  42004a:	je     4200ac <isspace@plt+0x1c79c>
  42004c:	cmp    QWORD PTR [rbx],r13
  42004f:	jae    4200ac <isspace@plt+0x1c79c>
  420051:	mov    rsi,QWORD PTR [r14+0x8]
  420055:	mov    rdi,r15
  420058:	call   411060 <isspace@plt+0xd750>
  42005d:	mov    r12,rax
  420060:	mov    rsi,QWORD PTR [r14]
  420063:	mov    rdi,r15
  420066:	call   411060 <isspace@plt+0xd750>
  42006b:	cmp    r12,0xffffffffffffffff
  42006f:	setne  cl
  420072:	cmp    r12,rax
  420075:	seta   bpl
  420079:	and    bpl,cl
  42007c:	mov    r12,QWORD PTR [rbx+0x8]
  420080:	cmp    r12,r13
  420083:	cmova  r12,r13
  420087:	cmp    QWORD PTR [rbx],r12
  42008a:	je     42009a <isspace@plt+0x1c78a>
  42008c:	mov    rdi,r15
  42008f:	mov    rsi,r12
  420092:	call   413010 <isspace@plt+0xf700>
  420097:	mov    r12,rax
  42009a:	test   bpl,bpl
  42009d:	je     4200b0 <isspace@plt+0x1c7a0>
  42009f:	mov    rsi,QWORD PTR [rbx]
  4200a2:	mov    rdi,r14
  4200a5:	call   41ad90 <isspace@plt+0x17480>
  4200aa:	jmp    4200be <isspace@plt+0x1c7ae>
  4200ac:	xor    eax,eax
  4200ae:	jmp    4200cf <isspace@plt+0x1c7bf>
  4200b0:	mov    rdi,r14
  4200b3:	mov    rsi,r12
  4200b6:	call   41ad90 <isspace@plt+0x17480>
  4200bb:	mov    r12,QWORD PTR [rbx]
  4200be:	mov    rdi,r15
  4200c1:	mov    rsi,r12
  4200c4:	call   410fc0 <isspace@plt+0xd6b0>
  4200c9:	mov    QWORD PTR [r14+0x8],rax
  4200cd:	mov    al,0x1
  4200cf:	mov    rcx,QWORD PTR fs:0x28
  4200d8:	cmp    rcx,QWORD PTR [rsp]
  4200dc:	jne    4200ed <isspace@plt+0x1c7dd>
  4200de:	add    rsp,0x8
  4200e2:	pop    rbx
  4200e3:	pop    r12
  4200e5:	pop    r13
  4200e7:	pop    r14
  4200e9:	pop    r15
  4200eb:	pop    rbp
  4200ec:	ret    
  4200ed:	call   403280 <__stack_chk_fail@plt>
  4200f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4200fc:	nop    DWORD PTR [rax+0x0]
  420100:	push   r15
  420102:	push   r14
  420104:	push   rbx
  420105:	sub    rsp,0x20
  420109:	mov    rbx,rsi
  42010c:	mov    rax,QWORD PTR fs:0x28
  420115:	mov    QWORD PTR [rsp+0x18],rax
  42011a:	mov    r14,QWORD PTR [rdi]
  42011d:	mov    rsi,QWORD PTR [rsi]
  420120:	mov    rdi,r14
  420123:	call   411060 <isspace@plt+0xd750>
  420128:	mov    r15,rax
  42012b:	mov    rsi,QWORD PTR [rbx+0x8]
  42012f:	mov    rdi,r14
  420132:	call   411060 <isspace@plt+0xd750>
  420137:	mov    rdi,r15
  42013a:	mov    rsi,rax
  42013d:	call   417690 <isspace@plt+0x13d80>
  420142:	mov    QWORD PTR [rsp+0x8],rax
  420147:	mov    QWORD PTR [rsp+0x10],rdx
  42014c:	lea    rdi,[rsp+0x8]
  420151:	call   417400 <isspace@plt+0x13af0>
  420156:	mov    rdx,QWORD PTR [rsp+0x10]
  42015b:	test   al,al
  42015d:	je     420172 <isspace@plt+0x1c862>
  42015f:	mov    rdi,r14
  420162:	mov    rsi,rdx
  420165:	call   412fb0 <isspace@plt+0xf6a0>
  42016a:	mov    rdx,rax
  42016d:	mov    QWORD PTR [rsp+0x10],rax
  420172:	mov    rax,QWORD PTR [rsp+0x8]
  420177:	mov    rcx,QWORD PTR fs:0x28
  420180:	cmp    rcx,QWORD PTR [rsp+0x18]
  420185:	jne    420191 <isspace@plt+0x1c881>
  420187:	add    rsp,0x20
  42018b:	pop    rbx
  42018c:	pop    r14
  42018e:	pop    r15
  420190:	ret    
  420191:	call   403280 <__stack_chk_fail@plt>
  420196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4201a0:	push   r15
  4201a2:	push   r14
  4201a4:	push   r13
  4201a6:	push   r12
  4201a8:	push   rbx
  4201a9:	sub    rsp,0x10
  4201ad:	mov    r14,rdx
  4201b0:	mov    r13,rsi
  4201b3:	mov    rax,QWORD PTR fs:0x28
  4201bc:	mov    QWORD PTR [rsp+0x8],rax
  4201c1:	mov    r15,QWORD PTR [rdi]
  4201c4:	mov    rdi,r15
  4201c7:	call   410a90 <isspace@plt+0xd180>
  4201cc:	mov    rbx,rax
  4201cf:	mov    rdi,r13
  4201d2:	call   417400 <isspace@plt+0x13af0>
  4201d7:	test   al,al
  4201d9:	je     420227 <isspace@plt+0x1c917>
  4201db:	mov    rsi,QWORD PTR [r13+0x0]
  4201df:	cmp    rsi,rbx
  4201e2:	jae    420227 <isspace@plt+0x1c917>
  4201e4:	mov    rax,QWORD PTR [r13+0x8]
  4201e8:	cmp    rax,rbx
  4201eb:	cmova  rax,rbx
  4201ef:	mov    r12,rsi
  4201f2:	cmp    rsi,rax
  4201f5:	je     420209 <isspace@plt+0x1c8f9>
  4201f7:	mov    rdi,r15
  4201fa:	mov    rsi,rax
  4201fd:	call   413010 <isspace@plt+0xf700>
  420202:	mov    r12,rax
  420205:	mov    rsi,QWORD PTR [r13+0x0]
  420209:	mov    rdi,r15
  42020c:	call   410fc0 <isspace@plt+0xd6b0>
  420211:	mov    QWORD PTR [r14],rax
  420214:	mov    rdi,r15
  420217:	mov    rsi,r12
  42021a:	call   410fc0 <isspace@plt+0xd6b0>
  42021f:	mov    QWORD PTR [r14+0x8],rax
  420223:	mov    al,0x1
  420225:	jmp    420229 <isspace@plt+0x1c919>
  420227:	xor    eax,eax
  420229:	mov    rcx,QWORD PTR fs:0x28
  420232:	cmp    rcx,QWORD PTR [rsp+0x8]
  420237:	jne    420247 <isspace@plt+0x1c937>
  420239:	add    rsp,0x10
  42023d:	pop    rbx
  42023e:	pop    r12
  420240:	pop    r13
  420242:	pop    r14
  420244:	pop    r15
  420246:	ret    
  420247:	call   403280 <__stack_chk_fail@plt>
  42024c:	nop    DWORD PTR [rax+0x0]
  420250:	push   rbp
  420251:	push   r15
  420253:	push   r14
  420255:	push   r13
  420257:	push   r12
  420259:	push   rbx
  42025a:	push   rax
  42025b:	mov    r14d,edx
  42025e:	mov    r12,rsi
  420261:	mov    r15,rdi
  420264:	mov    rax,QWORD PTR fs:0x28
  42026d:	mov    QWORD PTR [rsp],rax
  420271:	mov    rbp,QWORD PTR [rdi+0xf8]
  420278:	test   rbp,rbp
  42027b:	je     420338 <isspace@plt+0x1ca28>
  420281:	xor    eax,eax
  420283:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42028d:	nop    DWORD PTR [rax]
  420290:	mov    rbx,rax
  420293:	mov    rdi,r12
  420296:	mov    rsi,rax
  420299:	call   403d20 <isspace@plt+0x410>
  42029e:	test   rax,rax
  4202a1:	je     4202cc <isspace@plt+0x1c9bc>
  4202a3:	mov    rdi,rbp
  4202a6:	mov    rsi,rax
  4202a9:	call   420010 <isspace@plt+0x1c700>
  4202ae:	test   al,al
  4202b0:	je     4202cc <isspace@plt+0x1c9bc>
  4202b2:	lea    rax,[rbx+0x1]
  4202b6:	mov    BYTE PTR [rbp+0x10],r14b
  4202ba:	mov    rbp,QWORD PTR [rbp+0x50]
  4202be:	test   rbp,rbp
  4202c1:	jne    420290 <isspace@plt+0x1c980>
  4202c3:	add    rbx,0x1
  4202c7:	mov    r13,rbx
  4202ca:	jmp    42033b <isspace@plt+0x1ca2b>
  4202cc:	lea    r13,[rbx+0x1]
  4202d0:	mov    rdi,rbp
  4202d3:	mov    rax,QWORD PTR [rbp+0x40]
  4202d7:	nop    WORD PTR [rax+rax*1+0x0]
  4202e0:	mov    rbp,QWORD PTR [rbp+0x50]
  4202e4:	test   rbp,rbp
  4202e7:	je     420320 <isspace@plt+0x1ca10>
  4202e9:	mov    ecx,DWORD PTR [rbp+0x38]
  4202ec:	cmp    ecx,DWORD PTR [rax+0x100]
  4202f2:	je     4202e0 <isspace@plt+0x1c9d0>
  4202f4:	test   rbx,rbx
  4202f7:	jne    42032c <isspace@plt+0x1ca1c>
  4202f9:	cmp    rdi,QWORD PTR [r15+0x98]
  420300:	jne    42032c <isspace@plt+0x1ca1c>
  420302:	mov    BYTE PTR [rdi+0x10],0x0
  420306:	mov    rcx,QWORD PTR [rdi]
  420309:	mov    QWORD PTR [rdi+0x8],rcx
  42030d:	mov    BYTE PTR [rax+0x104],0x1
  420314:	jmp    420331 <isspace@plt+0x1ca21>
  420316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420320:	add    DWORD PTR [rax+0x100],0x1
  420327:	test   rbx,rbx
  42032a:	je     4202f9 <isspace@plt+0x1c9e9>
  42032c:	call   41f450 <isspace@plt+0x1bb40>
  420331:	test   rbp,rbp
  420334:	jne    4202d0 <isspace@plt+0x1c9c0>
  420336:	jmp    42033b <isspace@plt+0x1ca2b>
  420338:	xor    r13d,r13d
  42033b:	mov    rdi,r12
  42033e:	mov    rsi,r13
  420341:	call   403d20 <isspace@plt+0x410>
  420346:	test   rax,rax
  420349:	je     4203a2 <isspace@plt+0x1ca92>
  42034b:	mov    rbx,rax
  42034e:	add    r13,0x1
  420352:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42035c:	nop    DWORD PTR [rax+0x0]
  420360:	mov    rsi,QWORD PTR [rbx]
  420363:	mov    edx,0x1
  420368:	mov    rdi,r15
  42036b:	call   41ef40 <isspace@plt+0x1b630>
  420370:	test   rax,rax
  420373:	je     4203a2 <isspace@plt+0x1ca92>
  420375:	mov    rbp,rax
  420378:	mov    rdi,rax
  42037b:	mov    rsi,rbx
  42037e:	call   420010 <isspace@plt+0x1c700>
  420383:	test   al,al
  420385:	je     4203a2 <isspace@plt+0x1ca92>
  420387:	mov    BYTE PTR [rbp+0x10],r14b
  42038b:	mov    rdi,r12
  42038e:	mov    rsi,r13
  420391:	call   403d20 <isspace@plt+0x410>
  420396:	mov    rbx,rax
  420399:	add    r13,0x1
  42039d:	test   rax,rax
  4203a0:	jne    420360 <isspace@plt+0x1ca50>
  4203a2:	mov    rbx,QWORD PTR [r15+0xf8]
  4203a9:	test   rbx,rbx
  4203ac:	je     4203d7 <isspace@plt+0x1cac7>
  4203ae:	mov    rax,QWORD PTR [rbx+0x40]
  4203b2:	mov    QWORD PTR [rax+0x98],rbx
  4203b9:	mov    rsi,QWORD PTR [rbx]
  4203bc:	mov    rbp,QWORD PTR [rbx+0x8]
  4203c0:	mov    rdi,QWORD PTR [rax]
  4203c3:	call   411060 <isspace@plt+0xd750>
  4203c8:	mov    rdi,rbx
  4203cb:	mov    rsi,rax
  4203ce:	call   41ad90 <isspace@plt+0x17480>
  4203d3:	mov    QWORD PTR [rbx+0x8],rbp
  4203d7:	mov    rax,QWORD PTR fs:0x28
  4203e0:	cmp    rax,QWORD PTR [rsp]
  4203e4:	jne    4203f5 <isspace@plt+0x1cae5>
  4203e6:	add    rsp,0x8
  4203ea:	pop    rbx
  4203eb:	pop    r12
  4203ed:	pop    r13
  4203ef:	pop    r14
  4203f1:	pop    r15
  4203f3:	pop    rbp
  4203f4:	ret    
  4203f5:	call   403280 <__stack_chk_fail@plt>
  4203fa:	nop    WORD PTR [rax+rax*1+0x0]
  420400:	push   r15
  420402:	push   r14
  420404:	push   rbx
  420405:	sub    rsp,0x20
  420409:	mov    rbx,rsi
  42040c:	mov    r14,rdi
  42040f:	mov    rax,QWORD PTR fs:0x28
  420418:	mov    QWORD PTR [rsp+0x18],rax
  42041d:	mov    esi,0x10
  420422:	call   403a50 <isspace@plt+0x140>
  420427:	movsxd rsi,DWORD PTR [rbx+0xb0]
  42042e:	mov    rdi,r14
  420431:	call   403ad0 <isspace@plt+0x1c0>
  420436:	test   al,al
  420438:	je     420482 <isspace@plt+0x1cb72>
  42043a:	mov    rbx,QWORD PTR [rbx+0xf8]
  420441:	test   rbx,rbx
  420444:	je     420482 <isspace@plt+0x1cb72>
  420446:	lea    r15,[rsp+0x8]
  42044b:	nop    DWORD PTR [rax+rax*1+0x0]
  420450:	mov    rdi,rbx
  420453:	call   41ff60 <isspace@plt+0x1c650>
  420458:	mov    QWORD PTR [rsp+0x8],rax
  42045d:	mov    QWORD PTR [rsp+0x10],rdx
  420462:	mov    rdi,r15
  420465:	call   417400 <isspace@plt+0x13af0>
  42046a:	test   al,al
  42046c:	je     420479 <isspace@plt+0x1cb69>
  42046e:	mov    rdi,r14
  420471:	mov    rsi,r15
  420474:	call   403d70 <isspace@plt+0x460>
  420479:	mov    rbx,QWORD PTR [rbx+0x50]
  42047d:	test   rbx,rbx
  420480:	jne    420450 <isspace@plt+0x1cb40>
  420482:	mov    rax,QWORD PTR fs:0x28
  42048b:	cmp    rax,QWORD PTR [rsp+0x18]
  420490:	jne    42049f <isspace@plt+0x1cb8f>
  420492:	mov    rax,r14
  420495:	add    rsp,0x20
  420499:	pop    rbx
  42049a:	pop    r14
  42049c:	pop    r15
  42049e:	ret    
  42049f:	call   403280 <__stack_chk_fail@plt>
  4204a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4204ae:	xchg   ax,ax
  4204b0:	push   r15
  4204b2:	push   r14
  4204b4:	push   r13
  4204b6:	push   r12
  4204b8:	push   rbx
  4204b9:	sub    rsp,0x30
  4204bd:	mov    rbx,rdi
  4204c0:	mov    rax,QWORD PTR fs:0x28
  4204c9:	mov    QWORD PTR [rsp+0x28],rax
  4204ce:	call   4174c0 <isspace@plt+0x13bb0>
  4204d3:	mov    QWORD PTR [rsp+0x10],rax
  4204d8:	mov    QWORD PTR [rsp+0x18],rdx
  4204dd:	mov    r13,QWORD PTR [rbx+0xf8]
  4204e4:	test   r13,r13
  4204e7:	je     42058c <isspace@plt+0x1cc7c>
  4204ed:	xor    r12d,r12d
  4204f0:	mov    r14,rsp
  4204f3:	lea    r15,[rsp+0x10]
  4204f8:	nop    DWORD PTR [rax+rax*1+0x0]
  420500:	mov    rbx,r13
  420503:	mov    r13,QWORD PTR [r13+0x50]
  420507:	mov    rdi,rbx
  42050a:	call   41ff60 <isspace@plt+0x1c650>
  42050f:	mov    QWORD PTR [rsp],rax
  420513:	mov    QWORD PTR [rsp+0x8],rdx
  420518:	mov    rdi,r14
  42051b:	call   417400 <isspace@plt+0x13af0>
  420520:	test   al,al
  420522:	je     42054d <isspace@plt+0x1cc3d>
  420524:	test   r12,r12
  420527:	je     420567 <isspace@plt+0x1cc57>
  420529:	mov    rdi,r15
  42052c:	mov    rsi,r14
  42052f:	call   417610 <isspace@plt+0x13d00>
  420534:	test   al,al
  420536:	je     42055c <isspace@plt+0x1cc4c>
  420538:	mov    rdi,r15
  42053b:	mov    rsi,r14
  42053e:	call   417500 <isspace@plt+0x13bf0>
  420543:	mov    QWORD PTR [rsp+0x10],rax
  420548:	mov    QWORD PTR [rsp+0x18],rdx
  42054d:	mov    rdi,rbx
  420550:	call   41f450 <isspace@plt+0x1bb40>
  420555:	test   r13,r13
  420558:	jne    420500 <isspace@plt+0x1cbf0>
  42055a:	jmp    42057a <isspace@plt+0x1cc6a>
  42055c:	mov    rdi,r12
  42055f:	mov    rsi,r15
  420562:	call   420010 <isspace@plt+0x1c700>
  420567:	vmovups xmm0,XMMWORD PTR [rsp]
  42056c:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  420572:	mov    r12,rbx
  420575:	test   r13,r13
  420578:	jne    420500 <isspace@plt+0x1cbf0>
  42057a:	test   r12,r12
  42057d:	je     42058c <isspace@plt+0x1cc7c>
  42057f:	lea    rsi,[rsp+0x10]
  420584:	mov    rdi,r12
  420587:	call   420010 <isspace@plt+0x1c700>
  42058c:	mov    rax,QWORD PTR fs:0x28
  420595:	cmp    rax,QWORD PTR [rsp+0x28]
  42059a:	jne    4205aa <isspace@plt+0x1cc9a>
  42059c:	add    rsp,0x30
  4205a0:	pop    rbx
  4205a1:	pop    r12
  4205a3:	pop    r13
  4205a5:	pop    r14
  4205a7:	pop    r15
  4205a9:	ret    
  4205aa:	call   403280 <__stack_chk_fail@plt>
  4205af:	nop
  4205b0:	push   rax
  4205b1:	mov    rax,QWORD PTR fs:0x28
  4205ba:	mov    QWORD PTR [rsp],rax
  4205be:	mov    rax,QWORD PTR [rdi]
  4205c1:	mov    rcx,QWORD PTR fs:0x28
  4205ca:	cmp    rcx,QWORD PTR [rsp]
  4205ce:	jne    4205d2 <isspace@plt+0x1ccc2>
  4205d0:	pop    rcx
  4205d1:	ret    
  4205d2:	call   403280 <__stack_chk_fail@plt>
  4205d7:	nop    WORD PTR [rax+rax*1+0x0]
  4205e0:	push   rax
  4205e1:	mov    rax,QWORD PTR fs:0x28
  4205ea:	mov    QWORD PTR [rsp],rax
  4205ee:	mov    rax,QWORD PTR [rdi+0xe8]
  4205f5:	mov    rax,QWORD PTR [rax]
  4205f8:	mov    rcx,QWORD PTR fs:0x28
  420601:	cmp    rcx,QWORD PTR [rsp]
  420605:	jne    420609 <isspace@plt+0x1ccf9>
  420607:	pop    rcx
  420608:	ret    
  420609:	call   403280 <__stack_chk_fail@plt>
  42060e:	xchg   ax,ax
  420610:	push   rbp
  420611:	push   r14
  420613:	push   rbx
  420614:	sub    rsp,0xd0
  42061b:	mov    ebp,esi
  42061d:	mov    rbx,rdi
  420620:	test   al,al
  420622:	je     42065d <isspace@plt+0x1cd4d>
  420624:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  42062a:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  420630:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  420636:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  42063c:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  420642:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  42064b:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  420654:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  42065d:	mov    QWORD PTR [rsp+0x28],r9
  420662:	mov    QWORD PTR [rsp+0x20],r8
  420667:	mov    QWORD PTR [rsp+0x18],rcx
  42066c:	mov    QWORD PTR [rsp+0x10],rdx
  420671:	mov    rax,QWORD PTR fs:0x28
  42067a:	mov    QWORD PTR [rsp+0xc8],rax
  420682:	cmp    QWORD PTR [rbx+0xad8],0x0
  42068a:	je     42072d <isspace@plt+0x1ce1d>
  420690:	cmp    BYTE PTR [rbx+0x9b0],0x0
  420697:	jne    4206bc <isspace@plt+0x1cdac>
  420699:	mov    BYTE PTR [rbx+0x9b0],0x1
  4206a0:	mov    rdi,QWORD PTR [rbx]
  4206a3:	mov    rsi,rbx
  4206a6:	call   QWORD PTR [rdi]
  4206a8:	mov    rax,QWORD PTR [rbx+0xad8]
  4206af:	mov    rax,QWORD PTR [rax]
  4206b2:	test   rax,rax
  4206b5:	je     4206bc <isspace@plt+0x1cdac>
  4206b7:	mov    rdi,rbx
  4206ba:	call   rax
  4206bc:	mov    rax,rsp
  4206bf:	mov    QWORD PTR [rsp+0xc0],rax
  4206c7:	lea    rax,[rsp+0xf0]
  4206cf:	mov    QWORD PTR [rsp+0xb8],rax
  4206d7:	movabs rax,0x3000000010
  4206e1:	mov    QWORD PTR [rsp+0xb0],rax
  4206e9:	mov    r14b,0x1
  4206ec:	lea    eax,[rbp-0x1]
  4206ef:	cmp    eax,0xa
  4206f2:	ja     420919 <isspace@plt+0x1d009>
  4206f8:	lea    rcx,[rip+0x1153d]        # 431c3c <isspace@plt+0x2e32c>
  4206ff:	movsxd rax,DWORD PTR [rcx+rax*4]
  420703:	add    rax,rcx
  420706:	jmp    rax
  420708:	movsxd rax,DWORD PTR [rsp+0xb0]
  420710:	cmp    rax,0x28
  420714:	ja     42075a <isspace@plt+0x1ce4a>
  420716:	mov    rcx,rax
  420719:	add    rcx,QWORD PTR [rsp+0xc0]
  420721:	lea    eax,[rax+0x8]
  420724:	mov    DWORD PTR [rsp+0xb0],eax
  42072b:	jmp    42076e <isspace@plt+0x1ce5e>
  42072d:	mov    r14b,0x1
  420730:	jmp    420919 <isspace@plt+0x1d009>
  420735:	movsxd rcx,DWORD PTR [rsp+0xb0]
  42073d:	cmp    rcx,0x28
  420741:	ja     4207a7 <isspace@plt+0x1ce97>
  420743:	mov    rax,rcx
  420746:	add    rax,QWORD PTR [rsp+0xc0]
  42074e:	lea    ecx,[rcx+0x8]
  420751:	mov    DWORD PTR [rsp+0xb0],ecx
  420758:	jmp    4207bb <isspace@plt+0x1ceab>
  42075a:	mov    rcx,QWORD PTR [rsp+0xb8]
  420762:	lea    rdx,[rcx+0x8]
  420766:	mov    QWORD PTR [rsp+0xb8],rdx
  42076e:	mov    rsi,QWORD PTR [rcx]
  420771:	cmp    BYTE PTR [rsi+0x18],0x0
  420775:	jne    420919 <isspace@plt+0x1d009>
  42077b:	add    ebp,0xfffffffd
  42077e:	cmp    ebp,0x3
  420781:	ja     420919 <isspace@plt+0x1d009>
  420787:	lea    rcx,[rip+0x114da]        # 431c68 <isspace@plt+0x2e358>
  42078e:	movsxd rdx,DWORD PTR [rcx+rbp*4]
  420792:	add    rdx,rcx
  420795:	jmp    rdx
  420797:	mov    rax,QWORD PTR [rbx+0xad8]
  42079e:	mov    rax,QWORD PTR [rax+0x28]
  4207a2:	jmp    42090f <isspace@plt+0x1cfff>
  4207a7:	mov    rax,QWORD PTR [rsp+0xb8]
  4207af:	lea    rcx,[rax+0x8]
  4207b3:	mov    QWORD PTR [rsp+0xb8],rcx
  4207bb:	mov    rsi,QWORD PTR [rax]
  4207be:	cmp    ebp,0xa
  4207c1:	je     4207d2 <isspace@plt+0x1cec2>
  4207c3:	mov    rax,QWORD PTR [rsi+0x10]
  4207c7:	mov    al,BYTE PTR [rax+0x18]
  4207ca:	test   al,al
  4207cc:	jne    420919 <isspace@plt+0x1d009>
  4207d2:	mov    rax,QWORD PTR [rbx+0xad8]
  4207d9:	cmp    ebp,0x7
  4207dc:	jne    4207e7 <isspace@plt+0x1ced7>
  4207de:	mov    rcx,QWORD PTR [rax+0x48]
  4207e2:	test   rcx,rcx
  4207e5:	jne    42080b <isspace@plt+0x1cefb>
  4207e7:	cmp    ebp,0x8
  4207ea:	jne    4207f5 <isspace@plt+0x1cee5>
  4207ec:	mov    rcx,QWORD PTR [rax+0x50]
  4207f0:	test   rcx,rcx
  4207f3:	jne    42080b <isspace@plt+0x1cefb>
  4207f5:	cmp    ebp,0x9
  4207f8:	jne    420906 <isspace@plt+0x1cff6>
  4207fe:	mov    rcx,QWORD PTR [rax+0x58]
  420802:	test   rcx,rcx
  420805:	je     420906 <isspace@plt+0x1cff6>
  42080b:	mov    rdi,rbx
  42080e:	call   rcx
  420810:	jmp    420919 <isspace@plt+0x1d009>
  420815:	mov    rax,QWORD PTR [rbx+0xad8]
  42081c:	mov    rax,QWORD PTR [rax+0x8]
  420820:	test   rax,rax
  420823:	jne    42083e <isspace@plt+0x1cf2e>
  420825:	jmp    420919 <isspace@plt+0x1d009>
  42082a:	mov    rax,QWORD PTR [rbx+0xad8]
  420831:	mov    rax,QWORD PTR [rax+0x10]
  420835:	test   rax,rax
  420838:	je     420919 <isspace@plt+0x1d009>
  42083e:	mov    rdi,rbx
  420841:	call   rax
  420843:	jmp    420919 <isspace@plt+0x1d009>
  420848:	mov    rax,QWORD PTR [rbx+0xad8]
  42084f:	mov    rax,QWORD PTR [rax+0x68]
  420853:	test   rax,rax
  420856:	je     420919 <isspace@plt+0x1d009>
  42085c:	movsxd rdx,DWORD PTR [rsp+0xb0]
  420864:	cmp    rdx,0x28
  420868:	ja     420881 <isspace@plt+0x1cf71>
  42086a:	mov    rcx,rdx
  42086d:	add    rcx,QWORD PTR [rsp+0xc0]
  420875:	lea    edx,[rdx+0x8]
  420878:	mov    DWORD PTR [rsp+0xb0],edx
  42087f:	jmp    420895 <isspace@plt+0x1cf85>
  420881:	mov    rcx,QWORD PTR [rsp+0xb8]
  420889:	lea    rdx,[rcx+0x8]
  42088d:	mov    QWORD PTR [rsp+0xb8],rdx
  420895:	mov    rsi,QWORD PTR [rcx]
  420898:	jmp    420914 <isspace@plt+0x1d004>
  42089a:	mov    rcx,QWORD PTR [rbx+0xad8]
  4208a1:	mov    rcx,QWORD PTR [rcx+0x38]
  4208a5:	test   rcx,rcx
  4208a8:	je     420919 <isspace@plt+0x1d009>
  4208aa:	cmp    eax,0x28
  4208ad:	ja     42093b <isspace@plt+0x1d02b>
  4208b3:	movsxd rdx,eax
  4208b6:	add    rdx,QWORD PTR [rsp+0xc0]
  4208be:	add    eax,0x8
  4208c1:	mov    DWORD PTR [rsp+0xb0],eax
  4208c8:	jmp    42094f <isspace@plt+0x1d03f>
  4208cd:	mov    rcx,QWORD PTR [rbx+0xad8]
  4208d4:	mov    rcx,QWORD PTR [rcx+0x30]
  4208d8:	test   rcx,rcx
  4208db:	je     420919 <isspace@plt+0x1d009>
  4208dd:	cmp    eax,0x28
  4208e0:	ja     420959 <isspace@plt+0x1d049>
  4208e2:	movsxd rdx,eax
  4208e5:	add    rdx,QWORD PTR [rsp+0xc0]
  4208ed:	add    eax,0x8
  4208f0:	mov    DWORD PTR [rsp+0xb0],eax
  4208f7:	jmp    42096d <isspace@plt+0x1d05d>
  4208f9:	mov    rax,QWORD PTR [rbx+0xad8]
  420900:	mov    rax,QWORD PTR [rax+0x40]
  420904:	jmp    42090f <isspace@plt+0x1cfff>
  420906:	cmp    ebp,0xa
  420909:	jne    420919 <isspace@plt+0x1d009>
  42090b:	mov    rax,QWORD PTR [rax+0x60]
  42090f:	test   rax,rax
  420912:	je     420919 <isspace@plt+0x1d009>
  420914:	mov    rdi,rbx
  420917:	call   rax
  420919:	mov    rax,QWORD PTR fs:0x28
  420922:	cmp    rax,QWORD PTR [rsp+0xc8]
  42092a:	jne    42097a <isspace@plt+0x1d06a>
  42092c:	mov    eax,r14d
  42092f:	add    rsp,0xd0
  420936:	pop    rbx
  420937:	pop    r14
  420939:	pop    rbp
  42093a:	ret    
  42093b:	mov    rdx,QWORD PTR [rsp+0xb8]
  420943:	lea    rax,[rdx+0x8]
  420947:	mov    QWORD PTR [rsp+0xb8],rax
  42094f:	mov    rdx,QWORD PTR [rdx]
  420952:	mov    rdi,rbx
  420955:	call   rcx
  420957:	jmp    420919 <isspace@plt+0x1d009>
  420959:	mov    rdx,QWORD PTR [rsp+0xb8]
  420961:	lea    rax,[rdx+0x8]
  420965:	mov    QWORD PTR [rsp+0xb8],rax
  42096d:	mov    rdx,QWORD PTR [rdx]
  420970:	mov    rdi,rbx
  420973:	call   rcx
  420975:	mov    r14d,eax
  420978:	jmp    420919 <isspace@plt+0x1d009>
  42097a:	call   403280 <__stack_chk_fail@plt>
  42097f:	nop
  420980:	push   r15
  420982:	push   r14
  420984:	push   r13
  420986:	push   r12
  420988:	push   rbx
  420989:	sub    rsp,0x1020
  420990:	mov    rax,QWORD PTR fs:0x28
  420999:	mov    QWORD PTR [rsp+0x1018],rax
  4209a1:	test   rdi,rdi
  4209a4:	je     420a76 <isspace@plt+0x1d166>
  4209aa:	mov    rbx,rdi
  4209ad:	call   403850 <strdup@plt>
  4209b2:	mov    r15,rax
  4209b5:	mov    rdi,rbx
  4209b8:	call   403850 <strdup@plt>
  4209bd:	mov    r14,rax
  4209c0:	lea    rdi,[rsp+0x10]
  4209c5:	xor    ebx,ebx
  4209c7:	xor    esi,esi
  4209c9:	mov    edx,0x1000
  4209ce:	call   403360 <memset@plt>
  4209d3:	test   r15,r15
  4209d6:	je     420a4b <isspace@plt+0x1d13b>
  4209d8:	test   r14,r14
  4209db:	je     420a4b <isspace@plt+0x1d13b>
  4209dd:	mov    rdi,r15
  4209e0:	call   403350 <dirname@plt>
  4209e5:	mov    r12,rax
  4209e8:	mov    rdi,r14
  4209eb:	call   403510 <__xpg_basename@plt>
  4209f0:	mov    r13,rax
  4209f3:	xor    ebx,ebx
  4209f5:	xor    esi,esi
  4209f7:	mov    rdi,r12
  4209fa:	call   4034d0 <realpath@plt>
  4209ff:	test   rax,rax
  420a02:	je     420a4b <isspace@plt+0x1d13b>
  420a04:	mov    r12,rax
  420a07:	lea    rsi,[rip+0x1036b]        # 430d79 <isspace@plt+0x2d469>
  420a0e:	mov    rdi,rax
  420a11:	call   403480 <strcmp@plt>
  420a16:	test   eax,eax
  420a18:	jne    420a1f <isspace@plt+0x1d10f>
  420a1a:	mov    BYTE PTR [r12],0x0
  420a1f:	mov    QWORD PTR [rsp],r13
  420a23:	lea    r8,[rip+0x112d6]        # 431d00 <isspace@plt+0x2e3f0>
  420a2a:	lea    rdi,[rsp+0x10]
  420a2f:	mov    esi,0x1000
  420a34:	mov    edx,0x1
  420a39:	mov    ecx,0x1000
  420a3e:	xor    eax,eax
  420a40:	mov    r9,r12
  420a43:	call   4030c0 <__snprintf_chk@plt>
  420a48:	mov    rbx,r12
  420a4b:	mov    rdi,r15
  420a4e:	call   4030d0 <free@plt>
  420a53:	mov    rdi,r14
  420a56:	call   4030d0 <free@plt>
  420a5b:	mov    rdi,rbx
  420a5e:	call   4030d0 <free@plt>
  420a63:	cmp    BYTE PTR [rsp+0x10],0x0
  420a68:	je     420a76 <isspace@plt+0x1d166>
  420a6a:	lea    rdi,[rsp+0x10]
  420a6f:	call   403850 <strdup@plt>
  420a74:	jmp    420a78 <isspace@plt+0x1d168>
  420a76:	xor    eax,eax
  420a78:	mov    rcx,QWORD PTR fs:0x28
  420a81:	cmp    rcx,QWORD PTR [rsp+0x1018]
  420a89:	jne    420a9c <isspace@plt+0x1d18c>
  420a8b:	add    rsp,0x1020
  420a92:	pop    rbx
  420a93:	pop    r12
  420a95:	pop    r13
  420a97:	pop    r14
  420a99:	pop    r15
  420a9b:	ret    
  420a9c:	call   403280 <__stack_chk_fail@plt>
  420aa1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420aab:	nop    DWORD PTR [rax+rax*1+0x0]
  420ab0:	push   r14
  420ab2:	push   rbx
  420ab3:	push   rax
  420ab4:	mov    r14,rdi
  420ab7:	mov    rax,QWORD PTR fs:0x28
  420ac0:	mov    QWORD PTR [rsp],rax
  420ac4:	mov    rdi,QWORD PTR [rdi+0x8]
  420ac8:	cmp    rdi,rsi
  420acb:	je     420ae1 <isspace@plt+0x1d1d1>
  420acd:	mov    rbx,rsi
  420ad0:	call   4030d0 <free@plt>
  420ad5:	mov    rdi,rbx
  420ad8:	call   420980 <isspace@plt+0x1d070>
  420add:	mov    QWORD PTR [r14+0x8],rax
  420ae1:	mov    rax,QWORD PTR fs:0x28
  420aea:	cmp    rax,QWORD PTR [rsp]
  420aee:	jne    420af8 <isspace@plt+0x1d1e8>
  420af0:	add    rsp,0x8
  420af4:	pop    rbx
  420af5:	pop    r14
  420af7:	ret    
  420af8:	call   403280 <__stack_chk_fail@plt>
  420afd:	nop    DWORD PTR [rax]
  420b00:	push   r14
  420b02:	push   rbx
  420b03:	sub    rsp,0x1008
  420b0a:	mov    rax,QWORD PTR fs:0x28
  420b13:	mov    QWORD PTR [rsp+0x1000],rax
  420b1b:	cmp    QWORD PTR [rdi+0x8],0x0
  420b20:	je     420b6f <isspace@plt+0x1d25f>
  420b22:	mov    rbx,rdi
  420b25:	mov    rdi,rsp
  420b28:	mov    esi,0x1000
  420b2d:	call   4033b0 <getcwd@plt>
  420b32:	mov    rbx,QWORD PTR [rbx+0x8]
  420b36:	test   rax,rax
  420b39:	je     420b71 <isspace@plt+0x1d261>
  420b3b:	mov    r14,rsp
  420b3e:	mov    rdi,r14
  420b41:	call   403250 <strlen@plt>
  420b46:	mov    rdi,rbx
  420b49:	mov    rsi,r14
  420b4c:	mov    rdx,rax
  420b4f:	call   403160 <strncmp@plt>
  420b54:	test   eax,eax
  420b56:	jne    420b71 <isspace@plt+0x1d261>
  420b58:	mov    rdi,rsp
  420b5b:	call   403250 <strlen@plt>
  420b60:	cmp    BYTE PTR [rbx+rax*1],0x2f
  420b64:	lea    rax,[rbx+rax*1+0x1]
  420b69:	cmove  rbx,rax
  420b6d:	jmp    420b71 <isspace@plt+0x1d261>
  420b6f:	xor    ebx,ebx
  420b71:	mov    rax,QWORD PTR fs:0x28
  420b7a:	cmp    rax,QWORD PTR [rsp+0x1000]
  420b82:	jne    420b92 <isspace@plt+0x1d282>
  420b84:	mov    rax,rbx
  420b87:	add    rsp,0x1008
  420b8e:	pop    rbx
  420b8f:	pop    r14
  420b91:	ret    
  420b92:	call   403280 <__stack_chk_fail@plt>
  420b97:	nop    WORD PTR [rax+rax*1+0x0]
  420ba0:	push   rax
  420ba1:	mov    rax,QWORD PTR fs:0x28
  420baa:	mov    QWORD PTR [rsp],rax
  420bae:	mov    rdi,QWORD PTR [rdi+0x8]
  420bb2:	call   QWORD PTR [rdi+0x8]
  420bb5:	mov    rax,QWORD PTR fs:0x28
  420bbe:	cmp    rax,QWORD PTR [rsp]
  420bc2:	jne    420bc6 <isspace@plt+0x1d2b6>
  420bc4:	pop    rax
  420bc5:	ret    
  420bc6:	call   403280 <__stack_chk_fail@plt>
  420bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  420bd0:	push   r15
  420bd2:	push   r14
  420bd4:	push   rbx
  420bd5:	sub    rsp,0x30
  420bd9:	mov    rbx,rdi
  420bdc:	mov    rax,QWORD PTR fs:0x28
  420be5:	mov    QWORD PTR [rsp+0x28],rax
  420bea:	mov    r14,QWORD PTR [rdi]
  420bed:	mov    rsi,QWORD PTR [rdi+0x18]
  420bf1:	lea    r15,[rsp+0x8]
  420bf6:	mov    rdi,r15
  420bf9:	call   420400 <isspace@plt+0x1caf0>
  420bfe:	mov    esi,0x1
  420c03:	mov    rdi,rbx
  420c06:	mov    rdx,r15
  420c09:	call   426dd0 <isspace@plt+0x234c0>
  420c0e:	mov    rdi,r15
  420c11:	call   403b50 <isspace@plt+0x240>
  420c16:	mov    rdi,r14
  420c19:	call   427000 <isspace@plt+0x236f0>
  420c1e:	mov    rax,QWORD PTR fs:0x28
  420c27:	cmp    rax,QWORD PTR [rsp+0x28]
  420c2c:	jne    420c38 <isspace@plt+0x1d328>
  420c2e:	add    rsp,0x30
  420c32:	pop    rbx
  420c33:	pop    r14
  420c35:	pop    r15
  420c37:	ret    
  420c38:	call   403280 <__stack_chk_fail@plt>
  420c3d:	nop    DWORD PTR [rax]
  420c40:	push   rbp
  420c41:	push   r15
  420c43:	push   r14
  420c45:	push   r13
  420c47:	push   r12
  420c49:	push   rbx
  420c4a:	sub    rsp,0x68
  420c4e:	mov    rax,QWORD PTR fs:0x28
  420c57:	mov    QWORD PTR [rsp+0x60],rax
  420c5c:	cmp    QWORD PTR [rdi+0x8],0x0
  420c61:	je     4210f1 <isspace@plt+0x1d7e1>
  420c67:	mov    r13,rdi
  420c6a:	mov    rdi,QWORD PTR [rdi+0x18]
  420c6e:	call   41b540 <isspace@plt+0x17c30>
  420c73:	test   al,al
  420c75:	je     4210f1 <isspace@plt+0x1d7e1>
  420c7b:	mov    rdi,QWORD PTR [r13+0x0]
  420c7f:	mov    esi,0x9
  420c84:	xor    eax,eax
  420c86:	mov    QWORD PTR [rsp+0x8],rdi
  420c8b:	mov    rdx,r13
  420c8e:	call   420610 <isspace@plt+0x1cd00>
  420c93:	mov    rbx,QWORD PTR [r13+0x18]
  420c97:	mov    rdi,rbx
  420c9a:	call   41eeb0 <isspace@plt+0x1b5a0>
  420c9f:	test   eax,eax
  420ca1:	jle    420dca <isspace@plt+0x1d4ba>
  420ca7:	mov    ebp,eax
  420ca9:	mov    rdi,QWORD PTR [r13+0x8]
  420cad:	mov    esi,0x48
  420cb2:	call   QWORD PTR [rdi]
  420cb4:	mov    QWORD PTR [rsp+0x28],rax
  420cb9:	mov    QWORD PTR [rsp+0x10],rdx
  420cbe:	mov    rdi,rbx
  420cc1:	call   41b700 <isspace@plt+0x17df0>
  420cc6:	mov    QWORD PTR [rsp],rax
  420cca:	mov    rdi,rbx
  420ccd:	call   41ecc0 <isspace@plt+0x1b3b0>
  420cd2:	test   rax,rax
  420cd5:	je     420dca <isspace@plt+0x1d4ba>
  420cdb:	mov    r14,rax
  420cde:	mov    rax,QWORD PTR [rsp+0x10]
  420ce3:	shr    rax,0x10
  420ce7:	mov    QWORD PTR [rsp+0x18],rax
  420cec:	xor    ecx,ecx
  420cee:	xor    eax,eax
  420cf0:	xor    r15d,r15d
  420cf3:	mov    QWORD PTR [rsp+0x20],r13
  420cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  420d00:	mov    r12,QWORD PTR [r14+0x18]
  420d04:	cmp    r12,rcx
  420d07:	jne    420d20 <isspace@plt+0x1d410>
  420d09:	mov    r12,rcx
  420d0c:	test   al,0x1
  420d0e:	je     420d31 <isspace@plt+0x1d421>
  420d10:	jmp    420dbd <isspace@plt+0x1d4ad>
  420d15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420d1f:	nop
  420d20:	xor    eax,eax
  420d22:	mov    r15d,0x0
  420d28:	test   r12,r12
  420d2b:	je     420dca <isspace@plt+0x1d4ba>
  420d31:	mov    rcx,QWORD PTR [rsp]
  420d35:	lea    edx,[r15+rcx*1]
  420d39:	cmp    ebp,edx
  420d3b:	jle    420d50 <isspace@plt+0x1d440>
  420d3d:	mov    rcx,r12
  420d40:	mov    r15d,edx
  420d43:	jmp    420dbd <isspace@plt+0x1d4ad>
  420d45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420d4f:	nop
  420d50:	mov    eax,r15d
  420d53:	not    eax
  420d55:	mov    r13d,ebp
  420d58:	add    eax,ebp
  420d5a:	cdqe   
  420d5c:	lea    rbx,[rax+rax*2]
  420d60:	shl    rbx,0x4
  420d64:	mov    rax,QWORD PTR [rsp+0x28]
  420d69:	mov    QWORD PTR [r14+rbx*1+0x48],rax
  420d6e:	mov    rbp,QWORD PTR [rsp+0x10]
  420d73:	movsx  edi,bp
  420d76:	call   417a10 <isspace@plt+0x14100>
  420d7b:	lea    rcx,[r14+rbx*1]
  420d7f:	add    rcx,0x50
  420d83:	mov    edx,ebp
  420d85:	test   al,al
  420d87:	je     420d8c <isspace@plt+0x1d47c>
  420d89:	movzx  edx,WORD PTR [rcx]
  420d8c:	mov    WORD PTR [rcx],dx
  420d8f:	mov    rbp,QWORD PTR [rsp+0x18]
  420d94:	movsx  edi,bp
  420d97:	call   417a10 <isspace@plt+0x14100>
  420d9c:	lea    rcx,[r14+rbx*1]
  420da0:	add    rcx,0x52
  420da4:	mov    edx,ebp
  420da6:	test   al,al
  420da8:	je     420dad <isspace@plt+0x1d49d>
  420daa:	movzx  edx,WORD PTR [rcx]
  420dad:	mov    WORD PTR [rcx],dx
  420db0:	mov    al,0x1
  420db2:	mov    rcx,r12
  420db5:	mov    ebp,r13d
  420db8:	mov    r13,QWORD PTR [rsp+0x20]
  420dbd:	mov    r14,QWORD PTR [r14+0x8]
  420dc1:	test   r14,r14
  420dc4:	jne    420d00 <isspace@plt+0x1d3f0>
  420dca:	mov    rbx,QWORD PTR [r13+0x0]
  420dce:	mov    r12,QWORD PTR [r13+0x18]
  420dd2:	mov    rdi,r12
  420dd5:	call   41ee30 <isspace@plt+0x1b520>
  420dda:	test   al,al
  420ddc:	jns    420f0f <isspace@plt+0x1d5ff>
  420de2:	mov    rax,QWORD PTR [rbx+0x9a0]
  420de9:	cmp    BYTE PTR [rax+0x58],0x0
  420ded:	jne    420f0f <isspace@plt+0x1d5ff>
  420df3:	cmp    QWORD PTR [rbx+0x30],r13
  420df7:	jne    420f0f <isspace@plt+0x1d5ff>
  420dfd:	mov    rdi,r12
  420e00:	call   41f1e0 <isspace@plt+0x1b8d0>
  420e05:	cmp    eax,0x1
  420e08:	jg     420f0f <isspace@plt+0x1d5ff>
  420e0e:	mov    rdi,r12
  420e11:	call   41b700 <isspace@plt+0x17df0>
  420e16:	mov    r14d,eax
  420e19:	mov    rdi,QWORD PTR [r13+0x8]
  420e1d:	mov    esi,0x44
  420e22:	call   QWORD PTR [rdi]
  420e24:	mov    r15,rax
  420e27:	mov    rbp,rdx
  420e2a:	mov    rdi,r12
  420e2d:	call   41f750 <isspace@plt+0x1be40>
  420e32:	mov    rdi,rax
  420e35:	call   41ed20 <isspace@plt+0x1b410>
  420e3a:	mov    rbx,QWORD PTR [rax+0x18]
  420e3e:	mov    rdi,r12
  420e41:	call   41ecc0 <isspace@plt+0x1b3b0>
  420e46:	test   rax,rax
  420e49:	je     420f0f <isspace@plt+0x1d5ff>
  420e4f:	shr    rbp,0x10
  420e53:	mov    ecx,r14d
  420e56:	mov    r9d,ecx
  420e59:	and    r9d,0x3
  420e5d:	lea    r8,[rcx-0x1]
  420e61:	sub    rcx,r9
  420e64:	mov    rdx,r9
  420e67:	shl    rdx,0x4
  420e6b:	lea    rdi,[rdx+rdx*2]
  420e6f:	cmp    QWORD PTR [rax+0x18],rbx
  420e73:	jne    420e8d <isspace@plt+0x1d57d>
  420e75:	test   r14d,r14d
  420e78:	jle    420f02 <isspace@plt+0x1d5f2>
  420e7e:	cmp    r8,0x3
  420e82:	jae    420e91 <isspace@plt+0x1d581>
  420e84:	xor    esi,esi
  420e86:	test   r9,r9
  420e89:	jne    420eda <isspace@plt+0x1d5ca>
  420e8b:	jmp    420f02 <isspace@plt+0x1d5f2>
  420e8d:	jbe    420f02 <isspace@plt+0x1d5f2>
  420e8f:	jmp    420f0f <isspace@plt+0x1d5ff>
  420e91:	lea    rdx,[rax+0x48]
  420e95:	xor    esi,esi
  420e97:	nop    WORD PTR [rax+rax*1+0x0]
  420ea0:	or     QWORD PTR [rdx],r15
  420ea3:	mov    WORD PTR [rdx+0xa],bp
  420ea7:	or     QWORD PTR [rdx+0x30],r15
  420eab:	mov    WORD PTR [rdx+0x3a],bp
  420eaf:	or     QWORD PTR [rdx+0x60],r15
  420eb3:	mov    WORD PTR [rdx+0x6a],bp
  420eb7:	or     QWORD PTR [rdx+0x90],r15
  420ebe:	mov    WORD PTR [rdx+0x9a],bp
  420ec5:	add    rsi,0x4
  420ec9:	add    rdx,0xc0
  420ed0:	cmp    rcx,rsi
  420ed3:	jne    420ea0 <isspace@plt+0x1d590>
  420ed5:	test   r9,r9
  420ed8:	je     420f02 <isspace@plt+0x1d5f2>
  420eda:	lea    rdx,[rsi+rsi*2]
  420ede:	shl    rdx,0x4
  420ee2:	add    rdx,rax
  420ee5:	add    rdx,0x48
  420ee9:	xor    esi,esi
  420eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  420ef0:	or     QWORD PTR [rdx+rsi*1],r15
  420ef4:	mov    WORD PTR [rdx+rsi*1+0xa],bp
  420ef9:	add    rsi,0x30
  420efd:	cmp    rdi,rsi
  420f00:	jne    420ef0 <isspace@plt+0x1d5e0>
  420f02:	mov    rax,QWORD PTR [rax+0x8]
  420f06:	test   rax,rax
  420f09:	jne    420e6f <isspace@plt+0x1d55f>
  420f0f:	mov    rax,QWORD PTR [rsp+0x8]
  420f14:	mov    rax,QWORD PTR [rax+0x30]
  420f18:	test   rax,rax
  420f1b:	je     420f2f <isspace@plt+0x1d61f>
  420f1d:	cmp    rax,r13
  420f20:	je     420f2f <isspace@plt+0x1d61f>
  420f22:	cmp    QWORD PTR [rax+0x2c8],r13
  420f29:	jne    42107d <isspace@plt+0x1d76d>
  420f2f:	mov    rbx,QWORD PTR [r13+0x18]
  420f33:	mov    rdi,rbx
  420f36:	call   41abe0 <isspace@plt+0x172d0>
  420f3b:	mov    r12,rax
  420f3e:	mov    r15,rdx
  420f41:	mov    rdi,rbx
  420f44:	call   41f750 <isspace@plt+0x1be40>
  420f49:	mov    rbx,rax
  420f4c:	mov    rdi,QWORD PTR [r13+0x8]
  420f50:	mov    esi,0x42
  420f55:	call   QWORD PTR [rdi]
  420f57:	mov    QWORD PTR [rsp+0x50],rax
  420f5c:	mov    QWORD PTR [rsp+0x58],rdx
  420f61:	mov    rdi,QWORD PTR [r13+0x8]
  420f65:	mov    esi,0x43
  420f6a:	call   QWORD PTR [rdi]
  420f6c:	mov    QWORD PTR [rsp+0x40],rax
  420f71:	mov    QWORD PTR [rsp+0x48],rdx
  420f76:	mov    rdi,QWORD PTR [r13+0x8]
  420f7a:	mov    esi,0x45
  420f7f:	call   QWORD PTR [rdi]
  420f81:	mov    QWORD PTR [rsp+0x30],rax
  420f86:	mov    QWORD PTR [rsp+0x38],rdx
  420f8b:	mov    QWORD PTR [rsp],rbx
  420f8f:	mov    rdi,rbx
  420f92:	call   41f790 <isspace@plt+0x1be80>
  420f97:	test   rax,rax
  420f9a:	je     420fed <isspace@plt+0x1d6dd>
  420f9c:	mov    rbp,rax
  420f9f:	lea    rbx,[rsp+0x30]
  420fa4:	lea    r14,[rsp+0x50]
  420fa9:	nop    DWORD PTR [rax+0x0]
  420fb0:	mov    rdi,QWORD PTR [r13+0x18]
  420fb4:	mov    rsi,rbp
  420fb7:	mov    rdx,rbx
  420fba:	call   425e70 <isspace@plt+0x22560>
  420fbf:	mov    rdi,rbp
  420fc2:	call   41b4d0 <isspace@plt+0x17bc0>
  420fc7:	cmp    rax,r12
  420fca:	jb     420fed <isspace@plt+0x1d6dd>
  420fcc:	mov    rdi,r13
  420fcf:	mov    rsi,rbp
  420fd2:	mov    rdx,r14
  420fd5:	mov    rcx,rbx
  420fd8:	call   4260c0 <isspace@plt+0x227b0>
  420fdd:	mov    rdi,rbp
  420fe0:	call   41f790 <isspace@plt+0x1be80>
  420fe5:	mov    rbp,rax
  420fe8:	test   rax,rax
  420feb:	jne    420fb0 <isspace@plt+0x1d6a0>
  420fed:	mov    rdi,QWORD PTR [r13+0x18]
  420ff1:	lea    rbx,[rsp+0x30]
  420ff6:	mov    rbp,QWORD PTR [rsp]
  420ffa:	mov    rsi,rbp
  420ffd:	mov    rdx,rbx
  421000:	call   425e70 <isspace@plt+0x22560>
  421005:	lea    rdx,[rsp+0x40]
  42100a:	mov    rdi,r13
  42100d:	mov    rsi,rbp
  421010:	mov    rcx,rbx
  421013:	call   4260c0 <isspace@plt+0x227b0>
  421018:	mov    rdi,rbp
  42101b:	call   41f7f0 <isspace@plt+0x1bee0>
  421020:	test   rax,rax
  421023:	je     42107d <isspace@plt+0x1d76d>
  421025:	mov    rbp,rax
  421028:	lea    rbx,[rsp+0x30]
  42102d:	lea    r14,[rsp+0x50]
  421032:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42103c:	nop    DWORD PTR [rax+0x0]
  421040:	mov    rdi,QWORD PTR [r13+0x18]
  421044:	mov    rsi,rbp
  421047:	mov    rdx,rbx
  42104a:	call   425e70 <isspace@plt+0x22560>
  42104f:	mov    rdi,rbp
  421052:	call   41b4d0 <isspace@plt+0x17bc0>
  421057:	cmp    rax,r15
  42105a:	ja     42107d <isspace@plt+0x1d76d>
  42105c:	mov    rdi,r13
  42105f:	mov    rsi,rbp
  421062:	mov    rdx,r14
  421065:	mov    rcx,rbx
  421068:	call   4260c0 <isspace@plt+0x227b0>
  42106d:	mov    rdi,rbp
  421070:	call   41f7f0 <isspace@plt+0x1bee0>
  421075:	mov    rbp,rax
  421078:	test   rax,rax
  42107b:	jne    421040 <isspace@plt+0x1d730>
  42107d:	mov    r14,QWORD PTR [r13+0x18]
  421081:	mov    rdi,r14
  421084:	call   41b700 <isspace@plt+0x17df0>
  421089:	test   eax,eax
  42108b:	je     4210dd <isspace@plt+0x1d7cd>
  42108d:	mov    rdi,QWORD PTR [r13+0x8]
  421091:	mov    esi,0x4d
  421096:	call   QWORD PTR [rdi]
  421098:	mov    r15,rax
  42109b:	mov    r12,rdx
  42109e:	mov    rdi,r14
  4210a1:	call   41ecf0 <isspace@plt+0x1b3e0>
  4210a6:	mov    rbp,QWORD PTR [rax+0x8]
  4210aa:	test   rbp,rbp
  4210ad:	je     4210dd <isspace@plt+0x1d7cd>
  4210af:	nop
  4210b0:	lea    rbx,[rbp+0x28]
  4210b4:	mov    rdi,r14
  4210b7:	call   4205e0 <isspace@plt+0x1ccd0>
  4210bc:	mov    edx,0xf
  4210c1:	mov    rdi,rbx
  4210c4:	mov    rsi,rax
  4210c7:	call   403150 <strncpy@plt>
  4210cc:	mov    QWORD PTR [rbp+0x48],r15
  4210d0:	mov    QWORD PTR [rbp+0x50],r12
  4210d4:	mov    rbp,QWORD PTR [rbp+0x8]
  4210d8:	test   rbp,rbp
  4210db:	jne    4210b0 <isspace@plt+0x1d7a0>
  4210dd:	mov    esi,0xa
  4210e2:	xor    eax,eax
  4210e4:	mov    rdi,QWORD PTR [rsp+0x8]
  4210e9:	mov    rdx,r13
  4210ec:	call   420610 <isspace@plt+0x1cd00>
  4210f1:	mov    rax,QWORD PTR fs:0x28
  4210fa:	cmp    rax,QWORD PTR [rsp+0x60]
  4210ff:	jne    421110 <isspace@plt+0x1d800>
  421101:	add    rsp,0x68
  421105:	pop    rbx
  421106:	pop    r12
  421108:	pop    r13
  42110a:	pop    r14
  42110c:	pop    r15
  42110e:	pop    rbp
  42110f:	ret    
  421110:	call   403280 <__stack_chk_fail@plt>
  421115:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42111f:	nop
  421120:	push   rbp
  421121:	push   r15
  421123:	push   r14
  421125:	push   rbx
  421126:	push   rax
  421127:	mov    ebp,edx
  421129:	mov    r15,rsi
  42112c:	mov    r14,rdi
  42112f:	mov    rax,QWORD PTR fs:0x28
  421138:	mov    QWORD PTR [rsp],rax
  42113c:	mov    edi,0x1
  421141:	mov    esi,0x2e8
  421146:	call   403470 <calloc@plt>
  42114b:	test   rax,rax
  42114e:	je     42126c <isspace@plt+0x1d95c>
  421154:	mov    rbx,rax
  421157:	mov    QWORD PTR [rax],r14
  42115a:	mov    QWORD PTR [rax+0x10],r15
  42115e:	mov    rdi,QWORD PTR [r15]
  421161:	call   41b960 <isspace@plt+0x18050>
  421166:	mov    QWORD PTR [rbx+0x18],rax
  42116a:	mov    rdi,QWORD PTR [r14]
  42116d:	mov    rsi,rbx
  421170:	mov    edx,ebp
  421172:	call   QWORD PTR [rdi+0x18]
  421175:	mov    QWORD PTR [rbx+0x8],rax
  421179:	test   rax,rax
  42117c:	je     421264 <isspace@plt+0x1d954>
  421182:	mov    rax,QWORD PTR [rbx+0x18]
  421186:	test   rax,rax
  421189:	je     421264 <isspace@plt+0x1d954>
  42118f:	lea    rdi,[rbx+0x20]
  421193:	mov    esi,0x20
  421198:	call   426eb0 <isspace@plt+0x235a0>
  42119d:	mov    rdi,rbx
  4211a0:	add    rdi,0x68
  4211a4:	call   426bb0 <isspace@plt+0x232a0>
  4211a9:	add    DWORD PTR [r15+0xb0],0x1
  4211b1:	mov    rbp,QWORD PTR [rbx+0x18]
  4211b5:	mov    rdi,rbp
  4211b8:	call   41ee30 <isspace@plt+0x1b520>
  4211bd:	mov    rdi,rbp
  4211c0:	mov    esi,eax
  4211c2:	call   41baf0 <isspace@plt+0x181e0>
  4211c7:	mov    rdi,QWORD PTR [rbx+0x18]
  4211cb:	mov    esi,DWORD PTR [r14+0x7f8]
  4211d2:	call   41a470 <isspace@plt+0x16b60>
  4211d7:	mov    rax,QWORD PTR [r14+0x28]
  4211db:	test   rax,rax
  4211de:	je     4211e7 <isspace@plt+0x1d8d7>
  4211e0:	mov    QWORD PTR [rax+0x2d8],rbx
  4211e7:	mov    QWORD PTR [rbx+0x2e0],rax
  4211ee:	mov    QWORD PTR [r14+0x28],rbx
  4211f2:	mov    QWORD PTR [r14+0x30],rbx
  4211f6:	mov    rax,QWORD PTR [r14]
  4211f9:	mov    rdi,QWORD PTR [rbx+0x8]
  4211fd:	call   QWORD PTR [rax+0x28]
  421200:	lea    rax,[rip+0x21ed9]        # 4430e0 <isspace@plt+0x3f7d0>
  421207:	mov    QWORD PTR [rbx+0x90],rax
  42120e:	lea    rcx,[rax+0x60]
  421212:	mov    QWORD PTR [rbx+0xf0],rcx
  421219:	lea    rcx,[rax+0xc0]
  421220:	mov    QWORD PTR [rbx+0x150],rcx
  421227:	lea    rcx,[rax+0x120]
  42122e:	mov    QWORD PTR [rbx+0x1b0],rcx
  421235:	lea    rcx,[rax+0x180]
  42123c:	mov    QWORD PTR [rbx+0x210],rcx
  421243:	add    rax,0x1e0
  421249:	mov    QWORD PTR [rbx+0x270],rax
  421250:	mov    esi,0x7
  421255:	xor    eax,eax
  421257:	mov    rdi,r14
  42125a:	mov    rdx,rbx
  42125d:	call   420610 <isspace@plt+0x1cd00>
  421262:	jmp    42126e <isspace@plt+0x1d95e>
  421264:	mov    rdi,rbx
  421267:	call   421290 <isspace@plt+0x1d980>
  42126c:	xor    ebx,ebx
  42126e:	mov    rax,QWORD PTR fs:0x28
  421277:	cmp    rax,QWORD PTR [rsp]
  42127b:	jne    42128b <isspace@plt+0x1d97b>
  42127d:	mov    rax,rbx
  421280:	add    rsp,0x8
  421284:	pop    rbx
  421285:	pop    r14
  421287:	pop    r15
  421289:	pop    rbp
  42128a:	ret    
  42128b:	call   403280 <__stack_chk_fail@plt>
  421290:	push   rbx
  421291:	sub    rsp,0x10
  421295:	mov    rax,QWORD PTR fs:0x28
  42129e:	mov    QWORD PTR [rsp+0x8],rax
  4212a3:	test   rdi,rdi
  4212a6:	je     42135c <isspace@plt+0x1da4c>
  4212ac:	mov    rbx,rdi
  4212af:	mov    rax,QWORD PTR [rdi]
  4212b2:	mov    rcx,QWORD PTR [rax+0x28]
  4212b6:	test   rcx,rcx
  4212b9:	jne    4212cc <isspace@plt+0x1d9bc>
  4212bb:	jmp    4212e2 <isspace@plt+0x1d9d2>
  4212bd:	nop    DWORD PTR [rax]
  4212c0:	mov    rcx,QWORD PTR [rcx+0x2e0]
  4212c7:	test   rcx,rcx
  4212ca:	je     4212e2 <isspace@plt+0x1d9d2>
  4212cc:	cmp    QWORD PTR [rcx+0x2c8],rbx
  4212d3:	jne    4212c0 <isspace@plt+0x1d9b0>
  4212d5:	mov    QWORD PTR [rcx+0x2c8],0x0
  4212e0:	jmp    4212c0 <isspace@plt+0x1d9b0>
  4212e2:	mov    rax,QWORD PTR [rax]
  4212e5:	test   rax,rax
  4212e8:	je     4212f1 <isspace@plt+0x1d9e1>
  4212ea:	mov    rdi,QWORD PTR [rbx+0x8]
  4212ee:	call   QWORD PTR [rax+0x20]
  4212f1:	mov    rdi,QWORD PTR [rbx+0x18]
  4212f5:	call   41b730 <isspace@plt+0x17e20>
  4212fa:	mov    rdi,QWORD PTR [rbx+0x98]
  421301:	call   408fd0 <isspace@plt+0x56c0>
  421306:	mov    rdi,QWORD PTR [rbx+0xf8]
  42130d:	call   408fd0 <isspace@plt+0x56c0>
  421312:	mov    rdi,QWORD PTR [rbx+0x158]
  421319:	call   408fd0 <isspace@plt+0x56c0>
  42131e:	mov    rdi,QWORD PTR [rbx+0x1b8]
  421325:	call   408fd0 <isspace@plt+0x56c0>
  42132a:	mov    rdi,QWORD PTR [rbx+0x218]
  421331:	call   408fd0 <isspace@plt+0x56c0>
  421336:	mov    rdi,QWORD PTR [rbx+0x278]
  42133d:	call   408fd0 <isspace@plt+0x56c0>
  421342:	lea    rdi,[rbx+0x20]
  421346:	call   426f40 <isspace@plt+0x23630>
  42134b:	lea    rdi,[rbx+0x68]
  42134f:	call   426be0 <isspace@plt+0x232d0>
  421354:	mov    rdi,rbx
  421357:	call   4030d0 <free@plt>
  42135c:	mov    rax,QWORD PTR fs:0x28
  421365:	cmp    rax,QWORD PTR [rsp+0x8]
  42136a:	jne    421372 <isspace@plt+0x1da62>
  42136c:	add    rsp,0x10
  421370:	pop    rbx
  421371:	ret    
  421372:	call   403280 <__stack_chk_fail@plt>
  421377:	nop    WORD PTR [rax+rax*1+0x0]
  421380:	push   r15
  421382:	push   r14
  421384:	push   rbx
  421385:	sub    rsp,0x10
  421389:	mov    rax,QWORD PTR fs:0x28
  421392:	mov    QWORD PTR [rsp+0x8],rax
  421397:	mov    rax,QWORD PTR [rdi+0x10]
  42139b:	mov    rbx,QWORD PTR [rax+0x8]
  42139f:	test   rbx,rbx
  4213a2:	je     4213f1 <isspace@plt+0x1dae1>
  4213a4:	mov    r15,rdi
  4213a7:	mov    QWORD PTR [rax+0x8],0x0
  4213af:	mov    rdi,QWORD PTR [rdi]
  4213b2:	mov    rsi,rbx
  4213b5:	call   421420 <isspace@plt+0x1db10>
  4213ba:	mov    rsi,QWORD PTR [r15+0x10]
  4213be:	mov    QWORD PTR [rsi+0x8],rbx
  4213c2:	test   rax,rax
  4213c5:	je     4213f1 <isspace@plt+0x1dae1>
  4213c7:	mov    r14,rax
  4213ca:	mov    rdi,QWORD PTR [r15]
  4213cd:	call   421730 <isspace@plt+0x1de20>
  4213d2:	mov    DWORD PTR [r14+0xb0],0x1
  4213dd:	mov    QWORD PTR [r15+0x10],r14
  4213e1:	mov    rdi,QWORD PTR [r15+0x18]
  4213e5:	mov    rsi,QWORD PTR [r14]
  4213e8:	call   41b880 <isspace@plt+0x17f70>
  4213ed:	mov    al,0x1
  4213ef:	jmp    4213f3 <isspace@plt+0x1dae3>
  4213f1:	xor    eax,eax
  4213f3:	mov    rcx,QWORD PTR fs:0x28
  4213fc:	cmp    rcx,QWORD PTR [rsp+0x8]
  421401:	jne    42140d <isspace@plt+0x1dafd>
  421403:	add    rsp,0x10
  421407:	pop    rbx
  421408:	pop    r14
  42140a:	pop    r15
  42140c:	ret    
  42140d:	call   403280 <__stack_chk_fail@plt>
  421412:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42141c:	nop    DWORD PTR [rax+0x0]
  421420:	push   r15
  421422:	push   r14
  421424:	push   r13
  421426:	push   r12
  421428:	push   rbx
  421429:	sub    rsp,0xa0
  421430:	mov    r12,rsi
  421433:	mov    r14,rdi
  421436:	mov    rax,QWORD PTR fs:0x28
  42143f:	mov    QWORD PTR [rsp+0x98],rax
  421447:	test   rsi,rsi
  42144a:	je     42149e <isspace@plt+0x1db8e>
  42144c:	mov    rdi,r12
  42144f:	call   420980 <isspace@plt+0x1d070>
  421454:	test   rax,rax
  421457:	je     4216f7 <isspace@plt+0x1dde7>
  42145d:	mov    r15,rax
  421460:	mov    rbx,QWORD PTR [r14+0x8]
  421464:	test   rbx,rbx
  421467:	jne    42147c <isspace@plt+0x1db6c>
  421469:	jmp    4214a1 <isspace@plt+0x1db91>
  42146b:	nop    DWORD PTR [rax+rax*1+0x0]
  421470:	mov    rbx,QWORD PTR [rbx+0x458]
  421477:	test   rbx,rbx
  42147a:	je     4214a1 <isspace@plt+0x1db91>
  42147c:	mov    rdi,QWORD PTR [rbx+0x8]
  421480:	test   rdi,rdi
  421483:	je     421470 <isspace@plt+0x1db60>
  421485:	mov    rsi,r15
  421488:	call   403480 <strcmp@plt>
  42148d:	test   eax,eax
  42148f:	jne    421470 <isspace@plt+0x1db60>
  421491:	mov    rdi,r15
  421494:	call   4030d0 <free@plt>
  421499:	jmp    4216f9 <isspace@plt+0x1dde9>
  42149e:	xor    r15d,r15d
  4214a1:	mov    esi,DWORD PTR [r14+0xad0]
  4214a8:	mov    rdi,r12
  4214ab:	call   411a90 <isspace@plt+0xe180>
  4214b0:	mov    r13,rax
  4214b3:	test   r12,r12
  4214b6:	je     4214d5 <isspace@plt+0x1dbc5>
  4214b8:	test   r13,r13
  4214bb:	jne    4214d5 <isspace@plt+0x1dbc5>
  4214bd:	call   403130 <__errno_location@plt>
  4214c2:	cmp    DWORD PTR [rax],0x2
  4214c5:	jne    4216d6 <isspace@plt+0x1ddc6>
  4214cb:	xor    edi,edi
  4214cd:	call   411a50 <isspace@plt+0xe140>
  4214d2:	mov    r13,rax
  4214d5:	test   r13,r13
  4214d8:	je     4216d6 <isspace@plt+0x1ddc6>
  4214de:	mov    edi,0x1
  4214e3:	mov    esi,0x468
  4214e8:	call   403470 <calloc@plt>
  4214ed:	test   rax,rax
  4214f0:	je     4216d9 <isspace@plt+0x1ddc9>
  4214f6:	mov    rbx,rax
  4214f9:	mov    DWORD PTR [rax+0x14],0xffffffff
  421500:	mov    QWORD PTR [rax],r13
  421503:	lea    rdi,[rsp+0x8]
  421508:	mov    rsi,r13
  42150b:	call   4100a0 <isspace@plt+0xc790>
  421510:	vmovups ymm0,YMMWORD PTR [rsp+0x78]
  421516:	vmovups YMMWORD PTR [rbx+0x90],ymm0
  42151e:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  421524:	vmovups ymm1,YMMWORD PTR [rsp+0x48]
  42152a:	vmovups ymm2,YMMWORD PTR [rsp+0x68]
  421530:	vmovups YMMWORD PTR [rbx+0x80],ymm2
  421538:	vmovups YMMWORD PTR [rbx+0x60],ymm1
  42153d:	vmovups ymm1,YMMWORD PTR [rsp+0x28]
  421543:	vmovups YMMWORD PTR [rbx+0x40],ymm1
  421548:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  42154d:	lea    rdi,[rbx+0xb8]
  421554:	vzeroupper 
  421557:	call   426bb0 <isspace@plt+0x232a0>
  42155c:	lea    rdi,[rbx+0xd8]
  421563:	call   426bb0 <isspace@plt+0x232a0>
  421568:	lea    rdi,[rbx+0xf8]
  42156f:	call   426bb0 <isspace@plt+0x232a0>
  421574:	lea    rdi,[rbx+0x118]
  42157b:	call   426bb0 <isspace@plt+0x232a0>
  421580:	lea    rdi,[rbx+0x138]
  421587:	call   426bb0 <isspace@plt+0x232a0>
  42158c:	lea    rdi,[rbx+0x158]
  421593:	call   426bb0 <isspace@plt+0x232a0>
  421598:	lea    rdi,[rbx+0x178]
  42159f:	call   426bb0 <isspace@plt+0x232a0>
  4215a4:	lea    rdi,[rbx+0x198]
  4215ab:	call   426bb0 <isspace@plt+0x232a0>
  4215b0:	lea    rdi,[rbx+0x1b8]
  4215b7:	call   426bb0 <isspace@plt+0x232a0>
  4215bc:	lea    rdi,[rbx+0x1d8]
  4215c3:	call   426bb0 <isspace@plt+0x232a0>
  4215c8:	lea    rdi,[rbx+0x1f8]
  4215cf:	call   426bb0 <isspace@plt+0x232a0>
  4215d4:	lea    rdi,[rbx+0x218]
  4215db:	call   426bb0 <isspace@plt+0x232a0>
  4215e0:	lea    rdi,[rbx+0x238]
  4215e7:	call   426bb0 <isspace@plt+0x232a0>
  4215ec:	lea    rdi,[rbx+0x258]
  4215f3:	call   426bb0 <isspace@plt+0x232a0>
  4215f8:	lea    rdi,[rbx+0x278]
  4215ff:	call   426bb0 <isspace@plt+0x232a0>
  421604:	lea    rdi,[rbx+0x298]
  42160b:	call   426bb0 <isspace@plt+0x232a0>
  421610:	lea    rdi,[rbx+0x2b8]
  421617:	call   426bb0 <isspace@plt+0x232a0>
  42161c:	lea    rdi,[rbx+0x2d8]
  421623:	call   426bb0 <isspace@plt+0x232a0>
  421628:	lea    rdi,[rbx+0x2f8]
  42162f:	call   426bb0 <isspace@plt+0x232a0>
  421634:	lea    rdi,[rbx+0x318]
  42163b:	call   426bb0 <isspace@plt+0x232a0>
  421640:	lea    rdi,[rbx+0x338]
  421647:	call   426bb0 <isspace@plt+0x232a0>
  42164c:	lea    rdi,[rbx+0x358]
  421653:	call   426bb0 <isspace@plt+0x232a0>
  421658:	lea    rdi,[rbx+0x378]
  42165f:	call   426bb0 <isspace@plt+0x232a0>
  421664:	lea    rdi,[rbx+0x398]
  42166b:	call   426bb0 <isspace@plt+0x232a0>
  421670:	lea    rdi,[rbx+0x3b8]
  421677:	call   426bb0 <isspace@plt+0x232a0>
  42167c:	lea    rdi,[rbx+0x3d8]
  421683:	call   426bb0 <isspace@plt+0x232a0>
  421688:	lea    rdi,[rbx+0x3f8]
  42168f:	call   426bb0 <isspace@plt+0x232a0>
  421694:	mov    rdi,rbx
  421697:	add    rdi,0x418
  42169e:	call   426bb0 <isspace@plt+0x232a0>
  4216a3:	mov    rax,QWORD PTR [r14+0x8]
  4216a7:	test   rax,rax
  4216aa:	je     4216b3 <isspace@plt+0x1dda3>
  4216ac:	mov    QWORD PTR [rax+0x460],rbx
  4216b3:	mov    QWORD PTR [rbx+0x458],rax
  4216ba:	mov    QWORD PTR [r14+0x8],rbx
  4216be:	mov    QWORD PTR [rbx+0x8],r15
  4216c2:	mov    esi,0x3
  4216c7:	xor    eax,eax
  4216c9:	mov    rdi,r14
  4216cc:	mov    rdx,rbx
  4216cf:	call   420610 <isspace@plt+0x1cd00>
  4216d4:	jmp    4216f9 <isspace@plt+0x1dde9>
  4216d6:	xor    r13d,r13d
  4216d9:	mov    rdi,r15
  4216dc:	call   4030d0 <free@plt>
  4216e1:	mov    rdi,r13
  4216e4:	call   40fe70 <isspace@plt+0xc560>
  4216e9:	xor    ebx,ebx
  4216eb:	xor    esi,esi
  4216ed:	mov    rdi,r14
  4216f0:	call   421730 <isspace@plt+0x1de20>
  4216f5:	jmp    4216f9 <isspace@plt+0x1dde9>
  4216f7:	xor    ebx,ebx
  4216f9:	mov    rax,QWORD PTR fs:0x28
  421702:	cmp    rax,QWORD PTR [rsp+0x98]
  42170a:	jne    421720 <isspace@plt+0x1de10>
  42170c:	mov    rax,rbx
  42170f:	add    rsp,0xa0
  421716:	pop    rbx
  421717:	pop    r12
  421719:	pop    r13
  42171b:	pop    r14
  42171d:	pop    r15
  42171f:	ret    
  421720:	call   403280 <__stack_chk_fail@plt>
  421725:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42172f:	nop
  421730:	push   r14
  421732:	push   rbx
  421733:	push   rax
  421734:	mov    rax,QWORD PTR fs:0x28
  42173d:	mov    QWORD PTR [rsp],rax
  421741:	test   rsi,rsi
  421744:	je     421918 <isspace@plt+0x1e008>
  42174a:	mov    rbx,rsi
  42174d:	mov    eax,DWORD PTR [rsi+0xb0]
  421753:	cmp    eax,0x2
  421756:	jl     421766 <isspace@plt+0x1de56>
  421758:	add    eax,0xffffffff
  42175b:	mov    DWORD PTR [rbx+0xb0],eax
  421761:	jmp    421918 <isspace@plt+0x1e008>
  421766:	mov    r14,rdi
  421769:	mov    esi,0x6
  42176e:	xor    eax,eax
  421770:	mov    rdx,rbx
  421773:	call   420610 <isspace@plt+0x1cd00>
  421778:	lea    rdi,[rbx+0xb8]
  42177f:	call   426be0 <isspace@plt+0x232d0>
  421784:	lea    rdi,[rbx+0xd8]
  42178b:	call   426be0 <isspace@plt+0x232d0>
  421790:	lea    rdi,[rbx+0xf8]
  421797:	call   426be0 <isspace@plt+0x232d0>
  42179c:	lea    rdi,[rbx+0x118]
  4217a3:	call   426be0 <isspace@plt+0x232d0>
  4217a8:	lea    rdi,[rbx+0x138]
  4217af:	call   426be0 <isspace@plt+0x232d0>
  4217b4:	lea    rdi,[rbx+0x158]
  4217bb:	call   426be0 <isspace@plt+0x232d0>
  4217c0:	lea    rdi,[rbx+0x178]
  4217c7:	call   426be0 <isspace@plt+0x232d0>
  4217cc:	lea    rdi,[rbx+0x198]
  4217d3:	call   426be0 <isspace@plt+0x232d0>
  4217d8:	lea    rdi,[rbx+0x1b8]
  4217df:	call   426be0 <isspace@plt+0x232d0>
  4217e4:	lea    rdi,[rbx+0x1d8]
  4217eb:	call   426be0 <isspace@plt+0x232d0>
  4217f0:	lea    rdi,[rbx+0x1f8]
  4217f7:	call   426be0 <isspace@plt+0x232d0>
  4217fc:	lea    rdi,[rbx+0x218]
  421803:	call   426be0 <isspace@plt+0x232d0>
  421808:	lea    rdi,[rbx+0x238]
  42180f:	call   426be0 <isspace@plt+0x232d0>
  421814:	lea    rdi,[rbx+0x258]
  42181b:	call   426be0 <isspace@plt+0x232d0>
  421820:	lea    rdi,[rbx+0x278]
  421827:	call   426be0 <isspace@plt+0x232d0>
  42182c:	lea    rdi,[rbx+0x298]
  421833:	call   426be0 <isspace@plt+0x232d0>
  421838:	lea    rdi,[rbx+0x2b8]
  42183f:	call   426be0 <isspace@plt+0x232d0>
  421844:	lea    rdi,[rbx+0x2d8]
  42184b:	call   426be0 <isspace@plt+0x232d0>
  421850:	lea    rdi,[rbx+0x2f8]
  421857:	call   426be0 <isspace@plt+0x232d0>
  42185c:	lea    rdi,[rbx+0x318]
  421863:	call   426be0 <isspace@plt+0x232d0>
  421868:	lea    rdi,[rbx+0x338]
  42186f:	call   426be0 <isspace@plt+0x232d0>
  421874:	lea    rdi,[rbx+0x358]
  42187b:	call   426be0 <isspace@plt+0x232d0>
  421880:	lea    rdi,[rbx+0x378]
  421887:	call   426be0 <isspace@plt+0x232d0>
  42188c:	lea    rdi,[rbx+0x398]
  421893:	call   426be0 <isspace@plt+0x232d0>
  421898:	lea    rdi,[rbx+0x3b8]
  42189f:	call   426be0 <isspace@plt+0x232d0>
  4218a4:	lea    rdi,[rbx+0x3d8]
  4218ab:	call   426be0 <isspace@plt+0x232d0>
  4218b0:	lea    rdi,[rbx+0x3f8]
  4218b7:	call   426be0 <isspace@plt+0x232d0>
  4218bc:	lea    rdi,[rbx+0x418]
  4218c3:	call   426be0 <isspace@plt+0x232d0>
  4218c8:	mov    rdi,QWORD PTR [rbx]
  4218cb:	call   40fe70 <isspace@plt+0xc560>
  4218d0:	mov    rdi,QWORD PTR [rbx+0x8]
  4218d4:	call   4030d0 <free@plt>
  4218d9:	mov    rax,QWORD PTR [rbx+0x460]
  4218e0:	test   rax,rax
  4218e3:	je     4218f3 <isspace@plt+0x1dfe3>
  4218e5:	mov    rcx,QWORD PTR [rbx+0x458]
  4218ec:	mov    QWORD PTR [rax+0x458],rcx
  4218f3:	mov    rcx,QWORD PTR [rbx+0x458]
  4218fa:	test   rcx,rcx
  4218fd:	je     421906 <isspace@plt+0x1dff6>
  4218ff:	mov    QWORD PTR [rcx+0x460],rax
  421906:	cmp    QWORD PTR [r14+0x8],rbx
  42190a:	jne    421910 <isspace@plt+0x1e000>
  42190c:	mov    QWORD PTR [r14+0x8],rcx
  421910:	mov    rdi,rbx
  421913:	call   4030d0 <free@plt>
  421918:	mov    rax,QWORD PTR fs:0x28
  421921:	cmp    rax,QWORD PTR [rsp]
  421925:	jne    42192f <isspace@plt+0x1e01f>
  421927:	add    rsp,0x8
  42192b:	pop    rbx
  42192c:	pop    r14
  42192e:	ret    
  42192f:	call   403280 <__stack_chk_fail@plt>
  421934:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42193e:	xchg   ax,ax
  421940:	push   r15
  421942:	push   r14
  421944:	push   rbx
  421945:	sub    rsp,0x10
  421949:	mov    rbx,rdi
  42194c:	mov    rax,QWORD PTR fs:0x28
  421955:	mov    QWORD PTR [rsp+0x8],rax
  42195a:	mov    rdi,QWORD PTR [rdi]
  42195d:	mov    rsi,QWORD PTR [rbx+0x10]
  421961:	mov    edx,0x100
  421966:	call   421120 <isspace@plt+0x1d810>
  42196b:	test   rax,rax
  42196e:	je     421ac6 <isspace@plt+0x1e1b6>
  421974:	mov    r14,rax
  421977:	cmp    QWORD PTR [rbx+0x98],0x0
  42197f:	je     421ae6 <isspace@plt+0x1e1d6>
  421985:	call   408f90 <isspace@plt+0x5680>
  42198a:	mov    QWORD PTR [r14+0x98],rax
  421991:	test   rax,rax
  421994:	je     4219a5 <isspace@plt+0x1e095>
  421996:	mov    rsi,QWORD PTR [rbx+0x98]
  42199d:	mov    rdi,rax
  4219a0:	call   408e00 <isspace@plt+0x54f0>
  4219a5:	cmp    QWORD PTR [rbx+0xf8],0x0
  4219ad:	je     421afb <isspace@plt+0x1e1eb>
  4219b3:	call   408f90 <isspace@plt+0x5680>
  4219b8:	mov    QWORD PTR [r14+0xf8],rax
  4219bf:	test   rax,rax
  4219c2:	je     4219d3 <isspace@plt+0x1e0c3>
  4219c4:	mov    rsi,QWORD PTR [rbx+0xf8]
  4219cb:	mov    rdi,rax
  4219ce:	call   408e00 <isspace@plt+0x54f0>
  4219d3:	cmp    QWORD PTR [rbx+0x158],0x0
  4219db:	je     421b10 <isspace@plt+0x1e200>
  4219e1:	call   408f90 <isspace@plt+0x5680>
  4219e6:	mov    QWORD PTR [r14+0x158],rax
  4219ed:	test   rax,rax
  4219f0:	je     421a01 <isspace@plt+0x1e0f1>
  4219f2:	mov    rsi,QWORD PTR [rbx+0x158]
  4219f9:	mov    rdi,rax
  4219fc:	call   408e00 <isspace@plt+0x54f0>
  421a01:	cmp    QWORD PTR [rbx+0x1b8],0x0
  421a09:	je     421b25 <isspace@plt+0x1e215>
  421a0f:	call   408f90 <isspace@plt+0x5680>
  421a14:	mov    QWORD PTR [r14+0x1b8],rax
  421a1b:	test   rax,rax
  421a1e:	je     421a2f <isspace@plt+0x1e11f>
  421a20:	mov    rsi,QWORD PTR [rbx+0x1b8]
  421a27:	mov    rdi,rax
  421a2a:	call   408e00 <isspace@plt+0x54f0>
  421a2f:	cmp    QWORD PTR [rbx+0x218],0x0
  421a37:	je     421b3a <isspace@plt+0x1e22a>
  421a3d:	call   408f90 <isspace@plt+0x5680>
  421a42:	mov    QWORD PTR [r14+0x218],rax
  421a49:	test   rax,rax
  421a4c:	je     421a5d <isspace@plt+0x1e14d>
  421a4e:	mov    rsi,QWORD PTR [rbx+0x218]
  421a55:	mov    rdi,rax
  421a58:	call   408e00 <isspace@plt+0x54f0>
  421a5d:	cmp    QWORD PTR [rbx+0x278],0x0
  421a65:	je     421b4f <isspace@plt+0x1e23f>
  421a6b:	call   408f90 <isspace@plt+0x5680>
  421a70:	mov    QWORD PTR [r14+0x278],rax
  421a77:	test   rax,rax
  421a7a:	je     421a8b <isspace@plt+0x1e17b>
  421a7c:	mov    rsi,QWORD PTR [rbx+0x278]
  421a83:	mov    rdi,rax
  421a86:	call   408e00 <isspace@plt+0x54f0>
  421a8b:	mov    rax,QWORD PTR [rbx+0x10]
  421a8f:	mov    QWORD PTR [r14+0x10],rax
  421a93:	mov    r15,QWORD PTR [r14+0x18]
  421a97:	mov    rdi,QWORD PTR [rbx+0x18]
  421a9b:	call   41ee30 <isspace@plt+0x1b520>
  421aa0:	mov    rdi,r15
  421aa3:	mov    esi,eax
  421aa5:	call   41baf0 <isspace@plt+0x181e0>
  421aaa:	mov    r14,QWORD PTR [r14+0x18]
  421aae:	mov    rdi,QWORD PTR [rbx+0x18]
  421ab2:	call   41ec80 <isspace@plt+0x1b370>
  421ab7:	mov    rdi,r14
  421aba:	mov    rsi,rax
  421abd:	call   41ad60 <isspace@plt+0x17450>
  421ac2:	mov    al,0x1
  421ac4:	jmp    421ac8 <isspace@plt+0x1e1b8>
  421ac6:	xor    eax,eax
  421ac8:	mov    rcx,QWORD PTR fs:0x28
  421ad1:	cmp    rcx,QWORD PTR [rsp+0x8]
  421ad6:	jne    421b64 <isspace@plt+0x1e254>
  421adc:	add    rsp,0x10
  421ae0:	pop    rbx
  421ae1:	pop    r14
  421ae3:	pop    r15
  421ae5:	ret    
  421ae6:	mov    rax,QWORD PTR [r14+0x98]
  421aed:	test   rax,rax
  421af0:	jne    421996 <isspace@plt+0x1e086>
  421af6:	jmp    4219a5 <isspace@plt+0x1e095>
  421afb:	mov    rax,QWORD PTR [r14+0xf8]
  421b02:	test   rax,rax
  421b05:	jne    4219c4 <isspace@plt+0x1e0b4>
  421b0b:	jmp    4219d3 <isspace@plt+0x1e0c3>
  421b10:	mov    rax,QWORD PTR [r14+0x158]
  421b17:	test   rax,rax
  421b1a:	jne    4219f2 <isspace@plt+0x1e0e2>
  421b20:	jmp    421a01 <isspace@plt+0x1e0f1>
  421b25:	mov    rax,QWORD PTR [r14+0x1b8]
  421b2c:	test   rax,rax
  421b2f:	jne    421a20 <isspace@plt+0x1e110>
  421b35:	jmp    421a2f <isspace@plt+0x1e11f>
  421b3a:	mov    rax,QWORD PTR [r14+0x218]
  421b41:	test   rax,rax
  421b44:	jne    421a4e <isspace@plt+0x1e13e>
  421b4a:	jmp    421a5d <isspace@plt+0x1e14d>
  421b4f:	mov    rax,QWORD PTR [r14+0x278]
  421b56:	test   rax,rax
  421b59:	jne    421a7c <isspace@plt+0x1e16c>
  421b5f:	jmp    421a8b <isspace@plt+0x1e17b>
  421b64:	call   403280 <__stack_chk_fail@plt>
  421b69:	nop    DWORD PTR [rax+0x0]
  421b70:	push   rax
  421b71:	mov    rax,QWORD PTR fs:0x28
  421b7a:	mov    QWORD PTR [rsp],rax
  421b7e:	test   rdi,rdi
  421b81:	je     421ba5 <isspace@plt+0x1e295>
  421b83:	mov    rax,QWORD PTR [rdi]
  421b86:	mov    QWORD PTR [rax+0x30],rdi
  421b8a:	mov    rax,QWORD PTR [rax]
  421b8d:	mov    rdi,QWORD PTR [rdi+0x8]
  421b91:	call   QWORD PTR [rax+0x28]
  421b94:	mov    rax,QWORD PTR fs:0x28
  421b9d:	cmp    rax,QWORD PTR [rsp]
  421ba1:	jne    421bb6 <isspace@plt+0x1e2a6>
  421ba3:	pop    rax
  421ba4:	ret    
  421ba5:	mov    rax,QWORD PTR fs:0x28
  421bae:	cmp    rax,QWORD PTR [rsp]
  421bb2:	jne    421bb6 <isspace@plt+0x1e2a6>
  421bb4:	pop    rax
  421bb5:	ret    
  421bb6:	call   403280 <__stack_chk_fail@plt>
  421bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  421bc0:	push   rax
  421bc1:	mov    rax,QWORD PTR fs:0x28
  421bca:	mov    QWORD PTR [rsp],rax
  421bce:	mov    rax,QWORD PTR [rdi+0x30]
  421bd2:	test   rax,rax
  421bd5:	je     421c0e <isspace@plt+0x1e2fe>
  421bd7:	mov    rax,QWORD PTR [rax+0x2e0]
  421bde:	test   rax,rax
  421be1:	jne    421bec <isspace@plt+0x1e2dc>
  421be3:	mov    rax,QWORD PTR [rdi+0x28]
  421be7:	test   rax,rax
  421bea:	je     421c0e <isspace@plt+0x1e2fe>
  421bec:	mov    rcx,QWORD PTR [rax]
  421bef:	mov    QWORD PTR [rcx+0x30],rax
  421bf3:	mov    rcx,QWORD PTR [rcx]
  421bf6:	mov    rdi,QWORD PTR [rax+0x8]
  421bfa:	call   QWORD PTR [rcx+0x28]
  421bfd:	mov    rax,QWORD PTR fs:0x28
  421c06:	cmp    rax,QWORD PTR [rsp]
  421c0a:	jne    421c1f <isspace@plt+0x1e30f>
  421c0c:	pop    rax
  421c0d:	ret    
  421c0e:	mov    rax,QWORD PTR fs:0x28
  421c17:	cmp    rax,QWORD PTR [rsp]
  421c1b:	jne    421c1f <isspace@plt+0x1e30f>
  421c1d:	pop    rax
  421c1e:	ret    
  421c1f:	call   403280 <__stack_chk_fail@plt>
  421c24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c2e:	xchg   ax,ax
  421c30:	push   rax
  421c31:	mov    rax,QWORD PTR fs:0x28
  421c3a:	mov    QWORD PTR [rsp],rax
  421c3e:	mov    rax,QWORD PTR [rdi+0x30]
  421c42:	test   rax,rax
  421c45:	je     421c96 <isspace@plt+0x1e386>
  421c47:	mov    rax,QWORD PTR [rax+0x2d8]
  421c4e:	test   rax,rax
  421c51:	jne    421c74 <isspace@plt+0x1e364>
  421c53:	mov    rcx,QWORD PTR [rdi+0x28]
  421c57:	nop    WORD PTR [rax+rax*1+0x0]
  421c60:	mov    rax,rcx
  421c63:	mov    rcx,QWORD PTR [rcx+0x2e0]
  421c6a:	test   rcx,rcx
  421c6d:	jne    421c60 <isspace@plt+0x1e350>
  421c6f:	test   rax,rax
  421c72:	je     421c96 <isspace@plt+0x1e386>
  421c74:	mov    rcx,QWORD PTR [rax]
  421c77:	mov    QWORD PTR [rcx+0x30],rax
  421c7b:	mov    rcx,QWORD PTR [rcx]
  421c7e:	mov    rdi,QWORD PTR [rax+0x8]
  421c82:	call   QWORD PTR [rcx+0x28]
  421c85:	mov    rax,QWORD PTR fs:0x28
  421c8e:	cmp    rax,QWORD PTR [rsp]
  421c92:	jne    421ca7 <isspace@plt+0x1e397>
  421c94:	pop    rax
  421c95:	ret    
  421c96:	mov    rax,QWORD PTR fs:0x28
  421c9f:	cmp    rax,QWORD PTR [rsp]
  421ca3:	jne    421ca7 <isspace@plt+0x1e397>
  421ca5:	pop    rax
  421ca6:	ret    
  421ca7:	call   403280 <__stack_chk_fail@plt>
  421cac:	nop    DWORD PTR [rax+0x0]
  421cb0:	push   rax
  421cb1:	mov    rax,QWORD PTR fs:0x28
  421cba:	mov    QWORD PTR [rsp],rax
  421cbe:	mov    rdi,QWORD PTR [rdi+0x8]
  421cc2:	call   QWORD PTR [rdi+0x28]
  421cc5:	mov    rcx,QWORD PTR fs:0x28
  421cce:	cmp    rcx,QWORD PTR [rsp]
  421cd2:	jne    421cd6 <isspace@plt+0x1e3c6>
  421cd4:	pop    rcx
  421cd5:	ret    
  421cd6:	call   403280 <__stack_chk_fail@plt>
  421cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  421ce0:	push   rbx
  421ce1:	sub    rsp,0x10
  421ce5:	mov    rax,QWORD PTR fs:0x28
  421cee:	mov    QWORD PTR [rsp+0x8],rax
  421cf3:	mov    rbx,QWORD PTR [rdi+0x28]
  421cf7:	test   rbx,rbx
  421cfa:	je     421d15 <isspace@plt+0x1e405>
  421cfc:	nop    DWORD PTR [rax+0x0]
  421d00:	mov    rdi,QWORD PTR [rbx+0x18]
  421d04:	call   41a4a0 <isspace@plt+0x16b90>
  421d09:	mov    rbx,QWORD PTR [rbx+0x2e0]
  421d10:	test   rbx,rbx
  421d13:	jne    421d00 <isspace@plt+0x1e3f0>
  421d15:	mov    rax,QWORD PTR fs:0x28
  421d1e:	cmp    rax,QWORD PTR [rsp+0x8]
  421d23:	jne    421d2b <isspace@plt+0x1e41b>
  421d25:	add    rsp,0x10
  421d29:	pop    rbx
  421d2a:	ret    
  421d2b:	call   403280 <__stack_chk_fail@plt>
  421d30:	push   rbx
  421d31:	sub    rsp,0x10
  421d35:	mov    rbx,rdi
  421d38:	mov    rax,QWORD PTR fs:0x28
  421d41:	mov    QWORD PTR [rsp+0x8],rax
  421d46:	mov    rdi,QWORD PTR [rdi]
  421d49:	call   QWORD PTR [rdi+0x60]
  421d4c:	mov    rdi,QWORD PTR [rbx]
  421d4f:	call   QWORD PTR [rdi+0x58]
  421d52:	mov    rax,QWORD PTR fs:0x28
  421d5b:	cmp    rax,QWORD PTR [rsp+0x8]
  421d60:	jne    421d68 <isspace@plt+0x1e458>
  421d62:	add    rsp,0x10
  421d66:	pop    rbx
  421d67:	ret    
  421d68:	call   403280 <__stack_chk_fail@plt>
  421d6d:	nop    DWORD PTR [rax]
  421d70:	push   rax
  421d71:	mov    rax,QWORD PTR fs:0x28
  421d7a:	mov    QWORD PTR [rsp],rax
  421d7e:	mov    rdi,QWORD PTR [rdi]
  421d81:	call   QWORD PTR [rdi+0x68]
  421d84:	mov    rax,QWORD PTR fs:0x28
  421d8d:	cmp    rax,QWORD PTR [rsp]
  421d91:	jne    421d95 <isspace@plt+0x1e485>
  421d93:	pop    rax
  421d94:	ret    
  421d95:	call   403280 <__stack_chk_fail@plt>
  421d9a:	nop    WORD PTR [rax+rax*1+0x0]
  421da0:	push   r14
  421da2:	push   rbx
  421da3:	push   rax
  421da4:	mov    r14,rdi
  421da7:	mov    rax,QWORD PTR fs:0x28
  421db0:	mov    QWORD PTR [rsp],rax
  421db4:	call   421420 <isspace@plt+0x1db10>
  421db9:	test   rax,rax
  421dbc:	je     421de6 <isspace@plt+0x1e4d6>
  421dbe:	mov    rbx,rax
  421dc1:	mov    edx,0x140
  421dc6:	mov    rdi,r14
  421dc9:	mov    rsi,rax
  421dcc:	call   421120 <isspace@plt+0x1d810>
  421dd1:	mov    rcx,rax
  421dd4:	mov    al,0x1
  421dd6:	test   rcx,rcx
  421dd9:	jne    421de8 <isspace@plt+0x1e4d8>
  421ddb:	mov    rdi,r14
  421dde:	mov    rsi,rbx
  421de1:	call   421730 <isspace@plt+0x1de20>
  421de6:	xor    eax,eax
  421de8:	mov    rcx,QWORD PTR fs:0x28
  421df1:	cmp    rcx,QWORD PTR [rsp]
  421df5:	jne    421dff <isspace@plt+0x1e4ef>
  421df7:	add    rsp,0x8
  421dfb:	pop    rbx
  421dfc:	pop    r14
  421dfe:	ret    
  421dff:	call   403280 <__stack_chk_fail@plt>
  421e04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421e0e:	xchg   ax,ax
  421e10:	push   rbp
  421e11:	push   r15
  421e13:	push   r14
  421e15:	push   rbx
  421e16:	push   rax
  421e17:	mov    rax,QWORD PTR fs:0x28
  421e20:	mov    QWORD PTR [rsp],rax
  421e24:	cmp    esi,0xffffffff
  421e27:	je     421e71 <isspace@plt+0x1e561>
  421e29:	mov    r14d,esi
  421e2c:	mov    rbx,rdi
  421e2f:	xor    ebp,ebp
  421e31:	xor    esi,esi
  421e33:	call   421420 <isspace@plt+0x1db10>
  421e38:	test   rax,rax
  421e3b:	je     421e73 <isspace@plt+0x1e563>
  421e3d:	mov    r15,rax
  421e40:	mov    edx,0x140
  421e45:	mov    rdi,rbx
  421e48:	mov    rsi,rax
  421e4b:	call   421120 <isspace@plt+0x1d810>
  421e50:	test   rax,rax
  421e53:	je     421e66 <isspace@plt+0x1e556>
  421e55:	mov    rax,QWORD PTR [rbx+0x30]
  421e59:	mov    rax,QWORD PTR [rax+0x10]
  421e5d:	mov    DWORD PTR [rax+0x14],r14d
  421e61:	mov    bpl,0x1
  421e64:	jmp    421e73 <isspace@plt+0x1e563>
  421e66:	mov    rdi,rbx
  421e69:	mov    rsi,r15
  421e6c:	call   421730 <isspace@plt+0x1de20>
  421e71:	xor    ebp,ebp
  421e73:	mov    rax,QWORD PTR fs:0x28
  421e7c:	cmp    rax,QWORD PTR [rsp]
  421e80:	jne    421e8f <isspace@plt+0x1e57f>
  421e82:	mov    eax,ebp
  421e84:	add    rsp,0x8
  421e88:	pop    rbx
  421e89:	pop    r14
  421e8b:	pop    r15
  421e8d:	pop    rbp
  421e8e:	ret    
  421e8f:	call   403280 <__stack_chk_fail@plt>
  421e94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421e9e:	xchg   ax,ax
  421ea0:	push   rbp
  421ea1:	push   rbx
  421ea2:	push   rax
  421ea3:	mov    rax,QWORD PTR fs:0x28
  421eac:	mov    QWORD PTR [rsp],rax
  421eb0:	mov    bpl,0x1
  421eb3:	test   rdi,rdi
  421eb6:	je     421eda <isspace@plt+0x1e5ca>
  421eb8:	mov    rbx,rdi
  421ebb:	mov    rax,QWORD PTR [rdi+0x10]
  421ebf:	mov    rdi,QWORD PTR [rax]
  421ec2:	call   410690 <isspace@plt+0xcd80>
  421ec7:	test   al,al
  421ec9:	je     421eda <isspace@plt+0x1e5ca>
  421ecb:	mov    rax,QWORD PTR [rbx+0x10]
  421ecf:	cmp    DWORD PTR [rax+0xb0],0x1
  421ed6:	setg   bpl
  421eda:	mov    rax,QWORD PTR fs:0x28
  421ee3:	cmp    rax,QWORD PTR [rsp]
  421ee7:	jne    421ef2 <isspace@plt+0x1e5e2>
  421ee9:	mov    eax,ebp
  421eeb:	add    rsp,0x8
  421eef:	pop    rbx
  421ef0:	pop    rbp
  421ef1:	ret    
  421ef2:	call   403280 <__stack_chk_fail@plt>
  421ef7:	nop    WORD PTR [rax+rax*1+0x0]
  421f00:	push   r15
  421f02:	push   r14
  421f04:	push   rbx
  421f05:	sub    rsp,0x10
  421f09:	mov    rax,QWORD PTR fs:0x28
  421f12:	mov    QWORD PTR [rsp+0x8],rax
  421f17:	test   rsi,rsi
  421f1a:	je     422006 <isspace@plt+0x1e6f6>
  421f20:	mov    rbx,rdi
  421f23:	test   rdi,rdi
  421f26:	je     422006 <isspace@plt+0x1e6f6>
  421f2c:	mov    r14,rsi
  421f2f:	cmp    rbx,rsi
  421f32:	je     422006 <isspace@plt+0x1e6f6>
  421f38:	mov    r15,QWORD PTR [rbx]
  421f3b:	mov    rax,QWORD PTR [rbx+0x2e0]
  421f42:	mov    rcx,QWORD PTR [r14+0x2e0]
  421f49:	mov    QWORD PTR [rbx+0x2e0],rcx
  421f50:	mov    QWORD PTR [r14+0x2e0],rax
  421f57:	mov    rcx,QWORD PTR [rbx+0x2e0]
  421f5e:	test   rcx,rcx
  421f61:	je     421f6a <isspace@plt+0x1e65a>
  421f63:	mov    QWORD PTR [rcx+0x2d8],rbx
  421f6a:	test   rax,rax
  421f6d:	je     421f76 <isspace@plt+0x1e666>
  421f6f:	mov    QWORD PTR [rax+0x2d8],r14
  421f76:	mov    rax,QWORD PTR [rbx+0x2d8]
  421f7d:	mov    rcx,QWORD PTR [r14+0x2d8]
  421f84:	mov    QWORD PTR [rbx+0x2d8],rcx
  421f8b:	mov    QWORD PTR [r14+0x2d8],rax
  421f92:	mov    rcx,QWORD PTR [rbx+0x2d8]
  421f99:	test   rcx,rcx
  421f9c:	je     421fa5 <isspace@plt+0x1e695>
  421f9e:	mov    QWORD PTR [rcx+0x2e0],rbx
  421fa5:	test   rax,rax
  421fa8:	je     421fb1 <isspace@plt+0x1e6a1>
  421faa:	mov    QWORD PTR [rax+0x2e0],r14
  421fb1:	mov    rcx,QWORD PTR [r15+0x28]
  421fb5:	mov    rax,r14
  421fb8:	cmp    rcx,rbx
  421fbb:	je     421fc5 <isspace@plt+0x1e6b5>
  421fbd:	mov    rax,rbx
  421fc0:	cmp    rcx,r14
  421fc3:	jne    421fc9 <isspace@plt+0x1e6b9>
  421fc5:	mov    QWORD PTR [r15+0x28],rax
  421fc9:	mov    rax,QWORD PTR [r15]
  421fcc:	mov    rdi,QWORD PTR [rbx+0x8]
  421fd0:	mov    rsi,QWORD PTR [r14+0x8]
  421fd4:	call   QWORD PTR [rax+0x30]
  421fd7:	mov    rax,QWORD PTR [r15+0x30]
  421fdb:	cmp    rax,rbx
  421fde:	je     421ff5 <isspace@plt+0x1e6e5>
  421fe0:	cmp    rax,r14
  421fe3:	jne    422006 <isspace@plt+0x1e6f6>
  421fe5:	mov    rax,QWORD PTR [rbx]
  421fe8:	mov    QWORD PTR [rax+0x30],rbx
  421fec:	mov    rax,QWORD PTR [rax]
  421fef:	mov    rdi,QWORD PTR [rbx+0x8]
  421ff3:	jmp    422003 <isspace@plt+0x1e6f3>
  421ff5:	mov    rax,QWORD PTR [r14]
  421ff8:	mov    QWORD PTR [rax+0x30],r14
  421ffc:	mov    rax,QWORD PTR [rax]
  421fff:	mov    rdi,QWORD PTR [r14+0x8]
  422003:	call   QWORD PTR [rax+0x28]
  422006:	mov    rax,QWORD PTR fs:0x28
  42200f:	cmp    rax,QWORD PTR [rsp+0x8]
  422014:	jne    422020 <isspace@plt+0x1e710>
  422016:	add    rsp,0x10
  42201a:	pop    rbx
  42201b:	pop    r14
  42201d:	pop    r15
  42201f:	ret    
  422020:	call   403280 <__stack_chk_fail@plt>
  422025:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42202f:	nop
  422030:	push   r14
  422032:	push   rbx
  422033:	push   rax
  422034:	mov    rax,QWORD PTR fs:0x28
  42203d:	mov    QWORD PTR [rsp],rax
  422041:	test   rdi,rdi
  422044:	je     4220f5 <isspace@plt+0x1e7e5>
  42204a:	mov    rbx,rdi
  42204d:	mov    r14,QWORD PTR [rdi]
  422050:	mov    esi,0x8
  422055:	xor    eax,eax
  422057:	mov    rdi,r14
  42205a:	mov    rdx,rbx
  42205d:	call   420610 <isspace@plt+0x1cd00>
  422062:	mov    rsi,QWORD PTR [rbx+0x10]
  422066:	mov    rdi,r14
  422069:	call   421730 <isspace@plt+0x1de20>
  42206e:	mov    rcx,QWORD PTR [rbx+0x2d8]
  422075:	test   rcx,rcx
  422078:	je     422088 <isspace@plt+0x1e778>
  42207a:	mov    rax,QWORD PTR [rbx+0x2e0]
  422081:	mov    QWORD PTR [rcx+0x2e0],rax
  422088:	mov    rax,QWORD PTR [rbx+0x2e0]
  42208f:	test   rax,rax
  422092:	je     42209b <isspace@plt+0x1e78b>
  422094:	mov    QWORD PTR [rax+0x2d8],rcx
  42209b:	cmp    QWORD PTR [r14+0x28],rbx
  42209f:	je     42210c <isspace@plt+0x1e7fc>
  4220a1:	cmp    QWORD PTR [r14+0x30],rbx
  4220a5:	je     422116 <isspace@plt+0x1e806>
  4220a7:	cmp    QWORD PTR [r14+0x38],rbx
  4220ab:	je     42212c <isspace@plt+0x1e81c>
  4220ad:	mov    rdi,rbx
  4220b0:	call   421290 <isspace@plt+0x1d980>
  4220b5:	mov    rax,QWORD PTR [r14+0x30]
  4220b9:	test   rax,rax
  4220bc:	je     4220c8 <isspace@plt+0x1e7b8>
  4220be:	mov    rcx,QWORD PTR [r14]
  4220c1:	mov    rdi,QWORD PTR [rax+0x8]
  4220c5:	call   QWORD PTR [rcx+0x28]
  4220c8:	mov    rbx,QWORD PTR [r14+0x28]
  4220cc:	test   rbx,rbx
  4220cf:	je     4220f5 <isspace@plt+0x1e7e5>
  4220d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4220db:	nop    DWORD PTR [rax+rax*1+0x0]
  4220e0:	mov    rdi,QWORD PTR [rbx+0x18]
  4220e4:	call   41a4a0 <isspace@plt+0x16b90>
  4220e9:	mov    rbx,QWORD PTR [rbx+0x2e0]
  4220f0:	test   rbx,rbx
  4220f3:	jne    4220e0 <isspace@plt+0x1e7d0>
  4220f5:	mov    rax,QWORD PTR fs:0x28
  4220fe:	cmp    rax,QWORD PTR [rsp]
  422102:	jne    422139 <isspace@plt+0x1e829>
  422104:	add    rsp,0x8
  422108:	pop    rbx
  422109:	pop    r14
  42210b:	ret    
  42210c:	mov    QWORD PTR [r14+0x28],rax
  422110:	cmp    QWORD PTR [r14+0x30],rbx
  422114:	jne    4220a7 <isspace@plt+0x1e797>
  422116:	test   rax,rax
  422119:	jne    422122 <isspace@plt+0x1e812>
  42211b:	mov    rax,QWORD PTR [rbx+0x2d8]
  422122:	mov    QWORD PTR [r14+0x30],rax
  422126:	cmp    QWORD PTR [r14+0x38],rbx
  42212a:	jne    4220ad <isspace@plt+0x1e79d>
  42212c:	mov    QWORD PTR [r14+0x38],0x0
  422134:	jmp    4220ad <isspace@plt+0x1e79d>
  422139:	call   403280 <__stack_chk_fail@plt>
  42213e:	xchg   ax,ax
  422140:	push   r15
  422142:	push   r14
  422144:	push   r12
  422146:	push   rbx
  422147:	push   rax
  422148:	mov    rax,QWORD PTR fs:0x28
  422151:	mov    QWORD PTR [rsp],rax
  422155:	test   rdi,rdi
  422158:	je     4223f4 <isspace@plt+0x1eae4>
  42215e:	mov    r14,rsi
  422161:	mov    r15,rdi
  422164:	mov    edi,0x1
  422169:	mov    esi,0xb68
  42216e:	call   403470 <calloc@plt>
  422173:	test   rax,rax
  422176:	je     4223f4 <isspace@plt+0x1eae4>
  42217c:	mov    r12,rax
  42217f:	mov    DWORD PTR [rax+0x9bc],0xffffffff
  422189:	mov    QWORD PTR [rax],r15
  42218c:	mov    DWORD PTR [rax+0x7f8],0x8
  422196:	mov    BYTE PTR [rax+0x7fe],0x1
  42219d:	mov    ebx,0x40
  4221a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4221ac:	nop    DWORD PTR [rax+0x0]
  4221b0:	lea    rdi,[r12+rbx*1]
  4221b4:	call   42a730 <isspace@plt+0x26e20>
  4221b9:	add    rbx,0x28
  4221bd:	cmp    rbx,0x7c0
  4221c4:	jne    4221b0 <isspace@plt+0x1e8a0>
  4221c6:	mov    DWORD PTR [r12+0x244],0x2
  4221d2:	mov    DWORD PTR [r12+0x26c],0x3
  4221de:	mov    DWORD PTR [r12+0x294],0x3
  4221ea:	mov    DWORD PTR [r12+0x35c],0x1
  4221f6:	lea    rdi,[r12+0xae0]
  4221fe:	call   403a10 <isspace@plt+0x100>
  422203:	lea    rdi,[r12+0xb00]
  42220b:	call   403a10 <isspace@plt+0x100>
  422210:	lea    rdi,[r12+0xb20]
  422218:	call   403a10 <isspace@plt+0x100>
  42221d:	lea    rdi,[r12+0xb40]
  422225:	call   403a10 <isspace@plt+0x100>
  42222a:	lea    rdi,[r12+0xaa8]
  422232:	call   403a10 <isspace@plt+0x100>
  422237:	vpxor  xmm0,xmm0,xmm0
  42223b:	vmovdqu YMMWORD PTR [r12+0x910],ymm0
  422245:	vmovdqu YMMWORD PTR [r12+0x930],ymm0
  42224f:	mov    QWORD PTR [r12+0x950],0x0
  42225b:	mov    DWORD PTR [r12+0x910],0xffffffff
  422267:	mov    rdi,r12
  42226a:	add    rdi,0x8f0
  422271:	vzeroupper 
  422274:	call   404230 <isspace@plt+0x920>
  422279:	xor    esi,esi
  42227b:	mov    rdi,r12
  42227e:	call   421420 <isspace@plt+0x1db10>
  422283:	test   rax,rax
  422286:	je     4223cd <isspace@plt+0x1eabd>
  42228c:	mov    DWORD PTR [rax+0xb0],0x1
  422296:	mov    BYTE PTR [rax+0x18],0x1
  42229a:	mov    QWORD PTR [r12+0x10],rax
  42229f:	xor    esi,esi
  4222a1:	mov    rdi,r12
  4222a4:	call   421420 <isspace@plt+0x1db10>
  4222a9:	test   rax,rax
  4222ac:	je     4223d8 <isspace@plt+0x1eac8>
  4222b2:	mov    DWORD PTR [rax+0xb0],0x1
  4222bc:	mov    BYTE PTR [rax+0x18],0x1
  4222c0:	mov    QWORD PTR [r12+0x18],rax
  4222c5:	xor    esi,esi
  4222c7:	mov    rdi,r12
  4222ca:	call   421420 <isspace@plt+0x1db10>
  4222cf:	test   rax,rax
  4222d2:	je     4223e3 <isspace@plt+0x1ead3>
  4222d8:	mov    DWORD PTR [rax+0xb0],0x1
  4222e2:	mov    BYTE PTR [rax+0x18],0x1
  4222e6:	mov    QWORD PTR [r12+0x20],rax
  4222eb:	call   408f90 <isspace@plt+0x5680>
  4222f0:	mov    QWORD PTR [r12+0xaa0],rax
  4222f8:	test   rax,rax
  4222fb:	je     4223ec <isspace@plt+0x1eadc>
  422301:	call   408f90 <isspace@plt+0x5680>
  422306:	mov    QWORD PTR [r12+0x820],rax
  42230e:	test   rax,rax
  422311:	je     4223ec <isspace@plt+0x1eadc>
  422317:	mov    rdi,r12
  42231a:	call   409020 <isspace@plt+0x5710>
  42231f:	test   al,al
  422321:	je     4223ec <isspace@plt+0x1eadc>
  422327:	lea    rdi,[rip+0xf9d8]        # 431d06 <isspace@plt+0x2e3f6>
  42232e:	call   403060 <getenv@plt>
  422333:	mov    r15,rax
  422336:	test   rax,rax
  422339:	je     422341 <isspace@plt+0x1ea31>
  42233b:	cmp    BYTE PTR [r15],0x0
  42233f:	jne    422368 <isspace@plt+0x1ea58>
  422341:	call   403290 <getuid@plt>
  422346:	mov    edi,eax
  422348:	call   403230 <getpwuid@plt>
  42234d:	test   rax,rax
  422350:	je     422356 <isspace@plt+0x1ea46>
  422352:	mov    r15,QWORD PTR [rax+0x28]
  422356:	test   r15,r15
  422359:	je     422361 <isspace@plt+0x1ea51>
  42235b:	cmp    BYTE PTR [r15],0x0
  42235f:	jne    422368 <isspace@plt+0x1ea58>
  422361:	lea    r15,[rip+0xf9a4]        # 431d0c <isspace@plt+0x2e3fc>
  422368:	mov    rdi,r15
  42236b:	call   403850 <strdup@plt>
  422370:	mov    QWORD PTR [r12+0x800],rax
  422378:	test   rax,rax
  42237b:	je     4223ec <isspace@plt+0x1eadc>
  42237d:	vpbroadcastq xmm0,QWORD PTR [rip+0x20c3a]        # 442fc0 <isspace@plt+0x3f6b0>
  422386:	vmovdqu XMMWORD PTR [r12+0x9a0],xmm0
  422390:	mov    QWORD PTR [r12+0xad8],r14
  422398:	test   r14,r14
  42239b:	je     4223f7 <isspace@plt+0x1eae7>
  42239d:	mov    rax,QWORD PTR [r14+0x18]
  4223a1:	test   rax,rax
  4223a4:	je     4223b4 <isspace@plt+0x1eaa4>
  4223a6:	lea    rcx,[rip+0x20d33]        # 4430e0 <isspace@plt+0x3f7d0>
  4223ad:	mov    QWORD PTR [rcx+0x1c0],rax
  4223b4:	mov    rax,QWORD PTR [r14+0x20]
  4223b8:	test   rax,rax
  4223bb:	je     4223f7 <isspace@plt+0x1eae7>
  4223bd:	lea    rcx,[rip+0x20d1c]        # 4430e0 <isspace@plt+0x3f7d0>
  4223c4:	mov    QWORD PTR [rcx+0x220],rax
  4223cb:	jmp    4223f7 <isspace@plt+0x1eae7>
  4223cd:	mov    QWORD PTR [r12+0x10],0x0
  4223d6:	jmp    4223ec <isspace@plt+0x1eadc>
  4223d8:	mov    QWORD PTR [r12+0x18],0x0
  4223e1:	jmp    4223ec <isspace@plt+0x1eadc>
  4223e3:	mov    QWORD PTR [r12+0x20],0x0
  4223ec:	mov    rdi,r12
  4223ef:	call   422470 <isspace@plt+0x1eb60>
  4223f4:	xor    r12d,r12d
  4223f7:	mov    rax,QWORD PTR fs:0x28
  422400:	cmp    rax,QWORD PTR [rsp]
  422404:	jne    422415 <isspace@plt+0x1eb05>
  422406:	mov    rax,r12
  422409:	add    rsp,0x8
  42240d:	pop    rbx
  42240e:	pop    r12
  422410:	pop    r14
  422412:	pop    r15
  422414:	ret    
  422415:	call   403280 <__stack_chk_fail@plt>
  42241a:	nop    WORD PTR [rax+rax*1+0x0]
  422420:	push   rax
  422421:	mov    rax,QWORD PTR fs:0x28
  42242a:	mov    QWORD PTR [rsp],rax
  42242e:	vxorps xmm0,xmm0,xmm0
  422432:	vmovups YMMWORD PTR [rdi],ymm0
  422436:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  42243b:	mov    QWORD PTR [rdi+0x40],0x0
  422443:	mov    DWORD PTR [rdi],0xffffffff
  422449:	mov    rax,QWORD PTR fs:0x28
  422452:	cmp    rax,QWORD PTR [rsp]
  422456:	jne    42245d <isspace@plt+0x1eb4d>
  422458:	pop    rax
  422459:	vzeroupper 
  42245c:	ret    
  42245d:	vzeroupper 
  422460:	call   403280 <__stack_chk_fail@plt>
  422465:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42246f:	nop
  422470:	push   r14
  422472:	push   rbx
  422473:	sub    rsp,0x18
  422477:	mov    rax,QWORD PTR fs:0x28
  422480:	mov    QWORD PTR [rsp+0x10],rax
  422485:	test   rdi,rdi
  422488:	je     4226ee <isspace@plt+0x1edde>
  42248e:	mov    r14,rdi
  422491:	mov    esi,0x2
  422496:	xor    eax,eax
  422498:	call   420610 <isspace@plt+0x1cd00>
  42249d:	mov    QWORD PTR [r14+0xad8],0x0
  4224a8:	jmp    4224b5 <isspace@plt+0x1eba5>
  4224aa:	nop    WORD PTR [rax+rax*1+0x0]
  4224b0:	call   422030 <isspace@plt+0x1e720>
  4224b5:	mov    rdi,QWORD PTR [r14+0x28]
  4224b9:	test   rdi,rdi
  4224bc:	jne    4224b0 <isspace@plt+0x1eba0>
  4224be:	mov    rsi,QWORD PTR [r14+0x10]
  4224c2:	mov    rdi,r14
  4224c5:	call   421730 <isspace@plt+0x1de20>
  4224ca:	mov    rsi,QWORD PTR [r14+0x18]
  4224ce:	mov    rdi,r14
  4224d1:	call   421730 <isspace@plt+0x1de20>
  4224d6:	mov    rsi,QWORD PTR [r14+0x20]
  4224da:	mov    rdi,r14
  4224dd:	call   421730 <isspace@plt+0x1de20>
  4224e2:	mov    ebx,0x40
  4224e7:	nop    WORD PTR [rax+rax*1+0x0]
  4224f0:	lea    rdi,[r14+rbx*1]
  4224f4:	call   42a790 <isspace@plt+0x26e80>
  4224f9:	add    rbx,0x28
  4224fd:	cmp    rbx,0x7c0
  422504:	jne    4224f0 <isspace@plt+0x1ebe0>
  422506:	mov    rdi,QWORD PTR [r14]
  422509:	call   QWORD PTR [rdi+0x8]
  42250c:	mov    rdi,QWORD PTR [r14+0x810]
  422513:	test   rdi,rdi
  422516:	je     42255e <isspace@plt+0x1ec4e>
  422518:	lea    rsi,[rsp+0x8]
  42251d:	call   408d00 <isspace@plt+0x53f0>
  422522:	test   rax,rax
  422525:	je     422555 <isspace@plt+0x1ec45>
  422527:	lea    rbx,[rsp+0x8]
  42252c:	nop    DWORD PTR [rax+0x0]
  422530:	mov    rsi,QWORD PTR [rsp+0x8]
  422535:	mov    rdi,r14
  422538:	call   4099a0 <isspace@plt+0x6090>
  42253d:	test   al,al
  42253f:	je     422555 <isspace@plt+0x1ec45>
  422541:	mov    rdi,QWORD PTR [r14+0x810]
  422548:	mov    rsi,rbx
  42254b:	call   408d00 <isspace@plt+0x53f0>
  422550:	test   rax,rax
  422553:	jne    422530 <isspace@plt+0x1ec20>
  422555:	mov    rdi,QWORD PTR [r14+0x810]
  42255c:	jmp    422560 <isspace@plt+0x1ec50>
  42255e:	xor    edi,edi
  422560:	call   408fd0 <isspace@plt+0x56c0>
  422565:	mov    rdi,QWORD PTR [r14+0x808]
  42256c:	call   408fd0 <isspace@plt+0x56c0>
  422571:	mov    rdi,QWORD PTR [r14+0x818]
  422578:	test   rdi,rdi
  42257b:	je     4225ce <isspace@plt+0x1ecbe>
  42257d:	lea    rsi,[rsp+0x8]
  422582:	call   408d00 <isspace@plt+0x53f0>
  422587:	test   rax,rax
  42258a:	je     4225c5 <isspace@plt+0x1ecb5>
  42258c:	lea    rbx,[rsp+0x8]
  422591:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42259b:	nop    DWORD PTR [rax+rax*1+0x0]
  4225a0:	mov    rsi,QWORD PTR [rsp+0x8]
  4225a5:	mov    rdi,r14
  4225a8:	call   409bb0 <isspace@plt+0x62a0>
  4225ad:	test   al,al
  4225af:	je     4225c5 <isspace@plt+0x1ecb5>
  4225b1:	mov    rdi,QWORD PTR [r14+0x818]
  4225b8:	mov    rsi,rbx
  4225bb:	call   408d00 <isspace@plt+0x53f0>
  4225c0:	test   rax,rax
  4225c3:	jne    4225a0 <isspace@plt+0x1ec90>
  4225c5:	mov    rdi,QWORD PTR [r14+0x818]
  4225cc:	jmp    4225d0 <isspace@plt+0x1ecc0>
  4225ce:	xor    edi,edi
  4225d0:	call   408fd0 <isspace@plt+0x56c0>
  4225d5:	mov    rdi,QWORD PTR [r14+0xaa0]
  4225dc:	call   408fd0 <isspace@plt+0x56c0>
  4225e1:	mov    rdi,QWORD PTR [r14+0x820]
  4225e8:	call   408fd0 <isspace@plt+0x56c0>
  4225ed:	lea    rdi,[r14+0x8f0]
  4225f4:	call   404550 <isspace@plt+0xc40>
  4225f9:	lea    rbx,[rip+0x20ae0]        # 4430e0 <isspace@plt+0x3f7d0>
  422600:	mov    rdi,QWORD PTR [rbx+0x10]
  422604:	call   408fd0 <isspace@plt+0x56c0>
  422609:	mov    rdi,QWORD PTR [rbx+0x70]
  42260d:	call   408fd0 <isspace@plt+0x56c0>
  422612:	mov    rdi,QWORD PTR [rbx+0xd0]
  422619:	call   408fd0 <isspace@plt+0x56c0>
  42261e:	mov    rdi,QWORD PTR [rbx+0x130]
  422625:	call   408fd0 <isspace@plt+0x56c0>
  42262a:	mov    rdi,QWORD PTR [rbx+0x190]
  422631:	call   408fd0 <isspace@plt+0x56c0>
  422636:	mov    rdi,QWORD PTR [rbx+0x1f0]
  42263d:	call   408fd0 <isspace@plt+0x56c0>
  422642:	lea    rdi,[r14+0xae0]
  422649:	call   403bb0 <isspace@plt+0x2a0>
  42264e:	lea    rdi,[r14+0xb00]
  422655:	call   403bb0 <isspace@plt+0x2a0>
  42265a:	lea    rdi,[r14+0xb20]
  422661:	call   403bb0 <isspace@plt+0x2a0>
  422666:	lea    rbx,[r14+0xb40]
  42266d:	jmp    422685 <isspace@plt+0x1ed75>
  42266f:	nop
  422670:	xor    esi,esi
  422672:	mov    rdi,rbx
  422675:	call   403c60 <isspace@plt+0x350>
  42267a:	mov    rdi,r14
  42267d:	mov    rsi,rax
  422680:	call   427630 <isspace@plt+0x23d20>
  422685:	mov    rdi,rbx
  422688:	call   403f90 <isspace@plt+0x680>
  42268d:	test   rax,rax
  422690:	jne    422670 <isspace@plt+0x1ed60>
  422692:	mov    rdi,rbx
  422695:	call   403b50 <isspace@plt+0x240>
  42269a:	lea    rbx,[r14+0xaa8]
  4226a1:	jmp    4226c5 <isspace@plt+0x1edb5>
  4226a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4226ad:	nop    DWORD PTR [rax]
  4226b0:	xor    esi,esi
  4226b2:	mov    rdi,rbx
  4226b5:	call   403c60 <isspace@plt+0x350>
  4226ba:	mov    rdi,r14
  4226bd:	mov    rsi,rax
  4226c0:	call   427520 <isspace@plt+0x23c10>
  4226c5:	mov    rdi,rbx
  4226c8:	call   403f90 <isspace@plt+0x680>
  4226cd:	test   rax,rax
  4226d0:	jne    4226b0 <isspace@plt+0x1eda0>
  4226d2:	mov    rdi,rbx
  4226d5:	call   403b50 <isspace@plt+0x240>
  4226da:	mov    rdi,QWORD PTR [r14+0x800]
  4226e1:	call   4030d0 <free@plt>
  4226e6:	mov    rdi,r14
  4226e9:	call   4030d0 <free@plt>
  4226ee:	mov    rax,QWORD PTR fs:0x28
  4226f7:	cmp    rax,QWORD PTR [rsp+0x10]
  4226fc:	jne    422706 <isspace@plt+0x1edf6>
  4226fe:	add    rsp,0x18
  422702:	pop    rbx
  422703:	pop    r14
  422705:	ret    
  422706:	call   403280 <__stack_chk_fail@plt>
  42270b:	nop    DWORD PTR [rax+rax*1+0x0]
  422710:	push   rbp
  422711:	push   r15
  422713:	push   r14
  422715:	push   r13
  422717:	push   r12
  422719:	push   rbx
  42271a:	sub    rsp,0x18
  42271e:	mov    QWORD PTR [rsp+0x8],rsi
  422723:	mov    rax,QWORD PTR fs:0x28
  42272c:	mov    QWORD PTR [rsp+0x10],rax
  422731:	mov    rax,QWORD PTR [rdi+0x30]
  422735:	test   rax,rax
  422738:	je     4227f2 <isspace@plt+0x1eee2>
  42273e:	mov    r12,rdx
  422741:	mov    r15,rdi
  422744:	mov    rdi,QWORD PTR [rax+0x18]
  422748:	call   41f710 <isspace@plt+0x1be00>
  42274d:	test   rax,rax
  422750:	je     4227f2 <isspace@plt+0x1eee2>
  422756:	mov    rbx,rax
  422759:	nop    DWORD PTR [rax+0x0]
  422760:	mov    rdi,rbx
  422763:	call   41b4d0 <isspace@plt+0x17bc0>
  422768:	mov    r13,rax
  42276b:	mov    rbp,QWORD PTR [r15+0x30]
  42276f:	test   rbp,rbp
  422772:	je     4227d0 <isspace@plt+0x1eec0>
  422774:	mov    rax,QWORD PTR [rbp+0x10]
  422778:	mov    rdi,QWORD PTR [rax]
  42277b:	mov    rsi,r13
  42277e:	mov    rdx,QWORD PTR [rsp+0x8]
  422783:	mov    rcx,r12
  422786:	call   40f140 <isspace@plt+0xb830>
  42278b:	mov    rax,QWORD PTR [rbp+0x0]
  42278f:	mov    r14,QWORD PTR [rax+0x28]
  422793:	test   r14,r14
  422796:	jne    4227ac <isspace@plt+0x1ee9c>
  422798:	jmp    4227d0 <isspace@plt+0x1eec0>
  42279a:	nop    WORD PTR [rax+rax*1+0x0]
  4227a0:	mov    r14,QWORD PTR [r14+0x2e0]
  4227a7:	test   r14,r14
  4227aa:	je     4227d0 <isspace@plt+0x1eec0>
  4227ac:	mov    rax,QWORD PTR [r14+0x10]
  4227b0:	cmp    rax,QWORD PTR [rbp+0x10]
  4227b4:	jne    4227a0 <isspace@plt+0x1ee90>
  4227b6:	mov    rdi,QWORD PTR [r14+0x18]
  4227ba:	call   41a4a0 <isspace@plt+0x16b90>
  4227bf:	jmp    4227a0 <isspace@plt+0x1ee90>
  4227c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4227cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4227d0:	add    r13,r12
  4227d3:	mov    rdi,rbx
  4227d6:	mov    rsi,r13
  4227d9:	call   41ed50 <isspace@plt+0x1b440>
  4227de:	mov    rdi,rbx
  4227e1:	call   41f7f0 <isspace@plt+0x1bee0>
  4227e6:	mov    rbx,rax
  4227e9:	test   rax,rax
  4227ec:	jne    422760 <isspace@plt+0x1ee50>
  4227f2:	mov    rax,QWORD PTR fs:0x28
  4227fb:	cmp    rax,QWORD PTR [rsp+0x10]
  422800:	jne    422811 <isspace@plt+0x1ef01>
  422802:	add    rsp,0x18
  422806:	pop    rbx
  422807:	pop    r12
  422809:	pop    r13
  42280b:	pop    r14
  42280d:	pop    r15
  42280f:	pop    rbp
  422810:	ret    
  422811:	call   403280 <__stack_chk_fail@plt>
  422816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422820:	push   rbp
  422821:	push   r15
  422823:	push   r14
  422825:	push   r13
  422827:	push   r12
  422829:	push   rbx
  42282a:	sub    rsp,0x58
  42282e:	mov    rax,QWORD PTR fs:0x28
  422837:	mov    QWORD PTR [rsp+0x50],rax
  42283c:	mov    rax,QWORD PTR [rdi+0x30]
  422840:	test   rax,rax
  422843:	je     422931 <isspace@plt+0x1f021>
  422849:	mov    rbp,rcx
  42284c:	mov    rbx,rdx
  42284f:	mov    r13,rsi
  422852:	mov    r12,rdi
  422855:	mov    rax,QWORD PTR [rax+0x10]
  422859:	mov    rsi,QWORD PTR [rax]
  42285c:	lea    rdi,[rsp+0x28]
  422861:	mov    QWORD PTR [rsp+0x18],rsi
  422866:	mov    rdx,r13
  422869:	call   410760 <isspace@plt+0xce50>
  42286e:	mov    QWORD PTR [rsp+0x8],rbx
  422873:	mov    rdi,rbx
  422876:	mov    QWORD PTR [rsp+0x10],rbp
  42287b:	mov    rsi,rbp
  42287e:	call   4177c0 <isspace@plt+0x13eb0>
  422883:	test   eax,eax
  422885:	jle    4228c8 <isspace@plt+0x1efb8>
  422887:	mov    ebp,eax
  422889:	add    ebp,0x1
  42288c:	lea    r14,[rsp+0x28]
  422891:	lea    r15,[rsp+0x27]
  422896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4228a0:	mov    rdi,r14
  4228a3:	mov    rsi,r15
  4228a6:	call   412690 <isspace@plt+0xed80>
  4228ab:	cmp    BYTE PTR [rsp+0x27],0xa
  4228b0:	je     4228c8 <isspace@plt+0x1efb8>
  4228b2:	test   al,al
  4228b4:	je     4228c8 <isspace@plt+0x1efb8>
  4228b6:	xor    esi,esi
  4228b8:	mov    rdi,r14
  4228bb:	call   412b50 <isspace@plt+0xf240>
  4228c0:	add    ebp,0xffffffff
  4228c3:	cmp    ebp,0x1
  4228c6:	jg     4228a0 <isspace@plt+0x1ef90>
  4228c8:	mov    rdx,QWORD PTR [rsp+0x48]
  4228cd:	sub    rdx,r13
  4228d0:	mov    rdi,QWORD PTR [rsp+0x18]
  4228d5:	mov    rsi,r13
  4228d8:	call   410200 <isspace@plt+0xc8f0>
  4228dd:	mov    rbp,QWORD PTR [r12+0x30]
  4228e2:	test   rbp,rbp
  4228e5:	je     422931 <isspace@plt+0x1f021>
  4228e7:	mov    rax,QWORD PTR [rbp+0x10]
  4228eb:	mov    rdi,QWORD PTR [rax]
  4228ee:	mov    rsi,r13
  4228f1:	mov    rdx,QWORD PTR [rsp+0x8]
  4228f6:	mov    rcx,QWORD PTR [rsp+0x10]
  4228fb:	call   40f140 <isspace@plt+0xb830>
  422900:	mov    rax,QWORD PTR [rbp+0x0]
  422904:	mov    rbx,QWORD PTR [rax+0x28]
  422908:	test   rbx,rbx
  42290b:	jne    42291c <isspace@plt+0x1f00c>
  42290d:	jmp    422931 <isspace@plt+0x1f021>
  42290f:	nop
  422910:	mov    rbx,QWORD PTR [rbx+0x2e0]
  422917:	test   rbx,rbx
  42291a:	je     422931 <isspace@plt+0x1f021>
  42291c:	mov    rax,QWORD PTR [rbx+0x10]
  422920:	cmp    rax,QWORD PTR [rbp+0x10]
  422924:	jne    422910 <isspace@plt+0x1f000>
  422926:	mov    rdi,QWORD PTR [rbx+0x18]
  42292a:	call   41a4a0 <isspace@plt+0x16b90>
  42292f:	jmp    422910 <isspace@plt+0x1f000>
  422931:	mov    rax,QWORD PTR fs:0x28
  42293a:	cmp    rax,QWORD PTR [rsp+0x50]
  42293f:	jne    422950 <isspace@plt+0x1f040>
  422941:	add    rsp,0x58
  422945:	pop    rbx
  422946:	pop    r12
  422948:	pop    r13
  42294a:	pop    r14
  42294c:	pop    r15
  42294e:	pop    rbp
  42294f:	ret    
  422950:	call   403280 <__stack_chk_fail@plt>
  422955:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42295f:	nop
  422960:	push   r15
  422962:	push   r14
  422964:	push   r13
  422966:	push   r12
  422968:	push   rbx
  422969:	sub    rsp,0x10
  42296d:	mov    rax,QWORD PTR fs:0x28
  422976:	mov    QWORD PTR [rsp+0x8],rax
  42297b:	mov    rax,QWORD PTR [rdi+0x30]
  42297f:	test   rax,rax
  422982:	je     4229d8 <isspace@plt+0x1f0c8>
  422984:	mov    r12,rdx
  422987:	mov    r14,rsi
  42298a:	mov    r15,rdi
  42298d:	mov    rdi,QWORD PTR [rax+0x18]
  422991:	call   41f710 <isspace@plt+0x1be00>
  422996:	test   rax,rax
  422999:	je     4229d8 <isspace@plt+0x1f0c8>
  42299b:	mov    rbx,rax
  42299e:	xchg   ax,ax
  4229a0:	mov    rdi,rbx
  4229a3:	call   41b4d0 <isspace@plt+0x17bc0>
  4229a8:	mov    r13,rax
  4229ab:	mov    rdi,r15
  4229ae:	mov    rsi,rax
  4229b1:	mov    rdx,r14
  4229b4:	mov    rcx,r12
  4229b7:	call   422820 <isspace@plt+0x1ef10>
  4229bc:	lea    rsi,[r12+r13*1]
  4229c0:	mov    rdi,rbx
  4229c3:	call   41ed50 <isspace@plt+0x1b440>
  4229c8:	mov    rdi,rbx
  4229cb:	call   41f7f0 <isspace@plt+0x1bee0>
  4229d0:	mov    rbx,rax
  4229d3:	test   rax,rax
  4229d6:	jne    4229a0 <isspace@plt+0x1f090>
  4229d8:	mov    rax,QWORD PTR fs:0x28
  4229e1:	cmp    rax,QWORD PTR [rsp+0x8]
  4229e6:	jne    4229f6 <isspace@plt+0x1f0e6>
  4229e8:	add    rsp,0x10
  4229ec:	pop    rbx
  4229ed:	pop    r12
  4229ef:	pop    r13
  4229f1:	pop    r14
  4229f3:	pop    r15
  4229f5:	ret    
  4229f6:	call   403280 <__stack_chk_fail@plt>
  4229fb:	nop    DWORD PTR [rax+rax*1+0x0]
  422a00:	push   rax
  422a01:	mov    rax,rsi
  422a04:	mov    rcx,QWORD PTR fs:0x28
  422a0d:	mov    QWORD PTR [rsp],rcx
  422a11:	mov    rdi,QWORD PTR [rdi+0xaa0]
  422a18:	mov    rsi,QWORD PTR [rsi]
  422a1b:	mov    rdx,rax
  422a1e:	call   408900 <isspace@plt+0x4ff0>
  422a23:	mov    rcx,QWORD PTR fs:0x28
  422a2c:	cmp    rcx,QWORD PTR [rsp]
  422a30:	jne    422a34 <isspace@plt+0x1f124>
  422a32:	pop    rcx
  422a33:	ret    
  422a34:	call   403280 <__stack_chk_fail@plt>
  422a39:	nop    DWORD PTR [rax+0x0]
  422a40:	push   rax
  422a41:	mov    rax,QWORD PTR fs:0x28
  422a4a:	mov    QWORD PTR [rsp],rax
  422a4e:	mov    rdi,QWORD PTR [rdi+0x820]
  422a55:	call   408900 <isspace@plt+0x4ff0>
  422a5a:	mov    rcx,QWORD PTR fs:0x28
  422a63:	cmp    rcx,QWORD PTR [rsp]
  422a67:	jne    422a6b <isspace@plt+0x1f15b>
  422a69:	pop    rcx
  422a6a:	ret    
  422a6b:	call   403280 <__stack_chk_fail@plt>
  422a70:	push   rax
  422a71:	mov    rax,QWORD PTR fs:0x28
  422a7a:	mov    QWORD PTR [rsp],rax
  422a7e:	mov    BYTE PTR [rdi+0x828],0x1
  422a85:	mov    rax,QWORD PTR fs:0x28
  422a8e:	cmp    rax,QWORD PTR [rsp]
  422a92:	jne    422a96 <isspace@plt+0x1f186>
  422a94:	pop    rax
  422a95:	ret    
  422a96:	call   403280 <__stack_chk_fail@plt>
  422a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  422aa0:	push   rbp
  422aa1:	push   r15
  422aa3:	push   r14
  422aa5:	push   r13
  422aa7:	push   r12
  422aa9:	push   rbx
  422aaa:	sub    rsp,0xe8
  422ab1:	mov    rax,QWORD PTR fs:0x28
  422aba:	mov    QWORD PTR [rsp+0xe0],rax
  422ac2:	mov    rbp,QWORD PTR [rdi+0x30]
  422ac6:	test   rbp,rbp
  422ac9:	je     4234cc <isspace@plt+0x1fbbc>
  422acf:	mov    r12,rdi
  422ad2:	mov    rax,QWORD PTR [rbp+0x10]
  422ad6:	mov    r15,QWORD PTR [rbp+0x18]
  422ada:	mov    QWORD PTR [rsp+0x38],rax
  422adf:	mov    r13,QWORD PTR [rax]
  422ae2:	mov    esi,DWORD PTR [rdi+0x910]
  422ae8:	test   esi,esi
  422aea:	mov    eax,0x1
  422aef:	cmovle esi,eax
  422af2:	mov    rcx,QWORD PTR [rdi+0x920]
  422af9:	lea    rbx,[rip+0x1f780]        # 442280 <isspace@plt+0x3e970>
  422b00:	lea    rdx,[rbx+0x70]
  422b04:	mov    QWORD PTR [rsp+0x60],rdx
  422b09:	cmp    rcx,rdx
  422b0c:	cmove  esi,eax
  422b0f:	mov    QWORD PTR [rsp+0x20],rsi
  422b14:	test   rcx,rcx
  422b17:	je     422b24 <isspace@plt+0x1f214>
  422b19:	cmp    QWORD PTR [r12+0x7d8],0x0
  422b22:	je     422b2e <isspace@plt+0x1f21e>
  422b24:	mov    DWORD PTR [rsp+0xc],0x0
  422b2c:	jmp    422b3d <isspace@plt+0x1f22d>
  422b2e:	cmp    QWORD PTR [rbp+0x2c8],0x0
  422b36:	sete   al
  422b39:	mov    DWORD PTR [rsp+0xc],eax
  422b3d:	mov    rdi,r15
  422b40:	call   41f1e0 <isspace@plt+0x1b8d0>
  422b45:	mov    ecx,DWORD PTR [r12+0x918]
  422b4d:	test   cl,0x2
  422b50:	jne    422b8d <isspace@plt+0x1f27d>
  422b52:	mov    dl,0x1
  422b54:	mov    DWORD PTR [rsp+0x8],edx
  422b58:	test   cl,0x1
  422b5b:	jne    422b95 <isspace@plt+0x1f285>
  422b5d:	mov    rcx,QWORD PTR [r12+0x928]
  422b65:	test   rcx,rcx
  422b68:	je     422b70 <isspace@plt+0x1f260>
  422b6a:	test   BYTE PTR [rcx+0x38],0x1
  422b6e:	jne    422b95 <isspace@plt+0x1f285>
  422b70:	mov    ecx,0x120
  422b75:	add    rcx,QWORD PTR [rip+0x20444]        # 442fc0 <isspace@plt+0x3f6b0>
  422b7c:	cmp    QWORD PTR [r12+0x9a0],rcx
  422b84:	sete   cl
  422b87:	mov    DWORD PTR [rsp+0x8],ecx
  422b8b:	jmp    422b95 <isspace@plt+0x1f285>
  422b8d:	mov    DWORD PTR [rsp+0x8],0x0
  422b95:	xor    esi,esi
  422b97:	cmp    eax,0x1
  422b9a:	setg   sil
  422b9e:	mov    rcx,QWORD PTR [r12+0x940]
  422ba6:	mov    QWORD PTR [rsp+0x28],rcx
  422bab:	test   rcx,rcx
  422bae:	jne    422bd1 <isspace@plt+0x1f2c1>
  422bb0:	xor    ecx,ecx
  422bb2:	mov    rdx,QWORD PTR [rsp+0x38]
  422bb7:	cmp    BYTE PTR [rdx+0x18],0x0
  422bbb:	mov    edx,0x758
  422bc0:	cmove  rdx,rcx
  422bc4:	lea    rcx,[r12+rdx*1]
  422bc8:	add    rcx,0x40
  422bcc:	mov    QWORD PTR [rsp+0x28],rcx
  422bd1:	neg    rsi
  422bd4:	lea    rcx,[rbx+0x30]
  422bd8:	cmp    QWORD PTR [r12+0x920],rcx
  422be0:	mov    QWORD PTR [rsp+0x40],rsi
  422be5:	jne    422c13 <isspace@plt+0x1f303>
  422be7:	mov    rsi,QWORD PTR [rsp+0x40]
  422bec:	cmp    eax,0x2
  422bef:	jl     422c13 <isspace@plt+0x1f303>
  422bf1:	cmp    eax,0x1
  422bf4:	setg   bl
  422bf7:	mov    rdi,r12
  422bfa:	mov    rsi,QWORD PTR [rsp+0x28]
  422bff:	call   42af60 <isspace@plt+0x27650>
  422c04:	cmp    rax,0x1
  422c08:	setne  al
  422c0b:	and    al,bl
  422c0d:	movzx  esi,al
  422c10:	neg    rsi
  422c13:	mov    QWORD PTR [rsp+0x78],rsi
  422c18:	mov    rax,QWORD PTR [r12+0x9a0]
  422c20:	cmp    BYTE PTR [rax+0x58],0x0
  422c24:	je     422c69 <isspace@plt+0x1f359>
  422c26:	cmp    QWORD PTR [r12+0x920],0x0
  422c2f:	je     422c69 <isspace@plt+0x1f359>
  422c31:	mov    r14,QWORD PTR [rbp+0x0]
  422c35:	mov    rsi,QWORD PTR [rbp+0x18]
  422c39:	lea    rbx,[rsp+0x90]
  422c41:	mov    rdi,rbx
  422c44:	call   420400 <isspace@plt+0x1caf0>
  422c49:	mov    esi,0x1
  422c4e:	mov    rdi,rbp
  422c51:	mov    rdx,rbx
  422c54:	call   426dd0 <isspace@plt+0x234c0>
  422c59:	mov    rdi,rbx
  422c5c:	call   403b50 <isspace@plt+0x240>
  422c61:	mov    rdi,r14
  422c64:	call   427000 <isspace@plt+0x236f0>
  422c69:	mov    QWORD PTR [rsp+0x30],rbp
  422c6e:	mov    QWORD PTR [rsp+0x50],r15
  422c73:	mov    rdi,r15
  422c76:	call   41f710 <isspace@plt+0x1be00>
  422c7b:	test   rax,rax
  422c7e:	je     423320 <isspace@plt+0x1fa10>
  422c84:	mov    r15,rax
  422c87:	lea    rax,[r12+0x950]
  422c8f:	mov    QWORD PTR [rsp+0x70],rax
  422c94:	lea    rax,[r12+0x928]
  422c9c:	mov    QWORD PTR [rsp+0x18],rax
  422ca1:	mov    rax,QWORD PTR [rsp+0x20]
  422ca6:	lea    eax,[rax-0x1]
  422ca9:	mov    DWORD PTR [rsp+0x4c],eax
  422cad:	mov    eax,0xc0
  422cb2:	add    rax,QWORD PTR [rip+0x20307]        # 442fc0 <isspace@plt+0x3f6b0>
  422cb9:	mov    QWORD PTR [rsp+0x68],rax
  422cbe:	mov    QWORD PTR [rsp+0x10],r12
  422cc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422ccd:	nop    DWORD PTR [rax]
  422cd0:	cmp    DWORD PTR [r12+0x9c0],0x0
  422cd9:	jne    423319 <isspace@plt+0x1fa09>
  422cdf:	mov    rdi,r15
  422ce2:	call   41f7f0 <isspace@plt+0x1bee0>
  422ce7:	mov    rbx,rax
  422cea:	mov    rdi,r15
  422ced:	call   41b4d0 <isspace@plt+0x17bc0>
  422cf2:	cmp    rax,0xffffffffffffffff
  422cf6:	je     422d90 <isspace@plt+0x1f480>
  422cfc:	mov    r14,rax
  422cff:	mov    rax,QWORD PTR [rsp+0x20]
  422d04:	mov    DWORD PTR [rsp+0x90],eax
  422d0b:	mov    rax,QWORD PTR [rsp+0x28]
  422d10:	mov    QWORD PTR [rsp+0x98],rax
  422d18:	mov    rcx,QWORD PTR [rsp+0x78]
  422d1d:	mov    rax,rcx
  422d20:	cmp    rcx,0xffffffffffffffff
  422d24:	jne    422d30 <isspace@plt+0x1f420>
  422d26:	mov    rdi,r15
  422d29:	call   41f210 <isspace@plt+0x1b900>
  422d2e:	cdqe   
  422d30:	mov    QWORD PTR [rsp+0xa0],rax
  422d38:	call   4174c0 <isspace@plt+0x13bb0>
  422d3d:	mov    QWORD PTR [rsp+0xa8],rax
  422d45:	mov    QWORD PTR [rsp+0xb0],rdx
  422d4d:	mov    QWORD PTR [rsp+0xb8],r14
  422d55:	mov    QWORD PTR [rsp+0xc0],0xffffffffffffffff
  422d61:	mov    eax,DWORD PTR [rsp+0x8]
  422d65:	mov    BYTE PTR [rsp+0xc8],al
  422d6c:	mov    rax,QWORD PTR [rsp+0x70]
  422d71:	mov    QWORD PTR [rsp+0xd0],rax
  422d79:	mov    rax,QWORD PTR [r12+0x920]
  422d81:	test   rax,rax
  422d84:	je     422db0 <isspace@plt+0x1f4a0>
  422d86:	mov    rax,QWORD PTR [rax+0x8]
  422d8a:	jmp    422db2 <isspace@plt+0x1f4a2>
  422d8c:	nop    DWORD PTR [rax+0x0]
  422d90:	mov    rdi,r15
  422d93:	call   41f450 <isspace@plt+0x1bb40>
  422d98:	test   al,al
  422d9a:	jne    4232f0 <isspace@plt+0x1f9e0>
  422da0:	xor    esi,esi
  422da2:	mov    rdi,r15
  422da5:	jmp    4232d7 <isspace@plt+0x1f9c7>
  422daa:	nop    WORD PTR [rax+rax*1+0x0]
  422db0:	xor    eax,eax
  422db2:	mov    QWORD PTR [rsp+0xd8],rax
  422dba:	mov    rax,QWORD PTR [rsp+0xa0]
  422dc2:	mov    QWORD PTR [rsp+0x40],rax
  422dc7:	mov    rax,QWORD PTR [rsp+0x18]
  422dcc:	mov    rax,QWORD PTR [rax]
  422dcf:	test   rax,rax
  422dd2:	mov    QWORD PTR [rsp+0x58],rbx
  422dd7:	je     422e00 <isspace@plt+0x1f4f0>
  422dd9:	mov    rbx,r13
  422ddc:	mov    rbp,r14
  422ddf:	cmp    DWORD PTR [rsp+0x20],0x0
  422de4:	jle    423140 <isspace@plt+0x1f830>
  422dea:	xor    r13d,r13d
  422ded:	mov    r12,r14
  422df0:	jmp    423070 <isspace@plt+0x1f760>
  422df5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422dff:	nop
  422e00:	cmp    QWORD PTR [r12+0x930],0x0
  422e09:	mov    rax,QWORD PTR [r12+0x9a0]
  422e11:	mov    al,BYTE PTR [rax+0x58]
  422e14:	je     422e3e <isspace@plt+0x1f52e>
  422e16:	test   al,al
  422e18:	je     422e93 <isspace@plt+0x1f583>
  422e1a:	mov    rdi,r15
  422e1d:	call   41ff60 <isspace@plt+0x1c650>
  422e22:	mov    QWORD PTR [rsp+0xa8],rax
  422e2a:	mov    QWORD PTR [rsp+0xb0],rdx
  422e32:	cmp    DWORD PTR [rsp+0x20],0x0
  422e37:	jg     422eae <isspace@plt+0x1f59e>
  422e39:	jmp    423230 <isspace@plt+0x1f920>
  422e3e:	test   al,al
  422e40:	je     423230 <isspace@plt+0x1f920>
  422e46:	mov    rdi,r15
  422e49:	call   41ff60 <isspace@plt+0x1c650>
  422e4e:	mov    QWORD PTR [rsp+0xa8],rax
  422e56:	mov    QWORD PTR [rsp+0xb0],rdx
  422e5e:	lea    rdi,[rsp+0xa8]
  422e66:	call   417400 <isspace@plt+0x13af0>
  422e6b:	test   al,al
  422e6d:	jne    423230 <isspace@plt+0x1f920>
  422e73:	mov    QWORD PTR [rsp+0xb0],r14
  422e7b:	mov    QWORD PTR [rsp+0xa8],r14
  422e83:	cmp    BYTE PTR [rsp+0x8],0x0
  422e88:	jne    423237 <isspace@plt+0x1f927>
  422e8e:	jmp    423266 <isspace@plt+0x1f956>
  422e93:	mov    QWORD PTR [rsp+0xb0],r14
  422e9b:	mov    QWORD PTR [rsp+0xa8],r14
  422ea3:	cmp    DWORD PTR [rsp+0x20],0x0
  422ea8:	jle    423230 <isspace@plt+0x1f920>
  422eae:	xor    ebp,ebp
  422eb0:	call   4174c0 <isspace@plt+0x13bb0>
  422eb5:	mov    QWORD PTR [rsp+0x80],rax
  422ebd:	mov    QWORD PTR [rsp+0x88],rdx
  422ec5:	mov    rax,QWORD PTR [r12+0x930]
  422ecd:	mov    rcx,QWORD PTR [rax]
  422ed0:	test   rcx,rcx
  422ed3:	je     422ee0 <isspace@plt+0x1f5d0>
  422ed5:	mov    rdi,r13
  422ed8:	mov    rsi,r14
  422edb:	call   rcx
  422edd:	jmp    422f10 <isspace@plt+0x1f600>
  422edf:	nop
  422ee0:	mov    rcx,QWORD PTR [rax+0x8]
  422ee4:	test   rcx,rcx
  422ee7:	je     422ef6 <isspace@plt+0x1f5e6>
  422ee9:	mov    rdi,r12
  422eec:	mov    rsi,r13
  422eef:	mov    rdx,r14
  422ef2:	call   rcx
  422ef4:	jmp    422f10 <isspace@plt+0x1f600>
  422ef6:	mov    rbx,QWORD PTR [rax+0x10]
  422efa:	test   rbx,rbx
  422efd:	je     422f20 <isspace@plt+0x1f610>
  422eff:	mov    rdx,QWORD PTR [rax+0x20]
  422f03:	mov    rdi,r12
  422f06:	mov    rsi,QWORD PTR [rsp+0x30]
  422f0b:	mov    rcx,r14
  422f0e:	call   rbx
  422f10:	mov    QWORD PTR [rsp+0x80],rax
  422f18:	mov    QWORD PTR [rsp+0x88],rdx
  422f20:	lea    rdi,[rsp+0x80]
  422f28:	call   417400 <isspace@plt+0x13af0>
  422f2d:	test   al,al
  422f2f:	je     423230 <isspace@plt+0x1f920>
  422f35:	mov    rax,QWORD PTR [r12+0x930]
  422f3d:	mov    eax,DWORD PTR [rax+0x18]
  422f40:	test   al,0x2
  422f42:	je     422f5e <isspace@plt+0x1f64e>
  422f44:	vmovdqa xmm0,XMMWORD PTR [rip+0xed34]        # 431c80 <isspace@plt+0x2e370>
  422f4c:	vpaddq xmm0,xmm0,XMMWORD PTR [rsp+0x80]
  422f55:	vmovdqa XMMWORD PTR [rsp+0x80],xmm0
  422f5e:	mov    rcx,QWORD PTR [r12+0x9a0]
  422f66:	cmp    BYTE PTR [rcx+0x58],0x0
  422f6a:	jne    422f75 <isspace@plt+0x1f665>
  422f6c:	test   ebp,ebp
  422f6e:	je     422fd8 <isspace@plt+0x1f6c8>
  422f70:	and    eax,0x4
  422f73:	jne    422fd8 <isspace@plt+0x1f6c8>
  422f75:	lea    rdi,[rsp+0xa8]
  422f7d:	lea    rsi,[rsp+0x80]
  422f85:	call   417500 <isspace@plt+0x13bf0>
  422f8a:	mov    QWORD PTR [rsp+0xa8],rax
  422f92:	mov    QWORD PTR [rsp+0xb0],rdx
  422f9a:	cmp    ebp,DWORD PTR [rsp+0x4c]
  422f9e:	jge    423000 <isspace@plt+0x1f6f0>
  422fa0:	mov    rax,QWORD PTR [r12+0x930]
  422fa8:	mov    eax,DWORD PTR [rax+0x18]
  422fab:	test   al,0x10
  422fad:	jne    422fc0 <isspace@plt+0x1f6b0>
  422faf:	and    eax,0x1
  422fb2:	add    rax,QWORD PTR [rsp+0xb0]
  422fba:	mov    r14,rax
  422fbd:	jmp    423000 <isspace@plt+0x1f6f0>
  422fbf:	nop
  422fc0:	mov    r14,QWORD PTR [rsp+0xa8]
  422fc8:	test   r14,r14
  422fcb:	setne  cl
  422fce:	and    cl,al
  422fd0:	movzx  eax,cl
  422fd3:	sub    r14,rax
  422fd6:	jmp    423000 <isspace@plt+0x1f6f0>
  422fd8:	vmovdqa xmm0,XMMWORD PTR [rsp+0x80]
  422fe1:	lea    rax,[rsp+0xa8]
  422fe9:	vmovdqu XMMWORD PTR [rax],xmm0
  422fed:	cmp    ebp,DWORD PTR [rsp+0x4c]
  422ff1:	jl     422fa0 <isspace@plt+0x1f690>
  422ff3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422ffd:	nop    DWORD PTR [rax]
  423000:	add    ebp,0x1
  423003:	cmp    ebp,DWORD PTR [rsp+0x20]
  423007:	jl     422eb0 <isspace@plt+0x1f5a0>
  42300d:	jmp    423230 <isspace@plt+0x1f920>
  423012:	mov    rcx,QWORD PTR [rax+0x20]
  423016:	test   rcx,rcx
  423019:	je     423027 <isspace@plt+0x1f717>
  42301b:	mov    rdi,QWORD PTR [rsp+0x10]
  423020:	mov    rsi,QWORD PTR [rsp+0x50]
  423025:	jmp    42307f <isspace@plt+0x1f76f>
  423027:	mov    rcx,QWORD PTR [rax+0x28]
  42302b:	test   rcx,rcx
  42302e:	je     42303f <isspace@plt+0x1f72f>
  423030:	mov    rdi,QWORD PTR [rsp+0x10]
  423035:	mov    rsi,QWORD PTR [rsp+0x30]
  42303a:	jmp    4230ce <isspace@plt+0x1f7be>
  42303f:	mov    r8,QWORD PTR [rax+0x30]
  423043:	mov    rbp,r12
  423046:	test   r8,r8
  423049:	je     4230e9 <isspace@plt+0x1f7d9>
  42304f:	mov    rdx,QWORD PTR [rax+0x40]
  423053:	mov    rdi,QWORD PTR [rsp+0x10]
  423058:	mov    rsi,QWORD PTR [rsp+0x30]
  42305d:	mov    rcx,r12
  423060:	call   r8
  423063:	jmp    4230e0 <isspace@plt+0x1f7d0>
  423065:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42306f:	nop
  423070:	mov    rcx,QWORD PTR [rax+0x8]
  423074:	test   rcx,rcx
  423077:	je     423090 <isspace@plt+0x1f780>
  423079:	mov    rdi,rbx
  42307c:	mov    rsi,r12
  42307f:	call   rcx
  423081:	jmp    4230e0 <isspace@plt+0x1f7d0>
  423083:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42308d:	nop    DWORD PTR [rax]
  423090:	mov    rcx,QWORD PTR [rax]
  423093:	test   rcx,rcx
  423096:	je     42309f <isspace@plt+0x1f78f>
  423098:	mov    rdi,r15
  42309b:	call   rcx
  42309d:	jmp    4230e0 <isspace@plt+0x1f7d0>
  42309f:	mov    rcx,QWORD PTR [rax+0x10]
  4230a3:	test   rcx,rcx
  4230a6:	je     4230b9 <isspace@plt+0x1f7a9>
  4230a8:	mov    rdi,QWORD PTR [rsp+0x10]
  4230ad:	mov    rsi,QWORD PTR [rsp+0x38]
  4230b2:	mov    rdx,r15
  4230b5:	call   rcx
  4230b7:	jmp    4230e0 <isspace@plt+0x1f7d0>
  4230b9:	mov    rcx,QWORD PTR [rax+0x18]
  4230bd:	test   rcx,rcx
  4230c0:	je     423012 <isspace@plt+0x1f702>
  4230c6:	mov    rdi,QWORD PTR [rsp+0x10]
  4230cb:	mov    rsi,rbx
  4230ce:	mov    rdx,r12
  4230d1:	call   rcx
  4230d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4230dd:	nop    DWORD PTR [rax]
  4230e0:	mov    rbp,rax
  4230e3:	cmp    rax,0xffffffffffffffff
  4230e7:	je     423114 <isspace@plt+0x1f804>
  4230e9:	mov    rax,QWORD PTR [rsp+0x18]
  4230ee:	mov    rax,QWORD PTR [rax]
  4230f1:	mov    ecx,DWORD PTR [rax+0x38]
  4230f4:	cmp    rbp,r12
  4230f7:	je     423126 <isspace@plt+0x1f816>
  4230f9:	mov    edx,ecx
  4230fb:	and    edx,0x10
  4230fe:	jne    423126 <isspace@plt+0x1f816>
  423100:	add    r13d,0x1
  423104:	mov    r12,rbp
  423107:	cmp    r13d,DWORD PTR [rsp+0x20]
  42310c:	jl     423070 <isspace@plt+0x1f760>
  423112:	jmp    423140 <isspace@plt+0x1f830>
  423114:	mov    rax,QWORD PTR [rsp+0x18]
  423119:	mov    rax,QWORD PTR [rax]
  42311c:	mov    ecx,DWORD PTR [rax+0x38]
  42311f:	mov    rbp,0xffffffffffffffff
  423126:	test   cl,0x40
  423129:	jne    4231e2 <isspace@plt+0x1f8d2>
  42312f:	cmp    rbp,0xffffffffffffffff
  423133:	je     4232fe <isspace@plt+0x1f9ee>
  423139:	nop    DWORD PTR [rax+0x0]
  423140:	mov    rdi,r14
  423143:	mov    rsi,rbp
  423146:	call   417690 <isspace@plt+0x13d80>
  42314b:	mov    QWORD PTR [rsp+0xa8],rax
  423153:	mov    QWORD PTR [rsp+0xb0],rdx
  42315b:	mov    QWORD PTR [rsp+0xc0],rbp
  423163:	mov    rax,QWORD PTR [rsp+0x18]
  423168:	mov    rax,QWORD PTR [rax]
  42316b:	mov    r12,QWORD PTR [rsp+0x10]
  423170:	cmp    QWORD PTR [r12+0x920],0x0
  423179:	mov    eax,DWORD PTR [rax+0x38]
  42317c:	mov    r13,rbx
  42317f:	je     4231ad <isspace@plt+0x1f89d>
  423181:	test   al,0x4
  423183:	je     4231be <isspace@plt+0x1f8ae>
  423185:	cmp    rdx,r14
  423188:	jbe    4231be <isspace@plt+0x1f8ae>
  42318a:	mov    rdi,r13
  42318d:	mov    rsi,rdx
  423190:	call   412fb0 <isspace@plt+0xf6a0>
  423195:	mov    QWORD PTR [rsp+0xb0],rax
  42319d:	cmp    BYTE PTR [rsp+0x8],0x0
  4231a2:	jne    423237 <isspace@plt+0x1f927>
  4231a8:	jmp    423266 <isspace@plt+0x1f956>
  4231ad:	mov    rdi,r15
  4231b0:	mov    rsi,rbp
  4231b3:	test   al,0x2
  4231b5:	jne    4231fc <isspace@plt+0x1f8ec>
  4231b7:	call   41ad90 <isspace@plt+0x17480>
  4231bc:	jmp    423201 <isspace@plt+0x1f8f1>
  4231be:	cmp    BYTE PTR [rsp+0x8],0x0
  4231c3:	je     423266 <isspace@plt+0x1f956>
  4231c9:	test   al,0x8
  4231cb:	je     423237 <isspace@plt+0x1f927>
  4231cd:	mov    rdi,r13
  4231d0:	mov    rsi,rdx
  4231d3:	call   412fb0 <isspace@plt+0xf6a0>
  4231d8:	mov    QWORD PTR [rsp+0xb0],rax
  4231e0:	jmp    423237 <isspace@plt+0x1f927>
  4231e2:	mov    DWORD PTR [rsp+0xc],0x0
  4231ea:	mov    r12,QWORD PTR [rsp+0x10]
  4231ef:	mov    r13,rbx
  4231f2:	mov    rbx,QWORD PTR [rsp+0x58]
  4231f7:	jmp    4232f0 <isspace@plt+0x1f9e0>
  4231fc:	call   41ed50 <isspace@plt+0x1b440>
  423201:	mov    rax,QWORD PTR [r12+0x9a0]
  423209:	cmp    BYTE PTR [rax+0x58],0x0
  42320d:	je     423230 <isspace@plt+0x1f920>
  42320f:	mov    rdi,r15
  423212:	call   41ff60 <isspace@plt+0x1c650>
  423217:	mov    QWORD PTR [rsp+0xa8],rax
  42321f:	mov    QWORD PTR [rsp+0xb0],rdx
  423227:	nop    WORD PTR [rax+rax*1+0x0]
  423230:	cmp    BYTE PTR [rsp+0x8],0x0
  423235:	je     423266 <isspace@plt+0x1f956>
  423237:	mov    rax,QWORD PTR [rsp+0x68]
  42323c:	cmp    QWORD PTR [r12+0x9a0],rax
  423244:	je     423266 <isspace@plt+0x1f956>
  423246:	mov    rdi,r13
  423249:	lea    rsi,[rsp+0xa8]
  423251:	call   417300 <isspace@plt+0x139f0>
  423256:	mov    QWORD PTR [rsp+0xa8],rax
  42325e:	mov    QWORD PTR [rsp+0xb0],rdx
  423266:	mov    rax,QWORD PTR [r12+0x9a0]
  42326e:	cmp    BYTE PTR [rax+0x58],0x0
  423272:	mov    rbx,QWORD PTR [rsp+0x58]
  423277:	je     423296 <isspace@plt+0x1f986>
  423279:	mov    rdi,r15
  42327c:	lea    rsi,[rsp+0xa8]
  423284:	call   420010 <isspace@plt+0x1c700>
  423289:	mov    esi,0x1
  42328e:	mov    rdi,r15
  423291:	call   41fcf0 <isspace@plt+0x1c3e0>
  423296:	mov    rcx,QWORD PTR [r12+0x920]
  42329e:	test   rcx,rcx
  4232a1:	je     4232f0 <isspace@plt+0x1f9e0>
  4232a3:	mov    rdi,r12
  4232a6:	mov    rsi,r13
  4232a9:	lea    rdx,[rsp+0x90]
  4232b1:	call   QWORD PTR [rcx]
  4232b3:	cmp    rax,0xffffffffffffffff
  4232b7:	je     4232de <isspace@plt+0x1f9ce>
  4232b9:	mov    rbp,rax
  4232bc:	mov    rdi,r13
  4232bf:	call   410a90 <isspace@plt+0xd180>
  4232c4:	cmp    rbp,rax
  4232c7:	ja     4232f0 <isspace@plt+0x1f9e0>
  4232c9:	mov    rdi,r15
  4232cc:	call   41f690 <isspace@plt+0x1bd80>
  4232d1:	mov    rdi,r15
  4232d4:	mov    rsi,rbp
  4232d7:	call   41ad90 <isspace@plt+0x17480>
  4232dc:	jmp    4232f0 <isspace@plt+0x1f9e0>
  4232de:	mov    rdi,r15
  4232e1:	call   41f450 <isspace@plt+0x1bb40>
  4232e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4232f0:	mov    r15,rbx
  4232f3:	test   rbx,rbx
  4232f6:	jne    422cd0 <isspace@plt+0x1f3c0>
  4232fc:	jmp    423319 <isspace@plt+0x1fa09>
  4232fe:	mov    QWORD PTR [rsp+0xa8],r14
  423306:	mov    QWORD PTR [rsp+0xb0],r14
  42330e:	mov    rdx,r14
  423311:	mov    rbp,r14
  423314:	jmp    42316b <isspace@plt+0x1f85b>
  423319:	mov    r14,QWORD PTR [rsp+0x18]
  42331e:	jmp    423328 <isspace@plt+0x1fa18>
  423320:	lea    r14,[r12+0x928]
  423328:	mov    rdi,QWORD PTR [rsp+0x50]
  42332d:	call   4204b0 <isspace@plt+0x1cba0>
  423332:	mov    rax,QWORD PTR [r14]
  423335:	test   rax,rax
  423338:	lea    rbx,[rip+0x1ef41]        # 442280 <isspace@plt+0x3e970>
  42333f:	mov    rbp,QWORD PTR [rsp+0x40]
  423344:	je     423354 <isspace@plt+0x1fa44>
  423346:	test   BYTE PTR [rax+0x38],0x20
  42334a:	je     423354 <isspace@plt+0x1fa44>
  42334c:	mov    rdi,r12
  42334f:	call   427000 <isspace@plt+0x236f0>
  423354:	mov    rax,QWORD PTR [r12+0x920]
  42335c:	test   rax,rax
  42335f:	je     423465 <isspace@plt+0x1fb55>
  423365:	mov    ecx,0x80
  42336a:	add    rcx,QWORD PTR [rip+0x1fc17]        # 442f88 <isspace@plt+0x3f678>
  423371:	cmp    rax,rcx
  423374:	je     423391 <isspace@plt+0x1fa81>
  423376:	lea    rcx,[rbx+0x10]
  42337a:	cmp    rax,rcx
  42337d:	je     423391 <isspace@plt+0x1fa81>
  42337f:	lea    rcx,[rbx+0x20]
  423383:	cmp    rax,rcx
  423386:	je     423391 <isspace@plt+0x1fa81>
  423388:	cmp    rax,QWORD PTR [rip+0x1fbf9]        # 442f88 <isspace@plt+0x3f678>
  42338f:	jne    4233a2 <isspace@plt+0x1fa92>
  423391:	add    rbp,0x1
  423395:	mov    rdi,QWORD PTR [rsp+0x28]
  42339a:	mov    rsi,rbp
  42339d:	call   42abd0 <isspace@plt+0x272c0>
  4233a2:	mov    rcx,QWORD PTR [r12+0x9a0]
  4233aa:	mov    al,BYTE PTR [rcx+0x58]
  4233ad:	test   al,al
  4233af:	je     4233d1 <isspace@plt+0x1fac1>
  4233b1:	cmp    QWORD PTR [r14],0x0
  4233b5:	jne    4233d1 <isspace@plt+0x1fac1>
  4233b7:	cmp    QWORD PTR [r12+0x930],0x0
  4233c0:	jne    4233d1 <isspace@plt+0x1fac1>
  4233c2:	mov    edx,0x10e0
  4233c7:	add    rdx,QWORD PTR [rip+0x1fc22]        # 442ff0 <isspace@plt+0x3f6e0>
  4233ce:	mov    QWORD PTR [r14],rdx
  4233d1:	mov    rdx,QWORD PTR [r12+0x920]
  4233d9:	add    rbx,0x10
  4233dd:	cmp    rdx,rbx
  4233e0:	je     423405 <isspace@plt+0x1faf5>
  4233e2:	cmp    rdx,QWORD PTR [rsp+0x60]
  4233e7:	je     42340c <isspace@plt+0x1fafc>
  4233e9:	lea    rdx,[rip+0x1fcf0]        # 4430e0 <isspace@plt+0x3f7d0>
  4233f0:	add    rdx,0x60
  4233f4:	cmp    rcx,rdx
  4233f7:	je     4234f4 <isspace@plt+0x1fbe4>
  4233fd:	test   al,al
  4233ff:	je     42341c <isspace@plt+0x1fb0c>
  423401:	xor    esi,esi
  423403:	jmp    423414 <isspace@plt+0x1fb04>
  423405:	mov    esi,0x4
  42340a:	jmp    423414 <isspace@plt+0x1fb04>
  42340c:	mov    esi,DWORD PTR [r12+0x914]
  423414:	mov    rdi,r12
  423417:	call   427780 <isspace@plt+0x23e70>
  42341c:	mov    rax,QWORD PTR [r12+0x9a0]
  423424:	cmp    rax,QWORD PTR [rip+0x1fb95]        # 442fc0 <isspace@plt+0x3f6b0>
  42342b:	jne    423445 <isspace@plt+0x1fb35>
  42342d:	cmp    QWORD PTR [r12+0x7d0],0x0
  423436:	jne    423445 <isspace@plt+0x1fb35>
  423438:	mov    rax,QWORD PTR [rsp+0x38]
  42343d:	mov    rdi,QWORD PTR [rax]
  423440:	call   40f820 <isspace@plt+0xbf10>
  423445:	mov    rbp,QWORD PTR [r12+0x28]
  42344a:	test   rbp,rbp
  42344d:	je     423465 <isspace@plt+0x1fb55>
  42344f:	nop
  423450:	mov    rdi,QWORD PTR [rbp+0x18]
  423454:	call   41a4a0 <isspace@plt+0x16b90>
  423459:	mov    rbp,QWORD PTR [rbp+0x2e0]
  423460:	test   rbp,rbp
  423463:	jne    423450 <isspace@plt+0x1fb40>
  423465:	lea    rax,[r12+0x910]
  42346d:	test   BYTE PTR [rsp+0xc],0x1
  423472:	je     4234b1 <isspace@plt+0x1fba1>
  423474:	lea    rcx,[r12+0x958]
  42347c:	cmp    QWORD PTR [r12+0x938],0x0
  423485:	jne    423497 <isspace@plt+0x1fb87>
  423487:	mov    rdx,QWORD PTR [r12+0x7d8]
  42348f:	mov    QWORD PTR [r12+0x938],rdx
  423497:	mov    rdx,QWORD PTR [rax+0x40]
  42349b:	mov    QWORD PTR [rcx+0x40],rdx
  42349f:	vmovdqu ymm0,YMMWORD PTR [rax]
  4234a3:	vmovups ymm1,YMMWORD PTR [rax+0x20]
  4234a8:	vmovups YMMWORD PTR [rcx+0x20],ymm1
  4234ad:	vmovdqu YMMWORD PTR [rcx],ymm0
  4234b1:	vpxor  xmm0,xmm0,xmm0
  4234b5:	vmovdqu YMMWORD PTR [rax+0x20],ymm0
  4234ba:	vmovdqu YMMWORD PTR [rax],ymm0
  4234be:	mov    QWORD PTR [rax+0x40],0x0
  4234c6:	mov    DWORD PTR [rax],0xffffffff
  4234cc:	mov    rax,QWORD PTR fs:0x28
  4234d5:	cmp    rax,QWORD PTR [rsp+0xe0]
  4234dd:	jne    423509 <isspace@plt+0x1fbf9>
  4234df:	add    rsp,0xe8
  4234e6:	pop    rbx
  4234e7:	pop    r12
  4234e9:	pop    r13
  4234eb:	pop    r14
  4234ed:	pop    r15
  4234ef:	pop    rbp
  4234f0:	vzeroupper 
  4234f3:	ret    
  4234f4:	mov    rsi,QWORD PTR [r12+0x9a8]
  4234fc:	mov    rdi,r12
  4234ff:	call   4276f0 <isspace@plt+0x23de0>
  423504:	jmp    42341c <isspace@plt+0x1fb0c>
  423509:	vzeroupper 
  42350c:	call   403280 <__stack_chk_fail@plt>
  423511:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42351b:	nop    DWORD PTR [rax+rax*1+0x0]
  423520:	push   rax
  423521:	mov    rax,QWORD PTR fs:0x28
  42352a:	mov    QWORD PTR [rsp],rax
  42352e:	cmp    QWORD PTR [rdi+0x7d0],0x0
  423536:	jne    423540 <isspace@plt+0x1fc30>
  423538:	mov    rdi,QWORD PTR [rsi]
  42353b:	call   40f820 <isspace@plt+0xbf10>
  423540:	mov    rax,QWORD PTR fs:0x28
  423549:	cmp    rax,QWORD PTR [rsp]
  42354d:	jne    423551 <isspace@plt+0x1fc41>
  42354f:	pop    rax
  423550:	ret    
  423551:	call   403280 <__stack_chk_fail@plt>
  423556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423560:	push   rax
  423561:	mov    rax,QWORD PTR fs:0x28
  42356a:	mov    QWORD PTR [rsp],rax
  42356e:	vxorps xmm0,xmm0,xmm0
  423572:	vmovups YMMWORD PTR [rdi+0x910],ymm0
  42357a:	vmovups YMMWORD PTR [rdi+0x930],ymm0
  423582:	mov    QWORD PTR [rdi+0x950],0x0
  42358d:	mov    DWORD PTR [rdi+0x910],0xffffffff
  423597:	mov    rax,QWORD PTR fs:0x28
  4235a0:	cmp    rax,QWORD PTR [rsp]
  4235a4:	jne    4235ab <isspace@plt+0x1fc9b>
  4235a6:	pop    rax
  4235a7:	vzeroupper 
  4235aa:	ret    
  4235ab:	vzeroupper 
  4235ae:	call   403280 <__stack_chk_fail@plt>
  4235b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4235bd:	nop    DWORD PTR [rax]
  4235c0:	sub    rsp,0xd8
  4235c7:	test   al,al
  4235c9:	je     42360a <isspace@plt+0x1fcfa>
  4235cb:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  4235d1:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  4235d7:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  4235dd:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  4235e6:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  4235ef:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  4235f8:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  423601:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  42360a:	mov    QWORD PTR [rsp+0x48],r9
  42360f:	mov    QWORD PTR [rsp+0x40],r8
  423614:	mov    QWORD PTR [rsp+0x38],rcx
  423619:	mov    QWORD PTR [rsp+0x30],rdx
  42361e:	lea    rax,[rsp+0x20]
  423623:	mov    QWORD PTR [rsp+0x10],rax
  423628:	lea    rax,[rsp+0xe0]
  423630:	mov    QWORD PTR [rsp+0x8],rax
  423635:	movabs rax,0x3000000010
  42363f:	mov    QWORD PTR [rsp],rax
  423643:	mov    rdi,QWORD PTR [rdi]
  423646:	mov    rdx,rsp
  423649:	call   QWORD PTR [rdi+0x38]
  42364c:	nop    DWORD PTR [rax+0x0]
  423650:	push   rbp
  423651:	push   r15
  423653:	push   r14
  423655:	push   r13
  423657:	push   r12
  423659:	push   rbx
  42365a:	sub    rsp,0x68
  42365e:	mov    rax,QWORD PTR fs:0x28
  423667:	mov    QWORD PTR [rsp+0x60],rax
  42366c:	test   rsi,rsi
  42366f:	je     4236bc <isspace@plt+0x1fdac>
  423671:	mov    r15,rsi
  423674:	cmp    BYTE PTR [rsi],0x0
  423677:	je     4236bc <isspace@plt+0x1fdac>
  423679:	mov    r14,rdi
  42367c:	mov    rdi,QWORD PTR [rdi]
  42367f:	call   QWORD PTR [rdi+0x90]
  423685:	cmp    BYTE PTR [r15],0x3c
  423689:	jne    4236c3 <isspace@plt+0x1fdb3>
  42368b:	cmp    BYTE PTR [r15+0x1],0x0
  423690:	je     4236c3 <isspace@plt+0x1fdb3>
  423692:	lea    rsi,[r15+0x1]
  423696:	mov    rdx,rsp
  423699:	mov    ecx,0xc
  42369e:	mov    rdi,rax
  4236a1:	call   403450 <termkey_strpkey@plt>
  4236a6:	test   rax,rax
  4236a9:	je     4236c3 <isspace@plt+0x1fdb3>
  4236ab:	mov    rbx,rax
  4236ae:	cmp    BYTE PTR [rax],0x3e
  4236b1:	jne    4236c3 <isspace@plt+0x1fdb3>
  4236b3:	add    rbx,0x1
  4236b7:	jmp    42376e <isspace@plt+0x1fe5e>
  4236bc:	xor    ebx,ebx
  4236be:	jmp    42376e <isspace@plt+0x1fe5e>
  4236c3:	lea    rsi,[rip+0xe64a]        # 431d14 <isspace@plt+0x2e404>
  4236ca:	mov    edx,0x5
  4236cf:	mov    rdi,r15
  4236d2:	call   403160 <strncmp@plt>
  4236d7:	lea    r12,[r15+0x1]
  4236db:	test   eax,eax
  4236dd:	jne    423745 <isspace@plt+0x1fe35>
  4236df:	lea    rbx,[r15+0x2]
  4236e3:	xor    r13d,r13d
  4236e6:	jmp    4236f8 <isspace@plt+0x1fde8>
  4236e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4236f0:	add    rbx,0x1
  4236f4:	add    r13,0x1
  4236f8:	movzx  eax,BYTE PTR [rbx-0x1]
  4236fc:	test   al,al
  4236fe:	je     423704 <isspace@plt+0x1fdf4>
  423700:	cmp    al,0x3e
  423702:	jne    4236f0 <isspace@plt+0x1fde0>
  423704:	lea    rcx,[r13+0x1]
  423708:	cmp    rcx,0x2
  42370c:	jb     423745 <isspace@plt+0x1fe35>
  42370e:	cmp    rcx,0x41
  423712:	ja     423745 <isspace@plt+0x1fe35>
  423714:	cmp    al,0x3e
  423716:	jne    423745 <isspace@plt+0x1fe35>
  423718:	lea    rbp,[rsp+0x20]
  42371d:	mov    rdi,rbp
  423720:	mov    rsi,r12
  423723:	mov    rdx,r13
  423726:	call   4034e0 <memcpy@plt>
  42372b:	mov    BYTE PTR [rsp+r13*1+0x20],0x0
  423731:	mov    rdi,QWORD PTR [r14+0xaa0]
  423738:	mov    rsi,rbp
  42373b:	call   408590 <isspace@plt+0x4c80>
  423740:	test   rax,rax
  423743:	jne    42376e <isspace@plt+0x1fe5e>
  423745:	mov    al,BYTE PTR [r15]
  423748:	and    al,0xc0
  42374a:	cmp    al,0x80
  42374c:	cmove  r12,r15
  423750:	add    r12,0xffffffffffffffff
  423754:	mov    rbx,r12
  423757:	nop    WORD PTR [rax+rax*1+0x0]
  423760:	movzx  eax,BYTE PTR [rbx+0x1]
  423764:	add    rbx,0x1
  423768:	and    al,0xc0
  42376a:	cmp    al,0x80
  42376c:	je     423760 <isspace@plt+0x1fe50>
  42376e:	mov    rax,QWORD PTR fs:0x28
  423777:	cmp    rax,QWORD PTR [rsp+0x60]
  42377c:	jne    423790 <isspace@plt+0x1fe80>
  42377e:	mov    rax,rbx
  423781:	add    rsp,0x68
  423785:	pop    rbx
  423786:	pop    r12
  423788:	pop    r13
  42378a:	pop    r14
  42378c:	pop    r15
  42378e:	pop    rbp
  42378f:	ret    
  423790:	call   403280 <__stack_chk_fail@plt>
  423795:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42379f:	nop
  4237a0:	push   r15
  4237a2:	push   r14
  4237a4:	push   rbx
  4237a5:	sub    rsp,0x60
  4237a9:	mov    rbx,rsi
  4237ac:	mov    rax,QWORD PTR fs:0x28
  4237b5:	mov    QWORD PTR [rsp+0x58],rax
  4237ba:	mov    rdi,QWORD PTR [rdi]
  4237bd:	call   QWORD PTR [rdi+0x90]
  4237c3:	mov    r15,rax
  4237c6:	mov    al,BYTE PTR [rbx]
  4237c8:	mov    r14,0xffffffffffffffff
  4237cf:	test   al,al
  4237d1:	je     42389b <isspace@plt+0x1ff8b>
  4237d7:	cmp    al,0x3c
  4237d9:	jne    423803 <isspace@plt+0x1fef3>
  4237db:	cmp    BYTE PTR [rbx+0x1],0x0
  4237df:	je     42388f <isspace@plt+0x1ff7f>
  4237e5:	lea    rsi,[rbx+0x1]
  4237e9:	mov    rdx,rsp
  4237ec:	mov    ecx,0xc
  4237f1:	mov    rdi,r15
  4237f4:	call   403450 <termkey_strpkey@plt>
  4237f9:	test   rax,rax
  4237fc:	je     423803 <isspace@plt+0x1fef3>
  4237fe:	cmp    BYTE PTR [rax],0x3e
  423801:	je     42381f <isspace@plt+0x1ff0f>
  423803:	mov    rdx,rsp
  423806:	mov    ecx,0xc
  42380b:	mov    rdi,r15
  42380e:	mov    rsi,rbx
  423811:	call   403450 <termkey_strpkey@plt>
  423816:	test   rax,rax
  423819:	je     42389b <isspace@plt+0x1ff8b>
  42381f:	mov    ecx,DWORD PTR [rsp]
  423822:	mov    rax,QWORD PTR [rsp+0x8]
  423827:	test   ecx,ecx
  423829:	je     423877 <isspace@plt+0x1ff67>
  42382b:	cmp    ecx,0x2
  42382e:	jne    42389b <isspace@plt+0x1ff8b>
  423830:	vmovups ymm0,YMMWORD PTR [rip+0xe634]        # 431e6c <isspace@plt+0x2e55c>
  423838:	vmovups YMMWORD PTR [rsp+0x2c],ymm0
  42383e:	vmovups ymm0,YMMWORD PTR [rip+0xe61a]        # 431e60 <isspace@plt+0x2e550>
  423846:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  42384c:	lea    rcx,[rsp+0x28]
  423851:	mov    edx,0x3
  423856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423860:	cmp    edx,eax
  423862:	je     423897 <isspace@plt+0x1ff87>
  423864:	mov    edx,DWORD PTR [rcx]
  423866:	add    rcx,0x8
  42386a:	test   edx,edx
  42386c:	jne    423860 <isspace@plt+0x1ff50>
  42386e:	mov    r14,0xffffffffffffffff
  423875:	jmp    42389b <isspace@plt+0x1ff8b>
  423877:	cmp    rax,0xffffffffffffffff
  42387b:	je     42389b <isspace@plt+0x1ff8b>
  42387d:	mov    r14d,eax
  423880:	and    r14d,0x1f
  423884:	cmp    DWORD PTR [rsp+0x10],0x4
  423889:	cmovne r14,rax
  42388d:	jmp    42389b <isspace@plt+0x1ff8b>
  42388f:	mov    r14d,0x3c
  423895:	jmp    42389b <isspace@plt+0x1ff8b>
  423897:	movsxd r14,DWORD PTR [rcx-0x4]
  42389b:	mov    rax,QWORD PTR fs:0x28
  4238a4:	cmp    rax,QWORD PTR [rsp+0x58]
  4238a9:	jne    4238bb <isspace@plt+0x1ffab>
  4238ab:	mov    rax,r14
  4238ae:	add    rsp,0x60
  4238b2:	pop    rbx
  4238b3:	pop    r14
  4238b5:	pop    r15
  4238b7:	vzeroupper 
  4238ba:	ret    
  4238bb:	vzeroupper 
  4238be:	call   403280 <__stack_chk_fail@plt>
  4238c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4238cd:	nop    DWORD PTR [rax]
  4238d0:	push   rbx
  4238d1:	sub    rsp,0x10
  4238d5:	mov    rbx,rdx
  4238d8:	mov    rax,QWORD PTR fs:0x28
  4238e1:	mov    QWORD PTR [rsp+0x8],rax
  4238e6:	call   4237a0 <isspace@plt+0x1fe90>
  4238eb:	mov    DWORD PTR [rsp+0x4],eax
  4238ef:	cmp    eax,0xffffffff
  4238f2:	je     42390b <isspace@plt+0x1fffb>
  4238f4:	lea    rsi,[rsp+0x4]
  4238f9:	mov    rdi,rbx
  4238fc:	call   404f00 <isspace@plt+0x15f0>
  423901:	cdqe   
  423903:	mov    BYTE PTR [rbx+rax*1],0x0
  423907:	mov    al,0x1
  423909:	jmp    42390d <isspace@plt+0x1fffd>
  42390b:	xor    eax,eax
  42390d:	mov    rcx,QWORD PTR fs:0x28
  423916:	cmp    rcx,QWORD PTR [rsp+0x8]
  42391b:	jne    423923 <isspace@plt+0x20013>
  42391d:	add    rsp,0x10
  423921:	pop    rbx
  423922:	ret    
  423923:	call   403280 <__stack_chk_fail@plt>
  423928:	nop    DWORD PTR [rax+rax*1+0x0]
  423930:	push   rbp
  423931:	push   r15
  423933:	push   r14
  423935:	push   r12
  423937:	push   rbx
  423938:	sub    rsp,0x20
  42393c:	mov    rax,QWORD PTR fs:0x28
  423945:	mov    QWORD PTR [rsp+0x18],rax
  42394a:	test   rsi,rsi
  42394d:	je     4239ec <isspace@plt+0x200dc>
  423953:	mov    rbx,rsi
  423956:	mov    r15,rdi
  423959:	mov    r14,rsp
  42395c:	mov    rdi,r14
  42395f:	call   404230 <isspace@plt+0x920>
  423964:	mov    rdi,r14
  423967:	mov    rsi,rbx
  42396a:	call   404960 <isspace@plt+0x1050>
  42396f:	test   al,al
  423971:	je     4239ec <isspace@plt+0x200dc>
  423973:	lea    rdi,[r15+0x8f0]
  42397a:	call   404d50 <isspace@plt+0x1440>
  42397f:	mov    r12,QWORD PTR [rsp]
  423983:	test   r12,r12
  423986:	je     4239e4 <isspace@plt+0x200d4>
  423988:	mov    r14,rax
  42398b:	mov    rdi,r15
  42398e:	mov    rsi,r12
  423991:	call   423650 <isspace@plt+0x1fd40>
  423996:	test   rax,rax
  423999:	je     4239d1 <isspace@plt+0x200c1>
  42399b:	nop    DWORD PTR [rax+rax*1+0x0]
  4239a0:	mov    rbx,rax
  4239a3:	movzx  ebp,BYTE PTR [rax]
  4239a6:	mov    BYTE PTR [rax],0x0
  4239a9:	xor    ecx,ecx
  4239ab:	mov    rdi,r15
  4239ae:	mov    rsi,r12
  4239b1:	mov    rdx,r14
  4239b4:	call   424030 <isspace@plt+0x20720>
  4239b9:	mov    BYTE PTR [rbx],bpl
  4239bc:	mov    rdi,r15
  4239bf:	mov    rsi,rbx
  4239c2:	call   423650 <isspace@plt+0x1fd40>
  4239c7:	mov    r12,rbx
  4239ca:	test   rax,rax
  4239cd:	jne    4239a0 <isspace@plt+0x20090>
  4239cf:	jmp    4239d4 <isspace@plt+0x200c4>
  4239d1:	mov    rbx,r12
  4239d4:	xor    ecx,ecx
  4239d6:	mov    rdi,r15
  4239d9:	mov    rsi,rbx
  4239dc:	mov    rdx,r14
  4239df:	call   424030 <isspace@plt+0x20720>
  4239e4:	mov    rdi,rsp
  4239e7:	call   404550 <isspace@plt+0xc40>
  4239ec:	mov    rax,QWORD PTR fs:0x28
  4239f5:	cmp    rax,QWORD PTR [rsp+0x18]
  4239fa:	jne    423a09 <isspace@plt+0x200f9>
  4239fc:	add    rsp,0x20
  423a00:	pop    rbx
  423a01:	pop    r12
  423a03:	pop    r14
  423a05:	pop    r15
  423a07:	pop    rbp
  423a08:	ret    
  423a09:	call   403280 <__stack_chk_fail@plt>
  423a0e:	xchg   ax,ax
  423a10:	push   r15
  423a12:	push   r14
  423a14:	push   rbx
  423a15:	sub    rsp,0x10
  423a19:	mov    rax,QWORD PTR fs:0x28
  423a22:	mov    QWORD PTR [rsp+0x8],rax
  423a27:	xor    eax,eax
  423a29:	add    esi,0xffffffff
  423a2c:	cmp    esi,0x1b
  423a2f:	ja     423a79 <isspace@plt+0x20169>
  423a31:	mov    r15,rdx
  423a34:	mov    r14,rdi
  423a37:	lea    rcx,[rip+0xe252]        # 431c90 <isspace@plt+0x2e380>
  423a3e:	movsxd rdx,DWORD PTR [rcx+rsi*4]
  423a42:	add    rdx,rcx
  423a45:	jmp    rdx
  423a47:	mov    DWORD PTR [r14+0x9d0],0x1
  423a52:	jmp    423a77 <isspace@plt+0x20167>
  423a54:	mov    DWORD PTR [r14+0x9c0],0x1
  423a5f:	jmp    423a77 <isspace@plt+0x20167>
  423a61:	mov    DWORD PTR [r14+0x9cc],0x1
  423a6c:	mov    DWORD PTR [r14+0x9c8],0x1
  423a77:	mov    al,0x1
  423a79:	mov    rcx,QWORD PTR fs:0x28
  423a82:	cmp    rcx,QWORD PTR [rsp+0x8]
  423a87:	jne    423af0 <isspace@plt+0x201e0>
  423a89:	add    rsp,0x10
  423a8d:	pop    rbx
  423a8e:	pop    r14
  423a90:	pop    r15
  423a92:	ret    
  423a93:	mov    rbx,QWORD PTR [r14+0x8]
  423a97:	test   rbx,rbx
  423a9a:	jne    423aac <isspace@plt+0x2019c>
  423a9c:	jmp    423ac5 <isspace@plt+0x201b5>
  423a9e:	xchg   ax,ax
  423aa0:	mov    rbx,QWORD PTR [rbx+0x458]
  423aa7:	test   rbx,rbx
  423aaa:	je     423ac5 <isspace@plt+0x201b5>
  423aac:	mov    rdi,QWORD PTR [rbx]
  423aaf:	mov    rsi,QWORD PTR [r15+0x10]
  423ab3:	call   4106d0 <isspace@plt+0xcdc0>
  423ab8:	test   al,al
  423aba:	je     423aa0 <isspace@plt+0x20190>
  423abc:	mov    DWORD PTR [rbx+0x10],0x1
  423ac3:	jmp    423aa0 <isspace@plt+0x20190>
  423ac5:	mov    DWORD PTR [r14+0x9c4],0x1
  423ad0:	mov    al,0x1
  423ad2:	cmp    BYTE PTR [r14+0x9b8],0x0
  423ada:	je     423a79 <isspace@plt+0x20169>
  423adc:	add    r14,0x9d8
  423ae3:	mov    esi,0x1
  423ae8:	mov    rdi,r14
  423aeb:	call   403730 <__longjmp_chk@plt>
  423af0:	call   403280 <__stack_chk_fail@plt>
  423af5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423aff:	nop
  423b00:	push   rbp
  423b01:	mov    rbp,rsp
  423b04:	push   r15
  423b06:	push   r14
  423b08:	push   r13
  423b0a:	push   r12
  423b0c:	push   rbx
  423b0d:	and    rsp,0xffffffffffffffe0
  423b11:	sub    rsp,0x140
  423b18:	mov    rax,QWORD PTR fs:0x28
  423b21:	mov    QWORD PTR [rsp+0x120],rax
  423b29:	cmp    QWORD PTR [rdi+0x28],0x0
  423b2e:	je     423e2d <isspace@plt+0x2051d>
  423b34:	mov    r13,rdi
  423b37:	mov    eax,DWORD PTR [rdi+0x9bc]
  423b3d:	cmp    eax,0xffffffff
  423b40:	jne    423e2f <isspace@plt+0x2051f>
  423b46:	mov    BYTE PTR [r13+0x9b8],0x1
  423b4e:	mov    esi,0x1
  423b53:	xor    eax,eax
  423b55:	mov    rdi,r13
  423b58:	call   420610 <isspace@plt+0x1cd00>
  423b5d:	vxorps xmm0,xmm0,xmm0
  423b61:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  423b67:	lea    rdi,[rsp+0xa0]
  423b6f:	call   4034a0 <sigemptyset@plt>
  423b74:	mov    rbx,QWORD PTR [r13+0x28]
  423b78:	test   rbx,rbx
  423b7b:	je     423b95 <isspace@plt+0x20285>
  423b7d:	nop    DWORD PTR [rax]
  423b80:	mov    rdi,QWORD PTR [rbx+0x18]
  423b84:	call   41a4a0 <isspace@plt+0x16b90>
  423b89:	mov    rbx,QWORD PTR [rbx+0x2e0]
  423b90:	test   rbx,rbx
  423b93:	jne    423b80 <isspace@plt+0x20270>
  423b95:	mov    DWORD PTR [r13+0x9bc],0x0
  423ba0:	lea    rdi,[r13+0x9d8]
  423ba7:	mov    esi,0x1
  423bac:	call   4038a0 <__sigsetjmp@plt>
  423bb1:	cmp    BYTE PTR [r13+0x9b8],0x0
  423bb9:	je     423e24 <isspace@plt+0x20514>
  423bbf:	lea    rax,[rip+0x9557]        # 42d11d <isspace@plt+0x2980d>
  423bc6:	mov    QWORD PTR [rsp+0x8],rax
  423bcb:	xor    ebx,ebx
  423bcd:	nop    DWORD PTR [rax]
  423bd0:	vxorps xmm0,xmm0,xmm0
  423bd4:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  423bdd:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  423be3:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  423be9:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  423bef:	xor    edi,edi
  423bf1:	vzeroupper 
  423bf4:	call   403300 <__fdelt_chk@plt>
  423bf9:	or     BYTE PTR [rsp+rax*8+0x20],0x1
  423bfe:	cmp    DWORD PTR [r13+0x9c4],0x0
  423c06:	je     423c9c <isspace@plt+0x2038c>
  423c0c:	mov    r12,QWORD PTR [r13+0x28]
  423c10:	test   r12,r12
  423c13:	je     423e67 <isspace@plt+0x20557>
  423c19:	xor    r15d,r15d
  423c1c:	nop    DWORD PTR [rax+0x0]
  423c20:	mov    r14,QWORD PTR [r12+0x2e0]
  423c28:	mov    rax,QWORD PTR [r12+0x10]
  423c2d:	cmp    DWORD PTR [rax+0x10],0x0
  423c31:	je     423c54 <isspace@plt+0x20344>
  423c33:	mov    rdi,r15
  423c36:	call   4030d0 <free@plt>
  423c3b:	mov    rax,QWORD PTR [r12+0x10]
  423c40:	mov    rdi,QWORD PTR [rax+0x8]
  423c44:	call   403850 <strdup@plt>
  423c49:	mov    r15,rax
  423c4c:	mov    rdi,r12
  423c4f:	call   422030 <isspace@plt+0x1e720>
  423c54:	mov    r12,r14
  423c57:	test   r14,r14
  423c5a:	jne    423c20 <isspace@plt+0x20310>
  423c5c:	test   r15,r15
  423c5f:	mov    rdx,r15
  423c62:	lea    rax,[rip+0x94b4]        # 42d11d <isspace@plt+0x2980d>
  423c69:	cmove  rdx,rax
  423c6d:	cmp    QWORD PTR [r13+0x28],0x0
  423c72:	je     423e62 <isspace@plt+0x20552>
  423c78:	xor    eax,eax
  423c7a:	mov    rdi,r13
  423c7d:	lea    rsi,[rip+0xe096]        # 431d1a <isspace@plt+0x2e40a>
  423c84:	call   42a150 <isspace@plt+0x26840>
  423c89:	mov    DWORD PTR [r13+0x9c4],0x0
  423c94:	mov    rdi,r15
  423c97:	call   4030d0 <free@plt>
  423c9c:	cmp    DWORD PTR [r13+0x9d0],0x0
  423ca4:	jne    423e51 <isspace@plt+0x20541>
  423caa:	cmp    DWORD PTR [r13+0x9c0],0x0
  423cb2:	je     423cce <isspace@plt+0x203be>
  423cb4:	mov    DWORD PTR [r13+0x9c0],0x0
  423cbf:	mov    rdi,r13
  423cc2:	lea    rsi,[rip+0xbe7b]        # 42fb44 <isspace@plt+0x2c234>
  423cc9:	call   423930 <isspace@plt+0x20020>
  423cce:	cmp    DWORD PTR [r13+0x9cc],0x0
  423cd6:	je     423cea <isspace@plt+0x203da>
  423cd8:	mov    rdi,QWORD PTR [r13+0x0]
  423cdc:	call   QWORD PTR [rdi+0x70]
  423cdf:	mov    DWORD PTR [r13+0x9cc],0x0
  423cea:	cmp    DWORD PTR [r13+0x9c8],0x0
  423cf2:	je     423d06 <isspace@plt+0x203f6>
  423cf4:	mov    rdi,QWORD PTR [r13+0x0]
  423cf8:	call   QWORD PTR [rdi+0x10]
  423cfb:	mov    DWORD PTR [r13+0x9c8],0x0
  423d06:	mov    rdi,QWORD PTR [r13+0x0]
  423d0a:	call   QWORD PTR [rdi+0x58]
  423d0d:	mov    rax,QWORD PTR [r13+0x9a0]
  423d14:	mov    rax,QWORD PTR [rax+0x50]
  423d18:	mov    QWORD PTR [rsp+0x10],rax
  423d1d:	mov    edi,0x1
  423d22:	xor    edx,edx
  423d24:	xor    ecx,ecx
  423d26:	lea    rsi,[rsp+0x20]
  423d2b:	mov    r8,rbx
  423d2e:	lea    r9,[rsp+0xa0]
  423d36:	call   4032d0 <pselect@plt>
  423d3b:	cmp    eax,0xffffffff
  423d3e:	je     423d90 <isspace@plt+0x20480>
  423d40:	test   eax,eax
  423d42:	js     423e7d <isspace@plt+0x2056d>
  423d48:	xor    edi,edi
  423d4a:	call   403300 <__fdelt_chk@plt>
  423d4f:	test   BYTE PTR [rsp+rax*8+0x20],0x1
  423d54:	jne    423db0 <isspace@plt+0x204a0>
  423d56:	mov    rax,QWORD PTR [r13+0x9a0]
  423d5d:	mov    rax,QWORD PTR [rax+0x48]
  423d61:	test   rax,rax
  423d64:	je     423e14 <isspace@plt+0x20504>
  423d6a:	mov    rdi,r13
  423d6d:	call   rax
  423d6f:	xor    ebx,ebx
  423d71:	cmp    BYTE PTR [r13+0x9b8],0x0
  423d79:	jne    423bd0 <isspace@plt+0x202c0>
  423d7f:	jmp    423e24 <isspace@plt+0x20514>
  423d84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d8e:	xchg   ax,ax
  423d90:	call   403130 <__errno_location@plt>
  423d95:	cmp    DWORD PTR [rax],0x4
  423d98:	jne    423e82 <isspace@plt+0x20572>
  423d9e:	cmp    BYTE PTR [r13+0x9b8],0x0
  423da6:	jne    423bd0 <isspace@plt+0x202c0>
  423dac:	jmp    423e24 <isspace@plt+0x20514>
  423dae:	xchg   ax,ax
  423db0:	mov    rdi,QWORD PTR [r13+0x0]
  423db4:	call   QWORD PTR [rdi+0x90]
  423dba:	mov    rdi,rax
  423dbd:	call   403870 <termkey_advisereadable@plt>
  423dc2:	jmp    423de2 <isspace@plt+0x204d2>
  423dc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423dce:	xchg   ax,ax
  423dd0:	xor    edx,edx
  423dd2:	mov    ecx,0x1
  423dd7:	mov    rdi,r13
  423dda:	mov    rsi,rax
  423ddd:	call   424030 <isspace@plt+0x20720>
  423de2:	mov    rdi,r13
  423de5:	call   423eb0 <isspace@plt+0x205a0>
  423dea:	test   rax,rax
  423ded:	jne    423dd0 <isspace@plt+0x204c0>
  423def:	mov    rax,QWORD PTR [r13+0x9a0]
  423df6:	cmp    QWORD PTR [rax+0x48],0x0
  423dfb:	lea    rax,[rsp+0x10]
  423e00:	cmovne rbx,rax
  423e04:	cmp    BYTE PTR [r13+0x9b8],0x0
  423e0c:	jne    423bd0 <isspace@plt+0x202c0>
  423e12:	jmp    423e24 <isspace@plt+0x20514>
  423e14:	xor    ebx,ebx
  423e16:	cmp    BYTE PTR [r13+0x9b8],0x0
  423e1e:	jne    423bd0 <isspace@plt+0x202c0>
  423e24:	mov    eax,DWORD PTR [r13+0x9bc]
  423e2b:	jmp    423e2f <isspace@plt+0x2051f>
  423e2d:	xor    eax,eax
  423e2f:	mov    rcx,QWORD PTR fs:0x28
  423e38:	cmp    rcx,QWORD PTR [rsp+0x120]
  423e40:	jne    423ea0 <isspace@plt+0x20590>
  423e42:	lea    rsp,[rbp-0x28]
  423e46:	pop    rbx
  423e47:	pop    r12
  423e49:	pop    r13
  423e4b:	pop    r14
  423e4d:	pop    r15
  423e4f:	pop    rbp
  423e50:	ret    
  423e51:	lea    rsi,[rip+0xdee1]        # 431d39 <isspace@plt+0x2e429>
  423e58:	xor    eax,eax
  423e5a:	mov    rdi,r13
  423e5d:	call   4235c0 <isspace@plt+0x1fcb0>
  423e62:	mov    QWORD PTR [rsp+0x8],rdx
  423e67:	lea    rsi,[rip+0xdeac]        # 431d1a <isspace@plt+0x2e40a>
  423e6e:	xor    eax,eax
  423e70:	mov    rdi,r13
  423e73:	mov    rdx,QWORD PTR [rsp+0x8]
  423e78:	call   4235c0 <isspace@plt+0x1fcb0>
  423e7d:	call   403130 <__errno_location@plt>
  423e82:	mov    edi,DWORD PTR [rax]
  423e84:	call   403880 <strerror@plt>
  423e89:	mov    rcx,rax
  423e8c:	lea    rsi,[rip+0xdeb9]        # 431d4c <isspace@plt+0x2e43c>
  423e93:	xor    eax,eax
  423e95:	mov    rdi,r13
  423e98:	mov    rdx,rcx
  423e9b:	call   4235c0 <isspace@plt+0x1fcb0>
  423ea0:	call   403280 <__stack_chk_fail@plt>
  423ea5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423eaf:	nop
  423eb0:	push   rbp
  423eb1:	mov    rbp,rsp
  423eb4:	push   r15
  423eb6:	push   r14
  423eb8:	push   rbx
  423eb9:	and    rsp,0xffffffffffffffe0
  423ebd:	sub    rsp,0xe0
  423ec4:	mov    rbx,rdi
  423ec7:	mov    rax,QWORD PTR fs:0x28
  423ed0:	mov    QWORD PTR [rsp+0xd0],rax
  423ed8:	vxorps xmm0,xmm0,xmm0
  423edc:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  423ee2:	mov    rdi,QWORD PTR [rdi]
  423ee5:	lea    rsi,[rsp+0x20]
  423eea:	vzeroupper 
  423eed:	call   QWORD PTR [rdi+0x78]
  423ef0:	test   al,al
  423ef2:	je     423f4f <isspace@plt+0x2063f>
  423ef4:	mov    rdi,rbx
  423ef7:	call   42a220 <isspace@plt+0x26910>
  423efc:	mov    rax,QWORD PTR [rbx+0x9a0]
  423f03:	mov    eax,DWORD PTR [rax]
  423f05:	and    eax,0xfffffffe
  423f08:	cmp    eax,0x4
  423f0b:	jne    423f56 <isspace@plt+0x20646>
  423f0d:	mov    BYTE PTR [rbx+0x828],0x0
  423f14:	mov    rdi,QWORD PTR [rbx]
  423f17:	call   QWORD PTR [rdi+0x90]
  423f1d:	cmp    DWORD PTR [rsp+0x20],0xffffffff
  423f22:	je     423fb3 <isspace@plt+0x206a3>
  423f28:	add    rbx,0x829
  423f2f:	lea    rcx,[rsp+0x20]
  423f34:	mov    edx,0x40
  423f39:	mov    r8d,0xc
  423f3f:	mov    rdi,rax
  423f42:	mov    rsi,rbx
  423f45:	call   403690 <termkey_strfkey@plt>
  423f4a:	jmp    424007 <isspace@plt+0x206f7>
  423f4f:	xor    ebx,ebx
  423f51:	jmp    424007 <isspace@plt+0x206f7>
  423f56:	cmp    BYTE PTR [rbx+0x828],0x0
  423f5d:	mov    BYTE PTR [rbx+0x828],0x0
  423f64:	jne    423f14 <isspace@plt+0x20604>
  423f66:	mov    eax,DWORD PTR [rsp+0x20]
  423f6a:	test   eax,eax
  423f6c:	jne    423f14 <isspace@plt+0x20604>
  423f6e:	mov    rdi,QWORD PTR [rbx+0x820]
  423f75:	lea    r14,[rsp+0x34]
  423f7a:	mov    rsi,r14
  423f7d:	call   408590 <isspace@plt+0x4c80>
  423f82:	test   rax,rax
  423f85:	je     423f14 <isspace@plt+0x20604>
  423f87:	mov    r15,rax
  423f8a:	mov    rdi,rax
  423f8d:	call   403250 <strlen@plt>
  423f92:	add    rax,0x1
  423f96:	cmp    rax,0x7
  423f9a:	ja     423f14 <isspace@plt+0x20604>
  423fa0:	mov    rdi,r14
  423fa3:	mov    rsi,r15
  423fa6:	mov    rdx,rax
  423fa9:	call   4034e0 <memcpy@plt>
  423fae:	jmp    423f14 <isspace@plt+0x20604>
  423fb3:	lea    rdx,[rsp+0x50]
  423fb8:	lea    rsi,[rsp+0x20]
  423fbd:	lea    rcx,[rsp+0x18]
  423fc2:	lea    r8,[rsp+0x10]
  423fc7:	mov    rdi,rax
  423fca:	call   403530 <termkey_interpret_csi@plt>
  423fcf:	cmp    eax,0x1
  423fd2:	jne    423ffc <isspace@plt+0x206ec>
  423fd4:	mov    rax,QWORD PTR [rsp+0x10]
  423fd9:	mov    QWORD PTR [rsp+0x40],rax
  423fde:	mov    rax,QWORD PTR [rsp+0x18]
  423fe3:	mov    QWORD PTR [rsp+0x48],rax
  423fe8:	lea    rdx,[rsp+0x40]
  423fed:	mov    esi,0xb
  423ff2:	xor    eax,eax
  423ff4:	mov    rdi,rbx
  423ff7:	call   420610 <isspace@plt+0x1cd00>
  423ffc:	mov    rdi,rbx
  423fff:	call   423eb0 <isspace@plt+0x205a0>
  424004:	mov    rbx,rax
  424007:	mov    rax,QWORD PTR fs:0x28
  424010:	cmp    rax,QWORD PTR [rsp+0xd0]
  424018:	jne    424028 <isspace@plt+0x20718>
  42401a:	mov    rax,rbx
  42401d:	lea    rsp,[rbp-0x18]
  424021:	pop    rbx
  424022:	pop    r14
  424024:	pop    r15
  424026:	pop    rbp
  424027:	ret    
  424028:	call   403280 <__stack_chk_fail@plt>
  42402d:	nop    DWORD PTR [rax]
  424030:	push   rbp
  424031:	push   r15
  424033:	push   r14
  424035:	push   r13
  424037:	push   r12
  424039:	push   rbx
  42403a:	sub    rsp,0x78
  42403e:	mov    QWORD PTR [rsp+0x8],rdi
  424043:	mov    rax,QWORD PTR fs:0x28
  42404c:	mov    QWORD PTR [rsp+0x70],rax
  424051:	test   rsi,rsi
  424054:	je     424530 <isspace@plt+0x20c20>
  42405a:	mov    r15,rdx
  42405d:	mov    rbx,rsi
  424060:	test   cl,cl
  424062:	je     42407d <isspace@plt+0x2076d>
  424064:	mov    rax,QWORD PTR [rsp+0x8]
  424069:	mov    rdi,QWORD PTR [rax+0x7c0]
  424070:	test   rdi,rdi
  424073:	je     42407d <isspace@plt+0x2076d>
  424075:	mov    rsi,rbx
  424078:	call   404960 <isspace@plt+0x1050>
  42407d:	mov    rax,QWORD PTR [rsp+0x8]
  424082:	mov    rdi,QWORD PTR [rax+0x7d8]
  424089:	test   rdi,rdi
  42408c:	je     424096 <isspace@plt+0x20786>
  42408e:	mov    rsi,rbx
  424091:	call   404960 <isspace@plt+0x1050>
  424096:	mov    rax,QWORD PTR [rsp+0x8]
  42409b:	lea    r14,[rax+0x8f0]
  4240a2:	mov    rdi,r14
  4240a5:	mov    rsi,rbx
  4240a8:	call   404960 <isspace@plt+0x1050>
  4240ad:	test   al,al
  4240af:	je     424530 <isspace@plt+0x20c20>
  4240b5:	mov    rax,QWORD PTR [r14]
  4240b8:	add    r15,rax
  4240bb:	je     424518 <isspace@plt+0x20c08>
  4240c1:	cmp    BYTE PTR [r15],0x0
  4240c5:	je     42451c <isspace@plt+0x20c0c>
  4240cb:	mov    QWORD PTR [rsp+0x20],r14
  4240d0:	mov    rax,QWORD PTR [rsp+0x8]
  4240d5:	lea    rcx,[rax+0x8a9]
  4240dc:	mov    QWORD PTR [rsp+0x38],rcx
  4240e1:	lea    rcx,[rax+0x869]
  4240e8:	mov    QWORD PTR [rsp+0x30],rcx
  4240ed:	xor    ecx,ecx
  4240ef:	mov    QWORD PTR [rsp+0x10],rcx
  4240f4:	mov    r13,r15
  4240f7:	mov    rsi,r15
  4240fa:	mov    QWORD PTR [rsp+0x28],r15
  4240ff:	mov    rbp,rax
  424102:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42410c:	nop    DWORD PTR [rax+0x0]
  424110:	mov    rdi,rbp
  424113:	mov    QWORD PTR [rsp+0x18],rsi
  424118:	call   423650 <isspace@plt+0x1fd40>
  42411d:	test   rax,rax
  424120:	je     42454f <isspace@plt+0x20c3f>
  424126:	mov    r12,rax
  424129:	mov    al,BYTE PTR [rax]
  42412b:	mov    BYTE PTR [r12],0x0
  424130:	mov    r14,QWORD PTR [rbp+0x9a0]
  424137:	test   r14,r14
  42413a:	je     424330 <isspace@plt+0x20a20>
  424140:	mov    BYTE PTR [rsp+0x7],al
  424144:	mov    rax,QWORD PTR [rsp+0x18]
  424149:	sub    rax,r13
  42414c:	mov    QWORD PTR [rsp+0x40],rax
  424151:	xor    eax,eax
  424153:	mov    QWORD PTR [rsp+0x48],r12
  424158:	nop    DWORD PTR [rax+rax*1+0x0]
  424160:	test   al,0x1
  424162:	jne    4243b0 <isspace@plt+0x20aa0>
  424168:	mov    rcx,QWORD PTR [rbp+0x30]
  42416c:	mov    rbx,r14
  42416f:	test   rcx,rcx
  424172:	je     42418a <isspace@plt+0x2087a>
  424174:	mov    edx,DWORD PTR [r14]
  424177:	lea    rdx,[rdx+rdx*2]
  42417b:	shl    rdx,0x5
  42417f:	lea    rbx,[rcx+rdx*1]
  424183:	add    rbx,0x88
  42418a:	mov    rdi,QWORD PTR [rbx+0x10]
  42418e:	test   rdi,rdi
  424191:	je     42424c <isspace@plt+0x2093c>
  424197:	mov    rsi,r13
  42419a:	call   408590 <isspace@plt+0x4c80>
  42419f:	mov    rsi,r13
  4241a2:	mov    r13,rax
  4241a5:	test   rax,rax
  4241a8:	setne  al
  4241ab:	cmp    r12,r15
  4241ae:	seta   cl
  4241b1:	test   cl,al
  4241b3:	mov    rax,QWORD PTR [rsp+0x10]
  4241b8:	cmovne rax,r13
  4241bc:	mov    QWORD PTR [rsp+0x10],rax
  4241c1:	cmovne r15,r12
  4241c5:	mov    QWORD PTR [rsp+0x50],r15
  4241ca:	mov    rdi,QWORD PTR [rbx+0x10]
  4241ce:	mov    r12,rsi
  4241d1:	call   4087b0 <isspace@plt+0x4ea0>
  4241d6:	mov    rbx,rax
  4241d9:	mov    r15,rbp
  4241dc:	mov    QWORD PTR [rsp+0x58],rbp
  4241e1:	mov    rax,QWORD PTR [rsp+0x40]
  4241e6:	mov    QWORD PTR [rsp+0x60],rax
  4241eb:	mov    DWORD PTR [rsp+0x68],0x0
  4241f3:	mov    rdi,QWORD PTR [rsp+0x18]
  4241f8:	lea    rsi,[rip+0xbbd1]        # 42fdd0 <isspace@plt+0x2c4c0>
  4241ff:	call   403480 <strcmp@plt>
  424204:	test   eax,eax
  424206:	sete   BYTE PTR [rsp+0x6c]
  42420b:	mov    rdi,rbx
  42420e:	lea    rsi,[rip+0x1feb]        # 426200 <isspace@plt+0x228f0>
  424215:	lea    rdx,[rsp+0x58]
  42421a:	call   4088b0 <isspace@plt+0x4fa0>
  42421f:	mov    ecx,DWORD PTR [rsp+0x68]
  424223:	test   ecx,ecx
  424225:	jle    42422e <isspace@plt+0x2091e>
  424227:	mov    al,0x1
  424229:	test   r13,r13
  42422c:	je     42423c <isspace@plt+0x2092c>
  42422e:	test   r13,r13
  424231:	setne  dl
  424234:	cmp    ecx,0x1
  424237:	setg   al
  42423a:	and    al,dl
  42423c:	mov    r13,r12
  42423f:	mov    rbp,r15
  424242:	mov    r15,QWORD PTR [rsp+0x50]
  424247:	mov    r12,QWORD PTR [rsp+0x48]
  42424c:	test   al,0x1
  42424e:	sete   cl
  424251:	jne    42430b <isspace@plt+0x209fb>
  424257:	mov    rdi,QWORD PTR [r14+0x10]
  42425b:	test   rdi,rdi
  42425e:	je     424306 <isspace@plt+0x209f6>
  424264:	mov    rsi,r13
  424267:	call   408590 <isspace@plt+0x4c80>
  42426c:	mov    rbx,rax
  42426f:	test   rax,rax
  424272:	setne  al
  424275:	cmp    r12,r15
  424278:	seta   cl
  42427b:	test   cl,al
  42427d:	mov    rax,QWORD PTR [rsp+0x10]
  424282:	cmovne rax,rbx
  424286:	mov    QWORD PTR [rsp+0x10],rax
  42428b:	cmovne r15,r12
  42428f:	mov    rdi,QWORD PTR [r14+0x10]
  424293:	mov    rsi,r13
  424296:	call   4087b0 <isspace@plt+0x4ea0>
  42429b:	mov    rcx,rbp
  42429e:	mov    rbp,rax
  4242a1:	mov    QWORD PTR [rsp+0x58],rcx
  4242a6:	mov    rax,QWORD PTR [rsp+0x40]
  4242ab:	mov    QWORD PTR [rsp+0x60],rax
  4242b0:	mov    DWORD PTR [rsp+0x68],0x0
  4242b8:	mov    rdi,QWORD PTR [rsp+0x18]
  4242bd:	lea    rsi,[rip+0xbb0c]        # 42fdd0 <isspace@plt+0x2c4c0>
  4242c4:	call   403480 <strcmp@plt>
  4242c9:	test   eax,eax
  4242cb:	sete   BYTE PTR [rsp+0x6c]
  4242d0:	mov    rdi,rbp
  4242d3:	lea    rsi,[rip+0x1f26]        # 426200 <isspace@plt+0x228f0>
  4242da:	lea    rdx,[rsp+0x58]
  4242df:	call   4088b0 <isspace@plt+0x4fa0>
  4242e4:	mov    ecx,DWORD PTR [rsp+0x68]
  4242e8:	test   ecx,ecx
  4242ea:	jle    4242f3 <isspace@plt+0x209e3>
  4242ec:	mov    al,0x1
  4242ee:	test   rbx,rbx
  4242f1:	je     424301 <isspace@plt+0x209f1>
  4242f3:	test   rbx,rbx
  4242f6:	setne  dl
  4242f9:	cmp    ecx,0x1
  4242fc:	setg   al
  4242ff:	and    al,dl
  424301:	mov    rbp,QWORD PTR [rsp+0x8]
  424306:	test   al,0x1
  424308:	sete   cl
  42430b:	test   cl,cl
  42430d:	je     42431c <isspace@plt+0x20a0c>
  42430f:	mov    r14,QWORD PTR [r14+0x8]
  424313:	test   r14,r14
  424316:	jne    424160 <isspace@plt+0x20850>
  42431c:	mov    bl,BYTE PTR [rsp+0x7]
  424320:	mov    BYTE PTR [r12],bl
  424324:	test   cl,cl
  424326:	jne    424334 <isspace@plt+0x20a24>
  424328:	mov    rax,r13
  42432b:	jmp    4244fb <isspace@plt+0x20beb>
  424330:	mov    BYTE PTR [r12],al
  424334:	mov    rax,QWORD PTR [rsp+0x10]
  424339:	test   rax,rax
  42433c:	je     4243c0 <isspace@plt+0x20ab0>
  424342:	cmp    QWORD PTR [rax+0x8],0x0
  424347:	je     424488 <isspace@plt+0x20b78>
  42434d:	mov    rbx,r15
  424350:	sub    rbx,r13
  424353:	mov    rdi,QWORD PTR [rsp+0x38]
  424358:	mov    r14,QWORD PTR [rsp+0x30]
  42435d:	mov    rsi,r14
  424360:	mov    r12,rax
  424363:	call   403170 <strcpy@plt>
  424368:	mov    rdi,r14
  42436b:	mov    rsi,r13
  42436e:	mov    rdx,rbx
  424371:	call   403150 <strncpy@plt>
  424376:	mov    BYTE PTR [rbp+rbx*1+0x869],0x0
  42437e:	mov    rax,QWORD PTR [r12+0x8]
  424383:	lea    rdx,[rax+0x18]
  424387:	mov    rdi,rbp
  42438a:	mov    rsi,r15
  42438d:	call   QWORD PTR [rax+0x10]
  424390:	mov    r12,rax
  424393:	mov    rcx,rax
  424396:	mov    r15,rax
  424399:	mov    rdx,r13
  42439c:	test   rax,rax
  42439f:	jne    4244ec <isspace@plt+0x20bdc>
  4243a5:	jmp    424509 <isspace@plt+0x20bf9>
  4243aa:	nop    WORD PTR [rax+rax*1+0x0]
  4243b0:	mov    bl,BYTE PTR [rsp+0x7]
  4243b4:	mov    BYTE PTR [r12],bl
  4243b8:	mov    rax,r13
  4243bb:	jmp    4244fb <isspace@plt+0x20beb>
  4243c0:	cmp    BYTE PTR [r13+0x0],0x3c
  4243c5:	jne    42444b <isspace@plt+0x20b3b>
  4243cb:	cmp    BYTE PTR [r12-0x1],0x3e
  4243d1:	jne    42444b <isspace@plt+0x20b3b>
  4243d3:	mov    BYTE PTR [r12-0x1],0x0
  4243d9:	mov    rdi,QWORD PTR [rbp+0xaa0]
  4243e0:	lea    rsi,[r13+0x1]
  4243e4:	call   408590 <isspace@plt+0x4c80>
  4243e9:	mov    BYTE PTR [r12-0x1],0x3e
  4243ef:	test   rax,rax
  4243f2:	je     42444b <isspace@plt+0x20b3b>
  4243f4:	mov    r14,rax
  4243f7:	mov    rbp,r12
  4243fa:	sub    rbp,r13
  4243fd:	mov    rdi,QWORD PTR [rsp+0x38]
  424402:	mov    rbx,QWORD PTR [rsp+0x30]
  424407:	mov    rsi,rbx
  42440a:	call   403170 <strcpy@plt>
  42440f:	mov    rdi,rbx
  424412:	mov    rsi,r13
  424415:	mov    rdx,rbp
  424418:	call   403150 <strncpy@plt>
  42441d:	mov    rax,QWORD PTR [rsp+0x8]
  424422:	mov    BYTE PTR [rax+rbp*1+0x869],0x0
  42442a:	mov    rbp,QWORD PTR [rsp+0x8]
  42442f:	mov    rdx,r14
  424432:	add    rdx,0x18
  424436:	mov    rdi,rbp
  424439:	mov    rsi,r12
  42443c:	call   QWORD PTR [r14+0x10]
  424440:	mov    r12,rax
  424443:	mov    rcx,rax
  424446:	jmp    424399 <isspace@plt+0x20a89>
  42444b:	mov    rax,QWORD PTR [rbp+0x9a0]
  424452:	cmp    QWORD PTR [rax+0x40],0x0
  424457:	je     4244c8 <isspace@plt+0x20bb8>
  424459:	mov    rdi,rbp
  42445c:	mov    rsi,r13
  42445f:	call   423650 <isspace@plt+0x1fd40>
  424464:	mov    r12,rax
  424467:	mov    rax,QWORD PTR [rbp+0x9a0]
  42446e:	mov    rdx,r12
  424471:	sub    rdx,r13
  424474:	mov    rdi,rbp
  424477:	mov    rsi,r13
  42447a:	call   QWORD PTR [rax+0x40]
  42447d:	mov    r13,r15
  424480:	mov    rsi,r12
  424483:	mov    rcx,r12
  424486:	jmp    4244d8 <isspace@plt+0x20bc8>
  424488:	cmp    QWORD PTR [rax+0x10],0x0
  42448d:	je     4244d0 <isspace@plt+0x20bc0>
  42448f:	mov    rsi,r13
  424492:	mov    rbx,QWORD PTR [rsp+0x20]
  424497:	sub    rsi,QWORD PTR [rbx]
  42449a:	sub    r15,r13
  42449d:	mov    rdi,rbx
  4244a0:	mov    rdx,r15
  4244a3:	mov    r14,rax
  4244a6:	call   404720 <isspace@plt+0xe10>
  4244ab:	mov    rsi,r13
  4244ae:	sub    rsi,QWORD PTR [rbx]
  4244b1:	mov    rdx,QWORD PTR [r14+0x10]
  4244b5:	mov    rdi,rbx
  4244b8:	call   4047a0 <isspace@plt+0xe90>
  4244bd:	mov    r12,r13
  4244c0:	mov    rsi,r13
  4244c3:	mov    rcx,r13
  4244c6:	jmp    4244d8 <isspace@plt+0x20bc8>
  4244c8:	mov    rcx,r12
  4244cb:	mov    rax,r12
  4244ce:	jmp    4244ec <isspace@plt+0x20bdc>
  4244d0:	mov    rcx,r13
  4244d3:	mov    rsi,QWORD PTR [rsp+0x18]
  4244d8:	mov    rax,r12
  4244db:	mov    r12,rcx
  4244de:	mov    r15,r13
  4244e1:	mov    rdx,rax
  4244e4:	test   rsi,rsi
  4244e7:	mov    rcx,rsi
  4244ea:	je     424509 <isspace@plt+0x20bf9>
  4244ec:	mov    bl,BYTE PTR [rcx]
  4244ee:	mov    r13,r12
  4244f1:	mov    r12,rcx
  4244f4:	xor    ecx,ecx
  4244f6:	mov    QWORD PTR [rsp+0x10],rcx
  4244fb:	mov    rsi,r12
  4244fe:	mov    rdx,rax
  424501:	test   bl,bl
  424503:	jne    424110 <isspace@plt+0x20800>
  424509:	mov    r14,QWORD PTR [rsp+0x20]
  42450e:	mov    rax,QWORD PTR [r14]
  424511:	mov    r15,QWORD PTR [rsp+0x28]
  424516:	jmp    42451f <isspace@plt+0x20c0f>
  424518:	xor    edx,edx
  42451a:	jmp    42451f <isspace@plt+0x20c0f>
  42451c:	mov    rdx,r15
  42451f:	sub    rdx,r15
  424522:	sub    r15,rax
  424525:	mov    rdi,r14
  424528:	mov    rsi,r15
  42452b:	call   404720 <isspace@plt+0xe10>
  424530:	mov    rax,QWORD PTR fs:0x28
  424539:	cmp    rax,QWORD PTR [rsp+0x70]
  42453e:	jne    424570 <isspace@plt+0x20c60>
  424540:	add    rsp,0x78
  424544:	pop    rbx
  424545:	pop    r12
  424547:	pop    r13
  424549:	pop    r14
  42454b:	pop    r15
  42454d:	pop    rbp
  42454e:	ret    
  42454f:	mov    rdi,QWORD PTR [rsp+0x28]
  424554:	mov    rbx,rdi
  424557:	mov    rbp,QWORD PTR [rsp+0x20]
  42455c:	sub    rbx,QWORD PTR [rbp+0x0]
  424560:	call   403250 <strlen@plt>
  424565:	mov    rdi,rbp
  424568:	mov    rsi,rbx
  42456b:	mov    rdx,rax
  42456e:	jmp    42452b <isspace@plt+0x20c1b>
  424570:	call   403280 <__stack_chk_fail@plt>
  424575:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42457f:	nop
  424580:	push   rax
  424581:	mov    rax,QWORD PTR fs:0x28
  42458a:	mov    QWORD PTR [rsp],rax
  42458e:	cmp    esi,0x4b
  424591:	jne    42459c <isspace@plt+0x20c8c>
  424593:	mov    rax,QWORD PTR [rdi+0x7c8]
  42459a:	jmp    4245c3 <isspace@plt+0x20cb3>
  42459c:	lea    eax,[rsi-0x31]
  42459f:	cmp    eax,0x1a
  4245a2:	cmovb  esi,eax
  4245a5:	cmp    esi,0x2f
  4245a8:	ja     4245c1 <isspace@plt+0x20cb1>
  4245aa:	mov    eax,esi
  4245ac:	lea    rax,[rax+rax*4]
  4245b0:	lea    rdi,[rdi+rax*8]
  4245b4:	add    rdi,0x40
  4245b8:	xor    esi,esi
  4245ba:	call   403d20 <isspace@plt+0x410>
  4245bf:	jmp    4245c3 <isspace@plt+0x20cb3>
  4245c1:	xor    eax,eax
  4245c3:	mov    rcx,QWORD PTR fs:0x28
  4245cc:	cmp    rcx,QWORD PTR [rsp]
  4245d0:	jne    4245d4 <isspace@plt+0x20cc4>
  4245d2:	pop    rcx
  4245d3:	ret    
  4245d4:	call   403280 <__stack_chk_fail@plt>
  4245d9:	nop    DWORD PTR [rax+0x0]
  4245e0:	push   rbx
  4245e1:	sub    rsp,0x10
  4245e5:	mov    rax,QWORD PTR fs:0x28
  4245ee:	mov    QWORD PTR [rsp+0x8],rax
  4245f3:	cmp    QWORD PTR [rdi+0x7d8],0x0
  4245fb:	jne    42461d <isspace@plt+0x20d0d>
  4245fd:	mov    rbx,rdi
  424600:	lea    rdi,[rdi+0x770]
  424607:	xor    esi,esi
  424609:	call   403d20 <isspace@plt+0x410>
  42460e:	mov    QWORD PTR [rbx+0x7d8],rax
  424615:	mov    rdi,rax
  424618:	call   4045a0 <isspace@plt+0xc90>
  42461d:	mov    rax,QWORD PTR fs:0x28
  424626:	cmp    rax,QWORD PTR [rsp+0x8]
  42462b:	jne    424633 <isspace@plt+0x20d23>
  42462d:	add    rsp,0x10
  424631:	pop    rbx
  424632:	ret    
  424633:	call   403280 <__stack_chk_fail@plt>
  424638:	nop    DWORD PTR [rax+rax*1+0x0]
  424640:	push   r14
  424642:	push   rbx
  424643:	push   rax
  424644:	mov    rax,QWORD PTR fs:0x28
  42464d:	mov    QWORD PTR [rsp],rax
  424651:	cmp    QWORD PTR [rdi+0x7d8],0x0
  424659:	je     424697 <isspace@plt+0x20d87>
  42465b:	mov    rbx,rdi
  42465e:	lea    rdi,[rdi+0x298]
  424665:	xor    esi,esi
  424667:	call   403d20 <isspace@plt+0x410>
  42466c:	mov    r14,rax
  42466f:	mov    rax,QWORD PTR [rbx+0x7d8]
  424676:	mov    rsi,QWORD PTR [rax]
  424679:	mov    rdx,QWORD PTR [rax+0x8]
  42467d:	mov    rdi,r14
  424680:	call   4045d0 <isspace@plt+0xcc0>
  424685:	mov    QWORD PTR [rbx+0x980],r14
  42468c:	mov    QWORD PTR [rbx+0x7d8],0x0
  424697:	mov    rax,QWORD PTR fs:0x28
  4246a0:	cmp    rax,QWORD PTR [rsp]
  4246a4:	jne    4246ae <isspace@plt+0x20d9e>
  4246a6:	add    rsp,0x8
  4246aa:	pop    rbx
  4246ab:	pop    r14
  4246ad:	ret    
  4246ae:	call   403280 <__stack_chk_fail@plt>
  4246b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4246bd:	nop    DWORD PTR [rax]
  4246c0:	push   r15
  4246c2:	push   r14
  4246c4:	push   rbx
  4246c5:	sub    rsp,0x10
  4246c9:	mov    ebx,esi
  4246cb:	mov    r14,rdi
  4246ce:	mov    rax,QWORD PTR fs:0x28
  4246d7:	mov    QWORD PTR [rsp+0x8],rax
  4246dc:	cmp    esi,0x4b
  4246df:	jne    4246ea <isspace@plt+0x20dda>
  4246e1:	mov    r15,QWORD PTR [r14+0x7c8]
  4246e8:	jmp    424710 <isspace@plt+0x20e00>
  4246ea:	lea    eax,[rbx-0x31]
  4246ed:	cmp    eax,0x1a
  4246f0:	cmovae eax,ebx
  4246f3:	cmp    eax,0x2f
  4246f6:	ja     424751 <isspace@plt+0x20e41>
  4246f8:	mov    eax,eax
  4246fa:	lea    rax,[rax+rax*4]
  4246fe:	lea    rdi,[r14+rax*8]
  424702:	add    rdi,0x40
  424706:	xor    esi,esi
  424708:	call   403d20 <isspace@plt+0x410>
  42470d:	mov    r15,rax
  424710:	xor    eax,eax
  424712:	test   r15,r15
  424715:	je     424753 <isspace@plt+0x20e43>
  424717:	mov    rcx,QWORD PTR [r14+0x7c0]
  42471e:	test   rcx,rcx
  424721:	jne    424753 <isspace@plt+0x20e43>
  424723:	add    ebx,0xffffffcf
  424726:	cmp    ebx,0x1a
  424729:	jb     424733 <isspace@plt+0x20e23>
  42472b:	mov    rdi,r15
  42472e:	call   4045a0 <isspace@plt+0xc90>
  424733:	mov    QWORD PTR [r14+0x7c0],r15
  42473a:	mov    rdx,QWORD PTR [r14+0x30]
  42473e:	mov    esi,0xa
  424743:	xor    eax,eax
  424745:	mov    rdi,r14
  424748:	call   420610 <isspace@plt+0x1cd00>
  42474d:	mov    al,0x1
  42474f:	jmp    424753 <isspace@plt+0x20e43>
  424751:	xor    eax,eax
  424753:	mov    rcx,QWORD PTR fs:0x28
  42475c:	cmp    rcx,QWORD PTR [rsp+0x8]
  424761:	jne    42476d <isspace@plt+0x20e5d>
  424763:	add    rsp,0x10
  424767:	pop    rbx
  424768:	pop    r14
  42476a:	pop    r15
  42476c:	ret    
  42476d:	call   403280 <__stack_chk_fail@plt>
  424772:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42477c:	nop    DWORD PTR [rax+0x0]
  424780:	push   rax
  424781:	mov    rax,QWORD PTR fs:0x28
  42478a:	mov    QWORD PTR [rsp],rax
  42478e:	mov    rax,QWORD PTR [rdi+0x7c0]
  424795:	test   rax,rax
  424798:	je     4247e1 <isspace@plt+0x20ed1>
  42479a:	mov    rcx,QWORD PTR [rax+0x8]
  42479e:	cmp    rcx,0x2
  4247a2:	jb     4247bb <isspace@plt+0x20eab>
  4247a4:	lea    rdx,[rcx-0x1]
  4247a8:	mov    QWORD PTR [rax+0x8],rdx
  4247ac:	mov    rax,QWORD PTR [rax]
  4247af:	mov    BYTE PTR [rax+rcx*1-0x2],0x0
  4247b4:	mov    rax,QWORD PTR [rdi+0x7c0]
  4247bb:	mov    QWORD PTR [rdi+0x7c8],rax
  4247c2:	mov    QWORD PTR [rdi+0x7c0],0x0
  4247cd:	mov    rdx,QWORD PTR [rdi+0x30]
  4247d1:	mov    esi,0xa
  4247d6:	xor    eax,eax
  4247d8:	call   420610 <isspace@plt+0x1cd00>
  4247dd:	mov    al,0x1
  4247df:	jmp    4247e3 <isspace@plt+0x20ed3>
  4247e1:	xor    eax,eax
  4247e3:	mov    rcx,QWORD PTR fs:0x28
  4247ec:	cmp    rcx,QWORD PTR [rsp]
  4247f0:	jne    4247f4 <isspace@plt+0x20ee4>
  4247f2:	pop    rcx
  4247f3:	ret    
  4247f4:	call   403280 <__stack_chk_fail@plt>
  4247f9:	nop    DWORD PTR [rax+0x0]
  424800:	push   rax
  424801:	mov    rax,QWORD PTR fs:0x28
  42480a:	mov    QWORD PTR [rsp],rax
  42480e:	cmp    QWORD PTR [rdi+0x7c0],0x0
  424816:	setne  al
  424819:	mov    rcx,QWORD PTR fs:0x28
  424822:	cmp    rcx,QWORD PTR [rsp]
  424826:	jne    42482a <isspace@plt+0x20f1a>
  424828:	pop    rcx
  424829:	ret    
  42482a:	call   403280 <__stack_chk_fail@plt>
  42482f:	nop
  424830:	push   rbp
  424831:	push   r14
  424833:	push   rbx
  424834:	sub    rsp,0x10
  424838:	mov    r14,rdi
  42483b:	mov    rax,QWORD PTR fs:0x28
  424844:	mov    QWORD PTR [rsp+0x8],rax
  424849:	cmp    esi,0x4b
  42484c:	je     4248a2 <isspace@plt+0x20f92>
  42484e:	cmp    esi,0x11
  424851:	je     42486d <isspace@plt+0x20f5d>
  424853:	cmp    esi,0x10
  424856:	jne    424949 <isspace@plt+0x21039>
  42485c:	mov    esi,0x35
  424861:	xor    eax,eax
  424863:	mov    rdi,r14
  424866:	call   428140 <isspace@plt+0x24830>
  42486b:	jmp    424889 <isspace@plt+0x20f79>
  42486d:	lea    rsi,[r14+0x2e8]
  424874:	xor    edx,edx
  424876:	mov    rdi,r14
  424879:	call   42aa90 <isspace@plt+0x27180>
  42487e:	mov    rdi,r14
  424881:	mov    rsi,rax
  424884:	call   4249a0 <isspace@plt+0x21090>
  424889:	mov    rcx,QWORD PTR fs:0x28
  424892:	cmp    rcx,QWORD PTR [rsp+0x8]
  424897:	je     42498c <isspace@plt+0x2107c>
  42489d:	jmp    424998 <isspace@plt+0x21088>
  4248a2:	mov    rbx,QWORD PTR [r14+0x7c8]
  4248a9:	test   rbx,rbx
  4248ac:	je     424978 <isspace@plt+0x21068>
  4248b2:	cmp    rbx,QWORD PTR [r14+0x7c0]
  4248b9:	je     424978 <isspace@plt+0x21068>
  4248bf:	mov    eax,DWORD PTR [r14+0x910]
  4248c6:	cmp    eax,0xffffffff
  4248c9:	mov    ebp,0x1
  4248ce:	vxorps xmm0,xmm0,xmm0
  4248d2:	vmovups YMMWORD PTR [r14+0x910],ymm0
  4248db:	cmovne ebp,eax
  4248de:	vmovups YMMWORD PTR [r14+0x930],ymm0
  4248e7:	mov    QWORD PTR [r14+0x950],0x0
  4248f2:	mov    DWORD PTR [r14+0x910],0xffffffff
  4248fd:	test   ebp,ebp
  4248ff:	jle    424923 <isspace@plt+0x21013>
  424901:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42490b:	nop    DWORD PTR [rax+rax*1+0x0]
  424910:	mov    rdi,r14
  424913:	mov    rsi,rbx
  424916:	vzeroupper 
  424919:	call   424ad0 <isspace@plt+0x211c0>
  42491e:	add    ebp,0xffffffff
  424921:	jne    424910 <isspace@plt+0x21000>
  424923:	mov    rax,QWORD PTR [r14+0x30]
  424927:	mov    bl,0x1
  424929:	test   rax,rax
  42492c:	je     42497a <isspace@plt+0x2106a>
  42492e:	cmp    QWORD PTR [r14+0x7d0],0x0
  424936:	jne    42497a <isspace@plt+0x2106a>
  424938:	mov    rax,QWORD PTR [rax+0x10]
  42493c:	mov    rdi,QWORD PTR [rax]
  42493f:	vzeroupper 
  424942:	call   40f820 <isspace@plt+0xbf10>
  424947:	jmp    42497a <isspace@plt+0x2106a>
  424949:	lea    eax,[rsi-0x31]
  42494c:	cmp    eax,0x1a
  42494f:	cmovb  esi,eax
  424952:	cmp    esi,0x2f
  424955:	ja     424978 <isspace@plt+0x21068>
  424957:	mov    eax,esi
  424959:	lea    rax,[rax+rax*4]
  42495d:	lea    rdi,[r14+rax*8]
  424961:	add    rdi,0x40
  424965:	xor    esi,esi
  424967:	call   403d20 <isspace@plt+0x410>
  42496c:	mov    rbx,rax
  42496f:	test   rbx,rbx
  424972:	jne    4248b2 <isspace@plt+0x20fa2>
  424978:	xor    ebx,ebx
  42497a:	mov    rax,QWORD PTR fs:0x28
  424983:	cmp    rax,QWORD PTR [rsp+0x8]
  424988:	jne    424998 <isspace@plt+0x21088>
  42498a:	mov    eax,ebx
  42498c:	add    rsp,0x10
  424990:	pop    rbx
  424991:	pop    r14
  424993:	pop    rbp
  424994:	vzeroupper 
  424997:	ret    
  424998:	vzeroupper 
  42499b:	call   403280 <__stack_chk_fail@plt>
  4249a0:	push   rbp
  4249a1:	push   r14
  4249a3:	push   rbx
  4249a4:	sub    rsp,0x10
  4249a8:	mov    rax,QWORD PTR fs:0x28
  4249b1:	mov    QWORD PTR [rsp+0x8],rax
  4249b6:	test   rsi,rsi
  4249b9:	je     424a5f <isspace@plt+0x2114f>
  4249bf:	mov    r14,rdi
  4249c2:	add    rsi,0xffffffffffffffff
  4249c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249d0:	cmp    BYTE PTR [rsi+0x1],0x3a
  4249d4:	lea    rsi,[rsi+0x1]
  4249d8:	je     4249d0 <isspace@plt+0x210c0>
  4249da:	mov    rdi,rsi
  4249dd:	call   403850 <strdup@plt>
  4249e2:	test   rax,rax
  4249e5:	je     424a64 <isspace@plt+0x21154>
  4249e7:	mov    rbx,rax
  4249ea:	mov    rdi,rax
  4249ed:	call   403250 <strlen@plt>
  4249f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249fc:	nop    DWORD PTR [rax+0x0]
  424a00:	mov    rbp,rax
  424a03:	test   rax,rax
  424a06:	je     424a20 <isspace@plt+0x21110>
  424a08:	call   4038f0 <__ctype_b_loc@plt>
  424a0d:	mov    rcx,QWORD PTR [rax]
  424a10:	lea    rax,[rbp-0x1]
  424a14:	movzx  edx,BYTE PTR [rbx+rbp*1-0x1]
  424a19:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  424a1e:	jne    424a00 <isspace@plt+0x210f0>
  424a20:	mov    BYTE PTR [rbx+rbp*1],0x0
  424a24:	mov    rdi,r14
  424a27:	mov    rsi,rbx
  424a2a:	call   409190 <isspace@plt+0x5880>
  424a2f:	test   eax,eax
  424a31:	sete   bpl
  424a35:	je     424a55 <isspace@plt+0x21145>
  424a37:	mov    edi,eax
  424a39:	call   409150 <isspace@plt+0x5840>
  424a3e:	mov    rcx,rax
  424a41:	lea    rsi,[rip+0xc022]        # 430a6a <isspace@plt+0x2d15a>
  424a48:	xor    eax,eax
  424a4a:	mov    rdi,r14
  424a4d:	mov    rdx,rcx
  424a50:	call   42a150 <isspace@plt+0x26840>
  424a55:	mov    rdi,rbx
  424a58:	call   4030d0 <free@plt>
  424a5d:	jmp    424a66 <isspace@plt+0x21156>
  424a5f:	mov    bpl,0x1
  424a62:	jmp    424a66 <isspace@plt+0x21156>
  424a64:	xor    ebp,ebp
  424a66:	mov    rax,QWORD PTR fs:0x28
  424a6f:	cmp    rax,QWORD PTR [rsp+0x8]
  424a74:	jne    424a81 <isspace@plt+0x21171>
  424a76:	mov    eax,ebp
  424a78:	add    rsp,0x10
  424a7c:	pop    rbx
  424a7d:	pop    r14
  424a7f:	pop    rbp
  424a80:	ret    
  424a81:	call   403280 <__stack_chk_fail@plt>
  424a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424a90:	push   rax
  424a91:	mov    rax,QWORD PTR fs:0x28
  424a9a:	mov    QWORD PTR [rsp],rax
  424a9e:	mov    eax,DWORD PTR [rdi+0x910]
  424aa4:	cmp    eax,0xffffffff
  424aa7:	cmovne esi,eax
  424aaa:	mov    rax,QWORD PTR fs:0x28
  424ab3:	cmp    rax,QWORD PTR [rsp]
  424ab7:	jne    424abd <isspace@plt+0x211ad>
  424ab9:	mov    eax,esi
  424abb:	pop    rcx
  424abc:	ret    
  424abd:	call   403280 <__stack_chk_fail@plt>
  424ac2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424acc:	nop    DWORD PTR [rax+0x0]
  424ad0:	push   rbp
  424ad1:	push   r15
  424ad3:	push   r14
  424ad5:	push   r13
  424ad7:	push   r12
  424ad9:	push   rbx
  424ada:	push   rax
  424adb:	mov    rbx,rsi
  424ade:	mov    r15,rdi
  424ae1:	mov    rax,QWORD PTR fs:0x28
  424aea:	mov    QWORD PTR [rsp],rax
  424aee:	mov    r13,QWORD PTR [rdi+0x7d0]
  424af5:	mov    QWORD PTR [rdi+0x7d0],rsi
  424afc:	lea    rdi,[rdi+0x8f0]
  424b03:	call   404d50 <isspace@plt+0x1440>
  424b08:	mov    r12,QWORD PTR [rbx]
  424b0b:	test   r12,r12
  424b0e:	je     424b74 <isspace@plt+0x21264>
  424b10:	mov    r14,rax
  424b13:	mov    rdi,r15
  424b16:	mov    rsi,r12
  424b19:	call   423650 <isspace@plt+0x1fd40>
  424b1e:	test   rax,rax
  424b21:	je     424b61 <isspace@plt+0x21251>
  424b23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424b2d:	nop    DWORD PTR [rax]
  424b30:	mov    rbx,rax
  424b33:	movzx  ebp,BYTE PTR [rax]
  424b36:	mov    BYTE PTR [rax],0x0
  424b39:	xor    ecx,ecx
  424b3b:	mov    rdi,r15
  424b3e:	mov    rsi,r12
  424b41:	mov    rdx,r14
  424b44:	call   424030 <isspace@plt+0x20720>
  424b49:	mov    BYTE PTR [rbx],bpl
  424b4c:	mov    rdi,r15
  424b4f:	mov    rsi,rbx
  424b52:	call   423650 <isspace@plt+0x1fd40>
  424b57:	mov    r12,rbx
  424b5a:	test   rax,rax
  424b5d:	jne    424b30 <isspace@plt+0x21220>
  424b5f:	jmp    424b64 <isspace@plt+0x21254>
  424b61:	mov    rbx,r12
  424b64:	xor    ecx,ecx
  424b66:	mov    rdi,r15
  424b69:	mov    rsi,rbx
  424b6c:	mov    rdx,r14
  424b6f:	call   424030 <isspace@plt+0x20720>
  424b74:	mov    QWORD PTR [r15+0x7d0],r13
  424b7b:	mov    rax,QWORD PTR fs:0x28
  424b84:	cmp    rax,QWORD PTR [rsp]
  424b88:	jne    424b99 <isspace@plt+0x21289>
  424b8a:	add    rsp,0x8
  424b8e:	pop    rbx
  424b8f:	pop    r12
  424b91:	pop    r13
  424b93:	pop    r14
  424b95:	pop    r15
  424b97:	pop    rbp
  424b98:	ret    
  424b99:	call   403280 <__stack_chk_fail@plt>
  424b9e:	xchg   ax,ax
  424ba0:	push   rbp
  424ba1:	push   r15
  424ba3:	push   r14
  424ba5:	push   r13
  424ba7:	push   r12
  424ba9:	push   rbx
  424baa:	sub    rsp,0x68
  424bae:	mov    rbx,rdi
  424bb1:	mov    rax,QWORD PTR fs:0x28
  424bba:	mov    QWORD PTR [rsp+0x60],rax
  424bbf:	lea    r13,[rdi+0x958]
  424bc6:	mov    rax,QWORD PTR [rdi+0x980]
  424bcd:	mov    QWORD PTR [rsp+0x8],rax
  424bd2:	lea    r12,[rdi+0x910]
  424bd9:	mov    r14d,DWORD PTR [rdi+0x910]
  424be0:	cmp    r14d,0xffffffff
  424be4:	je     424bec <isspace@plt+0x212dc>
  424be6:	mov    DWORD PTR [r13+0x0],r14d
  424bea:	jmp    424bf0 <isspace@plt+0x212e0>
  424bec:	mov    r14d,DWORD PTR [r13+0x0]
  424bf0:	mov    rax,QWORD PTR [r13+0x40]
  424bf4:	mov    QWORD PTR [r12+0x40],rax
  424bf9:	mov    eax,DWORD PTR [r13+0x0]
  424bfd:	vmovups xmm0,XMMWORD PTR [r13+0x4]
  424c03:	mov    rcx,QWORD PTR [r13+0x14]
  424c07:	mov    edx,DWORD PTR [r13+0x1c]
  424c0b:	vmovups ymm1,YMMWORD PTR [r13+0x20]
  424c11:	vmovups YMMWORD PTR [r12+0x20],ymm1
  424c18:	mov    DWORD PTR [r12],eax
  424c1c:	vmovups XMMWORD PTR [r12+0x4],xmm0
  424c23:	mov    QWORD PTR [r12+0x14],rcx
  424c28:	mov    DWORD PTR [r12+0x1c],edx
  424c2d:	mov    esi,0x1
  424c32:	mov    rdi,rbx
  424c35:	vzeroupper 
  424c38:	call   427780 <isspace@plt+0x23e70>
  424c3d:	mov    rdi,rbx
  424c40:	call   422aa0 <isspace@plt+0x1f190>
  424c45:	cmp    QWORD PTR [rsp+0x8],0x0
  424c4b:	je     424d2f <isspace@plt+0x2141f>
  424c51:	mov    r15,QWORD PTR [rbx+0x9a0]
  424c58:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  424c5e:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  424c64:	mov    rdx,QWORD PTR [rbx+0x968]
  424c6b:	vmovups ymm0,YMMWORD PTR [rbx+0x980]
  424c73:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  424c79:	vmovups ymm0,YMMWORD PTR [rbx+0x970]
  424c81:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  424c87:	lea    rax,[rip+0x1d5f2]        # 442280 <isspace@plt+0x3e970>
  424c8e:	lea    rcx,[rax+0x10]
  424c92:	cmp    rdx,rcx
  424c95:	mov    ecx,0x1
  424c9a:	mov    ebp,r14d
  424c9d:	cmove  ebp,ecx
  424ca0:	test   r14d,r14d
  424ca3:	cmovle ebp,ecx
  424ca6:	add    rax,0x70
  424caa:	mov    QWORD PTR [rsp+0x18],rdx
  424caf:	cmp    rdx,rax
  424cb2:	jne    424cbc <isspace@plt+0x213ac>
  424cb4:	mov    DWORD PTR [r13+0x0],0x1
  424cbc:	lea    rax,[rbx+0x970]
  424cc3:	mov    QWORD PTR [rsp+0x10],rax
  424cc8:	test   ebp,ebp
  424cca:	jle    424cfd <isspace@plt+0x213ed>
  424ccc:	xor    r14d,r14d
  424ccf:	nop
  424cd0:	cmp    DWORD PTR [rbx+0x9c0],0x0
  424cd7:	jne    424cfd <isspace@plt+0x213ed>
  424cd9:	mov    rdi,rbx
  424cdc:	mov    rsi,r15
  424cdf:	vzeroupper 
  424ce2:	call   4276f0 <isspace@plt+0x23de0>
  424ce7:	mov    rdi,rbx
  424cea:	mov    rsi,QWORD PTR [rsp+0x8]
  424cef:	call   424ad0 <isspace@plt+0x211c0>
  424cf4:	add    r14d,0x1
  424cf8:	cmp    r14d,ebp
  424cfb:	jl     424cd0 <isspace@plt+0x213c0>
  424cfd:	vmovaps xmm0,XMMWORD PTR [rsp+0x50]
  424d03:	vmovups XMMWORD PTR [r13+0x0],xmm0
  424d09:	mov    rax,QWORD PTR [rsp+0x18]
  424d0e:	mov    QWORD PTR [rbx+0x968],rax
  424d15:	vmovups ymm0,YMMWORD PTR [rsp+0x20]
  424d1b:	vmovups ymm1,YMMWORD PTR [rsp+0x30]
  424d21:	mov    rax,QWORD PTR [rsp+0x10]
  424d26:	vmovups YMMWORD PTR [rax+0x10],ymm1
  424d2b:	vmovups YMMWORD PTR [rax],ymm0
  424d2f:	vxorps xmm0,xmm0,xmm0
  424d33:	vmovups YMMWORD PTR [r12+0x20],ymm0
  424d3a:	vmovups YMMWORD PTR [r12],ymm0
  424d40:	mov    QWORD PTR [r12+0x40],0x0
  424d49:	mov    DWORD PTR [rbx+0x910],0xffffffff
  424d53:	mov    rax,QWORD PTR [rbx+0x30]
  424d57:	test   rax,rax
  424d5a:	je     424d75 <isspace@plt+0x21465>
  424d5c:	cmp    QWORD PTR [rbx+0x7d0],0x0
  424d64:	jne    424d75 <isspace@plt+0x21465>
  424d66:	mov    rax,QWORD PTR [rax+0x10]
  424d6a:	mov    rdi,QWORD PTR [rax]
  424d6d:	vzeroupper 
  424d70:	call   40f820 <isspace@plt+0xbf10>
  424d75:	mov    rax,QWORD PTR fs:0x28
  424d7e:	cmp    rax,QWORD PTR [rsp+0x60]
  424d83:	jne    424d97 <isspace@plt+0x21487>
  424d85:	add    rsp,0x68
  424d89:	pop    rbx
  424d8a:	pop    r12
  424d8c:	pop    r13
  424d8e:	pop    r14
  424d90:	pop    r15
  424d92:	pop    rbp
  424d93:	vzeroupper 
  424d96:	ret    
  424d97:	vzeroupper 
  424d9a:	call   403280 <__stack_chk_fail@plt>
  424d9f:	nop
  424da0:	push   rax
  424da1:	mov    rax,QWORD PTR fs:0x28
  424daa:	mov    QWORD PTR [rsp],rax
  424dae:	mov    eax,DWORD PTR [rdi+0x910]
  424db4:	mov    rcx,QWORD PTR fs:0x28
  424dbd:	cmp    rcx,QWORD PTR [rsp]
  424dc1:	jne    424dc5 <isspace@plt+0x214b5>
  424dc3:	pop    rcx
  424dc4:	ret    
  424dc5:	call   403280 <__stack_chk_fail@plt>
  424dca:	nop    WORD PTR [rax+rax*1+0x0]
  424dd0:	push   rax
  424dd1:	mov    rax,QWORD PTR fs:0x28
  424dda:	mov    QWORD PTR [rsp],rax
  424dde:	cmp    esi,0xfffffffe
  424de1:	mov    eax,0xffffffff
  424de6:	cmovg  eax,esi
  424de9:	mov    DWORD PTR [rdi+0x910],eax
  424def:	mov    rax,QWORD PTR fs:0x28
  424df8:	cmp    rax,QWORD PTR [rsp]
  424dfc:	jne    424e00 <isspace@plt+0x214f0>
  424dfe:	pop    rax
  424dff:	ret    
  424e00:	call   403280 <__stack_chk_fail@plt>
  424e05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424e0f:	nop
  424e10:	push   rax
  424e11:	mov    rax,QWORD PTR fs:0x28
  424e1a:	mov    QWORD PTR [rsp],rax
  424e1e:	mov    eax,DWORD PTR [rdi+0x910]
  424e24:	cmp    eax,0xffffffff
  424e27:	cmovne esi,eax
  424e2a:	mov    rax,QWORD PTR fs:0x28
  424e33:	cmp    rax,QWORD PTR [rsp]
  424e37:	jne    424e45 <isspace@plt+0x21535>
  424e39:	shl    rsi,0x20
  424e3d:	mov    rax,rdi
  424e40:	mov    rdx,rsi
  424e43:	pop    rcx
  424e44:	ret    
  424e45:	call   403280 <__stack_chk_fail@plt>
  424e4a:	nop    WORD PTR [rax+rax*1+0x0]
  424e50:	push   rax
  424e51:	mov    rax,QWORD PTR fs:0x28
  424e5a:	mov    QWORD PTR [rsp],rax
  424e5e:	mov    rax,QWORD PTR fs:0x28
  424e67:	cmp    rax,QWORD PTR [rsp]
  424e6b:	jne    424e79 <isspace@plt+0x21569>
  424e6d:	shl    rsi,0x20
  424e71:	mov    rax,rdi
  424e74:	mov    rdx,rsi
  424e77:	pop    rcx
  424e78:	ret    
  424e79:	call   403280 <__stack_chk_fail@plt>
  424e7e:	xchg   ax,ax
  424e80:	push   rax
  424e81:	mov    rax,QWORD PTR fs:0x28
  424e8a:	mov    QWORD PTR [rsp],rax
  424e8e:	mov    rax,QWORD PTR [rdi]
  424e91:	cmp    DWORD PTR [rax+0x9c0],0x0
  424e98:	je     424e9e <isspace@plt+0x2158e>
  424e9a:	xor    eax,eax
  424e9c:	jmp    424ead <isspace@plt+0x2159d>
  424e9e:	mov    eax,DWORD PTR [rdi+0x8]
  424ea1:	lea    ecx,[rax+0x1]
  424ea4:	mov    DWORD PTR [rdi+0x8],ecx
  424ea7:	cmp    eax,DWORD PTR [rdi+0xc]
  424eaa:	setl   al
  424ead:	mov    rcx,QWORD PTR fs:0x28
  424eb6:	cmp    rcx,QWORD PTR [rsp]
  424eba:	jne    424ebe <isspace@plt+0x215ae>
  424ebc:	pop    rcx
  424ebd:	ret    
  424ebe:	call   403280 <__stack_chk_fail@plt>
  424ec3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424ecd:	nop    DWORD PTR [rax]
  424ed0:	push   rax
  424ed1:	mov    rax,QWORD PTR fs:0x28
  424eda:	mov    QWORD PTR [rsp],rax
  424ede:	mov    BYTE PTR [rdi+0x9b8],0x0
  424ee5:	mov    DWORD PTR [rdi+0x9bc],esi
  424eeb:	mov    rax,QWORD PTR fs:0x28
  424ef4:	cmp    rax,QWORD PTR [rsp]
  424ef8:	jne    424efc <isspace@plt+0x215ec>
  424efa:	pop    rax
  424efb:	ret    
  424efc:	call   403280 <__stack_chk_fail@plt>
  424f01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  424f10:	push   rbp
  424f11:	push   r15
  424f13:	push   r14
  424f15:	push   r13
  424f17:	push   r12
  424f19:	push   rbx
  424f1a:	sub    rsp,0x28
  424f1e:	mov    rax,QWORD PTR fs:0x28
  424f27:	mov    QWORD PTR [rsp+0x20],rax
  424f2c:	mov    rax,QWORD PTR [rdi+0x30]
  424f30:	mov    QWORD PTR [rsp+0x8],rax
  424f35:	test   rax,rax
  424f38:	je     42509b <isspace@plt+0x2178b>
  424f3e:	mov    r14,rdi
  424f41:	cmp    BYTE PTR [rdi+0x7fc],0x0
  424f48:	je     425087 <isspace@plt+0x21777>
  424f4e:	mov    ebx,DWORD PTR [r14+0x7f8]
  424f55:	cmp    ebx,0x9
  424f58:	mov    eax,0x8
  424f5d:	cmovl  eax,ebx
  424f60:	mov    DWORD PTR [rsp+0x4],eax
  424f64:	mov    rax,QWORD PTR [rsp+0x8]
  424f69:	mov    rdi,QWORD PTR [rax+0x18]
  424f6d:	call   41f710 <isspace@plt+0x1be00>
  424f72:	test   rax,rax
  424f75:	je     42509b <isspace@plt+0x2178b>
  424f7b:	mov    r12,rax
  424f7e:	not    ebx
  424f80:	cmp    ebx,0xfffffff6
  424f83:	mov    eax,0xfffffff7
  424f88:	cmovg  eax,ebx
  424f8b:	mov    ecx,0xfffffffe
  424f90:	sub    ecx,eax
  424f92:	mov    DWORD PTR [rsp],ecx
  424f95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424f9f:	nop
  424fa0:	mov    rdi,r12
  424fa3:	call   41b4d0 <isspace@plt+0x17bc0>
  424fa8:	mov    rbx,rax
  424fab:	mov    rax,QWORD PTR [rsp+0x8]
  424fb0:	mov    rax,QWORD PTR [rax+0x10]
  424fb4:	mov    rdi,QWORD PTR [rax]
  424fb7:	mov    rsi,rbx
  424fba:	call   4139c0 <isspace@plt+0x100b0>
  424fbf:	cdq    
  424fc0:	mov    ecx,DWORD PTR [rsp+0x4]
  424fc4:	idiv   ecx
  424fc6:	mov    ebp,ecx
  424fc8:	sub    ebp,edx
  424fca:	jle    424fe7 <isspace@plt+0x216d7>
  424fcc:	mov    eax,DWORD PTR [rsp]
  424fcf:	sub    eax,edx
  424fd1:	add    rax,0x1
  424fd5:	mov    esi,0x20
  424fda:	lea    rdi,[rsp+0x17]
  424fdf:	mov    rdx,rax
  424fe2:	call   403360 <memset@plt>
  424fe7:	movsxd r13,ebp
  424fea:	mov    BYTE PTR [rsp+r13*1+0x17],0x0
  424ff0:	mov    r15,r14
  424ff3:	mov    rbp,QWORD PTR [r14+0x30]
  424ff7:	test   rbp,rbp
  424ffa:	je     425060 <isspace@plt+0x21750>
  424ffc:	mov    rax,QWORD PTR [rbp+0x10]
  425000:	mov    rdi,QWORD PTR [rax]
  425003:	mov    rsi,rbx
  425006:	lea    rdx,[rsp+0x17]
  42500b:	mov    rcx,r13
  42500e:	call   40f140 <isspace@plt+0xb830>
  425013:	mov    rax,QWORD PTR [rbp+0x0]
  425017:	mov    r14,QWORD PTR [rax+0x28]
  42501b:	test   r14,r14
  42501e:	jne    42503c <isspace@plt+0x2172c>
  425020:	jmp    425060 <isspace@plt+0x21750>
  425022:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42502c:	nop    DWORD PTR [rax+0x0]
  425030:	mov    r14,QWORD PTR [r14+0x2e0]
  425037:	test   r14,r14
  42503a:	je     425060 <isspace@plt+0x21750>
  42503c:	mov    rax,QWORD PTR [r14+0x10]
  425040:	cmp    rax,QWORD PTR [rbp+0x10]
  425044:	jne    425030 <isspace@plt+0x21720>
  425046:	mov    rdi,QWORD PTR [r14+0x18]
  42504a:	call   41a4a0 <isspace@plt+0x16b90>
  42504f:	jmp    425030 <isspace@plt+0x21720>
  425051:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42505b:	nop    DWORD PTR [rax+rax*1+0x0]
  425060:	add    rbx,r13
  425063:	mov    rdi,r12
  425066:	mov    rsi,rbx
  425069:	call   41ed50 <isspace@plt+0x1b440>
  42506e:	mov    rdi,r12
  425071:	call   41f7f0 <isspace@plt+0x1bee0>
  425076:	mov    r12,rax
  425079:	test   rax,rax
  42507c:	mov    r14,r15
  42507f:	jne    424fa0 <isspace@plt+0x21690>
  425085:	jmp    42509b <isspace@plt+0x2178b>
  425087:	lea    rsi,[rip+0xccd5]        # 431d63 <isspace@plt+0x2e453>
  42508e:	mov    edx,0x1
  425093:	mov    rdi,r14
  425096:	call   422710 <isspace@plt+0x1ee00>
  42509b:	mov    rax,QWORD PTR fs:0x28
  4250a4:	cmp    rax,QWORD PTR [rsp+0x20]
  4250a9:	jne    4250ba <isspace@plt+0x217aa>
  4250ab:	add    rsp,0x28
  4250af:	pop    rbx
  4250b0:	pop    r12
  4250b2:	pop    r13
  4250b4:	pop    r14
  4250b6:	pop    r15
  4250b8:	pop    rbp
  4250b9:	ret    
  4250ba:	call   403280 <__stack_chk_fail@plt>
  4250bf:	nop
  4250c0:	push   rbp
  4250c1:	push   r15
  4250c3:	push   r14
  4250c5:	push   r13
  4250c7:	push   r12
  4250c9:	push   rbx
  4250ca:	sub    rsp,0x18
  4250ce:	mov    r12,rdx
  4250d1:	mov    r14,rsi
  4250d4:	mov    rbx,rdi
  4250d7:	mov    rax,QWORD PTR fs:0x28
  4250e0:	mov    QWORD PTR [rsp+0x10],rax
  4250e5:	mov    rdi,rsi
  4250e8:	call   410a90 <isspace@plt+0xd180>
  4250ed:	mov    r15,rax
  4250f0:	cmp    rax,r12
  4250f3:	jne    42511e <isspace@plt+0x2180e>
  4250f5:	mov    bpl,0x1
  4250f8:	test   r12,r12
  4250fb:	je     425120 <isspace@plt+0x21810>
  4250fd:	lea    rsi,[r12-0x1]
  425102:	lea    rdx,[rsp+0xf]
  425107:	mov    rdi,r14
  42510a:	call   4112b0 <isspace@plt+0xd9a0>
  42510f:	test   al,al
  425111:	je     425120 <isspace@plt+0x21810>
  425113:	cmp    BYTE PTR [rsp+0xf],0xa
  425118:	setne  bpl
  42511c:	jmp    425120 <isspace@plt+0x21810>
  42511e:	xor    ebp,ebp
  425120:	mov    DWORD PTR [rsp+0x8],ebp
  425124:	cmp    BYTE PTR [rbx+0x7fd],0x0
  42512b:	je     425171 <isspace@plt+0x21861>
  42512d:	mov    rdi,r14
  425130:	mov    rsi,r12
  425133:	call   413560 <isspace@plt+0xfc50>
  425138:	mov    rbx,rax
  42513b:	mov    rdi,r14
  42513e:	mov    rsi,rax
  425141:	call   4135c0 <isspace@plt+0xfcb0>
  425146:	mov    rbp,rax
  425149:	mov    rdi,r14
  42514c:	mov    rsi,rax
  42514f:	call   413750 <isspace@plt+0xfe40>
  425154:	cmp    rbp,r12
  425157:	cmova  rbp,r12
  42515b:	cmp    rbp,rbx
  42515e:	mov    r13,rbp
  425161:	cmovb  r13,rbx
  425165:	sub    r13,rbx
  425168:	cmp    rbp,rax
  42516b:	jne    425178 <isspace@plt+0x21868>
  42516d:	xor    ebp,ebp
  42516f:	jmp    4251a4 <isspace@plt+0x21894>
  425171:	xor    ebp,ebp
  425173:	xor    r13d,r13d
  425176:	jmp    4251a1 <isspace@plt+0x21891>
  425178:	lea    rdi,[r13+0x1]
  42517c:	call   4035e0 <malloc@plt>
  425181:	test   rax,rax
  425184:	je     42519f <isspace@plt+0x2188f>
  425186:	mov    rbp,rax
  425189:	mov    rdi,r14
  42518c:	mov    rsi,rbx
  42518f:	mov    rdx,r13
  425192:	mov    rcx,rax
  425195:	call   411380 <isspace@plt+0xda70>
  42519a:	mov    r13,rax
  42519d:	jmp    4251a1 <isspace@plt+0x21891>
  42519f:	xor    ebp,ebp
  4251a1:	mov    rbx,r12
  4251a4:	lea    rdx,[rip+0xc3ae]        # 431559 <isspace@plt+0x2dc49>
  4251ab:	mov    ecx,0x1
  4251b0:	mov    rdi,r14
  4251b3:	mov    rsi,rbx
  4251b6:	call   40f140 <isspace@plt+0xb830>
  4251bb:	cmp    r15,r12
  4251be:	jne    4251ec <isspace@plt+0x218dc>
  4251c0:	cmp    BYTE PTR [rsp+0x8],0x0
  4251c5:	je     4251e8 <isspace@plt+0x218d8>
  4251c7:	mov    rdi,r14
  4251ca:	call   410a90 <isspace@plt+0xd180>
  4251cf:	lea    rdx,[rip+0xc383]        # 431559 <isspace@plt+0x2dc49>
  4251d6:	mov    ecx,0x1
  4251db:	mov    rdi,r14
  4251de:	mov    rsi,rax
  4251e1:	call   40f140 <isspace@plt+0xb830>
  4251e6:	jmp    4251ec <isspace@plt+0x218dc>
  4251e8:	add    rbx,0xffffffffffffffff
  4251ec:	add    rbx,0x1
  4251f0:	test   rbp,rbp
  4251f3:	je     425206 <isspace@plt+0x218f6>
  4251f5:	mov    rdi,r14
  4251f8:	mov    rsi,rbx
  4251fb:	mov    rdx,rbp
  4251fe:	mov    rcx,r13
  425201:	call   40f140 <isspace@plt+0xb830>
  425206:	mov    rdi,rbp
  425209:	call   4030d0 <free@plt>
  42520e:	mov    rax,QWORD PTR fs:0x28
  425217:	cmp    rax,QWORD PTR [rsp+0x10]
  42521c:	jne    425233 <isspace@plt+0x21923>
  42521e:	add    rbx,r13
  425221:	mov    rax,rbx
  425224:	add    rsp,0x18
  425228:	pop    rbx
  425229:	pop    r12
  42522b:	pop    r13
  42522d:	pop    r14
  42522f:	pop    r15
  425231:	pop    rbp
  425232:	ret    
  425233:	call   403280 <__stack_chk_fail@plt>
  425238:	nop    DWORD PTR [rax+rax*1+0x0]
  425240:	push   rbp
  425241:	push   r15
  425243:	push   r14
  425245:	push   r13
  425247:	push   r12
  425249:	push   rbx
  42524a:	push   rax
  42524b:	mov    rax,QWORD PTR fs:0x28
  425254:	mov    QWORD PTR [rsp],rax
  425258:	mov    rbp,QWORD PTR [rdi+0x30]
  42525c:	test   rbp,rbp
  42525f:	je     425301 <isspace@plt+0x219f1>
  425265:	mov    r14,rdi
  425268:	mov    rax,QWORD PTR [rbp+0x10]
  42526c:	mov    rdi,QWORD PTR [rbp+0x18]
  425270:	mov    r15,QWORD PTR [rax]
  425273:	call   41f710 <isspace@plt+0x1be00>
  425278:	test   rax,rax
  42527b:	je     4252c2 <isspace@plt+0x219b2>
  42527d:	mov    rbx,rax
  425280:	mov    rdi,rbx
  425283:	call   41b4d0 <isspace@plt+0x17bc0>
  425288:	mov    r12,rax
  42528b:	mov    rdi,r14
  42528e:	mov    rsi,r15
  425291:	mov    rdx,rax
  425294:	call   4250c0 <isspace@plt+0x217b0>
  425299:	mov    r13,rax
  42529c:	mov    rdi,rbx
  42529f:	mov    rsi,r12
  4252a2:	call   41ad90 <isspace@plt+0x17480>
  4252a7:	mov    rdi,rbx
  4252aa:	mov    rsi,r13
  4252ad:	call   41ad90 <isspace@plt+0x17480>
  4252b2:	mov    rdi,rbx
  4252b5:	call   41f7f0 <isspace@plt+0x1bee0>
  4252ba:	mov    rbx,rax
  4252bd:	test   rax,rax
  4252c0:	jne    425280 <isspace@plt+0x21970>
  4252c2:	mov    rax,QWORD PTR [rbp+0x0]
  4252c6:	mov    rbx,QWORD PTR [rax+0x28]
  4252ca:	test   rbx,rbx
  4252cd:	jne    4252ec <isspace@plt+0x219dc>
  4252cf:	jmp    425301 <isspace@plt+0x219f1>
  4252d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4252db:	nop    DWORD PTR [rax+rax*1+0x0]
  4252e0:	mov    rbx,QWORD PTR [rbx+0x2e0]
  4252e7:	test   rbx,rbx
  4252ea:	je     425301 <isspace@plt+0x219f1>
  4252ec:	mov    rax,QWORD PTR [rbx+0x10]
  4252f0:	cmp    rax,QWORD PTR [rbp+0x10]
  4252f4:	jne    4252e0 <isspace@plt+0x219d0>
  4252f6:	mov    rdi,QWORD PTR [rbx+0x18]
  4252fa:	call   41a4a0 <isspace@plt+0x16b90>
  4252ff:	jmp    4252e0 <isspace@plt+0x219d0>
  425301:	mov    rax,QWORD PTR fs:0x28
  42530a:	cmp    rax,QWORD PTR [rsp]
  42530e:	jne    42531f <isspace@plt+0x21a0f>
  425310:	add    rsp,0x8
  425314:	pop    rbx
  425315:	pop    r12
  425317:	pop    r13
  425319:	pop    r14
  42531b:	pop    r15
  42531d:	pop    rbp
  42531e:	ret    
  42531f:	call   403280 <__stack_chk_fail@plt>
  425324:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42532e:	xchg   ax,ax
  425330:	push   r15
  425332:	push   r14
  425334:	push   rbx
  425335:	sub    rsp,0x10
  425339:	mov    r15,rsi
  42533c:	mov    r14,rdi
  42533f:	mov    rax,QWORD PTR fs:0x28
  425348:	mov    QWORD PTR [rsp+0x8],rax
  42534d:	test   rsi,rsi
  425350:	jne    42536d <isspace@plt+0x21a5d>
  425352:	lea    rsi,[r14+0x2c0]
  425359:	xor    ebx,ebx
  42535b:	xor    edx,edx
  42535d:	mov    rdi,r14
  425360:	call   42aa90 <isspace@plt+0x27180>
  425365:	mov    r15,rax
  425368:	test   rax,rax
  42536b:	je     4253b4 <isspace@plt+0x21aa4>
  42536d:	call   42b510 <isspace@plt+0x27c00>
  425372:	test   rax,rax
  425375:	je     42539e <isspace@plt+0x21a8e>
  425377:	mov    rbx,rax
  42537a:	movzx  edx,BYTE PTR [r14+0xb60]
  425382:	add    edx,edx
  425384:	or     edx,0x5
  425387:	mov    rdi,rax
  42538a:	mov    rsi,r15
  42538d:	call   42b570 <isspace@plt+0x27c60>
  425392:	test   eax,eax
  425394:	je     4253a2 <isspace@plt+0x21a92>
  425396:	mov    rdi,rbx
  425399:	call   42b600 <isspace@plt+0x27cf0>
  42539e:	xor    ebx,ebx
  4253a0:	jmp    4253b4 <isspace@plt+0x21aa4>
  4253a2:	lea    rsi,[r14+0x2c0]
  4253a9:	mov    rdi,r14
  4253ac:	mov    rdx,r15
  4253af:	call   42ac00 <isspace@plt+0x272f0>
  4253b4:	mov    rax,QWORD PTR fs:0x28
  4253bd:	cmp    rax,QWORD PTR [rsp+0x8]
  4253c2:	jne    4253d1 <isspace@plt+0x21ac1>
  4253c4:	mov    rax,rbx
  4253c7:	add    rsp,0x10
  4253cb:	pop    rbx
  4253cc:	pop    r14
  4253ce:	pop    r15
  4253d0:	ret    
  4253d1:	call   403280 <__stack_chk_fail@plt>
  4253d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4253e0:	push   rbp
  4253e1:	mov    rbp,rsp
  4253e4:	push   r15
  4253e6:	push   r14
  4253e8:	push   r13
  4253ea:	push   r12
  4253ec:	push   rbx
  4253ed:	and    rsp,0xffffffffffffffe0
  4253f1:	sub    rsp,0x22c0
  4253f8:	mov    r12,r9
  4253fb:	mov    rbx,r8
  4253fe:	mov    QWORD PTR [rsp+0x20],rcx
  425403:	mov    r15,rdx
  425406:	mov    QWORD PTR [rsp],rdi
  42540a:	mov    rax,QWORD PTR fs:0x28
  425413:	mov    QWORD PTR [rsp+0x22a0],rax
  42541b:	mov    QWORD PTR [rsp+0x18],rsi
  425420:	mov    rax,QWORD PTR [rsi]
  425423:	mov    QWORD PTR [rsp+0x28],rax
  425428:	mov    DWORD PTR [rsp+0x4c],0xffffffff
  425430:	mov    rdi,rdx
  425433:	call   417400 <isspace@plt+0x13af0>
  425438:	mov    r13d,eax
  42543b:	test   al,al
  42543d:	je     42544c <isspace@plt+0x21b3c>
  42543f:	vmovups xmm0,XMMWORD PTR [r15]
  425444:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  42544a:	jmp    42545f <isspace@plt+0x21b4f>
  42544c:	xor    edi,edi
  42544e:	xor    esi,esi
  425450:	call   417690 <isspace@plt+0x13d80>
  425455:	mov    QWORD PTR [rsp+0x30],rax
  42545a:	mov    QWORD PTR [rsp+0x38],rdx
  42545f:	lea    rdi,[rsp+0x2298]
  425467:	call   4033d0 <pipe@plt>
  42546c:	mov    r14d,0xffffffff
  425472:	cmp    eax,0xffffffff
  425475:	je     425cc7 <isspace@plt+0x223b7>
  42547b:	lea    rdi,[rsp+0x2290]
  425483:	call   4033d0 <pipe@plt>
  425488:	cmp    eax,0xffffffff
  42548b:	je     425548 <isspace@plt+0x21c38>
  425491:	lea    rdi,[rsp+0x2288]
  425499:	call   4033d0 <pipe@plt>
  42549e:	cmp    eax,0xffffffff
  4254a1:	je     425565 <isspace@plt+0x21c55>
  4254a7:	mov    QWORD PTR [rsp+0x10],rbx
  4254ac:	mov    QWORD PTR [rsp+0x8],r12
  4254b1:	mov    rax,QWORD PTR [rsp]
  4254b5:	mov    rdi,QWORD PTR [rax]
  4254b8:	call   QWORD PTR [rdi+0x80]
  4254be:	call   4038d0 <fork@plt>
  4254c3:	test   eax,eax
  4254c5:	je     42559a <isspace@plt+0x21c8a>
  4254cb:	mov    r12d,eax
  4254ce:	cmp    eax,0xffffffff
  4254d1:	jne    425694 <isspace@plt+0x21d84>
  4254d7:	mov    edi,DWORD PTR [rsp+0x2298]
  4254de:	call   4033c0 <close@plt>
  4254e3:	mov    edi,DWORD PTR [rsp+0x229c]
  4254ea:	call   4033c0 <close@plt>
  4254ef:	mov    edi,DWORD PTR [rsp+0x2290]
  4254f6:	call   4033c0 <close@plt>
  4254fb:	mov    edi,DWORD PTR [rsp+0x2294]
  425502:	call   4033c0 <close@plt>
  425507:	mov    edi,DWORD PTR [rsp+0x2288]
  42550e:	call   4033c0 <close@plt>
  425513:	mov    edi,DWORD PTR [rsp+0x228c]
  42551a:	call   4033c0 <close@plt>
  42551f:	call   403130 <__errno_location@plt>
  425524:	mov    edi,DWORD PTR [rax]
  425526:	call   403880 <strerror@plt>
  42552b:	mov    rcx,rax
  42552e:	lea    rsi,[rip+0xc830]        # 431d65 <isspace@plt+0x2e455>
  425535:	xor    eax,eax
  425537:	mov    rdi,QWORD PTR [rsp]
  42553b:	mov    rdx,rcx
  42553e:	call   42a150 <isspace@plt+0x26840>
  425543:	jmp    425cc7 <isspace@plt+0x223b7>
  425548:	mov    edi,DWORD PTR [rsp+0x2298]
  42554f:	call   4033c0 <close@plt>
  425554:	mov    edi,DWORD PTR [rsp+0x229c]
  42555b:	call   4033c0 <close@plt>
  425560:	jmp    425cc7 <isspace@plt+0x223b7>
  425565:	mov    edi,DWORD PTR [rsp+0x2298]
  42556c:	call   4033c0 <close@plt>
  425571:	mov    edi,DWORD PTR [rsp+0x229c]
  425578:	call   4033c0 <close@plt>
  42557d:	mov    edi,DWORD PTR [rsp+0x2290]
  425584:	call   4033c0 <close@plt>
  425589:	mov    edi,DWORD PTR [rsp+0x2294]
  425590:	call   4033c0 <close@plt>
  425595:	jmp    425cc7 <isspace@plt+0x223b7>
  42559a:	lea    rbx,[rsp+0x180]
  4255a2:	mov    rdi,rbx
  4255a5:	call   4034a0 <sigemptyset@plt>
  4255aa:	mov    esi,0xf
  4255af:	mov    rdi,rbx
  4255b2:	call   4038c0 <sigaddset@plt>
  4255b7:	mov    edi,0x1
  4255bc:	xor    edx,edx
  4255be:	mov    rsi,rbx
  4255c1:	call   4030b0 <sigprocmask@plt>
  4255c6:	cmp    eax,0xffffffff
  4255c9:	je     425cf1 <isspace@plt+0x223e1>
  4255cf:	lea    rdi,[rip+0xc7cb]        # 431da1 <isspace@plt+0x2e491>
  4255d6:	mov    esi,0x2
  4255db:	xor    eax,eax
  4255dd:	call   4037a0 <open@plt>
  4255e2:	cmp    eax,0xffffffff
  4255e5:	je     425d04 <isspace@plt+0x223f4>
  4255eb:	mov    r14d,eax
  4255ee:	test   r13b,r13b
  4255f1:	jne    425d2b <isspace@plt+0x2241b>
  4255f7:	mov    edi,DWORD PTR [rsp+0x2298]
  4255fe:	call   4033c0 <close@plt>
  425603:	mov    edi,DWORD PTR [rsp+0x229c]
  42560a:	call   4033c0 <close@plt>
  42560f:	mov    edi,0x2
  425614:	mov    esi,0x1
  425619:	call   4032c0 <dup2@plt>
  42561e:	lea    rbx,[rip+0xb6f0]        # 430d15 <isspace@plt+0x2d405>
  425625:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42562f:	nop
  425630:	mov    edi,0x1
  425635:	mov    edx,0x1
  42563a:	mov    rsi,rbx
  42563d:	call   4031f0 <write@plt>
  425642:	cmp    rax,0xffffffffffffffff
  425646:	jne    425652 <isspace@plt+0x21d42>
  425648:	call   403130 <__errno_location@plt>
  42564d:	cmp    DWORD PTR [rax],0x4
  425650:	je     425630 <isspace@plt+0x21d20>
  425652:	mov    edi,DWORD PTR [rsp+0x2294]
  425659:	call   4033c0 <close@plt>
  42565e:	mov    edi,DWORD PTR [rsp+0x2290]
  425665:	call   4033c0 <close@plt>
  42566a:	test   r13b,r13b
  42566d:	mov    r15,QWORD PTR [rsp]
  425671:	mov    r12,QWORD PTR [rsp+0x18]
  425676:	je     425adb <isspace@plt+0x221cb>
  42567c:	cmp    QWORD PTR [rbp+0x18],0x0
  425681:	jne    425aca <isspace@plt+0x221ba>
  425687:	mov    esi,0x2
  42568c:	mov    edi,r14d
  42568f:	jmp    425ad6 <isspace@plt+0x221c6>
  425694:	mov    r13,QWORD PTR [rsp]
  425698:	mov    DWORD PTR [r13+0x9c0],0x0
  4256a3:	mov    edi,DWORD PTR [rsp+0x2298]
  4256aa:	call   4033c0 <close@plt>
  4256af:	mov    edi,DWORD PTR [rsp+0x2294]
  4256b6:	call   4033c0 <close@plt>
  4256bb:	mov    edi,DWORD PTR [rsp+0x228c]
  4256c2:	call   4033c0 <close@plt>
  4256c7:	mov    edi,DWORD PTR [rsp+0x2290]
  4256ce:	mov    esi,0x4
  4256d3:	mov    edx,0x800
  4256d8:	xor    eax,eax
  4256da:	call   4031d0 <fcntl@plt>
  4256df:	cmp    eax,0xffffffff
  4256e2:	je     425bd9 <isspace@plt+0x222c9>
  4256e8:	mov    edi,DWORD PTR [rsp+0x2288]
  4256ef:	mov    esi,0x4
  4256f4:	mov    edx,0x800
  4256f9:	xor    eax,eax
  4256fb:	call   4031d0 <fcntl@plt>
  425700:	cmp    eax,0xffffffff
  425703:	je     425bd9 <isspace@plt+0x222c9>
  425709:	mov    r14d,0x1000
  42570f:	mov    r15d,0x1
  425715:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42571f:	nop
  425720:	cmp    DWORD PTR [r13+0x9c0],0x0
  425728:	jne    425bba <isspace@plt+0x222aa>
  42572e:	vxorps xmm0,xmm0,xmm0
  425732:	vmovaps YMMWORD PTR [rsp+0x2260],ymm0
  42573b:	vmovaps YMMWORD PTR [rsp+0x2240],ymm0
  425744:	vmovaps YMMWORD PTR [rsp+0x2220],ymm0
  42574d:	vmovaps YMMWORD PTR [rsp+0x2200],ymm0
  425756:	vmovaps YMMWORD PTR [rsp+0x21e0],ymm0
  42575f:	vmovaps YMMWORD PTR [rsp+0x21c0],ymm0
  425768:	vmovaps YMMWORD PTR [rsp+0x21a0],ymm0
  425771:	vmovaps YMMWORD PTR [rsp+0x2180],ymm0
  42577a:	movsxd rdi,DWORD PTR [rsp+0x229c]
  425782:	cmp    rdi,0xffffffffffffffff
  425786:	je     4257b0 <isspace@plt+0x21ea0>
  425788:	mov    eax,edi
  42578a:	sar    eax,0x1f
  42578d:	shr    eax,0x1a
  425790:	add    eax,edi
  425792:	and    eax,0xc0
  425797:	mov    ecx,edi
  425799:	sub    ecx,eax
  42579b:	shlx   rbx,r15,rcx
  4257a0:	vzeroupper 
  4257a3:	call   403300 <__fdelt_chk@plt>
  4257a8:	or     QWORD PTR [rsp+rax*8+0x2180],rbx
  4257b0:	movsxd rdi,DWORD PTR [rsp+0x2290]
  4257b8:	cmp    rdi,0xffffffffffffffff
  4257bc:	je     4257e6 <isspace@plt+0x21ed6>
  4257be:	mov    eax,edi
  4257c0:	sar    eax,0x1f
  4257c3:	shr    eax,0x1a
  4257c6:	add    eax,edi
  4257c8:	and    eax,0xc0
  4257cd:	mov    ecx,edi
  4257cf:	sub    ecx,eax
  4257d1:	shlx   rbx,r15,rcx
  4257d6:	vzeroupper 
  4257d9:	call   403300 <__fdelt_chk@plt>
  4257de:	or     QWORD PTR [rsp+rax*8+0x2200],rbx
  4257e6:	movsxd rdi,DWORD PTR [rsp+0x2288]
  4257ee:	cmp    rdi,0xffffffffffffffff
  4257f2:	je     42581c <isspace@plt+0x21f0c>
  4257f4:	mov    eax,edi
  4257f6:	sar    eax,0x1f
  4257f9:	shr    eax,0x1a
  4257fc:	add    eax,edi
  4257fe:	and    eax,0xc0
  425803:	mov    ecx,edi
  425805:	sub    ecx,eax
  425807:	shlx   rbx,r15,rcx
  42580c:	vzeroupper 
  42580f:	call   403300 <__fdelt_chk@plt>
  425814:	or     QWORD PTR [rsp+rax*8+0x2200],rbx
  42581c:	mov    edi,0x400
  425821:	xor    ecx,ecx
  425823:	xor    r8d,r8d
  425826:	lea    rsi,[rsp+0x2200]
  42582e:	lea    rdx,[rsp+0x2180]
  425836:	vzeroupper 
  425839:	call   403560 <select@plt>
  42583e:	cmp    eax,0xffffffff
  425841:	je     4258fe <isspace@plt+0x21fee>
  425847:	movsxd rdi,DWORD PTR [rsp+0x229c]
  42584f:	cmp    rdi,0xffffffffffffffff
  425853:	je     425940 <isspace@plt+0x22030>
  425859:	call   403300 <__fdelt_chk@plt>
  42585e:	mov    rax,QWORD PTR [rsp+rax*8+0x2180]
  425866:	mov    edx,DWORD PTR [rsp+0x229c]
  42586d:	mov    ecx,edx
  42586f:	sar    ecx,0x1f
  425872:	shr    ecx,0x1a
  425875:	add    ecx,edx
  425877:	and    ecx,0xc0
  42587d:	mov    esi,edx
  42587f:	sub    esi,ecx
  425881:	bt     rax,rsi
  425885:	jae    425940 <isspace@plt+0x22030>
  42588b:	vmovaps xmm0,XMMWORD PTR [rsp+0x30]
  425891:	vmovaps XMMWORD PTR [rsp+0x180],xmm0
  42589a:	mov    rax,QWORD PTR [rsp+0x180]
  4258a2:	add    rax,r14
  4258a5:	cmp    QWORD PTR [rsp+0x188],rax
  4258ad:	jbe    4258b7 <isspace@plt+0x21fa7>
  4258af:	mov    QWORD PTR [rsp+0x188],rax
  4258b7:	mov    rdi,QWORD PTR [rsp+0x28]
  4258bc:	lea    rsi,[rsp+0x180]
  4258c4:	call   412530 <isspace@plt+0xec20>
  4258c9:	mov    rbx,rax
  4258cc:	test   rax,rax
  4258cf:	jle    425911 <isspace@plt+0x22001>
  4258d1:	add    QWORD PTR [rsp+0x30],rbx
  4258d6:	lea    rdi,[rsp+0x30]
  4258db:	call   417460 <isspace@plt+0x13b50>
  4258e0:	test   rax,rax
  4258e3:	jne    425940 <isspace@plt+0x22030>
  4258e5:	mov    edi,DWORD PTR [rsp+0x2294]
  4258ec:	call   4033c0 <close@plt>
  4258f1:	mov    DWORD PTR [rsp+0x2294],0xffffffff
  4258fc:	jmp    425940 <isspace@plt+0x22030>
  4258fe:	call   403130 <__errno_location@plt>
  425903:	cmp    DWORD PTR [rax],0x4
  425906:	je     425aa0 <isspace@plt+0x22190>
  42590c:	jmp    425bc8 <isspace@plt+0x222b8>
  425911:	mov    edi,DWORD PTR [rsp+0x229c]
  425918:	call   4033c0 <close@plt>
  42591d:	mov    DWORD PTR [rsp+0x229c],0xffffffff
  425928:	cmp    rbx,0xffffffffffffffff
  42592c:	jne    425940 <isspace@plt+0x22030>
  42592e:	xor    eax,eax
  425930:	mov    rdi,r13
  425933:	lea    rsi,[rip+0xc4ae]        # 431de8 <isspace@plt+0x2e4d8>
  42593a:	call   42a150 <isspace@plt+0x26840>
  42593f:	nop
  425940:	movsxd rdi,DWORD PTR [rsp+0x2290]
  425948:	cmp    rdi,0xffffffffffffffff
  42594c:	je     4259f0 <isspace@plt+0x220e0>
  425952:	call   403300 <__fdelt_chk@plt>
  425957:	mov    rax,QWORD PTR [rsp+rax*8+0x2200]
  42595f:	mov    edi,DWORD PTR [rsp+0x2290]
  425966:	mov    ecx,edi
  425968:	sar    ecx,0x1f
  42596b:	shr    ecx,0x1a
  42596e:	add    ecx,edi
  425970:	and    ecx,0xc0
  425976:	mov    edx,edi
  425978:	sub    edx,ecx
  42597a:	bt     rax,rdx
  42597e:	jae    4259f0 <isspace@plt+0x220e0>
  425980:	mov    edx,0x2000
  425985:	lea    rsi,[rsp+0x180]
  42598d:	call   403420 <read@plt>
  425992:	test   rax,rax
  425995:	jle    4259b5 <isspace@plt+0x220a5>
  425997:	cmp    QWORD PTR [rsp+0x8],0x0
  42599d:	je     4259f0 <isspace@plt+0x220e0>
  42599f:	mov    rdi,QWORD PTR [rsp+0x10]
  4259a4:	lea    rsi,[rsp+0x180]
  4259ac:	mov    rdx,rax
  4259af:	call   QWORD PTR [rsp+0x8]
  4259b3:	jmp    4259f0 <isspace@plt+0x220e0>
  4259b5:	je     4259d9 <isspace@plt+0x220c9>
  4259b7:	call   403130 <__errno_location@plt>
  4259bc:	mov    eax,DWORD PTR [rax]
  4259be:	cmp    eax,0x4
  4259c1:	je     4259f0 <isspace@plt+0x220e0>
  4259c3:	cmp    eax,0xb
  4259c6:	je     4259f0 <isspace@plt+0x220e0>
  4259c8:	xor    eax,eax
  4259ca:	mov    rdi,r13
  4259cd:	lea    rsi,[rip+0xc436]        # 431e0a <isspace@plt+0x2e4fa>
  4259d4:	call   42a150 <isspace@plt+0x26840>
  4259d9:	mov    edi,DWORD PTR [rsp+0x2290]
  4259e0:	call   4033c0 <close@plt>
  4259e5:	mov    DWORD PTR [rsp+0x2290],0xffffffff
  4259f0:	movsxd rdi,DWORD PTR [rsp+0x2288]
  4259f8:	cmp    rdi,0xffffffffffffffff
  4259fc:	je     425aa0 <isspace@plt+0x22190>
  425a02:	call   403300 <__fdelt_chk@plt>
  425a07:	mov    rax,QWORD PTR [rsp+rax*8+0x2200]
  425a0f:	mov    edi,DWORD PTR [rsp+0x2288]
  425a16:	mov    ecx,edi
  425a18:	sar    ecx,0x1f
  425a1b:	shr    ecx,0x1a
  425a1e:	add    ecx,edi
  425a20:	and    ecx,0xc0
  425a26:	mov    edx,edi
  425a28:	sub    edx,ecx
  425a2a:	bt     rax,rdx
  425a2e:	jae    425aa0 <isspace@plt+0x22190>
  425a30:	mov    edx,0x2000
  425a35:	lea    rsi,[rsp+0x180]
  425a3d:	call   403420 <read@plt>
  425a42:	test   rax,rax
  425a45:	jle    425a62 <isspace@plt+0x22152>
  425a47:	cmp    QWORD PTR [rbp+0x18],0x0
  425a4c:	je     425aa0 <isspace@plt+0x22190>
  425a4e:	mov    rdi,QWORD PTR [rbp+0x10]
  425a52:	lea    rsi,[rsp+0x180]
  425a5a:	mov    rdx,rax
  425a5d:	call   QWORD PTR [rbp+0x18]
  425a60:	jmp    425aa0 <isspace@plt+0x22190>
  425a62:	je     425a86 <isspace@plt+0x22176>
  425a64:	call   403130 <__errno_location@plt>
  425a69:	mov    eax,DWORD PTR [rax]
  425a6b:	cmp    eax,0x4
  425a6e:	je     425aa0 <isspace@plt+0x22190>
  425a70:	cmp    eax,0xb
  425a73:	je     425aa0 <isspace@plt+0x22190>
  425a75:	xor    eax,eax
  425a77:	mov    rdi,r13
  425a7a:	lea    rsi,[rip+0xc3aa]        # 431e2b <isspace@plt+0x2e51b>
  425a81:	call   42a150 <isspace@plt+0x26840>
  425a86:	mov    edi,DWORD PTR [rsp+0x2288]
  425a8d:	call   4033c0 <close@plt>
  425a92:	mov    DWORD PTR [rsp+0x2288],0xffffffff
  425a9d:	nop    DWORD PTR [rax]
  425aa0:	mov    eax,DWORD PTR [rsp+0x2290]
  425aa7:	and    eax,DWORD PTR [rsp+0x229c]
  425aae:	cmp    eax,0xffffffff
  425ab1:	jne    425720 <isspace@plt+0x21e10>
  425ab7:	cmp    DWORD PTR [rsp+0x2288],0xffffffff
  425abf:	jne    425720 <isspace@plt+0x21e10>
  425ac5:	jmp    425bd9 <isspace@plt+0x222c9>
  425aca:	mov    edi,DWORD PTR [rsp+0x228c]
  425ad1:	mov    esi,0x2
  425ad6:	call   4032c0 <dup2@plt>
  425adb:	mov    edi,DWORD PTR [rsp+0x2288]
  425ae2:	call   4033c0 <close@plt>
  425ae7:	mov    edi,DWORD PTR [rsp+0x228c]
  425aee:	call   4033c0 <close@plt>
  425af3:	mov    edi,r14d
  425af6:	call   4033c0 <close@plt>
  425afb:	mov    rbx,QWORD PTR [r12+0x8]
  425b00:	test   rbx,rbx
  425b03:	je     425b4d <isspace@plt+0x2223d>
  425b05:	mov    esi,0x2f
  425b0a:	mov    rdi,rbx
  425b0d:	call   403320 <strrchr@plt>
  425b12:	mov    r14,rax
  425b15:	lea    rdi,[rip+0xc28f]        # 431dab <isspace@plt+0x2e49b>
  425b1c:	mov    edx,0x1
  425b21:	mov    rsi,rbx
  425b24:	call   4031e0 <setenv@plt>
  425b29:	test   r14,r14
  425b2c:	jne    425b35 <isspace@plt+0x22225>
  425b2e:	mov    r14,QWORD PTR [r12+0x8]
  425b33:	jmp    425b39 <isspace@plt+0x22229>
  425b35:	add    r14,0x1
  425b39:	lea    rdi,[rip+0xc278]        # 431db8 <isspace@plt+0x2e4a8>
  425b40:	mov    edx,0x1
  425b45:	mov    rsi,r14
  425b48:	call   4031e0 <setenv@plt>
  425b4d:	mov    rsi,QWORD PTR [rsp+0x20]
  425b52:	cmp    QWORD PTR [rsi+0x8],0x0
  425b57:	jne    425b79 <isspace@plt+0x22269>
  425b59:	mov    rdi,QWORD PTR [r15+0x800]
  425b60:	mov    rcx,QWORD PTR [rsi]
  425b63:	lea    rdx,[rip+0xc25b]        # 431dc5 <isspace@plt+0x2e4b5>
  425b6a:	xor    r8d,r8d
  425b6d:	xor    eax,eax
  425b6f:	mov    rsi,rdi
  425b72:	call   403860 <execlp@plt>
  425b77:	jmp    425b81 <isspace@plt+0x22271>
  425b79:	mov    rdi,QWORD PTR [rsi]
  425b7c:	call   4037c0 <execvp@plt>
  425b81:	mov    rax,QWORD PTR [rip+0x1d470]        # 442ff8 <isspace@plt+0x3f6e8>
  425b88:	mov    rbx,QWORD PTR [rax]
  425b8b:	call   403130 <__errno_location@plt>
  425b90:	mov    edi,DWORD PTR [rax]
  425b92:	call   403880 <strerror@plt>
  425b97:	mov    rcx,rax
  425b9a:	lea    rdx,[rip+0xc227]        # 431dc8 <isspace@plt+0x2e4b8>
  425ba1:	mov    esi,0x1
  425ba6:	xor    eax,eax
  425ba8:	mov    rdi,rbx
  425bab:	call   403820 <__fprintf_chk@plt>
  425bb0:	mov    edi,0x1
  425bb5:	call   403800 <exit@plt>
  425bba:	xor    edi,edi
  425bbc:	mov    esi,0xf
  425bc1:	call   403500 <kill@plt>
  425bc6:	jmp    425bd9 <isspace@plt+0x222c9>
  425bc8:	lea    rsi,[rip+0xc20a]        # 431dd9 <isspace@plt+0x2e4c9>
  425bcf:	xor    eax,eax
  425bd1:	mov    rdi,r13
  425bd4:	call   42a150 <isspace@plt+0x26840>
  425bd9:	mov    edi,DWORD PTR [rsp+0x229c]
  425be0:	cmp    edi,0xffffffff
  425be3:	je     425bea <isspace@plt+0x222da>
  425be5:	call   4033c0 <close@plt>
  425bea:	mov    edi,DWORD PTR [rsp+0x2290]
  425bf1:	cmp    edi,0xffffffff
  425bf4:	je     425bfb <isspace@plt+0x222eb>
  425bf6:	call   4033c0 <close@plt>
  425bfb:	mov    edi,DWORD PTR [rsp+0x2288]
  425c02:	cmp    edi,0xffffffff
  425c05:	je     425c0c <isspace@plt+0x222fc>
  425c07:	call   4033c0 <close@plt>
  425c0c:	lea    rbx,[rsp+0x4c]
  425c11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  425c20:	cmp    DWORD PTR [r13+0x9c0],0x0
  425c28:	je     425c36 <isspace@plt+0x22326>
  425c2a:	xor    edi,edi
  425c2c:	mov    esi,0xf
  425c31:	call   403500 <kill@plt>
  425c36:	xor    edx,edx
  425c38:	mov    edi,r12d
  425c3b:	mov    rsi,rbx
  425c3e:	call   403790 <waitpid@plt>
  425c43:	cmp    eax,0xffffffff
  425c46:	je     425c50 <isspace@plt+0x22340>
  425c48:	cmp    r12d,eax
  425c4b:	jne    425c20 <isspace@plt+0x22310>
  425c4d:	jmp    425c60 <isspace@plt+0x22350>
  425c4f:	nop
  425c50:	call   403130 <__errno_location@plt>
  425c55:	cmp    r12d,0xffffffff
  425c59:	je     425c60 <isspace@plt+0x22350>
  425c5b:	cmp    DWORD PTR [rax],0xa
  425c5e:	jne    425c20 <isspace@plt+0x22310>
  425c60:	mov    QWORD PTR [rsp+0xe8],0x1
  425c6c:	mov    DWORD PTR [rsp+0x170],0x0
  425c77:	lea    rdi,[rsp+0xf0]
  425c7f:	call   4034a0 <sigemptyset@plt>
  425c84:	lea    rsi,[rsp+0xe8]
  425c8c:	lea    rbx,[rsp+0x50]
  425c91:	mov    edi,0xf
  425c96:	mov    rdx,rbx
  425c99:	call   4031b0 <sigaction@plt>
  425c9e:	mov    edi,0xf
  425ca3:	xor    edx,edx
  425ca5:	mov    rsi,rbx
  425ca8:	call   4031b0 <sigaction@plt>
  425cad:	mov    DWORD PTR [r13+0x9c0],0x0
  425cb8:	mov    rdi,QWORD PTR [r13+0x0]
  425cbc:	call   QWORD PTR [rdi+0x88]
  425cc2:	mov    r14d,DWORD PTR [rsp+0x4c]
  425cc7:	mov    rax,QWORD PTR fs:0x28
  425cd0:	cmp    rax,QWORD PTR [rsp+0x22a0]
  425cd8:	jne    425cec <isspace@plt+0x223dc>
  425cda:	mov    eax,r14d
  425cdd:	lea    rsp,[rbp-0x28]
  425ce1:	pop    rbx
  425ce2:	pop    r12
  425ce4:	pop    r13
  425ce6:	pop    r14
  425ce8:	pop    r15
  425cea:	pop    rbp
  425ceb:	ret    
  425cec:	call   403280 <__stack_chk_fail@plt>
  425cf1:	mov    rax,QWORD PTR [rip+0x1d300]        # 442ff8 <isspace@plt+0x3f6e8>
  425cf8:	mov    rdi,QWORD PTR [rax]
  425cfb:	lea    rdx,[rip+0xc074]        # 431d76 <isspace@plt+0x2e466>
  425d02:	jmp    425d15 <isspace@plt+0x22405>
  425d04:	mov    rax,QWORD PTR [rip+0x1d2ed]        # 442ff8 <isspace@plt+0x3f6e8>
  425d0b:	mov    rdi,QWORD PTR [rax]
  425d0e:	lea    rdx,[rip+0xc07d]        # 431d92 <isspace@plt+0x2e482>
  425d15:	mov    esi,0x1
  425d1a:	xor    eax,eax
  425d1c:	call   403820 <__fprintf_chk@plt>
  425d21:	mov    edi,0x1
  425d26:	call   403800 <exit@plt>
  425d2b:	mov    rdi,r15
  425d2e:	call   417460 <isspace@plt+0x13b50>
  425d33:	test   rax,rax
  425d36:	jne    425d3f <isspace@plt+0x2242f>
  425d38:	xor    esi,esi
  425d3a:	mov    edi,r14d
  425d3d:	jmp    425d48 <isspace@plt+0x22438>
  425d3f:	mov    edi,DWORD PTR [rsp+0x2298]
  425d46:	xor    esi,esi
  425d48:	call   4032c0 <dup2@plt>
  425d4d:	mov    edi,DWORD PTR [rsp+0x2298]
  425d54:	call   4033c0 <close@plt>
  425d59:	mov    edi,DWORD PTR [rsp+0x229c]
  425d60:	call   4033c0 <close@plt>
  425d65:	cmp    QWORD PTR [rsp+0x8],0x0
  425d6b:	jne    425d77 <isspace@plt+0x22467>
  425d6d:	mov    esi,0x1
  425d72:	mov    edi,r14d
  425d75:	jmp    425d83 <isspace@plt+0x22473>
  425d77:	mov    edi,DWORD PTR [rsp+0x2294]
  425d7e:	mov    esi,0x1
  425d83:	call   4032c0 <dup2@plt>
  425d88:	jmp    425652 <isspace@plt+0x21d42>
  425d8d:	nop    DWORD PTR [rax]
  425d90:	push   rax
  425d91:	mov    rax,QWORD PTR fs:0x28
  425d9a:	mov    QWORD PTR [rsp],rax
  425d9e:	mov    rax,QWORD PTR [rdi+0x30]
  425da2:	test   rax,rax
  425da5:	je     425db0 <isspace@plt+0x224a0>
  425da7:	mov    rax,QWORD PTR [rax+0x10]
  425dab:	mov    rax,QWORD PTR [rax]
  425dae:	jmp    425db2 <isspace@plt+0x224a2>
  425db0:	xor    eax,eax
  425db2:	mov    rcx,QWORD PTR fs:0x28
  425dbb:	cmp    rcx,QWORD PTR [rsp]
  425dbf:	jne    425dc3 <isspace@plt+0x224b3>
  425dc1:	pop    rcx
  425dc2:	ret    
  425dc3:	call   403280 <__stack_chk_fail@plt>
  425dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  425dd0:	push   rax
  425dd1:	mov    rax,QWORD PTR fs:0x28
  425dda:	mov    QWORD PTR [rsp],rax
  425dde:	mov    rax,QWORD PTR [rdi+0x30]
  425de2:	test   rax,rax
  425de5:	je     425ded <isspace@plt+0x224dd>
  425de7:	mov    rax,QWORD PTR [rax+0x18]
  425deb:	jmp    425def <isspace@plt+0x224df>
  425ded:	xor    eax,eax
  425def:	mov    rcx,QWORD PTR fs:0x28
  425df8:	cmp    rcx,QWORD PTR [rsp]
  425dfc:	jne    425e00 <isspace@plt+0x224f0>
  425dfe:	pop    rcx
  425dff:	ret    
  425e00:	call   403280 <__stack_chk_fail@plt>
  425e05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425e0f:	nop
  425e10:	push   rax
  425e11:	mov    rax,QWORD PTR fs:0x28
  425e1a:	mov    QWORD PTR [rsp],rax
  425e1e:	mov    rax,QWORD PTR [rdi+0x30]
  425e22:	mov    rcx,QWORD PTR fs:0x28
  425e2b:	cmp    rcx,QWORD PTR [rsp]
  425e2f:	jne    425e33 <isspace@plt+0x22523>
  425e31:	pop    rcx
  425e32:	ret    
  425e33:	call   403280 <__stack_chk_fail@plt>
  425e38:	nop    DWORD PTR [rax+rax*1+0x0]
  425e40:	push   rax
  425e41:	mov    rax,QWORD PTR fs:0x28
  425e4a:	mov    QWORD PTR [rsp],rax
  425e4e:	cmp    BYTE PTR [rdi+0x7fd],0x0
  425e55:	setne  al
  425e58:	mov    rcx,QWORD PTR fs:0x28
  425e61:	cmp    rcx,QWORD PTR [rsp]
  425e65:	jne    425e69 <isspace@plt+0x22559>
  425e67:	pop    rcx
  425e68:	ret    
  425e69:	call   403280 <__stack_chk_fail@plt>
  425e6e:	xchg   ax,ax
  425e70:	push   rbp
  425e71:	push   r15
  425e73:	push   r14
  425e75:	push   rbx
  425e76:	sub    rsp,0x38
  425e7a:	mov    rbx,rdx
  425e7d:	mov    r15,rdi
  425e80:	mov    rax,QWORD PTR fs:0x28
  425e89:	mov    QWORD PTR [rsp+0x30],rax
  425e8e:	mov    rdi,rsi
  425e91:	call   41ff60 <isspace@plt+0x1c650>
  425e96:	mov    QWORD PTR [rsp+0x20],rax
  425e9b:	mov    QWORD PTR [rsp+0x28],rdx
  425ea0:	lea    rdi,[rsp+0x20]
  425ea5:	call   417400 <isspace@plt+0x13af0>
  425eaa:	test   al,al
  425eac:	je     426052 <isspace@plt+0x22742>
  425eb2:	mov    rsi,QWORD PTR [rsp+0x20]
  425eb7:	lea    rdx,[rsp+0x18]
  425ebc:	lea    r8,[rsp+0x14]
  425ec1:	xor    ecx,ecx
  425ec3:	mov    rdi,r15
  425ec6:	call   41ac10 <isspace@plt+0x17300>
  425ecb:	mov    rsi,QWORD PTR [rsp+0x28]
  425ed0:	lea    rdx,[rsp+0x8]
  425ed5:	lea    r14,[rsp+0x4]
  425eda:	xor    ecx,ecx
  425edc:	mov    rdi,r15
  425edf:	mov    r8,r14
  425ee2:	call   41ac10 <isspace@plt+0x17300>
  425ee7:	mov    r9,QWORD PTR [rsp+0x18]
  425eec:	mov    rax,QWORD PTR [rsp+0x8]
  425ef1:	mov    rcx,r9
  425ef4:	or     rcx,rax
  425ef7:	je     426052 <isspace@plt+0x22742>
  425efd:	test   r9,r9
  425f00:	je     42606d <isspace@plt+0x2275d>
  425f06:	test   rax,rax
  425f09:	je     426093 <isspace@plt+0x22783>
  425f0f:	mov    r8,QWORD PTR [rax+0x8]
  425f13:	cmp    r9,r8
  425f16:	je     426052 <isspace@plt+0x22742>
  425f1c:	mov    rsi,r9
  425f1f:	nop
  425f20:	xor    edx,edx
  425f22:	cmp    rsi,r9
  425f25:	jne    425f2b <isspace@plt+0x2261b>
  425f27:	mov    edx,DWORD PTR [rsp+0x14]
  425f2b:	lea    rcx,[rsi+0x20]
  425f2f:	cmp    rsi,rax
  425f32:	cmove  rcx,r14
  425f36:	movsxd rdi,DWORD PTR [rcx]
  425f39:	cmp    edx,edi
  425f3b:	jge    426045 <isspace@plt+0x22735>
  425f41:	movsxd r10,edx
  425f44:	mov    ecx,edi
  425f46:	sub    ecx,edx
  425f48:	mov    rdx,r10
  425f4b:	not    rdx
  425f4e:	test   cl,0x1
  425f51:	je     425f9f <isspace@plt+0x2268f>
  425f53:	lea    rcx,[r10+r10*2]
  425f57:	shl    rcx,0x4
  425f5b:	movzx  r11d,WORD PTR [rsi+rcx*1+0x50]
  425f61:	movzx  ebp,WORD PTR [rbx+0xa]
  425f65:	lea    r15,[rsi+rcx*1]
  425f69:	add    r15,0x52
  425f6d:	cmp    r11w,bp
  425f71:	jne    425f87 <isspace@plt+0x22677>
  425f73:	movzx  ebp,WORD PTR [r15]
  425f77:	cmp    r11w,bp
  425f7b:	jne    425f8d <isspace@plt+0x2267d>
  425f7d:	mov    rbp,QWORD PTR [rbx]
  425f80:	mov    QWORD PTR [rsi+rcx*1+0x48],rbp
  425f85:	jmp    425f9b <isspace@plt+0x2268b>
  425f87:	mov    WORD PTR [r15],bp
  425f8b:	jmp    425f9b <isspace@plt+0x2268b>
  425f8d:	add    rcx,rsi
  425f90:	add    rcx,0x50
  425f94:	mov    WORD PTR [rcx],bp
  425f97:	mov    WORD PTR [r15],r11w
  425f9b:	add    r10,0x1
  425f9f:	add    rdx,rdi
  425fa2:	je     426045 <isspace@plt+0x22735>
  425fa8:	sub    rdi,r10
  425fab:	lea    rcx,[r10+r10*2]
  425faf:	shl    rcx,0x4
  425fb3:	lea    rdx,[rsi+rcx*1]
  425fb7:	add    rdx,0x82
  425fbe:	xchg   ax,ax
  425fc0:	movzx  ecx,WORD PTR [rdx-0x32]
  425fc4:	movzx  ebp,WORD PTR [rbx+0xa]
  425fc8:	cmp    cx,bp
  425fcb:	jne    425fe0 <isspace@plt+0x226d0>
  425fcd:	movzx  ebp,WORD PTR [rdx-0x30]
  425fd1:	cmp    cx,bp
  425fd4:	jne    425ff0 <isspace@plt+0x226e0>
  425fd6:	mov    rcx,QWORD PTR [rbx]
  425fd9:	mov    QWORD PTR [rdx-0x3a],rcx
  425fdd:	jmp    425ff8 <isspace@plt+0x226e8>
  425fdf:	nop
  425fe0:	mov    WORD PTR [rdx-0x30],bp
  425fe4:	jmp    425ff8 <isspace@plt+0x226e8>
  425fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425ff0:	mov    WORD PTR [rdx-0x32],bp
  425ff4:	mov    WORD PTR [rdx-0x30],cx
  425ff8:	movzx  ecx,WORD PTR [rdx-0x2]
  425ffc:	movzx  ebp,WORD PTR [rbx+0xa]
  426000:	cmp    cx,bp
  426003:	jne    426020 <isspace@plt+0x22710>
  426005:	movzx  ebp,WORD PTR [rdx]
  426008:	cmp    cx,bp
  42600b:	jne    426030 <isspace@plt+0x22720>
  42600d:	mov    rcx,QWORD PTR [rbx]
  426010:	mov    QWORD PTR [rdx-0xa],rcx
  426014:	jmp    426037 <isspace@plt+0x22727>
  426016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426020:	mov    WORD PTR [rdx],bp
  426023:	jmp    426037 <isspace@plt+0x22727>
  426025:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42602f:	nop
  426030:	mov    WORD PTR [rdx-0x2],bp
  426034:	mov    WORD PTR [rdx],cx
  426037:	add    rdx,0x60
  42603b:	add    rdi,0xfffffffffffffffe
  42603f:	jne    425fc0 <isspace@plt+0x226b0>
  426045:	mov    rsi,QWORD PTR [rsi+0x8]
  426049:	cmp    rsi,r8
  42604c:	jne    425f20 <isspace@plt+0x22610>
  426052:	mov    rax,QWORD PTR fs:0x28
  42605b:	cmp    rax,QWORD PTR [rsp+0x30]
  426060:	jne    4260b1 <isspace@plt+0x227a1>
  426062:	add    rsp,0x38
  426066:	pop    rbx
  426067:	pop    r14
  426069:	pop    r15
  42606b:	pop    rbp
  42606c:	ret    
  42606d:	mov    rdi,r15
  426070:	call   41ecc0 <isspace@plt+0x1b3b0>
  426075:	mov    r9,rax
  426078:	mov    QWORD PTR [rsp+0x18],rax
  42607d:	mov    DWORD PTR [rsp+0x14],0x0
  426085:	mov    rax,QWORD PTR [rsp+0x8]
  42608a:	test   rax,rax
  42608d:	jne    425f0f <isspace@plt+0x225ff>
  426093:	mov    rdi,r15
  426096:	call   41ecf0 <isspace@plt+0x1b3e0>
  42609b:	mov    QWORD PTR [rsp+0x8],rax
  4260a0:	mov    ecx,DWORD PTR [rax+0x20]
  4260a3:	mov    DWORD PTR [rsp+0x4],ecx
  4260a7:	mov    r9,QWORD PTR [rsp+0x18]
  4260ac:	jmp    425f0f <isspace@plt+0x225ff>
  4260b1:	call   403280 <__stack_chk_fail@plt>
  4260b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4260c0:	push   r15
  4260c2:	push   r14
  4260c4:	push   r13
  4260c6:	push   r12
  4260c8:	push   rbx
  4260c9:	sub    rsp,0x30
  4260cd:	mov    rax,QWORD PTR fs:0x28
  4260d6:	mov    QWORD PTR [rsp+0x28],rax
  4260db:	mov    rax,QWORD PTR [rdi]
  4260de:	cmp    QWORD PTR [rax+0x30],rdi
  4260e2:	je     426106 <isspace@plt+0x227f6>
  4260e4:	mov    rax,QWORD PTR fs:0x28
  4260ed:	cmp    rax,QWORD PTR [rsp+0x28]
  4260f2:	jne    4261f7 <isspace@plt+0x228e7>
  4260f8:	add    rsp,0x30
  4260fc:	pop    rbx
  4260fd:	pop    r12
  4260ff:	pop    r13
  426101:	pop    r14
  426103:	pop    r15
  426105:	ret    
  426106:	mov    r14,rcx
  426109:	mov    r12,rdx
  42610c:	mov    r15,rsi
  42610f:	mov    rbx,rdi
  426112:	mov    rdi,rsi
  426115:	call   41ed20 <isspace@plt+0x1b410>
  42611a:	mov    r13,rax
  42611d:	mov    rdi,r15
  426120:	call   41f900 <isspace@plt+0x1bff0>
  426125:	test   r13,r13
  426128:	je     4260e4 <isspace@plt+0x227d4>
  42612a:	cmp    eax,0xffffffff
  42612d:	je     4260e4 <isspace@plt+0x227d4>
  42612f:	cdqe   
  426131:	lea    rax,[rax+rax*2]
  426135:	shl    rax,0x4
  426139:	vmovups xmm0,XMMWORD PTR [r12]
  42613f:	vmovups XMMWORD PTR [r13+rax*1+0x48],xmm0
  426146:	mov    rax,QWORD PTR [rbx]
  426149:	mov    rax,QWORD PTR [rax+0x9a0]
  426150:	cmp    BYTE PTR [rax+0x58],0x0
  426154:	jne    4260e4 <isspace@plt+0x227d4>
  426156:	mov    rdi,r15
  426159:	call   41b4d0 <isspace@plt+0x17bc0>
  42615e:	mov    r15,rax
  426161:	mov    rdi,QWORD PTR [rbx+0x18]
  426165:	call   41abe0 <isspace@plt+0x172d0>
  42616a:	mov    QWORD PTR [rsp+0x8],rax
  42616f:	mov    QWORD PTR [rsp+0x10],rdx
  426174:	mov    rax,QWORD PTR [rbx+0x10]
  426178:	mov    rdi,QWORD PTR [rax]
  42617b:	lea    rdx,[rip+0xbcca]        # 431e4c <isspace@plt+0x2e53c>
  426182:	lea    rcx,[rsp+0x8]
  426187:	mov    rsi,r15
  42618a:	call   415750 <isspace@plt+0x11e40>
  42618f:	cmp    r15,rax
  426192:	je     4260e4 <isspace@plt+0x227d4>
  426198:	mov    rdi,QWORD PTR [rbx+0x18]
  42619c:	lea    rdx,[rsp+0x20]
  4261a1:	lea    r8,[rsp+0x1c]
  4261a6:	xor    ecx,ecx
  4261a8:	mov    rsi,rax
  4261ab:	call   41ac10 <isspace@plt+0x17300>
  4261b0:	test   al,al
  4261b2:	je     4260e4 <isspace@plt+0x227d4>
  4261b8:	mov    rax,QWORD PTR [rsp+0x20]
  4261bd:	movsxd rcx,DWORD PTR [rsp+0x1c]
  4261c2:	lea    rcx,[rcx+rcx*2]
  4261c6:	shl    rcx,0x4
  4261ca:	movzx  edx,WORD PTR [rax+rcx*1+0x50]
  4261cf:	cmp    dx,WORD PTR [r14+0x8]
  4261d4:	jne    4261e8 <isspace@plt+0x228d8>
  4261d6:	lea    rsi,[rax+rcx*1]
  4261da:	add    rsi,0x50
  4261de:	movzx  edi,WORD PTR [rax+rcx*1+0x52]
  4261e3:	mov    WORD PTR [rsi],di
  4261e6:	jmp    4261ed <isspace@plt+0x228dd>
  4261e8:	movzx  edx,WORD PTR [r14+0xa]
  4261ed:	mov    WORD PTR [rax+rcx*1+0x52],dx
  4261f2:	jmp    4260e4 <isspace@plt+0x227d4>
  4261f7:	call   403280 <__stack_chk_fail@plt>
  4261fc:	nop    DWORD PTR [rax+0x0]
  426200:	push   r15
  426202:	push   r14
  426204:	push   rbx
  426205:	sub    rsp,0x10
  426209:	mov    rbx,rdx
  42620c:	mov    rax,QWORD PTR fs:0x28
  426215:	mov    QWORD PTR [rsp+0x8],rax
  42621a:	cmp    BYTE PTR [rdx+0x14],0x0
  42621e:	je     42624a <isspace@plt+0x2293a>
  426220:	mov    r14,rdi
  426223:	mov    rdi,QWORD PTR [rbx]
  426226:	mov    r15,QWORD PTR [rbx+0x8]
  42622a:	lea    rsi,[r14+r15*1]
  42622e:	call   423650 <isspace@plt+0x1fd40>
  426233:	mov    ecx,DWORD PTR [rbx+0x10]
  426236:	test   rax,rax
  426239:	je     426253 <isspace@plt+0x22943>
  42623b:	lea    rdx,[r14+r15*1]
  42623f:	add    rdx,0x1
  426243:	cmp    rdx,rax
  426246:	je     42624d <isspace@plt+0x2293d>
  426248:	jmp    426253 <isspace@plt+0x22943>
  42624a:	mov    ecx,DWORD PTR [rbx+0x10]
  42624d:	add    ecx,0x1
  426250:	mov    DWORD PTR [rbx+0x10],ecx
  426253:	cmp    ecx,0x1
  426256:	sete   al
  426259:	mov    rcx,QWORD PTR fs:0x28
  426262:	cmp    rcx,QWORD PTR [rsp+0x8]
  426267:	jne    426273 <isspace@plt+0x22963>
  426269:	add    rsp,0x10
  42626d:	pop    rbx
  42626e:	pop    r14
  426270:	pop    r15
  426272:	ret    
  426273:	call   403280 <__stack_chk_fail@plt>
  426278:	nop    DWORD PTR [rax+rax*1+0x0]
  426280:	push   rax
  426281:	mov    rax,QWORD PTR fs:0x28
  42628a:	mov    QWORD PTR [rsp],rax
  42628e:	mov    rax,QWORD PTR fs:0x28
  426297:	cmp    rax,QWORD PTR [rsp]
  42629b:	jne    4262a1 <isspace@plt+0x22991>
  42629d:	xor    eax,eax
  42629f:	pop    rcx
  4262a0:	ret    
  4262a1:	call   403280 <__stack_chk_fail@plt>
  4262a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4262b0:	push   rax
  4262b1:	mov    rax,QWORD PTR fs:0x28
  4262ba:	mov    QWORD PTR [rsp],rax
  4262be:	mov    rax,QWORD PTR fs:0x28
  4262c7:	cmp    rax,QWORD PTR [rsp]
  4262cb:	jne    4262cf <isspace@plt+0x229bf>
  4262cd:	pop    rax
  4262ce:	ret    
  4262cf:	call   403280 <__stack_chk_fail@plt>
  4262d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4262de:	xchg   ax,ax
  4262e0:	push   rax
  4262e1:	mov    rax,QWORD PTR fs:0x28
  4262ea:	mov    QWORD PTR [rsp],rax
  4262ee:	mov    rax,QWORD PTR fs:0x28
  4262f7:	cmp    rax,QWORD PTR [rsp]
  4262fb:	jne    4262ff <isspace@plt+0x229ef>
  4262fd:	pop    rax
  4262fe:	ret    
  4262ff:	call   403280 <__stack_chk_fail@plt>
  426304:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42630e:	xchg   ax,ax
  426310:	push   rax
  426311:	mov    rax,QWORD PTR fs:0x28
  42631a:	mov    QWORD PTR [rsp],rax
  42631e:	mov    rax,QWORD PTR fs:0x28
  426327:	cmp    rax,QWORD PTR [rsp]
  42632b:	jne    42632f <isspace@plt+0x22a1f>
  42632d:	pop    rax
  42632e:	ret    
  42632f:	call   403280 <__stack_chk_fail@plt>
  426334:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42633e:	xchg   ax,ax
  426340:	push   rax
  426341:	mov    rax,QWORD PTR fs:0x28
  42634a:	mov    QWORD PTR [rsp],rax
  42634e:	mov    rax,QWORD PTR fs:0x28
  426357:	cmp    rax,QWORD PTR [rsp]
  42635b:	jne    42635f <isspace@plt+0x22a4f>
  42635d:	pop    rax
  42635e:	ret    
  42635f:	call   403280 <__stack_chk_fail@plt>
  426364:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42636e:	xchg   ax,ax
  426370:	push   rax
  426371:	mov    rax,QWORD PTR fs:0x28
  42637a:	mov    QWORD PTR [rsp],rax
  42637e:	mov    rax,QWORD PTR fs:0x28
  426387:	cmp    rax,QWORD PTR [rsp]
  42638b:	jne    426391 <isspace@plt+0x22a81>
  42638d:	mov    al,0x1
  42638f:	pop    rcx
  426390:	ret    
  426391:	call   403280 <__stack_chk_fail@plt>
  426396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4263a0:	push   rax
  4263a1:	mov    rax,QWORD PTR fs:0x28
  4263aa:	mov    QWORD PTR [rsp],rax
  4263ae:	mov    rax,QWORD PTR fs:0x28
  4263b7:	cmp    rax,QWORD PTR [rsp]
  4263bb:	jne    4263bf <isspace@plt+0x22aaf>
  4263bd:	pop    rax
  4263be:	ret    
  4263bf:	call   403280 <__stack_chk_fail@plt>
  4263c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4263ce:	xchg   ax,ax
  4263d0:	push   rax
  4263d1:	mov    rax,QWORD PTR fs:0x28
  4263da:	mov    QWORD PTR [rsp],rax
  4263de:	mov    rax,QWORD PTR fs:0x28
  4263e7:	cmp    rax,QWORD PTR [rsp]
  4263eb:	jne    4263ef <isspace@plt+0x22adf>
  4263ed:	pop    rax
  4263ee:	ret    
  4263ef:	call   403280 <__stack_chk_fail@plt>
  4263f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4263fe:	xchg   ax,ax
  426400:	push   rax
  426401:	mov    rax,QWORD PTR fs:0x28
  42640a:	mov    QWORD PTR [rsp],rax
  42640e:	mov    rax,QWORD PTR fs:0x28
  426417:	cmp    rax,QWORD PTR [rsp]
  42641b:	jne    42641f <isspace@plt+0x22b0f>
  42641d:	pop    rax
  42641e:	ret    
  42641f:	call   403280 <__stack_chk_fail@plt>
  426424:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42642e:	xchg   ax,ax
  426430:	push   rax
  426431:	mov    rax,QWORD PTR fs:0x28
  42643a:	mov    QWORD PTR [rsp],rax
  42643e:	mov    rax,QWORD PTR fs:0x28
  426447:	cmp    rax,QWORD PTR [rsp]
  42644b:	jne    42644f <isspace@plt+0x22b3f>
  42644d:	pop    rax
  42644e:	ret    
  42644f:	call   403280 <__stack_chk_fail@plt>
  426454:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42645e:	xchg   ax,ax
  426460:	push   rax
  426461:	mov    rax,QWORD PTR fs:0x28
  42646a:	mov    QWORD PTR [rsp],rax
  42646e:	mov    rax,QWORD PTR fs:0x28
  426477:	cmp    rax,QWORD PTR [rsp]
  42647b:	jne    42647f <isspace@plt+0x22b6f>
  42647d:	pop    rax
  42647e:	ret    
  42647f:	call   403280 <__stack_chk_fail@plt>
  426484:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42648e:	xchg   ax,ax
  426490:	push   rbp
  426491:	mov    rbp,rsp
  426494:	push   r15
  426496:	push   r14
  426498:	push   r13
  42649a:	push   r12
  42649c:	push   rbx
  42649d:	and    rsp,0xffffffffffffffe0
  4264a1:	sub    rsp,0xe60
  4264a8:	mov    rbx,rsi
  4264ab:	mov    r15,rdi
  4264ae:	mov    rax,QWORD PTR fs:0x28
  4264b7:	mov    QWORD PTR [rsp+0xe40],rax
  4264bf:	lea    rdi,[rsp+0xa40]
  4264c7:	xor    r14d,r14d
  4264ca:	xor    esi,esi
  4264cc:	mov    edx,0x3fc
  4264d1:	call   403360 <memset@plt>
  4264d6:	vxorpd xmm0,xmm0,xmm0
  4264da:	vmovapd YMMWORD PTR [rsp+0xa20],ymm0
  4264e3:	vmovapd YMMWORD PTR [rsp+0xa00],ymm0
  4264ec:	vmovapd YMMWORD PTR [rsp+0x9e0],ymm0
  4264f5:	vmovapd YMMWORD PTR [rsp+0x9c0],ymm0
  4264fe:	mov    r12,QWORD PTR [rbx+0x10]
  426502:	mov    r13,QWORD PTR [rbx+0x18]
  426506:	mov    rax,QWORD PTR [r12]
  42650a:	mov    QWORD PTR [rsp+0x28],rax
  42650f:	mov    rdi,rbx
  426512:	vzeroupper 
  426515:	call   421cb0 <isspace@plt+0x1e3a0>
  42651a:	mov    QWORD PTR [rsp+0x30],rax
  42651f:	mov    QWORD PTR [rsp+0x20],r13
  426524:	mov    rdi,r13
  426527:	call   41ee30 <isspace@plt+0x1b520>
  42652c:	mov    DWORD PTR [rsp+0x14],eax
  426530:	mov    r13,QWORD PTR [r15+0x30]
  426534:	mov    rdi,r12
  426537:	call   420b00 <isspace@plt+0x1d1f0>
  42653c:	mov    r12,rax
  42653f:	mov    QWORD PTR [rsp+0x18],rbx
  426544:	cmp    r13,rbx
  426547:	jne    426571 <isspace@plt+0x22c61>
  426549:	mov    rax,QWORD PTR [r15+0x9a0]
  426550:	mov    rsi,QWORD PTR [rax+0x20]
  426554:	test   rsi,rsi
  426557:	je     426571 <isspace@plt+0x22c61>
  426559:	lea    rdi,[rsp+0xa40]
  426561:	mov    edx,0x3fc
  426566:	call   4036c0 <__strcpy_chk@plt>
  42656b:	mov    r14d,0x1
  426571:	mov    rax,r14
  426574:	shl    rax,0x8
  426578:	sub    rax,r14
  42657b:	add    rax,rsp
  42657e:	add    rax,0xa40
  426584:	mov    QWORD PTR [rsp+0x38],rax
  426589:	test   r12,r12
  42658c:	lea    r14,[rip+0xb935]        # 431ec8 <isspace@plt+0x2e5b8>
  426593:	cmovne r14,r12
  426597:	mov    rdi,QWORD PTR [rsp+0x28]
  42659c:	call   410690 <isspace@plt+0xcd80>
  4265a1:	lea    r12,[rip+0xb92a]        # 431ed2 <isspace@plt+0x2e5c2>
  4265a8:	lea    r13,[rip+0xb4d4]        # 431a83 <isspace@plt+0x2e173>
  4265af:	test   al,al
  4265b1:	cmove  r12,r13
  4265b5:	mov    rdi,r15
  4265b8:	call   424800 <isspace@plt+0x20ef0>
  4265bd:	lea    rbx,[rip+0xb913]        # 431ed7 <isspace@plt+0x2e5c7>
  4265c4:	test   al,al
  4265c6:	cmove  rbx,r13
  4265ca:	lea    r8,[rip+0xb927]        # 431ef8 <isspace@plt+0x2e5e8>
  4265d1:	mov    esi,0xff
  4265d6:	mov    edx,0x1
  4265db:	mov    rcx,0xffffffffffffffff
  4265e2:	xor    eax,eax
  4265e4:	mov    rdi,QWORD PTR [rsp+0x38]
  4265e9:	mov    r9,r14
  4265ec:	push   rbx
  4265ed:	push   r12
  4265ef:	call   4030c0 <__snprintf_chk@plt>
  4265f4:	add    rsp,0x10
  4265f8:	mov    rdi,r15
  4265fb:	call   424da0 <isspace@plt+0x21490>
  426600:	mov    r14d,eax
  426603:	add    r15,0x8f0
  42660a:	mov    rdi,r15
  42660d:	call   404dd0 <isspace@plt+0x14c0>
  426612:	test   rax,rax
  426615:	je     42665b <isspace@plt+0x22d4b>
  426617:	mov    rbx,rax
  42661a:	cmp    BYTE PTR [rax],0x0
  42661d:	je     42665b <isspace@plt+0x22d4b>
  42661f:	lea    r8,[rip+0xa444]        # 430a6a <isspace@plt+0x2d15a>
  426626:	lea    rdi,[rsp+0x9c0]
  42662e:	mov    esi,0x20
  426633:	mov    edx,0x1
  426638:	mov    rcx,0xffffffffffffffff
  42663f:	xor    eax,eax
  426641:	mov    r9,rbx
  426644:	call   4030c0 <__snprintf_chk@plt>
  426649:	mov    r15d,0x1
  42664f:	mov    r12d,DWORD PTR [rsp+0x14]
  426654:	mov    r13,QWORD PTR [rsp+0x20]
  426659:	jmp    4266a0 <isspace@plt+0x22d90>
  42665b:	cmp    r14d,0xffffffff
  42665f:	mov    r12d,DWORD PTR [rsp+0x14]
  426664:	mov    r13,QWORD PTR [rsp+0x20]
  426669:	je     42669d <isspace@plt+0x22d8d>
  42666b:	lea    r8,[rip+0xb86b]        # 431edd <isspace@plt+0x2e5cd>
  426672:	lea    rdi,[rsp+0x9c0]
  42667a:	mov    esi,0x20
  42667f:	mov    edx,0x1
  426684:	mov    rcx,0xffffffffffffffff
  42668b:	xor    eax,eax
  42668d:	mov    r9d,r14d
  426690:	call   4030c0 <__snprintf_chk@plt>
  426695:	mov    r15d,0x1
  42669b:	jmp    4266a0 <isspace@plt+0x22d90>
  42669d:	xor    r15d,r15d
  4266a0:	mov    rdi,r13
  4266a3:	call   41f1e0 <isspace@plt+0x1b8d0>
  4266a8:	cmp    eax,0x2
  4266ab:	jl     426701 <isspace@plt+0x22df1>
  4266ad:	mov    ebx,eax
  4266af:	mov    rdi,r13
  4266b2:	call   41f750 <isspace@plt+0x1be40>
  4266b7:	mov    rdi,rax
  4266ba:	call   41f210 <isspace@plt+0x1b900>
  4266bf:	lea    r9d,[rax+0x1]
  4266c3:	lea    r14,[r15+0x1]
  4266c7:	shl    r15,0x5
  4266cb:	lea    rdi,[rsp+r15*1]
  4266cf:	add    rdi,0x9c0
  4266d6:	sub    rsp,0x8
  4266da:	lea    r8,[rip+0xb7f9]        # 431eda <isspace@plt+0x2e5ca>
  4266e1:	mov    esi,0x20
  4266e6:	mov    edx,0x1
  4266eb:	mov    rcx,0xffffffffffffffff
  4266f2:	xor    eax,eax
  4266f4:	push   rbx
  4266f5:	call   4030c0 <__snprintf_chk@plt>
  4266fa:	add    rsp,0x10
  4266fe:	mov    r15,r14
  426701:	mov    rdi,QWORD PTR [rsp+0x28]
  426706:	call   410a90 <isspace@plt+0xd180>
  42670b:	mov    rbx,rax
  42670e:	mov    rdi,r13
  426711:	call   41ec80 <isspace@plt+0x1b370>
  426716:	test   rbx,rbx
  426719:	je     42678e <isspace@plt+0x22e7e>
  42671b:	vmovq  xmm0,rax
  426720:	vmovdqa xmm1,XMMWORD PTR [rip+0xb768]        # 431e90 <isspace@plt+0x2e580>
  426728:	vpunpckldq xmm0,xmm0,xmm1
  42672c:	vmovapd xmm2,XMMWORD PTR [rip+0xb76c]        # 431ea0 <isspace@plt+0x2e590>
  426734:	vsubpd xmm0,xmm0,xmm2
  426738:	vhaddpd xmm0,xmm0,xmm0
  42673c:	vmovq  xmm3,rbx
  426741:	vpunpckldq xmm1,xmm3,xmm1
  426745:	vsubpd xmm1,xmm1,xmm2
  426749:	vhaddpd xmm1,xmm1,xmm1
  42674d:	vdivsd xmm0,xmm0,xmm1
  426751:	vmulsd xmm0,xmm0,QWORD PTR [rip+0xb757]        # 431eb0 <isspace@plt+0x2e5a0>
  426759:	vaddsd xmm0,xmm0,QWORD PTR [rip+0xb757]        # 431eb8 <isspace@plt+0x2e5a8>
  426761:	vmovsd xmm1,QWORD PTR [rip+0xb757]        # 431ec0 <isspace@plt+0x2e5b0>
  426769:	vsubsd xmm2,xmm0,xmm1
  42676d:	vcvttsd2si rax,xmm2
  426772:	movabs rcx,0x8000000000000000
  42677c:	xor    rcx,rax
  42677f:	vcvttsd2si r9,xmm0
  426784:	vucomisd xmm0,xmm1
  426788:	cmovae r9,rcx
  42678c:	jmp    426791 <isspace@plt+0x22e81>
  42678e:	xor    r9d,r9d
  426791:	mov    rax,r15
  426794:	shl    rax,0x5
  426798:	lea    rdi,[rsp+rax*1]
  42679c:	add    rdi,0x9c0
  4267a3:	lea    r8,[rip+0xb736]        # 431ee0 <isspace@plt+0x2e5d0>
  4267aa:	mov    esi,0x20
  4267af:	mov    edx,0x1
  4267b4:	mov    rcx,0xffffffffffffffff
  4267bb:	xor    eax,eax
  4267bd:	call   4030c0 <__snprintf_chk@plt>
  4267c2:	test   r12d,0x400
  4267c9:	jne    426854 <isspace@plt+0x22f44>
  4267cf:	add    r15,0x1
  4267d3:	mov    rax,QWORD PTR [rsp+0x18]
  4267d8:	mov    rdi,QWORD PTR [rax+0x18]
  4267dc:	call   41f750 <isspace@plt+0x1be40>
  4267e1:	mov    rbx,rax
  4267e4:	mov    rdi,rax
  4267e7:	call   41f850 <isspace@plt+0x1bf40>
  4267ec:	mov    r14,rax
  4267ef:	mov    rdi,rbx
  4267f2:	call   41f8a0 <isspace@plt+0x1bf90>
  4267f7:	mov    rbx,rax
  4267fa:	cmp    rax,0x10001
  426800:	jb     42681a <isspace@plt+0x22f0a>
  426802:	or     r12d,0x400
  426809:	mov    rax,QWORD PTR [rsp+0x18]
  42680e:	mov    rdi,QWORD PTR [rax+0x18]
  426812:	mov    esi,r12d
  426815:	call   41baf0 <isspace@plt+0x181e0>
  42681a:	shl    r15,0x5
  42681e:	lea    rdi,[rsp+r15*1]
  426822:	add    rdi,0x9c0
  426829:	sub    rsp,0x8
  42682d:	lea    r8,[rip+0xb6b2]        # 431ee6 <isspace@plt+0x2e5d6>
  426834:	mov    esi,0x20
  426839:	mov    edx,0x1
  42683e:	mov    rcx,0xffffffffffffffff
  426845:	xor    eax,eax
  426847:	mov    r9,r14
  42684a:	push   rbx
  42684b:	call   4030c0 <__snprintf_chk@plt>
  426850:	add    rsp,0x10
  426854:	lea    r10,[rsp+0xb3f]
  42685c:	cmp    BYTE PTR [rsp+0xb3f],0x0
  426864:	lea    rbx,[rip+0xb694]        # 431eff <isspace@plt+0x2e5ef>
  42686b:	mov    r11,rbx
  42686e:	lea    r12,[rip+0xb20e]        # 431a83 <isspace@plt+0x2e173>
  426875:	cmove  r11,r12
  426879:	cmp    BYTE PTR [rsp+0xc3e],0x0
  426881:	lea    r14,[rsp+0xc3e]
  426889:	mov    r15,rbx
  42688c:	cmove  r15,r12
  426890:	lea    r13,[rsp+0xd3d]
  426898:	cmp    BYTE PTR [rsp+0xd3d],0x0
  4268a0:	cmove  rbx,r12
  4268a4:	lea    r8,[rip+0xb644]        # 431eef <isspace@plt+0x2e5df>
  4268ab:	lea    rdi,[rsp+0x5a0]
  4268b3:	lea    r9,[rsp+0xa40]
  4268bb:	mov    esi,0x41c
  4268c0:	mov    edx,0x1
  4268c5:	mov    ecx,0x41c
  4268ca:	mov    eax,0x0
  4268cf:	push   r13
  4268d1:	push   rbx
  4268d2:	push   r14
  4268d4:	push   r15
  4268d6:	push   r10
  4268d8:	push   r11
  4268da:	call   4030c0 <__snprintf_chk@plt>
  4268df:	add    rsp,0x30
  4268e3:	mov    r14d,eax
  4268e6:	cmp    BYTE PTR [rsp+0x9e0],0x0
  4268ee:	lea    rbx,[rip+0xb61f]        # 431f14 <isspace@plt+0x2e604>
  4268f5:	mov    r11,rbx
  4268f8:	cmove  r11,r12
  4268fc:	cmp    BYTE PTR [rsp+0xa00],0x0
  426904:	lea    r15,[rsp+0xa00]
  42690c:	mov    r13,rbx
  42690f:	cmove  r13,r12
  426913:	lea    r10,[rsp+0xa20]
  42691b:	cmp    BYTE PTR [rsp+0xa20],0x0
  426923:	cmove  rbx,r12
  426927:	lea    r8,[rip+0xb5d6]        # 431f04 <isspace@plt+0x2e5f4>
  42692e:	lea    r12,[rsp+0x500]
  426936:	lea    r9,[rsp+0x9c0]
  42693e:	mov    esi,0xa0
  426943:	mov    edx,0x1
  426948:	mov    ecx,0xa0
  42694d:	mov    eax,0x0
  426952:	mov    rdi,r12
  426955:	push   r10
  426957:	push   rbx
  426958:	push   r15
  42695a:	push   r13
  42695c:	lea    rbx,[rsp+0xa00]
  426964:	push   rbx
  426965:	push   r11
  426967:	call   4030c0 <__snprintf_chk@plt>
  42696c:	add    rsp,0x30
  426970:	mov    ebx,eax
  426972:	or     eax,r14d
  426975:	js     4269fc <isspace@plt+0x230ec>
  42697b:	movsxd rsi,r14d
  42697e:	lea    r14,[rsp+0x5a0]
  426986:	mov    rdi,r14
  426989:	call   417900 <isspace@plt+0x13ff0>
  42698e:	mov    r15,r12
  426991:	mov    r12d,eax
  426994:	movsxd rsi,ebx
  426997:	mov    rdi,r15
  42699a:	call   417900 <isspace@plt+0x13ff0>
  42699f:	mov    rbx,QWORD PTR [rsp+0x30]
  4269a4:	sub    ebx,r12d
  4269a7:	sub    ebx,eax
  4269a9:	test   ebx,ebx
  4269ab:	mov    eax,0x1
  4269b0:	cmovle ebx,eax
  4269b3:	sub    rsp,0x8
  4269b7:	lea    r10,[rip+0xa357]        # 430d15 <isspace@plt+0x2d405>
  4269be:	lea    r8,[rip+0xb554]        # 431f19 <isspace@plt+0x2e609>
  4269c5:	lea    r12,[rsp+0x48]
  4269ca:	mov    esi,0x4bd
  4269cf:	mov    edx,0x1
  4269d4:	mov    ecx,0x4bd
  4269d9:	xor    eax,eax
  4269db:	mov    rdi,r12
  4269de:	mov    r9,r14
  4269e1:	push   r15
  4269e3:	push   r10
  4269e5:	push   rbx
  4269e6:	call   4030c0 <__snprintf_chk@plt>
  4269eb:	add    rsp,0x20
  4269ef:	mov    rdi,QWORD PTR [rsp+0x18]
  4269f4:	mov    rsi,r12
  4269f7:	call   420ba0 <isspace@plt+0x1d290>
  4269fc:	mov    rax,QWORD PTR fs:0x28
  426a05:	cmp    rax,QWORD PTR [rsp+0xe40]
  426a0d:	jne    426a1e <isspace@plt+0x2310e>
  426a0f:	lea    rsp,[rbp-0x28]
  426a13:	pop    rbx
  426a14:	pop    r12
  426a16:	pop    r13
  426a18:	pop    r14
  426a1a:	pop    r15
  426a1c:	pop    rbp
  426a1d:	ret    
  426a1e:	call   403280 <__stack_chk_fail@plt>
  426a23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426a2d:	nop    DWORD PTR [rax]
  426a30:	push   rax
  426a31:	mov    rax,QWORD PTR fs:0x28
  426a3a:	mov    QWORD PTR [rsp],rax
  426a3e:	mov    rax,QWORD PTR fs:0x28
  426a47:	cmp    rax,QWORD PTR [rsp]
  426a4b:	jne    426a4f <isspace@plt+0x2313f>
  426a4d:	pop    rax
  426a4e:	ret    
  426a4f:	call   403280 <__stack_chk_fail@plt>
  426a54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426a5e:	xchg   ax,ax
  426a60:	push   r15
  426a62:	push   r14
  426a64:	push   r12
  426a66:	push   rbx
  426a67:	push   rax
  426a68:	mov    r14,rdi
  426a6b:	mov    rax,QWORD PTR fs:0x28
  426a74:	mov    QWORD PTR [rsp],rax
  426a78:	lea    rsi,[rip+0xa1]        # 426b20 <isspace@plt+0x23210>
  426a7f:	call   404070 <isspace@plt+0x760>
  426a84:	xor    esi,esi
  426a86:	mov    rdi,r14
  426a89:	call   403d20 <isspace@plt+0x410>
  426a8e:	test   rax,rax
  426a91:	je     426afa <isspace@plt+0x231ea>
  426a93:	mov    rbx,rax
  426a96:	xor    r15d,r15d
  426a99:	xor    r12d,r12d
  426a9c:	nop    DWORD PTR [rax+0x0]
  426aa0:	mov    rdi,rbx
  426aa3:	call   417460 <isspace@plt+0x13b50>
  426aa8:	test   rax,rax
  426aab:	je     426ad3 <isspace@plt+0x231c3>
  426aad:	test   r15,r15
  426ab0:	je     426ae0 <isspace@plt+0x231d0>
  426ab2:	mov    rdi,r15
  426ab5:	mov    rsi,rbx
  426ab8:	call   417610 <isspace@plt+0x13d00>
  426abd:	test   al,al
  426abf:	je     426ae0 <isspace@plt+0x231d0>
  426ac1:	mov    rdi,r15
  426ac4:	mov    rsi,rbx
  426ac7:	call   417500 <isspace@plt+0x13bf0>
  426acc:	mov    QWORD PTR [r15],rax
  426acf:	mov    QWORD PTR [r15+0x8],rdx
  426ad3:	mov    rdi,r14
  426ad6:	mov    rsi,r12
  426ad9:	call   403f10 <isspace@plt+0x600>
  426ade:	jmp    426ae7 <isspace@plt+0x231d7>
  426ae0:	add    r12,0x1
  426ae4:	mov    r15,rbx
  426ae7:	mov    rdi,r14
  426aea:	mov    rsi,r12
  426aed:	call   403d20 <isspace@plt+0x410>
  426af2:	mov    rbx,rax
  426af5:	test   rax,rax
  426af8:	jne    426aa0 <isspace@plt+0x23190>
  426afa:	mov    rax,QWORD PTR fs:0x28
  426b03:	cmp    rax,QWORD PTR [rsp]
  426b07:	jne    426b15 <isspace@plt+0x23205>
  426b09:	add    rsp,0x8
  426b0d:	pop    rbx
  426b0e:	pop    r12
  426b10:	pop    r14
  426b12:	pop    r15
  426b14:	ret    
  426b15:	call   403280 <__stack_chk_fail@plt>
  426b1a:	nop    WORD PTR [rax+rax*1+0x0]
  426b20:	push   r15
  426b22:	push   r14
  426b24:	push   rbx
  426b25:	sub    rsp,0x10
  426b29:	mov    r14,rsi
  426b2c:	mov    r15,rdi
  426b2f:	mov    rax,QWORD PTR fs:0x28
  426b38:	mov    QWORD PTR [rsp+0x8],rax
  426b3d:	call   417400 <isspace@plt+0x13af0>
  426b42:	mov    ebx,eax
  426b44:	mov    rdi,r14
  426b47:	call   417400 <isspace@plt+0x13af0>
  426b4c:	mov    ecx,eax
  426b4e:	test   bl,bl
  426b50:	je     426b7f <isspace@plt+0x2326f>
  426b52:	mov    eax,0xffffffff
  426b57:	test   cl,cl
  426b59:	je     426b82 <isspace@plt+0x23272>
  426b5b:	mov    rcx,QWORD PTR [r14]
  426b5e:	cmp    QWORD PTR [r15],rcx
  426b61:	jb     426b82 <isspace@plt+0x23272>
  426b63:	mov    eax,0x1
  426b68:	jne    426b82 <isspace@plt+0x23272>
  426b6a:	mov    rax,QWORD PTR [r15+0x8]
  426b6e:	xor    ecx,ecx
  426b70:	cmp    rax,QWORD PTR [r14+0x8]
  426b74:	setae  cl
  426b77:	lea    eax,[rcx+rcx*1]
  426b7a:	add    eax,0xffffffff
  426b7d:	jmp    426b82 <isspace@plt+0x23272>
  426b7f:	movzx  eax,cl
  426b82:	mov    rcx,QWORD PTR fs:0x28
  426b8b:	cmp    rcx,QWORD PTR [rsp+0x8]
  426b90:	jne    426b9c <isspace@plt+0x2328c>
  426b92:	add    rsp,0x10
  426b96:	pop    rbx
  426b97:	pop    r14
  426b99:	pop    r15
  426b9b:	ret    
  426b9c:	call   403280 <__stack_chk_fail@plt>
  426ba1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426bab:	nop    DWORD PTR [rax+rax*1+0x0]
  426bb0:	push   rax
  426bb1:	mov    rax,QWORD PTR fs:0x28
  426bba:	mov    QWORD PTR [rsp],rax
  426bbe:	mov    esi,0x10
  426bc3:	call   403a50 <isspace@plt+0x140>
  426bc8:	mov    rax,QWORD PTR fs:0x28
  426bd1:	cmp    rax,QWORD PTR [rsp]
  426bd5:	jne    426bd9 <isspace@plt+0x232c9>
  426bd7:	pop    rax
  426bd8:	ret    
  426bd9:	call   403280 <__stack_chk_fail@plt>
  426bde:	xchg   ax,ax
  426be0:	push   rax
  426be1:	mov    rax,QWORD PTR fs:0x28
  426bea:	mov    QWORD PTR [rsp],rax
  426bee:	test   rdi,rdi
  426bf1:	je     426c09 <isspace@plt+0x232f9>
  426bf3:	call   403b50 <isspace@plt+0x240>
  426bf8:	mov    rax,QWORD PTR fs:0x28
  426c01:	cmp    rax,QWORD PTR [rsp]
  426c05:	jne    426c1a <isspace@plt+0x2330a>
  426c07:	pop    rax
  426c08:	ret    
  426c09:	mov    rax,QWORD PTR fs:0x28
  426c12:	cmp    rax,QWORD PTR [rsp]
  426c16:	jne    426c1a <isspace@plt+0x2330a>
  426c18:	pop    rax
  426c19:	ret    
  426c1a:	call   403280 <__stack_chk_fail@plt>
  426c1f:	nop
  426c20:	push   rax
  426c21:	mov    rax,QWORD PTR fs:0x28
  426c2a:	mov    QWORD PTR [rsp],rax
  426c2e:	mov    eax,DWORD PTR [rdi+0x948]
  426c34:	mov    rcx,QWORD PTR fs:0x28
  426c3d:	cmp    rcx,QWORD PTR [rsp]
  426c41:	jne    426c45 <isspace@plt+0x23335>
  426c43:	pop    rcx
  426c44:	ret    
  426c45:	call   403280 <__stack_chk_fail@plt>
  426c4a:	nop    WORD PTR [rax+rax*1+0x0]
  426c50:	push   rax
  426c51:	mov    rax,QWORD PTR fs:0x28
  426c5a:	mov    QWORD PTR [rsp],rax
  426c5e:	cmp    esi,0x1b
  426c61:	ja     426c69 <isspace@plt+0x23359>
  426c63:	mov    DWORD PTR [rdi+0x948],esi
  426c69:	mov    rax,QWORD PTR fs:0x28
  426c72:	cmp    rax,QWORD PTR [rsp]
  426c76:	jne    426c7a <isspace@plt+0x2336a>
  426c78:	pop    rax
  426c79:	ret    
  426c7a:	call   403280 <__stack_chk_fail@plt>
  426c7f:	nop
  426c80:	push   rbx
  426c81:	sub    rsp,0x10
  426c85:	mov    eax,edx
  426c87:	mov    rbx,rdi
  426c8a:	mov    rcx,QWORD PTR fs:0x28
  426c93:	mov    QWORD PTR [rsp+0x8],rcx
  426c98:	mov    rcx,QWORD PTR [rsi]
  426c9b:	mov    rdx,QWORD PTR [rcx+0x30]
  426c9f:	test   rdx,rdx
  426ca2:	je     426ccb <isspace@plt+0x233bb>
  426ca4:	cmp    eax,0x1
  426ca7:	jne    426caf <isspace@plt+0x2339f>
  426ca9:	add    rdx,0x68
  426cad:	jmp    426ccd <isspace@plt+0x233bd>
  426caf:	cmp    eax,0x1b
  426cb2:	ja     426ccb <isspace@plt+0x233bb>
  426cb4:	mov    rcx,QWORD PTR [rdx+0x10]
  426cb8:	mov    eax,eax
  426cba:	shl    rax,0x5
  426cbe:	lea    rdx,[rcx+rax*1]
  426cc2:	add    rdx,0xb8
  426cc9:	jmp    426ccd <isspace@plt+0x233bd>
  426ccb:	xor    edx,edx
  426ccd:	mov    rdi,rbx
  426cd0:	call   426d00 <isspace@plt+0x233f0>
  426cd5:	mov    rax,QWORD PTR fs:0x28
  426cde:	cmp    rax,QWORD PTR [rsp+0x8]
  426ce3:	jne    426cee <isspace@plt+0x233de>
  426ce5:	mov    rax,rbx
  426ce8:	add    rsp,0x10
  426cec:	pop    rbx
  426ced:	ret    
  426cee:	call   403280 <__stack_chk_fail@plt>
  426cf3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426cfd:	nop    DWORD PTR [rax]
  426d00:	push   rbp
  426d01:	push   r15
  426d03:	push   r14
  426d05:	push   r13
  426d07:	push   r12
  426d09:	push   rbx
  426d0a:	sub    rsp,0x18
  426d0e:	mov    r15,rdx
  426d11:	mov    rbx,rsi
  426d14:	mov    r14,rdi
  426d17:	mov    rax,QWORD PTR fs:0x28
  426d20:	mov    QWORD PTR [rsp+0x10],rax
  426d25:	mov    esi,0x10
  426d2a:	call   403a50 <isspace@plt+0x140>
  426d2f:	test   r15,r15
  426d32:	je     426da7 <isspace@plt+0x23497>
  426d34:	mov    r12,QWORD PTR [rbx+0x18]
  426d38:	mov    rdi,r15
  426d3b:	call   403f90 <isspace@plt+0x680>
  426d40:	mov    r13,rax
  426d43:	mov    rdi,r14
  426d46:	mov    rsi,rax
  426d49:	call   403ad0 <isspace@plt+0x1c0>
  426d4e:	test   r13,r13
  426d51:	je     426d9f <isspace@plt+0x2348f>
  426d53:	xor    ebx,ebx
  426d55:	mov    rbp,rsp
  426d58:	nop    DWORD PTR [rax+rax*1+0x0]
  426d60:	mov    rdi,r15
  426d63:	mov    rsi,rbx
  426d66:	call   403d20 <isspace@plt+0x410>
  426d6b:	mov    rdi,r12
  426d6e:	mov    rsi,rax
  426d71:	call   420100 <isspace@plt+0x1c7f0>
  426d76:	mov    QWORD PTR [rsp],rax
  426d7a:	mov    QWORD PTR [rsp+0x8],rdx
  426d7f:	mov    rdi,rbp
  426d82:	call   417400 <isspace@plt+0x13af0>
  426d87:	test   al,al
  426d89:	je     426d96 <isspace@plt+0x23486>
  426d8b:	mov    rdi,r14
  426d8e:	mov    rsi,rbp
  426d91:	call   403d70 <isspace@plt+0x460>
  426d96:	add    rbx,0x1
  426d9a:	cmp    r13,rbx
  426d9d:	jne    426d60 <isspace@plt+0x23450>
  426d9f:	mov    rdi,r14
  426da2:	call   426a60 <isspace@plt+0x23150>
  426da7:	mov    rax,QWORD PTR fs:0x28
  426db0:	cmp    rax,QWORD PTR [rsp+0x10]
  426db5:	jne    426dc9 <isspace@plt+0x234b9>
  426db7:	mov    rax,r14
  426dba:	add    rsp,0x18
  426dbe:	pop    rbx
  426dbf:	pop    r12
  426dc1:	pop    r13
  426dc3:	pop    r14
  426dc5:	pop    r15
  426dc7:	pop    rbp
  426dc8:	ret    
  426dc9:	call   403280 <__stack_chk_fail@plt>
  426dce:	xchg   ax,ax
  426dd0:	push   rbp
  426dd1:	push   r15
  426dd3:	push   r14
  426dd5:	push   r13
  426dd7:	push   r12
  426dd9:	push   rbx
  426dda:	sub    rsp,0x18
  426dde:	mov    rax,QWORD PTR fs:0x28
  426de7:	mov    QWORD PTR [rsp+0x10],rax
  426dec:	mov    rax,QWORD PTR [rdi]
  426def:	mov    r14,QWORD PTR [rax+0x30]
  426df3:	test   r14,r14
  426df6:	je     426e81 <isspace@plt+0x23571>
  426dfc:	mov    r15,rdx
  426dff:	mov    rbx,rdi
  426e02:	cmp    esi,0x1
  426e05:	jne    426e0d <isspace@plt+0x234fd>
  426e07:	add    r14,0x68
  426e0b:	jmp    426e27 <isspace@plt+0x23517>
  426e0d:	cmp    esi,0x1b
  426e10:	ja     426e81 <isspace@plt+0x23571>
  426e12:	mov    rax,QWORD PTR [r14+0x10]
  426e16:	mov    ecx,esi
  426e18:	shl    rcx,0x5
  426e1c:	lea    r14,[rax+rcx*1]
  426e20:	add    r14,0xb8
  426e27:	mov    rdi,r14
  426e2a:	call   403cc0 <isspace@plt+0x3b0>
  426e2f:	mov    r12,QWORD PTR [rbx+0x18]
  426e33:	mov    rdi,r15
  426e36:	call   403f90 <isspace@plt+0x680>
  426e3b:	test   rax,rax
  426e3e:	je     426e81 <isspace@plt+0x23571>
  426e40:	mov    r13,rax
  426e43:	xor    ebx,ebx
  426e45:	mov    rbp,rsp
  426e48:	nop    DWORD PTR [rax+rax*1+0x0]
  426e50:	mov    rdi,r15
  426e53:	mov    rsi,rbx
  426e56:	call   403d20 <isspace@plt+0x410>
  426e5b:	mov    rdi,r12
  426e5e:	mov    rsi,rax
  426e61:	mov    rdx,rbp
  426e64:	call   4201a0 <isspace@plt+0x1c890>
  426e69:	test   al,al
  426e6b:	je     426e78 <isspace@plt+0x23568>
  426e6d:	mov    rdi,r14
  426e70:	mov    rsi,rbp
  426e73:	call   403d70 <isspace@plt+0x460>
  426e78:	add    rbx,0x1
  426e7c:	cmp    r13,rbx
  426e7f:	jne    426e50 <isspace@plt+0x23540>
  426e81:	mov    rax,QWORD PTR fs:0x28
  426e8a:	cmp    rax,QWORD PTR [rsp+0x10]
  426e8f:	jne    426ea0 <isspace@plt+0x23590>
  426e91:	add    rsp,0x18
  426e95:	pop    rbx
  426e96:	pop    r12
  426e98:	pop    r13
  426e9a:	pop    r14
  426e9c:	pop    r15
  426e9e:	pop    rbp
  426e9f:	ret    
  426ea0:	call   403280 <__stack_chk_fail@plt>
  426ea5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426eaf:	nop
  426eb0:	push   r15
  426eb2:	push   r14
  426eb4:	push   rbx
  426eb5:	sub    rsp,0x30
  426eb9:	mov    r14,rsi
  426ebc:	mov    rbx,rdi
  426ebf:	mov    rax,QWORD PTR fs:0x28
  426ec8:	mov    QWORD PTR [rsp+0x28],rax
  426ecd:	lea    r15,[rsp+0x8]
  426ed2:	mov    esi,0x10
  426ed7:	mov    rdi,r15
  426eda:	call   403a50 <isspace@plt+0x140>
  426edf:	mov    esi,0x20
  426ee4:	mov    rdi,rbx
  426ee7:	call   403a50 <isspace@plt+0x140>
  426eec:	mov    rdi,rbx
  426eef:	mov    rsi,r14
  426ef2:	call   403ad0 <isspace@plt+0x1c0>
  426ef7:	mov    rdi,rbx
  426efa:	mov    rsi,r15
  426efd:	call   403d70 <isspace@plt+0x460>
  426f02:	add    rbx,0x20
  426f06:	mov    esi,0x20
  426f0b:	mov    rdi,rbx
  426f0e:	call   403a50 <isspace@plt+0x140>
  426f13:	mov    rdi,rbx
  426f16:	mov    rsi,r14
  426f19:	call   403ad0 <isspace@plt+0x1c0>
  426f1e:	mov    rax,QWORD PTR fs:0x28
  426f27:	cmp    rax,QWORD PTR [rsp+0x28]
  426f2c:	jne    426f38 <isspace@plt+0x23628>
  426f2e:	add    rsp,0x30
  426f32:	pop    rbx
  426f33:	pop    r14
  426f35:	pop    r15
  426f37:	ret    
  426f38:	call   403280 <__stack_chk_fail@plt>
  426f3d:	nop    DWORD PTR [rax]
  426f40:	push   r15
  426f42:	push   r14
  426f44:	push   rbx
  426f45:	sub    rsp,0x10
  426f49:	mov    r15,rdi
  426f4c:	mov    rax,QWORD PTR fs:0x28
  426f55:	mov    QWORD PTR [rsp+0x8],rax
  426f5a:	call   403f90 <isspace@plt+0x680>
  426f5f:	test   rax,rax
  426f62:	je     426f8c <isspace@plt+0x2367c>
  426f64:	mov    r14,rax
  426f67:	xor    ebx,ebx
  426f69:	nop    DWORD PTR [rax+0x0]
  426f70:	mov    rdi,r15
  426f73:	mov    rsi,rbx
  426f76:	call   403d20 <isspace@plt+0x410>
  426f7b:	mov    rdi,rax
  426f7e:	call   403b50 <isspace@plt+0x240>
  426f83:	add    rbx,0x1
  426f87:	cmp    r14,rbx
  426f8a:	jne    426f70 <isspace@plt+0x23660>
  426f8c:	mov    rdi,r15
  426f8f:	call   403b50 <isspace@plt+0x240>
  426f94:	add    r15,0x20
  426f98:	mov    rdi,r15
  426f9b:	call   403f90 <isspace@plt+0x680>
  426fa0:	test   rax,rax
  426fa3:	je     426fcc <isspace@plt+0x236bc>
  426fa5:	mov    r14,rax
  426fa8:	xor    ebx,ebx
  426faa:	nop    WORD PTR [rax+rax*1+0x0]
  426fb0:	mov    rdi,r15
  426fb3:	mov    rsi,rbx
  426fb6:	call   403d20 <isspace@plt+0x410>
  426fbb:	mov    rdi,rax
  426fbe:	call   403b50 <isspace@plt+0x240>
  426fc3:	add    rbx,0x1
  426fc7:	cmp    r14,rbx
  426fca:	jne    426fb0 <isspace@plt+0x236a0>
  426fcc:	mov    rdi,r15
  426fcf:	call   403b50 <isspace@plt+0x240>
  426fd4:	mov    rax,QWORD PTR fs:0x28
  426fdd:	cmp    rax,QWORD PTR [rsp+0x8]
  426fe2:	jne    426fee <isspace@plt+0x236de>
  426fe4:	add    rsp,0x10
  426fe8:	pop    rbx
  426fe9:	pop    r14
  426feb:	pop    r15
  426fed:	ret    
  426fee:	call   403280 <__stack_chk_fail@plt>
  426ff3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426ffd:	nop    DWORD PTR [rax]
  427000:	push   rbp
  427001:	push   r15
  427003:	push   r14
  427005:	push   r13
  427007:	push   r12
  427009:	push   rbx
  42700a:	sub    rsp,0x68
  42700e:	mov    rbx,rdi
  427011:	mov    rax,QWORD PTR fs:0x28
  42701a:	mov    QWORD PTR [rsp+0x60],rax
  42701f:	mov    rax,QWORD PTR [rdi+0x30]
  427023:	mov    rsi,QWORD PTR [rax+0x18]
  427027:	lea    rdi,[rsp+0x10]
  42702c:	call   420400 <isspace@plt+0x1caf0>
  427031:	mov    r15,QWORD PTR [rbx+0x30]
  427035:	lea    r12,[r15+0x20]
  427039:	mov    rdi,r12
  42703c:	call   4041f0 <isspace@plt+0x8e0>
  427041:	test   rax,rax
  427044:	mov    QWORD PTR [rsp+0x8],r12
  427049:	je     4270e1 <isspace@plt+0x237d1>
  42704f:	lea    rbx,[rsp+0x30]
  427054:	mov    rdi,rbx
  427057:	mov    rsi,r15
  42705a:	mov    rdx,rax
  42705d:	call   426d00 <isspace@plt+0x233f0>
  427062:	mov    rdi,rbx
  427065:	call   403f90 <isspace@plt+0x680>
  42706a:	mov    r12,rax
  42706d:	lea    rdi,[rsp+0x10]
  427072:	call   403f90 <isspace@plt+0x680>
  427077:	cmp    r12,rax
  42707a:	jne    4270d2 <isspace@plt+0x237c2>
  42707c:	test   r12,r12
  42707f:	je     4270c1 <isspace@plt+0x237b1>
  427081:	xor    ebx,ebx
  427083:	lea    r13,[rsp+0x30]
  427088:	lea    r14,[rsp+0x10]
  42708d:	nop    DWORD PTR [rax]
  427090:	mov    rdi,r13
  427093:	mov    rsi,rbx
  427096:	call   403d20 <isspace@plt+0x410>
  42709b:	mov    rbp,rax
  42709e:	mov    rdi,r14
  4270a1:	mov    rsi,rbx
  4270a4:	call   403d20 <isspace@plt+0x410>
  4270a9:	mov    rdi,rbp
  4270ac:	mov    rsi,rax
  4270af:	call   4176d0 <isspace@plt+0x13dc0>
  4270b4:	test   al,al
  4270b6:	je     4270d2 <isspace@plt+0x237c2>
  4270b8:	add    rbx,0x1
  4270bc:	cmp    rbx,r12
  4270bf:	jb     427090 <isspace@plt+0x23780>
  4270c1:	lea    rdi,[rsp+0x30]
  4270c6:	call   403b50 <isspace@plt+0x240>
  4270cb:	mov    bl,0x1
  4270cd:	jmp    4271e2 <isspace@plt+0x238d2>
  4270d2:	lea    rdi,[rsp+0x30]
  4270d7:	call   403b50 <isspace@plt+0x240>
  4270dc:	mov    r12,QWORD PTR [rsp+0x8]
  4270e1:	lea    r14,[r15+0x40]
  4270e5:	mov    rdi,r14
  4270e8:	call   403f90 <isspace@plt+0x680>
  4270ed:	test   rax,rax
  4270f0:	je     42711c <isspace@plt+0x2380c>
  4270f2:	mov    rbp,rax
  4270f5:	xor    ebx,ebx
  4270f7:	nop    WORD PTR [rax+rax*1+0x0]
  427100:	mov    rdi,r14
  427103:	mov    rsi,rbx
  427106:	call   403d20 <isspace@plt+0x410>
  42710b:	mov    rdi,rax
  42710e:	call   403b50 <isspace@plt+0x240>
  427113:	add    rbx,0x1
  427117:	cmp    rbp,rbx
  42711a:	jne    427100 <isspace@plt+0x237f0>
  42711c:	mov    rdi,r14
  42711f:	call   403cc0 <isspace@plt+0x3b0>
  427124:	lea    rdi,[rsp+0x30]
  427129:	mov    esi,0x10
  42712e:	call   403a50 <isspace@plt+0x140>
  427133:	mov    rdi,r12
  427136:	call   403f90 <isspace@plt+0x680>
  42713b:	mov    rbx,rax
  42713e:	mov    rdi,r12
  427141:	call   403fc0 <isspace@plt+0x6b0>
  427146:	cmp    rbx,rax
  427149:	jb     42716c <isspace@plt+0x2385c>
  42714b:	xor    esi,esi
  42714d:	mov    rdi,r12
  427150:	call   403d20 <isspace@plt+0x410>
  427155:	vmovups ymm0,YMMWORD PTR [rax]
  427159:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  42715f:	xor    esi,esi
  427161:	mov    rdi,r12
  427164:	vzeroupper 
  427167:	call   403f10 <isspace@plt+0x600>
  42716c:	lea    rdi,[rsp+0x30]
  427171:	call   403cc0 <isspace@plt+0x3b0>
  427176:	mov    r15,QWORD PTR [r15+0x18]
  42717a:	lea    rdi,[rsp+0x10]
  42717f:	call   403f90 <isspace@plt+0x680>
  427184:	test   rax,rax
  427187:	je     4271d1 <isspace@plt+0x238c1>
  427189:	mov    r12,rax
  42718c:	xor    ebx,ebx
  42718e:	lea    r13,[rsp+0x10]
  427193:	lea    rbp,[rsp+0x50]
  427198:	lea    r14,[rsp+0x30]
  42719d:	nop    DWORD PTR [rax]
  4271a0:	mov    rdi,r13
  4271a3:	mov    rsi,rbx
  4271a6:	call   403d20 <isspace@plt+0x410>
  4271ab:	mov    rdi,r15
  4271ae:	mov    rsi,rax
  4271b1:	mov    rdx,rbp
  4271b4:	call   4201a0 <isspace@plt+0x1c890>
  4271b9:	test   al,al
  4271bb:	je     4271c8 <isspace@plt+0x238b8>
  4271bd:	mov    rdi,r14
  4271c0:	mov    rsi,rbp
  4271c3:	call   403d70 <isspace@plt+0x460>
  4271c8:	add    rbx,0x1
  4271cc:	cmp    r12,rbx
  4271cf:	jne    4271a0 <isspace@plt+0x23890>
  4271d1:	lea    rsi,[rsp+0x30]
  4271d6:	mov    rdi,QWORD PTR [rsp+0x8]
  4271db:	call   4040d0 <isspace@plt+0x7c0>
  4271e0:	mov    ebx,eax
  4271e2:	lea    rdi,[rsp+0x10]
  4271e7:	call   403b50 <isspace@plt+0x240>
  4271ec:	mov    rax,QWORD PTR fs:0x28
  4271f5:	cmp    rax,QWORD PTR [rsp+0x60]
  4271fa:	jne    42720d <isspace@plt+0x238fd>
  4271fc:	mov    eax,ebx
  4271fe:	add    rsp,0x68
  427202:	pop    rbx
  427203:	pop    r12
  427205:	pop    r13
  427207:	pop    r14
  427209:	pop    r15
  42720b:	pop    rbp
  42720c:	ret    
  42720d:	call   403280 <__stack_chk_fail@plt>
  427212:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42721c:	nop    DWORD PTR [rax+0x0]
  427220:	push   rbp
  427221:	push   r15
  427223:	push   r14
  427225:	push   r13
  427227:	push   r12
  427229:	push   rbx
  42722a:	sub    rsp,0x78
  42722e:	mov    rax,QWORD PTR fs:0x28
  427237:	mov    QWORD PTR [rsp+0x70],rax
  42723c:	mov    r12,QWORD PTR [rdi+0x30]
  427240:	mov    rbx,QWORD PTR [r12+0x18]
  427245:	lea    rdi,[rsp+0x50]
  42724a:	mov    rsi,rbx
  42724d:	call   420400 <isspace@plt+0x1caf0>
  427252:	mov    rdi,rbx
  427255:	call   41f750 <isspace@plt+0x1be40>
  42725a:	mov    rdi,rax
  42725d:	call   41fd80 <isspace@plt+0x1c470>
  427262:	mov    ebp,eax
  427264:	lea    r15,[r12+0x20]
  427269:	mov    rdi,r15
  42726c:	call   4041f0 <isspace@plt+0x8e0>
  427271:	test   rax,rax
  427274:	je     42737c <isspace@plt+0x23a6c>
  42727a:	mov    BYTE PTR [rsp+0x7],bpl
  42727f:	mov    QWORD PTR [rsp+0x8],rbx
  427284:	lea    rbx,[rsp+0x30]
  427289:	mov    rdi,rbx
  42728c:	mov    rsi,r12
  42728f:	mov    rdx,rax
  427292:	call   426d00 <isspace@plt+0x233f0>
  427297:	mov    rdi,rbx
  42729a:	call   403f90 <isspace@plt+0x680>
  42729f:	mov    rbx,rax
  4272a2:	lea    rdi,[rsp+0x50]
  4272a7:	call   403f90 <isspace@plt+0x680>
  4272ac:	cmp    rbx,rax
  4272af:	jne    427380 <isspace@plt+0x23a70>
  4272b5:	test   rbx,rbx
  4272b8:	je     427307 <isspace@plt+0x239f7>
  4272ba:	xor    ebp,ebp
  4272bc:	lea    r14,[rsp+0x50]
  4272c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4272cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4272d0:	lea    rdi,[rsp+0x30]
  4272d5:	mov    rsi,rbp
  4272d8:	call   403d20 <isspace@plt+0x410>
  4272dd:	mov    r13,rax
  4272e0:	mov    rdi,r14
  4272e3:	mov    rsi,rbp
  4272e6:	call   403d20 <isspace@plt+0x410>
  4272eb:	mov    rdi,r13
  4272ee:	mov    rsi,rax
  4272f1:	call   4176d0 <isspace@plt+0x13dc0>
  4272f6:	test   al,al
  4272f8:	je     427380 <isspace@plt+0x23a70>
  4272fe:	add    rbp,0x1
  427302:	cmp    rbp,rbx
  427305:	jb     4272d0 <isspace@plt+0x239c0>
  427307:	lea    rdi,[rsp+0x30]
  42730c:	call   403b50 <isspace@plt+0x240>
  427311:	mov    rdi,r15
  427314:	call   403f90 <isspace@plt+0x680>
  427319:	cmp    rax,0x2
  42731d:	jb     42737c <isspace@plt+0x23a6c>
  42731f:	lea    r13,[r12+0x40]
  427324:	lea    rbx,[rsp+0x10]
  427329:	mov    bpl,BYTE PTR [rsp+0x7]
  42732e:	xchg   ax,ax
  427330:	mov    rdi,r15
  427333:	call   4041a0 <isspace@plt+0x890>
  427338:	mov    rdi,r13
  42733b:	mov    rsi,rax
  42733e:	call   4040d0 <isspace@plt+0x7c0>
  427343:	mov    rdi,r15
  427346:	call   4041f0 <isspace@plt+0x8e0>
  42734b:	mov    rdi,rbx
  42734e:	mov    rsi,r12
  427351:	mov    rdx,rax
  427354:	call   426d00 <isspace@plt+0x233f0>
  427359:	mov    rdi,rbx
  42735c:	call   403f90 <isspace@plt+0x680>
  427361:	test   rax,rax
  427364:	jne    4273cc <isspace@plt+0x23abc>
  427366:	mov    rdi,rbx
  427369:	call   403b50 <isspace@plt+0x240>
  42736e:	mov    rdi,r15
  427371:	call   403f90 <isspace@plt+0x680>
  427376:	cmp    rax,0x2
  42737a:	jae    427330 <isspace@plt+0x23a20>
  42737c:	xor    ebx,ebx
  42737e:	jmp    4273a1 <isspace@plt+0x23a91>
  427380:	movzx  edx,BYTE PTR [rsp+0x7]
  427385:	lea    rbx,[rsp+0x30]
  42738a:	mov    rdi,QWORD PTR [rsp+0x8]
  42738f:	mov    rsi,rbx
  427392:	call   420250 <isspace@plt+0x1c940>
  427397:	mov    rdi,rbx
  42739a:	call   403b50 <isspace@plt+0x240>
  42739f:	mov    bl,0x1
  4273a1:	lea    rdi,[rsp+0x50]
  4273a6:	call   403b50 <isspace@plt+0x240>
  4273ab:	mov    rax,QWORD PTR fs:0x28
  4273b4:	cmp    rax,QWORD PTR [rsp+0x70]
  4273b9:	jne    4273d7 <isspace@plt+0x23ac7>
  4273bb:	mov    eax,ebx
  4273bd:	add    rsp,0x78
  4273c1:	pop    rbx
  4273c2:	pop    r12
  4273c4:	pop    r13
  4273c6:	pop    r14
  4273c8:	pop    r15
  4273ca:	pop    rbp
  4273cb:	ret    
  4273cc:	movzx  edx,bpl
  4273d0:	lea    rbx,[rsp+0x10]
  4273d5:	jmp    42738a <isspace@plt+0x23a7a>
  4273d7:	call   403280 <__stack_chk_fail@plt>
  4273dc:	nop    DWORD PTR [rax+0x0]
  4273e0:	push   rbp
  4273e1:	push   r15
  4273e3:	push   r14
  4273e5:	push   r13
  4273e7:	push   r12
  4273e9:	push   rbx
  4273ea:	sub    rsp,0x28
  4273ee:	mov    rax,QWORD PTR fs:0x28
  4273f7:	mov    QWORD PTR [rsp+0x20],rax
  4273fc:	mov    r15,QWORD PTR [rdi+0x30]
  427400:	mov    r14,QWORD PTR [r15+0x18]
  427404:	mov    rdi,r14
  427407:	call   41f750 <isspace@plt+0x1be40>
  42740c:	mov    rdi,rax
  42740f:	call   41fd80 <isspace@plt+0x1c470>
  427414:	mov    r12d,eax
  427417:	lea    r13,[r15+0x40]
  42741b:	mov    rdi,r13
  42741e:	call   4041a0 <isspace@plt+0x890>
  427423:	test   rax,rax
  427426:	je     427463 <isspace@plt+0x23b53>
  427428:	mov    rbx,rax
  42742b:	mov    rbp,rsp
  42742e:	xchg   ax,ax
  427430:	mov    rdi,rbp
  427433:	mov    rsi,r15
  427436:	mov    rdx,rbx
  427439:	call   426d00 <isspace@plt+0x233f0>
  42743e:	mov    rdi,rbp
  427441:	call   403f90 <isspace@plt+0x680>
  427446:	test   rax,rax
  427449:	jne    427467 <isspace@plt+0x23b57>
  42744b:	mov    rdi,rbx
  42744e:	call   403b50 <isspace@plt+0x240>
  427453:	mov    rdi,r13
  427456:	call   4041a0 <isspace@plt+0x890>
  42745b:	mov    rbx,rax
  42745e:	test   rax,rax
  427461:	jne    427430 <isspace@plt+0x23b20>
  427463:	xor    eax,eax
  427465:	jmp    427492 <isspace@plt+0x23b82>
  427467:	movzx  edx,r12b
  42746b:	mov    rbp,rsp
  42746e:	mov    rdi,r14
  427471:	mov    rsi,rbp
  427474:	call   420250 <isspace@plt+0x1c940>
  427479:	mov    rdi,rbp
  42747c:	call   403b50 <isspace@plt+0x240>
  427481:	add    r15,0x20
  427485:	mov    rdi,r15
  427488:	mov    rsi,rbx
  42748b:	call   4040d0 <isspace@plt+0x7c0>
  427490:	mov    al,0x1
  427492:	mov    rcx,QWORD PTR fs:0x28
  42749b:	cmp    rcx,QWORD PTR [rsp+0x20]
  4274a0:	jne    4274b1 <isspace@plt+0x23ba1>
  4274a2:	add    rsp,0x28
  4274a6:	pop    rbx
  4274a7:	pop    r12
  4274a9:	pop    r13
  4274ab:	pop    r14
  4274ad:	pop    r15
  4274af:	pop    rbp
  4274b0:	ret    
  4274b1:	call   403280 <__stack_chk_fail@plt>
  4274b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4274c0:	push   rax
  4274c1:	mov    rax,QWORD PTR fs:0x28
  4274ca:	mov    QWORD PTR [rsp],rax
  4274ce:	mov    eax,esi
  4274d0:	add    al,0x9f
  4274d2:	cmp    al,0x1a
  4274d4:	jae    4274ee <isspace@plt+0x23bde>
  4274d6:	mov    rax,QWORD PTR fs:0x28
  4274df:	cmp    rax,QWORD PTR [rsp]
  4274e3:	jne    427519 <isspace@plt+0x23c09>
  4274e5:	movsx  eax,sil
  4274e9:	add    eax,0xffffffa1
  4274ec:	pop    rcx
  4274ed:	ret    
  4274ee:	cmp    sil,0x5e
  4274f2:	mov    eax,0x1
  4274f7:	mov    ecx,0x1c
  4274fc:	cmove  ecx,eax
  4274ff:	xor    eax,eax
  427501:	cmp    sil,0x27
  427505:	cmovne eax,ecx
  427508:	mov    rcx,QWORD PTR fs:0x28
  427511:	cmp    rcx,QWORD PTR [rsp]
  427515:	jne    427519 <isspace@plt+0x23c09>
  427517:	pop    rcx
  427518:	ret    
  427519:	call   403280 <__stack_chk_fail@plt>
  42751e:	xchg   ax,ax
  427520:	push   r15
  427522:	push   r14
  427524:	push   r12
  427526:	push   rbx
  427527:	push   rax
  427528:	mov    rax,QWORD PTR fs:0x28
  427531:	mov    QWORD PTR [rsp],rax
  427535:	test   rsi,rsi
  427538:	je     42759f <isspace@plt+0x23c8f>
  42753a:	mov    r14,rsi
  42753d:	mov    r15,rdi
  427540:	add    r15,0xaa8
  427547:	mov    rdi,r15
  42754a:	call   403f90 <isspace@plt+0x680>
  42754f:	test   rax,rax
  427552:	je     42759f <isspace@plt+0x23c8f>
  427554:	mov    r12,rax
  427557:	xor    ebx,ebx
  427559:	nop    DWORD PTR [rax+0x0]
  427560:	mov    rdi,r15
  427563:	mov    rsi,rbx
  427566:	call   403c60 <isspace@plt+0x350>
  42756b:	cmp    rax,r14
  42756e:	je     42757b <isspace@plt+0x23c6b>
  427570:	add    rbx,0x1
  427574:	cmp    rbx,r12
  427577:	jb     427560 <isspace@plt+0x23c50>
  427579:	jmp    42759f <isspace@plt+0x23c8f>
  42757b:	mov    rdi,QWORD PTR [r14]
  42757e:	call   4030d0 <free@plt>
  427583:	mov    rdi,QWORD PTR [r14+0x8]
  427587:	call   4030d0 <free@plt>
  42758c:	mov    rdi,r14
  42758f:	call   4030d0 <free@plt>
  427594:	mov    rdi,r15
  427597:	mov    rsi,rbx
  42759a:	call   403f10 <isspace@plt+0x600>
  42759f:	mov    rax,QWORD PTR fs:0x28
  4275a8:	cmp    rax,QWORD PTR [rsp]
  4275ac:	jne    4275ba <isspace@plt+0x23caa>
  4275ae:	add    rsp,0x8
  4275b2:	pop    rbx
  4275b3:	pop    r12
  4275b5:	pop    r14
  4275b7:	pop    r15
  4275b9:	ret    
  4275ba:	call   403280 <__stack_chk_fail@plt>
  4275bf:	nop
  4275c0:	push   r14
  4275c2:	push   rbx
  4275c3:	push   rax
  4275c4:	mov    r14,rdi
  4275c7:	mov    rax,QWORD PTR fs:0x28
  4275d0:	mov    QWORD PTR [rsp],rax
  4275d4:	mov    edi,0x1
  4275d9:	mov    esi,0x18
  4275de:	call   403470 <calloc@plt>
  4275e3:	mov    rbx,rax
  4275e6:	test   rax,rax
  4275e9:	je     427601 <isspace@plt+0x23cf1>
  4275eb:	add    r14,0xb40
  4275f2:	mov    rdi,r14
  4275f5:	mov    rsi,rbx
  4275f8:	call   403e40 <isspace@plt+0x530>
  4275fd:	test   al,al
  4275ff:	jne    42760b <isspace@plt+0x23cfb>
  427601:	mov    rdi,rbx
  427604:	call   4030d0 <free@plt>
  427609:	xor    ebx,ebx
  42760b:	mov    rax,QWORD PTR fs:0x28
  427614:	cmp    rax,QWORD PTR [rsp]
  427618:	jne    427625 <isspace@plt+0x23d15>
  42761a:	mov    rax,rbx
  42761d:	add    rsp,0x8
  427621:	pop    rbx
  427622:	pop    r14
  427624:	ret    
  427625:	call   403280 <__stack_chk_fail@plt>
  42762a:	nop    WORD PTR [rax+rax*1+0x0]
  427630:	push   r15
  427632:	push   r14
  427634:	push   r13
  427636:	push   r12
  427638:	push   rbx
  427639:	sub    rsp,0x10
  42763d:	mov    rax,QWORD PTR fs:0x28
  427646:	mov    QWORD PTR [rsp+0x8],rax
  42764b:	test   rsi,rsi
  42764e:	je     4276c5 <isspace@plt+0x23db5>
  427650:	mov    r12,rsi
  427653:	mov    r15,rdi
  427656:	lea    r14,[rdi+0xb40]
  42765d:	mov    rdi,r14
  427660:	call   403f90 <isspace@plt+0x680>
  427665:	test   rax,rax
  427668:	je     4276c5 <isspace@plt+0x23db5>
  42766a:	mov    r13,rax
  42766d:	xor    ebx,ebx
  42766f:	nop
  427670:	mov    rdi,r14
  427673:	mov    rsi,rbx
  427676:	call   403c60 <isspace@plt+0x350>
  42767b:	cmp    rax,r12
  42767e:	je     42768b <isspace@plt+0x23d7b>
  427680:	add    rbx,0x1
  427684:	cmp    rbx,r13
  427687:	jb     427670 <isspace@plt+0x23d60>
  427689:	jmp    4276c5 <isspace@plt+0x23db5>
  42768b:	mov    rdi,QWORD PTR [r12+0x10]
  427690:	test   rdi,rdi
  427693:	je     42769a <isspace@plt+0x23d8a>
  427695:	call   4030d0 <free@plt>
  42769a:	mov    rsi,QWORD PTR [r12+0x8]
  42769f:	test   rsi,rsi
  4276a2:	je     4276b2 <isspace@plt+0x23da2>
  4276a4:	cmp    QWORD PTR [rsi],0x0
  4276a8:	jne    4276b2 <isspace@plt+0x23da2>
  4276aa:	mov    rdi,r15
  4276ad:	call   427520 <isspace@plt+0x23c10>
  4276b2:	mov    rdi,r12
  4276b5:	call   4030d0 <free@plt>
  4276ba:	mov    rdi,r14
  4276bd:	mov    rsi,rbx
  4276c0:	call   403f10 <isspace@plt+0x600>
  4276c5:	mov    rax,QWORD PTR fs:0x28
  4276ce:	cmp    rax,QWORD PTR [rsp+0x8]
  4276d3:	jne    4276e3 <isspace@plt+0x23dd3>
  4276d5:	add    rsp,0x10
  4276d9:	pop    rbx
  4276da:	pop    r12
  4276dc:	pop    r13
  4276de:	pop    r14
  4276e0:	pop    r15
  4276e2:	ret    
  4276e3:	call   403280 <__stack_chk_fail@plt>
  4276e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4276f0:	push   r14
  4276f2:	push   rbx
  4276f3:	push   rax
  4276f4:	mov    rax,QWORD PTR fs:0x28
  4276fd:	mov    QWORD PTR [rsp],rax
  427701:	mov    rax,QWORD PTR [rdi+0x9a0]
  427708:	cmp    rax,rsi
  42770b:	je     42775e <isspace@plt+0x23e4e>
  42770d:	mov    r14,rsi
  427710:	mov    rbx,rdi
  427713:	mov    rcx,QWORD PTR [rax+0x38]
  427717:	test   rcx,rcx
  42771a:	je     42772b <isspace@plt+0x23e1b>
  42771c:	mov    rdi,rbx
  42771f:	mov    rsi,r14
  427722:	call   rcx
  427724:	mov    rax,QWORD PTR [rbx+0x9a0]
  42772b:	lea    rcx,[rip+0x1b9ae]        # 4430e0 <isspace@plt+0x3f7d0>
  427732:	add    rcx,0x60
  427736:	cmp    rax,rcx
  427739:	je     427742 <isspace@plt+0x23e32>
  42773b:	mov    QWORD PTR [rbx+0x9a8],rax
  427742:	mov    QWORD PTR [rbx+0x9a0],r14
  427749:	mov    rax,QWORD PTR [r14+0x30]
  42774d:	test   rax,rax
  427750:	je     42775e <isspace@plt+0x23e4e>
  427752:	mov    rsi,QWORD PTR [rbx+0x9a8]
  427759:	mov    rdi,rbx
  42775c:	call   rax
  42775e:	mov    rax,QWORD PTR fs:0x28
  427767:	cmp    rax,QWORD PTR [rsp]
  42776b:	jne    427775 <isspace@plt+0x23e65>
  42776d:	add    rsp,0x8
  427771:	pop    rbx
  427772:	pop    r14
  427774:	ret    
  427775:	call   403280 <__stack_chk_fail@plt>
  42777a:	nop    WORD PTR [rax+rax*1+0x0]
  427780:	push   r15
  427782:	push   r14
  427784:	push   rbx
  427785:	sub    rsp,0x10
  427789:	mov    rax,QWORD PTR fs:0x28
  427792:	mov    QWORD PTR [rsp+0x8],rax
  427797:	cmp    esi,0x5
  42779a:	ja     42780b <isspace@plt+0x23efb>
  42779c:	mov    r14,rdi
  42779f:	mov    eax,esi
  4277a1:	lea    r15,[rax+rax*2]
  4277a5:	shl    r15,0x5
  4277a9:	lea    rbx,[rip+0x1b930]        # 4430e0 <isspace@plt+0x3f7d0>
  4277b0:	add    rbx,r15
  4277b3:	mov    rax,QWORD PTR [rdi+0x9a0]
  4277ba:	cmp    rax,rbx
  4277bd:	je     42780b <isspace@plt+0x23efb>
  4277bf:	mov    rcx,QWORD PTR [rax+0x38]
  4277c3:	test   rcx,rcx
  4277c6:	je     4277d7 <isspace@plt+0x23ec7>
  4277c8:	mov    rdi,r14
  4277cb:	mov    rsi,rbx
  4277ce:	call   rcx
  4277d0:	mov    rax,QWORD PTR [r14+0x9a0]
  4277d7:	lea    rcx,[rip+0x1b902]        # 4430e0 <isspace@plt+0x3f7d0>
  4277de:	lea    rdx,[rcx+0x60]
  4277e2:	cmp    rax,rdx
  4277e5:	je     4277ee <isspace@plt+0x23ede>
  4277e7:	mov    QWORD PTR [r14+0x9a8],rax
  4277ee:	mov    QWORD PTR [r14+0x9a0],rbx
  4277f5:	mov    rax,QWORD PTR [rcx+r15*1+0x30]
  4277fa:	test   rax,rax
  4277fd:	je     42780b <isspace@plt+0x23efb>
  4277ff:	mov    rsi,QWORD PTR [r14+0x9a8]
  427806:	mov    rdi,r14
  427809:	call   rax
  42780b:	mov    rax,QWORD PTR fs:0x28
  427814:	cmp    rax,QWORD PTR [rsp+0x8]
  427819:	jne    427825 <isspace@plt+0x23f15>
  42781b:	add    rsp,0x10
  42781f:	pop    rbx
  427820:	pop    r14
  427822:	pop    r15
  427824:	ret    
  427825:	call   403280 <__stack_chk_fail@plt>
  42782a:	nop    WORD PTR [rax+rax*1+0x0]
  427830:	push   rbp
  427831:	push   r14
  427833:	push   rbx
  427834:	sub    rsp,0x10
  427838:	mov    rax,QWORD PTR fs:0x28
  427841:	mov    QWORD PTR [rsp+0x8],rax
  427846:	mov    ebp,0x6
  42784b:	test   rsi,rsi
  42784e:	je     4278f8 <isspace@plt+0x23fe8>
  427854:	mov    rbx,rsi
  427857:	lea    r14,[rip+0x1b882]        # 4430e0 <isspace@plt+0x3f7d0>
  42785e:	mov    rdi,QWORD PTR [r14+0x18]
  427862:	call   4030f0 <strcasecmp@plt>
  427867:	test   eax,eax
  427869:	je     4278ce <isspace@plt+0x23fbe>
  42786b:	mov    rdi,QWORD PTR [r14+0x78]
  42786f:	mov    rsi,rbx
  427872:	call   4030f0 <strcasecmp@plt>
  427877:	test   eax,eax
  427879:	je     4278d2 <isspace@plt+0x23fc2>
  42787b:	mov    rdi,QWORD PTR [r14+0xd8]
  427882:	mov    rsi,rbx
  427885:	call   4030f0 <strcasecmp@plt>
  42788a:	test   eax,eax
  42788c:	je     4278d9 <isspace@plt+0x23fc9>
  42788e:	mov    rdi,QWORD PTR [r14+0x138]
  427895:	mov    rsi,rbx
  427898:	call   4030f0 <strcasecmp@plt>
  42789d:	test   eax,eax
  42789f:	je     4278e0 <isspace@plt+0x23fd0>
  4278a1:	mov    rdi,QWORD PTR [r14+0x198]
  4278a8:	mov    rsi,rbx
  4278ab:	call   4030f0 <strcasecmp@plt>
  4278b0:	test   eax,eax
  4278b2:	je     4278e7 <isspace@plt+0x23fd7>
  4278b4:	mov    rdi,QWORD PTR [r14+0x1f8]
  4278bb:	mov    rsi,rbx
  4278be:	call   4030f0 <strcasecmp@plt>
  4278c3:	test   eax,eax
  4278c5:	jne    4278f8 <isspace@plt+0x23fe8>
  4278c7:	mov    eax,0x5
  4278cc:	jmp    4278ec <isspace@plt+0x23fdc>
  4278ce:	xor    eax,eax
  4278d0:	jmp    4278ec <isspace@plt+0x23fdc>
  4278d2:	mov    eax,0x1
  4278d7:	jmp    4278ec <isspace@plt+0x23fdc>
  4278d9:	mov    eax,0x2
  4278de:	jmp    4278ec <isspace@plt+0x23fdc>
  4278e0:	mov    eax,0x3
  4278e5:	jmp    4278ec <isspace@plt+0x23fdc>
  4278e7:	mov    eax,0x4
  4278ec:	lea    rax,[rax+rax*2]
  4278f0:	shl    rax,0x5
  4278f4:	mov    ebp,DWORD PTR [r14+rax*1]
  4278f8:	mov    rax,QWORD PTR fs:0x28
  427901:	cmp    rax,QWORD PTR [rsp+0x8]
  427906:	jne    427913 <isspace@plt+0x24003>
  427908:	mov    eax,ebp
  42790a:	add    rsp,0x10
  42790e:	pop    rbx
  42790f:	pop    r14
  427911:	pop    rbp
  427912:	ret    
  427913:	call   403280 <__stack_chk_fail@plt>
  427918:	nop    DWORD PTR [rax+rax*1+0x0]
  427920:	push   rax
  427921:	mov    rax,QWORD PTR fs:0x28
  42792a:	mov    QWORD PTR [rsp],rax
  42792e:	mov    rax,QWORD PTR [rdi+0x9a0]
  427935:	mov    eax,DWORD PTR [rax]
  427937:	mov    rcx,QWORD PTR fs:0x28
  427940:	cmp    rcx,QWORD PTR [rsp]
  427944:	jne    427948 <isspace@plt+0x24038>
  427946:	pop    rcx
  427947:	ret    
  427948:	call   403280 <__stack_chk_fail@plt>
  42794d:	nop    DWORD PTR [rax]
  427950:	push   rax
  427951:	mov    rax,QWORD PTR fs:0x28
  42795a:	mov    QWORD PTR [rsp],rax
  42795e:	cmp    esi,0x5
  427961:	ja     42798e <isspace@plt+0x2407e>
  427963:	mov    eax,esi
  427965:	lea    rax,[rax+rax*2]
  427969:	shl    rax,0x5
  42796d:	lea    rcx,[rip+0x1b76c]        # 4430e0 <isspace@plt+0x3f7d0>
  427974:	mov    rdi,QWORD PTR [rcx+rax*1+0x10]
  427979:	test   rdi,rdi
  42797c:	je     42798e <isspace@plt+0x2407e>
  42797e:	mov    rsi,rdx
  427981:	call   408b50 <isspace@plt+0x5240>
  427986:	test   rax,rax
  427989:	setne  al
  42798c:	jmp    427990 <isspace@plt+0x24080>
  42798e:	xor    eax,eax
  427990:	mov    rcx,QWORD PTR fs:0x28
  427999:	cmp    rcx,QWORD PTR [rsp]
  42799d:	jne    4279a1 <isspace@plt+0x24091>
  42799f:	pop    rcx
  4279a0:	ret    
  4279a1:	call   403280 <__stack_chk_fail@plt>
  4279a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4279b0:	push   rax
  4279b1:	mov    rax,QWORD PTR fs:0x28
  4279ba:	mov    QWORD PTR [rsp],rax
  4279be:	cmp    esi,0x5
  4279c1:	ja     4279ea <isspace@plt+0x240da>
  4279c3:	mov    eax,esi
  4279c5:	lea    rax,[rax+rax*2]
  4279c9:	shl    rax,0x5
  4279cd:	mov    rdi,QWORD PTR [rdi+rax*1+0x98]
  4279d5:	test   rdi,rdi
  4279d8:	je     4279ea <isspace@plt+0x240da>
  4279da:	mov    rsi,rdx
  4279dd:	call   408b50 <isspace@plt+0x5240>
  4279e2:	test   rax,rax
  4279e5:	setne  al
  4279e8:	jmp    4279ec <isspace@plt+0x240dc>
  4279ea:	xor    eax,eax
  4279ec:	mov    rcx,QWORD PTR fs:0x28
  4279f5:	cmp    rcx,QWORD PTR [rsp]
  4279f9:	jne    4279fd <isspace@plt+0x240ed>
  4279fb:	pop    rcx
  4279fc:	ret    
  4279fd:	call   403280 <__stack_chk_fail@plt>
  427a02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427a0c:	nop    DWORD PTR [rax+0x0]
  427a10:	push   rax
  427a11:	mov    rax,QWORD PTR fs:0x28
  427a1a:	mov    QWORD PTR [rsp],rax
  427a1e:	cmp    esi,0x5
  427a21:	ja     427a53 <isspace@plt+0x24143>
  427a23:	mov    eax,esi
  427a25:	lea    rdi,[rax+rax*2]
  427a29:	shl    rdi,0x5
  427a2d:	add    rdi,QWORD PTR [rip+0x1b58c]        # 442fc0 <isspace@plt+0x3f6b0>
  427a34:	movzx  esi,dl
  427a37:	mov    rdx,rcx
  427a3a:	mov    rcx,r8
  427a3d:	call   427a70 <isspace@plt+0x24160>
  427a42:	mov    rcx,QWORD PTR fs:0x28
  427a4b:	cmp    rcx,QWORD PTR [rsp]
  427a4f:	jne    427a66 <isspace@plt+0x24156>
  427a51:	pop    rcx
  427a52:	ret    
  427a53:	mov    rax,QWORD PTR fs:0x28
  427a5c:	cmp    rax,QWORD PTR [rsp]
  427a60:	jne    427a66 <isspace@plt+0x24156>
  427a62:	xor    eax,eax
  427a64:	pop    rcx
  427a65:	ret    
  427a66:	call   403280 <__stack_chk_fail@plt>
  427a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  427a70:	push   rbp
  427a71:	push   r15
  427a73:	push   r14
  427a75:	push   r12
  427a77:	push   rbx
  427a78:	sub    rsp,0x10
  427a7c:	mov    rax,QWORD PTR fs:0x28
  427a85:	mov    QWORD PTR [rsp+0x8],rax
  427a8a:	test   rdi,rdi
  427a8d:	je     427b0c <isspace@plt+0x241fc>
  427a8f:	mov    r14,rcx
  427a92:	mov    r15,rdx
  427a95:	mov    r12d,esi
  427a98:	mov    rbx,rdi
  427a9b:	mov    rbp,QWORD PTR [rcx+0x10]
  427a9f:	test   rbp,rbp
  427aa2:	je     427ac4 <isspace@plt+0x241b4>
  427aa4:	cmp    BYTE PTR [r15],0x3c
  427aa8:	je     427ac4 <isspace@plt+0x241b4>
  427aaa:	mov    rdi,r15
  427aad:	call   403250 <strlen@plt>
  427ab2:	mov    rdi,r15
  427ab5:	mov    rsi,rbp
  427ab8:	mov    rdx,rax
  427abb:	call   403160 <strncmp@plt>
  427ac0:	test   eax,eax
  427ac2:	je     427b0c <isspace@plt+0x241fc>
  427ac4:	mov    rdi,QWORD PTR [rbx+0x10]
  427ac8:	test   rdi,rdi
  427acb:	jne    427ade <isspace@plt+0x241ce>
  427acd:	call   408f90 <isspace@plt+0x5680>
  427ad2:	mov    rdi,rax
  427ad5:	mov    QWORD PTR [rbx+0x10],rax
  427ad9:	test   rax,rax
  427adc:	je     427b0c <isspace@plt+0x241fc>
  427ade:	test   r12b,r12b
  427ae1:	je     427aef <isspace@plt+0x241df>
  427ae3:	mov    rsi,r15
  427ae6:	call   408b50 <isspace@plt+0x5240>
  427aeb:	mov    rdi,QWORD PTR [rbx+0x10]
  427aef:	mov    rsi,r15
  427af2:	mov    rdx,r14
  427af5:	call   408900 <isspace@plt+0x4ff0>
  427afa:	mov    rcx,QWORD PTR fs:0x28
  427b03:	cmp    rcx,QWORD PTR [rsp+0x8]
  427b08:	je     427b1e <isspace@plt+0x2420e>
  427b0a:	jmp    427b2b <isspace@plt+0x2421b>
  427b0c:	mov    rax,QWORD PTR fs:0x28
  427b15:	cmp    rax,QWORD PTR [rsp+0x8]
  427b1a:	jne    427b2b <isspace@plt+0x2421b>
  427b1c:	xor    eax,eax
  427b1e:	add    rsp,0x10
  427b22:	pop    rbx
  427b23:	pop    r12
  427b25:	pop    r14
  427b27:	pop    r15
  427b29:	pop    rbp
  427b2a:	ret    
  427b2b:	call   403280 <__stack_chk_fail@plt>
  427b30:	push   rax
  427b31:	mov    rax,QWORD PTR fs:0x28
  427b3a:	mov    QWORD PTR [rsp],rax
  427b3e:	cmp    esi,0x5
  427b41:	ja     427b76 <isspace@plt+0x24266>
  427b43:	mov    eax,esi
  427b45:	lea    rax,[rax+rax*2]
  427b49:	shl    rax,0x5
  427b4d:	add    rdi,rax
  427b50:	add    rdi,0x88
  427b57:	movzx  esi,dl
  427b5a:	mov    rdx,rcx
  427b5d:	mov    rcx,r8
  427b60:	call   427a70 <isspace@plt+0x24160>
  427b65:	mov    rcx,QWORD PTR fs:0x28
  427b6e:	cmp    rcx,QWORD PTR [rsp]
  427b72:	jne    427b89 <isspace@plt+0x24279>
  427b74:	pop    rcx
  427b75:	ret    
  427b76:	mov    rax,QWORD PTR fs:0x28
  427b7f:	cmp    rax,QWORD PTR [rsp]
  427b83:	jne    427b89 <isspace@plt+0x24279>
  427b85:	xor    eax,eax
  427b87:	pop    rcx
  427b88:	ret    
  427b89:	call   403280 <__stack_chk_fail@plt>
  427b8e:	xchg   ax,ax
  427b90:	push   rbp
  427b91:	push   r15
  427b93:	push   r14
  427b95:	push   r13
  427b97:	push   r12
  427b99:	push   rbx
  427b9a:	push   rax
  427b9b:	mov    rax,QWORD PTR fs:0x28
  427ba4:	mov    QWORD PTR [rsp],rax
  427ba8:	mov    rbp,QWORD PTR [rdi+0x30]
  427bac:	test   rbp,rbp
  427baf:	je     427d08 <isspace@plt+0x243f8>
  427bb5:	mov    r14,rdi
  427bb8:	mov    eax,0x180
  427bbd:	add    rax,QWORD PTR [rip+0x1b3fc]        # 442fc0 <isspace@plt+0x3f6b0>
  427bc4:	cmp    rsi,rax
  427bc7:	je     427bde <isspace@plt+0x242ce>
  427bc9:	mov    eax,0x1e0
  427bce:	add    rax,QWORD PTR [rip+0x1b3eb]        # 442fc0 <isspace@plt+0x3f6b0>
  427bd5:	cmp    rsi,rax
  427bd8:	jne    427d08 <isspace@plt+0x243f8>
  427bde:	cmp    BYTE PTR [r14+0x7fd],0x0
  427be6:	je     427c8a <isspace@plt+0x2437a>
  427bec:	lea    rdi,[r14+0x8a9]
  427bf3:	lea    rsi,[rip+0x8064]        # 42fc5e <isspace@plt+0x2c34e>
  427bfa:	call   403480 <strcmp@plt>
  427bff:	test   eax,eax
  427c01:	jne    427c8a <isspace@plt+0x2437a>
  427c07:	mov    rax,QWORD PTR [rbp+0x10]
  427c0b:	mov    rdi,QWORD PTR [rbp+0x18]
  427c0f:	mov    r15,QWORD PTR [rax]
  427c12:	call   41f710 <isspace@plt+0x1be00>
  427c17:	test   rax,rax
  427c1a:	je     427c8a <isspace@plt+0x2437a>
  427c1c:	mov    r12,rax
  427c1f:	nop
  427c20:	mov    rdi,r12
  427c23:	call   41b4d0 <isspace@plt+0x17bc0>
  427c28:	mov    rbx,rax
  427c2b:	mov    rdi,r15
  427c2e:	mov    rsi,rax
  427c31:	call   4135c0 <isspace@plt+0xfcb0>
  427c36:	mov    r13,rax
  427c39:	mov    rdi,r15
  427c3c:	mov    rsi,rbx
  427c3f:	call   413750 <isspace@plt+0xfe40>
  427c44:	cmp    r13,rbx
  427c47:	jne    427c7a <isspace@plt+0x2436a>
  427c49:	cmp    r13,rax
  427c4c:	jne    427c7a <isspace@plt+0x2436a>
  427c4e:	mov    rdi,r15
  427c51:	mov    rsi,rbx
  427c54:	call   413560 <isspace@plt+0xfc50>
  427c59:	sub    rbx,rax
  427c5c:	je     427c7a <isspace@plt+0x2436a>
  427c5e:	mov    r13,rax
  427c61:	mov    rdi,r15
  427c64:	mov    rsi,rax
  427c67:	mov    rdx,rbx
  427c6a:	call   410200 <isspace@plt+0xc8f0>
  427c6f:	mov    rdi,r12
  427c72:	mov    rsi,r13
  427c75:	call   41ad90 <isspace@plt+0x17480>
  427c7a:	mov    rdi,r12
  427c7d:	call   41f7f0 <isspace@plt+0x1bee0>
  427c82:	mov    r12,rax
  427c85:	test   rax,rax
  427c88:	jne    427c20 <isspace@plt+0x24310>
  427c8a:	mov    rdi,r14
  427c8d:	call   424640 <isspace@plt+0x20d30>
  427c92:	cmp    QWORD PTR [rbp+0x2c8],0x0
  427c9a:	jne    427cfc <isspace@plt+0x243ec>
  427c9c:	lea    rax,[rip+0x1a5dd]        # 442280 <isspace@plt+0x3e970>
  427ca3:	add    rax,0x70
  427ca7:	cmp    QWORD PTR [r14+0x968],rax
  427cae:	jne    427cfc <isspace@plt+0x243ec>
  427cb0:	mov    eax,DWORD PTR [r14+0x958]
  427cb7:	cmp    eax,0x2
  427cba:	jl     427cfc <isspace@plt+0x243ec>
  427cbc:	mov    rbx,QWORD PTR [r14+0x970]
  427cc3:	test   rbx,rbx
  427cc6:	je     427cdb <isspace@plt+0x243cb>
  427cc8:	mov    ecx,0x10e0
  427ccd:	add    rcx,QWORD PTR [rip+0x1b31c]        # 442ff0 <isspace@plt+0x3f6e0>
  427cd4:	mov    QWORD PTR [r14+0x970],rcx
  427cdb:	add    eax,0xffffffff
  427cde:	mov    DWORD PTR [r14+0x958],eax
  427ce5:	mov    rdi,r14
  427ce8:	call   424ba0 <isspace@plt+0x21290>
  427ced:	add    DWORD PTR [r14+0x958],0x1
  427cf5:	mov    QWORD PTR [r14+0x970],rbx
  427cfc:	mov    rsi,QWORD PTR [rbp+0x10]
  427d00:	mov    rdi,r14
  427d03:	call   423520 <isspace@plt+0x1fc10>
  427d08:	mov    rax,QWORD PTR fs:0x28
  427d11:	cmp    rax,QWORD PTR [rsp]
  427d15:	jne    427d26 <isspace@plt+0x24416>
  427d17:	add    rsp,0x8
  427d1b:	pop    rbx
  427d1c:	pop    r12
  427d1e:	pop    r13
  427d20:	pop    r14
  427d22:	pop    r15
  427d24:	pop    rbp
  427d25:	ret    
  427d26:	call   403280 <__stack_chk_fail@plt>
  427d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  427d30:	push   r14
  427d32:	push   rbx
  427d33:	push   rax
  427d34:	mov    rbx,rdi
  427d37:	mov    rax,QWORD PTR fs:0x28
  427d40:	mov    QWORD PTR [rsp],rax
  427d44:	call   423560 <isspace@plt+0x1fc50>
  427d49:	mov    rax,QWORD PTR [rbx+0x9a0]
  427d50:	mov    r14,QWORD PTR [rbx+0x9a8]
  427d57:	cmp    rax,r14
  427d5a:	je     427da7 <isspace@plt+0x24497>
  427d5c:	mov    rcx,QWORD PTR [rax+0x38]
  427d60:	test   rcx,rcx
  427d63:	je     427d74 <isspace@plt+0x24464>
  427d65:	mov    rdi,rbx
  427d68:	mov    rsi,r14
  427d6b:	call   rcx
  427d6d:	mov    rax,QWORD PTR [rbx+0x9a0]
  427d74:	lea    rcx,[rip+0x1b365]        # 4430e0 <isspace@plt+0x3f7d0>
  427d7b:	add    rcx,0x60
  427d7f:	cmp    rax,rcx
  427d82:	je     427d8b <isspace@plt+0x2447b>
  427d84:	mov    QWORD PTR [rbx+0x9a8],rax
  427d8b:	mov    QWORD PTR [rbx+0x9a0],r14
  427d92:	mov    rax,QWORD PTR [r14+0x30]
  427d96:	test   rax,rax
  427d99:	je     427da7 <isspace@plt+0x24497>
  427d9b:	mov    rsi,QWORD PTR [rbx+0x9a8]
  427da2:	mov    rdi,rbx
  427da5:	call   rax
  427da7:	mov    rax,QWORD PTR fs:0x28
  427db0:	cmp    rax,QWORD PTR [rsp]
  427db4:	jne    427dbe <isspace@plt+0x244ae>
  427db6:	add    rsp,0x8
  427dba:	pop    rbx
  427dbb:	pop    r14
  427dbd:	ret    
  427dbe:	call   403280 <__stack_chk_fail@plt>
  427dc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427dcd:	nop    DWORD PTR [rax]
  427dd0:	push   rbx
  427dd1:	sub    rsp,0x10
  427dd5:	mov    rax,QWORD PTR fs:0x28
  427dde:	mov    QWORD PTR [rsp+0x8],rax
  427de3:	mov    rax,QWORD PTR [rdi+0x30]
  427de7:	test   rax,rax
  427dea:	je     427e2d <isspace@plt+0x2451d>
  427dec:	mov    cl,BYTE PTR [rsi+0x58]
  427def:	test   cl,cl
  427df1:	jne    427e2d <isspace@plt+0x2451d>
  427df3:	mov    rdi,QWORD PTR [rax+0x18]
  427df7:	call   41f710 <isspace@plt+0x1be00>
  427dfc:	test   rax,rax
  427dff:	je     427e2d <isspace@plt+0x2451d>
  427e01:	mov    rbx,rax
  427e04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427e0e:	xchg   ax,ax
  427e10:	mov    esi,0x1
  427e15:	mov    rdi,rbx
  427e18:	call   41fcf0 <isspace@plt+0x1c3e0>
  427e1d:	mov    rdi,rbx
  427e20:	call   41f7f0 <isspace@plt+0x1bee0>
  427e25:	mov    rbx,rax
  427e28:	test   rax,rax
  427e2b:	jne    427e10 <isspace@plt+0x24500>
  427e2d:	mov    rax,QWORD PTR fs:0x28
  427e36:	cmp    rax,QWORD PTR [rsp+0x8]
  427e3b:	jne    427e43 <isspace@plt+0x24533>
  427e3d:	add    rsp,0x10
  427e41:	pop    rbx
  427e42:	ret    
  427e43:	call   403280 <__stack_chk_fail@plt>
  427e48:	nop    DWORD PTR [rax+rax*1+0x0]
  427e50:	push   rbx
  427e51:	sub    rsp,0x10
  427e55:	mov    rax,QWORD PTR fs:0x28
  427e5e:	mov    QWORD PTR [rsp+0x8],rax
  427e63:	mov    rbx,QWORD PTR [rdi+0x30]
  427e67:	test   rbx,rbx
  427e6a:	je     427e8e <isspace@plt+0x2457e>
  427e6c:	mov    al,BYTE PTR [rsi+0x58]
  427e6f:	test   al,al
  427e71:	jne    427e8e <isspace@plt+0x2457e>
  427e73:	cmp    QWORD PTR [rdi+0x920],0x0
  427e7b:	jne    427e85 <isspace@plt+0x24575>
  427e7d:	mov    rdi,rbx
  427e80:	call   420bd0 <isspace@plt+0x1d2c0>
  427e85:	mov    rdi,QWORD PTR [rbx+0x18]
  427e89:	call   41b900 <isspace@plt+0x17ff0>
  427e8e:	mov    rax,QWORD PTR fs:0x28
  427e97:	cmp    rax,QWORD PTR [rsp+0x8]
  427e9c:	jne    427ea4 <isspace@plt+0x24594>
  427e9e:	add    rsp,0x10
  427ea2:	pop    rbx
  427ea3:	ret    
  427ea4:	call   403280 <__stack_chk_fail@plt>
  427ea9:	nop    DWORD PTR [rax+0x0]
  427eb0:	push   r14
  427eb2:	push   rbx
  427eb3:	push   rax
  427eb4:	mov    r14,rdi
  427eb7:	mov    rax,QWORD PTR fs:0x28
  427ec0:	mov    QWORD PTR [rsp],rax
  427ec4:	mov    rax,QWORD PTR [rdi+0x30]
  427ec8:	test   rax,rax
  427ecb:	je     427f0d <isspace@plt+0x245fd>
  427ecd:	mov    cl,BYTE PTR [rsi+0x58]
  427ed0:	test   cl,cl
  427ed2:	jne    427f0d <isspace@plt+0x245fd>
  427ed4:	mov    rdi,QWORD PTR [rax+0x18]
  427ed8:	call   41f710 <isspace@plt+0x1be00>
  427edd:	test   rax,rax
  427ee0:	je     427f0d <isspace@plt+0x245fd>
  427ee2:	mov    rbx,rax
  427ee5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427eef:	nop
  427ef0:	mov    esi,0x1
  427ef5:	mov    rdi,rbx
  427ef8:	call   41fcf0 <isspace@plt+0x1c3e0>
  427efd:	mov    rdi,rbx
  427f00:	call   41f7f0 <isspace@plt+0x1bee0>
  427f05:	mov    rbx,rax
  427f08:	test   rax,rax
  427f0b:	jne    427ef0 <isspace@plt+0x245e0>
  427f0d:	cmp    QWORD PTR [r14+0x920],0x0
  427f15:	jne    427f26 <isspace@plt+0x24616>
  427f17:	mov    esi,0x3c
  427f1c:	xor    eax,eax
  427f1e:	mov    rdi,r14
  427f21:	call   428140 <isspace@plt+0x24830>
  427f26:	mov    rax,QWORD PTR fs:0x28
  427f2f:	cmp    rax,QWORD PTR [rsp]
  427f33:	jne    427f3d <isspace@plt+0x2462d>
  427f35:	add    rsp,0x8
  427f39:	pop    rbx
  427f3a:	pop    r14
  427f3c:	ret    
  427f3d:	call   403280 <__stack_chk_fail@plt>
  427f42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f4c:	nop    DWORD PTR [rax+0x0]
  427f50:	push   rbx
  427f51:	sub    rsp,0x10
  427f55:	mov    rax,QWORD PTR fs:0x28
  427f5e:	mov    QWORD PTR [rsp+0x8],rax
  427f63:	mov    rbx,QWORD PTR [rdi+0x30]
  427f67:	test   rbx,rbx
  427f6a:	je     427fa6 <isspace@plt+0x24696>
  427f6c:	cmp    BYTE PTR [rsi+0x58],0x0
  427f70:	je     427f8b <isspace@plt+0x2467b>
  427f72:	mov    rbx,QWORD PTR [rbx+0x18]
  427f76:	mov    rdi,rbx
  427f79:	call   41ec80 <isspace@plt+0x1b370>
  427f7e:	mov    rdi,rbx
  427f81:	mov    rsi,rax
  427f84:	call   41ad60 <isspace@plt+0x17450>
  427f89:	jmp    427fa6 <isspace@plt+0x24696>
  427f8b:	cmp    QWORD PTR [rdi+0x920],0x0
  427f93:	jne    427f9d <isspace@plt+0x2468d>
  427f95:	mov    rdi,rbx
  427f98:	call   420bd0 <isspace@plt+0x1d2c0>
  427f9d:	mov    rdi,QWORD PTR [rbx+0x18]
  427fa1:	call   41b900 <isspace@plt+0x17ff0>
  427fa6:	mov    rax,QWORD PTR fs:0x28
  427faf:	cmp    rax,QWORD PTR [rsp+0x8]
  427fb4:	jne    427fbc <isspace@plt+0x246ac>
  427fb6:	add    rsp,0x10
  427fba:	pop    rbx
  427fbb:	ret    
  427fbc:	call   403280 <__stack_chk_fail@plt>
  427fc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  427fd0:	push   rbx
  427fd1:	sub    rsp,0x10
  427fd5:	mov    rax,QWORD PTR fs:0x28
  427fde:	mov    QWORD PTR [rsp+0x8],rax
  427fe3:	mov    rax,QWORD PTR [rdi+0x30]
  427fe7:	test   rax,rax
  427fea:	je     428038 <isspace@plt+0x24728>
  427fec:	cmp    QWORD PTR [rax+0x2c8],0x0
  427ff4:	jne    428038 <isspace@plt+0x24728>
  427ff6:	mov    rbx,rdi
  427ff9:	cmp    QWORD PTR [rdi+0x920],0x0
  428001:	jne    428030 <isspace@plt+0x24720>
  428003:	lea    rdi,[rbx+0x958]
  42800a:	call   422420 <isspace@plt+0x1eb10>
  42800f:	lea    rax,[rip+0x1a26a]        # 442280 <isspace@plt+0x3e970>
  428016:	add    rax,0x70
  42801a:	mov    QWORD PTR [rbx+0x968],rax
  428021:	mov    rax,QWORD PTR [rbx+0x9a0]
  428028:	mov    eax,DWORD PTR [rax]
  42802a:	mov    DWORD PTR [rbx+0x95c],eax
  428030:	mov    rdi,rbx
  428033:	call   4245e0 <isspace@plt+0x20cd0>
  428038:	mov    rax,QWORD PTR fs:0x28
  428041:	cmp    rax,QWORD PTR [rsp+0x8]
  428046:	jne    42804e <isspace@plt+0x2473e>
  428048:	add    rsp,0x10
  42804c:	pop    rbx
  42804d:	ret    
  42804e:	call   403280 <__stack_chk_fail@plt>
  428053:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42805d:	nop    DWORD PTR [rax]
  428060:	push   rax
  428061:	mov    rax,QWORD PTR fs:0x28
  42806a:	mov    QWORD PTR [rsp],rax
  42806e:	call   422710 <isspace@plt+0x1ee00>
  428073:	mov    rax,QWORD PTR fs:0x28
  42807c:	cmp    rax,QWORD PTR [rsp]
  428080:	jne    428084 <isspace@plt+0x24774>
  428082:	pop    rax
  428083:	ret    
  428084:	call   403280 <__stack_chk_fail@plt>
  428089:	nop    DWORD PTR [rax+0x0]
  428090:	push   rax
  428091:	mov    rax,QWORD PTR fs:0x28
  42809a:	mov    QWORD PTR [rsp],rax
  42809e:	mov    rax,QWORD PTR [rdi+0x30]
  4280a2:	test   rax,rax
  4280a5:	je     4280c1 <isspace@plt+0x247b1>
  4280a7:	mov    rsi,QWORD PTR [rax+0x10]
  4280ab:	call   423520 <isspace@plt+0x1fc10>
  4280b0:	mov    rax,QWORD PTR fs:0x28
  4280b9:	cmp    rax,QWORD PTR [rsp]
  4280bd:	jne    4280d2 <isspace@plt+0x247c2>
  4280bf:	pop    rax
  4280c0:	ret    
  4280c1:	mov    rax,QWORD PTR fs:0x28
  4280ca:	cmp    rax,QWORD PTR [rsp]
  4280ce:	jne    4280d2 <isspace@plt+0x247c2>
  4280d0:	pop    rax
  4280d1:	ret    
  4280d2:	call   403280 <__stack_chk_fail@plt>
  4280d7:	nop    WORD PTR [rax+rax*1+0x0]
  4280e0:	push   rax
  4280e1:	mov    rax,QWORD PTR fs:0x28
  4280ea:	mov    QWORD PTR [rsp],rax
  4280ee:	call   422960 <isspace@plt+0x1f050>
  4280f3:	mov    rax,QWORD PTR fs:0x28
  4280fc:	cmp    rax,QWORD PTR [rsp]
  428100:	jne    428104 <isspace@plt+0x247f4>
  428102:	pop    rax
  428103:	ret    
  428104:	call   403280 <__stack_chk_fail@plt>
  428109:	nop    DWORD PTR [rax+0x0]
  428110:	push   rax
  428111:	mov    rax,QWORD PTR fs:0x28
  42811a:	mov    QWORD PTR [rsp],rax
  42811e:	mov    DWORD PTR [rdi+0x918],esi
  428124:	mov    rax,QWORD PTR fs:0x28
  42812d:	cmp    rax,QWORD PTR [rsp]
  428131:	jne    428135 <isspace@plt+0x24825>
  428133:	pop    rax
  428134:	ret    
  428135:	call   403280 <__stack_chk_fail@plt>
  42813a:	nop    WORD PTR [rax+rax*1+0x0]
  428140:	push   r14
  428142:	push   rbx
  428143:	sub    rsp,0xd8
  42814a:	mov    ebx,esi
  42814c:	mov    r14,rdi
  42814f:	test   al,al
  428151:	je     42818c <isspace@plt+0x2487c>
  428153:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  428159:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  42815f:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  428165:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  42816b:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  428171:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  42817a:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  428183:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  42818c:	mov    QWORD PTR [rsp+0x28],r9
  428191:	mov    QWORD PTR [rsp+0x20],r8
  428196:	mov    QWORD PTR [rsp+0x18],rcx
  42819b:	mov    QWORD PTR [rsp+0x10],rdx
  4281a0:	mov    rax,QWORD PTR fs:0x28
  4281a9:	mov    QWORD PTR [rsp+0xd0],rax
  4281b1:	mov    rax,rsp
  4281b4:	mov    QWORD PTR [rsp+0xc0],rax
  4281bc:	lea    rax,[rsp+0xf0]
  4281c4:	mov    QWORD PTR [rsp+0xb8],rax
  4281cc:	movabs rax,0x3000000010
  4281d6:	mov    QWORD PTR [rsp+0xb0],rax
  4281de:	lea    eax,[rbx-0x17]
  4281e1:	cmp    eax,0x30
  4281e4:	ja     42834c <isspace@plt+0x24a3c>
  4281ea:	lea    rcx,[rip+0x9d87]        # 431f78 <isspace@plt+0x2e668>
  4281f1:	movsxd rax,DWORD PTR [rcx+rax*4]
  4281f5:	add    rax,rcx
  4281f8:	jmp    rax
  4281fa:	movsxd rcx,DWORD PTR [rsp+0xb0]
  428202:	cmp    rcx,0x28
  428206:	ja     428273 <isspace@plt+0x24963>
  428208:	mov    rax,rcx
  42820b:	add    rax,QWORD PTR [rsp+0xc0]
  428213:	lea    ecx,[rcx+0x8]
  428216:	mov    DWORD PTR [rsp+0xb0],ecx
  42821d:	jmp    428287 <isspace@plt+0x24977>
  42821f:	movsxd rcx,DWORD PTR [rsp+0xb0]
  428227:	cmp    rcx,0x28
  42822b:	ja     4282b8 <isspace@plt+0x249a8>
  428231:	mov    rax,rcx
  428234:	add    rax,QWORD PTR [rsp+0xc0]
  42823c:	lea    ecx,[rcx+0x8]
  42823f:	mov    DWORD PTR [rsp+0xb0],ecx
  428246:	jmp    4282cc <isspace@plt+0x249bc>
  42824b:	mov    eax,DWORD PTR [r14+0x7f4]
  428252:	test   eax,eax
  428254:	je     42839a <isspace@plt+0x24a8a>
  42825a:	cmp    ebx,0x46
  42825d:	jne    4283b3 <isspace@plt+0x24aa3>
  428263:	mov    ebx,eax
  428265:	cmp    ebx,0x41
  428268:	jae    428351 <isspace@plt+0x24a41>
  42826e:	jmp    4283be <isspace@plt+0x24aae>
  428273:	mov    rax,QWORD PTR [rsp+0xb8]
  42827b:	lea    rcx,[rax+0x8]
  42827f:	mov    QWORD PTR [rsp+0xb8],rcx
  428287:	mov    rsi,QWORD PTR [rax]
  42828a:	test   rsi,rsi
  42828d:	je     428396 <isspace@plt+0x24a86>
  428293:	lea    rdi,[r14+0x7e8]
  42829a:	mov    edx,0x8
  42829f:	call   403150 <strncpy@plt>
  4282a4:	mov    BYTE PTR [r14+0x7ef],0x0
  4282ac:	mov    DWORD PTR [r14+0x7f0],ebx
  4282b3:	jmp    4283be <isspace@plt+0x24aae>
  4282b8:	mov    rax,QWORD PTR [rsp+0xb8]
  4282c0:	lea    rcx,[rax+0x8]
  4282c4:	mov    QWORD PTR [rsp+0xb8],rcx
  4282cc:	mov    rsi,QWORD PTR [rax]
  4282cf:	mov    rdi,r14
  4282d2:	call   425330 <isspace@plt+0x21a20>
  4282d7:	test   rax,rax
  4282da:	je     42838e <isspace@plt+0x24a7e>
  4282e0:	mov    rdi,rax
  4282e3:	call   42b600 <isspace@plt+0x27cf0>
  4282e8:	xor    eax,eax
  4282ea:	cmp    ebx,0x44
  4282ed:	sete   al
  4282f0:	mov    ebx,0x36
  4282f5:	sub    ebx,eax
  4282f7:	mov    DWORD PTR [r14+0x7f4],ebx
  4282fe:	jmp    4283be <isspace@plt+0x24aae>
  428303:	lea    rax,[rip+0x19f76]        # 442280 <isspace@plt+0x3e970>
  42830a:	add    rax,0x10
  42830e:	xor    ebx,ebx
  428310:	cmp    QWORD PTR [r14+0x920],rax
  428317:	sete   bl
  42831a:	xor    ebx,0x17
  42831d:	jmp    4283be <isspace@plt+0x24aae>
  428322:	lea    rax,[rip+0x19f57]        # 442280 <isspace@plt+0x3e970>
  428329:	add    rax,0x10
  42832d:	xor    ecx,ecx
  42832f:	cmp    QWORD PTR [r14+0x920],rax
  428336:	setne  cl
  428339:	lea    ebx,[rcx+rcx*1]
  42833c:	add    ebx,0x1b
  42833f:	jmp    4283be <isspace@plt+0x24aae>
  428341:	mov    ebx,DWORD PTR [r14+0x7f0]
  428348:	test   ebx,ebx
  42834a:	je     428396 <isspace@plt+0x24a86>
  42834c:	cmp    ebx,0x41
  42834f:	jb     4283be <isspace@plt+0x24aae>
  428351:	lea    rdi,[r14+0xb00]
  428358:	add    ebx,0xffffffb8
  42835b:	mov    rsi,rbx
  42835e:	call   403c60 <isspace@plt+0x350>
  428363:	mov    QWORD PTR [r14+0x928],rax
  42836a:	test   rax,rax
  42836d:	jne    4283d6 <isspace@plt+0x24ac6>
  42836f:	jmp    428396 <isspace@plt+0x24a86>
  428371:	mov    eax,DWORD PTR [r14+0x7f0]
  428378:	add    eax,0xffffffd3
  42837b:	cmp    eax,0x4
  42837e:	jae    428396 <isspace@plt+0x24a86>
  428380:	cdqe   
  428382:	lea    rcx,[rip+0x9e47]        # 4321d0 <isspace@plt+0x2e8c0>
  428389:	mov    ebx,DWORD PTR [rcx+rax*4]
  42838c:	jmp    4283be <isspace@plt+0x24aae>
  42838e:	mov    rdi,r14
  428391:	call   423560 <isspace@plt+0x1fc50>
  428396:	xor    eax,eax
  428398:	jmp    4283e0 <isspace@plt+0x24ad0>
  42839a:	mov    DWORD PTR [r14+0x7f4],0x35
  4283a5:	mov    eax,0x35
  4283aa:	cmp    ebx,0x46
  4283ad:	je     428263 <isspace@plt+0x24953>
  4283b3:	xor    ebx,ebx
  4283b5:	cmp    eax,0x35
  4283b8:	sete   bl
  4283bb:	add    ebx,0x35
  4283be:	mov    eax,ebx
  4283c0:	lea    rax,[rax+rax*8]
  4283c4:	shl    rax,0x3
  4283c8:	add    rax,QWORD PTR [rip+0x1ac21]        # 442ff0 <isspace@plt+0x3f6e0>
  4283cf:	mov    QWORD PTR [r14+0x928],rax
  4283d6:	mov    rdi,r14
  4283d9:	call   422aa0 <isspace@plt+0x1f190>
  4283de:	mov    al,0x1
  4283e0:	mov    rcx,QWORD PTR fs:0x28
  4283e9:	cmp    rcx,QWORD PTR [rsp+0xd0]
  4283f1:	jne    4283fe <isspace@plt+0x24aee>
  4283f3:	add    rsp,0xd8
  4283fa:	pop    rbx
  4283fb:	pop    r14
  4283fd:	ret    
  4283fe:	call   403280 <__stack_chk_fail@plt>
  428403:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42840d:	nop    DWORD PTR [rax]
  428410:	push   rbx
  428411:	sub    rsp,0x10
  428415:	mov    rbx,rsi
  428418:	mov    rax,QWORD PTR fs:0x28
  428421:	mov    QWORD PTR [rsp+0x8],rax
  428426:	mov    esi,0x1
  42842b:	call   424a90 <isspace@plt+0x21180>
  428430:	movsxd rsi,eax
  428433:	mov    rdi,rbx
  428436:	call   410ac0 <isspace@plt+0xd1b0>
  42843b:	mov    rdi,rbx
  42843e:	mov    rsi,rax
  428441:	call   4135c0 <isspace@plt+0xfcb0>
  428446:	mov    rcx,QWORD PTR fs:0x28
  42844f:	cmp    rcx,QWORD PTR [rsp+0x8]
  428454:	jne    42845c <isspace@plt+0x24b4c>
  428456:	add    rsp,0x10
  42845a:	pop    rbx
  42845b:	ret    
  42845c:	call   403280 <__stack_chk_fail@plt>
  428461:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42846b:	nop    DWORD PTR [rax+rax*1+0x0]
  428470:	push   r14
  428472:	push   rbx
  428473:	push   rax
  428474:	mov    r14,rdx
  428477:	mov    rbx,rsi
  42847a:	mov    rax,QWORD PTR fs:0x28
  428483:	mov    QWORD PTR [rsp],rax
  428487:	xor    esi,esi
  428489:	call   424a90 <isspace@plt+0x21180>
  42848e:	movsxd rdx,eax
  428491:	mov    rdi,rbx
  428494:	mov    rsi,r14
  428497:	call   413820 <isspace@plt+0xff10>
  42849c:	mov    rcx,QWORD PTR fs:0x28
  4284a5:	cmp    rcx,QWORD PTR [rsp]
  4284a9:	jne    4284b3 <isspace@plt+0x24ba3>
  4284ab:	add    rsp,0x8
  4284af:	pop    rbx
  4284b0:	pop    r14
  4284b2:	ret    
  4284b3:	call   403280 <__stack_chk_fail@plt>
  4284b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4284c0:	push   rbp
  4284c1:	push   r15
  4284c3:	push   r14
  4284c5:	push   r13
  4284c7:	push   r12
  4284c9:	push   rbx
  4284ca:	sub    rsp,0x38
  4284ce:	mov    r12,rdx
  4284d1:	mov    r14,rsi
  4284d4:	mov    r15,rdi
  4284d7:	mov    rax,QWORD PTR fs:0x28
  4284e0:	mov    QWORD PTR [rsp+0x30],rax
  4284e5:	mov    rbx,rsp
  4284e8:	mov    rdi,rbx
  4284eb:	call   410760 <isspace@plt+0xce50>
  4284f0:	lea    rsi,[rsp+0x2f]
  4284f5:	mov    rdi,rbx
  4284f8:	call   412690 <isspace@plt+0xed80>
  4284fd:	test   al,al
  4284ff:	je     4285ce <isspace@plt+0x24cbe>
  428505:	mov    esi,0x1
  42850a:	mov    rdi,r15
  42850d:	call   424a90 <isspace@plt+0x21180>
  428512:	mov    ebp,eax
  428514:	call   4038f0 <__ctype_b_loc@plt>
  428519:	mov    rax,QWORD PTR [rax]
  42851c:	movzx  edi,BYTE PTR [rsp+0x2f]
  428521:	test   BYTE PTR [rax+rdi*2+0x1],0x20
  428526:	jne    428569 <isspace@plt+0x24c59>
  428528:	call   412f50 <isspace@plt+0xf640>
  42852d:	test   eax,eax
  42852f:	jne    428574 <isspace@plt+0x24c64>
  428531:	mov    rdi,rsp
  428534:	lea    rsi,[rsp+0x2f]
  428539:	call   412b50 <isspace@plt+0xf240>
  42853e:	test   al,al
  428540:	je     428574 <isspace@plt+0x24c64>
  428542:	movzx  edi,BYTE PTR [rsp+0x2f]
  428547:	call   412f50 <isspace@plt+0xf640>
  42854c:	test   eax,eax
  42854e:	je     428574 <isspace@plt+0x24c64>
  428550:	cmp    ebp,0x1
  428553:	jne    428571 <isspace@plt+0x24c61>
  428555:	mov    r13d,0x4c8
  42855b:	add    r13,QWORD PTR [rip+0x1aa8e]        # 442ff0 <isspace@plt+0x3f6e0>
  428562:	mov    ebp,0x1
  428567:	jmp    428581 <isspace@plt+0x24c71>
  428569:	mov    r13d,0x678
  42856f:	jmp    42857a <isspace@plt+0x24c6a>
  428571:	add    ebp,0xffffffff
  428574:	mov    r13d,0x708
  42857a:	add    r13,QWORD PTR [rip+0x1aa6f]        # 442ff0 <isspace@plt+0x3f6e0>
  428581:	not    ebp
  428583:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42858d:	nop    DWORD PTR [rax]
  428590:	mov    rbx,r12
  428593:	add    ebp,0x1
  428596:	je     4285b4 <isspace@plt+0x24ca4>
  428598:	cmp    DWORD PTR [r15+0x9c0],0x0
  4285a0:	jne    4285bb <isspace@plt+0x24cab>
  4285a2:	mov    rdi,r14
  4285a5:	mov    rsi,rbx
  4285a8:	call   QWORD PTR [r13+0x8]
  4285ac:	mov    r12,rax
  4285af:	cmp    rax,rbx
  4285b2:	jne    428590 <isspace@plt+0x24c80>
  4285b4:	test   BYTE PTR [r13+0x38],0x4
  4285b9:	jne    4285c0 <isspace@plt+0x24cb0>
  4285bb:	mov    r12,rbx
  4285be:	jmp    4285ce <isspace@plt+0x24cbe>
  4285c0:	mov    rdi,r14
  4285c3:	mov    rsi,rbx
  4285c6:	call   412fb0 <isspace@plt+0xf6a0>
  4285cb:	mov    r12,rax
  4285ce:	mov    rax,QWORD PTR fs:0x28
  4285d7:	cmp    rax,QWORD PTR [rsp+0x30]
  4285dc:	jne    4285f0 <isspace@plt+0x24ce0>
  4285de:	mov    rax,r12
  4285e1:	add    rsp,0x38
  4285e5:	pop    rbx
  4285e6:	pop    r12
  4285e8:	pop    r13
  4285ea:	pop    r14
  4285ec:	pop    r15
  4285ee:	pop    rbp
  4285ef:	ret    
  4285f0:	call   403280 <__stack_chk_fail@plt>
  4285f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4285ff:	nop
  428600:	push   rbp
  428601:	push   r15
  428603:	push   r14
  428605:	push   r13
  428607:	push   r12
  428609:	push   rbx
  42860a:	sub    rsp,0x38
  42860e:	mov    r12,rdx
  428611:	mov    r14,rsi
  428614:	mov    r15,rdi
  428617:	mov    rax,QWORD PTR fs:0x28
  428620:	mov    QWORD PTR [rsp+0x30],rax
  428625:	mov    rbx,rsp
  428628:	mov    rdi,rbx
  42862b:	call   410760 <isspace@plt+0xce50>
  428630:	lea    rsi,[rsp+0x2f]
  428635:	mov    rdi,rbx
  428638:	call   412690 <isspace@plt+0xed80>
  42863d:	test   al,al
  42863f:	je     42870e <isspace@plt+0x24dfe>
  428645:	mov    esi,0x1
  42864a:	mov    rdi,r15
  42864d:	call   424a90 <isspace@plt+0x21180>
  428652:	mov    ebp,eax
  428654:	call   4038f0 <__ctype_b_loc@plt>
  428659:	mov    rax,QWORD PTR [rax]
  42865c:	movzx  edi,BYTE PTR [rsp+0x2f]
  428661:	test   BYTE PTR [rax+rdi*2+0x1],0x20
  428666:	jne    4286a9 <isspace@plt+0x24d99>
  428668:	call   403910 <isspace@plt>
  42866d:	test   eax,eax
  42866f:	jne    4286b4 <isspace@plt+0x24da4>
  428671:	mov    rdi,rsp
  428674:	lea    rsi,[rsp+0x2f]
  428679:	call   412b50 <isspace@plt+0xf240>
  42867e:	test   al,al
  428680:	je     4286b4 <isspace@plt+0x24da4>
  428682:	movzx  edi,BYTE PTR [rsp+0x2f]
  428687:	call   403910 <isspace@plt>
  42868c:	test   eax,eax
  42868e:	je     4286b4 <isspace@plt+0x24da4>
  428690:	cmp    ebp,0x1
  428693:	jne    4286b1 <isspace@plt+0x24da1>
  428695:	mov    r13d,0x4c8
  42869b:	add    r13,QWORD PTR [rip+0x1a94e]        # 442ff0 <isspace@plt+0x3f6e0>
  4286a2:	mov    ebp,0x1
  4286a7:	jmp    4286c1 <isspace@plt+0x24db1>
  4286a9:	mov    r13d,0x828
  4286af:	jmp    4286ba <isspace@plt+0x24daa>
  4286b1:	add    ebp,0xffffffff
  4286b4:	mov    r13d,0x8b8
  4286ba:	add    r13,QWORD PTR [rip+0x1a92f]        # 442ff0 <isspace@plt+0x3f6e0>
  4286c1:	not    ebp
  4286c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4286cd:	nop    DWORD PTR [rax]
  4286d0:	mov    rbx,r12
  4286d3:	add    ebp,0x1
  4286d6:	je     4286f4 <isspace@plt+0x24de4>
  4286d8:	cmp    DWORD PTR [r15+0x9c0],0x0
  4286e0:	jne    4286fb <isspace@plt+0x24deb>
  4286e2:	mov    rdi,r14
  4286e5:	mov    rsi,rbx
  4286e8:	call   QWORD PTR [r13+0x8]
  4286ec:	mov    r12,rax
  4286ef:	cmp    rax,rbx
  4286f2:	jne    4286d0 <isspace@plt+0x24dc0>
  4286f4:	test   BYTE PTR [r13+0x38],0x4
  4286f9:	jne    428700 <isspace@plt+0x24df0>
  4286fb:	mov    r12,rbx
  4286fe:	jmp    42870e <isspace@plt+0x24dfe>
  428700:	mov    rdi,r14
  428703:	mov    rsi,rbx
  428706:	call   412fb0 <isspace@plt+0xf6a0>
  42870b:	mov    r12,rax
  42870e:	mov    rax,QWORD PTR fs:0x28
  428717:	cmp    rax,QWORD PTR [rsp+0x30]
  42871c:	jne    428730 <isspace@plt+0x24e20>
  42871e:	mov    rax,r12
  428721:	add    rsp,0x38
  428725:	pop    rbx
  428726:	pop    r12
  428728:	pop    r13
  42872a:	pop    r14
  42872c:	pop    r15
  42872e:	pop    rbp
  42872f:	ret    
  428730:	call   403280 <__stack_chk_fail@plt>
  428735:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42873f:	nop
  428740:	push   r15
  428742:	push   r14
  428744:	push   r12
  428746:	push   rbx
  428747:	sub    rsp,0x38
  42874b:	mov    r14,rsi
  42874e:	mov    rbx,rdi
  428751:	mov    rax,QWORD PTR fs:0x28
  42875a:	mov    QWORD PTR [rsp+0x30],rax
  42875f:	lea    rdx,[rip+0x9a46]        # 4321ac <isspace@plt+0x2e89c>
  428766:	xor    ecx,ecx
  428768:	call   415750 <isspace@plt+0x11e40>
  42876d:	cmp    rax,r14
  428770:	jne    4287e9 <isspace@plt+0x24ed9>
  428772:	mov    r15,rsp
  428775:	mov    rdi,r15
  428778:	mov    rsi,rbx
  42877b:	mov    rdx,r14
  42877e:	call   410760 <isspace@plt+0xce50>
  428783:	lea    rsi,[rsp+0x2f]
  428788:	mov    rdi,r15
  42878b:	call   412690 <isspace@plt+0xed80>
  428790:	test   al,al
  428792:	je     4287e6 <isspace@plt+0x24ed6>
  428794:	mov    rbx,rsp
  428797:	lea    r15,[rsp+0x2f]
  42879c:	lea    r12,[rip+0x9899]        # 43203c <isspace@plt+0x2e72c>
  4287a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4287ad:	nop    DWORD PTR [rax]
  4287b0:	movsx  eax,BYTE PTR [rsp+0x2f]
  4287b5:	add    eax,0xffffffde
  4287b8:	cmp    eax,0x5b
  4287bb:	ja     4287c6 <isspace@plt+0x24eb6>
  4287bd:	movsxd rax,DWORD PTR [r12+rax*4]
  4287c1:	add    rax,r12
  4287c4:	jmp    rax
  4287c6:	xor    esi,esi
  4287c8:	mov    rdi,rbx
  4287cb:	call   412710 <isspace@plt+0xee00>
  4287d0:	mov    rdi,rbx
  4287d3:	mov    rsi,r15
  4287d6:	call   412690 <isspace@plt+0xed80>
  4287db:	test   al,al
  4287dd:	jne    4287b0 <isspace@plt+0x24ea0>
  4287df:	jmp    4287e6 <isspace@plt+0x24ed6>
  4287e1:	mov    r14,QWORD PTR [rsp+0x20]
  4287e6:	mov    rax,r14
  4287e9:	mov    rcx,QWORD PTR fs:0x28
  4287f2:	cmp    rcx,QWORD PTR [rsp+0x30]
  4287f7:	jne    428805 <isspace@plt+0x24ef5>
  4287f9:	add    rsp,0x38
  4287fd:	pop    rbx
  4287fe:	pop    r12
  428800:	pop    r14
  428802:	pop    r15
  428804:	ret    
  428805:	call   403280 <__stack_chk_fail@plt>
  42880a:	nop    WORD PTR [rax+rax*1+0x0]
  428810:	push   rax
  428811:	mov    rax,QWORD PTR fs:0x28
  42881a:	mov    QWORD PTR [rsp],rax
  42881e:	lea    rax,[rdi+0x7e8]
  428825:	mov    rdi,rsi
  428828:	mov    rsi,rdx
  42882b:	mov    rdx,rax
  42882e:	call   4133e0 <isspace@plt+0xfad0>
  428833:	mov    rcx,QWORD PTR fs:0x28
  42883c:	cmp    rcx,QWORD PTR [rsp]
  428840:	jne    428844 <isspace@plt+0x24f34>
  428842:	pop    rcx
  428843:	ret    
  428844:	call   403280 <__stack_chk_fail@plt>
  428849:	nop    DWORD PTR [rax+0x0]
  428850:	push   r15
  428852:	push   r14
  428854:	push   r12
  428856:	push   rbx
  428857:	sub    rsp,0x18
  42885b:	mov    rbx,rdx
  42885e:	mov    r15,rsi
  428861:	mov    r14,rdi
  428864:	mov    rax,QWORD PTR fs:0x28
  42886d:	mov    QWORD PTR [rsp+0x10],rax
  428872:	mov    rdi,rsi
  428875:	mov    rsi,rdx
  428878:	call   413750 <isspace@plt+0xfe40>
  42887d:	cmp    rax,rbx
  428880:	je     4288ba <isspace@plt+0x24faa>
  428882:	lea    rsi,[rbx+0x1]
  428886:	add    r14,0x7e8
  42888d:	mov    rdi,r15
  428890:	mov    rdx,r14
  428893:	call   413290 <isspace@plt+0xf980>
  428898:	mov    r12,rax
  42889b:	lea    rdx,[rsp+0xf]
  4288a0:	mov    rdi,r15
  4288a3:	mov    rsi,rax
  4288a6:	call   4112b0 <isspace@plt+0xd9a0>
  4288ab:	test   al,al
  4288ad:	je     4288ba <isspace@plt+0x24faa>
  4288af:	mov    al,BYTE PTR [rsp+0xf]
  4288b3:	cmp    al,BYTE PTR [r14]
  4288b6:	cmove  rbx,r12
  4288ba:	mov    rax,QWORD PTR fs:0x28
  4288c3:	cmp    rax,QWORD PTR [rsp+0x10]
  4288c8:	jne    4288d9 <isspace@plt+0x24fc9>
  4288ca:	mov    rax,rbx
  4288cd:	add    rsp,0x18
  4288d1:	pop    rbx
  4288d2:	pop    r12
  4288d4:	pop    r14
  4288d6:	pop    r15
  4288d8:	ret    
  4288d9:	call   403280 <__stack_chk_fail@plt>
  4288de:	xchg   ax,ax
  4288e0:	push   r15
  4288e2:	push   r14
  4288e4:	push   r12
  4288e6:	push   rbx
  4288e7:	push   rax
  4288e8:	mov    rbx,rdx
  4288eb:	mov    r14,rsi
  4288ee:	mov    r15,rdi
  4288f1:	mov    rax,QWORD PTR fs:0x28
  4288fa:	mov    QWORD PTR [rsp],rax
  4288fe:	mov    rdi,rsi
  428901:	mov    rsi,rdx
  428904:	call   413560 <isspace@plt+0xfc50>
  428909:	cmp    rax,rbx
  42890c:	je     42892c <isspace@plt+0x2501c>
  42890e:	lea    r12,[rbx-0x1]
  428912:	add    r15,0x7e8
  428919:	mov    rdi,r14
  42891c:	mov    rsi,r12
  42891f:	mov    rdx,r15
  428922:	call   4133e0 <isspace@plt+0xfad0>
  428927:	cmp    rax,r12
  42892a:	jne    428940 <isspace@plt+0x25030>
  42892c:	mov    rax,QWORD PTR fs:0x28
  428935:	cmp    rax,QWORD PTR [rsp]
  428939:	jne    428966 <isspace@plt+0x25056>
  42893b:	mov    rax,rbx
  42893e:	jmp    42895a <isspace@plt+0x2504a>
  428940:	mov    rdi,r14
  428943:	mov    rsi,rax
  428946:	call   412fb0 <isspace@plt+0xf6a0>
  42894b:	mov    rcx,QWORD PTR fs:0x28
  428954:	cmp    rcx,QWORD PTR [rsp]
  428958:	jne    428966 <isspace@plt+0x25056>
  42895a:	add    rsp,0x8
  42895e:	pop    rbx
  42895f:	pop    r12
  428961:	pop    r14
  428963:	pop    r15
  428965:	ret    
  428966:	call   403280 <__stack_chk_fail@plt>
  42896b:	nop    DWORD PTR [rax+rax*1+0x0]
  428970:	push   r15
  428972:	push   r14
  428974:	push   r13
  428976:	push   r12
  428978:	push   rbx
  428979:	sub    rsp,0x10
  42897d:	mov    rbx,rdx
  428980:	mov    r14,rsi
  428983:	mov    r12,rdi
  428986:	mov    rax,QWORD PTR fs:0x28
  42898f:	mov    QWORD PTR [rsp+0x8],rax
  428994:	lea    r15,[rdx+0x1]
  428998:	mov    rdi,rsi
  42899b:	mov    rsi,r15
  42899e:	call   413750 <isspace@plt+0xfe40>
  4289a3:	cmp    rax,r15
  4289a6:	je     4289e1 <isspace@plt+0x250d1>
  4289a8:	lea    rsi,[rbx+0x2]
  4289ac:	add    r12,0x7e8
  4289b3:	mov    rdi,r14
  4289b6:	mov    rdx,r12
  4289b9:	call   413290 <isspace@plt+0xf980>
  4289be:	mov    r13,rax
  4289c1:	lea    rdx,[rsp+0x7]
  4289c6:	mov    rdi,r14
  4289c9:	mov    rsi,rax
  4289cc:	call   4112b0 <isspace@plt+0xd9a0>
  4289d1:	test   al,al
  4289d3:	je     4289e1 <isspace@plt+0x250d1>
  4289d5:	mov    al,BYTE PTR [rsp+0x7]
  4289d9:	cmp    al,BYTE PTR [r12]
  4289dd:	cmove  r15,r13
  4289e1:	mov    rdi,r14
  4289e4:	mov    rsi,rbx
  4289e7:	call   413750 <isspace@plt+0xfe40>
  4289ec:	cmp    r15,rbx
  4289ef:	je     428a04 <isspace@plt+0x250f4>
  4289f1:	cmp    rax,rbx
  4289f4:	je     428a04 <isspace@plt+0x250f4>
  4289f6:	mov    rdi,r14
  4289f9:	mov    rsi,r15
  4289fc:	call   413010 <isspace@plt+0xf700>
  428a01:	mov    rbx,rax
  428a04:	mov    rax,QWORD PTR fs:0x28
  428a0d:	cmp    rax,QWORD PTR [rsp+0x8]
  428a12:	jne    428a25 <isspace@plt+0x25115>
  428a14:	mov    rax,rbx
  428a17:	add    rsp,0x10
  428a1b:	pop    rbx
  428a1c:	pop    r12
  428a1e:	pop    r13
  428a20:	pop    r14
  428a22:	pop    r15
  428a24:	ret    
  428a25:	call   403280 <__stack_chk_fail@plt>
  428a2a:	nop    WORD PTR [rax+rax*1+0x0]
  428a30:	push   rax
  428a31:	mov    rax,QWORD PTR fs:0x28
  428a3a:	mov    QWORD PTR [rsp],rax
  428a3e:	xor    esi,esi
  428a40:	call   4135c0 <isspace@plt+0xfcb0>
  428a45:	mov    rcx,QWORD PTR fs:0x28
  428a4e:	cmp    rcx,QWORD PTR [rsp]
  428a52:	jne    428a56 <isspace@plt+0x25146>
  428a54:	pop    rcx
  428a55:	ret    
  428a56:	call   403280 <__stack_chk_fail@plt>
  428a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  428a60:	push   rbx
  428a61:	sub    rsp,0x10
  428a65:	mov    rbx,rdi
  428a68:	mov    rax,QWORD PTR fs:0x28
  428a71:	mov    QWORD PTR [rsp+0x8],rax
  428a76:	call   410a90 <isspace@plt+0xd180>
  428a7b:	lea    rsi,[rax-0x1]
  428a7f:	test   rax,rax
  428a82:	cmove  rsi,rax
  428a86:	mov    rdi,rbx
  428a89:	call   4135c0 <isspace@plt+0xfcb0>
  428a8e:	mov    rcx,QWORD PTR fs:0x28
  428a97:	cmp    rcx,QWORD PTR [rsp+0x8]
  428a9c:	jne    428aa4 <isspace@plt+0x25194>
  428a9e:	add    rsp,0x10
  428aa2:	pop    rbx
  428aa3:	ret    
  428aa4:	call   403280 <__stack_chk_fail@plt>
  428aa9:	nop    DWORD PTR [rax+0x0]
  428ab0:	push   r15
  428ab2:	push   r14
  428ab4:	push   r12
  428ab6:	push   rbx
  428ab7:	push   rax
  428ab8:	mov    r14,rdx
  428abb:	mov    r15,rsi
  428abe:	mov    r12,rdi
  428ac1:	mov    rax,QWORD PTR fs:0x28
  428aca:	mov    QWORD PTR [rsp],rax
  428ace:	call   428f50 <isspace@plt+0x25640>
  428ad3:	mov    rbx,rax
  428ad6:	test   rax,rax
  428ad9:	je     428af8 <isspace@plt+0x251e8>
  428adb:	mov    DWORD PTR [r12+0x7f4],0x35
  428ae7:	mov    rdi,r15
  428aea:	mov    rsi,r14
  428aed:	mov    rdx,rbx
  428af0:	call   415b00 <isspace@plt+0x121f0>
  428af5:	mov    r14,rax
  428af8:	mov    rdi,rbx
  428afb:	call   42b600 <isspace@plt+0x27cf0>
  428b00:	mov    rax,QWORD PTR fs:0x28
  428b09:	cmp    rax,QWORD PTR [rsp]
  428b0d:	jne    428b1e <isspace@plt+0x2520e>
  428b0f:	mov    rax,r14
  428b12:	add    rsp,0x8
  428b16:	pop    rbx
  428b17:	pop    r12
  428b19:	pop    r14
  428b1b:	pop    r15
  428b1d:	ret    
  428b1e:	call   403280 <__stack_chk_fail@plt>
  428b23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428b2d:	nop    DWORD PTR [rax]
  428b30:	push   r15
  428b32:	push   r14
  428b34:	push   r12
  428b36:	push   rbx
  428b37:	push   rax
  428b38:	mov    r14,rdx
  428b3b:	mov    r15,rsi
  428b3e:	mov    r12,rdi
  428b41:	mov    rax,QWORD PTR fs:0x28
  428b4a:	mov    QWORD PTR [rsp],rax
  428b4e:	call   428f50 <isspace@plt+0x25640>
  428b53:	mov    rbx,rax
  428b56:	test   rax,rax
  428b59:	je     428b78 <isspace@plt+0x25268>
  428b5b:	mov    DWORD PTR [r12+0x7f4],0x36
  428b67:	mov    rdi,r15
  428b6a:	mov    rsi,r14
  428b6d:	mov    rdx,rbx
  428b70:	call   415be0 <isspace@plt+0x122d0>
  428b75:	mov    r14,rax
  428b78:	mov    rdi,rbx
  428b7b:	call   42b600 <isspace@plt+0x27cf0>
  428b80:	mov    rax,QWORD PTR fs:0x28
  428b89:	cmp    rax,QWORD PTR [rsp]
  428b8d:	jne    428b9e <isspace@plt+0x2528e>
  428b8f:	mov    rax,r14
  428b92:	add    rsp,0x8
  428b96:	pop    rbx
  428b97:	pop    r12
  428b99:	pop    r14
  428b9b:	pop    r15
  428b9d:	ret    
  428b9e:	call   403280 <__stack_chk_fail@plt>
  428ba3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428bad:	nop    DWORD PTR [rax]
  428bb0:	push   r15
  428bb2:	push   r14
  428bb4:	push   rbx
  428bb5:	sub    rsp,0x10
  428bb9:	mov    r14,rdx
  428bbc:	mov    r15,rsi
  428bbf:	mov    rax,QWORD PTR fs:0x28
  428bc8:	mov    QWORD PTR [rsp+0x8],rax
  428bcd:	xor    esi,esi
  428bcf:	call   425330 <isspace@plt+0x21a20>
  428bd4:	mov    rbx,rax
  428bd7:	test   rax,rax
  428bda:	je     428bed <isspace@plt+0x252dd>
  428bdc:	mov    rdi,r15
  428bdf:	mov    rsi,r14
  428be2:	mov    rdx,rbx
  428be5:	call   415b00 <isspace@plt+0x121f0>
  428bea:	mov    r14,rax
  428bed:	mov    rdi,rbx
  428bf0:	call   42b600 <isspace@plt+0x27cf0>
  428bf5:	mov    rax,QWORD PTR fs:0x28
  428bfe:	cmp    rax,QWORD PTR [rsp+0x8]
  428c03:	jne    428c12 <isspace@plt+0x25302>
  428c05:	mov    rax,r14
  428c08:	add    rsp,0x10
  428c0c:	pop    rbx
  428c0d:	pop    r14
  428c0f:	pop    r15
  428c11:	ret    
  428c12:	call   403280 <__stack_chk_fail@plt>
  428c17:	nop    WORD PTR [rax+rax*1+0x0]
  428c20:	push   r15
  428c22:	push   r14
  428c24:	push   rbx
  428c25:	sub    rsp,0x10
  428c29:	mov    r14,rdx
  428c2c:	mov    r15,rsi
  428c2f:	mov    rax,QWORD PTR fs:0x28
  428c38:	mov    QWORD PTR [rsp+0x8],rax
  428c3d:	xor    esi,esi
  428c3f:	call   425330 <isspace@plt+0x21a20>
  428c44:	mov    rbx,rax
  428c47:	test   rax,rax
  428c4a:	je     428c5d <isspace@plt+0x2534d>
  428c4c:	mov    rdi,r15
  428c4f:	mov    rsi,r14
  428c52:	mov    rdx,rbx
  428c55:	call   415be0 <isspace@plt+0x122d0>
  428c5a:	mov    r14,rax
  428c5d:	mov    rdi,rbx
  428c60:	call   42b600 <isspace@plt+0x27cf0>
  428c65:	mov    rax,QWORD PTR fs:0x28
  428c6e:	cmp    rax,QWORD PTR [rsp+0x8]
  428c73:	jne    428c82 <isspace@plt+0x25372>
  428c75:	mov    rax,r14
  428c78:	add    rsp,0x10
  428c7c:	pop    rbx
  428c7d:	pop    r14
  428c7f:	pop    r15
  428c81:	ret    
  428c82:	call   403280 <__stack_chk_fail@plt>
  428c87:	nop    WORD PTR [rax+rax*1+0x0]
  428c90:	push   rbx
  428c91:	sub    rsp,0x10
  428c95:	mov    rbx,rsi
  428c98:	mov    rax,QWORD PTR fs:0x28
  428ca1:	mov    QWORD PTR [rsp+0x8],rax
  428ca6:	mov    esi,0x1
  428cab:	call   424a90 <isspace@plt+0x21180>
  428cb0:	mov    rdi,rbx
  428cb3:	mov    esi,eax
  428cb5:	call   41eee0 <isspace@plt+0x1b5d0>
  428cba:	mov    rcx,QWORD PTR fs:0x28
  428cc3:	cmp    rcx,QWORD PTR [rsp+0x8]
  428cc8:	jne    428cd0 <isspace@plt+0x253c0>
  428cca:	add    rsp,0x10
  428cce:	pop    rbx
  428ccf:	ret    
  428cd0:	call   403280 <__stack_chk_fail@plt>
  428cd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428cdf:	nop
  428ce0:	push   rbx
  428ce1:	sub    rsp,0x10
  428ce5:	mov    rbx,rsi
  428ce8:	mov    rax,QWORD PTR fs:0x28
  428cf1:	mov    QWORD PTR [rsp+0x8],rax
  428cf6:	mov    rdi,rsi
  428cf9:	call   41b6d0 <isspace@plt+0x17dc0>
  428cfe:	mov    ecx,eax
  428d00:	shr    ecx,0x1f
  428d03:	lea    esi,[rcx+rax*1]
  428d06:	sar    esi,1
  428d08:	mov    rdi,rbx
  428d0b:	call   41eee0 <isspace@plt+0x1b5d0>
  428d10:	mov    rcx,QWORD PTR fs:0x28
  428d19:	cmp    rcx,QWORD PTR [rsp+0x8]
  428d1e:	jne    428d26 <isspace@plt+0x25416>
  428d20:	add    rsp,0x10
  428d24:	pop    rbx
  428d25:	ret    
  428d26:	call   403280 <__stack_chk_fail@plt>
  428d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  428d30:	push   rbp
  428d31:	push   r14
  428d33:	push   rbx
  428d34:	sub    rsp,0x10
  428d38:	mov    rbx,rdi
  428d3b:	mov    rax,QWORD PTR fs:0x28
  428d44:	mov    QWORD PTR [rsp+0x8],rax
  428d49:	mov    rax,QWORD PTR [rdi+0x30]
  428d4d:	mov    rdi,QWORD PTR [rax+0x18]
  428d51:	call   41b6d0 <isspace@plt+0x17dc0>
  428d56:	mov    ebp,eax
  428d58:	mov    rax,QWORD PTR [rbx+0x30]
  428d5c:	mov    r14,QWORD PTR [rax+0x18]
  428d60:	xor    esi,esi
  428d62:	mov    rdi,rbx
  428d65:	call   424a90 <isspace@plt+0x21180>
  428d6a:	sub    ebp,eax
  428d6c:	mov    rdi,r14
  428d6f:	mov    esi,ebp
  428d71:	call   41eee0 <isspace@plt+0x1b5d0>
  428d76:	mov    rcx,QWORD PTR fs:0x28
  428d7f:	cmp    rcx,QWORD PTR [rsp+0x8]
  428d84:	jne    428d8f <isspace@plt+0x2547f>
  428d86:	add    rsp,0x10
  428d8a:	pop    rbx
  428d8b:	pop    r14
  428d8d:	pop    rbp
  428d8e:	ret    
  428d8f:	call   403280 <__stack_chk_fail@plt>
  428d94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428d9e:	xchg   ax,ax
  428da0:	push   rax
  428da1:	mov    rax,QWORD PTR fs:0x28
  428daa:	mov    QWORD PTR [rsp],rax
  428dae:	mov    rax,QWORD PTR fs:0x28
  428db7:	cmp    rax,QWORD PTR [rsp]
  428dbb:	jne    428dc2 <isspace@plt+0x254b2>
  428dbd:	mov    rax,rdx
  428dc0:	pop    rcx
  428dc1:	ret    
  428dc2:	call   403280 <__stack_chk_fail@plt>
  428dc7:	nop    WORD PTR [rax+rax*1+0x0]
  428dd0:	push   rbp
  428dd1:	push   rbx
  428dd2:	push   rax
  428dd3:	mov    rbx,rsi
  428dd6:	mov    rax,QWORD PTR fs:0x28
  428ddf:	mov    QWORD PTR [rsp],rax
  428de3:	xor    esi,esi
  428de5:	call   424a90 <isspace@plt+0x21180>
  428dea:	cmp    eax,0x65
  428ded:	mov    ebp,0x64
  428df2:	cmovl  ebp,eax
  428df5:	mov    rdi,rbx
  428df8:	call   410a90 <isspace@plt+0xd180>
  428dfd:	movsxd rdx,ebp
  428e00:	imul   rdx,rax
  428e04:	shr    rdx,0x2
  428e08:	movabs rax,0x28f5c28f5c28f5c3
  428e12:	mulx   rax,rcx,rax
  428e17:	mov    rcx,QWORD PTR fs:0x28
  428e20:	cmp    rcx,QWORD PTR [rsp]
  428e24:	jne    428e31 <isspace@plt+0x25521>
  428e26:	shr    rax,0x2
  428e2a:	add    rsp,0x8
  428e2e:	pop    rbx
  428e2f:	pop    rbp
  428e30:	ret    
  428e31:	call   403280 <__stack_chk_fail@plt>
  428e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428e40:	push   r14
  428e42:	push   rbx
  428e43:	push   rax
  428e44:	mov    r14,rsi
  428e47:	mov    rax,QWORD PTR fs:0x28
  428e50:	mov    QWORD PTR [rsp],rax
  428e54:	xor    esi,esi
  428e56:	call   424a90 <isspace@plt+0x21180>
  428e5b:	movsxd rbx,eax
  428e5e:	mov    rdi,r14
  428e61:	call   410a90 <isspace@plt+0xd180>
  428e66:	cmp    rax,rbx
  428e69:	cmovb  rbx,rax
  428e6d:	mov    rax,QWORD PTR fs:0x28
  428e76:	cmp    rax,QWORD PTR [rsp]
  428e7a:	jne    428e87 <isspace@plt+0x25577>
  428e7c:	mov    rax,rbx
  428e7f:	add    rsp,0x8
  428e83:	pop    rbx
  428e84:	pop    r14
  428e86:	ret    
  428e87:	call   403280 <__stack_chk_fail@plt>
  428e8c:	nop    DWORD PTR [rax+0x0]
  428e90:	push   rbx
  428e91:	sub    rsp,0x10
  428e95:	mov    rbx,rdx
  428e98:	mov    rax,QWORD PTR fs:0x28
  428ea1:	mov    QWORD PTR [rsp+0x8],rax
  428ea6:	mov    esi,0x1
  428eab:	call   424a90 <isspace@plt+0x21180>
  428eb0:	cdqe   
  428eb2:	cmp    rax,rbx
  428eb5:	cmova  rbx,rax
  428eb9:	mov    rcx,QWORD PTR fs:0x28
  428ec2:	cmp    rcx,QWORD PTR [rsp+0x8]
  428ec7:	jne    428ed5 <isspace@plt+0x255c5>
  428ec9:	sub    rbx,rax
  428ecc:	mov    rax,rbx
  428ecf:	add    rsp,0x10
  428ed3:	pop    rbx
  428ed4:	ret    
  428ed5:	call   403280 <__stack_chk_fail@plt>
  428eda:	nop    WORD PTR [rax+rax*1+0x0]
  428ee0:	push   r15
  428ee2:	push   r14
  428ee4:	push   rbx
  428ee5:	sub    rsp,0x10
  428ee9:	mov    r15,rdx
  428eec:	mov    r14,rsi
  428eef:	mov    rax,QWORD PTR fs:0x28
  428ef8:	mov    QWORD PTR [rsp+0x8],rax
  428efd:	mov    esi,0x1
  428f02:	call   424a90 <isspace@plt+0x21180>
  428f07:	movsxd rbx,eax
  428f0a:	add    rbx,r15
  428f0d:	mov    rdi,r14
  428f10:	call   410a90 <isspace@plt+0xd180>
  428f15:	mov    rcx,rax
  428f18:	cmp    rbx,r15
  428f1b:	cmova  rax,rbx
  428f1f:	cmp    rbx,rcx
  428f22:	cmova  rax,rcx
  428f26:	mov    rcx,QWORD PTR fs:0x28
  428f2f:	cmp    rcx,QWORD PTR [rsp+0x8]
  428f34:	jne    428f40 <isspace@plt+0x25630>
  428f36:	add    rsp,0x10
  428f3a:	pop    rbx
  428f3b:	pop    r14
  428f3d:	pop    r15
  428f3f:	ret    
  428f40:	call   403280 <__stack_chk_fail@plt>
  428f45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428f4f:	nop
  428f50:	push   r15
  428f52:	push   r14
  428f54:	push   rbx
  428f55:	sub    rsp,0x220
  428f5c:	mov    rbx,rsi
  428f5f:	mov    r14,rdi
  428f62:	mov    rax,QWORD PTR fs:0x28
  428f6b:	mov    QWORD PTR [rsp+0x218],rax
  428f73:	mov    rdi,rsi
  428f76:	mov    rsi,rdx
  428f79:	call   415cc0 <isspace@plt+0x123b0>
  428f7e:	mov    QWORD PTR [rsp],rax
  428f82:	mov    QWORD PTR [rsp+0x8],rdx
  428f87:	mov    rdi,rsp
  428f8a:	call   417400 <isspace@plt+0x13af0>
  428f8f:	test   al,al
  428f91:	je     429034 <isspace@plt+0x25724>
  428f97:	mov    r15,QWORD PTR [rsp]
  428f9b:	mov    rdi,rsp
  428f9e:	call   417460 <isspace@plt+0x13b50>
  428fa3:	mov    rdi,rbx
  428fa6:	mov    rsi,r15
  428fa9:	mov    rdx,rax
  428fac:	call   411460 <isspace@plt+0xdb50>
  428fb1:	test   rax,rax
  428fb4:	je     429034 <isspace@plt+0x25724>
  428fb6:	mov    r15,rax
  428fb9:	lea    r8,[rip+0x91f8]        # 4321b8 <isspace@plt+0x2e8a8>
  428fc0:	lea    rbx,[rsp+0x10]
  428fc5:	mov    esi,0x200
  428fca:	mov    edx,0x1
  428fcf:	mov    ecx,0x200
  428fd4:	xor    eax,eax
  428fd6:	mov    rdi,rbx
  428fd9:	mov    r9,r15
  428fdc:	call   4030c0 <__snprintf_chk@plt>
  428fe1:	mov    rdi,r14
  428fe4:	mov    rsi,rbx
  428fe7:	call   425330 <isspace@plt+0x21a20>
  428fec:	mov    rbx,rax
  428fef:	test   rax,rax
  428ff2:	jne    42902a <isspace@plt+0x2571a>
  428ff4:	lea    r8,[rip+0x91ce]        # 4321c9 <isspace@plt+0x2e8b9>
  428ffb:	lea    rbx,[rsp+0x10]
  429000:	mov    esi,0x200
  429005:	mov    edx,0x1
  42900a:	mov    ecx,0x200
  42900f:	xor    eax,eax
  429011:	mov    rdi,rbx
  429014:	mov    r9,r15
  429017:	call   4030c0 <__snprintf_chk@plt>
  42901c:	mov    rdi,r14
  42901f:	mov    rsi,rbx
  429022:	call   425330 <isspace@plt+0x21a20>
  429027:	mov    rbx,rax
  42902a:	mov    rdi,r15
  42902d:	call   4030d0 <free@plt>
  429032:	jmp    429036 <isspace@plt+0x25726>
  429034:	xor    ebx,ebx
  429036:	mov    rax,QWORD PTR fs:0x28
  42903f:	cmp    rax,QWORD PTR [rsp+0x218]
  429047:	jne    429059 <isspace@plt+0x25749>
  429049:	mov    rax,rbx
  42904c:	add    rsp,0x220
  429053:	pop    rbx
  429054:	pop    r14
  429056:	pop    r15
  429058:	ret    
  429059:	call   403280 <__stack_chk_fail@plt>
  42905e:	xchg   ax,ax
  429060:	push   r15
  429062:	push   r14
  429064:	push   rbx
  429065:	sub    rsp,0xd0
  42906c:	mov    r15d,esi
  42906f:	mov    r14,rdi
  429072:	test   al,al
  429074:	je     4290af <isspace@plt+0x2579f>
  429076:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  42907c:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  429082:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  429088:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  42908e:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  429094:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  42909d:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  4290a6:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  4290af:	mov    QWORD PTR [rsp+0x28],r9
  4290b4:	mov    QWORD PTR [rsp+0x20],r8
  4290b9:	mov    QWORD PTR [rsp+0x18],rcx
  4290be:	mov    QWORD PTR [rsp+0x10],rdx
  4290c3:	mov    rax,QWORD PTR fs:0x28
  4290cc:	mov    QWORD PTR [rsp+0xc8],rax
  4290d4:	mov    rax,rsp
  4290d7:	mov    QWORD PTR [rsp+0xc0],rax
  4290df:	lea    rax,[rsp+0xf0]
  4290e7:	mov    QWORD PTR [rsp+0xb8],rax
  4290ef:	movabs rax,0x3000000010
  4290f9:	mov    QWORD PTR [rsp+0xb0],rax
  429101:	cmp    r15d,0xe
  429105:	ja     42922b <isspace@plt+0x2591b>
  42910b:	mov    eax,r15d
  42910e:	lea    rcx,[rip+0x90cb]        # 4321e0 <isspace@plt+0x2e8d0>
  429115:	movsxd rax,DWORD PTR [rcx+rax*4]
  429119:	add    rax,rcx
  42911c:	jmp    rax
  42911e:	mov    DWORD PTR [r14+0x950],r15d
  429125:	mov    r15d,0x3
  42912b:	jmp    4292d2 <isspace@plt+0x259c2>
  429130:	mov    esi,0x1
  429135:	mov    rdi,r14
  429138:	call   428110 <isspace@plt+0x24800>
  42913d:	jmp    4292d2 <isspace@plt+0x259c2>
  429142:	mov    DWORD PTR [r14+0x950],r15d
  429149:	mov    r15d,0x9
  42914f:	jmp    4292d2 <isspace@plt+0x259c2>
  429154:	mov    rdi,r14
  429157:	call   427920 <isspace@plt+0x24010>
  42915c:	mov    ebx,eax
  42915e:	mov    rdi,r14
  429161:	call   42b140 <isspace@plt+0x27830>
  429166:	xor    r15d,r15d
  429169:	test   eax,eax
  42916b:	jne    4292d2 <isspace@plt+0x259c2>
  429171:	or     ebx,0x1
  429174:	cmp    ebx,0x5
  429177:	jne    4292d2 <isspace@plt+0x259c2>
  42917d:	mov    esi,0xc
  429182:	mov    rdi,r14
  429185:	call   42b0e0 <isspace@plt+0x277d0>
  42918a:	jmp    4292d2 <isspace@plt+0x259c2>
  42918f:	movsxd rcx,DWORD PTR [rsp+0xb0]
  429197:	cmp    rcx,0x28
  42919b:	ja     429258 <isspace@plt+0x25948>
  4291a1:	mov    rax,rcx
  4291a4:	add    rax,QWORD PTR [rsp+0xc0]
  4291ac:	lea    ecx,[rcx+0x8]
  4291af:	mov    DWORD PTR [rsp+0xb0],ecx
  4291b6:	jmp    42926c <isspace@plt+0x2595c>
  4291bb:	movsxd rcx,DWORD PTR [rsp+0xb0]
  4291c3:	cmp    rcx,0x28
  4291c7:	ja     42927e <isspace@plt+0x2596e>
  4291cd:	mov    rax,rcx
  4291d0:	add    rax,QWORD PTR [rsp+0xc0]
  4291d8:	lea    ecx,[rcx+0x8]
  4291db:	mov    DWORD PTR [rsp+0xb0],ecx
  4291e2:	jmp    429292 <isspace@plt+0x25982>
  4291e7:	mov    esi,0xf
  4291ec:	mov    rdi,r14
  4291ef:	call   424580 <isspace@plt+0x20c70>
  4291f4:	mov    rbx,rax
  4291f7:	mov    rdi,rax
  4291fa:	call   4045a0 <isspace@plt+0xc90>
  4291ff:	movsxd rcx,DWORD PTR [rsp+0xb0]
  429207:	cmp    rcx,0x28
  42920b:	ja     4292a3 <isspace@plt+0x25993>
  429211:	mov    rax,rcx
  429214:	add    rax,QWORD PTR [rsp+0xc0]
  42921c:	lea    ecx,[rcx+0x8]
  42921f:	mov    DWORD PTR [rsp+0xb0],ecx
  429226:	jmp    4292b7 <isspace@plt+0x259a7>
  42922b:	cmp    r15d,0x9
  42922f:	jbe    4292d2 <isspace@plt+0x259c2>
  429235:	lea    rdi,[r14+0xae0]
  42923c:	lea    esi,[r15-0xf]
  429240:	call   403c60 <isspace@plt+0x350>
  429245:	mov    rbx,rax
  429248:	test   rax,rax
  42924b:	jne    4292e0 <isspace@plt+0x259d0>
  429251:	xor    eax,eax
  429253:	jmp    429332 <isspace@plt+0x25a22>
  429258:	mov    rax,QWORD PTR [rsp+0xb8]
  429260:	lea    rcx,[rax+0x8]
  429264:	mov    QWORD PTR [rsp+0xb8],rcx
  42926c:	mov    rax,QWORD PTR [rax]
  42926f:	mov    QWORD PTR [r14+0x950],rax
  429276:	mov    r15d,0x6
  42927c:	jmp    4292d2 <isspace@plt+0x259c2>
  42927e:	mov    rax,QWORD PTR [rsp+0xb8]
  429286:	lea    rcx,[rax+0x8]
  42928a:	mov    QWORD PTR [rsp+0xb8],rcx
  429292:	mov    eax,DWORD PTR [rax]
  429294:	mov    DWORD PTR [r14+0x914],eax
  42929b:	mov    r15d,0x7
  4292a1:	jmp    4292d2 <isspace@plt+0x259c2>
  4292a3:	mov    rax,QWORD PTR [rsp+0xb8]
  4292ab:	lea    rcx,[rax+0x8]
  4292af:	mov    QWORD PTR [rsp+0xb8],rcx
  4292b7:	mov    rsi,QWORD PTR [rax]
  4292ba:	mov    rdi,rbx
  4292bd:	call   404960 <isspace@plt+0x1050>
  4292c2:	mov    rax,QWORD PTR [rbx]
  4292c5:	mov    QWORD PTR [r14+0x950],rax
  4292cc:	mov    r15d,0x8
  4292d2:	mov    ebx,r15d
  4292d5:	shl    rbx,0x4
  4292d9:	add    rbx,QWORD PTR [rip+0x19ca8]        # 442f88 <isspace@plt+0x3f678>
  4292e0:	mov    rax,QWORD PTR [r14+0x9a0]
  4292e7:	cmp    BYTE PTR [rax+0x58],0x0
  4292eb:	je     4292fe <isspace@plt+0x259ee>
  4292ed:	mov    QWORD PTR [r14+0x920],rbx
  4292f4:	mov    rdi,r14
  4292f7:	call   422aa0 <isspace@plt+0x1f190>
  4292fc:	jmp    429330 <isspace@plt+0x25a20>
  4292fe:	mov    esi,0x1
  429303:	mov    rdi,r14
  429306:	call   427780 <isspace@plt+0x23e70>
  42930b:	cmp    QWORD PTR [r14+0x920],rbx
  429312:	je     429352 <isspace@plt+0x25a42>
  429314:	mov    QWORD PTR [r14+0x920],rbx
  42931b:	cmp    r15d,0x3
  42931f:	jne    429330 <isspace@plt+0x25a20>
  429321:	mov    esi,0x3c
  429326:	xor    eax,eax
  429328:	mov    rdi,r14
  42932b:	call   428140 <isspace@plt+0x24830>
  429330:	mov    al,0x1
  429332:	mov    rcx,QWORD PTR fs:0x28
  42933b:	cmp    rcx,QWORD PTR [rsp+0xc8]
  429343:	jne    429376 <isspace@plt+0x25a66>
  429345:	add    rsp,0xd0
  42934c:	pop    rbx
  42934d:	pop    r14
  42934f:	pop    r15
  429351:	ret    
  429352:	mov    esi,0x1
  429357:	mov    rdi,r14
  42935a:	call   428110 <isspace@plt+0x24800>
  42935f:	mov    esi,0xd
  429364:	xor    eax,eax
  429366:	mov    rdi,r14
  429369:	call   428140 <isspace@plt+0x24830>
  42936e:	cmp    r15d,0x3
  429372:	je     429321 <isspace@plt+0x25a11>
  429374:	jmp    429330 <isspace@plt+0x25a20>
  429376:	call   403280 <__stack_chk_fail@plt>
  42937b:	nop    DWORD PTR [rax+rax*1+0x0]
  429380:	push   r15
  429382:	push   r14
  429384:	push   rbx
  429385:	sub    rsp,0x10
  429389:	mov    rbx,rdx
  42938c:	mov    r15,rsi
  42938f:	mov    rax,QWORD PTR fs:0x28
  429398:	mov    QWORD PTR [rsp+0x8],rax
  42939d:	mov    al,BYTE PTR [rdx+0x38]
  4293a0:	mov    rsi,QWORD PTR [rdx+0x8]
  4293a4:	mov    BYTE PTR [rsi+0x20],al
  4293a7:	mov    rdx,QWORD PTR [rdx+0x10]
  4293ab:	lea    r14,[rbx+0x18]
  4293af:	mov    rcx,r15
  4293b2:	mov    r8,r14
  4293b5:	call   42aca0 <isspace@plt+0x27390>
  4293ba:	mov    rdi,r15
  4293bd:	mov    rsi,r14
  4293c0:	call   410610 <isspace@plt+0xcd00>
  4293c5:	mov    r14,QWORD PTR [rbx+0x18]
  4293c9:	cmp    BYTE PTR [rbx+0x38],0x0
  4293cd:	je     429404 <isspace@plt+0x25af4>
  4293cf:	mov    rdi,r15
  4293d2:	call   410a90 <isspace@plt+0xd180>
  4293d7:	cmp    r14,rax
  4293da:	jne    429404 <isspace@plt+0x25af4>
  4293dc:	mov    rdi,r15
  4293df:	mov    rsi,r14
  4293e2:	call   413500 <isspace@plt+0xfbf0>
  4293e7:	mov    rdi,r15
  4293ea:	mov    rsi,rax
  4293ed:	call   413560 <isspace@plt+0xfc50>
  4293f2:	mov    rcx,QWORD PTR fs:0x28
  4293fb:	cmp    rcx,QWORD PTR [rsp+0x8]
  429400:	je     429417 <isspace@plt+0x25b07>
  429402:	jmp    429421 <isspace@plt+0x25b11>
  429404:	mov    rax,QWORD PTR fs:0x28
  42940d:	cmp    rax,QWORD PTR [rsp+0x8]
  429412:	jne    429421 <isspace@plt+0x25b11>
  429414:	mov    rax,r14
  429417:	add    rsp,0x10
  42941b:	pop    rbx
  42941c:	pop    r14
  42941e:	pop    r15
  429420:	ret    
  429421:	call   403280 <__stack_chk_fail@plt>
  429426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429430:	push   rbp
  429431:	push   r15
  429433:	push   r14
  429435:	push   r12
  429437:	push   rbx
  429438:	sub    rsp,0x10
  42943c:	mov    rbx,rdx
  42943f:	mov    r15,rsi
  429442:	mov    r14,rdi
  429445:	mov    rax,QWORD PTR fs:0x28
  42944e:	mov    QWORD PTR [rsp+0x8],rax
  429453:	lea    rbp,[rdx+0x18]
  429457:	cmp    BYTE PTR [rdx+0x38],0x0
  42945b:	mov    al,0x1
  42945d:	mov    r12b,0x1
  429460:	jne    429473 <isspace@plt+0x25b63>
  429462:	mov    rdi,r15
  429465:	mov    rsi,rbp
  429468:	call   417380 <isspace@plt+0x13a70>
  42946d:	mov    r12d,eax
  429470:	mov    al,BYTE PTR [rbx+0x38]
  429473:	mov    rsi,QWORD PTR [rbx+0x8]
  429477:	mov    BYTE PTR [rsi+0x20],al
  42947a:	mov    rdx,QWORD PTR [rbx+0x10]
  42947e:	mov    rdi,r14
  429481:	mov    rcx,r15
  429484:	mov    r8,rbp
  429487:	call   42aca0 <isspace@plt+0x27390>
  42948c:	mov    rdi,r15
  42948f:	mov    rsi,rbp
  429492:	call   410610 <isspace@plt+0xcd00>
  429497:	cmp    BYTE PTR [rbx+0x38],0x0
  42949b:	je     4294c4 <isspace@plt+0x25bb4>
  42949d:	mov    rbp,QWORD PTR [rbx+0x18]
  4294a1:	mov    rdi,r15
  4294a4:	call   410a90 <isspace@plt+0xd180>
  4294a9:	cmp    rbp,rax
  4294ac:	jne    4294c4 <isspace@plt+0x25bb4>
  4294ae:	mov    rdi,r15
  4294b1:	mov    rsi,rbp
  4294b4:	call   413500 <isspace@plt+0xfbf0>
  4294b9:	mov    rdi,r15
  4294bc:	mov    rsi,rax
  4294bf:	call   413560 <isspace@plt+0xfc50>
  4294c4:	mov    rbx,QWORD PTR [rbx+0x18]
  4294c8:	test   r12b,r12b
  4294cb:	je     4294ea <isspace@plt+0x25bda>
  4294cd:	lea    rdx,[rbx-0x1]
  4294d1:	test   rbx,rbx
  4294d4:	cmove  rdx,rbx
  4294d8:	mov    rdi,r14
  4294db:	mov    rsi,r15
  4294de:	call   4250c0 <isspace@plt+0x217b0>
  4294e3:	test   rbx,rbx
  4294e6:	cmovne rbx,rax
  4294ea:	mov    rax,QWORD PTR fs:0x28
  4294f3:	cmp    rax,QWORD PTR [rsp+0x8]
  4294f8:	jne    42950a <isspace@plt+0x25bfa>
  4294fa:	mov    rax,rbx
  4294fd:	add    rsp,0x10
  429501:	pop    rbx
  429502:	pop    r12
  429504:	pop    r14
  429506:	pop    r15
  429508:	pop    rbp
  429509:	ret    
  42950a:	call   403280 <__stack_chk_fail@plt>
  42950f:	nop
  429510:	push   r15
  429512:	push   r14
  429514:	push   r12
  429516:	push   rbx
  429517:	push   rax
  429518:	mov    rbx,rdx
  42951b:	mov    r14,rsi
  42951e:	mov    r15,rdi
  429521:	mov    rax,QWORD PTR fs:0x28
  42952a:	mov    QWORD PTR [rsp],rax
  42952e:	mov    al,BYTE PTR [rdx+0x38]
  429531:	mov    rsi,QWORD PTR [rdx+0x8]
  429535:	mov    BYTE PTR [rsi+0x20],al
  429538:	mov    rdx,QWORD PTR [rdx+0x10]
  42953c:	lea    r12,[rbx+0x18]
  429540:	mov    rcx,r14
  429543:	mov    r8,r12
  429546:	call   42aca0 <isspace@plt+0x27390>
  42954b:	mov    rax,QWORD PTR [rbx+0x8]
  42954f:	lea    rcx,[r15+0x40]
  429553:	cmp    rax,rcx
  429556:	jne    429578 <isspace@plt+0x25c68>
  429558:	mov    al,BYTE PTR [rax+0x20]
  42955b:	mov    BYTE PTR [r15+0x88],al
  429562:	mov    rdx,QWORD PTR [rbx+0x10]
  429566:	lea    rsi,[r15+0x68]
  42956a:	mov    rdi,r15
  42956d:	mov    rcx,r14
  429570:	mov    r8,r12
  429573:	call   42aca0 <isspace@plt+0x27390>
  429578:	movzx  eax,BYTE PTR [rbx+0x38]
  42957c:	shl    rax,0x4
  429580:	mov    rax,QWORD PTR [rbx+rax*1+0x18]
  429585:	mov    rcx,QWORD PTR fs:0x28
  42958e:	cmp    rcx,QWORD PTR [rsp]
  429592:	jne    4295a0 <isspace@plt+0x25c90>
  429594:	add    rsp,0x8
  429598:	pop    rbx
  429599:	pop    r12
  42959b:	pop    r14
  42959d:	pop    r15
  42959f:	ret    
  4295a0:	call   403280 <__stack_chk_fail@plt>
  4295a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4295af:	nop
  4295b0:	push   rbp
  4295b1:	push   r15
  4295b3:	push   r14
  4295b5:	push   r13
  4295b7:	push   r12
  4295b9:	push   rbx
  4295ba:	sub    rsp,0x28
  4295be:	mov    r15,rdx
  4295c1:	mov    r14,rsi
  4295c4:	mov    QWORD PTR [rsp],rdi
  4295c8:	mov    rax,QWORD PTR fs:0x28
  4295d1:	mov    QWORD PTR [rsp+0x20],rax
  4295d6:	mov    rbx,QWORD PTR [rdx+0x28]
  4295da:	lea    r12,[rdx+0x18]
  4295de:	mov    rdi,r12
  4295e1:	call   417460 <isspace@plt+0x13b50>
  4295e6:	mov    r13,rax
  4295e9:	test   rax,rax
  4295ec:	je     429610 <isspace@plt+0x25d00>
  4295ee:	mov    rdi,r14
  4295f1:	mov    rsi,r12
  4295f4:	call   417380 <isspace@plt+0x13a70>
  4295f9:	mov    ebp,eax
  4295fb:	mov    rdi,r14
  4295fe:	mov    rsi,r12
  429601:	call   410610 <isspace@plt+0xcd00>
  429606:	mov    rbx,QWORD PTR [r15+0x18]
  42960a:	mov    QWORD PTR [r15+0x28],rbx
  42960e:	jmp    429612 <isspace@plt+0x25d02>
  429610:	xor    ebp,ebp
  429612:	mov    rax,QWORD PTR [r15+0x40]
  429616:	mov    eax,DWORD PTR [rax]
  429618:	lea    ecx,[rax-0xd]
  42961b:	cmp    ecx,0x2
  42961e:	jb     429670 <isspace@plt+0x25d60>
  429620:	cmp    eax,0x3
  429623:	je     42962a <isspace@plt+0x25d1a>
  429625:	cmp    eax,0xc
  429628:	jne    4296a2 <isspace@plt+0x25d92>
  42962a:	mov    ecx,ebp
  42962c:	lea    rbp,[r15+0x8]
  429630:	mov    rax,QWORD PTR [r15+0x8]
  429634:	cmp    BYTE PTR [rax+0x20],0x0
  429638:	sete   al
  42963b:	or     cl,al
  42963d:	je     429692 <isspace@plt+0x25d82>
  42963f:	test   r13,r13
  429642:	jne    4296a6 <isspace@plt+0x25d96>
  429644:	lea    rdx,[rsp+0x1f]
  429649:	mov    rdi,r14
  42964c:	mov    rsi,rbx
  42964f:	call   4112b0 <isspace@plt+0xd9a0>
  429654:	cmp    BYTE PTR [rsp+0x1f],0xa
  429659:	mov    r12,QWORD PTR [rsp]
  42965d:	je     4296aa <isspace@plt+0x25d9a>
  42965f:	test   al,al
  429661:	je     4296aa <isspace@plt+0x25d9a>
  429663:	mov    rdi,r14
  429666:	mov    rsi,rbx
  429669:	call   412fb0 <isspace@plt+0xf6a0>
  42966e:	jmp    42968d <isspace@plt+0x25d7d>
  429670:	lea    rbp,[r15+0x8]
  429674:	mov    rax,QWORD PTR [r15+0x8]
  429678:	cmp    BYTE PTR [rax+0x20],0x0
  42967c:	mov    r12,QWORD PTR [rsp]
  429680:	je     4296aa <isspace@plt+0x25d9a>
  429682:	mov    rdi,r14
  429685:	mov    rsi,rbx
  429688:	call   413560 <isspace@plt+0xfc50>
  42968d:	mov    rbx,rax
  429690:	jmp    4296aa <isspace@plt+0x25d9a>
  429692:	mov    rdi,r14
  429695:	mov    rsi,rbx
  429698:	call   4137b0 <isspace@plt+0xfea0>
  42969d:	mov    rbx,rax
  4296a0:	jmp    4296a6 <isspace@plt+0x25d96>
  4296a2:	lea    rbp,[r15+0x8]
  4296a6:	mov    r12,QWORD PTR [rsp]
  4296aa:	mov    rsi,QWORD PTR [r15+0x8]
  4296ae:	mov    rdx,QWORD PTR [r15+0x10]
  4296b2:	lea    rcx,[rsp+0x10]
  4296b7:	mov    rdi,r12
  4296ba:	call   42a810 <isspace@plt+0x26f00>
  4296bf:	cmp    DWORD PTR [r15],0x0
  4296c3:	jle    429786 <isspace@plt+0x25e76>
  4296c9:	mov    r12,rax
  4296cc:	xor    r13d,r13d
  4296cf:	nop
  4296d0:	test   rbx,rbx
  4296d3:	je     42971a <isspace@plt+0x25e0a>
  4296d5:	mov    rax,QWORD PTR [rbp+0x0]
  4296d9:	movzx  eax,BYTE PTR [rax+0x20]
  4296dd:	test   al,al
  4296df:	je     42971a <isspace@plt+0x25e0a>
  4296e1:	lea    rsi,[rbx-0x1]
  4296e5:	mov    rdi,r14
  4296e8:	lea    rdx,[rsp+0xf]
  4296ed:	call   4112b0 <isspace@plt+0xd9a0>
  4296f2:	cmp    BYTE PTR [rsp+0xf],0xa
  4296f7:	je     42971a <isspace@plt+0x25e0a>
  4296f9:	test   al,al
  4296fb:	je     42971a <isspace@plt+0x25e0a>
  4296fd:	mov    ecx,0x1
  429702:	mov    rdi,r14
  429705:	mov    rsi,rbx
  429708:	lea    rdx,[rip+0x7e4a]        # 431559 <isspace@plt+0x2dc49>
  42970f:	call   40f140 <isspace@plt+0xb830>
  429714:	movzx  eax,al
  429717:	add    rbx,rax
  42971a:	mov    rcx,QWORD PTR [rsp+0x10]
  42971f:	mov    rdi,r14
  429722:	mov    rsi,rbx
  429725:	mov    rdx,r12
  429728:	call   40f140 <isspace@plt+0xb830>
  42972d:	add    rbx,QWORD PTR [rsp+0x10]
  429732:	je     429779 <isspace@plt+0x25e69>
  429734:	mov    rax,QWORD PTR [rbp+0x0]
  429738:	movzx  eax,BYTE PTR [rax+0x20]
  42973c:	test   al,al
  42973e:	je     429779 <isspace@plt+0x25e69>
  429740:	lea    rsi,[rbx-0x1]
  429744:	mov    rdi,r14
  429747:	lea    rdx,[rsp+0xf]
  42974c:	call   4112b0 <isspace@plt+0xd9a0>
  429751:	cmp    BYTE PTR [rsp+0xf],0xa
  429756:	je     429779 <isspace@plt+0x25e69>
  429758:	test   al,al
  42975a:	je     429779 <isspace@plt+0x25e69>
  42975c:	mov    ecx,0x1
  429761:	mov    rdi,r14
  429764:	mov    rsi,rbx
  429767:	lea    rdx,[rip+0x7deb]        # 431559 <isspace@plt+0x2dc49>
  42976e:	call   40f140 <isspace@plt+0xb830>
  429773:	movzx  eax,al
  429776:	add    rbx,rax
  429779:	add    r13d,0x1
  42977d:	cmp    r13d,DWORD PTR [r15]
  429780:	jl     4296d0 <isspace@plt+0x25dc0>
  429786:	mov    rax,QWORD PTR [r15+0x8]
  42978a:	mov    rcx,QWORD PTR [r15+0x40]
  42978e:	cmp    BYTE PTR [rax+0x20],0x0
  429792:	mov    eax,DWORD PTR [rcx]
  429794:	je     4297b6 <isspace@plt+0x25ea6>
  429796:	add    eax,0xfffffffd
  429799:	cmp    eax,0xb
  42979c:	ja     4297f0 <isspace@plt+0x25ee0>
  42979e:	lea    rcx,[rip+0x8a77]        # 43221c <isspace@plt+0x2e90c>
  4297a5:	movsxd rax,DWORD PTR [rcx+rax*4]
  4297a9:	add    rax,rcx
  4297ac:	jmp    rax
  4297ae:	mov    rdi,r14
  4297b1:	mov    rsi,rbx
  4297b4:	jmp    4297e8 <isspace@plt+0x25ed8>
  4297b6:	cmp    eax,0xd
  4297b9:	je     4297c0 <isspace@plt+0x25eb0>
  4297bb:	cmp    eax,0x3
  4297be:	jne    4297f0 <isspace@plt+0x25ee0>
  4297c0:	mov    rdi,r14
  4297c3:	mov    rsi,rbx
  4297c6:	call   413010 <isspace@plt+0xf700>
  4297cb:	jmp    4297ed <isspace@plt+0x25edd>
  4297cd:	mov    rsi,QWORD PTR [r15+0x28]
  4297d1:	mov    rdi,r14
  4297d4:	call   4137b0 <isspace@plt+0xfea0>
  4297d9:	mov    rdi,r14
  4297dc:	mov    rsi,rax
  4297df:	jmp    4297e8 <isspace@plt+0x25ed8>
  4297e1:	mov    rsi,QWORD PTR [r15+0x28]
  4297e5:	mov    rdi,r14
  4297e8:	call   4135c0 <isspace@plt+0xfcb0>
  4297ed:	mov    rbx,rax
  4297f0:	mov    rax,QWORD PTR fs:0x28
  4297f9:	cmp    rax,QWORD PTR [rsp+0x20]
  4297fe:	jne    429812 <isspace@plt+0x25f02>
  429800:	mov    rax,rbx
  429803:	add    rsp,0x28
  429807:	pop    rbx
  429808:	pop    r12
  42980a:	pop    r13
  42980c:	pop    r14
  42980e:	pop    r15
  429810:	pop    rbp
  429811:	ret    
  429812:	call   403280 <__stack_chk_fail@plt>
  429817:	nop    WORD PTR [rax+rax*1+0x0]
  429820:	push   rbp
  429821:	push   r15
  429823:	push   r14
  429825:	push   r13
  429827:	push   r12
  429829:	push   rbx
  42982a:	sub    rsp,0x38
  42982e:	mov    rbp,rdx
  429831:	mov    rbx,rsi
  429834:	mov    rax,QWORD PTR fs:0x28
  42983d:	mov    QWORD PTR [rsp+0x30],rax
  429842:	movabs rax,0x2020202020202020
  42984c:	mov    QWORD PTR [rsp+0x20],rax
  429851:	mov    BYTE PTR [rsp+0x28],0x20
  429856:	mov    eax,DWORD PTR [rdi+0x7f8]
  42985c:	cmp    eax,0x9
  42985f:	mov    ecx,0x8
  429864:	cmovl  ecx,eax
  429867:	movsxd rax,ecx
  42986a:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  42986f:	cmp    BYTE PTR [rdi+0x7fc],0x0
  429876:	lea    rax,[rip+0x84e6]        # 431d63 <isspace@plt+0x2e453>
  42987d:	lea    rdi,[rsp+0x20]
  429882:	cmove  rdi,rax
  429886:	mov    QWORD PTR [rsp+0x10],rdi
  42988b:	call   403250 <strlen@plt>
  429890:	mov    QWORD PTR [rsp+0x8],rax
  429895:	mov    rsi,QWORD PTR [rbp+0x20]
  429899:	mov    rdi,rbx
  42989c:	call   413560 <isspace@plt+0xfc50>
  4298a1:	mov    r13,rax
  4298a4:	mov    rax,QWORD PTR [rbp+0x28]
  4298a8:	mov    QWORD PTR [rsp],rax
  4298ac:	mov    r12,rbp
  4298af:	cmp    r13,QWORD PTR [rbp+0x20]
  4298b3:	jne    4298c3 <isspace@plt+0x25fb3>
  4298b5:	mov    rdi,rbx
  4298b8:	mov    rsi,r13
  4298bb:	call   413500 <isspace@plt+0xfbf0>
  4298c0:	mov    r13,rax
  4298c3:	mov    rdi,rbx
  4298c6:	mov    rsi,r13
  4298c9:	call   413500 <isspace@plt+0xfbf0>
  4298ce:	mov    QWORD PTR [rsp+0x18],rax
  4298d3:	mov    r14,QWORD PTR [r12+0x18]
  4298d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4298e0:	mov    rdi,rbx
  4298e3:	mov    rsi,r13
  4298e6:	call   413750 <isspace@plt+0xfe40>
  4298eb:	mov    rbp,rax
  4298ee:	mov    rdi,rbx
  4298f1:	mov    rsi,rax
  4298f4:	call   413560 <isspace@plt+0xfc50>
  4298f9:	mov    r15,rax
  4298fc:	cmp    QWORD PTR [rsp+0x18],r14
  429901:	jb     429908 <isspace@plt+0x25ff8>
  429903:	cmp    r15,rbp
  429906:	je     429936 <isspace@plt+0x26026>
  429908:	mov    rdi,rbx
  42990b:	mov    rsi,r15
  42990e:	mov    rdx,QWORD PTR [rsp+0x10]
  429913:	mov    rbp,QWORD PTR [rsp+0x8]
  429918:	mov    rcx,rbp
  42991b:	call   40f140 <isspace@plt+0xb830>
  429920:	test   al,al
  429922:	je     429936 <isspace@plt+0x26026>
  429924:	cmp    r15,QWORD PTR [r12+0x28]
  429929:	mov    ecx,0x0
  42992e:	cmova  rbp,rcx
  429932:	add    QWORD PTR [rsp],rbp
  429936:	mov    rdi,rbx
  429939:	mov    rsi,r15
  42993c:	call   413500 <isspace@plt+0xfbf0>
  429941:	cmp    rax,r15
  429944:	je     429950 <isspace@plt+0x26040>
  429946:	mov    r13,rax
  429949:	cmp    rax,QWORD PTR [r12+0x18]
  42994e:	jae    4298e0 <isspace@plt+0x25fd0>
  429950:	mov    rax,QWORD PTR fs:0x28
  429959:	cmp    rax,QWORD PTR [rsp+0x30]
  42995e:	jne    429973 <isspace@plt+0x26063>
  429960:	mov    rax,QWORD PTR [rsp]
  429964:	add    rsp,0x38
  429968:	pop    rbx
  429969:	pop    r12
  42996b:	pop    r13
  42996d:	pop    r14
  42996f:	pop    r15
  429971:	pop    rbp
  429972:	ret    
  429973:	call   403280 <__stack_chk_fail@plt>
  429978:	nop    DWORD PTR [rax+rax*1+0x0]
  429980:	push   rbp
  429981:	push   r15
  429983:	push   r14
  429985:	push   r13
  429987:	push   r12
  429989:	push   rbx
  42998a:	sub    rsp,0x48
  42998e:	mov    rbp,rdx
  429991:	mov    r12,rsi
  429994:	mov    rbx,rdi
  429997:	mov    rax,QWORD PTR fs:0x28
  4299a0:	mov    QWORD PTR [rsp+0x40],rax
  4299a5:	mov    rsi,QWORD PTR [rdx+0x20]
  4299a9:	mov    rdi,r12
  4299ac:	call   413560 <isspace@plt+0xfc50>
  4299b1:	movsxd r14,DWORD PTR [rbx+0x7f8]
  4299b8:	mov    rcx,QWORD PTR [rbp+0x28]
  4299bc:	mov    QWORD PTR [rsp],rcx
  4299c0:	mov    QWORD PTR [rsp+0x8],rbp
  4299c5:	cmp    rax,QWORD PTR [rbp+0x20]
  4299c9:	jne    4299d6 <isspace@plt+0x260c6>
  4299cb:	mov    rdi,r12
  4299ce:	mov    rsi,rax
  4299d1:	call   413500 <isspace@plt+0xfbf0>
  4299d6:	lea    rbx,[rsp+0x10]
  4299db:	lea    r13,[rsp+0x3f]
  4299e0:	mov    rdi,r12
  4299e3:	mov    rsi,rax
  4299e6:	call   413560 <isspace@plt+0xfc50>
  4299eb:	mov    rbp,rax
  4299ee:	mov    rdi,rbx
  4299f1:	mov    rsi,r12
  4299f4:	mov    rdx,rax
  4299f7:	call   410760 <isspace@plt+0xce50>
  4299fc:	mov    rdi,rbx
  4299ff:	mov    rsi,r13
  429a02:	call   412690 <isspace@plt+0xed80>
  429a07:	test   al,al
  429a09:	je     429a80 <isspace@plt+0x26170>
  429a0b:	cmp    BYTE PTR [rsp+0x3f],0x9
  429a10:	jne    429a80 <isspace@plt+0x26170>
  429a12:	mov    r15d,0x1
  429a18:	cmp    r15,r14
  429a1b:	cmova  r15,r14
  429a1f:	mov    rdi,r12
  429a22:	mov    rsi,rbp
  429a25:	mov    rdx,r15
  429a28:	call   410200 <isspace@plt+0xc8f0>
  429a2d:	test   al,al
  429a2f:	je     429a58 <isspace@plt+0x26148>
  429a31:	mov    rax,QWORD PTR [rsp+0x8]
  429a36:	mov    rax,QWORD PTR [rax+0x28]
  429a3a:	sub    rax,rbp
  429a3d:	jbe    429a58 <isspace@plt+0x26148>
  429a3f:	cmp    rax,r15
  429a42:	cmova  rax,r15
  429a46:	mov    rcx,QWORD PTR [rsp]
  429a4a:	cmp    rax,rcx
  429a4d:	cmova  rax,rcx
  429a51:	sub    rcx,rax
  429a54:	mov    QWORD PTR [rsp],rcx
  429a58:	mov    rdi,r12
  429a5b:	mov    rsi,rbp
  429a5e:	call   413500 <isspace@plt+0xfbf0>
  429a63:	cmp    rax,rbp
  429a66:	je     429ae5 <isspace@plt+0x261d5>
  429a68:	mov    rcx,QWORD PTR [rsp+0x8]
  429a6d:	cmp    rax,QWORD PTR [rcx+0x18]
  429a71:	jae    4299e0 <isspace@plt+0x260d0>
  429a77:	jmp    429ae5 <isspace@plt+0x261d5>
  429a79:	nop    DWORD PTR [rax+0x0]
  429a80:	mov    rdi,rbx
  429a83:	mov    rsi,r13
  429a86:	call   412690 <isspace@plt+0xed80>
  429a8b:	test   al,al
  429a8d:	je     429add <isspace@plt+0x261cd>
  429a8f:	cmp    BYTE PTR [rsp+0x3f],0x20
  429a94:	mov    r15d,0x0
  429a9a:	jne    429a18 <isspace@plt+0x26108>
  429aa0:	xor    r15d,r15d
  429aa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429aad:	nop    DWORD PTR [rax]
  429ab0:	xor    esi,esi
  429ab2:	mov    rdi,rbx
  429ab5:	call   412710 <isspace@plt+0xee00>
  429aba:	add    r15,0x1
  429abe:	mov    rdi,rbx
  429ac1:	mov    rsi,r13
  429ac4:	call   412690 <isspace@plt+0xed80>
  429ac9:	test   al,al
  429acb:	je     429a18 <isspace@plt+0x26108>
  429ad1:	cmp    BYTE PTR [rsp+0x3f],0x20
  429ad6:	je     429ab0 <isspace@plt+0x261a0>
  429ad8:	jmp    429a18 <isspace@plt+0x26108>
  429add:	xor    r15d,r15d
  429ae0:	jmp    429a18 <isspace@plt+0x26108>
  429ae5:	mov    rax,QWORD PTR fs:0x28
  429aee:	cmp    rax,QWORD PTR [rsp+0x40]
  429af3:	jne    429b08 <isspace@plt+0x261f8>
  429af5:	mov    rax,QWORD PTR [rsp]
  429af9:	add    rsp,0x48
  429afd:	pop    rbx
  429afe:	pop    r12
  429b00:	pop    r13
  429b02:	pop    r14
  429b04:	pop    r15
  429b06:	pop    rbp
  429b07:	ret    
  429b08:	call   403280 <__stack_chk_fail@plt>
  429b0d:	nop    DWORD PTR [rax]
  429b10:	push   rbp
  429b11:	push   r15
  429b13:	push   r14
  429b15:	push   r13
  429b17:	push   r12
  429b19:	push   rbx
  429b1a:	sub    rsp,0x28
  429b1e:	mov    rbp,rdx
  429b21:	mov    r12,rsi
  429b24:	mov    rax,QWORD PTR fs:0x28
  429b2d:	mov    QWORD PTR [rsp+0x20],rax
  429b32:	lea    r14,[rdx+0x18]
  429b36:	mov    rsi,QWORD PTR [rdx+0x20]
  429b3a:	mov    rdi,r12
  429b3d:	call   413560 <isspace@plt+0xfc50>
  429b42:	mov    rbx,rax
  429b45:	mov    QWORD PTR [rsp+0x10],rbp
  429b4a:	cmp    BYTE PTR [rbp+0x38],0x0
  429b4e:	je     429b7f <isspace@plt+0x2626f>
  429b50:	mov    rdi,r12
  429b53:	mov    rsi,r14
  429b56:	call   417380 <isspace@plt+0x13a70>
  429b5b:	test   al,al
  429b5d:	je     429b7f <isspace@plt+0x2626f>
  429b5f:	mov    rdi,r12
  429b62:	mov    rsi,rbx
  429b65:	call   413500 <isspace@plt+0xfbf0>
  429b6a:	mov    rbp,rax
  429b6d:	mov    rdi,r12
  429b70:	mov    rsi,rax
  429b73:	call   413500 <isspace@plt+0xfbf0>
  429b78:	cmp    rax,QWORD PTR [r14]
  429b7b:	cmovae rbx,rbp
  429b7f:	mov    rax,QWORD PTR [rsp+0x10]
  429b84:	mov    rax,QWORD PTR [rax+0x40]
  429b88:	mov    rdi,QWORD PTR [rax]
  429b8b:	test   rdi,rdi
  429b8e:	je     429b97 <isspace@plt+0x26287>
  429b90:	call   403250 <strlen@plt>
  429b95:	jmp    429b99 <isspace@plt+0x26289>
  429b97:	xor    eax,eax
  429b99:	mov    QWORD PTR [rsp+0x8],rax
  429b9e:	xor    ebp,ebp
  429ba0:	mov    rdi,r12
  429ba3:	mov    rsi,rbx
  429ba6:	call   4135c0 <isspace@plt+0xfcb0>
  429bab:	mov    r13,rax
  429bae:	mov    rdi,r12
  429bb1:	mov    rsi,rax
  429bb4:	call   413500 <isspace@plt+0xfbf0>
  429bb9:	sub    r13,rax
  429bbc:	jbe    429c5f <isspace@plt+0x2634f>
  429bc2:	mov    r15,rax
  429bc5:	cmp    rax,QWORD PTR [r14]
  429bc8:	jb     429c5f <isspace@plt+0x2634f>
  429bce:	mov    rdi,r12
  429bd1:	mov    rsi,r15
  429bd4:	mov    rdx,r13
  429bd7:	call   410200 <isspace@plt+0xc8f0>
  429bdc:	lea    rsi,[r15-0x1]
  429be0:	mov    rdi,r12
  429be3:	lea    rdx,[rsp+0x1f]
  429be8:	call   4112b0 <isspace@plt+0xd9a0>
  429bed:	test   al,al
  429bef:	je     429c40 <isspace@plt+0x26330>
  429bf1:	call   4038f0 <__ctype_b_loc@plt>
  429bf6:	mov    rax,QWORD PTR [rax]
  429bf9:	movzx  ecx,BYTE PTR [rsp+0x1f]
  429bfe:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  429c03:	jne    429c40 <isspace@plt+0x26330>
  429c05:	mov    rdi,r12
  429c08:	mov    rsi,r15
  429c0b:	lea    rdx,[rsp+0x1e]
  429c10:	call   4112b0 <isspace@plt+0xd9a0>
  429c15:	cmp    BYTE PTR [rsp+0x1e],0xa
  429c1a:	je     429c40 <isspace@plt+0x26330>
  429c1c:	test   al,al
  429c1e:	je     429c40 <isspace@plt+0x26330>
  429c20:	mov    rax,QWORD PTR [rsp+0x10]
  429c25:	mov    rax,QWORD PTR [rax+0x40]
  429c29:	mov    rdx,QWORD PTR [rax]
  429c2c:	mov    rdi,r12
  429c2f:	mov    rsi,r15
  429c32:	mov    rcx,QWORD PTR [rsp+0x8]
  429c37:	call   40f140 <isspace@plt+0xb830>
  429c3c:	nop    DWORD PTR [rax+0x0]
  429c40:	test   rbp,rbp
  429c43:	jne    429c53 <isspace@plt+0x26343>
  429c45:	mov    rdi,r12
  429c48:	mov    rsi,r15
  429c4b:	call   410fc0 <isspace@plt+0xd6b0>
  429c50:	mov    rbp,rax
  429c53:	cmp    r15,rbx
  429c56:	mov    rbx,r15
  429c59:	jne    429ba0 <isspace@plt+0x26290>
  429c5f:	mov    rdi,r12
  429c62:	mov    rsi,rbp
  429c65:	call   411060 <isspace@plt+0xd750>
  429c6a:	cmp    rax,0xffffffffffffffff
  429c6e:	jne    429c73 <isspace@plt+0x26363>
  429c70:	mov    rax,QWORD PTR [r14]
  429c73:	mov    rcx,QWORD PTR fs:0x28
  429c7c:	cmp    rcx,QWORD PTR [rsp+0x20]
  429c81:	jne    429c92 <isspace@plt+0x26382>
  429c83:	add    rsp,0x28
  429c87:	pop    rbx
  429c88:	pop    r12
  429c8a:	pop    r13
  429c8c:	pop    r14
  429c8e:	pop    r15
  429c90:	pop    rbp
  429c91:	ret    
  429c92:	call   403280 <__stack_chk_fail@plt>
  429c97:	nop    WORD PTR [rax+rax*1+0x0]
  429ca0:	push   rax
  429ca1:	mov    rax,QWORD PTR fs:0x28
  429caa:	mov    QWORD PTR [rsp],rax
  429cae:	mov    rax,QWORD PTR [rdx+0x30]
  429cb2:	cmp    rax,0xffffffffffffffff
  429cb6:	jne    429cbc <isspace@plt+0x263ac>
  429cb8:	mov    rax,QWORD PTR [rdx+0x28]
  429cbc:	mov    rcx,QWORD PTR fs:0x28
  429cc5:	cmp    rcx,QWORD PTR [rsp]
  429cc9:	jne    429ccd <isspace@plt+0x263bd>
  429ccb:	pop    rcx
  429ccc:	ret    
  429ccd:	call   403280 <__stack_chk_fail@plt>
  429cd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429cdc:	nop    DWORD PTR [rax+0x0]
  429ce0:	push   rbp
  429ce1:	push   r15
  429ce3:	push   r14
  429ce5:	push   r13
  429ce7:	push   r12
  429ce9:	push   rbx
  429cea:	sub    rsp,0x38
  429cee:	mov    r15,rdx
  429cf1:	mov    r14,rsi
  429cf4:	mov    r12,rdi
  429cf7:	mov    rax,QWORD PTR fs:0x28
  429d00:	mov    QWORD PTR [rsp+0x30],rax
  429d05:	mov    rdx,QWORD PTR [rdx+0x18]
  429d09:	lea    rdi,[rsp+0x8]
  429d0e:	call   410760 <isspace@plt+0xce50>
  429d13:	mov    rax,QWORD PTR [rsp+0x28]
  429d18:	cmp    rax,QWORD PTR [r15+0x20]
  429d1c:	jae    429d4f <isspace@plt+0x2643f>
  429d1e:	xor    r13d,r13d
  429d21:	lea    rbx,[rsp+0x8]
  429d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429d30:	xor    esi,esi
  429d32:	mov    rdi,rbx
  429d35:	call   412b50 <isspace@plt+0xf240>
  429d3a:	test   al,al
  429d3c:	je     429d52 <isspace@plt+0x26442>
  429d3e:	add    r13,0x1
  429d42:	mov    rax,QWORD PTR [rsp+0x28]
  429d47:	cmp    rax,QWORD PTR [r15+0x20]
  429d4b:	jb     429d30 <isspace@plt+0x26420>
  429d4d:	jmp    429d52 <isspace@plt+0x26442>
  429d4f:	xor    r13d,r13d
  429d52:	mov    al,BYTE PTR [r15+0x38]
  429d56:	mov    rsi,QWORD PTR [r15+0x8]
  429d5a:	mov    BYTE PTR [rsi+0x20],al
  429d5d:	mov    rdx,QWORD PTR [r15+0x10]
  429d61:	lea    rbx,[r15+0x18]
  429d65:	mov    rdi,r12
  429d68:	mov    rcx,r14
  429d6b:	mov    r8,rbx
  429d6e:	call   42aca0 <isspace@plt+0x27390>
  429d73:	mov    rdi,r14
  429d76:	mov    rsi,rbx
  429d79:	call   410610 <isspace@plt+0xcd00>
  429d7e:	cmp    BYTE PTR [r15+0x38],0x0
  429d83:	je     429dac <isspace@plt+0x2649c>
  429d85:	mov    rbx,QWORD PTR [r15+0x18]
  429d89:	mov    rdi,r14
  429d8c:	call   410a90 <isspace@plt+0xd180>
  429d91:	cmp    rbx,rax
  429d94:	jne    429dac <isspace@plt+0x2649c>
  429d96:	mov    rdi,r14
  429d99:	mov    rsi,rbx
  429d9c:	call   413500 <isspace@plt+0xfbf0>
  429da1:	mov    rdi,r14
  429da4:	mov    rsi,rax
  429da7:	call   413560 <isspace@plt+0xfc50>
  429dac:	mov    rbx,QWORD PTR [r15+0x18]
  429db0:	mov    rax,QWORD PTR [r15+0x40]
  429db4:	mov    rbp,QWORD PTR [rax]
  429db7:	mov    rdi,rbp
  429dba:	call   403250 <strlen@plt>
  429dbf:	test   r13,r13
  429dc2:	je     429e12 <isspace@plt+0x26502>
  429dc4:	mov    r12,rax
  429dc7:	mov    rdi,r14
  429dca:	mov    rsi,rbx
  429dcd:	mov    rdx,rbp
  429dd0:	mov    rcx,rax
  429dd3:	call   40f140 <isspace@plt+0xb830>
  429dd8:	cmp    r13,0x1
  429ddc:	je     429e0e <isspace@plt+0x264fe>
  429dde:	mov    ebp,0x1
  429de3:	sub    rbp,r13
  429de6:	add    rbx,r12
  429de9:	nop    DWORD PTR [rax+0x0]
  429df0:	mov    rax,QWORD PTR [r15+0x40]
  429df4:	mov    rdx,QWORD PTR [rax]
  429df7:	mov    rdi,r14
  429dfa:	mov    rsi,rbx
  429dfd:	mov    rcx,r12
  429e00:	call   40f140 <isspace@plt+0xb830>
  429e05:	add    rbx,r12
  429e08:	add    rbp,0x1
  429e0c:	jne    429df0 <isspace@plt+0x264e0>
  429e0e:	mov    rbx,QWORD PTR [r15+0x18]
  429e12:	mov    rax,QWORD PTR fs:0x28
  429e1b:	cmp    rax,QWORD PTR [rsp+0x30]
  429e20:	jne    429e34 <isspace@plt+0x26524>
  429e22:	mov    rax,rbx
  429e25:	add    rsp,0x38
  429e29:	pop    rbx
  429e2a:	pop    r12
  429e2c:	pop    r13
  429e2e:	pop    r14
  429e30:	pop    r15
  429e32:	pop    rbp
  429e33:	ret    
  429e34:	call   403280 <__stack_chk_fail@plt>
  429e39:	nop    DWORD PTR [rax+0x0]
  429e40:	push   r15
  429e42:	push   r14
  429e44:	push   r13
  429e46:	push   r12
  429e48:	push   rbx
  429e49:	sub    rsp,0x20
  429e4d:	mov    r14,rdx
  429e50:	mov    r12,rsi
  429e53:	mov    rax,QWORD PTR fs:0x28
  429e5c:	mov    QWORD PTR [rsp+0x18],rax
  429e61:	mov    rax,QWORD PTR [rdi+0x30]
  429e65:	mov    r15,QWORD PTR [rax+0x18]
  429e69:	lea    rsi,[rdx+0x18]
  429e6d:	mov    rdi,r12
  429e70:	call   417300 <isspace@plt+0x139f0>
  429e75:	mov    QWORD PTR [rsp+0x8],rax
  429e7a:	mov    QWORD PTR [rsp+0x10],rdx
  429e7f:	lea    rsi,[rsp+0x8]
  429e84:	mov    rdi,r12
  429e87:	call   413ed0 <isspace@plt+0x105c0>
  429e8c:	cmp    rax,0xffffffffffffffff
  429e90:	je     429eed <isspace@plt+0x265dd>
  429e92:	mov    rbx,rax
  429e95:	lea    r13,[rsp+0x8]
  429e9a:	nop    WORD PTR [rax+rax*1+0x0]
  429ea0:	mov    rax,QWORD PTR [r14+0x40]
  429ea4:	cmp    DWORD PTR [rax],0xb
  429ea7:	jne    429ec0 <isspace@plt+0x265b0>
  429ea9:	mov    rdi,r12
  429eac:	mov    rsi,rbx
  429eaf:	call   413680 <isspace@plt+0xfd70>
  429eb4:	jmp    429ecb <isspace@plt+0x265bb>
  429eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429ec0:	mov    rdi,r12
  429ec3:	mov    rsi,rbx
  429ec6:	call   4135c0 <isspace@plt+0xfcb0>
  429ecb:	mov    rdi,r15
  429ece:	mov    rsi,rax
  429ed1:	call   41f1b0 <isspace@plt+0x1b8a0>
  429ed6:	mov    rdi,r12
  429ed9:	mov    rsi,r13
  429edc:	mov    rdx,rbx
  429edf:	call   413f20 <isspace@plt+0x10610>
  429ee4:	mov    rbx,rax
  429ee7:	cmp    rax,0xffffffffffffffff
  429eeb:	jne    429ea0 <isspace@plt+0x26590>
  429eed:	mov    rax,QWORD PTR fs:0x28
  429ef6:	cmp    rax,QWORD PTR [rsp+0x18]
  429efb:	jne    429f12 <isspace@plt+0x26602>
  429efd:	mov    rax,0xffffffffffffffff
  429f04:	add    rsp,0x20
  429f08:	pop    rbx
  429f09:	pop    r12
  429f0b:	pop    r13
  429f0d:	pop    r14
  429f0f:	pop    r15
  429f11:	ret    
  429f12:	call   403280 <__stack_chk_fail@plt>
  429f17:	nop    WORD PTR [rax+rax*1+0x0]
  429f20:	push   r14
  429f22:	push   rbx
  429f23:	push   rax
  429f24:	mov    rax,QWORD PTR fs:0x28
  429f2d:	mov    QWORD PTR [rsp],rax
  429f31:	mov    al,0x1
  429f33:	test   rsi,rsi
  429f36:	je     429f88 <isspace@plt+0x26678>
  429f38:	mov    rbx,rsi
  429f3b:	movsx  ecx,BYTE PTR [rsi]
  429f3e:	test   ecx,ecx
  429f40:	je     429f88 <isspace@plt+0x26678>
  429f42:	cmp    BYTE PTR [rbx+0x1],0x0
  429f46:	je     429f88 <isspace@plt+0x26678>
  429f48:	xor    eax,eax
  429f4a:	add    ecx,0xffffffd5
  429f4d:	cmp    ecx,0x14
  429f50:	ja     429f88 <isspace@plt+0x26678>
  429f52:	mov    r14,rdi
  429f55:	add    rbx,0x1
  429f59:	lea    rdx,[rip+0x82ec]        # 43224c <isspace@plt+0x2e93c>
  429f60:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  429f64:	add    rcx,rdx
  429f67:	jmp    rcx
  429f69:	lea    rsi,[r14+0x2e8]
  429f70:	mov    rdi,r14
  429f73:	mov    rdx,rbx
  429f76:	call   42ac00 <isspace@plt+0x272f0>
  429f7b:	mov    rdi,r14
  429f7e:	mov    rsi,rbx
  429f81:	call   4249a0 <isspace@plt+0x21090>
  429f86:	jmp    429fb8 <isspace@plt+0x266a8>
  429f88:	mov    rcx,QWORD PTR fs:0x28
  429f91:	cmp    rcx,QWORD PTR [rsp]
  429f95:	jne    429fc7 <isspace@plt+0x266b7>
  429f97:	add    rsp,0x8
  429f9b:	pop    rbx
  429f9c:	pop    r14
  429f9e:	ret    
  429f9f:	mov    esi,0x44
  429fa4:	jmp    429fab <isspace@plt+0x2669b>
  429fa6:	mov    esi,0x45
  429fab:	xor    eax,eax
  429fad:	mov    rdi,r14
  429fb0:	mov    rdx,rbx
  429fb3:	call   428140 <isspace@plt+0x24830>
  429fb8:	mov    rcx,QWORD PTR fs:0x28
  429fc1:	cmp    rcx,QWORD PTR [rsp]
  429fc5:	je     429f97 <isspace@plt+0x26687>
  429fc7:	call   403280 <__stack_chk_fail@plt>
  429fcc:	nop    DWORD PTR [rax+0x0]
  429fd0:	push   r15
  429fd2:	push   r14
  429fd4:	push   r13
  429fd6:	push   r12
  429fd8:	push   rbx
  429fd9:	sub    rsp,0x10
  429fdd:	mov    r15,rsi
  429fe0:	mov    r14,rdi
  429fe3:	mov    rax,QWORD PTR fs:0x28
  429fec:	mov    QWORD PTR [rsp+0x8],rax
  429ff1:	mov    r13,QWORD PTR [rdi+0x30]
  429ff5:	xor    eax,eax
  429ff7:	cmp    BYTE PTR [rsi],0x3a
  429ffa:	setne  al
  429ffd:	mov    rsi,QWORD PTR [rdi+rax*8+0x10]
  42a002:	mov    edx,0x200
  42a007:	call   421120 <isspace@plt+0x1d810>
  42a00c:	test   rax,rax
  42a00f:	je     42a121 <isspace@plt+0x26811>
  42a015:	mov    rbx,rax
  42a018:	mov    rax,QWORD PTR [rax+0x10]
  42a01c:	mov    r12,QWORD PTR [rax]
  42a01f:	lea    rsi,[rip+0x6d9d]        # 430dc3 <isspace@plt+0x2d4b3>
  42a026:	xor    eax,eax
  42a028:	mov    rdi,r12
  42a02b:	mov    rdx,r15
  42a02e:	call   4110f0 <isspace@plt+0xd7e0>
  42a033:	mov    rdi,QWORD PTR [rbx+0x18]
  42a037:	call   41f750 <isspace@plt+0x1be40>
  42a03c:	mov    r15,rax
  42a03f:	mov    rdi,r12
  42a042:	call   410a90 <isspace@plt+0xd180>
  42a047:	lea    rsi,[rax-0x1]
  42a04b:	mov    rdi,r15
  42a04e:	call   41ed50 <isspace@plt+0x1b440>
  42a053:	mov    QWORD PTR [rbx+0x2c8],r13
  42a05a:	mov    rax,QWORD PTR [r14+0x9a0]
  42a061:	mov    QWORD PTR [rbx+0x2d0],rax
  42a068:	lea    r15,[rip+0x5bef]        # 42fc5e <isspace@plt+0x2c34e>
  42a06f:	lea    r12,[rip+0x182aa]        # 442320 <isspace@plt+0x3ea10>
  42a076:	xor    esi,esi
  42a078:	mov    edx,0x1
  42a07d:	mov    rdi,rbx
  42a080:	mov    rcx,r15
  42a083:	mov    r8,r12
  42a086:	call   427b30 <isspace@plt+0x24220>
  42a08b:	mov    esi,0x4
  42a090:	mov    edx,0x1
  42a095:	mov    rdi,rbx
  42a098:	mov    rcx,r15
  42a09b:	mov    r8,r12
  42a09e:	call   427b30 <isspace@plt+0x24220>
  42a0a3:	lea    rcx,[rip+0x5ab7]        # 42fb61 <isspace@plt+0x2c251>
  42a0aa:	mov    esi,0x4
  42a0af:	mov    edx,0x1
  42a0b4:	mov    rdi,rbx
  42a0b7:	mov    r8,r12
  42a0ba:	call   427b30 <isspace@plt+0x24220>
  42a0bf:	mov    esi,0x2
  42a0c4:	mov    edx,0x1
  42a0c9:	mov    rdi,rbx
  42a0cc:	mov    rcx,r15
  42a0cf:	mov    r8,r12
  42a0d2:	call   427b30 <isspace@plt+0x24220>
  42a0d7:	lea    rcx,[rip+0x5da2]        # 42fe80 <isspace@plt+0x2c570>
  42a0de:	lea    r8,[rip+0x18253]        # 442338 <isspace@plt+0x3ea28>
  42a0e5:	xor    esi,esi
  42a0e7:	mov    edx,0x1
  42a0ec:	mov    rdi,rbx
  42a0ef:	call   427b30 <isspace@plt+0x24220>
  42a0f4:	lea    rcx,[rip+0x59f5]        # 42faf0 <isspace@plt+0x2c1e0>
  42a0fb:	lea    r8,[rip+0x1824e]        # 442350 <isspace@plt+0x3ea40>
  42a102:	mov    esi,0x4
  42a107:	mov    edx,0x1
  42a10c:	mov    rdi,rbx
  42a10f:	call   427b30 <isspace@plt+0x24220>
  42a114:	mov    esi,0x4
  42a119:	mov    rdi,r14
  42a11c:	call   427780 <isspace@plt+0x23e70>
  42a121:	mov    rax,QWORD PTR fs:0x28
  42a12a:	cmp    rax,QWORD PTR [rsp+0x8]
  42a12f:	jne    42a13f <isspace@plt+0x2682f>
  42a131:	add    rsp,0x10
  42a135:	pop    rbx
  42a136:	pop    r12
  42a138:	pop    r13
  42a13a:	pop    r14
  42a13c:	pop    r15
  42a13e:	ret    
  42a13f:	call   403280 <__stack_chk_fail@plt>
  42a144:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a14e:	xchg   ax,ax
  42a150:	sub    rsp,0xd8
  42a157:	test   al,al
  42a159:	je     42a194 <isspace@plt+0x26884>
  42a15b:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  42a161:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  42a167:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  42a16d:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  42a173:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  42a179:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  42a182:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  42a18b:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  42a194:	mov    QWORD PTR [rsp+0x28],r9
  42a199:	mov    QWORD PTR [rsp+0x20],r8
  42a19e:	mov    QWORD PTR [rsp+0x18],rcx
  42a1a3:	mov    QWORD PTR [rsp+0x10],rdx
  42a1a8:	mov    rax,QWORD PTR fs:0x28
  42a1b1:	mov    QWORD PTR [rsp+0xd0],rax
  42a1b9:	mov    rax,rsp
  42a1bc:	mov    QWORD PTR [rsp+0xc0],rax
  42a1c4:	lea    rax,[rsp+0xe0]
  42a1cc:	mov    QWORD PTR [rsp+0xb8],rax
  42a1d4:	movabs rax,0x3000000010
  42a1de:	mov    QWORD PTR [rsp+0xb0],rax
  42a1e6:	mov    rdi,QWORD PTR [rdi]
  42a1e9:	lea    rdx,[rsp+0xb0]
  42a1f1:	call   QWORD PTR [rdi+0x40]
  42a1f4:	mov    rax,QWORD PTR fs:0x28
  42a1fd:	cmp    rax,QWORD PTR [rsp+0xd0]
  42a205:	jne    42a20f <isspace@plt+0x268ff>
  42a207:	add    rsp,0xd8
  42a20e:	ret    
  42a20f:	call   403280 <__stack_chk_fail@plt>
  42a214:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a21e:	xchg   ax,ax
  42a220:	push   rax
  42a221:	mov    rax,QWORD PTR fs:0x28
  42a22a:	mov    QWORD PTR [rsp],rax
  42a22e:	mov    rdi,QWORD PTR [rdi]
  42a231:	call   QWORD PTR [rdi+0x48]
  42a234:	mov    rax,QWORD PTR fs:0x28
  42a23d:	cmp    rax,QWORD PTR [rsp]
  42a241:	jne    42a245 <isspace@plt+0x26935>
  42a243:	pop    rax
  42a244:	ret    
  42a245:	call   403280 <__stack_chk_fail@plt>
  42a24a:	nop    WORD PTR [rax+rax*1+0x0]
  42a250:	push   rbp
  42a251:	push   r15
  42a253:	push   r14
  42a255:	push   r13
  42a257:	push   r12
  42a259:	push   rbx
  42a25a:	sub    rsp,0x28
  42a25e:	mov    QWORD PTR [rsp+0x8],rsi
  42a263:	mov    r15,rdi
  42a266:	mov    rax,QWORD PTR fs:0x28
  42a26f:	mov    QWORD PTR [rsp+0x20],rax
  42a274:	mov    rbx,QWORD PTR [rdi+0x30]
  42a278:	mov    rax,QWORD PTR [rbx+0x10]
  42a27c:	mov    rbp,QWORD PTR [rbx+0x18]
  42a280:	mov    r12,QWORD PTR [rax]
  42a283:	mov    r14,QWORD PTR [rbx+0x2c8]
  42a28a:	mov    rdi,rbp
  42a28d:	call   41ff30 <isspace@plt+0x1c620>
  42a292:	mov    QWORD PTR [rsp+0x10],rax
  42a297:	mov    QWORD PTR [rsp+0x18],rdx
  42a29c:	mov    rax,QWORD PTR [r15+0x9a0]
  42a2a3:	cmp    BYTE PTR [rax+0x58],0x0
  42a2a7:	jne    42a380 <isspace@plt+0x26a70>
  42a2ad:	call   42b510 <isspace@plt+0x27c00>
  42a2b2:	mov    r13,rax
  42a2b5:	mov    rdi,rbp
  42a2b8:	call   41ec80 <isspace@plt+0x1b370>
  42a2bd:	mov    rbp,rax
  42a2c0:	mov    rax,QWORD PTR [rbx+0x10]
  42a2c4:	cmp    rax,QWORD PTR [r15+0x10]
  42a2c8:	je     42a368 <isspace@plt+0x26a58>
  42a2ce:	xor    esi,esi
  42a2d0:	cmp    rax,QWORD PTR [r15+0x18]
  42a2d4:	lea    rax,[rip+0x7fc8]        # 4322a3 <isspace@plt+0x2e993>
  42a2db:	cmove  rsi,rax
  42a2df:	test   r13,r13
  42a2e2:	je     42a378 <isspace@plt+0x26a68>
  42a2e8:	test   rsi,rsi
  42a2eb:	je     42a378 <isspace@plt+0x26a68>
  42a2f1:	movzx  edx,BYTE PTR [r15+0xb60]
  42a2f9:	add    edx,edx
  42a2fb:	or     edx,0x5
  42a2fe:	mov    rdi,r13
  42a301:	call   42b570 <isspace@plt+0x27c60>
  42a306:	test   eax,eax
  42a308:	jne    42a378 <isspace@plt+0x26a68>
  42a30a:	mov    rdi,r12
  42a30d:	mov    rsi,rbp
  42a310:	call   413750 <isspace@plt+0xfe40>
  42a315:	mov    rdi,r12
  42a318:	mov    rsi,rax
  42a31b:	mov    rdx,r13
  42a31e:	call   415be0 <isspace@plt+0x122d0>
  42a323:	cmp    rax,rbp
  42a326:	mov    rcx,0xffffffffffffffff
  42a32d:	cmovbe rcx,rax
  42a331:	mov    QWORD PTR [rsp],rcx
  42a335:	mov    rdi,r12
  42a338:	mov    rsi,rbp
  42a33b:	mov    rdx,r13
  42a33e:	call   415b00 <isspace@plt+0x121f0>
  42a343:	cmp    rax,rbp
  42a346:	jae    42a350 <isspace@plt+0x26a40>
  42a348:	mov    rdi,r12
  42a34b:	call   410a90 <isspace@plt+0xd180>
  42a350:	mov    rdi,QWORD PTR [rsp]
  42a354:	mov    rsi,rax
  42a357:	call   417690 <isspace@plt+0x13d80>
  42a35c:	mov    QWORD PTR [rsp+0x10],rax
  42a361:	mov    QWORD PTR [rsp+0x18],rdx
  42a366:	jmp    42a378 <isspace@plt+0x26a68>
  42a368:	lea    rsi,[rip+0x7f31]        # 4322a0 <isspace@plt+0x2e990>
  42a36f:	test   r13,r13
  42a372:	jne    42a2e8 <isspace@plt+0x269d8>
  42a378:	mov    rdi,r13
  42a37b:	call   42b600 <isspace@plt+0x27cf0>
  42a380:	lea    rdi,[rsp+0x10]
  42a385:	call   417400 <isspace@plt+0x13af0>
  42a38a:	test   al,al
  42a38c:	je     42a467 <isspace@plt+0x26b57>
  42a392:	mov    rbp,QWORD PTR [rsp+0x10]
  42a397:	lea    rdi,[rsp+0x10]
  42a39c:	call   417460 <isspace@plt+0x13b50>
  42a3a1:	mov    rdi,r12
  42a3a4:	mov    rsi,rbp
  42a3a7:	mov    rdx,rax
  42a3aa:	call   411460 <isspace@plt+0xdb50>
  42a3af:	mov    r13,rax
  42a3b2:	test   r14,r14
  42a3b5:	je     42a478 <isspace@plt+0x26b68>
  42a3bb:	test   r13,r13
  42a3be:	je     42a478 <isspace@plt+0x26b68>
  42a3c4:	mov    rdi,r13
  42a3c7:	call   403250 <strlen@plt>
  42a3cc:	test   rax,rax
  42a3cf:	je     42a3df <isspace@plt+0x26acf>
  42a3d1:	cmp    BYTE PTR [r13+rax*1-0x1],0xa
  42a3d7:	jne    42a3df <isspace@plt+0x26acf>
  42a3d9:	mov    BYTE PTR [r13+rax*1-0x1],0x0
  42a3df:	mov    r14,QWORD PTR [rsp+0x18]
  42a3e4:	mov    rdi,r12
  42a3e7:	call   410a90 <isspace@plt+0xd180>
  42a3ec:	mov    rbp,rax
  42a3ef:	mov    rax,QWORD PTR [rbx]
  42a3f2:	mov    rcx,QWORD PTR [rbx+0x2c8]
  42a3f9:	test   rcx,rcx
  42a3fc:	je     42a402 <isspace@plt+0x26af2>
  42a3fe:	mov    QWORD PTR [rax+0x30],rcx
  42a402:	mov    rcx,QWORD PTR [rbx+0x2d0]
  42a409:	mov    QWORD PTR [rax+0x9a0],rcx
  42a410:	mov    rdi,r15
  42a413:	mov    rsi,r13
  42a416:	call   429f20 <isspace@plt+0x26610>
  42a41b:	test   al,al
  42a41d:	je     42a4cb <isspace@plt+0x26bbb>
  42a423:	mov    rdi,rbx
  42a426:	call   42a520 <isspace@plt+0x26c10>
  42a42b:	cmp    r14,rbp
  42a42e:	je     42a4e2 <isspace@plt+0x26bd2>
  42a434:	mov    rbx,QWORD PTR [rsp+0x10]
  42a439:	lea    rdi,[rsp+0x10]
  42a43e:	call   417460 <isspace@plt+0x13b50>
  42a443:	mov    rdi,r12
  42a446:	mov    rsi,rbx
  42a449:	mov    rdx,rax
  42a44c:	call   410200 <isspace@plt+0xc8f0>
  42a451:	lea    rsi,[rip+0x696b]        # 430dc3 <isspace@plt+0x2d4b3>
  42a458:	xor    eax,eax
  42a45a:	mov    rdi,r12
  42a45d:	mov    rdx,r13
  42a460:	call   4110f0 <isspace@plt+0xd7e0>
  42a465:	jmp    42a4e2 <isspace@plt+0x26bd2>
  42a467:	test   r14,r14
  42a46a:	je     42a484 <isspace@plt+0x26b74>
  42a46c:	lea    rsi,[rip+0x7e4e]        # 4322c1 <isspace@plt+0x2e9b1>
  42a473:	xor    r13d,r13d
  42a476:	jmp    42a48e <isspace@plt+0x26b7e>
  42a478:	test   r14,r14
  42a47b:	je     42a487 <isspace@plt+0x26b77>
  42a47d:	test   r13,r13
  42a480:	jne    42a498 <isspace@plt+0x26b88>
  42a482:	jmp    42a46c <isspace@plt+0x26b5c>
  42a484:	xor    r13d,r13d
  42a487:	lea    rsi,[rip+0x7e1d]        # 4322ab <isspace@plt+0x2e99b>
  42a48e:	xor    eax,eax
  42a490:	mov    rdi,r15
  42a493:	call   42a150 <isspace@plt+0x26840>
  42a498:	mov    rax,QWORD PTR [rbx]
  42a49b:	mov    rcx,QWORD PTR [rbx+0x2c8]
  42a4a2:	test   rcx,rcx
  42a4a5:	je     42a4ab <isspace@plt+0x26b9b>
  42a4a7:	mov    QWORD PTR [rax+0x30],rcx
  42a4ab:	mov    rcx,QWORD PTR [rbx+0x2d0]
  42a4b2:	mov    QWORD PTR [rax+0x9a0],rcx
  42a4b9:	mov    rdi,rbx
  42a4bc:	call   42a520 <isspace@plt+0x26c10>
  42a4c1:	mov    rdi,r13
  42a4c4:	call   4030d0 <free@plt>
  42a4c9:	jmp    42a4f2 <isspace@plt+0x26be2>
  42a4cb:	mov    QWORD PTR [r15+0x30],rbx
  42a4cf:	mov    eax,0x180
  42a4d4:	add    rax,QWORD PTR [rip+0x18ae5]        # 442fc0 <isspace@plt+0x3f6b0>
  42a4db:	mov    QWORD PTR [r15+0x9a0],rax
  42a4e2:	mov    rdi,r13
  42a4e5:	call   4030d0 <free@plt>
  42a4ea:	mov    rdi,r15
  42a4ed:	call   421ce0 <isspace@plt+0x1e3d0>
  42a4f2:	mov    rax,QWORD PTR fs:0x28
  42a4fb:	cmp    rax,QWORD PTR [rsp+0x20]
  42a500:	jne    42a516 <isspace@plt+0x26c06>
  42a502:	mov    rax,QWORD PTR [rsp+0x8]
  42a507:	add    rsp,0x28
  42a50b:	pop    rbx
  42a50c:	pop    r12
  42a50e:	pop    r13
  42a510:	pop    r14
  42a512:	pop    r15
  42a514:	pop    rbp
  42a515:	ret    
  42a516:	call   403280 <__stack_chk_fail@plt>
  42a51b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a520:	push   r15
  42a522:	push   r14
  42a524:	push   rbx
  42a525:	sub    rsp,0x20
  42a529:	mov    r14,rdi
  42a52c:	mov    rax,QWORD PTR fs:0x28
  42a535:	mov    QWORD PTR [rsp+0x18],rax
  42a53a:	mov    rax,QWORD PTR [rdi+0x10]
  42a53e:	mov    r15,QWORD PTR [rax]
  42a541:	mov    rdi,r15
  42a544:	call   410a90 <isspace@plt+0xd180>
  42a549:	mov    BYTE PTR [rsp+0x17],0x0
  42a54e:	test   rax,rax
  42a551:	je     42a589 <isspace@plt+0x26c79>
  42a553:	mov    rbx,rax
  42a556:	lea    rsi,[rax-0x1]
  42a55a:	lea    rdx,[rsp+0x17]
  42a55f:	mov    rdi,r15
  42a562:	call   4112b0 <isspace@plt+0xd9a0>
  42a567:	cmp    BYTE PTR [rsp+0x17],0xa
  42a56c:	je     42a589 <isspace@plt+0x26c79>
  42a56e:	test   al,al
  42a570:	je     42a589 <isspace@plt+0x26c79>
  42a572:	lea    rdx,[rip+0x6fe0]        # 431559 <isspace@plt+0x2dc49>
  42a579:	mov    ecx,0x1
  42a57e:	mov    rdi,r15
  42a581:	mov    rsi,rbx
  42a584:	call   40f140 <isspace@plt+0xb830>
  42a589:	mov    rdi,r15
  42a58c:	call   410a90 <isspace@plt+0xd180>
  42a591:	lea    rsi,[rax-0x1]
  42a595:	mov    rdi,r15
  42a598:	call   416700 <isspace@plt+0x12df0>
  42a59d:	mov    rbx,rax
  42a5a0:	mov    QWORD PTR [rsp],rax
  42a5a4:	mov    QWORD PTR [rsp+0x8],rdx
  42a5a9:	mov    rdi,rsp
  42a5ac:	call   417460 <isspace@plt+0x13b50>
  42a5b1:	mov    rdi,r15
  42a5b4:	mov    rsi,rbx
  42a5b7:	mov    rdx,rax
  42a5ba:	call   411460 <isspace@plt+0xdb50>
  42a5bf:	mov    rbx,rax
  42a5c2:	test   rax,rax
  42a5c5:	je     42a5dc <isspace@plt+0x26ccc>
  42a5c7:	movsx  rax,BYTE PTR [rbx]
  42a5cb:	cmp    rax,0xa
  42a5cf:	jne    42a606 <isspace@plt+0x26cf6>
  42a5d1:	mov    rsi,rsp
  42a5d4:	mov    rdi,r15
  42a5d7:	call   410610 <isspace@plt+0xcd00>
  42a5dc:	mov    rdi,rbx
  42a5df:	call   4030d0 <free@plt>
  42a5e4:	mov    rdi,r14
  42a5e7:	call   422030 <isspace@plt+0x1e720>
  42a5ec:	mov    rax,QWORD PTR fs:0x28
  42a5f5:	cmp    rax,QWORD PTR [rsp+0x18]
  42a5fa:	jne    42a634 <isspace@plt+0x26d24>
  42a5fc:	add    rsp,0x20
  42a600:	pop    rbx
  42a601:	pop    r14
  42a603:	pop    r15
  42a605:	ret    
  42a606:	mov    ecx,eax
  42a608:	cmp    rcx,0x3f
  42a60c:	ja     42a5dc <isspace@plt+0x26ccc>
  42a60e:	mov    ecx,0x1
  42a613:	shlx   rax,rcx,rax
  42a618:	movabs rcx,0x8400800000000001
  42a622:	and    rcx,rax
  42a625:	je     42a5dc <isspace@plt+0x26ccc>
  42a627:	mov    al,BYTE PTR [rbx+0x1]
  42a62a:	cmp    al,0xa
  42a62c:	je     42a5d1 <isspace@plt+0x26cc1>
  42a62e:	test   al,al
  42a630:	je     42a5d1 <isspace@plt+0x26cc1>
  42a632:	jmp    42a5dc <isspace@plt+0x26ccc>
  42a634:	call   403280 <__stack_chk_fail@plt>
  42a639:	nop    DWORD PTR [rax+0x0]
  42a640:	push   r14
  42a642:	push   rbx
  42a643:	push   rax
  42a644:	mov    r14,rsi
  42a647:	mov    rax,QWORD PTR fs:0x28
  42a650:	mov    QWORD PTR [rsp],rax
  42a654:	mov    rbx,QWORD PTR [rdi+0x30]
  42a658:	mov    rdi,QWORD PTR [rbx+0x18]
  42a65c:	call   41f1e0 <isspace@plt+0x1b8d0>
  42a661:	cmp    eax,0x2
  42a664:	jl     42a671 <isspace@plt+0x26d61>
  42a666:	mov    rdi,QWORD PTR [rbx+0x18]
  42a66a:	call   41fdb0 <isspace@plt+0x1c4a0>
  42a66f:	jmp    42a69a <isspace@plt+0x26d8a>
  42a671:	mov    rax,QWORD PTR [rbx]
  42a674:	mov    rcx,QWORD PTR [rbx+0x2c8]
  42a67b:	test   rcx,rcx
  42a67e:	je     42a684 <isspace@plt+0x26d74>
  42a680:	mov    QWORD PTR [rax+0x30],rcx
  42a684:	mov    rcx,QWORD PTR [rbx+0x2d0]
  42a68b:	mov    QWORD PTR [rax+0x9a0],rcx
  42a692:	mov    rdi,rbx
  42a695:	call   42a520 <isspace@plt+0x26c10>
  42a69a:	mov    rax,QWORD PTR fs:0x28
  42a6a3:	cmp    rax,QWORD PTR [rsp]
  42a6a7:	jne    42a6b4 <isspace@plt+0x26da4>
  42a6a9:	mov    rax,r14
  42a6ac:	add    rsp,0x8
  42a6b0:	pop    rbx
  42a6b1:	pop    r14
  42a6b3:	ret    
  42a6b4:	call   403280 <__stack_chk_fail@plt>
  42a6b9:	nop    DWORD PTR [rax+0x0]
  42a6c0:	push   r14
  42a6c2:	push   rbx
  42a6c3:	push   rax
  42a6c4:	mov    r14,rsi
  42a6c7:	mov    rbx,rdi
  42a6ca:	mov    rax,QWORD PTR fs:0x28
  42a6d3:	mov    QWORD PTR [rsp],rax
  42a6d7:	mov    esi,0x1
  42a6dc:	xor    eax,eax
  42a6de:	call   428140 <isspace@plt+0x24830>
  42a6e3:	mov    rdi,QWORD PTR [rbx+0x30]
  42a6e7:	lea    rdx,[rip+0x5402]        # 42faf0 <isspace@plt+0x2c1e0>
  42a6ee:	mov    esi,0x4
  42a6f3:	call   4279b0 <isspace@plt+0x240a0>
  42a6f8:	mov    rax,QWORD PTR [rbx+0x30]
  42a6fc:	mov    rdi,QWORD PTR [rax+0x18]
  42a700:	mov    esi,0x40
  42a705:	call   41baf0 <isspace@plt+0x181e0>
  42a70a:	mov    rax,QWORD PTR fs:0x28
  42a713:	cmp    rax,QWORD PTR [rsp]
  42a717:	jne    42a724 <isspace@plt+0x26e14>
  42a719:	mov    rax,r14
  42a71c:	add    rsp,0x8
  42a720:	pop    rbx
  42a721:	pop    r14
  42a723:	ret    
  42a724:	call   403280 <__stack_chk_fail@plt>
  42a729:	nop    DWORD PTR [rax+0x0]
  42a730:	push   r14
  42a732:	push   rbx
  42a733:	sub    rsp,0x28
  42a737:	mov    rbx,rdi
  42a73a:	mov    rax,QWORD PTR fs:0x28
  42a743:	mov    QWORD PTR [rsp+0x20],rax
  42a748:	lea    r14,[rsp+0x8]
  42a74d:	mov    rdi,r14
  42a750:	call   404230 <isspace@plt+0x920>
  42a755:	mov    esi,0x18
  42a75a:	mov    rdi,rbx
  42a75d:	call   403a50 <isspace@plt+0x140>
  42a762:	mov    rdi,rbx
  42a765:	mov    rsi,r14
  42a768:	call   403d70 <isspace@plt+0x460>
  42a76d:	mov    rcx,QWORD PTR fs:0x28
  42a776:	cmp    rcx,QWORD PTR [rsp+0x20]
  42a77b:	jne    42a785 <isspace@plt+0x26e75>
  42a77d:	add    rsp,0x28
  42a781:	pop    rbx
  42a782:	pop    r14
  42a784:	ret    
  42a785:	call   403280 <__stack_chk_fail@plt>
  42a78a:	nop    WORD PTR [rax+rax*1+0x0]
  42a790:	push   r15
  42a792:	push   r14
  42a794:	push   rbx
  42a795:	sub    rsp,0x10
  42a799:	mov    rax,QWORD PTR fs:0x28
  42a7a2:	mov    QWORD PTR [rsp+0x8],rax
  42a7a7:	test   rdi,rdi
  42a7aa:	je     42a7e4 <isspace@plt+0x26ed4>
  42a7ac:	mov    r14,rdi
  42a7af:	call   403fc0 <isspace@plt+0x6b0>
  42a7b4:	test   rax,rax
  42a7b7:	je     42a7dc <isspace@plt+0x26ecc>
  42a7b9:	mov    r15,rax
  42a7bc:	xor    ebx,ebx
  42a7be:	xchg   ax,ax
  42a7c0:	mov    rdi,r14
  42a7c3:	mov    rsi,rbx
  42a7c6:	call   403d20 <isspace@plt+0x410>
  42a7cb:	mov    rdi,rax
  42a7ce:	call   404550 <isspace@plt+0xc40>
  42a7d3:	add    rbx,0x1
  42a7d7:	cmp    r15,rbx
  42a7da:	jne    42a7c0 <isspace@plt+0x26eb0>
  42a7dc:	mov    rdi,r14
  42a7df:	call   403b50 <isspace@plt+0x240>
  42a7e4:	mov    rax,QWORD PTR fs:0x28
  42a7ed:	cmp    rax,QWORD PTR [rsp+0x8]
  42a7f2:	jne    42a7fe <isspace@plt+0x26eee>
  42a7f4:	add    rsp,0x10
  42a7f8:	pop    rbx
  42a7f9:	pop    r14
  42a7fb:	pop    r15
  42a7fd:	ret    
  42a7fe:	call   403280 <__stack_chk_fail@plt>
  42a803:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a80d:	nop    DWORD PTR [rax]
  42a810:	push   rbp
  42a811:	mov    rbp,rsp
  42a814:	push   r15
  42a816:	push   r14
  42a818:	push   r13
  42a81a:	push   r12
  42a81c:	push   rbx
  42a81d:	and    rsp,0xffffffffffffffe0
  42a821:	sub    rsp,0xa0
  42a828:	mov    r12,rcx
  42a82b:	mov    r15,rdx
  42a82e:	mov    rbx,rsi
  42a831:	mov    r14,rdi
  42a834:	mov    rax,QWORD PTR fs:0x28
  42a83d:	mov    QWORD PTR [rsp+0x80],rax
  42a845:	test   rcx,rcx
  42a848:	je     42a852 <isspace@plt+0x26f42>
  42a84a:	mov    QWORD PTR [r12],0x0
  42a852:	mov    eax,DWORD PTR [rbx+0x24]
  42a855:	cmp    eax,0x3
  42a858:	je     42a8f7 <isspace@plt+0x26fe7>
  42a85e:	cmp    eax,0x1
  42a861:	je     42a891 <isspace@plt+0x26f81>
  42a863:	test   eax,eax
  42a865:	jne    42aa15 <isspace@plt+0x27105>
  42a86b:	mov    rdi,rbx
  42a86e:	mov    rsi,r15
  42a871:	call   403d20 <isspace@plt+0x410>
  42a876:	test   rax,rax
  42a879:	je     42aa15 <isspace@plt+0x27105>
  42a87f:	mov    rbx,rax
  42a882:	mov    rdi,rax
  42a885:	call   404380 <isspace@plt+0xa70>
  42a88a:	test   r12,r12
  42a88d:	jne    42a8c7 <isspace@plt+0x26fb7>
  42a88f:	jmp    42a8d3 <isspace@plt+0x26fc3>
  42a891:	xor    r14d,r14d
  42a894:	xor    esi,esi
  42a896:	mov    rdi,rbx
  42a899:	call   403d20 <isspace@plt+0x410>
  42a89e:	test   rax,rax
  42a8a1:	je     42aa18 <isspace@plt+0x27108>
  42a8a7:	mov    rbx,rax
  42a8aa:	add    r15,0x1
  42a8ae:	lea    rsi,[rip+0x7636]        # 431eeb <isspace@plt+0x2e5db>
  42a8b5:	xor    eax,eax
  42a8b7:	mov    rdi,rbx
  42a8ba:	mov    rdx,r15
  42a8bd:	call   404c80 <isspace@plt+0x1370>
  42a8c2:	test   r12,r12
  42a8c5:	je     42a8d3 <isspace@plt+0x26fc3>
  42a8c7:	mov    rdi,rbx
  42a8ca:	call   404d50 <isspace@plt+0x1440>
  42a8cf:	mov    QWORD PTR [r12],rax
  42a8d3:	mov    rdi,rbx
  42a8d6:	call   404dd0 <isspace@plt+0x14c0>
  42a8db:	mov    rcx,QWORD PTR fs:0x28
  42a8e4:	cmp    rcx,QWORD PTR [rsp+0x80]
  42a8ec:	je     42aa2e <isspace@plt+0x2711e>
  42a8f2:	jmp    42aa3d <isspace@plt+0x2712d>
  42a8f7:	vxorps xmm0,xmm0,xmm0
  42a8fb:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  42a901:	mov    QWORD PTR [rsp+0x60],0x0
  42a90a:	lea    rax,[rip+0x7ad5]        # 4323e6 <isspace@plt+0x2ead6>
  42a911:	vmovq  xmm0,rax
  42a916:	lea    rax,[rip+0x7abb]        # 4323d8 <isspace@plt+0x2eac8>
  42a91d:	vmovq  xmm1,rax
  42a922:	vpunpcklqdq xmm0,xmm1,xmm0
  42a926:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  42a92c:	lea    rax,[rip+0x7abb]        # 4323ee <isspace@plt+0x2eade>
  42a933:	mov    QWORD PTR [rsp+0x50],rax
  42a938:	lea    r13,[rsp+0x28]
  42a93d:	mov    rdi,r13
  42a940:	vzeroupper 
  42a943:	call   404230 <isspace@plt+0x920>
  42a948:	mov    rdi,rbx
  42a94b:	mov    rsi,r15
  42a94e:	call   403d20 <isspace@plt+0x410>
  42a953:	test   rax,rax
  42a956:	je     42aa15 <isspace@plt+0x27105>
  42a95c:	mov    r15,rax
  42a95f:	lea    rax,[r14+0x40]
  42a963:	sub    rbx,rax
  42a966:	shr    rbx,0x3
  42a96a:	imul   ebx,ebx,0xcccccccd
  42a970:	mov    rdi,r15
  42a973:	call   4045a0 <isspace@plt+0xc90>
  42a978:	cmp    ebx,0xe
  42a97b:	lea    rax,[rip+0x7a78]        # 4323fa <isspace@plt+0x2eaea>
  42a982:	lea    rcx,[rip+0x7a53]        # 4323dc <isspace@plt+0x2eacc>
  42a989:	cmove  rcx,rax
  42a98d:	mov    QWORD PTR [rsp+0x58],rcx
  42a992:	mov    rax,QWORD PTR [r14+0x30]
  42a996:	mov    rsi,QWORD PTR [rax+0x10]
  42a99a:	vpxor  xmm0,xmm0,xmm0
  42a99e:	vmovdqa XMMWORD PTR [rsp+0x10],xmm0
  42a9a4:	lea    r9,[rip+0xa5]        # 42aa50 <isspace@plt+0x27140>
  42a9ab:	lea    rdx,[rsp+0x10]
  42a9b0:	lea    rcx,[rsp+0x40]
  42a9b5:	mov    rdi,r14
  42a9b8:	mov    r8,r15
  42a9bb:	push   r9
  42a9bd:	push   r13
  42a9bf:	call   4253e0 <isspace@plt+0x21ad0>
  42a9c4:	add    rsp,0x10
  42a9c8:	test   eax,eax
  42a9ca:	je     42a9ed <isspace@plt+0x270dd>
  42a9cc:	lea    rdi,[rsp+0x28]
  42a9d1:	call   404dd0 <isspace@plt+0x14c0>
  42a9d6:	mov    rcx,rax
  42a9d9:	lea    rsi,[rip+0x5e52]        # 430832 <isspace@plt+0x2cf22>
  42a9e0:	xor    eax,eax
  42a9e2:	mov    rdi,r14
  42a9e5:	mov    rdx,rcx
  42a9e8:	call   42a150 <isspace@plt+0x26840>
  42a9ed:	lea    rdi,[rsp+0x28]
  42a9f2:	call   404550 <isspace@plt+0xc40>
  42a9f7:	test   r12,r12
  42a9fa:	je     42aa08 <isspace@plt+0x270f8>
  42a9fc:	mov    rdi,r15
  42a9ff:	call   404d50 <isspace@plt+0x1440>
  42aa04:	mov    QWORD PTR [r12],rax
  42aa08:	mov    rdi,r15
  42aa0b:	call   404dd0 <isspace@plt+0x14c0>
  42aa10:	mov    r14,rax
  42aa13:	jmp    42aa18 <isspace@plt+0x27108>
  42aa15:	xor    r14d,r14d
  42aa18:	mov    rax,QWORD PTR fs:0x28
  42aa21:	cmp    rax,QWORD PTR [rsp+0x80]
  42aa29:	jne    42aa3d <isspace@plt+0x2712d>
  42aa2b:	mov    rax,r14
  42aa2e:	lea    rsp,[rbp-0x28]
  42aa32:	pop    rbx
  42aa33:	pop    r12
  42aa35:	pop    r13
  42aa37:	pop    r14
  42aa39:	pop    r15
  42aa3b:	pop    rbp
  42aa3c:	ret    
  42aa3d:	call   403280 <__stack_chk_fail@plt>
  42aa42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aa4c:	nop    DWORD PTR [rax+0x0]
  42aa50:	push   rbx
  42aa51:	sub    rsp,0x10
  42aa55:	mov    rbx,rdx
  42aa58:	mov    rax,QWORD PTR fs:0x28
  42aa61:	mov    QWORD PTR [rsp+0x8],rax
  42aa66:	call   404460 <isspace@plt+0xb50>
  42aa6b:	mov    rax,QWORD PTR fs:0x28
  42aa74:	cmp    rax,QWORD PTR [rsp+0x8]
  42aa79:	jne    42aa84 <isspace@plt+0x27174>
  42aa7b:	mov    rax,rbx
  42aa7e:	add    rsp,0x10
  42aa82:	pop    rbx
  42aa83:	ret    
  42aa84:	call   403280 <__stack_chk_fail@plt>
  42aa89:	nop    DWORD PTR [rax+0x0]
  42aa90:	push   rax
  42aa91:	mov    rax,rdx
  42aa94:	mov    rcx,QWORD PTR fs:0x28
  42aa9d:	mov    QWORD PTR [rsp],rcx
  42aaa1:	xor    edx,edx
  42aaa3:	mov    rcx,rax
  42aaa6:	call   42a810 <isspace@plt+0x26f00>
  42aaab:	mov    rcx,QWORD PTR fs:0x28
  42aab4:	cmp    rcx,QWORD PTR [rsp]
  42aab8:	jne    42aabc <isspace@plt+0x271ac>
  42aaba:	pop    rcx
  42aabb:	ret    
  42aabc:	call   403280 <__stack_chk_fail@plt>
  42aac1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aacb:	nop    DWORD PTR [rax+rax*1+0x0]
  42aad0:	push   rbp
  42aad1:	push   r15
  42aad3:	push   r14
  42aad5:	push   r13
  42aad7:	push   r12
  42aad9:	push   rbx
  42aada:	sub    rsp,0x28
  42aade:	mov    r14,rsi
  42aae1:	mov    r15,rdi
  42aae4:	mov    rax,QWORD PTR fs:0x28
  42aaed:	mov    QWORD PTR [rsp+0x20],rax
  42aaf2:	call   403d20 <isspace@plt+0x410>
  42aaf7:	test   rax,rax
  42aafa:	je     42ab25 <isspace@plt+0x27215>
  42aafc:	mov    r13,rax
  42aaff:	mov    rax,QWORD PTR fs:0x28
  42ab08:	cmp    rax,QWORD PTR [rsp+0x20]
  42ab0d:	jne    42abc4 <isspace@plt+0x272b4>
  42ab13:	mov    rax,r13
  42ab16:	add    rsp,0x28
  42ab1a:	pop    rbx
  42ab1b:	pop    r12
  42ab1d:	pop    r13
  42ab1f:	pop    r14
  42ab21:	pop    r15
  42ab23:	pop    rbp
  42ab24:	ret    
  42ab25:	mov    rdi,r15
  42ab28:	mov    rsi,r14
  42ab2b:	call   404030 <isspace@plt+0x720>
  42ab30:	test   al,al
  42ab32:	je     42ab44 <isspace@plt+0x27234>
  42ab34:	mov    rdi,r15
  42ab37:	mov    rsi,r14
  42ab3a:	call   403d20 <isspace@plt+0x410>
  42ab3f:	test   rax,rax
  42ab42:	jne    42aafc <isspace@plt+0x271ec>
  42ab44:	lea    rbx,[rsp+0x8]
  42ab49:	mov    rdi,rbx
  42ab4c:	call   404230 <isspace@plt+0x920>
  42ab51:	mov    rdi,r15
  42ab54:	mov    rsi,rbx
  42ab57:	call   403d70 <isspace@plt+0x460>
  42ab5c:	test   al,al
  42ab5e:	je     42abbc <isspace@plt+0x272ac>
  42ab60:	mov    rdi,r15
  42ab63:	call   403fc0 <isspace@plt+0x6b0>
  42ab68:	mov    r12,rax
  42ab6b:	mov    rdi,r15
  42ab6e:	call   403f90 <isspace@plt+0x680>
  42ab73:	cmp    rax,r12
  42ab76:	jae    42abac <isspace@plt+0x2729c>
  42ab78:	mov    rbx,rax
  42ab7b:	lea    rbp,[rsp+0x8]
  42ab80:	xor    r13d,r13d
  42ab83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ab8d:	nop    DWORD PTR [rax]
  42ab90:	mov    rdi,r15
  42ab93:	mov    rsi,rbp
  42ab96:	call   403d70 <isspace@plt+0x460>
  42ab9b:	test   al,al
  42ab9d:	je     42aaff <isspace@plt+0x271ef>
  42aba3:	add    rbx,0x1
  42aba7:	cmp    rbx,r12
  42abaa:	jb     42ab90 <isspace@plt+0x27280>
  42abac:	mov    rdi,r15
  42abaf:	mov    rsi,r14
  42abb2:	call   403d20 <isspace@plt+0x410>
  42abb7:	jmp    42aafc <isspace@plt+0x271ec>
  42abbc:	xor    r13d,r13d
  42abbf:	jmp    42aaff <isspace@plt+0x271ef>
  42abc4:	call   403280 <__stack_chk_fail@plt>
  42abc9:	nop    DWORD PTR [rax+0x0]
  42abd0:	push   rax
  42abd1:	mov    rax,QWORD PTR fs:0x28
  42abda:	mov    QWORD PTR [rsp],rax
  42abde:	call   403ff0 <isspace@plt+0x6e0>
  42abe3:	mov    rcx,QWORD PTR fs:0x28
  42abec:	cmp    rcx,QWORD PTR [rsp]
  42abf0:	jne    42abf4 <isspace@plt+0x272e4>
  42abf2:	pop    rcx
  42abf3:	ret    
  42abf4:	call   403280 <__stack_chk_fail@plt>
  42abf9:	nop    DWORD PTR [rax+0x0]
  42ac00:	push   r15
  42ac02:	push   r14
  42ac04:	push   rbx
  42ac05:	sub    rsp,0x10
  42ac09:	mov    rbx,rdx
  42ac0c:	mov    r14,rsi
  42ac0f:	mov    rax,QWORD PTR fs:0x28
  42ac18:	mov    QWORD PTR [rsp+0x8],rax
  42ac1d:	mov    rdi,rdx
  42ac20:	call   403250 <strlen@plt>
  42ac25:	cmp    DWORD PTR [r14+0x24],0x0
  42ac2a:	je     42ac48 <isspace@plt+0x27338>
  42ac2c:	mov    rax,QWORD PTR fs:0x28
  42ac35:	cmp    rax,QWORD PTR [rsp+0x8]
  42ac3a:	jne    42ac8d <isspace@plt+0x2737d>
  42ac3c:	xor    eax,eax
  42ac3e:	add    rsp,0x10
  42ac42:	pop    rbx
  42ac43:	pop    r14
  42ac45:	pop    r15
  42ac47:	ret    
  42ac48:	mov    r15,rax
  42ac4b:	xor    esi,esi
  42ac4d:	mov    rdi,r14
  42ac50:	call   42aad0 <isspace@plt+0x271c0>
  42ac55:	test   rax,rax
  42ac58:	je     42ac2c <isspace@plt+0x2731c>
  42ac5a:	add    r15,0x1
  42ac5e:	mov    rdi,rax
  42ac61:	mov    rsi,rbx
  42ac64:	mov    rdx,r15
  42ac67:	call   4045d0 <isspace@plt+0xcc0>
  42ac6c:	test   al,al
  42ac6e:	je     42ac2c <isspace@plt+0x2731c>
  42ac70:	mov    esi,0x1
  42ac75:	mov    rdi,r14
  42ac78:	call   403ff0 <isspace@plt+0x6e0>
  42ac7d:	mov    rcx,QWORD PTR fs:0x28
  42ac86:	cmp    rcx,QWORD PTR [rsp+0x8]
  42ac8b:	je     42ac3e <isspace@plt+0x2732e>
  42ac8d:	call   403280 <__stack_chk_fail@plt>
  42ac92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ac9c:	nop    DWORD PTR [rax+0x0]
  42aca0:	push   rbp
  42aca1:	push   r15
  42aca3:	push   r14
  42aca5:	push   rbx
  42aca6:	sub    rsp,0x58
  42acaa:	mov    r15,r8
  42acad:	mov    r14,rcx
  42acb0:	mov    rax,QWORD PTR fs:0x28
  42acb9:	mov    QWORD PTR [rsp+0x50],rax
  42acbe:	cmp    BYTE PTR [rsi+0x21],0x0
  42acc2:	mov    eax,DWORD PTR [rsi+0x24]
  42acc5:	je     42acf2 <isspace@plt+0x273e2>
  42acc7:	test   eax,eax
  42acc9:	je     42ad56 <isspace@plt+0x27446>
  42accf:	xor    ebp,ebp
  42acd1:	mov    rax,QWORD PTR fs:0x28
  42acda:	cmp    rax,QWORD PTR [rsp+0x50]
  42acdf:	jne    42aee1 <isspace@plt+0x275d1>
  42ace5:	mov    eax,ebp
  42ace7:	add    rsp,0x58
  42aceb:	pop    rbx
  42acec:	pop    r14
  42acee:	pop    r15
  42acf0:	pop    rbp
  42acf1:	ret    
  42acf2:	cmp    eax,0x3
  42acf5:	je     42adbe <isspace@plt+0x274ae>
  42acfb:	cmp    eax,0x2
  42acfe:	je     42ae9a <isspace@plt+0x2758a>
  42ad04:	test   eax,eax
  42ad06:	jne    42accf <isspace@plt+0x273bf>
  42ad08:	mov    rdi,rsi
  42ad0b:	mov    rsi,rdx
  42ad0e:	call   42aad0 <isspace@plt+0x271c0>
  42ad13:	test   rax,rax
  42ad16:	je     42accf <isspace@plt+0x273bf>
  42ad18:	mov    rbx,rax
  42ad1b:	mov    rdi,r15
  42ad1e:	call   417460 <isspace@plt+0x13b50>
  42ad23:	cmp    rax,0xffffffffffffffff
  42ad27:	je     42accf <isspace@plt+0x273bf>
  42ad29:	mov    rbp,rax
  42ad2c:	lea    rsi,[rax+0x1]
  42ad30:	mov    rdi,rbx
  42ad33:	call   404270 <isspace@plt+0x960>
  42ad38:	test   al,al
  42ad3a:	je     42accf <isspace@plt+0x273bf>
  42ad3c:	mov    rsi,QWORD PTR [r15]
  42ad3f:	mov    rcx,QWORD PTR [rbx]
  42ad42:	mov    rdi,r14
  42ad45:	mov    rdx,rbp
  42ad48:	call   411380 <isspace@plt+0xda70>
  42ad4d:	mov    QWORD PTR [rbx+0x8],rax
  42ad51:	jmp    42aeb9 <isspace@plt+0x275a9>
  42ad56:	mov    rdi,rsi
  42ad59:	mov    rsi,rdx
  42ad5c:	call   42aad0 <isspace@plt+0x271c0>
  42ad61:	test   rax,rax
  42ad64:	je     42accf <isspace@plt+0x273bf>
  42ad6a:	mov    rbx,rax
  42ad6d:	mov    rdi,r15
  42ad70:	call   417460 <isspace@plt+0x13b50>
  42ad75:	cmp    rax,0xffffffffffffffff
  42ad79:	je     42accf <isspace@plt+0x273bf>
  42ad7f:	mov    rbp,rax
  42ad82:	lea    rsi,[rax+0x1]
  42ad86:	mov    rdi,rbx
  42ad89:	call   4042f0 <isspace@plt+0x9e0>
  42ad8e:	test   al,al
  42ad90:	je     42accf <isspace@plt+0x273bf>
  42ad96:	mov    rcx,QWORD PTR [rbx]
  42ad99:	mov    rax,QWORD PTR [rbx+0x8]
  42ad9d:	test   rax,rax
  42ada0:	je     42aea2 <isspace@plt+0x27592>
  42ada6:	cmp    BYTE PTR [rcx+rax*1-0x1],0x0
  42adab:	jne    42aea4 <isspace@plt+0x27594>
  42adb1:	add    rax,0xffffffffffffffff
  42adb5:	mov    QWORD PTR [rbx+0x8],rax
  42adb9:	jmp    42aea4 <isspace@plt+0x27594>
  42adbe:	mov    rbx,rdi
  42adc1:	mov    QWORD PTR [rsp+0x40],0x0
  42adca:	lea    rax,[rip+0x7631]        # 432402 <isspace@plt+0x2eaf2>
  42add1:	vmovq  xmm0,rax
  42add6:	lea    rax,[rip+0x75fb]        # 4323d8 <isspace@plt+0x2eac8>
  42addd:	vmovq  xmm1,rax
  42ade2:	vpunpcklqdq xmm0,xmm1,xmm0
  42ade6:	vmovdqa XMMWORD PTR [rsp+0x20],xmm0
  42adec:	lea    rax,[rip+0x75fb]        # 4323ee <isspace@plt+0x2eade>
  42adf3:	mov    QWORD PTR [rsp+0x30],rax
  42adf8:	lea    rax,[rdi+0x40]
  42adfc:	sub    rsi,rax
  42adff:	shr    rsi,0x3
  42ae03:	imul   ebp,esi,0xcccccccd
  42ae09:	lea    r14,[rsp+0x8]
  42ae0e:	mov    rdi,r14
  42ae11:	call   404230 <isspace@plt+0x920>
  42ae16:	cmp    ebp,0xe
  42ae19:	lea    rax,[rip+0x75da]        # 4323fa <isspace@plt+0x2eaea>
  42ae20:	lea    rcx,[rip+0x75b5]        # 4323dc <isspace@plt+0x2eacc>
  42ae27:	cmove  rcx,rax
  42ae2b:	mov    QWORD PTR [rsp+0x38],rcx
  42ae30:	mov    rax,QWORD PTR [rbx+0x30]
  42ae34:	mov    rsi,QWORD PTR [rax+0x10]
  42ae38:	lea    rax,[rip+0xfffffffffffffc11]        # 42aa50 <isspace@plt+0x27140>
  42ae3f:	lea    rcx,[rsp+0x20]
  42ae44:	mov    r8d,0x0
  42ae4a:	mov    r9d,0x0
  42ae50:	mov    rdi,rbx
  42ae53:	mov    rdx,r15
  42ae56:	push   rax
  42ae57:	push   r14
  42ae59:	call   4253e0 <isspace@plt+0x21ad0>
  42ae5e:	add    rsp,0x10
  42ae62:	test   eax,eax
  42ae64:	sete   bpl
  42ae68:	je     42ae8b <isspace@plt+0x2757b>
  42ae6a:	lea    rdi,[rsp+0x8]
  42ae6f:	call   404dd0 <isspace@plt+0x14c0>
  42ae74:	mov    rcx,rax
  42ae77:	lea    rsi,[rip+0x59b4]        # 430832 <isspace@plt+0x2cf22>
  42ae7e:	xor    eax,eax
  42ae80:	mov    rdi,rbx
  42ae83:	mov    rdx,rcx
  42ae86:	call   42a150 <isspace@plt+0x26840>
  42ae8b:	lea    rdi,[rsp+0x8]
  42ae90:	call   404550 <isspace@plt+0xc40>
  42ae95:	jmp    42acd1 <isspace@plt+0x273c1>
  42ae9a:	mov    bpl,0x1
  42ae9d:	jmp    42acd1 <isspace@plt+0x273c1>
  42aea2:	xor    eax,eax
  42aea4:	mov    rsi,QWORD PTR [r15]
  42aea7:	add    rcx,rax
  42aeaa:	mov    rdi,r14
  42aead:	mov    rdx,rbp
  42aeb0:	call   411380 <isspace@plt+0xda70>
  42aeb5:	add    QWORD PTR [rbx+0x8],rax
  42aeb9:	lea    rsi,[rip+0x7745]        # 432605 <isspace@plt+0x2ecf5>
  42aec0:	mov    edx,0x1
  42aec5:	mov    rdi,rbx
  42aec8:	call   404460 <isspace@plt+0xb50>
  42aecd:	mov    rcx,QWORD PTR fs:0x28
  42aed6:	cmp    rcx,QWORD PTR [rsp+0x50]
  42aedb:	je     42ace7 <isspace@plt+0x273d7>
  42aee1:	call   403280 <__stack_chk_fail@plt>
  42aee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aef0:	push   rbx
  42aef1:	sub    rsp,0x10
  42aef5:	mov    rax,rcx
  42aef8:	mov    rcx,rdx
  42aefb:	mov    rbx,rsi
  42aefe:	mov    rdx,QWORD PTR fs:0x28
  42af07:	mov    QWORD PTR [rsp+0x8],rdx
  42af0c:	xor    edx,edx
  42af0e:	mov    r8,rax
  42af11:	call   42aca0 <isspace@plt+0x27390>
  42af16:	test   al,al
  42af18:	je     42af39 <isspace@plt+0x27629>
  42af1a:	mov    esi,0x1
  42af1f:	mov    rdi,rbx
  42af22:	call   403ff0 <isspace@plt+0x6e0>
  42af27:	mov    rcx,QWORD PTR fs:0x28
  42af30:	cmp    rcx,QWORD PTR [rsp+0x8]
  42af35:	je     42af4b <isspace@plt+0x2763b>
  42af37:	jmp    42af51 <isspace@plt+0x27641>
  42af39:	mov    rax,QWORD PTR fs:0x28
  42af42:	cmp    rax,QWORD PTR [rsp+0x8]
  42af47:	jne    42af51 <isspace@plt+0x27641>
  42af49:	xor    eax,eax
  42af4b:	add    rsp,0x10
  42af4f:	pop    rbx
  42af50:	ret    
  42af51:	call   403280 <__stack_chk_fail@plt>
  42af56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42af60:	push   rax
  42af61:	mov    rax,QWORD PTR fs:0x28
  42af6a:	mov    QWORD PTR [rsp],rax
  42af6e:	cmp    DWORD PTR [rsi+0x24],0x1
  42af72:	jne    42af8a <isspace@plt+0x2767a>
  42af74:	mov    rax,QWORD PTR [rdi+0x30]
  42af78:	test   rax,rax
  42af7b:	je     42afa3 <isspace@plt+0x27693>
  42af7d:	mov    rdi,QWORD PTR [rax+0x18]
  42af81:	call   41f1e0 <isspace@plt+0x1b8d0>
  42af86:	cdqe   
  42af88:	jmp    42afa5 <isspace@plt+0x27695>
  42af8a:	mov    rdi,rsi
  42af8d:	call   403f90 <isspace@plt+0x680>
  42af92:	mov    rcx,QWORD PTR fs:0x28
  42af9b:	cmp    rcx,QWORD PTR [rsp]
  42af9f:	jne    42afb6 <isspace@plt+0x276a6>
  42afa1:	pop    rcx
  42afa2:	ret    
  42afa3:	xor    eax,eax
  42afa5:	mov    rcx,QWORD PTR fs:0x28
  42afae:	cmp    rcx,QWORD PTR [rsp]
  42afb2:	jne    42afb6 <isspace@plt+0x276a6>
  42afb4:	pop    rcx
  42afb5:	ret    
  42afb6:	call   403280 <__stack_chk_fail@plt>
  42afbb:	nop    DWORD PTR [rax+rax*1+0x0]
  42afc0:	push   rax
  42afc1:	mov    rax,QWORD PTR fs:0x28
  42afca:	mov    QWORD PTR [rsp],rax
  42afce:	mov    eax,0x4b
  42afd3:	cmp    sil,0x40
  42afd7:	je     42aff3 <isspace@plt+0x276e3>
  42afd9:	mov    eax,esi
  42afdb:	add    al,0x9f
  42afdd:	cmp    al,0x19
  42afdf:	ja     42afe6 <isspace@plt+0x276d6>
  42afe1:	add    esi,0xffffffb3
  42afe4:	jmp    42aff1 <isspace@plt+0x276e1>
  42afe6:	mov    eax,esi
  42afe8:	add    al,0xbf
  42afea:	cmp    al,0x1a
  42afec:	jae    42b008 <isspace@plt+0x276f8>
  42afee:	add    esi,0xfffffff0
  42aff1:	mov    eax,esi
  42aff3:	mov    rcx,QWORD PTR fs:0x28
  42affc:	cmp    rcx,QWORD PTR [rsp]
  42b000:	jne    42b0d2 <isspace@plt+0x277c2>
  42b006:	pop    rcx
  42b007:	ret    
  42b008:	add    sil,0xdf
  42b00c:	cmp    sil,0x3e
  42b010:	ja     42b036 <isspace@plt+0x27726>
  42b012:	xor    eax,eax
  42b014:	movzx  ecx,sil
  42b018:	lea    rdx,[rip+0x72bd]        # 4322dc <isspace@plt+0x2e9cc>
  42b01f:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  42b023:	add    rcx,rdx
  42b026:	jmp    rcx
  42b028:	mov    eax,0x12
  42b02d:	jmp    42aff3 <isspace@plt+0x276e3>
  42b02f:	mov    eax,0x13
  42b034:	jmp    42aff3 <isspace@plt+0x276e3>
  42b036:	mov    eax,0x30
  42b03b:	jmp    42aff3 <isspace@plt+0x276e3>
  42b03d:	mov    eax,0xd
  42b042:	jmp    42aff3 <isspace@plt+0x276e3>
  42b044:	mov    eax,0xf
  42b049:	jmp    42aff3 <isspace@plt+0x276e3>
  42b04b:	mov    eax,0x10
  42b050:	jmp    42aff3 <isspace@plt+0x276e3>
  42b052:	mov    eax,0x4
  42b057:	jmp    42aff3 <isspace@plt+0x276e3>
  42b059:	mov    eax,0x5
  42b05e:	jmp    42aff3 <isspace@plt+0x276e3>
  42b060:	mov    eax,0x6
  42b065:	jmp    42aff3 <isspace@plt+0x276e3>
  42b067:	mov    eax,0x7
  42b06c:	jmp    42aff3 <isspace@plt+0x276e3>
  42b06e:	mov    eax,0x8
  42b073:	jmp    42aff3 <isspace@plt+0x276e3>
  42b078:	mov    eax,0x9
  42b07d:	jmp    42aff3 <isspace@plt+0x276e3>
  42b082:	mov    eax,0x11
  42b087:	jmp    42aff3 <isspace@plt+0x276e3>
  42b08c:	mov    eax,0xc
  42b091:	jmp    42aff3 <isspace@plt+0x276e3>
  42b096:	mov    eax,0x2
  42b09b:	jmp    42aff3 <isspace@plt+0x276e3>
  42b0a0:	mov    eax,0xe
  42b0a5:	jmp    42aff3 <isspace@plt+0x276e3>
  42b0aa:	mov    eax,0x1
  42b0af:	jmp    42aff3 <isspace@plt+0x276e3>
  42b0b4:	mov    eax,0x3
  42b0b9:	jmp    42aff3 <isspace@plt+0x276e3>
  42b0be:	mov    eax,0xa
  42b0c3:	jmp    42aff3 <isspace@plt+0x276e3>
  42b0c8:	mov    eax,0xb
  42b0cd:	jmp    42aff3 <isspace@plt+0x276e3>
  42b0d2:	call   403280 <__stack_chk_fail@plt>
  42b0d7:	nop    WORD PTR [rax+rax*1+0x0]
  42b0e0:	push   rax
  42b0e1:	mov    rax,QWORD PTR fs:0x28
  42b0ea:	mov    QWORD PTR [rsp],rax
  42b0ee:	lea    eax,[rsi-0x31]
  42b0f1:	cmp    eax,0x19
  42b0f4:	ja     42b0fd <isspace@plt+0x277ed>
  42b0f6:	add    esi,0xffffffe3
  42b0f9:	mov    al,0x1
  42b0fb:	jmp    42b104 <isspace@plt+0x277f4>
  42b0fd:	cmp    esi,0x2f
  42b100:	ja     42b11d <isspace@plt+0x2780d>
  42b102:	xor    eax,eax
  42b104:	mov    ecx,esi
  42b106:	lea    rcx,[rcx+rcx*4]
  42b10a:	lea    rdx,[rdi+rcx*8]
  42b10e:	add    rdx,0x40
  42b112:	mov    QWORD PTR [rdi+0x940],rdx
  42b119:	mov    BYTE PTR [rdi+rcx*8+0x61],al
  42b11d:	mov    rax,QWORD PTR fs:0x28
  42b126:	cmp    rax,QWORD PTR [rsp]
  42b12a:	jne    42b12e <isspace@plt+0x2781e>
  42b12c:	pop    rax
  42b12d:	ret    
  42b12e:	call   403280 <__stack_chk_fail@plt>
  42b133:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b13d:	nop    DWORD PTR [rax]
  42b140:	push   rax
  42b141:	mov    rax,QWORD PTR fs:0x28
  42b14a:	mov    QWORD PTR [rsp],rax
  42b14e:	mov    rax,QWORD PTR [rdi+0x940]
  42b155:	test   rax,rax
  42b158:	je     42b16d <isspace@plt+0x2785d>
  42b15a:	add    rdi,0x40
  42b15e:	sub    rax,rdi
  42b161:	shr    rax,0x3
  42b165:	imul   eax,eax,0xcccccccd
  42b16b:	jmp    42b16f <isspace@plt+0x2785f>
  42b16d:	xor    eax,eax
  42b16f:	mov    rcx,QWORD PTR fs:0x28
  42b178:	cmp    rcx,QWORD PTR [rsp]
  42b17c:	jne    42b180 <isspace@plt+0x27870>
  42b17e:	pop    rcx
  42b17f:	ret    
  42b180:	call   403280 <__stack_chk_fail@plt>
  42b185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b18f:	nop
  42b190:	push   rbx
  42b191:	sub    rsp,0x10
  42b195:	mov    rbx,rdi
  42b198:	mov    rax,QWORD PTR fs:0x28
  42b1a1:	mov    QWORD PTR [rsp+0x8],rax
  42b1a6:	cmp    esi,0x19
  42b1a9:	ja     42b1c5 <isspace@plt+0x278b5>
  42b1ab:	mov    eax,esi
  42b1ad:	lea    rax,[rax+rax*4]
  42b1b1:	shl    rax,0x3
  42b1b5:	add    rax,QWORD PTR [rip+0x17de4]        # 442fa0 <isspace@plt+0x3f690>
  42b1bc:	mov    QWORD PTR [rbx+0x930],rax
  42b1c3:	jmp    42b1e0 <isspace@plt+0x278d0>
  42b1c5:	lea    rdi,[rbx+0xb20]
  42b1cc:	add    esi,0xffffffe6
  42b1cf:	call   403c60 <isspace@plt+0x350>
  42b1d4:	mov    QWORD PTR [rbx+0x930],rax
  42b1db:	test   rax,rax
  42b1de:	je     42b200 <isspace@plt+0x278f0>
  42b1e0:	mov    rdi,rbx
  42b1e3:	call   422aa0 <isspace@plt+0x1f190>
  42b1e8:	mov    al,0x1
  42b1ea:	mov    rcx,QWORD PTR fs:0x28
  42b1f3:	cmp    rcx,QWORD PTR [rsp+0x8]
  42b1f8:	jne    42b204 <isspace@plt+0x278f4>
  42b1fa:	add    rsp,0x10
  42b1fe:	pop    rbx
  42b1ff:	ret    
  42b200:	xor    eax,eax
  42b202:	jmp    42b1ea <isspace@plt+0x278da>
  42b204:	call   403280 <__stack_chk_fail@plt>
  42b209:	nop    DWORD PTR [rax+0x0]
  42b210:	push   rax
  42b211:	mov    rax,QWORD PTR fs:0x28
  42b21a:	mov    QWORD PTR [rsp],rax
  42b21e:	mov    edx,0x22
  42b223:	call   42b3c0 <isspace@plt+0x27ab0>
  42b228:	mov    rcx,QWORD PTR fs:0x28
  42b231:	cmp    rcx,QWORD PTR [rsp]
  42b235:	jne    42b239 <isspace@plt+0x27929>
  42b237:	pop    rcx
  42b238:	ret    
  42b239:	call   403280 <__stack_chk_fail@plt>
  42b23e:	xchg   ax,ax
  42b240:	push   rax
  42b241:	mov    rax,QWORD PTR fs:0x28
  42b24a:	mov    QWORD PTR [rsp],rax
  42b24e:	mov    edx,0x27
  42b253:	call   42b3c0 <isspace@plt+0x27ab0>
  42b258:	mov    rcx,QWORD PTR fs:0x28
  42b261:	cmp    rcx,QWORD PTR [rsp]
  42b265:	jne    42b269 <isspace@plt+0x27959>
  42b267:	pop    rcx
  42b268:	ret    
  42b269:	call   403280 <__stack_chk_fail@plt>
  42b26e:	xchg   ax,ax
  42b270:	push   rax
  42b271:	mov    rax,QWORD PTR fs:0x28
  42b27a:	mov    QWORD PTR [rsp],rax
  42b27e:	mov    edx,0x60
  42b283:	call   42b3c0 <isspace@plt+0x27ab0>
  42b288:	mov    rcx,QWORD PTR fs:0x28
  42b291:	cmp    rcx,QWORD PTR [rsp]
  42b295:	jne    42b299 <isspace@plt+0x27989>
  42b297:	pop    rcx
  42b298:	ret    
  42b299:	call   403280 <__stack_chk_fail@plt>
  42b29e:	xchg   ax,ax
  42b2a0:	push   r15
  42b2a2:	push   r14
  42b2a4:	push   r13
  42b2a6:	push   r12
  42b2a8:	push   rbx
  42b2a9:	sub    rsp,0x10
  42b2ad:	mov    r12,rdx
  42b2b0:	mov    r13,rsi
  42b2b3:	mov    rbx,rdi
  42b2b6:	mov    rax,QWORD PTR fs:0x28
  42b2bf:	mov    QWORD PTR [rsp+0x8],rax
  42b2c4:	call   4174c0 <isspace@plt+0x13bb0>
  42b2c9:	mov    r14,rax
  42b2cc:	mov    r15,rdx
  42b2cf:	xor    esi,esi
  42b2d1:	mov    rdi,rbx
  42b2d4:	call   425330 <isspace@plt+0x21a20>
  42b2d9:	mov    rbx,rax
  42b2dc:	test   rax,rax
  42b2df:	je     42b2f5 <isspace@plt+0x279e5>
  42b2e1:	mov    rdi,r13
  42b2e4:	mov    rsi,r12
  42b2e7:	mov    rdx,rbx
  42b2ea:	call   416fc0 <isspace@plt+0x136b0>
  42b2ef:	mov    r14,rax
  42b2f2:	mov    r15,rdx
  42b2f5:	mov    rdi,rbx
  42b2f8:	call   42b600 <isspace@plt+0x27cf0>
  42b2fd:	mov    rax,QWORD PTR fs:0x28
  42b306:	cmp    rax,QWORD PTR [rsp+0x8]
  42b30b:	jne    42b321 <isspace@plt+0x27a11>
  42b30d:	mov    rax,r14
  42b310:	mov    rdx,r15
  42b313:	add    rsp,0x10
  42b317:	pop    rbx
  42b318:	pop    r12
  42b31a:	pop    r13
  42b31c:	pop    r14
  42b31e:	pop    r15
  42b320:	ret    
  42b321:	call   403280 <__stack_chk_fail@plt>
  42b326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b330:	push   r15
  42b332:	push   r14
  42b334:	push   r13
  42b336:	push   r12
  42b338:	push   rbx
  42b339:	sub    rsp,0x10
  42b33d:	mov    r12,rdx
  42b340:	mov    r13,rsi
  42b343:	mov    rbx,rdi
  42b346:	mov    rax,QWORD PTR fs:0x28
  42b34f:	mov    QWORD PTR [rsp+0x8],rax
  42b354:	call   4174c0 <isspace@plt+0x13bb0>
  42b359:	mov    r14,rax
  42b35c:	mov    r15,rdx
  42b35f:	xor    esi,esi
  42b361:	mov    rdi,rbx
  42b364:	call   425330 <isspace@plt+0x21a20>
  42b369:	mov    rbx,rax
  42b36c:	test   rax,rax
  42b36f:	je     42b385 <isspace@plt+0x27a75>
  42b371:	mov    rdi,r13
  42b374:	mov    rsi,r12
  42b377:	mov    rdx,rbx
  42b37a:	call   417050 <isspace@plt+0x13740>
  42b37f:	mov    r14,rax
  42b382:	mov    r15,rdx
  42b385:	mov    rdi,rbx
  42b388:	call   42b600 <isspace@plt+0x27cf0>
  42b38d:	mov    rax,QWORD PTR fs:0x28
  42b396:	cmp    rax,QWORD PTR [rsp+0x8]
  42b39b:	jne    42b3b1 <isspace@plt+0x27aa1>
  42b39d:	mov    rax,r14
  42b3a0:	mov    rdx,r15
  42b3a3:	add    rsp,0x10
  42b3a7:	pop    rbx
  42b3a8:	pop    r12
  42b3aa:	pop    r13
  42b3ac:	pop    r14
  42b3ae:	pop    r15
  42b3b0:	ret    
  42b3b1:	call   403280 <__stack_chk_fail@plt>
  42b3b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b3c0:	push   rbp
  42b3c1:	push   r15
  42b3c3:	push   r14
  42b3c5:	push   r12
  42b3c7:	push   rbx
  42b3c8:	sub    rsp,0x60
  42b3cc:	mov    ebp,edx
  42b3ce:	mov    r15,rsi
  42b3d1:	mov    r14,rdi
  42b3d4:	mov    rax,QWORD PTR fs:0x28
  42b3dd:	mov    QWORD PTR [rsp+0x58],rax
  42b3e2:	lea    rdi,[rsp+0x28]
  42b3e7:	mov    rsi,r14
  42b3ea:	mov    rdx,r15
  42b3ed:	call   410760 <isspace@plt+0xce50>
  42b3f2:	mov    rax,QWORD PTR [rsp+0x48]
  42b3f7:	mov    QWORD PTR [rsp+0x20],rax
  42b3fc:	vmovups ymm0,YMMWORD PTR [rsp+0x28]
  42b402:	vmovups YMMWORD PTR [rsp],ymm0
  42b407:	mov    rdi,rsp
  42b40a:	lea    rsi,[rsp+0x57]
  42b40f:	vzeroupper 
  42b412:	call   412690 <isspace@plt+0xed80>
  42b417:	test   al,al
  42b419:	je     42b457 <isspace@plt+0x27b47>
  42b41b:	mov    al,BYTE PTR [rsp+0x57]
  42b41f:	cmp    al,0xa
  42b421:	je     42b457 <isspace@plt+0x27b47>
  42b423:	mov    rbx,rsp
  42b426:	lea    r12,[rsp+0x57]
  42b42b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b430:	cmp    al,bpl
  42b433:	je     42b4ae <isspace@plt+0x27b9e>
  42b435:	xor    esi,esi
  42b437:	mov    rdi,rbx
  42b43a:	call   4127d0 <isspace@plt+0xeec0>
  42b43f:	mov    rdi,rbx
  42b442:	mov    rsi,r12
  42b445:	call   412690 <isspace@plt+0xed80>
  42b44a:	test   al,al
  42b44c:	je     42b457 <isspace@plt+0x27b47>
  42b44e:	movzx  eax,BYTE PTR [rsp+0x57]
  42b453:	cmp    al,0xa
  42b455:	jne    42b430 <isspace@plt+0x27b20>
  42b457:	lea    rdi,[rsp+0x28]
  42b45c:	lea    rsi,[rsp+0x57]
  42b461:	call   412690 <isspace@plt+0xed80>
  42b466:	test   al,al
  42b468:	je     42b4ae <isspace@plt+0x27b9e>
  42b46a:	mov    al,BYTE PTR [rsp+0x57]
  42b46e:	cmp    al,0xa
  42b470:	je     42b4ae <isspace@plt+0x27b9e>
  42b472:	lea    rbx,[rsp+0x28]
  42b477:	lea    r12,[rsp+0x57]
  42b47c:	nop    DWORD PTR [rax+0x0]
  42b480:	cmp    al,bpl
  42b483:	je     42b4a9 <isspace@plt+0x27b99>
  42b485:	xor    esi,esi
  42b487:	mov    rdi,rbx
  42b48a:	call   412710 <isspace@plt+0xee00>
  42b48f:	mov    rdi,rbx
  42b492:	mov    rsi,r12
  42b495:	call   412690 <isspace@plt+0xed80>
  42b49a:	test   al,al
  42b49c:	je     42b4ae <isspace@plt+0x27b9e>
  42b49e:	movzx  eax,BYTE PTR [rsp+0x57]
  42b4a3:	cmp    al,0xa
  42b4a5:	jne    42b480 <isspace@plt+0x27b70>
  42b4a7:	jmp    42b4ae <isspace@plt+0x27b9e>
  42b4a9:	mov    r15,QWORD PTR [rsp+0x48]
  42b4ae:	movsx  eax,bpl
  42b4b2:	cmp    eax,0x60
  42b4b5:	je     42b4db <isspace@plt+0x27bcb>
  42b4b7:	cmp    eax,0x27
  42b4ba:	je     42b4ce <isspace@plt+0x27bbe>
  42b4bc:	cmp    eax,0x22
  42b4bf:	jne    42b4e8 <isspace@plt+0x27bd8>
  42b4c1:	mov    rdi,r14
  42b4c4:	mov    rsi,r15
  42b4c7:	call   416f30 <isspace@plt+0x13620>
  42b4cc:	jmp    42b4ed <isspace@plt+0x27bdd>
  42b4ce:	mov    rdi,r14
  42b4d1:	mov    rsi,r15
  42b4d4:	call   416f60 <isspace@plt+0x13650>
  42b4d9:	jmp    42b4ed <isspace@plt+0x27bdd>
  42b4db:	mov    rdi,r14
  42b4de:	mov    rsi,r15
  42b4e1:	call   416f90 <isspace@plt+0x13680>
  42b4e6:	jmp    42b4ed <isspace@plt+0x27bdd>
  42b4e8:	call   4174c0 <isspace@plt+0x13bb0>
  42b4ed:	mov    rcx,QWORD PTR fs:0x28
  42b4f6:	cmp    rcx,QWORD PTR [rsp+0x58]
  42b4fb:	jne    42b50a <isspace@plt+0x27bfa>
  42b4fd:	add    rsp,0x60
  42b501:	pop    rbx
  42b502:	pop    r12
  42b504:	pop    r14
  42b506:	pop    r15
  42b508:	pop    rbp
  42b509:	ret    
  42b50a:	call   403280 <__stack_chk_fail@plt>
  42b50f:	nop
  42b510:	push   rbx
  42b511:	sub    rsp,0x10
  42b515:	mov    rax,QWORD PTR fs:0x28
  42b51e:	mov    QWORD PTR [rsp+0x8],rax
  42b523:	mov    edi,0x1
  42b528:	mov    esi,0x40
  42b52d:	call   403470 <calloc@plt>
  42b532:	test   rax,rax
  42b535:	je     42b54d <isspace@plt+0x27c3d>
  42b537:	mov    rbx,rax
  42b53a:	lea    rsi,[rip+0x70ef]        # 432630 <isspace@plt+0x2ed20>
  42b541:	xor    edx,edx
  42b543:	mov    rdi,rax
  42b546:	call   4033f0 <regcomp@plt>
  42b54b:	jmp    42b54f <isspace@plt+0x27c3f>
  42b54d:	xor    ebx,ebx
  42b54f:	mov    rax,QWORD PTR fs:0x28
  42b558:	cmp    rax,QWORD PTR [rsp+0x8]
  42b55d:	jne    42b568 <isspace@plt+0x27c58>
  42b55f:	mov    rax,rbx
  42b562:	add    rsp,0x10
  42b566:	pop    rbx
  42b567:	ret    
  42b568:	call   403280 <__stack_chk_fail@plt>
  42b56d:	nop    DWORD PTR [rax]
  42b570:	push   r14
  42b572:	push   rbx
  42b573:	push   rax
  42b574:	mov    r14,rdi
  42b577:	mov    rax,QWORD PTR fs:0x28
  42b580:	mov    QWORD PTR [rsp],rax
  42b584:	call   4033f0 <regcomp@plt>
  42b589:	mov    ebx,eax
  42b58b:	test   eax,eax
  42b58d:	je     42b5a0 <isspace@plt+0x27c90>
  42b58f:	lea    rsi,[rip+0x709a]        # 432630 <isspace@plt+0x2ed20>
  42b596:	xor    edx,edx
  42b598:	mov    rdi,r14
  42b59b:	call   4033f0 <regcomp@plt>
  42b5a0:	mov    rax,QWORD PTR fs:0x28
  42b5a9:	cmp    rax,QWORD PTR [rsp]
  42b5ad:	jne    42b5b9 <isspace@plt+0x27ca9>
  42b5af:	mov    eax,ebx
  42b5b1:	add    rsp,0x8
  42b5b5:	pop    rbx
  42b5b6:	pop    r14
  42b5b8:	ret    
  42b5b9:	call   403280 <__stack_chk_fail@plt>
  42b5be:	xchg   ax,ax
  42b5c0:	push   rax
  42b5c1:	mov    rax,QWORD PTR fs:0x28
  42b5ca:	mov    QWORD PTR [rsp],rax
  42b5ce:	test   rdi,rdi
  42b5d1:	je     42b5d9 <isspace@plt+0x27cc9>
  42b5d3:	mov    rax,QWORD PTR [rdi+0x30]
  42b5d7:	jmp    42b5db <isspace@plt+0x27ccb>
  42b5d9:	xor    eax,eax
  42b5db:	mov    rcx,QWORD PTR fs:0x28
  42b5e4:	cmp    rcx,QWORD PTR [rsp]
  42b5e8:	jne    42b5ec <isspace@plt+0x27cdc>
  42b5ea:	pop    rcx
  42b5eb:	ret    
  42b5ec:	call   403280 <__stack_chk_fail@plt>
  42b5f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b5fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42b600:	push   rbx
  42b601:	sub    rsp,0x10
  42b605:	mov    rax,QWORD PTR fs:0x28
  42b60e:	mov    QWORD PTR [rsp+0x8],rax
  42b613:	test   rdi,rdi
  42b616:	je     42b628 <isspace@plt+0x27d18>
  42b618:	mov    rbx,rdi
  42b61b:	call   403240 <regfree@plt>
  42b620:	mov    rdi,rbx
  42b623:	call   4030d0 <free@plt>
  42b628:	mov    rax,QWORD PTR fs:0x28
  42b631:	cmp    rax,QWORD PTR [rsp+0x8]
  42b636:	jne    42b63e <isspace@plt+0x27d2e>
  42b638:	add    rsp,0x10
  42b63c:	pop    rbx
  42b63d:	ret    
  42b63e:	call   403280 <__stack_chk_fail@plt>
  42b643:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b64d:	nop    DWORD PTR [rax]
  42b650:	push   rax
  42b651:	mov    eax,edx
  42b653:	mov    rcx,QWORD PTR fs:0x28
  42b65c:	mov    QWORD PTR [rsp],rcx
  42b660:	xor    edx,edx
  42b662:	xor    ecx,ecx
  42b664:	mov    r8d,eax
  42b667:	call   403640 <regexec@plt>
  42b66c:	mov    rcx,QWORD PTR fs:0x28
  42b675:	cmp    rcx,QWORD PTR [rsp]
  42b679:	jne    42b67d <isspace@plt+0x27d6d>
  42b67b:	pop    rcx
  42b67c:	ret    
  42b67d:	call   403280 <__stack_chk_fail@plt>
  42b682:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b68c:	nop    DWORD PTR [rax+0x0]
  42b690:	push   rbp
  42b691:	push   r15
  42b693:	push   r14
  42b695:	push   r13
  42b697:	push   r12
  42b699:	push   rbx
  42b69a:	sub    rsp,0x78
  42b69e:	mov    r12,r9
  42b6a1:	mov    r14,r8
  42b6a4:	mov    QWORD PTR [rsp+0x18],rcx
  42b6a9:	mov    rbp,rdx
  42b6ac:	mov    rbx,rsi
  42b6af:	mov    rax,QWORD PTR fs:0x28
  42b6b8:	mov    QWORD PTR [rsp+0x70],rax
  42b6bd:	call   411460 <isspace@plt+0xdb50>
  42b6c2:	test   rax,rax
  42b6c5:	je     42b75d <isspace@plt+0x27e4d>
  42b6cb:	test   rbp,rbp
  42b6ce:	mov    QWORD PTR [rsp+0x10],rax
  42b6d3:	je     42b768 <isspace@plt+0x27e58>
  42b6d9:	mov    QWORD PTR [rsp+0x8],r14
  42b6de:	mov    r13,rax
  42b6e1:	add    r13,rbp
  42b6e4:	mov    r15,rax
  42b6e7:	nop    WORD PTR [rax+rax*1+0x0]
  42b6f0:	mov    rdi,QWORD PTR [rsp+0x18]
  42b6f5:	mov    rsi,r15
  42b6f8:	mov    rdx,QWORD PTR [rsp+0x8]
  42b6fd:	lea    rcx,[rsp+0x20]
  42b702:	mov    r8d,DWORD PTR [rsp+0xb0]
  42b70a:	call   403640 <regexec@plt>
  42b70f:	test   eax,eax
  42b711:	je     42b773 <isspace@plt+0x27e63>
  42b713:	mov    r14d,eax
  42b716:	xor    esi,esi
  42b718:	mov    rdi,r15
  42b71b:	mov    rdx,rbp
  42b71e:	call   403410 <memchr@plt>
  42b723:	test   rax,rax
  42b726:	je     42ba4a <isspace@plt+0x2813a>
  42b72c:	nop    DWORD PTR [rax+0x0]
  42b730:	lea    rcx,[rax+0x1]
  42b734:	cmp    r13,rax
  42b737:	je     42b743 <isspace@plt+0x27e33>
  42b739:	movzx  edx,BYTE PTR [rax]
  42b73c:	mov    rax,rcx
  42b73f:	test   dl,dl
  42b741:	je     42b730 <isspace@plt+0x27e20>
  42b743:	add    rcx,0xffffffffffffffff
  42b747:	mov    rax,rcx
  42b74a:	sub    rax,r15
  42b74d:	add    rbx,rax
  42b750:	mov    r15,rcx
  42b753:	sub    rbp,rax
  42b756:	jne    42b6f0 <isspace@plt+0x27de0>
  42b758:	jmp    42ba4a <isspace@plt+0x2813a>
  42b75d:	mov    r14d,0x1
  42b763:	jmp    42ba57 <isspace@plt+0x28147>
  42b768:	mov    r14d,0x1
  42b76e:	jmp    42ba4a <isspace@plt+0x2813a>
  42b773:	mov    r8,QWORD PTR [rsp+0x8]
  42b778:	test   r8,r8
  42b77b:	je     42ba47 <isspace@plt+0x28137>
  42b781:	cmp    r8,0x4
  42b785:	jae    42b78e <isspace@plt+0x27e7e>
  42b787:	xor    eax,eax
  42b789:	jmp    42b9e9 <isspace@plt+0x280d9>
  42b78e:	mov    rax,r8
  42b791:	and    rax,0xfffffffffffffffc
  42b795:	vmovq  xmm0,rbx
  42b79a:	vpbroadcastq ymm0,xmm0
  42b79f:	lea    rsi,[rax-0x4]
  42b7a3:	mov    rcx,rsi
  42b7a6:	shr    rcx,0x2
  42b7aa:	add    rcx,0x1
  42b7ae:	mov    edx,ecx
  42b7b0:	and    edx,0x1
  42b7b3:	test   rsi,rsi
  42b7b6:	je     42b928 <isspace@plt+0x28018>
  42b7bc:	lea    rsi,[r12+0x40]
  42b7c1:	mov    edi,0x1
  42b7c6:	sub    rdi,rcx
  42b7c9:	add    rdi,rdx
  42b7cc:	add    rdi,0xffffffffffffffff
  42b7d0:	vmovdqa ymm1,YMMWORD PTR [rip+0x6408]        # 431be0 <isspace@plt+0x2e2d0>
  42b7d8:	xor    ecx,ecx
  42b7da:	lea    rbp,[rsp+0x20]
  42b7df:	vpcmpeqd xmm11,xmm11,xmm11
  42b7e4:	vpbroadcastq ymm3,QWORD PTR [rip+0x6e1b]        # 432608 <isspace@plt+0x2ecf8>
  42b7ed:	vpbroadcastq ymm8,QWORD PTR [rip+0x6e1a]        # 432610 <isspace@plt+0x2ed00>
  42b7f6:	vpbroadcastq ymm10,QWORD PTR [rip+0x6e19]        # 432618 <isspace@plt+0x2ed08>
  42b7ff:	nop
  42b800:	vpsllq ymm6,ymm1,0x3
  42b805:	vmovq  xmm7,rbp
  42b80a:	vpbroadcastq ymm7,xmm7
  42b80f:	vpaddq ymm6,ymm7,ymm6
  42b813:	vpcmpeqd xmm7,xmm7,xmm7
  42b817:	vpgatherqd xmm4,DWORD PTR [ymm6*1+0x0],xmm7
  42b821:	vpcmpeqd xmm7,xmm4,xmm11
  42b826:	vpmovsxdq ymm7,xmm7
  42b82b:	vpmovsxdq ymm4,xmm4
  42b830:	vpaddq ymm4,ymm0,ymm4
  42b834:	vpor   ymm9,ymm6,ymm3
  42b838:	vpcmpeqd xmm5,xmm5,xmm5
  42b83c:	vpgatherqd xmm2,DWORD PTR [ymm9*1+0x0],xmm5
  42b846:	vpor   ymm4,ymm7,ymm4
  42b84a:	vpcmpeqd xmm5,xmm2,xmm11
  42b84f:	vpmovsxdq ymm5,xmm5
  42b854:	vpmovsxdq ymm2,xmm2
  42b859:	vpaddq ymm2,ymm0,ymm2
  42b85d:	vpor   ymm2,ymm5,ymm2
  42b861:	vpermq ymm5,ymm4,0xd4
  42b867:	vpermq ymm7,ymm2,0x60
  42b86d:	vpblendd ymm5,ymm5,ymm7,0xcc
  42b873:	vpermq ymm4,ymm4,0xf6
  42b879:	vpermq ymm2,ymm2,0xe8
  42b87f:	vpblendd ymm2,ymm4,ymm2,0xcc
  42b885:	vmovdqu YMMWORD PTR [rsi-0x20],ymm2
  42b88a:	vmovdqu YMMWORD PTR [rsi-0x40],ymm5
  42b88f:	vpaddq ymm2,ymm6,ymm8
  42b894:	vpcmpeqd xmm4,xmm4,xmm4
  42b898:	vpgatherqd xmm5,DWORD PTR [ymm2*1+0x0],xmm4
  42b8a2:	vpcmpeqd xmm4,xmm5,xmm11
  42b8a7:	vpmovsxdq ymm4,xmm4
  42b8ac:	vpmovsxdq ymm5,xmm5
  42b8b1:	vpaddq ymm5,ymm0,ymm5
  42b8b5:	vpor   ymm4,ymm4,ymm5
  42b8b9:	vpor   ymm2,ymm2,ymm3
  42b8bd:	vpcmpeqd xmm5,xmm5,xmm5
  42b8c1:	vpgatherqd xmm6,DWORD PTR [ymm2*1+0x0],xmm5
  42b8cb:	vpcmpeqd xmm2,xmm6,xmm11
  42b8d0:	vpmovsxdq ymm2,xmm2
  42b8d5:	vpmovsxdq ymm5,xmm6
  42b8da:	vpaddq ymm5,ymm0,ymm5
  42b8de:	vpor   ymm2,ymm2,ymm5
  42b8e2:	vpermq ymm5,ymm2,0x60
  42b8e8:	vpermq ymm6,ymm4,0xd4
  42b8ee:	vpblendd ymm5,ymm6,ymm5,0xcc
  42b8f4:	vpermq ymm2,ymm2,0xe8
  42b8fa:	vpermq ymm4,ymm4,0xf6
  42b900:	vpblendd ymm2,ymm4,ymm2,0xcc
  42b906:	vmovdqu YMMWORD PTR [rsi+0x20],ymm2
  42b90b:	vmovdqu YMMWORD PTR [rsi],ymm5
  42b90f:	add    rcx,0x8
  42b913:	vpaddq ymm1,ymm1,ymm10
  42b918:	sub    rsi,0xffffffffffffff80
  42b91c:	add    rdi,0x2
  42b920:	jne    42b800 <isspace@plt+0x27ef0>
  42b926:	jmp    42b932 <isspace@plt+0x28022>
  42b928:	vmovdqa ymm1,YMMWORD PTR [rip+0x62b0]        # 431be0 <isspace@plt+0x2e2d0>
  42b930:	xor    ecx,ecx
  42b932:	test   rdx,rdx
  42b935:	je     42b9e1 <isspace@plt+0x280d1>
  42b93b:	vpsllq ymm1,ymm1,0x3
  42b940:	lea    rdx,[rsp+0x20]
  42b945:	vmovq  xmm2,rdx
  42b94a:	vpbroadcastq ymm2,xmm2
  42b94f:	vpaddq ymm1,ymm2,ymm1
  42b953:	vpcmpeqd xmm2,xmm2,xmm2
  42b957:	vpgatherqd xmm3,DWORD PTR [ymm1*1+0x0],xmm2
  42b961:	vpbroadcastq ymm2,QWORD PTR [rip+0x6c9e]        # 432608 <isspace@plt+0x2ecf8>
  42b96a:	vpor   ymm1,ymm1,ymm2
  42b96e:	vpcmpeqd xmm2,xmm2,xmm2
  42b972:	vpgatherqd xmm4,DWORD PTR [ymm1*1+0x0],xmm2
  42b97c:	vpcmpeqd xmm1,xmm1,xmm1
  42b980:	vpcmpeqd xmm2,xmm3,xmm1
  42b984:	vpmovsxdq ymm2,xmm2
  42b989:	vpmovsxdq ymm3,xmm3
  42b98e:	vpaddq ymm3,ymm0,ymm3
  42b992:	vpor   ymm2,ymm2,ymm3
  42b996:	vpcmpeqd xmm1,xmm4,xmm1
  42b99a:	vpmovsxdq ymm1,xmm1
  42b99f:	vpmovsxdq ymm3,xmm4
  42b9a4:	vpaddq ymm0,ymm0,ymm3
  42b9a8:	vpor   ymm0,ymm1,ymm0
  42b9ac:	shl    rcx,0x4
  42b9b0:	vpermq ymm1,ymm2,0xd4
  42b9b6:	vpermq ymm3,ymm0,0x60
  42b9bc:	vpblendd ymm1,ymm1,ymm3,0xcc
  42b9c2:	vpermq ymm2,ymm2,0xf6
  42b9c8:	vpermq ymm0,ymm0,0xe8
  42b9ce:	vpblendd ymm0,ymm2,ymm0,0xcc
  42b9d4:	vmovdqu YMMWORD PTR [r12+rcx*1+0x20],ymm0
  42b9db:	vmovdqu YMMWORD PTR [r12+rcx*1],ymm1
  42b9e1:	xor    r14d,r14d
  42b9e4:	cmp    rax,r8
  42b9e7:	je     42ba4a <isspace@plt+0x2813a>
  42b9e9:	vmovq  xmm0,rbx
  42b9ee:	vpbroadcastq xmm0,xmm0
  42b9f3:	mov    rcx,rax
  42b9f6:	shl    rcx,0x4
  42b9fa:	add    r12,rcx
  42b9fd:	vpxor  xmm1,xmm1,xmm1
  42ba01:	vmovdqa xmm2,XMMWORD PTR [rip+0x6c17]        # 432620 <isspace@plt+0x2ed10>
  42ba09:	mov    rcx,QWORD PTR [rsp+0x8]
  42ba0e:	xchg   ax,ax
  42ba10:	vpmovzxdq xmm3,QWORD PTR [rsp+rax*8+0x20]
  42ba17:	vpblendd xmm4,xmm3,xmm1,0xa
  42ba1d:	vpcmpeqq xmm4,xmm4,xmm2
  42ba22:	vpshufd xmm3,xmm3,0xe8
  42ba27:	vpmovsxdq xmm3,xmm3
  42ba2c:	vpaddq xmm3,xmm0,xmm3
  42ba30:	vpor   xmm3,xmm4,xmm3
  42ba34:	vmovdqu XMMWORD PTR [r12],xmm3
  42ba3a:	add    rax,0x1
  42ba3e:	add    r12,0x10
  42ba42:	cmp    rcx,rax
  42ba45:	jne    42ba10 <isspace@plt+0x28100>
  42ba47:	xor    r14d,r14d
  42ba4a:	mov    rdi,QWORD PTR [rsp+0x10]
  42ba4f:	vzeroupper 
  42ba52:	call   4030d0 <free@plt>
  42ba57:	mov    rax,QWORD PTR fs:0x28
  42ba60:	cmp    rax,QWORD PTR [rsp+0x70]
  42ba65:	jne    42ba79 <isspace@plt+0x28169>
  42ba67:	mov    eax,r14d
  42ba6a:	add    rsp,0x78
  42ba6e:	pop    rbx
  42ba6f:	pop    r12
  42ba71:	pop    r13
  42ba73:	pop    r14
  42ba75:	pop    r15
  42ba77:	pop    rbp
  42ba78:	ret    
  42ba79:	call   403280 <__stack_chk_fail@plt>
  42ba7e:	xchg   ax,ax
  42ba80:	push   rbp
  42ba81:	push   r15
  42ba83:	push   r14
  42ba85:	push   r13
  42ba87:	push   r12
  42ba89:	push   rbx
  42ba8a:	sub    rsp,0x128
  42ba91:	mov    QWORD PTR [rsp+0x20],r9
  42ba96:	mov    rbx,r8
  42ba99:	mov    QWORD PTR [rsp+0x58],rcx
  42ba9e:	mov    r13,rdx
  42baa1:	mov    rbp,rsi
  42baa4:	mov    rax,QWORD PTR fs:0x28
  42baad:	mov    QWORD PTR [rsp+0x120],rax
  42bab5:	call   411460 <isspace@plt+0xdb50>
  42baba:	test   rax,rax
  42babd:	je     42bf23 <isspace@plt+0x28613>
  42bac3:	test   r13,r13
  42bac6:	mov    QWORD PTR [rsp+0x50],rax
  42bacb:	je     42bf2a <isspace@plt+0x2861a>
  42bad1:	mov    r14d,DWORD PTR [rsp+0x160]
  42bad9:	mov    r15,rax
  42badc:	add    r15,r13
  42badf:	lea    rdx,[rbx-0x4]
  42bae3:	shr    rdx,0x2
  42bae7:	lea    esi,[rdx+0x1]
  42baea:	mov    rcx,rbx
  42baed:	and    rcx,0xfffffffffffffffc
  42baf1:	mov    QWORD PTR [rsp+0x38],rcx
  42baf6:	and    esi,0x1
  42baf9:	mov    rcx,QWORD PTR [rsp+0x20]
  42bafe:	lea    rcx,[rcx+0x40]
  42bb02:	mov    QWORD PTR [rsp+0x30],rcx
  42bb07:	mov    QWORD PTR [rsp+0x40],rsi
  42bb0c:	lea    rcx,[rsi-0x1]
  42bb10:	mov    QWORD PTR [rsp+0x48],rdx
  42bb15:	sub    rcx,rdx
  42bb18:	mov    QWORD PTR [rsp+0x28],rcx
  42bb1d:	mov    DWORD PTR [rsp+0x1c],0x1
  42bb25:	lea    rcx,[rsp+0xd0]
  42bb2d:	vpbroadcastq ymm11,QWORD PTR [rip+0x6ad2]        # 432608 <isspace@plt+0x2ecf8>
  42bb36:	vpbroadcastq ymm12,QWORD PTR [rip+0x6ad1]        # 432610 <isspace@plt+0x2ed00>
  42bb3f:	vpbroadcastq ymm13,QWORD PTR [rip+0x6ad0]        # 432618 <isspace@plt+0x2ed08>
  42bb48:	mov    r12,rax
  42bb4b:	vmovdqu YMMWORD PTR [rsp+0xa0],ymm11
  42bb54:	vmovdqu YMMWORD PTR [rsp+0x80],ymm12
  42bb5d:	vmovdqu YMMWORD PTR [rsp+0x60],ymm13
  42bb63:	jmp    42bbb0 <isspace@plt+0x282a0>
  42bb65:	mov    esi,0xa
  42bb6a:	mov    rdi,r12
  42bb6d:	vzeroupper 
  42bb70:	call   4032f0 <strchr@plt>
  42bb75:	test   rax,rax
  42bb78:	je     42bf68 <isspace@plt+0x28658>
  42bb7e:	add    rax,0x1
  42bb82:	mov    DWORD PTR [rsp+0x1c],0x0
  42bb8a:	jmp    42bc07 <isspace@plt+0x282f7>
  42bb8c:	xor    eax,eax
  42bb8e:	vmovdqa ymm1,YMMWORD PTR [rip+0x604a]        # 431be0 <isspace@plt+0x2e2d0>
  42bb96:	cmp    QWORD PTR [rsp+0x40],0x0
  42bb9c:	jne    42bdd4 <isspace@plt+0x284c4>
  42bba2:	jmp    42be6e <isspace@plt+0x2855e>
  42bba7:	nop    WORD PTR [rax+rax*1+0x0]
  42bbb0:	mov    rdi,QWORD PTR [rsp+0x58]
  42bbb5:	mov    rsi,r12
  42bbb8:	mov    rdx,rbx
  42bbbb:	mov    r8d,r14d
  42bbbe:	vzeroupper 
  42bbc1:	call   403640 <regexec@plt>
  42bbc6:	test   eax,eax
  42bbc8:	je     42bc20 <isspace@plt+0x28310>
  42bbca:	xor    esi,esi
  42bbcc:	mov    rdi,r12
  42bbcf:	mov    rdx,r13
  42bbd2:	call   403410 <memchr@plt>
  42bbd7:	test   rax,rax
  42bbda:	je     42bf32 <isspace@plt+0x28622>
  42bbe0:	mov    rcx,rax
  42bbe3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bbed:	nop    DWORD PTR [rax]
  42bbf0:	lea    rax,[rcx+0x1]
  42bbf4:	cmp    r15,rcx
  42bbf7:	je     42bc03 <isspace@plt+0x282f3>
  42bbf9:	movzx  edx,BYTE PTR [rcx]
  42bbfc:	mov    rcx,rax
  42bbff:	test   dl,dl
  42bc01:	je     42bbf0 <isspace@plt+0x282e0>
  42bc03:	add    rax,0xffffffffffffffff
  42bc07:	lea    rcx,[rsp+0xd0]
  42bc0f:	jmp    42befa <isspace@plt+0x285ea>
  42bc14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bc1e:	xchg   ax,ax
  42bc20:	test   rbx,rbx
  42bc23:	lea    rcx,[rsp+0xd0]
  42bc2b:	vpxor  xmm8,xmm8,xmm8
  42bc30:	vmovdqa xmm9,XMMWORD PTR [rip+0x69e8]        # 432620 <isspace@plt+0x2ed10>
  42bc38:	vpcmpeqd xmm10,xmm10,xmm10
  42bc3d:	vmovdqu ymm11,YMMWORD PTR [rsp+0xa0]
  42bc46:	vmovdqu ymm12,YMMWORD PTR [rsp+0x80]
  42bc4f:	vmovdqu ymm13,YMMWORD PTR [rsp+0x60]
  42bc55:	je     42bed8 <isspace@plt+0x285c8>
  42bc5b:	cmp    rbx,0x3
  42bc5f:	ja     42bc68 <isspace@plt+0x28358>
  42bc61:	xor    eax,eax
  42bc63:	jmp    42be7b <isspace@plt+0x2856b>
  42bc68:	vmovq  xmm0,rbp
  42bc6d:	vpbroadcastq ymm0,xmm0
  42bc72:	cmp    QWORD PTR [rsp+0x48],0x0
  42bc78:	je     42bb8c <isspace@plt+0x2827c>
  42bc7e:	mov    rsi,QWORD PTR [rsp+0x28]
  42bc83:	mov    rdx,QWORD PTR [rsp+0x30]
  42bc88:	xor    eax,eax
  42bc8a:	vmovdqa ymm1,YMMWORD PTR [rip+0x5f4e]        # 431be0 <isspace@plt+0x2e2d0>
  42bc92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bc9c:	nop    DWORD PTR [rax+0x0]
  42bca0:	vpsllq ymm2,ymm1,0x3
  42bca5:	vmovq  xmm3,rcx
  42bcaa:	vpbroadcastq ymm3,xmm3
  42bcaf:	vpaddq ymm2,ymm3,ymm2
  42bcb3:	vpcmpeqd xmm3,xmm3,xmm3
  42bcb7:	vpgatherqd xmm4,DWORD PTR [ymm2*1+0x0],xmm3
  42bcc1:	vpcmpeqd xmm3,xmm4,xmm10
  42bcc6:	vpmovsxdq ymm3,xmm3
  42bccb:	vpmovsxdq ymm4,xmm4
  42bcd0:	vpaddq ymm4,ymm0,ymm4
  42bcd4:	vpor   ymm5,ymm2,ymm11
  42bcd9:	vpcmpeqd xmm6,xmm6,xmm6
  42bcdd:	vpgatherqd xmm7,DWORD PTR [ymm5*1+0x0],xmm6
  42bce7:	vpor   ymm3,ymm3,ymm4
  42bceb:	vpcmpeqd xmm4,xmm7,xmm10
  42bcf0:	vpmovsxdq ymm4,xmm4
  42bcf5:	vpmovsxdq ymm5,xmm7
  42bcfa:	vpaddq ymm5,ymm0,ymm5
  42bcfe:	vpor   ymm4,ymm4,ymm5
  42bd02:	vpermq ymm5,ymm3,0xd4
  42bd08:	vpermq ymm6,ymm4,0x60
  42bd0e:	vpblendd ymm5,ymm5,ymm6,0xcc
  42bd14:	vpermq ymm3,ymm3,0xf6
  42bd1a:	vpermq ymm4,ymm4,0xe8
  42bd20:	vpblendd ymm3,ymm3,ymm4,0xcc
  42bd26:	vmovdqu YMMWORD PTR [rdx-0x20],ymm3
  42bd2b:	vmovdqu YMMWORD PTR [rdx-0x40],ymm5
  42bd30:	vpaddq ymm2,ymm2,ymm12
  42bd35:	vpcmpeqd xmm3,xmm3,xmm3
  42bd39:	vpgatherqd xmm4,DWORD PTR [ymm2*1+0x0],xmm3
  42bd43:	vpcmpeqd xmm3,xmm4,xmm10
  42bd48:	vpmovsxdq ymm3,xmm3
  42bd4d:	vpmovsxdq ymm4,xmm4
  42bd52:	vpaddq ymm4,ymm0,ymm4
  42bd56:	vpor   ymm3,ymm3,ymm4
  42bd5a:	vpor   ymm2,ymm2,ymm11
  42bd5f:	vpcmpeqd xmm4,xmm4,xmm4
  42bd63:	vpgatherqd xmm5,DWORD PTR [ymm2*1+0x0],xmm4
  42bd6d:	vpcmpeqd xmm2,xmm5,xmm10
  42bd72:	vpmovsxdq ymm2,xmm2
  42bd77:	vpmovsxdq ymm4,xmm5
  42bd7c:	vpaddq ymm4,ymm0,ymm4
  42bd80:	vpor   ymm2,ymm2,ymm4
  42bd84:	vpermq ymm4,ymm2,0x60
  42bd8a:	vpermq ymm5,ymm3,0xd4
  42bd90:	vpblendd ymm4,ymm5,ymm4,0xcc
  42bd96:	vpermq ymm2,ymm2,0xe8
  42bd9c:	vpermq ymm3,ymm3,0xf6
  42bda2:	vpblendd ymm2,ymm3,ymm2,0xcc
  42bda8:	vmovdqu YMMWORD PTR [rdx+0x20],ymm2
  42bdad:	vmovdqu YMMWORD PTR [rdx],ymm4
  42bdb1:	add    rax,0x8
  42bdb5:	vpaddq ymm1,ymm1,ymm13
  42bdba:	sub    rdx,0xffffffffffffff80
  42bdbe:	add    rsi,0x2
  42bdc2:	jne    42bca0 <isspace@plt+0x28390>
  42bdc8:	cmp    QWORD PTR [rsp+0x40],0x0
  42bdce:	je     42be6e <isspace@plt+0x2855e>
  42bdd4:	vpsllq ymm1,ymm1,0x3
  42bdd9:	vmovq  xmm2,rcx
  42bdde:	vpbroadcastq ymm2,xmm2
  42bde3:	vpaddq ymm1,ymm2,ymm1
  42bde7:	vpcmpeqd xmm2,xmm2,xmm2
  42bdeb:	vpgatherqd xmm3,DWORD PTR [ymm1*1+0x0],xmm2
  42bdf5:	vpor   ymm1,ymm1,ymm11
  42bdfa:	vpcmpeqd xmm2,xmm2,xmm2
  42bdfe:	vpgatherqd xmm4,DWORD PTR [ymm1*1+0x0],xmm2
  42be08:	vpcmpeqd xmm1,xmm3,xmm10
  42be0d:	vpmovsxdq ymm1,xmm1
  42be12:	vpmovsxdq ymm2,xmm3
  42be17:	vpaddq ymm2,ymm0,ymm2
  42be1b:	vpor   ymm1,ymm1,ymm2
  42be1f:	vpcmpeqd xmm2,xmm4,xmm10
  42be24:	vpmovsxdq ymm2,xmm2
  42be29:	vpmovsxdq ymm3,xmm4
  42be2e:	vpaddq ymm0,ymm0,ymm3
  42be32:	vpor   ymm0,ymm2,ymm0
  42be36:	shl    rax,0x4
  42be3a:	vpermq ymm2,ymm1,0xd4
  42be40:	vpermq ymm3,ymm0,0x60
  42be46:	vpblendd ymm2,ymm2,ymm3,0xcc
  42be4c:	vpermq ymm1,ymm1,0xf6
  42be52:	vpermq ymm0,ymm0,0xe8
  42be58:	vpblendd ymm0,ymm1,ymm0,0xcc
  42be5e:	mov    rdx,QWORD PTR [rsp+0x20]
  42be63:	vmovdqu YMMWORD PTR [rdx+rax*1+0x20],ymm0
  42be69:	vmovdqu YMMWORD PTR [rdx+rax*1],ymm2
  42be6e:	mov    rdx,QWORD PTR [rsp+0x38]
  42be73:	mov    rax,rdx
  42be76:	cmp    rdx,rbx
  42be79:	je     42bed8 <isspace@plt+0x285c8>
  42be7b:	vmovq  xmm0,rbp
  42be80:	vpbroadcastq xmm0,xmm0
  42be85:	mov    rdx,rax
  42be88:	shl    rdx,0x4
  42be8c:	add    rdx,QWORD PTR [rsp+0x20]
  42be91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42be9b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bea0:	vpmovzxdq xmm1,QWORD PTR [rsp+rax*8+0xd0]
  42beaa:	vpblendd xmm2,xmm1,xmm8,0xa
  42beb0:	vpcmpeqq xmm2,xmm2,xmm9
  42beb5:	vpshufd xmm1,xmm1,0xe8
  42beba:	vpmovsxdq xmm1,xmm1
  42bebf:	vpaddq xmm1,xmm0,xmm1
  42bec3:	vpor   xmm1,xmm2,xmm1
  42bec7:	vmovdqu XMMWORD PTR [rdx],xmm1
  42becb:	add    rax,0x1
  42becf:	add    rdx,0x10
  42bed3:	cmp    rbx,rax
  42bed6:	jne    42bea0 <isspace@plt+0x28590>
  42bed8:	movsxd rax,DWORD PTR [rsp+0xd4]
  42bee0:	mov    edx,DWORD PTR [rsp+0xd0]
  42bee7:	or     edx,eax
  42bee9:	je     42bb65 <isspace@plt+0x28255>
  42beef:	add    rax,r12
  42bef2:	mov    DWORD PTR [rsp+0x1c],0x0
  42befa:	mov    rsi,rax
  42befd:	sub    rsi,r12
  42bf00:	mov    edx,r14d
  42bf03:	and    edx,0xfffffffe
  42bf06:	or     r14d,0x1
  42bf0a:	cmp    BYTE PTR [rax-0x1],0xa
  42bf0e:	cmove  r14d,edx
  42bf12:	add    rbp,rsi
  42bf15:	mov    r12,rax
  42bf18:	sub    r13,rsi
  42bf1b:	jne    42bbb0 <isspace@plt+0x282a0>
  42bf21:	jmp    42bf32 <isspace@plt+0x28622>
  42bf23:	mov    eax,0x1
  42bf28:	jmp    42bf43 <isspace@plt+0x28633>
  42bf2a:	mov    DWORD PTR [rsp+0x1c],0x1
  42bf32:	mov    rdi,QWORD PTR [rsp+0x50]
  42bf37:	vzeroupper 
  42bf3a:	call   4030d0 <free@plt>
  42bf3f:	mov    eax,DWORD PTR [rsp+0x1c]
  42bf43:	mov    rcx,QWORD PTR fs:0x28
  42bf4c:	cmp    rcx,QWORD PTR [rsp+0x120]
  42bf54:	jne    42bf72 <isspace@plt+0x28662>
  42bf56:	add    rsp,0x128
  42bf5d:	pop    rbx
  42bf5e:	pop    r12
  42bf60:	pop    r13
  42bf62:	pop    r14
  42bf64:	pop    r15
  42bf66:	pop    rbp
  42bf67:	ret    
  42bf68:	mov    DWORD PTR [rsp+0x1c],0x0
  42bf70:	jmp    42bf32 <isspace@plt+0x28622>
  42bf72:	call   403280 <__stack_chk_fail@plt>
  42bf77:	nop    WORD PTR [rax+rax*1+0x0]
  42bf80:	endbr64 
  42bf84:	push   r15
  42bf86:	lea    r15,[rip+0x114e3]        # 43d470 <isspace@plt+0x39b60>
  42bf8d:	push   r14
  42bf8f:	mov    r14,rdx
  42bf92:	push   r13
  42bf94:	mov    r13,rsi
  42bf97:	push   r12
  42bf99:	mov    r12d,edi
  42bf9c:	push   rbp
  42bf9d:	lea    rbp,[rip+0x114d4]        # 43d478 <isspace@plt+0x39b68>
  42bfa4:	push   rbx
  42bfa5:	sub    rbp,r15
  42bfa8:	sub    rsp,0x8
  42bfac:	call   403000 <start_color@plt-0x30>
  42bfb1:	sar    rbp,0x3
  42bfb5:	je     42bfd6 <isspace@plt+0x286c6>
  42bfb7:	xor    ebx,ebx
  42bfb9:	nop    DWORD PTR [rax+0x0]
  42bfc0:	mov    rdx,r14
  42bfc3:	mov    rsi,r13
  42bfc6:	mov    edi,r12d
  42bfc9:	call   QWORD PTR [r15+rbx*8]
  42bfcd:	add    rbx,0x1
  42bfd1:	cmp    rbp,rbx
  42bfd4:	jne    42bfc0 <isspace@plt+0x286b0>
  42bfd6:	add    rsp,0x8
  42bfda:	pop    rbx
  42bfdb:	pop    rbp
  42bfdc:	pop    r12
  42bfde:	pop    r13
  42bfe0:	pop    r14
  42bfe2:	pop    r15
  42bfe4:	ret    
  42bfe5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42bff0:	endbr64 
  42bff4:	ret    

Disassembly of section .fini:

000000000042bff8 <.fini>:
  42bff8:	endbr64 
  42bffc:	sub    rsp,0x8
  42c000:	add    rsp,0x8
  42c004:	ret    
