
../repos/Snaipe-Mimick-1dc4659/sample/strdup/strdup_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x5fd9]        # 407fe8 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <free@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x5fe2]        # 408008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0x5fe4]        # 408010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <free@plt>:
  402030:	jmp    QWORD PTR [rip+0x5fe2]        # 408018 <free@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <free@plt-0x10>

0000000000402040 <abort@plt>:
  402040:	jmp    QWORD PTR [rip+0x5fda]        # 408020 <abort@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <free@plt-0x10>

0000000000402050 <__errno_location@plt>:
  402050:	jmp    QWORD PTR [rip+0x5fd2]        # 408028 <__errno_location@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <free@plt-0x10>

0000000000402060 <strncmp@plt>:
  402060:	jmp    QWORD PTR [rip+0x5fca]        # 408030 <strncmp@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <free@plt-0x10>

0000000000402070 <strlen@plt>:
  402070:	jmp    QWORD PTR [rip+0x5fc2]        # 408038 <strlen@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <free@plt-0x10>

0000000000402080 <mmap@plt>:
  402080:	jmp    QWORD PTR [rip+0x5fba]        # 408040 <mmap@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <free@plt-0x10>

0000000000402090 <strchr@plt>:
  402090:	jmp    QWORD PTR [rip+0x5fb2]        # 408048 <strchr@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <free@plt-0x10>

00000000004020a0 <snprintf@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x5faa]        # 408050 <snprintf@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <free@plt-0x10>

00000000004020b0 <memset@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x5fa2]        # 408058 <memset@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <free@plt-0x10>

00000000004020c0 <__tls_get_addr@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x5f9a]        # 408060 <__tls_get_addr@GLIBC_2.3>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <free@plt-0x10>

00000000004020d0 <strcmp@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x5f92]        # 408068 <strcmp@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <free@plt-0x10>

00000000004020e0 <fprintf@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x5f8a]        # 408070 <fprintf@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <free@plt-0x10>

00000000004020f0 <memcpy@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x5f82]        # 408078 <memcpy@GLIBC_2.14>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <free@plt-0x10>

0000000000402100 <realloc@plt>:
  402100:	jmp    QWORD PTR [rip+0x5f7a]        # 408080 <realloc@GLIBC_2.2.5>
  402106:	push   0xd
  40210b:	jmp    402020 <free@plt-0x10>

0000000000402110 <munmap@plt>:
  402110:	jmp    QWORD PTR [rip+0x5f72]        # 408088 <munmap@GLIBC_2.2.5>
  402116:	push   0xe
  40211b:	jmp    402020 <free@plt-0x10>

0000000000402120 <my_strdup@plt>:
  402120:	jmp    QWORD PTR [rip+0x5f6a]        # 408090 <my_strdup>
  402126:	push   0xf
  40212b:	jmp    402020 <free@plt-0x10>

0000000000402130 <mprotect@plt>:
  402130:	jmp    QWORD PTR [rip+0x5f62]        # 408098 <mprotect@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <free@plt-0x10>

0000000000402140 <strstr@plt>:
  402140:	jmp    QWORD PTR [rip+0x5f5a]        # 4080a0 <strstr@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <free@plt-0x10>

Disassembly of section .plt.got:

0000000000402150 <malloc@plt>:
  402150:	jmp    QWORD PTR [rip+0x5e9a]        # 407ff0 <malloc@GLIBC_2.2.5>
  402156:	xchg   ax,ax

Disassembly of section .text:

0000000000402160 <_start@@Base>:
  402160:	endbr64 
  402164:	xor    ebp,ebp
  402166:	mov    r9,rdx
  402169:	pop    rsi
  40216a:	mov    rdx,rsp
  40216d:	and    rsp,0xfffffffffffffff0
  402171:	push   rax
  402172:	push   rsp
  402173:	mov    r8,0x4043c0
  40217a:	mov    rcx,0x404350
  402181:	mov    rdi,0x402540
  402188:	call   QWORD PTR [rip+0x5e52]        # 407fe0 <__libc_start_main@GLIBC_2.2.5>
  40218e:	hlt    
  40218f:	nop
  402190:	endbr64 
  402194:	ret    
  402195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40219f:	nop
  4021a0:	mov    eax,0x4080c8
  4021a5:	cmp    rax,0x4080c8
  4021ab:	je     4021c0 <_start@@Base+0x60>
  4021ad:	mov    eax,0x0
  4021b2:	test   rax,rax
  4021b5:	je     4021c0 <_start@@Base+0x60>
  4021b7:	mov    edi,0x4080c8
  4021bc:	jmp    rax
  4021be:	xchg   ax,ax
  4021c0:	ret    
  4021c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	mov    esi,0x4080c8
  4021d5:	sub    rsi,0x4080c8
  4021dc:	mov    rax,rsi
  4021df:	shr    rsi,0x3f
  4021e3:	sar    rax,0x3
  4021e7:	add    rsi,rax
  4021ea:	sar    rsi,1
  4021ed:	je     402200 <_start@@Base+0xa0>
  4021ef:	mov    eax,0x0
  4021f4:	test   rax,rax
  4021f7:	je     402200 <_start@@Base+0xa0>
  4021f9:	mov    edi,0x4080c8
  4021fe:	jmp    rax
  402200:	ret    
  402201:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40220c:	nop    DWORD PTR [rax+0x0]
  402210:	endbr64 
  402214:	cmp    BYTE PTR [rip+0x5ead],0x0        # 4080c8 <__bss_start@@Base>
  40221b:	jne    402230 <_start@@Base+0xd0>
  40221d:	push   rbp
  40221e:	mov    rbp,rsp
  402221:	call   4021a0 <_start@@Base+0x40>
  402226:	mov    BYTE PTR [rip+0x5e9b],0x1        # 4080c8 <__bss_start@@Base>
  40222d:	pop    rbp
  40222e:	ret    
  40222f:	nop
  402230:	ret    
  402231:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40223c:	nop    DWORD PTR [rax+0x0]
  402240:	endbr64 
  402244:	jmp    4021d0 <_start@@Base+0x70>
  402246:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402250 <test_simple_case@@Base>:
  402250:	push   rbp
  402251:	mov    rbp,rsp
  402254:	sub    rsp,0xa0
  40225b:	lea    rdi,[rip+0x2da2]        # 405004 <_IO_stdin_used@@Base+0x4>
  402262:	call   402410 <test_simple_case@@Base+0x1c0>
  402267:	xor    edi,edi
  402269:	mov    QWORD PTR [rbp-0x70],rax
  40226d:	call   402c80 <mmk_matcher_init@@Base>
  402272:	lea    rax,[rbp-0x6]
  402276:	xor    esi,esi
  402278:	mov    edi,0x20
  40227d:	mov    edx,edi
  40227f:	lea    rcx,[rbp-0x28]
  402283:	mov    r8,rcx
  402286:	mov    rdi,r8
  402289:	mov    QWORD PTR [rbp-0x78],rax
  40228d:	mov    QWORD PTR [rbp-0x80],rcx
  402291:	call   4020b0 <memset@plt>
  402296:	mov    rax,QWORD PTR [rbp-0x78]
  40229a:	mov    QWORD PTR [rbp-0x30],rax
  40229e:	lea    rcx,[rbp-0x30]
  4022a2:	mov    QWORD PTR [rbp-0x20],rcx
  4022a6:	mov    rdi,QWORD PTR [rbp-0x80]
  4022aa:	call   404200 <mmk_when_init@@Base>
  4022af:	mov    esi,0x6
  4022b4:	mov    edi,esi
  4022b6:	call   402150 <malloc@plt>
  4022bb:	mov    QWORD PTR [rbp-0x88],rax
  4022c2:	call   402cc0 <mmk_matcher_term@@Base>
  4022c7:	lea    rdi,[rip+0x2d48]        # 405016 <_IO_stdin_used@@Base+0x16>
  4022ce:	call   402120 <my_strdup@plt>
  4022d3:	mov    QWORD PTR [rbp-0x38],rax
  4022d7:	mov    edi,0x1
  4022dc:	call   402c80 <mmk_matcher_init@@Base>
  4022e1:	xor    esi,esi
  4022e3:	mov    edi,0x8000000a
  4022e8:	call   402d00 <mmk_matcher_add@@Base>
  4022ed:	mov    esi,0x6
  4022f2:	mov    edi,esi
  4022f4:	call   402150 <malloc@plt>
  4022f9:	mov    QWORD PTR [rbp-0x90],rax
  402300:	call   402cc0 <mmk_matcher_term@@Base>
  402305:	mov    DWORD PTR [rbp-0x68],0x1
  40230c:	mov    DWORD PTR [rbp-0x64],0x0
  402313:	mov    QWORD PTR [rbp-0x60],0x0
  40231b:	mov    QWORD PTR [rbp-0x58],0x0
  402323:	mov    QWORD PTR [rbp-0x50],0x1
  40232b:	mov    QWORD PTR [rbp-0x48],0x0
  402333:	lea    rdi,[rbp-0x68]
  402337:	call   403a60 <mmk_verify_times@@Base>
  40233c:	mov    DWORD PTR [rbp-0x3c],eax
  40233f:	cmp    DWORD PTR [rbp-0x3c],0x0
  402343:	jne    40237f <test_simple_case@@Base+0x12f>
  402349:	mov    rax,QWORD PTR [rip+0x5ca8]        # 407ff8 <stderr@GLIBC_2.2.5>
  402350:	mov    rdi,QWORD PTR [rax]
  402353:	lea    rsi,[rip+0x2cc2]        # 40501c <_IO_stdin_used@@Base+0x1c>
  40235a:	lea    rdx,[rip+0x2cd8]        # 405039 <_IO_stdin_used@@Base+0x39>
  402361:	mov    ecx,0x17
  402366:	lea    r8,[rip+0x2d28]        # 405095 <_IO_stdin_used@@Base+0x95>
  40236d:	mov    al,0x0
  40236f:	call   4020e0 <fprintf@plt>
  402374:	mov    DWORD PTR [rbp-0x94],eax
  40237a:	call   402040 <abort@plt>
  40237f:	jmp    402384 <test_simple_case@@Base+0x134>
  402384:	jmp    402389 <test_simple_case@@Base+0x139>
  402389:	lea    rax,[rbp-0x6]
  40238d:	mov    rcx,QWORD PTR [rbp-0x38]
  402391:	cmp    rcx,rax
  402394:	jne    4023b3 <test_simple_case@@Base+0x163>
  40239a:	lea    rsi,[rbp-0x6]
  40239e:	lea    rdi,[rip+0x5d13]        # 4080b8 <__data_start@@Base+0x10>
  4023a5:	call   4020d0 <strcmp@plt>
  4023aa:	cmp    eax,0x0
  4023ad:	je     4023e9 <test_simple_case@@Base+0x199>
  4023b3:	mov    rax,QWORD PTR [rip+0x5c3e]        # 407ff8 <stderr@GLIBC_2.2.5>
  4023ba:	mov    rdi,QWORD PTR [rax]
  4023bd:	lea    rsi,[rip+0x2c58]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4023c4:	lea    rdx,[rip+0x2c6e]        # 405039 <_IO_stdin_used@@Base+0x39>
  4023cb:	mov    ecx,0x18
  4023d0:	lea    r8,[rip+0x2cc3]        # 40509a <_IO_stdin_used@@Base+0x9a>
  4023d7:	mov    al,0x0
  4023d9:	call   4020e0 <fprintf@plt>
  4023de:	mov    DWORD PTR [rbp-0x98],eax
  4023e4:	call   402040 <abort@plt>
  4023e9:	jmp    4023ee <test_simple_case@@Base+0x19e>
  4023ee:	mov    rax,QWORD PTR [rip+0x5bfb]        # 407ff0 <malloc@GLIBC_2.2.5>
  4023f5:	mov    rdi,rax
  4023f8:	call   402c60 <mmk_reset@@Base>
  4023fd:	add    rsp,0xa0
  402404:	pop    rbp
  402405:	ret    
  402406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402410:	push   rbp
  402411:	mov    rbp,rsp
  402414:	sub    rsp,0x10
  402418:	lea    rax,[rip+0x151]        # 402570 <main@@Base+0x30>
  40241f:	mov    QWORD PTR [rbp-0x8],rdi
  402423:	mov    rdi,QWORD PTR [rbp-0x8]
  402427:	mov    rsi,rax
  40242a:	call   402d70 <mmk_mock_create_internal@@Base>
  40242f:	add    rsp,0x10
  402433:	pop    rbp
  402434:	ret    
  402435:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40243f:	nop

0000000000402440 <test_error_case@@Base>:
  402440:	push   rbp
  402441:	mov    rbp,rsp
  402444:	sub    rsp,0x60
  402448:	lea    rdi,[rip+0x2bb5]        # 405004 <_IO_stdin_used@@Base+0x4>
  40244f:	call   402410 <test_simple_case@@Base+0x1c0>
  402454:	xor    edi,edi
  402456:	mov    QWORD PTR [rbp-0x8],rax
  40245a:	call   402c80 <mmk_matcher_init@@Base>
  40245f:	mov    DWORD PTR [rbp-0x28],0x0
  402466:	mov    DWORD PTR [rbp-0x24],0xc
  40246d:	mov    QWORD PTR [rbp-0x30],0x0
  402475:	lea    rax,[rbp-0x30]
  402479:	mov    QWORD PTR [rbp-0x20],rax
  40247d:	mov    QWORD PTR [rbp-0x18],0x0
  402485:	mov    QWORD PTR [rbp-0x10],0x0
  40248d:	lea    rdi,[rbp-0x28]
  402491:	call   404200 <mmk_when_init@@Base>
  402496:	xor    edi,edi
  402498:	mov    rax,QWORD PTR [rbp-0x8]
  40249c:	mov    esi,0x1
  4024a1:	mov    QWORD PTR [rbp-0x48],rax
  4024a5:	call   402d00 <mmk_matcher_add@@Base>
  4024aa:	mov    QWORD PTR [rbp-0x38],0x0
  4024b2:	mov    rdi,QWORD PTR [rbp-0x38]
  4024b6:	mov    rax,QWORD PTR [rbp-0x48]
  4024ba:	call   rax
  4024bc:	mov    QWORD PTR [rbp-0x50],rax
  4024c0:	call   402cc0 <mmk_matcher_term@@Base>
  4024c5:	lea    rdi,[rip+0x2bee]        # 4050ba <_IO_stdin_used@@Base+0xba>
  4024cc:	call   402120 <my_strdup@plt>
  4024d1:	mov    QWORD PTR [rbp-0x40],rax
  4024d5:	cmp    QWORD PTR [rbp-0x40],0x0
  4024da:	jne    4024ee <test_error_case@@Base+0xae>
  4024e0:	call   402050 <__errno_location@plt>
  4024e5:	cmp    DWORD PTR [rax],0xc
  4024e8:	je     402521 <test_error_case@@Base+0xe1>
  4024ee:	mov    rax,QWORD PTR [rip+0x5b03]        # 407ff8 <stderr@GLIBC_2.2.5>
  4024f5:	mov    rdi,QWORD PTR [rax]
  4024f8:	lea    rsi,[rip+0x2b1d]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4024ff:	lea    rdx,[rip+0x2b33]        # 405039 <_IO_stdin_used@@Base+0x39>
  402506:	mov    ecx,0x27
  40250b:	lea    r8,[rip+0x2bac]        # 4050be <_IO_stdin_used@@Base+0xbe>
  402512:	mov    al,0x0
  402514:	call   4020e0 <fprintf@plt>
  402519:	mov    DWORD PTR [rbp-0x54],eax
  40251c:	call   402040 <abort@plt>
  402521:	jmp    402526 <test_error_case@@Base+0xe6>
  402526:	mov    rax,QWORD PTR [rbp-0x8]
  40252a:	mov    rdi,rax
  40252d:	call   402c60 <mmk_reset@@Base>
  402532:	add    rsp,0x60
  402536:	pop    rbp
  402537:	ret    
  402538:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402540 <main@@Base>:
  402540:	push   rbp
  402541:	mov    rbp,rsp
  402544:	sub    rsp,0x10
  402548:	mov    DWORD PTR [rbp-0x4],0x0
  40254f:	call   402250 <test_simple_case@@Base>
  402554:	call   402440 <test_error_case@@Base>
  402559:	xor    eax,eax
  40255b:	add    rsp,0x10
  40255f:	pop    rbp
  402560:	ret    
  402561:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40256b:	nop    DWORD PTR [rax+rax*1+0x0]
  402570:	push   rbp
  402571:	mov    rbp,rsp
  402574:	sub    rsp,0xd0
  40257b:	mov    QWORD PTR [rbp-0x10],rdi
  40257f:	jmp    402584 <main@@Base+0x44>
  402584:	call   402ce0 <mmk_matcher_ctx@@Base>
  402589:	mov    QWORD PTR [rbp-0x18],rax
  40258d:	cmp    QWORD PTR [rbp-0x18],0x0
  402592:	je     40282e <main@@Base+0x2ee>
  402598:	call   403830 <mmk_ctx@@Base>
  40259d:	mov    rdi,rax
  4025a0:	call   403690 <mmk_stub_context@@Base>
  4025a5:	mov    QWORD PTR [rbp-0x20],rax
  4025a9:	mov    rax,QWORD PTR [rbp-0x18]
  4025ad:	cmp    DWORD PTR [rax],0x0
  4025b0:	jne    402622 <main@@Base+0xe2>
  4025b6:	mov    eax,0x50
  4025bb:	mov    edi,eax
  4025bd:	call   4040d0 <mmk_malloc@@Base>
  4025c2:	mov    QWORD PTR [rbp-0x28],rax
  4025c6:	mov    rax,QWORD PTR [rbp-0x28]
  4025ca:	mov    QWORD PTR [rbp-0xc0],rax
  4025d1:	call   404220 <mmk_when_get_result@@Base>
  4025d6:	mov    rdi,QWORD PTR [rax]
  4025d9:	mov    rcx,QWORD PTR [rbp-0xc0]
  4025e0:	mov    QWORD PTR [rcx+0x10],rdi
  4025e4:	mov    rdi,QWORD PTR [rax+0x8]
  4025e8:	mov    QWORD PTR [rcx+0x18],rdi
  4025ec:	mov    rdi,QWORD PTR [rax+0x10]
  4025f0:	mov    QWORD PTR [rcx+0x20],rdi
  4025f4:	mov    rax,QWORD PTR [rax+0x18]
  4025f8:	mov    QWORD PTR [rcx+0x28],rax
  4025fc:	mov    rax,QWORD PTR [rbp-0x10]
  402600:	mov    rdi,QWORD PTR [rbp-0x28]
  402604:	mov    QWORD PTR [rdi+0x48],rax
  402608:	jmp    40260d <main@@Base+0xcd>
  40260d:	mov    rdi,QWORD PTR [rbp-0x20]
  402611:	mov    rax,QWORD PTR [rbp-0x28]
  402615:	mov    rsi,rax
  402618:	call   404240 <mmk_when_impl@@Base>
  40261d:	jmp    402814 <main@@Base+0x2d4>
  402622:	mov    rax,QWORD PTR [rbp-0x18]
  402626:	cmp    DWORD PTR [rax],0x1
  402629:	jne    40280f <main@@Base+0x2cf>
  40262f:	mov    QWORD PTR [rbp-0x30],0x0
  402637:	mov    rdi,QWORD PTR [rbp-0x20]
  40263b:	call   402f60 <mmk_mock_params_begin@@Base>
  402640:	mov    QWORD PTR [rbp-0x38],rax
  402644:	cmp    QWORD PTR [rbp-0x38],0x0
  402649:	je     4027ce <main@@Base+0x28e>
  40264f:	mov    rax,QWORD PTR [rbp-0x18]
  402653:	mov    QWORD PTR [rbp-0x40],rax
  402657:	mov    rax,QWORD PTR [rbp-0x40]
  40265b:	cmp    QWORD PTR [rax+0x10],0x0
  402660:	je     402769 <main@@Base+0x229>
  402666:	mov    rax,QWORD PTR [rbp-0x40]
  40266a:	mov    rax,QWORD PTR [rax+0x10]
  40266e:	mov    QWORD PTR [rbp-0x40],rax
  402672:	mov    rax,QWORD PTR [rbp-0x40]
  402676:	cmp    DWORD PTR [rax],0x0
  402679:	jne    402684 <main@@Base+0x144>
  40267f:	jmp    402764 <main@@Base+0x224>
  402684:	mov    rax,QWORD PTR [rbp-0x40]
  402688:	mov    ecx,DWORD PTR [rax]
  40268a:	and    ecx,0x80000000
  402690:	cmp    ecx,0x0
  402693:	je     40271f <main@@Base+0x1df>
  402699:	mov    eax,0x8
  40269e:	mov    edx,eax
  4026a0:	mov    rcx,QWORD PTR [rbp-0x38]
  4026a4:	add    rcx,0x18
  4026a8:	lea    rsi,[rbp-0x10]
  4026ac:	mov    rdi,rcx
  4026af:	call   403c90 <mmk_memcmp@@Base>
  4026b4:	mov    DWORD PTR [rbp-0x44],eax
  4026b7:	cmp    DWORD PTR [rbp-0x44],0x0
  4026bb:	jne    4026d8 <main@@Base+0x198>
  4026c1:	mov    rax,QWORD PTR [rbp-0x40]
  4026c5:	mov    ecx,DWORD PTR [rax]
  4026c7:	and    ecx,0x2
  4026ca:	cmp    ecx,0x0
  4026cd:	jne    4026d8 <main@@Base+0x198>
  4026d3:	jmp    4027b0 <main@@Base+0x270>
  4026d8:	cmp    DWORD PTR [rbp-0x44],0x0
  4026dc:	jge    4026f9 <main@@Base+0x1b9>
  4026e2:	mov    rax,QWORD PTR [rbp-0x40]
  4026e6:	mov    ecx,DWORD PTR [rax]
  4026e8:	and    ecx,0x4
  4026eb:	cmp    ecx,0x0
  4026ee:	jne    4026f9 <main@@Base+0x1b9>
  4026f4:	jmp    4027b0 <main@@Base+0x270>
  4026f9:	cmp    DWORD PTR [rbp-0x44],0x0
  4026fd:	jle    40271a <main@@Base+0x1da>
  402703:	mov    rax,QWORD PTR [rbp-0x40]
  402707:	mov    ecx,DWORD PTR [rax]
  402709:	and    ecx,0x8
  40270c:	cmp    ecx,0x0
  40270f:	jne    40271a <main@@Base+0x1da>
  402715:	jmp    4027b0 <main@@Base+0x270>
  40271a:	jmp    40275f <main@@Base+0x21f>
  40271f:	mov    rax,QWORD PTR [rbp-0x40]
  402723:	cmp    DWORD PTR [rax],0x1
  402726:	jne    40275a <main@@Base+0x21a>
  40272c:	mov    rdi,QWORD PTR [rbp-0x40]
  402730:	call   402d60 <mmk_matcher_get_predicate@@Base>
  402735:	mov    QWORD PTR [rbp-0x50],rax
  402739:	mov    rax,QWORD PTR [rbp-0x50]
  40273d:	mov    rdi,QWORD PTR [rbp-0x38]
  402741:	mov    rdi,QWORD PTR [rdi+0x18]
  402745:	call   rax
  402747:	cmp    eax,0x0
  40274a:	jne    402755 <main@@Base+0x215>
  402750:	jmp    4027b0 <main@@Base+0x270>
  402755:	jmp    40275a <main@@Base+0x21a>
  40275a:	jmp    40275f <main@@Base+0x21f>
  40275f:	jmp    402764 <main@@Base+0x224>
  402764:	jmp    402797 <main@@Base+0x257>
  402769:	mov    eax,0x8
  40276e:	mov    edx,eax
  402770:	mov    rcx,QWORD PTR [rbp-0x38]
  402774:	add    rcx,0x18
  402778:	lea    rsi,[rbp-0x10]
  40277c:	mov    rdi,rcx
  40277f:	call   403c90 <mmk_memcmp@@Base>
  402784:	cmp    eax,0x0
  402787:	je     402792 <main@@Base+0x252>
  40278d:	jmp    4027b0 <main@@Base+0x270>
  402792:	jmp    402797 <main@@Base+0x257>
  402797:	jmp    40279c <main@@Base+0x25c>
  40279c:	jmp    4027a1 <main@@Base+0x261>
  4027a1:	mov    rax,QWORD PTR [rbp-0x38]
  4027a5:	mov    rax,QWORD PTR [rax]
  4027a8:	add    rax,QWORD PTR [rbp-0x30]
  4027ac:	mov    QWORD PTR [rbp-0x30],rax
  4027b0:	jmp    4027b5 <main@@Base+0x275>
  4027b5:	mov    rdi,QWORD PTR [rbp-0x20]
  4027b9:	mov    rax,QWORD PTR [rbp-0x38]
  4027bd:	mov    rsi,rax
  4027c0:	call   402f80 <mmk_mock_params_next@@Base>
  4027c5:	mov    QWORD PTR [rbp-0x38],rax
  4027c9:	jmp    402644 <main@@Base+0x104>
  4027ce:	mov    rax,QWORD PTR [rbp-0x18]
  4027d2:	mov    QWORD PTR [rbp-0x58],rax
  4027d6:	cmp    QWORD PTR [rbp-0x58],0x0
  4027db:	je     402806 <main@@Base+0x2c6>
  4027e1:	mov    rax,QWORD PTR [rbp-0x58]
  4027e5:	mov    rax,QWORD PTR [rax+0x10]
  4027e9:	mov    QWORD PTR [rbp-0x60],rax
  4027ed:	mov    rax,QWORD PTR [rbp-0x58]
  4027f1:	mov    rdi,rax
  4027f4:	call   4040f0 <mmk_free@@Base>
  4027f9:	mov    rax,QWORD PTR [rbp-0x60]
  4027fd:	mov    QWORD PTR [rbp-0x58],rax
  402801:	jmp    4027d6 <main@@Base+0x296>
  402806:	mov    rdi,QWORD PTR [rbp-0x30]
  40280a:	call   403a40 <mmk_verify_set_times@@Base>
  40280f:	jmp    402814 <main@@Base+0x2d4>
  402814:	jmp    402819 <main@@Base+0x2d9>
  402819:	jmp    40281e <main@@Base+0x2de>
  40281e:	mov    rax,QWORD PTR [rip+0x58ab]        # 4080d0 <__bss_start@@Base+0x8>
  402825:	mov    QWORD PTR [rbp-0x8],rax
  402829:	jmp    402b9b <main@@Base+0x65b>
  40282e:	mov    QWORD PTR [rbp-0x88],0x0
  402839:	mov    QWORD PTR [rbp-0x80],0x0
  402841:	mov    QWORD PTR [rbp-0x78],0x0
  402849:	mov    rax,QWORD PTR [rbp-0x10]
  40284d:	mov    QWORD PTR [rbp-0x70],rax
  402851:	lea    rax,[rbp-0x88]
  402858:	mov    QWORD PTR [rbp-0x68],rax
  40285c:	jmp    402861 <main@@Base+0x321>
  402861:	mov    eax,0x20
  402866:	mov    esi,eax
  402868:	mov    rcx,QWORD PTR [rbp-0x68]
  40286c:	mov    rdi,rcx
  40286f:	call   403ad0 <mmk_verify_register_call@@Base>
  402874:	call   402fa0 <mmk_mock_get_params@@Base>
  402879:	mov    QWORD PTR [rbp-0x90],rax
  402880:	cmp    QWORD PTR [rbp-0x90],0x0
  402888:	je     402b86 <main@@Base+0x646>
  40288e:	mov    rax,QWORD PTR [rbp-0x90]
  402895:	mov    QWORD PTR [rbp-0x98],rax
  40289c:	mov    rax,QWORD PTR [rbp-0x90]
  4028a3:	mov    rax,QWORD PTR [rax]
  4028a6:	mov    QWORD PTR [rbp-0xa0],rax
  4028ad:	mov    rax,QWORD PTR [rbp-0xa0]
  4028b4:	cmp    QWORD PTR [rax+0x10],0x0
  4028b9:	je     4029e9 <main@@Base+0x4a9>
  4028bf:	mov    rax,QWORD PTR [rbp-0xa0]
  4028c6:	mov    rax,QWORD PTR [rax+0x10]
  4028ca:	mov    QWORD PTR [rbp-0xa0],rax
  4028d1:	mov    rax,QWORD PTR [rbp-0xa0]
  4028d8:	cmp    DWORD PTR [rax],0x0
  4028db:	jne    4028e6 <main@@Base+0x3a6>
  4028e1:	jmp    4029e4 <main@@Base+0x4a4>
  4028e6:	mov    rax,QWORD PTR [rbp-0xa0]
  4028ed:	mov    ecx,DWORD PTR [rax]
  4028ef:	and    ecx,0x80000000
  4028f5:	cmp    ecx,0x0
  4028f8:	je     402997 <main@@Base+0x457>
  4028fe:	mov    eax,0x8
  402903:	mov    edx,eax
  402905:	lea    rcx,[rbp-0x10]
  402909:	mov    rsi,rcx
  40290c:	mov    rdi,rsi
  40290f:	mov    rsi,rcx
  402912:	call   403c90 <mmk_memcmp@@Base>
  402917:	mov    DWORD PTR [rbp-0xa4],eax
  40291d:	cmp    DWORD PTR [rbp-0xa4],0x0
  402924:	jne    402944 <main@@Base+0x404>
  40292a:	mov    rax,QWORD PTR [rbp-0xa0]
  402931:	mov    ecx,DWORD PTR [rax]
  402933:	and    ecx,0x2
  402936:	cmp    ecx,0x0
  402939:	jne    402944 <main@@Base+0x404>
  40293f:	jmp    402b6f <main@@Base+0x62f>
  402944:	cmp    DWORD PTR [rbp-0xa4],0x0
  40294b:	jge    40296b <main@@Base+0x42b>
  402951:	mov    rax,QWORD PTR [rbp-0xa0]
  402958:	mov    ecx,DWORD PTR [rax]
  40295a:	and    ecx,0x4
  40295d:	cmp    ecx,0x0
  402960:	jne    40296b <main@@Base+0x42b>
  402966:	jmp    402b6f <main@@Base+0x62f>
  40296b:	cmp    DWORD PTR [rbp-0xa4],0x0
  402972:	jle    402992 <main@@Base+0x452>
  402978:	mov    rax,QWORD PTR [rbp-0xa0]
  40297f:	mov    ecx,DWORD PTR [rax]
  402981:	and    ecx,0x8
  402984:	cmp    ecx,0x0
  402987:	jne    402992 <main@@Base+0x452>
  40298d:	jmp    402b6f <main@@Base+0x62f>
  402992:	jmp    4029df <main@@Base+0x49f>
  402997:	mov    rax,QWORD PTR [rbp-0xa0]
  40299e:	cmp    DWORD PTR [rax],0x1
  4029a1:	jne    4029da <main@@Base+0x49a>
  4029a7:	mov    rdi,QWORD PTR [rbp-0xa0]
  4029ae:	call   402d60 <mmk_matcher_get_predicate@@Base>
  4029b3:	mov    QWORD PTR [rbp-0xb0],rax
  4029ba:	mov    rax,QWORD PTR [rbp-0xb0]
  4029c1:	mov    rdi,QWORD PTR [rbp-0x10]
  4029c5:	call   rax
  4029c7:	cmp    eax,0x0
  4029ca:	jne    4029d5 <main@@Base+0x495>
  4029d0:	jmp    402b6f <main@@Base+0x62f>
  4029d5:	jmp    4029da <main@@Base+0x49a>
  4029da:	jmp    4029df <main@@Base+0x49f>
  4029df:	jmp    4029e4 <main@@Base+0x4a4>
  4029e4:	jmp    402a1e <main@@Base+0x4de>
  4029e9:	mov    eax,0x8
  4029ee:	mov    edx,eax
  4029f0:	lea    rcx,[rbp-0x10]
  4029f4:	mov    rsi,QWORD PTR [rbp-0x98]
  4029fb:	add    rsi,0x30
  4029ff:	add    rsi,0x18
  402a03:	mov    rdi,rcx
  402a06:	call   403c90 <mmk_memcmp@@Base>
  402a0b:	cmp    eax,0x0
  402a0e:	je     402a19 <main@@Base+0x4d9>
  402a14:	jmp    402b6f <main@@Base+0x62f>
  402a19:	jmp    402a1e <main@@Base+0x4de>
  402a1e:	mov    rax,QWORD PTR [rbp-0x98]
  402a25:	cmp    DWORD PTR [rax+0x14],0x0
  402a29:	je     402a4c <main@@Base+0x50c>
  402a2f:	mov    rax,QWORD PTR [rbp-0x98]
  402a36:	mov    ecx,DWORD PTR [rax+0x14]
  402a39:	mov    DWORD PTR [rbp-0xc4],ecx
  402a3f:	call   402050 <__errno_location@plt>
  402a44:	mov    ecx,DWORD PTR [rbp-0xc4]
  402a4a:	mov    DWORD PTR [rax],ecx
  402a4c:	mov    rax,QWORD PTR [rbp-0x98]
  402a53:	cmp    QWORD PTR [rax+0x20],0x0
  402a58:	je     402ab6 <main@@Base+0x576>
  402a5e:	mov    rax,QWORD PTR [rbp-0x98]
  402a65:	cmp    QWORD PTR [rax+0x18],0x0
  402a6a:	jne    402ab6 <main@@Base+0x576>
  402a70:	jmp    402a75 <main@@Base+0x535>
  402a75:	jmp    402a7a <main@@Base+0x53a>
  402a7a:	jmp    402a7f <main@@Base+0x53f>
  402a7f:	mov    rax,QWORD PTR [rbp-0x98]
  402a86:	mov    rax,QWORD PTR [rax+0x20]
  402a8a:	mov    rdi,QWORD PTR [rbp-0x10]
  402a8e:	call   rax
  402a90:	mov    QWORD PTR [rbp-0xb8],rax
  402a97:	jmp    402a9c <main@@Base+0x55c>
  402a9c:	jmp    402aa1 <main@@Base+0x561>
  402aa1:	jmp    402aa6 <main@@Base+0x566>
  402aa6:	mov    rax,QWORD PTR [rbp-0xb8]
  402aad:	mov    QWORD PTR [rbp-0x8],rax
  402ab1:	jmp    402b9b <main@@Base+0x65b>
  402ab6:	mov    rax,QWORD PTR [rbp-0x98]
  402abd:	cmp    QWORD PTR [rax+0x20],0x0
  402ac2:	je     402b22 <main@@Base+0x5e2>
  402ac8:	mov    rax,QWORD PTR [rbp-0x98]
  402acf:	cmp    QWORD PTR [rax+0x18],0x0
  402ad4:	je     402b22 <main@@Base+0x5e2>
  402ada:	jmp    402adf <main@@Base+0x59f>
  402adf:	jmp    402ae4 <main@@Base+0x5a4>
  402ae4:	mov    rax,QWORD PTR [rbp-0x98]
  402aeb:	mov    rax,QWORD PTR [rax+0x20]
  402aef:	mov    rdi,QWORD PTR [rbp-0x10]
  402af3:	call   rax
  402af5:	mov    QWORD PTR [rbp-0xd0],rax
  402afc:	jmp    402b01 <main@@Base+0x5c1>
  402b01:	jmp    402b06 <main@@Base+0x5c6>
  402b06:	jmp    402b0b <main@@Base+0x5cb>
  402b0b:	mov    rax,QWORD PTR [rbp-0x98]
  402b12:	mov    rax,QWORD PTR [rax+0x18]
  402b16:	mov    rax,QWORD PTR [rax]
  402b19:	mov    QWORD PTR [rbp-0x8],rax
  402b1d:	jmp    402b9b <main@@Base+0x65b>
  402b22:	mov    rax,QWORD PTR [rbp-0x98]
  402b29:	cmp    QWORD PTR [rax+0x18],0x0
  402b2e:	je     402b55 <main@@Base+0x615>
  402b34:	jmp    402b39 <main@@Base+0x5f9>
  402b39:	jmp    402b3e <main@@Base+0x5fe>
  402b3e:	mov    rax,QWORD PTR [rbp-0x98]
  402b45:	mov    rax,QWORD PTR [rax+0x18]
  402b49:	mov    rax,QWORD PTR [rax]
  402b4c:	mov    QWORD PTR [rbp-0x8],rax
  402b50:	jmp    402b9b <main@@Base+0x65b>
  402b55:	jmp    402b5a <main@@Base+0x61a>
  402b5a:	jmp    402b5f <main@@Base+0x61f>
  402b5f:	mov    rax,QWORD PTR [rip+0x556a]        # 4080d0 <__bss_start@@Base+0x8>
  402b66:	mov    QWORD PTR [rbp-0x8],rax
  402b6a:	jmp    402b9b <main@@Base+0x65b>
  402b6f:	mov    rax,QWORD PTR [rbp-0x90]
  402b76:	mov    rax,QWORD PTR [rax+0x8]
  402b7a:	mov    QWORD PTR [rbp-0x90],rax
  402b81:	jmp    402880 <main@@Base+0x340>
  402b86:	jmp    402b8b <main@@Base+0x64b>
  402b8b:	jmp    402b90 <main@@Base+0x650>
  402b90:	mov    rax,QWORD PTR [rip+0x5539]        # 4080d0 <__bss_start@@Base+0x8>
  402b97:	mov    QWORD PTR [rbp-0x8],rax
  402b9b:	mov    rax,QWORD PTR [rbp-0x8]
  402b9f:	add    rsp,0xd0
  402ba6:	pop    rbp
  402ba7:	ret    
  402ba8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402bb0 <mmk_init@@Base>:
  402bb0:	push   rax
  402bb1:	cmp    BYTE PTR [rip+0x5520],0x0        # 4080d8 <__bss_start@@Base+0x10>
  402bb8:	jne    402bdb <mmk_init@@Base+0x2b>
  402bba:	call   402fc0 <plt_init_ctx@@Base>
  402bbf:	mov    QWORD PTR [rip+0x551a],rax        # 4080e0 <__bss_start@@Base+0x18>
  402bc6:	cmp    rax,0xffffffffffffffff
  402bca:	je     402bdd <mmk_init@@Base+0x2d>
  402bcc:	mov    rdi,rax
  402bcf:	call   404100 <mmk_init_vital_functions@@Base>
  402bd4:	mov    BYTE PTR [rip+0x54fd],0x1        # 4080d8 <__bss_start@@Base+0x10>
  402bdb:	pop    rax
  402bdc:	ret    
  402bdd:	mov    rax,QWORD PTR [rip+0x5414]        # 407ff8 <stderr@GLIBC_2.2.5>
  402be4:	mov    rdi,QWORD PTR [rax]
  402be7:	lea    rsi,[rip+0x242e]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402bee:	lea    rdx,[rip+0x24e8]        # 4050dd <_IO_stdin_used@@Base+0xdd>
  402bf5:	lea    r8,[rip+0x2533]        # 40512f <_IO_stdin_used@@Base+0x12f>
  402bfc:	mov    ecx,0x2d
  402c01:	xor    eax,eax
  402c03:	call   4020e0 <fprintf@plt>
  402c08:	call   402040 <abort@plt>
  402c0d:	nop    DWORD PTR [rax]

0000000000402c10 <mmk_plt_ctx@@Base>:
  402c10:	cmp    BYTE PTR [rip+0x54c1],0x0        # 4080d8 <__bss_start@@Base+0x10>
  402c17:	je     402c21 <mmk_plt_ctx@@Base+0x11>
  402c19:	mov    rax,QWORD PTR [rip+0x54c0]        # 4080e0 <__bss_start@@Base+0x18>
  402c20:	ret    
  402c21:	push   rax
  402c22:	mov    rax,QWORD PTR [rip+0x53cf]        # 407ff8 <stderr@GLIBC_2.2.5>
  402c29:	mov    rdi,QWORD PTR [rax]
  402c2c:	lea    rsi,[rip+0x23e9]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402c33:	lea    rdx,[rip+0x24a3]        # 4050dd <_IO_stdin_used@@Base+0xdd>
  402c3a:	lea    r8,[rip+0x2505]        # 405146 <_IO_stdin_used@@Base+0x146>
  402c41:	mov    ecx,0x36
  402c46:	xor    eax,eax
  402c48:	call   4020e0 <fprintf@plt>
  402c4d:	call   402040 <abort@plt>
  402c52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c5c:	nop    DWORD PTR [rax+0x0]

0000000000402c60 <mmk_reset@@Base>:
  402c60:	test   rdi,rdi
  402c63:	je     402c7c <mmk_reset@@Base+0x1c>
  402c65:	push   rax
  402c66:	call   403920 <mmk_ask_ctx@@Base>
  402c6b:	mov    rdi,rax
  402c6e:	call   403690 <mmk_stub_context@@Base>
  402c73:	mov    rdi,rax
  402c76:	pop    rax
  402c77:	jmp    402ec0 <mmk_mock_destroy_internal@@Base>
  402c7c:	ret    
  402c7d:	nop    DWORD PTR [rax]

0000000000402c80 <mmk_matcher_init@@Base>:
  402c80:	push   rbp
  402c81:	push   rbx
  402c82:	push   rax
  402c83:	mov    ebp,edi
  402c85:	mov    edi,0x18
  402c8a:	call   4040d0 <mmk_malloc@@Base>
  402c8f:	mov    rbx,rax
  402c92:	mov    DWORD PTR [rax],ebp
  402c94:	vxorps xmm0,xmm0,xmm0
  402c98:	vmovups XMMWORD PTR [rax+0x4],xmm0
  402c9d:	mov    DWORD PTR [rax+0x14],0x0
  402ca4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402cb0:	mov    QWORD PTR [rax-0x28],rbx
  402cb7:	add    rsp,0x8
  402cbb:	pop    rbx
  402cbc:	pop    rbp
  402cbd:	ret    
  402cbe:	xchg   ax,ax

0000000000402cc0 <mmk_matcher_term@@Base>:
  402cc0:	push   rax
  402cc1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402ccd:	mov    QWORD PTR [rax-0x28],0x0
  402cd8:	pop    rax
  402cd9:	ret    
  402cda:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402ce0 <mmk_matcher_ctx@@Base>:
  402ce0:	push   rax
  402ce1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402ced:	mov    rax,QWORD PTR [rax-0x28]
  402cf4:	pop    rcx
  402cf5:	ret    
  402cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402d00 <mmk_matcher_add@@Base>:
  402d00:	push   rbp
  402d01:	push   r14
  402d03:	push   rbx
  402d04:	mov    ebp,esi
  402d06:	mov    r14d,edi
  402d09:	mov    edi,0x18
  402d0e:	call   4040d0 <mmk_malloc@@Base>
  402d13:	mov    rbx,rax
  402d16:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402d22:	mov    rax,QWORD PTR [rax-0x28]
  402d29:	movsxd rcx,ebp
  402d2c:	mov    DWORD PTR [rbx],r14d
  402d2f:	mov    QWORD PTR [rbx+0x8],rcx
  402d33:	mov    QWORD PTR [rbx+0x10],0x0
  402d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d40:	mov    rdx,rax
  402d43:	mov    rax,QWORD PTR [rax+0x10]
  402d47:	test   rax,rax
  402d4a:	je     402d52 <mmk_matcher_add@@Base+0x52>
  402d4c:	cmp    QWORD PTR [rax+0x8],rcx
  402d50:	jb     402d40 <mmk_matcher_add@@Base+0x40>
  402d52:	mov    QWORD PTR [rbx+0x10],rax
  402d56:	mov    QWORD PTR [rdx+0x10],rbx
  402d5a:	pop    rbx
  402d5b:	pop    r14
  402d5d:	pop    rbp
  402d5e:	ret    
  402d5f:	nop

0000000000402d60 <mmk_matcher_get_predicate@@Base>:
  402d60:	lea    rax,[rdi+0x18]
  402d64:	ret    
  402d65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d6f:	nop

0000000000402d70 <mmk_mock_create_internal@@Base>:
  402d70:	push   rbp
  402d71:	push   r15
  402d73:	push   r14
  402d75:	push   r13
  402d77:	push   r12
  402d79:	push   rbx
  402d7a:	push   rax
  402d7b:	mov    r15,rsi
  402d7e:	mov    r14,rdi
  402d81:	call   402bb0 <mmk_init@@Base>
  402d86:	mov    edi,0x28
  402d8b:	call   4040d0 <mmk_malloc@@Base>
  402d90:	test   rax,rax
  402d93:	je     402e6c <mmk_mock_create_internal@@Base+0xfc>
  402d99:	mov    r13,rax
  402d9c:	vxorps xmm0,xmm0,xmm0
  402da0:	vmovups YMMWORD PTR [rax],ymm0
  402da4:	mov    QWORD PTR [rax+0x20],0x0
  402dac:	mov    esi,0x40
  402db1:	mov    rdi,r14
  402db4:	vzeroupper 
  402db7:	call   403fd0 <mmk_strchr@@Base>
  402dbc:	mov    rbx,rax
  402dbf:	test   rax,rax
  402dc2:	je     402dcc <mmk_mock_create_internal@@Base+0x5c>
  402dc4:	mov    rbp,rbx
  402dc7:	sub    rbp,r14
  402dca:	jmp    402dd7 <mmk_mock_create_internal@@Base+0x67>
  402dcc:	mov    rdi,r14
  402dcf:	call   404080 <mmk_strlen@@Base>
  402dd4:	mov    rbp,rax
  402dd7:	lea    rdi,[rbp+0x1]
  402ddb:	call   4040d0 <mmk_malloc@@Base>
  402de0:	mov    r12,rax
  402de3:	mov    rdi,rax
  402de6:	mov    rsi,r14
  402de9:	mov    rdx,rbp
  402dec:	call   404030 <mmk_strncpy@@Base>
  402df1:	mov    BYTE PTR [r12+rbp*1],0x0
  402df6:	test   rbx,rbx
  402df9:	je     402e1a <mmk_mock_create_internal@@Base+0xaa>
  402dfb:	add    rbx,0x1
  402dff:	lea    rsi,[rip+0x23a7]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  402e06:	mov    edx,0x4
  402e0b:	mov    rdi,rbx
  402e0e:	call   403f80 <mmk_strneq@@Base>
  402e13:	test   eax,eax
  402e15:	setne  bl
  402e18:	jmp    402e1c <mmk_mock_create_internal@@Base+0xac>
  402e1a:	mov    bl,0x1
  402e1c:	mov    rdi,r14
  402e1f:	mov    rsi,r15
  402e22:	mov    rdx,r13
  402e25:	call   403850 <mmk_stub_create@@Base>
  402e2a:	mov    QWORD PTR [r13+0x8],rax
  402e2e:	test   rax,rax
  402e31:	je     402e9c <mmk_mock_create_internal@@Base+0x12c>
  402e33:	test   bl,bl
  402e35:	jne    402e4d <mmk_mock_create_internal@@Base+0xdd>
  402e37:	mov    rdi,r12
  402e3a:	mov    rsi,r15
  402e3d:	mov    rdx,r13
  402e40:	call   403850 <mmk_stub_create@@Base>
  402e45:	mov    rcx,QWORD PTR [r13+0x8]
  402e49:	mov    QWORD PTR [rcx+0x48],rax
  402e4d:	mov    rdi,r12
  402e50:	call   4040f0 <mmk_free@@Base>
  402e55:	mov    rax,QWORD PTR [r13+0x8]
  402e59:	mov    rax,QWORD PTR [rax+0x40]
  402e5d:	add    rsp,0x8
  402e61:	pop    rbx
  402e62:	pop    r12
  402e64:	pop    r13
  402e66:	pop    r14
  402e68:	pop    r15
  402e6a:	pop    rbp
  402e6b:	ret    
  402e6c:	mov    rax,QWORD PTR [rip+0x5185]        # 407ff8 <stderr@GLIBC_2.2.5>
  402e73:	mov    rdi,QWORD PTR [rax]
  402e76:	lea    rsi,[rip+0x219f]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402e7d:	lea    rdx,[rip+0x22d3]        # 405157 <_IO_stdin_used@@Base+0x157>
  402e84:	lea    r8,[rip+0x231e]        # 4051a9 <_IO_stdin_used@@Base+0x1a9>
  402e8b:	mov    ecx,0x24
  402e90:	xor    eax,eax
  402e92:	call   4020e0 <fprintf@plt>
  402e97:	call   402040 <abort@plt>
  402e9c:	mov    rax,QWORD PTR [rip+0x5155]        # 407ff8 <stderr@GLIBC_2.2.5>
  402ea3:	mov    rdi,QWORD PTR [rax]
  402ea6:	lea    rsi,[rip+0x2305]        # 4051b2 <_IO_stdin_used@@Base+0x1b2>
  402ead:	xor    eax,eax
  402eaf:	mov    rdx,r14
  402eb2:	call   4020e0 <fprintf@plt>
  402eb7:	call   402040 <abort@plt>
  402ebc:	nop    DWORD PTR [rax+0x0]

0000000000402ec0 <mmk_mock_destroy_internal@@Base>:
  402ec0:	push   r15
  402ec2:	push   r14
  402ec4:	push   r12
  402ec6:	push   rbx
  402ec7:	push   rax
  402ec8:	mov    r14,rdi
  402ecb:	mov    rdi,QWORD PTR [rdi+0x8]
  402ecf:	test   rdi,rdi
  402ed2:	je     402ef1 <mmk_mock_destroy_internal@@Base+0x31>
  402ed4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ede:	xchg   ax,ax
  402ee0:	mov    rbx,QWORD PTR [rdi+0x48]
  402ee4:	call   4038e0 <mmk_stub_destroy@@Base>
  402ee9:	mov    rdi,rbx
  402eec:	test   rbx,rbx
  402eef:	jne    402ee0 <mmk_mock_destroy_internal@@Base+0x20>
  402ef1:	mov    rdi,QWORD PTR [r14+0x10]
  402ef5:	call   4040f0 <mmk_free@@Base>
  402efa:	mov    r12,QWORD PTR [r14]
  402efd:	test   r12,r12
  402f00:	je     402f41 <mmk_mock_destroy_internal@@Base+0x81>
  402f02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f0c:	nop    DWORD PTR [rax+0x0]
  402f10:	mov    rdi,QWORD PTR [r12]
  402f14:	mov    r15,QWORD PTR [r12+0x8]
  402f19:	test   rdi,rdi
  402f1c:	je     402f31 <mmk_mock_destroy_internal@@Base+0x71>
  402f1e:	xchg   ax,ax
  402f20:	mov    rbx,QWORD PTR [rdi+0x10]
  402f24:	call   4040f0 <mmk_free@@Base>
  402f29:	mov    rdi,rbx
  402f2c:	test   rbx,rbx
  402f2f:	jne    402f20 <mmk_mock_destroy_internal@@Base+0x60>
  402f31:	mov    rdi,r12
  402f34:	call   4040f0 <mmk_free@@Base>
  402f39:	mov    r12,r15
  402f3c:	test   r15,r15
  402f3f:	jne    402f10 <mmk_mock_destroy_internal@@Base+0x50>
  402f41:	mov    rdi,r14
  402f44:	add    rsp,0x8
  402f48:	pop    rbx
  402f49:	pop    r12
  402f4b:	pop    r14
  402f4d:	pop    r15
  402f4f:	jmp    4040f0 <mmk_free@@Base>
  402f54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f5e:	xchg   ax,ax

0000000000402f60 <mmk_mock_params_begin@@Base>:
  402f60:	mov    rax,QWORD PTR [rdi+0x10]
  402f64:	test   rax,rax
  402f67:	je     402f79 <mmk_mock_params_begin@@Base+0x19>
  402f69:	mov    rcx,QWORD PTR [rdi+0x18]
  402f6d:	add    rax,0x8
  402f71:	test   rcx,rcx
  402f74:	cmove  rax,rcx
  402f78:	ret    
  402f79:	xor    eax,eax
  402f7b:	ret    
  402f7c:	nop    DWORD PTR [rax+0x0]

0000000000402f80 <mmk_mock_params_next@@Base>:
  402f80:	mov    rax,QWORD PTR [rsi-0x8]
  402f84:	lea    rcx,[rsi+rax*1]
  402f88:	add    rcx,0x8
  402f8c:	mov    rdx,QWORD PTR [rdi+0x10]
  402f90:	add    rdx,QWORD PTR [rdi+0x18]
  402f94:	xor    eax,eax
  402f96:	cmp    rcx,rdx
  402f99:	cmovb  rax,rcx
  402f9d:	ret    
  402f9e:	xchg   ax,ax

0000000000402fa0 <mmk_mock_get_params@@Base>:
  402fa0:	push   rax
  402fa1:	call   403830 <mmk_ctx@@Base>
  402fa6:	mov    rdi,rax
  402fa9:	call   403690 <mmk_stub_context@@Base>
  402fae:	mov    rax,QWORD PTR [rax]
  402fb1:	pop    rcx
  402fb2:	ret    
  402fb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fbd:	nop    DWORD PTR [rax]

0000000000402fc0 <plt_init_ctx@@Base>:
  402fc0:	mov    rax,QWORD PTR [rip+0x50f9]        # 4080c0 <__data_start@@Base+0x18>
  402fc7:	cmp    rax,0xffffffffffffffff
  402fcb:	je     402fce <plt_init_ctx@@Base+0xe>
  402fcd:	ret    
  402fce:	mov    rax,QWORD PTR [rip+0x4ffb]        # 407fd0 <_r_debug@GLIBC_2.2.5>
  402fd5:	mov    QWORD PTR [rip+0x50e4],rax        # 4080c0 <__data_start@@Base+0x18>
  402fdc:	ret    
  402fdd:	nop    DWORD PTR [rax]

0000000000402fe0 <plt_get_lib@@Base>:
  402fe0:	push   rbp
  402fe1:	mov    rbp,rsp
  402fe4:	push   r15
  402fe6:	push   r14
  402fe8:	push   r13
  402fea:	push   r12
  402fec:	push   rbx
  402fed:	sub    rsp,0x28
  402ff1:	mov    r14,rdi
  402ff4:	test   rsi,rsi
  402ff7:	lea    rbx,[rip+0x21af]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  402ffe:	cmovne rbx,rsi
  403002:	lea    rsi,[rip+0x21dc]        # 4051e5 <_IO_stdin_used@@Base+0x1e5>
  403009:	mov    edx,0x4
  40300e:	mov    rdi,rbx
  403011:	call   402060 <strncmp@plt>
  403016:	test   eax,eax
  403018:	je     403071 <plt_get_lib@@Base+0x91>
  40301a:	lea    rsi,[rip+0x21c9]        # 4051ea <_IO_stdin_used@@Base+0x1ea>
  403021:	mov    edx,0x5
  403026:	mov    rdi,rbx
  403029:	call   402060 <strncmp@plt>
  40302e:	test   eax,eax
  403030:	je     403079 <plt_get_lib@@Base+0x99>
  403032:	lea    rsi,[rip+0x21b7]        # 4051f0 <_IO_stdin_used@@Base+0x1f0>
  403039:	mov    edx,0x4
  40303e:	mov    rdi,rbx
  403041:	call   402060 <strncmp@plt>
  403046:	test   eax,eax
  403048:	je     403081 <plt_get_lib@@Base+0xa1>
  40304a:	lea    rsi,[rip+0x215c]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  403051:	mov    rdi,rbx
  403054:	call   4020d0 <strcmp@plt>
  403059:	test   eax,eax
  40305b:	jne    4031d1 <plt_get_lib@@Base+0x1f1>
  403061:	xor    r12d,r12d
  403064:	lea    rbx,[rip+0x21ce]        # 405239 <_IO_stdin_used@@Base+0x239>
  40306b:	mov    QWORD PTR [rbp-0x38],rbx
  40306f:	jmp    40309f <plt_get_lib@@Base+0xbf>
  403071:	mov    r12d,0x1
  403077:	jmp    403087 <plt_get_lib@@Base+0xa7>
  403079:	mov    r12d,0x2
  40307f:	jmp    403087 <plt_get_lib@@Base+0xa7>
  403081:	mov    r12d,0x3
  403087:	mov    esi,0x3a
  40308c:	mov    QWORD PTR [rbp-0x38],rbx
  403090:	mov    rdi,rbx
  403093:	call   402090 <strchr@plt>
  403098:	mov    rbx,rax
  40309b:	add    rbx,0x1
  40309f:	mov    rdi,rbx
  4030a2:	call   402070 <strlen@plt>
  4030a7:	mov    r15,rax
  4030aa:	lea    rsi,[rip+0x21fb]        # 4052ac <_IO_stdin_used@@Base+0x2ac>
  4030b1:	mov    QWORD PTR [rbp-0x40],rbx
  4030b5:	mov    rdi,rbx
  4030b8:	call   4020d0 <strcmp@plt>
  4030bd:	mov    DWORD PTR [rbp-0x30],eax
  4030c0:	mov    rbx,QWORD PTR [r14+0x8]
  4030c4:	test   rbx,rbx
  4030c7:	je     4031bd <plt_get_lib@@Base+0x1dd>
  4030cd:	add    r15,0x8
  4030d1:	mov    eax,r12d
  4030d4:	or     eax,0x2
  4030d7:	mov    DWORD PTR [rbp-0x2c],eax
  4030da:	lea    rax,[r15+0xf]
  4030de:	and    rax,0xfffffffffffffff0
  4030e2:	mov    QWORD PTR [rbp-0x48],rax
  4030e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030f0:	cmp    r12d,0x1
  4030f4:	jne    403140 <plt_get_lib@@Base+0x160>
  4030f6:	cmp    DWORD PTR [rbp-0x30],0x0
  4030fa:	je     403179 <plt_get_lib@@Base+0x199>
  4030fc:	mov    r13,rsp
  4030ff:	mov    r14,rsp
  403102:	sub    r14,QWORD PTR [rbp-0x48]
  403106:	mov    rsp,r14
  403109:	xor    eax,eax
  40310b:	mov    rdi,r14
  40310e:	mov    rsi,r15
  403111:	lea    rdx,[rip+0x2134]        # 40524c <_IO_stdin_used@@Base+0x24c>
  403118:	mov    rcx,QWORD PTR [rbp-0x40]
  40311c:	call   4020a0 <snprintf@plt>
  403121:	mov    rdi,QWORD PTR [rbx+0x8]
  403125:	mov    rsi,r14
  403128:	call   402140 <strstr@plt>
  40312d:	test   rax,rax
  403130:	mov    rsp,r13
  403133:	je     4031b0 <plt_get_lib@@Base+0x1d0>
  403135:	jmp    4031bf <plt_get_lib@@Base+0x1df>
  40313a:	nop    WORD PTR [rax+rax*1+0x0]
  403140:	cmp    DWORD PTR [rbp-0x2c],0x2
  403144:	jne    403160 <plt_get_lib@@Base+0x180>
  403146:	mov    rsi,QWORD PTR [rbx+0x8]
  40314a:	mov    rdi,QWORD PTR [rbp-0x38]
  40314e:	call   4020d0 <strcmp@plt>
  403153:	test   eax,eax
  403155:	jne    4031b0 <plt_get_lib@@Base+0x1d0>
  403157:	jmp    4031bf <plt_get_lib@@Base+0x1df>
  403159:	nop    DWORD PTR [rax+0x0]
  403160:	cmp    r12d,0x3
  403164:	jne    4031b0 <plt_get_lib@@Base+0x1d0>
  403166:	mov    rdi,rbx
  403169:	mov    rsi,QWORD PTR [rbp-0x40]
  40316d:	call   403230 <plt_get_lib@@Base+0x250>
  403172:	test   rax,rax
  403175:	je     4031b0 <plt_get_lib@@Base+0x1d0>
  403177:	jmp    4031bf <plt_get_lib@@Base+0x1df>
  403179:	mov    r14,QWORD PTR [rbx+0x8]
  40317d:	mov    rdi,r14
  403180:	lea    rsi,[rip+0x20b3]        # 40523a <_IO_stdin_used@@Base+0x23a>
  403187:	call   402140 <strstr@plt>
  40318c:	test   rax,rax
  40318f:	jne    4031bf <plt_get_lib@@Base+0x1df>
  403191:	mov    rdi,r14
  403194:	lea    rsi,[rip+0x20a8]        # 405243 <_IO_stdin_used@@Base+0x243>
  40319b:	call   402140 <strstr@plt>
  4031a0:	test   rax,rax
  4031a3:	jne    4031bf <plt_get_lib@@Base+0x1df>
  4031a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031af:	nop
  4031b0:	mov    rbx,QWORD PTR [rbx+0x18]
  4031b4:	test   rbx,rbx
  4031b7:	jne    4030f0 <plt_get_lib@@Base+0x110>
  4031bd:	xor    ebx,ebx
  4031bf:	mov    rax,rbx
  4031c2:	lea    rsp,[rbp-0x28]
  4031c6:	pop    rbx
  4031c7:	pop    r12
  4031c9:	pop    r13
  4031cb:	pop    r14
  4031cd:	pop    r15
  4031cf:	pop    rbp
  4031d0:	ret    
  4031d1:	mov    esi,0x3a
  4031d6:	mov    r14,rbx
  4031d9:	mov    rdi,rbx
  4031dc:	call   402090 <strchr@plt>
  4031e1:	test   rax,rax
  4031e4:	jne    403206 <plt_get_lib@@Base+0x226>
  4031e6:	mov    rax,QWORD PTR [rip+0x4e0b]        # 407ff8 <stderr@GLIBC_2.2.5>
  4031ed:	mov    rdi,QWORD PTR [rax]
  4031f0:	lea    rsi,[rip+0x2020]        # 405217 <_IO_stdin_used@@Base+0x217>
  4031f7:	xor    eax,eax
  4031f9:	mov    rdx,r14
  4031fc:	call   4020e0 <fprintf@plt>
  403201:	call   402040 <abort@plt>
  403206:	mov    rdx,rax
  403209:	sub    edx,r14d
  40320c:	mov    rax,QWORD PTR [rip+0x4de5]        # 407ff8 <stderr@GLIBC_2.2.5>
  403213:	mov    rdi,QWORD PTR [rax]
  403216:	add    edx,0x1
  403219:	lea    rsi,[rip+0x1fd5]        # 4051f5 <_IO_stdin_used@@Base+0x1f5>
  403220:	xor    eax,eax
  403222:	mov    rcx,r14
  403225:	call   4020e0 <fprintf@plt>
  40322a:	call   402040 <abort@plt>
  40322f:	nop
  403230:	push   rbp
  403231:	push   r15
  403233:	push   r14
  403235:	push   r13
  403237:	push   r12
  403239:	push   rbx
  40323a:	sub    rsp,0x18
  40323e:	mov    QWORD PTR [rsp+0x10],rsi
  403243:	mov    rbx,QWORD PTR [rdi]
  403246:	mov    rax,QWORD PTR [rdi+0x10]
  40324a:	mov    rcx,QWORD PTR [rax]
  40324d:	test   rcx,rcx
  403250:	je     403274 <plt_get_lib@@Base+0x294>
  403252:	lea    rdx,[rax+0x10]
  403256:	xor    r8d,r8d
  403259:	mov    rsi,rcx
  40325c:	nop    DWORD PTR [rax+0x0]
  403260:	cmp    rsi,0x6
  403264:	je     40328c <plt_get_lib@@Base+0x2ac>
  403266:	mov    rsi,QWORD PTR [rdx]
  403269:	add    rdx,0x10
  40326d:	test   rsi,rsi
  403270:	jne    403260 <plt_get_lib@@Base+0x280>
  403272:	jmp    40329d <plt_get_lib@@Base+0x2bd>
  403274:	xor    eax,eax
  403276:	mov    QWORD PTR [rsp],rax
  40327a:	xor    edx,edx
  40327c:	xor    r8d,r8d
  40327f:	xor    r9d,r9d
  403282:	xor    ebp,ebp
  403284:	xor    r15d,r15d
  403287:	jmp    403397 <plt_get_lib@@Base+0x3b7>
  40328c:	mov    r8,QWORD PTR [rdx-0x8]
  403290:	cmp    r8,rbx
  403293:	jb     40329a <plt_get_lib@@Base+0x2ba>
  403295:	test   r8,r8
  403298:	jns    40329d <plt_get_lib@@Base+0x2bd>
  40329a:	add    r8,rbx
  40329d:	lea    rdx,[rax+0x10]
  4032a1:	xor    r9d,r9d
  4032a4:	mov    rsi,rcx
  4032a7:	nop    WORD PTR [rax+rax*1+0x0]
  4032b0:	cmp    rsi,0x5
  4032b4:	je     4032c4 <plt_get_lib@@Base+0x2e4>
  4032b6:	mov    rsi,QWORD PTR [rdx]
  4032b9:	add    rdx,0x10
  4032bd:	test   rsi,rsi
  4032c0:	jne    4032b0 <plt_get_lib@@Base+0x2d0>
  4032c2:	jmp    4032d5 <plt_get_lib@@Base+0x2f5>
  4032c4:	mov    r9,QWORD PTR [rdx-0x8]
  4032c8:	cmp    r9,rbx
  4032cb:	jb     4032d2 <plt_get_lib@@Base+0x2f2>
  4032cd:	test   r9,r9
  4032d0:	jns    4032d5 <plt_get_lib@@Base+0x2f5>
  4032d2:	add    r9,rbx
  4032d5:	lea    rsi,[rax+0x10]
  4032d9:	xor    edx,edx
  4032db:	mov    rdi,rcx
  4032de:	xchg   ax,ax
  4032e0:	cmp    rdi,0x14
  4032e4:	je     4032f4 <plt_get_lib@@Base+0x314>
  4032e6:	mov    rdi,QWORD PTR [rsi]
  4032e9:	add    rsi,0x10
  4032ed:	test   rdi,rdi
  4032f0:	jne    4032e0 <plt_get_lib@@Base+0x300>
  4032f2:	jmp    4032f8 <plt_get_lib@@Base+0x318>
  4032f4:	mov    rdx,QWORD PTR [rsi-0x8]
  4032f8:	lea    rsi,[rax+0x10]
  4032fc:	xor    ebp,ebp
  4032fe:	mov    rdi,rcx
  403301:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40330b:	nop    DWORD PTR [rax+rax*1+0x0]
  403310:	cmp    rdi,0x17
  403314:	je     403324 <plt_get_lib@@Base+0x344>
  403316:	mov    rdi,QWORD PTR [rsi]
  403319:	add    rsi,0x10
  40331d:	test   rdi,rdi
  403320:	jne    403310 <plt_get_lib@@Base+0x330>
  403322:	jmp    403335 <plt_get_lib@@Base+0x355>
  403324:	mov    rbp,QWORD PTR [rsi-0x8]
  403328:	cmp    rbp,rbx
  40332b:	jb     403332 <plt_get_lib@@Base+0x352>
  40332d:	test   rbp,rbp
  403330:	jns    403335 <plt_get_lib@@Base+0x355>
  403332:	add    rbp,rbx
  403335:	lea    rsi,[rax+0x10]
  403339:	xor    edi,edi
  40333b:	mov    QWORD PTR [rsp],rdi
  40333f:	mov    rdi,rcx
  403342:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40334c:	nop    DWORD PTR [rax+0x0]
  403350:	cmp    rdi,0x2
  403354:	je     403364 <plt_get_lib@@Base+0x384>
  403356:	mov    rdi,QWORD PTR [rsi]
  403359:	add    rsi,0x10
  40335d:	test   rdi,rdi
  403360:	jne    403350 <plt_get_lib@@Base+0x370>
  403362:	jmp    40336c <plt_get_lib@@Base+0x38c>
  403364:	mov    rsi,QWORD PTR [rsi-0x8]
  403368:	mov    QWORD PTR [rsp],rsi
  40336c:	lea    rsi,[rdx+0x2]
  403370:	add    rax,0x10
  403374:	xor    r15d,r15d
  403377:	nop    WORD PTR [rax+rax*1+0x0]
  403380:	cmp    rcx,rsi
  403383:	je     403393 <plt_get_lib@@Base+0x3b3>
  403385:	mov    rcx,QWORD PTR [rax]
  403388:	add    rax,0x10
  40338c:	test   rcx,rcx
  40338f:	jne    403380 <plt_get_lib@@Base+0x3a0>
  403391:	jmp    403397 <plt_get_lib@@Base+0x3b7>
  403393:	mov    r15,QWORD PTR [rax-0x8]
  403397:	xor    eax,eax
  403399:	test   r15,r15
  40339c:	je     40346b <plt_get_lib@@Base+0x48b>
  4033a2:	cmp    QWORD PTR [rsp],0x0
  4033a7:	je     40346b <plt_get_lib@@Base+0x48b>
  4033ad:	test   rbp,rbp
  4033b0:	je     40346b <plt_get_lib@@Base+0x48b>
  4033b6:	test   rdx,rdx
  4033b9:	je     40346b <plt_get_lib@@Base+0x48b>
  4033bf:	test   r8,r8
  4033c2:	je     40346b <plt_get_lib@@Base+0x48b>
  4033c8:	test   r9,r9
  4033cb:	je     40346b <plt_get_lib@@Base+0x48b>
  4033d1:	mov    QWORD PTR [rsp+0x8],rbx
  4033d6:	cmp    r15,QWORD PTR [rsp]
  4033da:	ja     403469 <plt_get_lib@@Base+0x489>
  4033e0:	add    rbp,0x8
  4033e4:	xor    r14d,r14d
  4033e7:	mov    rbx,QWORD PTR [rsp]
  4033eb:	or     rbx,r15
  4033ee:	shr    rbx,0x20
  4033f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033fc:	nop    DWORD PTR [rax+0x0]
  403400:	mov    eax,DWORD PTR [rbp+0x4]
  403403:	lea    rax,[rax+rax*2]
  403407:	mov    r13,r8
  40340a:	mov    edi,DWORD PTR [r8+rax*8]
  40340e:	mov    r12,r9
  403411:	add    rdi,r9
  403414:	mov    rsi,QWORD PTR [rsp+0x10]
  403419:	call   4020d0 <strcmp@plt>
  40341e:	test   eax,eax
  403420:	je     403459 <plt_get_lib@@Base+0x479>
  403422:	add    r14,0x1
  403426:	test   rbx,rbx
  403429:	je     403440 <plt_get_lib@@Base+0x460>
  40342b:	xor    edx,edx
  40342d:	mov    rax,QWORD PTR [rsp]
  403431:	div    r15
  403434:	jmp    403449 <plt_get_lib@@Base+0x469>
  403436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403440:	xor    edx,edx
  403442:	mov    rax,QWORD PTR [rsp]
  403446:	div    r15d
  403449:	mov    r8,r13
  40344c:	mov    r9,r12
  40344f:	add    rbp,r15
  403452:	cmp    r14,rax
  403455:	jb     403400 <plt_get_lib@@Base+0x420>
  403457:	jmp    403469 <plt_get_lib@@Base+0x489>
  403459:	mov    rax,QWORD PTR [rbp-0x8]
  40345d:	test   rax,rax
  403460:	je     403469 <plt_get_lib@@Base+0x489>
  403462:	add    rax,QWORD PTR [rsp+0x8]
  403467:	jmp    40346b <plt_get_lib@@Base+0x48b>
  403469:	xor    eax,eax
  40346b:	add    rsp,0x18
  40346f:	pop    rbx
  403470:	pop    r12
  403472:	pop    r13
  403474:	pop    r14
  403476:	pop    r15
  403478:	pop    rbp
  403479:	ret    
  40347a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403480 <plt_get_offsets@@Base>:
  403480:	push   r14
  403482:	push   rbx
  403483:	push   rax
  403484:	mov    r14,rdx
  403487:	call   403230 <plt_get_lib@@Base+0x250>
  40348c:	test   rax,rax
  40348f:	je     4034b2 <plt_get_offsets@@Base+0x32>
  403491:	mov    rbx,rax
  403494:	mov    edi,0x10
  403499:	call   4040d0 <mmk_malloc@@Base>
  40349e:	mov    QWORD PTR [r14],0x1
  4034a5:	mov    QWORD PTR [rax],rbx
  4034a8:	mov    QWORD PTR [rax+0x8],0x0
  4034b0:	jmp    4034b4 <plt_get_offsets@@Base+0x34>
  4034b2:	xor    eax,eax
  4034b4:	add    rsp,0x8
  4034b8:	pop    rbx
  4034b9:	pop    r14
  4034bb:	ret    
  4034bc:	nop    DWORD PTR [rax+0x0]

00000000004034c0 <plt_set_offsets@@Base>:
  4034c0:	test   rsi,rsi
  4034c3:	je     403568 <plt_set_offsets@@Base+0xa8>
  4034c9:	mov    r8d,esi
  4034cc:	and    r8d,0x1
  4034d0:	cmp    rsi,0x1
  4034d4:	jne    4034e3 <plt_set_offsets@@Base+0x23>
  4034d6:	xor    r10d,r10d
  4034d9:	test   r8,r8
  4034dc:	jne    40353f <plt_set_offsets@@Base+0x7f>
  4034de:	jmp    403568 <plt_set_offsets@@Base+0xa8>
  4034e3:	sub    rsi,r8
  4034e6:	lea    rcx,[rdi+0x18]
  4034ea:	xor    r10d,r10d
  4034ed:	nop    DWORD PTR [rax]
  4034f0:	cmp    QWORD PTR [rcx-0x10],0x0
  4034f5:	je     403500 <plt_set_offsets@@Base+0x40>
  4034f7:	mov    r9,QWORD PTR [rcx-0x18]
  4034fb:	jmp    40350b <plt_set_offsets@@Base+0x4b>
  4034fd:	nop    DWORD PTR [rax]
  403500:	mov    r9,QWORD PTR [rcx-0x18]
  403504:	mov    rax,QWORD PTR [r9]
  403507:	mov    QWORD PTR [rcx-0x10],rax
  40350b:	mov    QWORD PTR [r9],rdx
  40350e:	cmp    QWORD PTR [rcx],0x0
  403512:	je     403520 <plt_set_offsets@@Base+0x60>
  403514:	mov    r9,QWORD PTR [rcx-0x8]
  403518:	jmp    40352a <plt_set_offsets@@Base+0x6a>
  40351a:	nop    WORD PTR [rax+rax*1+0x0]
  403520:	mov    r9,QWORD PTR [rcx-0x8]
  403524:	mov    rax,QWORD PTR [r9]
  403527:	mov    QWORD PTR [rcx],rax
  40352a:	mov    QWORD PTR [r9],rdx
  40352d:	add    r10,0x2
  403531:	add    rcx,0x20
  403535:	cmp    rsi,r10
  403538:	jne    4034f0 <plt_set_offsets@@Base+0x30>
  40353a:	test   r8,r8
  40353d:	je     403568 <plt_set_offsets@@Base+0xa8>
  40353f:	shl    r10,0x4
  403543:	lea    rcx,[rdi+r10*1]
  403547:	cmp    QWORD PTR [rdi+r10*1+0x8],0x0
  40354d:	je     403554 <plt_set_offsets@@Base+0x94>
  40354f:	mov    rax,QWORD PTR [rcx]
  403552:	jmp    403565 <plt_set_offsets@@Base+0xa5>
  403554:	lea    rsi,[rdi+r10*1]
  403558:	add    rsi,0x8
  40355c:	mov    rax,QWORD PTR [rcx]
  40355f:	mov    rcx,QWORD PTR [rax]
  403562:	mov    QWORD PTR [rsi],rcx
  403565:	mov    QWORD PTR [rax],rdx
  403568:	ret    
  403569:	nop    DWORD PTR [rax+0x0]

0000000000403570 <plt_reset_offsets@@Base>:
  403570:	test   rsi,rsi
  403573:	je     403634 <plt_reset_offsets@@Base+0xc4>
  403579:	lea    rcx,[rsi-0x1]
  40357d:	mov    r8d,esi
  403580:	and    r8d,0x7
  403584:	cmp    rcx,0x7
  403588:	jae    403596 <plt_reset_offsets@@Base+0x26>
  40358a:	xor    ecx,ecx
  40358c:	test   r8,r8
  40358f:	jne    403609 <plt_reset_offsets@@Base+0x99>
  403591:	jmp    403634 <plt_reset_offsets@@Base+0xc4>
  403596:	sub    rsi,r8
  403599:	lea    rdx,[rdi+0x78]
  40359d:	xor    ecx,ecx
  40359f:	nop
  4035a0:	mov    r9,QWORD PTR [rdx-0x78]
  4035a4:	mov    rax,QWORD PTR [rdx-0x70]
  4035a8:	mov    QWORD PTR [r9],rax
  4035ab:	mov    r9,QWORD PTR [rdx-0x68]
  4035af:	mov    rax,QWORD PTR [rdx-0x60]
  4035b3:	mov    QWORD PTR [r9],rax
  4035b6:	mov    r9,QWORD PTR [rdx-0x58]
  4035ba:	mov    rax,QWORD PTR [rdx-0x50]
  4035be:	mov    QWORD PTR [r9],rax
  4035c1:	mov    r9,QWORD PTR [rdx-0x48]
  4035c5:	mov    rax,QWORD PTR [rdx-0x40]
  4035c9:	mov    QWORD PTR [r9],rax
  4035cc:	mov    r9,QWORD PTR [rdx-0x38]
  4035d0:	mov    rax,QWORD PTR [rdx-0x30]
  4035d4:	mov    QWORD PTR [r9],rax
  4035d7:	mov    r9,QWORD PTR [rdx-0x28]
  4035db:	mov    rax,QWORD PTR [rdx-0x20]
  4035df:	mov    QWORD PTR [r9],rax
  4035e2:	mov    r9,QWORD PTR [rdx-0x18]
  4035e6:	mov    rax,QWORD PTR [rdx-0x10]
  4035ea:	mov    QWORD PTR [r9],rax
  4035ed:	mov    r9,QWORD PTR [rdx-0x8]
  4035f1:	mov    rax,QWORD PTR [rdx]
  4035f4:	mov    QWORD PTR [r9],rax
  4035f7:	add    rcx,0x8
  4035fb:	sub    rdx,0xffffffffffffff80
  4035ff:	cmp    rsi,rcx
  403602:	jne    4035a0 <plt_reset_offsets@@Base+0x30>
  403604:	test   r8,r8
  403607:	je     403634 <plt_reset_offsets@@Base+0xc4>
  403609:	shl    rcx,0x4
  40360d:	add    rcx,rdi
  403610:	add    rcx,0x8
  403614:	neg    r8
  403617:	nop    WORD PTR [rax+rax*1+0x0]
  403620:	mov    rdx,QWORD PTR [rcx-0x8]
  403624:	mov    rsi,QWORD PTR [rcx]
  403627:	mov    QWORD PTR [rdx],rsi
  40362a:	add    rcx,0x10
  40362e:	add    r8,0x1
  403632:	jne    403620 <plt_reset_offsets@@Base+0xb0>
  403634:	ret    
  403635:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40363f:	nop

0000000000403640 <plt_get_real_fn@@Base>:
  403640:	push   r15
  403642:	push   r14
  403644:	push   rbx
  403645:	mov    rbx,QWORD PTR [rdi+0x8]
  403649:	test   rbx,rbx
  40364c:	je     40367b <plt_get_real_fn@@Base+0x3b>
  40364e:	mov    r15,rsi
  403651:	xor    r14d,r14d
  403654:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40365e:	xchg   ax,ax
  403660:	mov    rdi,rbx
  403663:	mov    rsi,r15
  403666:	call   403230 <plt_get_lib@@Base+0x250>
  40366b:	test   rax,rax
  40366e:	jne    403680 <plt_get_real_fn@@Base+0x40>
  403670:	mov    rbx,QWORD PTR [rbx+0x18]
  403674:	test   rbx,rbx
  403677:	jne    403660 <plt_get_real_fn@@Base+0x20>
  403679:	jmp    403683 <plt_get_real_fn@@Base+0x43>
  40367b:	xor    r14d,r14d
  40367e:	jmp    403683 <plt_get_real_fn@@Base+0x43>
  403680:	mov    r14,QWORD PTR [rax]
  403683:	mov    rax,r14
  403686:	pop    rbx
  403687:	pop    r14
  403689:	pop    r15
  40368b:	ret    
  40368c:	nop    DWORD PTR [rax+0x0]

0000000000403690 <mmk_stub_context@@Base>:
  403690:	test   rdi,rdi
  403693:	je     40369a <mmk_stub_context@@Base+0xa>
  403695:	mov    rax,QWORD PTR [rdi+0x18]
  403699:	ret    
  40369a:	xor    eax,eax
  40369c:	ret    
  40369d:	nop    DWORD PTR [rax]

00000000004036a0 <mmk_stub_create_static@@Base>:
  4036a0:	push   rbp
  4036a1:	push   r15
  4036a3:	push   r14
  4036a5:	push   r13
  4036a7:	push   r12
  4036a9:	push   rbx
  4036aa:	push   rax
  4036ab:	mov    r15,rcx
  4036ae:	mov    r14,rdx
  4036b1:	mov    rbx,rsi
  4036b4:	mov    r12,rdi
  4036b7:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4036c3:	mov    BYTE PTR [rax-0x20],0x0
  4036ca:	mov    QWORD PTR [rax-0x18],0x0
  4036d5:	mov    rdi,rbx
  4036d8:	call   404080 <mmk_strlen@@Base>
  4036dd:	lea    rdi,[rax+0x1]
  4036e1:	call   4040d0 <mmk_malloc@@Base>
  4036e6:	test   rax,rax
  4036e9:	je     403717 <mmk_stub_create_static@@Base+0x77>
  4036eb:	mov    r13,rax
  4036ee:	mov    rdi,rax
  4036f1:	mov    rsi,rbx
  4036f4:	call   404000 <mmk_strcpy@@Base>
  4036f9:	mov    esi,0x40
  4036fe:	mov    rdi,r13
  403701:	call   403fd0 <mmk_strchr@@Base>
  403706:	test   rax,rax
  403709:	je     403721 <mmk_stub_create_static@@Base+0x81>
  40370b:	mov    rbx,rax
  40370e:	mov    BYTE PTR [rax],0x0
  403711:	add    rbx,0x1
  403715:	jmp    403723 <mmk_stub_create_static@@Base+0x83>
  403717:	mov    eax,0xfffffff4
  40371c:	jmp    4037d7 <mmk_stub_create_static@@Base+0x137>
  403721:	xor    ebx,ebx
  403723:	call   402c10 <mmk_plt_ctx@@Base>
  403728:	mov    rdi,rax
  40372b:	mov    rsi,rbx
  40372e:	call   402fe0 <plt_get_lib@@Base>
  403733:	test   rax,rax
  403736:	je     4037d2 <mmk_stub_create_static@@Base+0x132>
  40373c:	mov    QWORD PTR [rsp],0x0
  403744:	mov    rdx,rsp
  403747:	mov    rdi,rax
  40374a:	mov    rsi,r13
  40374d:	call   403480 <plt_get_offsets@@Base>
  403752:	mov    rbp,rax
  403755:	mov    eax,0xfffffffe
  40375a:	test   rbp,rbp
  40375d:	je     4037d7 <mmk_stub_create_static@@Base+0x137>
  40375f:	mov    rcx,QWORD PTR [rsp]
  403763:	test   rcx,rcx
  403766:	je     4037d7 <mmk_stub_create_static@@Base+0x137>
  403768:	lea    rax,[rip+0x81]        # 4037f0 <mmk_ctx_asked@@Base>
  40376f:	mov    QWORD PTR [r12],rax
  403773:	lea    rax,[rip+0x96]        # 403810 <mmk_set_ctx@@Base>
  40377a:	mov    QWORD PTR [r12+0x8],rax
  40377f:	lea    rax,[rip+0xaa]        # 403830 <mmk_ctx@@Base>
  403786:	mov    QWORD PTR [r12+0x10],rax
  40378b:	mov    QWORD PTR [r12+0x18],r15
  403790:	mov    QWORD PTR [r12+0x20],r13
  403795:	mov    QWORD PTR [r12+0x28],rbx
  40379a:	mov    QWORD PTR [r12+0x30],rbp
  40379f:	mov    QWORD PTR [r12+0x38],rcx
  4037a4:	vxorps xmm0,xmm0,xmm0
  4037a8:	vmovups XMMWORD PTR [r12+0x40],xmm0
  4037af:	mov    rdi,r12
  4037b2:	mov    rsi,r14
  4037b5:	call   403940 <create_trampoline@@Base>
  4037ba:	mov    QWORD PTR [r12+0x40],rax
  4037bf:	mov    rsi,QWORD PTR [rsp]
  4037c3:	mov    rdi,rbp
  4037c6:	mov    rdx,rax
  4037c9:	call   4034c0 <plt_set_offsets@@Base>
  4037ce:	xor    eax,eax
  4037d0:	jmp    4037d7 <mmk_stub_create_static@@Base+0x137>
  4037d2:	mov    eax,0xfffffffe
  4037d7:	add    rsp,0x8
  4037db:	pop    rbx
  4037dc:	pop    r12
  4037de:	pop    r13
  4037e0:	pop    r14
  4037e2:	pop    r15
  4037e4:	pop    rbp
  4037e5:	ret    
  4037e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004037f0 <mmk_ctx_asked@@Base>:
  4037f0:	push   rax
  4037f1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4037fd:	movzx  ecx,BYTE PTR [rax-0x20]
  403804:	mov    BYTE PTR [rax-0x20],0x0
  40380b:	mov    eax,ecx
  40380d:	pop    rcx
  40380e:	ret    
  40380f:	nop

0000000000403810 <mmk_set_ctx@@Base>:
  403810:	push   rbx
  403811:	mov    rbx,rdi
  403814:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403820:	mov    QWORD PTR [rax-0x18],rbx
  403827:	pop    rbx
  403828:	ret    
  403829:	nop    DWORD PTR [rax+0x0]

0000000000403830 <mmk_ctx@@Base>:
  403830:	push   rax
  403831:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  40383d:	mov    rax,QWORD PTR [rax-0x18]
  403844:	pop    rcx
  403845:	ret    
  403846:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403850 <mmk_stub_create@@Base>:
  403850:	push   rbp
  403851:	push   r15
  403853:	push   r14
  403855:	push   rbx
  403856:	push   rax
  403857:	mov    r14,rdx
  40385a:	mov    r15,rsi
  40385d:	mov    rbp,rdi
  403860:	call   402bb0 <mmk_init@@Base>
  403865:	mov    edi,0x50
  40386a:	call   4040d0 <mmk_malloc@@Base>
  40386f:	mov    rbx,rax
  403872:	mov    rdi,rax
  403875:	mov    rsi,rbp
  403878:	mov    rdx,r15
  40387b:	mov    rcx,r14
  40387e:	call   4036a0 <mmk_stub_create_static@@Base>
  403883:	test   eax,eax
  403885:	jns    40389a <mmk_stub_create@@Base+0x4a>
  403887:	mov    ebp,eax
  403889:	mov    rdi,rbx
  40388c:	call   4040f0 <mmk_free@@Base>
  403891:	call   402050 <__errno_location@plt>
  403896:	mov    DWORD PTR [rax],ebp
  403898:	xor    ebx,ebx
  40389a:	mov    rax,rbx
  40389d:	add    rsp,0x8
  4038a1:	pop    rbx
  4038a2:	pop    r14
  4038a4:	pop    r15
  4038a6:	pop    rbp
  4038a7:	ret    
  4038a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038b0 <mmk_stub_destroy_static@@Base>:
  4038b0:	push   rbx
  4038b1:	mov    rbx,rdi
  4038b4:	mov    rdi,QWORD PTR [rdi+0x30]
  4038b8:	mov    rsi,QWORD PTR [rbx+0x38]
  4038bc:	call   403570 <plt_reset_offsets@@Base>
  4038c1:	mov    rdi,QWORD PTR [rbx+0x30]
  4038c5:	call   4040f0 <mmk_free@@Base>
  4038ca:	mov    rdi,QWORD PTR [rbx+0x40]
  4038ce:	call   403a30 <destroy_trampoline@@Base>
  4038d3:	mov    rdi,QWORD PTR [rbx+0x20]
  4038d7:	pop    rbx
  4038d8:	jmp    4040f0 <mmk_free@@Base>
  4038dd:	nop    DWORD PTR [rax]

00000000004038e0 <mmk_stub_destroy@@Base>:
  4038e0:	push   rbx
  4038e1:	mov    rbx,rdi
  4038e4:	mov    rdi,QWORD PTR [rdi+0x30]
  4038e8:	mov    rsi,QWORD PTR [rbx+0x38]
  4038ec:	call   403570 <plt_reset_offsets@@Base>
  4038f1:	mov    rdi,QWORD PTR [rbx+0x30]
  4038f5:	call   4040f0 <mmk_free@@Base>
  4038fa:	mov    rdi,QWORD PTR [rbx+0x40]
  4038fe:	call   403a30 <destroy_trampoline@@Base>
  403903:	mov    rdi,QWORD PTR [rbx+0x20]
  403907:	call   4040f0 <mmk_free@@Base>
  40390c:	mov    rdi,rbx
  40390f:	pop    rbx
  403910:	jmp    4040f0 <mmk_free@@Base>
  403915:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40391f:	nop

0000000000403920 <mmk_ask_ctx@@Base>:
  403920:	push   rbx
  403921:	mov    rbx,rdi
  403924:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403930:	mov    BYTE PTR [rax-0x20],0x1
  403937:	mov    rax,rbx
  40393a:	pop    rbx
  40393b:	jmp    rax
  40393d:	nop    DWORD PTR [rax]

0000000000403940 <create_trampoline@@Base>:
  403940:	push   r15
  403942:	push   r14
  403944:	push   r12
  403946:	push   rbx
  403947:	push   rax
  403948:	lea    r12,[rip+0x9f1]        # 404340 <mmk_trampoline_end@@Base>
  40394f:	mov    rax,r12
  403952:	sub    rax,QWORD PTR [rip+0x467f]        # 407fd8 <mmk_trampoline@@Base+0x3d74>
  403959:	cmp    rax,0x1000
  40395f:	jae    4039d6 <create_trampoline@@Base+0x96>
  403961:	mov    r14,rsi
  403964:	mov    r15,rdi
  403967:	mov    edi,0x0
  40396c:	mov    esi,0x1000
  403971:	mov    edx,0x7
  403976:	mov    ecx,0x22
  40397b:	mov    r8d,0xffffffff
  403981:	xor    r9d,r9d
  403984:	call   402080 <mmap@plt>
  403989:	cmp    rax,0xffffffffffffffff
  40398d:	je     4039fc <create_trampoline@@Base+0xbc>
  40398f:	mov    rbx,rax
  403992:	mov    QWORD PTR [rax],r15
  403995:	mov    QWORD PTR [rax+0x8],r14
  403999:	mov    r14,rax
  40399c:	add    r14,0x10
  4039a0:	lea    rsi,[rip+0x8bd]        # 404264 <mmk_trampoline@@Base>
  4039a7:	sub    r12,rsi
  4039aa:	mov    rdi,r14
  4039ad:	mov    rdx,r12
  4039b0:	call   4020f0 <memcpy@plt>
  4039b5:	mov    esi,0x1000
  4039ba:	mov    edx,0x5
  4039bf:	mov    rdi,rbx
  4039c2:	call   402130 <mprotect@plt>
  4039c7:	mov    rax,r14
  4039ca:	add    rsp,0x8
  4039ce:	pop    rbx
  4039cf:	pop    r12
  4039d1:	pop    r14
  4039d3:	pop    r15
  4039d5:	ret    
  4039d6:	mov    rax,QWORD PTR [rip+0x461b]        # 407ff8 <stderr@GLIBC_2.2.5>
  4039dd:	mov    rdi,QWORD PTR [rax]
  4039e0:	lea    rsi,[rip+0x1635]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4039e7:	lea    rdx,[rip+0x1868]        # 405256 <_IO_stdin_used@@Base+0x256>
  4039ee:	lea    r8,[rip+0x18b9]        # 4052ae <_IO_stdin_used@@Base+0x2ae>
  4039f5:	mov    ecx,0x2d
  4039fa:	jmp    403a20 <create_trampoline@@Base+0xe0>
  4039fc:	mov    rax,QWORD PTR [rip+0x45f5]        # 407ff8 <stderr@GLIBC_2.2.5>
  403a03:	mov    rdi,QWORD PTR [rax]
  403a06:	lea    rsi,[rip+0x160f]        # 40501c <_IO_stdin_used@@Base+0x1c>
  403a0d:	lea    rdx,[rip+0x1842]        # 405256 <_IO_stdin_used@@Base+0x256>
  403a14:	lea    r8,[rip+0x18ad]        # 4052c8 <_IO_stdin_used@@Base+0x2c8>
  403a1b:	mov    ecx,0x45
  403a20:	xor    eax,eax
  403a22:	call   4020e0 <fprintf@plt>
  403a27:	call   402040 <abort@plt>
  403a2c:	nop    DWORD PTR [rax+0x0]

0000000000403a30 <destroy_trampoline@@Base>:
  403a30:	add    rdi,0xfffffffffffffff0
  403a34:	mov    esi,0x1000
  403a39:	jmp    402110 <munmap@plt>
  403a3e:	xchg   ax,ax

0000000000403a40 <mmk_verify_set_times@@Base>:
  403a40:	push   rbx
  403a41:	mov    rbx,rdi
  403a44:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403a50:	mov    QWORD PTR [rax-0x10],rbx
  403a57:	pop    rbx
  403a58:	ret    
  403a59:	nop    DWORD PTR [rax+0x0]

0000000000403a60 <mmk_verify_times@@Base>:
  403a60:	push   rbx
  403a61:	mov    rbx,rdi
  403a64:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403a70:	mov    rdi,QWORD PTR [rax-0x10]
  403a77:	cmp    DWORD PTR [rbx+0x4],0x0
  403a7b:	je     403a87 <mmk_verify_times@@Base+0x27>
  403a7d:	xor    eax,eax
  403a7f:	test   rdi,rdi
  403a82:	sete   al
  403a85:	pop    rbx
  403a86:	ret    
  403a87:	mov    rcx,QWORD PTR [rbx+0x8]
  403a8b:	mov    rax,QWORD PTR [rbx+0x10]
  403a8f:	mov    rdx,rcx
  403a92:	or     rdx,rax
  403a95:	je     403ab1 <mmk_verify_times@@Base+0x51>
  403a97:	test   rax,rax
  403a9a:	cmove  rax,rdi
  403a9e:	cmp    rdi,rcx
  403aa1:	setae  cl
  403aa4:	cmp    rdi,rax
  403aa7:	setbe  al
  403aaa:	and    al,cl
  403aac:	movzx  eax,al
  403aaf:	pop    rbx
  403ab0:	ret    
  403ab1:	mov    rax,QWORD PTR [rbx+0x20]
  403ab5:	test   rax,rax
  403ab8:	je     403abd <mmk_verify_times@@Base+0x5d>
  403aba:	pop    rbx
  403abb:	jmp    rax
  403abd:	xor    eax,eax
  403abf:	cmp    QWORD PTR [rbx+0x18],rdi
  403ac3:	jmp    403a82 <mmk_verify_times@@Base+0x22>
  403ac5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403acf:	nop

0000000000403ad0 <mmk_verify_register_call@@Base>:
  403ad0:	push   rbp
  403ad1:	push   r15
  403ad3:	push   r14
  403ad5:	push   r13
  403ad7:	push   r12
  403ad9:	push   rbx
  403ada:	sub    rsp,0x18
  403ade:	mov    r12,rsi
  403ae1:	mov    QWORD PTR [rsp+0x10],rdi
  403ae6:	mov    QWORD PTR [rsp+0x8],rsi
  403aeb:	call   403830 <mmk_ctx@@Base>
  403af0:	mov    rdi,rax
  403af3:	call   403690 <mmk_stub_context@@Base>
  403af8:	mov    r15,rax
  403afb:	mov    r13,rax
  403afe:	cmp    QWORD PTR [rax+0x10],0x0
  403b03:	jne    403b24 <mmk_verify_register_call@@Base+0x54>
  403b05:	mov    edi,0x1000
  403b0a:	call   4040d0 <mmk_malloc@@Base>
  403b0f:	mov    QWORD PTR [r13+0x10],rax
  403b13:	test   rax,rax
  403b16:	je     403c30 <mmk_verify_register_call@@Base+0x160>
  403b1c:	mov    QWORD PTR [r13+0x20],0x1000
  403b24:	mov    rdi,r13
  403b27:	call   402f60 <mmk_mock_params_begin@@Base>
  403b2c:	test   rax,rax
  403b2f:	je     403b7a <mmk_verify_register_call@@Base+0xaa>
  403b31:	mov    rbx,rax
  403b34:	mov    rax,QWORD PTR [rsp+0x10]
  403b39:	lea    rbp,[rax+0x8]
  403b3d:	lea    r14,[r12-0x8]
  403b42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b4c:	nop    DWORD PTR [rax+0x0]
  403b50:	lea    rdi,[rbx+0x8]
  403b54:	mov    rsi,rbp
  403b57:	mov    rdx,r14
  403b5a:	call   403c90 <mmk_memcmp@@Base>
  403b5f:	test   eax,eax
  403b61:	je     403c10 <mmk_verify_register_call@@Base+0x140>
  403b67:	mov    rdi,r13
  403b6a:	mov    rsi,rbx
  403b6d:	call   402f80 <mmk_mock_params_next@@Base>
  403b72:	mov    rbx,rax
  403b75:	test   rax,rax
  403b78:	jne    403b50 <mmk_verify_register_call@@Base+0x80>
  403b7a:	add    r15,0x18
  403b7e:	mov    rdi,QWORD PTR [r13+0x18]
  403b82:	mov    rsi,QWORD PTR [r13+0x20]
  403b86:	lea    rax,[rdi+r12*1]
  403b8a:	add    rax,0x8
  403b8e:	cmp    rax,rsi
  403b91:	jae    403ba0 <mmk_verify_register_call@@Base+0xd0>
  403b93:	mov    rax,QWORD PTR [r13+0x10]
  403b97:	jmp    403bc9 <mmk_verify_register_call@@Base+0xf9>
  403b99:	nop    DWORD PTR [rax+0x0]
  403ba0:	add    rsi,0x1000
  403ba7:	cmp    rax,rsi
  403baa:	jae    403ba0 <mmk_verify_register_call@@Base+0xd0>
  403bac:	mov    QWORD PTR [r13+0x20],rsi
  403bb0:	mov    rdi,QWORD PTR [r13+0x10]
  403bb4:	call   4040e0 <mmk_realloc@@Base>
  403bb9:	mov    QWORD PTR [r13+0x10],rax
  403bbd:	test   rax,rax
  403bc0:	je     403c56 <mmk_verify_register_call@@Base+0x186>
  403bc6:	mov    rdi,QWORD PTR [r15]
  403bc9:	add    rdi,rax
  403bcc:	lea    rsi,[rsp+0x8]
  403bd1:	mov    edx,0x8
  403bd6:	call   403cd0 <mmk_memcpy@@Base>
  403bdb:	mov    rax,QWORD PTR [r13+0x10]
  403bdf:	mov    rcx,QWORD PTR [r13+0x18]
  403be3:	lea    rdi,[rax+rcx*1]
  403be7:	add    rdi,0x8
  403beb:	mov    rdx,QWORD PTR [rsp+0x8]
  403bf0:	mov    rsi,QWORD PTR [rsp+0x10]
  403bf5:	call   403cd0 <mmk_memcpy@@Base>
  403bfa:	mov    QWORD PTR [rax],0x1
  403c01:	mov    rax,QWORD PTR [rsp+0x8]
  403c06:	add    rax,0x8
  403c0a:	mov    rcx,QWORD PTR [r13+0x18]
  403c0e:	jmp    403c1b <mmk_verify_register_call@@Base+0x14b>
  403c10:	mov    rax,QWORD PTR [rbx]
  403c13:	mov    ecx,0x1
  403c18:	mov    r15,rbx
  403c1b:	add    rcx,rax
  403c1e:	mov    QWORD PTR [r15],rcx
  403c21:	add    rsp,0x18
  403c25:	pop    rbx
  403c26:	pop    r12
  403c28:	pop    r13
  403c2a:	pop    r14
  403c2c:	pop    r15
  403c2e:	pop    rbp
  403c2f:	ret    
  403c30:	mov    rax,QWORD PTR [rip+0x43c1]        # 407ff8 <stderr@GLIBC_2.2.5>
  403c37:	mov    rdi,QWORD PTR [rax]
  403c3a:	lea    rsi,[rip+0x13db]        # 40501c <_IO_stdin_used@@Base+0x1c>
  403c41:	lea    rdx,[rip+0x1692]        # 4052da <_IO_stdin_used@@Base+0x2da>
  403c48:	lea    r8,[rip+0x16df]        # 40532e <_IO_stdin_used@@Base+0x32e>
  403c4f:	mov    ecx,0x4f
  403c54:	jmp    403c7a <mmk_verify_register_call@@Base+0x1aa>
  403c56:	mov    rax,QWORD PTR [rip+0x439b]        # 407ff8 <stderr@GLIBC_2.2.5>
  403c5d:	mov    rdi,QWORD PTR [rax]
  403c60:	lea    rsi,[rip+0x13b5]        # 40501c <_IO_stdin_used@@Base+0x1c>
  403c67:	lea    rdx,[rip+0x166c]        # 4052da <_IO_stdin_used@@Base+0x2da>
  403c6e:	lea    r8,[rip+0x16b9]        # 40532e <_IO_stdin_used@@Base+0x32e>
  403c75:	mov    ecx,0x5b
  403c7a:	xor    eax,eax
  403c7c:	call   4020e0 <fprintf@plt>
  403c81:	call   402040 <abort@plt>
  403c86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403c90 <mmk_memcmp@@Base>:
  403c90:	test   rdx,rdx
  403c93:	je     403cb5 <mmk_memcmp@@Base+0x25>
  403c95:	xor    eax,eax
  403c97:	nop    WORD PTR [rax+rax*1+0x0]
  403ca0:	movzx  ecx,BYTE PTR [rsi+rax*1]
  403ca4:	cmp    BYTE PTR [rdi+rax*1],cl
  403ca7:	jne    403cb8 <mmk_memcmp@@Base+0x28>
  403ca9:	add    rax,0x1
  403cad:	cmp    rdx,rax
  403cb0:	jne    403ca0 <mmk_memcmp@@Base+0x10>
  403cb2:	xor    eax,eax
  403cb4:	ret    
  403cb5:	xor    eax,eax
  403cb7:	ret    
  403cb8:	setge  al
  403cbb:	movzx  eax,al
  403cbe:	lea    eax,[rax+rax*1]
  403cc1:	add    eax,0xffffffff
  403cc4:	ret    
  403cc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ccf:	nop

0000000000403cd0 <mmk_memcpy@@Base>:
  403cd0:	test   rdx,rdx
  403cd3:	je     403f5d <mmk_memcpy@@Base+0x28d>
  403cd9:	cmp    rdx,0x7f
  403cdd:	jbe    403cf9 <mmk_memcpy@@Base+0x29>
  403cdf:	lea    rax,[rsi+rdx*1]
  403ce3:	cmp    rax,rdi
  403ce6:	jbe    403d9c <mmk_memcpy@@Base+0xcc>
  403cec:	lea    rax,[rdi+rdx*1]
  403cf0:	cmp    rax,rsi
  403cf3:	jbe    403d9c <mmk_memcpy@@Base+0xcc>
  403cf9:	mov    r10,rdi
  403cfc:	lea    r8,[rdx-0x1]
  403d00:	mov    r9,rdx
  403d03:	and    r9,0x7
  403d07:	je     403d2a <mmk_memcpy@@Base+0x5a>
  403d09:	xor    eax,eax
  403d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  403d10:	movzx  ecx,BYTE PTR [rsi+rax*1]
  403d14:	mov    BYTE PTR [r10+rax*1],cl
  403d18:	add    rax,0x1
  403d1c:	cmp    r9,rax
  403d1f:	jne    403d10 <mmk_memcpy@@Base+0x40>
  403d21:	add    r10,rax
  403d24:	add    rsi,rax
  403d27:	sub    rdx,rax
  403d2a:	cmp    r8,0x7
  403d2e:	jb     403f5d <mmk_memcpy@@Base+0x28d>
  403d34:	xor    eax,eax
  403d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d40:	movzx  ecx,BYTE PTR [rsi+rax*1]
  403d44:	mov    BYTE PTR [r10+rax*1],cl
  403d48:	movzx  ecx,BYTE PTR [rsi+rax*1+0x1]
  403d4d:	mov    BYTE PTR [r10+rax*1+0x1],cl
  403d52:	movzx  ecx,BYTE PTR [rsi+rax*1+0x2]
  403d57:	mov    BYTE PTR [r10+rax*1+0x2],cl
  403d5c:	movzx  ecx,BYTE PTR [rsi+rax*1+0x3]
  403d61:	mov    BYTE PTR [r10+rax*1+0x3],cl
  403d66:	movzx  ecx,BYTE PTR [rsi+rax*1+0x4]
  403d6b:	mov    BYTE PTR [r10+rax*1+0x4],cl
  403d70:	movzx  ecx,BYTE PTR [rsi+rax*1+0x5]
  403d75:	mov    BYTE PTR [r10+rax*1+0x5],cl
  403d7a:	movzx  ecx,BYTE PTR [rsi+rax*1+0x6]
  403d7f:	mov    BYTE PTR [r10+rax*1+0x6],cl
  403d84:	movzx  ecx,BYTE PTR [rsi+rax*1+0x7]
  403d89:	mov    BYTE PTR [r10+rax*1+0x7],cl
  403d8e:	add    rax,0x8
  403d92:	cmp    rdx,rax
  403d95:	jne    403d40 <mmk_memcpy@@Base+0x70>
  403d97:	jmp    403f5d <mmk_memcpy@@Base+0x28d>
  403d9c:	mov    r8,rdx
  403d9f:	and    r8,0xffffffffffffff80
  403da3:	lea    rcx,[r8-0x80]
  403da7:	mov    rax,rcx
  403daa:	shr    rax,0x7
  403dae:	add    rax,0x1
  403db2:	mov    r9d,eax
  403db5:	and    r9d,0x3
  403db9:	cmp    rcx,0x180
  403dc0:	jae    403dd2 <mmk_memcpy@@Base+0x102>
  403dc2:	xor    eax,eax
  403dc4:	test   r9,r9
  403dc7:	jne    403f0b <mmk_memcpy@@Base+0x23b>
  403dcd:	jmp    403f58 <mmk_memcpy@@Base+0x288>
  403dd2:	mov    ecx,0x1
  403dd7:	sub    rcx,rax
  403dda:	add    rcx,r9
  403ddd:	add    rcx,0xffffffffffffffff
  403de1:	xor    eax,eax
  403de3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ded:	nop    DWORD PTR [rax]
  403df0:	vmovups ymm0,YMMWORD PTR [rsi+rax*1]
  403df5:	vmovups ymm1,YMMWORD PTR [rsi+rax*1+0x20]
  403dfb:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0x40]
  403e01:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0x60]
  403e07:	vmovups YMMWORD PTR [rdi+rax*1],ymm0
  403e0c:	vmovups YMMWORD PTR [rdi+rax*1+0x20],ymm1
  403e12:	vmovups YMMWORD PTR [rdi+rax*1+0x40],ymm2
  403e18:	vmovups YMMWORD PTR [rdi+rax*1+0x60],ymm3
  403e1e:	vmovups ymm0,YMMWORD PTR [rsi+rax*1+0x80]
  403e27:	vmovups ymm1,YMMWORD PTR [rsi+rax*1+0xa0]
  403e30:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0xc0]
  403e39:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0xe0]
  403e42:	vmovups YMMWORD PTR [rdi+rax*1+0x80],ymm0
  403e4b:	vmovups YMMWORD PTR [rdi+rax*1+0xa0],ymm1
  403e54:	vmovups YMMWORD PTR [rdi+rax*1+0xc0],ymm2
  403e5d:	vmovups YMMWORD PTR [rdi+rax*1+0xe0],ymm3
  403e66:	vmovups ymm0,YMMWORD PTR [rsi+rax*1+0x100]
  403e6f:	vmovups ymm1,YMMWORD PTR [rsi+rax*1+0x120]
  403e78:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0x140]
  403e81:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0x160]
  403e8a:	vmovups YMMWORD PTR [rdi+rax*1+0x100],ymm0
  403e93:	vmovups YMMWORD PTR [rdi+rax*1+0x120],ymm1
  403e9c:	vmovups YMMWORD PTR [rdi+rax*1+0x140],ymm2
  403ea5:	vmovups YMMWORD PTR [rdi+rax*1+0x160],ymm3
  403eae:	vmovups ymm0,YMMWORD PTR [rsi+rax*1+0x180]
  403eb7:	vmovups ymm1,YMMWORD PTR [rsi+rax*1+0x1a0]
  403ec0:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0x1c0]
  403ec9:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0x1e0]
  403ed2:	vmovups YMMWORD PTR [rdi+rax*1+0x180],ymm0
  403edb:	vmovups YMMWORD PTR [rdi+rax*1+0x1a0],ymm1
  403ee4:	vmovups YMMWORD PTR [rdi+rax*1+0x1c0],ymm2
  403eed:	vmovups YMMWORD PTR [rdi+rax*1+0x1e0],ymm3
  403ef6:	add    rax,0x200
  403efc:	add    rcx,0x4
  403f00:	jne    403df0 <mmk_memcpy@@Base+0x120>
  403f06:	test   r9,r9
  403f09:	je     403f58 <mmk_memcpy@@Base+0x288>
  403f0b:	add    rax,0x60
  403f0f:	neg    r9
  403f12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f1c:	nop    DWORD PTR [rax+0x0]
  403f20:	vmovups ymm0,YMMWORD PTR [rsi+rax*1-0x60]
  403f26:	vmovups ymm1,YMMWORD PTR [rsi+rax*1-0x40]
  403f2c:	vmovups ymm2,YMMWORD PTR [rsi+rax*1-0x20]
  403f32:	vmovups ymm3,YMMWORD PTR [rsi+rax*1]
  403f37:	vmovups YMMWORD PTR [rdi+rax*1-0x60],ymm0
  403f3d:	vmovups YMMWORD PTR [rdi+rax*1-0x40],ymm1
  403f43:	vmovups YMMWORD PTR [rdi+rax*1-0x20],ymm2
  403f49:	vmovups YMMWORD PTR [rdi+rax*1],ymm3
  403f4e:	sub    rax,0xffffffffffffff80
  403f52:	add    r9,0x1
  403f56:	jne    403f20 <mmk_memcpy@@Base+0x250>
  403f58:	cmp    r8,rdx
  403f5b:	jne    403f64 <mmk_memcpy@@Base+0x294>
  403f5d:	mov    rax,rdi
  403f60:	vzeroupper 
  403f63:	ret    
  403f64:	lea    r10,[rdi+r8*1]
  403f68:	add    rsi,r8
  403f6b:	sub    rdx,r8
  403f6e:	jmp    403cfc <mmk_memcpy@@Base+0x2c>
  403f73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f7d:	nop    DWORD PTR [rax]

0000000000403f80 <mmk_strneq@@Base>:
  403f80:	mov    al,BYTE PTR [rdi]
  403f82:	test   al,al
  403f84:	je     403fb3 <mmk_strneq@@Base+0x33>
  403f86:	add    rdi,0x1
  403f8a:	nop    WORD PTR [rax+rax*1+0x0]
  403f90:	test   rdx,rdx
  403f93:	je     403fb3 <mmk_strneq@@Base+0x33>
  403f95:	movzx  ecx,BYTE PTR [rsi]
  403f98:	test   cl,cl
  403f9a:	je     403fb3 <mmk_strneq@@Base+0x33>
  403f9c:	cmp    al,cl
  403f9e:	jne    403fc7 <mmk_strneq@@Base+0x47>
  403fa0:	add    rsi,0x1
  403fa4:	add    rdx,0xffffffffffffffff
  403fa8:	movzx  eax,BYTE PTR [rdi]
  403fab:	add    rdi,0x1
  403faf:	test   al,al
  403fb1:	jne    403f90 <mmk_strneq@@Base+0x10>
  403fb3:	test   rdx,rdx
  403fb6:	je     403fc1 <mmk_strneq@@Base+0x41>
  403fb8:	xor    eax,eax
  403fba:	cmp    BYTE PTR [rsi],0x0
  403fbd:	sete   al
  403fc0:	ret    
  403fc1:	mov    eax,0x1
  403fc6:	ret    
  403fc7:	xor    eax,eax
  403fc9:	ret    
  403fca:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403fd0 <mmk_strchr@@Base>:
  403fd0:	mov    al,BYTE PTR [rdi]
  403fd2:	test   al,al
  403fd4:	jne    403fec <mmk_strchr@@Base+0x1c>
  403fd6:	jmp    403ff7 <mmk_strchr@@Base+0x27>
  403fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  403fe0:	movzx  eax,BYTE PTR [rdi+0x1]
  403fe4:	add    rdi,0x1
  403fe8:	test   al,al
  403fea:	je     403ff7 <mmk_strchr@@Base+0x27>
  403fec:	movsx  eax,al
  403fef:	cmp    eax,esi
  403ff1:	jne    403fe0 <mmk_strchr@@Base+0x10>
  403ff3:	mov    rax,rdi
  403ff6:	ret    
  403ff7:	xor    edi,edi
  403ff9:	mov    rax,rdi
  403ffc:	ret    
  403ffd:	nop    DWORD PTR [rax]

0000000000404000 <mmk_strcpy@@Base>:
  404000:	mov    al,BYTE PTR [rsi]
  404002:	test   al,al
  404004:	je     404021 <mmk_strcpy@@Base+0x21>
  404006:	add    rsi,0x1
  40400a:	nop    WORD PTR [rax+rax*1+0x0]
  404010:	mov    BYTE PTR [rdi],al
  404012:	add    rdi,0x1
  404016:	movzx  eax,BYTE PTR [rsi]
  404019:	add    rsi,0x1
  40401d:	test   al,al
  40401f:	jne    404010 <mmk_strcpy@@Base+0x10>
  404021:	mov    BYTE PTR [rdi],0x0
  404024:	mov    rax,rdi
  404027:	ret    
  404028:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404030 <mmk_strncpy@@Base>:
  404030:	test   rdx,rdx
  404033:	je     40406b <mmk_strncpy@@Base+0x3b>
  404035:	mov    al,BYTE PTR [rsi]
  404037:	test   al,al
  404039:	je     40406b <mmk_strncpy@@Base+0x3b>
  40403b:	add    rdx,0xffffffffffffffff
  40403f:	xor    ecx,ecx
  404041:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40404b:	nop    DWORD PTR [rax+rax*1+0x0]
  404050:	mov    BYTE PTR [rdi+rcx*1],al
  404053:	lea    r8,[rcx+0x1]
  404057:	cmp    rdx,rcx
  40405a:	je     404068 <mmk_strncpy@@Base+0x38>
  40405c:	movzx  eax,BYTE PTR [rsi+rcx*1+0x1]
  404061:	mov    rcx,r8
  404064:	test   al,al
  404066:	jne    404050 <mmk_strncpy@@Base+0x20>
  404068:	add    rdi,r8
  40406b:	mov    BYTE PTR [rdi],0x0
  40406e:	mov    rax,rdi
  404071:	ret    
  404072:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40407c:	nop    DWORD PTR [rax+0x0]

0000000000404080 <mmk_strlen@@Base>:
  404080:	cmp    BYTE PTR [rdi],0x0
  404083:	je     40409c <mmk_strlen@@Base+0x1c>
  404085:	xor    eax,eax
  404087:	nop    WORD PTR [rax+rax*1+0x0]
  404090:	cmp    BYTE PTR [rdi+rax*1+0x1],0x0
  404095:	lea    rax,[rax+0x1]
  404099:	jne    404090 <mmk_strlen@@Base+0x10>
  40409b:	ret    
  40409c:	xor    eax,eax
  40409e:	ret    
  40409f:	nop

00000000004040a0 <mmk_isspace@@Base>:
  4040a0:	cmp    edi,0x20
  4040a3:	ja     4040bd <mmk_isspace@@Base+0x1d>
  4040a5:	mov    eax,0x1
  4040aa:	mov    ecx,edi
  4040ac:	movabs rdx,0x100002200
  4040b6:	bt     rdx,rcx
  4040ba:	jae    4040bd <mmk_isspace@@Base+0x1d>
  4040bc:	ret    
  4040bd:	xor    eax,eax
  4040bf:	cmp    edi,0xa
  4040c2:	sete   al
  4040c5:	ret    
  4040c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004040d0 <mmk_malloc@@Base>:
  4040d0:	lea    rax,[rip+0x4021]        # 4080f8 <mmk_malloc_@@Base>
  4040d7:	jmp    QWORD PTR [rax]
  4040d9:	nop    DWORD PTR [rax+0x0]

00000000004040e0 <mmk_realloc@@Base>:
  4040e0:	lea    rax,[rip+0x4001]        # 4080e8 <mmk_realloc_@@Base>
  4040e7:	mov    rax,QWORD PTR [rax]
  4040ea:	jmp    rax
  4040ec:	nop    DWORD PTR [rax+0x0]

00000000004040f0 <mmk_free@@Base>:
  4040f0:	lea    rax,[rip+0x3ff9]        # 4080f0 <mmk_free_@@Base>
  4040f7:	jmp    QWORD PTR [rax]
  4040f9:	nop    DWORD PTR [rax+0x0]

0000000000404100 <mmk_init_vital_functions@@Base>:
  404100:	push   rbx
  404101:	mov    rbx,rdi
  404104:	xor    edi,edi
  404106:	call   402150 <malloc@plt>
  40410b:	xor    esi,esi
  40410d:	mov    rdi,rax
  404110:	call   402100 <realloc@plt>
  404115:	mov    rdi,rax
  404118:	call   402030 <free@plt>
  40411d:	lea    rsi,[rip+0x121a]        # 40533e <_IO_stdin_used@@Base+0x33e>
  404124:	mov    rdi,rbx
  404127:	call   403640 <plt_get_real_fn@@Base>
  40412c:	lea    rcx,[rip+0x3fc5]        # 4080f8 <mmk_malloc_@@Base>
  404133:	mov    QWORD PTR [rcx],rax
  404136:	test   rax,rax
  404139:	je     404179 <mmk_init_vital_functions@@Base+0x79>
  40413b:	lea    rsi,[rip+0x128d]        # 4053cf <_IO_stdin_used@@Base+0x3cf>
  404142:	mov    rdi,rbx
  404145:	call   403640 <plt_get_real_fn@@Base>
  40414a:	lea    rcx,[rip+0x3f97]        # 4080e8 <mmk_realloc_@@Base>
  404151:	mov    QWORD PTR [rcx],rax
  404154:	test   rax,rax
  404157:	je     40419f <mmk_init_vital_functions@@Base+0x9f>
  404159:	lea    rsi,[rip+0x12af]        # 40540f <_IO_stdin_used@@Base+0x40f>
  404160:	mov    rdi,rbx
  404163:	call   403640 <plt_get_real_fn@@Base>
  404168:	lea    rcx,[rip+0x3f81]        # 4080f0 <mmk_free_@@Base>
  40416f:	mov    QWORD PTR [rcx],rax
  404172:	test   rax,rax
  404175:	je     4041c5 <mmk_init_vital_functions@@Base+0xc5>
  404177:	pop    rbx
  404178:	ret    
  404179:	mov    rax,QWORD PTR [rip+0x3e78]        # 407ff8 <stderr@GLIBC_2.2.5>
  404180:	mov    rdi,QWORD PTR [rax]
  404183:	lea    rsi,[rip+0xe92]        # 40501c <_IO_stdin_used@@Base+0x1c>
  40418a:	lea    rdx,[rip+0x11b4]        # 405345 <_IO_stdin_used@@Base+0x345>
  404191:	lea    r8,[rip+0x1201]        # 405399 <_IO_stdin_used@@Base+0x399>
  404198:	mov    ecx,0x58
  40419d:	jmp    4041e9 <mmk_init_vital_functions@@Base+0xe9>
  40419f:	mov    rax,QWORD PTR [rip+0x3e52]        # 407ff8 <stderr@GLIBC_2.2.5>
  4041a6:	mov    rdi,QWORD PTR [rax]
  4041a9:	lea    rsi,[rip+0xe6c]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4041b0:	lea    rdx,[rip+0x118e]        # 405345 <_IO_stdin_used@@Base+0x345>
  4041b7:	lea    r8,[rip+0x1219]        # 4053d7 <_IO_stdin_used@@Base+0x3d7>
  4041be:	mov    ecx,0x59
  4041c3:	jmp    4041e9 <mmk_init_vital_functions@@Base+0xe9>
  4041c5:	mov    rax,QWORD PTR [rip+0x3e2c]        # 407ff8 <stderr@GLIBC_2.2.5>
  4041cc:	mov    rdi,QWORD PTR [rax]
  4041cf:	lea    rsi,[rip+0xe46]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4041d6:	lea    rdx,[rip+0x1168]        # 405345 <_IO_stdin_used@@Base+0x345>
  4041dd:	lea    r8,[rip+0x1230]        # 405414 <_IO_stdin_used@@Base+0x414>
  4041e4:	mov    ecx,0x5a
  4041e9:	xor    eax,eax
  4041eb:	call   4020e0 <fprintf@plt>
  4041f0:	call   402040 <abort@plt>
  4041f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041ff:	nop

0000000000404200 <mmk_when_init@@Base>:
  404200:	push   rbx
  404201:	mov    rbx,rdi
  404204:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404210:	mov    QWORD PTR [rax-0x8],rbx
  404217:	pop    rbx
  404218:	ret    
  404219:	nop    DWORD PTR [rax+0x0]

0000000000404220 <mmk_when_get_result@@Base>:
  404220:	push   rax
  404221:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  40422d:	mov    rax,QWORD PTR [rax-0x8]
  404234:	pop    rcx
  404235:	ret    
  404236:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404240 <mmk_when_impl@@Base>:
  404240:	push   r14
  404242:	push   rbx
  404243:	push   rax
  404244:	mov    rbx,rsi
  404247:	mov    r14,rdi
  40424a:	call   402ce0 <mmk_matcher_ctx@@Base>
  40424f:	mov    QWORD PTR [rbx],rax
  404252:	mov    rax,QWORD PTR [r14]
  404255:	mov    QWORD PTR [rbx+0x8],rax
  404259:	mov    QWORD PTR [r14],rbx
  40425c:	add    rsp,0x8
  404260:	pop    rbx
  404261:	pop    r14
  404263:	ret    

0000000000404264 <mmk_trampoline@@Base>:
  404264:	call   404269 <mmk_trampoline@@Base+0x5>
  404269:	pop    rax
  40426a:	push   rax
  40426b:	mov    rax,QWORD PTR [rax-0x15]
  404272:	push   rdi
  404273:	push   rsi
  404274:	push   rdx
  404275:	push   rcx
  404276:	push   r8
  404278:	push   r9
  40427a:	sub    rsp,0x10
  40427e:	movdqu XMMWORD PTR [rsp],xmm0
  404283:	sub    rsp,0x10
  404287:	movdqu XMMWORD PTR [rsp],xmm1
  40428c:	sub    rsp,0x10
  404290:	movdqu XMMWORD PTR [rsp],xmm2
  404295:	sub    rsp,0x10
  404299:	movdqu XMMWORD PTR [rsp],xmm3
  40429e:	sub    rsp,0x10
  4042a2:	movdqu XMMWORD PTR [rsp],xmm4
  4042a7:	sub    rsp,0x10
  4042ab:	movdqu XMMWORD PTR [rsp],xmm5
  4042b0:	sub    rsp,0x10
  4042b4:	movdqu XMMWORD PTR [rsp],xmm6
  4042b9:	sub    rsp,0x10
  4042bd:	movdqu XMMWORD PTR [rsp],xmm7
  4042c2:	mov    rdi,rax
  4042c5:	push   rax
  4042c6:	mov    rax,QWORD PTR [rax+0x8]
  4042ca:	call   rax
  4042cc:	pop    rax
  4042cd:	mov    rax,QWORD PTR [rax]
  4042d0:	call   rax
  4042d2:	movdqu xmm7,XMMWORD PTR [rsp]
  4042d7:	add    rsp,0x10
  4042db:	movdqu xmm6,XMMWORD PTR [rsp]
  4042e0:	add    rsp,0x10
  4042e4:	movdqu xmm5,XMMWORD PTR [rsp]
  4042e9:	add    rsp,0x10
  4042ed:	movdqu xmm4,XMMWORD PTR [rsp]
  4042f2:	add    rsp,0x10
  4042f6:	movdqu xmm3,XMMWORD PTR [rsp]
  4042fb:	add    rsp,0x10
  4042ff:	movdqu xmm2,XMMWORD PTR [rsp]
  404304:	add    rsp,0x10
  404308:	movdqu xmm1,XMMWORD PTR [rsp]
  40430d:	add    rsp,0x10
  404311:	movdqu xmm0,XMMWORD PTR [rsp]
  404316:	add    rsp,0x10
  40431a:	pop    r9
  40431c:	pop    r8
  40431e:	pop    rcx
  40431f:	pop    rdx
  404320:	pop    rsi
  404321:	pop    rdi
  404322:	test   rax,rax
  404325:	jne    404331 <mmk_trampoline@@Base+0xcd>
  404327:	pop    rax
  404328:	mov    rax,QWORD PTR [rax-0xd]
  40432f:	jmp    rax
  404331:	pop    rax
  404332:	mov    rax,QWORD PTR [rax-0x15]
  404339:	mov    rax,QWORD PTR [rax+0x10]
  40433d:	call   rax
  40433f:	ret    

0000000000404340 <mmk_trampoline_end@@Base>:
  404340:	nop
  404341:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40434b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404350 <__libc_csu_init@@Base>:
  404350:	endbr64 
  404354:	push   r15
  404356:	lea    r15,[rip+0x3a53]        # 407db0 <_IO_stdin_used@@Base+0x2db0>
  40435d:	push   r14
  40435f:	mov    r14,rdx
  404362:	push   r13
  404364:	mov    r13,rsi
  404367:	push   r12
  404369:	mov    r12d,edi
  40436c:	push   rbp
  40436d:	lea    rbp,[rip+0x3a44]        # 407db8 <_IO_stdin_used@@Base+0x2db8>
  404374:	push   rbx
  404375:	sub    rbp,r15
  404378:	sub    rsp,0x8
  40437c:	call   402000 <free@plt-0x30>
  404381:	sar    rbp,0x3
  404385:	je     4043a6 <__libc_csu_init@@Base+0x56>
  404387:	xor    ebx,ebx
  404389:	nop    DWORD PTR [rax+0x0]
  404390:	mov    rdx,r14
  404393:	mov    rsi,r13
  404396:	mov    edi,r12d
  404399:	call   QWORD PTR [r15+rbx*8]
  40439d:	add    rbx,0x1
  4043a1:	cmp    rbp,rbx
  4043a4:	jne    404390 <__libc_csu_init@@Base+0x40>
  4043a6:	add    rsp,0x8
  4043aa:	pop    rbx
  4043ab:	pop    rbp
  4043ac:	pop    r12
  4043ae:	pop    r13
  4043b0:	pop    r14
  4043b2:	pop    r15
  4043b4:	ret    
  4043b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004043c0 <__libc_csu_fini@@Base>:
  4043c0:	endbr64 
  4043c4:	ret    

Disassembly of section .fini:

00000000004043c8 <.fini>:
  4043c8:	endbr64 
  4043cc:	sub    rsp,0x8
  4043d0:	add    rsp,0x8
  4043d4:	ret    
