
../repos/Snaipe-Mimick-1dc4659/sample/strdup/strdup_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x5fd9]        # 407fe8 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <__snprintf_chk@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <__snprintf_chk@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x5fe2]        # 408008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0x5fe4]        # 408010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <__snprintf_chk@plt>:
  402030:	jmp    QWORD PTR [rip+0x5fe2]        # 408018 <__snprintf_chk@GLIBC_2.3.4>
  402036:	push   0x0
  40203b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402040 <free@plt>:
  402040:	jmp    QWORD PTR [rip+0x5fda]        # 408020 <free@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402050 <abort@plt>:
  402050:	jmp    QWORD PTR [rip+0x5fd2]        # 408028 <abort@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402060 <__errno_location@plt>:
  402060:	jmp    QWORD PTR [rip+0x5fca]        # 408030 <__errno_location@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402070 <strlen@plt>:
  402070:	jmp    QWORD PTR [rip+0x5fc2]        # 408038 <strlen@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402080 <__stack_chk_fail@plt>:
  402080:	jmp    QWORD PTR [rip+0x5fba]        # 408040 <__stack_chk_fail@GLIBC_2.4>
  402086:	push   0x5
  40208b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402090 <mmap@plt>:
  402090:	jmp    QWORD PTR [rip+0x5fb2]        # 408048 <mmap@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020a0 <strchr@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x5faa]        # 408050 <strchr@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020b0 <__tls_get_addr@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x5fa2]        # 408058 <__tls_get_addr@GLIBC_2.3>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020c0 <strcmp@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x5f9a]        # 408060 <strcmp@GLIBC_2.2.5>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020d0 <fprintf@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x5f92]        # 408068 <fprintf@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020e0 <memcpy@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x5f8a]        # 408070 <memcpy@GLIBC_2.14>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020f0 <realloc@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x5f82]        # 408078 <realloc@GLIBC_2.2.5>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402100 <munmap@plt>:
  402100:	jmp    QWORD PTR [rip+0x5f7a]        # 408080 <munmap@GLIBC_2.2.5>
  402106:	push   0xd
  40210b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402110 <my_strdup@plt>:
  402110:	jmp    QWORD PTR [rip+0x5f72]        # 408088 <my_strdup>
  402116:	push   0xe
  40211b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402120 <mprotect@plt>:
  402120:	jmp    QWORD PTR [rip+0x5f6a]        # 408090 <mprotect@GLIBC_2.2.5>
  402126:	push   0xf
  40212b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402130 <__fprintf_chk@plt>:
  402130:	jmp    QWORD PTR [rip+0x5f62]        # 408098 <__fprintf_chk@GLIBC_2.3.4>
  402136:	push   0x10
  40213b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402140 <strstr@plt>:
  402140:	jmp    QWORD PTR [rip+0x5f5a]        # 4080a0 <strstr@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <__snprintf_chk@plt-0x10>

Disassembly of section .plt.got:

0000000000402150 <malloc@plt>:
  402150:	jmp    QWORD PTR [rip+0x5e9a]        # 407ff0 <malloc@GLIBC_2.2.5>
  402156:	xchg   ax,ax

Disassembly of section .text:

0000000000402160 <_start@@Base>:
  402160:	endbr64 
  402164:	xor    ebp,ebp
  402166:	mov    r9,rdx
  402169:	pop    rsi
  40216a:	mov    rdx,rsp
  40216d:	and    rsp,0xfffffffffffffff0
  402171:	push   rax
  402172:	push   rsp
  402173:	mov    r8,0x4044c0
  40217a:	mov    rcx,0x404450
  402181:	mov    rdi,0x402a38
  402188:	call   QWORD PTR [rip+0x5e52]        # 407fe0 <__libc_start_main@GLIBC_2.2.5>
  40218e:	hlt    
  40218f:	nop
  402190:	endbr64 
  402194:	ret    
  402195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40219f:	nop
  4021a0:	mov    eax,0x4080c8
  4021a5:	cmp    rax,0x4080c8
  4021ab:	je     4021c0 <_start@@Base+0x60>
  4021ad:	mov    eax,0x0
  4021b2:	test   rax,rax
  4021b5:	je     4021c0 <_start@@Base+0x60>
  4021b7:	mov    edi,0x4080c8
  4021bc:	jmp    rax
  4021be:	xchg   ax,ax
  4021c0:	ret    
  4021c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	mov    esi,0x4080c8
  4021d5:	sub    rsi,0x4080c8
  4021dc:	sar    rsi,0x3
  4021e0:	mov    rax,rsi
  4021e3:	shr    rax,0x3f
  4021e7:	add    rsi,rax
  4021ea:	sar    rsi,1
  4021ed:	je     402200 <_start@@Base+0xa0>
  4021ef:	mov    eax,0x0
  4021f4:	test   rax,rax
  4021f7:	je     402200 <_start@@Base+0xa0>
  4021f9:	mov    edi,0x4080c8
  4021fe:	jmp    rax
  402200:	ret    
  402201:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40220c:	nop    DWORD PTR [rax+0x0]
  402210:	endbr64 
  402214:	cmp    BYTE PTR [rip+0x5eb5],0x0        # 4080d0 <__bss_start@@Base+0x8>
  40221b:	jne    402230 <_start@@Base+0xd0>
  40221d:	push   rbp
  40221e:	mov    rbp,rsp
  402221:	call   4021a0 <_start@@Base+0x40>
  402226:	mov    BYTE PTR [rip+0x5ea3],0x1        # 4080d0 <__bss_start@@Base+0x8>
  40222d:	pop    rbp
  40222e:	ret    
  40222f:	nop
  402230:	ret    
  402231:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40223c:	nop    DWORD PTR [rax+0x0]
  402240:	endbr64 
  402244:	jmp    4021d0 <_start@@Base+0x70>
  402246:	endbr64 
  40224a:	push   rbp
  40224b:	mov    rbp,rsp
  40224e:	sub    rsp,0xc0
  402255:	mov    QWORD PTR [rbp-0xb8],rdi
  40225c:	mov    rax,QWORD PTR fs:0x28
  402265:	mov    QWORD PTR [rbp-0x8],rax
  402269:	xor    eax,eax
  40226b:	call   402c30 <mmk_matcher_ctx@@Base>
  402270:	mov    QWORD PTR [rbp-0x88],rax
  402277:	cmp    QWORD PTR [rbp-0x88],0x0
  40227f:	je     4024ea <_start@@Base+0x38a>
  402285:	call   403afa <mmk_ctx@@Base>
  40228a:	mov    rdi,rax
  40228d:	call   403721 <mmk_stub_context@@Base>
  402292:	mov    QWORD PTR [rbp-0x80],rax
  402296:	mov    rax,QWORD PTR [rbp-0x88]
  40229d:	mov    eax,DWORD PTR [rax]
  40229f:	test   eax,eax
  4022a1:	jne    402303 <_start@@Base+0x1a3>
  4022a3:	mov    edi,0x50
  4022a8:	call   4041e0 <mmk_malloc@@Base>
  4022ad:	mov    QWORD PTR [rbp-0x78],rax
  4022b1:	call   40430e <mmk_when_get_result@@Base>
  4022b6:	mov    rsi,rax
  4022b9:	mov    rcx,QWORD PTR [rbp-0x78]
  4022bd:	mov    rax,QWORD PTR [rsi]
  4022c0:	mov    rdx,QWORD PTR [rsi+0x8]
  4022c4:	mov    QWORD PTR [rcx+0x10],rax
  4022c8:	mov    QWORD PTR [rcx+0x18],rdx
  4022cc:	mov    rax,QWORD PTR [rsi+0x10]
  4022d0:	mov    rdx,QWORD PTR [rsi+0x18]
  4022d4:	mov    QWORD PTR [rcx+0x20],rax
  4022d8:	mov    QWORD PTR [rcx+0x28],rdx
  4022dc:	mov    rdx,QWORD PTR [rbp-0xb8]
  4022e3:	mov    rax,QWORD PTR [rbp-0x78]
  4022e7:	mov    QWORD PTR [rax+0x48],rdx
  4022eb:	mov    rdx,QWORD PTR [rbp-0x78]
  4022ef:	mov    rax,QWORD PTR [rbp-0x80]
  4022f3:	mov    rsi,rdx
  4022f6:	mov    rdi,rax
  4022f9:	call   40432d <mmk_when_impl@@Base>
  4022fe:	jmp    4024de <_start@@Base+0x37e>
  402303:	mov    rax,QWORD PTR [rbp-0x88]
  40230a:	mov    eax,DWORD PTR [rax]
  40230c:	cmp    eax,0x1
  40230f:	jne    4024de <_start@@Base+0x37e>
  402315:	mov    QWORD PTR [rbp-0xa8],0x0
  402320:	mov    rax,QWORD PTR [rbp-0x80]
  402324:	mov    rdi,rax
  402327:	call   402fa5 <mmk_mock_params_begin@@Base>
  40232c:	mov    QWORD PTR [rbp-0xa0],rax
  402333:	jmp    40247e <_start@@Base+0x31e>
  402338:	mov    rax,QWORD PTR [rbp-0x88]
  40233f:	mov    QWORD PTR [rbp-0x70],rax
  402343:	mov    rax,QWORD PTR [rbp-0x70]
  402347:	mov    rax,QWORD PTR [rax+0x10]
  40234b:	test   rax,rax
  40234e:	je     402421 <_start@@Base+0x2c1>
  402354:	mov    rax,QWORD PTR [rbp-0x70]
  402358:	mov    rax,QWORD PTR [rax+0x10]
  40235c:	mov    QWORD PTR [rbp-0x70],rax
  402360:	mov    rax,QWORD PTR [rbp-0x70]
  402364:	mov    eax,DWORD PTR [rax]
  402366:	test   eax,eax
  402368:	je     402447 <_start@@Base+0x2e7>
  40236e:	mov    rax,QWORD PTR [rbp-0x70]
  402372:	mov    eax,DWORD PTR [rax]
  402374:	test   eax,eax
  402376:	jns    4023ec <_start@@Base+0x28c>
  402378:	mov    rax,QWORD PTR [rbp-0xa0]
  40237f:	lea    rcx,[rax+0x18]
  402383:	lea    rax,[rbp-0xb8]
  40238a:	mov    edx,0x8
  40238f:	mov    rsi,rax
  402392:	mov    rdi,rcx
  402395:	call   404000 <mmk_memcmp@@Base>
  40239a:	mov    DWORD PTR [rbp-0xb0],eax
  4023a0:	cmp    DWORD PTR [rbp-0xb0],0x0
  4023a7:	jne    4023ba <_start@@Base+0x25a>
  4023a9:	mov    rax,QWORD PTR [rbp-0x70]
  4023ad:	mov    eax,DWORD PTR [rax]
  4023af:	and    eax,0x2
  4023b2:	test   eax,eax
  4023b4:	je     40245a <_start@@Base+0x2fa>
  4023ba:	cmp    DWORD PTR [rbp-0xb0],0x0
  4023c1:	jns    4023d4 <_start@@Base+0x274>
  4023c3:	mov    rax,QWORD PTR [rbp-0x70]
  4023c7:	mov    eax,DWORD PTR [rax]
  4023c9:	and    eax,0x4
  4023cc:	test   eax,eax
  4023ce:	je     40245d <_start@@Base+0x2fd>
  4023d4:	cmp    DWORD PTR [rbp-0xb0],0x0
  4023db:	jle    402447 <_start@@Base+0x2e7>
  4023dd:	mov    rax,QWORD PTR [rbp-0x70]
  4023e1:	mov    eax,DWORD PTR [rax]
  4023e3:	and    eax,0x8
  4023e6:	test   eax,eax
  4023e8:	jne    402447 <_start@@Base+0x2e7>
  4023ea:	jmp    402461 <_start@@Base+0x301>
  4023ec:	mov    rax,QWORD PTR [rbp-0x70]
  4023f0:	mov    eax,DWORD PTR [rax]
  4023f2:	cmp    eax,0x1
  4023f5:	jne    402447 <_start@@Base+0x2e7>
  4023f7:	mov    rax,QWORD PTR [rbp-0x70]
  4023fb:	mov    rdi,rax
  4023fe:	call   402cd0 <mmk_matcher_get_predicate@@Base>
  402403:	mov    QWORD PTR [rbp-0x68],rax
  402407:	mov    rax,QWORD PTR [rbp-0xa0]
  40240e:	mov    rdx,QWORD PTR [rax+0x18]
  402412:	mov    rax,QWORD PTR [rbp-0x68]
  402416:	mov    rdi,rdx
  402419:	call   rax
  40241b:	test   eax,eax
  40241d:	jne    402447 <_start@@Base+0x2e7>
  40241f:	jmp    402461 <_start@@Base+0x301>
  402421:	mov    rax,QWORD PTR [rbp-0xa0]
  402428:	lea    rcx,[rax+0x18]
  40242c:	lea    rax,[rbp-0xb8]
  402433:	mov    edx,0x8
  402438:	mov    rsi,rax
  40243b:	mov    rdi,rcx
  40243e:	call   404000 <mmk_memcmp@@Base>
  402443:	test   eax,eax
  402445:	jne    402460 <_start@@Base+0x300>
  402447:	mov    rax,QWORD PTR [rbp-0xa0]
  40244e:	mov    rax,QWORD PTR [rax]
  402451:	add    QWORD PTR [rbp-0xa8],rax
  402458:	jmp    402461 <_start@@Base+0x301>
  40245a:	nop
  40245b:	jmp    402461 <_start@@Base+0x301>
  40245d:	nop
  40245e:	jmp    402461 <_start@@Base+0x301>
  402460:	nop
  402461:	mov    rdx,QWORD PTR [rbp-0xa0]
  402468:	mov    rax,QWORD PTR [rbp-0x80]
  40246c:	mov    rsi,rdx
  40246f:	mov    rdi,rax
  402472:	call   402fe0 <mmk_mock_params_next@@Base>
  402477:	mov    QWORD PTR [rbp-0xa0],rax
  40247e:	cmp    QWORD PTR [rbp-0xa0],0x0
  402486:	jne    402338 <_start@@Base+0x1d8>
  40248c:	mov    rax,QWORD PTR [rbp-0x88]
  402493:	mov    QWORD PTR [rbp-0x98],rax
  40249a:	jmp    4024c5 <_start@@Base+0x365>
  40249c:	mov    rax,QWORD PTR [rbp-0x98]
  4024a3:	mov    rax,QWORD PTR [rax+0x10]
  4024a7:	mov    QWORD PTR [rbp-0x60],rax
  4024ab:	mov    rax,QWORD PTR [rbp-0x98]
  4024b2:	mov    rdi,rax
  4024b5:	call   404200 <mmk_free@@Base>
  4024ba:	mov    rax,QWORD PTR [rbp-0x60]
  4024be:	mov    QWORD PTR [rbp-0x98],rax
  4024c5:	cmp    QWORD PTR [rbp-0x98],0x0
  4024cd:	jne    40249c <_start@@Base+0x33c>
  4024cf:	mov    rax,QWORD PTR [rbp-0xa8]
  4024d6:	mov    rdi,rax
  4024d9:	call   403c32 <mmk_verify_set_times@@Base>
  4024de:	mov    rax,QWORD PTR [rip+0x5bf3]        # 4080d8 <__bss_start@@Base+0x10>
  4024e5:	jmp    40273b <_start@@Base+0x5db>
  4024ea:	mov    QWORD PTR [rbp-0x30],0x0
  4024f2:	mov    QWORD PTR [rbp-0x28],0x0
  4024fa:	mov    QWORD PTR [rbp-0x20],0x0
  402502:	mov    QWORD PTR [rbp-0x18],0x0
  40250a:	mov    rax,QWORD PTR [rbp-0xb8]
  402511:	mov    QWORD PTR [rbp-0x18],rax
  402515:	lea    rax,[rbp-0x30]
  402519:	mov    QWORD PTR [rbp-0x58],rax
  40251d:	mov    rax,QWORD PTR [rbp-0x58]
  402521:	mov    esi,0x20
  402526:	mov    rdi,rax
  402529:	call   403dd4 <mmk_verify_register_call@@Base>
  40252e:	call   403036 <mmk_mock_get_params@@Base>
  402533:	mov    QWORD PTR [rbp-0x90],rax
  40253a:	jmp    402726 <_start@@Base+0x5c6>
  40253f:	mov    rax,QWORD PTR [rbp-0x90]
  402546:	mov    QWORD PTR [rbp-0x50],rax
  40254a:	mov    rax,QWORD PTR [rbp-0x90]
  402551:	mov    rax,QWORD PTR [rax]
  402554:	mov    QWORD PTR [rbp-0x48],rax
  402558:	mov    rax,QWORD PTR [rbp-0x48]
  40255c:	mov    rax,QWORD PTR [rax+0x10]
  402560:	test   rax,rax
  402563:	je     402634 <_start@@Base+0x4d4>
  402569:	mov    rax,QWORD PTR [rbp-0x48]
  40256d:	mov    rax,QWORD PTR [rax+0x10]
  402571:	mov    QWORD PTR [rbp-0x48],rax
  402575:	mov    rax,QWORD PTR [rbp-0x48]
  402579:	mov    eax,DWORD PTR [rax]
  40257b:	test   eax,eax
  40257d:	je     40265b <_start@@Base+0x4fb>
  402583:	mov    rax,QWORD PTR [rbp-0x48]
  402587:	mov    eax,DWORD PTR [rax]
  402589:	test   eax,eax
  40258b:	jns    402600 <_start@@Base+0x4a0>
  40258d:	lea    rcx,[rbp-0xb8]
  402594:	lea    rax,[rbp-0xb8]
  40259b:	mov    edx,0x8
  4025a0:	mov    rsi,rcx
  4025a3:	mov    rdi,rax
  4025a6:	call   404000 <mmk_memcmp@@Base>
  4025ab:	mov    DWORD PTR [rbp-0xac],eax
  4025b1:	cmp    DWORD PTR [rbp-0xac],0x0
  4025b8:	jne    4025cb <_start@@Base+0x46b>
  4025ba:	mov    rax,QWORD PTR [rbp-0x48]
  4025be:	mov    eax,DWORD PTR [rax]
  4025c0:	and    eax,0x2
  4025c3:	test   eax,eax
  4025c5:	je     402710 <_start@@Base+0x5b0>
  4025cb:	cmp    DWORD PTR [rbp-0xac],0x0
  4025d2:	jns    4025e5 <_start@@Base+0x485>
  4025d4:	mov    rax,QWORD PTR [rbp-0x48]
  4025d8:	mov    eax,DWORD PTR [rax]
  4025da:	and    eax,0x4
  4025dd:	test   eax,eax
  4025df:	je     402710 <_start@@Base+0x5b0>
  4025e5:	cmp    DWORD PTR [rbp-0xac],0x0
  4025ec:	jle    40265b <_start@@Base+0x4fb>
  4025ee:	mov    rax,QWORD PTR [rbp-0x48]
  4025f2:	mov    eax,DWORD PTR [rax]
  4025f4:	and    eax,0x8
  4025f7:	test   eax,eax
  4025f9:	jne    40265b <_start@@Base+0x4fb>
  4025fb:	jmp    402710 <_start@@Base+0x5b0>
  402600:	mov    rax,QWORD PTR [rbp-0x48]
  402604:	mov    eax,DWORD PTR [rax]
  402606:	cmp    eax,0x1
  402609:	jne    40265b <_start@@Base+0x4fb>
  40260b:	mov    rax,QWORD PTR [rbp-0x48]
  40260f:	mov    rdi,rax
  402612:	call   402cd0 <mmk_matcher_get_predicate@@Base>
  402617:	mov    QWORD PTR [rbp-0x40],rax
  40261b:	mov    rdx,QWORD PTR [rbp-0xb8]
  402622:	mov    rax,QWORD PTR [rbp-0x40]
  402626:	mov    rdi,rdx
  402629:	call   rax
  40262b:	test   eax,eax
  40262d:	jne    40265b <_start@@Base+0x4fb>
  40262f:	jmp    402714 <_start@@Base+0x5b4>
  402634:	mov    rax,QWORD PTR [rbp-0x50]
  402638:	lea    rcx,[rax+0x48]
  40263c:	lea    rax,[rbp-0xb8]
  402643:	mov    edx,0x8
  402648:	mov    rsi,rcx
  40264b:	mov    rdi,rax
  40264e:	call   404000 <mmk_memcmp@@Base>
  402653:	test   eax,eax
  402655:	jne    402713 <_start@@Base+0x5b3>
  40265b:	mov    rax,QWORD PTR [rbp-0x50]
  40265f:	mov    eax,DWORD PTR [rax+0x14]
  402662:	test   eax,eax
  402664:	je     402677 <_start@@Base+0x517>
  402666:	call   402060 <__errno_location@plt>
  40266b:	mov    rdx,rax
  40266e:	mov    rax,QWORD PTR [rbp-0x50]
  402672:	mov    eax,DWORD PTR [rax+0x14]
  402675:	mov    DWORD PTR [rdx],eax
  402677:	mov    rax,QWORD PTR [rbp-0x50]
  40267b:	mov    rax,QWORD PTR [rax+0x20]
  40267f:	test   rax,rax
  402682:	je     4026b2 <_start@@Base+0x552>
  402684:	mov    rax,QWORD PTR [rbp-0x50]
  402688:	mov    rax,QWORD PTR [rax+0x18]
  40268c:	test   rax,rax
  40268f:	jne    4026b2 <_start@@Base+0x552>
  402691:	mov    rax,QWORD PTR [rbp-0x50]
  402695:	mov    rax,QWORD PTR [rax+0x20]
  402699:	mov    rdx,QWORD PTR [rbp-0xb8]
  4026a0:	mov    rdi,rdx
  4026a3:	call   rax
  4026a5:	mov    QWORD PTR [rbp-0x38],rax
  4026a9:	mov    rax,QWORD PTR [rbp-0x38]
  4026ad:	jmp    40273b <_start@@Base+0x5db>
  4026b2:	mov    rax,QWORD PTR [rbp-0x50]
  4026b6:	mov    rax,QWORD PTR [rax+0x20]
  4026ba:	test   rax,rax
  4026bd:	je     4026ed <_start@@Base+0x58d>
  4026bf:	mov    rax,QWORD PTR [rbp-0x50]
  4026c3:	mov    rax,QWORD PTR [rax+0x18]
  4026c7:	test   rax,rax
  4026ca:	je     4026ed <_start@@Base+0x58d>
  4026cc:	mov    rax,QWORD PTR [rbp-0x50]
  4026d0:	mov    rax,QWORD PTR [rax+0x20]
  4026d4:	mov    rdx,QWORD PTR [rbp-0xb8]
  4026db:	mov    rdi,rdx
  4026de:	call   rax
  4026e0:	mov    rax,QWORD PTR [rbp-0x50]
  4026e4:	mov    rax,QWORD PTR [rax+0x18]
  4026e8:	mov    rax,QWORD PTR [rax]
  4026eb:	jmp    40273b <_start@@Base+0x5db>
  4026ed:	mov    rax,QWORD PTR [rbp-0x50]
  4026f1:	mov    rax,QWORD PTR [rax+0x18]
  4026f5:	test   rax,rax
  4026f8:	je     402707 <_start@@Base+0x5a7>
  4026fa:	mov    rax,QWORD PTR [rbp-0x50]
  4026fe:	mov    rax,QWORD PTR [rax+0x18]
  402702:	mov    rax,QWORD PTR [rax]
  402705:	jmp    40273b <_start@@Base+0x5db>
  402707:	mov    rax,QWORD PTR [rip+0x59ca]        # 4080d8 <__bss_start@@Base+0x10>
  40270e:	jmp    40273b <_start@@Base+0x5db>
  402710:	nop
  402711:	jmp    402714 <_start@@Base+0x5b4>
  402713:	nop
  402714:	mov    rax,QWORD PTR [rbp-0x90]
  40271b:	mov    rax,QWORD PTR [rax+0x8]
  40271f:	mov    QWORD PTR [rbp-0x90],rax
  402726:	cmp    QWORD PTR [rbp-0x90],0x0
  40272e:	jne    40253f <_start@@Base+0x3df>
  402734:	mov    rax,QWORD PTR [rip+0x599d]        # 4080d8 <__bss_start@@Base+0x10>
  40273b:	mov    rsi,QWORD PTR [rbp-0x8]
  40273f:	xor    rsi,QWORD PTR fs:0x28
  402748:	je     40274f <_start@@Base+0x5ef>
  40274a:	call   402080 <__stack_chk_fail@plt>
  40274f:	leave  
  402750:	ret    
  402751:	push   rbp
  402752:	mov    rbp,rsp
  402755:	sub    rsp,0x10
  402759:	mov    QWORD PTR [rbp-0x8],rdi
  40275d:	mov    rax,QWORD PTR [rbp-0x8]
  402761:	lea    rsi,[rip+0xfffffffffffffade]        # 402246 <_start@@Base+0xe6>
  402768:	mov    rdi,rax
  40276b:	call   402cd9 <mmk_mock_create_internal@@Base>
  402770:	leave  
  402771:	ret    

0000000000402772 <test_simple_case@@Base>:
  402772:	endbr64 
  402776:	push   rbp
  402777:	mov    rbp,rsp
  40277a:	add    rsp,0xffffffffffffff80
  40277e:	mov    rax,QWORD PTR fs:0x28
  402787:	mov    QWORD PTR [rbp-0x8],rax
  40278b:	xor    eax,eax
  40278d:	lea    rdi,[rip+0x2874]        # 405008 <_IO_stdin_used@@Base+0x8>
  402794:	call   402751 <_start@@Base+0x5f1>
  402799:	mov    edi,0x0
  40279e:	call   402bb0 <mmk_matcher_init@@Base>
  4027a3:	mov    QWORD PTR [rbp-0x60],0x0
  4027ab:	mov    QWORD PTR [rbp-0x58],0x0
  4027b3:	mov    QWORD PTR [rbp-0x50],0x0
  4027bb:	mov    QWORD PTR [rbp-0x48],0x0
  4027c3:	lea    rax,[rbp-0xe]
  4027c7:	mov    QWORD PTR [rbp-0x70],rax
  4027cb:	lea    rax,[rbp-0x70]
  4027cf:	mov    QWORD PTR [rbp-0x58],rax
  4027d3:	lea    rax,[rbp-0x60]
  4027d7:	mov    rdi,rax
  4027da:	call   4042e1 <mmk_when_init@@Base>
  4027df:	mov    edi,0x6
  4027e4:	call   402150 <malloc@plt>
  4027e9:	call   402c00 <mmk_matcher_term@@Base>
  4027ee:	lea    rdi,[rip+0x2825]        # 40501a <_IO_stdin_used@@Base+0x1a>
  4027f5:	call   402110 <my_strdup@plt>
  4027fa:	mov    QWORD PTR [rbp-0x68],rax
  4027fe:	mov    edi,0x1
  402803:	call   402bb0 <mmk_matcher_init@@Base>
  402808:	mov    esi,0x0
  40280d:	mov    edi,0x8000000a
  402812:	call   402c50 <mmk_matcher_add@@Base>
  402817:	mov    edi,0x6
  40281c:	call   402150 <malloc@plt>
  402821:	call   402c00 <mmk_matcher_term@@Base>
  402826:	mov    QWORD PTR [rbp-0x40],0x0
  40282e:	mov    QWORD PTR [rbp-0x38],0x0
  402836:	mov    QWORD PTR [rbp-0x30],0x0
  40283e:	mov    QWORD PTR [rbp-0x28],0x0
  402846:	mov    QWORD PTR [rbp-0x20],0x0
  40284e:	mov    DWORD PTR [rbp-0x40],0x1
  402855:	mov    QWORD PTR [rbp-0x28],0x1
  40285d:	lea    rax,[rbp-0x40]
  402861:	mov    rdi,rax
  402864:	call   403c5f <mmk_verify_times@@Base>
  402869:	mov    DWORD PTR [rbp-0x74],eax
  40286c:	cmp    DWORD PTR [rbp-0x74],0x0
  402870:	jne    4028a8 <test_simple_case@@Base+0x136>
  402872:	mov    rax,QWORD PTR [rip+0x577f]        # 407ff8 <stderr@GLIBC_2.2.5>
  402879:	mov    rax,QWORD PTR [rax]
  40287c:	lea    r8,[rip+0x279d]        # 405020 <_IO_stdin_used@@Base+0x20>
  402883:	mov    ecx,0x17
  402888:	lea    rdx,[rip+0x2799]        # 405028 <_IO_stdin_used@@Base+0x28>
  40288f:	lea    rsi,[rip+0x27ee]        # 405084 <_IO_stdin_used@@Base+0x84>
  402896:	mov    rdi,rax
  402899:	mov    eax,0x0
  40289e:	call   4020d0 <fprintf@plt>
  4028a3:	call   402050 <abort@plt>
  4028a8:	lea    rax,[rbp-0xe]
  4028ac:	cmp    QWORD PTR [rbp-0x68],rax
  4028b0:	jne    4028c9 <test_simple_case@@Base+0x157>
  4028b2:	lea    rax,[rbp-0xe]
  4028b6:	mov    rsi,rax
  4028b9:	lea    rdi,[rip+0x57f8]        # 4080b8 <__data_start@@Base+0x10>
  4028c0:	call   4020c0 <strcmp@plt>
  4028c5:	test   eax,eax
  4028c7:	je     4028ff <test_simple_case@@Base+0x18d>
  4028c9:	mov    rax,QWORD PTR [rip+0x5728]        # 407ff8 <stderr@GLIBC_2.2.5>
  4028d0:	mov    rax,QWORD PTR [rax]
  4028d3:	lea    r8,[rip+0x27ce]        # 4050a8 <_IO_stdin_used@@Base+0xa8>
  4028da:	mov    ecx,0x18
  4028df:	lea    rdx,[rip+0x2742]        # 405028 <_IO_stdin_used@@Base+0x28>
  4028e6:	lea    rsi,[rip+0x2797]        # 405084 <_IO_stdin_used@@Base+0x84>
  4028ed:	mov    rdi,rax
  4028f0:	mov    eax,0x0
  4028f5:	call   4020d0 <fprintf@plt>
  4028fa:	call   402050 <abort@plt>
  4028ff:	mov    rax,QWORD PTR [rip+0x56ea]        # 407ff0 <malloc@GLIBC_2.2.5>
  402906:	mov    rdi,rax
  402909:	call   402b59 <mmk_reset@@Base>
  40290e:	nop
  40290f:	mov    rax,QWORD PTR [rbp-0x8]
  402913:	xor    rax,QWORD PTR fs:0x28
  40291c:	je     402923 <test_simple_case@@Base+0x1b1>
  40291e:	call   402080 <__stack_chk_fail@plt>
  402923:	leave  
  402924:	ret    

0000000000402925 <test_error_case@@Base>:
  402925:	endbr64 
  402929:	push   rbp
  40292a:	mov    rbp,rsp
  40292d:	sub    rsp,0x50
  402931:	mov    rax,QWORD PTR fs:0x28
  40293a:	mov    QWORD PTR [rbp-0x8],rax
  40293e:	xor    eax,eax
  402940:	lea    rdi,[rip+0x26c1]        # 405008 <_IO_stdin_used@@Base+0x8>
  402947:	call   402751 <_start@@Base+0x5f1>
  40294c:	mov    QWORD PTR [rbp-0x40],rax
  402950:	mov    edi,0x0
  402955:	call   402bb0 <mmk_matcher_init@@Base>
  40295a:	mov    QWORD PTR [rbp-0x30],0x0
  402962:	mov    QWORD PTR [rbp-0x28],0x0
  40296a:	mov    QWORD PTR [rbp-0x20],0x0
  402972:	mov    QWORD PTR [rbp-0x18],0x0
  40297a:	mov    DWORD PTR [rbp-0x2c],0xc
  402981:	mov    QWORD PTR [rbp-0x48],0x0
  402989:	lea    rax,[rbp-0x48]
  40298d:	mov    QWORD PTR [rbp-0x28],rax
  402991:	lea    rax,[rbp-0x30]
  402995:	mov    rdi,rax
  402998:	call   4042e1 <mmk_when_init@@Base>
  40299d:	mov    esi,0x1
  4029a2:	mov    edi,0x0
  4029a7:	call   402c50 <mmk_matcher_add@@Base>
  4029ac:	mov    rax,QWORD PTR [rbp-0x40]
  4029b0:	mov    edi,0x0
  4029b5:	call   rax
  4029b7:	call   402c00 <mmk_matcher_term@@Base>
  4029bc:	lea    rdi,[rip+0x2705]        # 4050c8 <_IO_stdin_used@@Base+0xc8>
  4029c3:	call   402110 <my_strdup@plt>
  4029c8:	mov    QWORD PTR [rbp-0x38],rax
  4029cc:	cmp    QWORD PTR [rbp-0x38],0x0
  4029d1:	jne    4029df <test_error_case@@Base+0xba>
  4029d3:	call   402060 <__errno_location@plt>
  4029d8:	mov    eax,DWORD PTR [rax]
  4029da:	cmp    eax,0xc
  4029dd:	je     402a15 <test_error_case@@Base+0xf0>
  4029df:	mov    rax,QWORD PTR [rip+0x5612]        # 407ff8 <stderr@GLIBC_2.2.5>
  4029e6:	mov    rax,QWORD PTR [rax]
  4029e9:	lea    r8,[rip+0x26e0]        # 4050d0 <_IO_stdin_used@@Base+0xd0>
  4029f0:	mov    ecx,0x27
  4029f5:	lea    rdx,[rip+0x262c]        # 405028 <_IO_stdin_used@@Base+0x28>
  4029fc:	lea    rsi,[rip+0x2681]        # 405084 <_IO_stdin_used@@Base+0x84>
  402a03:	mov    rdi,rax
  402a06:	mov    eax,0x0
  402a0b:	call   4020d0 <fprintf@plt>
  402a10:	call   402050 <abort@plt>
  402a15:	mov    rax,QWORD PTR [rbp-0x40]
  402a19:	mov    rdi,rax
  402a1c:	call   402b59 <mmk_reset@@Base>
  402a21:	nop
  402a22:	mov    rax,QWORD PTR [rbp-0x8]
  402a26:	xor    rax,QWORD PTR fs:0x28
  402a2f:	je     402a36 <test_error_case@@Base+0x111>
  402a31:	call   402080 <__stack_chk_fail@plt>
  402a36:	leave  
  402a37:	ret    

0000000000402a38 <main@@Base>:
  402a38:	endbr64 
  402a3c:	push   rbp
  402a3d:	mov    rbp,rsp
  402a40:	call   402772 <test_simple_case@@Base>
  402a45:	call   402925 <test_error_case@@Base>
  402a4a:	mov    eax,0x0
  402a4f:	pop    rbp
  402a50:	ret    

0000000000402a51 <mmk_init@@Base>:
  402a51:	endbr64 
  402a55:	push   rbp
  402a56:	mov    rbp,rsp
  402a59:	sub    rsp,0x10
  402a5d:	mov    eax,DWORD PTR [rip+0x567d]        # 4080e0 <__bss_start@@Base+0x18>
  402a63:	test   eax,eax
  402a65:	jne    402aeb <mmk_init@@Base+0x9a>
  402a6b:	call   4032e0 <plt_init_ctx@@Base>
  402a70:	mov    QWORD PTR [rip+0x5671],rax        # 4080e8 <__bss_start@@Base+0x20>
  402a77:	mov    rax,QWORD PTR [rip+0x566a]        # 4080e8 <__bss_start@@Base+0x20>
  402a7e:	cmp    rax,0xffffffffffffffff
  402a82:	jne    402ad0 <mmk_init@@Base+0x7f>
  402a84:	mov    rax,QWORD PTR [rip+0x556d]        # 407ff8 <stderr@GLIBC_2.2.5>
  402a8b:	mov    rax,QWORD PTR [rax]
  402a8e:	mov    QWORD PTR [rbp-0x10],rax
  402a92:	lea    rax,[rip+0x2657]        # 4050f0 <_IO_stdin_used@@Base+0xf0>
  402a99:	mov    QWORD PTR [rbp-0x8],rax
  402a9d:	mov    rdx,QWORD PTR [rbp-0x8]
  402aa1:	mov    rax,QWORD PTR [rbp-0x10]
  402aa5:	lea    r9,[rip+0x2661]        # 40510d <_IO_stdin_used@@Base+0x10d>
  402aac:	mov    r8d,0x2d
  402ab2:	lea    rcx,[rip+0x266f]        # 405128 <_IO_stdin_used@@Base+0x128>
  402ab9:	mov    esi,0x1
  402abe:	mov    rdi,rax
  402ac1:	mov    eax,0x0
  402ac6:	call   402130 <__fprintf_chk@plt>
  402acb:	call   402050 <abort@plt>
  402ad0:	mov    rax,QWORD PTR [rip+0x5611]        # 4080e8 <__bss_start@@Base+0x20>
  402ad7:	mov    rdi,rax
  402ada:	call   404210 <mmk_init_vital_functions@@Base>
  402adf:	mov    DWORD PTR [rip+0x55f7],0x1        # 4080e0 <__bss_start@@Base+0x18>
  402ae9:	jmp    402aec <mmk_init@@Base+0x9b>
  402aeb:	nop
  402aec:	leave  
  402aed:	ret    

0000000000402aee <mmk_plt_ctx@@Base>:
  402aee:	endbr64 
  402af2:	push   rbp
  402af3:	mov    rbp,rsp
  402af6:	sub    rsp,0x10
  402afa:	mov    eax,DWORD PTR [rip+0x55e0]        # 4080e0 <__bss_start@@Base+0x18>
  402b00:	test   eax,eax
  402b02:	jne    402b50 <mmk_plt_ctx@@Base+0x62>
  402b04:	mov    rax,QWORD PTR [rip+0x54ed]        # 407ff8 <stderr@GLIBC_2.2.5>
  402b0b:	mov    rax,QWORD PTR [rax]
  402b0e:	mov    QWORD PTR [rbp-0x10],rax
  402b12:	lea    rax,[rip+0x25d7]        # 4050f0 <_IO_stdin_used@@Base+0xf0>
  402b19:	mov    QWORD PTR [rbp-0x8],rax
  402b1d:	mov    rdx,QWORD PTR [rbp-0x8]
  402b21:	mov    rax,QWORD PTR [rbp-0x10]
  402b25:	lea    r9,[rip+0x264e]        # 40517a <_IO_stdin_used@@Base+0x17a>
  402b2c:	mov    r8d,0x36
  402b32:	lea    rcx,[rip+0x25ef]        # 405128 <_IO_stdin_used@@Base+0x128>
  402b39:	mov    esi,0x1
  402b3e:	mov    rdi,rax
  402b41:	mov    eax,0x0
  402b46:	call   402130 <__fprintf_chk@plt>
  402b4b:	call   402050 <abort@plt>
  402b50:	mov    rax,QWORD PTR [rip+0x5591]        # 4080e8 <__bss_start@@Base+0x20>
  402b57:	leave  
  402b58:	ret    

0000000000402b59 <mmk_reset@@Base>:
  402b59:	endbr64 
  402b5d:	push   rbp
  402b5e:	mov    rbp,rsp
  402b61:	sub    rsp,0x20
  402b65:	mov    QWORD PTR [rbp-0x18],rdi
  402b69:	cmp    QWORD PTR [rbp-0x18],0x0
  402b6e:	je     402b9e <mmk_reset@@Base+0x45>
  402b70:	mov    rax,QWORD PTR [rbp-0x18]
  402b74:	mov    rdi,rax
  402b77:	call   403a8a <mmk_ask_ctx@@Base>
  402b7c:	mov    QWORD PTR [rbp-0x10],rax
  402b80:	mov    rax,QWORD PTR [rbp-0x10]
  402b84:	mov    rdi,rax
  402b87:	call   403721 <mmk_stub_context@@Base>
  402b8c:	mov    QWORD PTR [rbp-0x8],rax
  402b90:	mov    rax,QWORD PTR [rbp-0x8]
  402b94:	mov    rdi,rax
  402b97:	call   402ed9 <mmk_mock_destroy_internal@@Base>
  402b9c:	jmp    402b9f <mmk_reset@@Base+0x46>
  402b9e:	nop
  402b9f:	leave  
  402ba0:	ret    
  402ba1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402bab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402bb0 <mmk_matcher_init@@Base>:
  402bb0:	endbr64 
  402bb4:	push   rbp
  402bb5:	mov    ebp,edi
  402bb7:	mov    edi,0x18
  402bbc:	push   rbx
  402bbd:	sub    rsp,0x8
  402bc1:	call   4041e0 <mmk_malloc@@Base>
  402bc6:	vpxor  xmm0,xmm0,xmm0
  402bca:	vmovups XMMWORD PTR [rax],xmm0
  402bce:	mov    QWORD PTR [rax+0x10],0x0
  402bd6:	mov    DWORD PTR [rax],ebp
  402bd8:	mov    rbx,rax
  402bdb:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402be7:	mov    QWORD PTR [rax-0x28],rbx
  402bee:	add    rsp,0x8
  402bf2:	pop    rbx
  402bf3:	pop    rbp
  402bf4:	ret    
  402bf5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000402c00 <mmk_matcher_term@@Base>:
  402c00:	endbr64 
  402c04:	sub    rsp,0x8
  402c08:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402c14:	mov    QWORD PTR [rax-0x28],0x0
  402c1f:	add    rsp,0x8
  402c23:	ret    
  402c24:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402c2f:	nop

0000000000402c30 <mmk_matcher_ctx@@Base>:
  402c30:	endbr64 
  402c34:	sub    rsp,0x8
  402c38:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402c44:	mov    rax,QWORD PTR [rax-0x28]
  402c4b:	add    rsp,0x8
  402c4f:	ret    

0000000000402c50 <mmk_matcher_add@@Base>:
  402c50:	endbr64 
  402c54:	push   r12
  402c56:	mov    r12d,edi
  402c59:	mov    edi,0x18
  402c5e:	push   rbp
  402c5f:	mov    ebp,esi
  402c61:	push   rbx
  402c62:	call   4041e0 <mmk_malloc@@Base>
  402c67:	mov    rbx,rax
  402c6a:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402c76:	mov    QWORD PTR [rbx+0x10],0x0
  402c7e:	vpxor  xmm0,xmm0,xmm0
  402c82:	vmovups XMMWORD PTR [rbx],xmm0
  402c86:	movsxd rsi,ebp
  402c89:	mov    DWORD PTR [rbx],r12d
  402c8c:	mov    rdx,QWORD PTR [rax-0x28]
  402c93:	mov    QWORD PTR [rbx+0x8],rsi
  402c97:	mov    rax,QWORD PTR [rdx+0x10]
  402c9b:	test   rax,rax
  402c9e:	je     402ca6 <mmk_matcher_add@@Base+0x56>
  402ca0:	cmp    rsi,QWORD PTR [rax+0x8]
  402ca4:	ja     402cb8 <mmk_matcher_add@@Base+0x68>
  402ca6:	mov    QWORD PTR [rbx+0x10],rax
  402caa:	mov    QWORD PTR [rdx+0x10],rbx
  402cae:	pop    rbx
  402caf:	pop    rbp
  402cb0:	pop    r12
  402cb2:	ret    
  402cb3:	nop    DWORD PTR [rax+rax*1+0x0]
  402cb8:	mov    rdx,rax
  402cbb:	mov    rax,QWORD PTR [rax+0x10]
  402cbf:	test   rax,rax
  402cc2:	jne    402ca0 <mmk_matcher_add@@Base+0x50>
  402cc4:	jmp    402ca6 <mmk_matcher_add@@Base+0x56>
  402cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402cd0 <mmk_matcher_get_predicate@@Base>:
  402cd0:	endbr64 
  402cd4:	lea    rax,[rdi+0x18]
  402cd8:	ret    

0000000000402cd9 <mmk_mock_create_internal@@Base>:
  402cd9:	endbr64 
  402cdd:	push   rbp
  402cde:	mov    rbp,rsp
  402ce1:	push   rbx
  402ce2:	sub    rsp,0x68
  402ce6:	mov    QWORD PTR [rbp-0x68],rdi
  402cea:	mov    QWORD PTR [rbp-0x70],rsi
  402cee:	call   402a51 <mmk_init@@Base>
  402cf3:	mov    edi,0x28
  402cf8:	call   4041e0 <mmk_malloc@@Base>
  402cfd:	mov    QWORD PTR [rbp-0x48],rax
  402d01:	cmp    QWORD PTR [rbp-0x48],0x0
  402d06:	jne    402d54 <mmk_mock_create_internal@@Base+0x7b>
  402d08:	mov    rax,QWORD PTR [rip+0x52e9]        # 407ff8 <stderr@GLIBC_2.2.5>
  402d0f:	mov    rax,QWORD PTR [rax]
  402d12:	mov    QWORD PTR [rbp-0x30],rax
  402d16:	lea    rax,[rip+0x2473]        # 405190 <_IO_stdin_used@@Base+0x190>
  402d1d:	mov    QWORD PTR [rbp-0x28],rax
  402d21:	mov    rdx,QWORD PTR [rbp-0x28]
  402d25:	mov    rax,QWORD PTR [rbp-0x30]
  402d29:	lea    r9,[rip+0x247d]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  402d30:	mov    r8d,0x24
  402d36:	lea    rcx,[rip+0x247b]        # 4051b8 <_IO_stdin_used@@Base+0x1b8>
  402d3d:	mov    esi,0x1
  402d42:	mov    rdi,rax
  402d45:	mov    eax,0x0
  402d4a:	call   402130 <__fprintf_chk@plt>
  402d4f:	call   402050 <abort@plt>
  402d54:	mov    rax,QWORD PTR [rbp-0x48]
  402d58:	mov    QWORD PTR [rax],0x0
  402d5f:	mov    QWORD PTR [rax+0x8],0x0
  402d67:	mov    QWORD PTR [rax+0x10],0x0
  402d6f:	mov    QWORD PTR [rax+0x18],0x0
  402d77:	mov    QWORD PTR [rax+0x20],0x0
  402d7f:	mov    rax,QWORD PTR [rbp-0x68]
  402d83:	mov    esi,0x40
  402d88:	mov    rdi,rax
  402d8b:	call   4040e0 <mmk_strchr@@Base>
  402d90:	mov    QWORD PTR [rbp-0x40],rax
  402d94:	cmp    QWORD PTR [rbp-0x40],0x0
  402d99:	jne    402dad <mmk_mock_create_internal@@Base+0xd4>
  402d9b:	mov    rax,QWORD PTR [rbp-0x68]
  402d9f:	mov    rdi,rax
  402da2:	call   404190 <mmk_strlen@@Base>
  402da7:	mov    QWORD PTR [rbp-0x50],rax
  402dab:	jmp    402db9 <mmk_mock_create_internal@@Base+0xe0>
  402dad:	mov    rax,QWORD PTR [rbp-0x40]
  402db1:	sub    rax,QWORD PTR [rbp-0x68]
  402db5:	mov    QWORD PTR [rbp-0x50],rax
  402db9:	mov    rax,QWORD PTR [rbp-0x50]
  402dbd:	inc    rax
  402dc0:	mov    rdi,rax
  402dc3:	call   4041e0 <mmk_malloc@@Base>
  402dc8:	mov    QWORD PTR [rbp-0x38],rax
  402dcc:	mov    rdx,QWORD PTR [rbp-0x50]
  402dd0:	mov    rcx,QWORD PTR [rbp-0x68]
  402dd4:	mov    rax,QWORD PTR [rbp-0x38]
  402dd8:	mov    rsi,rcx
  402ddb:	mov    rdi,rax
  402dde:	call   404150 <mmk_strncpy@@Base>
  402de3:	mov    rdx,QWORD PTR [rbp-0x38]
  402de7:	mov    rax,QWORD PTR [rbp-0x50]
  402deb:	add    rax,rdx
  402dee:	mov    BYTE PTR [rax],0x0
  402df1:	cmp    QWORD PTR [rbp-0x40],0x0
  402df6:	je     402e17 <mmk_mock_create_internal@@Base+0x13e>
  402df8:	mov    rax,QWORD PTR [rbp-0x40]
  402dfc:	inc    rax
  402dff:	mov    edx,0x4
  402e04:	lea    rsi,[rip+0x23ff]        # 40520a <_IO_stdin_used@@Base+0x20a>
  402e0b:	mov    rdi,rax
  402e0e:	call   404080 <mmk_strneq@@Base>
  402e13:	test   eax,eax
  402e15:	je     402e1e <mmk_mock_create_internal@@Base+0x145>
  402e17:	mov    eax,0x1
  402e1c:	jmp    402e23 <mmk_mock_create_internal@@Base+0x14a>
  402e1e:	mov    eax,0x0
  402e23:	mov    DWORD PTR [rbp-0x54],eax
  402e26:	mov    rdx,QWORD PTR [rbp-0x48]
  402e2a:	mov    rcx,QWORD PTR [rbp-0x70]
  402e2e:	mov    rax,QWORD PTR [rbp-0x68]
  402e32:	mov    rsi,rcx
  402e35:	mov    rdi,rax
  402e38:	call   40398e <mmk_stub_create@@Base>
  402e3d:	mov    rdx,rax
  402e40:	mov    rax,QWORD PTR [rbp-0x48]
  402e44:	mov    QWORD PTR [rax+0x8],rdx
  402e48:	mov    rax,QWORD PTR [rbp-0x48]
  402e4c:	mov    rax,QWORD PTR [rax+0x8]
  402e50:	test   rax,rax
  402e53:	jne    402e91 <mmk_mock_create_internal@@Base+0x1b8>
  402e55:	mov    rax,QWORD PTR [rip+0x519c]        # 407ff8 <stderr@GLIBC_2.2.5>
  402e5c:	mov    rax,QWORD PTR [rax]
  402e5f:	mov    QWORD PTR [rbp-0x20],rax
  402e63:	lea    rax,[rip+0x23a6]        # 405210 <_IO_stdin_used@@Base+0x210>
  402e6a:	mov    QWORD PTR [rbp-0x18],rax
  402e6e:	mov    rcx,QWORD PTR [rbp-0x68]
  402e72:	mov    rdx,QWORD PTR [rbp-0x18]
  402e76:	mov    rax,QWORD PTR [rbp-0x20]
  402e7a:	mov    esi,0x1
  402e7f:	mov    rdi,rax
  402e82:	mov    eax,0x0
  402e87:	call   402130 <__fprintf_chk@plt>
  402e8c:	call   402050 <abort@plt>
  402e91:	cmp    DWORD PTR [rbp-0x54],0x0
  402e95:	jne    402eba <mmk_mock_create_internal@@Base+0x1e1>
  402e97:	mov    rax,QWORD PTR [rbp-0x48]
  402e9b:	mov    rbx,QWORD PTR [rax+0x8]
  402e9f:	mov    rdx,QWORD PTR [rbp-0x48]
  402ea3:	mov    rcx,QWORD PTR [rbp-0x70]
  402ea7:	mov    rax,QWORD PTR [rbp-0x38]
  402eab:	mov    rsi,rcx
  402eae:	mov    rdi,rax
  402eb1:	call   40398e <mmk_stub_create@@Base>
  402eb6:	mov    QWORD PTR [rbx+0x48],rax
  402eba:	mov    rax,QWORD PTR [rbp-0x38]
  402ebe:	mov    rdi,rax
  402ec1:	call   404200 <mmk_free@@Base>
  402ec6:	mov    rax,QWORD PTR [rbp-0x48]
  402eca:	mov    rax,QWORD PTR [rax+0x8]
  402ece:	mov    rax,QWORD PTR [rax+0x40]
  402ed2:	add    rsp,0x68
  402ed6:	pop    rbx
  402ed7:	pop    rbp
  402ed8:	ret    

0000000000402ed9 <mmk_mock_destroy_internal@@Base>:
  402ed9:	endbr64 
  402edd:	push   rbp
  402ede:	mov    rbp,rsp
  402ee1:	sub    rsp,0x40
  402ee5:	mov    QWORD PTR [rbp-0x38],rdi
  402ee9:	mov    rax,QWORD PTR [rbp-0x38]
  402eed:	mov    rax,QWORD PTR [rax+0x8]
  402ef1:	mov    QWORD PTR [rbp-0x30],rax
  402ef5:	jmp    402f17 <mmk_mock_destroy_internal@@Base+0x3e>
  402ef7:	mov    rax,QWORD PTR [rbp-0x30]
  402efb:	mov    rax,QWORD PTR [rax+0x48]
  402eff:	mov    QWORD PTR [rbp-0x18],rax
  402f03:	mov    rax,QWORD PTR [rbp-0x30]
  402f07:	mov    rdi,rax
  402f0a:	call   403a5f <mmk_stub_destroy@@Base>
  402f0f:	mov    rax,QWORD PTR [rbp-0x18]
  402f13:	mov    QWORD PTR [rbp-0x30],rax
  402f17:	cmp    QWORD PTR [rbp-0x30],0x0
  402f1c:	jne    402ef7 <mmk_mock_destroy_internal@@Base+0x1e>
  402f1e:	mov    rax,QWORD PTR [rbp-0x38]
  402f22:	mov    rax,QWORD PTR [rax+0x10]
  402f26:	mov    rdi,rax
  402f29:	call   404200 <mmk_free@@Base>
  402f2e:	mov    rax,QWORD PTR [rbp-0x38]
  402f32:	mov    rax,QWORD PTR [rax]
  402f35:	mov    QWORD PTR [rbp-0x28],rax
  402f39:	jmp    402f8f <mmk_mock_destroy_internal@@Base+0xb6>
  402f3b:	mov    rax,QWORD PTR [rbp-0x28]
  402f3f:	mov    rax,QWORD PTR [rax+0x8]
  402f43:	mov    QWORD PTR [rbp-0x10],rax
  402f47:	mov    rax,QWORD PTR [rbp-0x28]
  402f4b:	mov    rax,QWORD PTR [rax]
  402f4e:	mov    QWORD PTR [rbp-0x20],rax
  402f52:	jmp    402f74 <mmk_mock_destroy_internal@@Base+0x9b>
  402f54:	mov    rax,QWORD PTR [rbp-0x20]
  402f58:	mov    rax,QWORD PTR [rax+0x10]
  402f5c:	mov    QWORD PTR [rbp-0x8],rax
  402f60:	mov    rax,QWORD PTR [rbp-0x20]
  402f64:	mov    rdi,rax
  402f67:	call   404200 <mmk_free@@Base>
  402f6c:	mov    rax,QWORD PTR [rbp-0x8]
  402f70:	mov    QWORD PTR [rbp-0x20],rax
  402f74:	cmp    QWORD PTR [rbp-0x20],0x0
  402f79:	jne    402f54 <mmk_mock_destroy_internal@@Base+0x7b>
  402f7b:	mov    rax,QWORD PTR [rbp-0x28]
  402f7f:	mov    rdi,rax
  402f82:	call   404200 <mmk_free@@Base>
  402f87:	mov    rax,QWORD PTR [rbp-0x10]
  402f8b:	mov    QWORD PTR [rbp-0x28],rax
  402f8f:	cmp    QWORD PTR [rbp-0x28],0x0
  402f94:	jne    402f3b <mmk_mock_destroy_internal@@Base+0x62>
  402f96:	mov    rax,QWORD PTR [rbp-0x38]
  402f9a:	mov    rdi,rax
  402f9d:	call   404200 <mmk_free@@Base>
  402fa2:	nop
  402fa3:	leave  
  402fa4:	ret    

0000000000402fa5 <mmk_mock_params_begin@@Base>:
  402fa5:	endbr64 
  402fa9:	push   rbp
  402faa:	mov    rbp,rsp
  402fad:	mov    QWORD PTR [rbp-0x8],rdi
  402fb1:	mov    rax,QWORD PTR [rbp-0x8]
  402fb5:	mov    rax,QWORD PTR [rax+0x10]
  402fb9:	test   rax,rax
  402fbc:	je     402fcb <mmk_mock_params_begin@@Base+0x26>
  402fbe:	mov    rax,QWORD PTR [rbp-0x8]
  402fc2:	mov    rax,QWORD PTR [rax+0x18]
  402fc6:	test   rax,rax
  402fc9:	jne    402fd2 <mmk_mock_params_begin@@Base+0x2d>
  402fcb:	mov    eax,0x0
  402fd0:	jmp    402fde <mmk_mock_params_begin@@Base+0x39>
  402fd2:	mov    rax,QWORD PTR [rbp-0x8]
  402fd6:	mov    rax,QWORD PTR [rax+0x10]
  402fda:	add    rax,0x8
  402fde:	pop    rbp
  402fdf:	ret    

0000000000402fe0 <mmk_mock_params_next@@Base>:
  402fe0:	endbr64 
  402fe4:	push   rbp
  402fe5:	mov    rbp,rsp
  402fe8:	mov    QWORD PTR [rbp-0x18],rdi
  402fec:	mov    QWORD PTR [rbp-0x20],rsi
  402ff0:	mov    rax,QWORD PTR [rbp-0x20]
  402ff4:	mov    QWORD PTR [rbp-0x10],rax
  402ff8:	mov    rax,QWORD PTR [rbp-0x10]
  402ffc:	mov    rax,QWORD PTR [rax-0x8]
  403000:	mov    QWORD PTR [rbp-0x8],rax
  403004:	mov    rax,QWORD PTR [rbp-0x8]
  403008:	add    rax,0x8
  40300c:	add    QWORD PTR [rbp-0x10],rax
  403010:	mov    rax,QWORD PTR [rbp-0x18]
  403014:	mov    rdx,QWORD PTR [rax+0x10]
  403018:	mov    rax,QWORD PTR [rbp-0x18]
  40301c:	mov    rax,QWORD PTR [rax+0x18]
  403020:	add    rax,rdx
  403023:	cmp    QWORD PTR [rbp-0x10],rax
  403027:	jb     403030 <mmk_mock_params_next@@Base+0x50>
  403029:	mov    eax,0x0
  40302e:	jmp    403034 <mmk_mock_params_next@@Base+0x54>
  403030:	mov    rax,QWORD PTR [rbp-0x10]
  403034:	pop    rbp
  403035:	ret    

0000000000403036 <mmk_mock_get_params@@Base>:
  403036:	endbr64 
  40303a:	push   rbp
  40303b:	mov    rbp,rsp
  40303e:	sub    rsp,0x10
  403042:	call   403afa <mmk_ctx@@Base>
  403047:	mov    rdi,rax
  40304a:	call   403721 <mmk_stub_context@@Base>
  40304f:	mov    QWORD PTR [rbp-0x8],rax
  403053:	mov    rax,QWORD PTR [rbp-0x8]
  403057:	mov    rax,QWORD PTR [rax]
  40305a:	leave  
  40305b:	ret    
  40305c:	nop    DWORD PTR [rax+0x0]
  403060:	push   r15
  403062:	push   r14
  403064:	push   r13
  403066:	push   r12
  403068:	push   rbp
  403069:	push   rbx
  40306a:	sub    rsp,0x18
  40306e:	mov    rdx,QWORD PTR [rdi+0x10]
  403072:	mov    rax,QWORD PTR [rdi]
  403075:	mov    r9,QWORD PTR [rdx]
  403078:	mov    QWORD PTR [rsp+0x8],rax
  40307d:	test   r9,r9
  403080:	je     403208 <mmk_mock_get_params@@Base+0x1d2>
  403086:	mov    rax,rdx
  403089:	cmp    r9,0x6
  40308d:	jne    4030a2 <mmk_mock_get_params@@Base+0x6c>
  40308f:	jmp    4032b0 <mmk_mock_get_params@@Base+0x27a>
  403094:	nop    DWORD PTR [rax+0x0]
  403098:	cmp    rcx,0x6
  40309c:	je     4032b0 <mmk_mock_get_params@@Base+0x27a>
  4030a2:	add    rax,0x10
  4030a6:	mov    rcx,QWORD PTR [rax]
  4030a9:	test   rcx,rcx
  4030ac:	jne    403098 <mmk_mock_get_params@@Base+0x62>
  4030ae:	mov    r10d,0x1
  4030b4:	xor    ebx,ebx
  4030b6:	mov    rcx,rdx
  4030b9:	cmp    r9,0x5
  4030bd:	jne    4030d2 <mmk_mock_get_params@@Base+0x9c>
  4030bf:	jmp    403278 <mmk_mock_get_params@@Base+0x242>
  4030c4:	nop    DWORD PTR [rax+0x0]
  4030c8:	cmp    rax,0x5
  4030cc:	je     403278 <mmk_mock_get_params@@Base+0x242>
  4030d2:	add    rcx,0x10
  4030d6:	mov    rax,QWORD PTR [rcx]
  4030d9:	test   rax,rax
  4030dc:	jne    4030c8 <mmk_mock_get_params@@Base+0x92>
  4030de:	mov    r10d,0x1
  4030e4:	xor    r12d,r12d
  4030e7:	mov    rcx,rdx
  4030ea:	cmp    r9,0x14
  4030ee:	jne    403102 <mmk_mock_get_params@@Base+0xcc>
  4030f0:	jmp    403268 <mmk_mock_get_params@@Base+0x232>
  4030f5:	nop    DWORD PTR [rax]
  4030f8:	cmp    rdi,0x14
  4030fc:	je     403268 <mmk_mock_get_params@@Base+0x232>
  403102:	add    rcx,0x10
  403106:	mov    rdi,QWORD PTR [rcx]
  403109:	test   rdi,rdi
  40310c:	jne    4030f8 <mmk_mock_get_params@@Base+0xc2>
  40310e:	mov    r11d,0x2
  403114:	mov    rcx,rdx
  403117:	cmp    r9,0x17
  40311b:	jne    403132 <mmk_mock_get_params@@Base+0xfc>
  40311d:	jmp    403240 <mmk_mock_get_params@@Base+0x20a>
  403122:	nop    WORD PTR [rax+rax*1+0x0]
  403128:	cmp    rax,0x17
  40312c:	je     403240 <mmk_mock_get_params@@Base+0x20a>
  403132:	add    rcx,0x10
  403136:	mov    rax,QWORD PTR [rcx]
  403139:	test   rax,rax
  40313c:	jne    403128 <mmk_mock_get_params@@Base+0xf2>
  40313e:	xor    ebp,ebp
  403140:	mov    rax,rdx
  403143:	cmp    r9,0x2
  403147:	jne    40315a <mmk_mock_get_params@@Base+0x124>
  403149:	jmp    403230 <mmk_mock_get_params@@Base+0x1fa>
  40314e:	xchg   ax,ax
  403150:	cmp    r8,0x2
  403154:	je     403230 <mmk_mock_get_params@@Base+0x1fa>
  40315a:	add    rax,0x10
  40315e:	mov    r8,QWORD PTR [rax]
  403161:	test   r8,r8
  403164:	jne    403150 <mmk_mock_get_params@@Base+0x11a>
  403166:	cmp    r9,r11
  403169:	jne    403179 <mmk_mock_get_params@@Base+0x143>
  40316b:	jmp    403220 <mmk_mock_get_params@@Base+0x1ea>
  403170:	cmp    rax,r11
  403173:	je     403220 <mmk_mock_get_params@@Base+0x1ea>
  403179:	add    rdx,0x10
  40317d:	mov    rax,QWORD PTR [rdx]
  403180:	test   rax,rax
  403183:	jne    403170 <mmk_mock_get_params@@Base+0x13a>
  403185:	xor    r13d,r13d
  403188:	test   r10b,r10b
  40318b:	jne    403208 <mmk_mock_get_params@@Base+0x1d2>
  40318d:	test   rdi,rdi
  403190:	je     403208 <mmk_mock_get_params@@Base+0x1d2>
  403192:	test   rbp,rbp
  403195:	je     403208 <mmk_mock_get_params@@Base+0x1d2>
  403197:	test   r8,r8
  40319a:	je     403208 <mmk_mock_get_params@@Base+0x1d2>
  40319c:	test   r13,r13
  40319f:	je     403208 <mmk_mock_get_params@@Base+0x1d2>
  4031a1:	mov    rax,r8
  4031a4:	xor    edx,edx
  4031a6:	div    r13
  4031a9:	mov    QWORD PTR [rsp],rax
  4031ad:	cmp    r13,r8
  4031b0:	ja     403208 <mmk_mock_get_params@@Base+0x1d2>
  4031b2:	mov    r14,rsi
  4031b5:	xor    r15d,r15d
  4031b8:	jmp    4031cc <mmk_mock_get_params@@Base+0x196>
  4031ba:	nop    WORD PTR [rax+rax*1+0x0]
  4031c0:	inc    r15
  4031c3:	add    rbp,r13
  4031c6:	cmp    QWORD PTR [rsp],r15
  4031ca:	jbe    403208 <mmk_mock_get_params@@Base+0x1d2>
  4031cc:	mov    eax,DWORD PTR [rbp+0xc]
  4031cf:	mov    rsi,r14
  4031d2:	lea    rax,[rax+rax*2]
  4031d6:	mov    edi,DWORD PTR [rbx+rax*8]
  4031d9:	add    rdi,r12
  4031dc:	call   4020c0 <strcmp@plt>
  4031e1:	test   eax,eax
  4031e3:	jne    4031c0 <mmk_mock_get_params@@Base+0x18a>
  4031e5:	mov    rax,QWORD PTR [rbp+0x0]
  4031e9:	test   rax,rax
  4031ec:	je     40320a <mmk_mock_get_params@@Base+0x1d4>
  4031ee:	add    rax,QWORD PTR [rsp+0x8]
  4031f3:	add    rsp,0x18
  4031f7:	pop    rbx
  4031f8:	pop    rbp
  4031f9:	pop    r12
  4031fb:	pop    r13
  4031fd:	pop    r14
  4031ff:	pop    r15
  403201:	ret    
  403202:	nop    WORD PTR [rax+rax*1+0x0]
  403208:	xor    eax,eax
  40320a:	add    rsp,0x18
  40320e:	pop    rbx
  40320f:	pop    rbp
  403210:	pop    r12
  403212:	pop    r13
  403214:	pop    r14
  403216:	pop    r15
  403218:	ret    
  403219:	nop    DWORD PTR [rax+0x0]
  403220:	mov    r13,QWORD PTR [rdx+0x8]
  403224:	jmp    403188 <mmk_mock_get_params@@Base+0x152>
  403229:	nop    DWORD PTR [rax+0x0]
  403230:	mov    r8,QWORD PTR [rax+0x8]
  403234:	jmp    403166 <mmk_mock_get_params@@Base+0x130>
  403239:	nop    DWORD PTR [rax+0x0]
  403240:	mov    rcx,QWORD PTR [rcx+0x8]
  403244:	cmp    QWORD PTR [rsp+0x8],rcx
  403249:	ja     403257 <mmk_mock_get_params@@Base+0x221>
  40324b:	mov    rbp,rcx
  40324e:	test   rcx,rcx
  403251:	jns    403140 <mmk_mock_get_params@@Base+0x10a>
  403257:	mov    rax,QWORD PTR [rsp+0x8]
  40325c:	lea    rbp,[rax+rcx*1]
  403260:	jmp    403140 <mmk_mock_get_params@@Base+0x10a>
  403265:	nop    DWORD PTR [rax]
  403268:	mov    rdi,QWORD PTR [rcx+0x8]
  40326c:	lea    r11,[rdi+0x2]
  403270:	jmp    403114 <mmk_mock_get_params@@Base+0xde>
  403275:	nop    DWORD PTR [rax]
  403278:	mov    r12,QWORD PTR [rcx+0x8]
  40327c:	cmp    QWORD PTR [rsp+0x8],r12
  403281:	ja     403298 <mmk_mock_get_params@@Base+0x262>
  403283:	test   r12,r12
  403286:	js     403298 <mmk_mock_get_params@@Base+0x262>
  403288:	sete   al
  40328b:	or     r10d,eax
  40328e:	jmp    4030e7 <mmk_mock_get_params@@Base+0xb1>
  403293:	nop    DWORD PTR [rax+rax*1+0x0]
  403298:	add    r12,QWORD PTR [rsp+0x8]
  40329d:	sete   al
  4032a0:	or     r10d,eax
  4032a3:	jmp    4030e7 <mmk_mock_get_params@@Base+0xb1>
  4032a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4032b0:	mov    rbx,QWORD PTR [rax+0x8]
  4032b4:	cmp    QWORD PTR [rsp+0x8],rbx
  4032b9:	ja     4032d0 <mmk_mock_get_params@@Base+0x29a>
  4032bb:	test   rbx,rbx
  4032be:	js     4032d0 <mmk_mock_get_params@@Base+0x29a>
  4032c0:	sete   r10b
  4032c4:	jmp    4030b6 <mmk_mock_get_params@@Base+0x80>
  4032c9:	nop    DWORD PTR [rax+0x0]
  4032d0:	add    rbx,QWORD PTR [rsp+0x8]
  4032d5:	sete   r10b
  4032d9:	jmp    4030b6 <mmk_mock_get_params@@Base+0x80>
  4032de:	xchg   ax,ax

00000000004032e0 <plt_init_ctx@@Base>:
  4032e0:	endbr64 
  4032e4:	mov    rax,QWORD PTR [rip+0x4dd5]        # 4080c0 <__data_start@@Base+0x18>
  4032eb:	cmp    rax,0xffffffffffffffff
  4032ef:	je     4032f8 <plt_init_ctx@@Base+0x18>
  4032f1:	ret    
  4032f2:	nop    WORD PTR [rax+rax*1+0x0]
  4032f8:	mov    rax,QWORD PTR [rip+0x4cd9]        # 407fd8 <_r_debug@GLIBC_2.2.5>
  4032ff:	mov    QWORD PTR [rip+0x4dba],rax        # 4080c0 <__data_start@@Base+0x18>
  403306:	ret    
  403307:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403310 <plt_get_lib@@Base>:
  403310:	endbr64 
  403314:	push   rbp
  403315:	mov    rbp,rsp
  403318:	push   r15
  40331a:	push   r14
  40331c:	mov    r14,rdi
  40331f:	push   r13
  403321:	push   r12
  403323:	push   rbx
  403324:	sub    rsp,0x48
  403328:	mov    rax,QWORD PTR fs:0x28
  403331:	mov    QWORD PTR [rbp-0x38],rax
  403335:	xor    eax,eax
  403337:	test   rsi,rsi
  40333a:	je     403540 <plt_get_lib@@Base+0x230>
  403340:	mov    ecx,0x4
  403345:	lea    rdi,[rip+0x1ef7]        # 405243 <_IO_stdin_used@@Base+0x243>
  40334c:	mov    r13,rsi
  40334f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403351:	mov    ebx,0x1
  403356:	seta   al
  403359:	sbb    al,0x0
  40335b:	test   al,al
  40335d:	jne    403513 <plt_get_lib@@Base+0x203>
  403363:	mov    esi,0x3a
  403368:	mov    rdi,r13
  40336b:	call   4020a0 <strchr@plt>
  403370:	lea    rsi,[rax+0x1]
  403374:	mov    ecx,0x2
  403379:	lea    rdi,[rip+0x2079]        # 4053f9 <_IO_stdin_used@@Base+0x3f9>
  403380:	mov    rax,rsi
  403383:	mov    QWORD PTR [rbp-0x58],rsi
  403387:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403389:	mov    rdi,rax
  40338c:	seta   r12b
  403390:	sbb    r12b,0x0
  403394:	call   402070 <strlen@plt>
  403399:	mov    QWORD PTR [rbp-0x48],rax
  40339d:	movsx  r12d,r12b
  4033a1:	mov    r14,QWORD PTR [r14+0x8]
  4033a5:	test   r14,r14
  4033a8:	je     403480 <plt_get_lib@@Base+0x170>
  4033ae:	mov    rax,QWORD PTR [rbp-0x48]
  4033b2:	add    rax,0x17
  4033b6:	mov    rcx,rax
  4033b9:	and    rcx,0xfffffffffffffff0
  4033bd:	and    rax,0xfffffffffffff000
  4033c3:	mov    QWORD PTR [rbp-0x60],rcx
  4033c7:	mov    QWORD PTR [rbp-0x50],rax
  4033cb:	jmp    4033f6 <plt_get_lib@@Base+0xe6>
  4033cd:	nop    DWORD PTR [rax]
  4033d0:	test   bl,0x1
  4033d3:	jne    403458 <plt_get_lib@@Base+0x148>
  4033d9:	mov    rsi,QWORD PTR [r14+0x8]
  4033dd:	mov    rdi,r13
  4033e0:	call   4020c0 <strcmp@plt>
  4033e5:	test   eax,eax
  4033e7:	je     403430 <plt_get_lib@@Base+0x120>
  4033e9:	mov    r14,QWORD PTR [r14+0x18]
  4033ed:	test   r14,r14
  4033f0:	je     403480 <plt_get_lib@@Base+0x170>
  4033f6:	cmp    ebx,0x1
  4033f9:	jne    4033d0 <plt_get_lib@@Base+0xc0>
  4033fb:	test   r12d,r12d
  4033fe:	jne    403488 <plt_get_lib@@Base+0x178>
  403404:	mov    r15,QWORD PTR [r14+0x8]
  403408:	lea    rsi,[rip+0x1e49]        # 405258 <_IO_stdin_used@@Base+0x258>
  40340f:	mov    rdi,r15
  403412:	call   402140 <strstr@plt>
  403417:	test   rax,rax
  40341a:	jne    403430 <plt_get_lib@@Base+0x120>
  40341c:	lea    rsi,[rip+0x1e3e]        # 405261 <_IO_stdin_used@@Base+0x261>
  403423:	mov    rdi,r15
  403426:	call   402140 <strstr@plt>
  40342b:	test   rax,rax
  40342e:	je     4033e9 <plt_get_lib@@Base+0xd9>
  403430:	mov    rdx,QWORD PTR [rbp-0x38]
  403434:	xor    rdx,QWORD PTR fs:0x28
  40343d:	mov    rax,r14
  403440:	jne    4035dd <plt_get_lib@@Base+0x2cd>
  403446:	lea    rsp,[rbp-0x28]
  40344a:	pop    rbx
  40344b:	pop    r12
  40344d:	pop    r13
  40344f:	pop    r14
  403451:	pop    r15
  403453:	pop    rbp
  403454:	ret    
  403455:	nop    DWORD PTR [rax]
  403458:	cmp    ebx,0x3
  40345b:	jne    4033e9 <plt_get_lib@@Base+0xd9>
  40345d:	mov    rsi,QWORD PTR [rbp-0x58]
  403461:	mov    rdi,r14
  403464:	call   403060 <mmk_mock_get_params@@Base+0x2a>
  403469:	test   rax,rax
  40346c:	jne    403430 <plt_get_lib@@Base+0x120>
  40346e:	mov    r14,QWORD PTR [r14+0x18]
  403472:	test   r14,r14
  403475:	jne    4033f6 <plt_get_lib@@Base+0xe6>
  40347b:	nop    DWORD PTR [rax+rax*1+0x0]
  403480:	xor    r14d,r14d
  403483:	jmp    403430 <plt_get_lib@@Base+0x120>
  403485:	nop    DWORD PTR [rax]
  403488:	mov    rax,QWORD PTR [rbp-0x48]
  40348c:	mov    r11,rsp
  40348f:	lea    rsi,[rax+0x8]
  403493:	mov    rax,rsp
  403496:	sub    rax,QWORD PTR [rbp-0x50]
  40349a:	cmp    rsp,rax
  40349d:	je     4034b4 <plt_get_lib@@Base+0x1a4>
  40349f:	sub    rsp,0x1000
  4034a6:	or     QWORD PTR [rsp+0xff8],0x0
  4034af:	cmp    rsp,rax
  4034b2:	jne    40349f <plt_get_lib@@Base+0x18f>
  4034b4:	mov    rax,QWORD PTR [rbp-0x60]
  4034b8:	and    eax,0xfff
  4034bd:	jne    403508 <plt_get_lib@@Base+0x1f8>
  4034bf:	mov    r9,QWORD PTR [rbp-0x58]
  4034c3:	lea    r8,[rip+0x1da0]        # 40526a <_IO_stdin_used@@Base+0x26a>
  4034ca:	mov    rcx,0xffffffffffffffff
  4034d1:	mov    edx,0x1
  4034d6:	mov    rdi,rsp
  4034d9:	xor    eax,eax
  4034db:	mov    QWORD PTR [rbp-0x68],r11
  4034df:	call   402030 <__snprintf_chk@plt>
  4034e4:	mov    rdi,QWORD PTR [r14+0x8]
  4034e8:	mov    rsi,rsp
  4034eb:	call   402140 <strstr@plt>
  4034f0:	test   rax,rax
  4034f3:	mov    r11,QWORD PTR [rbp-0x68]
  4034f7:	jne    403584 <plt_get_lib@@Base+0x274>
  4034fd:	mov    rsp,r11
  403500:	jmp    4033e9 <plt_get_lib@@Base+0xd9>
  403505:	nop    DWORD PTR [rax]
  403508:	sub    rsp,rax
  40350b:	or     QWORD PTR [rsp+rax*1-0x8],0x0
  403511:	jmp    4034bf <plt_get_lib@@Base+0x1af>
  403513:	mov    ecx,0x5
  403518:	lea    rdi,[rip+0x1d29]        # 405248 <_IO_stdin_used@@Base+0x248>
  40351f:	mov    rsi,r13
  403522:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403524:	seta   al
  403527:	sbb    al,0x0
  403529:	test   al,al
  40352b:	jne    403560 <plt_get_lib@@Base+0x250>
  40352d:	mov    ebx,0x2
  403532:	jmp    403363 <plt_get_lib@@Base+0x53>
  403537:	nop    WORD PTR [rax+rax*1+0x0]
  403540:	lea    r13,[rip+0x1db2]        # 4052f9 <_IO_stdin_used@@Base+0x2f9>
  403547:	mov    QWORD PTR [rbp-0x48],0x0
  40354f:	mov    r12d,0xffffffff
  403555:	xor    ebx,ebx
  403557:	mov    QWORD PTR [rbp-0x58],r13
  40355b:	jmp    4033a1 <plt_get_lib@@Base+0x91>
  403560:	mov    ecx,0x4
  403565:	lea    rdi,[rip+0x1ce2]        # 40524e <_IO_stdin_used@@Base+0x24e>
  40356c:	mov    rsi,r13
  40356f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403571:	seta   al
  403574:	sbb    al,0x0
  403576:	test   al,al
  403578:	jne    40358c <plt_get_lib@@Base+0x27c>
  40357a:	mov    ebx,0x3
  40357f:	jmp    403363 <plt_get_lib@@Base+0x53>
  403584:	mov    rsp,r11
  403587:	jmp    403430 <plt_get_lib@@Base+0x120>
  40358c:	lea    rsi,[rip+0x1cc0]        # 405253 <_IO_stdin_used@@Base+0x253>
  403593:	mov    rdi,r13
  403596:	call   4020c0 <strcmp@plt>
  40359b:	test   eax,eax
  40359d:	je     403540 <plt_get_lib@@Base+0x230>
  40359f:	mov    rdi,r13
  4035a2:	mov    esi,0x3a
  4035a7:	call   4020a0 <strchr@plt>
  4035ac:	mov    rdx,QWORD PTR [rip+0x4a45]        # 407ff8 <stderr@GLIBC_2.2.5>
  4035b3:	mov    rdi,QWORD PTR [rdx]
  4035b6:	test   rax,rax
  4035b9:	je     4035e2 <plt_get_lib@@Base+0x2d2>
  4035bb:	sub    rax,r13
  4035be:	lea    rcx,[rax+0x1]
  4035c2:	mov    r8,r13
  4035c5:	lea    rdx,[rip+0x1cac]        # 405278 <_IO_stdin_used@@Base+0x278>
  4035cc:	mov    esi,0x1
  4035d1:	xor    eax,eax
  4035d3:	call   402130 <__fprintf_chk@plt>
  4035d8:	call   402050 <abort@plt>
  4035dd:	call   402080 <__stack_chk_fail@plt>
  4035e2:	mov    rcx,r13
  4035e5:	lea    rdx,[rip+0x1cb4]        # 4052a0 <_IO_stdin_used@@Base+0x2a0>
  4035ec:	mov    esi,0x1
  4035f1:	xor    eax,eax
  4035f3:	call   402130 <__fprintf_chk@plt>
  4035f8:	jmp    4035d8 <plt_get_lib@@Base+0x2c8>
  4035fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403600 <plt_get_offsets@@Base>:
  403600:	endbr64 
  403604:	push   rbp
  403605:	mov    rbp,rdx
  403608:	push   rbx
  403609:	sub    rsp,0x8
  40360d:	call   403060 <mmk_mock_get_params@@Base+0x2a>
  403612:	mov    rbx,rax
  403615:	test   rax,rax
  403618:	je     40363a <plt_get_offsets@@Base+0x3a>
  40361a:	mov    edi,0x10
  40361f:	call   4041e0 <mmk_malloc@@Base>
  403624:	vpxor  xmm0,xmm0,xmm0
  403628:	mov    QWORD PTR [rbp+0x0],0x1
  403630:	vmovups XMMWORD PTR [rax],xmm0
  403634:	mov    QWORD PTR [rax],rbx
  403637:	mov    rbx,rax
  40363a:	add    rsp,0x8
  40363e:	mov    rax,rbx
  403641:	pop    rbx
  403642:	pop    rbp
  403643:	ret    
  403644:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40364f:	nop

0000000000403650 <plt_set_offsets@@Base>:
  403650:	endbr64 
  403654:	mov    rcx,rsi
  403657:	shl    rcx,0x4
  40365b:	add    rcx,rdi
  40365e:	test   rsi,rsi
  403661:	jne    403674 <plt_set_offsets@@Base+0x24>
  403663:	jmp    403691 <plt_set_offsets@@Base+0x41>
  403665:	nop    DWORD PTR [rax]
  403668:	add    rdi,0x10
  40366c:	mov    QWORD PTR [rax],rdx
  40366f:	cmp    rcx,rdi
  403672:	je     403691 <plt_set_offsets@@Base+0x41>
  403674:	cmp    QWORD PTR [rdi+0x8],0x0
  403679:	mov    rax,QWORD PTR [rdi]
  40367c:	jne    403668 <plt_set_offsets@@Base+0x18>
  40367e:	mov    rsi,QWORD PTR [rax]
  403681:	add    rdi,0x10
  403685:	mov    QWORD PTR [rdi-0x8],rsi
  403689:	mov    QWORD PTR [rax],rdx
  40368c:	cmp    rcx,rdi
  40368f:	jne    403674 <plt_set_offsets@@Base+0x24>
  403691:	ret    
  403692:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40369d:	nop    DWORD PTR [rax]

00000000004036a0 <plt_reset_offsets@@Base>:
  4036a0:	endbr64 
  4036a4:	test   rsi,rsi
  4036a7:	je     4036c3 <plt_reset_offsets@@Base+0x23>
  4036a9:	shl    rsi,0x4
  4036ad:	add    rsi,rdi
  4036b0:	mov    rdx,QWORD PTR [rdi+0x8]
  4036b4:	mov    rax,QWORD PTR [rdi]
  4036b7:	add    rdi,0x10
  4036bb:	mov    QWORD PTR [rax],rdx
  4036be:	cmp    rdi,rsi
  4036c1:	jne    4036b0 <plt_reset_offsets@@Base+0x10>
  4036c3:	ret    
  4036c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4036cf:	nop

00000000004036d0 <plt_get_real_fn@@Base>:
  4036d0:	endbr64 
  4036d4:	push   rbp
  4036d5:	push   rbx
  4036d6:	sub    rsp,0x8
  4036da:	mov    rbx,QWORD PTR [rdi+0x8]
  4036de:	test   rbx,rbx
  4036e1:	je     403718 <plt_get_real_fn@@Base+0x48>
  4036e3:	mov    rbp,rsi
  4036e6:	jmp    4036f9 <plt_get_real_fn@@Base+0x29>
  4036e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4036f0:	mov    rbx,QWORD PTR [rbx+0x18]
  4036f4:	test   rbx,rbx
  4036f7:	je     403718 <plt_get_real_fn@@Base+0x48>
  4036f9:	mov    rsi,rbp
  4036fc:	mov    rdi,rbx
  4036ff:	call   403060 <mmk_mock_get_params@@Base+0x2a>
  403704:	test   rax,rax
  403707:	je     4036f0 <plt_get_real_fn@@Base+0x20>
  403709:	mov    rax,QWORD PTR [rax]
  40370c:	add    rsp,0x8
  403710:	pop    rbx
  403711:	pop    rbp
  403712:	ret    
  403713:	nop    DWORD PTR [rax+rax*1+0x0]
  403718:	add    rsp,0x8
  40371c:	pop    rbx
  40371d:	xor    eax,eax
  40371f:	pop    rbp
  403720:	ret    

0000000000403721 <mmk_stub_context@@Base>:
  403721:	endbr64 
  403725:	push   rbp
  403726:	mov    rbp,rsp
  403729:	mov    QWORD PTR [rbp-0x8],rdi
  40372d:	cmp    QWORD PTR [rbp-0x8],0x0
  403732:	jne    40373b <mmk_stub_context@@Base+0x1a>
  403734:	mov    eax,0x0
  403739:	jmp    403743 <mmk_stub_context@@Base+0x22>
  40373b:	mov    rax,QWORD PTR [rbp-0x8]
  40373f:	mov    rax,QWORD PTR [rax+0x18]
  403743:	pop    rbp
  403744:	ret    

0000000000403745 <mmk_stub_create_static@@Base>:
  403745:	endbr64 
  403749:	push   rbp
  40374a:	mov    rbp,rsp
  40374d:	sub    rsp,0x60
  403751:	mov    QWORD PTR [rbp-0x48],rdi
  403755:	mov    QWORD PTR [rbp-0x50],rsi
  403759:	mov    QWORD PTR [rbp-0x58],rdx
  40375d:	mov    QWORD PTR [rbp-0x60],rcx
  403761:	mov    rax,QWORD PTR fs:0x28
  40376a:	mov    QWORD PTR [rbp-0x8],rax
  40376e:	xor    eax,eax
  403770:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  40377c:	add    rax,0xffffffffffffffe0
  403782:	mov    DWORD PTR [rax],0x0
  403788:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403794:	add    rax,0xffffffffffffffe8
  40379a:	mov    QWORD PTR [rax],0x0
  4037a1:	mov    rax,QWORD PTR [rbp-0x50]
  4037a5:	mov    rdi,rax
  4037a8:	call   404190 <mmk_strlen@@Base>
  4037ad:	inc    rax
  4037b0:	mov    rdi,rax
  4037b3:	call   4041e0 <mmk_malloc@@Base>
  4037b8:	mov    QWORD PTR [rbp-0x28],rax
  4037bc:	cmp    QWORD PTR [rbp-0x28],0x0
  4037c1:	jne    4037cd <mmk_stub_create_static@@Base+0x88>
  4037c3:	mov    eax,0xfffffff4
  4037c8:	jmp    403978 <mmk_stub_create_static@@Base+0x233>
  4037cd:	mov    rdx,QWORD PTR [rbp-0x50]
  4037d1:	mov    rax,QWORD PTR [rbp-0x28]
  4037d5:	mov    rsi,rdx
  4037d8:	mov    rdi,rax
  4037db:	call   404120 <mmk_strcpy@@Base>
  4037e0:	mov    QWORD PTR [rbp-0x30],0x0
  4037e8:	mov    rax,QWORD PTR [rbp-0x28]
  4037ec:	mov    esi,0x40
  4037f1:	mov    rdi,rax
  4037f4:	call   4040e0 <mmk_strchr@@Base>
  4037f9:	mov    QWORD PTR [rbp-0x20],rax
  4037fd:	cmp    QWORD PTR [rbp-0x20],0x0
  403802:	je     403816 <mmk_stub_create_static@@Base+0xd1>
  403804:	mov    rax,QWORD PTR [rbp-0x20]
  403808:	mov    BYTE PTR [rax],0x0
  40380b:	mov    rax,QWORD PTR [rbp-0x20]
  40380f:	inc    rax
  403812:	mov    QWORD PTR [rbp-0x30],rax
  403816:	call   402aee <mmk_plt_ctx@@Base>
  40381b:	mov    rdx,rax
  40381e:	mov    rax,QWORD PTR [rbp-0x30]
  403822:	mov    rsi,rax
  403825:	mov    rdi,rdx
  403828:	call   403310 <plt_get_lib@@Base>
  40382d:	mov    QWORD PTR [rbp-0x18],rax
  403831:	cmp    QWORD PTR [rbp-0x18],0x0
  403836:	jne    403842 <mmk_stub_create_static@@Base+0xfd>
  403838:	mov    eax,0xfffffffe
  40383d:	jmp    403978 <mmk_stub_create_static@@Base+0x233>
  403842:	mov    QWORD PTR [rbp-0x38],0x0
  40384a:	lea    rdx,[rbp-0x38]
  40384e:	mov    rcx,QWORD PTR [rbp-0x28]
  403852:	mov    rax,QWORD PTR [rbp-0x18]
  403856:	mov    rsi,rcx
  403859:	mov    rdi,rax
  40385c:	call   403600 <plt_get_offsets@@Base>
  403861:	mov    QWORD PTR [rbp-0x10],rax
  403865:	cmp    QWORD PTR [rbp-0x10],0x0
  40386a:	je     403875 <mmk_stub_create_static@@Base+0x130>
  40386c:	mov    rax,QWORD PTR [rbp-0x38]
  403870:	test   rax,rax
  403873:	jne    40387f <mmk_stub_create_static@@Base+0x13a>
  403875:	mov    eax,0xfffffffe
  40387a:	jmp    403978 <mmk_stub_create_static@@Base+0x233>
  40387f:	mov    rdx,QWORD PTR [rbp-0x38]
  403883:	mov    rax,QWORD PTR [rbp-0x48]
  403887:	mov    QWORD PTR [rax],0x0
  40388e:	mov    QWORD PTR [rax+0x8],0x0
  403896:	mov    QWORD PTR [rax+0x10],0x0
  40389e:	mov    QWORD PTR [rax+0x18],0x0
  4038a6:	mov    QWORD PTR [rax+0x20],0x0
  4038ae:	mov    QWORD PTR [rax+0x28],0x0
  4038b6:	mov    QWORD PTR [rax+0x30],0x0
  4038be:	mov    QWORD PTR [rax+0x38],0x0
  4038c6:	mov    QWORD PTR [rax+0x40],0x0
  4038ce:	mov    QWORD PTR [rax+0x48],0x0
  4038d6:	mov    rax,QWORD PTR [rbp-0x48]
  4038da:	mov    rcx,0x403aba
  4038e1:	mov    QWORD PTR [rax],rcx
  4038e4:	mov    rax,QWORD PTR [rbp-0x48]
  4038e8:	mov    rcx,0x403b19
  4038ef:	mov    QWORD PTR [rax+0x8],rcx
  4038f3:	mov    rax,QWORD PTR [rbp-0x48]
  4038f7:	mov    rcx,0x403afa
  4038fe:	mov    QWORD PTR [rax+0x10],rcx
  403902:	mov    rax,QWORD PTR [rbp-0x48]
  403906:	mov    rcx,QWORD PTR [rbp-0x60]
  40390a:	mov    QWORD PTR [rax+0x18],rcx
  40390e:	mov    rax,QWORD PTR [rbp-0x48]
  403912:	mov    rcx,QWORD PTR [rbp-0x28]
  403916:	mov    QWORD PTR [rax+0x20],rcx
  40391a:	mov    rax,QWORD PTR [rbp-0x48]
  40391e:	mov    rcx,QWORD PTR [rbp-0x30]
  403922:	mov    QWORD PTR [rax+0x28],rcx
  403926:	mov    rax,QWORD PTR [rbp-0x48]
  40392a:	mov    rcx,QWORD PTR [rbp-0x10]
  40392e:	mov    QWORD PTR [rax+0x30],rcx
  403932:	mov    rax,QWORD PTR [rbp-0x48]
  403936:	mov    QWORD PTR [rax+0x38],rdx
  40393a:	mov    rdx,QWORD PTR [rbp-0x58]
  40393e:	mov    rax,QWORD PTR [rbp-0x48]
  403942:	mov    rsi,rdx
  403945:	mov    rdi,rax
  403948:	call   403b50 <create_trampoline@@Base>
  40394d:	mov    rdx,rax
  403950:	mov    rax,QWORD PTR [rbp-0x48]
  403954:	mov    QWORD PTR [rax+0x40],rdx
  403958:	mov    rax,QWORD PTR [rbp-0x48]
  40395c:	mov    rdx,QWORD PTR [rax+0x40]
  403960:	mov    rcx,QWORD PTR [rbp-0x38]
  403964:	mov    rax,QWORD PTR [rbp-0x10]
  403968:	mov    rsi,rcx
  40396b:	mov    rdi,rax
  40396e:	call   403650 <plt_set_offsets@@Base>
  403973:	mov    eax,0x0
  403978:	mov    rsi,QWORD PTR [rbp-0x8]
  40397c:	xor    rsi,QWORD PTR fs:0x28
  403985:	je     40398c <mmk_stub_create_static@@Base+0x247>
  403987:	call   402080 <__stack_chk_fail@plt>
  40398c:	leave  
  40398d:	ret    

000000000040398e <mmk_stub_create@@Base>:
  40398e:	endbr64 
  403992:	push   rbp
  403993:	mov    rbp,rsp
  403996:	sub    rsp,0x30
  40399a:	mov    QWORD PTR [rbp-0x18],rdi
  40399e:	mov    QWORD PTR [rbp-0x20],rsi
  4039a2:	mov    QWORD PTR [rbp-0x28],rdx
  4039a6:	call   402a51 <mmk_init@@Base>
  4039ab:	mov    edi,0x50
  4039b0:	call   4041e0 <mmk_malloc@@Base>
  4039b5:	mov    QWORD PTR [rbp-0x8],rax
  4039b9:	mov    rcx,QWORD PTR [rbp-0x28]
  4039bd:	mov    rdx,QWORD PTR [rbp-0x20]
  4039c1:	mov    rsi,QWORD PTR [rbp-0x18]
  4039c5:	mov    rax,QWORD PTR [rbp-0x8]
  4039c9:	mov    rdi,rax
  4039cc:	call   403745 <mmk_stub_create_static@@Base>
  4039d1:	mov    DWORD PTR [rbp-0xc],eax
  4039d4:	cmp    DWORD PTR [rbp-0xc],0x0
  4039d8:	jns    4039fb <mmk_stub_create@@Base+0x6d>
  4039da:	mov    rax,QWORD PTR [rbp-0x8]
  4039de:	mov    rdi,rax
  4039e1:	call   404200 <mmk_free@@Base>
  4039e6:	call   402060 <__errno_location@plt>
  4039eb:	mov    rdx,rax
  4039ee:	mov    eax,DWORD PTR [rbp-0xc]
  4039f1:	mov    DWORD PTR [rdx],eax
  4039f3:	mov    QWORD PTR [rbp-0x8],0x0
  4039fb:	mov    rax,QWORD PTR [rbp-0x8]
  4039ff:	leave  
  403a00:	ret    

0000000000403a01 <mmk_stub_destroy_static@@Base>:
  403a01:	endbr64 
  403a05:	push   rbp
  403a06:	mov    rbp,rsp
  403a09:	sub    rsp,0x10
  403a0d:	mov    QWORD PTR [rbp-0x8],rdi
  403a11:	mov    rax,QWORD PTR [rbp-0x8]
  403a15:	mov    rdx,QWORD PTR [rax+0x38]
  403a19:	mov    rax,QWORD PTR [rbp-0x8]
  403a1d:	mov    rax,QWORD PTR [rax+0x30]
  403a21:	mov    rsi,rdx
  403a24:	mov    rdi,rax
  403a27:	call   4036a0 <plt_reset_offsets@@Base>
  403a2c:	mov    rax,QWORD PTR [rbp-0x8]
  403a30:	mov    rax,QWORD PTR [rax+0x30]
  403a34:	mov    rdi,rax
  403a37:	call   404200 <mmk_free@@Base>
  403a3c:	mov    rax,QWORD PTR [rbp-0x8]
  403a40:	mov    rax,QWORD PTR [rax+0x40]
  403a44:	mov    rdi,rax
  403a47:	call   403c20 <destroy_trampoline@@Base>
  403a4c:	mov    rax,QWORD PTR [rbp-0x8]
  403a50:	mov    rax,QWORD PTR [rax+0x20]
  403a54:	mov    rdi,rax
  403a57:	call   404200 <mmk_free@@Base>
  403a5c:	nop
  403a5d:	leave  
  403a5e:	ret    

0000000000403a5f <mmk_stub_destroy@@Base>:
  403a5f:	endbr64 
  403a63:	push   rbp
  403a64:	mov    rbp,rsp
  403a67:	sub    rsp,0x10
  403a6b:	mov    QWORD PTR [rbp-0x8],rdi
  403a6f:	mov    rax,QWORD PTR [rbp-0x8]
  403a73:	mov    rdi,rax
  403a76:	call   403a01 <mmk_stub_destroy_static@@Base>
  403a7b:	mov    rax,QWORD PTR [rbp-0x8]
  403a7f:	mov    rdi,rax
  403a82:	call   404200 <mmk_free@@Base>
  403a87:	nop
  403a88:	leave  
  403a89:	ret    

0000000000403a8a <mmk_ask_ctx@@Base>:
  403a8a:	endbr64 
  403a8e:	push   rbp
  403a8f:	mov    rbp,rsp
  403a92:	sub    rsp,0x10
  403a96:	mov    QWORD PTR [rbp-0x8],rdi
  403a9a:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403aa6:	add    rax,0xffffffffffffffe0
  403aac:	mov    DWORD PTR [rax],0x1
  403ab2:	mov    rax,QWORD PTR [rbp-0x8]
  403ab6:	call   rax
  403ab8:	leave  
  403ab9:	ret    

0000000000403aba <mmk_ctx_asked@@Base>:
  403aba:	endbr64 
  403abe:	push   rbp
  403abf:	mov    rbp,rsp
  403ac2:	sub    rsp,0x10
  403ac6:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403ad2:	add    rax,0xffffffffffffffe0
  403ad8:	mov    eax,DWORD PTR [rax]
  403ada:	mov    DWORD PTR [rbp-0x4],eax
  403add:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403ae9:	add    rax,0xffffffffffffffe0
  403aef:	mov    DWORD PTR [rax],0x0
  403af5:	mov    eax,DWORD PTR [rbp-0x4]
  403af8:	leave  
  403af9:	ret    

0000000000403afa <mmk_ctx@@Base>:
  403afa:	endbr64 
  403afe:	push   rbp
  403aff:	mov    rbp,rsp
  403b02:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403b0e:	add    rax,0xffffffffffffffe8
  403b14:	mov    rax,QWORD PTR [rax]
  403b17:	pop    rbp
  403b18:	ret    

0000000000403b19 <mmk_set_ctx@@Base>:
  403b19:	endbr64 
  403b1d:	push   rbp
  403b1e:	mov    rbp,rsp
  403b21:	sub    rsp,0x10
  403b25:	mov    QWORD PTR [rbp-0x8],rdi
  403b29:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403b35:	lea    rdx,[rax-0x18]
  403b3c:	mov    rax,QWORD PTR [rbp-0x8]
  403b40:	mov    QWORD PTR [rdx],rax
  403b43:	nop
  403b44:	leave  
  403b45:	ret    
  403b46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403b50 <create_trampoline@@Base>:
  403b50:	endbr64 
  403b54:	push   r14
  403b56:	push   r13
  403b58:	push   r12
  403b5a:	mov    r12,0x404375
  403b61:	push   rbp
  403b62:	mov    rbp,0x404448
  403b69:	sub    rbp,r12
  403b6c:	push   rbx
  403b6d:	cmp    rbp,0xfff
  403b74:	ja     403bdb <create_trampoline@@Base+0x8b>
  403b76:	mov    r14,rdi
  403b79:	mov    r13,rsi
  403b7c:	xor    r9d,r9d
  403b7f:	mov    r8d,0xffffffff
  403b85:	mov    ecx,0x22
  403b8a:	mov    edx,0x7
  403b8f:	mov    esi,0x1000
  403b94:	xor    edi,edi
  403b96:	call   402090 <mmap@plt>
  403b9b:	mov    rbx,rax
  403b9e:	cmp    rax,0xffffffffffffffff
  403ba2:	je     403c11 <create_trampoline@@Base+0xc1>
  403ba4:	mov    QWORD PTR [rax],r14
  403ba7:	mov    QWORD PTR [rax+0x8],r13
  403bab:	lea    r13,[rax+0x10]
  403baf:	mov    rdx,rbp
  403bb2:	mov    rsi,r12
  403bb5:	mov    rdi,r13
  403bb8:	call   4020e0 <memcpy@plt>
  403bbd:	mov    rdi,rbx
  403bc0:	mov    edx,0x5
  403bc5:	mov    esi,0x1000
  403bca:	call   402120 <mprotect@plt>
  403bcf:	pop    rbx
  403bd0:	pop    rbp
  403bd1:	pop    r12
  403bd3:	mov    rax,r13
  403bd6:	pop    r13
  403bd8:	pop    r14
  403bda:	ret    
  403bdb:	lea    r9,[rip+0x16e1]        # 4052c3 <_IO_stdin_used@@Base+0x2c3>
  403be2:	mov    r8d,0x2d
  403be8:	mov    rax,QWORD PTR [rip+0x4409]        # 407ff8 <stderr@GLIBC_2.2.5>
  403bef:	lea    rcx,[rip+0x171a]        # 405310 <_IO_stdin_used@@Base+0x310>
  403bf6:	mov    rdi,QWORD PTR [rax]
  403bf9:	lea    rdx,[rip+0x16dd]        # 4052dd <_IO_stdin_used@@Base+0x2dd>
  403c00:	mov    esi,0x1
  403c05:	xor    eax,eax
  403c07:	call   402130 <__fprintf_chk@plt>
  403c0c:	call   402050 <abort@plt>
  403c11:	lea    r9,[rip+0x16e2]        # 4052fa <_IO_stdin_used@@Base+0x2fa>
  403c18:	mov    r8d,0x45
  403c1e:	jmp    403be8 <create_trampoline@@Base+0x98>

0000000000403c20 <destroy_trampoline@@Base>:
  403c20:	endbr64 
  403c24:	sub    rdi,0x10
  403c28:	mov    esi,0x1000
  403c2d:	jmp    402100 <munmap@plt>

0000000000403c32 <mmk_verify_set_times@@Base>:
  403c32:	endbr64 
  403c36:	push   rbp
  403c37:	mov    rbp,rsp
  403c3a:	sub    rsp,0x10
  403c3e:	mov    QWORD PTR [rbp-0x8],rdi
  403c42:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403c4e:	lea    rdx,[rax-0x10]
  403c55:	mov    rax,QWORD PTR [rbp-0x8]
  403c59:	mov    QWORD PTR [rdx],rax
  403c5c:	nop
  403c5d:	leave  
  403c5e:	ret    

0000000000403c5f <mmk_verify_times@@Base>:
  403c5f:	endbr64 
  403c63:	push   rbp
  403c64:	mov    rbp,rsp
  403c67:	sub    rsp,0x20
  403c6b:	mov    QWORD PTR [rbp-0x18],rdi
  403c6f:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403c7b:	add    rax,0xfffffffffffffff0
  403c81:	mov    rax,QWORD PTR [rax]
  403c84:	mov    QWORD PTR [rbp-0x10],rax
  403c88:	mov    rax,QWORD PTR [rbp-0x18]
  403c8c:	mov    eax,DWORD PTR [rax+0x4]
  403c8f:	test   eax,eax
  403c91:	je     403ca3 <mmk_verify_times@@Base+0x44>
  403c93:	cmp    QWORD PTR [rbp-0x10],0x0
  403c98:	sete   al
  403c9b:	movzx  eax,al
  403c9e:	jmp    403d34 <mmk_verify_times@@Base+0xd5>
  403ca3:	mov    rax,QWORD PTR [rbp-0x18]
  403ca7:	mov    rax,QWORD PTR [rax+0x8]
  403cab:	test   rax,rax
  403cae:	jne    403cbd <mmk_verify_times@@Base+0x5e>
  403cb0:	mov    rax,QWORD PTR [rbp-0x18]
  403cb4:	mov    rax,QWORD PTR [rax+0x10]
  403cb8:	test   rax,rax
  403cbb:	je     403d02 <mmk_verify_times@@Base+0xa3>
  403cbd:	mov    rax,QWORD PTR [rbp-0x18]
  403cc1:	mov    rax,QWORD PTR [rax+0x10]
  403cc5:	test   rax,rax
  403cc8:	je     403cd4 <mmk_verify_times@@Base+0x75>
  403cca:	mov    rax,QWORD PTR [rbp-0x18]
  403cce:	mov    rax,QWORD PTR [rax+0x10]
  403cd2:	jmp    403cd8 <mmk_verify_times@@Base+0x79>
  403cd4:	mov    rax,QWORD PTR [rbp-0x10]
  403cd8:	mov    QWORD PTR [rbp-0x8],rax
  403cdc:	mov    rax,QWORD PTR [rbp-0x18]
  403ce0:	mov    rax,QWORD PTR [rax+0x8]
  403ce4:	cmp    QWORD PTR [rbp-0x10],rax
  403ce8:	jb     403cfb <mmk_verify_times@@Base+0x9c>
  403cea:	mov    rax,QWORD PTR [rbp-0x10]
  403cee:	cmp    rax,QWORD PTR [rbp-0x8]
  403cf2:	ja     403cfb <mmk_verify_times@@Base+0x9c>
  403cf4:	mov    eax,0x1
  403cf9:	jmp    403d34 <mmk_verify_times@@Base+0xd5>
  403cfb:	mov    eax,0x0
  403d00:	jmp    403d34 <mmk_verify_times@@Base+0xd5>
  403d02:	mov    rax,QWORD PTR [rbp-0x18]
  403d06:	mov    rax,QWORD PTR [rax+0x20]
  403d0a:	test   rax,rax
  403d0d:	je     403d22 <mmk_verify_times@@Base+0xc3>
  403d0f:	mov    rax,QWORD PTR [rbp-0x18]
  403d13:	mov    rax,QWORD PTR [rax+0x20]
  403d17:	mov    rdx,QWORD PTR [rbp-0x10]
  403d1b:	mov    rdi,rdx
  403d1e:	call   rax
  403d20:	jmp    403d34 <mmk_verify_times@@Base+0xd5>
  403d22:	mov    rax,QWORD PTR [rbp-0x18]
  403d26:	mov    rax,QWORD PTR [rax+0x18]
  403d2a:	cmp    QWORD PTR [rbp-0x10],rax
  403d2e:	sete   al
  403d31:	movzx  eax,al
  403d34:	leave  
  403d35:	ret    
  403d36:	endbr64 
  403d3a:	push   rbp
  403d3b:	mov    rbp,rsp
  403d3e:	sub    rsp,0x40
  403d42:	mov    QWORD PTR [rbp-0x28],rdi
  403d46:	mov    QWORD PTR [rbp-0x30],rsi
  403d4a:	mov    QWORD PTR [rbp-0x38],rdx
  403d4e:	add    QWORD PTR [rbp-0x30],0x8
  403d53:	sub    QWORD PTR [rbp-0x38],0x8
  403d58:	mov    rax,QWORD PTR [rbp-0x28]
  403d5c:	mov    rdi,rax
  403d5f:	call   402fa5 <mmk_mock_params_begin@@Base>
  403d64:	mov    QWORD PTR [rbp-0x10],rax
  403d68:	jmp    403dc6 <mmk_verify_times@@Base+0x167>
  403d6a:	mov    rax,QWORD PTR [rbp-0x10]
  403d6e:	lea    rcx,[rax+0x8]
  403d72:	mov    rdx,QWORD PTR [rbp-0x38]
  403d76:	mov    rax,QWORD PTR [rbp-0x30]
  403d7a:	mov    rsi,rax
  403d7d:	mov    rdi,rcx
  403d80:	call   404000 <mmk_memcmp@@Base>
  403d85:	mov    DWORD PTR [rbp-0x14],eax
  403d88:	cmp    DWORD PTR [rbp-0x14],0x0
  403d8c:	jne    403daf <mmk_verify_times@@Base+0x150>
  403d8e:	mov    rax,QWORD PTR [rbp-0x10]
  403d92:	mov    QWORD PTR [rbp-0x8],rax
  403d96:	mov    rax,QWORD PTR [rbp-0x8]
  403d9a:	mov    rax,QWORD PTR [rax]
  403d9d:	lea    rdx,[rax+0x1]
  403da1:	mov    rax,QWORD PTR [rbp-0x8]
  403da5:	mov    QWORD PTR [rax],rdx
  403da8:	mov    eax,0x1
  403dad:	jmp    403dd2 <mmk_verify_times@@Base+0x173>
  403daf:	mov    rdx,QWORD PTR [rbp-0x10]
  403db3:	mov    rax,QWORD PTR [rbp-0x28]
  403db7:	mov    rsi,rdx
  403dba:	mov    rdi,rax
  403dbd:	call   402fe0 <mmk_mock_params_next@@Base>
  403dc2:	mov    QWORD PTR [rbp-0x10],rax
  403dc6:	cmp    QWORD PTR [rbp-0x10],0x0
  403dcb:	jne    403d6a <mmk_verify_times@@Base+0x10b>
  403dcd:	mov    eax,0x0
  403dd2:	leave  
  403dd3:	ret    

0000000000403dd4 <mmk_verify_register_call@@Base>:
  403dd4:	endbr64 
  403dd8:	push   rbp
  403dd9:	mov    rbp,rsp
  403ddc:	sub    rsp,0x40
  403de0:	mov    QWORD PTR [rbp-0x38],rdi
  403de4:	mov    QWORD PTR [rbp-0x40],rsi
  403de8:	call   403afa <mmk_ctx@@Base>
  403ded:	mov    rdi,rax
  403df0:	call   403721 <mmk_stub_context@@Base>
  403df5:	mov    QWORD PTR [rbp-0x30],rax
  403df9:	mov    rax,QWORD PTR [rbp-0x30]
  403dfd:	mov    rax,QWORD PTR [rax+0x10]
  403e01:	test   rax,rax
  403e04:	jne    403e80 <mmk_verify_register_call@@Base+0xac>
  403e06:	mov    edi,0x1000
  403e0b:	call   4041e0 <mmk_malloc@@Base>
  403e10:	mov    rdx,rax
  403e13:	mov    rax,QWORD PTR [rbp-0x30]
  403e17:	mov    QWORD PTR [rax+0x10],rdx
  403e1b:	mov    rax,QWORD PTR [rbp-0x30]
  403e1f:	mov    rax,QWORD PTR [rax+0x10]
  403e23:	test   rax,rax
  403e26:	jne    403e74 <mmk_verify_register_call@@Base+0xa0>
  403e28:	mov    rax,QWORD PTR [rip+0x41c9]        # 407ff8 <stderr@GLIBC_2.2.5>
  403e2f:	mov    rax,QWORD PTR [rax]
  403e32:	mov    QWORD PTR [rbp-0x20],rax
  403e36:	lea    rax,[rip+0x152b]        # 405368 <_IO_stdin_used@@Base+0x368>
  403e3d:	mov    QWORD PTR [rbp-0x18],rax
  403e41:	mov    rdx,QWORD PTR [rbp-0x18]
  403e45:	mov    rax,QWORD PTR [rbp-0x20]
  403e49:	lea    r9,[rip+0x1535]        # 405385 <_IO_stdin_used@@Base+0x385>
  403e50:	mov    r8d,0x4f
  403e56:	lea    rcx,[rip+0x153b]        # 405398 <_IO_stdin_used@@Base+0x398>
  403e5d:	mov    esi,0x1
  403e62:	mov    rdi,rax
  403e65:	mov    eax,0x0
  403e6a:	call   402130 <__fprintf_chk@plt>
  403e6f:	call   402050 <abort@plt>
  403e74:	mov    rax,QWORD PTR [rbp-0x30]
  403e78:	mov    QWORD PTR [rax+0x20],0x1000
  403e80:	mov    rdx,QWORD PTR [rbp-0x40]
  403e84:	mov    rcx,QWORD PTR [rbp-0x38]
  403e88:	mov    rax,QWORD PTR [rbp-0x30]
  403e8c:	mov    rsi,rcx
  403e8f:	mov    rdi,rax
  403e92:	call   403d36 <mmk_verify_times@@Base+0xd7>
  403e97:	test   eax,eax
  403e99:	jne    403ff9 <mmk_verify_register_call@@Base+0x225>
  403e9f:	mov    rax,QWORD PTR [rbp-0x30]
  403ea3:	mov    rdx,QWORD PTR [rax+0x18]
  403ea7:	mov    rax,QWORD PTR [rbp-0x40]
  403eab:	add    rax,rdx
  403eae:	lea    rdx,[rax+0x8]
  403eb2:	mov    rax,QWORD PTR [rbp-0x30]
  403eb6:	mov    rax,QWORD PTR [rax+0x20]
  403eba:	cmp    rdx,rax
  403ebd:	jb     403f7b <mmk_verify_register_call@@Base+0x1a7>
  403ec3:	jmp    403edc <mmk_verify_register_call@@Base+0x108>
  403ec5:	mov    rax,QWORD PTR [rbp-0x30]
  403ec9:	mov    rax,QWORD PTR [rax+0x20]
  403ecd:	lea    rdx,[rax+0x1000]
  403ed4:	mov    rax,QWORD PTR [rbp-0x30]
  403ed8:	mov    QWORD PTR [rax+0x20],rdx
  403edc:	mov    rax,QWORD PTR [rbp-0x30]
  403ee0:	mov    rdx,QWORD PTR [rax+0x18]
  403ee4:	mov    rax,QWORD PTR [rbp-0x40]
  403ee8:	add    rax,rdx
  403eeb:	lea    rdx,[rax+0x8]
  403eef:	mov    rax,QWORD PTR [rbp-0x30]
  403ef3:	mov    rax,QWORD PTR [rax+0x20]
  403ef7:	cmp    rdx,rax
  403efa:	jae    403ec5 <mmk_verify_register_call@@Base+0xf1>
  403efc:	mov    rax,QWORD PTR [rbp-0x30]
  403f00:	mov    rdx,QWORD PTR [rax+0x20]
  403f04:	mov    rax,QWORD PTR [rbp-0x30]
  403f08:	mov    rax,QWORD PTR [rax+0x10]
  403f0c:	mov    rsi,rdx
  403f0f:	mov    rdi,rax
  403f12:	call   4041f0 <mmk_realloc@@Base>
  403f17:	mov    rdx,rax
  403f1a:	mov    rax,QWORD PTR [rbp-0x30]
  403f1e:	mov    QWORD PTR [rax+0x10],rdx
  403f22:	mov    rax,QWORD PTR [rbp-0x30]
  403f26:	mov    rax,QWORD PTR [rax+0x10]
  403f2a:	test   rax,rax
  403f2d:	jne    403f7b <mmk_verify_register_call@@Base+0x1a7>
  403f2f:	mov    rax,QWORD PTR [rip+0x40c2]        # 407ff8 <stderr@GLIBC_2.2.5>
  403f36:	mov    rax,QWORD PTR [rax]
  403f39:	mov    QWORD PTR [rbp-0x10],rax
  403f3d:	lea    rax,[rip+0x1424]        # 405368 <_IO_stdin_used@@Base+0x368>
  403f44:	mov    QWORD PTR [rbp-0x8],rax
  403f48:	mov    rdx,QWORD PTR [rbp-0x8]
  403f4c:	mov    rax,QWORD PTR [rbp-0x10]
  403f50:	lea    r9,[rip+0x142e]        # 405385 <_IO_stdin_used@@Base+0x385>
  403f57:	mov    r8d,0x5b
  403f5d:	lea    rcx,[rip+0x1434]        # 405398 <_IO_stdin_used@@Base+0x398>
  403f64:	mov    esi,0x1
  403f69:	mov    rdi,rax
  403f6c:	mov    eax,0x0
  403f71:	call   402130 <__fprintf_chk@plt>
  403f76:	call   402050 <abort@plt>
  403f7b:	mov    rax,QWORD PTR [rbp-0x30]
  403f7f:	mov    rdx,QWORD PTR [rax+0x10]
  403f83:	mov    rax,QWORD PTR [rbp-0x30]
  403f87:	mov    rax,QWORD PTR [rax+0x18]
  403f8b:	lea    rcx,[rdx+rax*1]
  403f8f:	lea    rax,[rbp-0x40]
  403f93:	mov    edx,0x8
  403f98:	mov    rsi,rax
  403f9b:	mov    rdi,rcx
  403f9e:	call   404050 <mmk_memcpy@@Base>
  403fa3:	mov    rdx,QWORD PTR [rbp-0x40]
  403fa7:	mov    rax,QWORD PTR [rbp-0x30]
  403fab:	mov    rcx,QWORD PTR [rax+0x10]
  403faf:	mov    rax,QWORD PTR [rbp-0x30]
  403fb3:	mov    rax,QWORD PTR [rax+0x18]
  403fb7:	add    rax,0x8
  403fbb:	add    rcx,rax
  403fbe:	mov    rax,QWORD PTR [rbp-0x38]
  403fc2:	mov    rsi,rax
  403fc5:	mov    rdi,rcx
  403fc8:	call   404050 <mmk_memcpy@@Base>
  403fcd:	mov    QWORD PTR [rbp-0x28],rax
  403fd1:	mov    rax,QWORD PTR [rbp-0x28]
  403fd5:	mov    QWORD PTR [rax],0x1
  403fdc:	mov    rax,QWORD PTR [rbp-0x30]
  403fe0:	mov    rdx,QWORD PTR [rax+0x18]
  403fe4:	mov    rax,QWORD PTR [rbp-0x40]
  403fe8:	add    rax,rdx
  403feb:	lea    rdx,[rax+0x8]
  403fef:	mov    rax,QWORD PTR [rbp-0x30]
  403ff3:	mov    QWORD PTR [rax+0x18],rdx
  403ff7:	jmp    403ffa <mmk_verify_register_call@@Base+0x226>
  403ff9:	nop
  403ffa:	leave  
  403ffb:	ret    
  403ffc:	nop    DWORD PTR [rax+0x0]

0000000000404000 <mmk_memcmp@@Base>:
  404000:	endbr64 
  404004:	test   rdx,rdx
  404007:	je     404037 <mmk_memcmp@@Base+0x37>
  404009:	movzx  ecx,BYTE PTR [rdi]
  40400c:	movzx  r8d,BYTE PTR [rsi]
  404010:	cmp    cl,r8b
  404013:	jne    404040 <mmk_memcmp@@Base+0x40>
  404015:	mov    eax,0x1
  40401a:	jmp    404032 <mmk_memcmp@@Base+0x32>
  40401c:	nop    DWORD PTR [rax+0x0]
  404020:	movzx  ecx,BYTE PTR [rdi+rax*1]
  404024:	inc    rax
  404027:	movzx  r8d,BYTE PTR [rsi+rax*1-0x1]
  40402d:	cmp    cl,r8b
  404030:	jne    404040 <mmk_memcmp@@Base+0x40>
  404032:	cmp    rax,rdx
  404035:	jne    404020 <mmk_memcmp@@Base+0x20>
  404037:	xor    eax,eax
  404039:	ret    
  40403a:	nop    WORD PTR [rax+rax*1+0x0]
  404040:	xor    eax,eax
  404042:	cmp    r8b,cl
  404045:	setle  al
  404048:	lea    eax,[rax+rax*1-0x1]
  40404c:	ret    
  40404d:	nop    DWORD PTR [rax]

0000000000404050 <mmk_memcpy@@Base>:
  404050:	endbr64 
  404054:	mov    rax,rdi
  404057:	test   rdx,rdx
  40405a:	je     404071 <mmk_memcpy@@Base+0x21>
  40405c:	xor    ecx,ecx
  40405e:	xchg   ax,ax
  404060:	movzx  r8d,BYTE PTR [rsi+rcx*1]
  404065:	mov    BYTE PTR [rax+rcx*1],r8b
  404069:	inc    rcx
  40406c:	cmp    rcx,rdx
  40406f:	jne    404060 <mmk_memcpy@@Base+0x10>
  404071:	ret    
  404072:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40407d:	nop    DWORD PTR [rax]

0000000000404080 <mmk_strneq@@Base>:
  404080:	endbr64 
  404084:	movzx  eax,BYTE PTR [rdi]
  404087:	test   al,al
  404089:	jne    4040a9 <mmk_strneq@@Base+0x29>
  40408b:	jmp    4040b0 <mmk_strneq@@Base+0x30>
  40408d:	nop    DWORD PTR [rax]
  404090:	test   rdx,rdx
  404093:	je     4040d0 <mmk_strneq@@Base+0x50>
  404095:	cmp    al,cl
  404097:	jne    4040c8 <mmk_strneq@@Base+0x48>
  404099:	inc    rdi
  40409c:	movzx  eax,BYTE PTR [rdi]
  40409f:	inc    rsi
  4040a2:	dec    rdx
  4040a5:	test   al,al
  4040a7:	je     4040b0 <mmk_strneq@@Base+0x30>
  4040a9:	movzx  ecx,BYTE PTR [rsi]
  4040ac:	test   cl,cl
  4040ae:	jne    404090 <mmk_strneq@@Base+0x10>
  4040b0:	mov    eax,0x1
  4040b5:	test   rdx,rdx
  4040b8:	je     4040ca <mmk_strneq@@Base+0x4a>
  4040ba:	xor    eax,eax
  4040bc:	cmp    BYTE PTR [rsi],0x0
  4040bf:	sete   al
  4040c2:	ret    
  4040c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4040c8:	xor    eax,eax
  4040ca:	ret    
  4040cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4040d0:	mov    eax,0x1
  4040d5:	ret    
  4040d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004040e0 <mmk_strchr@@Base>:
  4040e0:	endbr64 
  4040e4:	movsx  eax,BYTE PTR [rdi]
  4040e7:	test   al,al
  4040e9:	je     404106 <mmk_strchr@@Base+0x26>
  4040eb:	cmp    esi,eax
  4040ed:	jne    4040fc <mmk_strchr@@Base+0x1c>
  4040ef:	jmp    404110 <mmk_strchr@@Base+0x30>
  4040f1:	nop    DWORD PTR [rax+0x0]
  4040f8:	cmp    edx,esi
  4040fa:	je     404110 <mmk_strchr@@Base+0x30>
  4040fc:	inc    rdi
  4040ff:	movsx  edx,BYTE PTR [rdi]
  404102:	test   dl,dl
  404104:	jne    4040f8 <mmk_strchr@@Base+0x18>
  404106:	xor    eax,eax
  404108:	ret    
  404109:	nop    DWORD PTR [rax+0x0]
  404110:	mov    rax,rdi
  404113:	ret    
  404114:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40411f:	nop

0000000000404120 <mmk_strcpy@@Base>:
  404120:	endbr64 
  404124:	movzx  edx,BYTE PTR [rsi]
  404127:	mov    rax,rdi
  40412a:	test   dl,dl
  40412c:	je     40413f <mmk_strcpy@@Base+0x1f>
  40412e:	xchg   ax,ax
  404130:	mov    BYTE PTR [rax],dl
  404132:	inc    rsi
  404135:	inc    rax
  404138:	movzx  edx,BYTE PTR [rsi]
  40413b:	test   dl,dl
  40413d:	jne    404130 <mmk_strcpy@@Base+0x10>
  40413f:	mov    BYTE PTR [rax],0x0
  404142:	ret    
  404143:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40414e:	xchg   ax,ax

0000000000404150 <mmk_strncpy@@Base>:
  404150:	endbr64 
  404154:	movzx  ecx,BYTE PTR [rsi]
  404157:	mov    rax,rdi
  40415a:	test   rdx,rdx
  40415d:	je     404184 <mmk_strncpy@@Base+0x34>
  40415f:	test   cl,cl
  404161:	je     404184 <mmk_strncpy@@Base+0x34>
  404163:	add    rdx,rdi
  404166:	jmp    404174 <mmk_strncpy@@Base+0x24>
  404168:	nop    DWORD PTR [rax+rax*1+0x0]
  404170:	test   cl,cl
  404172:	je     404184 <mmk_strncpy@@Base+0x34>
  404174:	mov    BYTE PTR [rax],cl
  404176:	inc    rsi
  404179:	inc    rax
  40417c:	movzx  ecx,BYTE PTR [rsi]
  40417f:	cmp    rax,rdx
  404182:	jne    404170 <mmk_strncpy@@Base+0x20>
  404184:	mov    BYTE PTR [rax],0x0
  404187:	ret    
  404188:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404190 <mmk_strlen@@Base>:
  404190:	endbr64 
  404194:	xor    eax,eax
  404196:	cmp    BYTE PTR [rdi],0x0
  404199:	je     4041b0 <mmk_strlen@@Base+0x20>
  40419b:	nop    DWORD PTR [rax+rax*1+0x0]
  4041a0:	inc    rax
  4041a3:	cmp    BYTE PTR [rdi+rax*1],0x0
  4041a7:	jne    4041a0 <mmk_strlen@@Base+0x10>
  4041a9:	ret    
  4041aa:	nop    WORD PTR [rax+rax*1+0x0]
  4041b0:	ret    
  4041b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4041bc:	nop    DWORD PTR [rax+0x0]

00000000004041c0 <mmk_isspace@@Base>:
  4041c0:	endbr64 
  4041c4:	xor    eax,eax
  4041c6:	cmp    edi,0x20
  4041c9:	ja     4041dd <mmk_isspace@@Base+0x1d>
  4041cb:	movabs rax,0x100002600
  4041d5:	shrx   rax,rax,rdi
  4041da:	and    eax,0x1
  4041dd:	ret    
  4041de:	xchg   ax,ax

00000000004041e0 <mmk_malloc@@Base>:
  4041e0:	endbr64 
  4041e4:	mov    rax,0x408100
  4041eb:	jmp    QWORD PTR [rax]
  4041ed:	nop    DWORD PTR [rax]

00000000004041f0 <mmk_realloc@@Base>:
  4041f0:	endbr64 
  4041f4:	mov    rax,0x4080f0
  4041fb:	jmp    QWORD PTR [rax]
  4041fd:	nop    DWORD PTR [rax]

0000000000404200 <mmk_free@@Base>:
  404200:	endbr64 
  404204:	mov    rax,0x4080f8
  40420b:	jmp    QWORD PTR [rax]
  40420d:	nop    DWORD PTR [rax]

0000000000404210 <mmk_init_vital_functions@@Base>:
  404210:	endbr64 
  404214:	push   rbx
  404215:	mov    rbx,rdi
  404218:	xor    edi,edi
  40421a:	call   402150 <malloc@plt>
  40421f:	mov    rdi,rax
  404222:	xor    esi,esi
  404224:	call   4020f0 <realloc@plt>
  404229:	mov    rdi,rax
  40422c:	call   402040 <free@plt>
  404231:	lea    rsi,[rip+0x11b4]        # 4053ec <_IO_stdin_used@@Base+0x3ec>
  404238:	mov    rdi,rbx
  40423b:	call   4036d0 <plt_get_real_fn@@Base>
  404240:	mov    rdx,0x408100
  404247:	mov    QWORD PTR [rdx],rax
  40424a:	test   rax,rax
  40424d:	je     40428d <mmk_init_vital_functions@@Base+0x7d>
  40424f:	lea    rsi,[rip+0x119d]        # 4053f3 <_IO_stdin_used@@Base+0x3f3>
  404256:	mov    rdi,rbx
  404259:	call   4036d0 <plt_get_real_fn@@Base>
  40425e:	mov    rdx,0x4080f0
  404265:	mov    QWORD PTR [rdx],rax
  404268:	test   rax,rax
  40426b:	je     4042d2 <mmk_init_vital_functions@@Base+0xc2>
  40426d:	lea    rsi,[rip+0x1187]        # 4053fb <_IO_stdin_used@@Base+0x3fb>
  404274:	mov    rdi,rbx
  404277:	call   4036d0 <plt_get_real_fn@@Base>
  40427c:	mov    rdx,0x4080f8
  404283:	mov    QWORD PTR [rdx],rax
  404286:	test   rax,rax
  404289:	je     4042c3 <mmk_init_vital_functions@@Base+0xb3>
  40428b:	pop    rbx
  40428c:	ret    
  40428d:	lea    r9,[rip+0x116c]        # 405400 <_IO_stdin_used@@Base+0x400>
  404294:	mov    r8d,0x58
  40429a:	mov    rax,QWORD PTR [rip+0x3d57]        # 407ff8 <stderr@GLIBC_2.2.5>
  4042a1:	lea    rcx,[rip+0x1190]        # 405438 <_IO_stdin_used@@Base+0x438>
  4042a8:	mov    rdi,QWORD PTR [rax]
  4042ab:	lea    rdx,[rip+0x102b]        # 4052dd <_IO_stdin_used@@Base+0x2dd>
  4042b2:	mov    esi,0x1
  4042b7:	xor    eax,eax
  4042b9:	call   402130 <__fprintf_chk@plt>
  4042be:	call   402050 <abort@plt>
  4042c3:	lea    r9,[rip+0x11fe]        # 4054c8 <_IO_stdin_used@@Base+0x4c8>
  4042ca:	mov    r8d,0x5a
  4042d0:	jmp    40429a <mmk_init_vital_functions@@Base+0x8a>
  4042d2:	lea    r9,[rip+0x11b7]        # 405490 <_IO_stdin_used@@Base+0x490>
  4042d9:	mov    r8d,0x59
  4042df:	jmp    40429a <mmk_init_vital_functions@@Base+0x8a>

00000000004042e1 <mmk_when_init@@Base>:
  4042e1:	endbr64 
  4042e5:	push   rbp
  4042e6:	mov    rbp,rsp
  4042e9:	sub    rsp,0x10
  4042ed:	mov    QWORD PTR [rbp-0x8],rdi
  4042f1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4042fd:	lea    rdx,[rax-0x8]
  404304:	mov    rax,QWORD PTR [rbp-0x8]
  404308:	mov    QWORD PTR [rdx],rax
  40430b:	nop
  40430c:	leave  
  40430d:	ret    

000000000040430e <mmk_when_get_result@@Base>:
  40430e:	endbr64 
  404312:	push   rbp
  404313:	mov    rbp,rsp
  404316:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404322:	add    rax,0xfffffffffffffff8
  404328:	mov    rax,QWORD PTR [rax]
  40432b:	pop    rbp
  40432c:	ret    

000000000040432d <mmk_when_impl@@Base>:
  40432d:	endbr64 
  404331:	push   rbp
  404332:	mov    rbp,rsp
  404335:	sub    rsp,0x20
  404339:	mov    QWORD PTR [rbp-0x18],rdi
  40433d:	mov    QWORD PTR [rbp-0x20],rsi
  404341:	mov    rax,QWORD PTR [rbp-0x20]
  404345:	mov    QWORD PTR [rbp-0x8],rax
  404349:	call   402c30 <mmk_matcher_ctx@@Base>
  40434e:	mov    rdx,rax
  404351:	mov    rax,QWORD PTR [rbp-0x8]
  404355:	mov    QWORD PTR [rax],rdx
  404358:	mov    rax,QWORD PTR [rbp-0x18]
  40435c:	mov    rdx,QWORD PTR [rax]
  40435f:	mov    rax,QWORD PTR [rbp-0x8]
  404363:	mov    QWORD PTR [rax+0x8],rdx
  404367:	mov    rax,QWORD PTR [rbp-0x18]
  40436b:	mov    rdx,QWORD PTR [rbp-0x8]
  40436f:	mov    QWORD PTR [rax],rdx
  404372:	nop
  404373:	leave  
  404374:	ret    

0000000000404375 <mmk_trampoline@@Base>:
  404375:	call   40437a <mmk_trampoline@@Base+0x5>
  40437a:	pop    rax
  40437b:	push   rax
  40437c:	mov    rax,QWORD PTR [rax-0x15]
  404380:	push   rdi
  404381:	push   rsi
  404382:	push   rdx
  404383:	push   rcx
  404384:	push   r8
  404386:	push   r9
  404388:	sub    rsp,0x10
  40438c:	movdqu XMMWORD PTR [rsp],xmm0
  404391:	sub    rsp,0x10
  404395:	movdqu XMMWORD PTR [rsp],xmm1
  40439a:	sub    rsp,0x10
  40439e:	movdqu XMMWORD PTR [rsp],xmm2
  4043a3:	sub    rsp,0x10
  4043a7:	movdqu XMMWORD PTR [rsp],xmm3
  4043ac:	sub    rsp,0x10
  4043b0:	movdqu XMMWORD PTR [rsp],xmm4
  4043b5:	sub    rsp,0x10
  4043b9:	movdqu XMMWORD PTR [rsp],xmm5
  4043be:	sub    rsp,0x10
  4043c2:	movdqu XMMWORD PTR [rsp],xmm6
  4043c7:	sub    rsp,0x10
  4043cb:	movdqu XMMWORD PTR [rsp],xmm7
  4043d0:	mov    rdi,rax
  4043d3:	push   rax
  4043d4:	mov    rax,QWORD PTR [rax+0x8]
  4043d8:	call   rax
  4043da:	pop    rax
  4043db:	mov    rax,QWORD PTR [rax]
  4043de:	call   rax
  4043e0:	movdqu xmm7,XMMWORD PTR [rsp]
  4043e5:	add    rsp,0x10
  4043e9:	movdqu xmm6,XMMWORD PTR [rsp]
  4043ee:	add    rsp,0x10
  4043f2:	movdqu xmm5,XMMWORD PTR [rsp]
  4043f7:	add    rsp,0x10
  4043fb:	movdqu xmm4,XMMWORD PTR [rsp]
  404400:	add    rsp,0x10
  404404:	movdqu xmm3,XMMWORD PTR [rsp]
  404409:	add    rsp,0x10
  40440d:	movdqu xmm2,XMMWORD PTR [rsp]
  404412:	add    rsp,0x10
  404416:	movdqu xmm1,XMMWORD PTR [rsp]
  40441b:	add    rsp,0x10
  40441f:	movdqu xmm0,XMMWORD PTR [rsp]
  404424:	add    rsp,0x10
  404428:	pop    r9
  40442a:	pop    r8
  40442c:	pop    rcx
  40442d:	pop    rdx
  40442e:	pop    rsi
  40442f:	pop    rdi
  404430:	test   rax,rax
  404433:	jne    40443c <mmk_trampoline@@Base+0xc7>
  404435:	pop    rax
  404436:	mov    rax,QWORD PTR [rax-0xd]
  40443a:	jmp    rax
  40443c:	pop    rax
  40443d:	mov    rax,QWORD PTR [rax-0x15]
  404441:	mov    rax,QWORD PTR [rax+0x10]
  404445:	call   rax
  404447:	ret    

0000000000404448 <mmk_trampoline_end@@Base>:
  404448:	nop
  404449:	nop    DWORD PTR [rax+0x0]

0000000000404450 <__libc_csu_init@@Base>:
  404450:	endbr64 
  404454:	push   r15
  404456:	lea    r15,[rip+0x396b]        # 407dc8 <_IO_stdin_used@@Base+0x2dc8>
  40445d:	push   r14
  40445f:	mov    r14,rdx
  404462:	push   r13
  404464:	mov    r13,rsi
  404467:	push   r12
  404469:	mov    r12d,edi
  40446c:	push   rbp
  40446d:	lea    rbp,[rip+0x395c]        # 407dd0 <_IO_stdin_used@@Base+0x2dd0>
  404474:	push   rbx
  404475:	sub    rbp,r15
  404478:	sub    rsp,0x8
  40447c:	call   402000 <__snprintf_chk@plt-0x30>
  404481:	sar    rbp,0x3
  404485:	je     4044a6 <__libc_csu_init@@Base+0x56>
  404487:	xor    ebx,ebx
  404489:	nop    DWORD PTR [rax+0x0]
  404490:	mov    rdx,r14
  404493:	mov    rsi,r13
  404496:	mov    edi,r12d
  404499:	call   QWORD PTR [r15+rbx*8]
  40449d:	add    rbx,0x1
  4044a1:	cmp    rbp,rbx
  4044a4:	jne    404490 <__libc_csu_init@@Base+0x40>
  4044a6:	add    rsp,0x8
  4044aa:	pop    rbx
  4044ab:	pop    rbp
  4044ac:	pop    r12
  4044ae:	pop    r13
  4044b0:	pop    r14
  4044b2:	pop    r15
  4044b4:	ret    
  4044b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004044c0 <__libc_csu_fini@@Base>:
  4044c0:	endbr64 
  4044c4:	ret    

Disassembly of section .fini:

00000000004044c8 <.fini>:
  4044c8:	endbr64 
  4044cc:	sub    rsp,0x8
  4044d0:	add    rsp,0x8
  4044d4:	ret    
