
../repos/LuaJIT-2.0.5/src/host/buildvm:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x11fd9]        # 412fe8 <strstr@plt+0x11e18>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x11fe2]        # 413008 <strstr@plt+0x11e38>
  401026:	jmp    QWORD PTR [rip+0x11fe4]        # 413010 <strstr@plt+0x11e40>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x11fe2]        # 413018 <strstr@plt+0x11e48>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <__errno_location@plt>:
  401040:	jmp    QWORD PTR [rip+0x11fda]        # 413020 <strstr@plt+0x11e50>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <strncmp@plt>:
  401050:	jmp    QWORD PTR [rip+0x11fd2]        # 413028 <strstr@plt+0x11e58>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <strcpy@plt>:
  401060:	jmp    QWORD PTR [rip+0x11fca]        # 413030 <strstr@plt+0x11e60>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <ferror@plt>:
  401070:	jmp    QWORD PTR [rip+0x11fc2]        # 413038 <strstr@plt+0x11e68>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <strtod@plt>:
  401080:	jmp    QWORD PTR [rip+0x11fba]        # 413040 <strstr@plt+0x11e70>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <fclose@plt>:
  401090:	jmp    QWORD PTR [rip+0x11fb2]        # 413048 <strstr@plt+0x11e78>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <strlen@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x11faa]        # 413050 <strstr@plt+0x11e80>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <strchr@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x11fa2]        # 413058 <strstr@plt+0x11e88>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <memset@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x11f9a]        # 413060 <strstr@plt+0x11e90>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <fputc@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x11f92]        # 413068 <strstr@plt+0x11e98>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <strcspn@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x11f8a]        # 413070 <strstr@plt+0x11ea0>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <fgets@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x11f82]        # 413078 <strstr@plt+0x11ea8>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

0000000000401100 <strcmp@plt>:
  401100:	jmp    QWORD PTR [rip+0x11f7a]        # 413080 <strstr@plt+0x11eb0>
  401106:	push   0xd
  40110b:	jmp    401020 <free@plt-0x10>

0000000000401110 <putc@plt>:
  401110:	jmp    QWORD PTR [rip+0x11f72]        # 413088 <strstr@plt+0x11eb8>
  401116:	push   0xe
  40111b:	jmp    401020 <free@plt-0x10>

0000000000401120 <fprintf@plt>:
  401120:	jmp    QWORD PTR [rip+0x11f6a]        # 413090 <strstr@plt+0x11ec0>
  401126:	push   0xf
  40112b:	jmp    401020 <free@plt-0x10>

0000000000401130 <strtol@plt>:
  401130:	jmp    QWORD PTR [rip+0x11f62]        # 413098 <strstr@plt+0x11ec8>
  401136:	push   0x10
  40113b:	jmp    401020 <free@plt-0x10>

0000000000401140 <memcpy@plt>:
  401140:	jmp    QWORD PTR [rip+0x11f5a]        # 4130a0 <strstr@plt+0x11ed0>
  401146:	push   0x11
  40114b:	jmp    401020 <free@plt-0x10>

0000000000401150 <malloc@plt>:
  401150:	jmp    QWORD PTR [rip+0x11f52]        # 4130a8 <strstr@plt+0x11ed8>
  401156:	push   0x12
  40115b:	jmp    401020 <free@plt-0x10>

0000000000401160 <fflush@plt>:
  401160:	jmp    QWORD PTR [rip+0x11f4a]        # 4130b0 <strstr@plt+0x11ee0>
  401166:	push   0x13
  40116b:	jmp    401020 <free@plt-0x10>

0000000000401170 <realloc@plt>:
  401170:	jmp    QWORD PTR [rip+0x11f42]        # 4130b8 <strstr@plt+0x11ee8>
  401176:	push   0x14
  40117b:	jmp    401020 <free@plt-0x10>

0000000000401180 <fopen@plt>:
  401180:	jmp    QWORD PTR [rip+0x11f3a]        # 4130c0 <strstr@plt+0x11ef0>
  401186:	push   0x15
  40118b:	jmp    401020 <free@plt-0x10>

0000000000401190 <sprintf@plt>:
  401190:	jmp    QWORD PTR [rip+0x11f32]        # 4130c8 <strstr@plt+0x11ef8>
  401196:	push   0x16
  40119b:	jmp    401020 <free@plt-0x10>

00000000004011a0 <exit@plt>:
  4011a0:	jmp    QWORD PTR [rip+0x11f2a]        # 4130d0 <strstr@plt+0x11f00>
  4011a6:	push   0x17
  4011ab:	jmp    401020 <free@plt-0x10>

00000000004011b0 <fwrite@plt>:
  4011b0:	jmp    QWORD PTR [rip+0x11f22]        # 4130d8 <strstr@plt+0x11f08>
  4011b6:	push   0x18
  4011bb:	jmp    401020 <free@plt-0x10>

00000000004011c0 <strerror@plt>:
  4011c0:	jmp    QWORD PTR [rip+0x11f1a]        # 4130e0 <strstr@plt+0x11f10>
  4011c6:	push   0x19
  4011cb:	jmp    401020 <free@plt-0x10>

00000000004011d0 <strstr@plt>:
  4011d0:	jmp    QWORD PTR [rip+0x11f12]        # 4130e8 <strstr@plt+0x11f18>
  4011d6:	push   0x1a
  4011db:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

00000000004011e0 <.text>:
  4011e0:	endbr64 
  4011e4:	xor    ebp,ebp
  4011e6:	mov    r9,rdx
  4011e9:	pop    rsi
  4011ea:	mov    rdx,rsp
  4011ed:	and    rsp,0xfffffffffffffff0
  4011f1:	push   rax
  4011f2:	push   rsp
  4011f3:	mov    r8,0x408e50
  4011fa:	mov    rcx,0x408de0
  401201:	mov    rdi,0x402a50
  401208:	call   QWORD PTR [rip+0x11dd2]        # 412fe0 <strstr@plt+0x11e10>
  40120e:	hlt    
  40120f:	nop
  401210:	endbr64 
  401214:	ret    
  401215:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40121f:	nop
  401220:	mov    eax,0x413100
  401225:	cmp    rax,0x413100
  40122b:	je     401240 <strstr@plt+0x70>
  40122d:	mov    eax,0x0
  401232:	test   rax,rax
  401235:	je     401240 <strstr@plt+0x70>
  401237:	mov    edi,0x413100
  40123c:	jmp    rax
  40123e:	xchg   ax,ax
  401240:	ret    
  401241:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40124c:	nop    DWORD PTR [rax+0x0]
  401250:	mov    esi,0x413100
  401255:	sub    rsi,0x413100
  40125c:	mov    rax,rsi
  40125f:	shr    rsi,0x3f
  401263:	sar    rax,0x3
  401267:	add    rsi,rax
  40126a:	sar    rsi,1
  40126d:	je     401280 <strstr@plt+0xb0>
  40126f:	mov    eax,0x0
  401274:	test   rax,rax
  401277:	je     401280 <strstr@plt+0xb0>
  401279:	mov    edi,0x413100
  40127e:	jmp    rax
  401280:	ret    
  401281:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40128c:	nop    DWORD PTR [rax+0x0]
  401290:	endbr64 
  401294:	cmp    BYTE PTR [rip+0x11e65],0x0        # 413100 <strstr@plt+0x11f30>
  40129b:	jne    4012b0 <strstr@plt+0xe0>
  40129d:	push   rbp
  40129e:	mov    rbp,rsp
  4012a1:	call   401220 <strstr@plt+0x50>
  4012a6:	mov    BYTE PTR [rip+0x11e53],0x1        # 413100 <strstr@plt+0x11f30>
  4012ad:	pop    rbp
  4012ae:	ret    
  4012af:	nop
  4012b0:	ret    
  4012b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4012bc:	nop    DWORD PTR [rax+0x0]
  4012c0:	endbr64 
  4012c4:	jmp    401250 <strstr@plt+0x80>
  4012c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012d0:	push   r15
  4012d2:	push   r14
  4012d4:	push   rbx
  4012d5:	mov    r15d,esi
  4012d8:	mov    QWORD PTR [rdi],0x0
  4012df:	lea    eax,[r15-0x1]
  4012e3:	cdqe   
  4012e5:	lea    rax,[rax+rax*4]
  4012e9:	shl    rax,0x3
  4012ed:	add    rax,0x78
  4012f1:	je     401326 <strstr@plt+0x156>
  4012f3:	mov    r14,rdi
  4012f6:	mov    ecx,0x10
  4012fb:	nop    DWORD PTR [rax+rax*1+0x0]
  401300:	mov    rbx,rcx
  401303:	lea    rcx,[rcx+rcx*1]
  401307:	cmp    rbx,rax
  40130a:	jb     401300 <strstr@plt+0x130>
  40130c:	mov    rdi,rbx
  40130f:	call   401150 <malloc@plt>
  401314:	mov    QWORD PTR [r14],rax
  401317:	test   rax,rax
  40131a:	jne    40132a <strstr@plt+0x15a>
  40131c:	mov    edi,0x1
  401321:	call   4011a0 <exit@plt>
  401326:	xor    eax,eax
  401328:	xor    ebx,ebx
  40132a:	mov    QWORD PTR [rax],rbx
  40132d:	vxorps xmm0,xmm0,xmm0
  401331:	vmovups YMMWORD PTR [rax+0x10],ymm0
  401336:	mov    QWORD PTR [rax+0x30],0x0
  40133e:	mov    DWORD PTR [rax+0x48],r15d
  401342:	test   r15d,r15d
  401345:	jle    4013fc <strstr@plt+0x22c>
  40134b:	mov    esi,r15d
  40134e:	mov    r8d,esi
  401351:	and    r8d,0x1
  401355:	cmp    r15d,0x1
  401359:	jne    401367 <strstr@plt+0x197>
  40135b:	xor    edx,edx
  40135d:	test   r8,r8
  401360:	jne    4013d4 <strstr@plt+0x204>
  401362:	jmp    4013fc <strstr@plt+0x22c>
  401367:	lea    rdi,[rax+0x94]
  40136e:	sub    rsi,r8
  401371:	mov    ebx,0x1000000
  401376:	xor    edx,edx
  401378:	vxorps xmm0,xmm0,xmm0
  40137c:	nop    DWORD PTR [rax+0x0]
  401380:	vmovups XMMWORD PTR [rdi-0x3c],xmm0
  401385:	lea    ecx,[rbx-0x1000000]
  40138b:	movsxd rcx,ecx
  40138e:	neg    rcx
  401391:	shl    rcx,0x2
  401395:	mov    QWORD PTR [rdi-0x44],rcx
  401399:	mov    DWORD PTR [rdi-0x28],0x0
  4013a0:	vmovups XMMWORD PTR [rdi-0x14],xmm0
  4013a5:	movsxd rbx,ebx
  4013a8:	mov    rcx,rbx
  4013ab:	neg    rcx
  4013ae:	shl    rcx,0x2
  4013b2:	mov    QWORD PTR [rdi-0x1c],rcx
  4013b6:	mov    DWORD PTR [rdi],0x0
  4013bc:	add    rdx,0x2
  4013c0:	add    rdi,0x50
  4013c4:	add    ebx,0x2000000
  4013ca:	cmp    rsi,rdx
  4013cd:	jne    401380 <strstr@plt+0x1b0>
  4013cf:	test   r8,r8
  4013d2:	je     4013fc <strstr@plt+0x22c>
  4013d4:	lea    rcx,[rdx+rdx*4]
  4013d8:	vxorps xmm0,xmm0,xmm0
  4013dc:	vmovups XMMWORD PTR [rax+rcx*8+0x58],xmm0
  4013e2:	shl    edx,0x18
  4013e5:	movsxd rdx,edx
  4013e8:	neg    rdx
  4013eb:	shl    rdx,0x2
  4013ef:	mov    QWORD PTR [rax+rcx*8+0x50],rdx
  4013f4:	mov    DWORD PTR [rax+rcx*8+0x6c],0x0
  4013fc:	pop    rbx
  4013fd:	pop    r14
  4013ff:	pop    r15
  401401:	vzeroupper 
  401404:	ret    
  401405:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40140f:	nop
  401410:	push   r15
  401412:	push   r14
  401414:	push   rbx
  401415:	mov    r14,QWORD PTR [rdi]
  401418:	mov    eax,DWORD PTR [r14+0x48]
  40141c:	test   eax,eax
  40141e:	jle    401451 <strstr@plt+0x281>
  401420:	lea    r15,[r14+0x58]
  401424:	xor    ebx,ebx
  401426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401430:	mov    rdi,QWORD PTR [r15]
  401433:	test   rdi,rdi
  401436:	je     401441 <strstr@plt+0x271>
  401438:	call   401030 <free@plt>
  40143d:	mov    eax,DWORD PTR [r14+0x48]
  401441:	add    rbx,0x1
  401445:	movsxd rcx,eax
  401448:	add    r15,0x28
  40144c:	cmp    rbx,rcx
  40144f:	jl     401430 <strstr@plt+0x260>
  401451:	mov    rdi,QWORD PTR [r14+0x20]
  401455:	test   rdi,rdi
  401458:	je     40145f <strstr@plt+0x28f>
  40145a:	call   401030 <free@plt>
  40145f:	mov    rdi,QWORD PTR [r14+0x10]
  401463:	test   rdi,rdi
  401466:	je     40146d <strstr@plt+0x29d>
  401468:	call   401030 <free@plt>
  40146d:	mov    rdi,r14
  401470:	pop    rbx
  401471:	pop    r14
  401473:	pop    r15
  401475:	jmp    401030 <free@plt>
  40147a:	nop    WORD PTR [rax+rax*1+0x0]
  401480:	push   r14
  401482:	push   rbx
  401483:	push   rax
  401484:	mov    r14,QWORD PTR [rdi]
  401487:	add    rsi,0xffffffffffffffb0
  40148b:	mov    QWORD PTR [r14+0x30],rsi
  40148f:	mov    rax,QWORD PTR [r14+0x18]
  401493:	add    edx,0xa
  401496:	shl    rdx,0x2
  40149a:	cmp    rax,rdx
  40149d:	jae    4014d5 <strstr@plt+0x305>
  40149f:	cmp    rax,0x10
  4014a3:	mov    ecx,0x10
  4014a8:	cmova  rcx,rax
  4014ac:	nop    DWORD PTR [rax+0x0]
  4014b0:	mov    rbx,rcx
  4014b3:	lea    rcx,[rcx+rcx*1]
  4014b7:	cmp    rbx,rdx
  4014ba:	jb     4014b0 <strstr@plt+0x2e0>
  4014bc:	mov    rdi,QWORD PTR [r14+0x10]
  4014c0:	mov    rsi,rbx
  4014c3:	call   401170 <realloc@plt>
  4014c8:	mov    QWORD PTR [r14+0x10],rax
  4014cc:	test   rax,rax
  4014cf:	je     4014dd <strstr@plt+0x30d>
  4014d1:	mov    QWORD PTR [r14+0x18],rbx
  4014d5:	add    rsp,0x8
  4014d9:	pop    rbx
  4014da:	pop    r14
  4014dc:	ret    
  4014dd:	mov    edi,0x1
  4014e2:	call   4011a0 <exit@plt>
  4014e7:	nop    WORD PTR [rax+rax*1+0x0]
  4014f0:	push   r15
  4014f2:	push   r14
  4014f4:	push   rbx
  4014f5:	mov    r15,QWORD PTR [rdi]
  4014f8:	mov    r14,QWORD PTR [r15+0x28]
  4014fc:	mov    eax,esi
  4014fe:	shl    rax,0x2
  401502:	cmp    r14,rax
  401505:	jae    40154a <strstr@plt+0x37a>
  401507:	cmp    r14,0x10
  40150b:	mov    ecx,0x10
  401510:	cmova  rcx,r14
  401514:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40151e:	xchg   ax,ax
  401520:	mov    rbx,rcx
  401523:	lea    rcx,[rcx+rcx*1]
  401527:	cmp    rbx,rax
  40152a:	jb     401520 <strstr@plt+0x350>
  40152c:	mov    rdi,QWORD PTR [r15+0x20]
  401530:	mov    rsi,rbx
  401533:	call   401170 <realloc@plt>
  401538:	mov    QWORD PTR [r15+0x20],rax
  40153c:	test   rax,rax
  40153f:	je     401566 <strstr@plt+0x396>
  401541:	mov    rdi,rax
  401544:	mov    QWORD PTR [r15+0x28],rbx
  401548:	jmp    401551 <strstr@plt+0x381>
  40154a:	mov    rdi,QWORD PTR [r15+0x20]
  40154e:	mov    rbx,r14
  401551:	add    rdi,r14
  401554:	sub    rbx,r14
  401557:	xor    esi,esi
  401559:	mov    rdx,rbx
  40155c:	pop    rbx
  40155d:	pop    r14
  40155f:	pop    r15
  401561:	jmp    4010c0 <memset@plt>
  401566:	mov    edi,0x1
  40156b:	call   4011a0 <exit@plt>
  401570:	push   r14
  401572:	push   rbx
  401573:	push   rax
  401574:	mov    r14,QWORD PTR [rdi]
  401577:	mov    QWORD PTR [r14+0x8],rsi
  40157b:	mov    DWORD PTR [r14+0x4c],0x0
  401583:	lea    rax,[r14+0x50]
  401587:	mov    QWORD PTR [r14+0x38],rax
  40158b:	mov    rdi,QWORD PTR [r14+0x10]
  40158f:	mov    rdx,QWORD PTR [r14+0x18]
  401593:	xor    esi,esi
  401595:	call   4010c0 <memset@plt>
  40159a:	mov    rdi,QWORD PTR [r14+0x20]
  40159e:	test   rdi,rdi
  4015a1:	je     4015ae <strstr@plt+0x3de>
  4015a3:	mov    rdx,QWORD PTR [r14+0x28]
  4015a7:	xor    esi,esi
  4015a9:	call   4010c0 <memset@plt>
  4015ae:	movsxd rdx,DWORD PTR [r14+0x48]
  4015b2:	test   rdx,rdx
  4015b5:	jle    401679 <strstr@plt+0x4a9>
  4015bb:	lea    rcx,[rdx-0x1]
  4015bf:	mov    eax,edx
  4015c1:	and    eax,0x3
  4015c4:	cmp    rcx,0x3
  4015c8:	jae    4015d6 <strstr@plt+0x406>
  4015ca:	xor    ecx,ecx
  4015cc:	test   rax,rax
  4015cf:	jne    401644 <strstr@plt+0x474>
  4015d1:	jmp    401679 <strstr@plt+0x4a9>
  4015d6:	lea    rsi,[r14+0xe8]
  4015dd:	sub    rdx,rax
  4015e0:	mov    edi,0x3000000
  4015e5:	xor    ecx,ecx
  4015e7:	nop    WORD PTR [rax+rax*1+0x0]
  4015f0:	lea    ebx,[rdi-0x3000000]
  4015f6:	mov    DWORD PTR [rsi-0x80],ebx
  4015f9:	mov    DWORD PTR [rsi-0x78],0x0
  401600:	lea    ebx,[rdi-0x2000000]
  401606:	mov    DWORD PTR [rsi-0x58],ebx
  401609:	mov    DWORD PTR [rsi-0x50],0x0
  401610:	lea    ebx,[rdi-0x1000000]
  401616:	mov    DWORD PTR [rsi-0x30],ebx
  401619:	mov    DWORD PTR [rsi-0x28],0x0
  401620:	mov    DWORD PTR [rsi-0x8],edi
  401623:	mov    DWORD PTR [rsi],0x0
  401629:	add    rcx,0x4
  40162d:	add    edi,0x4000000
  401633:	add    rsi,0xa0
  40163a:	cmp    rdx,rcx
  40163d:	jne    4015f0 <strstr@plt+0x420>
  40163f:	test   rax,rax
  401642:	je     401679 <strstr@plt+0x4a9>
  401644:	lea    rdx,[rcx+rcx*4]
  401648:	lea    rdx,[r14+rdx*8]
  40164c:	add    rdx,0x70
  401650:	shl    ecx,0x18
  401653:	neg    rax
  401656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401660:	mov    DWORD PTR [rdx-0x8],ecx
  401663:	mov    DWORD PTR [rdx],0x0
  401669:	add    rdx,0x28
  40166d:	add    ecx,0x1000000
  401673:	add    rax,0x1
  401677:	jne    401660 <strstr@plt+0x490>
  401679:	add    rsp,0x8
  40167d:	pop    rbx
  40167e:	pop    r14
  401680:	ret    
  401681:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40168b:	nop    DWORD PTR [rax+rax*1+0x0]
  401690:	push   rbp
  401691:	push   r15
  401693:	push   r14
  401695:	push   r13
  401697:	push   r12
  401699:	push   rbx
  40169a:	sub    rsp,0xd8
  4016a1:	mov    ebp,esi
  4016a3:	test   al,al
  4016a5:	je     4016e6 <strstr@plt+0x516>
  4016a7:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  4016ad:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  4016b3:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  4016b9:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  4016c2:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  4016cb:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  4016d4:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  4016dd:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4016e6:	mov    QWORD PTR [rsp+0x48],r9
  4016eb:	mov    QWORD PTR [rsp+0x40],r8
  4016f0:	mov    QWORD PTR [rsp+0x38],rcx
  4016f5:	mov    QWORD PTR [rsp+0x30],rdx
  4016fa:	mov    r12,QWORD PTR [rdi]
  4016fd:	movsxd r14,ebp
  401700:	add    r14,QWORD PTR [r12+0x8]
  401705:	mov    r11,QWORD PTR [r12+0x38]
  40170a:	mov    r15d,DWORD PTR [r11+0x18]
  40170e:	mov    r13d,DWORD PTR [r11+0x20]
  401712:	cmp    r15d,DWORD PTR [r11+0x1c]
  401716:	jge    401720 <strstr@plt+0x550>
  401718:	mov    rax,QWORD PTR [r11]
  40171b:	jmp    4017ad <strstr@plt+0x5dd>
  401720:	mov    rbx,QWORD PTR [r11+0x10]
  401724:	cmp    rbx,0xffffffffffffff38
  40172b:	jae    401785 <strstr@plt+0x5b5>
  40172d:	cmp    rbx,0x10
  401731:	mov    eax,0x10
  401736:	cmova  rax,rbx
  40173a:	lea    rcx,[rbx+0xc8]
  401741:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40174b:	nop    DWORD PTR [rax+rax*1+0x0]
  401750:	mov    rbx,rax
  401753:	lea    rax,[rax+rax*1]
  401757:	cmp    rbx,rcx
  40175a:	jb     401750 <strstr@plt+0x580>
  40175c:	mov    rdi,QWORD PTR [r11+0x8]
  401760:	mov    rsi,rbx
  401763:	mov    QWORD PTR [rsp+0x18],r11
  401768:	call   401170 <realloc@plt>
  40176d:	mov    r11,QWORD PTR [rsp+0x18]
  401772:	mov    QWORD PTR [r11+0x8],rax
  401776:	test   rax,rax
  401779:	je     401c14 <strstr@plt+0xa44>
  40177f:	mov    QWORD PTR [r11+0x10],rbx
  401783:	jmp    401789 <strstr@plt+0x5b9>
  401785:	mov    rax,QWORD PTR [r11+0x8]
  401789:	mov    ecx,r15d
  40178c:	and    ecx,0xff000000
  401792:	movsxd rdx,ebx
  401795:	shr    rdx,0x2
  401799:	lea    edx,[rcx+rdx*1]
  40179c:	add    edx,0xffffffe7
  40179f:	shl    rcx,0x2
  4017a3:	sub    rax,rcx
  4017a6:	mov    QWORD PTR [r11],rax
  4017a9:	mov    DWORD PTR [r11+0x1c],edx
  4017ad:	movsxd rcx,r15d
  4017b0:	add    r15d,0x1
  4017b4:	mov    DWORD PTR [rax+rcx*4],ebp
  4017b7:	lea    rcx,[rsp+0x20]
  4017bc:	mov    QWORD PTR [rsp+0x10],rcx
  4017c1:	lea    rcx,[rsp+0x110]
  4017c9:	mov    QWORD PTR [rsp+0x8],rcx
  4017ce:	movabs rcx,0x3000000010
  4017d8:	mov    QWORD PTR [rsp],rcx
  4017dc:	mov    esi,0x4
  4017e1:	lea    r8,[rip+0x7858]        # 409040 <strstr@plt+0x7e70>
  4017e8:	lea    r9,[rip+0x7821]        # 409010 <strstr@plt+0x7e40>
  4017ef:	jmp    401806 <strstr@plt+0x636>
  4017f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017fb:	nop    DWORD PTR [rax+rax*1+0x0]
  401800:	mov    esi,r10d
  401803:	mov    r15d,edi
  401806:	mov    rbp,r14
  401809:	mov    edi,r15d
  40180c:	mov    r10d,esi
  40180f:	lea    r14,[r14+0x1]
  401813:	mov    bl,BYTE PTR [rbp+0x0]
  401816:	cmp    bl,0xe8
  401819:	ja     401830 <strstr@plt+0x660>
  40181b:	add    r13d,0x1
  40181f:	jmp    401800 <strstr@plt+0x630>
  401821:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40182b:	nop    DWORD PTR [rax+rax*1+0x0]
  401830:	cmp    bl,0xf3
  401833:	ja     401850 <strstr@plt+0x680>
  401835:	movsxd rdx,DWORD PTR [rsp]
  401839:	cmp    rdx,0x28
  40183d:	ja     4018b3 <strstr@plt+0x6e3>
  40183f:	mov    rcx,rdx
  401842:	add    rcx,QWORD PTR [rsp+0x10]
  401847:	lea    edx,[rdx+0x8]
  40184a:	mov    DWORD PTR [rsp],edx
  40184d:	jmp    4018c1 <strstr@plt+0x6f1>
  40184f:	nop
  401850:	mov    ecx,ebx
  401852:	add    cl,0xc
  401855:	mov    esi,r10d
  401858:	mov    r15d,edi
  40185b:	cmp    cl,0xb
  40185e:	ja     401806 <strstr@plt+0x636>
  401860:	movzx  ecx,cl
  401863:	movsxd rcx,DWORD PTR [r9+rcx*4]
  401867:	add    rcx,r9
  40186a:	jmp    rcx
  40186c:	movzx  esi,BYTE PTR [rbp+0x1]
  401870:	add    rbp,0x2
  401874:	lea    rcx,[rsi*4+0x0]
  40187c:	mov    rdx,QWORD PTR [r12+0x10]
  401881:	add    rdx,rcx
  401884:	cmp    rsi,0xf6
  40188b:	ja     401939 <strstr@plt+0x769>
  401891:	cmp    sil,0x9
  401895:	ja     4018a0 <strstr@plt+0x6d0>
  401897:	cmp    DWORD PTR [rdx],0x0
  40189a:	jns    401bd6 <strstr@plt+0xa06>
  4018a0:	cmp    rcx,QWORD PTR [r12+0x18]
  4018a5:	jae    401bd6 <strstr@plt+0xa06>
  4018ab:	mov    r14,rbp
  4018ae:	jmp    40197d <strstr@plt+0x7ad>
  4018b3:	mov    rcx,QWORD PTR [rsp+0x8]
  4018b8:	lea    rdx,[rcx+0x8]
  4018bc:	mov    QWORD PTR [rsp+0x8],rdx
  4018c1:	mov    edx,DWORD PTR [rcx]
  4018c3:	movsxd rcx,edi
  4018c6:	mov    r15d,edi
  4018c9:	add    r15d,0x1
  4018cd:	mov    DWORD PTR [rax+rcx*4],edx
  4018d0:	add    bl,0x17
  4018d3:	mov    esi,0x4
  4018d8:	cmp    bl,0xa
  4018db:	ja     401806 <strstr@plt+0x636>
  4018e1:	movzx  esi,bl
  4018e4:	movsxd rsi,DWORD PTR [r8+rsi*4]
  4018e8:	add    rsi,r8
  4018eb:	jmp    rsi
  4018ed:	test   edx,edx
  4018ef:	je     401b50 <strstr@plt+0x980>
  4018f5:	movsx  ecx,dl
  4018f8:	cmp    ecx,edx
  4018fa:	je     401a89 <strstr@plt+0x8b9>
  401900:	add    r13d,0x4
  401904:	mov    esi,0x4
  401909:	jmp    401806 <strstr@plt+0x636>
  40190e:	mov    rdx,QWORD PTR [r12+0x20]
  401913:	movsxd rsi,DWORD PTR [rsp]
  401917:	cmp    rsi,0x28
  40191b:	ja     401955 <strstr@plt+0x785>
  40191d:	mov    rcx,rsi
  401920:	add    rcx,QWORD PTR [rsp+0x10]
  401925:	lea    esi,[rsi+0x8]
  401928:	mov    DWORD PTR [rsp],esi
  40192b:	jmp    401963 <strstr@plt+0x793>
  40192d:	movzx  esi,BYTE PTR [rbp-0x1]
  401931:	mov    r15d,edi
  401934:	jmp    401806 <strstr@plt+0x636>
  401939:	mov    ecx,DWORD PTR [rdx-0x3d8]
  40193f:	add    rdx,0xfffffffffffffc28
  401946:	mov    esi,ecx
  401948:	sar    esi,0x1f
  40194b:	andn   esi,esi,ecx
  401950:	mov    r14,rbp
  401953:	jmp    401983 <strstr@plt+0x7b3>
  401955:	mov    rcx,QWORD PTR [rsp+0x8]
  40195a:	lea    rsi,[rcx+0x8]
  40195e:	mov    QWORD PTR [rsp+0x8],rsi
  401963:	movsxd rcx,DWORD PTR [rcx]
  401966:	lea    rsi,[rcx*4+0x0]
  40196e:	cmp    rsi,QWORD PTR [r12+0x28]
  401973:	jae    401bb0 <strstr@plt+0x9e0>
  401979:	lea    rdx,[rdx+rcx*4]
  40197d:	mov    esi,DWORD PTR [rdx]
  40197f:	test   esi,esi
  401981:	js     40198d <strstr@plt+0x7bd>
  401983:	movsxd rcx,edi
  401986:	mov    DWORD PTR [rax+rcx*4],esi
  401989:	mov    DWORD PTR [rdx],edi
  40198b:	jmp    401995 <strstr@plt+0x7c5>
  40198d:	neg    esi
  40198f:	movsxd rcx,edi
  401992:	mov    DWORD PTR [rax+rcx*4],esi
  401995:	lea    r15d,[rdi+0x1]
  401999:	add    r13d,0x4
  40199d:	or     bl,0x1
  4019a0:	mov    esi,r10d
  4019a3:	cmp    bl,0xf5
  4019a6:	jne    401806 <strstr@plt+0x636>
  4019ac:	add    edi,0x2
  4019af:	movsxd rcx,r15d
  4019b2:	mov    DWORD PTR [rax+rcx*4],r13d
  4019b6:	jmp    401800 <strstr@plt+0x630>
  4019bb:	add    rbp,0x3
  4019bf:	add    r13d,0x4
  4019c3:	jmp    401a0a <strstr@plt+0x83a>
  4019c5:	mov    rdx,QWORD PTR [r12+0x20]
  4019ca:	movsxd rsi,DWORD PTR [rsp]
  4019ce:	cmp    rsi,0x28
  4019d2:	ja     401aeb <strstr@plt+0x91b>
  4019d8:	mov    rcx,rsi
  4019db:	add    rcx,QWORD PTR [rsp+0x10]
  4019e0:	lea    esi,[rsi+0x8]
  4019e3:	mov    DWORD PTR [rsp],esi
  4019e6:	jmp    401af9 <strstr@plt+0x929>
  4019eb:	movzx  ecx,BYTE PTR [rbp+0x1]
  4019ef:	add    rbp,0x2
  4019f3:	add    r13d,ecx
  4019f6:	movsxd rcx,edi
  4019f9:	add    edi,0x1
  4019fc:	mov    DWORD PTR [rax+rcx*4],r13d
  401a00:	jmp    401a0a <strstr@plt+0x83a>
  401a02:	add    rbp,0x2
  401a06:	add    r13d,0x1
  401a0a:	mov    esi,r10d
  401a0d:	mov    r15d,edi
  401a10:	mov    r14,rbp
  401a13:	jmp    401806 <strstr@plt+0x636>
  401a18:	movzx  edx,BYTE PTR [rbp+0x1]
  401a1c:	add    rbp,0x2
  401a20:	shl    rdx,0x2
  401a24:	cmp    rdx,QWORD PTR [r12+0x18]
  401a29:	jae    401bd6 <strstr@plt+0xa06>
  401a2f:	add    rdx,QWORD PTR [r12+0x10]
  401a34:	mov    r14,rbp
  401a37:	jmp    401b13 <strstr@plt+0x943>
  401a3c:	movsx  ecx,dl
  401a3f:	cmp    ecx,edx
  401a41:	je     401a89 <strstr@plt+0x8b9>
  401a43:	jmp    401b9d <strstr@plt+0x9cd>
  401a48:	add    rbp,0x2
  401a4c:	add    r13d,edx
  401a4f:	mov    esi,0x4
  401a54:	mov    r14,rbp
  401a57:	jmp    401806 <strstr@plt+0x636>
  401a5c:	movsx  ecx,dl
  401a5f:	cmp    ecx,edx
  401a61:	je     401a89 <strstr@plt+0x8b9>
  401a63:	cmp    edx,0x10000
  401a69:	jae    401b9d <strstr@plt+0x9cd>
  401a6f:	add    r13d,0x2
  401a73:	mov    esi,0x4
  401a78:	jmp    401806 <strstr@plt+0x636>
  401a7d:	cmp    edx,0x100
  401a83:	jae    401b9d <strstr@plt+0x9cd>
  401a89:	add    r13d,0x1
  401a8d:	mov    esi,0x4
  401a92:	jmp    401806 <strstr@plt+0x636>
  401a97:	mov    DWORD PTR [rax+rcx*4-0x4],0xc0000000
  401a9f:	mov    esi,0x4
  401aa4:	jmp    401806 <strstr@plt+0x636>
  401aa9:	cmp    edx,0x7
  401aac:	ja     401bec <strstr@plt+0xa1c>
  401ab2:	mov    bl,BYTE PTR [r14]
  401ab5:	cmp    edx,0x4
  401ab8:	jne    401ac5 <strstr@plt+0x8f5>
  401aba:	mov    ecx,ebx
  401abc:	and    cl,0x1
  401abf:	jne    401bec <strstr@plt+0xa1c>
  401ac5:	add    rbp,0x2
  401ac9:	mov    esi,r10d
  401acc:	mov    r14,rbp
  401acf:	cmp    bl,0x1
  401ad2:	jne    401806 <strstr@plt+0x636>
  401ad8:	cmp    BYTE PTR [rbp+0x0],0xe9
  401adc:	cmove  r10d,edx
  401ae0:	mov    esi,r10d
  401ae3:	mov    r14,rbp
  401ae6:	jmp    401806 <strstr@plt+0x636>
  401aeb:	mov    rcx,QWORD PTR [rsp+0x8]
  401af0:	lea    rsi,[rcx+0x8]
  401af4:	mov    QWORD PTR [rsp+0x8],rsi
  401af9:	movsxd rcx,DWORD PTR [rcx]
  401afc:	lea    rsi,[rcx*4+0x0]
  401b04:	cmp    rsi,QWORD PTR [r12+0x28]
  401b09:	jae    401bb0 <strstr@plt+0x9e0>
  401b0f:	lea    rdx,[rdx+rcx*4]
  401b13:	mov    ecx,DWORD PTR [rdx]
  401b15:	test   ecx,ecx
  401b17:	jle    401b3b <strstr@plt+0x96b>
  401b19:	nop    DWORD PTR [rax+0x0]
  401b20:	movsxd rsi,ecx
  401b23:	shr    ecx,0x18
  401b26:	lea    rcx,[rcx+rcx*4]
  401b2a:	mov    rbp,QWORD PTR [r12+rcx*8+0x50]
  401b2f:	mov    ecx,DWORD PTR [rbp+rsi*4+0x0]
  401b33:	mov    DWORD PTR [rbp+rsi*4+0x0],edi
  401b37:	test   ecx,ecx
  401b39:	jg     401b20 <strstr@plt+0x950>
  401b3b:	mov    ecx,edi
  401b3d:	neg    ecx
  401b3f:	mov    DWORD PTR [rdx],ecx
  401b41:	movsxd rcx,edi
  401b44:	add    edi,0x1
  401b47:	mov    DWORD PTR [rax+rcx*4],r13d
  401b4b:	jmp    401800 <strstr@plt+0x630>
  401b50:	and    r10d,0x7
  401b54:	cmp    r10d,0x4
  401b58:	jne    401b63 <strstr@plt+0x993>
  401b5a:	movzx  r10d,BYTE PTR [rbp-0x1]
  401b5f:	and    r10d,0x7
  401b63:	mov    esi,0x4
  401b68:	cmp    r10d,0x5
  401b6c:	jne    401806 <strstr@plt+0x636>
  401b72:	jmp    401a89 <strstr@plt+0x8b9>
  401b77:	movzx  eax,BYTE PTR [r14]
  401b7b:	cmp    DWORD PTR [r12+0x48],eax
  401b80:	jle    401bc3 <strstr@plt+0x9f3>
  401b82:	lea    rax,[rax+rax*4]
  401b86:	lea    rax,[r12+rax*8]
  401b8a:	add    rax,0x50
  401b8e:	mov    QWORD PTR [r12+0x38],rax
  401b93:	mov    DWORD PTR [r11+0x18],edi
  401b97:	mov    DWORD PTR [r11+0x20],r13d
  401b9b:	jmp    401c02 <strstr@plt+0xa32>
  401b9d:	mov    eax,DWORD PTR [r12+0x8]
  401ba2:	not    eax
  401ba4:	add    r14d,eax
  401ba7:	or     r14d,0x11000000
  401bae:	jmp    401bfd <strstr@plt+0xa2d>
  401bb0:	mov    eax,DWORD PTR [r12+0x8]
  401bb5:	not    eax
  401bb7:	add    r14d,eax
  401bba:	or     r14d,0x14000000
  401bc1:	jmp    401bfd <strstr@plt+0xa2d>
  401bc3:	mov    eax,DWORD PTR [r12+0x8]
  401bc8:	not    eax
  401bca:	add    r14d,eax
  401bcd:	or     r14d,0x12000000
  401bd4:	jmp    401bfd <strstr@plt+0xa2d>
  401bd6:	mov    eax,DWORD PTR [r12+0x8]
  401bdb:	not    eax
  401bdd:	add    ebp,eax
  401bdf:	or     ebp,0x13000000
  401be5:	mov    DWORD PTR [r12+0x4c],ebp
  401bea:	jmp    401c02 <strstr@plt+0xa32>
  401bec:	mov    eax,DWORD PTR [r12+0x8]
  401bf1:	not    eax
  401bf3:	add    r14d,eax
  401bf6:	or     r14d,0x15000000
  401bfd:	mov    DWORD PTR [r12+0x4c],r14d
  401c02:	add    rsp,0xd8
  401c09:	pop    rbx
  401c0a:	pop    r12
  401c0c:	pop    r13
  401c0e:	pop    r14
  401c10:	pop    r15
  401c12:	pop    rbp
  401c13:	ret    
  401c14:	mov    edi,0x1
  401c19:	call   4011a0 <exit@plt>
  401c1e:	xchg   ax,ax
  401c20:	push   rbp
  401c21:	push   r15
  401c23:	push   r14
  401c25:	push   r13
  401c27:	push   r12
  401c29:	push   rbx
  401c2a:	sub    rsp,0x108
  401c31:	mov    r13,QWORD PTR [rdi]
  401c34:	mov    QWORD PTR [rsi],0x0
  401c3b:	mov    eax,DWORD PTR [r13+0x4c]
  401c3f:	test   eax,eax
  401c41:	jne    40236f <strstr@plt+0x119f>
  401c47:	mov    rdi,QWORD PTR [r13+0x28]
  401c4b:	test   rdi,rdi
  401c4e:	je     401c76 <strstr@plt+0xaa6>
  401c50:	mov    rcx,QWORD PTR [r13+0x20]
  401c54:	xor    edx,edx
  401c56:	xor    eax,eax
  401c58:	nop    DWORD PTR [rax+rax*1+0x0]
  401c60:	cmp    DWORD PTR [rcx+rdx*1],0x0
  401c64:	jg     40235e <strstr@plt+0x118e>
  401c6a:	add    eax,0x1
  401c6d:	add    rdx,0x4
  401c71:	cmp    rdx,rdi
  401c74:	jb     401c60 <strstr@plt+0xa90>
  401c76:	mov    rax,QWORD PTR [r13+0x18]
  401c7a:	cmp    rax,0x29
  401c7e:	jb     401cca <strstr@plt+0xafa>
  401c80:	mov    r8,QWORD PTR [r13+0x10]
  401c84:	mov    edx,0xa
  401c89:	nop    DWORD PTR [rax+0x0]
  401c90:	mov    ecx,DWORD PTR [r8+rdx*4]
  401c94:	test   ecx,ecx
  401c96:	jle    401cb9 <strstr@plt+0xae9>
  401c98:	mov    edi,edx
  401c9a:	neg    edi
  401c9c:	nop    DWORD PTR [rax+0x0]
  401ca0:	movsxd rbp,ecx
  401ca3:	shr    ecx,0x18
  401ca6:	lea    rcx,[rcx+rcx*4]
  401caa:	mov    rbx,QWORD PTR [r13+rcx*8+0x50]
  401caf:	mov    ecx,DWORD PTR [rbx+rbp*4]
  401cb2:	mov    DWORD PTR [rbx+rbp*4],edi
  401cb5:	test   ecx,ecx
  401cb7:	jg     401ca0 <strstr@plt+0xad0>
  401cb9:	lea    rcx,[rdx*4+0x4]
  401cc1:	add    rdx,0x1
  401cc5:	cmp    rcx,rax
  401cc8:	jb     401c90 <strstr@plt+0xac0>
  401cca:	xor    eax,eax
  401ccc:	cmp    DWORD PTR [r13+0x48],0x0
  401cd1:	jle    402365 <strstr@plt+0x1195>
  401cd7:	mov    QWORD PTR [rsp-0x48],rsi
  401cdc:	lea    rax,[r13+0x70]
  401ce0:	mov    QWORD PTR [rsp-0x40],rax
  401ce5:	xor    r10d,r10d
  401ce8:	lea    rdi,[rip+0x737d]        # 40906c <strstr@plt+0x7e9c>
  401cef:	vpbroadcastq ymm6,QWORD PTR [rip+0xae48]        # 40cb40 <strstr@plt+0xb970>
  401cf8:	xor    eax,eax
  401cfa:	mov    QWORD PTR [rsp-0x60],rax
  401cff:	xor    ecx,ecx
  401d01:	xor    r11d,r11d
  401d04:	vmovdqu YMMWORD PTR [rsp+0x60],ymm6
  401d0a:	nop    WORD PTR [rax+rax*1+0x0]
  401d10:	lea    rax,[rcx+rcx*4]
  401d14:	mov    ebp,ecx
  401d16:	shl    ebp,0x18
  401d19:	mov    r9d,DWORD PTR [r13+rax*8+0x68]
  401d1e:	cmp    ebp,r9d
  401d21:	mov    QWORD PTR [rsp-0x58],rcx
  401d26:	mov    QWORD PTR [rsp-0x28],rax
  401d2b:	je     402329 <strstr@plt+0x1159>
  401d31:	mov    r12,QWORD PTR [r13+rax*8+0x50]
  401d36:	mov    r15,QWORD PTR [r13+0x8]
  401d3a:	vmovq  xmm0,rcx
  401d3f:	vpbroadcastq ymm0,xmm0
  401d44:	vpaddq ymm1,ymm0,YMMWORD PTR [rip+0xadb4]        # 40cb00 <strstr@plt+0xb930>
  401d4c:	vmovdqu YMMWORD PTR [rsp+0x40],ymm1
  401d52:	vpaddq ymm0,ymm0,YMMWORD PTR [rip+0xadc6]        # 40cb20 <strstr@plt+0xb950>
  401d5a:	vmovdqu YMMWORD PTR [rsp+0x20],ymm0
  401d60:	mov    DWORD PTR [rsp-0x64],r9d
  401d65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d6f:	nop
  401d70:	movsxd rax,ebp
  401d73:	add    ebp,0x1
  401d76:	movsxd rcx,DWORD PTR [r12+rax*4]
  401d7a:	add    rcx,r15
  401d7d:	jmp    401d87 <strstr@plt+0xbb7>
  401d7f:	nop
  401d80:	add    rax,0x2
  401d84:	mov    rcx,rax
  401d87:	mov    rax,rcx
  401d8a:	lea    rcx,[rcx+0x1]
  401d8e:	mov    dl,BYTE PTR [rax]
  401d90:	add    dl,0x17
  401d93:	movzx  edx,dl
  401d96:	cmp    dl,0x16
  401d99:	ja     401d87 <strstr@plt+0xbb7>
  401d9b:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  401d9f:	add    rdx,rdi
  401da2:	jmp    rdx
  401da4:	add    rax,0x3
  401da8:	mov    rcx,rax
  401dab:	jmp    401d87 <strstr@plt+0xbb7>
  401dad:	add    rax,0x2
  401db1:	add    ebp,0x1
  401db4:	mov    rcx,rax
  401db7:	jmp    401d87 <strstr@plt+0xbb7>
  401db9:	lea    rcx,[rax+0x2]
  401dbd:	mov    dl,BYTE PTR [rax-0x1]
  401dc0:	mov    r8d,0x3
  401dc6:	cmp    dl,0xe9
  401dc9:	je     401ddf <strstr@plt+0xc0f>
  401dcb:	and    dl,0xf0
  401dce:	xor    eax,eax
  401dd0:	mov    r8d,0x4
  401dd6:	cmp    dl,0x80
  401dd9:	jne    40230e <strstr@plt+0x113e>
  401ddf:	movsxd rdx,ebp
  401de2:	movsxd rsi,DWORD PTR [r12+rdx*4]
  401de6:	test   rsi,rsi
  401de9:	js     401e64 <strstr@plt+0xc94>
  401deb:	mov    r9d,esi
  401dee:	mov    r14,r9
  401df1:	shr    r14,0x18
  401df5:	lea    rax,[r14+r14*4]
  401df9:	mov    rax,QWORD PTR [r13+rax*8+0x50]
  401dfe:	mov    eax,DWORD PTR [rax+rsi*4]
  401e01:	cmp    esi,ebp
  401e03:	jle    401e6b <strstr@plt+0xc9b>
  401e05:	mov    QWORD PTR [rsp-0x50],rdx
  401e0a:	mov    rdx,QWORD PTR [rsp-0x58]
  401e0f:	cmp    rdx,r14
  401e12:	jae    4022ac <strstr@plt+0x10dc>
  401e18:	mov    rbx,r14
  401e1b:	sub    rbx,rdx
  401e1e:	cmp    rbx,0x10
  401e22:	jae    401e78 <strstr@plt+0xca8>
  401e24:	mov    rbx,rdx
  401e27:	jmp    4022bb <strstr@plt+0x10eb>
  401e2c:	add    rax,0x2
  401e30:	mov    rcx,rax
  401e33:	movsxd rax,ebp
  401e36:	add    DWORD PTR [r12+rax*4],r11d
  401e3a:	add    ebp,0x1
  401e3d:	jmp    401d87 <strstr@plt+0xbb7>
  401e42:	movsxd rcx,ebp
  401e45:	add    ebp,0x1
  401e48:	mov    ecx,DWORD PTR [r12+rcx*4]
  401e4c:	add    ecx,r11d
  401e4f:	movzx  edx,BYTE PTR [rax+0x1]
  401e53:	add    rax,0x2
  401e57:	and    edx,ecx
  401e59:	sub    r11d,edx
  401e5c:	mov    rcx,rax
  401e5f:	jmp    401d87 <strstr@plt+0xbb7>
  401e64:	xor    eax,eax
  401e66:	jmp    40230e <strstr@plt+0x113e>
  401e6b:	sub    eax,r11d
  401e6e:	mov    r9d,DWORD PTR [rsp-0x64]
  401e73:	jmp    4022ec <strstr@plt+0x111c>
  401e78:	mov    QWORD PTR [rsp-0x38],rbx
  401e7d:	and    rbx,0xfffffffffffffff0
  401e81:	vmovd  xmm7,eax
  401e85:	mov    QWORD PTR [rsp-0x30],rbx
  401e8a:	lea    rax,[rbx-0x10]
  401e8e:	mov    rbx,rax
  401e91:	shr    rbx,0x4
  401e95:	add    rbx,0x1
  401e99:	vpxor  xmm9,xmm9,xmm9
  401e9e:	cmp    rax,0x30
  401ea2:	jae    401ebe <strstr@plt+0xcee>
  401ea4:	vmovdqu ymm12,YMMWORD PTR [rsp+0x20]
  401eaa:	vmovdqu ymm8,YMMWORD PTR [rsp+0x40]
  401eb0:	test   bl,0x3
  401eb3:	jne    402188 <strstr@plt+0xfb8>
  401eb9:	jmp    40227a <strstr@plt+0x10aa>
  401ebe:	mov    eax,esi
  401ec0:	shr    rax,0x18
  401ec4:	add    rax,QWORD PTR [rsp-0x60]
  401ec9:	and    rax,0xfffffffffffffff0
  401ecd:	add    rax,0xfffffffffffffff0
  401ed1:	shr    rax,0x4
  401ed5:	mov    edx,eax
  401ed7:	add    dl,0x1
  401eda:	movzx  r10d,dl
  401ede:	mov    rdx,QWORD PTR [rsp-0x58]
  401ee3:	and    r10d,0x3
  401ee7:	add    r10,0xffffffffffffffff
  401eeb:	sub    r10,rax
  401eee:	vpxor  xmm9,xmm9,xmm9
  401ef3:	vmovdqu ymm12,YMMWORD PTR [rsp+0x20]
  401ef9:	vmovdqu ymm8,YMMWORD PTR [rsp+0x40]
  401eff:	nop
  401f00:	vmovdqu YMMWORD PTR [rsp+0xa0],ymm7
  401f09:	vmovdqu YMMWORD PTR [rsp+0xe0],ymm9
  401f12:	vpmuludq ymm0,ymm12,ymm6
  401f16:	vpsrlq ymm1,ymm12,0x20
  401f1c:	vpmuludq ymm1,ymm1,ymm6
  401f20:	vmovq  xmm3,r13
  401f25:	vpsllq ymm1,ymm1,0x20
  401f2a:	vpbroadcastq ymm3,xmm3
  401f2f:	vpaddq ymm0,ymm0,ymm3
  401f33:	vpaddq ymm9,ymm1,ymm0
  401f37:	vpbroadcastq ymm0,QWORD PTR [rip+0xac08]        # 40cb48 <strstr@plt+0xb978>
  401f40:	vpmuludq ymm1,ymm8,ymm6
  401f44:	vpaddq ymm7,ymm9,ymm0
  401f48:	vpsrlq ymm10,ymm8,0x20
  401f4e:	vpmuludq ymm10,ymm10,ymm6
  401f52:	vpsllq ymm10,ymm10,0x20
  401f58:	vpaddq ymm1,ymm1,ymm3
  401f5c:	vpaddq ymm10,ymm10,ymm1
  401f60:	vpaddq ymm1,ymm10,ymm0
  401f64:	vpbroadcastq ymm0,QWORD PTR [rip+0xabe3]        # 40cb50 <strstr@plt+0xb980>
  401f6d:	vpaddq ymm2,ymm9,ymm0
  401f71:	vmovdqu YMMWORD PTR [rsp-0x20],ymm2
  401f77:	vpcmpeqd xmm4,xmm4,xmm4
  401f7b:	vpcmpeqd xmm13,xmm13,xmm13
  401f80:	vpcmpeqd xmm15,xmm15,xmm15
  401f85:	vpaddq ymm11,ymm10,ymm0
  401f89:	vpcmpeqd xmm2,xmm2,xmm2
  401f8d:	vpbroadcastq ymm0,QWORD PTR [rip+0xabc2]        # 40cb58 <strstr@plt+0xb988>
  401f96:	vpaddq ymm3,ymm9,ymm0
  401f9a:	vpaddq ymm0,ymm10,ymm0
  401f9e:	vpbroadcastq ymm5,QWORD PTR [rip+0xabb9]        # 40cb60 <strstr@plt+0xb990>
  401fa7:	vpaddq ymm14,ymm9,ymm5
  401fab:	vpaddq ymm5,ymm10,ymm5
  401faf:	vpgatherqd xmm6,DWORD PTR [ymm1*1+0x0],xmm4
  401fb9:	vmovdqa XMMWORD PTR [rsp+0x10],xmm6
  401fbf:	vpcmpeqd xmm1,xmm1,xmm1
  401fc3:	vpgatherqd xmm4,DWORD PTR [ymm7*1+0x0],xmm13
  401fcd:	vmovdqu YMMWORD PTR [rsp+0xc0],ymm4
  401fd6:	vpcmpeqd xmm6,xmm6,xmm6
  401fda:	vpgatherqd xmm4,DWORD PTR [ymm11*1+0x0],xmm15
  401fe4:	vmovdqa XMMWORD PTR [rsp],xmm4
  401fe9:	vpcmpeqd xmm7,xmm7,xmm7
  401fed:	vmovdqu ymm11,YMMWORD PTR [rsp-0x20]
  401ff3:	vpgatherqd xmm4,DWORD PTR [ymm11*1+0x0],xmm2
  401ffd:	vmovdqu YMMWORD PTR [rsp+0x80],ymm4
  402006:	vpcmpeqd xmm2,xmm2,xmm2
  40200a:	vpgatherqd xmm15,DWORD PTR [ymm0*1+0x0],xmm1
  402014:	vpbroadcastq ymm0,QWORD PTR [rip+0xab4b]        # 40cb68 <strstr@plt+0xb998>
  40201d:	vpgatherqd xmm11,DWORD PTR [ymm3*1+0x0],xmm6
  402027:	vpaddq ymm3,ymm9,ymm0
  40202b:	vpgatherqd xmm1,DWORD PTR [ymm5*1+0x0],xmm7
  402035:	vmovdqa XMMWORD PTR [rsp-0x20],xmm1
  40203b:	vpaddq ymm0,ymm10,ymm0
  40203f:	vpgatherqd xmm6,DWORD PTR [ymm14*1+0x0],xmm2
  402049:	vpcmpeqd xmm2,xmm2,xmm2
  40204d:	vpgatherqd xmm7,DWORD PTR [ymm0*1+0x0],xmm2
  402057:	vpcmpeqd xmm0,xmm0,xmm0
  40205b:	vpgatherqd xmm5,DWORD PTR [ymm3*1+0x0],xmm0
  402065:	vpbroadcastq ymm0,QWORD PTR [rip+0xab02]        # 40cb70 <strstr@plt+0xb9a0>
  40206e:	vpcmpeqd xmm3,xmm3,xmm3
  402072:	vpaddq ymm14,ymm10,ymm0
  402076:	vpgatherqd xmm4,DWORD PTR [ymm14*1+0x0],xmm3
  402080:	vpaddq ymm0,ymm9,ymm0
  402084:	vpcmpeqd xmm3,xmm3,xmm3
  402088:	vpgatherqd xmm14,DWORD PTR [ymm0*1+0x0],xmm3
  402092:	vpbroadcastq ymm0,QWORD PTR [rip+0xaadd]        # 40cb78 <strstr@plt+0xb9a8>
  40209b:	vpaddq ymm3,ymm10,ymm0
  40209f:	vpcmpeqd xmm13,xmm13,xmm13
  4020a4:	vpgatherqd xmm2,DWORD PTR [ymm3*1+0x0],xmm13
  4020ae:	vmovdqu ymm1,YMMWORD PTR [rsp+0xc0]
  4020b7:	vinserti128 ymm3,ymm1,XMMWORD PTR [rsp+0x10],0x1
  4020bf:	vmovdqu ymm1,YMMWORD PTR [rsp+0x80]
  4020c8:	vinserti128 ymm13,ymm1,XMMWORD PTR [rsp],0x1
  4020cf:	vinserti128 ymm11,ymm11,xmm15,0x1
  4020d5:	vpaddq ymm15,ymm9,ymm0
  4020d9:	vpcmpeqd xmm0,xmm0,xmm0
  4020dd:	vpaddd ymm3,ymm3,YMMWORD PTR [rsp+0xa0]
  4020e6:	vpgatherqd xmm1,DWORD PTR [ymm15*1+0x0],xmm0
  4020f0:	vpaddd ymm13,ymm13,YMMWORD PTR [rsp+0xe0]
  4020f9:	vinserti128 ymm15,ymm6,XMMWORD PTR [rsp-0x20],0x1
  402101:	vinserti128 ymm5,ymm5,xmm7,0x1
  402107:	vpbroadcastq ymm7,QWORD PTR [rip+0xaa70]        # 40cb80 <strstr@plt+0xb9b0>
  402110:	vpaddq ymm10,ymm10,ymm7
  402114:	vpcmpeqd xmm0,xmm0,xmm0
  402118:	vpaddd ymm5,ymm11,ymm5
  40211c:	vpgatherqd xmm6,DWORD PTR [ymm10*1+0x0],xmm0
  402126:	vpaddd ymm0,ymm3,ymm5
  40212a:	vinserti128 ymm3,ymm14,xmm4,0x1
  402130:	vpaddd ymm3,ymm15,ymm3
  402134:	vpaddq ymm4,ymm9,ymm7
  402138:	vinserti128 ymm1,ymm1,xmm2,0x1
  40213e:	vpcmpeqd xmm2,xmm2,xmm2
  402142:	vpaddd ymm3,ymm13,ymm3
  402146:	vpgatherqd xmm5,DWORD PTR [ymm4*1+0x0],xmm2
  402150:	vpaddd ymm7,ymm1,ymm0
  402154:	vinserti128 ymm0,ymm5,xmm6,0x1
  40215a:	vmovdqu ymm6,YMMWORD PTR [rsp+0x60]
  402160:	vpaddd ymm9,ymm0,ymm3
  402164:	vpbroadcastq ymm0,QWORD PTR [rip+0xaa1b]        # 40cb88 <strstr@plt+0xb9b8>
  40216d:	vpaddq ymm12,ymm12,ymm0
  402171:	vpaddq ymm8,ymm8,ymm0
  402175:	add    r10,0x4
  402179:	jne    401f00 <strstr@plt+0xd30>
  40217f:	test   bl,0x3
  402182:	je     40227a <strstr@plt+0x10aa>
  402188:	shr    r9d,0x18
  40218c:	add    r9d,DWORD PTR [rsp-0x60]
  402191:	and    r9d,0x30
  402195:	add    r9d,0xfffffff0
  402199:	shr    r9b,0x4
  40219d:	add    r9b,0x1
  4021a1:	movzx  eax,r9b
  4021a5:	and    eax,0x3
  4021a8:	neg    rax
  4021ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4021b0:	vpmuludq ymm0,ymm12,ymm6
  4021b4:	vpsrlq ymm1,ymm12,0x20
  4021ba:	vpmuludq ymm1,ymm1,ymm6
  4021be:	vpsllq ymm1,ymm1,0x20
  4021c3:	vmovq  xmm2,r13
  4021c8:	vpbroadcastq ymm2,xmm2
  4021cd:	vpaddq ymm0,ymm0,ymm2
  4021d1:	vpaddq ymm0,ymm1,ymm0
  4021d5:	vpbroadcastq ymm1,QWORD PTR [rip+0xa96a]        # 40cb48 <strstr@plt+0xb978>
  4021de:	vpaddq ymm3,ymm0,ymm1
  4021e2:	vpmuludq ymm4,ymm8,ymm6
  4021e6:	vpsrlq ymm5,ymm8,0x20
  4021ec:	vpmuludq ymm5,ymm5,ymm6
  4021f0:	vpsllq ymm5,ymm5,0x20
  4021f5:	vpaddq ymm2,ymm4,ymm2
  4021f9:	vpaddq ymm2,ymm5,ymm2
  4021fd:	vpaddq ymm1,ymm2,ymm1
  402201:	vpcmpeqd xmm4,xmm4,xmm4
  402205:	vpgatherqd xmm5,DWORD PTR [ymm1*1+0x0],xmm4
  40220f:	vpcmpeqd xmm1,xmm1,xmm1
  402213:	vpgatherqd xmm4,DWORD PTR [ymm3*1+0x0],xmm1
  40221d:	vpbroadcastq ymm1,QWORD PTR [rip+0xa92a]        # 40cb50 <strstr@plt+0xb980>
  402226:	vpaddq ymm0,ymm0,ymm1
  40222a:	vpaddq ymm1,ymm2,ymm1
  40222e:	vinserti128 ymm2,ymm4,xmm5,0x1
  402234:	vpaddd ymm7,ymm2,ymm7
  402238:	vpcmpeqd xmm2,xmm2,xmm2
  40223c:	vpgatherqd xmm3,DWORD PTR [ymm1*1+0x0],xmm2
  402246:	vpcmpeqd xmm1,xmm1,xmm1
  40224a:	vpgatherqd xmm2,DWORD PTR [ymm0*1+0x0],xmm1
  402254:	vinserti128 ymm0,ymm2,xmm3,0x1
  40225a:	vpaddd ymm9,ymm0,ymm9
  40225f:	vpbroadcastq ymm0,QWORD PTR [rip+0xa928]        # 40cb90 <strstr@plt+0xb9c0>
  402268:	vpaddq ymm12,ymm12,ymm0
  40226c:	vpaddq ymm8,ymm8,ymm0
  402270:	add    rax,0x1
  402274:	jne    4021b0 <strstr@plt+0xfe0>
  40227a:	vpaddd ymm0,ymm9,ymm7
  40227e:	vextracti128 xmm1,ymm0,0x1
  402284:	vpaddd ymm0,ymm0,ymm1
  402288:	vpshufd xmm1,xmm0,0x4e
  40228d:	vpaddd ymm0,ymm0,ymm1
  402291:	vphaddd ymm0,ymm0,ymm0
  402296:	vmovd  eax,xmm0
  40229a:	mov    rbx,QWORD PTR [rsp-0x30]
  40229f:	cmp    QWORD PTR [rsp-0x38],rbx
  4022a4:	mov    r10d,0x0
  4022aa:	jne    4022b8 <strstr@plt+0x10e8>
  4022ac:	mov    r9d,DWORD PTR [rsp-0x64]
  4022b1:	mov    rdx,QWORD PTR [rsp-0x50]
  4022b6:	jmp    4022ec <strstr@plt+0x111c>
  4022b8:	add    rbx,rdx
  4022bb:	mov    r9d,DWORD PTR [rsp-0x64]
  4022c0:	lea    rdx,[rbx+rbx*4]
  4022c4:	mov    rsi,QWORD PTR [rsp-0x40]
  4022c9:	lea    rsi,[rsi+rdx*8]
  4022cd:	sub    r14,rbx
  4022d0:	mov    rdx,QWORD PTR [rsp-0x50]
  4022d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4022df:	nop
  4022e0:	add    eax,DWORD PTR [rsi]
  4022e2:	add    rsi,0x28
  4022e6:	add    r14,0xffffffffffffffff
  4022ea:	jne    4022e0 <strstr@plt+0x1110>
  4022ec:	sub    eax,DWORD PTR [r12+rdx*4+0x4]
  4022f1:	mov    edx,0xffffff80
  4022f6:	sub    edx,r8d
  4022f9:	cmp    eax,0x80
  4022fe:	cmovge r8d,r10d
  402302:	cmp    eax,edx
  402304:	cmovl  r8d,r10d
  402308:	sub    r11d,r8d
  40230b:	mov    eax,r8d
  40230e:	movsxd rdx,ebp
  402311:	mov    DWORD PTR [r12+rdx*4+0x4],eax
  402316:	add    ebp,0x2
  402319:	jmp    401d87 <strstr@plt+0xbb7>
  40231e:	xchg   ax,ax
  402320:	cmp    ebp,r9d
  402323:	jne    401d70 <strstr@plt+0xba0>
  402329:	mov    rax,QWORD PTR [rsp-0x28]
  40232e:	movsxd rax,DWORD PTR [r13+rax*8+0x70]
  402333:	movsxd r11,r11d
  402336:	add    r11,rax
  402339:	mov    rcx,QWORD PTR [rsp-0x58]
  40233e:	add    rcx,0x1
  402342:	movsxd rax,DWORD PTR [r13+0x48]
  402346:	add    QWORD PTR [rsp-0x60],0xffffffffffffffff
  40234c:	cmp    rcx,rax
  40234f:	jl     401d10 <strstr@plt+0xb40>
  402355:	mov    rsi,QWORD PTR [rsp-0x48]
  40235a:	xor    eax,eax
  40235c:	jmp    402368 <strstr@plt+0x1198>
  40235e:	or     eax,0x22000000
  402363:	jmp    40236f <strstr@plt+0x119f>
  402365:	xor    r11d,r11d
  402368:	mov    QWORD PTR [r13+0x40],r11
  40236c:	mov    QWORD PTR [rsi],r11
  40236f:	add    rsp,0x108
  402376:	pop    rbx
  402377:	pop    r12
  402379:	pop    r13
  40237b:	pop    r14
  40237d:	pop    r15
  40237f:	pop    rbp
  402380:	vzeroupper 
  402383:	ret    
  402384:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40238e:	xchg   ax,ax
  402390:	push   rbp
  402391:	push   r15
  402393:	push   r14
  402395:	push   r13
  402397:	push   r12
  402399:	push   rbx
  40239a:	sub    rsp,0x148
  4023a1:	mov    r12,rsi
  4023a4:	mov    r8,QWORD PTR [rdi]
  4023a7:	cmp    DWORD PTR [r8+0x48],0x0
  4023ac:	mov    rbp,rsi
  4023af:	jle    402851 <strstr@plt+0x1681>
  4023b5:	lea    r13,[rip+0x6d0c]        # 4090c8 <strstr@plt+0x7ef8>
  4023bc:	lea    r9,[rip+0x10d4d]        # 413110 <strstr@plt+0x11f40>
  4023c3:	xor    ecx,ecx
  4023c5:	mov    rbp,r12
  4023c8:	mov    QWORD PTR [rsp+0x18],r8
  4023cd:	mov    QWORD PTR [rsp+0x10],rdi
  4023d2:	mov    QWORD PTR [rsp+0x28],r12
  4023d7:	nop    WORD PTR [rax+rax*1+0x0]
  4023e0:	mov    QWORD PTR [rsp+0x20],rcx
  4023e5:	lea    rax,[rcx+rcx*4]
  4023e9:	mov    r15,QWORD PTR [r8+rax*8+0x58]
  4023ee:	movsxd rcx,DWORD PTR [r8+rax*8+0x68]
  4023f3:	shl    rcx,0x2
  4023f7:	add    rcx,QWORD PTR [r8+rax*8+0x50]
  4023fc:	mov    QWORD PTR [rsp+0x30],rcx
  402401:	cmp    r15,rcx
  402404:	je     40283b <strstr@plt+0x166b>
  40240a:	nop    WORD PTR [rax+rax*1+0x0]
  402410:	movsxd rdx,DWORD PTR [r15]
  402413:	add    r15,0x4
  402417:	add    rdx,QWORD PTR [r8+0x8]
  40241b:	xor    r10d,r10d
  40241e:	jmp    402440 <strstr@plt+0x1270>
  402420:	mov    BYTE PTR [rbp+0x0],al
  402423:	mov    BYTE PTR [rbp+0x1],ah
  402426:	mov    edx,eax
  402428:	shr    edx,0x10
  40242b:	mov    BYTE PTR [rbp+0x2],dl
  40242e:	shr    eax,0x18
  402431:	mov    BYTE PTR [rbp+0x3],al
  402434:	add    rbp,0x4
  402438:	mov    rdx,rcx
  40243b:	nop    DWORD PTR [rax+rax*1+0x0]
  402440:	mov    r14,rdx
  402443:	mov    bl,BYTE PTR [rdx]
  402445:	mov    edx,ebx
  402447:	add    dl,0x17
  40244a:	xor    eax,eax
  40244c:	cmp    dl,0x11
  40244f:	ja     402458 <strstr@plt+0x1288>
  402451:	mov    eax,DWORD PTR [r15]
  402454:	add    r15,0x4
  402458:	lea    rcx,[r14+0x1]
  40245c:	movzx  esi,dl
  40245f:	cmp    dl,0x16
  402462:	ja     402567 <strstr@plt+0x1397>
  402468:	movsxd rsi,DWORD PTR [r13+rsi*4+0x0]
  40246d:	add    rsi,r13
  402470:	mov    rdx,rcx
  402473:	jmp    rsi
  402475:	test   r10,r10
  402478:	cmove  r10,rbp
  40247c:	mov    dl,BYTE PTR [rcx]
  40247e:	and    dl,0xfe
  402481:	cmp    dl,0xee
  402484:	mov    esi,0x0
  402489:	cmove  rsi,r10
  40248d:	test   eax,eax
  40248f:	je     40279c <strstr@plt+0x15cc>
  402495:	movsx  edx,al
  402498:	cmp    edx,eax
  40249a:	je     40280a <strstr@plt+0x163a>
  4024a0:	mov    r10,rsi
  4024a3:	jmp    402420 <strstr@plt+0x1250>
  4024a8:	add    r14,0x2
  4024ac:	mov    rdx,r14
  4024af:	test   eax,eax
  4024b1:	je     402440 <strstr@plt+0x1270>
  4024b3:	lea    edx,[rax-0x1]
  4024b6:	mov    QWORD PTR [rsp],rdx
  4024ba:	mov    edx,eax
  4024bc:	movzx  esi,BYTE PTR [rcx]
  4024bf:	mov    rdi,rbp
  4024c2:	mov    rbx,r10
  4024c5:	call   4010c0 <memset@plt>
  4024ca:	mov    r10,rbx
  4024cd:	lea    r9,[rip+0x10c3c]        # 413110 <strstr@plt+0x11f40>
  4024d4:	mov    rdi,QWORD PTR [rsp+0x10]
  4024d9:	mov    r8,QWORD PTR [rsp+0x18]
  4024de:	mov    rax,QWORD PTR [rsp]
  4024e2:	add    rbp,rax
  4024e5:	add    rbp,0x1
  4024e9:	mov    rdx,r14
  4024ec:	jmp    402440 <strstr@plt+0x1270>
  4024f1:	movzx  eax,BYTE PTR [r14+0x1]
  4024f6:	add    r14,0x2
  4024fa:	mov    ecx,ebp
  4024fc:	sub    ecx,r12d
  4024ff:	mov    rdx,r14
  402502:	test   ecx,eax
  402504:	je     402440 <strstr@plt+0x1270>
  40250a:	nop    WORD PTR [rax+rax*1+0x0]
  402510:	mov    BYTE PTR [rbp+0x0],0x90
  402514:	add    rbp,0x1
  402518:	mov    ecx,ebp
  40251a:	sub    ecx,r12d
  40251d:	test   ecx,eax
  40251f:	jne    402510 <strstr@plt+0x1340>
  402521:	mov    rdx,r14
  402524:	jmp    402440 <strstr@plt+0x1270>
  402529:	add    r14,0x2
  40252d:	test   eax,eax
  40252f:	js     4027ca <strstr@plt+0x15fa>
  402535:	mov    rcx,r14
  402538:	movsxd rdx,eax
  40253b:	sar    eax,0x18
  40253e:	cdqe   
  402540:	lea    rax,[rax+rax*4]
  402544:	mov    rsi,QWORD PTR [r8+rax*8+0x50]
  402549:	mov    eax,DWORD PTR [rsi+rdx*4]
  40254c:	test   eax,eax
  40254e:	js     402782 <strstr@plt+0x15b2>
  402554:	add    eax,r12d
  402557:	jmp    402420 <strstr@plt+0x1250>
  40255c:	mov    bl,BYTE PTR [r14+0x1]
  402560:	add    r14,0x2
  402564:	mov    rcx,r14
  402567:	mov    BYTE PTR [rbp+0x0],bl
  40256a:	jmp    40281e <strstr@plt+0x164e>
  40256f:	movsx  edx,al
  402572:	cmp    edx,eax
  402574:	je     4025a1 <strstr@plt+0x13d1>
  402576:	xor    r10d,r10d
  402579:	mov    BYTE PTR [rbp+0x0],al
  40257c:	mov    BYTE PTR [rbp+0x1],ah
  40257f:	add    rbp,0x2
  402583:	mov    rdx,rcx
  402586:	jmp    402440 <strstr@plt+0x1270>
  40258b:	mov    r10,rbp
  40258e:	mov    rdx,rcx
  402591:	jmp    402440 <strstr@plt+0x1270>
  402596:	movsx  edx,al
  402599:	cmp    edx,eax
  40259b:	jne    402794 <strstr@plt+0x15c4>
  4025a1:	test   r10,r10
  4025a4:	cmove  r10,rbp
  4025a8:	add    BYTE PTR [r10-0x2],0x2
  4025ad:	xor    r10d,r10d
  4025b0:	jmp    40281b <strstr@plt+0x164b>
  4025b5:	cmp    BYTE PTR [r14+0x1],0x1
  4025ba:	jbe    4025bf <strstr@plt+0x13ef>
  4025bc:	shl    al,0x3
  4025bf:	add    r14,0x2
  4025c3:	or     BYTE PTR [rbp-0x1],al
  4025c6:	mov    rdx,r14
  4025c9:	jmp    402440 <strstr@plt+0x1270>
  4025ce:	add    r14,0x2
  4025d2:	test   eax,eax
  4025d4:	js     4027dd <strstr@plt+0x160d>
  4025da:	mov    rcx,r14
  4025dd:	lea    rdx,[r15+0x4]
  4025e1:	movsxd rsi,eax
  4025e4:	sar    eax,0x18
  4025e7:	cdqe   
  4025e9:	lea    rax,[rax+rax*4]
  4025ed:	mov    rbx,QWORD PTR [r8+rax*8+0x50]
  4025f2:	mov    eax,DWORD PTR [rbx+rsi*4]
  4025f5:	test   eax,eax
  4025f7:	js     40278b <strstr@plt+0x15bb>
  4025fd:	mov    esi,DWORD PTR [r15]
  402600:	mov    ebx,r12d
  402603:	sub    ebx,ebp
  402605:	add    ebx,esi
  402607:	lea    eax,[rax+rbx*1]
  40260a:	add    eax,0xfffffffc
  40260d:	test   esi,esi
  40260f:	je     4027f9 <strstr@plt+0x1629>
  402615:	cmp    esi,0x4
  402618:	jne    402801 <strstr@plt+0x1631>
  40261e:	mov    bl,BYTE PTR [rbp-0x1]
  402621:	add    bl,0xf0
  402624:	mov    BYTE PTR [rbp-0x2],bl
  402627:	lea    rbp,[rbp-0x1]
  40262b:	mov    r15,rdx
  40262e:	jmp    40281b <strstr@plt+0x164b>
  402633:	movzx  ecx,BYTE PTR [r14+0x1]
  402638:	add    r14,0x2
  40263c:	mov    rdx,r14
  40263f:	cmp    rcx,0xa
  402643:	jb     402440 <strstr@plt+0x1270>
  402649:	cmp    BYTE PTR [r14],0xf2
  40264d:	jne    402652 <strstr@plt+0x1482>
  40264f:	mov    eax,DWORD PTR [r15]
  402652:	cdqe   
  402654:	add    rax,r12
  402657:	mov    rdx,QWORD PTR [r8+0x30]
  40265b:	mov    QWORD PTR [rdx+rcx*8],rax
  40265f:	mov    rdx,r14
  402662:	jmp    402440 <strstr@plt+0x1270>
  402667:	mov    eax,DWORD PTR [rdi+0x44]
  40266a:	cmp    eax,0xc8
  40266f:	jge    402872 <strstr@plt+0x16a2>
  402675:	movzx  ebx,BYTE PTR [rcx]
  402678:	movzx  edx,BYTE PTR [r14+0x2]
  40267d:	mov    ecx,DWORD PTR [r9+rdx*4]
  402681:	test   ecx,ecx
  402683:	jns    40274c <strstr@plt+0x157c>
  402689:	mov    DWORD PTR [rsp+0xc],ebx
  40268d:	mov    QWORD PTR [rsp],r10
  402691:	mov    eax,DWORD PTR [rdi+0x48]
  402694:	mov    DWORD PTR [r9+rdx*4],eax
  402698:	lea    rax,[rip+0xfe21]        # 4124c0 <strstr@plt+0x112f0>
  40269f:	mov    QWORD PTR [rsp+0x38],rdx
  4026a4:	mov    r8,QWORD PTR [rax+rdx*8]
  4026a8:	cmp    DWORD PTR [rdi+0x8],0x2
  4026ac:	lea    rcx,[rip+0xc44a]        # 40eafd <strstr@plt+0xd92d>
  4026b3:	mov    rdx,rcx
  4026b6:	lea    rax,[rip+0xcb46]        # 40f203 <strstr@plt+0xe033>
  4026bd:	cmove  rdx,rax
  4026c1:	xor    eax,eax
  4026c3:	lea    r12,[rsp+0x40]
  4026c8:	mov    rdi,r12
  4026cb:	lea    rsi,[rip+0xad0d]        # 40d3df <strstr@plt+0xc20f>
  4026d2:	call   401190 <sprintf@plt>
  4026d7:	mov    esi,0x40
  4026dc:	mov    rdi,r12
  4026df:	call   4010b0 <strchr@plt>
  4026e4:	test   rax,rax
  4026e7:	je     4026ec <strstr@plt+0x151c>
  4026e9:	mov    BYTE PTR [rax],0x0
  4026ec:	lea    rbx,[rsp+0x40]
  4026f1:	mov    rdi,rbx
  4026f4:	call   4010a0 <strlen@plt>
  4026f9:	lea    rdi,[rax+0x1]
  4026fd:	call   401150 <malloc@plt>
  402702:	mov    r12,rax
  402705:	mov    rdi,rax
  402708:	mov    rsi,rbx
  40270b:	call   401060 <strcpy@plt>
  402710:	mov    rdi,QWORD PTR [rsp+0x10]
  402715:	mov    rax,QWORD PTR [rdi+0x60]
  402719:	movsxd rcx,DWORD PTR [rdi+0x48]
  40271d:	mov    QWORD PTR [rax+rcx*8],r12
  402721:	lea    eax,[rcx+0x1]
  402724:	mov    DWORD PTR [rdi+0x48],eax
  402727:	mov    eax,DWORD PTR [rdi+0x44]
  40272a:	lea    r9,[rip+0x109df]        # 413110 <strstr@plt+0x11f40>
  402731:	mov    rcx,QWORD PTR [rsp+0x38]
  402736:	mov    ecx,DWORD PTR [r9+rcx*4]
  40273a:	mov    r12,QWORD PTR [rsp+0x28]
  40273f:	mov    r8,QWORD PTR [rsp+0x18]
  402744:	mov    r10,QWORD PTR [rsp]
  402748:	mov    ebx,DWORD PTR [rsp+0xc]
  40274c:	mov    edx,DWORD PTR [rdi+0x28]
  40274f:	mov    esi,ebp
  402751:	sub    esi,edx
  402753:	cdqe   
  402755:	lea    rdx,[rax+rax*2]
  402759:	mov    DWORD PTR [rdi+rdx*4+0x90],esi
  402760:	mov    DWORD PTR [rdi+rdx*4+0x94],ecx
  402767:	mov    DWORD PTR [rdi+rdx*4+0x98],ebx
  40276e:	add    eax,0x1
  402771:	mov    DWORD PTR [rdi+0x44],eax
  402774:	add    r14,0x3
  402778:	xor    eax,eax
  40277a:	mov    rcx,r14
  40277d:	jmp    402420 <strstr@plt+0x1250>
  402782:	mov    eax,DWORD PTR [rsi+rdx*4+0x4]
  402786:	jmp    402420 <strstr@plt+0x1250>
  40278b:	mov    eax,DWORD PTR [rbx+rsi*4+0x4]
  40278f:	mov    r15,rdx
  402792:	jmp    4027ef <strstr@plt+0x161f>
  402794:	xor    r10d,r10d
  402797:	jmp    402420 <strstr@plt+0x1250>
  40279c:	mov    dl,BYTE PTR [r10-0x1]
  4027a0:	mov    ebx,edx
  4027a2:	and    bl,0x7
  4027a5:	cmp    bl,0x4
  4027a8:	jne    4027b0 <strstr@plt+0x15e0>
  4027aa:	mov    bl,BYTE PTR [r10]
  4027ad:	and    bl,0x7
  4027b0:	add    r10,0xffffffffffffffff
  4027b4:	cmp    bl,0x5
  4027b7:	je     402812 <strstr@plt+0x1642>
  4027b9:	xor    dl,0x80
  4027bc:	mov    BYTE PTR [r10],dl
  4027bf:	mov    r10,rsi
  4027c2:	mov    rdx,rcx
  4027c5:	jmp    402440 <strstr@plt+0x1270>
  4027ca:	mov    rcx,QWORD PTR [r8+0x30]
  4027ce:	neg    eax
  4027d0:	cdqe   
  4027d2:	mov    eax,DWORD PTR [rcx+rax*8]
  4027d5:	mov    rcx,r14
  4027d8:	jmp    402420 <strstr@plt+0x1250>
  4027dd:	add    r15,0x4
  4027e1:	mov    rcx,QWORD PTR [r8+0x30]
  4027e5:	neg    eax
  4027e7:	cdqe   
  4027e9:	mov    eax,DWORD PTR [rcx+rax*8]
  4027ec:	mov    rcx,r14
  4027ef:	lea    edx,[rbp+0x4]
  4027f2:	sub    eax,edx
  4027f4:	jmp    402420 <strstr@plt+0x1250>
  4027f9:	mov    r15,rdx
  4027fc:	jmp    402420 <strstr@plt+0x1250>
  402801:	mov    BYTE PTR [rbp-0x1],0xeb
  402805:	mov    r15,rdx
  402808:	jmp    40281b <strstr@plt+0x164b>
  40280a:	mov    dl,BYTE PTR [r10-0x1]
  40280e:	add    r10,0xffffffffffffffff
  402812:	add    dl,0xc0
  402815:	mov    BYTE PTR [r10],dl
  402818:	mov    r10,rsi
  40281b:	mov    BYTE PTR [rbp+0x0],al
  40281e:	add    rbp,0x1
  402822:	mov    rdx,rcx
  402825:	jmp    402440 <strstr@plt+0x1270>
  40282a:	nop    WORD PTR [rax+rax*1+0x0]
  402830:	cmp    r15,QWORD PTR [rsp+0x30]
  402835:	jne    402410 <strstr@plt+0x1240>
  40283b:	mov    rcx,QWORD PTR [rsp+0x20]
  402840:	add    rcx,0x1
  402844:	movsxd rax,DWORD PTR [r8+0x48]
  402848:	cmp    rcx,rax
  40284b:	jl     4023e0 <strstr@plt+0x1210>
  402851:	add    r12,QWORD PTR [r8+0x40]
  402855:	xor    eax,eax
  402857:	cmp    r12,rbp
  40285a:	setne  al
  40285d:	shl    eax,0x19
  402860:	add    rsp,0x148
  402867:	pop    rbx
  402868:	pop    r12
  40286a:	pop    r13
  40286c:	pop    r14
  40286e:	pop    r15
  402870:	pop    rbp
  402871:	ret    
  402872:	mov    rax,QWORD PTR [rip+0x10777]        # 412ff0 <strstr@plt+0x11e20>
  402879:	mov    rcx,QWORD PTR [rax]
  40287c:	lea    rdi,[rip+0xab24]        # 40d3a7 <strstr@plt+0xc1d7>
  402883:	mov    esi,0x37
  402888:	mov    edx,0x1
  40288d:	call   4011b0 <fwrite@plt>
  402892:	mov    edi,0x1
  402897:	call   4011a0 <exit@plt>
  40289c:	nop    DWORD PTR [rax+0x0]
  4028a0:	mov    rax,QWORD PTR [rdi]
  4028a3:	mov    ecx,esi
  4028a5:	lea    rdx,[rcx*4+0x0]
  4028ad:	cmp    rdx,QWORD PTR [rax+0x28]
  4028b1:	jae    4028ca <strstr@plt+0x16fa>
  4028b3:	mov    rdx,QWORD PTR [rax+0x20]
  4028b7:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4028bb:	test   rcx,rcx
  4028be:	js     4028d0 <strstr@plt+0x1700>
  4028c0:	mov    eax,0xffffffff
  4028c5:	test   ecx,ecx
  4028c7:	je     4028ca <strstr@plt+0x16fa>
  4028c9:	ret    
  4028ca:	mov    eax,0xfffffffe
  4028cf:	ret    
  4028d0:	mov    edx,ecx
  4028d2:	neg    edx
  4028d4:	sar    edx,0x18
  4028d7:	movsxd rdx,edx
  4028da:	lea    rdx,[rdx+rdx*4]
  4028de:	mov    rax,QWORD PTR [rax+rdx*8+0x50]
  4028e3:	shl    rcx,0x2
  4028e7:	sub    rax,rcx
  4028ea:	mov    eax,DWORD PTR [rax]
  4028ec:	ret    
  4028ed:	nop    DWORD PTR [rax]
  4028f0:	mov    rcx,QWORD PTR [rdi]
  4028f3:	mov    eax,DWORD PTR [rcx+0x4c]
  4028f6:	test   eax,eax
  4028f8:	jne    4029a4 <strstr@plt+0x17d4>
  4028fe:	mov    rdx,QWORD PTR [rcx+0x10]
  402902:	mov    eax,0x21000001
  402907:	cmp    DWORD PTR [rdx+0x4],0x0
  40290b:	jg     4029a1 <strstr@plt+0x17d1>
  402911:	mov    DWORD PTR [rdx+0x4],0x0
  402918:	mov    eax,0x21000002
  40291d:	cmp    DWORD PTR [rdx+0x8],0x0
  402921:	jg     4029a1 <strstr@plt+0x17d1>
  402923:	mov    DWORD PTR [rdx+0x8],0x0
  40292a:	mov    eax,0x21000003
  40292f:	cmp    DWORD PTR [rdx+0xc],0x0
  402933:	jg     4029a1 <strstr@plt+0x17d1>
  402935:	mov    DWORD PTR [rdx+0xc],0x0
  40293c:	mov    eax,0x21000004
  402941:	cmp    DWORD PTR [rdx+0x10],0x0
  402945:	jg     4029a1 <strstr@plt+0x17d1>
  402947:	mov    DWORD PTR [rdx+0x10],0x0
  40294e:	mov    eax,0x21000005
  402953:	cmp    DWORD PTR [rdx+0x14],0x0
  402957:	jg     4029a1 <strstr@plt+0x17d1>
  402959:	mov    DWORD PTR [rdx+0x14],0x0
  402960:	mov    eax,0x21000006
  402965:	cmp    DWORD PTR [rdx+0x18],0x0
  402969:	jg     4029a1 <strstr@plt+0x17d1>
  40296b:	mov    DWORD PTR [rdx+0x18],0x0
  402972:	mov    eax,0x21000007
  402977:	cmp    DWORD PTR [rdx+0x1c],0x0
  40297b:	jg     4029a1 <strstr@plt+0x17d1>
  40297d:	mov    DWORD PTR [rdx+0x1c],0x0
  402984:	mov    eax,0x21000008
  402989:	cmp    DWORD PTR [rdx+0x20],0x0
  40298d:	jg     4029a1 <strstr@plt+0x17d1>
  40298f:	mov    DWORD PTR [rdx+0x20],0x0
  402996:	mov    eax,0x21000009
  40299b:	cmp    DWORD PTR [rdx+0x24],0x0
  40299f:	jle    4029a5 <strstr@plt+0x17d5>
  4029a1:	mov    DWORD PTR [rcx+0x4c],eax
  4029a4:	ret    
  4029a5:	mov    DWORD PTR [rdx+0x24],0x0
  4029ac:	mov    eax,DWORD PTR [rcx+0x4c]
  4029af:	test   esi,esi
  4029b1:	js     4029a4 <strstr@plt+0x17d4>
  4029b3:	test   eax,eax
  4029b5:	jne    4029a4 <strstr@plt+0x17d4>
  4029b7:	mov    rax,QWORD PTR [rcx+0x38]
  4029bb:	movsxd rdx,esi
  4029be:	lea    rdx,[rdx+rdx*4]
  4029c2:	lea    rdx,[rcx+rdx*8]
  4029c6:	add    rdx,0x50
  4029ca:	cmp    rax,rdx
  4029cd:	je     4029e7 <strstr@plt+0x1817>
  4029cf:	lea    rdx,[rcx+0x50]
  4029d3:	sub    rax,rdx
  4029d6:	shr    rax,0x3
  4029da:	imul   eax,eax,0xcccccccd
  4029e0:	or     eax,0x3000000
  4029e5:	jmp    4029a1 <strstr@plt+0x17d1>
  4029e7:	xor    eax,eax
  4029e9:	ret    
  4029ea:	nop    WORD PTR [rax+rax*1+0x0]
  4029f0:	push   rbx
  4029f1:	mov    rbx,rdx
  4029f4:	mov    rax,rsi
  4029f7:	mov    rcx,QWORD PTR [rdi+0x10]
  4029fb:	mov    esi,0x1
  402a00:	mov    rdi,rax
  402a03:	call   4011b0 <fwrite@plt>
  402a08:	cmp    rax,rbx
  402a0b:	jne    402a0f <strstr@plt+0x183f>
  402a0d:	pop    rbx
  402a0e:	ret    
  402a0f:	mov    rax,QWORD PTR [rip+0x105da]        # 412ff0 <strstr@plt+0x11e20>
  402a16:	mov    rbx,QWORD PTR [rax]
  402a19:	call   401040 <__errno_location@plt>
  402a1e:	mov    edi,DWORD PTR [rax]
  402a20:	call   4011c0 <strerror@plt>
  402a25:	mov    rcx,rax
  402a28:	lea    rsi,[rip+0xa169]        # 40cb98 <strstr@plt+0xb9c8>
  402a2f:	xor    eax,eax
  402a31:	mov    rdi,rbx
  402a34:	mov    rdx,rcx
  402a37:	call   401120 <fprintf@plt>
  402a3c:	mov    edi,0x1
  402a41:	call   4011a0 <exit@plt>
  402a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a50:	push   rbp
  402a51:	push   r15
  402a53:	push   r14
  402a55:	push   r13
  402a57:	push   r12
  402a59:	push   rbx
  402a5a:	sub    rsp,0xb08
  402a61:	mov    rbx,rsi
  402a64:	mov    DWORD PTR [rsp+0x18],0xffffffff
  402a6c:	lea    rax,[rip+0xca66]        # 40f4d9 <strstr@plt+0xe309>
  402a73:	mov    QWORD PTR [rsp+0x28],rax
  402a78:	mov    rax,QWORD PTR [rsi+0x8]
  402a7c:	test   rax,rax
  402a7f:	je     403beb <strstr@plt+0x2a1b>
  402a85:	mov    r13d,0x1
  402a8b:	mov    ecx,0xffffffff
  402a90:	lea    rsi,[rip+0xab6b]        # 40d602 <strstr@plt+0xc432>
  402a97:	lea    r12,[rip+0xb3e5]        # 40de83 <strstr@plt+0xccb3>
  402a9e:	lea    r15,[rip+0xab7a]        # 40d61f <strstr@plt+0xc44f>
  402aa5:	lea    r14,[rip+0xab79]        # 40d625 <strstr@plt+0xc455>
  402aac:	cmp    BYTE PTR [rax],0x2d
  402aaf:	jne    402c8d <strstr@plt+0x1abd>
  402ab5:	movsx  edx,BYTE PTR [rax+0x1]
  402ab9:	cmp    edx,0x6c
  402abc:	jle    402c72 <strstr@plt+0x1aa2>
  402ac2:	cmp    edx,0x6d
  402ac5:	jne    402be0 <strstr@plt+0x1a10>
  402acb:	cmp    BYTE PTR [rax+0x2],0x0
  402acf:	jne    403bf4 <strstr@plt+0x2a24>
  402ad5:	add    r13d,0x1
  402ad9:	movsxd rax,r13d
  402adc:	mov    rbp,QWORD PTR [rbx+rax*8]
  402ae0:	test   rbp,rbp
  402ae3:	je     403bf4 <strstr@plt+0x2a24>
  402ae9:	mov    rdi,rbp
  402aec:	call   401100 <strcmp@plt>
  402af1:	test   eax,eax
  402af3:	je     402c0e <strstr@plt+0x1a3e>
  402af9:	mov    rdi,rbp
  402afc:	lea    rsi,[rip+0xab06]        # 40d609 <strstr@plt+0xc439>
  402b03:	call   401100 <strcmp@plt>
  402b08:	test   eax,eax
  402b0a:	je     402c12 <strstr@plt+0x1a42>
  402b10:	mov    rdi,rbp
  402b13:	lea    rsi,[rip+0xaaf7]        # 40d611 <strstr@plt+0xc441>
  402b1a:	call   401100 <strcmp@plt>
  402b1f:	test   eax,eax
  402b21:	je     402c19 <strstr@plt+0x1a49>
  402b27:	mov    rdi,rbp
  402b2a:	lea    rsi,[rip+0xaae8]        # 40d619 <strstr@plt+0xc449>
  402b31:	call   401100 <strcmp@plt>
  402b36:	test   eax,eax
  402b38:	je     402c20 <strstr@plt+0x1a50>
  402b3e:	mov    rdi,rbp
  402b41:	mov    rsi,r12
  402b44:	call   401100 <strcmp@plt>
  402b49:	test   eax,eax
  402b4b:	je     402c27 <strstr@plt+0x1a57>
  402b51:	mov    rdi,rbp
  402b54:	mov    rsi,r15
  402b57:	call   401100 <strcmp@plt>
  402b5c:	test   eax,eax
  402b5e:	je     402c2e <strstr@plt+0x1a5e>
  402b64:	mov    rdi,rbp
  402b67:	mov    rsi,r14
  402b6a:	call   401100 <strcmp@plt>
  402b6f:	test   eax,eax
  402b71:	je     402c35 <strstr@plt+0x1a65>
  402b77:	mov    rdi,rbp
  402b7a:	lea    rsi,[rip+0xaaaa]        # 40d62b <strstr@plt+0xc45b>
  402b81:	call   401100 <strcmp@plt>
  402b86:	test   eax,eax
  402b88:	je     402c3c <strstr@plt+0x1a6c>
  402b8e:	mov    rdi,rbp
  402b91:	lea    rsi,[rip+0xaa9a]        # 40d632 <strstr@plt+0xc462>
  402b98:	call   401100 <strcmp@plt>
  402b9d:	test   eax,eax
  402b9f:	je     402c43 <strstr@plt+0x1a73>
  402ba5:	mov    rdi,rbp
  402ba8:	lea    rsi,[rip+0xaa8a]        # 40d639 <strstr@plt+0xc469>
  402baf:	call   401100 <strcmp@plt>
  402bb4:	test   eax,eax
  402bb6:	je     402c4a <strstr@plt+0x1a7a>
  402bbc:	mov    rdi,rbp
  402bbf:	lea    rsi,[rip+0xaa79]        # 40d63f <strstr@plt+0xc46f>
  402bc6:	call   401100 <strcmp@plt>
  402bcb:	mov    ecx,0xa
  402bd0:	test   eax,eax
  402bd2:	je     402c50 <strstr@plt+0x1a80>
  402bd4:	jmp    403bf4 <strstr@plt+0x2a24>
  402bd9:	nop    DWORD PTR [rax+0x0]
  402be0:	cmp    edx,0x6f
  402be3:	jne    403bf4 <strstr@plt+0x2a24>
  402be9:	cmp    BYTE PTR [rax+0x2],0x0
  402bed:	jne    403bf4 <strstr@plt+0x2a24>
  402bf3:	add    r13d,0x1
  402bf7:	movsxd rax,r13d
  402bfa:	mov    rax,QWORD PTR [rbx+rax*8]
  402bfe:	test   rax,rax
  402c01:	je     403bf4 <strstr@plt+0x2a24>
  402c07:	mov    QWORD PTR [rsp+0x28],rax
  402c0c:	jmp    402c5b <strstr@plt+0x1a8b>
  402c0e:	xor    ecx,ecx
  402c10:	jmp    402c50 <strstr@plt+0x1a80>
  402c12:	mov    ecx,0x1
  402c17:	jmp    402c50 <strstr@plt+0x1a80>
  402c19:	mov    ecx,0x2
  402c1e:	jmp    402c50 <strstr@plt+0x1a80>
  402c20:	mov    ecx,0x3
  402c25:	jmp    402c50 <strstr@plt+0x1a80>
  402c27:	mov    ecx,0x4
  402c2c:	jmp    402c50 <strstr@plt+0x1a80>
  402c2e:	mov    ecx,0x5
  402c33:	jmp    402c50 <strstr@plt+0x1a80>
  402c35:	mov    ecx,0x6
  402c3a:	jmp    402c50 <strstr@plt+0x1a80>
  402c3c:	mov    ecx,0x7
  402c41:	jmp    402c50 <strstr@plt+0x1a80>
  402c43:	mov    ecx,0x8
  402c48:	jmp    402c50 <strstr@plt+0x1a80>
  402c4a:	mov    ecx,0x9
  402c4f:	nop
  402c50:	mov    DWORD PTR [rsp+0x18],ecx
  402c54:	lea    rsi,[rip+0xa9a7]        # 40d602 <strstr@plt+0xc432>
  402c5b:	movsxd rax,r13d
  402c5e:	add    r13d,0x1
  402c62:	mov    rax,QWORD PTR [rbx+rax*8+0x8]
  402c67:	test   rax,rax
  402c6a:	jne    402aac <strstr@plt+0x18dc>
  402c70:	jmp    402c8d <strstr@plt+0x1abd>
  402c72:	test   edx,edx
  402c74:	je     402c8d <strstr@plt+0x1abd>
  402c76:	cmp    edx,0x2d
  402c79:	jne    403bf4 <strstr@plt+0x2a24>
  402c7f:	cmp    BYTE PTR [rax+0x2],0x0
  402c83:	jne    403bf4 <strstr@plt+0x2a24>
  402c89:	add    r13d,0x1
  402c8d:	movsxd rax,r13d
  402c90:	lea    rax,[rbx+rax*8]
  402c94:	mov    QWORD PTR [rsp+0x30],rax
  402c99:	cmp    ecx,0xffffffff
  402c9c:	je     403bf4 <strstr@plt+0x2a24>
  402ca2:	mov    DWORD PTR [rsp+0x4c],0xa3
  402caa:	mov    edi,0x518
  402caf:	call   401150 <malloc@plt>
  402cb4:	mov    rbx,rax
  402cb7:	mov    QWORD PTR [rsp+0x60],rax
  402cbc:	xor    esi,esi
  402cbe:	mov    edx,0x518
  402cc3:	mov    rdi,rax
  402cc6:	call   4010c0 <memset@plt>
  402ccb:	mov    DWORD PTR [rsp+0x54],0x0
  402cd3:	lea    rax,[rip+0xf916]        # 4125f0 <strstr@plt+0x11420>
  402cda:	mov    QWORD PTR [rsp+0x88],rax
  402ce2:	mov    edi,0x128
  402ce7:	call   401150 <malloc@plt>
  402cec:	mov    QWORD PTR [rsp+0x70],rax
  402cf1:	vpcmpeqd ymm0,ymm0,ymm0
  402cf5:	vmovdqu YMMWORD PTR [rip+0x10487],ymm0        # 413184 <strstr@plt+0x11fb4>
  402cfd:	vmovdqu YMMWORD PTR [rip+0x1046b],ymm0        # 413170 <strstr@plt+0x11fa0>
  402d05:	vmovdqu YMMWORD PTR [rip+0x10443],ymm0        # 413150 <strstr@plt+0x11f80>
  402d0d:	mov    DWORD PTR [rsp+0x58],0x0
  402d15:	vmovdqu YMMWORD PTR [rip+0x10413],ymm0        # 413130 <strstr@plt+0x11f60>
  402d1d:	vmovdqu YMMWORD PTR [rip+0x103eb],ymm0        # 413110 <strstr@plt+0x11f40>
  402d25:	lea    rax,[rip+0xa9df]        # 40d70b <strstr@plt+0xc53b>
  402d2c:	vmovq  xmm0,rax
  402d31:	lea    rax,[rip+0xa9c6]        # 40d6fe <strstr@plt+0xc52e>
  402d38:	vmovq  xmm1,rax
  402d3d:	vpunpcklqdq xmm0,xmm1,xmm0
  402d41:	vmovdqu XMMWORD PTR [rsp+0x90],xmm0
  402d4a:	mov    edi,0x100
  402d4f:	vzeroupper 
  402d52:	call   401150 <malloc@plt>
  402d57:	mov    QWORD PTR [rsp+0x10],rax
  402d5c:	test   rax,rax
  402d5f:	je     403be1 <strstr@plt+0x2a11>
  402d65:	mov    rbp,rax
  402d68:	mov    QWORD PTR [rax],0x100
  402d6f:	vpxor  xmm0,xmm0,xmm0
  402d73:	vmovdqu XMMWORD PTR [rax+0x18],xmm0
  402d78:	mov    QWORD PTR [rax+0x28],0x0
  402d80:	mov    DWORD PTR [rax+0x48],0x2
  402d87:	mov    DWORD PTR [rax+0x6c],0x0
  402d8e:	vmovdqu XMMWORD PTR [rax+0x80],xmm0
  402d96:	vmovdqu XMMWORD PTR [rax+0x50],xmm0
  402d9b:	mov    QWORD PTR [rax+0x60],0x0
  402da3:	mov    QWORD PTR [rax+0x78],0xfffffffffc000000
  402dab:	mov    DWORD PTR [rax+0x94],0x0
  402db5:	add    rbx,0xffffffffffffffb0
  402db9:	mov    QWORD PTR [rax+0x30],rbx
  402dbd:	mov    edi,0x400
  402dc2:	call   401150 <malloc@plt>
  402dc7:	mov    QWORD PTR [rbp+0x10],rax
  402dcb:	test   rax,rax
  402dce:	je     403be1 <strstr@plt+0x2a11>
  402dd4:	mov    QWORD PTR [rbp+0x18],0x400
  402ddc:	lea    rcx,[rip+0x64fd]        # 4092e0 <strstr@plt+0x8110>
  402de3:	mov    QWORD PTR [rbp+0x8],rcx
  402de7:	mov    DWORD PTR [rbp+0x4c],0x0
  402dee:	mov    rcx,rbp
  402df1:	add    rcx,0x50
  402df5:	mov    QWORD PTR [rbp+0x38],rcx
  402df9:	xor    esi,esi
  402dfb:	mov    edx,0x400
  402e00:	mov    rdi,rax
  402e03:	call   4010c0 <memset@plt>
  402e08:	mov    DWORD PTR [rbp+0x68],0x0
  402e0f:	mov    DWORD PTR [rbp+0x70],0x0
  402e16:	mov    DWORD PTR [rbp+0x90],0x1000000
  402e20:	mov    DWORD PTR [rbp+0x98],0x0
  402e2a:	lea    rdi,[rsp+0x10]
  402e2f:	call   403dc0 <strstr@plt+0x2bf0>
  402e34:	mov    DWORD PTR [rsp+0x48],0x5d
  402e3c:	mov    rax,QWORD PTR [rsp+0x10]
  402e41:	cmp    DWORD PTR [rax+0x4c],0x0
  402e45:	jne    402ef9 <strstr@plt+0x1d29>
  402e4b:	mov    rcx,QWORD PTR [rax+0x10]
  402e4f:	mov    edx,0x21000001
  402e54:	cmp    DWORD PTR [rcx+0x4],0x0
  402e58:	jg     402ef6 <strstr@plt+0x1d26>
  402e5e:	mov    DWORD PTR [rcx+0x4],0x0
  402e65:	mov    edx,0x21000002
  402e6a:	cmp    DWORD PTR [rcx+0x8],0x0
  402e6e:	jg     402ef6 <strstr@plt+0x1d26>
  402e74:	mov    DWORD PTR [rcx+0x8],0x0
  402e7b:	mov    edx,0x21000003
  402e80:	cmp    DWORD PTR [rcx+0xc],0x0
  402e84:	jg     402ef6 <strstr@plt+0x1d26>
  402e86:	mov    DWORD PTR [rcx+0xc],0x0
  402e8d:	mov    edx,0x21000004
  402e92:	cmp    DWORD PTR [rcx+0x10],0x0
  402e96:	jg     402ef6 <strstr@plt+0x1d26>
  402e98:	mov    DWORD PTR [rcx+0x10],0x0
  402e9f:	mov    edx,0x21000005
  402ea4:	cmp    DWORD PTR [rcx+0x14],0x0
  402ea8:	jg     402ef6 <strstr@plt+0x1d26>
  402eaa:	mov    DWORD PTR [rcx+0x14],0x0
  402eb1:	mov    edx,0x21000006
  402eb6:	cmp    DWORD PTR [rcx+0x18],0x0
  402eba:	jg     402ef6 <strstr@plt+0x1d26>
  402ebc:	mov    DWORD PTR [rcx+0x18],0x0
  402ec3:	mov    edx,0x21000007
  402ec8:	cmp    DWORD PTR [rcx+0x1c],0x0
  402ecc:	jg     402ef6 <strstr@plt+0x1d26>
  402ece:	mov    DWORD PTR [rcx+0x1c],0x0
  402ed5:	mov    edx,0x21000008
  402eda:	cmp    DWORD PTR [rcx+0x20],0x0
  402ede:	jg     402ef6 <strstr@plt+0x1d26>
  402ee0:	mov    DWORD PTR [rcx+0x20],0x0
  402ee7:	mov    edx,0x21000009
  402eec:	cmp    DWORD PTR [rcx+0x24],0x0
  402ef0:	jle    403bb0 <strstr@plt+0x29e0>
  402ef6:	mov    DWORD PTR [rax+0x4c],edx
  402ef9:	lea    rsi,[rsp+0x40]
  402efe:	lea    rdi,[rsp+0x10]
  402f03:	call   401c20 <strstr@plt+0xa50>
  402f08:	test   eax,eax
  402f0a:	jne    4035b3 <strstr@plt+0x23e3>
  402f10:	mov    rdi,QWORD PTR [rsp+0x40]
  402f15:	call   401150 <malloc@plt>
  402f1a:	mov    QWORD PTR [rsp+0x38],rax
  402f1f:	lea    rdi,[rsp+0x10]
  402f24:	mov    rsi,rax
  402f27:	call   402390 <strstr@plt+0x11c0>
  402f2c:	test   eax,eax
  402f2e:	jne    4035b3 <strstr@plt+0x23e3>
  402f34:	cmp    DWORD PTR [rsp+0x18],0x2
  402f39:	lea    rax,[rip+0xc2c3]        # 40f203 <strstr@plt+0xe033>
  402f40:	lea    rcx,[rip+0xbbb6]        # 40eafd <strstr@plt+0xd92d>
  402f47:	mov    rdx,rcx
  402f4a:	cmove  rdx,rax
  402f4e:	lea    rsi,[rip+0xa48a]        # 40d3df <strstr@plt+0xc20f>
  402f55:	lea    r8,[rip+0xa7b3]        # 40d70f <strstr@plt+0xc53f>
  402f5c:	lea    rbx,[rsp+0xa00]
  402f64:	xor    eax,eax
  402f66:	mov    rdi,rbx
  402f69:	call   401190 <sprintf@plt>
  402f6e:	mov    esi,0x40
  402f73:	mov    rdi,rbx
  402f76:	call   4010b0 <strchr@plt>
  402f7b:	test   rax,rax
  402f7e:	je     402f83 <strstr@plt+0x1db3>
  402f80:	mov    BYTE PTR [rax],0x0
  402f83:	lea    rbx,[rsp+0xa00]
  402f8b:	mov    rdi,rbx
  402f8e:	call   4010a0 <strlen@plt>
  402f93:	lea    rdi,[rax+0x1]
  402f97:	call   401150 <malloc@plt>
  402f9c:	mov    rbp,rax
  402f9f:	mov    rdi,rax
  402fa2:	mov    rsi,rbx
  402fa5:	call   401060 <strcpy@plt>
  402faa:	mov    QWORD PTR [rsp+0x80],rbp
  402fb2:	movsxd r14,DWORD PTR [rsp+0x48]
  402fb7:	mov    ebp,DWORD PTR [rsp+0x4c]
  402fbb:	lea    eax,[r14+rbp*1]
  402fbf:	add    eax,0x1
  402fc2:	movsxd rdi,eax
  402fc5:	shl    rdi,0x4
  402fc9:	call   401150 <malloc@plt>
  402fce:	mov    rbx,rax
  402fd1:	mov    QWORD PTR [rsp+0x68],rax
  402fd6:	mov    DWORD PTR [rsp+0x50],0x0
  402fde:	lea    rdi,[r14*4+0x0]
  402fe6:	call   401150 <malloc@plt>
  402feb:	mov    QWORD PTR [rsp+0x78],rax
  402ff0:	test   r14,r14
  402ff3:	jle    40313e <strstr@plt+0x1f6e>
  402ff9:	lea    r13,[rip+0xa71f]        # 40d71f <strstr@plt+0xc54f>
  403000:	lea    r12,[rsp+0xa00]
  403008:	xor    r14d,r14d
  40300b:	nop    DWORD PTR [rax+rax*1+0x0]
  403010:	mov    rax,QWORD PTR [rsp+0x10]
  403015:	lea    rcx,[r14*4+0x0]
  40301d:	cmp    rcx,QWORD PTR [rax+0x28]
  403021:	jae    403587 <strstr@plt+0x23b7>
  403027:	mov    rcx,QWORD PTR [rax+0x20]
  40302b:	movsxd rcx,DWORD PTR [rcx+r14*4]
  40302f:	test   rcx,rcx
  403032:	jns    403587 <strstr@plt+0x23b7>
  403038:	mov    edx,ecx
  40303a:	neg    edx
  40303c:	sar    edx,0x18
  40303f:	movsxd rdx,edx
  403042:	lea    rdx,[rdx+rdx*4]
  403046:	mov    rax,QWORD PTR [rax+rdx*8+0x50]
  40304b:	shl    rcx,0x2
  40304f:	sub    rax,rcx
  403052:	mov    eax,DWORD PTR [rax]
  403054:	test   eax,eax
  403056:	js     403587 <strstr@plt+0x23b7>
  40305c:	mov    rcx,QWORD PTR [rsp+0x78]
  403061:	mov    DWORD PTR [rcx+r14*4],eax
  403065:	lea    rcx,[rip+0xea44]        # 411ab0 <strstr@plt+0x108e0>
  40306c:	mov    r8,QWORD PTR [rcx+r14*8]
  403070:	movsxd rbp,DWORD PTR [rsp+0x50]
  403075:	lea    ecx,[rbp+0x1]
  403078:	mov    DWORD PTR [rsp+0x50],ecx
  40307c:	test   rbp,rbp
  40307f:	jle    4030b8 <strstr@plt+0x1ee8>
  403081:	mov    rcx,rbp
  403084:	shl    rcx,0x4
  403088:	nop    DWORD PTR [rax+rax*1+0x0]
  403090:	cmp    DWORD PTR [rbx+rcx*1-0x8],eax
  403094:	jle    4030b8 <strstr@plt+0x1ee8>
  403096:	add    rbp,0xffffffffffffffff
  40309a:	vmovdqu xmm0,XMMWORD PTR [rbx+rcx*1-0x10]
  4030a0:	vmovdqu XMMWORD PTR [rbx+rcx*1],xmm0
  4030a5:	mov    rbx,QWORD PTR [rsp+0x68]
  4030aa:	lea    rdx,[rbp+0x1]
  4030ae:	add    rcx,0xfffffffffffffff0
  4030b2:	cmp    rdx,0x1
  4030b6:	jg     403090 <strstr@plt+0x1ec0>
  4030b8:	shl    rbp,0x4
  4030bc:	mov    DWORD PTR [rbx+rbp*1+0x8],eax
  4030c0:	cmp    DWORD PTR [rsp+0x18],0x2
  4030c5:	lea    rdx,[rip+0xba31]        # 40eafd <strstr@plt+0xd92d>
  4030cc:	lea    rax,[rip+0xc130]        # 40f203 <strstr@plt+0xe033>
  4030d3:	cmove  rdx,rax
  4030d7:	xor    eax,eax
  4030d9:	mov    rdi,r12
  4030dc:	lea    rsi,[rip+0xa2fc]        # 40d3df <strstr@plt+0xc20f>
  4030e3:	mov    rcx,r13
  4030e6:	call   401190 <sprintf@plt>
  4030eb:	mov    esi,0x40
  4030f0:	mov    rdi,r12
  4030f3:	call   4010b0 <strchr@plt>
  4030f8:	test   rax,rax
  4030fb:	je     403100 <strstr@plt+0x1f30>
  4030fd:	mov    BYTE PTR [rax],0x0
  403100:	mov    rdi,r12
  403103:	call   4010a0 <strlen@plt>
  403108:	lea    rdi,[rax+0x1]
  40310c:	call   401150 <malloc@plt>
  403111:	mov    r15,rax
  403114:	mov    rdi,rax
  403117:	mov    rsi,r12
  40311a:	call   401060 <strcpy@plt>
  40311f:	mov    rbx,QWORD PTR [rsp+0x68]
  403124:	mov    QWORD PTR [rbx+rbp*1],r15
  403128:	add    r14,0x1
  40312c:	movsxd rax,DWORD PTR [rsp+0x48]
  403131:	cmp    r14,rax
  403134:	jl     403010 <strstr@plt+0x1e40>
  40313a:	mov    ebp,DWORD PTR [rsp+0x4c]
  40313e:	test   ebp,ebp
  403140:	jle    4032bc <strstr@plt+0x20ec>
  403146:	lea    r12,[rsp+0xa00]
  40314e:	xor    r13d,r13d
  403151:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40315b:	nop    DWORD PTR [rax+rax*1+0x0]
  403160:	lea    rax,[rip+0xf489]        # 4125f0 <strstr@plt+0x11420>
  403167:	mov    r14,QWORD PTR [rax+r13*8]
  40316b:	mov    rdi,r14
  40316e:	call   4010a0 <strlen@plt>
  403173:	mov    rcx,QWORD PTR [rsp+0x60]
  403178:	mov    rcx,QWORD PTR [rcx+r13*8]
  40317c:	test   rcx,rcx
  40317f:	je     403bbc <strstr@plt+0x29ec>
  403185:	cmp    eax,0x2
  403188:	jl     4031d0 <strstr@plt+0x2000>
  40318a:	shl    rax,0x20
  40318e:	movabs rdx,0xfffffffe00000000
  403198:	lea    rdx,[rax+rdx*1]
  40319c:	sar    rdx,0x20
  4031a0:	cmp    BYTE PTR [r14+rdx*1],0x5f
  4031a5:	jne    4031d0 <strstr@plt+0x2000>
  4031a7:	movabs rdx,0xffffffff00000000
  4031b1:	add    rax,rdx
  4031b4:	sar    rax,0x20
  4031b8:	cmp    BYTE PTR [r14+rax*1],0x5a
  4031bd:	je     4032ac <strstr@plt+0x20dc>
  4031c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031cd:	nop    DWORD PTR [rax]
  4031d0:	sub    ecx,DWORD PTR [rsp+0x38]
  4031d4:	movsxd r15,DWORD PTR [rsp+0x50]
  4031d9:	lea    eax,[r15+0x1]
  4031dd:	mov    DWORD PTR [rsp+0x50],eax
  4031e1:	test   r15,r15
  4031e4:	jle    403230 <strstr@plt+0x2060>
  4031e6:	lea    rdx,[r15-0x1]
  4031ea:	mov    rax,rdx
  4031ed:	shl    rax,0x4
  4031f1:	cmp    DWORD PTR [rbx+rax*1+0x8],ecx
  4031f5:	jle    403230 <strstr@plt+0x2060>
  4031f7:	shl    r15,0x4
  4031fb:	mov    rax,r15
  4031fe:	xchg   ax,ax
  403200:	mov    r15,rdx
  403203:	lea    rdx,[rdx+0x1]
  403207:	vmovdqu xmm0,XMMWORD PTR [rbx+rax*1-0x10]
  40320d:	vmovdqu XMMWORD PTR [rbx+rax*1],xmm0
  403212:	mov    rbx,QWORD PTR [rsp+0x68]
  403217:	cmp    rdx,0x1
  40321b:	jle    403230 <strstr@plt+0x2060>
  40321d:	lea    rdx,[r15-0x1]
  403221:	cmp    DWORD PTR [rbx+rax*1-0x18],ecx
  403225:	lea    rax,[rax-0x10]
  403229:	jg     403200 <strstr@plt+0x2030>
  40322b:	nop    DWORD PTR [rax+rax*1+0x0]
  403230:	shl    r15,0x4
  403234:	mov    DWORD PTR [rbx+r15*1+0x8],ecx
  403239:	cmp    DWORD PTR [rsp+0x18],0x2
  40323e:	lea    rdx,[rip+0xb8b8]        # 40eafd <strstr@plt+0xd92d>
  403245:	lea    rax,[rip+0xbfb7]        # 40f203 <strstr@plt+0xe033>
  40324c:	cmove  rdx,rax
  403250:	xor    eax,eax
  403252:	mov    rdi,r12
  403255:	lea    rsi,[rip+0xa183]        # 40d3df <strstr@plt+0xc20f>
  40325c:	lea    rcx,[rip+0xa4df]        # 40d742 <strstr@plt+0xc572>
  403263:	mov    r8,r14
  403266:	call   401190 <sprintf@plt>
  40326b:	mov    esi,0x40
  403270:	mov    rdi,r12
  403273:	call   4010b0 <strchr@plt>
  403278:	test   rax,rax
  40327b:	je     403280 <strstr@plt+0x20b0>
  40327d:	mov    BYTE PTR [rax],0x0
  403280:	mov    rdi,r12
  403283:	call   4010a0 <strlen@plt>
  403288:	lea    rdi,[rax+0x1]
  40328c:	call   401150 <malloc@plt>
  403291:	mov    rbp,rax
  403294:	mov    rdi,rax
  403297:	mov    rsi,r12
  40329a:	call   401060 <strcpy@plt>
  40329f:	mov    rbx,QWORD PTR [rsp+0x68]
  4032a4:	mov    QWORD PTR [rbx+r15*1],rbp
  4032a8:	mov    ebp,DWORD PTR [rsp+0x4c]
  4032ac:	add    r13,0x1
  4032b0:	movsxd rax,ebp
  4032b3:	cmp    r13,rax
  4032b6:	jl     403160 <strstr@plt+0x1f90>
  4032bc:	mov    eax,DWORD PTR [rsp+0x40]
  4032c0:	movsxd rbp,DWORD PTR [rsp+0x50]
  4032c5:	lea    ecx,[rbp+0x1]
  4032c8:	mov    DWORD PTR [rsp+0x50],ecx
  4032cc:	test   rbp,rbp
  4032cf:	jle    40331b <strstr@plt+0x214b>
  4032d1:	lea    rdx,[rbp-0x1]
  4032d5:	mov    rcx,rdx
  4032d8:	shl    rcx,0x4
  4032dc:	cmp    DWORD PTR [rbx+rcx*1+0x8],eax
  4032e0:	jle    40331b <strstr@plt+0x214b>
  4032e2:	shl    rbp,0x4
  4032e6:	mov    rcx,rbp
  4032e9:	nop    DWORD PTR [rax+0x0]
  4032f0:	mov    rbp,rdx
  4032f3:	lea    rdx,[rdx+0x1]
  4032f7:	vmovdqu xmm0,XMMWORD PTR [rbx+rcx*1-0x10]
  4032fd:	vmovdqu XMMWORD PTR [rbx+rcx*1],xmm0
  403302:	mov    rbx,QWORD PTR [rsp+0x68]
  403307:	cmp    rdx,0x1
  40330b:	jle    40331b <strstr@plt+0x214b>
  40330d:	lea    rdx,[rbp-0x1]
  403311:	cmp    DWORD PTR [rbx+rcx*1-0x18],eax
  403315:	lea    rcx,[rcx-0x10]
  403319:	jg     4032f0 <strstr@plt+0x2120>
  40331b:	shl    rbp,0x4
  40331f:	mov    DWORD PTR [rbx+rbp*1+0x8],eax
  403323:	cmp    DWORD PTR [rsp+0x18],0x2
  403328:	lea    rdx,[rip+0xbed4]        # 40f203 <strstr@plt+0xe033>
  40332f:	lea    rcx,[rip+0xb7c7]        # 40eafd <strstr@plt+0xd92d>
  403336:	cmovne rdx,rcx
  40333a:	lea    rsi,[rip+0xa09e]        # 40d3df <strstr@plt+0xc20f>
  403341:	lea    rbx,[rsp+0xa00]
  403349:	xor    eax,eax
  40334b:	mov    rdi,rbx
  40334e:	mov    r8,rcx
  403351:	call   401190 <sprintf@plt>
  403356:	mov    esi,0x40
  40335b:	mov    rdi,rbx
  40335e:	call   4010b0 <strchr@plt>
  403363:	test   rax,rax
  403366:	je     40336b <strstr@plt+0x219b>
  403368:	mov    BYTE PTR [rax],0x0
  40336b:	lea    r14,[rsp+0xa00]
  403373:	mov    rdi,r14
  403376:	call   4010a0 <strlen@plt>
  40337b:	lea    rdi,[rax+0x1]
  40337f:	call   401150 <malloc@plt>
  403384:	mov    rbx,rax
  403387:	mov    rdi,rax
  40338a:	mov    rsi,r14
  40338d:	call   401060 <strcpy@plt>
  403392:	mov    rax,QWORD PTR [rsp+0x68]
  403397:	mov    QWORD PTR [rax+rbp*1],rbx
  40339b:	add    DWORD PTR [rsp+0x50],0xffffffff
  4033a0:	mov    r15,QWORD PTR [rsp+0x10]
  4033a5:	mov    eax,DWORD PTR [r15+0x48]
  4033a9:	test   eax,eax
  4033ab:	jle    4033e1 <strstr@plt+0x2211>
  4033ad:	lea    rbx,[r15+0x58]
  4033b1:	xor    ebp,ebp
  4033b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033bd:	nop    DWORD PTR [rax]
  4033c0:	mov    rdi,QWORD PTR [rbx]
  4033c3:	test   rdi,rdi
  4033c6:	je     4033d1 <strstr@plt+0x2201>
  4033c8:	call   401030 <free@plt>
  4033cd:	mov    eax,DWORD PTR [r15+0x48]
  4033d1:	add    rbp,0x1
  4033d5:	movsxd rcx,eax
  4033d8:	add    rbx,0x28
  4033dc:	cmp    rbp,rcx
  4033df:	jl     4033c0 <strstr@plt+0x21f0>
  4033e1:	mov    rdi,QWORD PTR [r15+0x20]
  4033e5:	test   rdi,rdi
  4033e8:	je     4033ef <strstr@plt+0x221f>
  4033ea:	call   401030 <free@plt>
  4033ef:	mov    rdi,QWORD PTR [r15+0x10]
  4033f3:	test   rdi,rdi
  4033f6:	je     4033fd <strstr@plt+0x222d>
  4033f8:	call   401030 <free@plt>
  4033fd:	mov    rdi,r15
  403400:	call   401030 <free@plt>
  403405:	mov    ecx,DWORD PTR [rsp+0x18]
  403409:	mov    rdi,QWORD PTR [rsp+0x28]
  40340e:	cmp    BYTE PTR [rdi],0x2d
  403411:	jne    40341d <strstr@plt+0x224d>
  403413:	cmp    BYTE PTR [rdi+0x1],0x0
  403417:	je     4035b8 <strstr@plt+0x23e8>
  40341d:	add    ecx,0xfffffffd
  403420:	cmp    ecx,0x1
  403423:	lea    rax,[rip+0xaa5b]        # 40de85 <strstr@plt+0xccb5>
  40342a:	lea    rsi,[rip+0x9f4a]        # 40d37b <strstr@plt+0xc1ab>
  403431:	cmova  rsi,rax
  403435:	call   401180 <fopen@plt>
  40343a:	mov    QWORD PTR [rsp+0x20],rax
  40343f:	test   rax,rax
  403442:	je     403bf9 <strstr@plt+0x2a29>
  403448:	mov    ecx,DWORD PTR [rsp+0x18]
  40344c:	cmp    ecx,0xa
  40344f:	ja     403b0b <strstr@plt+0x293b>
  403455:	mov    ecx,ecx
  403457:	lea    rdx,[rip+0x5cc6]        # 409124 <strstr@plt+0x7f54>
  40345e:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  403462:	add    rcx,rdx
  403465:	jmp    rcx
  403467:	lea    rdi,[rsp+0x10]
  40346c:	call   406080 <strstr@plt+0x4eb0>
  403471:	mov    eax,DWORD PTR [rsp+0x18]
  403475:	cmp    eax,0x2
  403478:	je     4035d5 <strstr@plt+0x2405>
  40347e:	test   eax,eax
  403480:	jne    403b0b <strstr@plt+0x293b>
  403486:	mov    rax,QWORD PTR [rsp+0x60]
  40348b:	mov    ebx,DWORD PTR [rax+0x4f8]
  403491:	sub    ebx,DWORD PTR [rsp+0x38]
  403495:	mov    rcx,QWORD PTR [rsp+0x20]
  40349a:	lea    rdi,[rip+0xaa94]        # 40df35 <strstr@plt+0xcd65>
  4034a1:	mov    esi,0x24
  4034a6:	mov    edx,0x1
  4034ab:	call   4011b0 <fwrite@plt>
  4034b0:	mov    rcx,QWORD PTR [rsp+0x20]
  4034b5:	lea    rdi,[rip+0xaa9e]        # 40df5a <strstr@plt+0xcd8a>
  4034bc:	mov    esi,0xd2
  4034c1:	mov    edx,0x1
  4034c6:	call   4011b0 <fwrite@plt>
  4034cb:	mov    rdi,QWORD PTR [rsp+0x20]
  4034d0:	lea    rsi,[rip+0xab56]        # 40e02d <strstr@plt+0xce5d>
  4034d7:	mov    ecx,0x50
  4034dc:	xor    eax,eax
  4034de:	mov    edx,ebx
  4034e0:	call   401120 <fprintf@plt>
  4034e5:	mov    rdi,QWORD PTR [rsp+0x20]
  4034ea:	mov    edx,DWORD PTR [rsp+0x40]
  4034ee:	sub    edx,ebx
  4034f0:	lea    rsi,[rip+0xac1f]        # 40e116 <strstr@plt+0xcf46>
  4034f7:	xor    eax,eax
  4034f9:	call   401120 <fprintf@plt>
  4034fe:	mov    rcx,QWORD PTR [rsp+0x20]
  403503:	lea    rdi,[rip+0xace1]        # 40e1eb <strstr@plt+0xd01b>
  40350a:	mov    esi,0x22
  40350f:	mov    edx,0x1
  403514:	call   4011b0 <fwrite@plt>
  403519:	mov    rcx,QWORD PTR [rsp+0x20]
  40351e:	lea    rdi,[rip+0xace9]        # 40e20e <strstr@plt+0xd03e>
  403525:	mov    esi,0x10d
  40352a:	mov    edx,0x1
  40352f:	call   4011b0 <fwrite@plt>
  403534:	mov    rdi,QWORD PTR [rsp+0x20]
  403539:	lea    rsi,[rip+0xaddc]        # 40e31c <strstr@plt+0xd14c>
  403540:	mov    ecx,0x50
  403545:	xor    eax,eax
  403547:	mov    edx,ebx
  403549:	call   401120 <fprintf@plt>
  40354e:	mov    rcx,QWORD PTR [rsp+0x20]
  403553:	lea    rdi,[rip+0xaec2]        # 40e41c <strstr@plt+0xd24c>
  40355a:	mov    esi,0xe3
  40355f:	mov    edx,0x1
  403564:	call   4011b0 <fwrite@plt>
  403569:	mov    rdi,QWORD PTR [rsp+0x20]
  40356e:	mov    edx,DWORD PTR [rsp+0x40]
  403572:	sub    edx,ebx
  403574:	lea    rsi,[rip+0xaf85]        # 40e500 <strstr@plt+0xd330>
  40357b:	xor    eax,eax
  40357d:	call   401120 <fprintf@plt>
  403582:	jmp    403b0b <strstr@plt+0x293b>
  403587:	or     r14d,0x22000000
  40358e:	mov    rax,QWORD PTR [rip+0xfa5b]        # 412ff0 <strstr@plt+0x11e20>
  403595:	mov    rdi,QWORD PTR [rax]
  403598:	lea    rsi,[rip+0x9dc4]        # 40d363 <strstr@plt+0xc193>
  40359f:	xor    eax,eax
  4035a1:	mov    edx,r14d
  4035a4:	call   401120 <fprintf@plt>
  4035a9:	mov    eax,0x1
  4035ae:	jmp    403b30 <strstr@plt+0x2960>
  4035b3:	mov    r14d,eax
  4035b6:	jmp    40358e <strstr@plt+0x23be>
  4035b8:	mov    rax,QWORD PTR [rip+0xfa11]        # 412fd0 <strstr@plt+0x11e00>
  4035bf:	mov    rax,QWORD PTR [rax]
  4035c2:	mov    QWORD PTR [rsp+0x20],rax
  4035c7:	cmp    ecx,0xa
  4035ca:	jbe    403455 <strstr@plt+0x2285>
  4035d0:	jmp    403b0b <strstr@plt+0x293b>
  4035d5:	mov    rcx,QWORD PTR [rsp+0x20]
  4035da:	lea    rdi,[rip+0xb00b]        # 40e5ec <strstr@plt+0xd41c>
  4035e1:	mov    esi,0x4c
  4035e6:	mov    edx,0x1
  4035eb:	call   4011b0 <fwrite@plt>
  4035f0:	mov    rcx,QWORD PTR [rsp+0x20]
  4035f5:	lea    rdi,[rip+0xb03d]        # 40e639 <strstr@plt+0xd469>
  4035fc:	mov    esi,0x11c
  403601:	mov    edx,0x1
  403606:	call   4011b0 <fwrite@plt>
  40360b:	mov    r15d,DWORD PTR [rsp+0x50]
  403610:	test   r15d,r15d
  403613:	jle    4036e2 <strstr@plt+0x2512>
  403619:	xor    ebp,ebp
  40361b:	xor    r14d,r14d
  40361e:	mov    DWORD PTR [rsp+0xc],0x0
  403626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403630:	mov    rbx,r14
  403633:	mov    rax,QWORD PTR [rsp+0x68]
  403638:	lea    r14,[r14+0x1]
  40363c:	mov    r12d,DWORD PTR [rax+rbp*1+0x18]
  403641:	sub    r12d,DWORD PTR [rax+rbp*1+0x8]
  403646:	je     40369e <strstr@plt+0x24ce>
  403648:	mov    r13,QWORD PTR [rax+rbp*1]
  40364c:	mov    rdi,r13
  40364f:	lea    rsi,[rip+0xb100]        # 40e756 <strstr@plt+0xd586>
  403656:	call   401100 <strcmp@plt>
  40365b:	test   eax,eax
  40365d:	je     403696 <strstr@plt+0x24c6>
  40365f:	mov    rdi,QWORD PTR [rsp+0x20]
  403664:	mov    eax,0x0
  403669:	lea    rsi,[rip+0xb0f6]        # 40e766 <strstr@plt+0xd596>
  403670:	mov    rdx,r13
  403673:	mov    ecx,ebx
  403675:	mov    r8d,ebx
  403678:	mov    r9d,ebx
  40367b:	push   rbx
  40367c:	push   0x50
  40367e:	push   r12
  403680:	push   r13
  403682:	push   rbx
  403683:	push   rbx
  403684:	push   rbx
  403685:	push   rbx
  403686:	call   401120 <fprintf@plt>
  40368b:	add    rsp,0x40
  40368f:	mov    r15d,DWORD PTR [rsp+0x50]
  403694:	jmp    40369e <strstr@plt+0x24ce>
  403696:	mov    eax,r12d
  403699:	mov    DWORD PTR [rsp+0xc],r12d
  40369e:	movsxd rax,r15d
  4036a1:	add    rbp,0x10
  4036a5:	cmp    r14,rax
  4036a8:	jl     403630 <strstr@plt+0x2460>
  4036aa:	mov    ebx,DWORD PTR [rsp+0xc]
  4036ae:	test   ebx,ebx
  4036b0:	je     4036e2 <strstr@plt+0x2512>
  4036b2:	mov    rcx,QWORD PTR [rsp+0x20]
  4036b7:	lea    rdi,[rip+0xb1b1]        # 40e86f <strstr@plt+0xd69f>
  4036be:	mov    esi,0xe8
  4036c3:	mov    edx,0x1
  4036c8:	call   4011b0 <fwrite@plt>
  4036cd:	mov    rdi,QWORD PTR [rsp+0x20]
  4036d2:	lea    rsi,[rip+0xb27f]        # 40e958 <strstr@plt+0xd788>
  4036d9:	xor    eax,eax
  4036db:	mov    edx,ebx
  4036dd:	call   401120 <fprintf@plt>
  4036e2:	mov    rcx,QWORD PTR [rsp+0x20]
  4036e7:	lea    rdi,[rip+0xb36f]        # 40ea5d <strstr@plt+0xd88d>
  4036ee:	mov    esi,0x1a
  4036f3:	mov    edx,0x1
  4036f8:	call   4011b0 <fwrite@plt>
  4036fd:	jmp    403b0b <strstr@plt+0x293b>
  403702:	lea    rdi,[rip+0xb3c9]        # 40ead2 <strstr@plt+0xd902>
  403709:	mov    esi,0x2b
  40370e:	mov    edx,0x1
  403713:	mov    rcx,rax
  403716:	call   4011b0 <fwrite@plt>
  40371b:	mov    rcx,QWORD PTR [rsp+0x20]
  403720:	lea    rdi,[rip+0xb3d7]        # 40eafe <strstr@plt+0xd92e>
  403727:	mov    esi,0xd
  40372c:	mov    edx,0x1
  403731:	call   4011b0 <fwrite@plt>
  403736:	mov    rcx,QWORD PTR [rsp+0x20]
  40373b:	lea    rdi,[rip+0xb3ca]        # 40eb0c <strstr@plt+0xd93c>
  403742:	mov    esi,0xb
  403747:	mov    edx,0x1
  40374c:	call   4011b0 <fwrite@plt>
  403751:	mov    rcx,QWORD PTR [rsp+0x20]
  403756:	lea    r15,[rip+0xe353]        # 411ab0 <strstr@plt+0x108e0>
  40375d:	lea    rbp,[rip+0xb3b4]        # 40eb18 <strstr@plt+0xd948>
  403764:	xor    ebx,ebx
  403766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403770:	mov    rdx,QWORD PTR [r15+rbx*8]
  403774:	xor    eax,eax
  403776:	mov    rdi,rcx
  403779:	mov    rsi,rbp
  40377c:	call   401120 <fprintf@plt>
  403781:	add    rbx,0x1
  403785:	mov    rcx,QWORD PTR [rsp+0x20]
  40378a:	cmp    rbx,0x5d
  40378e:	jne    403770 <strstr@plt+0x25a0>
  403790:	lea    rdi,[rip+0xb386]        # 40eb1d <strstr@plt+0xd94d>
  403797:	mov    esi,0x3
  40379c:	mov    edx,0x1
  4037a1:	call   4011b0 <fwrite@plt>
  4037a6:	mov    rcx,QWORD PTR [rsp+0x20]
  4037ab:	lea    rdi,[rip+0xb36f]        # 40eb21 <strstr@plt+0xd951>
  4037b2:	mov    esi,0xb
  4037b7:	mov    edx,0x1
  4037bc:	call   4011b0 <fwrite@plt>
  4037c1:	mov    rcx,QWORD PTR [rsp+0x20]
  4037c6:	lea    r15,[rip+0xe5d3]        # 411da0 <strstr@plt+0x10bd0>
  4037cd:	lea    rbp,[rip+0xb344]        # 40eb18 <strstr@plt+0xd948>
  4037d4:	xor    ebx,ebx
  4037d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037e0:	mov    rdx,QWORD PTR [r15+rbx*8]
  4037e4:	xor    eax,eax
  4037e6:	mov    rdi,rcx
  4037e9:	mov    rsi,rbp
  4037ec:	call   401120 <fprintf@plt>
  4037f1:	add    rbx,0x1
  4037f5:	mov    rcx,QWORD PTR [rsp+0x20]
  4037fa:	cmp    rbx,0x5e
  4037fe:	jne    4037e0 <strstr@plt+0x2610>
  403800:	lea    rdi,[rip+0xb316]        # 40eb1d <strstr@plt+0xd94d>
  403807:	mov    esi,0x3
  40380c:	mov    edx,0x1
  403811:	call   4011b0 <fwrite@plt>
  403816:	mov    rcx,QWORD PTR [rsp+0x20]
  40381b:	lea    rdi,[rip+0xb30b]        # 40eb2d <strstr@plt+0xd95d>
  403822:	mov    esi,0xe
  403827:	mov    edx,0x1
  40382c:	call   4011b0 <fwrite@plt>
  403831:	mov    rbp,QWORD PTR [rsp+0x20]
  403836:	lea    r15,[rip+0xe933]        # 412170 <strstr@plt+0x10fa0>
  40383d:	lea    r12,[rip+0xb2f8]        # 40eb3c <strstr@plt+0xd96c>
  403844:	xor    ebx,ebx
  403846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403850:	mov    rax,QWORD PTR [r15+rbx*8]
  403854:	mov    cl,BYTE PTR [rax]
  403856:	mov    rsi,r14
  403859:	test   cl,cl
  40385b:	je     40388e <strstr@plt+0x26be>
  40385d:	add    rax,0x1
  403861:	mov    rsi,r14
  403864:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40386e:	xchg   ax,ax
  403870:	mov    edx,ecx
  403872:	add    dl,0xbf
  403875:	cmp    dl,0x1a
  403878:	jae    40387d <strstr@plt+0x26ad>
  40387a:	add    cl,0x20
  40387d:	mov    BYTE PTR [rsi],cl
  40387f:	add    rsi,0x1
  403883:	movzx  ecx,BYTE PTR [rax]
  403886:	add    rax,0x1
  40388a:	test   cl,cl
  40388c:	jne    403870 <strstr@plt+0x26a0>
  40388e:	mov    BYTE PTR [rsi],0x0
  403891:	xor    eax,eax
  403893:	mov    rdi,rbp
  403896:	mov    rsi,r12
  403899:	mov    rdx,r14
  40389c:	call   401120 <fprintf@plt>
  4038a1:	add    rbx,0x1
  4038a5:	mov    rbp,QWORD PTR [rsp+0x20]
  4038aa:	cmp    rbx,0xd
  4038ae:	jne    403850 <strstr@plt+0x2680>
  4038b0:	lea    rdi,[rip+0xb28c]        # 40eb43 <strstr@plt+0xd973>
  4038b7:	mov    esi,0x3
  4038bc:	mov    edx,0x1
  4038c1:	mov    rcx,rbp
  4038c4:	call   4011b0 <fwrite@plt>
  4038c9:	mov    rcx,QWORD PTR [rsp+0x20]
  4038ce:	lea    rdi,[rip+0xb272]        # 40eb47 <strstr@plt+0xd977>
  4038d5:	mov    esi,0x10
  4038da:	mov    edx,0x1
  4038df:	call   4011b0 <fwrite@plt>
  4038e4:	lea    r12,[rsp+0xa00]
  4038ec:	lea    r14,[rip+0xe8ed]        # 4121e0 <strstr@plt+0x11010>
  4038f3:	lea    r15,[rip+0xb242]        # 40eb3c <strstr@plt+0xd96c>
  4038fa:	xor    ebp,ebp
  4038fc:	nop    DWORD PTR [rax+0x0]
  403900:	mov    rax,QWORD PTR [r14+rbp*8]
  403904:	mov    bl,BYTE PTR [rax]
  403906:	mov    rdx,r12
  403909:	test   bl,bl
  40390b:	je     40393e <strstr@plt+0x276e>
  40390d:	add    rax,0x1
  403911:	mov    rdx,r12
  403914:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40391e:	xchg   ax,ax
  403920:	mov    ecx,ebx
  403922:	add    cl,0xbf
  403925:	cmp    cl,0x1a
  403928:	jae    40392d <strstr@plt+0x275d>
  40392a:	add    bl,0x20
  40392d:	mov    BYTE PTR [rdx],bl
  40392f:	add    rdx,0x1
  403933:	movzx  ebx,BYTE PTR [rax]
  403936:	add    rax,0x1
  40393a:	test   bl,bl
  40393c:	jne    403920 <strstr@plt+0x2750>
  40393e:	mov    BYTE PTR [rdx],0x0
  403941:	mov    esi,0x5f
  403946:	mov    rdi,r12
  403949:	call   4010b0 <strchr@plt>
  40394e:	test   rax,rax
  403951:	je     403956 <strstr@plt+0x2786>
  403953:	mov    BYTE PTR [rax],0x2e
  403956:	mov    rdi,QWORD PTR [rsp+0x20]
  40395b:	xor    eax,eax
  40395d:	mov    rsi,r15
  403960:	mov    rdx,r12
  403963:	call   401120 <fprintf@plt>
  403968:	add    rbp,0x1
  40396c:	cmp    rbp,0x11
  403970:	jne    403900 <strstr@plt+0x2730>
  403972:	mov    rcx,QWORD PTR [rsp+0x20]
  403977:	lea    rdi,[rip+0xb1c5]        # 40eb43 <strstr@plt+0xd973>
  40397e:	mov    esi,0x3
  403983:	mov    edx,0x1
  403988:	call   4011b0 <fwrite@plt>
  40398d:	mov    rcx,QWORD PTR [rsp+0x20]
  403992:	lea    rdi,[rip+0xb1bf]        # 40eb58 <strstr@plt+0xd988>
  403999:	mov    esi,0xf
  40399e:	mov    edx,0x1
  4039a3:	call   4011b0 <fwrite@plt>
  4039a8:	mov    rcx,QWORD PTR [rsp+0x20]
  4039ad:	lea    r14,[rip+0xe8bc]        # 412270 <strstr@plt+0x110a0>
  4039b4:	lea    rbx,[rip+0xb1ad]        # 40eb68 <strstr@plt+0xd998>
  4039bb:	xor    ebp,ebp
  4039bd:	nop    DWORD PTR [rax]
  4039c0:	mov    rdx,QWORD PTR [r14+rbp*8]
  4039c4:	xor    eax,eax
  4039c6:	mov    rdi,rcx
  4039c9:	mov    rsi,rbx
  4039cc:	call   401120 <fprintf@plt>
  4039d1:	add    rbp,0x1
  4039d5:	mov    rcx,QWORD PTR [rsp+0x20]
  4039da:	cmp    rbp,0x48
  4039de:	jne    4039c0 <strstr@plt+0x27f0>
  4039e0:	lea    rdi,[rip+0xb15c]        # 40eb43 <strstr@plt+0xd973>
  4039e7:	mov    esi,0x3
  4039ec:	mov    edx,0x1
  4039f1:	call   4011b0 <fwrite@plt>
  4039f6:	mov    rcx,QWORD PTR [rsp+0x20]
  4039fb:	lea    rdi,[rip+0xb16d]        # 40eb6f <strstr@plt+0xd99f>
  403a02:	mov    esi,0x11
  403a07:	mov    edx,0x1
  403a0c:	call   4011b0 <fwrite@plt>
  403a11:	mov    rcx,QWORD PTR [rsp+0x20]
  403a16:	lea    r14,[rip+0xf0f3]        # 412b10 <strstr@plt+0x11940>
  403a1d:	lea    rbx,[rip+0xb144]        # 40eb68 <strstr@plt+0xd998>
  403a24:	xor    ebp,ebp
  403a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a30:	mov    rdx,QWORD PTR [rbp+r14*1+0x0]
  403a35:	xor    eax,eax
  403a37:	mov    rdi,rcx
  403a3a:	mov    rsi,rbx
  403a3d:	call   401120 <fprintf@plt>
  403a42:	mov    rcx,QWORD PTR [rsp+0x20]
  403a47:	add    rbp,0x8
  403a4b:	cmp    rbp,0x118
  403a52:	jne    403a30 <strstr@plt+0x2860>
  403a54:	lea    rdi,[rip+0xb0e8]        # 40eb43 <strstr@plt+0xd973>
  403a5b:	mov    esi,0x3
  403a60:	mov    edx,0x1
  403a65:	call   4011b0 <fwrite@plt>
  403a6a:	jmp    403b01 <strstr@plt+0x2931>
  403a6f:	lea    rdi,[rip+0xb002]        # 40ea78 <strstr@plt+0xd8a8>
  403a76:	mov    esi,0x2e
  403a7b:	mov    edx,0x1
  403a80:	mov    rcx,rax
  403a83:	call   4011b0 <fwrite@plt>
  403a88:	mov    rcx,QWORD PTR [rsp+0x20]
  403a8d:	lea    rdi,[rip+0xb013]        # 40eaa7 <strstr@plt+0xd8d7>
  403a94:	mov    esi,0x2a
  403a99:	mov    edx,0x1
  403a9e:	call   4011b0 <fwrite@plt>
  403aa3:	cmp    DWORD PTR [rsp+0x48],0x0
  403aa8:	jle    403b01 <strstr@plt+0x2931>
  403aaa:	lea    rbx,[rip+0xb9b2]        # 40f463 <strstr@plt+0xe293>
  403ab1:	lea    r14,[rip+0xb6de]        # 40f196 <strstr@plt+0xdfc6>
  403ab8:	xor    ebp,ebp
  403aba:	nop    WORD PTR [rax+rax*1+0x0]
  403ac0:	test   rbp,rbp
  403ac3:	je     403adc <strstr@plt+0x290c>
  403ac5:	mov    rcx,QWORD PTR [rsp+0x20]
  403aca:	mov    esi,0x2
  403acf:	mov    edx,0x1
  403ad4:	mov    rdi,r14
  403ad7:	call   4011b0 <fwrite@plt>
  403adc:	mov    rdi,QWORD PTR [rsp+0x20]
  403ae1:	mov    rax,QWORD PTR [rsp+0x78]
  403ae6:	mov    edx,DWORD PTR [rax+rbp*4]
  403ae9:	xor    eax,eax
  403aeb:	mov    rsi,rbx
  403aee:	call   401120 <fprintf@plt>
  403af3:	add    rbp,0x1
  403af7:	movsxd rax,DWORD PTR [rsp+0x48]
  403afc:	cmp    rbp,rax
  403aff:	jl     403ac0 <strstr@plt+0x28f0>
  403b01:	lea    rdi,[rsp+0x10]
  403b06:	call   407120 <strstr@plt+0x5f50>
  403b0b:	mov    rdi,QWORD PTR [rsp+0x20]
  403b10:	call   401160 <fflush@plt>
  403b15:	mov    rbx,QWORD PTR [rsp+0x20]
  403b1a:	mov    rdi,rbx
  403b1d:	call   401070 <ferror@plt>
  403b22:	test   eax,eax
  403b24:	jne    403b79 <strstr@plt+0x29a9>
  403b26:	mov    rdi,rbx
  403b29:	call   401090 <fclose@plt>
  403b2e:	xor    eax,eax
  403b30:	add    rsp,0xb08
  403b37:	pop    rbx
  403b38:	pop    r12
  403b3a:	pop    r13
  403b3c:	pop    r14
  403b3e:	pop    r15
  403b40:	pop    rbp
  403b41:	ret    
  403b42:	lea    rdi,[rsp+0x10]
  403b47:	call   408250 <strstr@plt+0x7080>
  403b4c:	jmp    403b0b <strstr@plt+0x293b>
  403b4e:	lea    rdi,[rsp+0x10]
  403b53:	call   406690 <strstr@plt+0x54c0>
  403b58:	jmp    403b0b <strstr@plt+0x293b>
  403b5a:	mov    rdi,QWORD PTR [rsp+0x38]
  403b5f:	mov    rbx,QWORD PTR [rsp+0x40]
  403b64:	mov    esi,0x1
  403b69:	mov    rdx,rbx
  403b6c:	mov    rcx,rax
  403b6f:	call   4011b0 <fwrite@plt>
  403b74:	cmp    rax,rbx
  403b77:	je     403b0b <strstr@plt+0x293b>
  403b79:	mov    rax,QWORD PTR [rip+0xf470]        # 412ff0 <strstr@plt+0x11e20>
  403b80:	mov    rbx,QWORD PTR [rax]
  403b83:	call   401040 <__errno_location@plt>
  403b88:	mov    edi,DWORD PTR [rax]
  403b8a:	call   4011c0 <strerror@plt>
  403b8f:	mov    rcx,rax
  403b92:	lea    rsi,[rip+0x8fff]        # 40cb98 <strstr@plt+0xb9c8>
  403b99:	xor    eax,eax
  403b9b:	mov    rdi,rbx
  403b9e:	mov    rdx,rcx
  403ba1:	call   401120 <fprintf@plt>
  403ba6:	mov    edi,0x1
  403bab:	call   4011a0 <exit@plt>
  403bb0:	mov    DWORD PTR [rcx+0x24],0x0
  403bb7:	jmp    402ef9 <strstr@plt+0x1d29>
  403bbc:	mov    rax,QWORD PTR [rip+0xf42d]        # 412ff0 <strstr@plt+0x11e20>
  403bc3:	mov    rdi,QWORD PTR [rax]
  403bc6:	lea    rsi,[rip+0x9b59]        # 40d726 <strstr@plt+0xc556>
  403bcd:	xor    eax,eax
  403bcf:	mov    rdx,r14
  403bd2:	call   401120 <fprintf@plt>
  403bd7:	mov    edi,0x2
  403bdc:	call   4011a0 <exit@plt>
  403be1:	mov    edi,0x1
  403be6:	call   4011a0 <exit@plt>
  403beb:	add    rbx,0x8
  403bef:	mov    QWORD PTR [rsp+0x30],rbx
  403bf4:	call   403c40 <strstr@plt+0x2a70>
  403bf9:	mov    rax,QWORD PTR [rip+0xf3f0]        # 412ff0 <strstr@plt+0x11e20>
  403c00:	mov    rbx,QWORD PTR [rax]
  403c03:	mov    rbp,QWORD PTR [rsp+0x28]
  403c08:	call   401040 <__errno_location@plt>
  403c0d:	mov    edi,DWORD PTR [rax]
  403c0f:	call   4011c0 <strerror@plt>
  403c14:	mov    rcx,rax
  403c17:	lea    rsi,[rip+0x9760]        # 40d37e <strstr@plt+0xc1ae>
  403c1e:	xor    eax,eax
  403c20:	mov    rdi,rbx
  403c23:	mov    rdx,rbp
  403c26:	call   401120 <fprintf@plt>
  403c2b:	mov    edi,0x1
  403c30:	call   4011a0 <exit@plt>
  403c35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c3f:	nop
  403c40:	push   r14
  403c42:	push   rbx
  403c43:	push   rax
  403c44:	mov    r14,QWORD PTR [rip+0xf3a5]        # 412ff0 <strstr@plt+0x11e20>
  403c4b:	mov    rcx,QWORD PTR [r14]
  403c4e:	lea    rdi,[rip+0x99f2]        # 40d647 <strstr@plt+0xc477>
  403c55:	mov    esi,0x19
  403c5a:	mov    edx,0x1
  403c5f:	call   4011b0 <fwrite@plt>
  403c64:	mov    rcx,QWORD PTR [r14]
  403c67:	lea    rdi,[rip+0x99f3]        # 40d661 <strstr@plt+0xc491>
  403c6e:	mov    esi,0x36
  403c73:	mov    edx,0x1
  403c78:	call   4011b0 <fwrite@plt>
  403c7d:	mov    rcx,QWORD PTR [r14]
  403c80:	lea    rdi,[rip+0x9a11]        # 40d698 <strstr@plt+0xc4c8>
  403c87:	mov    esi,0x1a
  403c8c:	mov    edx,0x1
  403c91:	call   4011b0 <fwrite@plt>
  403c96:	mov    rcx,QWORD PTR [r14]
  403c99:	lea    rdi,[rip+0x9a13]        # 40d6b3 <strstr@plt+0xc4e3>
  403ca0:	mov    esi,0x32
  403ca5:	mov    edx,0x1
  403caa:	call   4011b0 <fwrite@plt>
  403caf:	mov    rcx,QWORD PTR [r14]
  403cb2:	lea    rdi,[rip+0x9a2d]        # 40d6e6 <strstr@plt+0xc516>
  403cb9:	mov    esi,0x11
  403cbe:	mov    edx,0x1
  403cc3:	call   4011b0 <fwrite@plt>
  403cc8:	mov    rdi,QWORD PTR [r14]
  403ccb:	lea    rbx,[rip+0x9a26]        # 40d6f8 <strstr@plt+0xc528>
  403cd2:	lea    rdx,[rip+0x9929]        # 40d602 <strstr@plt+0xc432>
  403cd9:	xor    eax,eax
  403cdb:	mov    rsi,rbx
  403cde:	call   401120 <fprintf@plt>
  403ce3:	mov    rdi,QWORD PTR [r14]
  403ce6:	lea    rdx,[rip+0x991c]        # 40d609 <strstr@plt+0xc439>
  403ced:	xor    eax,eax
  403cef:	mov    rsi,rbx
  403cf2:	call   401120 <fprintf@plt>
  403cf7:	mov    rdi,QWORD PTR [r14]
  403cfa:	lea    rdx,[rip+0x9910]        # 40d611 <strstr@plt+0xc441>
  403d01:	xor    eax,eax
  403d03:	mov    rsi,rbx
  403d06:	call   401120 <fprintf@plt>
  403d0b:	mov    rdi,QWORD PTR [r14]
  403d0e:	lea    rdx,[rip+0x9904]        # 40d619 <strstr@plt+0xc449>
  403d15:	xor    eax,eax
  403d17:	mov    rsi,rbx
  403d1a:	call   401120 <fprintf@plt>
  403d1f:	mov    rdi,QWORD PTR [r14]
  403d22:	lea    rdx,[rip+0xa15a]        # 40de83 <strstr@plt+0xccb3>
  403d29:	xor    eax,eax
  403d2b:	mov    rsi,rbx
  403d2e:	call   401120 <fprintf@plt>
  403d33:	mov    rdi,QWORD PTR [r14]
  403d36:	lea    rdx,[rip+0x98e2]        # 40d61f <strstr@plt+0xc44f>
  403d3d:	xor    eax,eax
  403d3f:	mov    rsi,rbx
  403d42:	call   401120 <fprintf@plt>
  403d47:	mov    rdi,QWORD PTR [r14]
  403d4a:	lea    rdx,[rip+0x98d4]        # 40d625 <strstr@plt+0xc455>
  403d51:	xor    eax,eax
  403d53:	mov    rsi,rbx
  403d56:	call   401120 <fprintf@plt>
  403d5b:	mov    rdi,QWORD PTR [r14]
  403d5e:	lea    rdx,[rip+0x98c6]        # 40d62b <strstr@plt+0xc45b>
  403d65:	xor    eax,eax
  403d67:	mov    rsi,rbx
  403d6a:	call   401120 <fprintf@plt>
  403d6f:	mov    rdi,QWORD PTR [r14]
  403d72:	lea    rdx,[rip+0x98b9]        # 40d632 <strstr@plt+0xc462>
  403d79:	xor    eax,eax
  403d7b:	mov    rsi,rbx
  403d7e:	call   401120 <fprintf@plt>
  403d83:	mov    rdi,QWORD PTR [r14]
  403d86:	lea    rdx,[rip+0x98ac]        # 40d639 <strstr@plt+0xc469>
  403d8d:	xor    eax,eax
  403d8f:	mov    rsi,rbx
  403d92:	call   401120 <fprintf@plt>
  403d97:	mov    rdi,QWORD PTR [r14]
  403d9a:	lea    rdx,[rip+0x989e]        # 40d63f <strstr@plt+0xc46f>
  403da1:	xor    eax,eax
  403da3:	mov    rsi,rbx
  403da6:	call   401120 <fprintf@plt>
  403dab:	mov    edi,0x1
  403db0:	call   4011a0 <exit@plt>
  403db5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403dbf:	nop
  403dc0:	push   rbp
  403dc1:	push   r15
  403dc3:	push   r14
  403dc5:	push   r12
  403dc7:	push   rbx
  403dc8:	mov    r14,rdi
  403dcb:	mov    r12,QWORD PTR [rdi]
  403dce:	mov    r15,QWORD PTR [r12+0x28]
  403dd3:	cmp    r15,0x174
  403dda:	jae    403e25 <strstr@plt+0x2c55>
  403ddc:	cmp    r15,0x10
  403de0:	mov    eax,0x10
  403de5:	cmova  rax,r15
  403de9:	nop    DWORD PTR [rax+0x0]
  403df0:	mov    rbx,rax
  403df3:	lea    rax,[rax+rax*1]
  403df7:	cmp    rbx,0x174
  403dfe:	jb     403df0 <strstr@plt+0x2c20>
  403e00:	mov    rdi,QWORD PTR [r12+0x20]
  403e05:	mov    rsi,rbx
  403e08:	call   401170 <realloc@plt>
  403e0d:	mov    QWORD PTR [r12+0x20],rax
  403e12:	test   rax,rax
  403e15:	je     40606e <strstr@plt+0x4e9e>
  403e1b:	mov    rdi,rax
  403e1e:	mov    QWORD PTR [r12+0x28],rbx
  403e23:	jmp    403e2d <strstr@plt+0x2c5d>
  403e25:	mov    rdi,QWORD PTR [r12+0x20]
  403e2a:	mov    rbx,r15
  403e2d:	add    rdi,r15
  403e30:	sub    rbx,r15
  403e33:	xor    esi,esi
  403e35:	mov    rdx,rbx
  403e38:	call   4010c0 <memset@plt>
  403e3d:	xor    esi,esi
  403e3f:	xor    eax,eax
  403e41:	mov    rdi,r14
  403e44:	call   401690 <strstr@plt+0x4c0>
  403e49:	sub    rsp,0x8
  403e4d:	mov    esi,0x2
  403e52:	mov    edx,0x4
  403e57:	mov    ecx,0xfffffffd
  403e5c:	mov    r8d,0x3
  403e62:	mov    r9d,0x1
  403e68:	mov    eax,0x0
  403e6d:	mov    rdi,r14
  403e70:	push   0xfffffffffffffffe
  403e72:	push   0xfffffffffffff530
  403e77:	push   0x3
  403e79:	call   401690 <strstr@plt+0x4c0>
  403e7e:	add    rsp,0x18
  403e82:	mov    esi,0x5c
  403e87:	mov    edx,0x10
  403e8c:	mov    ecx,0x18
  403e91:	mov    r8d,0x30
  403e97:	mov    r9d,0x20
  403e9d:	xor    eax,eax
  403e9f:	mov    rdi,r14
  403ea2:	push   0xffffffffffffffff
  403ea4:	call   401690 <strstr@plt+0x4c0>
  403ea9:	add    rsp,0x10
  403ead:	mov    esi,0xc0
  403eb2:	mov    edx,0x18
  403eb7:	mov    ecx,0x18
  403ebc:	mov    r8d,0x1
  403ec2:	mov    r9d,0x8
  403ec8:	mov    eax,0x0
  403ecd:	mov    rdi,r14
  403ed0:	push   0xfffffffffffffffe
  403ed2:	push   0xe8
  403ed7:	call   401690 <strstr@plt+0x4c0>
  403edc:	add    rsp,0x8
  403ee0:	mov    esi,0x113
  403ee5:	mov    rdx,0xfffffffffffffffc
  403eec:	mov    ecx,0x2
  403ef1:	mov    r8d,0x10
  403ef7:	mov    r9d,0x8
  403efd:	mov    eax,0x0
  403f02:	mov    rdi,r14
  403f05:	push   0x14
  403f07:	push   0xffffffffffffffff
  403f09:	push   0xfffffffffffff530
  403f0e:	push   0xfffffffffffffffe
  403f10:	push   0xbb8
  403f15:	call   401690 <strstr@plt+0x4c0>
  403f1a:	add    rsp,0x30
  403f1e:	mov    esi,0x173
  403f23:	mov    edx,0xffffffc3
  403f28:	mov    ecx,0x10
  403f2d:	mov    r8d,0x18
  403f33:	mov    r9d,0x10
  403f39:	mov    eax,0x0
  403f3e:	mov    rdi,r14
  403f41:	push   0x7
  403f43:	push   0x30
  403f45:	push   0xbb8
  403f4a:	push   0x8
  403f4c:	push   0x1
  403f4e:	push   0x5
  403f50:	push   0x10
  403f52:	push   0x18
  403f54:	call   401690 <strstr@plt+0x4c0>
  403f59:	add    rsp,0x40
  403f5d:	mov    esi,0x20c
  403f62:	mov    edx,0xfffff530
  403f67:	mov    ecx,0xffffffff
  403f6c:	mov    r8d,0x7
  403f72:	mov    r9d,0x10
  403f78:	mov    eax,0x0
  403f7d:	mov    rdi,r14
  403f80:	push   0x30
  403f82:	push   0x30
  403f84:	push   0x1
  403f86:	push   0x5
  403f88:	push   0x3
  403f8a:	push   0x18
  403f8c:	call   401690 <strstr@plt+0x4c0>
  403f91:	add    rsp,0x30
  403f95:	mov    esi,0x282
  403f9a:	mov    edx,0x8
  403f9f:	mov    ecx,0xbb8
  403fa4:	mov    r8d,0xfffff530
  403faa:	mov    r9d,0xffffffff
  403fb0:	mov    eax,0x0
  403fb5:	mov    rdi,r14
  403fb8:	push   0x30
  403fba:	push   0x30
  403fbc:	push   0x18
  403fbe:	push   0x24
  403fc0:	push   0x10
  403fc2:	push   0xfffffffffffffff7
  403fc4:	push   0x18
  403fc6:	push   0x10
  403fc8:	call   401690 <strstr@plt+0x4c0>
  403fcd:	add    rsp,0x40
  403fd1:	mov    esi,0x314
  403fd6:	mov    edx,0x5
  403fdb:	mov    ecx,0xffffffff
  403fe0:	mov    r8d,0x0
  403fe6:	mov    r9d,0x10
  403fec:	mov    eax,0x0
  403ff1:	mov    rdi,r14
  403ff4:	push   0x10
  403ff6:	push   0xffffffffffffffd0
  403ff8:	call   401690 <strstr@plt+0x4c0>
  403ffd:	add    rsp,0x10
  404001:	mov    esi,0x391
  404006:	mov    edx,0xfffffffb
  40400b:	mov    ecx,0x34
  404010:	mov    r8d,0xfffff4e8
  404016:	mov    r9d,0xfffffff4
  40401c:	mov    eax,0x0
  404021:	mov    rdi,r14
  404024:	push   0x10
  404026:	push   0x10
  404028:	call   401690 <strstr@plt+0x4c0>
  40402d:	add    rsp,0x8
  404031:	mov    esi,0x41d
  404036:	mov    edx,0x18
  40403b:	mov    ecx,0x2
  404040:	mov    r8d,0x3
  404046:	mov    r9d,0xfffffffb
  40404c:	mov    eax,0x0
  404051:	mov    rdi,r14
  404054:	push   0xfffffffffffffff4
  404056:	push   0xfffffffffffff4e8
  40405b:	push   0x35
  40405d:	call   401690 <strstr@plt+0x4c0>
  404062:	add    rsp,0x18
  404066:	mov    esi,0x4a3
  40406b:	mov    edx,0x10
  404070:	mov    ecx,0x10
  404075:	mov    r8d,0x18
  40407b:	mov    r9d,0x2
  404081:	mov    eax,0x0
  404086:	mov    rdi,r14
  404089:	push   0x10
  40408b:	push   0x10
  40408d:	push   0x4
  40408f:	call   401690 <strstr@plt+0x4c0>
  404094:	add    rsp,0x18
  404098:	mov    esi,0x54e
  40409d:	mov    edx,0xfffe0000
  4040a2:	mov    ecx,0xfffffffe
  4040a7:	mov    r8d,0xfffffffe
  4040ad:	mov    r9d,0x10
  4040b3:	xor    eax,eax
  4040b5:	mov    rdi,r14
  4040b8:	push   0x10
  4040ba:	call   401690 <strstr@plt+0x4c0>
  4040bf:	add    rsp,0x10
  4040c3:	mov    esi,0x5d3
  4040c8:	mov    edx,0x10
  4040cd:	mov    ecx,0x10
  4040d2:	mov    r8d,0x2
  4040d8:	mov    r9d,0x3
  4040de:	xor    eax,eax
  4040e0:	mov    rdi,r14
  4040e3:	call   401690 <strstr@plt+0x4c0>
  4040e8:	mov    esi,0x641
  4040ed:	mov    edx,0x10
  4040f2:	mov    ecx,0x10
  4040f7:	xor    eax,eax
  4040f9:	mov    rdi,r14
  4040fc:	call   401690 <strstr@plt+0x4c0>
  404101:	mov    esi,0x673
  404106:	xor    eax,eax
  404108:	mov    rdi,r14
  40410b:	call   401690 <strstr@plt+0x4c0>
  404110:	mov    esi,0x678
  404115:	mov    edx,0x10
  40411a:	mov    ecx,0x10
  40411f:	mov    r8d,0x10
  404125:	mov    r9d,0x10
  40412b:	mov    eax,0x0
  404130:	mov    rdi,r14
  404133:	push   0xfffffffffffffffe
  404135:	push   0x2
  404137:	push   0x4d8
  40413c:	push   0x10
  40413e:	call   401690 <strstr@plt+0x4c0>
  404143:	add    rsp,0x18
  404147:	mov    esi,0x732
  40414c:	mov    edx,0x2
  404151:	mov    ecx,0xd
  404156:	mov    r8d,0x20
  40415c:	mov    r9d,0xfffffffb
  404162:	xor    eax,eax
  404164:	mov    rdi,r14
  404167:	push   0x3
  404169:	call   401690 <strstr@plt+0x4c0>
  40416e:	add    rsp,0x8
  404172:	mov    esi,0x79a
  404177:	mov    edx,0x2
  40417c:	mov    ecx,0xfffffff4
  404181:	mov    r8d,0x10
  404187:	mov    r9d,0xffffffff
  40418d:	mov    eax,0x0
  404192:	mov    rdi,r14
  404195:	push   0x18
  404197:	push   0x8
  404199:	push   0x1c
  40419b:	push   0xfffffffffffffff4
  40419d:	push   0xfffffffffffff58c
  4041a2:	call   401690 <strstr@plt+0x4c0>
  4041a7:	add    rsp,0x30
  4041ab:	mov    esi,0x7e3
  4041b0:	mov    edx,0x14
  4041b5:	mov    ecx,0xc
  4041ba:	mov    r8d,0xfffffffb
  4041c0:	mov    r9d,0x8
  4041c6:	mov    eax,0x0
  4041cb:	mov    rdi,r14
  4041ce:	push   0xffffffffffffffff
  4041d0:	push   0x10
  4041d2:	call   401690 <strstr@plt+0x4c0>
  4041d7:	add    rsp,0x8
  4041db:	mov    esi,0x824
  4041e0:	mov    edx,0xfffffff3
  4041e5:	mov    ecx,0xfffffff2
  4041ea:	mov    r8d,0xfffeffff
  4041f0:	mov    r9d,0xfffffffc
  4041f6:	mov    eax,0x0
  4041fb:	mov    rdi,r14
  4041fe:	push   0x3
  404200:	push   0xfffffffffffff5a0
  404205:	push   0xfffffffffffffff2
  404207:	call   401690 <strstr@plt+0x4c0>
  40420c:	add    rsp,0x20
  404210:	mov    esi,0x85c
  404215:	mov    edx,0xfffffff4
  40421a:	mov    ecx,0x10
  40421f:	mov    r8d,0xfffffff4
  404225:	mov    r9d,0x10
  40422b:	mov    eax,0x0
  404230:	mov    rdi,r14
  404233:	push   0xfffffffffffff484
  404238:	push   0xfb
  40423d:	push   0x4
  40423f:	push   0x4
  404241:	push   0x4
  404243:	push   0xfffffffffffffff4
  404245:	call   401690 <strstr@plt+0x4c0>
  40424a:	add    rsp,0x30
  40424e:	mov    esi,0x8a1
  404253:	mov    edx,0xfffff484
  404258:	mov    ecx,0xc
  40425d:	mov    r8d,0x3
  404263:	mov    r9d,0xfffffff4
  404269:	mov    eax,0x0
  40426e:	mov    rdi,r14
  404271:	push   0xfffffffffffeffff
  404276:	push   0x2
  404278:	call   401690 <strstr@plt+0x4c0>
  40427d:	add    rsp,0x8
  404281:	mov    esi,0x8f7
  404286:	mov    edx,0x2
  40428b:	mov    ecx,0xfffffffb
  404290:	mov    r8d,0xfffffffb
  404296:	mov    r9d,0xfffeffff
  40429c:	xor    eax,eax
  40429e:	mov    rdi,r14
  4042a1:	push   0xfffffffffffff5d4
  4042a6:	call   401690 <strstr@plt+0x4c0>
  4042ab:	add    rsp,0x10
  4042af:	mov    esi,0x93d
  4042b4:	mov    edx,0xfffff468
  4042b9:	mov    ecx,0xfffff46c
  4042be:	mov    r8d,0x10
  4042c4:	mov    r9d,0x10
  4042ca:	mov    eax,0x0
  4042cf:	mov    rdi,r14
  4042d2:	push   0xfffffffffffffff4
  4042d4:	push   0x2
  4042d6:	call   401690 <strstr@plt+0x4c0>
  4042db:	add    rsp,0x8
  4042df:	mov    esi,0x983
  4042e4:	mov    edx,0x10
  4042e9:	mov    ecx,0x18
  4042ee:	mov    r8d,0x10
  4042f4:	mov    r9d,0x3
  4042fa:	mov    eax,0x0
  4042ff:	mov    rdi,r14
  404302:	push   0x2
  404304:	push   0xffffffffffffffff
  404306:	push   0xffffffffffffffff
  404308:	call   401690 <strstr@plt+0x4c0>
  40430d:	add    rsp,0x20
  404311:	mov    esi,0x9e2
  404316:	mov    edx,0xfffffff4
  40431b:	xor    eax,eax
  40431d:	mov    rdi,r14
  404320:	call   401690 <strstr@plt+0x4c0>
  404325:	mov    esi,0x9f7
  40432a:	mov    edx,0x20
  40432f:	mov    ecx,0xfffffff7
  404334:	mov    r8d,0xffffffff
  40433a:	mov    r9d,0x4
  404340:	mov    eax,0x0
  404345:	mov    rdi,r14
  404348:	push   0x18
  40434a:	push   0x3ff00000
  40434f:	push   0x0
  404351:	push   0xfffffffffffeffff
  404356:	push   0xfffffffffffffff4
  404358:	push   0x3
  40435a:	call   401690 <strstr@plt+0x4c0>
  40435f:	add    rsp,0x28
  404363:	mov    esi,0xa5f
  404368:	mov    edx,0x8
  40436d:	mov    ecx,0xffffffff
  404372:	mov    r8d,0x1c
  404378:	mov    r9d,0x1
  40437e:	xor    eax,eax
  404380:	mov    rdi,r14
  404383:	push   0x2
  404385:	call   401690 <strstr@plt+0x4c0>
  40438a:	add    rsp,0x10
  40438e:	mov    esi,0x9e2
  404393:	mov    edx,0xfffffff4
  404398:	xor    eax,eax
  40439a:	mov    rdi,r14
  40439d:	call   401690 <strstr@plt+0x4c0>
  4043a2:	sub    rsp,0x8
  4043a6:	mov    esi,0xaab
  4043ab:	mov    edx,0x20
  4043b0:	mov    ecx,0xfffffff7
  4043b5:	mov    r8d,0x4
  4043bb:	mov    r9d,0x2
  4043c1:	mov    eax,0x0
  4043c6:	mov    rdi,r14
  4043c9:	push   0xfffffffffffffff7
  4043cb:	push   0x3
  4043cd:	push   0x4
  4043cf:	push   0xfffffffffffff4d9
  4043d4:	push   0xe
  4043d6:	call   401690 <strstr@plt+0x4c0>
  4043db:	add    rsp,0x28
  4043df:	mov    esi,0xb05
  4043e4:	mov    edx,0xfffffff7
  4043e9:	mov    ecx,0x16
  4043ee:	mov    r8d,0x2
  4043f4:	mov    r9d,0xfffffff9
  4043fa:	mov    eax,0x0
  4043ff:	mov    rdi,r14
  404402:	push   0x1
  404404:	push   0x7
  404406:	push   0x30
  404408:	call   401690 <strstr@plt+0x4c0>
  40440d:	add    rsp,0x20
  404411:	mov    esi,0xb5b
  404416:	mov    edx,0x18
  40441b:	mov    ecx,0x10
  404420:	mov    r8d,0x20
  404426:	mov    r9d,0x18
  40442c:	mov    eax,0x0
  404431:	mov    rdi,r14
  404434:	push   0x18
  404436:	push   0x10
  404438:	call   401690 <strstr@plt+0x4c0>
  40443d:	add    rsp,0x8
  404441:	mov    esi,0xbb4
  404446:	mov    edx,0xfffff530
  40444b:	mov    ecx,0xffffffff
  404450:	mov    r8d,0x10
  404456:	mov    r9d,0x1
  40445c:	mov    eax,0x0
  404461:	mov    rdi,r14
  404464:	push   0xfffffffffffffffd
  404466:	push   0x20
  404468:	push   0x18
  40446a:	push   0x18
  40446c:	push   0x10
  40446e:	call   401690 <strstr@plt+0x4c0>
  404473:	add    rsp,0x28
  404477:	mov    esi,0xc15
  40447c:	mov    edx,0x3
  404481:	mov    ecx,0xfffffffe
  404486:	mov    r8d,0x18
  40448c:	mov    r9d,0x18
  404492:	mov    eax,0x0
  404497:	mov    rdi,r14
  40449a:	push   0x30
  40449c:	push   0x20
  40449e:	push   0x10
  4044a0:	push   0x18
  4044a2:	push   0x3
  4044a4:	call   401690 <strstr@plt+0x4c0>
  4044a9:	add    rsp,0x30
  4044ad:	mov    esi,0xc87
  4044b2:	mov    edx,0x7
  4044b7:	mov    ecx,0x1
  4044bc:	mov    r8d,0x18
  4044c2:	mov    r9d,0x10
  4044c8:	mov    eax,0x0
  4044cd:	mov    rdi,r14
  4044d0:	push   0x18
  4044d2:	push   0x10
  4044d4:	push   0x18
  4044d6:	push   0x20
  4044d8:	call   401690 <strstr@plt+0x4c0>
  4044dd:	add    rsp,0x20
  4044e1:	mov    esi,0xccd
  4044e6:	mov    edx,0xfffff530
  4044eb:	mov    ecx,0xffffffff
  4044f0:	mov    r8d,0x10
  4044f6:	mov    r9d,0x1
  4044fc:	mov    eax,0x0
  404501:	mov    rdi,r14
  404504:	push   0x20
  404506:	push   0x18
  404508:	push   0x18
  40450a:	push   0x10
  40450c:	call   401690 <strstr@plt+0x4c0>
  404511:	add    rsp,0x18
  404515:	mov    esi,0xd26
  40451a:	mov    edx,0x3
  40451f:	mov    ecx,0x18
  404524:	mov    r8d,0x10
  40452a:	mov    r9d,0x30
  404530:	xor    eax,eax
  404532:	mov    rdi,r14
  404535:	push   0x1
  404537:	call   401690 <strstr@plt+0x4c0>
  40453c:	add    rsp,0x8
  404540:	mov    esi,0xd94
  404545:	mov    edx,0x10
  40454a:	mov    ecx,0x18
  40454f:	mov    r8d,0x30
  404555:	mov    r9d,0x1
  40455b:	mov    eax,0x0
  404560:	mov    rdi,r14
  404563:	push   0x7fffffff
  404568:	push   0xffffffffffffffff
  40456a:	push   0xfffffffffffeffff
  40456f:	push   0x2
  404571:	push   0x7
  404573:	call   401690 <strstr@plt+0x4c0>
  404578:	add    rsp,0x30
  40457c:	mov    esi,0xddb
  404581:	mov    edx,0x2
  404586:	mov    ecx,0x3
  40458b:	mov    r8d,0xffffffff
  404591:	mov    r9d,0xfffeffff
  404597:	xor    eax,eax
  404599:	mov    rdi,r14
  40459c:	call   401690 <strstr@plt+0x4c0>
  4045a1:	mov    esi,0xe56
  4045a6:	mov    edx,0xfffeffff
  4045ab:	mov    ecx,0x2
  4045b0:	mov    r8d,0xfffeffff
  4045b6:	xor    eax,eax
  4045b8:	mov    rdi,r14
  4045bb:	call   401690 <strstr@plt+0x4c0>
  4045c0:	mov    esi,0xe91
  4045c5:	mov    edx,0x2
  4045ca:	mov    ecx,0xfffeffff
  4045cf:	mov    r8d,0x2
  4045d5:	mov    r9d,0xfffeffff
  4045db:	xor    eax,eax
  4045dd:	mov    rdi,r14
  4045e0:	call   401690 <strstr@plt+0x4c0>
  4045e5:	mov    esi,0xedb
  4045ea:	mov    edx,0x2
  4045ef:	mov    ecx,0xfffeffff
  4045f4:	mov    r8d,0x2
  4045fa:	mov    r9d,0xfffeffff
  404600:	xor    eax,eax
  404602:	mov    rdi,r14
  404605:	call   401690 <strstr@plt+0x4c0>
  40460a:	sub    rsp,0x8
  40460e:	mov    esi,0xf14
  404613:	mov    edx,0x2
  404618:	mov    ecx,0xfffeffff
  40461d:	mov    r8d,0x2
  404623:	mov    r9d,0xfffeffff
  404629:	xor    eax,eax
  40462b:	mov    rdi,r14
  40462e:	push   0x2
  404630:	call   401690 <strstr@plt+0x4c0>
  404635:	add    rsp,0x8
  404639:	mov    esi,0xf57
  40463e:	mov    edx,0xfffeffff
  404643:	mov    ecx,0x2
  404648:	mov    r8d,0xfffeffff
  40464e:	mov    r9d,0x2
  404654:	xor    eax,eax
  404656:	mov    rdi,r14
  404659:	push   0xfffffffffffeffff
  40465e:	call   401690 <strstr@plt+0x4c0>
  404663:	add    rsp,0x10
  404667:	mov    esi,0xfb1
  40466c:	mov    edx,0x2
  404671:	mov    ecx,0xfffeffff
  404676:	mov    r8d,0x2
  40467c:	mov    r9d,0xfffeffff
  404682:	xor    eax,eax
  404684:	mov    rdi,r14
  404687:	call   401690 <strstr@plt+0x4c0>
  40468c:	sub    rsp,0x8
  404690:	mov    esi,0x1009
  404695:	mov    edx,0x2
  40469a:	mov    ecx,0xfffeffff
  40469f:	mov    r8d,0x2
  4046a5:	mov    r9d,0xfffeffff
  4046ab:	xor    eax,eax
  4046ad:	mov    rdi,r14
  4046b0:	push   0x20
  4046b2:	call   401690 <strstr@plt+0x4c0>
  4046b7:	add    rsp,0x10
  4046bb:	mov    esi,0x1057
  4046c0:	mov    edx,0x3
  4046c5:	mov    ecx,0xfffeffff
  4046ca:	mov    r8d,0xfffeffff
  4046d0:	mov    r9d,0x3
  4046d6:	mov    eax,0x0
  4046db:	mov    rdi,r14
  4046de:	push   0xfffffffffffeffff
  4046e3:	push   0xfffffffffffeffff
  4046e8:	call   401690 <strstr@plt+0x4c0>
  4046ed:	add    rsp,0x10
  4046f1:	mov    esi,0x109a
  4046f6:	mov    edx,0x2
  4046fb:	mov    ecx,0xfffeffff
  404700:	mov    r8d,0x3
  404706:	xor    eax,eax
  404708:	mov    rdi,r14
  40470b:	call   401690 <strstr@plt+0x4c0>
  404710:	mov    esi,0x1123
  404715:	mov    edx,0x0
  40471a:	mov    ecx,0x43500000
  40471f:	mov    r8d,0x2
  404725:	mov    r9d,0xfffeffff
  40472b:	xor    eax,eax
  40472d:	mov    rdi,r14
  404730:	call   401690 <strstr@plt+0x4c0>
  404735:	mov    esi,0x11ab
  40473a:	mov    edx,0x3
  40473f:	mov    ecx,0x3
  404744:	mov    r8d,0xfffeffff
  40474a:	mov    r9d,0xfffeffff
  404750:	xor    eax,eax
  404752:	mov    rdi,r14
  404755:	call   401690 <strstr@plt+0x4c0>
  40475a:	mov    esi,0x11ee
  40475f:	mov    edx,0x3
  404764:	mov    ecx,0xfffeffff
  404769:	mov    r8d,0xfffeffff
  40476f:	mov    r9d,0xfffeffff
  404775:	xor    eax,eax
  404777:	mov    rdi,r14
  40477a:	call   401690 <strstr@plt+0x4c0>
  40477f:	mov    esi,0x123c
  404784:	mov    edx,0xfffeffff
  404789:	mov    ecx,0xfffeffff
  40478e:	mov    r8d,0xfffeffff
  404794:	xor    eax,eax
  404796:	mov    rdi,r14
  404799:	call   401690 <strstr@plt+0x4c0>
  40479e:	mov    esi,0x1295
  4047a3:	mov    edx,0x2
  4047a8:	mov    ecx,0xfffffffb
  4047ad:	mov    r8d,0xc
  4047b3:	mov    r9d,0x2
  4047b9:	xor    eax,eax
  4047bb:	mov    rdi,r14
  4047be:	call   401690 <strstr@plt+0x4c0>
  4047c3:	mov    esi,0x12db
  4047c8:	mov    edx,0xfffffffb
  4047cd:	mov    ecx,0xc
  4047d2:	mov    r8d,0x10
  4047d8:	mov    r9d,0xfffff468
  4047de:	mov    eax,0x0
  4047e3:	mov    rdi,r14
  4047e6:	push   0x2
  4047e8:	push   0xfffffffffffff46c
  4047ed:	call   401690 <strstr@plt+0x4c0>
  4047f2:	add    rsp,0x8
  4047f6:	mov    esi,0x131b
  4047fb:	mov    edx,0xfffeffff
  404800:	mov    ecx,0x10
  404805:	mov    r8d,0x10
  40480b:	mov    r9d,0xfffffffb
  404811:	mov    eax,0x0
  404816:	mov    rdi,r14
  404819:	push   0x3
  40481b:	push   0xfffffffffffff46c
  404820:	push   0xfffffffffffff468
  404825:	call   401690 <strstr@plt+0x4c0>
  40482a:	add    rsp,0x20
  40482e:	mov    esi,0x1399
  404833:	mov    edx,0xfffeffff
  404838:	mov    ecx,0xfffffffb
  40483d:	mov    r8d,0xfffeffff
  404843:	mov    r9d,0xc
  404849:	xor    eax,eax
  40484b:	mov    rdi,r14
  40484e:	call   401690 <strstr@plt+0x4c0>
  404853:	mov    esi,0x13ec
  404858:	mov    edx,0xf
  40485d:	xor    eax,eax
  40485f:	mov    rdi,r14
  404862:	call   401690 <strstr@plt+0x4c0>
  404867:	sub    rsp,0x8
  40486b:	mov    esi,0x1433
  404870:	mov    edx,0xfffff468
  404875:	mov    ecx,0xfffff46c
  40487a:	mov    r8d,0x3
  404880:	mov    r9d,0xfffffffb
  404886:	xor    eax,eax
  404888:	mov    rdi,r14
  40488b:	push   0xfffffffffffeffff
  404890:	call   401690 <strstr@plt+0x4c0>
  404895:	add    rsp,0x8
  404899:	mov    esi,0x146e
  40489e:	mov    edx,0xc
  4048a3:	mov    ecx,0xfffff4ac
  4048a8:	mov    r8d,0x10
  4048ae:	mov    r9d,0xfffff4a0
  4048b4:	xor    eax,eax
  4048b6:	mov    rdi,r14
  4048b9:	push   0xfffffffffffff4a0
  4048be:	call   401690 <strstr@plt+0x4c0>
  4048c3:	add    rsp,0x8
  4048c7:	mov    esi,0x14ba
  4048cc:	mov    edx,0x2
  4048d1:	mov    ecx,0xfffff468
  4048d6:	mov    r8d,0xfffff46c
  4048dc:	mov    r9d,0xfffffffb
  4048e2:	mov    eax,0x0
  4048e7:	mov    rdi,r14
  4048ea:	push   0x10
  4048ec:	push   0xfffffffffffff4ac
  4048f1:	push   0xc
  4048f3:	call   401690 <strstr@plt+0x4c0>
  4048f8:	add    rsp,0x18
  4048fc:	mov    esi,0x14f3
  404901:	mov    edx,0xfffff4a0
  404906:	mov    ecx,0x2
  40490b:	mov    r8d,0xfffff468
  404911:	mov    r9d,0xfffff46c
  404917:	xor    eax,eax
  404919:	mov    rdi,r14
  40491c:	push   0xfffffffffffffffb
  40491e:	call   401690 <strstr@plt+0x4c0>
  404923:	add    rsp,0x10
  404927:	mov    esi,0x1541
  40492c:	mov    edx,0xc
  404931:	mov    ecx,0xfffff4ac
  404936:	mov    r8d,0x10
  40493c:	mov    r9d,0xfffff4a0
  404942:	xor    eax,eax
  404944:	mov    rdi,r14
  404947:	call   401690 <strstr@plt+0x4c0>
  40494c:	mov    esi,0x1597
  404951:	mov    edx,0x2
  404956:	mov    ecx,0xfffff468
  40495b:	mov    r8d,0xfffff46c
  404961:	mov    r9d,0xfffffffb
  404967:	mov    eax,0x0
  40496c:	mov    rdi,r14
  40496f:	push   0xfffffffffffff4a0
  404974:	push   0x10
  404976:	push   0xfffffffffffff4ac
  40497b:	push   0xc
  40497d:	call   401690 <strstr@plt+0x4c0>
  404982:	add    rsp,0x20
  404986:	mov    esi,0x15dc
  40498b:	mov    edx,0x2
  404990:	mov    ecx,0xfffffff4
  404995:	xor    eax,eax
  404997:	mov    rdi,r14
  40499a:	call   401690 <strstr@plt+0x4c0>
  40499f:	mov    esi,0x1637
  4049a4:	mov    edx,0x2
  4049a9:	mov    ecx,0xfffeffff
  4049ae:	mov    r8d,0x0
  4049b4:	mov    r9d,0x43380000
  4049ba:	mov    eax,0x0
  4049bf:	mov    rdi,r14
  4049c2:	push   0xfffffffffffeffff
  4049c7:	push   0x43380000
  4049cc:	push   0x0
  4049ce:	push   0x2
  4049d0:	call   401690 <strstr@plt+0x4c0>
  4049d5:	add    rsp,0x18
  4049d9:	mov    esi,0x1682
  4049de:	mov    edx,0xfffeffff
  4049e3:	mov    ecx,0x2
  4049e8:	mov    r8d,0x0
  4049ee:	mov    r9d,0x43380000
  4049f4:	xor    eax,eax
  4049f6:	mov    rdi,r14
  4049f9:	push   0xfffffffffffeffff
  4049fe:	call   401690 <strstr@plt+0x4c0>
  404a03:	add    rsp,0x8
  404a07:	mov    esi,0x16fb
  404a0c:	mov    edx,0xfffeffff
  404a11:	mov    ecx,0x2
  404a16:	mov    r8d,0x0
  404a1c:	mov    r9d,0x43380000
  404a22:	xor    eax,eax
  404a24:	mov    rdi,r14
  404a27:	push   0xfffffffffffeffff
  404a2c:	call   401690 <strstr@plt+0x4c0>
  404a31:	add    rsp,0x10
  404a35:	mov    esi,0x175f
  404a3a:	mov    edx,0xfffeffff
  404a3f:	mov    ecx,0x2
  404a44:	mov    r8d,0xfffeffff
  404a4a:	mov    r9d,0x0
  404a50:	mov    eax,0x0
  404a55:	mov    rdi,r14
  404a58:	push   0x2
  404a5a:	push   0x43380000
  404a5f:	call   401690 <strstr@plt+0x4c0>
  404a64:	add    rsp,0x10
  404a68:	mov    esi,0x17bc
  404a6d:	mov    edx,0xfffeffff
  404a72:	mov    ecx,0x0
  404a77:	mov    r8d,0x43380000
  404a7d:	mov    r9d,0x3
  404a83:	mov    eax,0x0
  404a88:	mov    rdi,r14
  404a8b:	push   0xfffffffffffeffff
  404a90:	push   0xfffffffffffeffff
  404a95:	call   401690 <strstr@plt+0x4c0>
  404a9a:	add    rsp,0x8
  404a9e:	mov    esi,0x180f
  404aa3:	xor    edx,edx
  404aa5:	mov    ecx,0x43380000
  404aaa:	mov    r8d,0x3
  404ab0:	mov    r9d,0xfffeffff
  404ab6:	mov    eax,0x0
  404abb:	mov    rdi,r14
  404abe:	push   0x43380000
  404ac3:	push   0x0
  404ac5:	push   0xfffffffffffeffff
  404aca:	call   401690 <strstr@plt+0x4c0>
  404acf:	add    rsp,0x18
  404ad3:	mov    esi,0x188b
  404ad8:	mov    edx,0x3
  404add:	mov    ecx,0xfffeffff
  404ae2:	mov    r8d,0xfffeffff
  404ae8:	mov    r9d,0x0
  404aee:	mov    eax,0x0
  404af3:	mov    rdi,r14
  404af6:	push   0xfffffffffffeffff
  404afb:	push   0x3
  404afd:	push   0x43380000
  404b02:	call   401690 <strstr@plt+0x4c0>
  404b07:	add    rsp,0x20
  404b0b:	mov    esi,0x18e6
  404b10:	mov    edx,0xfffeffff
  404b15:	mov    ecx,0x0
  404b1a:	mov    r8d,0x43380000
  404b20:	mov    r9d,0x3
  404b26:	mov    eax,0x0
  404b2b:	mov    rdi,r14
  404b2e:	push   0x43380000
  404b33:	push   0x0
  404b35:	push   0xfffffffffffeffff
  404b3a:	push   0xfffffffffffeffff
  404b3f:	call   401690 <strstr@plt+0x4c0>
  404b44:	add    rsp,0x18
  404b48:	mov    esi,0x1966
  404b4d:	mov    edx,0x3
  404b52:	mov    ecx,0x2
  404b57:	mov    r8d,0x10
  404b5d:	mov    r9d,0xa0
  404b63:	mov    eax,0x0
  404b68:	mov    rdi,r14
  404b6b:	push   0x18
  404b6d:	push   0x10
  404b6f:	push   0x18
  404b71:	push   0x20
  404b73:	push   0x18
  404b75:	call   401690 <strstr@plt+0x4c0>
  404b7a:	add    rsp,0x30
  404b7e:	mov    esi,0x19c0
  404b83:	mov    edx,0x10
  404b88:	mov    ecx,0x3
  404b8d:	mov    r8d,0x14
  404b93:	mov    r9d,0x10
  404b99:	mov    eax,0x0
  404b9e:	mov    rdi,r14
  404ba1:	push   0x18
  404ba3:	push   0x10
  404ba5:	push   0x18
  404ba7:	push   0x10
  404ba9:	call   401690 <strstr@plt+0x4c0>
  404bae:	add    rsp,0x18
  404bb2:	mov    esi,0x1a3e
  404bb7:	mov    edx,0xfffff4d9
  404bbc:	mov    ecx,0x20
  404bc1:	mov    r8d,0x10
  404bc7:	mov    r9d,0xc
  404bcd:	mov    eax,0x0
  404bd2:	mov    rdi,r14
  404bd5:	push   0x10
  404bd7:	push   0xfffffffffffff4d9
  404bdc:	push   0xfffffffffffff510
  404be1:	call   401690 <strstr@plt+0x4c0>
  404be6:	add    rsp,0x20
  404bea:	mov    esi,0x1a83
  404bef:	mov    edx,0xfffff4d9
  404bf4:	mov    ecx,0x10
  404bf9:	mov    r8d,0xc
  404bff:	mov    r9d,0xfffff510
  404c05:	mov    eax,0x0
  404c0a:	mov    rdi,r14
  404c0d:	push   0x4d8
  404c12:	push   0x10
  404c14:	push   0x10
  404c16:	push   0x4
  404c18:	call   401690 <strstr@plt+0x4c0>
  404c1d:	add    rsp,0x20
  404c21:	mov    esi,0x1ad8
  404c26:	mov    edx,0x10
  404c2b:	mov    ecx,0xffffffc7
  404c30:	mov    r8d,0x10
  404c36:	mov    r9d,0x18
  404c3c:	mov    eax,0x0
  404c41:	mov    rdi,r14
  404c44:	push   0x18
  404c46:	push   0x10
  404c48:	push   0x18
  404c4a:	push   0x10
  404c4c:	push   0xfffffffffffff640
  404c51:	push   0xfffffffffffff5e0
  404c56:	call   401690 <strstr@plt+0x4c0>
  404c5b:	add    rsp,0x28
  404c5f:	mov    esi,0x1b59
  404c64:	mov    edx,0xfffff530
  404c69:	mov    ecx,0xfffff530
  404c6e:	mov    r8d,0xfffffffc
  404c74:	mov    r9d,0xffffff3c
  404c7a:	mov    eax,0x0
  404c7f:	mov    rdi,r14
  404c82:	push   0x1c
  404c84:	push   0x10
  404c86:	push   0x18
  404c88:	push   0xfffffffffffffffc
  404c8a:	push   0x30
  404c8c:	push   0xfffffffffffff5e0
  404c91:	push   0x10
  404c93:	push   0xfffffffffffff53c
  404c98:	push   0xfffffffffffff640
  404c9d:	push   0xfffffffffffff540
  404ca2:	push   0xfffffffffffff53c
  404ca7:	push   0x80
  404cac:	push   0xffffffffffffff38
  404cb1:	call   401690 <strstr@plt+0x4c0>
  404cb6:	add    rsp,0x70
  404cba:	mov    esi,0x1c5f
  404cbf:	mov    edx,0x10
  404cc4:	mov    ecx,0xffffffd0
  404cc9:	mov    r8d,0xfffff53c
  404ccf:	mov    r9d,0xfffff530
  404cd5:	mov    eax,0x0
  404cda:	mov    rdi,r14
  404cdd:	push   0x43300000
  404ce2:	push   0x0
  404ce4:	push   0x7fffffff
  404ce9:	push   0xffffffffffffffff
  404ceb:	push   0x55
  404ced:	push   0xffffffffffffffff
  404cef:	call   401690 <strstr@plt+0x4c0>
  404cf4:	add    rsp,0x30
  404cf8:	mov    esi,0x1ce8
  404cfd:	mov    edx,0x0
  404d02:	mov    ecx,0x3ff00000
  404d07:	mov    r8d,0xffffffff
  404d0d:	mov    r9d,0x7fffffff
  404d13:	mov    eax,0x0
  404d18:	mov    rdi,r14
  404d1b:	push   0x43300000
  404d20:	push   0x0
  404d22:	push   0x7fffffff
  404d27:	push   0xffffffffffffffff
  404d29:	push   0xffffffffbff00000
  404d2e:	push   0x0
  404d30:	push   0x43300000
  404d35:	push   0x0
  404d37:	call   401690 <strstr@plt+0x4c0>
  404d3c:	add    rsp,0x40
  404d40:	mov    esi,0x1d7f
  404d45:	xor    edx,edx
  404d47:	mov    ecx,0x3ff00000
  404d4c:	mov    r8d,0xffffffff
  404d52:	mov    r9d,0x7fffffff
  404d58:	mov    eax,0x0
  404d5d:	mov    rdi,r14
  404d60:	push   0x3ff00000
  404d65:	push   0x0
  404d67:	push   0x43300000
  404d6c:	push   0x0
  404d6e:	call   401690 <strstr@plt+0x4c0>
  404d73:	add    rsp,0x20
  404d77:	mov    esi,0x1e77
  404d7c:	xor    eax,eax
  404d7e:	mov    rdi,r14
  404d81:	call   401690 <strstr@plt+0x4c0>
  404d86:	mov    esi,0x1ee5
  404d8b:	xor    edx,edx
  404d8d:	mov    ecx,0x3ff00000
  404d92:	xor    eax,eax
  404d94:	mov    rdi,r14
  404d97:	call   401690 <strstr@plt+0x4c0>
  404d9c:	mov    esi,0x1f27
  404da1:	xor    edx,edx
  404da3:	mov    ecx,0x3ff00000
  404da8:	xor    r8d,r8d
  404dab:	mov    r9d,0x3ff00000
  404db1:	xor    eax,eax
  404db3:	mov    rdi,r14
  404db6:	push   0x3ff00000
  404dbb:	push   0x0
  404dbd:	push   0x7fffffff
  404dc2:	push   0xffffffffffffffff
  404dc4:	call   401690 <strstr@plt+0x4c0>
  404dc9:	add    rsp,0x20
  404dcd:	mov    esi,0x1fe3
  404dd2:	xor    edx,edx
  404dd4:	mov    ecx,0x7ff00000
  404dd9:	xor    eax,eax
  404ddb:	mov    rdi,r14
  404dde:	call   401690 <strstr@plt+0x4c0>
  404de3:	mov    esi,0x2045
  404de8:	xor    eax,eax
  404dea:	mov    rdi,r14
  404ded:	call   401690 <strstr@plt+0x4c0>
  404df2:	mov    esi,0x2089
  404df7:	xor    eax,eax
  404df9:	mov    rdi,r14
  404dfc:	call   401690 <strstr@plt+0x4c0>
  404e01:	mov    esi,0x20d4
  404e06:	xor    eax,eax
  404e08:	mov    rdi,r14
  404e0b:	call   401690 <strstr@plt+0x4c0>
  404e10:	mov    esi,0x2138
  404e15:	mov    edx,0x0
  404e1a:	mov    ecx,0x80000000
  404e1f:	mov    r8d,0xffffffff
  404e25:	mov    r9d,0x7fffffff
  404e2b:	xor    eax,eax
  404e2d:	mov    rdi,r14
  404e30:	call   401690 <strstr@plt+0x4c0>
  404e35:	mov    esi,0x21af
  404e3a:	xor    eax,eax
  404e3c:	mov    rdi,r14
  404e3f:	call   401690 <strstr@plt+0x4c0>
  404e44:	sub    rsp,0x8
  404e48:	mov    esi,0x21e6
  404e4d:	mov    edx,0xbb8
  404e52:	mov    ecx,0xfc
  404e57:	mov    r8d,0xd0
  404e5d:	mov    r9d,0x70
  404e63:	mov    eax,0x0
  404e68:	mov    rdi,r14
  404e6b:	push   0xb0
  404e70:	push   0x68
  404e72:	push   0x60
  404e74:	push   0x58
  404e76:	push   0x50
  404e78:	push   0x98
  404e7d:	push   0x90
  404e82:	push   0x50
  404e84:	push   0x48
  404e86:	push   0x40
  404e88:	push   0x38
  404e8a:	push   0x30
  404e8c:	push   0x88
  404e91:	push   0x80
  404e96:	push   0x78
  404e98:	call   401690 <strstr@plt+0x4c0>
  404e9d:	add    rsp,0x78
  404ea1:	mov    esi,0x2253
  404ea6:	mov    edx,0xfffff530
  404eab:	mov    ecx,0xffffffff
  404eb0:	mov    r8d,0x10
  404eb6:	mov    r9d,0x18
  404ebc:	mov    eax,0x0
  404ec1:	mov    rdi,r14
  404ec4:	push   0xc
  404ec6:	push   0x8
  404ec8:	push   0x30
  404eca:	push   0x70
  404ecc:	push   0x18
  404ece:	push   0x10
  404ed0:	push   0x10
  404ed2:	push   0xfffffffffffff544
  404ed7:	push   0x10
  404ed9:	call   401690 <strstr@plt+0x4c0>
  404ede:	add    rsp,0x48
  404ee2:	mov    esi,0x22d6
  404ee7:	mov    edx,0xc0
  404eec:	mov    ecx,0x0
  404ef1:	mov    r8d,0xf
  404ef7:	mov    r9d,0x90
  404efd:	mov    eax,0x0
  404f02:	mov    rdi,r14
  404f05:	push   0x40
  404f07:	push   0x30
  404f09:	push   0x20
  404f0b:	push   0x10
  404f0d:	push   0xb8
  404f12:	push   0xb0
  404f17:	push   0xa8
  404f1c:	push   0xa0
  404f21:	push   0x98
  404f26:	call   401690 <strstr@plt+0x4c0>
  404f2b:	add    rsp,0x48
  404f2f:	mov    esi,0x2327
  404f34:	mov    edx,0x50
  404f39:	mov    ecx,0x60
  404f3e:	mov    r8d,0x70
  404f44:	mov    r9d,0x80
  404f4a:	mov    eax,0x0
  404f4f:	mov    rdi,r14
  404f52:	push   0x20
  404f54:	push   0x98
  404f59:	push   0x10
  404f5b:	push   0x90
  404f60:	push   0x0
  404f62:	call   401690 <strstr@plt+0x4c0>
  404f67:	add    rsp,0x30
  404f6b:	mov    esi,0x3818
  404f70:	xor    eax,eax
  404f72:	mov    rdi,r14
  404f75:	call   401690 <strstr@plt+0x4c0>
  404f7a:	lea    r15,[rip+0x41cf]        # 409150 <strstr@plt+0x7f80>
  404f81:	xor    r12d,r12d
  404f84:	jmp    404fa0 <strstr@plt+0x3dd0>
  404f86:	mov    esi,0x3471
  404f8b:	xor    eax,eax
  404f8d:	mov    rdi,r14
  404f90:	call   401690 <strstr@plt+0x4c0>
  404f95:	jmp    40557c <strstr@plt+0x43ac>
  404f9a:	nop    WORD PTR [rax+rax*1+0x0]
  404fa0:	mov    esi,0x20a
  404fa5:	xor    eax,eax
  404fa7:	mov    rdi,r14
  404faa:	mov    edx,r12d
  404fad:	call   401690 <strstr@plt+0x4c0>
  404fb2:	mov    ebx,r12d
  404fb5:	and    ebx,0x7fffffff
  404fbb:	cmp    ebx,0x5c
  404fbe:	ja     406041 <strstr@plt+0x4e71>
  404fc4:	movsxd rax,DWORD PTR [r15+rbx*4]
  404fc8:	add    rax,r15
  404fcb:	jmp    rax
  404fcd:	mov    esi,0x2355
  404fd2:	mov    edx,0xfffeffff
  404fd7:	mov    ecx,0xfffeffff
  404fdc:	xor    eax,eax
  404fde:	mov    rdi,r14
  404fe1:	call   401690 <strstr@plt+0x4c0>
  404fe6:	cmp    ebx,0x3
  404fe9:	ja     405fca <strstr@plt+0x4dfa>
  404fef:	mov    eax,r12d
  404ff2:	and    eax,0x7fffffff
  404ff7:	lea    rcx,[rip+0x42c6]        # 4092c4 <strstr@plt+0x80f4>
  404ffe:	movsxd rax,DWORD PTR [rcx+rax*4]
  405002:	add    rax,rcx
  405005:	jmp    rax
  405007:	mov    esi,0x1ce3
  40500c:	jmp    405fc0 <strstr@plt+0x4df0>
  405011:	mov    ebp,r12d
  405014:	or     ebp,0x1
  405017:	mov    esi,0x34f9
  40501c:	xor    eax,eax
  40501e:	mov    rdi,r14
  405021:	call   401690 <strstr@plt+0x4c0>
  405026:	cmp    ebp,0x4d
  405029:	jne    405292 <strstr@plt+0x40c2>
  40502f:	mov    esi,0x35eb
  405034:	xor    eax,eax
  405036:	mov    rdi,r14
  405039:	call   401690 <strstr@plt+0x4c0>
  40503e:	mov    esi,0x35f8
  405043:	xor    eax,eax
  405045:	mov    rdi,r14
  405048:	call   401690 <strstr@plt+0x4c0>
  40504d:	mov    esi,0x3604
  405052:	jmp    4052f1 <strstr@plt+0x4121>
  405057:	mov    esi,0x2530
  40505c:	mov    edx,0xfffffffe
  405061:	xor    eax,eax
  405063:	mov    rdi,r14
  405066:	call   401690 <strstr@plt+0x4c0>
  40506b:	mov    eax,r12d
  40506e:	or     eax,0x2
  405071:	cmp    eax,0xe
  405074:	jne    4053ca <strstr@plt+0x41fa>
  40507a:	mov    esi,0x2388
  40507f:	jmp    4053cf <strstr@plt+0x41ff>
  405084:	cmp    r12d,0x47
  405088:	je     405568 <strstr@plt+0x4398>
  40508e:	mov    esi,0x3424
  405093:	xor    eax,eax
  405095:	mov    rdi,r14
  405098:	call   401690 <strstr@plt+0x4c0>
  40509d:	mov    esi,0x3428
  4050a2:	mov    edx,0x3
  4050a7:	xor    eax,eax
  4050a9:	mov    rdi,r14
  4050ac:	call   401690 <strstr@plt+0x4c0>
  4050b1:	cmp    ebx,0x48
  4050b4:	je     404f86 <strstr@plt+0x3db6>
  4050ba:	cmp    ebx,0x47
  4050bd:	je     40557c <strstr@plt+0x43ac>
  4050c3:	cmp    ebx,0x46
  4050c6:	jne    4050d7 <strstr@plt+0x3f07>
  4050c8:	mov    esi,0x343b
  4050cd:	xor    eax,eax
  4050cf:	mov    rdi,r14
  4050d2:	call   401690 <strstr@plt+0x4c0>
  4050d7:	mov    esi,0x3486
  4050dc:	mov    edx,0x10
  4050e1:	mov    ecx,0xffffffd0
  4050e6:	xor    eax,eax
  4050e8:	mov    rdi,r14
  4050eb:	call   401690 <strstr@plt+0x4c0>
  4050f0:	mov    esi,0x34b6
  4050f5:	mov    edx,0xffffffff
  4050fa:	xor    eax,eax
  4050fc:	mov    rdi,r14
  4050ff:	call   401690 <strstr@plt+0x4c0>
  405104:	mov    esi,0x34c8
  405109:	mov    edx,0xfffffffd
  40510e:	mov    ecx,0x7
  405113:	xor    eax,eax
  405115:	mov    rdi,r14
  405118:	call   401690 <strstr@plt+0x4c0>
  40511d:	jmp    4055d7 <strstr@plt+0x4407>
  405122:	mov    esi,0x263a
  405127:	xor    eax,eax
  405129:	mov    rdi,r14
  40512c:	call   401690 <strstr@plt+0x4c0>
  405131:	lea    eax,[r12-0x14]
  405136:	cdqe   
  405138:	imul   rax,rax,0x66666667
  40513f:	mov    rcx,rax
  405142:	shr    rcx,0x3f
  405146:	sar    rax,0x21
  40514a:	add    eax,ecx
  40514c:	cmp    eax,0x1
  40514f:	je     405942 <strstr@plt+0x4772>
  405155:	test   eax,eax
  405157:	jne    405a0c <strstr@plt+0x483c>
  40515d:	mov    esi,0x26f0
  405162:	jmp    405b70 <strstr@plt+0x49a0>
  405167:	mov    esi,0x263a
  40516c:	xor    eax,eax
  40516e:	mov    rdi,r14
  405171:	call   401690 <strstr@plt+0x4c0>
  405176:	lea    eax,[r12-0x14]
  40517b:	cdqe   
  40517d:	imul   rax,rax,0x66666667
  405184:	mov    rcx,rax
  405187:	shr    rcx,0x3f
  40518b:	sar    rax,0x21
  40518f:	add    eax,ecx
  405191:	cmp    eax,0x1
  405194:	je     405a02 <strstr@plt+0x4832>
  40519a:	test   eax,eax
  40519c:	jne    405c31 <strstr@plt+0x4a61>
  4051a2:	mov    esi,0x2642
  4051a7:	jmp    405b70 <strstr@plt+0x49a0>
  4051ac:	mov    esi,0x263a
  4051b1:	xor    eax,eax
  4051b3:	mov    rdi,r14
  4051b6:	call   401690 <strstr@plt+0x4c0>
  4051bb:	lea    eax,[r12-0x14]
  4051c0:	cdqe   
  4051c2:	imul   rax,rax,0x66666667
  4051c9:	mov    rcx,rax
  4051cc:	shr    rcx,0x3f
  4051d0:	sar    rax,0x21
  4051d4:	add    eax,ecx
  4051d6:	cmp    eax,0x1
  4051d9:	je     405b64 <strstr@plt+0x4994>
  4051df:	test   eax,eax
  4051e1:	jne    405c38 <strstr@plt+0x4a68>
  4051e7:	mov    esi,0x2747
  4051ec:	jmp    405b70 <strstr@plt+0x49a0>
  4051f1:	mov    esi,0x263a
  4051f6:	xor    eax,eax
  4051f8:	mov    rdi,r14
  4051fb:	call   401690 <strstr@plt+0x4c0>
  405200:	lea    eax,[r12-0x14]
  405205:	cdqe   
  405207:	imul   rax,rax,0x66666667
  40520e:	mov    rcx,rax
  405211:	shr    rcx,0x3f
  405215:	sar    rax,0x21
  405219:	add    eax,ecx
  40521b:	cmp    eax,0x1
  40521e:	je     405b6b <strstr@plt+0x499b>
  405224:	test   eax,eax
  405226:	jne    405c3f <strstr@plt+0x4a6f>
  40522c:	mov    esi,0x2699
  405231:	jmp    405b70 <strstr@plt+0x49a0>
  405236:	mov    esi,0x34e4
  40523b:	mov    edx,0x7e
  405240:	mov    ecx,0xffffff80
  405245:	mov    r8d,0x2
  40524b:	jmp    405cc6 <strstr@plt+0x4af6>
  405250:	mov    esi,0x36f1
  405255:	mov    edx,0xffffffcc
  40525a:	mov    ecx,0x20
  40525f:	mov    r8d,0xffffffc2
  405265:	xor    eax,eax
  405267:	mov    rdi,r14
  40526a:	call   401690 <strstr@plt+0x4c0>
  40526f:	cmp    r12d,0x57
  405273:	jne    405675 <strstr@plt+0x44a5>
  405279:	mov    esi,0x3710
  40527e:	mov    edx,0x53
  405283:	xor    eax,eax
  405285:	mov    rdi,r14
  405288:	call   401690 <strstr@plt+0x4c0>
  40528d:	jmp    405684 <strstr@plt+0x44b4>
  405292:	mov    esi,0x35c4
  405297:	mov    edx,0xfffeffff
  40529c:	xor    eax,eax
  40529e:	mov    rdi,r14
  4052a1:	call   401690 <strstr@plt+0x4c0>
  4052a6:	mov    esi,0x35ca
  4052ab:	mov    edx,0xfffeffff
  4052b0:	xor    eax,eax
  4052b2:	mov    rdi,r14
  4052b5:	call   401690 <strstr@plt+0x4c0>
  4052ba:	mov    esi,0x35eb
  4052bf:	xor    eax,eax
  4052c1:	mov    rdi,r14
  4052c4:	call   401690 <strstr@plt+0x4c0>
  4052c9:	mov    esi,0x35ef
  4052ce:	mov    edx,0xfffeffff
  4052d3:	xor    eax,eax
  4052d5:	mov    rdi,r14
  4052d8:	call   401690 <strstr@plt+0x4c0>
  4052dd:	mov    esi,0x35f8
  4052e2:	xor    eax,eax
  4052e4:	mov    rdi,r14
  4052e7:	call   401690 <strstr@plt+0x4c0>
  4052ec:	mov    esi,0x3617
  4052f1:	xor    eax,eax
  4052f3:	mov    rdi,r14
  4052f6:	call   401690 <strstr@plt+0x4c0>
  4052fb:	mov    esi,0x361c
  405300:	xor    eax,eax
  405302:	mov    rdi,r14
  405305:	call   401690 <strstr@plt+0x4c0>
  40530a:	cmp    ebx,0x4c
  40530d:	je     405809 <strstr@plt+0x4639>
  405313:	cmp    ebx,0x4a
  405316:	je     4057e6 <strstr@plt+0x4616>
  40531c:	cmp    ebx,0x49
  40531f:	jne    405815 <strstr@plt+0x4645>
  405325:	mov    esi,0x3629
  40532a:	mov    edx,0xfffe0000
  40532f:	jmp    40581f <strstr@plt+0x464f>
  405334:	mov    esi,0x366c
  405339:	mov    edx,0xffffffff
  40533e:	xor    eax,eax
  405340:	mov    rdi,r14
  405343:	call   401690 <strstr@plt+0x4c0>
  405348:	cmp    r12d,0x50
  40534c:	jne    405924 <strstr@plt+0x4754>
  405352:	mov    esi,0x367b
  405357:	mov    edx,0x53
  40535c:	jmp    40592e <strstr@plt+0x475e>
  405361:	mov    esi,0x23ae
  405366:	xor    eax,eax
  405368:	mov    rdi,r14
  40536b:	call   401690 <strstr@plt+0x4c0>
  405370:	mov    esi,0x23b6
  405375:	mov    edx,0xfffeffff
  40537a:	mov    ecx,0xfffeffff
  40537f:	xor    eax,eax
  405381:	mov    rdi,r14
  405384:	call   401690 <strstr@plt+0x4c0>
  405389:	cmp    r12d,0x4
  40538d:	jne    40550f <strstr@plt+0x433f>
  405393:	mov    esi,0x23da
  405398:	jmp    4054bd <strstr@plt+0x42ed>
  40539d:	mov    esi,0x24c2
  4053a2:	xor    eax,eax
  4053a4:	mov    rdi,r14
  4053a7:	call   401690 <strstr@plt+0x4c0>
  4053ac:	cmp    r12d,0xa
  4053b0:	jne    40594c <strstr@plt+0x477c>
  4053b6:	mov    esi,0x24d0
  4053bb:	mov    edx,0xfffe0000
  4053c0:	mov    ecx,0xfffffff5
  4053c5:	jmp    405c22 <strstr@plt+0x4a52>
  4053ca:	mov    esi,0x2383
  4053cf:	xor    eax,eax
  4053d1:	mov    rdi,r14
  4053d4:	call   401690 <strstr@plt+0x4c0>
  4053d9:	mov    eax,r12d
  4053dc:	or     eax,0x1
  4053df:	cmp    eax,0xd
  4053e2:	jne    405fca <strstr@plt+0x4dfa>
  4053e8:	mov    esi,0x253c
  4053ed:	jmp    405fc0 <strstr@plt+0x4df0>
  4053f2:	mov    esi,0x263e
  4053f7:	xor    eax,eax
  4053f9:	mov    rdi,r14
  4053fc:	call   401690 <strstr@plt+0x4c0>
  405401:	cmp    r12d,0x3d
  405405:	jne    405416 <strstr@plt+0x4246>
  405407:	mov    esi,0x30c1
  40540c:	xor    eax,eax
  40540e:	mov    rdi,r14
  405411:	call   401690 <strstr@plt+0x4c0>
  405416:	mov    esi,0x30c6
  40541b:	mov    edx,0xfffffff7
  405420:	jmp    4056fd <strstr@plt+0x452d>
  405425:	sub    rsp,0x8
  405429:	mov    esi,0x37bf
  40542e:	mov    edx,0x18
  405433:	mov    ecx,0x10
  405438:	mov    r8d,0xa0
  40543e:	mov    r9d,0x20
  405444:	xor    eax,eax
  405446:	mov    rdi,r14
  405449:	push   0x18
  40544b:	call   401690 <strstr@plt+0x4c0>
  405450:	add    rsp,0x10
  405454:	cmp    r12d,0x5b
  405458:	jne    405a16 <strstr@plt+0x4846>
  40545e:	mov    esi,0x37dd
  405463:	xor    eax,eax
  405465:	mov    rdi,r14
  405468:	call   401690 <strstr@plt+0x4c0>
  40546d:	mov    esi,0x37e9
  405472:	mov    edx,0xfffff530
  405477:	mov    ecx,0xfffffffe
  40547c:	xor    eax,eax
  40547e:	mov    rdi,r14
  405481:	call   401690 <strstr@plt+0x4c0>
  405486:	mov    esi,0x37f3
  40548b:	xor    eax,eax
  40548d:	mov    rdi,r14
  405490:	call   401690 <strstr@plt+0x4c0>
  405495:	jmp    405a52 <strstr@plt+0x4882>
  40549a:	mov    esi,0x2484
  40549f:	mov    edx,0xfffffffb
  4054a4:	xor    eax,eax
  4054a6:	mov    rdi,r14
  4054a9:	call   401690 <strstr@plt+0x4c0>
  4054ae:	cmp    r12d,0x6
  4054b2:	jne    405a7c <strstr@plt+0x48ac>
  4054b8:	mov    esi,0x23de
  4054bd:	xor    eax,eax
  4054bf:	mov    rdi,r14
  4054c2:	call   401690 <strstr@plt+0x4c0>
  4054c7:	mov    esi,0x23ec
  4054cc:	mov    edx,0xfffe0000
  4054d1:	xor    eax,eax
  4054d3:	mov    rdi,r14
  4054d6:	call   401690 <strstr@plt+0x4c0>
  4054db:	mov    bl,0x1
  4054dd:	jmp    405aa1 <strstr@plt+0x48d1>
  4054e2:	mov    esi,0x249f
  4054e7:	xor    eax,eax
  4054e9:	mov    rdi,r14
  4054ec:	call   401690 <strstr@plt+0x4c0>
  4054f1:	mov    esi,0x24a7
  4054f6:	mov    edx,0xfffeffff
  4054fb:	xor    eax,eax
  4054fd:	mov    rdi,r14
  405500:	call   401690 <strstr@plt+0x4c0>
  405505:	cmp    r12d,0x8
  405509:	je     405393 <strstr@plt+0x41c3>
  40550f:	mov    esi,0x23e3
  405514:	jmp    405a81 <strstr@plt+0x48b1>
  405519:	mov    esi,0x30c1
  40551e:	jmp    406020 <strstr@plt+0x4e50>
  405523:	mov    esi,0x263a
  405528:	xor    eax,eax
  40552a:	mov    rdi,r14
  40552d:	call   401690 <strstr@plt+0x4c0>
  405532:	lea    eax,[r12-0x14]
  405537:	cdqe   
  405539:	imul   rax,rax,0x66666667
  405540:	mov    rcx,rax
  405543:	shr    rcx,0x3f
  405547:	sar    rax,0x21
  40554b:	add    eax,ecx
  40554d:	cmp    eax,0x1
  405550:	je     405fe0 <strstr@plt+0x4e10>
  405556:	test   eax,eax
  405558:	jne    405ff6 <strstr@plt+0x4e26>
  40555e:	mov    esi,0x279e
  405563:	jmp    405fe5 <strstr@plt+0x4e15>
  405568:	mov    esi,0x3428
  40556d:	mov    edx,0x3
  405572:	xor    eax,eax
  405574:	mov    rdi,r14
  405577:	call   401690 <strstr@plt+0x4c0>
  40557c:	mov    esi,0x347b
  405581:	xor    eax,eax
  405583:	mov    rdi,r14
  405586:	call   401690 <strstr@plt+0x4c0>
  40558b:	mov    esi,0x3486
  405590:	mov    edx,0x10
  405595:	mov    ecx,0xffffffd0
  40559a:	xor    eax,eax
  40559c:	mov    rdi,r14
  40559f:	call   401690 <strstr@plt+0x4c0>
  4055a4:	mov    esi,0x34c1
  4055a9:	mov    edx,0xffffffff
  4055ae:	xor    eax,eax
  4055b0:	mov    rdi,r14
  4055b3:	call   401690 <strstr@plt+0x4c0>
  4055b8:	mov    esi,0x34c8
  4055bd:	mov    edx,0xfffffffd
  4055c2:	mov    ecx,0x7
  4055c7:	xor    eax,eax
  4055c9:	mov    rdi,r14
  4055cc:	call   401690 <strstr@plt+0x4c0>
  4055d1:	cmp    r12d,0x47
  4055d5:	je     4055e6 <strstr@plt+0x4416>
  4055d7:	mov    esi,0x34e0
  4055dc:	xor    eax,eax
  4055de:	mov    rdi,r14
  4055e1:	call   401690 <strstr@plt+0x4c0>
  4055e6:	mov    esi,0x2625
  4055eb:	jmp    406020 <strstr@plt+0x4e50>
  4055f0:	mov    esi,0x3699
  4055f5:	mov    edx,0xfffff710
  4055fa:	mov    ecx,0x40
  4055ff:	mov    r8d,0xfffff540
  405605:	mov    r9d,0xfffff53c
  40560b:	jmp    405a6d <strstr@plt+0x489d>
  405610:	mov    esi,0x2399
  405615:	jmp    406020 <strstr@plt+0x4e50>
  40561a:	sub    rsp,0x8
  40561e:	mov    esi,0x32c6
  405623:	mov    edx,0xfffffff7
  405628:	mov    ecx,0xfffffff4
  40562d:	mov    r8d,0xffffffff
  405633:	mov    r9d,0x6
  405639:	mov    eax,0x0
  40563e:	mov    rdi,r14
  405641:	push   0x41
  405643:	push   0xfffffffffffe0000
  405648:	push   0x54
  40564a:	push   0xfffffffffffe0000
  40564f:	push   0x4
  405651:	call   401690 <strstr@plt+0x4c0>
  405656:	jmp    405ecd <strstr@plt+0x4cfd>
  40565b:	mov    esi,0x2ac5
  405660:	mov    edx,0x10
  405665:	mov    ecx,0x10
  40566a:	mov    r8d,0xfffffff7
  405670:	jmp    405cf6 <strstr@plt+0x4b26>
  405675:	mov    esi,0x2399
  40567a:	xor    eax,eax
  40567c:	mov    rdi,r14
  40567f:	call   401690 <strstr@plt+0x4c0>
  405684:	mov    esi,0x3719
  405689:	mov    edx,0xffffffff
  40568e:	jmp    405fd4 <strstr@plt+0x4e04>
  405693:	mov    esi,0x2913
  405698:	mov    edx,0xffffffff
  40569d:	jmp    405fd4 <strstr@plt+0x4e04>
  4056a2:	mov    esi,0x30f1
  4056a7:	mov    edx,0xfffffff7
  4056ac:	mov    ecx,0x3
  4056b1:	mov    r8d,0x6
  4056b7:	mov    r9d,0x10
  4056bd:	xor    eax,eax
  4056bf:	mov    rdi,r14
  4056c2:	call   401690 <strstr@plt+0x4c0>
  4056c7:	mov    esi,0x3167
  4056cc:	mov    edx,0x3
  4056d1:	mov    ecx,0x10
  4056d6:	mov    r8d,0xffffffd0
  4056dc:	mov    r9d,0x3
  4056e2:	mov    eax,0x0
  4056e7:	mov    rdi,r14
  4056ea:	push   0x3
  4056ec:	push   0x7
  4056ee:	jmp    405f50 <strstr@plt+0x4d80>
  4056f3:	mov    esi,0x2838
  4056f8:	mov    edx,0x10
  4056fd:	mov    ecx,0x10
  405702:	jmp    405c22 <strstr@plt+0x4a52>
  405707:	mov    esi,0x2a38
  40570c:	jmp    405886 <strstr@plt+0x46b6>
  405711:	mov    esi,0x2be7
  405716:	mov    edx,0x8
  40571b:	jmp    405fd4 <strstr@plt+0x4e04>
  405720:	sub    rsp,0x8
  405724:	mov    esi,0x2cb5
  405729:	mov    edx,0xfffffff4
  40572e:	mov    ecx,0x1c
  405733:	mov    r8d,0x8
  405739:	mov    r9d,0x18
  40573f:	mov    eax,0x0
  405744:	mov    rdi,r14
  405747:	push   0xffffffffffffffff
  405749:	push   0x8
  40574b:	push   0xfffffffffffffffb
  40574d:	push   0xc
  40574f:	push   0x14
  405751:	call   401690 <strstr@plt+0x4c0>
  405756:	add    rsp,0x28
  40575a:	mov    esi,0x2d0a
  40575f:	mov    edx,0xffffffff
  405764:	mov    ecx,0x10
  405769:	mov    r8d,0x10
  40576f:	mov    r9d,0x6
  405775:	xor    eax,eax
  405777:	mov    rdi,r14
  40577a:	push   0x1
  40577c:	jmp    405f50 <strstr@plt+0x4d80>
  405781:	mov    esi,0x263a
  405786:	xor    eax,eax
  405788:	mov    rdi,r14
  40578b:	call   401690 <strstr@plt+0x4c0>
  405790:	mov    esi,0x27d2
  405795:	mov    edx,0xfffeffff
  40579a:	mov    ecx,0xfffeffff
  40579f:	xor    eax,eax
  4057a1:	mov    rdi,r14
  4057a4:	call   401690 <strstr@plt+0x4c0>
  4057a9:	mov    esi,0x281a
  4057ae:	jmp    406020 <strstr@plt+0x4e50>
  4057b3:	mov    esi,0x3337
  4057b8:	mov    edx,0xb
  4057bd:	mov    ecx,0xffffffff
  4057c2:	mov    r8d,0x20
  4057c8:	xor    eax,eax
  4057ca:	mov    rdi,r14
  4057cd:	call   401690 <strstr@plt+0x4c0>
  4057d2:	mov    esi,0x33de
  4057d7:	mov    edx,0x10
  4057dc:	mov    ecx,0x18
  4057e1:	jmp    405a61 <strstr@plt+0x4891>
  4057e6:	mov    esi,0x3633
  4057eb:	mov    edx,0xfffe0000
  4057f0:	mov    ecx,0x53
  4057f5:	xor    eax,eax
  4057f7:	mov    rdi,r14
  4057fa:	call   401690 <strstr@plt+0x4c0>
  4057ff:	mov    esi,0x364b
  405804:	jmp    406020 <strstr@plt+0x4e50>
  405809:	mov    esi,0x3641
  40580e:	mov    edx,0xfffe0000
  405813:	jmp    40581f <strstr@plt+0x464f>
  405815:	mov    esi,0x363d
  40581a:	mov    edx,0x53
  40581f:	xor    eax,eax
  405821:	mov    rdi,r14
  405824:	call   401690 <strstr@plt+0x4c0>
  405829:	mov    esi,0x364b
  40582e:	jmp    406020 <strstr@plt+0x4e50>
  405833:	mov    esi,0x31af
  405838:	mov    edx,0xfffffff7
  40583d:	mov    ecx,0x3
  405842:	mov    r8d,0x10
  405848:	jmp    405cf6 <strstr@plt+0x4b26>
  40584d:	mov    esi,0x263a
  405852:	xor    eax,eax
  405854:	mov    rdi,r14
  405857:	call   401690 <strstr@plt+0x4c0>
  40585c:	mov    esi,0x279e
  405861:	mov    edx,0xfffeffff
  405866:	xor    eax,eax
  405868:	mov    rdi,r14
  40586b:	call   401690 <strstr@plt+0x4c0>
  405870:	mov    esi,0x27f5
  405875:	jmp    406020 <strstr@plt+0x4e50>
  40587a:	mov    esi,0x2943
  40587f:	jmp    405886 <strstr@plt+0x46b6>
  405881:	mov    esi,0x2a65
  405886:	mov    edx,0x14
  40588b:	mov    ecx,0x10
  405890:	xor    eax,eax
  405892:	mov    rdi,r14
  405895:	call   401690 <strstr@plt+0x4c0>
  40589a:	jmp    40602a <strstr@plt+0x4e5a>
  40589f:	sub    rsp,0x8
  4058a3:	mov    esi,0x2dc3
  4058a8:	mov    edx,0xfffffff4
  4058ad:	mov    ecx,0xfffeffff
  4058b2:	mov    r8d,0x18
  4058b8:	mov    r9d,0x8
  4058be:	mov    eax,0x0
  4058c3:	mov    rdi,r14
  4058c6:	push   0x4
  4058c8:	push   0x4
  4058ca:	push   0xffffffffffffffff
  4058cc:	call   401690 <strstr@plt+0x4c0>
  4058d1:	add    rsp,0x18
  4058d5:	mov    esi,0x2e1f
  4058da:	mov    edx,0x10
  4058df:	mov    ecx,0x10
  4058e4:	mov    r8d,0x6
  4058ea:	mov    r9d,0x2
  4058f0:	mov    eax,0x0
  4058f5:	mov    rdi,r14
  4058f8:	push   0xfb
  4058fd:	push   0x4
  4058ff:	push   0xfffffffffffffffb
  405901:	call   401690 <strstr@plt+0x4c0>
  405906:	add    rsp,0x20
  40590a:	mov    esi,0x2e73
  40590f:	mov    edx,0xfffff484
  405914:	mov    ecx,0xfffff484
  405919:	mov    r8d,0xc
  40591f:	jmp    405cf6 <strstr@plt+0x4b26>
  405924:	mov    esi,0x3689
  405929:	mov    edx,0xfffe0000
  40592e:	xor    eax,eax
  405930:	mov    rdi,r14
  405933:	call   401690 <strstr@plt+0x4c0>
  405938:	mov    esi,0x2397
  40593d:	jmp    406020 <strstr@plt+0x4e50>
  405942:	mov    esi,0x270a
  405947:	jmp    405b70 <strstr@plt+0x49a0>
  40594c:	mov    esi,0x2503
  405951:	mov    edx,0xfffffff5
  405956:	mov    ecx,0xfffe0000
  40595b:	jmp    405c22 <strstr@plt+0x4a52>
  405960:	mov    esi,0x2a8d
  405965:	mov    edx,0xfffe0000
  40596a:	mov    ecx,0x28
  40596f:	mov    r8d,0x10
  405975:	mov    r9d,0x10
  40597b:	jmp    405a6d <strstr@plt+0x489d>
  405980:	mov    esi,0x28b1
  405985:	jmp    406020 <strstr@plt+0x4e50>
  40598a:	sub    rsp,0x8
  40598e:	mov    esi,0x2f88
  405993:	mov    edx,0xfffffff4
  405998:	mov    ecx,0x18
  40599d:	mov    r8d,0x8
  4059a3:	mov    r9d,0xffffffff
  4059a9:	mov    eax,0x0
  4059ae:	mov    rdi,r14
  4059b1:	push   0x10
  4059b3:	push   0x4
  4059b5:	push   0x4
  4059b7:	call   401690 <strstr@plt+0x4c0>
  4059bc:	add    rsp,0x20
  4059c0:	mov    esi,0x2fe7
  4059c5:	mov    edx,0x10
  4059ca:	mov    ecx,0x6
  4059cf:	mov    r8d,0x2
  4059d5:	mov    r9d,0x4
  4059db:	mov    eax,0x0
  4059e0:	mov    rdi,r14
  4059e3:	push   0xc
  4059e5:	push   0xfffffffffffff484
  4059ea:	push   0xfffffffffffff484
  4059ef:	push   0xfb
  4059f4:	call   401690 <strstr@plt+0x4c0>
  4059f9:	add    rsp,0x20
  4059fd:	jmp    40602a <strstr@plt+0x4e5a>
  405a02:	mov    esi,0x265c
  405a07:	jmp    405b70 <strstr@plt+0x49a0>
  405a0c:	mov    esi,0x2724
  405a11:	jmp    405c44 <strstr@plt+0x4a74>
  405a16:	mov    esi,0x37e1
  405a1b:	xor    eax,eax
  405a1d:	mov    rdi,r14
  405a20:	call   401690 <strstr@plt+0x4c0>
  405a25:	mov    esi,0x37e9
  405a2a:	mov    edx,0xfffff530
  405a2f:	mov    ecx,0xfffffffe
  405a34:	xor    eax,eax
  405a36:	mov    rdi,r14
  405a39:	call   401690 <strstr@plt+0x4c0>
  405a3e:	mov    esi,0x37f8
  405a43:	mov    edx,0xfffff520
  405a48:	xor    eax,eax
  405a4a:	mov    rdi,r14
  405a4d:	call   401690 <strstr@plt+0x4c0>
  405a52:	mov    esi,0x37fe
  405a57:	mov    edx,0xfffff530
  405a5c:	mov    ecx,0xffffffff
  405a61:	mov    r8d,0x10
  405a67:	mov    r9d,0x18
  405a6d:	xor    eax,eax
  405a6f:	mov    rdi,r14
  405a72:	call   401690 <strstr@plt+0x4c0>
  405a77:	jmp    40602a <strstr@plt+0x4e5a>
  405a7c:	mov    esi,0x1e72
  405a81:	xor    eax,eax
  405a83:	mov    rdi,r14
  405a86:	call   401690 <strstr@plt+0x4c0>
  405a8b:	xor    ebx,ebx
  405a8d:	mov    esi,0x23fb
  405a92:	mov    edx,0xfffe0000
  405a97:	xor    eax,eax
  405a99:	mov    rdi,r14
  405a9c:	call   401690 <strstr@plt+0x4c0>
  405aa1:	mov    esi,0x2399
  405aa6:	xor    eax,eax
  405aa8:	mov    rdi,r14
  405aab:	call   401690 <strstr@plt+0x4c0>
  405ab0:	mov    eax,r12d
  405ab3:	or     eax,0x1
  405ab6:	cmp    eax,0x5
  405ab9:	jne    405b14 <strstr@plt+0x4944>
  405abb:	sub    rsp,0x8
  405abf:	mov    esi,0x240f
  405ac4:	mov    edx,0xfffffff5
  405ac9:	mov    ecx,0xfffffff5
  405ace:	mov    r8d,0xfffffffd
  405ad4:	mov    r9d,0xfffffff4
  405ada:	xor    eax,eax
  405adc:	mov    rdi,r14
  405adf:	push   0xfffffffffffffff3
  405ae1:	call   401690 <strstr@plt+0x4c0>
  405ae6:	add    rsp,0x10
  405aea:	mov    esi,0x2450
  405aef:	mov    edx,0x10
  405af4:	mov    ecx,0x6
  405af9:	mov    r8d,0x10
  405aff:	xor    eax,eax
  405b01:	mov    rdi,r14
  405b04:	call   401690 <strstr@plt+0x4c0>
  405b09:	test   bl,bl
  405b0b:	je     405b41 <strstr@plt+0x4971>
  405b0d:	mov    esi,0x2464
  405b12:	jmp    405b46 <strstr@plt+0x4976>
  405b14:	mov    esi,0x2473
  405b19:	mov    edx,0xfffffff5
  405b1e:	xor    eax,eax
  405b20:	mov    rdi,r14
  405b23:	call   401690 <strstr@plt+0x4c0>
  405b28:	mov    esi,0x245f
  405b2d:	xor    eax,eax
  405b2f:	mov    rdi,r14
  405b32:	call   401690 <strstr@plt+0x4c0>
  405b37:	mov    esi,0x247f
  405b3c:	jmp    406020 <strstr@plt+0x4e50>
  405b41:	mov    esi,0x2468
  405b46:	xor    eax,eax
  405b48:	mov    rdi,r14
  405b4b:	call   401690 <strstr@plt+0x4c0>
  405b50:	mov    esi,0x246e
  405b55:	jmp    406020 <strstr@plt+0x4e50>
  405b5a:	mov    esi,0x2547
  405b5f:	jmp    406020 <strstr@plt+0x4e50>
  405b64:	mov    esi,0x2761
  405b69:	jmp    405b70 <strstr@plt+0x49a0>
  405b6b:	mov    esi,0x26b3
  405b70:	mov    edx,0xfffeffff
  405b75:	xor    eax,eax
  405b77:	mov    rdi,r14
  405b7a:	call   401690 <strstr@plt+0x4c0>
  405b7f:	mov    esi,0x25a5
  405b84:	jmp    406020 <strstr@plt+0x4e50>
  405b89:	mov    esi,0x28d4
  405b8e:	jmp    406020 <strstr@plt+0x4e50>
  405b93:	mov    esi,0x3017
  405b98:	mov    edx,0x4
  405b9d:	mov    ecx,0x4
  405ba2:	mov    r8d,0x18
  405ba8:	mov    r9d,0x8
  405bae:	mov    eax,0x0
  405bb3:	mov    rdi,r14
  405bb6:	push   0x10
  405bb8:	push   0x10
  405bba:	call   401690 <strstr@plt+0x4c0>
  405bbf:	add    rsp,0x8
  405bc3:	mov    esi,0x30ad
  405bc8:	mov    edx,0x4
  405bcd:	mov    ecx,0xfb
  405bd2:	mov    r8d,0xfffff484
  405bd8:	mov    r9d,0xfffff484
  405bde:	xor    eax,eax
  405be0:	mov    rdi,r14
  405be3:	push   0xc
  405be5:	jmp    405f50 <strstr@plt+0x4d80>
  405bea:	mov    esi,0x25c0
  405bef:	mov    edx,0xfffffffb
  405bf4:	mov    ecx,0xc
  405bf9:	mov    r8d,0xfffffff4
  405bff:	xor    eax,eax
  405c01:	mov    rdi,r14
  405c04:	call   401690 <strstr@plt+0x4c0>
  405c09:	mov    esi,0x2610
  405c0e:	jmp    406020 <strstr@plt+0x4e50>
  405c13:	mov    esi,0x2564
  405c18:	mov    edx,0xfffffffe
  405c1d:	mov    ecx,0xfffffffd
  405c22:	xor    eax,eax
  405c24:	mov    rdi,r14
  405c27:	call   401690 <strstr@plt+0x4c0>
  405c2c:	jmp    40602a <strstr@plt+0x4e5a>
  405c31:	mov    esi,0x2676
  405c36:	jmp    405c44 <strstr@plt+0x4a74>
  405c38:	mov    esi,0x277b
  405c3d:	jmp    405c44 <strstr@plt+0x4a74>
  405c3f:	mov    esi,0x26cd
  405c44:	mov    edx,0xfffeffff
  405c49:	mov    ecx,0xfffeffff
  405c4e:	xor    eax,eax
  405c50:	mov    rdi,r14
  405c53:	call   401690 <strstr@plt+0x4c0>
  405c58:	mov    esi,0x25a5
  405c5d:	jmp    406020 <strstr@plt+0x4e50>
  405c62:	mov    esi,0x296c
  405c67:	mov    edx,0x14
  405c6c:	mov    ecx,0x6
  405c71:	mov    r8d,0x10
  405c77:	mov    r9d,0xfffffffc
  405c7d:	mov    eax,0x0
  405c82:	mov    rdi,r14
  405c85:	push   0xfffffffffffff448
  405c8a:	push   0x3
  405c8c:	push   0x4
  405c8e:	push   0xfffffffffffffff6
  405c90:	push   0xfffffffffffffffc
  405c92:	push   0x4
  405c94:	call   401690 <strstr@plt+0x4c0>
  405c99:	add    rsp,0x30
  405c9d:	mov    esi,0x29cc
  405ca2:	jmp    406020 <strstr@plt+0x4e50>
  405ca7:	mov    esi,0x36c2
  405cac:	jmp    405fcf <strstr@plt+0x4dff>
  405cb1:	mov    esi,0x36dc
  405cb6:	mov    edx,0x7e
  405cbb:	mov    ecx,0xffffff80
  405cc0:	mov    r8d,0x1
  405cc6:	xor    eax,eax
  405cc8:	mov    rdi,r14
  405ccb:	call   401690 <strstr@plt+0x4c0>
  405cd0:	jmp    40602a <strstr@plt+0x4e5a>
  405cd5:	mov    esi,0x288c
  405cda:	mov    edx,0xfffffff5
  405cdf:	jmp    405fd4 <strstr@plt+0x4e04>
  405ce4:	mov    esi,0x2589
  405ce9:	mov    edx,0xfffeffff
  405cee:	xor    ecx,ecx
  405cf0:	mov    r8d,0x80000000
  405cf6:	xor    eax,eax
  405cf8:	mov    rdi,r14
  405cfb:	call   401690 <strstr@plt+0x4c0>
  405d00:	jmp    40602a <strstr@plt+0x4e5a>
  405d05:	mov    esi,0x28f6
  405d0a:	jmp    406020 <strstr@plt+0x4e50>
  405d0f:	mov    esi,0x2d52
  405d14:	mov    edx,0xfffffff4
  405d19:	mov    ecx,0x18
  405d1e:	mov    r8d,0x8
  405d24:	mov    r9d,0xffffffff
  405d2a:	mov    eax,0x0
  405d2f:	mov    rdi,r14
  405d32:	push   0x1
  405d34:	push   0x6
  405d36:	push   0x10
  405d38:	push   0x10
  405d3a:	call   401690 <strstr@plt+0x4c0>
  405d3f:	add    rsp,0x20
  405d43:	mov    esi,0x2db2
  405d48:	mov    edx,0xffffffff
  405d4d:	jmp    405fd4 <strstr@plt+0x4e04>
  405d52:	mov    esi,0x2e88
  405d57:	mov    edx,0xfffffff4
  405d5c:	mov    ecx,0x1c
  405d61:	mov    r8d,0x8
  405d67:	mov    r9d,0x18
  405d6d:	mov    eax,0x0
  405d72:	mov    rdi,r14
  405d75:	push   0xffffffffffffffff
  405d77:	push   0x8
  405d79:	push   0xfffffffffffffffb
  405d7b:	push   0xc
  405d7d:	push   0x14
  405d7f:	push   0x6
  405d81:	call   401690 <strstr@plt+0x4c0>
  405d86:	add    rsp,0x28
  405d8a:	mov    esi,0x2ed5
  405d8f:	mov    edx,0x4
  405d94:	mov    ecx,0x4
  405d99:	mov    r8d,0x10
  405d9f:	mov    r9d,0x10
  405da5:	mov    eax,0x0
  405daa:	mov    rdi,r14
  405dad:	push   0x10
  405daf:	push   0x2
  405db1:	push   0x6
  405db3:	call   401690 <strstr@plt+0x4c0>
  405db8:	add    rsp,0x18
  405dbc:	mov    esi,0x2f2c
  405dc1:	mov    edx,0x10
  405dc6:	mov    ecx,0x6
  405dcb:	mov    r8d,0x2
  405dd1:	mov    r9d,0xfffffffb
  405dd7:	mov    eax,0x0
  405ddc:	mov    rdi,r14
  405ddf:	push   0xc
  405de1:	push   0xfffffffffffff484
  405de6:	push   0xfffffffffffff484
  405deb:	push   0xfb
  405df0:	push   0x4
  405df2:	push   0x10
  405df4:	push   0x10
  405df6:	call   401690 <strstr@plt+0x4c0>
  405dfb:	add    rsp,0x40
  405dff:	jmp    40602a <strstr@plt+0x4e5a>
  405e04:	mov    esi,0x288c
  405e09:	mov    edx,0xfffffffb
  405e0e:	jmp    405fd4 <strstr@plt+0x4e04>
  405e13:	mov    esi,0x2bfb
  405e18:	mov    edx,0x8
  405e1d:	jmp    405fd4 <strstr@plt+0x4e04>
  405e22:	mov    esi,0x2c0f
  405e27:	mov    edx,0xfffffff4
  405e2c:	mov    ecx,0xfffeffff
  405e31:	mov    r8d,0x18
  405e37:	mov    r9d,0x8
  405e3d:	mov    eax,0x0
  405e42:	mov    rdi,r14
  405e45:	push   0x10
  405e47:	push   0xffffffffffffffff
  405e49:	call   401690 <strstr@plt+0x4c0>
  405e4e:	add    rsp,0x8
  405e52:	mov    esi,0x2c85
  405e57:	mov    edx,0x10
  405e5c:	mov    ecx,0x6
  405e61:	mov    r8d,0x1
  405e67:	mov    r9d,0xffffffff
  405e6d:	xor    eax,eax
  405e6f:	mov    rdi,r14
  405e72:	push   0xfffffffffffffffb
  405e74:	jmp    405f50 <strstr@plt+0x4d80>
  405e79:	sub    rsp,0x8
  405e7d:	mov    esi,0x2b84
  405e82:	mov    edx,0xfffff468
  405e87:	mov    ecx,0xfffff46c
  405e8c:	mov    r8d,0x10
  405e92:	jmp    405eef <strstr@plt+0x4d1f>
  405e94:	sub    rsp,0x8
  405e98:	mov    esi,0x29d8
  405e9d:	mov    edx,0x14
  405ea2:	mov    ecx,0x10
  405ea7:	mov    r8d,0xfffffffb
  405ead:	mov    r9d,0x4
  405eb3:	mov    eax,0x0
  405eb8:	mov    rdi,r14
  405ebb:	push   0xfffffffffffff448
  405ec0:	push   0x6
  405ec2:	push   0x3
  405ec4:	push   0x4
  405ec6:	push   0x4
  405ec8:	call   401690 <strstr@plt+0x4c0>
  405ecd:	add    rsp,0x30
  405ed1:	jmp    40602a <strstr@plt+0x4e5a>
  405ed6:	sub    rsp,0x8
  405eda:	mov    esi,0x2b08
  405edf:	mov    edx,0x10
  405ee4:	mov    ecx,0xfffff468
  405ee9:	mov    r8d,0xfffff46c
  405eef:	mov    r9d,0x10
  405ef5:	xor    eax,eax
  405ef7:	mov    rdi,r14
  405efa:	push   0xfffffffffffffff4
  405efc:	jmp    405f50 <strstr@plt+0x4d80>
  405efe:	mov    esi,0x31f7
  405f03:	mov    edx,0x18
  405f08:	mov    ecx,0x8
  405f0d:	mov    r8d,0xffffffff
  405f13:	mov    r9d,0xfffe0000
  405f19:	mov    eax,0x0
  405f1e:	mov    rdi,r14
  405f21:	push   0x18
  405f23:	push   0x1c
  405f25:	call   401690 <strstr@plt+0x4c0>
  405f2a:	add    rsp,0x8
  405f2e:	mov    esi,0x328f
  405f33:	mov    edx,0x14
  405f38:	mov    ecx,0x4
  405f3d:	mov    r8d,0xffffffff
  405f43:	mov    r9d,0x8
  405f49:	xor    eax,eax
  405f4b:	mov    rdi,r14
  405f4e:	push   0x0
  405f50:	call   401690 <strstr@plt+0x4c0>
  405f55:	add    rsp,0x10
  405f59:	jmp    40602a <strstr@plt+0x4e5a>
  405f5e:	mov    esi,0x21e4
  405f63:	jmp    406020 <strstr@plt+0x4e50>
  405f68:	mov    esi,0x372f
  405f6d:	mov    edx,0x3
  405f72:	mov    ecx,0x20
  405f77:	mov    r8d,0xffffffc2
  405f7d:	mov    r9d,0xffffffff
  405f83:	xor    eax,eax
  405f85:	mov    rdi,r14
  405f88:	call   401690 <strstr@plt+0x4c0>
  405f8d:	mov    esi,0x3790
  405f92:	mov    edx,0xffffffcc
  405f97:	xor    eax,eax
  405f99:	mov    rdi,r14
  405f9c:	call   401690 <strstr@plt+0x4c0>
  405fa1:	mov    esi,0x37a9
  405fa6:	mov    edx,0xffffffff
  405fab:	jmp    405fd4 <strstr@plt+0x4e04>
  405fad:	mov    esi,0x2383
  405fb2:	jmp    405fc0 <strstr@plt+0x4df0>
  405fb4:	mov    esi,0x2388
  405fb9:	jmp    405fc0 <strstr@plt+0x4df0>
  405fbb:	mov    esi,0x237e
  405fc0:	xor    eax,eax
  405fc2:	mov    rdi,r14
  405fc5:	call   401690 <strstr@plt+0x4c0>
  405fca:	mov    esi,0x238d
  405fcf:	mov    edx,0xfffe0000
  405fd4:	xor    eax,eax
  405fd6:	mov    rdi,r14
  405fd9:	call   401690 <strstr@plt+0x4c0>
  405fde:	jmp    40602a <strstr@plt+0x4e5a>
  405fe0:	mov    esi,0x27b8
  405fe5:	mov    edx,0xfffeffff
  405fea:	xor    eax,eax
  405fec:	mov    rdi,r14
  405fef:	call   401690 <strstr@plt+0x4c0>
  405ff4:	jmp    40600f <strstr@plt+0x4e3f>
  405ff6:	mov    esi,0x27d2
  405ffb:	mov    edx,0xfffeffff
  406000:	mov    ecx,0xfffeffff
  406005:	xor    eax,eax
  406007:	mov    rdi,r14
  40600a:	call   401690 <strstr@plt+0x4c0>
  40600f:	mov    esi,0x2815
  406014:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40601e:	xchg   ax,ax
  406020:	xor    eax,eax
  406022:	mov    rdi,r14
  406025:	call   401690 <strstr@plt+0x4c0>
  40602a:	add    r12,0x1
  40602e:	cmp    r12d,0x5d
  406032:	jb     404fa0 <strstr@plt+0x3dd0>
  406038:	pop    rbx
  406039:	pop    r12
  40603b:	pop    r14
  40603d:	pop    r15
  40603f:	pop    rbp
  406040:	ret    
  406041:	mov    rax,QWORD PTR [rip+0xcfa8]        # 412ff0 <strstr@plt+0x11e20>
  406048:	mov    rdi,QWORD PTR [rax]
  40604b:	lea    rax,[rip+0xba5e]        # 411ab0 <strstr@plt+0x108e0>
  406052:	mov    rdx,QWORD PTR [rax+r12*8]
  406056:	lea    rsi,[rip+0x7eb9]        # 40df16 <strstr@plt+0xcd46>
  40605d:	xor    eax,eax
  40605f:	call   401120 <fprintf@plt>
  406064:	mov    edi,0x2
  406069:	call   4011a0 <exit@plt>
  40606e:	mov    edi,0x1
  406073:	call   4011a0 <exit@plt>
  406078:	nop    DWORD PTR [rax+rax*1+0x0]
  406080:	push   rbp
  406081:	push   r15
  406083:	push   r14
  406085:	push   r13
  406087:	push   r12
  406089:	push   rbx
  40608a:	sub    rsp,0x48
  40608e:	mov    r15,rdi
  406091:	lea    r12,[rdi+0x10]
  406095:	mov    rdi,QWORD PTR [rdi+0x10]
  406099:	mov    rdx,QWORD PTR [r15+0x88]
  4060a0:	lea    rsi,[rip+0x8e63]        # 40ef0a <strstr@plt+0xdd3a>
  4060a7:	xor    eax,eax
  4060a9:	call   401120 <fprintf@plt>
  4060ae:	mov    rcx,QWORD PTR [r15+0x10]
  4060b2:	lea    rdi,[rip+0x8e6b]        # 40ef24 <strstr@plt+0xdd54>
  4060b9:	mov    esi,0x7
  4060be:	mov    edx,0x1
  4060c3:	call   4011b0 <fwrite@plt>
  4060c8:	cmp    DWORD PTR [r15+0x8],0x2
  4060cd:	jae    4060dc <strstr@plt+0x4f0c>
  4060cf:	mov    rdi,QWORD PTR [r12]
  4060d3:	lea    rsi,[rip+0x8eac]        # 40ef86 <strstr@plt+0xddb6>
  4060da:	jmp    4060e9 <strstr@plt+0x4f19>
  4060dc:	jne    4060f5 <strstr@plt+0x4f25>
  4060de:	mov    rdi,QWORD PTR [r12]
  4060e2:	lea    rsi,[rip+0x8eab]        # 40ef94 <strstr@plt+0xddc4>
  4060e9:	mov    edx,0x4
  4060ee:	xor    eax,eax
  4060f0:	call   401120 <fprintf@plt>
  4060f5:	mov    rsi,QWORD PTR [r15+0x70]
  4060f9:	xor    edx,edx
  4060fb:	xor    ecx,ecx
  4060fd:	mov    rdi,r15
  406100:	call   4065c0 <strstr@plt+0x53f0>
  406105:	cmp    DWORD PTR [r15+0x8],0x2
  40610a:	je     406126 <strstr@plt+0x4f56>
  40610c:	mov    rcx,QWORD PTR [r12]
  406110:	lea    rdi,[rip+0x8e15]        # 40ef2c <strstr@plt+0xdd5c>
  406117:	mov    esi,0x9
  40611c:	mov    edx,0x1
  406121:	call   4011b0 <fwrite@plt>
  406126:	cmp    DWORD PTR [r15+0x40],0x0
  40612b:	jle    406515 <strstr@plt+0x5345>
  406131:	xor    edx,edx
  406133:	xor    ebx,ebx
  406135:	mov    QWORD PTR [rsp+0x28],r15
  40613a:	nop    WORD PTR [rax+rax*1+0x0]
  406140:	mov    rax,QWORD PTR [r15+0x58]
  406144:	mov    rcx,rdx
  406147:	shl    rcx,0x4
  40614b:	mov    ebp,DWORD PTR [rax+rcx*1+0x8]
  40614f:	add    rdx,0x1
  406153:	mov    QWORD PTR [rsp+0x38],rdx
  406158:	shl    rdx,0x4
  40615c:	mov    r14d,DWORD PTR [rax+rdx*1+0x8]
  406161:	mov    rsi,QWORD PTR [rax+rcx*1]
  406165:	mov    DWORD PTR [rsp+0x24],r14d
  40616a:	sub    r14d,ebp
  40616d:	mov    ecx,0x1
  406172:	mov    rdi,r15
  406175:	mov    edx,r14d
  406178:	call   4065c0 <strstr@plt+0x53f0>
  40617d:	cmp    ebx,DWORD PTR [r15+0x44]
  406181:	jge    406450 <strstr@plt+0x5280>
  406187:	movsxd rbx,ebx
  40618a:	nop    WORD PTR [rax+rax*1+0x0]
  406190:	mov    eax,ebp
  406192:	lea    rbp,[rbx+rbx*2]
  406196:	mov    ecx,DWORD PTR [r15+rbp*4+0x90]
  40619e:	cmp    ecx,DWORD PTR [rsp+0x24]
  4061a2:	jg     406460 <strstr@plt+0x5290>
  4061a8:	mov    DWORD PTR [rsp+0x14],ecx
  4061ac:	mov    esi,ecx
  4061ae:	sub    esi,eax
  4061b0:	cmp    DWORD PTR [r15+0x8],0x2
  4061b5:	mov    QWORD PTR [rsp+0x8],rbx
  4061ba:	jne    406220 <strstr@plt+0x5050>
  4061bc:	cmp    DWORD PTR [r15+rbp*4+0x98],0x0
  4061c5:	je     406220 <strstr@plt+0x5050>
  4061c7:	mov    rcx,QWORD PTR [r15+0x60]
  4061cb:	movsxd rdx,DWORD PTR [r15+rbp*4+0x94]
  4061d3:	mov    rdx,QWORD PTR [rcx+rdx*8]
  4061d7:	test   esi,esi
  4061d9:	jle    406598 <strstr@plt+0x53c8>
  4061df:	movsxd r13,eax
  4061e2:	add    r13,QWORD PTR [r15+0x28]
  4061e6:	movsxd rax,esi
  4061e9:	lea    rdi,[rax-0x1]
  4061ed:	movzx  ecx,BYTE PTR [r13+rdi*1+0x0]
  4061f3:	cmp    rcx,0xe8
  4061fa:	mov    QWORD PTR [rsp+0x40],rdx
  4061ff:	je     40633f <strstr@plt+0x516f>
  406205:	cmp    cl,0xe9
  406208:	jne    40634d <strstr@plt+0x517d>
  40620e:	lea    rax,[rip+0x8e2a]        # 40f03f <strstr@plt+0xde6f>
  406215:	mov    QWORD PTR [rsp+0x30],rax
  40621a:	jmp    40638d <strstr@plt+0x51bd>
  40621f:	nop
  406220:	mov    DWORD PTR [rsp+0x18],esi
  406224:	test   esi,esi
  406226:	jle    406295 <strstr@plt+0x50c5>
  406228:	movsxd rbx,eax
  40622b:	mov    rax,QWORD PTR [rsp+0x28]
  406230:	add    rbx,QWORD PTR [rax+0x28]
  406234:	mov    r13d,DWORD PTR [rsp+0x18]
  406239:	xor    r15d,r15d
  40623c:	nop    DWORD PTR [rax+0x0]
  406240:	mov    r14d,r15d
  406243:	mov    rdi,QWORD PTR [r12]
  406247:	movzx  edx,BYTE PTR [rbx+r15*1]
  40624c:	xor    eax,eax
  40624e:	and    r14d,0xf
  406252:	je     406280 <strstr@plt+0x50b0>
  406254:	lea    rsi,[rip+0x8e68]        # 40f0c3 <strstr@plt+0xdef3>
  40625b:	call   401120 <fprintf@plt>
  406260:	cmp    r14d,0xf
  406264:	jne    40628c <strstr@plt+0x50bc>
  406266:	mov    rsi,QWORD PTR [r12]
  40626a:	mov    edi,0xa
  40626f:	call   401110 <putc@plt>
  406274:	jmp    40628c <strstr@plt+0x50bc>
  406276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406280:	lea    rsi,[rip+0x8e32]        # 40f0b9 <strstr@plt+0xdee9>
  406287:	call   401120 <fprintf@plt>
  40628c:	add    r15,0x1
  406290:	cmp    r13,r15
  406293:	jne    406240 <strstr@plt+0x5070>
  406295:	test   BYTE PTR [rsp+0x18],0xf
  40629a:	je     4062aa <strstr@plt+0x50da>
  40629c:	mov    rsi,QWORD PTR [r12]
  4062a0:	mov    edi,0xa
  4062a5:	call   401110 <putc@plt>
  4062aa:	mov    r15,QWORD PTR [rsp+0x28]
  4062af:	mov    ebx,DWORD PTR [r15+rbp*4+0x98]
  4062b7:	mov    rax,QWORD PTR [r15+0x60]
  4062bb:	movsxd rcx,DWORD PTR [r15+rbp*4+0x94]
  4062c3:	mov    r14,QWORD PTR [rax+rcx*8]
  4062c7:	mov    eax,DWORD PTR [r15+0x8]
  4062cb:	cmp    eax,0x1
  4062ce:	je     4062f0 <strstr@plt+0x5120>
  4062d0:	test   eax,eax
  4062d2:	mov    ebp,DWORD PTR [rsp+0x14]
  4062d6:	jne    406320 <strstr@plt+0x5150>
  4062d8:	mov    rdi,QWORD PTR [r12]
  4062dc:	test   ebx,ebx
  4062de:	jne    406311 <strstr@plt+0x5141>
  4062e0:	jmp    406324 <strstr@plt+0x5154>
  4062e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062ec:	nop    DWORD PTR [rax+0x0]
  4062f0:	mov    rdi,QWORD PTR [r12]
  4062f4:	xor    eax,eax
  4062f6:	lea    rsi,[rip+0x8cf1]        # 40efee <strstr@plt+0xde1e>
  4062fd:	mov    rdx,r14
  406300:	call   401120 <fprintf@plt>
  406305:	mov    rdi,QWORD PTR [r12]
  406309:	test   ebx,ebx
  40630b:	mov    ebp,DWORD PTR [rsp+0x14]
  40630f:	je     406324 <strstr@plt+0x5154>
  406311:	xor    eax,eax
  406313:	lea    rsi,[rip+0x8dad]        # 40f0c7 <strstr@plt+0xdef7>
  40631a:	jmp    40632d <strstr@plt+0x515d>
  40631c:	nop    DWORD PTR [rax+0x0]
  406320:	mov    rdi,QWORD PTR [r12]
  406324:	xor    eax,eax
  406326:	lea    rsi,[rip+0x8da9]        # 40f0d6 <strstr@plt+0xdf06>
  40632d:	mov    rdx,r14
  406330:	call   401120 <fprintf@plt>
  406335:	mov    rbx,QWORD PTR [rsp+0x8]
  40633a:	jmp    40642f <strstr@plt+0x525f>
  40633f:	lea    rax,[rip+0x7130]        # 40d476 <strstr@plt+0xc2a6>
  406346:	mov    QWORD PTR [rsp+0x30],rax
  40634b:	jmp    40638d <strstr@plt+0x51bd>
  40634d:	test   cl,cl
  40634f:	jns    406598 <strstr@plt+0x53c8>
  406355:	cmp    esi,0x2
  406358:	jl     406598 <strstr@plt+0x53c8>
  40635e:	cmp    cl,0x8f
  406361:	ja     406598 <strstr@plt+0x53c8>
  406367:	cmp    BYTE PTR [r13+rax*1-0x2],0xf
  40636d:	jne    406598 <strstr@plt+0x53c8>
  406373:	add    rax,0xfffffffffffffffe
  406377:	lea    rdx,[rip+0xc8b2]        # 412c30 <strstr@plt+0x11a60>
  40637e:	mov    rcx,QWORD PTR [rdx+rcx*8-0x400]
  406386:	mov    QWORD PTR [rsp+0x30],rcx
  40638b:	mov    edi,eax
  40638d:	mov    QWORD PTR [rsp+0x18],rdi
  406392:	test   edi,edi
  406394:	jle    4063f5 <strstr@plt+0x5225>
  406396:	mov    r14d,DWORD PTR [rsp+0x18]
  40639b:	xor    ebp,ebp
  40639d:	nop    DWORD PTR [rax]
  4063a0:	mov    ebx,ebp
  4063a2:	mov    rdi,QWORD PTR [r12]
  4063a6:	movzx  edx,BYTE PTR [r13+rbp*1+0x0]
  4063ac:	xor    eax,eax
  4063ae:	and    ebx,0xf
  4063b1:	je     4063e0 <strstr@plt+0x5210>
  4063b3:	lea    rsi,[rip+0x8d09]        # 40f0c3 <strstr@plt+0xdef3>
  4063ba:	call   401120 <fprintf@plt>
  4063bf:	cmp    ebx,0xf
  4063c2:	jne    4063ec <strstr@plt+0x521c>
  4063c4:	mov    rsi,QWORD PTR [r12]
  4063c8:	mov    edi,0xa
  4063cd:	call   401110 <putc@plt>
  4063d2:	jmp    4063ec <strstr@plt+0x521c>
  4063d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063de:	xchg   ax,ax
  4063e0:	lea    rsi,[rip+0x8cd2]        # 40f0b9 <strstr@plt+0xdee9>
  4063e7:	call   401120 <fprintf@plt>
  4063ec:	add    rbp,0x1
  4063f0:	cmp    r14,rbp
  4063f3:	jne    4063a0 <strstr@plt+0x51d0>
  4063f5:	test   BYTE PTR [rsp+0x18],0xf
  4063fa:	je     40640a <strstr@plt+0x523a>
  4063fc:	mov    rsi,QWORD PTR [r12]
  406400:	mov    edi,0xa
  406405:	call   401110 <putc@plt>
  40640a:	mov    rdi,QWORD PTR [r12]
  40640e:	xor    eax,eax
  406410:	lea    rsi,[rip+0x8c61]        # 40f078 <strstr@plt+0xdea8>
  406417:	mov    rdx,QWORD PTR [rsp+0x30]
  40641c:	mov    rcx,QWORD PTR [rsp+0x40]
  406421:	call   401120 <fprintf@plt>
  406426:	mov    rbx,QWORD PTR [rsp+0x8]
  40642b:	mov    ebp,DWORD PTR [rsp+0x14]
  40642f:	add    ebp,0x4
  406432:	add    rbx,0x1
  406436:	movsxd rax,DWORD PTR [r15+0x44]
  40643a:	cmp    rbx,rax
  40643d:	jl     406190 <strstr@plt+0x4fc0>
  406443:	jmp    406462 <strstr@plt+0x5292>
  406445:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40644f:	nop
  406450:	mov    QWORD PTR [rsp+0x8],rbx
  406455:	test   r14d,r14d
  406458:	jg     406474 <strstr@plt+0x52a4>
  40645a:	jmp    4064e5 <strstr@plt+0x5315>
  40645f:	nop
  406460:	mov    ebp,eax
  406462:	mov    QWORD PTR [rsp+0x8],rbx
  406467:	mov    r14d,DWORD PTR [rsp+0x24]
  40646c:	sub    r14d,ebp
  40646f:	test   r14d,r14d
  406472:	jle    4064e5 <strstr@plt+0x5315>
  406474:	movsxd r13,ebp
  406477:	mov    rax,QWORD PTR [rsp+0x28]
  40647c:	add    r13,QWORD PTR [rax+0x28]
  406480:	mov    r15d,r14d
  406483:	xor    ebp,ebp
  406485:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40648f:	nop
  406490:	mov    ebx,ebp
  406492:	mov    rdi,QWORD PTR [r12]
  406496:	movzx  edx,BYTE PTR [r13+rbp*1+0x0]
  40649c:	xor    eax,eax
  40649e:	and    ebx,0xf
  4064a1:	je     4064d0 <strstr@plt+0x5300>
  4064a3:	lea    rsi,[rip+0x8c19]        # 40f0c3 <strstr@plt+0xdef3>
  4064aa:	call   401120 <fprintf@plt>
  4064af:	cmp    ebx,0xf
  4064b2:	jne    4064dc <strstr@plt+0x530c>
  4064b4:	mov    rsi,QWORD PTR [r12]
  4064b8:	mov    edi,0xa
  4064bd:	call   401110 <putc@plt>
  4064c2:	jmp    4064dc <strstr@plt+0x530c>
  4064c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064ce:	xchg   ax,ax
  4064d0:	lea    rsi,[rip+0x8be2]        # 40f0b9 <strstr@plt+0xdee9>
  4064d7:	call   401120 <fprintf@plt>
  4064dc:	add    rbp,0x1
  4064e0:	cmp    r15,rbp
  4064e3:	jne    406490 <strstr@plt+0x52c0>
  4064e5:	test   r14b,0xf
  4064e9:	je     4064f9 <strstr@plt+0x5329>
  4064eb:	mov    rsi,QWORD PTR [r12]
  4064ef:	mov    edi,0xa
  4064f4:	call   401110 <putc@plt>
  4064f9:	mov    r15,QWORD PTR [rsp+0x28]
  4064fe:	movsxd rax,DWORD PTR [r15+0x40]
  406502:	mov    rdx,QWORD PTR [rsp+0x38]
  406507:	cmp    rdx,rax
  40650a:	mov    rbx,QWORD PTR [rsp+0x8]
  40650f:	jl     406140 <strstr@plt+0x4f70>
  406515:	mov    rsi,QWORD PTR [r15+0x10]
  406519:	mov    edi,0xa
  40651e:	call   4010d0 <fputc@plt>
  406523:	mov    eax,DWORD PTR [r15+0x8]
  406527:	cmp    eax,0x2
  40652a:	je     406563 <strstr@plt+0x5393>
  40652c:	cmp    eax,0x1
  40652f:	je     40654f <strstr@plt+0x537f>
  406531:	test   eax,eax
  406533:	jne    40657c <strstr@plt+0x53ac>
  406535:	mov    rcx,QWORD PTR [r12]
  406539:	lea    rdi,[rip+0x89f6]        # 40ef36 <strstr@plt+0xdd66>
  406540:	mov    esi,0x27
  406545:	mov    edx,0x1
  40654a:	call   4011b0 <fwrite@plt>
  40654f:	mov    rdi,QWORD PTR [r15+0x10]
  406553:	mov    rdx,QWORD PTR [r15+0x80]
  40655a:	lea    rsi,[rip+0x89fd]        # 40ef5e <strstr@plt+0xdd8e>
  406561:	jmp    406575 <strstr@plt+0x53a5>
  406563:	mov    rdi,QWORD PTR [r15+0x10]
  406567:	mov    rdx,QWORD PTR [r15+0x80]
  40656e:	lea    rsi,[rip+0x89f7]        # 40ef6c <strstr@plt+0xdd9c>
  406575:	xor    eax,eax
  406577:	call   401120 <fprintf@plt>
  40657c:	mov    rsi,QWORD PTR [r12]
  406580:	mov    edi,0xa
  406585:	add    rsp,0x48
  406589:	pop    rbx
  40658a:	pop    r12
  40658c:	pop    r13
  40658e:	pop    r14
  406590:	pop    r15
  406592:	pop    rbp
  406593:	jmp    4010d0 <fputc@plt>
  406598:	mov    rax,QWORD PTR [rip+0xca51]        # 412ff0 <strstr@plt+0x11e20>
  40659f:	mov    rdi,QWORD PTR [rax]
  4065a2:	lea    rsi,[rip+0x8a9a]        # 40f043 <strstr@plt+0xde73>
  4065a9:	xor    eax,eax
  4065ab:	call   401120 <fprintf@plt>
  4065b0:	mov    edi,0x1
  4065b5:	call   4011a0 <exit@plt>
  4065ba:	nop    WORD PTR [rax+rax*1+0x0]
  4065c0:	push   rbp
  4065c1:	push   r14
  4065c3:	push   rbx
  4065c4:	mov    r14,rsi
  4065c7:	mov    rbx,rdi
  4065ca:	mov    eax,DWORD PTR [rdi+0x8]
  4065cd:	cmp    eax,0x2
  4065d0:	je     406625 <strstr@plt+0x5455>
  4065d2:	mov    ebp,ecx
  4065d4:	cmp    eax,0x1
  4065d7:	je     406644 <strstr@plt+0x5474>
  4065d9:	test   eax,eax
  4065db:	jne    406620 <strstr@plt+0x5450>
  4065dd:	mov    r10d,edx
  4065e0:	mov    rdi,QWORD PTR [rbx+0x10]
  4065e4:	test   ebp,ebp
  4065e6:	lea    rax,[rip+0x89ed]        # 40efda <strstr@plt+0xde0a>
  4065ed:	lea    r9,[rip+0x8685]        # 40ec79 <strstr@plt+0xdaa9>
  4065f4:	cmove  r9,rax
  4065f8:	sub    rsp,0x8
  4065fc:	lea    rsi,[rip+0x899d]        # 40efa0 <strstr@plt+0xddd0>
  406603:	mov    eax,0x0
  406608:	mov    rdx,r14
  40660b:	mov    rcx,r14
  40660e:	mov    r8,r14
  406611:	push   r14
  406613:	push   r10
  406615:	push   r14
  406617:	call   401120 <fprintf@plt>
  40661c:	add    rsp,0x20
  406620:	pop    rbx
  406621:	pop    r14
  406623:	pop    rbp
  406624:	ret    
  406625:	mov    rdi,QWORD PTR [rbx+0x10]
  406629:	lea    rsi,[rip+0x89e2]        # 40f012 <strstr@plt+0xde42>
  406630:	xor    eax,eax
  406632:	mov    rdx,r14
  406635:	mov    rcx,r14
  406638:	mov    r8,r14
  40663b:	pop    rbx
  40663c:	pop    r14
  40663e:	pop    rbp
  40663f:	jmp    401120 <fprintf@plt>
  406644:	mov    rdi,QWORD PTR [rbx+0x10]
  406648:	lea    rsi,[rip+0x8992]        # 40efe1 <strstr@plt+0xde11>
  40664f:	xor    eax,eax
  406651:	mov    rdx,r14
  406654:	call   401120 <fprintf@plt>
  406659:	test   ebp,ebp
  40665b:	je     406672 <strstr@plt+0x54a2>
  40665d:	mov    rdi,QWORD PTR [rbx+0x10]
  406661:	lea    rsi,[rip+0x8986]        # 40efee <strstr@plt+0xde1e>
  406668:	xor    eax,eax
  40666a:	mov    rdx,r14
  40666d:	call   401120 <fprintf@plt>
  406672:	mov    rdi,QWORD PTR [rbx+0x10]
  406676:	lea    rsi,[rip+0x8958]        # 40efd5 <strstr@plt+0xde05>
  40667d:	xor    eax,eax
  40667f:	mov    rdx,r14
  406682:	pop    rbx
  406683:	pop    r14
  406685:	pop    rbp
  406686:	jmp    401120 <fprintf@plt>
  40668b:	nop    DWORD PTR [rax+rax*1+0x0]
  406690:	push   rbp
  406691:	mov    rbp,rsp
  406694:	push   r15
  406696:	push   r14
  406698:	push   r13
  40669a:	push   r12
  40669c:	push   rbx
  40669d:	and    rsp,0xffffffffffffffe0
  4066a1:	sub    rsp,0x140
  4066a8:	vxorps xmm0,xmm0,xmm0
  4066ac:	vmovups YMMWORD PTR [rsp+0x75],ymm0
  4066b2:	vmovups YMMWORD PTR [rsp+0xec],ymm0
  4066bb:	vmovups YMMWORD PTR [rsp+0xd5],ymm0
  4066c4:	vmovups YMMWORD PTR [rsp+0xb5],ymm0
  4066cd:	vmovups YMMWORD PTR [rsp+0x95],ymm0
  4066d6:	mov    r13,rdi
  4066d9:	mov    BYTE PTR [rsp+0x74],0x74
  4066de:	mov    DWORD PTR [rsp+0x70],0x7865742e
  4066e6:	mov    DWORD PTR [rsp+0x84],0xb4
  4066f1:	mov    eax,DWORD PTR [rdi+0x30]
  4066f4:	mov    DWORD PTR [rsp+0x80],eax
  4066fb:	lea    ecx,[rax+0xb4]
  406701:	mov    DWORD PTR [rsp+0x88],ecx
  406708:	mov    ecx,DWORD PTR [rdi+0x44]
  40670b:	movzx  ecx,cx
  40670e:	mov    WORD PTR [rsp+0x90],cx
  406716:	lea    ecx,[rcx+rcx*4]
  406719:	lea    ebx,[rax+rcx*2+0xb4]
  406720:	movabs rdx,0x6164702e60500020
  40672a:	mov    QWORD PTR [rsp+0x94],rdx
  406732:	mov    WORD PTR [rsp+0x9c],0x6174
  40673c:	mov    DWORD PTR [rsp+0xac],ebx
  406743:	mov    DWORD PTR [rsp+0xa8],0x18
  40674e:	lea    edx,[rax+rcx*2+0xcc]
  406755:	mov    DWORD PTR [rsp+0xb0],edx
  40675c:	mov    WORD PTR [rsp+0xb8],0x6
  406766:	lea    edx,[rax+rcx*2+0x108]
  40676d:	movabs rsi,0x6164782e40300040
  406777:	mov    QWORD PTR [rsp+0xbc],rsi
  40677f:	mov    WORD PTR [rsp+0xc4],0x6174
  406789:	mov    DWORD PTR [rsp+0xd4],edx
  406790:	mov    DWORD PTR [rsp+0xd0],0x20
  40679b:	lea    edx,[rax+rcx*2+0x128]
  4067a2:	mov    DWORD PTR [rsp+0xd8],edx
  4067a9:	mov    WORD PTR [rsp+0xe0],0x1
  4067b3:	lea    eax,[rax+rcx*2+0x132]
  4067ba:	mov    DWORD PTR [rsp+0xe4],0x40300040
  4067c5:	movabs rcx,0x5a2461746164722e
  4067cf:	mov    QWORD PTR [rsp+0xe8],rcx
  4067d7:	mov    DWORD PTR [rsp+0xfc],eax
  4067de:	mov    rdi,QWORD PTR [rdi+0x80]
  4067e5:	vzeroupper 
  4067e8:	call   4010a0 <strlen@plt>
  4067ed:	lea    ecx,[rax+0x1]
  4067f0:	mov    DWORD PTR [rsp+0xf8],ecx
  4067f7:	lea    eax,[rax+rbx*1]
  4067fa:	add    eax,0x7f
  4067fd:	mov    DWORD PTR [rsp+0x10c],0x40300040
  406808:	mov    QWORD PTR [rsp+0x110],0x48664
  406814:	mov    DWORD PTR [rsp+0x118],eax
  40681b:	mov    DWORD PTR [rsp+0x120],0x0
  406826:	mov    eax,DWORD PTR [r13+0x40]
  40682a:	mov    ecx,DWORD PTR [r13+0x48]
  40682e:	mov    QWORD PTR [rsp+0x68],rcx
  406833:	lea    eax,[rcx+rax*1+0xb]
  406837:	mov    DWORD PTR [rsp+0x11c],eax
  40683e:	lea    rsi,[rsp+0x110]
  406846:	mov    edx,0x14
  40684b:	mov    rdi,r13
  40684e:	call   4029f0 <strstr@plt+0x1820>
  406853:	lea    rsi,[rsp+0x70]
  406858:	mov    edx,0xa0
  40685d:	mov    rdi,r13
  406860:	call   4029f0 <strstr@plt+0x1820>
  406865:	mov    rsi,QWORD PTR [r13+0x28]
  406869:	mov    rdx,QWORD PTR [r13+0x30]
  40686d:	mov    rdi,r13
  406870:	call   4029f0 <strstr@plt+0x1820>
  406875:	cmp    DWORD PTR [r13+0x44],0x0
  40687a:	jle    4068d3 <strstr@plt+0x5703>
  40687c:	lea    rbx,[r13+0x98]
  406883:	xor    r15d,r15d
  406886:	lea    r14,[rsp+0x20]
  40688b:	nop    DWORD PTR [rax+rax*1+0x0]
  406890:	mov    eax,DWORD PTR [rbx-0x8]
  406893:	mov    DWORD PTR [rsp+0x20],eax
  406897:	mov    eax,DWORD PTR [rbx-0x4]
  40689a:	add    eax,0x3
  40689d:	mov    DWORD PTR [rsp+0x24],eax
  4068a1:	xor    eax,eax
  4068a3:	cmp    DWORD PTR [rbx],0x0
  4068a6:	setne  al
  4068a9:	lea    eax,[rax+rax*1+0x2]
  4068ad:	mov    WORD PTR [rsp+0x28],ax
  4068b2:	mov    edx,0xa
  4068b7:	mov    rdi,r13
  4068ba:	mov    rsi,r14
  4068bd:	call   4029f0 <strstr@plt+0x1820>
  4068c2:	add    r15,0x1
  4068c6:	movsxd rax,DWORD PTR [r13+0x44]
  4068ca:	add    rbx,0xc
  4068ce:	cmp    r15,rax
  4068d1:	jl     406890 <strstr@plt+0x56c0>
  4068d3:	mov    rax,QWORD PTR [r13+0x58]
  4068d7:	movsxd rcx,DWORD PTR [r13+0x40]
  4068db:	shl    rcx,0x4
  4068df:	mov    ebx,DWORD PTR [rax+rcx*1-0x8]
  4068e3:	mov    DWORD PTR [rsp+0x20],0x0
  4068eb:	mov    DWORD PTR [rsp+0x24],ebx
  4068ef:	mov    DWORD PTR [rsp+0x28],0x0
  4068f7:	lea    r14,[rsp+0x20]
  4068fc:	mov    edx,0xc
  406901:	mov    rdi,r13
  406904:	mov    rsi,r14
  406907:	call   4029f0 <strstr@plt+0x1820>
  40690c:	mov    DWORD PTR [rsp+0x20],ebx
  406910:	mov    eax,DWORD PTR [r13+0x30]
  406914:	mov    DWORD PTR [rsp+0x24],eax
  406918:	mov    DWORD PTR [rsp+0x28],0x14
  406920:	mov    edx,0xc
  406925:	mov    rdi,r13
  406928:	mov    rsi,r14
  40692b:	call   4029f0 <strstr@plt+0x1820>
  406930:	mov    DWORD PTR [rsp],0x0
  406937:	mov    rax,QWORD PTR [rsp+0x68]
  40693c:	lea    r15d,[rax+0x5]
  406940:	lea    r14d,[rax+0x7]
  406944:	lea    ebx,[rax+0x8]
  406947:	mov    DWORD PTR [rsp+0x4],ebx
  40694b:	mov    WORD PTR [rsp+0x8],0x3
  406952:	mov    r12,rsp
  406955:	mov    edx,0xa
  40695a:	mov    rdi,r13
  40695d:	mov    rsi,r12
  406960:	call   4029f0 <strstr@plt+0x1820>
  406965:	mov    DWORD PTR [rsp],0x4
  40696c:	mov    DWORD PTR [rsp+0x4],ebx
  406970:	mov    WORD PTR [rsp+0x8],0x3
  406977:	mov    edx,0xa
  40697c:	mov    rdi,r13
  40697f:	mov    rsi,r12
  406982:	call   4029f0 <strstr@plt+0x1820>
  406987:	mov    DWORD PTR [rsp],0x8
  40698e:	mov    DWORD PTR [rsp+0x4],r15d
  406993:	mov    WORD PTR [rsp+0x8],0x3
  40699a:	mov    edx,0xa
  40699f:	mov    rdi,r13
  4069a2:	mov    rsi,r12
  4069a5:	call   4029f0 <strstr@plt+0x1820>
  4069aa:	mov    DWORD PTR [rsp],0xc
  4069b1:	mov    DWORD PTR [rsp+0x4],ebx
  4069b5:	mov    WORD PTR [rsp+0x8],0x3
  4069bc:	mov    edx,0xa
  4069c1:	mov    rdi,r13
  4069c4:	mov    rsi,r12
  4069c7:	call   4029f0 <strstr@plt+0x1820>
  4069cc:	mov    DWORD PTR [rsp],0x10
  4069d3:	mov    DWORD PTR [rsp+0x4],ebx
  4069d7:	mov    WORD PTR [rsp+0x8],0x3
  4069de:	mov    edx,0xa
  4069e3:	mov    rdi,r13
  4069e6:	mov    rsi,r12
  4069e9:	call   4029f0 <strstr@plt+0x1820>
  4069ee:	mov    DWORD PTR [rsp],0x14
  4069f5:	mov    DWORD PTR [rsp+0x4],r15d
  4069fa:	mov    WORD PTR [rsp+0x8],0x3
  406a01:	mov    edx,0xa
  406a06:	mov    rdi,r13
  406a09:	mov    rsi,r12
  406a0c:	call   4029f0 <strstr@plt+0x1820>
  406a11:	vmovaps ymm0,YMMWORD PTR [rip+0x86e7]        # 40f100 <strstr@plt+0xdf30>
  406a19:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  406a1f:	lea    rsi,[rsp+0x20]
  406a24:	mov    edx,0x20
  406a29:	mov    rdi,r13
  406a2c:	vzeroupper 
  406a2f:	call   4029f0 <strstr@plt+0x1820>
  406a34:	mov    DWORD PTR [rsp],0x10
  406a3b:	mov    DWORD PTR [rsp+0x4],r14d
  406a40:	mov    WORD PTR [rsp+0x8],0x3
  406a47:	mov    rsi,rsp
  406a4a:	mov    edx,0xa
  406a4f:	mov    rdi,r13
  406a52:	call   4029f0 <strstr@plt+0x1820>
  406a57:	mov    rbx,QWORD PTR [r13+0x80]
  406a5e:	mov    rdi,rbx
  406a61:	call   4010a0 <strlen@plt>
  406a66:	lea    rdx,[rax+0x1]
  406a6a:	mov    rdi,r13
  406a6d:	mov    rsi,rbx
  406a70:	call   4029f0 <strstr@plt+0x1820>
  406a75:	mov    QWORD PTR [rip+0xc728],0x0        # 4131a8 <strstr@plt+0x11fd8>
  406a80:	xor    eax,eax
  406a82:	mov    QWORD PTR [rsp+0x50],r13
  406a87:	jmp    406aa1 <strstr@plt+0x58d1>
  406a89:	nop    DWORD PTR [rax+0x0]
  406a90:	mov    rdi,rbx
  406a93:	call   401150 <malloc@plt>
  406a98:	mov    QWORD PTR [rip+0xc709],rax        # 4131a8 <strstr@plt+0x11fd8>
  406a9f:	mov    DWORD PTR [rax],ebx
  406aa1:	mov    QWORD PTR [rip+0xc704],0x4        # 4131b0 <strstr@plt+0x11fe0>
  406aac:	test   rax,rax
  406aaf:	je     406df0 <strstr@plt+0x5c20>
  406ab5:	movabs rax,0x30302e7461656640
  406abf:	mov    QWORD PTR [rsp+0x20],rax
  406ac4:	movabs rax,0xffff00000001
  406ace:	mov    QWORD PTR [rsp+0x28],rax
  406ad3:	mov    WORD PTR [rsp+0x30],0x3
  406ada:	mov    edx,0x12
  406adf:	mov    rdi,r13
  406ae2:	lea    r15,[rsp+0x20]
  406ae7:	mov    rsi,r15
  406aea:	call   4029f0 <strstr@plt+0x1820>
  406aef:	mov    rax,QWORD PTR [rip+0xc6b2]        # 4131a8 <strstr@plt+0x11fd8>
  406af6:	test   rax,rax
  406af9:	je     406b63 <strstr@plt+0x5993>
  406afb:	mov    rax,QWORD PTR [rsp+0x70]
  406b00:	mov    QWORD PTR [rsp+0x20],rax
  406b05:	movabs rax,0x100000000
  406b0f:	mov    QWORD PTR [rsp+0x28],rax
  406b14:	mov    WORD PTR [rsp+0x30],0x103
  406b1b:	mov    edx,0x12
  406b20:	mov    rdi,r13
  406b23:	mov    rsi,r15
  406b26:	call   4029f0 <strstr@plt+0x1820>
  406b2b:	vxorps xmm0,xmm0,xmm0
  406b2f:	vmovaps XMMWORD PTR [rsp],xmm0
  406b34:	mov    DWORD PTR [rsp+0x10],0x0
  406b3c:	mov    eax,DWORD PTR [rsp+0x80]
  406b43:	mov    DWORD PTR [rsp],eax
  406b46:	movzx  eax,WORD PTR [rsp+0x90]
  406b4e:	mov    WORD PTR [rsp+0x4],ax
  406b53:	mov    edx,0x12
  406b58:	mov    rdi,r13
  406b5b:	mov    rsi,rsp
  406b5e:	call   4029f0 <strstr@plt+0x1820>
  406b63:	cmp    DWORD PTR [rsp+0x68],0x0
  406b68:	jle    406c7a <strstr@plt+0x5aaa>
  406b6e:	xor    ebx,ebx
  406b70:	mov    r12,r13
  406b73:	mov    rax,QWORD PTR [r13+0x60]
  406b77:	mov    r13,QWORD PTR [rax+rbx*8]
  406b7b:	mov    rdi,r13
  406b7e:	call   4010a0 <strlen@plt>
  406b83:	mov    r14,rax
  406b86:	mov    r15,QWORD PTR [rip+0xc61b]        # 4131a8 <strstr@plt+0x11fd8>
  406b8d:	test   r15,r15
  406b90:	je     406bd0 <strstr@plt+0x5a00>
  406b92:	cmp    r14,0x8
  406b96:	ja     406c00 <strstr@plt+0x5a30>
  406b98:	lea    r15,[rsp+0x20]
  406b9d:	mov    rdi,r15
  406ba0:	mov    rsi,r13
  406ba3:	mov    rdx,r14
  406ba6:	call   401140 <memcpy@plt>
  406bab:	lea    rdi,[rsp+r14*1]
  406baf:	add    rdi,0x20
  406bb3:	mov    edx,0x8
  406bb8:	sub    rdx,r14
  406bbb:	xor    esi,esi
  406bbd:	call   4010c0 <memset@plt>
  406bc2:	mov    r13,r12
  406bc5:	jmp    406c45 <strstr@plt+0x5a75>
  406bc7:	nop    WORD PTR [rax+rax*1+0x0]
  406bd0:	cmp    r14,0x9
  406bd4:	lea    r15,[rsp+0x20]
  406bd9:	mov    r13,r12
  406bdc:	jb     406c6b <strstr@plt+0x5a9b>
  406be2:	mov    rax,QWORD PTR [rip+0xc5c7]        # 4131b0 <strstr@plt+0x11fe0>
  406be9:	add    rax,r14
  406bec:	add    rax,0x1
  406bf0:	mov    QWORD PTR [rip+0xc5b9],rax        # 4131b0 <strstr@plt+0x11fe0>
  406bf7:	jmp    406c6b <strstr@plt+0x5a9b>
  406bf9:	nop    DWORD PTR [rax+0x0]
  406c00:	mov    DWORD PTR [rsp+0x20],0x0
  406c08:	mov    r12,QWORD PTR [rip+0xc5a1]        # 4131b0 <strstr@plt+0x11fe0>
  406c0f:	mov    DWORD PTR [rsp+0x24],r12d
  406c14:	lea    rdi,[r15+r12*1]
  406c18:	mov    rsi,r13
  406c1b:	mov    rdx,r14
  406c1e:	call   401140 <memcpy@plt>
  406c23:	lea    rax,[r12+r14*1]
  406c27:	mov    BYTE PTR [r15+rax*1],0x0
  406c2c:	lea    rax,[r12+r14*1]
  406c30:	add    rax,0x1
  406c34:	mov    r13,QWORD PTR [rsp+0x50]
  406c39:	mov    QWORD PTR [rip+0xc570],rax        # 4131b0 <strstr@plt+0x11fe0>
  406c40:	lea    r15,[rsp+0x20]
  406c45:	movabs rax,0x20000000000000
  406c4f:	mov    QWORD PTR [rsp+0x28],rax
  406c54:	mov    WORD PTR [rsp+0x30],0x2
  406c5b:	mov    edx,0x12
  406c60:	mov    rdi,r13
  406c63:	mov    rsi,r15
  406c66:	call   4029f0 <strstr@plt+0x1820>
  406c6b:	add    rbx,0x1
  406c6f:	cmp    QWORD PTR [rsp+0x68],rbx
  406c74:	jne    406b70 <strstr@plt+0x59a0>
  406c7a:	cmp    QWORD PTR [rip+0xc526],0x0        # 4131a8 <strstr@plt+0x11fd8>
  406c82:	je     406e10 <strstr@plt+0x5c40>
  406c88:	mov    rax,QWORD PTR [rsp+0x98]
  406c90:	mov    QWORD PTR [rsp+0x20],rax
  406c95:	movabs rax,0x200000000
  406c9f:	mov    QWORD PTR [rsp+0x28],rax
  406ca4:	mov    WORD PTR [rsp+0x30],0x103
  406cab:	mov    edx,0x12
  406cb0:	mov    rdi,r13
  406cb3:	mov    rsi,r15
  406cb6:	call   4029f0 <strstr@plt+0x1820>
  406cbb:	vxorps xmm0,xmm0,xmm0
  406cbf:	vmovaps XMMWORD PTR [rsp],xmm0
  406cc4:	mov    DWORD PTR [rsp+0x10],0x0
  406ccc:	mov    eax,DWORD PTR [rsp+0xa8]
  406cd3:	mov    DWORD PTR [rsp],eax
  406cd6:	movzx  eax,WORD PTR [rsp+0xb8]
  406cde:	mov    WORD PTR [rsp+0x4],ax
  406ce3:	mov    edx,0x12
  406ce8:	mov    rdi,r13
  406ceb:	mov    rsi,rsp
  406cee:	call   4029f0 <strstr@plt+0x1820>
  406cf3:	mov    rax,QWORD PTR [rip+0xc4ae]        # 4131a8 <strstr@plt+0x11fd8>
  406cfa:	test   rax,rax
  406cfd:	je     406d71 <strstr@plt+0x5ba1>
  406cff:	mov    rax,QWORD PTR [rsp+0xc0]
  406d07:	mov    QWORD PTR [rsp+0x20],rax
  406d0c:	movabs rax,0x300000000
  406d16:	mov    QWORD PTR [rsp+0x28],rax
  406d1b:	mov    WORD PTR [rsp+0x30],0x103
  406d22:	mov    edx,0x12
  406d27:	mov    rdi,r13
  406d2a:	mov    rsi,r15
  406d2d:	call   4029f0 <strstr@plt+0x1820>
  406d32:	vxorps xmm0,xmm0,xmm0
  406d36:	vmovaps XMMWORD PTR [rsp],xmm0
  406d3b:	mov    DWORD PTR [rsp+0x10],0x0
  406d43:	mov    eax,DWORD PTR [rsp+0xd0]
  406d4a:	mov    DWORD PTR [rsp],eax
  406d4d:	movzx  eax,WORD PTR [rsp+0xe0]
  406d55:	mov    WORD PTR [rsp+0x4],ax
  406d5a:	mov    edx,0x12
  406d5f:	mov    rdi,r13
  406d62:	mov    rsi,rsp
  406d65:	call   4029f0 <strstr@plt+0x1820>
  406d6a:	mov    rax,QWORD PTR [rip+0xc437]        # 4131a8 <strstr@plt+0x11fd8>
  406d71:	test   rax,rax
  406d74:	je     406e20 <strstr@plt+0x5c50>
  406d7a:	mov    DWORD PTR [rsp+0x20],0x0
  406d82:	mov    rcx,QWORD PTR [rip+0xc427]        # 4131b0 <strstr@plt+0x11fe0>
  406d89:	mov    DWORD PTR [rsp+0x24],ecx
  406d8d:	vmovups xmm0,XMMWORD PTR [rip+0x83af]        # 40f144 <strstr@plt+0xdf74>
  406d95:	vmovups XMMWORD PTR [rax+rcx*1],xmm0
  406d9a:	mov    BYTE PTR [rax+rcx*1+0x12],0x34
  406d9f:	mov    WORD PTR [rax+rcx*1+0x10],0x366e
  406da6:	mov    BYTE PTR [rax+rcx*1+0x13],0x0
  406dab:	add    rcx,0x14
  406daf:	mov    QWORD PTR [rip+0xc3fa],rcx        # 4131b0 <strstr@plt+0x11fe0>
  406db6:	movabs rax,0x20000000000000
  406dc0:	mov    QWORD PTR [rsp+0x28],rax
  406dc5:	mov    WORD PTR [rsp+0x30],0x2
  406dcc:	mov    edx,0x12
  406dd1:	mov    rdi,r13
  406dd4:	mov    rsi,r15
  406dd7:	call   4029f0 <strstr@plt+0x1820>
  406ddc:	mov    r14,QWORD PTR [rip+0xc3c5]        # 4131a8 <strstr@plt+0x11fd8>
  406de3:	jmp    406e2b <strstr@plt+0x5c5b>
  406de5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406def:	nop
  406df0:	xor    eax,eax
  406df2:	lea    r15,[rsp+0x20]
  406df7:	test   rax,rax
  406dfa:	jne    406afb <strstr@plt+0x592b>
  406e00:	jmp    406b63 <strstr@plt+0x5993>
  406e05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e0f:	nop
  406e10:	xor    eax,eax
  406e12:	test   rax,rax
  406e15:	jne    406cff <strstr@plt+0x5b2f>
  406e1b:	jmp    406d71 <strstr@plt+0x5ba1>
  406e20:	add    QWORD PTR [rip+0xc388],0x14        # 4131b0 <strstr@plt+0x11fe0>
  406e28:	xor    r14d,r14d
  406e2b:	mov    r12,r13
  406e2e:	mov    r13,QWORD PTR [r13+0x70]
  406e32:	mov    rdi,r13
  406e35:	call   4010a0 <strlen@plt>
  406e3a:	mov    rbx,rax
  406e3d:	test   r14,r14
  406e40:	je     406e70 <strstr@plt+0x5ca0>
  406e42:	cmp    rbx,0x8
  406e46:	ja     406ea0 <strstr@plt+0x5cd0>
  406e48:	mov    rdi,r15
  406e4b:	mov    rsi,r13
  406e4e:	mov    rdx,rbx
  406e51:	call   401140 <memcpy@plt>
  406e56:	lea    rdi,[rsp+rbx*1]
  406e5a:	add    rdi,0x20
  406e5e:	mov    edx,0x8
  406e63:	sub    rdx,rbx
  406e66:	xor    esi,esi
  406e68:	call   4010c0 <memset@plt>
  406e6d:	jmp    406ee0 <strstr@plt+0x5d10>
  406e6f:	nop
  406e70:	cmp    rbx,0x9
  406e74:	mov    r13,r12
  406e77:	jb     406f09 <strstr@plt+0x5d39>
  406e7d:	mov    rax,QWORD PTR [rip+0xc32c]        # 4131b0 <strstr@plt+0x11fe0>
  406e84:	add    rax,rbx
  406e87:	add    rax,0x1
  406e8b:	mov    QWORD PTR [rip+0xc31e],rax        # 4131b0 <strstr@plt+0x11fe0>
  406e92:	jmp    406f09 <strstr@plt+0x5d39>
  406e94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e9e:	xchg   ax,ax
  406ea0:	mov    DWORD PTR [rsp+0x20],0x0
  406ea8:	mov    r15,QWORD PTR [rip+0xc301]        # 4131b0 <strstr@plt+0x11fe0>
  406eaf:	mov    DWORD PTR [rsp+0x24],r15d
  406eb4:	lea    rdi,[r14+r15*1]
  406eb8:	mov    rsi,r13
  406ebb:	mov    rdx,rbx
  406ebe:	call   401140 <memcpy@plt>
  406ec3:	lea    rax,[r15+rbx*1]
  406ec7:	mov    BYTE PTR [r14+rax*1],0x0
  406ecc:	lea    rax,[r15+rbx*1]
  406ed0:	add    rax,0x1
  406ed4:	lea    r15,[rsp+0x20]
  406ed9:	mov    QWORD PTR [rip+0xc2d0],rax        # 4131b0 <strstr@plt+0x11fe0>
  406ee0:	mov    r13,r12
  406ee3:	movabs rax,0x100000000
  406eed:	mov    QWORD PTR [rsp+0x28],rax
  406ef2:	mov    WORD PTR [rsp+0x30],0x2
  406ef9:	mov    edx,0x12
  406efe:	mov    rdi,r12
  406f01:	mov    rsi,r15
  406f04:	call   4029f0 <strstr@plt+0x1820>
  406f09:	mov    ecx,DWORD PTR [r13+0x40]
  406f0d:	test   ecx,ecx
  406f0f:	jle    40704d <strstr@plt+0x5e7d>
  406f15:	mov    r15d,0x8
  406f1b:	xor    r14d,r14d
  406f1e:	xchg   ax,ax
  406f20:	mov    DWORD PTR [rsp+0x60],ecx
  406f24:	mov    rax,QWORD PTR [r13+0x58]
  406f28:	mov    r13,QWORD PTR [rax+r15*1-0x8]
  406f2d:	mov    eax,DWORD PTR [rax+r15*1]
  406f31:	mov    DWORD PTR [rsp+0x5c],eax
  406f35:	mov    rdi,r13
  406f38:	call   4010a0 <strlen@plt>
  406f3d:	mov    rbx,rax
  406f40:	mov    r12,QWORD PTR [rip+0xc261]        # 4131a8 <strstr@plt+0x11fd8>
  406f47:	test   r12,r12
  406f4a:	je     406f90 <strstr@plt+0x5dc0>
  406f4c:	cmp    rbx,0x8
  406f50:	ja     406fc0 <strstr@plt+0x5df0>
  406f52:	lea    r12,[rsp+0x20]
  406f57:	mov    rdi,r12
  406f5a:	mov    rsi,r13
  406f5d:	mov    rdx,rbx
  406f60:	call   401140 <memcpy@plt>
  406f65:	lea    rdi,[rsp+rbx*1]
  406f69:	add    rdi,0x20
  406f6d:	mov    edx,0x8
  406f72:	sub    rdx,rbx
  406f75:	xor    esi,esi
  406f77:	call   4010c0 <memset@plt>
  406f7c:	mov    r13,QWORD PTR [rsp+0x50]
  406f81:	jmp    40700e <strstr@plt+0x5e3e>
  406f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f90:	cmp    rbx,0x9
  406f94:	jb     406fab <strstr@plt+0x5ddb>
  406f96:	mov    rax,QWORD PTR [rip+0xc213]        # 4131b0 <strstr@plt+0x11fe0>
  406f9d:	add    rax,rbx
  406fa0:	add    rax,0x1
  406fa4:	mov    QWORD PTR [rip+0xc205],rax        # 4131b0 <strstr@plt+0x11fe0>
  406fab:	mov    r13,QWORD PTR [rsp+0x50]
  406fb0:	mov    ecx,DWORD PTR [rsp+0x60]
  406fb4:	jmp    407039 <strstr@plt+0x5e69>
  406fb9:	nop    DWORD PTR [rax+0x0]
  406fc0:	mov    DWORD PTR [rsp+0x20],0x0
  406fc8:	mov    rax,QWORD PTR [rip+0xc1e1]        # 4131b0 <strstr@plt+0x11fe0>
  406fcf:	mov    QWORD PTR [rsp+0x60],rax
  406fd4:	mov    DWORD PTR [rsp+0x24],eax
  406fd8:	lea    rdi,[r12+rax*1]
  406fdc:	mov    rsi,r13
  406fdf:	mov    rdx,rbx
  406fe2:	call   401140 <memcpy@plt>
  406fe7:	mov    rcx,QWORD PTR [rsp+0x60]
  406fec:	lea    rax,[rcx+rbx*1]
  406ff0:	mov    BYTE PTR [r12+rax*1],0x0
  406ff5:	lea    rax,[rcx+rbx*1]
  406ff9:	add    rax,0x1
  406ffd:	mov    QWORD PTR [rip+0xc1ac],rax        # 4131b0 <strstr@plt+0x11fe0>
  407004:	mov    r13,QWORD PTR [rsp+0x50]
  407009:	lea    r12,[rsp+0x20]
  40700e:	mov    eax,DWORD PTR [rsp+0x5c]
  407012:	mov    DWORD PTR [rsp+0x28],eax
  407016:	mov    DWORD PTR [rsp+0x2c],0x200001
  40701e:	mov    WORD PTR [rsp+0x30],0x2
  407025:	mov    edx,0x12
  40702a:	mov    rdi,r13
  40702d:	mov    rsi,r12
  407030:	call   4029f0 <strstr@plt+0x1820>
  407035:	mov    ecx,DWORD PTR [r13+0x40]
  407039:	add    r14,0x1
  40703d:	movsxd rax,ecx
  407040:	add    r15,0x10
  407044:	cmp    r14,rax
  407047:	jl     406f20 <strstr@plt+0x5d50>
  40704d:	cmp    QWORD PTR [rip+0xc153],0x0        # 4131a8 <strstr@plt+0x11fd8>
  407055:	je     4070f0 <strstr@plt+0x5f20>
  40705b:	mov    rax,QWORD PTR [rsp+0xe8]
  407063:	mov    QWORD PTR [rsp+0x20],rax
  407068:	movabs rax,0x400000000
  407072:	mov    QWORD PTR [rsp+0x28],rax
  407077:	mov    WORD PTR [rsp+0x30],0x103
  40707e:	mov    edx,0x12
  407083:	mov    rdi,r13
  407086:	lea    rsi,[rsp+0x20]
  40708b:	call   4029f0 <strstr@plt+0x1820>
  407090:	vxorps xmm0,xmm0,xmm0
  407094:	vmovaps XMMWORD PTR [rsp],xmm0
  407099:	mov    DWORD PTR [rsp+0x10],0x0
  4070a1:	mov    eax,DWORD PTR [rsp+0xf8]
  4070a8:	mov    DWORD PTR [rsp],eax
  4070ab:	movzx  eax,WORD PTR [rsp+0x108]
  4070b3:	mov    WORD PTR [rsp+0x4],ax
  4070b8:	mov    edx,0x12
  4070bd:	mov    rdi,r13
  4070c0:	mov    rsi,rsp
  4070c3:	call   4029f0 <strstr@plt+0x1820>
  4070c8:	mov    rsi,QWORD PTR [rip+0xc0d9]        # 4131a8 <strstr@plt+0x11fd8>
  4070cf:	mov    rbx,QWORD PTR [rip+0xc0da]        # 4131b0 <strstr@plt+0x11fe0>
  4070d6:	test   rsi,rsi
  4070d9:	je     406a90 <strstr@plt+0x58c0>
  4070df:	jmp    4070fc <strstr@plt+0x5f2c>
  4070e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4070f0:	mov    rbx,QWORD PTR [rip+0xc0b9]        # 4131b0 <strstr@plt+0x11fe0>
  4070f7:	jmp    406a90 <strstr@plt+0x58c0>
  4070fc:	mov    rdi,r13
  4070ff:	mov    rdx,rbx
  407102:	call   4029f0 <strstr@plt+0x1820>
  407107:	lea    rsp,[rbp-0x28]
  40710b:	pop    rbx
  40710c:	pop    r12
  40710e:	pop    r13
  407110:	pop    r14
  407112:	pop    r15
  407114:	pop    rbp
  407115:	ret    
  407116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407120:	push   rbp
  407121:	push   r15
  407123:	push   r14
  407125:	push   r13
  407127:	push   r12
  407129:	push   rbx
  40712a:	sub    rsp,0x118
  407131:	mov    rbx,rdi
  407134:	mov    eax,DWORD PTR [rdi+0x8]
  407137:	lea    ecx,[rax-0x6]
  40713a:	cmp    ecx,0x3
  40713d:	jae    407151 <strstr@plt+0x5f81>
  40713f:	mov    rcx,QWORD PTR [rbx+0x10]
  407143:	lea    rdi,[rip+0x792e]        # 40ea78 <strstr@plt+0xd8a8>
  40714a:	mov    esi,0x2e
  40714f:	jmp    407166 <strstr@plt+0x5f96>
  407151:	cmp    eax,0x9
  407154:	jne    407190 <strstr@plt+0x5fc0>
  407156:	mov    rcx,QWORD PTR [rbx+0x10]
  40715a:	lea    rdi,[rip+0x801b]        # 40f17c <strstr@plt+0xdfac>
  407161:	mov    esi,0x1c
  407166:	mov    edx,0x1
  40716b:	call   4011b0 <fwrite@plt>
  407170:	cmp    DWORD PTR [rbx+0x8],0x8
  407174:	jne    407190 <strstr@plt+0x5fc0>
  407176:	mov    rcx,QWORD PTR [rbx+0x10]
  40717a:	lea    rdi,[rip+0x8018]        # 40f199 <strstr@plt+0xdfc9>
  407181:	mov    esi,0x31
  407186:	mov    edx,0x1
  40718b:	call   4011b0 <fwrite@plt>
  407190:	mov    DWORD PTR [rip+0xc026],0x2        # 4131c0 <strstr@plt+0x11ff0>
  40719a:	mov    DWORD PTR [rip+0xc020],0x2        # 4131c4 <strstr@plt+0x11ff4>
  4071a4:	mov    DWORD PTR [rip+0xc01a],0x0        # 4131c8 <strstr@plt+0x11ff8>
  4071ae:	mov    rax,QWORD PTR [rbx+0x20]
  4071b2:	lea    rcx,[rax+0x8]
  4071b6:	mov    r13,rbx
  4071b9:	mov    QWORD PTR [rbx+0x20],rcx
  4071bd:	mov    r14,QWORD PTR [rax]
  4071c0:	test   r14,r14
  4071c3:	je     407572 <strstr@plt+0x63a2>
  4071c9:	lea    rbx,[rip+0x802e]        # 40f1fe <strstr@plt+0xe02e>
  4071d0:	jmp    4071e0 <strstr@plt+0x6010>
  4071d2:	mov    rax,QWORD PTR [rip+0xbdff]        # 412fd8 <strstr@plt+0x11e08>
  4071d9:	mov    rbp,QWORD PTR [rax]
  4071dc:	jmp    407208 <strstr@plt+0x6038>
  4071de:	xchg   ax,ax
  4071e0:	cmp    BYTE PTR [r14],0x2d
  4071e4:	jne    4071ed <strstr@plt+0x601d>
  4071e6:	cmp    BYTE PTR [r14+0x1],0x0
  4071eb:	je     4071d2 <strstr@plt+0x6002>
  4071ed:	mov    rdi,r14
  4071f0:	lea    rsi,[rip+0x6aa4]        # 40dc9b <strstr@plt+0xcacb>
  4071f7:	call   401180 <fopen@plt>
  4071fc:	mov    rbp,rax
  4071ff:	test   rax,rax
  407202:	je     40775d <strstr@plt+0x658d>
  407208:	mov    DWORD PTR [rip+0xbfba],0x0        # 4131cc <strstr@plt+0x11ffc>
  407212:	mov    DWORD PTR [rip+0xbfb4],0x0        # 4131d0 <strstr@plt+0x12000>
  40721c:	mov    esi,0x100
  407221:	lea    rdi,[rsp+0x10]
  407226:	mov    rdx,rbp
  407229:	call   4010f0 <fgets@plt>
  40722e:	test   rax,rax
  407231:	je     407540 <strstr@plt+0x6370>
  407237:	mov    QWORD PTR [rsp+0x8],rbp
  40723c:	nop    DWORD PTR [rax+0x0]
  407240:	cmp    BYTE PTR [rsp+0x10],0x23
  407245:	jne    40726e <strstr@plt+0x609e>
  407247:	cmp    BYTE PTR [rsp+0x11],0x69
  40724c:	jne    40726e <strstr@plt+0x609e>
  40724e:	cmp    BYTE PTR [rsp+0x12],0x66
  407253:	jne    40726e <strstr@plt+0x609e>
  407255:	lea    rdi,[rsp+0x10]
  40725a:	lea    rsi,[rip+0x7f92]        # 40f1f3 <strstr@plt+0xe023>
  407261:	call   401100 <strcmp@plt>
  407266:	test   eax,eax
  407268:	je     407498 <strstr@plt+0x62c8>
  40726e:	lea    r14,[rsp+0x10]
  407273:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40727d:	nop    DWORD PTR [rax]
  407280:	mov    rdi,r14
  407283:	mov    rsi,rbx
  407286:	call   4011d0 <strstr@plt>
  40728b:	test   rax,rax
  40728e:	je     407520 <strstr@plt+0x6350>
  407294:	mov    r14,rax
  407297:	add    r14,0x6
  40729b:	mov    edx,0x7
  4072a0:	mov    rdi,r14
  4072a3:	lea    rsi,[rip+0x806e]        # 40f318 <strstr@plt+0xe148>
  4072aa:	call   401050 <strncmp@plt>
  4072af:	test   eax,eax
  4072b1:	je     4073b0 <strstr@plt+0x61e0>
  4072b7:	mov    edx,0x3
  4072bc:	mov    rdi,r14
  4072bf:	lea    rsi,[rip+0x805f]        # 40f325 <strstr@plt+0xe155>
  4072c6:	call   401050 <strncmp@plt>
  4072cb:	test   eax,eax
  4072cd:	je     4073d0 <strstr@plt+0x6200>
  4072d3:	mov    edx,0x4
  4072d8:	mov    rdi,r14
  4072db:	lea    rsi,[rip+0x8047]        # 40f329 <strstr@plt+0xe159>
  4072e2:	call   401050 <strncmp@plt>
  4072e7:	test   eax,eax
  4072e9:	je     4073e1 <strstr@plt+0x6211>
  4072ef:	mov    edx,0x5
  4072f4:	mov    rdi,r14
  4072f7:	lea    rsi,[rip+0x8030]        # 40f32e <strstr@plt+0xe15e>
  4072fe:	call   401050 <strncmp@plt>
  407303:	test   eax,eax
  407305:	je     4073ea <strstr@plt+0x621a>
  40730b:	mov    edx,0x4
  407310:	mov    rdi,r14
  407313:	lea    rsi,[rip+0x801a]        # 40f334 <strstr@plt+0xe164>
  40731a:	call   401050 <strncmp@plt>
  40731f:	test   eax,eax
  407321:	je     4073f3 <strstr@plt+0x6223>
  407327:	mov    edx,0x5
  40732c:	mov    rdi,r14
  40732f:	lea    rsi,[rip+0x8003]        # 40f339 <strstr@plt+0xe169>
  407336:	call   401050 <strncmp@plt>
  40733b:	test   eax,eax
  40733d:	je     4073fc <strstr@plt+0x622c>
  407343:	mov    edx,0x4
  407348:	mov    rdi,r14
  40734b:	lea    rsi,[rip+0x7fed]        # 40f33f <strstr@plt+0xe16f>
  407352:	call   401050 <strncmp@plt>
  407357:	test   eax,eax
  407359:	je     40740d <strstr@plt+0x623d>
  40735f:	mov    edx,0x7
  407364:	mov    rdi,r14
  407367:	lea    rsi,[rip+0x7fd6]        # 40f344 <strstr@plt+0xe174>
  40736e:	call   401050 <strncmp@plt>
  407373:	test   eax,eax
  407375:	je     40748c <strstr@plt+0x62bc>
  40737b:	mov    edx,0x5
  407380:	mov    rdi,r14
  407383:	lea    rsi,[rip+0x7fc2]        # 40f34c <strstr@plt+0xe17c>
  40738a:	call   401050 <strncmp@plt>
  40738f:	lea    r12,[rip+0xba1a]        # 412db0 <strstr@plt+0x11be0>
  407396:	mov    rbp,r12
  407399:	mov    ecx,0x5
  40739e:	test   eax,eax
  4073a0:	je     407428 <strstr@plt+0x6258>
  4073a6:	jmp    407722 <strstr@plt+0x6552>
  4073ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4073b0:	lea    r12,[rip+0xb8f9]        # 412cb0 <strstr@plt+0x11ae0>
  4073b7:	mov    rbp,r12
  4073ba:	mov    ecx,0x7
  4073bf:	jmp    407428 <strstr@plt+0x6258>
  4073c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4073d0:	lea    r12,[rip+0xb8f9]        # 412cd0 <strstr@plt+0x11b00>
  4073d7:	mov    rbp,r12
  4073da:	mov    ecx,0x3
  4073df:	jmp    407428 <strstr@plt+0x6258>
  4073e1:	lea    r12,[rip+0xb908]        # 412cf0 <strstr@plt+0x11b20>
  4073e8:	jmp    407420 <strstr@plt+0x6250>
  4073ea:	lea    r12,[rip+0xb91f]        # 412d10 <strstr@plt+0x11b40>
  4073f1:	jmp    407403 <strstr@plt+0x6233>
  4073f3:	lea    r12,[rip+0xb936]        # 412d30 <strstr@plt+0x11b60>
  4073fa:	jmp    407420 <strstr@plt+0x6250>
  4073fc:	lea    r12,[rip+0xb94d]        # 412d50 <strstr@plt+0x11b80>
  407403:	mov    rbp,r12
  407406:	mov    ecx,0x5
  40740b:	jmp    407428 <strstr@plt+0x6258>
  40740d:	lea    r12,[rip+0xb95c]        # 412d70 <strstr@plt+0x11ba0>
  407414:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40741e:	xchg   ax,ax
  407420:	mov    rbp,r12
  407423:	mov    ecx,0x4
  407428:	add    r14,rcx
  40742b:	mov    rsi,QWORD PTR [r12+0x8]
  407430:	test   rsi,rsi
  407433:	je     407480 <strstr@plt+0x62b0>
  407435:	mov    rdi,r14
  407438:	call   4010e0 <strcspn@plt>
  40743d:	mov    r15,rax
  407440:	cmp    BYTE PTR [r14+r15*1],0x0
  407445:	je     407463 <strstr@plt+0x6293>
  407447:	mov    BYTE PTR [r14+r15*1],0x0
  40744c:	mov    edx,DWORD PTR [r12+0x18]
  407451:	mov    rdi,r13
  407454:	mov    rsi,r14
  407457:	call   QWORD PTR [r12+0x10]
  40745c:	add    r14,r15
  40745f:	add    r14,0x1
  407463:	cmp    QWORD PTR [rbp+0x0],0x0
  407468:	jne    407280 <strstr@plt+0x60b0>
  40746e:	jmp    407722 <strstr@plt+0x6552>
  407473:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40747d:	nop    DWORD PTR [rax]
  407480:	xor    r15d,r15d
  407483:	cmp    BYTE PTR [r14+r15*1],0x0
  407488:	jne    407447 <strstr@plt+0x6277>
  40748a:	jmp    407463 <strstr@plt+0x6293>
  40748c:	lea    r12,[rip+0xb8fd]        # 412d90 <strstr@plt+0x11bc0>
  407493:	jmp    4073b7 <strstr@plt+0x61e7>
  407498:	mov    esi,0x100
  40749d:	lea    rdi,[rsp+0x10]
  4074a2:	mov    rdx,rbp
  4074a5:	call   4010f0 <fgets@plt>
  4074aa:	test   rax,rax
  4074ad:	je     407520 <strstr@plt+0x6350>
  4074af:	mov    ebp,0x1
  4074b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074be:	xchg   ax,ax
  4074c0:	movzx  edx,BYTE PTR [rsp+0x10]
  4074c5:	movzx  eax,BYTE PTR [rsp+0x11]
  4074ca:	movzx  ecx,BYTE PTR [rsp+0x12]
  4074cf:	cmp    dl,0x23
  4074d2:	jne    4074f0 <strstr@plt+0x6320>
  4074d4:	cmp    al,0x65
  4074d6:	jne    4074f0 <strstr@plt+0x6320>
  4074d8:	cmp    cl,0x6e
  4074db:	jne    4074f0 <strstr@plt+0x6320>
  4074dd:	add    ebp,0xffffffff
  4074e0:	jne    407503 <strstr@plt+0x6333>
  4074e2:	jmp    407520 <strstr@plt+0x6350>
  4074e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074ee:	xchg   ax,ax
  4074f0:	xor    dl,0x23
  4074f3:	xor    al,0x69
  4074f5:	or     al,dl
  4074f7:	xor    cl,0x66
  4074fa:	xor    edx,edx
  4074fc:	or     cl,al
  4074fe:	sete   dl
  407501:	add    ebp,edx
  407503:	mov    esi,0x100
  407508:	lea    rdi,[rsp+0x10]
  40750d:	mov    rdx,QWORD PTR [rsp+0x8]
  407512:	call   4010f0 <fgets@plt>
  407517:	test   rax,rax
  40751a:	jne    4074c0 <strstr@plt+0x62f0>
  40751c:	nop    DWORD PTR [rax+0x0]
  407520:	mov    esi,0x100
  407525:	lea    rdi,[rsp+0x10]
  40752a:	mov    rbp,QWORD PTR [rsp+0x8]
  40752f:	mov    rdx,rbp
  407532:	call   4010f0 <fgets@plt>
  407537:	test   rax,rax
  40753a:	jne    407240 <strstr@plt+0x6070>
  407540:	mov    rdi,rbp
  407543:	call   401090 <fclose@plt>
  407548:	mov    rbp,r13
  40754b:	cmp    DWORD PTR [r13+0x8],0x7
  407550:	jne    40755a <strstr@plt+0x638a>
  407552:	mov    rdi,rbp
  407555:	call   407790 <strstr@plt+0x65c0>
  40755a:	mov    rax,QWORD PTR [rbp+0x20]
  40755e:	lea    rcx,[rax+0x8]
  407562:	mov    QWORD PTR [rbp+0x20],rcx
  407566:	mov    r14,QWORD PTR [rax]
  407569:	test   r14,r14
  40756c:	jne    4071e0 <strstr@plt+0x6010>
  407572:	mov    eax,DWORD PTR [r13+0x8]
  407576:	add    eax,0xfffffffb
  407579:	cmp    eax,0x4
  40757c:	ja     407710 <strstr@plt+0x6540>
  407582:	lea    rcx,[rip+0x7bcf]        # 40f158 <strstr@plt+0xdf88>
  407589:	movsxd rax,DWORD PTR [rcx+rax*4]
  40758d:	add    rax,rcx
  407590:	jmp    rax
  407592:	mov    rcx,QWORD PTR [r13+0x10]
  407596:	lea    rdi,[rip+0x7d2e]        # 40f2cb <strstr@plt+0xe0fb>
  40759d:	mov    esi,0x5
  4075a2:	mov    edx,0x1
  4075a7:	call   4011b0 <fwrite@plt>
  4075ac:	mov    rcx,QWORD PTR [r13+0x10]
  4075b0:	lea    rdi,[rip+0x7cc4]        # 40f27b <strstr@plt+0xe0ab>
  4075b7:	mov    esi,0x2b
  4075bc:	mov    edx,0x1
  4075c1:	call   4011b0 <fwrite@plt>
  4075c6:	mov    rcx,QWORD PTR [r13+0x10]
  4075ca:	lea    rdi,[rip+0x7cd6]        # 40f2a7 <strstr@plt+0xe0d7>
  4075d1:	mov    esi,0xe
  4075d6:	mov    edx,0x1
  4075db:	call   4011b0 <fwrite@plt>
  4075e0:	mov    ebp,DWORD PTR [rip+0xbbe2]        # 4131c8 <strstr@plt+0x11ff8>
  4075e6:	mov    rcx,QWORD PTR [r13+0x10]
  4075ea:	cmp    ebp,0x2
  4075ed:	jl     40761e <strstr@plt+0x644e>
  4075ef:	add    ebp,0x1
  4075f2:	lea    rbx,[rip+0x7cbd]        # 40f2b6 <strstr@plt+0xe0e6>
  4075f9:	nop    DWORD PTR [rax+0x0]
  407600:	mov    esi,0xb
  407605:	mov    edx,0x1
  40760a:	mov    rdi,rbx
  40760d:	call   4011b0 <fwrite@plt>
  407612:	mov    rcx,QWORD PTR [r13+0x10]
  407616:	add    ebp,0xffffffff
  407619:	cmp    ebp,0x2
  40761c:	jg     407600 <strstr@plt+0x6430>
  40761e:	lea    rdi,[rip+0x7c9d]        # 40f2c2 <strstr@plt+0xe0f2>
  407625:	mov    esi,0xe
  40762a:	jmp    407706 <strstr@plt+0x6536>
  40762f:	mov    rcx,QWORD PTR [r13+0x10]
  407633:	lea    rdi,[rip+0x7bf7]        # 40f231 <strstr@plt+0xe061>
  40763a:	mov    esi,0xf
  40763f:	mov    edx,0x1
  407644:	call   4011b0 <fwrite@plt>
  407649:	mov    rdi,QWORD PTR [r13+0x10]
  40764d:	mov    edx,DWORD PTR [rip+0xbb75]        # 4131c8 <strstr@plt+0x11ff8>
  407653:	lea    rsi,[rip+0x7be7]        # 40f241 <strstr@plt+0xe071>
  40765a:	xor    eax,eax
  40765c:	call   401120 <fprintf@plt>
  407661:	jmp    407710 <strstr@plt+0x6540>
  407666:	mov    rcx,QWORD PTR [r13+0x10]
  40766a:	lea    rdi,[rip+0x7c5a]        # 40f2cb <strstr@plt+0xe0fb>
  407671:	mov    esi,0x5
  407676:	mov    edx,0x1
  40767b:	call   4011b0 <fwrite@plt>
  407680:	mov    rcx,QWORD PTR [r13+0x10]
  407684:	lea    rdi,[rip+0x7c46]        # 40f2d1 <strstr@plt+0xe101>
  40768b:	mov    esi,0x3b
  407690:	mov    edx,0x1
  407695:	call   4011b0 <fwrite@plt>
  40769a:	cmp    BYTE PTR [rip+0xbb3f],0x0        # 4131e0 <strstr@plt+0x12010>
  4076a1:	mov    rcx,QWORD PTR [r13+0x10]
  4076a5:	je     4076e8 <strstr@plt+0x6518>
  4076a7:	lea    rbp,[rip+0xbb32]        # 4131e0 <strstr@plt+0x12010>
  4076ae:	lea    rbx,[rip+0x7c58]        # 40f30d <strstr@plt+0xe13d>
  4076b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076bf:	nop
  4076c0:	xor    eax,eax
  4076c2:	mov    rdi,rcx
  4076c5:	mov    rsi,rbx
  4076c8:	mov    rdx,rbp
  4076cb:	call   401120 <fprintf@plt>
  4076d0:	mov    rdi,rbp
  4076d3:	call   4010a0 <strlen@plt>
  4076d8:	cmp    BYTE PTR [rbp+rax*1+0x1],0x0
  4076dd:	lea    rbp,[rbp+rax*1+0x1]
  4076e2:	mov    rcx,QWORD PTR [r13+0x10]
  4076e6:	jne    4076c0 <strstr@plt+0x64f0>
  4076e8:	lea    rdi,[rip+0x7bdc]        # 40f2cb <strstr@plt+0xe0fb>
  4076ef:	mov    esi,0x5
  4076f4:	jmp    407706 <strstr@plt+0x6536>
  4076f6:	mov    rcx,QWORD PTR [r13+0x10]
  4076fa:	lea    rdi,[rip+0x7442]        # 40eb43 <strstr@plt+0xd973>
  407701:	mov    esi,0x3
  407706:	mov    edx,0x1
  40770b:	call   4011b0 <fwrite@plt>
  407710:	add    rsp,0x118
  407717:	pop    rbx
  407718:	pop    r12
  40771a:	pop    r13
  40771c:	pop    r14
  40771e:	pop    r15
  407720:	pop    rbp
  407721:	ret    
  407722:	lea    rdi,[rsp+0x10]
  407727:	call   4010a0 <strlen@plt>
  40772c:	mov    BYTE PTR [rsp+rax*1+0xf],0x0
  407731:	mov    rax,QWORD PTR [rip+0xb8b8]        # 412ff0 <strstr@plt+0x11e20>
  407738:	mov    rdi,QWORD PTR [rax]
  40773b:	lea    rsi,[rip+0x7ac3]        # 40f205 <strstr@plt+0xe035>
  407742:	lea    rdx,[rip+0x7ab5]        # 40f1fe <strstr@plt+0xe02e>
  407749:	xor    eax,eax
  40774b:	mov    rcx,r14
  40774e:	call   401120 <fprintf@plt>
  407753:	mov    edi,0x1
  407758:	call   4011a0 <exit@plt>
  40775d:	mov    rax,QWORD PTR [rip+0xb88c]        # 412ff0 <strstr@plt+0x11e20>
  407764:	mov    rbx,QWORD PTR [rax]
  407767:	call   401040 <__errno_location@plt>
  40776c:	mov    edi,DWORD PTR [rax]
  40776e:	call   4011c0 <strerror@plt>
  407773:	mov    rcx,rax
  407776:	lea    rsi,[rip+0x7a4e]        # 40f1cb <strstr@plt+0xdffb>
  40777d:	xor    eax,eax
  40777f:	mov    rdi,rbx
  407782:	mov    rdx,r14
  407785:	jmp    40774e <strstr@plt+0x657e>
  407787:	nop    WORD PTR [rax+rax*1+0x0]
  407790:	mov    eax,DWORD PTR [rip+0xba36]        # 4131cc <strstr@plt+0x11ffc>
  407796:	test   eax,eax
  407798:	je     407897 <strstr@plt+0x66c7>
  40779e:	push   rbp
  40779f:	push   r15
  4077a1:	push   r14
  4077a3:	push   r13
  4077a5:	push   r12
  4077a7:	push   rbx
  4077a8:	sub    rsp,0x58
  4077ac:	mov    r14,rdi
  4077af:	cmp    eax,0x1
  4077b2:	jne    4077ce <strstr@plt+0x65fe>
  4077b4:	mov    rcx,QWORD PTR [r14+0x10]
  4077b8:	lea    rdi,[rip+0x7d3d]        # 40f4fc <strstr@plt+0xe32c>
  4077bf:	mov    esi,0x12
  4077c4:	mov    edx,0x1
  4077c9:	call   4011b0 <fwrite@plt>
  4077ce:	mov    rcx,QWORD PTR [r14+0x10]
  4077d2:	lea    rdi,[rip+0x7d36]        # 40f50f <strstr@plt+0xe33f>
  4077d9:	mov    esi,0x4
  4077de:	mov    edx,0x1
  4077e3:	call   4011b0 <fwrite@plt>
  4077e8:	mov    rdi,QWORD PTR [r14+0x10]
  4077ec:	lea    rsi,[rip+0x7d21]        # 40f514 <strstr@plt+0xe344>
  4077f3:	lea    rdx,[rip+0x7d3b]        # 40f535 <strstr@plt+0xe365>
  4077fa:	lea    rcx,[rip+0xd9ef]        # 4151f0 <strstr@plt+0x14020>
  407801:	xor    eax,eax
  407803:	call   401120 <fprintf@plt>
  407808:	mov    BYTE PTR [rsp],0x0
  40780c:	lea    rbx,[rip+0xb9cd]        # 4131e0 <strstr@plt+0x12010>
  407813:	cmp    QWORD PTR [rip+0xd9c6],rbx        # 4151e0 <strstr@plt+0x14010>
  40781a:	jbe    40786f <strstr@plt+0x669f>
  40781c:	lea    r13,[rip+0x7d1f]        # 40f542 <strstr@plt+0xe372>
  407823:	lea    r15,[rip+0x5ed0]        # 40d6fa <strstr@plt+0xc52a>
  40782a:	mov    r12,rsp
  40782d:	xor    ebp,ebp
  40782f:	nop
  407830:	movsxd rbp,ebp
  407833:	lea    rdi,[rsp+rbp*1]
  407837:	movzx  edx,BYTE PTR [rbx]
  40783a:	xor    eax,eax
  40783c:	mov    rsi,r13
  40783f:	call   401190 <sprintf@plt>
  407844:	add    ebp,eax
  407846:	cmp    ebp,0x4b
  407849:	jl     407862 <strstr@plt+0x6692>
  40784b:	mov    rdi,QWORD PTR [r14+0x10]
  40784f:	xor    ebp,ebp
  407851:	xor    eax,eax
  407853:	mov    rsi,r15
  407856:	mov    rdx,r12
  407859:	call   401120 <fprintf@plt>
  40785e:	mov    BYTE PTR [rsp],0x0
  407862:	add    rbx,0x1
  407866:	cmp    rbx,QWORD PTR [rip+0xd973]        # 4151e0 <strstr@plt+0x14010>
  40786d:	jb     407830 <strstr@plt+0x6660>
  40786f:	mov    rdi,QWORD PTR [r14+0x10]
  407873:	lea    rsi,[rip+0x7ccc]        # 40f546 <strstr@plt+0xe376>
  40787a:	mov    rdx,rsp
  40787d:	mov    ecx,0xff
  407882:	xor    eax,eax
  407884:	call   401120 <fprintf@plt>
  407889:	add    rsp,0x58
  40788d:	pop    rbx
  40788e:	pop    r12
  407890:	pop    r13
  407892:	pop    r14
  407894:	pop    r15
  407896:	pop    rbp
  407897:	ret    
  407898:	nop    DWORD PTR [rax+rax*1+0x0]
  4078a0:	push   r15
  4078a2:	push   r14
  4078a4:	push   rbx
  4078a5:	mov    r14,rsi
  4078a8:	cmp    DWORD PTR [rdi+0x8],0x7
  4078ac:	jne    407944 <strstr@plt+0x6774>
  4078b2:	mov    rbx,rdi
  4078b5:	call   407790 <strstr@plt+0x65c0>
  4078ba:	mov    al,BYTE PTR [rip+0xb900]        # 4131c0 <strstr@plt+0x11ff0>
  4078c0:	mov    BYTE PTR [rip+0xb91a],al        # 4131e0 <strstr@plt+0x12010>
  4078c6:	mov    al,BYTE PTR [rip+0xb8fc]        # 4131c8 <strstr@plt+0x11ff8>
  4078cc:	mov    BYTE PTR [rip+0xb90f],al        # 4131e1 <strstr@plt+0x12011>
  4078d2:	lea    rax,[rip+0xb90a]        # 4131e3 <strstr@plt+0x12013>
  4078d9:	mov    QWORD PTR [rip+0xd900],rax        # 4151e0 <strstr@plt+0x14010>
  4078e0:	mov    BYTE PTR [rip+0xb8fb],0x0        # 4131e2 <strstr@plt+0x12012>
  4078e7:	mov    DWORD PTR [rip+0xb8db],0x1        # 4131cc <strstr@plt+0x11ffc>
  4078f1:	mov    rdi,QWORD PTR [rbx+0x10]
  4078f5:	lea    rsi,[rip+0x7a56]        # 40f352 <strstr@plt+0xe182>
  4078fc:	lea    r15,[rip+0x78fb]        # 40f1fe <strstr@plt+0xe02e>
  407903:	xor    eax,eax
  407905:	mov    rdx,r15
  407908:	mov    rcx,r14
  40790b:	call   401120 <fprintf@plt>
  407910:	mov    rdi,QWORD PTR [rbx+0x10]
  407914:	lea    rsi,[rip+0x7a4b]        # 40f366 <strstr@plt+0xe196>
  40791b:	xor    eax,eax
  40791d:	mov    rdx,r15
  407920:	mov    rcx,r14
  407923:	call   401120 <fprintf@plt>
  407928:	mov    rdi,QWORD PTR [rbx+0x10]
  40792c:	lea    rsi,[rip+0x7a47]        # 40f37a <strstr@plt+0xe1aa>
  407933:	lea    rdx,[rip+0x7a67]        # 40f3a1 <strstr@plt+0xe1d1>
  40793a:	xor    eax,eax
  40793c:	mov    rcx,r14
  40793f:	call   401120 <fprintf@plt>
  407944:	mov    rdi,r14
  407947:	call   4010a0 <strlen@plt>
  40794c:	mov    QWORD PTR [rip+0xd895],rax        # 4151e8 <strstr@plt+0x14018>
  407953:	cmp    rax,0x50
  407957:	jae    40796d <strstr@plt+0x679d>
  407959:	lea    rdi,[rip+0xd890]        # 4151f0 <strstr@plt+0x14020>
  407960:	mov    rsi,r14
  407963:	pop    rbx
  407964:	pop    r14
  407966:	pop    r15
  407968:	jmp    401060 <strcpy@plt>
  40796d:	mov    rax,QWORD PTR [rip+0xb67c]        # 412ff0 <strstr@plt+0x11e20>
  407974:	mov    rdi,QWORD PTR [rax]
  407977:	lea    rsi,[rip+0x7a2e]        # 40f3ac <strstr@plt+0xe1dc>
  40797e:	xor    eax,eax
  407980:	mov    rdx,r14
  407983:	call   401120 <fprintf@plt>
  407988:	mov    edi,0x1
  40798d:	call   4011a0 <exit@plt>
  407992:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40799c:	nop    DWORD PTR [rax+0x0]
  4079a0:	push   rbp
  4079a1:	push   r15
  4079a3:	push   r14
  4079a5:	push   r13
  4079a7:	push   r12
  4079a9:	push   rbx
  4079aa:	push   rax
  4079ab:	mov    ebp,edx
  4079ad:	mov    r12,rsi
  4079b0:	mov    r14,rdi
  4079b3:	test   edx,edx
  4079b5:	je     4079be <strstr@plt+0x67ee>
  4079b7:	add    DWORD PTR [rip+0xb80a],0x1        # 4131c8 <strstr@plt+0x11ff8>
  4079be:	mov    eax,DWORD PTR [r14+0x8]
  4079c2:	lea    ecx,[rax-0x6]
  4079c5:	cmp    ecx,0x3
  4079c8:	ja     407acb <strstr@plt+0x68fb>
  4079ce:	lea    rax,[rip+0x7797]        # 40f16c <strstr@plt+0xdf9c>
  4079d5:	movsxd rcx,DWORD PTR [rax+rcx*4]
  4079d9:	add    rcx,rax
  4079dc:	jmp    rcx
  4079de:	mov    rdi,QWORD PTR [r14+0x10]
  4079e2:	lea    rsi,[rip+0x7a48]        # 40f431 <strstr@plt+0xe261>
  4079e9:	jmp    407a5d <strstr@plt+0x688d>
  4079eb:	mov    rdi,r12
  4079ee:	call   4010a0 <strlen@plt>
  4079f3:	cmp    rax,0x50
  4079f7:	jae    407bff <strstr@plt+0x6a2f>
  4079fd:	lea    rdi,[rip+0xd83c]        # 415240 <strstr@plt+0x14070>
  407a04:	mov    rsi,r12
  407a07:	call   401060 <strcpy@plt>
  407a0c:	jmp    407a67 <strstr@plt+0x6897>
  407a0e:	mov    dl,BYTE PTR [r12+0x1]
  407a13:	test   dl,dl
  407a15:	je     407a52 <strstr@plt+0x6882>
  407a17:	lea    rsi,[r12+0x1]
  407a1c:	xor    eax,eax
  407a1e:	lea    rcx,[rip+0xd7cb]        # 4151f0 <strstr@plt+0x14020>
  407a25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a2f:	nop
  407a30:	cmp    BYTE PTR [rax+rcx*1],0x0
  407a34:	je     407a52 <strstr@plt+0x6882>
  407a36:	cmp    dl,0x5f
  407a39:	jne    407a3e <strstr@plt+0x686e>
  407a3b:	mov    BYTE PTR [rsi],0x2e
  407a3e:	lea    edx,[rax+0x2]
  407a41:	lea    rsi,[r12+rdx*1]
  407a45:	movzx  edx,BYTE PTR [r12+rdx*1]
  407a4a:	add    rax,0x1
  407a4e:	test   dl,dl
  407a50:	jne    407a30 <strstr@plt+0x6860>
  407a52:	mov    rdi,QWORD PTR [r14+0x10]
  407a56:	lea    rsi,[rip+0x710b]        # 40eb68 <strstr@plt+0xd998>
  407a5d:	xor    eax,eax
  407a5f:	mov    rdx,r12
  407a62:	call   401120 <fprintf@plt>
  407a67:	add    DWORD PTR [rip+0xb752],0x1        # 4131c0 <strstr@plt+0x11ff0>
  407a6e:	mov    DWORD PTR [rip+0xb758],0x0        # 4131d0 <strstr@plt+0x12000>
  407a78:	add    rsp,0x8
  407a7c:	pop    rbx
  407a7d:	pop    r12
  407a7f:	pop    r13
  407a81:	pop    r14
  407a83:	pop    r15
  407a85:	pop    rbp
  407a86:	ret    
  407a87:	mov    ecx,DWORD PTR [rip+0xb73f]        # 4131cc <strstr@plt+0x11ffc>
  407a8d:	test   ecx,ecx
  407a8f:	je     407c12 <strstr@plt+0x6a42>
  407a95:	mov    eax,DWORD PTR [rip+0xb735]        # 4131d0 <strstr@plt+0x12000>
  407a9b:	cmp    eax,0x1
  407a9e:	jne    407b55 <strstr@plt+0x6985>
  407aa4:	mov    rax,QWORD PTR [rip+0xd735]        # 4151e0 <strstr@plt+0x14010>
  407aab:	lea    rcx,[rax+0x1]
  407aaf:	lea    rdx,[rip+0xd72a]        # 4151e0 <strstr@plt+0x14010>
  407ab6:	cmp    rcx,rdx
  407ab9:	ja     407c37 <strstr@plt+0x6a67>
  407abf:	mov    QWORD PTR [rip+0xd71a],rcx        # 4151e0 <strstr@plt+0x14010>
  407ac6:	mov    BYTE PTR [rax],0xfe
  407ac9:	jmp    407a67 <strstr@plt+0x6897>
  407acb:	test   ebp,ebp
  407acd:	je     407a67 <strstr@plt+0x6897>
  407acf:	cmp    eax,0x5
  407ad2:	jne    407a67 <strstr@plt+0x6897>
  407ad4:	movsxd r13,DWORD PTR [r14+0x3c]
  407ad8:	test   r13,r13
  407adb:	jle    407b29 <strstr@plt+0x6959>
  407add:	mov    r15,QWORD PTR [r14+0x10]
  407ae1:	mov    rbp,QWORD PTR [r14+0x78]
  407ae5:	xor    ebx,ebx
  407ae7:	nop    WORD PTR [rax+rax*1+0x0]
  407af0:	mov    rdi,QWORD PTR [rbp+rbx*8+0x0]
  407af5:	cmp    BYTE PTR [rdi],0x66
  407af8:	jne    407b20 <strstr@plt+0x6950>
  407afa:	cmp    BYTE PTR [rdi+0x1],0x66
  407afe:	jne    407b20 <strstr@plt+0x6950>
  407b00:	cmp    BYTE PTR [rdi+0x2],0x5f
  407b04:	jne    407b20 <strstr@plt+0x6950>
  407b06:	add    rdi,0x3
  407b0a:	mov    rsi,r12
  407b0d:	call   401100 <strcmp@plt>
  407b12:	test   eax,eax
  407b14:	je     407bde <strstr@plt+0x6a0e>
  407b1a:	nop    WORD PTR [rax+rax*1+0x0]
  407b20:	add    rbx,0x1
  407b24:	cmp    rbx,r13
  407b27:	jl     407af0 <strstr@plt+0x6920>
  407b29:	mov    rax,QWORD PTR [rip+0xb4c0]        # 412ff0 <strstr@plt+0x11e20>
  407b30:	mov    rdi,QWORD PTR [rax]
  407b33:	lea    rsi,[rip+0x794a]        # 40f484 <strstr@plt+0xe2b4>
  407b3a:	lea    rdx,[rip+0x7968]        # 40f4a9 <strstr@plt+0xe2d9>
  407b41:	xor    eax,eax
  407b43:	mov    rcx,r12
  407b46:	call   401120 <fprintf@plt>
  407b4b:	mov    edi,0x1
  407b50:	call   4011a0 <exit@plt>
  407b55:	cmp    ebp,0x80
  407b5b:	je     407bb5 <strstr@plt+0x69e5>
  407b5d:	cmp    ecx,0x1
  407b60:	je     407b7c <strstr@plt+0x69ac>
  407b62:	mov    rcx,QWORD PTR [r14+0x10]
  407b66:	lea    rdi,[rip+0x7629]        # 40f196 <strstr@plt+0xdfc6>
  407b6d:	mov    esi,0x2
  407b72:	mov    edx,0x1
  407b77:	call   4011b0 <fwrite@plt>
  407b7c:	test   ebp,ebp
  407b7e:	mov    DWORD PTR [rip+0xb644],0x2        # 4131cc <strstr@plt+0x11ffc>
  407b88:	mov    rdi,QWORD PTR [r14+0x10]
  407b8c:	lea    rax,[rip+0x788f]        # 40f422 <strstr@plt+0xe252>
  407b93:	lea    rdx,[rip+0x7890]        # 40f42a <strstr@plt+0xe25a>
  407b9a:	cmovne rdx,rax
  407b9e:	lea    rsi,[rip+0x7876]        # 40f41b <strstr@plt+0xe24b>
  407ba5:	xor    eax,eax
  407ba7:	mov    rcx,r12
  407baa:	call   401120 <fprintf@plt>
  407baf:	mov    eax,DWORD PTR [rip+0xb61b]        # 4131d0 <strstr@plt+0x12000>
  407bb5:	cmp    eax,0x2
  407bb8:	je     407bc1 <strstr@plt+0x69f1>
  407bba:	add    BYTE PTR [rip+0xb621],0x1        # 4131e2 <strstr@plt+0x12012>
  407bc1:	cmp    eax,0x2
  407bc4:	lea    rax,[rip+0x6f32]        # 40eafd <strstr@plt+0xd92d>
  407bcb:	cmove  r12,rax
  407bcf:	mov    rdi,r12
  407bd2:	mov    esi,ebp
  407bd4:	call   408150 <strstr@plt+0x6f80>
  407bd9:	jmp    407a67 <strstr@plt+0x6897>
  407bde:	mov    rax,QWORD PTR [r14+0x50]
  407be2:	mov    edx,DWORD PTR [rax+rbx*8]
  407be5:	sub    edx,DWORD PTR [r14+0x28]
  407be9:	lea    rsi,[rip+0x7871]        # 40f461 <strstr@plt+0xe291>
  407bf0:	xor    eax,eax
  407bf2:	mov    rdi,r15
  407bf5:	call   401120 <fprintf@plt>
  407bfa:	jmp    407a67 <strstr@plt+0x6897>
  407bff:	mov    rax,QWORD PTR [rip+0xb3ea]        # 412ff0 <strstr@plt+0x11e20>
  407c06:	mov    rdi,QWORD PTR [rax]
  407c09:	lea    rsi,[rip+0x782c]        # 40f43c <strstr@plt+0xe26c>
  407c10:	jmp    407c23 <strstr@plt+0x6a53>
  407c12:	mov    rax,QWORD PTR [rip+0xb3d7]        # 412ff0 <strstr@plt+0x11e20>
  407c19:	mov    rdi,QWORD PTR [rax]
  407c1c:	lea    rsi,[rip+0x77ac]        # 40f3cf <strstr@plt+0xe1ff>
  407c23:	xor    eax,eax
  407c25:	mov    rdx,r12
  407c28:	call   401120 <fprintf@plt>
  407c2d:	mov    edi,0x1
  407c32:	call   4011a0 <exit@plt>
  407c37:	mov    rax,QWORD PTR [rip+0xb3b2]        # 412ff0 <strstr@plt+0x11e20>
  407c3e:	mov    rcx,QWORD PTR [rax]
  407c41:	lea    rdi,[rip+0x77b4]        # 40f3fc <strstr@plt+0xe22c>
  407c48:	mov    esi,0x1e
  407c4d:	mov    edx,0x1
  407c52:	call   4011b0 <fwrite@plt>
  407c57:	mov    edi,0x1
  407c5c:	call   4011a0 <exit@plt>
  407c61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  407c70:	push   rbp
  407c71:	push   r15
  407c73:	push   r14
  407c75:	push   r13
  407c77:	push   r12
  407c79:	push   rbx
  407c7a:	push   rax
  407c7b:	cmp    DWORD PTR [rdi+0x8],0x8
  407c7f:	jne    407d5f <strstr@plt+0x6b8f>
  407c85:	mov    rbp,rsi
  407c88:	mov    r15,rdi
  407c8b:	mov    ecx,DWORD PTR [rip+0xb533]        # 4131c4 <strstr@plt+0x11ff4>
  407c91:	add    ecx,0x1
  407c94:	mov    eax,DWORD PTR [rip+0xb526]        # 4131c0 <strstr@plt+0x11ff0>
  407c9a:	cmp    ecx,eax
  407c9c:	jge    407ce2 <strstr@plt+0x6b12>
  407c9e:	lea    rbx,[rip+0x780b]        # 40f4b0 <strstr@plt+0xe2e0>
  407ca5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407caf:	nop
  407cb0:	mov    rcx,QWORD PTR [r15+0x10]
  407cb4:	mov    esi,0x3
  407cb9:	mov    edx,0x1
  407cbe:	mov    rdi,rbx
  407cc1:	call   4011b0 <fwrite@plt>
  407cc6:	mov    ecx,DWORD PTR [rip+0xb4f8]        # 4131c4 <strstr@plt+0x11ff4>
  407ccc:	lea    eax,[rcx+0x1]
  407ccf:	mov    DWORD PTR [rip+0xb4ef],eax        # 4131c4 <strstr@plt+0x11ff4>
  407cd5:	add    ecx,0x2
  407cd8:	mov    eax,DWORD PTR [rip+0xb4e2]        # 4131c0 <strstr@plt+0x11ff0>
  407cde:	cmp    ecx,eax
  407ce0:	jl     407cb0 <strstr@plt+0x6ae0>
  407ce2:	mov    DWORD PTR [rip+0xb4dc],eax        # 4131c4 <strstr@plt+0x11ff4>
  407ce8:	cmp    BYTE PTR [rbp+0x0],0x2e
  407cec:	lea    r12,[rip+0xd54d]        # 415240 <strstr@plt+0x14070>
  407cf3:	cmovne r12,rbp
  407cf7:	mov    esi,0x20
  407cfc:	mov    rdi,r12
  407cff:	call   4010b0 <strchr@plt>
  407d04:	test   rax,rax
  407d07:	je     407d6e <strstr@plt+0x6b9e>
  407d09:	mov    r14,rax
  407d0c:	add    r14,0x1
  407d10:	mov    BYTE PTR [rax],0x0
  407d13:	cmp    BYTE PTR [rip+0xb4c6],0x0        # 4131e0 <strstr@plt+0x12010>
  407d1a:	je     407d7a <strstr@plt+0x6baa>
  407d1c:	lea    rbp,[rip+0xb4bd]        # 4131e0 <strstr@plt+0x12010>
  407d23:	mov    r13d,0x2
  407d29:	nop    DWORD PTR [rax+0x0]
  407d30:	mov    rdi,rbp
  407d33:	mov    rsi,r12
  407d36:	call   401100 <strcmp@plt>
  407d3b:	test   eax,eax
  407d3d:	je     407dad <strstr@plt+0x6bdd>
  407d3f:	mov    rdi,rbp
  407d42:	call   4010a0 <strlen@plt>
  407d47:	lea    rbx,[rax+rbp*1]
  407d4b:	add    rbx,0x1
  407d4f:	add    r13d,0x1
  407d53:	cmp    BYTE PTR [rbp+rax*1+0x1],0x0
  407d58:	mov    rbp,rbx
  407d5b:	jne    407d30 <strstr@plt+0x6b60>
  407d5d:	jmp    407d87 <strstr@plt+0x6bb7>
  407d5f:	add    rsp,0x8
  407d63:	pop    rbx
  407d64:	pop    r12
  407d66:	pop    r13
  407d68:	pop    r14
  407d6a:	pop    r15
  407d6c:	pop    rbp
  407d6d:	ret    
  407d6e:	xor    r14d,r14d
  407d71:	cmp    BYTE PTR [rip+0xb468],0x0        # 4131e0 <strstr@plt+0x12010>
  407d78:	jne    407d1c <strstr@plt+0x6b4c>
  407d7a:	lea    rbx,[rip+0xb45f]        # 4131e0 <strstr@plt+0x12010>
  407d81:	mov    r13d,0x2
  407d87:	mov    rdi,r12
  407d8a:	call   4010a0 <strlen@plt>
  407d8f:	add    rax,rbx
  407d92:	add    rax,0x1
  407d96:	lea    rcx,[rip+0xd443]        # 4151e0 <strstr@plt+0x14010>
  407d9d:	cmp    rax,rcx
  407da0:	jae    407df7 <strstr@plt+0x6c27>
  407da2:	mov    rdi,rbx
  407da5:	mov    rsi,r12
  407da8:	call   401060 <strcpy@plt>
  407dad:	mov    rdi,QWORD PTR [r15+0x10]
  407db1:	test   r14,r14
  407db4:	je     407dd8 <strstr@plt+0x6c08>
  407db6:	lea    rsi,[rip+0x76f7]        # 40f4b4 <strstr@plt+0xe2e4>
  407dbd:	xor    eax,eax
  407dbf:	mov    edx,r13d
  407dc2:	mov    rcx,r14
  407dc5:	add    rsp,0x8
  407dc9:	pop    rbx
  407dca:	pop    r12
  407dcc:	pop    r13
  407dce:	pop    r14
  407dd0:	pop    r15
  407dd2:	pop    rbp
  407dd3:	jmp    401120 <fprintf@plt>
  407dd8:	lea    rsi,[rip+0x76e5]        # 40f4c4 <strstr@plt+0xe2f4>
  407ddf:	xor    eax,eax
  407de1:	mov    edx,r13d
  407de4:	add    rsp,0x8
  407de8:	pop    rbx
  407de9:	pop    r12
  407deb:	pop    r13
  407ded:	pop    r14
  407def:	pop    r15
  407df1:	pop    rbp
  407df2:	jmp    401120 <fprintf@plt>
  407df7:	mov    rax,QWORD PTR [rip+0xb1f2]        # 412ff0 <strstr@plt+0x11e20>
  407dfe:	mov    rcx,QWORD PTR [rax]
  407e01:	lea    rdi,[rip+0x75f4]        # 40f3fc <strstr@plt+0xe22c>
  407e08:	mov    esi,0x1e
  407e0d:	mov    edx,0x1
  407e12:	call   4011b0 <fwrite@plt>
  407e17:	mov    edi,0x1
  407e1c:	call   4011a0 <exit@plt>
  407e21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e2b:	nop    DWORD PTR [rax+rax*1+0x0]
  407e30:	push   r14
  407e32:	push   rbx
  407e33:	push   rax
  407e34:	cmp    DWORD PTR [rdi+0x8],0x7
  407e38:	jne    407fd8 <strstr@plt+0x6e08>
  407e3e:	mov    r14,rsi
  407e41:	mov    rdi,rsi
  407e44:	call   4010a0 <strlen@plt>
  407e49:	mov    rbx,rax
  407e4c:	mov    al,BYTE PTR [r14]
  407e4f:	cmp    al,0x22
  407e51:	jne    407ee4 <strstr@plt+0x6d14>
  407e57:	cmp    ebx,0x2
  407e5a:	jl     407fe0 <strstr@plt+0x6e10>
  407e60:	shl    rbx,0x20
  407e64:	movabs rax,0xffffffff00000000
  407e6e:	add    rax,rbx
  407e71:	sar    rax,0x20
  407e75:	cmp    BYTE PTR [r14+rax*1],0x22
  407e7a:	jne    407fe0 <strstr@plt+0x6e10>
  407e80:	mov    BYTE PTR [r14+rax*1],0x0
  407e85:	add    r14,0x1
  407e89:	mov    rdi,r14
  407e8c:	call   4010a0 <strlen@plt>
  407e91:	cmp    rax,0x3a
  407e95:	jae    408036 <strstr@plt+0x6e66>
  407e9b:	mov    rcx,QWORD PTR [rip+0xd33e]        # 4151e0 <strstr@plt+0x14010>
  407ea2:	lea    rdx,[rcx+rax*1]
  407ea6:	add    rdx,0x3
  407eaa:	lea    rsi,[rip+0xd32f]        # 4151e0 <strstr@plt+0x14010>
  407eb1:	cmp    rdx,rsi
  407eb4:	ja     40800c <strstr@plt+0x6e3c>
  407eba:	lea    rbx,[rcx+rax*1]
  407ebe:	add    rbx,0x1
  407ec2:	mov    edx,eax
  407ec4:	or     dl,0xc0
  407ec7:	mov    BYTE PTR [rcx],dl
  407ec9:	lea    rdi,[rcx+0x1]
  407ecd:	mov    rsi,r14
  407ed0:	mov    rdx,rax
  407ed3:	call   401140 <memcpy@plt>
  407ed8:	mov    QWORD PTR [rip+0xd301],rbx        # 4151e0 <strstr@plt+0x14010>
  407edf:	jmp    407fd8 <strstr@plt+0x6e08>
  407ee4:	add    al,0xd0
  407ee6:	cmp    al,0x9
  407ee8:	ja     407f31 <strstr@plt+0x6d61>
  407eea:	mov    rsi,rsp
  407eed:	mov    rdi,r14
  407ef0:	call   401080 <strtod@plt>
  407ef5:	mov    rax,QWORD PTR [rsp]
  407ef9:	cmp    BYTE PTR [rax],0x0
  407efc:	jne    407fe0 <strstr@plt+0x6e10>
  407f02:	mov    rax,QWORD PTR [rip+0xd2d7]        # 4151e0 <strstr@plt+0x14010>
  407f09:	lea    rcx,[rax+0x9]
  407f0d:	lea    rdx,[rip+0xd2cc]        # 4151e0 <strstr@plt+0x14010>
  407f14:	cmp    rcx,rdx
  407f17:	ja     40800c <strstr@plt+0x6e3c>
  407f1d:	mov    BYTE PTR [rax],0xfb
  407f20:	vmovsd QWORD PTR [rax+0x1],xmm0
  407f25:	mov    QWORD PTR [rip+0xd2b4],rcx        # 4151e0 <strstr@plt+0x14010>
  407f2c:	jmp    407fd8 <strstr@plt+0x6e08>
  407f31:	lea    rsi,[rip+0x7597]        # 40f4cf <strstr@plt+0xe2ff>
  407f38:	mov    rdi,r14
  407f3b:	call   401100 <strcmp@plt>
  407f40:	test   eax,eax
  407f42:	je     407fb7 <strstr@plt+0x6de7>
  407f44:	cmp    ebx,0x5
  407f47:	jl     407fe0 <strstr@plt+0x6e10>
  407f4d:	lea    rsi,[rip+0x7582]        # 40f4d6 <strstr@plt+0xe306>
  407f54:	mov    edx,0x4
  407f59:	mov    rdi,r14
  407f5c:	call   401050 <strncmp@plt>
  407f61:	test   eax,eax
  407f63:	jne    407fe0 <strstr@plt+0x6e10>
  407f65:	mov    rax,QWORD PTR [rip+0xd274]        # 4151e0 <strstr@plt+0x14010>
  407f6c:	lea    rcx,[rax+0x2]
  407f70:	lea    rdx,[rip+0xd269]        # 4151e0 <strstr@plt+0x14010>
  407f77:	cmp    rcx,rdx
  407f7a:	ja     40800c <strstr@plt+0x6e3c>
  407f80:	lea    rcx,[rax+0x1]
  407f84:	mov    QWORD PTR [rip+0xd255],rcx        # 4151e0 <strstr@plt+0x14010>
  407f8b:	mov    BYTE PTR [rax],0xfc
  407f8e:	add    r14,0x4
  407f92:	xor    esi,esi
  407f94:	mov    edx,0xa
  407f99:	mov    rdi,r14
  407f9c:	call   401130 <strtol@plt>
  407fa1:	mov    rcx,QWORD PTR [rip+0xd238]        # 4151e0 <strstr@plt+0x14010>
  407fa8:	lea    rdx,[rcx+0x1]
  407fac:	mov    QWORD PTR [rip+0xd22d],rdx        # 4151e0 <strstr@plt+0x14010>
  407fb3:	mov    BYTE PTR [rcx],al
  407fb5:	jmp    407fd8 <strstr@plt+0x6e08>
  407fb7:	mov    rax,QWORD PTR [rip+0xd222]        # 4151e0 <strstr@plt+0x14010>
  407fbe:	lea    rcx,[rax+0x1]
  407fc2:	lea    rdx,[rip+0xd217]        # 4151e0 <strstr@plt+0x14010>
  407fc9:	cmp    rcx,rdx
  407fcc:	ja     40800c <strstr@plt+0x6e3c>
  407fce:	mov    QWORD PTR [rip+0xd20b],rcx        # 4151e0 <strstr@plt+0x14010>
  407fd5:	mov    BYTE PTR [rax],0xfd
  407fd8:	add    rsp,0x8
  407fdc:	pop    rbx
  407fdd:	pop    r14
  407fdf:	ret    
  407fe0:	mov    rax,QWORD PTR [rip+0xb009]        # 412ff0 <strstr@plt+0x11e20>
  407fe7:	mov    rdi,QWORD PTR [rax]
  407fea:	lea    rsi,[rip+0x74ea]        # 40f4db <strstr@plt+0xe30b>
  407ff1:	lea    rdx,[rip+0x7206]        # 40f1fe <strstr@plt+0xe02e>
  407ff8:	xor    eax,eax
  407ffa:	mov    rcx,r14
  407ffd:	call   401120 <fprintf@plt>
  408002:	mov    edi,0x1
  408007:	call   4011a0 <exit@plt>
  40800c:	mov    rax,QWORD PTR [rip+0xafdd]        # 412ff0 <strstr@plt+0x11e20>
  408013:	mov    rcx,QWORD PTR [rax]
  408016:	lea    rdi,[rip+0x73df]        # 40f3fc <strstr@plt+0xe22c>
  40801d:	mov    esi,0x1e
  408022:	mov    edx,0x1
  408027:	call   4011b0 <fwrite@plt>
  40802c:	mov    edi,0x1
  408031:	call   4011a0 <exit@plt>
  408036:	mov    rax,QWORD PTR [rip+0xafb3]        # 412ff0 <strstr@plt+0x11e20>
  40803d:	mov    rdi,QWORD PTR [rax]
  408040:	lea    rsi,[rip+0x741f]        # 40f466 <strstr@plt+0xe296>
  408047:	xor    eax,eax
  408049:	mov    rdx,r14
  40804c:	call   401120 <fprintf@plt>
  408051:	mov    edi,0x1
  408056:	call   4011a0 <exit@plt>
  40805b:	nop    DWORD PTR [rax+rax*1+0x0]
  408060:	push   r15
  408062:	push   r14
  408064:	push   r12
  408066:	push   rbx
  408067:	push   rax
  408068:	cmp    DWORD PTR [rdi+0x8],0x7
  40806c:	jne    4080e2 <strstr@plt+0x6f12>
  40806e:	mov    r14,rsi
  408071:	cmp    BYTE PTR [rsi],0x21
  408074:	jne    408081 <strstr@plt+0x6eb1>
  408076:	cmp    BYTE PTR [r14+0x1],0x0
  40807b:	jne    408081 <strstr@plt+0x6eb1>
  40807d:	mov    BYTE PTR [r14],0x0
  408081:	mov    rdi,r14
  408084:	call   4010a0 <strlen@plt>
  408089:	cmp    rax,0x3a
  40808d:	jae    4080ee <strstr@plt+0x6f1e>
  40808f:	mov    rbx,rax
  408092:	mov    r15,QWORD PTR [rip+0xd147]        # 4151e0 <strstr@plt+0x14010>
  408099:	add    rax,r15
  40809c:	add    rax,0x3
  4080a0:	lea    rcx,[rip+0xd139]        # 4151e0 <strstr@plt+0x14010>
  4080a7:	cmp    rax,rcx
  4080aa:	ja     408113 <strstr@plt+0x6f43>
  4080ac:	lea    rdi,[r15+0x1]
  4080b0:	lea    r12,[r15+rbx*1]
  4080b4:	add    r12,0x1
  4080b8:	mov    eax,ebx
  4080ba:	or     al,0xc0
  4080bc:	mov    BYTE PTR [r15],al
  4080bf:	mov    rsi,r14
  4080c2:	mov    rdx,rbx
  4080c5:	call   401140 <memcpy@plt>
  4080ca:	add    r12,0x1
  4080ce:	mov    QWORD PTR [rip+0xd10b],r12        # 4151e0 <strstr@plt+0x14010>
  4080d5:	mov    BYTE PTR [r15+rbx*1+0x1],0xfa
  4080db:	add    BYTE PTR [rip+0xb100],0x1        # 4131e2 <strstr@plt+0x12012>
  4080e2:	add    rsp,0x8
  4080e6:	pop    rbx
  4080e7:	pop    r12
  4080e9:	pop    r14
  4080eb:	pop    r15
  4080ed:	ret    
  4080ee:	mov    rax,QWORD PTR [rip+0xaefb]        # 412ff0 <strstr@plt+0x11e20>
  4080f5:	mov    rdi,QWORD PTR [rax]
  4080f8:	lea    rsi,[rip+0x7367]        # 40f466 <strstr@plt+0xe296>
  4080ff:	xor    eax,eax
  408101:	mov    rdx,r14
  408104:	call   401120 <fprintf@plt>
  408109:	mov    edi,0x1
  40810e:	call   4011a0 <exit@plt>
  408113:	mov    rax,QWORD PTR [rip+0xaed6]        # 412ff0 <strstr@plt+0x11e20>
  40811a:	mov    rcx,QWORD PTR [rax]
  40811d:	lea    rdi,[rip+0x72d8]        # 40f3fc <strstr@plt+0xe22c>
  408124:	mov    esi,0x1e
  408129:	mov    edx,0x1
  40812e:	call   4011b0 <fwrite@plt>
  408133:	mov    edi,0x1
  408138:	call   4011a0 <exit@plt>
  40813d:	nop    DWORD PTR [rax]
  408140:	mov    DWORD PTR [rip+0xb08a],edx        # 4131d0 <strstr@plt+0x12000>
  408146:	ret    
  408147:	nop    WORD PTR [rax+rax*1+0x0]
  408150:	push   rbp
  408151:	push   r15
  408153:	push   r14
  408155:	push   r12
  408157:	push   rbx
  408158:	mov    r12d,esi
  40815b:	mov    r14,rdi
  40815e:	call   4010a0 <strlen@plt>
  408163:	mov    rbx,rax
  408166:	cmp    r12d,0xc0
  40816d:	je     4081a6 <strstr@plt+0x6fd6>
  40816f:	mov    r15,QWORD PTR [rip+0xd072]        # 4151e8 <strstr@plt+0x14018>
  408176:	cmp    rbx,r15
  408179:	jbe    4081a6 <strstr@plt+0x6fd6>
  40817b:	cmp    BYTE PTR [r14+r15*1],0x5f
  408180:	jne    4081a6 <strstr@plt+0x6fd6>
  408182:	lea    rsi,[rip+0xd067]        # 4151f0 <strstr@plt+0x14020>
  408189:	mov    rdi,r14
  40818c:	mov    rdx,r15
  40818f:	call   401050 <strncmp@plt>
  408194:	test   eax,eax
  408196:	jne    4081a6 <strstr@plt+0x6fd6>
  408198:	add    r14,r15
  40819b:	add    r14,0x1
  40819f:	add    r15,0x1
  4081a3:	sub    rbx,r15
  4081a6:	cmp    rbx,0x3a
  4081aa:	jae    4081f4 <strstr@plt+0x7024>
  4081ac:	mov    rax,QWORD PTR [rip+0xd02d]        # 4151e0 <strstr@plt+0x14010>
  4081b3:	lea    rcx,[rax+rbx*1]
  4081b7:	add    rcx,0x3
  4081bb:	lea    rdx,[rip+0xd01e]        # 4151e0 <strstr@plt+0x14010>
  4081c2:	cmp    rcx,rdx
  4081c5:	ja     408219 <strstr@plt+0x7049>
  4081c7:	lea    rbp,[rax+rbx*1]
  4081cb:	add    rbp,0x1
  4081cf:	or     r12d,ebx
  4081d2:	mov    BYTE PTR [rax],r12b
  4081d5:	lea    rdi,[rax+0x1]
  4081d9:	mov    rsi,r14
  4081dc:	mov    rdx,rbx
  4081df:	call   401140 <memcpy@plt>
  4081e4:	mov    QWORD PTR [rip+0xcff5],rbp        # 4151e0 <strstr@plt+0x14010>
  4081eb:	pop    rbx
  4081ec:	pop    r12
  4081ee:	pop    r14
  4081f0:	pop    r15
  4081f2:	pop    rbp
  4081f3:	ret    
  4081f4:	mov    rax,QWORD PTR [rip+0xadf5]        # 412ff0 <strstr@plt+0x11e20>
  4081fb:	mov    rdi,QWORD PTR [rax]
  4081fe:	lea    rsi,[rip+0x7261]        # 40f466 <strstr@plt+0xe296>
  408205:	xor    eax,eax
  408207:	mov    rdx,r14
  40820a:	call   401120 <fprintf@plt>
  40820f:	mov    edi,0x1
  408214:	call   4011a0 <exit@plt>
  408219:	mov    rax,QWORD PTR [rip+0xadd0]        # 412ff0 <strstr@plt+0x11e20>
  408220:	mov    rcx,QWORD PTR [rax]
  408223:	lea    rdi,[rip+0x71d2]        # 40f3fc <strstr@plt+0xe22c>
  40822a:	mov    esi,0x1e
  40822f:	mov    edx,0x1
  408234:	call   4011b0 <fwrite@plt>
  408239:	mov    edi,0x1
  40823e:	call   4011a0 <exit@plt>
  408243:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40824d:	nop    DWORD PTR [rax]
  408250:	push   rbp
  408251:	push   r15
  408253:	push   r14
  408255:	push   r13
  408257:	push   r12
  408259:	push   rbx
  40825a:	sub    rsp,0x8138
  408261:	mov    rax,QWORD PTR [rdi+0x20]
  408265:	mov    rbx,QWORD PTR [rax]
  408268:	test   rbx,rbx
  40826b:	je     408a4b <strstr@plt+0x787b>
  408271:	mov    rbp,rdi
  408274:	cmp    BYTE PTR [rbx],0x2d
  408277:	jne    408283 <strstr@plt+0x70b3>
  408279:	cmp    BYTE PTR [rbx+0x1],0x0
  40827d:	je     408847 <strstr@plt+0x7677>
  408283:	lea    rsi,[rip+0x5a11]        # 40dc9b <strstr@plt+0xcacb>
  40828a:	mov    rdi,rbx
  40828d:	call   401180 <fopen@plt>
  408292:	mov    r13,rax
  408295:	test   rax,rax
  408298:	je     408a75 <strstr@plt+0x78a5>
  40829e:	mov    rcx,QWORD PTR [rbp+0x10]
  4082a2:	lea    rdi,[rip+0x67cf]        # 40ea78 <strstr@plt+0xd8a8>
  4082a9:	mov    esi,0x2e
  4082ae:	mov    edx,0x1
  4082b3:	call   4011b0 <fwrite@plt>
  4082b8:	mov    QWORD PTR [rsp+0x20],rbp
  4082bd:	mov    rcx,QWORD PTR [rbp+0x10]
  4082c1:	lea    rdi,[rip+0x72ae]        # 40f576 <strstr@plt+0xe3a6>
  4082c8:	mov    esi,0x26
  4082cd:	mov    edx,0x1
  4082d2:	call   4011b0 <fwrite@plt>
  4082d7:	mov    DWORD PTR [rip+0xcfaf],0x0        # 415290 <strstr@plt+0x140c0>
  4082e1:	mov    DWORD PTR [rip+0xcfa9],0x0        # 415294 <strstr@plt+0x140c4>
  4082eb:	mov    DWORD PTR [rip+0xcfa3],0x0        # 415298 <strstr@plt+0x140c8>
  4082f5:	lea    rdi,[rsp+0x30]
  4082fa:	mov    esi,0x100
  4082ff:	mov    rdx,r13
  408302:	call   4010f0 <fgets@plt>
  408307:	test   rax,rax
  40830a:	je     408560 <strstr@plt+0x7390>
  408310:	lea    r12,[rsp+0x37]
  408315:	lea    rbx,[rip+0x7281]        # 40f59d <strstr@plt+0xe3cd>
  40831c:	lea    rbp,[rsp+0x30]
  408321:	lea    r14,[rip+0x9a78]        # 411da0 <strstr@plt+0x10bd0>
  408328:	mov    QWORD PTR [rsp+0x18],r13
  40832d:	nop    DWORD PTR [rax]
  408330:	mov    r15d,DWORD PTR [rip+0xcf59]        # 415290 <strstr@plt+0x140c0>
  408337:	add    r15d,0x1
  40833b:	mov    DWORD PTR [rip+0xcf4e],r15d        # 415290 <strstr@plt+0x140c0>
  408342:	mov    edx,0x6
  408347:	mov    rdi,rbp
  40834a:	mov    rsi,rbx
  40834d:	call   401050 <strncmp@plt>
  408352:	test   eax,eax
  408354:	jne    408547 <strstr@plt+0x7377>
  40835a:	mov    esi,0x29
  40835f:	lea    rdi,[rsp+0x36]
  408364:	call   4010b0 <strchr@plt>
  408369:	mov    cl,BYTE PTR [rsp+0x36]
  40836d:	test   rax,rax
  408370:	je     4083a7 <strstr@plt+0x71d7>
  408372:	cmp    cl,0x28
  408375:	jne    4083a7 <strstr@plt+0x71d7>
  408377:	mov    BYTE PTR [rax],0x0
  40837a:	mov    QWORD PTR [rsp+0x130],r12
  408382:	mov    esi,0x20
  408387:	mov    rdi,r12
  40838a:	call   4010b0 <strchr@plt>
  40838f:	test   rax,rax
  408392:	je     408430 <strstr@plt+0x7260>
  408398:	mov    rcx,rax
  40839b:	add    rcx,0x1
  40839f:	mov    BYTE PTR [rax],0x0
  4083a2:	jmp    408432 <strstr@plt+0x7262>
  4083a7:	cmp    cl,0x58
  4083aa:	je     4083b5 <strstr@plt+0x71e5>
  4083ac:	cmp    cl,0x46
  4083af:	jne    4089f3 <strstr@plt+0x7823>
  4083b5:	test   rax,rax
  4083b8:	je     4089f3 <strstr@plt+0x7823>
  4083be:	cmp    BYTE PTR [rsp+0x37],0x28
  4083c3:	jne    4089f3 <strstr@plt+0x7823>
  4083c9:	mov    BYTE PTR [rax],0x0
  4083cc:	cmp    DWORD PTR [rip+0xcec1],0x0        # 415294 <strstr@plt+0x140c4>
  4083d3:	mov    rbx,QWORD PTR [rsp+0x20]
  4083d8:	je     4083f4 <strstr@plt+0x7224>
  4083da:	mov    rcx,QWORD PTR [rbx+0x10]
  4083de:	mov    esi,0x2
  4083e3:	mov    edx,0x1
  4083e8:	lea    rdi,[rip+0x6da7]        # 40f196 <strstr@plt+0xdfc6>
  4083ef:	call   4011b0 <fwrite@plt>
  4083f4:	cmp    BYTE PTR [rsp+0x36],0x58
  4083f9:	mov    rdi,QWORD PTR [rbx+0x10]
  4083fd:	jne    40840a <strstr@plt+0x723a>
  4083ff:	xor    eax,eax
  408401:	lea    rsi,[rip+0x719c]        # 40f5a4 <strstr@plt+0xe3d4>
  408408:	jmp    408413 <strstr@plt+0x7243>
  40840a:	xor    eax,eax
  40840c:	lea    rsi,[rip+0x7196]        # 40f5a9 <strstr@plt+0xe3d9>
  408413:	lea    rdx,[rsp+0x38]
  408418:	call   401120 <fprintf@plt>
  40841d:	add    DWORD PTR [rip+0xce70],0x1        # 415294 <strstr@plt+0x140c4>
  408424:	lea    rbx,[rip+0x7172]        # 40f59d <strstr@plt+0xe3cd>
  40842b:	jmp    408542 <strstr@plt+0x7372>
  408430:	xor    ecx,ecx
  408432:	mov    QWORD PTR [rsp+0x130],rcx
  40843a:	mov    rdi,QWORD PTR [r14]
  40843d:	test   rdi,rdi
  408440:	je     4089a3 <strstr@plt+0x77d3>
  408446:	xor    r13d,r13d
  408449:	mov    ebp,0x1
  40844e:	xchg   ax,ax
  408450:	mov    rsi,r12
  408453:	call   401100 <strcmp@plt>
  408458:	test   eax,eax
  40845a:	je     408476 <strstr@plt+0x72a6>
  40845c:	mov    eax,ebp
  40845e:	mov    rdi,QWORD PTR [r14+rax*8]
  408462:	add    r13d,0x20000
  408469:	add    ebp,0x1
  40846c:	test   rdi,rdi
  40846f:	jne    408450 <strstr@plt+0x7280>
  408471:	jmp    4089a3 <strstr@plt+0x77d3>
  408476:	mov    r15,rbx
  408479:	xor    esi,esi
  40847b:	mov    edx,0x7f
  408480:	lea    rbx,[rsp+0x130]
  408488:	mov    rdi,rbx
  40848b:	call   408ab0 <strstr@plt+0x78e0>
  408490:	mov    ebp,eax
  408492:	mov    esi,0x1
  408497:	mov    edx,0x3ff
  40849c:	mov    rdi,rbx
  40849f:	call   408ab0 <strstr@plt+0x78e0>
  4084a4:	mov    ecx,DWORD PTR [rip+0xcdee]        # 415298 <strstr@plt+0x140c8>
  4084aa:	cmp    rcx,0xfff
  4084b1:	ja     408a33 <strstr@plt+0x7863>
  4084b7:	mov    r8d,DWORD PTR [rip+0xcdd6]        # 415294 <strstr@plt+0x140c4>
  4084be:	shl    ebp,0xa
  4084c1:	or     ebp,r13d
  4084c4:	or     ebp,eax
  4084c6:	test   ecx,ecx
  4084c8:	lea    r9,[rip+0xcdd1]        # 4152a0 <strstr@plt+0x140d0>
  4084cf:	je     408522 <strstr@plt+0x7352>
  4084d1:	mov    esi,ebp
  4084d3:	and    esi,0xffffff
  4084d9:	lea    rdi,[r9+rcx*4]
  4084dd:	mov    rax,rcx
  4084e0:	mov    r13,QWORD PTR [rsp+0x18]
  4084e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4084ef:	nop
  4084f0:	lea    edx,[rax-0x1]
  4084f3:	mov    ebx,DWORD PTR [r9+rdx*4]
  4084f7:	mov    edx,ebx
  4084f9:	and    edx,0xffffff
  4084ff:	cmp    edx,esi
  408501:	jb     408519 <strstr@plt+0x7349>
  408503:	je     4089cb <strstr@plt+0x77fb>
  408509:	mov    DWORD PTR [rdi],ebx
  40850b:	add    rax,0xffffffffffffffff
  40850f:	add    rdi,0xfffffffffffffffc
  408513:	test   eax,eax
  408515:	jne    4084f0 <strstr@plt+0x7320>
  408517:	xor    eax,eax
  408519:	lea    rbx,[rip+0x707d]        # 40f59d <strstr@plt+0xe3cd>
  408520:	jmp    40852c <strstr@plt+0x735c>
  408522:	mov    rbx,r15
  408525:	xor    eax,eax
  408527:	mov    r13,QWORD PTR [rsp+0x18]
  40852c:	shl    r8d,0x18
  408530:	or     ebp,r8d
  408533:	mov    eax,eax
  408535:	mov    DWORD PTR [r9+rax*4],ebp
  408539:	add    ecx,0x1
  40853c:	mov    DWORD PTR [rip+0xcd56],ecx        # 415298 <strstr@plt+0x140c8>
  408542:	lea    rbp,[rsp+0x30]
  408547:	mov    esi,0x100
  40854c:	mov    rdi,rbp
  40854f:	mov    rdx,r13
  408552:	call   4010f0 <fgets@plt>
  408557:	test   rax,rax
  40855a:	jne    408330 <strstr@plt+0x7160>
  408560:	mov    rdi,r13
  408563:	call   401090 <fclose@plt>
  408568:	mov    rax,QWORD PTR [rsp+0x20]
  40856d:	mov    rcx,QWORD PTR [rax+0x10]
  408571:	lea    rdi,[rip+0x6d53]        # 40f2cb <strstr@plt+0xe0fb>
  408578:	mov    esi,0x5
  40857d:	mov    edx,0x1
  408582:	call   4011b0 <fwrite@plt>
  408587:	mov    r12d,DWORD PTR [rip+0xcd0a]        # 415298 <strstr@plt+0x140c8>
  40858e:	mov    r15,r12
  408591:	or     r15,0x1
  408595:	cmp    r15d,0x1fff
  40859c:	ja     40882c <strstr@plt+0x765c>
  4085a2:	lea    eax,[r15+0x1]
  4085a6:	mov    DWORD PTR [rsp+0x14],eax
  4085aa:	lea    eax,[r15+0x1]
  4085ae:	mov    QWORD PTR [rsp+0x28],rax
  4085b3:	lea    rax,[rax*4+0x0]
  4085bb:	lea    r14d,[r15-0x1]
  4085bf:	xor    r13d,r13d
  4085c2:	mov    QWORD PTR [rsp+0x18],rax
  4085c7:	mov    esi,0xff
  4085cc:	lea    rdi,[rsp+0x130]
  4085d4:	mov    rdx,rax
  4085d7:	call   4010c0 <memset@plt>
  4085dc:	test   r12d,r12d
  4085df:	je     408856 <strstr@plt+0x7686>
  4085e5:	mov    r8d,r13d
  4085e8:	shr    r8d,0x5
  4085ec:	mov    r9d,r13d
  4085ef:	and    r9d,0x1f
  4085f3:	lea    rbp,[rip+0xcca6]        # 4152a0 <strstr@plt+0x140d0>
  4085fa:	xor    ebx,ebx
  4085fc:	nop    DWORD PTR [rax+0x0]
  408600:	mov    r11d,DWORD PTR [rbp+0x0]
  408604:	mov    eax,r11d
  408607:	and    eax,0xffffff
  40860c:	shlx   ecx,eax,r8d
  408611:	sub    ecx,eax
  408613:	shlx   eax,ecx,r9d
  408618:	xor    edx,edx
  40861a:	div    r15d
  40861d:	mov    ecx,edx
  40861f:	cmp    DWORD PTR [rsp+rcx*4+0x130],0xffffffff
  408627:	je     408680 <strstr@plt+0x74b0>
  408629:	lea    esi,[rcx+0x1]
  40862c:	lea    r10,[rsp+rsi*4]
  408630:	add    r10,0x130
  408637:	mov    edi,DWORD PTR [rsp+rsi*4+0x130]
  40863e:	cmp    edi,0xffffffff
  408641:	je     40868b <strstr@plt+0x74bb>
  408643:	cmp    ecx,r14d
  408646:	jae    4086b0 <strstr@plt+0x74e0>
  408648:	add    ecx,0x2
  40864b:	cmp    DWORD PTR [rsp+rcx*4+0x130],0xffffffff
  408653:	jne    4086b0 <strstr@plt+0x74e0>
  408655:	mov    eax,edi
  408657:	and    eax,0xffffff
  40865c:	shlx   edx,eax,r8d
  408661:	sub    edx,eax
  408663:	shlx   eax,edx,r9d
  408668:	xor    edx,edx
  40866a:	div    r15d
  40866d:	cmp    edx,esi
  40866f:	jne    4086b0 <strstr@plt+0x74e0>
  408671:	mov    DWORD PTR [rsp+rcx*4+0x130],edi
  408678:	jmp    40868b <strstr@plt+0x74bb>
  40867a:	nop    WORD PTR [rax+rax*1+0x0]
  408680:	lea    r10,[rsp+rcx*4]
  408684:	add    r10,0x130
  40868b:	mov    DWORD PTR [r10],r11d
  40868e:	add    rbx,0x1
  408692:	add    rbp,0x4
  408696:	cmp    rbx,r12
  408699:	jb     408600 <strstr@plt+0x7430>
  40869f:	jmp    408859 <strstr@plt+0x7689>
  4086a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4086ae:	xchg   ax,ax
  4086b0:	add    r13d,0x1
  4086b4:	cmp    r13d,0x400
  4086bb:	mov    rax,QWORD PTR [rsp+0x18]
  4086c0:	jb     4085c7 <strstr@plt+0x73f7>
  4086c6:	xor    eax,eax
  4086c8:	mov    DWORD PTR [rsp+0x8],eax
  4086cc:	cmp    eax,0x20
  4086cf:	jb     408804 <strstr@plt+0x7634>
  4086d5:	mov    eax,DWORD PTR [rsp+0x8]
  4086d9:	and    eax,0x1f
  4086dc:	mov    DWORD PTR [rsp+0x10],eax
  4086e0:	je     408804 <strstr@plt+0x7634>
  4086e6:	mov    esi,0xff
  4086eb:	lea    rdi,[rsp+0x130]
  4086f3:	mov    rdx,QWORD PTR [rsp+0x18]
  4086f8:	call   4010c0 <memset@plt>
  4086fd:	mov    ecx,DWORD PTR [rsp+0x8]
  408701:	mov    eax,ecx
  408703:	shr    eax,0x5
  408706:	mov    DWORD PTR [rsp+0xc],eax
  40870a:	mov    r8d,eax
  40870d:	neg    r8d
  408710:	and    r8d,0x1f
  408714:	mov    r9d,ecx
  408717:	neg    r9d
  40871a:	and    r9d,0x1f
  40871e:	lea    rsi,[rip+0xcb7b]        # 4152a0 <strstr@plt+0x140d0>
  408725:	xor    edi,edi
  408727:	nop    WORD PTR [rax+rax*1+0x0]
  408730:	mov    r10d,DWORD PTR [rsi]
  408733:	mov    eax,r10d
  408736:	and    eax,0xffffff
  40873b:	mov    ecx,DWORD PTR [rsp+0xc]
  40873f:	shlx   ecx,eax,ecx
  408744:	shrx   edx,eax,r8d
  408749:	or     edx,ecx
  40874b:	sub    edx,eax
  40874d:	mov    eax,DWORD PTR [rsp+0x10]
  408751:	shlx   ecx,edx,eax
  408756:	shrx   eax,edx,r9d
  40875b:	or     eax,ecx
  40875d:	xor    edx,edx
  40875f:	div    r15d
  408762:	mov    ecx,edx
  408764:	cmp    DWORD PTR [rsp+rcx*4+0x130],0xffffffff
  40876c:	je     4087e0 <strstr@plt+0x7610>
  40876e:	lea    ebp,[rcx+0x1]
  408771:	lea    r11,[rsp+rbp*4]
  408775:	add    r11,0x130
  40877c:	mov    ebx,DWORD PTR [rsp+rbp*4+0x130]
  408783:	cmp    ebx,0xffffffff
  408786:	je     4087eb <strstr@plt+0x761b>
  408788:	cmp    ecx,r14d
  40878b:	jae    408804 <strstr@plt+0x7634>
  40878d:	add    ecx,0x2
  408790:	cmp    DWORD PTR [rsp+rcx*4+0x130],0xffffffff
  408798:	jne    408804 <strstr@plt+0x7634>
  40879a:	mov    eax,ebx
  40879c:	and    eax,0xffffff
  4087a1:	mov    edx,DWORD PTR [rsp+0xc]
  4087a5:	shlx   edx,eax,edx
  4087aa:	shrx   r13d,eax,r8d
  4087af:	or     r13d,edx
  4087b2:	sub    r13d,eax
  4087b5:	mov    eax,DWORD PTR [rsp+0x10]
  4087b9:	shlx   edx,r13d,eax
  4087be:	shrx   eax,r13d,r9d
  4087c3:	or     eax,edx
  4087c5:	xor    edx,edx
  4087c7:	div    r15d
  4087ca:	cmp    edx,ebp
  4087cc:	jne    408804 <strstr@plt+0x7634>
  4087ce:	mov    DWORD PTR [rsp+rcx*4+0x130],ebx
  4087d5:	jmp    4087eb <strstr@plt+0x761b>
  4087d7:	nop    WORD PTR [rax+rax*1+0x0]
  4087e0:	lea    r11,[rsp+rcx*4]
  4087e4:	add    r11,0x130
  4087eb:	mov    DWORD PTR [r11],r10d
  4087ee:	add    rdi,0x1
  4087f2:	add    rsi,0x4
  4087f6:	cmp    rdi,r12
  4087f9:	jb     408730 <strstr@plt+0x7560>
  4087ff:	jmp    40890d <strstr@plt+0x773d>
  408804:	mov    eax,DWORD PTR [rsp+0x8]
  408808:	add    eax,0x1
  40880b:	cmp    eax,0x400
  408810:	jb     4086c8 <strstr@plt+0x74f8>
  408816:	add    r15,0x2
  40881a:	add    DWORD PTR [rsp+0x14],0x2
  40881f:	cmp    r15,0x2000
  408826:	jb     4085aa <strstr@plt+0x73da>
  40882c:	mov    rax,QWORD PTR [rip+0xa7bd]        # 412ff0 <strstr@plt+0x11e20>
  408833:	mov    rcx,QWORD PTR [rax]
  408836:	lea    rdi,[rip+0x6ed4]        # 40f711 <strstr@plt+0xe541>
  40883d:	mov    esi,0x26
  408842:	jmp    408a61 <strstr@plt+0x7891>
  408847:	mov    rax,QWORD PTR [rip+0xa78a]        # 412fd8 <strstr@plt+0x11e08>
  40884e:	mov    r13,QWORD PTR [rax]
  408851:	jmp    40829e <strstr@plt+0x70ce>
  408856:	xor    r13d,r13d
  408859:	mov    r12,QWORD PTR [rsp+0x20]
  40885e:	mov    rdi,QWORD PTR [r12+0x10]
  408863:	mov    ecx,DWORD PTR [rsp+0x130]
  40886a:	lea    rsi,[rip+0x6ec7]        # 40f738 <strstr@plt+0xe568>
  408871:	xor    eax,eax
  408873:	mov    rbx,QWORD PTR [rsp+0x28]
  408878:	mov    edx,ebx
  40887a:	call   401120 <fprintf@plt>
  40887f:	mov    rcx,QWORD PTR [r12+0x10]
  408884:	cmp    ebx,0x2
  408887:	jb     4088c2 <strstr@plt+0x76f2>
  408889:	mov    ebx,DWORD PTR [rsp+0x14]
  40888d:	mov    ebp,0x1
  408892:	lea    r14,[rip+0x6ece]        # 40f767 <strstr@plt+0xe597>
  408899:	nop    DWORD PTR [rax+0x0]
  4088a0:	mov    edx,DWORD PTR [rsp+rbp*4+0x130]
  4088a7:	xor    eax,eax
  4088a9:	mov    rdi,rcx
  4088ac:	mov    rsi,r14
  4088af:	call   401120 <fprintf@plt>
  4088b4:	add    rbp,0x1
  4088b8:	mov    rcx,QWORD PTR [r12+0x10]
  4088bd:	cmp    rbx,rbp
  4088c0:	jne    4088a0 <strstr@plt+0x76d0>
  4088c2:	lea    rdi,[rip+0x6a02]        # 40f2cb <strstr@plt+0xe0fb>
  4088c9:	mov    esi,0x5
  4088ce:	mov    edx,0x1
  4088d3:	call   4011b0 <fwrite@plt>
  4088d8:	mov    rdi,QWORD PTR [r12+0x10]
  4088dd:	mov    edx,r13d
  4088e0:	shr    edx,0x5
  4088e3:	and    r13d,0x1f
  4088e7:	lea    rsi,[rip+0x6daf]        # 40f69d <strstr@plt+0xe4cd>
  4088ee:	xor    eax,eax
  4088f0:	mov    ecx,r13d
  4088f3:	mov    r8d,r15d
  4088f6:	call   401120 <fprintf@plt>
  4088fb:	add    rsp,0x8138
  408902:	pop    rbx
  408903:	pop    r12
  408905:	pop    r13
  408907:	pop    r14
  408909:	pop    r15
  40890b:	pop    rbp
  40890c:	ret    
  40890d:	mov    r12,QWORD PTR [rsp+0x20]
  408912:	mov    rdi,QWORD PTR [r12+0x10]
  408917:	mov    ecx,DWORD PTR [rsp+0x130]
  40891e:	lea    rsi,[rip+0x6e13]        # 40f738 <strstr@plt+0xe568>
  408925:	xor    eax,eax
  408927:	mov    rbx,QWORD PTR [rsp+0x28]
  40892c:	mov    edx,ebx
  40892e:	call   401120 <fprintf@plt>
  408933:	mov    rcx,QWORD PTR [r12+0x10]
  408938:	cmp    ebx,0x2
  40893b:	jb     408972 <strstr@plt+0x77a2>
  40893d:	mov    ebp,DWORD PTR [rsp+0x14]
  408941:	mov    ebx,0x1
  408946:	lea    r14,[rip+0x6e1a]        # 40f767 <strstr@plt+0xe597>
  40894d:	nop    DWORD PTR [rax]
  408950:	mov    edx,DWORD PTR [rsp+rbx*4+0x130]
  408957:	xor    eax,eax
  408959:	mov    rdi,rcx
  40895c:	mov    rsi,r14
  40895f:	call   401120 <fprintf@plt>
  408964:	add    rbx,0x1
  408968:	mov    rcx,QWORD PTR [r12+0x10]
  40896d:	cmp    rbp,rbx
  408970:	jne    408950 <strstr@plt+0x7780>
  408972:	lea    rdi,[rip+0x6952]        # 40f2cb <strstr@plt+0xe0fb>
  408979:	mov    esi,0x5
  40897e:	mov    edx,0x1
  408983:	call   4011b0 <fwrite@plt>
  408988:	mov    rdi,QWORD PTR [r12+0x10]
  40898d:	lea    rsi,[rip+0x6d3f]        # 40f6d3 <strstr@plt+0xe503>
  408994:	xor    eax,eax
  408996:	mov    edx,DWORD PTR [rsp+0xc]
  40899a:	mov    ecx,DWORD PTR [rsp+0x10]
  40899e:	jmp    4088f3 <strstr@plt+0x7723>
  4089a3:	mov    rax,QWORD PTR [rip+0xa646]        # 412ff0 <strstr@plt+0x11e20>
  4089aa:	mov    rdi,QWORD PTR [rax]
  4089ad:	lea    rsi,[rip+0x6cb7]        # 40f66b <strstr@plt+0xe49b>
  4089b4:	xor    eax,eax
  4089b6:	mov    rdx,r12
  4089b9:	mov    ecx,r15d
  4089bc:	call   401120 <fprintf@plt>
  4089c1:	mov    edi,0x1
  4089c6:	call   4011a0 <exit@plt>
  4089cb:	mov    rax,QWORD PTR [rip+0xa61e]        # 412ff0 <strstr@plt+0x11e20>
  4089d2:	mov    rdi,QWORD PTR [rax]
  4089d5:	mov    edx,DWORD PTR [rip+0xc8b5]        # 415290 <strstr@plt+0x140c0>
  4089db:	lea    rsi,[rip+0x6c3b]        # 40f61d <strstr@plt+0xe44d>
  4089e2:	xor    eax,eax
  4089e4:	call   401120 <fprintf@plt>
  4089e9:	mov    edi,0x1
  4089ee:	call   4011a0 <exit@plt>
  4089f3:	lea    rdi,[rsp+0x30]
  4089f8:	call   4010a0 <strlen@plt>
  4089fd:	mov    BYTE PTR [rsp+rax*1+0x2f],0x0
  408a02:	mov    rax,QWORD PTR [rip+0xa5e7]        # 412ff0 <strstr@plt+0x11e20>
  408a09:	mov    rdi,QWORD PTR [rax]
  408a0c:	lea    rsi,[rip+0x6ba0]        # 40f5b3 <strstr@plt+0xe3e3>
  408a13:	lea    rdx,[rip+0x6b83]        # 40f59d <strstr@plt+0xe3cd>
  408a1a:	xor    eax,eax
  408a1c:	lea    rcx,[rsp+0x36]
  408a21:	mov    r8d,r15d
  408a24:	call   401120 <fprintf@plt>
  408a29:	mov    edi,0x1
  408a2e:	call   4011a0 <exit@plt>
  408a33:	mov    rax,QWORD PTR [rip+0xa5b6]        # 412ff0 <strstr@plt+0x11e20>
  408a3a:	mov    rcx,QWORD PTR [rax]
  408a3d:	lea    rdi,[rip+0x6ba3]        # 40f5e7 <strstr@plt+0xe417>
  408a44:	mov    esi,0x35
  408a49:	jmp    408a61 <strstr@plt+0x7891>
  408a4b:	mov    rax,QWORD PTR [rip+0xa59e]        # 412ff0 <strstr@plt+0x11e20>
  408a52:	mov    rcx,QWORD PTR [rax]
  408a55:	lea    rdi,[rip+0x6afb]        # 40f557 <strstr@plt+0xe387>
  408a5c:	mov    esi,0x1e
  408a61:	mov    edx,0x1
  408a66:	call   4011b0 <fwrite@plt>
  408a6b:	mov    edi,0x1
  408a70:	call   4011a0 <exit@plt>
  408a75:	mov    rax,QWORD PTR [rip+0xa574]        # 412ff0 <strstr@plt+0x11e20>
  408a7c:	mov    rbp,QWORD PTR [rax]
  408a7f:	call   401040 <__errno_location@plt>
  408a84:	mov    edi,DWORD PTR [rax]
  408a86:	call   4011c0 <strerror@plt>
  408a8b:	mov    rcx,rax
  408a8e:	lea    rsi,[rip+0x6736]        # 40f1cb <strstr@plt+0xdffb>
  408a95:	xor    eax,eax
  408a97:	mov    rdi,rbp
  408a9a:	mov    rdx,rbx
  408a9d:	call   401120 <fprintf@plt>
  408aa2:	mov    edi,0x1
  408aa7:	call   4011a0 <exit@plt>
  408aac:	nop    DWORD PTR [rax+0x0]
  408ab0:	push   rbp
  408ab1:	push   r15
  408ab3:	push   r14
  408ab5:	push   r13
  408ab7:	push   r12
  408ab9:	push   rbx
  408aba:	sub    rsp,0x28
  408abe:	mov    r14,QWORD PTR [rdi]
  408ac1:	test   r14,r14
  408ac4:	je     408aec <strstr@plt+0x791c>
  408ac6:	mov    ebx,edx
  408ac8:	mov    r15d,esi
  408acb:	mov    rbp,rdi
  408ace:	mov    esi,0x20
  408ad3:	mov    rdi,r14
  408ad6:	call   4010b0 <strchr@plt>
  408adb:	test   rax,rax
  408ade:	je     408af3 <strstr@plt+0x7923>
  408ae0:	mov    rcx,rax
  408ae3:	add    rcx,0x1
  408ae7:	mov    BYTE PTR [rax],0x0
  408aea:	jmp    408af5 <strstr@plt+0x7925>
  408aec:	xor    ebx,ebx
  408aee:	jmp    408dc3 <strstr@plt+0x7bf3>
  408af3:	xor    ecx,ecx
  408af5:	mov    QWORD PTR [rbp+0x0],rcx
  408af9:	test   r15d,r15d
  408afc:	je     408bbc <strstr@plt+0x79ec>
  408b02:	lea    rsi,[rip+0x6b41]        # 40f64a <strstr@plt+0xe47a>
  408b09:	mov    edx,0x6
  408b0e:	mov    rdi,r14
  408b11:	call   401050 <strncmp@plt>
  408b16:	test   eax,eax
  408b18:	je     408c12 <strstr@plt+0x7a42>
  408b1e:	lea    rsi,[rip+0x6b2c]        # 40f651 <strstr@plt+0xe481>
  408b25:	mov    edx,0x5
  408b2a:	mov    rdi,r14
  408b2d:	call   401050 <strncmp@plt>
  408b32:	test   eax,eax
  408b34:	je     408c51 <strstr@plt+0x7a81>
  408b3a:	lea    rsi,[rip+0x6b16]        # 40f657 <strstr@plt+0xe487>
  408b41:	mov    edx,0x7
  408b46:	mov    rdi,r14
  408b49:	call   401050 <strncmp@plt>
  408b4e:	test   eax,eax
  408b50:	je     408c91 <strstr@plt+0x7ac1>
  408b56:	lea    rsi,[rip+0x6b02]        # 40f65f <strstr@plt+0xe48f>
  408b5d:	mov    edx,0x7
  408b62:	mov    rdi,r14
  408b65:	call   401050 <strncmp@plt>
  408b6a:	test   eax,eax
  408b6c:	je     408cd1 <strstr@plt+0x7b01>
  408b72:	mov    al,BYTE PTR [r14]
  408b75:	mov    ecx,eax
  408b77:	add    cl,0xd0
  408b7a:	cmp    cl,0x9
  408b7d:	ja     408bbc <strstr@plt+0x79ec>
  408b7f:	xor    ebx,ebx
  408b81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  408b90:	movsx  eax,al
  408b93:	lea    ecx,[rbx+rbx*4]
  408b96:	lea    ebx,[rax+rcx*2]
  408b99:	add    ebx,0xffffffd0
  408b9c:	movzx  eax,BYTE PTR [r14+0x1]
  408ba1:	add    r14,0x1
  408ba5:	mov    ecx,eax
  408ba7:	add    cl,0xd0
  408baa:	cmp    cl,0xa
  408bad:	jb     408b90 <strstr@plt+0x79c0>
  408baf:	test   al,al
  408bb1:	je     408dc3 <strstr@plt+0x7bf3>
  408bb7:	jmp    408d98 <strstr@plt+0x7bc8>
  408bbc:	test   ebx,ebx
  408bbe:	je     408bd7 <strstr@plt+0x7a07>
  408bc0:	lea    rdi,[rip+0x6aa0]        # 40f667 <strstr@plt+0xe497>
  408bc7:	mov    rsi,r14
  408bca:	call   401100 <strcmp@plt>
  408bcf:	test   eax,eax
  408bd1:	je     408dc3 <strstr@plt+0x7bf3>
  408bd7:	lea    rbp,[rip+0x91c2]        # 411da0 <strstr@plt+0x10bd0>
  408bde:	mov    rdi,QWORD PTR [rbp+0x0]
  408be2:	test   rdi,rdi
  408be5:	je     408d98 <strstr@plt+0x7bc8>
  408beb:	xor    ebx,ebx
  408bed:	nop    DWORD PTR [rax]
  408bf0:	mov    rsi,r14
  408bf3:	call   401100 <strcmp@plt>
  408bf8:	test   eax,eax
  408bfa:	je     408dc3 <strstr@plt+0x7bf3>
  408c00:	add    ebx,0x1
  408c03:	mov    rdi,QWORD PTR [rbp+rbx*8+0x0]
  408c08:	test   rdi,rdi
  408c0b:	jne    408bf0 <strstr@plt+0x7a20>
  408c0d:	jmp    408d98 <strstr@plt+0x7bc8>
  408c12:	lea    r15,[rip+0x9557]        # 412170 <strstr@plt+0x10fa0>
  408c19:	mov    rdi,QWORD PTR [r15]
  408c1c:	test   rdi,rdi
  408c1f:	je     408d98 <strstr@plt+0x7bc8>
  408c25:	lea    rbp,[r14+0x6]
  408c29:	xor    ebx,ebx
  408c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  408c30:	mov    rsi,rbp
  408c33:	call   401100 <strcmp@plt>
  408c38:	test   eax,eax
  408c3a:	je     408dc3 <strstr@plt+0x7bf3>
  408c40:	add    ebx,0x1
  408c43:	mov    rdi,QWORD PTR [r15+rbx*8]
  408c47:	test   rdi,rdi
  408c4a:	jne    408c30 <strstr@plt+0x7a60>
  408c4c:	jmp    408d98 <strstr@plt+0x7bc8>
  408c51:	lea    r15,[rip+0x9588]        # 4121e0 <strstr@plt+0x11010>
  408c58:	mov    rdi,QWORD PTR [r15]
  408c5b:	test   rdi,rdi
  408c5e:	je     408d98 <strstr@plt+0x7bc8>
  408c64:	lea    rbp,[r14+0x5]
  408c68:	xor    ebx,ebx
  408c6a:	nop    WORD PTR [rax+rax*1+0x0]
  408c70:	mov    rsi,rbp
  408c73:	call   401100 <strcmp@plt>
  408c78:	test   eax,eax
  408c7a:	je     408dc3 <strstr@plt+0x7bf3>
  408c80:	add    ebx,0x1
  408c83:	mov    rdi,QWORD PTR [r15+rbx*8]
  408c87:	test   rdi,rdi
  408c8a:	jne    408c70 <strstr@plt+0x7aa0>
  408c8c:	jmp    408d98 <strstr@plt+0x7bc8>
  408c91:	lea    r15,[rip+0x95d8]        # 412270 <strstr@plt+0x110a0>
  408c98:	mov    rdi,QWORD PTR [r15]
  408c9b:	test   rdi,rdi
  408c9e:	je     408d98 <strstr@plt+0x7bc8>
  408ca4:	lea    rbp,[r14+0x7]
  408ca8:	xor    ebx,ebx
  408caa:	nop    WORD PTR [rax+rax*1+0x0]
  408cb0:	mov    rsi,rbp
  408cb3:	call   401100 <strcmp@plt>
  408cb8:	test   eax,eax
  408cba:	je     408dc3 <strstr@plt+0x7bf3>
  408cc0:	add    ebx,0x1
  408cc3:	mov    rdi,QWORD PTR [r15+rbx*8]
  408cc7:	test   rdi,rdi
  408cca:	jne    408cb0 <strstr@plt+0x7ae0>
  408ccc:	jmp    408d98 <strstr@plt+0x7bc8>
  408cd1:	lea    rax,[rip+0x93c8]        # 4120a0 <strstr@plt+0x10ed0>
  408cd8:	mov    rbx,QWORD PTR [rax]
  408cdb:	test   rbx,rbx
  408cde:	je     408d98 <strstr@plt+0x7bc8>
  408ce4:	lea    rbp,[r14+0x7]
  408ce8:	mov    esi,0x5f
  408ced:	mov    rdi,rbp
  408cf0:	call   4010b0 <strchr@plt>
  408cf5:	mov    rcx,rax
  408cf8:	mov    QWORD PTR [rsp+0x18],rbp
  408cfd:	sub    rcx,rbp
  408d00:	mov    QWORD PTR [rsp+0x10],rcx
  408d05:	mov    QWORD PTR [rsp+0x20],rax
  408d0a:	lea    rbp,[rax+0x1]
  408d0e:	xor    r13d,r13d
  408d11:	mov    QWORD PTR [rsp+0x8],rbx
  408d16:	mov    rdi,rbx
  408d19:	xor    r12d,r12d
  408d1c:	nop    DWORD PTR [rax+0x0]
  408d20:	cmp    QWORD PTR [rsp+0x20],0x0
  408d26:	je     408d80 <strstr@plt+0x7bb0>
  408d28:	mov    rsi,QWORD PTR [rsp+0x18]
  408d2d:	mov    rdx,QWORD PTR [rsp+0x10]
  408d32:	call   401050 <strncmp@plt>
  408d37:	test   eax,eax
  408d39:	jne    408d80 <strstr@plt+0x7bb0>
  408d3b:	mov    r15d,0x1
  408d41:	mov    ebx,r13d
  408d44:	mov    rdi,QWORD PTR [rsp+0x8]
  408d49:	nop    DWORD PTR [rax+0x0]
  408d50:	mov    rsi,rbp
  408d53:	call   401100 <strcmp@plt>
  408d58:	test   eax,eax
  408d5a:	je     408dc3 <strstr@plt+0x7bf3>
  408d5c:	mov    eax,r15d
  408d5f:	lea    rcx,[rip+0x933a]        # 4120a0 <strstr@plt+0x10ed0>
  408d66:	mov    rdi,QWORD PTR [rcx+rax*8]
  408d6a:	add    ebx,0x1
  408d6d:	add    r15d,0x1
  408d71:	test   rdi,rdi
  408d74:	jne    408d50 <strstr@plt+0x7b80>
  408d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d80:	add    r12d,0x1
  408d84:	lea    rax,[rip+0x9315]        # 4120a0 <strstr@plt+0x10ed0>
  408d8b:	mov    rdi,QWORD PTR [rax+r12*8]
  408d8f:	add    r13d,0x20
  408d93:	test   rdi,rdi
  408d96:	jne    408d20 <strstr@plt+0x7b50>
  408d98:	mov    rax,QWORD PTR [rip+0xa251]        # 412ff0 <strstr@plt+0x11e20>
  408d9f:	mov    rdi,QWORD PTR [rax]
  408da2:	mov    ecx,DWORD PTR [rip+0xc4e8]        # 415290 <strstr@plt+0x140c0>
  408da8:	lea    rsi,[rip+0x68bc]        # 40f66b <strstr@plt+0xe49b>
  408daf:	xor    eax,eax
  408db1:	mov    rdx,r14
  408db4:	call   401120 <fprintf@plt>
  408db9:	mov    edi,0x1
  408dbe:	call   4011a0 <exit@plt>
  408dc3:	mov    eax,ebx
  408dc5:	add    rsp,0x28
  408dc9:	pop    rbx
  408dca:	pop    r12
  408dcc:	pop    r13
  408dce:	pop    r14
  408dd0:	pop    r15
  408dd2:	pop    rbp
  408dd3:	ret    
  408dd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408dde:	xchg   ax,ax
  408de0:	endbr64 
  408de4:	push   r15
  408de6:	lea    r15,[rip+0x8cb3]        # 411aa0 <strstr@plt+0x108d0>
  408ded:	push   r14
  408def:	mov    r14,rdx
  408df2:	push   r13
  408df4:	mov    r13,rsi
  408df7:	push   r12
  408df9:	mov    r12d,edi
  408dfc:	push   rbp
  408dfd:	lea    rbp,[rip+0x8ca4]        # 411aa8 <strstr@plt+0x108d8>
  408e04:	push   rbx
  408e05:	sub    rbp,r15
  408e08:	sub    rsp,0x8
  408e0c:	call   401000 <free@plt-0x30>
  408e11:	sar    rbp,0x3
  408e15:	je     408e36 <strstr@plt+0x7c66>
  408e17:	xor    ebx,ebx
  408e19:	nop    DWORD PTR [rax+0x0]
  408e20:	mov    rdx,r14
  408e23:	mov    rsi,r13
  408e26:	mov    edi,r12d
  408e29:	call   QWORD PTR [r15+rbx*8]
  408e2d:	add    rbx,0x1
  408e31:	cmp    rbp,rbx
  408e34:	jne    408e20 <strstr@plt+0x7c50>
  408e36:	add    rsp,0x8
  408e3a:	pop    rbx
  408e3b:	pop    rbp
  408e3c:	pop    r12
  408e3e:	pop    r13
  408e40:	pop    r14
  408e42:	pop    r15
  408e44:	ret    
  408e45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408e50:	endbr64 
  408e54:	ret    

Disassembly of section .fini:

0000000000408e58 <.fini>:
  408e58:	endbr64 
  408e5c:	sub    rsp,0x8
  408e60:	add    rsp,0x8
  408e64:	ret    
