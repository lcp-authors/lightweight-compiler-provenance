
../repos/tbeu-matio-3dd266d/test/.libs/test_mat:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x12fe1]        # 414ff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <Mat_VarGetNumberOfFields@plt-0x39a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0x12fe2]        # 415008 <getopt_long_only@@Base+0x7a28>
  402026:	bnd jmp QWORD PTR [rip+0x12fe3]        # 415010 <getopt_long_only@@Base+0x7a30>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40213f:	nop
  402140:	endbr64 
  402144:	push   0x11
  402149:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40214f:	nop
  402150:	endbr64 
  402154:	push   0x12
  402159:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40215f:	nop
  402160:	endbr64 
  402164:	push   0x13
  402169:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40216f:	nop
  402170:	endbr64 
  402174:	push   0x14
  402179:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40217f:	nop
  402180:	endbr64 
  402184:	push   0x15
  402189:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40218f:	nop
  402190:	endbr64 
  402194:	push   0x16
  402199:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	push   0x17
  4021a9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4021af:	nop
  4021b0:	endbr64 
  4021b4:	push   0x18
  4021b9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4021bf:	nop
  4021c0:	endbr64 
  4021c4:	push   0x19
  4021c9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4021cf:	nop
  4021d0:	endbr64 
  4021d4:	push   0x1a
  4021d9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4021df:	nop
  4021e0:	endbr64 
  4021e4:	push   0x1b
  4021e9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4021ef:	nop
  4021f0:	endbr64 
  4021f4:	push   0x1c
  4021f9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4021ff:	nop
  402200:	endbr64 
  402204:	push   0x1d
  402209:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40220f:	nop
  402210:	endbr64 
  402214:	push   0x1e
  402219:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40221f:	nop
  402220:	endbr64 
  402224:	push   0x1f
  402229:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40222f:	nop
  402230:	endbr64 
  402234:	push   0x20
  402239:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40223f:	nop
  402240:	endbr64 
  402244:	push   0x21
  402249:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40224f:	nop
  402250:	endbr64 
  402254:	push   0x22
  402259:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40225f:	nop
  402260:	endbr64 
  402264:	push   0x23
  402269:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40226f:	nop
  402270:	endbr64 
  402274:	push   0x24
  402279:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40227f:	nop
  402280:	endbr64 
  402284:	push   0x25
  402289:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40228f:	nop
  402290:	endbr64 
  402294:	push   0x26
  402299:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40229f:	nop
  4022a0:	endbr64 
  4022a4:	push   0x27
  4022a9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4022af:	nop
  4022b0:	endbr64 
  4022b4:	push   0x28
  4022b9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4022bf:	nop
  4022c0:	endbr64 
  4022c4:	push   0x29
  4022c9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4022cf:	nop
  4022d0:	endbr64 
  4022d4:	push   0x2a
  4022d9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4022df:	nop
  4022e0:	endbr64 
  4022e4:	push   0x2b
  4022e9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4022ef:	nop
  4022f0:	endbr64 
  4022f4:	push   0x2c
  4022f9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4022ff:	nop
  402300:	endbr64 
  402304:	push   0x2d
  402309:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40230f:	nop
  402310:	endbr64 
  402314:	push   0x2e
  402319:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40231f:	nop
  402320:	endbr64 
  402324:	push   0x2f
  402329:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40232f:	nop
  402330:	endbr64 
  402334:	push   0x30
  402339:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40233f:	nop
  402340:	endbr64 
  402344:	push   0x31
  402349:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40234f:	nop
  402350:	endbr64 
  402354:	push   0x32
  402359:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40235f:	nop
  402360:	endbr64 
  402364:	push   0x33
  402369:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40236f:	nop
  402370:	endbr64 
  402374:	push   0x34
  402379:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40237f:	nop
  402380:	endbr64 
  402384:	push   0x35
  402389:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40238f:	nop
  402390:	endbr64 
  402394:	push   0x36
  402399:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  40239f:	nop
  4023a0:	endbr64 
  4023a4:	push   0x37
  4023a9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x390>
  4023af:	nop

Disassembly of section .plt.sec:

00000000004023b0 <Mat_VarGetNumberOfFields@plt>:
  4023b0:	endbr64 
  4023b4:	bnd jmp QWORD PTR [rip+0x12c5d]        # 415018 <Mat_VarGetNumberOfFields>
  4023bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023c0 <getenv@plt>:
  4023c0:	endbr64 
  4023c4:	bnd jmp QWORD PTR [rip+0x12c55]        # 415020 <getenv@GLIBC_2.2.5>
  4023cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023d0 <free@plt>:
  4023d0:	endbr64 
  4023d4:	bnd jmp QWORD PTR [rip+0x12c4d]        # 415028 <free@GLIBC_2.2.5>
  4023db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023e0 <putchar@plt>:
  4023e0:	endbr64 
  4023e4:	bnd jmp QWORD PTR [rip+0x12c45]        # 415030 <putchar@GLIBC_2.2.5>
  4023eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023f0 <Mat_VarReadNext@plt>:
  4023f0:	endbr64 
  4023f4:	bnd jmp QWORD PTR [rip+0x12c3d]        # 415038 <Mat_VarReadNext>
  4023fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402400 <Mat_Open@plt>:
  402400:	endbr64 
  402404:	bnd jmp QWORD PTR [rip+0x12c35]        # 415040 <Mat_Open>
  40240b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402410 <strncmp@plt>:
  402410:	endbr64 
  402414:	bnd jmp QWORD PTR [rip+0x12c2d]        # 415048 <strncmp@GLIBC_2.2.5>
  40241b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402420 <Mat_VarGetCells@plt>:
  402420:	endbr64 
  402424:	bnd jmp QWORD PTR [rip+0x12c25]        # 415050 <Mat_VarGetCells>
  40242b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402430 <Mat_VarAddStructField@plt>:
  402430:	endbr64 
  402434:	bnd jmp QWORD PTR [rip+0x12c1d]        # 415058 <Mat_VarAddStructField>
  40243b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402440 <puts@plt>:
  402440:	endbr64 
  402444:	bnd jmp QWORD PTR [rip+0x12c15]        # 415060 <puts@GLIBC_2.2.5>
  40244b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402450 <Mat_VarCreate@plt>:
  402450:	endbr64 
  402454:	bnd jmp QWORD PTR [rip+0x12c0d]        # 415068 <Mat_VarCreate>
  40245b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402460 <Mat_GetFilename@plt>:
  402460:	endbr64 
  402464:	bnd jmp QWORD PTR [rip+0x12c05]        # 415070 <Mat_GetFilename>
  40246b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402470 <Mat_VarWrite@plt>:
  402470:	endbr64 
  402474:	bnd jmp QWORD PTR [rip+0x12bfd]        # 415078 <Mat_VarWrite>
  40247b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402480 <Mat_GetVersion@plt>:
  402480:	endbr64 
  402484:	bnd jmp QWORD PTR [rip+0x12bf5]        # 415080 <Mat_GetVersion>
  40248b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402490 <Mat_Message@plt>:
  402490:	endbr64 
  402494:	bnd jmp QWORD PTR [rip+0x12bed]        # 415088 <Mat_Message>
  40249b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024a0 <strlen@plt>:
  4024a0:	endbr64 
  4024a4:	bnd jmp QWORD PTR [rip+0x12be5]        # 415090 <strlen@GLIBC_2.2.5>
  4024ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024b0 <Mat_VarReadData@plt>:
  4024b0:	endbr64 
  4024b4:	bnd jmp QWORD PTR [rip+0x12bdd]        # 415098 <Mat_VarReadData>
  4024bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024c0 <__stack_chk_fail@plt>:
  4024c0:	endbr64 
  4024c4:	bnd jmp QWORD PTR [rip+0x12bd5]        # 4150a0 <__stack_chk_fail@GLIBC_2.4>
  4024cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024d0 <Mat_VarWriteAppend@plt>:
  4024d0:	endbr64 
  4024d4:	bnd jmp QWORD PTR [rip+0x12bcd]        # 4150a8 <Mat_VarWriteAppend>
  4024db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024e0 <strchr@plt>:
  4024e0:	endbr64 
  4024e4:	bnd jmp QWORD PTR [rip+0x12bc5]        # 4150b0 <strchr@GLIBC_2.2.5>
  4024eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024f0 <warnx@plt>:
  4024f0:	endbr64 
  4024f4:	bnd jmp QWORD PTR [rip+0x12bbd]        # 4150b8 <warnx@GLIBC_2.2.5>
  4024fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402500 <Mat_VarReadInfo@plt>:
  402500:	endbr64 
  402504:	bnd jmp QWORD PTR [rip+0x12bb5]        # 4150c0 <Mat_VarReadInfo>
  40250b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402510 <Mat_LogInit@plt>:
  402510:	endbr64 
  402514:	bnd jmp QWORD PTR [rip+0x12bad]        # 4150c8 <Mat_LogInit>
  40251b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402520 <Mat_VarSetCell@plt>:
  402520:	endbr64 
  402524:	bnd jmp QWORD PTR [rip+0x12ba5]        # 4150d0 <Mat_VarSetCell>
  40252b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402530 <memset@plt>:
  402530:	endbr64 
  402534:	bnd jmp QWORD PTR [rip+0x12b9d]        # 4150d8 <memset@GLIBC_2.2.5>
  40253b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402540 <freopen@plt>:
  402540:	endbr64 
  402544:	bnd jmp QWORD PTR [rip+0x12b95]        # 4150e0 <freopen@GLIBC_2.2.5>
  40254b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402550 <Mat_CalcSubscripts2@plt>:
  402550:	endbr64 
  402554:	bnd jmp QWORD PTR [rip+0x12b8d]        # 4150e8 <Mat_CalcSubscripts2>
  40255b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402560 <Mat_VarGetStructFieldnames@plt>:
  402560:	endbr64 
  402564:	bnd jmp QWORD PTR [rip+0x12b85]        # 4150f0 <Mat_VarGetStructFieldnames>
  40256b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402570 <Mat_CalcSingleSubscript2@plt>:
  402570:	endbr64 
  402574:	bnd jmp QWORD PTR [rip+0x12b7d]        # 4150f8 <Mat_CalcSingleSubscript2>
  40257b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402580 <Mat_VarGetStructField@plt>:
  402580:	endbr64 
  402584:	bnd jmp QWORD PTR [rip+0x12b75]        # 415100 <Mat_VarGetStructField>
  40258b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402590 <strcmp@plt>:
  402590:	endbr64 
  402594:	bnd jmp QWORD PTR [rip+0x12b6d]        # 415108 <strcmp@GLIBC_2.2.5>
  40259b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025a0 <strtol@plt>:
  4025a0:	endbr64 
  4025a4:	bnd jmp QWORD PTR [rip+0x12b65]        # 415110 <strtol@GLIBC_2.2.5>
  4025ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025b0 <Mat_VarFree@plt>:
  4025b0:	endbr64 
  4025b4:	bnd jmp QWORD PTR [rip+0x12b5d]        # 415118 <Mat_VarFree>
  4025bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025c0 <Mat_GetDir@plt>:
  4025c0:	endbr64 
  4025c4:	bnd jmp QWORD PTR [rip+0x12b55]        # 415120 <Mat_GetDir>
  4025cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025d0 <Mat_GetLibraryVersion@plt>:
  4025d0:	endbr64 
  4025d4:	bnd jmp QWORD PTR [rip+0x12b4d]        # 415128 <Mat_GetLibraryVersion>
  4025db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025e0 <Mat_VarPrint@plt>:
  4025e0:	endbr64 
  4025e4:	bnd jmp QWORD PTR [rip+0x12b45]        # 415130 <Mat_VarPrint>
  4025eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025f0 <__isoc99_sscanf@plt>:
  4025f0:	endbr64 
  4025f4:	bnd jmp QWORD PTR [rip+0x12b3d]        # 415138 <__isoc99_sscanf@GLIBC_2.7>
  4025fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402600 <Mat_VarGetStructs@plt>:
  402600:	endbr64 
  402604:	bnd jmp QWORD PTR [rip+0x12b35]        # 415140 <Mat_VarGetStructs>
  40260b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402610 <Mat_Close@plt>:
  402610:	endbr64 
  402614:	bnd jmp QWORD PTR [rip+0x12b2d]        # 415148 <Mat_Close>
  40261b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402620 <Mat_Critical@plt>:
  402620:	endbr64 
  402624:	bnd jmp QWORD PTR [rip+0x12b25]        # 415150 <Mat_Critical>
  40262b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402630 <Mat_VarDelete@plt>:
  402630:	endbr64 
  402634:	bnd jmp QWORD PTR [rip+0x12b1d]        # 415158 <Mat_VarDelete>
  40263b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402640 <realloc@plt>:
  402640:	endbr64 
  402644:	bnd jmp QWORD PTR [rip+0x12b15]        # 415160 <realloc@GLIBC_2.2.5>
  40264b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402650 <Mat_VarGetStructsLinear@plt>:
  402650:	endbr64 
  402654:	bnd jmp QWORD PTR [rip+0x12b0d]        # 415168 <Mat_VarGetStructsLinear>
  40265b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402660 <Mat_GetHeader@plt>:
  402660:	endbr64 
  402664:	bnd jmp QWORD PTR [rip+0x12b05]        # 415170 <Mat_GetHeader>
  40266b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402670 <__printf_chk@plt>:
  402670:	endbr64 
  402674:	bnd jmp QWORD PTR [rip+0x12afd]        # 415178 <__printf_chk@GLIBC_2.3.4>
  40267b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402680 <Mat_VarCreateStruct@plt>:
  402680:	endbr64 
  402684:	bnd jmp QWORD PTR [rip+0x12af5]        # 415180 <Mat_VarCreateStruct>
  40268b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402690 <Mat_CreateVer@plt>:
  402690:	endbr64 
  402694:	bnd jmp QWORD PTR [rip+0x12aed]        # 415188 <Mat_CreateVer>
  40269b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026a0 <Mat_VarGetCellsLinear@plt>:
  4026a0:	endbr64 
  4026a4:	bnd jmp QWORD PTR [rip+0x12ae5]        # 415190 <Mat_VarGetCellsLinear>
  4026ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026b0 <Mat_Help@plt>:
  4026b0:	endbr64 
  4026b4:	bnd jmp QWORD PTR [rip+0x12add]        # 415198 <Mat_Help>
  4026bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026c0 <exit@plt>:
  4026c0:	endbr64 
  4026c4:	bnd jmp QWORD PTR [rip+0x12ad5]        # 4151a0 <exit@GLIBC_2.2.5>
  4026cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026d0 <fwrite@plt>:
  4026d0:	endbr64 
  4026d4:	bnd jmp QWORD PTR [rip+0x12acd]        # 4151a8 <fwrite@GLIBC_2.2.5>
  4026db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026e0 <__fprintf_chk@plt>:
  4026e0:	endbr64 
  4026e4:	bnd jmp QWORD PTR [rip+0x12ac5]        # 4151b0 <__fprintf_chk@GLIBC_2.3.4>
  4026eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026f0 <Mat_VarDuplicate@plt>:
  4026f0:	endbr64 
  4026f4:	bnd jmp QWORD PTR [rip+0x12abd]        # 4151b8 <Mat_VarDuplicate>
  4026fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402700 <Mat_VarSetStructFieldByName@plt>:
  402700:	endbr64 
  402704:	bnd jmp QWORD PTR [rip+0x12ab5]        # 4151c0 <Mat_VarSetStructFieldByName>
  40270b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402710 <Mat_VarSetStructFieldByIndex@plt>:
  402710:	endbr64 
  402714:	bnd jmp QWORD PTR [rip+0x12aad]        # 4151c8 <Mat_VarSetStructFieldByIndex>
  40271b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402720 <Mat_VarRead@plt>:
  402720:	endbr64 
  402724:	bnd jmp QWORD PTR [rip+0x12aa5]        # 4151d0 <Mat_VarRead>
  40272b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000402730 <getopt@@Base-0xae80>:
  402730:	endbr64 
  402734:	push   r15
  402736:	push   r14
  402738:	push   r13
  40273a:	mov    r13,rsi
  40273d:	push   r12
  40273f:	mov    r12d,edi
  402742:	push   rbp
  402743:	push   rbx
  402744:	sub    rsp,0x3d8
  40274b:	lea    rdi,[rsp+0x84]
  402753:	lea    rdx,[rdi+0x8]
  402757:	lea    rsi,[rdi+0x4]
  40275b:	mov    rax,QWORD PTR fs:0x28
  402764:	mov    QWORD PTR [rsp+0x3c8],rax
  40276c:	xor    eax,eax
  40276e:	mov    DWORD PTR [rsp+0x6c],0x0
  402776:	call   4025d0 <Mat_GetLibraryVersion@plt>
  40277b:	cmp    DWORD PTR [rsp+0x84],0x1
  402783:	jne    40278f <Mat_VarRead@plt+0x6f>
  402785:	cmp    DWORD PTR [rsp+0x88],0x5
  40278d:	je     4027e1 <Mat_VarRead@plt+0xc1>
  40278f:	mov    rax,QWORD PTR [rip+0x12862]        # 414ff8 <getopt_long_only@@Base+0x7a18>
  402796:	mov    edx,0x37
  40279b:	mov    rcx,QWORD PTR [rax]
  40279e:	mov    esi,0x1
  4027a3:	lea    rdi,[rip+0xc936]        # 40f0e0 <getopt_long_only@@Base+0x1b00>
  4027aa:	call   4026d0 <fwrite@plt>
  4027af:	mov    r15d,0x1
  4027b5:	mov    rbx,QWORD PTR [rsp+0x3c8]
  4027bd:	xor    rbx,QWORD PTR fs:0x28
  4027c6:	mov    eax,r15d
  4027c9:	jne    40395b <Mat_VarRead@plt+0x123b>
  4027cf:	add    rsp,0x3d8
  4027d6:	pop    rbx
  4027d7:	pop    rbp
  4027d8:	pop    r12
  4027da:	pop    r13
  4027dc:	pop    r14
  4027de:	pop    r15
  4027e0:	ret    
  4027e1:	cmp    DWORD PTR [rsp+0x8c],0xf
  4027e9:	jne    40278f <Mat_VarRead@plt+0x6f>
  4027eb:	lea    rdi,[rip+0xba41]        # 40e233 <getopt_long_only@@Base+0xc53>
  4027f2:	call   402510 <Mat_LogInit@plt>
  4027f7:	mov    QWORD PTR [rsp],0x0
  4027ff:	mov    DWORD PTR [rsp+0x14],0x6
  402807:	lea    rbx,[rip+0xc38a]        # 40eb98 <getopt_long_only@@Base+0x15b8>
  40280e:	lea    rbp,[rsp+0x6c]
  402813:	xor    r8d,r8d
  402816:	lea    rcx,[rip+0x13ba3]        # 4163c0 <getopt_long_only@@Base+0x8de0>
  40281d:	lea    rdx,[rip+0xba9d]        # 40e2c1 <getopt_long_only@@Base+0xce1>
  402824:	mov    rsi,r13
  402827:	mov    edi,r12d
  40282a:	call   40d5d0 <getopt_long@@Base>
  40282f:	cmp    eax,0xffffffff
  402832:	je     402d88 <Mat_VarRead@plt+0x668>
  402838:	lea    ecx,[rax-0x3f]
  40283b:	cmp    ecx,0x3b
  40283e:	ja     402cc8 <Mat_VarRead@plt+0x5a8>
  402844:	movsxd rcx,DWORD PTR [rbx+rcx*4]
  402848:	add    rcx,rbx
  40284b:	notrack jmp rcx
  40284e:	mov    DWORD PTR [rip+0x13ccc],0x1        # 416524 <opterr@@Base+0x10>
  402858:	jmp    402813 <Mat_VarRead@plt+0xf3>
  40285a:	mov    rax,0x416530
  402861:	lea    rsi,[rip+0xba40]        # 40e2a8 <getopt_long_only@@Base+0xcc8>
  402868:	mov    r14,QWORD PTR [rax]
  40286b:	mov    rdi,r14
  40286e:	call   402590 <strcmp@plt>
  402873:	test   eax,eax
  402875:	jne    402ce2 <Mat_VarRead@plt+0x5c2>
  40287b:	mov    DWORD PTR [rip+0x1296b],0x100        # 4151f0 <getopt_long_only@@Base+0x7c10>
  402885:	jmp    402813 <Mat_VarRead@plt+0xf3>
  402887:	mov    rax,0x416530
  40288e:	mov    rax,QWORD PTR [rax]
  402891:	mov    QWORD PTR [rsp],rax
  402895:	jmp    402813 <Mat_VarRead@plt+0xf3>
  40289a:	mov    rax,0x416530
  4028a1:	lea    rsi,[rip+0xb997]        # 40e23f <getopt_long_only@@Base+0xc5f>
  4028a8:	mov    r14,QWORD PTR [rax]
  4028ab:	mov    rdi,r14
  4028ae:	call   402590 <strcmp@plt>
  4028b3:	test   eax,eax
  4028b5:	je     402d04 <Mat_VarRead@plt+0x5e4>
  4028bb:	lea    rsi,[rip+0xb984]        # 40e246 <getopt_long_only@@Base+0xc66>
  4028c2:	mov    rdi,r14
  4028c5:	call   402590 <strcmp@plt>
  4028ca:	test   eax,eax
  4028cc:	je     402d44 <Mat_VarRead@plt+0x624>
  4028d2:	lea    rsi,[rip+0xb975]        # 40e24e <getopt_long_only@@Base+0xc6e>
  4028d9:	mov    rdi,r14
  4028dc:	call   402590 <strcmp@plt>
  4028e1:	test   eax,eax
  4028e3:	je     40331f <Mat_VarRead@plt+0xbff>
  4028e9:	lea    rsi,[rip+0xb95d]        # 40e24d <getopt_long_only@@Base+0xc6d>
  4028f0:	mov    rdi,r14
  4028f3:	call   402590 <strcmp@plt>
  4028f8:	test   eax,eax
  4028fa:	je     4037af <Mat_VarRead@plt+0x108f>
  402900:	lea    rsi,[rip+0xb94e]        # 40e255 <getopt_long_only@@Base+0xc75>
  402907:	mov    rdi,r14
  40290a:	call   402590 <strcmp@plt>
  40290f:	test   eax,eax
  402911:	je     40388b <Mat_VarRead@plt+0x116b>
  402917:	lea    rsi,[rip+0xb936]        # 40e254 <getopt_long_only@@Base+0xc74>
  40291e:	mov    rdi,r14
  402921:	call   402590 <strcmp@plt>
  402926:	test   eax,eax
  402928:	je     40394e <Mat_VarRead@plt+0x122e>
  40292e:	lea    rsi,[rip+0xb927]        # 40e25c <getopt_long_only@@Base+0xc7c>
  402935:	mov    rdi,r14
  402938:	call   402590 <strcmp@plt>
  40293d:	test   eax,eax
  40293f:	je     403cf5 <Mat_VarRead@plt+0x15d5>
  402945:	lea    rsi,[rip+0xb90f]        # 40e25b <getopt_long_only@@Base+0xc7b>
  40294c:	mov    rdi,r14
  40294f:	call   402590 <strcmp@plt>
  402954:	test   eax,eax
  402956:	je     403f26 <Mat_VarRead@plt+0x1806>
  40295c:	lea    rsi,[rip+0xb900]        # 40e263 <getopt_long_only@@Base+0xc83>
  402963:	mov    rdi,r14
  402966:	call   402590 <strcmp@plt>
  40296b:	test   eax,eax
  40296d:	je     403f43 <Mat_VarRead@plt+0x1823>
  402973:	lea    rsi,[rip+0xb8e8]        # 40e262 <getopt_long_only@@Base+0xc82>
  40297a:	mov    rdi,r14
  40297d:	call   402590 <strcmp@plt>
  402982:	test   eax,eax
  402984:	jne    403f50 <Mat_VarRead@plt+0x1830>
  40298a:	mov    DWORD PTR [rsp+0x14],0x9
  402992:	jmp    402813 <Mat_VarRead@plt+0xf3>
  402997:	mov    rax,0x416530
  40299e:	mov    rdx,rbp
  4029a1:	mov    rdi,QWORD PTR [rax]
  4029a4:	lea    rsi,[rip+0xb891]        # 40e23c <getopt_long_only@@Base+0xc5c>
  4029ab:	xor    eax,eax
  4029ad:	call   4025f0 <__isoc99_sscanf@plt>
  4029b2:	dec    eax
  4029b4:	je     402813 <Mat_VarRead@plt+0xf3>
  4029ba:	mov    edi,0x1
  4029bf:	call   4026c0 <exit@plt>
  4029c4:	lea    rcx,[rip+0xb8d8]        # 40e2a3 <getopt_long_only@@Base+0xcc3>
  4029cb:	lea    rdx,[rip+0xb861]        # 40e233 <getopt_long_only@@Base+0xc53>
  4029d2:	lea    rsi,[rip+0xc78f]        # 40f168 <getopt_long_only@@Base+0x1b88>
  4029d9:	mov    edi,0x1
  4029de:	xor    eax,eax
  4029e0:	call   402670 <__printf_chk@plt>
  4029e5:	xor    edi,edi
  4029e7:	call   4026c0 <exit@plt>
  4029ec:	mov    rax,0x416530
  4029f3:	lea    rsi,[rip+0xbefa]        # 40e8f4 <getopt_long_only@@Base+0x1314>
  4029fa:	mov    rbx,QWORD PTR [rax]
  4029fd:	mov    rdi,rbx
  402a00:	call   402590 <strcmp@plt>
  402a05:	test   eax,eax
  402a07:	je     402d33 <Mat_VarRead@plt+0x613>
  402a0d:	lea    rsi,[rip+0xbed3]        # 40e8e7 <getopt_long_only@@Base+0x1307>
  402a14:	mov    rdi,rbx
  402a17:	call   402590 <strcmp@plt>
  402a1c:	test   eax,eax
  402a1e:	je     402d22 <Mat_VarRead@plt+0x602>
  402a24:	lea    rsi,[rip+0xbeac]        # 40e8d7 <getopt_long_only@@Base+0x12f7>
  402a2b:	mov    rdi,rbx
  402a2e:	call   402590 <strcmp@plt>
  402a33:	test   eax,eax
  402a35:	je     402d11 <Mat_VarRead@plt+0x5f1>
  402a3b:	lea    rsi,[rip+0xbd46]        # 40e788 <getopt_long_only@@Base+0x11a8>
  402a42:	mov    rdi,rbx
  402a45:	call   402590 <strcmp@plt>
  402a4a:	test   eax,eax
  402a4c:	je     402d77 <Mat_VarRead@plt+0x657>
  402a52:	lea    rsi,[rip+0xbb65]        # 40e5be <getopt_long_only@@Base+0xfde>
  402a59:	mov    rdi,rbx
  402a5c:	call   402590 <strcmp@plt>
  402a61:	test   eax,eax
  402a63:	je     40330e <Mat_VarRead@plt+0xbee>
  402a69:	lea    rsi,[rip+0xbb3f]        # 40e5af <getopt_long_only@@Base+0xfcf>
  402a70:	mov    rdi,rbx
  402a73:	call   402590 <strcmp@plt>
  402a78:	test   eax,eax
  402a7a:	je     403782 <Mat_VarRead@plt+0x1062>
  402a80:	lea    rsi,[rip+0xbe39]        # 40e8c0 <getopt_long_only@@Base+0x12e0>
  402a87:	mov    rdi,rbx
  402a8a:	call   402590 <strcmp@plt>
  402a8f:	test   eax,eax
  402a91:	je     40379e <Mat_VarRead@plt+0x107e>
  402a97:	lea    rsi,[rip+0xb7ce]        # 40e26c <getopt_long_only@@Base+0xc8c>
  402a9e:	mov    rdi,rbx
  402aa1:	call   402590 <strcmp@plt>
  402aa6:	test   eax,eax
  402aa8:	je     403859 <Mat_VarRead@plt+0x1139>
  402aae:	lea    rsi,[rip+0xbdc5]        # 40e87a <getopt_long_only@@Base+0x129a>
  402ab5:	mov    rdi,rbx
  402ab8:	call   402590 <strcmp@plt>
  402abd:	test   eax,eax
  402abf:	je     40387a <Mat_VarRead@plt+0x115a>
  402ac5:	lea    rsi,[rip+0xbd7e]        # 40e84a <getopt_long_only@@Base+0x126a>
  402acc:	mov    rdi,rbx
  402acf:	call   402590 <strcmp@plt>
  402ad4:	test   eax,eax
  402ad6:	je     40393d <Mat_VarRead@plt+0x121d>
  402adc:	lea    rsi,[rip+0xbd4c]        # 40e82f <getopt_long_only@@Base+0x124f>
  402ae3:	mov    rdi,rbx
  402ae6:	call   402590 <strcmp@plt>
  402aeb:	test   eax,eax
  402aed:	je     403960 <Mat_VarRead@plt+0x1240>
  402af3:	lea    rsi,[rip+0xbcfc]        # 40e7f6 <getopt_long_only@@Base+0x1216>
  402afa:	mov    rdi,rbx
  402afd:	call   402590 <strcmp@plt>
  402b02:	test   eax,eax
  402b04:	je     403cb8 <Mat_VarRead@plt+0x1598>
  402b0a:	lea    rsi,[rip+0xbcb9]        # 40e7ca <getopt_long_only@@Base+0x11ea>
  402b11:	mov    rdi,rbx
  402b14:	call   402590 <strcmp@plt>
  402b19:	test   eax,eax
  402b1b:	je     403ce4 <Mat_VarRead@plt+0x15c4>
  402b21:	lea    rsi,[rip+0xbc89]        # 40e7b1 <getopt_long_only@@Base+0x11d1>
  402b28:	mov    rdi,rbx
  402b2b:	call   402590 <strcmp@plt>
  402b30:	test   eax,eax
  402b32:	je     403f15 <Mat_VarRead@plt+0x17f5>
  402b38:	lea    rsi,[rip+0xbc2b]        # 40e76a <getopt_long_only@@Base+0x118a>
  402b3f:	mov    rdi,rbx
  402b42:	call   402590 <strcmp@plt>
  402b47:	test   eax,eax
  402b49:	je     403f04 <Mat_VarRead@plt+0x17e4>
  402b4f:	lea    rsi,[rip+0xd8aa]        # 410400 <getopt_long_only@@Base+0x2e20>
  402b56:	mov    rdi,rbx
  402b59:	call   402590 <strcmp@plt>
  402b5e:	test   eax,eax
  402b60:	je     403f75 <Mat_VarRead@plt+0x1855>
  402b66:	lea    rsi,[rip+0xbbc1]        # 40e72e <getopt_long_only@@Base+0x114e>
  402b6d:	mov    rdi,rbx
  402b70:	call   402590 <strcmp@plt>
  402b75:	test   eax,eax
  402b77:	je     404478 <Mat_VarRead@plt+0x1d58>
  402b7d:	lea    rsi,[rip+0xbb50]        # 40e6d4 <getopt_long_only@@Base+0x10f4>
  402b84:	mov    rdi,rbx
  402b87:	call   402590 <strcmp@plt>
  402b8c:	test   eax,eax
  402b8e:	je     404467 <Mat_VarRead@plt+0x1d47>
  402b94:	lea    rsi,[rip+0xbb20]        # 40e6bb <getopt_long_only@@Base+0x10db>
  402b9b:	mov    rdi,rbx
  402b9e:	call   402590 <strcmp@plt>
  402ba3:	test   eax,eax
  402ba5:	je     404456 <Mat_VarRead@plt+0x1d36>
  402bab:	lea    rsi,[rip+0xbaed]        # 40e69f <getopt_long_only@@Base+0x10bf>
  402bb2:	mov    rdi,rbx
  402bb5:	call   402590 <strcmp@plt>
  402bba:	test   eax,eax
  402bbc:	je     404445 <Mat_VarRead@plt+0x1d25>
  402bc2:	lea    rsi,[rip+0xb6bc]        # 40e285 <getopt_long_only@@Base+0xca5>
  402bc9:	mov    rdi,rbx
  402bcc:	call   402590 <strcmp@plt>
  402bd1:	test   eax,eax
  402bd3:	je     40449a <Mat_VarRead@plt+0x1d7a>
  402bd9:	lea    rsi,[rip+0xba89]        # 40e669 <getopt_long_only@@Base+0x1089>
  402be0:	mov    rdi,rbx
  402be3:	call   402590 <strcmp@plt>
  402be8:	test   eax,eax
  402bea:	je     404489 <Mat_VarRead@plt+0x1d69>
  402bf0:	lea    rsi,[rip+0xba45]        # 40e63c <getopt_long_only@@Base+0x105c>
  402bf7:	mov    rdi,rbx
  402bfa:	call   402590 <strcmp@plt>
  402bff:	test   eax,eax
  402c01:	je     404434 <Mat_VarRead@plt+0x1d14>
  402c07:	lea    rsi,[rip+0xb9da]        # 40e5e8 <getopt_long_only@@Base+0x1008>
  402c0e:	mov    rdi,rbx
  402c11:	call   402590 <strcmp@plt>
  402c16:	test   eax,eax
  402c18:	je     404423 <Mat_VarRead@plt+0x1d03>
  402c1e:	lea    rsi,[rip+0xb8fe]        # 40e523 <getopt_long_only@@Base+0xf43>
  402c25:	mov    rdi,rbx
  402c28:	call   402590 <strcmp@plt>
  402c2d:	test   eax,eax
  402c2f:	je     4043bf <Mat_VarRead@plt+0x1c9f>
  402c35:	lea    rsi,[rip+0xb92d]        # 40e569 <getopt_long_only@@Base+0xf89>
  402c3c:	mov    rdi,rbx
  402c3f:	call   402590 <strcmp@plt>
  402c44:	test   eax,eax
  402c46:	je     4043ae <Mat_VarRead@plt+0x1c8e>
  402c4c:	lea    rsi,[rip+0xb97d]        # 40e5d0 <getopt_long_only@@Base+0xff0>
  402c53:	mov    rdi,rbx
  402c56:	call   402590 <strcmp@plt>
  402c5b:	test   eax,eax
  402c5d:	je     40439d <Mat_VarRead@plt+0x1c7d>
  402c63:	lea    rsi,[rip+0xb850]        # 40e4ba <getopt_long_only@@Base+0xeda>
  402c6a:	mov    rdi,rbx
  402c6d:	call   402590 <strcmp@plt>
  402c72:	test   eax,eax
  402c74:	je     40438c <Mat_VarRead@plt+0x1c6c>
  402c7a:	lea    rsi,[rip+0xb86b]        # 40e4ec <getopt_long_only@@Base+0xf0c>
  402c81:	mov    rdi,rbx
  402c84:	call   402590 <strcmp@plt>
  402c89:	test   eax,eax
  402c8b:	jne    4029ba <Mat_VarRead@plt+0x29a>
  402c91:	lea    rdi,[rip+0x125c8]        # 415260 <getopt_long_only@@Base+0x7c80>
  402c98:	call   4026b0 <Mat_Help@plt>
  402c9d:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  402ca2:	lea    rdi,[rip+0x13397]        # 416040 <getopt_long_only@@Base+0x8a60>
  402ca9:	call   4026b0 <Mat_Help@plt>
  402cae:	xor    edi,edi
  402cb0:	call   4026c0 <exit@plt>
  402cb5:	lea    rdi,[rip+0x13604]        # 4162c0 <getopt_long_only@@Base+0x8ce0>
  402cbc:	call   4026b0 <Mat_Help@plt>
  402cc1:	xor    edi,edi
  402cc3:	call   4026c0 <exit@plt>
  402cc8:	mov    edx,eax
  402cca:	lea    rsi,[rip+0xb5d9]        # 40e2aa <getopt_long_only@@Base+0xcca>
  402cd1:	mov    edi,0x1
  402cd6:	xor    eax,eax
  402cd8:	call   402670 <__printf_chk@plt>
  402cdd:	jmp    402813 <Mat_VarRead@plt+0xf3>
  402ce2:	lea    rsi,[rip+0xb57f]        # 40e268 <getopt_long_only@@Base+0xc88>
  402ce9:	mov    rdi,r14
  402cec:	call   402590 <strcmp@plt>
  402cf1:	test   eax,eax
  402cf3:	jne    402d51 <Mat_VarRead@plt+0x631>
  402cf5:	mov    DWORD PTR [rip+0x124f1],0x200        # 4151f0 <getopt_long_only@@Base+0x7c10>
  402cff:	jmp    402813 <Mat_VarRead@plt+0xf3>
  402d04:	mov    DWORD PTR [rsp+0x14],0x6
  402d0c:	jmp    402813 <Mat_VarRead@plt+0xf3>
  402d11:	lea    rdi,[rip+0x13268]        # 415f80 <getopt_long_only@@Base+0x89a0>
  402d18:	call   4026b0 <Mat_Help@plt>
  402d1d:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  402d22:	lea    rdi,[rip+0x13297]        # 415fc0 <getopt_long_only@@Base+0x89e0>
  402d29:	call   4026b0 <Mat_Help@plt>
  402d2e:	jmp    402a24 <Mat_VarRead@plt+0x304>
  402d33:	lea    rdi,[rip+0x132c6]        # 416000 <getopt_long_only@@Base+0x8a20>
  402d3a:	call   4026b0 <Mat_Help@plt>
  402d3f:	jmp    402a0d <Mat_VarRead@plt+0x2ed>
  402d44:	mov    DWORD PTR [rsp+0x14],0x7
  402d4c:	jmp    402813 <Mat_VarRead@plt+0xf3>
  402d51:	lea    rsi,[rip+0xb4fa]        # 40e252 <getopt_long_only@@Base+0xc72>
  402d58:	mov    rdi,r14
  402d5b:	call   402590 <strcmp@plt>
  402d60:	test   eax,eax
  402d62:	jne    403f86 <Mat_VarRead@plt+0x1866>
  402d68:	mov    DWORD PTR [rip+0x1247e],0x10        # 4151f0 <getopt_long_only@@Base+0x7c10>
  402d72:	jmp    402813 <Mat_VarRead@plt+0xf3>
  402d77:	lea    rdi,[rip+0x12d02]        # 415a80 <getopt_long_only@@Base+0x84a0>
  402d7e:	call   4026b0 <Mat_Help@plt>
  402d83:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  402d88:	mov    rax,0x416510
  402d8f:	lea    rbx,[rsp+0x200]
  402d97:	mov    ebp,DWORD PTR [rax]
  402d99:	xor    r15d,r15d
  402d9c:	lea    rax,[rbx+0x8]
  402da0:	mov    QWORD PTR [rsp+0x30],rax
  402da5:	mov    DWORD PTR [rsp+0x18],r15d
  402daa:	mov    DWORD PTR [rsp+0x1c],r12d
  402daf:	mov    QWORD PTR [rsp+0x8],r13
  402db4:	jmp    402e08 <Mat_VarRead@plt+0x6e8>
  402db6:	cmp    QWORD PTR [rsp],0x0
  402dbb:	lea    r13d,[rbp+0x1]
  402dbf:	je     40313c <Mat_VarRead@plt+0xa1c>
  402dc5:	mov    edx,DWORD PTR [rip+0x12425]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  402dcb:	mov    rdi,QWORD PTR [rsp]
  402dcf:	xor    esi,esi
  402dd1:	call   402690 <Mat_CreateVer@plt>
  402dd6:	mov    r12,rax
  402dd9:	lea    eax,[rbp+0x2]
  402ddc:	mov    DWORD PTR [rsp+0x10],eax
  402de0:	mov    rax,QWORD PTR [rsp+0x8]
  402de5:	movsxd r13,r13d
  402de8:	mov    rdi,QWORD PTR [rax+r13*8]
  402dec:	xor    esi,esi
  402dee:	call   402400 <Mat_Open@plt>
  402df3:	mov    r13,rax
  402df6:	test   r12,r12
  402df9:	je     402e04 <Mat_VarRead@plt+0x6e4>
  402dfb:	test   rax,rax
  402dfe:	jne    40309a <Mat_VarRead@plt+0x97a>
  402e04:	mov    ebp,DWORD PTR [rsp+0x10]
  402e08:	cmp    ebp,DWORD PTR [rsp+0x1c]
  402e0c:	jge    403221 <Mat_VarRead@plt+0xb01>
  402e12:	mov    rcx,QWORD PTR [rsp+0x8]
  402e17:	movsxd rax,ebp
  402e1a:	mov    r12,QWORD PTR [rcx+rax*8]
  402e1e:	lea    rsi,[rip+0xbacf]        # 40e8f4 <getopt_long_only@@Base+0x1314>
  402e25:	mov    rdi,r12
  402e28:	lea    r13,[rax*8+0x0]
  402e30:	call   402590 <strcmp@plt>
  402e35:	test   eax,eax
  402e37:	je     402db6 <Mat_VarRead@plt+0x696>
  402e3d:	lea    rsi,[rip+0xbaa3]        # 40e8e7 <getopt_long_only@@Base+0x1307>
  402e44:	mov    rdi,r12
  402e47:	call   402590 <strcmp@plt>
  402e4c:	test   eax,eax
  402e4e:	je     4030e6 <Mat_VarRead@plt+0x9c6>
  402e54:	lea    rsi,[rip+0xba7c]        # 40e8d7 <getopt_long_only@@Base+0x12f7>
  402e5b:	mov    rdi,r12
  402e5e:	call   402590 <strcmp@plt>
  402e63:	test   eax,eax
  402e65:	je     4031a4 <Mat_VarRead@plt+0xa84>
  402e6b:	lea    rsi,[rip+0xba08]        # 40e87a <getopt_long_only@@Base+0x129a>
  402e72:	mov    rdi,r12
  402e75:	call   402590 <strcmp@plt>
  402e7a:	mov    r14d,eax
  402e7d:	test   eax,eax
  402e7f:	jne    403161 <Mat_VarRead@plt+0xa41>
  402e85:	lea    eax,[rbp+0x1]
  402e88:	cmp    QWORD PTR [rsp],0x0
  402e8d:	mov    DWORD PTR [rsp+0x10],eax
  402e91:	je     4036b2 <Mat_VarRead@plt+0xf92>
  402e97:	mov    QWORD PTR [rsp+0xa0],0x5
  402ea3:	mov    QWORD PTR [rsp+0xa8],0xa
  402eaf:	xor    eax,eax
  402eb1:	lea    r15,[rsp+0x390]
  402eb9:	lea    r10,[rsp+0xc0]
  402ec1:	lea    r12,[rsp+0x130]
  402ec9:	mov    edx,eax
  402ecb:	and    edx,0x1
  402ece:	mov    BYTE PTR [r15+rax*1],dl
  402ed2:	mov    WORD PTR [r10+rax*2],dx
  402ed7:	mov    DWORD PTR [r12+rax*4],edx
  402edb:	movsxd rdx,edx
  402ede:	mov    QWORD PTR [rbx+rax*8],rdx
  402ee2:	inc    rax
  402ee5:	cmp    rax,0x32
  402ee9:	jne    402ec9 <Mat_VarRead@plt+0x7a9>
  402eeb:	mov    edx,DWORD PTR [rip+0x122ff]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  402ef1:	mov    rdi,QWORD PTR [rsp]
  402ef5:	xor    esi,esi
  402ef7:	mov    QWORD PTR [rsp+0x20],r10
  402efc:	call   402690 <Mat_CreateVer@plt>
  402f01:	mov    rbp,rax
  402f04:	test   rax,rax
  402f07:	je     40368b <Mat_VarRead@plt+0xf6b>
  402f0d:	lea    r13,[rsp+0xa0]
  402f15:	push   r10
  402f17:	mov    r9,rbx
  402f1a:	mov    r8,r13
  402f1d:	push   0x200
  402f22:	mov    ecx,0x2
  402f27:	mov    edx,0xd
  402f2c:	mov    esi,0xf
  402f31:	lea    rdi,[rip+0xb3b2]        # 40e2ea <getopt_long_only@@Base+0xd0a>
  402f38:	call   402450 <Mat_VarCreate@plt>
  402f3d:	mov    edx,DWORD PTR [rip+0x135e1]        # 416524 <opterr@@Base+0x10>
  402f43:	mov    rsi,rax
  402f46:	mov    rdi,rbp
  402f49:	mov    QWORD PTR [rsp+0x38],rax
  402f4e:	call   402470 <Mat_VarWrite@plt>
  402f53:	mov    rcx,QWORD PTR [rsp+0x38]
  402f58:	mov    rdi,rcx
  402f5b:	call   4025b0 <Mat_VarFree@plt>
  402f60:	mov    r9,r12
  402f63:	mov    r8,r13
  402f66:	mov    ecx,0x2
  402f6b:	mov    edx,0x6
  402f70:	mov    esi,0xd
  402f75:	lea    rdi,[rip+0xb371]        # 40e2ed <getopt_long_only@@Base+0xd0d>
  402f7c:	mov    DWORD PTR [rsp],0x200
  402f83:	call   402450 <Mat_VarCreate@plt>
  402f88:	mov    edx,DWORD PTR [rip+0x13596]        # 416524 <opterr@@Base+0x10>
  402f8e:	mov    r12,rax
  402f91:	mov    rsi,rax
  402f94:	mov    rdi,rbp
  402f97:	call   402470 <Mat_VarWrite@plt>
  402f9c:	mov    rdi,r12
  402f9f:	call   4025b0 <Mat_VarFree@plt>
  402fa4:	mov    r10,QWORD PTR [rsp+0x30]
  402fa9:	mov    r8,r13
  402fac:	mov    r9,r10
  402faf:	mov    ecx,0x2
  402fb4:	mov    edx,0x4
  402fb9:	mov    esi,0xb
  402fbe:	lea    rdi,[rip+0xb32b]        # 40e2f0 <getopt_long_only@@Base+0xd10>
  402fc5:	mov    DWORD PTR [rsp],0x200
  402fcc:	call   402450 <Mat_VarCreate@plt>
  402fd1:	mov    edx,DWORD PTR [rip+0x1354d]        # 416524 <opterr@@Base+0x10>
  402fd7:	mov    r12,rax
  402fda:	mov    rsi,rax
  402fdd:	mov    rdi,rbp
  402fe0:	call   402470 <Mat_VarWrite@plt>
  402fe5:	mov    rdi,r12
  402fe8:	call   4025b0 <Mat_VarFree@plt>
  402fed:	mov    r9,r15
  402ff0:	mov    r8,r13
  402ff3:	mov    ecx,0x2
  402ff8:	mov    edx,0x2
  402ffd:	mov    esi,0x9
  403002:	lea    rdi,[rip+0xb2ea]        # 40e2f3 <getopt_long_only@@Base+0xd13>
  403009:	mov    DWORD PTR [rsp],0x200
  403010:	call   402450 <Mat_VarCreate@plt>
  403015:	mov    edx,DWORD PTR [rip+0x13509]        # 416524 <opterr@@Base+0x10>
  40301b:	mov    r12,rax
  40301e:	mov    rsi,rax
  403021:	mov    rdi,rbp
  403024:	call   402470 <Mat_VarWrite@plt>
  403029:	mov    rdi,r12
  40302c:	call   4025b0 <Mat_VarFree@plt>
  403031:	xor    r9d,r9d
  403034:	mov    r8,r13
  403037:	mov    ecx,0x2
  40303c:	mov    edx,0x2
  403041:	mov    esi,0x9
  403046:	lea    rdi,[rip+0xb2a9]        # 40e2f6 <getopt_long_only@@Base+0xd16>
  40304d:	mov    QWORD PTR [rsp+0xb0],0x0
  403059:	mov    DWORD PTR [rsp],0x200
  403060:	call   402450 <Mat_VarCreate@plt>
  403065:	mov    r12,rax
  403068:	mov    edx,DWORD PTR [rip+0x134b6]        # 416524 <opterr@@Base+0x10>
  40306e:	mov    rsi,r12
  403071:	mov    rdi,rbp
  403074:	call   402470 <Mat_VarWrite@plt>
  403079:	mov    rdi,r12
  40307c:	call   4025b0 <Mat_VarFree@plt>
  403081:	mov    rdi,rbp
  403084:	call   402610 <Mat_Close@plt>
  403089:	pop    r11
  40308b:	pop    rbp
  40308c:	add    DWORD PTR [rsp+0x18],r14d
  403091:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  403096:	inc    DWORD PTR [rsp+0x18]
  40309a:	mov    rdi,r13
  40309d:	call   4023f0 <Mat_VarReadNext@plt>
  4030a2:	mov    rbp,rax
  4030a5:	test   rax,rax
  4030a8:	je     40314c <Mat_VarRead@plt+0xa2c>
  4030ae:	mov    rdi,rbp
  4030b1:	mov    esi,0x1
  4030b6:	call   4026f0 <Mat_VarDuplicate@plt>
  4030bb:	mov    r14,rax
  4030be:	mov    rdi,rbp
  4030c1:	call   4025b0 <Mat_VarFree@plt>
  4030c6:	test   r14,r14
  4030c9:	je     403096 <Mat_VarRead@plt+0x976>
  4030cb:	mov    edx,DWORD PTR [rip+0x13453]        # 416524 <opterr@@Base+0x10>
  4030d1:	mov    rdi,r12
  4030d4:	mov    rsi,r14
  4030d7:	call   402470 <Mat_VarWrite@plt>
  4030dc:	mov    rdi,r14
  4030df:	call   4025b0 <Mat_VarFree@plt>
  4030e4:	jmp    40309a <Mat_VarRead@plt+0x97a>
  4030e6:	lea    eax,[rbp+0x1]
  4030e9:	mov    rcx,QWORD PTR [rsp+0x8]
  4030ee:	cdqe   
  4030f0:	inc    rax
  4030f3:	mov    r12,QWORD PTR [rcx+rax*8-0x8]
  4030f8:	mov    esi,0x1
  4030fd:	mov    rdi,r12
  403100:	mov    r13,QWORD PTR [rcx+rax*8]
  403104:	call   402400 <Mat_Open@plt>
  403109:	mov    r14,rax
  40310c:	test   rax,rax
  40310f:	je     4032f2 <Mat_VarRead@plt+0xbd2>
  403115:	mov    rdi,rax
  403118:	mov    rsi,r13
  40311b:	call   402630 <Mat_VarDelete@plt>
  403120:	mov    rdi,r14
  403123:	mov    r12d,eax
  403126:	call   402610 <Mat_Close@plt>
  40312b:	lea    eax,[rbp+0x3]
  40312e:	add    DWORD PTR [rsp+0x18],r12d
  403133:	mov    DWORD PTR [rsp+0x10],eax
  403137:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  40313c:	lea    rax,[rip+0xafc7]        # 40e10a <getopt_long_only@@Base+0xb2a>
  403143:	mov    QWORD PTR [rsp],rax
  403147:	jmp    402dc5 <Mat_VarRead@plt+0x6a5>
  40314c:	mov    rdi,r12
  40314f:	call   402610 <Mat_Close@plt>
  403154:	mov    rdi,r13
  403157:	call   402610 <Mat_Close@plt>
  40315c:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  403161:	lea    rsi,[rip+0xb758]        # 40e8c0 <getopt_long_only@@Base+0x12e0>
  403168:	mov    rdi,r12
  40316b:	call   402590 <strcmp@plt>
  403170:	test   eax,eax
  403172:	jne    40322b <Mat_VarRead@plt+0xb0b>
  403178:	lea    eax,[rbp+0x1]
  40317b:	cmp    QWORD PTR [rsp],0x0
  403180:	mov    DWORD PTR [rsp+0x10],eax
  403184:	je     4037bc <Mat_VarRead@plt+0x109c>
  40318a:	mov    edx,DWORD PTR [rsp+0x6c]
  40318e:	mov    rsi,QWORD PTR [rsp]
  403192:	mov    edi,DWORD PTR [rsp+0x14]
  403196:	call   408af0 <Mat_VarRead@plt+0x63d0>
  40319b:	add    DWORD PTR [rsp+0x18],eax
  40319f:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  4031a4:	lea    eax,[rbp+0x2]
  4031a7:	mov    DWORD PTR [rsp+0x10],eax
  4031ab:	mov    rcx,QWORD PTR [rsp+0x8]
  4031b0:	lea    eax,[rbp+0x1]
  4031b3:	cdqe   
  4031b5:	mov    r13,QWORD PTR [rcx+rax*8]
  4031b9:	mov    esi,0x1
  4031be:	mov    rdi,r13
  4031c1:	call   402400 <Mat_Open@plt>
  4031c6:	mov    rbp,rax
  4031c9:	test   rax,rax
  4031cc:	je     403696 <Mat_VarRead@plt+0xf76>
  4031d2:	lea    rsi,[rsp+0x70]
  4031d7:	mov    rdi,rax
  4031da:	call   4025c0 <Mat_GetDir@plt>
  4031df:	mov    r12,rax
  4031e2:	test   rax,rax
  4031e5:	je     403793 <Mat_VarRead@plt+0x1073>
  4031eb:	mov    rax,QWORD PTR [rsp+0x70]
  4031f0:	xor    r14d,r14d
  4031f3:	inc    rax
  4031f6:	mov    QWORD PTR [rsp+0x78],rax
  4031fb:	jmp    403205 <Mat_VarRead@plt+0xae5>
  4031fd:	call   402440 <puts@plt>
  403202:	inc    r14
  403205:	cmp    r14,QWORD PTR [rsp+0x70]
  40320a:	jae    40326e <Mat_VarRead@plt+0xb4e>
  40320c:	mov    rdi,QWORD PTR [r12+r14*8]
  403210:	test   rdi,rdi
  403213:	jne    4031fd <Mat_VarRead@plt+0xadd>
  403215:	mov    edi,0xa
  40321a:	call   4023e0 <putchar@plt>
  40321f:	jmp    403202 <Mat_VarRead@plt+0xae2>
  403221:	mov    r15d,DWORD PTR [rsp+0x18]
  403226:	jmp    4027b5 <Mat_VarRead@plt+0x95>
  40322b:	lea    rsi,[rip+0xb03a]        # 40e26c <getopt_long_only@@Base+0xc8c>
  403232:	mov    rdi,r12
  403235:	call   402590 <strcmp@plt>
  40323a:	test   eax,eax
  40323c:	jne    4036c2 <Mat_VarRead@plt+0xfa2>
  403242:	lea    eax,[rbp+0x1]
  403245:	cmp    QWORD PTR [rsp],0x0
  40324a:	mov    DWORD PTR [rsp+0x10],eax
  40324e:	je     40386a <Mat_VarRead@plt+0x114a>
  403254:	mov    edx,DWORD PTR [rsp+0x6c]
  403258:	mov    rsi,QWORD PTR [rsp]
  40325c:	mov    edi,DWORD PTR [rsp+0x14]
  403260:	call   4092e0 <Mat_VarRead@plt+0x6bc0>
  403265:	add    DWORD PTR [rsp+0x18],eax
  403269:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  40326e:	lea    rsi,[rsp+0x78]
  403273:	mov    rdi,rbp
  403276:	call   4025c0 <Mat_GetDir@plt>
  40327b:	mov    rax,QWORD PTR [rsp+0x78]
  403280:	xor    r12d,r12d
  403283:	cmp    QWORD PTR [rsp+0x70],rax
  403288:	setne  r12b
  40328c:	mov    rdi,rbp
  40328f:	call   402460 <Mat_GetFilename@plt>
  403294:	mov    rsi,rax
  403297:	mov    rdi,r13
  40329a:	call   402590 <strcmp@plt>
  40329f:	cmp    eax,0x1
  4032a2:	mov    rdi,rbp
  4032a5:	sbb    r12d,0xffffffff
  4032a9:	call   402480 <Mat_GetVersion@plt>
  4032ae:	cmp    eax,0x1
  4032b1:	mov    rdi,rbp
  4032b4:	adc    r12d,0x0
  4032b8:	call   402660 <Mat_GetHeader@plt>
  4032bd:	mov    rdi,rax
  4032c0:	test   rax,rax
  4032c3:	je     4032e0 <Mat_VarRead@plt+0xbc0>
  4032c5:	xor    eax,eax
  4032c7:	or     rcx,0xffffffffffffffff
  4032cb:	repnz scas al,BYTE PTR es:[rdi]
  4032cd:	mov    rax,rcx
  4032d0:	not    rax
  4032d3:	dec    rax
  4032d6:	cmp    rax,0x81
  4032dc:	sbb    r12d,0xffffffff
  4032e0:	mov    rdi,rbp
  4032e3:	call   402610 <Mat_Close@plt>
  4032e8:	add    DWORD PTR [rsp+0x18],r12d
  4032ed:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  4032f2:	mov    rsi,r12
  4032f5:	lea    rdi,[rip+0xafd4]        # 40e2d0 <getopt_long_only@@Base+0xcf0>
  4032fc:	xor    eax,eax
  4032fe:	call   402620 <Mat_Critical@plt>
  403303:	mov    r12d,0x1
  403309:	jmp    40312b <Mat_VarRead@plt+0xa0b>
  40330e:	lea    rdi,[rip+0x1206b]        # 415380 <getopt_long_only@@Base+0x7da0>
  403315:	call   4026b0 <Mat_Help@plt>
  40331a:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  40331f:	mov    DWORD PTR [rsp+0x14],0xe
  403327:	jmp    402813 <Mat_VarRead@plt+0xf3>
  40332c:	mov    rdi,QWORD PTR [rsp]
  403330:	lea    eax,[rbp+0x1]
  403333:	mov    DWORD PTR [rsp+0x10],eax
  403337:	call   40ca30 <Mat_VarRead@plt+0xa310>
  40333c:	mov    rax,QWORD PTR [rip+0xf3dd]        # 412720 <getopt_long_only@@Base+0x5140>
  403343:	lea    r12,[rsp+0x130]
  40334b:	mov    QWORD PTR [rsp+0x208],rax
  403353:	mov    rax,QWORD PTR [rip+0xf576]        # 4128d0 <getopt_long_only@@Base+0x52f0>
  40335a:	mov    QWORD PTR [rsp+0x200],0x0
  403366:	mov    QWORD PTR [rsp+0x210],rax
  40336e:	mov    rax,QWORD PTR [rip+0xf563]        # 4128d8 <getopt_long_only@@Base+0x52f8>
  403375:	mov    QWORD PTR [rsp+0x130],0x2
  403381:	mov    QWORD PTR [rsp+0x218],rax
  403389:	mov    rax,QWORD PTR [rip+0xf550]        # 4128e0 <getopt_long_only@@Base+0x5300>
  403390:	mov    QWORD PTR [rsp+0x138],0x3
  40339c:	mov    QWORD PTR [rsp+0x220],rax
  4033a4:	mov    rax,QWORD PTR [rip+0xf37d]        # 412728 <getopt_long_only@@Base+0x5148>
  4033ab:	mov    r8,r12
  4033ae:	mov    QWORD PTR [rsp+0x228],rax
  4033b6:	mov    rax,QWORD PTR [rip+0xf52b]        # 4128e8 <getopt_long_only@@Base+0x5308>
  4033bd:	mov    ecx,0x2
  4033c2:	mov    QWORD PTR [rsp+0x230],rax
  4033ca:	mov    rax,QWORD PTR [rip+0xf35f]        # 412730 <getopt_long_only@@Base+0x5150>
  4033d1:	mov    edx,0x15
  4033d6:	mov    QWORD PTR [rsp+0x238],rax
  4033de:	mov    rax,QWORD PTR [rip+0xf353]        # 412738 <getopt_long_only@@Base+0x5158>
  4033e5:	mov    esi,0x1
  4033ea:	mov    QWORD PTR [rsp+0x240],rax
  4033f2:	mov    rax,QWORD PTR [rip+0xf347]        # 412740 <getopt_long_only@@Base+0x5160>
  4033f9:	lea    rdi,[rip+0xac26]        # 40e026 <getopt_long_only@@Base+0xa46>
  403400:	mov    QWORD PTR [rsp+0x248],rax
  403408:	push   r9
  40340a:	xor    r9d,r9d
  40340d:	push   0x0
  40340f:	call   402450 <Mat_VarCreate@plt>
  403414:	mov    r8,r12
  403417:	xor    edi,edi
  403419:	mov    r9,rbx
  40341c:	mov    ecx,0x2
  403421:	mov    edx,0x9
  403426:	mov    esi,0x6
  40342b:	mov    rbp,rax
  40342e:	mov    DWORD PTR [rsp],0x1
  403435:	mov    QWORD PTR [rsp+0x140],0x1
  403441:	mov    QWORD PTR [rsp+0x148],0x1
  40344d:	call   402450 <Mat_VarCreate@plt>
  403452:	mov    r9,QWORD PTR [rsp+0x40]
  403457:	mov    r8,r12
  40345a:	xor    edi,edi
  40345c:	mov    ecx,0x2
  403461:	mov    edx,0x9
  403466:	mov    esi,0x6
  40346b:	mov    DWORD PTR [rsp],0x1
  403472:	mov    r13,rax
  403475:	call   402450 <Mat_VarCreate@plt>
  40347a:	mov    r8,r12
  40347d:	xor    edi,edi
  40347f:	lea    r9,[rbx+0x10]
  403483:	mov    ecx,0x2
  403488:	mov    edx,0x9
  40348d:	mov    esi,0x6
  403492:	mov    DWORD PTR [rsp],0x1
  403499:	mov    QWORD PTR [rsp+0x38],rax
  40349e:	call   402450 <Mat_VarCreate@plt>
  4034a3:	mov    r8,r12
  4034a6:	xor    edi,edi
  4034a8:	lea    r9,[rbx+0x18]
  4034ac:	mov    ecx,0x2
  4034b1:	mov    edx,0x9
  4034b6:	mov    esi,0x6
  4034bb:	mov    DWORD PTR [rsp],0x1
  4034c2:	mov    r15,rax
  4034c5:	call   402450 <Mat_VarCreate@plt>
  4034ca:	mov    r8,r12
  4034cd:	xor    edi,edi
  4034cf:	lea    r9,[rbx+0x20]
  4034d3:	mov    ecx,0x2
  4034d8:	mov    edx,0x9
  4034dd:	mov    esi,0x6
  4034e2:	mov    DWORD PTR [rsp],0x1
  4034e9:	mov    QWORD PTR [rsp+0x48],rax
  4034ee:	call   402450 <Mat_VarCreate@plt>
  4034f3:	mov    r8,r12
  4034f6:	xor    edi,edi
  4034f8:	lea    r9,[rbx+0x28]
  4034fc:	mov    ecx,0x2
  403501:	mov    edx,0x9
  403506:	mov    esi,0x6
  40350b:	mov    DWORD PTR [rsp],0x1
  403512:	mov    QWORD PTR [rsp+0x30],rax
  403517:	call   402450 <Mat_VarCreate@plt>
  40351c:	mov    r8,r12
  40351f:	xor    edi,edi
  403521:	lea    r9,[rbx+0x30]
  403525:	mov    ecx,0x2
  40352a:	mov    edx,0x9
  40352f:	mov    esi,0x6
  403534:	mov    DWORD PTR [rsp],0x1
  40353b:	mov    QWORD PTR [rsp+0x50],rax
  403540:	call   402450 <Mat_VarCreate@plt>
  403545:	mov    r8,r12
  403548:	xor    edi,edi
  40354a:	lea    r9,[rbx+0x38]
  40354e:	mov    ecx,0x2
  403553:	mov    edx,0x9
  403558:	mov    esi,0x6
  40355d:	mov    DWORD PTR [rsp],0x1
  403564:	mov    QWORD PTR [rsp+0x58],rax
  403569:	call   402450 <Mat_VarCreate@plt>
  40356e:	mov    r8,r12
  403571:	xor    edi,edi
  403573:	lea    r9,[rbx+0x40]
  403577:	mov    ecx,0x2
  40357c:	mov    edx,0x9
  403581:	mov    esi,0x6
  403586:	mov    DWORD PTR [rsp],0x1
  40358d:	mov    QWORD PTR [rsp+0x60],rax
  403592:	call   402450 <Mat_VarCreate@plt>
  403597:	mov    r8,r12
  40359a:	lea    r9,[rbx+0x48]
  40359e:	mov    ecx,0x2
  4035a3:	xor    edi,edi
  4035a5:	mov    edx,0x9
  4035aa:	mov    esi,0x6
  4035af:	mov    QWORD PTR [rsp+0x68],rax
  4035b4:	mov    DWORD PTR [rsp],0x1
  4035bb:	call   402450 <Mat_VarCreate@plt>
  4035c0:	xor    esi,esi
  4035c2:	mov    rdx,r13
  4035c5:	mov    rdi,rbp
  4035c8:	mov    r12,rax
  4035cb:	call   402520 <Mat_VarSetCell@plt>
  4035d0:	mov    rdx,QWORD PTR [rsp+0x38]
  4035d5:	mov    esi,0x1
  4035da:	mov    rdi,rbp
  4035dd:	call   402520 <Mat_VarSetCell@plt>
  4035e2:	mov    rdx,r15
  4035e5:	mov    esi,0x2
  4035ea:	mov    rdi,rbp
  4035ed:	call   402520 <Mat_VarSetCell@plt>
  4035f2:	mov    rdx,QWORD PTR [rsp+0x48]
  4035f7:	mov    esi,0x3
  4035fc:	mov    rdi,rbp
  4035ff:	call   402520 <Mat_VarSetCell@plt>
  403604:	mov    rdx,QWORD PTR [rsp+0x30]
  403609:	mov    esi,0x4
  40360e:	mov    rdi,rbp
  403611:	call   402520 <Mat_VarSetCell@plt>
  403616:	mov    rdx,QWORD PTR [rsp+0x50]
  40361b:	mov    esi,0x5
  403620:	mov    rdi,rbp
  403623:	call   402520 <Mat_VarSetCell@plt>
  403628:	mov    rdx,QWORD PTR [rsp+0x58]
  40362d:	mov    esi,0x6
  403632:	mov    rdi,rbp
  403635:	call   402520 <Mat_VarSetCell@plt>
  40363a:	mov    esi,0x1
  40363f:	mov    rdi,rbp
  403642:	call   4025e0 <Mat_VarPrint@plt>
  403647:	mov    rdx,QWORD PTR [rsp+0x60]
  40364c:	xor    esi,esi
  40364e:	mov    rdi,rbp
  403651:	call   402520 <Mat_VarSetCell@plt>
  403656:	pop    r10
  403658:	pop    r11
  40365a:	cmp    r13,rax
  40365d:	je     404f11 <Mat_VarRead@plt+0x27f1>
  403663:	mov    rax,QWORD PTR [rip+0x1198e]        # 414ff8 <getopt_long_only@@Base+0x7a18>
  40366a:	lea    rdi,[rip+0xbbf7]        # 40f268 <getopt_long_only@@Base+0x1c88>
  403671:	mov    rcx,QWORD PTR [rax]
  403674:	mov    edx,0x2e
  403679:	mov    esi,0x1
  40367e:	call   4026d0 <fwrite@plt>
  403683:	mov    rdi,rbp
  403686:	call   4025b0 <Mat_VarFree@plt>
  40368b:	mov    r14d,0x1
  403691:	jmp    40308c <Mat_VarRead@plt+0x96c>
  403696:	mov    rsi,r13
  403699:	lea    rdi,[rip+0xac30]        # 40e2d0 <getopt_long_only@@Base+0xcf0>
  4036a0:	xor    eax,eax
  4036a2:	call   402620 <Mat_Critical@plt>
  4036a7:	mov    r12d,0x1
  4036ad:	jmp    4032e8 <Mat_VarRead@plt+0xbc8>
  4036b2:	lea    rax,[rip+0xaa63]        # 40e11c <getopt_long_only@@Base+0xb3c>
  4036b9:	mov    QWORD PTR [rsp],rax
  4036bd:	jmp    402e97 <Mat_VarRead@plt+0x777>
  4036c2:	lea    rsi,[rip+0xb12d]        # 40e7f6 <getopt_long_only@@Base+0x1216>
  4036c9:	mov    rdi,r12
  4036cc:	call   402590 <strcmp@plt>
  4036d1:	test   eax,eax
  4036d3:	jne    4037cc <Mat_VarRead@plt+0x10ac>
  4036d9:	lea    eax,[rbp+0x1]
  4036dc:	cmp    QWORD PTR [rsp],0x0
  4036e1:	mov    DWORD PTR [rsp+0x10],eax
  4036e5:	je     403971 <Mat_VarRead@plt+0x1251>
  4036eb:	mov    eax,DWORD PTR [rsp+0x14]
  4036ef:	lea    rdx,[rip+0xb5aa]        # 40eca0 <getopt_long_only@@Base+0x16c0>
  4036f6:	sub    eax,0x6
  4036f9:	mov    r12d,DWORD PTR [rdx+rax*4]
  4036fd:	mov    rdi,QWORD PTR [rsp]
  403701:	mov    edx,DWORD PTR [rip+0x11ae9]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  403707:	xor    esi,esi
  403709:	mov    QWORD PTR [rsp+0x200],0x0
  403715:	mov    QWORD PTR [rsp+0x208],0xa
  403721:	call   402690 <Mat_CreateVer@plt>
  403726:	mov    rbp,rax
  403729:	test   rax,rax
  40372c:	je     403cc9 <Mat_VarRead@plt+0x15a9>
  403732:	push   r9
  403734:	mov    r8,rbx
  403737:	xor    r9d,r9d
  40373a:	push   0x0
  40373c:	mov    ecx,0x2
  403741:	mov    edx,r12d
  403744:	mov    esi,DWORD PTR [rsp+0x24]
  403748:	lea    rdi,[rip+0xabaa]        # 40e2f9 <getopt_long_only@@Base+0xd19>
  40374f:	call   402450 <Mat_VarCreate@plt>
  403754:	mov    edx,DWORD PTR [rip+0x12dca]        # 416524 <opterr@@Base+0x10>
  40375a:	mov    rsi,rax
  40375d:	mov    r13,rax
  403760:	mov    rdi,rbp
  403763:	call   402470 <Mat_VarWrite@plt>
  403768:	mov    rdi,r13
  40376b:	mov    r12d,eax
  40376e:	call   4025b0 <Mat_VarFree@plt>
  403773:	mov    rdi,rbp
  403776:	call   402610 <Mat_Close@plt>
  40377b:	pop    rcx
  40377c:	pop    rsi
  40377d:	jmp    4032e8 <Mat_VarRead@plt+0xbc8>
  403782:	lea    rdi,[rip+0x11bb7]        # 415340 <getopt_long_only@@Base+0x7d60>
  403789:	call   4026b0 <Mat_Help@plt>
  40378e:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  403793:	mov    r12d,0x1
  403799:	jmp    40328c <Mat_VarRead@plt+0xb6c>
  40379e:	lea    rdi,[rip+0x1273b]        # 415ee0 <getopt_long_only@@Base+0x8900>
  4037a5:	call   4026b0 <Mat_Help@plt>
  4037aa:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  4037af:	mov    DWORD PTR [rsp+0x14],0xf
  4037b7:	jmp    402813 <Mat_VarRead@plt+0xf3>
  4037bc:	lea    rax,[rip+0xa973]        # 40e136 <getopt_long_only@@Base+0xb56>
  4037c3:	mov    QWORD PTR [rsp],rax
  4037c7:	jmp    40318a <Mat_VarRead@plt+0xa6a>
  4037cc:	lea    rsi,[rip+0xaff7]        # 40e7ca <getopt_long_only@@Base+0x11ea>
  4037d3:	mov    rdi,r12
  4037d6:	call   402590 <strcmp@plt>
  4037db:	test   eax,eax
  4037dd:	jne    403898 <Mat_VarRead@plt+0x1178>
  4037e3:	lea    eax,[rbp+0x1]
  4037e6:	cmp    QWORD PTR [rsp],0x0
  4037eb:	mov    DWORD PTR [rsp+0x10],eax
  4037ef:	je     403cd4 <Mat_VarRead@plt+0x15b4>
  4037f5:	mov    edx,DWORD PTR [rip+0x119f5]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  4037fb:	mov    rdi,QWORD PTR [rsp]
  4037ff:	xor    esi,esi
  403801:	call   402690 <Mat_CreateVer@plt>
  403806:	mov    rbp,rax
  403809:	mov    r12d,0x1
  40380f:	test   rax,rax
  403812:	je     4032e8 <Mat_VarRead@plt+0xbc8>
  403818:	mov    QWORD PTR [rsp+0x200],0x4
  403824:	mov    QWORD PTR [rsp+0x208],0x1a
  403830:	push   r8
  403832:	lea    r9,[rip+0xb987]        # 40f1c0 <getopt_long_only@@Base+0x1be0>
  403839:	mov    r8,rbx
  40383c:	push   0x1
  40383e:	mov    ecx,0x2
  403843:	mov    edx,0x2
  403848:	mov    esi,0x4
  40384d:	lea    rdi,[rip+0xa7d2]        # 40e026 <getopt_long_only@@Base+0xa46>
  403854:	jmp    40374f <Mat_VarRead@plt+0x102f>
  403859:	lea    rdi,[rip+0x125e0]        # 415e40 <getopt_long_only@@Base+0x8860>
  403860:	call   4026b0 <Mat_Help@plt>
  403865:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  40386a:	lea    rax,[rip+0xb6f7]        # 40ef68 <getopt_long_only@@Base+0x1988>
  403871:	mov    QWORD PTR [rsp],rax
  403875:	jmp    403254 <Mat_VarRead@plt+0xb34>
  40387a:	lea    rdi,[rip+0x1251f]        # 415da0 <getopt_long_only@@Base+0x87c0>
  403881:	call   4026b0 <Mat_Help@plt>
  403886:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  40388b:	mov    DWORD PTR [rsp+0x14],0xc
  403893:	jmp    402813 <Mat_VarRead@plt+0xf3>
  403898:	lea    rsi,[rip+0xaf12]        # 40e7b1 <getopt_long_only@@Base+0x11d1>
  40389f:	mov    rdi,r12
  4038a2:	call   402590 <strcmp@plt>
  4038a7:	test   eax,eax
  4038a9:	jne    403981 <Mat_VarRead@plt+0x1261>
  4038af:	lea    eax,[rbp+0x1]
  4038b2:	cmp    QWORD PTR [rsp],0x0
  4038b7:	mov    DWORD PTR [rsp+0x10],eax
  4038bb:	je     403f33 <Mat_VarRead@plt+0x1813>
  4038c1:	movabs rax,0x69062c01110628
  4038cb:	mov    edx,DWORD PTR [rip+0x1191f]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  4038d1:	mov    rdi,QWORD PTR [rsp]
  4038d5:	mov    QWORD PTR [rsp+0x130],rax
  4038dd:	xor    esi,esi
  4038df:	movabs rax,0x6e06cc1ec70644
  4038e9:	mov    QWORD PTR [rsp+0x138],rax
  4038f1:	call   402690 <Mat_CreateVer@plt>
  4038f6:	mov    rbp,rax
  4038f9:	mov    r12d,0x1
  4038ff:	test   rax,rax
  403902:	je     4032e8 <Mat_VarRead@plt+0xbc8>
  403908:	mov    QWORD PTR [rsp+0x200],0x2
  403914:	mov    QWORD PTR [rsp+0x208],0x4
  403920:	push   rdi
  403921:	mov    r8,rbx
  403924:	mov    ecx,0x2
  403929:	push   0x1
  40392b:	mov    edx,0x11
  403930:	lea    r9,[rsp+0x140]
  403938:	jmp    403848 <Mat_VarRead@plt+0x1128>
  40393d:	lea    rdi,[rip+0x123bc]        # 415d00 <getopt_long_only@@Base+0x8720>
  403944:	call   4026b0 <Mat_Help@plt>
  403949:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  40394e:	mov    DWORD PTR [rsp+0x14],0xd
  403956:	jmp    402813 <Mat_VarRead@plt+0xf3>
  40395b:	call   4024c0 <__stack_chk_fail@plt>
  403960:	lea    rdi,[rip+0x122f9]        # 415c60 <getopt_long_only@@Base+0x8680>
  403967:	call   4026b0 <Mat_Help@plt>
  40396c:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  403971:	lea    rax,[rip+0xb748]        # 40f0c0 <getopt_long_only@@Base+0x1ae0>
  403978:	mov    QWORD PTR [rsp],rax
  40397c:	jmp    4036eb <Mat_VarRead@plt+0xfcb>
  403981:	lea    rsi,[rip+0xa977]        # 40e2ff <getopt_long_only@@Base+0xd1f>
  403988:	mov    rdi,r12
  40398b:	call   402590 <strcmp@plt>
  403990:	mov    r14d,eax
  403993:	test   eax,eax
  403995:	jne    403d02 <Mat_VarRead@plt+0x15e2>
  40399b:	lea    eax,[rbp+0x1]
  40399e:	cmp    QWORD PTR [rsp],0x0
  4039a3:	mov    DWORD PTR [rsp+0x10],eax
  4039a7:	je     403fa3 <Mat_VarRead@plt+0x1883>
  4039ad:	mov    edx,DWORD PTR [rip+0x1183d]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  4039b3:	mov    rdi,QWORD PTR [rsp]
  4039b7:	xor    esi,esi
  4039b9:	mov    QWORD PTR [rsp+0x200],0x0
  4039c5:	mov    QWORD PTR [rsp+0x208],0x0
  4039d1:	mov    QWORD PTR [rsp+0x210],0x0
  4039dd:	mov    QWORD PTR [rsp+0x218],0x0
  4039e9:	mov    QWORD PTR [rsp+0x220],0x0
  4039f5:	mov    QWORD PTR [rsp+0x130],0x0
  403a01:	mov    QWORD PTR [rsp+0x138],0x1
  403a0d:	mov    QWORD PTR [rsp+0x140],0xa
  403a19:	call   402690 <Mat_CreateVer@plt>
  403a1e:	mov    rbp,rax
  403a21:	test   rax,rax
  403a24:	je     40368b <Mat_VarRead@plt+0xf6b>
  403a2a:	lea    r12,[rsp+0x130]
  403a32:	push   rax
  403a33:	mov    r8,r12
  403a36:	xor    r9d,r9d
  403a39:	push   0x0
  403a3b:	mov    ecx,0x3
  403a40:	mov    edx,0x9
  403a45:	mov    esi,0x6
  403a4a:	lea    rdi,[rip+0xa8b9]        # 40e30a <getopt_long_only@@Base+0xd2a>
  403a51:	call   402450 <Mat_VarCreate@plt>
  403a56:	mov    edx,DWORD PTR [rip+0x12ac8]        # 416524 <opterr@@Base+0x10>
  403a5c:	mov    rsi,rax
  403a5f:	mov    rdi,rbp
  403a62:	mov    QWORD PTR [rsp+0x210],rax
  403a6a:	call   402470 <Mat_VarWrite@plt>
  403a6f:	mov    r8,r12
  403a72:	xor    r9d,r9d
  403a75:	mov    ecx,0x3
  403a7a:	mov    edx,0x9
  403a7f:	mov    esi,0x6
  403a84:	lea    rdi,[rip+0xa87e]        # 40e309 <getopt_long_only@@Base+0xd29>
  403a8b:	mov    DWORD PTR [rsp],0x800
  403a92:	call   402450 <Mat_VarCreate@plt>
  403a97:	mov    edx,DWORD PTR [rip+0x12a87]        # 416524 <opterr@@Base+0x10>
  403a9d:	mov    rsi,rax
  403aa0:	mov    rdi,rbp
  403aa3:	mov    QWORD PTR [rsp+0x218],rax
  403aab:	call   402470 <Mat_VarWrite@plt>
  403ab0:	mov    r8,r12
  403ab3:	xor    r9d,r9d
  403ab6:	mov    ecx,0x2
  403abb:	mov    edx,0x2
  403ac0:	mov    esi,0x4
  403ac5:	lea    rdi,[rip+0xa845]        # 40e311 <getopt_long_only@@Base+0xd31>
  403acc:	mov    DWORD PTR [rsp],0x0
  403ad3:	call   402450 <Mat_VarCreate@plt>
  403ad8:	mov    edx,DWORD PTR [rip+0x12a46]        # 416524 <opterr@@Base+0x10>
  403ade:	mov    rsi,rax
  403ae1:	mov    rdi,rbp
  403ae4:	mov    QWORD PTR [rsp+0x220],rax
  403aec:	call   402470 <Mat_VarWrite@plt>
  403af1:	mov    r8,r12
  403af4:	xor    r9d,r9d
  403af7:	mov    ecx,0x2
  403afc:	mov    edx,0x16
  403b01:	mov    esi,0x2
  403b06:	lea    rdi,[rip+0xa80e]        # 40e31b <getopt_long_only@@Base+0xd3b>
  403b0d:	mov    DWORD PTR [rsp],0x0
  403b14:	call   402450 <Mat_VarCreate@plt>
  403b19:	mov    edx,DWORD PTR [rip+0x12a05]        # 416524 <opterr@@Base+0x10>
  403b1f:	mov    r13,rax
  403b22:	mov    rsi,rax
  403b25:	mov    rdi,rbp
  403b28:	call   402470 <Mat_VarWrite@plt>
  403b2d:	mov    rdi,r13
  403b30:	call   4025b0 <Mat_VarFree@plt>
  403b35:	mov    r8,r12
  403b38:	mov    r9,rbx
  403b3b:	mov    ecx,0x3
  403b40:	mov    edx,0x16
  403b45:	mov    esi,0x2
  403b4a:	lea    rdi,[rip+0xa7d6]        # 40e327 <getopt_long_only@@Base+0xd47>
  403b51:	mov    DWORD PTR [rsp],0x1
  403b58:	call   402450 <Mat_VarCreate@plt>
  403b5d:	mov    edx,DWORD PTR [rip+0x129c1]        # 416524 <opterr@@Base+0x10>
  403b63:	mov    r13,rax
  403b66:	mov    rsi,rax
  403b69:	mov    rdi,rbp
  403b6c:	call   402470 <Mat_VarWrite@plt>
  403b71:	mov    QWORD PTR [r13+0x38],0x0
  403b79:	mov    rdi,r13
  403b7c:	call   4025b0 <Mat_VarFree@plt>
  403b81:	mov    r8,r12
  403b84:	mov    r9,rbx
  403b87:	mov    ecx,0x2
  403b8c:	mov    edx,0x16
  403b91:	mov    esi,0x2
  403b96:	lea    rdi,[rip+0xa7a3]        # 40e340 <getopt_long_only@@Base+0xd60>
  403b9d:	mov    DWORD PTR [rsp],0x1
  403ba4:	mov    QWORD PTR [rsp+0x140],0x1
  403bb0:	call   402450 <Mat_VarCreate@plt>
  403bb5:	mov    edx,DWORD PTR [rip+0x12969]        # 416524 <opterr@@Base+0x10>
  403bbb:	mov    r13,rax
  403bbe:	mov    rsi,rax
  403bc1:	mov    rdi,rbp
  403bc4:	call   402470 <Mat_VarWrite@plt>
  403bc9:	mov    QWORD PTR [r13+0x38],0x0
  403bd1:	mov    rdi,r13
  403bd4:	call   4025b0 <Mat_VarFree@plt>
  403bd9:	mov    r8,r12
  403bdc:	xor    r9d,r9d
  403bdf:	mov    ecx,0x2
  403be4:	mov    edx,0x15
  403be9:	mov    esi,0x1
  403bee:	lea    rdi,[rip+0xa75e]        # 40e353 <getopt_long_only@@Base+0xd73>
  403bf5:	mov    DWORD PTR [rsp],0x1
  403bfc:	mov    QWORD PTR [rsp+0x140],0x0
  403c08:	call   402450 <Mat_VarCreate@plt>
  403c0d:	mov    edx,DWORD PTR [rip+0x12911]        # 416524 <opterr@@Base+0x10>
  403c13:	mov    rsi,rax
  403c16:	mov    r13,rax
  403c19:	mov    rdi,rbp
  403c1c:	call   402470 <Mat_VarWrite@plt>
  403c21:	mov    rdi,r13
  403c24:	call   4025b0 <Mat_VarFree@plt>
  403c29:	mov    r8,r12
  403c2c:	mov    r9,rbx
  403c2f:	mov    ecx,0x2
  403c34:	mov    edx,0x15
  403c39:	mov    esi,0x1
  403c3e:	lea    rdi,[rip+0xa718]        # 40e35d <getopt_long_only@@Base+0xd7d>
  403c45:	mov    QWORD PTR [rsp+0x140],0x3
  403c51:	mov    DWORD PTR [rsp],0x1
  403c58:	call   402450 <Mat_VarCreate@plt>
  403c5d:	mov    edx,DWORD PTR [rip+0x128c1]        # 416524 <opterr@@Base+0x10>
  403c63:	mov    rsi,rax
  403c66:	mov    r12,rax
  403c69:	mov    rdi,rbp
  403c6c:	call   402470 <Mat_VarWrite@plt>
  403c71:	mov    QWORD PTR [r12+0x38],0x0
  403c7a:	mov    rdi,r12
  403c7d:	call   4025b0 <Mat_VarFree@plt>
  403c82:	mov    rdi,QWORD PTR [rsp+0x210]
  403c8a:	call   4025b0 <Mat_VarFree@plt>
  403c8f:	mov    rdi,QWORD PTR [rsp+0x218]
  403c97:	call   4025b0 <Mat_VarFree@plt>
  403c9c:	mov    rdi,QWORD PTR [rsp+0x220]
  403ca4:	call   4025b0 <Mat_VarFree@plt>
  403ca9:	mov    rdi,rbp
  403cac:	call   402610 <Mat_Close@plt>
  403cb1:	pop    rax
  403cb2:	pop    rdx
  403cb3:	jmp    40308c <Mat_VarRead@plt+0x96c>
  403cb8:	lea    rdi,[rip+0x11f21]        # 415be0 <getopt_long_only@@Base+0x8600>
  403cbf:	call   4026b0 <Mat_Help@plt>
  403cc4:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  403cc9:	mov    r12d,0x1
  403ccf:	jmp    4032e8 <Mat_VarRead@plt+0xbc8>
  403cd4:	lea    rax,[rip+0xa475]        # 40e150 <getopt_long_only@@Base+0xb70>
  403cdb:	mov    QWORD PTR [rsp],rax
  403cdf:	jmp    4037f5 <Mat_VarRead@plt+0x10d5>
  403ce4:	lea    rdi,[rip+0x11e55]        # 415b40 <getopt_long_only@@Base+0x8560>
  403ceb:	call   4026b0 <Mat_Help@plt>
  403cf0:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  403cf5:	mov    DWORD PTR [rsp+0x14],0xa
  403cfd:	jmp    402813 <Mat_VarRead@plt+0xf3>
  403d02:	lea    rsi,[rip+0xa860]        # 40e569 <getopt_long_only@@Base+0xf89>
  403d09:	mov    rdi,r12
  403d0c:	call   402590 <strcmp@plt>
  403d11:	mov    r14d,eax
  403d14:	test   eax,eax
  403d16:	je     403e5d <Mat_VarRead@plt+0x173d>
  403d1c:	lea    rsi,[rip+0xa800]        # 40e523 <getopt_long_only@@Base+0xf43>
  403d23:	mov    rdi,r12
  403d26:	call   402590 <strcmp@plt>
  403d2b:	mov    r14d,eax
  403d2e:	test   eax,eax
  403d30:	jne    403e1a <Mat_VarRead@plt+0x16fa>
  403d36:	lea    eax,[rbp+0x1]
  403d39:	cmp    QWORD PTR [rsp],0x0
  403d3e:	mov    DWORD PTR [rsp+0x10],eax
  403d42:	je     403f93 <Mat_VarRead@plt+0x1873>
  403d48:	mov    QWORD PTR [rsp+0x130],0x5
  403d54:	mov    QWORD PTR [rsp+0x138],0x5
  403d60:	xor    eax,eax
  403d62:	lea    rdi,[rsp+0x208]
  403d6a:	mov    ecx,0x2e
  403d6f:	rep stos DWORD PTR es:[rdi],eax
  403d71:	mov    eax,0x1
  403d76:	vxorpd xmm0,xmm0,xmm0
  403d7a:	vcvtsi2sd xmm0,xmm0,eax
  403d7e:	vmovsd QWORD PTR [rbx+rax*8-0x8],xmm0
  403d84:	inc    rax
  403d87:	cmp    rax,0x1a
  403d8b:	jne    403d76 <Mat_VarRead@plt+0x1656>
  403d8d:	vmovsd xmm0,QWORD PTR [rip+0xe98b]        # 412720 <getopt_long_only@@Base+0x5140>
  403d95:	mov    edx,DWORD PTR [rip+0x11455]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  403d9b:	mov    rdi,QWORD PTR [rsp]
  403d9f:	xor    esi,esi
  403da1:	vdivsd xmm0,xmm0,QWORD PTR [rip+0xeb1f]        # 4128c8 <getopt_long_only@@Base+0x52e8>
  403da9:	vmovsd QWORD PTR [rsp+0x200],xmm0
  403db2:	vmovsd QWORD PTR [rsp+0x230],xmm0
  403dbb:	vmovsd QWORD PTR [rsp+0x260],xmm0
  403dc4:	vmovsd QWORD PTR [rsp+0x290],xmm0
  403dcd:	vmovsd QWORD PTR [rsp+0x2c0],xmm0
  403dd6:	call   402690 <Mat_CreateVer@plt>
  403ddb:	mov    rbp,rax
  403dde:	test   rax,rax
  403de1:	je     40368b <Mat_VarRead@plt+0xf6b>
  403de7:	push   rax
  403de8:	mov    edx,0x9
  403ded:	mov    r9,rbx
  403df0:	push   0x1
  403df2:	mov    ecx,0x2
  403df7:	mov    esi,0x6
  403dfc:	lea    r8,[rsp+0x140]
  403e04:	lea    rdi,[rip+0xa432]        # 40e23d <getopt_long_only@@Base+0xc5d>
  403e0b:	call   402450 <Mat_VarCreate@plt>
  403e10:	mov    r12,rax
  403e13:	xor    edx,edx
  403e15:	jmp    40306e <Mat_VarRead@plt+0x94e>
  403e1a:	lea    rsi,[rip+0xa967]        # 40e788 <getopt_long_only@@Base+0x11a8>
  403e21:	mov    rdi,r12
  403e24:	call   402590 <strcmp@plt>
  403e29:	mov    r14d,eax
  403e2c:	test   eax,eax
  403e2e:	jne    40402d <Mat_VarRead@plt+0x190d>
  403e34:	lea    eax,[rbp+0x1]
  403e37:	cmp    DWORD PTR [rsp+0x1c],0x3
  403e3c:	mov    DWORD PTR [rsp+0x10],eax
  403e40:	jg     403fb3 <Mat_VarRead@plt+0x1893>
  403e46:	lea    rdi,[rip+0xb3e3]        # 40f230 <getopt_long_only@@Base+0x1c50>
  403e4d:	xor    eax,eax
  403e4f:	call   402620 <Mat_Critical@plt>
  403e54:	inc    DWORD PTR [rsp+0x18]
  403e58:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  403e5d:	lea    eax,[rbp+0x1]
  403e60:	mov    QWORD PTR [rsp+0x130],0x5
  403e6c:	mov    QWORD PTR [rsp+0x138],0x5
  403e78:	mov    DWORD PTR [rsp+0x10],eax
  403e7c:	lea    rdi,[rsp+0x208]
  403e84:	mov    eax,r14d
  403e87:	mov    ecx,0x2e
  403e8c:	rep stos DWORD PTR es:[rdi],eax
  403e8e:	mov    eax,0x1
  403e93:	vxorpd xmm0,xmm0,xmm0
  403e97:	vcvtsi2sd xmm0,xmm0,eax
  403e9b:	vmovsd QWORD PTR [rbx+rax*8-0x8],xmm0
  403ea1:	inc    rax
  403ea4:	cmp    rax,0x1a
  403ea8:	jne    403e93 <Mat_VarRead@plt+0x1773>
  403eaa:	vxorpd xmm0,xmm0,xmm0
  403eae:	vdivsd xmm0,xmm0,xmm0
  403eb2:	mov    edx,DWORD PTR [rip+0x11338]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  403eb8:	xor    esi,esi
  403eba:	lea    rdi,[rip+0xa4ac]        # 40e36d <getopt_long_only@@Base+0xd8d>
  403ec1:	vmovsd QWORD PTR [rsp+0x200],xmm0
  403eca:	vmovsd QWORD PTR [rsp+0x230],xmm0
  403ed3:	vmovsd QWORD PTR [rsp+0x260],xmm0
  403edc:	vmovsd QWORD PTR [rsp+0x290],xmm0
  403ee5:	vmovsd QWORD PTR [rsp+0x2c0],xmm0
  403eee:	call   402690 <Mat_CreateVer@plt>
  403ef3:	mov    rbp,rax
  403ef6:	test   rax,rax
  403ef9:	jne    403de7 <Mat_VarRead@plt+0x16c7>
  403eff:	jmp    40368b <Mat_VarRead@plt+0xf6b>
  403f04:	lea    rdi,[rip+0x11ab5]        # 4159c0 <getopt_long_only@@Base+0x83e0>
  403f0b:	call   4026b0 <Mat_Help@plt>
  403f10:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  403f15:	lea    rdi,[rip+0x11ba4]        # 415ac0 <getopt_long_only@@Base+0x84e0>
  403f1c:	call   4026b0 <Mat_Help@plt>
  403f21:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  403f26:	mov    DWORD PTR [rsp+0x14],0xb
  403f2e:	jmp    402813 <Mat_VarRead@plt+0xf3>
  403f33:	lea    rax,[rip+0xa22a]        # 40e164 <getopt_long_only@@Base+0xb84>
  403f3a:	mov    QWORD PTR [rsp],rax
  403f3e:	jmp    4038c1 <Mat_VarRead@plt+0x11a1>
  403f43:	mov    DWORD PTR [rsp+0x14],0x8
  403f4b:	jmp    402813 <Mat_VarRead@plt+0xf3>
  403f50:	mov    rcx,r14
  403f53:	lea    rdx,[rip+0xb1be]        # 40f118 <getopt_long_only@@Base+0x1b38>
  403f5a:	mov    rax,QWORD PTR [rip+0x11097]        # 414ff8 <getopt_long_only@@Base+0x7a18>
  403f61:	mov    esi,0x1
  403f66:	mov    rdi,QWORD PTR [rax]
  403f69:	xor    eax,eax
  403f6b:	call   4026e0 <__fprintf_chk@plt>
  403f70:	jmp    4029ba <Mat_VarRead@plt+0x29a>
  403f75:	lea    rdi,[rip+0x11984]        # 415900 <getopt_long_only@@Base+0x8320>
  403f7c:	call   4026b0 <Mat_Help@plt>
  403f81:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  403f86:	mov    rcx,QWORD PTR [r13+0x10]
  403f8a:	lea    rdx,[rip+0xb1af]        # 40f140 <getopt_long_only@@Base+0x1b60>
  403f91:	jmp    403f5a <Mat_VarRead@plt+0x183a>
  403f93:	lea    rax,[rip+0xa1fa]        # 40e194 <getopt_long_only@@Base+0xbb4>
  403f9a:	mov    QWORD PTR [rsp],rax
  403f9e:	jmp    403d48 <Mat_VarRead@plt+0x1628>
  403fa3:	lea    rax,[rip+0xa1d6]        # 40e180 <getopt_long_only@@Base+0xba0>
  403faa:	mov    QWORD PTR [rsp],rax
  403fae:	jmp    4039ad <Mat_VarRead@plt+0x128d>
  403fb3:	movsxd rax,DWORD PTR [rsp+0x10]
  403fb8:	mov    rcx,QWORD PTR [rsp+0x8]
  403fbd:	inc    rax
  403fc0:	mov    r12,QWORD PTR [rcx+rax*8-0x8]
  403fc5:	mov    rdi,QWORD PTR [rsp]
  403fc9:	mov    r13,QWORD PTR [rcx+rax*8]
  403fcd:	call   40ca30 <Mat_VarRead@plt+0xa310>
  403fd2:	mov    rdi,r12
  403fd5:	xor    esi,esi
  403fd7:	call   402400 <Mat_Open@plt>
  403fdc:	mov    r12,rax
  403fdf:	test   rax,rax
  403fe2:	je     40426b <Mat_VarRead@plt+0x1b4b>
  403fe8:	mov    rsi,r13
  403feb:	mov    rdi,rax
  403fee:	call   402720 <Mat_VarRead@plt>
  403ff3:	mov    r13,rax
  403ff6:	test   rax,rax
  403ff9:	je     404260 <Mat_VarRead@plt+0x1b40>
  403fff:	mov    rdi,rax
  404002:	mov    esi,0x1
  404007:	call   4025e0 <Mat_VarPrint@plt>
  40400c:	mov    rdi,r13
  40400f:	call   4025b0 <Mat_VarFree@plt>
  404014:	mov    rdi,r12
  404017:	call   402610 <Mat_Close@plt>
  40401c:	lea    eax,[rbp+0x3]
  40401f:	add    DWORD PTR [rsp+0x18],r14d
  404024:	mov    DWORD PTR [rsp+0x10],eax
  404028:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  40402d:	lea    rsi,[rip+0xa6fa]        # 40e72e <getopt_long_only@@Base+0x114e>
  404034:	mov    rdi,r12
  404037:	call   402590 <strcmp@plt>
  40403c:	mov    r14d,eax
  40403f:	test   eax,eax
  404041:	jne    404286 <Mat_VarRead@plt+0x1b66>
  404047:	lea    eax,[rbp+0x1]
  40404a:	cmp    QWORD PTR [rsp],0x0
  40404f:	mov    DWORD PTR [rsp+0x10],eax
  404053:	je     404276 <Mat_VarRead@plt+0x1b56>
  404059:	lea    r15,[rsp+0x390]
  404061:	mov    QWORD PTR [rsp+0xa0],0x5
  40406d:	mov    QWORD PTR [rsp+0xa8],0xa
  404079:	xor    eax,eax
  40407b:	mov    ecx,0x19
  404080:	mov    rdi,r15
  404083:	rep stos BYTE PTR es:[rdi],al
  404085:	lea    r12,[rsp+0x130]
  40408d:	xor    eax,eax
  40408f:	mov    edx,eax
  404091:	and    edx,0x1
  404094:	mov    DWORD PTR [rbx+rax*4],edx
  404097:	xor    edx,0x1
  40409a:	mov    WORD PTR [r12+rax*2],dx
  40409f:	inc    rax
  4040a2:	cmp    rax,0x32
  4040a6:	jne    40408f <Mat_VarRead@plt+0x196f>
  4040a8:	mov    rdx,r15
  4040ab:	xor    eax,eax
  4040ad:	mov    rsi,rdx
  4040b0:	mov    rcx,rax
  4040b3:	inc    rcx
  4040b6:	mov    BYTE PTR [rsi],0x1
  4040b9:	inc    rsi
  4040bc:	cmp    ecx,0x5
  4040bf:	jne    4040b3 <Mat_VarRead@plt+0x1993>
  4040c1:	inc    rax
  4040c4:	add    rdx,0x6
  4040c8:	cmp    rax,0x5
  4040cc:	jne    4040ad <Mat_VarRead@plt+0x198d>
  4040ce:	mov    edx,DWORD PTR [rip+0x1111c]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  4040d4:	mov    rdi,QWORD PTR [rsp]
  4040d8:	xor    esi,esi
  4040da:	call   402690 <Mat_CreateVer@plt>
  4040df:	mov    r13,rax
  4040e2:	test   rax,rax
  4040e5:	je     40368b <Mat_VarRead@plt+0xf6b>
  4040eb:	lea    rbp,[rsp+0xa0]
  4040f3:	push   rax
  4040f4:	mov    r9,rbx
  4040f7:	mov    r8,rbp
  4040fa:	push   0x201
  4040ff:	mov    ecx,0x2
  404104:	mov    edx,0x6
  404109:	mov    esi,0xd
  40410e:	lea    rdi,[rip+0x9ef4]        # 40e009 <getopt_long_only@@Base+0xa29>
  404115:	call   402450 <Mat_VarCreate@plt>
  40411a:	mov    r9,r12
  40411d:	mov    r8,rbp
  404120:	mov    ecx,0x2
  404125:	mov    edx,0x4
  40412a:	mov    esi,0xb
  40412f:	lea    rdi,[rip+0x9eda]        # 40e010 <getopt_long_only@@Base+0xa30>
  404136:	mov    DWORD PTR [rsp],0x201
  40413d:	mov    QWORD PTR [rsp+0xd0],rax
  404145:	call   402450 <Mat_VarCreate@plt>
  40414a:	xor    r9d,r9d
  40414d:	mov    r8,rbp
  404150:	mov    ecx,0x2
  404155:	mov    edx,0x2
  40415a:	mov    esi,0x9
  40415f:	lea    rdi,[rip+0x9ea3]        # 40e009 <getopt_long_only@@Base+0xa29>
  404166:	mov    DWORD PTR [rsp],0x201
  40416d:	mov    QWORD PTR [rsp+0xd8],rax
  404175:	mov    QWORD PTR [rsp+0xb0],0x0
  404181:	mov    QWORD PTR [rsp+0xb8],0x5
  40418d:	call   402450 <Mat_VarCreate@plt>
  404192:	mov    r9,r15
  404195:	mov    r8,rbp
  404198:	mov    ecx,0x2
  40419d:	mov    edx,0x2
  4041a2:	mov    esi,0x9
  4041a7:	lea    rdi,[rip+0x9e62]        # 40e010 <getopt_long_only@@Base+0xa30>
  4041ae:	mov    DWORD PTR [rsp],0x201
  4041b5:	mov    QWORD PTR [rsp+0xe0],rax
  4041bd:	mov    QWORD PTR [rsp+0xb0],0x5
  4041c9:	mov    QWORD PTR [rsp+0xb8],0x5
  4041d5:	call   402450 <Mat_VarCreate@plt>
  4041da:	mov    QWORD PTR [rsp+0xe8],rax
  4041e2:	mov    QWORD PTR [rsp+0xf0],0x0
  4041ee:	mov    QWORD PTR [rsp+0xb0],0x2
  4041fa:	mov    QWORD PTR [rsp+0xb8],0x1
  404206:	mov    DWORD PTR [rsp],0x0
  40420d:	lea    r9,[rsp+0xd0]
  404215:	mov    r8,rbp
  404218:	mov    ecx,0x2
  40421d:	mov    edx,0x16
  404222:	mov    esi,0x2
  404227:	lea    rdi,[rip+0x9df8]        # 40e026 <getopt_long_only@@Base+0xa46>
  40422e:	call   402450 <Mat_VarCreate@plt>
  404233:	mov    edx,DWORD PTR [rip+0x122eb]        # 416524 <opterr@@Base+0x10>
  404239:	mov    rsi,rax
  40423c:	mov    rbp,rax
  40423f:	mov    rdi,r13
  404242:	call   402470 <Mat_VarWrite@plt>
  404247:	mov    rdi,rbp
  40424a:	call   4025b0 <Mat_VarFree@plt>
  40424f:	mov    rdi,r13
  404252:	call   402610 <Mat_Close@plt>
  404257:	pop    r8
  404259:	pop    r9
  40425b:	jmp    40308c <Mat_VarRead@plt+0x96c>
  404260:	mov    r14d,0x1
  404266:	jmp    404014 <Mat_VarRead@plt+0x18f4>
  40426b:	mov    r14d,0x1
  404271:	jmp    40401c <Mat_VarRead@plt+0x18fc>
  404276:	lea    rax,[rip+0xad13]        # 40ef90 <getopt_long_only@@Base+0x19b0>
  40427d:	mov    QWORD PTR [rsp],rax
  404281:	jmp    404059 <Mat_VarRead@plt+0x1939>
  404286:	lea    rsi,[rip+0xa447]        # 40e6d4 <getopt_long_only@@Base+0x10f4>
  40428d:	mov    rdi,r12
  404290:	call   402590 <strcmp@plt>
  404295:	mov    r14d,eax
  404298:	test   eax,eax
  40429a:	jne    4043e0 <Mat_VarRead@plt+0x1cc0>
  4042a0:	lea    eax,[rbp+0x1]
  4042a3:	cmp    QWORD PTR [rsp],0x0
  4042a8:	mov    DWORD PTR [rsp+0x10],eax
  4042ac:	je     4043d0 <Mat_VarRead@plt+0x1cb0>
  4042b2:	mov    edx,DWORD PTR [rip+0x10f38]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  4042b8:	mov    rdi,QWORD PTR [rsp]
  4042bc:	xor    esi,esi
  4042be:	call   402690 <Mat_CreateVer@plt>
  4042c3:	mov    rbp,rax
  4042c6:	test   rax,rax
  4042c9:	je     40368b <Mat_VarRead@plt+0xf6b>
  4042cf:	lea    r12,[rsp+0x130]
  4042d7:	lea    rax,[rip+0x9d2b]        # 40e009 <getopt_long_only@@Base+0xa29>
  4042de:	mov    QWORD PTR [rsp+0x130],rax
  4042e6:	mov    rcx,r12
  4042e9:	mov    rdx,rbx
  4042ec:	lea    rax,[rip+0x9d1d]        # 40e010 <getopt_long_only@@Base+0xa30>
  4042f3:	mov    r8d,0x2
  4042f9:	mov    esi,0x2
  4042fe:	lea    rdi,[rip+0x9d21]        # 40e026 <getopt_long_only@@Base+0xa46>
  404305:	mov    QWORD PTR [rsp+0x138],rax
  40430d:	mov    QWORD PTR [rsp+0x200],0x2
  404319:	mov    QWORD PTR [rsp+0x208],0x1
  404325:	call   402680 <Mat_VarCreateStruct@plt>
  40432a:	mov    QWORD PTR [rsp+0x200],0x4
  404336:	mov    QWORD PTR [rsp+0x208],0x1a
  404342:	push   r13
  404344:	lea    r9,[rip+0xae75]        # 40f1c0 <getopt_long_only@@Base+0x1be0>
  40434b:	mov    r8,rbx
  40434e:	push   0x0
  404350:	mov    ecx,0x2
  404355:	mov    edx,0x10
  40435a:	mov    rdi,QWORD PTR [rsp+0x148]
  404362:	mov    esi,0x4
  404367:	mov    r12,rax
  40436a:	call   402450 <Mat_VarCreate@plt>
  40436f:	mov    rsi,QWORD PTR [rsp+0x148]
  404377:	mov    rcx,rax
  40437a:	mov    edx,0x1
  40437f:	mov    rdi,r12
  404382:	call   402700 <Mat_VarSetStructFieldByName@plt>
  404387:	jmp    403068 <Mat_VarRead@plt+0x948>
  40438c:	lea    rdi,[rip+0x10e6d]        # 415200 <getopt_long_only@@Base+0x7c20>
  404393:	call   4026b0 <Mat_Help@plt>
  404398:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  40439d:	lea    rdi,[rip+0x1101c]        # 4153c0 <getopt_long_only@@Base+0x7de0>
  4043a4:	call   4026b0 <Mat_Help@plt>
  4043a9:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  4043ae:	lea    rdi,[rip+0x10f4b]        # 415300 <getopt_long_only@@Base+0x7d20>
  4043b5:	call   4026b0 <Mat_Help@plt>
  4043ba:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  4043bf:	lea    rdi,[rip+0x10efa]        # 4152c0 <getopt_long_only@@Base+0x7ce0>
  4043c6:	call   4026b0 <Mat_Help@plt>
  4043cb:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  4043d0:	lea    rax,[rip+0x9dcf]        # 40e1a6 <getopt_long_only@@Base+0xbc6>
  4043d7:	mov    QWORD PTR [rsp],rax
  4043db:	jmp    4042b2 <Mat_VarRead@plt+0x1b92>
  4043e0:	lea    rsi,[rip+0xa383]        # 40e76a <getopt_long_only@@Base+0x118a>
  4043e7:	mov    rdi,r12
  4043ea:	call   402590 <strcmp@plt>
  4043ef:	test   eax,eax
  4043f1:	jne    4044bb <Mat_VarRead@plt+0x1d9b>
  4043f7:	lea    eax,[rbp+0x1]
  4043fa:	cmp    QWORD PTR [rsp],0x0
  4043ff:	mov    DWORD PTR [rsp+0x10],eax
  404403:	je     4044ab <Mat_VarRead@plt+0x1d8b>
  404409:	mov    edx,DWORD PTR [rsp+0x6c]
  40440d:	mov    rsi,QWORD PTR [rsp]
  404411:	mov    edi,DWORD PTR [rsp+0x14]
  404415:	call   409ca0 <Mat_VarRead@plt+0x7580>
  40441a:	add    DWORD PTR [rsp+0x18],eax
  40441e:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404423:	lea    rdi,[rip+0x11016]        # 415440 <getopt_long_only@@Base+0x7e60>
  40442a:	call   4026b0 <Mat_Help@plt>
  40442f:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  404434:	lea    rdi,[rip+0x110a5]        # 4154e0 <getopt_long_only@@Base+0x7f00>
  40443b:	call   4026b0 <Mat_Help@plt>
  404440:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  404445:	lea    rdi,[rip+0x11234]        # 415680 <getopt_long_only@@Base+0x80a0>
  40444c:	call   4026b0 <Mat_Help@plt>
  404451:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  404456:	lea    rdi,[rip+0x112c3]        # 415720 <getopt_long_only@@Base+0x8140>
  40445d:	call   4026b0 <Mat_Help@plt>
  404462:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  404467:	lea    rdi,[rip+0x11352]        # 4157c0 <getopt_long_only@@Base+0x81e0>
  40446e:	call   4026b0 <Mat_Help@plt>
  404473:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  404478:	lea    rdi,[rip+0x113e1]        # 415860 <getopt_long_only@@Base+0x8280>
  40447f:	call   4026b0 <Mat_Help@plt>
  404484:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  404489:	lea    rdi,[rip+0x110d0]        # 415560 <getopt_long_only@@Base+0x7f80>
  404490:	call   4026b0 <Mat_Help@plt>
  404495:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  40449a:	lea    rdi,[rip+0x1113f]        # 4155e0 <getopt_long_only@@Base+0x8000>
  4044a1:	call   4026b0 <Mat_Help@plt>
  4044a6:	jmp    4029e5 <Mat_VarRead@plt+0x2c5>
  4044ab:	lea    rax,[rip+0xab06]        # 40efb8 <getopt_long_only@@Base+0x19d8>
  4044b2:	mov    QWORD PTR [rsp],rax
  4044b6:	jmp    404409 <Mat_VarRead@plt+0x1ce9>
  4044bb:	lea    rsi,[rip+0xbf3e]        # 410400 <getopt_long_only@@Base+0x2e20>
  4044c2:	mov    rdi,r12
  4044c5:	call   402590 <strcmp@plt>
  4044ca:	test   eax,eax
  4044cc:	jne    4044f6 <Mat_VarRead@plt+0x1dd6>
  4044ce:	lea    eax,[rbp+0x1]
  4044d1:	cmp    QWORD PTR [rsp],0x0
  4044d6:	mov    DWORD PTR [rsp+0x10],eax
  4044da:	je     404529 <Mat_VarRead@plt+0x1e09>
  4044dc:	mov    edx,DWORD PTR [rsp+0x6c]
  4044e0:	mov    rsi,QWORD PTR [rsp]
  4044e4:	mov    edi,DWORD PTR [rsp+0x14]
  4044e8:	call   40a230 <Mat_VarRead@plt+0x7b10>
  4044ed:	add    DWORD PTR [rsp+0x18],eax
  4044f1:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  4044f6:	lea    rsi,[rip+0xa1be]        # 40e6bb <getopt_long_only@@Base+0x10db>
  4044fd:	mov    rdi,r12
  404500:	call   402590 <strcmp@plt>
  404505:	test   eax,eax
  404507:	jne    404543 <Mat_VarRead@plt+0x1e23>
  404509:	lea    eax,[rbp+0x1]
  40450c:	cmp    QWORD PTR [rsp],0x0
  404511:	mov    DWORD PTR [rsp+0x10],eax
  404515:	je     404536 <Mat_VarRead@plt+0x1e16>
  404517:	mov    rdi,QWORD PTR [rsp]
  40451b:	call   405b60 <Mat_VarRead@plt+0x3440>
  404520:	add    DWORD PTR [rsp+0x18],eax
  404524:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404529:	lea    rax,[rip+0xaab0]        # 40efe0 <getopt_long_only@@Base+0x1a00>
  404530:	mov    QWORD PTR [rsp],rax
  404534:	jmp    4044dc <Mat_VarRead@plt+0x1dbc>
  404536:	lea    rax,[rip+0x9c84]        # 40e1c1 <getopt_long_only@@Base+0xbe1>
  40453d:	mov    QWORD PTR [rsp],rax
  404541:	jmp    404517 <Mat_VarRead@plt+0x1df7>
  404543:	lea    rsi,[rip+0xa11f]        # 40e669 <getopt_long_only@@Base+0x1089>
  40454a:	mov    rdi,r12
  40454d:	call   402590 <strcmp@plt>
  404552:	mov    r14d,eax
  404555:	test   eax,eax
  404557:	jne    404745 <Mat_VarRead@plt+0x2025>
  40455d:	lea    eax,[rbp+0x1]
  404560:	cmp    QWORD PTR [rsp],0x0
  404565:	mov    DWORD PTR [rsp+0x10],eax
  404569:	je     40477c <Mat_VarRead@plt+0x205c>
  40456f:	xor    edx,edx
  404571:	mov    eax,edx
  404573:	lea    rdi,[rsp+0x200]
  40457b:	mov    ecx,0x19
  404580:	rep stos DWORD PTR es:[rdi],eax
  404582:	lea    rdi,[rsp+0x130]
  40458a:	mov    ecx,0x32
  40458f:	rep stos BYTE PTR es:[rdi],al
  404591:	lea    r10,[rsp+0xc0]
  404599:	lea    rdi,[rsp+0x390]
  4045a1:	mov    ecx,0x19
  4045a6:	mov    QWORD PTR [rsp+0xa0],0x5
  4045b2:	mov    QWORD PTR [rsp+0xa8],0x5
  4045be:	rep stos BYTE PTR es:[rdi],al
  4045c0:	lea    r15,[rsp+0x390]
  4045c8:	mov    ecx,0xa
  4045cd:	mov    rdi,r10
  4045d0:	lea    r12,[rsp+0x130]
  4045d8:	rep stos DWORD PTR es:[rdi],eax
  4045da:	mov    rsi,r12
  4045dd:	mov    rdi,r15
  4045e0:	mov    rcx,rbx
  4045e3:	xor    eax,eax
  4045e5:	mov    BYTE PTR [rdi],0x1
  4045e8:	xor    edx,edx
  4045ea:	mov    DWORD PTR [rcx+rdx*4],0x1
  4045f1:	inc    rdx
  4045f4:	cmp    edx,eax
  4045f6:	jle    4045ea <Mat_VarRead@plt+0x1eca>
  4045f8:	mov    r8,rsi
  4045fb:	mov    rdx,rax
  4045fe:	inc    rdx
  404601:	mov    WORD PTR [r8],0x1
  404607:	add    r8,0x2
  40460b:	cmp    edx,0x5
  40460e:	jne    4045fe <Mat_VarRead@plt+0x1ede>
  404610:	inc    rax
  404613:	add    rdi,0x6
  404617:	add    rsi,0xc
  40461b:	add    rcx,0x14
  40461f:	cmp    rax,0x5
  404623:	jne    4045e5 <Mat_VarRead@plt+0x1ec5>
  404625:	mov    edx,DWORD PTR [rip+0x10bc5]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  40462b:	mov    rdi,QWORD PTR [rsp]
  40462f:	xor    esi,esi
  404631:	mov    QWORD PTR [rsp+0x20],r10
  404636:	call   402690 <Mat_CreateVer@plt>
  40463b:	mov    r13,rax
  40463e:	test   rax,rax
  404641:	je     40368b <Mat_VarRead@plt+0xf6b>
  404647:	lea    rbp,[rsp+0xa0]
  40464f:	push   r10
  404651:	mov    r9,rbx
  404654:	mov    r8,rbp
  404657:	push   0x200
  40465c:	mov    ecx,0x2
  404661:	mov    edx,0x6
  404666:	mov    esi,0xd
  40466b:	xor    edi,edi
  40466d:	call   402450 <Mat_VarCreate@plt>
  404672:	mov    r9,r12
  404675:	mov    r8,rbp
  404678:	mov    ecx,0x2
  40467d:	mov    edx,0x4
  404682:	mov    esi,0xb
  404687:	xor    edi,edi
  404689:	mov    DWORD PTR [rsp],0x200
  404690:	mov    QWORD PTR [rsp+0xd0],rax
  404698:	call   402450 <Mat_VarCreate@plt>
  40469d:	mov    r9,r15
  4046a0:	mov    r8,rbp
  4046a3:	mov    ecx,0x2
  4046a8:	mov    edx,0x2
  4046ad:	mov    esi,0x9
  4046b2:	xor    edi,edi
  4046b4:	mov    DWORD PTR [rsp],0x200
  4046bb:	mov    QWORD PTR [rsp+0xd8],rax
  4046c3:	call   402450 <Mat_VarCreate@plt>
  4046c8:	xor    r9d,r9d
  4046cb:	mov    r8,rbp
  4046ce:	mov    ecx,0x2
  4046d3:	mov    edx,0x2
  4046d8:	mov    esi,0x9
  4046dd:	xor    edi,edi
  4046df:	mov    DWORD PTR [rsp],0x200
  4046e6:	mov    QWORD PTR [rsp+0xe0],rax
  4046ee:	mov    QWORD PTR [rsp+0xb0],0x0
  4046fa:	call   402450 <Mat_VarCreate@plt>
  4046ff:	mov    r10,QWORD PTR [rsp+0x30]
  404704:	mov    QWORD PTR [rsp+0xe8],rax
  40470c:	mov    QWORD PTR [rsp+0xb0],0x4
  404718:	mov    QWORD PTR [rsp+0xb8],0x1
  404724:	mov    DWORD PTR [rsp],0x0
  40472b:	mov    r9,r10
  40472e:	mov    r8,rbp
  404731:	mov    ecx,0x2
  404736:	mov    edx,0x15
  40473b:	mov    esi,0x1
  404740:	jmp    404227 <Mat_VarRead@plt+0x1b07>
  404745:	lea    rsi,[rip+0x9f53]        # 40e69f <getopt_long_only@@Base+0x10bf>
  40474c:	mov    rdi,r12
  40474f:	call   402590 <strcmp@plt>
  404754:	test   eax,eax
  404756:	jne    404799 <Mat_VarRead@plt+0x2079>
  404758:	lea    eax,[rbp+0x1]
  40475b:	cmp    QWORD PTR [rsp],0x0
  404760:	mov    DWORD PTR [rsp+0x10],eax
  404764:	je     40478c <Mat_VarRead@plt+0x206c>
  404766:	mov    rsi,QWORD PTR [rsp]
  40476a:	mov    edi,DWORD PTR [rsp+0x14]
  40476e:	call   405ee0 <Mat_VarRead@plt+0x37c0>
  404773:	add    DWORD PTR [rsp+0x18],eax
  404777:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  40477c:	lea    rax,[rip+0xa88d]        # 40f010 <getopt_long_only@@Base+0x1a30>
  404783:	mov    QWORD PTR [rsp],rax
  404787:	jmp    40456f <Mat_VarRead@plt+0x1e4f>
  40478c:	lea    rax,[rip+0xa89d]        # 40f030 <getopt_long_only@@Base+0x1a50>
  404793:	mov    QWORD PTR [rsp],rax
  404797:	jmp    404766 <Mat_VarRead@plt+0x2046>
  404799:	lea    rsi,[rip+0x9ae5]        # 40e285 <getopt_long_only@@Base+0xca5>
  4047a0:	mov    rdi,r12
  4047a3:	call   402590 <strcmp@plt>
  4047a8:	test   eax,eax
  4047aa:	jne    4047d0 <Mat_VarRead@plt+0x20b0>
  4047ac:	lea    eax,[rbp+0x1]
  4047af:	cmp    QWORD PTR [rsp],0x0
  4047b4:	mov    DWORD PTR [rsp+0x10],eax
  4047b8:	je     404803 <Mat_VarRead@plt+0x20e3>
  4047ba:	mov    rsi,QWORD PTR [rsp]
  4047be:	mov    edi,DWORD PTR [rsp+0x14]
  4047c2:	call   4062d0 <Mat_VarRead@plt+0x3bb0>
  4047c7:	add    DWORD PTR [rsp+0x18],eax
  4047cb:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  4047d0:	lea    rsi,[rip+0x9e65]        # 40e63c <getopt_long_only@@Base+0x105c>
  4047d7:	mov    rdi,r12
  4047da:	call   402590 <strcmp@plt>
  4047df:	test   eax,eax
  4047e1:	jne    40481d <Mat_VarRead@plt+0x20fd>
  4047e3:	lea    eax,[rbp+0x1]
  4047e6:	cmp    QWORD PTR [rsp],0x0
  4047eb:	mov    DWORD PTR [rsp+0x10],eax
  4047ef:	je     404810 <Mat_VarRead@plt+0x20f0>
  4047f1:	mov    rdi,QWORD PTR [rsp]
  4047f5:	call   406b20 <Mat_VarRead@plt+0x4400>
  4047fa:	add    DWORD PTR [rsp+0x18],eax
  4047fe:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404803:	lea    rax,[rip+0xa846]        # 40f050 <getopt_long_only@@Base+0x1a70>
  40480a:	mov    QWORD PTR [rsp],rax
  40480e:	jmp    4047ba <Mat_VarRead@plt+0x209a>
  404810:	lea    rax,[rip+0x99c6]        # 40e1dd <getopt_long_only@@Base+0xbfd>
  404817:	mov    QWORD PTR [rsp],rax
  40481b:	jmp    4047f1 <Mat_VarRead@plt+0x20d1>
  40481d:	lea    rsi,[rip+0x9dc4]        # 40e5e8 <getopt_long_only@@Base+0x1008>
  404824:	mov    rdi,r12
  404827:	call   402590 <strcmp@plt>
  40482c:	test   eax,eax
  40482e:	jne    404854 <Mat_VarRead@plt+0x2134>
  404830:	lea    eax,[rbp+0x1]
  404833:	cmp    QWORD PTR [rsp],0x0
  404838:	mov    DWORD PTR [rsp+0x10],eax
  40483c:	je     404966 <Mat_VarRead@plt+0x2246>
  404842:	mov    rdi,QWORD PTR [rsp]
  404846:	call   40abc0 <Mat_VarRead@plt+0x84a0>
  40484b:	add    DWORD PTR [rsp+0x18],eax
  40484f:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404854:	lea    rsi,[rip+0x9b24]        # 40e37f <getopt_long_only@@Base+0xd9f>
  40485b:	mov    rdi,r12
  40485e:	call   402590 <strcmp@plt>
  404863:	test   eax,eax
  404865:	je     40577e <Mat_VarRead@plt+0x305e>
  40486b:	lea    rsi,[rip+0x9b1f]        # 40e391 <getopt_long_only@@Base+0xdb1>
  404872:	mov    rdi,r12
  404875:	call   402590 <strcmp@plt>
  40487a:	test   eax,eax
  40487c:	je     405760 <Mat_VarRead@plt+0x3040>
  404882:	lea    rsi,[rip+0x9b1c]        # 40e3a5 <getopt_long_only@@Base+0xdc5>
  404889:	mov    rdi,r12
  40488c:	call   402590 <strcmp@plt>
  404891:	test   eax,eax
  404893:	je     4055ad <Mat_VarRead@plt+0x2e8d>
  404899:	lea    rsi,[rip+0x9b73]        # 40e413 <getopt_long_only@@Base+0xe33>
  4048a0:	mov    rdi,r12
  4048a3:	call   402590 <strcmp@plt>
  4048a8:	test   eax,eax
  4048aa:	je     40533b <Mat_VarRead@plt+0x2c1b>
  4048b0:	lea    rsi,[rip+0x9b70]        # 40e427 <getopt_long_only@@Base+0xe47>
  4048b7:	mov    rdi,r12
  4048ba:	call   402590 <strcmp@plt>
  4048bf:	test   eax,eax
  4048c1:	je     404f99 <Mat_VarRead@plt+0x2879>
  4048c7:	lea    rsi,[rip+0x9b6e]        # 40e43c <getopt_long_only@@Base+0xe5c>
  4048ce:	mov    rdi,r12
  4048d1:	call   402590 <strcmp@plt>
  4048d6:	test   eax,eax
  4048d8:	je     404f7b <Mat_VarRead@plt+0x285b>
  4048de:	lea    rsi,[rip+0x9b66]        # 40e44b <getopt_long_only@@Base+0xe6b>
  4048e5:	mov    rdi,r12
  4048e8:	call   402590 <strcmp@plt>
  4048ed:	mov    r14d,eax
  4048f0:	test   eax,eax
  4048f2:	je     40332c <Mat_VarRead@plt+0xc0c>
  4048f8:	lea    rsi,[rip+0x9b59]        # 40e458 <getopt_long_only@@Base+0xe78>
  4048ff:	mov    rdi,r12
  404902:	call   402590 <strcmp@plt>
  404907:	test   eax,eax
  404909:	je     404c3f <Mat_VarRead@plt+0x251f>
  40490f:	lea    rsi,[rip+0x9b55]        # 40e46b <getopt_long_only@@Base+0xe8b>
  404916:	mov    rdi,r12
  404919:	call   402590 <strcmp@plt>
  40491e:	test   eax,eax
  404920:	je     404b81 <Mat_VarRead@plt+0x2461>
  404926:	lea    rsi,[rip+0x9ca3]        # 40e5d0 <getopt_long_only@@Base+0xff0>
  40492d:	mov    rdi,r12
  404930:	call   402590 <strcmp@plt>
  404935:	test   eax,eax
  404937:	jne    404a39 <Mat_VarRead@plt+0x2319>
  40493d:	mov    ecx,DWORD PTR [rsp+0x1c]
  404941:	lea    eax,[rbp+0x1]
  404944:	sub    ecx,eax
  404946:	mov    DWORD PTR [rsp+0x10],eax
  40494a:	cmp    ecx,0x2
  40494d:	jg     404976 <Mat_VarRead@plt+0x2256>
  40494f:	lea    rdi,[rip+0xa942]        # 40f298 <getopt_long_only@@Base+0x1cb8>
  404956:	xor    eax,eax
  404958:	call   402620 <Mat_Critical@plt>
  40495d:	inc    DWORD PTR [rsp+0x18]
  404961:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404966:	lea    rax,[rip+0xa70b]        # 40f078 <getopt_long_only@@Base+0x1a98>
  40496d:	mov    QWORD PTR [rsp],rax
  404971:	jmp    404842 <Mat_VarRead@plt+0x2122>
  404976:	mov    rdi,QWORD PTR [rsp]
  40497a:	call   40ca30 <Mat_VarRead@plt+0xa310>
  40497f:	mov    rax,QWORD PTR [rsp+0x8]
  404984:	xor    esi,esi
  404986:	mov    rdi,QWORD PTR [rax+r13*1+0x8]
  40498b:	mov    r15,QWORD PTR [rax+r13*1+0x18]
  404990:	mov    r12,QWORD PTR [rax+r13*1+0x10]
  404995:	mov    DWORD PTR [rsp+0x78],0x1
  40499d:	call   402400 <Mat_Open@plt>
  4049a2:	mov    r14,rax
  4049a5:	mov    r13d,0x1
  4049ab:	test   rax,rax
  4049ae:	je     404a1c <Mat_VarRead@plt+0x22fc>
  4049b0:	mov    rsi,r12
  4049b3:	mov    rdi,rax
  4049b6:	call   402720 <Mat_VarRead@plt>
  4049bb:	mov    r12,rax
  4049be:	test   rax,rax
  4049c1:	je     404a14 <Mat_VarRead@plt+0x22f4>
  4049c3:	movsx  eax,BYTE PTR [r15]
  4049c7:	sub    eax,0x30
  4049ca:	cmp    eax,0x9
  4049cd:	ja     404a2d <Mat_VarRead@plt+0x230d>
  4049cf:	mov    edx,0xa
  4049d4:	xor    esi,esi
  4049d6:	mov    rdi,r15
  4049d9:	call   4025a0 <strtol@plt>
  4049de:	mov    DWORD PTR [rsp+0x78],eax
  4049e2:	lea    rsi,[rsp+0x78]
  4049e7:	xor    ecx,ecx
  4049e9:	mov    edx,0x2
  4049ee:	mov    rdi,r12
  4049f1:	call   402580 <Mat_VarGetStructField@plt>
  4049f6:	xor    r13d,r13d
  4049f9:	test   rax,rax
  4049fc:	sete   r13b
  404a00:	je     404a0c <Mat_VarRead@plt+0x22ec>
  404a02:	xor    esi,esi
  404a04:	mov    rdi,rax
  404a07:	call   4025e0 <Mat_VarPrint@plt>
  404a0c:	mov    rdi,r12
  404a0f:	call   4025b0 <Mat_VarFree@plt>
  404a14:	mov    rdi,r14
  404a17:	call   402610 <Mat_Close@plt>
  404a1c:	lea    eax,[rbp+0x4]
  404a1f:	add    DWORD PTR [rsp+0x18],r13d
  404a24:	mov    DWORD PTR [rsp+0x10],eax
  404a28:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404a2d:	xor    ecx,ecx
  404a2f:	mov    edx,0x1
  404a34:	mov    rsi,r15
  404a37:	jmp    4049ee <Mat_VarRead@plt+0x22ce>
  404a39:	lea    rsi,[rip+0x9b7e]        # 40e5be <getopt_long_only@@Base+0xfde>
  404a40:	mov    rdi,r12
  404a43:	call   402590 <strcmp@plt>
  404a48:	test   eax,eax
  404a4a:	je     404b24 <Mat_VarRead@plt+0x2404>
  404a50:	lea    rsi,[rip+0x9b58]        # 40e5af <getopt_long_only@@Base+0xfcf>
  404a57:	mov    rdi,r12
  404a5a:	call   402590 <strcmp@plt>
  404a5f:	test   eax,eax
  404a61:	jne    404a99 <Mat_VarRead@plt+0x2379>
  404a63:	cmp    QWORD PTR [rsp],0x0
  404a68:	jne    404a75 <Mat_VarRead@plt+0x2355>
  404a6a:	lea    rax,[rip+0x9786]        # 40e1f7 <getopt_long_only@@Base+0xc17>
  404a71:	mov    QWORD PTR [rsp],rax
  404a75:	mov    rax,QWORD PTR [rsp+0x8]
  404a7a:	mov    edx,DWORD PTR [rsp+0x14]
  404a7e:	mov    rsi,QWORD PTR [rax+r13*1+0x10]
  404a83:	mov    rdi,QWORD PTR [rax+r13*1+0x8]
  404a88:	call   40b490 <Mat_VarRead@plt+0x8d70>
  404a8d:	lea    eax,[rbp+0x3]
  404a90:	mov    DWORD PTR [rsp+0x10],eax
  404a94:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404a99:	lea    rsi,[rip+0x9daa]        # 40e84a <getopt_long_only@@Base+0x126a>
  404aa0:	mov    rdi,r12
  404aa3:	call   402590 <strcmp@plt>
  404aa8:	test   eax,eax
  404aaa:	jne    404adb <Mat_VarRead@plt+0x23bb>
  404aac:	lea    eax,[rbp+0x1]
  404aaf:	cmp    QWORD PTR [rsp],0x0
  404ab4:	mov    DWORD PTR [rsp+0x10],eax
  404ab8:	jne    404ac5 <Mat_VarRead@plt+0x23a5>
  404aba:	lea    rax,[rip+0x973e]        # 40e1ff <getopt_long_only@@Base+0xc1f>
  404ac1:	mov    QWORD PTR [rsp],rax
  404ac5:	mov    rsi,QWORD PTR [rsp]
  404ac9:	mov    edi,DWORD PTR [rsp+0x14]
  404acd:	call   406cb0 <Mat_VarRead@plt+0x4590>
  404ad2:	add    DWORD PTR [rsp+0x18],eax
  404ad6:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404adb:	lea    rsi,[rip+0x9d4d]        # 40e82f <getopt_long_only@@Base+0x124f>
  404ae2:	mov    rdi,r12
  404ae5:	call   402590 <strcmp@plt>
  404aea:	test   eax,eax
  404aec:	jne    404b9f <Mat_VarRead@plt+0x247f>
  404af2:	lea    eax,[rbp+0x1]
  404af5:	mov    DWORD PTR [rsp+0x10],eax
  404af9:	mov    rax,QWORD PTR [rsp]
  404afd:	lea    rcx,[rip+0x9711]        # 40e215 <getopt_long_only@@Base+0xc35>
  404b04:	test   rax,rax
  404b07:	cmovne rcx,rax
  404b0b:	mov    edi,DWORD PTR [rsp+0x14]
  404b0f:	mov    rsi,rcx
  404b12:	mov    QWORD PTR [rsp],rcx
  404b16:	call   407770 <Mat_VarRead@plt+0x5050>
  404b1b:	add    DWORD PTR [rsp+0x18],eax
  404b1f:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404b24:	mov    r14,QWORD PTR [rsp+0x8]
  404b29:	xor    esi,esi
  404b2b:	mov    rdi,QWORD PTR [r14+r13*1+0x8]
  404b30:	call   402400 <Mat_Open@plt>
  404b35:	mov    r12,rax
  404b38:	lea    eax,[rbp+0x3]
  404b3b:	mov    DWORD PTR [rsp+0x10],eax
  404b3f:	test   r12,r12
  404b42:	je     404b78 <Mat_VarRead@plt+0x2458>
  404b44:	mov    rsi,QWORD PTR [r14+r13*1+0x10]
  404b49:	mov    rdi,r12
  404b4c:	call   402500 <Mat_VarReadInfo@plt>
  404b51:	mov    rbp,rax
  404b54:	test   rax,rax
  404b57:	je     404b6b <Mat_VarRead@plt+0x244b>
  404b59:	mov    rdi,rax
  404b5c:	xor    esi,esi
  404b5e:	call   4025e0 <Mat_VarPrint@plt>
  404b63:	mov    rdi,rbp
  404b66:	call   4025b0 <Mat_VarFree@plt>
  404b6b:	mov    rdi,r12
  404b6e:	call   402610 <Mat_Close@plt>
  404b73:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404b78:	inc    DWORD PTR [rsp+0x18]
  404b7c:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404b81:	mov    rdi,QWORD PTR [rsp]
  404b85:	lea    eax,[rbp+0x1]
  404b88:	mov    DWORD PTR [rsp+0x10],eax
  404b8c:	call   40ca30 <Mat_VarRead@plt+0xa310>
  404b91:	call   40b2e0 <Mat_VarRead@plt+0x8bc0>
  404b96:	add    DWORD PTR [rsp+0x18],eax
  404b9a:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404b9f:	lea    rsi,[rip+0x9914]        # 40e4ba <getopt_long_only@@Base+0xeda>
  404ba6:	mov    rdi,r12
  404ba9:	call   402590 <strcmp@plt>
  404bae:	test   eax,eax
  404bb0:	je     4059fe <Mat_VarRead@plt+0x32de>
  404bb6:	lea    rsi,[rip+0x992f]        # 40e4ec <getopt_long_only@@Base+0xf0c>
  404bbd:	mov    rdi,r12
  404bc0:	call   402590 <strcmp@plt>
  404bc5:	test   eax,eax
  404bc7:	je     405964 <Mat_VarRead@plt+0x3244>
  404bcd:	lea    rsi,[rip+0x98bb]        # 40e48f <getopt_long_only@@Base+0xeaf>
  404bd4:	mov    rdi,r12
  404bd7:	call   402590 <strcmp@plt>
  404bdc:	test   eax,eax
  404bde:	jne    405949 <Mat_VarRead@plt+0x3229>
  404be4:	mov    r14,QWORD PTR [rsp+0x8]
  404be9:	lea    eax,[rbp+0x2]
  404bec:	mov    rdi,QWORD PTR [r14+r13*1+0x8]
  404bf1:	xor    esi,esi
  404bf3:	mov    DWORD PTR [rsp+0x10],eax
  404bf7:	call   402400 <Mat_Open@plt>
  404bfc:	mov    r12,rax
  404bff:	test   rax,rax
  404c02:	je     402e04 <Mat_VarRead@plt+0x6e4>
  404c08:	mov    rsi,QWORD PTR [r14+r13*1+0x10]
  404c0d:	lea    eax,[rbp+0x3]
  404c10:	mov    rdi,r12
  404c13:	mov    DWORD PTR [rsp+0x10],eax
  404c17:	call   402720 <Mat_VarRead@plt>
  404c1c:	mov    rbp,rax
  404c1f:	test   rax,rax
  404c22:	je     404b6b <Mat_VarRead@plt+0x244b>
  404c28:	cmp    DWORD PTR [rax+0x8],0x3
  404c2c:	je     4058b7 <Mat_VarRead@plt+0x3197>
  404c32:	mov    rdi,rbp
  404c35:	call   4025b0 <Mat_VarFree@plt>
  404c3a:	jmp    404b6b <Mat_VarRead@plt+0x244b>
  404c3f:	mov    rdi,QWORD PTR [rsp]
  404c43:	lea    eax,[rbp+0x1]
  404c46:	mov    DWORD PTR [rsp+0x10],eax
  404c4a:	call   40ca30 <Mat_VarRead@plt+0xa310>
  404c4f:	mov    rax,QWORD PTR [rip+0xdaca]        # 412720 <getopt_long_only@@Base+0x5140>
  404c56:	mov    QWORD PTR [rsp+0xc0],0x0
  404c62:	mov    QWORD PTR [rsp+0xc8],rax
  404c6a:	mov    rax,QWORD PTR [rip+0xdc5f]        # 4128d0 <getopt_long_only@@Base+0x52f0>
  404c71:	mov    QWORD PTR [rsp+0xa0],0x3
  404c7d:	mov    QWORD PTR [rsp+0xd0],rax
  404c85:	mov    rax,QWORD PTR [rip+0xdc4c]        # 4128d8 <getopt_long_only@@Base+0x52f8>
  404c8c:	mov    QWORD PTR [rsp+0xa8],0x4
  404c98:	mov    QWORD PTR [rsp+0xd8],rax
  404ca0:	mov    rax,QWORD PTR [rip+0xdc39]        # 4128e0 <getopt_long_only@@Base+0x5300>
  404ca7:	lea    r13,[rsp+0xa0]
  404caf:	mov    QWORD PTR [rsp+0x130],rax
  404cb7:	mov    rax,QWORD PTR [rip+0xda6a]        # 412728 <getopt_long_only@@Base+0x5148>
  404cbe:	mov    r8,r13
  404cc1:	mov    QWORD PTR [rsp+0x138],rax
  404cc9:	mov    rax,QWORD PTR [rip+0xdc18]        # 4128e8 <getopt_long_only@@Base+0x5308>
  404cd0:	lea    rdi,[rip+0x934f]        # 40e026 <getopt_long_only@@Base+0xa46>
  404cd7:	mov    QWORD PTR [rsp+0x140],rax
  404cdf:	mov    rax,QWORD PTR [rip+0xda4a]        # 412730 <getopt_long_only@@Base+0x5150>
  404ce6:	xor    r9d,r9d
  404ce9:	mov    QWORD PTR [rsp+0x148],rax
  404cf1:	push   rsi
  404cf2:	mov    ecx,0x2
  404cf7:	mov    edx,0x15
  404cfc:	push   0x0
  404cfe:	mov    esi,0x1
  404d03:	mov    r15,rbx
  404d06:	call   402450 <Mat_VarCreate@plt>
  404d0b:	lea    r14,[rsp+0x140]
  404d13:	lea    r10,[rsp+0xd0]
  404d1b:	mov    QWORD PTR [rsp+0xb0],0x1
  404d27:	mov    QWORD PTR [rsp+0xb8],0x1
  404d33:	pop    rdi
  404d34:	pop    r8
  404d36:	mov    QWORD PTR [rsp+0x20],rbx
  404d3b:	mov    rbp,rax
  404d3e:	xor    r12d,r12d
  404d41:	mov    rbx,r10
  404d44:	push   rax
  404d45:	mov    r9,rbx
  404d48:	mov    r8,r13
  404d4b:	push   0x1
  404d4d:	mov    ecx,0x2
  404d52:	mov    edx,0x9
  404d57:	mov    esi,0x6
  404d5c:	xor    edi,edi
  404d5e:	call   402450 <Mat_VarCreate@plt>
  404d63:	mov    rdx,rax
  404d66:	mov    esi,r12d
  404d69:	mov    rdi,rbp
  404d6c:	call   402520 <Mat_VarSetCell@plt>
  404d71:	mov    r9,r14
  404d74:	mov    r8,r13
  404d77:	mov    ecx,0x2
  404d7c:	mov    edx,0x9
  404d81:	mov    esi,0x6
  404d86:	xor    edi,edi
  404d88:	mov    DWORD PTR [rsp],0x1
  404d8f:	call   402450 <Mat_VarCreate@plt>
  404d94:	mov    rdx,rax
  404d97:	lea    esi,[r12+0x1]
  404d9c:	mov    rdi,rbp
  404d9f:	call   402520 <Mat_VarSetCell@plt>
  404da4:	mov    QWORD PTR [r15],rbx
  404da7:	mov    QWORD PTR [r15+0x8],r14
  404dab:	mov    r9,r15
  404dae:	mov    ecx,0x2
  404db3:	mov    r8,r13
  404db6:	mov    edx,0x9
  404dbb:	mov    esi,0x6
  404dc0:	xor    edi,edi
  404dc2:	mov    DWORD PTR [rsp],0x801
  404dc9:	call   402450 <Mat_VarCreate@plt>
  404dce:	mov    rdx,rax
  404dd1:	lea    esi,[r12+0x2]
  404dd6:	mov    rdi,rbp
  404dd9:	call   402520 <Mat_VarSetCell@plt>
  404dde:	add    r12d,0x3
  404de2:	pop    rdx
  404de3:	add    rbx,0x8
  404de7:	add    r14,0x8
  404deb:	add    r15,0x10
  404def:	pop    rcx
  404df0:	cmp    r12d,0xc
  404df4:	jne    404d44 <Mat_VarRead@plt+0x2624>
  404dfa:	mov    ecx,0x4
  404dff:	mov    edx,0x3
  404e04:	xor    esi,esi
  404e06:	mov    rdi,rbp
  404e09:	mov    rbx,QWORD PTR [rsp+0x20]
  404e0e:	call   4026a0 <Mat_VarGetCellsLinear@plt>
  404e13:	mov    r13,rax
  404e16:	test   rax,rax
  404e19:	je     404e3e <Mat_VarRead@plt+0x271e>
  404e1b:	xor    r12d,r12d
  404e1e:	mov    rdi,QWORD PTR [r13+r12*8+0x0]
  404e23:	mov    esi,0x1
  404e28:	inc    r12
  404e2b:	call   4025e0 <Mat_VarPrint@plt>
  404e30:	cmp    r12,0x4
  404e34:	jne    404e1e <Mat_VarRead@plt+0x26fe>
  404e36:	mov    rdi,r13
  404e39:	call   4023d0 <free@plt>
  404e3e:	mov    ecx,0x4
  404e43:	mov    edx,0x3
  404e48:	mov    esi,0x1
  404e4d:	mov    rdi,rbp
  404e50:	call   4026a0 <Mat_VarGetCellsLinear@plt>
  404e55:	mov    r13,rax
  404e58:	test   rax,rax
  404e5b:	je     404e80 <Mat_VarRead@plt+0x2760>
  404e5d:	xor    r12d,r12d
  404e60:	mov    rdi,QWORD PTR [r13+r12*8+0x0]
  404e65:	mov    esi,0x1
  404e6a:	inc    r12
  404e6d:	call   4025e0 <Mat_VarPrint@plt>
  404e72:	cmp    r12,0x4
  404e76:	jne    404e60 <Mat_VarRead@plt+0x2740>
  404e78:	mov    rdi,r13
  404e7b:	call   4023d0 <free@plt>
  404e80:	mov    ecx,0x4
  404e85:	mov    edx,0x3
  404e8a:	mov    esi,0x2
  404e8f:	mov    rdi,rbp
  404e92:	call   4026a0 <Mat_VarGetCellsLinear@plt>
  404e97:	mov    r13,rax
  404e9a:	test   rax,rax
  404e9d:	je     404ec2 <Mat_VarRead@plt+0x27a2>
  404e9f:	xor    r12d,r12d
  404ea2:	mov    rdi,QWORD PTR [r13+r12*8+0x0]
  404ea7:	mov    esi,0x1
  404eac:	inc    r12
  404eaf:	call   4025e0 <Mat_VarPrint@plt>
  404eb4:	cmp    r12,0x4
  404eb8:	jne    404ea2 <Mat_VarRead@plt+0x2782>
  404eba:	mov    rdi,r13
  404ebd:	call   4023d0 <free@plt>
  404ec2:	mov    ecx,0x6
  404ec7:	mov    edx,0x1
  404ecc:	mov    esi,0x3
  404ed1:	mov    rdi,rbp
  404ed4:	call   4026a0 <Mat_VarGetCellsLinear@plt>
  404ed9:	mov    r13,rax
  404edc:	test   rax,rax
  404edf:	je     404f04 <Mat_VarRead@plt+0x27e4>
  404ee1:	xor    r12d,r12d
  404ee4:	mov    rdi,QWORD PTR [r13+r12*8+0x0]
  404ee9:	mov    esi,0x1
  404eee:	inc    r12
  404ef1:	call   4025e0 <Mat_VarPrint@plt>
  404ef6:	cmp    r12,0x6
  404efa:	jne    404ee4 <Mat_VarRead@plt+0x27c4>
  404efc:	mov    rdi,r13
  404eff:	call   4023d0 <free@plt>
  404f04:	mov    rdi,rbp
  404f07:	call   4025b0 <Mat_VarFree@plt>
  404f0c:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404f11:	mov    rdi,r13
  404f14:	call   4025b0 <Mat_VarFree@plt>
  404f19:	mov    rdx,QWORD PTR [rsp+0x58]
  404f1e:	mov    esi,0x2
  404f23:	mov    rdi,rbp
  404f26:	call   402520 <Mat_VarSetCell@plt>
  404f2b:	cmp    r15,rax
  404f2e:	jne    403663 <Mat_VarRead@plt+0xf43>
  404f34:	mov    rdi,r15
  404f37:	call   4025b0 <Mat_VarFree@plt>
  404f3c:	mov    rdx,r12
  404f3f:	mov    esi,0x4
  404f44:	mov    rdi,rbp
  404f47:	call   402520 <Mat_VarSetCell@plt>
  404f4c:	cmp    QWORD PTR [rsp+0x20],rax
  404f51:	jne    403663 <Mat_VarRead@plt+0xf43>
  404f57:	mov    rdi,QWORD PTR [rsp+0x20]
  404f5c:	call   4025b0 <Mat_VarFree@plt>
  404f61:	mov    rdi,rbp
  404f64:	mov    esi,0x1
  404f69:	call   4025e0 <Mat_VarPrint@plt>
  404f6e:	mov    rdi,rbp
  404f71:	call   4025b0 <Mat_VarFree@plt>
  404f76:	jmp    40308c <Mat_VarRead@plt+0x96c>
  404f7b:	mov    rdi,QWORD PTR [rsp]
  404f7f:	lea    eax,[rbp+0x1]
  404f82:	mov    DWORD PTR [rsp+0x10],eax
  404f86:	call   40ca30 <Mat_VarRead@plt+0xa310>
  404f8b:	call   40b0b0 <Mat_VarRead@plt+0x8990>
  404f90:	add    DWORD PTR [rsp+0x18],eax
  404f94:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  404f99:	mov    rdi,QWORD PTR [rsp]
  404f9d:	lea    eax,[rbp+0x1]
  404fa0:	mov    DWORD PTR [rsp+0x10],eax
  404fa4:	call   40ca30 <Mat_VarRead@plt+0xa310>
  404fa9:	mov    rax,QWORD PTR [rip+0xd770]        # 412720 <getopt_long_only@@Base+0x5140>
  404fb0:	mov    QWORD PTR [rsp+0xc0],0x0
  404fbc:	mov    QWORD PTR [rsp+0xc8],rax
  404fc4:	mov    rax,QWORD PTR [rip+0xd905]        # 4128d0 <getopt_long_only@@Base+0x52f0>
  404fcb:	lea    rbp,[rip+0x9497]        # 40e469 <getopt_long_only@@Base+0xe89>
  404fd2:	mov    QWORD PTR [rsp+0xd0],rax
  404fda:	mov    rax,QWORD PTR [rip+0xd8f7]        # 4128d8 <getopt_long_only@@Base+0x52f8>
  404fe1:	lea    rcx,[rsp+0xa0]
  404fe9:	mov    QWORD PTR [rsp+0xd8],rax
  404ff1:	mov    rax,QWORD PTR [rip+0xd8e8]        # 4128e0 <getopt_long_only@@Base+0x5300>
  404ff8:	mov    r8d,0x3
  404ffe:	mov    QWORD PTR [rsp+0xe0],rax
  405006:	mov    rax,QWORD PTR [rip+0xd71b]        # 412728 <getopt_long_only@@Base+0x5148>
  40500d:	mov    esi,0x2
  405012:	mov    QWORD PTR [rsp+0xe8],rax
  40501a:	mov    rax,QWORD PTR [rip+0xd8c7]        # 4128e8 <getopt_long_only@@Base+0x5308>
  405021:	lea    rdi,[rip+0x8ffe]        # 40e026 <getopt_long_only@@Base+0xa46>
  405028:	mov    QWORD PTR [rsp+0xf0],rax
  405030:	mov    rax,QWORD PTR [rip+0xd6f9]        # 412730 <getopt_long_only@@Base+0x5150>
  405037:	mov    r13,rbx
  40503a:	mov    QWORD PTR [rsp+0xf8],rax
  405042:	mov    rax,QWORD PTR [rip+0xd6ef]        # 412738 <getopt_long_only@@Base+0x5158>
  405049:	xor    r14d,r14d
  40504c:	mov    QWORD PTR [rsp+0x100],rax
  405054:	mov    rax,QWORD PTR [rip+0xd6e5]        # 412740 <getopt_long_only@@Base+0x5160>
  40505b:	lea    r12,[rsp+0x130]
  405063:	mov    QWORD PTR [rsp+0x108],rax
  40506b:	mov    rax,QWORD PTR [rip+0xd87e]        # 4128f0 <getopt_long_only@@Base+0x5310>
  405072:	mov    QWORD PTR [rsp+0x110],rax
  40507a:	mov    rax,QWORD PTR [rip+0xd6c7]        # 412748 <getopt_long_only@@Base+0x5168>
  405081:	mov    QWORD PTR [rsp+0x118],rax
  405089:	mov    rax,QWORD PTR [rip+0xd868]        # 4128f8 <getopt_long_only@@Base+0x5318>
  405090:	mov    QWORD PTR [rsp+0x130],rax
  405098:	mov    rax,QWORD PTR [rip+0xd861]        # 412900 <getopt_long_only@@Base+0x5320>
  40509f:	mov    QWORD PTR [rsp+0x138],rax
  4050a7:	mov    rax,QWORD PTR [rip+0xd85a]        # 412908 <getopt_long_only@@Base+0x5328>
  4050ae:	mov    QWORD PTR [rsp+0x140],rax
  4050b6:	mov    rax,QWORD PTR [rip+0xd693]        # 412750 <getopt_long_only@@Base+0x5170>
  4050bd:	mov    QWORD PTR [rsp+0x148],rax
  4050c5:	mov    rax,QWORD PTR [rip+0xd844]        # 412910 <getopt_long_only@@Base+0x5330>
  4050cc:	mov    QWORD PTR [rsp+0x150],rax
  4050d4:	mov    rax,QWORD PTR [rip+0xd67d]        # 412758 <getopt_long_only@@Base+0x5178>
  4050db:	mov    QWORD PTR [rsp+0xa0],rbp
  4050e3:	mov    QWORD PTR [rsp+0x158],rax
  4050eb:	mov    rax,QWORD PTR [rip+0xd66e]        # 412760 <getopt_long_only@@Base+0x5180>
  4050f2:	mov    QWORD PTR [rsp+0x90],0x3
  4050fe:	mov    QWORD PTR [rsp+0x160],rax
  405106:	mov    rax,QWORD PTR [rip+0xd65b]        # 412768 <getopt_long_only@@Base+0x5188>
  40510d:	mov    QWORD PTR [rsp+0x98],0x4
  405119:	mov    QWORD PTR [rsp+0x168],rax
  405121:	mov    rax,QWORD PTR [rip+0xd7f0]        # 412918 <getopt_long_only@@Base+0x5338>
  405128:	mov    QWORD PTR [rsp+0x170],rax
  405130:	mov    rax,QWORD PTR [rip+0xd639]        # 412770 <getopt_long_only@@Base+0x5190>
  405137:	mov    QWORD PTR [rsp+0x178],rax
  40513f:	mov    rax,QWORD PTR [rip+0xd7da]        # 412920 <getopt_long_only@@Base+0x5340>
  405146:	mov    QWORD PTR [rsp+0x180],rax
  40514e:	mov    rax,QWORD PTR [rip+0xd7d3]        # 412928 <getopt_long_only@@Base+0x5348>
  405155:	mov    QWORD PTR [rsp+0x188],rax
  40515d:	lea    rax,[rip+0x976b]        # 40e8cf <getopt_long_only@@Base+0x12ef>
  405164:	mov    QWORD PTR [rsp+0xa8],rax
  40516c:	lea    rax,[rip+0x915b]        # 40e2ce <getopt_long_only@@Base+0xcee>
  405173:	mov    QWORD PTR [rsp+0xb0],rax
  40517b:	lea    rax,[rsp+0x90]
  405183:	mov    rdx,rax
  405186:	mov    QWORD PTR [rsp+0x20],rax
  40518b:	call   402680 <Mat_VarCreateStruct@plt>
  405190:	mov    QWORD PTR [rsp+0x90],0x1
  40519c:	mov    QWORD PTR [rsp+0x98],0x1
  4051a8:	mov    QWORD PTR [rsp+0x28],rbp
  4051ad:	mov    QWORD PTR [rsp+0x38],rbx
  4051b2:	mov    r15,rax
  4051b5:	lea    r10,[rsp+0xc0]
  4051bd:	mov    QWORD PTR [rsp+0x40],r10
  4051c2:	push   rax
  4051c3:	lea    rbp,[r14*8+0x0]
  4051cb:	lea    rbx,[r10+rbp*1]
  4051cf:	push   0x1
  4051d1:	mov    r9,rbx
  4051d4:	xor    edi,edi
  4051d6:	mov    r8,QWORD PTR [rsp+0x30]
  4051db:	mov    ecx,0x2
  4051e0:	mov    edx,0x9
  4051e5:	mov    esi,0x6
  4051ea:	call   402450 <Mat_VarCreate@plt>
  4051ef:	mov    rsi,QWORD PTR [rsp+0x38]
  4051f4:	mov    rdx,r14
  4051f7:	mov    rcx,rax
  4051fa:	mov    rdi,r15
  4051fd:	call   402700 <Mat_VarSetStructFieldByName@plt>
  405202:	add    rbp,r12
  405205:	mov    r8,QWORD PTR [rsp+0x30]
  40520a:	mov    r9,rbp
  40520d:	xor    edi,edi
  40520f:	mov    ecx,0x2
  405214:	mov    edx,0x9
  405219:	mov    esi,0x6
  40521e:	mov    DWORD PTR [rsp],0x1
  405225:	call   402450 <Mat_VarCreate@plt>
  40522a:	mov    rcx,rax
  40522d:	mov    rdx,r14
  405230:	lea    rsi,[rip+0x9698]        # 40e8cf <getopt_long_only@@Base+0x12ef>
  405237:	mov    rdi,r15
  40523a:	call   402700 <Mat_VarSetStructFieldByName@plt>
  40523f:	mov    QWORD PTR [r13+0x0],rbx
  405243:	mov    QWORD PTR [r13+0x8],rbp
  405247:	mov    r8,QWORD PTR [rsp+0x30]
  40524c:	mov    r9,r13
  40524f:	xor    edi,edi
  405251:	mov    ecx,0x2
  405256:	mov    edx,0x9
  40525b:	mov    esi,0x6
  405260:	mov    DWORD PTR [rsp],0x801
  405267:	call   402450 <Mat_VarCreate@plt>
  40526c:	mov    rcx,rax
  40526f:	mov    rdx,r14
  405272:	lea    rsi,[rip+0x9055]        # 40e2ce <getopt_long_only@@Base+0xcee>
  405279:	mov    rdi,r15
  40527c:	call   402700 <Mat_VarSetStructFieldByName@plt>
  405281:	inc    r14
  405284:	pop    rax
  405285:	add    r13,0x10
  405289:	pop    rdx
  40528a:	cmp    r14,0xc
  40528e:	mov    r10,QWORD PTR [rsp+0x40]
  405293:	jne    4051bd <Mat_VarRead@plt+0x2a9d>
  405299:	xor    r8d,r8d
  40529c:	mov    ecx,0x4
  4052a1:	mov    edx,0x3
  4052a6:	mov    rdi,r15
  4052a9:	mov    esi,0x1
  4052ae:	mov    rbx,QWORD PTR [rsp+0x38]
  4052b3:	call   402650 <Mat_VarGetStructsLinear@plt>
  4052b8:	mov    rbp,rax
  4052bb:	mov    rdi,rax
  4052be:	mov    esi,0x1
  4052c3:	call   4025e0 <Mat_VarPrint@plt>
  4052c8:	mov    rdi,rbp
  4052cb:	call   4025b0 <Mat_VarFree@plt>
  4052d0:	xor    r8d,r8d
  4052d3:	mov    ecx,0x3
  4052d8:	mov    edx,0x1
  4052dd:	xor    esi,esi
  4052df:	mov    rdi,r15
  4052e2:	call   402650 <Mat_VarGetStructsLinear@plt>
  4052e7:	mov    rbp,rax
  4052ea:	mov    rdi,rax
  4052ed:	mov    esi,0x1
  4052f2:	call   4025e0 <Mat_VarPrint@plt>
  4052f7:	mov    rdi,rbp
  4052fa:	call   4025b0 <Mat_VarFree@plt>
  4052ff:	xor    r8d,r8d
  405302:	mov    ecx,0x3
  405307:	mov    edx,0x4
  40530c:	xor    esi,esi
  40530e:	mov    rdi,r15
  405311:	call   402650 <Mat_VarGetStructsLinear@plt>
  405316:	mov    rbp,rax
  405319:	mov    rdi,rax
  40531c:	mov    esi,0x1
  405321:	call   4025e0 <Mat_VarPrint@plt>
  405326:	mov    rdi,rbp
  405329:	call   4025b0 <Mat_VarFree@plt>
  40532e:	mov    rdi,r15
  405331:	call   4025b0 <Mat_VarFree@plt>
  405336:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  40533b:	mov    rdi,QWORD PTR [rsp]
  40533f:	lea    eax,[rbp+0x1]
  405342:	mov    DWORD PTR [rsp+0x10],eax
  405346:	call   40ca30 <Mat_VarRead@plt+0xa310>
  40534b:	mov    rax,QWORD PTR [rip+0xd3ce]        # 412720 <getopt_long_only@@Base+0x5140>
  405352:	lea    rbp,[rsp+0x90]
  40535a:	mov    QWORD PTR [rsp+0xa8],rax
  405362:	mov    rax,QWORD PTR [rip+0xd567]        # 4128d0 <getopt_long_only@@Base+0x52f0>
  405369:	xor    ecx,ecx
  40536b:	mov    QWORD PTR [rsp+0x130],rax
  405373:	mov    rax,QWORD PTR [rip+0xd55e]        # 4128d8 <getopt_long_only@@Base+0x52f8>
  40537a:	mov    rdx,rbp
  40537d:	mov    QWORD PTR [rsp+0x138],rax
  405385:	mov    rax,QWORD PTR [rip+0xd554]        # 4128e0 <getopt_long_only@@Base+0x5300>
  40538c:	xor    r8d,r8d
  40538f:	mov    QWORD PTR [rsp+0x140],rax
  405397:	mov    rax,QWORD PTR [rip+0xd38a]        # 412728 <getopt_long_only@@Base+0x5148>
  40539e:	mov    esi,0x2
  4053a3:	mov    QWORD PTR [rsp+0x200],rax
  4053ab:	mov    rax,QWORD PTR [rip+0xd536]        # 4128e8 <getopt_long_only@@Base+0x5308>
  4053b2:	lea    rdi,[rip+0x8c6d]        # 40e026 <getopt_long_only@@Base+0xa46>
  4053b9:	mov    QWORD PTR [rsp+0x208],rax
  4053c1:	mov    rax,QWORD PTR [rip+0xd368]        # 412730 <getopt_long_only@@Base+0x5150>
  4053c8:	mov    QWORD PTR [rsp+0xa0],0x0
  4053d4:	mov    QWORD PTR [rsp+0x210],rax
  4053dc:	mov    rax,QWORD PTR [rip+0xd355]        # 412738 <getopt_long_only@@Base+0x5158>
  4053e3:	mov    QWORD PTR [rsp+0x90],0x2
  4053ef:	mov    QWORD PTR [rsp+0xc0],rax
  4053f7:	mov    rax,QWORD PTR [rip+0xd342]        # 412740 <getopt_long_only@@Base+0x5160>
  4053fe:	mov    QWORD PTR [rsp+0x98],0x1
  40540a:	mov    QWORD PTR [rsp+0xc8],rax
  405412:	call   402680 <Mat_VarCreateStruct@plt>
  405417:	mov    QWORD PTR [rsp+0x90],0x2
  405423:	mov    QWORD PTR [rsp+0x98],0x1
  40542f:	push   rcx
  405430:	mov    r8,rbp
  405433:	mov    ecx,0x2
  405438:	push   0x1
  40543a:	mov    edx,0x9
  40543f:	mov    esi,0x6
  405444:	lea    r9,[rsp+0xb0]
  40544c:	xor    edi,edi
  40544e:	mov    r12,rax
  405451:	call   402450 <Mat_VarCreate@plt>
  405456:	lea    r9,[rsp+0x140]
  40545e:	mov    r8,rbp
  405461:	mov    ecx,0x2
  405466:	mov    edx,0x9
  40546b:	mov    esi,0x6
  405470:	xor    edi,edi
  405472:	mov    DWORD PTR [rsp],0x1
  405479:	mov    r13,rax
  40547c:	mov    QWORD PTR [rsp+0xa0],0x3
  405488:	mov    QWORD PTR [rsp+0xa8],0x1
  405494:	call   402450 <Mat_VarCreate@plt>
  405499:	mov    r8,rbp
  40549c:	mov    r9,rbx
  40549f:	mov    ecx,0x2
  4054a4:	mov    edx,0x9
  4054a9:	mov    esi,0x6
  4054ae:	xor    edi,edi
  4054b0:	mov    DWORD PTR [rsp],0x1
  4054b7:	mov    r15,rax
  4054ba:	mov    QWORD PTR [rsp+0xa0],0x1
  4054c6:	mov    QWORD PTR [rsp+0xa8],0x3
  4054d2:	call   402450 <Mat_VarCreate@plt>
  4054d7:	lea    r9,[rsp+0xd0]
  4054df:	mov    r8,rbp
  4054e2:	mov    ecx,0x2
  4054e7:	mov    edx,0x9
  4054ec:	mov    esi,0x6
  4054f1:	xor    edi,edi
  4054f3:	mov    r14,rax
  4054f6:	mov    QWORD PTR [rsp+0xa0],0x1
  405502:	mov    QWORD PTR [rsp+0xa8],0x2
  40550e:	mov    DWORD PTR [rsp],0x1
  405515:	call   402450 <Mat_VarCreate@plt>
  40551a:	lea    rsi,[rip+0x8ae8]        # 40e009 <getopt_long_only@@Base+0xa29>
  405521:	mov    rdi,r12
  405524:	mov    rbp,rax
  405527:	call   402430 <Mat_VarAddStructField@plt>
  40552c:	mov    rcx,r13
  40552f:	xor    edx,edx
  405531:	lea    rsi,[rip+0x8ad1]        # 40e009 <getopt_long_only@@Base+0xa29>
  405538:	mov    rdi,r12
  40553b:	call   402700 <Mat_VarSetStructFieldByName@plt>
  405540:	mov    rcx,r14
  405543:	mov    edx,0x1
  405548:	lea    rsi,[rip+0x8aba]        # 40e009 <getopt_long_only@@Base+0xa29>
  40554f:	mov    rdi,r12
  405552:	call   402700 <Mat_VarSetStructFieldByName@plt>
  405557:	lea    rsi,[rip+0x8ab2]        # 40e010 <getopt_long_only@@Base+0xa30>
  40555e:	mov    rdi,r12
  405561:	call   402430 <Mat_VarAddStructField@plt>
  405566:	mov    rcx,r15
  405569:	xor    edx,edx
  40556b:	lea    rsi,[rip+0x8a9e]        # 40e010 <getopt_long_only@@Base+0xa30>
  405572:	mov    rdi,r12
  405575:	call   402700 <Mat_VarSetStructFieldByName@plt>
  40557a:	mov    rcx,rbp
  40557d:	mov    edx,0x1
  405582:	lea    rsi,[rip+0x8a87]        # 40e010 <getopt_long_only@@Base+0xa30>
  405589:	mov    rdi,r12
  40558c:	call   402700 <Mat_VarSetStructFieldByName@plt>
  405591:	mov    esi,0x1
  405596:	mov    rdi,r12
  405599:	call   4025e0 <Mat_VarPrint@plt>
  40559e:	mov    rdi,r12
  4055a1:	call   4025b0 <Mat_VarFree@plt>
  4055a6:	pop    rsi
  4055a7:	pop    rdi
  4055a8:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  4055ad:	mov    rdi,QWORD PTR [rsp]
  4055b1:	lea    eax,[rbp+0x1]
  4055b4:	mov    DWORD PTR [rsp+0x10],eax
  4055b8:	call   40ca30 <Mat_VarRead@plt+0xa310>
  4055bd:	lea    rax,[rip+0x8a45]        # 40e009 <getopt_long_only@@Base+0xa29>
  4055c4:	mov    QWORD PTR [rsp+0x200],rax
  4055cc:	lea    rax,[rip+0x8a3d]        # 40e010 <getopt_long_only@@Base+0xa30>
  4055d3:	mov    QWORD PTR [rsp+0x208],rax
  4055db:	lea    r12,[rsp+0x130]
  4055e3:	lea    rax,[rip+0x8a4c]        # 40e036 <getopt_long_only@@Base+0xa56>
  4055ea:	mov    r8d,0x4
  4055f0:	mov    rcx,rbx
  4055f3:	mov    rdx,r12
  4055f6:	mov    esi,0x2
  4055fb:	mov    QWORD PTR [rsp+0x210],rax
  405603:	lea    rdi,[rip+0x8a1c]        # 40e026 <getopt_long_only@@Base+0xa46>
  40560a:	lea    rax,[rip+0x8dad]        # 40e3be <getopt_long_only@@Base+0xdde>
  405611:	mov    QWORD PTR [rsp+0x218],rax
  405619:	mov    QWORD PTR [rsp+0x130],0x2
  405625:	mov    QWORD PTR [rsp+0x138],0x1
  405631:	call   402680 <Mat_VarCreateStruct@plt>
  405636:	mov    rbp,rax
  405639:	mov    rdi,rax
  40563c:	call   4023b0 <Mat_VarGetNumberOfFields@plt>
  405641:	mov    rdi,rbp
  405644:	mov    r14d,eax
  405647:	call   402560 <Mat_VarGetStructFieldnames@plt>
  40564c:	lea    rdi,[rip+0x8d72]        # 40e3c5 <getopt_long_only@@Base+0xde5>
  405653:	mov    r13,rax
  405656:	xor    r15d,r15d
  405659:	call   402440 <puts@plt>
  40565e:	test   r14d,r14d
  405661:	jne    405686 <Mat_VarRead@plt+0x2f66>
  405663:	jmp    405884 <Mat_VarRead@plt+0x3164>
  405668:	mov    rcx,QWORD PTR [r13+r15*8+0x0]
  40566d:	mov    edx,r15d
  405670:	lea    rsi,[rip+0x8d68]        # 40e3df <getopt_long_only@@Base+0xdff>
  405677:	mov    edi,0x1
  40567c:	xor    eax,eax
  40567e:	call   402670 <__printf_chk@plt>
  405683:	inc    r15
  405686:	cmp    r14d,r15d
  405689:	ja     405668 <Mat_VarRead@plt+0x2f48>
  40568b:	mov    rdi,rbp
  40568e:	call   4025b0 <Mat_VarFree@plt>
  405693:	mov    rdx,r12
  405696:	xor    r8d,r8d
  405699:	xor    ecx,ecx
  40569b:	mov    esi,0x2
  4056a0:	lea    rdi,[rip+0x8f0f]        # 40e5b6 <getopt_long_only@@Base+0xfd6>
  4056a7:	call   402680 <Mat_VarCreateStruct@plt>
  4056ac:	mov    rbp,rax
  4056af:	mov    rdi,rax
  4056b2:	call   4023b0 <Mat_VarGetNumberOfFields@plt>
  4056b7:	mov    rdi,rbp
  4056ba:	mov    r13d,eax
  4056bd:	call   402560 <Mat_VarGetStructFieldnames@plt>
  4056c2:	lea    rdi,[rip+0x8d21]        # 40e3ea <getopt_long_only@@Base+0xe0a>
  4056c9:	mov    r12,rax
  4056cc:	xor    r15d,r15d
  4056cf:	call   402440 <puts@plt>
  4056d4:	lea    r14,[rip+0x8d04]        # 40e3df <getopt_long_only@@Base+0xdff>
  4056db:	test   r13d,r13d
  4056de:	jne    4056fe <Mat_VarRead@plt+0x2fde>
  4056e0:	jmp    405895 <Mat_VarRead@plt+0x3175>
  4056e5:	mov    rcx,QWORD PTR [r12+r15*8]
  4056e9:	mov    edx,r15d
  4056ec:	mov    rsi,r14
  4056ef:	mov    edi,0x1
  4056f4:	xor    eax,eax
  4056f6:	call   402670 <__printf_chk@plt>
  4056fb:	inc    r15
  4056fe:	cmp    r13d,r15d
  405701:	ja     4056e5 <Mat_VarRead@plt+0x2fc5>
  405703:	mov    rdi,rbp
  405706:	call   4025b0 <Mat_VarFree@plt>
  40570b:	xor    edi,edi
  40570d:	call   4023b0 <Mat_VarGetNumberOfFields@plt>
  405712:	xor    edi,edi
  405714:	mov    ebp,eax
  405716:	call   402560 <Mat_VarGetStructFieldnames@plt>
  40571b:	lea    rdi,[rip+0x8cdb]        # 40e3fd <getopt_long_only@@Base+0xe1d>
  405722:	mov    r12,rax
  405725:	xor    r14d,r14d
  405728:	call   402440 <puts@plt>
  40572d:	lea    r13,[rip+0x8cab]        # 40e3df <getopt_long_only@@Base+0xdff>
  405734:	test   ebp,ebp
  405736:	jne    405756 <Mat_VarRead@plt+0x3036>
  405738:	jmp    4058a6 <Mat_VarRead@plt+0x3186>
  40573d:	mov    rcx,QWORD PTR [r12+r14*8]
  405741:	mov    edx,r14d
  405744:	mov    rsi,r13
  405747:	mov    edi,0x1
  40574c:	xor    eax,eax
  40574e:	call   402670 <__printf_chk@plt>
  405753:	inc    r14
  405756:	cmp    ebp,r14d
  405759:	ja     40573d <Mat_VarRead@plt+0x301d>
  40575b:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  405760:	mov    rdi,QWORD PTR [rsp]
  405764:	lea    eax,[rbp+0x1]
  405767:	mov    DWORD PTR [rsp+0x10],eax
  40576b:	call   40ca30 <Mat_VarRead@plt+0xa310>
  405770:	call   40ad90 <Mat_VarRead@plt+0x8670>
  405775:	add    DWORD PTR [rsp+0x18],eax
  405779:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  40577e:	mov    rdi,QWORD PTR [rsp]
  405782:	lea    eax,[rbp+0x1]
  405785:	lea    r12,[rsp+0x130]
  40578d:	mov    DWORD PTR [rsp+0x10],eax
  405791:	call   40ca30 <Mat_VarRead@plt+0xa310>
  405796:	lea    rax,[rip+0x886c]        # 40e009 <getopt_long_only@@Base+0xa29>
  40579d:	mov    rcx,rbx
  4057a0:	mov    rdx,r12
  4057a3:	mov    r8d,0x2
  4057a9:	mov    QWORD PTR [rsp+0x200],rax
  4057b1:	mov    esi,0x2
  4057b6:	lea    rax,[rip+0x8853]        # 40e010 <getopt_long_only@@Base+0xa30>
  4057bd:	lea    rdi,[rip+0x8862]        # 40e026 <getopt_long_only@@Base+0xa46>
  4057c4:	mov    QWORD PTR [rsp+0x208],rax
  4057cc:	mov    QWORD PTR [rsp+0x130],0x2
  4057d8:	mov    QWORD PTR [rsp+0x138],0x1
  4057e4:	call   402680 <Mat_VarCreateStruct@plt>
  4057e9:	mov    rbp,rax
  4057ec:	mov    rdi,rax
  4057ef:	mov    esi,0x1
  4057f4:	call   4025e0 <Mat_VarPrint@plt>
  4057f9:	mov    rdi,rbp
  4057fc:	call   4025b0 <Mat_VarFree@plt>
  405801:	xor    r8d,r8d
  405804:	xor    ecx,ecx
  405806:	mov    rdx,r12
  405809:	mov    esi,0x2
  40580e:	lea    rdi,[rip+0x8da1]        # 40e5b6 <getopt_long_only@@Base+0xfd6>
  405815:	call   402680 <Mat_VarCreateStruct@plt>
  40581a:	mov    rbp,rax
  40581d:	mov    rdi,rax
  405820:	mov    esi,0x1
  405825:	call   4025e0 <Mat_VarPrint@plt>
  40582a:	mov    rdi,rbp
  40582d:	call   4025b0 <Mat_VarFree@plt>
  405832:	mov    r8d,0x2
  405838:	mov    rcx,rbx
  40583b:	mov    rdx,r12
  40583e:	mov    esi,0x2
  405843:	lea    rdi,[rip+0x9085]        # 40e8cf <getopt_long_only@@Base+0x12ef>
  40584a:	mov    QWORD PTR [rsp+0x130],0x0
  405856:	mov    QWORD PTR [rsp+0x138],0x0
  405862:	call   402680 <Mat_VarCreateStruct@plt>
  405867:	mov    rbp,rax
  40586a:	mov    rdi,rax
  40586d:	mov    esi,0x1
  405872:	call   4025e0 <Mat_VarPrint@plt>
  405877:	mov    rdi,rbp
  40587a:	call   4025b0 <Mat_VarFree@plt>
  40587f:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  405884:	lea    rdi,[rip+0x8b4d]        # 40e3d8 <getopt_long_only@@Base+0xdf8>
  40588b:	call   402440 <puts@plt>
  405890:	jmp    40568b <Mat_VarRead@plt+0x2f6b>
  405895:	lea    rdi,[rip+0x8b3c]        # 40e3d8 <getopt_long_only@@Base+0xdf8>
  40589c:	call   402440 <puts@plt>
  4058a1:	jmp    405703 <Mat_VarRead@plt+0x2fe3>
  4058a6:	lea    rdi,[rip+0x8b2b]        # 40e3d8 <getopt_long_only@@Base+0xdf8>
  4058ad:	call   402440 <puts@plt>
  4058b2:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  4058b7:	mov    rax,QWORD PTR [rax+0x28]
  4058bb:	cmp    QWORD PTR [rax],0x20
  4058bf:	jne    404c32 <Mat_VarRead@plt+0x2512>
  4058c5:	cmp    QWORD PTR [rax+0x8],0x20
  4058ca:	jne    404c32 <Mat_VarRead@plt+0x2512>
  4058d0:	cmp    QWORD PTR [rax+0x10],0x20
  4058d5:	jne    404c32 <Mat_VarRead@plt+0x2512>
  4058db:	mov    DWORD PTR [rbp+0x8],0x2
  4058e2:	mov    QWORD PTR [rax],0x80
  4058e9:	mov    QWORD PTR [rax+0x8],0x100
  4058f1:	mov    QWORD PTR [rax+0x10],0x1
  4058f9:	mov    rax,QWORD PTR [rsp]
  4058fd:	lea    rcx,[rip+0x979c]        # 40f0a0 <getopt_long_only@@Base+0x1ac0>
  405904:	test   rax,rax
  405907:	cmovne rcx,rax
  40590b:	mov    edx,DWORD PTR [rip+0xf8df]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  405911:	xor    esi,esi
  405913:	mov    rdi,rcx
  405916:	mov    QWORD PTR [rsp],rcx
  40591a:	call   402690 <Mat_CreateVer@plt>
  40591f:	mov    r13,rax
  405922:	test   rax,rax
  405925:	je     404c32 <Mat_VarRead@plt+0x2512>
  40592b:	mov    edx,DWORD PTR [rip+0x10bf3]        # 416524 <opterr@@Base+0x10>
  405931:	mov    rsi,rbp
  405934:	mov    rdi,rax
  405937:	call   402470 <Mat_VarWrite@plt>
  40593c:	mov    rdi,r13
  40593f:	call   402610 <Mat_Close@plt>
  405944:	jmp    404c32 <Mat_VarRead@plt+0x2512>
  405949:	mov    rsi,r12
  40594c:	lea    rdi,[rip+0x8b4c]        # 40e49f <getopt_long_only@@Base+0xebf>
  405953:	xor    eax,eax
  405955:	mov    r15d,DWORD PTR [rsp+0x18]
  40595a:	call   402620 <Mat_Critical@plt>
  40595f:	jmp    4027b5 <Mat_VarRead@plt+0x95>
  405964:	mov    rdi,QWORD PTR [rsp]
  405968:	lea    r12,[rsp+0x130]
  405970:	mov    QWORD PTR [rsp+0x130],0x100
  40597c:	mov    QWORD PTR [rsp+0x138],0x100
  405988:	mov    QWORD PTR [rsp+0x140],0x7c
  405994:	mov    QWORD PTR [rsp+0x200],0xe9
  4059a0:	mov    QWORD PTR [rsp+0x208],0x4a
  4059ac:	mov    QWORD PTR [rsp+0x210],0x1
  4059b8:	mov    QWORD PTR [rsp+0x78],0x0
  4059c1:	call   40ca30 <Mat_VarRead@plt+0xa310>
  4059c6:	lea    rcx,[rsp+0x78]
  4059cb:	mov    rdx,rbx
  4059ce:	mov    rsi,r12
  4059d1:	mov    edi,0x3
  4059d6:	call   402570 <Mat_CalcSingleSubscript2@plt>
  4059db:	mov    rsi,QWORD PTR [rsp+0x78]
  4059e0:	add    DWORD PTR [rsp+0x18],eax
  4059e4:	lea    rdi,[rip+0x8aa0]        # 40e48b <getopt_long_only@@Base+0xeab>
  4059eb:	xor    eax,eax
  4059ed:	call   402490 <Mat_Message@plt>
  4059f2:	lea    eax,[rbp+0x1]
  4059f5:	mov    DWORD PTR [rsp+0x10],eax
  4059f9:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  4059fe:	mov    rdi,QWORD PTR [rsp]
  405a02:	mov    QWORD PTR [rsp+0x200],0x100
  405a0e:	mov    QWORD PTR [rsp+0x208],0x100
  405a1a:	mov    QWORD PTR [rsp+0x210],0x7c
  405a26:	call   40ca30 <Mat_VarRead@plt+0xa310>
  405a2b:	mov    edx,0x49e8
  405a30:	mov    rsi,rbx
  405a33:	mov    edi,0x3
  405a38:	call   402550 <Mat_CalcSubscripts2@plt>
  405a3d:	mov    rcx,QWORD PTR [rax+0x10]
  405a41:	mov    rdx,QWORD PTR [rax+0x8]
  405a45:	mov    rsi,QWORD PTR [rax]
  405a48:	mov    r12,rax
  405a4b:	lea    rdi,[rip+0x8a2b]        # 40e47d <getopt_long_only@@Base+0xe9d>
  405a52:	xor    eax,eax
  405a54:	call   402490 <Mat_Message@plt>
  405a59:	mov    rdi,r12
  405a5c:	call   4023d0 <free@plt>
  405a61:	lea    eax,[rbp+0x1]
  405a64:	mov    DWORD PTR [rsp+0x10],eax
  405a68:	jmp    402e04 <Mat_VarRead@plt+0x6e4>
  405a6d:	nop    DWORD PTR [rax]
  405a70:	endbr64 
  405a74:	xor    ebp,ebp
  405a76:	mov    r9,rdx
  405a79:	pop    rsi
  405a7a:	mov    rdx,rsp
  405a7d:	and    rsp,0xfffffffffffffff0
  405a81:	push   rax
  405a82:	push   rsp
  405a83:	mov    r8,0x40d660
  405a8a:	mov    rcx,0x40d5f0
  405a91:	mov    rdi,0x402730
  405a98:	call   QWORD PTR [rip+0xf54a]        # 414fe8 <getopt_long_only@@Base+0x7a08>
  405a9e:	hlt    
  405a9f:	nop
  405aa0:	endbr64 
  405aa4:	ret    
  405aa5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405aaf:	nop
  405ab0:	mov    eax,0x416520
  405ab5:	cmp    rax,0x416520
  405abb:	je     405ad0 <Mat_VarRead@plt+0x33b0>
  405abd:	mov    eax,0x0
  405ac2:	test   rax,rax
  405ac5:	je     405ad0 <Mat_VarRead@plt+0x33b0>
  405ac7:	mov    edi,0x416520
  405acc:	jmp    rax
  405ace:	xchg   ax,ax
  405ad0:	ret    
  405ad1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405adc:	nop    DWORD PTR [rax+0x0]
  405ae0:	mov    esi,0x416520
  405ae5:	sub    rsi,0x416520
  405aec:	sar    rsi,0x3
  405af0:	mov    rax,rsi
  405af3:	shr    rax,0x3f
  405af7:	add    rsi,rax
  405afa:	sar    rsi,1
  405afd:	je     405b10 <Mat_VarRead@plt+0x33f0>
  405aff:	mov    eax,0x0
  405b04:	test   rax,rax
  405b07:	je     405b10 <Mat_VarRead@plt+0x33f0>
  405b09:	mov    edi,0x416520
  405b0e:	jmp    rax
  405b10:	ret    
  405b11:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405b1c:	nop    DWORD PTR [rax+0x0]
  405b20:	endbr64 
  405b24:	cmp    BYTE PTR [rip+0x109f5],0x0        # 416520 <opterr@@Base+0xc>
  405b2b:	jne    405b40 <Mat_VarRead@plt+0x3420>
  405b2d:	push   rbp
  405b2e:	mov    rbp,rsp
  405b31:	call   405ab0 <Mat_VarRead@plt+0x3390>
  405b36:	mov    BYTE PTR [rip+0x109e3],0x1        # 416520 <opterr@@Base+0xc>
  405b3d:	pop    rbp
  405b3e:	ret    
  405b3f:	nop
  405b40:	ret    
  405b41:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405b4c:	nop    DWORD PTR [rax+0x0]
  405b50:	endbr64 
  405b54:	jmp    405ae0 <Mat_VarRead@plt+0x33c0>
  405b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b60:	push   r13
  405b62:	xor    esi,esi
  405b64:	push   r12
  405b66:	push   rbp
  405b67:	push   rbx
  405b68:	sub    rsp,0x48
  405b6c:	mov    edx,DWORD PTR [rip+0xf67e]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  405b72:	mov    rax,QWORD PTR fs:0x28
  405b7b:	mov    QWORD PTR [rsp+0x38],rax
  405b80:	xor    eax,eax
  405b82:	mov    QWORD PTR [rsp],0x0
  405b8a:	mov    QWORD PTR [rsp+0x8],0x0
  405b93:	call   402690 <Mat_CreateVer@plt>
  405b98:	mov    rbp,rax
  405b9b:	mov    eax,0x1
  405ba0:	test   rbp,rbp
  405ba3:	je     405eb1 <Mat_VarRead@plt+0x3791>
  405ba9:	mov    QWORD PTR [rsp+0x10],0x0
  405bb2:	mov    QWORD PTR [rsp],0x0
  405bba:	mov    QWORD PTR [rsp+0x8],0x1
  405bc3:	mov    rbx,rsp
  405bc6:	lea    r12,[rsp+0x10]
  405bcb:	sub    rsp,0x8
  405bcf:	push   0x0
  405bd1:	mov    r8,rbx
  405bd4:	mov    r9,r12
  405bd7:	mov    ecx,0x2
  405bdc:	mov    edx,0x16
  405be1:	mov    esi,0x2
  405be6:	lea    rdi,[rip+0x8417]        # 40e004 <getopt_long_only@@Base+0xa24>
  405bed:	call   402450 <Mat_VarCreate@plt>
  405bf2:	mov    edx,DWORD PTR [rip+0x1092c]        # 416524 <opterr@@Base+0x10>
  405bf8:	mov    r13,rax
  405bfb:	mov    rsi,rax
  405bfe:	mov    rdi,rbp
  405c01:	call   402470 <Mat_VarWrite@plt>
  405c06:	mov    rdi,r13
  405c09:	call   4025b0 <Mat_VarFree@plt>
  405c0e:	mov    r8,rbx
  405c11:	xor    r9d,r9d
  405c14:	mov    ecx,0x2
  405c19:	mov    edx,0x9
  405c1e:	mov    esi,0x6
  405c23:	lea    rdi,[rip+0x83df]        # 40e009 <getopt_long_only@@Base+0xa29>
  405c2a:	mov    DWORD PTR [rsp],0x0
  405c31:	call   402450 <Mat_VarCreate@plt>
  405c36:	mov    r8,rbx
  405c39:	xor    r9d,r9d
  405c3c:	mov    ecx,0x2
  405c41:	mov    edx,0x9
  405c46:	mov    esi,0x6
  405c4b:	lea    rdi,[rip+0x83be]        # 40e010 <getopt_long_only@@Base+0xa30>
  405c52:	mov    DWORD PTR [rsp],0x0
  405c59:	mov    QWORD PTR [rsp+0x20],rax
  405c5e:	call   402450 <Mat_VarCreate@plt>
  405c63:	mov    r8,rbx
  405c66:	mov    r9,r12
  405c69:	mov    ecx,0x2
  405c6e:	mov    edx,0x16
  405c73:	mov    esi,0x2
  405c78:	lea    rdi,[rip+0x8398]        # 40e017 <getopt_long_only@@Base+0xa37>
  405c7f:	mov    DWORD PTR [rsp],0x0
  405c86:	mov    QWORD PTR [rsp+0x28],rax
  405c8b:	mov    QWORD PTR [rsp+0x30],0x0
  405c94:	mov    QWORD PTR [rsp+0x10],0x0
  405c9d:	mov    QWORD PTR [rsp+0x18],0x1
  405ca6:	call   402450 <Mat_VarCreate@plt>
  405cab:	mov    edx,DWORD PTR [rip+0x10873]        # 416524 <opterr@@Base+0x10>
  405cb1:	mov    r13,rax
  405cb4:	mov    rsi,rax
  405cb7:	mov    rdi,rbp
  405cba:	call   402470 <Mat_VarWrite@plt>
  405cbf:	mov    rdi,r13
  405cc2:	call   4025b0 <Mat_VarFree@plt>
  405cc7:	mov    r8,rbx
  405cca:	xor    r9d,r9d
  405ccd:	mov    ecx,0x2
  405cd2:	mov    edx,0x9
  405cd7:	mov    esi,0x6
  405cdc:	lea    rdi,[rip+0x8326]        # 40e009 <getopt_long_only@@Base+0xa29>
  405ce3:	mov    DWORD PTR [rsp],0x0
  405cea:	call   402450 <Mat_VarCreate@plt>
  405cef:	mov    r8,rbx
  405cf2:	xor    r9d,r9d
  405cf5:	mov    ecx,0x2
  405cfa:	mov    edx,0x9
  405cff:	mov    esi,0x6
  405d04:	lea    rdi,[rip+0x8305]        # 40e010 <getopt_long_only@@Base+0xa30>
  405d0b:	mov    DWORD PTR [rsp],0x0
  405d12:	mov    QWORD PTR [rsp+0x20],rax
  405d17:	call   402450 <Mat_VarCreate@plt>
  405d1c:	mov    r8,rbx
  405d1f:	mov    r9,r12
  405d22:	mov    ecx,0x2
  405d27:	mov    edx,0x16
  405d2c:	mov    esi,0x2
  405d31:	lea    rdi,[rip+0x82e4]        # 40e01c <getopt_long_only@@Base+0xa3c>
  405d38:	mov    DWORD PTR [rsp],0x0
  405d3f:	mov    QWORD PTR [rsp+0x28],rax
  405d44:	mov    QWORD PTR [rsp+0x30],0x0
  405d4d:	mov    QWORD PTR [rsp+0x10],0x1
  405d56:	mov    QWORD PTR [rsp+0x18],0x1
  405d5f:	call   402450 <Mat_VarCreate@plt>
  405d64:	mov    edx,DWORD PTR [rip+0x107ba]        # 416524 <opterr@@Base+0x10>
  405d6a:	mov    rsi,rax
  405d6d:	mov    r13,rax
  405d70:	mov    rdi,rbp
  405d73:	call   402470 <Mat_VarWrite@plt>
  405d78:	mov    rdi,r13
  405d7b:	call   4025b0 <Mat_VarFree@plt>
  405d80:	mov    r8,rbx
  405d83:	xor    r9d,r9d
  405d86:	mov    ecx,0x2
  405d8b:	mov    edx,0x9
  405d90:	mov    esi,0x6
  405d95:	lea    rdi,[rip+0x826d]        # 40e009 <getopt_long_only@@Base+0xa29>
  405d9c:	mov    DWORD PTR [rsp],0x0
  405da3:	mov    QWORD PTR [rsp+0x10],0x0
  405dac:	mov    QWORD PTR [rsp+0x18],0x1
  405db5:	call   402450 <Mat_VarCreate@plt>
  405dba:	mov    r8,rbx
  405dbd:	xor    r9d,r9d
  405dc0:	mov    ecx,0x2
  405dc5:	mov    edx,0x2
  405dca:	mov    esi,0x4
  405dcf:	lea    rdi,[rip+0x823a]        # 40e010 <getopt_long_only@@Base+0xa30>
  405dd6:	mov    DWORD PTR [rsp],0x0
  405ddd:	mov    QWORD PTR [rsp+0x20],rax
  405de2:	call   402450 <Mat_VarCreate@plt>
  405de7:	mov    r8,rbx
  405dea:	xor    r9d,r9d
  405ded:	mov    ecx,0x2
  405df2:	mov    edx,0x16
  405df7:	mov    esi,0x2
  405dfc:	lea    rdi,[rip+0x8206]        # 40e009 <getopt_long_only@@Base+0xa29>
  405e03:	mov    DWORD PTR [rsp],0x0
  405e0a:	mov    QWORD PTR [rsp+0x28],rax
  405e0f:	call   402450 <Mat_VarCreate@plt>
  405e14:	mov    r8,rbx
  405e17:	xor    r9d,r9d
  405e1a:	mov    ecx,0x2
  405e1f:	mov    edx,0x15
  405e24:	mov    esi,0x1
  405e29:	lea    rdi,[rip+0x81e0]        # 40e010 <getopt_long_only@@Base+0xa30>
  405e30:	mov    DWORD PTR [rsp],0x0
  405e37:	mov    QWORD PTR [rsp+0x30],rax
  405e3c:	call   402450 <Mat_VarCreate@plt>
  405e41:	mov    r8,rbx
  405e44:	mov    r9,r12
  405e47:	mov    ecx,0x2
  405e4c:	mov    edx,0x16
  405e51:	mov    esi,0x2
  405e56:	lea    rdi,[rip+0x81c4]        # 40e021 <getopt_long_only@@Base+0xa41>
  405e5d:	mov    QWORD PTR [rsp+0x38],rax
  405e62:	mov    QWORD PTR [rsp+0x40],0x0
  405e6b:	mov    QWORD PTR [rsp+0x10],0x2
  405e74:	mov    QWORD PTR [rsp+0x18],0x1
  405e7d:	mov    DWORD PTR [rsp],0x0
  405e84:	call   402450 <Mat_VarCreate@plt>
  405e89:	mov    edx,DWORD PTR [rip+0x10695]        # 416524 <opterr@@Base+0x10>
  405e8f:	mov    rsi,rax
  405e92:	mov    rbx,rax
  405e95:	mov    rdi,rbp
  405e98:	call   402470 <Mat_VarWrite@plt>
  405e9d:	mov    rdi,rbx
  405ea0:	call   4025b0 <Mat_VarFree@plt>
  405ea5:	mov    rdi,rbp
  405ea8:	call   402610 <Mat_Close@plt>
  405ead:	pop    rax
  405eae:	pop    rdx
  405eaf:	xor    eax,eax
  405eb1:	mov    rcx,QWORD PTR [rsp+0x38]
  405eb6:	xor    rcx,QWORD PTR fs:0x28
  405ebf:	jne    405ecc <Mat_VarRead@plt+0x37ac>
  405ec1:	add    rsp,0x48
  405ec5:	pop    rbx
  405ec6:	pop    rbp
  405ec7:	pop    r12
  405ec9:	pop    r13
  405ecb:	ret    
  405ecc:	call   4024c0 <__stack_chk_fail@plt>
  405ed1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405edc:	nop    DWORD PTR [rax+0x0]
  405ee0:	push   r15
  405ee2:	push   r14
  405ee4:	push   r13
  405ee6:	push   r12
  405ee8:	push   rbp
  405ee9:	push   rbx
  405eea:	mov    ebx,edi
  405eec:	mov    rdi,rsi
  405eef:	sub    rsp,0x8d8
  405ef6:	mov    rax,QWORD PTR fs:0x28
  405eff:	mov    QWORD PTR [rsp+0x8c8],rax
  405f07:	xor    eax,eax
  405f09:	mov    QWORD PTR [rsp+0x10],0x5
  405f12:	mov    QWORD PTR [rsp+0x18],0xa
  405f1b:	mov    eax,0x1
  405f20:	lea    rdx,[rsp+0x3a0]
  405f28:	lea    rbp,[rsp+0x130]
  405f30:	lea    r9,[rsp+0x200]
  405f38:	lea    r8,[rsp+0x2d0]
  405f40:	lea    rsi,[rsp+0x50]
  405f45:	lea    rcx,[rsp+0xc0]
  405f4d:	lea    r13,[rsp+0x84f]
  405f55:	lea    r12,[rsp+0x88f]
  405f5d:	lea    r11,[rsp+0x530]
  405f65:	lea    r10,[rsp+0x6c0]
  405f6d:	nop    DWORD PTR [rax]
  405f70:	vxorpd xmm0,xmm0,xmm0
  405f74:	vcvtsi2sd xmm0,xmm0,eax
  405f78:	mov    DWORD PTR [r9+rax*4-0x4],eax
  405f7d:	mov    DWORD PTR [r8+rax*4-0x4],eax
  405f82:	mov    WORD PTR [rsi+rax*2-0x2],ax
  405f87:	vmovsd QWORD PTR [rdx+rax*8-0x8],xmm0
  405f8d:	vxorps xmm0,xmm0,xmm0
  405f91:	vcvtsi2ss xmm0,xmm0,eax
  405f95:	mov    WORD PTR [rcx+rax*2-0x2],ax
  405f9a:	mov    BYTE PTR [r13+rax*1+0x0],al
  405f9f:	mov    BYTE PTR [r12+rax*1],al
  405fa3:	vmovss DWORD PTR [rbp+rax*4-0x4],xmm0
  405fa9:	mov    QWORD PTR [r11+rax*8-0x8],rax
  405fae:	mov    QWORD PTR [r10+rax*8-0x8],rax
  405fb3:	inc    rax
  405fb6:	cmp    rax,0x33
  405fba:	jne    405f70 <Mat_VarRead@plt+0x3850>
  405fbc:	lea    eax,[rbx-0x6]
  405fbf:	cmp    eax,0x9
  405fc2:	ja     4062b9 <Mat_VarRead@plt+0x3b99>
  405fc8:	lea    r12,[rip+0x8a11]        # 40e9e0 <getopt_long_only@@Base+0x1400>
  405fcf:	movsxd rax,DWORD PTR [r12+rax*4]
  405fd3:	add    rax,r12
  405fd6:	notrack jmp rax
  405fd9:	lea    rax,[rdx+0x120]
  405fe0:	mov    QWORD PTR [rsp],rax
  405fe4:	mov    QWORD PTR [rsp+0x8],rdx
  405fe9:	lea    r14,[rdx+0xc0]
  405ff0:	lea    r15,[rdx+0x60]
  405ff4:	mov    r12d,0x9
  405ffa:	nop    WORD PTR [rax+rax*1+0x0]
  406000:	mov    edx,DWORD PTR [rip+0xf1ea]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  406006:	xor    esi,esi
  406008:	call   402690 <Mat_CreateVer@plt>
  40600d:	mov    r13,rax
  406010:	mov    eax,0x1
  406015:	test   r13,r13
  406018:	je     406131 <Mat_VarRead@plt+0x3a11>
  40601e:	mov    QWORD PTR [rsp+0x10],0x3
  406027:	mov    QWORD PTR [rsp+0x18],0x4
  406030:	lea    rbp,[rsp+0x10]
  406035:	sub    rsp,0x8
  406039:	push   0x1
  40603b:	mov    esi,ebx
  40603d:	mov    r8,rbp
  406040:	mov    r9,QWORD PTR [rsp+0x18]
  406045:	mov    ecx,0x2
  40604a:	mov    edx,r12d
  40604d:	xor    edi,edi
  40604f:	call   402450 <Mat_VarCreate@plt>
  406054:	mov    esi,ebx
  406056:	mov    r9,r15
  406059:	mov    r8,rbp
  40605c:	mov    ecx,0x2
  406061:	mov    edx,r12d
  406064:	xor    edi,edi
  406066:	mov    DWORD PTR [rsp],0x1
  40606d:	mov    QWORD PTR [rsp+0x30],rax
  406072:	call   402450 <Mat_VarCreate@plt>
  406077:	mov    esi,ebx
  406079:	mov    r9,r14
  40607c:	mov    r8,rbp
  40607f:	mov    ecx,0x2
  406084:	mov    edx,r12d
  406087:	xor    edi,edi
  406089:	mov    DWORD PTR [rsp],0x1
  406090:	mov    QWORD PTR [rsp+0x38],rax
  406095:	call   402450 <Mat_VarCreate@plt>
  40609a:	mov    r9,QWORD PTR [rsp+0x10]
  40609f:	mov    esi,ebx
  4060a1:	mov    r8,rbp
  4060a4:	mov    ecx,0x2
  4060a9:	mov    edx,r12d
  4060ac:	xor    edi,edi
  4060ae:	mov    DWORD PTR [rsp],0x1
  4060b5:	mov    QWORD PTR [rsp+0x40],rax
  4060ba:	call   402450 <Mat_VarCreate@plt>
  4060bf:	lea    r9,[rsp+0x30]
  4060c4:	mov    r8,rbp
  4060c7:	mov    ecx,0x2
  4060cc:	mov    edx,0x15
  4060d1:	mov    esi,0x1
  4060d6:	lea    rdi,[rip+0x7f49]        # 40e026 <getopt_long_only@@Base+0xa46>
  4060dd:	mov    QWORD PTR [rsp+0x48],rax
  4060e2:	mov    QWORD PTR [rsp+0x50],0x0
  4060eb:	mov    QWORD PTR [rsp+0x20],0x4
  4060f4:	mov    QWORD PTR [rsp+0x28],0x1
  4060fd:	mov    DWORD PTR [rsp],0x0
  406104:	call   402450 <Mat_VarCreate@plt>
  406109:	mov    edx,DWORD PTR [rip+0x10415]        # 416524 <opterr@@Base+0x10>
  40610f:	mov    rsi,rax
  406112:	mov    rbx,rax
  406115:	mov    rdi,r13
  406118:	call   402470 <Mat_VarWrite@plt>
  40611d:	mov    rdi,rbx
  406120:	call   4025b0 <Mat_VarFree@plt>
  406125:	mov    rdi,r13
  406128:	call   402610 <Mat_Close@plt>
  40612d:	pop    rax
  40612e:	pop    rdx
  40612f:	xor    eax,eax
  406131:	mov    rbx,QWORD PTR [rsp+0x8c8]
  406139:	xor    rbx,QWORD PTR fs:0x28
  406142:	jne    4062b4 <Mat_VarRead@plt+0x3b94>
  406148:	add    rsp,0x8d8
  40614f:	pop    rbx
  406150:	pop    rbp
  406151:	pop    r12
  406153:	pop    r13
  406155:	pop    r14
  406157:	pop    r15
  406159:	ret    
  40615a:	lea    rax,[rbp+0x90]
  406161:	mov    r12d,ebx
  406164:	mov    QWORD PTR [rsp],rax
  406168:	lea    r14,[rbp+0x60]
  40616c:	lea    r15,[rbp+0x30]
  406170:	mov    QWORD PTR [rsp+0x8],rbp
  406175:	jmp    406000 <Mat_VarRead@plt+0x38e0>
  40617a:	lea    rax,[rsp+0x850]
  406182:	lea    rcx,[rsp+0x874]
  40618a:	mov    QWORD PTR [rsp],rcx
  40618e:	lea    r14,[rsp+0x868]
  406196:	lea    r15,[rsp+0x85c]
  40619e:	mov    QWORD PTR [rsp+0x8],rax
  4061a3:	mov    r12d,0x1
  4061a9:	jmp    406000 <Mat_VarRead@plt+0x38e0>
  4061ae:	lea    rax,[rsp+0x890]
  4061b6:	lea    rcx,[rsp+0x8b4]
  4061be:	mov    QWORD PTR [rsp],rcx
  4061c2:	lea    r14,[rsp+0x8a8]
  4061ca:	lea    r15,[rsp+0x89c]
  4061d2:	mov    QWORD PTR [rsp+0x8],rax
  4061d7:	mov    r12d,0x2
  4061dd:	jmp    406000 <Mat_VarRead@plt+0x38e0>
  4061e2:	lea    rax,[rsi+0x48]
  4061e6:	mov    QWORD PTR [rsp],rax
  4061ea:	lea    r14,[rsi+0x30]
  4061ee:	lea    r15,[rsi+0x18]
  4061f2:	mov    QWORD PTR [rsp+0x8],rsi
  4061f7:	mov    r12d,0x3
  4061fd:	jmp    406000 <Mat_VarRead@plt+0x38e0>
  406202:	lea    rax,[rcx+0x48]
  406206:	mov    QWORD PTR [rsp],rax
  40620a:	lea    r14,[rcx+0x30]
  40620e:	lea    r15,[rcx+0x18]
  406212:	mov    QWORD PTR [rsp+0x8],rcx
  406217:	mov    r12d,0x4
  40621d:	jmp    406000 <Mat_VarRead@plt+0x38e0>
  406222:	lea    rax,[r9+0x90]
  406229:	mov    QWORD PTR [rsp],rax
  40622d:	lea    r14,[r9+0x60]
  406231:	lea    r15,[r9+0x30]
  406235:	mov    QWORD PTR [rsp+0x8],r9
  40623a:	mov    r12d,0x5
  406240:	jmp    406000 <Mat_VarRead@plt+0x38e0>
  406245:	lea    rax,[r8+0x90]
  40624c:	mov    QWORD PTR [rsp],rax
  406250:	lea    r14,[r8+0x60]
  406254:	lea    r15,[r8+0x30]
  406258:	mov    QWORD PTR [rsp+0x8],r8
  40625d:	mov    r12d,0x6
  406263:	jmp    406000 <Mat_VarRead@plt+0x38e0>
  406268:	lea    rax,[r11+0x120]
  40626f:	mov    QWORD PTR [rsp],rax
  406273:	lea    r14,[r11+0xc0]
  40627a:	lea    r15,[r11+0x60]
  40627e:	mov    QWORD PTR [rsp+0x8],r11
  406283:	mov    r12d,0xc
  406289:	jmp    406000 <Mat_VarRead@plt+0x38e0>
  40628e:	lea    rax,[r10+0x120]
  406295:	mov    QWORD PTR [rsp],rax
  406299:	lea    r14,[r10+0xc0]
  4062a0:	lea    r15,[r10+0x60]
  4062a4:	mov    QWORD PTR [rsp+0x8],r10
  4062a9:	mov    r12d,0xd
  4062af:	jmp    406000 <Mat_VarRead@plt+0x38e0>
  4062b4:	call   4024c0 <__stack_chk_fail@plt>
  4062b9:	mov    eax,0x1
  4062be:	jmp    406131 <Mat_VarRead@plt+0x3a11>
  4062c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4062ce:	xchg   ax,ax
  4062d0:	push   r15
  4062d2:	push   r14
  4062d4:	push   r13
  4062d6:	push   r12
  4062d8:	push   rbp
  4062d9:	push   rbx
  4062da:	sub    rsp,0x1000
  4062e1:	or     QWORD PTR [rsp],0x0
  4062e6:	sub    rsp,0x1d8
  4062ed:	vpxor  xmm0,xmm0,xmm0
  4062f1:	mov    edx,0x1
  4062f6:	mov    DWORD PTR [rsp+0x44],edi
  4062fa:	mov    QWORD PTR [rsp+0x48],rsi
  4062ff:	lea    rsi,[rsp+0x500]
  406307:	lea    rdi,[rsp+0x5d0]
  40630f:	mov    rax,QWORD PTR fs:0x28
  406318:	mov    QWORD PTR [rsp+0x11c8],rax
  406320:	xor    eax,eax
  406322:	lea    rcx,[rsp+0x430]
  40632a:	mov    QWORD PTR [rsp+0x18],rsi
  40632f:	lea    rsi,[rsp+0x6a0]
  406337:	mov    QWORD PTR [rsp+0x10],rdi
  40633c:	mov    QWORD PTR [rsp+0x8],rsi
  406341:	lea    rdi,[rsp+0x109d]
  406349:	lea    rsi,[rsp+0x10dd]
  406351:	mov    QWORD PTR [rsp+0x50],0x5
  40635a:	mov    QWORD PTR [rsp+0x58],0xa
  406363:	mov    QWORD PTR [rsp],rcx
  406367:	mov    QWORD PTR [rsp+0x30],rdi
  40636c:	mov    QWORD PTR [rsp+0x20],rsi
  406371:	lea    rdi,[rsp+0x111d]
  406379:	lea    rsi,[rsp+0x115d]
  406381:	mov    QWORD PTR [rsp+0x38],rdi
  406386:	mov    QWORD PTR [rsp+0x28],rsi
  40638b:	vmovaps XMMWORD PTR [rsp+0x90],xmm0
  406394:	vmovaps XMMWORD PTR [rsp+0xa0],xmm0
  40639d:	vmovaps XMMWORD PTR [rsp+0xb0],xmm0
  4063a6:	vmovaps XMMWORD PTR [rsp+0xc0],xmm0
  4063af:	mov    eax,0x33
  4063b4:	lea    rbp,[rsp+0x770]
  4063bc:	lea    rbx,[rsp+0x900]
  4063c4:	lea    r11,[rsp+0x290]
  4063cc:	lea    r10,[rsp+0x360]
  4063d4:	lea    r15,[rsp+0xd0]
  4063dc:	lea    r14,[rsp+0x140]
  4063e4:	lea    r13,[rsp+0x1b0]
  4063ec:	lea    r12,[rsp+0x220]
  4063f4:	lea    r9,[rsp+0xa90]
  4063fc:	lea    r8,[rsp+0xc20]
  406404:	lea    rdi,[rsp+0xdb0]
  40640c:	lea    rsi,[rsp+0xf40]
  406414:	nop    DWORD PTR [rax+0x0]
  406418:	vxorpd xmm0,xmm0,xmm0
  40641c:	vcvtsi2sd xmm0,xmm0,edx
  406420:	mov    rcx,QWORD PTR [rsp]
  406424:	mov    WORD PTR [r15+rax*2-0x66],dx
  40642a:	mov    DWORD PTR [rcx+rax*4-0xcc],edx
  406431:	vmovsd QWORD PTR [rbp+rax*8-0x198],xmm0
  40643a:	vxorpd xmm0,xmm0,xmm0
  40643e:	vcvtsi2sd xmm0,xmm0,eax
  406442:	mov    rcx,QWORD PTR [rsp+0x18]
  406447:	mov    WORD PTR [r13+rax*2-0x66],dx
  40644d:	mov    DWORD PTR [rcx+rax*4-0xcc],eax
  406454:	mov    rcx,QWORD PTR [rsp+0x10]
  406459:	vmovsd QWORD PTR [rbx+rax*8-0x198],xmm0
  406462:	mov    DWORD PTR [rcx+rax*4-0xcc],edx
  406469:	vxorps xmm0,xmm0,xmm0
  40646d:	mov    rcx,QWORD PTR [rsp+0x8]
  406472:	vcvtsi2ss xmm0,xmm0,edx
  406476:	mov    DWORD PTR [rcx+rax*4-0xcc],eax
  40647d:	mov    rcx,QWORD PTR [rsp+0x30]
  406482:	mov    QWORD PTR [r9+rax*8-0x198],rdx
  40648a:	mov    BYTE PTR [rcx+rax*1],dl
  40648d:	mov    rcx,QWORD PTR [rsp+0x20]
  406492:	vmovss DWORD PTR [r11+rax*4-0xcc],xmm0
  40649c:	vxorps xmm0,xmm0,xmm0
  4064a0:	mov    BYTE PTR [rcx+rax*1],al
  4064a3:	vcvtsi2ss xmm0,xmm0,eax
  4064a7:	mov    rcx,QWORD PTR [rsp+0x38]
  4064ac:	mov    QWORD PTR [rdi+rax*8-0x198],rdx
  4064b4:	mov    BYTE PTR [rcx+rax*1],dl
  4064b7:	mov    rcx,QWORD PTR [rsp+0x28]
  4064bc:	inc    rdx
  4064bf:	vmovss DWORD PTR [r10+rax*4-0xcc],xmm0
  4064c9:	mov    WORD PTR [r14+rax*2-0x66],ax
  4064cf:	mov    WORD PTR [r12+rax*2-0x66],ax
  4064d5:	mov    BYTE PTR [rcx+rax*1],al
  4064d8:	mov    QWORD PTR [r8+rax*8-0x198],rax
  4064e0:	mov    QWORD PTR [rsi+rax*8-0x198],rax
  4064e8:	inc    rax
  4064eb:	cmp    rdx,0x33
  4064ef:	jne    406418 <Mat_VarRead@plt+0x3cf8>
  4064f5:	mov    eax,DWORD PTR [rsp+0x44]
  4064f9:	mov    rcx,QWORD PTR [rsp]
  4064fd:	sub    eax,0x6
  406500:	cmp    eax,0x9
  406503:	ja     406b0e <Mat_VarRead@plt+0x43ee>
  406509:	lea    rdx,[rip+0x84f8]        # 40ea08 <getopt_long_only@@Base+0x1428>
  406510:	movsxd rax,DWORD PTR [rdx+rax*4]
  406514:	add    rax,rdx
  406517:	notrack jmp rax
  40651a:	lea    rax,[r9+0x60]
  40651e:	mov    QWORD PTR [rsp+0xa0],rax
  406526:	lea    rax,[r8+0x60]
  40652a:	mov    QWORD PTR [rsp+0xa8],rax
  406532:	lea    rax,[r9+0xc0]
  406539:	mov    QWORD PTR [rsp+0x90],r9
  406541:	mov    QWORD PTR [rsp+0x98],r8
  406549:	mov    QWORD PTR [rsp+0xb0],rax
  406551:	add    r9,0x120
  406558:	lea    rax,[r8+0xc0]
  40655f:	add    r8,0x120
  406566:	mov    QWORD PTR [rsp+0xb8],rax
  40656e:	mov    QWORD PTR [rsp+0xc0],r9
  406576:	mov    QWORD PTR [rsp+0xc8],r8
  40657e:	mov    r13d,0xc
  406584:	nop    DWORD PTR [rax+0x0]
  406588:	mov    edx,DWORD PTR [rip+0xec62]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  40658e:	mov    rdi,QWORD PTR [rsp+0x48]
  406593:	xor    esi,esi
  406595:	call   402690 <Mat_CreateVer@plt>
  40659a:	mov    r12,rax
  40659d:	mov    eax,0x1
  4065a2:	test   r12,r12
  4065a5:	je     4066da <Mat_VarRead@plt+0x3fba>
  4065ab:	mov    QWORD PTR [rsp+0x50],0x3
  4065b4:	mov    QWORD PTR [rsp+0x58],0x4
  4065bd:	lea    rbx,[rsp+0x50]
  4065c2:	lea    rbp,[rsp+0x90]
  4065ca:	sub    rsp,0x8
  4065ce:	push   0x801
  4065d3:	mov    r8,rbx
  4065d6:	mov    r9,rbp
  4065d9:	mov    r14d,DWORD PTR [rsp+0x54]
  4065de:	mov    ecx,0x2
  4065e3:	mov    edx,r13d
  4065e6:	mov    esi,r14d
  4065e9:	xor    edi,edi
  4065eb:	call   402450 <Mat_VarCreate@plt>
  4065f0:	mov    r8,rbx
  4065f3:	lea    r9,[rbp+0x10]
  4065f7:	mov    ecx,0x2
  4065fc:	mov    edx,r13d
  4065ff:	mov    esi,r14d
  406602:	xor    edi,edi
  406604:	mov    DWORD PTR [rsp],0x801
  40660b:	mov    QWORD PTR [rsp+0x70],rax
  406610:	call   402450 <Mat_VarCreate@plt>
  406615:	mov    r8,rbx
  406618:	lea    r9,[rbp+0x20]
  40661c:	mov    ecx,0x2
  406621:	mov    edx,r13d
  406624:	mov    esi,r14d
  406627:	xor    edi,edi
  406629:	mov    DWORD PTR [rsp],0x801
  406630:	mov    QWORD PTR [rsp+0x78],rax
  406635:	call   402450 <Mat_VarCreate@plt>
  40663a:	mov    r8,rbx
  40663d:	lea    r9,[rbp+0x30]
  406641:	mov    ecx,0x2
  406646:	mov    edx,r13d
  406649:	mov    esi,r14d
  40664c:	xor    edi,edi
  40664e:	mov    DWORD PTR [rsp],0x801
  406655:	mov    QWORD PTR [rsp+0x80],rax
  40665d:	call   402450 <Mat_VarCreate@plt>
  406662:	lea    r9,[rsp+0x70]
  406667:	mov    r8,rbx
  40666a:	mov    ecx,0x2
  40666f:	mov    edx,0x15
  406674:	mov    esi,0x1
  406679:	lea    rdi,[rip+0x79a6]        # 40e026 <getopt_long_only@@Base+0xa46>
  406680:	mov    QWORD PTR [rsp+0x88],rax
  406688:	mov    QWORD PTR [rsp+0x90],0x0
  406694:	mov    QWORD PTR [rsp+0x60],0x4
  40669d:	mov    QWORD PTR [rsp+0x68],0x1
  4066a6:	mov    DWORD PTR [rsp],0x0
  4066ad:	call   402450 <Mat_VarCreate@plt>
  4066b2:	mov    edx,DWORD PTR [rip+0xfe6c]        # 416524 <opterr@@Base+0x10>
  4066b8:	mov    rsi,rax
  4066bb:	mov    rbx,rax
  4066be:	mov    rdi,r12
  4066c1:	call   402470 <Mat_VarWrite@plt>
  4066c6:	mov    rdi,rbx
  4066c9:	call   4025b0 <Mat_VarFree@plt>
  4066ce:	mov    rdi,r12
  4066d1:	call   402610 <Mat_Close@plt>
  4066d6:	pop    rax
  4066d7:	pop    rdx
  4066d8:	xor    eax,eax
  4066da:	mov    rbx,QWORD PTR [rsp+0x11c8]
  4066e2:	xor    rbx,QWORD PTR fs:0x28
  4066eb:	jne    406b09 <Mat_VarRead@plt+0x43e9>
  4066f1:	add    rsp,0x11d8
  4066f8:	pop    rbx
  4066f9:	pop    rbp
  4066fa:	pop    r12
  4066fc:	pop    r13
  4066fe:	pop    r14
  406700:	pop    r15
  406702:	ret    
  406703:	lea    rax,[rdi+0x60]
  406707:	mov    QWORD PTR [rsp+0xa0],rax
  40670f:	lea    rax,[rsi+0x60]
  406713:	mov    QWORD PTR [rsp+0xa8],rax
  40671b:	lea    rax,[rdi+0xc0]
  406722:	mov    QWORD PTR [rsp+0x90],rdi
  40672a:	mov    QWORD PTR [rsp+0x98],rsi
  406732:	mov    QWORD PTR [rsp+0xb0],rax
  40673a:	add    rdi,0x120
  406741:	lea    rax,[rsi+0xc0]
  406748:	add    rsi,0x120
  40674f:	mov    QWORD PTR [rsp+0xb8],rax
  406757:	mov    QWORD PTR [rsp+0xc0],rdi
  40675f:	mov    QWORD PTR [rsp+0xc8],rsi
  406767:	mov    r13d,0xd
  40676d:	jmp    406588 <Mat_VarRead@plt+0x3e68>
  406772:	lea    rax,[rbp+0x60]
  406776:	mov    QWORD PTR [rsp+0xa0],rax
  40677e:	lea    rax,[rbx+0x60]
  406782:	mov    QWORD PTR [rsp+0xa8],rax
  40678a:	lea    rax,[rbp+0xc0]
  406791:	mov    QWORD PTR [rsp+0x90],rbp
  406799:	mov    QWORD PTR [rsp+0x98],rbx
  4067a1:	mov    QWORD PTR [rsp+0xb0],rax
  4067a9:	add    rbp,0x120
  4067b0:	lea    rax,[rbx+0xc0]
  4067b7:	add    rbx,0x120
  4067be:	mov    QWORD PTR [rsp+0xb8],rax
  4067c6:	mov    QWORD PTR [rsp+0xc0],rbp
  4067ce:	mov    QWORD PTR [rsp+0xc8],rbx
  4067d6:	mov    r13d,0x9
  4067dc:	jmp    406588 <Mat_VarRead@plt+0x3e68>
  4067e1:	lea    rax,[r11+0x30]
  4067e5:	mov    QWORD PTR [rsp+0xa0],rax
  4067ed:	lea    rax,[r10+0x30]
  4067f1:	mov    QWORD PTR [rsp+0xa8],rax
  4067f9:	lea    rax,[r11+0x60]
  4067fd:	mov    QWORD PTR [rsp+0x90],r11
  406805:	mov    QWORD PTR [rsp+0x98],r10
  40680d:	mov    QWORD PTR [rsp+0xb0],rax
  406815:	add    r11,0x90
  40681c:	lea    rax,[r10+0x60]
  406820:	add    r10,0x90
  406827:	mov    QWORD PTR [rsp+0xb8],rax
  40682f:	mov    QWORD PTR [rsp+0xc0],r11
  406837:	mov    QWORD PTR [rsp+0xc8],r10
  40683f:	mov    r13d,DWORD PTR [rsp+0x44]
  406844:	jmp    406588 <Mat_VarRead@plt+0x3e68>
  406849:	lea    rcx,[rsp+0x10dc]
  406851:	mov    QWORD PTR [rsp+0xa0],rcx
  406859:	lea    rcx,[rsp+0x111c]
  406861:	lea    rdx,[rsp+0x10d0]
  406869:	lea    rax,[rsp+0x1110]
  406871:	mov    QWORD PTR [rsp+0xa8],rcx
  406879:	lea    rcx,[rsp+0x10e8]
  406881:	mov    QWORD PTR [rsp+0x90],rdx
  406889:	mov    QWORD PTR [rsp+0x98],rax
  406891:	mov    QWORD PTR [rsp+0xb0],rcx
  406899:	lea    rdx,[rsp+0x10f4]
  4068a1:	lea    rcx,[rsp+0x1128]
  4068a9:	lea    rax,[rsp+0x1134]
  4068b1:	mov    QWORD PTR [rsp+0xb8],rcx
  4068b9:	mov    QWORD PTR [rsp+0xc0],rdx
  4068c1:	mov    QWORD PTR [rsp+0xc8],rax
  4068c9:	mov    r13d,0x1
  4068cf:	jmp    406588 <Mat_VarRead@plt+0x3e68>
  4068d4:	lea    rcx,[rsp+0x115c]
  4068dc:	mov    QWORD PTR [rsp+0xa0],rcx
  4068e4:	lea    rcx,[rsp+0x119c]
  4068ec:	lea    rdx,[rsp+0x1150]
  4068f4:	lea    rax,[rsp+0x1190]
  4068fc:	mov    QWORD PTR [rsp+0xa8],rcx
  406904:	lea    rcx,[rsp+0x1168]
  40690c:	mov    QWORD PTR [rsp+0x90],rdx
  406914:	mov    QWORD PTR [rsp+0x98],rax
  40691c:	mov    QWORD PTR [rsp+0xb0],rcx
  406924:	lea    rdx,[rsp+0x1174]
  40692c:	lea    rcx,[rsp+0x11a8]
  406934:	lea    rax,[rsp+0x11b4]
  40693c:	mov    QWORD PTR [rsp+0xb8],rcx
  406944:	mov    QWORD PTR [rsp+0xc0],rdx
  40694c:	mov    QWORD PTR [rsp+0xc8],rax
  406954:	mov    r13d,0x2
  40695a:	jmp    406588 <Mat_VarRead@plt+0x3e68>
  40695f:	lea    rax,[r15+0x18]
  406963:	mov    QWORD PTR [rsp+0xa0],rax
  40696b:	lea    rax,[r14+0x18]
  40696f:	mov    QWORD PTR [rsp+0xa8],rax
  406977:	lea    rax,[r15+0x30]
  40697b:	mov    QWORD PTR [rsp+0xb0],rax
  406983:	lea    rax,[r14+0x30]
  406987:	mov    QWORD PTR [rsp+0xb8],rax
  40698f:	lea    rax,[r15+0x48]
  406993:	mov    QWORD PTR [rsp+0xc0],rax
  40699b:	lea    rax,[r14+0x48]
  40699f:	mov    QWORD PTR [rsp+0x90],r15
  4069a7:	mov    QWORD PTR [rsp+0x98],r14
  4069af:	mov    QWORD PTR [rsp+0xc8],rax
  4069b7:	mov    r13d,0x3
  4069bd:	jmp    406588 <Mat_VarRead@plt+0x3e68>
  4069c2:	lea    rax,[r13+0x18]
  4069c6:	mov    QWORD PTR [rsp+0xa0],rax
  4069ce:	lea    rax,[r12+0x18]
  4069d3:	mov    QWORD PTR [rsp+0xa8],rax
  4069db:	lea    rax,[r13+0x30]
  4069df:	mov    QWORD PTR [rsp+0xb0],rax
  4069e7:	lea    rax,[r12+0x30]
  4069ec:	mov    QWORD PTR [rsp+0xb8],rax
  4069f4:	lea    rax,[r13+0x48]
  4069f8:	mov    QWORD PTR [rsp+0xc0],rax
  406a00:	lea    rax,[r12+0x48]
  406a05:	mov    QWORD PTR [rsp+0x90],r13
  406a0d:	mov    QWORD PTR [rsp+0x98],r12
  406a15:	mov    QWORD PTR [rsp+0xc8],rax
  406a1d:	mov    r13d,0x4
  406a23:	jmp    406588 <Mat_VarRead@plt+0x3e68>
  406a28:	mov    rbx,QWORD PTR [rsp+0x18]
  406a2d:	lea    rax,[rcx+0x30]
  406a31:	mov    QWORD PTR [rsp+0xa0],rax
  406a39:	lea    rax,[rbx+0x30]
  406a3d:	mov    QWORD PTR [rsp+0xa8],rax
  406a45:	lea    rax,[rcx+0x60]
  406a49:	mov    QWORD PTR [rsp+0xb0],rax
  406a51:	lea    rax,[rbx+0x60]
  406a55:	mov    QWORD PTR [rsp+0x90],rcx
  406a5d:	mov    QWORD PTR [rsp+0xb8],rax
  406a65:	add    rcx,0x90
  406a6c:	lea    rax,[rbx+0x90]
  406a73:	mov    QWORD PTR [rsp+0x98],rbx
  406a7b:	mov    QWORD PTR [rsp+0xc0],rcx
  406a83:	mov    QWORD PTR [rsp+0xc8],rax
  406a8b:	mov    r13d,0x5
  406a91:	jmp    406588 <Mat_VarRead@plt+0x3e68>
  406a96:	mov    rbx,QWORD PTR [rsp+0x10]
  406a9b:	mov    rdi,QWORD PTR [rsp+0x8]
  406aa0:	lea    rax,[rbx+0x30]
  406aa4:	mov    QWORD PTR [rsp+0xa0],rax
  406aac:	lea    rax,[rdi+0x30]
  406ab0:	mov    QWORD PTR [rsp+0xa8],rax
  406ab8:	lea    rax,[rbx+0x60]
  406abc:	mov    QWORD PTR [rsp+0xb0],rax
  406ac4:	lea    rax,[rdi+0x60]
  406ac8:	mov    QWORD PTR [rsp+0xb8],rax
  406ad0:	lea    rax,[rbx+0x90]
  406ad7:	mov    QWORD PTR [rsp+0xc0],rax
  406adf:	lea    rax,[rdi+0x90]
  406ae6:	mov    QWORD PTR [rsp+0x90],rbx
  406aee:	mov    QWORD PTR [rsp+0x98],rdi
  406af6:	mov    QWORD PTR [rsp+0xc8],rax
  406afe:	mov    r13d,0x6
  406b04:	jmp    406588 <Mat_VarRead@plt+0x3e68>
  406b09:	call   4024c0 <__stack_chk_fail@plt>
  406b0e:	mov    eax,0x1
  406b13:	jmp    4066da <Mat_VarRead@plt+0x3fba>
  406b18:	nop    DWORD PTR [rax+rax*1+0x0]
  406b20:	push   r12
  406b22:	xor    esi,esi
  406b24:	push   rbp
  406b25:	push   rbx
  406b26:	sub    rsp,0x40
  406b2a:	mov    edx,DWORD PTR [rip+0xe6c0]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  406b30:	mov    rax,QWORD PTR fs:0x28
  406b39:	mov    QWORD PTR [rsp+0x38],rax
  406b3e:	xor    eax,eax
  406b40:	mov    QWORD PTR [rsp],0x0
  406b48:	mov    QWORD PTR [rsp+0x8],0x0
  406b51:	call   402690 <Mat_CreateVer@plt>
  406b56:	mov    rbx,rax
  406b59:	mov    eax,0x1
  406b5e:	test   rbx,rbx
  406b61:	je     406c8e <Mat_VarRead@plt+0x456e>
  406b67:	mov    QWORD PTR [rsp+0x10],0x0
  406b70:	mov    QWORD PTR [rsp],0x0
  406b78:	mov    QWORD PTR [rsp+0x8],0x1
  406b81:	mov    rbp,rsp
  406b84:	sub    rsp,0x8
  406b88:	push   0x0
  406b8a:	mov    r8,rbp
  406b8d:	xor    r9d,r9d
  406b90:	mov    ecx,0x2
  406b95:	mov    edx,0x15
  406b9a:	mov    esi,0x1
  406b9f:	lea    rdi,[rip+0x745e]        # 40e004 <getopt_long_only@@Base+0xa24>
  406ba6:	call   402450 <Mat_VarCreate@plt>
  406bab:	mov    edx,DWORD PTR [rip+0xf973]        # 416524 <opterr@@Base+0x10>
  406bb1:	mov    rsi,rax
  406bb4:	mov    r12,rax
  406bb7:	mov    rdi,rbx
  406bba:	call   402470 <Mat_VarWrite@plt>
  406bbf:	mov    rdi,r12
  406bc2:	call   4025b0 <Mat_VarFree@plt>
  406bc7:	mov    r8,rbp
  406bca:	xor    r9d,r9d
  406bcd:	mov    ecx,0x2
  406bd2:	mov    edx,0x9
  406bd7:	mov    esi,0x6
  406bdc:	lea    rdi,[rip+0x7426]        # 40e009 <getopt_long_only@@Base+0xa29>
  406be3:	mov    DWORD PTR [rsp],0x0
  406bea:	call   402450 <Mat_VarCreate@plt>
  406bef:	mov    r8,rbp
  406bf2:	xor    r9d,r9d
  406bf5:	mov    ecx,0x2
  406bfa:	mov    edx,0x9
  406bff:	mov    esi,0x6
  406c04:	lea    rdi,[rip+0x7405]        # 40e010 <getopt_long_only@@Base+0xa30>
  406c0b:	mov    DWORD PTR [rsp],0x0
  406c12:	mov    QWORD PTR [rsp+0x20],rax
  406c17:	call   402450 <Mat_VarCreate@plt>
  406c1c:	lea    r9,[rsp+0x20]
  406c21:	mov    r8,rbp
  406c24:	mov    ecx,0x2
  406c29:	mov    edx,0x15
  406c2e:	mov    esi,0x1
  406c33:	lea    rdi,[rip+0x73dd]        # 40e017 <getopt_long_only@@Base+0xa37>
  406c3a:	mov    QWORD PTR [rsp+0x28],rax
  406c3f:	mov    QWORD PTR [rsp+0x30],0x0
  406c48:	mov    QWORD PTR [rsp+0x10],0x2
  406c51:	mov    QWORD PTR [rsp+0x18],0x1
  406c5a:	mov    DWORD PTR [rsp],0x0
  406c61:	call   402450 <Mat_VarCreate@plt>
  406c66:	mov    edx,DWORD PTR [rip+0xf8b8]        # 416524 <opterr@@Base+0x10>
  406c6c:	mov    rsi,rax
  406c6f:	mov    rbp,rax
  406c72:	mov    rdi,rbx
  406c75:	call   402470 <Mat_VarWrite@plt>
  406c7a:	mov    rdi,rbp
  406c7d:	call   4025b0 <Mat_VarFree@plt>
  406c82:	mov    rdi,rbx
  406c85:	call   402610 <Mat_Close@plt>
  406c8a:	pop    rax
  406c8b:	pop    rdx
  406c8c:	xor    eax,eax
  406c8e:	mov    rcx,QWORD PTR [rsp+0x38]
  406c93:	xor    rcx,QWORD PTR fs:0x28
  406c9c:	jne    406ca7 <Mat_VarRead@plt+0x4587>
  406c9e:	add    rsp,0x40
  406ca2:	pop    rbx
  406ca3:	pop    rbp
  406ca4:	pop    r12
  406ca6:	ret    
  406ca7:	call   4024c0 <__stack_chk_fail@plt>
  406cac:	nop    DWORD PTR [rax+0x0]
  406cb0:	push   r14
  406cb2:	movabs rdx,0x400000000
  406cbc:	movabs rcx,0x300000002
  406cc6:	push   r13
  406cc8:	vpxor  xmm0,xmm0,xmm0
  406ccc:	movabs r10,0x1c0000001b
  406cd6:	push   r12
  406cd8:	movabs r9,0x1f0000001d
  406ce2:	movabs r8,0x2500000023
  406cec:	push   rbp
  406ced:	movabs r14,0x500000001
  406cf7:	movabs r13,0x800000007
  406d01:	push   rbx
  406d02:	mov    ebx,edi
  406d04:	mov    rdi,rsi
  406d07:	sub    rsp,0x570
  406d0e:	mov    rax,QWORD PTR fs:0x28
  406d17:	mov    QWORD PTR [rsp+0x568],rax
  406d1f:	xor    eax,eax
  406d21:	movabs rax,0x200000001
  406d2b:	mov    QWORD PTR [rsp+0xf8],rax
  406d33:	mov    QWORD PTR [rsp+0x120],rax
  406d3b:	mov    QWORD PTR [rsp+0x148],rax
  406d43:	dec    rax
  406d46:	mov    QWORD PTR [rsp+0x40],rax
  406d4b:	movabs rax,0x700000005
  406d55:	movabs rsi,0x100000004
  406d5f:	mov    QWORD PTR [rsp+0x48],rax
  406d64:	movabs rax,0xc0000000a
  406d6e:	mov    QWORD PTR [rsp+0x108],rsi
  406d76:	mov    QWORD PTR [rsp+0x130],rsi
  406d7e:	mov    QWORD PTR [rsp+0x50],rax
  406d83:	movabs rsi,0x1600000014
  406d8d:	movabs rax,0x110000000f
  406d97:	mov    QWORD PTR [rsp+0xf0],rdx
  406d9f:	mov    QWORD PTR [rsp+0x118],rdx
  406da7:	mov    QWORD PTR [rsp+0x140],rdx
  406daf:	mov    QWORD PTR [rsp+0x58],rax
  406db4:	mov    QWORD PTR [rsp+0x60],rsi
  406db9:	mov    QWORD PTR [rsp+0x30],0x5
  406dc2:	mov    QWORD PTR [rsp+0x38],0xa
  406dcb:	mov    QWORD PTR [rsp+0x100],0x3
  406dd7:	mov    QWORD PTR [rsp+0x110],rcx
  406ddf:	mov    QWORD PTR [rsp+0x128],0x3
  406deb:	mov    QWORD PTR [rsp+0x138],rcx
  406df3:	mov    DWORD PTR [rsp+0x150],0x3
  406dfe:	mov    DWORD PTR [rsp+0x68],0x19
  406e06:	vmovaps XMMWORD PTR [rsp],xmm0
  406e0b:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  406e11:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  406e17:	mov    rcx,QWORD PTR [rip+0xb902]        # 412720 <getopt_long_only@@Base+0x5140>
  406e1e:	mov    rsi,QWORD PTR [rip+0xb903]        # 412728 <getopt_long_only@@Base+0x5148>
  406e25:	mov    QWORD PTR [rsp+0x2b0],rcx
  406e2d:	mov    QWORD PTR [rsp+0x2b8],rsi
  406e35:	mov    rcx,QWORD PTR [rip+0xb8f4]        # 412730 <getopt_long_only@@Base+0x5150>
  406e3c:	mov    rsi,QWORD PTR [rip+0xb8f5]        # 412738 <getopt_long_only@@Base+0x5158>
  406e43:	mov    rdx,QWORD PTR [rip+0xb8fe]        # 412748 <getopt_long_only@@Base+0x5168>
  406e4a:	mov    QWORD PTR [rsp+0x2c0],rcx
  406e52:	mov    QWORD PTR [rsp+0x2c8],rsi
  406e5a:	mov    rcx,QWORD PTR [rip+0xb8df]        # 412740 <getopt_long_only@@Base+0x5160>
  406e61:	mov    rsi,QWORD PTR [rip+0xb8e8]        # 412750 <getopt_long_only@@Base+0x5170>
  406e68:	mov    QWORD PTR [rsp+0x2d0],rcx
  406e70:	mov    QWORD PTR [rsp+0x2d8],rdx
  406e78:	mov    rcx,QWORD PTR [rip+0xb8d9]        # 412758 <getopt_long_only@@Base+0x5178>
  406e7f:	mov    rdx,QWORD PTR [rip+0xb8da]        # 412760 <getopt_long_only@@Base+0x5180>
  406e86:	mov    QWORD PTR [rsp+0x2e0],rsi
  406e8e:	mov    rsi,QWORD PTR [rip+0xb8d3]        # 412768 <getopt_long_only@@Base+0x5188>
  406e95:	mov    QWORD PTR [rsp+0x2e8],rcx
  406e9d:	mov    QWORD PTR [rsp+0x2f0],rdx
  406ea5:	mov    rcx,QWORD PTR [rip+0xb8c4]        # 412770 <getopt_long_only@@Base+0x5190>
  406eac:	mov    rdx,QWORD PTR [rip+0xb8c5]        # 412778 <getopt_long_only@@Base+0x5198>
  406eb3:	mov    QWORD PTR [rsp+0x2f8],rsi
  406ebb:	mov    rsi,QWORD PTR [rip+0xb8be]        # 412780 <getopt_long_only@@Base+0x51a0>
  406ec2:	mov    QWORD PTR [rsp+0x300],rcx
  406eca:	mov    QWORD PTR [rsp+0x308],rdx
  406ed2:	mov    QWORD PTR [rsp+0x310],rsi
  406eda:	mov    rdx,QWORD PTR [rip+0xb8af]        # 412790 <getopt_long_only@@Base+0x51b0>
  406ee1:	mov    rsi,QWORD PTR [rip+0xb8b0]        # 412798 <getopt_long_only@@Base+0x51b8>
  406ee8:	mov    rcx,QWORD PTR [rip+0xb899]        # 412788 <getopt_long_only@@Base+0x51a8>
  406eef:	mov    QWORD PTR [rsp+0x320],rdx
  406ef7:	mov    QWORD PTR [rsp+0x328],rsi
  406eff:	mov    QWORD PTR [rsp+0x318],rcx
  406f07:	mov    rcx,QWORD PTR [rip+0xb892]        # 4127a0 <getopt_long_only@@Base+0x51c0>
  406f0e:	mov    rdx,QWORD PTR [rip+0xb893]        # 4127a8 <getopt_long_only@@Base+0x51c8>
  406f15:	mov    rsi,QWORD PTR [rip+0xb894]        # 4127b0 <getopt_long_only@@Base+0x51d0>
  406f1c:	mov    QWORD PTR [rsp+0x330],rcx
  406f24:	mov    QWORD PTR [rsp+0x338],rdx
  406f2c:	mov    rcx,QWORD PTR [rip+0xb885]        # 4127b8 <getopt_long_only@@Base+0x51d8>
  406f33:	mov    rdx,QWORD PTR [rip+0xb886]        # 4127c0 <getopt_long_only@@Base+0x51e0>
  406f3a:	mov    QWORD PTR [rsp+0x340],rsi
  406f42:	mov    rsi,QWORD PTR [rip+0xb87f]        # 4127c8 <getopt_long_only@@Base+0x51e8>
  406f49:	mov    QWORD PTR [rsp+0x348],rcx
  406f51:	mov    QWORD PTR [rsp+0x350],rdx
  406f59:	mov    rcx,QWORD PTR [rip+0xb870]        # 4127d0 <getopt_long_only@@Base+0x51f0>
  406f60:	mov    rdx,QWORD PTR [rip+0xb871]        # 4127d8 <getopt_long_only@@Base+0x51f8>
  406f67:	mov    QWORD PTR [rsp+0x358],rsi
  406f6f:	mov    rsi,QWORD PTR [rip+0xb86a]        # 4127e0 <getopt_long_only@@Base+0x5200>
  406f76:	mov    QWORD PTR [rsp+0x360],rcx
  406f7e:	mov    QWORD PTR [rsp+0x368],rdx
  406f86:	mov    QWORD PTR [rsp+0x370],rsi
  406f8e:	movabs rcx,0x40a000003f800000
  406f98:	movabs rdx,0x4100000040e00000
  406fa2:	movabs rsi,0x4130000041100000
  406fac:	mov    QWORD PTR [rsp+0x160],rcx
  406fb4:	mov    QWORD PTR [rsp+0x168],rdx
  406fbc:	mov    QWORD PTR [rsp+0x170],rsi
  406fc4:	movabs rcx,0x4188000041700000
  406fce:	movabs rdx,0x4198000041900000
  406fd8:	movabs rsi,0x41c8000041a80000
  406fe2:	mov    QWORD PTR [rsp+0x178],rcx
  406fea:	mov    QWORD PTR [rsp+0x180],rdx
  406ff2:	mov    QWORD PTR [rsp+0x188],rsi
  406ffa:	movabs rcx,0x41e0000041d80000
  407004:	movabs rdx,0x41f8000041e80000
  40700e:	movabs rsi,0x42140000420c0000
  407018:	mov    QWORD PTR [rsp+0x190],rcx
  407020:	mov    QWORD PTR [rsp+0x198],rdx
  407028:	mov    QWORD PTR [rsp+0x1a0],rsi
  407030:	movabs rcx,0x421c000042180000
  40703a:	movabs rdx,0x4234000042240000
  407044:	movabs rsi,0x42400000423c0000
  40704e:	mov    QWORD PTR [rsp+0x1a8],rcx
  407056:	mov    QWORD PTR [rsp+0x1b0],rdx
  40705e:	movabs rcx,0x2d00000029
  407068:	movabs rdx,0x300000002f
  407072:	mov    QWORD PTR [rsp+0x1b8],rsi
  40707a:	movabs rsi,0x2700000026
  407084:	movabs r11,0x1900000015
  40708e:	movabs r12,0xb00000009
  407098:	movabs rbp,0x1300000012
  4070a2:	mov    DWORD PTR [rsp+0x1c0],0x42440000
  4070ad:	mov    QWORD PTR [rsp+0x1d0],r14
  4070b5:	mov    QWORD PTR [rsp+0x1d8],r13
  4070bd:	mov    QWORD PTR [rsp+0x1e8],rax
  4070c5:	mov    QWORD PTR [rsp+0x200],r10
  4070cd:	mov    QWORD PTR [rsp+0x208],r9
  4070d5:	mov    QWORD PTR [rsp+0x210],r8
  4070dd:	mov    QWORD PTR [rsp+0x218],rsi
  4070e5:	mov    QWORD PTR [rsp+0x220],rcx
  4070ed:	mov    QWORD PTR [rsp+0x228],rdx
  4070f5:	mov    QWORD PTR [rsp+0x258],rax
  4070fd:	mov    QWORD PTR [rsp+0x270],r10
  407105:	movabs rax,0x30002f002d0029
  40710f:	mov    QWORD PTR [rsp+0x278],r9
  407117:	mov    QWORD PTR [rsp+0x280],r8
  40711f:	mov    QWORD PTR [rsp+0x288],rsi
  407127:	mov    QWORD PTR [rsp+0x290],rcx
  40712f:	movabs rsi,0x19001500130012
  407139:	movabs rcx,0x1f001d001c001b
  407143:	mov    QWORD PTR [rsp+0x298],rdx
  40714b:	movabs r9,0x8000700050001
  407155:	movabs rdx,0x27002600250023
  40715f:	movabs r8,0x11000f000b0009
  407169:	mov    r10d,0x31
  40716f:	mov    QWORD PTR [rsp+0x1f8],r11
  407177:	mov    QWORD PTR [rsp+0x268],r11
  40717f:	mov    QWORD PTR [rsp+0x80],rsi
  407187:	mov    QWORD PTR [rsp+0x88],rcx
  40718f:	mov    QWORD PTR [rsp+0x90],rdx
  407197:	mov    QWORD PTR [rsp+0x98],rax
  40719f:	mov    QWORD PTR [rsp+0x1e0],r12
  4071a7:	mov    QWORD PTR [rsp+0x1f0],rbp
  4071af:	mov    DWORD PTR [rsp+0x230],0x31
  4071ba:	mov    QWORD PTR [rsp+0x240],r14
  4071c2:	mov    QWORD PTR [rsp+0x248],r13
  4071ca:	mov    QWORD PTR [rsp+0x250],r12
  4071d2:	mov    QWORD PTR [rsp+0x260],rbp
  4071da:	mov    DWORD PTR [rsp+0x2a0],0x31
  4071e5:	mov    QWORD PTR [rsp+0x70],r9
  4071ea:	mov    QWORD PTR [rsp+0x78],r8
  4071ef:	mov    WORD PTR [rsp+0xa0],r10w
  4071f8:	mov    QWORD PTR [rsp+0xb0],r9
  407200:	mov    QWORD PTR [rsp+0xb8],r8
  407208:	mov    QWORD PTR [rsp+0xd8],rax
  407210:	movabs rax,0x302f2d2927262523
  40721a:	mov    QWORD PTR [rsp+0xc8],rcx
  407222:	mov    QWORD PTR [rsp+0xd0],rdx
  40722a:	movabs rcx,0x110f0b0908070501
  407234:	movabs rdx,0x1f1d1c1b19151312
  40723e:	mov    QWORD PTR [rsp+0x530],rax
  407246:	mov    QWORD PTR [rsp+0x550],rax
  40724e:	mov    r11d,0x31
  407254:	lea    rax,[rsp+0xf0]
  40725c:	mov    QWORD PTR [rsp+0xc0],rsi
  407264:	mov    QWORD PTR [rsp+0x528],rdx
  40726c:	mov    QWORD PTR [rsp+0x548],rdx
  407274:	mov    WORD PTR [rsp+0xe0],r11w
  40727d:	mov    QWORD PTR [rsp+0x520],rcx
  407285:	mov    BYTE PTR [rsp+0x538],0x31
  40728d:	mov    QWORD PTR [rsp+0x540],rcx
  407295:	mov    BYTE PTR [rsp+0x558],0x31
  40729d:	mov    QWORD PTR [rsp+0x380],0x1
  4072a9:	mov    QWORD PTR [rsp+0x388],0x5
  4072b5:	mov    QWORD PTR [rsp+0x390],0x7
  4072c1:	mov    QWORD PTR [rsp+0x398],0x8
  4072cd:	mov    QWORD PTR [rsp+0x3a0],0x9
  4072d9:	mov    QWORD PTR [rsp+0x3a8],0xb
  4072e5:	mov    QWORD PTR [rsp+0x3b0],0xf
  4072f1:	mov    QWORD PTR [rsp+0x3b8],0x11
  4072fd:	mov    QWORD PTR [rsp+0x3c0],0x12
  407309:	mov    QWORD PTR [rsp+0x3c8],0x13
  407315:	mov    QWORD PTR [rsp+0x3d0],0x15
  407321:	mov    QWORD PTR [rsp+0x3d8],0x19
  40732d:	mov    QWORD PTR [rsp+0x3e0],0x1b
  407339:	mov    QWORD PTR [rsp+0x3e8],0x1c
  407345:	mov    QWORD PTR [rsp+0x3f0],0x1d
  407351:	mov    QWORD PTR [rsp+0x3f8],0x1f
  40735d:	mov    QWORD PTR [rsp+0x400],0x23
  407369:	mov    QWORD PTR [rsp+0x408],0x25
  407375:	mov    QWORD PTR [rsp+0x410],0x26
  407381:	mov    QWORD PTR [rsp+0x418],0x27
  40738d:	mov    QWORD PTR [rsp+0x420],0x29
  407399:	mov    QWORD PTR [rsp+0x428],0x2d
  4073a5:	mov    QWORD PTR [rsp+0x430],0x2f
  4073b1:	mov    QWORD PTR [rsp+0x438],0x30
  4073bd:	mov    QWORD PTR [rsp+0x440],0x31
  4073c9:	mov    QWORD PTR [rsp+0x450],0x1
  4073d5:	mov    QWORD PTR [rsp+0x458],0x5
  4073e1:	mov    QWORD PTR [rsp+0x460],0x7
  4073ed:	mov    QWORD PTR [rsp+0x468],0x8
  4073f9:	mov    QWORD PTR [rsp+0x470],0x9
  407405:	mov    QWORD PTR [rsp+0x478],0xb
  407411:	mov    QWORD PTR [rsp+0x480],0xf
  40741d:	mov    QWORD PTR [rsp+0x488],0x11
  407429:	mov    QWORD PTR [rsp+0x490],0x12
  407435:	mov    QWORD PTR [rsp+0x498],0x13
  407441:	mov    QWORD PTR [rsp+0x4a0],0x15
  40744d:	mov    QWORD PTR [rsp+0x4a8],0x19
  407459:	mov    QWORD PTR [rsp+0x4b0],0x1b
  407465:	mov    QWORD PTR [rsp+0x4b8],0x1c
  407471:	mov    QWORD PTR [rsp+0x4c0],0x1d
  40747d:	mov    QWORD PTR [rsp+0x4c8],0x1f
  407489:	mov    QWORD PTR [rsp+0x4d0],0x23
  407495:	mov    QWORD PTR [rsp+0x4d8],0x25
  4074a1:	mov    QWORD PTR [rsp+0x4e0],0x26
  4074ad:	mov    QWORD PTR [rsp+0x4e8],0x27
  4074b9:	mov    QWORD PTR [rsp+0x4f0],0x29
  4074c5:	mov    QWORD PTR [rsp+0x4f8],0x2d
  4074d1:	mov    QWORD PTR [rsp+0x500],0x2f
  4074dd:	mov    QWORD PTR [rsp+0x508],0x30
  4074e9:	mov    QWORD PTR [rsp+0x510],0x31
  4074f5:	mov    DWORD PTR [rsp],0x19
  4074fc:	mov    DWORD PTR [rsp+0x10],0x19
  407504:	mov    QWORD PTR [rsp+0x8],rax
  407509:	lea    rax,[rsp+0x40]
  40750e:	mov    edx,DWORD PTR [rip+0xdcdc]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  407514:	mov    QWORD PTR [rsp+0x18],rax
  407519:	xor    esi,esi
  40751b:	movabs rax,0x190000000b
  407525:	mov    QWORD PTR [rsp+0x20],rax
  40752a:	call   402690 <Mat_CreateVer@plt>
  40752f:	test   rax,rax
  407532:	je     407760 <Mat_VarRead@plt+0x5040>
  407538:	mov    rbp,rax
  40753b:	lea    eax,[rbx-0x6]
  40753e:	cmp    eax,0x9
  407541:	ja     407558 <Mat_VarRead@plt+0x4e38>
  407543:	lea    rdx,[rip+0x74e6]        # 40ea30 <getopt_long_only@@Base+0x1450>
  40754a:	movsxd rax,DWORD PTR [rdx+rax*4]
  40754e:	add    rax,rdx
  407551:	notrack jmp rax
  407554:	nop    DWORD PTR [rax+0x0]
  407558:	cmp    QWORD PTR [rsp+0x28],0x0
  40755e:	mov    r12d,0x1
  407564:	jne    4075bb <Mat_VarRead@plt+0x4e9b>
  407566:	mov    rdi,rbp
  407569:	call   402610 <Mat_Close@plt>
  40756e:	mov    rbx,QWORD PTR [rsp+0x568]
  407576:	xor    rbx,QWORD PTR fs:0x28
  40757f:	mov    eax,r12d
  407582:	jne    40776b <Mat_VarRead@plt+0x504b>
  407588:	add    rsp,0x570
  40758f:	pop    rbx
  407590:	pop    rbp
  407591:	pop    r12
  407593:	pop    r13
  407595:	pop    r14
  407597:	ret    
  407598:	nop    DWORD PTR [rax+rax*1+0x0]
  4075a0:	lea    rax,[rsp+0x380]
  4075a8:	mov    QWORD PTR [rsp+0x28],rax
  4075ad:	mov    ebx,0xc
  4075b2:	nop    WORD PTR [rax+rax*1+0x0]
  4075b8:	xor    r12d,r12d
  4075bb:	lea    r14,[rsp+0x30]
  4075c0:	sub    rsp,0x8
  4075c4:	push   0x1
  4075c6:	mov    ecx,0x2
  4075cb:	mov    esi,0x5
  4075d0:	lea    r9,[rsp+0x10]
  4075d5:	mov    r8,r14
  4075d8:	mov    edx,ebx
  4075da:	lea    rdi,[rip+0x6a47]        # 40e028 <getopt_long_only@@Base+0xa48>
  4075e1:	call   402450 <Mat_VarCreate@plt>
  4075e6:	pop    rcx
  4075e7:	mov    r13,rax
  4075ea:	pop    rsi
  4075eb:	test   rax,rax
  4075ee:	je     407648 <Mat_VarRead@plt+0x4f28>
  4075f0:	sub    rsp,0x8
  4075f4:	mov    r9,QWORD PTR [rax+0x38]
  4075f8:	push   0x0
  4075fa:	mov    edx,ebx
  4075fc:	mov    r8,r14
  4075ff:	mov    ecx,0x2
  407604:	mov    esi,0x5
  407609:	lea    rdi,[rip+0x6a18]        # 40e028 <getopt_long_only@@Base+0xa48>
  407610:	call   402450 <Mat_VarCreate@plt>
  407615:	mov    rdi,r13
  407618:	mov    rbx,rax
  40761b:	call   4025b0 <Mat_VarFree@plt>
  407620:	pop    rax
  407621:	pop    rdx
  407622:	test   rbx,rbx
  407625:	je     407648 <Mat_VarRead@plt+0x4f28>
  407627:	mov    edx,DWORD PTR [rip+0xeef7]        # 416524 <opterr@@Base+0x10>
  40762d:	mov    rdi,rbp
  407630:	mov    rsi,rbx
  407633:	call   402470 <Mat_VarWrite@plt>
  407638:	mov    rdi,rbx
  40763b:	call   4025b0 <Mat_VarFree@plt>
  407640:	jmp    407566 <Mat_VarRead@plt+0x4e46>
  407645:	nop    DWORD PTR [rax]
  407648:	lea    rdi,[rip+0x7679]        # 40ecc8 <getopt_long_only@@Base+0x16e8>
  40764f:	xor    eax,eax
  407651:	call   402620 <Mat_Critical@plt>
  407656:	mov    r12d,0x1
  40765c:	jmp    407566 <Mat_VarRead@plt+0x4e46>
  407661:	nop    DWORD PTR [rax+0x0]
  407668:	lea    rax,[rsp+0x450]
  407670:	mov    QWORD PTR [rsp+0x28],rax
  407675:	mov    ebx,0xd
  40767a:	jmp    4075b8 <Mat_VarRead@plt+0x4e98>
  40767f:	nop
  407680:	lea    rax,[rsp+0x2b0]
  407688:	mov    QWORD PTR [rsp+0x28],rax
  40768d:	mov    ebx,0x9
  407692:	jmp    4075b8 <Mat_VarRead@plt+0x4e98>
  407697:	nop    WORD PTR [rax+rax*1+0x0]
  4076a0:	lea    rax,[rsp+0x160]
  4076a8:	mov    QWORD PTR [rsp+0x28],rax
  4076ad:	jmp    4075b8 <Mat_VarRead@plt+0x4e98>
  4076b2:	nop    WORD PTR [rax+rax*1+0x0]
  4076b8:	lea    rax,[rsp+0x520]
  4076c0:	mov    QWORD PTR [rsp+0x28],rax
  4076c5:	mov    ebx,0x1
  4076ca:	jmp    4075b8 <Mat_VarRead@plt+0x4e98>
  4076cf:	nop
  4076d0:	lea    rax,[rsp+0x540]
  4076d8:	mov    QWORD PTR [rsp+0x28],rax
  4076dd:	mov    ebx,0x2
  4076e2:	jmp    4075b8 <Mat_VarRead@plt+0x4e98>
  4076e7:	nop    WORD PTR [rax+rax*1+0x0]
  4076f0:	lea    rax,[rsp+0x70]
  4076f5:	mov    QWORD PTR [rsp+0x28],rax
  4076fa:	mov    ebx,0x3
  4076ff:	jmp    4075b8 <Mat_VarRead@plt+0x4e98>
  407704:	nop    DWORD PTR [rax+0x0]
  407708:	lea    rax,[rsp+0xb0]
  407710:	mov    QWORD PTR [rsp+0x28],rax
  407715:	mov    ebx,0x4
  40771a:	jmp    4075b8 <Mat_VarRead@plt+0x4e98>
  40771f:	nop
  407720:	lea    rax,[rsp+0x1d0]
  407728:	mov    QWORD PTR [rsp+0x28],rax
  40772d:	mov    ebx,0x5
  407732:	jmp    4075b8 <Mat_VarRead@plt+0x4e98>
  407737:	nop    WORD PTR [rax+rax*1+0x0]
  407740:	lea    rax,[rsp+0x240]
  407748:	mov    QWORD PTR [rsp+0x28],rax
  40774d:	mov    ebx,0x6
  407752:	jmp    4075b8 <Mat_VarRead@plt+0x4e98>
  407757:	nop    WORD PTR [rax+rax*1+0x0]
  407760:	mov    r12d,0x1
  407766:	jmp    40756e <Mat_VarRead@plt+0x4e4e>
  40776b:	call   4024c0 <__stack_chk_fail@plt>
  407770:	push   r15
  407772:	movabs rax,0x200000001
  40777c:	movabs rdx,0x400000000
  407786:	push   r14
  407788:	movabs rcx,0x300000002
  407792:	vpxor  xmm0,xmm0,xmm0
  407796:	push   r13
  407798:	movabs r10,0x2700000026
  4077a2:	movabs r11,0x2d00000029
  4077ac:	push   r12
  4077ae:	movabs r9,0x300000002f
  4077b8:	movabs r8,0x3700000033
  4077c2:	push   rbp
  4077c3:	movabs r15,0x500000001
  4077cd:	movabs r14,0x800000007
  4077d7:	push   rbx
  4077d8:	movabs r13,0xb00000009
  4077e2:	movabs r12,0x1300000012
  4077ec:	sub    rsp,0xa18
  4077f3:	mov    DWORD PTR [rsp+0x4],edi
  4077f7:	mov    QWORD PTR [rsp+0x8],rsi
  4077fc:	movabs rsi,0x100000004
  407806:	movabs rbp,0x1900000015
  407810:	mov    rbx,QWORD PTR fs:0x28
  407819:	mov    QWORD PTR [rsp+0xa08],rbx
  407821:	xor    ebx,ebx
  407823:	movabs rbx,0x200000000
  40782d:	mov    QWORD PTR [rsp+0x60],rbx
  407832:	movabs rbx,0x700000005
  40783c:	mov    QWORD PTR [rsp+0x68],rbx
  407841:	movabs rbx,0xc0000000a
  40784b:	mov    QWORD PTR [rsp+0x198],rax
  407853:	mov    QWORD PTR [rsp+0x1c0],rax
  40785b:	mov    QWORD PTR [rsp+0x1e8],rax
  407863:	mov    QWORD PTR [rsp+0x70],rbx
  407868:	movabs rax,0x110000000f
  407872:	movabs rbx,0x1600000014
  40787c:	mov    QWORD PTR [rsp+0x190],rdx
  407884:	mov    QWORD PTR [rsp+0x1a8],rsi
  40788c:	mov    QWORD PTR [rsp+0x1b0],rcx
  407894:	mov    QWORD PTR [rsp+0x1b8],rdx
  40789c:	mov    QWORD PTR [rsp+0x1d0],rsi
  4078a4:	mov    QWORD PTR [rsp+0x1d8],rcx
  4078ac:	mov    QWORD PTR [rsp+0x1e0],rdx
  4078b4:	mov    QWORD PTR [rsp+0x78],rax
  4078b9:	mov    QWORD PTR [rsp+0x80],rbx
  4078c1:	mov    QWORD PTR [rsp+0x50],0x5
  4078ca:	mov    QWORD PTR [rsp+0x58],0xa
  4078d3:	mov    QWORD PTR [rsp+0x1a0],0x3
  4078df:	mov    QWORD PTR [rsp+0x1c8],0x3
  4078eb:	mov    DWORD PTR [rsp+0x1f0],0x3
  4078f6:	mov    DWORD PTR [rsp+0x88],0x19
  407901:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  407907:	mov    rbx,QWORD PTR [rip+0xae12]        # 412720 <getopt_long_only@@Base+0x5140>
  40790e:	mov    rcx,QWORD PTR [rip+0xae13]        # 412728 <getopt_long_only@@Base+0x5148>
  407915:	mov    QWORD PTR [rsp+0x4a0],rbx
  40791d:	mov    rbx,QWORD PTR [rip+0xae0c]        # 412730 <getopt_long_only@@Base+0x5150>
  407924:	mov    QWORD PTR [rsp+0x4a8],rcx
  40792c:	mov    QWORD PTR [rsp+0x4b0],rbx
  407934:	mov    rcx,QWORD PTR [rip+0xadfd]        # 412738 <getopt_long_only@@Base+0x5158>
  40793b:	mov    rbx,QWORD PTR [rip+0xadfe]        # 412740 <getopt_long_only@@Base+0x5160>
  407942:	mov    rdx,QWORD PTR [rip+0xae0f]        # 412758 <getopt_long_only@@Base+0x5178>
  407949:	mov    QWORD PTR [rsp+0x4b8],rcx
  407951:	mov    QWORD PTR [rsp+0x4c0],rbx
  407959:	mov    rcx,QWORD PTR [rip+0xade8]        # 412748 <getopt_long_only@@Base+0x5168>
  407960:	mov    rbx,QWORD PTR [rip+0xade9]        # 412750 <getopt_long_only@@Base+0x5170>
  407967:	mov    QWORD PTR [rsp+0x4c8],rcx
  40796f:	mov    QWORD PTR [rsp+0x4d0],rbx
  407977:	mov    rcx,QWORD PTR [rip+0xade2]        # 412760 <getopt_long_only@@Base+0x5180>
  40797e:	mov    rbx,QWORD PTR [rip+0xade3]        # 412768 <getopt_long_only@@Base+0x5188>
  407985:	mov    QWORD PTR [rsp+0x4d8],rdx
  40798d:	mov    rdx,QWORD PTR [rip+0xaddc]        # 412770 <getopt_long_only@@Base+0x5190>
  407994:	mov    QWORD PTR [rsp+0x4e0],rcx
  40799c:	mov    QWORD PTR [rsp+0x4e8],rbx
  4079a4:	mov    QWORD PTR [rsp+0x4f0],rdx
  4079ac:	mov    rbx,QWORD PTR [rip+0xadcd]        # 412780 <getopt_long_only@@Base+0x51a0>
  4079b3:	mov    rdx,QWORD PTR [rip+0xadce]        # 412788 <getopt_long_only@@Base+0x51a8>
  4079ba:	mov    rcx,QWORD PTR [rip+0xadb7]        # 412778 <getopt_long_only@@Base+0x5198>
  4079c1:	mov    QWORD PTR [rsp+0x500],rbx
  4079c9:	mov    QWORD PTR [rsp+0x508],rdx
  4079d1:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  4079d7:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4079dd:	mov    QWORD PTR [rsp+0x10],0x0
  4079e6:	mov    QWORD PTR [rsp+0x18],0x0
  4079ef:	mov    QWORD PTR [rsp+0x4f8],rcx
  4079f7:	mov    rcx,QWORD PTR [rip+0xad92]        # 412790 <getopt_long_only@@Base+0x51b0>
  4079fe:	mov    rbx,QWORD PTR [rip+0xad93]        # 412798 <getopt_long_only@@Base+0x51b8>
  407a05:	mov    rdx,QWORD PTR [rip+0xad94]        # 4127a0 <getopt_long_only@@Base+0x51c0>
  407a0c:	mov    QWORD PTR [rsp+0x510],rcx
  407a14:	mov    rcx,QWORD PTR [rip+0xad8d]        # 4127a8 <getopt_long_only@@Base+0x51c8>
  407a1b:	mov    QWORD PTR [rsp+0x518],rbx
  407a23:	mov    QWORD PTR [rsp+0x520],rdx
  407a2b:	mov    rbx,QWORD PTR [rip+0xad7e]        # 4127b0 <getopt_long_only@@Base+0x51d0>
  407a32:	mov    rdx,QWORD PTR [rip+0xad7f]        # 4127b8 <getopt_long_only@@Base+0x51d8>
  407a39:	mov    QWORD PTR [rsp+0x528],rcx
  407a41:	mov    rcx,QWORD PTR [rip+0xad78]        # 4127c0 <getopt_long_only@@Base+0x51e0>
  407a48:	mov    QWORD PTR [rsp+0x530],rbx
  407a50:	mov    QWORD PTR [rsp+0x538],rdx
  407a58:	mov    rbx,QWORD PTR [rip+0xad69]        # 4127c8 <getopt_long_only@@Base+0x51e8>
  407a5f:	mov    rdx,QWORD PTR [rip+0xad6a]        # 4127d0 <getopt_long_only@@Base+0x51f0>
  407a66:	mov    QWORD PTR [rsp+0x540],rcx
  407a6e:	mov    rcx,QWORD PTR [rip+0xad63]        # 4127d8 <getopt_long_only@@Base+0x51f8>
  407a75:	mov    QWORD PTR [rsp+0x548],rbx
  407a7d:	mov    QWORD PTR [rsp+0x550],rdx
  407a85:	mov    rbx,QWORD PTR [rip+0xad54]        # 4127e0 <getopt_long_only@@Base+0x5200>
  407a8c:	mov    rdx,QWORD PTR [rip+0xad55]        # 4127e8 <getopt_long_only@@Base+0x5208>
  407a93:	mov    QWORD PTR [rsp+0x558],rcx
  407a9b:	mov    rcx,QWORD PTR [rip+0xad4e]        # 4127f0 <getopt_long_only@@Base+0x5210>
  407aa2:	mov    QWORD PTR [rsp+0x560],rbx
  407aaa:	mov    QWORD PTR [rsp+0x570],rdx
  407ab2:	mov    QWORD PTR [rsp+0x578],rcx
  407aba:	mov    rdx,QWORD PTR [rip+0xad3f]        # 412800 <getopt_long_only@@Base+0x5220>
  407ac1:	mov    rcx,QWORD PTR [rip+0xad40]        # 412808 <getopt_long_only@@Base+0x5228>
  407ac8:	mov    rbx,QWORD PTR [rip+0xad29]        # 4127f8 <getopt_long_only@@Base+0x5218>
  407acf:	mov    QWORD PTR [rsp+0x588],rdx
  407ad7:	mov    QWORD PTR [rsp+0x590],rcx
  407adf:	mov    QWORD PTR [rsp+0x580],rbx
  407ae7:	mov    rbx,QWORD PTR [rip+0xad22]        # 412810 <getopt_long_only@@Base+0x5230>
  407aee:	mov    rdx,QWORD PTR [rip+0xad23]        # 412818 <getopt_long_only@@Base+0x5238>
  407af5:	mov    rcx,QWORD PTR [rip+0xad24]        # 412820 <getopt_long_only@@Base+0x5240>
  407afc:	mov    QWORD PTR [rsp+0x598],rbx
  407b04:	mov    rbx,QWORD PTR [rip+0xad1d]        # 412828 <getopt_long_only@@Base+0x5248>
  407b0b:	mov    QWORD PTR [rsp+0x5a0],rdx
  407b13:	mov    QWORD PTR [rsp+0x5a8],rcx
  407b1b:	mov    rdx,QWORD PTR [rip+0xad0e]        # 412830 <getopt_long_only@@Base+0x5250>
  407b22:	mov    rcx,QWORD PTR [rip+0xad0f]        # 412838 <getopt_long_only@@Base+0x5258>
  407b29:	mov    QWORD PTR [rsp+0x5b0],rbx
  407b31:	mov    rbx,QWORD PTR [rip+0xad08]        # 412840 <getopt_long_only@@Base+0x5260>
  407b38:	mov    QWORD PTR [rsp+0x5b8],rdx
  407b40:	mov    QWORD PTR [rsp+0x5c0],rcx
  407b48:	mov    rdx,QWORD PTR [rip+0xacf9]        # 412848 <getopt_long_only@@Base+0x5268>
  407b4f:	mov    rcx,QWORD PTR [rip+0xacfa]        # 412850 <getopt_long_only@@Base+0x5270>
  407b56:	mov    QWORD PTR [rsp+0x5c8],rbx
  407b5e:	mov    rbx,QWORD PTR [rip+0xacf3]        # 412858 <getopt_long_only@@Base+0x5278>
  407b65:	mov    QWORD PTR [rsp+0x5d0],rdx
  407b6d:	mov    QWORD PTR [rsp+0x5d8],rcx
  407b75:	mov    rdx,QWORD PTR [rip+0xace4]        # 412860 <getopt_long_only@@Base+0x5280>
  407b7c:	mov    rcx,QWORD PTR [rip+0xace5]        # 412868 <getopt_long_only@@Base+0x5288>
  407b83:	mov    QWORD PTR [rsp+0x5e0],rbx
  407b8b:	mov    rbx,QWORD PTR [rip+0xacde]        # 412870 <getopt_long_only@@Base+0x5290>
  407b92:	mov    QWORD PTR [rsp+0x5e8],rdx
  407b9a:	mov    QWORD PTR [rsp+0x5f0],rcx
  407ba2:	mov    QWORD PTR [rsp+0x5f8],rbx
  407baa:	mov    rcx,QWORD PTR [rip+0xaccf]        # 412880 <getopt_long_only@@Base+0x52a0>
  407bb1:	mov    rbx,QWORD PTR [rip+0xacd0]        # 412888 <getopt_long_only@@Base+0x52a8>
  407bb8:	mov    rdx,QWORD PTR [rip+0xacb9]        # 412878 <getopt_long_only@@Base+0x5298>
  407bbf:	mov    QWORD PTR [rsp+0x608],rcx
  407bc7:	mov    QWORD PTR [rsp+0x610],rbx
  407bcf:	mov    QWORD PTR [rsp+0x600],rdx
  407bd7:	mov    rdx,QWORD PTR [rip+0xacb2]        # 412890 <getopt_long_only@@Base+0x52b0>
  407bde:	mov    rcx,QWORD PTR [rip+0xacb3]        # 412898 <getopt_long_only@@Base+0x52b8>
  407be5:	mov    rbx,QWORD PTR [rip+0xacb4]        # 4128a0 <getopt_long_only@@Base+0x52c0>
  407bec:	mov    QWORD PTR [rsp+0x618],rdx
  407bf4:	mov    rdx,QWORD PTR [rip+0xacad]        # 4128a8 <getopt_long_only@@Base+0x52c8>
  407bfb:	mov    QWORD PTR [rsp+0x620],rcx
  407c03:	mov    QWORD PTR [rsp+0x628],rbx
  407c0b:	mov    QWORD PTR [rsp+0x630],rdx
  407c13:	movabs rcx,0x40a000003f800000
  407c1d:	movabs rbx,0x4100000040e00000
  407c27:	movabs rdx,0x4130000041100000
  407c31:	mov    QWORD PTR [rsp+0x200],rcx
  407c39:	mov    QWORD PTR [rsp+0x208],rbx
  407c41:	mov    QWORD PTR [rsp+0x210],rdx
  407c49:	movabs rcx,0x4188000041700000
  407c53:	movabs rbx,0x4198000041900000
  407c5d:	movabs rdx,0x41c8000041a80000
  407c67:	mov    QWORD PTR [rsp+0x218],rcx
  407c6f:	mov    QWORD PTR [rsp+0x220],rbx
  407c77:	mov    QWORD PTR [rsp+0x228],rdx
  407c7f:	movabs rcx,0x41e0000041d80000
  407c89:	movabs rbx,0x41f8000041e80000
  407c93:	movabs rdx,0x42140000420c0000
  407c9d:	mov    QWORD PTR [rsp+0x230],rcx
  407ca5:	mov    QWORD PTR [rsp+0x238],rbx
  407cad:	mov    QWORD PTR [rsp+0x240],rdx
  407cb5:	movabs rcx,0x421c000042180000
  407cbf:	movabs rbx,0x4234000042240000
  407cc9:	movabs rdx,0x42400000423c0000
  407cd3:	mov    QWORD PTR [rsp+0x248],rcx
  407cdb:	mov    QWORD PTR [rsp+0x250],rbx
  407ce3:	mov    QWORD PTR [rsp+0x258],rdx
  407ceb:	movabs rcx,0x425c0000424c0000
  407cf5:	movabs rbx,0x4268000042640000
  407cff:	movabs rdx,0x42740000426c0000
  407d09:	mov    QWORD PTR [rsp+0x270],rcx
  407d11:	mov    QWORD PTR [rsp+0x278],rbx
  407d19:	mov    QWORD PTR [rsp+0x280],rdx
  407d21:	movabs rcx,0x4286000042820000
  407d2b:	movabs rbx,0x428a000042880000
  407d35:	movabs rdx,0x42960000428e0000
  407d3f:	mov    QWORD PTR [rsp+0x288],rcx
  407d47:	mov    QWORD PTR [rsp+0x290],rbx
  407d4f:	mov    QWORD PTR [rsp+0x298],rdx
  407d57:	movabs rcx,0x429c0000429a0000
  407d61:	movabs rbx,0x42a20000429e0000
  407d6b:	movabs rdx,0x42ae000042aa0000
  407d75:	mov    QWORD PTR [rsp+0x2a0],rcx
  407d7d:	mov    QWORD PTR [rsp+0x2a8],rbx
  407d85:	mov    QWORD PTR [rsp+0x2b0],rdx
  407d8d:	movabs rcx,0x42b2000042b00000
  407d97:	movabs rbx,0x42be000042b60000
  407da1:	movabs rdx,0x42c4000042c20000
  407dab:	mov    QWORD PTR [rsp+0x2b8],rcx
  407db3:	mov    QWORD PTR [rsp+0x2c0],rbx
  407dbb:	movabs rcx,0x1f0000001d
  407dc5:	mov    DWORD PTR [rsp+0x260],0x42440000
  407dd0:	mov    QWORD PTR [rsp+0x2c8],rdx
  407dd8:	movabs rdx,0x2500000023
  407de2:	mov    QWORD PTR [rsp+0x318],rcx
  407dea:	mov    QWORD PTR [rsp+0x320],rdx
  407df2:	movabs rsi,0x3a00000039
  407dfc:	movabs rcx,0x3d0000003b
  407e06:	movabs rdx,0x4300000041
  407e10:	movabs rbx,0x1c0000001b
  407e1a:	movabs rdi,0x5700000055
  407e24:	mov    QWORD PTR [rsp+0x2f8],rax
  407e2c:	mov    QWORD PTR [rsp+0x328],r10
  407e34:	mov    QWORD PTR [rsp+0x330],r11
  407e3c:	movabs r10,0x4b00000047
  407e46:	movabs r11,0x4500000044
  407e50:	mov    QWORD PTR [rsp+0x338],r9
  407e58:	mov    QWORD PTR [rsp+0x350],r8
  407e60:	movabs r9,0x4e0000004d
  407e6a:	movabs r8,0x510000004f
  407e74:	mov    QWORD PTR [rsp+0x358],rsi
  407e7c:	mov    QWORD PTR [rsp+0x360],rcx
  407e84:	movabs rsi,0x5900000058
  407e8e:	movabs rcx,0x5f0000005b
  407e98:	mov    QWORD PTR [rsp+0x368],rdx
  407ea0:	mov    QWORD PTR [rsp+0x3d8],rax
  407ea8:	movabs rdx,0x6200000061
  407eb2:	movabs rax,0x1f0000001d
  407ebc:	mov    QWORD PTR [rsp+0x2e0],r15
  407ec4:	mov    QWORD PTR [rsp+0x2e8],r14
  407ecc:	mov    QWORD PTR [rsp+0x2f0],r13
  407ed4:	mov    QWORD PTR [rsp+0x300],r12
  407edc:	mov    QWORD PTR [rsp+0x308],rbp
  407ee4:	mov    QWORD PTR [rsp+0x310],rbx
  407eec:	mov    QWORD PTR [rsp+0x370],r11
  407ef4:	mov    QWORD PTR [rsp+0x378],r10
  407efc:	mov    QWORD PTR [rsp+0x380],r9
  407f04:	mov    QWORD PTR [rsp+0x388],r8
  407f0c:	mov    QWORD PTR [rsp+0x390],rdi
  407f14:	mov    QWORD PTR [rsp+0x398],rsi
  407f1c:	mov    QWORD PTR [rsp+0x3a0],rcx
  407f24:	mov    QWORD PTR [rsp+0x3a8],rdx
  407f2c:	mov    QWORD PTR [rsp+0x3c0],r15
  407f34:	mov    QWORD PTR [rsp+0x3c8],r14
  407f3c:	mov    QWORD PTR [rsp+0x3d0],r13
  407f44:	mov    QWORD PTR [rsp+0x3e0],r12
  407f4c:	mov    DWORD PTR [rsp+0x2d0],0x42c60000
  407f57:	mov    DWORD PTR [rsp+0x340],0x31
  407f62:	mov    DWORD PTR [rsp+0x3b0],0x63
  407f6d:	mov    QWORD PTR [rsp+0x3e8],rbp
  407f75:	mov    QWORD PTR [rsp+0x3f8],rax
  407f7d:	movabs rax,0x2500000023
  407f87:	mov    QWORD PTR [rsp+0x400],rax
  407f8f:	movabs rax,0x2700000026
  407f99:	mov    QWORD PTR [rsp+0x408],rax
  407fa1:	movabs rax,0x2d00000029
  407fab:	mov    QWORD PTR [rsp+0x410],rax
  407fb3:	movabs rax,0x300000002f
  407fbd:	mov    QWORD PTR [rsp+0x418],rax
  407fc5:	movabs rax,0x3700000033
  407fcf:	mov    QWORD PTR [rsp+0x430],rax
  407fd7:	movabs rax,0x3a00000039
  407fe1:	mov    QWORD PTR [rsp+0x438],rax
  407fe9:	movabs rax,0x3d0000003b
  407ff3:	mov    QWORD PTR [rsp+0x440],rax
  407ffb:	mov    QWORD PTR [rsp+0x470],rdi
  408003:	movabs rax,0x4300000041
  40800d:	mov    edi,0x31
  408012:	mov    QWORD PTR [rsp+0x3f0],rbx
  40801a:	mov    QWORD PTR [rsp+0x448],rax
  408022:	mov    QWORD PTR [rsp+0x450],r11
  40802a:	movabs rax,0x620061005f005b
  408034:	mov    QWORD PTR [rsp+0x458],r10
  40803c:	mov    QWORD PTR [rsp+0x460],r9
  408044:	mov    QWORD PTR [rsp+0x468],r8
  40804c:	mov    QWORD PTR [rsp+0x478],rsi
  408054:	movabs r8,0x3a003900370033
  40805e:	movabs rsi,0x4b004700450044
  408068:	mov    QWORD PTR [rsp+0x480],rcx
  408070:	mov    QWORD PTR [rsp+0x488],rdx
  408078:	movabs rcx,0x51004f004e004d
  408082:	movabs rdx,0x59005800570055
  40808c:	movabs r12,0x8000700050001
  408096:	movabs rbp,0x11000f000b0009
  4080a0:	movabs rbx,0x19001500130012
  4080aa:	movabs r11,0x1f001d001c001b
  4080b4:	movabs r10,0x27002600250023
  4080be:	movabs r9,0x30002f002d0029
  4080c8:	mov    WORD PTR [rsp+0xc0],di
  4080d0:	movabs rdi,0x430041003d003b
  4080da:	mov    QWORD PTR [rsp+0xd0],r8
  4080e2:	mov    QWORD PTR [rsp+0xd8],rdi
  4080ea:	mov    QWORD PTR [rsp+0xe0],rsi
  4080f2:	mov    QWORD PTR [rsp+0xe8],rcx
  4080fa:	mov    QWORD PTR [rsp+0xf0],rdx
  408102:	mov    DWORD PTR [rsp+0x420],0x31
  40810d:	mov    DWORD PTR [rsp+0x490],0x63
  408118:	mov    QWORD PTR [rsp+0x90],r12
  408120:	mov    QWORD PTR [rsp+0x98],rbp
  408128:	mov    QWORD PTR [rsp+0xa0],rbx
  408130:	mov    QWORD PTR [rsp+0xa8],r11
  408138:	mov    QWORD PTR [rsp+0xb0],r10
  408140:	mov    QWORD PTR [rsp+0xb8],r9
  408148:	mov    r13d,0x63
  40814e:	mov    QWORD PTR [rsp+0xf8],rax
  408156:	mov    r14d,0x31
  40815c:	mov    QWORD PTR [rsp+0x150],r8
  408164:	mov    QWORD PTR [rsp+0x158],rdi
  40816c:	mov    QWORD PTR [rsp+0x160],rsi
  408174:	movabs rdi,0x1f1d1c1b19151312
  40817e:	movabs rsi,0x302f2d2927262523
  408188:	mov    QWORD PTR [rsp+0x168],rcx
  408190:	mov    QWORD PTR [rsp+0x170],rdx
  408198:	movabs rcx,0x43413d3b3a393733
  4081a2:	movabs rdx,0x514f4e4d4b474544
  4081ac:	mov    QWORD PTR [rsp+0x178],rax
  4081b4:	movabs r8,0x110f0b0908070501
  4081be:	movabs rax,0x62615f5b59585755
  4081c8:	mov    r15d,0x63
  4081ce:	mov    QWORD PTR [rsp+0x988],rdi
  4081d6:	mov    QWORD PTR [rsp+0x990],rsi
  4081de:	mov    QWORD PTR [rsp+0x9a0],rcx
  4081e6:	mov    QWORD PTR [rsp+0x9a8],rdx
  4081ee:	mov    QWORD PTR [rsp+0x9b0],rax
  4081f6:	mov    QWORD PTR [rsp+0x9c8],rdi
  4081fe:	mov    QWORD PTR [rsp+0x9d0],rsi
  408206:	mov    QWORD PTR [rsp+0x9e0],rcx
  40820e:	mov    QWORD PTR [rsp+0x9e8],rdx
  408216:	mov    QWORD PTR [rsp+0x9f0],rax
  40821e:	mov    WORD PTR [rsp+0x100],r13w
  408227:	lea    rax,[rsp+0x190]
  40822f:	mov    QWORD PTR [rsp+0x110],r12
  408237:	mov    QWORD PTR [rsp+0x118],rbp
  40823f:	mov    QWORD PTR [rsp+0x120],rbx
  408247:	mov    QWORD PTR [rsp+0x128],r11
  40824f:	mov    QWORD PTR [rsp+0x130],r10
  408257:	mov    QWORD PTR [rsp+0x138],r9
  40825f:	mov    WORD PTR [rsp+0x140],r14w
  408268:	mov    WORD PTR [rsp+0x180],r15w
  408271:	mov    QWORD PTR [rsp+0x980],r8
  408279:	mov    BYTE PTR [rsp+0x998],0x31
  408281:	mov    BYTE PTR [rsp+0x9b8],0x63
  408289:	mov    QWORD PTR [rsp+0x9c0],r8
  408291:	mov    BYTE PTR [rsp+0x9d8],0x31
  408299:	mov    BYTE PTR [rsp+0x9f8],0x63
  4082a1:	mov    QWORD PTR [rsp+0x640],0x1
  4082ad:	mov    QWORD PTR [rsp+0x648],0x5
  4082b9:	mov    QWORD PTR [rsp+0x650],0x7
  4082c5:	mov    QWORD PTR [rsp+0x658],0x8
  4082d1:	mov    QWORD PTR [rsp+0x660],0x9
  4082dd:	mov    QWORD PTR [rsp+0x668],0xb
  4082e9:	mov    QWORD PTR [rsp+0x670],0xf
  4082f5:	mov    QWORD PTR [rsp+0x678],0x11
  408301:	mov    QWORD PTR [rsp+0x680],0x12
  40830d:	mov    QWORD PTR [rsp+0x688],0x13
  408319:	mov    QWORD PTR [rsp+0x690],0x15
  408325:	mov    QWORD PTR [rsp+0x698],0x19
  408331:	mov    QWORD PTR [rsp+0x6a0],0x1b
  40833d:	mov    QWORD PTR [rsp+0x6a8],0x1c
  408349:	mov    QWORD PTR [rsp+0x6b0],0x1d
  408355:	mov    QWORD PTR [rsp+0x6b8],0x1f
  408361:	mov    QWORD PTR [rsp+0x6c0],0x23
  40836d:	mov    QWORD PTR [rsp+0x6c8],0x25
  408379:	mov    QWORD PTR [rsp+0x6d0],0x26
  408385:	mov    QWORD PTR [rsp+0x6d8],0x27
  408391:	mov    QWORD PTR [rsp+0x6e0],0x29
  40839d:	mov    QWORD PTR [rsp+0x6e8],0x2d
  4083a9:	mov    QWORD PTR [rsp+0x6f0],0x2f
  4083b5:	mov    QWORD PTR [rsp+0x6f8],0x30
  4083c1:	mov    QWORD PTR [rsp+0x700],0x31
  4083cd:	mov    QWORD PTR [rsp+0x710],0x33
  4083d9:	mov    QWORD PTR [rsp+0x718],0x37
  4083e5:	mov    QWORD PTR [rsp+0x720],0x39
  4083f1:	mov    QWORD PTR [rsp+0x728],0x3a
  4083fd:	mov    QWORD PTR [rsp+0x730],0x3b
  408409:	mov    QWORD PTR [rsp+0x738],0x3d
  408415:	mov    QWORD PTR [rsp+0x740],0x41
  408421:	mov    QWORD PTR [rsp+0x748],0x43
  40842d:	mov    QWORD PTR [rsp+0x750],0x44
  408439:	mov    QWORD PTR [rsp+0x758],0x45
  408445:	mov    QWORD PTR [rsp+0x760],0x47
  408451:	mov    QWORD PTR [rsp+0x768],0x4b
  40845d:	mov    QWORD PTR [rsp+0x770],0x4d
  408469:	mov    QWORD PTR [rsp+0x778],0x4e
  408475:	mov    QWORD PTR [rsp+0x780],0x4f
  408481:	mov    QWORD PTR [rsp+0x788],0x51
  40848d:	mov    QWORD PTR [rsp+0x790],0x55
  408499:	mov    QWORD PTR [rsp+0x798],0x57
  4084a5:	mov    QWORD PTR [rsp+0x7a0],0x58
  4084b1:	mov    QWORD PTR [rsp+0x7a8],0x59
  4084bd:	mov    QWORD PTR [rsp+0x7b0],0x5b
  4084c9:	mov    QWORD PTR [rsp+0x7b8],0x5f
  4084d5:	mov    QWORD PTR [rsp+0x7c0],0x61
  4084e1:	mov    QWORD PTR [rsp+0x7c8],0x62
  4084ed:	mov    QWORD PTR [rsp+0x7d0],0x63
  4084f9:	mov    QWORD PTR [rsp+0x7e0],0x1
  408505:	mov    QWORD PTR [rsp+0x7e8],0x5
  408511:	mov    QWORD PTR [rsp+0x7f0],0x7
  40851d:	mov    QWORD PTR [rsp+0x7f8],0x8
  408529:	mov    QWORD PTR [rsp+0x800],0x9
  408535:	mov    QWORD PTR [rsp+0x808],0xb
  408541:	mov    QWORD PTR [rsp+0x810],0xf
  40854d:	mov    QWORD PTR [rsp+0x818],0x11
  408559:	mov    QWORD PTR [rsp+0x820],0x12
  408565:	mov    QWORD PTR [rsp+0x828],0x13
  408571:	mov    QWORD PTR [rsp+0x830],0x15
  40857d:	mov    QWORD PTR [rsp+0x838],0x19
  408589:	mov    QWORD PTR [rsp+0x840],0x1b
  408595:	mov    QWORD PTR [rsp+0x848],0x1c
  4085a1:	mov    QWORD PTR [rsp+0x850],0x1d
  4085ad:	mov    QWORD PTR [rsp+0x858],0x1f
  4085b9:	mov    QWORD PTR [rsp+0x860],0x23
  4085c5:	mov    QWORD PTR [rsp+0x868],0x25
  4085d1:	mov    QWORD PTR [rsp+0x870],0x26
  4085dd:	mov    QWORD PTR [rsp+0x878],0x27
  4085e9:	mov    QWORD PTR [rsp+0x880],0x29
  4085f5:	mov    QWORD PTR [rsp+0x888],0x2d
  408601:	mov    QWORD PTR [rsp+0x890],0x2f
  40860d:	mov    QWORD PTR [rsp+0x898],0x30
  408619:	mov    QWORD PTR [rsp+0x8a0],0x31
  408625:	mov    QWORD PTR [rsp+0x8b0],0x33
  408631:	mov    QWORD PTR [rsp+0x8b8],0x37
  40863d:	mov    QWORD PTR [rsp+0x8c0],0x39
  408649:	mov    QWORD PTR [rsp+0x8c8],0x3a
  408655:	mov    QWORD PTR [rsp+0x8d0],0x3b
  408661:	mov    QWORD PTR [rsp+0x8d8],0x3d
  40866d:	mov    QWORD PTR [rsp+0x8e0],0x41
  408679:	mov    QWORD PTR [rsp+0x8e8],0x43
  408685:	mov    QWORD PTR [rsp+0x8f0],0x44
  408691:	mov    QWORD PTR [rsp+0x8f8],0x45
  40869d:	mov    QWORD PTR [rsp+0x900],0x47
  4086a9:	mov    QWORD PTR [rsp+0x908],0x4b
  4086b5:	mov    QWORD PTR [rsp+0x910],0x4d
  4086c1:	mov    QWORD PTR [rsp+0x918],0x4e
  4086cd:	mov    QWORD PTR [rsp+0x920],0x4f
  4086d9:	mov    QWORD PTR [rsp+0x928],0x51
  4086e5:	mov    QWORD PTR [rsp+0x930],0x55
  4086f1:	mov    QWORD PTR [rsp+0x938],0x57
  4086fd:	mov    QWORD PTR [rsp+0x940],0x58
  408709:	mov    QWORD PTR [rsp+0x948],0x59
  408715:	mov    QWORD PTR [rsp+0x950],0x5b
  408721:	mov    QWORD PTR [rsp+0x958],0x5f
  40872d:	mov    QWORD PTR [rsp+0x960],0x61
  408739:	mov    QWORD PTR [rsp+0x968],0x62
  408745:	mov    QWORD PTR [rsp+0x970],0x63
  408751:	mov    DWORD PTR [rsp+0x20],0x19
  408759:	mov    edx,DWORD PTR [rip+0xca91]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  40875f:	mov    rdi,QWORD PTR [rsp+0x8]
  408764:	mov    QWORD PTR [rsp+0x28],rax
  408769:	movabs rcx,0x190000000b
  408773:	lea    rax,[rsp+0x60]
  408778:	xor    esi,esi
  40877a:	mov    DWORD PTR [rsp+0x30],0x19
  408782:	mov    QWORD PTR [rsp+0x38],rax
  408787:	mov    QWORD PTR [rsp+0x40],rcx
  40878c:	call   402690 <Mat_CreateVer@plt>
  408791:	test   rax,rax
  408794:	je     408ae0 <Mat_VarRead@plt+0x63c0>
  40879a:	mov    rbx,rax
  40879d:	mov    eax,DWORD PTR [rsp+0x4]
  4087a1:	sub    eax,0x6
  4087a4:	cmp    eax,0x9
  4087a7:	ja     4087c0 <Mat_VarRead@plt+0x60a0>
  4087a9:	lea    rdx,[rip+0x62a8]        # 40ea58 <getopt_long_only@@Base+0x1478>
  4087b0:	movsxd rax,DWORD PTR [rdx+rax*4]
  4087b4:	add    rax,rdx
  4087b7:	notrack jmp rax
  4087ba:	nop    WORD PTR [rax+rax*1+0x0]
  4087c0:	cmp    QWORD PTR [rsp+0x48],0x0
  4087c6:	mov    ebp,0x1
  4087cb:	jne    408830 <Mat_VarRead@plt+0x6110>
  4087cd:	mov    rdi,rbx
  4087d0:	call   402610 <Mat_Close@plt>
  4087d5:	mov    rdi,QWORD PTR [rsp+0xa08]
  4087dd:	xor    rdi,QWORD PTR fs:0x28
  4087e6:	mov    eax,ebp
  4087e8:	jne    408aea <Mat_VarRead@plt+0x63ca>
  4087ee:	add    rsp,0xa18
  4087f5:	pop    rbx
  4087f6:	pop    rbp
  4087f7:	pop    r12
  4087f9:	pop    r13
  4087fb:	pop    r14
  4087fd:	pop    r15
  4087ff:	ret    
  408800:	lea    rax,[rsp+0x980]
  408808:	mov    QWORD PTR [rsp+0x10],rax
  40880d:	lea    rax,[rsp+0x9a0]
  408815:	mov    QWORD PTR [rsp+0x18],rax
  40881a:	lea    rax,[rsp+0x10]
  40881f:	mov    QWORD PTR [rsp+0x48],rax
  408824:	mov    DWORD PTR [rsp+0x4],0x1
  40882c:	xor    ebp,ebp
  40882e:	xchg   ax,ax
  408830:	lea    r13,[rsp+0x50]
  408835:	sub    rsp,0x8
  408839:	push   0x801
  40883e:	mov    ecx,0x2
  408843:	mov    esi,0x5
  408848:	mov    r14d,DWORD PTR [rsp+0x14]
  40884d:	lea    r9,[rsp+0x30]
  408852:	mov    r8,r13
  408855:	mov    edx,r14d
  408858:	lea    rdi,[rip+0x57c9]        # 40e028 <getopt_long_only@@Base+0xa48>
  40885f:	call   402450 <Mat_VarCreate@plt>
  408864:	pop    rcx
  408865:	mov    r12,rax
  408868:	pop    rsi
  408869:	test   rax,rax
  40886c:	je     4088d0 <Mat_VarRead@plt+0x61b0>
  40886e:	sub    rsp,0x8
  408872:	mov    r9,QWORD PTR [rax+0x38]
  408876:	push   0x800
  40887b:	mov    r8,r13
  40887e:	mov    edx,r14d
  408881:	mov    ecx,0x2
  408886:	mov    esi,0x5
  40888b:	lea    rdi,[rip+0x5796]        # 40e028 <getopt_long_only@@Base+0xa48>
  408892:	call   402450 <Mat_VarCreate@plt>
  408897:	mov    rdi,r12
  40889a:	mov    r13,rax
  40889d:	call   4025b0 <Mat_VarFree@plt>
  4088a2:	pop    rax
  4088a3:	pop    rdx
  4088a4:	test   r13,r13
  4088a7:	je     4088d0 <Mat_VarRead@plt+0x61b0>
  4088a9:	mov    edx,DWORD PTR [rip+0xdc75]        # 416524 <opterr@@Base+0x10>
  4088af:	mov    rdi,rbx
  4088b2:	mov    rsi,r13
  4088b5:	call   402470 <Mat_VarWrite@plt>
  4088ba:	mov    rdi,r13
  4088bd:	call   4025b0 <Mat_VarFree@plt>
  4088c2:	jmp    4087cd <Mat_VarRead@plt+0x60ad>
  4088c7:	nop    WORD PTR [rax+rax*1+0x0]
  4088d0:	lea    rdi,[rip+0x6429]        # 40ed00 <getopt_long_only@@Base+0x1720>
  4088d7:	xor    eax,eax
  4088d9:	call   402620 <Mat_Critical@plt>
  4088de:	mov    ebp,0x1
  4088e3:	jmp    4087cd <Mat_VarRead@plt+0x60ad>
  4088e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4088f0:	lea    rax,[rsp+0x640]
  4088f8:	mov    QWORD PTR [rsp+0x10],rax
  4088fd:	lea    rax,[rsp+0x710]
  408905:	mov    QWORD PTR [rsp+0x18],rax
  40890a:	lea    rax,[rsp+0x10]
  40890f:	mov    QWORD PTR [rsp+0x48],rax
  408914:	mov    DWORD PTR [rsp+0x4],0xc
  40891c:	xor    ebp,ebp
  40891e:	jmp    408830 <Mat_VarRead@plt+0x6110>
  408923:	nop    DWORD PTR [rax+rax*1+0x0]
  408928:	lea    rax,[rsp+0x7e0]
  408930:	mov    QWORD PTR [rsp+0x10],rax
  408935:	lea    rax,[rsp+0x8b0]
  40893d:	mov    QWORD PTR [rsp+0x18],rax
  408942:	lea    rax,[rsp+0x10]
  408947:	mov    QWORD PTR [rsp+0x48],rax
  40894c:	mov    DWORD PTR [rsp+0x4],0xd
  408954:	xor    ebp,ebp
  408956:	jmp    408830 <Mat_VarRead@plt+0x6110>
  40895b:	nop    DWORD PTR [rax+rax*1+0x0]
  408960:	lea    rax,[rsp+0x4a0]
  408968:	mov    QWORD PTR [rsp+0x10],rax
  40896d:	lea    rax,[rsp+0x570]
  408975:	mov    QWORD PTR [rsp+0x18],rax
  40897a:	lea    rax,[rsp+0x10]
  40897f:	mov    QWORD PTR [rsp+0x48],rax
  408984:	mov    DWORD PTR [rsp+0x4],0x9
  40898c:	xor    ebp,ebp
  40898e:	jmp    408830 <Mat_VarRead@plt+0x6110>
  408993:	nop    DWORD PTR [rax+rax*1+0x0]
  408998:	lea    rax,[rsp+0x200]
  4089a0:	mov    QWORD PTR [rsp+0x10],rax
  4089a5:	lea    rax,[rsp+0x270]
  4089ad:	mov    QWORD PTR [rsp+0x18],rax
  4089b2:	lea    rax,[rsp+0x10]
  4089b7:	mov    QWORD PTR [rsp+0x48],rax
  4089bc:	xor    ebp,ebp
  4089be:	jmp    408830 <Mat_VarRead@plt+0x6110>
  4089c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4089c8:	lea    rax,[rsp+0x9c0]
  4089d0:	mov    QWORD PTR [rsp+0x10],rax
  4089d5:	lea    rax,[rsp+0x9e0]
  4089dd:	mov    QWORD PTR [rsp+0x18],rax
  4089e2:	lea    rax,[rsp+0x10]
  4089e7:	mov    QWORD PTR [rsp+0x48],rax
  4089ec:	mov    DWORD PTR [rsp+0x4],0x2
  4089f4:	xor    ebp,ebp
  4089f6:	jmp    408830 <Mat_VarRead@plt+0x6110>
  4089fb:	nop    DWORD PTR [rax+rax*1+0x0]
  408a00:	lea    rax,[rsp+0x90]
  408a08:	mov    QWORD PTR [rsp+0x10],rax
  408a0d:	lea    rax,[rsp+0xd0]
  408a15:	mov    QWORD PTR [rsp+0x18],rax
  408a1a:	lea    rax,[rsp+0x10]
  408a1f:	mov    QWORD PTR [rsp+0x48],rax
  408a24:	mov    DWORD PTR [rsp+0x4],0x3
  408a2c:	xor    ebp,ebp
  408a2e:	jmp    408830 <Mat_VarRead@plt+0x6110>
  408a33:	nop    DWORD PTR [rax+rax*1+0x0]
  408a38:	lea    rax,[rsp+0x110]
  408a40:	mov    QWORD PTR [rsp+0x10],rax
  408a45:	lea    rax,[rsp+0x150]
  408a4d:	mov    QWORD PTR [rsp+0x18],rax
  408a52:	lea    rax,[rsp+0x10]
  408a57:	mov    QWORD PTR [rsp+0x48],rax
  408a5c:	mov    DWORD PTR [rsp+0x4],0x4
  408a64:	xor    ebp,ebp
  408a66:	jmp    408830 <Mat_VarRead@plt+0x6110>
  408a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  408a70:	lea    rax,[rsp+0x2e0]
  408a78:	mov    QWORD PTR [rsp+0x10],rax
  408a7d:	lea    rax,[rsp+0x350]
  408a85:	mov    QWORD PTR [rsp+0x18],rax
  408a8a:	lea    rax,[rsp+0x10]
  408a8f:	mov    QWORD PTR [rsp+0x48],rax
  408a94:	mov    DWORD PTR [rsp+0x4],0x5
  408a9c:	xor    ebp,ebp
  408a9e:	jmp    408830 <Mat_VarRead@plt+0x6110>
  408aa3:	nop    DWORD PTR [rax+rax*1+0x0]
  408aa8:	lea    rax,[rsp+0x3c0]
  408ab0:	mov    QWORD PTR [rsp+0x10],rax
  408ab5:	lea    rax,[rsp+0x430]
  408abd:	mov    QWORD PTR [rsp+0x18],rax
  408ac2:	lea    rax,[rsp+0x10]
  408ac7:	mov    QWORD PTR [rsp+0x48],rax
  408acc:	mov    DWORD PTR [rsp+0x4],0x6
  408ad4:	xor    ebp,ebp
  408ad6:	jmp    408830 <Mat_VarRead@plt+0x6110>
  408adb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ae0:	mov    ebp,0x1
  408ae5:	jmp    4087d5 <Mat_VarRead@plt+0x60b5>
  408aea:	call   4024c0 <__stack_chk_fail@plt>
  408aef:	nop
  408af0:	push   r15
  408af2:	push   r14
  408af4:	push   r13
  408af6:	push   r12
  408af8:	push   rbp
  408af9:	push   rbx
  408afa:	sub    rsp,0x908
  408b01:	mov    DWORD PTR [rsp+0x18],edi
  408b05:	mov    DWORD PTR [rsp+0x10],edx
  408b09:	mov    edx,DWORD PTR [rip+0xc6e1]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  408b0f:	mov    rdi,rsi
  408b12:	xor    esi,esi
  408b14:	mov    rax,QWORD PTR fs:0x28
  408b1d:	mov    QWORD PTR [rsp+0x8f8],rax
  408b25:	xor    eax,eax
  408b27:	call   402690 <Mat_CreateVer@plt>
  408b2c:	mov    QWORD PTR [rsp+0x8],rax
  408b31:	test   rax,rax
  408b34:	je     408cb9 <Mat_VarRead@plt+0x6599>
  408b3a:	lea    rdi,[rsp+0x880]
  408b42:	mov    QWORD PTR [rsp+0x20],rdi
  408b47:	lea    rdi,[rsp+0x8c0]
  408b4f:	mov    QWORD PTR [rsp+0x28],rdi
  408b54:	mov    eax,0x1
  408b59:	lea    rbx,[rsp+0x3d0]
  408b61:	lea    r11,[rsp+0x160]
  408b69:	lea    r12,[rsp+0x230]
  408b71:	lea    r15,[rsp+0x300]
  408b79:	lea    r13,[rsp+0x80]
  408b81:	lea    rbp,[rsp+0xf0]
  408b89:	lea    rcx,[rsp+0x87f]
  408b91:	lea    rdx,[rsp+0x8bf]
  408b99:	lea    r10,[rsp+0x560]
  408ba1:	lea    r14,[rsp+0x6f0]
  408ba9:	nop    DWORD PTR [rax+0x0]
  408bb0:	vxorpd xmm0,xmm0,xmm0
  408bb4:	vcvtsi2sd xmm0,xmm0,eax
  408bb8:	mov    DWORD PTR [r12+rax*4-0x4],eax
  408bbd:	mov    DWORD PTR [r15+rax*4-0x4],eax
  408bc2:	mov    WORD PTR [r13+rax*2-0x2],ax
  408bc8:	vmovsd QWORD PTR [rbx+rax*8-0x8],xmm0
  408bce:	vxorps xmm0,xmm0,xmm0
  408bd2:	vcvtsi2ss xmm0,xmm0,eax
  408bd6:	mov    WORD PTR [rbp+rax*2-0x2],ax
  408bdb:	mov    BYTE PTR [rcx+rax*1],al
  408bde:	mov    BYTE PTR [rdx+rax*1],al
  408be1:	vmovss DWORD PTR [r11+rax*4-0x4],xmm0
  408be8:	mov    QWORD PTR [r10+rax*8-0x8],rax
  408bed:	mov    QWORD PTR [r14+rax*8-0x8],rax
  408bf2:	inc    rax
  408bf5:	cmp    rax,0x33
  408bf9:	jne    408bb0 <Mat_VarRead@plt+0x6490>
  408bfb:	mov    r9d,DWORD PTR [rsp+0x10]
  408c00:	test   r9d,r9d
  408c03:	jne    408c38 <Mat_VarRead@plt+0x6518>
  408c05:	mov    eax,DWORD PTR [rsp+0x18]
  408c09:	mov    QWORD PTR [rsp+0x70],0x5
  408c12:	sub    eax,0x6
  408c15:	mov    QWORD PTR [rsp+0x78],0xa
  408c1e:	cmp    eax,0x9
  408c21:	ja     4092be <Mat_VarRead@plt+0x6b9e>
  408c27:	lea    rdx,[rip+0x5e52]        # 40ea80 <getopt_long_only@@Base+0x14a0>
  408c2e:	movsxd rax,DWORD PTR [rdx+rax*4]
  408c32:	add    rax,rdx
  408c35:	notrack jmp rax
  408c38:	cmp    DWORD PTR [rsp+0x10],0x1
  408c3d:	je     408f58 <Mat_VarRead@plt+0x6838>
  408c43:	cmp    DWORD PTR [rsp+0x10],0x2
  408c48:	jne    408caf <Mat_VarRead@plt+0x658f>
  408c4a:	mov    QWORD PTR [rsp+0x70],0x5
  408c53:	mov    QWORD PTR [rsp+0x78],0x2
  408c5c:	mov    eax,DWORD PTR [rsp+0x18]
  408c60:	lea    rsi,[rsp+0x70]
  408c65:	mov    QWORD PTR [rsp+0x40],r12
  408c6a:	mov    QWORD PTR [rsp+0x18],rsi
  408c6f:	mov    r12d,DWORD PTR [rsp+0x10]
  408c74:	mov    QWORD PTR [rsp+0x48],r10
  408c79:	mov    QWORD PTR [rsp+0x10],r13
  408c7e:	mov    QWORD PTR [rsp+0x50],r11
  408c83:	xor    edi,edi
  408c85:	sub    eax,0x6
  408c88:	mov    QWORD PTR [rsp+0x30],rbx
  408c8d:	mov    QWORD PTR [rsp+0x38],rbp
  408c92:	mov    rbx,rdi
  408c95:	mov    ebp,eax
  408c97:	cmp    ebp,0x9
  408c9a:	ja     408caf <Mat_VarRead@plt+0x658f>
  408c9c:	lea    rsi,[rip+0x5e05]        # 40eaa8 <getopt_long_only@@Base+0x14c8>
  408ca3:	mov    eax,ebp
  408ca5:	movsxd rax,DWORD PTR [rsi+rax*4]
  408ca9:	add    rax,rsi
  408cac:	notrack jmp rax
  408caf:	mov    rdi,QWORD PTR [rsp+0x8]
  408cb4:	call   402610 <Mat_Close@plt>
  408cb9:	mov    ebx,0x1
  408cbe:	mov    rsi,QWORD PTR [rsp+0x8f8]
  408cc6:	xor    rsi,QWORD PTR fs:0x28
  408ccf:	mov    eax,ebx
  408cd1:	jne    4092d2 <Mat_VarRead@plt+0x6bb2>
  408cd7:	add    rsp,0x908
  408cde:	pop    rbx
  408cdf:	pop    rbp
  408ce0:	pop    r12
  408ce2:	pop    r13
  408ce4:	pop    r14
  408ce6:	pop    r15
  408ce8:	ret    
  408ce9:	sub    rsp,0x8
  408ced:	push   0x0
  408cef:	lea    rdi,[rip+0x5330]        # 40e026 <getopt_long_only@@Base+0xa46>
  408cf6:	mov    ecx,0x2
  408cfb:	mov    rax,QWORD PTR [rsp+0x58]
  408d00:	mov    r8,QWORD PTR [rsp+0x28]
  408d05:	lea    r9,[rax+rbx*8]
  408d09:	mov    edx,0xc
  408d0e:	mov    esi,0xe
  408d13:	call   402450 <Mat_VarCreate@plt>
  408d18:	pop    rdi
  408d19:	mov    r13,rax
  408d1c:	pop    r8
  408d1e:	xchg   ax,ax
  408d20:	mov    edx,DWORD PTR [rip+0xd7fe]        # 416524 <opterr@@Base+0x10>
  408d26:	mov    rdi,QWORD PTR [rsp+0x8]
  408d2b:	mov    ecx,r12d
  408d2e:	mov    rsi,r13
  408d31:	call   4024d0 <Mat_VarWriteAppend@plt>
  408d36:	add    rbx,0xa
  408d3a:	mov    rdi,r13
  408d3d:	call   4025b0 <Mat_VarFree@plt>
  408d42:	cmp    rbx,0x32
  408d46:	jne    408c97 <Mat_VarRead@plt+0x6577>
  408d4c:	xor    ebx,ebx
  408d4e:	mov    rdi,QWORD PTR [rsp+0x8]
  408d53:	call   402610 <Mat_Close@plt>
  408d58:	jmp    408cbe <Mat_VarRead@plt+0x659e>
  408d5d:	sub    rsp,0x8
  408d61:	push   0x0
  408d63:	lea    r9,[r15+rbx*4]
  408d67:	mov    ecx,0x2
  408d6c:	mov    r8,QWORD PTR [rsp+0x28]
  408d71:	mov    edx,0x6
  408d76:	mov    esi,0xd
  408d7b:	lea    rdi,[rip+0x52a4]        # 40e026 <getopt_long_only@@Base+0xa46>
  408d82:	call   402450 <Mat_VarCreate@plt>
  408d87:	pop    r11
  408d89:	mov    r13,rax
  408d8c:	pop    rax
  408d8d:	jmp    408d20 <Mat_VarRead@plt+0x6600>
  408d8f:	sub    rsp,0x8
  408d93:	push   0x0
  408d95:	mov    edx,0x5
  408d9a:	mov    ecx,0x2
  408d9f:	mov    rax,QWORD PTR [rsp+0x50]
  408da4:	mov    r8,QWORD PTR [rsp+0x28]
  408da9:	lea    r9,[rax+rbx*4]
  408dad:	mov    esi,0xc
  408db2:	lea    rdi,[rip+0x526d]        # 40e026 <getopt_long_only@@Base+0xa46>
  408db9:	call   402450 <Mat_VarCreate@plt>
  408dbe:	mov    r13,rax
  408dc1:	pop    rax
  408dc2:	pop    rdx
  408dc3:	jmp    408d20 <Mat_VarRead@plt+0x6600>
  408dc8:	sub    rsp,0x8
  408dcc:	push   0x0
  408dce:	lea    rdi,[rip+0x5251]        # 40e026 <getopt_long_only@@Base+0xa46>
  408dd5:	mov    ecx,0x2
  408dda:	mov    rax,QWORD PTR [rsp+0x48]
  408ddf:	mov    r8,QWORD PTR [rsp+0x28]
  408de4:	lea    r9,[rax+rbx*2]
  408de8:	mov    edx,0x4
  408ded:	mov    esi,0xb
  408df2:	call   402450 <Mat_VarCreate@plt>
  408df7:	pop    rdi
  408df8:	mov    r13,rax
  408dfb:	pop    r8
  408dfd:	jmp    408d20 <Mat_VarRead@plt+0x6600>
  408e02:	sub    rsp,0x8
  408e06:	push   0x0
  408e08:	mov    ecx,0x2
  408e0d:	mov    edx,0x3
  408e12:	mov    rax,QWORD PTR [rsp+0x20]
  408e17:	mov    r8,QWORD PTR [rsp+0x28]
  408e1c:	lea    r9,[rax+rbx*2]
  408e20:	mov    esi,0xa
  408e25:	lea    rdi,[rip+0x51fa]        # 40e026 <getopt_long_only@@Base+0xa46>
  408e2c:	call   402450 <Mat_VarCreate@plt>
  408e31:	pop    r9
  408e33:	mov    r13,rax
  408e36:	pop    r10
  408e38:	jmp    408d20 <Mat_VarRead@plt+0x6600>
  408e3d:	sub    rsp,0x8
  408e41:	push   0x0
  408e43:	mov    edx,0x2
  408e48:	mov    ecx,0x2
  408e4d:	mov    rax,QWORD PTR [rsp+0x38]
  408e52:	mov    r8,QWORD PTR [rsp+0x28]
  408e57:	lea    r9,[rax+rbx*1]
  408e5b:	mov    esi,0x9
  408e60:	lea    rdi,[rip+0x51bf]        # 40e026 <getopt_long_only@@Base+0xa46>
  408e67:	call   402450 <Mat_VarCreate@plt>
  408e6c:	mov    r13,rax
  408e6f:	pop    rax
  408e70:	pop    rdx
  408e71:	jmp    408d20 <Mat_VarRead@plt+0x6600>
  408e76:	sub    rsp,0x8
  408e7a:	push   0x0
  408e7c:	mov    ecx,0x2
  408e81:	mov    esi,0x8
  408e86:	mov    rax,QWORD PTR [rsp+0x30]
  408e8b:	mov    r8,QWORD PTR [rsp+0x28]
  408e90:	lea    r9,[rax+rbx*1]
  408e94:	mov    edx,0x1
  408e99:	lea    rdi,[rip+0x5186]        # 40e026 <getopt_long_only@@Base+0xa46>
  408ea0:	call   402450 <Mat_VarCreate@plt>
  408ea5:	pop    rcx
  408ea6:	mov    r13,rax
  408ea9:	pop    rsi
  408eaa:	jmp    408d20 <Mat_VarRead@plt+0x6600>
  408eaf:	sub    rsp,0x8
  408eb3:	push   0x0
  408eb5:	mov    ecx,0x2
  408eba:	mov    edx,0x7
  408ebf:	mov    rax,QWORD PTR [rsp+0x60]
  408ec4:	mov    r8,QWORD PTR [rsp+0x28]
  408ec9:	lea    r9,[rax+rbx*4]
  408ecd:	mov    esi,0x7
  408ed2:	lea    rdi,[rip+0x514d]        # 40e026 <getopt_long_only@@Base+0xa46>
  408ed9:	call   402450 <Mat_VarCreate@plt>
  408ede:	pop    r9
  408ee0:	mov    r13,rax
  408ee3:	pop    r10
  408ee5:	jmp    408d20 <Mat_VarRead@plt+0x6600>
  408eea:	sub    rsp,0x8
  408eee:	push   0x0
  408ef0:	mov    ecx,0x2
  408ef5:	mov    edx,0x9
  408efa:	mov    rax,QWORD PTR [rsp+0x40]
  408eff:	mov    r8,QWORD PTR [rsp+0x28]
  408f04:	lea    r9,[rax+rbx*8]
  408f08:	mov    esi,0x6
  408f0d:	lea    rdi,[rip+0x5112]        # 40e026 <getopt_long_only@@Base+0xa46>
  408f14:	call   402450 <Mat_VarCreate@plt>
  408f19:	pop    r11
  408f1b:	mov    r13,rax
  408f1e:	pop    rax
  408f1f:	jmp    408d20 <Mat_VarRead@plt+0x6600>
  408f24:	sub    rsp,0x8
  408f28:	push   0x0
  408f2a:	mov    ecx,0x2
  408f2f:	mov    esi,0xf
  408f34:	mov    r8,QWORD PTR [rsp+0x28]
  408f39:	lea    r9,[r14+rbx*8]
  408f3d:	mov    edx,0xd
  408f42:	lea    rdi,[rip+0x50dd]        # 40e026 <getopt_long_only@@Base+0xa46>
  408f49:	call   402450 <Mat_VarCreate@plt>
  408f4e:	pop    rcx
  408f4f:	mov    r13,rax
  408f52:	pop    rsi
  408f53:	jmp    408d20 <Mat_VarRead@plt+0x6600>
  408f58:	mov    QWORD PTR [rsp+0x30],rbx
  408f5d:	mov    rax,QWORD PTR [rsp+0x28]
  408f62:	mov    QWORD PTR [rsp+0x70],0x1
  408f6b:	mov    QWORD PTR [rsp+0x78],0xa
  408f74:	mov    QWORD PTR [rsp+0x50],r13
  408f79:	mov    rdi,r10
  408f7c:	mov    ecx,0x1
  408f81:	mov    QWORD PTR [rsp+0x68],r10
  408f86:	mov    r8,QWORD PTR [rsp+0x20]
  408f8b:	mov    r10,QWORD PTR [rsp+0x30]
  408f90:	mov    r9,rbp
  408f93:	mov    rsi,r14
  408f96:	mov    QWORD PTR [rsp+0x38],rbx
  408f9b:	mov    QWORD PTR [rsp+0x40],rbp
  408fa0:	mov    QWORD PTR [rsp+0x48],r12
  408fa5:	mov    rbp,r12
  408fa8:	mov    QWORD PTR [rsp+0x58],r14
  408fad:	mov    r12,r15
  408fb0:	mov    QWORD PTR [rsp+0x60],r15
  408fb5:	mov    rbx,r11
  408fb8:	mov    r14,rax
  408fbb:	mov    r15,rcx
  408fbe:	mov    edx,r15d
  408fc1:	mov    rcx,r15
  408fc4:	xor    eax,eax
  408fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fd0:	vxorpd xmm0,xmm0,xmm0
  408fd4:	vcvtsi2sd xmm0,xmm0,edx
  408fd8:	mov    DWORD PTR [rbp+rax*4+0x0],edx
  408fdc:	mov    DWORD PTR [r12+rax*4],edx
  408fe0:	mov    WORD PTR [r13+rax*2+0x0],dx
  408fe6:	vmovsd QWORD PTR [r10+rax*8],xmm0
  408fec:	vxorps xmm0,xmm0,xmm0
  408ff0:	vcvtsi2ss xmm0,xmm0,edx
  408ff4:	mov    WORD PTR [r9+rax*2],dx
  408ff9:	mov    BYTE PTR [r8+rax*1],dl
  408ffd:	mov    BYTE PTR [r14+rax*1],dl
  409001:	mov    QWORD PTR [rdi+rax*8],rcx
  409005:	mov    QWORD PTR [rsi+rax*8],rcx
  409009:	vmovss DWORD PTR [rbx+rax*4],xmm0
  40900e:	inc    rax
  409011:	add    edx,0x5
  409014:	add    rcx,0x5
  409018:	cmp    rax,0xa
  40901c:	jne    408fd0 <Mat_VarRead@plt+0x68b0>
  40901e:	inc    r15
  409021:	add    r10,0x50
  409025:	add    rbx,0x28
  409029:	add    rbp,0x28
  40902d:	add    r12,0x28
  409031:	add    r13,0x14
  409035:	add    r9,0x14
  409039:	add    r8,0xa
  40903d:	add    r14,0xa
  409041:	add    rdi,0x50
  409045:	add    rsi,0x50
  409049:	cmp    r15,0x6
  40904d:	jne    408fbe <Mat_VarRead@plt+0x689e>
  409053:	mov    rbx,QWORD PTR [rsp+0x38]
  409058:	mov    rbp,QWORD PTR [rsp+0x40]
  40905d:	mov    r12,QWORD PTR [rsp+0x48]
  409062:	mov    r13,QWORD PTR [rsp+0x50]
  409067:	mov    r14,QWORD PTR [rsp+0x58]
  40906c:	mov    r15,QWORD PTR [rsp+0x60]
  409071:	mov    r10,QWORD PTR [rsp+0x68]
  409076:	jmp    408c5c <Mat_VarRead@plt+0x653c>
  40907b:	sub    rsp,0x8
  40907f:	push   0x0
  409081:	mov    edx,0xc
  409086:	mov    r9,r10
  409089:	lea    r8,[rsp+0x80]
  409091:	mov    ecx,0x2
  409096:	mov    esi,0xe
  40909b:	lea    rdi,[rip+0x4f84]        # 40e026 <getopt_long_only@@Base+0xa46>
  4090a2:	call   402450 <Mat_VarCreate@plt>
  4090a7:	mov    rbp,rax
  4090aa:	pop    rax
  4090ab:	pop    rdx
  4090ac:	mov    rdi,QWORD PTR [rsp+0x8]
  4090b1:	mov    edx,DWORD PTR [rip+0xd46d]        # 416524 <opterr@@Base+0x10>
  4090b7:	mov    rsi,rbp
  4090ba:	call   402470 <Mat_VarWrite@plt>
  4090bf:	mov    rdi,rbp
  4090c2:	mov    ebx,eax
  4090c4:	call   4025b0 <Mat_VarFree@plt>
  4090c9:	jmp    408d4e <Mat_VarRead@plt+0x662e>
  4090ce:	sub    rsp,0x8
  4090d2:	push   0x0
  4090d4:	mov    ecx,0x2
  4090d9:	mov    esi,0x7
  4090de:	lea    r8,[rsp+0x80]
  4090e6:	mov    r9,r11
  4090e9:	mov    edx,0x7
  4090ee:	lea    rdi,[rip+0x4f31]        # 40e026 <getopt_long_only@@Base+0xa46>
  4090f5:	call   402450 <Mat_VarCreate@plt>
  4090fa:	pop    rcx
  4090fb:	mov    rbp,rax
  4090fe:	pop    rsi
  4090ff:	jmp    4090ac <Mat_VarRead@plt+0x698c>
  409101:	sub    rsp,0x8
  409105:	push   0x0
  409107:	mov    ecx,0x2
  40910c:	mov    esi,0x8
  409111:	mov    r9,QWORD PTR [rsp+0x30]
  409116:	lea    r8,[rsp+0x80]
  40911e:	mov    edx,0x1
  409123:	lea    rdi,[rip+0x4efc]        # 40e026 <getopt_long_only@@Base+0xa46>
  40912a:	call   402450 <Mat_VarCreate@plt>
  40912f:	pop    rcx
  409130:	mov    rbp,rax
  409133:	pop    rsi
  409134:	jmp    4090ac <Mat_VarRead@plt+0x698c>
  409139:	sub    rsp,0x8
  40913d:	push   0x0
  40913f:	mov    edx,0x2
  409144:	mov    ecx,0x2
  409149:	mov    r9,QWORD PTR [rsp+0x38]
  40914e:	lea    r8,[rsp+0x80]
  409156:	mov    esi,0x9
  40915b:	lea    rdi,[rip+0x4ec4]        # 40e026 <getopt_long_only@@Base+0xa46>
  409162:	call   402450 <Mat_VarCreate@plt>
  409167:	mov    rbp,rax
  40916a:	pop    rax
  40916b:	pop    rdx
  40916c:	jmp    4090ac <Mat_VarRead@plt+0x698c>
  409171:	sub    rsp,0x8
  409175:	push   0x0
  409177:	mov    r9,r13
  40917a:	mov    ecx,0x2
  40917f:	lea    r8,[rsp+0x80]
  409187:	mov    edx,0x3
  40918c:	mov    esi,0xa
  409191:	lea    rdi,[rip+0x4e8e]        # 40e026 <getopt_long_only@@Base+0xa46>
  409198:	call   402450 <Mat_VarCreate@plt>
  40919d:	pop    r9
  40919f:	mov    rbp,rax
  4091a2:	pop    r10
  4091a4:	jmp    4090ac <Mat_VarRead@plt+0x698c>
  4091a9:	sub    rsp,0x8
  4091ad:	push   0x0
  4091af:	mov    r9,r14
  4091b2:	mov    ecx,0x2
  4091b7:	lea    r8,[rsp+0x80]
  4091bf:	mov    edx,0xd
  4091c4:	mov    esi,0xf
  4091c9:	lea    rdi,[rip+0x4e56]        # 40e026 <getopt_long_only@@Base+0xa46>
  4091d0:	call   402450 <Mat_VarCreate@plt>
  4091d5:	pop    r14
  4091d7:	mov    rbp,rax
  4091da:	pop    r15
  4091dc:	jmp    4090ac <Mat_VarRead@plt+0x698c>
  4091e1:	sub    rsp,0x8
  4091e5:	push   0x0
  4091e7:	lea    rdi,[rip+0x4e38]        # 40e026 <getopt_long_only@@Base+0xa46>
  4091ee:	mov    r9,rbx
  4091f1:	lea    r8,[rsp+0x80]
  4091f9:	mov    ecx,0x2
  4091fe:	mov    edx,0x9
  409203:	mov    esi,0x6
  409208:	call   402450 <Mat_VarCreate@plt>
  40920d:	pop    rdi
  40920e:	mov    rbp,rax
  409211:	pop    r8
  409213:	jmp    4090ac <Mat_VarRead@plt+0x698c>
  409218:	sub    rsp,0x8
  40921c:	push   0x0
  40921e:	mov    r9,rbp
  409221:	lea    rdi,[rip+0x4dfe]        # 40e026 <getopt_long_only@@Base+0xa46>
  409228:	lea    r8,[rsp+0x80]
  409230:	mov    ecx,0x2
  409235:	mov    edx,0x4
  40923a:	mov    esi,0xb
  40923f:	call   402450 <Mat_VarCreate@plt>
  409244:	pop    rdi
  409245:	mov    rbp,rax
  409248:	pop    r8
  40924a:	jmp    4090ac <Mat_VarRead@plt+0x698c>
  40924f:	sub    rsp,0x8
  409253:	push   0x0
  409255:	mov    r9,r12
  409258:	mov    ecx,0x2
  40925d:	lea    r8,[rsp+0x80]
  409265:	mov    edx,0x5
  40926a:	mov    esi,0xc
  40926f:	lea    rdi,[rip+0x4db0]        # 40e026 <getopt_long_only@@Base+0xa46>
  409276:	call   402450 <Mat_VarCreate@plt>
  40927b:	pop    r12
  40927d:	mov    rbp,rax
  409280:	pop    r13
  409282:	jmp    4090ac <Mat_VarRead@plt+0x698c>
  409287:	sub    rsp,0x8
  40928b:	push   0x0
  40928d:	mov    r9,r15
  409290:	mov    ecx,0x2
  409295:	lea    r8,[rsp+0x80]
  40929d:	mov    edx,0x6
  4092a2:	mov    esi,0xd
  4092a7:	lea    rdi,[rip+0x4d78]        # 40e026 <getopt_long_only@@Base+0xa46>
  4092ae:	call   402450 <Mat_VarCreate@plt>
  4092b3:	pop    r11
  4092b5:	mov    rbp,rax
  4092b8:	pop    rbx
  4092b9:	jmp    4090ac <Mat_VarRead@plt+0x698c>
  4092be:	mov    rdi,QWORD PTR [rsp+0x8]
  4092c3:	mov    ebx,0x1
  4092c8:	call   402610 <Mat_Close@plt>
  4092cd:	jmp    408cbe <Mat_VarRead@plt+0x659e>
  4092d2:	call   4024c0 <__stack_chk_fail@plt>
  4092d7:	nop    WORD PTR [rax+rax*1+0x0]
  4092e0:	push   r15
  4092e2:	push   r14
  4092e4:	push   r13
  4092e6:	push   r12
  4092e8:	push   rbp
  4092e9:	push   rbx
  4092ea:	sub    rsp,0x1000
  4092f1:	or     QWORD PTR [rsp],0x0
  4092f6:	sub    rsp,0x1e8
  4092fd:	mov    DWORD PTR [rsp+0xa4],edi
  409304:	mov    DWORD PTR [rsp+0x98],edx
  40930b:	mov    edx,DWORD PTR [rip+0xbedf]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  409311:	mov    rdi,rsi
  409314:	xor    esi,esi
  409316:	mov    rax,QWORD PTR fs:0x28
  40931f:	mov    QWORD PTR [rsp+0x11d8],rax
  409327:	xor    eax,eax
  409329:	mov    QWORD PTR [rsp+0xc0],0x0
  409335:	mov    QWORD PTR [rsp+0xc8],0x0
  409341:	call   402690 <Mat_CreateVer@plt>
  409346:	mov    QWORD PTR [rsp+0x90],rax
  40934e:	test   rax,rax
  409351:	je     409548 <Mat_VarRead@plt+0x6e28>
  409357:	lea    rbx,[rsp+0x910]
  40935f:	lea    r9,[rsp+0xc30]
  409367:	mov    QWORD PTR [rsp+0x20],rbx
  40936c:	lea    rcx,[rsp+0x116d]
  409374:	lea    rbx,[rsp+0x370]
  40937c:	mov    QWORD PTR [rsp+0x30],r9
  409381:	lea    r9,[rsp+0xf50]
  409389:	lea    rsi,[rsp+0x150]
  409391:	mov    QWORD PTR [rsp+0x28],rbx
  409396:	mov    QWORD PTR [rsp+0x48],r9
  40939b:	lea    rbx,[rsp+0x510]
  4093a3:	mov    QWORD PTR [rsp+0x40],rcx
  4093a8:	mov    QWORD PTR [rsp+0x38],rbx
  4093ad:	mov    QWORD PTR [rsp+0x18],rsi
  4093b2:	lea    rbx,[rsp+0x6b0]
  4093ba:	lea    rsi,[rsp+0x230]
  4093c2:	mov    QWORD PTR [rsp+0x8],rbx
  4093c7:	mov    QWORD PTR [rsp+0x10],rsi
  4093cc:	mov    eax,0x33
  4093d1:	mov    edx,0x1
  4093d6:	lea    r15,[rsp+0x780]
  4093de:	lea    r11,[rsp+0x2a0]
  4093e6:	lea    r10,[rsp+0x440]
  4093ee:	lea    r14,[rsp+0x5e0]
  4093f6:	lea    rbx,[rsp+0xe0]
  4093fe:	lea    r12,[rsp+0x1c0]
  409406:	lea    r8,[rsp+0x10ad]
  40940e:	lea    rdi,[rsp+0x10ed]
  409416:	lea    rsi,[rsp+0x112d]
  40941e:	lea    rbp,[rsp+0xaa0]
  409426:	lea    r13,[rsp+0xdc0]
  40942e:	xchg   ax,ax
  409430:	vxorpd xmm0,xmm0,xmm0
  409434:	vcvtsi2sd xmm0,xmm0,edx
  409438:	mov    rcx,QWORD PTR [rsp+0x20]
  40943d:	mov    DWORD PTR [r10+rax*4-0xcc],edx
  409445:	mov    DWORD PTR [r14+rax*4-0xcc],edx
  40944d:	vmovsd QWORD PTR [r15+rax*8-0x198],xmm0
  409457:	vxorpd xmm0,xmm0,xmm0
  40945b:	vcvtsi2sd xmm0,xmm0,eax
  40945f:	mov    WORD PTR [rbx+rax*2-0x66],dx
  409464:	mov    WORD PTR [r12+rax*2-0x66],dx
  40946a:	mov    BYTE PTR [r8+rax*1],dl
  40946e:	vmovsd QWORD PTR [rcx+rax*8-0x198],xmm0
  409477:	vxorps xmm0,xmm0,xmm0
  40947b:	vcvtsi2ss xmm0,xmm0,edx
  40947f:	mov    rcx,QWORD PTR [rsp+0x28]
  409484:	mov    BYTE PTR [rsi+rax*1],dl
  409487:	mov    QWORD PTR [rbp+rax*8-0x198],rdx
  40948f:	vmovss DWORD PTR [r11+rax*4-0xcc],xmm0
  409499:	vxorps xmm0,xmm0,xmm0
  40949d:	vcvtsi2ss xmm0,xmm0,eax
  4094a1:	mov    QWORD PTR [r13+rax*8-0x198],rdx
  4094a9:	inc    rdx
  4094ac:	mov    BYTE PTR [rdi+rax*1],al
  4094af:	vmovss DWORD PTR [rcx+rax*4-0xcc],xmm0
  4094b8:	mov    rcx,QWORD PTR [rsp+0x38]
  4094bd:	mov    QWORD PTR [r9+rax*8-0x198],rax
  4094c5:	mov    DWORD PTR [rcx+rax*4-0xcc],eax
  4094cc:	mov    rcx,QWORD PTR [rsp+0x8]
  4094d1:	mov    DWORD PTR [rcx+rax*4-0xcc],eax
  4094d8:	mov    rcx,QWORD PTR [rsp+0x18]
  4094dd:	mov    WORD PTR [rcx+rax*2-0x66],ax
  4094e2:	mov    rcx,QWORD PTR [rsp+0x10]
  4094e7:	mov    WORD PTR [rcx+rax*2-0x66],ax
  4094ec:	mov    rcx,QWORD PTR [rsp+0x40]
  4094f1:	mov    BYTE PTR [rcx+rax*1],al
  4094f4:	mov    rcx,QWORD PTR [rsp+0x30]
  4094f9:	mov    QWORD PTR [rcx+rax*8-0x198],rax
  409501:	inc    rax
  409504:	cmp    rdx,0x33
  409508:	jne    409430 <Mat_VarRead@plt+0x6d10>
  40950e:	mov    eax,DWORD PTR [rsp+0xa4]
  409515:	sub    eax,0x6
  409518:	mov    DWORD PTR [rsp+0xb8],eax
  40951f:	cmp    eax,0x9
  409522:	ja     409c83 <Mat_VarRead@plt+0x7563>
  409528:	lea    rcx,[rip+0x55a1]        # 40ead0 <getopt_long_only@@Base+0x14f0>
  40952f:	mov    edx,eax
  409531:	movsxd rax,DWORD PTR [rcx+rdx*4]
  409535:	add    rax,rcx
  409538:	notrack jmp rax
  40953b:	mov    rdi,QWORD PTR [rsp+0x90]
  409543:	call   402610 <Mat_Close@plt>
  409548:	mov    ebx,0x1
  40954d:	mov    eax,ebx
  40954f:	mov    rbx,QWORD PTR [rsp+0x11d8]
  409557:	xor    rbx,QWORD PTR fs:0x28
  409560:	jne    409c9a <Mat_VarRead@plt+0x757a>
  409566:	add    rsp,0x11e8
  40956d:	pop    rbx
  40956e:	pop    rbp
  40956f:	pop    r12
  409571:	pop    r13
  409573:	pop    r14
  409575:	pop    r15
  409577:	ret    
  409578:	mov    rax,QWORD PTR [rsp+0x30]
  40957d:	mov    QWORD PTR [rsp+0xc0],rbp
  409585:	mov    QWORD PTR [rsp+0xc8],rax
  40958d:	mov    DWORD PTR [rsp+0xbc],0xc
  409598:	nop    DWORD PTR [rax+rax*1+0x0]
  4095a0:	mov    edi,DWORD PTR [rsp+0x98]
  4095a7:	test   edi,edi
  4095a9:	je     409a07 <Mat_VarRead@plt+0x72e7>
  4095af:	cmp    DWORD PTR [rsp+0x98],0x1
  4095b7:	je     409a81 <Mat_VarRead@plt+0x7361>
  4095bd:	cmp    DWORD PTR [rsp+0x98],0x2
  4095c5:	jne    40953b <Mat_VarRead@plt+0x6e1b>
  4095cb:	mov    QWORD PTR [rsp+0xd0],0x5
  4095d7:	mov    QWORD PTR [rsp+0xd8],0x2
  4095e3:	lea    rax,[rsp+0x1160]
  4095eb:	mov    QWORD PTR [rsp+0x40],rax
  4095f0:	lea    rax,[rsp+0x11a0]
  4095f8:	mov    QWORD PTR [rsp+0x50],rax
  4095fd:	lea    rax,[rsp+0x10e0]
  409605:	mov    QWORD PTR [rsp+0x58],rax
  40960a:	mov    QWORD PTR [rsp+0x60],r11
  40960f:	mov    QWORD PTR [rsp+0x68],r10
  409614:	mov    QWORD PTR [rsp+0x80],r15
  40961c:	xor    esi,esi
  40961e:	mov    QWORD PTR [rsp+0x70],r12
  409623:	mov    QWORD PTR [rsp+0x88],rbx
  40962b:	mov    QWORD PTR [rsp+0xa8],r13
  409633:	mov    r12d,DWORD PTR [rsp+0xb8]
  40963b:	mov    ebx,DWORD PTR [rsp+0xbc]
  409642:	mov    r13d,DWORD PTR [rsp+0xa4]
  40964a:	mov    QWORD PTR [rsp+0x78],r14
  40964f:	mov    r14d,DWORD PTR [rsp+0x98]
  409657:	mov    QWORD PTR [rsp+0x98],rbp
  40965f:	mov    rbp,rsi
  409662:	cmp    r12d,0x9
  409666:	ja     40953b <Mat_VarRead@plt+0x6e1b>
  40966c:	lea    rsi,[rip+0x5485]        # 40eaf8 <getopt_long_only@@Base+0x1518>
  409673:	mov    eax,r12d
  409676:	movsxd rax,DWORD PTR [rsi+rax*4]
  40967a:	add    rax,rsi
  40967d:	notrack jmp rax
  409680:	mov    rsi,QWORD PTR [rsp+0x98]
  409688:	lea    rax,[rbp*8+0x0]
  409690:	lea    rdx,[rsi+rax*1]
  409694:	add    rax,QWORD PTR [rsp+0x30]
  409699:	mov    QWORD PTR [rsp+0xc0],rdx
  4096a1:	mov    QWORD PTR [rsp+0xc8],rax
  4096a9:	nop    DWORD PTR [rax+0x0]
  4096b0:	sub    rsp,0x8
  4096b4:	push   0x800
  4096b9:	mov    ecx,0x2
  4096be:	mov    edx,ebx
  4096c0:	lea    r9,[rsp+0xd0]
  4096c8:	lea    r8,[rsp+0xe0]
  4096d0:	mov    esi,r13d
  4096d3:	lea    rdi,[rip+0x494c]        # 40e026 <getopt_long_only@@Base+0xa46>
  4096da:	call   402450 <Mat_VarCreate@plt>
  4096df:	mov    rdi,QWORD PTR [rsp+0xa0]
  4096e7:	mov    edx,DWORD PTR [rip+0xce37]        # 416524 <opterr@@Base+0x10>
  4096ed:	mov    r15,rax
  4096f0:	mov    ecx,r14d
  4096f3:	mov    rsi,rax
  4096f6:	call   4024d0 <Mat_VarWriteAppend@plt>
  4096fb:	mov    rdi,r15
  4096fe:	call   4025b0 <Mat_VarFree@plt>
  409703:	add    rbp,0xa
  409707:	pop    rax
  409708:	pop    rdx
  409709:	cmp    rbp,0x32
  40970d:	jne    409662 <Mat_VarRead@plt+0x6f42>
  409713:	xor    ebx,ebx
  409715:	mov    rdi,QWORD PTR [rsp+0x90]
  40971d:	call   402610 <Mat_Close@plt>
  409722:	jmp    40954d <Mat_VarRead@plt+0x6e2d>
  409727:	mov    rsi,QWORD PTR [rsp+0x78]
  40972c:	lea    rax,[rbp*4+0x0]
  409734:	lea    rdx,[rsi+rax*1]
  409738:	add    rax,QWORD PTR [rsp+0x8]
  40973d:	mov    QWORD PTR [rsp+0xc0],rdx
  409745:	mov    QWORD PTR [rsp+0xc8],rax
  40974d:	jmp    4096b0 <Mat_VarRead@plt+0x6f90>
  409752:	mov    rsi,QWORD PTR [rsp+0x68]
  409757:	lea    rax,[rbp*4+0x0]
  40975f:	lea    rdx,[rsi+rax*1]
  409763:	add    rax,QWORD PTR [rsp+0x38]
  409768:	mov    QWORD PTR [rsp+0xc0],rdx
  409770:	mov    QWORD PTR [rsp+0xc8],rax
  409778:	jmp    4096b0 <Mat_VarRead@plt+0x6f90>
  40977d:	mov    rsi,QWORD PTR [rsp+0x70]
  409782:	lea    rax,[rbp+rbp*1+0x0]
  409787:	lea    rdx,[rsi+rax*1]
  40978b:	add    rax,QWORD PTR [rsp+0x10]
  409790:	mov    QWORD PTR [rsp+0xc0],rdx
  409798:	mov    QWORD PTR [rsp+0xc8],rax
  4097a0:	jmp    4096b0 <Mat_VarRead@plt+0x6f90>
  4097a5:	mov    rsi,QWORD PTR [rsp+0x88]
  4097ad:	lea    rax,[rbp+rbp*1+0x0]
  4097b2:	lea    rdx,[rsi+rax*1]
  4097b6:	add    rax,QWORD PTR [rsp+0x18]
  4097bb:	mov    QWORD PTR [rsp+0xc0],rdx
  4097c3:	mov    QWORD PTR [rsp+0xc8],rax
  4097cb:	jmp    4096b0 <Mat_VarRead@plt+0x6f90>
  4097d0:	mov    rax,QWORD PTR [rsp+0x40]
  4097d5:	add    rax,rbp
  4097d8:	mov    QWORD PTR [rsp+0xc0],rax
  4097e0:	mov    rax,QWORD PTR [rsp+0x50]
  4097e5:	add    rax,rbp
  4097e8:	mov    QWORD PTR [rsp+0xc8],rax
  4097f0:	jmp    4096b0 <Mat_VarRead@plt+0x6f90>
  4097f5:	mov    rax,QWORD PTR [rsp+0x58]
  4097fa:	add    rax,rbp
  4097fd:	mov    QWORD PTR [rsp+0xc0],rax
  409805:	lea    rax,[rsp+rbp*1+0x1120]
  40980d:	mov    QWORD PTR [rsp+0xc8],rax
  409815:	jmp    4096b0 <Mat_VarRead@plt+0x6f90>
  40981a:	mov    rsi,QWORD PTR [rsp+0x60]
  40981f:	lea    rax,[rbp*4+0x0]
  409827:	lea    rdx,[rsi+rax*1]
  40982b:	add    rax,QWORD PTR [rsp+0x28]
  409830:	mov    QWORD PTR [rsp+0xc0],rdx
  409838:	mov    QWORD PTR [rsp+0xc8],rax
  409840:	jmp    4096b0 <Mat_VarRead@plt+0x6f90>
  409845:	mov    rsi,QWORD PTR [rsp+0x80]
  40984d:	lea    rax,[rbp*8+0x0]
  409855:	lea    rdx,[rsi+rax*1]
  409859:	add    rax,QWORD PTR [rsp+0x20]
  40985e:	mov    QWORD PTR [rsp+0xc0],rdx
  409866:	mov    QWORD PTR [rsp+0xc8],rax
  40986e:	jmp    4096b0 <Mat_VarRead@plt+0x6f90>
  409873:	mov    rsi,QWORD PTR [rsp+0xa8]
  40987b:	lea    rax,[rbp*8+0x0]
  409883:	lea    rdx,[rsi+rax*1]
  409887:	add    rax,QWORD PTR [rsp+0x48]
  40988c:	mov    QWORD PTR [rsp+0xc0],rdx
  409894:	mov    QWORD PTR [rsp+0xc8],rax
  40989c:	jmp    4096b0 <Mat_VarRead@plt+0x6f90>
  4098a1:	mov    rax,QWORD PTR [rsp+0x48]
  4098a6:	mov    QWORD PTR [rsp+0xc0],r13
  4098ae:	mov    QWORD PTR [rsp+0xc8],rax
  4098b6:	mov    DWORD PTR [rsp+0xbc],0xd
  4098c1:	jmp    4095a0 <Mat_VarRead@plt+0x6e80>
  4098c6:	mov    rax,QWORD PTR [rsp+0x20]
  4098cb:	mov    QWORD PTR [rsp+0xc0],r15
  4098d3:	mov    QWORD PTR [rsp+0xc8],rax
  4098db:	mov    DWORD PTR [rsp+0xbc],0x9
  4098e6:	jmp    4095a0 <Mat_VarRead@plt+0x6e80>
  4098eb:	mov    rax,QWORD PTR [rsp+0x28]
  4098f0:	mov    QWORD PTR [rsp+0xc0],r11
  4098f8:	mov    QWORD PTR [rsp+0xc8],rax
  409900:	mov    eax,DWORD PTR [rsp+0xa4]
  409907:	mov    DWORD PTR [rsp+0xbc],eax
  40990e:	jmp    4095a0 <Mat_VarRead@plt+0x6e80>
  409913:	lea    rax,[rsp+0x10e0]
  40991b:	mov    QWORD PTR [rsp+0xc0],rax
  409923:	lea    rax,[rsp+0x1120]
  40992b:	mov    QWORD PTR [rsp+0xc8],rax
  409933:	mov    DWORD PTR [rsp+0xbc],0x1
  40993e:	jmp    4095a0 <Mat_VarRead@plt+0x6e80>
  409943:	lea    rax,[rsp+0x1160]
  40994b:	mov    QWORD PTR [rsp+0xc0],rax
  409953:	lea    rax,[rsp+0x11a0]
  40995b:	mov    QWORD PTR [rsp+0xc8],rax
  409963:	mov    DWORD PTR [rsp+0xbc],0x2
  40996e:	jmp    4095a0 <Mat_VarRead@plt+0x6e80>
  409973:	mov    rax,QWORD PTR [rsp+0x18]
  409978:	mov    QWORD PTR [rsp+0xc0],rbx
  409980:	mov    QWORD PTR [rsp+0xc8],rax
  409988:	mov    DWORD PTR [rsp+0xbc],0x3
  409993:	jmp    4095a0 <Mat_VarRead@plt+0x6e80>
  409998:	mov    rax,QWORD PTR [rsp+0x10]
  40999d:	mov    QWORD PTR [rsp+0xc0],r12
  4099a5:	mov    QWORD PTR [rsp+0xc8],rax
  4099ad:	mov    DWORD PTR [rsp+0xbc],0x4
  4099b8:	jmp    4095a0 <Mat_VarRead@plt+0x6e80>
  4099bd:	mov    rax,QWORD PTR [rsp+0x38]
  4099c2:	mov    QWORD PTR [rsp+0xc0],r10
  4099ca:	mov    QWORD PTR [rsp+0xc8],rax
  4099d2:	mov    DWORD PTR [rsp+0xbc],0x5
  4099dd:	jmp    4095a0 <Mat_VarRead@plt+0x6e80>
  4099e2:	mov    rax,QWORD PTR [rsp+0x8]
  4099e7:	mov    QWORD PTR [rsp+0xc0],r14
  4099ef:	mov    QWORD PTR [rsp+0xc8],rax
  4099f7:	mov    DWORD PTR [rsp+0xbc],0x6
  409a02:	jmp    4095a0 <Mat_VarRead@plt+0x6e80>
  409a07:	mov    QWORD PTR [rsp+0xd0],0x5
  409a13:	mov    QWORD PTR [rsp+0xd8],0xa
  409a1f:	sub    rsp,0x8
  409a23:	push   0x800
  409a28:	mov    ecx,0x2
  409a2d:	lea    rdi,[rip+0x45f2]        # 40e026 <getopt_long_only@@Base+0xa46>
  409a34:	mov    edx,DWORD PTR [rsp+0xcc]
  409a3b:	mov    esi,DWORD PTR [rsp+0xb4]
  409a42:	lea    r9,[rsp+0xd0]
  409a4a:	lea    r8,[rsp+0xe0]
  409a52:	call   402450 <Mat_VarCreate@plt>
  409a57:	mov    rdi,QWORD PTR [rsp+0xa0]
  409a5f:	mov    edx,DWORD PTR [rip+0xcabf]        # 416524 <opterr@@Base+0x10>
  409a65:	mov    rsi,rax
  409a68:	mov    rbp,rax
  409a6b:	call   402470 <Mat_VarWrite@plt>
  409a70:	mov    rdi,rbp
  409a73:	mov    ebx,eax
  409a75:	call   4025b0 <Mat_VarFree@plt>
  409a7a:	pop    rcx
  409a7b:	pop    rsi
  409a7c:	jmp    409715 <Mat_VarRead@plt+0x6ff5>
  409a81:	lea    rax,[rsp+0x10e0]
  409a89:	mov    QWORD PTR [rsp+0x78],rax
  409a8e:	lea    rax,[rsp+0x1120]
  409a96:	mov    QWORD PTR [rsp+0x88],rax
  409a9e:	lea    rax,[rsp+0x1160]
  409aa6:	mov    QWORD PTR [rsp+0x70],rax
  409aab:	lea    rax,[rsp+0x11a0]
  409ab3:	mov    QWORD PTR [rsp+0xd0],0x1
  409abf:	mov    QWORD PTR [rsp+0xd8],0xa
  409acb:	mov    QWORD PTR [rsp+0xb0],0x0
  409ad7:	mov    QWORD PTR [rsp+0xa8],0x1
  409ae3:	mov    QWORD PTR [rsp+0x80],rax
  409aeb:	mov    QWORD PTR [rsp+0x50],r11
  409af0:	mov    QWORD PTR [rsp+0x58],r10
  409af5:	mov    QWORD PTR [rsp+0x60],r12
  409afa:	mov    esi,0x33
  409aff:	mov    QWORD PTR [rsp+0x68],r14
  409b04:	mov    r14d,esi
  409b07:	mov    rdi,QWORD PTR [rsp+0xb0]
  409b0f:	mov    r9,QWORD PTR [rsp+0xa8]
  409b17:	mov    QWORD PTR [rsp+0x40],rbx
  409b1c:	mov    eax,r9d
  409b1f:	mov    r11d,r14d
  409b22:	mov    r10d,r14d
  409b25:	lea    rcx,[rdi*8+0x0]
  409b2d:	lea    rdx,[rdi*4+0x0]
  409b35:	lea    r8,[rdi+rdi*1]
  409b39:	mov    esi,r14d
  409b3c:	nop    DWORD PTR [rax+0x0]
  409b40:	vxorpd xmm0,xmm0,xmm0
  409b44:	vcvtsi2sd xmm0,xmm0,eax
  409b48:	mov    r12,QWORD PTR [rsp+0x20]
  409b4d:	mov    rbx,QWORD PTR [rsp+0x40]
  409b52:	mov    QWORD PTR [rbp+rcx*1+0x0],r9
  409b57:	vmovsd QWORD PTR [r15+rcx*1],xmm0
  409b5d:	vxorpd xmm0,xmm0,xmm0
  409b61:	vcvtsi2sd xmm0,xmm0,esi
  409b65:	mov    WORD PTR [rbx+r8*1],ax
  409b6a:	vmovsd QWORD PTR [r12+rcx*1],xmm0
  409b70:	vxorps xmm0,xmm0,xmm0
  409b74:	vcvtsi2ss xmm0,xmm0,eax
  409b78:	mov    r12,QWORD PTR [rsp+0x50]
  409b7d:	vmovss DWORD PTR [r12+rdx*1],xmm0
  409b83:	vxorps xmm0,xmm0,xmm0
  409b87:	vcvtsi2ss xmm0,xmm0,esi
  409b8b:	mov    r12,QWORD PTR [rsp+0x28]
  409b90:	vmovss DWORD PTR [r12+rdx*1],xmm0
  409b96:	mov    r12,QWORD PTR [rsp+0x58]
  409b9b:	mov    DWORD PTR [r12+rdx*1],eax
  409b9f:	mov    r12,QWORD PTR [rsp+0x38]
  409ba4:	mov    DWORD PTR [r12+rdx*1],esi
  409ba8:	mov    r12,QWORD PTR [rsp+0x68]
  409bad:	mov    DWORD PTR [r12+rdx*1],eax
  409bb1:	mov    r12,QWORD PTR [rsp+0x8]
  409bb6:	mov    DWORD PTR [r12+rdx*1],esi
  409bba:	mov    r12,QWORD PTR [rsp+0x18]
  409bbf:	add    esi,0x5
  409bc2:	mov    WORD PTR [r12+r8*1],r11w
  409bc7:	mov    r12,QWORD PTR [rsp+0x60]
  409bcc:	add    rdx,0x4
  409bd0:	mov    WORD PTR [r12+r8*1],ax
  409bd5:	mov    r12,QWORD PTR [rsp+0x10]
  409bda:	mov    WORD PTR [r12+r8*1],r11w
  409bdf:	mov    r12,QWORD PTR [rsp+0x78]
  409be4:	add    r11d,0x5
  409be8:	mov    BYTE PTR [r12+rdi*1],al
  409bec:	mov    r12,QWORD PTR [rsp+0x88]
  409bf4:	add    r8,0x2
  409bf8:	mov    BYTE PTR [r12+rdi*1],r10b
  409bfc:	mov    r12,QWORD PTR [rsp+0x70]
  409c01:	mov    BYTE PTR [r12+rdi*1],al
  409c05:	mov    r12,QWORD PTR [rsp+0x80]
  409c0d:	add    eax,0x5
  409c10:	mov    BYTE PTR [r12+rdi*1],r10b
  409c14:	mov    rbx,QWORD PTR [rsp+0x30]
  409c19:	lea    r12,[r9+0x32]
  409c1d:	mov    QWORD PTR [rbx+rcx*1],r12
  409c21:	mov    rbx,QWORD PTR [rsp+0x48]
  409c26:	mov    QWORD PTR [r13+rcx*1+0x0],r9
  409c2b:	mov    QWORD PTR [rbx+rcx*1],r12
  409c2f:	add    r10d,0x5
  409c33:	add    r9,0x5
  409c37:	add    rcx,0x8
  409c3b:	inc    rdi
  409c3e:	cmp    eax,r14d
  409c41:	jne    409b40 <Mat_VarRead@plt+0x7420>
  409c47:	inc    r14d
  409c4a:	mov    rbx,QWORD PTR [rsp+0x40]
  409c4f:	inc    QWORD PTR [rsp+0xa8]
  409c57:	add    QWORD PTR [rsp+0xb0],0xa
  409c60:	cmp    r14d,0x38
  409c64:	jne    409b07 <Mat_VarRead@plt+0x73e7>
  409c6a:	mov    r11,QWORD PTR [rsp+0x50]
  409c6f:	mov    r10,QWORD PTR [rsp+0x58]
  409c74:	mov    r12,QWORD PTR [rsp+0x60]
  409c79:	mov    r14,QWORD PTR [rsp+0x68]
  409c7e:	jmp    4095e3 <Mat_VarRead@plt+0x6ec3>
  409c83:	mov    rdi,QWORD PTR [rsp+0x90]
  409c8b:	mov    ebx,0x1
  409c90:	call   402610 <Mat_Close@plt>
  409c95:	jmp    40954d <Mat_VarRead@plt+0x6e2d>
  409c9a:	call   4024c0 <__stack_chk_fail@plt>
  409c9f:	nop
  409ca0:	push   r15
  409ca2:	push   r14
  409ca4:	mov    r14d,edx
  409ca7:	push   r13
  409ca9:	push   r12
  409cab:	push   rbp
  409cac:	push   rbx
  409cad:	mov    ebx,edi
  409caf:	mov    rdi,rsi
  409cb2:	sub    rsp,0x8e8
  409cb9:	mov    rax,QWORD PTR fs:0x28
  409cc2:	mov    QWORD PTR [rsp+0x8d8],rax
  409cca:	xor    eax,eax
  409ccc:	mov    QWORD PTR [rsp+0x20],0x3
  409cd5:	mov    QWORD PTR [rsp+0x28],0x4
  409cde:	mov    eax,0x1
  409ce3:	lea    rdx,[rsp+0x3b0]
  409ceb:	lea    r11,[rsp+0x140]
  409cf3:	lea    r9,[rsp+0x210]
  409cfb:	lea    r8,[rsp+0x2e0]
  409d03:	lea    rsi,[rsp+0x60]
  409d08:	lea    rcx,[rsp+0xd0]
  409d10:	lea    r13,[rsp+0x85f]
  409d18:	lea    r12,[rsp+0x89f]
  409d20:	lea    rbp,[rsp+0x540]
  409d28:	lea    r10,[rsp+0x6d0]
  409d30:	vxorpd xmm0,xmm0,xmm0
  409d34:	vcvtsi2sd xmm0,xmm0,eax
  409d38:	mov    DWORD PTR [r9+rax*4-0x4],eax
  409d3d:	mov    DWORD PTR [r8+rax*4-0x4],eax
  409d42:	mov    WORD PTR [rsi+rax*2-0x2],ax
  409d47:	vmovsd QWORD PTR [rdx+rax*8-0x8],xmm0
  409d4d:	vxorps xmm0,xmm0,xmm0
  409d51:	vcvtsi2ss xmm0,xmm0,eax
  409d55:	mov    WORD PTR [rcx+rax*2-0x2],ax
  409d5a:	mov    BYTE PTR [r13+rax*1+0x0],al
  409d5f:	mov    BYTE PTR [r12+rax*1],al
  409d63:	vmovss DWORD PTR [r11+rax*4-0x4],xmm0
  409d6a:	mov    QWORD PTR [rbp+rax*8-0x8],rax
  409d6f:	mov    QWORD PTR [r10+rax*8-0x8],rax
  409d74:	inc    rax
  409d77:	cmp    rax,0x33
  409d7b:	jne    409d30 <Mat_VarRead@plt+0x7610>
  409d7d:	lea    eax,[rbx-0x6]
  409d80:	cmp    eax,0x9
  409d83:	ja     40a217 <Mat_VarRead@plt+0x7af7>
  409d89:	lea    r12,[rip+0x4d90]        # 40eb20 <getopt_long_only@@Base+0x1540>
  409d90:	movsxd rax,DWORD PTR [r12+rax*4]
  409d94:	add    rax,r12
  409d97:	notrack jmp rax
  409d9a:	lea    rax,[rdx+0x120]
  409da1:	mov    QWORD PTR [rsp+0x10],rax
  409da6:	lea    rax,[rdx+0xc0]
  409dad:	mov    QWORD PTR [rsp+0x18],rax
  409db2:	mov    QWORD PTR [rsp+0x8],rdx
  409db7:	lea    r15,[rdx+0x60]
  409dbb:	mov    r13d,0x9
  409dc1:	nop    DWORD PTR [rax+0x0]
  409dc8:	mov    edx,DWORD PTR [rip+0xb422]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  409dce:	xor    esi,esi
  409dd0:	call   402690 <Mat_CreateVer@plt>
  409dd5:	mov    rbp,rax
  409dd8:	mov    edx,0x1
  409ddd:	test   rax,rax
  409de0:	je     409e70 <Mat_VarRead@plt+0x7750>
  409de6:	lea    r12,[rsp+0x20]
  409deb:	sub    rsp,0x8
  409def:	push   0x1
  409df1:	mov    r8,r12
  409df4:	mov    ecx,0x2
  409df9:	mov    r9,QWORD PTR [rsp+0x18]
  409dfe:	mov    edx,r13d
  409e01:	mov    esi,ebx
  409e03:	lea    rdi,[rip+0x41ff]        # 40e009 <getopt_long_only@@Base+0xa29>
  409e0a:	call   402450 <Mat_VarCreate@plt>
  409e0f:	mov    r9,r15
  409e12:	mov    r8,r12
  409e15:	mov    ecx,0x2
  409e1a:	mov    edx,r13d
  409e1d:	mov    esi,ebx
  409e1f:	lea    rdi,[rip+0x41ea]        # 40e010 <getopt_long_only@@Base+0xa30>
  409e26:	mov    QWORD PTR [rsp+0x40],rax
  409e2b:	mov    DWORD PTR [rsp],0x1
  409e32:	call   402450 <Mat_VarCreate@plt>
  409e37:	mov    QWORD PTR [rsp+0x48],rax
  409e3c:	pop    r8
  409e3e:	pop    r9
  409e40:	test   r14d,r14d
  409e43:	je     40a02b <Mat_VarRead@plt+0x790b>
  409e49:	xor    r15d,r15d
  409e4c:	xor    edx,edx
  409e4e:	cmp    r14d,0x1
  409e52:	je     40a0e0 <Mat_VarRead@plt+0x79c0>
  409e58:	mov    rdi,r15
  409e5b:	mov    DWORD PTR [rsp+0x8],edx
  409e5f:	call   4025b0 <Mat_VarFree@plt>
  409e64:	mov    rdi,rbp
  409e67:	call   402610 <Mat_Close@plt>
  409e6c:	mov    edx,DWORD PTR [rsp+0x8]
  409e70:	mov    rbx,QWORD PTR [rsp+0x8d8]
  409e78:	xor    rbx,QWORD PTR fs:0x28
  409e81:	mov    eax,edx
  409e83:	jne    40a212 <Mat_VarRead@plt+0x7af2>
  409e89:	add    rsp,0x8e8
  409e90:	pop    rbx
  409e91:	pop    rbp
  409e92:	pop    r12
  409e94:	pop    r13
  409e96:	pop    r14
  409e98:	pop    r15
  409e9a:	ret    
  409e9b:	lea    rax,[r11+0x90]
  409ea2:	mov    QWORD PTR [rsp+0x10],rax
  409ea7:	lea    rax,[r11+0x60]
  409eab:	mov    r13d,ebx
  409eae:	mov    QWORD PTR [rsp+0x18],rax
  409eb3:	lea    r15,[r11+0x30]
  409eb7:	mov    QWORD PTR [rsp+0x8],r11
  409ebc:	jmp    409dc8 <Mat_VarRead@plt+0x76a8>
  409ec1:	lea    rcx,[rsp+0x884]
  409ec9:	lea    rax,[rsp+0x860]
  409ed1:	mov    QWORD PTR [rsp+0x10],rcx
  409ed6:	lea    rcx,[rsp+0x878]
  409ede:	mov    QWORD PTR [rsp+0x18],rcx
  409ee3:	lea    r15,[rsp+0x86c]
  409eeb:	mov    QWORD PTR [rsp+0x8],rax
  409ef0:	mov    r13d,0x1
  409ef6:	jmp    409dc8 <Mat_VarRead@plt+0x76a8>
  409efb:	lea    rcx,[rsp+0x8c4]
  409f03:	lea    rax,[rsp+0x8a0]
  409f0b:	mov    QWORD PTR [rsp+0x10],rcx
  409f10:	lea    rcx,[rsp+0x8b8]
  409f18:	mov    QWORD PTR [rsp+0x18],rcx
  409f1d:	lea    r15,[rsp+0x8ac]
  409f25:	mov    QWORD PTR [rsp+0x8],rax
  409f2a:	mov    r13d,0x2
  409f30:	jmp    409dc8 <Mat_VarRead@plt+0x76a8>
  409f35:	lea    rax,[rsi+0x48]
  409f39:	mov    QWORD PTR [rsp+0x10],rax
  409f3e:	lea    rax,[rsi+0x30]
  409f42:	mov    QWORD PTR [rsp+0x18],rax
  409f47:	lea    r15,[rsi+0x18]
  409f4b:	mov    QWORD PTR [rsp+0x8],rsi
  409f50:	mov    r13d,0x3
  409f56:	jmp    409dc8 <Mat_VarRead@plt+0x76a8>
  409f5b:	lea    rax,[rcx+0x48]
  409f5f:	mov    QWORD PTR [rsp+0x10],rax
  409f64:	lea    rax,[rcx+0x30]
  409f68:	mov    QWORD PTR [rsp+0x18],rax
  409f6d:	lea    r15,[rcx+0x18]
  409f71:	mov    QWORD PTR [rsp+0x8],rcx
  409f76:	mov    r13d,0x4
  409f7c:	jmp    409dc8 <Mat_VarRead@plt+0x76a8>
  409f81:	lea    rax,[r9+0x90]
  409f88:	mov    QWORD PTR [rsp+0x10],rax
  409f8d:	lea    rax,[r9+0x60]
  409f91:	mov    QWORD PTR [rsp+0x18],rax
  409f96:	lea    r15,[r9+0x30]
  409f9a:	mov    QWORD PTR [rsp+0x8],r9
  409f9f:	mov    r13d,0x5
  409fa5:	jmp    409dc8 <Mat_VarRead@plt+0x76a8>
  409faa:	lea    rax,[r8+0x90]
  409fb1:	mov    QWORD PTR [rsp+0x10],rax
  409fb6:	lea    rax,[r8+0x60]
  409fba:	mov    QWORD PTR [rsp+0x18],rax
  409fbf:	lea    r15,[r8+0x30]
  409fc3:	mov    QWORD PTR [rsp+0x8],r8
  409fc8:	mov    r13d,0x6
  409fce:	jmp    409dc8 <Mat_VarRead@plt+0x76a8>
  409fd3:	lea    rax,[rbp+0x120]
  409fda:	mov    QWORD PTR [rsp+0x10],rax
  409fdf:	lea    rax,[rbp+0xc0]
  409fe6:	mov    QWORD PTR [rsp+0x18],rax
  409feb:	lea    r15,[rbp+0x60]
  409fef:	mov    QWORD PTR [rsp+0x8],rbp
  409ff4:	mov    r13d,0xc
  409ffa:	jmp    409dc8 <Mat_VarRead@plt+0x76a8>
  409fff:	lea    rax,[r10+0x120]
  40a006:	mov    QWORD PTR [rsp+0x10],rax
  40a00b:	lea    rax,[r10+0xc0]
  40a012:	mov    QWORD PTR [rsp+0x18],rax
  40a017:	lea    r15,[r10+0x60]
  40a01b:	mov    QWORD PTR [rsp+0x8],r10
  40a020:	mov    r13d,0xd
  40a026:	jmp    409dc8 <Mat_VarRead@plt+0x76a8>
  40a02b:	sub    rsp,0x8
  40a02f:	push   0x1
  40a031:	mov    r8,r12
  40a034:	mov    ecx,0x2
  40a039:	mov    r9,QWORD PTR [rsp+0x28]
  40a03e:	mov    edx,r13d
  40a041:	mov    esi,ebx
  40a043:	lea    rdi,[rip+0x3fbf]        # 40e009 <getopt_long_only@@Base+0xa29>
  40a04a:	call   402450 <Mat_VarCreate@plt>
  40a04f:	mov    r9,QWORD PTR [rsp+0x20]
  40a054:	mov    r8,r12
  40a057:	mov    ecx,0x2
  40a05c:	mov    edx,r13d
  40a05f:	mov    esi,ebx
  40a061:	lea    rdi,[rip+0x3fa8]        # 40e010 <getopt_long_only@@Base+0xa30>
  40a068:	mov    DWORD PTR [rsp],0x1
  40a06f:	mov    QWORD PTR [rsp+0x50],rax
  40a074:	call   402450 <Mat_VarCreate@plt>
  40a079:	lea    r9,[rsp+0x40]
  40a07e:	mov    r8,r12
  40a081:	mov    ecx,0x2
  40a086:	mov    edx,0x16
  40a08b:	mov    esi,0x2
  40a090:	lea    rdi,[rip+0x3f8f]        # 40e026 <getopt_long_only@@Base+0xa46>
  40a097:	mov    QWORD PTR [rsp+0x58],rax
  40a09c:	mov    QWORD PTR [rsp+0x60],0x0
  40a0a5:	mov    QWORD PTR [rsp+0x30],0x2
  40a0ae:	mov    QWORD PTR [rsp+0x38],0x1
  40a0b7:	mov    DWORD PTR [rsp],0x0
  40a0be:	call   402450 <Mat_VarCreate@plt>
  40a0c3:	mov    edx,DWORD PTR [rip+0xc45b]        # 416524 <opterr@@Base+0x10>
  40a0c9:	mov    rsi,rax
  40a0cc:	mov    rdi,rbp
  40a0cf:	mov    r15,rax
  40a0d2:	call   402470 <Mat_VarWrite@plt>
  40a0d7:	pop    rsi
  40a0d8:	mov    edx,eax
  40a0da:	pop    rdi
  40a0db:	jmp    409e58 <Mat_VarRead@plt+0x7738>
  40a0e0:	mov    QWORD PTR [rsp+0x40],0x0
  40a0e9:	mov    QWORD PTR [rsp+0x20],0x1
  40a0f2:	mov    QWORD PTR [rsp+0x28],0x1
  40a0fb:	lea    r15,[rsp+0x30]
  40a100:	sub    rsp,0x8
  40a104:	push   0x0
  40a106:	mov    r9,r15
  40a109:	mov    r8,r12
  40a10c:	mov    ecx,0x2
  40a111:	mov    edx,0x16
  40a116:	mov    esi,0x2
  40a11b:	lea    rdi,[rip+0x3f04]        # 40e026 <getopt_long_only@@Base+0xa46>
  40a122:	call   402450 <Mat_VarCreate@plt>
  40a127:	mov    edx,DWORD PTR [rip+0xc3f7]        # 416524 <opterr@@Base+0x10>
  40a12d:	mov    ecx,0x1
  40a132:	mov    rsi,rax
  40a135:	mov    r14,rax
  40a138:	mov    rdi,rbp
  40a13b:	call   4024d0 <Mat_VarWriteAppend@plt>
  40a140:	mov    rdi,r14
  40a143:	mov    DWORD PTR [rsp+0x18],eax
  40a147:	call   4025b0 <Mat_VarFree@plt>
  40a14c:	mov    r9,QWORD PTR [rsp+0x28]
  40a151:	mov    r8,r12
  40a154:	mov    ecx,0x2
  40a159:	mov    edx,r13d
  40a15c:	mov    esi,ebx
  40a15e:	lea    rdi,[rip+0x3ea4]        # 40e009 <getopt_long_only@@Base+0xa29>
  40a165:	mov    DWORD PTR [rsp],0x1
  40a16c:	mov    QWORD PTR [rsp+0x30],0x3
  40a175:	mov    QWORD PTR [rsp+0x38],0x4
  40a17e:	call   402450 <Mat_VarCreate@plt>
  40a183:	mov    r9,QWORD PTR [rsp+0x20]
  40a188:	mov    r8,r12
  40a18b:	mov    ecx,0x2
  40a190:	mov    edx,r13d
  40a193:	mov    esi,ebx
  40a195:	lea    rdi,[rip+0x3e74]        # 40e010 <getopt_long_only@@Base+0xa30>
  40a19c:	mov    DWORD PTR [rsp],0x1
  40a1a3:	mov    QWORD PTR [rsp+0x40],rax
  40a1a8:	call   402450 <Mat_VarCreate@plt>
  40a1ad:	mov    r9,r15
  40a1b0:	mov    r8,r12
  40a1b3:	mov    ecx,0x2
  40a1b8:	mov    edx,0x16
  40a1bd:	mov    esi,0x2
  40a1c2:	lea    rdi,[rip+0x3e5d]        # 40e026 <getopt_long_only@@Base+0xa46>
  40a1c9:	mov    QWORD PTR [rsp+0x48],rax
  40a1ce:	mov    QWORD PTR [rsp+0x30],0x1
  40a1d7:	mov    QWORD PTR [rsp+0x38],0x1
  40a1e0:	mov    DWORD PTR [rsp],0x0
  40a1e7:	call   402450 <Mat_VarCreate@plt>
  40a1ec:	mov    edx,DWORD PTR [rip+0xc332]        # 416524 <opterr@@Base+0x10>
  40a1f2:	mov    ecx,0x1
  40a1f7:	mov    rsi,rax
  40a1fa:	mov    rdi,rbp
  40a1fd:	mov    r15,rax
  40a200:	call   4024d0 <Mat_VarWriteAppend@plt>
  40a205:	mov    edx,DWORD PTR [rsp+0x18]
  40a209:	add    edx,eax
  40a20b:	pop    rax
  40a20c:	pop    rcx
  40a20d:	jmp    409e58 <Mat_VarRead@plt+0x7738>
  40a212:	call   4024c0 <__stack_chk_fail@plt>
  40a217:	mov    edx,0x1
  40a21c:	jmp    409e70 <Mat_VarRead@plt+0x7750>
  40a221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a22c:	nop    DWORD PTR [rax+0x0]
  40a230:	push   r15
  40a232:	push   r14
  40a234:	push   r13
  40a236:	push   r12
  40a238:	push   rbp
  40a239:	push   rbx
  40a23a:	sub    rsp,0x1000
  40a241:	or     QWORD PTR [rsp],0x0
  40a246:	sub    rsp,0x1d8
  40a24d:	mov    DWORD PTR [rsp+0x40],edi
  40a251:	mov    QWORD PTR [rsp+0x48],rsi
  40a256:	mov    DWORD PTR [rsp+0x44],edx
  40a25a:	lea    rsi,[rsp+0x500]
  40a262:	lea    rdi,[rsp+0x5d0]
  40a26a:	mov    rax,QWORD PTR fs:0x28
  40a273:	mov    QWORD PTR [rsp+0x11c8],rax
  40a27b:	xor    eax,eax
  40a27d:	lea    rcx,[rsp+0x430]
  40a285:	mov    QWORD PTR [rsp+0x18],rsi
  40a28a:	lea    rsi,[rsp+0x6a0]
  40a292:	mov    QWORD PTR [rsp+0x8],rdi
  40a297:	mov    QWORD PTR [rsp+0x10],rsi
  40a29c:	lea    rdi,[rsp+0x109d]
  40a2a4:	lea    rsi,[rsp+0x10dd]
  40a2ac:	mov    QWORD PTR [rsp+0x50],0x3
  40a2b5:	mov    QWORD PTR [rsp+0x58],0x4
  40a2be:	mov    QWORD PTR [rsp],rcx
  40a2c2:	mov    QWORD PTR [rsp+0x30],rdi
  40a2c7:	mov    QWORD PTR [rsp+0x20],rsi
  40a2cc:	lea    rdi,[rsp+0x111d]
  40a2d4:	lea    rsi,[rsp+0x115d]
  40a2dc:	mov    QWORD PTR [rsp+0x28],rdi
  40a2e1:	mov    QWORD PTR [rsp+0x38],rsi
  40a2e6:	mov    eax,0x33
  40a2eb:	mov    edx,0x1
  40a2f0:	lea    rbp,[rsp+0x770]
  40a2f8:	lea    rbx,[rsp+0x900]
  40a300:	lea    r11,[rsp+0x290]
  40a308:	lea    r10,[rsp+0x360]
  40a310:	lea    r15,[rsp+0xd0]
  40a318:	lea    r14,[rsp+0x140]
  40a320:	lea    r13,[rsp+0x1b0]
  40a328:	lea    r12,[rsp+0x220]
  40a330:	lea    r9,[rsp+0xa90]
  40a338:	lea    r8,[rsp+0xc20]
  40a340:	lea    rdi,[rsp+0xdb0]
  40a348:	lea    rsi,[rsp+0xf40]
  40a350:	vxorpd xmm0,xmm0,xmm0
  40a354:	vcvtsi2sd xmm0,xmm0,edx
  40a358:	mov    rcx,QWORD PTR [rsp]
  40a35c:	mov    WORD PTR [r15+rax*2-0x66],dx
  40a362:	mov    DWORD PTR [rcx+rax*4-0xcc],edx
  40a369:	vmovsd QWORD PTR [rbp+rax*8-0x198],xmm0
  40a372:	vxorpd xmm0,xmm0,xmm0
  40a376:	vcvtsi2sd xmm0,xmm0,eax
  40a37a:	mov    rcx,QWORD PTR [rsp+0x18]
  40a37f:	mov    WORD PTR [r13+rax*2-0x66],dx
  40a385:	mov    DWORD PTR [rcx+rax*4-0xcc],eax
  40a38c:	mov    rcx,QWORD PTR [rsp+0x8]
  40a391:	vmovsd QWORD PTR [rbx+rax*8-0x198],xmm0
  40a39a:	mov    DWORD PTR [rcx+rax*4-0xcc],edx
  40a3a1:	vxorps xmm0,xmm0,xmm0
  40a3a5:	mov    rcx,QWORD PTR [rsp+0x10]
  40a3aa:	vcvtsi2ss xmm0,xmm0,edx
  40a3ae:	mov    DWORD PTR [rcx+rax*4-0xcc],eax
  40a3b5:	mov    rcx,QWORD PTR [rsp+0x30]
  40a3ba:	mov    QWORD PTR [r9+rax*8-0x198],rdx
  40a3c2:	mov    BYTE PTR [rcx+rax*1],dl
  40a3c5:	mov    rcx,QWORD PTR [rsp+0x20]
  40a3ca:	vmovss DWORD PTR [r11+rax*4-0xcc],xmm0
  40a3d4:	vxorps xmm0,xmm0,xmm0
  40a3d8:	mov    BYTE PTR [rcx+rax*1],al
  40a3db:	vcvtsi2ss xmm0,xmm0,eax
  40a3df:	mov    rcx,QWORD PTR [rsp+0x28]
  40a3e4:	mov    QWORD PTR [rdi+rax*8-0x198],rdx
  40a3ec:	mov    BYTE PTR [rcx+rax*1],dl
  40a3ef:	mov    rcx,QWORD PTR [rsp+0x38]
  40a3f4:	inc    rdx
  40a3f7:	vmovss DWORD PTR [r10+rax*4-0xcc],xmm0
  40a401:	mov    WORD PTR [r14+rax*2-0x66],ax
  40a407:	mov    WORD PTR [r12+rax*2-0x66],ax
  40a40d:	mov    BYTE PTR [rcx+rax*1],al
  40a410:	mov    QWORD PTR [r8+rax*8-0x198],rax
  40a418:	mov    QWORD PTR [rsi+rax*8-0x198],rax
  40a420:	inc    rax
  40a423:	cmp    rdx,0x33
  40a427:	jne    40a350 <Mat_VarRead@plt+0x7c30>
  40a42d:	mov    eax,DWORD PTR [rsp+0x40]
  40a431:	mov    rcx,QWORD PTR [rsp]
  40a435:	sub    eax,0x6
  40a438:	cmp    eax,0x9
  40a43b:	ja     40abb2 <Mat_VarRead@plt+0x8492>
  40a441:	lea    rdx,[rip+0x4700]        # 40eb48 <getopt_long_only@@Base+0x1568>
  40a448:	movsxd rax,DWORD PTR [rdx+rax*4]
  40a44c:	add    rax,rdx
  40a44f:	notrack jmp rax
  40a452:	lea    rax,[r9+0x60]
  40a456:	mov    QWORD PTR [rsp+0xa0],rax
  40a45e:	lea    rax,[r8+0x60]
  40a462:	mov    QWORD PTR [rsp+0xa8],rax
  40a46a:	lea    rax,[r9+0xc0]
  40a471:	mov    QWORD PTR [rsp+0x90],r9
  40a479:	mov    QWORD PTR [rsp+0x98],r8
  40a481:	mov    QWORD PTR [rsp+0xb0],rax
  40a489:	add    r9,0x120
  40a490:	lea    rax,[r8+0xc0]
  40a497:	add    r8,0x120
  40a49e:	mov    QWORD PTR [rsp+0xb8],rax
  40a4a6:	mov    QWORD PTR [rsp+0xc0],r9
  40a4ae:	mov    QWORD PTR [rsp+0xc8],r8
  40a4b6:	mov    r12d,0xc
  40a4bc:	nop    DWORD PTR [rax+0x0]
  40a4c0:	mov    edx,DWORD PTR [rip+0xad2a]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  40a4c6:	mov    rdi,QWORD PTR [rsp+0x48]
  40a4cb:	xor    esi,esi
  40a4cd:	call   402690 <Mat_CreateVer@plt>
  40a4d2:	mov    rbx,rax
  40a4d5:	mov    r14d,0x1
  40a4db:	test   rax,rax
  40a4de:	je     40a57d <Mat_VarRead@plt+0x7e5d>
  40a4e4:	lea    r13,[rsp+0x90]
  40a4ec:	lea    rbp,[rsp+0x50]
  40a4f1:	sub    rsp,0x8
  40a4f5:	push   0x801
  40a4fa:	mov    r9,r13
  40a4fd:	mov    r8,rbp
  40a500:	mov    r15d,DWORD PTR [rsp+0x50]
  40a505:	mov    ecx,0x2
  40a50a:	mov    edx,r12d
  40a50d:	mov    esi,r15d
  40a510:	lea    rdi,[rip+0x3af2]        # 40e009 <getopt_long_only@@Base+0xa29>
  40a517:	call   402450 <Mat_VarCreate@plt>
  40a51c:	lea    r9,[r13+0x10]
  40a520:	mov    r8,rbp
  40a523:	lea    rdi,[rip+0x3ae6]        # 40e010 <getopt_long_only@@Base+0xa30>
  40a52a:	mov    ecx,0x2
  40a52f:	mov    edx,r12d
  40a532:	mov    esi,r15d
  40a535:	mov    QWORD PTR [rsp+0x70],rax
  40a53a:	mov    DWORD PTR [rsp],0x801
  40a541:	call   402450 <Mat_VarCreate@plt>
  40a546:	mov    QWORD PTR [rsp+0x78],rax
  40a54b:	pop    rdi
  40a54c:	pop    r8
  40a54e:	mov    r9d,DWORD PTR [rsp+0x44]
  40a553:	test   r9d,r9d
  40a556:	je     40a9af <Mat_VarRead@plt+0x828f>
  40a55c:	xor    r15d,r15d
  40a55f:	xor    r14d,r14d
  40a562:	cmp    DWORD PTR [rsp+0x44],0x1
  40a567:	je     40aa76 <Mat_VarRead@plt+0x8356>
  40a56d:	mov    rdi,r15
  40a570:	call   4025b0 <Mat_VarFree@plt>
  40a575:	mov    rdi,rbx
  40a578:	call   402610 <Mat_Close@plt>
  40a57d:	mov    rbx,QWORD PTR [rsp+0x11c8]
  40a585:	xor    rbx,QWORD PTR fs:0x28
  40a58e:	mov    eax,r14d
  40a591:	jne    40abad <Mat_VarRead@plt+0x848d>
  40a597:	add    rsp,0x11d8
  40a59e:	pop    rbx
  40a59f:	pop    rbp
  40a5a0:	pop    r12
  40a5a2:	pop    r13
  40a5a4:	pop    r14
  40a5a6:	pop    r15
  40a5a8:	ret    
  40a5a9:	lea    rax,[rdi+0x60]
  40a5ad:	mov    QWORD PTR [rsp+0xa0],rax
  40a5b5:	lea    rax,[rsi+0x60]
  40a5b9:	mov    QWORD PTR [rsp+0xa8],rax
  40a5c1:	lea    rax,[rdi+0xc0]
  40a5c8:	mov    QWORD PTR [rsp+0x90],rdi
  40a5d0:	mov    QWORD PTR [rsp+0x98],rsi
  40a5d8:	mov    QWORD PTR [rsp+0xb0],rax
  40a5e0:	add    rdi,0x120
  40a5e7:	lea    rax,[rsi+0xc0]
  40a5ee:	add    rsi,0x120
  40a5f5:	mov    QWORD PTR [rsp+0xb8],rax
  40a5fd:	mov    QWORD PTR [rsp+0xc0],rdi
  40a605:	mov    QWORD PTR [rsp+0xc8],rsi
  40a60d:	mov    r12d,0xd
  40a613:	jmp    40a4c0 <Mat_VarRead@plt+0x7da0>
  40a618:	lea    rax,[rbp+0x60]
  40a61c:	mov    QWORD PTR [rsp+0xa0],rax
  40a624:	lea    rax,[rbx+0x60]
  40a628:	mov    QWORD PTR [rsp+0xa8],rax
  40a630:	lea    rax,[rbp+0xc0]
  40a637:	mov    QWORD PTR [rsp+0x90],rbp
  40a63f:	mov    QWORD PTR [rsp+0x98],rbx
  40a647:	mov    QWORD PTR [rsp+0xb0],rax
  40a64f:	add    rbp,0x120
  40a656:	lea    rax,[rbx+0xc0]
  40a65d:	add    rbx,0x120
  40a664:	mov    QWORD PTR [rsp+0xb8],rax
  40a66c:	mov    QWORD PTR [rsp+0xc0],rbp
  40a674:	mov    QWORD PTR [rsp+0xc8],rbx
  40a67c:	mov    r12d,0x9
  40a682:	jmp    40a4c0 <Mat_VarRead@plt+0x7da0>
  40a687:	lea    rax,[r11+0x30]
  40a68b:	mov    QWORD PTR [rsp+0xa0],rax
  40a693:	lea    rax,[r10+0x30]
  40a697:	mov    QWORD PTR [rsp+0xa8],rax
  40a69f:	lea    rax,[r11+0x60]
  40a6a3:	mov    QWORD PTR [rsp+0x90],r11
  40a6ab:	mov    QWORD PTR [rsp+0x98],r10
  40a6b3:	mov    QWORD PTR [rsp+0xb0],rax
  40a6bb:	add    r11,0x90
  40a6c2:	lea    rax,[r10+0x60]
  40a6c6:	add    r10,0x90
  40a6cd:	mov    QWORD PTR [rsp+0xb8],rax
  40a6d5:	mov    QWORD PTR [rsp+0xc0],r11
  40a6dd:	mov    QWORD PTR [rsp+0xc8],r10
  40a6e5:	mov    r12d,DWORD PTR [rsp+0x40]
  40a6ea:	jmp    40a4c0 <Mat_VarRead@plt+0x7da0>
  40a6ef:	lea    rcx,[rsp+0x10dc]
  40a6f7:	mov    QWORD PTR [rsp+0xa0],rcx
  40a6ff:	lea    rcx,[rsp+0x111c]
  40a707:	lea    rdx,[rsp+0x10d0]
  40a70f:	lea    rax,[rsp+0x1110]
  40a717:	mov    QWORD PTR [rsp+0xa8],rcx
  40a71f:	lea    rcx,[rsp+0x10e8]
  40a727:	mov    QWORD PTR [rsp+0x90],rdx
  40a72f:	mov    QWORD PTR [rsp+0x98],rax
  40a737:	mov    QWORD PTR [rsp+0xb0],rcx
  40a73f:	lea    rdx,[rsp+0x10f4]
  40a747:	lea    rcx,[rsp+0x1128]
  40a74f:	lea    rax,[rsp+0x1134]
  40a757:	mov    QWORD PTR [rsp+0xb8],rcx
  40a75f:	mov    QWORD PTR [rsp+0xc0],rdx
  40a767:	mov    QWORD PTR [rsp+0xc8],rax
  40a76f:	mov    r12d,0x1
  40a775:	jmp    40a4c0 <Mat_VarRead@plt+0x7da0>
  40a77a:	lea    rcx,[rsp+0x115c]
  40a782:	mov    QWORD PTR [rsp+0xa0],rcx
  40a78a:	lea    rcx,[rsp+0x119c]
  40a792:	lea    rdx,[rsp+0x1150]
  40a79a:	lea    rax,[rsp+0x1190]
  40a7a2:	mov    QWORD PTR [rsp+0xa8],rcx
  40a7aa:	lea    rcx,[rsp+0x1168]
  40a7b2:	mov    QWORD PTR [rsp+0x90],rdx
  40a7ba:	mov    QWORD PTR [rsp+0x98],rax
  40a7c2:	mov    QWORD PTR [rsp+0xb0],rcx
  40a7ca:	lea    rdx,[rsp+0x1174]
  40a7d2:	lea    rcx,[rsp+0x11a8]
  40a7da:	lea    rax,[rsp+0x11b4]
  40a7e2:	mov    QWORD PTR [rsp+0xb8],rcx
  40a7ea:	mov    QWORD PTR [rsp+0xc0],rdx
  40a7f2:	mov    QWORD PTR [rsp+0xc8],rax
  40a7fa:	mov    r12d,0x2
  40a800:	jmp    40a4c0 <Mat_VarRead@plt+0x7da0>
  40a805:	lea    rax,[r15+0x18]
  40a809:	mov    QWORD PTR [rsp+0xa0],rax
  40a811:	lea    rax,[r14+0x18]
  40a815:	mov    QWORD PTR [rsp+0xa8],rax
  40a81d:	lea    rax,[r15+0x30]
  40a821:	mov    QWORD PTR [rsp+0xb0],rax
  40a829:	lea    rax,[r14+0x30]
  40a82d:	mov    QWORD PTR [rsp+0xb8],rax
  40a835:	lea    rax,[r15+0x48]
  40a839:	mov    QWORD PTR [rsp+0xc0],rax
  40a841:	lea    rax,[r14+0x48]
  40a845:	mov    QWORD PTR [rsp+0x90],r15
  40a84d:	mov    QWORD PTR [rsp+0x98],r14
  40a855:	mov    QWORD PTR [rsp+0xc8],rax
  40a85d:	mov    r12d,0x3
  40a863:	jmp    40a4c0 <Mat_VarRead@plt+0x7da0>
  40a868:	lea    rax,[r13+0x18]
  40a86c:	mov    QWORD PTR [rsp+0xa0],rax
  40a874:	lea    rax,[r12+0x18]
  40a879:	mov    QWORD PTR [rsp+0xa8],rax
  40a881:	lea    rax,[r13+0x30]
  40a885:	mov    QWORD PTR [rsp+0xb0],rax
  40a88d:	lea    rax,[r12+0x30]
  40a892:	mov    QWORD PTR [rsp+0xb8],rax
  40a89a:	lea    rax,[r13+0x48]
  40a89e:	mov    QWORD PTR [rsp+0xc0],rax
  40a8a6:	lea    rax,[r12+0x48]
  40a8ab:	mov    QWORD PTR [rsp+0x98],r12
  40a8b3:	mov    QWORD PTR [rsp+0x90],r13
  40a8bb:	mov    QWORD PTR [rsp+0xc8],rax
  40a8c3:	mov    r12d,0x4
  40a8c9:	jmp    40a4c0 <Mat_VarRead@plt+0x7da0>
  40a8ce:	mov    rbx,QWORD PTR [rsp+0x18]
  40a8d3:	lea    rax,[rcx+0x30]
  40a8d7:	mov    QWORD PTR [rsp+0xa0],rax
  40a8df:	lea    rax,[rbx+0x30]
  40a8e3:	mov    QWORD PTR [rsp+0xa8],rax
  40a8eb:	lea    rax,[rcx+0x60]
  40a8ef:	mov    QWORD PTR [rsp+0xb0],rax
  40a8f7:	lea    rax,[rbx+0x60]
  40a8fb:	mov    QWORD PTR [rsp+0x90],rcx
  40a903:	mov    QWORD PTR [rsp+0xb8],rax
  40a90b:	add    rcx,0x90
  40a912:	lea    rax,[rbx+0x90]
  40a919:	mov    QWORD PTR [rsp+0x98],rbx
  40a921:	mov    QWORD PTR [rsp+0xc0],rcx
  40a929:	mov    QWORD PTR [rsp+0xc8],rax
  40a931:	mov    r12d,0x5
  40a937:	jmp    40a4c0 <Mat_VarRead@plt+0x7da0>
  40a93c:	mov    rbx,QWORD PTR [rsp+0x8]
  40a941:	mov    rdi,QWORD PTR [rsp+0x10]
  40a946:	lea    rax,[rbx+0x30]
  40a94a:	mov    QWORD PTR [rsp+0xa0],rax
  40a952:	lea    rax,[rdi+0x30]
  40a956:	mov    QWORD PTR [rsp+0xa8],rax
  40a95e:	lea    rax,[rbx+0x60]
  40a962:	mov    QWORD PTR [rsp+0xb0],rax
  40a96a:	lea    rax,[rdi+0x60]
  40a96e:	mov    QWORD PTR [rsp+0xb8],rax
  40a976:	lea    rax,[rbx+0x90]
  40a97d:	mov    QWORD PTR [rsp+0xc0],rax
  40a985:	lea    rax,[rdi+0x90]
  40a98c:	mov    QWORD PTR [rsp+0x90],rbx
  40a994:	mov    QWORD PTR [rsp+0x98],rdi
  40a99c:	mov    QWORD PTR [rsp+0xc8],rax
  40a9a4:	mov    r12d,0x6
  40a9aa:	jmp    40a4c0 <Mat_VarRead@plt+0x7da0>
  40a9af:	sub    rsp,0x8
  40a9b3:	push   0x801
  40a9b8:	lea    r9,[r13+0x20]
  40a9bc:	mov    r8,rbp
  40a9bf:	mov    r14d,DWORD PTR [rsp+0x50]
  40a9c4:	mov    ecx,0x2
  40a9c9:	mov    esi,r14d
  40a9cc:	mov    edx,r12d
  40a9cf:	lea    rdi,[rip+0x3633]        # 40e009 <getopt_long_only@@Base+0xa29>
  40a9d6:	call   402450 <Mat_VarCreate@plt>
  40a9db:	mov    esi,r14d
  40a9de:	lea    r9,[r13+0x30]
  40a9e2:	mov    r8,rbp
  40a9e5:	mov    ecx,0x2
  40a9ea:	mov    edx,r12d
  40a9ed:	lea    rdi,[rip+0x361c]        # 40e010 <getopt_long_only@@Base+0xa30>
  40a9f4:	mov    DWORD PTR [rsp],0x801
  40a9fb:	mov    QWORD PTR [rsp+0x80],rax
  40aa03:	call   402450 <Mat_VarCreate@plt>
  40aa08:	lea    r9,[rsp+0x70]
  40aa0d:	mov    ecx,0x2
  40aa12:	mov    r8,rbp
  40aa15:	mov    edx,0x16
  40aa1a:	mov    esi,0x2
  40aa1f:	lea    rdi,[rip+0x3600]        # 40e026 <getopt_long_only@@Base+0xa46>
  40aa26:	mov    QWORD PTR [rsp+0x88],rax
  40aa2e:	mov    QWORD PTR [rsp+0x90],0x0
  40aa3a:	mov    QWORD PTR [rsp+0x60],0x2
  40aa43:	mov    QWORD PTR [rsp+0x68],0x1
  40aa4c:	mov    DWORD PTR [rsp],0x0
  40aa53:	call   402450 <Mat_VarCreate@plt>
  40aa58:	mov    edx,DWORD PTR [rip+0xbac6]        # 416524 <opterr@@Base+0x10>
  40aa5e:	mov    rsi,rax
  40aa61:	mov    rdi,rbx
  40aa64:	mov    r15,rax
  40aa67:	call   402470 <Mat_VarWrite@plt>
  40aa6c:	pop    rcx
  40aa6d:	mov    r14d,eax
  40aa70:	pop    rsi
  40aa71:	jmp    40a56d <Mat_VarRead@plt+0x7e4d>
  40aa76:	mov    QWORD PTR [rsp+0x70],0x0
  40aa7f:	mov    QWORD PTR [rsp+0x50],0x1
  40aa88:	mov    QWORD PTR [rsp+0x58],0x1
  40aa91:	lea    r15,[rsp+0x60]
  40aa96:	sub    rsp,0x8
  40aa9a:	push   0x0
  40aa9c:	mov    r9,r15
  40aa9f:	mov    r8,rbp
  40aaa2:	mov    ecx,0x2
  40aaa7:	mov    edx,0x16
  40aaac:	mov    esi,0x2
  40aab1:	lea    rdi,[rip+0x356e]        # 40e026 <getopt_long_only@@Base+0xa46>
  40aab8:	call   402450 <Mat_VarCreate@plt>
  40aabd:	mov    edx,DWORD PTR [rip+0xba61]        # 416524 <opterr@@Base+0x10>
  40aac3:	mov    ecx,0x1
  40aac8:	mov    rsi,rax
  40aacb:	mov    rdi,rbx
  40aace:	mov    QWORD PTR [rsp+0x10],rax
  40aad3:	call   4024d0 <Mat_VarWriteAppend@plt>
  40aad8:	mov    r8,QWORD PTR [rsp+0x10]
  40aadd:	mov    r14d,eax
  40aae0:	mov    rdi,r8
  40aae3:	call   4025b0 <Mat_VarFree@plt>
  40aae8:	mov    esi,DWORD PTR [rsp+0x50]
  40aaec:	lea    r9,[r13+0x20]
  40aaf0:	mov    r8,rbp
  40aaf3:	mov    ecx,0x2
  40aaf8:	mov    edx,r12d
  40aafb:	lea    rdi,[rip+0x3507]        # 40e009 <getopt_long_only@@Base+0xa29>
  40ab02:	mov    DWORD PTR [rsp],0x801
  40ab09:	mov    QWORD PTR [rsp+0x60],0x3
  40ab12:	mov    QWORD PTR [rsp+0x68],0x4
  40ab1b:	call   402450 <Mat_VarCreate@plt>
  40ab20:	mov    esi,DWORD PTR [rsp+0x50]
  40ab24:	lea    r9,[r13+0x30]
  40ab28:	mov    r8,rbp
  40ab2b:	mov    ecx,0x2
  40ab30:	mov    edx,r12d
  40ab33:	lea    rdi,[rip+0x34d6]        # 40e010 <getopt_long_only@@Base+0xa30>
  40ab3a:	mov    DWORD PTR [rsp],0x801
  40ab41:	mov    QWORD PTR [rsp+0x70],rax
  40ab46:	call   402450 <Mat_VarCreate@plt>
  40ab4b:	mov    r9,r15
  40ab4e:	mov    r8,rbp
  40ab51:	mov    ecx,0x2
  40ab56:	mov    edx,0x16
  40ab5b:	mov    esi,0x2
  40ab60:	lea    rdi,[rip+0x34bf]        # 40e026 <getopt_long_only@@Base+0xa46>
  40ab67:	mov    QWORD PTR [rsp+0x78],rax
  40ab6c:	mov    QWORD PTR [rsp+0x60],0x1
  40ab75:	mov    QWORD PTR [rsp+0x68],0x1
  40ab7e:	mov    DWORD PTR [rsp],0x0
  40ab85:	call   402450 <Mat_VarCreate@plt>
  40ab8a:	mov    edx,DWORD PTR [rip+0xb994]        # 416524 <opterr@@Base+0x10>
  40ab90:	mov    ecx,0x1
  40ab95:	mov    rsi,rax
  40ab98:	mov    rdi,rbx
  40ab9b:	mov    r15,rax
  40ab9e:	call   4024d0 <Mat_VarWriteAppend@plt>
  40aba3:	add    r14d,eax
  40aba6:	pop    rax
  40aba7:	pop    rdx
  40aba8:	jmp    40a56d <Mat_VarRead@plt+0x7e4d>
  40abad:	call   4024c0 <__stack_chk_fail@plt>
  40abb2:	mov    r14d,0x1
  40abb8:	jmp    40a57d <Mat_VarRead@plt+0x7e5d>
  40abbd:	nop    DWORD PTR [rax]
  40abc0:	push   r15
  40abc2:	xor    esi,esi
  40abc4:	push   r14
  40abc6:	push   r13
  40abc8:	push   r12
  40abca:	push   rbp
  40abcb:	push   rbx
  40abcc:	sub    rsp,0x78
  40abd0:	mov    edx,DWORD PTR [rip+0xa61a]        # 4151f0 <getopt_long_only@@Base+0x7c10>
  40abd6:	mov    rax,QWORD PTR fs:0x28
  40abdf:	mov    QWORD PTR [rsp+0x68],rax
  40abe4:	xor    eax,eax
  40abe6:	mov    QWORD PTR [rsp+0x10],0x1
  40abef:	mov    QWORD PTR [rsp+0x18],0x3
  40abf8:	call   402690 <Mat_CreateVer@plt>
  40abfd:	mov    r14,rax
  40ac00:	mov    eax,0x1
  40ac05:	test   r14,r14
  40ac08:	je     40ad62 <Mat_VarRead@plt+0x8642>
  40ac0e:	mov    rax,QWORD PTR [rip+0x7bd3]        # 4127e8 <getopt_long_only@@Base+0x5208>
  40ac15:	lea    r12,[rsp+0x10]
  40ac1a:	mov    QWORD PTR [rsp+0x40],rax
  40ac1f:	mov    rax,QWORD PTR [rip+0x7c8a]        # 4128b0 <getopt_long_only@@Base+0x52d0>
  40ac26:	sub    rsp,0x8
  40ac2a:	mov    QWORD PTR [rsp+0x50],rax
  40ac2f:	mov    rax,QWORD PTR [rip+0x7c82]        # 4128b8 <getopt_long_only@@Base+0x52d8>
  40ac36:	mov    ecx,0x2
  40ac3b:	mov    QWORD PTR [rsp+0x58],rax
  40ac40:	mov    rax,QWORD PTR [rip+0x7c79]        # 4128c0 <getopt_long_only@@Base+0x52e0>
  40ac47:	mov    esi,0x1
  40ac4c:	mov    QWORD PTR [rsp+0x60],rax
  40ac51:	lea    rax,[rip+0x33b1]        # 40e009 <getopt_long_only@@Base+0xa29>
  40ac58:	mov    QWORD PTR [rsp+0x28],rax
  40ac5d:	lea    rax,[rip+0x33ac]        # 40e010 <getopt_long_only@@Base+0xa30>
  40ac64:	mov    QWORD PTR [rsp+0x30],rax
  40ac69:	lea    rax,[rip+0x33c6]        # 40e036 <getopt_long_only@@Base+0xa56>
  40ac70:	mov    QWORD PTR [rsp+0x38],rax
  40ac75:	push   0x0
  40ac77:	xor    r9d,r9d
  40ac7a:	mov    r8,r12
  40ac7d:	mov    edx,0x15
  40ac82:	lea    rdi,[rip+0x337b]        # 40e004 <getopt_long_only@@Base+0xa24>
  40ac89:	call   402450 <Mat_VarCreate@plt>
  40ac8e:	pop    rcx
  40ac8f:	pop    rsi
  40ac90:	mov    r13,rax
  40ac93:	lea    rax,[rsp+0x40]
  40ac98:	mov    QWORD PTR [rsp+0x8],rax
  40ac9d:	xor    ebx,ebx
  40ac9f:	lea    r15,[rsp+0x20]
  40aca4:	mov    r8d,0x3
  40acaa:	mov    rcx,r15
  40acad:	mov    rdx,r12
  40acb0:	mov    esi,0x2
  40acb5:	lea    rdi,[rip+0x37f6]        # 40e4b2 <getopt_long_only@@Base+0xed2>
  40acbc:	mov    QWORD PTR [rsp+0x10],0x1
  40acc5:	mov    QWORD PTR [rsp+0x18],0x1
  40acce:	call   402680 <Mat_VarCreateStruct@plt>
  40acd3:	mov    QWORD PTR [rsp+0x10],0x2
  40acdc:	mov    QWORD PTR [rsp+0x18],0x2
  40ace5:	sub    rsp,0x8
  40ace9:	push   0x0
  40aceb:	mov    r8,r12
  40acee:	mov    ecx,0x2
  40acf3:	mov    r9,QWORD PTR [rsp+0x18]
  40acf8:	mov    edx,0x9
  40acfd:	mov    esi,0x6
  40ad02:	lea    rdi,[rip+0x331d]        # 40e026 <getopt_long_only@@Base+0xa46>
  40ad09:	mov    rbp,rax
  40ad0c:	call   402450 <Mat_VarCreate@plt>
  40ad11:	mov    rcx,rax
  40ad14:	xor    edx,edx
  40ad16:	lea    rsi,[rip+0x32ec]        # 40e009 <getopt_long_only@@Base+0xa29>
  40ad1d:	mov    rdi,rbp
  40ad20:	call   402700 <Mat_VarSetStructFieldByName@plt>
  40ad25:	mov    rdx,rbp
  40ad28:	mov    esi,ebx
  40ad2a:	mov    rdi,r13
  40ad2d:	call   402520 <Mat_VarSetCell@plt>
  40ad32:	inc    ebx
  40ad34:	pop    rax
  40ad35:	pop    rdx
  40ad36:	cmp    ebx,0x3
  40ad39:	jne    40aca4 <Mat_VarRead@plt+0x8584>
  40ad3f:	mov    edx,DWORD PTR [rip+0xb7df]        # 416524 <opterr@@Base+0x10>
  40ad45:	mov    rsi,r13
  40ad48:	mov    rdi,r14
  40ad4b:	call   402470 <Mat_VarWrite@plt>
  40ad50:	mov    rdi,r13
  40ad53:	call   4025b0 <Mat_VarFree@plt>
  40ad58:	mov    rdi,r14
  40ad5b:	call   402610 <Mat_Close@plt>
  40ad60:	xor    eax,eax
  40ad62:	mov    rcx,QWORD PTR [rsp+0x68]
  40ad67:	xor    rcx,QWORD PTR fs:0x28
  40ad70:	jne    40ad81 <Mat_VarRead@plt+0x8661>
  40ad72:	add    rsp,0x78
  40ad76:	pop    rbx
  40ad77:	pop    rbp
  40ad78:	pop    r12
  40ad7a:	pop    r13
  40ad7c:	pop    r14
  40ad7e:	pop    r15
  40ad80:	ret    
  40ad81:	call   4024c0 <__stack_chk_fail@plt>
  40ad86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad90:	push   r15
  40ad92:	xor    edi,edi
  40ad94:	mov    ecx,0x2
  40ad99:	push   r14
  40ad9b:	mov    edx,0x9
  40ada0:	mov    esi,0x6
  40ada5:	push   r13
  40ada7:	lea    r13,[rip+0x325b]        # 40e009 <getopt_long_only@@Base+0xa29>
  40adae:	push   r12
  40adb0:	lea    r12,[rip+0x3259]        # 40e010 <getopt_long_only@@Base+0xa30>
  40adb7:	push   rbp
  40adb8:	push   rbx
  40adb9:	sub    rsp,0xa8
  40adc0:	mov    rax,QWORD PTR fs:0x28
  40adc9:	mov    QWORD PTR [rsp+0x98],rax
  40add1:	xor    eax,eax
  40add3:	mov    rax,QWORD PTR [rip+0x7946]        # 412720 <getopt_long_only@@Base+0x5140>
  40adda:	mov    QWORD PTR [rsp+0x30],0x0
  40ade3:	mov    QWORD PTR [rsp+0x38],rax
  40ade8:	mov    rax,QWORD PTR [rip+0x7ae1]        # 4128d0 <getopt_long_only@@Base+0x52f0>
  40adef:	mov    QWORD PTR [rsp+0x50],r13
  40adf4:	mov    QWORD PTR [rsp+0x60],rax
  40adf9:	mov    rax,QWORD PTR [rip+0x7ad8]        # 4128d8 <getopt_long_only@@Base+0x52f8>
  40ae00:	mov    QWORD PTR [rsp+0x58],r12
  40ae05:	mov    QWORD PTR [rsp+0x68],rax
  40ae0a:	mov    rax,QWORD PTR [rip+0x7acf]        # 4128e0 <getopt_long_only@@Base+0x5300>
  40ae11:	mov    QWORD PTR [rsp+0x20],0x2
  40ae1a:	mov    QWORD PTR [rsp+0x70],rax
  40ae1f:	mov    rax,QWORD PTR [rip+0x7902]        # 412728 <getopt_long_only@@Base+0x5148>
  40ae26:	mov    QWORD PTR [rsp+0x28],0x1
  40ae2f:	mov    QWORD PTR [rsp+0x80],rax
  40ae37:	mov    rax,QWORD PTR [rip+0x7aaa]        # 4128e8 <getopt_long_only@@Base+0x5308>
  40ae3e:	lea    rbp,[rsp+0x20]
  40ae43:	mov    QWORD PTR [rsp+0x88],rax
  40ae4b:	mov    rax,QWORD PTR [rip+0x78de]        # 412730 <getopt_long_only@@Base+0x5150>
  40ae52:	sub    rsp,0x8
  40ae56:	mov    QWORD PTR [rsp+0x98],rax
  40ae5e:	mov    rax,QWORD PTR [rip+0x78d3]        # 412738 <getopt_long_only@@Base+0x5158>
  40ae65:	mov    r8,rbp
  40ae68:	mov    QWORD PTR [rsp+0x48],rax
  40ae6d:	mov    rax,QWORD PTR [rip+0x78cc]        # 412740 <getopt_long_only@@Base+0x5160>
  40ae74:	mov    QWORD PTR [rsp+0x50],rax
  40ae79:	push   0x1
  40ae7b:	lea    r9,[rsp+0x40]
  40ae80:	call   402450 <Mat_VarCreate@plt>
  40ae85:	lea    r9,[rsp+0x70]
  40ae8a:	xor    edi,edi
  40ae8c:	mov    r8,rbp
  40ae8f:	mov    ecx,0x2
  40ae94:	mov    edx,0x9
  40ae99:	mov    esi,0x6
  40ae9e:	mov    DWORD PTR [rsp],0x1
  40aea5:	mov    QWORD PTR [rsp+0x18],rax
  40aeaa:	mov    QWORD PTR [rsp+0x30],0x3
  40aeb3:	mov    QWORD PTR [rsp+0x38],0x1
  40aebc:	call   402450 <Mat_VarCreate@plt>
  40aec1:	lea    r9,[rsp+0x90]
  40aec9:	xor    edi,edi
  40aecb:	mov    r8,rbp
  40aece:	mov    ecx,0x2
  40aed3:	mov    edx,0x9
  40aed8:	mov    esi,0x6
  40aedd:	mov    DWORD PTR [rsp],0x1
  40aee4:	mov    QWORD PTR [rsp+0x20],rax
  40aee9:	mov    QWORD PTR [rsp+0x30],0x1
  40aef2:	mov    QWORD PTR [rsp+0x38],0x3
  40aefb:	call   402450 <Mat_VarCreate@plt>
  40af00:	lea    r9,[rsp+0x50]
  40af05:	xor    edi,edi
  40af07:	mov    r8,rbp
  40af0a:	mov    ecx,0x2
  40af0f:	mov    edx,0x9
  40af14:	mov    esi,0x6
  40af19:	mov    r14,rax
  40af1c:	mov    QWORD PTR [rsp+0x30],0x1
  40af25:	mov    QWORD PTR [rsp+0x38],0x2
  40af2e:	mov    DWORD PTR [rsp],0x1
  40af35:	call   402450 <Mat_VarCreate@plt>
  40af3a:	lea    r9,[rsp+0x60]
  40af3f:	mov    rcx,r9
  40af42:	mov    r8d,0x2
  40af48:	mov    rdx,rbp
  40af4b:	mov    esi,0x2
  40af50:	lea    rdi,[rip+0x30cf]        # 40e026 <getopt_long_only@@Base+0xa46>
  40af57:	mov    QWORD PTR [rsp+0x28],r9
  40af5c:	mov    r15,rax
  40af5f:	mov    QWORD PTR [rsp+0x30],0x2
  40af68:	mov    QWORD PTR [rsp+0x38],0x1
  40af71:	call   402680 <Mat_VarCreateStruct@plt>
  40af76:	mov    rcx,QWORD PTR [rsp+0x18]
  40af7b:	xor    edx,edx
  40af7d:	mov    rsi,r13
  40af80:	mov    rdi,rax
  40af83:	mov    rbx,rax
  40af86:	call   402700 <Mat_VarSetStructFieldByName@plt>
  40af8b:	mov    rcx,QWORD PTR [rsp+0x20]
  40af90:	xor    edx,edx
  40af92:	mov    rdi,rbx
  40af95:	mov    rsi,r12
  40af98:	call   402700 <Mat_VarSetStructFieldByName@plt>
  40af9d:	mov    rdi,rbx
  40afa0:	mov    rcx,r14
  40afa3:	mov    edx,0x1
  40afa8:	mov    rsi,r13
  40afab:	call   402700 <Mat_VarSetStructFieldByName@plt>
  40afb0:	mov    rcx,r15
  40afb3:	mov    edx,0x1
  40afb8:	mov    rdi,rbx
  40afbb:	mov    rsi,r12
  40afbe:	call   402700 <Mat_VarSetStructFieldByName@plt>
  40afc3:	mov    esi,0x1
  40afc8:	mov    rdi,rbx
  40afcb:	call   4025e0 <Mat_VarPrint@plt>
  40afd0:	mov    QWORD PTR [rbx+0x38],0x0
  40afd8:	mov    rdi,rbx
  40afdb:	call   4025b0 <Mat_VarFree@plt>
  40afe0:	mov    r9,QWORD PTR [rsp+0x28]
  40afe5:	mov    r8d,0x2
  40afeb:	mov    rcx,r9
  40afee:	mov    rdx,rbp
  40aff1:	mov    esi,0x2
  40aff6:	lea    rdi,[rip+0x35b9]        # 40e5b6 <getopt_long_only@@Base+0xfd6>
  40affd:	mov    QWORD PTR [rsp+0x30],0x2
  40b006:	mov    QWORD PTR [rsp+0x38],0x1
  40b00f:	call   402680 <Mat_VarCreateStruct@plt>
  40b014:	mov    rbx,rax
  40b017:	xor    edx,edx
  40b019:	xor    esi,esi
  40b01b:	mov    rcx,r15
  40b01e:	mov    rdi,rax
  40b021:	call   402710 <Mat_VarSetStructFieldByIndex@plt>
  40b026:	xor    edx,edx
  40b028:	mov    rcx,r14
  40b02b:	mov    esi,0x1
  40b030:	mov    rdi,rbx
  40b033:	call   402710 <Mat_VarSetStructFieldByIndex@plt>
  40b038:	mov    rcx,QWORD PTR [rsp+0x20]
  40b03d:	xor    esi,esi
  40b03f:	mov    edx,0x1
  40b044:	mov    rdi,rbx
  40b047:	call   402710 <Mat_VarSetStructFieldByIndex@plt>
  40b04c:	mov    rcx,QWORD PTR [rsp+0x18]
  40b051:	mov    edx,0x1
  40b056:	mov    esi,0x1
  40b05b:	mov    rdi,rbx
  40b05e:	call   402710 <Mat_VarSetStructFieldByIndex@plt>
  40b063:	mov    esi,0x1
  40b068:	mov    rdi,rbx
  40b06b:	call   4025e0 <Mat_VarPrint@plt>
  40b070:	mov    rdi,rbx
  40b073:	call   4025b0 <Mat_VarFree@plt>
  40b078:	pop    rax
  40b079:	pop    rdx
  40b07a:	mov    rdx,QWORD PTR [rsp+0x98]
  40b082:	xor    rdx,QWORD PTR fs:0x28
  40b08b:	jne    40b0a1 <Mat_VarRead@plt+0x8981>
  40b08d:	add    rsp,0xa8
  40b094:	pop    rbx
  40b095:	pop    rbp
  40b096:	pop    r12
  40b098:	pop    r13
  40b09a:	pop    r14
  40b09c:	xor    eax,eax
  40b09e:	pop    r15
  40b0a0:	ret    
  40b0a1:	call   4024c0 <__stack_chk_fail@plt>
  40b0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b0b0:	push   r15
  40b0b2:	push   r14
  40b0b4:	push   r13
  40b0b6:	push   r12
  40b0b8:	push   rbp
  40b0b9:	push   rbx
  40b0ba:	sub    rsp,0x1000
  40b0c1:	or     QWORD PTR [rsp],0x0
  40b0c6:	sub    rsp,0x708
  40b0cd:	mov    edx,0xb40
  40b0d2:	xor    esi,esi
  40b0d4:	lea    r15,[rip+0x338e]        # 40e469 <getopt_long_only@@Base+0xe89>
  40b0db:	xor    ebx,ebx
  40b0dd:	lea    r12,[rsp+0x70]
  40b0e2:	mov    rdi,r12
  40b0e5:	lea    rbp,[rsp+0xbb0]
  40b0ed:	mov    rax,QWORD PTR fs:0x28
  40b0f6:	mov    QWORD PTR [rsp+0x16f8],rax
  40b0fe:	xor    eax,eax
  40b100:	lea    r14,[rsp+0x50]
  40b105:	call   402530 <memset@plt>
  40b10a:	mov    edx,0xb40
  40b10f:	xor    esi,esi
  40b111:	mov    rdi,rbp
  40b114:	call   402530 <memset@plt>
  40b119:	lea    rax,[rip+0x37af]        # 40e8cf <getopt_long_only@@Base+0x12ef>
  40b120:	lea    rcx,[rsp+0x30]
  40b125:	mov    r8d,0x2
  40b12b:	mov    rdx,r14
  40b12e:	mov    esi,0x4
  40b133:	lea    rdi,[rip+0x2eec]        # 40e026 <getopt_long_only@@Base+0xa46>
  40b13a:	mov    QWORD PTR [rsp+0x40],0x0
  40b143:	mov    QWORD PTR [rsp+0x30],r15
  40b148:	mov    QWORD PTR [rsp+0x38],rax
  40b14d:	mov    QWORD PTR [rsp+0x50],0x3
  40b156:	mov    QWORD PTR [rsp+0x58],0x4
  40b15f:	mov    QWORD PTR [rsp+0x60],0x5
  40b168:	mov    QWORD PTR [rsp+0x68],0x6
  40b171:	call   402680 <Mat_VarCreateStruct@plt>
  40b176:	mov    QWORD PTR [rsp+0x50],0x1
  40b17f:	mov    QWORD PTR [rsp+0x58],0x1
  40b188:	mov    r13,rax
  40b18b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b190:	lea    eax,[rbx+0x1]
  40b193:	vxorpd xmm0,xmm0,xmm0
  40b197:	vcvtsi2sd xmm0,xmm0,eax
  40b19b:	mov    eax,ebx
  40b19d:	not    eax
  40b19f:	sub    rsp,0x8
  40b1a3:	vmovsd QWORD PTR [r12],xmm0
  40b1a9:	vxorpd xmm0,xmm0,xmm0
  40b1ad:	vcvtsi2sd xmm0,xmm0,eax
  40b1b1:	mov    r9,r12
  40b1b4:	mov    r8,r14
  40b1b7:	mov    ecx,0x2
  40b1bc:	vmovsd QWORD PTR [rbp+0x0],xmm0
  40b1c1:	push   0x1
  40b1c3:	mov    edx,0x9
  40b1c8:	mov    esi,0x6
  40b1cd:	xor    edi,edi
  40b1cf:	call   402450 <Mat_VarCreate@plt>
  40b1d4:	mov    rcx,rax
  40b1d7:	mov    rdx,rbx
  40b1da:	mov    rsi,r15
  40b1dd:	mov    rdi,r13
  40b1e0:	call   402700 <Mat_VarSetStructFieldByName@plt>
  40b1e5:	mov    r9,rbp
  40b1e8:	mov    r8,r14
  40b1eb:	mov    ecx,0x2
  40b1f0:	mov    edx,0x9
  40b1f5:	mov    esi,0x6
  40b1fa:	xor    edi,edi
  40b1fc:	mov    DWORD PTR [rsp],0x1
  40b203:	call   402450 <Mat_VarCreate@plt>
  40b208:	mov    rcx,rax
  40b20b:	mov    rdx,rbx
  40b20e:	lea    rsi,[rip+0x36ba]        # 40e8cf <getopt_long_only@@Base+0x12ef>
  40b215:	mov    rdi,r13
  40b218:	call   402700 <Mat_VarSetStructFieldByName@plt>
  40b21d:	inc    rbx
  40b220:	pop    rax
  40b221:	add    r12,0x8
  40b225:	add    rbp,0x8
  40b229:	pop    rdx
  40b22a:	cmp    rbx,0x168
  40b231:	jne    40b190 <Mat_VarRead@plt+0x8a70>
  40b237:	movabs rax,0x100000001
  40b241:	mov    QWORD PTR [rsp],rax
  40b245:	dec    rax
  40b248:	mov    QWORD PTR [rsp+0x8],rax
  40b24d:	mov    QWORD PTR [rsp+0x10],rax
  40b252:	movabs rax,0x400000002
  40b25c:	mov    QWORD PTR [rsp+0x18],rax
  40b261:	movabs rax,0x200000001
  40b26b:	lea    rdx,[rsp+0x10]
  40b270:	xor    r8d,r8d
  40b273:	lea    rcx,[rsp+0x20]
  40b278:	mov    QWORD PTR [rsp+0x20],rax
  40b27d:	mov    rsi,rsp
  40b280:	add    rax,0x2
  40b284:	mov    rdi,r13
  40b287:	mov    QWORD PTR [rsp+0x28],rax
  40b28c:	call   402600 <Mat_VarGetStructs@plt>
  40b291:	mov    rbx,rax
  40b294:	mov    rdi,rax
  40b297:	mov    esi,0x1
  40b29c:	call   4025e0 <Mat_VarPrint@plt>
  40b2a1:	mov    rdi,rbx
  40b2a4:	call   4025b0 <Mat_VarFree@plt>
  40b2a9:	mov    rdi,r13
  40b2ac:	call   4025b0 <Mat_VarFree@plt>
  40b2b1:	xor    eax,eax
  40b2b3:	mov    rdx,QWORD PTR [rsp+0x16f8]
  40b2bb:	xor    rdx,QWORD PTR fs:0x28
  40b2c4:	jne    40b2d8 <Mat_VarRead@plt+0x8bb8>
  40b2c6:	add    rsp,0x1708
  40b2cd:	pop    rbx
  40b2ce:	pop    rbp
  40b2cf:	pop    r12
  40b2d1:	pop    r13
  40b2d3:	pop    r14
  40b2d5:	pop    r15
  40b2d7:	ret    
  40b2d8:	call   4024c0 <__stack_chk_fail@plt>
  40b2dd:	nop    DWORD PTR [rax]
  40b2e0:	push   r14
  40b2e2:	mov    edx,0xb40
  40b2e7:	xor    esi,esi
  40b2e9:	push   r13
  40b2eb:	push   r12
  40b2ed:	push   rbp
  40b2ee:	xor    ebp,ebp
  40b2f0:	push   rbx
  40b2f1:	sub    rsp,0xba0
  40b2f8:	lea    rbx,[rsp+0x50]
  40b2fd:	mov    rdi,rbx
  40b300:	mov    rax,QWORD PTR fs:0x28
  40b309:	mov    QWORD PTR [rsp+0xb98],rax
  40b311:	xor    eax,eax
  40b313:	lea    r14,[rsp+0x30]
  40b318:	call   402530 <memset@plt>
  40b31d:	mov    QWORD PTR [rsp+0x30],0x3
  40b326:	mov    QWORD PTR [rsp+0x38],0x4
  40b32f:	mov    QWORD PTR [rsp+0x40],0x5
  40b338:	mov    QWORD PTR [rsp+0x48],0x6
  40b341:	sub    rsp,0x8
  40b345:	push   0x0
  40b347:	mov    ecx,0x4
  40b34c:	mov    esi,0x1
  40b351:	xor    r9d,r9d
  40b354:	mov    r8,r14
  40b357:	mov    edx,0x15
  40b35c:	lea    rdi,[rip+0x2cc3]        # 40e026 <getopt_long_only@@Base+0xa46>
  40b363:	call   402450 <Mat_VarCreate@plt>
  40b368:	mov    QWORD PTR [rsp+0x40],0x1
  40b371:	mov    QWORD PTR [rsp+0x48],0x1
  40b37a:	pop    rcx
  40b37b:	mov    r13,rax
  40b37e:	pop    rsi
  40b37f:	nop
  40b380:	lea    r12d,[rbp+0x1]
  40b384:	vxorpd xmm0,xmm0,xmm0
  40b388:	vcvtsi2sd xmm0,xmm0,r12d
  40b38d:	sub    rsp,0x8
  40b391:	mov    r9,rbx
  40b394:	mov    r8,r14
  40b397:	vmovsd QWORD PTR [rbx],xmm0
  40b39b:	push   0x1
  40b39d:	mov    ecx,0x2
  40b3a2:	mov    edx,0x9
  40b3a7:	mov    esi,0x6
  40b3ac:	xor    edi,edi
  40b3ae:	call   402450 <Mat_VarCreate@plt>
  40b3b3:	mov    rdx,rax
  40b3b6:	mov    esi,ebp
  40b3b8:	mov    rdi,r13
  40b3bb:	call   402520 <Mat_VarSetCell@plt>
  40b3c0:	pop    rax
  40b3c1:	add    rbx,0x8
  40b3c5:	mov    ebp,r12d
  40b3c8:	pop    rdx
  40b3c9:	cmp    r12d,0x168
  40b3d0:	jne    40b380 <Mat_VarRead@plt+0x8c60>
  40b3d2:	movabs rax,0x100000001
  40b3dc:	mov    QWORD PTR [rsp],rax
  40b3e0:	dec    rax
  40b3e3:	mov    QWORD PTR [rsp+0x8],rax
  40b3e8:	mov    QWORD PTR [rsp+0x10],rax
  40b3ed:	movabs rax,0x400000002
  40b3f7:	mov    QWORD PTR [rsp+0x18],rax
  40b3fc:	movabs rax,0x200000001
  40b406:	mov    QWORD PTR [rsp+0x20],rax
  40b40b:	lea    rcx,[rsp+0x20]
  40b410:	add    rax,0x2
  40b414:	lea    rdx,[rsp+0x10]
  40b419:	mov    rsi,rsp
  40b41c:	mov    rdi,r13
  40b41f:	mov    QWORD PTR [rsp+0x28],rax
  40b424:	call   402420 <Mat_VarGetCells@plt>
  40b429:	mov    r12,rax
  40b42c:	test   rax,rax
  40b42f:	je     40b45e <Mat_VarRead@plt+0x8d3e>
  40b431:	mov    rbx,rax
  40b434:	lea    rbp,[rax+0x60]
  40b438:	nop    DWORD PTR [rax+rax*1+0x0]
  40b440:	mov    rdi,QWORD PTR [rbx]
  40b443:	mov    esi,0x1
  40b448:	add    rbx,0x8
  40b44c:	call   4025e0 <Mat_VarPrint@plt>
  40b451:	cmp    rbx,rbp
  40b454:	jne    40b440 <Mat_VarRead@plt+0x8d20>
  40b456:	mov    rdi,r12
  40b459:	call   4023d0 <free@plt>
  40b45e:	mov    rdi,r13
  40b461:	call   4025b0 <Mat_VarFree@plt>
  40b466:	xor    eax,eax
  40b468:	mov    rcx,QWORD PTR [rsp+0xb98]
  40b470:	xor    rcx,QWORD PTR fs:0x28
  40b479:	jne    40b48b <Mat_VarRead@plt+0x8d6b>
  40b47b:	add    rsp,0xba0
  40b482:	pop    rbx
  40b483:	pop    rbp
  40b484:	pop    r12
  40b486:	pop    r13
  40b488:	pop    r14
  40b48a:	ret    
  40b48b:	call   4024c0 <__stack_chk_fail@plt>
  40b490:	push   r15
  40b492:	push   r14
  40b494:	push   r13
  40b496:	mov    r13,rsi
  40b499:	xor    esi,esi
  40b49b:	push   r12
  40b49d:	mov    r12d,edx
  40b4a0:	push   rbp
  40b4a1:	mov    ebp,0x1
  40b4a6:	push   rbx
  40b4a7:	sub    rsp,0xa8
  40b4ae:	mov    rax,QWORD PTR fs:0x28
  40b4b7:	mov    QWORD PTR [rsp+0x98],rax
  40b4bf:	xor    eax,eax
  40b4c1:	movabs rax,0x100000001
  40b4cb:	mov    QWORD PTR [rsp+0x38],rax
  40b4d0:	movabs rax,0x200000002
  40b4da:	mov    QWORD PTR [rsp+0x2c],0x0
  40b4e3:	mov    DWORD PTR [rsp+0x34],0x0
  40b4eb:	mov    DWORD PTR [rsp+0x40],0x1
  40b4f3:	mov    QWORD PTR [rsp+0x44],rax
  40b4f8:	mov    DWORD PTR [rsp+0x4c],0x1
  40b500:	call   402400 <Mat_Open@plt>
  40b505:	test   rax,rax
  40b508:	je     40b5a5 <Mat_VarRead@plt+0x8e85>
  40b50e:	mov    rsi,r13
  40b511:	mov    rdi,rax
  40b514:	mov    rbx,rax
  40b517:	call   402500 <Mat_VarReadInfo@plt>
  40b51c:	mov    r15,rax
  40b51f:	test   rax,rax
  40b522:	je     40b598 <Mat_VarRead@plt+0x8e78>
  40b524:	cmp    DWORD PTR [rax+0x14],0x2
  40b528:	je     40b570 <Mat_VarRead@plt+0x8e50>
  40b52a:	mov    rdx,QWORD PTR [r15+0x28]
  40b52e:	mov    DWORD PTR [r15+0x14],r12d
  40b532:	mov    eax,DWORD PTR [rdx]
  40b534:	sub    r12d,0x6
  40b538:	dec    eax
  40b53a:	mov    DWORD PTR [rsp+0x38],eax
  40b53e:	mov    rax,QWORD PTR [rdx+0x8]
  40b542:	dec    eax
  40b544:	mov    DWORD PTR [rsp+0x3c],eax
  40b548:	cmp    r12d,0x9
  40b54c:	ja     40ca19 <Mat_VarRead@plt+0xa2f9>
  40b552:	lea    rdx,[rip+0x3617]        # 40eb70 <getopt_long_only@@Base+0x1590>
  40b559:	movsxd rax,DWORD PTR [rdx+r12*4]
  40b55d:	mov    ebp,DWORD PTR [r15+0x18]
  40b561:	add    rax,rdx
  40b564:	test   ebp,ebp
  40b566:	notrack jmp rax
  40b569:	nop    DWORD PTR [rax+0x0]
  40b570:	lea    rsi,[rsp+0x10]
  40b575:	xor    ecx,ecx
  40b577:	mov    edx,0x2
  40b57c:	mov    rdi,rax
  40b57f:	mov    DWORD PTR [rsp+0x10],0x2
  40b587:	call   402580 <Mat_VarGetStructField@plt>
  40b58c:	mov    r15,rax
  40b58f:	test   rax,rax
  40b592:	jne    40b52a <Mat_VarRead@plt+0x8e0a>
  40b594:	nop    DWORD PTR [rax+0x0]
  40b598:	mov    ebp,0x1
  40b59d:	mov    rdi,rbx
  40b5a0:	call   402610 <Mat_Close@plt>
  40b5a5:	mov    rcx,QWORD PTR [rsp+0x98]
  40b5ad:	xor    rcx,QWORD PTR fs:0x28
  40b5b6:	mov    eax,ebp
  40b5b8:	jne    40ca14 <Mat_VarRead@plt+0xa2f4>
  40b5be:	add    rsp,0xa8
  40b5c5:	pop    rbx
  40b5c6:	pop    rbp
  40b5c7:	pop    r12
  40b5c9:	pop    r13
  40b5cb:	pop    r14
  40b5cd:	pop    r15
  40b5cf:	ret    
  40b5d0:	je     40c940 <Mat_VarRead@plt+0xa220>
  40b5d6:	lea    rax,[rsp+0x50]
  40b5db:	lea    r14,[rsp+0x44]
  40b5e0:	lea    r13,[rsp+0x38]
  40b5e5:	lea    r12,[rsp+0x2c]
  40b5ea:	lea    rbp,[rsp+0x10]
  40b5ef:	mov    QWORD PTR [rsp+0x10],rax
  40b5f4:	mov    r9,r14
  40b5f7:	lea    rax,[rsp+0x70]
  40b5fc:	mov    r8,r13
  40b5ff:	mov    rcx,r12
  40b602:	mov    rdx,rbp
  40b605:	mov    rsi,r15
  40b608:	mov    rdi,rbx
  40b60b:	mov    QWORD PTR [rsp+0x18],rax
  40b610:	call   4024b0 <Mat_VarReadData@plt>
  40b615:	push   QWORD PTR [rsp+0x88]
  40b61c:	xor    eax,eax
  40b61e:	lea    rsi,[rip+0x374b]        # 40ed70 <getopt_long_only@@Base+0x1790>
  40b625:	push   QWORD PTR [rsp+0x70]
  40b629:	mov    edi,0x1
  40b62e:	push   QWORD PTR [rsp+0x88]
  40b635:	push   QWORD PTR [rsp+0x70]
  40b639:	mov    r9,QWORD PTR [rsp+0xa0]
  40b641:	mov    r8,QWORD PTR [rsp+0x80]
  40b649:	mov    rcx,QWORD PTR [rsp+0x90]
  40b651:	mov    rdx,QWORD PTR [rsp+0x70]
  40b656:	call   402670 <__printf_chk@plt>
  40b65b:	add    rsp,0x20
  40b65f:	cmp    DWORD PTR [rbx+0x20],0x200
  40b666:	je     40b6a2 <Mat_VarRead@plt+0x8f82>
  40b668:	mov    rdi,QWORD PTR [r15+0x28]
  40b66c:	mov    esi,0x18
  40b671:	call   402640 <realloc@plt>
  40b676:	test   rax,rax
  40b679:	je     40b6a2 <Mat_VarRead@plt+0x8f82>
  40b67b:	inc    DWORD PTR [r15+0x8]
  40b67f:	mov    QWORD PTR [r15+0x28],rax
  40b683:	mov    QWORD PTR [rax+0x10],0x1
  40b68b:	mov    r9,r14
  40b68e:	mov    r8,r13
  40b691:	mov    rcx,r12
  40b694:	mov    rdx,rbp
  40b697:	mov    rsi,r15
  40b69a:	mov    rdi,rbx
  40b69d:	call   4024b0 <Mat_VarReadData@plt>
  40b6a2:	push   QWORD PTR [rsp+0x88]
  40b6a9:	lea    rsi,[rip+0x36c0]        # 40ed70 <getopt_long_only@@Base+0x1790>
  40b6b0:	push   QWORD PTR [rsp+0x70]
  40b6b4:	push   QWORD PTR [rsp+0x88]
  40b6bb:	push   QWORD PTR [rsp+0x70]
  40b6bf:	mov    r9,QWORD PTR [rsp+0xa0]
  40b6c7:	mov    r8,QWORD PTR [rsp+0x80]
  40b6cf:	mov    rcx,QWORD PTR [rsp+0x90]
  40b6d7:	mov    rdx,QWORD PTR [rsp+0x70]
  40b6dc:	mov    edi,0x1
  40b6e1:	xor    eax,eax
  40b6e3:	call   402670 <__printf_chk@plt>
  40b6e8:	xor    ebp,ebp
  40b6ea:	add    rsp,0x20
  40b6ee:	xchg   ax,ax
  40b6f0:	mov    rdi,r15
  40b6f3:	call   4025b0 <Mat_VarFree@plt>
  40b6f8:	jmp    40b59d <Mat_VarRead@plt+0x8e7d>
  40b6fd:	nop    DWORD PTR [rax]
  40b700:	je     40c868 <Mat_VarRead@plt+0xa148>
  40b706:	lea    rax,[rsp+0x50]
  40b70b:	lea    r14,[rsp+0x44]
  40b710:	lea    r13,[rsp+0x38]
  40b715:	lea    r12,[rsp+0x2c]
  40b71a:	lea    rbp,[rsp+0x10]
  40b71f:	mov    QWORD PTR [rsp+0x10],rax
  40b724:	mov    r9,r14
  40b727:	lea    rax,[rsp+0x70]
  40b72c:	mov    r8,r13
  40b72f:	mov    rcx,r12
  40b732:	mov    rdx,rbp
  40b735:	mov    rsi,r15
  40b738:	mov    rdi,rbx
  40b73b:	mov    QWORD PTR [rsp+0x18],rax
  40b740:	call   4024b0 <Mat_VarReadData@plt>
  40b745:	push   QWORD PTR [rsp+0x88]
  40b74c:	xor    eax,eax
  40b74e:	lea    rsi,[rip+0x3653]        # 40eda8 <getopt_long_only@@Base+0x17c8>
  40b755:	push   QWORD PTR [rsp+0x70]
  40b759:	mov    edi,0x1
  40b75e:	push   QWORD PTR [rsp+0x88]
  40b765:	push   QWORD PTR [rsp+0x70]
  40b769:	mov    r9,QWORD PTR [rsp+0xa0]
  40b771:	mov    r8,QWORD PTR [rsp+0x80]
  40b779:	mov    rcx,QWORD PTR [rsp+0x90]
  40b781:	mov    rdx,QWORD PTR [rsp+0x70]
  40b786:	call   402670 <__printf_chk@plt>
  40b78b:	add    rsp,0x20
  40b78f:	cmp    DWORD PTR [rbx+0x20],0x200
  40b796:	je     40b7d2 <Mat_VarRead@plt+0x90b2>
  40b798:	mov    rdi,QWORD PTR [r15+0x28]
  40b79c:	mov    esi,0x18
  40b7a1:	call   402640 <realloc@plt>
  40b7a6:	test   rax,rax
  40b7a9:	je     40b7d2 <Mat_VarRead@plt+0x90b2>
  40b7ab:	inc    DWORD PTR [r15+0x8]
  40b7af:	mov    QWORD PTR [r15+0x28],rax
  40b7b3:	mov    QWORD PTR [rax+0x10],0x1
  40b7bb:	mov    r9,r14
  40b7be:	mov    r8,r13
  40b7c1:	mov    rcx,r12
  40b7c4:	mov    rdx,rbp
  40b7c7:	mov    rsi,r15
  40b7ca:	mov    rdi,rbx
  40b7cd:	call   4024b0 <Mat_VarReadData@plt>
  40b7d2:	push   QWORD PTR [rsp+0x88]
  40b7d9:	lea    rsi,[rip+0x35c8]        # 40eda8 <getopt_long_only@@Base+0x17c8>
  40b7e0:	push   QWORD PTR [rsp+0x70]
  40b7e4:	push   QWORD PTR [rsp+0x88]
  40b7eb:	push   QWORD PTR [rsp+0x70]
  40b7ef:	mov    r9,QWORD PTR [rsp+0xa0]
  40b7f7:	mov    r8,QWORD PTR [rsp+0x80]
  40b7ff:	mov    rcx,QWORD PTR [rsp+0x90]
  40b807:	mov    rdx,QWORD PTR [rsp+0x70]
  40b80c:	jmp    40b6dc <Mat_VarRead@plt+0x8fbc>
  40b811:	nop    DWORD PTR [rax+0x0]
  40b818:	je     40c780 <Mat_VarRead@plt+0xa060>
  40b81e:	lea    rax,[rsp+0x50]
  40b823:	lea    r14,[rsp+0x44]
  40b828:	lea    r13,[rsp+0x38]
  40b82d:	lea    r12,[rsp+0x2c]
  40b832:	lea    rbp,[rsp+0x10]
  40b837:	mov    QWORD PTR [rsp+0x10],rax
  40b83c:	mov    r9,r14
  40b83f:	lea    rax,[rsp+0x70]
  40b844:	mov    r8,r13
  40b847:	mov    rcx,r12
  40b84a:	mov    rdx,rbp
  40b84d:	mov    rsi,r15
  40b850:	mov    rdi,rbx
  40b853:	mov    QWORD PTR [rsp+0x18],rax
  40b858:	call   4024b0 <Mat_VarReadData@plt>
  40b85d:	vmovsd xmm7,QWORD PTR [rsp+0x88]
  40b866:	vmovsd xmm6,QWORD PTR [rsp+0x68]
  40b86c:	vmovsd xmm5,QWORD PTR [rsp+0x78]
  40b872:	vmovsd xmm4,QWORD PTR [rsp+0x58]
  40b878:	vmovsd xmm3,QWORD PTR [rsp+0x80]
  40b881:	vmovsd xmm2,QWORD PTR [rsp+0x60]
  40b887:	vmovsd xmm1,QWORD PTR [rsp+0x70]
  40b88d:	vmovsd xmm0,QWORD PTR [rsp+0x50]
  40b893:	lea    rsi,[rip+0x34a6]        # 40ed40 <getopt_long_only@@Base+0x1760>
  40b89a:	mov    edi,0x1
  40b89f:	mov    eax,0x8
  40b8a4:	call   402670 <__printf_chk@plt>
  40b8a9:	cmp    DWORD PTR [rbx+0x20],0x200
  40b8b0:	je     40b8ec <Mat_VarRead@plt+0x91cc>
  40b8b2:	mov    rdi,QWORD PTR [r15+0x28]
  40b8b6:	mov    esi,0x18
  40b8bb:	call   402640 <realloc@plt>
  40b8c0:	test   rax,rax
  40b8c3:	je     40b8ec <Mat_VarRead@plt+0x91cc>
  40b8c5:	inc    DWORD PTR [r15+0x8]
  40b8c9:	mov    QWORD PTR [r15+0x28],rax
  40b8cd:	mov    QWORD PTR [rax+0x10],0x1
  40b8d5:	mov    r9,r14
  40b8d8:	mov    r8,r13
  40b8db:	mov    rcx,r12
  40b8de:	mov    rdx,rbp
  40b8e1:	mov    rsi,r15
  40b8e4:	mov    rdi,rbx
  40b8e7:	call   4024b0 <Mat_VarReadData@plt>
  40b8ec:	vmovsd xmm7,QWORD PTR [rsp+0x88]
  40b8f5:	vmovsd xmm6,QWORD PTR [rsp+0x68]
  40b8fb:	vmovsd xmm5,QWORD PTR [rsp+0x78]
  40b901:	vmovsd xmm4,QWORD PTR [rsp+0x58]
  40b907:	vmovsd xmm3,QWORD PTR [rsp+0x80]
  40b910:	vmovsd xmm2,QWORD PTR [rsp+0x60]
  40b916:	vmovsd xmm1,QWORD PTR [rsp+0x70]
  40b91c:	vmovsd xmm0,QWORD PTR [rsp+0x50]
  40b922:	lea    rsi,[rip+0x3417]        # 40ed40 <getopt_long_only@@Base+0x1760>
  40b929:	mov    edi,0x1
  40b92e:	mov    eax,0x8
  40b933:	call   402670 <__printf_chk@plt>
  40b938:	xor    ebp,ebp
  40b93a:	jmp    40b6f0 <Mat_VarRead@plt+0x8fd0>
  40b93f:	nop
  40b940:	je     40c680 <Mat_VarRead@plt+0x9f60>
  40b946:	lea    rax,[rsp+0x50]
  40b94b:	lea    r14,[rsp+0x44]
  40b950:	lea    r13,[rsp+0x38]
  40b955:	lea    r12,[rsp+0x2c]
  40b95a:	lea    rbp,[rsp+0x10]
  40b95f:	mov    QWORD PTR [rsp+0x10],rax
  40b964:	mov    r9,r14
  40b967:	lea    rax,[rsp+0x70]
  40b96c:	mov    r8,r13
  40b96f:	mov    rcx,r12
  40b972:	mov    rdx,rbp
  40b975:	mov    rsi,r15
  40b978:	mov    rdi,rbx
  40b97b:	mov    QWORD PTR [rsp+0x18],rax
  40b980:	call   4024b0 <Mat_VarReadData@plt>
  40b985:	vxorpd xmm0,xmm0,xmm0
  40b989:	vxorpd xmm7,xmm7,xmm7
  40b98d:	vxorpd xmm6,xmm6,xmm6
  40b991:	vxorpd xmm5,xmm5,xmm5
  40b995:	vxorpd xmm4,xmm4,xmm4
  40b999:	vxorpd xmm3,xmm3,xmm3
  40b99d:	vxorpd xmm2,xmm2,xmm2
  40b9a1:	vxorpd xmm1,xmm1,xmm1
  40b9a5:	lea    rsi,[rip+0x3394]        # 40ed40 <getopt_long_only@@Base+0x1760>
  40b9ac:	mov    edi,0x1
  40b9b1:	mov    eax,0x8
  40b9b6:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsp+0x50]
  40b9bc:	vcvtss2sd xmm7,xmm7,DWORD PTR [rsp+0x7c]
  40b9c2:	vcvtss2sd xmm6,xmm6,DWORD PTR [rsp+0x5c]
  40b9c8:	vcvtss2sd xmm5,xmm5,DWORD PTR [rsp+0x74]
  40b9ce:	vcvtss2sd xmm4,xmm4,DWORD PTR [rsp+0x54]
  40b9d4:	vcvtss2sd xmm3,xmm3,DWORD PTR [rsp+0x78]
  40b9da:	vcvtss2sd xmm2,xmm2,DWORD PTR [rsp+0x58]
  40b9e0:	vcvtss2sd xmm1,xmm1,DWORD PTR [rsp+0x70]
  40b9e6:	call   402670 <__printf_chk@plt>
  40b9eb:	cmp    DWORD PTR [rbx+0x20],0x200
  40b9f2:	je     40ba2e <Mat_VarRead@plt+0x930e>
  40b9f4:	mov    rdi,QWORD PTR [r15+0x28]
  40b9f8:	mov    esi,0x18
  40b9fd:	call   402640 <realloc@plt>
  40ba02:	test   rax,rax
  40ba05:	je     40ba2e <Mat_VarRead@plt+0x930e>
  40ba07:	inc    DWORD PTR [r15+0x8]
  40ba0b:	mov    QWORD PTR [r15+0x28],rax
  40ba0f:	mov    QWORD PTR [rax+0x10],0x1
  40ba17:	mov    r9,r14
  40ba1a:	mov    r8,r13
  40ba1d:	mov    rcx,r12
  40ba20:	mov    rdx,rbp
  40ba23:	mov    rsi,r15
  40ba26:	mov    rdi,rbx
  40ba29:	call   4024b0 <Mat_VarReadData@plt>
  40ba2e:	vxorpd xmm0,xmm0,xmm0
  40ba32:	vxorpd xmm7,xmm7,xmm7
  40ba36:	vxorpd xmm6,xmm6,xmm6
  40ba3a:	vxorpd xmm5,xmm5,xmm5
  40ba3e:	vxorpd xmm4,xmm4,xmm4
  40ba42:	vxorpd xmm3,xmm3,xmm3
  40ba46:	vxorpd xmm2,xmm2,xmm2
  40ba4a:	vxorpd xmm1,xmm1,xmm1
  40ba4e:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsp+0x50]
  40ba54:	vcvtss2sd xmm7,xmm7,DWORD PTR [rsp+0x7c]
  40ba5a:	vcvtss2sd xmm6,xmm6,DWORD PTR [rsp+0x5c]
  40ba60:	vcvtss2sd xmm5,xmm5,DWORD PTR [rsp+0x74]
  40ba66:	vcvtss2sd xmm4,xmm4,DWORD PTR [rsp+0x54]
  40ba6c:	vcvtss2sd xmm3,xmm3,DWORD PTR [rsp+0x78]
  40ba72:	vcvtss2sd xmm2,xmm2,DWORD PTR [rsp+0x58]
  40ba78:	vcvtss2sd xmm1,xmm1,DWORD PTR [rsp+0x70]
  40ba7e:	jmp    40b922 <Mat_VarRead@plt+0x9202>
  40ba83:	nop    DWORD PTR [rax+rax*1+0x0]
  40ba88:	je     40c590 <Mat_VarRead@plt+0x9e70>
  40ba8e:	lea    rax,[rsp+0x90]
  40ba96:	lea    r14,[rsp+0x44]
  40ba9b:	lea    r13,[rsp+0x38]
  40baa0:	lea    r12,[rsp+0x2c]
  40baa5:	lea    rbp,[rsp+0x10]
  40baaa:	mov    QWORD PTR [rsp+0x10],rax
  40baaf:	mov    r9,r14
  40bab2:	lea    rax,[rsp+0x94]
  40baba:	mov    r8,r13
  40babd:	mov    rcx,r12
  40bac0:	mov    rdx,rbp
  40bac3:	mov    rsi,r15
  40bac6:	mov    rdi,rbx
  40bac9:	mov    QWORD PTR [rsp+0x18],rax
  40bace:	call   4024b0 <Mat_VarReadData@plt>
  40bad3:	movsx  eax,BYTE PTR [rsp+0x97]
  40badb:	movsx  ecx,BYTE PTR [rsp+0x94]
  40bae3:	movsx  edx,BYTE PTR [rsp+0x90]
  40baeb:	push   rax
  40baec:	lea    rsi,[rip+0x33bd]        # 40eeb0 <getopt_long_only@@Base+0x18d0>
  40baf3:	mov    edi,0x1
  40baf8:	movsx  eax,BYTE PTR [rsp+0x9b]
  40bb00:	push   rax
  40bb01:	movsx  eax,BYTE PTR [rsp+0xa5]
  40bb09:	push   rax
  40bb0a:	movsx  eax,BYTE PTR [rsp+0xa9]
  40bb12:	push   rax
  40bb13:	xor    eax,eax
  40bb15:	movsx  r9d,BYTE PTR [rsp+0xb6]
  40bb1e:	movsx  r8d,BYTE PTR [rsp+0xb2]
  40bb27:	call   402670 <__printf_chk@plt>
  40bb2c:	add    rsp,0x20
  40bb30:	cmp    DWORD PTR [rbx+0x20],0x200
  40bb37:	je     40bb73 <Mat_VarRead@plt+0x9453>
  40bb39:	mov    rdi,QWORD PTR [r15+0x28]
  40bb3d:	mov    esi,0x18
  40bb42:	call   402640 <realloc@plt>
  40bb47:	test   rax,rax
  40bb4a:	je     40bb73 <Mat_VarRead@plt+0x9453>
  40bb4c:	inc    DWORD PTR [r15+0x8]
  40bb50:	mov    QWORD PTR [r15+0x28],rax
  40bb54:	mov    QWORD PTR [rax+0x10],0x1
  40bb5c:	mov    r9,r14
  40bb5f:	mov    r8,r13
  40bb62:	mov    rcx,r12
  40bb65:	mov    rdx,rbp
  40bb68:	mov    rsi,r15
  40bb6b:	mov    rdi,rbx
  40bb6e:	call   4024b0 <Mat_VarReadData@plt>
  40bb73:	movsx  eax,BYTE PTR [rsp+0x97]
  40bb7b:	movsx  ecx,BYTE PTR [rsp+0x94]
  40bb83:	movsx  edx,BYTE PTR [rsp+0x90]
  40bb8b:	push   rax
  40bb8c:	lea    rsi,[rip+0x331d]        # 40eeb0 <getopt_long_only@@Base+0x18d0>
  40bb93:	movsx  eax,BYTE PTR [rsp+0x9b]
  40bb9b:	push   rax
  40bb9c:	movsx  eax,BYTE PTR [rsp+0xa5]
  40bba4:	push   rax
  40bba5:	movsx  eax,BYTE PTR [rsp+0xa9]
  40bbad:	push   rax
  40bbae:	movsx  r9d,BYTE PTR [rsp+0xb6]
  40bbb7:	movsx  r8d,BYTE PTR [rsp+0xb2]
  40bbc0:	mov    edi,0x1
  40bbc5:	xor    eax,eax
  40bbc7:	call   402670 <__printf_chk@plt>
  40bbcc:	xor    ebp,ebp
  40bbce:	add    rsp,0x20
  40bbd2:	jmp    40b6f0 <Mat_VarRead@plt+0x8fd0>
  40bbd7:	nop    WORD PTR [rax+rax*1+0x0]
  40bbe0:	je     40c4a0 <Mat_VarRead@plt+0x9d80>
  40bbe6:	lea    rax,[rsp+0x90]
  40bbee:	lea    r14,[rsp+0x44]
  40bbf3:	lea    r13,[rsp+0x38]
  40bbf8:	lea    r12,[rsp+0x2c]
  40bbfd:	lea    rbp,[rsp+0x10]
  40bc02:	mov    QWORD PTR [rsp+0x10],rax
  40bc07:	mov    r9,r14
  40bc0a:	lea    rax,[rsp+0x94]
  40bc12:	mov    r8,r13
  40bc15:	mov    rcx,r12
  40bc18:	mov    rdx,rbp
  40bc1b:	mov    rsi,r15
  40bc1e:	mov    rdi,rbx
  40bc21:	mov    QWORD PTR [rsp+0x18],rax
  40bc26:	call   4024b0 <Mat_VarReadData@plt>
  40bc2b:	movzx  eax,BYTE PTR [rsp+0x97]
  40bc33:	movzx  ecx,BYTE PTR [rsp+0x94]
  40bc3b:	movzx  edx,BYTE PTR [rsp+0x90]
  40bc43:	push   rax
  40bc44:	lea    rsi,[rip+0x32a5]        # 40eef0 <getopt_long_only@@Base+0x1910>
  40bc4b:	mov    edi,0x1
  40bc50:	movzx  eax,BYTE PTR [rsp+0x9b]
  40bc58:	push   rax
  40bc59:	movzx  eax,BYTE PTR [rsp+0xa5]
  40bc61:	push   rax
  40bc62:	movzx  eax,BYTE PTR [rsp+0xa9]
  40bc6a:	push   rax
  40bc6b:	xor    eax,eax
  40bc6d:	movzx  r9d,BYTE PTR [rsp+0xb6]
  40bc76:	movzx  r8d,BYTE PTR [rsp+0xb2]
  40bc7f:	call   402670 <__printf_chk@plt>
  40bc84:	add    rsp,0x20
  40bc88:	cmp    DWORD PTR [rbx+0x20],0x200
  40bc8f:	je     40bccb <Mat_VarRead@plt+0x95ab>
  40bc91:	mov    rdi,QWORD PTR [r15+0x28]
  40bc95:	mov    esi,0x18
  40bc9a:	call   402640 <realloc@plt>
  40bc9f:	test   rax,rax
  40bca2:	je     40bccb <Mat_VarRead@plt+0x95ab>
  40bca4:	inc    DWORD PTR [r15+0x8]
  40bca8:	mov    QWORD PTR [r15+0x28],rax
  40bcac:	mov    QWORD PTR [rax+0x10],0x1
  40bcb4:	mov    r9,r14
  40bcb7:	mov    r8,r13
  40bcba:	mov    rcx,r12
  40bcbd:	mov    rdx,rbp
  40bcc0:	mov    rsi,r15
  40bcc3:	mov    rdi,rbx
  40bcc6:	call   4024b0 <Mat_VarReadData@plt>
  40bccb:	movzx  eax,BYTE PTR [rsp+0x97]
  40bcd3:	movzx  ecx,BYTE PTR [rsp+0x94]
  40bcdb:	movzx  edx,BYTE PTR [rsp+0x90]
  40bce3:	push   rax
  40bce4:	lea    rsi,[rip+0x3205]        # 40eef0 <getopt_long_only@@Base+0x1910>
  40bceb:	movzx  eax,BYTE PTR [rsp+0x9b]
  40bcf3:	push   rax
  40bcf4:	movzx  eax,BYTE PTR [rsp+0xa5]
  40bcfc:	push   rax
  40bcfd:	movzx  eax,BYTE PTR [rsp+0xa9]
  40bd05:	push   rax
  40bd06:	movzx  r9d,BYTE PTR [rsp+0xb6]
  40bd0f:	movzx  r8d,BYTE PTR [rsp+0xb2]
  40bd18:	jmp    40bbc0 <Mat_VarRead@plt+0x94a0>
  40bd1d:	nop    DWORD PTR [rax]
  40bd20:	je     40c3d0 <Mat_VarRead@plt+0x9cb0>
  40bd26:	lea    rax,[rsp+0x50]
  40bd2b:	lea    r14,[rsp+0x44]
  40bd30:	lea    r13,[rsp+0x38]
  40bd35:	lea    r12,[rsp+0x2c]
  40bd3a:	lea    rbp,[rsp+0x10]
  40bd3f:	mov    QWORD PTR [rsp+0x10],rax
  40bd44:	mov    r9,r14
  40bd47:	lea    rax,[rsp+0x70]
  40bd4c:	mov    r8,r13
  40bd4f:	mov    rcx,r12
  40bd52:	mov    rdx,rbp
  40bd55:	mov    rsi,r15
  40bd58:	mov    rdi,rbx
  40bd5b:	mov    QWORD PTR [rsp+0x18],rax
  40bd60:	call   4024b0 <Mat_VarReadData@plt>
  40bd65:	movsx  eax,WORD PTR [rsp+0x76]
  40bd6a:	movsx  ecx,WORD PTR [rsp+0x70]
  40bd6f:	movsx  edx,WORD PTR [rsp+0x50]
  40bd74:	push   rax
  40bd75:	lea    rsi,[rip+0x30c4]        # 40ee40 <getopt_long_only@@Base+0x1860>
  40bd7c:	mov    edi,0x1
  40bd81:	movsx  eax,WORD PTR [rsp+0x5e]
  40bd86:	push   rax
  40bd87:	movsx  eax,WORD PTR [rsp+0x82]
  40bd8f:	push   rax
  40bd90:	movsx  eax,WORD PTR [rsp+0x6a]
  40bd95:	push   rax
  40bd96:	xor    eax,eax
  40bd98:	movsx  r9d,WORD PTR [rsp+0x94]
  40bda1:	movsx  r8d,WORD PTR [rsp+0x74]
  40bda7:	call   402670 <__printf_chk@plt>
  40bdac:	add    rsp,0x20
  40bdb0:	cmp    DWORD PTR [rbx+0x20],0x200
  40bdb7:	je     40bdf3 <Mat_VarRead@plt+0x96d3>
  40bdb9:	mov    rdi,QWORD PTR [r15+0x28]
  40bdbd:	mov    esi,0x18
  40bdc2:	call   402640 <realloc@plt>
  40bdc7:	test   rax,rax
  40bdca:	je     40bdf3 <Mat_VarRead@plt+0x96d3>
  40bdcc:	inc    DWORD PTR [r15+0x8]
  40bdd0:	mov    QWORD PTR [r15+0x28],rax
  40bdd4:	mov    QWORD PTR [rax+0x10],0x1
  40bddc:	mov    r9,r14
  40bddf:	mov    r8,r13
  40bde2:	mov    rcx,r12
  40bde5:	mov    rdx,rbp
  40bde8:	mov    rsi,r15
  40bdeb:	mov    rdi,rbx
  40bdee:	call   4024b0 <Mat_VarReadData@plt>
  40bdf3:	movsx  eax,WORD PTR [rsp+0x76]
  40bdf8:	movsx  ecx,WORD PTR [rsp+0x70]
  40bdfd:	movsx  edx,WORD PTR [rsp+0x50]
  40be02:	push   rax
  40be03:	lea    rsi,[rip+0x3036]        # 40ee40 <getopt_long_only@@Base+0x1860>
  40be0a:	movsx  eax,WORD PTR [rsp+0x5e]
  40be0f:	push   rax
  40be10:	movsx  eax,WORD PTR [rsp+0x82]
  40be18:	push   rax
  40be19:	movsx  eax,WORD PTR [rsp+0x6a]
  40be1e:	push   rax
  40be1f:	movsx  r9d,WORD PTR [rsp+0x94]
  40be28:	movsx  r8d,WORD PTR [rsp+0x74]
  40be2e:	jmp    40bbc0 <Mat_VarRead@plt+0x94a0>
  40be33:	nop    DWORD PTR [rax+rax*1+0x0]
  40be38:	je     40c300 <Mat_VarRead@plt+0x9be0>
  40be3e:	lea    rax,[rsp+0x50]
  40be43:	lea    r14,[rsp+0x44]
  40be48:	lea    r13,[rsp+0x38]
  40be4d:	lea    r12,[rsp+0x2c]
  40be52:	lea    rbp,[rsp+0x10]
  40be57:	mov    QWORD PTR [rsp+0x10],rax
  40be5c:	mov    r9,r14
  40be5f:	lea    rax,[rsp+0x70]
  40be64:	mov    r8,r13
  40be67:	mov    rcx,r12
  40be6a:	mov    rdx,rbp
  40be6d:	mov    rsi,r15
  40be70:	mov    rdi,rbx
  40be73:	mov    QWORD PTR [rsp+0x18],rax
  40be78:	call   4024b0 <Mat_VarReadData@plt>
  40be7d:	movzx  eax,WORD PTR [rsp+0x76]
  40be82:	movzx  ecx,WORD PTR [rsp+0x70]
  40be87:	movzx  edx,WORD PTR [rsp+0x50]
  40be8c:	push   rax
  40be8d:	lea    rsi,[rip+0x2fe4]        # 40ee78 <getopt_long_only@@Base+0x1898>
  40be94:	mov    edi,0x1
  40be99:	movzx  eax,WORD PTR [rsp+0x5e]
  40be9e:	push   rax
  40be9f:	movzx  eax,WORD PTR [rsp+0x82]
  40bea7:	push   rax
  40bea8:	movzx  eax,WORD PTR [rsp+0x6a]
  40bead:	push   rax
  40beae:	xor    eax,eax
  40beb0:	movzx  r9d,WORD PTR [rsp+0x94]
  40beb9:	movzx  r8d,WORD PTR [rsp+0x74]
  40bebf:	call   402670 <__printf_chk@plt>
  40bec4:	add    rsp,0x20
  40bec8:	cmp    DWORD PTR [rbx+0x20],0x200
  40becf:	je     40bf0b <Mat_VarRead@plt+0x97eb>
  40bed1:	mov    rdi,QWORD PTR [r15+0x28]
  40bed5:	mov    esi,0x18
  40beda:	call   402640 <realloc@plt>
  40bedf:	test   rax,rax
  40bee2:	je     40bf0b <Mat_VarRead@plt+0x97eb>
  40bee4:	inc    DWORD PTR [r15+0x8]
  40bee8:	mov    QWORD PTR [r15+0x28],rax
  40beec:	mov    QWORD PTR [rax+0x10],0x1
  40bef4:	mov    r9,r14
  40bef7:	mov    r8,r13
  40befa:	mov    rcx,r12
  40befd:	mov    rdx,rbp
  40bf00:	mov    rsi,r15
  40bf03:	mov    rdi,rbx
  40bf06:	call   4024b0 <Mat_VarReadData@plt>
  40bf0b:	movzx  eax,WORD PTR [rsp+0x76]
  40bf10:	movzx  ecx,WORD PTR [rsp+0x70]
  40bf15:	movzx  edx,WORD PTR [rsp+0x50]
  40bf1a:	push   rax
  40bf1b:	lea    rsi,[rip+0x2f56]        # 40ee78 <getopt_long_only@@Base+0x1898>
  40bf22:	movzx  eax,WORD PTR [rsp+0x5e]
  40bf27:	push   rax
  40bf28:	movzx  eax,WORD PTR [rsp+0x82]
  40bf30:	push   rax
  40bf31:	movzx  eax,WORD PTR [rsp+0x6a]
  40bf36:	push   rax
  40bf37:	movzx  r9d,WORD PTR [rsp+0x94]
  40bf40:	movzx  r8d,WORD PTR [rsp+0x74]
  40bf46:	jmp    40bbc0 <Mat_VarRead@plt+0x94a0>
  40bf4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf50:	je     40c238 <Mat_VarRead@plt+0x9b18>
  40bf56:	lea    rax,[rsp+0x50]
  40bf5b:	lea    r14,[rsp+0x44]
  40bf60:	lea    r13,[rsp+0x38]
  40bf65:	lea    r12,[rsp+0x2c]
  40bf6a:	lea    rbp,[rsp+0x10]
  40bf6f:	mov    QWORD PTR [rsp+0x10],rax
  40bf74:	mov    r9,r14
  40bf77:	lea    rax,[rsp+0x70]
  40bf7c:	mov    r8,r13
  40bf7f:	mov    rcx,r12
  40bf82:	mov    rdx,rbp
  40bf85:	mov    rsi,r15
  40bf88:	mov    rdi,rbx
  40bf8b:	mov    QWORD PTR [rsp+0x18],rax
  40bf90:	call   4024b0 <Mat_VarReadData@plt>
  40bf95:	mov    eax,DWORD PTR [rsp+0x7c]
  40bf99:	lea    rsi,[rip+0x2e40]        # 40ede0 <getopt_long_only@@Base+0x1800>
  40bfa0:	push   rax
  40bfa1:	mov    edi,0x1
  40bfa6:	mov    eax,DWORD PTR [rsp+0x64]
  40bfaa:	push   rax
  40bfab:	mov    eax,DWORD PTR [rsp+0x84]
  40bfb2:	push   rax
  40bfb3:	mov    eax,DWORD PTR [rsp+0x6c]
  40bfb7:	push   rax
  40bfb8:	xor    eax,eax
  40bfba:	mov    r9d,DWORD PTR [rsp+0x98]
  40bfc2:	mov    r8d,DWORD PTR [rsp+0x78]
  40bfc7:	mov    ecx,DWORD PTR [rsp+0x90]
  40bfce:	mov    edx,DWORD PTR [rsp+0x70]
  40bfd2:	call   402670 <__printf_chk@plt>
  40bfd7:	add    rsp,0x20
  40bfdb:	cmp    DWORD PTR [rbx+0x20],0x200
  40bfe2:	je     40c01e <Mat_VarRead@plt+0x98fe>
  40bfe4:	mov    rdi,QWORD PTR [r15+0x28]
  40bfe8:	mov    esi,0x18
  40bfed:	call   402640 <realloc@plt>
  40bff2:	test   rax,rax
  40bff5:	je     40c01e <Mat_VarRead@plt+0x98fe>
  40bff7:	inc    DWORD PTR [r15+0x8]
  40bffb:	mov    QWORD PTR [r15+0x28],rax
  40bfff:	mov    QWORD PTR [rax+0x10],0x1
  40c007:	mov    r9,r14
  40c00a:	mov    r8,r13
  40c00d:	mov    rcx,r12
  40c010:	mov    rdx,rbp
  40c013:	mov    rsi,r15
  40c016:	mov    rdi,rbx
  40c019:	call   4024b0 <Mat_VarReadData@plt>
  40c01e:	mov    eax,DWORD PTR [rsp+0x7c]
  40c022:	lea    rsi,[rip+0x2db7]        # 40ede0 <getopt_long_only@@Base+0x1800>
  40c029:	push   rax
  40c02a:	mov    eax,DWORD PTR [rsp+0x64]
  40c02e:	push   rax
  40c02f:	mov    eax,DWORD PTR [rsp+0x84]
  40c036:	push   rax
  40c037:	mov    eax,DWORD PTR [rsp+0x6c]
  40c03b:	push   rax
  40c03c:	mov    r9d,DWORD PTR [rsp+0x98]
  40c044:	mov    r8d,DWORD PTR [rsp+0x78]
  40c049:	mov    ecx,DWORD PTR [rsp+0x90]
  40c050:	mov    edx,DWORD PTR [rsp+0x70]
  40c054:	jmp    40bbc0 <Mat_VarRead@plt+0x94a0>
  40c059:	nop    DWORD PTR [rax+0x0]
  40c060:	je     40c170 <Mat_VarRead@plt+0x9a50>
  40c066:	lea    rax,[rsp+0x50]
  40c06b:	lea    r14,[rsp+0x44]
  40c070:	lea    r13,[rsp+0x38]
  40c075:	lea    r12,[rsp+0x2c]
  40c07a:	lea    rbp,[rsp+0x10]
  40c07f:	mov    QWORD PTR [rsp+0x10],rax
  40c084:	mov    r9,r14
  40c087:	lea    rax,[rsp+0x70]
  40c08c:	mov    r8,r13
  40c08f:	mov    rcx,r12
  40c092:	mov    rdx,rbp
  40c095:	mov    rsi,r15
  40c098:	mov    rdi,rbx
  40c09b:	mov    QWORD PTR [rsp+0x18],rax
  40c0a0:	call   4024b0 <Mat_VarReadData@plt>
  40c0a5:	mov    eax,DWORD PTR [rsp+0x7c]
  40c0a9:	lea    rsi,[rip+0x2d60]        # 40ee10 <getopt_long_only@@Base+0x1830>
  40c0b0:	push   rax
  40c0b1:	mov    edi,0x1
  40c0b6:	mov    eax,DWORD PTR [rsp+0x64]
  40c0ba:	push   rax
  40c0bb:	mov    eax,DWORD PTR [rsp+0x84]
  40c0c2:	push   rax
  40c0c3:	mov    eax,DWORD PTR [rsp+0x6c]
  40c0c7:	push   rax
  40c0c8:	xor    eax,eax
  40c0ca:	mov    r9d,DWORD PTR [rsp+0x98]
  40c0d2:	mov    r8d,DWORD PTR [rsp+0x78]
  40c0d7:	mov    ecx,DWORD PTR [rsp+0x90]
  40c0de:	mov    edx,DWORD PTR [rsp+0x70]
  40c0e2:	call   402670 <__printf_chk@plt>
  40c0e7:	add    rsp,0x20
  40c0eb:	cmp    DWORD PTR [rbx+0x20],0x200
  40c0f2:	je     40c12e <Mat_VarRead@plt+0x9a0e>
  40c0f4:	mov    rdi,QWORD PTR [r15+0x28]
  40c0f8:	mov    esi,0x18
  40c0fd:	call   402640 <realloc@plt>
  40c102:	test   rax,rax
  40c105:	je     40c12e <Mat_VarRead@plt+0x9a0e>
  40c107:	inc    DWORD PTR [r15+0x8]
  40c10b:	mov    QWORD PTR [r15+0x28],rax
  40c10f:	mov    QWORD PTR [rax+0x10],0x1
  40c117:	mov    r9,r14
  40c11a:	mov    r8,r13
  40c11d:	mov    rcx,r12
  40c120:	mov    rdx,rbp
  40c123:	mov    rsi,r15
  40c126:	mov    rdi,rbx
  40c129:	call   4024b0 <Mat_VarReadData@plt>
  40c12e:	mov    eax,DWORD PTR [rsp+0x7c]
  40c132:	lea    rsi,[rip+0x2cd7]        # 40ee10 <getopt_long_only@@Base+0x1830>
  40c139:	push   rax
  40c13a:	mov    eax,DWORD PTR [rsp+0x64]
  40c13e:	push   rax
  40c13f:	mov    eax,DWORD PTR [rsp+0x84]
  40c146:	push   rax
  40c147:	mov    eax,DWORD PTR [rsp+0x6c]
  40c14b:	push   rax
  40c14c:	mov    r9d,DWORD PTR [rsp+0x98]
  40c154:	mov    r8d,DWORD PTR [rsp+0x78]
  40c159:	mov    ecx,DWORD PTR [rsp+0x90]
  40c160:	mov    edx,DWORD PTR [rsp+0x70]
  40c164:	jmp    40bbc0 <Mat_VarRead@plt+0x94a0>
  40c169:	nop    DWORD PTR [rax+0x0]
  40c170:	lea    rax,[rsp+0x44]
  40c175:	lea    r14,[rsp+0x38]
  40c17a:	lea    r13,[rsp+0x2c]
  40c17f:	lea    r12,[rsp+0x70]
  40c184:	mov    r9,rax
  40c187:	mov    r8,r14
  40c18a:	mov    rcx,r13
  40c18d:	mov    rdx,r12
  40c190:	mov    rsi,r15
  40c193:	mov    rdi,rbx
  40c196:	mov    QWORD PTR [rsp+0x8],rax
  40c19b:	call   4024b0 <Mat_VarReadData@plt>
  40c1a0:	mov    r9d,DWORD PTR [rsp+0x7c]
  40c1a5:	mov    r8d,DWORD PTR [rsp+0x74]
  40c1aa:	mov    ecx,DWORD PTR [rsp+0x78]
  40c1ae:	mov    edx,DWORD PTR [rsp+0x70]
  40c1b2:	xor    eax,eax
  40c1b4:	lea    rsi,[rip+0x1ed6]        # 40e091 <getopt_long_only@@Base+0xab1>
  40c1bb:	mov    edi,0x1
  40c1c0:	call   402670 <__printf_chk@plt>
  40c1c5:	cmp    DWORD PTR [rbx+0x20],0x200
  40c1cc:	je     40c20a <Mat_VarRead@plt+0x9aea>
  40c1ce:	mov    rdi,QWORD PTR [r15+0x28]
  40c1d2:	mov    esi,0x18
  40c1d7:	call   402640 <realloc@plt>
  40c1dc:	test   rax,rax
  40c1df:	je     40c20a <Mat_VarRead@plt+0x9aea>
  40c1e1:	inc    DWORD PTR [r15+0x8]
  40c1e5:	mov    QWORD PTR [r15+0x28],rax
  40c1e9:	mov    QWORD PTR [rax+0x10],0x1
  40c1f1:	mov    r9,QWORD PTR [rsp+0x8]
  40c1f6:	mov    r8,r14
  40c1f9:	mov    rcx,r13
  40c1fc:	mov    rdx,r12
  40c1ff:	mov    rsi,r15
  40c202:	mov    rdi,rbx
  40c205:	call   4024b0 <Mat_VarReadData@plt>
  40c20a:	mov    r9d,DWORD PTR [rsp+0x7c]
  40c20f:	mov    r8d,DWORD PTR [rsp+0x74]
  40c214:	mov    ecx,DWORD PTR [rsp+0x78]
  40c218:	mov    edx,DWORD PTR [rsp+0x70]
  40c21c:	lea    rsi,[rip+0x1e6e]        # 40e091 <getopt_long_only@@Base+0xab1>
  40c223:	mov    edi,0x1
  40c228:	xor    eax,eax
  40c22a:	call   402670 <__printf_chk@plt>
  40c22f:	jmp    40b6f0 <Mat_VarRead@plt+0x8fd0>
  40c234:	nop    DWORD PTR [rax+0x0]
  40c238:	lea    rax,[rsp+0x44]
  40c23d:	lea    r14,[rsp+0x38]
  40c242:	lea    r13,[rsp+0x2c]
  40c247:	lea    r12,[rsp+0x70]
  40c24c:	mov    r9,rax
  40c24f:	mov    r8,r14
  40c252:	mov    rcx,r13
  40c255:	mov    rdx,r12
  40c258:	mov    rsi,r15
  40c25b:	mov    rdi,rbx
  40c25e:	mov    QWORD PTR [rsp+0x8],rax
  40c263:	call   4024b0 <Mat_VarReadData@plt>
  40c268:	mov    r9d,DWORD PTR [rsp+0x7c]
  40c26d:	mov    r8d,DWORD PTR [rsp+0x74]
  40c272:	mov    ecx,DWORD PTR [rsp+0x78]
  40c276:	mov    edx,DWORD PTR [rsp+0x70]
  40c27a:	xor    eax,eax
  40c27c:	lea    rsi,[rip+0x1dfb]        # 40e07e <getopt_long_only@@Base+0xa9e>
  40c283:	mov    edi,0x1
  40c288:	call   402670 <__printf_chk@plt>
  40c28d:	cmp    DWORD PTR [rbx+0x20],0x200
  40c294:	je     40c2d2 <Mat_VarRead@plt+0x9bb2>
  40c296:	mov    rdi,QWORD PTR [r15+0x28]
  40c29a:	mov    esi,0x18
  40c29f:	call   402640 <realloc@plt>
  40c2a4:	test   rax,rax
  40c2a7:	je     40c2d2 <Mat_VarRead@plt+0x9bb2>
  40c2a9:	inc    DWORD PTR [r15+0x8]
  40c2ad:	mov    QWORD PTR [r15+0x28],rax
  40c2b1:	mov    QWORD PTR [rax+0x10],0x1
  40c2b9:	mov    r9,QWORD PTR [rsp+0x8]
  40c2be:	mov    r8,r14
  40c2c1:	mov    rcx,r13
  40c2c4:	mov    rdx,r12
  40c2c7:	mov    rsi,r15
  40c2ca:	mov    rdi,rbx
  40c2cd:	call   4024b0 <Mat_VarReadData@plt>
  40c2d2:	mov    r9d,DWORD PTR [rsp+0x7c]
  40c2d7:	mov    r8d,DWORD PTR [rsp+0x74]
  40c2dc:	mov    ecx,DWORD PTR [rsp+0x78]
  40c2e0:	mov    edx,DWORD PTR [rsp+0x70]
  40c2e4:	lea    rsi,[rip+0x1d93]        # 40e07e <getopt_long_only@@Base+0xa9e>
  40c2eb:	mov    edi,0x1
  40c2f0:	xor    eax,eax
  40c2f2:	call   402670 <__printf_chk@plt>
  40c2f7:	jmp    40b6f0 <Mat_VarRead@plt+0x8fd0>
  40c2fc:	nop    DWORD PTR [rax+0x0]
  40c300:	lea    rax,[rsp+0x44]
  40c305:	lea    r14,[rsp+0x38]
  40c30a:	lea    r13,[rsp+0x2c]
  40c30f:	lea    r12,[rsp+0x70]
  40c314:	mov    r9,rax
  40c317:	mov    r8,r14
  40c31a:	mov    rcx,r13
  40c31d:	mov    rdx,r12
  40c320:	mov    rsi,r15
  40c323:	mov    rdi,rbx
  40c326:	mov    QWORD PTR [rsp+0x8],rax
  40c32b:	call   4024b0 <Mat_VarReadData@plt>
  40c330:	movzx  ecx,WORD PTR [rsp+0x74]
  40c335:	movzx  edx,WORD PTR [rsp+0x70]
  40c33a:	movzx  r9d,WORD PTR [rsp+0x76]
  40c340:	movzx  r8d,WORD PTR [rsp+0x72]
  40c346:	xor    eax,eax
  40c348:	lea    rsi,[rip+0x1d6c]        # 40e0bb <getopt_long_only@@Base+0xadb>
  40c34f:	mov    edi,0x1
  40c354:	call   402670 <__printf_chk@plt>
  40c359:	cmp    DWORD PTR [rbx+0x20],0x200
  40c360:	je     40c39e <Mat_VarRead@plt+0x9c7e>
  40c362:	mov    rdi,QWORD PTR [r15+0x28]
  40c366:	mov    esi,0x18
  40c36b:	call   402640 <realloc@plt>
  40c370:	test   rax,rax
  40c373:	je     40c39e <Mat_VarRead@plt+0x9c7e>
  40c375:	inc    DWORD PTR [r15+0x8]
  40c379:	mov    QWORD PTR [r15+0x28],rax
  40c37d:	mov    QWORD PTR [rax+0x10],0x1
  40c385:	mov    r9,QWORD PTR [rsp+0x8]
  40c38a:	mov    r8,r14
  40c38d:	mov    rcx,r13
  40c390:	mov    rdx,r12
  40c393:	mov    rsi,r15
  40c396:	mov    rdi,rbx
  40c399:	call   4024b0 <Mat_VarReadData@plt>
  40c39e:	movzx  ecx,WORD PTR [rsp+0x74]
  40c3a3:	movzx  edx,WORD PTR [rsp+0x70]
  40c3a8:	movzx  r9d,WORD PTR [rsp+0x76]
  40c3ae:	movzx  r8d,WORD PTR [rsp+0x72]
  40c3b4:	lea    rsi,[rip+0x1d00]        # 40e0bb <getopt_long_only@@Base+0xadb>
  40c3bb:	mov    edi,0x1
  40c3c0:	xor    eax,eax
  40c3c2:	call   402670 <__printf_chk@plt>
  40c3c7:	jmp    40b6f0 <Mat_VarRead@plt+0x8fd0>
  40c3cc:	nop    DWORD PTR [rax+0x0]
  40c3d0:	lea    rax,[rsp+0x44]
  40c3d5:	lea    r14,[rsp+0x38]
  40c3da:	lea    r13,[rsp+0x2c]
  40c3df:	lea    r12,[rsp+0x70]
  40c3e4:	mov    r9,rax
  40c3e7:	mov    r8,r14
  40c3ea:	mov    rcx,r13
  40c3ed:	mov    rdx,r12
  40c3f0:	mov    rsi,r15
  40c3f3:	mov    rdi,rbx
  40c3f6:	mov    QWORD PTR [rsp+0x8],rax
  40c3fb:	call   4024b0 <Mat_VarReadData@plt>
  40c400:	movsx  ecx,WORD PTR [rsp+0x74]
  40c405:	movsx  edx,WORD PTR [rsp+0x70]
  40c40a:	movsx  r9d,WORD PTR [rsp+0x76]
  40c410:	movsx  r8d,WORD PTR [rsp+0x72]
  40c416:	xor    eax,eax
  40c418:	lea    rsi,[rip+0x1c85]        # 40e0a4 <getopt_long_only@@Base+0xac4>
  40c41f:	mov    edi,0x1
  40c424:	call   402670 <__printf_chk@plt>
  40c429:	cmp    DWORD PTR [rbx+0x20],0x200
  40c430:	je     40c46e <Mat_VarRead@plt+0x9d4e>
  40c432:	mov    rdi,QWORD PTR [r15+0x28]
  40c436:	mov    esi,0x18
  40c43b:	call   402640 <realloc@plt>
  40c440:	test   rax,rax
  40c443:	je     40c46e <Mat_VarRead@plt+0x9d4e>
  40c445:	inc    DWORD PTR [r15+0x8]
  40c449:	mov    QWORD PTR [r15+0x28],rax
  40c44d:	mov    QWORD PTR [rax+0x10],0x1
  40c455:	mov    r9,QWORD PTR [rsp+0x8]
  40c45a:	mov    r8,r14
  40c45d:	mov    rcx,r13
  40c460:	mov    rdx,r12
  40c463:	mov    rsi,r15
  40c466:	mov    rdi,rbx
  40c469:	call   4024b0 <Mat_VarReadData@plt>
  40c46e:	movsx  ecx,WORD PTR [rsp+0x74]
  40c473:	movsx  edx,WORD PTR [rsp+0x70]
  40c478:	movsx  r9d,WORD PTR [rsp+0x76]
  40c47e:	movsx  r8d,WORD PTR [rsp+0x72]
  40c484:	lea    rsi,[rip+0x1c19]        # 40e0a4 <getopt_long_only@@Base+0xac4>
  40c48b:	mov    edi,0x1
  40c490:	xor    eax,eax
  40c492:	call   402670 <__printf_chk@plt>
  40c497:	jmp    40b6f0 <Mat_VarRead@plt+0x8fd0>
  40c49c:	nop    DWORD PTR [rax+0x0]
  40c4a0:	lea    rax,[rsp+0x44]
  40c4a5:	lea    r14,[rsp+0x38]
  40c4aa:	lea    r13,[rsp+0x2c]
  40c4af:	lea    r12,[rsp+0x94]
  40c4b7:	mov    r9,rax
  40c4ba:	mov    r8,r14
  40c4bd:	mov    rcx,r13
  40c4c0:	mov    rdx,r12
  40c4c3:	mov    rsi,r15
  40c4c6:	mov    rdi,rbx
  40c4c9:	mov    QWORD PTR [rsp+0x8],rax
  40c4ce:	call   4024b0 <Mat_VarReadData@plt>
  40c4d3:	movzx  ecx,BYTE PTR [rsp+0x96]
  40c4db:	movzx  edx,BYTE PTR [rsp+0x94]
  40c4e3:	movzx  r9d,BYTE PTR [rsp+0x97]
  40c4ec:	movzx  r8d,BYTE PTR [rsp+0x95]
  40c4f5:	xor    eax,eax
  40c4f7:	lea    rsi,[rip+0x1bef]        # 40e0ed <getopt_long_only@@Base+0xb0d>
  40c4fe:	mov    edi,0x1
  40c503:	call   402670 <__printf_chk@plt>
  40c508:	cmp    DWORD PTR [rbx+0x20],0x200
  40c50f:	je     40c54d <Mat_VarRead@plt+0x9e2d>
  40c511:	mov    rdi,QWORD PTR [r15+0x28]
  40c515:	mov    esi,0x18
  40c51a:	call   402640 <realloc@plt>
  40c51f:	test   rax,rax
  40c522:	je     40c54d <Mat_VarRead@plt+0x9e2d>
  40c524:	inc    DWORD PTR [r15+0x8]
  40c528:	mov    QWORD PTR [r15+0x28],rax
  40c52c:	mov    QWORD PTR [rax+0x10],0x1
  40c534:	mov    r9,QWORD PTR [rsp+0x8]
  40c539:	mov    r8,r14
  40c53c:	mov    rcx,r13
  40c53f:	mov    rdx,r12
  40c542:	mov    rsi,r15
  40c545:	mov    rdi,rbx
  40c548:	call   4024b0 <Mat_VarReadData@plt>
  40c54d:	movzx  ecx,BYTE PTR [rsp+0x96]
  40c555:	movzx  edx,BYTE PTR [rsp+0x94]
  40c55d:	movzx  r9d,BYTE PTR [rsp+0x97]
  40c566:	movzx  r8d,BYTE PTR [rsp+0x95]
  40c56f:	lea    rsi,[rip+0x1b77]        # 40e0ed <getopt_long_only@@Base+0xb0d>
  40c576:	mov    edi,0x1
  40c57b:	xor    eax,eax
  40c57d:	call   402670 <__printf_chk@plt>
  40c582:	jmp    40b6f0 <Mat_VarRead@plt+0x8fd0>
  40c587:	nop    WORD PTR [rax+rax*1+0x0]
  40c590:	lea    rax,[rsp+0x44]
  40c595:	lea    r14,[rsp+0x38]
  40c59a:	lea    r13,[rsp+0x2c]
  40c59f:	lea    r12,[rsp+0x94]
  40c5a7:	mov    r9,rax
  40c5aa:	mov    r8,r14
  40c5ad:	mov    rcx,r13
  40c5b0:	mov    rdx,r12
  40c5b3:	mov    rsi,r15
  40c5b6:	mov    rdi,rbx
  40c5b9:	mov    QWORD PTR [rsp+0x8],rax
  40c5be:	call   4024b0 <Mat_VarReadData@plt>
  40c5c3:	movsx  ecx,BYTE PTR [rsp+0x96]
  40c5cb:	movsx  edx,BYTE PTR [rsp+0x94]
  40c5d3:	movsx  r9d,BYTE PTR [rsp+0x97]
  40c5dc:	movsx  r8d,BYTE PTR [rsp+0x95]
  40c5e5:	xor    eax,eax
  40c5e7:	lea    rsi,[rip+0x1ae4]        # 40e0d2 <getopt_long_only@@Base+0xaf2>
  40c5ee:	mov    edi,0x1
  40c5f3:	call   402670 <__printf_chk@plt>
  40c5f8:	cmp    DWORD PTR [rbx+0x20],0x200
  40c5ff:	je     40c63d <Mat_VarRead@plt+0x9f1d>
  40c601:	mov    rdi,QWORD PTR [r15+0x28]
  40c605:	mov    esi,0x18
  40c60a:	call   402640 <realloc@plt>
  40c60f:	test   rax,rax
  40c612:	je     40c63d <Mat_VarRead@plt+0x9f1d>
  40c614:	inc    DWORD PTR [r15+0x8]
  40c618:	mov    QWORD PTR [r15+0x28],rax
  40c61c:	mov    QWORD PTR [rax+0x10],0x1
  40c624:	mov    r9,QWORD PTR [rsp+0x8]
  40c629:	mov    r8,r14
  40c62c:	mov    rcx,r13
  40c62f:	mov    rdx,r12
  40c632:	mov    rsi,r15
  40c635:	mov    rdi,rbx
  40c638:	call   4024b0 <Mat_VarReadData@plt>
  40c63d:	movsx  ecx,BYTE PTR [rsp+0x96]
  40c645:	movsx  edx,BYTE PTR [rsp+0x94]
  40c64d:	movsx  r9d,BYTE PTR [rsp+0x97]
  40c656:	movsx  r8d,BYTE PTR [rsp+0x95]
  40c65f:	lea    rsi,[rip+0x1a6c]        # 40e0d2 <getopt_long_only@@Base+0xaf2>
  40c666:	mov    edi,0x1
  40c66b:	xor    eax,eax
  40c66d:	call   402670 <__printf_chk@plt>
  40c672:	jmp    40b6f0 <Mat_VarRead@plt+0x8fd0>
  40c677:	nop    WORD PTR [rax+rax*1+0x0]
  40c680:	lea    rax,[rsp+0x44]
  40c685:	lea    r14,[rsp+0x38]
  40c68a:	lea    r13,[rsp+0x2c]
  40c68f:	lea    r12,[rsp+0x70]
  40c694:	mov    r9,rax
  40c697:	mov    r8,r14
  40c69a:	mov    rcx,r13
  40c69d:	mov    rdx,r12
  40c6a0:	mov    rsi,r15
  40c6a3:	mov    rdi,rbx
  40c6a6:	mov    QWORD PTR [rsp+0x8],rax
  40c6ab:	call   4024b0 <Mat_VarReadData@plt>
  40c6b0:	vxorpd xmm0,xmm0,xmm0
  40c6b4:	vxorpd xmm3,xmm3,xmm3
  40c6b8:	vxorpd xmm2,xmm2,xmm2
  40c6bc:	vxorpd xmm1,xmm1,xmm1
  40c6c0:	lea    rsi,[rip+0x1976]        # 40e03d <getopt_long_only@@Base+0xa5d>
  40c6c7:	mov    edi,0x1
  40c6cc:	mov    eax,0x4
  40c6d1:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsp+0x70]
  40c6d7:	vcvtss2sd xmm3,xmm3,DWORD PTR [rsp+0x7c]
  40c6dd:	vcvtss2sd xmm2,xmm2,DWORD PTR [rsp+0x74]
  40c6e3:	vcvtss2sd xmm1,xmm1,DWORD PTR [rsp+0x78]
  40c6e9:	call   402670 <__printf_chk@plt>
  40c6ee:	cmp    DWORD PTR [rbx+0x20],0x200
  40c6f5:	je     40c733 <Mat_VarRead@plt+0xa013>
  40c6f7:	mov    rdi,QWORD PTR [r15+0x28]
  40c6fb:	mov    esi,0x18
  40c700:	call   402640 <realloc@plt>
  40c705:	test   rax,rax
  40c708:	je     40c733 <Mat_VarRead@plt+0xa013>
  40c70a:	inc    DWORD PTR [r15+0x8]
  40c70e:	mov    QWORD PTR [r15+0x28],rax
  40c712:	mov    QWORD PTR [rax+0x10],0x1
  40c71a:	mov    r9,QWORD PTR [rsp+0x8]
  40c71f:	mov    r8,r14
  40c722:	mov    rcx,r13
  40c725:	mov    rdx,r12
  40c728:	mov    rsi,r15
  40c72b:	mov    rdi,rbx
  40c72e:	call   4024b0 <Mat_VarReadData@plt>
  40c733:	vxorpd xmm0,xmm0,xmm0
  40c737:	vxorpd xmm3,xmm3,xmm3
  40c73b:	vxorpd xmm2,xmm2,xmm2
  40c73f:	vxorpd xmm1,xmm1,xmm1
  40c743:	lea    rsi,[rip+0x18f3]        # 40e03d <getopt_long_only@@Base+0xa5d>
  40c74a:	mov    edi,0x1
  40c74f:	mov    eax,0x4
  40c754:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsp+0x70]
  40c75a:	vcvtss2sd xmm3,xmm3,DWORD PTR [rsp+0x7c]
  40c760:	vcvtss2sd xmm2,xmm2,DWORD PTR [rsp+0x74]
  40c766:	vcvtss2sd xmm1,xmm1,DWORD PTR [rsp+0x78]
  40c76c:	call   402670 <__printf_chk@plt>
  40c771:	jmp    40b6f0 <Mat_VarRead@plt+0x8fd0>
  40c776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c780:	lea    rax,[rsp+0x44]
  40c785:	lea    r14,[rsp+0x38]
  40c78a:	lea    r13,[rsp+0x2c]
  40c78f:	lea    r12,[rsp+0x70]
  40c794:	mov    r9,rax
  40c797:	mov    r8,r14
  40c79a:	mov    rcx,r13
  40c79d:	mov    rdx,r12
  40c7a0:	mov    rsi,r15
  40c7a3:	mov    rdi,rbx
  40c7a6:	mov    QWORD PTR [rsp+0x8],rax
  40c7ab:	call   4024b0 <Mat_VarReadData@plt>
  40c7b0:	vmovsd xmm3,QWORD PTR [rsp+0x88]
  40c7b9:	vmovsd xmm2,QWORD PTR [rsp+0x78]
  40c7bf:	vmovsd xmm1,QWORD PTR [rsp+0x80]
  40c7c8:	vmovsd xmm0,QWORD PTR [rsp+0x70]
  40c7ce:	lea    rsi,[rip+0x1868]        # 40e03d <getopt_long_only@@Base+0xa5d>
  40c7d5:	mov    edi,0x1
  40c7da:	mov    eax,0x4
  40c7df:	call   402670 <__printf_chk@plt>
  40c7e4:	cmp    DWORD PTR [rbx+0x20],0x200
  40c7eb:	je     40c829 <Mat_VarRead@plt+0xa109>
  40c7ed:	mov    rdi,QWORD PTR [r15+0x28]
  40c7f1:	mov    esi,0x18
  40c7f6:	call   402640 <realloc@plt>
  40c7fb:	test   rax,rax
  40c7fe:	je     40c829 <Mat_VarRead@plt+0xa109>
  40c800:	inc    DWORD PTR [r15+0x8]
  40c804:	mov    QWORD PTR [r15+0x28],rax
  40c808:	mov    QWORD PTR [rax+0x10],0x1
  40c810:	mov    r9,QWORD PTR [rsp+0x8]
  40c815:	mov    r8,r14
  40c818:	mov    rcx,r13
  40c81b:	mov    rdx,r12
  40c81e:	mov    rsi,r15
  40c821:	mov    rdi,rbx
  40c824:	call   4024b0 <Mat_VarReadData@plt>
  40c829:	vmovsd xmm3,QWORD PTR [rsp+0x88]
  40c832:	vmovsd xmm2,QWORD PTR [rsp+0x78]
  40c838:	vmovsd xmm1,QWORD PTR [rsp+0x80]
  40c841:	vmovsd xmm0,QWORD PTR [rsp+0x70]
  40c847:	lea    rsi,[rip+0x17ef]        # 40e03d <getopt_long_only@@Base+0xa5d>
  40c84e:	mov    edi,0x1
  40c853:	mov    eax,0x4
  40c858:	call   402670 <__printf_chk@plt>
  40c85d:	jmp    40b6f0 <Mat_VarRead@plt+0x8fd0>
  40c862:	nop    WORD PTR [rax+rax*1+0x0]
  40c868:	lea    rax,[rsp+0x44]
  40c86d:	lea    r14,[rsp+0x38]
  40c872:	lea    r13,[rsp+0x2c]
  40c877:	lea    r12,[rsp+0x70]
  40c87c:	mov    r9,rax
  40c87f:	mov    r8,r14
  40c882:	mov    rcx,r13
  40c885:	mov    rdx,r12
  40c888:	mov    rsi,r15
  40c88b:	mov    rdi,rbx
  40c88e:	mov    QWORD PTR [rsp+0x8],rax
  40c893:	call   4024b0 <Mat_VarReadData@plt>
  40c898:	mov    r9,QWORD PTR [rsp+0x88]
  40c8a0:	mov    r8,QWORD PTR [rsp+0x78]
  40c8a5:	mov    rcx,QWORD PTR [rsp+0x80]
  40c8ad:	mov    rdx,QWORD PTR [rsp+0x70]
  40c8b2:	xor    eax,eax
  40c8b4:	lea    rsi,[rip+0x17ac]        # 40e067 <getopt_long_only@@Base+0xa87>
  40c8bb:	mov    edi,0x1
  40c8c0:	call   402670 <__printf_chk@plt>
  40c8c5:	cmp    DWORD PTR [rbx+0x20],0x200
  40c8cc:	je     40c90a <Mat_VarRead@plt+0xa1ea>
  40c8ce:	mov    rdi,QWORD PTR [r15+0x28]
  40c8d2:	mov    esi,0x18
  40c8d7:	call   402640 <realloc@plt>
  40c8dc:	test   rax,rax
  40c8df:	je     40c90a <Mat_VarRead@plt+0xa1ea>
  40c8e1:	inc    DWORD PTR [r15+0x8]
  40c8e5:	mov    QWORD PTR [r15+0x28],rax
  40c8e9:	mov    QWORD PTR [rax+0x10],0x1
  40c8f1:	mov    r9,QWORD PTR [rsp+0x8]
  40c8f6:	mov    r8,r14
  40c8f9:	mov    rcx,r13
  40c8fc:	mov    rdx,r12
  40c8ff:	mov    rsi,r15
  40c902:	mov    rdi,rbx
  40c905:	call   4024b0 <Mat_VarReadData@plt>
  40c90a:	mov    r9,QWORD PTR [rsp+0x88]
  40c912:	mov    r8,QWORD PTR [rsp+0x78]
  40c917:	mov    rcx,QWORD PTR [rsp+0x80]
  40c91f:	mov    rdx,QWORD PTR [rsp+0x70]
  40c924:	lea    rsi,[rip+0x173c]        # 40e067 <getopt_long_only@@Base+0xa87>
  40c92b:	mov    edi,0x1
  40c930:	xor    eax,eax
  40c932:	call   402670 <__printf_chk@plt>
  40c937:	jmp    40b6f0 <Mat_VarRead@plt+0x8fd0>
  40c93c:	nop    DWORD PTR [rax+0x0]
  40c940:	lea    rax,[rsp+0x44]
  40c945:	lea    r14,[rsp+0x38]
  40c94a:	lea    r13,[rsp+0x2c]
  40c94f:	lea    r12,[rsp+0x70]
  40c954:	mov    r9,rax
  40c957:	mov    r8,r14
  40c95a:	mov    rcx,r13
  40c95d:	mov    rdx,r12
  40c960:	mov    rsi,r15
  40c963:	mov    rdi,rbx
  40c966:	mov    QWORD PTR [rsp+0x8],rax
  40c96b:	call   4024b0 <Mat_VarReadData@plt>
  40c970:	mov    r9,QWORD PTR [rsp+0x88]
  40c978:	mov    r8,QWORD PTR [rsp+0x78]
  40c97d:	mov    rcx,QWORD PTR [rsp+0x80]
  40c985:	mov    rdx,QWORD PTR [rsp+0x70]
  40c98a:	xor    eax,eax
  40c98c:	lea    rsi,[rip+0x16bd]        # 40e050 <getopt_long_only@@Base+0xa70>
  40c993:	mov    edi,0x1
  40c998:	call   402670 <__printf_chk@plt>
  40c99d:	cmp    DWORD PTR [rbx+0x20],0x200
  40c9a4:	je     40c9e2 <Mat_VarRead@plt+0xa2c2>
  40c9a6:	mov    rdi,QWORD PTR [r15+0x28]
  40c9aa:	mov    esi,0x18
  40c9af:	call   402640 <realloc@plt>
  40c9b4:	test   rax,rax
  40c9b7:	je     40c9e2 <Mat_VarRead@plt+0xa2c2>
  40c9b9:	inc    DWORD PTR [r15+0x8]
  40c9bd:	mov    QWORD PTR [r15+0x28],rax
  40c9c1:	mov    QWORD PTR [rax+0x10],0x1
  40c9c9:	mov    r9,QWORD PTR [rsp+0x8]
  40c9ce:	mov    r8,r14
  40c9d1:	mov    rcx,r13
  40c9d4:	mov    rdx,r12
  40c9d7:	mov    rsi,r15
  40c9da:	mov    rdi,rbx
  40c9dd:	call   4024b0 <Mat_VarReadData@plt>
  40c9e2:	mov    r9,QWORD PTR [rsp+0x88]
  40c9ea:	mov    r8,QWORD PTR [rsp+0x78]
  40c9ef:	mov    rcx,QWORD PTR [rsp+0x80]
  40c9f7:	mov    rdx,QWORD PTR [rsp+0x70]
  40c9fc:	lea    rsi,[rip+0x164d]        # 40e050 <getopt_long_only@@Base+0xa70>
  40ca03:	mov    edi,0x1
  40ca08:	xor    eax,eax
  40ca0a:	call   402670 <__printf_chk@plt>
  40ca0f:	jmp    40b6f0 <Mat_VarRead@plt+0x8fd0>
  40ca14:	call   4024c0 <__stack_chk_fail@plt>
  40ca19:	mov    ebp,0x1
  40ca1e:	jmp    40b6f0 <Mat_VarRead@plt+0x8fd0>
  40ca23:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40ca2e:	xchg   ax,ax
  40ca30:	test   rdi,rdi
  40ca33:	je     40ca60 <Mat_VarRead@plt+0xa340>
  40ca35:	push   rbx
  40ca36:	mov    rax,QWORD PTR [rip+0x85a3]        # 414fe0 <getopt_long_only@@Base+0x7a00>
  40ca3d:	lea    rsi,[rip+0x16c4]        # 40e108 <getopt_long_only@@Base+0xb28>
  40ca44:	mov    rdx,QWORD PTR [rax]
  40ca47:	mov    rbx,rdi
  40ca4a:	call   402540 <freopen@plt>
  40ca4f:	test   rax,rax
  40ca52:	je     40ca68 <Mat_VarRead@plt+0xa348>
  40ca54:	pop    rbx
  40ca55:	ret    
  40ca56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ca60:	ret    
  40ca61:	nop    DWORD PTR [rax+0x0]
  40ca68:	mov    rax,QWORD PTR [rip+0x8589]        # 414ff8 <getopt_long_only@@Base+0x7a18>
  40ca6f:	mov    rcx,rbx
  40ca72:	mov    rdi,QWORD PTR [rax]
  40ca75:	lea    rdx,[rip+0x24b4]        # 40ef30 <getopt_long_only@@Base+0x1950>
  40ca7c:	mov    esi,0x1
  40ca81:	xor    eax,eax
  40ca83:	pop    rbx
  40ca84:	jmp    4026e0 <__fprintf_chk@plt>
  40ca89:	nop    DWORD PTR [rax+0x0]
  40ca90:	push   r13
  40ca92:	mov    r8d,edx
  40ca95:	push   r12
  40ca97:	push   rbp
  40ca98:	mov    ebp,esi
  40ca9a:	sub    ebp,edi
  40ca9c:	mov    eax,ebp
  40ca9e:	push   rbx
  40ca9f:	mov    ebx,edx
  40caa1:	sub    ebx,esi
  40caa3:	cdq    
  40caa4:	idiv   ebx
  40caa6:	test   edx,edx
  40caa8:	je     40cb39 <Mat_VarRead@plt+0xa419>
  40caae:	mov    r12d,edx
  40cab1:	mov    eax,ebx
  40cab3:	jmp    40cabb <Mat_VarRead@plt+0xa39b>
  40cab5:	nop    DWORD PTR [rax]
  40cab8:	mov    r12d,edx
  40cabb:	cdq    
  40cabc:	idiv   r12d
  40cabf:	mov    eax,r12d
  40cac2:	test   edx,edx
  40cac4:	jne    40cab8 <Mat_VarRead@plt+0xa398>
  40cac6:	mov    eax,r8d
  40cac9:	sub    eax,edi
  40cacb:	cdq    
  40cacc:	idiv   r12d
  40cacf:	test   r12d,r12d
  40cad2:	jle    40cb32 <Mat_VarRead@plt+0xa412>
  40cad4:	movsxd rdx,esi
  40cad7:	lea    rdx,[rcx+rdx*8]
  40cadb:	mov    r13d,esi
  40cade:	add    r12d,esi
  40cae1:	nop    DWORD PTR [rax+0x0]
  40cae8:	mov    edi,r13d
  40caeb:	test   eax,eax
  40caed:	jle    40cb26 <Mat_VarRead@plt+0xa406>
  40caef:	mov    r11,QWORD PTR [rdx]
  40caf2:	xor    r8d,r8d
  40caf5:	nop    DWORD PTR [rax]
  40caf8:	mov    r9d,edi
  40cafb:	sub    r9d,ebp
  40cafe:	lea    r10d,[rdi+rbx*1]
  40cb02:	cmp    esi,edi
  40cb04:	mov    edi,r9d
  40cb07:	cmovg  edi,r10d
  40cb0b:	inc    r8d
  40cb0e:	movsxd r9,edi
  40cb11:	lea    r10,[rcx+r9*8]
  40cb15:	mov    r9,QWORD PTR [r10]
  40cb18:	mov    QWORD PTR [r10],r11
  40cb1b:	mov    QWORD PTR [rdx],r9
  40cb1e:	mov    r11,r9
  40cb21:	cmp    eax,r8d
  40cb24:	jne    40caf8 <Mat_VarRead@plt+0xa3d8>
  40cb26:	inc    r13d
  40cb29:	add    rdx,0x8
  40cb2d:	cmp    r12d,r13d
  40cb30:	jne    40cae8 <Mat_VarRead@plt+0xa3c8>
  40cb32:	pop    rbx
  40cb33:	pop    rbp
  40cb34:	pop    r12
  40cb36:	pop    r13
  40cb38:	ret    
  40cb39:	mov    r12d,ebx
  40cb3c:	jmp    40cac6 <Mat_VarRead@plt+0xa3a6>
  40cb3e:	xchg   ax,ax
  40cb40:	push   r15
  40cb42:	push   r14
  40cb44:	mov    r14d,r9d
  40cb47:	push   r13
  40cb49:	push   r12
  40cb4b:	mov    r12,rdx
  40cb4e:	push   rbp
  40cb4f:	push   rbx
  40cb50:	sub    rsp,0x58
  40cb54:	mov    eax,DWORD PTR [rip+0x99a6]        # 416500 <getopt_long_only@@Base+0x8f20>
  40cb5a:	mov    QWORD PTR [rsp+0x30],rcx
  40cb5f:	lea    rcx,[rip+0x5dce]        # 412934 <getopt_long_only@@Base+0x5354>
  40cb66:	mov    QWORD PTR [rsp+0x48],rdi
  40cb6b:	mov    QWORD PTR [rsp+0x38],rsi
  40cb70:	mov    DWORD PTR [rsp+0x24],r8d
  40cb75:	mov    r13,QWORD PTR [rip+0x999c]        # 416518 <opterr@@Base+0x4>
  40cb7c:	mov    QWORD PTR [rsp+0x18],rcx
  40cb81:	cmp    eax,0x1
  40cb84:	je     40cbb0 <Mat_VarRead@plt+0xa490>
  40cb86:	lea    rcx,[rip+0x5da3]        # 412930 <getopt_long_only@@Base+0x5350>
  40cb8d:	mov    QWORD PTR [rsp+0x18],rcx
  40cb92:	cmp    eax,0x2
  40cb95:	je     40cbb0 <Mat_VarRead@plt+0xa490>
  40cb97:	test   eax,eax
  40cb99:	lea    rdx,[rip+0x5d95]        # 412935 <getopt_long_only@@Base+0x5355>
  40cba0:	lea    rax,[rip+0x14e9]        # 40e090 <getopt_long_only@@Base+0xab0>
  40cba7:	cmove  rax,rdx
  40cbab:	mov    QWORD PTR [rsp+0x18],rax
  40cbb0:	mov    rax,0x416510
  40cbb7:	mov    rsi,0x416510
  40cbbe:	mov    eax,DWORD PTR [rax]
  40cbc0:	mov    rdi,r13
  40cbc3:	mov    DWORD PTR [rsp+0x44],eax
  40cbc7:	inc    eax
  40cbc9:	mov    DWORD PTR [rsi],eax
  40cbcb:	mov    esi,0x3d
  40cbd0:	mov    DWORD PTR [rsp+0x40],eax
  40cbd4:	call   4024e0 <strchr@plt>
  40cbd9:	mov    QWORD PTR [rsp+0x28],rax
  40cbde:	test   rax,rax
  40cbe1:	je     40ce20 <Mat_VarRead@plt+0xa700>
  40cbe7:	mov    rbp,rax
  40cbea:	inc    rax
  40cbed:	mov    QWORD PTR [rsp+0x28],rax
  40cbf2:	sub    rbp,r13
  40cbf5:	mov    r15,QWORD PTR [r12]
  40cbf9:	test   r15,r15
  40cbfc:	je     40cccd <Mat_VarRead@plt+0xa5ad>
  40cc02:	movzx  eax,BYTE PTR [rsp+0x24]
  40cc07:	and    r14d,0x4
  40cc0b:	and    eax,0x1
  40cc0e:	xor    ebx,ebx
  40cc10:	mov    DWORD PTR [rsp+0x14],0x0
  40cc18:	mov    DWORD PTR [rsp+0xc],0xffffffff
  40cc20:	mov    DWORD PTR [rsp+0x20],r14d
  40cc25:	mov    BYTE PTR [rsp+0x13],al
  40cc29:	jmp    40cc71 <Mat_VarRead@plt+0xa551>
  40cc2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc30:	mov    r9d,DWORD PTR [rsp+0x20]
  40cc35:	test   r9d,r9d
  40cc38:	jne    40cc56 <Mat_VarRead@plt+0xa536>
  40cc3a:	shl    rax,0x5
  40cc3e:	add    rax,r12
  40cc41:	mov    rdx,rbx
  40cc44:	mov    ecx,DWORD PTR [rax+0x8]
  40cc47:	shl    rdx,0x5
  40cc4b:	cmp    DWORD PTR [r12+rdx*1+0x8],ecx
  40cc50:	je     40cd88 <Mat_VarRead@plt+0xa668>
  40cc56:	mov    DWORD PTR [rsp+0x14],0x1
  40cc5e:	inc    rbx
  40cc61:	mov    rax,rbx
  40cc64:	shl    rax,0x5
  40cc68:	mov    r15,QWORD PTR [r12+rax*1]
  40cc6c:	test   r15,r15
  40cc6f:	je     40ccb8 <Mat_VarRead@plt+0xa598>
  40cc71:	mov    rdx,rbp
  40cc74:	mov    rsi,r15
  40cc77:	mov    rdi,r13
  40cc7a:	mov    r14d,ebx
  40cc7d:	call   402410 <strncmp@plt>
  40cc82:	test   eax,eax
  40cc84:	jne    40cc5e <Mat_VarRead@plt+0xa53e>
  40cc86:	mov    rdi,r15
  40cc89:	call   4024a0 <strlen@plt>
  40cc8e:	cmp    rax,rbp
  40cc91:	je     40cd35 <Mat_VarRead@plt+0xa615>
  40cc97:	cmp    rbp,0x1
  40cc9b:	jne    40cca4 <Mat_VarRead@plt+0xa584>
  40cc9d:	cmp    BYTE PTR [rsp+0x13],0x0
  40cca2:	jne    40cc5e <Mat_VarRead@plt+0xa53e>
  40cca4:	movsxd rax,DWORD PTR [rsp+0xc]
  40cca9:	cmp    eax,0xffffffff
  40ccac:	jne    40cc30 <Mat_VarRead@plt+0xa510>
  40ccae:	mov    DWORD PTR [rsp+0xc],r14d
  40ccb3:	jmp    40cc5e <Mat_VarRead@plt+0xa53e>
  40ccb5:	nop    DWORD PTR [rax]
  40ccb8:	mov    r8d,DWORD PTR [rsp+0x14]
  40ccbd:	test   r8d,r8d
  40ccc0:	jne    40cde0 <Mat_VarRead@plt+0xa6c0>
  40ccc6:	cmp    DWORD PTR [rsp+0xc],0xffffffff
  40cccb:	jne    40cd30 <Mat_VarRead@plt+0xa610>
  40cccd:	mov    edx,DWORD PTR [rsp+0x24]
  40ccd1:	test   edx,edx
  40ccd3:	jne    40cf3d <Mat_VarRead@plt+0xa81d>
  40ccd9:	mov    rax,0x416514
  40cce0:	mov    eax,DWORD PTR [rax]
  40cce2:	test   eax,eax
  40cce4:	je     40cd06 <Mat_VarRead@plt+0xa5e6>
  40cce6:	mov    rax,QWORD PTR [rsp+0x38]
  40cceb:	cmp    BYTE PTR [rax],0x3a
  40ccee:	je     40cd06 <Mat_VarRead@plt+0xa5e6>
  40ccf0:	mov    rsi,QWORD PTR [rsp+0x18]
  40ccf5:	mov    rdx,r13
  40ccf8:	lea    rdi,[rip+0x5c61]        # 412960 <getopt_long_only@@Base+0x5380>
  40ccff:	xor    eax,eax
  40cd01:	call   4024f0 <warnx@plt>
  40cd06:	mov    rax,0x41650c
  40cd0d:	mov    DWORD PTR [rax],0x0
  40cd13:	add    rsp,0x58
  40cd17:	mov    eax,0x3f
  40cd1c:	pop    rbx
  40cd1d:	pop    rbp
  40cd1e:	pop    r12
  40cd20:	pop    r13
  40cd22:	pop    r14
  40cd24:	pop    r15
  40cd26:	ret    
  40cd27:	nop    WORD PTR [rax+rax*1+0x0]
  40cd30:	mov    r14d,DWORD PTR [rsp+0xc]
  40cd35:	movsxd rax,r14d
  40cd38:	shl    rax,0x5
  40cd3c:	add    r12,rax
  40cd3f:	mov    eax,DWORD PTR [r12+0x8]
  40cd44:	test   eax,eax
  40cd46:	jne    40cdb8 <Mat_VarRead@plt+0xa698>
  40cd48:	cmp    QWORD PTR [rsp+0x28],0x0
  40cd4e:	jne    40ce30 <Mat_VarRead@plt+0xa710>
  40cd54:	mov    rax,QWORD PTR [rsp+0x30]
  40cd59:	test   rax,rax
  40cd5c:	je     40cd61 <Mat_VarRead@plt+0xa641>
  40cd5e:	mov    DWORD PTR [rax],r14d
  40cd61:	mov    rdx,QWORD PTR [r12+0x10]
  40cd66:	mov    eax,DWORD PTR [r12+0x18]
  40cd6b:	test   rdx,rdx
  40cd6e:	je     40cd74 <Mat_VarRead@plt+0xa654>
  40cd70:	mov    DWORD PTR [rdx],eax
  40cd72:	xor    eax,eax
  40cd74:	add    rsp,0x58
  40cd78:	pop    rbx
  40cd79:	pop    rbp
  40cd7a:	pop    r12
  40cd7c:	pop    r13
  40cd7e:	pop    r14
  40cd80:	pop    r15
  40cd82:	ret    
  40cd83:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd88:	mov    rcx,QWORD PTR [rax+0x10]
  40cd8c:	cmp    QWORD PTR [r12+rdx*1+0x10],rcx
  40cd91:	jne    40cc56 <Mat_VarRead@plt+0xa536>
  40cd97:	mov    eax,DWORD PTR [rax+0x18]
  40cd9a:	cmp    DWORD PTR [r12+rdx*1+0x18],eax
  40cd9f:	mov    eax,0x1
  40cda4:	cmove  eax,DWORD PTR [rsp+0x14]
  40cda9:	mov    DWORD PTR [rsp+0x14],eax
  40cdad:	jmp    40cc5e <Mat_VarRead@plt+0xa53e>
  40cdb2:	nop    WORD PTR [rax+rax*1+0x0]
  40cdb8:	lea    edx,[rax-0x1]
  40cdbb:	cmp    edx,0x1
  40cdbe:	ja     40cd54 <Mat_VarRead@plt+0xa634>
  40cdc0:	mov    rsi,QWORD PTR [rsp+0x28]
  40cdc5:	test   rsi,rsi
  40cdc8:	je     40ce6f <Mat_VarRead@plt+0xa74f>
  40cdce:	mov    rax,0x416530
  40cdd5:	mov    QWORD PTR [rax],rsi
  40cdd8:	jmp    40cd54 <Mat_VarRead@plt+0xa634>
  40cddd:	nop    DWORD PTR [rax]
  40cde0:	mov    rax,0x416514
  40cde7:	mov    edi,DWORD PTR [rax]
  40cde9:	test   edi,edi
  40cdeb:	je     40cd06 <Mat_VarRead@plt+0xa5e6>
  40cdf1:	mov    rax,QWORD PTR [rsp+0x38]
  40cdf6:	cmp    BYTE PTR [rax],0x3a
  40cdf9:	je     40cd06 <Mat_VarRead@plt+0xa5e6>
  40cdff:	mov    rsi,QWORD PTR [rsp+0x18]
  40ce04:	mov    rcx,r13
  40ce07:	mov    edx,ebp
  40ce09:	lea    rdi,[rip+0x5ba0]        # 4129b0 <getopt_long_only@@Base+0x53d0>
  40ce10:	xor    eax,eax
  40ce12:	call   4024f0 <warnx@plt>
  40ce17:	jmp    40cd06 <Mat_VarRead@plt+0xa5e6>
  40ce1c:	nop    DWORD PTR [rax+0x0]
  40ce20:	mov    rdi,r13
  40ce23:	call   4024a0 <strlen@plt>
  40ce28:	mov    rbp,rax
  40ce2b:	jmp    40cbf5 <Mat_VarRead@plt+0xa4d5>
  40ce30:	mov    rax,0x416514
  40ce37:	mov    esi,DWORD PTR [rax]
  40ce39:	test   esi,esi
  40ce3b:	je     40ce4b <Mat_VarRead@plt+0xa72b>
  40ce3d:	mov    rax,QWORD PTR [rsp+0x38]
  40ce42:	cmp    BYTE PTR [rax],0x3a
  40ce45:	jne    40cf20 <Mat_VarRead@plt+0xa800>
  40ce4b:	cmp    QWORD PTR [r12+0x10],0x0
  40ce51:	jne    40cd06 <Mat_VarRead@plt+0xa5e6>
  40ce57:	mov    rax,0x41650c
  40ce5e:	mov    edx,DWORD PTR [r12+0x18]
  40ce63:	mov    DWORD PTR [rax],edx
  40ce65:	mov    eax,0x3f
  40ce6a:	jmp    40cd74 <Mat_VarRead@plt+0xa654>
  40ce6f:	cmp    eax,0x1
  40ce72:	jne    40cd54 <Mat_VarRead@plt+0xa634>
  40ce78:	mov    eax,DWORD PTR [rsp+0x44]
  40ce7c:	mov    rcx,0x416510
  40ce83:	add    eax,0x2
  40ce86:	mov    DWORD PTR [rcx],eax
  40ce88:	movsxd rax,DWORD PTR [rsp+0x40]
  40ce8d:	mov    rcx,QWORD PTR [rsp+0x48]
  40ce92:	mov    rdx,0x416530
  40ce99:	mov    rax,QWORD PTR [rcx+rax*8]
  40ce9d:	mov    QWORD PTR [rdx],rax
  40cea0:	test   rax,rax
  40cea3:	jne    40cd54 <Mat_VarRead@plt+0xa634>
  40cea9:	mov    rax,0x416514
  40ceb0:	mov    ecx,DWORD PTR [rax]
  40ceb2:	test   ecx,ecx
  40ceb4:	je     40cee9 <Mat_VarRead@plt+0xa7c9>
  40ceb6:	mov    rax,QWORD PTR [rsp+0x38]
  40cebb:	cmp    BYTE PTR [rax],0x3a
  40cebe:	je     40cee9 <Mat_VarRead@plt+0xa7c9>
  40cec0:	mov    rsi,QWORD PTR [rsp+0x18]
  40cec5:	xor    eax,eax
  40cec7:	mov    rdx,r13
  40ceca:	lea    rdi,[rip+0x5b0f]        # 4129e0 <getopt_long_only@@Base+0x5400>
  40ced1:	call   4024f0 <warnx@plt>
  40ced6:	mov    rax,0x416510
  40cedd:	mov    eax,DWORD PTR [rax]
  40cedf:	mov    DWORD PTR [rsp+0xc],eax
  40cee3:	dec    eax
  40cee5:	mov    DWORD PTR [rsp+0x40],eax
  40cee9:	xor    eax,eax
  40ceeb:	cmp    QWORD PTR [r12+0x10],0x0
  40cef1:	je     40cf54 <Mat_VarRead@plt+0xa834>
  40cef3:	mov    rdx,0x41650c
  40cefa:	mov    ecx,DWORD PTR [rsp+0x40]
  40cefe:	mov    DWORD PTR [rdx],eax
  40cf00:	mov    rax,0x416510
  40cf07:	mov    DWORD PTR [rax],ecx
  40cf09:	mov    rax,QWORD PTR [rsp+0x38]
  40cf0e:	cmp    BYTE PTR [rax],0x3a
  40cf11:	setne  al
  40cf14:	movzx  eax,al
  40cf17:	lea    eax,[rax+rax*4+0x3a]
  40cf1b:	jmp    40cd74 <Mat_VarRead@plt+0xa654>
  40cf20:	mov    rsi,QWORD PTR [rsp+0x18]
  40cf25:	mov    rcx,r13
  40cf28:	mov    edx,ebp
  40cf2a:	lea    rdi,[rip+0x5a4f]        # 412980 <getopt_long_only@@Base+0x53a0>
  40cf31:	xor    eax,eax
  40cf33:	call   4024f0 <warnx@plt>
  40cf38:	jmp    40ce4b <Mat_VarRead@plt+0xa72b>
  40cf3d:	mov    rax,0x416510
  40cf44:	mov    ecx,DWORD PTR [rsp+0x44]
  40cf48:	mov    DWORD PTR [rax],ecx
  40cf4a:	mov    eax,0xffffffff
  40cf4f:	jmp    40cd74 <Mat_VarRead@plt+0xa654>
  40cf54:	mov    eax,DWORD PTR [r12+0x18]
  40cf59:	jmp    40cef3 <Mat_VarRead@plt+0xa7d3>
  40cf5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf60:	push   r15
  40cf62:	push   r14
  40cf64:	push   r13
  40cf66:	push   r12
  40cf68:	push   rbp
  40cf69:	push   rbx
  40cf6a:	sub    rsp,0x48
  40cf6e:	mov    QWORD PTR [rsp+0x18],rdx
  40cf73:	mov    QWORD PTR [rsp+0x28],rcx
  40cf78:	mov    QWORD PTR [rsp+0x38],r8
  40cf7d:	test   rdx,rdx
  40cf80:	je     40d1d1 <Mat_VarRead@plt+0xaab1>
  40cf86:	mov    r15d,edi
  40cf89:	lea    rdi,[rip+0x59a7]        # 412937 <getopt_long_only@@Base+0x5357>
  40cf90:	mov    r14,rsi
  40cf93:	mov    r12d,r9d
  40cf96:	call   4023c0 <getenv@plt>
  40cf9b:	mov    QWORD PTR [rsp+0x20],rax
  40cfa0:	mov    rax,QWORD PTR [rsp+0x18]
  40cfa5:	movzx  eax,BYTE PTR [rax]
  40cfa8:	cmp    al,0x2d
  40cfaa:	je     40d230 <Mat_VarRead@plt+0xab10>
  40cfb0:	cmp    QWORD PTR [rsp+0x20],0x0
  40cfb6:	jne    40cfbc <Mat_VarRead@plt+0xa89c>
  40cfb8:	cmp    al,0x2b
  40cfba:	jne    40cfc8 <Mat_VarRead@plt+0xa8a8>
  40cfbc:	and    r12d,0xfffffffe
  40cfc0:	cmp    al,0x2b
  40cfc2:	je     40d234 <Mat_VarRead@plt+0xab14>
  40cfc8:	mov    rbx,0x416510
  40cfcf:	mov    r8,0x416528
  40cfd6:	mov    esi,DWORD PTR [rbx]
  40cfd8:	test   esi,esi
  40cfda:	je     40d1f0 <Mat_VarRead@plt+0xaad0>
  40cfe0:	mov    rcx,0x416530
  40cfe7:	mov    eax,DWORD PTR [r8]
  40cfea:	mov    QWORD PTR [rsp+0x30],rcx
  40cfef:	mov    QWORD PTR [rcx],0x0
  40cff6:	test   eax,eax
  40cff8:	jne    40d215 <Mat_VarRead@plt+0xaaf5>
  40cffe:	mov    rdi,r8
  40d001:	lea    r13,[rip+0x1088]        # 40e090 <getopt_long_only@@Base+0xab0>
  40d008:	mov    r8d,r15d
  40d00b:	mov    r15,rdi
  40d00e:	test   eax,eax
  40d010:	je     40d078 <Mat_VarRead@plt+0xa958>
  40d012:	mov    edx,DWORD PTR [rbx]
  40d014:	mov    DWORD PTR [r15],0x0
  40d01b:	cmp    edx,r8d
  40d01e:	jge    40d190 <Mat_VarRead@plt+0xaa70>
  40d024:	movsxd rax,edx
  40d027:	mov    rax,QWORD PTR [r14+rax*8]
  40d02b:	cmp    BYTE PTR [rax],0x2d
  40d02e:	mov    QWORD PTR [rip+0x94e3],rax        # 416518 <opterr@@Base+0x4>
  40d035:	je     40d240 <Mat_VarRead@plt+0xab20>
  40d03b:	mov    QWORD PTR [rip+0x94d6],r13        # 416518 <opterr@@Base+0x4>
  40d042:	test   r12b,0x2
  40d046:	jne    40d318 <Mat_VarRead@plt+0xabf8>
  40d04c:	test   r12b,0x1
  40d050:	je     40d1d1 <Mat_VarRead@plt+0xaab1>
  40d056:	mov    ebp,DWORD PTR [rip+0x94ac]        # 416508 <getopt_long_only@@Base+0x8f28>
  40d05c:	cmp    ebp,0xffffffff
  40d05f:	je     40d2c0 <Mat_VarRead@plt+0xaba0>
  40d065:	mov    eax,DWORD PTR [rip+0x9499]        # 416504 <getopt_long_only@@Base+0x8f24>
  40d06b:	cmp    eax,0xffffffff
  40d06e:	jne    40d2d0 <Mat_VarRead@plt+0xabb0>
  40d074:	inc    edx
  40d076:	mov    DWORD PTR [rbx],edx
  40d078:	mov    rcx,QWORD PTR [rip+0x9499]        # 416518 <opterr@@Base+0x4>
  40d07f:	movsx  esi,BYTE PTR [rcx]
  40d082:	test   sil,sil
  40d085:	je     40d012 <Mat_VarRead@plt+0xa8f2>
  40d087:	mov    r15d,r8d
  40d08a:	cmp    QWORD PTR [rsp+0x28],0x0
  40d090:	je     40d0af <Mat_VarRead@plt+0xa98f>
  40d092:	movsxd rax,DWORD PTR [rbx]
  40d095:	cmp    QWORD PTR [r14+rax*8],rcx
  40d099:	je     40d0af <Mat_VarRead@plt+0xa98f>
  40d09b:	cmp    sil,0x2d
  40d09f:	je     40d2a0 <Mat_VarRead@plt+0xab80>
  40d0a5:	test   r12b,0x4
  40d0a9:	jne    40d3ea <Mat_VarRead@plt+0xacca>
  40d0af:	lea    rdx,[rcx+0x1]
  40d0b3:	movsx  ebp,sil
  40d0b7:	mov    QWORD PTR [rip+0x945a],rdx        # 416518 <opterr@@Base+0x4>
  40d0be:	cmp    ebp,0x3a
  40d0c1:	je     40d397 <Mat_VarRead@plt+0xac77>
  40d0c7:	cmp    ebp,0x2d
  40d0ca:	je     40d4d7 <Mat_VarRead@plt+0xadb7>
  40d0d0:	mov    rdi,QWORD PTR [rsp+0x18]
  40d0d5:	mov    esi,ebp
  40d0d7:	mov    QWORD PTR [rsp+0x10],rdx
  40d0dc:	mov    QWORD PTR [rsp+0x8],rcx
  40d0e1:	call   4024e0 <strchr@plt>
  40d0e6:	test   rax,rax
  40d0e9:	mov    rcx,QWORD PTR [rsp+0x8]
  40d0ee:	mov    rdx,QWORD PTR [rsp+0x10]
  40d0f3:	je     40d397 <Mat_VarRead@plt+0xac77>
  40d0f9:	cmp    QWORD PTR [rsp+0x28],0x0
  40d0ff:	movzx  esi,BYTE PTR [rax+0x1]
  40d103:	je     40d37c <Mat_VarRead@plt+0xac5c>
  40d109:	cmp    ebp,0x57
  40d10c:	jne    40d37c <Mat_VarRead@plt+0xac5c>
  40d112:	cmp    sil,0x3b
  40d116:	jne    40d37c <Mat_VarRead@plt+0xac5c>
  40d11c:	cmp    BYTE PTR [rcx+0x1],0x0
  40d120:	jne    40d490 <Mat_VarRead@plt+0xad70>
  40d126:	mov    eax,DWORD PTR [rbx]
  40d128:	inc    eax
  40d12a:	mov    DWORD PTR [rbx],eax
  40d12c:	cmp    eax,r15d
  40d12f:	jl     40d483 <Mat_VarRead@plt+0xad63>
  40d135:	lea    rax,[rip+0xf54]        # 40e090 <getopt_long_only@@Base+0xab0>
  40d13c:	mov    QWORD PTR [rip+0x93d5],rax        # 416518 <opterr@@Base+0x4>
  40d143:	mov    rax,0x416514
  40d14a:	mov    edx,DWORD PTR [rax]
  40d14c:	test   edx,edx
  40d14e:	je     40d16d <Mat_VarRead@plt+0xaa4d>
  40d150:	mov    rax,QWORD PTR [rsp+0x18]
  40d155:	cmp    BYTE PTR [rax],0x3a
  40d158:	je     40d16d <Mat_VarRead@plt+0xaa4d>
  40d15a:	mov    esi,0x57
  40d15f:	lea    rdi,[rip+0x58fa]        # 412a60 <getopt_long_only@@Base+0x5480>
  40d166:	xor    eax,eax
  40d168:	call   4024f0 <warnx@plt>
  40d16d:	mov    rax,0x41650c
  40d174:	mov    DWORD PTR [rax],0x57
  40d17a:	mov    rax,QWORD PTR [rsp+0x18]
  40d17f:	cmp    BYTE PTR [rax],0x3a
  40d182:	je     40d55f <Mat_VarRead@plt+0xae3f>
  40d188:	mov    ebp,0x3f
  40d18d:	jmp    40d1d6 <Mat_VarRead@plt+0xaab6>
  40d18f:	nop
  40d190:	mov    ebp,DWORD PTR [rip+0x936e]        # 416504 <getopt_long_only@@Base+0x8f24>
  40d196:	lea    rax,[rip+0xef3]        # 40e090 <getopt_long_only@@Base+0xab0>
  40d19d:	mov    QWORD PTR [rip+0x9374],rax        # 416518 <opterr@@Base+0x4>
  40d1a4:	mov    r12d,DWORD PTR [rip+0x935d]        # 416508 <getopt_long_only@@Base+0x8f28>
  40d1ab:	cmp    ebp,0xffffffff
  40d1ae:	jne    40d330 <Mat_VarRead@plt+0xac10>
  40d1b4:	cmp    r12d,0xffffffff
  40d1b8:	je     40d1bd <Mat_VarRead@plt+0xaa9d>
  40d1ba:	mov    DWORD PTR [rbx],r12d
  40d1bd:	mov    DWORD PTR [rip+0x933d],0xffffffff        # 416504 <getopt_long_only@@Base+0x8f24>
  40d1c7:	mov    DWORD PTR [rip+0x9337],0xffffffff        # 416508 <getopt_long_only@@Base+0x8f28>
  40d1d1:	mov    ebp,0xffffffff
  40d1d6:	add    rsp,0x48
  40d1da:	pop    rbx
  40d1db:	mov    eax,ebp
  40d1dd:	pop    rbp
  40d1de:	pop    r12
  40d1e0:	pop    r13
  40d1e2:	pop    r14
  40d1e4:	pop    r15
  40d1e6:	ret    
  40d1e7:	nop    WORD PTR [rax+rax*1+0x0]
  40d1f0:	mov    rax,0x416530
  40d1f7:	mov    DWORD PTR [r8],0x1
  40d1fe:	mov    DWORD PTR [rbx],0x1
  40d204:	mov    QWORD PTR [rsp+0x30],rax
  40d209:	mov    QWORD PTR [rax],0x0
  40d210:	mov    eax,0x1
  40d215:	mov    DWORD PTR [rip+0x92e5],0xffffffff        # 416504 <getopt_long_only@@Base+0x8f24>
  40d21f:	mov    DWORD PTR [rip+0x92df],0xffffffff        # 416508 <getopt_long_only@@Base+0x8f28>
  40d229:	jmp    40cffe <Mat_VarRead@plt+0xa8de>
  40d22e:	xchg   ax,ax
  40d230:	or     r12d,0x2
  40d234:	inc    QWORD PTR [rsp+0x18]
  40d239:	jmp    40cfc8 <Mat_VarRead@plt+0xa8a8>
  40d23e:	xchg   ax,ax
  40d240:	movsx  esi,BYTE PTR [rax+0x1]
  40d244:	test   sil,sil
  40d247:	je     40d03b <Mat_VarRead@plt+0xa91b>
  40d24d:	mov    ebp,DWORD PTR [rip+0x92b5]        # 416508 <getopt_long_only@@Base+0x8f28>
  40d253:	mov    r15d,r8d
  40d256:	cmp    ebp,0xffffffff
  40d259:	je     40d268 <Mat_VarRead@plt+0xab48>
  40d25b:	cmp    DWORD PTR [rip+0x92a2],0xffffffff        # 416504 <getopt_long_only@@Base+0x8f24>
  40d262:	je     40d478 <Mat_VarRead@plt+0xad58>
  40d268:	lea    rcx,[rax+0x1]
  40d26c:	mov    QWORD PTR [rip+0x92a5],rcx        # 416518 <opterr@@Base+0x4>
  40d273:	cmp    sil,0x2d
  40d277:	jne    40d08a <Mat_VarRead@plt+0xa96a>
  40d27d:	cmp    BYTE PTR [rax+0x2],0x0
  40d281:	je     40d569 <Mat_VarRead@plt+0xae49>
  40d287:	cmp    QWORD PTR [rsp+0x28],0x0
  40d28d:	je     40d4cc <Mat_VarRead@plt+0xadac>
  40d293:	movsxd rax,DWORD PTR [rbx]
  40d296:	cmp    rcx,QWORD PTR [r14+rax*8]
  40d29a:	je     40d0af <Mat_VarRead@plt+0xa98f>
  40d2a0:	inc    rcx
  40d2a3:	mov    QWORD PTR [rip+0x926e],rcx        # 416518 <opterr@@Base+0x4>
  40d2aa:	mov    DWORD PTR [rip+0x924c],0x1        # 416500 <getopt_long_only@@Base+0x8f20>
  40d2b4:	xor    r8d,r8d
  40d2b7:	jmp    40d411 <Mat_VarRead@plt+0xacf1>
  40d2bc:	nop    DWORD PTR [rax+0x0]
  40d2c0:	mov    DWORD PTR [rip+0x9242],edx        # 416508 <getopt_long_only@@Base+0x8f28>
  40d2c6:	inc    edx
  40d2c8:	mov    DWORD PTR [rbx],edx
  40d2ca:	jmp    40d078 <Mat_VarRead@plt+0xa958>
  40d2cf:	nop
  40d2d0:	mov    esi,eax
  40d2d2:	mov    edi,ebp
  40d2d4:	mov    rcx,r14
  40d2d7:	mov    DWORD PTR [rsp+0x10],r8d
  40d2dc:	mov    DWORD PTR [rsp+0x8],eax
  40d2e0:	call   40ca90 <Mat_VarRead@plt+0xa370>
  40d2e5:	mov    edx,DWORD PTR [rbx]
  40d2e7:	mov    eax,DWORD PTR [rsp+0x8]
  40d2eb:	mov    edi,edx
  40d2ed:	sub    eax,ebp
  40d2ef:	sub    edi,eax
  40d2f1:	inc    edx
  40d2f3:	mov    DWORD PTR [rip+0x920f],edi        # 416508 <getopt_long_only@@Base+0x8f28>
  40d2f9:	mov    DWORD PTR [rip+0x9201],0xffffffff        # 416504 <getopt_long_only@@Base+0x8f24>
  40d303:	mov    eax,DWORD PTR [r15]
  40d306:	mov    DWORD PTR [rbx],edx
  40d308:	mov    r8d,DWORD PTR [rsp+0x10]
  40d30d:	jmp    40d00e <Mat_VarRead@plt+0xa8ee>
  40d312:	nop    WORD PTR [rax+rax*1+0x0]
  40d318:	mov    rdi,QWORD PTR [rsp+0x30]
  40d31d:	inc    edx
  40d31f:	mov    DWORD PTR [rbx],edx
  40d321:	mov    QWORD PTR [rdi],rax
  40d324:	mov    ebp,0x1
  40d329:	jmp    40d1d6 <Mat_VarRead@plt+0xaab6>
  40d32e:	xchg   ax,ax
  40d330:	mov    esi,ebp
  40d332:	mov    rcx,r14
  40d335:	mov    edi,r12d
  40d338:	sub    ebp,r12d
  40d33b:	call   40ca90 <Mat_VarRead@plt+0xa370>
  40d340:	sub    DWORD PTR [rbx],ebp
  40d342:	jmp    40d1bd <Mat_VarRead@plt+0xaa9d>
  40d347:	mov    rdi,QWORD PTR [rsp+0x18]
  40d34c:	mov    esi,0x2d
  40d351:	mov    QWORD PTR [rsp+0x10],rdx
  40d356:	mov    QWORD PTR [rsp+0x8],rcx
  40d35b:	call   4024e0 <strchr@plt>
  40d360:	test   rax,rax
  40d363:	mov    rcx,QWORD PTR [rsp+0x8]
  40d368:	mov    rdx,QWORD PTR [rsp+0x10]
  40d36d:	je     40d1d1 <Mat_VarRead@plt+0xaab1>
  40d373:	movzx  esi,BYTE PTR [rax+0x1]
  40d377:	mov    ebp,0x2d
  40d37c:	cmp    sil,0x3a
  40d380:	je     40d445 <Mat_VarRead@plt+0xad25>
  40d386:	cmp    BYTE PTR [rcx+0x1],0x0
  40d38a:	jne    40d1d6 <Mat_VarRead@plt+0xaab6>
  40d390:	inc    DWORD PTR [rbx]
  40d392:	jmp    40d1d6 <Mat_VarRead@plt+0xaab6>
  40d397:	cmp    BYTE PTR [rcx+0x1],0x0
  40d39b:	jne    40d39f <Mat_VarRead@plt+0xac7f>
  40d39d:	inc    DWORD PTR [rbx]
  40d39f:	mov    rax,0x416514
  40d3a6:	mov    ecx,DWORD PTR [rax]
  40d3a8:	test   ecx,ecx
  40d3aa:	je     40d3d7 <Mat_VarRead@plt+0xacb7>
  40d3ac:	mov    rax,QWORD PTR [rsp+0x18]
  40d3b1:	cmp    BYTE PTR [rax],0x3a
  40d3b4:	je     40d3d7 <Mat_VarRead@plt+0xacb7>
  40d3b6:	cmp    QWORD PTR [rsp+0x20],0x0
  40d3bc:	lea    rax,[rip+0x564d]        # 412a10 <getopt_long_only@@Base+0x5430>
  40d3c3:	lea    rdi,[rip+0x5666]        # 412a30 <getopt_long_only@@Base+0x5450>
  40d3ca:	cmove  rdi,rax
  40d3ce:	mov    esi,ebp
  40d3d0:	xor    eax,eax
  40d3d2:	call   4024f0 <warnx@plt>
  40d3d7:	mov    rax,0x41650c
  40d3de:	mov    DWORD PTR [rax],ebp
  40d3e0:	mov    ebp,0x3f
  40d3e5:	jmp    40d1d6 <Mat_VarRead@plt+0xaab6>
  40d3ea:	mov    DWORD PTR [rip+0x910c],0x0        # 416500 <getopt_long_only@@Base+0x8f20>
  40d3f4:	xor    r8d,r8d
  40d3f7:	cmp    sil,0x3a
  40d3fb:	je     40d411 <Mat_VarRead@plt+0xacf1>
  40d3fd:	mov    rdi,QWORD PTR [rsp+0x18]
  40d402:	call   4024e0 <strchr@plt>
  40d407:	xor    r8d,r8d
  40d40a:	test   rax,rax
  40d40d:	setne  r8b
  40d411:	mov    rcx,QWORD PTR [rsp+0x38]
  40d416:	mov    rdx,QWORD PTR [rsp+0x28]
  40d41b:	mov    rsi,QWORD PTR [rsp+0x18]
  40d420:	mov    r9d,r12d
  40d423:	mov    rdi,r14
  40d426:	call   40cb40 <Mat_VarRead@plt+0xa420>
  40d42b:	mov    ebp,eax
  40d42d:	cmp    eax,0xffffffff
  40d430:	jne    40d4b9 <Mat_VarRead@plt+0xad99>
  40d436:	mov    rcx,QWORD PTR [rip+0x90db]        # 416518 <opterr@@Base+0x4>
  40d43d:	movzx  esi,BYTE PTR [rcx]
  40d440:	jmp    40d0af <Mat_VarRead@plt+0xa98f>
  40d445:	mov    r10,QWORD PTR [rsp+0x30]
  40d44a:	mov    edi,DWORD PTR [rbx]
  40d44c:	mov    QWORD PTR [r10],0x0
  40d453:	lea    esi,[rdi+0x1]
  40d456:	cmp    BYTE PTR [rcx+0x1],0x0
  40d45a:	je     40d4eb <Mat_VarRead@plt+0xadcb>
  40d460:	mov    QWORD PTR [r10],rdx
  40d463:	lea    rax,[rip+0xc26]        # 40e090 <getopt_long_only@@Base+0xab0>
  40d46a:	mov    QWORD PTR [rip+0x90a7],rax        # 416518 <opterr@@Base+0x4>
  40d471:	mov    DWORD PTR [rbx],esi
  40d473:	jmp    40d1d6 <Mat_VarRead@plt+0xaab6>
  40d478:	mov    DWORD PTR [rip+0x9086],edx        # 416504 <getopt_long_only@@Base+0x8f24>
  40d47e:	jmp    40d268 <Mat_VarRead@plt+0xab48>
  40d483:	cdqe   
  40d485:	mov    rax,QWORD PTR [r14+rax*8]
  40d489:	mov    QWORD PTR [rip+0x9088],rax        # 416518 <opterr@@Base+0x4>
  40d490:	mov    rcx,QWORD PTR [rsp+0x38]
  40d495:	mov    rdx,QWORD PTR [rsp+0x28]
  40d49a:	mov    rsi,QWORD PTR [rsp+0x18]
  40d49f:	mov    r9d,r12d
  40d4a2:	xor    r8d,r8d
  40d4a5:	mov    rdi,r14
  40d4a8:	mov    DWORD PTR [rip+0x904e],0x2        # 416500 <getopt_long_only@@Base+0x8f20>
  40d4b2:	call   40cb40 <Mat_VarRead@plt+0xa420>
  40d4b7:	mov    ebp,eax
  40d4b9:	lea    rax,[rip+0xbd0]        # 40e090 <getopt_long_only@@Base+0xab0>
  40d4c0:	mov    QWORD PTR [rip+0x9051],rax        # 416518 <opterr@@Base+0x4>
  40d4c7:	jmp    40d1d6 <Mat_VarRead@plt+0xaab6>
  40d4cc:	lea    rdx,[rax+0x2]
  40d4d0:	mov    QWORD PTR [rip+0x9041],rdx        # 416518 <opterr@@Base+0x4>
  40d4d7:	cmp    BYTE PTR [rcx+0x1],0x0
  40d4db:	je     40d347 <Mat_VarRead@plt+0xac27>
  40d4e1:	mov    ebp,0x2d
  40d4e6:	jmp    40d39f <Mat_VarRead@plt+0xac7f>
  40d4eb:	cmp    BYTE PTR [rax+0x2],0x3a
  40d4ef:	je     40d463 <Mat_VarRead@plt+0xad43>
  40d4f5:	mov    DWORD PTR [rbx],esi
  40d4f7:	cmp    r15d,esi
  40d4fa:	jle    40d513 <Mat_VarRead@plt+0xadf3>
  40d4fc:	movsxd rsi,esi
  40d4ff:	mov    rax,QWORD PTR [r14+rsi*8]
  40d503:	mov    rcx,QWORD PTR [rsp+0x30]
  40d508:	lea    esi,[rdi+0x2]
  40d50b:	mov    QWORD PTR [rcx],rax
  40d50e:	jmp    40d463 <Mat_VarRead@plt+0xad43>
  40d513:	lea    rax,[rip+0xb76]        # 40e090 <getopt_long_only@@Base+0xab0>
  40d51a:	mov    QWORD PTR [rip+0x8ff7],rax        # 416518 <opterr@@Base+0x4>
  40d521:	mov    rax,0x416514
  40d528:	mov    eax,DWORD PTR [rax]
  40d52a:	test   eax,eax
  40d52c:	je     40d548 <Mat_VarRead@plt+0xae28>
  40d52e:	mov    rax,QWORD PTR [rsp+0x18]
  40d533:	cmp    BYTE PTR [rax],0x3a
  40d536:	je     40d548 <Mat_VarRead@plt+0xae28>
  40d538:	mov    esi,ebp
  40d53a:	lea    rdi,[rip+0x551f]        # 412a60 <getopt_long_only@@Base+0x5480>
  40d541:	xor    eax,eax
  40d543:	call   4024f0 <warnx@plt>
  40d548:	mov    rax,0x41650c
  40d54f:	mov    DWORD PTR [rax],ebp
  40d551:	mov    rax,QWORD PTR [rsp+0x18]
  40d556:	cmp    BYTE PTR [rax],0x3a
  40d559:	jne    40d188 <Mat_VarRead@plt+0xaa68>
  40d55f:	mov    ebp,0x3a
  40d564:	jmp    40d1d6 <Mat_VarRead@plt+0xaab6>
  40d569:	mov    r12d,DWORD PTR [rip+0x8f94]        # 416504 <getopt_long_only@@Base+0x8f24>
  40d570:	inc    edx
  40d572:	lea    rax,[rip+0xb17]        # 40e090 <getopt_long_only@@Base+0xab0>
  40d579:	mov    DWORD PTR [rbx],edx
  40d57b:	mov    QWORD PTR [rip+0x8f96],rax        # 416518 <opterr@@Base+0x4>
  40d582:	cmp    r12d,0xffffffff
  40d586:	je     40d1bd <Mat_VarRead@plt+0xaa9d>
  40d58c:	mov    rcx,r14
  40d58f:	mov    esi,r12d
  40d592:	mov    edi,ebp
  40d594:	call   40ca90 <Mat_VarRead@plt+0xa370>
  40d599:	mov    eax,DWORD PTR [rbx]
  40d59b:	add    eax,ebp
  40d59d:	sub    eax,r12d
  40d5a0:	mov    DWORD PTR [rbx],eax
  40d5a2:	jmp    40d1bd <Mat_VarRead@plt+0xaa9d>
  40d5a7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040d5b0 <getopt@@Base>:
  40d5b0:	endbr64 
  40d5b4:	xor    r9d,r9d
  40d5b7:	xor    r8d,r8d
  40d5ba:	xor    ecx,ecx
  40d5bc:	jmp    40cf60 <Mat_VarRead@plt+0xa840>
  40d5c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d5cc:	nop    DWORD PTR [rax+0x0]

000000000040d5d0 <getopt_long@@Base>:
  40d5d0:	endbr64 
  40d5d4:	mov    r9d,0x1
  40d5da:	jmp    40cf60 <Mat_VarRead@plt+0xa840>
  40d5df:	nop

000000000040d5e0 <getopt_long_only@@Base>:
  40d5e0:	endbr64 
  40d5e4:	mov    r9d,0x5
  40d5ea:	jmp    40cf60 <Mat_VarRead@plt+0xa840>
  40d5ef:	nop
  40d5f0:	endbr64 
  40d5f4:	push   r15
  40d5f6:	lea    r15,[rip+0x77f3]        # 414df0 <getopt_long_only@@Base+0x7810>
  40d5fd:	push   r14
  40d5ff:	mov    r14,rdx
  40d602:	push   r13
  40d604:	mov    r13,rsi
  40d607:	push   r12
  40d609:	mov    r12d,edi
  40d60c:	push   rbp
  40d60d:	lea    rbp,[rip+0x77e4]        # 414df8 <getopt_long_only@@Base+0x7818>
  40d614:	push   rbx
  40d615:	sub    rbp,r15
  40d618:	sub    rsp,0x8
  40d61c:	call   402000 <Mat_VarGetNumberOfFields@plt-0x3b0>
  40d621:	sar    rbp,0x3
  40d625:	je     40d646 <getopt_long_only@@Base+0x66>
  40d627:	xor    ebx,ebx
  40d629:	nop    DWORD PTR [rax+0x0]
  40d630:	mov    rdx,r14
  40d633:	mov    rsi,r13
  40d636:	mov    edi,r12d
  40d639:	call   QWORD PTR [r15+rbx*8]
  40d63d:	add    rbx,0x1
  40d641:	cmp    rbp,rbx
  40d644:	jne    40d630 <getopt_long_only@@Base+0x50>
  40d646:	add    rsp,0x8
  40d64a:	pop    rbx
  40d64b:	pop    rbp
  40d64c:	pop    r12
  40d64e:	pop    r13
  40d650:	pop    r14
  40d652:	pop    r15
  40d654:	ret    
  40d655:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d660:	endbr64 
  40d664:	ret    

Disassembly of section .fini:

000000000040d668 <.fini>:
  40d668:	endbr64 
  40d66c:	sub    rsp,0x8
  40d670:	add    rsp,0x8
  40d674:	ret    
