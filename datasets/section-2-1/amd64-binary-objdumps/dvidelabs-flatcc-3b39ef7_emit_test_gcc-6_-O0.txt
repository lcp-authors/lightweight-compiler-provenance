
../repos/dvidelabs-flatcc-3b39ef7/test/emit_test/emit_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xcfe1]        # 40fff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xcfe2]        # 410008 <flatcc_builder_padding_base@@Base+0x4b28>
  403026:	jmp    QWORD PTR [rip+0xcfe4]        # 410010 <flatcc_builder_padding_base@@Base+0x4b30>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0xcfe2]        # 410018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0xcfda]        # 410020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <puts@plt>:
  403050:	jmp    QWORD PTR [rip+0xcfd2]        # 410028 <puts@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <strlen@plt>:
  403060:	jmp    QWORD PTR [rip+0xcfca]        # 410030 <strlen@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <__stack_chk_fail@plt>:
  403070:	jmp    QWORD PTR [rip+0xcfc2]        # 410038 <__stack_chk_fail@GLIBC_2.4>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <printf@plt>:
  403080:	jmp    QWORD PTR [rip+0xcfba]        # 410040 <printf@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <__assert_fail@plt>:
  403090:	jmp    QWORD PTR [rip+0xcfb2]        # 410048 <__assert_fail@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <memset@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xcfaa]        # 410050 <memset@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <fputc@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xcfa2]        # 410058 <fputc@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <memchr@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xcf9a]        # 410060 <memchr@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <memcmp@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xcf92]        # 410068 <memcmp@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <fprintf@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xcf8a]        # 410070 <fprintf@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

00000000004030f0 <memcpy@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xcf82]        # 410078 <memcpy@GLIBC_2.14>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <free@plt-0x10>

0000000000403100 <malloc@plt>:
  403100:	jmp    QWORD PTR [rip+0xcf7a]        # 410080 <malloc@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <free@plt-0x10>

0000000000403110 <realloc@plt>:
  403110:	jmp    QWORD PTR [rip+0xcf72]        # 410088 <realloc@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <free@plt-0x10>

0000000000403120 <fwrite@plt>:
  403120:	jmp    QWORD PTR [rip+0xcf6a]        # 410090 <fwrite@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <free@plt-0x10>

0000000000403130 <posix_memalign@plt>:
  403130:	jmp    QWORD PTR [rip+0xcf62]        # 410098 <posix_memalign@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

0000000000403140 <_start@@Base>:
  403140:	endbr64 
  403144:	xor    ebp,ebp
  403146:	mov    r9,rdx
  403149:	pop    rsi
  40314a:	mov    rdx,rsp
  40314d:	and    rsp,0xfffffffffffffff0
  403151:	push   rax
  403152:	push   rsp
  403153:	mov    r8,0x40a4d0
  40315a:	mov    rcx,0x40a460
  403161:	mov    rdi,0x40430b
  403168:	call   QWORD PTR [rip+0xce7a]        # 40ffe8 <__libc_start_main@GLIBC_2.2.5>
  40316e:	hlt    
  40316f:	nop
  403170:	endbr64 
  403174:	ret    
  403175:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40317f:	nop
  403180:	mov    eax,0x4100c7
  403185:	push   rbp
  403186:	sub    rax,0x4100c0
  40318c:	cmp    rax,0xe
  403190:	mov    rbp,rsp
  403193:	jbe    4031b0 <_start@@Base+0x70>
  403195:	mov    eax,0x0
  40319a:	test   rax,rax
  40319d:	je     4031b0 <_start@@Base+0x70>
  40319f:	pop    rbp
  4031a0:	mov    edi,0x4100c0
  4031a5:	jmp    rax
  4031a7:	nop    WORD PTR [rax+rax*1+0x0]
  4031b0:	pop    rbp
  4031b1:	ret    
  4031b2:	nop    DWORD PTR [rax+0x0]
  4031b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031c0:	mov    esi,0x4100c0
  4031c5:	push   rbp
  4031c6:	sub    rsi,0x4100c0
  4031cd:	sar    rsi,0x3
  4031d1:	mov    rbp,rsp
  4031d4:	mov    rax,rsi
  4031d7:	shr    rax,0x3f
  4031db:	add    rsi,rax
  4031de:	sar    rsi,1
  4031e1:	je     4031f8 <_start@@Base+0xb8>
  4031e3:	mov    eax,0x0
  4031e8:	test   rax,rax
  4031eb:	je     4031f8 <_start@@Base+0xb8>
  4031ed:	pop    rbp
  4031ee:	mov    edi,0x4100c0
  4031f3:	jmp    rax
  4031f5:	nop    DWORD PTR [rax]
  4031f8:	pop    rbp
  4031f9:	ret    
  4031fa:	nop    WORD PTR [rax+rax*1+0x0]
  403200:	cmp    BYTE PTR [rip+0xceb9],0x0        # 4100c0 <__bss_start@@Base>
  403207:	jne    40321a <_start@@Base+0xda>
  403209:	push   rbp
  40320a:	mov    rbp,rsp
  40320d:	call   403180 <_start@@Base+0x40>
  403212:	pop    rbp
  403213:	mov    BYTE PTR [rip+0xcea6],0x1        # 4100c0 <__bss_start@@Base>
  40321a:	repz ret 
  40321c:	nop    DWORD PTR [rax+0x0]
  403220:	mov    edi,0x40fe10
  403225:	cmp    QWORD PTR [rdi],0x0
  403229:	jne    403230 <_start@@Base+0xf0>
  40322b:	jmp    4031c0 <_start@@Base+0x80>
  40322d:	nop    DWORD PTR [rax]
  403230:	mov    eax,0x0
  403235:	test   rax,rax
  403238:	je     40322b <_start@@Base+0xeb>
  40323a:	push   rbp
  40323b:	mov    rbp,rsp
  40323e:	call   rax
  403240:	pop    rbp
  403241:	jmp    4031c0 <_start@@Base+0x80>
  403246:	push   rbp
  403247:	mov    rbp,rsp
  40324a:	mov    eax,edi
  40324c:	mov    BYTE PTR [rbp-0x4],al
  40324f:	movzx  eax,BYTE PTR [rbp-0x4]
  403253:	pop    rbp
  403254:	ret    
  403255:	push   rbp
  403256:	mov    rbp,rsp
  403259:	mov    eax,edi
  40325b:	mov    BYTE PTR [rbp-0x4],al
  40325e:	movzx  eax,BYTE PTR [rbp-0x4]
  403262:	pop    rbp
  403263:	ret    
  403264:	push   rbp
  403265:	mov    rbp,rsp
  403268:	sub    rsp,0x8
  40326c:	mov    QWORD PTR [rbp-0x8],rdi
  403270:	mov    rax,QWORD PTR [rbp-0x8]
  403274:	movzx  eax,BYTE PTR [rax]
  403277:	movzx  eax,al
  40327a:	mov    edi,eax
  40327c:	call   403246 <_start@@Base+0x106>
  403281:	leave  
  403282:	ret    
  403283:	push   rbp
  403284:	mov    rbp,rsp
  403287:	mov    QWORD PTR [rbp-0x8],rdi
  40328b:	mov    rax,QWORD PTR [rbp-0x8]
  40328f:	pop    rbp
  403290:	ret    
  403291:	push   rbp
  403292:	mov    rbp,rsp
  403295:	mov    QWORD PTR [rbp-0x8],rdi
  403299:	mov    rax,QWORD PTR [rbp-0x8]
  40329d:	pop    rbp
  40329e:	ret    
  40329f:	push   rbp
  4032a0:	mov    rbp,rsp
  4032a3:	sub    rsp,0x8
  4032a7:	mov    QWORD PTR [rbp-0x8],rdi
  4032ab:	mov    rax,QWORD PTR [rbp-0x8]
  4032af:	mov    rax,QWORD PTR [rax]
  4032b2:	mov    rdi,rax
  4032b5:	call   403283 <_start@@Base+0x143>
  4032ba:	leave  
  4032bb:	ret    
  4032bc:	push   rbp
  4032bd:	mov    rbp,rsp
  4032c0:	vmovss DWORD PTR [rbp-0x14],xmm0
  4032c5:	vmovss xmm0,DWORD PTR [rbp-0x14]
  4032ca:	vmovss DWORD PTR [rbp-0x4],xmm0
  4032cf:	mov    eax,DWORD PTR [rbp-0x4]
  4032d2:	mov    DWORD PTR [rbp-0x4],eax
  4032d5:	vmovss xmm0,DWORD PTR [rbp-0x4]
  4032da:	pop    rbp
  4032db:	ret    
  4032dc:	push   rbp
  4032dd:	mov    rbp,rsp
  4032e0:	sub    rsp,0x10
  4032e4:	mov    QWORD PTR [rbp-0x8],rdi
  4032e8:	mov    rax,QWORD PTR [rbp-0x8]
  4032ec:	mov    eax,DWORD PTR [rax]
  4032ee:	mov    DWORD PTR [rbp-0xc],eax
  4032f1:	vmovss xmm0,DWORD PTR [rbp-0xc]
  4032f6:	call   4032bc <_start@@Base+0x17c>
  4032fb:	leave  
  4032fc:	ret    
  4032fd:	push   rbp
  4032fe:	mov    rbp,rsp
  403301:	mov    DWORD PTR [rbp-0x4],edi
  403304:	mov    eax,DWORD PTR [rbp-0x4]
  403307:	pop    rbp
  403308:	ret    
  403309:	push   rbp
  40330a:	mov    rbp,rsp
  40330d:	sub    rsp,0x8
  403311:	mov    QWORD PTR [rbp-0x8],rdi
  403315:	mov    rax,QWORD PTR [rbp-0x8]
  403319:	mov    eax,DWORD PTR [rax]
  40331b:	mov    edi,eax
  40331d:	call   4032fd <_start@@Base+0x1bd>
  403322:	leave  
  403323:	ret    
  403324:	push   rbp
  403325:	mov    rbp,rsp
  403328:	mov    DWORD PTR [rbp-0x4],edi
  40332b:	mov    eax,DWORD PTR [rbp-0x4]
  40332e:	pop    rbp
  40332f:	ret    
  403330:	push   rbp
  403331:	mov    rbp,rsp
  403334:	sub    rsp,0x8
  403338:	mov    QWORD PTR [rbp-0x8],rdi
  40333c:	mov    rax,QWORD PTR [rbp-0x8]
  403340:	mov    eax,DWORD PTR [rax]
  403342:	mov    edi,eax
  403344:	call   403324 <_start@@Base+0x1e4>
  403349:	leave  
  40334a:	ret    
  40334b:	push   rbp
  40334c:	mov    rbp,rsp
  40334f:	mov    eax,edi
  403351:	mov    WORD PTR [rbp-0x4],ax
  403355:	movzx  eax,WORD PTR [rbp-0x4]
  403359:	pop    rbp
  40335a:	ret    
  40335b:	push   rbp
  40335c:	mov    rbp,rsp
  40335f:	sub    rsp,0x8
  403363:	mov    QWORD PTR [rbp-0x8],rdi
  403367:	mov    rax,QWORD PTR [rbp-0x8]
  40336b:	movzx  eax,WORD PTR [rax]
  40336e:	movzx  eax,ax
  403371:	mov    edi,eax
  403373:	call   40334b <_start@@Base+0x20b>
  403378:	leave  
  403379:	ret    
  40337a:	push   rbp
  40337b:	mov    rbp,rsp
  40337e:	mov    DWORD PTR [rbp-0x4],edi
  403381:	mov    eax,DWORD PTR [rbp-0x4]
  403384:	pop    rbp
  403385:	ret    
  403386:	push   rbp
  403387:	mov    rbp,rsp
  40338a:	mov    DWORD PTR [rbp-0x4],edi
  40338d:	mov    eax,DWORD PTR [rbp-0x4]
  403390:	pop    rbp
  403391:	ret    
  403392:	push   rbp
  403393:	mov    rbp,rsp
  403396:	sub    rsp,0x8
  40339a:	mov    QWORD PTR [rbp-0x8],rdi
  40339e:	mov    rax,QWORD PTR [rbp-0x8]
  4033a2:	mov    eax,DWORD PTR [rax]
  4033a4:	mov    edi,eax
  4033a6:	call   40337a <_start@@Base+0x23a>
  4033ab:	leave  
  4033ac:	ret    
  4033ad:	push   rbp
  4033ae:	mov    rbp,rsp
  4033b1:	sub    rsp,0x8
  4033b5:	mov    QWORD PTR [rbp-0x8],rdi
  4033b9:	cmp    QWORD PTR [rbp-0x8],0x0
  4033be:	je     4033d4 <_start@@Base+0x294>
  4033c0:	mov    rax,QWORD PTR [rbp-0x8]
  4033c4:	sub    rax,0x4
  4033c8:	mov    rdi,rax
  4033cb:	call   403309 <_start@@Base+0x1c9>
  4033d0:	mov    eax,eax
  4033d2:	jmp    4033d9 <_start@@Base+0x299>
  4033d4:	mov    eax,0x0
  4033d9:	leave  
  4033da:	ret    
  4033db:	push   rbp
  4033dc:	mov    rbp,rsp
  4033df:	sub    rsp,0x8
  4033e3:	mov    QWORD PTR [rbp-0x8],rdi
  4033e7:	mov    rax,QWORD PTR [rbp-0x8]
  4033eb:	mov    rdi,rax
  4033ee:	call   4033ad <_start@@Base+0x26d>
  4033f3:	leave  
  4033f4:	ret    
  4033f5:	push   rbp
  4033f6:	mov    rbp,rsp
  4033f9:	sub    rsp,0x10
  4033fd:	mov    QWORD PTR [rbp-0x8],rdi
  403401:	mov    QWORD PTR [rbp-0x10],rsi
  403405:	mov    rax,QWORD PTR [rbp-0x8]
  403409:	mov    rdi,rax
  40340c:	call   4033ad <_start@@Base+0x26d>
  403411:	cmp    rax,QWORD PTR [rbp-0x10]
  403415:	ja     403436 <_start@@Base+0x2f6>
  403417:	lea    rcx,[rip+0x8062]        # 40b480 <_IO_stdin_used@@Base+0x480>
  40341e:	mov    edx,0x193
  403423:	lea    rsi,[rip+0x7bee]        # 40b018 <_IO_stdin_used@@Base+0x18>
  40342a:	lea    rdi,[rip+0x7c67]        # 40b098 <_IO_stdin_used@@Base+0x98>
  403431:	call   403090 <__assert_fail@plt>
  403436:	mov    rax,QWORD PTR [rbp-0x10]
  40343a:	lea    rdx,[rax*4+0x0]
  403442:	mov    rax,QWORD PTR [rbp-0x8]
  403446:	add    rax,rdx
  403449:	mov    rdi,rax
  40344c:	call   4032dc <_start@@Base+0x19c>
  403451:	leave  
  403452:	ret    
  403453:	push   rbp
  403454:	mov    rbp,rsp
  403457:	sub    rsp,0x20
  40345b:	mov    QWORD PTR [rbp-0x18],rdi
  40345f:	mov    QWORD PTR [rbp-0x20],rsi
  403463:	mov    rax,QWORD PTR fs:0x28
  40346c:	mov    QWORD PTR [rbp-0x8],rax
  403470:	xor    eax,eax
  403472:	mov    DWORD PTR [rbp-0x10],0x0
  403479:	cmp    QWORD PTR [rbp-0x20],0x0
  40347e:	jne    403487 <_start@@Base+0x347>
  403480:	mov    eax,0x1
  403485:	jmp    4034da <_start@@Base+0x39a>
  403487:	mov    rcx,QWORD PTR [rbp-0x20]
  40348b:	lea    rax,[rbp-0x10]
  40348f:	mov    edx,0x4
  403494:	mov    rsi,rcx
  403497:	mov    rdi,rax
  40349a:	call   403040 <strncpy@plt>
  40349f:	mov    eax,DWORD PTR [rbp-0x10]
  4034a2:	mov    edi,eax
  4034a4:	call   403386 <_start@@Base+0x246>
  4034a9:	mov    DWORD PTR [rbp-0x10],eax
  4034ac:	mov    rax,QWORD PTR [rbp-0x18]
  4034b0:	add    rax,0x4
  4034b4:	mov    rdi,rax
  4034b7:	call   403392 <_start@@Base+0x252>
  4034bc:	mov    DWORD PTR [rbp-0xc],eax
  4034bf:	mov    eax,DWORD PTR [rbp-0x10]
  4034c2:	test   eax,eax
  4034c4:	je     4034ce <_start@@Base+0x38e>
  4034c6:	mov    eax,DWORD PTR [rbp-0x10]
  4034c9:	cmp    DWORD PTR [rbp-0xc],eax
  4034cc:	jne    4034d5 <_start@@Base+0x395>
  4034ce:	mov    eax,0x1
  4034d3:	jmp    4034da <_start@@Base+0x39a>
  4034d5:	mov    eax,0x0
  4034da:	mov    rdx,QWORD PTR [rbp-0x8]
  4034de:	xor    rdx,QWORD PTR fs:0x28
  4034e7:	je     4034ee <_start@@Base+0x3ae>
  4034e9:	call   403070 <__stack_chk_fail@plt>
  4034ee:	leave  
  4034ef:	ret    
  4034f0:	push   rbp
  4034f1:	mov    rbp,rsp
  4034f4:	sub    rsp,0x20
  4034f8:	mov    QWORD PTR [rbp-0x18],rdi
  4034fc:	mov    QWORD PTR [rbp-0x8],0x0
  403504:	cmp    QWORD PTR [rbp-0x18],0x0
  403509:	je     403539 <_start@@Base+0x3f9>
  40350b:	mov    rdx,QWORD PTR [rbp-0x8]
  40350f:	mov    rax,QWORD PTR [rbp-0x18]
  403513:	mov    rsi,rdx
  403516:	mov    rdi,rax
  403519:	call   403453 <_start@@Base+0x313>
  40351e:	test   eax,eax
  403520:	je     403539 <_start@@Base+0x3f9>
  403522:	mov    rax,QWORD PTR [rbp-0x18]
  403526:	mov    rdi,rax
  403529:	call   403309 <_start@@Base+0x1c9>
  40352e:	mov    edx,eax
  403530:	mov    rax,QWORD PTR [rbp-0x18]
  403534:	add    rax,rdx
  403537:	jmp    40353e <_start@@Base+0x3fe>
  403539:	mov    eax,0x0
  40353e:	leave  
  40353f:	ret    
  403540:	push   rbp
  403541:	mov    rbp,rsp
  403544:	sub    rsp,0x20
  403548:	mov    QWORD PTR [rbp-0x18],rdi
  40354c:	mov    WORD PTR [rbp-0xc],0x0
  403552:	cmp    QWORD PTR [rbp-0x18],0x0
  403557:	jne    403578 <_start@@Base+0x438>
  403559:	lea    rcx,[rip+0x7ee8]        # 40b448 <_IO_stdin_used@@Base+0x448>
  403560:	mov    edx,0x29
  403565:	lea    rsi,[rip+0x7b64]        # 40b0d0 <_IO_stdin_used@@Base+0xd0>
  40356c:	lea    rdi,[rip+0x7bd5]        # 40b148 <_IO_stdin_used@@Base+0x148>
  403573:	call   403090 <__assert_fail@plt>
  403578:	mov    WORD PTR [rbp-0xa],0x0
  40357e:	mov    rax,QWORD PTR [rbp-0x18]
  403582:	mov    rdi,rax
  403585:	call   403330 <_start@@Base+0x1f0>
  40358a:	cdqe   
  40358c:	neg    rax
  40358f:	mov    rdx,rax
  403592:	mov    rax,QWORD PTR [rbp-0x18]
  403596:	add    rax,rdx
  403599:	mov    QWORD PTR [rbp-0x8],rax
  40359d:	mov    rax,QWORD PTR [rbp-0x8]
  4035a1:	mov    rdi,rax
  4035a4:	call   40335b <_start@@Base+0x21b>
  4035a9:	movzx  eax,ax
  4035ac:	movzx  edx,WORD PTR [rbp-0xa]
  4035b0:	add    edx,0x3
  4035b3:	movsxd rdx,edx
  4035b6:	add    rdx,rdx
  4035b9:	cmp    rax,rdx
  4035bc:	jb     4035dd <_start@@Base+0x49d>
  4035be:	movzx  eax,WORD PTR [rbp-0xa]
  4035c2:	add    rax,0x2
  4035c6:	lea    rdx,[rax+rax*1]
  4035ca:	mov    rax,QWORD PTR [rbp-0x8]
  4035ce:	add    rax,rdx
  4035d1:	mov    rdi,rax
  4035d4:	call   40335b <_start@@Base+0x21b>
  4035d9:	mov    WORD PTR [rbp-0xc],ax
  4035dd:	cmp    WORD PTR [rbp-0xc],0x0
  4035e2:	je     4035f9 <_start@@Base+0x4b9>
  4035e4:	movzx  edx,WORD PTR [rbp-0xc]
  4035e8:	mov    rax,QWORD PTR [rbp-0x18]
  4035ec:	add    rax,rdx
  4035ef:	mov    rdi,rax
  4035f2:	call   40329f <_start@@Base+0x15f>
  4035f7:	jmp    4035fe <_start@@Base+0x4be>
  4035f9:	mov    eax,0x0
  4035fe:	leave  
  4035ff:	ret    
  403600:	push   rbp
  403601:	mov    rbp,rsp
  403604:	sub    rsp,0x20
  403608:	mov    QWORD PTR [rbp-0x18],rdi
  40360c:	mov    WORD PTR [rbp-0xc],0x0
  403612:	cmp    QWORD PTR [rbp-0x18],0x0
  403617:	jne    403638 <_start@@Base+0x4f8>
  403619:	lea    rcx,[rip+0x7e38]        # 40b458 <_IO_stdin_used@@Base+0x458>
  403620:	mov    edx,0x2a
  403625:	lea    rsi,[rip+0x7aa4]        # 40b0d0 <_IO_stdin_used@@Base+0xd0>
  40362c:	lea    rdi,[rip+0x7b15]        # 40b148 <_IO_stdin_used@@Base+0x148>
  403633:	call   403090 <__assert_fail@plt>
  403638:	mov    WORD PTR [rbp-0xa],0x1
  40363e:	mov    rax,QWORD PTR [rbp-0x18]
  403642:	mov    rdi,rax
  403645:	call   403330 <_start@@Base+0x1f0>
  40364a:	cdqe   
  40364c:	neg    rax
  40364f:	mov    rdx,rax
  403652:	mov    rax,QWORD PTR [rbp-0x18]
  403656:	add    rax,rdx
  403659:	mov    QWORD PTR [rbp-0x8],rax
  40365d:	mov    rax,QWORD PTR [rbp-0x8]
  403661:	mov    rdi,rax
  403664:	call   40335b <_start@@Base+0x21b>
  403669:	movzx  eax,ax
  40366c:	movzx  edx,WORD PTR [rbp-0xa]
  403670:	add    edx,0x3
  403673:	movsxd rdx,edx
  403676:	add    rdx,rdx
  403679:	cmp    rax,rdx
  40367c:	jb     40369d <_start@@Base+0x55d>
  40367e:	movzx  eax,WORD PTR [rbp-0xa]
  403682:	add    rax,0x2
  403686:	lea    rdx,[rax+rax*1]
  40368a:	mov    rax,QWORD PTR [rbp-0x8]
  40368e:	add    rax,rdx
  403691:	mov    rdi,rax
  403694:	call   40335b <_start@@Base+0x21b>
  403699:	mov    WORD PTR [rbp-0xc],ax
  40369d:	cmp    WORD PTR [rbp-0xc],0x0
  4036a2:	je     4036b9 <_start@@Base+0x579>
  4036a4:	movzx  edx,WORD PTR [rbp-0xc]
  4036a8:	mov    rax,QWORD PTR [rbp-0x18]
  4036ac:	add    rax,rdx
  4036af:	mov    rdi,rax
  4036b2:	call   403264 <_start@@Base+0x124>
  4036b7:	jmp    4036be <_start@@Base+0x57e>
  4036b9:	mov    eax,0x0
  4036be:	leave  
  4036bf:	ret    
  4036c0:	push   rbp
  4036c1:	mov    rbp,rsp
  4036c4:	sub    rsp,0x30
  4036c8:	mov    QWORD PTR [rbp-0x28],rdi
  4036cc:	mov    WORD PTR [rbp-0x14],0x0
  4036d2:	cmp    QWORD PTR [rbp-0x28],0x0
  4036d7:	jne    4036f8 <_start@@Base+0x5b8>
  4036d9:	lea    rcx,[rip+0x7d88]        # 40b468 <_IO_stdin_used@@Base+0x468>
  4036e0:	mov    edx,0x2b
  4036e5:	lea    rsi,[rip+0x79e4]        # 40b0d0 <_IO_stdin_used@@Base+0xd0>
  4036ec:	lea    rdi,[rip+0x7a55]        # 40b148 <_IO_stdin_used@@Base+0x148>
  4036f3:	call   403090 <__assert_fail@plt>
  4036f8:	mov    WORD PTR [rbp-0x12],0x2
  4036fe:	mov    rax,QWORD PTR [rbp-0x28]
  403702:	mov    rdi,rax
  403705:	call   403330 <_start@@Base+0x1f0>
  40370a:	cdqe   
  40370c:	neg    rax
  40370f:	mov    rdx,rax
  403712:	mov    rax,QWORD PTR [rbp-0x28]
  403716:	add    rax,rdx
  403719:	mov    QWORD PTR [rbp-0x10],rax
  40371d:	mov    rax,QWORD PTR [rbp-0x10]
  403721:	mov    rdi,rax
  403724:	call   40335b <_start@@Base+0x21b>
  403729:	movzx  eax,ax
  40372c:	movzx  edx,WORD PTR [rbp-0x12]
  403730:	add    edx,0x3
  403733:	movsxd rdx,edx
  403736:	add    rdx,rdx
  403739:	cmp    rax,rdx
  40373c:	jb     40375d <_start@@Base+0x61d>
  40373e:	movzx  eax,WORD PTR [rbp-0x12]
  403742:	add    rax,0x2
  403746:	lea    rdx,[rax+rax*1]
  40374a:	mov    rax,QWORD PTR [rbp-0x10]
  40374e:	add    rax,rdx
  403751:	mov    rdi,rax
  403754:	call   40335b <_start@@Base+0x21b>
  403759:	mov    WORD PTR [rbp-0x14],ax
  40375d:	cmp    WORD PTR [rbp-0x14],0x0
  403762:	je     40378e <_start@@Base+0x64e>
  403764:	movzx  edx,WORD PTR [rbp-0x14]
  403768:	mov    rax,QWORD PTR [rbp-0x28]
  40376c:	add    rax,rdx
  40376f:	mov    QWORD PTR [rbp-0x8],rax
  403773:	mov    rax,QWORD PTR [rbp-0x8]
  403777:	mov    rdi,rax
  40377a:	call   403309 <_start@@Base+0x1c9>
  40377f:	mov    eax,eax
  403781:	lea    rdx,[rax+0x4]
  403785:	mov    rax,QWORD PTR [rbp-0x8]
  403789:	add    rax,rdx
  40378c:	jmp    403793 <_start@@Base+0x653>
  40378e:	mov    eax,0x0
  403793:	leave  
  403794:	ret    
  403795:	push   rbp
  403796:	mov    rbp,rsp
  403799:	mov    QWORD PTR [rbp-0x8],rdi
  40379d:	mov    rax,QWORD PTR [rbp-0x8]
  4037a1:	mov    rax,QWORD PTR [rax+0x30]
  4037a5:	pop    rbp
  4037a6:	ret    
  4037a7:	push   rbp
  4037a8:	mov    rbp,rsp
  4037ab:	mov    QWORD PTR [rbp-0x8],rdi
  4037af:	mov    QWORD PTR [rbp-0x10],rsi
  4037b3:	mov    rax,QWORD PTR [rbp-0x8]
  4037b7:	mov    rdx,QWORD PTR [rax]
  4037ba:	mov    rax,QWORD PTR [rbp-0x8]
  4037be:	mov    rax,QWORD PTR [rax+0x8]
  4037c2:	cmp    rdx,rax
  4037c5:	jne    4037e7 <_start@@Base+0x6a7>
  4037c7:	cmp    QWORD PTR [rbp-0x10],0x0
  4037cc:	je     4037dd <_start@@Base+0x69d>
  4037ce:	mov    rax,QWORD PTR [rbp-0x8]
  4037d2:	mov    rdx,QWORD PTR [rax+0x30]
  4037d6:	mov    rax,QWORD PTR [rbp-0x10]
  4037da:	mov    QWORD PTR [rax],rdx
  4037dd:	mov    rax,QWORD PTR [rbp-0x8]
  4037e1:	mov    rax,QWORD PTR [rax+0x10]
  4037e5:	jmp    4037fe <_start@@Base+0x6be>
  4037e7:	cmp    QWORD PTR [rbp-0x10],0x0
  4037ec:	je     4037f9 <_start@@Base+0x6b9>
  4037ee:	mov    rax,QWORD PTR [rbp-0x10]
  4037f2:	mov    QWORD PTR [rax],0x0
  4037f9:	mov    eax,0x0
  4037fe:	pop    rbp
  4037ff:	ret    
  403800:	push   rbp
  403801:	mov    rbp,rsp
  403804:	sub    rsp,0x10
  403808:	mov    QWORD PTR [rbp-0x8],rdi
  40380c:	mov    eax,esi
  40380e:	mov    BYTE PTR [rbp-0xc],al
  403811:	movzx  eax,BYTE PTR [rbp-0xc]
  403815:	mov    edi,eax
  403817:	call   403255 <_start@@Base+0x115>
  40381c:	mov    edx,eax
  40381e:	mov    rax,QWORD PTR [rbp-0x8]
  403822:	mov    BYTE PTR [rax],dl
  403824:	mov    rax,QWORD PTR [rbp-0x8]
  403828:	leave  
  403829:	ret    
  40382a:	push   rbp
  40382b:	mov    rbp,rsp
  40382e:	sub    rsp,0x10
  403832:	mov    QWORD PTR [rbp-0x8],rdi
  403836:	mov    QWORD PTR [rbp-0x10],rsi
  40383a:	mov    rax,QWORD PTR [rbp-0x10]
  40383e:	mov    rdi,rax
  403841:	call   403291 <_start@@Base+0x151>
  403846:	mov    rdx,rax
  403849:	mov    rax,QWORD PTR [rbp-0x8]
  40384d:	mov    QWORD PTR [rax],rdx
  403850:	mov    rax,QWORD PTR [rbp-0x8]
  403854:	leave  
  403855:	ret    
  403856:	push   rbp
  403857:	mov    rbp,rsp
  40385a:	sub    rsp,0x20
  40385e:	mov    QWORD PTR [rbp-0x8],rdi
  403862:	mov    QWORD PTR [rbp-0x10],rsi
  403866:	mov    QWORD PTR [rbp-0x18],rdx
  40386a:	mov    rdx,QWORD PTR [rbp-0x18]
  40386e:	mov    rsi,QWORD PTR [rbp-0x10]
  403872:	mov    rax,QWORD PTR [rbp-0x8]
  403876:	mov    r9d,0x3fffffff
  40387c:	mov    r8d,0x4
  403882:	mov    ecx,0x4
  403887:	mov    rdi,rax
  40388a:	call   407d2d <flatcc_builder_create_vector@@Base>
  40388f:	leave  
  403890:	ret    
  403891:	push   rbp
  403892:	mov    rbp,rsp
  403895:	sub    rsp,0x10
  403899:	mov    QWORD PTR [rbp-0x8],rdi
  40389d:	mov    QWORD PTR [rbp-0x10],rsi
  4038a1:	mov    rsi,QWORD PTR [rbp-0x10]
  4038a5:	mov    rax,QWORD PTR [rbp-0x8]
  4038a9:	mov    ecx,0x0
  4038ae:	mov    edx,0x0
  4038b3:	mov    rdi,rax
  4038b6:	call   4062bd <flatcc_builder_start_buffer@@Base>
  4038bb:	leave  
  4038bc:	ret    
  4038bd:	push   rbp
  4038be:	mov    rbp,rsp
  4038c1:	sub    rsp,0x10
  4038c5:	mov    QWORD PTR [rbp-0x8],rdi
  4038c9:	mov    DWORD PTR [rbp-0xc],esi
  4038cc:	mov    edx,DWORD PTR [rbp-0xc]
  4038cf:	mov    rax,QWORD PTR [rbp-0x8]
  4038d3:	mov    esi,edx
  4038d5:	mov    rdi,rax
  4038d8:	call   406406 <flatcc_builder_end_buffer@@Base>
  4038dd:	leave  
  4038de:	ret    
  4038df:	push   rbp
  4038e0:	mov    rbp,rsp
  4038e3:	sub    rsp,0x10
  4038e7:	mov    QWORD PTR [rbp-0x8],rdi
  4038eb:	mov    rax,QWORD PTR [rbp-0x8]
  4038ef:	mov    esi,0x3
  4038f4:	mov    rdi,rax
  4038f7:	call   407022 <flatcc_builder_start_table@@Base>
  4038fc:	leave  
  4038fd:	ret    
  4038fe:	push   rbp
  4038ff:	mov    rbp,rsp
  403902:	sub    rsp,0x10
  403906:	mov    QWORD PTR [rbp-0x8],rdi
  40390a:	mov    rax,QWORD PTR [rbp-0x8]
  40390e:	mov    edx,0x0
  403913:	lea    rsi,[rip+0x7854]        # 40b16e <_IO_stdin_used@@Base+0x16e>
  40391a:	mov    rdi,rax
  40391d:	call   407a79 <flatcc_builder_check_required@@Base>
  403922:	test   eax,eax
  403924:	jne    403945 <_start@@Base+0x805>
  403926:	lea    rcx,[rip+0x7afb]        # 40b428 <_IO_stdin_used@@Base+0x428>
  40392d:	mov    edx,0x15
  403932:	lea    rsi,[rip+0x7837]        # 40b170 <_IO_stdin_used@@Base+0x170>
  403939:	lea    rdi,[rip+0x78a8]        # 40b1e8 <_IO_stdin_used@@Base+0x1e8>
  403940:	call   403090 <__assert_fail@plt>
  403945:	mov    rax,QWORD PTR [rbp-0x8]
  403949:	mov    rdi,rax
  40394c:	call   407b24 <flatcc_builder_end_table@@Base>
  403951:	leave  
  403952:	ret    
  403953:	push   rbp
  403954:	mov    rbp,rsp
  403957:	sub    rsp,0x20
  40395b:	mov    QWORD PTR [rbp-0x18],rdi
  40395f:	mov    QWORD PTR [rbp-0x20],rsi
  403963:	cmp    QWORD PTR [rbp-0x20],0x0
  403968:	jne    403971 <_start@@Base+0x831>
  40396a:	mov    eax,0x0
  40396f:	jmp    4039b6 <_start@@Base+0x876>
  403971:	mov    rax,QWORD PTR [rbp-0x18]
  403975:	mov    ecx,0x8
  40397a:	mov    edx,0x8
  40397f:	mov    esi,0x0
  403984:	mov    rdi,rax
  403987:	call   409186 <flatcc_builder_table_add@@Base>
  40398c:	mov    QWORD PTR [rbp-0x8],rax
  403990:	cmp    QWORD PTR [rbp-0x8],0x0
  403995:	jne    40399e <_start@@Base+0x85e>
  403997:	mov    eax,0xffffffff
  40399c:	jmp    4039b6 <_start@@Base+0x876>
  40399e:	mov    rdx,QWORD PTR [rbp-0x20]
  4039a2:	mov    rax,QWORD PTR [rbp-0x8]
  4039a6:	mov    rsi,rdx
  4039a9:	mov    rdi,rax
  4039ac:	call   40382a <_start@@Base+0x6ea>
  4039b1:	mov    eax,0x0
  4039b6:	leave  
  4039b7:	ret    
  4039b8:	push   rbp
  4039b9:	mov    rbp,rsp
  4039bc:	sub    rsp,0x20
  4039c0:	mov    QWORD PTR [rbp-0x18],rdi
  4039c4:	mov    eax,esi
  4039c6:	mov    BYTE PTR [rbp-0x1c],al
  4039c9:	cmp    BYTE PTR [rbp-0x1c],0x0
  4039cd:	jne    4039d6 <_start@@Base+0x896>
  4039cf:	mov    eax,0x0
  4039d4:	jmp    403a1a <_start@@Base+0x8da>
  4039d6:	mov    rax,QWORD PTR [rbp-0x18]
  4039da:	mov    ecx,0x1
  4039df:	mov    edx,0x1
  4039e4:	mov    esi,0x1
  4039e9:	mov    rdi,rax
  4039ec:	call   409186 <flatcc_builder_table_add@@Base>
  4039f1:	mov    QWORD PTR [rbp-0x8],rax
  4039f5:	cmp    QWORD PTR [rbp-0x8],0x0
  4039fa:	jne    403a03 <_start@@Base+0x8c3>
  4039fc:	mov    eax,0xffffffff
  403a01:	jmp    403a1a <_start@@Base+0x8da>
  403a03:	movzx  edx,BYTE PTR [rbp-0x1c]
  403a07:	mov    rax,QWORD PTR [rbp-0x8]
  403a0b:	mov    esi,edx
  403a0d:	mov    rdi,rax
  403a10:	call   403800 <_start@@Base+0x6c0>
  403a15:	mov    eax,0x0
  403a1a:	leave  
  403a1b:	ret    
  403a1c:	push   rbp
  403a1d:	mov    rbp,rsp
  403a20:	sub    rsp,0x20
  403a24:	mov    QWORD PTR [rbp-0x18],rdi
  403a28:	mov    DWORD PTR [rbp-0x1c],esi
  403a2b:	cmp    DWORD PTR [rbp-0x1c],0x0
  403a2f:	je     403a5d <_start@@Base+0x91d>
  403a31:	mov    rax,QWORD PTR [rbp-0x18]
  403a35:	mov    esi,0x2
  403a3a:	mov    rdi,rax
  403a3d:	call   409354 <flatcc_builder_table_add_offset@@Base>
  403a42:	mov    QWORD PTR [rbp-0x8],rax
  403a46:	cmp    QWORD PTR [rbp-0x8],0x0
  403a4b:	je     403a5d <_start@@Base+0x91d>
  403a4d:	mov    rax,QWORD PTR [rbp-0x8]
  403a51:	mov    edx,DWORD PTR [rbp-0x1c]
  403a54:	mov    DWORD PTR [rax],edx
  403a56:	mov    eax,0x0
  403a5b:	jmp    403a62 <_start@@Base+0x922>
  403a5d:	mov    eax,0xffffffff
  403a62:	leave  
  403a63:	ret    
  403a64:	push   rbp
  403a65:	mov    rbp,rsp
  403a68:	sub    rsp,0x20
  403a6c:	mov    QWORD PTR [rbp-0x8],rdi
  403a70:	mov    QWORD PTR [rbp-0x10],rsi
  403a74:	mov    eax,edx
  403a76:	mov    DWORD PTR [rbp-0x18],ecx
  403a79:	mov    BYTE PTR [rbp-0x14],al
  403a7c:	mov    rax,QWORD PTR [rbp-0x8]
  403a80:	mov    rdi,rax
  403a83:	call   4038df <_start@@Base+0x79f>
  403a88:	test   eax,eax
  403a8a:	jne    403ace <_start@@Base+0x98e>
  403a8c:	mov    rdx,QWORD PTR [rbp-0x10]
  403a90:	mov    rax,QWORD PTR [rbp-0x8]
  403a94:	mov    rsi,rdx
  403a97:	mov    rdi,rax
  403a9a:	call   403953 <_start@@Base+0x813>
  403a9f:	test   eax,eax
  403aa1:	jne    403ace <_start@@Base+0x98e>
  403aa3:	mov    edx,DWORD PTR [rbp-0x18]
  403aa6:	mov    rax,QWORD PTR [rbp-0x8]
  403aaa:	mov    esi,edx
  403aac:	mov    rdi,rax
  403aaf:	call   403a1c <_start@@Base+0x8dc>
  403ab4:	test   eax,eax
  403ab6:	jne    403ace <_start@@Base+0x98e>
  403ab8:	movzx  edx,BYTE PTR [rbp-0x14]
  403abc:	mov    rax,QWORD PTR [rbp-0x8]
  403ac0:	mov    esi,edx
  403ac2:	mov    rdi,rax
  403ac5:	call   4039b8 <_start@@Base+0x878>
  403aca:	test   eax,eax
  403acc:	je     403ad5 <_start@@Base+0x995>
  403ace:	mov    eax,0x0
  403ad3:	jmp    403ae1 <_start@@Base+0x9a1>
  403ad5:	mov    rax,QWORD PTR [rbp-0x8]
  403ad9:	mov    rdi,rax
  403adc:	call   4038fe <_start@@Base+0x7be>
  403ae1:	leave  
  403ae2:	ret    
  403ae3:	push   rbp
  403ae4:	mov    rbp,rsp
  403ae7:	sub    rsp,0x20
  403aeb:	mov    QWORD PTR [rbp-0x8],rdi
  403aef:	mov    QWORD PTR [rbp-0x10],rsi
  403af3:	mov    eax,edx
  403af5:	mov    DWORD PTR [rbp-0x18],ecx
  403af8:	mov    BYTE PTR [rbp-0x14],al
  403afb:	mov    rax,QWORD PTR [rbp-0x8]
  403aff:	mov    esi,0x0
  403b04:	mov    rdi,rax
  403b07:	call   403891 <_start@@Base+0x751>
  403b0c:	test   eax,eax
  403b0e:	je     403b17 <_start@@Base+0x9d7>
  403b10:	mov    eax,0x0
  403b15:	jmp    403b3e <_start@@Base+0x9fe>
  403b17:	movzx  edx,BYTE PTR [rbp-0x14]
  403b1b:	mov    ecx,DWORD PTR [rbp-0x18]
  403b1e:	mov    rsi,QWORD PTR [rbp-0x10]
  403b22:	mov    rax,QWORD PTR [rbp-0x8]
  403b26:	mov    rdi,rax
  403b29:	call   403a64 <_start@@Base+0x924>
  403b2e:	mov    edx,eax
  403b30:	mov    rax,QWORD PTR [rbp-0x8]
  403b34:	mov    esi,edx
  403b36:	mov    rdi,rax
  403b39:	call   4038bd <_start@@Base+0x77d>
  403b3e:	leave  
  403b3f:	ret    
  403b40:	push   rbp
  403b41:	mov    rbp,rsp
  403b44:	sub    rsp,0x50
  403b48:	mov    QWORD PTR [rbp-0x38],rdi
  403b4c:	mov    QWORD PTR [rbp-0x40],rsi
  403b50:	mov    QWORD PTR [rbp-0x48],rdx
  403b54:	mov    QWORD PTR [rbp-0x50],rcx
  403b58:	mov    rax,QWORD PTR fs:0x28
  403b61:	mov    QWORD PTR [rbp-0x8],rax
  403b65:	xor    eax,eax
  403b67:	mov    rax,QWORD PTR [rbp-0x40]
  403b6b:	mov    QWORD PTR [rbp-0x28],rax
  403b6f:	cmp    QWORD PTR [rbp-0x38],0x0
  403b74:	je     403b92 <_start@@Base+0xa52>
  403b76:	mov    rdx,QWORD PTR [rbp-0x38]
  403b7a:	mov    rax,QWORD PTR [rbp-0x50]
  403b7e:	lea    rsi,[rip+0x76cf]        # 40b254 <_IO_stdin_used@@Base+0x254>
  403b85:	mov    rdi,rax
  403b88:	mov    eax,0x0
  403b8d:	call   4030e0 <fprintf@plt>
  403b92:	mov    DWORD PTR [rbp-0x2c],0x0
  403b99:	jmp    403c8a <_start@@Base+0xb4a>
  403b9e:	mov    eax,DWORD PTR [rbp-0x2c]
  403ba1:	and    eax,0xf
  403ba4:	test   eax,eax
  403ba6:	jne    403be7 <_start@@Base+0xaa7>
  403ba8:	cmp    DWORD PTR [rbp-0x2c],0x0
  403bac:	je     403bca <_start@@Base+0xa8a>
  403bae:	lea    rdx,[rbp-0x20]
  403bb2:	mov    rax,QWORD PTR [rbp-0x50]
  403bb6:	lea    rsi,[rip+0x769c]        # 40b259 <_IO_stdin_used@@Base+0x259>
  403bbd:	mov    rdi,rax
  403bc0:	mov    eax,0x0
  403bc5:	call   4030e0 <fprintf@plt>
  403bca:	mov    edx,DWORD PTR [rbp-0x2c]
  403bcd:	mov    rax,QWORD PTR [rbp-0x50]
  403bd1:	lea    rsi,[rip+0x7687]        # 40b25f <_IO_stdin_used@@Base+0x25f>
  403bd8:	mov    rdi,rax
  403bdb:	mov    eax,0x0
  403be0:	call   4030e0 <fprintf@plt>
  403be5:	jmp    403c02 <_start@@Base+0xac2>
  403be7:	mov    eax,DWORD PTR [rbp-0x2c]
  403bea:	and    eax,0x7
  403bed:	test   eax,eax
  403bef:	jne    403c02 <_start@@Base+0xac2>
  403bf1:	mov    rax,QWORD PTR [rbp-0x50]
  403bf5:	mov    rsi,rax
  403bf8:	mov    edi,0x20
  403bfd:	call   4030b0 <fputc@plt>
  403c02:	mov    edx,DWORD PTR [rbp-0x2c]
  403c05:	mov    rax,QWORD PTR [rbp-0x28]
  403c09:	add    rax,rdx
  403c0c:	movzx  eax,BYTE PTR [rax]
  403c0f:	movzx  edx,al
  403c12:	mov    rax,QWORD PTR [rbp-0x50]
  403c16:	lea    rsi,[rip+0x764a]        # 40b267 <_IO_stdin_used@@Base+0x267>
  403c1d:	mov    rdi,rax
  403c20:	mov    eax,0x0
  403c25:	call   4030e0 <fprintf@plt>
  403c2a:	mov    edx,DWORD PTR [rbp-0x2c]
  403c2d:	mov    rax,QWORD PTR [rbp-0x28]
  403c31:	add    rax,rdx
  403c34:	movzx  eax,BYTE PTR [rax]
  403c37:	cmp    al,0x1f
  403c39:	jbe    403c4c <_start@@Base+0xb0c>
  403c3b:	mov    edx,DWORD PTR [rbp-0x2c]
  403c3e:	mov    rax,QWORD PTR [rbp-0x28]
  403c42:	add    rax,rdx
  403c45:	movzx  eax,BYTE PTR [rax]
  403c48:	cmp    al,0x7e
  403c4a:	jbe    403c5b <_start@@Base+0xb1b>
  403c4c:	mov    eax,DWORD PTR [rbp-0x2c]
  403c4f:	and    eax,0xf
  403c52:	mov    eax,eax
  403c54:	mov    BYTE PTR [rbp+rax*1-0x20],0x2e
  403c59:	jmp    403c76 <_start@@Base+0xb36>
  403c5b:	mov    eax,DWORD PTR [rbp-0x2c]
  403c5e:	and    eax,0xf
  403c61:	mov    ecx,eax
  403c63:	mov    edx,DWORD PTR [rbp-0x2c]
  403c66:	mov    rax,QWORD PTR [rbp-0x28]
  403c6a:	add    rax,rdx
  403c6d:	movzx  eax,BYTE PTR [rax]
  403c70:	mov    edx,ecx
  403c72:	mov    BYTE PTR [rbp+rdx*1-0x20],al
  403c76:	mov    eax,DWORD PTR [rbp-0x2c]
  403c79:	and    eax,0xf
  403c7c:	add    eax,0x1
  403c7f:	mov    eax,eax
  403c81:	mov    BYTE PTR [rbp+rax*1-0x20],0x0
  403c86:	add    DWORD PTR [rbp-0x2c],0x1
  403c8a:	mov    rax,QWORD PTR [rbp-0x48]
  403c8e:	cmp    eax,DWORD PTR [rbp-0x2c]
  403c91:	ja     403b9e <_start@@Base+0xa5e>
  403c97:	jmp    403cba <_start@@Base+0xb7a>
  403c99:	mov    rax,QWORD PTR [rbp-0x50]
  403c9d:	mov    rcx,rax
  403ca0:	mov    edx,0x3
  403ca5:	mov    esi,0x1
  403caa:	lea    rdi,[rip+0x75bc]        # 40b26d <_IO_stdin_used@@Base+0x26d>
  403cb1:	call   403120 <fwrite@plt>
  403cb6:	add    DWORD PTR [rbp-0x2c],0x1
  403cba:	mov    eax,DWORD PTR [rbp-0x2c]
  403cbd:	and    eax,0xf
  403cc0:	test   eax,eax
  403cc2:	jne    403c99 <_start@@Base+0xb59>
  403cc4:	lea    rdx,[rbp-0x20]
  403cc8:	mov    rax,QWORD PTR [rbp-0x50]
  403ccc:	lea    rsi,[rip+0x7586]        # 40b259 <_IO_stdin_used@@Base+0x259>
  403cd3:	mov    rdi,rax
  403cd6:	mov    eax,0x0
  403cdb:	call   4030e0 <fprintf@plt>
  403ce0:	nop
  403ce1:	mov    rax,QWORD PTR [rbp-0x8]
  403ce5:	xor    rax,QWORD PTR fs:0x28
  403cee:	je     403cf5 <_start@@Base+0xbb5>
  403cf0:	call   403070 <__stack_chk_fail@plt>
  403cf5:	leave  
  403cf6:	ret    

0000000000403cf7 <dbg_emitter@@Base>:
  403cf7:	push   rbp
  403cf8:	mov    rbp,rsp
  403cfb:	sub    rsp,0x30
  403cff:	mov    QWORD PTR [rbp-0x18],rdi
  403d03:	mov    QWORD PTR [rbp-0x20],rsi
  403d07:	mov    DWORD PTR [rbp-0x24],edx
  403d0a:	mov    DWORD PTR [rbp-0x28],ecx
  403d0d:	mov    QWORD PTR [rbp-0x30],r8
  403d11:	mov    rcx,QWORD PTR [rbp-0x30]
  403d15:	mov    eax,DWORD PTR [rbp-0x28]
  403d18:	movsxd rdx,eax
  403d1b:	mov    eax,DWORD PTR [rbp-0x24]
  403d1e:	mov    esi,eax
  403d20:	lea    rdi,[rip+0x7551]        # 40b278 <_IO_stdin_used@@Base+0x278>
  403d27:	mov    eax,0x0
  403d2c:	call   403080 <printf@plt>
  403d31:	mov    DWORD PTR [rbp-0x4],0x0
  403d38:	jmp    403dfe <dbg_emitter@@Base+0x107>
  403d3d:	mov    eax,DWORD PTR [rbp-0x4]
  403d40:	cdqe   
  403d42:	shl    rax,0x4
  403d46:	mov    rdx,rax
  403d49:	mov    rax,QWORD PTR [rbp-0x20]
  403d4d:	add    rax,rdx
  403d50:	mov    rax,QWORD PTR [rax]
  403d53:	mov    rdx,0x40b4e0
  403d5a:	cmp    rax,rdx
  403d5d:	jne    403d92 <dbg_emitter@@Base+0x9b>
  403d5f:	mov    eax,DWORD PTR [rbp-0x4]
  403d62:	cdqe   
  403d64:	shl    rax,0x4
  403d68:	mov    rdx,rax
  403d6b:	mov    rax,QWORD PTR [rbp-0x20]
  403d6f:	add    rax,rdx
  403d72:	mov    rax,QWORD PTR [rax+0x8]
  403d76:	mov    rdx,rax
  403d79:	mov    eax,DWORD PTR [rbp-0x28]
  403d7c:	cdqe   
  403d7e:	mov    rsi,rax
  403d81:	lea    rdi,[rip+0x7528]        # 40b2b0 <_IO_stdin_used@@Base+0x2b0>
  403d88:	mov    eax,0x0
  403d8d:	call   403080 <printf@plt>
  403d92:	mov    eax,DWORD PTR [rbp-0x4]
  403d95:	cdqe   
  403d97:	shl    rax,0x4
  403d9b:	mov    rdx,rax
  403d9e:	mov    rax,QWORD PTR [rbp-0x20]
  403da2:	add    rax,rdx
  403da5:	mov    rax,QWORD PTR [rax]
  403da8:	test   rax,rax
  403dab:	jne    403de0 <dbg_emitter@@Base+0xe9>
  403dad:	mov    eax,DWORD PTR [rbp-0x4]
  403db0:	cdqe   
  403db2:	shl    rax,0x4
  403db6:	mov    rdx,rax
  403db9:	mov    rax,QWORD PTR [rbp-0x20]
  403dbd:	add    rax,rdx
  403dc0:	mov    rax,QWORD PTR [rax+0x8]
  403dc4:	mov    rdx,rax
  403dc7:	mov    eax,DWORD PTR [rbp-0x28]
  403dca:	cdqe   
  403dcc:	mov    rsi,rax
  403dcf:	lea    rdi,[rip+0x7502]        # 40b2d8 <_IO_stdin_used@@Base+0x2d8>
  403dd6:	mov    eax,0x0
  403ddb:	call   403080 <printf@plt>
  403de0:	mov    eax,DWORD PTR [rbp-0x4]
  403de3:	cdqe   
  403de5:	shl    rax,0x4
  403de9:	mov    rdx,rax
  403dec:	mov    rax,QWORD PTR [rbp-0x20]
  403df0:	add    rax,rdx
  403df3:	mov    rax,QWORD PTR [rax+0x8]
  403df7:	add    DWORD PTR [rbp-0x28],eax
  403dfa:	add    DWORD PTR [rbp-0x4],0x1
  403dfe:	mov    eax,DWORD PTR [rbp-0x4]
  403e01:	cmp    eax,DWORD PTR [rbp-0x24]
  403e04:	jl     403d3d <dbg_emitter@@Base+0x46>
  403e0a:	mov    eax,0x0
  403e0f:	leave  
  403e10:	ret    

0000000000403e11 <debug_test@@Base>:
  403e11:	push   rbp
  403e12:	mov    rbp,rsp
  403e15:	sub    rsp,0x1d0
  403e1c:	mov    rax,QWORD PTR fs:0x28
  403e25:	mov    QWORD PTR [rbp-0x8],rax
  403e29:	xor    eax,eax
  403e2b:	mov    QWORD PTR [rbp-0x1c0],0x0
  403e36:	mov    QWORD PTR [rbp-0x1b8],0x0
  403e41:	mov    QWORD PTR [rbp-0x1b0],0x0
  403e4c:	mov    QWORD PTR [rbp-0x1a8],0x0
  403e57:	mov    QWORD PTR [rbp-0x1a0],0x0
  403e62:	lea    rax,[rbp-0x190]
  403e69:	mov    QWORD PTR [rbp-0x1c8],rax
  403e70:	lea    rdi,[rip+0x7491]        # 40b308 <_IO_stdin_used@@Base+0x308>
  403e77:	call   403050 <puts@plt>
  403e7c:	mov    rax,QWORD PTR [rbp-0x1c8]
  403e83:	mov    r8d,0x0
  403e89:	mov    ecx,0x0
  403e8e:	mov    edx,0x0
  403e93:	mov    rsi,0x403cf7
  403e9a:	mov    rdi,rax
  403e9d:	call   404d3a <flatcc_builder_custom_init@@Base>
  403ea2:	lea    rcx,[rbp-0x1c0]
  403ea9:	mov    rax,QWORD PTR [rbp-0x1c8]
  403eb0:	mov    edx,0xa
  403eb5:	mov    rsi,rcx
  403eb8:	mov    rdi,rax
  403ebb:	call   403856 <_start@@Base+0x716>
  403ec0:	mov    edx,eax
  403ec2:	mov    rax,QWORD PTR [rbp-0x1c8]
  403ec9:	mov    ecx,edx
  403ecb:	mov    edx,0x1
  403ed0:	mov    esi,0x2a
  403ed5:	mov    rdi,rax
  403ed8:	call   403ae3 <_start@@Base+0x9a3>
  403edd:	mov    rax,QWORD PTR [rbp-0x1c8]
  403ee4:	mov    rdi,rax
  403ee7:	call   405047 <flatcc_builder_clear@@Base>
  403eec:	mov    eax,0x0
  403ef1:	mov    rcx,QWORD PTR [rbp-0x8]
  403ef5:	xor    rcx,QWORD PTR fs:0x28
  403efe:	je     403f05 <debug_test@@Base+0xf4>
  403f00:	call   403070 <__stack_chk_fail@plt>
  403f05:	leave  
  403f06:	ret    

0000000000403f07 <emit_test@@Base>:
  403f07:	push   rbp
  403f08:	mov    rbp,rsp
  403f0b:	sub    rsp,0x230
  403f12:	mov    rax,QWORD PTR fs:0x28
  403f1b:	mov    QWORD PTR [rbp-0x8],rax
  403f1f:	xor    eax,eax
  403f21:	mov    rax,QWORD PTR [rip+0x74c0]        # 40b3e8 <_IO_stdin_used@@Base+0x3e8>
  403f28:	mov    QWORD PTR [rbp-0x50],rax
  403f2c:	mov    rax,QWORD PTR [rip+0x74bd]        # 40b3f0 <_IO_stdin_used@@Base+0x3f0>
  403f33:	mov    QWORD PTR [rbp-0x48],rax
  403f37:	mov    rax,QWORD PTR [rip+0x74ba]        # 40b3f8 <_IO_stdin_used@@Base+0x3f8>
  403f3e:	mov    QWORD PTR [rbp-0x40],rax
  403f42:	mov    rax,QWORD PTR [rip+0x74b7]        # 40b400 <_IO_stdin_used@@Base+0x400>
  403f49:	mov    QWORD PTR [rbp-0x38],rax
  403f4d:	mov    rax,QWORD PTR [rip+0x74b4]        # 40b408 <_IO_stdin_used@@Base+0x408>
  403f54:	mov    QWORD PTR [rbp-0x30],rax
  403f58:	mov    rax,QWORD PTR [rip+0x74b1]        # 40b410 <_IO_stdin_used@@Base+0x410>
  403f5f:	mov    QWORD PTR [rbp-0x28],rax
  403f63:	mov    rax,QWORD PTR [rip+0x74ae]        # 40b418 <_IO_stdin_used@@Base+0x418>
  403f6a:	mov    QWORD PTR [rbp-0x20],rax
  403f6e:	movzx  eax,WORD PTR [rip+0x74ab]        # 40b420 <_IO_stdin_used@@Base+0x420>
  403f75:	mov    WORD PTR [rbp-0x18],ax
  403f79:	movzx  eax,BYTE PTR [rip+0x74a2]        # 40b422 <_IO_stdin_used@@Base+0x422>
  403f80:	mov    BYTE PTR [rbp-0x16],al
  403f83:	vmovss xmm0,DWORD PTR [rip+0x7511]        # 40b49c <_IO_stdin_used@@Base+0x49c>
  403f8b:	vmovss DWORD PTR [rbp-0x1f0],xmm0
  403f93:	vmovss xmm0,DWORD PTR [rip+0x7505]        # 40b4a0 <_IO_stdin_used@@Base+0x4a0>
  403f9b:	vmovss DWORD PTR [rbp-0x1ec],xmm0
  403fa3:	vmovss xmm0,DWORD PTR [rip+0x74f9]        # 40b4a4 <_IO_stdin_used@@Base+0x4a4>
  403fab:	vmovss DWORD PTR [rbp-0x1e8],xmm0
  403fb3:	vmovss xmm0,DWORD PTR [rip+0x74ed]        # 40b4a8 <_IO_stdin_used@@Base+0x4a8>
  403fbb:	vmovss DWORD PTR [rbp-0x1e4],xmm0
  403fc3:	lea    rax,[rbp-0x1e0]
  403fca:	mov    QWORD PTR [rbp-0x218],rax
  403fd1:	mov    rax,QWORD PTR [rbp-0x218]
  403fd8:	mov    rdi,rax
  403fdb:	call   404de3 <flatcc_builder_init@@Base>
  403fe0:	mov    rax,QWORD PTR [rbp-0x218]
  403fe7:	mov    rdi,rax
  403fea:	call   4098fc <flatcc_builder_get_emit_context@@Base>
  403fef:	mov    QWORD PTR [rbp-0x210],rax
  403ff6:	lea    rcx,[rbp-0x1f0]
  403ffd:	mov    rax,QWORD PTR [rbp-0x218]
  404004:	mov    edx,0x4
  404009:	mov    rsi,rcx
  40400c:	mov    rdi,rax
  40400f:	call   403856 <_start@@Base+0x716>
  404014:	mov    DWORD PTR [rbp-0x224],eax
  40401a:	mov    edx,DWORD PTR [rbp-0x224]
  404020:	mov    rax,QWORD PTR [rbp-0x218]
  404027:	mov    ecx,edx
  404029:	mov    edx,0x1
  40402e:	mov    esi,0x2a
  404033:	mov    rdi,rax
  404036:	call   403ae3 <_start@@Base+0x9a3>
  40403b:	lea    rdx,[rbp-0x220]
  404042:	mov    rax,QWORD PTR [rbp-0x210]
  404049:	mov    rsi,rdx
  40404c:	mov    rdi,rax
  40404f:	call   4037a7 <_start@@Base+0x667>
  404054:	mov    QWORD PTR [rbp-0x208],rax
  40405b:	cmp    QWORD PTR [rbp-0x208],0x0
  404063:	jne    40406f <emit_test@@Base+0x168>
  404065:	mov    eax,0xffffffff
  40406a:	jmp    4042f5 <emit_test@@Base+0x3ee>
  40406f:	mov    rax,QWORD PTR [rbp-0x210]
  404076:	mov    rdi,rax
  404079:	call   403795 <_start@@Base+0x655>
  40407e:	mov    rdx,rax
  404081:	mov    rax,QWORD PTR [rbp-0x220]
  404088:	cmp    rdx,rax
  40408b:	je     4040ac <emit_test@@Base+0x1a5>
  40408d:	lea    rcx,[rip+0x73a4]        # 40b438 <_IO_stdin_used@@Base+0x438>
  404094:	mov    edx,0x64
  404099:	lea    rsi,[rip+0x72c0]        # 40b360 <_IO_stdin_used@@Base+0x360>
  4040a0:	lea    rdi,[rip+0x731e]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  4040a7:	call   403090 <__assert_fail@plt>
  4040ac:	mov    rax,QWORD PTR [rbp-0x218]
  4040b3:	mov    rdi,rax
  4040b6:	call   409538 <flatcc_builder_get_buffer_size@@Base>
  4040bb:	mov    rdx,rax
  4040be:	mov    rax,QWORD PTR [rbp-0x220]
  4040c5:	cmp    rdx,rax
  4040c8:	je     4040e9 <emit_test@@Base+0x1e2>
  4040ca:	lea    rcx,[rip+0x7367]        # 40b438 <_IO_stdin_used@@Base+0x438>
  4040d1:	mov    edx,0x65
  4040d6:	lea    rsi,[rip+0x7283]        # 40b360 <_IO_stdin_used@@Base+0x360>
  4040dd:	lea    rdi,[rip+0x72e1]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  4040e4:	call   403090 <__assert_fail@plt>
  4040e9:	mov    rax,QWORD PTR [rbp-0x220]
  4040f0:	mov    edx,eax
  4040f2:	mov    rax,QWORD PTR [rip+0xbeff]        # 40fff8 <stderr@GLIBC_2.2.5>
  4040f9:	mov    rax,QWORD PTR [rax]
  4040fc:	lea    rsi,[rip+0x72c4]        # 40b3c7 <_IO_stdin_used@@Base+0x3c7>
  404103:	mov    rdi,rax
  404106:	mov    eax,0x0
  40410b:	call   4030e0 <fprintf@plt>
  404110:	mov    rax,QWORD PTR [rip+0xbee1]        # 40fff8 <stderr@GLIBC_2.2.5>
  404117:	mov    rcx,QWORD PTR [rax]
  40411a:	mov    rdx,QWORD PTR [rbp-0x220]
  404121:	mov    rax,QWORD PTR [rbp-0x208]
  404128:	mov    rsi,rax
  40412b:	lea    rdi,[rip+0x72a6]        # 40b3d8 <_IO_stdin_used@@Base+0x3d8>
  404132:	call   403b40 <_start@@Base+0xa00>
  404137:	mov    rax,QWORD PTR [rbp-0x220]
  40413e:	cmp    rax,0x3a
  404142:	je     404163 <emit_test@@Base+0x25c>
  404144:	lea    rcx,[rip+0x72ed]        # 40b438 <_IO_stdin_used@@Base+0x438>
  40414b:	mov    edx,0x6a
  404150:	lea    rsi,[rip+0x7209]        # 40b360 <_IO_stdin_used@@Base+0x360>
  404157:	lea    rdi,[rip+0x7267]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  40415e:	call   403090 <__assert_fail@plt>
  404163:	mov    rax,QWORD PTR [rbp-0x220]
  40416a:	cmp    rax,0x3a
  40416e:	je     40418f <emit_test@@Base+0x288>
  404170:	lea    rcx,[rip+0x72c1]        # 40b438 <_IO_stdin_used@@Base+0x438>
  404177:	mov    edx,0x6b
  40417c:	lea    rsi,[rip+0x71dd]        # 40b360 <_IO_stdin_used@@Base+0x360>
  404183:	lea    rdi,[rip+0x723b]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  40418a:	call   403090 <__assert_fail@plt>
  40418f:	mov    rdx,QWORD PTR [rbp-0x220]
  404196:	lea    rcx,[rbp-0x50]
  40419a:	mov    rax,QWORD PTR [rbp-0x208]
  4041a1:	mov    rsi,rcx
  4041a4:	mov    rdi,rax
  4041a7:	call   4030d0 <memcmp@plt>
  4041ac:	test   eax,eax
  4041ae:	je     4041cf <emit_test@@Base+0x2c8>
  4041b0:	lea    rcx,[rip+0x7281]        # 40b438 <_IO_stdin_used@@Base+0x438>
  4041b7:	mov    edx,0x6c
  4041bc:	lea    rsi,[rip+0x719d]        # 40b360 <_IO_stdin_used@@Base+0x360>
  4041c3:	lea    rdi,[rip+0x71fb]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  4041ca:	call   403090 <__assert_fail@plt>
  4041cf:	mov    rax,QWORD PTR [rbp-0x208]
  4041d6:	mov    rdi,rax
  4041d9:	call   4034f0 <_start@@Base+0x3b0>
  4041de:	mov    QWORD PTR [rbp-0x200],rax
  4041e5:	mov    rax,QWORD PTR [rbp-0x200]
  4041ec:	mov    rdi,rax
  4041ef:	call   403540 <_start@@Base+0x400>
  4041f4:	mov    QWORD PTR [rbp-0x1f8],rax
  4041fb:	cmp    QWORD PTR [rbp-0x1f8],0x2a
  404203:	je     404224 <emit_test@@Base+0x31d>
  404205:	lea    rcx,[rip+0x722c]        # 40b438 <_IO_stdin_used@@Base+0x438>
  40420c:	mov    edx,0x70
  404211:	lea    rsi,[rip+0x7148]        # 40b360 <_IO_stdin_used@@Base+0x360>
  404218:	lea    rdi,[rip+0x71a6]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  40421f:	call   403090 <__assert_fail@plt>
  404224:	mov    rax,QWORD PTR [rbp-0x200]
  40422b:	mov    rdi,rax
  40422e:	call   403600 <_start@@Base+0x4c0>
  404233:	cmp    al,0x1
  404235:	je     404256 <emit_test@@Base+0x34f>
  404237:	lea    rcx,[rip+0x71fa]        # 40b438 <_IO_stdin_used@@Base+0x438>
  40423e:	mov    edx,0x71
  404243:	lea    rsi,[rip+0x7116]        # 40b360 <_IO_stdin_used@@Base+0x360>
  40424a:	lea    rdi,[rip+0x7174]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  404251:	call   403090 <__assert_fail@plt>
  404256:	mov    rax,QWORD PTR [rbp-0x200]
  40425d:	mov    rdi,rax
  404260:	call   4036c0 <_start@@Base+0x580>
  404265:	mov    rdi,rax
  404268:	call   4033db <_start@@Base+0x29b>
  40426d:	cmp    rax,0x4
  404271:	je     404292 <emit_test@@Base+0x38b>
  404273:	lea    rcx,[rip+0x71be]        # 40b438 <_IO_stdin_used@@Base+0x438>
  40427a:	mov    edx,0x72
  40427f:	lea    rsi,[rip+0x70da]        # 40b360 <_IO_stdin_used@@Base+0x360>
  404286:	lea    rdi,[rip+0x7138]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  40428d:	call   403090 <__assert_fail@plt>
  404292:	mov    rax,QWORD PTR [rbp-0x200]
  404299:	mov    rdi,rax
  40429c:	call   4036c0 <_start@@Base+0x580>
  4042a1:	mov    esi,0x2
  4042a6:	mov    rdi,rax
  4042a9:	call   4033f5 <_start@@Base+0x2b5>
  4042ae:	vucomiss xmm0,DWORD PTR [rip+0x71ee]        # 40b4a4 <_IO_stdin_used@@Base+0x4a4>
  4042b6:	jp     4042c2 <emit_test@@Base+0x3bb>
  4042b8:	vucomiss xmm0,DWORD PTR [rip+0x71e4]        # 40b4a4 <_IO_stdin_used@@Base+0x4a4>
  4042c0:	je     4042e1 <emit_test@@Base+0x3da>
  4042c2:	lea    rcx,[rip+0x716f]        # 40b438 <_IO_stdin_used@@Base+0x438>
  4042c9:	mov    edx,0x73
  4042ce:	lea    rsi,[rip+0x708b]        # 40b360 <_IO_stdin_used@@Base+0x360>
  4042d5:	lea    rdi,[rip+0x70e9]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  4042dc:	call   403090 <__assert_fail@plt>
  4042e1:	mov    rax,QWORD PTR [rbp-0x218]
  4042e8:	mov    rdi,rax
  4042eb:	call   405047 <flatcc_builder_clear@@Base>
  4042f0:	mov    eax,0x0
  4042f5:	mov    rsi,QWORD PTR [rbp-0x8]
  4042f9:	xor    rsi,QWORD PTR fs:0x28
  404302:	je     404309 <emit_test@@Base+0x402>
  404304:	call   403070 <__stack_chk_fail@plt>
  404309:	leave  
  40430a:	ret    

000000000040430b <main@@Base>:
  40430b:	push   rbp
  40430c:	mov    rbp,rsp
  40430f:	sub    rsp,0x20
  404313:	mov    DWORD PTR [rbp-0x14],edi
  404316:	mov    QWORD PTR [rbp-0x20],rsi
  40431a:	mov    DWORD PTR [rbp-0x4],0x0
  404321:	mov    eax,0x0
  404326:	call   403e11 <debug_test@@Base>
  40432b:	or     DWORD PTR [rbp-0x4],eax
  40432e:	mov    eax,0x0
  404333:	call   403f07 <emit_test@@Base>
  404338:	or     DWORD PTR [rbp-0x4],eax
  40433b:	mov    eax,DWORD PTR [rbp-0x4]
  40433e:	leave  
  40433f:	ret    
  404340:	push   rbp
  404341:	mov    rbp,rsp
  404344:	sub    rsp,0x30
  404348:	mov    QWORD PTR [rbp-0x28],rdi
  40434c:	mov    QWORD PTR [rbp-0x30],rsi
  404350:	mov    rax,QWORD PTR fs:0x28
  404359:	mov    QWORD PTR [rbp-0x8],rax
  40435d:	xor    eax,eax
  40435f:	mov    QWORD PTR [rbp-0x10],0x0
  404367:	cmp    QWORD PTR [rbp-0x28],0x7
  40436c:	ja     404376 <main@@Base+0x6b>
  40436e:	mov    QWORD PTR [rbp-0x28],0x8
  404376:	mov    rdx,QWORD PTR [rbp-0x30]
  40437a:	mov    rcx,QWORD PTR [rbp-0x28]
  40437e:	lea    rax,[rbp-0x10]
  404382:	mov    rsi,rcx
  404385:	mov    rdi,rax
  404388:	call   403130 <posix_memalign@plt>
  40438d:	mov    DWORD PTR [rbp-0x14],eax
  404390:	cmp    DWORD PTR [rbp-0x14],0x0
  404394:	je     4043b3 <main@@Base+0xa8>
  404396:	mov    rax,QWORD PTR [rbp-0x10]
  40439a:	test   rax,rax
  40439d:	je     4043b3 <main@@Base+0xa8>
  40439f:	mov    rax,QWORD PTR [rbp-0x10]
  4043a3:	mov    rdi,rax
  4043a6:	call   403030 <free@plt>
  4043ab:	mov    QWORD PTR [rbp-0x10],0x0
  4043b3:	mov    rax,QWORD PTR [rbp-0x10]
  4043b7:	mov    rcx,QWORD PTR [rbp-0x8]
  4043bb:	xor    rcx,QWORD PTR fs:0x28
  4043c4:	je     4043cb <main@@Base+0xc0>
  4043c6:	call   403070 <__stack_chk_fail@plt>
  4043cb:	leave  
  4043cc:	ret    
  4043cd:	push   rbp
  4043ce:	mov    rbp,rsp
  4043d1:	mov    DWORD PTR [rbp-0x4],edi
  4043d4:	mov    eax,DWORD PTR [rbp-0x4]
  4043d7:	pop    rbp
  4043d8:	ret    
  4043d9:	push   rbp
  4043da:	mov    rbp,rsp
  4043dd:	mov    eax,edi
  4043df:	mov    BYTE PTR [rbp-0x4],al
  4043e2:	movzx  eax,BYTE PTR [rbp-0x4]
  4043e6:	pop    rbp
  4043e7:	ret    
  4043e8:	push   rbp
  4043e9:	mov    rbp,rsp
  4043ec:	mov    DWORD PTR [rbp-0x4],edi
  4043ef:	mov    eax,DWORD PTR [rbp-0x4]
  4043f2:	pop    rbp
  4043f3:	ret    
  4043f4:	push   rbp
  4043f5:	mov    rbp,rsp
  4043f8:	mov    QWORD PTR [rbp-0x8],rdi
  4043fc:	mov    QWORD PTR [rbp-0x10],rsi
  404400:	mov    rax,QWORD PTR [rbp-0x8]
  404404:	mov    rdx,QWORD PTR [rax]
  404407:	mov    rax,QWORD PTR [rbp-0x8]
  40440b:	mov    rax,QWORD PTR [rax+0x8]
  40440f:	cmp    rdx,rax
  404412:	jne    404434 <main@@Base+0x129>
  404414:	cmp    QWORD PTR [rbp-0x10],0x0
  404419:	je     40442a <main@@Base+0x11f>
  40441b:	mov    rax,QWORD PTR [rbp-0x8]
  40441f:	mov    rdx,QWORD PTR [rax+0x30]
  404423:	mov    rax,QWORD PTR [rbp-0x10]
  404427:	mov    QWORD PTR [rax],rdx
  40442a:	mov    rax,QWORD PTR [rbp-0x8]
  40442e:	mov    rax,QWORD PTR [rax+0x10]
  404432:	jmp    40444b <main@@Base+0x140>
  404434:	cmp    QWORD PTR [rbp-0x10],0x0
  404439:	je     404446 <main@@Base+0x13b>
  40443b:	mov    rax,QWORD PTR [rbp-0x10]
  40443f:	mov    QWORD PTR [rax],0x0
  404446:	mov    eax,0x0
  40444b:	pop    rbp
  40444c:	ret    
  40444d:	push   rbp
  40444e:	mov    rbp,rsp
  404451:	sub    rsp,0x20
  404455:	mov    QWORD PTR [rbp-0x18],rdi
  404459:	mov    QWORD PTR [rbp-0x20],rsi
  40445d:	mov    rdx,QWORD PTR [rbp-0x20]
  404461:	mov    rax,QWORD PTR [rbp-0x18]
  404465:	mov    esi,0x0
  40446a:	mov    rdi,rax
  40446d:	call   4030c0 <memchr@plt>
  404472:	mov    QWORD PTR [rbp-0x8],rax
  404476:	cmp    QWORD PTR [rbp-0x8],0x0
  40447b:	je     40448d <main@@Base+0x182>
  40447d:	mov    rdx,QWORD PTR [rbp-0x8]
  404481:	mov    rax,QWORD PTR [rbp-0x18]
  404485:	sub    rdx,rax
  404488:	mov    rax,rdx
  40448b:	jmp    404491 <main@@Base+0x186>
  40448d:	mov    rax,QWORD PTR [rbp-0x20]
  404491:	leave  
  404492:	ret    

0000000000404493 <flatcc_builder_default_alloc@@Base>:
  404493:	push   rbp
  404494:	mov    rbp,rsp
  404497:	sub    rsp,0x30
  40449b:	mov    QWORD PTR [rbp-0x18],rdi
  40449f:	mov    QWORD PTR [rbp-0x20],rsi
  4044a3:	mov    QWORD PTR [rbp-0x28],rdx
  4044a7:	mov    DWORD PTR [rbp-0x2c],ecx
  4044aa:	mov    DWORD PTR [rbp-0x30],r8d
  4044ae:	cmp    QWORD PTR [rbp-0x28],0x0
  4044b3:	jne    4044f1 <flatcc_builder_default_alloc@@Base+0x5e>
  4044b5:	mov    rax,QWORD PTR [rbp-0x20]
  4044b9:	mov    rax,QWORD PTR [rax]
  4044bc:	test   rax,rax
  4044bf:	je     4044e7 <flatcc_builder_default_alloc@@Base+0x54>
  4044c1:	mov    rax,QWORD PTR [rbp-0x20]
  4044c5:	mov    rax,QWORD PTR [rax]
  4044c8:	mov    rdi,rax
  4044cb:	call   403030 <free@plt>
  4044d0:	mov    rax,QWORD PTR [rbp-0x20]
  4044d4:	mov    QWORD PTR [rax],0x0
  4044db:	mov    rax,QWORD PTR [rbp-0x20]
  4044df:	mov    QWORD PTR [rax+0x8],0x0
  4044e7:	mov    eax,0x0
  4044ec:	jmp    4045fe <flatcc_builder_default_alloc@@Base+0x16b>
  4044f1:	mov    eax,DWORD PTR [rbp-0x30]
  4044f4:	cmp    eax,0x4
  4044f7:	je     404525 <flatcc_builder_default_alloc@@Base+0x92>
  4044f9:	cmp    eax,0x4
  4044fc:	jg     404505 <flatcc_builder_default_alloc@@Base+0x72>
  4044fe:	cmp    eax,0x1
  404501:	je     404511 <flatcc_builder_default_alloc@@Base+0x7e>
  404503:	jmp    404539 <flatcc_builder_default_alloc@@Base+0xa6>
  404505:	cmp    eax,0x5
  404508:	je     40451b <flatcc_builder_default_alloc@@Base+0x88>
  40450a:	cmp    eax,0x7
  40450d:	je     40452f <flatcc_builder_default_alloc@@Base+0x9c>
  40450f:	jmp    404539 <flatcc_builder_default_alloc@@Base+0xa6>
  404511:	mov    QWORD PTR [rbp-0x10],0x100
  404519:	jmp    404542 <flatcc_builder_default_alloc@@Base+0xaf>
  40451b:	mov    rax,QWORD PTR [rbp-0x28]
  40451f:	mov    QWORD PTR [rbp-0x10],rax
  404523:	jmp    404542 <flatcc_builder_default_alloc@@Base+0xaf>
  404525:	mov    QWORD PTR [rbp-0x10],0x120
  40452d:	jmp    404542 <flatcc_builder_default_alloc@@Base+0xaf>
  40452f:	mov    QWORD PTR [rbp-0x10],0x40
  404537:	jmp    404542 <flatcc_builder_default_alloc@@Base+0xaf>
  404539:	mov    QWORD PTR [rbp-0x10],0x20
  404541:	nop
  404542:	jmp    404548 <flatcc_builder_default_alloc@@Base+0xb5>
  404544:	shl    QWORD PTR [rbp-0x10],1
  404548:	mov    rax,QWORD PTR [rbp-0x10]
  40454c:	cmp    rax,QWORD PTR [rbp-0x28]
  404550:	jb     404544 <flatcc_builder_default_alloc@@Base+0xb1>
  404552:	mov    rax,QWORD PTR [rbp-0x20]
  404556:	mov    rax,QWORD PTR [rax+0x8]
  40455a:	cmp    rax,QWORD PTR [rbp-0x28]
  40455e:	jb     40457b <flatcc_builder_default_alloc@@Base+0xe8>
  404560:	mov    rax,QWORD PTR [rbp-0x20]
  404564:	mov    rax,QWORD PTR [rax+0x8]
  404568:	shr    rax,1
  40456b:	cmp    rax,QWORD PTR [rbp-0x10]
  40456f:	jb     40457b <flatcc_builder_default_alloc@@Base+0xe8>
  404571:	mov    eax,0x0
  404576:	jmp    4045fe <flatcc_builder_default_alloc@@Base+0x16b>
  40457b:	mov    rax,QWORD PTR [rbp-0x20]
  40457f:	mov    rax,QWORD PTR [rax]
  404582:	mov    rdx,QWORD PTR [rbp-0x10]
  404586:	mov    rsi,rdx
  404589:	mov    rdi,rax
  40458c:	call   403110 <realloc@plt>
  404591:	mov    QWORD PTR [rbp-0x8],rax
  404595:	cmp    QWORD PTR [rbp-0x8],0x0
  40459a:	jne    4045a3 <flatcc_builder_default_alloc@@Base+0x110>
  40459c:	mov    eax,0xffffffff
  4045a1:	jmp    4045fe <flatcc_builder_default_alloc@@Base+0x16b>
  4045a3:	cmp    DWORD PTR [rbp-0x2c],0x0
  4045a7:	je     4045e2 <flatcc_builder_default_alloc@@Base+0x14f>
  4045a9:	mov    rax,QWORD PTR [rbp-0x20]
  4045ad:	mov    rax,QWORD PTR [rax+0x8]
  4045b1:	cmp    rax,QWORD PTR [rbp-0x10]
  4045b5:	jae    4045e2 <flatcc_builder_default_alloc@@Base+0x14f>
  4045b7:	mov    rax,QWORD PTR [rbp-0x20]
  4045bb:	mov    rax,QWORD PTR [rax+0x8]
  4045bf:	mov    rdx,QWORD PTR [rbp-0x10]
  4045c3:	sub    rdx,rax
  4045c6:	mov    rax,QWORD PTR [rbp-0x20]
  4045ca:	mov    rcx,QWORD PTR [rax+0x8]
  4045ce:	mov    rax,QWORD PTR [rbp-0x8]
  4045d2:	add    rax,rcx
  4045d5:	mov    esi,0x0
  4045da:	mov    rdi,rax
  4045dd:	call   4030a0 <memset@plt>
  4045e2:	mov    rax,QWORD PTR [rbp-0x20]
  4045e6:	mov    rdx,QWORD PTR [rbp-0x8]
  4045ea:	mov    QWORD PTR [rax],rdx
  4045ed:	mov    rax,QWORD PTR [rbp-0x20]
  4045f1:	mov    rdx,QWORD PTR [rbp-0x10]
  4045f5:	mov    QWORD PTR [rax+0x8],rdx
  4045f9:	mov    eax,0x0
  4045fe:	leave  
  4045ff:	ret    
  404600:	push   rbp
  404601:	mov    rbp,rsp
  404604:	mov    QWORD PTR [rbp-0x18],rdi
  404608:	mov    DWORD PTR [rbp-0x1c],esi
  40460b:	mov    rax,QWORD PTR [rbp-0x18]
  40460f:	add    rax,0x58
  404613:	add    rax,0x10
  404617:	mov    QWORD PTR [rbp-0x8],rax
  40461b:	mov    rax,QWORD PTR [rbp-0x18]
  40461f:	mov    rdx,QWORD PTR [rax+0x68]
  404623:	mov    rax,QWORD PTR [rbp-0x18]
  404627:	mov    eax,DWORD PTR [rax+0x28]
  40462a:	mov    eax,eax
  40462c:	add    rdx,rax
  40462f:	mov    rax,QWORD PTR [rbp-0x18]
  404633:	mov    QWORD PTR [rax+0x18],rdx
  404637:	mov    rax,QWORD PTR [rbp-0x8]
  40463b:	mov    rax,QWORD PTR [rax+0x8]
  40463f:	mov    edx,eax
  404641:	mov    rax,QWORD PTR [rbp-0x18]
  404645:	mov    eax,DWORD PTR [rax+0x28]
  404648:	sub    edx,eax
  40464a:	mov    rax,QWORD PTR [rbp-0x18]
  40464e:	mov    DWORD PTR [rax+0x24],edx
  404651:	mov    rax,QWORD PTR [rbp-0x18]
  404655:	mov    eax,DWORD PTR [rax+0x24]
  404658:	cmp    eax,DWORD PTR [rbp-0x1c]
  40465b:	jbe    404667 <flatcc_builder_default_alloc@@Base+0x1d4>
  40465d:	mov    rax,QWORD PTR [rbp-0x18]
  404661:	mov    edx,DWORD PTR [rbp-0x1c]
  404664:	mov    DWORD PTR [rax+0x24],edx
  404667:	mov    rax,QWORD PTR [rbp-0x18]
  40466b:	mov    rax,QWORD PTR [rax+0x30]
  40466f:	mov    edx,DWORD PTR [rbp-0x1c]
  404672:	mov    DWORD PTR [rax+0x4],edx
  404675:	nop
  404676:	pop    rbp
  404677:	ret    
  404678:	push   rbp
  404679:	mov    rbp,rsp
  40467c:	sub    rsp,0x30
  404680:	mov    QWORD PTR [rbp-0x18],rdi
  404684:	mov    QWORD PTR [rbp-0x20],rsi
  404688:	mov    DWORD PTR [rbp-0x24],edx
  40468b:	mov    rax,QWORD PTR [rbp-0x18]
  40468f:	add    rax,0x58
  404693:	add    rax,0x10
  404697:	mov    QWORD PTR [rbp-0x8],rax
  40469b:	mov    rax,QWORD PTR [rbp-0x18]
  40469f:	mov    rax,QWORD PTR [rax+0x50]
  4046a3:	mov    rdx,QWORD PTR [rbp-0x18]
  4046a7:	mov    edx,DWORD PTR [rdx+0x28]
  4046aa:	mov    ecx,edx
  4046ac:	mov    rdx,QWORD PTR [rbp-0x20]
  4046b0:	lea    r9,[rcx+rdx*1]
  4046b4:	mov    rdx,QWORD PTR [rbp-0x18]
  4046b8:	mov    rdi,QWORD PTR [rdx+0x40]
  4046bc:	mov    rsi,QWORD PTR [rbp-0x8]
  4046c0:	mov    r8d,0x1
  4046c6:	mov    ecx,0x1
  4046cb:	mov    rdx,r9
  4046ce:	call   rax
  4046d0:	test   eax,eax
  4046d2:	je     4046db <flatcc_builder_default_alloc@@Base+0x248>
  4046d4:	mov    eax,0xffffffff
  4046d9:	jmp    4046f1 <flatcc_builder_default_alloc@@Base+0x25e>
  4046db:	mov    edx,DWORD PTR [rbp-0x24]
  4046de:	mov    rax,QWORD PTR [rbp-0x18]
  4046e2:	mov    esi,edx
  4046e4:	mov    rdi,rax
  4046e7:	call   404600 <flatcc_builder_default_alloc@@Base+0x16d>
  4046ec:	mov    eax,0x0
  4046f1:	leave  
  4046f2:	ret    
  4046f3:	push   rbp
  4046f4:	mov    rbp,rsp
  4046f7:	sub    rsp,0x20
  4046fb:	mov    QWORD PTR [rbp-0x18],rdi
  4046ff:	mov    DWORD PTR [rbp-0x1c],esi
  404702:	mov    rax,QWORD PTR [rbp-0x18]
  404706:	mov    eax,DWORD PTR [rax+0x20]
  404709:	mov    eax,eax
  40470b:	mov    QWORD PTR [rbp-0x8],rax
  40470f:	mov    rax,QWORD PTR [rbp-0x18]
  404713:	mov    edx,DWORD PTR [rax+0x20]
  404716:	mov    eax,DWORD PTR [rbp-0x1c]
  404719:	add    edx,eax
  40471b:	mov    rax,QWORD PTR [rbp-0x18]
  40471f:	mov    DWORD PTR [rax+0x20],edx
  404722:	mov    rax,QWORD PTR [rbp-0x18]
  404726:	mov    edx,DWORD PTR [rax+0x20]
  404729:	mov    rax,QWORD PTR [rbp-0x18]
  40472d:	mov    eax,DWORD PTR [rax+0x24]
  404730:	cmp    edx,eax
  404732:	jb     40475f <flatcc_builder_default_alloc@@Base+0x2cc>
  404734:	mov    rax,QWORD PTR [rbp-0x18]
  404738:	mov    eax,DWORD PTR [rax+0x20]
  40473b:	add    eax,0x1
  40473e:	mov    ecx,eax
  404740:	mov    rax,QWORD PTR [rbp-0x18]
  404744:	mov    edx,0xfffffffc
  404749:	mov    rsi,rcx
  40474c:	mov    rdi,rax
  40474f:	call   404678 <flatcc_builder_default_alloc@@Base+0x1e5>
  404754:	test   eax,eax
  404756:	je     40475f <flatcc_builder_default_alloc@@Base+0x2cc>
  404758:	mov    eax,0x0
  40475d:	jmp    40476e <flatcc_builder_default_alloc@@Base+0x2db>
  40475f:	mov    rax,QWORD PTR [rbp-0x18]
  404763:	mov    rdx,QWORD PTR [rax+0x18]
  404767:	mov    rax,QWORD PTR [rbp-0x8]
  40476b:	add    rax,rdx
  40476e:	leave  
  40476f:	ret    
  404770:	push   rbp
  404771:	mov    rbp,rsp
  404774:	sub    rsp,0x10
  404778:	mov    QWORD PTR [rbp-0x8],rdi
  40477c:	mov    DWORD PTR [rbp-0xc],esi
  40477f:	mov    rax,QWORD PTR [rbp-0x8]
  404783:	mov    eax,DWORD PTR [rax+0x20]
  404786:	sub    eax,DWORD PTR [rbp-0xc]
  404789:	mov    edx,eax
  40478b:	mov    rax,QWORD PTR [rbp-0x8]
  40478f:	mov    DWORD PTR [rax+0x20],edx
  404792:	mov    eax,DWORD PTR [rbp-0xc]
  404795:	mov    rdx,QWORD PTR [rbp-0x8]
  404799:	mov    rcx,QWORD PTR [rdx+0x18]
  40479d:	mov    rdx,QWORD PTR [rbp-0x8]
  4047a1:	mov    edx,DWORD PTR [rdx+0x20]
  4047a4:	mov    edx,edx
  4047a6:	add    rcx,rdx
  4047a9:	mov    rdx,rax
  4047ac:	mov    esi,0x0
  4047b1:	mov    rdi,rcx
  4047b4:	call   4030a0 <memset@plt>
  4047b9:	nop
  4047ba:	leave  
  4047bb:	ret    
  4047bc:	push   rbp
  4047bd:	mov    rbp,rsp
  4047c0:	sub    rsp,0x30
  4047c4:	mov    QWORD PTR [rbp-0x18],rdi
  4047c8:	mov    QWORD PTR [rbp-0x20],rsi
  4047cc:	mov    DWORD PTR [rbp-0x24],edx
  4047cf:	mov    edx,DWORD PTR [rbp-0x24]
  4047d2:	mov    rax,QWORD PTR [rbp-0x18]
  4047d6:	mov    esi,edx
  4047d8:	mov    rdi,rax
  4047db:	call   4046f3 <flatcc_builder_default_alloc@@Base+0x260>
  4047e0:	mov    QWORD PTR [rbp-0x8],rax
  4047e4:	cmp    QWORD PTR [rbp-0x8],0x0
  4047e9:	jne    4047f2 <flatcc_builder_default_alloc@@Base+0x35f>
  4047eb:	mov    eax,0x0
  4047f0:	jmp    40480c <flatcc_builder_default_alloc@@Base+0x379>
  4047f2:	mov    edx,DWORD PTR [rbp-0x24]
  4047f5:	mov    rcx,QWORD PTR [rbp-0x20]
  4047f9:	mov    rax,QWORD PTR [rbp-0x8]
  4047fd:	mov    rsi,rcx
  404800:	mov    rdi,rax
  404803:	call   4030f0 <memcpy@plt>
  404808:	mov    rax,QWORD PTR [rbp-0x8]
  40480c:	leave  
  40480d:	ret    
  40480e:	push   rbp
  40480f:	mov    rbp,rsp
  404812:	sub    rsp,0x30
  404816:	mov    QWORD PTR [rbp-0x18],rdi
  40481a:	mov    DWORD PTR [rbp-0x1c],esi
  40481d:	mov    eax,ecx
  40481f:	mov    WORD PTR [rbp-0x20],dx
  404823:	mov    WORD PTR [rbp-0x24],ax
  404827:	mov    rax,QWORD PTR [rbp-0x18]
  40482b:	mov    edx,DWORD PTR [rax+0x20]
  40482e:	movzx  eax,WORD PTR [rbp-0x20]
  404832:	add    eax,edx
  404834:	lea    edx,[rax-0x1]
  404837:	movzx  eax,WORD PTR [rbp-0x20]
  40483b:	neg    eax
  40483d:	and    eax,edx
  40483f:	mov    DWORD PTR [rbp-0x4],eax
  404842:	mov    edx,DWORD PTR [rbp-0x4]
  404845:	mov    eax,DWORD PTR [rbp-0x1c]
  404848:	add    edx,eax
  40484a:	mov    rax,QWORD PTR [rbp-0x18]
  40484e:	mov    DWORD PTR [rax+0x20],edx
  404851:	mov    rax,QWORD PTR [rbp-0x18]
  404855:	mov    edx,DWORD PTR [rax+0x20]
  404858:	mov    rax,QWORD PTR [rbp-0x18]
  40485c:	mov    eax,DWORD PTR [rax+0x24]
  40485f:	cmp    edx,eax
  404861:	jb     40488e <flatcc_builder_default_alloc@@Base+0x3fb>
  404863:	mov    rax,QWORD PTR [rbp-0x18]
  404867:	mov    eax,DWORD PTR [rax+0x20]
  40486a:	add    eax,0x1
  40486d:	mov    ecx,eax
  40486f:	mov    rax,QWORD PTR [rbp-0x18]
  404873:	mov    edx,0xfffc
  404878:	mov    rsi,rcx
  40487b:	mov    rdi,rax
  40487e:	call   404678 <flatcc_builder_default_alloc@@Base+0x1e5>
  404883:	test   eax,eax
  404885:	je     40488e <flatcc_builder_default_alloc@@Base+0x3fb>
  404887:	mov    eax,0x0
  40488c:	jmp    4048d4 <flatcc_builder_default_alloc@@Base+0x441>
  40488e:	mov    rax,QWORD PTR [rbp-0x18]
  404892:	mov    rax,QWORD PTR [rax+0x8]
  404896:	movzx  edx,WORD PTR [rbp-0x24]
  40489a:	add    rdx,rdx
  40489d:	add    rax,rdx
  4048a0:	mov    edx,DWORD PTR [rbp-0x4]
  4048a3:	add    edx,0x4
  4048a6:	mov    WORD PTR [rax],dx
  4048a9:	mov    rax,QWORD PTR [rbp-0x18]
  4048ad:	movzx  eax,WORD PTR [rax+0x10]
  4048b1:	cmp    ax,WORD PTR [rbp-0x24]
  4048b5:	ja     4048c6 <flatcc_builder_default_alloc@@Base+0x433>
  4048b7:	movzx  eax,WORD PTR [rbp-0x24]
  4048bb:	lea    edx,[rax+0x1]
  4048be:	mov    rax,QWORD PTR [rbp-0x18]
  4048c2:	mov    WORD PTR [rax+0x10],dx
  4048c6:	mov    rax,QWORD PTR [rbp-0x18]
  4048ca:	mov    rdx,QWORD PTR [rax+0x18]
  4048ce:	mov    eax,DWORD PTR [rbp-0x4]
  4048d1:	add    rax,rdx
  4048d4:	leave  
  4048d5:	ret    
  4048d6:	push   rbp
  4048d7:	mov    rbp,rsp
  4048da:	sub    rsp,0x20
  4048de:	mov    QWORD PTR [rbp-0x18],rdi
  4048e2:	mov    eax,esi
  4048e4:	mov    WORD PTR [rbp-0x1c],ax
  4048e8:	mov    rax,QWORD PTR [rbp-0x18]
  4048ec:	mov    eax,DWORD PTR [rax+0x20]
  4048ef:	add    eax,0x3
  4048f2:	and    eax,0xfffffffc
  4048f5:	mov    DWORD PTR [rbp-0x4],eax
  4048f8:	mov    eax,DWORD PTR [rbp-0x4]
  4048fb:	lea    edx,[rax+0x4]
  4048fe:	mov    rax,QWORD PTR [rbp-0x18]
  404902:	mov    DWORD PTR [rax+0x20],edx
  404905:	mov    rax,QWORD PTR [rbp-0x18]
  404909:	mov    edx,DWORD PTR [rax+0x20]
  40490c:	mov    rax,QWORD PTR [rbp-0x18]
  404910:	mov    eax,DWORD PTR [rax+0x24]
  404913:	cmp    edx,eax
  404915:	jbe    40493f <flatcc_builder_default_alloc@@Base+0x4ac>
  404917:	mov    rax,QWORD PTR [rbp-0x18]
  40491b:	mov    eax,DWORD PTR [rax+0x20]
  40491e:	mov    ecx,eax
  404920:	mov    rax,QWORD PTR [rbp-0x18]
  404924:	mov    edx,0xfffc
  404929:	mov    rsi,rcx
  40492c:	mov    rdi,rax
  40492f:	call   404678 <flatcc_builder_default_alloc@@Base+0x1e5>
  404934:	test   eax,eax
  404936:	je     40493f <flatcc_builder_default_alloc@@Base+0x4ac>
  404938:	mov    eax,0x0
  40493d:	jmp    40499d <flatcc_builder_default_alloc@@Base+0x50a>
  40493f:	mov    rax,QWORD PTR [rbp-0x18]
  404943:	mov    rax,QWORD PTR [rax+0x8]
  404947:	movzx  edx,WORD PTR [rbp-0x1c]
  40494b:	add    rdx,rdx
  40494e:	add    rax,rdx
  404951:	mov    edx,DWORD PTR [rbp-0x4]
  404954:	add    edx,0x4
  404957:	mov    WORD PTR [rax],dx
  40495a:	mov    rax,QWORD PTR [rbp-0x18]
  40495e:	movzx  eax,WORD PTR [rax+0x10]
  404962:	cmp    ax,WORD PTR [rbp-0x1c]
  404966:	ja     404977 <flatcc_builder_default_alloc@@Base+0x4e4>
  404968:	movzx  eax,WORD PTR [rbp-0x1c]
  40496c:	lea    edx,[rax+0x1]
  40496f:	mov    rax,QWORD PTR [rbp-0x18]
  404973:	mov    WORD PTR [rax+0x10],dx
  404977:	mov    rax,QWORD PTR [rbp-0x18]
  40497b:	mov    rax,QWORD PTR [rax]
  40497e:	lea    rcx,[rax+0x2]
  404982:	mov    rdx,QWORD PTR [rbp-0x18]
  404986:	mov    QWORD PTR [rdx],rcx
  404989:	mov    edx,DWORD PTR [rbp-0x4]
  40498c:	mov    WORD PTR [rax],dx
  40498f:	mov    rax,QWORD PTR [rbp-0x18]
  404993:	mov    rdx,QWORD PTR [rax+0x18]
  404997:	mov    eax,DWORD PTR [rbp-0x4]
  40499a:	add    rax,rdx
  40499d:	leave  
  40499e:	ret    
  40499f:	push   rbp
  4049a0:	mov    rbp,rsp
  4049a3:	sub    rsp,0x30
  4049a7:	mov    QWORD PTR [rbp-0x18],rdi
  4049ab:	mov    DWORD PTR [rbp-0x1c],esi
  4049ae:	mov    QWORD PTR [rbp-0x28],rdx
  4049b2:	mov    QWORD PTR [rbp-0x30],rcx
  4049b6:	mov    DWORD PTR [rbp-0x20],r8d
  4049ba:	mov    rax,QWORD PTR [rbp-0x18]
  4049be:	lea    rdx,[rax+0x58]
  4049c2:	mov    eax,DWORD PTR [rbp-0x1c]
  4049c5:	cdqe   
  4049c7:	shl    rax,0x4
  4049cb:	add    rax,rdx
  4049ce:	mov    QWORD PTR [rbp-0x8],rax
  4049d2:	mov    rdx,QWORD PTR [rbp-0x28]
  4049d6:	mov    rax,QWORD PTR [rbp-0x30]
  4049da:	add    rdx,rax
  4049dd:	mov    rax,QWORD PTR [rbp-0x8]
  4049e1:	mov    rax,QWORD PTR [rax+0x8]
  4049e5:	cmp    rdx,rax
  4049e8:	jbe    404a3d <flatcc_builder_default_alloc@@Base+0x5aa>
  4049ea:	mov    rax,QWORD PTR [rbp-0x18]
  4049ee:	mov    rax,QWORD PTR [rax+0x50]
  4049f2:	mov    rcx,QWORD PTR [rbp-0x28]
  4049f6:	mov    rdx,QWORD PTR [rbp-0x30]
  4049fa:	lea    r9,[rcx+rdx*1]
  4049fe:	mov    rdx,QWORD PTR [rbp-0x18]
  404a02:	mov    rdi,QWORD PTR [rdx+0x40]
  404a06:	mov    ecx,DWORD PTR [rbp-0x1c]
  404a09:	mov    edx,DWORD PTR [rbp-0x20]
  404a0c:	mov    rsi,QWORD PTR [rbp-0x8]
  404a10:	mov    r8d,ecx
  404a13:	mov    ecx,edx
  404a15:	mov    rdx,r9
  404a18:	call   rax
  404a1a:	test   eax,eax
  404a1c:	je     404a3d <flatcc_builder_default_alloc@@Base+0x5aa>
  404a1e:	lea    rcx,[rip+0x7113]        # 40bb38 <flatcc_builder_padding_base@@Base+0x658>
  404a25:	mov    edx,0x134
  404a2a:	lea    rsi,[rip+0x6caf]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  404a31:	lea    rdi,[rip+0x6d08]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  404a38:	call   403090 <__assert_fail@plt>
  404a3d:	mov    rax,QWORD PTR [rbp-0x8]
  404a41:	mov    rax,QWORD PTR [rax]
  404a44:	mov    rdx,rax
  404a47:	mov    rax,QWORD PTR [rbp-0x28]
  404a4b:	add    rax,rdx
  404a4e:	leave  
  404a4f:	ret    
  404a50:	push   rbp
  404a51:	mov    rbp,rsp
  404a54:	sub    rsp,0x20
  404a58:	mov    QWORD PTR [rbp-0x18],rdi
  404a5c:	mov    DWORD PTR [rbp-0x1c],esi
  404a5f:	mov    rax,QWORD PTR [rbp-0x18]
  404a63:	mov    rax,QWORD PTR [rax+0x30]
  404a67:	mov    edx,DWORD PTR [rax+0x10]
  404a6a:	mov    rax,QWORD PTR [rbp-0x18]
  404a6e:	mov    rax,QWORD PTR [rax+0x30]
  404a72:	movzx  eax,WORD PTR [rax+0x1c]
  404a76:	movzx  eax,ax
  404a79:	add    eax,eax
  404a7b:	add    eax,edx
  404a7d:	mov    DWORD PTR [rbp-0x8],eax
  404a80:	mov    eax,DWORD PTR [rbp-0x1c]
  404a83:	add    eax,0x2
  404a86:	cdqe   
  404a88:	add    eax,eax
  404a8a:	mov    DWORD PTR [rbp-0x4],eax
  404a8d:	mov    ecx,DWORD PTR [rbp-0x4]
  404a90:	mov    edx,DWORD PTR [rbp-0x8]
  404a93:	mov    rax,QWORD PTR [rbp-0x18]
  404a97:	mov    r8d,0x1
  404a9d:	mov    esi,0x0
  404aa2:	mov    rdi,rax
  404aa5:	call   40499f <flatcc_builder_default_alloc@@Base+0x50c>
  404aaa:	mov    rdx,rax
  404aad:	mov    rax,QWORD PTR [rbp-0x18]
  404ab1:	mov    QWORD PTR [rax+0x8],rdx
  404ab5:	mov    rax,QWORD PTR [rbp-0x18]
  404ab9:	mov    rax,QWORD PTR [rax+0x8]
  404abd:	test   rax,rax
  404ac0:	jne    404ac9 <flatcc_builder_default_alloc@@Base+0x636>
  404ac2:	mov    eax,0xffffffff
  404ac7:	jmp    404b37 <flatcc_builder_default_alloc@@Base+0x6a4>
  404ac9:	mov    rax,QWORD PTR [rbp-0x18]
  404acd:	mov    rax,QWORD PTR [rax+0x8]
  404ad1:	lea    rdx,[rax+0x4]
  404ad5:	mov    rax,QWORD PTR [rbp-0x18]
  404ad9:	mov    QWORD PTR [rax+0x8],rdx
  404add:	mov    rax,QWORD PTR [rbp-0x18]
  404ae1:	mov    rax,QWORD PTR [rax+0x30]
  404ae5:	mov    eax,DWORD PTR [rax+0x14]
  404ae8:	mov    DWORD PTR [rbp-0x8],eax
  404aeb:	mov    eax,DWORD PTR [rbp-0x1c]
  404aee:	cdqe   
  404af0:	add    eax,eax
  404af2:	add    eax,0x1
  404af5:	mov    DWORD PTR [rbp-0x4],eax
  404af8:	mov    ecx,DWORD PTR [rbp-0x4]
  404afb:	mov    edx,DWORD PTR [rbp-0x8]
  404afe:	mov    rax,QWORD PTR [rbp-0x18]
  404b02:	mov    r8d,0x0
  404b08:	mov    esi,0x3
  404b0d:	mov    rdi,rax
  404b10:	call   40499f <flatcc_builder_default_alloc@@Base+0x50c>
  404b15:	mov    rdx,rax
  404b18:	mov    rax,QWORD PTR [rbp-0x18]
  404b1c:	mov    QWORD PTR [rax],rdx
  404b1f:	mov    rax,QWORD PTR [rbp-0x18]
  404b23:	mov    rax,QWORD PTR [rax]
  404b26:	test   rax,rax
  404b29:	jne    404b32 <flatcc_builder_default_alloc@@Base+0x69f>
  404b2b:	mov    eax,0xffffffff
  404b30:	jmp    404b37 <flatcc_builder_default_alloc@@Base+0x6a4>
  404b32:	mov    eax,0x0
  404b37:	leave  
  404b38:	ret    
  404b39:	push   rbp
  404b3a:	mov    rbp,rsp
  404b3d:	sub    rsp,0x30
  404b41:	mov    QWORD PTR [rbp-0x28],rdi
  404b45:	mov    rax,QWORD PTR [rbp-0x28]
  404b49:	add    rax,0x58
  404b4d:	add    rax,0x50
  404b51:	mov    QWORD PTR [rbp-0x8],rax
  404b55:	mov    rax,QWORD PTR [rbp-0x28]
  404b59:	mov    eax,DWORD PTR [rax+0xe4]
  404b5f:	test   eax,eax
  404b61:	je     404b82 <flatcc_builder_default_alloc@@Base+0x6ef>
  404b63:	lea    rcx,[rip+0x6fbe]        # 40bb28 <flatcc_builder_padding_base@@Base+0x648>
  404b6a:	mov    edx,0x156
  404b6f:	lea    rsi,[rip+0x6b6a]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  404b76:	lea    rdi,[rip+0x6bc5]        # 40b742 <flatcc_builder_padding_base@@Base+0x262>
  404b7d:	call   403090 <__assert_fail@plt>
  404b82:	mov    rax,QWORD PTR [rbp-0x28]
  404b86:	mov    eax,DWORD PTR [rax+0xe4]
  404b8c:	mov    edx,eax
  404b8e:	mov    rax,QWORD PTR [rbp-0x28]
  404b92:	mov    r8d,0x0
  404b98:	mov    ecx,0x10
  404b9d:	mov    esi,0x6
  404ba2:	mov    rdi,rax
  404ba5:	call   40499f <flatcc_builder_default_alloc@@Base+0x50c>
  404baa:	test   rax,rax
  404bad:	jne    404bb9 <flatcc_builder_default_alloc@@Base+0x726>
  404baf:	mov    eax,0xffffffff
  404bb4:	jmp    404c5b <flatcc_builder_default_alloc@@Base+0x7c8>
  404bb9:	mov    rax,QWORD PTR [rbp-0x28]
  404bbd:	mov    DWORD PTR [rax+0xe4],0x10
  404bc7:	mov    QWORD PTR [rbp-0x18],0x100
  404bcf:	mov    rax,QWORD PTR [rbp-0x28]
  404bd3:	mov    rax,QWORD PTR [rax+0x50]
  404bd7:	mov    rdx,QWORD PTR [rbp-0x28]
  404bdb:	mov    rdi,QWORD PTR [rdx+0x40]
  404bdf:	mov    rdx,QWORD PTR [rbp-0x18]
  404be3:	mov    rsi,QWORD PTR [rbp-0x8]
  404be7:	mov    r8d,0x5
  404bed:	mov    ecx,0x1
  404bf2:	call   rax
  404bf4:	test   eax,eax
  404bf6:	je     404c03 <flatcc_builder_default_alloc@@Base+0x770>
  404bf8:	mov    eax,0xffffffff
  404bfd:	jmp    404c5b <flatcc_builder_default_alloc@@Base+0x7c8>
  404bff:	shl    QWORD PTR [rbp-0x18],1
  404c03:	mov    rax,QWORD PTR [rbp-0x18]
  404c07:	lea    rdx,[rax+rax*1]
  404c0b:	mov    rax,QWORD PTR [rbp-0x8]
  404c0f:	mov    rax,QWORD PTR [rax+0x8]
  404c13:	cmp    rdx,rax
  404c16:	jbe    404bff <flatcc_builder_default_alloc@@Base+0x76c>
  404c18:	mov    rax,QWORD PTR [rbp-0x18]
  404c1c:	shr    rax,0x2
  404c20:	mov    QWORD PTR [rbp-0x18],rax
  404c24:	mov    QWORD PTR [rbp-0x10],0x0
  404c2c:	jmp    404c33 <flatcc_builder_default_alloc@@Base+0x7a0>
  404c2e:	add    QWORD PTR [rbp-0x10],0x1
  404c33:	mov    rax,QWORD PTR [rbp-0x10]
  404c37:	mov    edx,0x1
  404c3c:	shlx   rax,rdx,rax
  404c41:	cmp    rax,QWORD PTR [rbp-0x18]
  404c45:	jb     404c2e <flatcc_builder_default_alloc@@Base+0x79b>
  404c47:	mov    rax,QWORD PTR [rbp-0x28]
  404c4b:	mov    rdx,QWORD PTR [rbp-0x10]
  404c4f:	mov    QWORD PTR [rax+0xd8],rdx
  404c56:	mov    eax,0x0
  404c5b:	leave  
  404c5c:	ret    
  404c5d:	push   rbp
  404c5e:	mov    rbp,rsp
  404c61:	sub    rsp,0x20
  404c65:	mov    QWORD PTR [rbp-0x18],rdi
  404c69:	mov    DWORD PTR [rbp-0x1c],esi
  404c6c:	mov    rax,QWORD PTR [rbp-0x18]
  404c70:	mov    rax,QWORD PTR [rax+0xd8]
  404c77:	test   rax,rax
  404c7a:	jne    404c93 <flatcc_builder_default_alloc@@Base+0x800>
  404c7c:	mov    rax,QWORD PTR [rbp-0x18]
  404c80:	mov    rdi,rax
  404c83:	call   404b39 <flatcc_builder_default_alloc@@Base+0x6a6>
  404c88:	test   eax,eax
  404c8a:	je     404c93 <flatcc_builder_default_alloc@@Base+0x800>
  404c8c:	mov    eax,0x0
  404c91:	jmp    404ccf <flatcc_builder_default_alloc@@Base+0x83c>
  404c93:	mov    rax,QWORD PTR [rbp-0x18]
  404c97:	mov    rax,QWORD PTR [rax+0xa8]
  404c9e:	mov    QWORD PTR [rbp-0x8],rax
  404ca2:	mov    rax,QWORD PTR [rbp-0x18]
  404ca6:	mov    rax,QWORD PTR [rax+0xd8]
  404cad:	mov    edx,0x20
  404cb2:	sub    edx,eax
  404cb4:	mov    eax,edx
  404cb6:	mov    edx,DWORD PTR [rbp-0x1c]
  404cb9:	shrx   eax,edx,eax
  404cbe:	mov    eax,eax
  404cc0:	lea    rdx,[rax*4+0x0]
  404cc8:	mov    rax,QWORD PTR [rbp-0x8]
  404ccc:	add    rax,rdx
  404ccf:	leave  
  404cd0:	ret    

0000000000404cd1 <flatcc_builder_flush_vtable_cache@@Base>:
  404cd1:	push   rbp
  404cd2:	mov    rbp,rsp
  404cd5:	sub    rsp,0x20
  404cd9:	mov    QWORD PTR [rbp-0x18],rdi
  404cdd:	mov    rax,QWORD PTR [rbp-0x18]
  404ce1:	add    rax,0x58
  404ce5:	add    rax,0x50
  404ce9:	mov    QWORD PTR [rbp-0x8],rax
  404ced:	mov    rax,QWORD PTR [rbp-0x18]
  404cf1:	mov    rax,QWORD PTR [rax+0xd8]
  404cf8:	test   rax,rax
  404cfb:	je     404d37 <flatcc_builder_flush_vtable_cache@@Base+0x66>
  404cfd:	mov    rax,QWORD PTR [rbp-0x8]
  404d01:	mov    rdx,QWORD PTR [rax+0x8]
  404d05:	mov    rax,QWORD PTR [rbp-0x8]
  404d09:	mov    rax,QWORD PTR [rax]
  404d0c:	mov    esi,0x0
  404d11:	mov    rdi,rax
  404d14:	call   4030a0 <memset@plt>
  404d19:	mov    rax,QWORD PTR [rbp-0x18]
  404d1d:	mov    DWORD PTR [rax+0xe4],0x10
  404d27:	mov    rax,QWORD PTR [rbp-0x18]
  404d2b:	mov    DWORD PTR [rax+0xe0],0x0
  404d35:	jmp    404d38 <flatcc_builder_flush_vtable_cache@@Base+0x67>
  404d37:	nop
  404d38:	leave  
  404d39:	ret    

0000000000404d3a <flatcc_builder_custom_init@@Base>:
  404d3a:	push   rbp
  404d3b:	mov    rbp,rsp
  404d3e:	sub    rsp,0x30
  404d42:	mov    QWORD PTR [rbp-0x8],rdi
  404d46:	mov    QWORD PTR [rbp-0x10],rsi
  404d4a:	mov    QWORD PTR [rbp-0x18],rdx
  404d4e:	mov    QWORD PTR [rbp-0x20],rcx
  404d52:	mov    QWORD PTR [rbp-0x28],r8
  404d56:	mov    rax,QWORD PTR [rbp-0x8]
  404d5a:	mov    edx,0x188
  404d5f:	mov    esi,0x0
  404d64:	mov    rdi,rax
  404d67:	call   4030a0 <memset@plt>
  404d6c:	cmp    QWORD PTR [rbp-0x10],0x0
  404d71:	jne    404d9a <flatcc_builder_custom_init@@Base+0x60>
  404d73:	mov    rax,QWORD PTR [rbp-0x8]
  404d77:	mov    DWORD PTR [rax+0x128],0x1
  404d81:	mov    rax,0x40a16d
  404d88:	mov    QWORD PTR [rbp-0x10],rax
  404d8c:	mov    rax,QWORD PTR [rbp-0x8]
  404d90:	add    rax,0x130
  404d96:	mov    QWORD PTR [rbp-0x18],rax
  404d9a:	cmp    QWORD PTR [rbp-0x20],0x0
  404d9f:	jne    404dac <flatcc_builder_custom_init@@Base+0x72>
  404da1:	mov    rax,0x404493
  404da8:	mov    QWORD PTR [rbp-0x20],rax
  404dac:	mov    rax,QWORD PTR [rbp-0x8]
  404db0:	mov    rdx,QWORD PTR [rbp-0x28]
  404db4:	mov    QWORD PTR [rax+0x40],rdx
  404db8:	mov    rax,QWORD PTR [rbp-0x8]
  404dbc:	mov    rdx,QWORD PTR [rbp-0x20]
  404dc0:	mov    QWORD PTR [rax+0x50],rdx
  404dc4:	mov    rax,QWORD PTR [rbp-0x8]
  404dc8:	mov    rdx,QWORD PTR [rbp-0x18]
  404dcc:	mov    QWORD PTR [rax+0x38],rdx
  404dd0:	mov    rax,QWORD PTR [rbp-0x8]
  404dd4:	mov    rdx,QWORD PTR [rbp-0x10]
  404dd8:	mov    QWORD PTR [rax+0x48],rdx
  404ddc:	mov    eax,0x0
  404de1:	leave  
  404de2:	ret    

0000000000404de3 <flatcc_builder_init@@Base>:
  404de3:	push   rbp
  404de4:	mov    rbp,rsp
  404de7:	sub    rsp,0x10
  404deb:	mov    QWORD PTR [rbp-0x8],rdi
  404def:	mov    rax,QWORD PTR [rbp-0x8]
  404df3:	mov    r8d,0x0
  404df9:	mov    ecx,0x0
  404dfe:	mov    edx,0x0
  404e03:	mov    esi,0x0
  404e08:	mov    rdi,rax
  404e0b:	call   404d3a <flatcc_builder_custom_init@@Base>
  404e10:	leave  
  404e11:	ret    

0000000000404e12 <flatcc_builder_custom_reset@@Base>:
  404e12:	push   rbp
  404e13:	mov    rbp,rsp
  404e16:	sub    rsp,0x20
  404e1a:	mov    QWORD PTR [rbp-0x18],rdi
  404e1e:	mov    DWORD PTR [rbp-0x1c],esi
  404e21:	mov    DWORD PTR [rbp-0x20],edx
  404e24:	mov    DWORD PTR [rbp-0xc],0x0
  404e2b:	jmp    404ee2 <flatcc_builder_custom_reset@@Base+0xd0>
  404e30:	mov    rax,QWORD PTR [rbp-0x18]
  404e34:	lea    rdx,[rax+0x58]
  404e38:	mov    eax,DWORD PTR [rbp-0xc]
  404e3b:	cdqe   
  404e3d:	shl    rax,0x4
  404e41:	add    rax,rdx
  404e44:	mov    QWORD PTR [rbp-0x8],rax
  404e48:	mov    rax,QWORD PTR [rbp-0x8]
  404e4c:	mov    rax,QWORD PTR [rax]
  404e4f:	test   rax,rax
  404e52:	je     404eb2 <flatcc_builder_custom_reset@@Base+0xa0>
  404e54:	cmp    DWORD PTR [rbp-0xc],0x5
  404e58:	je     404e94 <flatcc_builder_custom_reset@@Base+0x82>
  404e5a:	cmp    DWORD PTR [rbp-0x20],0x0
  404e5e:	je     404e94 <flatcc_builder_custom_reset@@Base+0x82>
  404e60:	mov    rax,QWORD PTR [rbp-0x18]
  404e64:	mov    rax,QWORD PTR [rax+0x50]
  404e68:	mov    rdx,QWORD PTR [rbp-0x18]
  404e6c:	mov    rdi,QWORD PTR [rdx+0x40]
  404e70:	mov    edx,DWORD PTR [rbp-0xc]
  404e73:	mov    rsi,QWORD PTR [rbp-0x8]
  404e77:	mov    r8d,edx
  404e7a:	mov    ecx,0x1
  404e7f:	mov    edx,0x1
  404e84:	call   rax
  404e86:	test   eax,eax
  404e88:	je     404e94 <flatcc_builder_custom_reset@@Base+0x82>
  404e8a:	mov    eax,0xffffffff
  404e8f:	jmp    405021 <flatcc_builder_custom_reset@@Base+0x20f>
  404e94:	mov    rax,QWORD PTR [rbp-0x8]
  404e98:	mov    rdx,QWORD PTR [rax+0x8]
  404e9c:	mov    rax,QWORD PTR [rbp-0x8]
  404ea0:	mov    rax,QWORD PTR [rax]
  404ea3:	mov    esi,0x0
  404ea8:	mov    rdi,rax
  404eab:	call   4030a0 <memset@plt>
  404eb0:	jmp    404ede <flatcc_builder_custom_reset@@Base+0xcc>
  404eb2:	mov    rax,QWORD PTR [rbp-0x8]
  404eb6:	mov    rax,QWORD PTR [rax+0x8]
  404eba:	test   rax,rax
  404ebd:	je     404ede <flatcc_builder_custom_reset@@Base+0xcc>
  404ebf:	lea    rcx,[rip+0x6c8a]        # 40bb50 <flatcc_builder_padding_base@@Base+0x670>
  404ec6:	mov    edx,0x1b2
  404ecb:	lea    rsi,[rip+0x680e]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  404ed2:	lea    rdi,[rip+0x6878]        # 40b751 <flatcc_builder_padding_base@@Base+0x271>
  404ed9:	call   403090 <__assert_fail@plt>
  404ede:	add    DWORD PTR [rbp-0xc],0x1
  404ee2:	cmp    DWORD PTR [rbp-0xc],0x7
  404ee6:	jle    404e30 <flatcc_builder_custom_reset@@Base+0x1e>
  404eec:	mov    rax,QWORD PTR [rbp-0x18]
  404ef0:	mov    DWORD PTR [rax+0xe0],0x0
  404efa:	mov    rax,QWORD PTR [rbp-0x18]
  404efe:	mov    eax,DWORD PTR [rax+0xe4]
  404f04:	test   eax,eax
  404f06:	je     404f16 <flatcc_builder_custom_reset@@Base+0x104>
  404f08:	mov    rax,QWORD PTR [rbp-0x18]
  404f0c:	mov    DWORD PTR [rax+0xe4],0x10
  404f16:	mov    rax,QWORD PTR [rbp-0x18]
  404f1a:	mov    WORD PTR [rax+0xe8],0x0
  404f23:	mov    rax,QWORD PTR [rbp-0x18]
  404f27:	mov    DWORD PTR [rax+0xf0],0x0
  404f31:	mov    rax,QWORD PTR [rbp-0x18]
  404f35:	mov    DWORD PTR [rax+0xf4],0x0
  404f3f:	mov    rax,QWORD PTR [rbp-0x18]
  404f43:	mov    DWORD PTR [rax+0x104],0x0
  404f4d:	mov    rax,QWORD PTR [rbp-0x18]
  404f51:	mov    DWORD PTR [rax+0x108],0x0
  404f5b:	mov    rax,QWORD PTR [rbp-0x18]
  404f5f:	mov    DWORD PTR [rax+0x20],0x0
  404f66:	mov    rax,QWORD PTR [rbp-0x18]
  404f6a:	mov    DWORD PTR [rax+0x24],0x0
  404f71:	mov    rax,QWORD PTR [rbp-0x18]
  404f75:	mov    DWORD PTR [rax+0xfc],0x0
  404f7f:	mov    rax,QWORD PTR [rbp-0x18]
  404f83:	mov    DWORD PTR [rax+0x100],0x0
  404f8d:	mov    rax,QWORD PTR [rbp-0x18]
  404f91:	mov    rdx,QWORD PTR [rax+0x68]
  404f95:	mov    rax,QWORD PTR [rbp-0x18]
  404f99:	mov    QWORD PTR [rax+0x18],rdx
  404f9d:	mov    rax,QWORD PTR [rbp-0x18]
  404fa1:	mov    rdx,QWORD PTR [rax+0x88]
  404fa8:	mov    rax,QWORD PTR [rbp-0x18]
  404fac:	mov    QWORD PTR [rax],rdx
  404faf:	mov    rax,QWORD PTR [rbp-0x18]
  404fb3:	mov    rdx,QWORD PTR [rax+0x58]
  404fb7:	mov    rax,QWORD PTR [rbp-0x18]
  404fbb:	mov    QWORD PTR [rax+0x8],rdx
  404fbf:	mov    rax,QWORD PTR [rbp-0x18]
  404fc3:	mov    QWORD PTR [rax+0x30],0x0
  404fcb:	cmp    DWORD PTR [rbp-0x1c],0x0
  404fcf:	je     404ffc <flatcc_builder_custom_reset@@Base+0x1ea>
  404fd1:	mov    rax,QWORD PTR [rbp-0x18]
  404fd5:	mov    QWORD PTR [rax+0x118],0x0
  404fe0:	mov    rax,QWORD PTR [rbp-0x18]
  404fe4:	mov    DWORD PTR [rax+0x120],0x0
  404fee:	mov    rax,QWORD PTR [rbp-0x18]
  404ff2:	mov    DWORD PTR [rax+0x124],0x0
  404ffc:	mov    rax,QWORD PTR [rbp-0x18]
  405000:	mov    eax,DWORD PTR [rax+0x128]
  405006:	test   eax,eax
  405008:	je     40501c <flatcc_builder_custom_reset@@Base+0x20a>
  40500a:	mov    rax,QWORD PTR [rbp-0x18]
  40500e:	add    rax,0x130
  405014:	mov    rdi,rax
  405017:	call   409f52 <flatcc_emitter_reset@@Base>
  40501c:	mov    eax,0x0
  405021:	leave  
  405022:	ret    

0000000000405023 <flatcc_builder_reset@@Base>:
  405023:	push   rbp
  405024:	mov    rbp,rsp
  405027:	sub    rsp,0x10
  40502b:	mov    QWORD PTR [rbp-0x8],rdi
  40502f:	mov    rax,QWORD PTR [rbp-0x8]
  405033:	mov    edx,0x0
  405038:	mov    esi,0x0
  40503d:	mov    rdi,rax
  405040:	call   404e12 <flatcc_builder_custom_reset@@Base>
  405045:	leave  
  405046:	ret    

0000000000405047 <flatcc_builder_clear@@Base>:
  405047:	push   rbp
  405048:	mov    rbp,rsp
  40504b:	sub    rsp,0x20
  40504f:	mov    QWORD PTR [rbp-0x18],rdi
  405053:	mov    DWORD PTR [rbp-0xc],0x0
  40505a:	jmp    40509e <flatcc_builder_clear@@Base+0x57>
  40505c:	mov    rax,QWORD PTR [rbp-0x18]
  405060:	lea    rdx,[rax+0x58]
  405064:	mov    eax,DWORD PTR [rbp-0xc]
  405067:	cdqe   
  405069:	shl    rax,0x4
  40506d:	add    rax,rdx
  405070:	mov    QWORD PTR [rbp-0x8],rax
  405074:	mov    rax,QWORD PTR [rbp-0x18]
  405078:	mov    rax,QWORD PTR [rax+0x50]
  40507c:	mov    rdx,QWORD PTR [rbp-0x18]
  405080:	mov    rdi,QWORD PTR [rdx+0x40]
  405084:	mov    edx,DWORD PTR [rbp-0xc]
  405087:	mov    rsi,QWORD PTR [rbp-0x8]
  40508b:	mov    r8d,edx
  40508e:	mov    ecx,0x0
  405093:	mov    edx,0x0
  405098:	call   rax
  40509a:	add    DWORD PTR [rbp-0xc],0x1
  40509e:	cmp    DWORD PTR [rbp-0xc],0x7
  4050a2:	jle    40505c <flatcc_builder_clear@@Base+0x15>
  4050a4:	mov    rax,QWORD PTR [rbp-0x18]
  4050a8:	mov    eax,DWORD PTR [rax+0x128]
  4050ae:	test   eax,eax
  4050b0:	je     4050c4 <flatcc_builder_clear@@Base+0x7d>
  4050b2:	mov    rax,QWORD PTR [rbp-0x18]
  4050b6:	add    rax,0x130
  4050bc:	mov    rdi,rax
  4050bf:	call   40a0de <flatcc_emitter_clear@@Base>
  4050c4:	mov    rax,QWORD PTR [rbp-0x18]
  4050c8:	mov    edx,0x188
  4050cd:	mov    esi,0x0
  4050d2:	mov    rdi,rax
  4050d5:	call   4030a0 <memset@plt>
  4050da:	nop
  4050db:	leave  
  4050dc:	ret    
  4050dd:	push   rbp
  4050de:	mov    rbp,rsp
  4050e1:	mov    QWORD PTR [rbp-0x8],rdi
  4050e5:	mov    eax,esi
  4050e7:	mov    WORD PTR [rbp-0xc],ax
  4050eb:	mov    rax,QWORD PTR [rbp-0x8]
  4050ef:	movzx  eax,WORD PTR [rax+0xe8]
  4050f6:	cmp    ax,WORD PTR [rbp-0xc]
  4050fa:	jae    40510b <flatcc_builder_clear@@Base+0xc4>
  4050fc:	mov    rax,QWORD PTR [rbp-0x8]
  405100:	movzx  edx,WORD PTR [rbp-0xc]
  405104:	mov    WORD PTR [rax+0xe8],dx
  40510b:	nop
  40510c:	pop    rbp
  40510d:	ret    
  40510e:	push   rbp
  40510f:	mov    rbp,rsp
  405112:	mov    QWORD PTR [rbp-0x8],rdi
  405116:	mov    eax,esi
  405118:	mov    WORD PTR [rbp-0xc],ax
  40511c:	mov    rax,QWORD PTR [rbp-0x8]
  405120:	movzx  eax,WORD PTR [rax]
  405123:	cmp    ax,WORD PTR [rbp-0xc]
  405127:	jae    405134 <flatcc_builder_clear@@Base+0xed>
  405129:	mov    rax,QWORD PTR [rbp-0x8]
  40512d:	movzx  edx,WORD PTR [rbp-0xc]
  405131:	mov    WORD PTR [rax],dx
  405134:	nop
  405135:	pop    rbp
  405136:	ret    

0000000000405137 <flatcc_builder_enter_user_frame_ptr@@Base>:
  405137:	push   rbp
  405138:	mov    rbp,rsp
  40513b:	sub    rsp,0x20
  40513f:	mov    QWORD PTR [rbp-0x18],rdi
  405143:	mov    QWORD PTR [rbp-0x20],rsi
  405147:	mov    rax,QWORD PTR [rbp-0x20]
  40514b:	add    rax,0x7
  40514f:	and    rax,0xfffffffffffffff8
  405153:	add    rax,0x8
  405157:	mov    QWORD PTR [rbp-0x20],rax
  40515b:	mov    rax,QWORD PTR [rbp-0x18]
  40515f:	mov    rdx,QWORD PTR [rax+0x180]
  405166:	mov    rcx,QWORD PTR [rbp-0x20]
  40516a:	mov    rax,QWORD PTR [rbp-0x18]
  40516e:	mov    r8d,0x0
  405174:	mov    esi,0x7
  405179:	mov    rdi,rax
  40517c:	call   40499f <flatcc_builder_default_alloc@@Base+0x50c>
  405181:	mov    QWORD PTR [rbp-0x8],rax
  405185:	cmp    QWORD PTR [rbp-0x8],0x0
  40518a:	jne    405193 <flatcc_builder_enter_user_frame_ptr@@Base+0x5c>
  40518c:	mov    eax,0x0
  405191:	jmp    4051fd <flatcc_builder_enter_user_frame_ptr@@Base+0xc6>
  405193:	mov    rdx,QWORD PTR [rbp-0x20]
  405197:	mov    rax,QWORD PTR [rbp-0x8]
  40519b:	mov    esi,0x0
  4051a0:	mov    rdi,rax
  4051a3:	call   4030a0 <memset@plt>
  4051a8:	mov    rax,QWORD PTR [rbp-0x8]
  4051ac:	lea    rdx,[rax+0x8]
  4051b0:	mov    QWORD PTR [rbp-0x8],rdx
  4051b4:	mov    rdx,QWORD PTR [rbp-0x18]
  4051b8:	mov    rdx,QWORD PTR [rdx+0x178]
  4051bf:	mov    QWORD PTR [rax],rdx
  4051c2:	mov    rax,QWORD PTR [rbp-0x18]
  4051c6:	mov    rax,QWORD PTR [rax+0x180]
  4051cd:	lea    rdx,[rax+0x8]
  4051d1:	mov    rax,QWORD PTR [rbp-0x18]
  4051d5:	mov    QWORD PTR [rax+0x178],rdx
  4051dc:	mov    rax,QWORD PTR [rbp-0x18]
  4051e0:	mov    rdx,QWORD PTR [rax+0x180]
  4051e7:	mov    rax,QWORD PTR [rbp-0x20]
  4051eb:	add    rdx,rax
  4051ee:	mov    rax,QWORD PTR [rbp-0x18]
  4051f2:	mov    QWORD PTR [rax+0x180],rdx
  4051f9:	mov    rax,QWORD PTR [rbp-0x8]
  4051fd:	leave  
  4051fe:	ret    

00000000004051ff <flatcc_builder_enter_user_frame@@Base>:
  4051ff:	push   rbp
  405200:	mov    rbp,rsp
  405203:	sub    rsp,0x20
  405207:	mov    QWORD PTR [rbp-0x18],rdi
  40520b:	mov    QWORD PTR [rbp-0x20],rsi
  40520f:	mov    rax,QWORD PTR [rbp-0x20]
  405213:	add    rax,0x7
  405217:	and    rax,0xfffffffffffffff8
  40521b:	add    rax,0x8
  40521f:	mov    QWORD PTR [rbp-0x20],rax
  405223:	mov    rax,QWORD PTR [rbp-0x18]
  405227:	mov    rdx,QWORD PTR [rax+0x180]
  40522e:	mov    rcx,QWORD PTR [rbp-0x20]
  405232:	mov    rax,QWORD PTR [rbp-0x18]
  405236:	mov    r8d,0x0
  40523c:	mov    esi,0x7
  405241:	mov    rdi,rax
  405244:	call   40499f <flatcc_builder_default_alloc@@Base+0x50c>
  405249:	mov    QWORD PTR [rbp-0x8],rax
  40524d:	cmp    QWORD PTR [rbp-0x8],0x0
  405252:	jne    40525b <flatcc_builder_enter_user_frame@@Base+0x5c>
  405254:	mov    eax,0x0
  405259:	jmp    4052cc <flatcc_builder_enter_user_frame@@Base+0xcd>
  40525b:	mov    rdx,QWORD PTR [rbp-0x20]
  40525f:	mov    rax,QWORD PTR [rbp-0x8]
  405263:	mov    esi,0x0
  405268:	mov    rdi,rax
  40526b:	call   4030a0 <memset@plt>
  405270:	mov    rax,QWORD PTR [rbp-0x8]
  405274:	lea    rdx,[rax+0x8]
  405278:	mov    QWORD PTR [rbp-0x8],rdx
  40527c:	mov    rdx,QWORD PTR [rbp-0x18]
  405280:	mov    rdx,QWORD PTR [rdx+0x178]
  405287:	mov    QWORD PTR [rax],rdx
  40528a:	mov    rax,QWORD PTR [rbp-0x18]
  40528e:	mov    rax,QWORD PTR [rax+0x180]
  405295:	lea    rdx,[rax+0x8]
  405299:	mov    rax,QWORD PTR [rbp-0x18]
  40529d:	mov    QWORD PTR [rax+0x178],rdx
  4052a4:	mov    rax,QWORD PTR [rbp-0x18]
  4052a8:	mov    rdx,QWORD PTR [rax+0x180]
  4052af:	mov    rax,QWORD PTR [rbp-0x20]
  4052b3:	add    rdx,rax
  4052b6:	mov    rax,QWORD PTR [rbp-0x18]
  4052ba:	mov    QWORD PTR [rax+0x180],rdx
  4052c1:	mov    rax,QWORD PTR [rbp-0x18]
  4052c5:	mov    rax,QWORD PTR [rax+0x178]
  4052cc:	leave  
  4052cd:	ret    

00000000004052ce <flatcc_builder_exit_user_frame@@Base>:
  4052ce:	push   rbp
  4052cf:	mov    rbp,rsp
  4052d2:	sub    rsp,0x20
  4052d6:	mov    QWORD PTR [rbp-0x18],rdi
  4052da:	mov    rax,QWORD PTR [rbp-0x18]
  4052de:	mov    rax,QWORD PTR [rax+0x178]
  4052e5:	test   rax,rax
  4052e8:	jne    405309 <flatcc_builder_exit_user_frame@@Base+0x3b>
  4052ea:	lea    rcx,[rip+0x687f]        # 40bb70 <flatcc_builder_padding_base@@Base+0x690>
  4052f1:	mov    edx,0x21e
  4052f6:	lea    rsi,[rip+0x63e3]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4052fd:	lea    rdi,[rip+0x645f]        # 40b763 <flatcc_builder_padding_base@@Base+0x283>
  405304:	call   403090 <__assert_fail@plt>
  405309:	mov    rax,QWORD PTR [rbp-0x18]
  40530d:	mov    rdx,QWORD PTR [rax+0xc8]
  405314:	mov    rax,QWORD PTR [rbp-0x18]
  405318:	mov    rax,QWORD PTR [rax+0x178]
  40531f:	mov    eax,eax
  405321:	add    rax,rdx
  405324:	mov    QWORD PTR [rbp-0x8],rax
  405328:	mov    rax,QWORD PTR [rbp-0x18]
  40532c:	mov    rax,QWORD PTR [rax+0x178]
  405333:	lea    rdx,[rax-0x8]
  405337:	mov    rax,QWORD PTR [rbp-0x18]
  40533b:	mov    QWORD PTR [rax+0x180],rdx
  405342:	mov    rax,QWORD PTR [rbp-0x8]
  405346:	mov    rdx,QWORD PTR [rax-0x8]
  40534a:	mov    rax,QWORD PTR [rbp-0x18]
  40534e:	mov    QWORD PTR [rax+0x178],rdx
  405355:	mov    rax,QWORD PTR [rbp-0x18]
  405359:	mov    rax,QWORD PTR [rax+0x178]
  405360:	leave  
  405361:	ret    

0000000000405362 <flatcc_builder_exit_user_frame_at@@Base>:
  405362:	push   rbp
  405363:	mov    rbp,rsp
  405366:	sub    rsp,0x10
  40536a:	mov    QWORD PTR [rbp-0x8],rdi
  40536e:	mov    QWORD PTR [rbp-0x10],rsi
  405372:	mov    rax,QWORD PTR [rbp-0x8]
  405376:	mov    rax,QWORD PTR [rax+0x178]
  40537d:	cmp    rax,QWORD PTR [rbp-0x10]
  405381:	jae    4053a2 <flatcc_builder_exit_user_frame_at@@Base+0x40>
  405383:	lea    rcx,[rip+0x6816]        # 40bba0 <flatcc_builder_padding_base@@Base+0x6c0>
  40538a:	mov    edx,0x227
  40538f:	lea    rsi,[rip+0x634a]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  405396:	lea    rdi,[rip+0x63e3]        # 40b780 <flatcc_builder_padding_base@@Base+0x2a0>
  40539d:	call   403090 <__assert_fail@plt>
  4053a2:	mov    rax,QWORD PTR [rbp-0x8]
  4053a6:	mov    rdx,QWORD PTR [rbp-0x10]
  4053aa:	mov    QWORD PTR [rax+0x178],rdx
  4053b1:	mov    rax,QWORD PTR [rbp-0x8]
  4053b5:	mov    rdi,rax
  4053b8:	call   4052ce <flatcc_builder_exit_user_frame@@Base>
  4053bd:	leave  
  4053be:	ret    

00000000004053bf <flatcc_builder_get_current_user_frame@@Base>:
  4053bf:	push   rbp
  4053c0:	mov    rbp,rsp
  4053c3:	mov    QWORD PTR [rbp-0x8],rdi
  4053c7:	mov    rax,QWORD PTR [rbp-0x8]
  4053cb:	mov    rax,QWORD PTR [rax+0x178]
  4053d2:	pop    rbp
  4053d3:	ret    

00000000004053d4 <flatcc_builder_get_user_frame_ptr@@Base>:
  4053d4:	push   rbp
  4053d5:	mov    rbp,rsp
  4053d8:	mov    QWORD PTR [rbp-0x8],rdi
  4053dc:	mov    QWORD PTR [rbp-0x10],rsi
  4053e0:	mov    rax,QWORD PTR [rbp-0x8]
  4053e4:	mov    rax,QWORD PTR [rax+0xc8]
  4053eb:	mov    rdx,QWORD PTR [rbp-0x10]
  4053ef:	mov    edx,edx
  4053f1:	add    rax,rdx
  4053f4:	pop    rbp
  4053f5:	ret    
  4053f6:	push   rbp
  4053f7:	mov    rbp,rsp
  4053fa:	sub    rsp,0x10
  4053fe:	mov    QWORD PTR [rbp-0x8],rdi
  405402:	mov    eax,esi
  405404:	mov    WORD PTR [rbp-0xc],ax
  405408:	mov    rax,QWORD PTR [rbp-0x8]
  40540c:	mov    eax,DWORD PTR [rax+0x104]
  405412:	lea    edx,[rax+0x1]
  405415:	mov    rax,QWORD PTR [rbp-0x8]
  405419:	mov    DWORD PTR [rax+0x104],edx
  40541f:	mov    rax,QWORD PTR [rbp-0x8]
  405423:	mov    edx,DWORD PTR [rax+0x104]
  405429:	mov    rax,QWORD PTR [rbp-0x8]
  40542d:	mov    eax,DWORD PTR [rax+0x108]
  405433:	cmp    edx,eax
  405435:	jle    405531 <flatcc_builder_get_user_frame_ptr@@Base+0x15d>
  40543b:	mov    rax,QWORD PTR [rbp-0x8]
  40543f:	mov    eax,DWORD PTR [rax+0x120]
  405445:	test   eax,eax
  405447:	jle    40546b <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  405449:	mov    rax,QWORD PTR [rbp-0x8]
  40544d:	mov    edx,DWORD PTR [rax+0x104]
  405453:	mov    rax,QWORD PTR [rbp-0x8]
  405457:	mov    eax,DWORD PTR [rax+0x120]
  40545d:	cmp    edx,eax
  40545f:	jle    40546b <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  405461:	mov    eax,0xffffffff
  405466:	jmp    4055cc <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  40546b:	mov    rax,QWORD PTR [rbp-0x8]
  40546f:	mov    eax,DWORD PTR [rax+0x104]
  405475:	sub    eax,0x1
  405478:	movsxd rdx,eax
  40547b:	mov    rax,rdx
  40547e:	shl    rax,0x3
  405482:	add    rax,rdx
  405485:	shl    rax,0x2
  405489:	mov    rdx,rax
  40548c:	mov    rax,QWORD PTR [rbp-0x8]
  405490:	mov    r8d,0x0
  405496:	mov    ecx,0x24
  40549b:	mov    esi,0x4
  4054a0:	mov    rdi,rax
  4054a3:	call   40499f <flatcc_builder_default_alloc@@Base+0x50c>
  4054a8:	mov    rdx,rax
  4054ab:	mov    rax,QWORD PTR [rbp-0x8]
  4054af:	mov    QWORD PTR [rax+0x30],rdx
  4054b3:	mov    rax,QWORD PTR [rbp-0x8]
  4054b7:	mov    rax,QWORD PTR [rax+0x30]
  4054bb:	test   rax,rax
  4054be:	jne    4054ca <flatcc_builder_get_user_frame_ptr@@Base+0xf6>
  4054c0:	mov    eax,0xffffffff
  4054c5:	jmp    4055cc <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  4054ca:	mov    rax,QWORD PTR [rbp-0x8]
  4054ce:	mov    rax,QWORD PTR [rax+0xa0]
  4054d5:	movabs rdx,0xe38e38e38e38e38f
  4054df:	mul    rdx
  4054e2:	mov    rax,rdx
  4054e5:	shr    rax,0x5
  4054e9:	mov    edx,eax
  4054eb:	mov    rax,QWORD PTR [rbp-0x8]
  4054ef:	mov    DWORD PTR [rax+0x108],edx
  4054f5:	mov    rax,QWORD PTR [rbp-0x8]
  4054f9:	mov    eax,DWORD PTR [rax+0x120]
  4054ff:	test   eax,eax
  405501:	jle    405545 <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  405503:	mov    rax,QWORD PTR [rbp-0x8]
  405507:	mov    edx,DWORD PTR [rax+0x120]
  40550d:	mov    rax,QWORD PTR [rbp-0x8]
  405511:	mov    eax,DWORD PTR [rax+0x108]
  405517:	cmp    edx,eax
  405519:	jge    405545 <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  40551b:	mov    rax,QWORD PTR [rbp-0x8]
  40551f:	mov    edx,DWORD PTR [rax+0x120]
  405525:	mov    rax,QWORD PTR [rbp-0x8]
  405529:	mov    DWORD PTR [rax+0x108],edx
  40552f:	jmp    405545 <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  405531:	mov    rax,QWORD PTR [rbp-0x8]
  405535:	mov    rax,QWORD PTR [rax+0x30]
  405539:	lea    rdx,[rax+0x24]
  40553d:	mov    rax,QWORD PTR [rbp-0x8]
  405541:	mov    QWORD PTR [rax+0x30],rdx
  405545:	mov    rax,QWORD PTR [rbp-0x8]
  405549:	mov    rax,QWORD PTR [rax+0x30]
  40554d:	mov    rdx,QWORD PTR [rbp-0x8]
  405551:	mov    edx,DWORD PTR [rdx+0x20]
  405554:	mov    DWORD PTR [rax+0x8],edx
  405557:	mov    rax,QWORD PTR [rbp-0x8]
  40555b:	mov    rax,QWORD PTR [rax+0x30]
  40555f:	mov    rdx,QWORD PTR [rbp-0x8]
  405563:	movzx  edx,WORD PTR [rdx+0xea]
  40556a:	mov    WORD PTR [rax+0xc],dx
  40556e:	mov    rax,QWORD PTR [rbp-0x8]
  405572:	movzx  edx,WORD PTR [rbp-0xc]
  405576:	mov    WORD PTR [rax+0xea],dx
  40557d:	mov    rax,QWORD PTR [rbp-0x8]
  405581:	mov    rax,QWORD PTR [rax+0x30]
  405585:	mov    rdx,QWORD PTR [rbp-0x8]
  405589:	mov    edx,DWORD PTR [rdx+0x28]
  40558c:	mov    DWORD PTR [rax],edx
  40558e:	mov    rax,QWORD PTR [rbp-0x8]
  405592:	mov    rax,QWORD PTR [rax+0x30]
  405596:	mov    DWORD PTR [rax+0x4],0xfffffffc
  40559d:	mov    rax,QWORD PTR [rbp-0x8]
  4055a1:	mov    edx,DWORD PTR [rax+0x28]
  4055a4:	mov    rax,QWORD PTR [rbp-0x8]
  4055a8:	mov    eax,DWORD PTR [rax+0x20]
  4055ab:	add    eax,edx
  4055ad:	add    eax,0x7
  4055b0:	and    eax,0xfffffff8
  4055b3:	mov    edx,eax
  4055b5:	mov    rax,QWORD PTR [rbp-0x8]
  4055b9:	mov    DWORD PTR [rax+0x28],edx
  4055bc:	mov    rax,QWORD PTR [rbp-0x8]
  4055c0:	mov    DWORD PTR [rax+0x20],0x0
  4055c7:	mov    eax,0x0
  4055cc:	leave  
  4055cd:	ret    
  4055ce:	push   rbp
  4055cf:	mov    rbp,rsp
  4055d2:	sub    rsp,0x10
  4055d6:	mov    QWORD PTR [rbp-0x8],rdi
  4055da:	mov    rax,QWORD PTR [rbp-0x8]
  4055de:	mov    eax,DWORD PTR [rax+0x20]
  4055e1:	mov    edx,eax
  4055e3:	mov    rax,QWORD PTR [rbp-0x8]
  4055e7:	mov    rax,QWORD PTR [rax+0x18]
  4055eb:	mov    esi,0x0
  4055f0:	mov    rdi,rax
  4055f3:	call   4030a0 <memset@plt>
  4055f8:	mov    rax,QWORD PTR [rbp-0x8]
  4055fc:	mov    rax,QWORD PTR [rax+0x30]
  405600:	mov    edx,DWORD PTR [rax+0x8]
  405603:	mov    rax,QWORD PTR [rbp-0x8]
  405607:	mov    DWORD PTR [rax+0x20],edx
  40560a:	mov    rax,QWORD PTR [rbp-0x8]
  40560e:	mov    rax,QWORD PTR [rax+0x30]
  405612:	mov    edx,DWORD PTR [rax]
  405614:	mov    rax,QWORD PTR [rbp-0x8]
  405618:	mov    DWORD PTR [rax+0x28],edx
  40561b:	mov    rax,QWORD PTR [rbp-0x8]
  40561f:	mov    rax,QWORD PTR [rax+0x30]
  405623:	mov    edx,DWORD PTR [rax+0x4]
  405626:	mov    rax,QWORD PTR [rbp-0x8]
  40562a:	mov    esi,edx
  40562c:	mov    rdi,rax
  40562f:	call   404600 <flatcc_builder_default_alloc@@Base+0x16d>
  405634:	mov    rax,QWORD PTR [rbp-0x8]
  405638:	movzx  eax,WORD PTR [rax+0xea]
  40563f:	movzx  edx,ax
  405642:	mov    rax,QWORD PTR [rbp-0x8]
  405646:	mov    esi,edx
  405648:	mov    rdi,rax
  40564b:	call   4050dd <flatcc_builder_clear@@Base+0x96>
  405650:	mov    rax,QWORD PTR [rbp-0x8]
  405654:	mov    rax,QWORD PTR [rax+0x30]
  405658:	movzx  edx,WORD PTR [rax+0xc]
  40565c:	mov    rax,QWORD PTR [rbp-0x8]
  405660:	mov    WORD PTR [rax+0xea],dx
  405667:	mov    rax,QWORD PTR [rbp-0x8]
  40566b:	mov    rax,QWORD PTR [rax+0x30]
  40566f:	lea    rdx,[rax-0x24]
  405673:	mov    rax,QWORD PTR [rbp-0x8]
  405677:	mov    QWORD PTR [rax+0x30],rdx
  40567b:	mov    rax,QWORD PTR [rbp-0x8]
  40567f:	mov    eax,DWORD PTR [rax+0x104]
  405685:	lea    edx,[rax-0x1]
  405688:	mov    rax,QWORD PTR [rbp-0x8]
  40568c:	mov    DWORD PTR [rax+0x104],edx
  405692:	nop
  405693:	leave  
  405694:	ret    
  405695:	push   rbp
  405696:	mov    rbp,rsp
  405699:	mov    QWORD PTR [rbp-0x8],rdi
  40569d:	mov    DWORD PTR [rbp-0xc],esi
  4056a0:	mov    eax,edx
  4056a2:	mov    WORD PTR [rbp-0x10],ax
  4056a6:	mov    rax,QWORD PTR [rbp-0x8]
  4056aa:	mov    eax,DWORD PTR [rax+0xf0]
  4056b0:	sub    eax,DWORD PTR [rbp-0xc]
  4056b3:	movzx  edx,WORD PTR [rbp-0x10]
  4056b7:	sub    edx,0x1
  4056ba:	and    eax,edx
  4056bc:	pop    rbp
  4056bd:	ret    
  4056be:	push   rbp
  4056bf:	mov    rbp,rsp
  4056c2:	mov    QWORD PTR [rbp-0x8],rdi
  4056c6:	mov    eax,esi
  4056c8:	mov    WORD PTR [rbp-0xc],ax
  4056cc:	mov    rax,QWORD PTR [rbp-0x8]
  4056d0:	mov    eax,DWORD PTR [rax+0xf4]
  4056d6:	movzx  edx,WORD PTR [rbp-0xc]
  4056da:	sub    edx,0x1
  4056dd:	and    eax,edx
  4056df:	pop    rbp
  4056e0:	ret    
  4056e1:	push   rbp
  4056e2:	mov    rbp,rsp
  4056e5:	sub    rsp,0x20
  4056e9:	mov    QWORD PTR [rbp-0x18],rdi
  4056ed:	mov    QWORD PTR [rbp-0x20],rsi
  4056f1:	mov    rax,QWORD PTR [rbp-0x18]
  4056f5:	mov    edx,DWORD PTR [rax+0xf0]
  4056fb:	mov    rax,QWORD PTR [rbp-0x20]
  4056ff:	mov    rax,QWORD PTR [rax]
  405702:	sub    edx,eax
  405704:	mov    eax,edx
  405706:	mov    DWORD PTR [rbp-0x4],eax
  405709:	mov    rax,QWORD PTR [rbp-0x20]
  40570d:	mov    rax,QWORD PTR [rax]
  405710:	cmp    rax,0x10
  405714:	jbe    40572b <flatcc_builder_get_user_frame_ptr@@Base+0x357>
  405716:	mov    rax,QWORD PTR [rbp-0x20]
  40571a:	mov    rax,QWORD PTR [rax]
  40571d:	lea    rdx,[rax-0x10]
  405721:	mov    eax,0xffffffff
  405726:	cmp    rdx,rax
  405729:	ja     40573a <flatcc_builder_get_user_frame_ptr@@Base+0x366>
  40572b:	mov    rax,QWORD PTR [rbp-0x18]
  40572f:	mov    eax,DWORD PTR [rax+0xf0]
  405735:	cmp    eax,DWORD PTR [rbp-0x4]
  405738:	jg     405759 <flatcc_builder_get_user_frame_ptr@@Base+0x385>
  40573a:	lea    rcx,[rip+0x64a7]        # 40bbe8 <flatcc_builder_padding_base@@Base+0x708>
  405741:	mov    edx,0x287
  405746:	lea    rsi,[rip+0x5f93]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40574d:	lea    rdi,[rip+0x5fec]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  405754:	call   403090 <__assert_fail@plt>
  405759:	mov    rax,QWORD PTR [rbp-0x18]
  40575d:	mov    rax,QWORD PTR [rax+0x48]
  405761:	mov    rdx,QWORD PTR [rbp-0x20]
  405765:	mov    r8,QWORD PTR [rdx]
  405768:	mov    rdx,QWORD PTR [rbp-0x20]
  40576c:	mov    edx,DWORD PTR [rdx+0x8]
  40576f:	mov    rcx,QWORD PTR [rbp-0x20]
  405773:	lea    rsi,[rcx+0x10]
  405777:	mov    rcx,QWORD PTR [rbp-0x18]
  40577b:	mov    rdi,QWORD PTR [rcx+0x38]
  40577f:	mov    ecx,DWORD PTR [rbp-0x4]
  405782:	call   rax
  405784:	test   eax,eax
  405786:	je     4057a7 <flatcc_builder_get_user_frame_ptr@@Base+0x3d3>
  405788:	lea    rcx,[rip+0x6459]        # 40bbe8 <flatcc_builder_padding_base@@Base+0x708>
  40578f:	mov    edx,0x28b
  405794:	lea    rsi,[rip+0x5f45]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40579b:	lea    rdi,[rip+0x5f9e]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  4057a2:	call   403090 <__assert_fail@plt>
  4057a7:	mov    rax,QWORD PTR [rbp-0x18]
  4057ab:	mov    edx,DWORD PTR [rbp-0x4]
  4057ae:	mov    DWORD PTR [rax+0xf0],edx
  4057b4:	mov    rax,QWORD PTR [rbp-0x18]
  4057b8:	mov    eax,DWORD PTR [rax+0xf0]
  4057be:	leave  
  4057bf:	ret    
  4057c0:	push   rbp
  4057c1:	mov    rbp,rsp
  4057c4:	sub    rsp,0x20
  4057c8:	mov    QWORD PTR [rbp-0x18],rdi
  4057cc:	mov    QWORD PTR [rbp-0x20],rsi
  4057d0:	mov    rax,QWORD PTR [rbp-0x18]
  4057d4:	mov    eax,DWORD PTR [rax+0xf4]
  4057da:	mov    DWORD PTR [rbp-0x4],eax
  4057dd:	mov    rax,QWORD PTR [rbp-0x20]
  4057e1:	mov    rax,QWORD PTR [rax]
  4057e4:	mov    edx,eax
  4057e6:	mov    eax,DWORD PTR [rbp-0x4]
  4057e9:	add    edx,eax
  4057eb:	mov    rax,QWORD PTR [rbp-0x18]
  4057ef:	mov    DWORD PTR [rax+0xf4],edx
  4057f5:	mov    rax,QWORD PTR [rbp-0x18]
  4057f9:	mov    eax,DWORD PTR [rax+0xf4]
  4057ff:	cmp    eax,DWORD PTR [rbp-0x4]
  405802:	jge    405823 <flatcc_builder_get_user_frame_ptr@@Base+0x44f>
  405804:	lea    rcx,[rip+0x63cd]        # 40bbd8 <flatcc_builder_padding_base@@Base+0x6f8>
  40580b:	mov    edx,0x2a1
  405810:	lea    rsi,[rip+0x5ec9]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  405817:	lea    rdi,[rip+0x5f22]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  40581e:	call   403090 <__assert_fail@plt>
  405823:	mov    rax,QWORD PTR [rbp-0x18]
  405827:	mov    rax,QWORD PTR [rax+0x48]
  40582b:	mov    rdx,QWORD PTR [rbp-0x20]
  40582f:	mov    r8,QWORD PTR [rdx]
  405832:	mov    rdx,QWORD PTR [rbp-0x20]
  405836:	mov    edx,DWORD PTR [rdx+0x8]
  405839:	mov    rcx,QWORD PTR [rbp-0x20]
  40583d:	lea    rsi,[rcx+0x10]
  405841:	mov    rcx,QWORD PTR [rbp-0x18]
  405845:	mov    rdi,QWORD PTR [rcx+0x38]
  405849:	mov    ecx,DWORD PTR [rbp-0x4]
  40584c:	call   rax
  40584e:	test   eax,eax
  405850:	je     405871 <flatcc_builder_get_user_frame_ptr@@Base+0x49d>
  405852:	lea    rcx,[rip+0x637f]        # 40bbd8 <flatcc_builder_padding_base@@Base+0x6f8>
  405859:	mov    edx,0x2a5
  40585e:	lea    rsi,[rip+0x5e7b]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  405865:	lea    rdi,[rip+0x5ed4]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  40586c:	call   403090 <__assert_fail@plt>
  405871:	mov    eax,DWORD PTR [rbp-0x4]
  405874:	add    eax,0x1
  405877:	leave  
  405878:	ret    
  405879:	push   rbp
  40587a:	mov    rbp,rsp
  40587d:	sub    rsp,0xd0
  405884:	mov    QWORD PTR [rbp-0xb8],rdi
  40588b:	mov    QWORD PTR [rbp-0xc0],rsi
  405892:	mov    eax,edx
  405894:	mov    DWORD PTR [rbp-0xc8],ecx
  40589a:	mov    WORD PTR [rbp-0xc4],ax
  4058a1:	mov    rax,QWORD PTR fs:0x28
  4058aa:	mov    QWORD PTR [rbp-0x8],rax
  4058ae:	xor    eax,eax
  4058b0:	cmp    WORD PTR [rbp-0xc4],0x0
  4058b8:	jne    4058e4 <flatcc_builder_get_user_frame_ptr@@Base+0x510>
  4058ba:	mov    rax,QWORD PTR [rbp-0xb8]
  4058c1:	movzx  eax,WORD PTR [rax+0xec]
  4058c8:	test   ax,ax
  4058cb:	je     4058dd <flatcc_builder_get_user_frame_ptr@@Base+0x509>
  4058cd:	mov    rax,QWORD PTR [rbp-0xb8]
  4058d4:	movzx  eax,WORD PTR [rax+0xec]
  4058db:	jmp    4058eb <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  4058dd:	mov    eax,0x1
  4058e2:	jmp    4058eb <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  4058e4:	movzx  eax,WORD PTR [rbp-0xc4]
  4058eb:	mov    WORD PTR [rbp-0xc4],ax
  4058f2:	mov    rax,QWORD PTR [rbp-0xc0]
  4058f9:	mov    esi,0x4
  4058fe:	mov    rdi,rax
  405901:	call   40510e <flatcc_builder_clear@@Base+0xc7>
  405906:	movzx  edx,WORD PTR [rbp-0xc4]
  40590d:	mov    rax,QWORD PTR [rbp-0xc0]
  405914:	mov    esi,edx
  405916:	mov    rdi,rax
  405919:	call   40510e <flatcc_builder_clear@@Base+0xc7>
  40591e:	cmp    DWORD PTR [rbp-0xc8],0x0
  405925:	jne    405a1b <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  40592b:	movzx  edx,WORD PTR [rbp-0xc4]
  405932:	mov    rax,QWORD PTR [rbp-0xb8]
  405939:	mov    esi,edx
  40593b:	mov    rdi,rax
  40593e:	call   4056be <flatcc_builder_get_user_frame_ptr@@Base+0x2ea>
  405943:	mov    eax,eax
  405945:	mov    QWORD PTR [rbp-0xa8],rax
  40594c:	cmp    QWORD PTR [rbp-0xa8],0x0
  405954:	je     405a1b <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  40595a:	mov    QWORD PTR [rbp-0xa0],0x0
  405965:	mov    DWORD PTR [rbp-0x98],0x0
  40596f:	cmp    QWORD PTR [rbp-0xa8],0x0
  405977:	je     4059df <flatcc_builder_get_user_frame_ptr@@Base+0x60b>
  405979:	mov    rdx,QWORD PTR [rbp-0xa0]
  405980:	mov    rax,QWORD PTR [rbp-0xa8]
  405987:	add    rax,rdx
  40598a:	mov    QWORD PTR [rbp-0xa0],rax
  405991:	mov    eax,DWORD PTR [rbp-0x98]
  405997:	cdqe   
  405999:	shl    rax,0x4
  40599d:	add    rax,rbp
  4059a0:	sub    rax,0x90
  4059a6:	mov    rdx,0x40b4e0
  4059ad:	mov    QWORD PTR [rax],rdx
  4059b0:	mov    eax,DWORD PTR [rbp-0x98]
  4059b6:	cdqe   
  4059b8:	shl    rax,0x4
  4059bc:	add    rax,rbp
  4059bf:	lea    rdx,[rax-0x88]
  4059c6:	mov    rax,QWORD PTR [rbp-0xa8]
  4059cd:	mov    QWORD PTR [rdx],rax
  4059d0:	mov    eax,DWORD PTR [rbp-0x98]
  4059d6:	add    eax,0x1
  4059d9:	mov    DWORD PTR [rbp-0x98],eax
  4059df:	lea    rdx,[rbp-0xa0]
  4059e6:	mov    rax,QWORD PTR [rbp-0xb8]
  4059ed:	mov    rsi,rdx
  4059f0:	mov    rdi,rax
  4059f3:	call   4057c0 <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  4059f8:	test   eax,eax
  4059fa:	jne    405a1b <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  4059fc:	lea    rcx,[rip+0x61c5]        # 40bbc8 <flatcc_builder_padding_base@@Base+0x6e8>
  405a03:	mov    edx,0x2be
  405a08:	lea    rsi,[rip+0x5cd1]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  405a0f:	lea    rdi,[rip+0x5d2a]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  405a16:	call   403090 <__assert_fail@plt>
  405a1b:	mov    eax,0x0
  405a20:	mov    rcx,QWORD PTR [rbp-0x8]
  405a24:	xor    rcx,QWORD PTR fs:0x28
  405a2d:	je     405a34 <flatcc_builder_get_user_frame_ptr@@Base+0x660>
  405a2f:	call   403070 <__stack_chk_fail@plt>
  405a34:	leave  
  405a35:	ret    

0000000000405a36 <flatcc_builder_embed_buffer@@Base>:
  405a36:	push   rbp
  405a37:	mov    rbp,rsp
  405a3a:	sub    rsp,0xe0
  405a41:	mov    QWORD PTR [rbp-0xb8],rdi
  405a48:	mov    eax,esi
  405a4a:	mov    QWORD PTR [rbp-0xc8],rdx
  405a51:	mov    QWORD PTR [rbp-0xd0],rcx
  405a58:	mov    edx,r8d
  405a5b:	mov    DWORD PTR [rbp-0xd4],r9d
  405a62:	mov    WORD PTR [rbp-0xbc],ax
  405a69:	mov    WORD PTR [rbp-0xc0],dx
  405a70:	mov    rax,QWORD PTR fs:0x28
  405a79:	mov    QWORD PTR [rbp-0x8],rax
  405a7d:	xor    eax,eax
  405a7f:	mov    eax,DWORD PTR [rbp-0xd4]
  405a85:	and    eax,0x2
  405a88:	mov    DWORD PTR [rbp-0xa8],eax
  405a8e:	mov    rax,QWORD PTR [rbp-0xb8]
  405a95:	mov    eax,DWORD PTR [rax+0x100]
  405a9b:	test   eax,eax
  405a9d:	setne  al
  405aa0:	movzx  ecx,al
  405aa3:	movzx  edx,WORD PTR [rbp-0xbc]
  405aaa:	lea    rsi,[rbp-0xc0]
  405ab1:	mov    rax,QWORD PTR [rbp-0xb8]
  405ab8:	mov    rdi,rax
  405abb:	call   405879 <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  405ac0:	test   eax,eax
  405ac2:	je     405ace <flatcc_builder_embed_buffer@@Base+0x98>
  405ac4:	mov    eax,0x0
  405ac9:	jmp    405ca8 <flatcc_builder_embed_buffer@@Base+0x272>
  405ace:	movzx  eax,WORD PTR [rbp-0xc0]
  405ad5:	movzx  edx,ax
  405ad8:	mov    rax,QWORD PTR [rbp-0xd0]
  405adf:	mov    ecx,eax
  405ae1:	cmp    DWORD PTR [rbp-0xa8],0x0
  405ae8:	je     405af1 <flatcc_builder_embed_buffer@@Base+0xbb>
  405aea:	mov    eax,0x4
  405aef:	jmp    405af6 <flatcc_builder_embed_buffer@@Base+0xc0>
  405af1:	mov    eax,0x0
  405af6:	add    ecx,eax
  405af8:	mov    rax,QWORD PTR [rbp-0xb8]
  405aff:	mov    esi,ecx
  405b01:	mov    rdi,rax
  405b04:	call   405695 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  405b09:	mov    DWORD PTR [rbp-0xa4],eax
  405b0f:	mov    rax,QWORD PTR [rbp-0xd0]
  405b16:	mov    edx,eax
  405b18:	mov    eax,DWORD PTR [rbp-0xa4]
  405b1e:	add    eax,edx
  405b20:	mov    edi,eax
  405b22:	call   4043cd <main@@Base+0xc2>
  405b27:	mov    DWORD PTR [rbp-0xac],eax
  405b2d:	mov    QWORD PTR [rbp-0xa0],0x0
  405b38:	mov    DWORD PTR [rbp-0x98],0x0
  405b42:	mov    rax,QWORD PTR [rbp-0xb8]
  405b49:	mov    eax,DWORD PTR [rax+0x100]
  405b4f:	test   eax,eax
  405b51:	je     405bb0 <flatcc_builder_embed_buffer@@Base+0x17a>
  405b53:	mov    rax,QWORD PTR [rbp-0xa0]
  405b5a:	add    rax,0x4
  405b5e:	mov    QWORD PTR [rbp-0xa0],rax
  405b65:	mov    eax,DWORD PTR [rbp-0x98]
  405b6b:	cdqe   
  405b6d:	shl    rax,0x4
  405b71:	add    rax,rbp
  405b74:	lea    rdx,[rax-0x90]
  405b7b:	lea    rax,[rbp-0xac]
  405b82:	mov    QWORD PTR [rdx],rax
  405b85:	mov    eax,DWORD PTR [rbp-0x98]
  405b8b:	cdqe   
  405b8d:	shl    rax,0x4
  405b91:	add    rax,rbp
  405b94:	sub    rax,0x88
  405b9a:	mov    QWORD PTR [rax],0x4
  405ba1:	mov    eax,DWORD PTR [rbp-0x98]
  405ba7:	add    eax,0x1
  405baa:	mov    DWORD PTR [rbp-0x98],eax
  405bb0:	cmp    QWORD PTR [rbp-0xd0],0x0
  405bb8:	je     405c21 <flatcc_builder_embed_buffer@@Base+0x1eb>
  405bba:	mov    rdx,QWORD PTR [rbp-0xa0]
  405bc1:	mov    rax,QWORD PTR [rbp-0xd0]
  405bc8:	add    rax,rdx
  405bcb:	mov    QWORD PTR [rbp-0xa0],rax
  405bd2:	mov    eax,DWORD PTR [rbp-0x98]
  405bd8:	cdqe   
  405bda:	shl    rax,0x4
  405bde:	add    rax,rbp
  405be1:	lea    rdx,[rax-0x90]
  405be8:	mov    rax,QWORD PTR [rbp-0xc8]
  405bef:	mov    QWORD PTR [rdx],rax
  405bf2:	mov    eax,DWORD PTR [rbp-0x98]
  405bf8:	cdqe   
  405bfa:	shl    rax,0x4
  405bfe:	add    rax,rbp
  405c01:	lea    rdx,[rax-0x88]
  405c08:	mov    rax,QWORD PTR [rbp-0xd0]
  405c0f:	mov    QWORD PTR [rdx],rax
  405c12:	mov    eax,DWORD PTR [rbp-0x98]
  405c18:	add    eax,0x1
  405c1b:	mov    DWORD PTR [rbp-0x98],eax
  405c21:	cmp    DWORD PTR [rbp-0xa4],0x0
  405c28:	je     405c8f <flatcc_builder_embed_buffer@@Base+0x259>
  405c2a:	mov    rdx,QWORD PTR [rbp-0xa0]
  405c31:	mov    eax,DWORD PTR [rbp-0xa4]
  405c37:	add    rax,rdx
  405c3a:	mov    QWORD PTR [rbp-0xa0],rax
  405c41:	mov    eax,DWORD PTR [rbp-0x98]
  405c47:	cdqe   
  405c49:	shl    rax,0x4
  405c4d:	add    rax,rbp
  405c50:	sub    rax,0x90
  405c56:	mov    rdx,0x40b4e0
  405c5d:	mov    QWORD PTR [rax],rdx
  405c60:	mov    edx,DWORD PTR [rbp-0x98]
  405c66:	mov    eax,DWORD PTR [rbp-0xa4]
  405c6c:	movsxd rdx,edx
  405c6f:	shl    rdx,0x4
  405c73:	add    rdx,rbp
  405c76:	sub    rdx,0x88
  405c7d:	mov    QWORD PTR [rdx],rax
  405c80:	mov    eax,DWORD PTR [rbp-0x98]
  405c86:	add    eax,0x1
  405c89:	mov    DWORD PTR [rbp-0x98],eax
  405c8f:	lea    rdx,[rbp-0xa0]
  405c96:	mov    rax,QWORD PTR [rbp-0xb8]
  405c9d:	mov    rsi,rdx
  405ca0:	mov    rdi,rax
  405ca3:	call   4056e1 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  405ca8:	mov    rdi,QWORD PTR [rbp-0x8]
  405cac:	xor    rdi,QWORD PTR fs:0x28
  405cb5:	je     405cbc <flatcc_builder_embed_buffer@@Base+0x286>
  405cb7:	call   403070 <__stack_chk_fail@plt>
  405cbc:	leave  
  405cbd:	ret    

0000000000405cbe <flatcc_builder_create_buffer@@Base>:
  405cbe:	push   rbp
  405cbf:	mov    rbp,rsp
  405cc2:	sub    rsp,0xf0
  405cc9:	mov    QWORD PTR [rbp-0xd8],rdi
  405cd0:	mov    QWORD PTR [rbp-0xe0],rsi
  405cd7:	mov    eax,edx
  405cd9:	mov    DWORD PTR [rbp-0xe8],ecx
  405cdf:	mov    edx,r8d
  405ce2:	mov    DWORD PTR [rbp-0xf0],r9d
  405ce9:	mov    WORD PTR [rbp-0xe4],ax
  405cf0:	mov    WORD PTR [rbp-0xec],dx
  405cf7:	mov    rax,QWORD PTR fs:0x28
  405d00:	mov    QWORD PTR [rbp-0x8],rax
  405d04:	xor    eax,eax
  405d06:	mov    DWORD PTR [rbp-0xb8],0x0
  405d10:	mov    DWORD PTR [rbp-0xbc],0x0
  405d1a:	mov    eax,DWORD PTR [rbp-0xf0]
  405d20:	and    eax,0x1
  405d23:	test   eax,eax
  405d25:	setne  al
  405d28:	movzx  eax,al
  405d2b:	mov    DWORD PTR [rbp-0xb4],eax
  405d31:	mov    eax,DWORD PTR [rbp-0xf0]
  405d37:	and    eax,0x2
  405d3a:	test   eax,eax
  405d3c:	setne  al
  405d3f:	movzx  eax,al
  405d42:	mov    DWORD PTR [rbp-0xb0],eax
  405d48:	movzx  edx,WORD PTR [rbp-0xe4]
  405d4f:	mov    ecx,DWORD PTR [rbp-0xb4]
  405d55:	lea    rsi,[rbp-0xec]
  405d5c:	mov    rax,QWORD PTR [rbp-0xd8]
  405d63:	mov    rdi,rax
  405d66:	call   405879 <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  405d6b:	test   eax,eax
  405d6d:	je     405d79 <flatcc_builder_create_buffer@@Base+0xbb>
  405d6f:	mov    eax,0x0
  405d74:	jmp    4060df <flatcc_builder_create_buffer@@Base+0x421>
  405d79:	movzx  eax,WORD PTR [rbp-0xec]
  405d80:	movzx  edx,ax
  405d83:	mov    rax,QWORD PTR [rbp-0xd8]
  405d8a:	mov    esi,edx
  405d8c:	mov    rdi,rax
  405d8f:	call   4050dd <flatcc_builder_clear@@Base+0x96>
  405d94:	cmp    QWORD PTR [rbp-0xe0],0x0
  405d9c:	je     405dd3 <flatcc_builder_create_buffer@@Base+0x115>
  405d9e:	mov    rax,QWORD PTR [rbp-0xe0]
  405da5:	mov    eax,DWORD PTR [rax]
  405da7:	mov    DWORD PTR [rbp-0xbc],eax
  405dad:	mov    eax,DWORD PTR [rbp-0xbc]
  405db3:	mov    edi,eax
  405db5:	call   4043e8 <main@@Base+0xdd>
  405dba:	mov    DWORD PTR [rbp-0xbc],eax
  405dc0:	mov    eax,DWORD PTR [rbp-0xbc]
  405dc6:	mov    edi,eax
  405dc8:	call   4043cd <main@@Base+0xc2>
  405dcd:	mov    DWORD PTR [rbp-0xbc],eax
  405dd3:	mov    eax,DWORD PTR [rbp-0xbc]
  405dd9:	test   eax,eax
  405ddb:	je     405de4 <flatcc_builder_create_buffer@@Base+0x126>
  405ddd:	mov    eax,0x4
  405de2:	jmp    405de9 <flatcc_builder_create_buffer@@Base+0x12b>
  405de4:	mov    eax,0x0
  405de9:	mov    DWORD PTR [rbp-0xb8],eax
  405def:	movzx  eax,WORD PTR [rbp-0xec]
  405df6:	movzx  edx,ax
  405df9:	cmp    DWORD PTR [rbp-0xb0],0x0
  405e00:	je     405e09 <flatcc_builder_create_buffer@@Base+0x14b>
  405e02:	mov    ecx,0x4
  405e07:	jmp    405e0e <flatcc_builder_create_buffer@@Base+0x150>
  405e09:	mov    ecx,0x0
  405e0e:	mov    eax,DWORD PTR [rbp-0xb8]
  405e14:	add    eax,ecx
  405e16:	lea    ecx,[rax+0x4]
  405e19:	mov    rax,QWORD PTR [rbp-0xd8]
  405e20:	mov    esi,ecx
  405e22:	mov    rdi,rax
  405e25:	call   405695 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  405e2a:	mov    DWORD PTR [rbp-0xac],eax
  405e30:	mov    QWORD PTR [rbp-0xa0],0x0
  405e3b:	mov    DWORD PTR [rbp-0x98],0x0
  405e45:	cmp    DWORD PTR [rbp-0xb4],0x0
  405e4c:	jne    405e57 <flatcc_builder_create_buffer@@Base+0x199>
  405e4e:	cmp    DWORD PTR [rbp-0xb0],0x0
  405e55:	je     405eb4 <flatcc_builder_create_buffer@@Base+0x1f6>
  405e57:	mov    rax,QWORD PTR [rbp-0xa0]
  405e5e:	add    rax,0x4
  405e62:	mov    QWORD PTR [rbp-0xa0],rax
  405e69:	mov    eax,DWORD PTR [rbp-0x98]
  405e6f:	cdqe   
  405e71:	shl    rax,0x4
  405e75:	add    rax,rbp
  405e78:	lea    rdx,[rax-0x90]
  405e7f:	lea    rax,[rbp-0xc0]
  405e86:	mov    QWORD PTR [rdx],rax
  405e89:	mov    eax,DWORD PTR [rbp-0x98]
  405e8f:	cdqe   
  405e91:	shl    rax,0x4
  405e95:	add    rax,rbp
  405e98:	sub    rax,0x88
  405e9e:	mov    QWORD PTR [rax],0x4
  405ea5:	mov    eax,DWORD PTR [rbp-0x98]
  405eab:	add    eax,0x1
  405eae:	mov    DWORD PTR [rbp-0x98],eax
  405eb4:	mov    rax,QWORD PTR [rbp-0xa0]
  405ebb:	add    rax,0x4
  405ebf:	mov    QWORD PTR [rbp-0xa0],rax
  405ec6:	mov    eax,DWORD PTR [rbp-0x98]
  405ecc:	cdqe   
  405ece:	shl    rax,0x4
  405ed2:	add    rax,rbp
  405ed5:	lea    rdx,[rax-0x90]
  405edc:	lea    rax,[rbp-0xc4]
  405ee3:	mov    QWORD PTR [rdx],rax
  405ee6:	mov    eax,DWORD PTR [rbp-0x98]
  405eec:	cdqe   
  405eee:	shl    rax,0x4
  405ef2:	add    rax,rbp
  405ef5:	sub    rax,0x88
  405efb:	mov    QWORD PTR [rax],0x4
  405f02:	mov    eax,DWORD PTR [rbp-0x98]
  405f08:	add    eax,0x1
  405f0b:	mov    DWORD PTR [rbp-0x98],eax
  405f11:	cmp    DWORD PTR [rbp-0xb8],0x0
  405f18:	je     405f80 <flatcc_builder_create_buffer@@Base+0x2c2>
  405f1a:	mov    rdx,QWORD PTR [rbp-0xa0]
  405f21:	mov    eax,DWORD PTR [rbp-0xb8]
  405f27:	add    rax,rdx
  405f2a:	mov    QWORD PTR [rbp-0xa0],rax
  405f31:	mov    eax,DWORD PTR [rbp-0x98]
  405f37:	cdqe   
  405f39:	shl    rax,0x4
  405f3d:	add    rax,rbp
  405f40:	lea    rdx,[rax-0x90]
  405f47:	lea    rax,[rbp-0xbc]
  405f4e:	mov    QWORD PTR [rdx],rax
  405f51:	mov    edx,DWORD PTR [rbp-0x98]
  405f57:	mov    eax,DWORD PTR [rbp-0xb8]
  405f5d:	movsxd rdx,edx
  405f60:	shl    rdx,0x4
  405f64:	add    rdx,rbp
  405f67:	sub    rdx,0x88
  405f6e:	mov    QWORD PTR [rdx],rax
  405f71:	mov    eax,DWORD PTR [rbp-0x98]
  405f77:	add    eax,0x1
  405f7a:	mov    DWORD PTR [rbp-0x98],eax
  405f80:	cmp    DWORD PTR [rbp-0xac],0x0
  405f87:	je     405fee <flatcc_builder_create_buffer@@Base+0x330>
  405f89:	mov    rdx,QWORD PTR [rbp-0xa0]
  405f90:	mov    eax,DWORD PTR [rbp-0xac]
  405f96:	add    rax,rdx
  405f99:	mov    QWORD PTR [rbp-0xa0],rax
  405fa0:	mov    eax,DWORD PTR [rbp-0x98]
  405fa6:	cdqe   
  405fa8:	shl    rax,0x4
  405fac:	add    rax,rbp
  405faf:	sub    rax,0x90
  405fb5:	mov    rdx,0x40b4e0
  405fbc:	mov    QWORD PTR [rax],rdx
  405fbf:	mov    edx,DWORD PTR [rbp-0x98]
  405fc5:	mov    eax,DWORD PTR [rbp-0xac]
  405fcb:	movsxd rdx,edx
  405fce:	shl    rdx,0x4
  405fd2:	add    rdx,rbp
  405fd5:	sub    rdx,0x88
  405fdc:	mov    QWORD PTR [rdx],rax
  405fdf:	mov    eax,DWORD PTR [rbp-0x98]
  405fe5:	add    eax,0x1
  405fe8:	mov    DWORD PTR [rbp-0x98],eax
  405fee:	mov    rax,QWORD PTR [rbp-0xd8]
  405ff5:	mov    eax,DWORD PTR [rax+0xf0]
  405ffb:	mov    edx,eax
  405ffd:	mov    rax,QWORD PTR [rbp-0xa0]
  406004:	sub    edx,eax
  406006:	mov    eax,edx
  406008:	cmp    DWORD PTR [rbp-0xb4],0x0
  40600f:	jne    40601a <flatcc_builder_create_buffer@@Base+0x35c>
  406011:	cmp    DWORD PTR [rbp-0xb0],0x0
  406018:	je     406021 <flatcc_builder_create_buffer@@Base+0x363>
  40601a:	mov    edx,0x4
  40601f:	jmp    406026 <flatcc_builder_create_buffer@@Base+0x368>
  406021:	mov    edx,0x0
  406026:	add    eax,edx
  406028:	mov    DWORD PTR [rbp-0xa8],eax
  40602e:	cmp    DWORD PTR [rbp-0xb4],0x0
  406035:	je     406059 <flatcc_builder_create_buffer@@Base+0x39b>
  406037:	mov    rax,QWORD PTR [rbp-0xd8]
  40603e:	mov    eax,DWORD PTR [rax+0xf8]
  406044:	sub    eax,DWORD PTR [rbp-0xa8]
  40604a:	mov    edi,eax
  40604c:	call   4043cd <main@@Base+0xc2>
  406051:	mov    DWORD PTR [rbp-0xc0],eax
  406057:	jmp    406079 <flatcc_builder_create_buffer@@Base+0x3bb>
  406059:	mov    rax,QWORD PTR [rbp-0xd8]
  406060:	mov    eax,DWORD PTR [rax+0xf4]
  406066:	sub    eax,DWORD PTR [rbp-0xa8]
  40606c:	mov    edi,eax
  40606e:	call   4043cd <main@@Base+0xc2>
  406073:	mov    DWORD PTR [rbp-0xc0],eax
  406079:	mov    eax,DWORD PTR [rbp-0xe8]
  40607f:	sub    eax,DWORD PTR [rbp-0xa8]
  406085:	mov    edi,eax
  406087:	call   4043cd <main@@Base+0xc2>
  40608c:	mov    DWORD PTR [rbp-0xc4],eax
  406092:	lea    rdx,[rbp-0xa0]
  406099:	mov    rax,QWORD PTR [rbp-0xd8]
  4060a0:	mov    rsi,rdx
  4060a3:	mov    rdi,rax
  4060a6:	call   4056e1 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4060ab:	mov    DWORD PTR [rbp-0xa4],eax
  4060b1:	cmp    DWORD PTR [rbp-0xa4],0x0
  4060b8:	jne    4060d9 <flatcc_builder_create_buffer@@Base+0x41b>
  4060ba:	lea    rcx,[rip+0x5b3f]        # 40bc00 <flatcc_builder_padding_base@@Base+0x720>
  4060c1:	mov    edx,0x304
  4060c6:	lea    rsi,[rip+0x5613]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4060cd:	lea    rdi,[rip+0x566c]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  4060d4:	call   403090 <__assert_fail@plt>
  4060d9:	mov    eax,DWORD PTR [rbp-0xa4]
  4060df:	mov    rsi,QWORD PTR [rbp-0x8]
  4060e3:	xor    rsi,QWORD PTR fs:0x28
  4060ec:	je     4060f3 <flatcc_builder_create_buffer@@Base+0x435>
  4060ee:	call   403070 <__stack_chk_fail@plt>
  4060f3:	leave  
  4060f4:	ret    

00000000004060f5 <flatcc_builder_create_struct@@Base>:
  4060f5:	push   rbp
  4060f6:	mov    rbp,rsp
  4060f9:	sub    rsp,0xd0
  406100:	mov    QWORD PTR [rbp-0xb8],rdi
  406107:	mov    QWORD PTR [rbp-0xc0],rsi
  40610e:	mov    QWORD PTR [rbp-0xc8],rdx
  406115:	mov    eax,ecx
  406117:	mov    WORD PTR [rbp-0xcc],ax
  40611e:	mov    rax,QWORD PTR fs:0x28
  406127:	mov    QWORD PTR [rbp-0x8],rax
  40612b:	xor    eax,eax
  40612d:	cmp    WORD PTR [rbp-0xcc],0x0
  406135:	jne    406156 <flatcc_builder_create_struct@@Base+0x61>
  406137:	lea    rcx,[rip+0x5ae2]        # 40bc20 <flatcc_builder_padding_base@@Base+0x740>
  40613e:	mov    edx,0x30f
  406143:	lea    rsi,[rip+0x5596]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40614a:	lea    rdi,[rip+0x564e]        # 40b79f <flatcc_builder_padding_base@@Base+0x2bf>
  406151:	call   403090 <__assert_fail@plt>
  406156:	movzx  edx,WORD PTR [rbp-0xcc]
  40615d:	mov    rax,QWORD PTR [rbp-0xb8]
  406164:	mov    esi,edx
  406166:	mov    rdi,rax
  406169:	call   4050dd <flatcc_builder_clear@@Base+0x96>
  40616e:	movzx  edx,WORD PTR [rbp-0xcc]
  406175:	mov    rax,QWORD PTR [rbp-0xc8]
  40617c:	mov    ecx,eax
  40617e:	mov    rax,QWORD PTR [rbp-0xb8]
  406185:	mov    esi,ecx
  406187:	mov    rdi,rax
  40618a:	call   405695 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  40618f:	mov    eax,eax
  406191:	mov    QWORD PTR [rbp-0xa8],rax
  406198:	mov    QWORD PTR [rbp-0xa0],0x0
  4061a3:	mov    DWORD PTR [rbp-0x98],0x0
  4061ad:	cmp    QWORD PTR [rbp-0xc8],0x0
  4061b5:	je     40621e <flatcc_builder_create_struct@@Base+0x129>
  4061b7:	mov    rdx,QWORD PTR [rbp-0xa0]
  4061be:	mov    rax,QWORD PTR [rbp-0xc8]
  4061c5:	add    rax,rdx
  4061c8:	mov    QWORD PTR [rbp-0xa0],rax
  4061cf:	mov    eax,DWORD PTR [rbp-0x98]
  4061d5:	cdqe   
  4061d7:	shl    rax,0x4
  4061db:	add    rax,rbp
  4061de:	lea    rdx,[rax-0x90]
  4061e5:	mov    rax,QWORD PTR [rbp-0xc0]
  4061ec:	mov    QWORD PTR [rdx],rax
  4061ef:	mov    eax,DWORD PTR [rbp-0x98]
  4061f5:	cdqe   
  4061f7:	shl    rax,0x4
  4061fb:	add    rax,rbp
  4061fe:	lea    rdx,[rax-0x88]
  406205:	mov    rax,QWORD PTR [rbp-0xc8]
  40620c:	mov    QWORD PTR [rdx],rax
  40620f:	mov    eax,DWORD PTR [rbp-0x98]
  406215:	add    eax,0x1
  406218:	mov    DWORD PTR [rbp-0x98],eax
  40621e:	cmp    QWORD PTR [rbp-0xa8],0x0
  406226:	je     40628e <flatcc_builder_create_struct@@Base+0x199>
  406228:	mov    rdx,QWORD PTR [rbp-0xa0]
  40622f:	mov    rax,QWORD PTR [rbp-0xa8]
  406236:	add    rax,rdx
  406239:	mov    QWORD PTR [rbp-0xa0],rax
  406240:	mov    eax,DWORD PTR [rbp-0x98]
  406246:	cdqe   
  406248:	shl    rax,0x4
  40624c:	add    rax,rbp
  40624f:	sub    rax,0x90
  406255:	mov    rdx,0x40b4e0
  40625c:	mov    QWORD PTR [rax],rdx
  40625f:	mov    eax,DWORD PTR [rbp-0x98]
  406265:	cdqe   
  406267:	shl    rax,0x4
  40626b:	add    rax,rbp
  40626e:	lea    rdx,[rax-0x88]
  406275:	mov    rax,QWORD PTR [rbp-0xa8]
  40627c:	mov    QWORD PTR [rdx],rax
  40627f:	mov    eax,DWORD PTR [rbp-0x98]
  406285:	add    eax,0x1
  406288:	mov    DWORD PTR [rbp-0x98],eax
  40628e:	lea    rdx,[rbp-0xa0]
  406295:	mov    rax,QWORD PTR [rbp-0xb8]
  40629c:	mov    rsi,rdx
  40629f:	mov    rdi,rax
  4062a2:	call   4056e1 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4062a7:	mov    rcx,QWORD PTR [rbp-0x8]
  4062ab:	xor    rcx,QWORD PTR fs:0x28
  4062b4:	je     4062bb <flatcc_builder_create_struct@@Base+0x1c6>
  4062b6:	call   403070 <__stack_chk_fail@plt>
  4062bb:	leave  
  4062bc:	ret    

00000000004062bd <flatcc_builder_start_buffer@@Base>:
  4062bd:	push   rbp
  4062be:	mov    rbp,rsp
  4062c1:	sub    rsp,0x20
  4062c5:	mov    QWORD PTR [rbp-0x8],rdi
  4062c9:	mov    QWORD PTR [rbp-0x10],rsi
  4062cd:	mov    eax,edx
  4062cf:	mov    DWORD PTR [rbp-0x18],ecx
  4062d2:	mov    WORD PTR [rbp-0x14],ax
  4062d6:	mov    rax,QWORD PTR [rbp-0x8]
  4062da:	movzx  eax,WORD PTR [rax+0xe8]
  4062e1:	movzx  edx,ax
  4062e4:	mov    rax,QWORD PTR [rbp-0x8]
  4062e8:	mov    esi,edx
  4062ea:	mov    rdi,rax
  4062ed:	call   4053f6 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  4062f2:	test   eax,eax
  4062f4:	je     406300 <flatcc_builder_start_buffer@@Base+0x43>
  4062f6:	mov    eax,0xffffffff
  4062fb:	jmp    406404 <flatcc_builder_start_buffer@@Base+0x147>
  406300:	mov    rax,QWORD PTR [rbp-0x8]
  406304:	mov    WORD PTR [rax+0xe8],0x1
  40630d:	mov    rax,QWORD PTR [rbp-0x8]
  406311:	mov    rax,QWORD PTR [rax+0x30]
  406315:	mov    rdx,QWORD PTR [rbp-0x8]
  406319:	movzx  edx,WORD PTR [rdx+0xec]
  406320:	mov    WORD PTR [rax+0x22],dx
  406324:	mov    rax,QWORD PTR [rbp-0x8]
  406328:	movzx  edx,WORD PTR [rbp-0x14]
  40632c:	mov    WORD PTR [rax+0xec],dx
  406333:	mov    rax,QWORD PTR [rbp-0x8]
  406337:	mov    rax,QWORD PTR [rax+0x30]
  40633b:	mov    rdx,QWORD PTR [rbp-0x8]
  40633f:	movzx  edx,WORD PTR [rdx+0x10c]
  406346:	mov    WORD PTR [rax+0x20],dx
  40634a:	mov    eax,DWORD PTR [rbp-0x18]
  40634d:	mov    edx,eax
  40634f:	mov    rax,QWORD PTR [rbp-0x8]
  406353:	mov    WORD PTR [rax+0x10c],dx
  40635a:	mov    rax,QWORD PTR [rbp-0x8]
  40635e:	mov    rax,QWORD PTR [rax+0x30]
  406362:	mov    rdx,QWORD PTR [rbp-0x8]
  406366:	mov    edx,DWORD PTR [rdx+0xf8]
  40636c:	mov    DWORD PTR [rax+0x14],edx
  40636f:	mov    rax,QWORD PTR [rbp-0x8]
  406373:	mov    rax,QWORD PTR [rax+0x30]
  406377:	mov    rdx,QWORD PTR [rbp-0x8]
  40637b:	mov    edx,DWORD PTR [rdx+0x100]
  406381:	mov    DWORD PTR [rax+0x1c],edx
  406384:	mov    rax,QWORD PTR [rbp-0x8]
  406388:	mov    edx,DWORD PTR [rax+0xf0]
  40638e:	mov    rax,QWORD PTR [rbp-0x8]
  406392:	mov    DWORD PTR [rax+0xf8],edx
  406398:	mov    rax,QWORD PTR [rbp-0x8]
  40639c:	mov    eax,DWORD PTR [rax+0xfc]
  4063a2:	lea    ecx,[rax+0x1]
  4063a5:	mov    rdx,QWORD PTR [rbp-0x8]
  4063a9:	mov    DWORD PTR [rdx+0xfc],ecx
  4063af:	mov    rdx,QWORD PTR [rbp-0x8]
  4063b3:	mov    DWORD PTR [rdx+0x100],eax
  4063b9:	mov    rax,QWORD PTR [rbp-0x8]
  4063bd:	mov    rax,QWORD PTR [rax+0x30]
  4063c1:	mov    rdx,QWORD PTR [rbp-0x8]
  4063c5:	mov    edx,DWORD PTR [rdx+0x110]
  4063cb:	mov    DWORD PTR [rax+0x10],edx
  4063ce:	cmp    QWORD PTR [rbp-0x10],0x0
  4063d3:	je     4063db <flatcc_builder_start_buffer@@Base+0x11e>
  4063d5:	mov    rax,QWORD PTR [rbp-0x10]
  4063d9:	jmp    4063e2 <flatcc_builder_start_buffer@@Base+0x125>
  4063db:	mov    rax,0x40b4e0
  4063e2:	mov    rdx,QWORD PTR [rbp-0x8]
  4063e6:	add    rdx,0x110
  4063ed:	mov    eax,DWORD PTR [rax]
  4063ef:	mov    DWORD PTR [rdx],eax
  4063f1:	mov    rax,QWORD PTR [rbp-0x8]
  4063f5:	mov    rax,QWORD PTR [rax+0x30]
  4063f9:	mov    WORD PTR [rax+0xe],0x1
  4063ff:	mov    eax,0x0
  406404:	leave  
  406405:	ret    

0000000000406406 <flatcc_builder_end_buffer@@Base>:
  406406:	push   rbp
  406407:	mov    rbp,rsp
  40640a:	sub    rsp,0x20
  40640e:	mov    QWORD PTR [rbp-0x18],rdi
  406412:	mov    DWORD PTR [rbp-0x1c],esi
  406415:	mov    rax,QWORD PTR [rbp-0x18]
  406419:	movzx  eax,WORD PTR [rax+0x10c]
  406420:	movzx  eax,ax
  406423:	and    eax,0x2
  406426:	mov    DWORD PTR [rbp-0x8],eax
  406429:	mov    rax,QWORD PTR [rbp-0x18]
  40642d:	mov    eax,DWORD PTR [rax+0x100]
  406433:	test   eax,eax
  406435:	setne  al
  406438:	movzx  eax,al
  40643b:	or     DWORD PTR [rbp-0x8],eax
  40643e:	mov    rax,QWORD PTR [rbp-0x18]
  406442:	mov    rax,QWORD PTR [rax+0x30]
  406446:	movzx  eax,WORD PTR [rax+0xe]
  40644a:	cmp    ax,0x1
  40644e:	je     40646f <flatcc_builder_end_buffer@@Base+0x69>
  406450:	lea    rcx,[rip+0x57e9]        # 40bc40 <flatcc_builder_padding_base@@Base+0x760>
  406457:	mov    edx,0x346
  40645c:	lea    rsi,[rip+0x527d]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406463:	lea    rdi,[rip+0x5346]        # 40b7b0 <flatcc_builder_padding_base@@Base+0x2d0>
  40646a:	call   403090 <__assert_fail@plt>
  40646f:	mov    rax,QWORD PTR [rbp-0x18]
  406473:	movzx  eax,WORD PTR [rax+0xec]
  40647a:	movzx  edx,ax
  40647d:	mov    rax,QWORD PTR [rbp-0x18]
  406481:	mov    esi,edx
  406483:	mov    rdi,rax
  406486:	call   4050dd <flatcc_builder_clear@@Base+0x96>
  40648b:	mov    rax,QWORD PTR [rbp-0x18]
  40648f:	movzx  eax,WORD PTR [rax+0xe8]
  406496:	movzx  edi,ax
  406499:	mov    rax,QWORD PTR [rbp-0x18]
  40649d:	movzx  eax,WORD PTR [rax+0xec]
  4064a4:	movzx  edx,ax
  4064a7:	mov    rax,QWORD PTR [rbp-0x18]
  4064ab:	lea    rsi,[rax+0x110]
  4064b2:	mov    r8d,DWORD PTR [rbp-0x8]
  4064b6:	mov    ecx,DWORD PTR [rbp-0x1c]
  4064b9:	mov    rax,QWORD PTR [rbp-0x18]
  4064bd:	mov    r9d,r8d
  4064c0:	mov    r8d,edi
  4064c3:	mov    rdi,rax
  4064c6:	call   405cbe <flatcc_builder_create_buffer@@Base>
  4064cb:	mov    DWORD PTR [rbp-0x4],eax
  4064ce:	cmp    DWORD PTR [rbp-0x4],0x0
  4064d2:	jne    4064db <flatcc_builder_end_buffer@@Base+0xd5>
  4064d4:	mov    eax,0x0
  4064d9:	jmp    406540 <flatcc_builder_end_buffer@@Base+0x13a>
  4064db:	mov    rax,QWORD PTR [rbp-0x18]
  4064df:	mov    rax,QWORD PTR [rax+0x30]
  4064e3:	mov    edx,DWORD PTR [rax+0x14]
  4064e6:	mov    rax,QWORD PTR [rbp-0x18]
  4064ea:	mov    DWORD PTR [rax+0xf8],edx
  4064f0:	mov    rax,QWORD PTR [rbp-0x18]
  4064f4:	mov    rax,QWORD PTR [rax+0x30]
  4064f8:	mov    edx,DWORD PTR [rax+0x1c]
  4064fb:	mov    rax,QWORD PTR [rbp-0x18]
  4064ff:	mov    DWORD PTR [rax+0x100],edx
  406505:	mov    rax,QWORD PTR [rbp-0x18]
  406509:	mov    rax,QWORD PTR [rax+0x30]
  40650d:	mov    edx,DWORD PTR [rax+0x10]
  406510:	mov    rax,QWORD PTR [rbp-0x18]
  406514:	mov    DWORD PTR [rax+0x110],edx
  40651a:	mov    rax,QWORD PTR [rbp-0x18]
  40651e:	mov    rax,QWORD PTR [rax+0x30]
  406522:	movzx  edx,WORD PTR [rax+0x20]
  406526:	mov    rax,QWORD PTR [rbp-0x18]
  40652a:	mov    WORD PTR [rax+0x10c],dx
  406531:	mov    rax,QWORD PTR [rbp-0x18]
  406535:	mov    rdi,rax
  406538:	call   4055ce <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40653d:	mov    eax,DWORD PTR [rbp-0x4]
  406540:	leave  
  406541:	ret    

0000000000406542 <flatcc_builder_start_struct@@Base>:
  406542:	push   rbp
  406543:	mov    rbp,rsp
  406546:	sub    rsp,0x20
  40654a:	mov    QWORD PTR [rbp-0x8],rdi
  40654e:	mov    QWORD PTR [rbp-0x10],rsi
  406552:	mov    eax,edx
  406554:	mov    WORD PTR [rbp-0x14],ax
  406558:	movzx  edx,WORD PTR [rbp-0x14]
  40655c:	mov    rax,QWORD PTR [rbp-0x8]
  406560:	mov    esi,edx
  406562:	mov    rdi,rax
  406565:	call   4053f6 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  40656a:	test   eax,eax
  40656c:	je     406575 <flatcc_builder_start_struct@@Base+0x33>
  40656e:	mov    eax,0x0
  406573:	jmp    4065a8 <flatcc_builder_start_struct@@Base+0x66>
  406575:	mov    rax,QWORD PTR [rbp-0x8]
  406579:	mov    rax,QWORD PTR [rax+0x30]
  40657d:	mov    WORD PTR [rax+0xe],0x2
  406583:	mov    rax,QWORD PTR [rbp-0x8]
  406587:	mov    esi,0xfffffffc
  40658c:	mov    rdi,rax
  40658f:	call   404600 <flatcc_builder_default_alloc@@Base+0x16d>
  406594:	mov    rax,QWORD PTR [rbp-0x10]
  406598:	mov    edx,eax
  40659a:	mov    rax,QWORD PTR [rbp-0x8]
  40659e:	mov    esi,edx
  4065a0:	mov    rdi,rax
  4065a3:	call   4046f3 <flatcc_builder_default_alloc@@Base+0x260>
  4065a8:	leave  
  4065a9:	ret    

00000000004065aa <flatcc_builder_struct_edit@@Base>:
  4065aa:	push   rbp
  4065ab:	mov    rbp,rsp
  4065ae:	mov    QWORD PTR [rbp-0x8],rdi
  4065b2:	mov    rax,QWORD PTR [rbp-0x8]
  4065b6:	mov    rax,QWORD PTR [rax+0x18]
  4065ba:	pop    rbp
  4065bb:	ret    

00000000004065bc <flatcc_builder_end_struct@@Base>:
  4065bc:	push   rbp
  4065bd:	mov    rbp,rsp
  4065c0:	sub    rsp,0x20
  4065c4:	mov    QWORD PTR [rbp-0x18],rdi
  4065c8:	mov    rax,QWORD PTR [rbp-0x18]
  4065cc:	mov    rax,QWORD PTR [rax+0x30]
  4065d0:	movzx  eax,WORD PTR [rax+0xe]
  4065d4:	cmp    ax,0x2
  4065d8:	je     4065f9 <flatcc_builder_end_struct@@Base+0x3d>
  4065da:	lea    rcx,[rip+0x567f]        # 40bc60 <flatcc_builder_padding_base@@Base+0x780>
  4065e1:	mov    edx,0x368
  4065e6:	lea    rsi,[rip+0x50f3]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4065ed:	lea    rdi,[rip+0x51ec]        # 40b7e0 <flatcc_builder_padding_base@@Base+0x300>
  4065f4:	call   403090 <__assert_fail@plt>
  4065f9:	mov    rax,QWORD PTR [rbp-0x18]
  4065fd:	movzx  eax,WORD PTR [rax+0xea]
  406604:	movzx  edx,ax
  406607:	mov    rax,QWORD PTR [rbp-0x18]
  40660b:	mov    eax,DWORD PTR [rax+0x20]
  40660e:	mov    edi,eax
  406610:	mov    rax,QWORD PTR [rbp-0x18]
  406614:	mov    rsi,QWORD PTR [rax+0x18]
  406618:	mov    rax,QWORD PTR [rbp-0x18]
  40661c:	mov    ecx,edx
  40661e:	mov    rdx,rdi
  406621:	mov    rdi,rax
  406624:	call   4060f5 <flatcc_builder_create_struct@@Base>
  406629:	mov    DWORD PTR [rbp-0x4],eax
  40662c:	cmp    DWORD PTR [rbp-0x4],0x0
  406630:	jne    406639 <flatcc_builder_end_struct@@Base+0x7d>
  406632:	mov    eax,0x0
  406637:	jmp    406648 <flatcc_builder_end_struct@@Base+0x8c>
  406639:	mov    rax,QWORD PTR [rbp-0x18]
  40663d:	mov    rdi,rax
  406640:	call   4055ce <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  406645:	mov    eax,DWORD PTR [rbp-0x4]
  406648:	leave  
  406649:	ret    
  40664a:	push   rbp
  40664b:	mov    rbp,rsp
  40664e:	sub    rsp,0x20
  406652:	mov    QWORD PTR [rbp-0x18],rdi
  406656:	mov    DWORD PTR [rbp-0x1c],esi
  406659:	mov    DWORD PTR [rbp-0x20],edx
  40665c:	mov    rax,QWORD PTR [rbp-0x18]
  406660:	mov    rax,QWORD PTR [rax+0x30]
  406664:	mov    eax,DWORD PTR [rax+0x14]
  406667:	mov    DWORD PTR [rbp-0x8],eax
  40666a:	mov    edx,DWORD PTR [rbp-0x8]
  40666d:	mov    eax,DWORD PTR [rbp-0x1c]
  406670:	add    eax,edx
  406672:	mov    DWORD PTR [rbp-0x4],eax
  406675:	mov    eax,DWORD PTR [rbp-0x8]
  406678:	cmp    eax,DWORD PTR [rbp-0x4]
  40667b:	ja     406685 <flatcc_builder_end_struct@@Base+0xc9>
  40667d:	mov    eax,DWORD PTR [rbp-0x4]
  406680:	cmp    eax,DWORD PTR [rbp-0x20]
  406683:	jbe    4066bb <flatcc_builder_end_struct@@Base+0xff>
  406685:	mov    eax,DWORD PTR [rbp-0x8]
  406688:	cmp    eax,DWORD PTR [rbp-0x4]
  40668b:	ja     406695 <flatcc_builder_end_struct@@Base+0xd9>
  40668d:	mov    eax,DWORD PTR [rbp-0x4]
  406690:	cmp    eax,DWORD PTR [rbp-0x20]
  406693:	jbe    4066b4 <flatcc_builder_end_struct@@Base+0xf8>
  406695:	lea    rcx,[rip+0x55e4]        # 40bc80 <flatcc_builder_padding_base@@Base+0x7a0>
  40669c:	mov    edx,0x37c
  4066a1:	lea    rsi,[rip+0x5038]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4066a8:	lea    rdi,[rip+0x515d]        # 40b80c <flatcc_builder_padding_base@@Base+0x32c>
  4066af:	call   403090 <__assert_fail@plt>
  4066b4:	mov    eax,0xffffffff
  4066b9:	jmp    4066ce <flatcc_builder_end_struct@@Base+0x112>
  4066bb:	mov    rax,QWORD PTR [rbp-0x18]
  4066bf:	mov    rax,QWORD PTR [rax+0x30]
  4066c3:	mov    edx,DWORD PTR [rbp-0x4]
  4066c6:	mov    DWORD PTR [rax+0x14],edx
  4066c9:	mov    eax,0x0
  4066ce:	leave  
  4066cf:	ret    

00000000004066d0 <flatcc_builder_extend_vector@@Base>:
  4066d0:	push   rbp
  4066d1:	mov    rbp,rsp
  4066d4:	sub    rsp,0x10
  4066d8:	mov    QWORD PTR [rbp-0x8],rdi
  4066dc:	mov    QWORD PTR [rbp-0x10],rsi
  4066e0:	mov    rax,QWORD PTR [rbp-0x8]
  4066e4:	mov    rax,QWORD PTR [rax+0x30]
  4066e8:	mov    edx,DWORD PTR [rax+0x18]
  4066eb:	mov    rax,QWORD PTR [rbp-0x10]
  4066ef:	mov    ecx,eax
  4066f1:	mov    rax,QWORD PTR [rbp-0x8]
  4066f5:	mov    esi,ecx
  4066f7:	mov    rdi,rax
  4066fa:	call   40664a <flatcc_builder_end_struct@@Base+0x8e>
  4066ff:	test   eax,eax
  406701:	je     40670a <flatcc_builder_extend_vector@@Base+0x3a>
  406703:	mov    eax,0x0
  406708:	jmp    40672a <flatcc_builder_extend_vector@@Base+0x5a>
  40670a:	mov    rax,QWORD PTR [rbp-0x8]
  40670e:	mov    rax,QWORD PTR [rax+0x30]
  406712:	mov    eax,DWORD PTR [rax+0x10]
  406715:	mov    rdx,QWORD PTR [rbp-0x10]
  406719:	imul   edx,eax
  40671c:	mov    rax,QWORD PTR [rbp-0x8]
  406720:	mov    esi,edx
  406722:	mov    rdi,rax
  406725:	call   4046f3 <flatcc_builder_default_alloc@@Base+0x260>
  40672a:	leave  
  40672b:	ret    

000000000040672c <flatcc_builder_vector_push@@Base>:
  40672c:	push   rbp
  40672d:	mov    rbp,rsp
  406730:	sub    rsp,0x10
  406734:	mov    QWORD PTR [rbp-0x8],rdi
  406738:	mov    QWORD PTR [rbp-0x10],rsi
  40673c:	mov    rax,QWORD PTR [rbp-0x8]
  406740:	mov    rax,QWORD PTR [rax+0x30]
  406744:	movzx  eax,WORD PTR [rax+0xe]
  406748:	cmp    ax,0x4
  40674c:	je     40676d <flatcc_builder_vector_push@@Base+0x41>
  40674e:	lea    rcx,[rip+0x554b]        # 40bca0 <flatcc_builder_padding_base@@Base+0x7c0>
  406755:	mov    edx,0x38b
  40675a:	lea    rsi,[rip+0x4f7f]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406761:	lea    rdi,[rip+0x50c0]        # 40b828 <flatcc_builder_padding_base@@Base+0x348>
  406768:	call   403090 <__assert_fail@plt>
  40676d:	mov    rax,QWORD PTR [rbp-0x8]
  406771:	mov    rax,QWORD PTR [rax+0x30]
  406775:	mov    edx,DWORD PTR [rax+0x14]
  406778:	mov    rax,QWORD PTR [rbp-0x8]
  40677c:	mov    rax,QWORD PTR [rax+0x30]
  406780:	mov    eax,DWORD PTR [rax+0x18]
  406783:	cmp    edx,eax
  406785:	jbe    4067c7 <flatcc_builder_vector_push@@Base+0x9b>
  406787:	mov    rax,QWORD PTR [rbp-0x8]
  40678b:	mov    rax,QWORD PTR [rax+0x30]
  40678f:	mov    edx,DWORD PTR [rax+0x14]
  406792:	mov    rax,QWORD PTR [rbp-0x8]
  406796:	mov    rax,QWORD PTR [rax+0x30]
  40679a:	mov    eax,DWORD PTR [rax+0x18]
  40679d:	cmp    edx,eax
  40679f:	jbe    4067c0 <flatcc_builder_vector_push@@Base+0x94>
  4067a1:	lea    rcx,[rip+0x54f8]        # 40bca0 <flatcc_builder_padding_base@@Base+0x7c0>
  4067a8:	mov    edx,0x38c
  4067ad:	lea    rsi,[rip+0x4f2c]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4067b4:	lea    rdi,[rip+0x509d]        # 40b858 <flatcc_builder_padding_base@@Base+0x378>
  4067bb:	call   403090 <__assert_fail@plt>
  4067c0:	mov    eax,0x0
  4067c5:	jmp    4067fe <flatcc_builder_vector_push@@Base+0xd2>
  4067c7:	mov    rax,QWORD PTR [rbp-0x8]
  4067cb:	mov    rax,QWORD PTR [rax+0x30]
  4067cf:	mov    rdx,QWORD PTR [rbp-0x8]
  4067d3:	mov    rdx,QWORD PTR [rdx+0x30]
  4067d7:	mov    edx,DWORD PTR [rdx+0x14]
  4067da:	add    edx,0x1
  4067dd:	mov    DWORD PTR [rax+0x14],edx
  4067e0:	mov    rax,QWORD PTR [rbp-0x8]
  4067e4:	mov    rax,QWORD PTR [rax+0x30]
  4067e8:	mov    edx,DWORD PTR [rax+0x10]
  4067eb:	mov    rcx,QWORD PTR [rbp-0x10]
  4067ef:	mov    rax,QWORD PTR [rbp-0x8]
  4067f3:	mov    rsi,rcx
  4067f6:	mov    rdi,rax
  4067f9:	call   4047bc <flatcc_builder_default_alloc@@Base+0x329>
  4067fe:	leave  
  4067ff:	ret    

0000000000406800 <flatcc_builder_append_vector@@Base>:
  406800:	push   rbp
  406801:	mov    rbp,rsp
  406804:	sub    rsp,0x20
  406808:	mov    QWORD PTR [rbp-0x8],rdi
  40680c:	mov    QWORD PTR [rbp-0x10],rsi
  406810:	mov    QWORD PTR [rbp-0x18],rdx
  406814:	mov    rax,QWORD PTR [rbp-0x8]
  406818:	mov    rax,QWORD PTR [rax+0x30]
  40681c:	movzx  eax,WORD PTR [rax+0xe]
  406820:	cmp    ax,0x4
  406824:	je     406845 <flatcc_builder_append_vector@@Base+0x45>
  406826:	lea    rcx,[rip+0x5493]        # 40bcc0 <flatcc_builder_padding_base@@Base+0x7e0>
  40682d:	mov    edx,0x393
  406832:	lea    rsi,[rip+0x4ea7]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406839:	lea    rdi,[rip+0x4fe8]        # 40b828 <flatcc_builder_padding_base@@Base+0x348>
  406840:	call   403090 <__assert_fail@plt>
  406845:	mov    rax,QWORD PTR [rbp-0x8]
  406849:	mov    rax,QWORD PTR [rax+0x30]
  40684d:	mov    edx,DWORD PTR [rax+0x18]
  406850:	mov    rax,QWORD PTR [rbp-0x18]
  406854:	mov    ecx,eax
  406856:	mov    rax,QWORD PTR [rbp-0x8]
  40685a:	mov    esi,ecx
  40685c:	mov    rdi,rax
  40685f:	call   40664a <flatcc_builder_end_struct@@Base+0x8e>
  406864:	test   eax,eax
  406866:	je     40686f <flatcc_builder_append_vector@@Base+0x6f>
  406868:	mov    eax,0x0
  40686d:	jmp    406894 <flatcc_builder_append_vector@@Base+0x94>
  40686f:	mov    rax,QWORD PTR [rbp-0x8]
  406873:	mov    rax,QWORD PTR [rax+0x30]
  406877:	mov    eax,DWORD PTR [rax+0x10]
  40687a:	mov    rdx,QWORD PTR [rbp-0x18]
  40687e:	imul   edx,eax
  406881:	mov    rcx,QWORD PTR [rbp-0x10]
  406885:	mov    rax,QWORD PTR [rbp-0x8]
  406889:	mov    rsi,rcx
  40688c:	mov    rdi,rax
  40688f:	call   4047bc <flatcc_builder_default_alloc@@Base+0x329>
  406894:	leave  
  406895:	ret    

0000000000406896 <flatcc_builder_extend_offset_vector@@Base>:
  406896:	push   rbp
  406897:	mov    rbp,rsp
  40689a:	sub    rsp,0x10
  40689e:	mov    QWORD PTR [rbp-0x8],rdi
  4068a2:	mov    QWORD PTR [rbp-0x10],rsi
  4068a6:	mov    rax,QWORD PTR [rbp-0x10]
  4068aa:	mov    ecx,eax
  4068ac:	mov    rax,QWORD PTR [rbp-0x8]
  4068b0:	mov    edx,0x3fffffff
  4068b5:	mov    esi,ecx
  4068b7:	mov    rdi,rax
  4068ba:	call   40664a <flatcc_builder_end_struct@@Base+0x8e>
  4068bf:	test   eax,eax
  4068c1:	je     4068ca <flatcc_builder_extend_offset_vector@@Base+0x34>
  4068c3:	mov    eax,0x0
  4068c8:	jmp    4068e3 <flatcc_builder_extend_offset_vector@@Base+0x4d>
  4068ca:	mov    rax,QWORD PTR [rbp-0x10]
  4068ce:	lea    edx,[rax*4+0x0]
  4068d5:	mov    rax,QWORD PTR [rbp-0x8]
  4068d9:	mov    esi,edx
  4068db:	mov    rdi,rax
  4068de:	call   4046f3 <flatcc_builder_default_alloc@@Base+0x260>
  4068e3:	leave  
  4068e4:	ret    

00000000004068e5 <flatcc_builder_offset_vector_push@@Base>:
  4068e5:	push   rbp
  4068e6:	mov    rbp,rsp
  4068e9:	sub    rsp,0x20
  4068ed:	mov    QWORD PTR [rbp-0x18],rdi
  4068f1:	mov    DWORD PTR [rbp-0x1c],esi
  4068f4:	mov    rax,QWORD PTR [rbp-0x18]
  4068f8:	mov    rax,QWORD PTR [rax+0x30]
  4068fc:	movzx  eax,WORD PTR [rax+0xe]
  406900:	cmp    ax,0x5
  406904:	je     406925 <flatcc_builder_offset_vector_push@@Base+0x40>
  406906:	lea    rcx,[rip+0x53d3]        # 40bce0 <flatcc_builder_padding_base@@Base+0x800>
  40690d:	mov    edx,0x3a6
  406912:	lea    rsi,[rip+0x4dc7]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406919:	lea    rdi,[rip+0x4f78]        # 40b898 <flatcc_builder_padding_base@@Base+0x3b8>
  406920:	call   403090 <__assert_fail@plt>
  406925:	mov    rax,QWORD PTR [rbp-0x18]
  406929:	mov    rax,QWORD PTR [rax+0x30]
  40692d:	mov    eax,DWORD PTR [rax+0x14]
  406930:	cmp    eax,0x3fffffff
  406935:	jne    40693e <flatcc_builder_offset_vector_push@@Base+0x59>
  406937:	mov    eax,0x0
  40693c:	jmp    406987 <flatcc_builder_offset_vector_push@@Base+0xa2>
  40693e:	mov    rax,QWORD PTR [rbp-0x18]
  406942:	mov    rax,QWORD PTR [rax+0x30]
  406946:	mov    rdx,QWORD PTR [rbp-0x18]
  40694a:	mov    rdx,QWORD PTR [rdx+0x30]
  40694e:	mov    edx,DWORD PTR [rdx+0x14]
  406951:	add    edx,0x1
  406954:	mov    DWORD PTR [rax+0x14],edx
  406957:	mov    rax,QWORD PTR [rbp-0x18]
  40695b:	mov    esi,0x4
  406960:	mov    rdi,rax
  406963:	call   4046f3 <flatcc_builder_default_alloc@@Base+0x260>
  406968:	mov    QWORD PTR [rbp-0x8],rax
  40696c:	cmp    QWORD PTR [rbp-0x8],0x0
  406971:	jne    40697a <flatcc_builder_offset_vector_push@@Base+0x95>
  406973:	mov    eax,0x0
  406978:	jmp    406987 <flatcc_builder_offset_vector_push@@Base+0xa2>
  40697a:	mov    rax,QWORD PTR [rbp-0x8]
  40697e:	mov    edx,DWORD PTR [rbp-0x1c]
  406981:	mov    DWORD PTR [rax],edx
  406983:	mov    rax,QWORD PTR [rbp-0x8]
  406987:	leave  
  406988:	ret    

0000000000406989 <flatcc_builder_append_offset_vector@@Base>:
  406989:	push   rbp
  40698a:	mov    rbp,rsp
  40698d:	sub    rsp,0x20
  406991:	mov    QWORD PTR [rbp-0x8],rdi
  406995:	mov    QWORD PTR [rbp-0x10],rsi
  406999:	mov    QWORD PTR [rbp-0x18],rdx
  40699d:	mov    rax,QWORD PTR [rbp-0x8]
  4069a1:	mov    rax,QWORD PTR [rax+0x30]
  4069a5:	movzx  eax,WORD PTR [rax+0xe]
  4069a9:	cmp    ax,0x5
  4069ad:	je     4069ce <flatcc_builder_append_offset_vector@@Base+0x45>
  4069af:	lea    rcx,[rip+0x536a]        # 40bd20 <flatcc_builder_padding_base@@Base+0x840>
  4069b6:	mov    edx,0x3b4
  4069bb:	lea    rsi,[rip+0x4d1e]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4069c2:	lea    rdi,[rip+0x4ecf]        # 40b898 <flatcc_builder_padding_base@@Base+0x3b8>
  4069c9:	call   403090 <__assert_fail@plt>
  4069ce:	mov    rax,QWORD PTR [rbp-0x18]
  4069d2:	mov    ecx,eax
  4069d4:	mov    rax,QWORD PTR [rbp-0x8]
  4069d8:	mov    edx,0x3fffffff
  4069dd:	mov    esi,ecx
  4069df:	mov    rdi,rax
  4069e2:	call   40664a <flatcc_builder_end_struct@@Base+0x8e>
  4069e7:	test   eax,eax
  4069e9:	je     4069f2 <flatcc_builder_append_offset_vector@@Base+0x69>
  4069eb:	mov    eax,0x0
  4069f0:	jmp    406a10 <flatcc_builder_append_offset_vector@@Base+0x87>
  4069f2:	mov    rax,QWORD PTR [rbp-0x18]
  4069f6:	lea    edx,[rax*4+0x0]
  4069fd:	mov    rcx,QWORD PTR [rbp-0x10]
  406a01:	mov    rax,QWORD PTR [rbp-0x8]
  406a05:	mov    rsi,rcx
  406a08:	mov    rdi,rax
  406a0b:	call   4047bc <flatcc_builder_default_alloc@@Base+0x329>
  406a10:	leave  
  406a11:	ret    

0000000000406a12 <flatcc_builder_extend_string@@Base>:
  406a12:	push   rbp
  406a13:	mov    rbp,rsp
  406a16:	sub    rsp,0x10
  406a1a:	mov    QWORD PTR [rbp-0x8],rdi
  406a1e:	mov    QWORD PTR [rbp-0x10],rsi
  406a22:	mov    rax,QWORD PTR [rbp-0x8]
  406a26:	mov    rax,QWORD PTR [rax+0x30]
  406a2a:	movzx  eax,WORD PTR [rax+0xe]
  406a2e:	cmp    ax,0x6
  406a32:	je     406a53 <flatcc_builder_extend_string@@Base+0x41>
  406a34:	lea    rcx,[rip+0x5315]        # 40bd50 <flatcc_builder_padding_base@@Base+0x870>
  406a3b:	mov    edx,0x3bd
  406a40:	lea    rsi,[rip+0x4c99]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406a47:	lea    rdi,[rip+0x4e82]        # 40b8d0 <flatcc_builder_padding_base@@Base+0x3f0>
  406a4e:	call   403090 <__assert_fail@plt>
  406a53:	mov    rax,QWORD PTR [rbp-0x10]
  406a57:	mov    ecx,eax
  406a59:	mov    rax,QWORD PTR [rbp-0x8]
  406a5d:	mov    edx,0xffffffff
  406a62:	mov    esi,ecx
  406a64:	mov    rdi,rax
  406a67:	call   40664a <flatcc_builder_end_struct@@Base+0x8e>
  406a6c:	test   eax,eax
  406a6e:	je     406a77 <flatcc_builder_extend_string@@Base+0x65>
  406a70:	mov    eax,0x0
  406a75:	jmp    406a8b <flatcc_builder_extend_string@@Base+0x79>
  406a77:	mov    rax,QWORD PTR [rbp-0x10]
  406a7b:	mov    edx,eax
  406a7d:	mov    rax,QWORD PTR [rbp-0x8]
  406a81:	mov    esi,edx
  406a83:	mov    rdi,rax
  406a86:	call   4046f3 <flatcc_builder_default_alloc@@Base+0x260>
  406a8b:	leave  
  406a8c:	ret    

0000000000406a8d <flatcc_builder_append_string@@Base>:
  406a8d:	push   rbp
  406a8e:	mov    rbp,rsp
  406a91:	sub    rsp,0x20
  406a95:	mov    QWORD PTR [rbp-0x8],rdi
  406a99:	mov    QWORD PTR [rbp-0x10],rsi
  406a9d:	mov    QWORD PTR [rbp-0x18],rdx
  406aa1:	mov    rax,QWORD PTR [rbp-0x8]
  406aa5:	mov    rax,QWORD PTR [rax+0x30]
  406aa9:	movzx  eax,WORD PTR [rax+0xe]
  406aad:	cmp    ax,0x6
  406ab1:	je     406ad2 <flatcc_builder_append_string@@Base+0x45>
  406ab3:	lea    rcx,[rip+0x52b6]        # 40bd70 <flatcc_builder_padding_base@@Base+0x890>
  406aba:	mov    edx,0x3c6
  406abf:	lea    rsi,[rip+0x4c1a]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406ac6:	lea    rdi,[rip+0x4e03]        # 40b8d0 <flatcc_builder_padding_base@@Base+0x3f0>
  406acd:	call   403090 <__assert_fail@plt>
  406ad2:	mov    rax,QWORD PTR [rbp-0x18]
  406ad6:	mov    ecx,eax
  406ad8:	mov    rax,QWORD PTR [rbp-0x8]
  406adc:	mov    edx,0xffffffff
  406ae1:	mov    esi,ecx
  406ae3:	mov    rdi,rax
  406ae6:	call   40664a <flatcc_builder_end_struct@@Base+0x8e>
  406aeb:	test   eax,eax
  406aed:	je     406af6 <flatcc_builder_append_string@@Base+0x69>
  406aef:	mov    eax,0x0
  406af4:	jmp    406b0f <flatcc_builder_append_string@@Base+0x82>
  406af6:	mov    rax,QWORD PTR [rbp-0x18]
  406afa:	mov    edx,eax
  406afc:	mov    rcx,QWORD PTR [rbp-0x10]
  406b00:	mov    rax,QWORD PTR [rbp-0x8]
  406b04:	mov    rsi,rcx
  406b07:	mov    rdi,rax
  406b0a:	call   4047bc <flatcc_builder_default_alloc@@Base+0x329>
  406b0f:	leave  
  406b10:	ret    

0000000000406b11 <flatcc_builder_append_string_str@@Base>:
  406b11:	push   rbp
  406b12:	mov    rbp,rsp
  406b15:	sub    rsp,0x10
  406b19:	mov    QWORD PTR [rbp-0x8],rdi
  406b1d:	mov    QWORD PTR [rbp-0x10],rsi
  406b21:	mov    rax,QWORD PTR [rbp-0x10]
  406b25:	mov    rdi,rax
  406b28:	call   403060 <strlen@plt>
  406b2d:	mov    rdx,rax
  406b30:	mov    rcx,QWORD PTR [rbp-0x10]
  406b34:	mov    rax,QWORD PTR [rbp-0x8]
  406b38:	mov    rsi,rcx
  406b3b:	mov    rdi,rax
  406b3e:	call   406a8d <flatcc_builder_append_string@@Base>
  406b43:	leave  
  406b44:	ret    

0000000000406b45 <flatcc_builder_append_string_strn@@Base>:
  406b45:	push   rbp
  406b46:	mov    rbp,rsp
  406b49:	sub    rsp,0x20
  406b4d:	mov    QWORD PTR [rbp-0x8],rdi
  406b51:	mov    QWORD PTR [rbp-0x10],rsi
  406b55:	mov    QWORD PTR [rbp-0x18],rdx
  406b59:	mov    rdx,QWORD PTR [rbp-0x18]
  406b5d:	mov    rax,QWORD PTR [rbp-0x10]
  406b61:	mov    rsi,rdx
  406b64:	mov    rdi,rax
  406b67:	call   40444d <main@@Base+0x142>
  406b6c:	mov    rdx,rax
  406b6f:	mov    rcx,QWORD PTR [rbp-0x10]
  406b73:	mov    rax,QWORD PTR [rbp-0x8]
  406b77:	mov    rsi,rcx
  406b7a:	mov    rdi,rax
  406b7d:	call   406a8d <flatcc_builder_append_string@@Base>
  406b82:	leave  
  406b83:	ret    

0000000000406b84 <flatcc_builder_truncate_vector@@Base>:
  406b84:	push   rbp
  406b85:	mov    rbp,rsp
  406b88:	sub    rsp,0x10
  406b8c:	mov    QWORD PTR [rbp-0x8],rdi
  406b90:	mov    QWORD PTR [rbp-0x10],rsi
  406b94:	mov    rax,QWORD PTR [rbp-0x8]
  406b98:	mov    rax,QWORD PTR [rax+0x30]
  406b9c:	movzx  eax,WORD PTR [rax+0xe]
  406ba0:	cmp    ax,0x4
  406ba4:	je     406bc5 <flatcc_builder_truncate_vector@@Base+0x41>
  406ba6:	lea    rcx,[rip+0x51e3]        # 40bd90 <flatcc_builder_padding_base@@Base+0x8b0>
  406bad:	mov    edx,0x3d9
  406bb2:	lea    rsi,[rip+0x4b27]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406bb9:	lea    rdi,[rip+0x4c68]        # 40b828 <flatcc_builder_padding_base@@Base+0x348>
  406bc0:	call   403090 <__assert_fail@plt>
  406bc5:	mov    rax,QWORD PTR [rbp-0x8]
  406bc9:	mov    rax,QWORD PTR [rax+0x30]
  406bcd:	mov    eax,DWORD PTR [rax+0x14]
  406bd0:	mov    eax,eax
  406bd2:	cmp    rax,QWORD PTR [rbp-0x10]
  406bd6:	jae    406c11 <flatcc_builder_truncate_vector@@Base+0x8d>
  406bd8:	mov    rax,QWORD PTR [rbp-0x8]
  406bdc:	mov    rax,QWORD PTR [rax+0x30]
  406be0:	mov    eax,DWORD PTR [rax+0x14]
  406be3:	mov    eax,eax
  406be5:	cmp    rax,QWORD PTR [rbp-0x10]
  406be9:	jae    406c0a <flatcc_builder_truncate_vector@@Base+0x86>
  406beb:	lea    rcx,[rip+0x519e]        # 40bd90 <flatcc_builder_padding_base@@Base+0x8b0>
  406bf2:	mov    edx,0x3da
  406bf7:	lea    rsi,[rip+0x4ae2]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406bfe:	lea    rdi,[rip+0x4cfb]        # 40b900 <flatcc_builder_padding_base@@Base+0x420>
  406c05:	call   403090 <__assert_fail@plt>
  406c0a:	mov    eax,0xffffffff
  406c0f:	jmp    406c52 <flatcc_builder_truncate_vector@@Base+0xce>
  406c11:	mov    rax,QWORD PTR [rbp-0x8]
  406c15:	mov    rax,QWORD PTR [rax+0x30]
  406c19:	mov    rdx,QWORD PTR [rbp-0x8]
  406c1d:	mov    rdx,QWORD PTR [rdx+0x30]
  406c21:	mov    edx,DWORD PTR [rdx+0x14]
  406c24:	mov    rcx,QWORD PTR [rbp-0x10]
  406c28:	sub    edx,ecx
  406c2a:	mov    DWORD PTR [rax+0x14],edx
  406c2d:	mov    rax,QWORD PTR [rbp-0x8]
  406c31:	mov    rax,QWORD PTR [rax+0x30]
  406c35:	mov    eax,DWORD PTR [rax+0x10]
  406c38:	mov    rdx,QWORD PTR [rbp-0x10]
  406c3c:	imul   edx,eax
  406c3f:	mov    rax,QWORD PTR [rbp-0x8]
  406c43:	mov    esi,edx
  406c45:	mov    rdi,rax
  406c48:	call   404770 <flatcc_builder_default_alloc@@Base+0x2dd>
  406c4d:	mov    eax,0x0
  406c52:	leave  
  406c53:	ret    

0000000000406c54 <flatcc_builder_truncate_offset_vector@@Base>:
  406c54:	push   rbp
  406c55:	mov    rbp,rsp
  406c58:	sub    rsp,0x10
  406c5c:	mov    QWORD PTR [rbp-0x8],rdi
  406c60:	mov    QWORD PTR [rbp-0x10],rsi
  406c64:	mov    rax,QWORD PTR [rbp-0x8]
  406c68:	mov    rax,QWORD PTR [rax+0x30]
  406c6c:	movzx  eax,WORD PTR [rax+0xe]
  406c70:	cmp    ax,0x5
  406c74:	je     406c95 <flatcc_builder_truncate_offset_vector@@Base+0x41>
  406c76:	lea    rcx,[rip+0x5143]        # 40bdc0 <flatcc_builder_padding_base@@Base+0x8e0>
  406c7d:	mov    edx,0x3e2
  406c82:	lea    rsi,[rip+0x4a57]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406c89:	lea    rdi,[rip+0x4c08]        # 40b898 <flatcc_builder_padding_base@@Base+0x3b8>
  406c90:	call   403090 <__assert_fail@plt>
  406c95:	mov    rax,QWORD PTR [rbp-0x8]
  406c99:	mov    rax,QWORD PTR [rax+0x30]
  406c9d:	mov    eax,DWORD PTR [rax+0x14]
  406ca0:	mov    rdx,QWORD PTR [rbp-0x10]
  406ca4:	cmp    eax,edx
  406ca6:	jae    406ce1 <flatcc_builder_truncate_offset_vector@@Base+0x8d>
  406ca8:	mov    rax,QWORD PTR [rbp-0x8]
  406cac:	mov    rax,QWORD PTR [rax+0x30]
  406cb0:	mov    eax,DWORD PTR [rax+0x14]
  406cb3:	mov    rdx,QWORD PTR [rbp-0x10]
  406cb7:	cmp    eax,edx
  406cb9:	jae    406cda <flatcc_builder_truncate_offset_vector@@Base+0x86>
  406cbb:	lea    rcx,[rip+0x50fe]        # 40bdc0 <flatcc_builder_padding_base@@Base+0x8e0>
  406cc2:	mov    edx,0x3e3
  406cc7:	lea    rsi,[rip+0x4a12]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406cce:	lea    rdi,[rip+0x4c53]        # 40b928 <flatcc_builder_padding_base@@Base+0x448>
  406cd5:	call   403090 <__assert_fail@plt>
  406cda:	mov    eax,0xffffffff
  406cdf:	jmp    406d22 <flatcc_builder_truncate_offset_vector@@Base+0xce>
  406ce1:	mov    rax,QWORD PTR [rbp-0x8]
  406ce5:	mov    rax,QWORD PTR [rax+0x30]
  406ce9:	mov    rdx,QWORD PTR [rbp-0x8]
  406ced:	mov    rdx,QWORD PTR [rdx+0x30]
  406cf1:	mov    edx,DWORD PTR [rdx+0x14]
  406cf4:	mov    rcx,QWORD PTR [rbp-0x10]
  406cf8:	sub    edx,ecx
  406cfa:	mov    DWORD PTR [rax+0x14],edx
  406cfd:	mov    rax,QWORD PTR [rbp-0x8]
  406d01:	mov    rax,QWORD PTR [rax+0x30]
  406d05:	mov    eax,DWORD PTR [rax+0x10]
  406d08:	mov    rdx,QWORD PTR [rbp-0x10]
  406d0c:	imul   edx,eax
  406d0f:	mov    rax,QWORD PTR [rbp-0x8]
  406d13:	mov    esi,edx
  406d15:	mov    rdi,rax
  406d18:	call   404770 <flatcc_builder_default_alloc@@Base+0x2dd>
  406d1d:	mov    eax,0x0
  406d22:	leave  
  406d23:	ret    

0000000000406d24 <flatcc_builder_truncate_string@@Base>:
  406d24:	push   rbp
  406d25:	mov    rbp,rsp
  406d28:	sub    rsp,0x10
  406d2c:	mov    QWORD PTR [rbp-0x8],rdi
  406d30:	mov    QWORD PTR [rbp-0x10],rsi
  406d34:	mov    rax,QWORD PTR [rbp-0x8]
  406d38:	mov    rax,QWORD PTR [rax+0x30]
  406d3c:	movzx  eax,WORD PTR [rax+0xe]
  406d40:	cmp    ax,0x6
  406d44:	je     406d65 <flatcc_builder_truncate_string@@Base+0x41>
  406d46:	lea    rcx,[rip+0x50a3]        # 40bdf0 <flatcc_builder_padding_base@@Base+0x910>
  406d4d:	mov    edx,0x3eb
  406d52:	lea    rsi,[rip+0x4987]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406d59:	lea    rdi,[rip+0x4b70]        # 40b8d0 <flatcc_builder_padding_base@@Base+0x3f0>
  406d60:	call   403090 <__assert_fail@plt>
  406d65:	mov    rax,QWORD PTR [rbp-0x8]
  406d69:	mov    rax,QWORD PTR [rax+0x30]
  406d6d:	mov    eax,DWORD PTR [rax+0x14]
  406d70:	mov    eax,eax
  406d72:	cmp    rax,QWORD PTR [rbp-0x10]
  406d76:	jae    406db1 <flatcc_builder_truncate_string@@Base+0x8d>
  406d78:	mov    rax,QWORD PTR [rbp-0x8]
  406d7c:	mov    rax,QWORD PTR [rax+0x30]
  406d80:	mov    eax,DWORD PTR [rax+0x14]
  406d83:	mov    eax,eax
  406d85:	cmp    rax,QWORD PTR [rbp-0x10]
  406d89:	jae    406daa <flatcc_builder_truncate_string@@Base+0x86>
  406d8b:	lea    rcx,[rip+0x505e]        # 40bdf0 <flatcc_builder_padding_base@@Base+0x910>
  406d92:	mov    edx,0x3ec
  406d97:	lea    rsi,[rip+0x4942]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406d9e:	lea    rdi,[rip+0x4bc3]        # 40b968 <flatcc_builder_padding_base@@Base+0x488>
  406da5:	call   403090 <__assert_fail@plt>
  406daa:	mov    eax,0xffffffff
  406daf:	jmp    406de6 <flatcc_builder_truncate_string@@Base+0xc2>
  406db1:	mov    rax,QWORD PTR [rbp-0x8]
  406db5:	mov    rax,QWORD PTR [rax+0x30]
  406db9:	mov    rdx,QWORD PTR [rbp-0x8]
  406dbd:	mov    rdx,QWORD PTR [rdx+0x30]
  406dc1:	mov    edx,DWORD PTR [rdx+0x14]
  406dc4:	mov    rcx,QWORD PTR [rbp-0x10]
  406dc8:	sub    edx,ecx
  406dca:	mov    DWORD PTR [rax+0x14],edx
  406dcd:	mov    rax,QWORD PTR [rbp-0x10]
  406dd1:	mov    edx,eax
  406dd3:	mov    rax,QWORD PTR [rbp-0x8]
  406dd7:	mov    esi,edx
  406dd9:	mov    rdi,rax
  406ddc:	call   404770 <flatcc_builder_default_alloc@@Base+0x2dd>
  406de1:	mov    eax,0x0
  406de6:	leave  
  406de7:	ret    

0000000000406de8 <flatcc_builder_start_vector@@Base>:
  406de8:	push   rbp
  406de9:	mov    rbp,rsp
  406dec:	sub    rsp,0x20
  406df0:	mov    QWORD PTR [rbp-0x8],rdi
  406df4:	mov    QWORD PTR [rbp-0x10],rsi
  406df8:	mov    eax,edx
  406dfa:	mov    QWORD PTR [rbp-0x20],rcx
  406dfe:	mov    WORD PTR [rbp-0x14],ax
  406e02:	lea    rax,[rbp-0x14]
  406e06:	mov    esi,0x4
  406e0b:	mov    rdi,rax
  406e0e:	call   40510e <flatcc_builder_clear@@Base+0xc7>
  406e13:	movzx  eax,WORD PTR [rbp-0x14]
  406e17:	movzx  edx,ax
  406e1a:	mov    rax,QWORD PTR [rbp-0x8]
  406e1e:	mov    esi,edx
  406e20:	mov    rdi,rax
  406e23:	call   4053f6 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  406e28:	test   eax,eax
  406e2a:	je     406e33 <flatcc_builder_start_vector@@Base+0x4b>
  406e2c:	mov    eax,0xffffffff
  406e31:	jmp    406e84 <flatcc_builder_start_vector@@Base+0x9c>
  406e33:	mov    rax,QWORD PTR [rbp-0x8]
  406e37:	mov    rax,QWORD PTR [rax+0x30]
  406e3b:	mov    rdx,QWORD PTR [rbp-0x10]
  406e3f:	mov    DWORD PTR [rax+0x10],edx
  406e42:	mov    rax,QWORD PTR [rbp-0x8]
  406e46:	mov    rax,QWORD PTR [rax+0x30]
  406e4a:	mov    DWORD PTR [rax+0x14],0x0
  406e51:	mov    rax,QWORD PTR [rbp-0x8]
  406e55:	mov    rax,QWORD PTR [rax+0x30]
  406e59:	mov    rdx,QWORD PTR [rbp-0x20]
  406e5d:	mov    DWORD PTR [rax+0x18],edx
  406e60:	mov    rax,QWORD PTR [rbp-0x8]
  406e64:	mov    rax,QWORD PTR [rax+0x30]
  406e68:	mov    WORD PTR [rax+0xe],0x4
  406e6e:	mov    rax,QWORD PTR [rbp-0x8]
  406e72:	mov    esi,0xfffffffc
  406e77:	mov    rdi,rax
  406e7a:	call   404600 <flatcc_builder_default_alloc@@Base+0x16d>
  406e7f:	mov    eax,0x0
  406e84:	leave  
  406e85:	ret    

0000000000406e86 <flatcc_builder_start_offset_vector@@Base>:
  406e86:	push   rbp
  406e87:	mov    rbp,rsp
  406e8a:	sub    rsp,0x10
  406e8e:	mov    QWORD PTR [rbp-0x8],rdi
  406e92:	mov    rax,QWORD PTR [rbp-0x8]
  406e96:	mov    esi,0x4
  406e9b:	mov    rdi,rax
  406e9e:	call   4053f6 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  406ea3:	test   eax,eax
  406ea5:	je     406eae <flatcc_builder_start_offset_vector@@Base+0x28>
  406ea7:	mov    eax,0xffffffff
  406eac:	jmp    406ef0 <flatcc_builder_start_offset_vector@@Base+0x6a>
  406eae:	mov    rax,QWORD PTR [rbp-0x8]
  406eb2:	mov    rax,QWORD PTR [rax+0x30]
  406eb6:	mov    DWORD PTR [rax+0x10],0x4
  406ebd:	mov    rax,QWORD PTR [rbp-0x8]
  406ec1:	mov    rax,QWORD PTR [rax+0x30]
  406ec5:	mov    DWORD PTR [rax+0x14],0x0
  406ecc:	mov    rax,QWORD PTR [rbp-0x8]
  406ed0:	mov    rax,QWORD PTR [rax+0x30]
  406ed4:	mov    WORD PTR [rax+0xe],0x5
  406eda:	mov    rax,QWORD PTR [rbp-0x8]
  406ede:	mov    esi,0xfffffffc
  406ee3:	mov    rdi,rax
  406ee6:	call   404600 <flatcc_builder_default_alloc@@Base+0x16d>
  406eeb:	mov    eax,0x0
  406ef0:	leave  
  406ef1:	ret    

0000000000406ef2 <flatcc_builder_create_offset_vector@@Base>:
  406ef2:	push   rbp
  406ef3:	mov    rbp,rsp
  406ef6:	sub    rsp,0x30
  406efa:	mov    QWORD PTR [rbp-0x18],rdi
  406efe:	mov    QWORD PTR [rbp-0x20],rsi
  406f02:	mov    QWORD PTR [rbp-0x28],rdx
  406f06:	mov    rax,QWORD PTR [rbp-0x18]
  406f0a:	mov    rdi,rax
  406f0d:	call   406e86 <flatcc_builder_start_offset_vector@@Base>
  406f12:	test   eax,eax
  406f14:	je     406f1d <flatcc_builder_create_offset_vector@@Base+0x2b>
  406f16:	mov    eax,0x0
  406f1b:	jmp    406f6d <flatcc_builder_create_offset_vector@@Base+0x7b>
  406f1d:	mov    rdx,QWORD PTR [rbp-0x28]
  406f21:	mov    rax,QWORD PTR [rbp-0x18]
  406f25:	mov    rsi,rdx
  406f28:	mov    rdi,rax
  406f2b:	call   406896 <flatcc_builder_extend_offset_vector@@Base>
  406f30:	mov    QWORD PTR [rbp-0x8],rax
  406f34:	cmp    QWORD PTR [rbp-0x8],0x0
  406f39:	jne    406f42 <flatcc_builder_create_offset_vector@@Base+0x50>
  406f3b:	mov    eax,0x0
  406f40:	jmp    406f6d <flatcc_builder_create_offset_vector@@Base+0x7b>
  406f42:	mov    rax,QWORD PTR [rbp-0x28]
  406f46:	lea    rdx,[rax*4+0x0]
  406f4e:	mov    rcx,QWORD PTR [rbp-0x20]
  406f52:	mov    rax,QWORD PTR [rbp-0x8]
  406f56:	mov    rsi,rcx
  406f59:	mov    rdi,rax
  406f5c:	call   4030f0 <memcpy@plt>
  406f61:	mov    rax,QWORD PTR [rbp-0x18]
  406f65:	mov    rdi,rax
  406f68:	call   408478 <flatcc_builder_end_offset_vector@@Base>
  406f6d:	leave  
  406f6e:	ret    

0000000000406f6f <flatcc_builder_start_string@@Base>:
  406f6f:	push   rbp
  406f70:	mov    rbp,rsp
  406f73:	sub    rsp,0x10
  406f77:	mov    QWORD PTR [rbp-0x8],rdi
  406f7b:	mov    rax,QWORD PTR [rbp-0x8]
  406f7f:	mov    esi,0x1
  406f84:	mov    rdi,rax
  406f87:	call   4053f6 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  406f8c:	test   eax,eax
  406f8e:	je     406f97 <flatcc_builder_start_string@@Base+0x28>
  406f90:	mov    eax,0xffffffff
  406f95:	jmp    406fd9 <flatcc_builder_start_string@@Base+0x6a>
  406f97:	mov    rax,QWORD PTR [rbp-0x8]
  406f9b:	mov    rax,QWORD PTR [rax+0x30]
  406f9f:	mov    DWORD PTR [rax+0x10],0x1
  406fa6:	mov    rax,QWORD PTR [rbp-0x8]
  406faa:	mov    rax,QWORD PTR [rax+0x30]
  406fae:	mov    DWORD PTR [rax+0x14],0x0
  406fb5:	mov    rax,QWORD PTR [rbp-0x8]
  406fb9:	mov    rax,QWORD PTR [rax+0x30]
  406fbd:	mov    WORD PTR [rax+0xe],0x6
  406fc3:	mov    rax,QWORD PTR [rbp-0x8]
  406fc7:	mov    esi,0xfffffffc
  406fcc:	mov    rdi,rax
  406fcf:	call   404600 <flatcc_builder_default_alloc@@Base+0x16d>
  406fd4:	mov    eax,0x0
  406fd9:	leave  
  406fda:	ret    

0000000000406fdb <flatcc_builder_reserve_table@@Base>:
  406fdb:	push   rbp
  406fdc:	mov    rbp,rsp
  406fdf:	sub    rsp,0x10
  406fe3:	mov    QWORD PTR [rbp-0x8],rdi
  406fe7:	mov    DWORD PTR [rbp-0xc],esi
  406fea:	cmp    DWORD PTR [rbp-0xc],0x0
  406fee:	jns    40700f <flatcc_builder_reserve_table@@Base+0x34>
  406ff0:	lea    rcx,[rip+0x4e19]        # 40be10 <flatcc_builder_padding_base@@Base+0x930>
  406ff7:	mov    edx,0x429
  406ffc:	lea    rsi,[rip+0x46dd]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  407003:	lea    rdi,[rip+0x4980]        # 40b98a <flatcc_builder_padding_base@@Base+0x4aa>
  40700a:	call   403090 <__assert_fail@plt>
  40700f:	mov    edx,DWORD PTR [rbp-0xc]
  407012:	mov    rax,QWORD PTR [rbp-0x8]
  407016:	mov    esi,edx
  407018:	mov    rdi,rax
  40701b:	call   404a50 <flatcc_builder_default_alloc@@Base+0x5bd>
  407020:	leave  
  407021:	ret    

0000000000407022 <flatcc_builder_start_table@@Base>:
  407022:	push   rbp
  407023:	mov    rbp,rsp
  407026:	sub    rsp,0x10
  40702a:	mov    QWORD PTR [rbp-0x8],rdi
  40702e:	mov    DWORD PTR [rbp-0xc],esi
  407031:	mov    rax,QWORD PTR [rbp-0x8]
  407035:	mov    esi,0x4
  40703a:	mov    rdi,rax
  40703d:	call   4053f6 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  407042:	test   eax,eax
  407044:	je     407050 <flatcc_builder_start_table@@Base+0x2e>
  407046:	mov    eax,0xffffffff
  40704b:	jmp    407120 <flatcc_builder_start_table@@Base+0xfe>
  407050:	mov    rax,QWORD PTR [rbp-0x8]
  407054:	mov    rax,QWORD PTR [rax+0x30]
  407058:	mov    rdx,QWORD PTR [rbp-0x8]
  40705c:	mov    rdx,QWORD PTR [rdx+0x8]
  407060:	mov    rcx,rdx
  407063:	mov    rdx,QWORD PTR [rbp-0x8]
  407067:	mov    rdx,QWORD PTR [rdx+0x58]
  40706b:	sub    rcx,rdx
  40706e:	mov    rdx,rcx
  407071:	mov    DWORD PTR [rax+0x10],edx
  407074:	mov    rax,QWORD PTR [rbp-0x8]
  407078:	mov    rax,QWORD PTR [rax+0x30]
  40707c:	mov    rdx,QWORD PTR [rbp-0x8]
  407080:	mov    rdx,QWORD PTR [rdx]
  407083:	mov    rcx,rdx
  407086:	mov    rdx,QWORD PTR [rbp-0x8]
  40708a:	mov    rdx,QWORD PTR [rdx+0x88]
  407091:	sub    rcx,rdx
  407094:	mov    rdx,rcx
  407097:	mov    DWORD PTR [rax+0x14],edx
  40709a:	mov    rax,QWORD PTR [rbp-0x8]
  40709e:	mov    rax,QWORD PTR [rax+0x30]
  4070a2:	mov    rdx,QWORD PTR [rbp-0x8]
  4070a6:	mov    edx,DWORD PTR [rdx+0x14]
  4070a9:	mov    DWORD PTR [rax+0x18],edx
  4070ac:	mov    rax,QWORD PTR [rbp-0x8]
  4070b0:	mov    rax,QWORD PTR [rax+0x30]
  4070b4:	mov    rdx,QWORD PTR [rbp-0x8]
  4070b8:	movzx  edx,WORD PTR [rdx+0x10]
  4070bc:	mov    WORD PTR [rax+0x1c],dx
  4070c0:	mov    rax,QWORD PTR [rbp-0x8]
  4070c4:	mov    DWORD PTR [rax+0x14],0x0
  4070cb:	mov    rax,QWORD PTR [rbp-0x8]
  4070cf:	mov    DWORD PTR [rax+0x14],0x2f693b52
  4070d6:	mov    rax,QWORD PTR [rbp-0x8]
  4070da:	mov    WORD PTR [rax+0x10],0x0
  4070e0:	mov    rax,QWORD PTR [rbp-0x8]
  4070e4:	mov    rax,QWORD PTR [rax+0x30]
  4070e8:	mov    WORD PTR [rax+0xe],0x3
  4070ee:	mov    edx,DWORD PTR [rbp-0xc]
  4070f1:	mov    rax,QWORD PTR [rbp-0x8]
  4070f5:	mov    esi,edx
  4070f7:	mov    rdi,rax
  4070fa:	call   404a50 <flatcc_builder_default_alloc@@Base+0x5bd>
  4070ff:	test   eax,eax
  407101:	je     40710a <flatcc_builder_start_table@@Base+0xe8>
  407103:	mov    eax,0xffffffff
  407108:	jmp    407120 <flatcc_builder_start_table@@Base+0xfe>
  40710a:	mov    rax,QWORD PTR [rbp-0x8]
  40710e:	mov    esi,0xfffc
  407113:	mov    rdi,rax
  407116:	call   404600 <flatcc_builder_default_alloc@@Base+0x16d>
  40711b:	mov    eax,0x0
  407120:	leave  
  407121:	ret    

0000000000407122 <flatcc_builder_create_vtable@@Base>:
  407122:	push   rbp
  407123:	mov    rbp,rsp
  407126:	sub    rsp,0xd0
  40712d:	mov    QWORD PTR [rbp-0xb8],rdi
  407134:	mov    QWORD PTR [rbp-0xc0],rsi
  40713b:	mov    eax,edx
  40713d:	mov    WORD PTR [rbp-0xc4],ax
  407144:	mov    rax,QWORD PTR fs:0x28
  40714d:	mov    QWORD PTR [rbp-0x8],rax
  407151:	xor    eax,eax
  407153:	mov    QWORD PTR [rbp-0xa0],0x0
  40715e:	mov    DWORD PTR [rbp-0x98],0x0
  407168:	cmp    WORD PTR [rbp-0xc4],0x0
  407170:	je     4071da <flatcc_builder_create_vtable@@Base+0xb8>
  407172:	mov    rdx,QWORD PTR [rbp-0xa0]
  407179:	movzx  eax,WORD PTR [rbp-0xc4]
  407180:	add    rax,rdx
  407183:	mov    QWORD PTR [rbp-0xa0],rax
  40718a:	mov    eax,DWORD PTR [rbp-0x98]
  407190:	cdqe   
  407192:	shl    rax,0x4
  407196:	add    rax,rbp
  407199:	lea    rdx,[rax-0x90]
  4071a0:	mov    rax,QWORD PTR [rbp-0xc0]
  4071a7:	mov    QWORD PTR [rdx],rax
  4071aa:	mov    edx,DWORD PTR [rbp-0x98]
  4071b0:	movzx  eax,WORD PTR [rbp-0xc4]
  4071b7:	movsxd rdx,edx
  4071ba:	shl    rdx,0x4
  4071be:	add    rdx,rbp
  4071c1:	sub    rdx,0x88
  4071c8:	mov    QWORD PTR [rdx],rax
  4071cb:	mov    eax,DWORD PTR [rbp-0x98]
  4071d1:	add    eax,0x1
  4071d4:	mov    DWORD PTR [rbp-0x98],eax
  4071da:	mov    rax,QWORD PTR [rbp-0xb8]
  4071e1:	mov    eax,DWORD PTR [rax+0x100]
  4071e7:	test   eax,eax
  4071e9:	jne    40722b <flatcc_builder_create_vtable@@Base+0x109>
  4071eb:	mov    rax,QWORD PTR [rbp-0xb8]
  4071f2:	mov    eax,DWORD PTR [rax+0x124]
  4071f8:	test   eax,eax
  4071fa:	jne    40722b <flatcc_builder_create_vtable@@Base+0x109>
  4071fc:	lea    rdx,[rbp-0xa0]
  407203:	mov    rax,QWORD PTR [rbp-0xb8]
  40720a:	mov    rsi,rdx
  40720d:	mov    rdi,rax
  407210:	call   4057c0 <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  407215:	mov    DWORD PTR [rbp-0xa4],eax
  40721b:	cmp    DWORD PTR [rbp-0xa4],0x0
  407222:	jne    407261 <flatcc_builder_create_vtable@@Base+0x13f>
  407224:	mov    eax,0x0
  407229:	jmp    407267 <flatcc_builder_create_vtable@@Base+0x145>
  40722b:	lea    rdx,[rbp-0xa0]
  407232:	mov    rax,QWORD PTR [rbp-0xb8]
  407239:	mov    rsi,rdx
  40723c:	mov    rdi,rax
  40723f:	call   4056e1 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  407244:	mov    DWORD PTR [rbp-0xa4],eax
  40724a:	cmp    DWORD PTR [rbp-0xa4],0x0
  407251:	jne    40725a <flatcc_builder_create_vtable@@Base+0x138>
  407253:	mov    eax,0x0
  407258:	jmp    407267 <flatcc_builder_create_vtable@@Base+0x145>
  40725a:	add    DWORD PTR [rbp-0xa4],0x1
  407261:	mov    eax,DWORD PTR [rbp-0xa4]
  407267:	mov    rcx,QWORD PTR [rbp-0x8]
  40726b:	xor    rcx,QWORD PTR fs:0x28
  407274:	je     40727b <flatcc_builder_create_vtable@@Base+0x159>
  407276:	call   403070 <__stack_chk_fail@plt>
  40727b:	leave  
  40727c:	ret    

000000000040727d <flatcc_builder_create_cached_vtable@@Base>:
  40727d:	push   rbp
  40727e:	mov    rbp,rsp
  407281:	sub    rsp,0x50
  407285:	mov    QWORD PTR [rbp-0x38],rdi
  407289:	mov    QWORD PTR [rbp-0x40],rsi
  40728d:	mov    eax,edx
  40728f:	mov    DWORD PTR [rbp-0x48],ecx
  407292:	mov    WORD PTR [rbp-0x44],ax
  407296:	mov    edx,DWORD PTR [rbp-0x48]
  407299:	mov    rax,QWORD PTR [rbp-0x38]
  40729d:	mov    esi,edx
  40729f:	mov    rdi,rax
  4072a2:	call   404c5d <flatcc_builder_default_alloc@@Base+0x7ca>
  4072a7:	mov    QWORD PTR [rbp-0x18],rax
  4072ab:	cmp    QWORD PTR [rbp-0x18],0x0
  4072b0:	jne    4072bc <flatcc_builder_create_cached_vtable@@Base+0x3f>
  4072b2:	mov    eax,0x0
  4072b7:	jmp    40755d <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  4072bc:	mov    rax,QWORD PTR [rbp-0x18]
  4072c0:	mov    QWORD PTR [rbp-0x20],rax
  4072c4:	mov    rax,QWORD PTR [rbp-0x20]
  4072c8:	mov    eax,DWORD PTR [rax]
  4072ca:	mov    DWORD PTR [rbp-0x2c],eax
  4072cd:	mov    QWORD PTR [rbp-0x28],0x0
  4072d5:	jmp    4073b4 <flatcc_builder_create_cached_vtable@@Base+0x137>
  4072da:	mov    rax,QWORD PTR [rbp-0x38]
  4072de:	mov    rdx,QWORD PTR [rax+0xb8]
  4072e5:	mov    eax,DWORD PTR [rbp-0x2c]
  4072e8:	add    rax,rdx
  4072eb:	mov    QWORD PTR [rbp-0x10],rax
  4072ef:	mov    rax,QWORD PTR [rbp-0x38]
  4072f3:	mov    rdx,QWORD PTR [rax+0x78]
  4072f7:	mov    rax,QWORD PTR [rbp-0x10]
  4072fb:	mov    eax,DWORD PTR [rax+0x8]
  4072fe:	mov    eax,eax
  407300:	add    rax,rdx
  407303:	mov    QWORD PTR [rbp-0x8],rax
  407307:	mov    rax,QWORD PTR [rbp-0x8]
  40730b:	movzx  eax,WORD PTR [rax]
  40730e:	cmp    ax,WORD PTR [rbp-0x44]
  407312:	jne    40732f <flatcc_builder_create_cached_vtable@@Base+0xb2>
  407314:	movzx  edx,WORD PTR [rbp-0x44]
  407318:	mov    rcx,QWORD PTR [rbp-0x8]
  40731c:	mov    rax,QWORD PTR [rbp-0x40]
  407320:	mov    rsi,rcx
  407323:	mov    rdi,rax
  407326:	call   4030d0 <memcmp@plt>
  40732b:	test   eax,eax
  40732d:	je     407347 <flatcc_builder_create_cached_vtable@@Base+0xca>
  40732f:	mov    rax,QWORD PTR [rbp-0x10]
  407333:	add    rax,0xc
  407337:	mov    QWORD PTR [rbp-0x20],rax
  40733b:	mov    rax,QWORD PTR [rbp-0x10]
  40733f:	mov    eax,DWORD PTR [rax+0xc]
  407342:	mov    DWORD PTR [rbp-0x2c],eax
  407345:	jmp    4073b4 <flatcc_builder_create_cached_vtable@@Base+0x137>
  407347:	mov    rax,QWORD PTR [rbp-0x10]
  40734b:	mov    edx,DWORD PTR [rax+0x4]
  40734e:	mov    rax,QWORD PTR [rbp-0x38]
  407352:	mov    eax,DWORD PTR [rax+0x100]
  407358:	cmp    edx,eax
  40735a:	je     40737c <flatcc_builder_create_cached_vtable@@Base+0xff>
  40735c:	mov    rax,QWORD PTR [rbp-0x10]
  407360:	mov    QWORD PTR [rbp-0x28],rax
  407364:	mov    rax,QWORD PTR [rbp-0x10]
  407368:	add    rax,0xc
  40736c:	mov    QWORD PTR [rbp-0x20],rax
  407370:	mov    rax,QWORD PTR [rbp-0x10]
  407374:	mov    eax,DWORD PTR [rax+0xc]
  407377:	mov    DWORD PTR [rbp-0x2c],eax
  40737a:	jmp    4073b4 <flatcc_builder_create_cached_vtable@@Base+0x137>
  40737c:	mov    rax,QWORD PTR [rbp-0x20]
  407380:	cmp    rax,QWORD PTR [rbp-0x18]
  407384:	je     4073a9 <flatcc_builder_create_cached_vtable@@Base+0x12c>
  407386:	mov    rax,QWORD PTR [rbp-0x10]
  40738a:	mov    edx,DWORD PTR [rax+0xc]
  40738d:	mov    rax,QWORD PTR [rbp-0x20]
  407391:	mov    DWORD PTR [rax],edx
  407393:	mov    rax,QWORD PTR [rbp-0x18]
  407397:	mov    edx,DWORD PTR [rax]
  407399:	mov    rax,QWORD PTR [rbp-0x10]
  40739d:	mov    DWORD PTR [rax+0xc],edx
  4073a0:	mov    rax,QWORD PTR [rbp-0x18]
  4073a4:	mov    edx,DWORD PTR [rbp-0x2c]
  4073a7:	mov    DWORD PTR [rax],edx
  4073a9:	mov    rax,QWORD PTR [rbp-0x10]
  4073ad:	mov    eax,DWORD PTR [rax]
  4073af:	jmp    40755d <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  4073b4:	cmp    DWORD PTR [rbp-0x2c],0x0
  4073b8:	jne    4072da <flatcc_builder_create_cached_vtable@@Base+0x5d>
  4073be:	mov    rax,QWORD PTR [rbp-0x38]
  4073c2:	mov    eax,DWORD PTR [rax+0xe4]
  4073c8:	mov    edx,eax
  4073ca:	mov    rax,QWORD PTR [rbp-0x38]
  4073ce:	mov    r8d,0x0
  4073d4:	mov    ecx,0x10
  4073d9:	mov    esi,0x6
  4073de:	mov    rdi,rax
  4073e1:	call   40499f <flatcc_builder_default_alloc@@Base+0x50c>
  4073e6:	mov    QWORD PTR [rbp-0x10],rax
  4073ea:	cmp    QWORD PTR [rbp-0x10],0x0
  4073ef:	jne    4073fb <flatcc_builder_create_cached_vtable@@Base+0x17e>
  4073f1:	mov    eax,0x0
  4073f6:	jmp    40755d <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  4073fb:	mov    rax,QWORD PTR [rbp-0x38]
  4073ff:	mov    eax,DWORD PTR [rax+0xe4]
  407405:	mov    DWORD PTR [rbp-0x2c],eax
  407408:	mov    rax,QWORD PTR [rbp-0x38]
  40740c:	mov    eax,DWORD PTR [rax+0xe4]
  407412:	lea    edx,[rax+0x10]
  407415:	mov    rax,QWORD PTR [rbp-0x38]
  407419:	mov    DWORD PTR [rax+0xe4],edx
  40741f:	mov    rax,QWORD PTR [rbp-0x38]
  407423:	mov    edx,DWORD PTR [rax+0x100]
  407429:	mov    rax,QWORD PTR [rbp-0x10]
  40742d:	mov    DWORD PTR [rax+0x4],edx
  407430:	mov    rax,QWORD PTR [rbp-0x18]
  407434:	mov    edx,DWORD PTR [rax]
  407436:	mov    rax,QWORD PTR [rbp-0x10]
  40743a:	mov    DWORD PTR [rax+0xc],edx
  40743d:	mov    rax,QWORD PTR [rbp-0x18]
  407441:	mov    edx,DWORD PTR [rbp-0x2c]
  407444:	mov    DWORD PTR [rax],edx
  407446:	movzx  edx,WORD PTR [rbp-0x44]
  40744a:	mov    rcx,QWORD PTR [rbp-0x40]
  40744e:	mov    rax,QWORD PTR [rbp-0x38]
  407452:	mov    rsi,rcx
  407455:	mov    rdi,rax
  407458:	call   407122 <flatcc_builder_create_vtable@@Base>
  40745d:	mov    edx,eax
  40745f:	mov    rax,QWORD PTR [rbp-0x10]
  407463:	mov    DWORD PTR [rax],edx
  407465:	mov    rax,QWORD PTR [rbp-0x10]
  407469:	mov    eax,DWORD PTR [rax]
  40746b:	test   eax,eax
  40746d:	jne    407479 <flatcc_builder_create_cached_vtable@@Base+0x1fc>
  40746f:	mov    eax,0x0
  407474:	jmp    40755d <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  407479:	cmp    QWORD PTR [rbp-0x28],0x0
  40747e:	je     407493 <flatcc_builder_create_cached_vtable@@Base+0x216>
  407480:	mov    rax,QWORD PTR [rbp-0x28]
  407484:	mov    edx,DWORD PTR [rax+0x8]
  407487:	mov    rax,QWORD PTR [rbp-0x10]
  40748b:	mov    DWORD PTR [rax+0x8],edx
  40748e:	jmp    407557 <flatcc_builder_create_cached_vtable@@Base+0x2da>
  407493:	mov    rax,QWORD PTR [rbp-0x38]
  407497:	mov    rax,QWORD PTR [rax+0x118]
  40749e:	test   rax,rax
  4074a1:	je     4074d6 <flatcc_builder_create_cached_vtable@@Base+0x259>
  4074a3:	mov    rax,QWORD PTR [rbp-0x38]
  4074a7:	mov    rdx,QWORD PTR [rax+0x118]
  4074ae:	mov    rax,QWORD PTR [rbp-0x38]
  4074b2:	mov    ecx,DWORD PTR [rax+0xe0]
  4074b8:	movzx  eax,WORD PTR [rbp-0x44]
  4074bc:	add    eax,ecx
  4074be:	mov    eax,eax
  4074c0:	cmp    rdx,rax
  4074c3:	jae    4074d6 <flatcc_builder_create_cached_vtable@@Base+0x259>
  4074c5:	mov    rax,QWORD PTR [rbp-0x38]
  4074c9:	mov    rdi,rax
  4074cc:	call   404cd1 <flatcc_builder_flush_vtable_cache@@Base>
  4074d1:	jmp    407557 <flatcc_builder_create_cached_vtable@@Base+0x2da>
  4074d6:	movzx  edx,WORD PTR [rbp-0x44]
  4074da:	mov    rax,QWORD PTR [rbp-0x38]
  4074de:	mov    eax,DWORD PTR [rax+0xe0]
  4074e4:	mov    esi,eax
  4074e6:	mov    rax,QWORD PTR [rbp-0x38]
  4074ea:	mov    r8d,0x0
  4074f0:	mov    rcx,rdx
  4074f3:	mov    rdx,rsi
  4074f6:	mov    esi,0x2
  4074fb:	mov    rdi,rax
  4074fe:	call   40499f <flatcc_builder_default_alloc@@Base+0x50c>
  407503:	mov    QWORD PTR [rbp-0x8],rax
  407507:	cmp    QWORD PTR [rbp-0x8],0x0
  40750c:	jne    407515 <flatcc_builder_create_cached_vtable@@Base+0x298>
  40750e:	mov    eax,0xffffffff
  407513:	jmp    40755d <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  407515:	mov    rax,QWORD PTR [rbp-0x38]
  407519:	mov    edx,DWORD PTR [rax+0xe0]
  40751f:	mov    rax,QWORD PTR [rbp-0x10]
  407523:	mov    DWORD PTR [rax+0x8],edx
  407526:	mov    rax,QWORD PTR [rbp-0x38]
  40752a:	mov    edx,DWORD PTR [rax+0xe0]
  407530:	movzx  eax,WORD PTR [rbp-0x44]
  407534:	add    edx,eax
  407536:	mov    rax,QWORD PTR [rbp-0x38]
  40753a:	mov    DWORD PTR [rax+0xe0],edx
  407540:	movzx  edx,WORD PTR [rbp-0x44]
  407544:	mov    rcx,QWORD PTR [rbp-0x40]
  407548:	mov    rax,QWORD PTR [rbp-0x8]
  40754c:	mov    rsi,rcx
  40754f:	mov    rdi,rax
  407552:	call   4030f0 <memcpy@plt>
  407557:	mov    rax,QWORD PTR [rbp-0x10]
  40755b:	mov    eax,DWORD PTR [rax]
  40755d:	leave  
  40755e:	ret    

000000000040755f <flatcc_builder_create_table@@Base>:
  40755f:	push   rbp
  407560:	mov    rbp,rsp
  407563:	sub    rsp,0x100
  40756a:	mov    QWORD PTR [rbp-0xd8],rdi
  407571:	mov    QWORD PTR [rbp-0xe0],rsi
  407578:	mov    QWORD PTR [rbp-0xe8],rdx
  40757f:	mov    eax,ecx
  407581:	mov    QWORD PTR [rbp-0xf8],r8
  407588:	mov    DWORD PTR [rbp-0xf0],r9d
  40758f:	mov    WORD PTR [rbp-0xec],ax
  407596:	mov    rax,QWORD PTR fs:0x28
  40759f:	mov    QWORD PTR [rbp-0x8],rax
  4075a3:	xor    eax,eax
  4075a5:	cmp    DWORD PTR [rbp-0xf0],0x0
  4075ac:	jns    4075cd <flatcc_builder_create_table@@Base+0x6e>
  4075ae:	lea    rcx,[rip+0x487b]        # 40be30 <flatcc_builder_padding_base@@Base+0x950>
  4075b5:	mov    edx,0x4d5
  4075ba:	lea    rsi,[rip+0x411f]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4075c1:	lea    rdi,[rip+0x43cd]        # 40b995 <flatcc_builder_padding_base@@Base+0x4b5>
  4075c8:	call   403090 <__assert_fail@plt>
  4075cd:	mov    eax,DWORD PTR [rbp+0x10]
  4075d0:	and    eax,0x1
  4075d3:	test   eax,eax
  4075d5:	jne    4075f6 <flatcc_builder_create_table@@Base+0x97>
  4075d7:	lea    rcx,[rip+0x4852]        # 40be30 <flatcc_builder_padding_base@@Base+0x950>
  4075de:	mov    edx,0x4db
  4075e3:	lea    rsi,[rip+0x40f6]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4075ea:	lea    rdi,[rip+0x43b6]        # 40b9a7 <flatcc_builder_padding_base@@Base+0x4c7>
  4075f1:	call   403090 <__assert_fail@plt>
  4075f6:	lea    rax,[rbp-0xec]
  4075fd:	mov    esi,0x4
  407602:	mov    rdi,rax
  407605:	call   40510e <flatcc_builder_clear@@Base+0xc7>
  40760a:	movzx  eax,WORD PTR [rbp-0xec]
  407611:	movzx  edx,ax
  407614:	mov    rax,QWORD PTR [rbp-0xd8]
  40761b:	mov    esi,edx
  40761d:	mov    rdi,rax
  407620:	call   4050dd <flatcc_builder_clear@@Base+0x96>
  407625:	movzx  eax,WORD PTR [rbp-0xec]
  40762c:	movzx  edx,ax
  40762f:	mov    rax,QWORD PTR [rbp-0xe8]
  407636:	mov    ecx,eax
  407638:	mov    rax,QWORD PTR [rbp-0xd8]
  40763f:	mov    esi,ecx
  407641:	mov    rdi,rax
  407644:	call   405695 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  407649:	mov    DWORD PTR [rbp-0xbc],eax
  40764f:	mov    rax,QWORD PTR [rbp-0xd8]
  407656:	mov    eax,DWORD PTR [rax+0xf0]
  40765c:	mov    edx,eax
  40765e:	mov    rax,QWORD PTR [rbp-0xe8]
  407665:	mov    ecx,eax
  407667:	mov    eax,DWORD PTR [rbp-0xbc]
  40766d:	add    eax,ecx
  40766f:	sub    edx,eax
  407671:	mov    eax,edx
  407673:	sub    eax,0x4
  407676:	mov    DWORD PTR [rbp-0xb8],eax
  40767c:	mov    eax,DWORD PTR [rbp+0x10]
  40767f:	sub    eax,0x1
  407682:	mov    DWORD PTR [rbp-0xb4],eax
  407688:	mov    eax,DWORD PTR [rbp-0xb8]
  40768e:	sub    eax,DWORD PTR [rbp-0xb4]
  407694:	mov    DWORD PTR [rbp-0xb0],eax
  40769a:	mov    eax,DWORD PTR [rbp-0xb8]
  4076a0:	sub    eax,DWORD PTR [rbp-0xb0]
  4076a6:	cmp    eax,DWORD PTR [rbp-0xb4]
  4076ac:	je     4076b8 <flatcc_builder_create_table@@Base+0x159>
  4076ae:	mov    eax,0xffffffff
  4076b3:	jmp    4078dc <flatcc_builder_create_table@@Base+0x37d>
  4076b8:	mov    eax,DWORD PTR [rbp-0xb0]
  4076be:	mov    edi,eax
  4076c0:	call   4043cd <main@@Base+0xc2>
  4076c5:	mov    DWORD PTR [rbp-0xc4],eax
  4076cb:	mov    DWORD PTR [rbp-0xc0],0x0
  4076d5:	jmp    407760 <flatcc_builder_create_table@@Base+0x201>
  4076da:	mov    eax,DWORD PTR [rbp-0xc0]
  4076e0:	cdqe   
  4076e2:	lea    rdx,[rax+rax*1]
  4076e6:	mov    rax,QWORD PTR [rbp-0xf8]
  4076ed:	add    rax,rdx
  4076f0:	movzx  eax,WORD PTR [rax]
  4076f3:	movzx  edx,ax
  4076f6:	mov    rax,QWORD PTR [rbp-0xe0]
  4076fd:	add    rax,rdx
  407700:	mov    QWORD PTR [rbp-0xa8],rax
  407707:	mov    rax,QWORD PTR [rbp-0xa8]
  40770e:	mov    eax,DWORD PTR [rax]
  407710:	sub    eax,DWORD PTR [rbp-0xb8]
  407716:	mov    edx,eax
  407718:	mov    eax,DWORD PTR [rbp-0xc0]
  40771e:	cdqe   
  407720:	lea    rcx,[rax+rax*1]
  407724:	mov    rax,QWORD PTR [rbp-0xf8]
  40772b:	add    rax,rcx
  40772e:	movzx  eax,WORD PTR [rax]
  407731:	movzx  eax,ax
  407734:	sub    edx,eax
  407736:	mov    eax,edx
  407738:	sub    eax,0x4
  40773b:	mov    DWORD PTR [rbp-0xac],eax
  407741:	mov    eax,DWORD PTR [rbp-0xac]
  407747:	mov    edi,eax
  407749:	call   4043cd <main@@Base+0xc2>
  40774e:	mov    edx,eax
  407750:	mov    rax,QWORD PTR [rbp-0xa8]
  407757:	mov    DWORD PTR [rax],edx
  407759:	add    DWORD PTR [rbp-0xc0],0x1
  407760:	mov    eax,DWORD PTR [rbp-0xc0]
  407766:	cmp    eax,DWORD PTR [rbp-0xf0]
  40776c:	jl     4076da <flatcc_builder_create_table@@Base+0x17b>
  407772:	mov    QWORD PTR [rbp-0xa0],0x0
  40777d:	mov    DWORD PTR [rbp-0x98],0x0
  407787:	mov    rax,QWORD PTR [rbp-0xa0]
  40778e:	add    rax,0x4
  407792:	mov    QWORD PTR [rbp-0xa0],rax
  407799:	mov    eax,DWORD PTR [rbp-0x98]
  40779f:	cdqe   
  4077a1:	shl    rax,0x4
  4077a5:	add    rax,rbp
  4077a8:	lea    rdx,[rax-0x90]
  4077af:	lea    rax,[rbp-0xc4]
  4077b6:	mov    QWORD PTR [rdx],rax
  4077b9:	mov    eax,DWORD PTR [rbp-0x98]
  4077bf:	cdqe   
  4077c1:	shl    rax,0x4
  4077c5:	add    rax,rbp
  4077c8:	sub    rax,0x88
  4077ce:	mov    QWORD PTR [rax],0x4
  4077d5:	mov    eax,DWORD PTR [rbp-0x98]
  4077db:	add    eax,0x1
  4077de:	mov    DWORD PTR [rbp-0x98],eax
  4077e4:	cmp    QWORD PTR [rbp-0xe8],0x0
  4077ec:	je     407855 <flatcc_builder_create_table@@Base+0x2f6>
  4077ee:	mov    rdx,QWORD PTR [rbp-0xa0]
  4077f5:	mov    rax,QWORD PTR [rbp-0xe8]
  4077fc:	add    rax,rdx
  4077ff:	mov    QWORD PTR [rbp-0xa0],rax
  407806:	mov    eax,DWORD PTR [rbp-0x98]
  40780c:	cdqe   
  40780e:	shl    rax,0x4
  407812:	add    rax,rbp
  407815:	lea    rdx,[rax-0x90]
  40781c:	mov    rax,QWORD PTR [rbp-0xe0]
  407823:	mov    QWORD PTR [rdx],rax
  407826:	mov    eax,DWORD PTR [rbp-0x98]
  40782c:	cdqe   
  40782e:	shl    rax,0x4
  407832:	add    rax,rbp
  407835:	lea    rdx,[rax-0x88]
  40783c:	mov    rax,QWORD PTR [rbp-0xe8]
  407843:	mov    QWORD PTR [rdx],rax
  407846:	mov    eax,DWORD PTR [rbp-0x98]
  40784c:	add    eax,0x1
  40784f:	mov    DWORD PTR [rbp-0x98],eax
  407855:	cmp    DWORD PTR [rbp-0xbc],0x0
  40785c:	je     4078c3 <flatcc_builder_create_table@@Base+0x364>
  40785e:	mov    rdx,QWORD PTR [rbp-0xa0]
  407865:	mov    eax,DWORD PTR [rbp-0xbc]
  40786b:	add    rax,rdx
  40786e:	mov    QWORD PTR [rbp-0xa0],rax
  407875:	mov    eax,DWORD PTR [rbp-0x98]
  40787b:	cdqe   
  40787d:	shl    rax,0x4
  407881:	add    rax,rbp
  407884:	sub    rax,0x90
  40788a:	mov    rdx,0x40b4e0
  407891:	mov    QWORD PTR [rax],rdx
  407894:	mov    edx,DWORD PTR [rbp-0x98]
  40789a:	mov    eax,DWORD PTR [rbp-0xbc]
  4078a0:	movsxd rdx,edx
  4078a3:	shl    rdx,0x4
  4078a7:	add    rdx,rbp
  4078aa:	sub    rdx,0x88
  4078b1:	mov    QWORD PTR [rdx],rax
  4078b4:	mov    eax,DWORD PTR [rbp-0x98]
  4078ba:	add    eax,0x1
  4078bd:	mov    DWORD PTR [rbp-0x98],eax
  4078c3:	lea    rdx,[rbp-0xa0]
  4078ca:	mov    rax,QWORD PTR [rbp-0xd8]
  4078d1:	mov    rsi,rdx
  4078d4:	mov    rdi,rax
  4078d7:	call   4056e1 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4078dc:	mov    rsi,QWORD PTR [rbp-0x8]
  4078e0:	xor    rsi,QWORD PTR fs:0x28
  4078e9:	je     4078f0 <flatcc_builder_create_table@@Base+0x391>
  4078eb:	call   403070 <__stack_chk_fail@plt>
  4078f0:	leave  
  4078f1:	ret    

00000000004078f2 <flatcc_builder_check_required_field@@Base>:
  4078f2:	push   rbp
  4078f3:	mov    rbp,rsp
  4078f6:	sub    rsp,0x10
  4078fa:	mov    QWORD PTR [rbp-0x8],rdi
  4078fe:	mov    eax,esi
  407900:	mov    WORD PTR [rbp-0xc],ax
  407904:	mov    rax,QWORD PTR [rbp-0x8]
  407908:	mov    rax,QWORD PTR [rax+0x30]
  40790c:	movzx  eax,WORD PTR [rax+0xe]
  407910:	cmp    ax,0x3
  407914:	je     407935 <flatcc_builder_check_required_field@@Base+0x43>
  407916:	lea    rcx,[rip+0x4543]        # 40be60 <flatcc_builder_padding_base@@Base+0x980>
  40791d:	mov    edx,0x4f8
  407922:	lea    rsi,[rip+0x3db7]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  407929:	lea    rdi,[rip+0x4088]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  407930:	call   403090 <__assert_fail@plt>
  407935:	mov    rax,QWORD PTR [rbp-0x8]
  407939:	movzx  eax,WORD PTR [rax+0x10]
  40793d:	cmp    ax,WORD PTR [rbp-0xc]
  407941:	jbe    407964 <flatcc_builder_check_required_field@@Base+0x72>
  407943:	mov    rax,QWORD PTR [rbp-0x8]
  407947:	mov    rax,QWORD PTR [rax+0x8]
  40794b:	movzx  edx,WORD PTR [rbp-0xc]
  40794f:	add    rdx,rdx
  407952:	add    rax,rdx
  407955:	movzx  eax,WORD PTR [rax]
  407958:	test   ax,ax
  40795b:	je     407964 <flatcc_builder_check_required_field@@Base+0x72>
  40795d:	mov    eax,0x1
  407962:	jmp    407969 <flatcc_builder_check_required_field@@Base+0x77>
  407964:	mov    eax,0x0
  407969:	leave  
  40796a:	ret    

000000000040796b <flatcc_builder_check_union_field@@Base>:
  40796b:	push   rbp
  40796c:	mov    rbp,rsp
  40796f:	sub    rsp,0x10
  407973:	mov    QWORD PTR [rbp-0x8],rdi
  407977:	mov    eax,esi
  407979:	mov    WORD PTR [rbp-0xc],ax
  40797d:	mov    rax,QWORD PTR [rbp-0x8]
  407981:	mov    rax,QWORD PTR [rax+0x30]
  407985:	movzx  eax,WORD PTR [rax+0xe]
  407989:	cmp    ax,0x3
  40798d:	je     4079ae <flatcc_builder_check_union_field@@Base+0x43>
  40798f:	lea    rcx,[rip+0x450a]        # 40bea0 <flatcc_builder_padding_base@@Base+0x9c0>
  407996:	mov    edx,0x4ff
  40799b:	lea    rsi,[rip+0x3d3e]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4079a2:	lea    rdi,[rip+0x400f]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  4079a9:	call   403090 <__assert_fail@plt>
  4079ae:	cmp    WORD PTR [rbp-0xc],0x0
  4079b3:	je     4079c3 <flatcc_builder_check_union_field@@Base+0x58>
  4079b5:	mov    rax,QWORD PTR [rbp-0x8]
  4079b9:	movzx  eax,WORD PTR [rax+0x10]
  4079bd:	cmp    ax,WORD PTR [rbp-0xc]
  4079c1:	ja     4079cd <flatcc_builder_check_union_field@@Base+0x62>
  4079c3:	mov    eax,0x0
  4079c8:	jmp    407a77 <flatcc_builder_check_union_field@@Base+0x10c>
  4079cd:	mov    rax,QWORD PTR [rbp-0x8]
  4079d1:	mov    rax,QWORD PTR [rax+0x8]
  4079d5:	movzx  edx,WORD PTR [rbp-0xc]
  4079d9:	add    rdx,rdx
  4079dc:	sub    rdx,0x2
  4079e0:	add    rax,rdx
  4079e3:	movzx  eax,WORD PTR [rax]
  4079e6:	test   ax,ax
  4079e9:	jne    407a0b <flatcc_builder_check_union_field@@Base+0xa0>
  4079eb:	mov    rax,QWORD PTR [rbp-0x8]
  4079ef:	mov    rax,QWORD PTR [rax+0x8]
  4079f3:	movzx  edx,WORD PTR [rbp-0xc]
  4079f7:	add    rdx,rdx
  4079fa:	add    rax,rdx
  4079fd:	movzx  eax,WORD PTR [rax]
  407a00:	test   ax,ax
  407a03:	sete   al
  407a06:	movzx  eax,al
  407a09:	jmp    407a77 <flatcc_builder_check_union_field@@Base+0x10c>
  407a0b:	mov    rax,QWORD PTR [rbp-0x8]
  407a0f:	mov    rdx,QWORD PTR [rax+0x18]
  407a13:	mov    rax,QWORD PTR [rbp-0x8]
  407a17:	mov    rax,QWORD PTR [rax+0x8]
  407a1b:	movzx  ecx,WORD PTR [rbp-0xc]
  407a1f:	add    rcx,rcx
  407a22:	sub    rcx,0x2
  407a26:	add    rax,rcx
  407a29:	movzx  eax,WORD PTR [rax]
  407a2c:	movzx  eax,ax
  407a2f:	add    rax,rdx
  407a32:	movzx  eax,BYTE PTR [rax]
  407a35:	test   al,al
  407a37:	je     407a59 <flatcc_builder_check_union_field@@Base+0xee>
  407a39:	mov    rax,QWORD PTR [rbp-0x8]
  407a3d:	mov    rax,QWORD PTR [rax+0x8]
  407a41:	movzx  edx,WORD PTR [rbp-0xc]
  407a45:	add    rdx,rdx
  407a48:	add    rax,rdx
  407a4b:	movzx  eax,WORD PTR [rax]
  407a4e:	test   ax,ax
  407a51:	setne  al
  407a54:	movzx  eax,al
  407a57:	jmp    407a77 <flatcc_builder_check_union_field@@Base+0x10c>
  407a59:	mov    rax,QWORD PTR [rbp-0x8]
  407a5d:	mov    rax,QWORD PTR [rax+0x8]
  407a61:	movzx  edx,WORD PTR [rbp-0xc]
  407a65:	add    rdx,rdx
  407a68:	add    rax,rdx
  407a6b:	movzx  eax,WORD PTR [rax]
  407a6e:	test   ax,ax
  407a71:	sete   al
  407a74:	movzx  eax,al
  407a77:	leave  
  407a78:	ret    

0000000000407a79 <flatcc_builder_check_required@@Base>:
  407a79:	push   rbp
  407a7a:	mov    rbp,rsp
  407a7d:	sub    rsp,0x30
  407a81:	mov    QWORD PTR [rbp-0x18],rdi
  407a85:	mov    QWORD PTR [rbp-0x20],rsi
  407a89:	mov    DWORD PTR [rbp-0x24],edx
  407a8c:	mov    rax,QWORD PTR [rbp-0x18]
  407a90:	mov    rax,QWORD PTR [rax+0x30]
  407a94:	movzx  eax,WORD PTR [rax+0xe]
  407a98:	cmp    ax,0x3
  407a9c:	je     407abd <flatcc_builder_check_required@@Base+0x44>
  407a9e:	lea    rcx,[rip+0x442b]        # 40bed0 <flatcc_builder_padding_base@@Base+0x9f0>
  407aa5:	mov    edx,0x511
  407aaa:	lea    rsi,[rip+0x3c2f]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  407ab1:	lea    rdi,[rip+0x3f00]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  407ab8:	call   403090 <__assert_fail@plt>
  407abd:	mov    rax,QWORD PTR [rbp-0x18]
  407ac1:	movzx  eax,WORD PTR [rax+0x10]
  407ac5:	movzx  eax,ax
  407ac8:	cmp    eax,DWORD PTR [rbp-0x24]
  407acb:	jge    407ad4 <flatcc_builder_check_required@@Base+0x5b>
  407acd:	mov    eax,0x0
  407ad2:	jmp    407b22 <flatcc_builder_check_required@@Base+0xa9>
  407ad4:	mov    DWORD PTR [rbp-0x4],0x0
  407adb:	jmp    407b15 <flatcc_builder_check_required@@Base+0x9c>
  407add:	mov    rax,QWORD PTR [rbp-0x18]
  407ae1:	mov    rax,QWORD PTR [rax+0x8]
  407ae5:	mov    edx,DWORD PTR [rbp-0x4]
  407ae8:	movsxd rdx,edx
  407aeb:	lea    rcx,[rdx+rdx*1]
  407aef:	mov    rdx,QWORD PTR [rbp-0x20]
  407af3:	add    rdx,rcx
  407af6:	movzx  edx,WORD PTR [rdx]
  407af9:	movzx  edx,dx
  407afc:	add    rdx,rdx
  407aff:	add    rax,rdx
  407b02:	movzx  eax,WORD PTR [rax]
  407b05:	test   ax,ax
  407b08:	jne    407b11 <flatcc_builder_check_required@@Base+0x98>
  407b0a:	mov    eax,0x0
  407b0f:	jmp    407b22 <flatcc_builder_check_required@@Base+0xa9>
  407b11:	add    DWORD PTR [rbp-0x4],0x1
  407b15:	mov    eax,DWORD PTR [rbp-0x4]
  407b18:	cmp    eax,DWORD PTR [rbp-0x24]
  407b1b:	jl     407add <flatcc_builder_check_required@@Base+0x64>
  407b1d:	mov    eax,0x1
  407b22:	leave  
  407b23:	ret    

0000000000407b24 <flatcc_builder_end_table@@Base>:
  407b24:	push   rbp
  407b25:	mov    rbp,rsp
  407b28:	sub    rsp,0x30
  407b2c:	mov    QWORD PTR [rbp-0x28],rdi
  407b30:	mov    rax,QWORD PTR [rbp-0x28]
  407b34:	mov    rax,QWORD PTR [rax+0x30]
  407b38:	movzx  eax,WORD PTR [rax+0xe]
  407b3c:	cmp    ax,0x3
  407b40:	je     407b61 <flatcc_builder_end_table@@Base+0x3d>
  407b42:	lea    rcx,[rip+0x43a7]        # 40bef0 <flatcc_builder_padding_base@@Base+0xa10>
  407b49:	mov    edx,0x525
  407b4e:	lea    rsi,[rip+0x3b8b]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  407b55:	lea    rdi,[rip+0x3e5c]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  407b5c:	call   403090 <__assert_fail@plt>
  407b61:	mov    rax,QWORD PTR [rbp-0x28]
  407b65:	mov    rax,QWORD PTR [rax+0x8]
  407b69:	sub    rax,0x4
  407b6d:	mov    QWORD PTR [rbp-0x10],rax
  407b71:	mov    rax,QWORD PTR [rbp-0x28]
  407b75:	movzx  eax,WORD PTR [rax+0x10]
  407b79:	movzx  eax,ax
  407b7c:	add    eax,0x2
  407b7f:	cdqe   
  407b81:	add    eax,eax
  407b83:	mov    WORD PTR [rbp-0x1e],ax
  407b87:	mov    rax,QWORD PTR [rbp-0x10]
  407b8b:	movzx  edx,WORD PTR [rbp-0x1e]
  407b8f:	mov    WORD PTR [rax],dx
  407b92:	mov    rax,QWORD PTR [rbp-0x10]
  407b96:	lea    rdx,[rax+0x2]
  407b9a:	mov    rax,QWORD PTR [rbp-0x28]
  407b9e:	mov    eax,DWORD PTR [rax+0x20]
  407ba1:	add    eax,0x4
  407ba4:	mov    WORD PTR [rdx],ax
  407ba7:	mov    rax,QWORD PTR [rbp-0x10]
  407bab:	movzx  eax,WORD PTR [rax]
  407bae:	movzx  edx,ax
  407bb1:	mov    rax,QWORD PTR [rbp-0x28]
  407bb5:	mov    eax,DWORD PTR [rax+0x14]
  407bb8:	xor    eax,edx
  407bba:	imul   edx,eax,0x9e3779b1
  407bc0:	mov    rax,QWORD PTR [rbp-0x10]
  407bc4:	add    rax,0x2
  407bc8:	movzx  eax,WORD PTR [rax]
  407bcb:	movzx  eax,ax
  407bce:	xor    eax,edx
  407bd0:	imul   edx,eax,0x9e3779b1
  407bd6:	mov    rax,QWORD PTR [rbp-0x28]
  407bda:	mov    DWORD PTR [rax+0x14],edx
  407bdd:	mov    rax,QWORD PTR [rbp-0x28]
  407be1:	mov    ecx,DWORD PTR [rax+0x14]
  407be4:	movzx  edx,WORD PTR [rbp-0x1e]
  407be8:	mov    rsi,QWORD PTR [rbp-0x10]
  407bec:	mov    rax,QWORD PTR [rbp-0x28]
  407bf0:	mov    rdi,rax
  407bf3:	call   40727d <flatcc_builder_create_cached_vtable@@Base>
  407bf8:	mov    DWORD PTR [rbp-0x1c],eax
  407bfb:	cmp    DWORD PTR [rbp-0x1c],0x0
  407bff:	jne    407c0b <flatcc_builder_end_table@@Base+0xe7>
  407c01:	mov    eax,0x0
  407c06:	jmp    407d2b <flatcc_builder_end_table@@Base+0x207>
  407c0b:	movzx  edx,WORD PTR [rbp-0x1e]
  407c0f:	mov    rax,QWORD PTR [rbp-0x10]
  407c13:	mov    esi,0x0
  407c18:	mov    rdi,rax
  407c1b:	call   4030a0 <memset@plt>
  407c20:	mov    rax,QWORD PTR [rbp-0x28]
  407c24:	mov    rdx,QWORD PTR [rax+0x88]
  407c2b:	mov    rax,QWORD PTR [rbp-0x28]
  407c2f:	mov    rax,QWORD PTR [rax+0x30]
  407c33:	mov    eax,DWORD PTR [rax+0x14]
  407c36:	mov    eax,eax
  407c38:	add    rax,rdx
  407c3b:	mov    QWORD PTR [rbp-0x8],rax
  407c3f:	mov    rax,QWORD PTR [rbp-0x28]
  407c43:	mov    rax,QWORD PTR [rax]
  407c46:	mov    rdx,rax
  407c49:	mov    rax,QWORD PTR [rbp-0x8]
  407c4d:	sub    rdx,rax
  407c50:	mov    rax,rdx
  407c53:	sar    rax,1
  407c56:	mov    DWORD PTR [rbp-0x18],eax
  407c59:	mov    rax,QWORD PTR [rbp-0x28]
  407c5d:	movzx  eax,WORD PTR [rax+0xea]
  407c64:	movzx  edx,ax
  407c67:	mov    rax,QWORD PTR [rbp-0x28]
  407c6b:	mov    eax,DWORD PTR [rax+0x20]
  407c6e:	mov    r10d,eax
  407c71:	mov    rax,QWORD PTR [rbp-0x28]
  407c75:	mov    rsi,QWORD PTR [rax+0x18]
  407c79:	mov    r8d,DWORD PTR [rbp-0x18]
  407c7d:	mov    rdi,QWORD PTR [rbp-0x8]
  407c81:	mov    rax,QWORD PTR [rbp-0x28]
  407c85:	sub    rsp,0x8
  407c89:	mov    ecx,DWORD PTR [rbp-0x1c]
  407c8c:	push   rcx
  407c8d:	mov    r9d,r8d
  407c90:	mov    r8,rdi
  407c93:	mov    ecx,edx
  407c95:	mov    rdx,r10
  407c98:	mov    rdi,rax
  407c9b:	call   40755f <flatcc_builder_create_table@@Base>
  407ca0:	add    rsp,0x10
  407ca4:	mov    DWORD PTR [rbp-0x14],eax
  407ca7:	cmp    DWORD PTR [rbp-0x14],0x0
  407cab:	jne    407cb4 <flatcc_builder_end_table@@Base+0x190>
  407cad:	mov    eax,0x0
  407cb2:	jmp    407d2b <flatcc_builder_end_table@@Base+0x207>
  407cb4:	mov    rax,QWORD PTR [rbp-0x28]
  407cb8:	mov    rax,QWORD PTR [rax+0x30]
  407cbc:	mov    edx,DWORD PTR [rax+0x18]
  407cbf:	mov    rax,QWORD PTR [rbp-0x28]
  407cc3:	mov    DWORD PTR [rax+0x14],edx
  407cc6:	mov    rax,QWORD PTR [rbp-0x28]
  407cca:	mov    rax,QWORD PTR [rax+0x30]
  407cce:	movzx  edx,WORD PTR [rax+0x1c]
  407cd2:	mov    rax,QWORD PTR [rbp-0x28]
  407cd6:	mov    WORD PTR [rax+0x10],dx
  407cda:	mov    rax,QWORD PTR [rbp-0x28]
  407cde:	mov    rdx,QWORD PTR [rax+0x58]
  407ce2:	mov    rax,QWORD PTR [rbp-0x28]
  407ce6:	mov    rax,QWORD PTR [rax+0x30]
  407cea:	mov    eax,DWORD PTR [rax+0x10]
  407ced:	mov    eax,eax
  407cef:	add    rdx,rax
  407cf2:	mov    rax,QWORD PTR [rbp-0x28]
  407cf6:	mov    QWORD PTR [rax+0x8],rdx
  407cfa:	mov    rax,QWORD PTR [rbp-0x28]
  407cfe:	mov    rdx,QWORD PTR [rax+0x88]
  407d05:	mov    rax,QWORD PTR [rbp-0x28]
  407d09:	mov    rax,QWORD PTR [rax+0x30]
  407d0d:	mov    eax,DWORD PTR [rax+0x14]
  407d10:	mov    eax,eax
  407d12:	add    rdx,rax
  407d15:	mov    rax,QWORD PTR [rbp-0x28]
  407d19:	mov    QWORD PTR [rax],rdx
  407d1c:	mov    rax,QWORD PTR [rbp-0x28]
  407d20:	mov    rdi,rax
  407d23:	call   4055ce <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  407d28:	mov    eax,DWORD PTR [rbp-0x14]
  407d2b:	leave  
  407d2c:	ret    

0000000000407d2d <flatcc_builder_create_vector@@Base>:
  407d2d:	push   rbp
  407d2e:	mov    rbp,rsp
  407d31:	sub    rsp,0xe0
  407d38:	mov    QWORD PTR [rbp-0xb8],rdi
  407d3f:	mov    QWORD PTR [rbp-0xc0],rsi
  407d46:	mov    QWORD PTR [rbp-0xc8],rdx
  407d4d:	mov    QWORD PTR [rbp-0xd0],rcx
  407d54:	mov    eax,r8d
  407d57:	mov    QWORD PTR [rbp-0xe0],r9
  407d5e:	mov    WORD PTR [rbp-0xd4],ax
  407d65:	mov    rax,QWORD PTR fs:0x28
  407d6e:	mov    QWORD PTR [rbp-0x8],rax
  407d72:	xor    eax,eax
  407d74:	mov    rax,QWORD PTR [rbp-0xc8]
  407d7b:	cmp    rax,QWORD PTR [rbp-0xe0]
  407d82:	jbe    407dbd <flatcc_builder_create_vector@@Base+0x90>
  407d84:	mov    rax,QWORD PTR [rbp-0xc8]
  407d8b:	cmp    rax,QWORD PTR [rbp-0xe0]
  407d92:	jbe    407db3 <flatcc_builder_create_vector@@Base+0x86>
  407d94:	lea    rcx,[rip+0x4175]        # 40bf10 <flatcc_builder_padding_base@@Base+0xa30>
  407d9b:	mov    edx,0x555
  407da0:	lea    rsi,[rip+0x3939]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  407da7:	lea    rdi,[rip+0x3c35]        # 40b9e3 <flatcc_builder_padding_base@@Base+0x503>
  407dae:	call   403090 <__assert_fail@plt>
  407db3:	mov    eax,0x0
  407db8:	jmp    407fa8 <flatcc_builder_create_vector@@Base+0x27b>
  407dbd:	lea    rax,[rbp-0xd4]
  407dc4:	mov    esi,0x4
  407dc9:	mov    rdi,rax
  407dcc:	call   40510e <flatcc_builder_clear@@Base+0xc7>
  407dd1:	movzx  eax,WORD PTR [rbp-0xd4]
  407dd8:	movzx  edx,ax
  407ddb:	mov    rax,QWORD PTR [rbp-0xb8]
  407de2:	mov    esi,edx
  407de4:	mov    rdi,rax
  407de7:	call   4050dd <flatcc_builder_clear@@Base+0x96>
  407dec:	mov    rax,QWORD PTR [rbp-0xc8]
  407df3:	mov    edx,eax
  407df5:	mov    rax,QWORD PTR [rbp-0xd0]
  407dfc:	imul   eax,edx
  407dff:	mov    DWORD PTR [rbp-0xa8],eax
  407e05:	mov    rax,QWORD PTR [rbp-0xc8]
  407e0c:	mov    edi,eax
  407e0e:	call   4043cd <main@@Base+0xc2>
  407e13:	mov    DWORD PTR [rbp-0xac],eax
  407e19:	movzx  eax,WORD PTR [rbp-0xd4]
  407e20:	movzx  edx,ax
  407e23:	mov    ecx,DWORD PTR [rbp-0xa8]
  407e29:	mov    rax,QWORD PTR [rbp-0xb8]
  407e30:	mov    esi,ecx
  407e32:	mov    rdi,rax
  407e35:	call   405695 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  407e3a:	mov    DWORD PTR [rbp-0xa4],eax
  407e40:	mov    QWORD PTR [rbp-0xa0],0x0
  407e4b:	mov    DWORD PTR [rbp-0x98],0x0
  407e55:	mov    rax,QWORD PTR [rbp-0xa0]
  407e5c:	add    rax,0x4
  407e60:	mov    QWORD PTR [rbp-0xa0],rax
  407e67:	mov    eax,DWORD PTR [rbp-0x98]
  407e6d:	cdqe   
  407e6f:	shl    rax,0x4
  407e73:	add    rax,rbp
  407e76:	lea    rdx,[rax-0x90]
  407e7d:	lea    rax,[rbp-0xac]
  407e84:	mov    QWORD PTR [rdx],rax
  407e87:	mov    eax,DWORD PTR [rbp-0x98]
  407e8d:	cdqe   
  407e8f:	shl    rax,0x4
  407e93:	add    rax,rbp
  407e96:	sub    rax,0x88
  407e9c:	mov    QWORD PTR [rax],0x4
  407ea3:	mov    eax,DWORD PTR [rbp-0x98]
  407ea9:	add    eax,0x1
  407eac:	mov    DWORD PTR [rbp-0x98],eax
  407eb2:	cmp    DWORD PTR [rbp-0xa8],0x0
  407eb9:	je     407f21 <flatcc_builder_create_vector@@Base+0x1f4>
  407ebb:	mov    rdx,QWORD PTR [rbp-0xa0]
  407ec2:	mov    eax,DWORD PTR [rbp-0xa8]
  407ec8:	add    rax,rdx
  407ecb:	mov    QWORD PTR [rbp-0xa0],rax
  407ed2:	mov    eax,DWORD PTR [rbp-0x98]
  407ed8:	cdqe   
  407eda:	shl    rax,0x4
  407ede:	add    rax,rbp
  407ee1:	lea    rdx,[rax-0x90]
  407ee8:	mov    rax,QWORD PTR [rbp-0xc0]
  407eef:	mov    QWORD PTR [rdx],rax
  407ef2:	mov    edx,DWORD PTR [rbp-0x98]
  407ef8:	mov    eax,DWORD PTR [rbp-0xa8]
  407efe:	movsxd rdx,edx
  407f01:	shl    rdx,0x4
  407f05:	add    rdx,rbp
  407f08:	sub    rdx,0x88
  407f0f:	mov    QWORD PTR [rdx],rax
  407f12:	mov    eax,DWORD PTR [rbp-0x98]
  407f18:	add    eax,0x1
  407f1b:	mov    DWORD PTR [rbp-0x98],eax
  407f21:	cmp    DWORD PTR [rbp-0xa4],0x0
  407f28:	je     407f8f <flatcc_builder_create_vector@@Base+0x262>
  407f2a:	mov    rdx,QWORD PTR [rbp-0xa0]
  407f31:	mov    eax,DWORD PTR [rbp-0xa4]
  407f37:	add    rax,rdx
  407f3a:	mov    QWORD PTR [rbp-0xa0],rax
  407f41:	mov    eax,DWORD PTR [rbp-0x98]
  407f47:	cdqe   
  407f49:	shl    rax,0x4
  407f4d:	add    rax,rbp
  407f50:	sub    rax,0x90
  407f56:	mov    rdx,0x40b4e0
  407f5d:	mov    QWORD PTR [rax],rdx
  407f60:	mov    edx,DWORD PTR [rbp-0x98]
  407f66:	mov    eax,DWORD PTR [rbp-0xa4]
  407f6c:	movsxd rdx,edx
  407f6f:	shl    rdx,0x4
  407f73:	add    rdx,rbp
  407f76:	sub    rdx,0x88
  407f7d:	mov    QWORD PTR [rdx],rax
  407f80:	mov    eax,DWORD PTR [rbp-0x98]
  407f86:	add    eax,0x1
  407f89:	mov    DWORD PTR [rbp-0x98],eax
  407f8f:	lea    rdx,[rbp-0xa0]
  407f96:	mov    rax,QWORD PTR [rbp-0xb8]
  407f9d:	mov    rsi,rdx
  407fa0:	mov    rdi,rax
  407fa3:	call   4056e1 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  407fa8:	mov    rcx,QWORD PTR [rbp-0x8]
  407fac:	xor    rcx,QWORD PTR fs:0x28
  407fb5:	je     407fbc <flatcc_builder_create_vector@@Base+0x28f>
  407fb7:	call   403070 <__stack_chk_fail@plt>
  407fbc:	leave  
  407fbd:	ret    

0000000000407fbe <flatcc_builder_end_vector@@Base>:
  407fbe:	push   rbp
  407fbf:	mov    rbp,rsp
  407fc2:	sub    rsp,0x20
  407fc6:	mov    QWORD PTR [rbp-0x18],rdi
  407fca:	mov    rax,QWORD PTR [rbp-0x18]
  407fce:	mov    rax,QWORD PTR [rax+0x30]
  407fd2:	movzx  eax,WORD PTR [rax+0xe]
  407fd6:	cmp    ax,0x4
  407fda:	je     407ffb <flatcc_builder_end_vector@@Base+0x3d>
  407fdc:	lea    rcx,[rip+0x3f4d]        # 40bf30 <flatcc_builder_padding_base@@Base+0xa50>
  407fe3:	mov    edx,0x578
  407fe8:	lea    rsi,[rip+0x36f1]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  407fef:	lea    rdi,[rip+0x3832]        # 40b828 <flatcc_builder_padding_base@@Base+0x348>
  407ff6:	call   403090 <__assert_fail@plt>
  407ffb:	mov    rax,QWORD PTR [rbp-0x18]
  407fff:	mov    rax,QWORD PTR [rax+0x30]
  408003:	mov    eax,DWORD PTR [rax+0x18]
  408006:	mov    r8d,eax
  408009:	mov    rax,QWORD PTR [rbp-0x18]
  40800d:	movzx  eax,WORD PTR [rax+0xea]
  408014:	movzx  edx,ax
  408017:	mov    rax,QWORD PTR [rbp-0x18]
  40801b:	mov    rax,QWORD PTR [rax+0x30]
  40801f:	mov    eax,DWORD PTR [rax+0x10]
  408022:	mov    ecx,eax
  408024:	mov    rax,QWORD PTR [rbp-0x18]
  408028:	mov    rax,QWORD PTR [rax+0x30]
  40802c:	mov    eax,DWORD PTR [rax+0x14]
  40802f:	mov    edi,eax
  408031:	mov    rax,QWORD PTR [rbp-0x18]
  408035:	mov    rsi,QWORD PTR [rax+0x18]
  408039:	mov    rax,QWORD PTR [rbp-0x18]
  40803d:	mov    r9,r8
  408040:	mov    r8d,edx
  408043:	mov    rdx,rdi
  408046:	mov    rdi,rax
  408049:	call   407d2d <flatcc_builder_create_vector@@Base>
  40804e:	mov    DWORD PTR [rbp-0x4],eax
  408051:	cmp    DWORD PTR [rbp-0x4],0x0
  408055:	jne    40805e <flatcc_builder_end_vector@@Base+0xa0>
  408057:	mov    eax,0x0
  40805c:	jmp    40806d <flatcc_builder_end_vector@@Base+0xaf>
  40805e:	mov    rax,QWORD PTR [rbp-0x18]
  408062:	mov    rdi,rax
  408065:	call   4055ce <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40806a:	mov    eax,DWORD PTR [rbp-0x4]
  40806d:	leave  
  40806e:	ret    

000000000040806f <flatcc_builder_vector_count@@Base>:
  40806f:	push   rbp
  408070:	mov    rbp,rsp
  408073:	mov    QWORD PTR [rbp-0x8],rdi
  408077:	mov    rax,QWORD PTR [rbp-0x8]
  40807b:	mov    rax,QWORD PTR [rax+0x30]
  40807f:	mov    eax,DWORD PTR [rax+0x14]
  408082:	mov    eax,eax
  408084:	pop    rbp
  408085:	ret    

0000000000408086 <flatcc_builder_vector_edit@@Base>:
  408086:	push   rbp
  408087:	mov    rbp,rsp
  40808a:	mov    QWORD PTR [rbp-0x8],rdi
  40808e:	mov    rax,QWORD PTR [rbp-0x8]
  408092:	mov    rax,QWORD PTR [rax+0x18]
  408096:	pop    rbp
  408097:	ret    
  408098:	push   rbp
  408099:	mov    rbp,rsp
  40809c:	push   rbx
  40809d:	sub    rsp,0xe8
  4080a4:	mov    QWORD PTR [rbp-0xd8],rdi
  4080ab:	mov    QWORD PTR [rbp-0xe0],rsi
  4080b2:	mov    QWORD PTR [rbp-0xe8],rdx
  4080b9:	mov    QWORD PTR [rbp-0xf0],rcx
  4080c0:	mov    rax,QWORD PTR fs:0x28
  4080c9:	mov    QWORD PTR [rbp-0x18],rax
  4080cd:	xor    eax,eax
  4080cf:	mov    rax,QWORD PTR [rbp-0xe8]
  4080d6:	cmp    eax,0x3fffffff
  4080db:	jbe    4080e7 <flatcc_builder_vector_edit@@Base+0x61>
  4080dd:	mov    eax,0x0
  4080e2:	jmp    40842b <flatcc_builder_vector_edit@@Base+0x3a5>
  4080e7:	mov    rax,QWORD PTR [rbp-0xd8]
  4080ee:	mov    esi,0x4
  4080f3:	mov    rdi,rax
  4080f6:	call   4050dd <flatcc_builder_clear@@Base+0x96>
  4080fb:	mov    rax,QWORD PTR [rbp-0xe8]
  408102:	shl    eax,0x2
  408105:	mov    DWORD PTR [rbp-0xc0],eax
  40810b:	mov    rax,QWORD PTR [rbp-0xe8]
  408112:	mov    edi,eax
  408114:	call   4043cd <main@@Base+0xc2>
  408119:	mov    DWORD PTR [rbp-0xc8],eax
  40811f:	mov    ecx,DWORD PTR [rbp-0xc0]
  408125:	mov    rax,QWORD PTR [rbp-0xd8]
  40812c:	mov    edx,0x4
  408131:	mov    esi,ecx
  408133:	mov    rdi,rax
  408136:	call   405695 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  40813b:	mov    DWORD PTR [rbp-0xbc],eax
  408141:	mov    QWORD PTR [rbp-0xb0],0x0
  40814c:	mov    DWORD PTR [rbp-0xa8],0x0
  408156:	mov    rax,QWORD PTR [rbp-0xb0]
  40815d:	add    rax,0x4
  408161:	mov    QWORD PTR [rbp-0xb0],rax
  408168:	mov    eax,DWORD PTR [rbp-0xa8]
  40816e:	cdqe   
  408170:	shl    rax,0x4
  408174:	lea    rbx,[rbp-0x10]
  408178:	add    rax,rbx
  40817b:	lea    rdx,[rax-0x90]
  408182:	lea    rax,[rbp-0xc8]
  408189:	mov    QWORD PTR [rdx],rax
  40818c:	mov    eax,DWORD PTR [rbp-0xa8]
  408192:	cdqe   
  408194:	shl    rax,0x4
  408198:	lea    rbx,[rbp-0x10]
  40819c:	add    rax,rbx
  40819f:	sub    rax,0x88
  4081a5:	mov    QWORD PTR [rax],0x4
  4081ac:	mov    eax,DWORD PTR [rbp-0xa8]
  4081b2:	add    eax,0x1
  4081b5:	mov    DWORD PTR [rbp-0xa8],eax
  4081bb:	cmp    DWORD PTR [rbp-0xc0],0x0
  4081c2:	je     408232 <flatcc_builder_vector_edit@@Base+0x1ac>
  4081c4:	mov    rdx,QWORD PTR [rbp-0xb0]
  4081cb:	mov    eax,DWORD PTR [rbp-0xc0]
  4081d1:	add    rax,rdx
  4081d4:	mov    QWORD PTR [rbp-0xb0],rax
  4081db:	mov    eax,DWORD PTR [rbp-0xa8]
  4081e1:	cdqe   
  4081e3:	shl    rax,0x4
  4081e7:	lea    rcx,[rbp-0x10]
  4081eb:	add    rax,rcx
  4081ee:	lea    rdx,[rax-0x90]
  4081f5:	mov    rax,QWORD PTR [rbp-0xe0]
  4081fc:	mov    QWORD PTR [rdx],rax
  4081ff:	mov    edx,DWORD PTR [rbp-0xa8]
  408205:	mov    eax,DWORD PTR [rbp-0xc0]
  40820b:	movsxd rdx,edx
  40820e:	shl    rdx,0x4
  408212:	lea    rbx,[rbp-0x10]
  408216:	add    rdx,rbx
  408219:	sub    rdx,0x88
  408220:	mov    QWORD PTR [rdx],rax
  408223:	mov    eax,DWORD PTR [rbp-0xa8]
  408229:	add    eax,0x1
  40822c:	mov    DWORD PTR [rbp-0xa8],eax
  408232:	cmp    DWORD PTR [rbp-0xbc],0x0
  408239:	je     4082a8 <flatcc_builder_vector_edit@@Base+0x222>
  40823b:	mov    rdx,QWORD PTR [rbp-0xb0]
  408242:	mov    eax,DWORD PTR [rbp-0xbc]
  408248:	add    rax,rdx
  40824b:	mov    QWORD PTR [rbp-0xb0],rax
  408252:	mov    eax,DWORD PTR [rbp-0xa8]
  408258:	cdqe   
  40825a:	shl    rax,0x4
  40825e:	lea    rsi,[rbp-0x10]
  408262:	add    rax,rsi
  408265:	sub    rax,0x90
  40826b:	mov    rdx,0x40b4e0
  408272:	mov    QWORD PTR [rax],rdx
  408275:	mov    edx,DWORD PTR [rbp-0xa8]
  40827b:	mov    eax,DWORD PTR [rbp-0xbc]
  408281:	movsxd rdx,edx
  408284:	shl    rdx,0x4
  408288:	lea    rcx,[rbp-0x10]
  40828c:	add    rdx,rcx
  40828f:	sub    rdx,0x88
  408296:	mov    QWORD PTR [rdx],rax
  408299:	mov    eax,DWORD PTR [rbp-0xa8]
  40829f:	add    eax,0x1
  4082a2:	mov    DWORD PTR [rbp-0xa8],eax
  4082a8:	mov    rax,QWORD PTR [rbp-0xd8]
  4082af:	mov    eax,DWORD PTR [rax+0xf0]
  4082b5:	mov    edx,eax
  4082b7:	mov    rax,QWORD PTR [rbp-0xb0]
  4082be:	sub    edx,eax
  4082c0:	mov    eax,edx
  4082c2:	mov    DWORD PTR [rbp-0xb8],eax
  4082c8:	mov    DWORD PTR [rbp-0xc4],0x0
  4082d2:	jmp    4083ff <flatcc_builder_vector_edit@@Base+0x379>
  4082d7:	mov    eax,DWORD PTR [rbp-0xc4]
  4082dd:	lea    rdx,[rax*4+0x0]
  4082e5:	mov    rax,QWORD PTR [rbp-0xe0]
  4082ec:	add    rax,rdx
  4082ef:	mov    eax,DWORD PTR [rax]
  4082f1:	test   eax,eax
  4082f3:	je     408399 <flatcc_builder_vector_edit@@Base+0x313>
  4082f9:	mov    eax,DWORD PTR [rbp-0xc4]
  4082ff:	lea    rdx,[rax*4+0x0]
  408307:	mov    rax,QWORD PTR [rbp-0xe0]
  40830e:	add    rax,rdx
  408311:	mov    eax,DWORD PTR [rax]
  408313:	sub    eax,DWORD PTR [rbp-0xb8]
  408319:	mov    edx,DWORD PTR [rbp-0xc4]
  40831f:	shl    edx,0x2
  408322:	sub    eax,edx
  408324:	sub    eax,0x4
  408327:	mov    DWORD PTR [rbp-0xb4],eax
  40832d:	mov    eax,DWORD PTR [rbp-0xc4]
  408333:	lea    rdx,[rax*4+0x0]
  40833b:	mov    rax,QWORD PTR [rbp-0xe0]
  408342:	lea    rbx,[rdx+rax*1]
  408346:	mov    eax,DWORD PTR [rbp-0xb4]
  40834c:	mov    edi,eax
  40834e:	call   4043cd <main@@Base+0xc2>
  408353:	mov    DWORD PTR [rbx],eax
  408355:	cmp    QWORD PTR [rbp-0xf0],0x0
  40835d:	je     4083f8 <flatcc_builder_vector_edit@@Base+0x372>
  408363:	mov    edx,DWORD PTR [rbp-0xc4]
  408369:	mov    rax,QWORD PTR [rbp-0xf0]
  408370:	add    rax,rdx
  408373:	movzx  eax,BYTE PTR [rax]
  408376:	test   al,al
  408378:	jne    4083f8 <flatcc_builder_vector_edit@@Base+0x372>
  40837a:	lea    rcx,[rip+0x3bcf]        # 40bf50 <flatcc_builder_padding_base@@Base+0xa70>
  408381:	mov    edx,0x5b1
  408386:	lea    rsi,[rip+0x3353]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40838d:	lea    rdi,[rip+0x3662]        # 40b9f6 <flatcc_builder_padding_base@@Base+0x516>
  408394:	call   403090 <__assert_fail@plt>
  408399:	cmp    QWORD PTR [rbp-0xf0],0x0
  4083a1:	je     4083d9 <flatcc_builder_vector_edit@@Base+0x353>
  4083a3:	mov    edx,DWORD PTR [rbp-0xc4]
  4083a9:	mov    rax,QWORD PTR [rbp-0xf0]
  4083b0:	add    rax,rdx
  4083b3:	movzx  eax,BYTE PTR [rax]
  4083b6:	test   al,al
  4083b8:	je     4083f8 <flatcc_builder_vector_edit@@Base+0x372>
  4083ba:	lea    rcx,[rip+0x3b8f]        # 40bf50 <flatcc_builder_padding_base@@Base+0xa70>
  4083c1:	mov    edx,0x5b5
  4083c6:	lea    rsi,[rip+0x3313]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4083cd:	lea    rdi,[rip+0x3630]        # 40ba04 <flatcc_builder_padding_base@@Base+0x524>
  4083d4:	call   403090 <__assert_fail@plt>
  4083d9:	lea    rcx,[rip+0x3b70]        # 40bf50 <flatcc_builder_padding_base@@Base+0xa70>
  4083e0:	mov    edx,0x5b7
  4083e5:	lea    rsi,[rip+0x32f4]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4083ec:	lea    rdi,[rip+0x334d]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  4083f3:	call   403090 <__assert_fail@plt>
  4083f8:	add    DWORD PTR [rbp-0xc4],0x1
  4083ff:	mov    rax,QWORD PTR [rbp-0xe8]
  408406:	cmp    eax,DWORD PTR [rbp-0xc4]
  40840c:	ja     4082d7 <flatcc_builder_vector_edit@@Base+0x251>
  408412:	lea    rdx,[rbp-0xb0]
  408419:	mov    rax,QWORD PTR [rbp-0xd8]
  408420:	mov    rsi,rdx
  408423:	mov    rdi,rax
  408426:	call   4056e1 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  40842b:	mov    rbx,QWORD PTR [rbp-0x18]
  40842f:	xor    rbx,QWORD PTR fs:0x28
  408438:	je     40843f <flatcc_builder_vector_edit@@Base+0x3b9>
  40843a:	call   403070 <__stack_chk_fail@plt>
  40843f:	add    rsp,0xe8
  408446:	pop    rbx
  408447:	pop    rbp
  408448:	ret    

0000000000408449 <flatcc_builder_create_offset_vector_direct@@Base>:
  408449:	push   rbp
  40844a:	mov    rbp,rsp
  40844d:	sub    rsp,0x20
  408451:	mov    QWORD PTR [rbp-0x8],rdi
  408455:	mov    QWORD PTR [rbp-0x10],rsi
  408459:	mov    QWORD PTR [rbp-0x18],rdx
  40845d:	mov    rdx,QWORD PTR [rbp-0x18]
  408461:	mov    rsi,QWORD PTR [rbp-0x10]
  408465:	mov    rax,QWORD PTR [rbp-0x8]
  408469:	mov    ecx,0x0
  40846e:	mov    rdi,rax
  408471:	call   408098 <flatcc_builder_vector_edit@@Base+0x12>
  408476:	leave  
  408477:	ret    

0000000000408478 <flatcc_builder_end_offset_vector@@Base>:
  408478:	push   rbp
  408479:	mov    rbp,rsp
  40847c:	sub    rsp,0x20
  408480:	mov    QWORD PTR [rbp-0x18],rdi
  408484:	mov    rax,QWORD PTR [rbp-0x18]
  408488:	mov    rax,QWORD PTR [rax+0x30]
  40848c:	movzx  eax,WORD PTR [rax+0xe]
  408490:	cmp    ax,0x5
  408494:	je     4084b5 <flatcc_builder_end_offset_vector@@Base+0x3d>
  408496:	lea    rcx,[rip+0x3ae3]        # 40bf80 <flatcc_builder_padding_base@@Base+0xaa0>
  40849d:	mov    edx,0x5c8
  4084a2:	lea    rsi,[rip+0x3237]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4084a9:	lea    rdi,[rip+0x33e8]        # 40b898 <flatcc_builder_padding_base@@Base+0x3b8>
  4084b0:	call   403090 <__assert_fail@plt>
  4084b5:	mov    rax,QWORD PTR [rbp-0x18]
  4084b9:	mov    rax,QWORD PTR [rax+0x30]
  4084bd:	mov    eax,DWORD PTR [rax+0x14]
  4084c0:	mov    edx,eax
  4084c2:	mov    rax,QWORD PTR [rbp-0x18]
  4084c6:	mov    rcx,QWORD PTR [rax+0x18]
  4084ca:	mov    rax,QWORD PTR [rbp-0x18]
  4084ce:	mov    rsi,rcx
  4084d1:	mov    rdi,rax
  4084d4:	call   408449 <flatcc_builder_create_offset_vector_direct@@Base>
  4084d9:	mov    DWORD PTR [rbp-0x4],eax
  4084dc:	cmp    DWORD PTR [rbp-0x4],0x0
  4084e0:	jne    4084e9 <flatcc_builder_end_offset_vector@@Base+0x71>
  4084e2:	mov    eax,0x0
  4084e7:	jmp    4084f8 <flatcc_builder_end_offset_vector@@Base+0x80>
  4084e9:	mov    rax,QWORD PTR [rbp-0x18]
  4084ed:	mov    rdi,rax
  4084f0:	call   4055ce <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  4084f5:	mov    eax,DWORD PTR [rbp-0x4]
  4084f8:	leave  
  4084f9:	ret    

00000000004084fa <flatcc_builder_end_offset_vector_for_unions@@Base>:
  4084fa:	push   rbp
  4084fb:	mov    rbp,rsp
  4084fe:	sub    rsp,0x20
  408502:	mov    QWORD PTR [rbp-0x18],rdi
  408506:	mov    QWORD PTR [rbp-0x20],rsi
  40850a:	mov    rax,QWORD PTR [rbp-0x18]
  40850e:	mov    rax,QWORD PTR [rax+0x30]
  408512:	movzx  eax,WORD PTR [rax+0xe]
  408516:	cmp    ax,0x5
  40851a:	je     40853b <flatcc_builder_end_offset_vector_for_unions@@Base+0x41>
  40851c:	lea    rcx,[rip+0x3a9d]        # 40bfc0 <flatcc_builder_padding_base@@Base+0xae0>
  408523:	mov    edx,0x5d5
  408528:	lea    rsi,[rip+0x31b1]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40852f:	lea    rdi,[rip+0x3362]        # 40b898 <flatcc_builder_padding_base@@Base+0x3b8>
  408536:	call   403090 <__assert_fail@plt>
  40853b:	mov    rax,QWORD PTR [rbp-0x18]
  40853f:	mov    rax,QWORD PTR [rax+0x30]
  408543:	mov    eax,DWORD PTR [rax+0x14]
  408546:	mov    edi,eax
  408548:	mov    rax,QWORD PTR [rbp-0x18]
  40854c:	mov    rsi,QWORD PTR [rax+0x18]
  408550:	mov    rdx,QWORD PTR [rbp-0x20]
  408554:	mov    rax,QWORD PTR [rbp-0x18]
  408558:	mov    rcx,rdx
  40855b:	mov    rdx,rdi
  40855e:	mov    rdi,rax
  408561:	call   408098 <flatcc_builder_vector_edit@@Base+0x12>
  408566:	mov    DWORD PTR [rbp-0x4],eax
  408569:	cmp    DWORD PTR [rbp-0x4],0x0
  40856d:	jne    408576 <flatcc_builder_end_offset_vector_for_unions@@Base+0x7c>
  40856f:	mov    eax,0x0
  408574:	jmp    408585 <flatcc_builder_end_offset_vector_for_unions@@Base+0x8b>
  408576:	mov    rax,QWORD PTR [rbp-0x18]
  40857a:	mov    rdi,rax
  40857d:	call   4055ce <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  408582:	mov    eax,DWORD PTR [rbp-0x4]
  408585:	leave  
  408586:	ret    

0000000000408587 <flatcc_builder_offset_vector_edit@@Base>:
  408587:	push   rbp
  408588:	mov    rbp,rsp
  40858b:	mov    QWORD PTR [rbp-0x8],rdi
  40858f:	mov    rax,QWORD PTR [rbp-0x8]
  408593:	mov    rax,QWORD PTR [rax+0x18]
  408597:	pop    rbp
  408598:	ret    

0000000000408599 <flatcc_builder_offset_vector_count@@Base>:
  408599:	push   rbp
  40859a:	mov    rbp,rsp
  40859d:	mov    QWORD PTR [rbp-0x8],rdi
  4085a1:	mov    rax,QWORD PTR [rbp-0x8]
  4085a5:	mov    rax,QWORD PTR [rax+0x30]
  4085a9:	mov    eax,DWORD PTR [rax+0x14]
  4085ac:	mov    eax,eax
  4085ae:	pop    rbp
  4085af:	ret    

00000000004085b0 <flatcc_builder_table_add_union@@Base>:
  4085b0:	push   rbp
  4085b1:	mov    rbp,rsp
  4085b4:	sub    rsp,0x30
  4085b8:	mov    QWORD PTR [rbp-0x18],rdi
  4085bc:	mov    DWORD PTR [rbp-0x1c],esi
  4085bf:	mov    QWORD PTR [rbp-0x24],rdx
  4085c3:	mov    rax,QWORD PTR [rbp-0x18]
  4085c7:	mov    rax,QWORD PTR [rax+0x30]
  4085cb:	movzx  eax,WORD PTR [rax+0xe]
  4085cf:	cmp    ax,0x3
  4085d3:	je     4085f4 <flatcc_builder_table_add_union@@Base+0x44>
  4085d5:	lea    rcx,[rip+0x3a14]        # 40bff0 <flatcc_builder_padding_base@@Base+0xb10>
  4085dc:	mov    edx,0x5ee
  4085e1:	lea    rsi,[rip+0x30f8]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4085e8:	lea    rdi,[rip+0x33c9]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  4085ef:	call   403090 <__assert_fail@plt>
  4085f4:	movzx  eax,BYTE PTR [rbp-0x24]
  4085f8:	test   al,al
  4085fa:	jne    40863b <flatcc_builder_table_add_union@@Base+0x8b>
  4085fc:	mov    eax,DWORD PTR [rbp-0x20]
  4085ff:	test   eax,eax
  408601:	je     40863b <flatcc_builder_table_add_union@@Base+0x8b>
  408603:	movzx  eax,BYTE PTR [rbp-0x24]
  408607:	test   al,al
  408609:	jne    408631 <flatcc_builder_table_add_union@@Base+0x81>
  40860b:	mov    eax,DWORD PTR [rbp-0x20]
  40860e:	test   eax,eax
  408610:	je     408631 <flatcc_builder_table_add_union@@Base+0x81>
  408612:	lea    rcx,[rip+0x39d7]        # 40bff0 <flatcc_builder_padding_base@@Base+0xb10>
  408619:	mov    edx,0x5ef
  40861e:	lea    rsi,[rip+0x30bb]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408625:	lea    rdi,[rip+0x33ec]        # 40ba18 <flatcc_builder_padding_base@@Base+0x538>
  40862c:	call   403090 <__assert_fail@plt>
  408631:	mov    eax,0xffffffff
  408636:	jmp    408703 <flatcc_builder_table_add_union@@Base+0x153>
  40863b:	mov    eax,DWORD PTR [rbp-0x20]
  40863e:	test   eax,eax
  408640:	je     408694 <flatcc_builder_table_add_union@@Base+0xe4>
  408642:	mov    edx,DWORD PTR [rbp-0x1c]
  408645:	mov    rax,QWORD PTR [rbp-0x18]
  408649:	mov    esi,edx
  40864b:	mov    rdi,rax
  40864e:	call   409354 <flatcc_builder_table_add_offset@@Base>
  408653:	mov    QWORD PTR [rbp-0x10],rax
  408657:	cmp    QWORD PTR [rbp-0x10],0x0
  40865c:	jne    40868b <flatcc_builder_table_add_union@@Base+0xdb>
  40865e:	cmp    QWORD PTR [rbp-0x10],0x0
  408663:	jne    408684 <flatcc_builder_table_add_union@@Base+0xd4>
  408665:	lea    rcx,[rip+0x3984]        # 40bff0 <flatcc_builder_padding_base@@Base+0xb10>
  40866c:	mov    edx,0x5f2
  408671:	lea    rsi,[rip+0x3068]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408678:	lea    rdi,[rip+0x33bb]        # 40ba3a <flatcc_builder_padding_base@@Base+0x55a>
  40867f:	call   403090 <__assert_fail@plt>
  408684:	mov    eax,0xffffffff
  408689:	jmp    408703 <flatcc_builder_table_add_union@@Base+0x153>
  40868b:	mov    edx,DWORD PTR [rbp-0x20]
  40868e:	mov    rax,QWORD PTR [rbp-0x10]
  408692:	mov    DWORD PTR [rax],edx
  408694:	mov    eax,DWORD PTR [rbp-0x1c]
  408697:	lea    esi,[rax-0x1]
  40869a:	mov    rax,QWORD PTR [rbp-0x18]
  40869e:	mov    ecx,0x1
  4086a3:	mov    edx,0x1
  4086a8:	mov    rdi,rax
  4086ab:	call   409186 <flatcc_builder_table_add@@Base>
  4086b0:	mov    QWORD PTR [rbp-0x8],rax
  4086b4:	cmp    QWORD PTR [rbp-0x8],0x0
  4086b9:	jne    4086e8 <flatcc_builder_table_add_union@@Base+0x138>
  4086bb:	cmp    QWORD PTR [rbp-0x8],0x0
  4086c0:	jne    4086e1 <flatcc_builder_table_add_union@@Base+0x131>
  4086c2:	lea    rcx,[rip+0x3927]        # 40bff0 <flatcc_builder_padding_base@@Base+0xb10>
  4086c9:	mov    edx,0x5f6
  4086ce:	lea    rsi,[rip+0x300b]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4086d5:	lea    rdi,[rip+0x3368]        # 40ba44 <flatcc_builder_padding_base@@Base+0x564>
  4086dc:	call   403090 <__assert_fail@plt>
  4086e1:	mov    eax,0xffffffff
  4086e6:	jmp    408703 <flatcc_builder_table_add_union@@Base+0x153>
  4086e8:	movzx  eax,BYTE PTR [rbp-0x24]
  4086ec:	movzx  eax,al
  4086ef:	mov    edi,eax
  4086f1:	call   4043d9 <main@@Base+0xce>
  4086f6:	mov    edx,eax
  4086f8:	mov    rax,QWORD PTR [rbp-0x8]
  4086fc:	mov    BYTE PTR [rax],dl
  4086fe:	mov    eax,0x0
  408703:	leave  
  408704:	ret    

0000000000408705 <flatcc_builder_table_add_union_vector@@Base>:
  408705:	push   rbp
  408706:	mov    rbp,rsp
  408709:	sub    rsp,0x30
  40870d:	mov    QWORD PTR [rbp-0x18],rdi
  408711:	mov    DWORD PTR [rbp-0x1c],esi
  408714:	mov    QWORD PTR [rbp-0x24],rdx
  408718:	mov    rax,QWORD PTR [rbp-0x18]
  40871c:	mov    rax,QWORD PTR [rax+0x30]
  408720:	movzx  eax,WORD PTR [rax+0xe]
  408724:	cmp    ax,0x3
  408728:	je     408749 <flatcc_builder_table_add_union_vector@@Base+0x44>
  40872a:	lea    rcx,[rip+0x38ef]        # 40c020 <flatcc_builder_padding_base@@Base+0xb40>
  408731:	mov    edx,0x600
  408736:	lea    rsi,[rip+0x2fa3]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40873d:	lea    rdi,[rip+0x3274]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  408744:	call   403090 <__assert_fail@plt>
  408749:	mov    eax,DWORD PTR [rbp-0x24]
  40874c:	test   eax,eax
  40874e:	sete   dl
  408751:	mov    eax,DWORD PTR [rbp-0x20]
  408754:	test   eax,eax
  408756:	sete   al
  408759:	xor    eax,edx
  40875b:	test   al,al
  40875d:	je     40879e <flatcc_builder_table_add_union_vector@@Base+0x99>
  40875f:	mov    eax,DWORD PTR [rbp-0x24]
  408762:	test   eax,eax
  408764:	setne  dl
  408767:	mov    eax,DWORD PTR [rbp-0x20]
  40876a:	test   eax,eax
  40876c:	sete   al
  40876f:	xor    eax,edx
  408771:	test   al,al
  408773:	jne    408794 <flatcc_builder_table_add_union_vector@@Base+0x8f>
  408775:	lea    rcx,[rip+0x38a4]        # 40c020 <flatcc_builder_padding_base@@Base+0xb40>
  40877c:	mov    edx,0x601
  408781:	lea    rsi,[rip+0x2f58]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408788:	lea    rdi,[rip+0x32c1]        # 40ba50 <flatcc_builder_padding_base@@Base+0x570>
  40878f:	call   403090 <__assert_fail@plt>
  408794:	mov    eax,0xffffffff
  408799:	jmp    408855 <flatcc_builder_table_add_union_vector@@Base+0x150>
  40879e:	mov    eax,DWORD PTR [rbp-0x24]
  4087a1:	test   eax,eax
  4087a3:	je     408850 <flatcc_builder_table_add_union_vector@@Base+0x14b>
  4087a9:	mov    eax,DWORD PTR [rbp-0x1c]
  4087ac:	lea    edx,[rax-0x1]
  4087af:	mov    rax,QWORD PTR [rbp-0x18]
  4087b3:	mov    esi,edx
  4087b5:	mov    rdi,rax
  4087b8:	call   409354 <flatcc_builder_table_add_offset@@Base>
  4087bd:	mov    QWORD PTR [rbp-0x8],rax
  4087c1:	cmp    QWORD PTR [rbp-0x8],0x0
  4087c6:	jne    4087f5 <flatcc_builder_table_add_union_vector@@Base+0xf0>
  4087c8:	cmp    QWORD PTR [rbp-0x8],0x0
  4087cd:	jne    4087ee <flatcc_builder_table_add_union_vector@@Base+0xe9>
  4087cf:	lea    rcx,[rip+0x384a]        # 40c020 <flatcc_builder_padding_base@@Base+0xb40>
  4087d6:	mov    edx,0x604
  4087db:	lea    rsi,[rip+0x2efe]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4087e2:	lea    rdi,[rip+0x3251]        # 40ba3a <flatcc_builder_padding_base@@Base+0x55a>
  4087e9:	call   403090 <__assert_fail@plt>
  4087ee:	mov    eax,0xffffffff
  4087f3:	jmp    408855 <flatcc_builder_table_add_union_vector@@Base+0x150>
  4087f5:	mov    edx,DWORD PTR [rbp-0x24]
  4087f8:	mov    rax,QWORD PTR [rbp-0x8]
  4087fc:	mov    DWORD PTR [rax],edx
  4087fe:	mov    edx,DWORD PTR [rbp-0x1c]
  408801:	mov    rax,QWORD PTR [rbp-0x18]
  408805:	mov    esi,edx
  408807:	mov    rdi,rax
  40880a:	call   409354 <flatcc_builder_table_add_offset@@Base>
  40880f:	mov    QWORD PTR [rbp-0x8],rax
  408813:	cmp    QWORD PTR [rbp-0x8],0x0
  408818:	jne    408847 <flatcc_builder_table_add_union_vector@@Base+0x142>
  40881a:	cmp    QWORD PTR [rbp-0x8],0x0
  40881f:	jne    408840 <flatcc_builder_table_add_union_vector@@Base+0x13b>
  408821:	lea    rcx,[rip+0x37f8]        # 40c020 <flatcc_builder_padding_base@@Base+0xb40>
  408828:	mov    edx,0x608
  40882d:	lea    rsi,[rip+0x2eac]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408834:	lea    rdi,[rip+0x31ff]        # 40ba3a <flatcc_builder_padding_base@@Base+0x55a>
  40883b:	call   403090 <__assert_fail@plt>
  408840:	mov    eax,0xffffffff
  408845:	jmp    408855 <flatcc_builder_table_add_union_vector@@Base+0x150>
  408847:	mov    edx,DWORD PTR [rbp-0x20]
  40884a:	mov    rax,QWORD PTR [rbp-0x8]
  40884e:	mov    DWORD PTR [rax],edx
  408850:	mov    eax,0x0
  408855:	leave  
  408856:	ret    

0000000000408857 <flatcc_builder_create_union_vector@@Base>:
  408857:	push   rbp
  408858:	mov    rbp,rsp
  40885b:	sub    rsp,0x40
  40885f:	mov    QWORD PTR [rbp-0x28],rdi
  408863:	mov    QWORD PTR [rbp-0x30],rsi
  408867:	mov    QWORD PTR [rbp-0x38],rdx
  40886b:	mov    DWORD PTR [rbp-0x8],0x0
  408872:	mov    DWORD PTR [rbp-0x4],0x0
  408879:	mov    rax,QWORD PTR [rbp-0x28]
  40887d:	mov    rdi,rax
  408880:	call   406e86 <flatcc_builder_start_offset_vector@@Base>
  408885:	test   eax,eax
  408887:	je     408892 <flatcc_builder_create_union_vector@@Base+0x3b>
  408889:	mov    rax,QWORD PTR [rbp-0x8]
  40888d:	jmp    40897e <flatcc_builder_create_union_vector@@Base+0x127>
  408892:	mov    rdx,QWORD PTR [rbp-0x38]
  408896:	mov    rax,QWORD PTR [rbp-0x28]
  40889a:	mov    rsi,rdx
  40889d:	mov    rdi,rax
  4088a0:	call   406896 <flatcc_builder_extend_offset_vector@@Base>
  4088a5:	test   rax,rax
  4088a8:	jne    4088b3 <flatcc_builder_create_union_vector@@Base+0x5c>
  4088aa:	mov    rax,QWORD PTR [rbp-0x8]
  4088ae:	jmp    40897e <flatcc_builder_create_union_vector@@Base+0x127>
  4088b3:	mov    rax,QWORD PTR [rbp-0x38]
  4088b7:	mov    edx,eax
  4088b9:	mov    rax,QWORD PTR [rbp-0x28]
  4088bd:	mov    esi,edx
  4088bf:	mov    rdi,rax
  4088c2:	call   4046f3 <flatcc_builder_default_alloc@@Base+0x260>
  4088c7:	mov    QWORD PTR [rbp-0x18],rax
  4088cb:	cmp    QWORD PTR [rbp-0x18],0x0
  4088d0:	jne    4088db <flatcc_builder_create_union_vector@@Base+0x84>
  4088d2:	mov    rax,QWORD PTR [rbp-0x8]
  4088d6:	jmp    40897e <flatcc_builder_create_union_vector@@Base+0x127>
  4088db:	mov    rax,QWORD PTR [rbp-0x28]
  4088df:	mov    rdi,rax
  4088e2:	call   408587 <flatcc_builder_offset_vector_edit@@Base>
  4088e7:	mov    QWORD PTR [rbp-0x10],rax
  4088eb:	mov    QWORD PTR [rbp-0x20],0x0
  4088f3:	jmp    408948 <flatcc_builder_create_union_vector@@Base+0xf1>
  4088f5:	mov    rdx,QWORD PTR [rbp-0x18]
  4088f9:	mov    rax,QWORD PTR [rbp-0x20]
  4088fd:	add    rdx,rax
  408900:	mov    rax,QWORD PTR [rbp-0x20]
  408904:	lea    rcx,[rax*8+0x0]
  40890c:	mov    rax,QWORD PTR [rbp-0x30]
  408910:	add    rax,rcx
  408913:	movzx  eax,BYTE PTR [rax]
  408916:	mov    BYTE PTR [rdx],al
  408918:	mov    rax,QWORD PTR [rbp-0x20]
  40891c:	lea    rdx,[rax*4+0x0]
  408924:	mov    rax,QWORD PTR [rbp-0x10]
  408928:	add    rdx,rax
  40892b:	mov    rax,QWORD PTR [rbp-0x20]
  40892f:	lea    rcx,[rax*8+0x0]
  408937:	mov    rax,QWORD PTR [rbp-0x30]
  40893b:	add    rax,rcx
  40893e:	mov    eax,DWORD PTR [rax+0x4]
  408941:	mov    DWORD PTR [rdx],eax
  408943:	add    QWORD PTR [rbp-0x20],0x1
  408948:	mov    rax,QWORD PTR [rbp-0x20]
  40894c:	cmp    rax,QWORD PTR [rbp-0x38]
  408950:	jb     4088f5 <flatcc_builder_create_union_vector@@Base+0x9e>
  408952:	mov    rcx,QWORD PTR [rbp-0x38]
  408956:	mov    rdx,QWORD PTR [rbp-0x10]
  40895a:	mov    rsi,QWORD PTR [rbp-0x18]
  40895e:	mov    rax,QWORD PTR [rbp-0x28]
  408962:	mov    rdi,rax
  408965:	call   408980 <flatcc_builder_create_union_vector_direct@@Base>
  40896a:	mov    QWORD PTR [rbp-0x8],rax
  40896e:	mov    rax,QWORD PTR [rbp-0x28]
  408972:	mov    rdi,rax
  408975:	call   4055ce <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40897a:	mov    rax,QWORD PTR [rbp-0x8]
  40897e:	leave  
  40897f:	ret    

0000000000408980 <flatcc_builder_create_union_vector_direct@@Base>:
  408980:	push   rbp
  408981:	mov    rbp,rsp
  408984:	sub    rsp,0x30
  408988:	mov    QWORD PTR [rbp-0x18],rdi
  40898c:	mov    QWORD PTR [rbp-0x20],rsi
  408990:	mov    QWORD PTR [rbp-0x28],rdx
  408994:	mov    QWORD PTR [rbp-0x30],rcx
  408998:	mov    DWORD PTR [rbp-0x8],0x0
  40899f:	mov    DWORD PTR [rbp-0x4],0x0
  4089a6:	mov    rcx,QWORD PTR [rbp-0x20]
  4089aa:	mov    rdx,QWORD PTR [rbp-0x30]
  4089ae:	mov    rsi,QWORD PTR [rbp-0x28]
  4089b2:	mov    rax,QWORD PTR [rbp-0x18]
  4089b6:	mov    rdi,rax
  4089b9:	call   408098 <flatcc_builder_vector_edit@@Base+0x12>
  4089be:	mov    DWORD PTR [rbp-0x4],eax
  4089c1:	mov    eax,DWORD PTR [rbp-0x4]
  4089c4:	test   eax,eax
  4089c6:	jne    4089ce <flatcc_builder_create_union_vector_direct@@Base+0x4e>
  4089c8:	mov    rax,QWORD PTR [rbp-0x8]
  4089cc:	jmp    408a07 <flatcc_builder_create_union_vector_direct@@Base+0x87>
  4089ce:	mov    rdx,QWORD PTR [rbp-0x30]
  4089d2:	mov    rsi,QWORD PTR [rbp-0x20]
  4089d6:	mov    rax,QWORD PTR [rbp-0x18]
  4089da:	mov    r9d,0xffffffff
  4089e0:	mov    r8d,0x1
  4089e6:	mov    ecx,0x1
  4089eb:	mov    rdi,rax
  4089ee:	call   407d2d <flatcc_builder_create_vector@@Base>
  4089f3:	mov    DWORD PTR [rbp-0x8],eax
  4089f6:	mov    eax,DWORD PTR [rbp-0x8]
  4089f9:	test   eax,eax
  4089fb:	jne    408a03 <flatcc_builder_create_union_vector_direct@@Base+0x83>
  4089fd:	mov    rax,QWORD PTR [rbp-0x8]
  408a01:	jmp    408a07 <flatcc_builder_create_union_vector_direct@@Base+0x87>
  408a03:	mov    rax,QWORD PTR [rbp-0x8]
  408a07:	leave  
  408a08:	ret    

0000000000408a09 <flatcc_builder_start_union_vector@@Base>:
  408a09:	push   rbp
  408a0a:	mov    rbp,rsp
  408a0d:	sub    rsp,0x10
  408a11:	mov    QWORD PTR [rbp-0x8],rdi
  408a15:	mov    rax,QWORD PTR [rbp-0x8]
  408a19:	mov    esi,0x4
  408a1e:	mov    rdi,rax
  408a21:	call   4053f6 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  408a26:	test   eax,eax
  408a28:	je     408a31 <flatcc_builder_start_union_vector@@Base+0x28>
  408a2a:	mov    eax,0xffffffff
  408a2f:	jmp    408a73 <flatcc_builder_start_union_vector@@Base+0x6a>
  408a31:	mov    rax,QWORD PTR [rbp-0x8]
  408a35:	mov    rax,QWORD PTR [rax+0x30]
  408a39:	mov    DWORD PTR [rax+0x10],0x8
  408a40:	mov    rax,QWORD PTR [rbp-0x8]
  408a44:	mov    rax,QWORD PTR [rax+0x30]
  408a48:	mov    DWORD PTR [rax+0x14],0x0
  408a4f:	mov    rax,QWORD PTR [rbp-0x8]
  408a53:	mov    rax,QWORD PTR [rax+0x30]
  408a57:	mov    WORD PTR [rax+0xe],0x7
  408a5d:	mov    rax,QWORD PTR [rbp-0x8]
  408a61:	mov    esi,0xfffffffc
  408a66:	mov    rdi,rax
  408a69:	call   404600 <flatcc_builder_default_alloc@@Base+0x16d>
  408a6e:	mov    eax,0x0
  408a73:	leave  
  408a74:	ret    

0000000000408a75 <flatcc_builder_end_union_vector@@Base>:
  408a75:	push   rbp
  408a76:	mov    rbp,rsp
  408a79:	sub    rsp,0x40
  408a7d:	mov    QWORD PTR [rbp-0x38],rdi
  408a81:	mov    DWORD PTR [rbp-0x8],0x0
  408a88:	mov    DWORD PTR [rbp-0x4],0x0
  408a8f:	mov    rax,QWORD PTR [rbp-0x38]
  408a93:	mov    rax,QWORD PTR [rax+0x30]
  408a97:	movzx  eax,WORD PTR [rax+0xe]
  408a9b:	cmp    ax,0x7
  408a9f:	je     408ac0 <flatcc_builder_end_union_vector@@Base+0x4b>
  408aa1:	lea    rcx,[rip+0x35b8]        # 40c060 <flatcc_builder_padding_base@@Base+0xb80>
  408aa8:	mov    edx,0x651
  408aad:	lea    rsi,[rip+0x2c2c]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408ab4:	lea    rdi,[rip+0x2fbd]        # 40ba78 <flatcc_builder_padding_base@@Base+0x598>
  408abb:	call   403090 <__assert_fail@plt>
  408ac0:	mov    rax,QWORD PTR [rbp-0x38]
  408ac4:	mov    rdi,rax
  408ac7:	call   408bcd <flatcc_builder_union_vector_count@@Base>
  408acc:	mov    QWORD PTR [rbp-0x28],rax
  408ad0:	mov    rax,QWORD PTR [rbp-0x28]
  408ad4:	mov    edx,eax
  408ad6:	mov    eax,edx
  408ad8:	shl    eax,0x2
  408adb:	add    edx,eax
  408add:	mov    rax,QWORD PTR [rbp-0x38]
  408ae1:	mov    esi,edx
  408ae3:	mov    rdi,rax
  408ae6:	call   4046f3 <flatcc_builder_default_alloc@@Base+0x260>
  408aeb:	mov    QWORD PTR [rbp-0x20],rax
  408aef:	cmp    QWORD PTR [rbp-0x20],0x0
  408af4:	jne    408aff <flatcc_builder_end_union_vector@@Base+0x8a>
  408af6:	mov    rax,QWORD PTR [rbp-0x8]
  408afa:	jmp    408bb9 <flatcc_builder_end_union_vector@@Base+0x144>
  408aff:	mov    rax,QWORD PTR [rbp-0x28]
  408b03:	lea    rdx,[rax*4+0x0]
  408b0b:	mov    rax,QWORD PTR [rbp-0x20]
  408b0f:	add    rax,rdx
  408b12:	mov    QWORD PTR [rbp-0x18],rax
  408b16:	mov    rax,QWORD PTR [rbp-0x38]
  408b1a:	mov    rdi,rax
  408b1d:	call   408bbb <flatcc_builder_union_vector_edit@@Base>
  408b22:	mov    QWORD PTR [rbp-0x10],rax
  408b26:	mov    QWORD PTR [rbp-0x30],0x0
  408b2e:	jmp    408b83 <flatcc_builder_end_union_vector@@Base+0x10e>
  408b30:	mov    rdx,QWORD PTR [rbp-0x18]
  408b34:	mov    rax,QWORD PTR [rbp-0x30]
  408b38:	add    rdx,rax
  408b3b:	mov    rax,QWORD PTR [rbp-0x30]
  408b3f:	lea    rcx,[rax*8+0x0]
  408b47:	mov    rax,QWORD PTR [rbp-0x10]
  408b4b:	add    rax,rcx
  408b4e:	movzx  eax,BYTE PTR [rax]
  408b51:	mov    BYTE PTR [rdx],al
  408b53:	mov    rax,QWORD PTR [rbp-0x30]
  408b57:	lea    rdx,[rax*4+0x0]
  408b5f:	mov    rax,QWORD PTR [rbp-0x20]
  408b63:	add    rdx,rax
  408b66:	mov    rax,QWORD PTR [rbp-0x30]
  408b6a:	lea    rcx,[rax*8+0x0]
  408b72:	mov    rax,QWORD PTR [rbp-0x10]
  408b76:	add    rax,rcx
  408b79:	mov    eax,DWORD PTR [rax+0x4]
  408b7c:	mov    DWORD PTR [rdx],eax
  408b7e:	add    QWORD PTR [rbp-0x30],0x1
  408b83:	mov    rax,QWORD PTR [rbp-0x30]
  408b87:	cmp    rax,QWORD PTR [rbp-0x28]
  408b8b:	jb     408b30 <flatcc_builder_end_union_vector@@Base+0xbb>
  408b8d:	mov    rcx,QWORD PTR [rbp-0x28]
  408b91:	mov    rdx,QWORD PTR [rbp-0x20]
  408b95:	mov    rsi,QWORD PTR [rbp-0x18]
  408b99:	mov    rax,QWORD PTR [rbp-0x38]
  408b9d:	mov    rdi,rax
  408ba0:	call   408980 <flatcc_builder_create_union_vector_direct@@Base>
  408ba5:	mov    QWORD PTR [rbp-0x8],rax
  408ba9:	mov    rax,QWORD PTR [rbp-0x38]
  408bad:	mov    rdi,rax
  408bb0:	call   4055ce <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  408bb5:	mov    rax,QWORD PTR [rbp-0x8]
  408bb9:	leave  
  408bba:	ret    

0000000000408bbb <flatcc_builder_union_vector_edit@@Base>:
  408bbb:	push   rbp
  408bbc:	mov    rbp,rsp
  408bbf:	mov    QWORD PTR [rbp-0x8],rdi
  408bc3:	mov    rax,QWORD PTR [rbp-0x8]
  408bc7:	mov    rax,QWORD PTR [rax+0x18]
  408bcb:	pop    rbp
  408bcc:	ret    

0000000000408bcd <flatcc_builder_union_vector_count@@Base>:
  408bcd:	push   rbp
  408bce:	mov    rbp,rsp
  408bd1:	mov    QWORD PTR [rbp-0x8],rdi
  408bd5:	mov    rax,QWORD PTR [rbp-0x8]
  408bd9:	mov    rax,QWORD PTR [rax+0x30]
  408bdd:	mov    eax,DWORD PTR [rax+0x14]
  408be0:	mov    eax,eax
  408be2:	pop    rbp
  408be3:	ret    

0000000000408be4 <flatcc_builder_extend_union_vector@@Base>:
  408be4:	push   rbp
  408be5:	mov    rbp,rsp
  408be8:	sub    rsp,0x10
  408bec:	mov    QWORD PTR [rbp-0x8],rdi
  408bf0:	mov    QWORD PTR [rbp-0x10],rsi
  408bf4:	mov    rax,QWORD PTR [rbp-0x10]
  408bf8:	mov    ecx,eax
  408bfa:	mov    rax,QWORD PTR [rbp-0x8]
  408bfe:	mov    edx,0x1fffffff
  408c03:	mov    esi,ecx
  408c05:	mov    rdi,rax
  408c08:	call   40664a <flatcc_builder_end_struct@@Base+0x8e>
  408c0d:	test   eax,eax
  408c0f:	je     408c18 <flatcc_builder_extend_union_vector@@Base+0x34>
  408c11:	mov    eax,0x0
  408c16:	jmp    408c31 <flatcc_builder_extend_union_vector@@Base+0x4d>
  408c18:	mov    rax,QWORD PTR [rbp-0x10]
  408c1c:	lea    edx,[rax*8+0x0]
  408c23:	mov    rax,QWORD PTR [rbp-0x8]
  408c27:	mov    esi,edx
  408c29:	mov    rdi,rax
  408c2c:	call   4046f3 <flatcc_builder_default_alloc@@Base+0x260>
  408c31:	leave  
  408c32:	ret    

0000000000408c33 <flatcc_builder_truncate_union_vector@@Base>:
  408c33:	push   rbp
  408c34:	mov    rbp,rsp
  408c37:	sub    rsp,0x10
  408c3b:	mov    QWORD PTR [rbp-0x8],rdi
  408c3f:	mov    QWORD PTR [rbp-0x10],rsi
  408c43:	mov    rax,QWORD PTR [rbp-0x8]
  408c47:	mov    rax,QWORD PTR [rax+0x30]
  408c4b:	movzx  eax,WORD PTR [rax+0xe]
  408c4f:	cmp    ax,0x7
  408c53:	je     408c74 <flatcc_builder_truncate_union_vector@@Base+0x41>
  408c55:	lea    rcx,[rip+0x3424]        # 40c080 <flatcc_builder_padding_base@@Base+0xba0>
  408c5c:	mov    edx,0x681
  408c61:	lea    rsi,[rip+0x2a78]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408c68:	lea    rdi,[rip+0x2e09]        # 40ba78 <flatcc_builder_padding_base@@Base+0x598>
  408c6f:	call   403090 <__assert_fail@plt>
  408c74:	mov    rax,QWORD PTR [rbp-0x8]
  408c78:	mov    rax,QWORD PTR [rax+0x30]
  408c7c:	mov    eax,DWORD PTR [rax+0x14]
  408c7f:	mov    rdx,QWORD PTR [rbp-0x10]
  408c83:	cmp    eax,edx
  408c85:	jae    408cc0 <flatcc_builder_truncate_union_vector@@Base+0x8d>
  408c87:	mov    rax,QWORD PTR [rbp-0x8]
  408c8b:	mov    rax,QWORD PTR [rax+0x30]
  408c8f:	mov    eax,DWORD PTR [rax+0x14]
  408c92:	mov    rdx,QWORD PTR [rbp-0x10]
  408c96:	cmp    eax,edx
  408c98:	jae    408cb9 <flatcc_builder_truncate_union_vector@@Base+0x86>
  408c9a:	lea    rcx,[rip+0x33df]        # 40c080 <flatcc_builder_padding_base@@Base+0xba0>
  408ca1:	mov    edx,0x682
  408ca6:	lea    rsi,[rip+0x2a33]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408cad:	lea    rdi,[rip+0x2c74]        # 40b928 <flatcc_builder_padding_base@@Base+0x448>
  408cb4:	call   403090 <__assert_fail@plt>
  408cb9:	mov    eax,0xffffffff
  408cbe:	jmp    408d01 <flatcc_builder_truncate_union_vector@@Base+0xce>
  408cc0:	mov    rax,QWORD PTR [rbp-0x8]
  408cc4:	mov    rax,QWORD PTR [rax+0x30]
  408cc8:	mov    rdx,QWORD PTR [rbp-0x8]
  408ccc:	mov    rdx,QWORD PTR [rdx+0x30]
  408cd0:	mov    edx,DWORD PTR [rdx+0x14]
  408cd3:	mov    rcx,QWORD PTR [rbp-0x10]
  408cd7:	sub    edx,ecx
  408cd9:	mov    DWORD PTR [rax+0x14],edx
  408cdc:	mov    rax,QWORD PTR [rbp-0x8]
  408ce0:	mov    rax,QWORD PTR [rax+0x30]
  408ce4:	mov    eax,DWORD PTR [rax+0x10]
  408ce7:	mov    rdx,QWORD PTR [rbp-0x10]
  408ceb:	imul   edx,eax
  408cee:	mov    rax,QWORD PTR [rbp-0x8]
  408cf2:	mov    esi,edx
  408cf4:	mov    rdi,rax
  408cf7:	call   404770 <flatcc_builder_default_alloc@@Base+0x2dd>
  408cfc:	mov    eax,0x0
  408d01:	leave  
  408d02:	ret    

0000000000408d03 <flatcc_builder_union_vector_push@@Base>:
  408d03:	push   rbp
  408d04:	mov    rbp,rsp
  408d07:	sub    rsp,0x20
  408d0b:	mov    QWORD PTR [rbp-0x18],rdi
  408d0f:	mov    QWORD PTR [rbp-0x20],rsi
  408d13:	mov    rax,QWORD PTR [rbp-0x18]
  408d17:	mov    rax,QWORD PTR [rax+0x30]
  408d1b:	movzx  eax,WORD PTR [rax+0xe]
  408d1f:	cmp    ax,0x7
  408d23:	je     408d44 <flatcc_builder_union_vector_push@@Base+0x41>
  408d25:	lea    rcx,[rip+0x3394]        # 40c0c0 <flatcc_builder_padding_base@@Base+0xbe0>
  408d2c:	mov    edx,0x68d
  408d31:	lea    rsi,[rip+0x29a8]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408d38:	lea    rdi,[rip+0x2d39]        # 40ba78 <flatcc_builder_padding_base@@Base+0x598>
  408d3f:	call   403090 <__assert_fail@plt>
  408d44:	mov    rax,QWORD PTR [rbp-0x18]
  408d48:	mov    rax,QWORD PTR [rax+0x30]
  408d4c:	mov    eax,DWORD PTR [rax+0x14]
  408d4f:	cmp    eax,0x1fffffff
  408d54:	jne    408d5d <flatcc_builder_union_vector_push@@Base+0x5a>
  408d56:	mov    eax,0x0
  408d5b:	jmp    408da8 <flatcc_builder_union_vector_push@@Base+0xa5>
  408d5d:	mov    rax,QWORD PTR [rbp-0x18]
  408d61:	mov    rax,QWORD PTR [rax+0x30]
  408d65:	mov    rdx,QWORD PTR [rbp-0x18]
  408d69:	mov    rdx,QWORD PTR [rdx+0x30]
  408d6d:	mov    edx,DWORD PTR [rdx+0x14]
  408d70:	add    edx,0x1
  408d73:	mov    DWORD PTR [rax+0x14],edx
  408d76:	mov    rax,QWORD PTR [rbp-0x18]
  408d7a:	mov    esi,0x8
  408d7f:	mov    rdi,rax
  408d82:	call   4046f3 <flatcc_builder_default_alloc@@Base+0x260>
  408d87:	mov    QWORD PTR [rbp-0x8],rax
  408d8b:	cmp    QWORD PTR [rbp-0x8],0x0
  408d90:	jne    408d99 <flatcc_builder_union_vector_push@@Base+0x96>
  408d92:	mov    eax,0x0
  408d97:	jmp    408da8 <flatcc_builder_union_vector_push@@Base+0xa5>
  408d99:	mov    rax,QWORD PTR [rbp-0x8]
  408d9d:	mov    rdx,QWORD PTR [rbp-0x20]
  408da1:	mov    QWORD PTR [rax],rdx
  408da4:	mov    rax,QWORD PTR [rbp-0x8]
  408da8:	leave  
  408da9:	ret    

0000000000408daa <flatcc_builder_append_union_vector@@Base>:
  408daa:	push   rbp
  408dab:	mov    rbp,rsp
  408dae:	sub    rsp,0x20
  408db2:	mov    QWORD PTR [rbp-0x8],rdi
  408db6:	mov    QWORD PTR [rbp-0x10],rsi
  408dba:	mov    QWORD PTR [rbp-0x18],rdx
  408dbe:	mov    rax,QWORD PTR [rbp-0x8]
  408dc2:	mov    rax,QWORD PTR [rax+0x30]
  408dc6:	movzx  eax,WORD PTR [rax+0xe]
  408dca:	cmp    ax,0x7
  408dce:	je     408def <flatcc_builder_append_union_vector@@Base+0x45>
  408dd0:	lea    rcx,[rip+0x3329]        # 40c100 <flatcc_builder_padding_base@@Base+0xc20>
  408dd7:	mov    edx,0x69c
  408ddc:	lea    rsi,[rip+0x28fd]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408de3:	lea    rdi,[rip+0x2c8e]        # 40ba78 <flatcc_builder_padding_base@@Base+0x598>
  408dea:	call   403090 <__assert_fail@plt>
  408def:	mov    rax,QWORD PTR [rbp-0x18]
  408df3:	mov    ecx,eax
  408df5:	mov    rax,QWORD PTR [rbp-0x8]
  408df9:	mov    edx,0x1fffffff
  408dfe:	mov    esi,ecx
  408e00:	mov    rdi,rax
  408e03:	call   40664a <flatcc_builder_end_struct@@Base+0x8e>
  408e08:	test   eax,eax
  408e0a:	je     408e13 <flatcc_builder_append_union_vector@@Base+0x69>
  408e0c:	mov    eax,0x0
  408e11:	jmp    408e31 <flatcc_builder_append_union_vector@@Base+0x87>
  408e13:	mov    rax,QWORD PTR [rbp-0x18]
  408e17:	lea    edx,[rax*8+0x0]
  408e1e:	mov    rcx,QWORD PTR [rbp-0x10]
  408e22:	mov    rax,QWORD PTR [rbp-0x8]
  408e26:	mov    rsi,rcx
  408e29:	mov    rdi,rax
  408e2c:	call   4047bc <flatcc_builder_default_alloc@@Base+0x329>
  408e31:	leave  
  408e32:	ret    

0000000000408e33 <flatcc_builder_create_string@@Base>:
  408e33:	push   rbp
  408e34:	mov    rbp,rsp
  408e37:	sub    rsp,0xd0
  408e3e:	mov    QWORD PTR [rbp-0xb8],rdi
  408e45:	mov    QWORD PTR [rbp-0xc0],rsi
  408e4c:	mov    QWORD PTR [rbp-0xc8],rdx
  408e53:	mov    rax,QWORD PTR fs:0x28
  408e5c:	mov    QWORD PTR [rbp-0x8],rax
  408e60:	xor    eax,eax
  408e62:	mov    eax,0xffffffff
  408e67:	cmp    QWORD PTR [rbp-0xc8],rax
  408e6e:	jbe    408e7a <flatcc_builder_create_string@@Base+0x47>
  408e70:	mov    eax,0x0
  408e75:	jmp    409021 <flatcc_builder_create_string@@Base+0x1ee>
  408e7a:	mov    rax,QWORD PTR [rbp-0xc8]
  408e81:	mov    edi,eax
  408e83:	call   4043cd <main@@Base+0xc2>
  408e88:	mov    DWORD PTR [rbp-0xa8],eax
  408e8e:	mov    rax,QWORD PTR [rbp-0xc8]
  408e95:	lea    ecx,[rax+0x1]
  408e98:	mov    rax,QWORD PTR [rbp-0xb8]
  408e9f:	mov    edx,0x4
  408ea4:	mov    esi,ecx
  408ea6:	mov    rdi,rax
  408ea9:	call   405695 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  408eae:	add    eax,0x1
  408eb1:	mov    DWORD PTR [rbp-0xa4],eax
  408eb7:	mov    QWORD PTR [rbp-0xa0],0x0
  408ec2:	mov    DWORD PTR [rbp-0x98],0x0
  408ecc:	mov    rax,QWORD PTR [rbp-0xa0]
  408ed3:	add    rax,0x4
  408ed7:	mov    QWORD PTR [rbp-0xa0],rax
  408ede:	mov    eax,DWORD PTR [rbp-0x98]
  408ee4:	cdqe   
  408ee6:	shl    rax,0x4
  408eea:	add    rax,rbp
  408eed:	lea    rdx,[rax-0x90]
  408ef4:	lea    rax,[rbp-0xa8]
  408efb:	mov    QWORD PTR [rdx],rax
  408efe:	mov    eax,DWORD PTR [rbp-0x98]
  408f04:	cdqe   
  408f06:	shl    rax,0x4
  408f0a:	add    rax,rbp
  408f0d:	sub    rax,0x88
  408f13:	mov    QWORD PTR [rax],0x4
  408f1a:	mov    eax,DWORD PTR [rbp-0x98]
  408f20:	add    eax,0x1
  408f23:	mov    DWORD PTR [rbp-0x98],eax
  408f29:	cmp    QWORD PTR [rbp-0xc8],0x0
  408f31:	je     408f9a <flatcc_builder_create_string@@Base+0x167>
  408f33:	mov    rdx,QWORD PTR [rbp-0xa0]
  408f3a:	mov    rax,QWORD PTR [rbp-0xc8]
  408f41:	add    rax,rdx
  408f44:	mov    QWORD PTR [rbp-0xa0],rax
  408f4b:	mov    eax,DWORD PTR [rbp-0x98]
  408f51:	cdqe   
  408f53:	shl    rax,0x4
  408f57:	add    rax,rbp
  408f5a:	lea    rdx,[rax-0x90]
  408f61:	mov    rax,QWORD PTR [rbp-0xc0]
  408f68:	mov    QWORD PTR [rdx],rax
  408f6b:	mov    eax,DWORD PTR [rbp-0x98]
  408f71:	cdqe   
  408f73:	shl    rax,0x4
  408f77:	add    rax,rbp
  408f7a:	lea    rdx,[rax-0x88]
  408f81:	mov    rax,QWORD PTR [rbp-0xc8]
  408f88:	mov    QWORD PTR [rdx],rax
  408f8b:	mov    eax,DWORD PTR [rbp-0x98]
  408f91:	add    eax,0x1
  408f94:	mov    DWORD PTR [rbp-0x98],eax
  408f9a:	cmp    DWORD PTR [rbp-0xa4],0x0
  408fa1:	je     409008 <flatcc_builder_create_string@@Base+0x1d5>
  408fa3:	mov    rdx,QWORD PTR [rbp-0xa0]
  408faa:	mov    eax,DWORD PTR [rbp-0xa4]
  408fb0:	add    rax,rdx
  408fb3:	mov    QWORD PTR [rbp-0xa0],rax
  408fba:	mov    eax,DWORD PTR [rbp-0x98]
  408fc0:	cdqe   
  408fc2:	shl    rax,0x4
  408fc6:	add    rax,rbp
  408fc9:	sub    rax,0x90
  408fcf:	mov    rdx,0x40b4e0
  408fd6:	mov    QWORD PTR [rax],rdx
  408fd9:	mov    edx,DWORD PTR [rbp-0x98]
  408fdf:	mov    eax,DWORD PTR [rbp-0xa4]
  408fe5:	movsxd rdx,edx
  408fe8:	shl    rdx,0x4
  408fec:	add    rdx,rbp
  408fef:	sub    rdx,0x88
  408ff6:	mov    QWORD PTR [rdx],rax
  408ff9:	mov    eax,DWORD PTR [rbp-0x98]
  408fff:	add    eax,0x1
  409002:	mov    DWORD PTR [rbp-0x98],eax
  409008:	lea    rdx,[rbp-0xa0]
  40900f:	mov    rax,QWORD PTR [rbp-0xb8]
  409016:	mov    rsi,rdx
  409019:	mov    rdi,rax
  40901c:	call   4056e1 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  409021:	mov    rcx,QWORD PTR [rbp-0x8]
  409025:	xor    rcx,QWORD PTR fs:0x28
  40902e:	je     409035 <flatcc_builder_create_string@@Base+0x202>
  409030:	call   403070 <__stack_chk_fail@plt>
  409035:	leave  
  409036:	ret    

0000000000409037 <flatcc_builder_create_string_str@@Base>:
  409037:	push   rbp
  409038:	mov    rbp,rsp
  40903b:	sub    rsp,0x10
  40903f:	mov    QWORD PTR [rbp-0x8],rdi
  409043:	mov    QWORD PTR [rbp-0x10],rsi
  409047:	mov    rax,QWORD PTR [rbp-0x10]
  40904b:	mov    rdi,rax
  40904e:	call   403060 <strlen@plt>
  409053:	mov    rdx,rax
  409056:	mov    rcx,QWORD PTR [rbp-0x10]
  40905a:	mov    rax,QWORD PTR [rbp-0x8]
  40905e:	mov    rsi,rcx
  409061:	mov    rdi,rax
  409064:	call   408e33 <flatcc_builder_create_string@@Base>
  409069:	leave  
  40906a:	ret    

000000000040906b <flatcc_builder_create_string_strn@@Base>:
  40906b:	push   rbp
  40906c:	mov    rbp,rsp
  40906f:	sub    rsp,0x20
  409073:	mov    QWORD PTR [rbp-0x8],rdi
  409077:	mov    QWORD PTR [rbp-0x10],rsi
  40907b:	mov    QWORD PTR [rbp-0x18],rdx
  40907f:	mov    rdx,QWORD PTR [rbp-0x18]
  409083:	mov    rax,QWORD PTR [rbp-0x10]
  409087:	mov    rsi,rdx
  40908a:	mov    rdi,rax
  40908d:	call   40444d <main@@Base+0x142>
  409092:	mov    rdx,rax
  409095:	mov    rcx,QWORD PTR [rbp-0x10]
  409099:	mov    rax,QWORD PTR [rbp-0x8]
  40909d:	mov    rsi,rcx
  4090a0:	mov    rdi,rax
  4090a3:	call   408e33 <flatcc_builder_create_string@@Base>
  4090a8:	leave  
  4090a9:	ret    

00000000004090aa <flatcc_builder_end_string@@Base>:
  4090aa:	push   rbp
  4090ab:	mov    rbp,rsp
  4090ae:	sub    rsp,0x20
  4090b2:	mov    QWORD PTR [rbp-0x18],rdi
  4090b6:	mov    rax,QWORD PTR [rbp-0x18]
  4090ba:	mov    rax,QWORD PTR [rax+0x30]
  4090be:	movzx  eax,WORD PTR [rax+0xe]
  4090c2:	cmp    ax,0x6
  4090c6:	je     4090e7 <flatcc_builder_end_string@@Base+0x3d>
  4090c8:	lea    rcx,[rip+0x3061]        # 40c130 <flatcc_builder_padding_base@@Base+0xc50>
  4090cf:	mov    edx,0x6c4
  4090d4:	lea    rsi,[rip+0x2605]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4090db:	lea    rdi,[rip+0x27ee]        # 40b8d0 <flatcc_builder_padding_base@@Base+0x3f0>
  4090e2:	call   403090 <__assert_fail@plt>
  4090e7:	mov    rax,QWORD PTR [rbp-0x18]
  4090eb:	mov    rax,QWORD PTR [rax+0x30]
  4090ef:	mov    edx,DWORD PTR [rax+0x14]
  4090f2:	mov    rax,QWORD PTR [rbp-0x18]
  4090f6:	mov    eax,DWORD PTR [rax+0x20]
  4090f9:	cmp    edx,eax
  4090fb:	je     40911c <flatcc_builder_end_string@@Base+0x72>
  4090fd:	lea    rcx,[rip+0x302c]        # 40c130 <flatcc_builder_padding_base@@Base+0xc50>
  409104:	mov    edx,0x6c5
  409109:	lea    rsi,[rip+0x25d0]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  409110:	lea    rdi,[rip+0x2999]        # 40bab0 <flatcc_builder_padding_base@@Base+0x5d0>
  409117:	call   403090 <__assert_fail@plt>
  40911c:	mov    rax,QWORD PTR [rbp-0x18]
  409120:	mov    eax,DWORD PTR [rax+0x20]
  409123:	mov    edx,eax
  409125:	mov    rax,QWORD PTR [rbp-0x18]
  409129:	mov    rcx,QWORD PTR [rax+0x18]
  40912d:	mov    rax,QWORD PTR [rbp-0x18]
  409131:	mov    rsi,rcx
  409134:	mov    rdi,rax
  409137:	call   408e33 <flatcc_builder_create_string@@Base>
  40913c:	mov    DWORD PTR [rbp-0x4],eax
  40913f:	cmp    DWORD PTR [rbp-0x4],0x0
  409143:	jne    40914c <flatcc_builder_end_string@@Base+0xa2>
  409145:	mov    eax,0x0
  40914a:	jmp    40915b <flatcc_builder_end_string@@Base+0xb1>
  40914c:	mov    rax,QWORD PTR [rbp-0x18]
  409150:	mov    rdi,rax
  409153:	call   4055ce <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  409158:	mov    eax,DWORD PTR [rbp-0x4]
  40915b:	leave  
  40915c:	ret    

000000000040915d <flatcc_builder_string_edit@@Base>:
  40915d:	push   rbp
  40915e:	mov    rbp,rsp
  409161:	mov    QWORD PTR [rbp-0x8],rdi
  409165:	mov    rax,QWORD PTR [rbp-0x8]
  409169:	mov    rax,QWORD PTR [rax+0x18]
  40916d:	pop    rbp
  40916e:	ret    

000000000040916f <flatcc_builder_string_len@@Base>:
  40916f:	push   rbp
  409170:	mov    rbp,rsp
  409173:	mov    QWORD PTR [rbp-0x8],rdi
  409177:	mov    rax,QWORD PTR [rbp-0x8]
  40917b:	mov    rax,QWORD PTR [rax+0x30]
  40917f:	mov    eax,DWORD PTR [rax+0x14]
  409182:	mov    eax,eax
  409184:	pop    rbp
  409185:	ret    

0000000000409186 <flatcc_builder_table_add@@Base>:
  409186:	push   rbp
  409187:	mov    rbp,rsp
  40918a:	sub    rsp,0x20
  40918e:	mov    QWORD PTR [rbp-0x8],rdi
  409192:	mov    DWORD PTR [rbp-0xc],esi
  409195:	mov    QWORD PTR [rbp-0x18],rdx
  409199:	mov    eax,ecx
  40919b:	mov    WORD PTR [rbp-0x10],ax
  40919f:	mov    rax,QWORD PTR [rbp-0x8]
  4091a3:	mov    rax,QWORD PTR [rax+0x30]
  4091a7:	movzx  eax,WORD PTR [rax+0xe]
  4091ab:	cmp    ax,0x3
  4091af:	je     4091d0 <flatcc_builder_table_add@@Base+0x4a>
  4091b1:	lea    rcx,[rip+0x2f98]        # 40c150 <flatcc_builder_padding_base@@Base+0xc70>
  4091b8:	mov    edx,0x6ed
  4091bd:	lea    rsi,[rip+0x251c]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4091c4:	lea    rdi,[rip+0x27ed]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  4091cb:	call   403090 <__assert_fail@plt>
  4091d0:	cmp    DWORD PTR [rbp-0xc],0x0
  4091d4:	js     4091df <flatcc_builder_table_add@@Base+0x59>
  4091d6:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  4091dd:	jle    4091fe <flatcc_builder_table_add@@Base+0x78>
  4091df:	lea    rcx,[rip+0x2f6a]        # 40c150 <flatcc_builder_padding_base@@Base+0xc70>
  4091e6:	mov    edx,0x6ee
  4091eb:	lea    rsi,[rip+0x24ee]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4091f2:	lea    rdi,[rip+0x28df]        # 40bad8 <flatcc_builder_padding_base@@Base+0x5f8>
  4091f9:	call   403090 <__assert_fail@plt>
  4091fe:	mov    rax,QWORD PTR [rbp-0x8]
  409202:	movzx  eax,WORD PTR [rax+0xea]
  409209:	cmp    ax,WORD PTR [rbp-0x10]
  40920d:	jae    40921e <flatcc_builder_table_add@@Base+0x98>
  40920f:	mov    rax,QWORD PTR [rbp-0x8]
  409213:	movzx  edx,WORD PTR [rbp-0x10]
  409217:	mov    WORD PTR [rax+0xea],dx
  40921e:	mov    rax,QWORD PTR [rbp-0x8]
  409222:	mov    rax,QWORD PTR [rax+0x8]
  409226:	mov    edx,DWORD PTR [rbp-0xc]
  409229:	movsxd rdx,edx
  40922c:	add    rdx,rdx
  40922f:	add    rax,rdx
  409232:	movzx  eax,WORD PTR [rax]
  409235:	test   ax,ax
  409238:	je     409259 <flatcc_builder_table_add@@Base+0xd3>
  40923a:	lea    rcx,[rip+0x2f0f]        # 40c150 <flatcc_builder_padding_base@@Base+0xc70>
  409241:	mov    edx,0x6f8
  409246:	lea    rsi,[rip+0x2493]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40924d:	lea    rdi,[rip+0x24ec]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  409254:	call   403090 <__assert_fail@plt>
  409259:	mov    rax,QWORD PTR [rbp-0x8]
  40925d:	mov    edx,DWORD PTR [rax+0x14]
  409260:	mov    eax,DWORD PTR [rbp-0xc]
  409263:	xor    eax,edx
  409265:	imul   eax,eax,0x9e3779b1
  40926b:	mov    rdx,QWORD PTR [rbp-0x18]
  40926f:	xor    eax,edx
  409271:	imul   edx,eax,0x9e3779b1
  409277:	mov    rax,QWORD PTR [rbp-0x8]
  40927b:	mov    DWORD PTR [rax+0x14],edx
  40927e:	mov    eax,DWORD PTR [rbp-0xc]
  409281:	movzx  ecx,ax
  409284:	movzx  edx,WORD PTR [rbp-0x10]
  409288:	mov    rax,QWORD PTR [rbp-0x18]
  40928c:	mov    esi,eax
  40928e:	mov    rax,QWORD PTR [rbp-0x8]
  409292:	mov    rdi,rax
  409295:	call   40480e <flatcc_builder_default_alloc@@Base+0x37b>
  40929a:	leave  
  40929b:	ret    

000000000040929c <flatcc_builder_table_edit@@Base>:
  40929c:	push   rbp
  40929d:	mov    rbp,rsp
  4092a0:	sub    rsp,0x10
  4092a4:	mov    QWORD PTR [rbp-0x8],rdi
  4092a8:	mov    QWORD PTR [rbp-0x10],rsi
  4092ac:	mov    rax,QWORD PTR [rbp-0x8]
  4092b0:	mov    rax,QWORD PTR [rax+0x30]
  4092b4:	movzx  eax,WORD PTR [rax+0xe]
  4092b8:	cmp    ax,0x3
  4092bc:	je     4092dd <flatcc_builder_table_edit@@Base+0x41>
  4092be:	lea    rcx,[rip+0x2eab]        # 40c170 <flatcc_builder_padding_base@@Base+0xc90>
  4092c5:	mov    edx,0x702
  4092ca:	lea    rsi,[rip+0x240f]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4092d1:	lea    rdi,[rip+0x26e0]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  4092d8:	call   403090 <__assert_fail@plt>
  4092dd:	mov    rax,QWORD PTR [rbp-0x8]
  4092e1:	mov    rdx,QWORD PTR [rax+0x18]
  4092e5:	mov    rax,QWORD PTR [rbp-0x8]
  4092e9:	mov    eax,DWORD PTR [rax+0x20]
  4092ec:	mov    eax,eax
  4092ee:	sub    rax,QWORD PTR [rbp-0x10]
  4092f2:	add    rax,rdx
  4092f5:	leave  
  4092f6:	ret    

00000000004092f7 <flatcc_builder_table_add_copy@@Base>:
  4092f7:	push   rbp
  4092f8:	mov    rbp,rsp
  4092fb:	sub    rsp,0x30
  4092ff:	mov    QWORD PTR [rbp-0x18],rdi
  409303:	mov    DWORD PTR [rbp-0x1c],esi
  409306:	mov    QWORD PTR [rbp-0x28],rdx
  40930a:	mov    QWORD PTR [rbp-0x30],rcx
  40930e:	mov    eax,r8d
  409311:	mov    WORD PTR [rbp-0x20],ax
  409315:	movzx  ecx,WORD PTR [rbp-0x20]
  409319:	mov    rdx,QWORD PTR [rbp-0x30]
  40931d:	mov    esi,DWORD PTR [rbp-0x1c]
  409320:	mov    rax,QWORD PTR [rbp-0x18]
  409324:	mov    rdi,rax
  409327:	call   409186 <flatcc_builder_table_add@@Base>
  40932c:	mov    QWORD PTR [rbp-0x8],rax
  409330:	cmp    QWORD PTR [rbp-0x8],0x0
  409335:	je     40934e <flatcc_builder_table_add_copy@@Base+0x57>
  409337:	mov    rdx,QWORD PTR [rbp-0x30]
  40933b:	mov    rcx,QWORD PTR [rbp-0x28]
  40933f:	mov    rax,QWORD PTR [rbp-0x8]
  409343:	mov    rsi,rcx
  409346:	mov    rdi,rax
  409349:	call   4030f0 <memcpy@plt>
  40934e:	mov    rax,QWORD PTR [rbp-0x8]
  409352:	leave  
  409353:	ret    

0000000000409354 <flatcc_builder_table_add_offset@@Base>:
  409354:	push   rbp
  409355:	mov    rbp,rsp
  409358:	sub    rsp,0x10
  40935c:	mov    QWORD PTR [rbp-0x8],rdi
  409360:	mov    DWORD PTR [rbp-0xc],esi
  409363:	mov    rax,QWORD PTR [rbp-0x8]
  409367:	mov    rax,QWORD PTR [rax+0x30]
  40936b:	movzx  eax,WORD PTR [rax+0xe]
  40936f:	cmp    ax,0x3
  409373:	je     409394 <flatcc_builder_table_add_offset@@Base+0x40>
  409375:	lea    rcx,[rip+0x2e24]        # 40c1a0 <flatcc_builder_padding_base@@Base+0xcc0>
  40937c:	mov    edx,0x713
  409381:	lea    rsi,[rip+0x2358]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  409388:	lea    rdi,[rip+0x2629]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  40938f:	call   403090 <__assert_fail@plt>
  409394:	cmp    DWORD PTR [rbp-0xc],0x0
  409398:	js     4093a3 <flatcc_builder_table_add_offset@@Base+0x4f>
  40939a:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  4093a1:	jle    4093c2 <flatcc_builder_table_add_offset@@Base+0x6e>
  4093a3:	lea    rcx,[rip+0x2df6]        # 40c1a0 <flatcc_builder_padding_base@@Base+0xcc0>
  4093aa:	mov    edx,0x714
  4093af:	lea    rsi,[rip+0x232a]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4093b6:	lea    rdi,[rip+0x271b]        # 40bad8 <flatcc_builder_padding_base@@Base+0x5f8>
  4093bd:	call   403090 <__assert_fail@plt>
  4093c2:	mov    rax,QWORD PTR [rbp-0x8]
  4093c6:	mov    rax,QWORD PTR [rax+0x8]
  4093ca:	mov    edx,DWORD PTR [rbp-0xc]
  4093cd:	movsxd rdx,edx
  4093d0:	add    rdx,rdx
  4093d3:	add    rax,rdx
  4093d6:	movzx  eax,WORD PTR [rax]
  4093d9:	test   ax,ax
  4093dc:	je     4093fd <flatcc_builder_table_add_offset@@Base+0xa9>
  4093de:	lea    rcx,[rip+0x2dbb]        # 40c1a0 <flatcc_builder_padding_base@@Base+0xcc0>
  4093e5:	mov    edx,0x71b
  4093ea:	lea    rsi,[rip+0x22ef]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4093f1:	lea    rdi,[rip+0x2348]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  4093f8:	call   403090 <__assert_fail@plt>
  4093fd:	mov    rax,QWORD PTR [rbp-0x8]
  409401:	mov    edx,DWORD PTR [rax+0x14]
  409404:	mov    eax,DWORD PTR [rbp-0xc]
  409407:	xor    eax,edx
  409409:	imul   eax,eax,0x9e3779b1
  40940f:	xor    eax,0x4
  409412:	imul   edx,eax,0x9e3779b1
  409418:	mov    rax,QWORD PTR [rbp-0x8]
  40941c:	mov    DWORD PTR [rax+0x14],edx
  40941f:	mov    eax,DWORD PTR [rbp-0xc]
  409422:	movzx  edx,ax
  409425:	mov    rax,QWORD PTR [rbp-0x8]
  409429:	mov    esi,edx
  40942b:	mov    rdi,rax
  40942e:	call   4048d6 <flatcc_builder_default_alloc@@Base+0x443>
  409433:	leave  
  409434:	ret    

0000000000409435 <flatcc_builder_push_buffer_alignment@@Base>:
  409435:	push   rbp
  409436:	mov    rbp,rsp
  409439:	mov    QWORD PTR [rbp-0x18],rdi
  40943d:	mov    rax,QWORD PTR [rbp-0x18]
  409441:	movzx  eax,WORD PTR [rax+0xe8]
  409448:	mov    WORD PTR [rbp-0x2],ax
  40944c:	mov    rax,QWORD PTR [rbp-0x18]
  409450:	mov    WORD PTR [rax+0xe8],0x4
  409459:	movzx  eax,WORD PTR [rbp-0x2]
  40945d:	pop    rbp
  40945e:	ret    

000000000040945f <flatcc_builder_pop_buffer_alignment@@Base>:
  40945f:	push   rbp
  409460:	mov    rbp,rsp
  409463:	sub    rsp,0x10
  409467:	mov    QWORD PTR [rbp-0x8],rdi
  40946b:	mov    eax,esi
  40946d:	mov    WORD PTR [rbp-0xc],ax
  409471:	movzx  edx,WORD PTR [rbp-0xc]
  409475:	mov    rax,QWORD PTR [rbp-0x8]
  409479:	mov    esi,edx
  40947b:	mov    rdi,rax
  40947e:	call   4050dd <flatcc_builder_clear@@Base+0x96>
  409483:	nop
  409484:	leave  
  409485:	ret    

0000000000409486 <flatcc_builder_get_buffer_alignment@@Base>:
  409486:	push   rbp
  409487:	mov    rbp,rsp
  40948a:	mov    QWORD PTR [rbp-0x8],rdi
  40948e:	mov    rax,QWORD PTR [rbp-0x8]
  409492:	movzx  eax,WORD PTR [rax+0xe8]
  409499:	pop    rbp
  40949a:	ret    

000000000040949b <flatcc_builder_set_vtable_clustering@@Base>:
  40949b:	push   rbp
  40949c:	mov    rbp,rsp
  40949f:	mov    QWORD PTR [rbp-0x8],rdi
  4094a3:	mov    DWORD PTR [rbp-0xc],esi
  4094a6:	cmp    DWORD PTR [rbp-0xc],0x0
  4094aa:	sete   al
  4094ad:	movzx  edx,al
  4094b0:	mov    rax,QWORD PTR [rbp-0x8]
  4094b4:	mov    DWORD PTR [rax+0x124],edx
  4094ba:	nop
  4094bb:	pop    rbp
  4094bc:	ret    

00000000004094bd <flatcc_builder_set_block_align@@Base>:
  4094bd:	push   rbp
  4094be:	mov    rbp,rsp
  4094c1:	mov    QWORD PTR [rbp-0x8],rdi
  4094c5:	mov    eax,esi
  4094c7:	mov    WORD PTR [rbp-0xc],ax
  4094cb:	mov    rax,QWORD PTR [rbp-0x8]
  4094cf:	movzx  edx,WORD PTR [rbp-0xc]
  4094d3:	mov    WORD PTR [rax+0xec],dx
  4094da:	nop
  4094db:	pop    rbp
  4094dc:	ret    

00000000004094dd <flatcc_builder_get_level@@Base>:
  4094dd:	push   rbp
  4094de:	mov    rbp,rsp
  4094e1:	mov    QWORD PTR [rbp-0x8],rdi
  4094e5:	mov    rax,QWORD PTR [rbp-0x8]
  4094e9:	mov    eax,DWORD PTR [rax+0x104]
  4094ef:	pop    rbp
  4094f0:	ret    

00000000004094f1 <flatcc_builder_set_max_level@@Base>:
  4094f1:	push   rbp
  4094f2:	mov    rbp,rsp
  4094f5:	mov    QWORD PTR [rbp-0x8],rdi
  4094f9:	mov    DWORD PTR [rbp-0xc],esi
  4094fc:	mov    rax,QWORD PTR [rbp-0x8]
  409500:	mov    edx,DWORD PTR [rbp-0xc]
  409503:	mov    DWORD PTR [rax+0x120],edx
  409509:	mov    rax,QWORD PTR [rbp-0x8]
  40950d:	mov    edx,DWORD PTR [rax+0x108]
  409513:	mov    rax,QWORD PTR [rbp-0x8]
  409517:	mov    eax,DWORD PTR [rax+0x120]
  40951d:	cmp    edx,eax
  40951f:	jge    409535 <flatcc_builder_set_max_level@@Base+0x44>
  409521:	mov    rax,QWORD PTR [rbp-0x8]
  409525:	mov    edx,DWORD PTR [rax+0x120]
  40952b:	mov    rax,QWORD PTR [rbp-0x8]
  40952f:	mov    DWORD PTR [rax+0x108],edx
  409535:	nop
  409536:	pop    rbp
  409537:	ret    

0000000000409538 <flatcc_builder_get_buffer_size@@Base>:
  409538:	push   rbp
  409539:	mov    rbp,rsp
  40953c:	mov    QWORD PTR [rbp-0x8],rdi
  409540:	mov    rax,QWORD PTR [rbp-0x8]
  409544:	mov    edx,DWORD PTR [rax+0xf4]
  40954a:	mov    rax,QWORD PTR [rbp-0x8]
  40954e:	mov    eax,DWORD PTR [rax+0xf0]
  409554:	sub    edx,eax
  409556:	mov    eax,edx
  409558:	cdqe   
  40955a:	pop    rbp
  40955b:	ret    

000000000040955c <flatcc_builder_get_buffer_start@@Base>:
  40955c:	push   rbp
  40955d:	mov    rbp,rsp
  409560:	mov    QWORD PTR [rbp-0x8],rdi
  409564:	mov    rax,QWORD PTR [rbp-0x8]
  409568:	mov    eax,DWORD PTR [rax+0xf0]
  40956e:	pop    rbp
  40956f:	ret    

0000000000409570 <flatcc_builder_get_buffer_end@@Base>:
  409570:	push   rbp
  409571:	mov    rbp,rsp
  409574:	mov    QWORD PTR [rbp-0x8],rdi
  409578:	mov    rax,QWORD PTR [rbp-0x8]
  40957c:	mov    eax,DWORD PTR [rax+0xf4]
  409582:	pop    rbp
  409583:	ret    

0000000000409584 <flatcc_builder_set_vtable_cache_limit@@Base>:
  409584:	push   rbp
  409585:	mov    rbp,rsp
  409588:	mov    QWORD PTR [rbp-0x8],rdi
  40958c:	mov    QWORD PTR [rbp-0x10],rsi
  409590:	mov    rax,QWORD PTR [rbp-0x8]
  409594:	mov    rdx,QWORD PTR [rbp-0x10]
  409598:	mov    QWORD PTR [rax+0x118],rdx
  40959f:	nop
  4095a0:	pop    rbp
  4095a1:	ret    

00000000004095a2 <flatcc_builder_set_identifier@@Base>:
  4095a2:	push   rbp
  4095a3:	mov    rbp,rsp
  4095a6:	mov    QWORD PTR [rbp-0x8],rdi
  4095aa:	mov    QWORD PTR [rbp-0x10],rsi
  4095ae:	cmp    QWORD PTR [rbp-0x10],0x0
  4095b3:	je     4095bb <flatcc_builder_set_identifier@@Base+0x19>
  4095b5:	mov    rax,QWORD PTR [rbp-0x10]
  4095b9:	jmp    4095c2 <flatcc_builder_set_identifier@@Base+0x20>
  4095bb:	mov    rax,0x40b4e0
  4095c2:	mov    rdx,QWORD PTR [rbp-0x8]
  4095c6:	add    rdx,0x110
  4095cd:	mov    eax,DWORD PTR [rax]
  4095cf:	mov    DWORD PTR [rdx],eax
  4095d1:	nop
  4095d2:	pop    rbp
  4095d3:	ret    

00000000004095d4 <flatcc_builder_get_type@@Base>:
  4095d4:	push   rbp
  4095d5:	mov    rbp,rsp
  4095d8:	mov    QWORD PTR [rbp-0x8],rdi
  4095dc:	mov    rax,QWORD PTR [rbp-0x8]
  4095e0:	mov    rax,QWORD PTR [rax+0x30]
  4095e4:	test   rax,rax
  4095e7:	je     4095fa <flatcc_builder_get_type@@Base+0x26>
  4095e9:	mov    rax,QWORD PTR [rbp-0x8]
  4095ed:	mov    rax,QWORD PTR [rax+0x30]
  4095f1:	movzx  eax,WORD PTR [rax+0xe]
  4095f5:	movzx  eax,ax
  4095f8:	jmp    4095ff <flatcc_builder_get_type@@Base+0x2b>
  4095fa:	mov    eax,0x0
  4095ff:	pop    rbp
  409600:	ret    

0000000000409601 <flatcc_builder_get_type_at@@Base>:
  409601:	push   rbp
  409602:	mov    rbp,rsp
  409605:	mov    QWORD PTR [rbp-0x8],rdi
  409609:	mov    DWORD PTR [rbp-0xc],esi
  40960c:	cmp    DWORD PTR [rbp-0xc],0x0
  409610:	jle    409621 <flatcc_builder_get_type_at@@Base+0x20>
  409612:	mov    rax,QWORD PTR [rbp-0x8]
  409616:	mov    eax,DWORD PTR [rax+0x104]
  40961c:	cmp    eax,DWORD PTR [rbp-0xc]
  40961f:	jge    409628 <flatcc_builder_get_type_at@@Base+0x27>
  409621:	mov    eax,0x0
  409626:	jmp    40965c <flatcc_builder_get_type_at@@Base+0x5b>
  409628:	mov    rax,QWORD PTR [rbp-0x8]
  40962c:	mov    rcx,QWORD PTR [rax+0x30]
  409630:	mov    rax,QWORD PTR [rbp-0x8]
  409634:	mov    eax,DWORD PTR [rax+0x104]
  40963a:	mov    edx,DWORD PTR [rbp-0xc]
  40963d:	sub    edx,eax
  40963f:	mov    eax,edx
  409641:	movsxd rdx,eax
  409644:	mov    rax,rdx
  409647:	shl    rax,0x3
  40964b:	add    rax,rdx
  40964e:	shl    rax,0x2
  409652:	add    rax,rcx
  409655:	movzx  eax,WORD PTR [rax+0xe]
  409659:	movzx  eax,ax
  40965c:	pop    rbp
  40965d:	ret    

000000000040965e <flatcc_builder_get_direct_buffer@@Base>:
  40965e:	push   rbp
  40965f:	mov    rbp,rsp
  409662:	sub    rsp,0x10
  409666:	mov    QWORD PTR [rbp-0x8],rdi
  40966a:	mov    QWORD PTR [rbp-0x10],rsi
  40966e:	mov    rax,QWORD PTR [rbp-0x8]
  409672:	mov    eax,DWORD PTR [rax+0x128]
  409678:	test   eax,eax
  40967a:	je     409698 <flatcc_builder_get_direct_buffer@@Base+0x3a>
  40967c:	mov    rax,QWORD PTR [rbp-0x8]
  409680:	lea    rdx,[rax+0x130]
  409687:	mov    rax,QWORD PTR [rbp-0x10]
  40968b:	mov    rsi,rax
  40968e:	mov    rdi,rdx
  409691:	call   4043f4 <main@@Base+0xe9>
  409696:	jmp    4096af <flatcc_builder_get_direct_buffer@@Base+0x51>
  409698:	cmp    QWORD PTR [rbp-0x10],0x0
  40969d:	je     4096aa <flatcc_builder_get_direct_buffer@@Base+0x4c>
  40969f:	mov    rax,QWORD PTR [rbp-0x10]
  4096a3:	mov    QWORD PTR [rax],0x0
  4096aa:	mov    eax,0x0
  4096af:	leave  
  4096b0:	ret    

00000000004096b1 <flatcc_builder_copy_buffer@@Base>:
  4096b1:	push   rbp
  4096b2:	mov    rbp,rsp
  4096b5:	sub    rsp,0x20
  4096b9:	mov    QWORD PTR [rbp-0x8],rdi
  4096bd:	mov    QWORD PTR [rbp-0x10],rsi
  4096c1:	mov    QWORD PTR [rbp-0x18],rdx
  4096c5:	mov    rax,QWORD PTR [rbp-0x8]
  4096c9:	mov    eax,DWORD PTR [rax+0x128]
  4096cf:	test   eax,eax
  4096d1:	jne    4096da <flatcc_builder_copy_buffer@@Base+0x29>
  4096d3:	mov    eax,0x0
  4096d8:	jmp    409726 <flatcc_builder_copy_buffer@@Base+0x75>
  4096da:	mov    rax,QWORD PTR [rbp-0x8]
  4096de:	lea    rcx,[rax+0x130]
  4096e5:	mov    rdx,QWORD PTR [rbp-0x18]
  4096e9:	mov    rax,QWORD PTR [rbp-0x10]
  4096ed:	mov    rsi,rax
  4096f0:	mov    rdi,rcx
  4096f3:	call   40a323 <flatcc_emitter_copy_buffer@@Base>
  4096f8:	mov    QWORD PTR [rbp-0x10],rax
  4096fc:	cmp    QWORD PTR [rbp-0x10],0x0
  409701:	jne    409722 <flatcc_builder_copy_buffer@@Base+0x71>
  409703:	lea    rcx,[rip+0x2ab6]        # 40c1c0 <flatcc_builder_padding_base@@Base+0xce0>
  40970a:	mov    edx,0x786
  40970f:	lea    rsi,[rip+0x1fca]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  409716:	lea    rdi,[rip+0x23ff]        # 40bb1c <flatcc_builder_padding_base@@Base+0x63c>
  40971d:	call   403090 <__assert_fail@plt>
  409722:	mov    rax,QWORD PTR [rbp-0x10]
  409726:	leave  
  409727:	ret    

0000000000409728 <flatcc_builder_finalize_buffer@@Base>:
  409728:	push   rbp
  409729:	mov    rbp,rsp
  40972c:	sub    rsp,0x20
  409730:	mov    QWORD PTR [rbp-0x18],rdi
  409734:	mov    QWORD PTR [rbp-0x20],rsi
  409738:	mov    rax,QWORD PTR [rbp-0x18]
  40973c:	mov    rdi,rax
  40973f:	call   409538 <flatcc_builder_get_buffer_size@@Base>
  409744:	mov    QWORD PTR [rbp-0x10],rax
  409748:	cmp    QWORD PTR [rbp-0x20],0x0
  40974d:	je     40975a <flatcc_builder_finalize_buffer@@Base+0x32>
  40974f:	mov    rax,QWORD PTR [rbp-0x20]
  409753:	mov    rdx,QWORD PTR [rbp-0x10]
  409757:	mov    QWORD PTR [rax],rdx
  40975a:	mov    rax,QWORD PTR [rbp-0x10]
  40975e:	mov    rdi,rax
  409761:	call   403100 <malloc@plt>
  409766:	mov    QWORD PTR [rbp-0x8],rax
  40976a:	cmp    QWORD PTR [rbp-0x8],0x0
  40976f:	jne    409790 <flatcc_builder_finalize_buffer@@Base+0x68>
  409771:	lea    rcx,[rip+0x2a68]        # 40c1e0 <flatcc_builder_padding_base@@Base+0xd00>
  409778:	mov    edx,0x798
  40977d:	lea    rsi,[rip+0x1f5c]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  409784:	lea    rdi,[rip+0x1fb5]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  40978b:	call   403090 <__assert_fail@plt>
  409790:	mov    rdx,QWORD PTR [rbp-0x10]
  409794:	mov    rcx,QWORD PTR [rbp-0x8]
  409798:	mov    rax,QWORD PTR [rbp-0x18]
  40979c:	mov    rsi,rcx
  40979f:	mov    rdi,rax
  4097a2:	call   4096b1 <flatcc_builder_copy_buffer@@Base>
  4097a7:	test   rax,rax
  4097aa:	jne    4097cb <flatcc_builder_finalize_buffer@@Base+0xa3>
  4097ac:	lea    rcx,[rip+0x2a2d]        # 40c1e0 <flatcc_builder_padding_base@@Base+0xd00>
  4097b3:	mov    edx,0x79c
  4097b8:	lea    rsi,[rip+0x1f21]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4097bf:	lea    rdi,[rip+0x1f7a]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  4097c6:	call   403090 <__assert_fail@plt>
  4097cb:	cmp    QWORD PTR [rbp-0x8],0x0
  4097d0:	jne    4097e4 <flatcc_builder_finalize_buffer@@Base+0xbc>
  4097d2:	cmp    QWORD PTR [rbp-0x20],0x0
  4097d7:	je     4097e4 <flatcc_builder_finalize_buffer@@Base+0xbc>
  4097d9:	mov    rax,QWORD PTR [rbp-0x20]
  4097dd:	mov    QWORD PTR [rax],0x0
  4097e4:	mov    rax,QWORD PTR [rbp-0x8]
  4097e8:	leave  
  4097e9:	ret    

00000000004097ea <flatcc_builder_finalize_aligned_buffer@@Base>:
  4097ea:	push   rbp
  4097eb:	mov    rbp,rsp
  4097ee:	sub    rsp,0x30
  4097f2:	mov    QWORD PTR [rbp-0x28],rdi
  4097f6:	mov    QWORD PTR [rbp-0x30],rsi
  4097fa:	mov    rax,QWORD PTR [rbp-0x28]
  4097fe:	mov    rdi,rax
  409801:	call   409538 <flatcc_builder_get_buffer_size@@Base>
  409806:	mov    QWORD PTR [rbp-0x10],rax
  40980a:	cmp    QWORD PTR [rbp-0x30],0x0
  40980f:	je     40981c <flatcc_builder_finalize_aligned_buffer@@Base+0x32>
  409811:	mov    rax,QWORD PTR [rbp-0x30]
  409815:	mov    rdx,QWORD PTR [rbp-0x10]
  409819:	mov    QWORD PTR [rax],rdx
  40981c:	mov    rax,QWORD PTR [rbp-0x28]
  409820:	mov    rdi,rax
  409823:	call   409486 <flatcc_builder_get_buffer_alignment@@Base>
  409828:	movzx  eax,ax
  40982b:	mov    QWORD PTR [rbp-0x8],rax
  40982f:	mov    rdx,QWORD PTR [rbp-0x10]
  409833:	mov    rax,QWORD PTR [rbp-0x8]
  409837:	add    rax,rdx
  40983a:	lea    rdx,[rax-0x1]
  40983e:	mov    rax,QWORD PTR [rbp-0x8]
  409842:	neg    rax
  409845:	and    rax,rdx
  409848:	mov    QWORD PTR [rbp-0x10],rax
  40984c:	mov    rdx,QWORD PTR [rbp-0x10]
  409850:	mov    rax,QWORD PTR [rbp-0x8]
  409854:	mov    rsi,rdx
  409857:	mov    rdi,rax
  40985a:	call   404340 <main@@Base+0x35>
  40985f:	mov    QWORD PTR [rbp-0x18],rax
  409863:	cmp    QWORD PTR [rbp-0x18],0x0
  409868:	je     40989c <flatcc_builder_finalize_aligned_buffer@@Base+0xb2>
  40986a:	mov    rdx,QWORD PTR [rbp-0x10]
  40986e:	mov    rcx,QWORD PTR [rbp-0x18]
  409872:	mov    rax,QWORD PTR [rbp-0x28]
  409876:	mov    rsi,rcx
  409879:	mov    rdi,rax
  40987c:	call   4096b1 <flatcc_builder_copy_buffer@@Base>
  409881:	test   rax,rax
  409884:	jne    40989d <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  409886:	mov    rax,QWORD PTR [rbp-0x18]
  40988a:	mov    rdi,rax
  40988d:	call   403030 <free@plt>
  409892:	mov    QWORD PTR [rbp-0x18],0x0
  40989a:	jmp    40989d <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  40989c:	nop
  40989d:	cmp    QWORD PTR [rbp-0x18],0x0
  4098a2:	jne    4098b6 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  4098a4:	cmp    QWORD PTR [rbp-0x30],0x0
  4098a9:	je     4098b6 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  4098ab:	mov    rax,QWORD PTR [rbp-0x30]
  4098af:	mov    QWORD PTR [rax],0x0
  4098b6:	mov    rax,QWORD PTR [rbp-0x18]
  4098ba:	leave  
  4098bb:	ret    

00000000004098bc <flatcc_builder_aligned_alloc@@Base>:
  4098bc:	push   rbp
  4098bd:	mov    rbp,rsp
  4098c0:	sub    rsp,0x10
  4098c4:	mov    QWORD PTR [rbp-0x8],rdi
  4098c8:	mov    QWORD PTR [rbp-0x10],rsi
  4098cc:	mov    rdx,QWORD PTR [rbp-0x10]
  4098d0:	mov    rax,QWORD PTR [rbp-0x8]
  4098d4:	mov    rsi,rdx
  4098d7:	mov    rdi,rax
  4098da:	call   404340 <main@@Base+0x35>
  4098df:	leave  
  4098e0:	ret    

00000000004098e1 <flatcc_builder_aligned_free@@Base>:
  4098e1:	push   rbp
  4098e2:	mov    rbp,rsp
  4098e5:	sub    rsp,0x10
  4098e9:	mov    QWORD PTR [rbp-0x8],rdi
  4098ed:	mov    rax,QWORD PTR [rbp-0x8]
  4098f1:	mov    rdi,rax
  4098f4:	call   403030 <free@plt>
  4098f9:	nop
  4098fa:	leave  
  4098fb:	ret    

00000000004098fc <flatcc_builder_get_emit_context@@Base>:
  4098fc:	push   rbp
  4098fd:	mov    rbp,rsp
  409900:	mov    QWORD PTR [rbp-0x8],rdi
  409904:	mov    rax,QWORD PTR [rbp-0x8]
  409908:	mov    rax,QWORD PTR [rax+0x38]
  40990c:	pop    rbp
  40990d:	ret    
  40990e:	push   rbp
  40990f:	mov    rbp,rsp
  409912:	sub    rsp,0x20
  409916:	mov    QWORD PTR [rbp-0x18],rdi
  40991a:	mov    QWORD PTR [rbp-0x8],0x0
  409922:	mov    rax,QWORD PTR [rbp-0x18]
  409926:	mov    rax,QWORD PTR [rax]
  409929:	test   rax,rax
  40992c:	je     40998a <flatcc_builder_get_emit_context@@Base+0x8e>
  40992e:	mov    rax,QWORD PTR [rbp-0x18]
  409932:	mov    rax,QWORD PTR [rax]
  409935:	mov    rdx,QWORD PTR [rax+0xb88]
  40993c:	mov    rax,QWORD PTR [rbp-0x18]
  409940:	mov    rax,QWORD PTR [rax+0x8]
  409944:	cmp    rdx,rax
  409947:	je     40998a <flatcc_builder_get_emit_context@@Base+0x8e>
  409949:	mov    rax,QWORD PTR [rbp-0x18]
  40994d:	mov    rax,QWORD PTR [rax]
  409950:	mov    rax,QWORD PTR [rax+0xb88]
  409957:	mov    rdx,QWORD PTR [rbp-0x18]
  40995b:	mov    rdx,QWORD PTR [rdx]
  40995e:	mov    edx,DWORD PTR [rdx+0xb90]
  409964:	sub    edx,0xb80
  40996a:	mov    DWORD PTR [rax+0xb90],edx
  409970:	mov    rax,QWORD PTR [rbp-0x18]
  409974:	mov    rax,QWORD PTR [rax]
  409977:	mov    rdx,QWORD PTR [rax+0xb88]
  40997e:	mov    rax,QWORD PTR [rbp-0x18]
  409982:	mov    QWORD PTR [rax],rdx
  409985:	jmp    409ac2 <flatcc_builder_get_emit_context@@Base+0x1c6>
  40998a:	mov    edi,0xb98
  40998f:	call   403100 <malloc@plt>
  409994:	mov    QWORD PTR [rbp-0x8],rax
  409998:	cmp    QWORD PTR [rbp-0x8],0x0
  40999d:	jne    4099a9 <flatcc_builder_get_emit_context@@Base+0xad>
  40999f:	mov    eax,0xffffffff
  4099a4:	jmp    409b10 <flatcc_builder_get_emit_context@@Base+0x214>
  4099a9:	mov    rax,QWORD PTR [rbp-0x18]
  4099ad:	mov    rax,QWORD PTR [rax+0x38]
  4099b1:	lea    rdx,[rax+0xb80]
  4099b8:	mov    rax,QWORD PTR [rbp-0x18]
  4099bc:	mov    QWORD PTR [rax+0x38],rdx
  4099c0:	mov    rax,QWORD PTR [rbp-0x18]
  4099c4:	mov    rax,QWORD PTR [rax]
  4099c7:	test   rax,rax
  4099ca:	je     409a26 <flatcc_builder_get_emit_context@@Base+0x12a>
  4099cc:	mov    rax,QWORD PTR [rbp-0x18]
  4099d0:	mov    rdx,QWORD PTR [rax+0x8]
  4099d4:	mov    rax,QWORD PTR [rbp-0x8]
  4099d8:	mov    QWORD PTR [rax+0xb88],rdx
  4099df:	mov    rax,QWORD PTR [rbp-0x18]
  4099e3:	mov    rdx,QWORD PTR [rax]
  4099e6:	mov    rax,QWORD PTR [rbp-0x8]
  4099ea:	mov    QWORD PTR [rax+0xb80],rdx
  4099f1:	mov    rax,QWORD PTR [rbp-0x18]
  4099f5:	mov    rax,QWORD PTR [rax]
  4099f8:	mov    rdx,QWORD PTR [rbp-0x8]
  4099fc:	mov    QWORD PTR [rax+0xb88],rdx
  409a03:	mov    rax,QWORD PTR [rbp-0x18]
  409a07:	mov    rax,QWORD PTR [rax+0x8]
  409a0b:	mov    rdx,QWORD PTR [rbp-0x8]
  409a0f:	mov    QWORD PTR [rax+0xb80],rdx
  409a16:	mov    rax,QWORD PTR [rbp-0x18]
  409a1a:	mov    rdx,QWORD PTR [rbp-0x8]
  409a1e:	mov    QWORD PTR [rax],rdx
  409a21:	jmp    409ac2 <flatcc_builder_get_emit_context@@Base+0x1c6>
  409a26:	mov    rax,QWORD PTR [rbp-0x18]
  409a2a:	mov    rdx,QWORD PTR [rbp-0x8]
  409a2e:	mov    QWORD PTR [rax],rdx
  409a31:	mov    rax,QWORD PTR [rbp-0x18]
  409a35:	mov    rdx,QWORD PTR [rbp-0x8]
  409a39:	mov    QWORD PTR [rax+0x8],rdx
  409a3d:	mov    rax,QWORD PTR [rbp-0x8]
  409a41:	mov    rdx,QWORD PTR [rbp-0x8]
  409a45:	mov    QWORD PTR [rax+0xb80],rdx
  409a4c:	mov    rax,QWORD PTR [rbp-0x8]
  409a50:	mov    rdx,QWORD PTR [rbp-0x8]
  409a54:	mov    QWORD PTR [rax+0xb88],rdx
  409a5b:	mov    rax,QWORD PTR [rbp-0x18]
  409a5f:	mov    rax,QWORD PTR [rax]
  409a62:	lea    rdx,[rax+0x5c0]
  409a69:	mov    rax,QWORD PTR [rbp-0x18]
  409a6d:	mov    QWORD PTR [rax+0x10],rdx
  409a71:	mov    rax,QWORD PTR [rbp-0x18]
  409a75:	mov    rdx,QWORD PTR [rax+0x10]
  409a79:	mov    rax,QWORD PTR [rbp-0x18]
  409a7d:	mov    QWORD PTR [rax+0x20],rdx
  409a81:	mov    rax,QWORD PTR [rbp-0x18]
  409a85:	mov    QWORD PTR [rax+0x18],0x5c0
  409a8d:	mov    rax,QWORD PTR [rbp-0x18]
  409a91:	mov    rax,QWORD PTR [rax+0x18]
  409a95:	mov    edx,0xb80
  409a9a:	sub    rdx,rax
  409a9d:	mov    rax,QWORD PTR [rbp-0x18]
  409aa1:	mov    QWORD PTR [rax+0x28],rdx
  409aa5:	mov    rax,QWORD PTR [rbp-0x18]
  409aa9:	mov    rax,QWORD PTR [rax+0x18]
  409aad:	neg    eax
  409aaf:	mov    edx,eax
  409ab1:	mov    rax,QWORD PTR [rbp-0x8]
  409ab5:	mov    DWORD PTR [rax+0xb90],edx
  409abb:	mov    eax,0x0
  409ac0:	jmp    409b10 <flatcc_builder_get_emit_context@@Base+0x214>
  409ac2:	mov    rax,QWORD PTR [rbp-0x18]
  409ac6:	mov    rax,QWORD PTR [rax]
  409ac9:	lea    rdx,[rax+0xb80]
  409ad0:	mov    rax,QWORD PTR [rbp-0x18]
  409ad4:	mov    QWORD PTR [rax+0x10],rdx
  409ad8:	mov    rax,QWORD PTR [rbp-0x18]
  409adc:	mov    QWORD PTR [rax+0x18],0xb80
  409ae4:	mov    rax,QWORD PTR [rbp-0x18]
  409ae8:	mov    rax,QWORD PTR [rax]
  409aeb:	mov    rdx,QWORD PTR [rbp-0x18]
  409aef:	mov    rdx,QWORD PTR [rdx]
  409af2:	mov    rdx,QWORD PTR [rdx+0xb80]
  409af9:	mov    edx,DWORD PTR [rdx+0xb90]
  409aff:	sub    edx,0xb80
  409b05:	mov    DWORD PTR [rax+0xb90],edx
  409b0b:	mov    eax,0x0
  409b10:	leave  
  409b11:	ret    
  409b12:	push   rbp
  409b13:	mov    rbp,rsp
  409b16:	sub    rsp,0x20
  409b1a:	mov    QWORD PTR [rbp-0x18],rdi
  409b1e:	mov    QWORD PTR [rbp-0x8],0x0
  409b26:	mov    rax,QWORD PTR [rbp-0x18]
  409b2a:	mov    rax,QWORD PTR [rax+0x8]
  409b2e:	test   rax,rax
  409b31:	je     409b6a <flatcc_builder_get_emit_context@@Base+0x26e>
  409b33:	mov    rax,QWORD PTR [rbp-0x18]
  409b37:	mov    rax,QWORD PTR [rax+0x8]
  409b3b:	mov    rdx,QWORD PTR [rax+0xb80]
  409b42:	mov    rax,QWORD PTR [rbp-0x18]
  409b46:	mov    rax,QWORD PTR [rax]
  409b49:	cmp    rdx,rax
  409b4c:	je     409b6a <flatcc_builder_get_emit_context@@Base+0x26e>
  409b4e:	mov    rax,QWORD PTR [rbp-0x18]
  409b52:	mov    rax,QWORD PTR [rax+0x8]
  409b56:	mov    rdx,QWORD PTR [rax+0xb80]
  409b5d:	mov    rax,QWORD PTR [rbp-0x18]
  409b61:	mov    QWORD PTR [rax+0x8],rdx
  409b65:	jmp    409ca4 <flatcc_builder_get_emit_context@@Base+0x3a8>
  409b6a:	mov    edi,0xb98
  409b6f:	call   403100 <malloc@plt>
  409b74:	mov    QWORD PTR [rbp-0x8],rax
  409b78:	cmp    QWORD PTR [rbp-0x8],0x0
  409b7d:	jne    409b89 <flatcc_builder_get_emit_context@@Base+0x28d>
  409b7f:	mov    eax,0xffffffff
  409b84:	jmp    409cf1 <flatcc_builder_get_emit_context@@Base+0x3f5>
  409b89:	mov    rax,QWORD PTR [rbp-0x18]
  409b8d:	mov    rax,QWORD PTR [rax+0x38]
  409b91:	lea    rdx,[rax+0xb80]
  409b98:	mov    rax,QWORD PTR [rbp-0x18]
  409b9c:	mov    QWORD PTR [rax+0x38],rdx
  409ba0:	mov    rax,QWORD PTR [rbp-0x18]
  409ba4:	mov    rax,QWORD PTR [rax+0x8]
  409ba8:	test   rax,rax
  409bab:	je     409c08 <flatcc_builder_get_emit_context@@Base+0x30c>
  409bad:	mov    rax,QWORD PTR [rbp-0x18]
  409bb1:	mov    rdx,QWORD PTR [rax+0x8]
  409bb5:	mov    rax,QWORD PTR [rbp-0x8]
  409bb9:	mov    QWORD PTR [rax+0xb88],rdx
  409bc0:	mov    rax,QWORD PTR [rbp-0x18]
  409bc4:	mov    rdx,QWORD PTR [rax]
  409bc7:	mov    rax,QWORD PTR [rbp-0x8]
  409bcb:	mov    QWORD PTR [rax+0xb80],rdx
  409bd2:	mov    rax,QWORD PTR [rbp-0x18]
  409bd6:	mov    rax,QWORD PTR [rax]
  409bd9:	mov    rdx,QWORD PTR [rbp-0x8]
  409bdd:	mov    QWORD PTR [rax+0xb88],rdx
  409be4:	mov    rax,QWORD PTR [rbp-0x18]
  409be8:	mov    rax,QWORD PTR [rax+0x8]
  409bec:	mov    rdx,QWORD PTR [rbp-0x8]
  409bf0:	mov    QWORD PTR [rax+0xb80],rdx
  409bf7:	mov    rax,QWORD PTR [rbp-0x18]
  409bfb:	mov    rdx,QWORD PTR [rbp-0x8]
  409bff:	mov    QWORD PTR [rax+0x8],rdx
  409c03:	jmp    409ca4 <flatcc_builder_get_emit_context@@Base+0x3a8>
  409c08:	mov    rax,QWORD PTR [rbp-0x18]
  409c0c:	mov    rdx,QWORD PTR [rbp-0x8]
  409c10:	mov    QWORD PTR [rax],rdx
  409c13:	mov    rax,QWORD PTR [rbp-0x18]
  409c17:	mov    rdx,QWORD PTR [rbp-0x8]
  409c1b:	mov    QWORD PTR [rax+0x8],rdx
  409c1f:	mov    rax,QWORD PTR [rbp-0x8]
  409c23:	mov    rdx,QWORD PTR [rbp-0x8]
  409c27:	mov    QWORD PTR [rax+0xb80],rdx
  409c2e:	mov    rax,QWORD PTR [rbp-0x8]
  409c32:	mov    rdx,QWORD PTR [rbp-0x8]
  409c36:	mov    QWORD PTR [rax+0xb88],rdx
  409c3d:	mov    rax,QWORD PTR [rbp-0x18]
  409c41:	mov    rax,QWORD PTR [rax]
  409c44:	lea    rdx,[rax+0x5c0]
  409c4b:	mov    rax,QWORD PTR [rbp-0x18]
  409c4f:	mov    QWORD PTR [rax+0x10],rdx
  409c53:	mov    rax,QWORD PTR [rbp-0x18]
  409c57:	mov    rdx,QWORD PTR [rax+0x10]
  409c5b:	mov    rax,QWORD PTR [rbp-0x18]
  409c5f:	mov    QWORD PTR [rax+0x20],rdx
  409c63:	mov    rax,QWORD PTR [rbp-0x18]
  409c67:	mov    QWORD PTR [rax+0x18],0x5c0
  409c6f:	mov    rax,QWORD PTR [rbp-0x18]
  409c73:	mov    rax,QWORD PTR [rax+0x18]
  409c77:	mov    edx,0xb80
  409c7c:	sub    rdx,rax
  409c7f:	mov    rax,QWORD PTR [rbp-0x18]
  409c83:	mov    QWORD PTR [rax+0x28],rdx
  409c87:	mov    rax,QWORD PTR [rbp-0x18]
  409c8b:	mov    rax,QWORD PTR [rax+0x18]
  409c8f:	neg    eax
  409c91:	mov    edx,eax
  409c93:	mov    rax,QWORD PTR [rbp-0x8]
  409c97:	mov    DWORD PTR [rax+0xb90],edx
  409c9d:	mov    eax,0x0
  409ca2:	jmp    409cf1 <flatcc_builder_get_emit_context@@Base+0x3f5>
  409ca4:	mov    rax,QWORD PTR [rbp-0x18]
  409ca8:	mov    rax,QWORD PTR [rax+0x8]
  409cac:	mov    rdx,rax
  409caf:	mov    rax,QWORD PTR [rbp-0x18]
  409cb3:	mov    QWORD PTR [rax+0x20],rdx
  409cb7:	mov    rax,QWORD PTR [rbp-0x18]
  409cbb:	mov    QWORD PTR [rax+0x28],0xb80
  409cc3:	mov    rax,QWORD PTR [rbp-0x18]
  409cc7:	mov    rax,QWORD PTR [rax+0x8]
  409ccb:	mov    rdx,QWORD PTR [rbp-0x18]
  409ccf:	mov    rdx,QWORD PTR [rdx+0x8]
  409cd3:	mov    rdx,QWORD PTR [rdx+0xb88]
  409cda:	mov    edx,DWORD PTR [rdx+0xb90]
  409ce0:	add    edx,0xb80
  409ce6:	mov    DWORD PTR [rax+0xb90],edx
  409cec:	mov    eax,0x0
  409cf1:	leave  
  409cf2:	ret    
  409cf3:	push   rbp
  409cf4:	mov    rbp,rsp
  409cf7:	sub    rsp,0x30
  409cfb:	mov    QWORD PTR [rbp-0x18],rdi
  409cff:	mov    QWORD PTR [rbp-0x20],rsi
  409d03:	mov    QWORD PTR [rbp-0x28],rdx
  409d07:	mov    rax,QWORD PTR [rbp-0x28]
  409d0b:	add    QWORD PTR [rbp-0x20],rax
  409d0f:	jmp    409db3 <flatcc_builder_get_emit_context@@Base+0x4b7>
  409d14:	mov    rax,QWORD PTR [rbp-0x28]
  409d18:	mov    QWORD PTR [rbp-0x8],rax
  409d1c:	mov    rax,QWORD PTR [rbp-0x18]
  409d20:	mov    rax,QWORD PTR [rax+0x18]
  409d24:	cmp    rax,QWORD PTR [rbp-0x8]
  409d28:	jae    409d54 <flatcc_builder_get_emit_context@@Base+0x458>
  409d2a:	mov    rax,QWORD PTR [rbp-0x18]
  409d2e:	mov    rax,QWORD PTR [rax+0x18]
  409d32:	mov    QWORD PTR [rbp-0x8],rax
  409d36:	cmp    QWORD PTR [rbp-0x8],0x0
  409d3b:	jne    409d54 <flatcc_builder_get_emit_context@@Base+0x458>
  409d3d:	mov    rax,QWORD PTR [rbp-0x18]
  409d41:	mov    rdi,rax
  409d44:	call   40990e <flatcc_builder_get_emit_context@@Base+0x12>
  409d49:	test   eax,eax
  409d4b:	je     409db3 <flatcc_builder_get_emit_context@@Base+0x4b7>
  409d4d:	mov    eax,0xffffffff
  409d52:	jmp    409dc3 <flatcc_builder_get_emit_context@@Base+0x4c7>
  409d54:	mov    rax,QWORD PTR [rbp-0x18]
  409d58:	mov    rax,QWORD PTR [rax+0x10]
  409d5c:	mov    rdx,QWORD PTR [rbp-0x8]
  409d60:	neg    rdx
  409d63:	add    rdx,rax
  409d66:	mov    rax,QWORD PTR [rbp-0x18]
  409d6a:	mov    QWORD PTR [rax+0x10],rdx
  409d6e:	mov    rax,QWORD PTR [rbp-0x18]
  409d72:	mov    rax,QWORD PTR [rax+0x18]
  409d76:	sub    rax,QWORD PTR [rbp-0x8]
  409d7a:	mov    rdx,rax
  409d7d:	mov    rax,QWORD PTR [rbp-0x18]
  409d81:	mov    QWORD PTR [rax+0x18],rdx
  409d85:	mov    rax,QWORD PTR [rbp-0x8]
  409d89:	neg    rax
  409d8c:	add    QWORD PTR [rbp-0x20],rax
  409d90:	mov    rax,QWORD PTR [rbp-0x8]
  409d94:	sub    QWORD PTR [rbp-0x28],rax
  409d98:	mov    rax,QWORD PTR [rbp-0x18]
  409d9c:	mov    rax,QWORD PTR [rax+0x10]
  409da0:	mov    rdx,QWORD PTR [rbp-0x8]
  409da4:	mov    rcx,QWORD PTR [rbp-0x20]
  409da8:	mov    rsi,rcx
  409dab:	mov    rdi,rax
  409dae:	call   4030f0 <memcpy@plt>
  409db3:	cmp    QWORD PTR [rbp-0x28],0x0
  409db8:	jne    409d14 <flatcc_builder_get_emit_context@@Base+0x418>
  409dbe:	mov    eax,0x0
  409dc3:	leave  
  409dc4:	ret    
  409dc5:	push   rbp
  409dc6:	mov    rbp,rsp
  409dc9:	sub    rsp,0x30
  409dcd:	mov    QWORD PTR [rbp-0x18],rdi
  409dd1:	mov    QWORD PTR [rbp-0x20],rsi
  409dd5:	mov    QWORD PTR [rbp-0x28],rdx
  409dd9:	jmp    409e77 <flatcc_builder_get_emit_context@@Base+0x57b>
  409dde:	mov    rax,QWORD PTR [rbp-0x28]
  409de2:	mov    QWORD PTR [rbp-0x8],rax
  409de6:	mov    rax,QWORD PTR [rbp-0x18]
  409dea:	mov    rax,QWORD PTR [rax+0x28]
  409dee:	cmp    rax,QWORD PTR [rbp-0x8]
  409df2:	jae    409e1e <flatcc_builder_get_emit_context@@Base+0x522>
  409df4:	mov    rax,QWORD PTR [rbp-0x18]
  409df8:	mov    rax,QWORD PTR [rax+0x28]
  409dfc:	mov    QWORD PTR [rbp-0x8],rax
  409e00:	cmp    QWORD PTR [rbp-0x8],0x0
  409e05:	jne    409e1e <flatcc_builder_get_emit_context@@Base+0x522>
  409e07:	mov    rax,QWORD PTR [rbp-0x18]
  409e0b:	mov    rdi,rax
  409e0e:	call   409b12 <flatcc_builder_get_emit_context@@Base+0x216>
  409e13:	test   eax,eax
  409e15:	je     409e77 <flatcc_builder_get_emit_context@@Base+0x57b>
  409e17:	mov    eax,0xffffffff
  409e1c:	jmp    409e87 <flatcc_builder_get_emit_context@@Base+0x58b>
  409e1e:	mov    rax,QWORD PTR [rbp-0x18]
  409e22:	mov    rax,QWORD PTR [rax+0x20]
  409e26:	mov    rdx,QWORD PTR [rbp-0x8]
  409e2a:	mov    rcx,QWORD PTR [rbp-0x20]
  409e2e:	mov    rsi,rcx
  409e31:	mov    rdi,rax
  409e34:	call   4030f0 <memcpy@plt>
  409e39:	mov    rax,QWORD PTR [rbp-0x8]
  409e3d:	sub    QWORD PTR [rbp-0x28],rax
  409e41:	mov    rax,QWORD PTR [rbp-0x8]
  409e45:	add    QWORD PTR [rbp-0x20],rax
  409e49:	mov    rax,QWORD PTR [rbp-0x18]
  409e4d:	mov    rdx,QWORD PTR [rax+0x20]
  409e51:	mov    rax,QWORD PTR [rbp-0x8]
  409e55:	add    rdx,rax
  409e58:	mov    rax,QWORD PTR [rbp-0x18]
  409e5c:	mov    QWORD PTR [rax+0x20],rdx
  409e60:	mov    rax,QWORD PTR [rbp-0x18]
  409e64:	mov    rax,QWORD PTR [rax+0x28]
  409e68:	sub    rax,QWORD PTR [rbp-0x8]
  409e6c:	mov    rdx,rax
  409e6f:	mov    rax,QWORD PTR [rbp-0x18]
  409e73:	mov    QWORD PTR [rax+0x28],rdx
  409e77:	cmp    QWORD PTR [rbp-0x28],0x0
  409e7c:	jne    409dde <flatcc_builder_get_emit_context@@Base+0x4e2>
  409e82:	mov    eax,0x0
  409e87:	leave  
  409e88:	ret    

0000000000409e89 <flatcc_emitter_recycle_page@@Base>:
  409e89:	push   rbp
  409e8a:	mov    rbp,rsp
  409e8d:	mov    QWORD PTR [rbp-0x8],rdi
  409e91:	mov    QWORD PTR [rbp-0x10],rsi
  409e95:	mov    rax,QWORD PTR [rbp-0x8]
  409e99:	mov    rax,QWORD PTR [rax]
  409e9c:	cmp    rax,QWORD PTR [rbp-0x10]
  409ea0:	je     409eb0 <flatcc_emitter_recycle_page@@Base+0x27>
  409ea2:	mov    rax,QWORD PTR [rbp-0x8]
  409ea6:	mov    rax,QWORD PTR [rax+0x8]
  409eaa:	cmp    rax,QWORD PTR [rbp-0x10]
  409eae:	jne    409eba <flatcc_emitter_recycle_page@@Base+0x31>
  409eb0:	mov    eax,0xffffffff
  409eb5:	jmp    409f50 <flatcc_emitter_recycle_page@@Base+0xc7>
  409eba:	mov    rax,QWORD PTR [rbp-0x10]
  409ebe:	mov    rax,QWORD PTR [rax+0xb80]
  409ec5:	mov    rdx,QWORD PTR [rbp-0x10]
  409ec9:	mov    rdx,QWORD PTR [rdx+0xb88]
  409ed0:	mov    QWORD PTR [rax+0xb88],rdx
  409ed7:	mov    rax,QWORD PTR [rbp-0x10]
  409edb:	mov    rax,QWORD PTR [rax+0xb88]
  409ee2:	mov    rdx,QWORD PTR [rbp-0x10]
  409ee6:	mov    rdx,QWORD PTR [rdx+0xb80]
  409eed:	mov    QWORD PTR [rax+0xb80],rdx
  409ef4:	mov    rax,QWORD PTR [rbp-0x8]
  409ef8:	mov    rax,QWORD PTR [rax]
  409efb:	mov    rdx,QWORD PTR [rax+0xb88]
  409f02:	mov    rax,QWORD PTR [rbp-0x10]
  409f06:	mov    QWORD PTR [rax+0xb88],rdx
  409f0d:	mov    rax,QWORD PTR [rbp-0x8]
  409f11:	mov    rdx,QWORD PTR [rax]
  409f14:	mov    rax,QWORD PTR [rbp-0x10]
  409f18:	mov    QWORD PTR [rax+0xb80],rdx
  409f1f:	mov    rax,QWORD PTR [rbp-0x10]
  409f23:	mov    rax,QWORD PTR [rax+0xb88]
  409f2a:	mov    rdx,QWORD PTR [rbp-0x10]
  409f2e:	mov    QWORD PTR [rax+0xb80],rdx
  409f35:	mov    rax,QWORD PTR [rbp-0x10]
  409f39:	mov    rax,QWORD PTR [rax+0xb80]
  409f40:	mov    rdx,QWORD PTR [rbp-0x10]
  409f44:	mov    QWORD PTR [rax+0xb88],rdx
  409f4b:	mov    eax,0x0
  409f50:	pop    rbp
  409f51:	ret    

0000000000409f52 <flatcc_emitter_reset@@Base>:
  409f52:	push   rbp
  409f53:	mov    rbp,rsp
  409f56:	sub    rsp,0x20
  409f5a:	mov    QWORD PTR [rbp-0x18],rdi
  409f5e:	mov    rax,QWORD PTR [rbp-0x18]
  409f62:	mov    rax,QWORD PTR [rax]
  409f65:	mov    QWORD PTR [rbp-0x8],rax
  409f69:	mov    rax,QWORD PTR [rbp-0x18]
  409f6d:	mov    rax,QWORD PTR [rax]
  409f70:	test   rax,rax
  409f73:	je     40a0db <flatcc_emitter_reset@@Base+0x189>
  409f79:	mov    rax,QWORD PTR [rbp-0x18]
  409f7d:	mov    rdx,QWORD PTR [rax]
  409f80:	mov    rax,QWORD PTR [rbp-0x18]
  409f84:	mov    QWORD PTR [rax+0x8],rdx
  409f88:	mov    rax,QWORD PTR [rbp-0x18]
  409f8c:	mov    rax,QWORD PTR [rax]
  409f8f:	lea    rdx,[rax+0x5c0]
  409f96:	mov    rax,QWORD PTR [rbp-0x18]
  409f9a:	mov    QWORD PTR [rax+0x10],rdx
  409f9e:	mov    rax,QWORD PTR [rbp-0x18]
  409fa2:	mov    rdx,QWORD PTR [rax+0x10]
  409fa6:	mov    rax,QWORD PTR [rbp-0x18]
  409faa:	mov    QWORD PTR [rax+0x20],rdx
  409fae:	mov    rax,QWORD PTR [rbp-0x18]
  409fb2:	mov    QWORD PTR [rax+0x18],0x5c0
  409fba:	mov    rax,QWORD PTR [rbp-0x18]
  409fbe:	mov    QWORD PTR [rax+0x28],0x5c0
  409fc6:	mov    rax,QWORD PTR [rbp-0x18]
  409fca:	mov    rax,QWORD PTR [rax]
  409fcd:	mov    rdx,QWORD PTR [rbp-0x18]
  409fd1:	mov    rdx,QWORD PTR [rdx+0x18]
  409fd5:	neg    edx
  409fd7:	mov    DWORD PTR [rax+0xb90],edx
  409fdd:	mov    rax,QWORD PTR [rbp-0x18]
  409fe1:	mov    rax,QWORD PTR [rax+0x40]
  409fe5:	test   rax,rax
  409fe8:	jne    409ffa <flatcc_emitter_reset@@Base+0xa8>
  409fea:	mov    rax,QWORD PTR [rbp-0x18]
  409fee:	mov    rdx,QWORD PTR [rax+0x30]
  409ff2:	mov    rax,QWORD PTR [rbp-0x18]
  409ff6:	mov    QWORD PTR [rax+0x40],rdx
  409ffa:	mov    rax,QWORD PTR [rbp-0x18]
  409ffe:	mov    rdx,QWORD PTR [rax+0x40]
  40a002:	mov    rax,rdx
  40a005:	add    rax,rax
  40a008:	add    rax,rdx
  40a00b:	shr    rax,0x2
  40a00f:	mov    rdx,rax
  40a012:	mov    rax,QWORD PTR [rbp-0x18]
  40a016:	mov    rax,QWORD PTR [rax+0x30]
  40a01a:	shr    rax,0x2
  40a01e:	add    rdx,rax
  40a021:	mov    rax,QWORD PTR [rbp-0x18]
  40a025:	mov    QWORD PTR [rax+0x40],rdx
  40a029:	mov    rax,QWORD PTR [rbp-0x18]
  40a02d:	mov    QWORD PTR [rax+0x30],0x0
  40a035:	jmp    40a0a1 <flatcc_emitter_reset@@Base+0x14f>
  40a037:	mov    rax,QWORD PTR [rbp-0x18]
  40a03b:	mov    rax,QWORD PTR [rax+0x8]
  40a03f:	mov    rax,QWORD PTR [rax+0xb80]
  40a046:	mov    QWORD PTR [rbp-0x8],rax
  40a04a:	mov    rax,QWORD PTR [rbp-0x18]
  40a04e:	mov    rax,QWORD PTR [rax+0x8]
  40a052:	mov    rdx,QWORD PTR [rbp-0x8]
  40a056:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a05d:	mov    QWORD PTR [rax+0xb80],rdx
  40a064:	mov    rax,QWORD PTR [rbp-0x8]
  40a068:	mov    rax,QWORD PTR [rax+0xb80]
  40a06f:	mov    rdx,QWORD PTR [rbp-0x18]
  40a073:	mov    rdx,QWORD PTR [rdx+0x8]
  40a077:	mov    QWORD PTR [rax+0xb88],rdx
  40a07e:	mov    rax,QWORD PTR [rbp-0x8]
  40a082:	mov    rdi,rax
  40a085:	call   403030 <free@plt>
  40a08a:	mov    rax,QWORD PTR [rbp-0x18]
  40a08e:	mov    rax,QWORD PTR [rax+0x38]
  40a092:	lea    rdx,[rax-0xb80]
  40a099:	mov    rax,QWORD PTR [rbp-0x18]
  40a09d:	mov    QWORD PTR [rax+0x38],rdx
  40a0a1:	mov    rax,QWORD PTR [rbp-0x18]
  40a0a5:	mov    rax,QWORD PTR [rax+0x40]
  40a0a9:	lea    rdx,[rax+rax*1]
  40a0ad:	mov    rax,QWORD PTR [rbp-0x18]
  40a0b1:	mov    rax,QWORD PTR [rax+0x38]
  40a0b5:	cmp    rdx,rax
  40a0b8:	jae    40a0dc <flatcc_emitter_reset@@Base+0x18a>
  40a0ba:	mov    rax,QWORD PTR [rbp-0x18]
  40a0be:	mov    rax,QWORD PTR [rax+0x8]
  40a0c2:	mov    rdx,QWORD PTR [rax+0xb80]
  40a0c9:	mov    rax,QWORD PTR [rbp-0x18]
  40a0cd:	mov    rax,QWORD PTR [rax]
  40a0d0:	cmp    rdx,rax
  40a0d3:	jne    40a037 <flatcc_emitter_reset@@Base+0xe5>
  40a0d9:	jmp    40a0dc <flatcc_emitter_reset@@Base+0x18a>
  40a0db:	nop
  40a0dc:	leave  
  40a0dd:	ret    

000000000040a0de <flatcc_emitter_clear@@Base>:
  40a0de:	push   rbp
  40a0df:	mov    rbp,rsp
  40a0e2:	sub    rsp,0x20
  40a0e6:	mov    QWORD PTR [rbp-0x18],rdi
  40a0ea:	mov    rax,QWORD PTR [rbp-0x18]
  40a0ee:	mov    rax,QWORD PTR [rax]
  40a0f1:	mov    QWORD PTR [rbp-0x8],rax
  40a0f5:	cmp    QWORD PTR [rbp-0x8],0x0
  40a0fa:	je     40a16a <flatcc_emitter_clear@@Base+0x8c>
  40a0fc:	mov    rax,QWORD PTR [rbp-0x8]
  40a100:	mov    rax,QWORD PTR [rax+0xb88]
  40a107:	mov    QWORD PTR [rax+0xb80],0x0
  40a112:	jmp    40a136 <flatcc_emitter_clear@@Base+0x58>
  40a114:	mov    rax,QWORD PTR [rbp-0x8]
  40a118:	mov    rax,QWORD PTR [rax+0xb80]
  40a11f:	mov    QWORD PTR [rbp-0x8],rax
  40a123:	mov    rax,QWORD PTR [rbp-0x8]
  40a127:	mov    rax,QWORD PTR [rax+0xb88]
  40a12e:	mov    rdi,rax
  40a131:	call   403030 <free@plt>
  40a136:	mov    rax,QWORD PTR [rbp-0x8]
  40a13a:	mov    rax,QWORD PTR [rax+0xb80]
  40a141:	test   rax,rax
  40a144:	jne    40a114 <flatcc_emitter_clear@@Base+0x36>
  40a146:	mov    rax,QWORD PTR [rbp-0x8]
  40a14a:	mov    rdi,rax
  40a14d:	call   403030 <free@plt>
  40a152:	mov    rax,QWORD PTR [rbp-0x18]
  40a156:	mov    edx,0x48
  40a15b:	mov    esi,0x0
  40a160:	mov    rdi,rax
  40a163:	call   4030a0 <memset@plt>
  40a168:	jmp    40a16b <flatcc_emitter_clear@@Base+0x8d>
  40a16a:	nop
  40a16b:	leave  
  40a16c:	ret    

000000000040a16d <flatcc_emitter@@Base>:
  40a16d:	push   rbp
  40a16e:	mov    rbp,rsp
  40a171:	sub    rsp,0x30
  40a175:	mov    QWORD PTR [rbp-0x18],rdi
  40a179:	mov    QWORD PTR [rbp-0x20],rsi
  40a17d:	mov    DWORD PTR [rbp-0x24],edx
  40a180:	mov    DWORD PTR [rbp-0x28],ecx
  40a183:	mov    QWORD PTR [rbp-0x30],r8
  40a187:	mov    rax,QWORD PTR [rbp-0x18]
  40a18b:	mov    QWORD PTR [rbp-0x8],rax
  40a18f:	mov    rax,QWORD PTR [rbp-0x8]
  40a193:	mov    rdx,QWORD PTR [rax+0x30]
  40a197:	mov    rax,QWORD PTR [rbp-0x30]
  40a19b:	add    rdx,rax
  40a19e:	mov    rax,QWORD PTR [rbp-0x8]
  40a1a2:	mov    QWORD PTR [rax+0x30],rdx
  40a1a6:	cmp    DWORD PTR [rbp-0x28],0x0
  40a1aa:	jns    40a252 <flatcc_emitter@@Base+0xe5>
  40a1b0:	mov    rax,QWORD PTR [rbp-0x8]
  40a1b4:	mov    rax,QWORD PTR [rax+0x18]
  40a1b8:	cmp    rax,QWORD PTR [rbp-0x30]
  40a1bc:	jb     40a200 <flatcc_emitter@@Base+0x93>
  40a1be:	mov    rax,QWORD PTR [rbp-0x8]
  40a1c2:	mov    rax,QWORD PTR [rax+0x10]
  40a1c6:	mov    rdx,QWORD PTR [rbp-0x30]
  40a1ca:	neg    rdx
  40a1cd:	add    rdx,rax
  40a1d0:	mov    rax,QWORD PTR [rbp-0x8]
  40a1d4:	mov    QWORD PTR [rax+0x10],rdx
  40a1d8:	mov    rax,QWORD PTR [rbp-0x8]
  40a1dc:	mov    rax,QWORD PTR [rax+0x18]
  40a1e0:	sub    rax,QWORD PTR [rbp-0x30]
  40a1e4:	mov    rdx,rax
  40a1e7:	mov    rax,QWORD PTR [rbp-0x8]
  40a1eb:	mov    QWORD PTR [rax+0x18],rdx
  40a1ef:	mov    rax,QWORD PTR [rbp-0x8]
  40a1f3:	mov    rax,QWORD PTR [rax+0x10]
  40a1f7:	mov    QWORD PTR [rbp-0x10],rax
  40a1fb:	jmp    40a2de <flatcc_emitter@@Base+0x171>
  40a200:	mov    eax,DWORD PTR [rbp-0x24]
  40a203:	cdqe   
  40a205:	shl    rax,0x4
  40a209:	add    QWORD PTR [rbp-0x20],rax
  40a20d:	jmp    40a240 <flatcc_emitter@@Base+0xd3>
  40a20f:	sub    QWORD PTR [rbp-0x20],0x10
  40a214:	mov    rax,QWORD PTR [rbp-0x20]
  40a218:	mov    rdx,QWORD PTR [rax+0x8]
  40a21c:	mov    rax,QWORD PTR [rbp-0x20]
  40a220:	mov    rcx,QWORD PTR [rax]
  40a223:	mov    rax,QWORD PTR [rbp-0x8]
  40a227:	mov    rsi,rcx
  40a22a:	mov    rdi,rax
  40a22d:	call   409cf3 <flatcc_builder_get_emit_context@@Base+0x3f7>
  40a232:	test   eax,eax
  40a234:	je     40a240 <flatcc_emitter@@Base+0xd3>
  40a236:	mov    eax,0xffffffff
  40a23b:	jmp    40a321 <flatcc_emitter@@Base+0x1b4>
  40a240:	mov    eax,DWORD PTR [rbp-0x24]
  40a243:	lea    edx,[rax-0x1]
  40a246:	mov    DWORD PTR [rbp-0x24],edx
  40a249:	test   eax,eax
  40a24b:	jne    40a20f <flatcc_emitter@@Base+0xa2>
  40a24d:	jmp    40a2d7 <flatcc_emitter@@Base+0x16a>
  40a252:	mov    rax,QWORD PTR [rbp-0x8]
  40a256:	mov    rax,QWORD PTR [rax+0x28]
  40a25a:	cmp    rax,QWORD PTR [rbp-0x30]
  40a25e:	jb     40a2ca <flatcc_emitter@@Base+0x15d>
  40a260:	mov    rax,QWORD PTR [rbp-0x8]
  40a264:	mov    rax,QWORD PTR [rax+0x20]
  40a268:	mov    QWORD PTR [rbp-0x10],rax
  40a26c:	mov    rax,QWORD PTR [rbp-0x8]
  40a270:	mov    rdx,QWORD PTR [rax+0x20]
  40a274:	mov    rax,QWORD PTR [rbp-0x30]
  40a278:	add    rdx,rax
  40a27b:	mov    rax,QWORD PTR [rbp-0x8]
  40a27f:	mov    QWORD PTR [rax+0x20],rdx
  40a283:	mov    rax,QWORD PTR [rbp-0x8]
  40a287:	mov    rax,QWORD PTR [rax+0x28]
  40a28b:	sub    rax,QWORD PTR [rbp-0x30]
  40a28f:	mov    rdx,rax
  40a292:	mov    rax,QWORD PTR [rbp-0x8]
  40a296:	mov    QWORD PTR [rax+0x28],rdx
  40a29a:	jmp    40a2de <flatcc_emitter@@Base+0x171>
  40a29c:	mov    rax,QWORD PTR [rbp-0x20]
  40a2a0:	mov    rdx,QWORD PTR [rax+0x8]
  40a2a4:	mov    rax,QWORD PTR [rbp-0x20]
  40a2a8:	mov    rcx,QWORD PTR [rax]
  40a2ab:	mov    rax,QWORD PTR [rbp-0x8]
  40a2af:	mov    rsi,rcx
  40a2b2:	mov    rdi,rax
  40a2b5:	call   409dc5 <flatcc_builder_get_emit_context@@Base+0x4c9>
  40a2ba:	test   eax,eax
  40a2bc:	je     40a2c5 <flatcc_emitter@@Base+0x158>
  40a2be:	mov    eax,0xffffffff
  40a2c3:	jmp    40a321 <flatcc_emitter@@Base+0x1b4>
  40a2c5:	add    QWORD PTR [rbp-0x20],0x10
  40a2ca:	mov    eax,DWORD PTR [rbp-0x24]
  40a2cd:	lea    edx,[rax-0x1]
  40a2d0:	mov    DWORD PTR [rbp-0x24],edx
  40a2d3:	test   eax,eax
  40a2d5:	jne    40a29c <flatcc_emitter@@Base+0x12f>
  40a2d7:	mov    eax,0x0
  40a2dc:	jmp    40a321 <flatcc_emitter@@Base+0x1b4>
  40a2de:	jmp    40a30f <flatcc_emitter@@Base+0x1a2>
  40a2e0:	mov    rax,QWORD PTR [rbp-0x20]
  40a2e4:	mov    rdx,QWORD PTR [rax+0x8]
  40a2e8:	mov    rax,QWORD PTR [rbp-0x20]
  40a2ec:	mov    rcx,QWORD PTR [rax]
  40a2ef:	mov    rax,QWORD PTR [rbp-0x10]
  40a2f3:	mov    rsi,rcx
  40a2f6:	mov    rdi,rax
  40a2f9:	call   4030f0 <memcpy@plt>
  40a2fe:	mov    rax,QWORD PTR [rbp-0x20]
  40a302:	mov    rax,QWORD PTR [rax+0x8]
  40a306:	add    QWORD PTR [rbp-0x10],rax
  40a30a:	add    QWORD PTR [rbp-0x20],0x10
  40a30f:	mov    eax,DWORD PTR [rbp-0x24]
  40a312:	lea    edx,[rax-0x1]
  40a315:	mov    DWORD PTR [rbp-0x24],edx
  40a318:	test   eax,eax
  40a31a:	jne    40a2e0 <flatcc_emitter@@Base+0x173>
  40a31c:	mov    eax,0x0
  40a321:	leave  
  40a322:	ret    

000000000040a323 <flatcc_emitter_copy_buffer@@Base>:
  40a323:	push   rbp
  40a324:	mov    rbp,rsp
  40a327:	sub    rsp,0x30
  40a32b:	mov    QWORD PTR [rbp-0x18],rdi
  40a32f:	mov    QWORD PTR [rbp-0x20],rsi
  40a333:	mov    QWORD PTR [rbp-0x28],rdx
  40a337:	mov    rax,QWORD PTR [rbp-0x18]
  40a33b:	mov    rax,QWORD PTR [rax+0x30]
  40a33f:	cmp    rax,QWORD PTR [rbp-0x28]
  40a343:	jbe    40a34f <flatcc_emitter_copy_buffer@@Base+0x2c>
  40a345:	mov    eax,0x0
  40a34a:	jmp    40a453 <flatcc_emitter_copy_buffer@@Base+0x130>
  40a34f:	mov    rax,QWORD PTR [rbp-0x18]
  40a353:	mov    rax,QWORD PTR [rax]
  40a356:	test   rax,rax
  40a359:	jne    40a365 <flatcc_emitter_copy_buffer@@Base+0x42>
  40a35b:	mov    eax,0x0
  40a360:	jmp    40a453 <flatcc_emitter_copy_buffer@@Base+0x130>
  40a365:	mov    rax,QWORD PTR [rbp-0x18]
  40a369:	mov    rdx,QWORD PTR [rax]
  40a36c:	mov    rax,QWORD PTR [rbp-0x18]
  40a370:	mov    rax,QWORD PTR [rax+0x8]
  40a374:	cmp    rdx,rax
  40a377:	jne    40a3a1 <flatcc_emitter_copy_buffer@@Base+0x7e>
  40a379:	mov    rax,QWORD PTR [rbp-0x18]
  40a37d:	mov    rdx,QWORD PTR [rax+0x30]
  40a381:	mov    rax,QWORD PTR [rbp-0x18]
  40a385:	mov    rcx,QWORD PTR [rax+0x10]
  40a389:	mov    rax,QWORD PTR [rbp-0x20]
  40a38d:	mov    rsi,rcx
  40a390:	mov    rdi,rax
  40a393:	call   4030f0 <memcpy@plt>
  40a398:	mov    rax,QWORD PTR [rbp-0x20]
  40a39c:	jmp    40a453 <flatcc_emitter_copy_buffer@@Base+0x130>
  40a3a1:	mov    rax,QWORD PTR [rbp-0x18]
  40a3a5:	mov    rax,QWORD PTR [rax+0x18]
  40a3a9:	mov    edx,0xb80
  40a3ae:	sub    rdx,rax
  40a3b1:	mov    rax,rdx
  40a3b4:	mov    QWORD PTR [rbp-0x8],rax
  40a3b8:	mov    rax,QWORD PTR [rbp-0x18]
  40a3bc:	mov    rcx,QWORD PTR [rax+0x10]
  40a3c0:	mov    rdx,QWORD PTR [rbp-0x8]
  40a3c4:	mov    rax,QWORD PTR [rbp-0x20]
  40a3c8:	mov    rsi,rcx
  40a3cb:	mov    rdi,rax
  40a3ce:	call   4030f0 <memcpy@plt>
  40a3d3:	mov    rax,QWORD PTR [rbp-0x8]
  40a3d7:	add    QWORD PTR [rbp-0x20],rax
  40a3db:	mov    rax,QWORD PTR [rbp-0x18]
  40a3df:	mov    rax,QWORD PTR [rax]
  40a3e2:	mov    rax,QWORD PTR [rax+0xb80]
  40a3e9:	mov    QWORD PTR [rbp-0x10],rax
  40a3ed:	jmp    40a41e <flatcc_emitter_copy_buffer@@Base+0xfb>
  40a3ef:	mov    rcx,QWORD PTR [rbp-0x10]
  40a3f3:	mov    rax,QWORD PTR [rbp-0x20]
  40a3f7:	mov    edx,0xb80
  40a3fc:	mov    rsi,rcx
  40a3ff:	mov    rdi,rax
  40a402:	call   4030f0 <memcpy@plt>
  40a407:	add    QWORD PTR [rbp-0x20],0xb80
  40a40f:	mov    rax,QWORD PTR [rbp-0x10]
  40a413:	mov    rax,QWORD PTR [rax+0xb80]
  40a41a:	mov    QWORD PTR [rbp-0x10],rax
  40a41e:	mov    rax,QWORD PTR [rbp-0x18]
  40a422:	mov    rax,QWORD PTR [rax+0x8]
  40a426:	cmp    rax,QWORD PTR [rbp-0x10]
  40a42a:	jne    40a3ef <flatcc_emitter_copy_buffer@@Base+0xcc>
  40a42c:	mov    rax,QWORD PTR [rbp-0x18]
  40a430:	mov    rax,QWORD PTR [rax+0x28]
  40a434:	mov    edx,0xb80
  40a439:	sub    rdx,rax
  40a43c:	mov    rcx,QWORD PTR [rbp-0x10]
  40a440:	mov    rax,QWORD PTR [rbp-0x20]
  40a444:	mov    rsi,rcx
  40a447:	mov    rdi,rax
  40a44a:	call   4030f0 <memcpy@plt>
  40a44f:	mov    rax,QWORD PTR [rbp-0x20]
  40a453:	leave  
  40a454:	ret    
  40a455:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a45f:	nop

000000000040a460 <__libc_csu_init@@Base>:
  40a460:	endbr64 
  40a464:	push   r15
  40a466:	lea    r15,[rip+0x5993]        # 40fe00 <flatcc_builder_padding_base@@Base+0x4920>
  40a46d:	push   r14
  40a46f:	mov    r14,rdx
  40a472:	push   r13
  40a474:	mov    r13,rsi
  40a477:	push   r12
  40a479:	mov    r12d,edi
  40a47c:	push   rbp
  40a47d:	lea    rbp,[rip+0x5984]        # 40fe08 <flatcc_builder_padding_base@@Base+0x4928>
  40a484:	push   rbx
  40a485:	sub    rbp,r15
  40a488:	sub    rsp,0x8
  40a48c:	call   403000 <free@plt-0x30>
  40a491:	sar    rbp,0x3
  40a495:	je     40a4b6 <__libc_csu_init@@Base+0x56>
  40a497:	xor    ebx,ebx
  40a499:	nop    DWORD PTR [rax+0x0]
  40a4a0:	mov    rdx,r14
  40a4a3:	mov    rsi,r13
  40a4a6:	mov    edi,r12d
  40a4a9:	call   QWORD PTR [r15+rbx*8]
  40a4ad:	add    rbx,0x1
  40a4b1:	cmp    rbp,rbx
  40a4b4:	jne    40a4a0 <__libc_csu_init@@Base+0x40>
  40a4b6:	add    rsp,0x8
  40a4ba:	pop    rbx
  40a4bb:	pop    rbp
  40a4bc:	pop    r12
  40a4be:	pop    r13
  40a4c0:	pop    r14
  40a4c2:	pop    r15
  40a4c4:	ret    
  40a4c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040a4d0 <__libc_csu_fini@@Base>:
  40a4d0:	endbr64 
  40a4d4:	ret    

Disassembly of section .fini:

000000000040a4d8 <.fini>:
  40a4d8:	endbr64 
  40a4dc:	sub    rsp,0x8
  40a4e0:	add    rsp,0x8
  40a4e4:	ret    
