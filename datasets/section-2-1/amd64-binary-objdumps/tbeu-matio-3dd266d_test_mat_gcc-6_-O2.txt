
../repos/tbeu-matio-3dd266d/test/.libs/test_mat:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x12fe1]        # 414ff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <Mat_VarGetNumberOfFields@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <Mat_VarGetNumberOfFields@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x12fe2]        # 415008 <getopt_long_only@@Base+0x8078>
  402026:	jmp    QWORD PTR [rip+0x12fe4]        # 415010 <getopt_long_only@@Base+0x8080>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <Mat_VarGetNumberOfFields@plt>:
  402030:	jmp    QWORD PTR [rip+0x12fe2]        # 415018 <Mat_VarGetNumberOfFields>
  402036:	push   0x0
  40203b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402040 <getenv@plt>:
  402040:	jmp    QWORD PTR [rip+0x12fda]        # 415020 <getenv@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402050 <free@plt>:
  402050:	jmp    QWORD PTR [rip+0x12fd2]        # 415028 <free@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402060 <putchar@plt>:
  402060:	jmp    QWORD PTR [rip+0x12fca]        # 415030 <putchar@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402070 <Mat_VarReadNext@plt>:
  402070:	jmp    QWORD PTR [rip+0x12fc2]        # 415038 <Mat_VarReadNext>
  402076:	push   0x4
  40207b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402080 <Mat_Open@plt>:
  402080:	jmp    QWORD PTR [rip+0x12fba]        # 415040 <Mat_Open>
  402086:	push   0x5
  40208b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402090 <strncmp@plt>:
  402090:	jmp    QWORD PTR [rip+0x12fb2]        # 415048 <strncmp@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020a0 <Mat_VarGetCells@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x12faa]        # 415050 <Mat_VarGetCells>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020b0 <Mat_VarAddStructField@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x12fa2]        # 415058 <Mat_VarAddStructField>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020c0 <puts@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x12f9a]        # 415060 <puts@GLIBC_2.2.5>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020d0 <Mat_VarCreate@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x12f92]        # 415068 <Mat_VarCreate>
  4020d6:	push   0xa
  4020db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020e0 <Mat_GetFilename@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x12f8a]        # 415070 <Mat_GetFilename>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020f0 <Mat_VarWrite@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x12f82]        # 415078 <Mat_VarWrite>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402100 <Mat_GetVersion@plt>:
  402100:	jmp    QWORD PTR [rip+0x12f7a]        # 415080 <Mat_GetVersion>
  402106:	push   0xd
  40210b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402110 <Mat_Message@plt>:
  402110:	jmp    QWORD PTR [rip+0x12f72]        # 415088 <Mat_Message>
  402116:	push   0xe
  40211b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402120 <strlen@plt>:
  402120:	jmp    QWORD PTR [rip+0x12f6a]        # 415090 <strlen@GLIBC_2.2.5>
  402126:	push   0xf
  40212b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402130 <Mat_VarReadData@plt>:
  402130:	jmp    QWORD PTR [rip+0x12f62]        # 415098 <Mat_VarReadData>
  402136:	push   0x10
  40213b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402140 <__stack_chk_fail@plt>:
  402140:	jmp    QWORD PTR [rip+0x12f5a]        # 4150a0 <__stack_chk_fail@GLIBC_2.4>
  402146:	push   0x11
  40214b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402150 <Mat_VarWriteAppend@plt>:
  402150:	jmp    QWORD PTR [rip+0x12f52]        # 4150a8 <Mat_VarWriteAppend>
  402156:	push   0x12
  40215b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402160 <strchr@plt>:
  402160:	jmp    QWORD PTR [rip+0x12f4a]        # 4150b0 <strchr@GLIBC_2.2.5>
  402166:	push   0x13
  40216b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402170 <warnx@plt>:
  402170:	jmp    QWORD PTR [rip+0x12f42]        # 4150b8 <warnx@GLIBC_2.2.5>
  402176:	push   0x14
  40217b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402180 <Mat_VarReadInfo@plt>:
  402180:	jmp    QWORD PTR [rip+0x12f3a]        # 4150c0 <Mat_VarReadInfo>
  402186:	push   0x15
  40218b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402190 <Mat_LogInit@plt>:
  402190:	jmp    QWORD PTR [rip+0x12f32]        # 4150c8 <Mat_LogInit>
  402196:	push   0x16
  40219b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021a0 <Mat_VarSetCell@plt>:
  4021a0:	jmp    QWORD PTR [rip+0x12f2a]        # 4150d0 <Mat_VarSetCell>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021b0 <fputs@plt>:
  4021b0:	jmp    QWORD PTR [rip+0x12f22]        # 4150d8 <fputs@GLIBC_2.2.5>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021c0 <freopen@plt>:
  4021c0:	jmp    QWORD PTR [rip+0x12f1a]        # 4150e0 <freopen@GLIBC_2.2.5>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021d0 <Mat_CalcSubscripts2@plt>:
  4021d0:	jmp    QWORD PTR [rip+0x12f12]        # 4150e8 <Mat_CalcSubscripts2>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021e0 <Mat_VarGetStructFieldnames@plt>:
  4021e0:	jmp    QWORD PTR [rip+0x12f0a]        # 4150f0 <Mat_VarGetStructFieldnames>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021f0 <Mat_CalcSingleSubscript2@plt>:
  4021f0:	jmp    QWORD PTR [rip+0x12f02]        # 4150f8 <Mat_CalcSingleSubscript2>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402200 <Mat_VarGetStructField@plt>:
  402200:	jmp    QWORD PTR [rip+0x12efa]        # 415100 <Mat_VarGetStructField>
  402206:	push   0x1d
  40220b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402210 <strcmp@plt>:
  402210:	jmp    QWORD PTR [rip+0x12ef2]        # 415108 <strcmp@GLIBC_2.2.5>
  402216:	push   0x1e
  40221b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402220 <strtol@plt>:
  402220:	jmp    QWORD PTR [rip+0x12eea]        # 415110 <strtol@GLIBC_2.2.5>
  402226:	push   0x1f
  40222b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402230 <Mat_VarFree@plt>:
  402230:	jmp    QWORD PTR [rip+0x12ee2]        # 415118 <Mat_VarFree>
  402236:	push   0x20
  40223b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402240 <Mat_GetDir@plt>:
  402240:	jmp    QWORD PTR [rip+0x12eda]        # 415120 <Mat_GetDir>
  402246:	push   0x21
  40224b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402250 <Mat_GetLibraryVersion@plt>:
  402250:	jmp    QWORD PTR [rip+0x12ed2]        # 415128 <Mat_GetLibraryVersion>
  402256:	push   0x22
  40225b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402260 <Mat_VarPrint@plt>:
  402260:	jmp    QWORD PTR [rip+0x12eca]        # 415130 <Mat_VarPrint>
  402266:	push   0x23
  40226b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402270 <__isoc99_sscanf@plt>:
  402270:	jmp    QWORD PTR [rip+0x12ec2]        # 415138 <__isoc99_sscanf@GLIBC_2.7>
  402276:	push   0x24
  40227b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402280 <Mat_VarGetStructs@plt>:
  402280:	jmp    QWORD PTR [rip+0x12eba]        # 415140 <Mat_VarGetStructs>
  402286:	push   0x25
  40228b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402290 <Mat_Close@plt>:
  402290:	jmp    QWORD PTR [rip+0x12eb2]        # 415148 <Mat_Close>
  402296:	push   0x26
  40229b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022a0 <Mat_Critical@plt>:
  4022a0:	jmp    QWORD PTR [rip+0x12eaa]        # 415150 <Mat_Critical>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022b0 <Mat_VarDelete@plt>:
  4022b0:	jmp    QWORD PTR [rip+0x12ea2]        # 415158 <Mat_VarDelete>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022c0 <realloc@plt>:
  4022c0:	jmp    QWORD PTR [rip+0x12e9a]        # 415160 <realloc@GLIBC_2.2.5>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022d0 <Mat_VarGetStructsLinear@plt>:
  4022d0:	jmp    QWORD PTR [rip+0x12e92]        # 415168 <Mat_VarGetStructsLinear>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022e0 <Mat_GetHeader@plt>:
  4022e0:	jmp    QWORD PTR [rip+0x12e8a]        # 415170 <Mat_GetHeader>
  4022e6:	push   0x2b
  4022eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022f0 <__printf_chk@plt>:
  4022f0:	jmp    QWORD PTR [rip+0x12e82]        # 415178 <__printf_chk@GLIBC_2.3.4>
  4022f6:	push   0x2c
  4022fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402300 <Mat_VarCreateStruct@plt>:
  402300:	jmp    QWORD PTR [rip+0x12e7a]        # 415180 <Mat_VarCreateStruct>
  402306:	push   0x2d
  40230b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402310 <Mat_CreateVer@plt>:
  402310:	jmp    QWORD PTR [rip+0x12e72]        # 415188 <Mat_CreateVer>
  402316:	push   0x2e
  40231b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402320 <Mat_VarGetCellsLinear@plt>:
  402320:	jmp    QWORD PTR [rip+0x12e6a]        # 415190 <Mat_VarGetCellsLinear>
  402326:	push   0x2f
  40232b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402330 <Mat_Help@plt>:
  402330:	jmp    QWORD PTR [rip+0x12e62]        # 415198 <Mat_Help>
  402336:	push   0x30
  40233b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402340 <exit@plt>:
  402340:	jmp    QWORD PTR [rip+0x12e5a]        # 4151a0 <exit@GLIBC_2.2.5>
  402346:	push   0x31
  40234b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402350 <fwrite@plt>:
  402350:	jmp    QWORD PTR [rip+0x12e52]        # 4151a8 <fwrite@GLIBC_2.2.5>
  402356:	push   0x32
  40235b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402360 <__fprintf_chk@plt>:
  402360:	jmp    QWORD PTR [rip+0x12e4a]        # 4151b0 <__fprintf_chk@GLIBC_2.3.4>
  402366:	push   0x33
  40236b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402370 <Mat_VarDuplicate@plt>:
  402370:	jmp    QWORD PTR [rip+0x12e42]        # 4151b8 <Mat_VarDuplicate>
  402376:	push   0x34
  40237b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402380 <Mat_VarSetStructFieldByName@plt>:
  402380:	jmp    QWORD PTR [rip+0x12e3a]        # 4151c0 <Mat_VarSetStructFieldByName>
  402386:	push   0x35
  40238b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402390 <Mat_VarSetStructFieldByIndex@plt>:
  402390:	jmp    QWORD PTR [rip+0x12e32]        # 4151c8 <Mat_VarSetStructFieldByIndex>
  402396:	push   0x36
  40239b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004023a0 <Mat_VarRead@plt>:
  4023a0:	jmp    QWORD PTR [rip+0x12e2a]        # 4151d0 <Mat_VarRead>
  4023a6:	push   0x37
  4023ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

Disassembly of section .text:

00000000004023b0 <getopt@@Base-0xabc0>:
  4023b0:	push   r13
  4023b2:	push   r12
  4023b4:	xor    esi,esi
  4023b6:	push   rbp
  4023b7:	push   rbx
  4023b8:	sub    rsp,0x58
  4023bc:	mov    edx,DWORD PTR [rip+0x12e2e]        # 4151f0 <getopt_long_only@@Base+0x8260>
  4023c2:	mov    rax,QWORD PTR fs:0x28
  4023cb:	mov    QWORD PTR [rsp+0x48],rax
  4023d0:	xor    eax,eax
  4023d2:	mov    QWORD PTR [rsp+0x20],0x0
  4023db:	mov    QWORD PTR [rsp+0x28],0x0
  4023e4:	mov    QWORD PTR [rsp+0x30],0x0
  4023ed:	mov    QWORD PTR [rsp+0x38],0x0
  4023f6:	mov    QWORD PTR [rsp+0x40],0x0
  4023ff:	mov    QWORD PTR [rsp],0x0
  402407:	mov    QWORD PTR [rsp+0x8],0x1
  402410:	mov    QWORD PTR [rsp+0x10],0xa
  402419:	call   402310 <Mat_CreateVer@plt>
  40241e:	mov    rbx,rax
  402421:	mov    eax,0x1
  402426:	test   rbx,rbx
  402429:	je     4026a1 <Mat_VarRead@plt+0x301>
  40242f:	mov    rbp,rsp
  402432:	sub    rsp,0x8
  402436:	lea    rdi,[rip+0xbbc8]        # 40e005 <getopt_long_only@@Base+0x1075>
  40243d:	push   0x0
  40243f:	mov    r8,rbp
  402442:	xor    r9d,r9d
  402445:	mov    ecx,0x3
  40244a:	mov    edx,0x9
  40244f:	mov    esi,0x6
  402454:	call   4020d0 <Mat_VarCreate@plt>
  402459:	mov    edx,DWORD PTR [rip+0x140c5]        # 416524 <opterr@@Base+0x10>
  40245f:	mov    rsi,rax
  402462:	mov    rdi,rbx
  402465:	mov    QWORD PTR [rsp+0x30],rax
  40246a:	call   4020f0 <Mat_VarWrite@plt>
  40246f:	lea    rdi,[rip+0xbb8e]        # 40e004 <getopt_long_only@@Base+0x1074>
  402476:	mov    r8,rbp
  402479:	xor    r9d,r9d
  40247c:	mov    ecx,0x3
  402481:	mov    edx,0x9
  402486:	mov    esi,0x6
  40248b:	mov    DWORD PTR [rsp],0x800
  402492:	call   4020d0 <Mat_VarCreate@plt>
  402497:	mov    edx,DWORD PTR [rip+0x14087]        # 416524 <opterr@@Base+0x10>
  40249d:	mov    rsi,rax
  4024a0:	mov    rdi,rbx
  4024a3:	mov    QWORD PTR [rsp+0x38],rax
  4024a8:	call   4020f0 <Mat_VarWrite@plt>
  4024ad:	lea    rdi,[rip+0xbb58]        # 40e00c <getopt_long_only@@Base+0x107c>
  4024b4:	mov    r8,rbp
  4024b7:	xor    r9d,r9d
  4024ba:	mov    ecx,0x2
  4024bf:	mov    edx,0x2
  4024c4:	mov    esi,0x4
  4024c9:	mov    DWORD PTR [rsp],0x0
  4024d0:	call   4020d0 <Mat_VarCreate@plt>
  4024d5:	mov    edx,DWORD PTR [rip+0x14049]        # 416524 <opterr@@Base+0x10>
  4024db:	mov    rsi,rax
  4024de:	mov    rdi,rbx
  4024e1:	mov    QWORD PTR [rsp+0x40],rax
  4024e6:	call   4020f0 <Mat_VarWrite@plt>
  4024eb:	lea    rdi,[rip+0xbb24]        # 40e016 <getopt_long_only@@Base+0x1086>
  4024f2:	mov    r8,rbp
  4024f5:	xor    r9d,r9d
  4024f8:	mov    ecx,0x2
  4024fd:	mov    edx,0x16
  402502:	mov    esi,0x2
  402507:	mov    DWORD PTR [rsp],0x0
  40250e:	call   4020d0 <Mat_VarCreate@plt>
  402513:	mov    edx,DWORD PTR [rip+0x1400b]        # 416524 <opterr@@Base+0x10>
  402519:	mov    r12,rax
  40251c:	mov    rsi,rax
  40251f:	mov    rdi,rbx
  402522:	call   4020f0 <Mat_VarWrite@plt>
  402527:	mov    rdi,r12
  40252a:	lea    r12,[rsp+0x30]
  40252f:	call   402230 <Mat_VarFree@plt>
  402534:	lea    rdi,[rip+0xbae7]        # 40e022 <getopt_long_only@@Base+0x1092>
  40253b:	mov    r8,rbp
  40253e:	mov    r9,r12
  402541:	mov    ecx,0x3
  402546:	mov    edx,0x16
  40254b:	mov    esi,0x2
  402550:	mov    DWORD PTR [rsp],0x1
  402557:	call   4020d0 <Mat_VarCreate@plt>
  40255c:	mov    edx,DWORD PTR [rip+0x13fc2]        # 416524 <opterr@@Base+0x10>
  402562:	mov    r13,rax
  402565:	mov    rsi,rax
  402568:	mov    rdi,rbx
  40256b:	call   4020f0 <Mat_VarWrite@plt>
  402570:	mov    rdi,r13
  402573:	mov    QWORD PTR [r13+0x38],0x0
  40257b:	call   402230 <Mat_VarFree@plt>
  402580:	lea    rdi,[rip+0xbab4]        # 40e03b <getopt_long_only@@Base+0x10ab>
  402587:	mov    r8,rbp
  40258a:	mov    r9,r12
  40258d:	mov    ecx,0x2
  402592:	mov    edx,0x16
  402597:	mov    esi,0x2
  40259c:	mov    DWORD PTR [rsp],0x1
  4025a3:	mov    QWORD PTR [rsp+0x10],0x1
  4025ac:	call   4020d0 <Mat_VarCreate@plt>
  4025b1:	mov    edx,DWORD PTR [rip+0x13f6d]        # 416524 <opterr@@Base+0x10>
  4025b7:	mov    r13,rax
  4025ba:	mov    rsi,rax
  4025bd:	mov    rdi,rbx
  4025c0:	call   4020f0 <Mat_VarWrite@plt>
  4025c5:	mov    rdi,r13
  4025c8:	mov    QWORD PTR [r13+0x38],0x0
  4025d0:	call   402230 <Mat_VarFree@plt>
  4025d5:	lea    rdi,[rip+0xba72]        # 40e04e <getopt_long_only@@Base+0x10be>
  4025dc:	mov    r8,rbp
  4025df:	xor    r9d,r9d
  4025e2:	mov    ecx,0x2
  4025e7:	mov    edx,0x15
  4025ec:	mov    esi,0x1
  4025f1:	mov    DWORD PTR [rsp],0x1
  4025f8:	mov    QWORD PTR [rsp+0x10],0x0
  402601:	call   4020d0 <Mat_VarCreate@plt>
  402606:	mov    edx,DWORD PTR [rip+0x13f18]        # 416524 <opterr@@Base+0x10>
  40260c:	mov    rsi,rax
  40260f:	mov    r13,rax
  402612:	mov    rdi,rbx
  402615:	call   4020f0 <Mat_VarWrite@plt>
  40261a:	mov    rdi,r13
  40261d:	call   402230 <Mat_VarFree@plt>
  402622:	lea    rdi,[rip+0xba2f]        # 40e058 <getopt_long_only@@Base+0x10c8>
  402629:	mov    r8,rbp
  40262c:	mov    r9,r12
  40262f:	mov    ecx,0x2
  402634:	mov    edx,0x15
  402639:	mov    esi,0x1
  40263e:	mov    QWORD PTR [rsp+0x10],0x3
  402647:	mov    DWORD PTR [rsp],0x1
  40264e:	call   4020d0 <Mat_VarCreate@plt>
  402653:	mov    edx,DWORD PTR [rip+0x13ecb]        # 416524 <opterr@@Base+0x10>
  402659:	mov    rsi,rax
  40265c:	mov    rbp,rax
  40265f:	mov    rdi,rbx
  402662:	call   4020f0 <Mat_VarWrite@plt>
  402667:	mov    rdi,rbp
  40266a:	mov    QWORD PTR [rbp+0x38],0x0
  402672:	call   402230 <Mat_VarFree@plt>
  402677:	mov    rdi,QWORD PTR [rsp+0x30]
  40267c:	call   402230 <Mat_VarFree@plt>
  402681:	mov    rdi,QWORD PTR [rsp+0x38]
  402686:	call   402230 <Mat_VarFree@plt>
  40268b:	mov    rdi,QWORD PTR [rsp+0x40]
  402690:	call   402230 <Mat_VarFree@plt>
  402695:	mov    rdi,rbx
  402698:	call   402290 <Mat_Close@plt>
  40269d:	pop    rax
  40269e:	pop    rdx
  40269f:	xor    eax,eax
  4026a1:	mov    rcx,QWORD PTR [rsp+0x48]
  4026a6:	xor    rcx,QWORD PTR fs:0x28
  4026af:	je     4026b6 <Mat_VarRead@plt+0x316>
  4026b1:	call   402140 <__stack_chk_fail@plt>
  4026b6:	add    rsp,0x58
  4026ba:	pop    rbx
  4026bb:	pop    rbp
  4026bc:	pop    r12
  4026be:	pop    r13
  4026c0:	ret    
  4026c1:	push   r13
  4026c3:	push   r12
  4026c5:	xor    esi,esi
  4026c7:	push   rbp
  4026c8:	push   rbx
  4026c9:	sub    rsp,0x48
  4026cd:	mov    edx,DWORD PTR [rip+0x12b1d]        # 4151f0 <getopt_long_only@@Base+0x8260>
  4026d3:	mov    rax,QWORD PTR fs:0x28
  4026dc:	mov    QWORD PTR [rsp+0x38],rax
  4026e1:	xor    eax,eax
  4026e3:	mov    QWORD PTR [rsp],0x0
  4026eb:	mov    QWORD PTR [rsp+0x8],0x0
  4026f4:	call   402310 <Mat_CreateVer@plt>
  4026f9:	mov    rbp,rax
  4026fc:	mov    eax,0x1
  402701:	test   rbp,rbp
  402704:	je     402a12 <Mat_VarRead@plt+0x672>
  40270a:	mov    QWORD PTR [rsp+0x10],0x0
  402713:	mov    QWORD PTR [rsp],0x0
  40271b:	mov    rbx,rsp
  40271e:	mov    QWORD PTR [rsp+0x8],0x1
  402727:	lea    r12,[rsp+0x10]
  40272c:	sub    rsp,0x8
  402730:	push   0x0
  402732:	lea    rdi,[rip+0xb92f]        # 40e068 <getopt_long_only@@Base+0x10d8>
  402739:	mov    r8,rbx
  40273c:	mov    r9,r12
  40273f:	mov    ecx,0x2
  402744:	mov    edx,0x16
  402749:	mov    esi,0x2
  40274e:	call   4020d0 <Mat_VarCreate@plt>
  402753:	mov    edx,DWORD PTR [rip+0x13dcb]        # 416524 <opterr@@Base+0x10>
  402759:	mov    r13,rax
  40275c:	mov    rsi,rax
  40275f:	mov    rdi,rbp
  402762:	call   4020f0 <Mat_VarWrite@plt>
  402767:	mov    rdi,r13
  40276a:	call   402230 <Mat_VarFree@plt>
  40276f:	lea    rdi,[rip+0xb8f7]        # 40e06d <getopt_long_only@@Base+0x10dd>
  402776:	mov    r8,rbx
  402779:	xor    r9d,r9d
  40277c:	mov    ecx,0x2
  402781:	mov    edx,0x9
  402786:	mov    esi,0x6
  40278b:	mov    DWORD PTR [rsp],0x0
  402792:	call   4020d0 <Mat_VarCreate@plt>
  402797:	lea    rdi,[rip+0xb8d6]        # 40e074 <getopt_long_only@@Base+0x10e4>
  40279e:	mov    r8,rbx
  4027a1:	xor    r9d,r9d
  4027a4:	mov    ecx,0x2
  4027a9:	mov    edx,0x9
  4027ae:	mov    esi,0x6
  4027b3:	mov    DWORD PTR [rsp],0x0
  4027ba:	mov    QWORD PTR [rsp+0x20],rax
  4027bf:	call   4020d0 <Mat_VarCreate@plt>
  4027c4:	lea    rdi,[rip+0xb8b0]        # 40e07b <getopt_long_only@@Base+0x10eb>
  4027cb:	mov    r8,rbx
  4027ce:	mov    r9,r12
  4027d1:	mov    ecx,0x2
  4027d6:	mov    edx,0x16
  4027db:	mov    esi,0x2
  4027e0:	mov    DWORD PTR [rsp],0x0
  4027e7:	mov    QWORD PTR [rsp+0x28],rax
  4027ec:	mov    QWORD PTR [rsp+0x30],0x0
  4027f5:	mov    QWORD PTR [rsp+0x10],0x0
  4027fe:	mov    QWORD PTR [rsp+0x18],0x1
  402807:	call   4020d0 <Mat_VarCreate@plt>
  40280c:	mov    edx,DWORD PTR [rip+0x13d12]        # 416524 <opterr@@Base+0x10>
  402812:	mov    r13,rax
  402815:	mov    rsi,rax
  402818:	mov    rdi,rbp
  40281b:	call   4020f0 <Mat_VarWrite@plt>
  402820:	mov    rdi,r13
  402823:	call   402230 <Mat_VarFree@plt>
  402828:	lea    rdi,[rip+0xb83e]        # 40e06d <getopt_long_only@@Base+0x10dd>
  40282f:	mov    r8,rbx
  402832:	xor    r9d,r9d
  402835:	mov    ecx,0x2
  40283a:	mov    edx,0x9
  40283f:	mov    esi,0x6
  402844:	mov    DWORD PTR [rsp],0x0
  40284b:	call   4020d0 <Mat_VarCreate@plt>
  402850:	lea    rdi,[rip+0xb81d]        # 40e074 <getopt_long_only@@Base+0x10e4>
  402857:	mov    r8,rbx
  40285a:	xor    r9d,r9d
  40285d:	mov    ecx,0x2
  402862:	mov    edx,0x9
  402867:	mov    esi,0x6
  40286c:	mov    DWORD PTR [rsp],0x0
  402873:	mov    QWORD PTR [rsp+0x20],rax
  402878:	call   4020d0 <Mat_VarCreate@plt>
  40287d:	lea    rdi,[rip+0xb7fc]        # 40e080 <getopt_long_only@@Base+0x10f0>
  402884:	mov    r8,rbx
  402887:	mov    r9,r12
  40288a:	mov    ecx,0x2
  40288f:	mov    edx,0x16
  402894:	mov    esi,0x2
  402899:	mov    DWORD PTR [rsp],0x0
  4028a0:	mov    QWORD PTR [rsp+0x28],rax
  4028a5:	mov    QWORD PTR [rsp+0x30],0x0
  4028ae:	mov    QWORD PTR [rsp+0x10],0x1
  4028b7:	mov    QWORD PTR [rsp+0x18],0x1
  4028c0:	call   4020d0 <Mat_VarCreate@plt>
  4028c5:	mov    edx,DWORD PTR [rip+0x13c59]        # 416524 <opterr@@Base+0x10>
  4028cb:	mov    rsi,rax
  4028ce:	mov    r13,rax
  4028d1:	mov    rdi,rbp
  4028d4:	call   4020f0 <Mat_VarWrite@plt>
  4028d9:	mov    rdi,r13
  4028dc:	call   402230 <Mat_VarFree@plt>
  4028e1:	lea    rdi,[rip+0xb785]        # 40e06d <getopt_long_only@@Base+0x10dd>
  4028e8:	mov    r8,rbx
  4028eb:	xor    r9d,r9d
  4028ee:	mov    ecx,0x2
  4028f3:	mov    edx,0x9
  4028f8:	mov    esi,0x6
  4028fd:	mov    DWORD PTR [rsp],0x0
  402904:	mov    QWORD PTR [rsp+0x10],0x0
  40290d:	mov    QWORD PTR [rsp+0x18],0x1
  402916:	call   4020d0 <Mat_VarCreate@plt>
  40291b:	lea    rdi,[rip+0xb752]        # 40e074 <getopt_long_only@@Base+0x10e4>
  402922:	mov    r8,rbx
  402925:	xor    r9d,r9d
  402928:	mov    ecx,0x2
  40292d:	mov    edx,0x2
  402932:	mov    esi,0x4
  402937:	mov    DWORD PTR [rsp],0x0
  40293e:	mov    QWORD PTR [rsp+0x20],rax
  402943:	call   4020d0 <Mat_VarCreate@plt>
  402948:	lea    rdi,[rip+0xb71e]        # 40e06d <getopt_long_only@@Base+0x10dd>
  40294f:	mov    r8,rbx
  402952:	xor    r9d,r9d
  402955:	mov    ecx,0x2
  40295a:	mov    edx,0x16
  40295f:	mov    esi,0x2
  402964:	mov    DWORD PTR [rsp],0x0
  40296b:	mov    QWORD PTR [rsp+0x28],rax
  402970:	call   4020d0 <Mat_VarCreate@plt>
  402975:	lea    rdi,[rip+0xb6f8]        # 40e074 <getopt_long_only@@Base+0x10e4>
  40297c:	mov    r8,rbx
  40297f:	xor    r9d,r9d
  402982:	mov    ecx,0x2
  402987:	mov    edx,0x15
  40298c:	mov    esi,0x1
  402991:	mov    DWORD PTR [rsp],0x0
  402998:	mov    QWORD PTR [rsp+0x30],rax
  40299d:	call   4020d0 <Mat_VarCreate@plt>
  4029a2:	lea    rdi,[rip+0xb6dc]        # 40e085 <getopt_long_only@@Base+0x10f5>
  4029a9:	mov    r8,rbx
  4029ac:	mov    r9,r12
  4029af:	mov    ecx,0x2
  4029b4:	mov    edx,0x16
  4029b9:	mov    esi,0x2
  4029be:	mov    QWORD PTR [rsp+0x38],rax
  4029c3:	mov    QWORD PTR [rsp+0x40],0x0
  4029cc:	mov    QWORD PTR [rsp+0x10],0x2
  4029d5:	mov    QWORD PTR [rsp+0x18],0x1
  4029de:	mov    DWORD PTR [rsp],0x0
  4029e5:	call   4020d0 <Mat_VarCreate@plt>
  4029ea:	mov    edx,DWORD PTR [rip+0x13b34]        # 416524 <opterr@@Base+0x10>
  4029f0:	mov    rsi,rax
  4029f3:	mov    rbx,rax
  4029f6:	mov    rdi,rbp
  4029f9:	call   4020f0 <Mat_VarWrite@plt>
  4029fe:	mov    rdi,rbx
  402a01:	call   402230 <Mat_VarFree@plt>
  402a06:	mov    rdi,rbp
  402a09:	call   402290 <Mat_Close@plt>
  402a0e:	pop    rax
  402a0f:	pop    rdx
  402a10:	xor    eax,eax
  402a12:	mov    rcx,QWORD PTR [rsp+0x38]
  402a17:	xor    rcx,QWORD PTR fs:0x28
  402a20:	je     402a27 <Mat_VarRead@plt+0x687>
  402a22:	call   402140 <__stack_chk_fail@plt>
  402a27:	add    rsp,0x48
  402a2b:	pop    rbx
  402a2c:	pop    rbp
  402a2d:	pop    r12
  402a2f:	pop    r13
  402a31:	ret    
  402a32:	push   r15
  402a34:	push   r14
  402a36:	mov    r14d,edi
  402a39:	push   r13
  402a3b:	push   r12
  402a3d:	mov    rdi,rsi
  402a40:	push   rbp
  402a41:	push   rbx
  402a42:	sub    rsp,0x8d8
  402a49:	lea    rdx,[rsp+0x3a0]
  402a51:	lea    rbx,[rsp+0x130]
  402a59:	lea    r8,[rsp+0x200]
  402a61:	lea    rsi,[rsp+0x2d0]
  402a69:	lea    rcx,[rsp+0x50]
  402a6e:	mov    QWORD PTR [rsp+0x10],0x5
  402a77:	mov    rax,QWORD PTR fs:0x28
  402a80:	mov    QWORD PTR [rsp+0x8c8],rax
  402a88:	xor    eax,eax
  402a8a:	mov    QWORD PTR [rsp+0x18],0xa
  402a93:	mov    eax,0x1
  402a98:	vcvtsi2sd xmm0,xmm0,eax
  402a9c:	mov    DWORD PTR [r8+rax*4-0x4],eax
  402aa1:	lea    r9,[rsp+0xc0]
  402aa9:	mov    DWORD PTR [rsi+rax*4-0x4],eax
  402aad:	mov    WORD PTR [rcx+rax*2-0x2],ax
  402ab2:	lea    r13,[rsp+0x530]
  402aba:	mov    WORD PTR [rsp+rax*2+0xbe],ax
  402ac2:	mov    BYTE PTR [rsp+rax*1+0x84f],al
  402ac9:	lea    r11,[rsp+0x6c0]
  402ad1:	mov    BYTE PTR [rsp+rax*1+0x88f],al
  402ad8:	mov    QWORD PTR [rsp+rax*8+0x528],rax
  402ae0:	mov    QWORD PTR [rsp+rax*8+0x6b8],rax
  402ae8:	vmovsd QWORD PTR [rdx+rax*8-0x8],xmm0
  402aee:	vcvtsi2ss xmm0,xmm0,eax
  402af2:	vmovss DWORD PTR [rbx+rax*4-0x4],xmm0
  402af8:	inc    rax
  402afb:	cmp    rax,0x33
  402aff:	jne    402a98 <Mat_VarRead@plt+0x6f8>
  402b01:	lea    r10d,[r14-0x6]
  402b05:	mov    eax,0x1
  402b0a:	cmp    r10d,0x9
  402b0e:	ja     402d7c <Mat_VarRead@plt+0x9dc>
  402b14:	lea    rbp,[rip+0xbec5]        # 40e9e0 <getopt_long_only@@Base+0x1a50>
  402b1b:	movsxd rax,DWORD PTR [rbp+r10*4+0x0]
  402b20:	add    rax,rbp
  402b23:	jmp    rax
  402b25:	lea    rbp,[rbx+0x90]
  402b2c:	lea    r12,[rbx+0x60]
  402b30:	lea    r10,[rbx+0x30]
  402b34:	mov    r15d,0x7
  402b3a:	jmp    402c3a <Mat_VarRead@plt+0x89a>
  402b3f:	lea    rbp,[r13+0x120]
  402b46:	lea    r12,[r13+0xc0]
  402b4d:	lea    r10,[r13+0x60]
  402b51:	mov    rbx,r13
  402b54:	mov    r15d,0xc
  402b5a:	jmp    402c3a <Mat_VarRead@plt+0x89a>
  402b5f:	lea    rbp,[r11+0x120]
  402b66:	lea    r12,[r11+0xc0]
  402b6d:	lea    r10,[r11+0x60]
  402b71:	mov    rbx,r11
  402b74:	mov    r15d,0xd
  402b7a:	jmp    402c3a <Mat_VarRead@plt+0x89a>
  402b7f:	lea    rbp,[r8+0x90]
  402b86:	lea    r12,[r8+0x60]
  402b8a:	lea    r10,[r8+0x30]
  402b8e:	mov    rbx,r8
  402b91:	mov    r15d,0x5
  402b97:	jmp    402c3a <Mat_VarRead@plt+0x89a>
  402b9c:	lea    rbp,[rsi+0x90]
  402ba3:	lea    r12,[rsi+0x60]
  402ba7:	lea    r10,[rsi+0x30]
  402bab:	mov    rbx,rsi
  402bae:	mov    r15d,0x6
  402bb4:	jmp    402c3a <Mat_VarRead@plt+0x89a>
  402bb9:	lea    rbp,[rcx+0x48]
  402bbd:	lea    r12,[rcx+0x30]
  402bc1:	lea    r10,[rcx+0x18]
  402bc5:	mov    rbx,rcx
  402bc8:	mov    r15d,0x3
  402bce:	jmp    402c3a <Mat_VarRead@plt+0x89a>
  402bd0:	lea    rbp,[r9+0x48]
  402bd4:	lea    r12,[r9+0x30]
  402bd8:	lea    r10,[r9+0x18]
  402bdc:	mov    rbx,r9
  402bdf:	mov    r15d,0x4
  402be5:	jmp    402c3a <Mat_VarRead@plt+0x89a>
  402be7:	lea    rbx,[rsp+0x850]
  402bef:	mov    r15d,0x1
  402bf5:	lea    rbp,[rbx+0x24]
  402bf9:	lea    r12,[rbx+0x18]
  402bfd:	lea    r10,[rbx+0xc]
  402c01:	jmp    402c3a <Mat_VarRead@plt+0x89a>
  402c03:	lea    rbx,[rsp+0x890]
  402c0b:	mov    r15d,0x2
  402c11:	lea    rbp,[rbx+0x24]
  402c15:	lea    r12,[rbx+0x18]
  402c19:	lea    r10,[rbx+0xc]
  402c1d:	jmp    402c3a <Mat_VarRead@plt+0x89a>
  402c1f:	lea    rbp,[rdx+0x120]
  402c26:	lea    r12,[rdx+0xc0]
  402c2d:	lea    r10,[rdx+0x60]
  402c31:	mov    rbx,rdx
  402c34:	mov    r15d,0x9
  402c3a:	mov    edx,DWORD PTR [rip+0x125b0]        # 4151f0 <getopt_long_only@@Base+0x8260>
  402c40:	xor    esi,esi
  402c42:	mov    QWORD PTR [rsp+0x8],r10
  402c47:	call   402310 <Mat_CreateVer@plt>
  402c4c:	mov    QWORD PTR [rsp],rax
  402c50:	cmp    QWORD PTR [rsp],0x0
  402c55:	mov    eax,0x1
  402c5a:	je     402d7c <Mat_VarRead@plt+0x9dc>
  402c60:	mov    QWORD PTR [rsp+0x10],0x3
  402c69:	mov    QWORD PTR [rsp+0x18],0x4
  402c72:	lea    r13,[rsp+0x10]
  402c77:	sub    rsp,0x8
  402c7b:	mov    r9,rbx
  402c7e:	mov    ecx,0x2
  402c83:	push   0x1
  402c85:	mov    r8,r13
  402c88:	mov    edx,r15d
  402c8b:	mov    esi,r14d
  402c8e:	xor    edi,edi
  402c90:	call   4020d0 <Mat_VarCreate@plt>
  402c95:	mov    r10,QWORD PTR [rsp+0x18]
  402c9a:	mov    r8,r13
  402c9d:	mov    ecx,0x2
  402ca2:	mov    edx,r15d
  402ca5:	mov    esi,r14d
  402ca8:	xor    edi,edi
  402caa:	mov    DWORD PTR [rsp],0x1
  402cb1:	mov    QWORD PTR [rsp+0x30],rax
  402cb6:	mov    r9,r10
  402cb9:	call   4020d0 <Mat_VarCreate@plt>
  402cbe:	mov    r9,r12
  402cc1:	mov    r8,r13
  402cc4:	mov    ecx,0x2
  402cc9:	mov    edx,r15d
  402ccc:	mov    esi,r14d
  402ccf:	xor    edi,edi
  402cd1:	mov    DWORD PTR [rsp],0x1
  402cd8:	mov    QWORD PTR [rsp+0x38],rax
  402cdd:	call   4020d0 <Mat_VarCreate@plt>
  402ce2:	mov    r9,rbp
  402ce5:	mov    r8,r13
  402ce8:	mov    ecx,0x2
  402ced:	mov    edx,r15d
  402cf0:	mov    esi,r14d
  402cf3:	xor    edi,edi
  402cf5:	mov    DWORD PTR [rsp],0x1
  402cfc:	mov    QWORD PTR [rsp+0x40],rax
  402d01:	call   4020d0 <Mat_VarCreate@plt>
  402d06:	lea    r9,[rsp+0x30]
  402d0b:	lea    rdi,[rip+0xb378]        # 40e08a <getopt_long_only@@Base+0x10fa>
  402d12:	mov    r8,r13
  402d15:	mov    ecx,0x2
  402d1a:	mov    edx,0x15
  402d1f:	mov    esi,0x1
  402d24:	mov    QWORD PTR [rsp+0x48],rax
  402d29:	mov    QWORD PTR [rsp+0x50],0x0
  402d32:	mov    QWORD PTR [rsp+0x20],0x4
  402d3b:	mov    QWORD PTR [rsp+0x28],0x1
  402d44:	mov    DWORD PTR [rsp],0x0
  402d4b:	call   4020d0 <Mat_VarCreate@plt>
  402d50:	mov    edx,DWORD PTR [rip+0x137ce]        # 416524 <opterr@@Base+0x10>
  402d56:	mov    rdi,QWORD PTR [rsp+0x10]
  402d5b:	mov    rsi,rax
  402d5e:	mov    rbx,rax
  402d61:	call   4020f0 <Mat_VarWrite@plt>
  402d66:	mov    rdi,rbx
  402d69:	call   402230 <Mat_VarFree@plt>
  402d6e:	mov    rdi,QWORD PTR [rsp+0x10]
  402d73:	call   402290 <Mat_Close@plt>
  402d78:	pop    rax
  402d79:	pop    rdx
  402d7a:	xor    eax,eax
  402d7c:	mov    rdi,QWORD PTR [rsp+0x8c8]
  402d84:	xor    rdi,QWORD PTR fs:0x28
  402d8d:	je     402d94 <Mat_VarRead@plt+0x9f4>
  402d8f:	call   402140 <__stack_chk_fail@plt>
  402d94:	add    rsp,0x8d8
  402d9b:	pop    rbx
  402d9c:	pop    rbp
  402d9d:	pop    r12
  402d9f:	pop    r13
  402da1:	pop    r14
  402da3:	pop    r15
  402da5:	ret    
  402da6:	push   r15
  402da8:	push   r14
  402daa:	mov    ecx,0x10
  402daf:	push   r13
  402db1:	push   r12
  402db3:	mov    edx,0x1
  402db8:	push   rbp
  402db9:	push   rbx
  402dba:	mov    ebx,edi
  402dbc:	sub    rsp,0x11b8
  402dc3:	mov    rax,QWORD PTR fs:0x28
  402dcc:	mov    QWORD PTR [rsp+0x11a8],rax
  402dd4:	xor    eax,eax
  402dd6:	mov    QWORD PTR [rsp+0x28],rsi
  402ddb:	lea    rdi,[rsp+0x70]
  402de0:	lea    rsi,[rsp+0x70]
  402de5:	lea    r9,[rsp+0x750]
  402ded:	lea    r8,[rsp+0x8e0]
  402df5:	mov    QWORD PTR [rsp+0x30],0x5
  402dfe:	rep stos DWORD PTR es:[rdi],eax
  402e00:	mov    QWORD PTR [rsp+0x20],rsi
  402e05:	lea    rdi,[rsp+0x270]
  402e0d:	lea    rsi,[rsp+0x340]
  402e15:	lea    rcx,[rsp+0x410]
  402e1d:	mov    QWORD PTR [rsp+0x38],0xa
  402e26:	mov    eax,0x33
  402e2b:	vcvtsi2sd xmm0,xmm0,edx
  402e2f:	lea    r10,[rsp+0x680]
  402e37:	mov    DWORD PTR [rcx+rax*4-0xcc],edx
  402e3e:	mov    DWORD PTR [rsp+rax*4+0x4e4],edx
  402e45:	lea    r14,[rsp+0xb0]
  402e4d:	mov    WORD PTR [rsp+rax*2+0x4a],dx
  402e52:	lea    r15,[rsp+0x120]
  402e5a:	mov    WORD PTR [rsp+rax*2+0x12a],dx
  402e62:	mov    BYTE PTR [rsp+rax*1+0x107d],dl
  402e69:	mov    BYTE PTR [rsp+rax*1+0x10fd],dl
  402e70:	lea    rbp,[rsp+0x4e0]
  402e78:	mov    QWORD PTR [rsp+rax*8+0x8d8],rdx
  402e80:	mov    QWORD PTR [rsp+rax*8+0xbf8],rdx
  402e88:	lea    r11,[rsp+0x5b0]
  402e90:	mov    QWORD PTR [rsp],r10
  402e94:	lea    r10,[rsp+0x190]
  402e9c:	mov    DWORD PTR [rsp+rax*4+0x414],eax
  402ea3:	mov    DWORD PTR [rsp+rax*4+0x5b4],eax
  402eaa:	mov    WORD PTR [rsp+rax*2+0xba],ax
  402eb2:	lea    r13,[rsp+0xd90]
  402eba:	mov    WORD PTR [rsp+rax*2+0x19a],ax
  402ec2:	mov    BYTE PTR [rsp+rax*1+0x10bd],al
  402ec9:	lea    r12,[rsp+0xf20]
  402ed1:	mov    BYTE PTR [rsp+rax*1+0x113d],al
  402ed8:	mov    QWORD PTR [rsp+rax*8+0xa68],rax
  402ee0:	mov    QWORD PTR [rsp+rax*8+0xd88],rax
  402ee8:	mov    QWORD PTR [rsp+0x8],r14
  402eed:	lea    r14,[rsp+0xc00]
  402ef5:	mov    QWORD PTR [rsp+0x10],r15
  402efa:	mov    QWORD PTR [rsp+0x18],r10
  402eff:	lea    r15,[rsp+0xa70]
  402f07:	vmovsd QWORD PTR [r9+rax*8-0x198],xmm0
  402f11:	lea    r10,[rsp+0x200]
  402f19:	vcvtsi2sd xmm0,xmm0,eax
  402f1d:	vmovsd QWORD PTR [r8+rax*8-0x198],xmm0
  402f27:	vcvtsi2ss xmm0,xmm0,edx
  402f2b:	inc    rdx
  402f2e:	vmovss DWORD PTR [rdi+rax*4-0xcc],xmm0
  402f37:	vcvtsi2ss xmm0,xmm0,eax
  402f3b:	vmovss DWORD PTR [rsi+rax*4-0xcc],xmm0
  402f44:	inc    rax
  402f47:	cmp    rdx,0x33
  402f4b:	jne    402e2b <Mat_VarRead@plt+0xa8b>
  402f51:	lea    edx,[rbx-0x6]
  402f54:	mov    eax,0x1
  402f59:	cmp    edx,0x9
  402f5c:	ja     403515 <Mat_VarRead@plt+0x1175>
  402f62:	lea    rax,[rip+0xba9f]        # 40ea08 <getopt_long_only@@Base+0x1a78>
  402f69:	movsxd rdx,DWORD PTR [rax+rdx*4]
  402f6d:	add    rax,rdx
  402f70:	jmp    rax
  402f72:	lea    rax,[r9+0x60]
  402f76:	mov    QWORD PTR [rsp+0x70],r9
  402f7b:	mov    QWORD PTR [rsp+0x78],r8
  402f80:	mov    ebp,0x9
  402f85:	mov    QWORD PTR [rsp+0x80],rax
  402f8d:	lea    rax,[r8+0x60]
  402f91:	mov    QWORD PTR [rsp+0x88],rax
  402f99:	lea    rax,[r9+0xc0]
  402fa0:	add    r9,0x120
  402fa7:	mov    QWORD PTR [rsp+0xa0],r9
  402faf:	mov    QWORD PTR [rsp+0x90],rax
  402fb7:	lea    rax,[r8+0xc0]
  402fbe:	add    r8,0x120
  402fc5:	mov    QWORD PTR [rsp+0xa8],r8
  402fcd:	mov    QWORD PTR [rsp+0x98],rax
  402fd5:	jmp    4033d0 <Mat_VarRead@plt+0x1030>
  402fda:	lea    rax,[rdi+0x30]
  402fde:	mov    QWORD PTR [rsp+0x70],rdi
  402fe3:	mov    QWORD PTR [rsp+0x78],rsi
  402fe8:	mov    ebp,0x7
  402fed:	mov    QWORD PTR [rsp+0x80],rax
  402ff5:	lea    rax,[rsi+0x30]
  402ff9:	mov    QWORD PTR [rsp+0x88],rax
  403001:	lea    rax,[rdi+0x60]
  403005:	add    rdi,0x90
  40300c:	mov    QWORD PTR [rsp+0xa0],rdi
  403014:	mov    QWORD PTR [rsp+0x90],rax
  40301c:	lea    rax,[rsi+0x60]
  403020:	add    rsi,0x90
  403027:	mov    QWORD PTR [rsp+0xa8],rsi
  40302f:	mov    QWORD PTR [rsp+0x98],rax
  403037:	jmp    4033d0 <Mat_VarRead@plt+0x1030>
  40303c:	lea    rax,[r15+0x60]
  403040:	mov    QWORD PTR [rsp+0x70],r15
  403045:	mov    QWORD PTR [rsp+0x78],r14
  40304a:	mov    ebp,0xc
  40304f:	mov    QWORD PTR [rsp+0x80],rax
  403057:	lea    rax,[r14+0x60]
  40305b:	mov    QWORD PTR [rsp+0x88],rax
  403063:	lea    rax,[r15+0xc0]
  40306a:	add    r15,0x120
  403071:	mov    QWORD PTR [rsp+0xa0],r15
  403079:	mov    QWORD PTR [rsp+0x90],rax
  403081:	lea    rax,[r14+0xc0]
  403088:	add    r14,0x120
  40308f:	mov    QWORD PTR [rsp+0xa8],r14
  403097:	mov    QWORD PTR [rsp+0x98],rax
  40309f:	jmp    4033d0 <Mat_VarRead@plt+0x1030>
  4030a4:	lea    rax,[r13+0x60]
  4030a8:	mov    QWORD PTR [rsp+0x70],r13
  4030ad:	mov    QWORD PTR [rsp+0x78],r12
  4030b2:	mov    ebp,0xd
  4030b7:	mov    QWORD PTR [rsp+0x80],rax
  4030bf:	lea    rax,[r12+0x60]
  4030c4:	mov    QWORD PTR [rsp+0x88],rax
  4030cc:	lea    rax,[r13+0xc0]
  4030d3:	add    r13,0x120
  4030da:	mov    QWORD PTR [rsp+0xa0],r13
  4030e2:	mov    QWORD PTR [rsp+0x90],rax
  4030ea:	lea    rax,[r12+0xc0]
  4030f2:	add    r12,0x120
  4030f9:	mov    QWORD PTR [rsp+0xa8],r12
  403101:	mov    QWORD PTR [rsp+0x98],rax
  403109:	jmp    4033d0 <Mat_VarRead@plt+0x1030>
  40310e:	lea    rax,[rcx+0x30]
  403112:	mov    QWORD PTR [rsp+0x70],rcx
  403117:	mov    QWORD PTR [rsp+0x78],rbp
  40311c:	mov    QWORD PTR [rsp+0x80],rax
  403124:	lea    rax,[rbp+0x30]
  403128:	mov    QWORD PTR [rsp+0x88],rax
  403130:	lea    rax,[rcx+0x60]
  403134:	add    rcx,0x90
  40313b:	mov    QWORD PTR [rsp+0xa0],rcx
  403143:	mov    QWORD PTR [rsp+0x90],rax
  40314b:	lea    rax,[rbp+0x60]
  40314f:	add    rbp,0x90
  403156:	mov    QWORD PTR [rsp+0xa8],rbp
  40315e:	mov    ebp,0x5
  403163:	mov    QWORD PTR [rsp+0x98],rax
  40316b:	jmp    4033d0 <Mat_VarRead@plt+0x1030>
  403170:	mov    rax,QWORD PTR [rsp]
  403174:	mov    QWORD PTR [rsp+0x70],r11
  403179:	mov    ebp,0x6
  40317e:	mov    QWORD PTR [rsp+0x78],rax
  403183:	lea    rax,[r11+0x30]
  403187:	mov    QWORD PTR [rsp+0x80],rax
  40318f:	mov    rax,QWORD PTR [rsp]
  403193:	add    rax,0x30
  403197:	mov    QWORD PTR [rsp+0x88],rax
  40319f:	lea    rax,[r11+0x60]
  4031a3:	add    r11,0x90
  4031aa:	mov    QWORD PTR [rsp+0xa0],r11
  4031b2:	mov    QWORD PTR [rsp+0x90],rax
  4031ba:	mov    rax,QWORD PTR [rsp]
  4031be:	add    rax,0x60
  4031c2:	mov    QWORD PTR [rsp+0x98],rax
  4031ca:	mov    rax,QWORD PTR [rsp]
  4031ce:	add    rax,0x90
  4031d4:	mov    QWORD PTR [rsp+0xa8],rax
  4031dc:	jmp    4033d0 <Mat_VarRead@plt+0x1030>
  4031e1:	mov    rax,QWORD PTR [rsp+0x8]
  4031e6:	mov    ebp,0x3
  4031eb:	mov    QWORD PTR [rsp+0x70],rax
  4031f0:	mov    rax,QWORD PTR [rsp+0x10]
  4031f5:	mov    QWORD PTR [rsp+0x78],rax
  4031fa:	mov    rax,QWORD PTR [rsp+0x8]
  4031ff:	add    rax,0x18
  403203:	mov    QWORD PTR [rsp+0x80],rax
  40320b:	mov    rax,QWORD PTR [rsp+0x10]
  403210:	add    rax,0x18
  403214:	mov    QWORD PTR [rsp+0x88],rax
  40321c:	mov    rax,QWORD PTR [rsp+0x8]
  403221:	add    rax,0x30
  403225:	mov    QWORD PTR [rsp+0x90],rax
  40322d:	mov    rax,QWORD PTR [rsp+0x10]
  403232:	add    rax,0x30
  403236:	mov    QWORD PTR [rsp+0x98],rax
  40323e:	mov    rax,QWORD PTR [rsp+0x8]
  403243:	add    rax,0x48
  403247:	mov    QWORD PTR [rsp+0xa0],rax
  40324f:	mov    rax,QWORD PTR [rsp+0x10]
  403254:	add    rax,0x48
  403258:	mov    QWORD PTR [rsp+0xa8],rax
  403260:	jmp    4033d0 <Mat_VarRead@plt+0x1030>
  403265:	mov    rax,QWORD PTR [rsp+0x18]
  40326a:	mov    QWORD PTR [rsp+0x78],r10
  40326f:	mov    ebp,0x4
  403274:	mov    QWORD PTR [rsp+0x70],rax
  403279:	add    rax,0x18
  40327d:	mov    QWORD PTR [rsp+0x80],rax
  403285:	lea    rax,[r10+0x18]
  403289:	mov    QWORD PTR [rsp+0x88],rax
  403291:	mov    rax,QWORD PTR [rsp+0x18]
  403296:	add    rax,0x30
  40329a:	mov    QWORD PTR [rsp+0x90],rax
  4032a2:	lea    rax,[r10+0x30]
  4032a6:	add    r10,0x48
  4032aa:	mov    QWORD PTR [rsp+0xa8],r10
  4032b2:	mov    QWORD PTR [rsp+0x98],rax
  4032ba:	mov    rax,QWORD PTR [rsp+0x18]
  4032bf:	add    rax,0x48
  4032c3:	mov    QWORD PTR [rsp+0xa0],rax
  4032cb:	jmp    4033d0 <Mat_VarRead@plt+0x1030>
  4032d0:	lea    rcx,[rsp+0x10bc]
  4032d8:	lea    rdx,[rsp+0x10b0]
  4032e0:	lea    rax,[rsp+0x10f0]
  4032e8:	mov    ebp,0x1
  4032ed:	mov    QWORD PTR [rsp+0x80],rcx
  4032f5:	lea    rcx,[rsp+0x10fc]
  4032fd:	mov    QWORD PTR [rsp+0x70],rdx
  403302:	mov    QWORD PTR [rsp+0x78],rax
  403307:	lea    rdx,[rsp+0x10d4]
  40330f:	lea    rax,[rsp+0x1114]
  403317:	mov    QWORD PTR [rsp+0x88],rcx
  40331f:	lea    rcx,[rsp+0x10c8]
  403327:	mov    QWORD PTR [rsp+0xa0],rdx
  40332f:	mov    QWORD PTR [rsp+0xa8],rax
  403337:	mov    QWORD PTR [rsp+0x90],rcx
  40333f:	lea    rcx,[rsp+0x1108]
  403347:	mov    QWORD PTR [rsp+0x98],rcx
  40334f:	jmp    4033d0 <Mat_VarRead@plt+0x1030>
  403351:	lea    rcx,[rsp+0x113c]
  403359:	lea    rdx,[rsp+0x1130]
  403361:	lea    rax,[rsp+0x1170]
  403369:	mov    ebp,0x2
  40336e:	mov    QWORD PTR [rsp+0x80],rcx
  403376:	lea    rcx,[rsp+0x117c]
  40337e:	mov    QWORD PTR [rsp+0x70],rdx
  403383:	mov    QWORD PTR [rsp+0x78],rax
  403388:	lea    rdx,[rsp+0x1154]
  403390:	lea    rax,[rsp+0x1194]
  403398:	mov    QWORD PTR [rsp+0x88],rcx
  4033a0:	lea    rcx,[rsp+0x1148]
  4033a8:	mov    QWORD PTR [rsp+0xa0],rdx
  4033b0:	mov    QWORD PTR [rsp+0xa8],rax
  4033b8:	mov    QWORD PTR [rsp+0x90],rcx
  4033c0:	lea    rcx,[rsp+0x1188]
  4033c8:	mov    QWORD PTR [rsp+0x98],rcx
  4033d0:	mov    edx,DWORD PTR [rip+0x11e1a]        # 4151f0 <getopt_long_only@@Base+0x8260>
  4033d6:	mov    rdi,QWORD PTR [rsp+0x28]
  4033db:	xor    esi,esi
  4033dd:	call   402310 <Mat_CreateVer@plt>
  4033e2:	mov    r13,rax
  4033e5:	mov    eax,0x1
  4033ea:	test   r13,r13
  4033ed:	je     403515 <Mat_VarRead@plt+0x1175>
  4033f3:	mov    QWORD PTR [rsp+0x30],0x3
  4033fc:	mov    QWORD PTR [rsp+0x38],0x4
  403405:	lea    r12,[rsp+0x30]
  40340a:	sub    rsp,0x8
  40340e:	mov    esi,ebx
  403410:	mov    ecx,0x2
  403415:	push   0x801
  40341a:	mov    r9,QWORD PTR [rsp+0x30]
  40341f:	mov    r8,r12
  403422:	mov    edx,ebp
  403424:	xor    edi,edi
  403426:	call   4020d0 <Mat_VarCreate@plt>
  40342b:	mov    QWORD PTR [rsp+0x50],rax
  403430:	mov    rax,QWORD PTR [rsp+0x30]
  403435:	mov    esi,ebx
  403437:	mov    r8,r12
  40343a:	mov    ecx,0x2
  40343f:	mov    edx,ebp
  403441:	xor    edi,edi
  403443:	mov    DWORD PTR [rsp],0x801
  40344a:	lea    r9,[rax+0x10]
  40344e:	call   4020d0 <Mat_VarCreate@plt>
  403453:	mov    QWORD PTR [rsp+0x58],rax
  403458:	mov    rax,QWORD PTR [rsp+0x30]
  40345d:	mov    esi,ebx
  40345f:	mov    r8,r12
  403462:	mov    ecx,0x2
  403467:	mov    edx,ebp
  403469:	xor    edi,edi
  40346b:	mov    DWORD PTR [rsp],0x801
  403472:	lea    r9,[rax+0x20]
  403476:	call   4020d0 <Mat_VarCreate@plt>
  40347b:	mov    QWORD PTR [rsp+0x60],rax
  403480:	mov    rax,QWORD PTR [rsp+0x30]
  403485:	mov    esi,ebx
  403487:	mov    r8,r12
  40348a:	mov    ecx,0x2
  40348f:	mov    edx,ebp
  403491:	xor    edi,edi
  403493:	mov    DWORD PTR [rsp],0x801
  40349a:	lea    r9,[rax+0x30]
  40349e:	call   4020d0 <Mat_VarCreate@plt>
  4034a3:	lea    r9,[rsp+0x50]
  4034a8:	lea    rdi,[rip+0xabdb]        # 40e08a <getopt_long_only@@Base+0x10fa>
  4034af:	mov    r8,r12
  4034b2:	mov    ecx,0x2
  4034b7:	mov    edx,0x15
  4034bc:	mov    esi,0x1
  4034c1:	mov    QWORD PTR [rsp+0x68],rax
  4034c6:	mov    QWORD PTR [rsp+0x70],0x0
  4034cf:	mov    QWORD PTR [rsp+0x40],0x4
  4034d8:	mov    QWORD PTR [rsp+0x48],0x1
  4034e1:	mov    DWORD PTR [rsp],0x0
  4034e8:	call   4020d0 <Mat_VarCreate@plt>
  4034ed:	mov    edx,DWORD PTR [rip+0x13031]        # 416524 <opterr@@Base+0x10>
  4034f3:	mov    rsi,rax
  4034f6:	mov    rbx,rax
  4034f9:	mov    rdi,r13
  4034fc:	call   4020f0 <Mat_VarWrite@plt>
  403501:	mov    rdi,rbx
  403504:	call   402230 <Mat_VarFree@plt>
  403509:	mov    rdi,r13
  40350c:	call   402290 <Mat_Close@plt>
  403511:	pop    rax
  403512:	pop    rdx
  403513:	xor    eax,eax
  403515:	mov    rbx,QWORD PTR [rsp+0x11a8]
  40351d:	xor    rbx,QWORD PTR fs:0x28
  403526:	je     40352d <Mat_VarRead@plt+0x118d>
  403528:	call   402140 <__stack_chk_fail@plt>
  40352d:	add    rsp,0x11b8
  403534:	pop    rbx
  403535:	pop    rbp
  403536:	pop    r12
  403538:	pop    r13
  40353a:	pop    r14
  40353c:	pop    r15
  40353e:	ret    
  40353f:	push   r14
  403541:	push   r13
  403543:	mov    ecx,0xc
  403548:	push   r12
  40354a:	push   rbp
  40354b:	mov    r12d,edi
  40354e:	push   rbx
  40354f:	mov    r8,rsi
  403552:	lea    rsi,[rip+0xb4e7]        # 40ea40 <getopt_long_only@@Base+0x1ab0>
  403559:	mov    ebx,0x1
  40355e:	sub    rsp,0x570
  403565:	mov    rax,QWORD PTR fs:0x28
  40356e:	mov    QWORD PTR [rsp+0x568],rax
  403576:	xor    eax,eax
  403578:	mov    rdi,rsp
  40357b:	mov    QWORD PTR [rsp+0x30],0x5
  403584:	mov    QWORD PTR [rsp+0x38],0xa
  40358d:	mov    DWORD PTR [rsp+0xf0],0x0
  403598:	mov    DWORD PTR [rsp+0xf4],0x4
  4035a3:	mov    DWORD PTR [rsp+0xf8],0x1
  4035ae:	mov    DWORD PTR [rsp+0xfc],0x2
  4035b9:	mov    DWORD PTR [rsp+0x100],0x3
  4035c4:	mov    DWORD PTR [rsp+0x104],0x0
  4035cf:	mov    DWORD PTR [rsp+0x108],0x4
  4035da:	mov    DWORD PTR [rsp+0x10c],0x1
  4035e5:	mov    DWORD PTR [rsp+0x110],0x2
  4035f0:	mov    DWORD PTR [rsp+0x114],0x3
  4035fb:	mov    DWORD PTR [rsp+0x118],0x0
  403606:	mov    DWORD PTR [rsp+0x11c],0x4
  403611:	mov    DWORD PTR [rsp+0x120],0x1
  40361c:	mov    DWORD PTR [rsp+0x124],0x2
  403627:	mov    DWORD PTR [rsp+0x128],0x3
  403632:	mov    DWORD PTR [rsp+0x12c],0x0
  40363d:	mov    DWORD PTR [rsp+0x130],0x4
  403648:	mov    DWORD PTR [rsp+0x134],0x1
  403653:	mov    DWORD PTR [rsp+0x138],0x2
  40365e:	mov    DWORD PTR [rsp+0x13c],0x3
  403669:	mov    DWORD PTR [rsp+0x140],0x0
  403674:	mov    DWORD PTR [rsp+0x144],0x4
  40367f:	mov    DWORD PTR [rsp+0x148],0x1
  40368a:	mov    DWORD PTR [rsp+0x14c],0x2
  403695:	rep stos DWORD PTR es:[rdi],eax
  403697:	lea    rax,[rsp+0xf0]
  40369f:	mov    DWORD PTR [rsp+0x150],0x3
  4036aa:	mov    DWORD PTR [rsp+0x40],0x0
  4036b2:	mov    DWORD PTR [rsp+0x44],0x2
  4036ba:	mov    DWORD PTR [rsp+0x48],0x5
  4036c2:	lea    rdi,[rsp+0x2b0]
  4036ca:	mov    DWORD PTR [rsp+0x4c],0x7
  4036d2:	mov    DWORD PTR [rsp+0x50],0xa
  4036da:	mov    ecx,0x32
  4036df:	mov    DWORD PTR [rsp+0x54],0xc
  4036e7:	mov    DWORD PTR [rsp+0x58],0xf
  4036ef:	mov    DWORD PTR [rsp+0x5c],0x11
  4036f7:	mov    DWORD PTR [rsp+0x60],0x14
  4036ff:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  403701:	mov    DWORD PTR [rsp+0x64],0x16
  403709:	mov    DWORD PTR [rsp+0x68],0x19
  403711:	lea    rdi,[rsp+0x380]
  403719:	mov    DWORD PTR [rsp+0x160],0x3f800000
  403724:	mov    DWORD PTR [rsp+0x164],0x40a00000
  40372f:	lea    rsi,[rip+0xb3ea]        # 40eb20 <getopt_long_only@@Base+0x1b90>
  403736:	mov    DWORD PTR [rsp+0x168],0x40e00000
  403741:	mov    DWORD PTR [rsp+0x16c],0x41000000
  40374c:	mov    ecx,0x32
  403751:	mov    DWORD PTR [rsp+0x170],0x41100000
  40375c:	mov    DWORD PTR [rsp+0x174],0x41300000
  403767:	mov    DWORD PTR [rsp+0x178],0x41700000
  403772:	mov    DWORD PTR [rsp+0x17c],0x41880000
  40377d:	mov    DWORD PTR [rsp+0x180],0x41900000
  403788:	mov    DWORD PTR [rsp+0x184],0x41980000
  403793:	mov    DWORD PTR [rsp+0x188],0x41a80000
  40379e:	mov    DWORD PTR [rsp+0x18c],0x41c80000
  4037a9:	mov    DWORD PTR [rsp+0x190],0x41d80000
  4037b4:	mov    DWORD PTR [rsp+0x194],0x41e00000
  4037bf:	mov    DWORD PTR [rsp+0x198],0x41e80000
  4037ca:	mov    DWORD PTR [rsp+0x19c],0x41f80000
  4037d5:	mov    DWORD PTR [rsp+0x1a0],0x420c0000
  4037e0:	mov    DWORD PTR [rsp+0x1a4],0x42140000
  4037eb:	mov    DWORD PTR [rsp+0x1a8],0x42180000
  4037f6:	mov    DWORD PTR [rsp+0x1ac],0x421c0000
  403801:	mov    DWORD PTR [rsp+0x1b0],0x42240000
  40380c:	mov    DWORD PTR [rsp+0x1b4],0x42340000
  403817:	mov    DWORD PTR [rsp+0x1b8],0x423c0000
  403822:	mov    DWORD PTR [rsp+0x1bc],0x42400000
  40382d:	mov    DWORD PTR [rsp+0x1c0],0x42440000
  403838:	mov    DWORD PTR [rsp+0x1d0],0x1
  403843:	mov    DWORD PTR [rsp+0x1d4],0x5
  40384e:	mov    DWORD PTR [rsp+0x1d8],0x7
  403859:	mov    DWORD PTR [rsp+0x1dc],0x8
  403864:	mov    DWORD PTR [rsp+0x1e0],0x9
  40386f:	mov    DWORD PTR [rsp+0x1e4],0xb
  40387a:	mov    DWORD PTR [rsp+0x1e8],0xf
  403885:	mov    DWORD PTR [rsp+0x1ec],0x11
  403890:	mov    DWORD PTR [rsp+0x1f0],0x12
  40389b:	mov    DWORD PTR [rsp+0x1f4],0x13
  4038a6:	mov    DWORD PTR [rsp+0x1f8],0x15
  4038b1:	mov    DWORD PTR [rsp+0x1fc],0x19
  4038bc:	mov    DWORD PTR [rsp+0x200],0x1b
  4038c7:	mov    DWORD PTR [rsp+0x204],0x1c
  4038d2:	mov    DWORD PTR [rsp+0x208],0x1d
  4038dd:	mov    DWORD PTR [rsp+0x20c],0x1f
  4038e8:	mov    DWORD PTR [rsp+0x210],0x23
  4038f3:	mov    DWORD PTR [rsp+0x214],0x25
  4038fe:	mov    DWORD PTR [rsp+0x218],0x26
  403909:	mov    DWORD PTR [rsp+0x21c],0x27
  403914:	mov    DWORD PTR [rsp+0x220],0x29
  40391f:	mov    DWORD PTR [rsp+0x224],0x2d
  40392a:	mov    DWORD PTR [rsp+0x228],0x2f
  403935:	mov    DWORD PTR [rsp+0x22c],0x30
  403940:	mov    DWORD PTR [rsp+0x230],0x31
  40394b:	mov    DWORD PTR [rsp+0x240],0x1
  403956:	mov    DWORD PTR [rsp+0x244],0x5
  403961:	mov    DWORD PTR [rsp+0x248],0x7
  40396c:	mov    DWORD PTR [rsp+0x24c],0x8
  403977:	mov    DWORD PTR [rsp+0x250],0x9
  403982:	mov    DWORD PTR [rsp+0x254],0xb
  40398d:	mov    DWORD PTR [rsp+0x258],0xf
  403998:	mov    DWORD PTR [rsp+0x25c],0x11
  4039a3:	mov    DWORD PTR [rsp+0x260],0x12
  4039ae:	mov    DWORD PTR [rsp+0x264],0x13
  4039b9:	mov    DWORD PTR [rsp+0x268],0x15
  4039c4:	mov    DWORD PTR [rsp+0x26c],0x19
  4039cf:	mov    DWORD PTR [rsp+0x270],0x1b
  4039da:	mov    DWORD PTR [rsp+0x274],0x1c
  4039e5:	mov    DWORD PTR [rsp+0x278],0x1d
  4039f0:	mov    DWORD PTR [rsp+0x27c],0x1f
  4039fb:	mov    DWORD PTR [rsp+0x280],0x23
  403a06:	mov    DWORD PTR [rsp+0x284],0x25
  403a11:	mov    DWORD PTR [rsp+0x288],0x26
  403a1c:	mov    DWORD PTR [rsp+0x28c],0x27
  403a27:	mov    DWORD PTR [rsp+0x290],0x29
  403a32:	mov    DWORD PTR [rsp+0x294],0x2d
  403a3d:	mov    DWORD PTR [rsp+0x298],0x2f
  403a48:	mov    DWORD PTR [rsp+0x29c],0x30
  403a53:	mov    DWORD PTR [rsp+0x2a0],0x31
  403a5e:	mov    WORD PTR [rsp+0x70],0x1
  403a65:	mov    WORD PTR [rsp+0x72],0x5
  403a6c:	mov    WORD PTR [rsp+0x74],0x7
  403a73:	mov    WORD PTR [rsp+0x76],0x8
  403a7a:	mov    WORD PTR [rsp+0x78],0x9
  403a81:	mov    WORD PTR [rsp+0x7a],0xb
  403a88:	mov    WORD PTR [rsp+0x7c],0xf
  403a8f:	mov    WORD PTR [rsp+0x7e],0x11
  403a96:	mov    WORD PTR [rsp+0x80],0x12
  403aa0:	mov    WORD PTR [rsp+0x82],0x13
  403aaa:	mov    WORD PTR [rsp+0x84],0x15
  403ab4:	mov    WORD PTR [rsp+0x86],0x19
  403abe:	mov    WORD PTR [rsp+0x88],0x1b
  403ac8:	mov    WORD PTR [rsp+0x8a],0x1c
  403ad2:	mov    WORD PTR [rsp+0x8c],0x1d
  403adc:	mov    WORD PTR [rsp+0x8e],0x1f
  403ae6:	mov    WORD PTR [rsp+0x90],0x23
  403af0:	mov    WORD PTR [rsp+0x92],0x25
  403afa:	mov    WORD PTR [rsp+0x94],0x26
  403b04:	mov    WORD PTR [rsp+0x96],0x27
  403b0e:	mov    WORD PTR [rsp+0x98],0x29
  403b18:	mov    WORD PTR [rsp+0x9a],0x2d
  403b22:	mov    WORD PTR [rsp+0x9c],0x2f
  403b2c:	mov    WORD PTR [rsp+0x9e],0x30
  403b36:	mov    WORD PTR [rsp+0xa0],0x31
  403b40:	mov    WORD PTR [rsp+0xb0],0x1
  403b4a:	mov    WORD PTR [rsp+0xb2],0x5
  403b54:	mov    WORD PTR [rsp+0xb4],0x7
  403b5e:	mov    WORD PTR [rsp+0xb6],0x8
  403b68:	mov    WORD PTR [rsp+0xb8],0x9
  403b72:	mov    WORD PTR [rsp+0xba],0xb
  403b7c:	mov    WORD PTR [rsp+0xbc],0xf
  403b86:	mov    WORD PTR [rsp+0xbe],0x11
  403b90:	mov    WORD PTR [rsp+0xc0],0x12
  403b9a:	mov    WORD PTR [rsp+0xc2],0x13
  403ba4:	mov    WORD PTR [rsp+0xc4],0x15
  403bae:	mov    WORD PTR [rsp+0xc6],0x19
  403bb8:	mov    WORD PTR [rsp+0xc8],0x1b
  403bc2:	mov    WORD PTR [rsp+0xca],0x1c
  403bcc:	mov    WORD PTR [rsp+0xcc],0x1d
  403bd6:	mov    WORD PTR [rsp+0xce],0x1f
  403be0:	mov    WORD PTR [rsp+0xd0],0x23
  403bea:	mov    WORD PTR [rsp+0xd2],0x25
  403bf4:	mov    WORD PTR [rsp+0xd4],0x26
  403bfe:	mov    WORD PTR [rsp+0xd6],0x27
  403c08:	mov    WORD PTR [rsp+0xd8],0x29
  403c12:	mov    WORD PTR [rsp+0xda],0x2d
  403c1c:	mov    WORD PTR [rsp+0xdc],0x2f
  403c26:	mov    WORD PTR [rsp+0xde],0x30
  403c30:	mov    WORD PTR [rsp+0xe0],0x31
  403c3a:	mov    BYTE PTR [rsp+0x520],0x1
  403c42:	mov    BYTE PTR [rsp+0x521],0x5
  403c4a:	mov    BYTE PTR [rsp+0x522],0x7
  403c52:	mov    BYTE PTR [rsp+0x523],0x8
  403c5a:	mov    BYTE PTR [rsp+0x524],0x9
  403c62:	mov    BYTE PTR [rsp+0x525],0xb
  403c6a:	mov    BYTE PTR [rsp+0x526],0xf
  403c72:	mov    BYTE PTR [rsp+0x527],0x11
  403c7a:	mov    BYTE PTR [rsp+0x528],0x12
  403c82:	mov    BYTE PTR [rsp+0x529],0x13
  403c8a:	mov    BYTE PTR [rsp+0x52a],0x15
  403c92:	mov    BYTE PTR [rsp+0x52b],0x19
  403c9a:	mov    BYTE PTR [rsp+0x52c],0x1b
  403ca2:	mov    BYTE PTR [rsp+0x52d],0x1c
  403caa:	mov    BYTE PTR [rsp+0x52e],0x1d
  403cb2:	mov    BYTE PTR [rsp+0x52f],0x1f
  403cba:	mov    BYTE PTR [rsp+0x530],0x23
  403cc2:	mov    BYTE PTR [rsp+0x531],0x25
  403cca:	mov    BYTE PTR [rsp+0x532],0x26
  403cd2:	mov    BYTE PTR [rsp+0x533],0x27
  403cda:	mov    BYTE PTR [rsp+0x534],0x29
  403ce2:	mov    BYTE PTR [rsp+0x535],0x2d
  403cea:	mov    BYTE PTR [rsp+0x536],0x2f
  403cf2:	mov    BYTE PTR [rsp+0x537],0x30
  403cfa:	mov    BYTE PTR [rsp+0x538],0x31
  403d02:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  403d04:	mov    QWORD PTR [rsp+0x8],rax
  403d09:	mov    BYTE PTR [rsp+0x540],0x1
  403d11:	lea    rdi,[rsp+0x450]
  403d19:	mov    BYTE PTR [rsp+0x541],0x5
  403d21:	mov    BYTE PTR [rsp+0x542],0x7
  403d29:	lea    rsi,[rip+0xadf0]        # 40eb20 <getopt_long_only@@Base+0x1b90>
  403d30:	mov    BYTE PTR [rsp+0x543],0x8
  403d38:	mov    BYTE PTR [rsp+0x544],0x9
  403d40:	mov    ecx,0x32
  403d45:	mov    BYTE PTR [rsp+0x545],0xb
  403d4d:	mov    BYTE PTR [rsp+0x546],0xf
  403d55:	lea    rax,[rsp+0x40]
  403d5a:	mov    BYTE PTR [rsp+0x547],0x11
  403d62:	mov    BYTE PTR [rsp+0x548],0x12
  403d6a:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  403d6c:	mov    BYTE PTR [rsp+0x549],0x13
  403d74:	mov    BYTE PTR [rsp+0x54a],0x15
  403d7c:	xor    esi,esi
  403d7e:	mov    BYTE PTR [rsp+0x54b],0x19
  403d86:	mov    BYTE PTR [rsp+0x54c],0x1b
  403d8e:	mov    rdi,r8
  403d91:	mov    BYTE PTR [rsp+0x54d],0x1c
  403d99:	mov    BYTE PTR [rsp+0x54e],0x1d
  403da1:	mov    BYTE PTR [rsp+0x54f],0x1f
  403da9:	mov    BYTE PTR [rsp+0x550],0x23
  403db1:	mov    BYTE PTR [rsp+0x551],0x25
  403db9:	mov    BYTE PTR [rsp+0x552],0x26
  403dc1:	mov    BYTE PTR [rsp+0x553],0x27
  403dc9:	mov    BYTE PTR [rsp+0x554],0x29
  403dd1:	mov    BYTE PTR [rsp+0x555],0x2d
  403dd9:	mov    BYTE PTR [rsp+0x556],0x2f
  403de1:	mov    BYTE PTR [rsp+0x557],0x30
  403de9:	mov    BYTE PTR [rsp+0x558],0x31
  403df1:	mov    DWORD PTR [rsp],0x19
  403df8:	mov    DWORD PTR [rsp+0x10],0x19
  403e00:	mov    DWORD PTR [rsp+0x20],0xb
  403e08:	mov    edx,DWORD PTR [rip+0x113e2]        # 4151f0 <getopt_long_only@@Base+0x8260>
  403e0e:	mov    QWORD PTR [rsp+0x18],rax
  403e13:	mov    DWORD PTR [rsp+0x24],0x19
  403e1b:	call   402310 <Mat_CreateVer@plt>
  403e20:	test   rax,rax
  403e23:	je     403fdf <Mat_VarRead@plt+0x1c3f>
  403e29:	lea    edi,[r12-0x6]
  403e2e:	mov    r13,rax
  403e31:	cmp    edi,0x9
  403e34:	ja     403f2a <Mat_VarRead@plt+0x1b8a>
  403e3a:	lea    rdx,[rip+0xada7]        # 40ebe8 <getopt_long_only@@Base+0x1c58>
  403e41:	movsxd rax,DWORD PTR [rdx+rdi*4]
  403e45:	add    rax,rdx
  403e48:	jmp    rax
  403e4a:	lea    rax,[rsp+0x2b0]
  403e52:	mov    ebp,0x9
  403e57:	xor    ebx,ebx
  403e59:	mov    QWORD PTR [rsp+0x28],rax
  403e5e:	jmp    403f2a <Mat_VarRead@plt+0x1b8a>
  403e63:	lea    rax,[rsp+0x160]
  403e6b:	mov    ebp,0x7
  403e70:	xor    ebx,ebx
  403e72:	mov    QWORD PTR [rsp+0x28],rax
  403e77:	jmp    403f2a <Mat_VarRead@plt+0x1b8a>
  403e7c:	lea    rax,[rsp+0x380]
  403e84:	mov    ebp,0xc
  403e89:	xor    ebx,ebx
  403e8b:	mov    QWORD PTR [rsp+0x28],rax
  403e90:	jmp    403f2a <Mat_VarRead@plt+0x1b8a>
  403e95:	lea    rax,[rsp+0x450]
  403e9d:	mov    ebp,0xd
  403ea2:	xor    ebx,ebx
  403ea4:	mov    QWORD PTR [rsp+0x28],rax
  403ea9:	jmp    403f2a <Mat_VarRead@plt+0x1b8a>
  403eab:	lea    rax,[rsp+0x1d0]
  403eb3:	mov    ebp,0x5
  403eb8:	xor    ebx,ebx
  403eba:	mov    QWORD PTR [rsp+0x28],rax
  403ebf:	jmp    403f2a <Mat_VarRead@plt+0x1b8a>
  403ec1:	lea    rax,[rsp+0x240]
  403ec9:	mov    ebp,0x6
  403ece:	xor    ebx,ebx
  403ed0:	mov    QWORD PTR [rsp+0x28],rax
  403ed5:	jmp    403f2a <Mat_VarRead@plt+0x1b8a>
  403ed7:	lea    rax,[rsp+0x70]
  403edc:	mov    ebp,0x3
  403ee1:	xor    ebx,ebx
  403ee3:	mov    QWORD PTR [rsp+0x28],rax
  403ee8:	jmp    403f2a <Mat_VarRead@plt+0x1b8a>
  403eea:	lea    rax,[rsp+0xb0]
  403ef2:	mov    ebp,0x4
  403ef7:	xor    ebx,ebx
  403ef9:	mov    QWORD PTR [rsp+0x28],rax
  403efe:	jmp    403f2a <Mat_VarRead@plt+0x1b8a>
  403f00:	lea    rax,[rsp+0x520]
  403f08:	mov    ebp,0x1
  403f0d:	xor    ebx,ebx
  403f0f:	mov    QWORD PTR [rsp+0x28],rax
  403f14:	jmp    403f2a <Mat_VarRead@plt+0x1b8a>
  403f16:	lea    rax,[rsp+0x540]
  403f1e:	mov    ebp,0x2
  403f23:	xor    ebx,ebx
  403f25:	mov    QWORD PTR [rsp+0x28],rax
  403f2a:	cmp    QWORD PTR [rsp+0x28],0x0
  403f30:	je     403fd2 <Mat_VarRead@plt+0x1c32>
  403f36:	lea    r14,[rsp+0x30]
  403f3b:	sub    rsp,0x8
  403f3f:	lea    rdi,[rip+0xa146]        # 40e08c <getopt_long_only@@Base+0x10fc>
  403f46:	push   0x1
  403f48:	mov    ecx,0x2
  403f4d:	mov    esi,0x5
  403f52:	mov    r8,r14
  403f55:	mov    edx,ebp
  403f57:	lea    r9,[rsp+0x10]
  403f5c:	call   4020d0 <Mat_VarCreate@plt>
  403f61:	test   rax,rax
  403f64:	mov    r12,rax
  403f67:	pop    rcx
  403f68:	pop    rsi
  403f69:	je     403fbd <Mat_VarRead@plt+0x1c1d>
  403f6b:	sub    rsp,0x8
  403f6f:	mov    r9,QWORD PTR [rax+0x38]
  403f73:	lea    rdi,[rip+0xa112]        # 40e08c <getopt_long_only@@Base+0x10fc>
  403f7a:	push   0x0
  403f7c:	mov    edx,ebp
  403f7e:	mov    r8,r14
  403f81:	mov    ecx,0x2
  403f86:	mov    esi,0x5
  403f8b:	call   4020d0 <Mat_VarCreate@plt>
  403f90:	mov    rdi,r12
  403f93:	mov    rbp,rax
  403f96:	call   402230 <Mat_VarFree@plt>
  403f9b:	test   rbp,rbp
  403f9e:	pop    rax
  403f9f:	pop    rdx
  403fa0:	je     403fbd <Mat_VarRead@plt+0x1c1d>
  403fa2:	mov    edx,DWORD PTR [rip+0x1257c]        # 416524 <opterr@@Base+0x10>
  403fa8:	mov    rdi,r13
  403fab:	mov    rsi,rbp
  403fae:	call   4020f0 <Mat_VarWrite@plt>
  403fb3:	mov    rdi,rbp
  403fb6:	call   402230 <Mat_VarFree@plt>
  403fbb:	jmp    403fd7 <Mat_VarRead@plt+0x1c37>
  403fbd:	lea    rdi,[rip+0xaf6c]        # 40ef30 <getopt_long_only@@Base+0x1fa0>
  403fc4:	xor    eax,eax
  403fc6:	mov    ebx,0x1
  403fcb:	call   4022a0 <Mat_Critical@plt>
  403fd0:	jmp    403fd7 <Mat_VarRead@plt+0x1c37>
  403fd2:	mov    ebx,0x1
  403fd7:	mov    rdi,r13
  403fda:	call   402290 <Mat_Close@plt>
  403fdf:	mov    rdx,QWORD PTR [rsp+0x568]
  403fe7:	xor    rdx,QWORD PTR fs:0x28
  403ff0:	mov    eax,ebx
  403ff2:	je     403ff9 <Mat_VarRead@plt+0x1c59>
  403ff4:	call   402140 <__stack_chk_fail@plt>
  403ff9:	add    rsp,0x570
  404000:	pop    rbx
  404001:	pop    rbp
  404002:	pop    r12
  404004:	pop    r13
  404006:	pop    r14
  404008:	ret    
  404009:	push   r14
  40400b:	push   r13
  40400d:	mov    ecx,0xc
  404012:	push   r12
  404014:	push   rbp
  404015:	mov    r12d,edi
  404018:	push   rbx
  404019:	mov    r8,rsi
  40401c:	lea    rsi,[rip+0xaa1d]        # 40ea40 <getopt_long_only@@Base+0x1ab0>
  404023:	mov    ebx,0x1
  404028:	sub    rsp,0xa00
  40402f:	mov    rax,QWORD PTR fs:0x28
  404038:	mov    QWORD PTR [rsp+0x9f8],rax
  404040:	xor    eax,eax
  404042:	lea    rdi,[rsp+0x10]
  404047:	mov    QWORD PTR [rsp+0x40],0x5
  404050:	mov    QWORD PTR [rsp+0x48],0xa
  404059:	mov    DWORD PTR [rsp+0x180],0x0
  404064:	mov    DWORD PTR [rsp+0x184],0x4
  40406f:	mov    DWORD PTR [rsp+0x188],0x1
  40407a:	mov    DWORD PTR [rsp+0x18c],0x2
  404085:	mov    DWORD PTR [rsp+0x190],0x3
  404090:	mov    DWORD PTR [rsp+0x194],0x0
  40409b:	mov    DWORD PTR [rsp+0x198],0x4
  4040a6:	mov    DWORD PTR [rsp+0x19c],0x1
  4040b1:	mov    DWORD PTR [rsp+0x1a0],0x2
  4040bc:	mov    DWORD PTR [rsp+0x1a4],0x3
  4040c7:	mov    DWORD PTR [rsp+0x1a8],0x0
  4040d2:	mov    DWORD PTR [rsp+0x1ac],0x4
  4040dd:	mov    DWORD PTR [rsp+0x1b0],0x1
  4040e8:	mov    DWORD PTR [rsp+0x1b4],0x2
  4040f3:	mov    DWORD PTR [rsp+0x1b8],0x3
  4040fe:	mov    DWORD PTR [rsp+0x1bc],0x0
  404109:	mov    DWORD PTR [rsp+0x1c0],0x4
  404114:	mov    DWORD PTR [rsp+0x1c4],0x1
  40411f:	mov    DWORD PTR [rsp+0x1c8],0x2
  40412a:	mov    DWORD PTR [rsp+0x1cc],0x3
  404135:	mov    DWORD PTR [rsp+0x1d0],0x0
  404140:	mov    DWORD PTR [rsp+0x1d4],0x4
  40414b:	mov    DWORD PTR [rsp+0x1d8],0x1
  404156:	mov    DWORD PTR [rsp+0x1dc],0x2
  404161:	rep stos DWORD PTR es:[rdi],eax
  404163:	lea    rax,[rsp+0x180]
  40416b:	mov    DWORD PTR [rsp+0x1e0],0x3
  404176:	mov    DWORD PTR [rsp+0x50],0x0
  40417e:	mov    DWORD PTR [rsp+0x54],0x2
  404186:	mov    DWORD PTR [rsp+0x58],0x5
  40418e:	lea    rdi,[rsp+0x490]
  404196:	mov    DWORD PTR [rsp+0x5c],0x7
  40419e:	mov    DWORD PTR [rsp+0x60],0xa
  4041a6:	mov    ecx,0x32
  4041ab:	mov    DWORD PTR [rsp+0x64],0xc
  4041b3:	mov    DWORD PTR [rsp+0x68],0xf
  4041bb:	mov    DWORD PTR [rsp+0x6c],0x11
  4041c3:	mov    DWORD PTR [rsp+0x70],0x14
  4041cb:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4041cd:	mov    DWORD PTR [rsp+0x74],0x16
  4041d5:	mov    DWORD PTR [rsp+0x78],0x19
  4041dd:	lea    rdi,[rsp+0x560]
  4041e5:	mov    QWORD PTR [rsp],0x0
  4041ed:	mov    QWORD PTR [rsp+0x8],0x0
  4041f6:	lea    rsi,[rip+0xaa23]        # 40ec20 <getopt_long_only@@Base+0x1c90>
  4041fd:	mov    ecx,0x32
  404202:	mov    DWORD PTR [rsp+0x1f0],0x3f800000
  40420d:	mov    DWORD PTR [rsp+0x1f4],0x40a00000
  404218:	mov    DWORD PTR [rsp+0x1f8],0x40e00000
  404223:	mov    DWORD PTR [rsp+0x1fc],0x41000000
  40422e:	mov    DWORD PTR [rsp+0x200],0x41100000
  404239:	mov    DWORD PTR [rsp+0x204],0x41300000
  404244:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  404246:	mov    DWORD PTR [rsp+0x208],0x41700000
  404251:	mov    DWORD PTR [rsp+0x20c],0x41880000
  40425c:	lea    rdi,[rsp+0x630]
  404264:	mov    DWORD PTR [rsp+0x210],0x41900000
  40426f:	mov    DWORD PTR [rsp+0x214],0x41980000
  40427a:	lea    rsi,[rip+0xa89f]        # 40eb20 <getopt_long_only@@Base+0x1b90>
  404281:	mov    DWORD PTR [rsp+0x218],0x41a80000
  40428c:	mov    DWORD PTR [rsp+0x21c],0x41c80000
  404297:	mov    ecx,0x32
  40429c:	mov    DWORD PTR [rsp+0x220],0x41d80000
  4042a7:	mov    DWORD PTR [rsp+0x224],0x41e00000
  4042b2:	mov    DWORD PTR [rsp+0x228],0x41e80000
  4042bd:	mov    DWORD PTR [rsp+0x22c],0x41f80000
  4042c8:	mov    DWORD PTR [rsp+0x230],0x420c0000
  4042d3:	mov    DWORD PTR [rsp+0x234],0x42140000
  4042de:	mov    DWORD PTR [rsp+0x238],0x42180000
  4042e9:	mov    DWORD PTR [rsp+0x23c],0x421c0000
  4042f4:	mov    DWORD PTR [rsp+0x240],0x42240000
  4042ff:	mov    DWORD PTR [rsp+0x244],0x42340000
  40430a:	mov    DWORD PTR [rsp+0x248],0x423c0000
  404315:	mov    DWORD PTR [rsp+0x24c],0x42400000
  404320:	mov    DWORD PTR [rsp+0x250],0x42440000
  40432b:	mov    DWORD PTR [rsp+0x260],0x424c0000
  404336:	mov    DWORD PTR [rsp+0x264],0x425c0000
  404341:	mov    DWORD PTR [rsp+0x268],0x42640000
  40434c:	mov    DWORD PTR [rsp+0x26c],0x42680000
  404357:	mov    DWORD PTR [rsp+0x270],0x426c0000
  404362:	mov    DWORD PTR [rsp+0x274],0x42740000
  40436d:	mov    DWORD PTR [rsp+0x278],0x42820000
  404378:	mov    DWORD PTR [rsp+0x27c],0x42860000
  404383:	mov    DWORD PTR [rsp+0x280],0x42880000
  40438e:	mov    DWORD PTR [rsp+0x284],0x428a0000
  404399:	mov    DWORD PTR [rsp+0x288],0x428e0000
  4043a4:	mov    DWORD PTR [rsp+0x28c],0x42960000
  4043af:	mov    DWORD PTR [rsp+0x290],0x429a0000
  4043ba:	mov    DWORD PTR [rsp+0x294],0x429c0000
  4043c5:	mov    DWORD PTR [rsp+0x298],0x429e0000
  4043d0:	mov    DWORD PTR [rsp+0x29c],0x42a20000
  4043db:	mov    DWORD PTR [rsp+0x2a0],0x42aa0000
  4043e6:	mov    DWORD PTR [rsp+0x2a4],0x42ae0000
  4043f1:	mov    DWORD PTR [rsp+0x2a8],0x42b00000
  4043fc:	mov    DWORD PTR [rsp+0x2ac],0x42b20000
  404407:	mov    DWORD PTR [rsp+0x2b0],0x42b60000
  404412:	mov    DWORD PTR [rsp+0x2b4],0x42be0000
  40441d:	mov    DWORD PTR [rsp+0x2b8],0x42c20000
  404428:	mov    DWORD PTR [rsp+0x2bc],0x42c40000
  404433:	mov    DWORD PTR [rsp+0x2c0],0x42c60000
  40443e:	mov    DWORD PTR [rsp+0x2d0],0x1
  404449:	mov    DWORD PTR [rsp+0x2d4],0x5
  404454:	mov    DWORD PTR [rsp+0x2d8],0x7
  40445f:	mov    DWORD PTR [rsp+0x2dc],0x8
  40446a:	mov    DWORD PTR [rsp+0x2e0],0x9
  404475:	mov    DWORD PTR [rsp+0x2e4],0xb
  404480:	mov    DWORD PTR [rsp+0x2e8],0xf
  40448b:	mov    DWORD PTR [rsp+0x2ec],0x11
  404496:	mov    DWORD PTR [rsp+0x2f0],0x12
  4044a1:	mov    DWORD PTR [rsp+0x2f4],0x13
  4044ac:	mov    DWORD PTR [rsp+0x2f8],0x15
  4044b7:	mov    DWORD PTR [rsp+0x2fc],0x19
  4044c2:	mov    DWORD PTR [rsp+0x300],0x1b
  4044cd:	mov    DWORD PTR [rsp+0x304],0x1c
  4044d8:	mov    DWORD PTR [rsp+0x308],0x1d
  4044e3:	mov    DWORD PTR [rsp+0x30c],0x1f
  4044ee:	mov    DWORD PTR [rsp+0x310],0x23
  4044f9:	mov    DWORD PTR [rsp+0x314],0x25
  404504:	mov    DWORD PTR [rsp+0x318],0x26
  40450f:	mov    DWORD PTR [rsp+0x31c],0x27
  40451a:	mov    DWORD PTR [rsp+0x320],0x29
  404525:	mov    DWORD PTR [rsp+0x324],0x2d
  404530:	mov    DWORD PTR [rsp+0x328],0x2f
  40453b:	mov    DWORD PTR [rsp+0x32c],0x30
  404546:	mov    DWORD PTR [rsp+0x330],0x31
  404551:	mov    DWORD PTR [rsp+0x340],0x33
  40455c:	mov    DWORD PTR [rsp+0x344],0x37
  404567:	mov    DWORD PTR [rsp+0x348],0x39
  404572:	mov    DWORD PTR [rsp+0x34c],0x3a
  40457d:	mov    DWORD PTR [rsp+0x350],0x3b
  404588:	mov    DWORD PTR [rsp+0x354],0x3d
  404593:	mov    DWORD PTR [rsp+0x358],0x41
  40459e:	mov    DWORD PTR [rsp+0x35c],0x43
  4045a9:	mov    DWORD PTR [rsp+0x360],0x44
  4045b4:	mov    DWORD PTR [rsp+0x364],0x45
  4045bf:	mov    DWORD PTR [rsp+0x368],0x47
  4045ca:	mov    DWORD PTR [rsp+0x36c],0x4b
  4045d5:	mov    DWORD PTR [rsp+0x370],0x4d
  4045e0:	mov    DWORD PTR [rsp+0x374],0x4e
  4045eb:	mov    DWORD PTR [rsp+0x378],0x4f
  4045f6:	mov    DWORD PTR [rsp+0x37c],0x51
  404601:	mov    DWORD PTR [rsp+0x380],0x55
  40460c:	mov    DWORD PTR [rsp+0x384],0x57
  404617:	mov    DWORD PTR [rsp+0x388],0x58
  404622:	mov    DWORD PTR [rsp+0x38c],0x59
  40462d:	mov    DWORD PTR [rsp+0x390],0x5b
  404638:	mov    DWORD PTR [rsp+0x394],0x5f
  404643:	mov    DWORD PTR [rsp+0x398],0x61
  40464e:	mov    DWORD PTR [rsp+0x39c],0x62
  404659:	mov    DWORD PTR [rsp+0x3a0],0x63
  404664:	mov    DWORD PTR [rsp+0x3b0],0x1
  40466f:	mov    DWORD PTR [rsp+0x3b4],0x5
  40467a:	mov    DWORD PTR [rsp+0x3b8],0x7
  404685:	mov    DWORD PTR [rsp+0x3bc],0x8
  404690:	mov    DWORD PTR [rsp+0x3c0],0x9
  40469b:	mov    DWORD PTR [rsp+0x3c4],0xb
  4046a6:	mov    DWORD PTR [rsp+0x3c8],0xf
  4046b1:	mov    DWORD PTR [rsp+0x3cc],0x11
  4046bc:	mov    DWORD PTR [rsp+0x3d0],0x12
  4046c7:	mov    DWORD PTR [rsp+0x3d4],0x13
  4046d2:	mov    DWORD PTR [rsp+0x3d8],0x15
  4046dd:	mov    DWORD PTR [rsp+0x3dc],0x19
  4046e8:	mov    DWORD PTR [rsp+0x3e0],0x1b
  4046f3:	mov    DWORD PTR [rsp+0x3e4],0x1c
  4046fe:	mov    DWORD PTR [rsp+0x3e8],0x1d
  404709:	mov    DWORD PTR [rsp+0x3ec],0x1f
  404714:	mov    DWORD PTR [rsp+0x3f0],0x23
  40471f:	mov    DWORD PTR [rsp+0x3f4],0x25
  40472a:	mov    DWORD PTR [rsp+0x3f8],0x26
  404735:	mov    DWORD PTR [rsp+0x3fc],0x27
  404740:	mov    DWORD PTR [rsp+0x400],0x29
  40474b:	mov    DWORD PTR [rsp+0x404],0x2d
  404756:	mov    DWORD PTR [rsp+0x408],0x2f
  404761:	mov    DWORD PTR [rsp+0x40c],0x30
  40476c:	mov    DWORD PTR [rsp+0x410],0x31
  404777:	mov    DWORD PTR [rsp+0x420],0x33
  404782:	mov    DWORD PTR [rsp+0x424],0x37
  40478d:	mov    DWORD PTR [rsp+0x428],0x39
  404798:	mov    DWORD PTR [rsp+0x42c],0x3a
  4047a3:	mov    DWORD PTR [rsp+0x430],0x3b
  4047ae:	mov    DWORD PTR [rsp+0x434],0x3d
  4047b9:	mov    DWORD PTR [rsp+0x438],0x41
  4047c4:	mov    DWORD PTR [rsp+0x43c],0x43
  4047cf:	mov    DWORD PTR [rsp+0x440],0x44
  4047da:	mov    DWORD PTR [rsp+0x444],0x45
  4047e5:	mov    DWORD PTR [rsp+0x448],0x47
  4047f0:	mov    DWORD PTR [rsp+0x44c],0x4b
  4047fb:	mov    DWORD PTR [rsp+0x450],0x4d
  404806:	mov    DWORD PTR [rsp+0x454],0x4e
  404811:	mov    DWORD PTR [rsp+0x458],0x4f
  40481c:	mov    DWORD PTR [rsp+0x45c],0x51
  404827:	mov    DWORD PTR [rsp+0x460],0x55
  404832:	mov    DWORD PTR [rsp+0x464],0x57
  40483d:	mov    DWORD PTR [rsp+0x468],0x58
  404848:	mov    DWORD PTR [rsp+0x46c],0x59
  404853:	mov    DWORD PTR [rsp+0x470],0x5b
  40485e:	mov    DWORD PTR [rsp+0x474],0x5f
  404869:	mov    DWORD PTR [rsp+0x478],0x61
  404874:	mov    DWORD PTR [rsp+0x47c],0x62
  40487f:	mov    DWORD PTR [rsp+0x480],0x63
  40488a:	mov    WORD PTR [rsp+0x80],0x1
  404894:	mov    WORD PTR [rsp+0x82],0x5
  40489e:	mov    WORD PTR [rsp+0x84],0x7
  4048a8:	mov    WORD PTR [rsp+0x86],0x8
  4048b2:	mov    WORD PTR [rsp+0x88],0x9
  4048bc:	mov    WORD PTR [rsp+0x8a],0xb
  4048c6:	mov    WORD PTR [rsp+0x8c],0xf
  4048d0:	mov    WORD PTR [rsp+0x8e],0x11
  4048da:	mov    WORD PTR [rsp+0x90],0x12
  4048e4:	mov    WORD PTR [rsp+0x92],0x13
  4048ee:	mov    WORD PTR [rsp+0x94],0x15
  4048f8:	mov    WORD PTR [rsp+0x96],0x19
  404902:	mov    WORD PTR [rsp+0x98],0x1b
  40490c:	mov    WORD PTR [rsp+0x9a],0x1c
  404916:	mov    WORD PTR [rsp+0x9c],0x1d
  404920:	mov    WORD PTR [rsp+0x9e],0x1f
  40492a:	mov    WORD PTR [rsp+0xa0],0x23
  404934:	mov    WORD PTR [rsp+0xa2],0x25
  40493e:	mov    WORD PTR [rsp+0xa4],0x26
  404948:	mov    WORD PTR [rsp+0xa6],0x27
  404952:	mov    WORD PTR [rsp+0xa8],0x29
  40495c:	mov    WORD PTR [rsp+0xaa],0x2d
  404966:	mov    WORD PTR [rsp+0xac],0x2f
  404970:	mov    WORD PTR [rsp+0xae],0x30
  40497a:	mov    WORD PTR [rsp+0xb0],0x31
  404984:	mov    WORD PTR [rsp+0xc0],0x33
  40498e:	mov    WORD PTR [rsp+0xc2],0x37
  404998:	mov    WORD PTR [rsp+0xc4],0x39
  4049a2:	mov    WORD PTR [rsp+0xc6],0x3a
  4049ac:	mov    WORD PTR [rsp+0xc8],0x3b
  4049b6:	mov    WORD PTR [rsp+0xca],0x3d
  4049c0:	mov    WORD PTR [rsp+0xcc],0x41
  4049ca:	mov    WORD PTR [rsp+0xce],0x43
  4049d4:	mov    WORD PTR [rsp+0xd0],0x44
  4049de:	mov    WORD PTR [rsp+0xd2],0x45
  4049e8:	mov    WORD PTR [rsp+0xd4],0x47
  4049f2:	mov    WORD PTR [rsp+0xd6],0x4b
  4049fc:	mov    WORD PTR [rsp+0xd8],0x4d
  404a06:	mov    WORD PTR [rsp+0xda],0x4e
  404a10:	mov    WORD PTR [rsp+0xdc],0x4f
  404a1a:	mov    WORD PTR [rsp+0xde],0x51
  404a24:	mov    WORD PTR [rsp+0xe0],0x55
  404a2e:	mov    WORD PTR [rsp+0xe2],0x57
  404a38:	mov    WORD PTR [rsp+0xe4],0x58
  404a42:	mov    WORD PTR [rsp+0xe6],0x59
  404a4c:	mov    WORD PTR [rsp+0xe8],0x5b
  404a56:	mov    WORD PTR [rsp+0xea],0x5f
  404a60:	mov    WORD PTR [rsp+0xec],0x61
  404a6a:	mov    WORD PTR [rsp+0xee],0x62
  404a74:	mov    WORD PTR [rsp+0xf0],0x63
  404a7e:	mov    WORD PTR [rsp+0x100],0x1
  404a88:	mov    WORD PTR [rsp+0x102],0x5
  404a92:	mov    WORD PTR [rsp+0x104],0x7
  404a9c:	mov    WORD PTR [rsp+0x106],0x8
  404aa6:	mov    WORD PTR [rsp+0x108],0x9
  404ab0:	mov    WORD PTR [rsp+0x10a],0xb
  404aba:	mov    WORD PTR [rsp+0x10c],0xf
  404ac4:	mov    WORD PTR [rsp+0x10e],0x11
  404ace:	mov    WORD PTR [rsp+0x110],0x12
  404ad8:	mov    WORD PTR [rsp+0x112],0x13
  404ae2:	mov    WORD PTR [rsp+0x114],0x15
  404aec:	mov    WORD PTR [rsp+0x116],0x19
  404af6:	mov    WORD PTR [rsp+0x118],0x1b
  404b00:	mov    WORD PTR [rsp+0x11a],0x1c
  404b0a:	mov    WORD PTR [rsp+0x11c],0x1d
  404b14:	mov    WORD PTR [rsp+0x11e],0x1f
  404b1e:	mov    WORD PTR [rsp+0x120],0x23
  404b28:	mov    WORD PTR [rsp+0x122],0x25
  404b32:	mov    WORD PTR [rsp+0x124],0x26
  404b3c:	mov    WORD PTR [rsp+0x126],0x27
  404b46:	mov    WORD PTR [rsp+0x128],0x29
  404b50:	mov    WORD PTR [rsp+0x12a],0x2d
  404b5a:	mov    WORD PTR [rsp+0x12c],0x2f
  404b64:	mov    WORD PTR [rsp+0x12e],0x30
  404b6e:	mov    WORD PTR [rsp+0x130],0x31
  404b78:	mov    WORD PTR [rsp+0x140],0x33
  404b82:	mov    WORD PTR [rsp+0x142],0x37
  404b8c:	mov    WORD PTR [rsp+0x144],0x39
  404b96:	mov    WORD PTR [rsp+0x146],0x3a
  404ba0:	mov    WORD PTR [rsp+0x148],0x3b
  404baa:	mov    WORD PTR [rsp+0x14a],0x3d
  404bb4:	mov    WORD PTR [rsp+0x14c],0x41
  404bbe:	mov    WORD PTR [rsp+0x14e],0x43
  404bc8:	mov    WORD PTR [rsp+0x150],0x44
  404bd2:	mov    WORD PTR [rsp+0x152],0x45
  404bdc:	mov    WORD PTR [rsp+0x154],0x47
  404be6:	mov    WORD PTR [rsp+0x156],0x4b
  404bf0:	mov    WORD PTR [rsp+0x158],0x4d
  404bfa:	mov    WORD PTR [rsp+0x15a],0x4e
  404c04:	mov    WORD PTR [rsp+0x15c],0x4f
  404c0e:	mov    WORD PTR [rsp+0x15e],0x51
  404c18:	mov    WORD PTR [rsp+0x160],0x55
  404c22:	mov    WORD PTR [rsp+0x162],0x57
  404c2c:	mov    WORD PTR [rsp+0x164],0x58
  404c36:	mov    WORD PTR [rsp+0x166],0x59
  404c40:	mov    WORD PTR [rsp+0x168],0x5b
  404c4a:	mov    WORD PTR [rsp+0x16a],0x5f
  404c54:	mov    WORD PTR [rsp+0x16c],0x61
  404c5e:	mov    WORD PTR [rsp+0x16e],0x62
  404c68:	mov    WORD PTR [rsp+0x170],0x63
  404c72:	mov    BYTE PTR [rsp+0x970],0x1
  404c7a:	mov    BYTE PTR [rsp+0x971],0x5
  404c82:	mov    BYTE PTR [rsp+0x972],0x7
  404c8a:	mov    BYTE PTR [rsp+0x973],0x8
  404c92:	mov    BYTE PTR [rsp+0x974],0x9
  404c9a:	mov    BYTE PTR [rsp+0x975],0xb
  404ca2:	mov    BYTE PTR [rsp+0x976],0xf
  404caa:	mov    BYTE PTR [rsp+0x977],0x11
  404cb2:	mov    BYTE PTR [rsp+0x978],0x12
  404cba:	mov    BYTE PTR [rsp+0x979],0x13
  404cc2:	mov    BYTE PTR [rsp+0x97a],0x15
  404cca:	mov    BYTE PTR [rsp+0x97b],0x19
  404cd2:	mov    BYTE PTR [rsp+0x97c],0x1b
  404cda:	mov    BYTE PTR [rsp+0x97d],0x1c
  404ce2:	mov    BYTE PTR [rsp+0x97e],0x1d
  404cea:	mov    BYTE PTR [rsp+0x97f],0x1f
  404cf2:	mov    BYTE PTR [rsp+0x980],0x23
  404cfa:	mov    BYTE PTR [rsp+0x981],0x25
  404d02:	mov    BYTE PTR [rsp+0x982],0x26
  404d0a:	mov    BYTE PTR [rsp+0x983],0x27
  404d12:	mov    BYTE PTR [rsp+0x984],0x29
  404d1a:	mov    BYTE PTR [rsp+0x985],0x2d
  404d22:	mov    BYTE PTR [rsp+0x986],0x2f
  404d2a:	mov    BYTE PTR [rsp+0x987],0x30
  404d32:	mov    BYTE PTR [rsp+0x988],0x31
  404d3a:	mov    BYTE PTR [rsp+0x990],0x33
  404d42:	mov    BYTE PTR [rsp+0x991],0x37
  404d4a:	mov    BYTE PTR [rsp+0x992],0x39
  404d52:	mov    BYTE PTR [rsp+0x993],0x3a
  404d5a:	mov    BYTE PTR [rsp+0x994],0x3b
  404d62:	mov    BYTE PTR [rsp+0x995],0x3d
  404d6a:	mov    BYTE PTR [rsp+0x996],0x41
  404d72:	mov    BYTE PTR [rsp+0x997],0x43
  404d7a:	mov    BYTE PTR [rsp+0x998],0x44
  404d82:	mov    BYTE PTR [rsp+0x999],0x45
  404d8a:	mov    BYTE PTR [rsp+0x99a],0x47
  404d92:	mov    BYTE PTR [rsp+0x99b],0x4b
  404d9a:	mov    BYTE PTR [rsp+0x99c],0x4d
  404da2:	mov    BYTE PTR [rsp+0x99d],0x4e
  404daa:	mov    BYTE PTR [rsp+0x99e],0x4f
  404db2:	mov    BYTE PTR [rsp+0x99f],0x51
  404dba:	mov    BYTE PTR [rsp+0x9a0],0x55
  404dc2:	mov    BYTE PTR [rsp+0x9a1],0x57
  404dca:	mov    BYTE PTR [rsp+0x9a2],0x58
  404dd2:	mov    BYTE PTR [rsp+0x9a3],0x59
  404dda:	mov    BYTE PTR [rsp+0x9a4],0x5b
  404de2:	mov    BYTE PTR [rsp+0x9a5],0x5f
  404dea:	mov    BYTE PTR [rsp+0x9a6],0x61
  404df2:	mov    BYTE PTR [rsp+0x9a7],0x62
  404dfa:	mov    BYTE PTR [rsp+0x9a8],0x63
  404e02:	mov    BYTE PTR [rsp+0x9b0],0x1
  404e0a:	mov    BYTE PTR [rsp+0x9b1],0x5
  404e12:	mov    BYTE PTR [rsp+0x9b2],0x7
  404e1a:	mov    BYTE PTR [rsp+0x9b3],0x8
  404e22:	mov    BYTE PTR [rsp+0x9b4],0x9
  404e2a:	mov    BYTE PTR [rsp+0x9b5],0xb
  404e32:	mov    BYTE PTR [rsp+0x9b6],0xf
  404e3a:	mov    BYTE PTR [rsp+0x9b7],0x11
  404e42:	mov    BYTE PTR [rsp+0x9b8],0x12
  404e4a:	mov    BYTE PTR [rsp+0x9b9],0x13
  404e52:	mov    BYTE PTR [rsp+0x9ba],0x15
  404e5a:	mov    BYTE PTR [rsp+0x9bb],0x19
  404e62:	mov    BYTE PTR [rsp+0x9bc],0x1b
  404e6a:	mov    BYTE PTR [rsp+0x9bd],0x1c
  404e72:	mov    BYTE PTR [rsp+0x9be],0x1d
  404e7a:	mov    BYTE PTR [rsp+0x9bf],0x1f
  404e82:	mov    BYTE PTR [rsp+0x9c0],0x23
  404e8a:	mov    BYTE PTR [rsp+0x9c1],0x25
  404e92:	mov    BYTE PTR [rsp+0x9c2],0x26
  404e9a:	mov    BYTE PTR [rsp+0x9c3],0x27
  404ea2:	mov    BYTE PTR [rsp+0x9c4],0x29
  404eaa:	mov    BYTE PTR [rsp+0x9c5],0x2d
  404eb2:	mov    BYTE PTR [rsp+0x9c6],0x2f
  404eba:	mov    BYTE PTR [rsp+0x9c7],0x30
  404ec2:	mov    BYTE PTR [rsp+0x9c8],0x31
  404eca:	mov    BYTE PTR [rsp+0x9d0],0x33
  404ed2:	mov    BYTE PTR [rsp+0x9d1],0x37
  404eda:	mov    BYTE PTR [rsp+0x9d2],0x39
  404ee2:	mov    BYTE PTR [rsp+0x9d3],0x3a
  404eea:	mov    BYTE PTR [rsp+0x9d4],0x3b
  404ef2:	mov    BYTE PTR [rsp+0x9d5],0x3d
  404efa:	mov    BYTE PTR [rsp+0x9d6],0x41
  404f02:	mov    BYTE PTR [rsp+0x9d7],0x43
  404f0a:	mov    BYTE PTR [rsp+0x9d8],0x44
  404f12:	mov    BYTE PTR [rsp+0x9d9],0x45
  404f1a:	mov    BYTE PTR [rsp+0x9da],0x47
  404f22:	mov    BYTE PTR [rsp+0x9db],0x4b
  404f2a:	mov    BYTE PTR [rsp+0x9dc],0x4d
  404f32:	mov    BYTE PTR [rsp+0x9dd],0x4e
  404f3a:	mov    BYTE PTR [rsp+0x9de],0x4f
  404f42:	mov    BYTE PTR [rsp+0x9df],0x51
  404f4a:	mov    BYTE PTR [rsp+0x9e0],0x55
  404f52:	mov    BYTE PTR [rsp+0x9e1],0x57
  404f5a:	mov    BYTE PTR [rsp+0x9e2],0x58
  404f62:	mov    edx,DWORD PTR [rip+0x10288]        # 4151f0 <getopt_long_only@@Base+0x8260>
  404f68:	mov    QWORD PTR [rsp+0x18],rax
  404f6d:	lea    rax,[rsp+0x50]
  404f72:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  404f74:	lea    rdi,[rsp+0x700]
  404f7c:	lea    rsi,[rip+0x9d7d]        # 40ed00 <getopt_long_only@@Base+0x1d70>
  404f83:	mov    ecx,0x32
  404f88:	mov    BYTE PTR [rsp+0x9e3],0x59
  404f90:	mov    BYTE PTR [rsp+0x9e4],0x5b
  404f98:	mov    BYTE PTR [rsp+0x9e5],0x5f
  404fa0:	mov    BYTE PTR [rsp+0x9e6],0x61
  404fa8:	mov    BYTE PTR [rsp+0x9e7],0x62
  404fb0:	mov    BYTE PTR [rsp+0x9e8],0x63
  404fb8:	mov    DWORD PTR [rsp+0x10],0x19
  404fc0:	mov    DWORD PTR [rsp+0x20],0x19
  404fc8:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  404fca:	lea    rdi,[rsp+0x7d0]
  404fd2:	lea    rsi,[rip+0x9b47]        # 40eb20 <getopt_long_only@@Base+0x1b90>
  404fd9:	mov    ecx,0x32
  404fde:	mov    DWORD PTR [rsp+0x30],0xb
  404fe6:	mov    QWORD PTR [rsp+0x28],rax
  404feb:	mov    DWORD PTR [rsp+0x34],0x19
  404ff3:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  404ff5:	lea    rdi,[rsp+0x8a0]
  404ffd:	lea    rsi,[rip+0x9cfc]        # 40ed00 <getopt_long_only@@Base+0x1d70>
  405004:	mov    ecx,0x32
  405009:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40500b:	xor    esi,esi
  40500d:	mov    rdi,r8
  405010:	call   402310 <Mat_CreateVer@plt>
  405015:	test   rax,rax
  405018:	je     405290 <Mat_VarRead@plt+0x2ef0>
  40501e:	lea    edi,[r12-0x6]
  405023:	mov    r13,rax
  405026:	cmp    edi,0x9
  405029:	ja     4051d5 <Mat_VarRead@plt+0x2e35>
  40502f:	lea    rax,[rip+0x9d92]        # 40edc8 <getopt_long_only@@Base+0x1e38>
  405036:	movsxd rdx,DWORD PTR [rax+rdi*4]
  40503a:	add    rdx,rax
  40503d:	jmp    rdx
  40503f:	lea    rdx,[rsp+0x490]
  405047:	mov    QWORD PTR [rsp+0x38],rsp
  40504c:	mov    ebp,0x9
  405051:	xor    ebx,ebx
  405053:	mov    QWORD PTR [rsp],rdx
  405057:	lea    rdx,[rsp+0x560]
  40505f:	mov    QWORD PTR [rsp+0x8],rdx
  405064:	jmp    4051d5 <Mat_VarRead@plt+0x2e35>
  405069:	lea    rdx,[rsp+0x1f0]
  405071:	mov    QWORD PTR [rsp+0x38],rsp
  405076:	mov    ebp,0x7
  40507b:	xor    ebx,ebx
  40507d:	mov    QWORD PTR [rsp],rdx
  405081:	lea    rdx,[rsp+0x260]
  405089:	mov    QWORD PTR [rsp+0x8],rdx
  40508e:	jmp    4051d5 <Mat_VarRead@plt+0x2e35>
  405093:	lea    rdx,[rsp+0x630]
  40509b:	mov    QWORD PTR [rsp+0x38],rsp
  4050a0:	mov    ebp,0xc
  4050a5:	xor    ebx,ebx
  4050a7:	mov    QWORD PTR [rsp],rdx
  4050ab:	lea    rdx,[rsp+0x700]
  4050b3:	mov    QWORD PTR [rsp+0x8],rdx
  4050b8:	jmp    4051d5 <Mat_VarRead@plt+0x2e35>
  4050bd:	lea    rdx,[rsp+0x7d0]
  4050c5:	mov    QWORD PTR [rsp+0x38],rsp
  4050ca:	mov    ebp,0xd
  4050cf:	xor    ebx,ebx
  4050d1:	mov    QWORD PTR [rsp],rdx
  4050d5:	lea    rdx,[rsp+0x8a0]
  4050dd:	mov    QWORD PTR [rsp+0x8],rdx
  4050e2:	jmp    4051d5 <Mat_VarRead@plt+0x2e35>
  4050e7:	lea    rdx,[rsp+0x2d0]
  4050ef:	mov    QWORD PTR [rsp+0x38],rsp
  4050f4:	mov    ebp,0x5
  4050f9:	xor    ebx,ebx
  4050fb:	mov    QWORD PTR [rsp],rdx
  4050ff:	lea    rdx,[rsp+0x340]
  405107:	mov    QWORD PTR [rsp+0x8],rdx
  40510c:	jmp    4051d5 <Mat_VarRead@plt+0x2e35>
  405111:	lea    rdx,[rsp+0x3b0]
  405119:	mov    QWORD PTR [rsp+0x38],rsp
  40511e:	mov    ebp,0x6
  405123:	xor    ebx,ebx
  405125:	mov    QWORD PTR [rsp],rdx
  405129:	lea    rdx,[rsp+0x420]
  405131:	mov    QWORD PTR [rsp+0x8],rdx
  405136:	jmp    4051d5 <Mat_VarRead@plt+0x2e35>
  40513b:	lea    rdx,[rsp+0x80]
  405143:	mov    QWORD PTR [rsp+0x38],rsp
  405148:	mov    ebp,0x3
  40514d:	xor    ebx,ebx
  40514f:	mov    QWORD PTR [rsp],rdx
  405153:	lea    rdx,[rsp+0xc0]
  40515b:	mov    QWORD PTR [rsp+0x8],rdx
  405160:	jmp    4051d5 <Mat_VarRead@plt+0x2e35>
  405162:	lea    rdx,[rsp+0x100]
  40516a:	mov    QWORD PTR [rsp+0x38],rsp
  40516f:	mov    ebp,0x4
  405174:	xor    ebx,ebx
  405176:	mov    QWORD PTR [rsp],rdx
  40517a:	lea    rdx,[rsp+0x140]
  405182:	mov    QWORD PTR [rsp+0x8],rdx
  405187:	jmp    4051d5 <Mat_VarRead@plt+0x2e35>
  405189:	lea    rdx,[rsp+0x970]
  405191:	mov    QWORD PTR [rsp+0x38],rsp
  405196:	mov    ebp,0x1
  40519b:	xor    ebx,ebx
  40519d:	mov    QWORD PTR [rsp],rdx
  4051a1:	lea    rdx,[rsp+0x990]
  4051a9:	mov    QWORD PTR [rsp+0x8],rdx
  4051ae:	jmp    4051d5 <Mat_VarRead@plt+0x2e35>
  4051b0:	lea    rdx,[rsp+0x9b0]
  4051b8:	mov    QWORD PTR [rsp+0x38],rsp
  4051bd:	mov    ebp,0x2
  4051c2:	xor    ebx,ebx
  4051c4:	mov    QWORD PTR [rsp],rdx
  4051c8:	lea    rdx,[rsp+0x9d0]
  4051d0:	mov    QWORD PTR [rsp+0x8],rdx
  4051d5:	cmp    QWORD PTR [rsp+0x38],0x0
  4051db:	je     405283 <Mat_VarRead@plt+0x2ee3>
  4051e1:	lea    r14,[rsp+0x40]
  4051e6:	sub    rsp,0x8
  4051ea:	lea    rdi,[rip+0x8e9b]        # 40e08c <getopt_long_only@@Base+0x10fc>
  4051f1:	push   0x801
  4051f6:	mov    ecx,0x2
  4051fb:	mov    esi,0x5
  405200:	mov    r8,r14
  405203:	mov    edx,ebp
  405205:	lea    r9,[rsp+0x20]
  40520a:	call   4020d0 <Mat_VarCreate@plt>
  40520f:	test   rax,rax
  405212:	mov    r12,rax
  405215:	pop    rcx
  405216:	pop    rsi
  405217:	je     40526e <Mat_VarRead@plt+0x2ece>
  405219:	sub    rsp,0x8
  40521d:	mov    r9,QWORD PTR [rax+0x38]
  405221:	lea    rdi,[rip+0x8e64]        # 40e08c <getopt_long_only@@Base+0x10fc>
  405228:	push   0x800
  40522d:	mov    edx,ebp
  40522f:	mov    r8,r14
  405232:	mov    ecx,0x2
  405237:	mov    esi,0x5
  40523c:	call   4020d0 <Mat_VarCreate@plt>
  405241:	mov    rdi,r12
  405244:	mov    rbp,rax
  405247:	call   402230 <Mat_VarFree@plt>
  40524c:	test   rbp,rbp
  40524f:	pop    rax
  405250:	pop    rdx
  405251:	je     40526e <Mat_VarRead@plt+0x2ece>
  405253:	mov    edx,DWORD PTR [rip+0x112cb]        # 416524 <opterr@@Base+0x10>
  405259:	mov    rdi,r13
  40525c:	mov    rsi,rbp
  40525f:	call   4020f0 <Mat_VarWrite@plt>
  405264:	mov    rdi,rbp
  405267:	call   402230 <Mat_VarFree@plt>
  40526c:	jmp    405288 <Mat_VarRead@plt+0x2ee8>
  40526e:	lea    rdi,[rip+0x9cf3]        # 40ef68 <getopt_long_only@@Base+0x1fd8>
  405275:	xor    eax,eax
  405277:	mov    ebx,0x1
  40527c:	call   4022a0 <Mat_Critical@plt>
  405281:	jmp    405288 <Mat_VarRead@plt+0x2ee8>
  405283:	mov    ebx,0x1
  405288:	mov    rdi,r13
  40528b:	call   402290 <Mat_Close@plt>
  405290:	mov    eax,ebx
  405292:	mov    rbx,QWORD PTR [rsp+0x9f8]
  40529a:	xor    rbx,QWORD PTR fs:0x28
  4052a3:	je     4052aa <Mat_VarRead@plt+0x2f0a>
  4052a5:	call   402140 <__stack_chk_fail@plt>
  4052aa:	add    rsp,0xa00
  4052b1:	pop    rbx
  4052b2:	pop    rbp
  4052b3:	pop    r12
  4052b5:	pop    r13
  4052b7:	pop    r14
  4052b9:	ret    
  4052ba:	push   r15
  4052bc:	push   r14
  4052be:	mov    r10d,0x1
  4052c4:	push   r13
  4052c6:	push   r12
  4052c8:	mov    r13d,edi
  4052cb:	push   rbp
  4052cc:	push   rbx
  4052cd:	mov    rdi,rsi
  4052d0:	sub    rsp,0x8e8
  4052d7:	mov    DWORD PTR [rsp+0xc],edx
  4052db:	lea    r9,[rsp+0x140]
  4052e3:	lea    rdx,[rsp+0x3b0]
  4052eb:	mov    rax,QWORD PTR fs:0x28
  4052f4:	mov    QWORD PTR [rsp+0x8d8],rax
  4052fc:	xor    eax,eax
  4052fe:	lea    rsi,[rsp+0x210]
  405306:	lea    rcx,[rsp+0x2e0]
  40530e:	lea    rax,[rsp+0x60]
  405313:	mov    QWORD PTR [rsp+0x20],0x3
  40531c:	mov    QWORD PTR [rsp+0x28],0x4
  405325:	vcvtsi2sd xmm0,xmm0,r10d
  40532a:	mov    DWORD PTR [rsi+r10*4-0x4],r10d
  40532f:	lea    r8,[rsp+0xd0]
  405337:	mov    DWORD PTR [rcx+r10*4-0x4],r10d
  40533c:	mov    WORD PTR [rax+r10*2-0x2],r10w
  405342:	lea    r14,[rsp+0x540]
  40534a:	mov    WORD PTR [rsp+r10*2+0xce],r10w
  405353:	mov    BYTE PTR [rsp+r10*1+0x85f],r10b
  40535b:	lea    rbx,[rsp+0x6d0]
  405363:	mov    BYTE PTR [rsp+r10*1+0x89f],r10b
  40536b:	mov    QWORD PTR [rsp+r10*8+0x538],r10
  405373:	mov    QWORD PTR [rsp+r10*8+0x6c8],r10
  40537b:	vmovsd QWORD PTR [rdx+r10*8-0x8],xmm0
  405382:	vcvtsi2ss xmm0,xmm0,r10d
  405387:	vmovss DWORD PTR [r9+r10*4-0x4],xmm0
  40538e:	inc    r10
  405391:	cmp    r10,0x33
  405395:	jne    405325 <Mat_VarRead@plt+0x2f85>
  405397:	lea    r10d,[r13-0x6]
  40539b:	mov    r12d,0x1
  4053a1:	cmp    r10d,0x9
  4053a5:	ja     405766 <Mat_VarRead@plt+0x33c6>
  4053ab:	lea    r11,[rip+0x9ade]        # 40ee90 <getopt_long_only@@Base+0x1f00>
  4053b2:	movsxd r10,DWORD PTR [r11+r10*4]
  4053b6:	add    r10,r11
  4053b9:	jmp    r10
  4053bc:	lea    rbp,[r9+0x90]
  4053c3:	lea    r15,[r9+0x60]
  4053c7:	lea    r11,[r9+0x30]
  4053cb:	mov    ebx,0x7
  4053d0:	jmp    4054c4 <Mat_VarRead@plt+0x3124>
  4053d5:	lea    rbp,[r14+0x120]
  4053dc:	lea    r15,[r14+0xc0]
  4053e3:	lea    r11,[r14+0x60]
  4053e7:	mov    r9,r14
  4053ea:	mov    ebx,0xc
  4053ef:	jmp    4054c4 <Mat_VarRead@plt+0x3124>
  4053f4:	lea    rbp,[rbx+0x120]
  4053fb:	lea    r15,[rbx+0xc0]
  405402:	lea    r11,[rbx+0x60]
  405406:	mov    r9,rbx
  405409:	mov    ebx,0xd
  40540e:	jmp    4054c4 <Mat_VarRead@plt+0x3124>
  405413:	lea    rbp,[rsi+0x90]
  40541a:	lea    r15,[rsi+0x60]
  40541e:	lea    r11,[rsi+0x30]
  405422:	mov    r9,rsi
  405425:	mov    ebx,0x5
  40542a:	jmp    4054c4 <Mat_VarRead@plt+0x3124>
  40542f:	lea    rbp,[rcx+0x90]
  405436:	lea    r15,[rcx+0x60]
  40543a:	lea    r11,[rcx+0x30]
  40543e:	mov    r9,rcx
  405441:	mov    ebx,0x6
  405446:	jmp    4054c4 <Mat_VarRead@plt+0x3124>
  405448:	lea    rbp,[rax+0x48]
  40544c:	lea    r15,[rax+0x30]
  405450:	lea    r11,[rax+0x18]
  405454:	mov    r9,rax
  405457:	mov    ebx,0x3
  40545c:	jmp    4054c4 <Mat_VarRead@plt+0x3124>
  40545e:	lea    rbp,[r8+0x48]
  405462:	lea    r15,[r8+0x30]
  405466:	lea    r11,[r8+0x18]
  40546a:	mov    r9,r8
  40546d:	mov    ebx,0x4
  405472:	jmp    4054c4 <Mat_VarRead@plt+0x3124>
  405474:	lea    r9,[rsp+0x860]
  40547c:	mov    ebx,0x1
  405481:	lea    rbp,[r9+0x24]
  405485:	lea    r15,[r9+0x18]
  405489:	lea    r11,[r9+0xc]
  40548d:	jmp    4054c4 <Mat_VarRead@plt+0x3124>
  40548f:	lea    r9,[rsp+0x8a0]
  405497:	mov    ebx,0x2
  40549c:	lea    rbp,[r9+0x24]
  4054a0:	lea    r15,[r9+0x18]
  4054a4:	lea    r11,[r9+0xc]
  4054a8:	jmp    4054c4 <Mat_VarRead@plt+0x3124>
  4054aa:	lea    rbp,[rdx+0x120]
  4054b1:	lea    r15,[rdx+0xc0]
  4054b8:	lea    r11,[rdx+0x60]
  4054bc:	mov    r9,rdx
  4054bf:	mov    ebx,0x9
  4054c4:	mov    edx,DWORD PTR [rip+0xfd26]        # 4151f0 <getopt_long_only@@Base+0x8260>
  4054ca:	xor    esi,esi
  4054cc:	mov    QWORD PTR [rsp+0x18],r11
  4054d1:	mov    QWORD PTR [rsp+0x10],r9
  4054d6:	mov    r12d,0x1
  4054dc:	call   402310 <Mat_CreateVer@plt>
  4054e1:	test   rax,rax
  4054e4:	mov    r14,rax
  4054e7:	je     405766 <Mat_VarRead@plt+0x33c6>
  4054ed:	lea    r12,[rsp+0x20]
  4054f2:	sub    rsp,0x8
  4054f6:	lea    rdi,[rip+0x8b70]        # 40e06d <getopt_long_only@@Base+0x10dd>
  4054fd:	push   0x1
  4054ff:	mov    r9,QWORD PTR [rsp+0x20]
  405504:	mov    ecx,0x2
  405509:	mov    r8,r12
  40550c:	mov    edx,ebx
  40550e:	mov    esi,r13d
  405511:	call   4020d0 <Mat_VarCreate@plt>
  405516:	mov    r11,QWORD PTR [rsp+0x28]
  40551b:	lea    rdi,[rip+0x8b52]        # 40e074 <getopt_long_only@@Base+0x10e4>
  405522:	mov    r8,r12
  405525:	mov    ecx,0x2
  40552a:	mov    edx,ebx
  40552c:	mov    esi,r13d
  40552f:	mov    QWORD PTR [rsp+0x40],rax
  405534:	mov    DWORD PTR [rsp],0x1
  40553b:	mov    r9,r11
  40553e:	call   4020d0 <Mat_VarCreate@plt>
  405543:	mov    QWORD PTR [rsp+0x48],rax
  405548:	pop    rdi
  405549:	pop    r8
  40554b:	cmp    DWORD PTR [rsp+0xc],0x0
  405550:	jne    405608 <Mat_VarRead@plt+0x3268>
  405556:	sub    rsp,0x8
  40555a:	lea    rdi,[rip+0x8b0c]        # 40e06d <getopt_long_only@@Base+0x10dd>
  405561:	mov    r8,r12
  405564:	push   0x1
  405566:	mov    edx,ebx
  405568:	mov    r9,r15
  40556b:	mov    ecx,0x2
  405570:	mov    esi,r13d
  405573:	call   4020d0 <Mat_VarCreate@plt>
  405578:	lea    rdi,[rip+0x8af5]        # 40e074 <getopt_long_only@@Base+0x10e4>
  40557f:	mov    r8,r12
  405582:	mov    edx,ebx
  405584:	mov    r9,rbp
  405587:	mov    ecx,0x2
  40558c:	mov    esi,r13d
  40558f:	mov    DWORD PTR [rsp],0x1
  405596:	mov    QWORD PTR [rsp+0x50],rax
  40559b:	call   4020d0 <Mat_VarCreate@plt>
  4055a0:	lea    r9,[rsp+0x40]
  4055a5:	lea    rdi,[rip+0x8ade]        # 40e08a <getopt_long_only@@Base+0x10fa>
  4055ac:	mov    r8,r12
  4055af:	mov    ecx,0x2
  4055b4:	mov    edx,0x16
  4055b9:	mov    esi,0x2
  4055be:	mov    QWORD PTR [rsp+0x58],rax
  4055c3:	mov    QWORD PTR [rsp+0x60],0x0
  4055cc:	mov    QWORD PTR [rsp+0x30],0x2
  4055d5:	mov    QWORD PTR [rsp+0x38],0x1
  4055de:	mov    DWORD PTR [rsp],0x0
  4055e5:	call   4020d0 <Mat_VarCreate@plt>
  4055ea:	mov    edx,DWORD PTR [rip+0x10f34]        # 416524 <opterr@@Base+0x10>
  4055f0:	mov    rsi,rax
  4055f3:	mov    rdi,r14
  4055f6:	mov    rbx,rax
  4055f9:	call   4020f0 <Mat_VarWrite@plt>
  4055fe:	pop    rcx
  4055ff:	mov    r12d,eax
  405602:	pop    rsi
  405603:	jmp    405756 <Mat_VarRead@plt+0x33b6>
  405608:	cmp    DWORD PTR [rsp+0xc],0x1
  40560d:	jne    405751 <Mat_VarRead@plt+0x33b1>
  405613:	mov    QWORD PTR [rsp+0x40],0x0
  40561c:	mov    QWORD PTR [rsp+0x20],0x1
  405625:	lea    r10,[rsp+0x30]
  40562a:	mov    QWORD PTR [rsp+0x28],0x1
  405633:	sub    rsp,0x8
  405637:	lea    rdi,[rip+0x8a4c]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40563e:	push   0x0
  405640:	mov    r9,r10
  405643:	mov    r8,r12
  405646:	mov    ecx,0x2
  40564b:	mov    edx,0x16
  405650:	mov    esi,0x2
  405655:	mov    QWORD PTR [rsp+0x28],r10
  40565a:	call   4020d0 <Mat_VarCreate@plt>
  40565f:	mov    edx,DWORD PTR [rip+0x10ebf]        # 416524 <opterr@@Base+0x10>
  405665:	mov    ecx,0x1
  40566a:	mov    rsi,rax
  40566d:	mov    rdi,r14
  405670:	mov    QWORD PTR [rsp+0x20],rax
  405675:	call   402150 <Mat_VarWriteAppend@plt>
  40567a:	mov    r8,QWORD PTR [rsp+0x20]
  40567f:	mov    DWORD PTR [rsp+0x1c],eax
  405683:	mov    rdi,r8
  405686:	call   402230 <Mat_VarFree@plt>
  40568b:	lea    rdi,[rip+0x89db]        # 40e06d <getopt_long_only@@Base+0x10dd>
  405692:	mov    r8,r12
  405695:	mov    edx,ebx
  405697:	mov    r9,r15
  40569a:	mov    ecx,0x2
  40569f:	mov    esi,r13d
  4056a2:	mov    DWORD PTR [rsp],0x1
  4056a9:	mov    QWORD PTR [rsp+0x30],0x3
  4056b2:	mov    QWORD PTR [rsp+0x38],0x4
  4056bb:	call   4020d0 <Mat_VarCreate@plt>
  4056c0:	lea    rdi,[rip+0x89ad]        # 40e074 <getopt_long_only@@Base+0x10e4>
  4056c7:	mov    r8,r12
  4056ca:	mov    edx,ebx
  4056cc:	mov    r9,rbp
  4056cf:	mov    ecx,0x2
  4056d4:	mov    esi,r13d
  4056d7:	mov    DWORD PTR [rsp],0x1
  4056de:	mov    QWORD PTR [rsp+0x40],rax
  4056e3:	call   4020d0 <Mat_VarCreate@plt>
  4056e8:	mov    r10,QWORD PTR [rsp+0x28]
  4056ed:	lea    rdi,[rip+0x8996]        # 40e08a <getopt_long_only@@Base+0x10fa>
  4056f4:	mov    r8,r12
  4056f7:	mov    ecx,0x2
  4056fc:	mov    edx,0x16
  405701:	mov    esi,0x2
  405706:	mov    QWORD PTR [rsp+0x48],rax
  40570b:	mov    QWORD PTR [rsp+0x30],0x1
  405714:	mov    r9,r10
  405717:	mov    QWORD PTR [rsp+0x38],0x1
  405720:	mov    DWORD PTR [rsp],0x0
  405727:	call   4020d0 <Mat_VarCreate@plt>
  40572c:	mov    edx,DWORD PTR [rip+0x10df2]        # 416524 <opterr@@Base+0x10>
  405732:	mov    ecx,0x1
  405737:	mov    rsi,rax
  40573a:	mov    rdi,r14
  40573d:	mov    rbx,rax
  405740:	call   402150 <Mat_VarWriteAppend@plt>
  405745:	mov    r12d,DWORD PTR [rsp+0x1c]
  40574a:	add    r12d,eax
  40574d:	pop    rax
  40574e:	pop    rdx
  40574f:	jmp    405756 <Mat_VarRead@plt+0x33b6>
  405751:	xor    ebx,ebx
  405753:	xor    r12d,r12d
  405756:	mov    rdi,rbx
  405759:	call   402230 <Mat_VarFree@plt>
  40575e:	mov    rdi,r14
  405761:	call   402290 <Mat_Close@plt>
  405766:	mov    rcx,QWORD PTR [rsp+0x8d8]
  40576e:	xor    rcx,QWORD PTR fs:0x28
  405777:	mov    eax,r12d
  40577a:	je     405781 <Mat_VarRead@plt+0x33e1>
  40577c:	call   402140 <__stack_chk_fail@plt>
  405781:	add    rsp,0x8e8
  405788:	pop    rbx
  405789:	pop    rbp
  40578a:	pop    r12
  40578c:	pop    r13
  40578e:	pop    r14
  405790:	pop    r15
  405792:	ret    
  405793:	push   r15
  405795:	push   r14
  405797:	push   r13
  405799:	push   r12
  40579b:	push   rbp
  40579c:	push   rbx
  40579d:	mov    ebp,edi
  40579f:	mov    ebx,0x1
  4057a4:	sub    rsp,0x11b8
  4057ab:	mov    QWORD PTR [rsp+0x28],rsi
  4057b0:	mov    DWORD PTR [rsp+0x24],edx
  4057b4:	lea    r8,[rsp+0x750]
  4057bc:	lea    rdi,[rsp+0x8e0]
  4057c4:	lea    rsi,[rsp+0x270]
  4057cc:	lea    rcx,[rsp+0x340]
  4057d4:	lea    rdx,[rsp+0x410]
  4057dc:	mov    QWORD PTR [rsp+0x30],0x3
  4057e5:	mov    QWORD PTR [rsp+0x38],0x4
  4057ee:	mov    rax,QWORD PTR fs:0x28
  4057f7:	mov    QWORD PTR [rsp+0x11a8],rax
  4057ff:	xor    eax,eax
  405801:	mov    eax,0x33
  405806:	vcvtsi2sd xmm0,xmm0,ebx
  40580a:	lea    r14,[rsp+0x680]
  405812:	mov    DWORD PTR [rdx+rax*4-0xcc],ebx
  405819:	mov    DWORD PTR [rsp+rax*4+0x4e4],ebx
  405820:	lea    r15,[rsp+0xb0]
  405828:	mov    WORD PTR [rsp+rax*2+0x4a],bx
  40582d:	lea    r9,[rsp+0x190]
  405835:	mov    WORD PTR [rsp+rax*2+0x12a],bx
  40583d:	mov    BYTE PTR [rsp+rax*1+0x107d],bl
  405844:	mov    BYTE PTR [rsp+rax*1+0x10fd],bl
  40584b:	mov    QWORD PTR [rsp+rax*8+0x8d8],rbx
  405853:	lea    r11,[rsp+0x4e0]
  40585b:	mov    QWORD PTR [rsp+rax*8+0xbf8],rbx
  405863:	mov    QWORD PTR [rsp],r14
  405867:	lea    r14,[rsp+0x120]
  40586f:	mov    DWORD PTR [rsp+rax*4+0x414],eax
  405876:	mov    DWORD PTR [rsp+rax*4+0x5b4],eax
  40587d:	lea    r10,[rsp+0x5b0]
  405885:	mov    WORD PTR [rsp+rax*2+0xba],ax
  40588d:	mov    WORD PTR [rsp+rax*2+0x19a],ax
  405895:	lea    r13,[rsp+0xd90]
  40589d:	mov    BYTE PTR [rsp+rax*1+0x10bd],al
  4058a4:	mov    BYTE PTR [rsp+rax*1+0x113d],al
  4058ab:	lea    r12,[rsp+0xf20]
  4058b3:	mov    QWORD PTR [rsp+rax*8+0xa68],rax
  4058bb:	mov    QWORD PTR [rsp+rax*8+0xd88],rax
  4058c3:	mov    QWORD PTR [rsp+0x8],r15
  4058c8:	mov    QWORD PTR [rsp+0x10],r14
  4058cd:	lea    r15,[rsp+0xa70]
  4058d5:	mov    QWORD PTR [rsp+0x18],r9
  4058da:	lea    r14,[rsp+0xc00]
  4058e2:	lea    r9,[rsp+0x200]
  4058ea:	vmovsd QWORD PTR [r8+rax*8-0x198],xmm0
  4058f4:	vcvtsi2sd xmm0,xmm0,eax
  4058f8:	vmovsd QWORD PTR [rdi+rax*8-0x198],xmm0
  405901:	vcvtsi2ss xmm0,xmm0,ebx
  405905:	inc    rbx
  405908:	vmovss DWORD PTR [rsi+rax*4-0xcc],xmm0
  405911:	vcvtsi2ss xmm0,xmm0,eax
  405915:	vmovss DWORD PTR [rcx+rax*4-0xcc],xmm0
  40591e:	inc    rax
  405921:	cmp    rbx,0x33
  405925:	jne    405806 <Mat_VarRead@plt+0x3466>
  40592b:	lea    eax,[rbp-0x6]
  40592e:	mov    ebx,0x1
  405933:	cmp    eax,0x9
  405936:	ja     40604e <Mat_VarRead@plt+0x3cae>
  40593c:	lea    rbx,[rip+0x9575]        # 40eeb8 <getopt_long_only@@Base+0x1f28>
  405943:	movsxd rax,DWORD PTR [rbx+rax*4]
  405947:	add    rbx,rax
  40594a:	jmp    rbx
  40594c:	lea    rax,[r8+0x60]
  405950:	mov    QWORD PTR [rsp+0x70],r8
  405955:	mov    QWORD PTR [rsp+0x78],rdi
  40595a:	mov    r12d,0x9
  405960:	mov    QWORD PTR [rsp+0x80],rax
  405968:	lea    rax,[rdi+0x60]
  40596c:	mov    QWORD PTR [rsp+0x88],rax
  405974:	lea    rax,[r8+0xc0]
  40597b:	add    r8,0x120
  405982:	mov    QWORD PTR [rsp+0xa0],r8
  40598a:	mov    QWORD PTR [rsp+0x90],rax
  405992:	lea    rax,[rdi+0xc0]
  405999:	add    rdi,0x120
  4059a0:	mov    QWORD PTR [rsp+0xa8],rdi
  4059a8:	mov    QWORD PTR [rsp+0x98],rax
  4059b0:	jmp    405db7 <Mat_VarRead@plt+0x3a17>
  4059b5:	lea    rax,[rsi+0x30]
  4059b9:	mov    QWORD PTR [rsp+0x70],rsi
  4059be:	mov    QWORD PTR [rsp+0x78],rcx
  4059c3:	mov    r12d,0x7
  4059c9:	mov    QWORD PTR [rsp+0x80],rax
  4059d1:	lea    rax,[rcx+0x30]
  4059d5:	mov    QWORD PTR [rsp+0x88],rax
  4059dd:	lea    rax,[rsi+0x60]
  4059e1:	add    rsi,0x90
  4059e8:	mov    QWORD PTR [rsp+0xa0],rsi
  4059f0:	mov    QWORD PTR [rsp+0x90],rax
  4059f8:	lea    rax,[rcx+0x60]
  4059fc:	add    rcx,0x90
  405a03:	mov    QWORD PTR [rsp+0xa8],rcx
  405a0b:	mov    QWORD PTR [rsp+0x98],rax
  405a13:	jmp    405db7 <Mat_VarRead@plt+0x3a17>
  405a18:	lea    rax,[r15+0x60]
  405a1c:	mov    QWORD PTR [rsp+0x70],r15
  405a21:	mov    QWORD PTR [rsp+0x78],r14
  405a26:	mov    r12d,0xc
  405a2c:	mov    QWORD PTR [rsp+0x80],rax
  405a34:	lea    rax,[r14+0x60]
  405a38:	mov    QWORD PTR [rsp+0x88],rax
  405a40:	lea    rax,[r15+0xc0]
  405a47:	add    r15,0x120
  405a4e:	mov    QWORD PTR [rsp+0xa0],r15
  405a56:	mov    QWORD PTR [rsp+0x90],rax
  405a5e:	lea    rax,[r14+0xc0]
  405a65:	add    r14,0x120
  405a6c:	mov    QWORD PTR [rsp+0xa8],r14
  405a74:	mov    QWORD PTR [rsp+0x98],rax
  405a7c:	jmp    405db7 <Mat_VarRead@plt+0x3a17>
  405a81:	lea    rax,[r13+0x60]
  405a85:	mov    QWORD PTR [rsp+0x70],r13
  405a8a:	mov    QWORD PTR [rsp+0x78],r12
  405a8f:	mov    QWORD PTR [rsp+0x80],rax
  405a97:	lea    rax,[r12+0x60]
  405a9c:	mov    QWORD PTR [rsp+0x88],rax
  405aa4:	lea    rax,[r13+0xc0]
  405aab:	add    r13,0x120
  405ab2:	mov    QWORD PTR [rsp+0xa0],r13
  405aba:	mov    QWORD PTR [rsp+0x90],rax
  405ac2:	lea    rax,[r12+0xc0]
  405aca:	add    r12,0x120
  405ad1:	mov    QWORD PTR [rsp+0xa8],r12
  405ad9:	mov    r12d,0xd
  405adf:	mov    QWORD PTR [rsp+0x98],rax
  405ae7:	jmp    405db7 <Mat_VarRead@plt+0x3a17>
  405aec:	lea    rax,[rdx+0x30]
  405af0:	mov    QWORD PTR [rsp+0x70],rdx
  405af5:	mov    QWORD PTR [rsp+0x78],r11
  405afa:	mov    r12d,0x5
  405b00:	mov    QWORD PTR [rsp+0x80],rax
  405b08:	lea    rax,[r11+0x30]
  405b0c:	mov    QWORD PTR [rsp+0x88],rax
  405b14:	lea    rax,[rdx+0x60]
  405b18:	add    rdx,0x90
  405b1f:	mov    QWORD PTR [rsp+0xa0],rdx
  405b27:	mov    QWORD PTR [rsp+0x90],rax
  405b2f:	lea    rax,[r11+0x60]
  405b33:	add    r11,0x90
  405b3a:	mov    QWORD PTR [rsp+0xa8],r11
  405b42:	mov    QWORD PTR [rsp+0x98],rax
  405b4a:	jmp    405db7 <Mat_VarRead@plt+0x3a17>
  405b4f:	mov    rax,QWORD PTR [rsp]
  405b53:	mov    QWORD PTR [rsp+0x70],r10
  405b58:	mov    r12d,0x6
  405b5e:	mov    QWORD PTR [rsp+0x78],rax
  405b63:	lea    rax,[r10+0x30]
  405b67:	mov    QWORD PTR [rsp+0x80],rax
  405b6f:	mov    rax,QWORD PTR [rsp]
  405b73:	add    rax,0x30
  405b77:	mov    QWORD PTR [rsp+0x88],rax
  405b7f:	lea    rax,[r10+0x60]
  405b83:	add    r10,0x90
  405b8a:	mov    QWORD PTR [rsp+0xa0],r10
  405b92:	mov    QWORD PTR [rsp+0x90],rax
  405b9a:	mov    rax,QWORD PTR [rsp]
  405b9e:	add    rax,0x60
  405ba2:	mov    QWORD PTR [rsp+0x98],rax
  405baa:	mov    rax,QWORD PTR [rsp]
  405bae:	add    rax,0x90
  405bb4:	mov    QWORD PTR [rsp+0xa8],rax
  405bbc:	jmp    405db7 <Mat_VarRead@plt+0x3a17>
  405bc1:	mov    rax,QWORD PTR [rsp+0x8]
  405bc6:	mov    r12d,0x3
  405bcc:	mov    QWORD PTR [rsp+0x70],rax
  405bd1:	mov    rax,QWORD PTR [rsp+0x10]
  405bd6:	mov    QWORD PTR [rsp+0x78],rax
  405bdb:	mov    rax,QWORD PTR [rsp+0x8]
  405be0:	add    rax,0x18
  405be4:	mov    QWORD PTR [rsp+0x80],rax
  405bec:	mov    rax,QWORD PTR [rsp+0x10]
  405bf1:	add    rax,0x18
  405bf5:	mov    QWORD PTR [rsp+0x88],rax
  405bfd:	mov    rax,QWORD PTR [rsp+0x8]
  405c02:	add    rax,0x30
  405c06:	mov    QWORD PTR [rsp+0x90],rax
  405c0e:	mov    rax,QWORD PTR [rsp+0x10]
  405c13:	add    rax,0x30
  405c17:	mov    QWORD PTR [rsp+0x98],rax
  405c1f:	mov    rax,QWORD PTR [rsp+0x8]
  405c24:	add    rax,0x48
  405c28:	mov    QWORD PTR [rsp+0xa0],rax
  405c30:	mov    rax,QWORD PTR [rsp+0x10]
  405c35:	add    rax,0x48
  405c39:	mov    QWORD PTR [rsp+0xa8],rax
  405c41:	jmp    405db7 <Mat_VarRead@plt+0x3a17>
  405c46:	mov    rax,QWORD PTR [rsp+0x18]
  405c4b:	mov    QWORD PTR [rsp+0x78],r9
  405c50:	mov    r12d,0x4
  405c56:	mov    QWORD PTR [rsp+0x70],rax
  405c5b:	add    rax,0x18
  405c5f:	mov    QWORD PTR [rsp+0x80],rax
  405c67:	lea    rax,[r9+0x18]
  405c6b:	mov    QWORD PTR [rsp+0x88],rax
  405c73:	mov    rax,QWORD PTR [rsp+0x18]
  405c78:	add    rax,0x30
  405c7c:	mov    QWORD PTR [rsp+0x90],rax
  405c84:	lea    rax,[r9+0x30]
  405c88:	add    r9,0x48
  405c8c:	mov    QWORD PTR [rsp+0xa8],r9
  405c94:	mov    QWORD PTR [rsp+0x98],rax
  405c9c:	mov    rax,QWORD PTR [rsp+0x18]
  405ca1:	add    rax,0x48
  405ca5:	mov    QWORD PTR [rsp+0xa0],rax
  405cad:	jmp    405db7 <Mat_VarRead@plt+0x3a17>
  405cb2:	lea    rcx,[rsp+0x10bc]
  405cba:	lea    rdx,[rsp+0x10b0]
  405cc2:	lea    rax,[rsp+0x10f0]
  405cca:	mov    r12d,0x1
  405cd0:	mov    QWORD PTR [rsp+0x80],rcx
  405cd8:	lea    rcx,[rsp+0x10fc]
  405ce0:	mov    QWORD PTR [rsp+0x70],rdx
  405ce5:	mov    QWORD PTR [rsp+0x78],rax
  405cea:	lea    rdx,[rsp+0x10d4]
  405cf2:	lea    rax,[rsp+0x1114]
  405cfa:	mov    QWORD PTR [rsp+0x88],rcx
  405d02:	lea    rcx,[rsp+0x10c8]
  405d0a:	mov    QWORD PTR [rsp+0xa0],rdx
  405d12:	mov    QWORD PTR [rsp+0xa8],rax
  405d1a:	mov    QWORD PTR [rsp+0x90],rcx
  405d22:	lea    rcx,[rsp+0x1108]
  405d2a:	mov    QWORD PTR [rsp+0x98],rcx
  405d32:	jmp    405db7 <Mat_VarRead@plt+0x3a17>
  405d37:	lea    rcx,[rsp+0x113c]
  405d3f:	lea    rdx,[rsp+0x1130]
  405d47:	lea    rax,[rsp+0x1170]
  405d4f:	mov    r12d,0x2
  405d55:	mov    QWORD PTR [rsp+0x80],rcx
  405d5d:	lea    rcx,[rsp+0x117c]
  405d65:	mov    QWORD PTR [rsp+0x70],rdx
  405d6a:	mov    QWORD PTR [rsp+0x78],rax
  405d6f:	lea    rdx,[rsp+0x1154]
  405d77:	lea    rax,[rsp+0x1194]
  405d7f:	mov    QWORD PTR [rsp+0x88],rcx
  405d87:	lea    rcx,[rsp+0x1148]
  405d8f:	mov    QWORD PTR [rsp+0xa0],rdx
  405d97:	mov    QWORD PTR [rsp+0xa8],rax
  405d9f:	mov    QWORD PTR [rsp+0x90],rcx
  405da7:	lea    rcx,[rsp+0x1188]
  405daf:	mov    QWORD PTR [rsp+0x98],rcx
  405db7:	mov    edx,DWORD PTR [rip+0xf433]        # 4151f0 <getopt_long_only@@Base+0x8260>
  405dbd:	mov    rdi,QWORD PTR [rsp+0x28]
  405dc2:	xor    esi,esi
  405dc4:	mov    ebx,0x1
  405dc9:	call   402310 <Mat_CreateVer@plt>
  405dce:	test   rax,rax
  405dd1:	mov    r14,rax
  405dd4:	je     40604e <Mat_VarRead@plt+0x3cae>
  405dda:	lea    r15,[rsp+0x70]
  405ddf:	lea    r13,[rsp+0x30]
  405de4:	sub    rsp,0x8
  405de8:	push   0x801
  405ded:	lea    rdi,[rip+0x8279]        # 40e06d <getopt_long_only@@Base+0x10dd>
  405df4:	mov    ecx,0x2
  405df9:	mov    r9,r15
  405dfc:	mov    r8,r13
  405dff:	mov    edx,r12d
  405e02:	mov    esi,ebp
  405e04:	call   4020d0 <Mat_VarCreate@plt>
  405e09:	lea    rdi,[rip+0x8264]        # 40e074 <getopt_long_only@@Base+0x10e4>
  405e10:	lea    r9,[r15+0x10]
  405e14:	mov    r8,r13
  405e17:	mov    ecx,0x2
  405e1c:	mov    edx,r12d
  405e1f:	mov    esi,ebp
  405e21:	mov    QWORD PTR [rsp+0x50],rax
  405e26:	mov    DWORD PTR [rsp],0x801
  405e2d:	call   4020d0 <Mat_VarCreate@plt>
  405e32:	mov    QWORD PTR [rsp+0x58],rax
  405e37:	pop    rdi
  405e38:	pop    r8
  405e3a:	cmp    DWORD PTR [rsp+0x24],0x0
  405e3f:	jne    405efb <Mat_VarRead@plt+0x3b5b>
  405e45:	sub    rsp,0x8
  405e49:	lea    r9,[r15+0x20]
  405e4d:	lea    rdi,[rip+0x8219]        # 40e06d <getopt_long_only@@Base+0x10dd>
  405e54:	push   0x801
  405e59:	mov    esi,ebp
  405e5b:	mov    r8,r13
  405e5e:	mov    ecx,0x2
  405e63:	mov    edx,r12d
  405e66:	call   4020d0 <Mat_VarCreate@plt>
  405e6b:	lea    r9,[r15+0x30]
  405e6f:	lea    rdi,[rip+0x81fe]        # 40e074 <getopt_long_only@@Base+0x10e4>
  405e76:	mov    esi,ebp
  405e78:	mov    r8,r13
  405e7b:	mov    ecx,0x2
  405e80:	mov    edx,r12d
  405e83:	mov    DWORD PTR [rsp],0x801
  405e8a:	mov    QWORD PTR [rsp+0x60],rax
  405e8f:	call   4020d0 <Mat_VarCreate@plt>
  405e94:	lea    r9,[rsp+0x50]
  405e99:	lea    rdi,[rip+0x81ea]        # 40e08a <getopt_long_only@@Base+0x10fa>
  405ea0:	mov    ecx,0x2
  405ea5:	mov    r8,r13
  405ea8:	mov    edx,0x16
  405ead:	mov    esi,0x2
  405eb2:	mov    QWORD PTR [rsp+0x68],rax
  405eb7:	mov    QWORD PTR [rsp+0x70],0x0
  405ec0:	mov    QWORD PTR [rsp+0x40],0x2
  405ec9:	mov    QWORD PTR [rsp+0x48],0x1
  405ed2:	mov    DWORD PTR [rsp],0x0
  405ed9:	call   4020d0 <Mat_VarCreate@plt>
  405ede:	mov    edx,DWORD PTR [rip+0x10640]        # 416524 <opterr@@Base+0x10>
  405ee4:	mov    rsi,rax
  405ee7:	mov    rdi,r14
  405eea:	mov    rbp,rax
  405eed:	call   4020f0 <Mat_VarWrite@plt>
  405ef2:	pop    rcx
  405ef3:	mov    ebx,eax
  405ef5:	pop    rsi
  405ef6:	jmp    40603e <Mat_VarRead@plt+0x3c9e>
  405efb:	cmp    DWORD PTR [rsp+0x24],0x1
  405f00:	jne    40603a <Mat_VarRead@plt+0x3c9a>
  405f06:	mov    QWORD PTR [rsp+0x50],0x0
  405f0f:	mov    QWORD PTR [rsp+0x30],0x1
  405f18:	lea    rbx,[rsp+0x40]
  405f1d:	mov    QWORD PTR [rsp+0x38],0x1
  405f26:	sub    rsp,0x8
  405f2a:	lea    rdi,[rip+0x8159]        # 40e08a <getopt_long_only@@Base+0x10fa>
  405f31:	push   0x0
  405f33:	mov    r9,rbx
  405f36:	mov    r8,r13
  405f39:	mov    ecx,0x2
  405f3e:	mov    edx,0x16
  405f43:	mov    esi,0x2
  405f48:	call   4020d0 <Mat_VarCreate@plt>
  405f4d:	mov    edx,DWORD PTR [rip+0x105d1]        # 416524 <opterr@@Base+0x10>
  405f53:	mov    ecx,0x1
  405f58:	mov    rsi,rax
  405f5b:	mov    rdi,r14
  405f5e:	mov    QWORD PTR [rsp+0x18],rax
  405f63:	call   402150 <Mat_VarWriteAppend@plt>
  405f68:	mov    r8,QWORD PTR [rsp+0x18]
  405f6d:	mov    DWORD PTR [rsp+0x10],eax
  405f71:	mov    rdi,r8
  405f74:	call   402230 <Mat_VarFree@plt>
  405f79:	lea    r9,[r15+0x20]
  405f7d:	lea    rdi,[rip+0x80e9]        # 40e06d <getopt_long_only@@Base+0x10dd>
  405f84:	mov    esi,ebp
  405f86:	mov    r8,r13
  405f89:	mov    ecx,0x2
  405f8e:	mov    edx,r12d
  405f91:	mov    DWORD PTR [rsp],0x801
  405f98:	mov    QWORD PTR [rsp+0x40],0x3
  405fa1:	mov    QWORD PTR [rsp+0x48],0x4
  405faa:	call   4020d0 <Mat_VarCreate@plt>
  405faf:	lea    r9,[r15+0x30]
  405fb3:	lea    rdi,[rip+0x80ba]        # 40e074 <getopt_long_only@@Base+0x10e4>
  405fba:	mov    esi,ebp
  405fbc:	mov    r8,r13
  405fbf:	mov    ecx,0x2
  405fc4:	mov    edx,r12d
  405fc7:	mov    DWORD PTR [rsp],0x801
  405fce:	mov    QWORD PTR [rsp+0x50],rax
  405fd3:	call   4020d0 <Mat_VarCreate@plt>
  405fd8:	lea    rdi,[rip+0x80ab]        # 40e08a <getopt_long_only@@Base+0x10fa>
  405fdf:	mov    r9,rbx
  405fe2:	mov    r8,r13
  405fe5:	mov    ecx,0x2
  405fea:	mov    edx,0x16
  405fef:	mov    esi,0x2
  405ff4:	mov    QWORD PTR [rsp+0x58],rax
  405ff9:	mov    QWORD PTR [rsp+0x40],0x1
  406002:	mov    QWORD PTR [rsp+0x48],0x1
  40600b:	mov    DWORD PTR [rsp],0x0
  406012:	call   4020d0 <Mat_VarCreate@plt>
  406017:	mov    edx,DWORD PTR [rip+0x10507]        # 416524 <opterr@@Base+0x10>
  40601d:	mov    ecx,0x1
  406022:	mov    rsi,rax
  406025:	mov    rdi,r14
  406028:	mov    rbp,rax
  40602b:	call   402150 <Mat_VarWriteAppend@plt>
  406030:	mov    ebx,DWORD PTR [rsp+0x10]
  406034:	add    ebx,eax
  406036:	pop    rax
  406037:	pop    rdx
  406038:	jmp    40603e <Mat_VarRead@plt+0x3c9e>
  40603a:	xor    ebp,ebp
  40603c:	xor    ebx,ebx
  40603e:	mov    rdi,rbp
  406041:	call   402230 <Mat_VarFree@plt>
  406046:	mov    rdi,r14
  406049:	call   402290 <Mat_Close@plt>
  40604e:	mov    rsi,QWORD PTR [rsp+0x11a8]
  406056:	xor    rsi,QWORD PTR fs:0x28
  40605f:	mov    eax,ebx
  406061:	je     406068 <Mat_VarRead@plt+0x3cc8>
  406063:	call   402140 <__stack_chk_fail@plt>
  406068:	add    rsp,0x11b8
  40606f:	pop    rbx
  406070:	pop    rbp
  406071:	pop    r12
  406073:	pop    r13
  406075:	pop    r14
  406077:	pop    r15
  406079:	ret    
  40607a:	push   r15
  40607c:	push   r14
  40607e:	lea    rdi,[rip+0x8005]        # 40e08a <getopt_long_only@@Base+0x10fa>
  406085:	push   r13
  406087:	push   r12
  406089:	xor    r9d,r9d
  40608c:	push   rbp
  40608d:	push   rbx
  40608e:	mov    ecx,0x2
  406093:	mov    edx,0x15
  406098:	mov    esi,0x1
  40609d:	sub    rsp,0xa8
  4060a4:	vmovsd xmm0,QWORD PTR [rip+0xc8e4]        # 412990 <getopt_long_only@@Base+0x5a00>
  4060ac:	mov    QWORD PTR [rsp+0x40],0x0
  4060b5:	lea    rbp,[rsp+0x30]
  4060ba:	vmovsd xmm1,QWORD PTR [rip+0xc8d6]        # 412998 <getopt_long_only@@Base+0x5a08>
  4060c2:	mov    QWORD PTR [rsp+0x30],0x2
  4060cb:	vmovsd QWORD PTR [rsp+0x48],xmm0
  4060d1:	mov    QWORD PTR [rsp+0x38],0x3
  4060da:	sub    rsp,0x8
  4060de:	vmovsd xmm2,QWORD PTR [rip+0xc8ba]        # 4129a0 <getopt_long_only@@Base+0x5a10>
  4060e6:	mov    r8,rbp
  4060e9:	vmovsd xmm3,QWORD PTR [rip+0xc8b7]        # 4129a8 <getopt_long_only@@Base+0x5a18>
  4060f1:	vmovsd xmm4,QWORD PTR [rip+0xc8b7]        # 4129b0 <getopt_long_only@@Base+0x5a20>
  4060f9:	vmovsd xmm5,QWORD PTR [rip+0xc8b7]        # 4129b8 <getopt_long_only@@Base+0x5a28>
  406101:	vmovsd xmm6,QWORD PTR [rip+0xc8b7]        # 4129c0 <getopt_long_only@@Base+0x5a30>
  406109:	vmovsd xmm7,QWORD PTR [rip+0xc8b7]        # 4129c8 <getopt_long_only@@Base+0x5a38>
  406111:	vmovsd xmm0,QWORD PTR [rip+0xc8b7]        # 4129d0 <getopt_long_only@@Base+0x5a40>
  406119:	mov    rax,QWORD PTR fs:0x28
  406122:	mov    QWORD PTR [rsp+0xa0],rax
  40612a:	xor    eax,eax
  40612c:	vmovsd QWORD PTR [rsp+0x58],xmm1
  406132:	vmovsd QWORD PTR [rsp+0x60],xmm2
  406138:	vmovsd QWORD PTR [rsp+0x68],xmm3
  40613e:	vmovsd QWORD PTR [rsp+0x70],xmm4
  406144:	vmovsd QWORD PTR [rsp+0x78],xmm5
  40614a:	vmovsd QWORD PTR [rsp+0x80],xmm6
  406153:	vmovsd QWORD PTR [rsp+0x88],xmm7
  40615c:	vmovsd QWORD PTR [rsp+0x90],xmm0
  406165:	push   0x0
  406167:	lea    r12,[rsp+0x50]
  40616c:	call   4020d0 <Mat_VarCreate@plt>
  406171:	mov    r8,rbp
  406174:	xor    edi,edi
  406176:	mov    r9,r12
  406179:	mov    ecx,0x2
  40617e:	mov    edx,0x9
  406183:	mov    esi,0x6
  406188:	mov    rbx,rax
  40618b:	mov    DWORD PTR [rsp],0x1
  406192:	mov    QWORD PTR [rsp+0x40],0x1
  40619b:	mov    QWORD PTR [rsp+0x48],0x1
  4061a4:	call   4020d0 <Mat_VarCreate@plt>
  4061a9:	lea    r9,[r12+0x8]
  4061ae:	mov    r8,rbp
  4061b1:	xor    edi,edi
  4061b3:	mov    ecx,0x2
  4061b8:	mov    edx,0x9
  4061bd:	mov    esi,0x6
  4061c2:	mov    r14,rax
  4061c5:	mov    DWORD PTR [rsp],0x1
  4061cc:	call   4020d0 <Mat_VarCreate@plt>
  4061d1:	lea    r9,[r12+0x10]
  4061d6:	mov    r8,rbp
  4061d9:	xor    edi,edi
  4061db:	mov    ecx,0x2
  4061e0:	mov    edx,0x9
  4061e5:	mov    esi,0x6
  4061ea:	mov    DWORD PTR [rsp],0x1
  4061f1:	mov    QWORD PTR [rsp+0x10],rax
  4061f6:	call   4020d0 <Mat_VarCreate@plt>
  4061fb:	lea    r9,[r12+0x18]
  406200:	mov    r8,rbp
  406203:	xor    edi,edi
  406205:	mov    ecx,0x2
  40620a:	mov    edx,0x9
  40620f:	mov    esi,0x6
  406214:	mov    DWORD PTR [rsp],0x1
  40621b:	mov    r13,rax
  40621e:	call   4020d0 <Mat_VarCreate@plt>
  406223:	lea    r9,[r12+0x20]
  406228:	mov    r8,rbp
  40622b:	xor    edi,edi
  40622d:	mov    ecx,0x2
  406232:	mov    edx,0x9
  406237:	mov    esi,0x6
  40623c:	mov    DWORD PTR [rsp],0x1
  406243:	mov    QWORD PTR [rsp+0x18],rax
  406248:	call   4020d0 <Mat_VarCreate@plt>
  40624d:	lea    r9,[r12+0x28]
  406252:	mov    r8,rbp
  406255:	xor    edi,edi
  406257:	mov    ecx,0x2
  40625c:	mov    edx,0x9
  406261:	mov    esi,0x6
  406266:	mov    DWORD PTR [rsp],0x1
  40626d:	mov    r15,rax
  406270:	call   4020d0 <Mat_VarCreate@plt>
  406275:	lea    r9,[r12+0x30]
  40627a:	mov    r8,rbp
  40627d:	xor    edi,edi
  40627f:	mov    ecx,0x2
  406284:	mov    edx,0x9
  406289:	mov    esi,0x6
  40628e:	mov    DWORD PTR [rsp],0x1
  406295:	mov    QWORD PTR [rsp+0x20],rax
  40629a:	call   4020d0 <Mat_VarCreate@plt>
  40629f:	lea    r9,[r12+0x38]
  4062a4:	mov    r8,rbp
  4062a7:	xor    edi,edi
  4062a9:	mov    ecx,0x2
  4062ae:	mov    edx,0x9
  4062b3:	mov    esi,0x6
  4062b8:	mov    DWORD PTR [rsp],0x1
  4062bf:	mov    QWORD PTR [rsp+0x28],rax
  4062c4:	call   4020d0 <Mat_VarCreate@plt>
  4062c9:	lea    r9,[r12+0x40]
  4062ce:	mov    r8,rbp
  4062d1:	xor    edi,edi
  4062d3:	mov    ecx,0x2
  4062d8:	mov    edx,0x9
  4062dd:	mov    esi,0x6
  4062e2:	mov    DWORD PTR [rsp],0x1
  4062e9:	mov    QWORD PTR [rsp+0x30],rax
  4062ee:	call   4020d0 <Mat_VarCreate@plt>
  4062f3:	lea    r9,[r12+0x48]
  4062f8:	mov    r8,rbp
  4062fb:	mov    ecx,0x2
  406300:	xor    edi,edi
  406302:	mov    edx,0x9
  406307:	mov    esi,0x6
  40630c:	mov    QWORD PTR [rsp+0x38],rax
  406311:	mov    DWORD PTR [rsp],0x1
  406318:	call   4020d0 <Mat_VarCreate@plt>
  40631d:	xor    esi,esi
  40631f:	mov    rdx,r14
  406322:	mov    rdi,rbx
  406325:	mov    rbp,rax
  406328:	call   4021a0 <Mat_VarSetCell@plt>
  40632d:	mov    rdx,QWORD PTR [rsp+0x10]
  406332:	mov    esi,0x1
  406337:	mov    rdi,rbx
  40633a:	call   4021a0 <Mat_VarSetCell@plt>
  40633f:	mov    rdx,r13
  406342:	mov    esi,0x2
  406347:	mov    rdi,rbx
  40634a:	call   4021a0 <Mat_VarSetCell@plt>
  40634f:	mov    rdx,QWORD PTR [rsp+0x18]
  406354:	mov    esi,0x3
  406359:	mov    rdi,rbx
  40635c:	call   4021a0 <Mat_VarSetCell@plt>
  406361:	mov    rdx,r15
  406364:	mov    esi,0x4
  406369:	mov    rdi,rbx
  40636c:	call   4021a0 <Mat_VarSetCell@plt>
  406371:	mov    rdx,QWORD PTR [rsp+0x20]
  406376:	mov    esi,0x5
  40637b:	mov    rdi,rbx
  40637e:	call   4021a0 <Mat_VarSetCell@plt>
  406383:	mov    rdx,QWORD PTR [rsp+0x28]
  406388:	mov    esi,0x6
  40638d:	mov    rdi,rbx
  406390:	call   4021a0 <Mat_VarSetCell@plt>
  406395:	mov    esi,0x1
  40639a:	mov    rdi,rbx
  40639d:	call   402260 <Mat_VarPrint@plt>
  4063a2:	mov    rdx,QWORD PTR [rsp+0x30]
  4063a7:	xor    esi,esi
  4063a9:	mov    rdi,rbx
  4063ac:	call   4021a0 <Mat_VarSetCell@plt>
  4063b1:	cmp    r14,rax
  4063b4:	pop    rdx
  4063b5:	pop    rcx
  4063b6:	jne    4063f4 <Mat_VarRead@plt+0x4054>
  4063b8:	mov    rdi,r14
  4063bb:	call   402230 <Mat_VarFree@plt>
  4063c0:	mov    rdx,QWORD PTR [rsp+0x28]
  4063c5:	mov    esi,0x2
  4063ca:	mov    rdi,rbx
  4063cd:	call   4021a0 <Mat_VarSetCell@plt>
  4063d2:	cmp    r13,rax
  4063d5:	jne    4063f4 <Mat_VarRead@plt+0x4054>
  4063d7:	mov    rdi,r13
  4063da:	call   402230 <Mat_VarFree@plt>
  4063df:	mov    rdx,rbp
  4063e2:	mov    esi,0x4
  4063e7:	mov    rdi,rbx
  4063ea:	call   4021a0 <Mat_VarSetCell@plt>
  4063ef:	cmp    r15,rax
  4063f2:	je     406419 <Mat_VarRead@plt+0x4079>
  4063f4:	mov    rax,QWORD PTR [rip+0xebfd]        # 414ff8 <getopt_long_only@@Base+0x8068>
  4063fb:	lea    rdi,[rip+0x8ba6]        # 40efa8 <getopt_long_only@@Base+0x2018>
  406402:	mov    rsi,QWORD PTR [rax]
  406405:	call   4021b0 <fputs@plt>
  40640a:	mov    rdi,rbx
  40640d:	call   402230 <Mat_VarFree@plt>
  406412:	mov    eax,0x1
  406417:	jmp    406438 <Mat_VarRead@plt+0x4098>
  406419:	mov    rdi,r15
  40641c:	call   402230 <Mat_VarFree@plt>
  406421:	mov    esi,0x1
  406426:	mov    rdi,rbx
  406429:	call   402260 <Mat_VarPrint@plt>
  40642e:	mov    rdi,rbx
  406431:	call   402230 <Mat_VarFree@plt>
  406436:	xor    eax,eax
  406438:	mov    rcx,QWORD PTR [rsp+0x98]
  406440:	xor    rcx,QWORD PTR fs:0x28
  406449:	je     406450 <Mat_VarRead@plt+0x40b0>
  40644b:	call   402140 <__stack_chk_fail@plt>
  406450:	add    rsp,0xa8
  406457:	pop    rbx
  406458:	pop    rbp
  406459:	pop    r12
  40645b:	pop    r13
  40645d:	pop    r14
  40645f:	pop    r15
  406461:	ret    
  406462:	push   r15
  406464:	push   r14
  406466:	mov    ecx,0x2d0
  40646b:	push   r13
  40646d:	push   r12
  40646f:	lea    r12,[rip+0x7ff3]        # 40e469 <getopt_long_only@@Base+0x14d9>
  406476:	push   rbp
  406477:	push   rbx
  406478:	mov    r8d,0x2
  40647e:	mov    esi,0x4
  406483:	xor    r13d,r13d
  406486:	xor    ebx,ebx
  406488:	sub    rsp,0x1718
  40648f:	mov    rax,QWORD PTR fs:0x28
  406498:	mov    QWORD PTR [rsp+0x1708],rax
  4064a0:	xor    eax,eax
  4064a2:	lea    rdi,[rsp+0x80]
  4064aa:	lea    r15,[rsp+0x60]
  4064af:	mov    QWORD PTR [rsp+0x60],0x3
  4064b8:	mov    QWORD PTR [rsp+0x68],0x4
  4064c1:	mov    QWORD PTR [rsp+0x70],0x5
  4064ca:	lea    r14,[rsp+0xbc0]
  4064d2:	rep stos DWORD PTR es:[rdi],eax
  4064d4:	lea    rdi,[rsp+0xbc0]
  4064dc:	mov    ecx,0x2d0
  4064e1:	mov    rdx,r15
  4064e4:	mov    QWORD PTR [rsp+0x78],0x6
  4064ed:	rep stos DWORD PTR es:[rdi],eax
  4064ef:	lea    rdi,[rsp+0x40]
  4064f4:	mov    ecx,0x6
  4064f9:	rep stos DWORD PTR es:[rdi],eax
  4064fb:	lea    rax,[rip+0x83cd]        # 40e8cf <getopt_long_only@@Base+0x193f>
  406502:	lea    rcx,[rsp+0x40]
  406507:	lea    rdi,[rip+0x7b7c]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40650e:	mov    QWORD PTR [rsp+0x40],r12
  406513:	mov    QWORD PTR [rsp+0x48],rax
  406518:	call   402300 <Mat_VarCreateStruct@plt>
  40651d:	lea    r10,[rsp+0x80]
  406525:	mov    rbp,rax
  406528:	mov    QWORD PTR [rsp+0x60],0x1
  406531:	mov    QWORD PTR [rsp+0x68],0x1
  40653a:	inc    ebx
  40653c:	sub    rsp,0x8
  406540:	mov    r9,r10
  406543:	vcvtsi2sd xmm0,xmm0,ebx
  406547:	mov    eax,ebx
  406549:	neg    eax
  40654b:	mov    r8,r15
  40654e:	xor    edi,edi
  406550:	mov    ecx,0x2
  406555:	mov    edx,0x9
  40655a:	mov    esi,0x6
  40655f:	vmovsd QWORD PTR [r10],xmm0
  406564:	vcvtsi2sd xmm0,xmm0,eax
  406568:	vmovsd QWORD PTR [r14],xmm0
  40656d:	push   0x1
  40656f:	mov    QWORD PTR [rsp+0x18],r10
  406574:	call   4020d0 <Mat_VarCreate@plt>
  406579:	mov    rdx,r13
  40657c:	mov    rcx,rax
  40657f:	mov    rsi,r12
  406582:	mov    rdi,rbp
  406585:	call   402380 <Mat_VarSetStructFieldByName@plt>
  40658a:	mov    r9,r14
  40658d:	xor    edi,edi
  40658f:	mov    r8,r15
  406592:	mov    ecx,0x2
  406597:	mov    edx,0x9
  40659c:	mov    esi,0x6
  4065a1:	mov    DWORD PTR [rsp],0x1
  4065a8:	add    r14,0x8
  4065ac:	call   4020d0 <Mat_VarCreate@plt>
  4065b1:	lea    rsi,[rip+0x8317]        # 40e8cf <getopt_long_only@@Base+0x193f>
  4065b8:	mov    rdx,r13
  4065bb:	mov    rcx,rax
  4065be:	mov    rdi,rbp
  4065c1:	inc    r13
  4065c4:	call   402380 <Mat_VarSetStructFieldByName@plt>
  4065c9:	mov    r10,QWORD PTR [rsp+0x18]
  4065ce:	pop    rax
  4065cf:	pop    rdx
  4065d0:	add    r10,0x8
  4065d4:	cmp    ebx,0x168
  4065da:	jne    40653a <Mat_VarRead@plt+0x419a>
  4065e0:	lea    rdx,[rsp+0x20]
  4065e5:	lea    rcx,[rsp+0x30]
  4065ea:	lea    rsi,[rsp+0x10]
  4065ef:	xor    r8d,r8d
  4065f2:	mov    rdi,rbp
  4065f5:	mov    DWORD PTR [rsp+0x10],0x1
  4065fd:	mov    DWORD PTR [rsp+0x14],0x1
  406605:	mov    DWORD PTR [rsp+0x18],0x0
  40660d:	mov    DWORD PTR [rsp+0x1c],0x1
  406615:	mov    DWORD PTR [rsp+0x20],0x0
  40661d:	mov    DWORD PTR [rsp+0x24],0x1
  406625:	mov    DWORD PTR [rsp+0x28],0x2
  40662d:	mov    DWORD PTR [rsp+0x2c],0x4
  406635:	mov    DWORD PTR [rsp+0x30],0x1
  40663d:	mov    DWORD PTR [rsp+0x34],0x2
  406645:	mov    DWORD PTR [rsp+0x38],0x3
  40664d:	mov    DWORD PTR [rsp+0x3c],0x2
  406655:	call   402280 <Mat_VarGetStructs@plt>
  40665a:	mov    esi,0x1
  40665f:	mov    rbx,rax
  406662:	mov    rdi,rax
  406665:	call   402260 <Mat_VarPrint@plt>
  40666a:	mov    rdi,rbx
  40666d:	call   402230 <Mat_VarFree@plt>
  406672:	mov    rdi,rbp
  406675:	call   402230 <Mat_VarFree@plt>
  40667a:	xor    eax,eax
  40667c:	mov    rdx,QWORD PTR [rsp+0x1708]
  406684:	xor    rdx,QWORD PTR fs:0x28
  40668d:	je     406694 <Mat_VarRead@plt+0x42f4>
  40668f:	call   402140 <__stack_chk_fail@plt>
  406694:	add    rsp,0x1718
  40669b:	pop    rbx
  40669c:	pop    rbp
  40669d:	pop    r12
  40669f:	pop    r13
  4066a1:	pop    r14
  4066a3:	pop    r15
  4066a5:	ret    
  4066a6:	push   r14
  4066a8:	push   r13
  4066aa:	mov    ecx,0x2d0
  4066af:	push   r12
  4066b1:	push   rbp
  4066b2:	mov    esi,0x1
  4066b7:	push   rbx
  4066b8:	xor    r9d,r9d
  4066bb:	mov    edx,0x15
  4066c0:	xor    ebx,ebx
  4066c2:	sub    rsp,0xba0
  4066c9:	mov    rax,QWORD PTR fs:0x28
  4066d2:	mov    QWORD PTR [rsp+0xb98],rax
  4066da:	xor    eax,eax
  4066dc:	lea    rdi,[rsp+0x50]
  4066e1:	mov    QWORD PTR [rsp+0x30],0x3
  4066ea:	mov    QWORD PTR [rsp+0x38],0x4
  4066f3:	mov    QWORD PTR [rsp+0x40],0x5
  4066fc:	mov    QWORD PTR [rsp+0x48],0x6
  406705:	lea    r13,[rsp+0x30]
  40670a:	sub    rsp,0x8
  40670e:	rep stos DWORD PTR es:[rdi],eax
  406710:	push   0x0
  406712:	lea    rdi,[rip+0x7971]        # 40e08a <getopt_long_only@@Base+0x10fa>
  406719:	mov    ecx,0x4
  40671e:	mov    r8,r13
  406721:	call   4020d0 <Mat_VarCreate@plt>
  406726:	lea    rbp,[rsp+0x60]
  40672b:	mov    QWORD PTR [rsp+0x40],0x1
  406734:	mov    QWORD PTR [rsp+0x48],0x1
  40673d:	pop    rcx
  40673e:	pop    rsi
  40673f:	mov    r12,rax
  406742:	lea    r14d,[rbx+0x1]
  406746:	sub    rsp,0x8
  40674a:	mov    r9,rbp
  40674d:	xor    edi,edi
  40674f:	mov    r8,r13
  406752:	mov    ecx,0x2
  406757:	vcvtsi2sd xmm0,xmm0,r14d
  40675c:	mov    edx,0x9
  406761:	mov    esi,0x6
  406766:	add    rbp,0x8
  40676a:	vmovsd QWORD PTR [rbp-0x8],xmm0
  40676f:	push   0x1
  406771:	call   4020d0 <Mat_VarCreate@plt>
  406776:	mov    esi,ebx
  406778:	mov    rdx,rax
  40677b:	mov    rdi,r12
  40677e:	call   4021a0 <Mat_VarSetCell@plt>
  406783:	cmp    r14d,0x168
  40678a:	mov    ebx,r14d
  40678d:	pop    rax
  40678e:	pop    rdx
  40678f:	jne    406742 <Mat_VarRead@plt+0x43a2>
  406791:	lea    rcx,[rsp+0x20]
  406796:	lea    rdx,[rsp+0x10]
  40679b:	mov    rsi,rsp
  40679e:	mov    rdi,r12
  4067a1:	mov    DWORD PTR [rsp],0x1
  4067a8:	mov    DWORD PTR [rsp+0x4],0x1
  4067b0:	mov    DWORD PTR [rsp+0x8],0x0
  4067b8:	mov    DWORD PTR [rsp+0xc],0x1
  4067c0:	mov    DWORD PTR [rsp+0x10],0x0
  4067c8:	mov    DWORD PTR [rsp+0x14],0x1
  4067d0:	mov    DWORD PTR [rsp+0x18],0x2
  4067d8:	mov    DWORD PTR [rsp+0x1c],0x4
  4067e0:	mov    DWORD PTR [rsp+0x20],0x1
  4067e8:	mov    DWORD PTR [rsp+0x24],0x2
  4067f0:	mov    DWORD PTR [rsp+0x28],0x3
  4067f8:	mov    DWORD PTR [rsp+0x2c],0x2
  406800:	call   4020a0 <Mat_VarGetCells@plt>
  406805:	test   rax,rax
  406808:	mov    rbp,rax
  40680b:	je     406830 <Mat_VarRead@plt+0x4490>
  40680d:	xor    ebx,ebx
  40680f:	mov    rdi,QWORD PTR [rbp+rbx*1+0x0]
  406814:	mov    esi,0x1
  406819:	add    rbx,0x8
  40681d:	call   402260 <Mat_VarPrint@plt>
  406822:	cmp    rbx,0x60
  406826:	jne    40680f <Mat_VarRead@plt+0x446f>
  406828:	mov    rdi,rbp
  40682b:	call   402050 <free@plt>
  406830:	mov    rdi,r12
  406833:	call   402230 <Mat_VarFree@plt>
  406838:	xor    eax,eax
  40683a:	mov    rdx,QWORD PTR [rsp+0xb98]
  406842:	xor    rdx,QWORD PTR fs:0x28
  40684b:	je     406852 <Mat_VarRead@plt+0x44b2>
  40684d:	call   402140 <__stack_chk_fail@plt>
  406852:	add    rsp,0xba0
  406859:	pop    rbx
  40685a:	pop    rbp
  40685b:	pop    r12
  40685d:	pop    r13
  40685f:	pop    r14
  406861:	ret    
  406862:	push   r15
  406864:	push   r14
  406866:	push   r13
  406868:	push   r12
  40686a:	mov    r13d,edx
  40686d:	push   rbp
  40686e:	push   rbx
  40686f:	mov    rbx,rsi
  406872:	xor    esi,esi
  406874:	mov    r12d,0x1
  40687a:	sub    rsp,0xa8
  406881:	mov    rax,QWORD PTR fs:0x28
  40688a:	mov    QWORD PTR [rsp+0x98],rax
  406892:	xor    eax,eax
  406894:	mov    DWORD PTR [rsp+0x2c],0x0
  40689c:	mov    DWORD PTR [rsp+0x30],0x0
  4068a4:	mov    DWORD PTR [rsp+0x34],0x0
  4068ac:	mov    DWORD PTR [rsp+0x38],0x1
  4068b4:	mov    DWORD PTR [rsp+0x3c],0x1
  4068bc:	mov    DWORD PTR [rsp+0x40],0x1
  4068c4:	mov    DWORD PTR [rsp+0x44],0x2
  4068cc:	mov    DWORD PTR [rsp+0x48],0x2
  4068d4:	mov    DWORD PTR [rsp+0x4c],0x1
  4068dc:	call   402080 <Mat_Open@plt>
  4068e1:	test   rax,rax
  4068e4:	je     407be8 <Mat_VarRead@plt+0x5848>
  4068ea:	mov    rsi,rbx
  4068ed:	mov    rdi,rax
  4068f0:	mov    rbp,rax
  4068f3:	call   402180 <Mat_VarReadInfo@plt>
  4068f8:	test   rax,rax
  4068fb:	mov    rbx,rax
  4068fe:	jne    40690b <Mat_VarRead@plt+0x456b>
  406900:	mov    r12d,0x1
  406906:	jmp    407be0 <Mat_VarRead@plt+0x5840>
  40690b:	cmp    DWORD PTR [rax+0x14],0x2
  40690f:	jne    406935 <Mat_VarRead@plt+0x4595>
  406911:	lea    rsi,[rsp+0x10]
  406916:	xor    ecx,ecx
  406918:	mov    edx,0x2
  40691d:	mov    rdi,rax
  406920:	mov    DWORD PTR [rsp+0x10],0x2
  406928:	call   402200 <Mat_VarGetStructField@plt>
  40692d:	test   rax,rax
  406930:	mov    rbx,rax
  406933:	je     406900 <Mat_VarRead@plt+0x4560>
  406935:	mov    rdx,QWORD PTR [rbx+0x28]
  406939:	mov    DWORD PTR [rbx+0x14],r13d
  40693d:	sub    r13d,0x6
  406941:	mov    r12d,0x1
  406947:	mov    eax,DWORD PTR [rdx]
  406949:	dec    eax
  40694b:	mov    DWORD PTR [rsp+0x38],eax
  40694f:	mov    rax,QWORD PTR [rdx+0x8]
  406953:	dec    eax
  406955:	cmp    r13d,0x9
  406959:	mov    DWORD PTR [rsp+0x3c],eax
  40695d:	ja     407bd8 <Mat_VarRead@plt+0x5838>
  406963:	lea    rdx,[rip+0x8576]        # 40eee0 <getopt_long_only@@Base+0x1f50>
  40696a:	mov    r12d,DWORD PTR [rbx+0x18]
  40696e:	lea    r14,[rsp+0x44]
  406973:	lea    r15,[rsp+0x2c]
  406978:	movsxd rax,DWORD PTR [rdx+r13*4]
  40697c:	lea    r13,[rsp+0x38]
  406981:	add    rax,rdx
  406984:	test   r12d,r12d
  406987:	jmp    rax
  406989:	lea    rax,[rsp+0x70]
  40698e:	mov    QWORD PTR [rsp+0x8],rax
  406993:	je     406a8f <Mat_VarRead@plt+0x46ef>
  406999:	lea    rax,[rsp+0x50]
  40699e:	lea    r12,[rsp+0x10]
  4069a3:	mov    r9,r14
  4069a6:	mov    r8,r13
  4069a9:	mov    rcx,r15
  4069ac:	mov    rsi,rbx
  4069af:	mov    QWORD PTR [rsp+0x10],rax
  4069b4:	mov    rax,QWORD PTR [rsp+0x8]
  4069b9:	mov    rdx,r12
  4069bc:	mov    rdi,rbp
  4069bf:	mov    QWORD PTR [rsp+0x18],rax
  4069c4:	call   402130 <Mat_VarReadData@plt>
  4069c9:	vmovsd xmm7,QWORD PTR [rsp+0x88]
  4069d2:	lea    rsi,[rip+0x85ff]        # 40efd8 <getopt_long_only@@Base+0x2048>
  4069d9:	vmovsd xmm6,QWORD PTR [rsp+0x68]
  4069df:	mov    edi,0x1
  4069e4:	vmovsd xmm5,QWORD PTR [rsp+0x78]
  4069ea:	mov    al,0x8
  4069ec:	vmovsd xmm4,QWORD PTR [rsp+0x58]
  4069f2:	vmovsd xmm3,QWORD PTR [rsp+0x80]
  4069fb:	vmovsd xmm2,QWORD PTR [rsp+0x60]
  406a01:	vmovsd xmm1,QWORD PTR [rsp+0x70]
  406a07:	vmovsd xmm0,QWORD PTR [rsp+0x50]
  406a0d:	call   4022f0 <__printf_chk@plt>
  406a12:	cmp    DWORD PTR [rbp+0x20],0x200
  406a19:	je     406a54 <Mat_VarRead@plt+0x46b4>
  406a1b:	mov    rdi,QWORD PTR [rbx+0x28]
  406a1f:	mov    esi,0x18
  406a24:	call   4022c0 <realloc@plt>
  406a29:	test   rax,rax
  406a2c:	je     406a54 <Mat_VarRead@plt+0x46b4>
  406a2e:	inc    DWORD PTR [rbx+0x8]
  406a31:	mov    QWORD PTR [rbx+0x28],rax
  406a35:	mov    r9,r14
  406a38:	mov    QWORD PTR [rax+0x10],0x1
  406a40:	mov    r8,r13
  406a43:	mov    rcx,r15
  406a46:	mov    rdx,r12
  406a49:	mov    rsi,rbx
  406a4c:	mov    rdi,rbp
  406a4f:	call   402130 <Mat_VarReadData@plt>
  406a54:	vmovsd xmm7,QWORD PTR [rsp+0x88]
  406a5d:	vmovsd xmm6,QWORD PTR [rsp+0x68]
  406a63:	vmovsd xmm5,QWORD PTR [rsp+0x78]
  406a69:	vmovsd xmm4,QWORD PTR [rsp+0x58]
  406a6f:	vmovsd xmm3,QWORD PTR [rsp+0x80]
  406a78:	vmovsd xmm2,QWORD PTR [rsp+0x60]
  406a7e:	vmovsd xmm1,QWORD PTR [rsp+0x70]
  406a84:	vmovsd xmm0,QWORD PTR [rsp+0x50]
  406a8a:	jmp    406c48 <Mat_VarRead@plt+0x48a8>
  406a8f:	mov    rdx,QWORD PTR [rsp+0x8]
  406a94:	mov    r9,r14
  406a97:	mov    r8,r13
  406a9a:	mov    rcx,r15
  406a9d:	mov    rsi,rbx
  406aa0:	mov    rdi,rbp
  406aa3:	call   402130 <Mat_VarReadData@plt>
  406aa8:	vmovsd xmm3,QWORD PTR [rsp+0x88]
  406ab1:	lea    rsi,[rip+0x75e2]        # 40e09a <getopt_long_only@@Base+0x110a>
  406ab8:	vmovsd xmm2,QWORD PTR [rsp+0x78]
  406abe:	mov    edi,0x1
  406ac3:	vmovsd xmm1,QWORD PTR [rsp+0x80]
  406acc:	mov    al,0x4
  406ace:	vmovsd xmm0,QWORD PTR [rsp+0x70]
  406ad4:	call   4022f0 <__printf_chk@plt>
  406ad9:	cmp    DWORD PTR [rbp+0x20],0x200
  406ae0:	je     406b1d <Mat_VarRead@plt+0x477d>
  406ae2:	mov    rdi,QWORD PTR [rbx+0x28]
  406ae6:	mov    esi,0x18
  406aeb:	call   4022c0 <realloc@plt>
  406af0:	test   rax,rax
  406af3:	je     406b1d <Mat_VarRead@plt+0x477d>
  406af5:	inc    DWORD PTR [rbx+0x8]
  406af8:	mov    rdx,QWORD PTR [rsp+0x8]
  406afd:	mov    r9,r14
  406b00:	mov    QWORD PTR [rbx+0x28],rax
  406b04:	mov    r8,r13
  406b07:	mov    QWORD PTR [rax+0x10],0x1
  406b0f:	mov    rcx,r15
  406b12:	mov    rsi,rbx
  406b15:	mov    rdi,rbp
  406b18:	call   402130 <Mat_VarReadData@plt>
  406b1d:	vmovsd xmm3,QWORD PTR [rsp+0x88]
  406b26:	lea    rsi,[rip+0x756d]        # 40e09a <getopt_long_only@@Base+0x110a>
  406b2d:	vmovsd xmm2,QWORD PTR [rsp+0x78]
  406b33:	mov    edi,0x1
  406b38:	vmovsd xmm1,QWORD PTR [rsp+0x80]
  406b41:	mov    al,0x4
  406b43:	vmovsd xmm0,QWORD PTR [rsp+0x70]
  406b49:	call   4022f0 <__printf_chk@plt>
  406b4e:	jmp    407bd8 <Mat_VarRead@plt+0x5838>
  406b53:	lea    rax,[rsp+0x70]
  406b58:	mov    QWORD PTR [rsp+0x8],rax
  406b5d:	je     406c63 <Mat_VarRead@plt+0x48c3>
  406b63:	lea    rax,[rsp+0x50]
  406b68:	lea    r12,[rsp+0x10]
  406b6d:	mov    r9,r14
  406b70:	mov    r8,r13
  406b73:	mov    rcx,r15
  406b76:	mov    rsi,rbx
  406b79:	mov    QWORD PTR [rsp+0x10],rax
  406b7e:	mov    rax,QWORD PTR [rsp+0x8]
  406b83:	mov    rdx,r12
  406b86:	mov    rdi,rbp
  406b89:	mov    QWORD PTR [rsp+0x18],rax
  406b8e:	call   402130 <Mat_VarReadData@plt>
  406b93:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsp+0x50]
  406b99:	lea    rsi,[rip+0x8438]        # 40efd8 <getopt_long_only@@Base+0x2048>
  406ba0:	mov    edi,0x1
  406ba5:	vcvtss2sd xmm7,xmm7,DWORD PTR [rsp+0x7c]
  406bab:	mov    al,0x8
  406bad:	vcvtss2sd xmm6,xmm6,DWORD PTR [rsp+0x5c]
  406bb3:	vcvtss2sd xmm5,xmm5,DWORD PTR [rsp+0x74]
  406bb9:	vcvtss2sd xmm4,xmm4,DWORD PTR [rsp+0x54]
  406bbf:	vcvtss2sd xmm3,xmm3,DWORD PTR [rsp+0x78]
  406bc5:	vcvtss2sd xmm2,xmm2,DWORD PTR [rsp+0x58]
  406bcb:	vcvtss2sd xmm1,xmm1,DWORD PTR [rsp+0x70]
  406bd1:	call   4022f0 <__printf_chk@plt>
  406bd6:	cmp    DWORD PTR [rbp+0x20],0x200
  406bdd:	je     406c18 <Mat_VarRead@plt+0x4878>
  406bdf:	mov    rdi,QWORD PTR [rbx+0x28]
  406be3:	mov    esi,0x18
  406be8:	call   4022c0 <realloc@plt>
  406bed:	test   rax,rax
  406bf0:	je     406c18 <Mat_VarRead@plt+0x4878>
  406bf2:	inc    DWORD PTR [rbx+0x8]
  406bf5:	mov    QWORD PTR [rbx+0x28],rax
  406bf9:	mov    r9,r14
  406bfc:	mov    QWORD PTR [rax+0x10],0x1
  406c04:	mov    r8,r13
  406c07:	mov    rcx,r15
  406c0a:	mov    rdx,r12
  406c0d:	mov    rsi,rbx
  406c10:	mov    rdi,rbp
  406c13:	call   402130 <Mat_VarReadData@plt>
  406c18:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsp+0x50]
  406c1e:	vcvtss2sd xmm7,xmm7,DWORD PTR [rsp+0x7c]
  406c24:	vcvtss2sd xmm6,xmm6,DWORD PTR [rsp+0x5c]
  406c2a:	vcvtss2sd xmm5,xmm5,DWORD PTR [rsp+0x74]
  406c30:	vcvtss2sd xmm4,xmm4,DWORD PTR [rsp+0x54]
  406c36:	vcvtss2sd xmm3,xmm3,DWORD PTR [rsp+0x78]
  406c3c:	vcvtss2sd xmm2,xmm2,DWORD PTR [rsp+0x58]
  406c42:	vcvtss2sd xmm1,xmm1,DWORD PTR [rsp+0x70]
  406c48:	lea    rsi,[rip+0x8389]        # 40efd8 <getopt_long_only@@Base+0x2048>
  406c4f:	mov    edi,0x1
  406c54:	mov    al,0x8
  406c56:	xor    r12d,r12d
  406c59:	call   4022f0 <__printf_chk@plt>
  406c5e:	jmp    407bd8 <Mat_VarRead@plt+0x5838>
  406c63:	mov    rdx,QWORD PTR [rsp+0x8]
  406c68:	mov    r9,r14
  406c6b:	mov    r8,r13
  406c6e:	mov    rcx,r15
  406c71:	mov    rsi,rbx
  406c74:	mov    rdi,rbp
  406c77:	call   402130 <Mat_VarReadData@plt>
  406c7c:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsp+0x70]
  406c82:	lea    rsi,[rip+0x7411]        # 40e09a <getopt_long_only@@Base+0x110a>
  406c89:	mov    edi,0x1
  406c8e:	vcvtss2sd xmm3,xmm3,DWORD PTR [rsp+0x7c]
  406c94:	mov    al,0x4
  406c96:	vcvtss2sd xmm2,xmm2,DWORD PTR [rsp+0x74]
  406c9c:	vcvtss2sd xmm1,xmm1,DWORD PTR [rsp+0x78]
  406ca2:	call   4022f0 <__printf_chk@plt>
  406ca7:	cmp    DWORD PTR [rbp+0x20],0x200
  406cae:	je     406ceb <Mat_VarRead@plt+0x494b>
  406cb0:	mov    rdi,QWORD PTR [rbx+0x28]
  406cb4:	mov    esi,0x18
  406cb9:	call   4022c0 <realloc@plt>
  406cbe:	test   rax,rax
  406cc1:	je     406ceb <Mat_VarRead@plt+0x494b>
  406cc3:	inc    DWORD PTR [rbx+0x8]
  406cc6:	mov    rdx,QWORD PTR [rsp+0x8]
  406ccb:	mov    r9,r14
  406cce:	mov    QWORD PTR [rbx+0x28],rax
  406cd2:	mov    r8,r13
  406cd5:	mov    QWORD PTR [rax+0x10],0x1
  406cdd:	mov    rcx,r15
  406ce0:	mov    rsi,rbx
  406ce3:	mov    rdi,rbp
  406ce6:	call   402130 <Mat_VarReadData@plt>
  406ceb:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsp+0x70]
  406cf1:	lea    rsi,[rip+0x73a2]        # 40e09a <getopt_long_only@@Base+0x110a>
  406cf8:	mov    edi,0x1
  406cfd:	vcvtss2sd xmm3,xmm3,DWORD PTR [rsp+0x7c]
  406d03:	mov    al,0x4
  406d05:	vcvtss2sd xmm2,xmm2,DWORD PTR [rsp+0x74]
  406d0b:	vcvtss2sd xmm1,xmm1,DWORD PTR [rsp+0x78]
  406d11:	call   4022f0 <__printf_chk@plt>
  406d16:	jmp    407bd8 <Mat_VarRead@plt+0x5838>
  406d1b:	lea    rax,[rsp+0x70]
  406d20:	mov    QWORD PTR [rsp+0x8],rax
  406d25:	je     406e2b <Mat_VarRead@plt+0x4a8b>
  406d2b:	lea    rax,[rsp+0x50]
  406d30:	lea    r15,[rsp+0x2c]
  406d35:	lea    r12,[rsp+0x10]
  406d3a:	mov    r9,r14
  406d3d:	mov    r8,r13
  406d40:	mov    rsi,rbx
  406d43:	mov    QWORD PTR [rsp+0x10],rax
  406d48:	mov    rax,QWORD PTR [rsp+0x8]
  406d4d:	mov    rcx,r15
  406d50:	mov    rdx,r12
  406d53:	mov    rdi,rbp
  406d56:	mov    QWORD PTR [rsp+0x18],rax
  406d5b:	call   402130 <Mat_VarReadData@plt>
  406d60:	push   QWORD PTR [rsp+0x88]
  406d67:	push   QWORD PTR [rsp+0x70]
  406d6b:	lea    rsi,[rip+0x8296]        # 40f008 <getopt_long_only@@Base+0x2078>
  406d72:	push   QWORD PTR [rsp+0x88]
  406d79:	push   QWORD PTR [rsp+0x70]
  406d7d:	xor    eax,eax
  406d7f:	mov    r9,QWORD PTR [rsp+0xa0]
  406d87:	mov    r8,QWORD PTR [rsp+0x80]
  406d8f:	mov    edi,0x1
  406d94:	mov    rcx,QWORD PTR [rsp+0x90]
  406d9c:	mov    rdx,QWORD PTR [rsp+0x70]
  406da1:	call   4022f0 <__printf_chk@plt>
  406da6:	add    rsp,0x20
  406daa:	cmp    DWORD PTR [rbp+0x20],0x200
  406db1:	je     406dec <Mat_VarRead@plt+0x4a4c>
  406db3:	mov    rdi,QWORD PTR [rbx+0x28]
  406db7:	mov    esi,0x18
  406dbc:	call   4022c0 <realloc@plt>
  406dc1:	test   rax,rax
  406dc4:	je     406dec <Mat_VarRead@plt+0x4a4c>
  406dc6:	inc    DWORD PTR [rbx+0x8]
  406dc9:	mov    QWORD PTR [rbx+0x28],rax
  406dcd:	mov    r9,r14
  406dd0:	mov    QWORD PTR [rax+0x10],0x1
  406dd8:	mov    r8,r13
  406ddb:	mov    rcx,r15
  406dde:	mov    rdx,r12
  406de1:	mov    rsi,rbx
  406de4:	mov    rdi,rbp
  406de7:	call   402130 <Mat_VarReadData@plt>
  406dec:	push   QWORD PTR [rsp+0x88]
  406df3:	lea    rsi,[rip+0x820e]        # 40f008 <getopt_long_only@@Base+0x2078>
  406dfa:	push   QWORD PTR [rsp+0x70]
  406dfe:	push   QWORD PTR [rsp+0x88]
  406e05:	push   QWORD PTR [rsp+0x70]
  406e09:	mov    r9,QWORD PTR [rsp+0xa0]
  406e11:	mov    r8,QWORD PTR [rsp+0x80]
  406e19:	mov    rcx,QWORD PTR [rsp+0x90]
  406e21:	mov    rdx,QWORD PTR [rsp+0x70]
  406e26:	jmp    406ff2 <Mat_VarRead@plt+0x4c52>
  406e2b:	mov    rdx,QWORD PTR [rsp+0x8]
  406e30:	mov    r9,r14
  406e33:	mov    r8,r13
  406e36:	mov    rcx,r15
  406e39:	mov    rsi,rbx
  406e3c:	mov    rdi,rbp
  406e3f:	call   402130 <Mat_VarReadData@plt>
  406e44:	mov    r9,QWORD PTR [rsp+0x88]
  406e4c:	mov    r8,QWORD PTR [rsp+0x78]
  406e51:	lea    rsi,[rip+0x7255]        # 40e0ad <getopt_long_only@@Base+0x111d>
  406e58:	mov    rcx,QWORD PTR [rsp+0x80]
  406e60:	mov    rdx,QWORD PTR [rsp+0x70]
  406e65:	xor    eax,eax
  406e67:	mov    edi,0x1
  406e6c:	call   4022f0 <__printf_chk@plt>
  406e71:	cmp    DWORD PTR [rbp+0x20],0x200
  406e78:	je     406eb5 <Mat_VarRead@plt+0x4b15>
  406e7a:	mov    rdi,QWORD PTR [rbx+0x28]
  406e7e:	mov    esi,0x18
  406e83:	call   4022c0 <realloc@plt>
  406e88:	test   rax,rax
  406e8b:	je     406eb5 <Mat_VarRead@plt+0x4b15>
  406e8d:	inc    DWORD PTR [rbx+0x8]
  406e90:	mov    rdx,QWORD PTR [rsp+0x8]
  406e95:	mov    r9,r14
  406e98:	mov    QWORD PTR [rbx+0x28],rax
  406e9c:	mov    r8,r13
  406e9f:	mov    QWORD PTR [rax+0x10],0x1
  406ea7:	mov    rcx,r15
  406eaa:	mov    rsi,rbx
  406ead:	mov    rdi,rbp
  406eb0:	call   402130 <Mat_VarReadData@plt>
  406eb5:	mov    r9,QWORD PTR [rsp+0x88]
  406ebd:	mov    r8,QWORD PTR [rsp+0x78]
  406ec2:	lea    rsi,[rip+0x71e4]        # 40e0ad <getopt_long_only@@Base+0x111d>
  406ec9:	mov    rcx,QWORD PTR [rsp+0x80]
  406ed1:	mov    rdx,QWORD PTR [rsp+0x70]
  406ed6:	mov    edi,0x1
  406edb:	xor    eax,eax
  406edd:	call   4022f0 <__printf_chk@plt>
  406ee2:	jmp    407bd8 <Mat_VarRead@plt+0x5838>
  406ee7:	lea    rax,[rsp+0x70]
  406eec:	mov    QWORD PTR [rsp+0x8],rax
  406ef1:	je     40700a <Mat_VarRead@plt+0x4c6a>
  406ef7:	lea    rax,[rsp+0x50]
  406efc:	lea    r15,[rsp+0x2c]
  406f01:	lea    r12,[rsp+0x10]
  406f06:	mov    r9,r14
  406f09:	mov    r8,r13
  406f0c:	mov    rsi,rbx
  406f0f:	mov    QWORD PTR [rsp+0x10],rax
  406f14:	mov    rax,QWORD PTR [rsp+0x8]
  406f19:	mov    rcx,r15
  406f1c:	mov    rdx,r12
  406f1f:	mov    rdi,rbp
  406f22:	mov    QWORD PTR [rsp+0x18],rax
  406f27:	call   402130 <Mat_VarReadData@plt>
  406f2c:	push   QWORD PTR [rsp+0x88]
  406f33:	push   QWORD PTR [rsp+0x70]
  406f37:	lea    rsi,[rip+0x8102]        # 40f040 <getopt_long_only@@Base+0x20b0>
  406f3e:	push   QWORD PTR [rsp+0x88]
  406f45:	push   QWORD PTR [rsp+0x70]
  406f49:	xor    eax,eax
  406f4b:	mov    r9,QWORD PTR [rsp+0xa0]
  406f53:	mov    r8,QWORD PTR [rsp+0x80]
  406f5b:	mov    edi,0x1
  406f60:	mov    rcx,QWORD PTR [rsp+0x90]
  406f68:	mov    rdx,QWORD PTR [rsp+0x70]
  406f6d:	call   4022f0 <__printf_chk@plt>
  406f72:	add    rsp,0x20
  406f76:	cmp    DWORD PTR [rbp+0x20],0x200
  406f7d:	je     406fb8 <Mat_VarRead@plt+0x4c18>
  406f7f:	mov    rdi,QWORD PTR [rbx+0x28]
  406f83:	mov    esi,0x18
  406f88:	call   4022c0 <realloc@plt>
  406f8d:	test   rax,rax
  406f90:	je     406fb8 <Mat_VarRead@plt+0x4c18>
  406f92:	inc    DWORD PTR [rbx+0x8]
  406f95:	mov    QWORD PTR [rbx+0x28],rax
  406f99:	mov    r9,r14
  406f9c:	mov    QWORD PTR [rax+0x10],0x1
  406fa4:	mov    r8,r13
  406fa7:	mov    rcx,r15
  406faa:	mov    rdx,r12
  406fad:	mov    rsi,rbx
  406fb0:	mov    rdi,rbp
  406fb3:	call   402130 <Mat_VarReadData@plt>
  406fb8:	push   QWORD PTR [rsp+0x88]
  406fbf:	push   QWORD PTR [rsp+0x70]
  406fc3:	lea    rsi,[rip+0x8076]        # 40f040 <getopt_long_only@@Base+0x20b0>
  406fca:	push   QWORD PTR [rsp+0x88]
  406fd1:	push   QWORD PTR [rsp+0x70]
  406fd5:	mov    r9,QWORD PTR [rsp+0xa0]
  406fdd:	mov    r8,QWORD PTR [rsp+0x80]
  406fe5:	mov    rcx,QWORD PTR [rsp+0x90]
  406fed:	mov    rdx,QWORD PTR [rsp+0x70]
  406ff2:	mov    edi,0x1
  406ff7:	xor    eax,eax
  406ff9:	xor    r12d,r12d
  406ffc:	call   4022f0 <__printf_chk@plt>
  407001:	add    rsp,0x20
  407005:	jmp    407bd8 <Mat_VarRead@plt+0x5838>
  40700a:	mov    rdx,QWORD PTR [rsp+0x8]
  40700f:	mov    r9,r14
  407012:	mov    r8,r13
  407015:	mov    rcx,r15
  407018:	mov    rsi,rbx
  40701b:	mov    rdi,rbp
  40701e:	call   402130 <Mat_VarReadData@plt>
  407023:	mov    r9,QWORD PTR [rsp+0x88]
  40702b:	mov    r8,QWORD PTR [rsp+0x78]
  407030:	lea    rsi,[rip+0x708d]        # 40e0c4 <getopt_long_only@@Base+0x1134>
  407037:	mov    rcx,QWORD PTR [rsp+0x80]
  40703f:	mov    rdx,QWORD PTR [rsp+0x70]
  407044:	xor    eax,eax
  407046:	mov    edi,0x1
  40704b:	call   4022f0 <__printf_chk@plt>
  407050:	cmp    DWORD PTR [rbp+0x20],0x200
  407057:	je     407094 <Mat_VarRead@plt+0x4cf4>
  407059:	mov    rdi,QWORD PTR [rbx+0x28]
  40705d:	mov    esi,0x18
  407062:	call   4022c0 <realloc@plt>
  407067:	test   rax,rax
  40706a:	je     407094 <Mat_VarRead@plt+0x4cf4>
  40706c:	inc    DWORD PTR [rbx+0x8]
  40706f:	mov    rdx,QWORD PTR [rsp+0x8]
  407074:	mov    r9,r14
  407077:	mov    QWORD PTR [rbx+0x28],rax
  40707b:	mov    r8,r13
  40707e:	mov    QWORD PTR [rax+0x10],0x1
  407086:	mov    rcx,r15
  407089:	mov    rsi,rbx
  40708c:	mov    rdi,rbp
  40708f:	call   402130 <Mat_VarReadData@plt>
  407094:	mov    r9,QWORD PTR [rsp+0x88]
  40709c:	mov    r8,QWORD PTR [rsp+0x78]
  4070a1:	lea    rsi,[rip+0x701c]        # 40e0c4 <getopt_long_only@@Base+0x1134>
  4070a8:	mov    rcx,QWORD PTR [rsp+0x80]
  4070b0:	mov    rdx,QWORD PTR [rsp+0x70]
  4070b5:	mov    edi,0x1
  4070ba:	xor    eax,eax
  4070bc:	call   4022f0 <__printf_chk@plt>
  4070c1:	jmp    407bd8 <Mat_VarRead@plt+0x5838>
  4070c6:	lea    rax,[rsp+0x70]
  4070cb:	mov    QWORD PTR [rsp+0x8],rax
  4070d0:	je     4071ce <Mat_VarRead@plt+0x4e2e>
  4070d6:	lea    rax,[rsp+0x50]
  4070db:	lea    r15,[rsp+0x2c]
  4070e0:	lea    r12,[rsp+0x10]
  4070e5:	mov    r9,r14
  4070e8:	mov    r8,r13
  4070eb:	mov    rsi,rbx
  4070ee:	mov    QWORD PTR [rsp+0x10],rax
  4070f3:	mov    rax,QWORD PTR [rsp+0x8]
  4070f8:	mov    rcx,r15
  4070fb:	mov    rdx,r12
  4070fe:	mov    rdi,rbp
  407101:	mov    QWORD PTR [rsp+0x18],rax
  407106:	call   402130 <Mat_VarReadData@plt>
  40710b:	mov    eax,DWORD PTR [rsp+0x7c]
  40710f:	lea    rsi,[rip+0x7f62]        # 40f078 <getopt_long_only@@Base+0x20e8>
  407116:	mov    edi,0x1
  40711b:	push   rax
  40711c:	mov    eax,DWORD PTR [rsp+0x64]
  407120:	push   rax
  407121:	mov    eax,DWORD PTR [rsp+0x84]
  407128:	push   rax
  407129:	mov    eax,DWORD PTR [rsp+0x6c]
  40712d:	push   rax
  40712e:	mov    r9d,DWORD PTR [rsp+0x98]
  407136:	xor    eax,eax
  407138:	mov    r8d,DWORD PTR [rsp+0x78]
  40713d:	mov    ecx,DWORD PTR [rsp+0x90]
  407144:	mov    edx,DWORD PTR [rsp+0x70]
  407148:	call   4022f0 <__printf_chk@plt>
  40714d:	add    rsp,0x20
  407151:	cmp    DWORD PTR [rbp+0x20],0x200
  407158:	je     407193 <Mat_VarRead@plt+0x4df3>
  40715a:	mov    rdi,QWORD PTR [rbx+0x28]
  40715e:	mov    esi,0x18
  407163:	call   4022c0 <realloc@plt>
  407168:	test   rax,rax
  40716b:	je     407193 <Mat_VarRead@plt+0x4df3>
  40716d:	inc    DWORD PTR [rbx+0x8]
  407170:	mov    QWORD PTR [rbx+0x28],rax
  407174:	mov    r9,r14
  407177:	mov    QWORD PTR [rax+0x10],0x1
  40717f:	mov    r8,r13
  407182:	mov    rcx,r15
  407185:	mov    rdx,r12
  407188:	mov    rsi,rbx
  40718b:	mov    rdi,rbp
  40718e:	call   402130 <Mat_VarReadData@plt>
  407193:	mov    eax,DWORD PTR [rsp+0x7c]
  407197:	lea    rsi,[rip+0x7eda]        # 40f078 <getopt_long_only@@Base+0x20e8>
  40719e:	push   rax
  40719f:	mov    eax,DWORD PTR [rsp+0x64]
  4071a3:	push   rax
  4071a4:	mov    eax,DWORD PTR [rsp+0x84]
  4071ab:	push   rax
  4071ac:	mov    eax,DWORD PTR [rsp+0x6c]
  4071b0:	push   rax
  4071b1:	mov    r9d,DWORD PTR [rsp+0x98]
  4071b9:	mov    r8d,DWORD PTR [rsp+0x78]
  4071be:	mov    ecx,DWORD PTR [rsp+0x90]
  4071c5:	mov    edx,DWORD PTR [rsp+0x70]
  4071c9:	jmp    407af9 <Mat_VarRead@plt+0x5759>
  4071ce:	mov    rdx,QWORD PTR [rsp+0x8]
  4071d3:	mov    r9,r14
  4071d6:	mov    r8,r13
  4071d9:	mov    rcx,r15
  4071dc:	mov    rsi,rbx
  4071df:	mov    rdi,rbp
  4071e2:	call   402130 <Mat_VarReadData@plt>
  4071e7:	mov    r9d,DWORD PTR [rsp+0x7c]
  4071ec:	mov    r8d,DWORD PTR [rsp+0x74]
  4071f1:	lea    rsi,[rip+0x6ee3]        # 40e0db <getopt_long_only@@Base+0x114b>
  4071f8:	mov    ecx,DWORD PTR [rsp+0x78]
  4071fc:	mov    edx,DWORD PTR [rsp+0x70]
  407200:	xor    eax,eax
  407202:	mov    edi,0x1
  407207:	call   4022f0 <__printf_chk@plt>
  40720c:	cmp    DWORD PTR [rbp+0x20],0x200
  407213:	je     407250 <Mat_VarRead@plt+0x4eb0>
  407215:	mov    rdi,QWORD PTR [rbx+0x28]
  407219:	mov    esi,0x18
  40721e:	call   4022c0 <realloc@plt>
  407223:	test   rax,rax
  407226:	je     407250 <Mat_VarRead@plt+0x4eb0>
  407228:	inc    DWORD PTR [rbx+0x8]
  40722b:	mov    rdx,QWORD PTR [rsp+0x8]
  407230:	mov    r9,r14
  407233:	mov    QWORD PTR [rbx+0x28],rax
  407237:	mov    r8,r13
  40723a:	mov    QWORD PTR [rax+0x10],0x1
  407242:	mov    rcx,r15
  407245:	mov    rsi,rbx
  407248:	mov    rdi,rbp
  40724b:	call   402130 <Mat_VarReadData@plt>
  407250:	mov    r9d,DWORD PTR [rsp+0x7c]
  407255:	mov    r8d,DWORD PTR [rsp+0x74]
  40725a:	lea    rsi,[rip+0x6e7a]        # 40e0db <getopt_long_only@@Base+0x114b>
  407261:	mov    ecx,DWORD PTR [rsp+0x78]
  407265:	mov    edx,DWORD PTR [rsp+0x70]
  407269:	mov    edi,0x1
  40726e:	xor    eax,eax
  407270:	call   4022f0 <__printf_chk@plt>
  407275:	jmp    407bd8 <Mat_VarRead@plt+0x5838>
  40727a:	lea    rax,[rsp+0x70]
  40727f:	mov    QWORD PTR [rsp+0x8],rax
  407284:	je     407382 <Mat_VarRead@plt+0x4fe2>
  40728a:	lea    rax,[rsp+0x50]
  40728f:	lea    r15,[rsp+0x2c]
  407294:	lea    r12,[rsp+0x10]
  407299:	mov    r9,r14
  40729c:	mov    r8,r13
  40729f:	mov    rsi,rbx
  4072a2:	mov    QWORD PTR [rsp+0x10],rax
  4072a7:	mov    rax,QWORD PTR [rsp+0x8]
  4072ac:	mov    rcx,r15
  4072af:	mov    rdx,r12
  4072b2:	mov    rdi,rbp
  4072b5:	mov    QWORD PTR [rsp+0x18],rax
  4072ba:	call   402130 <Mat_VarReadData@plt>
  4072bf:	mov    eax,DWORD PTR [rsp+0x7c]
  4072c3:	lea    rsi,[rip+0x7dde]        # 40f0a8 <getopt_long_only@@Base+0x2118>
  4072ca:	mov    edi,0x1
  4072cf:	push   rax
  4072d0:	mov    eax,DWORD PTR [rsp+0x64]
  4072d4:	push   rax
  4072d5:	mov    eax,DWORD PTR [rsp+0x84]
  4072dc:	push   rax
  4072dd:	mov    eax,DWORD PTR [rsp+0x6c]
  4072e1:	push   rax
  4072e2:	mov    r9d,DWORD PTR [rsp+0x98]
  4072ea:	xor    eax,eax
  4072ec:	mov    r8d,DWORD PTR [rsp+0x78]
  4072f1:	mov    ecx,DWORD PTR [rsp+0x90]
  4072f8:	mov    edx,DWORD PTR [rsp+0x70]
  4072fc:	call   4022f0 <__printf_chk@plt>
  407301:	add    rsp,0x20
  407305:	cmp    DWORD PTR [rbp+0x20],0x200
  40730c:	je     407347 <Mat_VarRead@plt+0x4fa7>
  40730e:	mov    rdi,QWORD PTR [rbx+0x28]
  407312:	mov    esi,0x18
  407317:	call   4022c0 <realloc@plt>
  40731c:	test   rax,rax
  40731f:	je     407347 <Mat_VarRead@plt+0x4fa7>
  407321:	inc    DWORD PTR [rbx+0x8]
  407324:	mov    QWORD PTR [rbx+0x28],rax
  407328:	mov    r9,r14
  40732b:	mov    QWORD PTR [rax+0x10],0x1
  407333:	mov    r8,r13
  407336:	mov    rcx,r15
  407339:	mov    rdx,r12
  40733c:	mov    rsi,rbx
  40733f:	mov    rdi,rbp
  407342:	call   402130 <Mat_VarReadData@plt>
  407347:	mov    eax,DWORD PTR [rsp+0x7c]
  40734b:	lea    rsi,[rip+0x7d56]        # 40f0a8 <getopt_long_only@@Base+0x2118>
  407352:	push   rax
  407353:	mov    eax,DWORD PTR [rsp+0x64]
  407357:	push   rax
  407358:	mov    eax,DWORD PTR [rsp+0x84]
  40735f:	push   rax
  407360:	mov    eax,DWORD PTR [rsp+0x6c]
  407364:	push   rax
  407365:	mov    r9d,DWORD PTR [rsp+0x98]
  40736d:	mov    r8d,DWORD PTR [rsp+0x78]
  407372:	mov    ecx,DWORD PTR [rsp+0x90]
  407379:	mov    edx,DWORD PTR [rsp+0x70]
  40737d:	jmp    407af9 <Mat_VarRead@plt+0x5759>
  407382:	mov    rdx,QWORD PTR [rsp+0x8]
  407387:	mov    r9,r14
  40738a:	mov    r8,r13
  40738d:	mov    rcx,r15
  407390:	mov    rsi,rbx
  407393:	mov    rdi,rbp
  407396:	call   402130 <Mat_VarReadData@plt>
  40739b:	mov    r9d,DWORD PTR [rsp+0x7c]
  4073a0:	mov    r8d,DWORD PTR [rsp+0x74]
  4073a5:	lea    rsi,[rip+0x6d42]        # 40e0ee <getopt_long_only@@Base+0x115e>
  4073ac:	mov    ecx,DWORD PTR [rsp+0x78]
  4073b0:	mov    edx,DWORD PTR [rsp+0x70]
  4073b4:	xor    eax,eax
  4073b6:	mov    edi,0x1
  4073bb:	call   4022f0 <__printf_chk@plt>
  4073c0:	cmp    DWORD PTR [rbp+0x20],0x200
  4073c7:	je     407404 <Mat_VarRead@plt+0x5064>
  4073c9:	mov    rdi,QWORD PTR [rbx+0x28]
  4073cd:	mov    esi,0x18
  4073d2:	call   4022c0 <realloc@plt>
  4073d7:	test   rax,rax
  4073da:	je     407404 <Mat_VarRead@plt+0x5064>
  4073dc:	inc    DWORD PTR [rbx+0x8]
  4073df:	mov    rdx,QWORD PTR [rsp+0x8]
  4073e4:	mov    r9,r14
  4073e7:	mov    QWORD PTR [rbx+0x28],rax
  4073eb:	mov    r8,r13
  4073ee:	mov    QWORD PTR [rax+0x10],0x1
  4073f6:	mov    rcx,r15
  4073f9:	mov    rsi,rbx
  4073fc:	mov    rdi,rbp
  4073ff:	call   402130 <Mat_VarReadData@plt>
  407404:	mov    r9d,DWORD PTR [rsp+0x7c]
  407409:	mov    r8d,DWORD PTR [rsp+0x74]
  40740e:	lea    rsi,[rip+0x6cd9]        # 40e0ee <getopt_long_only@@Base+0x115e>
  407415:	mov    ecx,DWORD PTR [rsp+0x78]
  407419:	mov    edx,DWORD PTR [rsp+0x70]
  40741d:	mov    edi,0x1
  407422:	xor    eax,eax
  407424:	call   4022f0 <__printf_chk@plt>
  407429:	jmp    407bd8 <Mat_VarRead@plt+0x5838>
  40742e:	lea    rax,[rsp+0x70]
  407433:	mov    QWORD PTR [rsp+0x8],rax
  407438:	je     407540 <Mat_VarRead@plt+0x51a0>
  40743e:	lea    rax,[rsp+0x50]
  407443:	lea    r15,[rsp+0x2c]
  407448:	lea    r12,[rsp+0x10]
  40744d:	mov    r9,r14
  407450:	mov    r8,r13
  407453:	mov    rsi,rbx
  407456:	mov    QWORD PTR [rsp+0x10],rax
  40745b:	mov    rax,QWORD PTR [rsp+0x8]
  407460:	mov    rcx,r15
  407463:	mov    rdx,r12
  407466:	mov    rdi,rbp
  407469:	mov    QWORD PTR [rsp+0x18],rax
  40746e:	call   402130 <Mat_VarReadData@plt>
  407473:	movsx  eax,WORD PTR [rsp+0x76]
  407478:	movsx  ecx,WORD PTR [rsp+0x70]
  40747d:	lea    rsi,[rip+0x7c54]        # 40f0d8 <getopt_long_only@@Base+0x2148>
  407484:	movsx  edx,WORD PTR [rsp+0x50]
  407489:	mov    edi,0x1
  40748e:	push   rax
  40748f:	movsx  eax,WORD PTR [rsp+0x5e]
  407494:	push   rax
  407495:	movsx  eax,WORD PTR [rsp+0x82]
  40749d:	push   rax
  40749e:	movsx  eax,WORD PTR [rsp+0x6a]
  4074a3:	push   rax
  4074a4:	movsx  r9d,WORD PTR [rsp+0x94]
  4074ad:	xor    eax,eax
  4074af:	movsx  r8d,WORD PTR [rsp+0x74]
  4074b5:	call   4022f0 <__printf_chk@plt>
  4074ba:	add    rsp,0x20
  4074be:	cmp    DWORD PTR [rbp+0x20],0x200
  4074c5:	je     407500 <Mat_VarRead@plt+0x5160>
  4074c7:	mov    rdi,QWORD PTR [rbx+0x28]
  4074cb:	mov    esi,0x18
  4074d0:	call   4022c0 <realloc@plt>
  4074d5:	test   rax,rax
  4074d8:	je     407500 <Mat_VarRead@plt+0x5160>
  4074da:	inc    DWORD PTR [rbx+0x8]
  4074dd:	mov    QWORD PTR [rbx+0x28],rax
  4074e1:	mov    r9,r14
  4074e4:	mov    QWORD PTR [rax+0x10],0x1
  4074ec:	mov    r8,r13
  4074ef:	mov    rcx,r15
  4074f2:	mov    rdx,r12
  4074f5:	mov    rsi,rbx
  4074f8:	mov    rdi,rbp
  4074fb:	call   402130 <Mat_VarReadData@plt>
  407500:	movsx  eax,WORD PTR [rsp+0x76]
  407505:	movsx  ecx,WORD PTR [rsp+0x70]
  40750a:	lea    rsi,[rip+0x7bc7]        # 40f0d8 <getopt_long_only@@Base+0x2148>
  407511:	movsx  edx,WORD PTR [rsp+0x50]
  407516:	push   rax
  407517:	movsx  eax,WORD PTR [rsp+0x5e]
  40751c:	push   rax
  40751d:	movsx  eax,WORD PTR [rsp+0x82]
  407525:	push   rax
  407526:	movsx  eax,WORD PTR [rsp+0x6a]
  40752b:	push   rax
  40752c:	movsx  r9d,WORD PTR [rsp+0x94]
  407535:	movsx  r8d,WORD PTR [rsp+0x74]
  40753b:	jmp    407af9 <Mat_VarRead@plt+0x5759>
  407540:	mov    rdx,QWORD PTR [rsp+0x8]
  407545:	mov    r9,r14
  407548:	mov    r8,r13
  40754b:	mov    rcx,r15
  40754e:	mov    rsi,rbx
  407551:	mov    rdi,rbp
  407554:	call   402130 <Mat_VarReadData@plt>
  407559:	movsx  ecx,WORD PTR [rsp+0x74]
  40755e:	movsx  edx,WORD PTR [rsp+0x70]
  407563:	lea    rsi,[rip+0x6b97]        # 40e101 <getopt_long_only@@Base+0x1171>
  40756a:	movsx  r9d,WORD PTR [rsp+0x76]
  407570:	movsx  r8d,WORD PTR [rsp+0x72]
  407576:	xor    eax,eax
  407578:	mov    edi,0x1
  40757d:	call   4022f0 <__printf_chk@plt>
  407582:	cmp    DWORD PTR [rbp+0x20],0x200
  407589:	je     4075c6 <Mat_VarRead@plt+0x5226>
  40758b:	mov    rdi,QWORD PTR [rbx+0x28]
  40758f:	mov    esi,0x18
  407594:	call   4022c0 <realloc@plt>
  407599:	test   rax,rax
  40759c:	je     4075c6 <Mat_VarRead@plt+0x5226>
  40759e:	inc    DWORD PTR [rbx+0x8]
  4075a1:	mov    rdx,QWORD PTR [rsp+0x8]
  4075a6:	mov    r9,r14
  4075a9:	mov    QWORD PTR [rbx+0x28],rax
  4075ad:	mov    r8,r13
  4075b0:	mov    QWORD PTR [rax+0x10],0x1
  4075b8:	mov    rcx,r15
  4075bb:	mov    rsi,rbx
  4075be:	mov    rdi,rbp
  4075c1:	call   402130 <Mat_VarReadData@plt>
  4075c6:	movsx  ecx,WORD PTR [rsp+0x74]
  4075cb:	movsx  edx,WORD PTR [rsp+0x70]
  4075d0:	lea    rsi,[rip+0x6b2a]        # 40e101 <getopt_long_only@@Base+0x1171>
  4075d7:	movsx  r9d,WORD PTR [rsp+0x76]
  4075dd:	movsx  r8d,WORD PTR [rsp+0x72]
  4075e3:	mov    edi,0x1
  4075e8:	xor    eax,eax
  4075ea:	call   4022f0 <__printf_chk@plt>
  4075ef:	jmp    407bd8 <Mat_VarRead@plt+0x5838>
  4075f4:	lea    rax,[rsp+0x70]
  4075f9:	mov    QWORD PTR [rsp+0x8],rax
  4075fe:	je     407706 <Mat_VarRead@plt+0x5366>
  407604:	lea    rax,[rsp+0x50]
  407609:	lea    r15,[rsp+0x2c]
  40760e:	lea    r12,[rsp+0x10]
  407613:	mov    r9,r14
  407616:	mov    r8,r13
  407619:	mov    rsi,rbx
  40761c:	mov    QWORD PTR [rsp+0x10],rax
  407621:	mov    rax,QWORD PTR [rsp+0x8]
  407626:	mov    rcx,r15
  407629:	mov    rdx,r12
  40762c:	mov    rdi,rbp
  40762f:	mov    QWORD PTR [rsp+0x18],rax
  407634:	call   402130 <Mat_VarReadData@plt>
  407639:	movzx  eax,WORD PTR [rsp+0x76]
  40763e:	movzx  ecx,WORD PTR [rsp+0x70]
  407643:	lea    rsi,[rip+0x7ac6]        # 40f110 <getopt_long_only@@Base+0x2180>
  40764a:	movzx  edx,WORD PTR [rsp+0x50]
  40764f:	mov    edi,0x1
  407654:	push   rax
  407655:	movzx  eax,WORD PTR [rsp+0x5e]
  40765a:	push   rax
  40765b:	movzx  eax,WORD PTR [rsp+0x82]
  407663:	push   rax
  407664:	movzx  eax,WORD PTR [rsp+0x6a]
  407669:	push   rax
  40766a:	movzx  r9d,WORD PTR [rsp+0x94]
  407673:	xor    eax,eax
  407675:	movzx  r8d,WORD PTR [rsp+0x74]
  40767b:	call   4022f0 <__printf_chk@plt>
  407680:	add    rsp,0x20
  407684:	cmp    DWORD PTR [rbp+0x20],0x200
  40768b:	je     4076c6 <Mat_VarRead@plt+0x5326>
  40768d:	mov    rdi,QWORD PTR [rbx+0x28]
  407691:	mov    esi,0x18
  407696:	call   4022c0 <realloc@plt>
  40769b:	test   rax,rax
  40769e:	je     4076c6 <Mat_VarRead@plt+0x5326>
  4076a0:	inc    DWORD PTR [rbx+0x8]
  4076a3:	mov    QWORD PTR [rbx+0x28],rax
  4076a7:	mov    r9,r14
  4076aa:	mov    QWORD PTR [rax+0x10],0x1
  4076b2:	mov    r8,r13
  4076b5:	mov    rcx,r15
  4076b8:	mov    rdx,r12
  4076bb:	mov    rsi,rbx
  4076be:	mov    rdi,rbp
  4076c1:	call   402130 <Mat_VarReadData@plt>
  4076c6:	movzx  eax,WORD PTR [rsp+0x76]
  4076cb:	movzx  ecx,WORD PTR [rsp+0x70]
  4076d0:	lea    rsi,[rip+0x7a39]        # 40f110 <getopt_long_only@@Base+0x2180>
  4076d7:	movzx  edx,WORD PTR [rsp+0x50]
  4076dc:	push   rax
  4076dd:	movzx  eax,WORD PTR [rsp+0x5e]
  4076e2:	push   rax
  4076e3:	movzx  eax,WORD PTR [rsp+0x82]
  4076eb:	push   rax
  4076ec:	movzx  eax,WORD PTR [rsp+0x6a]
  4076f1:	push   rax
  4076f2:	movzx  r9d,WORD PTR [rsp+0x94]
  4076fb:	movzx  r8d,WORD PTR [rsp+0x74]
  407701:	jmp    407af9 <Mat_VarRead@plt+0x5759>
  407706:	mov    rdx,QWORD PTR [rsp+0x8]
  40770b:	mov    r9,r14
  40770e:	mov    r8,r13
  407711:	mov    rcx,r15
  407714:	mov    rsi,rbx
  407717:	mov    rdi,rbp
  40771a:	call   402130 <Mat_VarReadData@plt>
  40771f:	movzx  ecx,WORD PTR [rsp+0x74]
  407724:	movzx  edx,WORD PTR [rsp+0x70]
  407729:	lea    rsi,[rip+0x69e8]        # 40e118 <getopt_long_only@@Base+0x1188>
  407730:	movzx  r9d,WORD PTR [rsp+0x76]
  407736:	movzx  r8d,WORD PTR [rsp+0x72]
  40773c:	xor    eax,eax
  40773e:	mov    edi,0x1
  407743:	call   4022f0 <__printf_chk@plt>
  407748:	cmp    DWORD PTR [rbp+0x20],0x200
  40774f:	je     40778c <Mat_VarRead@plt+0x53ec>
  407751:	mov    rdi,QWORD PTR [rbx+0x28]
  407755:	mov    esi,0x18
  40775a:	call   4022c0 <realloc@plt>
  40775f:	test   rax,rax
  407762:	je     40778c <Mat_VarRead@plt+0x53ec>
  407764:	inc    DWORD PTR [rbx+0x8]
  407767:	mov    rdx,QWORD PTR [rsp+0x8]
  40776c:	mov    r9,r14
  40776f:	mov    QWORD PTR [rbx+0x28],rax
  407773:	mov    r8,r13
  407776:	mov    QWORD PTR [rax+0x10],0x1
  40777e:	mov    rcx,r15
  407781:	mov    rsi,rbx
  407784:	mov    rdi,rbp
  407787:	call   402130 <Mat_VarReadData@plt>
  40778c:	movzx  ecx,WORD PTR [rsp+0x74]
  407791:	movzx  edx,WORD PTR [rsp+0x70]
  407796:	lea    rsi,[rip+0x697b]        # 40e118 <getopt_long_only@@Base+0x1188>
  40779d:	movzx  r9d,WORD PTR [rsp+0x76]
  4077a3:	movzx  r8d,WORD PTR [rsp+0x72]
  4077a9:	mov    edi,0x1
  4077ae:	xor    eax,eax
  4077b0:	call   4022f0 <__printf_chk@plt>
  4077b5:	jmp    407bd8 <Mat_VarRead@plt+0x5838>
  4077ba:	lea    rax,[rsp+0x94]
  4077c2:	mov    QWORD PTR [rsp+0x8],rax
  4077c7:	je     4078f6 <Mat_VarRead@plt+0x5556>
  4077cd:	lea    rax,[rsp+0x90]
  4077d5:	lea    r15,[rsp+0x2c]
  4077da:	lea    r12,[rsp+0x10]
  4077df:	mov    r9,r14
  4077e2:	mov    r8,r13
  4077e5:	mov    rsi,rbx
  4077e8:	mov    QWORD PTR [rsp+0x10],rax
  4077ed:	mov    rax,QWORD PTR [rsp+0x8]
  4077f2:	mov    rcx,r15
  4077f5:	mov    rdx,r12
  4077f8:	mov    rdi,rbp
  4077fb:	mov    QWORD PTR [rsp+0x18],rax
  407800:	call   402130 <Mat_VarReadData@plt>
  407805:	movsx  eax,BYTE PTR [rsp+0x97]
  40780d:	movsx  ecx,BYTE PTR [rsp+0x94]
  407815:	lea    rsi,[rip+0x792c]        # 40f148 <getopt_long_only@@Base+0x21b8>
  40781c:	movsx  edx,BYTE PTR [rsp+0x90]
  407824:	mov    edi,0x1
  407829:	push   rax
  40782a:	movsx  eax,BYTE PTR [rsp+0x9b]
  407832:	push   rax
  407833:	movsx  eax,BYTE PTR [rsp+0xa5]
  40783b:	push   rax
  40783c:	movsx  eax,BYTE PTR [rsp+0xa9]
  407844:	push   rax
  407845:	movsx  r9d,BYTE PTR [rsp+0xb6]
  40784e:	xor    eax,eax
  407850:	movsx  r8d,BYTE PTR [rsp+0xb2]
  407859:	call   4022f0 <__printf_chk@plt>
  40785e:	add    rsp,0x20
  407862:	cmp    DWORD PTR [rbp+0x20],0x200
  407869:	je     4078a4 <Mat_VarRead@plt+0x5504>
  40786b:	mov    rdi,QWORD PTR [rbx+0x28]
  40786f:	mov    esi,0x18
  407874:	call   4022c0 <realloc@plt>
  407879:	test   rax,rax
  40787c:	je     4078a4 <Mat_VarRead@plt+0x5504>
  40787e:	inc    DWORD PTR [rbx+0x8]
  407881:	mov    QWORD PTR [rbx+0x28],rax
  407885:	mov    r9,r14
  407888:	mov    QWORD PTR [rax+0x10],0x1
  407890:	mov    r8,r13
  407893:	mov    rcx,r15
  407896:	mov    rdx,r12
  407899:	mov    rsi,rbx
  40789c:	mov    rdi,rbp
  40789f:	call   402130 <Mat_VarReadData@plt>
  4078a4:	movsx  eax,BYTE PTR [rsp+0x97]
  4078ac:	movsx  ecx,BYTE PTR [rsp+0x94]
  4078b4:	lea    rsi,[rip+0x788d]        # 40f148 <getopt_long_only@@Base+0x21b8>
  4078bb:	movsx  edx,BYTE PTR [rsp+0x90]
  4078c3:	push   rax
  4078c4:	movsx  eax,BYTE PTR [rsp+0x9b]
  4078cc:	push   rax
  4078cd:	movsx  eax,BYTE PTR [rsp+0xa5]
  4078d5:	push   rax
  4078d6:	movsx  eax,BYTE PTR [rsp+0xa9]
  4078de:	push   rax
  4078df:	movsx  r9d,BYTE PTR [rsp+0xb6]
  4078e8:	movsx  r8d,BYTE PTR [rsp+0xb2]
  4078f1:	jmp    407af9 <Mat_VarRead@plt+0x5759>
  4078f6:	mov    rdx,QWORD PTR [rsp+0x8]
  4078fb:	mov    r9,r14
  4078fe:	mov    r8,r13
  407901:	mov    rcx,r15
  407904:	mov    rsi,rbx
  407907:	mov    rdi,rbp
  40790a:	call   402130 <Mat_VarReadData@plt>
  40790f:	movsx  ecx,BYTE PTR [rsp+0x96]
  407917:	movsx  edx,BYTE PTR [rsp+0x94]
  40791f:	lea    rsi,[rip+0x6809]        # 40e12f <getopt_long_only@@Base+0x119f>
  407926:	movsx  r9d,BYTE PTR [rsp+0x97]
  40792f:	movsx  r8d,BYTE PTR [rsp+0x95]
  407938:	xor    eax,eax
  40793a:	mov    edi,0x1
  40793f:	call   4022f0 <__printf_chk@plt>
  407944:	cmp    DWORD PTR [rbp+0x20],0x200
  40794b:	je     407988 <Mat_VarRead@plt+0x55e8>
  40794d:	mov    rdi,QWORD PTR [rbx+0x28]
  407951:	mov    esi,0x18
  407956:	call   4022c0 <realloc@plt>
  40795b:	test   rax,rax
  40795e:	je     407988 <Mat_VarRead@plt+0x55e8>
  407960:	inc    DWORD PTR [rbx+0x8]
  407963:	mov    rdx,QWORD PTR [rsp+0x8]
  407968:	mov    r9,r14
  40796b:	mov    QWORD PTR [rbx+0x28],rax
  40796f:	mov    r8,r13
  407972:	mov    QWORD PTR [rax+0x10],0x1
  40797a:	mov    rcx,r15
  40797d:	mov    rsi,rbx
  407980:	mov    rdi,rbp
  407983:	call   402130 <Mat_VarReadData@plt>
  407988:	movsx  ecx,BYTE PTR [rsp+0x96]
  407990:	movsx  edx,BYTE PTR [rsp+0x94]
  407998:	lea    rsi,[rip+0x6790]        # 40e12f <getopt_long_only@@Base+0x119f>
  40799f:	movsx  r9d,BYTE PTR [rsp+0x97]
  4079a8:	movsx  r8d,BYTE PTR [rsp+0x95]
  4079b1:	mov    edi,0x1
  4079b6:	xor    eax,eax
  4079b8:	call   4022f0 <__printf_chk@plt>
  4079bd:	jmp    407bd8 <Mat_VarRead@plt+0x5838>
  4079c2:	lea    rax,[rsp+0x94]
  4079ca:	mov    QWORD PTR [rsp+0x8],rax
  4079cf:	je     407b11 <Mat_VarRead@plt+0x5771>
  4079d5:	lea    rax,[rsp+0x90]
  4079dd:	lea    r15,[rsp+0x2c]
  4079e2:	lea    r12,[rsp+0x10]
  4079e7:	mov    r9,r14
  4079ea:	mov    r8,r13
  4079ed:	mov    rsi,rbx
  4079f0:	mov    QWORD PTR [rsp+0x10],rax
  4079f5:	mov    rax,QWORD PTR [rsp+0x8]
  4079fa:	mov    rcx,r15
  4079fd:	mov    rdx,r12
  407a00:	mov    rdi,rbp
  407a03:	mov    QWORD PTR [rsp+0x18],rax
  407a08:	call   402130 <Mat_VarReadData@plt>
  407a0d:	movzx  eax,BYTE PTR [rsp+0x97]
  407a15:	movzx  ecx,BYTE PTR [rsp+0x94]
  407a1d:	lea    rsi,[rip+0x7764]        # 40f188 <getopt_long_only@@Base+0x21f8>
  407a24:	movzx  edx,BYTE PTR [rsp+0x90]
  407a2c:	mov    edi,0x1
  407a31:	push   rax
  407a32:	movzx  eax,BYTE PTR [rsp+0x9b]
  407a3a:	push   rax
  407a3b:	movzx  eax,BYTE PTR [rsp+0xa5]
  407a43:	push   rax
  407a44:	movzx  eax,BYTE PTR [rsp+0xa9]
  407a4c:	push   rax
  407a4d:	movzx  r9d,BYTE PTR [rsp+0xb6]
  407a56:	xor    eax,eax
  407a58:	movzx  r8d,BYTE PTR [rsp+0xb2]
  407a61:	call   4022f0 <__printf_chk@plt>
  407a66:	add    rsp,0x20
  407a6a:	cmp    DWORD PTR [rbp+0x20],0x200
  407a71:	je     407aac <Mat_VarRead@plt+0x570c>
  407a73:	mov    rdi,QWORD PTR [rbx+0x28]
  407a77:	mov    esi,0x18
  407a7c:	call   4022c0 <realloc@plt>
  407a81:	test   rax,rax
  407a84:	je     407aac <Mat_VarRead@plt+0x570c>
  407a86:	inc    DWORD PTR [rbx+0x8]
  407a89:	mov    QWORD PTR [rbx+0x28],rax
  407a8d:	mov    r9,r14
  407a90:	mov    QWORD PTR [rax+0x10],0x1
  407a98:	mov    r8,r13
  407a9b:	mov    rcx,r15
  407a9e:	mov    rdx,r12
  407aa1:	mov    rsi,rbx
  407aa4:	mov    rdi,rbp
  407aa7:	call   402130 <Mat_VarReadData@plt>
  407aac:	movzx  eax,BYTE PTR [rsp+0x97]
  407ab4:	movzx  ecx,BYTE PTR [rsp+0x94]
  407abc:	lea    rsi,[rip+0x76c5]        # 40f188 <getopt_long_only@@Base+0x21f8>
  407ac3:	movzx  edx,BYTE PTR [rsp+0x90]
  407acb:	push   rax
  407acc:	movzx  eax,BYTE PTR [rsp+0x9b]
  407ad4:	push   rax
  407ad5:	movzx  eax,BYTE PTR [rsp+0xa5]
  407add:	push   rax
  407ade:	movzx  eax,BYTE PTR [rsp+0xa9]
  407ae6:	push   rax
  407ae7:	movzx  r9d,BYTE PTR [rsp+0xb6]
  407af0:	movzx  r8d,BYTE PTR [rsp+0xb2]
  407af9:	mov    edi,0x1
  407afe:	xor    eax,eax
  407b00:	xor    r12d,r12d
  407b03:	call   4022f0 <__printf_chk@plt>
  407b08:	add    rsp,0x20
  407b0c:	jmp    407bd8 <Mat_VarRead@plt+0x5838>
  407b11:	mov    rdx,QWORD PTR [rsp+0x8]
  407b16:	mov    r9,r14
  407b19:	mov    r8,r13
  407b1c:	mov    rcx,r15
  407b1f:	mov    rsi,rbx
  407b22:	mov    rdi,rbp
  407b25:	call   402130 <Mat_VarReadData@plt>
  407b2a:	movzx  ecx,BYTE PTR [rsp+0x96]
  407b32:	movzx  edx,BYTE PTR [rsp+0x94]
  407b3a:	lea    rsi,[rip+0x6609]        # 40e14a <getopt_long_only@@Base+0x11ba>
  407b41:	movzx  r9d,BYTE PTR [rsp+0x97]
  407b4a:	movzx  r8d,BYTE PTR [rsp+0x95]
  407b53:	xor    eax,eax
  407b55:	mov    edi,0x1
  407b5a:	call   4022f0 <__printf_chk@plt>
  407b5f:	cmp    DWORD PTR [rbp+0x20],0x200
  407b66:	je     407ba3 <Mat_VarRead@plt+0x5803>
  407b68:	mov    rdi,QWORD PTR [rbx+0x28]
  407b6c:	mov    esi,0x18
  407b71:	call   4022c0 <realloc@plt>
  407b76:	test   rax,rax
  407b79:	je     407ba3 <Mat_VarRead@plt+0x5803>
  407b7b:	inc    DWORD PTR [rbx+0x8]
  407b7e:	mov    rdx,QWORD PTR [rsp+0x8]
  407b83:	mov    r9,r14
  407b86:	mov    QWORD PTR [rbx+0x28],rax
  407b8a:	mov    r8,r13
  407b8d:	mov    QWORD PTR [rax+0x10],0x1
  407b95:	mov    rcx,r15
  407b98:	mov    rsi,rbx
  407b9b:	mov    rdi,rbp
  407b9e:	call   402130 <Mat_VarReadData@plt>
  407ba3:	movzx  ecx,BYTE PTR [rsp+0x96]
  407bab:	movzx  edx,BYTE PTR [rsp+0x94]
  407bb3:	lea    rsi,[rip+0x6590]        # 40e14a <getopt_long_only@@Base+0x11ba>
  407bba:	movzx  r9d,BYTE PTR [rsp+0x97]
  407bc3:	movzx  r8d,BYTE PTR [rsp+0x95]
  407bcc:	mov    edi,0x1
  407bd1:	xor    eax,eax
  407bd3:	call   4022f0 <__printf_chk@plt>
  407bd8:	mov    rdi,rbx
  407bdb:	call   402230 <Mat_VarFree@plt>
  407be0:	mov    rdi,rbp
  407be3:	call   402290 <Mat_Close@plt>
  407be8:	mov    rcx,QWORD PTR [rsp+0x98]
  407bf0:	xor    rcx,QWORD PTR fs:0x28
  407bf9:	mov    eax,r12d
  407bfc:	je     407c03 <Mat_VarRead@plt+0x5863>
  407bfe:	call   402140 <__stack_chk_fail@plt>
  407c03:	add    rsp,0xa8
  407c0a:	pop    rbx
  407c0b:	pop    rbp
  407c0c:	pop    r12
  407c0e:	pop    r13
  407c10:	pop    r14
  407c12:	pop    r15
  407c14:	ret    
  407c15:	test   rdi,rdi
  407c18:	je     407c5b <Mat_VarRead@plt+0x58bb>
  407c1a:	mov    rax,QWORD PTR [rip+0xd3bf]        # 414fe0 <getopt_long_only@@Base+0x8050>
  407c21:	push   rbx
  407c22:	lea    rsi,[rip+0x653c]        # 40e165 <getopt_long_only@@Base+0x11d5>
  407c29:	mov    rbx,rdi
  407c2c:	mov    rdx,QWORD PTR [rax]
  407c2f:	call   4021c0 <freopen@plt>
  407c34:	test   rax,rax
  407c37:	jne    407c5a <Mat_VarRead@plt+0x58ba>
  407c39:	mov    rax,QWORD PTR [rip+0xd3b8]        # 414ff8 <getopt_long_only@@Base+0x8068>
  407c40:	mov    rcx,rbx
  407c43:	lea    rdx,[rip+0x757e]        # 40f1c8 <getopt_long_only@@Base+0x2238>
  407c4a:	pop    rbx
  407c4b:	mov    esi,0x1
  407c50:	mov    rdi,QWORD PTR [rax]
  407c53:	xor    eax,eax
  407c55:	jmp    402360 <__fprintf_chk@plt>
  407c5a:	pop    rbx
  407c5b:	ret    
  407c5c:	nop    DWORD PTR [rax+0x0]
  407c60:	push   r15
  407c62:	push   r14
  407c64:	mov    r14,rsi
  407c67:	push   r13
  407c69:	push   r12
  407c6b:	mov    r13d,edi
  407c6e:	push   rbp
  407c6f:	push   rbx
  407c70:	sub    rsp,0x3d8
  407c77:	lea    rdi,[rsp+0x74]
  407c7c:	mov    DWORD PTR [rsp+0x5c],0x0
  407c84:	mov    rax,QWORD PTR fs:0x28
  407c8d:	mov    QWORD PTR [rsp+0x3c8],rax
  407c95:	xor    eax,eax
  407c97:	lea    rdx,[rdi+0x8]
  407c9b:	lea    rsi,[rdi+0x4]
  407c9f:	call   402250 <Mat_GetLibraryVersion@plt>
  407ca4:	cmp    DWORD PTR [rsp+0x74],0x1
  407ca9:	jne    407cb2 <Mat_VarRead@plt+0x5912>
  407cab:	cmp    DWORD PTR [rsp+0x78],0x5
  407cb0:	je     407d04 <Mat_VarRead@plt+0x5964>
  407cb2:	mov    rax,QWORD PTR [rip+0xd33f]        # 414ff8 <getopt_long_only@@Base+0x8068>
  407cb9:	lea    rdi,[rip+0x76b8]        # 40f378 <getopt_long_only@@Base+0x23e8>
  407cc0:	mov    edx,0x37
  407cc5:	mov    esi,0x1
  407cca:	mov    r15d,0x1
  407cd0:	mov    rcx,QWORD PTR [rax]
  407cd3:	call   402350 <fwrite@plt>
  407cd8:	mov    rcx,QWORD PTR [rsp+0x3c8]
  407ce0:	xor    rcx,QWORD PTR fs:0x28
  407ce9:	mov    eax,r15d
  407cec:	jne    408bfb <Mat_VarRead@plt+0x685b>
  407cf2:	add    rsp,0x3d8
  407cf9:	pop    rbx
  407cfa:	pop    rbp
  407cfb:	pop    r12
  407cfd:	pop    r13
  407cff:	pop    r14
  407d01:	pop    r15
  407d03:	ret    
  407d04:	cmp    DWORD PTR [rsp+0x7c],0xf
  407d09:	jne    407cb2 <Mat_VarRead@plt+0x5912>
  407d0b:	lea    rdi,[rip+0x657e]        # 40e290 <getopt_long_only@@Base+0x1300>
  407d12:	lea    rbx,[rsp+0x5c]
  407d17:	call   402190 <Mat_LogInit@plt>
  407d1c:	mov    QWORD PTR [rsp+0x8],0x0
  407d25:	mov    DWORD PTR [rsp+0x18],0x6
  407d2d:	lea    rcx,[rip+0xe68c]        # 4163c0 <getopt_long_only@@Base+0x9430>
  407d34:	lea    rdx,[rip+0x65e3]        # 40e31e <getopt_long_only@@Base+0x138e>
  407d3b:	xor    r8d,r8d
  407d3e:	mov    rsi,r14
  407d41:	mov    edi,r13d
  407d44:	call   40cf80 <getopt_long@@Base>
  407d49:	cmp    eax,0xffffffff
  407d4c:	je     4082d0 <Mat_VarRead@plt+0x5f30>
  407d52:	cmp    eax,0x56
  407d55:	je     408180 <Mat_VarRead@plt+0x5de0>
  407d5b:	jle    407e7f <Mat_VarRead@plt+0x5adf>
  407d61:	cmp    eax,0x6f
  407d64:	je     4081a3 <Mat_VarRead@plt+0x5e03>
  407d6a:	jg     408154 <Mat_VarRead@plt+0x5db4>
  407d70:	cmp    eax,0x61
  407d73:	je     4081d1 <Mat_VarRead@plt+0x5e31>
  407d79:	cmp    eax,0x63
  407d7c:	jne    4081b7 <Mat_VarRead@plt+0x5e17>
  407d82:	mov    rax,0x416530
  407d89:	lea    rsi,[rip+0x650c]        # 40e29c <getopt_long_only@@Base+0x130c>
  407d90:	mov    rbp,QWORD PTR [rax]
  407d93:	mov    rdi,rbp
  407d96:	call   402210 <strcmp@plt>
  407d9b:	test   eax,eax
  407d9d:	je     40824c <Mat_VarRead@plt+0x5eac>
  407da3:	lea    rsi,[rip+0x64f9]        # 40e2a3 <getopt_long_only@@Base+0x1313>
  407daa:	mov    rdi,rbp
  407dad:	call   402210 <strcmp@plt>
  407db2:	test   eax,eax
  407db4:	je     40829d <Mat_VarRead@plt+0x5efd>
  407dba:	lea    rsi,[rip+0x64ea]        # 40e2ab <getopt_long_only@@Base+0x131b>
  407dc1:	mov    rdi,rbp
  407dc4:	call   402210 <strcmp@plt>
  407dc9:	test   eax,eax
  407dcb:	je     408ab9 <Mat_VarRead@plt+0x6719>
  407dd1:	lea    rsi,[rip+0x64d2]        # 40e2aa <getopt_long_only@@Base+0x131a>
  407dd8:	mov    rdi,rbp
  407ddb:	call   402210 <strcmp@plt>
  407de0:	test   eax,eax
  407de2:	je     408b04 <Mat_VarRead@plt+0x6764>
  407de8:	lea    rsi,[rip+0x64c3]        # 40e2b2 <getopt_long_only@@Base+0x1322>
  407def:	mov    rdi,rbp
  407df2:	call   402210 <strcmp@plt>
  407df7:	test   eax,eax
  407df9:	je     408ce4 <Mat_VarRead@plt+0x6944>
  407dff:	lea    rsi,[rip+0x64ab]        # 40e2b1 <getopt_long_only@@Base+0x1321>
  407e06:	mov    rdi,rbp
  407e09:	call   402210 <strcmp@plt>
  407e0e:	test   eax,eax
  407e10:	je     408d1d <Mat_VarRead@plt+0x697d>
  407e16:	lea    rsi,[rip+0x649c]        # 40e2b9 <getopt_long_only@@Base+0x1329>
  407e1d:	mov    rdi,rbp
  407e20:	call   402210 <strcmp@plt>
  407e25:	test   eax,eax
  407e27:	je     408d71 <Mat_VarRead@plt+0x69d1>
  407e2d:	lea    rsi,[rip+0x6484]        # 40e2b8 <getopt_long_only@@Base+0x1328>
  407e34:	mov    rdi,rbp
  407e37:	call   402210 <strcmp@plt>
  407e3c:	test   eax,eax
  407e3e:	je     408d64 <Mat_VarRead@plt+0x69c4>
  407e44:	lea    rsi,[rip+0x6475]        # 40e2c0 <getopt_long_only@@Base+0x1330>
  407e4b:	mov    rdi,rbp
  407e4e:	call   402210 <strcmp@plt>
  407e53:	test   eax,eax
  407e55:	je     408f74 <Mat_VarRead@plt+0x6bd4>
  407e5b:	lea    rsi,[rip+0x645d]        # 40e2bf <getopt_long_only@@Base+0x132f>
  407e62:	mov    rdi,rbp
  407e65:	call   402210 <strcmp@plt>
  407e6a:	test   eax,eax
  407e6c:	jne    408f4f <Mat_VarRead@plt+0x6baf>
  407e72:	mov    DWORD PTR [rsp+0x18],0x9
  407e7a:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  407e7f:	cmp    eax,0x48
  407e82:	je     40820d <Mat_VarRead@plt+0x5e6d>
  407e88:	jle    408171 <Mat_VarRead@plt+0x5dd1>
  407e8e:	cmp    eax,0x4c
  407e91:	je     4081fa <Mat_VarRead@plt+0x5e5a>
  407e97:	cmp    eax,0x54
  407e9a:	jne    4081b7 <Mat_VarRead@plt+0x5e17>
  407ea0:	mov    rax,0x416530
  407ea7:	lea    rsi,[rip+0x6a46]        # 40e8f4 <getopt_long_only@@Base+0x1964>
  407eae:	mov    rbx,QWORD PTR [rax]
  407eb1:	mov    rdi,rbx
  407eb4:	call   402210 <strcmp@plt>
  407eb9:	test   eax,eax
  407ebb:	je     40827b <Mat_VarRead@plt+0x5edb>
  407ec1:	lea    rsi,[rip+0x6a1f]        # 40e8e7 <getopt_long_only@@Base+0x1957>
  407ec8:	mov    rdi,rbx
  407ecb:	call   402210 <strcmp@plt>
  407ed0:	test   eax,eax
  407ed2:	je     40828c <Mat_VarRead@plt+0x5eec>
  407ed8:	lea    rsi,[rip+0x69f8]        # 40e8d7 <getopt_long_only@@Base+0x1947>
  407edf:	mov    rdi,rbx
  407ee2:	call   402210 <strcmp@plt>
  407ee7:	test   eax,eax
  407ee9:	je     408959 <Mat_VarRead@plt+0x65b9>
  407eef:	lea    rsi,[rip+0x6892]        # 40e788 <getopt_long_only@@Base+0x17f8>
  407ef6:	mov    rdi,rbx
  407ef9:	call   402210 <strcmp@plt>
  407efe:	test   eax,eax
  407f00:	je     40896a <Mat_VarRead@plt+0x65ca>
  407f06:	lea    rsi,[rip+0x66b1]        # 40e5be <getopt_long_only@@Base+0x162e>
  407f0d:	mov    rdi,rbx
  407f10:	call   402210 <strcmp@plt>
  407f15:	test   eax,eax
  407f17:	je     408ac6 <Mat_VarRead@plt+0x6726>
  407f1d:	lea    rsi,[rip+0x668b]        # 40e5af <getopt_long_only@@Base+0x161f>
  407f24:	mov    rdi,rbx
  407f27:	call   402210 <strcmp@plt>
  407f2c:	test   eax,eax
  407f2e:	je     408ae2 <Mat_VarRead@plt+0x6742>
  407f34:	lea    rsi,[rip+0x6985]        # 40e8c0 <getopt_long_only@@Base+0x1930>
  407f3b:	mov    rdi,rbx
  407f3e:	call   402210 <strcmp@plt>
  407f43:	test   eax,eax
  407f45:	je     408af3 <Mat_VarRead@plt+0x6753>
  407f4b:	lea    rsi,[rip+0x6377]        # 40e2c9 <getopt_long_only@@Base+0x1339>
  407f52:	mov    rdi,rbx
  407f55:	call   402210 <strcmp@plt>
  407f5a:	test   eax,eax
  407f5c:	je     408ba3 <Mat_VarRead@plt+0x6803>
  407f62:	lea    rsi,[rip+0x6911]        # 40e87a <getopt_long_only@@Base+0x18ea>
  407f69:	mov    rdi,rbx
  407f6c:	call   402210 <strcmp@plt>
  407f71:	test   eax,eax
  407f73:	je     408bea <Mat_VarRead@plt+0x684a>
  407f79:	lea    rsi,[rip+0x68ca]        # 40e84a <getopt_long_only@@Base+0x18ba>
  407f80:	mov    rdi,rbx
  407f83:	call   402210 <strcmp@plt>
  407f88:	test   eax,eax
  407f8a:	je     408bd9 <Mat_VarRead@plt+0x6839>
  407f90:	lea    rsi,[rip+0x6898]        # 40e82f <getopt_long_only@@Base+0x189f>
  407f97:	mov    rdi,rbx
  407f9a:	call   402210 <strcmp@plt>
  407f9f:	test   eax,eax
  407fa1:	je     408c00 <Mat_VarRead@plt+0x6860>
  407fa7:	lea    rsi,[rip+0x6848]        # 40e7f6 <getopt_long_only@@Base+0x1866>
  407fae:	mov    rdi,rbx
  407fb1:	call   402210 <strcmp@plt>
  407fb6:	test   eax,eax
  407fb8:	je     408d0c <Mat_VarRead@plt+0x696c>
  407fbe:	lea    rsi,[rip+0x6805]        # 40e7ca <getopt_long_only@@Base+0x183a>
  407fc5:	mov    rdi,rbx
  407fc8:	call   402210 <strcmp@plt>
  407fcd:	test   eax,eax
  407fcf:	je     408cfb <Mat_VarRead@plt+0x695b>
  407fd5:	lea    rsi,[rip+0x67d5]        # 40e7b1 <getopt_long_only@@Base+0x1821>
  407fdc:	mov    rdi,rbx
  407fdf:	call   402210 <strcmp@plt>
  407fe4:	test   eax,eax
  407fe6:	je     408f1c <Mat_VarRead@plt+0x6b7c>
  407fec:	lea    rsi,[rip+0x6777]        # 40e76a <getopt_long_only@@Base+0x17da>
  407ff3:	mov    rdi,rbx
  407ff6:	call   402210 <strcmp@plt>
  407ffb:	test   eax,eax
  407ffd:	je     408f0b <Mat_VarRead@plt+0x6b6b>
  408003:	lea    rsi,[rip+0x865e]        # 410668 <getopt_long_only@@Base+0x36d8>
  40800a:	mov    rdi,rbx
  40800d:	call   402210 <strcmp@plt>
  408012:	test   eax,eax
  408014:	je     408efa <Mat_VarRead@plt+0x6b5a>
  40801a:	lea    rsi,[rip+0x670d]        # 40e72e <getopt_long_only@@Base+0x179e>
  408021:	mov    rdi,rbx
  408024:	call   402210 <strcmp@plt>
  408029:	test   eax,eax
  40802b:	je     408ee9 <Mat_VarRead@plt+0x6b49>
  408031:	lea    rsi,[rip+0x669c]        # 40e6d4 <getopt_long_only@@Base+0x1744>
  408038:	mov    rdi,rbx
  40803b:	call   402210 <strcmp@plt>
  408040:	test   eax,eax
  408042:	je     408ed8 <Mat_VarRead@plt+0x6b38>
  408048:	lea    rsi,[rip+0x666c]        # 40e6bb <getopt_long_only@@Base+0x172b>
  40804f:	mov    rdi,rbx
  408052:	call   402210 <strcmp@plt>
  408057:	test   eax,eax
  408059:	je     408f92 <Mat_VarRead@plt+0x6bf2>
  40805f:	lea    rsi,[rip+0x6639]        # 40e69f <getopt_long_only@@Base+0x170f>
  408066:	mov    rdi,rbx
  408069:	call   402210 <strcmp@plt>
  40806e:	test   eax,eax
  408070:	je     408fb4 <Mat_VarRead@plt+0x6c14>
  408076:	lea    rsi,[rip+0x6265]        # 40e2e2 <getopt_long_only@@Base+0x1352>
  40807d:	mov    rdi,rbx
  408080:	call   402210 <strcmp@plt>
  408085:	test   eax,eax
  408087:	je     408fa3 <Mat_VarRead@plt+0x6c03>
  40808d:	lea    rsi,[rip+0x65d5]        # 40e669 <getopt_long_only@@Base+0x16d9>
  408094:	mov    rdi,rbx
  408097:	call   402210 <strcmp@plt>
  40809c:	test   eax,eax
  40809e:	je     408ff8 <Mat_VarRead@plt+0x6c58>
  4080a4:	lea    rsi,[rip+0x6591]        # 40e63c <getopt_long_only@@Base+0x16ac>
  4080ab:	mov    rdi,rbx
  4080ae:	call   402210 <strcmp@plt>
  4080b3:	test   eax,eax
  4080b5:	je     408fe7 <Mat_VarRead@plt+0x6c47>
  4080bb:	lea    rsi,[rip+0x6526]        # 40e5e8 <getopt_long_only@@Base+0x1658>
  4080c2:	mov    rdi,rbx
  4080c5:	call   402210 <strcmp@plt>
  4080ca:	test   eax,eax
  4080cc:	je     408fd6 <Mat_VarRead@plt+0x6c36>
  4080d2:	lea    rsi,[rip+0x644a]        # 40e523 <getopt_long_only@@Base+0x1593>
  4080d9:	mov    rdi,rbx
  4080dc:	call   402210 <strcmp@plt>
  4080e1:	test   eax,eax
  4080e3:	je     408fc5 <Mat_VarRead@plt+0x6c25>
  4080e9:	lea    rsi,[rip+0x6479]        # 40e569 <getopt_long_only@@Base+0x15d9>
  4080f0:	mov    rdi,rbx
  4080f3:	call   402210 <strcmp@plt>
  4080f8:	test   eax,eax
  4080fa:	je     408f3e <Mat_VarRead@plt+0x6b9e>
  408100:	lea    rsi,[rip+0x64c9]        # 40e5d0 <getopt_long_only@@Base+0x1640>
  408107:	mov    rdi,rbx
  40810a:	call   402210 <strcmp@plt>
  40810f:	test   eax,eax
  408111:	je     408f2d <Mat_VarRead@plt+0x6b8d>
  408117:	lea    rsi,[rip+0x639c]        # 40e4ba <getopt_long_only@@Base+0x152a>
  40811e:	mov    rdi,rbx
  408121:	call   402210 <strcmp@plt>
  408126:	test   eax,eax
  408128:	je     408f81 <Mat_VarRead@plt+0x6be1>
  40812e:	lea    rsi,[rip+0x63b7]        # 40e4ec <getopt_long_only@@Base+0x155c>
  408135:	mov    rdi,rbx
  408138:	call   402210 <strcmp@plt>
  40813d:	test   eax,eax
  40813f:	jne    408176 <Mat_VarRead@plt+0x5dd6>
  408141:	lea    rdi,[rip+0xd118]        # 415260 <getopt_long_only@@Base+0x82d0>
  408148:	call   402330 <Mat_Help@plt>
  40814d:	xor    edi,edi
  40814f:	call   402340 <exit@plt>
  408154:	cmp    eax,0x76
  408157:	je     408220 <Mat_VarRead@plt+0x5e80>
  40815d:	cmp    eax,0x7a
  408160:	jne    4081b7 <Mat_VarRead@plt+0x5e17>
  408162:	mov    DWORD PTR [rip+0xe3b8],0x1        # 416524 <opterr@@Base+0x10>
  40816c:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  408171:	cmp    eax,0x3f
  408174:	jne    4081b7 <Mat_VarRead@plt+0x5e17>
  408176:	mov    edi,0x1
  40817b:	call   402340 <exit@plt>
  408180:	lea    rcx,[rip+0x6179]        # 40e300 <getopt_long_only@@Base+0x1370>
  408187:	lea    rdx,[rip+0x6102]        # 40e290 <getopt_long_only@@Base+0x1300>
  40818e:	lea    rsi,[rip+0x726b]        # 40f400 <getopt_long_only@@Base+0x2470>
  408195:	mov    edi,0x1
  40819a:	xor    eax,eax
  40819c:	call   4022f0 <__printf_chk@plt>
  4081a1:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  4081a3:	mov    rax,0x416530
  4081aa:	mov    rax,QWORD PTR [rax]
  4081ad:	mov    QWORD PTR [rsp+0x8],rax
  4081b2:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  4081b7:	lea    rsi,[rip+0x6149]        # 40e307 <getopt_long_only@@Base+0x1377>
  4081be:	mov    edx,eax
  4081c0:	mov    edi,0x1
  4081c5:	xor    eax,eax
  4081c7:	call   4022f0 <__printf_chk@plt>
  4081cc:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  4081d1:	mov    rax,0x416530
  4081d8:	lea    rsi,[rip+0x60ba]        # 40e299 <getopt_long_only@@Base+0x1309>
  4081df:	mov    rdx,rbx
  4081e2:	mov    rdi,QWORD PTR [rax]
  4081e5:	xor    eax,eax
  4081e7:	call   402270 <__isoc99_sscanf@plt>
  4081ec:	sub    eax,0x1
  4081ef:	je     407d2d <Mat_VarRead@plt+0x598d>
  4081f5:	jmp    408176 <Mat_VarRead@plt+0x5dd6>
  4081fa:	lea    rdi,[rip+0xde3f]        # 416040 <getopt_long_only@@Base+0x90b0>
  408201:	call   402330 <Mat_Help@plt>
  408206:	xor    edi,edi
  408208:	call   402340 <exit@plt>
  40820d:	lea    rdi,[rip+0xe0ac]        # 4162c0 <getopt_long_only@@Base+0x9330>
  408214:	call   402330 <Mat_Help@plt>
  408219:	xor    edi,edi
  40821b:	call   402340 <exit@plt>
  408220:	mov    rax,0x416530
  408227:	lea    rsi,[rip+0x60d7]        # 40e305 <getopt_long_only@@Base+0x1375>
  40822e:	mov    rbp,QWORD PTR [rax]
  408231:	mov    rdi,rbp
  408234:	call   402210 <strcmp@plt>
  408239:	test   eax,eax
  40823b:	jne    408259 <Mat_VarRead@plt+0x5eb9>
  40823d:	mov    DWORD PTR [rip+0xcfa9],0x100        # 4151f0 <getopt_long_only@@Base+0x8260>
  408247:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  40824c:	mov    DWORD PTR [rsp+0x18],0x6
  408254:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  408259:	lea    rsi,[rip+0x6065]        # 40e2c5 <getopt_long_only@@Base+0x1335>
  408260:	mov    rdi,rbp
  408263:	call   402210 <strcmp@plt>
  408268:	test   eax,eax
  40826a:	jne    4082aa <Mat_VarRead@plt+0x5f0a>
  40826c:	mov    DWORD PTR [rip+0xcf7a],0x200        # 4151f0 <getopt_long_only@@Base+0x8260>
  408276:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  40827b:	lea    rdi,[rip+0xdd7e]        # 416000 <getopt_long_only@@Base+0x9070>
  408282:	call   402330 <Mat_Help@plt>
  408287:	jmp    407ec1 <Mat_VarRead@plt+0x5b21>
  40828c:	lea    rdi,[rip+0xdd2d]        # 415fc0 <getopt_long_only@@Base+0x9030>
  408293:	call   402330 <Mat_Help@plt>
  408298:	jmp    407ed8 <Mat_VarRead@plt+0x5b38>
  40829d:	mov    DWORD PTR [rsp+0x18],0x7
  4082a5:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  4082aa:	lea    rsi,[rip+0x5ffe]        # 40e2af <getopt_long_only@@Base+0x131f>
  4082b1:	mov    rdi,rbp
  4082b4:	call   402210 <strcmp@plt>
  4082b9:	test   eax,eax
  4082bb:	jne    409009 <Mat_VarRead@plt+0x6c69>
  4082c1:	mov    DWORD PTR [rip+0xcf25],0x10        # 4151f0 <getopt_long_only@@Base+0x8260>
  4082cb:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  4082d0:	mov    rax,0x416510
  4082d7:	mov    DWORD PTR [rsp+0x1c],r13d
  4082dc:	xor    r15d,r15d
  4082df:	mov    r13,QWORD PTR [rsp+0x8]
  4082e4:	mov    QWORD PTR [rsp+0x10],r14
  4082e9:	mov    r12d,DWORD PTR [rax]
  4082ec:	mov    eax,DWORD PTR [rsp+0x18]
  4082f0:	sub    eax,0x7
  4082f3:	mov    DWORD PTR [rsp+0x48],eax
  4082f7:	mov    QWORD PTR [rsp+0x40],rax
  4082fc:	cmp    r12d,DWORD PTR [rsp+0x1c]
  408301:	jge    407cd8 <Mat_VarRead@plt+0x5938>
  408307:	mov    r14,QWORD PTR [rsp+0x10]
  40830c:	movsxd rax,r12d
  40830f:	lea    rsi,[rip+0x65de]        # 40e8f4 <getopt_long_only@@Base+0x1964>
  408316:	lea    rbx,[rax*8+0x0]
  40831e:	mov    rbp,QWORD PTR [r14+rax*8]
  408322:	mov    rdi,rbp
  408325:	call   402210 <strcmp@plt>
  40832a:	test   eax,eax
  40832c:	jne    4084f0 <Mat_VarRead@plt+0x6150>
  408332:	lea    rax,[rip+0x5e2e]        # 40e167 <getopt_long_only@@Base+0x11d7>
  408339:	test   r13,r13
  40833c:	mov    edx,DWORD PTR [rip+0xceae]        # 4151f0 <getopt_long_only@@Base+0x8260>
  408342:	cmove  r13,rax
  408346:	xor    esi,esi
  408348:	mov    rdi,r13
  40834b:	call   402310 <Mat_CreateVer@plt>
  408350:	mov    rdi,QWORD PTR [r14+rbx*1+0x8]
  408355:	mov    rbp,rax
  408358:	lea    eax,[r12+0x2]
  40835d:	xor    esi,esi
  40835f:	mov    DWORD PTR [rsp+0x8],eax
  408363:	call   402080 <Mat_Open@plt>
  408368:	test   rbp,rbp
  40836b:	mov    r12,rax
  40836e:	je     4084dd <Mat_VarRead@plt+0x613d>
  408374:	test   rax,rax
  408377:	je     4084dd <Mat_VarRead@plt+0x613d>
  40837d:	mov    rdi,r12
  408380:	call   402070 <Mat_VarReadNext@plt>
  408385:	test   rax,rax
  408388:	mov    rbx,rax
  40838b:	je     408763 <Mat_VarRead@plt+0x63c3>
  408391:	mov    esi,0x1
  408396:	mov    rdi,rbx
  408399:	call   402370 <Mat_VarDuplicate@plt>
  40839e:	mov    rdi,rbx
  4083a1:	mov    r14,rax
  4083a4:	call   402230 <Mat_VarFree@plt>
  4083a9:	test   r14,r14
  4083ac:	je     4084e7 <Mat_VarRead@plt+0x6147>
  4083b2:	mov    edx,DWORD PTR [rip+0xe16c]        # 416524 <opterr@@Base+0x10>
  4083b8:	mov    rdi,rbp
  4083bb:	mov    rsi,r14
  4083be:	call   4020f0 <Mat_VarWrite@plt>
  4083c3:	mov    rdi,r14
  4083c6:	call   402230 <Mat_VarFree@plt>
  4083cb:	jmp    40837d <Mat_VarRead@plt+0x5fdd>
  4083cd:	lea    rsi,[rip+0x5fab]        # 40e37f <getopt_long_only@@Base+0x13ef>
  4083d4:	mov    rdi,rbp
  4083d7:	call   402210 <strcmp@plt>
  4083dc:	test   eax,eax
  4083de:	je     40adbc <Mat_VarRead@plt+0x8a1c>
  4083e4:	lea    rsi,[rip+0x5fa6]        # 40e391 <getopt_long_only@@Base+0x1401>
  4083eb:	mov    rdi,rbp
  4083ee:	call   402210 <strcmp@plt>
  4083f3:	test   eax,eax
  4083f5:	je     40aa8c <Mat_VarRead@plt+0x86ec>
  4083fb:	lea    rsi,[rip+0x5fa3]        # 40e3a5 <getopt_long_only@@Base+0x1415>
  408402:	mov    rdi,rbp
  408405:	call   402210 <strcmp@plt>
  40840a:	test   eax,eax
  40840c:	je     40aecb <Mat_VarRead@plt+0x8b2b>
  408412:	lea    rsi,[rip+0x5ffa]        # 40e413 <getopt_long_only@@Base+0x1483>
  408419:	mov    rdi,rbp
  40841c:	call   402210 <strcmp@plt>
  408421:	test   eax,eax
  408423:	je     40a17f <Mat_VarRead@plt+0x7ddf>
  408429:	lea    rsi,[rip+0x5ff7]        # 40e427 <getopt_long_only@@Base+0x1497>
  408430:	mov    rdi,rbp
  408433:	call   402210 <strcmp@plt>
  408438:	test   eax,eax
  40843a:	je     40a430 <Mat_VarRead@plt+0x8090>
  408440:	lea    rsi,[rip+0x5ff5]        # 40e43c <getopt_long_only@@Base+0x14ac>
  408447:	mov    rdi,rbp
  40844a:	call   402210 <strcmp@plt>
  40844f:	test   eax,eax
  408451:	je     40a412 <Mat_VarRead@plt+0x8072>
  408457:	lea    rsi,[rip+0x5fed]        # 40e44b <getopt_long_only@@Base+0x14bb>
  40845e:	mov    rdi,rbp
  408461:	call   402210 <strcmp@plt>
  408466:	test   eax,eax
  408468:	je     40a822 <Mat_VarRead@plt+0x8482>
  40846e:	lea    rsi,[rip+0x5fe3]        # 40e458 <getopt_long_only@@Base+0x14c8>
  408475:	mov    rdi,rbp
  408478:	call   402210 <strcmp@plt>
  40847d:	test   eax,eax
  40847f:	je     409e8d <Mat_VarRead@plt+0x7aed>
  408485:	lea    rsi,[rip+0x5fdf]        # 40e46b <getopt_long_only@@Base+0x14db>
  40848c:	mov    rdi,rbp
  40848f:	call   402210 <strcmp@plt>
  408494:	test   eax,eax
  408496:	je     409d8c <Mat_VarRead@plt+0x79ec>
  40849c:	lea    rsi,[rip+0x612d]        # 40e5d0 <getopt_long_only@@Base+0x1640>
  4084a3:	mov    rdi,rbp
  4084a6:	call   402210 <strcmp@plt>
  4084ab:	test   eax,eax
  4084ad:	jne    409d2e <Mat_VarRead@plt+0x798e>
  4084b3:	mov    ecx,DWORD PTR [rsp+0x1c]
  4084b7:	lea    eax,[r12+0x1]
  4084bc:	mov    DWORD PTR [rsp+0x8],eax
  4084c0:	sub    ecx,eax
  4084c2:	cmp    ecx,0x2
  4084c5:	jg     409c5f <Mat_VarRead@plt+0x78bf>
  4084cb:	lea    rdi,[rip+0x702e]        # 40f500 <getopt_long_only@@Base+0x2570>
  4084d2:	xor    eax,eax
  4084d4:	add    r15d,0x1
  4084d8:	call   4022a0 <Mat_Critical@plt>
  4084dd:	mov    r12d,DWORD PTR [rsp+0x8]
  4084e2:	jmp    4082fc <Mat_VarRead@plt+0x5f5c>
  4084e7:	add    r15d,0x1
  4084eb:	jmp    40837d <Mat_VarRead@plt+0x5fdd>
  4084f0:	lea    rsi,[rip+0x63f0]        # 40e8e7 <getopt_long_only@@Base+0x1957>
  4084f7:	mov    rdi,rbp
  4084fa:	call   402210 <strcmp@plt>
  4084ff:	test   eax,eax
  408501:	je     408778 <Mat_VarRead@plt+0x63d8>
  408507:	lea    rsi,[rip+0x63c9]        # 40e8d7 <getopt_long_only@@Base+0x1947>
  40850e:	mov    rdi,rbp
  408511:	call   402210 <strcmp@plt>
  408516:	test   eax,eax
  408518:	je     408816 <Mat_VarRead@plt+0x6476>
  40851e:	lea    rsi,[rip+0x6355]        # 40e87a <getopt_long_only@@Base+0x18ea>
  408525:	mov    rdi,rbp
  408528:	call   402210 <strcmp@plt>
  40852d:	test   eax,eax
  40852f:	mov    r11d,eax
  408532:	jne    4087d0 <Mat_VarRead@plt+0x6430>
  408538:	lea    eax,[r12+0x1]
  40853d:	test   r13,r13
  408540:	lea    r10,[rsp+0x390]
  408548:	lea    r12,[rsp+0xc0]
  408550:	lea    rbp,[rsp+0x130]
  408558:	lea    rbx,[rsp+0x200]
  408560:	mov    DWORD PTR [rsp+0x8],eax
  408564:	lea    rax,[rip+0x5c0e]        # 40e179 <getopt_long_only@@Base+0x11e9>
  40856b:	mov    QWORD PTR [rsp+0xa0],0x5
  408577:	mov    QWORD PTR [rsp+0xa8],0xa
  408583:	cmove  r13,rax
  408587:	xor    eax,eax
  408589:	mov    edx,eax
  40858b:	and    edx,0x1
  40858e:	mov    BYTE PTR [r10+rax*1],dl
  408592:	mov    WORD PTR [r12+rax*2],dx
  408597:	mov    DWORD PTR [rbp+rax*4+0x0],edx
  40859b:	movsxd rdx,edx
  40859e:	mov    QWORD PTR [rbx+rax*8],rdx
  4085a2:	add    rax,0x1
  4085a6:	cmp    rax,0x32
  4085aa:	jne    408589 <Mat_VarRead@plt+0x61e9>
  4085ac:	mov    edx,DWORD PTR [rip+0xcc3e]        # 4151f0 <getopt_long_only@@Base+0x8260>
  4085b2:	xor    esi,esi
  4085b4:	mov    rdi,r13
  4085b7:	mov    DWORD PTR [rsp+0x28],r11d
  4085bc:	mov    QWORD PTR [rsp+0x20],r10
  4085c1:	call   402310 <Mat_CreateVer@plt>
  4085c6:	test   rax,rax
  4085c9:	mov    r14,rax
  4085cc:	je     408ad7 <Mat_VarRead@plt+0x6737>
  4085d2:	lea    rax,[rsp+0xa0]
  4085da:	sub    rsp,0x8
  4085de:	lea    rdi,[rip+0x5d62]        # 40e347 <getopt_long_only@@Base+0x13b7>
  4085e5:	push   0x200
  4085ea:	mov    r9,rbx
  4085ed:	mov    ecx,0x2
  4085f2:	mov    r8,rax
  4085f5:	mov    edx,0xd
  4085fa:	mov    esi,0xf
  4085ff:	mov    QWORD PTR [rsp+0x40],rax
  408604:	call   4020d0 <Mat_VarCreate@plt>
  408609:	mov    edx,DWORD PTR [rip+0xdf15]        # 416524 <opterr@@Base+0x10>
  40860f:	mov    rbx,rax
  408612:	mov    rsi,rax
  408615:	mov    rdi,r14
  408618:	call   4020f0 <Mat_VarWrite@plt>
  40861d:	mov    rdi,rbx
  408620:	call   402230 <Mat_VarFree@plt>
  408625:	mov    r9,rbp
  408628:	mov    rbp,QWORD PTR [rsp+0x40]
  40862d:	lea    rdi,[rip+0x5d16]        # 40e34a <getopt_long_only@@Base+0x13ba>
  408634:	mov    ecx,0x2
  408639:	mov    edx,0x6
  40863e:	mov    esi,0xd
  408643:	mov    DWORD PTR [rsp],0x200
  40864a:	mov    r8,rbp
  40864d:	call   4020d0 <Mat_VarCreate@plt>
  408652:	mov    edx,DWORD PTR [rip+0xdecc]        # 416524 <opterr@@Base+0x10>
  408658:	mov    rbx,rax
  40865b:	mov    rsi,rax
  40865e:	mov    rdi,r14
  408661:	call   4020f0 <Mat_VarWrite@plt>
  408666:	mov    rdi,rbx
  408669:	call   402230 <Mat_VarFree@plt>
  40866e:	lea    rdi,[rip+0x5cd8]        # 40e34d <getopt_long_only@@Base+0x13bd>
  408675:	mov    r9,r12
  408678:	mov    r8,rbp
  40867b:	mov    ecx,0x2
  408680:	mov    edx,0x4
  408685:	mov    esi,0xb
  40868a:	mov    DWORD PTR [rsp],0x200
  408691:	call   4020d0 <Mat_VarCreate@plt>
  408696:	mov    edx,DWORD PTR [rip+0xde88]        # 416524 <opterr@@Base+0x10>
  40869c:	mov    rbx,rax
  40869f:	mov    rsi,rax
  4086a2:	mov    rdi,r14
  4086a5:	call   4020f0 <Mat_VarWrite@plt>
  4086aa:	mov    rdi,rbx
  4086ad:	call   402230 <Mat_VarFree@plt>
  4086b2:	mov    r10,QWORD PTR [rsp+0x30]
  4086b7:	lea    rdi,[rip+0x5c92]        # 40e350 <getopt_long_only@@Base+0x13c0>
  4086be:	mov    r8,rbp
  4086c1:	mov    ecx,0x2
  4086c6:	mov    edx,0x2
  4086cb:	mov    esi,0x9
  4086d0:	mov    DWORD PTR [rsp],0x200
  4086d7:	mov    r9,r10
  4086da:	call   4020d0 <Mat_VarCreate@plt>
  4086df:	mov    edx,DWORD PTR [rip+0xde3f]        # 416524 <opterr@@Base+0x10>
  4086e5:	mov    rbx,rax
  4086e8:	mov    rsi,rax
  4086eb:	mov    rdi,r14
  4086ee:	call   4020f0 <Mat_VarWrite@plt>
  4086f3:	mov    rdi,rbx
  4086f6:	call   402230 <Mat_VarFree@plt>
  4086fb:	lea    rdi,[rip+0x5c51]        # 40e353 <getopt_long_only@@Base+0x13c3>
  408702:	mov    r8,rbp
  408705:	xor    r9d,r9d
  408708:	mov    ecx,0x2
  40870d:	mov    edx,0x2
  408712:	mov    esi,0x9
  408717:	mov    QWORD PTR [rsp+0xb0],0x0
  408723:	mov    DWORD PTR [rsp],0x200
  40872a:	call   4020d0 <Mat_VarCreate@plt>
  40872f:	mov    edx,DWORD PTR [rip+0xddef]        # 416524 <opterr@@Base+0x10>
  408735:	mov    rsi,rax
  408738:	mov    rbx,rax
  40873b:	mov    rdi,r14
  40873e:	call   4020f0 <Mat_VarWrite@plt>
  408743:	mov    rdi,rbx
  408746:	call   402230 <Mat_VarFree@plt>
  40874b:	mov    rdi,r14
  40874e:	call   402290 <Mat_Close@plt>
  408753:	pop    rbp
  408754:	pop    r12
  408756:	mov    r11d,DWORD PTR [rsp+0x28]
  40875b:	add    r15d,r11d
  40875e:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  408763:	mov    rdi,rbp
  408766:	call   402290 <Mat_Close@plt>
  40876b:	mov    rdi,r12
  40876e:	call   402290 <Mat_Close@plt>
  408773:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  408778:	lea    eax,[r12+0x1]
  40877d:	mov    rbx,QWORD PTR [rsp+0x10]
  408782:	mov    esi,0x1
  408787:	cdqe   
  408789:	add    rax,0x1
  40878d:	mov    rbp,QWORD PTR [rbx+rax*8]
  408791:	mov    rbx,QWORD PTR [rbx+rax*8-0x8]
  408796:	mov    rdi,rbx
  408799:	call   402080 <Mat_Open@plt>
  40879e:	test   rax,rax
  4087a1:	mov    r14,rax
  4087a4:	je     408a9e <Mat_VarRead@plt+0x66fe>
  4087aa:	mov    rdi,rax
  4087ad:	mov    rsi,rbp
  4087b0:	call   4022b0 <Mat_VarDelete@plt>
  4087b5:	mov    rdi,r14
  4087b8:	mov    ebx,eax
  4087ba:	call   402290 <Mat_Close@plt>
  4087bf:	lea    eax,[r12+0x3]
  4087c4:	add    r15d,ebx
  4087c7:	mov    DWORD PTR [rsp+0x8],eax
  4087cb:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  4087d0:	lea    rsi,[rip+0x60e9]        # 40e8c0 <getopt_long_only@@Base+0x1930>
  4087d7:	mov    rdi,rbp
  4087da:	call   402210 <strcmp@plt>
  4087df:	test   eax,eax
  4087e1:	jne    408917 <Mat_VarRead@plt+0x6577>
  4087e7:	lea    eax,[r12+0x1]
  4087ec:	test   r13,r13
  4087ef:	mov    edx,DWORD PTR [rsp+0x5c]
  4087f3:	mov    edi,DWORD PTR [rsp+0x18]
  4087f7:	mov    DWORD PTR [rsp+0x8],eax
  4087fb:	lea    rax,[rip+0x5991]        # 40e193 <getopt_long_only@@Base+0x1203>
  408802:	cmove  r13,rax
  408806:	mov    rsi,r13
  408809:	call   40b1c0 <Mat_VarRead@plt+0x8e20>
  40880e:	add    r15d,eax
  408811:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  408816:	lea    eax,[r12+0x2]
  40881b:	mov    rbx,QWORD PTR [rsp+0x10]
  408820:	mov    esi,0x1
  408825:	mov    DWORD PTR [rsp+0x8],eax
  408829:	lea    eax,[r12+0x1]
  40882e:	cdqe   
  408830:	mov    r12,QWORD PTR [rbx+rax*8]
  408834:	mov    rdi,r12
  408837:	call   402080 <Mat_Open@plt>
  40883c:	test   rax,rax
  40883f:	mov    rbp,rax
  408842:	je     408bb4 <Mat_VarRead@plt+0x6814>
  408848:	lea    rsi,[rsp+0x60]
  40884d:	mov    rdi,rax
  408850:	call   402240 <Mat_GetDir@plt>
  408855:	test   rax,rax
  408858:	mov    rbx,rax
  40885b:	je     408bcf <Mat_VarRead@plt+0x682f>
  408861:	mov    rax,QWORD PTR [rsp+0x60]
  408866:	xor    r14d,r14d
  408869:	add    rax,0x1
  40886d:	mov    QWORD PTR [rsp+0x68],rax
  408872:	jmp    40887d <Mat_VarRead@plt+0x64dd>
  408874:	call   4020c0 <puts@plt>
  408879:	add    r14,0x1
  40887d:	cmp    r14,QWORD PTR [rsp+0x60]
  408882:	jae    408899 <Mat_VarRead@plt+0x64f9>
  408884:	mov    rdi,QWORD PTR [rbx+r14*8]
  408888:	test   rdi,rdi
  40888b:	jne    408874 <Mat_VarRead@plt+0x64d4>
  40888d:	mov    edi,0xa
  408892:	call   402060 <putchar@plt>
  408897:	jmp    408879 <Mat_VarRead@plt+0x64d9>
  408899:	lea    rsi,[rsp+0x68]
  40889e:	mov    rdi,rbp
  4088a1:	xor    ebx,ebx
  4088a3:	call   402240 <Mat_GetDir@plt>
  4088a8:	mov    rax,QWORD PTR [rsp+0x68]
  4088ad:	cmp    QWORD PTR [rsp+0x60],rax
  4088b2:	setne  bl
  4088b5:	mov    rdi,rbp
  4088b8:	call   4020e0 <Mat_GetFilename@plt>
  4088bd:	mov    rdi,r12
  4088c0:	mov    rsi,rax
  4088c3:	call   402210 <strcmp@plt>
  4088c8:	mov    rdi,rbp
  4088cb:	cmp    eax,0x1
  4088ce:	sbb    ebx,0xffffffff
  4088d1:	call   402100 <Mat_GetVersion@plt>
  4088d6:	mov    rdi,rbp
  4088d9:	cmp    eax,0x1
  4088dc:	adc    ebx,0x0
  4088df:	call   4022e0 <Mat_GetHeader@plt>
  4088e4:	test   rax,rax
  4088e7:	mov    rdi,rax
  4088ea:	je     408907 <Mat_VarRead@plt+0x6567>
  4088ec:	xor    eax,eax
  4088ee:	or     rcx,0xffffffffffffffff
  4088f2:	repnz scas al,BYTE PTR es:[rdi]
  4088f4:	mov    rax,rcx
  4088f7:	not    rax
  4088fa:	sub    rax,0x1
  4088fe:	cmp    rax,0x81
  408904:	sbb    ebx,0xffffffff
  408907:	mov    rdi,rbp
  40890a:	call   402290 <Mat_Close@plt>
  40890f:	add    r15d,ebx
  408912:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  408917:	lea    rsi,[rip+0x59ab]        # 40e2c9 <getopt_long_only@@Base+0x1339>
  40891e:	mov    rdi,rbp
  408921:	call   402210 <strcmp@plt>
  408926:	test   eax,eax
  408928:	jne    40897b <Mat_VarRead@plt+0x65db>
  40892a:	lea    eax,[r12+0x1]
  40892f:	test   r13,r13
  408932:	mov    edx,DWORD PTR [rsp+0x5c]
  408936:	mov    edi,DWORD PTR [rsp+0x18]
  40893a:	mov    DWORD PTR [rsp+0x8],eax
  40893e:	lea    rax,[rip+0x68bb]        # 40f200 <getopt_long_only@@Base+0x2270>
  408945:	cmove  r13,rax
  408949:	mov    rsi,r13
  40894c:	call   40b930 <Mat_VarRead@plt+0x9590>
  408951:	add    r15d,eax
  408954:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  408959:	lea    rdi,[rip+0xd620]        # 415f80 <getopt_long_only@@Base+0x8ff0>
  408960:	call   402330 <Mat_Help@plt>
  408965:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  40896a:	lea    rdi,[rip+0xd10f]        # 415a80 <getopt_long_only@@Base+0x8af0>
  408971:	call   402330 <Mat_Help@plt>
  408976:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  40897b:	lea    rsi,[rip+0x5e74]        # 40e7f6 <getopt_long_only@@Base+0x1866>
  408982:	mov    rdi,rbp
  408985:	call   402210 <strcmp@plt>
  40898a:	test   eax,eax
  40898c:	jne    408b11 <Mat_VarRead@plt+0x6771>
  408992:	lea    eax,[r12+0x1]
  408997:	test   r13,r13
  40899a:	mov    QWORD PTR [rsp+0x200],0x0
  4089a6:	mov    QWORD PTR [rsp+0x208],0xa
  4089b2:	mov    DWORD PTR [rsp+0x8],eax
  4089b6:	lea    rax,[rip+0x686b]        # 40f228 <getopt_long_only@@Base+0x2298>
  4089bd:	cmove  r13,rax
  4089c1:	cmp    DWORD PTR [rsp+0x48],0x8
  4089c6:	ja     408ece <Mat_VarRead@plt+0x6b2e>
  4089cc:	mov    rax,QWORD PTR [rsp+0x40]
  4089d1:	lea    rdx,[rip+0x6530]        # 40ef08 <getopt_long_only@@Base+0x1f78>
  4089d8:	movsxd rax,DWORD PTR [rdx+rax*4]
  4089dc:	add    rax,rdx
  4089df:	jmp    rax
  4089e1:	mov    ebp,0x6
  4089e6:	mov    edx,DWORD PTR [rip+0xc804]        # 4151f0 <getopt_long_only@@Base+0x8260>
  4089ec:	xor    esi,esi
  4089ee:	mov    rdi,r13
  4089f1:	call   402310 <Mat_CreateVer@plt>
  4089f6:	test   rax,rax
  4089f9:	mov    rbx,rax
  4089fc:	je     408cf1 <Mat_VarRead@plt+0x6951>
  408a02:	sub    rsp,0x8
  408a06:	lea    rdi,[rip+0x5949]        # 40e356 <getopt_long_only@@Base+0x13c6>
  408a0d:	xor    r9d,r9d
  408a10:	push   0x0
  408a12:	mov    esi,DWORD PTR [rsp+0x28]
  408a16:	mov    ecx,0x2
  408a1b:	mov    edx,ebp
  408a1d:	lea    r8,[rsp+0x210]
  408a25:	call   4020d0 <Mat_VarCreate@plt>
  408a2a:	mov    edx,DWORD PTR [rip+0xdaf4]        # 416524 <opterr@@Base+0x10>
  408a30:	mov    rsi,rax
  408a33:	mov    rdi,rbx
  408a36:	mov    r12,rax
  408a39:	call   4020f0 <Mat_VarWrite@plt>
  408a3e:	mov    rdi,r12
  408a41:	mov    ebp,eax
  408a43:	call   402230 <Mat_VarFree@plt>
  408a48:	mov    rdi,rbx
  408a4b:	call   402290 <Mat_Close@plt>
  408a50:	pop    r11
  408a52:	pop    rbx
  408a53:	add    r15d,ebp
  408a56:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  408a5b:	mov    ebp,0x5
  408a60:	jmp    4089e6 <Mat_VarRead@plt+0x6646>
  408a62:	mov    ebp,0x1
  408a67:	jmp    4089e6 <Mat_VarRead@plt+0x6646>
  408a6c:	mov    ebp,0x7
  408a71:	jmp    4089e6 <Mat_VarRead@plt+0x6646>
  408a76:	mov    ebp,0xc
  408a7b:	jmp    4089e6 <Mat_VarRead@plt+0x6646>
  408a80:	mov    ebp,0x3
  408a85:	jmp    4089e6 <Mat_VarRead@plt+0x6646>
  408a8a:	mov    ebp,0x2
  408a8f:	jmp    4089e6 <Mat_VarRead@plt+0x6646>
  408a94:	mov    ebp,0x4
  408a99:	jmp    4089e6 <Mat_VarRead@plt+0x6646>
  408a9e:	lea    rdi,[rip+0x5888]        # 40e32d <getopt_long_only@@Base+0x139d>
  408aa5:	mov    rsi,rbx
  408aa8:	xor    eax,eax
  408aaa:	mov    ebx,0x1
  408aaf:	call   4022a0 <Mat_Critical@plt>
  408ab4:	jmp    4087bf <Mat_VarRead@plt+0x641f>
  408ab9:	mov    DWORD PTR [rsp+0x18],0xe
  408ac1:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  408ac6:	lea    rdi,[rip+0xc8b3]        # 415380 <getopt_long_only@@Base+0x83f0>
  408acd:	call   402330 <Mat_Help@plt>
  408ad2:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408ad7:	mov    r11d,0x1
  408add:	jmp    40875b <Mat_VarRead@plt+0x63bb>
  408ae2:	lea    rdi,[rip+0xc857]        # 415340 <getopt_long_only@@Base+0x83b0>
  408ae9:	call   402330 <Mat_Help@plt>
  408aee:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408af3:	lea    rdi,[rip+0xd3e6]        # 415ee0 <getopt_long_only@@Base+0x8f50>
  408afa:	call   402330 <Mat_Help@plt>
  408aff:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408b04:	mov    DWORD PTR [rsp+0x18],0xf
  408b0c:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  408b11:	lea    rsi,[rip+0x5cb2]        # 40e7ca <getopt_long_only@@Base+0x183a>
  408b18:	mov    rdi,rbp
  408b1b:	call   402210 <strcmp@plt>
  408b20:	test   eax,eax
  408b22:	jne    408c11 <Mat_VarRead@plt+0x6871>
  408b28:	lea    eax,[r12+0x1]
  408b2d:	test   r13,r13
  408b30:	mov    edx,DWORD PTR [rip+0xc6ba]        # 4151f0 <getopt_long_only@@Base+0x8260>
  408b36:	mov    DWORD PTR [rsp+0x8],eax
  408b3a:	lea    rax,[rip+0x566c]        # 40e1ad <getopt_long_only@@Base+0x121d>
  408b41:	cmove  r13,rax
  408b45:	xor    esi,esi
  408b47:	mov    rdi,r13
  408b4a:	call   402310 <Mat_CreateVer@plt>
  408b4f:	test   rax,rax
  408b52:	mov    rbx,rax
  408b55:	je     408cf1 <Mat_VarRead@plt+0x6951>
  408b5b:	mov    QWORD PTR [rsp+0x200],0x4
  408b67:	mov    QWORD PTR [rsp+0x208],0x1a
  408b73:	sub    rsp,0x8
  408b77:	push   0x1
  408b79:	lea    r9,[rip+0x68d8]        # 40f458 <getopt_long_only@@Base+0x24c8>
  408b80:	mov    ecx,0x2
  408b85:	mov    edx,0x2
  408b8a:	lea    r8,[rsp+0x210]
  408b92:	mov    esi,0x4
  408b97:	lea    rdi,[rip+0x54ec]        # 40e08a <getopt_long_only@@Base+0x10fa>
  408b9e:	jmp    408a25 <Mat_VarRead@plt+0x6685>
  408ba3:	lea    rdi,[rip+0xd296]        # 415e40 <getopt_long_only@@Base+0x8eb0>
  408baa:	call   402330 <Mat_Help@plt>
  408baf:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408bb4:	lea    rdi,[rip+0x5772]        # 40e32d <getopt_long_only@@Base+0x139d>
  408bbb:	mov    rsi,r12
  408bbe:	xor    eax,eax
  408bc0:	mov    ebx,0x1
  408bc5:	call   4022a0 <Mat_Critical@plt>
  408bca:	jmp    40890f <Mat_VarRead@plt+0x656f>
  408bcf:	mov    ebx,0x1
  408bd4:	jmp    4088b5 <Mat_VarRead@plt+0x6515>
  408bd9:	lea    rdi,[rip+0xd120]        # 415d00 <getopt_long_only@@Base+0x8d70>
  408be0:	call   402330 <Mat_Help@plt>
  408be5:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408bea:	lea    rdi,[rip+0xd1af]        # 415da0 <getopt_long_only@@Base+0x8e10>
  408bf1:	call   402330 <Mat_Help@plt>
  408bf6:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408bfb:	call   402140 <__stack_chk_fail@plt>
  408c00:	lea    rdi,[rip+0xd059]        # 415c60 <getopt_long_only@@Base+0x8cd0>
  408c07:	call   402330 <Mat_Help@plt>
  408c0c:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408c11:	lea    rsi,[rip+0x5b99]        # 40e7b1 <getopt_long_only@@Base+0x1821>
  408c18:	mov    rdi,rbp
  408c1b:	call   402210 <strcmp@plt>
  408c20:	test   eax,eax
  408c22:	jne    408d2a <Mat_VarRead@plt+0x698a>
  408c28:	lea    eax,[r12+0x1]
  408c2d:	test   r13,r13
  408c30:	mov    edx,DWORD PTR [rip+0xc5ba]        # 4151f0 <getopt_long_only@@Base+0x8260>
  408c36:	mov    WORD PTR [rsp+0x130],0x628
  408c40:	mov    WORD PTR [rsp+0x132],0x111
  408c4a:	mov    DWORD PTR [rsp+0x8],eax
  408c4e:	lea    rax,[rip+0x556c]        # 40e1c1 <getopt_long_only@@Base+0x1231>
  408c55:	mov    WORD PTR [rsp+0x134],0x62c
  408c5f:	mov    WORD PTR [rsp+0x136],0x69
  408c69:	mov    WORD PTR [rsp+0x138],0x644
  408c73:	cmove  r13,rax
  408c77:	xor    esi,esi
  408c79:	mov    WORD PTR [rsp+0x13a],0x1ec7
  408c83:	mov    rdi,r13
  408c86:	mov    WORD PTR [rsp+0x13c],0x6cc
  408c90:	mov    WORD PTR [rsp+0x13e],0x6e
  408c9a:	call   402310 <Mat_CreateVer@plt>
  408c9f:	test   rax,rax
  408ca2:	mov    rbx,rax
  408ca5:	je     408cf1 <Mat_VarRead@plt+0x6951>
  408ca7:	mov    QWORD PTR [rsp+0x200],0x2
  408cb3:	mov    QWORD PTR [rsp+0x208],0x4
  408cbf:	sub    rsp,0x8
  408cc3:	push   0x1
  408cc5:	mov    ecx,0x2
  408cca:	mov    edx,0x11
  408ccf:	lea    r9,[rsp+0x140]
  408cd7:	lea    r8,[rsp+0x210]
  408cdf:	jmp    408b92 <Mat_VarRead@plt+0x67f2>
  408ce4:	mov    DWORD PTR [rsp+0x18],0xc
  408cec:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  408cf1:	mov    ebp,0x1
  408cf6:	jmp    408a53 <Mat_VarRead@plt+0x66b3>
  408cfb:	lea    rdi,[rip+0xce3e]        # 415b40 <getopt_long_only@@Base+0x8bb0>
  408d02:	call   402330 <Mat_Help@plt>
  408d07:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408d0c:	lea    rdi,[rip+0xcecd]        # 415be0 <getopt_long_only@@Base+0x8c50>
  408d13:	call   402330 <Mat_Help@plt>
  408d18:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408d1d:	mov    DWORD PTR [rsp+0x18],0xd
  408d25:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  408d2a:	lea    rsi,[rip+0x562b]        # 40e35c <getopt_long_only@@Base+0x13cc>
  408d31:	mov    rdi,rbp
  408d34:	call   402210 <strcmp@plt>
  408d39:	test   eax,eax
  408d3b:	jne    408d7e <Mat_VarRead@plt+0x69de>
  408d3d:	lea    eax,[r12+0x1]
  408d42:	test   r13,r13
  408d45:	mov    DWORD PTR [rsp+0x8],eax
  408d49:	lea    rax,[rip+0x548d]        # 40e1dd <getopt_long_only@@Base+0x124d>
  408d50:	cmove  r13,rax
  408d54:	mov    rdi,r13
  408d57:	call   4023b0 <Mat_VarRead@plt+0x10>
  408d5c:	add    r15d,eax
  408d5f:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  408d64:	mov    DWORD PTR [rsp+0x18],0xb
  408d6c:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  408d71:	mov    DWORD PTR [rsp+0x18],0xa
  408d79:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  408d7e:	lea    rsi,[rip+0x57e4]        # 40e569 <getopt_long_only@@Base+0x15d9>
  408d85:	mov    rdi,rbp
  408d88:	call   402210 <strcmp@plt>
  408d8d:	test   eax,eax
  408d8f:	mov    r14d,eax
  408d92:	je     40905e <Mat_VarRead@plt+0x6cbe>
  408d98:	lea    rsi,[rip+0x5784]        # 40e523 <getopt_long_only@@Base+0x1593>
  408d9f:	mov    rdi,rbp
  408da2:	call   402210 <strcmp@plt>
  408da7:	test   eax,eax
  408da9:	mov    r14d,eax
  408dac:	jne    409019 <Mat_VarRead@plt+0x6c79>
  408db2:	lea    eax,[r12+0x1]
  408db7:	lea    rbx,[rsp+0x200]
  408dbf:	test   r13,r13
  408dc2:	mov    ecx,0x32
  408dc7:	mov    QWORD PTR [rsp+0x130],0x5
  408dd3:	mov    QWORD PTR [rsp+0x138],0x5
  408ddf:	mov    DWORD PTR [rsp+0x8],eax
  408de3:	lea    rax,[rip+0x5407]        # 40e1f1 <getopt_long_only@@Base+0x1261>
  408dea:	mov    rdi,rbx
  408ded:	cmove  r13,rax
  408df1:	mov    eax,r14d
  408df4:	rep stos DWORD PTR es:[rdi],eax
  408df6:	mov    eax,0x1
  408dfb:	vxorpd xmm0,xmm0,xmm0
  408dff:	vcvtsi2sd xmm0,xmm0,eax
  408e03:	vmovsd QWORD PTR [rbx+rax*8-0x8],xmm0
  408e09:	add    rax,0x1
  408e0d:	cmp    rax,0x1a
  408e11:	jne    408dfb <Mat_VarRead@plt+0x6a5b>
  408e13:	vmovsd xmm0,QWORD PTR [rip+0x9b75]        # 412990 <getopt_long_only@@Base+0x5a00>
  408e1b:	mov    edx,DWORD PTR [rip+0xc3cf]        # 4151f0 <getopt_long_only@@Base+0x8260>
  408e21:	xor    esi,esi
  408e23:	mov    rdi,r13
  408e26:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x9b5a]        # 412988 <getopt_long_only@@Base+0x59f8>
  408e2e:	vmovsd QWORD PTR [rsp+0x200],xmm0
  408e37:	vmovsd QWORD PTR [rsp+0x230],xmm0
  408e40:	vmovsd QWORD PTR [rsp+0x260],xmm0
  408e49:	vmovsd QWORD PTR [rsp+0x290],xmm0
  408e52:	vmovsd QWORD PTR [rsp+0x2c0],xmm0
  408e5b:	call   402310 <Mat_CreateVer@plt>
  408e60:	test   rax,rax
  408e63:	mov    rbp,rax
  408e66:	je     409106 <Mat_VarRead@plt+0x6d66>
  408e6c:	sub    rsp,0x8
  408e70:	lea    rdi,[rip+0x5423]        # 40e29a <getopt_long_only@@Base+0x130a>
  408e77:	mov    r9,rbx
  408e7a:	push   0x1
  408e7c:	mov    edx,0x9
  408e81:	mov    esi,0x6
  408e86:	mov    ecx,0x2
  408e8b:	lea    r8,[rsp+0x140]
  408e93:	call   4020d0 <Mat_VarCreate@plt>
  408e98:	xor    edx,edx
  408e9a:	mov    rbx,rax
  408e9d:	mov    rsi,rax
  408ea0:	mov    rdi,rbp
  408ea3:	call   4020f0 <Mat_VarWrite@plt>
  408ea8:	mov    rdi,rbx
  408eab:	call   402230 <Mat_VarFree@plt>
  408eb0:	mov    rdi,rbp
  408eb3:	call   402290 <Mat_Close@plt>
  408eb8:	pop    r9
  408eba:	pop    r10
  408ebc:	add    r15d,r14d
  408ebf:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  408ec4:	mov    ebp,0xd
  408ec9:	jmp    4089e6 <Mat_VarRead@plt+0x6646>
  408ece:	mov    ebp,0x9
  408ed3:	jmp    4089e6 <Mat_VarRead@plt+0x6646>
  408ed8:	lea    rdi,[rip+0xc8e1]        # 4157c0 <getopt_long_only@@Base+0x8830>
  408edf:	call   402330 <Mat_Help@plt>
  408ee4:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408ee9:	lea    rdi,[rip+0xc970]        # 415860 <getopt_long_only@@Base+0x88d0>
  408ef0:	call   402330 <Mat_Help@plt>
  408ef5:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408efa:	lea    rdi,[rip+0xc9ff]        # 415900 <getopt_long_only@@Base+0x8970>
  408f01:	call   402330 <Mat_Help@plt>
  408f06:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408f0b:	lea    rdi,[rip+0xcaae]        # 4159c0 <getopt_long_only@@Base+0x8a30>
  408f12:	call   402330 <Mat_Help@plt>
  408f17:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408f1c:	lea    rdi,[rip+0xcb9d]        # 415ac0 <getopt_long_only@@Base+0x8b30>
  408f23:	call   402330 <Mat_Help@plt>
  408f28:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408f2d:	lea    rdi,[rip+0xc48c]        # 4153c0 <getopt_long_only@@Base+0x8430>
  408f34:	call   402330 <Mat_Help@plt>
  408f39:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408f3e:	lea    rdi,[rip+0xc3bb]        # 415300 <getopt_long_only@@Base+0x8370>
  408f45:	call   402330 <Mat_Help@plt>
  408f4a:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408f4f:	lea    rdx,[rip+0x645a]        # 40f3b0 <getopt_long_only@@Base+0x2420>
  408f56:	mov    rcx,rbp
  408f59:	mov    rax,QWORD PTR [rip+0xc098]        # 414ff8 <getopt_long_only@@Base+0x8068>
  408f60:	mov    esi,0x1
  408f65:	mov    rdi,QWORD PTR [rax]
  408f68:	xor    eax,eax
  408f6a:	call   402360 <__fprintf_chk@plt>
  408f6f:	jmp    408176 <Mat_VarRead@plt+0x5dd6>
  408f74:	mov    DWORD PTR [rsp+0x18],0x8
  408f7c:	jmp    407d2d <Mat_VarRead@plt+0x598d>
  408f81:	lea    rdi,[rip+0xc278]        # 415200 <getopt_long_only@@Base+0x8270>
  408f88:	call   402330 <Mat_Help@plt>
  408f8d:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408f92:	lea    rdi,[rip+0xc787]        # 415720 <getopt_long_only@@Base+0x8790>
  408f99:	call   402330 <Mat_Help@plt>
  408f9e:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408fa3:	lea    rdi,[rip+0xc636]        # 4155e0 <getopt_long_only@@Base+0x8650>
  408faa:	call   402330 <Mat_Help@plt>
  408faf:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408fb4:	lea    rdi,[rip+0xc6c5]        # 415680 <getopt_long_only@@Base+0x86f0>
  408fbb:	call   402330 <Mat_Help@plt>
  408fc0:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408fc5:	lea    rdi,[rip+0xc2f4]        # 4152c0 <getopt_long_only@@Base+0x8330>
  408fcc:	call   402330 <Mat_Help@plt>
  408fd1:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408fd6:	lea    rdi,[rip+0xc463]        # 415440 <getopt_long_only@@Base+0x84b0>
  408fdd:	call   402330 <Mat_Help@plt>
  408fe2:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408fe7:	lea    rdi,[rip+0xc4f2]        # 4154e0 <getopt_long_only@@Base+0x8550>
  408fee:	call   402330 <Mat_Help@plt>
  408ff3:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  408ff8:	lea    rdi,[rip+0xc561]        # 415560 <getopt_long_only@@Base+0x85d0>
  408fff:	call   402330 <Mat_Help@plt>
  409004:	jmp    40814d <Mat_VarRead@plt+0x5dad>
  409009:	mov    rcx,QWORD PTR [r14+0x10]
  40900d:	lea    rdx,[rip+0x63c4]        # 40f3d8 <getopt_long_only@@Base+0x2448>
  409014:	jmp    408f59 <Mat_VarRead@plt+0x6bb9>
  409019:	lea    rsi,[rip+0x5768]        # 40e788 <getopt_long_only@@Base+0x17f8>
  409020:	mov    rdi,rbp
  409023:	call   402210 <strcmp@plt>
  409028:	test   eax,eax
  40902a:	mov    r14d,eax
  40902d:	jne    40918b <Mat_VarRead@plt+0x6deb>
  409033:	cmp    DWORD PTR [rsp+0x1c],0x3
  409038:	lea    eax,[r12+0x1]
  40903d:	mov    DWORD PTR [rsp+0x8],eax
  409041:	jg     409111 <Mat_VarRead@plt+0x6d71>
  409047:	lea    rdi,[rip+0x647a]        # 40f4c8 <getopt_long_only@@Base+0x2538>
  40904e:	xor    eax,eax
  409050:	add    r15d,0x1
  409054:	call   4022a0 <Mat_Critical@plt>
  409059:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  40905e:	lea    eax,[r12+0x1]
  409063:	lea    rbx,[rsp+0x200]
  40906b:	mov    ecx,0x32
  409070:	mov    QWORD PTR [rsp+0x130],0x5
  40907c:	mov    QWORD PTR [rsp+0x138],0x5
  409088:	mov    DWORD PTR [rsp+0x8],eax
  40908c:	mov    rdi,rbx
  40908f:	mov    eax,r14d
  409092:	rep stos DWORD PTR es:[rdi],eax
  409094:	mov    eax,0x1
  409099:	vxorpd xmm0,xmm0,xmm0
  40909d:	vcvtsi2sd xmm0,xmm0,eax
  4090a1:	vmovsd QWORD PTR [rbx+rax*8-0x8],xmm0
  4090a7:	add    rax,0x1
  4090ab:	cmp    rax,0x1a
  4090af:	jne    409099 <Mat_VarRead@plt+0x6cf9>
  4090b1:	vxorpd xmm0,xmm0,xmm0
  4090b5:	mov    edx,DWORD PTR [rip+0xc135]        # 4151f0 <getopt_long_only@@Base+0x8260>
  4090bb:	lea    rdi,[rip+0x52a4]        # 40e366 <getopt_long_only@@Base+0x13d6>
  4090c2:	xor    esi,esi
  4090c4:	vdivsd xmm0,xmm0,xmm0
  4090c8:	vmovsd QWORD PTR [rsp+0x200],xmm0
  4090d1:	vmovsd QWORD PTR [rsp+0x230],xmm0
  4090da:	vmovsd QWORD PTR [rsp+0x260],xmm0
  4090e3:	vmovsd QWORD PTR [rsp+0x290],xmm0
  4090ec:	vmovsd QWORD PTR [rsp+0x2c0],xmm0
  4090f5:	call   402310 <Mat_CreateVer@plt>
  4090fa:	test   rax,rax
  4090fd:	mov    rbp,rax
  409100:	jne    408e6c <Mat_VarRead@plt+0x6acc>
  409106:	mov    r14d,0x1
  40910c:	jmp    408ebc <Mat_VarRead@plt+0x6b1c>
  409111:	movsxd rax,DWORD PTR [rsp+0x8]
  409116:	mov    rbx,QWORD PTR [rsp+0x10]
  40911b:	mov    rdi,r13
  40911e:	add    rax,0x1
  409122:	mov    rbp,QWORD PTR [rbx+rax*8]
  409126:	mov    rbx,QWORD PTR [rbx+rax*8-0x8]
  40912b:	call   407c15 <Mat_VarRead@plt+0x5875>
  409130:	xor    esi,esi
  409132:	mov    rdi,rbx
  409135:	call   402080 <Mat_Open@plt>
  40913a:	test   rax,rax
  40913d:	mov    rbx,rax
  409140:	je     4093cb <Mat_VarRead@plt+0x702b>
  409146:	mov    rsi,rbp
  409149:	mov    rdi,rax
  40914c:	call   4023a0 <Mat_VarRead@plt>
  409151:	test   rax,rax
  409154:	mov    rbp,rax
  409157:	je     4093c0 <Mat_VarRead@plt+0x7020>
  40915d:	mov    rdi,rax
  409160:	mov    esi,0x1
  409165:	call   402260 <Mat_VarPrint@plt>
  40916a:	mov    rdi,rbp
  40916d:	call   402230 <Mat_VarFree@plt>
  409172:	mov    rdi,rbx
  409175:	call   402290 <Mat_Close@plt>
  40917a:	lea    eax,[r12+0x3]
  40917f:	add    r15d,r14d
  409182:	mov    DWORD PTR [rsp+0x8],eax
  409186:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  40918b:	lea    rsi,[rip+0x559c]        # 40e72e <getopt_long_only@@Base+0x179e>
  409192:	mov    rdi,rbp
  409195:	call   402210 <strcmp@plt>
  40919a:	test   eax,eax
  40919c:	mov    r14d,eax
  40919f:	jne    4093d6 <Mat_VarRead@plt+0x7036>
  4091a5:	lea    eax,[r12+0x1]
  4091aa:	lea    r10,[rsp+0x390]
  4091b2:	test   r13,r13
  4091b5:	mov    ecx,0x19
  4091ba:	lea    rbp,[rsp+0x130]
  4091c2:	lea    rbx,[rsp+0x200]
  4091ca:	mov    DWORD PTR [rsp+0x8],eax
  4091ce:	lea    rax,[rip+0x6073]        # 40f248 <getopt_long_only@@Base+0x22b8>
  4091d5:	mov    rdi,r10
  4091d8:	mov    QWORD PTR [rsp+0xa0],0x5
  4091e4:	mov    QWORD PTR [rsp+0xa8],0xa
  4091f0:	cmove  r13,rax
  4091f4:	xor    eax,eax
  4091f6:	rep stos BYTE PTR es:[rdi],al
  4091f8:	xor    eax,eax
  4091fa:	mov    edx,eax
  4091fc:	and    edx,0x1
  4091ff:	mov    DWORD PTR [rbx+rax*4],edx
  409202:	xor    edx,0x1
  409205:	mov    WORD PTR [rbp+rax*2+0x0],dx
  40920a:	add    rax,0x1
  40920e:	cmp    rax,0x32
  409212:	jne    4091fa <Mat_VarRead@plt+0x6e5a>
  409214:	mov    rcx,r10
  409217:	xor    eax,eax
  409219:	mov    rdx,rax
  40921c:	mov    BYTE PTR [rcx+rdx*1],0x1
  409220:	add    rdx,0x1
  409224:	cmp    edx,0x4
  409227:	jle    40921c <Mat_VarRead@plt+0x6e7c>
  409229:	add    rax,0x1
  40922d:	add    rcx,0x5
  409231:	cmp    rax,0x5
  409235:	jne    409219 <Mat_VarRead@plt+0x6e79>
  409237:	mov    edx,DWORD PTR [rip+0xbfb3]        # 4151f0 <getopt_long_only@@Base+0x8260>
  40923d:	xor    esi,esi
  40923f:	mov    rdi,r13
  409242:	mov    QWORD PTR [rsp+0x28],r10
  409247:	call   402310 <Mat_CreateVer@plt>
  40924c:	test   rax,rax
  40924f:	mov    QWORD PTR [rsp+0x20],rax
  409254:	je     409106 <Mat_VarRead@plt+0x6d66>
  40925a:	lea    r12,[rsp+0xa0]
  409262:	sub    rsp,0x8
  409266:	lea    rdi,[rip+0x4e00]        # 40e06d <getopt_long_only@@Base+0x10dd>
  40926d:	push   0x201
  409272:	mov    r9,rbx
  409275:	mov    ecx,0x2
  40927a:	mov    r8,r12
  40927d:	mov    edx,0x6
  409282:	mov    esi,0xd
  409287:	call   4020d0 <Mat_VarCreate@plt>
  40928c:	lea    rdi,[rip+0x4de1]        # 40e074 <getopt_long_only@@Base+0x10e4>
  409293:	mov    r9,rbp
  409296:	mov    r8,r12
  409299:	mov    ecx,0x2
  40929e:	mov    edx,0x4
  4092a3:	mov    esi,0xb
  4092a8:	mov    DWORD PTR [rsp],0x201
  4092af:	mov    QWORD PTR [rsp+0xd0],rax
  4092b7:	call   4020d0 <Mat_VarCreate@plt>
  4092bc:	lea    rdi,[rip+0x4daa]        # 40e06d <getopt_long_only@@Base+0x10dd>
  4092c3:	xor    r9d,r9d
  4092c6:	mov    r8,r12
  4092c9:	mov    ecx,0x2
  4092ce:	mov    edx,0x2
  4092d3:	mov    esi,0x9
  4092d8:	mov    DWORD PTR [rsp],0x201
  4092df:	mov    QWORD PTR [rsp+0xd8],rax
  4092e7:	mov    QWORD PTR [rsp+0xb0],0x0
  4092f3:	mov    QWORD PTR [rsp+0xb8],0x5
  4092ff:	call   4020d0 <Mat_VarCreate@plt>
  409304:	mov    r10,QWORD PTR [rsp+0x38]
  409309:	lea    rdi,[rip+0x4d64]        # 40e074 <getopt_long_only@@Base+0x10e4>
  409310:	mov    r8,r12
  409313:	mov    ecx,0x2
  409318:	mov    edx,0x2
  40931d:	mov    esi,0x9
  409322:	mov    DWORD PTR [rsp],0x201
  409329:	mov    QWORD PTR [rsp+0xe0],rax
  409331:	mov    r9,r10
  409334:	mov    QWORD PTR [rsp+0xb0],0x5
  409340:	mov    QWORD PTR [rsp+0xb8],0x5
  40934c:	call   4020d0 <Mat_VarCreate@plt>
  409351:	lea    r9,[rsp+0xd0]
  409359:	lea    rdi,[rip+0x4d2a]        # 40e08a <getopt_long_only@@Base+0x10fa>
  409360:	mov    edx,0x16
  409365:	mov    esi,0x2
  40936a:	mov    r8,r12
  40936d:	mov    ecx,0x2
  409372:	mov    QWORD PTR [rsp+0xe8],rax
  40937a:	mov    QWORD PTR [rsp+0xf0],0x0
  409386:	mov    QWORD PTR [rsp+0xb0],0x2
  409392:	mov    QWORD PTR [rsp+0xb8],0x1
  40939e:	mov    DWORD PTR [rsp],0x0
  4093a5:	call   4020d0 <Mat_VarCreate@plt>
  4093aa:	mov    edx,DWORD PTR [rip+0xd174]        # 416524 <opterr@@Base+0x10>
  4093b0:	mov    rbx,rax
  4093b3:	mov    rsi,rax
  4093b6:	mov    rbp,QWORD PTR [rsp+0x30]
  4093bb:	jmp    408ea0 <Mat_VarRead@plt+0x6b00>
  4093c0:	mov    r14d,0x1
  4093c6:	jmp    409172 <Mat_VarRead@plt+0x6dd2>
  4093cb:	mov    r14d,0x1
  4093d1:	jmp    40917a <Mat_VarRead@plt+0x6dda>
  4093d6:	lea    rsi,[rip+0x52f7]        # 40e6d4 <getopt_long_only@@Base+0x1744>
  4093dd:	mov    rdi,rbp
  4093e0:	call   402210 <strcmp@plt>
  4093e5:	test   eax,eax
  4093e7:	mov    r14d,eax
  4093ea:	jne    40950e <Mat_VarRead@plt+0x716e>
  4093f0:	lea    eax,[r12+0x1]
  4093f5:	test   r13,r13
  4093f8:	mov    edx,DWORD PTR [rip+0xbdf2]        # 4151f0 <getopt_long_only@@Base+0x8260>
  4093fe:	mov    DWORD PTR [rsp+0x8],eax
  409402:	lea    rax,[rip+0x4dfa]        # 40e203 <getopt_long_only@@Base+0x1273>
  409409:	cmove  r13,rax
  40940d:	xor    esi,esi
  40940f:	mov    rdi,r13
  409412:	call   402310 <Mat_CreateVer@plt>
  409417:	test   rax,rax
  40941a:	mov    r12,rax
  40941d:	je     409106 <Mat_VarRead@plt+0x6d66>
  409423:	lea    rax,[rip+0x4c43]        # 40e06d <getopt_long_only@@Base+0x10dd>
  40942a:	lea    rbp,[rsp+0x130]
  409432:	lea    rbx,[rsp+0x200]
  40943a:	lea    rdi,[rip+0x4c49]        # 40e08a <getopt_long_only@@Base+0x10fa>
  409441:	mov    r8d,0x2
  409447:	mov    esi,0x2
  40944c:	mov    QWORD PTR [rsp+0x130],rax
  409454:	lea    rax,[rip+0x4c19]        # 40e074 <getopt_long_only@@Base+0x10e4>
  40945b:	mov    rcx,rbp
  40945e:	mov    rdx,rbx
  409461:	mov    QWORD PTR [rsp+0x200],0x2
  40946d:	mov    QWORD PTR [rsp+0x208],0x1
  409479:	mov    QWORD PTR [rsp+0x138],rax
  409481:	call   402300 <Mat_VarCreateStruct@plt>
  409486:	mov    QWORD PTR [rsp+0x200],0x4
  409492:	mov    QWORD PTR [rsp+0x208],0x1a
  40949e:	sub    rsp,0x8
  4094a2:	push   0x0
  4094a4:	mov    rdi,QWORD PTR [rsp+0x148]
  4094ac:	lea    r9,[rip+0x5fa5]        # 40f458 <getopt_long_only@@Base+0x24c8>
  4094b3:	mov    r8,rbx
  4094b6:	mov    ecx,0x2
  4094bb:	mov    edx,0x10
  4094c0:	mov    esi,0x4
  4094c5:	mov    rbp,rax
  4094c8:	call   4020d0 <Mat_VarCreate@plt>
  4094cd:	mov    rsi,QWORD PTR [rsp+0x148]
  4094d5:	mov    rcx,rax
  4094d8:	mov    edx,0x1
  4094dd:	mov    rdi,rbp
  4094e0:	call   402380 <Mat_VarSetStructFieldByName@plt>
  4094e5:	mov    edx,DWORD PTR [rip+0xd039]        # 416524 <opterr@@Base+0x10>
  4094eb:	mov    rsi,rbp
  4094ee:	mov    rdi,r12
  4094f1:	call   4020f0 <Mat_VarWrite@plt>
  4094f6:	mov    rdi,rbp
  4094f9:	call   402230 <Mat_VarFree@plt>
  4094fe:	mov    rdi,r12
  409501:	call   402290 <Mat_Close@plt>
  409506:	pop    rdi
  409507:	pop    r8
  409509:	jmp    408ebc <Mat_VarRead@plt+0x6b1c>
  40950e:	lea    rsi,[rip+0x5255]        # 40e76a <getopt_long_only@@Base+0x17da>
  409515:	mov    rdi,rbp
  409518:	call   402210 <strcmp@plt>
  40951d:	test   eax,eax
  40951f:	jne    409550 <Mat_VarRead@plt+0x71b0>
  409521:	lea    eax,[r12+0x1]
  409526:	test   r13,r13
  409529:	mov    edx,DWORD PTR [rsp+0x5c]
  40952d:	mov    edi,DWORD PTR [rsp+0x18]
  409531:	mov    DWORD PTR [rsp+0x8],eax
  409535:	lea    rax,[rip+0x5d34]        # 40f270 <getopt_long_only@@Base+0x22e0>
  40953c:	cmove  r13,rax
  409540:	mov    rsi,r13
  409543:	call   4052ba <Mat_VarRead@plt+0x2f1a>
  409548:	add    r15d,eax
  40954b:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  409550:	lea    rsi,[rip+0x7111]        # 410668 <getopt_long_only@@Base+0x36d8>
  409557:	mov    rdi,rbp
  40955a:	call   402210 <strcmp@plt>
  40955f:	test   eax,eax
  409561:	jne    409592 <Mat_VarRead@plt+0x71f2>
  409563:	lea    eax,[r12+0x1]
  409568:	test   r13,r13
  40956b:	mov    edx,DWORD PTR [rsp+0x5c]
  40956f:	mov    edi,DWORD PTR [rsp+0x18]
  409573:	mov    DWORD PTR [rsp+0x8],eax
  409577:	lea    rax,[rip+0x5d1a]        # 40f298 <getopt_long_only@@Base+0x2308>
  40957e:	cmove  r13,rax
  409582:	mov    rsi,r13
  409585:	call   405793 <Mat_VarRead@plt+0x33f3>
  40958a:	add    r15d,eax
  40958d:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  409592:	lea    rsi,[rip+0x5122]        # 40e6bb <getopt_long_only@@Base+0x172b>
  409599:	mov    rdi,rbp
  40959c:	call   402210 <strcmp@plt>
  4095a1:	test   eax,eax
  4095a3:	jne    4095cc <Mat_VarRead@plt+0x722c>
  4095a5:	lea    eax,[r12+0x1]
  4095aa:	test   r13,r13
  4095ad:	mov    DWORD PTR [rsp+0x8],eax
  4095b1:	lea    rax,[rip+0x4c66]        # 40e21e <getopt_long_only@@Base+0x128e>
  4095b8:	cmove  r13,rax
  4095bc:	mov    rdi,r13
  4095bf:	call   4026c1 <Mat_VarRead@plt+0x321>
  4095c4:	add    r15d,eax
  4095c7:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  4095cc:	lea    rsi,[rip+0x5096]        # 40e669 <getopt_long_only@@Base+0x16d9>
  4095d3:	mov    rdi,rbp
  4095d6:	call   402210 <strcmp@plt>
  4095db:	test   eax,eax
  4095dd:	mov    DWORD PTR [rsp+0x20],eax
  4095e1:	jne    409815 <Mat_VarRead@plt+0x7475>
  4095e7:	lea    eax,[r12+0x1]
  4095ec:	test   r13,r13
  4095ef:	lea    rdi,[rsp+0x200]
  4095f7:	mov    ecx,0x19
  4095fc:	lea    r10,[rsp+0x390]
  409604:	lea    r12,[rsp+0xc0]
  40960c:	mov    DWORD PTR [rsp+0x8],eax
  409610:	lea    rax,[rip+0x5cb1]        # 40f2c8 <getopt_long_only@@Base+0x2338>
  409617:	lea    rbp,[rsp+0x130]
  40961f:	lea    rbx,[rsp+0x200]
  409627:	mov    QWORD PTR [rsp+0xa0],0x5
  409633:	mov    QWORD PTR [rsp+0xa8],0x5
  40963f:	cmove  r13,rax
  409643:	xor    edx,edx
  409645:	mov    rsi,rbp
  409648:	mov    eax,edx
  40964a:	rep stos DWORD PTR es:[rdi],eax
  40964c:	lea    rdi,[rsp+0x130]
  409654:	mov    ecx,0x32
  409659:	rep stos BYTE PTR es:[rdi],al
  40965b:	mov    ecx,0x19
  409660:	mov    rdi,r10
  409663:	rep stos BYTE PTR es:[rdi],al
  409665:	mov    eax,edx
  409667:	mov    ecx,0xa
  40966c:	mov    rdi,r12
  40966f:	rep stos DWORD PTR es:[rdi],eax
  409671:	mov    rcx,rbx
  409674:	xor    eax,eax
  409676:	mov    edi,eax
  409678:	imul   rdx,rax,0x6
  40967c:	mov    BYTE PTR [r10+rdx*1],0x1
  409681:	xor    edx,edx
  409683:	mov    DWORD PTR [rcx+rdx*4],0x1
  40968a:	add    rdx,0x1
  40968e:	cmp    edi,edx
  409690:	jge    409683 <Mat_VarRead@plt+0x72e3>
  409692:	mov    rdx,rax
  409695:	mov    WORD PTR [rsi+rdx*2],0x1
  40969b:	add    rdx,0x1
  40969f:	cmp    edx,0x4
  4096a2:	jle    409695 <Mat_VarRead@plt+0x72f5>
  4096a4:	add    rax,0x1
  4096a8:	add    rsi,0xa
  4096ac:	add    rcx,0x14
  4096b0:	cmp    rax,0x5
  4096b4:	jne    409676 <Mat_VarRead@plt+0x72d6>
  4096b6:	mov    edx,DWORD PTR [rip+0xbb34]        # 4151f0 <getopt_long_only@@Base+0x8260>
  4096bc:	xor    esi,esi
  4096be:	mov    rdi,r13
  4096c1:	mov    QWORD PTR [rsp+0x30],r10
  4096c6:	call   402310 <Mat_CreateVer@plt>
  4096cb:	test   rax,rax
  4096ce:	mov    QWORD PTR [rsp+0x28],rax
  4096d3:	je     409a41 <Mat_VarRead@plt+0x76a1>
  4096d9:	lea    r14,[rsp+0xa0]
  4096e1:	sub    rsp,0x8
  4096e5:	mov    r9,rbx
  4096e8:	push   0x200
  4096ed:	mov    ecx,0x2
  4096f2:	mov    edx,0x6
  4096f7:	mov    r8,r14
  4096fa:	mov    esi,0xd
  4096ff:	xor    edi,edi
  409701:	call   4020d0 <Mat_VarCreate@plt>
  409706:	mov    r8,r14
  409709:	mov    r9,rbp
  40970c:	mov    ecx,0x2
  409711:	mov    edx,0x4
  409716:	mov    esi,0xb
  40971b:	xor    edi,edi
  40971d:	mov    DWORD PTR [rsp],0x200
  409724:	mov    QWORD PTR [rsp+0xd0],rax
  40972c:	call   4020d0 <Mat_VarCreate@plt>
  409731:	mov    r10,QWORD PTR [rsp+0x40]
  409736:	mov    r8,r14
  409739:	mov    ecx,0x2
  40973e:	mov    edx,0x2
  409743:	mov    esi,0x9
  409748:	xor    edi,edi
  40974a:	mov    DWORD PTR [rsp],0x200
  409751:	mov    QWORD PTR [rsp+0xd8],rax
  409759:	mov    r9,r10
  40975c:	call   4020d0 <Mat_VarCreate@plt>
  409761:	mov    r8,r14
  409764:	xor    r9d,r9d
  409767:	mov    ecx,0x2
  40976c:	mov    edx,0x2
  409771:	mov    esi,0x9
  409776:	xor    edi,edi
  409778:	mov    DWORD PTR [rsp],0x200
  40977f:	mov    QWORD PTR [rsp+0xe0],rax
  409787:	mov    QWORD PTR [rsp+0xb0],0x0
  409793:	call   4020d0 <Mat_VarCreate@plt>
  409798:	lea    rdi,[rip+0x48eb]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40979f:	mov    r8,r14
  4097a2:	mov    ecx,0x2
  4097a7:	mov    r9,r12
  4097aa:	mov    edx,0x15
  4097af:	mov    esi,0x1
  4097b4:	mov    QWORD PTR [rsp+0xe8],rax
  4097bc:	mov    QWORD PTR [rsp+0xb0],0x4
  4097c8:	mov    QWORD PTR [rsp+0xb8],0x1
  4097d4:	mov    DWORD PTR [rsp],0x0
  4097db:	call   4020d0 <Mat_VarCreate@plt>
  4097e0:	mov    r14,QWORD PTR [rsp+0x38]
  4097e5:	mov    edx,DWORD PTR [rip+0xcd39]        # 416524 <opterr@@Base+0x10>
  4097eb:	mov    rsi,rax
  4097ee:	mov    rbx,rax
  4097f1:	mov    rdi,r14
  4097f4:	call   4020f0 <Mat_VarWrite@plt>
  4097f9:	mov    rdi,rbx
  4097fc:	call   402230 <Mat_VarFree@plt>
  409801:	mov    rdi,r14
  409804:	call   402290 <Mat_Close@plt>
  409809:	pop    rcx
  40980a:	pop    rsi
  40980b:	add    r15d,DWORD PTR [rsp+0x20]
  409810:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  409815:	lea    rsi,[rip+0x4e83]        # 40e69f <getopt_long_only@@Base+0x170f>
  40981c:	mov    rdi,rbp
  40981f:	call   402210 <strcmp@plt>
  409824:	test   eax,eax
  409826:	jne    409853 <Mat_VarRead@plt+0x74b3>
  409828:	lea    eax,[r12+0x1]
  40982d:	test   r13,r13
  409830:	mov    edi,DWORD PTR [rsp+0x18]
  409834:	mov    DWORD PTR [rsp+0x8],eax
  409838:	lea    rax,[rip+0x5aa9]        # 40f2e8 <getopt_long_only@@Base+0x2358>
  40983f:	cmove  r13,rax
  409843:	mov    rsi,r13
  409846:	call   402a32 <Mat_VarRead@plt+0x692>
  40984b:	add    r15d,eax
  40984e:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  409853:	lea    rsi,[rip+0x4a88]        # 40e2e2 <getopt_long_only@@Base+0x1352>
  40985a:	mov    rdi,rbp
  40985d:	call   402210 <strcmp@plt>
  409862:	test   eax,eax
  409864:	jne    409891 <Mat_VarRead@plt+0x74f1>
  409866:	lea    eax,[r12+0x1]
  40986b:	test   r13,r13
  40986e:	mov    edi,DWORD PTR [rsp+0x18]
  409872:	mov    DWORD PTR [rsp+0x8],eax
  409876:	lea    rax,[rip+0x5a8b]        # 40f308 <getopt_long_only@@Base+0x2378>
  40987d:	cmove  r13,rax
  409881:	mov    rsi,r13
  409884:	call   402da6 <Mat_VarRead@plt+0xa06>
  409889:	add    r15d,eax
  40988c:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  409891:	lea    rsi,[rip+0x4da4]        # 40e63c <getopt_long_only@@Base+0x16ac>
  409898:	mov    rdi,rbp
  40989b:	call   402210 <strcmp@plt>
  4098a0:	test   eax,eax
  4098a2:	mov    r14d,eax
  4098a5:	jne    409a4e <Mat_VarRead@plt+0x76ae>
  4098ab:	lea    eax,[r12+0x1]
  4098b0:	test   r13,r13
  4098b3:	mov    edx,DWORD PTR [rip+0xb937]        # 4151f0 <getopt_long_only@@Base+0x8260>
  4098b9:	mov    QWORD PTR [rsp+0x130],0x0
  4098c5:	mov    QWORD PTR [rsp+0x138],0x0
  4098d1:	mov    DWORD PTR [rsp+0x8],eax
  4098d5:	lea    rax,[rip+0x495e]        # 40e23a <getopt_long_only@@Base+0x12aa>
  4098dc:	cmove  r13,rax
  4098e0:	xor    esi,esi
  4098e2:	mov    rdi,r13
  4098e5:	call   402310 <Mat_CreateVer@plt>
  4098ea:	test   rax,rax
  4098ed:	mov    rbx,rax
  4098f0:	je     409106 <Mat_VarRead@plt+0x6d66>
  4098f6:	mov    QWORD PTR [rsp+0x200],0x0
  409902:	mov    QWORD PTR [rsp+0x130],0x0
  40990e:	lea    rbp,[rsp+0x130]
  409916:	mov    QWORD PTR [rsp+0x138],0x1
  409922:	sub    rsp,0x8
  409926:	lea    rdi,[rip+0x473b]        # 40e068 <getopt_long_only@@Base+0x10d8>
  40992d:	push   0x0
  40992f:	mov    r8,rbp
  409932:	xor    r9d,r9d
  409935:	mov    ecx,0x2
  40993a:	mov    edx,0x15
  40993f:	mov    esi,0x1
  409944:	call   4020d0 <Mat_VarCreate@plt>
  409949:	mov    edx,DWORD PTR [rip+0xcbd5]        # 416524 <opterr@@Base+0x10>
  40994f:	mov    rsi,rax
  409952:	mov    r12,rax
  409955:	mov    rdi,rbx
  409958:	call   4020f0 <Mat_VarWrite@plt>
  40995d:	mov    rdi,r12
  409960:	call   402230 <Mat_VarFree@plt>
  409965:	lea    rdi,[rip+0x4701]        # 40e06d <getopt_long_only@@Base+0x10dd>
  40996c:	mov    r8,rbp
  40996f:	xor    r9d,r9d
  409972:	mov    ecx,0x2
  409977:	mov    edx,0x9
  40997c:	mov    esi,0x6
  409981:	mov    DWORD PTR [rsp],0x0
  409988:	call   4020d0 <Mat_VarCreate@plt>
  40998d:	lea    rdi,[rip+0x46e0]        # 40e074 <getopt_long_only@@Base+0x10e4>
  409994:	mov    r8,rbp
  409997:	xor    r9d,r9d
  40999a:	mov    ecx,0x2
  40999f:	mov    edx,0x9
  4099a4:	mov    esi,0x6
  4099a9:	mov    DWORD PTR [rsp],0x0
  4099b0:	mov    QWORD PTR [rsp+0x210],rax
  4099b8:	call   4020d0 <Mat_VarCreate@plt>
  4099bd:	lea    r9,[rsp+0x210]
  4099c5:	lea    rdi,[rip+0x46af]        # 40e07b <getopt_long_only@@Base+0x10eb>
  4099cc:	mov    r8,rbp
  4099cf:	mov    ecx,0x2
  4099d4:	mov    edx,0x15
  4099d9:	mov    esi,0x1
  4099de:	mov    QWORD PTR [rsp+0x218],rax
  4099e6:	mov    QWORD PTR [rsp+0x220],0x0
  4099f2:	mov    QWORD PTR [rsp+0x140],0x2
  4099fe:	mov    QWORD PTR [rsp+0x148],0x1
  409a0a:	mov    DWORD PTR [rsp],0x0
  409a11:	call   4020d0 <Mat_VarCreate@plt>
  409a16:	mov    edx,DWORD PTR [rip+0xcb08]        # 416524 <opterr@@Base+0x10>
  409a1c:	mov    rsi,rax
  409a1f:	mov    rbp,rax
  409a22:	mov    rdi,rbx
  409a25:	call   4020f0 <Mat_VarWrite@plt>
  409a2a:	mov    rdi,rbp
  409a2d:	call   402230 <Mat_VarFree@plt>
  409a32:	mov    rdi,rbx
  409a35:	call   402290 <Mat_Close@plt>
  409a3a:	pop    rax
  409a3b:	pop    rdx
  409a3c:	jmp    408ebc <Mat_VarRead@plt+0x6b1c>
  409a41:	mov    DWORD PTR [rsp+0x20],0x1
  409a49:	jmp    40980b <Mat_VarRead@plt+0x746b>
  409a4e:	lea    rsi,[rip+0x4b93]        # 40e5e8 <getopt_long_only@@Base+0x1658>
  409a55:	mov    rdi,rbp
  409a58:	call   402210 <strcmp@plt>
  409a5d:	test   eax,eax
  409a5f:	mov    DWORD PTR [rsp+0x20],eax
  409a63:	jne    4083cd <Mat_VarRead@plt+0x602d>
  409a69:	lea    eax,[r12+0x1]
  409a6e:	test   r13,r13
  409a71:	mov    edx,DWORD PTR [rip+0xb779]        # 4151f0 <getopt_long_only@@Base+0x8260>
  409a77:	mov    QWORD PTR [rsp+0xc0],0x1
  409a83:	mov    QWORD PTR [rsp+0xc8],0x3
  409a8f:	mov    DWORD PTR [rsp+0x8],eax
  409a93:	lea    rax,[rip+0x5896]        # 40f330 <getopt_long_only@@Base+0x23a0>
  409a9a:	cmove  r13,rax
  409a9e:	xor    esi,esi
  409aa0:	mov    rdi,r13
  409aa3:	call   402310 <Mat_CreateVer@plt>
  409aa8:	test   rax,rax
  409aab:	mov    QWORD PTR [rsp+0x30],rax
  409ab0:	je     409a41 <Mat_VarRead@plt+0x76a1>
  409ab2:	lea    rax,[rip+0x45b4]        # 40e06d <getopt_long_only@@Base+0x10dd>
  409ab9:	vmovsd xmm1,QWORD PTR [rip+0x8f17]        # 4129d8 <getopt_long_only@@Base+0x5a48>
  409ac1:	vmovsd xmm2,QWORD PTR [rip+0x8f17]        # 4129e0 <getopt_long_only@@Base+0x5a50>
  409ac9:	lea    r12,[rsp+0xc0]
  409ad1:	mov    QWORD PTR [rsp+0x130],rax
  409ad9:	lea    rax,[rip+0x4594]        # 40e074 <getopt_long_only@@Base+0x10e4>
  409ae0:	vmovsd QWORD PTR [rsp+0x200],xmm1
  409ae9:	vmovsd xmm3,QWORD PTR [rip+0x8ef7]        # 4129e8 <getopt_long_only@@Base+0x5a58>
  409af1:	sub    rsp,0x8
  409af5:	mov    QWORD PTR [rsp+0x140],rax
  409afd:	lea    rax,[rip+0x4874]        # 40e378 <getopt_long_only@@Base+0x13e8>
  409b04:	vmovsd QWORD PTR [rsp+0x210],xmm2
  409b0d:	vmovsd xmm4,QWORD PTR [rip+0x8edb]        # 4129f0 <getopt_long_only@@Base+0x5a60>
  409b15:	lea    rdi,[rip+0x454c]        # 40e068 <getopt_long_only@@Base+0x10d8>
  409b1c:	vmovsd QWORD PTR [rsp+0x218],xmm3
  409b25:	mov    QWORD PTR [rsp+0x148],rax
  409b2d:	xor    r9d,r9d
  409b30:	vmovsd QWORD PTR [rsp+0x220],xmm4
  409b39:	push   0x0
  409b3b:	mov    r8,r12
  409b3e:	mov    ecx,0x2
  409b43:	mov    edx,0x15
  409b48:	mov    esi,0x1
  409b4d:	call   4020d0 <Mat_VarCreate@plt>
  409b52:	mov    QWORD PTR [rsp+0x38],rax
  409b57:	pop    rbp
  409b58:	pop    r14
  409b5a:	xor    r14d,r14d
  409b5d:	lea    rbp,[rsp+0x130]
  409b65:	lea    rbx,[rsp+0x200]
  409b6d:	mov    DWORD PTR [rsp+0x38],r15d
  409b72:	mov    r15,r13
  409b75:	mov    r13,rbp
  409b78:	mov    rbp,rbx
  409b7b:	lea    rdi,[rip+0x4930]        # 40e4b2 <getopt_long_only@@Base+0x1522>
  409b82:	mov    r8d,0x3
  409b88:	mov    rcx,r13
  409b8b:	mov    rdx,r12
  409b8e:	mov    esi,0x2
  409b93:	mov    QWORD PTR [rsp+0xc0],0x1
  409b9f:	mov    QWORD PTR [rsp+0xc8],0x1
  409bab:	call   402300 <Mat_VarCreateStruct@plt>
  409bb0:	mov    QWORD PTR [rsp+0xc0],0x2
  409bbc:	mov    QWORD PTR [rsp+0xc8],0x2
  409bc8:	sub    rsp,0x8
  409bcc:	push   0x0
  409bce:	lea    rdi,[rip+0x44b5]        # 40e08a <getopt_long_only@@Base+0x10fa>
  409bd5:	mov    r9,rbp
  409bd8:	mov    r8,r12
  409bdb:	mov    ecx,0x2
  409be0:	mov    edx,0x9
  409be5:	mov    esi,0x6
  409bea:	mov    rbx,rax
  409bed:	call   4020d0 <Mat_VarCreate@plt>
  409bf2:	lea    rsi,[rip+0x4474]        # 40e06d <getopt_long_only@@Base+0x10dd>
  409bf9:	xor    edx,edx
  409bfb:	mov    rdi,rbx
  409bfe:	mov    rcx,rax
  409c01:	call   402380 <Mat_VarSetStructFieldByName@plt>
  409c06:	mov    rdi,QWORD PTR [rsp+0x38]
  409c0b:	mov    rdx,rbx
  409c0e:	mov    esi,r14d
  409c11:	add    r14d,0x1
  409c15:	call   4021a0 <Mat_VarSetCell@plt>
  409c1a:	cmp    r14d,0x3
  409c1e:	pop    r11
  409c20:	pop    rbx
  409c21:	jne    409b7b <Mat_VarRead@plt+0x77db>
  409c27:	mov    r14,QWORD PTR [rsp+0x28]
  409c2c:	mov    rbx,QWORD PTR [rsp+0x30]
  409c31:	mov    r13,r15
  409c34:	mov    edx,DWORD PTR [rip+0xc8ea]        # 416524 <opterr@@Base+0x10>
  409c3a:	mov    r15d,DWORD PTR [rsp+0x38]
  409c3f:	mov    rsi,r14
  409c42:	mov    rdi,rbx
  409c45:	call   4020f0 <Mat_VarWrite@plt>
  409c4a:	mov    rdi,r14
  409c4d:	call   402230 <Mat_VarFree@plt>
  409c52:	mov    rdi,rbx
  409c55:	call   402290 <Mat_Close@plt>
  409c5a:	jmp    40980b <Mat_VarRead@plt+0x746b>
  409c5f:	mov    rdi,r13
  409c62:	call   407c15 <Mat_VarRead@plt+0x5875>
  409c67:	mov    rax,QWORD PTR [rsp+0x10]
  409c6c:	xor    esi,esi
  409c6e:	mov    DWORD PTR [rsp+0x68],0x1
  409c76:	mov    rdi,QWORD PTR [rax+rbx*1+0x8]
  409c7b:	mov    r14,QWORD PTR [rax+rbx*1+0x18]
  409c80:	mov    rbp,QWORD PTR [rax+rbx*1+0x10]
  409c85:	call   402080 <Mat_Open@plt>
  409c8a:	test   rax,rax
  409c8d:	mov    QWORD PTR [rsp+0x8],rax
  409c92:	je     409d27 <Mat_VarRead@plt+0x7987>
  409c98:	mov    rsi,rbp
  409c9b:	mov    rdi,rax
  409c9e:	call   4023a0 <Mat_VarRead@plt>
  409ca3:	test   rax,rax
  409ca6:	mov    rbp,rax
  409ca9:	je     409d20 <Mat_VarRead@plt+0x7980>
  409cab:	movzx  eax,BYTE PTR [r14]
  409caf:	sub    eax,0x30
  409cb2:	cmp    al,0x9
  409cb4:	ja     409d14 <Mat_VarRead@plt+0x7974>
  409cb6:	mov    edx,0xa
  409cbb:	xor    esi,esi
  409cbd:	mov    rdi,r14
  409cc0:	call   402220 <strtol@plt>
  409cc5:	lea    rsi,[rsp+0x68]
  409cca:	mov    DWORD PTR [rsp+0x68],eax
  409cce:	xor    ecx,ecx
  409cd0:	mov    edx,0x2
  409cd5:	mov    rdi,rbp
  409cd8:	xor    ebx,ebx
  409cda:	call   402200 <Mat_VarGetStructField@plt>
  409cdf:	test   rax,rax
  409ce2:	sete   bl
  409ce5:	je     409cf1 <Mat_VarRead@plt+0x7951>
  409ce7:	xor    esi,esi
  409ce9:	mov    rdi,rax
  409cec:	call   402260 <Mat_VarPrint@plt>
  409cf1:	mov    rdi,rbp
  409cf4:	call   402230 <Mat_VarFree@plt>
  409cf9:	mov    rdi,QWORD PTR [rsp+0x8]
  409cfe:	call   402290 <Mat_Close@plt>
  409d03:	lea    eax,[r12+0x4]
  409d08:	add    r15d,ebx
  409d0b:	mov    DWORD PTR [rsp+0x8],eax
  409d0f:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  409d14:	xor    ecx,ecx
  409d16:	mov    edx,0x1
  409d1b:	mov    rsi,r14
  409d1e:	jmp    409cd5 <Mat_VarRead@plt+0x7935>
  409d20:	mov    ebx,0x1
  409d25:	jmp    409cf9 <Mat_VarRead@plt+0x7959>
  409d27:	mov    ebx,0x1
  409d2c:	jmp    409d03 <Mat_VarRead@plt+0x7963>
  409d2e:	lea    rsi,[rip+0x4889]        # 40e5be <getopt_long_only@@Base+0x162e>
  409d35:	mov    rdi,rbp
  409d38:	call   402210 <strcmp@plt>
  409d3d:	test   eax,eax
  409d3f:	je     409dec <Mat_VarRead@plt+0x7a4c>
  409d45:	lea    rsi,[rip+0x4863]        # 40e5af <getopt_long_only@@Base+0x161f>
  409d4c:	mov    rdi,rbp
  409d4f:	call   402210 <strcmp@plt>
  409d54:	test   eax,eax
  409d56:	jne    409daa <Mat_VarRead@plt+0x7a0a>
  409d58:	lea    rax,[rip+0x44f5]        # 40e254 <getopt_long_only@@Base+0x12c4>
  409d5f:	test   r13,r13
  409d62:	mov    edx,DWORD PTR [rsp+0x18]
  409d66:	cmove  r13,rax
  409d6a:	mov    rax,QWORD PTR [rsp+0x10]
  409d6f:	mov    rsi,QWORD PTR [rax+rbx*1+0x10]
  409d74:	mov    rdi,QWORD PTR [rax+rbx*1+0x8]
  409d79:	call   406862 <Mat_VarRead@plt+0x44c2>
  409d7e:	lea    eax,[r12+0x3]
  409d83:	mov    DWORD PTR [rsp+0x8],eax
  409d87:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  409d8c:	lea    eax,[r12+0x1]
  409d91:	mov    rdi,r13
  409d94:	mov    DWORD PTR [rsp+0x8],eax
  409d98:	call   407c15 <Mat_VarRead@plt+0x5875>
  409d9d:	call   4066a6 <Mat_VarRead@plt+0x4306>
  409da2:	add    r15d,eax
  409da5:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  409daa:	lea    rsi,[rip+0x4a99]        # 40e84a <getopt_long_only@@Base+0x18ba>
  409db1:	mov    rdi,rbp
  409db4:	call   402210 <strcmp@plt>
  409db9:	test   eax,eax
  409dbb:	jne    409e4b <Mat_VarRead@plt+0x7aab>
  409dc1:	lea    eax,[r12+0x1]
  409dc6:	test   r13,r13
  409dc9:	mov    edi,DWORD PTR [rsp+0x18]
  409dcd:	mov    DWORD PTR [rsp+0x8],eax
  409dd1:	lea    rax,[rip+0x4484]        # 40e25c <getopt_long_only@@Base+0x12cc>
  409dd8:	cmove  r13,rax
  409ddc:	mov    rsi,r13
  409ddf:	call   40353f <Mat_VarRead@plt+0x119f>
  409de4:	add    r15d,eax
  409de7:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  409dec:	mov    r14,QWORD PTR [rsp+0x10]
  409df1:	xor    esi,esi
  409df3:	mov    rdi,QWORD PTR [r14+rbx*1+0x8]
  409df8:	call   402080 <Mat_Open@plt>
  409dfd:	mov    rbp,rax
  409e00:	lea    eax,[r12+0x3]
  409e05:	test   rbp,rbp
  409e08:	mov    DWORD PTR [rsp+0x8],eax
  409e0c:	je     409e42 <Mat_VarRead@plt+0x7aa2>
  409e0e:	mov    rsi,QWORD PTR [r14+rbx*1+0x10]
  409e13:	mov    rdi,rbp
  409e16:	call   402180 <Mat_VarReadInfo@plt>
  409e1b:	test   rax,rax
  409e1e:	mov    rbx,rax
  409e21:	je     409e35 <Mat_VarRead@plt+0x7a95>
  409e23:	mov    rdi,rax
  409e26:	xor    esi,esi
  409e28:	call   402260 <Mat_VarPrint@plt>
  409e2d:	mov    rdi,rbx
  409e30:	call   402230 <Mat_VarFree@plt>
  409e35:	mov    rdi,rbp
  409e38:	call   402290 <Mat_Close@plt>
  409e3d:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  409e42:	add    r15d,0x1
  409e46:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  409e4b:	lea    rsi,[rip+0x49dd]        # 40e82f <getopt_long_only@@Base+0x189f>
  409e52:	mov    rdi,rbp
  409e55:	call   402210 <strcmp@plt>
  409e5a:	test   eax,eax
  409e5c:	jne    40a842 <Mat_VarRead@plt+0x84a2>
  409e62:	lea    eax,[r12+0x1]
  409e67:	test   r13,r13
  409e6a:	mov    edi,DWORD PTR [rsp+0x18]
  409e6e:	mov    DWORD PTR [rsp+0x8],eax
  409e72:	lea    rax,[rip+0x43f9]        # 40e272 <getopt_long_only@@Base+0x12e2>
  409e79:	cmove  r13,rax
  409e7d:	mov    rsi,r13
  409e80:	call   404009 <Mat_VarRead@plt+0x1c69>
  409e85:	add    r15d,eax
  409e88:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  409e8d:	lea    eax,[r12+0x1]
  409e92:	mov    rdi,r13
  409e95:	lea    r14,[rsp+0xa0]
  409e9d:	xor    ebp,ebp
  409e9f:	mov    DWORD PTR [rsp+0x8],eax
  409ea3:	call   407c15 <Mat_VarRead@plt+0x5875>
  409ea8:	vmovsd xmm4,QWORD PTR [rip+0x8ae0]        # 412990 <getopt_long_only@@Base+0x5a00>
  409eb0:	mov    QWORD PTR [rsp+0xc0],0x0
  409ebc:	vmovsd xmm5,QWORD PTR [rip+0x8ad4]        # 412998 <getopt_long_only@@Base+0x5a08>
  409ec4:	mov    QWORD PTR [rsp+0xa0],0x3
  409ed0:	vmovsd xmm6,QWORD PTR [rip+0x8ac8]        # 4129a0 <getopt_long_only@@Base+0x5a10>
  409ed8:	mov    QWORD PTR [rsp+0xa8],0x4
  409ee4:	vmovsd xmm7,QWORD PTR [rip+0x8abc]        # 4129a8 <getopt_long_only@@Base+0x5a18>
  409eec:	sub    rsp,0x8
  409ef0:	vmovsd xmm1,QWORD PTR [rip+0x8ab8]        # 4129b0 <getopt_long_only@@Base+0x5a20>
  409ef8:	lea    rdi,[rip+0x418b]        # 40e08a <getopt_long_only@@Base+0x10fa>
  409eff:	vmovsd xmm2,QWORD PTR [rip+0x8ab1]        # 4129b8 <getopt_long_only@@Base+0x5a28>
  409f07:	mov    r8,r14
  409f0a:	vmovsd xmm3,QWORD PTR [rip+0x8aae]        # 4129c0 <getopt_long_only@@Base+0x5a30>
  409f12:	mov    ecx,0x2
  409f17:	vmovsd QWORD PTR [rsp+0xd0],xmm4
  409f20:	mov    esi,0x1
  409f25:	xor    r9d,r9d
  409f28:	vmovsd QWORD PTR [rsp+0xd8],xmm5
  409f31:	mov    edx,0x15
  409f36:	vmovsd QWORD PTR [rsp+0xe0],xmm6
  409f3f:	vmovsd QWORD PTR [rsp+0x138],xmm7
  409f48:	vmovsd QWORD PTR [rsp+0x140],xmm1
  409f51:	vmovsd QWORD PTR [rsp+0x148],xmm2
  409f5a:	vmovsd QWORD PTR [rsp+0x150],xmm3
  409f63:	push   0x0
  409f65:	call   4020d0 <Mat_VarCreate@plt>
  409f6a:	lea    r12,[rsp+0x140]
  409f72:	lea    r10,[rsp+0xd0]
  409f7a:	lea    r11,[rsp+0x210]
  409f82:	mov    QWORD PTR [rsp+0xb0],0x1
  409f8e:	mov    QWORD PTR [rsp+0xb8],0x1
  409f9a:	pop    rcx
  409f9b:	pop    rsi
  409f9c:	mov    rbx,r11
  409f9f:	mov    QWORD PTR [rsp+0x20],r13
  409fa4:	mov    DWORD PTR [rsp+0x28],r15d
  409fa9:	mov    r13,r10
  409fac:	mov    r15,r14
  409faf:	mov    r14,rax
  409fb2:	sub    rsp,0x8
  409fb6:	mov    r9,r13
  409fb9:	mov    r8,r15
  409fbc:	push   0x1
  409fbe:	mov    ecx,0x2
  409fc3:	xor    edi,edi
  409fc5:	mov    edx,0x9
  409fca:	mov    esi,0x6
  409fcf:	call   4020d0 <Mat_VarCreate@plt>
  409fd4:	mov    esi,ebp
  409fd6:	mov    rdx,rax
  409fd9:	mov    rdi,r14
  409fdc:	call   4021a0 <Mat_VarSetCell@plt>
  409fe1:	mov    r9,r12
  409fe4:	mov    r8,r15
  409fe7:	mov    ecx,0x2
  409fec:	xor    edi,edi
  409fee:	mov    edx,0x9
  409ff3:	mov    esi,0x6
  409ff8:	mov    DWORD PTR [rsp],0x1
  409fff:	call   4020d0 <Mat_VarCreate@plt>
  40a004:	lea    esi,[rbp+0x1]
  40a007:	mov    rdx,rax
  40a00a:	mov    rdi,r14
  40a00d:	call   4021a0 <Mat_VarSetCell@plt>
  40a012:	mov    QWORD PTR [rbx],r13
  40a015:	mov    QWORD PTR [rbx+0x8],r12
  40a019:	mov    r9,rbx
  40a01c:	xor    edi,edi
  40a01e:	mov    r8,r15
  40a021:	mov    ecx,0x2
  40a026:	mov    edx,0x9
  40a02b:	mov    esi,0x6
  40a030:	mov    DWORD PTR [rsp],0x801
  40a037:	call   4020d0 <Mat_VarCreate@plt>
  40a03c:	lea    esi,[rbp+0x2]
  40a03f:	mov    rdx,rax
  40a042:	mov    rdi,r14
  40a045:	add    ebp,0x3
  40a048:	add    r13,0x8
  40a04c:	add    r12,0x8
  40a050:	call   4021a0 <Mat_VarSetCell@plt>
  40a055:	add    rbx,0x10
  40a059:	cmp    ebp,0xc
  40a05c:	pop    rax
  40a05d:	pop    rdx
  40a05e:	jne    409fb2 <Mat_VarRead@plt+0x7c12>
  40a064:	xor    esi,esi
  40a066:	mov    ecx,0x4
  40a06b:	mov    edx,0x3
  40a070:	mov    rdi,r14
  40a073:	mov    r13,QWORD PTR [rsp+0x20]
  40a078:	mov    r15d,DWORD PTR [rsp+0x28]
  40a07d:	call   402320 <Mat_VarGetCellsLinear@plt>
  40a082:	test   rax,rax
  40a085:	mov    rbx,r14
  40a088:	mov    r12,rax
  40a08b:	je     40a0af <Mat_VarRead@plt+0x7d0f>
  40a08d:	xor    ebp,ebp
  40a08f:	mov    rdi,QWORD PTR [r12+rbp*8]
  40a093:	mov    esi,0x1
  40a098:	add    rbp,0x1
  40a09c:	call   402260 <Mat_VarPrint@plt>
  40a0a1:	cmp    rbp,0x4
  40a0a5:	jne    40a08f <Mat_VarRead@plt+0x7cef>
  40a0a7:	mov    rdi,r12
  40a0aa:	call   402050 <free@plt>
  40a0af:	mov    ecx,0x4
  40a0b4:	mov    edx,0x3
  40a0b9:	mov    esi,0x1
  40a0be:	mov    rdi,rbx
  40a0c1:	call   402320 <Mat_VarGetCellsLinear@plt>
  40a0c6:	test   rax,rax
  40a0c9:	mov    r12,rax
  40a0cc:	je     40a0f0 <Mat_VarRead@plt+0x7d50>
  40a0ce:	xor    ebp,ebp
  40a0d0:	mov    rdi,QWORD PTR [r12+rbp*8]
  40a0d4:	mov    esi,0x1
  40a0d9:	add    rbp,0x1
  40a0dd:	call   402260 <Mat_VarPrint@plt>
  40a0e2:	cmp    rbp,0x4
  40a0e6:	jne    40a0d0 <Mat_VarRead@plt+0x7d30>
  40a0e8:	mov    rdi,r12
  40a0eb:	call   402050 <free@plt>
  40a0f0:	mov    ecx,0x4
  40a0f5:	mov    edx,0x3
  40a0fa:	mov    esi,0x2
  40a0ff:	mov    rdi,rbx
  40a102:	call   402320 <Mat_VarGetCellsLinear@plt>
  40a107:	test   rax,rax
  40a10a:	mov    r12,rax
  40a10d:	je     40a131 <Mat_VarRead@plt+0x7d91>
  40a10f:	xor    ebp,ebp
  40a111:	mov    rdi,QWORD PTR [r12+rbp*8]
  40a115:	mov    esi,0x1
  40a11a:	add    rbp,0x1
  40a11e:	call   402260 <Mat_VarPrint@plt>
  40a123:	cmp    rbp,0x4
  40a127:	jne    40a111 <Mat_VarRead@plt+0x7d71>
  40a129:	mov    rdi,r12
  40a12c:	call   402050 <free@plt>
  40a131:	mov    ecx,0x6
  40a136:	mov    edx,0x1
  40a13b:	mov    esi,0x3
  40a140:	mov    rdi,rbx
  40a143:	call   402320 <Mat_VarGetCellsLinear@plt>
  40a148:	test   rax,rax
  40a14b:	mov    r12,rax
  40a14e:	je     40a172 <Mat_VarRead@plt+0x7dd2>
  40a150:	xor    ebp,ebp
  40a152:	mov    rdi,QWORD PTR [r12+rbp*8]
  40a156:	mov    esi,0x1
  40a15b:	add    rbp,0x1
  40a15f:	call   402260 <Mat_VarPrint@plt>
  40a164:	cmp    rbp,0x6
  40a168:	jne    40a152 <Mat_VarRead@plt+0x7db2>
  40a16a:	mov    rdi,r12
  40a16d:	call   402050 <free@plt>
  40a172:	mov    rdi,rbx
  40a175:	call   402230 <Mat_VarFree@plt>
  40a17a:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  40a17f:	lea    eax,[r12+0x1]
  40a184:	mov    rdi,r13
  40a187:	lea    rbp,[rsp+0x90]
  40a18f:	mov    DWORD PTR [rsp+0x8],eax
  40a193:	call   407c15 <Mat_VarRead@plt+0x5875>
  40a198:	vmovsd xmm7,QWORD PTR [rip+0x87f0]        # 412990 <getopt_long_only@@Base+0x5a00>
  40a1a0:	lea    rdi,[rip+0x3ee3]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40a1a7:	vmovsd xmm1,QWORD PTR [rip+0x87e9]        # 412998 <getopt_long_only@@Base+0x5a08>
  40a1af:	mov    rdx,rbp
  40a1b2:	vmovsd QWORD PTR [rsp+0xa8],xmm7
  40a1bb:	xor    r8d,r8d
  40a1be:	xor    ecx,ecx
  40a1c0:	vmovsd QWORD PTR [rsp+0x130],xmm1
  40a1c9:	mov    esi,0x2
  40a1ce:	mov    QWORD PTR [rsp+0xa0],0x0
  40a1da:	vmovsd xmm2,QWORD PTR [rip+0x87be]        # 4129a0 <getopt_long_only@@Base+0x5a10>
  40a1e2:	vmovsd xmm3,QWORD PTR [rip+0x87be]        # 4129a8 <getopt_long_only@@Base+0x5a18>
  40a1ea:	vmovsd xmm4,QWORD PTR [rip+0x87be]        # 4129b0 <getopt_long_only@@Base+0x5a20>
  40a1f2:	mov    QWORD PTR [rsp+0x90],0x2
  40a1fe:	vmovsd xmm5,QWORD PTR [rip+0x87b2]        # 4129b8 <getopt_long_only@@Base+0x5a28>
  40a206:	mov    QWORD PTR [rsp+0x98],0x1
  40a212:	vmovsd xmm6,QWORD PTR [rip+0x87a6]        # 4129c0 <getopt_long_only@@Base+0x5a30>
  40a21a:	vmovsd xmm7,QWORD PTR [rip+0x87a6]        # 4129c8 <getopt_long_only@@Base+0x5a38>
  40a222:	vmovsd xmm1,QWORD PTR [rip+0x87a6]        # 4129d0 <getopt_long_only@@Base+0x5a40>
  40a22a:	vmovsd QWORD PTR [rsp+0x138],xmm2
  40a233:	vmovsd QWORD PTR [rsp+0x140],xmm3
  40a23c:	vmovsd QWORD PTR [rsp+0x200],xmm4
  40a245:	vmovsd QWORD PTR [rsp+0x208],xmm5
  40a24e:	vmovsd QWORD PTR [rsp+0x210],xmm6
  40a257:	vmovsd QWORD PTR [rsp+0xc0],xmm7
  40a260:	vmovsd QWORD PTR [rsp+0xc8],xmm1
  40a269:	call   402300 <Mat_VarCreateStruct@plt>
  40a26e:	mov    QWORD PTR [rsp+0x90],0x2
  40a27a:	sub    rsp,0x8
  40a27e:	mov    r8,rbp
  40a281:	mov    QWORD PTR [rsp+0xa0],0x1
  40a28d:	push   0x1
  40a28f:	mov    ecx,0x2
  40a294:	mov    edx,0x9
  40a299:	mov    esi,0x6
  40a29e:	xor    edi,edi
  40a2a0:	lea    r9,[rsp+0xb0]
  40a2a8:	mov    rbx,rax
  40a2ab:	call   4020d0 <Mat_VarCreate@plt>
  40a2b0:	lea    r9,[rsp+0x140]
  40a2b8:	mov    r8,rbp
  40a2bb:	mov    ecx,0x2
  40a2c0:	mov    edx,0x9
  40a2c5:	mov    esi,0x6
  40a2ca:	xor    edi,edi
  40a2cc:	mov    r12,rax
  40a2cf:	mov    DWORD PTR [rsp],0x1
  40a2d6:	mov    QWORD PTR [rsp+0xa0],0x3
  40a2e2:	mov    QWORD PTR [rsp+0xa8],0x1
  40a2ee:	call   4020d0 <Mat_VarCreate@plt>
  40a2f3:	lea    r9,[rsp+0x210]
  40a2fb:	mov    r8,rbp
  40a2fe:	mov    ecx,0x2
  40a303:	mov    edx,0x9
  40a308:	mov    esi,0x6
  40a30d:	xor    edi,edi
  40a30f:	mov    DWORD PTR [rsp],0x1
  40a316:	mov    QWORD PTR [rsp+0x30],rax
  40a31b:	mov    QWORD PTR [rsp+0xa0],0x1
  40a327:	mov    QWORD PTR [rsp+0xa8],0x3
  40a333:	call   4020d0 <Mat_VarCreate@plt>
  40a338:	lea    r9,[rsp+0xd0]
  40a340:	mov    r8,rbp
  40a343:	mov    ecx,0x2
  40a348:	mov    edx,0x9
  40a34d:	mov    esi,0x6
  40a352:	xor    edi,edi
  40a354:	mov    r14,rax
  40a357:	mov    QWORD PTR [rsp+0xa0],0x1
  40a363:	mov    QWORD PTR [rsp+0xa8],0x2
  40a36f:	mov    DWORD PTR [rsp],0x1
  40a376:	call   4020d0 <Mat_VarCreate@plt>
  40a37b:	lea    rsi,[rip+0x3ceb]        # 40e06d <getopt_long_only@@Base+0x10dd>
  40a382:	mov    rdi,rbx
  40a385:	mov    rbp,rax
  40a388:	call   4020b0 <Mat_VarAddStructField@plt>
  40a38d:	lea    rsi,[rip+0x3cd9]        # 40e06d <getopt_long_only@@Base+0x10dd>
  40a394:	mov    rcx,r12
  40a397:	xor    edx,edx
  40a399:	mov    rdi,rbx
  40a39c:	call   402380 <Mat_VarSetStructFieldByName@plt>
  40a3a1:	lea    rsi,[rip+0x3cc5]        # 40e06d <getopt_long_only@@Base+0x10dd>
  40a3a8:	mov    rcx,r14
  40a3ab:	mov    edx,0x1
  40a3b0:	mov    rdi,rbx
  40a3b3:	call   402380 <Mat_VarSetStructFieldByName@plt>
  40a3b8:	lea    rsi,[rip+0x3cb5]        # 40e074 <getopt_long_only@@Base+0x10e4>
  40a3bf:	mov    rdi,rbx
  40a3c2:	call   4020b0 <Mat_VarAddStructField@plt>
  40a3c7:	mov    rcx,QWORD PTR [rsp+0x30]
  40a3cc:	lea    rsi,[rip+0x3ca1]        # 40e074 <getopt_long_only@@Base+0x10e4>
  40a3d3:	xor    edx,edx
  40a3d5:	mov    rdi,rbx
  40a3d8:	call   402380 <Mat_VarSetStructFieldByName@plt>
  40a3dd:	lea    rsi,[rip+0x3c90]        # 40e074 <getopt_long_only@@Base+0x10e4>
  40a3e4:	mov    rcx,rbp
  40a3e7:	mov    edx,0x1
  40a3ec:	mov    rdi,rbx
  40a3ef:	call   402380 <Mat_VarSetStructFieldByName@plt>
  40a3f4:	mov    esi,0x1
  40a3f9:	mov    rdi,rbx
  40a3fc:	call   402260 <Mat_VarPrint@plt>
  40a401:	mov    rdi,rbx
  40a404:	call   402230 <Mat_VarFree@plt>
  40a409:	pop    r9
  40a40b:	pop    r10
  40a40d:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  40a412:	lea    eax,[r12+0x1]
  40a417:	mov    rdi,r13
  40a41a:	mov    DWORD PTR [rsp+0x8],eax
  40a41e:	call   407c15 <Mat_VarRead@plt+0x5875>
  40a423:	call   406462 <Mat_VarRead@plt+0x40c2>
  40a428:	add    r15d,eax
  40a42b:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  40a430:	lea    eax,[r12+0x1]
  40a435:	mov    rdi,r13
  40a438:	lea    rbx,[rip+0x402a]        # 40e469 <getopt_long_only@@Base+0x14d9>
  40a43f:	lea    rbp,[rsp+0x130]
  40a447:	lea    r12,[rsp+0xc0]
  40a44f:	xor    r14d,r14d
  40a452:	mov    DWORD PTR [rsp+0x8],eax
  40a456:	call   407c15 <Mat_VarRead@plt+0x5875>
  40a45b:	vmovsd xmm2,QWORD PTR [rip+0x852d]        # 412990 <getopt_long_only@@Base+0x5a00>
  40a463:	lea    rax,[rip+0x4465]        # 40e8cf <getopt_long_only@@Base+0x193f>
  40a46a:	vmovsd xmm3,QWORD PTR [rip+0x8526]        # 412998 <getopt_long_only@@Base+0x5a08>
  40a472:	mov    QWORD PTR [rsp+0xc0],0x0
  40a47e:	vmovsd xmm4,QWORD PTR [rip+0x851a]        # 4129a0 <getopt_long_only@@Base+0x5a10>
  40a486:	lea    rcx,[rsp+0xa0]
  40a48e:	vmovsd xmm5,QWORD PTR [rip+0x8512]        # 4129a8 <getopt_long_only@@Base+0x5a18>
  40a496:	lea    rdi,[rip+0x3bed]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40a49d:	vmovsd xmm6,QWORD PTR [rip+0x850b]        # 4129b0 <getopt_long_only@@Base+0x5a20>
  40a4a5:	mov    r8d,0x3
  40a4ab:	vmovsd xmm7,QWORD PTR [rip+0x8505]        # 4129b8 <getopt_long_only@@Base+0x5a28>
  40a4b3:	mov    esi,0x2
  40a4b8:	vmovsd xmm1,QWORD PTR [rip+0x8500]        # 4129c0 <getopt_long_only@@Base+0x5a30>
  40a4c0:	vmovsd QWORD PTR [rsp+0xc8],xmm2
  40a4c9:	vmovsd QWORD PTR [rsp+0xd0],xmm3
  40a4d2:	vmovsd xmm2,QWORD PTR [rip+0x84ee]        # 4129c8 <getopt_long_only@@Base+0x5a38>
  40a4da:	vmovsd xmm3,QWORD PTR [rip+0x84ee]        # 4129d0 <getopt_long_only@@Base+0x5a40>
  40a4e2:	vmovsd QWORD PTR [rsp+0xd8],xmm4
  40a4eb:	vmovsd QWORD PTR [rsp+0xe0],xmm5
  40a4f4:	vmovsd xmm4,QWORD PTR [rip+0x84fc]        # 4129f8 <getopt_long_only@@Base+0x5a68>
  40a4fc:	vmovsd xmm5,QWORD PTR [rip+0x84fc]        # 412a00 <getopt_long_only@@Base+0x5a70>
  40a504:	vmovsd QWORD PTR [rsp+0xe8],xmm6
  40a50d:	vmovsd QWORD PTR [rsp+0xf0],xmm7
  40a516:	vmovsd xmm6,QWORD PTR [rip+0x84ea]        # 412a08 <getopt_long_only@@Base+0x5a78>
  40a51e:	vmovsd xmm7,QWORD PTR [rip+0x84ea]        # 412a10 <getopt_long_only@@Base+0x5a80>
  40a526:	vmovsd QWORD PTR [rsp+0xf8],xmm1
  40a52f:	vmovsd QWORD PTR [rsp+0x100],xmm2
  40a538:	vmovsd xmm1,QWORD PTR [rip+0x84d8]        # 412a18 <getopt_long_only@@Base+0x5a88>
  40a540:	vmovsd xmm2,QWORD PTR [rip+0x84d8]        # 412a20 <getopt_long_only@@Base+0x5a90>
  40a548:	vmovsd QWORD PTR [rsp+0x108],xmm3
  40a551:	vmovsd xmm3,QWORD PTR [rip+0x84cf]        # 412a28 <getopt_long_only@@Base+0x5a98>
  40a559:	vmovsd QWORD PTR [rsp+0x110],xmm4
  40a562:	vmovsd QWORD PTR [rsp+0x118],xmm5
  40a56b:	vmovsd QWORD PTR [rsp+0x130],xmm6
  40a574:	vmovsd QWORD PTR [rsp+0x138],xmm7
  40a57d:	vmovsd QWORD PTR [rsp+0x140],xmm1
  40a586:	vmovsd QWORD PTR [rsp+0x148],xmm2
  40a58f:	vmovsd QWORD PTR [rsp+0x150],xmm3
  40a598:	mov    QWORD PTR [rsp+0xa8],rax
  40a5a0:	lea    rax,[rip+0x3d84]        # 40e32b <getopt_long_only@@Base+0x139b>
  40a5a7:	vmovsd xmm4,QWORD PTR [rip+0x8481]        # 412a30 <getopt_long_only@@Base+0x5aa0>
  40a5af:	mov    QWORD PTR [rsp+0xb0],rax
  40a5b7:	lea    rax,[rsp+0x90]
  40a5bf:	vmovsd xmm5,QWORD PTR [rip+0x8471]        # 412a38 <getopt_long_only@@Base+0x5aa8>
  40a5c7:	mov    QWORD PTR [rsp+0xa0],rbx
  40a5cf:	vmovsd xmm6,QWORD PTR [rip+0x8469]        # 412a40 <getopt_long_only@@Base+0x5ab0>
  40a5d7:	mov    rdx,rax
  40a5da:	mov    QWORD PTR [rsp+0x90],0x3
  40a5e6:	vmovsd xmm7,QWORD PTR [rip+0x845a]        # 412a48 <getopt_long_only@@Base+0x5ab8>
  40a5ee:	mov    QWORD PTR [rsp+0x98],0x4
  40a5fa:	vmovsd xmm1,QWORD PTR [rip+0x844e]        # 412a50 <getopt_long_only@@Base+0x5ac0>
  40a602:	mov    QWORD PTR [rsp+0x28],rax
  40a607:	vmovsd xmm2,QWORD PTR [rip+0x8449]        # 412a58 <getopt_long_only@@Base+0x5ac8>
  40a60f:	vmovsd xmm3,QWORD PTR [rip+0x8449]        # 412a60 <getopt_long_only@@Base+0x5ad0>
  40a617:	vmovsd QWORD PTR [rsp+0x158],xmm4
  40a620:	vmovsd QWORD PTR [rsp+0x160],xmm5
  40a629:	vmovsd QWORD PTR [rsp+0x168],xmm6
  40a632:	vmovsd QWORD PTR [rsp+0x170],xmm7
  40a63b:	vmovsd QWORD PTR [rsp+0x178],xmm1
  40a644:	vmovsd QWORD PTR [rsp+0x180],xmm2
  40a64d:	vmovsd QWORD PTR [rsp+0x188],xmm3
  40a656:	call   402300 <Mat_VarCreateStruct@plt>
  40a65b:	lea    r10,[rsp+0x200]
  40a663:	mov    QWORD PTR [rsp+0x38],r13
  40a668:	mov    r13,r12
  40a66b:	mov    DWORD PTR [rsp+0x4c],r15d
  40a670:	mov    QWORD PTR [rsp+0x20],rax
  40a675:	mov    r15,rbp
  40a678:	mov    QWORD PTR [rsp+0x90],0x1
  40a684:	mov    QWORD PTR [rsp+0x98],0x1
  40a690:	mov    rbp,r10
  40a693:	mov    QWORD PTR [rsp+0x30],rbx
  40a698:	lea    rbx,[r14*8+0x0]
  40a6a0:	sub    rsp,0x8
  40a6a4:	xor    edi,edi
  40a6a6:	push   0x1
  40a6a8:	mov    r8,QWORD PTR [rsp+0x38]
  40a6ad:	mov    ecx,0x2
  40a6b2:	lea    r12,[r13+rbx*1+0x0]
  40a6b7:	mov    edx,0x9
  40a6bc:	mov    esi,0x6
  40a6c1:	add    rbx,r15
  40a6c4:	mov    r9,r12
  40a6c7:	call   4020d0 <Mat_VarCreate@plt>
  40a6cc:	mov    rsi,QWORD PTR [rsp+0x40]
  40a6d1:	mov    rdi,QWORD PTR [rsp+0x30]
  40a6d6:	mov    rdx,r14
  40a6d9:	mov    rcx,rax
  40a6dc:	call   402380 <Mat_VarSetStructFieldByName@plt>
  40a6e1:	mov    r8,QWORD PTR [rsp+0x38]
  40a6e6:	mov    r9,rbx
  40a6e9:	xor    edi,edi
  40a6eb:	mov    ecx,0x2
  40a6f0:	mov    edx,0x9
  40a6f5:	mov    esi,0x6
  40a6fa:	mov    DWORD PTR [rsp],0x1
  40a701:	call   4020d0 <Mat_VarCreate@plt>
  40a706:	mov    rdi,QWORD PTR [rsp+0x30]
  40a70b:	lea    rsi,[rip+0x41bd]        # 40e8cf <getopt_long_only@@Base+0x193f>
  40a712:	mov    rdx,r14
  40a715:	mov    rcx,rax
  40a718:	call   402380 <Mat_VarSetStructFieldByName@plt>
  40a71d:	mov    r8,QWORD PTR [rsp+0x38]
  40a722:	mov    QWORD PTR [rbp+0x0],r12
  40a726:	mov    r9,rbp
  40a729:	mov    QWORD PTR [rbp+0x8],rbx
  40a72d:	xor    edi,edi
  40a72f:	mov    ecx,0x2
  40a734:	mov    edx,0x9
  40a739:	mov    esi,0x6
  40a73e:	mov    DWORD PTR [rsp],0x801
  40a745:	call   4020d0 <Mat_VarCreate@plt>
  40a74a:	mov    rdi,QWORD PTR [rsp+0x30]
  40a74f:	lea    rsi,[rip+0x3bd5]        # 40e32b <getopt_long_only@@Base+0x139b>
  40a756:	mov    rdx,r14
  40a759:	mov    rcx,rax
  40a75c:	add    r14,0x1
  40a760:	add    rbp,0x10
  40a764:	call   402380 <Mat_VarSetStructFieldByName@plt>
  40a769:	cmp    r14,0xc
  40a76d:	pop    rdi
  40a76e:	pop    r8
  40a770:	jne    40a698 <Mat_VarRead@plt+0x82f8>
  40a776:	mov    r14,QWORD PTR [rsp+0x20]
  40a77b:	xor    r8d,r8d
  40a77e:	mov    ecx,0x4
  40a783:	mov    edx,0x3
  40a788:	mov    esi,0x1
  40a78d:	mov    r13,QWORD PTR [rsp+0x38]
  40a792:	mov    r15d,DWORD PTR [rsp+0x4c]
  40a797:	mov    rdi,r14
  40a79a:	call   4022d0 <Mat_VarGetStructsLinear@plt>
  40a79f:	mov    esi,0x1
  40a7a4:	mov    rbx,rax
  40a7a7:	mov    rdi,rax
  40a7aa:	call   402260 <Mat_VarPrint@plt>
  40a7af:	mov    rdi,rbx
  40a7b2:	call   402230 <Mat_VarFree@plt>
  40a7b7:	xor    r8d,r8d
  40a7ba:	mov    ecx,0x3
  40a7bf:	mov    edx,0x1
  40a7c4:	xor    esi,esi
  40a7c6:	mov    rdi,r14
  40a7c9:	call   4022d0 <Mat_VarGetStructsLinear@plt>
  40a7ce:	mov    esi,0x1
  40a7d3:	mov    rbx,rax
  40a7d6:	mov    rdi,rax
  40a7d9:	call   402260 <Mat_VarPrint@plt>
  40a7de:	mov    rdi,rbx
  40a7e1:	call   402230 <Mat_VarFree@plt>
  40a7e6:	xor    r8d,r8d
  40a7e9:	mov    ecx,0x3
  40a7ee:	mov    edx,0x4
  40a7f3:	xor    esi,esi
  40a7f5:	mov    rdi,r14
  40a7f8:	call   4022d0 <Mat_VarGetStructsLinear@plt>
  40a7fd:	mov    esi,0x1
  40a802:	mov    rbx,rax
  40a805:	mov    rdi,rax
  40a808:	call   402260 <Mat_VarPrint@plt>
  40a80d:	mov    rdi,rbx
  40a810:	call   402230 <Mat_VarFree@plt>
  40a815:	mov    rdi,r14
  40a818:	call   402230 <Mat_VarFree@plt>
  40a81d:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  40a822:	lea    eax,[r12+0x1]
  40a827:	mov    rdi,r13
  40a82a:	mov    DWORD PTR [rsp+0x8],eax
  40a82e:	call   407c15 <Mat_VarRead@plt+0x5875>
  40a833:	xor    eax,eax
  40a835:	call   40607a <Mat_VarRead@plt+0x3cda>
  40a83a:	add    r15d,eax
  40a83d:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  40a842:	lea    rsi,[rip+0x3c71]        # 40e4ba <getopt_long_only@@Base+0x152a>
  40a849:	mov    rdi,rbp
  40a84c:	call   402210 <strcmp@plt>
  40a851:	test   eax,eax
  40a853:	je     40aa14 <Mat_VarRead@plt+0x8674>
  40a859:	lea    rsi,[rip+0x3c8c]        # 40e4ec <getopt_long_only@@Base+0x155c>
  40a860:	mov    rdi,rbp
  40a863:	call   402210 <strcmp@plt>
  40a868:	test   eax,eax
  40a86a:	je     40a972 <Mat_VarRead@plt+0x85d2>
  40a870:	lea    rsi,[rip+0x3c18]        # 40e48f <getopt_long_only@@Base+0x14ff>
  40a877:	mov    rdi,rbp
  40a87a:	call   402210 <strcmp@plt>
  40a87f:	test   eax,eax
  40a881:	jne    40a95c <Mat_VarRead@plt+0x85bc>
  40a887:	mov    r14,QWORD PTR [rsp+0x10]
  40a88c:	lea    eax,[r12+0x2]
  40a891:	xor    esi,esi
  40a893:	mov    DWORD PTR [rsp+0x8],eax
  40a897:	mov    rdi,QWORD PTR [r14+rbx*1+0x8]
  40a89c:	call   402080 <Mat_Open@plt>
  40a8a1:	test   rax,rax
  40a8a4:	mov    rbp,rax
  40a8a7:	je     4084dd <Mat_VarRead@plt+0x613d>
  40a8ad:	mov    rsi,QWORD PTR [r14+rbx*1+0x10]
  40a8b2:	lea    eax,[r12+0x3]
  40a8b7:	mov    rdi,rbp
  40a8ba:	mov    DWORD PTR [rsp+0x8],eax
  40a8be:	call   4023a0 <Mat_VarRead@plt>
  40a8c3:	test   rax,rax
  40a8c6:	mov    rbx,rax
  40a8c9:	je     409e35 <Mat_VarRead@plt+0x7a95>
  40a8cf:	cmp    DWORD PTR [rax+0x8],0x3
  40a8d3:	je     40a8e2 <Mat_VarRead@plt+0x8542>
  40a8d5:	mov    rdi,rbx
  40a8d8:	call   402230 <Mat_VarFree@plt>
  40a8dd:	jmp    409e35 <Mat_VarRead@plt+0x7a95>
  40a8e2:	mov    rax,QWORD PTR [rax+0x28]
  40a8e6:	cmp    QWORD PTR [rax],0x20
  40a8ea:	jne    40a8d5 <Mat_VarRead@plt+0x8535>
  40a8ec:	cmp    QWORD PTR [rax+0x8],0x20
  40a8f1:	jne    40a8d5 <Mat_VarRead@plt+0x8535>
  40a8f3:	cmp    QWORD PTR [rax+0x10],0x20
  40a8f8:	jne    40a8d5 <Mat_VarRead@plt+0x8535>
  40a8fa:	mov    DWORD PTR [rbx+0x8],0x2
  40a901:	mov    QWORD PTR [rax],0x80
  40a908:	test   r13,r13
  40a90b:	mov    QWORD PTR [rax+0x8],0x100
  40a913:	mov    QWORD PTR [rax+0x10],0x1
  40a91b:	lea    rax,[rip+0x4a36]        # 40f358 <getopt_long_only@@Base+0x23c8>
  40a922:	mov    edx,DWORD PTR [rip+0xa8c8]        # 4151f0 <getopt_long_only@@Base+0x8260>
  40a928:	cmove  r13,rax
  40a92c:	xor    esi,esi
  40a92e:	mov    rdi,r13
  40a931:	call   402310 <Mat_CreateVer@plt>
  40a936:	test   rax,rax
  40a939:	mov    r12,rax
  40a93c:	je     40a8d5 <Mat_VarRead@plt+0x8535>
  40a93e:	mov    edx,DWORD PTR [rip+0xbbe0]        # 416524 <opterr@@Base+0x10>
  40a944:	mov    rsi,rbx
  40a947:	mov    rdi,rax
  40a94a:	call   4020f0 <Mat_VarWrite@plt>
  40a94f:	mov    rdi,r12
  40a952:	call   402290 <Mat_Close@plt>
  40a957:	jmp    40a8d5 <Mat_VarRead@plt+0x8535>
  40a95c:	lea    rdi,[rip+0x3b3c]        # 40e49f <getopt_long_only@@Base+0x150f>
  40a963:	mov    rsi,rbp
  40a966:	xor    eax,eax
  40a968:	call   4022a0 <Mat_Critical@plt>
  40a96d:	jmp    407cd8 <Mat_VarRead@plt+0x5938>
  40a972:	mov    rdi,r13
  40a975:	lea    rbx,[rsp+0x200]
  40a97d:	lea    rbp,[rsp+0x130]
  40a985:	mov    QWORD PTR [rsp+0x130],0x100
  40a991:	mov    QWORD PTR [rsp+0x138],0x100
  40a99d:	mov    QWORD PTR [rsp+0x140],0x7c
  40a9a9:	mov    QWORD PTR [rsp+0x200],0xe9
  40a9b5:	mov    QWORD PTR [rsp+0x208],0x4a
  40a9c1:	mov    QWORD PTR [rsp+0x210],0x1
  40a9cd:	mov    QWORD PTR [rsp+0x68],0x0
  40a9d6:	call   407c15 <Mat_VarRead@plt+0x5875>
  40a9db:	lea    rcx,[rsp+0x68]
  40a9e0:	mov    rdx,rbx
  40a9e3:	mov    rsi,rbp
  40a9e6:	mov    edi,0x3
  40a9eb:	call   4021f0 <Mat_CalcSingleSubscript2@plt>
  40a9f0:	mov    rsi,QWORD PTR [rsp+0x68]
  40a9f5:	lea    rdi,[rip+0x3a8f]        # 40e48b <getopt_long_only@@Base+0x14fb>
  40a9fc:	add    r15d,eax
  40a9ff:	xor    eax,eax
  40aa01:	call   402110 <Mat_Message@plt>
  40aa06:	lea    eax,[r12+0x1]
  40aa0b:	mov    DWORD PTR [rsp+0x8],eax
  40aa0f:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  40aa14:	lea    rbx,[rsp+0x200]
  40aa1c:	mov    rdi,r13
  40aa1f:	mov    QWORD PTR [rsp+0x200],0x100
  40aa2b:	mov    QWORD PTR [rsp+0x208],0x100
  40aa37:	mov    QWORD PTR [rsp+0x210],0x7c
  40aa43:	call   407c15 <Mat_VarRead@plt+0x5875>
  40aa48:	mov    rsi,rbx
  40aa4b:	mov    edx,0x49e8
  40aa50:	mov    edi,0x3
  40aa55:	call   4021d0 <Mat_CalcSubscripts2@plt>
  40aa5a:	mov    rcx,QWORD PTR [rax+0x10]
  40aa5e:	mov    rdx,QWORD PTR [rax+0x8]
  40aa62:	lea    rdi,[rip+0x3a14]        # 40e47d <getopt_long_only@@Base+0x14ed>
  40aa69:	mov    rsi,QWORD PTR [rax]
  40aa6c:	mov    rbx,rax
  40aa6f:	xor    eax,eax
  40aa71:	call   402110 <Mat_Message@plt>
  40aa76:	mov    rdi,rbx
  40aa79:	call   402050 <free@plt>
  40aa7e:	lea    eax,[r12+0x1]
  40aa83:	mov    DWORD PTR [rsp+0x8],eax
  40aa87:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  40aa8c:	lea    eax,[r12+0x1]
  40aa91:	mov    rdi,r13
  40aa94:	lea    r14,[rip+0x35d2]        # 40e06d <getopt_long_only@@Base+0x10dd>
  40aa9b:	lea    rbp,[rsp+0x80]
  40aaa3:	mov    DWORD PTR [rsp+0x8],eax
  40aaa7:	call   407c15 <Mat_VarRead@plt+0x5875>
  40aaac:	vmovsd xmm5,QWORD PTR [rip+0x7edc]        # 412990 <getopt_long_only@@Base+0x5a00>
  40aab4:	lea    rax,[rip+0x35b9]        # 40e074 <getopt_long_only@@Base+0x10e4>
  40aabb:	vmovsd xmm6,QWORD PTR [rip+0x7ed5]        # 412998 <getopt_long_only@@Base+0x5a08>
  40aac3:	mov    QWORD PTR [rsp+0x90],0x0
  40aacf:	vmovsd QWORD PTR [rsp+0x98],xmm5
  40aad8:	mov    QWORD PTR [rsp+0xc0],r14
  40aae0:	mov    QWORD PTR [rsp+0xc8],rax
  40aae8:	vmovsd QWORD PTR [rsp+0x130],xmm6
  40aaf1:	mov    QWORD PTR [rsp+0x80],0x2
  40aafd:	mov    QWORD PTR [rsp+0x88],0x1
  40ab09:	vmovsd xmm7,QWORD PTR [rip+0x7e8f]        # 4129a0 <getopt_long_only@@Base+0x5a10>
  40ab11:	sub    rsp,0x8
  40ab15:	vmovsd xmm1,QWORD PTR [rip+0x7e8b]        # 4129a8 <getopt_long_only@@Base+0x5a18>
  40ab1d:	mov    r8,rbp
  40ab20:	vmovsd xmm2,QWORD PTR [rip+0x7e88]        # 4129b0 <getopt_long_only@@Base+0x5a20>
  40ab28:	xor    edi,edi
  40ab2a:	vmovsd xmm3,QWORD PTR [rip+0x7e86]        # 4129b8 <getopt_long_only@@Base+0x5a28>
  40ab32:	mov    ecx,0x2
  40ab37:	vmovsd xmm4,QWORD PTR [rip+0x7e81]        # 4129c0 <getopt_long_only@@Base+0x5a30>
  40ab3f:	mov    edx,0x9
  40ab44:	vmovsd xmm5,QWORD PTR [rip+0x7e7c]        # 4129c8 <getopt_long_only@@Base+0x5a38>
  40ab4c:	mov    esi,0x6
  40ab51:	vmovsd xmm6,QWORD PTR [rip+0x7e77]        # 4129d0 <getopt_long_only@@Base+0x5a40>
  40ab59:	vmovsd QWORD PTR [rsp+0x140],xmm7
  40ab62:	vmovsd QWORD PTR [rsp+0x148],xmm1
  40ab6b:	vmovsd QWORD PTR [rsp+0x208],xmm2
  40ab74:	vmovsd QWORD PTR [rsp+0x210],xmm3
  40ab7d:	vmovsd QWORD PTR [rsp+0x218],xmm4
  40ab86:	vmovsd QWORD PTR [rsp+0xa8],xmm5
  40ab8f:	vmovsd QWORD PTR [rsp+0xb0],xmm6
  40ab98:	push   0x1
  40ab9a:	lea    r9,[rsp+0xa0]
  40aba2:	lea    r12,[rsp+0xd0]
  40abaa:	call   4020d0 <Mat_VarCreate@plt>
  40abaf:	lea    r9,[rsp+0x140]
  40abb7:	mov    r8,rbp
  40abba:	xor    edi,edi
  40abbc:	mov    ecx,0x2
  40abc1:	mov    edx,0x9
  40abc6:	mov    esi,0x6
  40abcb:	mov    DWORD PTR [rsp],0x1
  40abd2:	mov    QWORD PTR [rsp+0x30],rax
  40abd7:	mov    QWORD PTR [rsp+0x90],0x3
  40abe3:	mov    QWORD PTR [rsp+0x98],0x1
  40abef:	call   4020d0 <Mat_VarCreate@plt>
  40abf4:	lea    r9,[rsp+0x210]
  40abfc:	mov    r8,rbp
  40abff:	xor    edi,edi
  40ac01:	mov    ecx,0x2
  40ac06:	mov    edx,0x9
  40ac0b:	mov    esi,0x6
  40ac10:	mov    DWORD PTR [rsp],0x1
  40ac17:	mov    QWORD PTR [rsp+0x38],rax
  40ac1c:	mov    QWORD PTR [rsp+0x90],0x1
  40ac28:	mov    QWORD PTR [rsp+0x98],0x3
  40ac34:	call   4020d0 <Mat_VarCreate@plt>
  40ac39:	lea    r9,[rsp+0xb0]
  40ac41:	mov    r8,rbp
  40ac44:	xor    edi,edi
  40ac46:	mov    ecx,0x2
  40ac4b:	mov    edx,0x9
  40ac50:	mov    esi,0x6
  40ac55:	mov    QWORD PTR [rsp+0x40],rax
  40ac5a:	mov    QWORD PTR [rsp+0x90],0x1
  40ac66:	mov    QWORD PTR [rsp+0x98],0x2
  40ac72:	mov    DWORD PTR [rsp],0x1
  40ac79:	call   4020d0 <Mat_VarCreate@plt>
  40ac7e:	lea    rdi,[rip+0x3405]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40ac85:	mov    r8d,0x2
  40ac8b:	mov    rcx,r12
  40ac8e:	mov    rdx,rbp
  40ac91:	mov    esi,0x2
  40ac96:	mov    QWORD PTR [rsp+0x48],rax
  40ac9b:	mov    QWORD PTR [rsp+0x90],0x2
  40aca7:	mov    QWORD PTR [rsp+0x98],0x1
  40acb3:	call   402300 <Mat_VarCreateStruct@plt>
  40acb8:	mov    rcx,QWORD PTR [rsp+0x30]
  40acbd:	xor    edx,edx
  40acbf:	mov    rsi,r14
  40acc2:	mov    rdi,rax
  40acc5:	mov    rbx,rax
  40acc8:	call   402380 <Mat_VarSetStructFieldByName@plt>
  40accd:	mov    rcx,QWORD PTR [rsp+0x38]
  40acd2:	lea    rsi,[rip+0x339b]        # 40e074 <getopt_long_only@@Base+0x10e4>
  40acd9:	xor    edx,edx
  40acdb:	mov    rdi,rbx
  40acde:	call   402380 <Mat_VarSetStructFieldByName@plt>
  40ace3:	mov    rcx,QWORD PTR [rsp+0x40]
  40ace8:	mov    rsi,r14
  40aceb:	mov    rdi,rbx
  40acee:	mov    edx,0x1
  40acf3:	call   402380 <Mat_VarSetStructFieldByName@plt>
  40acf8:	mov    r14,QWORD PTR [rsp+0x48]
  40acfd:	lea    rsi,[rip+0x3370]        # 40e074 <getopt_long_only@@Base+0x10e4>
  40ad04:	mov    edx,0x1
  40ad09:	mov    rdi,rbx
  40ad0c:	mov    rcx,r14
  40ad0f:	call   402380 <Mat_VarSetStructFieldByName@plt>
  40ad14:	mov    esi,0x1
  40ad19:	mov    rdi,rbx
  40ad1c:	call   402260 <Mat_VarPrint@plt>
  40ad21:	mov    rdi,rbx
  40ad24:	mov    QWORD PTR [rbx+0x38],0x0
  40ad2c:	call   402230 <Mat_VarFree@plt>
  40ad31:	lea    rdi,[rip+0x387e]        # 40e5b6 <getopt_long_only@@Base+0x1626>
  40ad38:	mov    r8d,0x2
  40ad3e:	mov    rcx,r12
  40ad41:	mov    rdx,rbp
  40ad44:	mov    esi,0x2
  40ad49:	mov    QWORD PTR [rsp+0x90],0x2
  40ad55:	mov    QWORD PTR [rsp+0x98],0x1
  40ad61:	call   402300 <Mat_VarCreateStruct@plt>
  40ad66:	mov    rcx,r14
  40ad69:	xor    edx,edx
  40ad6b:	xor    esi,esi
  40ad6d:	mov    rdi,rax
  40ad70:	mov    rbx,rax
  40ad73:	call   402390 <Mat_VarSetStructFieldByIndex@plt>
  40ad78:	mov    rcx,QWORD PTR [rsp+0x40]
  40ad7d:	xor    edx,edx
  40ad7f:	mov    rdi,rbx
  40ad82:	mov    esi,0x1
  40ad87:	call   402390 <Mat_VarSetStructFieldByIndex@plt>
  40ad8c:	mov    rcx,QWORD PTR [rsp+0x38]
  40ad91:	xor    esi,esi
  40ad93:	mov    rdi,rbx
  40ad96:	mov    edx,0x1
  40ad9b:	call   402390 <Mat_VarSetStructFieldByIndex@plt>
  40ada0:	mov    rcx,QWORD PTR [rsp+0x30]
  40ada5:	mov    edx,0x1
  40adaa:	mov    esi,0x1
  40adaf:	mov    rdi,rbx
  40adb2:	call   402390 <Mat_VarSetStructFieldByIndex@plt>
  40adb7:	jmp    40a3f4 <Mat_VarRead@plt+0x8054>
  40adbc:	lea    eax,[r12+0x1]
  40adc1:	mov    rdi,r13
  40adc4:	lea    rbx,[rsp+0x200]
  40adcc:	lea    rbp,[rsp+0x130]
  40add4:	mov    DWORD PTR [rsp+0x8],eax
  40add8:	call   407c15 <Mat_VarRead@plt+0x5875>
  40addd:	lea    rax,[rip+0x3289]        # 40e06d <getopt_long_only@@Base+0x10dd>
  40ade4:	lea    rdi,[rip+0x329f]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40adeb:	mov    rcx,rbx
  40adee:	mov    rdx,rbp
  40adf1:	mov    r8d,0x2
  40adf7:	mov    esi,0x2
  40adfc:	mov    QWORD PTR [rsp+0x200],rax
  40ae04:	lea    rax,[rip+0x3269]        # 40e074 <getopt_long_only@@Base+0x10e4>
  40ae0b:	mov    QWORD PTR [rsp+0x130],0x2
  40ae17:	mov    QWORD PTR [rsp+0x138],0x1
  40ae23:	mov    QWORD PTR [rsp+0x208],rax
  40ae2b:	call   402300 <Mat_VarCreateStruct@plt>
  40ae30:	mov    esi,0x1
  40ae35:	mov    r12,rax
  40ae38:	mov    rdi,rax
  40ae3b:	call   402260 <Mat_VarPrint@plt>
  40ae40:	mov    rdi,r12
  40ae43:	call   402230 <Mat_VarFree@plt>
  40ae48:	lea    rdi,[rip+0x3767]        # 40e5b6 <getopt_long_only@@Base+0x1626>
  40ae4f:	xor    r8d,r8d
  40ae52:	xor    ecx,ecx
  40ae54:	mov    rdx,rbp
  40ae57:	mov    esi,0x2
  40ae5c:	call   402300 <Mat_VarCreateStruct@plt>
  40ae61:	mov    esi,0x1
  40ae66:	mov    r12,rax
  40ae69:	mov    rdi,rax
  40ae6c:	call   402260 <Mat_VarPrint@plt>
  40ae71:	mov    rdi,r12
  40ae74:	call   402230 <Mat_VarFree@plt>
  40ae79:	lea    rdi,[rip+0x3a4f]        # 40e8cf <getopt_long_only@@Base+0x193f>
  40ae80:	mov    rcx,rbx
  40ae83:	mov    r8d,0x2
  40ae89:	mov    rdx,rbp
  40ae8c:	mov    esi,0x2
  40ae91:	mov    QWORD PTR [rsp+0x130],0x0
  40ae9d:	mov    QWORD PTR [rsp+0x138],0x0
  40aea9:	call   402300 <Mat_VarCreateStruct@plt>
  40aeae:	mov    esi,0x1
  40aeb3:	mov    rbx,rax
  40aeb6:	mov    rdi,rax
  40aeb9:	call   402260 <Mat_VarPrint@plt>
  40aebe:	mov    rdi,rbx
  40aec1:	call   402230 <Mat_VarFree@plt>
  40aec6:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  40aecb:	lea    eax,[r12+0x1]
  40aed0:	mov    rdi,r13
  40aed3:	lea    rbx,[rsp+0x200]
  40aedb:	lea    rbp,[rsp+0x130]
  40aee3:	mov    DWORD PTR [rsp+0x8],eax
  40aee7:	call   407c15 <Mat_VarRead@plt+0x5875>
  40aeec:	lea    rax,[rip+0x317a]        # 40e06d <getopt_long_only@@Base+0x10dd>
  40aef3:	lea    rdi,[rip+0x3190]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40aefa:	mov    rcx,rbx
  40aefd:	mov    r8d,0x4
  40af03:	mov    rdx,rbp
  40af06:	mov    esi,0x2
  40af0b:	mov    QWORD PTR [rsp+0x200],rax
  40af13:	lea    rax,[rip+0x315a]        # 40e074 <getopt_long_only@@Base+0x10e4>
  40af1a:	mov    QWORD PTR [rsp+0x130],0x2
  40af26:	mov    QWORD PTR [rsp+0x138],0x1
  40af32:	mov    QWORD PTR [rsp+0x208],rax
  40af3a:	lea    rax,[rip+0x3437]        # 40e378 <getopt_long_only@@Base+0x13e8>
  40af41:	mov    QWORD PTR [rsp+0x210],rax
  40af49:	lea    rax,[rip+0x346e]        # 40e3be <getopt_long_only@@Base+0x142e>
  40af50:	mov    QWORD PTR [rsp+0x218],rax
  40af58:	call   402300 <Mat_VarCreateStruct@plt>
  40af5d:	mov    rbx,rax
  40af60:	mov    rdi,rax
  40af63:	call   402030 <Mat_VarGetNumberOfFields@plt>
  40af68:	mov    rdi,rbx
  40af6b:	mov    r12d,eax
  40af6e:	call   4021e0 <Mat_VarGetStructFieldnames@plt>
  40af73:	lea    rdi,[rip+0x344b]        # 40e3c5 <getopt_long_only@@Base+0x1435>
  40af7a:	mov    r14,rax
  40af7d:	call   4020c0 <puts@plt>
  40af82:	test   r12d,r12d
  40af85:	je     40afb9 <Mat_VarRead@plt+0x8c19>
  40af87:	xor    r8d,r8d
  40af8a:	cmp    r12d,r8d
  40af8d:	jbe    40afc5 <Mat_VarRead@plt+0x8c25>
  40af8f:	mov    rcx,QWORD PTR [r14+r8*8]
  40af93:	lea    rsi,[rip+0x3445]        # 40e3df <getopt_long_only@@Base+0x144f>
  40af9a:	mov    edx,r8d
  40af9d:	mov    edi,0x1
  40afa2:	xor    eax,eax
  40afa4:	mov    QWORD PTR [rsp+0x20],r8
  40afa9:	call   4022f0 <__printf_chk@plt>
  40afae:	mov    r8,QWORD PTR [rsp+0x20]
  40afb3:	add    r8,0x1
  40afb7:	jmp    40af8a <Mat_VarRead@plt+0x8bea>
  40afb9:	lea    rdi,[rip+0x3418]        # 40e3d8 <getopt_long_only@@Base+0x1448>
  40afc0:	call   4020c0 <puts@plt>
  40afc5:	mov    rdi,rbx
  40afc8:	call   402230 <Mat_VarFree@plt>
  40afcd:	lea    rdi,[rip+0x35e2]        # 40e5b6 <getopt_long_only@@Base+0x1626>
  40afd4:	xor    r8d,r8d
  40afd7:	xor    ecx,ecx
  40afd9:	mov    rdx,rbp
  40afdc:	mov    esi,0x2
  40afe1:	call   402300 <Mat_VarCreateStruct@plt>
  40afe6:	mov    rbx,rax
  40afe9:	mov    rdi,rax
  40afec:	call   402030 <Mat_VarGetNumberOfFields@plt>
  40aff1:	mov    rdi,rbx
  40aff4:	mov    ebp,eax
  40aff6:	call   4021e0 <Mat_VarGetStructFieldnames@plt>
  40affb:	lea    rdi,[rip+0x33e8]        # 40e3ea <getopt_long_only@@Base+0x145a>
  40b002:	mov    r14,rax
  40b005:	call   4020c0 <puts@plt>
  40b00a:	test   ebp,ebp
  40b00c:	je     40b036 <Mat_VarRead@plt+0x8c96>
  40b00e:	xor    r12d,r12d
  40b011:	cmp    ebp,r12d
  40b014:	jbe    40b042 <Mat_VarRead@plt+0x8ca2>
  40b016:	mov    rcx,QWORD PTR [r14+r12*8]
  40b01a:	lea    rsi,[rip+0x33be]        # 40e3df <getopt_long_only@@Base+0x144f>
  40b021:	mov    edx,r12d
  40b024:	mov    edi,0x1
  40b029:	xor    eax,eax
  40b02b:	add    r12,0x1
  40b02f:	call   4022f0 <__printf_chk@plt>
  40b034:	jmp    40b011 <Mat_VarRead@plt+0x8c71>
  40b036:	lea    rdi,[rip+0x339b]        # 40e3d8 <getopt_long_only@@Base+0x1448>
  40b03d:	call   4020c0 <puts@plt>
  40b042:	mov    rdi,rbx
  40b045:	call   402230 <Mat_VarFree@plt>
  40b04a:	xor    edi,edi
  40b04c:	call   402030 <Mat_VarGetNumberOfFields@plt>
  40b051:	xor    edi,edi
  40b053:	mov    ebx,eax
  40b055:	call   4021e0 <Mat_VarGetStructFieldnames@plt>
  40b05a:	lea    rdi,[rip+0x339c]        # 40e3fd <getopt_long_only@@Base+0x146d>
  40b061:	mov    r12,rax
  40b064:	call   4020c0 <puts@plt>
  40b069:	test   ebx,ebx
  40b06b:	je     40b09c <Mat_VarRead@plt+0x8cfc>
  40b06d:	lea    rbp,[rip+0x336b]        # 40e3df <getopt_long_only@@Base+0x144f>
  40b074:	xor    r14d,r14d
  40b077:	cmp    ebx,r14d
  40b07a:	jbe    4084dd <Mat_VarRead@plt+0x613d>
  40b080:	mov    rcx,QWORD PTR [r12+r14*8]
  40b084:	mov    edx,r14d
  40b087:	mov    rsi,rbp
  40b08a:	mov    edi,0x1
  40b08f:	xor    eax,eax
  40b091:	add    r14,0x1
  40b095:	call   4022f0 <__printf_chk@plt>
  40b09a:	jmp    40b077 <Mat_VarRead@plt+0x8cd7>
  40b09c:	lea    rdi,[rip+0x3335]        # 40e3d8 <getopt_long_only@@Base+0x1448>
  40b0a3:	call   4020c0 <puts@plt>
  40b0a8:	jmp    4084dd <Mat_VarRead@plt+0x613d>
  40b0ad:	nop    DWORD PTR [rax]
  40b0b0:	endbr64 
  40b0b4:	xor    ebp,ebp
  40b0b6:	mov    r9,rdx
  40b0b9:	pop    rsi
  40b0ba:	mov    rdx,rsp
  40b0bd:	and    rsp,0xfffffffffffffff0
  40b0c1:	push   rax
  40b0c2:	push   rsp
  40b0c3:	mov    r8,0x40d010
  40b0ca:	mov    rcx,0x40cfa0
  40b0d1:	mov    rdi,0x407c60
  40b0d8:	call   QWORD PTR [rip+0x9f0a]        # 414fe8 <getopt_long_only@@Base+0x8058>
  40b0de:	hlt    
  40b0df:	nop
  40b0e0:	endbr64 
  40b0e4:	ret    
  40b0e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b0ef:	nop
  40b0f0:	mov    eax,0x416527
  40b0f5:	push   rbp
  40b0f6:	sub    rax,0x416520
  40b0fc:	cmp    rax,0xe
  40b100:	mov    rbp,rsp
  40b103:	jbe    40b120 <Mat_VarRead@plt+0x8d80>
  40b105:	mov    eax,0x0
  40b10a:	test   rax,rax
  40b10d:	je     40b120 <Mat_VarRead@plt+0x8d80>
  40b10f:	pop    rbp
  40b110:	mov    edi,0x416520
  40b115:	jmp    rax
  40b117:	nop    WORD PTR [rax+rax*1+0x0]
  40b120:	pop    rbp
  40b121:	ret    
  40b122:	nop    DWORD PTR [rax+0x0]
  40b126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b130:	mov    esi,0x416520
  40b135:	push   rbp
  40b136:	sub    rsi,0x416520
  40b13d:	sar    rsi,0x3
  40b141:	mov    rbp,rsp
  40b144:	mov    rax,rsi
  40b147:	shr    rax,0x3f
  40b14b:	add    rsi,rax
  40b14e:	sar    rsi,1
  40b151:	je     40b168 <Mat_VarRead@plt+0x8dc8>
  40b153:	mov    eax,0x0
  40b158:	test   rax,rax
  40b15b:	je     40b168 <Mat_VarRead@plt+0x8dc8>
  40b15d:	pop    rbp
  40b15e:	mov    edi,0x416520
  40b163:	jmp    rax
  40b165:	nop    DWORD PTR [rax]
  40b168:	pop    rbp
  40b169:	ret    
  40b16a:	nop    WORD PTR [rax+rax*1+0x0]
  40b170:	cmp    BYTE PTR [rip+0xb3a9],0x0        # 416520 <opterr@@Base+0xc>
  40b177:	jne    40b18a <Mat_VarRead@plt+0x8dea>
  40b179:	push   rbp
  40b17a:	mov    rbp,rsp
  40b17d:	call   40b0f0 <Mat_VarRead@plt+0x8d50>
  40b182:	pop    rbp
  40b183:	mov    BYTE PTR [rip+0xb396],0x1        # 416520 <opterr@@Base+0xc>
  40b18a:	repz ret 
  40b18c:	nop    DWORD PTR [rax+0x0]
  40b190:	mov    edi,0x414df8
  40b195:	cmp    QWORD PTR [rdi],0x0
  40b199:	jne    40b1a0 <Mat_VarRead@plt+0x8e00>
  40b19b:	jmp    40b130 <Mat_VarRead@plt+0x8d90>
  40b19d:	nop    DWORD PTR [rax]
  40b1a0:	mov    eax,0x0
  40b1a5:	test   rax,rax
  40b1a8:	je     40b19b <Mat_VarRead@plt+0x8dfb>
  40b1aa:	push   rbp
  40b1ab:	mov    rbp,rsp
  40b1ae:	call   rax
  40b1b0:	pop    rbp
  40b1b1:	jmp    40b130 <Mat_VarRead@plt+0x8d90>
  40b1b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b1c0:	push   r15
  40b1c2:	push   r14
  40b1c4:	push   r13
  40b1c6:	push   r12
  40b1c8:	push   rbp
  40b1c9:	push   rbx
  40b1ca:	sub    rsp,0x8f8
  40b1d1:	mov    DWORD PTR [rsp+0x10],edx
  40b1d5:	mov    edx,DWORD PTR [rip+0xa015]        # 4151f0 <getopt_long_only@@Base+0x8260>
  40b1db:	mov    DWORD PTR [rsp+0x14],edi
  40b1df:	mov    rdi,rsi
  40b1e2:	xor    esi,esi
  40b1e4:	mov    rax,QWORD PTR fs:0x28
  40b1ed:	mov    QWORD PTR [rsp+0x8e8],rax
  40b1f5:	xor    eax,eax
  40b1f7:	call   402310 <Mat_CreateVer@plt>
  40b1fc:	test   rax,rax
  40b1ff:	mov    QWORD PTR [rsp+0x8],rax
  40b204:	je     40b301 <Mat_VarRead@plt+0x8f61>
  40b20a:	lea    rbx,[rsp+0x3c0]
  40b212:	lea    r9,[rsp+0x150]
  40b21a:	lea    r8,[rsp+0x220]
  40b222:	lea    rdi,[rsp+0x2f0]
  40b22a:	lea    rsi,[rsp+0x70]
  40b22f:	lea    rcx,[rsp+0xe0]
  40b237:	lea    rbp,[rsp+0x86f]
  40b23f:	lea    rdx,[rsp+0x8af]
  40b247:	lea    r11,[rsp+0x550]
  40b24f:	lea    r10,[rsp+0x6e0]
  40b257:	mov    eax,0x1
  40b25c:	nop    DWORD PTR [rax+0x0]
  40b260:	vxorpd xmm0,xmm0,xmm0
  40b264:	mov    DWORD PTR [r8+rax*4-0x4],eax
  40b269:	mov    DWORD PTR [rdi+rax*4-0x4],eax
  40b26d:	mov    WORD PTR [rsi+rax*2-0x2],ax
  40b272:	mov    WORD PTR [rcx+rax*2-0x2],ax
  40b277:	mov    BYTE PTR [rbp+rax*1+0x0],al
  40b27b:	mov    BYTE PTR [rdx+rax*1],al
  40b27e:	vcvtsi2sd xmm0,xmm0,eax
  40b282:	vmovsd QWORD PTR [rbx+rax*8-0x8],xmm0
  40b288:	vxorps xmm0,xmm0,xmm0
  40b28c:	mov    QWORD PTR [r11+rax*8-0x8],rax
  40b291:	mov    QWORD PTR [r10+rax*8-0x8],rax
  40b296:	vcvtsi2ss xmm0,xmm0,eax
  40b29a:	vmovss DWORD PTR [r9+rax*4-0x4],xmm0
  40b2a1:	add    rax,0x1
  40b2a5:	cmp    rax,0x33
  40b2a9:	jne    40b260 <Mat_VarRead@plt+0x8ec0>
  40b2ab:	mov    ebp,DWORD PTR [rsp+0x10]
  40b2af:	test   ebp,ebp
  40b2b1:	jne    40b2e5 <Mat_VarRead@plt+0x8f45>
  40b2b3:	mov    eax,DWORD PTR [rsp+0x14]
  40b2b7:	mov    QWORD PTR [rsp+0x60],0x5
  40b2c0:	mov    QWORD PTR [rsp+0x68],0xa
  40b2c9:	sub    eax,0x6
  40b2cc:	cmp    eax,0x9
  40b2cf:	ja     40b913 <Mat_VarRead@plt+0x9573>
  40b2d5:	lea    rdx,[rip+0x3b14]        # 40edf0 <getopt_long_only@@Base+0x1e60>
  40b2dc:	movsxd rax,DWORD PTR [rdx+rax*4]
  40b2e0:	add    rax,rdx
  40b2e3:	jmp    rax
  40b2e5:	cmp    DWORD PTR [rsp+0x10],0x1
  40b2ea:	je     40b63d <Mat_VarRead@plt+0x929d>
  40b2f0:	cmp    DWORD PTR [rsp+0x10],0x2
  40b2f5:	je     40b331 <Mat_VarRead@plt+0x8f91>
  40b2f7:	mov    rdi,QWORD PTR [rsp+0x8]
  40b2fc:	call   402290 <Mat_Close@plt>
  40b301:	mov    ebx,0x1
  40b306:	mov    rcx,QWORD PTR [rsp+0x8e8]
  40b30e:	xor    rcx,QWORD PTR fs:0x28
  40b317:	mov    eax,ebx
  40b319:	jne    40b927 <Mat_VarRead@plt+0x9587>
  40b31f:	add    rsp,0x8f8
  40b326:	pop    rbx
  40b327:	pop    rbp
  40b328:	pop    r12
  40b32a:	pop    r13
  40b32c:	pop    r14
  40b32e:	pop    r15
  40b330:	ret    
  40b331:	lea    r14,[rsp+0x870]
  40b339:	lea    r13,[rsp+0x8b0]
  40b341:	mov    QWORD PTR [rsp+0x60],0x5
  40b34a:	mov    QWORD PTR [rsp+0x68],0x2
  40b353:	lea    rax,[rbx+0x190]
  40b35a:	mov    QWORD PTR [rsp+0x40],r13
  40b35f:	lea    r13,[rip+0x3ab2]        # 40ee18 <getopt_long_only@@Base+0x1e88>
  40b366:	mov    QWORD PTR [rsp+0x38],r9
  40b36b:	mov    r12,r11
  40b36e:	mov    r15,r10
  40b371:	mov    QWORD PTR [rsp+0x48],rax
  40b376:	mov    eax,DWORD PTR [rsp+0x14]
  40b37a:	mov    QWORD PTR [rsp+0x30],r8
  40b37f:	mov    QWORD PTR [rsp+0x28],rdi
  40b384:	mov    QWORD PTR [rsp+0x20],rsi
  40b389:	mov    QWORD PTR [rsp+0x18],rcx
  40b38e:	sub    eax,0x6
  40b391:	mov    DWORD PTR [rsp+0x14],eax
  40b395:	mov    QWORD PTR [rsp+0x50],rax
  40b39a:	lea    rax,[rsp+0x60]
  40b39f:	mov    QWORD PTR [rsp+0x58],rax
  40b3a4:	cmp    DWORD PTR [rsp+0x14],0x9
  40b3a9:	ja     40b2f7 <Mat_VarRead@plt+0x8f57>
  40b3af:	mov    rax,QWORD PTR [rsp+0x50]
  40b3b4:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  40b3b9:	add    rax,r13
  40b3bc:	jmp    rax
  40b3be:	sub    rsp,0x8
  40b3c2:	lea    rdi,[rip+0x2cc1]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b3c9:	mov    r9,r12
  40b3cc:	push   0x0
  40b3ce:	mov    r8,QWORD PTR [rsp+0x68]
  40b3d3:	mov    ecx,0x2
  40b3d8:	mov    edx,0xc
  40b3dd:	mov    esi,0xe
  40b3e2:	call   4020d0 <Mat_VarCreate@plt>
  40b3e7:	pop    rdi
  40b3e8:	pop    r8
  40b3ea:	mov    rbp,rax
  40b3ed:	nop    DWORD PTR [rax]
  40b3f0:	mov    ecx,DWORD PTR [rsp+0x10]
  40b3f4:	mov    edx,DWORD PTR [rip+0xb12a]        # 416524 <opterr@@Base+0x10>
  40b3fa:	mov    rsi,rbp
  40b3fd:	mov    rdi,QWORD PTR [rsp+0x8]
  40b402:	add    rbx,0x50
  40b406:	add    r12,0x50
  40b40a:	add    r15,0x50
  40b40e:	add    r14,0xa
  40b412:	call   402150 <Mat_VarWriteAppend@plt>
  40b417:	mov    rdi,rbp
  40b41a:	call   402230 <Mat_VarFree@plt>
  40b41f:	add    QWORD PTR [rsp+0x38],0x28
  40b425:	add    QWORD PTR [rsp+0x30],0x28
  40b42b:	add    QWORD PTR [rsp+0x28],0x28
  40b431:	add    QWORD PTR [rsp+0x20],0x14
  40b437:	add    QWORD PTR [rsp+0x18],0x14
  40b43d:	add    QWORD PTR [rsp+0x40],0xa
  40b443:	cmp    rbx,QWORD PTR [rsp+0x48]
  40b448:	jne    40b3a4 <Mat_VarRead@plt+0x9004>
  40b44e:	xor    ebx,ebx
  40b450:	mov    rdi,QWORD PTR [rsp+0x8]
  40b455:	call   402290 <Mat_Close@plt>
  40b45a:	jmp    40b306 <Mat_VarRead@plt+0x8f66>
  40b45f:	sub    rsp,0x8
  40b463:	lea    rdi,[rip+0x2c20]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b46a:	mov    ecx,0x2
  40b46f:	push   0x0
  40b471:	mov    r9,QWORD PTR [rsp+0x38]
  40b476:	mov    edx,0x6
  40b47b:	mov    r8,QWORD PTR [rsp+0x68]
  40b480:	mov    esi,0xd
  40b485:	call   4020d0 <Mat_VarCreate@plt>
  40b48a:	pop    r11
  40b48c:	mov    rbp,rax
  40b48f:	pop    rax
  40b490:	jmp    40b3f0 <Mat_VarRead@plt+0x9050>
  40b495:	sub    rsp,0x8
  40b499:	lea    rdi,[rip+0x2bea]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b4a0:	mov    edx,0x5
  40b4a5:	push   0x0
  40b4a7:	mov    r9,QWORD PTR [rsp+0x40]
  40b4ac:	mov    ecx,0x2
  40b4b1:	mov    r8,QWORD PTR [rsp+0x68]
  40b4b6:	mov    esi,0xc
  40b4bb:	call   4020d0 <Mat_VarCreate@plt>
  40b4c0:	mov    rbp,rax
  40b4c3:	pop    rax
  40b4c4:	pop    rdx
  40b4c5:	jmp    40b3f0 <Mat_VarRead@plt+0x9050>
  40b4ca:	sub    rsp,0x8
  40b4ce:	lea    rdi,[rip+0x2bb5]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b4d5:	mov    ecx,0x2
  40b4da:	push   0x0
  40b4dc:	mov    r9,QWORD PTR [rsp+0x28]
  40b4e1:	mov    edx,0x4
  40b4e6:	mov    r8,QWORD PTR [rsp+0x68]
  40b4eb:	mov    esi,0xb
  40b4f0:	call   4020d0 <Mat_VarCreate@plt>
  40b4f5:	pop    rdi
  40b4f6:	mov    rbp,rax
  40b4f9:	pop    r8
  40b4fb:	jmp    40b3f0 <Mat_VarRead@plt+0x9050>
  40b500:	sub    rsp,0x8
  40b504:	lea    rdi,[rip+0x2b7f]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b50b:	mov    ecx,0x2
  40b510:	push   0x0
  40b512:	mov    r9,QWORD PTR [rsp+0x30]
  40b517:	mov    edx,0x3
  40b51c:	mov    r8,QWORD PTR [rsp+0x68]
  40b521:	mov    esi,0xa
  40b526:	call   4020d0 <Mat_VarCreate@plt>
  40b52b:	pop    r9
  40b52d:	mov    rbp,rax
  40b530:	pop    r10
  40b532:	jmp    40b3f0 <Mat_VarRead@plt+0x9050>
  40b537:	sub    rsp,0x8
  40b53b:	lea    rdi,[rip+0x2b48]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b542:	mov    edx,0x2
  40b547:	push   0x0
  40b549:	mov    r9,QWORD PTR [rsp+0x50]
  40b54e:	mov    ecx,0x2
  40b553:	mov    r8,QWORD PTR [rsp+0x68]
  40b558:	mov    esi,0x9
  40b55d:	call   4020d0 <Mat_VarCreate@plt>
  40b562:	mov    rbp,rax
  40b565:	pop    rax
  40b566:	pop    rdx
  40b567:	jmp    40b3f0 <Mat_VarRead@plt+0x9050>
  40b56c:	sub    rsp,0x8
  40b570:	lea    rdi,[rip+0x2b13]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b577:	mov    ecx,0x2
  40b57c:	push   0x0
  40b57e:	mov    r8,QWORD PTR [rsp+0x68]
  40b583:	mov    esi,0x8
  40b588:	mov    r9,r14
  40b58b:	mov    edx,0x1
  40b590:	call   4020d0 <Mat_VarCreate@plt>
  40b595:	pop    rcx
  40b596:	mov    rbp,rax
  40b599:	pop    rsi
  40b59a:	jmp    40b3f0 <Mat_VarRead@plt+0x9050>
  40b59f:	sub    rsp,0x8
  40b5a3:	lea    rdi,[rip+0x2ae0]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b5aa:	mov    ecx,0x2
  40b5af:	push   0x0
  40b5b1:	mov    r9,QWORD PTR [rsp+0x48]
  40b5b6:	mov    edx,0x7
  40b5bb:	mov    r8,QWORD PTR [rsp+0x68]
  40b5c0:	mov    esi,0x7
  40b5c5:	call   4020d0 <Mat_VarCreate@plt>
  40b5ca:	pop    r9
  40b5cc:	mov    rbp,rax
  40b5cf:	pop    r10
  40b5d1:	jmp    40b3f0 <Mat_VarRead@plt+0x9050>
  40b5d6:	sub    rsp,0x8
  40b5da:	lea    rdi,[rip+0x2aa9]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b5e1:	mov    r9,rbx
  40b5e4:	push   0x0
  40b5e6:	mov    r8,QWORD PTR [rsp+0x68]
  40b5eb:	mov    ecx,0x2
  40b5f0:	mov    edx,0x9
  40b5f5:	mov    esi,0x6
  40b5fa:	call   4020d0 <Mat_VarCreate@plt>
  40b5ff:	pop    r11
  40b601:	mov    rbp,rax
  40b604:	pop    rax
  40b605:	jmp    40b3f0 <Mat_VarRead@plt+0x9050>
  40b60a:	sub    rsp,0x8
  40b60e:	lea    rdi,[rip+0x2a75]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b615:	mov    ecx,0x2
  40b61a:	push   0x0
  40b61c:	mov    r8,QWORD PTR [rsp+0x68]
  40b621:	mov    esi,0xf
  40b626:	mov    r9,r15
  40b629:	mov    edx,0xd
  40b62e:	call   4020d0 <Mat_VarCreate@plt>
  40b633:	pop    rcx
  40b634:	mov    rbp,rax
  40b637:	pop    rsi
  40b638:	jmp    40b3f0 <Mat_VarRead@plt+0x9050>
  40b63d:	lea    r14,[rsp+0x870]
  40b645:	lea    r13,[rsp+0x8b0]
  40b64d:	mov    QWORD PTR [rsp+0x60],0x1
  40b656:	mov    QWORD PTR [rsp+0x68],0xa
  40b65f:	mov    r12d,0x33
  40b665:	mov    QWORD PTR [rsp+0x18],0x0
  40b66e:	mov    r15d,0x1
  40b674:	nop    DWORD PTR [rax+0x0]
  40b678:	mov    rax,QWORD PTR [rsp+0x18]
  40b67d:	mov    edx,r15d
  40b680:	mov    rbp,r15
  40b683:	nop    DWORD PTR [rax+rax*1+0x0]
  40b688:	vxorpd xmm0,xmm0,xmm0
  40b68c:	mov    BYTE PTR [rax+r14*1],dl
  40b690:	mov    BYTE PTR [rax+r13*1],dl
  40b694:	mov    DWORD PTR [r8+rax*4],edx
  40b698:	mov    DWORD PTR [rdi+rax*4],edx
  40b69b:	mov    WORD PTR [rsi+rax*2],dx
  40b69f:	vcvtsi2sd xmm0,xmm0,edx
  40b6a3:	vmovsd QWORD PTR [rbx+rax*8],xmm0
  40b6a8:	vxorps xmm0,xmm0,xmm0
  40b6ac:	mov    WORD PTR [rcx+rax*2],dx
  40b6b0:	mov    QWORD PTR [r11+rax*8],rbp
  40b6b4:	mov    QWORD PTR [r10+rax*8],rbp
  40b6b8:	add    rbp,0x5
  40b6bc:	vcvtsi2ss xmm0,xmm0,edx
  40b6c0:	add    edx,0x5
  40b6c3:	vmovss DWORD PTR [r9+rax*4],xmm0
  40b6c9:	add    rax,0x1
  40b6cd:	cmp    edx,r12d
  40b6d0:	jne    40b688 <Mat_VarRead@plt+0x92e8>
  40b6d2:	add    r15,0x1
  40b6d6:	add    QWORD PTR [rsp+0x18],0xa
  40b6dc:	add    r12d,0x1
  40b6e0:	cmp    r15,0x6
  40b6e4:	jne    40b678 <Mat_VarRead@plt+0x92d8>
  40b6e6:	jmp    40b353 <Mat_VarRead@plt+0x8fb3>
  40b6eb:	sub    rsp,0x8
  40b6ef:	lea    rdi,[rip+0x2994]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b6f6:	mov    edx,0xc
  40b6fb:	push   0x0
  40b6fd:	mov    r9,r11
  40b700:	mov    ecx,0x2
  40b705:	mov    esi,0xe
  40b70a:	lea    r8,[rsp+0x70]
  40b70f:	call   4020d0 <Mat_VarCreate@plt>
  40b714:	mov    rbp,rax
  40b717:	pop    rax
  40b718:	pop    rdx
  40b719:	mov    rdi,QWORD PTR [rsp+0x8]
  40b71e:	mov    edx,DWORD PTR [rip+0xae00]        # 416524 <opterr@@Base+0x10>
  40b724:	mov    rsi,rbp
  40b727:	call   4020f0 <Mat_VarWrite@plt>
  40b72c:	mov    rdi,rbp
  40b72f:	mov    ebx,eax
  40b731:	call   402230 <Mat_VarFree@plt>
  40b736:	jmp    40b450 <Mat_VarRead@plt+0x90b0>
  40b73b:	sub    rsp,0x8
  40b73f:	lea    rdi,[rip+0x2944]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b746:	mov    r9,r10
  40b749:	push   0x0
  40b74b:	mov    ecx,0x2
  40b750:	mov    edx,0xd
  40b755:	mov    esi,0xf
  40b75a:	lea    r8,[rsp+0x70]
  40b75f:	call   4020d0 <Mat_VarCreate@plt>
  40b764:	pop    r14
  40b766:	mov    rbp,rax
  40b769:	pop    r15
  40b76b:	jmp    40b719 <Mat_VarRead@plt+0x9379>
  40b76d:	sub    rsp,0x8
  40b771:	lea    rdi,[rip+0x2912]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b778:	mov    r9,rbx
  40b77b:	push   0x0
  40b77d:	mov    ecx,0x2
  40b782:	mov    edx,0x9
  40b787:	mov    esi,0x6
  40b78c:	lea    r8,[rsp+0x70]
  40b791:	call   4020d0 <Mat_VarCreate@plt>
  40b796:	pop    rdi
  40b797:	mov    rbp,rax
  40b79a:	pop    r8
  40b79c:	jmp    40b719 <Mat_VarRead@plt+0x9379>
  40b7a1:	sub    rsp,0x8
  40b7a5:	lea    rdi,[rip+0x28de]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b7ac:	mov    ecx,0x2
  40b7b1:	push   0x0
  40b7b3:	mov    esi,0x7
  40b7b8:	mov    edx,0x7
  40b7bd:	lea    r8,[rsp+0x70]
  40b7c2:	call   4020d0 <Mat_VarCreate@plt>
  40b7c7:	pop    rcx
  40b7c8:	mov    rbp,rax
  40b7cb:	pop    rsi
  40b7cc:	jmp    40b719 <Mat_VarRead@plt+0x9379>
  40b7d1:	sub    rsp,0x8
  40b7d5:	lea    rdi,[rip+0x28ae]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b7dc:	mov    ecx,0x2
  40b7e1:	push   0x0
  40b7e3:	mov    esi,0x8
  40b7e8:	mov    edx,0x1
  40b7ed:	lea    r9,[rsp+0x880]
  40b7f5:	lea    r8,[rsp+0x70]
  40b7fa:	call   4020d0 <Mat_VarCreate@plt>
  40b7ff:	pop    rcx
  40b800:	mov    rbp,rax
  40b803:	pop    rsi
  40b804:	jmp    40b719 <Mat_VarRead@plt+0x9379>
  40b809:	sub    rsp,0x8
  40b80d:	lea    rdi,[rip+0x2876]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b814:	mov    edx,0x2
  40b819:	push   0x0
  40b81b:	mov    ecx,0x2
  40b820:	mov    esi,0x9
  40b825:	lea    r9,[rsp+0x8c0]
  40b82d:	lea    r8,[rsp+0x70]
  40b832:	call   4020d0 <Mat_VarCreate@plt>
  40b837:	mov    rbp,rax
  40b83a:	pop    rax
  40b83b:	pop    rdx
  40b83c:	jmp    40b719 <Mat_VarRead@plt+0x9379>
  40b841:	sub    rsp,0x8
  40b845:	lea    rdi,[rip+0x283e]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b84c:	mov    r9,rsi
  40b84f:	push   0x0
  40b851:	mov    ecx,0x2
  40b856:	mov    edx,0x3
  40b85b:	mov    esi,0xa
  40b860:	lea    r8,[rsp+0x70]
  40b865:	call   4020d0 <Mat_VarCreate@plt>
  40b86a:	pop    r9
  40b86c:	mov    rbp,rax
  40b86f:	pop    r10
  40b871:	jmp    40b719 <Mat_VarRead@plt+0x9379>
  40b876:	sub    rsp,0x8
  40b87a:	lea    rdi,[rip+0x2809]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b881:	mov    r9,rcx
  40b884:	push   0x0
  40b886:	mov    ecx,0x2
  40b88b:	mov    edx,0x4
  40b890:	mov    esi,0xb
  40b895:	lea    r8,[rsp+0x70]
  40b89a:	call   4020d0 <Mat_VarCreate@plt>
  40b89f:	pop    rdi
  40b8a0:	mov    rbp,rax
  40b8a3:	pop    r8
  40b8a5:	jmp    40b719 <Mat_VarRead@plt+0x9379>
  40b8aa:	sub    rsp,0x8
  40b8ae:	mov    r9,r8
  40b8b1:	lea    rdi,[rip+0x27d2]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b8b8:	push   0x0
  40b8ba:	mov    ecx,0x2
  40b8bf:	mov    edx,0x5
  40b8c4:	mov    esi,0xc
  40b8c9:	lea    r8,[rsp+0x70]
  40b8ce:	call   4020d0 <Mat_VarCreate@plt>
  40b8d3:	pop    r12
  40b8d5:	mov    rbp,rax
  40b8d8:	pop    r13
  40b8da:	jmp    40b719 <Mat_VarRead@plt+0x9379>
  40b8df:	sub    rsp,0x8
  40b8e3:	mov    r9,rdi
  40b8e6:	lea    rdi,[rip+0x279d]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40b8ed:	push   0x0
  40b8ef:	mov    ecx,0x2
  40b8f4:	mov    edx,0x6
  40b8f9:	mov    esi,0xd
  40b8fe:	lea    r8,[rsp+0x70]
  40b903:	call   4020d0 <Mat_VarCreate@plt>
  40b908:	pop    r11
  40b90a:	mov    rbp,rax
  40b90d:	pop    rbx
  40b90e:	jmp    40b719 <Mat_VarRead@plt+0x9379>
  40b913:	mov    rdi,QWORD PTR [rsp+0x8]
  40b918:	mov    ebx,0x1
  40b91d:	call   402290 <Mat_Close@plt>
  40b922:	jmp    40b306 <Mat_VarRead@plt+0x8f66>
  40b927:	call   402140 <__stack_chk_fail@plt>
  40b92c:	nop    DWORD PTR [rax+0x0]
  40b930:	push   r15
  40b932:	push   r14
  40b934:	push   r13
  40b936:	push   r12
  40b938:	push   rbp
  40b939:	push   rbx
  40b93a:	sub    rsp,0x1258
  40b941:	mov    DWORD PTR [rsp+0xa0],edx
  40b948:	mov    edx,DWORD PTR [rip+0x98a2]        # 4151f0 <getopt_long_only@@Base+0x8260>
  40b94e:	mov    DWORD PTR [rsp+0xa4],edi
  40b955:	mov    rdi,rsi
  40b958:	xor    esi,esi
  40b95a:	mov    rax,QWORD PTR fs:0x28
  40b963:	mov    QWORD PTR [rsp+0x1248],rax
  40b96b:	xor    eax,eax
  40b96d:	mov    QWORD PTR [rsp+0x130],0x0
  40b979:	mov    QWORD PTR [rsp+0x138],0x0
  40b985:	call   402310 <Mat_CreateVer@plt>
  40b98a:	test   rax,rax
  40b98d:	mov    QWORD PTR [rsp+0xa8],rax
  40b995:	je     40bb88 <Mat_VarRead@plt+0x97e8>
  40b99b:	lea    rbx,[rsp+0x7f0]
  40b9a3:	lea    rdi,[rsp+0x310]
  40b9ab:	lea    rbp,[rsp+0xca0]
  40b9b3:	lea    rcx,[rsp+0x11dd]
  40b9bb:	lea    r13,[rsp+0x980]
  40b9c3:	lea    r15,[rsp+0x3e0]
  40b9cb:	mov    QWORD PTR [rsp+0x38],rbx
  40b9d0:	lea    rbx,[rsp+0x4b0]
  40b9d8:	mov    QWORD PTR [rsp+0x10],rdi
  40b9dd:	mov    QWORD PTR [rsp+0x28],rbp
  40b9e2:	lea    rdi,[rsp+0x580]
  40b9ea:	lea    rbp,[rsp+0xe30]
  40b9f2:	mov    QWORD PTR [rsp+0x20],rbx
  40b9f7:	lea    rbx,[rsp+0x720]
  40b9ff:	lea    r12,[rsp+0x650]
  40ba07:	mov    QWORD PTR [rsp+0x8],rdi
  40ba0c:	mov    QWORD PTR [rsp+0x30],rbp
  40ba11:	lea    r11,[rsp+0x1c0]
  40ba19:	mov    QWORD PTR [rsp+0x18],rbx
  40ba1e:	lea    r10,[rsp+0x230]
  40ba26:	lea    rbx,[rsp+0x150]
  40ba2e:	lea    r9,[rsp+0x2a0]
  40ba36:	lea    r8,[rsp+0x111d]
  40ba3e:	lea    rdi,[rsp+0x115d]
  40ba46:	lea    rsi,[rsp+0x119d]
  40ba4e:	lea    r14,[rsp+0xb10]
  40ba56:	lea    rbp,[rsp+0xfc0]
  40ba5e:	mov    eax,0x33
  40ba63:	mov    edx,0x1
  40ba68:	mov    QWORD PTR [rsp+0x40],rcx
  40ba6d:	nop    DWORD PTR [rax]
  40ba70:	mov    rcx,QWORD PTR [rsp+0x38]
  40ba75:	vxorpd xmm0,xmm0,xmm0
  40ba79:	mov    DWORD PTR [r12+rax*4-0xcc],edx
  40ba81:	mov    WORD PTR [rbx+rax*2-0x66],dx
  40ba86:	mov    WORD PTR [r10+rax*2-0x66],dx
  40ba8c:	mov    BYTE PTR [r8+rax*1],dl
  40ba90:	vcvtsi2sd xmm0,xmm0,edx
  40ba94:	vmovsd QWORD PTR [rcx+rax*8-0x198],xmm0
  40ba9d:	vxorpd xmm0,xmm0,xmm0
  40baa1:	mov    rcx,QWORD PTR [rsp+0x10]
  40baa6:	mov    BYTE PTR [rsi+rax*1],dl
  40baa9:	mov    QWORD PTR [r14+rax*8-0x198],rdx
  40bab1:	vcvtsi2sd xmm0,xmm0,eax
  40bab5:	vmovsd QWORD PTR [r13+rax*8-0x198],xmm0
  40babf:	vxorps xmm0,xmm0,xmm0
  40bac3:	mov    WORD PTR [r11+rax*2-0x66],ax
  40bac9:	mov    WORD PTR [r9+rax*2-0x66],ax
  40bacf:	mov    BYTE PTR [rdi+rax*1],al
  40bad2:	vcvtsi2ss xmm0,xmm0,edx
  40bad6:	vmovss DWORD PTR [rcx+rax*4-0xcc],xmm0
  40badf:	mov    rcx,QWORD PTR [rsp+0x20]
  40bae4:	vxorps xmm0,xmm0,xmm0
  40bae8:	mov    QWORD PTR [rbp+rax*8-0x198],rax
  40baf0:	mov    DWORD PTR [rcx+rax*4-0xcc],edx
  40baf7:	mov    rcx,QWORD PTR [rsp+0x8]
  40bafc:	vcvtsi2ss xmm0,xmm0,eax
  40bb00:	vmovss DWORD PTR [r15+rax*4-0xcc],xmm0
  40bb0a:	mov    DWORD PTR [rcx+rax*4-0xcc],eax
  40bb11:	mov    rcx,QWORD PTR [rsp+0x18]
  40bb16:	mov    DWORD PTR [rcx+rax*4-0xcc],eax
  40bb1d:	mov    rcx,QWORD PTR [rsp+0x40]
  40bb22:	mov    BYTE PTR [rcx+rax*1],al
  40bb25:	mov    rcx,QWORD PTR [rsp+0x28]
  40bb2a:	mov    QWORD PTR [rcx+rax*8-0x198],rax
  40bb32:	mov    rcx,QWORD PTR [rsp+0x30]
  40bb37:	mov    QWORD PTR [rcx+rax*8-0x198],rdx
  40bb3f:	add    rdx,0x1
  40bb43:	add    rax,0x1
  40bb47:	cmp    rdx,0x33
  40bb4b:	jne    40ba70 <Mat_VarRead@plt+0x96d0>
  40bb51:	mov    eax,DWORD PTR [rsp+0xa4]
  40bb58:	sub    eax,0x6
  40bb5b:	cmp    eax,0x9
  40bb5e:	mov    DWORD PTR [rsp+0xb0],eax
  40bb65:	ja     40c3e2 <Mat_VarRead@plt+0xa042>
  40bb6b:	lea    rdx,[rip+0x32ce]        # 40ee40 <getopt_long_only@@Base+0x1eb0>
  40bb72:	movsxd rax,DWORD PTR [rdx+rax*4]
  40bb76:	add    rax,rdx
  40bb79:	jmp    rax
  40bb7b:	mov    rdi,QWORD PTR [rsp+0xa8]
  40bb83:	call   402290 <Mat_Close@plt>
  40bb88:	mov    ebx,0x1
  40bb8d:	mov    rdi,QWORD PTR [rsp+0x1248]
  40bb95:	xor    rdi,QWORD PTR fs:0x28
  40bb9e:	mov    eax,ebx
  40bba0:	jne    40c3f9 <Mat_VarRead@plt+0xa059>
  40bba6:	add    rsp,0x1258
  40bbad:	pop    rbx
  40bbae:	pop    rbp
  40bbaf:	pop    r12
  40bbb1:	pop    r13
  40bbb3:	pop    r14
  40bbb5:	pop    r15
  40bbb7:	ret    
  40bbb8:	mov    rax,QWORD PTR [rsp+0x28]
  40bbbd:	mov    QWORD PTR [rsp+0x130],r14
  40bbc5:	mov    DWORD PTR [rsp+0xb4],0xc
  40bbd0:	mov    QWORD PTR [rsp+0x138],rax
  40bbd8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bbe0:	mov    edi,DWORD PTR [rsp+0xa0]
  40bbe7:	test   edi,edi
  40bbe9:	je     40c01d <Mat_VarRead@plt+0x9c7d>
  40bbef:	cmp    DWORD PTR [rsp+0xa0],0x1
  40bbf7:	je     40c097 <Mat_VarRead@plt+0x9cf7>
  40bbfd:	cmp    DWORD PTR [rsp+0xa0],0x2
  40bc05:	jne    40bb7b <Mat_VarRead@plt+0x97db>
  40bc0b:	mov    QWORD PTR [rsp+0x140],0x5
  40bc17:	mov    QWORD PTR [rsp+0x148],0x2
  40bc23:	mov    rax,QWORD PTR [rsp+0x38]
  40bc28:	mov    QWORD PTR [rsp+0x58],rbx
  40bc2d:	xor    ebx,ebx
  40bc2f:	mov    QWORD PTR [rsp+0x88],r15
  40bc37:	mov    QWORD PTR [rsp+0x50],r11
  40bc3c:	mov    r15,r10
  40bc3f:	mov    QWORD PTR [rsp+0x48],r9
  40bc44:	mov    QWORD PTR [rsp+0x80],r12
  40bc4c:	mov    QWORD PTR [rsp+0x40],rax
  40bc51:	mov    rax,QWORD PTR [rsp+0x28]
  40bc56:	mov    QWORD PTR [rsp+0x28],rbp
  40bc5b:	xor    ebp,ebp
  40bc5d:	mov    QWORD PTR [rsp+0x38],rax
  40bc62:	lea    rax,[rsp+0x11d0]
  40bc6a:	mov    QWORD PTR [rsp+0x60],rax
  40bc6f:	lea    rax,[rsp+0x1210]
  40bc77:	mov    QWORD PTR [rsp+0x68],rax
  40bc7c:	lea    rax,[rsp+0x1150]
  40bc84:	mov    QWORD PTR [rsp+0x70],rax
  40bc89:	lea    rax,[rsp+0x1190]
  40bc91:	mov    QWORD PTR [rsp+0x78],rax
  40bc96:	mov    eax,DWORD PTR [rsp+0xb0]
  40bc9d:	cmp    eax,0x9
  40bca0:	ja     40bb7b <Mat_VarRead@plt+0x97db>
  40bca6:	lea    rcx,[rip+0x31bb]        # 40ee68 <getopt_long_only@@Base+0x1ed8>
  40bcad:	mov    edx,eax
  40bcaf:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40bcb3:	add    rax,rcx
  40bcb6:	jmp    rax
  40bcb8:	mov    rax,QWORD PTR [rsp+0x38]
  40bcbd:	mov    QWORD PTR [rsp+0x130],r14
  40bcc5:	mov    QWORD PTR [rsp+0x138],rax
  40bccd:	nop    DWORD PTR [rax]
  40bcd0:	sub    rsp,0x8
  40bcd4:	lea    rdi,[rip+0x23af]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40bcdb:	mov    ecx,0x2
  40bce0:	push   0x800
  40bce5:	mov    edx,DWORD PTR [rsp+0xc4]
  40bcec:	add    rbx,0xa
  40bcf0:	mov    esi,DWORD PTR [rsp+0xb4]
  40bcf7:	add    r13,0x50
  40bcfb:	add    r14,0x50
  40bcff:	lea    r9,[rsp+0x140]
  40bd07:	lea    r8,[rsp+0x150]
  40bd0f:	add    r15,0x14
  40bd13:	add    rbp,0x28
  40bd17:	call   4020d0 <Mat_VarCreate@plt>
  40bd1c:	mov    ecx,DWORD PTR [rsp+0xb0]
  40bd23:	mov    rdi,QWORD PTR [rsp+0xb8]
  40bd2b:	mov    r12,rax
  40bd2e:	mov    edx,DWORD PTR [rip+0xa7f0]        # 416524 <opterr@@Base+0x10>
  40bd34:	mov    rsi,rax
  40bd37:	call   402150 <Mat_VarWriteAppend@plt>
  40bd3c:	mov    rdi,r12
  40bd3f:	call   402230 <Mat_VarFree@plt>
  40bd44:	add    QWORD PTR [rsp+0x50],0x50
  40bd4a:	add    QWORD PTR [rsp+0x48],0x50
  40bd50:	add    QWORD PTR [rsp+0x40],0x50
  40bd56:	add    QWORD PTR [rsp+0x38],0x50
  40bd5c:	add    QWORD PTR [rsp+0x68],0x14
  40bd62:	add    QWORD PTR [rsp+0x60],0x14
  40bd68:	add    QWORD PTR [rsp+0x58],0x14
  40bd6e:	cmp    rbx,0x32
  40bd72:	pop    rax
  40bd73:	pop    rdx
  40bd74:	jne    40bc96 <Mat_VarRead@plt+0x98f6>
  40bd7a:	xor    ebx,ebx
  40bd7c:	mov    rdi,QWORD PTR [rsp+0xa8]
  40bd84:	call   402290 <Mat_Close@plt>
  40bd89:	jmp    40bb8d <Mat_VarRead@plt+0x97ed>
  40bd8e:	mov    rax,QWORD PTR [rsp+0x80]
  40bd96:	add    rax,rbp
  40bd99:	mov    QWORD PTR [rsp+0x130],rax
  40bda1:	mov    rax,QWORD PTR [rsp+0x18]
  40bda6:	add    rax,rbp
  40bda9:	mov    QWORD PTR [rsp+0x138],rax
  40bdb1:	jmp    40bcd0 <Mat_VarRead@plt+0x9930>
  40bdb6:	mov    rax,QWORD PTR [rsp+0x20]
  40bdbb:	add    rax,rbp
  40bdbe:	mov    QWORD PTR [rsp+0x130],rax
  40bdc6:	mov    rax,QWORD PTR [rsp+0x8]
  40bdcb:	add    rax,rbp
  40bdce:	mov    QWORD PTR [rsp+0x138],rax
  40bdd6:	jmp    40bcd0 <Mat_VarRead@plt+0x9930>
  40bddb:	mov    rax,QWORD PTR [rsp+0x48]
  40bde0:	mov    QWORD PTR [rsp+0x130],r15
  40bde8:	mov    QWORD PTR [rsp+0x138],rax
  40bdf0:	jmp    40bcd0 <Mat_VarRead@plt+0x9930>
  40bdf5:	mov    rax,QWORD PTR [rsp+0x58]
  40bdfa:	mov    QWORD PTR [rsp+0x130],rax
  40be02:	mov    rax,QWORD PTR [rsp+0x50]
  40be07:	mov    QWORD PTR [rsp+0x138],rax
  40be0f:	jmp    40bcd0 <Mat_VarRead@plt+0x9930>
  40be14:	mov    rax,QWORD PTR [rsp+0x60]
  40be19:	add    rax,rbx
  40be1c:	mov    QWORD PTR [rsp+0x130],rax
  40be24:	mov    rax,QWORD PTR [rsp+0x68]
  40be29:	add    rax,rbx
  40be2c:	mov    QWORD PTR [rsp+0x138],rax
  40be34:	jmp    40bcd0 <Mat_VarRead@plt+0x9930>
  40be39:	mov    rax,QWORD PTR [rsp+0x70]
  40be3e:	add    rax,rbx
  40be41:	mov    QWORD PTR [rsp+0x130],rax
  40be49:	mov    rax,QWORD PTR [rsp+0x78]
  40be4e:	add    rax,rbx
  40be51:	mov    QWORD PTR [rsp+0x138],rax
  40be59:	jmp    40bcd0 <Mat_VarRead@plt+0x9930>
  40be5e:	mov    rax,QWORD PTR [rsp+0x10]
  40be63:	add    rax,rbp
  40be66:	mov    QWORD PTR [rsp+0x130],rax
  40be6e:	mov    rax,QWORD PTR [rsp+0x88]
  40be76:	add    rax,rbp
  40be79:	mov    QWORD PTR [rsp+0x138],rax
  40be81:	jmp    40bcd0 <Mat_VarRead@plt+0x9930>
  40be86:	mov    rax,QWORD PTR [rsp+0x40]
  40be8b:	mov    QWORD PTR [rsp+0x138],r13
  40be93:	mov    QWORD PTR [rsp+0x130],rax
  40be9b:	jmp    40bcd0 <Mat_VarRead@plt+0x9930>
  40bea0:	mov    rax,QWORD PTR [rsp+0x30]
  40bea5:	mov    QWORD PTR [rsp+0x130],rax
  40bead:	mov    rax,QWORD PTR [rsp+0x28]
  40beb2:	mov    QWORD PTR [rsp+0x138],rax
  40beba:	jmp    40bcd0 <Mat_VarRead@plt+0x9930>
  40bebf:	mov    rax,QWORD PTR [rsp+0x30]
  40bec4:	mov    QWORD PTR [rsp+0x138],rbp
  40becc:	mov    DWORD PTR [rsp+0xb4],0xd
  40bed7:	mov    QWORD PTR [rsp+0x130],rax
  40bedf:	jmp    40bbe0 <Mat_VarRead@plt+0x9840>
  40bee4:	mov    rax,QWORD PTR [rsp+0x38]
  40bee9:	mov    QWORD PTR [rsp+0x138],r13
  40bef1:	mov    DWORD PTR [rsp+0xb4],0x9
  40befc:	mov    QWORD PTR [rsp+0x130],rax
  40bf04:	jmp    40bbe0 <Mat_VarRead@plt+0x9840>
  40bf09:	mov    rax,QWORD PTR [rsp+0x10]
  40bf0e:	mov    QWORD PTR [rsp+0x138],r15
  40bf16:	mov    DWORD PTR [rsp+0xb4],0x7
  40bf21:	mov    QWORD PTR [rsp+0x130],rax
  40bf29:	jmp    40bbe0 <Mat_VarRead@plt+0x9840>
  40bf2e:	lea    rax,[rsp+0x1150]
  40bf36:	mov    DWORD PTR [rsp+0xb4],0x1
  40bf41:	mov    QWORD PTR [rsp+0x130],rax
  40bf49:	lea    rax,[rsp+0x1190]
  40bf51:	mov    QWORD PTR [rsp+0x138],rax
  40bf59:	jmp    40bbe0 <Mat_VarRead@plt+0x9840>
  40bf5e:	lea    rax,[rsp+0x11d0]
  40bf66:	mov    DWORD PTR [rsp+0xb4],0x2
  40bf71:	mov    QWORD PTR [rsp+0x130],rax
  40bf79:	lea    rax,[rsp+0x1210]
  40bf81:	mov    QWORD PTR [rsp+0x138],rax
  40bf89:	jmp    40bbe0 <Mat_VarRead@plt+0x9840>
  40bf8e:	mov    QWORD PTR [rsp+0x130],rbx
  40bf96:	mov    QWORD PTR [rsp+0x138],r11
  40bf9e:	mov    DWORD PTR [rsp+0xb4],0x3
  40bfa9:	jmp    40bbe0 <Mat_VarRead@plt+0x9840>
  40bfae:	mov    QWORD PTR [rsp+0x130],r10
  40bfb6:	mov    QWORD PTR [rsp+0x138],r9
  40bfbe:	mov    DWORD PTR [rsp+0xb4],0x4
  40bfc9:	jmp    40bbe0 <Mat_VarRead@plt+0x9840>
  40bfce:	mov    rax,QWORD PTR [rsp+0x20]
  40bfd3:	mov    DWORD PTR [rsp+0xb4],0x5
  40bfde:	mov    QWORD PTR [rsp+0x130],rax
  40bfe6:	mov    rax,QWORD PTR [rsp+0x8]
  40bfeb:	mov    QWORD PTR [rsp+0x138],rax
  40bff3:	jmp    40bbe0 <Mat_VarRead@plt+0x9840>
  40bff8:	mov    rax,QWORD PTR [rsp+0x18]
  40bffd:	mov    QWORD PTR [rsp+0x130],r12
  40c005:	mov    DWORD PTR [rsp+0xb4],0x6
  40c010:	mov    QWORD PTR [rsp+0x138],rax
  40c018:	jmp    40bbe0 <Mat_VarRead@plt+0x9840>
  40c01d:	mov    QWORD PTR [rsp+0x140],0x5
  40c029:	mov    QWORD PTR [rsp+0x148],0xa
  40c035:	sub    rsp,0x8
  40c039:	push   0x800
  40c03e:	mov    edx,DWORD PTR [rsp+0xc4]
  40c045:	lea    rdi,[rip+0x203e]        # 40e08a <getopt_long_only@@Base+0x10fa>
  40c04c:	mov    esi,DWORD PTR [rsp+0xb4]
  40c053:	mov    ecx,0x2
  40c058:	lea    r9,[rsp+0x140]
  40c060:	lea    r8,[rsp+0x150]
  40c068:	call   4020d0 <Mat_VarCreate@plt>
  40c06d:	mov    rdi,QWORD PTR [rsp+0xb8]
  40c075:	mov    edx,DWORD PTR [rip+0xa4a9]        # 416524 <opterr@@Base+0x10>
  40c07b:	mov    rsi,rax
  40c07e:	mov    rbp,rax
  40c081:	call   4020f0 <Mat_VarWrite@plt>
  40c086:	mov    rdi,rbp
  40c089:	mov    ebx,eax
  40c08b:	call   402230 <Mat_VarFree@plt>
  40c090:	pop    rcx
  40c091:	pop    rsi
  40c092:	jmp    40bd7c <Mat_VarRead@plt+0x99dc>
  40c097:	lea    rdx,[rsp+0x1150]
  40c09f:	mov    rdi,QWORD PTR [rsp+0x28]
  40c0a4:	mov    r8,QWORD PTR [rsp+0x30]
  40c0a9:	mov    rax,QWORD PTR [rsp+0x38]
  40c0ae:	mov    QWORD PTR [rsp+0x40],rbx
  40c0b3:	mov    rcx,r14
  40c0b6:	mov    QWORD PTR [rsp+0xf0],rdx
  40c0be:	lea    rdx,[rsp+0x1190]
  40c0c6:	mov    QWORD PTR [rsp+0x50],r9
  40c0cb:	mov    rsi,rdi
  40c0ce:	mov    QWORD PTR [rsp+0x100],rbx
  40c0d6:	mov    rdi,rbp
  40c0d9:	mov    QWORD PTR [rsp+0xd8],rdx
  40c0e1:	lea    rdx,[rsp+0x11d0]
  40c0e9:	mov    rbx,r10
  40c0ec:	mov    QWORD PTR [rsp+0x118],rbp
  40c0f4:	mov    QWORD PTR [rsp+0x128],r10
  40c0fc:	mov    QWORD PTR [rsp+0xe0],rdx
  40c104:	mov    rbp,QWORD PTR [rsp+0x50]
  40c109:	lea    rdx,[rsp+0x1210]
  40c111:	mov    r10,QWORD PTR [rsp+0x40]
  40c116:	mov    QWORD PTR [rsp+0xf8],r14
  40c11e:	mov    r14,r8
  40c121:	mov    QWORD PTR [rsp+0xc8],r12
  40c129:	mov    QWORD PTR [rsp+0x108],r9
  40c131:	mov    r8,rax
  40c134:	mov    r9,r13
  40c137:	mov    QWORD PTR [rsp+0x120],r13
  40c13f:	mov    QWORD PTR [rsp+0x140],0x1
  40c14b:	mov    QWORD PTR [rsp+0x148],0xa
  40c157:	mov    QWORD PTR [rsp+0x48],r11
  40c15c:	mov    r12,rcx
  40c15f:	mov    QWORD PTR [rsp+0xc0],0x0
  40c16b:	mov    QWORD PTR [rsp+0xb8],0x0
  40c177:	mov    r13,rsi
  40c17a:	mov    QWORD PTR [rsp+0x98],0x1
  40c186:	mov    QWORD PTR [rsp+0xe8],rdx
  40c18e:	mov    QWORD PTR [rsp+0xd0],r15
  40c196:	mov    QWORD PTR [rsp+0x110],r11
  40c19e:	xchg   ax,ax
  40c1a0:	mov    rcx,QWORD PTR [rsp+0x98]
  40c1a8:	mov    rsi,QWORD PTR [rsp+0xb8]
  40c1b0:	mov    r15,QWORD PTR [rsp+0x10]
  40c1b5:	mov    eax,ecx
  40c1b7:	mov    edx,ecx
  40c1b9:	add    eax,0x32
  40c1bc:	add    r15,rsi
  40c1bf:	mov    DWORD PTR [rsp+0x40],eax
  40c1c3:	mov    rax,QWORD PTR [rsp+0xd0]
  40c1cb:	mov    QWORD PTR [rsp+0x90],r15
  40c1d3:	add    rax,rsi
  40c1d6:	mov    QWORD PTR [rsp+0x48],rax
  40c1db:	mov    rax,QWORD PTR [rsp+0x20]
  40c1e0:	add    rax,rsi
  40c1e3:	mov    QWORD PTR [rsp+0x50],rax
  40c1e8:	mov    rax,QWORD PTR [rsp+0x8]
  40c1ed:	add    rax,rsi
  40c1f0:	mov    QWORD PTR [rsp+0x58],rax
  40c1f5:	mov    rax,QWORD PTR [rsp+0xc8]
  40c1fd:	add    rax,rsi
  40c200:	mov    QWORD PTR [rsp+0x60],rax
  40c205:	mov    rax,QWORD PTR [rsp+0x18]
  40c20a:	add    rax,rsi
  40c20d:	mov    rsi,QWORD PTR [rsp+0xc0]
  40c215:	mov    QWORD PTR [rsp+0x68],rax
  40c21a:	mov    rax,QWORD PTR [rsp+0xf0]
  40c222:	add    rax,rsi
  40c225:	mov    QWORD PTR [rsp+0x70],rax
  40c22a:	mov    rax,QWORD PTR [rsp+0xd8]
  40c232:	add    rax,rsi
  40c235:	mov    QWORD PTR [rsp+0x78],rax
  40c23a:	mov    rax,QWORD PTR [rsp+0xe0]
  40c242:	add    rax,rsi
  40c245:	mov    QWORD PTR [rsp+0x80],rax
  40c24d:	mov    rax,QWORD PTR [rsp+0xe8]
  40c255:	add    rax,rsi
  40c258:	mov    QWORD PTR [rsp+0x88],rax
  40c260:	xor    eax,eax
  40c262:	nop    WORD PTR [rax+rax*1+0x0]
  40c268:	vxorpd xmm0,xmm0,xmm0
  40c26c:	lea    esi,[rdx+0x32]
  40c26f:	mov    r15,QWORD PTR [rsp+0x90]
  40c277:	mov    WORD PTR [r10+rax*2],dx
  40c27c:	mov    WORD PTR [rbx+rax*2],dx
  40c280:	mov    QWORD PTR [r12+rax*8],rcx
  40c284:	mov    QWORD PTR [r14+rax*8],rcx
  40c288:	vcvtsi2sd xmm0,xmm0,edx
  40c28c:	vmovsd QWORD PTR [r8+rax*8],xmm0
  40c292:	vxorpd xmm0,xmm0,xmm0
  40c296:	vcvtsi2sd xmm0,xmm0,esi
  40c29a:	vmovsd QWORD PTR [r9+rax*8],xmm0
  40c2a0:	vxorps xmm0,xmm0,xmm0
  40c2a4:	vcvtsi2ss xmm0,xmm0,edx
  40c2a8:	vmovss DWORD PTR [r15+rax*4],xmm0
  40c2ae:	mov    r15,QWORD PTR [rsp+0x48]
  40c2b3:	vxorps xmm0,xmm0,xmm0
  40c2b7:	vcvtsi2ss xmm0,xmm0,esi
  40c2bb:	vmovss DWORD PTR [r15+rax*4],xmm0
  40c2c1:	mov    r15,QWORD PTR [rsp+0x50]
  40c2c6:	mov    DWORD PTR [r15+rax*4],edx
  40c2ca:	mov    r15,QWORD PTR [rsp+0x58]
  40c2cf:	mov    DWORD PTR [r15+rax*4],esi
  40c2d3:	mov    r15,QWORD PTR [rsp+0x60]
  40c2d8:	mov    DWORD PTR [r15+rax*4],edx
  40c2dc:	mov    r15,QWORD PTR [rsp+0x68]
  40c2e1:	mov    DWORD PTR [r15+rax*4],esi
  40c2e5:	lea    esi,[rdx+0x32]
  40c2e8:	mov    r15,QWORD PTR [rsp+0x78]
  40c2ed:	mov    WORD PTR [r11+rax*2],si
  40c2f2:	mov    WORD PTR [rbp+rax*2+0x0],si
  40c2f7:	mov    rsi,QWORD PTR [rsp+0x70]
  40c2fc:	mov    BYTE PTR [rsi+rax*1],dl
  40c2ff:	lea    esi,[rdx+0x32]
  40c302:	mov    BYTE PTR [r15+rax*1],sil
  40c306:	mov    r15,QWORD PTR [rsp+0x80]
  40c30e:	mov    BYTE PTR [r15+rax*1],dl
  40c312:	mov    r15,QWORD PTR [rsp+0x88]
  40c31a:	add    edx,0x5
  40c31d:	mov    BYTE PTR [r15+rax*1],sil
  40c321:	lea    rsi,[rcx+0x32]
  40c325:	add    rcx,0x5
  40c329:	mov    QWORD PTR [r13+rax*8+0x0],rsi
  40c32e:	mov    QWORD PTR [rdi+rax*8],rsi
  40c332:	add    rax,0x1
  40c336:	cmp    edx,DWORD PTR [rsp+0x40]
  40c33a:	jne    40c268 <Mat_VarRead@plt+0x9ec8>
  40c340:	add    QWORD PTR [rsp+0x98],0x1
  40c349:	add    r8,0x50
  40c34d:	add    r9,0x50
  40c351:	mov    rax,QWORD PTR [rsp+0x98]
  40c359:	add    r10,0x14
  40c35d:	add    r11,0x14
  40c361:	add    rbx,0x14
  40c365:	add    rbp,0x14
  40c369:	add    r12,0x50
  40c36d:	add    r13,0x50
  40c371:	add    r14,0x50
  40c375:	add    rdi,0x50
  40c379:	add    QWORD PTR [rsp+0xb8],0x28
  40c382:	add    QWORD PTR [rsp+0xc0],0xa
  40c38b:	cmp    rax,0x6
  40c38f:	jne    40c1a0 <Mat_VarRead@plt+0x9e00>
  40c395:	mov    r14,QWORD PTR [rsp+0xf8]
  40c39d:	mov    r12,QWORD PTR [rsp+0xc8]
  40c3a5:	mov    rbx,QWORD PTR [rsp+0x100]
  40c3ad:	mov    r15,QWORD PTR [rsp+0xd0]
  40c3b5:	mov    r9,QWORD PTR [rsp+0x108]
  40c3bd:	mov    r11,QWORD PTR [rsp+0x110]
  40c3c5:	mov    rbp,QWORD PTR [rsp+0x118]
  40c3cd:	mov    r13,QWORD PTR [rsp+0x120]
  40c3d5:	mov    r10,QWORD PTR [rsp+0x128]
  40c3dd:	jmp    40bc23 <Mat_VarRead@plt+0x9883>
  40c3e2:	mov    rdi,QWORD PTR [rsp+0xa8]
  40c3ea:	mov    ebx,0x1
  40c3ef:	call   402290 <Mat_Close@plt>
  40c3f4:	jmp    40bb8d <Mat_VarRead@plt+0x97ed>
  40c3f9:	call   402140 <__stack_chk_fail@plt>
  40c3fe:	xchg   ax,ax
  40c400:	push   r13
  40c402:	push   r12
  40c404:	mov    r8d,edx
  40c407:	push   rbp
  40c408:	mov    ebp,esi
  40c40a:	push   rbx
  40c40b:	sub    ebp,edi
  40c40d:	mov    ebx,edx
  40c40f:	mov    eax,ebp
  40c411:	sub    ebx,esi
  40c413:	cdq    
  40c414:	idiv   ebx
  40c416:	test   edx,edx
  40c418:	je     40c4a9 <Mat_VarRead@plt+0xa109>
  40c41e:	mov    r12d,edx
  40c421:	mov    eax,ebx
  40c423:	jmp    40c42b <Mat_VarRead@plt+0xa08b>
  40c425:	nop    DWORD PTR [rax]
  40c428:	mov    r12d,edx
  40c42b:	cdq    
  40c42c:	idiv   r12d
  40c42f:	mov    eax,r12d
  40c432:	test   edx,edx
  40c434:	jne    40c428 <Mat_VarRead@plt+0xa088>
  40c436:	mov    eax,r8d
  40c439:	sub    eax,edi
  40c43b:	cdq    
  40c43c:	idiv   r12d
  40c43f:	test   r12d,r12d
  40c442:	jle    40c4a2 <Mat_VarRead@plt+0xa102>
  40c444:	movsxd rdx,esi
  40c447:	mov    r13d,esi
  40c44a:	add    r12d,esi
  40c44d:	lea    r11,[rcx+rdx*8]
  40c451:	nop    DWORD PTR [rax+0x0]
  40c458:	test   eax,eax
  40c45a:	mov    edx,r13d
  40c45d:	jle    40c495 <Mat_VarRead@plt+0xa0f5>
  40c45f:	mov    r10,QWORD PTR [r11]
  40c462:	xor    edi,edi
  40c464:	nop    DWORD PTR [rax+0x0]
  40c468:	mov    r8d,edx
  40c46b:	lea    r9d,[rdx+rbx*1]
  40c46f:	sub    r8d,ebp
  40c472:	cmp    esi,edx
  40c474:	mov    edx,r8d
  40c477:	cmovg  edx,r9d
  40c47b:	add    edi,0x1
  40c47e:	movsxd r8,edx
  40c481:	cmp    eax,edi
  40c483:	lea    r9,[rcx+r8*8]
  40c487:	mov    r8,QWORD PTR [r9]
  40c48a:	mov    QWORD PTR [r9],r10
  40c48d:	mov    QWORD PTR [r11],r8
  40c490:	mov    r10,r8
  40c493:	jne    40c468 <Mat_VarRead@plt+0xa0c8>
  40c495:	add    r13d,0x1
  40c499:	add    r11,0x8
  40c49d:	cmp    r13d,r12d
  40c4a0:	jne    40c458 <Mat_VarRead@plt+0xa0b8>
  40c4a2:	pop    rbx
  40c4a3:	pop    rbp
  40c4a4:	pop    r12
  40c4a6:	pop    r13
  40c4a8:	ret    
  40c4a9:	mov    r12d,ebx
  40c4ac:	jmp    40c436 <Mat_VarRead@plt+0xa096>
  40c4ae:	xchg   ax,ax
  40c4b0:	push   r15
  40c4b2:	push   r14
  40c4b4:	mov    r14d,r8d
  40c4b7:	push   r13
  40c4b9:	push   r12
  40c4bb:	push   rbp
  40c4bc:	push   rbx
  40c4bd:	sub    rsp,0x58
  40c4c1:	mov    eax,DWORD PTR [rip+0xa039]        # 416500 <getopt_long_only@@Base+0x9570>
  40c4c7:	mov    r13,QWORD PTR [rip+0xa04a]        # 416518 <opterr@@Base+0x4>
  40c4ce:	mov    QWORD PTR [rsp+0x38],rcx
  40c4d3:	lea    rcx,[rip+0x658e]        # 412a68 <getopt_long_only@@Base+0x5ad8>
  40c4da:	mov    QWORD PTR [rsp+0x48],rdi
  40c4df:	mov    QWORD PTR [rsp+0x30],rsi
  40c4e4:	mov    QWORD PTR [rsp+0x10],rdx
  40c4e9:	cmp    eax,0x1
  40c4ec:	mov    QWORD PTR [rsp+0x20],rcx
  40c4f1:	je     40c51d <Mat_VarRead@plt+0xa17d>
  40c4f3:	lea    rcx,[rip+0x6571]        # 412a6b <getopt_long_only@@Base+0x5adb>
  40c4fa:	cmp    eax,0x2
  40c4fd:	mov    QWORD PTR [rsp+0x20],rcx
  40c502:	je     40c51d <Mat_VarRead@plt+0xa17d>
  40c504:	test   eax,eax
  40c506:	lea    rdx,[rip+0x655c]        # 412a69 <getopt_long_only@@Base+0x5ad9>
  40c50d:	lea    rax,[rip+0x1bd9]        # 40e0ed <getopt_long_only@@Base+0x115d>
  40c514:	cmove  rax,rdx
  40c518:	mov    QWORD PTR [rsp+0x20],rax
  40c51d:	mov    rax,0x416510
  40c524:	mov    rcx,0x416510
  40c52b:	mov    esi,0x3d
  40c530:	mov    rdi,r13
  40c533:	mov    DWORD PTR [rsp+0xc],r9d
  40c538:	mov    eax,DWORD PTR [rax]
  40c53a:	mov    DWORD PTR [rsp+0x40],eax
  40c53e:	add    eax,0x1
  40c541:	mov    DWORD PTR [rsp+0x44],eax
  40c545:	mov    DWORD PTR [rcx],eax
  40c547:	call   402160 <strchr@plt>
  40c54c:	test   rax,rax
  40c54f:	mov    QWORD PTR [rsp+0x28],rax
  40c554:	mov    r9d,DWORD PTR [rsp+0xc]
  40c559:	je     40c740 <Mat_VarRead@plt+0xa3a0>
  40c55f:	mov    r12,rax
  40c562:	add    rax,0x1
  40c566:	sub    r12,r13
  40c569:	mov    QWORD PTR [rsp+0x28],rax
  40c56e:	mov    rax,QWORD PTR [rsp+0x10]
  40c573:	mov    r15,QWORD PTR [rax]
  40c576:	test   r15,r15
  40c579:	je     40c791 <Mat_VarRead@plt+0xa3f1>
  40c57f:	and    r9d,0x4
  40c583:	lea    rbx,[rax+0x8]
  40c587:	mov    DWORD PTR [rsp+0x18],0x0
  40c58f:	mov    DWORD PTR [rsp+0xc],0xffffffff
  40c597:	xor    ebp,ebp
  40c599:	mov    DWORD PTR [rsp+0x1c],r9d
  40c59e:	jmp    40c5b6 <Mat_VarRead@plt+0xa216>
  40c5a0:	cmp    r12,0x1
  40c5a4:	jne    40c5de <Mat_VarRead@plt+0xa23e>
  40c5a6:	add    rbx,0x20
  40c5aa:	mov    r15,QWORD PTR [rbx-0x8]
  40c5ae:	add    ebp,0x1
  40c5b1:	test   r15,r15
  40c5b4:	je     40c628 <Mat_VarRead@plt+0xa288>
  40c5b6:	mov    rdx,r12
  40c5b9:	mov    rsi,r15
  40c5bc:	mov    rdi,r13
  40c5bf:	call   402090 <strncmp@plt>
  40c5c4:	test   eax,eax
  40c5c6:	jne    40c5a6 <Mat_VarRead@plt+0xa206>
  40c5c8:	mov    rdi,r15
  40c5cb:	call   402120 <strlen@plt>
  40c5d0:	cmp    r12,rax
  40c5d3:	je     40c6d0 <Mat_VarRead@plt+0xa330>
  40c5d9:	test   r14d,r14d
  40c5dc:	jne    40c5a0 <Mat_VarRead@plt+0xa200>
  40c5de:	movsxd rax,DWORD PTR [rsp+0xc]
  40c5e3:	cmp    eax,0xffffffff
  40c5e6:	je     40c688 <Mat_VarRead@plt+0xa2e8>
  40c5ec:	mov    r8d,DWORD PTR [rsp+0x1c]
  40c5f1:	test   r8d,r8d
  40c5f4:	jne    40c60a <Mat_VarRead@plt+0xa26a>
  40c5f6:	shl    rax,0x5
  40c5fa:	add    rax,QWORD PTR [rsp+0x10]
  40c5ff:	mov    ecx,DWORD PTR [rax+0x8]
  40c602:	cmp    DWORD PTR [rbx],ecx
  40c604:	je     40c698 <Mat_VarRead@plt+0xa2f8>
  40c60a:	add    rbx,0x20
  40c60e:	mov    r15,QWORD PTR [rbx-0x8]
  40c612:	add    ebp,0x1
  40c615:	mov    DWORD PTR [rsp+0x18],0x1
  40c61d:	test   r15,r15
  40c620:	jne    40c5b6 <Mat_VarRead@plt+0xa216>
  40c622:	nop    WORD PTR [rax+rax*1+0x0]
  40c628:	mov    edi,DWORD PTR [rsp+0x18]
  40c62c:	test   edi,edi
  40c62e:	je     40c6bf <Mat_VarRead@plt+0xa31f>
  40c634:	mov    rax,0x416514
  40c63b:	mov    esi,DWORD PTR [rax]
  40c63d:	test   esi,esi
  40c63f:	je     40c664 <Mat_VarRead@plt+0xa2c4>
  40c641:	mov    rax,QWORD PTR [rsp+0x30]
  40c646:	cmp    BYTE PTR [rax],0x3a
  40c649:	je     40c664 <Mat_VarRead@plt+0xa2c4>
  40c64b:	mov    rsi,QWORD PTR [rsp+0x20]
  40c650:	lea    rdi,[rip+0x6479]        # 412ad0 <getopt_long_only@@Base+0x5b40>
  40c657:	mov    rcx,r13
  40c65a:	mov    edx,r12d
  40c65d:	xor    eax,eax
  40c65f:	call   402170 <warnx@plt>
  40c664:	mov    rax,0x41650c
  40c66b:	mov    DWORD PTR [rax],0x0
  40c671:	mov    eax,0x3f
  40c676:	add    rsp,0x58
  40c67a:	pop    rbx
  40c67b:	pop    rbp
  40c67c:	pop    r12
  40c67e:	pop    r13
  40c680:	pop    r14
  40c682:	pop    r15
  40c684:	ret    
  40c685:	nop    DWORD PTR [rax]
  40c688:	mov    DWORD PTR [rsp+0xc],ebp
  40c68c:	jmp    40c5a6 <Mat_VarRead@plt+0xa206>
  40c691:	nop    DWORD PTR [rax+0x0]
  40c698:	mov    rcx,QWORD PTR [rax+0x10]
  40c69c:	cmp    QWORD PTR [rbx+0x8],rcx
  40c6a0:	jne    40c60a <Mat_VarRead@plt+0xa26a>
  40c6a6:	mov    eax,DWORD PTR [rax+0x18]
  40c6a9:	cmp    DWORD PTR [rbx+0x10],eax
  40c6ac:	mov    eax,0x1
  40c6b1:	cmove  eax,DWORD PTR [rsp+0x18]
  40c6b6:	mov    DWORD PTR [rsp+0x18],eax
  40c6ba:	jmp    40c5a6 <Mat_VarRead@plt+0xa206>
  40c6bf:	cmp    DWORD PTR [rsp+0xc],0xffffffff
  40c6c4:	je     40c791 <Mat_VarRead@plt+0xa3f1>
  40c6ca:	mov    ebp,DWORD PTR [rsp+0xc]
  40c6ce:	xchg   ax,ax
  40c6d0:	movsxd rbx,ebp
  40c6d3:	shl    rbx,0x5
  40c6d7:	add    rbx,QWORD PTR [rsp+0x10]
  40c6dc:	mov    eax,DWORD PTR [rbx+0x8]
  40c6df:	test   eax,eax
  40c6e1:	jne    40c75a <Mat_VarRead@plt+0xa3ba>
  40c6e3:	cmp    QWORD PTR [rsp+0x28],0x0
  40c6e9:	je     40c75a <Mat_VarRead@plt+0xa3ba>
  40c6eb:	mov    rax,0x416514
  40c6f2:	mov    ecx,DWORD PTR [rax]
  40c6f4:	test   ecx,ecx
  40c6f6:	je     40c71b <Mat_VarRead@plt+0xa37b>
  40c6f8:	mov    rax,QWORD PTR [rsp+0x30]
  40c6fd:	cmp    BYTE PTR [rax],0x3a
  40c700:	je     40c71b <Mat_VarRead@plt+0xa37b>
  40c702:	mov    rsi,QWORD PTR [rsp+0x20]
  40c707:	lea    rdi,[rip+0x6392]        # 412aa0 <getopt_long_only@@Base+0x5b10>
  40c70e:	mov    rcx,r13
  40c711:	mov    edx,r12d
  40c714:	xor    eax,eax
  40c716:	call   402170 <warnx@plt>
  40c71b:	cmp    QWORD PTR [rbx+0x10],0x0
  40c720:	jne    40c664 <Mat_VarRead@plt+0xa2c4>
  40c726:	mov    rax,0x41650c
  40c72d:	mov    edx,DWORD PTR [rbx+0x18]
  40c730:	mov    DWORD PTR [rax],edx
  40c732:	mov    eax,0x3f
  40c737:	jmp    40c676 <Mat_VarRead@plt+0xa2d6>
  40c73c:	nop    DWORD PTR [rax+0x0]
  40c740:	mov    rdi,r13
  40c743:	mov    DWORD PTR [rsp+0xc],r9d
  40c748:	call   402120 <strlen@plt>
  40c74d:	mov    r9d,DWORD PTR [rsp+0xc]
  40c752:	mov    r12,rax
  40c755:	jmp    40c56e <Mat_VarRead@plt+0xa1ce>
  40c75a:	lea    edx,[rax-0x1]
  40c75d:	cmp    edx,0x1
  40c760:	jbe    40c7d4 <Mat_VarRead@plt+0xa434>
  40c762:	mov    rax,QWORD PTR [rsp+0x38]
  40c767:	test   rax,rax
  40c76a:	je     40c76e <Mat_VarRead@plt+0xa3ce>
  40c76c:	mov    DWORD PTR [rax],ebp
  40c76e:	mov    rax,QWORD PTR [rbx+0x10]
  40c772:	test   rax,rax
  40c775:	je     40c867 <Mat_VarRead@plt+0xa4c7>
  40c77b:	mov    edx,DWORD PTR [rbx+0x18]
  40c77e:	mov    DWORD PTR [rax],edx
  40c780:	add    rsp,0x58
  40c784:	xor    eax,eax
  40c786:	pop    rbx
  40c787:	pop    rbp
  40c788:	pop    r12
  40c78a:	pop    r13
  40c78c:	pop    r14
  40c78e:	pop    r15
  40c790:	ret    
  40c791:	test   r14d,r14d
  40c794:	jne    40c8ad <Mat_VarRead@plt+0xa50d>
  40c79a:	mov    rax,0x416514
  40c7a1:	mov    eax,DWORD PTR [rax]
  40c7a3:	test   eax,eax
  40c7a5:	je     40c664 <Mat_VarRead@plt+0xa2c4>
  40c7ab:	mov    rax,QWORD PTR [rsp+0x30]
  40c7b0:	cmp    BYTE PTR [rax],0x3a
  40c7b3:	je     40c664 <Mat_VarRead@plt+0xa2c4>
  40c7b9:	mov    rsi,QWORD PTR [rsp+0x20]
  40c7be:	lea    rdi,[rip+0x62bb]        # 412a80 <getopt_long_only@@Base+0x5af0>
  40c7c5:	mov    rdx,r13
  40c7c8:	xor    eax,eax
  40c7ca:	call   402170 <warnx@plt>
  40c7cf:	jmp    40c664 <Mat_VarRead@plt+0xa2c4>
  40c7d4:	mov    rsi,QWORD PTR [rsp+0x28]
  40c7d9:	test   rsi,rsi
  40c7dc:	je     40c86f <Mat_VarRead@plt+0xa4cf>
  40c7e2:	mov    rdx,0x416530
  40c7e9:	cmp    eax,0x1
  40c7ec:	mov    QWORD PTR [rdx],rsi
  40c7ef:	jne    40c762 <Mat_VarRead@plt+0xa3c2>
  40c7f5:	cmp    QWORD PTR [rsp+0x28],0x0
  40c7fb:	jne    40c762 <Mat_VarRead@plt+0xa3c2>
  40c801:	mov    rax,0x416514
  40c808:	mov    edx,DWORD PTR [rax]
  40c80a:	test   edx,edx
  40c80c:	je     40c82e <Mat_VarRead@plt+0xa48e>
  40c80e:	mov    rax,QWORD PTR [rsp+0x30]
  40c813:	cmp    BYTE PTR [rax],0x3a
  40c816:	je     40c82e <Mat_VarRead@plt+0xa48e>
  40c818:	mov    rsi,QWORD PTR [rsp+0x20]
  40c81d:	lea    rdi,[rip+0x62dc]        # 412b00 <getopt_long_only@@Base+0x5b70>
  40c824:	mov    rdx,r13
  40c827:	xor    eax,eax
  40c829:	call   402170 <warnx@plt>
  40c82e:	cmp    QWORD PTR [rbx+0x10],0x0
  40c833:	je     40c8c4 <Mat_VarRead@plt+0xa524>
  40c839:	mov    rax,0x41650c
  40c840:	mov    DWORD PTR [rax],0x0
  40c846:	mov    rax,0x416510
  40c84d:	sub    DWORD PTR [rax],0x1
  40c850:	mov    rax,QWORD PTR [rsp+0x30]
  40c855:	cmp    BYTE PTR [rax],0x3a
  40c858:	setne  al
  40c85b:	movzx  eax,al
  40c85e:	lea    eax,[rax+rax*4+0x3a]
  40c862:	jmp    40c676 <Mat_VarRead@plt+0xa2d6>
  40c867:	mov    eax,DWORD PTR [rbx+0x18]
  40c86a:	jmp    40c676 <Mat_VarRead@plt+0xa2d6>
  40c86f:	cmp    eax,0x1
  40c872:	jne    40c762 <Mat_VarRead@plt+0xa3c2>
  40c878:	mov    eax,DWORD PTR [rsp+0x40]
  40c87c:	mov    rcx,0x416510
  40c883:	add    eax,0x2
  40c886:	mov    DWORD PTR [rcx],eax
  40c888:	movsxd rax,DWORD PTR [rsp+0x44]
  40c88d:	mov    rcx,QWORD PTR [rsp+0x48]
  40c892:	mov    rax,QWORD PTR [rcx+rax*8]
  40c896:	mov    rdx,rax
  40c899:	mov    QWORD PTR [rsp+0x28],rax
  40c89e:	mov    rax,0x416530
  40c8a5:	mov    QWORD PTR [rax],rdx
  40c8a8:	jmp    40c7f5 <Mat_VarRead@plt+0xa455>
  40c8ad:	mov    rax,0x416510
  40c8b4:	mov    edx,DWORD PTR [rsp+0x40]
  40c8b8:	mov    DWORD PTR [rax],edx
  40c8ba:	mov    eax,0xffffffff
  40c8bf:	jmp    40c676 <Mat_VarRead@plt+0xa2d6>
  40c8c4:	mov    edx,DWORD PTR [rbx+0x18]
  40c8c7:	mov    rax,0x41650c
  40c8ce:	mov    DWORD PTR [rax],edx
  40c8d0:	jmp    40c846 <Mat_VarRead@plt+0xa4a6>
  40c8d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c8e0:	push   r15
  40c8e2:	push   r14
  40c8e4:	push   r13
  40c8e6:	push   r12
  40c8e8:	push   rbp
  40c8e9:	push   rbx
  40c8ea:	sub    rsp,0x48
  40c8ee:	test   rdx,rdx
  40c8f1:	mov    QWORD PTR [rsp+0x18],rdx
  40c8f6:	mov    QWORD PTR [rsp+0x20],rcx
  40c8fb:	mov    QWORD PTR [rsp+0x30],r8
  40c900:	mov    DWORD PTR [rsp+0x14],r9d
  40c905:	je     40cb13 <Mat_VarRead@plt+0xa773>
  40c90b:	mov    r13d,edi
  40c90e:	lea    rdi,[rip+0x615a]        # 412a6f <getopt_long_only@@Base+0x5adf>
  40c915:	mov    r15,rsi
  40c918:	call   402040 <getenv@plt>
  40c91d:	mov    QWORD PTR [rsp+0x38],rax
  40c922:	mov    rax,QWORD PTR [rsp+0x18]
  40c927:	movzx  eax,BYTE PTR [rax]
  40c92a:	cmp    al,0x2d
  40c92c:	je     40cb70 <Mat_VarRead@plt+0xa7d0>
  40c932:	cmp    al,0x2b
  40c934:	je     40c93e <Mat_VarRead@plt+0xa59e>
  40c936:	cmp    QWORD PTR [rsp+0x38],0x0
  40c93c:	je     40c943 <Mat_VarRead@plt+0xa5a3>
  40c93e:	and    DWORD PTR [rsp+0x14],0xfffffffe
  40c943:	sub    eax,0x2b
  40c946:	test   al,0xfd
  40c948:	je     40cb75 <Mat_VarRead@plt+0xa7d5>
  40c94e:	mov    rbp,0x416510
  40c955:	mov    rax,0x416528
  40c95c:	mov    esi,DWORD PTR [rbp+0x0]
  40c95f:	test   esi,esi
  40c961:	je     40cb30 <Mat_VarRead@plt+0xa790>
  40c967:	mov    ecx,DWORD PTR [rax]
  40c969:	mov    rdi,0x416530
  40c970:	test   ecx,ecx
  40c972:	mov    QWORD PTR [rsp+0x28],rdi
  40c977:	mov    QWORD PTR [rdi],0x0
  40c97e:	jne    40cb55 <Mat_VarRead@plt+0xa7b5>
  40c984:	mov    r14d,DWORD PTR [rsp+0x14]
  40c989:	lea    r9,[rip+0x175d]        # 40e0ed <getopt_long_only@@Base+0x115d>
  40c990:	mov    rbx,rax
  40c993:	mov    r8d,r14d
  40c996:	and    r14d,0x1
  40c99a:	and    r8d,0x2
  40c99e:	mov    r12d,r8d
  40c9a1:	nop    DWORD PTR [rax+0x0]
  40c9a8:	test   ecx,ecx
  40c9aa:	jne    40c9bb <Mat_VarRead@plt+0xa61b>
  40c9ac:	mov    rax,QWORD PTR [rip+0x9b65]        # 416518 <opterr@@Base+0x4>
  40c9b3:	movsx  esi,BYTE PTR [rax]
  40c9b6:	test   sil,sil
  40c9b9:	jne    40ca32 <Mat_VarRead@plt+0xa692>
  40c9bb:	mov    edx,DWORD PTR [rbp+0x0]
  40c9be:	mov    DWORD PTR [rbx],0x0
  40c9c4:	cmp    edx,r13d
  40c9c7:	jge    40cac8 <Mat_VarRead@plt+0xa728>
  40c9cd:	movsxd rax,edx
  40c9d0:	mov    rcx,QWORD PTR [r15+rax*8]
  40c9d4:	cmp    BYTE PTR [rcx],0x2d
  40c9d7:	mov    QWORD PTR [rip+0x9b3a],rcx        # 416518 <opterr@@Base+0x4>
  40c9de:	je     40cbe8 <Mat_VarRead@plt+0xa848>
  40c9e4:	test   r12d,r12d
  40c9e7:	mov    QWORD PTR [rip+0x9b2a],r9        # 416518 <opterr@@Base+0x4>
  40c9ee:	jne    40cc60 <Mat_VarRead@plt+0xa8c0>
  40c9f4:	test   r14d,r14d
  40c9f7:	je     40cb13 <Mat_VarRead@plt+0xa773>
  40c9fd:	mov    r8d,DWORD PTR [rip+0x9b04]        # 416508 <getopt_long_only@@Base+0x9578>
  40ca04:	cmp    r8d,0xffffffff
  40ca08:	je     40cbd0 <Mat_VarRead@plt+0xa830>
  40ca0e:	mov    eax,DWORD PTR [rip+0x9af0]        # 416504 <getopt_long_only@@Base+0x9574>
  40ca14:	cmp    eax,0xffffffff
  40ca17:	jne    40cb80 <Mat_VarRead@plt+0xa7e0>
  40ca1d:	mov    rax,QWORD PTR [rip+0x9af4]        # 416518 <opterr@@Base+0x4>
  40ca24:	add    edx,0x1
  40ca27:	mov    DWORD PTR [rbp+0x0],edx
  40ca2a:	movsx  esi,BYTE PTR [rax]
  40ca2d:	test   sil,sil
  40ca30:	je     40c9bb <Mat_VarRead@plt+0xa61b>
  40ca32:	mov    r12,rax
  40ca35:	cmp    QWORD PTR [rsp+0x20],0x0
  40ca3b:	je     40cc9b <Mat_VarRead@plt+0xa8fb>
  40ca41:	movsxd rax,DWORD PTR [rbp+0x0]
  40ca45:	cmp    QWORD PTR [r15+rax*8],r12
  40ca49:	je     40cc9b <Mat_VarRead@plt+0xa8fb>
  40ca4f:	cmp    sil,0x2d
  40ca53:	je     40cc42 <Mat_VarRead@plt+0xa8a2>
  40ca59:	test   BYTE PTR [rsp+0x14],0x4
  40ca5e:	je     40cc9b <Mat_VarRead@plt+0xa8fb>
  40ca64:	xor    r8d,r8d
  40ca67:	cmp    sil,0x3a
  40ca6b:	mov    DWORD PTR [rip+0x9a8b],0x0        # 416500 <getopt_long_only@@Base+0x9570>
  40ca75:	je     40ca8b <Mat_VarRead@plt+0xa6eb>
  40ca77:	mov    rdi,QWORD PTR [rsp+0x18]
  40ca7c:	call   402160 <strchr@plt>
  40ca81:	xor    r8d,r8d
  40ca84:	test   rax,rax
  40ca87:	setne  r8b
  40ca8b:	mov    r9d,DWORD PTR [rsp+0x14]
  40ca90:	mov    rcx,QWORD PTR [rsp+0x30]
  40ca95:	mov    rdi,r15
  40ca98:	mov    rdx,QWORD PTR [rsp+0x20]
  40ca9d:	mov    rsi,QWORD PTR [rsp+0x18]
  40caa2:	call   40c4b0 <Mat_VarRead@plt+0xa110>
  40caa7:	cmp    eax,0xffffffff
  40caaa:	mov    ebx,eax
  40caac:	je     40cc8f <Mat_VarRead@plt+0xa8ef>
  40cab2:	lea    rax,[rip+0x1634]        # 40e0ed <getopt_long_only@@Base+0x115d>
  40cab9:	mov    QWORD PTR [rip+0x9a58],rax        # 416518 <opterr@@Base+0x4>
  40cac0:	jmp    40cb18 <Mat_VarRead@plt+0xa778>
  40cac2:	nop    WORD PTR [rax+rax*1+0x0]
  40cac8:	mov    ebx,DWORD PTR [rip+0x9a36]        # 416504 <getopt_long_only@@Base+0x9574>
  40cace:	lea    rax,[rip+0x1618]        # 40e0ed <getopt_long_only@@Base+0x115d>
  40cad5:	mov    QWORD PTR [rip+0x9a3c],rax        # 416518 <opterr@@Base+0x4>
  40cadc:	cmp    ebx,0xffffffff
  40cadf:	je     40cc78 <Mat_VarRead@plt+0xa8d8>
  40cae5:	mov    r12d,DWORD PTR [rip+0x9a1c]        # 416508 <getopt_long_only@@Base+0x9578>
  40caec:	mov    esi,ebx
  40caee:	mov    rcx,r15
  40caf1:	mov    edi,r12d
  40caf4:	sub    ebx,r12d
  40caf7:	call   40c400 <Mat_VarRead@plt+0xa060>
  40cafc:	sub    DWORD PTR [rbp+0x0],ebx
  40caff:	mov    DWORD PTR [rip+0x99fb],0xffffffff        # 416504 <getopt_long_only@@Base+0x9574>
  40cb09:	mov    DWORD PTR [rip+0x99f5],0xffffffff        # 416508 <getopt_long_only@@Base+0x9578>
  40cb13:	mov    ebx,0xffffffff
  40cb18:	add    rsp,0x48
  40cb1c:	mov    eax,ebx
  40cb1e:	pop    rbx
  40cb1f:	pop    rbp
  40cb20:	pop    r12
  40cb22:	pop    r13
  40cb24:	pop    r14
  40cb26:	pop    r15
  40cb28:	ret    
  40cb29:	nop    DWORD PTR [rax+0x0]
  40cb30:	mov    rbx,0x416530
  40cb37:	mov    DWORD PTR [rax],0x1
  40cb3d:	mov    ecx,0x1
  40cb42:	mov    DWORD PTR [rbp+0x0],0x1
  40cb49:	mov    QWORD PTR [rsp+0x28],rbx
  40cb4e:	mov    QWORD PTR [rbx],0x0
  40cb55:	mov    DWORD PTR [rip+0x99a5],0xffffffff        # 416504 <getopt_long_only@@Base+0x9574>
  40cb5f:	mov    DWORD PTR [rip+0x999f],0xffffffff        # 416508 <getopt_long_only@@Base+0x9578>
  40cb69:	jmp    40c984 <Mat_VarRead@plt+0xa5e4>
  40cb6e:	xchg   ax,ax
  40cb70:	or     DWORD PTR [rsp+0x14],0x2
  40cb75:	add    QWORD PTR [rsp+0x18],0x1
  40cb7b:	jmp    40c94e <Mat_VarRead@plt+0xa5ae>
  40cb80:	mov    edi,r8d
  40cb83:	mov    rcx,r15
  40cb86:	mov    esi,eax
  40cb88:	mov    QWORD PTR [rsp+0x8],r9
  40cb8d:	mov    DWORD PTR [rsp+0x10],eax
  40cb91:	mov    DWORD PTR [rsp],r8d
  40cb95:	call   40c400 <Mat_VarRead@plt+0xa060>
  40cb9a:	mov    edx,DWORD PTR [rbp+0x0]
  40cb9d:	mov    r8d,DWORD PTR [rsp]
  40cba1:	mov    eax,DWORD PTR [rsp+0x10]
  40cba5:	mov    DWORD PTR [rip+0x9955],0xffffffff        # 416504 <getopt_long_only@@Base+0x9574>
  40cbaf:	mov    ecx,DWORD PTR [rbx]
  40cbb1:	mov    r9,QWORD PTR [rsp+0x8]
  40cbb6:	mov    edi,edx
  40cbb8:	add    edx,0x1
  40cbbb:	sub    eax,r8d
  40cbbe:	mov    DWORD PTR [rbp+0x0],edx
  40cbc1:	sub    edi,eax
  40cbc3:	mov    DWORD PTR [rip+0x993f],edi        # 416508 <getopt_long_only@@Base+0x9578>
  40cbc9:	jmp    40c9a8 <Mat_VarRead@plt+0xa608>
  40cbce:	xchg   ax,ax
  40cbd0:	mov    DWORD PTR [rip+0x9932],edx        # 416508 <getopt_long_only@@Base+0x9578>
  40cbd6:	add    edx,0x1
  40cbd9:	mov    DWORD PTR [rbp+0x0],edx
  40cbdc:	jmp    40c9ac <Mat_VarRead@plt+0xa60c>
  40cbe1:	nop    DWORD PTR [rax+0x0]
  40cbe8:	movsx  esi,BYTE PTR [rcx+0x1]
  40cbec:	test   sil,sil
  40cbef:	je     40c9e4 <Mat_VarRead@plt+0xa644>
  40cbf5:	mov    ebx,DWORD PTR [rip+0x990d]        # 416508 <getopt_long_only@@Base+0x9578>
  40cbfb:	cmp    ebx,0xffffffff
  40cbfe:	je     40cc0d <Mat_VarRead@plt+0xa86d>
  40cc00:	cmp    DWORD PTR [rip+0x98fd],0xffffffff        # 416504 <getopt_long_only@@Base+0x9574>
  40cc07:	je     40cd69 <Mat_VarRead@plt+0xa9c9>
  40cc0d:	lea    r12,[rcx+0x1]
  40cc11:	cmp    sil,0x2d
  40cc15:	mov    QWORD PTR [rip+0x98fc],r12        # 416518 <opterr@@Base+0x4>
  40cc1c:	jne    40ca35 <Mat_VarRead@plt+0xa695>
  40cc22:	cmp    BYTE PTR [rcx+0x2],0x0
  40cc26:	je     40cf2c <Mat_VarRead@plt+0xab8c>
  40cc2c:	cmp    QWORD PTR [rsp+0x20],0x0
  40cc32:	je     40cda2 <Mat_VarRead@plt+0xaa02>
  40cc38:	movsxd rax,DWORD PTR [rbp+0x0]
  40cc3c:	cmp    r12,QWORD PTR [r15+rax*8]
  40cc40:	je     40cc9b <Mat_VarRead@plt+0xa8fb>
  40cc42:	add    r12,0x1
  40cc46:	mov    DWORD PTR [rip+0x98b0],0x1        # 416500 <getopt_long_only@@Base+0x9570>
  40cc50:	xor    r8d,r8d
  40cc53:	mov    QWORD PTR [rip+0x98be],r12        # 416518 <opterr@@Base+0x4>
  40cc5a:	jmp    40ca8b <Mat_VarRead@plt+0xa6eb>
  40cc5f:	nop
  40cc60:	mov    rax,QWORD PTR [rsp+0x28]
  40cc65:	add    edx,0x1
  40cc68:	mov    ebx,0x1
  40cc6d:	mov    DWORD PTR [rbp+0x0],edx
  40cc70:	mov    QWORD PTR [rax],rcx
  40cc73:	jmp    40cb18 <Mat_VarRead@plt+0xa778>
  40cc78:	mov    eax,DWORD PTR [rip+0x988a]        # 416508 <getopt_long_only@@Base+0x9578>
  40cc7e:	cmp    eax,0xffffffff
  40cc81:	je     40caff <Mat_VarRead@plt+0xa75f>
  40cc87:	mov    DWORD PTR [rbp+0x0],eax
  40cc8a:	jmp    40caff <Mat_VarRead@plt+0xa75f>
  40cc8f:	mov    r12,QWORD PTR [rip+0x9882]        # 416518 <opterr@@Base+0x4>
  40cc96:	movzx  esi,BYTE PTR [r12]
  40cc9b:	lea    rcx,[r12+0x1]
  40cca0:	movsx  ebx,sil
  40cca4:	cmp    ebx,0x3a
  40cca7:	mov    QWORD PTR [rip+0x986a],rcx        # 416518 <opterr@@Base+0x4>
  40ccae:	je     40cd12 <Mat_VarRead@plt+0xa972>
  40ccb0:	cmp    ebx,0x2d
  40ccb3:	je     40cdad <Mat_VarRead@plt+0xaa0d>
  40ccb9:	mov    rdi,QWORD PTR [rsp+0x18]
  40ccbe:	mov    esi,ebx
  40ccc0:	mov    QWORD PTR [rsp],rcx
  40ccc4:	call   402160 <strchr@plt>
  40ccc9:	test   rax,rax
  40cccc:	mov    rcx,QWORD PTR [rsp]
  40ccd0:	je     40cd12 <Mat_VarRead@plt+0xa972>
  40ccd2:	cmp    QWORD PTR [rsp+0x20],0x0
  40ccd8:	je     40cd99 <Mat_VarRead@plt+0xa9f9>
  40ccde:	cmp    ebx,0x57
  40cce1:	jne    40cd99 <Mat_VarRead@plt+0xa9f9>
  40cce7:	movzx  edx,BYTE PTR [rax+0x1]
  40cceb:	cmp    dl,0x3b
  40ccee:	je     40cdf6 <Mat_VarRead@plt+0xaa56>
  40ccf4:	cmp    dl,0x3a
  40ccf7:	je     40cdbf <Mat_VarRead@plt+0xaa1f>
  40ccfd:	cmp    BYTE PTR [r12+0x1],0x0
  40cd03:	jne    40cb18 <Mat_VarRead@plt+0xa778>
  40cd09:	add    DWORD PTR [rbp+0x0],0x1
  40cd0d:	jmp    40cb18 <Mat_VarRead@plt+0xa778>
  40cd12:	cmp    BYTE PTR [r12+0x1],0x0
  40cd18:	jne    40cd1e <Mat_VarRead@plt+0xa97e>
  40cd1a:	add    DWORD PTR [rbp+0x0],0x1
  40cd1e:	mov    rax,0x416514
  40cd25:	mov    ecx,DWORD PTR [rax]
  40cd27:	test   ecx,ecx
  40cd29:	je     40cd56 <Mat_VarRead@plt+0xa9b6>
  40cd2b:	mov    rax,QWORD PTR [rsp+0x18]
  40cd30:	cmp    BYTE PTR [rax],0x3a
  40cd33:	je     40cd56 <Mat_VarRead@plt+0xa9b6>
  40cd35:	cmp    QWORD PTR [rsp+0x38],0x0
  40cd3b:	lea    rax,[rip+0x5e0e]        # 412b50 <getopt_long_only@@Base+0x5bc0>
  40cd42:	lea    rdi,[rip+0x5de7]        # 412b30 <getopt_long_only@@Base+0x5ba0>
  40cd49:	mov    esi,ebx
  40cd4b:	cmovne rdi,rax
  40cd4f:	xor    eax,eax
  40cd51:	call   402170 <warnx@plt>
  40cd56:	mov    rax,0x41650c
  40cd5d:	mov    DWORD PTR [rax],ebx
  40cd5f:	mov    ebx,0x3f
  40cd64:	jmp    40cb18 <Mat_VarRead@plt+0xa778>
  40cd69:	mov    DWORD PTR [rip+0x9795],edx        # 416504 <getopt_long_only@@Base+0x9574>
  40cd6f:	jmp    40cc0d <Mat_VarRead@plt+0xa86d>
  40cd74:	mov    rdi,QWORD PTR [rsp+0x18]
  40cd79:	mov    esi,0x2d
  40cd7e:	mov    QWORD PTR [rsp],rcx
  40cd82:	call   402160 <strchr@plt>
  40cd87:	test   rax,rax
  40cd8a:	je     40cb13 <Mat_VarRead@plt+0xa773>
  40cd90:	mov    rcx,QWORD PTR [rsp]
  40cd94:	mov    ebx,0x2d
  40cd99:	movzx  edx,BYTE PTR [rax+0x1]
  40cd9d:	jmp    40ccf4 <Mat_VarRead@plt+0xa954>
  40cda2:	add    rcx,0x2
  40cda6:	mov    QWORD PTR [rip+0x976b],rcx        # 416518 <opterr@@Base+0x4>
  40cdad:	cmp    BYTE PTR [r12+0x1],0x0
  40cdb3:	je     40cd74 <Mat_VarRead@plt+0xa9d4>
  40cdb5:	mov    ebx,0x2d
  40cdba:	jmp    40cd1e <Mat_VarRead@plt+0xa97e>
  40cdbf:	mov    rdi,QWORD PTR [rsp+0x28]
  40cdc4:	mov    QWORD PTR [rdi],0x0
  40cdcb:	cmp    BYTE PTR [r12+0x1],0x0
  40cdd1:	je     40ce6d <Mat_VarRead@plt+0xaacd>
  40cdd7:	mov    eax,DWORD PTR [rbp+0x0]
  40cdda:	mov    QWORD PTR [rdi],rcx
  40cddd:	lea    rdi,[rip+0x1309]        # 40e0ed <getopt_long_only@@Base+0x115d>
  40cde4:	add    eax,0x1
  40cde7:	mov    DWORD PTR [rbp+0x0],eax
  40cdea:	mov    QWORD PTR [rip+0x9727],rdi        # 416518 <opterr@@Base+0x4>
  40cdf1:	jmp    40cb18 <Mat_VarRead@plt+0xa778>
  40cdf6:	cmp    BYTE PTR [r12+0x1],0x0
  40cdfc:	jne    40cee8 <Mat_VarRead@plt+0xab48>
  40ce02:	mov    eax,DWORD PTR [rbp+0x0]
  40ce05:	add    eax,0x1
  40ce08:	cmp    r13d,eax
  40ce0b:	mov    DWORD PTR [rbp+0x0],eax
  40ce0e:	jg     40cedb <Mat_VarRead@plt+0xab3b>
  40ce14:	lea    rax,[rip+0x12d2]        # 40e0ed <getopt_long_only@@Base+0x115d>
  40ce1b:	mov    QWORD PTR [rip+0x96f6],rax        # 416518 <opterr@@Base+0x4>
  40ce22:	mov    rax,0x416514
  40ce29:	mov    edx,DWORD PTR [rax]
  40ce2b:	test   edx,edx
  40ce2d:	je     40ce4c <Mat_VarRead@plt+0xaaac>
  40ce2f:	mov    rax,QWORD PTR [rsp+0x18]
  40ce34:	cmp    BYTE PTR [rax],0x3a
  40ce37:	je     40ce4c <Mat_VarRead@plt+0xaaac>
  40ce39:	lea    rdi,[rip+0x5d40]        # 412b80 <getopt_long_only@@Base+0x5bf0>
  40ce40:	mov    esi,0x57
  40ce45:	xor    eax,eax
  40ce47:	call   402170 <warnx@plt>
  40ce4c:	mov    rax,0x41650c
  40ce53:	mov    DWORD PTR [rax],0x57
  40ce59:	mov    rax,QWORD PTR [rsp+0x18]
  40ce5e:	cmp    BYTE PTR [rax],0x3a
  40ce61:	je     40ced1 <Mat_VarRead@plt+0xab31>
  40ce63:	mov    ebx,0x3f
  40ce68:	jmp    40cb18 <Mat_VarRead@plt+0xa778>
  40ce6d:	cmp    BYTE PTR [rax+0x2],0x3a
  40ce71:	mov    eax,DWORD PTR [rbp+0x0]
  40ce74:	je     40cddd <Mat_VarRead@plt+0xaa3d>
  40ce7a:	add    eax,0x1
  40ce7d:	cmp    r13d,eax
  40ce80:	mov    DWORD PTR [rbp+0x0],eax
  40ce83:	jg     40cf18 <Mat_VarRead@plt+0xab78>
  40ce89:	lea    rax,[rip+0x125d]        # 40e0ed <getopt_long_only@@Base+0x115d>
  40ce90:	mov    QWORD PTR [rip+0x9681],rax        # 416518 <opterr@@Base+0x4>
  40ce97:	mov    rax,0x416514
  40ce9e:	mov    eax,DWORD PTR [rax]
  40cea0:	test   eax,eax
  40cea2:	je     40cebe <Mat_VarRead@plt+0xab1e>
  40cea4:	mov    rax,QWORD PTR [rsp+0x18]
  40cea9:	cmp    BYTE PTR [rax],0x3a
  40ceac:	je     40cebe <Mat_VarRead@plt+0xab1e>
  40ceae:	lea    rdi,[rip+0x5ccb]        # 412b80 <getopt_long_only@@Base+0x5bf0>
  40ceb5:	mov    esi,ebx
  40ceb7:	xor    eax,eax
  40ceb9:	call   402170 <warnx@plt>
  40cebe:	mov    rax,0x41650c
  40cec5:	mov    DWORD PTR [rax],ebx
  40cec7:	mov    rax,QWORD PTR [rsp+0x18]
  40cecc:	cmp    BYTE PTR [rax],0x3a
  40cecf:	jne    40ce63 <Mat_VarRead@plt+0xaac3>
  40ced1:	mov    ebx,0x3a
  40ced6:	jmp    40cb18 <Mat_VarRead@plt+0xa778>
  40cedb:	cdqe   
  40cedd:	mov    rax,QWORD PTR [r15+rax*8]
  40cee1:	mov    QWORD PTR [rip+0x9630],rax        # 416518 <opterr@@Base+0x4>
  40cee8:	mov    r9d,DWORD PTR [rsp+0x14]
  40ceed:	mov    rcx,QWORD PTR [rsp+0x30]
  40cef2:	xor    r8d,r8d
  40cef5:	mov    rdx,QWORD PTR [rsp+0x20]
  40cefa:	mov    rsi,QWORD PTR [rsp+0x18]
  40ceff:	mov    rdi,r15
  40cf02:	mov    DWORD PTR [rip+0x95f4],0x2        # 416500 <getopt_long_only@@Base+0x9570>
  40cf0c:	call   40c4b0 <Mat_VarRead@plt+0xa110>
  40cf11:	mov    ebx,eax
  40cf13:	jmp    40cab2 <Mat_VarRead@plt+0xa712>
  40cf18:	movsxd rdx,eax
  40cf1b:	mov    rdi,QWORD PTR [rsp+0x28]
  40cf20:	mov    rdx,QWORD PTR [r15+rdx*8]
  40cf24:	mov    QWORD PTR [rdi],rdx
  40cf27:	jmp    40cddd <Mat_VarRead@plt+0xaa3d>
  40cf2c:	mov    r12d,DWORD PTR [rip+0x95d1]        # 416504 <getopt_long_only@@Base+0x9574>
  40cf33:	lea    rax,[rip+0x11b3]        # 40e0ed <getopt_long_only@@Base+0x115d>
  40cf3a:	add    edx,0x1
  40cf3d:	mov    DWORD PTR [rbp+0x0],edx
  40cf40:	mov    QWORD PTR [rip+0x95d1],rax        # 416518 <opterr@@Base+0x4>
  40cf47:	cmp    r12d,0xffffffff
  40cf4b:	je     40caff <Mat_VarRead@plt+0xa75f>
  40cf51:	mov    rcx,r15
  40cf54:	mov    esi,r12d
  40cf57:	mov    edi,ebx
  40cf59:	call   40c400 <Mat_VarRead@plt+0xa060>
  40cf5e:	mov    eax,DWORD PTR [rbp+0x0]
  40cf61:	add    eax,ebx
  40cf63:	sub    eax,r12d
  40cf66:	mov    DWORD PTR [rbp+0x0],eax
  40cf69:	jmp    40caff <Mat_VarRead@plt+0xa75f>
  40cf6e:	xchg   ax,ax

000000000040cf70 <getopt@@Base>:
  40cf70:	xor    r9d,r9d
  40cf73:	xor    r8d,r8d
  40cf76:	xor    ecx,ecx
  40cf78:	jmp    40c8e0 <Mat_VarRead@plt+0xa540>
  40cf7d:	nop    DWORD PTR [rax]

000000000040cf80 <getopt_long@@Base>:
  40cf80:	mov    r9d,0x1
  40cf86:	jmp    40c8e0 <Mat_VarRead@plt+0xa540>
  40cf8b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040cf90 <getopt_long_only@@Base>:
  40cf90:	mov    r9d,0x5
  40cf96:	jmp    40c8e0 <Mat_VarRead@plt+0xa540>
  40cf9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cfa0:	endbr64 
  40cfa4:	push   r15
  40cfa6:	lea    r15,[rip+0x7e3b]        # 414de8 <getopt_long_only@@Base+0x7e58>
  40cfad:	push   r14
  40cfaf:	mov    r14,rdx
  40cfb2:	push   r13
  40cfb4:	mov    r13,rsi
  40cfb7:	push   r12
  40cfb9:	mov    r12d,edi
  40cfbc:	push   rbp
  40cfbd:	lea    rbp,[rip+0x7e2c]        # 414df0 <getopt_long_only@@Base+0x7e60>
  40cfc4:	push   rbx
  40cfc5:	sub    rbp,r15
  40cfc8:	sub    rsp,0x8
  40cfcc:	call   402000 <Mat_VarGetNumberOfFields@plt-0x30>
  40cfd1:	sar    rbp,0x3
  40cfd5:	je     40cff6 <getopt_long_only@@Base+0x66>
  40cfd7:	xor    ebx,ebx
  40cfd9:	nop    DWORD PTR [rax+0x0]
  40cfe0:	mov    rdx,r14
  40cfe3:	mov    rsi,r13
  40cfe6:	mov    edi,r12d
  40cfe9:	call   QWORD PTR [r15+rbx*8]
  40cfed:	add    rbx,0x1
  40cff1:	cmp    rbp,rbx
  40cff4:	jne    40cfe0 <getopt_long_only@@Base+0x50>
  40cff6:	add    rsp,0x8
  40cffa:	pop    rbx
  40cffb:	pop    rbp
  40cffc:	pop    r12
  40cffe:	pop    r13
  40d000:	pop    r14
  40d002:	pop    r15
  40d004:	ret    
  40d005:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d010:	endbr64 
  40d014:	ret    

Disassembly of section .fini:

000000000040d018 <.fini>:
  40d018:	endbr64 
  40d01c:	sub    rsp,0x8
  40d020:	add    rsp,0x8
  40d024:	ret    
